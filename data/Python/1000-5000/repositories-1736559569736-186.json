{
  "metadata": {
    "timestamp": 1736559569736,
    "page": 186,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "astropy/astropy",
      "stars": 4531,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".astropy-root",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 1.0986328125,
          "content": "[flake8]\nmax-line-length = 88\nselect = E,F,W\nexclude = extern,*parsetab.py,*lextab.py\nextend-ignore = E203,E501,E711,E721,E731,E741,F403,F841,W5\nper-file-ignores =\n    __init__.py:F401,F403,E402\n    test_*.py:E402\n    astropy/io/fits/card.py:E131\n    astropy/io/registry/compat.py:F822\n    astropy/convolution/convolve.py:E241\n    astropy/modeling/functional_models.py:E226,E241\n    astropy/modeling/models.py:F401,F403,F405\n    astropy/modeling/tests/test_constraints.py:E241\n    astropy/stats/tests/test_histogram.py:E241\n    astropy/stats/tests/test_sigma_clipping.py:E126,E131,E241\n    astropy/units/__init__.py:F401,F821\n    astropy/units/astrophys.py:F821\n    astropy/units/cgs.py:F821\n    astropy/units/imperial.py:F821\n    astropy/units/misc.py:F821\n    astropy/units/photometric.py:F821\n    astropy/units/si.py:F821\n    astropy/units/tests/test_quantity_decorator.py:F821\n    astropy/units/tests/test_quantity_typing.py:F821\n    astropy/wcs/wcs.py:F821\n    astropy/wcs/wcsapi/fitswcs.py:F821\n    astropy/wcs/wcsapi/utils.py:E127,E128\n    docs/conf.py:F401\n    examples/*.py:E1,E2,E402\n    */examples/*.py:E1,E2,E402\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 1.7294921875,
          "content": "# Commits to ignore in blame:\n# black for astropy.config\n5a4c5fcb00bf917c4bbe3c342b66177cf6cb3c75\n# black for astropy.constants\ne789729540438eb891ae83ef1a39171f7a4c007a\n# black for astropy.convolution\n9d4adb8a5ab74a8c85e0d4b41e65bb78ee19aedb\n# black for astropy.coordinates\nfbbc0cb370d033722fef7f501b6aed4b500812d0\n# black for astropy.cosmology\n420686db541271e8a20ad15e3a2b68bf30655889\n# black for astropy.io.ascii\n6e80e68e817fd629e04e80b45478052b6a4a3c4a\n# black for astropy.io.fits\n6750c7f86129858b92d83b0086c3b99b9470bf8b\n# black for astropy.io.misc\n128fe2873f25581feda0c2d726181b093bdc306a\n# black for atropy.io.votable\n7ca4c9e44e762e258b3c455bdfca793b83a93802\n# black for other astropy.io\n2e948e310fa2882ef3fd483b130297e3c692481f\n# black for astropy.modeling\nd8f7f53c7342e4e40c1a76351a3befa1f9b2f2db\n# black for astropy.nddata\na7cb990203a9d2093fa81bbbbd4ac0f763f6da6b\n# black for astropy.samp\n3c9c91ae593cad2f669d65bf3e67accc5c49333c\n# black for astropy.stats\necfab5a9f56d5f5724f30a6dabe580960136e4c6\n# black for astropy.table\n1403108bcd07341657e41d47c99abad373f27644\n# black for astropy.tests\n369402b47317f4752e3dadaa136a1f8ccce74a2e\n# black for astropy.time\nfa2df9f32e5c041d74f7d1ef3d5a188c521cbc79\n# black for astropy.timeseries\n059495d362003d3f88c1e7456bfe56693c958e10\n# black for astropy.uncertainty\n58470fa36befa7efd1e37bbc7374859d7c22223a\n# black for astropy.units\n53ba687f90131a7b5a578af32b376b8fac04863a\n# black for astropy.utils\n0630d6acf23aab2ef338b35f9a5130ee592e7aa5\n# black for astropy.visualization\n1265c1a9970d467c9372f9143b8cb0a1d37facf1\n# black for astropy.wcs\n5bf365bd9638f3c335963745b46246fabe428a0f\n# black for other parts of astropy\nd2165fa02c1a2d79f4a6cb69a5cebeee0b073033\n# DOC: Moved dev docs around\nf5a1738f32d4920ac853c7c0ec6c941ccec47555\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.072265625,
          "content": "*.fits    -text\nastropy/io/fits/tiled_compression/tests/data/*fits binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2578125,
          "content": "# Compiled files\n*.py[cod]\n*.a\n*.o\n*.so\n*.pyd\n*.dll\n__pycache__\n\n# Ignore .c files by default to avoid including generated code. If you want to\n# add a non-generated .c extension, put that into the src/ subdirectory of a\n# package or else use `git add -f filename.c`.\n*.c\n!astropy/*/src/*.c\n!astropy/timeseries/periodograms/bls/bls.c\nastropy/modeling/src/projections.c\n\n# Other generated files\nMANIFEST\nastropy/cython_version.py\nastropy/wcs/include/wcsconfig.h\nastropy/_version.py\n\n# Sphinx\n_build\n_generated\ndocs/api\ndocs/generated\ndocs/visualization/ngc6976*.jpeg\ndocs/sg_execution_times.rst\n\n# Packages/installer info\n*.egg\n*.egg-info\ndist\nbuild\neggs\n.eggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\ndistribute-*.tar.gz\n.venv\nvenv\n# we are not currently using pipenv directly, but people who\n# install astropy with pipenv will have these files generated\nPipfile\nPipfile.lock\n\n# pyinstaller files\n.pyinstaller/astropy_tests/\n.pyinstaller/run_astropy_tests\n.pyinstaller/run_astropy_tests.spec\n\n\n# Other\n.cache\n.tox\n.*.swp\n.*.swo\n*~\n.project\n.pydevproject\n.settings\n.coverage\ncover\nhtmlcov\n.hypothesis\n.github_cache\n\n# Mac OSX\n.DS_Store\n\n# PyCharm\n.idea\n\n# Pytest\nv\n.pytest_cache\n\n# VSCode\n.vscode\n.history\n\n.tmp\npip-wheel-metadata\n\n# Files generated if figure tests are run\nresults\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 24.0869140625,
          "content": "Aarya Patil                  <aaryapatil1996@gmail.com>\nAarya Patil                  <aaryapatil1996@gmail.com> <root@aaryas-MacBook-Pro.local>\nAdam Ginsburg                <keflavich@gmail.com>\nAdam Ginsburg                <keflavich@gmail.com> <adam.g.ginsburg@gmail.com>\nAdam Ginsburg                <keflavich@gmail.com> <keflavich@yahoo.com>\nAdele Plunkett               <aplunket@eso.org>\nAdrian Price-Whelan          <adrian.prw@gmail.com>\nAdrian Price-Whelan          <adrian.prw@gmail.com> <adrianmpw@gmail.com>\nAkshat Dixit <akshat.dixit71@gmail.com> Akshat1Nar <akshat.dixit71@gmail.com>\nAlbert Y. Shih               <ayshih@gmail.com>\nAleh Khvalko                 <algerdnazgul@gmail.com>\nAleksi Suutarinen            <aleksi.suutarinen@iki.fi> <aleksi.suutarinen@gmail.com>\nAlex Conley                  <alexander.conley@colorado.edu>\nAlex Conley                  <alexander.conley@colorado.edu> <alexanderconley@gmail.com>\nAlex Hagen                   <mr.alex.hagen@gmail.com>\nAlex Rudy                    <alex.rudy@gmail.com>\nAlexander Bakanov            <bakanov.aleksandr@gmail.com>  <aleksandr_bakanov@epam.com>\nAlexandre Beelen             <alexandre.beelen@ias.u-psud.fr>\nAlexandre Beelen             <alexandre.beelen@ias.u-psud.fr> <alexandre.beelen@lam.fr>\nAmit Kumar                   <dtu.amit@gmail.com>\nAna Posses                   <anaposses@gmail.com>\nAnany Shrey Jain             <ananyashreyjain1998@gmail.com>  <31594632+ananyashreyjain@users.noreply.github.com>\nAndreas Faisst               <afaisst@ipac.caltech.edu> <anfaisst@gmail.com>\nAndy Casey                   <andycasey@gmail.com>\nAniket Kulkarni              <kaniket21@gmail.com>\nAniket Sanghi                <asanghi01@gmail.com>\nAnirudh Katipally            <akatipally@abiomed.com>\nAnne Archibald               <peridot.faceted@gmail.com> <archibald@astron.nl>\nAnne Archibald               <peridot.faceted@gmail.com> <anne.archibald@ncl.ac.uk>\nAnthony Horton               <anthony.horton@aao.gov.au>\nAsish Panda                  <asishrocks95@gmail.com>\nAsra Nizami                  <anizami@macalester.edu> <anizami@itsd-summer18.local>\nAsra Nizami                  <anizami@macalester.edu> <anizami@itsd-summer18.stsci.edu>\nAusten Groener               <Austen.Groener@gmail.com> <amg338@drexel.edu>\nAusten Groener               <Austen.Groener@gmail.com> <rocketboyausten@gmail.com>\nAxel Donath                  <axel.donath@mpi-hd.mpg.de>\nAxel Donath                  <axel.donath@mpi-hd.mpg.de> <donath@stud.uni-heidelberg.de>\nBenjamin Alan Weaver         <benjamin.weaver@noirlab.edu> <weaver@noao.edu>\nBenjamin Alan Weaver         <benjamin.weaver@noirlab.edu> <baweaver@lbl.gov>\nBenjamin Alan Weaver         <benjamin.weaver@noirlab.edu> <benjamin.weaver@nyu.edu>\nBenjamin Roulston            <benjamin.roulston@protonmail.com>\nBenjamin Winkel              <bwinkel@mpifr.de>  <bwinkel78@gmail.com>\nBhavya Khandelwal            <khandelwalbhavya7@gmail.com>\nBogdan Nicula                <bogdan@nicula.net>\nBrett Graham                 <brettgraham@gmail.com>\nBrett Morris                 <brettmorris21@gmail.com>\nBrett Morris                 <brettmorris21@gmail.com> <bmmorris@uw.edu>\nBrett Morris                 <brettmorris21@gmail.com> <morrisbrettm@gmail.com>\nBrett Morris <brettmorris21@gmail.com> Brett M. Morris <bmmorris@stsci.edu>\nBrian Soto                   <iambriansoto@gmail.com>\nBrian Svoboda                <bones253@gmail.com> <bsvo@lavabit.com>\nBrigitta Sipőcz              <bsipocz@gmail.com>\nBrigitta Sipőcz              <bsipocz@gmail.com> <b.sipocz@gmail.com>\nBrigitta Sipőcz              <bsipocz@gmail.com> <bsipocz@users.noreply.github.com>\nBruce Merry                  <bmerry@ska.ac.za>\nBruce Merry                  <bmerry@ska.ac.za> <bmerry@gmail.com>\nBryce Nordgren               <bnordgren@gmail.com>\nChiara Marmo                 <marmochiaskl@gmail.com>\nChiara Marmo                 <marmochiaskl@gmail.com> <chiara.marmo@u-psud.fr>\nChiara Marmo                 <marmochiaskl@gmail.com> <cmarmo@users.noreply.github.com>\nChiara Marmo                 <marmochiaskl@gmail.com> <marmochia.oudeis@proton.me>\nChris Osborne                <2087801o@student.gla.ac.uk>\nChris Simpson                <csimpson@gemini.edu>\nChristian Clauss             <cclauss@bluewin.ch>\nChristoph Gohlke             <cgohlke@uci.edu>\nChristopher Bonnett          <c.bonnett@gmail.com>\nClara Brasseur               <cbrasseur@stsci.edu>\nClément Robert               <cr52@protonmail.com>\nClément Robert               <cr52@protonmail.com> <clement.robert@oca.eu>\nCraig Jones                  <craig@brechmos.org>\nCraig Jones                  <craig@brechmos.org> <crjones@stsci.edu>\nCurtis McCully               <cmccully@lcogt.net>\nDan Foreman-Mackey           <foreman.mackey@gmail.com>\nDan Foreman-Mackey           <foreman.mackey@gmail.com>  <danfm@nyu.edu>\nDan P. Cunningham            <dan.p.cunningham@gmail.com>\nDan Taranu                   <dtaranu@astro.princeton.edu>\nDaniel Bell                  <stampsrule@gmail.com>\nDaniel Bell                  <stampsrule@gmail.com> <idaniel@me.com>\nDaniel D'Avella              <ddavella@stsci.edu>\nDaniel D'Avella              <ddavella@stsci.edu> <drdavella@gmail.com>\nDaniel Datsev                <dan.datsev@gmail.com>\nDaniel Datsev                <dan.datsev@gmail.com> <fabled@vortex.(none)>\nDaniel Lenz                  <dlenz.bonn@gmail.com>\nDaniel Ryan <ryand5@tcd.ie> Dan Ryan <ryand5@tcd.ie>\nDaniel Ryan <ryand5@tcd.ie> DanRyanIrish <ryand5@tcd.ie>\nDaria Cara                   <daria.cara.2@gmail.com>\nDaria Cara                   <daria.cara.2@gmail.com> <36781821+daria-cara@users.noreply.github.com>\nDavid Collom                 <dmcollom@gmail.com> <david.m.collom@gmail.com>\nDavid Collom                 <dmcollom@gmail.com> <dcollom@dcollom-linux.lco.gtn>\nDavid Collom                 <dmcollom@gmail.com> <dcollom@lco.global>\nDavid Collom                 <dmcollom@gmail.com> <dcollom@localhost.localdomain>\nDavid Grant                  <david.grant@physics.ox.ac.uk> <33813984+DavoGrant@users.noreply.github.com>\nDavid Kirkby                 <dkirkby@uci.edu>\nDavid Pérez-Suárez           <dps.helio@gmail.com>\nDavid Shupe                  <shupe@ipac.caltech.edu> <dave.shupe@gmail.com>\nDeen-Dot                     <calcifer2701@gmail.com> Deen-dot <wdee0001@student.monash.edu>\nDeen-Dot                     <calcifer2701@gmail.com> Deen-dot <80238871+Deen-dot@users.noreply.github.com>\nDemitri Muna                 <demitri.muna@gmail.com> <beswiftly@gmail.com>\nDemitri Muna                 <demitri.muna@gmail.com> <demitri@me.com>\nDemitri Muna                 <demitri.muna@gmail.com> <github@demitri.com>\nDerek Homeier                <dhomeie@gwdg.de> <derek.homeier@ens-lyon.fr>\nDerek Homeier                <dhomeie@gwdg.de> <dhomeier@users.noreply.github.com>\nDerek Homeier                <dhomeie@gwdg.de> <709020+dhomeier@users.noreply.github.com>\nDiego Asterio de Zaballa     <diegoasterio@correo.ugr.es>\nDouglas Burke                <dburke.gw@gmail.com>\nDylan Gregersen              <gregersen.dylan@gmail.com>\nEdward Gomez                 <edward@gomez.me.uk>\nEdward Slavich <eslavich@users.noreply.github.com> Ed Slavich <eslavich@stsci.edu>\nEduardo Olinto               <90293761+olintoeduardo@users.noreply.github.com>\nEero Vaher                   <eero.vaher@fysik.lu.se> <eero.vaher@astro.lu.se>\nElijah Bernstein-Cooper      <e.bernsteincooper@gmail.com> <ezbc@astro.wisc.edu>\nEmily Deibert                <emilydeibert@gmail.com>\nEmma Hogan                   <ehogan@gemini.edu>\nEric Depagne                 <eric@depagne.org>\nEric Koch                    <koch.eric.w@gmail.com> <koch.eric.w@gmail.com>\nE. Madison Bray              <erik.m.bray@gmail.com>\nE. Madison Bray              <erik.m.bray@gmail.com> <embray@stsci.edu>\nE. Madison Bray              <erik.m.bray@gmail.com> <erik.bray@lri.fr>\nE. Rykoff                    <erykoff@stanford.edu>\nEmir Karamehmetoglu          <emir.k@phys.au.dk>\nEmir Karamehmetoglu <emir.k@phys.au.dk> Emir <ek2660@gmail.com>\nEsteban Pardo Sánchez        <stbnps@users.noreply.github.com>\nFrancesco Montesano          <franz.bergesund@gmail.com>\nGabriel Brammer <gbrammer@gmail.com> Gabriel Brammer <brammer@stsci.edu>\nGabriel Brammer <gbrammer@gmail.com> Gabe Brammer <gbrammer@gmail.com>\nGabriel Perren               <gabrielperren@gmail.com>\nGabriel Perren               <gabrielperren@gmail.com> <Gabriel-p@users.noreply.github.com>\nGeert Barentsen              <geert@barentsen.be> <hello@geert.io>\nGeorge Galvin                <george.galvin1996@gmail.com>\nGerrit Schellenberger        <gerrit@uni-bonn.de>\nGiorgio Calderone            <giorgio.calderone@gmail.com> <gcalderone@users.noreply.github.com>\nGraham Kanarek               <graykanarek@gmail.com>\nGuillaume Pernot             <gpernot@praksys.org>\nGuillaume Pernot             <gpernot@praksys.org> <guillaume.pernot@lam.fr>\nGustavo Bragança             <ga.braganca@gmail.com>\nHannes Breytenbach           <hannes@saao.ac.za>\nHans Moritz Günther          <moritz.guenther@gmx.de>\nHans Moritz Günther          <moritz.guenther@gmx.de> <hgunther@mit.edu>\nHarry Ferguson               <ferguson@stsci.edu>\nHenrik Norman                <Honke.norman@gmail.com> <hnorma@kth.se>\nHenrik Norman                <Honke.norman@gmail.com> <honke.norman@gmail.com>\nHenry Schreiner              <HenrySchreinerIII@gmail.com> <henryschreineriii@gmail.com>\nHélvio Peixoto               <hfcpeixoto@gmail.com> <hfcpeixoto@ds4data.com>\nHimanshu Pathak              <hpathak336@gmail.com>\nHumna Awan                   <humna.awan@rutgers.edu>\nIvo Busko                    <busko@stsci.edu>\nIvo Busko                    <busko@stsci.edu> <New1trilha>\nJaime Andrés                 <jaime-andres.alvarado-montes@students.mq.edu.au>\nJake VanderPlas              <jakevdp@gmail.com>\nJake VanderPlas              <jakevdp@gmail.com> <jakevdp@google.com>\nJake VanderPlas              <jakevdp@gmail.com> <jakevdp@uw.edu>\nJames Davies                 <jdavies@mpia.de> <jdavies@stsci.edu>\nJames McCormac               <jmccormac001@gmail.com>\nJames Tocknell               <aragilar@gmail.com>\nJames Tocknell               <aragilar@gmail.com> <aragilar+github@gmail.com>\nJames Turner                 <jturner@gemini.edu>\nJane Rigby                   <jane.rigby@gmail.com>\nJani Šumak                   <jani.sumak@gmail.com>\nJason Segnini                <47617351+JasonS09@users.noreply.github.com>\nJavier Blasco                <atreo1@hotmail.com>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@dhcp-10-66-197-109.esac.esa.int>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@dhcp-10-66-197-144.esac.esa.int>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@dhcp-10-66-197-161.esac.esa.int>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@dhcp-10-66-197-218.esac.esa.int>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@dhcp-10-66-197-221.esac.esa.int>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@dhcp-10-66-197-53.esac.esa.int>\nJavier Duran                 <javier.duran@sciops.esa.int> <jduran@sciops.esa.int>\nJavier Pascual Granado       <javier@iaa.es>\nJeff Jennings                <jjennings@flatironinstitute.org> <jjennings1519@gmail.com>\nJeff Taylor                  <jeff.c.taylor@gmail.com>\nJennifer Karr                <karr@l-145-118-237-197.leidenuniv.nl>\nJero Bado                    <programmer@jerobado.com> <tokidokitalkyou@gmail.com>\nJero Bado                    <programmer@jerobado.com> <10357742+jerobado@users.noreply.github.com>\nJo Bovy                      <bovy@astro.utoronto.ca> <jo.bovy@gmail.com>\nJoe Hunkeler                 <jhunk@stsci.edu> <jhunkeler@gmail.com>\nJohannes Zeman               <johannes.zeman@googlemail.com> <zeman@icp.uni-stuttgart.de>\nJohn Parejko                 <parejkoj@uw.edu>\nJohn Parejko                 <parejkoj@uw.edu> <parejkoj@gmail.com>\nJohnny Greco                 <jgreco@astro.princeton.edu>\nJohnny Greco                 <jgreco@astro.princeton.edu>  <jgreco.astro@gmail.com>\nJonathan Foster              <jonathan.bruce.foster@gmail.com>\nJonathan Foster              <jonathan.bruce.foster@gmail.com>  <jonathan.b.foster@yale.edu>\nJonathan Gagne               <jonathan.gagne.1@gmail.com>\nJordan Mirocha               <mirochaj@gmail.com> <mirocha@rl1-140-39-dhcp.int.colorado.edu>\nJoseph Long                  <josephoenix@gmail.com> <jlong@stsci.edu>\nJoseph Long                  <josephoenix@gmail.com> <me@joseph-long.com>\nJoseph Schlitz               <jrschlitz0725@gmail.com>\nJuan Carlos Segovia          <juancarlos.segovia@gmail.com>\nJuan Luis Cano Rodríguez     <juanlu001@gmail.com>  <Juanlu001@users.noreply.github.com>\nJuan Luis Cano Rodríguez     <juanlu001@gmail.com>  <juanlu@satellogic.com>\nJuan Luis Cano Rodríguez     <juanlu001@gmail.com>  <jcano@faculty.ie.edu>\nJuan Luis Cano Rodríguez     <juanlu001@gmail.com>  <hello@juanlu.space>\nJulien Woillez               <jwoillez@gmail.com> <jwoillez@eso.org>\nJulien Woillez               <jwoillez@gmail.com> <jwoillez@gmail.org>\nJurien Huisman               <huisman@strw.leidenuniv.nl>\nKacper Kowalik               <xarthisius.kk@gmail.com>\nKacper Kowalik               <xarthisius.kk@gmail.com> <xarthisius@gentoo.org>\nKaran Grover                 <karan@karan-HP-Pavilion-dm4-Notebook-PC.(none)>\nKarl Gordon                  <kgordon@stsci.edu> Karl D. Gordon <kgordon@stsci.edu>\nKarl Vyhmeister              <kvyh@users.noreply.github.com>\nKelle Cruz                   <kellecruz@gmail.com>\nKevin Gullikson              <kevin.gullikson@gmail.com>\nKirill Tchernyshyov          <ktchernyshyov@pha.jhu.edu>\nKris Stern                   <krisastern@gmail.com> <kakirastern@users.noreply.github.com>\nKris Stern                   <krisastern@gmail.com> <krisastern@gobuddy.asia>\nKunam Balaram Reddy          <webbdays@gmail.com>\nKyle Barbary                 <kylebarbary@gmail.com> <kbarbary@lbl.gov>\nKyle Oman                    <koman@astro.rug.nl>\nLarry Bradley                <larry.bradley@gmail.com>\nLarry Bradley                <larry.bradley@gmail.com> <larrybradley@users.noreply.github.com>\nLaura Watkins                <lauralwatkins@gmail.com>\nLauren Glattly               <laurenglattly@gmail.com> <44421608+lglattly@users.noreply.github.com>\nLennard Kiehl                <luzuku@gmail.com>\nLeo Singer                   <leo.singer@ligo.org> <leo.singer@nasa.gov>\nLeonardo Ferreira            <leonardo.ferreira.furg@gmail.com> <[leonardo.ferreira.furg@gmail.com]>\nLia Corrales                 <liac@umich.edu>\nLingyi Hu                    <hulingyi1995@yahoo.com.sg>\nLisa Martin                  <48742903+lisamartin72@users.noreply.github.com>\nLisa Walter                  <lisa@stsci.edu>\nLoïc Séguin-C                <loicseguin@gmail.com> <lsc@loicseguin.com>\nLuke G. Bouma                <lgbouma@users.noreply.github.com>\nLuke Kelley                  <lkelley@cfa.harvard.edu>\nLuz Paz                      <luzpaz@users.noreply.github.com> luz paz <luzpaz@users.noreply.github.com>\nMaximilian Linhoff           <maximilian.linhoff@tu-dortmund.de> Maximilian Nöthe <maximilian.noethe@tu-dortmund.de>\nMadhura Parikh               <madhuraparikh@gmail.com>\nMagali Mebsout               <magalimebsout@gmail.com>\nMagnus Persson               <vilhelmp@gmail.com>\nManeesh Yadav                <maneesh.yadav@sri.com>\nMangala Gowri Krishnamoorthy <mangalagb@gmail.com>\nManon Marchand               <manonmarchand22@gmail.com>\nMarcello Nascif              <marcellobnf@gmail.com> <118627858+marcellonascif@users.noreply.github.com>\nMarten van Kerkwijk          <mhvk@astro.utoronto.ca> <mhvk@swan.astro.utoronto.ca>\nMarten van Kerkwijk          <mhvk@astro.utoronto.ca> Marten H. van Kerkwijk <mhvk@astro.utoronto.ca>\nMarten van Kerkwijk          <mhvk@astro.utoronto.ca> Marten Henric van Kerkwijk <mhvk@astro.utoronto.ca>\nMatt Davis                   <jiffyclub.programatic@gmail.com>\nMatteo Bachetti              <matteo@matteobachetti.it> <matteo.bachetti@irap.omp.eu>\nMatthew Craig                <mattwcraig@gmail.com>\nMatthieu Baumann             <baumannmatthieu0@gmail.com> <matthieu.baumann@astro.unistra.fr>\nMavani Bhautik               <mavanibhautik@gmail.com>\nMichael Brewer               <brewer@astro.umass.edu>\nMichael Brewer               <brewer@astro.umass.edu> <mkbrewer@users.noreply.github.com>\nMichael Hirsch               <scienceopen@users.noreply.github.com>\nMichael Lindner-D'Addario    <38199062+MDAddario@users.noreply.github.com>\nMichael Mommert              <mommermiscience@gmail.com> <michael.mommert@nau.edu>\nMichael Mommert              <mommermiscience@gmail.com> <mommermi@users.noreply.github.com>\nMichael Seifert              <michaelseifert04@yahoo.de>\nMichele Costa                <thenocturnalastrostudent@gmail.com>\nMichele Costa                <thenocturnalastrostudent@gmail.com> <michele.costa@unipart.io>\nMiguel de Val-Borro          <miguel.deval@gmail.com>  <miguel@archlinux.net>\nMihai Cara                   <mihail.cara@gmail.com> <mcara@itsd-osx22.home>\nMihai Cara                   <mihail.cara@gmail.com> <mcara@users.noreply.github.com>\nMike Alexandersen            <mikea@asiaa.sinica.edu.tw>\nMikhail Minin                <mminin2010@gmail.com>\nMoataz Hisham                <mtzhisham@gmail.com>\nMridul Seth                  <mail@mriduls.com> <git@mriduls.com>\nMubin Manasia                <mubinmanasiya107@gmail.com> Mubin17 <48038715+Mubin17@users.noreply.github.com>\nNabil Freij                  <nabil.freij@gmail.com>\nNadia Dencheva               <nadia.astropy@gmail.com> <dencheva@itsd-osx13.local>\nNadia Dencheva               <nadia.astropy@gmail.com> <nadia.dencheva@gmail.com>\nNathaniel Starkman           <nstarkman@protonmail.com>\nNathaniel Starkman           <nstarkman@protonmail.com> <nstarman@users.noreply.github.com>\nNathaniel Starkman           <nstarkman@protonmail.com> <nathanielstarkman@gmail.com>\nNeil Crighton                <neilcrighton@gmail.com>\nNeal McBurnett               <neal@mcburnett.org> <nealmcb@gmail.com>\nNicholas Earl                <contact@nicholasearl.me>\nNicholas Earl                <contact@nicholasearl.me> <nchlsearl@gmail.com>\nNicholas Earl                <contact@nicholasearl.me> <nmearl@localhost.localdomain>\nNick Lloyd                   <nick.lloyd@usask.ca>\nNora Luetzgendorf            <nluetzge@gmail.com>\nOle Streicher                <ole@aip.de> <debian@liska.ath.cx>\nOle Streicher                <ole@aip.de> <olebole@debian.org>\nParikshit Sakurikar          <parikshit.sakurikar@research.iiit.ac.in>\nPatricio Rojo                <pato@das.uchile.cl> <pato@oan.cl>\nPauline Barmby               <pbarmby@uwo.ca> <pbarmby@uwo.ca>\nPerry Greenfield             <perry@stsci.edu>\nP. L. Lim                    <2090236+pllim@users.noreply.github.com>\nP. L. Lim                    <2090236+pllim@users.noreply.github.com> <lim@stsci.edu>\nPorter Averett               <porter@averett.net> <46609497+paverett@users.noreply.github.com>\nPrajwel Joseph               <prajwel.pj@gmail.com>\nPratik Patel                 <pratikpatel15133@gmail.com>\nPritish Chakraborty          <chakrabortypritish@gmail.com>\nRicardo Fonseca              <ricardopfonseca95@gmail.com>\nRicardo Fonseca              <ricardopfonseca95@gmail.com> <ricardopfonseca@tecnico.ulisboa.pt>\nRichard R <rrjbca@users.noreply.github.com>\nRichard R <rrjbca@users.noreply.github.com> <58728519+rrjbca@users.noreply.github.com>\nRicky O'Steen                <rosteen@stsci.edu> <39831871+rosteen@users.noreply.github.com>\nRitiek Malhotra              <ritiekmalhotra123@gmail.com>\nRitwick DSouza               <ritwick.dsouza@outlook.com>\nRobel Geda                   <rgeda@stsci.edu> <robelgeda@yahoo.com>\nRobel Geda                   <rgeda@stsci.edu> robelgeda <robelgeda@yahoo.com>\nRohan Rajpal                 <rohan17089@iiitd.ac.in>\nRohit Kapoor                 <algorithm059@gmail.com>\nRohit Patil                  <rohit4change@yahoo.in>\nRohit Patil                  <rohit4change@yahoo.in> <Quan@Aries.(none)>\nRoman Tolesnikov             <rtolesnikov@yahoo.com>\nRyan Cooke                   <ryancooke86@gmail.com>\nSam Lee                      <orionlee@yahoo.com> <orionlee@users.noreply.github.com>\nSam Van Kooten               <vankooten.sam@gmail.com> <svank@users.noreply.github.com>\nSam Verstocken               <sam.verstocken@gmail.com>\nSanjeev Dubey                <getsanjeevdubey@gmail.com>\nSara Ogaz                    <ogaz@stsci.edu>\nSarah Graves                 <s.graves@eaobservatory.org>\nSashank Mishra               <sashankmishra27@gmail.com> sashmish <sashankmishra27@gmail.com>\nSebastian Meßlinger          <sebastian.messlinger@posteo.de> <39328484+krachyon@users.noreply.github.com>\nSebastian Meßlinger          <sebastian.messlinger@posteo.de> Sebastian <sebastian.messlinger@posteo.de>\nSergio Pascual               <sergio.pasra@gmail.com> <sergiopr@fis.ucm.es>\nShane Maloney                <shane.maloney@dias.ie> <maloneys@tcd.ie>\nShane Maloney                <shane.maloney@dias.ie> <sm@dhcp-115.wireless.ap.dias.ie>\nShantanu Srivastava          <shan_mbic@rediffmail.com>\nShilpi Jain                  <shilpi1958@gmail.com>\nShivansh Mishra              <dHoneysh@gmail.com>\nShivansh Mishra              <dHoneysh@gmail.com> <shivanshmishra@shivanshs-MacBook-Pro.local>\nSimon Alinder                <simon.alinder@astro.lu.se> <92031780+AlinderS@users.noreply.github.com>\nSimon Alinder                <simon.alinder@astro.lu.se> AlinderS <simon.alinder@astro.lu.se>\nSimon Conseil                <contact@saimon.org>\nSimon Conseil                <contact@saimon.org> <simon.conseil@univ-lyon1.fr>\nSimon Conseil                <contact@saimon.org> <sconseil@gemini.edu>\nSimon Conseil                <contact@saimon.org> <s.conseil@ip2i.in2p3.fr>\nSimon Conseil                <contact@saimon.org> <simon.conseil@lam.fr>\nSimon Liedtke                <liedtke.simon@googlemail.com>\nSomia Floret                 <somia.floret@outlook.com> Somia FLORET <somia.floret@outlook.com>\nSomia Floret                 <somia.floret@outlook.com> Somia Floret <57394764+somilia@users.noreply.github.com>\nSourabh Cheedella            <cheedella.sourabh@gmail.com>\nSteve Crawford               <crawfordsm@gmail.com>\nSteve Crawford               <crawfordsm@gmail.com> <crawfodsm@gmail.com>\nSteve Crawford               <crawfordsm@gmail.com> <scrawford@stsci.edu>\nStuart Littlefair            <s.littlefair@shef.ac.uk>  <s.littlefair@shef.ac.uk>\nStuart Mumford               <stuart@cadair.com> <stuart@mumford.me.uk>\nSudheesh Singanamalla        <sudheesh1995@outlook.com>\nSudheesh Singanamalla        <sudheesh1995@outlook.com> <t-sus@microsoft.com>\nSushobhana Patra             <sushobhanapatra@gmail.com>\nTanvi Pooranmal Meena        <96572616+mtanvi19@users.noreply.github.com> <96572616+TanviPooranmal@users.noreply.github.com>\nThomas Erben                 <terben@astro.uni-bonn.de> <thomas@astro.uni-bonn.de>\nThompson Le Blanc            <leblanc@stsci.edu>\nThompson Le Blanc            <leblanc@stsci.edu> <tlcommodore@gmail.com>\nTiago Gomes                  <tiago_gomes_76@hotmail.com>\nTim Jenness                  <tjenness@lsst.org>\nTim Jenness                  <tjenness@lsst.org> <tim.jenness@gmail.com>\nTimothy P. Ellsworth Bowers  <tbowers@lowell.edu> Timothy Ellsworth Bowers <tbowers@lowell.edu>\nTom Aldcroft                 <taldcroft@gmail.com> <aldcroft@dhcp-131-142-152-173.cfa.harvard.edu>\nTom Donaldson                <tdonaldson@stsci.edu>\nTom J Wilson                 <towilson@stsci.edu>\nTyler Finethy                <tylfin@gmail.com>\nVSN Reddy Janga              <janga1997@gmail.com>\nVishnunarayan K I            <appukuttancr@gmail.com>\nVital Fernández              <vital.fernandez@gmail.com>   <lativmail@gmail.com>\nWilliam Jamieson             <wjamieson@stsci.edu> <william.b.jamieson@nasa.gov>\nYannick Copin                <y.copin@ipnl.in2p3.fr> <yannick.copin@laposte.net>\nYash Kumar                   <yash.kmr.99@gmail.com>\nYash Nandwana                <yashneelam975@gmail.com>\nYash Sharma                  <yashrsharma44@gmail.com>\nYingqi Ying                  <33911276+dyq0811@users.noreply.github.com>\nZach Edwards                 <Zachary.Astro@Gmail.com>\nZac Hatfield-Dodds           <zac.hatfield.dodds@gmail.com>\nZé Vinicius                  <jvmirca@gmail.com>\nZhiyuan Ma                   <jerry.ma.nk@gmail.com> Jerry Ma <jerry.ma.nk@gmail.com>\nZhiyuan Ma                   <jerry.ma.nk@gmail.com> Zhiyuan  Ma <jerry.ma.nk@gmail.com>\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 3.24609375,
          "content": "ci:\n  autofix_prs: false\n  autoupdate_schedule: 'monthly'\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n        args: [\"--enforce-all\", \"--maxkb=300\"]\n        exclude: \"^(\\\n            cextern/wcslib/C/flexed/.*|\\\n            CHANGES.rst|\\\n        )$\"\n        # Prevent giant files from being committed.\n      - id: check-case-conflict\n        # Check for files with names that would conflict on a case-insensitive\n        # filesystem like MacOS HFS+ or Windows FAT.\n      - id: check-json\n        # Attempts to load all json files to verify syntax.\n      - id: check-merge-conflict\n        # Check for files that contain merge conflict strings.\n      - id: check-symlinks\n        # Checks for symlinks which do not point to anything.\n      - id: check-toml\n        # Attempts to load all TOML files to verify syntax.\n      - id: check-xml\n        # Attempts to load all xml files to verify syntax.\n      - id: check-yaml\n        # Attempts to load all yaml files to verify syntax.\n        exclude: \".*(.github.*)$\"\n      - id: detect-private-key\n        # Checks for the existence of private keys.\n      - id: end-of-file-fixer\n        # Makes sure files end in a newline and only a newline.\n        exclude: \".*(data.*|extern.*|licenses.*|_static.*|_parsetab.py)$\"\n      # - id: fix-encoding-pragma  # covered by pyupgrade\n      - id: trailing-whitespace\n        # Trims trailing whitespace.\n        exclude_types: [python]  # Covered by Ruff W291.\n        exclude: \".*(data.*|extern.*|licenses.*|_static.*)$\"\n\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.10.0\n    hooks:\n      - id: rst-directive-colons\n        # Detect mistake of rst directive not ending with double colon.\n      - id: rst-inline-touching-normal\n        # Detect mistake of inline code touching normal text in rst.\n      - id: text-unicode-replacement-char\n        # Forbid files which have a UTF-8 Unicode replacement character.\n\n  - repo: https://github.com/woodruffw/zizmor-pre-commit\n    rev: v1.0.0\n    hooks:\n    - id: zizmor\n\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      - id: codespell\n        args: [\"--write-changes\"]\n        additional_dependencies:\n          - tomli\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff\n        args: [\"--fix\", \"--show-fixes\"]\n      - id: ruff-format\n\n  - repo: https://github.com/scientific-python/cookie\n    rev: 2024.08.19\n    hooks:\n      - id: sp-repo-review\n\n  - repo: local\n    hooks:\n      - id: changelogs-rst\n        name: changelog filenames\n        language: fail\n        entry: >-\n          changelog files must be named <sub-package>/####.(bugfix|feature|api|perf).rst\n          or ####.other.rst (in the root directory only)\n        exclude: >-\n          ^docs/changes/[\\w\\.]+/(\\d+\\.(bugfix|feature|api|perf)(\\.\\d)?.rst|.gitkeep)\n        files: ^docs/changes/[\\w\\.]+/\n      - id: changelogs-rst-other\n        name: changelog filenames for other category\n        language: fail\n        entry: >-\n          only \"other\" changelog files must be placed in the root directory\n        exclude: >-\n          ^docs/changes/(\\d+\\.other.rst|README.rst|template.rst)\n        files: ^docs/changes/\\d+.\\w+.rst\n"
        },
        {
          "name": ".pycodestyle",
          "type": "blob",
          "size": 0.07421875,
          "content": "[pycodestyle]\nmax-line-length = 88\nexclude = extern,*parsetab.py,*lextab.py\n"
        },
        {
          "name": ".pyinstaller",
          "type": "tree",
          "content": null
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.5830078125,
          "content": "version: 2\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    python: \"mambaforge-4.10\"\n  jobs:\n    post_checkout:\n      - git fetch --unshallow || true\n    pre_install:\n      - git update-index --assume-unchanged docs/conf.py docs/rtd_environment.yaml\n\nconda:\n  environment: docs/rtd_environment.yaml\n\nsphinx:\n  builder: html\n  configuration: docs/conf.py\n  fail_on_warning: true\n\n# Install regular dependencies.\n# Then, install special pinning for RTD.\npython:\n  install:\n    - method: pip\n      path: .\n      extra_requirements:\n        - docs\n        - all\n\n# Don't build any extra formats\nformats: []\n"
        },
        {
          "name": ".ruff.toml",
          "type": "blob",
          "size": 10.080078125,
          "content": "extend = \"pyproject.toml\"\nlint.ignore = [\n    # NOTE: to find a good code to fix, run:\n    # ruff --select=\"ALL\" --statistics astropy/<subpackage>\n\n    # flake8-annotations (ANN) : static typing\n    \"ANN001\",  # Function argument without type annotation\n    \"ANN003\",  # `**kwargs` without type annotation\n    \"ANN202\",  # Private function without return type annotation\n    \"ANN401\",  # Use of `Any` type\n\n    # flake8-unused-arguments (ARG)\n    \"ARG001\",  # unused-function-argument\n    \"ARG002\",  # unused-method-argument\n    \"ARG003\",  # unused-class-method-argument\n    \"ARG004\",  # unused-static-method-argument\n    \"ARG005\",  # unused-lambda-argument\n\n    # flake8-bugbear (B)\n    \"B006\",  # MutableArgumentDefault\n    \"B007\",  # UnusedLoopControlVariable\n    \"B023\",  # FunctionUsesLoopVariable\n    \"B028\",  # No-explicit-stacklevel\n    \"B904\",  # RaiseWithoutFromInsideExcept\n    \"B905\",  # ZipWithoutExplicitStrict\n\n    # flake8-blind-except (BLE)\n    \"BLE001\",  # blind-except\n\n    # mccabe (C90) : code complexity\n    # TODO: configure maximum allowed complexity.\n    \"C901\",  # McCabeComplexity\n\n    # pydocstyle (D)\n    # Missing Docstrings\n    \"D100\",  # undocumented-public-module\n    \"D101\",  # undocumented-public-class\n    \"D103\",  # undocumented-public-function\n    \"D104\",  # undocumented-public-package\n    \"D205\",  # blank-line-after-summary\n    # Quotes Issues\n    \"D300\",  # triple-single-quotes\n    \"D301\",  # escape-sequence-in-docstring\n    # Docstring Content Issues\n    \"D403\",  # first-line-capitalized\n    \"D404\",  # docstring-starts-with-this\n    \"D401\",  # non-imperative-mood.\n    \"D414\",  # empty-docstring-section\n    \"D419\",  # docstring is empty\n\n    # flake8-datetimez (DTZ)\n    \"DTZ001\",  # call-datetime-without-tzinfo\n    \"DTZ005\",  # call-datetime-now-without-tzinfo\n\n    # pycodestyle (E, W)\n    \"E501\",  # line-too-long\n    \"E721\",  # type-comparison\n    \"E731\",  # lambda-assignment\n\n    # flake8-errmsg (EM)  : nicer error tracebacks\n    \"EM101\",   # raw-string-in-exception\n    \"EM102\",   # f-string-in-exception\n    \"EM103\",   # dot-format-in-exception\n\n    # eradicate (ERA)\n    # NOTE: be careful that developer notes are kept.\n    \"ERA001\",  # commented-out-code\n\n    # flake8-executable (EXE)\n    \"EXE002\",  # shebang-missing-executable-file\n\n    # Pyflakes (F)\n    \"F841\",  # unused-variable\n\n    # flake8-boolean-trap (FBT)  : boolean flags should be kwargs, not args\n    # NOTE: a good thing to fix, but changes API.\n    \"FBT001\",  # boolean-positional-arg-in-function-definition\n    \"FBT002\",  # boolean-default-value-in-function-definition\n    \"FBT003\",  # boolean-positional-value-in-function-call\n\n    # flake8-fixme (FIX)\n    \"FIX001\",  # Line contains FIXME.  this should be fixed or at least FIXME replaced with TODO\n    \"FIX004\",  # Line contains HACK. replace HACK with NOTE.\n\n    # pep8-naming (N)\n    # NOTE: some of these can/should be fixed, but this changes the API.\n    \"N801\",  # invalid-class-name\n    \"N802\",  # invalid-function-name\n    \"N803\",  # invalid-argument-name\n    \"N805\",  # invalid-first-argument-name-for-method\n    \"N807\",  # dunder-function-name\n    \"N813\",  # camelcase-imported-as-lowercase\n    \"N815\",  # mixed-case-variable-in-class-scope\n    \"N816\",  # mixed-case-variable-in-global-scope\n    \"N818\",  # error-suffix-on-exception-name\n\n    # NumPy-specific rules (NPY)\n    \"NPY002\", # Replace legacy `np.random.rand` call with `np.random.Generator`  (2023-05-03)\n\n    # Perflint (PERF)\n    \"PERF203\",  # `try`-`except` within a loop incurs performance overhead\n    \"PERF401\",  # Use a list comprehension to create a transformed list\n\n    # Pylint (PLC, PLE, PLR, PLW)\n    \"PLE0101\",  # return-in-init\n    \"PLR0124\",  # Name compared with itself\n    \"PLR0402\",  # ConsiderUsingFromImport\n    \"PLR0912\",  # too-many-branches\n    \"PLR0913\",  # too-many-args\n    \"PLR0915\",  # too-many-statements\n    \"PLR1714\",  # Consider merging multiple comparisons\n    \"PLR2004\",  # MagicValueComparison\n    \"PLR5501\",  # collapsible-else-if\n    \"PLW0603\",  # global-statement\n    \"PLW2901\",  # redefined-loop-name\n\n    # flake8-pytest-style (PT)\n    \"PT003\",   # pytest-extraneous-scope-function\n    \"PT006\",   # pytest-parametrize-names-wrong-type\n    \"PT007\",   # pytest-parametrize-values-wrong-type\n    \"PT011\",   # pytest-raises-too-broad\n    \"PT012\",   # pytest-raises-with-multiple-statements\n    \"PT017\",   # pytest-assert-in-exceptinstead\n    \"PT018\",   # pytest-composite-assertion\n\n    # flake8-return (RET)\n    \"RET501\",  # unnecessary-return-none\n    \"RET502\",  # implicit-return-value\n    \"RET503\",  # implicit-return\n    \"RET504\",  # unnecessary-assign\n    \"RET507\",  # superfluous-else-continue\n\n    # flake8-raise (RSE)\n    \"RSE102\",  # unnecessary-paren-on-raise-exception\n\n    # Ruff-specific rules (RUF)\n    \"RUF001\",  # ambiguous-unicode-character-string\n    \"RUF002\",  # ambiguous-unicode-character-docstring\n    \"RUF010\",  # use conversion in f-string\n    \"RUF012\",  # Mutable class attributes should be annotated with `typing.ClassVar`\n\n    # flake8-bandit (S)\n    \"S101\",  # Use of `assert` detected\n    \"S105\",  # hardcoded-password-string\n    \"S110\",  # try-except-pass\n    \"S112\",  # try-except-continue\n    \"S301\",  # suspicious-pickle-usage\n    \"S307\",  # Use of possibly insecure function; consider using `ast.literal_eval`\n    \"S311\",  # suspicious-non-cryptographic-randomness\n    \"S324\",  # hashlib-insecure-hash-function\n    \"S506\",  # UnsafeYAMLLoad\n    \"S310\",  # Suspicious-url-open-usage\n    \"S603\",  # `subprocess` call: check for execution of untrusted input\n    \"S607\",  # Starting a process with a partial executable path\n\n    # flake8-simplify (SIM)\n    \"SIM102\",  # NestedIfStatements\n    \"SIM105\",  # UseContextlibSuppress\n    \"SIM108\",  # UseTernaryOperator\n    \"SIM114\",  # if-with-same-arms\n    \"SIM115\",  # OpenFileWithContextHandler\n    \"SIM117\",  # MultipleWithStatements\n    \"SIM118\",  # KeyInDict\n    \"SIM201\",  # NegateEqualOp\n    \"SIM300\",  # yoda condition\n\n    # flake8-print (T20)\n    \"T201\",  # PrintUsed\n\n    # flake8-todos (TD)\n    \"TD001\",  # Invalid TODO tag\n    \"TD003\",  # Missing issue link on the line following this TODO\n    \"TD004\",  # Missing colon in TODO\n    \"TD007\",  # Missing space after colon in TODO\n\n    # tryceratops (TRY)\n    \"TRY002\",  # raise-vanilla-class\n    \"TRY003\",  # raise-vanilla-args\n    \"TRY004\",  # prefer-type-error\n    \"TRY201\",  # verbose-raise\n    \"TRY301\",  # raise-within-try\n\n    # pyupgrade (UP)\n    \"UP038\",  # isinstance using union separators. The code is slower as of Python 3.11-3.12\n\n    # flake8-quotes (Q)\n    \"Q000\",  # use double quotes\n]\nlint.unfixable = [\n    \"E711\"  # NoneComparison. Hard to fix b/c numpy has it's own None.\n]\n\n[lint.extend-per-file-ignores]\n\"__init__.py\" = [\"E402\", \"F401\"]\n\"test_*.py\" = [\n    \"PTH\", # all flake8-use-pathlib\n    \"RUF015\",  # Prefer next({iterable}) over single element slice\n]\n# TODO: fix these, on a per-subpackage basis.\n# When a general exclusion is being fixed, but it affects many subpackages, it\n# is better to fix for subpackages individually. The general exclusion should be\n# copied to these subpackage sections and fixed there.\n\"astropy/config/*\" = []\n\"astropy/constants/*\" = [\n    \"N817\",    # camelcase-imported-as-acronym\n    \"RET505\",  # superfluous-else-return\n]\n\"astropy/convolution/*\" = [\n    \"PLR0911\",  # too-many-return-statements\n]\n\"astropy/coordinates/*\" = [\n    \"PTH\",     # all flake8-use-pathlib\n    \"DTZ007\",  # call-datetime-strptime-without-zone\n    \"RET505\",  # superfluous-else-return\n]\n\"astropy/cosmology/*\" = [\n    \"C408\",  # unnecessary-collection-call\n    \"PT019\",   # pytest-fixture-param-without-value\n]\n\"astropy/io/*\" = [\n    \"G001\",  # logging-string-format\n    \"G004\",  # logging-f-string\n    \"PLR0911\",  # too-many-return-statements\n    \"PTH116\",  # os-stat\n    \"PTH117\",  # os-path-isabs\n    \"S314\",  # defusedxml\n    \"SLOT000\",  # Subclasses of `str` should define `__slots__`\n    \"TD005\",  # Missing issue description after `TODO`\n    \"TRY400\",  # error-instead-of-exception\n    \"TRY300\",  # Consider `else` block\n]\n\"astropy/io/ascii/*\" = [\n]\n\"astropy/io/fits/*\" = [\n    \"PTH\",\n]\n\"astropy/io/misc/*\" = [\n]\n\"astropy/io/registry/*\" = [\n    \"PTH\",\n]\n\"astropy/io/votable/*\" = [\n    \"PTH\",\n]\n\"astropy/logger.py\" = [\n    \"C408\",\n    \"RET505\",\n]\n\"astropy/modeling/*\" = [\n    \"PLR0911\",  # too-many-return-statements\n    \"SLOT001\",  # Subclasses of `tuple` should define `__slots__`\n    \"TRY300\",  # Consider `else` block\n    \"F811\",  # see https://github.com/astropy/astropy/pull/16633\n]\n\"astropy/nddata/*\" = [\n    \"C408\",\n]\n\"astropy/samp/*\" = [\n    \"PTH\",      # all flake8-use-pathlib\n]\n\"astropy/stats/*\" = [\n    \"PLR0911\",  # too-many-return-statements\n]\n\"astropy/table/*\" = [\n    \"S605\",  # Starting a process with a shell, possible injection detected\n    \"TRY300\",  # Consider `else` block\n]\n\"astropy/tests/*\" = [\n    \"C408\",\n    \"PTH\",      # all flake8-use-pathlib\n    \"RET505\"\n]\n\"astropy/time/*\" = [\n    \"FIX003\",  # Line contains XXX.  replace XXX with TODO\n    \"PIE794\",  # duplicate-class-field-definition\n]\n\"astropy/timeseries/*\" = [\n    \"PLR0911\",  # too-many-return-statements\n]\n\"astropy/units/*\" = [\n    \"N812\",  # lowercase-imported-as-non-lowercase\n    \"PLR0911\",  # too-many-return-statements\n    \"TRY300\",  # Consider `else` block\n]\n\"astropy/uncertainty/*\" = [\n    \"C408\",\n]\n\"astropy/utils/*\" = [\n    \"N811\",  # constant-imported-as-non-constant\n    \"PLR0911\",  # too-many-return-statements\n    \"PTH\",      # all flake8-use-pathlib\n    \"S321\",  # Suspicious-ftp-lib-usage\n    \"TRY300\",  # Consider `else` block\n]\n\"astropy/visualization/*\" = [\n    \"B015\",\n    \"PLR0911\",  # too-many-return-statements\n]\n\"astropy/wcs/*\" = [\n    \"C408\",  # unnecessary-collection-call\n    \"F821\",  # undefined-name\n    \"PTH\",      # all flake8-use-pathlib\n    \"S608\",  # Posslibe SQL injection\n    \"SIM202\",  # NegateNotEqualOp\n    \"TRY300\",  # Consider `else` block\n]\n\"docs/*\" = []\n\"examples/coordinates/*\" = []\n\n\".pyinstaller/*.py\" = [\"PTH\"]\n\n\n[lint.flake8-import-conventions.aliases]\n# xml is hardly ever used thus the alias should not be mandated\n# There is no way to remove from the default list, only to override\n# the default thus we list the things here that we actually should use.\n\"numpy\" = \"np\"\n\"matplotlib\" = \"mpl\"\n\"matplotlib.pyplot\" = \"plt\"\n"
        },
        {
          "name": "CHANGES.rst",
          "type": "blob",
          "size": 639.505859375,
          "content": "Version 7.0.0 (2024-11-21)\n==========================\n\n\nNew Features\n------------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Added ``get_config_dir_path`` (and ``get_cache_dir_path``) which is equivalent\n  to ``get_config_dir`` (respectively ``get_cache_dir``) except that it returns a\n  ``pathlib.Path`` object instead of ``str``. [#17118]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``BaseCoordinateFrame`` instances such as ``ICRS``, ``SkyOffsetFrame``, etc.,\n  can now be stored directly in tables (previously, they were stored as\n  ``object`` type columns). Furthermore, storage in tables is now also possible\n  for frames that have no data (but which have attributes with the correct shape\n  to fit in the table). [#16831]\n\n- ``BaseCoordinateFrame`` now has a ``to_table()`` method, which converts the\n  frame to a ``QTable``, analogously to the ``SkyCoord.to_table()`` method. [#17009]\n\n- ``SkyCoord``, coordinate frames, and representations have all have gained the\n  ability to deal with ``Masked`` data. In general, the procedure is similar to\n  that of ``Time``, except that different representation components do not share\n  the mask, to enable holding, e.g., a catalogue of objects in which only some\n  have associated distances. [#17016]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Add support for ``pathlib.Path`` objects in\n  ``astropy.io.ascii.core.BaseInputter.get_lines``. [#16930]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Expanded ``FITSDiff`` output for ``PrimaryHDU`` and ``ImageHDU`` to include the\n  maximum relative and absolute differences in the data. [#17097]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- The HDF5 writer, ``write_table_hdf5()``, now accepts ``os.PathLike`` objects\n  as ``output``. [#16955]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Support reading and writing of VOTable version 1.5, including the new\n  ``refposition`` attribute of ``COOSYS``. [#16856]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added ``Model.has_tied``, ``Model.has_fixed``, and ``Model.has_bounds`` attributes to make\n  it easy to check whether models have various kinds of constraints set without having to\n  inspect ``Model.tied``, ``Model.fixed``, and ``Model.bounds`` in detail. [#16677]\n\n- Added a new ``parallel_fit_dask`` function that can be used to fit models to\n  many sections (e.g. spectra, image slices) on an N-dimensional array in\n  parallel. [#16696]\n\n- Added a ``Lorentz2D`` model. [#16800]\n\n- Added ``inplace=False/True`` keyword argument to the ``__call__`` method of most fitters,\n  to optionally allow the original model passed to the fitter to be modified with the fitted\n  values of the parameters, rather than return a copy. This can improve performance if users\n  don't need to keep hold of the initial parameter values. [#17033]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added a ``SigmaClippedStats`` convenience class for computing sigma-clipped\n  statistics. [#17221]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Changed a number of dict-like containers in ``io.ascii`` from ``OrderedDict`` to\n  ``dict``. The ``dict`` class maintains key order since Python 3.8 so ``OrderedDict`` is\n  no longer needed. The changes are largely internal and should not affect users in any\n  way. See also the API change log entry for this PR. [#16250]\n\n- Add a ``keep_order`` argument to the ``astropy.table.join`` function which specifies to\n  maintain the original order of the key table in the joined output. This applies for\n  inner, left, and right joins. The default is ``False`` in which case the output is\n  ordered by the join keys, consistent with prior behavior. [#16361]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add a ``formatter`` argument to the ``to_string`` method of the ``Quantity``\n  class. Enables custom number formatting with a callable formatter or\n  format_spec, especially useful for consistent notation. [#16087]\n\n- Add the unit foe (or Bethe, equivalent to 1e51 erg), which is often used to\n  express the energy emitted by a supernova explosion. [#16441]\n\n- Add ``magnetic_flux_field`` equivalency to convert magnetic field between\n  magnetic field strength (H) and magnetic flux density (B). [#16516]\n\n- Added SI-units ``sievert``, ``gray``, ``katal``, and ``hectare`` in ``astropy.units.si``. [#16729]\n\n- When parsing invalid unit strings with ``u.Unit(..., parse_strict=\"warn\")`` or\n  ``u.Unit(..., parse_strict=\"silent\")``, a normal unit may be returned if the\n  problem is not too serious.\n  If parsing the string fails completely then an ``UnrecognizedUnit`` instance is\n  returned, just as before. [#16892]\n\n- Added a ``np.arange`` dispatch for ``Quantity`` (requires one to use\n  ``like=<some_quantity>``). [#17059]\n\n- Added support for calling numpy array constructors (``np.empty``, ``np.ones``,\n  ``np.zeros`` and ``np.full``) with ``like=Quantity(...)`` . [#17120]\n\n- Added support for calling numpy array constructors (``np.array``,\n  ``np.asarray``, ``np.asanyarray``, ``np.ascontiguousarray`` and\n  ``np.asfortranarray``) with ``like=Quantity(...)`` . [#17125]\n\n- Added support for calling numpy array constructors (``np.frombuffer``,\n  ``np.fromfile``, ``np.fromiter``, ``np.fromstring`` and ``np.fromfunction``)\n  with ``like=Quantity(...))`` . [#17128]\n\n- Added support for calling numpy array constructors (``np.require``,\n  ``np.identity``, ``np.eye``, ``np.tri``, ``np.genfromtxt`` and ``np.loadtxt``)\n  with ``like=Quantity(...))`` . [#17130]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added the ``astropy.system_info`` function to help document runtime systems in\n  bug reports. [#16335]\n\n- Add support for specifying files as ``pathlib.Path`` objects in ``IERS_A.read``\n  and ``IERS_B.read``. [#16931]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Add ``make_rgb()``, a convenience\n  function for creating RGB images with independent scaling on each filter.\n  Refactors ``make_lupton_rgb()`` to work with instances of subclasses of\n  ``BaseStretch``, including the new Lupton-specific classes\n  ``LuptonAsinhStretch`` and ``LuptonAsinhZscaleStretch``. [#15081]\n\n- Add support for custom coordinate frames for ``WCSAxes`` through a context\n  manager ``astropy.visualization.wcsaxes.custom_ucd_coord_meta_mapping``. [#16347]\n\n- Added ``get_ticks_position``, ``get_ticklabel_position``, and\n  ``get_axislabel_position`` methods on ``CoordinateHelper`` in WCSAxes. [#16686]\n\n- Added the ability to disable the automatic simplification of WCSAxes tick labels\n  by specifying ``simplify=False`` to ``set_ticklabel()`` for a coordinate axis. [#16938]\n\n- Added the ability to specify that WCSAxes tick labels always include the sign\n  (namely for positive values) by starting the format string with a ``+``\n  character. [#16985]\n\n- Allow ``astropy.visualization.units.quantity_support`` to be used as a\n  decorator in addition to the already supported use as a context manager. [#17006]\n\n- Added the ability to specify a callable function in ``CoordinateHelper.set_major_formatter`` [#17020]\n\n- Added a ``SimpleNorm`` class to create a matplotlib normalization object. [#17217]\n\n- WCSAxes will now select which axis to draw which tick labels and axis labels on based on the number of drawn tick labels, rather than picking them in the order they are listed in the WCS. This means that axes may be swapped in comparison with previous versions of Astropy by default. [#17243]\n\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- For non-scalar frames without data, ``len(frame)`` will now return the first\n  element of its ``shape``, just like for frames with data (or arrays more\n  generally).  For scalar frames, a ``TypeError`` will be raised.  Both these\n  instead of raising a ``ValueError`` stating the frame has no data. [#16833]\n\n- The deprecated ``coordinates.get_moon()`` function has been removed. Use\n  ``coordinates.get_body(\"moon\")`` instead. [#17046]\n\n- The deprecated ``BaseCoordinateFrame.get_frame_attr_names()`` is removed.\n  Use ``get_frame_attr_defaults()`` instead. [#17252]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Passing redshift arguments as keywords is deprecated in many methods. [#16597]\n\n- Deprecated ``cosmology.utils`` module has been removed. Any public API may\n  be imported directly from the ``cosmology`` module instead. [#16730]\n\n- Setting ``Ob0 = None`` in FLRW cosmologies has been deprecated in favor of ``Ob0 =\n  0.0``. Conceptually this is a change in that baryons are now always a component of the\n  cosmology. Practically, the only change (besides that ``Ob0`` is never ``None``) is that\n  methods relying on ``Ob0`` always work, rather than sometimes raising an exception,\n  instead by default taking the contribution of the baryons to be negligible. [#16847]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Remove all deprecated arguments from functions within ``astropy.io.ascii``.\n\n  ``read()``:\n  - ``Reader`` is removed. Instead supply the equivalent ``format`` argument.\n  - Use ``inputter_cls`` instead of ``Inputter``.\n  - Use ``outputter_cls`` instead of ``Outputter``.\n\n  ``get_reader()``:\n  - Use ``reader_cls`` instead of ``Reader``.\n  - Use ``inputter_cls`` instead of ``Inputter``.\n  - Use ``outputter_cls`` instead of ``Outputter``.\n\n  ``write()``:\n  - ``Writer`` is removed. Instead supply the equivalent ``format`` argument.\n\n  ``get_writer()``:\n  - Use ``writer_cls`` instead of ``Writer``. [#15758]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- The ``CompImageHDU`` class has been refactored to inherit from ``ImageHDU``\n  instead of ``BinTableHDU``. This change should be for the most part preserve the\n  API, but any calls to ``isinstance(hdu, BinTableHDU)`` will now return ``False``\n  if ``hdu`` is a ``CompImageHDU`` whereas before it would have returned ``True``.\n  In addition, the ``uint`` keyword argument to ``CompImageHDU`` now defaults to\n  ``True`` for consistency with ``ImageHDU``. [#15474]\n\n- Remove many unintended exports from ``astropy.io.fits.hdu.compressed``.\n  The low-level functions ``compress_image_data`` and ``decompress_image_data_section``\n  are now only available at the qualified names\n  ``astropy.io.fits.hdu.compressed._tiled_compression.compress_image_data``\n  and ``astropy.io.fits.hdu.compressed._tiled_compression.decompress_image_data_section``.\n  The rest of the removed exports are external modules or properly exported\n  elsewhere in astropy. May break imports in rare cases that relied\n  on these exports. [#15781]\n\n- The ``CompImageHeader`` class is now deprecated, and headers on ``CompImageHDU``\n  instances are now plain ``Header`` instances. If a reserved keyword is set on\n  ``CompImageHDU.header``, a warning will now be emitted at the point where the\n  file is written rather than at the point where the keyword is set. [#17100]\n\n- - Remove code that was deprecated in previous versions: ``_ExtensionHDU`` and\n    ``_NonstandardExtHDU``, ``(Bin)Table.update``, ``tile_size`` argument for\n    ``CompImageHDU``. Also specifying an invalid ``tile_shape`` now raises an\n    error. [#17155]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- New format ``\"parquet.votable\"`` is added to read and write a parquet file\n  with a votable metadata included. [#16375]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- ``Table.read(..., format='votable')``, ``votable.parse`` and\n  ``votable.parse_single_table`` now respect the ``columns`` argument and will only output\n  selected columns. Previously, unselected columns would just be masked (and unallocated).\n  ``astropy.io.votable.tree.TableElement.create_arrays`` also gained a ``colnumbers``\n  keyword argument to allow column selection. [#15959]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Subclasses of ``_NonLinearLSQFitter``, so any subclasses of the public ``LevMarLSQFitter``, ``TRFLSQFitter``, ``LMLSQFitter`` or ``DogBoxLSQFitter``, should now accept an additional ``fit_param_indices`` kwarg in the function signature of their ``objective_function`` methods.\n  Nothing is needed to be done with this kwarg, and it might not be set, but it can optionally be passed through to ``fitter_to_model_params_array`` for a performance improvement.\n  We also recommended accepting all kwargs (with ``**kwargs``) in this method so that future additional kwargs do not cause breakage. [#16673]\n\n- Exception message for when broadcast shapes mismatch has changed.\n  Previously, it used complicated regex to maintain backward compatibility.\n  To ease maintenance, this regex has been removed and now directly\n  passes exception from ``numpy.broadcast_shapes`` function. [#16770]\n\n- Using the ``LMLSQFitter`` fitter with models that have bounds is now deprecated,\n  as support for bounds was very basic. Instead, non-linear fitters with more\n  sophisticated support for bounds should be used instead. [#16994]\n\n- The optional ``use_min_max_bounds`` keyword argument in ``TRFLSQFitter`` and\n  ``DogBoxLSQFitter`` has now been deprecated and should not be used. These\n  fitters handle bounds correctly by default and this keyword argument was only\n  provided to opt-in to a more basic form of bounds handling. [#16995]\n\n- The deprecated ``comb()`` function has been removed.\n  Use ``math.comb()`` from the Python standard library instead. [#17248]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Integer inputs to ``sigma_clip`` and ``SigmaClip`` are not converted to\n  ``np.float32`` instead of ``float`` if necessary. [#17116]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Change the default type for the ``meta`` attribute in ``Table`` and ``Column`` (and\n  subclasses) from ``OrderedDict`` to ``dict``. Since Python 3.8 the ``dict`` class is\n  ordered by default, so there is no need to use ``OrderedDict``.\n\n  In addition the ECSV table writer in ``astropy.io.ascii`` was updated to consistently\n  write the ``meta`` attribute as an ordered map using the  ``!!omap`` tag. This\n  convention conforms to the ECSV specification and is supported by existing ECSV readers.\n  Previously the ``meta`` attribute could be written as an ordinary YAML map, which is not\n  guaranteed to preserve the order of the keys. [#16250]\n\n- An exception is now raised when trying to add a multi-dimensional column as an\n  index via ``Table.add_index``. [#16360]\n\n- Aggregating table groups for ``MaskedColumn`` no longer converts\n  fully masked groups to ``NaN``, but instead returns a masked element. [#16498]\n\n- Always use ``MaskedQuantity`` in ``QTable`` to represent masked ``Quantity``\n  data or when the ``QTable`` is created with ``masked=True``.  Previously the\n  default was to use a normal ``Quantity`` with a ``mask`` attribute of type\n  ``FalseArray`` as a stub to allow a minimal level of compatibility for certain\n  operations. This update brings more consistent behavior and fixes functions\n  like reading of table data from a list of dict that includes quantities with\n  missing entries, and aggregation of ``MaskedQuantity`` in table groups. [#16500]\n\n- Setting an empty table to a scalar no longer raises an exception, but\n  creates an empty column. This is to support cases where the number of\n  elements in a table is not known in advance, and could be zero. [#17102]\n\n- ``show_in_notebook`` method for Astropy tables has been un-deprecated and the API has\n  been updated to accept a ``backend`` keyword and require only keyword arguments. The new\n  default ``backend=\"ipydatagrid\"`` relies on an optional dependency, ``ipydatagrid``. The\n  previous default table viewer (prior to v7.0) is still available as\n  ``backend=\"classic\"``, but it has been deprecated since v6.1 and will be removed in a future release. [#17165]\n\n- The default behavior of ``Table.pformat`` was changed to include all rows and columns\n  instead of truncating the outputs to fit the current terminal.  The new default\n  keyword arguments ``max_width=-1`` and ``max_lines=-1`` now match those in\n  ``Table.pformat_all``. Since the ``Table.pformat_all`` method is now redundant, it is\n  pending deprecation. Similarly, the default behavior of ``Column.pformat`` was changed\n  to include all rows instead of truncating the outputs to fit the current terminal. [#17184]\n\nastropy.time\n^^^^^^^^^^^^\n\n- ``Time.ptp`` now properly emits a deprecation warning independently of NumPy's\n  version. This method was previously deprecated in astropy 6.1, but the warning\n  was not visible for users that had NumPy 1.x installed. Because of this, the\n  warning message was updated to state that ``Time.ptp`` is deprecated since\n  version 7.0 instead. [#17212]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The deprecated ``Quantity.nansum()`` method has been removed.  Use\n  ``np.nansum`` instead. [#15642]\n\n- The ``factor`` parameter of the ``spectral_density`` equivalency, the use of\n  which has been discouraged in the documentation since version 0.3, is now\n  deprecated.\n  Use the ``wav`` parameter as a ``Quantity``, not as a bare unit. [#16343]\n\n- The ``format.Fits`` formatter class has been renamed to ``format.FITS`` and the\n  old name is deprecated.\n  Specifying the FITS format for converting ``Quantity`` and ``UnitBase``\n  instances to and from strings is not affected by this change. [#16455]\n\n- Conversion from one unit to another using ``old_unit.to(new_unit, value)`` no longer\n  converts  ``value`` automatically to a numpy array, but passes through array duck types\n  such as ``dask`` arrays, with equivalencies properly accounted for. [#16613]\n\n- The ``format_exponential_notation()`` method of the ``Base`` unit formatter has\n  changed.\n  Any unit formatters that inherit directly from ``Base`` but have not\n  implemented their own ``format_exponential_notation()`` and wish to retain\n  previous behavior should implement it as:\n\n  .. code-block:: python\n\n      def format_exponential_notation(cls, val, format_spec):\n          return format(val, format_spec)\n\n  Any formatters that inherit directly from ``Base`` and call\n  ``super().format_exponential_notation(val, format_spec)`` should instead call\n  ``format(val, format_spec)``\n  The specific unit formatters in ``astropy.units`` and custom formatters that\n  inherit from any of them are not affected. [#16676]\n\n- The deprecated ``units.format.Unscaled`` has been removed. Use ``units.format.Generic``\n  instead. [#16707]\n\n- Added a __round__() dunder method to ``Quantity``\n  in order to support the built-in round() function. [#16784]\n\n- For ``Masked`` initialization in which a mask is passed in, ensure that that\n  mask is combined with any mask present on the input. [#16875]\n\n- The ``get_format_name()`` method of ``NamedUnit`` and its subclasses is\n  deprecated.\n  The ``to_string()`` method can be used instead. [#16958]\n\n- The ``UnitBase.in_units()`` method is deprecated.\n  The ``to()`` method can be used as a drop-in replacement. [#17121]\n\n- Unit conversions to a given system with ``unit.to_system()``,\n  ``unit.si``, and ``unit.cgs``, will now prefer the simplest unit if it\n  is in the given system, rather than prioritizing more complicated\n  units if those had a base unit component.  E.g., ``u.Pa.si`` will now\n  simply return ``Unit(\"Pa\")`` rather than ``Unit(\"N / m2\")``.  However,\n  the case where a unit can be simply described in base units remains\n  unchanged: ``u.Gal.cgs`` will still give ``Unit(\"cm / s2\")``. [#17122]\n\n- The ``CDS``, ``OGIP`` and ``VOUnit`` unit formatters are now subclasses of the\n  ``FITS`` unit formatter. [#17178]\n\n- The ``eV`` and ``rydberg`` units were moved to ``astropy.units.misc`` (from\n  ``astropy.units.si`` and ``astropy.units.astrophys``, respectively).\n  Practically, this means that ``Unit.to_system(u.si)`` no longer includes\n  ``eV`` as a SI-compatible unit. [#17246]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``IERS_Auto.open()`` now always returns a table of type ``IERS_Auto`` that\n  contains the combination of IERS-A and IERS-B data, even if automatic\n  updating of the IERS-A file is disabled or if downloading the new file fails.\n  Previously, under those conditions, it would return a table of a different type\n  (``IERS_B``) with only IERS-B data. [#16187]\n\n- ``astropy.utils.check_broadcast`` is now deprecated in favor of\n  ``numpy.broadcast_shapes`` [#16346]\n\n- Added a new keyword ``pending_warning_type`` to ``deprecated`` decorator so downstream developers could customize the type of warning for pending deprecation state. [#16463]\n\n- The ``introspection.resolve_name()`` function is deprecated.\n  It is better to use the standard library ``importlib`` instead. [#16479]\n\n- ``format_exception()`` is deprecated because it provides little benefit, if\n  any, over normal Python tracebacks. [#16807]\n\n- The ``utils.masked`` module has gained a mixin class, ``MaskableShapedLikeNDArray``,\n  as well as two utility functions, ``get_data_and_mask`` and ``combine_masks``,\n  that can help make a container classes carry masked data. Within astropy, these\n  are now used in the implementation of masks for ``Time``. [#16844]\n\n- The deprecated ``compat.override__dir__()`` utility has been removed. [#17190]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``exp`` attribute in the ``LogStretch``,\n  ``InvertedLogStretch``, ``PowerDistStretch``, and\n  ``InvertedPowerDistStretch`` stretch classes, and the ``power``\n  attribute in the ``PowerStretch``. Instead, use the ``a`` attribute,\n  which matches the input keyword. [#15751]\n\n- Removes the unintended NumPy export previously at ``astropy.visualization.np``. [#15781]\n\n- Accessing or setting the following attributes on ``CoordinateHelper`` has been deprecated:\n\n  * ``ticks``\n  * ``ticklabels``\n  * ``axislabels``\n\n  Setting the following attributes on ``CoordinateHelper`` directly has been deprecated:\n\n  * ``parent_axes``\n  * ``parent_map``\n  * ``transform``\n  * ``coord_index``\n  * ``coord_unit``\n  * ``coord_type`` (use ``set_coord_type`` instead)\n  * ``coord_wrap`` (use ``set_coord_type`` instead)\n  * ``frame``\n  * ``default_label``\n\n  Accessing or setting the following attributes on ``CoordinateHelper`` has been\n  removed (without deprecation, as these were clearly internal variables):\n\n  * ``grid_lines_kwargs``\n  * ``grid_lines``\n  * ``lblinfo``\n  * ``lbl_world``\n  * ``minor_frequency`` (there were already public methods to set/get this) [#16685]\n\n- The deprecated ``nsamples`` parameter of ``ZScaleInterval`` is removed. [#17186]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Errors may now occur if a ``BaseLowLevelWCS`` class defines\n  ``world_axis_object_components`` which returns values that are not scalars or\n  plain Numpy arrays as per APE 14. [#16287]\n\n- ``WCS.pixel_to_world_values``, ``WCS.world_to_pixel_values``,\n  ``WCS.pixel_to_world`` and ``WCS.world_to_pixel`` now correctly return NaN values for\n  pixel positions that are outside of ``pixel_bounds``. [#16328]\n\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix the broken behavior of reading an ASCII table and filling values using column names.\n  This PR addresses the issue and improves the functionality. [#15774]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix a number of bugs in ``CompImageHDU``:\n\n  * Fix the ability to pickle ``CompImageHDU`` objects\n  * Ensure that compression settings are not lost if initializing ``CompImageHDU``\n    without data but with compression settings and setting the data later\n  * Make sure that keywords are properly updated when setting the header of a\n    ``CompImageHDU`` to an existing image header.\n  * Fix the ability to use ``CompImageHDU.section`` on instances that have not yet\n    been written to disk\n  * Fix the image checksum/datasum in ``CompImageHDU.header`` to be those for the\n    image HDU instead of for the underlying binary table. [#15474]\n\n- Fix a spurious exception when reading integer compressed images with blanks. [#17099]\n\n- Fix creating ``CompImageHDU`` from header with BSCALE/BZERO: keywords are now\n  ignored, as done in ``ImageHDU``. [#17237]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Making the \"votable.parquet\" format available as a reader format to ensure\n  consistency with the writer formats, even though the format it recognised\n  automatically by \"votable\". [#16488]\n\n- Explicitly set ``usedforsecurity=False`` when using ``hashlib.md5``. Without this, ``hashlib.md5`` will be blocked in FIPS mode.\n  FIPS (Federal Information Processing Standards) is a set of standards created by NIST (National Institute of Standards and Technology) for US government agencies regarding computer security and interoperability.\n  This affects validation results ingestion. [#17156]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed the output representation of models with parameters that have\n  units of ``dimensionless_unscaled``. [#16829]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed accuracy of sigma clipping for large ``float32`` arrays when\n  ``bottleneck`` is installed. Performance may be impacted for computations\n  involving arrays with dtype other than ``float64``. This change has no impact\n  for environments that do not have ``bottleneck`` installed. [#17204]\n\n- Fix an issue in sigma-clipping where the use of ``np.copy()`` was causing\n  the input data mask to be discarded in cases where ``grow`` was set. [#17402]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a bug where column names would be lost when instantiating ``Table`` from a list of ``Row`` objects. [#15735]\n\n- Aggregating table groups for ``MaskedColumn`` now ensures that fully-masked\n  groups result in masked elements rather than ``NaN``. [#16498]\n\n- Ensure that tables holding coordinates or representations can also be stacked\n  if they have zero length. This fix also ensures that the ``insert`` method\n  works correctly with a zero-length table holding a coordinate object. [#17380]\n\n- Fixed table aggregate with empty columns when float is present. [#17385]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Allow SI-prefixes for radioactivity units ``becquerel`` and ``curie`` in ``astropy.units.si``, conforming to BIPM's guidelines for SI units. [#16529]\n\n- The OGIP unit parser no longer accepts strings where a component unit is\n  followed by a parenthesized unit without a separator in between, such as\n  ``'m(s)'`` or ``'m(s)**2'``.\n  Such strings are not allowed by the OGIP standard. [#16749]\n\n- A few edge cases that could result in a power of a unit to be a numerical value\n  from ``numpy``, instead of the intended Python ``int``, ``float`` or\n  ``fractions.Fraction`` instance, have been fixed. [#16779]\n\n- The OGIP unit parser now detects negative powers that are not enclosed in\n  parenthesis.\n  For example, ``u.Unit(\"s**-1\", format=\"ogip\")`` now raises an error because the\n  OGIP standard expects the string to be written as ``\"s**(-1)\"`` instead, but it\n  is still possible to parse the unit with\n  ``u.Unit(\"s**-1\", format=\"ogip\", parse_strict=\"warn\")`` or\n  ``parse_strict=\"silent\"``. [#16788]\n\n- ``UnitScaleError`` can now be imported from the ``astropy.units`` namespace. [#16861]\n\n- Parsing custom units with ``u.Unit()`` using the ``\"vounit\"`` format now obeys\n  the ``parse_strict`` parameter, unless the custom units are made explicit with\n  quotation marks.\n  For example, ``u.Unit(\"custom_unit\", format=\"vounit\")`` now raises an error,\n  but ``u.Unit(\"custom_unit\", format=\"vounit\", parse_strict=\"silent\")`` or\n  ``u.Unit(\"'custom_unit'\", format=\"vounit\")`` do not. [#17232]\n\n- It is now possible to use ``Unit`` to create dimensionless units with a scale\n  factor that is a complex number or a ``fractions.Fraction`` instance.\n  It was already possible to create such units directly with ``CompositeUnit``. [#17355]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed the unintended behavior where the IERS-A file bundled in ``astropy-iers-data`` would be ignored if automatic updating of the IERS-A file were disabled or if downloading the new file failed. [#16187]\n\n- Ensure ``MaskedQuantity`` can be initialized with a list of masked\n  quantities (as long as their shapes match), just like regular\n  ``Quantity`` and ``ndarray``. [#16503]\n\n- For ``Masked`` instances, ``np.put``, ``np.putmask``, ``np.place`` and\n  ``np.copyto`` can now handle putting/copying not just ``np.ma.masked`` but\n  also ``np.ma.nomask``; for both cases, only the mask of the relevant entries\n  will be set. [#17014]\n\n- Explicitly set ``usedforsecurity=False`` when using ``hashlib.md5``. Without this, ``hashlib.md5`` will be blocked in FIPS mode.\n  FIPS (Federal Information Processing Standards) is a set of standards created by NIST (National Institute of Standards and Technology) for US government agencies regarding computer security and interoperability.\n  This affects download caching. [#17156]\n\n- Fixed a bug where an old IERS-A table with stale predictive values could trigger\n  the download of a new IERS-A table even if automatic downloading was disabled. [#17387]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Avoid a ``RuntimeWarning`` in ``WCS.world_to_array_index`` by converting\n  NaN inputs to int. [#17236]\n\n\nPerformance Improvements\n------------------------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- The performance of guessing the table format when reading large files with\n  ``astropy.io.ascii`` has been improved. Now the process uses at most\n  10000 lines of the file to check if it matches the format. This behavior can\n  be configured using the ``astropy.io.ascii.conf.guess_limit_lines``\n  configuration item, including disabling the limit entirely. [#16840]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Optimize checksum computation. [#17209]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Improved the performance of 1D models, models with scalar parameters, and models\n  without units, when evaluating them with scalar or small arrays of inputs. For\n  models that satisfy all of the conditions above, the improvement can be on the\n  order of 30-40% in execution time. [#16670]\n\n- Performance of most non-linear fitters has been significantly improved by reducing the overhead in evaluating models inside the objective function. [#16673]\n\n- Improved the performance of ``parallel_fit_dask`` by avoiding unnecessary copies of the\n  model inside the fitter. [#17033]\n\n- ``CompoundModel`` now implements numerical derivatives of parameters when using the +, -, * or / operators. This improves the speed of fitting these models because numerical derivatives of the parameters are not calculated. [#17034]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- The performance of biweight_location, biweight_scale,\n  biweight_midvariance, and median_absolute_deviation has been improved by\n  using the bottleneck nan* functions when available. This requires the\n  bottleneck optional dependency to be installed. [#16967]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The ``units.quantity_input`` decorator has been optimized, especially in the case that no equivalencies are provided to the decorator, and the speed-up is very noticeable when wrapping short functions. [#16742]\n\n- Parsing composite units with the OGIP formatter is now up to 25% faster. [#16761]\n\n- Parsing units with scale factors is now up to 50% faster. [#16813]\n\n- Parsing strings representing non-composite units with ``Unit`` is now up to 25%\n  faster. [#17004]\n\n- Converting composite units to strings with the ``\"cds\"``, ``\"fits\"``,\n  ``\"ogip\"`` and ``\"vounit\"`` formatters is now at least twice as fast. [#17043]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Removed redundant transformations when WCSAxes determines the coordinate ranges\n  for ticks/gridlines, which speeds up typical plot generation by ~10%, and by\n  much more if ``astropy.visualization.wcsaxes.conf.coordinate_range_samples`` is\n  set to a large value [#16366]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated minimum supported Python version to 3.11. As a result, minimum\n  requirements were updated to compatible versions.\n  Astropy now requires\n  - ``numpy>=1.23.2``\n  - ``PyYAML>=6.0.0``\n  - ``packaging>=22.0.0`` [#16903]\n\n- The minimum supported version of Pandas is now v2.0.\n  This is in line with https://scientific-python.org/specs/spec-0000/. [#16308]\n\n- Update minimal recommendation for matplotlib from version 3.3.4 to 3.6.0 [#16557]\n\n- The Contributor documentation has been significantly improved. It now includes a\n  Quickstart Guide with concise instructions on setting up a development environment and\n  making a pull request. In addition, the developer documentation was reorganized and\n  simplified where possible to improve readability and accessibility. [#16561]\n\nVersion 6.1.7 (2024-11-22)\n==========================\n\nBug Fixes\n---------\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fix an issue in sigma-clipping where the use of ``np.copy()`` was causing\n  the input data mask to be discarded in cases where ``grow`` was set. [#17402]\n\nVersion 6.1.6 (2024-11-11)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed instantiating ``Angle`` from a ``pandas`` ``Series`` object. [#17358]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed calling ``np.nanvar`` and ``np.nanstd`` with ``Quantity`` ``out`` argument. [#17354]\n\n\nVersion 6.1.5 (2024-11-07)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure that coordinates can be transformed to other coordinate frames\n  also if they have size zero (i.e., hold empty data arrays). [#17013]\n\n- ``Longitude`` and ``Latitude`` can no longer be initialized with strings\n  ending in \"N\" or \"S\", and \"E\" or \"W\", respectively, since those suggest\n  the other type. [#17132]\n\n- ``np.nanvar(angle)`` now produces a ``Quantity`` with the correct\n  unit, rather than raising an exception. [#17239]\n\n- Fix a crash when instantiating ``Angle`` (or ``Latitude``, or ``Longitude``)\n  from a non-numpy array (for instance pyarrow arrays). [#17263]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix access to VLA columns after slicing ``.data``. [#16996]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Updated xml writer for VOTable Resource elements to include groups. [#17344]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Add support for positional only and keyword only arguments when using the ``support_nddata`` decorator. [#17281]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed a bug where float32 inputs to sigma_clip and SigmaClip were\n  changed to float. [#17086]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a crash when calling ``Column.pprint`` on a scalar column. [#15749]\n\n- Ensure that setting an existing column to a scalar always properly fills it\n  (rather than breaking the table if there was only one column in it). [#17105]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The unit parsers are now better at recognizing unusual composite\n  units:\n\n  - units involving special unicode symbols, like \"L☉/pc²\";\n  - units that include CDS units ending in a 0, like \"eps0/s\";\n  - units including the degree symbol, \"°\". For example, \"°C/s\" is no\n    longer incorrectly interpreted as \"°C/s^2\". [#17011]\n\n- Converting the ohm to a string with the OGIP unit formatter (e.g.\n  ``f\"{u.ohm:ogip}\"``) previously produced the string ``'V / A'``, but now\n  produces ``'ohm'`` as expected. [#17200]\n\n- The ``OGIP`` unit formatter now handles the unit ``day`` and the corresponding\n  string ``\"d\"`` in full compliance with the standard. [#17216]\n\n- The ``\"ogip\"`` unit format now represents the unit angstrom as ``\"angstrom\"``\n  instead of ``\"0.1 nm\"``. [#17241]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Ensure that queries of ``.ut1_utc()`` and ``.pm_xy()`` return the correct\n  results also when passing in an empty array of times. [#17013]\n\n- Fixed a bug where astropy's logger wouldn't perform lazy string interpolation. [#17196]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that caused ``CoordinateHelper.get_axislabel()`` to return an\n  empty string instead of the default label if no label has been explicitly\n  provided. [#17175]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed a bug that caused ``WCS.slice`` to ignore ``numpy_order`` and always\n  interpret the slices as if ``numpy_order`` was ``True``, in the specific case\n  where the slices were such that dimensions in the WCS would be dropped. [#17147]\n\nVersion 6.1.4 (2024-09-26)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Keep ``Latitude`` from printing long input arrays in their entirety when failing\n  limits check in ``_validate_angles``, indicating their range instead. [#13997]\n\n- Avoid some components not being included in table output of coordinates if\n  the representation type was ``\"unitspherical\"``.\n\n  In the process, also ensured that one can pass in the ``radial_velocity``\n  keyword argument if one uses ``differential_type=\"radial\"``. [#16999]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Ensure proper handling of null values during BINARY2 serialization. Previously, masks were handled in two different ways for BINARY2 serialization, resulting in incorrect handling of null values and errors. [#16091]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed a bug in biweight_location, biweight_scale, and\n  biweight_midvariance where the returned array shape would be wrong if\n  the input array had an axis length of 1 along any axis that was not\n  included in the axis keyword. Also fixed a bug in these same functions\n  where for constant data and axis set to a tuple containing all axes, the\n  returned value would be NaN instead of the constant value. [#16964]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Ensure that initializing a ``QTable`` with explicit units` also succeeds if\n  one of the units is ``u.one``. [#17048]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- An exception is now raised if it is attempted to create a unit with a\n  scale of zero, avoiding bugs further downstream (including surprising\n  ones, such as a comparison of ``np.ma.masked == u.one`` leading to\n  a ``ZeroDivisionError``). [#17048]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix a bug that caused the results from local_partial_pixel_derivative to be incorrect when using normalize_by_world=True (the matrix was previously normalized along the wrong axis) [#17003]\n\n\nOther Changes and Additions\n---------------------------\n\n- Minimal requirement for (optional dependency) matplotlib was bumped\n  to 3.5.0, which is the oldest version with support for Python 3.10 [#16993]\n\nVersion 6.1.3 (2024-08-30)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix reading zero-width columns such as 0A fields. [#16894]\n\n- Ensure that ``QTable``, like ``Table``, can read zero-length string columns,\n  and not convert them to length 1 strings. In the process, avoid a needless\n  copy of all the data for ``QTable``. [#16898]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fix KeyError when parsing certain VOTables. [#16830]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed the ``fit_deriv`` calculations in the ``Lorentz1D`` model. [#16794]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Pretty-printing of Tables now also works in the presence of zero-length string\n  columns (which sometimes are present in FITS tables). [#16898]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix the return type for ``np.broadcast_arrays`` on a single ``Masked``\n  instance: it now correctly returns a 1-element sequence instead of a single\n  array, just like would be the case with a regular array. [#16842]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix a bug where ``wcs_info_str``'s results would look different in numpy 2 VS\n  numpy 1. [#16586]\n\n\nOther Changes and Additions\n---------------------------\n\n- The minimum required version of PyArrow is now v7.0.0. [#16785]\n\nVersion 6.1.2 (2024-07-23)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- When reading CDS and MRT files, only interpret a line as a section delimiter if\n  it contains exclusively dashes or equal signs. This enables rows starting with dashes. [#16735]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix a spurious exception when reading integer compressed images with blanks. [#16550]\n\n- Fixed a crash that occurred for files opened via\n  ``fits.open(..., mode='update')``, on Windows, and with numpy 2.0 installed.\n  A warning is now emitted in cases most likely to escalate into\n  undefined behavior (e.g., segfaults), i.e., when a closed memory map object is\n  still referenced by external code. Please report any regression found. [#16581]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug that caused models returned by non-linear fitters to have\n  ``sync_constraints`` set to `False`, which caused constraints accessed through, e.g.,\n  ``Model.fixed`` to not be in sync with the ``fixed`` attribute of the parameters. [#16664]\n\n- Fixed a bug that caused ``CompoundModel.without_units_for_data`` to return an\n  incorrectly constructed model when the compound model contained a * or /\n  operation, and which also caused fitting to not work correctly with compound\n  models that contained * or / operations. [#16678]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The OGIP parser is now less restrictive with strings that represent a unit that\n  includes the ``sqrt`` function.\n  For example, ``u.Unit(\"sqrt(m)**3\", format=\"ogip\")`` no longer causes a\n  ``ValueError``. [#16743]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed an edge-case bug in ``overlap_slices`` where the function could\n  return an empty slice for non-overlapping slices. [#16544]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a WCSAxes bug when overlaying a frame with default units that are not degrees. [#16662]\n\n\nVersion 6.1.1 (2024-06-14)\n==========================\n\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Let fitsdiff compare files with lower case HIERARCH keywords [#16357]\n\n- Fix writing a ``HDUList`` to file when numpy 2 is installed and at least some of\n  the data is represented as dask arrays. [#16384]\n\n- Fix display of diff reports with numpy 2. [#16426]\n\n- Ensure that also zero-length tables preserve whether integer data are\n  signed or unsigned. [#16505]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Fix YAML table serialization compatibility with numpy 2. [#16416]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fix bugs in io.votable related to numpy 2's representation of scalars. [#16442]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Ensure that return types from ``sigma_clip`` ``cenfunc`` and ``stdfunc``\n  are np.float64 for scalar values. [#16431]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Ensure structured ``MaskedColumn`` are serialized correctly, including\n  the mask. [#16380]\n\n- Fix problems converting Pandas Series to ``Table`` with numpy >=2.0. [#16439]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Ensure Time in ymdhms format can also be serialized to files as part of a\n  table if it is masked. [#16380]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Ensure Masked versions of ``np.recarray`` will show the correct class\n  name of ``MaskedRecarray`` in their ``repr``, and that they will be\n  serialized correctly if part of a table. [#16380]\n\n- Fix bugs with how masked structured arrays were represented with numpy 2. [#16443]\n\n- ``MaskedQuantity`` now works properly with ``np.block``. [#16499]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fix a bug where ``WCSAxes`` could be missing negative signs on axis labels when using matplotlib's ``usetex`` mode. [#16406]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix compilation with gcc 14, avoid implicit pointer conversions. [#16450]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled WCSLIB version to 8.3. This update changes the behavior of\n  various ``*set`` functions in order to improve stability of WCSLIB in threaded\n  applications. For a full list of changes - see ``astropy/cextern/wcslib/CHANGES``. [#16451]\n\nVersion 6.1.0 (2024-05-03)\n==========================\n\nNew Features\n------------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``BaseCoordinateFrame`` now has a ``position_angle()`` method, which is the\n  same as the ``position_angle`` method of ``SkyCoord`` instances. [#15737]\n\n- By default the ``SkyCoord`` and ``BaseCoordinateFrame`` ``separation()``\n  methods now emit a warning if they have to perform a coordinate transformation\n  that is not a pure rotation to inform the user that the angular separation can\n  depend on the direction of the transformation.\n  It is possible to modify this behaviour with the new optional keyword-only\n  ``origin_mismatch`` argument.\n  Specifying ``origin_mismatch=\"ignore\"`` allows any transformation to\n  succeed without warning, which has been the behaviour so far.\n  ``origin_mismatch=\"error\"`` forbids all transformations that are not\n  pure rotations. [#16246]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Clearer error message in reading ASCII tables when there is\n  a mismatch between converter type and column type. [#15991]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- The module ``astropy.io.typing`` has been added to provide type annotations for\n  I/O-related functionality. [#15916]\n\nastropy.samp\n^^^^^^^^^^^^\n\n- SAMP web profile CORS HTTP server implements `Private Network Access proposal <https://wicg.github.io/private-network-access>`_. [#16193]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table`` now has a ``setdefault()`` method, analogous to\n  ``dict.setdefault()``. [#16188]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added a new module ``astropy.units.typing`` that provides support for type annotations related to\n  ``astropy.units``. [#15860]\n\n- Added a new CGS unit Oersted. [#15962]\n\n- Added \"surface brightness\", \"surface brightness wav\", \"photon surface brightness\", and \"photon surface brightness wav\" to recognized physical types. [#16032]\n\n- Added magnetic helicity as a physical type. [#16101]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- For gufuncs on ``Masked`` instances, add support for the ``axes`` argument. [#16121]\n\n- ``Masked`` instances now support the various numpy array set operations, such\n  as ``np.unique`` and ``np.isin``. [#16224]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Added support for slicing WCS objects containing ``cpdis`` or ``det2im`` distortions, which previously were ignored. [#16163]\n\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``astropy.coordinates.transformations`` module has been refactored into a module.\n  There should be no user-visible changes, but if you notice any, please open an\n  Issue. [#15895]\n\n- Changed the default value of the ``copy`` argument in\n  ``astropy.coordinates.representation.CylindricalDifferential.__init__`` from\n  ``False`` to ``True``, which is the intended behaviour for all subclasses of\n  ``astropy.coordinates.representation.BaseDifferential``. [#16198]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- ``Cosmology`` and its subclasses are now frozen ``dataclass`` objects. [#15484]\n\n- The argument ``verbose`` in the function ``z_at_value`` is now keyword-only. [#15855]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- The ``io.ascii`` Python and C table readers were updated to use a 64-bit integer field by\n  default when reading a column of integer numeric data. This changes the default behavior\n  on Windows and potentially 32-bit architectures. Previously on those platforms, table\n  columns with any long integers which overflowed the 32-bit integer would be returned\n  as string columns. The new default behavior is consistent with ``numpy`` v2 and ``pandas``. [#16005]\n\n- The parallel fast-reader parser for reading ASCII files has been removed.\n  Since astropy v4.0.4 requesting this option has issued a warning that\n  this option is broken and that the serial parser will be used.\n  The ``parallel`` key in the ``fast_reader`` argument for reading\n  ASCII tables is no longer available. [#16103]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``show_in_notebook`` is deprecated and it is recommended to use dedicated\n  tools in the Jupyter ecosystem to create interactive plots in notebooks. [#15905]\n\n- A warning is now emitted when ``Quantity`` values are inserted into empty ``Column`` objects\n  via ``Table.insert_row`` or ``Table.add_row``. [#16038]\n\n- ``show_in_browser`` is deprecated (pending feedback from the community).\n  Please use https://github.com/astropy/astropy/issues/16067 if you are\n  actively using the function. [#16068]\n\n- ``TableColumns.setdefault()``  and ``TableColumns.update()`` methods (which\n  would typically be called as ``Table.columns.setdefault()`` and\n  ``Table.columns.update()``) have been deprecated because they can easily\n  corrupt the ``Table`` instance the ``TableColumns`` instance is attached to.\n  The ``Table.setdefault()`` and ``Table.update()`` methods are safe. [#16154]\n\nastropy.time\n^^^^^^^^^^^^\n\n- ``TIME_FORMATS`` and ``TIME_DELTA_FORMATS`` in ``astropy.time.formats``\n  are changed from ``OrderedDict`` to Python ``dict``. [#15491]\n\n- A ``FutureWarning`` is now emitted when mutating ``Time.location`` post-initialization. [#16063]\n\n- Following the removal of ``np.ndarray.ptp`` in Numpy v2, ``Time.ptp`` is now\n  deprecated in favor of ``np.ptp``. [#16212]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- If any iterable such as a list of tuple was input to ``Quantity``, a check was\n  done to see if they contained only quantities, and, if so, the quantities were\n  concatenated.  This makes sense for list and tuple, but is not necessarily\n  logical for all iterables and indeed was broken for those that do not have a\n  length (such as ``array_api`` array instances). Hence, the check will now be\n  done only for values where it makes sense, i.e., instances of list and tuple. [#15752]\n\n- Units now exposes ``get_converter`` which returns a function that\n  will convert a scalar or array from one unit to another. This can be\n  useful to speed up code that converts many quantities with the same\n  unit to another one, especially if the quantity has not many elements,\n  so that the overhead of creating a conversion function is relatively large. [#16139]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Deprecate importing ``ErfaError`` and ``ErfaWarning`` from ``astropy.utils.exceptions``.\n  They should be imported directly from ``erfa`` instead. [#15777]\n\n- ``introspection.isinstancemethod()`` and ``introspection.find_mod_objs()`` are\n  deprecated. [#15934]\n\n- ``astropy.utils.console.terminal_size`` is now deprecated in favour of\n  ``shutil.get_terminal_size`` from the standard library. [#16045]\n\n- ``indent()`` is deprecated.\n  Use ``textwrap.indent()`` from Python standard library instead. [#16223]\n\n- Unmasked ``Masked`` scalar instances are now considered hashable, to match the\n  implicit behaviour of regular arrays, where if an operation leads to a scalar,\n  a hashable array scalar is returned. [#16224]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Renamed the ``min_cut`` and ``max_cut`` keywords in ``simple_norm`` and\n  ``fits2bitmap`` to ``vmin`` and ``vmax``. The old names are deprecated. [#15621]\n\n- If ``vmin == vmax``, the ``ImageNormalize`` class now maps the input\n  data to 0. If ``vmin > vmax``, the ``ImageNormalize`` class now raises a\n  ``ValueError``. [#15622]\n\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Avoid a segfault when calling ``astropy.convolution.convolve`` on an empty array.\n  An exception is now raised instead. [#15840]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Previously passing a ``SkyCoord`` instance to the ``BaseCoordinateFrame``\n  ``separation()`` or ``separation_3d()`` methods could produce wrong results,\n  depending on what additional frame attributes were defined on the ``SkyCoord``,\n  but now ``SkyCoord`` input can be used safely. [#15659]\n\n- ``Distance`` now accepts as ``parallax`` any angle-like value.\n  This includes types like ``Column`` which have a unit but are not ``Quantity`` subclasses. [#15712]\n\n- The new default for the class method ``SkyCoord.from_name()``\n  is to look for coordinates first in SIMBAD, then in NED, and then in VizieR,\n  instead of having no specific order. [#16046]\n\n- Fix ``Angle.to_string()`` for angles in degrees represented in 'hms' and angles in hours represented in 'dms'. [#16085]\n\n- Fix a bug where ``SkyCoord.spherical_offsets_by`` would crash when a wrap\n  was needed. [#16241]\n\n- ``search_around_3d()`` now always raises a ``UnitConversionError`` if the units\n  of the distances in ``coord1`` and ``coord2`` and the unit of ``distlimit`` do\n  not agree.\n  Previously the error was not raised if at least one of the coordinates was\n  empty. [#16280]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where the attribute ``ParametersAttribute.attr_name`` could be None\n  instead of a string. [#15882]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Reading of CDS header files with multi-line descriptions where the continued line started with a number was broken. This is now fixed. [#15617]\n\n- Ensure that the names of mixin columns are properly propagated as\n  labels for the MRT format. [#15848]\n\n- Fixed reading IPAC tables for ``long`` column type on some platforms, e.g., Windows. [#16005]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Avoid ``WinError 1455`` in opening some large files with memory\n  mapping on windows. [#15388]\n\n- Fix TDISP parsing for floating numbers. [#16007]\n\n- Fix a crash when calling FITS ``writeto`` methods with stdout as the output stream. [#16008]\n\n- Fix TDISP parsing for floating numbers in formats ES / EN. [#16015]\n\n- Fix conversion of ``Table`` to ``BinTableHDU`` with ``character_as_bytes=True``. [#16358]\n\n- Improved error message when instantiating a fits table with an ill-formed array. [#16363]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Reading an empty table stored in parquet format now creates an empty\n  table instead of raising an unexpected error. [#16237]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- When reading a VOTable, if some user-requested columns were not present then the\n  resulting error message previously listed all the requested column names.\n  Now only columns that are actually missing are shown. [#15956]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fix a spurious warning when calling ``sigma_clipped_stats`` on a ``MaskedColumn``. [#15844]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a Table bug when setting items (via slice or index list) in a ``bytes`` type\n  ``MaskedColumn`` would cause the column mask to be set to all ``False``. A common way to\n  trigger this bug was reading a FITS file with masked string data and then sorting the\n  table. [#15669]\n\n- Fix slicing logic for Row.\n  Previously, slicing a ``astropy.table.row.Row`` object would incorrectly return a column,\n  now it correctly returns a list of values from that row. [#15733]\n\n- Fix a ``ValueError`` raised by ``table.join`` when fed with large tables.\n  This would typically happen in situations when the result joined table would be\n  too large to fit in memory. In those situations, the error message is now much more\n  clearly about the necessary memory size. [#15734]\n\n- Fix an unintended exception being raised when attempting to compare two unequal ``Table`` instances. [#15845]\n\n- Ensure that if a ``Column`` is initialized with a ``Quantity`` it will use by\n  default a possible name defined on the quantity's ``.info``. [#15848]\n\n- Fix a bug where columns with ``dtype=object`` wouldn't be properly deep-copied using ``copy.deepcopy``. [#15871]\n\n- Fix ``hasattr(Table, \"iloc\")`` raising an exception, preventing use of tables e.g. with scikit-learn. [#15913]\n\n- Calling ``Table.group_by`` on an empty table no longer raises an exception. [#16093]\n\n- The unit conversion ``convert_unit_to`` with MaskedColumn was\n  broken as it was storing the old unit in a dictionary attached\n  to underlying np.ma.MaskedArray. This fixes it by overwriting\n  the old unit after unit conversion. [#16118]\n\n- ``astropy.table.vstack`` will no longer modify the input list even when it\n  contains non-Table objects like ``astropy.table.Row``. [#16130]\n\n- Update old dataTables.js version.\n  This should not affect the end user. [#16315]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix comparing NaN ``Quantity`` with ``TimeDelta`` object. [#15830]\n\n- Scalar ``Time`` instances are now hashable if they are not masked, also if one\n  uses ``Masked`` internally, matching the behaviour prior to astropy 6.0 (and\n  the current behaviour when masking using ``np.ma.MaskedArray``). [#16224]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fix rare signature incompatibilities between helper and helped array functions.\n  Most involve cases where the corresponding numpy function has had its\n  arguments renamed between numpy versions. Since all those generally changed\n  the first arguments, which are typically passed as positional arguments,\n  this should not affect user code.\n  Affected functions:\n  - ``numpy.array_str``\n  - ``numpy.choose``\n  - ``numpy.convolve``\n  - ``numpy.correlate``\n  - ``numpy.histogram``\n  - ``numpy.histogramdd``\n  - ``numpy.histogram2d``\n  - ``numpy.isin``\n  - ``numpy.inner``\n  - ``numpy.nanmedian``\n  - ``numpy.unique``\n  - ``numpy.matrix_rank``\n  - ``numpy.unwrap``\n  - ``numpy.vdot``\n  - ``numpy.lib.recfunctions.unstructured_to_structured`` [#15710]\n\n- Fix an issue with unicode string representations of units shown as\n  superscripts (like degree) when raised to some power. Like for\n  LaTeX representations, now the superscript unicode character is\n  replaced by the literal short name before adding the power. [#15755]\n\n- Fix a missing ``Sun`` unit in the list of VOUnits simple_units. [#15832]\n\n- Fix an unhelpful ``TypeError`` when attempting truediv, ``lshift`` (``<<``) or ``mul`` (``*``) or ``truediv`` (``/``) with a ``Unit`` for right operand and a numpy array with non-numerical dtype for left operand. [#15883]\n\n- Fix write/read roundtrips with empty ``Table`` dumped to ECSV. [#15885]\n\n- Fix a bug where LaTeX formatter would return empty strings for unity (1) input. [#15923]\n\n- Fix extraneous space in LaTeX repr for ``Quantity`` objects with superscript\n  units (e.g. angles or temperatures in degree Celsius). [#16043]\n\n- Ensure powers of units are consistently as simple as possible. So, an\n  integer if possible, otherwise a float, or a fraction if the float is\n  really close to that. This also ensures the hash of a unit is unique\n  for any given unit (previously, the same power could be represented as\n  float, int or fraction, which made the hash different). [#16058]\n\n- Ensure that ``find_equivalent_units`` only returns actual units, not units\n  that raised to some power match the requested one.  With this fix,\n  ``(u.m**-3).find_equivalent_units()`` properly finds nothing, rather than all\n  units of length. [#16127]\n\n- Using a dimensionless ``Quantity`` as an exponent works anew.\n  In astropy 6.0.1 an exception was erroneously raised. [#16261]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix rare signature incompatibilities between helper and helped array functions.\n  These typically cover corner cases and should not affect user code.\n  Some arguments weren't being re-exposed correctly or at all, depending on\n  numpy's version.\n  Affected functions:\n  - ``numpy.broadcast_arrays``\n  - ``numpy.median``\n  - ``numpy.quantile``\n  - ``numpy.empty_like``\n  - ``numpy.ones_like``\n  - ``numpy.zeros_like``\n  - ``numpy.full_like`` [#16025]\n\n- Fix a bug where ``astropy.utils.console.Spinner`` would leak newlines for\n  messages longer than terminal width. [#16040]\n\n- Update ``report_diff_values`` so the diff no longer depends on the\n  console terminal size. [#16065]\n\n- Fix support in ``Masked`` for generalized ufuncs with more than a\n  single core dimension (such as ``erfa.rxp``). [#16120]\n\n- ``Masked`` array instances now deal more properly with structured dtypes,\n  combining field masks to get element masks for generalized ufuncs, and\n  allowing ``.view()`` any time the mask can be viewed as well. This allows a\n  larger number of ``erfa`` routines to work with masked data. [#16125]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- ``WCSAxes`` will correctly set certain defaults when ``wcs.world_axis_physical_types`` contains ``custom:`` prefixes. [#15626]\n\n- Fix an edge case where ``quantity_support`` would produce duplicate tick labels for small data ranges. [#15841]\n\n- Fix a bug where ``AngleFormatterLocator`` and ``ScalarFormatterLocator`` wouldn't respect matplotlib.rc's ``axes.unicode_minus`` parameter. [#15902]\n\n- Fixed a bug in ``CoordinateHelper.grid`` method to properly handle ``draw_grid=False`` and ``draw_grid=None``,\n  ensuring grid lines are controlled correctly even when not explicitly called. [#15985]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Updated bundled WCSLIB version to 8.2.2. This update fixes character buffer\n  overflows in the comment string for the longitude and latitude axes triggered\n  by some projections in ``wcshdo()``, and also the formatting for generic\n  coordinate systems. For a full list of changes - see\n  http://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES or\n  ``astropy/cextern/wcslib/CHANGES`` [#15795]\n\n- Fixed a bug in ``fit_wcs_from_points`` that does not set the default value of the ``cdelt`` of the returned WCS object. [#16027]\n\n- Fixed a bug in ``DistortionLookupTable`` (which implements ``cpdis`` and ``det2im`` projection corrections to a WCS) in which image pixels received an incorrect distortion value, from a location in the lookup table incorrectly offset by about 1 table pixel. [#16163]\n\n\nOther Changes and Additions\n---------------------------\n\n- Update minimum supported Python version to 3.10 [#15603]\n\n- The minimum required NumPy version is now 1.23 and the minimum required SciPy version is 1.8. [#15706]\n\n- Fix loading parser tabs on pyc-only installations.\n\n  Fix a bug in the wrappers for the lex and yacc wrappers that are\n  used for parsing Astropy units so that they work on pyc-only\n  installations.\n\n  According to the Python module loading\n  `flow chart <https://peps.python.org/pep-3147/#flow-chart>`_, when evaluating\n  ``import foo`` and ``foo.py`` is not found, Python then reads ``foo.pyc``.\n\n  One can take advantage of this fact to strip source files and leave only Python\n  bytecode files for deployment inspace-constrained execution environments such\n  as AWS Lambda. Astropy is now compatible with pyc-only deployments. [#16159]\n\n- Change the default value of ``copy`` arguments in public APIs from ``False`` to\n  ``None`` if Numpy 2.0 or newer is installed.\n  For details, see the \"Copy semantics\" section on the What's New page for Astropy 6.1 . [#16181]\n\n- astropy is now compiled against NumPy 2.0, enabling runtime compatibility\n  with this new major release. Compatibility with NumPy 1.23 and newer\n  versions of NumPy 1.x is preserved through this change. [#16252]\n\nVersion 6.0.1 (2024-03-25)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Previously passing a ``SkyCoord`` instance to the ``BaseCoordinateFrame``\n  ``separation()`` or ``separation_3d()`` methods could produce wrong results,\n  depending on what additional frame attributes were defined on the ``SkyCoord``,\n  but now ``SkyCoord`` input can be used safely. [#15659]\n\n- ``Distance`` now accepts as ``parallax`` any angle-like value.\n  This includes types like ``Column`` which have a unit but are not ``Quantity`` subclasses. [#15712]\n\n- The new default for the class method ``SkyCoord.from_name()``\n  is to look for coordinates first in SIMBAD, then in NED, and then in VizieR,\n  instead of having no specific order. [#16046]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Reading of CDS header files with multi-line descriptions where the continued line started with a number was broken. This is now fixed. [#15617]\n\n- Ensure that the names of mixin columns are properly propagated as\n  labels for the MRT format. [#15848]\n\n- Fixed reading IPAC tables for ``long`` column type on some platforms, e.g., Windows. [#15992]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix TDISP parsing for floating numbers. [#16007]\n\n- Fix a crash when calling FITS ``writeto`` methods with stdout as the output stream. [#16008]\n\n- Fix TDISP parsing for floating numbers in formats ES / EN. [#16015]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fix a spurious warning when calling ``sigma_clipped_stats`` on a ``MaskedColumn``. [#15844]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a Table bug when setting items (via slice or index list) in a ``bytes`` type\n  ``MaskedColumn`` would cause the column mask to be set to all ``False``. A common way to\n  trigger this bug was reading a FITS file with masked string data and then sorting the\n  table. [#15669]\n\n- Fix slicing logic for Row.\n  Previously, slicing a ``astropy.table.row.Row`` object would incorrectly return a column,\n  now it correctly returns a list of values from that row. [#15733]\n\n- Fix a ``ValueError`` raised by ``table.join`` when fed with large tables.\n  This would typically happen in situations when the result joined table would be\n  too large to fit in memory. In those situations, the error message is now much more\n  clearly about the necessary memory size. [#15734]\n\n- Fix an unintended exception being raised when attempting to compare two unequal ``Table`` instances. [#15845]\n\n- Ensure that if a ``Column`` is initialized with a ``Quantity`` it will use by\n  default a possible name defined on the quantity's ``.info``. [#15848]\n\n- The unit conversion ``convert_unit_to`` with MaskedColumn was\n  broken as it was storing the old unit in a dictionary attached\n  to underlying np.ma.MaskedArray. This fixes it by overwriting\n  the old unit after unit conversion. [#16118]\n\n- ``astropy.table.vstack`` will no longer modify the input list even when it\n  contains non-Table objects like ``astropy.table.Row``. [#16130]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fix an issue with unicode string representations of units shown as\n  superscripts (like degree) when raised to some power. Like for\n  LaTeX representations, now the superscript unicode character is\n  replaced by the literal short name before adding the power. [#15755]\n\n- Fix a missing ``Sun`` unit in the list of VOUnits simple_units. [#15832]\n\n- Fix write/read roundtrips with empty ``Table`` dumped to ECSV. [#15885]\n\n- Fix a bug where LaTeX formatter would return empty strings for unity (1) input. [#15923]\n\n- Ensure powers of units are consistently as simple as possible. So, an\n  integer if possible, otherwise a float, or a fraction if the float is\n  really close to that. This also ensures the hash of a unit is unique\n  for any given unit (previously, the same power could be represented as\n  float, int or fraction, which made the hash different). [#16058]\n\n- Ensure that ``find_equivalent_units`` only returns actual units, not units\n  that raised to some power match the requested one.  With this fix,\n  ``(u.m**-3).find_equivalent_units()`` properly finds nothing, rather than all\n  units of length. [#16127]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix a bug where ``astropy.utils.console.Spinner`` would leak newlines for\n  messages longer than terminal width. [#16040]\n\n- Update ``report_diff_values`` so the diff no longer depends on the\n  console terminal size. [#16065]\n\n- Fix support in ``Masked`` for generalized ufuncs with more than a\n  single core dimension (such as ``erfa.rxp``). [#16120]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fix an edge case where ``quantity_support`` would produce duplicate tick labels for small data ranges. [#15841]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Updated bundled WCSLIB version to 8.2.2. This update fixes character buffer\n  overflows in the comment string for the longitude and latitude axes triggered\n  by some projections in ``wcshdo()``, and also the formatting for generic\n  coordinate systems. For a full list of changes - see\n  http://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES or\n  ``astropy/cextern/wcslib/CHANGES`` [#15795]\n\n- Fixed a bug in ``fit_wcs_from_points`` that does not set the default value of the ``cdelt`` of the returned WCS object. [#16027]\n\nOther Changes and Additions\n---------------------------\n\n- Given the potential breaking changes with the upcoming Numpy 2.0 release,\n  this release pins Numpy<2.0 and support for Numpy 2.0 will be added in the\n  v6.1.0 release.\n\nVersion 6.0.0 (2023-11-25)\n==========================\n\nNew Features\n------------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- The new ``ConfigNamespace.help()`` method provides a convenient way to get\n  information about configuration items. [#13499]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Support has been added to create geodetic representations not just for existing ellipsoids\n  from ERFA, but also with explicitly provided values, by defining a subclass of\n  ``BaseGeodeticRepresentation`` with the equatorial radius and flattening assigned to\n  ``_equatorial_radius`` and ``_flattening`` attributes. [#14763]\n\n- Add ``BaseBodycentricRepresentation``, a new spheroidal representation for bodycentric\n  latitudes and longitudes. [#14851]\n\n- Support Numpy broadcasting over frame data and attributes. [#15121]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Registered a ``latex`` writer for exporting a Cosmology object to a LaTex table. [#14701]\n\n- Added argument ``rename`` to Cosmology's I/O, allowing for input and output symbols to\n  be renamed. [#14780]\n\n- All non-abstract Cosmology subclasses are now automatically registered to work with\n  Astropy's YAML serialization. [#14979]\n\n- Cosmology I/O now auto-identifies the '.tex' suffix with the 'ascii.latex' format. [#15088]\n\n- The ``Cosmology`` class now has a new property to access the parameters of the\n  cosmology: ``.parameters``. This property return a read-only dictionary of all the\n  non-derived parameter values on the cosmology object. When accessed from the class (not\n  an instance) the dictionary contains ``Parameter`` instances, not the values. [#15168]\n\n- The field ``default`` has been added to ``Parameter``. This can be used to introspect\n  the default value of a parameter on a cosmology class e.g. ``LambdaCDM.H0.default``. [#15400]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Add new option ``decompress_in_memory`` to ``fits.open``, to decompress the\n  whole file in memory at once, instead of decompressing the file progressively\n  as data is needed.  Default behavior is better for memory usage but sometimes\n  slow, especially for files with many small HDUs. [#15501]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Add support for Parquet serialization of VOTables. Writing of this\n  serialization is available with using the new ``'votable.parquet'`` format. [#15281]\n\n- Added MIVOT feature through the ``MivotBlock`` class\n  that allows model annotations reading and writing in VOTable. [#15390]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added a ``GeneralSersic2D`` model that can have \"boxy\" or \"disky\"\n  isophotes. [#15545]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- A more flexible and/or compact string representation is now available for\n  ``NDData`` objects which visually indicates masked entries, and provides for\n  better for dask array support. [#14438]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- The new ``Row.get()`` method, analogous to ``dict.get()``, returns the value of\n  the specified column from the row if the column present, otherwise it returns a\n  fallback value, which by default is ``None``. [#14878]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Masked ``Time`` instances now use astropy's own ``Masked`` class internally.\n  This means that ``Masked`` input is now properly recognized, and that masks\n  get propagated also to ``Quantity`` output (such as from a ``TimeDelta``\n  converted to a unit of time), creating ``MaskedQuantity`` instances. [#15231]\n\n- Added a ``TimeDelta`` format ``quantity_str`` that represents the time delta as a string\n  with one or more ``Quantity`` components. This format provides a human-readable\n  multi-scale string representation of a time delta. The default output sub-format is not\n  considered stable in this release, please see https://github.com/astropy/astropy/issues/15485\n  for more information. [#15264]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- Uncertainty ``Distribution`` now support structured data types, and as\n  a result it now works also with ``EarthLocation``. [#15304]\n\n- Uncertainty ``Distribution`` can now be used inside representations, which\n  also allows basic support in ``SkyCoord``. While most calculations work, there\n  are remaining issues.  For instance, the ``repr`` does not show that the\n  coordinates are distributions. [#15395]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add support for gc2gde and gd2gce erfa functions to allow geodetic representations\n  using equatorial radius and flattening. [#14729]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``astropy.utils.metadata.MetaData`` default dictionary can now be\n  set with the ``default_factory`` keyword argument. [#15265]\n\n- ``astropy.utils.decorators.deprecated`` now adds the ``__deprecated__`` attribute to\n  the objects it wraps, following the practice in https://peps.python.org/pep-0702/. [#15310]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Add ``WCSAxes.text_coord`` method to print text using ``SkyCoord`` objects\n  parallel to plotting data points with ``WCSAxes.plot_coord``. [#14661]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Support WCS descriptions of basic planetary coordinate frames. [#14820]\n\n- Updated bundled WCSLIB version to 8.1. This update adds support planetary keywords ``A_RADIUS``, ``B_RADIUS``, ``C_RADIUS``, ``BLON_OBS``, ``BLAT_OBS``, and ``BDIS_OBS`` in ``auxprm`` and adds ``wcsprm::time`` to the ``wcsprm`` struct to record the ``TIME`` axis. This update also includes several bug fixes. For a full list of changes - see http://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES [#15035]\n\n\nAPI Changes\n-----------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Removed deprecated ``ConfigurationMissingWarning`` class and ``update_default_config`` function;\n  There are no replacements as they should no be used anymore. [#15466]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Invalid kernel arithmetic operations now raise a ``KernelArithmeticError`` instead of a\n  bare ``Exception``. [#14728]\n\n- Added base ``KernelError`` error class and removed ``DiscretizationError`` error class (a ``ValueError`` will be raised instead). [#14732]\n\n- ``discretize_model`` will now raise a ``ValueError`` if\n  ``mode='oversample'`` and ``factor`` does not have an integer value. [#14794]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Removed deprecated angle parsing and formatting utilities from ``angle_utilities``.\n  Use the functions from ``angle_formats`` instead. [#14675]\n\n- The deprecated functionality of initializing ``Angle`` or ``Longitude`` from a\n  ``tuple`` is no longer supported. [#15205]\n\n- Angle-related classes and functions have been moved within ``astropy.coordinates``.\n  There is no change to public API as everything moved should still be imported from\n  ``astropy.coordinates``, not a sub-module. If you are using private API, try importing\n  from ``astropy.coordinates`` instead. If you need something that has been moved and is\n  not available in ``astropy.coordinates``, please open an issue on the Astropy issue\n  tracker. [#15220]\n\n- It is no longer possible to pass frame classes to the ``transform_to()`` method\n  of a low-level coordinate-frame class. It is still possible to pass frame\n  instances. The ``transform_to()`` method of the high-level ``SkyCoord`` class\n  is unaffected. [#15500]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Removed support of importing private constants and functions from ``astropy.cosmology.flrw``. [#14672]\n\n- Removed deprecated Cosmology Parameter argument ``fmt``. [#14673]\n\n- Removed deprecated ``vectorize_if_needed`` and ``inf_like`` from ``cosmology.utils``. [#14677]\n\n- Removed deprecated import paths from ``astropy.cosmology.core``. [#14782]\n\n- Cosmology ``Parameter`` is now a ``dataclass``, and can work with all of Python's dataclasses\n  machinery, like field introspection and type conversion. [#14874]\n\n- A new property -- ``scale_factor0`` -- has been added to Cosmology objects.\n  This is the scale factor at redshift 0, and is defined to be 1.0. [#14931]\n\n- Added registration label ``ascii.latex`` to Cosmology IO. [#14938]\n\n- The private module ``astropy.cosmology.utils`` has been deprecated. [#14980]\n\n- Removed deprecated ``get_cosmology_from_string`` class method in ``default_cosmology``; use ``get`` instead. [#15467]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Several arguments in functions within ``astropy.io.ascii`` have been deprecated and\n  are either renamed or scheduled to be removed.\n\n  ``read()``:\n  - ``Reader`` will be removed. Instead supply the equivalent ``format`` argument.\n  - ``Inputter`` has been renamed to ``inputter_cls``.\n  - ``Outputter`` has been renamed to ``outputter_cls``.\n\n  ``get_reader()``:\n  - ``Reader`` has been renamed to ``reader_cls``.\n  - ``Inputter`` has been renamed to ``inputter_cls``.\n  - ``Outputter`` has been renamed to ``outputter_cls``.\n\n  ``write()``:\n  - ``Writer`` will be removed. Instead supply the equivalent ``format`` argument.\n\n  ``get_writer()``:\n  - ``Writer`` has been renamed to ``writer_cls``. [#14914]\n\n- Removed deprecated ``astropy.io.ascii.tests.common.raises`` test helper; use ``pytest.raises`` instead. [#15470]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Deprecate ``_ExtensionHDU`` and ``_NonstandardExtHDU`` (use ``ExtensionHDU`` or\n  ``NonstandardExtHDU`` instead). [#15396]\n\n- Remove special handling of TCTYP TCUNI TCRPX TCRVL TCDLT TRPOS (#7157). [#15396]\n\n- Rename and deprecate ``TableHDU.update`` to ``TableHDU.update_header``, for\n  consistency with ``ImageHDU``. [#15396]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Removed deprecated ``astropy.io.misc.asdf`` subpackage. Use ``asdf-astropy`` package instead. [#14668]\n\n- ``fnunpickle`` and ``fnpickle`` are deprecated because they are not used anywhere within ``astropy``.\n  If you must, use the module from Python standard library but be advised that pickle is insecure\n  so you should only unpickle data that you trust. [#15418]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``pedantic`` option from the\n  ``astropy.io.votable.table.parse()`` function and the corresponding configuration\n  setting. Use the ``verify`` option instead. [#14669]\n\n- Class ``astropy.io.votable.tree.Table`` has been renamed to ``TableElement``\n  to avoid sharing the name with ``astropy.table.Table``. [#15372]\n\n- Fully removed support for version = '1.0' on ``VOTableFile__init__()`` and changed its tests to check correctly.\n  It was raising a ``DeprecationWarning`` and now is raising a ``ValueError``. [#15490]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Removed the ``AliasDict`` class from ``modeling.utils``. [#12943]\n\n- Creating a model instance with parameters that have incompatible shapes will\n  now raise a ``ValueError`` rather than an ``IncompatibleShapeError``. [#15209]\n\n- Removal of deprecated code ``_model_to_fit_params`` and ``_fitter_to_model_params`` from ``fitting.py``. [#15461]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- The ``BoxLeastSquares``, ``BoxLeastSquaresResults`` and ``LombScargle`` classes\n  are not available from ``astropy.stats`` anymore, they are now available only\n  from ``astropy.timeseries``. [#15530]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Removed deprecated deprecation, warning, and exception handling functionality provided by ``astropy.tests.helper``. [#14670]\n\n- ``astropy.tests.command.FixRemoteDataOption`` and ``astropy.tests.command.AstropyTest`` are deprecated.\n  They are no longer necessary after sunsetting ``astropy-helpers``. [#15204]\n\nastropy.time\n^^^^^^^^^^^^\n\n- ``Time`` has switched to use ``Masked`` arrays internally, instead of\n  indicating masked values using NaN in the internal ``jd2`` attribute.  As a\n  result, any output from instances, such as one gets with, say, the ``.isot``\n  format, will also use ``Masked`` by default.\n\n  For backwards compatibility, a new configuration item,\n  ``astropy.time.conf.masked_array_type`` is introduced which is set to\n  \"astropy\" by default (which indicates one wants to use ``Masked``), but can\n  also be set to \"numpy\", in which case ``numpy.ma.MaskedArray`` will be used\n  where possible (essentially, for all but ``Quantity``). [#15231]\n\n- Changed the ``TimeDelta`` init signature to be consistent with that of ``Time``.\n  Previously the argument order was ``val, val2, format, scale, copy``. Now the order is\n  ``val, val2, format, scale, *, precision, in_subfmt, out_subfmt, copy``, where the\n  arguments after the ``*`` must be specified by keyword. [#15264]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``midpoint_epoch`` in ``fold`` function; use ``epoch_time`` instead. [#15462]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- The ``.dtype`` attribute exposed by ``Distribution`` is now that of\n  the samples, rather than one that has a \"samples\" entry.  This makes\n  quantities with structured data types and units easier to support, and\n  generally makes the ``Distribution`` appear more similar to regular\n  arrays.  It should have little effect on code.  For instance,\n  ``distribution[\"samples\"]`` still will return the actual distribution.\n\n  As a consequence of this refactoring, most arrays that are not\n  C-contiguous can now be viewed and will thus not be copied on input\n  any more.  The only exceptions are arrays for which the strides are\n  negative.\n\n  Note that the true data type is considered an implementation detail.\n  But for reference, it now is a structured data type with a single\n  field, \"samples\", which itself is an array of \"sample\" fields, which\n  contain the actual data. [#15304]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Like ``np.ndarray``, under numpy 2.0 ``Quantity`` and all its subclasses\n  (``Angle``, ``Masked``, etc.) will no longer support the ``.ptp()`` method.\n  Use ``np.ptp(...)`` instead.\n\n  Similarly, support for the much less frequently used ``.newbyteorder()`` and\n  ``.itemset()`` methods has been removed. [#15378]\n\n- The following deprecated functionality has been removed:\n\n    * ``littleh`` unit and ``with_H0`` equivalency. They are still available from\n      ``cosmology.units``.\n    * ``brightness_temperature`` equivalency no longer automatically swaps the\n      order of its arguments if it does not match the expectation.\n    * ``PhysicalType`` no longer supports ``str`` methods and attributes. [#15514]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Removed deprecated ``OrderedDescriptor``, ``OrderedDescriptorContainer``, and ``set_locale`` in ``astropy.utils.misc``. [#14679]\n\n- ``is_path_hidden()`` and ``walk_skip_hidden()`` are deprecated. [#14759]\n\n- The structure of ``utils.metadata`` has been refactored, but all the available\n  functions and classes are still present and should be imported as before. [#15166]\n\n- The ``astropy.utils.metadata.MetaData`` class, which is used throughout astropy\n  to carry metadata on tables, columns, etc., can now also be used on dataclasses.\n\n  When accessing the meta attribute on a class ``astropy.utils.metadata.MetaData``\n  now returns None instead of itself. [#15237]\n\n- The ``astropy.utils.metadata.MetaData`` class, which is used throughout astropy\n  to carry metadata on tables, columns, etc., can now also be used on frozen dataclasses. [#15404]\n\n- Removed deprecated ``version_path`` in ``minversion`` function; it is no longer used. [#15468]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The ``bboxes``, ``ticklabels_bbox``, and ``tick_out_size`` arguments to ``astropy.visualization.wcaxes.ticklabels.TickLabels.draw()`` now have no effect and are deprecated.\n  This is to allow rasterized ticks to be drawn correctly on WCSAxes. [#14760]\n\n- It is now not possible to pass any keyword arguments to ``astropy.visualization.wcsaxes.WCSAxes.draw()``.\n  Previously passing any keyword arguments would have errored anyway, as ``matplotlib.axes.Axes.draw()`` does not accept keyword arguments. [#14772]\n\n- Deprecated the ``exp`` attribute in the ``LogStretch``,\n  ``InvertedLogStretch``, ``PowerDistStretch``, and\n  ``InvertedPowerDistStretch`` stretch classes, and the ``power``\n  attribute in the ``PowerStretch``. Instead, use the ``a`` attribute,\n  which matches the input keyword. [#15538]\n\n- Removed the maximum value of the ``a`` parameter in the ``AsinhStretch``\n  and ``SinhStretch`` stretch classes. [#15539]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Removed deprecated ``accuracy`` from ``all_world2pix`` method in ``WCS``; use ``tolerance`` instead. [#15464]\n\n- ``NoConvergence`` no longer accepts arbitrary keyword arguments. [#15504]\n\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed minor bug when getting solar system positions of objects from Type 3 SPICE kernel files. [#15612]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The exponent in ``w0wzCDM.de_density_scale`` has been corrected to 3, from -3.\n  This correction has also been made to the scalar ``inv_efunc`` cpython functions. [#14991]\n\n- ``pandas.Series`` are now uniformly converted to their underlying data type when given\n  as an argument to a Cosmology method. [#15600]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Reading a table from FITS now respects the TNULL property of a column, passing\n  it into the column's ``fill_value``. [#14723]\n\n- Fix crash when a PrimaryHDU has a GROUPS keyword with a non-boolean value (i.e.\n  not a random-groups HDU). [#14998]\n\n- Fixed a bug that caused ``Cutout2D`` to not work correctly with ``CompImageHDU.section`` [#14999]\n\n- Fixed a bug that caused compressed images with TFORM missing the optional '1' prefix to not be readable. [#15001]\n\n- Ensure that tables written to FITS with both masked and unmasked columns\n  roundtrip properly (previously, all integer columns would become masked\n  if any column was masked). [#15473]\n\n- Fix segfault with error report in tile decompression. [#15489]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Output of ``repr`` for VOTable instance now clearly shows it is a VOTable and not generic astropy Table. [#14702]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- All models can be pickled now. [#14902]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Restore bitmask propagation behavior in ``NDData.mask``, plus a fix\n  for arithmetic between masked and unmasked ``NDData`` objects. [#14995]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table.as_array`` now respects the ``fill_value`` property of masked columns. [#14723]\n\n- Fix a bug where table indexes were not using a stable sort order. This was causing the\n  order of rows within groups to not match the original table order when an indexed table\n  was grouped. [#14907]\n\n- Fixed issue #14964 that when grouping a Table on a mixin column such as ``Quantity`` or\n  ``Time``, the grouped table keys did not reflect the original column values. For\n  ``Quantity`` this meant that the key values were pure float values without the unit,\n  while for ``Time`` the key values were the pair of ``jd1`` and ``jd2`` float values. [#14966]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Ensure that the ``Time`` caches of formats and scales do not get out\n  of sync with the actual data, even if another instance, holding a view\n  of the data is written to.  E.g., if one does ``t01 = t[:2]``, and\n  sets ``t[0]`` after, it is now guaranteed that ``t01.value`` will\n  correctly reflect that change in value. [#15453]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- In VOunits, \"pix\", \"au\", \"a\", and \"ct\" are removed from the list of deprecated units. [#14885]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Ufuncs with more than 2 operands (such as ``erfa.dtf2d``) now work\n  also if all inputs are scalars and more than two inputs have masks. [#15450]\n\n- Ensured that ``str(masked_array)`` looks like ``str(unmasked_array)`` also for\n  array scalars. Thus, like regular array scalars, the precision is ignored for\n  float, and strings do not include extra quoting. [#15451]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The location of ticklabels on a WCSAxes is now correctly calculated when the figure is rasterized. [#14760]\n\n- Fixed a bug where a ``ValueError`` would be raised in the\n  ``AsinhStretch`` and ``SinhStretch`` classes for valid ``a`` parameter\n  values. [#15539]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``wcs.validate(filename)`` now properly closes the file handler. [#15054]\n\n- Fix a regression in custom WCS mapping due to the recent introduction of\n  Solar System frames. [#15630]\n\n\nOther Changes and Additions\n---------------------------\n\n- The minimum supported version of NumPy is now 1.22. [#15006]\n\n- Moved International Earth Rotation and Reference Systems (IERS) and Leap Second\n  files out into standalone astropy-iers-data package, maintaining full\n  backward-compatibility in the ``astropy.utils.iers`` API. Deprecation\n  warnings may be issued when certain files are accessed directly. [#14819]\n\n- Switch from using ``setup.cfg`` for project configuration to using ``pyproject.toml``. [#15247]\n\n- Update bundled expat to 2.5.0. [#15585]\n\nVersion 5.3.4 (2023-10-03)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Updated ``astropy.io.misc.yaml`` so ``dump()` with a numpy object array or\n  ``load()`` with YAML representing a Numpy object array both raise\n  ``TypeError``. This prevents problems like a segmentation fault. [#15373]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug in ``convert_to_writable_filelike`` where ``GzipFile`` was not\n  closed properly. [#15359]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- In VOUnit, the spaces around the slash were removed in the formatting of\n  fractions, and fractional powers now also use the \"**\" operator. [#15282]\n\n- We now ensure that the unit ``u.cgs.cm`` is just an alias of ``u.si.cm``,\n  instead of a redefinition.  This ensures that ``u.Unit(\"cm\") / u.cm``\n  will reliably cancel to dimensionless (instead of some \"cm / cm\"). [#15368]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- For ``Masked``, ``np.ptp`` and the ``.ptp()`` method now properly account for\n  the mask, ensuring the result is identical to subtracting the maximum and\n  minimum (with the same arguments). [#15380]\n\nOther Changes and Additions\n---------------------------\n\n- Compatibility with Python 3.12. [#14784]\n\n- Replaced the URL of ``IETF_LEAP_SECOND_URL`` because the original is now\n  defunct and IETF now defers to IANA for such look-up. [#15421]\n\n\nVersion v5.3.3 (2023-09-07)\n===========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``TransformGraph.to_dot_graph()`` now throws an exception for invalid ``savelayout``.\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The exponent of ``w0wzCDM`` functions in ``inv_efunc`` has been corrected to 3, from -3. [#15224]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Astropy modeling can filter non-finite data values using the ``filter_non_finite``\n  keyword argument in a fitter call. Now when ``filter_non_finite`` is True,\n  non-finite *weights* will also be filtered to prevent crashes in ``LevMarLSQFitter``. [#15215]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed ``astropy.units.Quantity``'s implementation of ``numpy.nanmedian()``,\n  where for Numpy >= 1.25 an exception was raised for some array shapes and axis\n  combinations. [#15228]\n\n\nOther Changes and Additions\n---------------------------\n\n- v5.3.x will not support NumPy 2.0 or later. [#15234]\n\n\nVersion 5.3.2 (2023-08-11)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed import when called with Python ``-OO`` flag. [#15037]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fix for collapse operations on ``NDData`` without masks or units. [#15082]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Modified the implementation of ``np.power()`` for instances of ``Quantity`` to\n  allow any array as the second operand if all its elements have the same value. [#15101]\n\nVersion 5.3.1 (2023-07-06)\n==========================\n\nBug Fixes\n---------\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The exponent in ``wowzCDM.de_density_scale`` has been corrected to 3, from -3. [#14991]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix crash when a PrimaryHDU has a GROUPS keyword with a non-boolean value (i.e.\n  not a random-groups HDU). [#14998]\n\n- Fixed a bug that caused ``Cutout2D`` to not work correctly with ``CompImageHDU.section`` [#14999]\n\n- Fixed a bug that caused compressed images with TFORM missing the optional '1' prefix to not be readable. [#15001]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- All models can be pickled now. [#14902]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Restore bitmask propagation behavior in ``NDData.mask``, plus a fix\n  for arithmetic between masked and unmasked ``NDData`` objects. [#14995]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a bug where table indexes were not using a stable sort order. This was causing the\n  order of rows within groups to not match the original table order when an indexed table\n  was grouped. [#14907]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- In VOunits, \"pix\", \"au\", \"a\", and \"ct\" are removed from the list of deprecated units. [#14885]\n\nVersion 5.3 (2023-05-22)\n========================\n\nNew Features\n------------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Add optional parameter ``refresh_cache`` to ``EarthLocation.of_site()`` and\n  ``EarthLocation.get_site_names()`` to force the download of the latest site\n  registry. [#13993]\n\n- Added ``atol`` argument to function ``is_O3`` and ``is_rotation`` in matrix utilities. [#14371]\n\n- A new class ``astropy.coordinates.StokesCoord`` has been added to represent world coordinates describing polarization state.\n  This change introduces a breaking change to the return value of ``astropy.wcs.WCS.pixel_to_world`` where before a ``u.Quantity`` object would be returned containing numerical values representing a Stokes profile now a ``StokesCoord`` object is returned. The previous numerical values can be accessed with ``StokesCoord.value``. [#14482]\n\n- Add an optional parameter ``location`` to ``EarthLocation.get_itrs()``\n  to allow the generation of topocentric ITRS coordinates with respect\n  to a specific location. [#14628]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Two new cosmologies have been added, ``FlatwpwaCDM`` and ``Flatw0wzCDM``, which are the\n  flat variants of ``wpwaCDM`` and ``w0wzCDM``, respectively. [#12353]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Add ability to read and write an RST (reStructuredText) ASCII table that\n  includes additional header rows specifying any or all of the column dtype, unit,\n  format, and description. This is available via the new ``header_rows`` keyword\n  argument. [#14182]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Added support for >3D data in CompImageHDU [#14252]\n\n- Added a ``CompImageHDU.section`` property which can be used to\n  efficiently access subsets of the data, similarly to ``ImageHDU.section``.\n  When using this, only the tiles required to cover the section are\n  read from disk and decompressed. [#14353]\n\n- Added support for ``'NOCOMPRESS'`` for the ``compression_type`` option in ``CompImageHDU``. [#14408]\n\n- Added new properties ``compression_type`` and ``tile_shape`` on\n  ``CompImageHDU``, giving the name of the compression algorithm\n  and the shape of the tiles in the tiled compression respectively. [#14428]\n\n- Do not call ``gc.collect()`` when closing a ``CompImageHDU`` object as it has a\n  large performance penalty. [#14576]\n\n- VLA tables can now be written with the unified I/O interface.\n  When object types are present or the VLA contains different types a `TypeError`\n  is thrown. [#14578]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Add support for writing/reading fixed-size and variable-length array columns to the parquet formatter. [#14237]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Added a method ``get_infos_by_name`` to make it easier to implement\n  DALI-compliant protocols [#14212]\n\n- Updating the built-in UCD list to upstream 1.5 (which requires a minor\n  update to the parser) [#14554]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Enable check for poorly conditioned fits in ``LinearLSQFitter`` for polynomial\n  models with fixed inputs. [#14037]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``astropy.nddata.NDDataArray`` now has collapsing methods like ``sum``,\n  ``mean``, ``min``, and ``max`` which operate along any axes, and better\n  support for ``astropy.utils.Masked`` objects. [#14175]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- ``vonmisesmle`` has now functioning \"weights\" and \"axis\" parameters that work equivalently\n  to the rest of the functions in the ``circstats`` module (``circmean``, ``rayleightest``, etc.) [#14533]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table`` and ``QTable`` can now use the ``|`` and ``|=`` operators for\n  dictionary-style merge and update. [#14187]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Add a ``leap_second_strict`` argument to the ``Time.to_datetime()`` method. This\n  controls the behavior when converting a time within a leap second to the ``datetime``\n  format and can take the values ``raise`` (the default), ``warn``, or ``silent``. [#14606]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Adds the ``astropy.timeseries.LombScargleMultiband`` class, which is an\n  extension of the ``astropy.timeseries.LombScargle`` class. It enables the\n  generation of periodograms for datasets with measurements taken in more than\n  one photometric band. [#14016]\n\n- Add ``unit_parse_strict`` parameter to the Kepler reader to control the warnings\n  emitted when reading files. [#14294]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add support for degrees Celsius for FITS. Parsing \"Celsius\" and \"deg C\" is now\n  supported and astropy will output \"Celsius\" into FITS.\n\n  Note that \"deg C\" is only provided for compatibility with existing FITS files,\n  as it does not conform to the normal unit standard, where this should be read\n  as \"degree * Coulomb\". Indeed, compound units like \"deg C kg-1\" will still be\n  parsed as \"Coulomb degree per kilogram\". [#14042]\n\n- Enabled the ``equal_nan`` keyword argument for ``np.array_equal()`` when the\n  arguments are ``astropy.units.Quantity`` instances. [#14135]\n\n- Allow \"console\" and \"unicode\" formats for conversion to string of\n  function units. [#14407]\n\n- Add a \"fraction\" options to all the unit ``format`` classes, which determine\n  whether, if a unit has bases raised to a negative power, a string\n  representation should just show the negative powers (``fraction=False``) or\n  use a fraction, and, in the latter case, whether to use a single-line\n  representation using a solidus (``fraction='inline'`` or ``fraction=True``)\n  or, if the format supports it, a multi-line presentation with the numerator\n  and denominator separated by a horizontal line (``fraction='multiline'``). [#14449]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``mean`` method on ``NDDataArray`` now avoids a division by zero\n  warning when taking the mean of a fully-masked slice (and still\n  returns ``np.nan``). [#14341]\n\n- Ensure we can read the newer ``IERS_B`` files produced by the International\n  Earth Rotation and Reference Systems Service, and point\n  ``astropy.utils.iers.IERS_B_URL`` to the new location. [#14382]\n\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``get_moon()`` is deprecated and may be removed in a future version of\n  ``astropy``. Calling ``get_moon(...)`` should be replaced with\n  ``get_body(\"moon\", ...)``. [#14354]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Deprecate the auto-fixing of tile sizes for HCOMPRESS_1 tiled\n  image compression when the tile size could be changed by +1\n  to make it acceptable. [#14410]\n\n- The ``tile_size=`` argument to ``CompImageHDU`` has been deprecated\n  as it was confusing that it was required to be in the opposite\n  order to the data shape (it was in header rather than Numpy order).\n  Instead, users should make use of the ``tile_shape=`` argument which\n  is in Numpy shape order. [#14428]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Deprecate the ``humlicek2`` method for `~astropy.modeling.functional_models.Voigt1D` in favor\n  of using the ``wofz`` method using the `scipy.special.wofz` implementation of the\n  Fadeeva function whenever `scipy` is installed. [#14013]\n\n- Deprecated ``astropy.modeling.utils.comb()`` function in favor of ``comb()``\n  from ``math`` standard library. [#14038]\n\n- Propagate measurement uncertainties via the ``weights`` keyword argument into the\n  parameter covariances. [#14519]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The conversion of ``astropy.units.Quantity`` to ``bool``\n  that was deprecated since astropy 3.0 now raises a ``ValueError``.\n  This affects statements like ``if quantity``.\n  Use explicit comparisons like ``if quantity.value != 0``\n  or ``if quantity is not None`` instead. [#14124]\n\n- Operations on ``Quantity`` in tables are sped up by only copying ``info`` when\n  it makes sense (i.e., when the object can still logically be thought of as the\n  same, such as in unit changes or slicing). ``info`` is no longer copied if a\n  ``Quantity`` is part of an operation. [#14253]\n\n- The ``Quantity.nansum`` method has been deprecated. It was always weird that it\n  was present, since ``ndarray`` does not have a similar method, and the other\n  ``nan*`` functions such as ``nanmean`` did not have a corresponding method.\n  Use ``np.nansum(quantity)`` instead. [#14267]\n\n- The unused ``units.format.Unscaled`` format class has been deprecated. [#14417]\n\n- The order in which unit bases are displayed has been changed to match the\n  order bases are stored in internally, which is by descending power to which\n  the base is raised, and alphabetical after. This helps avoid monstrosities\n  like ``beam^-1 Jy`` for ``format='fits'``.\n\n  Note that this may affect doctests that use quantities with complicated units. [#14439]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- For ``Masked`` instances, the ``where`` argument for any ufunc can now\n  also be masked (with any masked elements masked in the output as well).\n  This is not very useful in itself, but avoids problems in conditional\n  functions (like ``np.add(ma, 1, where=ma>10)``). [#14590]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The pixel attribute of ``astropy.visualization.wcsaxes.frame.Spine`` is deprecated\n  and will be removed in a future astropy version.\n  Because it is (in general) not possible to correctly calculate pixel\n  coordinates before Matplotlib is drawing a figure, instead set the world or data\n  coordinates of the ``Spine`` using the appropriate setters. [#13989]\n\n- Passing a bare number as the ``coord_wrap`` argument to ``CoordinateHelper.set_coord_type`` is deprecated.\n  Pass a ``Quantity`` with units equivalent to angular degrees instead.\n\n  The ``.coord_wrap`` attribute of ``CoordinateHelper`` is now a ``Quantity`` instead of a bare number. [#14050]\n\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``Angle.to_string()`` was changed to ensure it matches the behaviour of\n  ``Quantity.to_string()`` in having a space between the value and the unit\n  for display with non-degree and hourangle units (i.e., the case in which\n  units are displayed by their name; the sexagesimal case for degrees or\n  hourangle that uses symbols is not changed). [#14379]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix an issue in the ``io.ascii`` QDP format reader to allow lower-case commands in the\n  table data file. Previously it required all upper case in order to parse QDP files. [#14365]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Compressing/decompressing a floating point dataset containing NaN values will\n  no longer read in the whole tile as NaNs.\n\n  Fixed segmentation faults that occurred when compressing/decompressing data\n  with the PLIO_1 algorithm. [#14252]\n\n- ``Card`` now uses the default Python representation for floating point\n  values. [#14508]\n\n- ``ImageHDU`` now properly rejects Numpy scalars, avoiding data corruption. [#14528]\n\n- Fix issues with double quotes in CONTINUE cards. [#14598]\n\n- Fixes an issue where FITS_rec was incorrectly raising a ValueError exception when the heapsize was greater than 2**31\n  when the Column type was 'Q' instead of 'P'. [#14810]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Columns with big-endian byte ordering (such as those read in from a FITS table) can now be serialized with Parquet. [#14373]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Bugfix for using ``getter/setter`` in properties to adjust the internal (computational)\n  value of a property vs its external proxy value when the values involve units. [#14512]\n\n- Fix issue with ``filter_non_finite`` option when fitting with ``weights`` via passing\n  the ``weights`` through the non-finite-filter alongside the input data. [#14695]\n\n- Fixed an issue with Parameter where a getter could be input without a\n  setter (or vice versa). [#14708]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Using quantities with units of time for ``Time`` format 'decimalyear' will now\n  raise an error instead of converting the quantity to days and then\n  interpreting the value as years. An error is raised instead of attempting to\n  interpret the unit as years, since the interpretation is ambiguous: in\n  'decimaltime' years are equal to 365 or 366 days, while for regular time units\n  the year is defined as 365.25 days. [#14566]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure that ``Distribution`` can be compared with ``==`` and ``!=``\n  with regular arrays or scalars, and that inplace operations like\n  ``dist[dist<0] *= -1`` work. [#14421]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Modified ``astropy.units.Quantity.__array_ufunc__()`` to return ``NotImplemented`` instead of raising a ``ValueError`` if the inputs are incompatible. [#13977]\n\n- Modified the behavior of ``numpy.array_equal()`` and ``numpy.array_equiv()`` to\n  return ``False`` instead of raising an error if their arguments are\n  ``astropy.units.Quantity`` instances with incompatible units. [#14163]\n\n- Spaces have been regularized for the ``unicode`` and ``console`` output\n  formats: no extraneous spaces in front of the unit, and always a space\n  between a possible scale factor and the unit. [#14413]\n\n- Prefixed degrees and arcmin are now typeset without using the symbol in\n  ``latex`` and ``unicode`` formats (i.e., ``mdeg`` instead of ``m°``),\n  as was already the case for arcsec. [#14419]\n\n- Ensure the unit is kept in ``np.median`` even if the result is a scalar ``nan``\n  (the unit was lost for numpy < 1.22). [#14635]\n\n- Ensure that ``Quantity`` with structured dtype can be set using non-structured\n  ``Quantity`` (if units match), and that structured dtype names are inferred\n  correctly in the creation of ``StructuredUnit``, thus avoiding mismatches\n  when setting units. [#14680]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- When using astropy in environments with sparse file systems (e.g., where the temporary directory and astropy data directory resides in different volumes), ``os.rename`` may fail with ``OSError: [Errno 18] Invalid cross-device link``.\n  This may affect some clean-up operations executed by the ``data`` module, causing them to fail.\n  This patch is to catch ``OSError`` with ``errno == EXDEV`` (i.e., Errno 18) when performing these operations and try to use ``shutil.move`` instead to relocate the data. [#13730]\n\n- Ensure masks are propagated correctly for ``outer`` methods of ufuncs also if\n  one of the inputs is not actually masked. [#14624]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The location of a ``astropy.visualization.wcsaxes.frame.Spine`` in a plot is now\n  correctly calculated when the DPI of a figure changes between a WCSAxes being\n  created and the figure being drawn. [#13989]\n\n- ``CoordinateHelper.set_ticks()`` now accepts ``number=0``. Previously it errored. [#14160]\n\n- ``WCSAxes.plot_coord`` and ``plot_scatter`` now work correctly for APE 14 compliant WCSes where the units are not always converted to degrees. [#14251]\n\n- Fixed a bug where coordinate overlays did not automatically determine the\n  longitude wrap angle or the appropriate units. [#14326]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix bugs with high-level WCS API on ``wcs.WCS`` object when using ``-TAB``\n  coordinates. [#13571]\n\n- Fixed a bug in how WCS handles ``PVi_ja`` header coefficients when ``CTYPE``\n  has ``-SIP`` suffix and in how code detects TPV distortions. [#14295]\n\n\nOther Changes and Additions\n---------------------------\n\n- The minimum supported version of Python is now 3.9, changing from 3.8. [#14286]\n\n- The minimum supported version of Numpy is now 1.21. [#14349]\n\n- The minimum supported version of matplotlib is now 3.3. [#14286, #14321]\n\n- ``astropy`` no longer publishes wheels for i686 architecture. [#14517]\n\n- Added a pre-commit configuration for codespell. [#13985]\n\n- Removed a large fraction of the bundled CFITSIO code and internally refactored\n  FITS compression-related code, which has resulted in a speedup when compiling\n  astropy from source (40% faster in some cases). [#14252]\n\n- The CFITSIO library is no longer bundled in full with astropy and\n  the option to build against an external installation of CFITSIO\n  has now been removed, so the ASTROPY_USE_SYSTEM_CFITSIO environment\n  variable will be ignored during building. [#14311]\n\n- Updated CDS URL for Sesame look-up as the old URL is deprecated. [#14681]\n\n\nVersion 5.2.2 (2023-03-28)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- CDS and MRT tables with units that contain with multiple divisions, such as\n  ``km/s/Mpc`` now parse correctly as being equal to ``km/(s.Mpc)``. [#14369]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix ``FITSDiff`` when table contains a VLA column with the Q type. [#14539]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a bug when creating a ``QTable`` when a ``Quantity`` input column is present and the\n  ``units`` argument modifies the unit of that column. This now works as expected where\n  previously this caused an exception. [#14357]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- CDS units with multiple divisions, such as ``km/s/Mpc`` now parse\n  correctly as being equal to ``km/(s.Mpc)``. [#14369]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed a bug that caused subclasses of BaseHighLevelWCS and HighLevelWCSMixin to\n  not work correctly under certain conditions if they did not have ``world_n_dim``\n  and ``pixel_n_dim`` defined on them. [#14495]\n\n\nVersion 5.2.1 (2023-01-06)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fix to ITRS frame ``earth_location`` attribute to give the correct result for\n  a topocentric frame. [#14180]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Bounds are no longer passed to the scipy minimizer for methods Brent and\n  Golden. The scipy minimizer never used the bounds but silently accepted them.\n  In scipy v1.11.0.dev0+ an error is raised, so we now pass None as the bounds\n  to the minimizer. Users should not be affected by this change. [#14232]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Tables with multidimensional variable length array can now be properly read\n  and written. [#13417]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Modified the behavior of ``numpy.histogram()``,\n  ``numpy.histogram_bin_edges()``, ``numpy.histogram2d()``, and\n  ``numpy.histogramdd()`` so that the ``range`` argument must a compatible\n  instance of ``astropy.units.Quantity`` if the other arguments are instances of\n  ``astropy.units.Quantity``. [#14213]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Improved the performance of drawing WCSAxes grids by skipping some unnecessary\n  computations. [#14164]\n\n- Fixed WCSAxes sometimes triggering a NumPy RuntimeWarning when determining the\n  coordinate range of the axes. [#14211]\n\nOther Changes and Additions\n---------------------------\n\n- Fix compatibility with Numpy 1.24. [#14193]\n\nVersion 5.2 (2022-12-12)\n========================\n\nNew Features\n------------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Adds new topocentric ITRS frame and direct transforms to and from the observed\n  frames ``AltAz`` and ``HADec`` with the ability to add or remove refraction\n  corrections as required. Since these frames are all within the ITRS, there are\n  no corrections applied other than refraction in the transforms. This makes the\n  topocentric ITRS frame and these transforms convenient for observers of near\n  Earth objects where stellar aberration should be omitted. [#13398]\n\n- Allow comparing ``SkyCoord`` to frames with data. [#13477]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Cosmology instance can be parsed from or converted to a HTML table using\n  the new HTML methods in Cosmology's ``to/from_format`` I/O. [#13075]\n\n- A new comparison function has been added -- ``cosmology_equal()`` -- that\n  mirrors its ``numpy`` counterpart but allows for the arguments to be converted\n  to a ``Cosmology`` and to compare flat cosmologies with their non-flat\n  equivalents. [#13104]\n\n- Cosmology equivalence for flat FLRW cosmologies has been generalized to apply\n  to all cosmologies using the FlatCosmology mixin. [#13261]\n\n- The cosmological redshift unit now has a physical type of ``\"redshift\"``. [#13561]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Add ability to read and write a fixed width ASCII table that includes additional\n  header rows specifying any or all of the column dtype, unit, format, and\n  description. This is available in the ``fixed_width`` and\n  ``fixed_width_two_line`` formats via the new ``header_rows`` keyword argument. [#13734]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Added support to the ``io.fits`` API for reading and writing file paths of the\n  form ``~/file.fits`` or ``~<username>/file.fits``, referring to the home\n  directory of the current user or the specified user, respectively. [#13131]\n\n- Added support for opening remote and cloud-hosted FITS files using the\n  ``fsspec`` package, which has been added as an optional dependency. [#13238]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Added support in ``io.votable`` for reading and writing file paths of the form\n  ``~/file.xml`` or ``~<username>/file.xml``, referring to the home directory of\n  the current user or the specified user, respectively. [#13149]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Add option to non-linear fitters which enables automatic\n  exclusion of non-finite values from the fit data. [#13259]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Modified ``Cutout2D`` to allow objects of type ``astropy.io.fits.Section``\n  to be passed to the ``data`` parameter. [#13238]\n\n- Add a PSF image representation to ``astropy.nddata.NDData`` and ``astropy.nddata.CCDData``. [#13743]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- An Astropy table can now be converted to a scalar NumPy object array. For NumPy\n  >= 1.20, a list of Astropy tables can be converted to an NumPy object array of\n  tables. [#13469]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Added the ``astropy.time.Time.mean()`` method which also enables the ``numpy.mean()`` function to be used on instances of ``astropy.time.Time``. [#13508]\n\n- Improve the performance of getting the string representation of a large ``Time``\n  or ``TimeDelta`` object. This is done via a new ``to_string()`` method that does\n  the time string format conversion only for the outputted values. Previously the\n  entire array was formatted in advance. [#13555]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- It is now possible to use unit format names as string format specifiers for a\n  ``Quantity``, e.g. ``f'{1e12*u.m/u.s:latex_inline}'`` now produces the string\n  ``'$1 \\\\times 10^{12} \\\\; \\\\mathrm{m\\\\,s^{-1}}$'``. [#13050]\n\n- Ensure that the ``argmin`` and ``argmax`` methods of ``Quantity`` support the\n  ``keepdims`` argument when numpy does (numpy version 1.22 and later). [#13329]\n\n- ``numpy.lib.recfunctions.merge_arrays()`` is registered with numpy overload for\n  ``Quantity``. [#13669]\n\n- Added SI prefixes for quecto (\"q\", :math:`10^{-30}`), ronto (\"r\",\n  :math:`10^{-27}`), ronna (\"R\", :math:`10^{27}`), and quetta (\"Q\",\n  :math:`10^{30}`). [#14046]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added the ``use_fsspec``, ``fsspec_kwargs``, and ``close_files`` arguments\n  to ``utils.data.get_readable_fileobj``. [#13238]\n\n- Ensure that the ``argmin`` and ``argmax`` methods of ``Masked`` instances\n  support the ``keepdims`` argument when numpy does (numpy version 1.22 and\n  later). [#13329]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Add helper functions for WCSAxes instances to draw the instrument beam and a physical scale. [#12102]\n\n- Add a ``scatter_coord`` method to the ``wcsaxes`` functionality based on the\n  existing ``plot_coord`` method but that calls ``matplotlib.pyplot.scatter``. [#13562]\n\n- Added a ``sinh`` stretch option to ``simple_norm``. [#13746]\n\n- It is now possible to define \"tickable\" gridlines for the purpose of placing ticks or tick labels in the interior of WCSAxes plots. [#13829]\n\n\nAPI Changes\n-----------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``MexicanHat1DKernel`` and ``MexicanHat2DKernel``\n  classes. Please use ``RickerWavelet1DKernel`` and\n  ``RickerWavelet2DKernel`` instead. [#13300]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Multiplying a ``LogQuantity`` like ``Magnitude`` with dimensionless physical\n  units by an array will no longer downcast to ``Quantity``. [#12579]\n\n- Quantity normally upcasts integer dtypes to floats, unless the dtype is\n  specifically provided.\n  Before this happened when ``dtype=None``; now the default has been changed to\n  ``dtype=numpy.inexact`` and ``dtype=None`` has the same meaning as in `numpy`. [#12941]\n\n- In \"in-place unit changes\" of the form ``quantity <<= new_unit``, the result\n  will now share memory with the original only if the conversion could be done\n  through a simple multiplication with a scale factor. Hence, memory will not be\n  shared if the quantity has integer ```dtype``` or is structured, or when the\n  conversion is through an equivalency. [#13638]\n\n- When ``Quantity`` is constructed from a structured array and ``unit`` is\n  ``None``, the default unit is now structured like the input data. [#13676]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``astropy.utils.misc.suppress`` has been removed, use ``contextlib.suppress``\n  instead. ``astropy.utils.namedtuple_asdict`` has been removed, instead use\n  method ``._asdict`` on a ``namedtuple``. ``override__dir__`` has been deprecated\n  and will be removed in a future version, see the docstring for the better\n  alternative. [#13636]\n\n- ``astropy.utils.misc.possible_filename`` has been removed. [#13661]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Rename number-of-samples keyword ``nsamples`` in ``ZScaleInterval`` to align\n  with the ``n_samples`` keyword used in all other ``Interval`` classes in\n  this module. [#13810]\n\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed convolution Kernels to ensure the that returned kernels\n  are normalized to sum to one (e.g., ``Gaussian1DKernel``,\n  ``Gaussian2DKernel``). Also fixed the Kernel ``truncation`` calculation. [#13299]\n\n- Fix import error with setuptools v65.6.0 by replacing\n  ``numpy.ctypeslib.load_library`` with Cython to load the C convolution\n  extension. [#14035]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``BaseCoordinateFrame.get_frame_attr_names()`` had a misleading name,\n  because it actually provided a ``dict`` of attribute names and\n  their default values. It is now deprecated and replaced by ``BaseCoordinateFrame.get_frame_attr_defaults()``.\n  The fastest way to obtain the attribute names is ``BaseFrame.frame_attributes.keys()``. [#13484]\n\n- Fixed bug that caused ``earth_orientation.nutation_matrix()`` to error instead of returning output. [#13572]\n\n- Ensure that ``angle.to_string()`` continues to work after pickling,\n  and that units passed on to ``to_string()`` or the ``Angle``\n  initializer can be composite units (like ``u.hour**1``), which might\n  result from preceding calculations. [#13933]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``report_diff_values()`` have now two new parameters ``rtol`` and ``atol`` to make the\n  report consistent with ``numpy.allclose`` results.\n  This fixes ``FITSDiff`` with multi-dimensional columns. [#13465]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed two bugs in validator.validator.make_validation_report:\n  - ProgressBar iterator was not called correctly.\n  - make_validation_report now handles input string urls correctly. [#14102]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Fixed a performance regression in ``timeseries.aggregate_downsample``\n  introduced in Astropy 5.0 / #11266. [#13069]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Unit changes of the form ``quantity <<= new_unit`` will now work also if the\n  quantity is integer. The result will always be float. This means that the result\n  will not share memory with the original. [#13638]\n\n- Ensure dimensionless quantities can be added inplace to regular ndarray. [#13913]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed an incompatibility with latest Python 3.1x versions that kept\n  ``astropy.utils.data.download_file`` from switching to TLS+FTP mode. [#14092]\n\n- ``np.quantile`` and ``np.percentile`` can now be used on ``Masked``\n   arrays and quantities also with ``keepdims=True``. [#14113]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Significantly improve performance of ``ManualInterval`` when both limits\n  are specified manually. [#13898]\n\n\nOther Changes and Additions\n---------------------------\n\n- The deprecated private ``astropy._erfa`` module has been removed. Use\n  ``pyerfa``, which is a dependency of ``astropy`` and can be imported directly\n  using ``import erfa``. [#13317]\n\n- The minimum version required for numpy is now 1.20 and that for scipy 1.5. [#13885]\n\n- Updated the bundled CFITSIO library to 4.2.0. [#14020]\n\n\nVersion 5.1.1 (2022-10-23)\n==========================\n\nAPI Changes\n-----------\n\nastropy.wcs\n^^^^^^^^^^^\n\n- The ``pixel`` argument to ``astropy.visualization.wcsaxes.ticklabels.TickLabels.add``\n  no longer does anything, is deprecated, and will be removed in a future\n  astropy version. It has been replaced by a new required ``data`` argument, which\n  should be used to specify the data coordinates of the tick label being added.\n\n  This changes has been made because it is (in general) not possible to correctly\n  calculate pixel coordinates before Matplotlib is drawing a figure. [#12630]\n\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that prevented ``SkyOffsetFrame`` instances to be pickled by adding\n  a custom ``__reduce__`` method to the class (see issue #9249). [#13305]\n\n- Fixed the check for invalid ``Latitude`` values for float32 values.\n  ``Latitude`` now accepts the float32 value of pi/2, which was rejected\n  before because a comparison was made using the slightly smaller float64 representation.\n  See issue #13708. [#13745]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed confusing chained exception messages of ``read()`` function when it fails. [#13170]\n\n- When writing out a :class:`~astropy.table.Table` to HTML format, the\n  ``formats`` keyword argument to the :meth:`~astropy.table.Table.write` method\n  will now be applied. [#13453]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``heapsize`` is now checked for VLA tables. An error is thrown whether P format is used\n  but the heap size is bigger than what can be indexed with a 32 bit signed int. [#13429]\n\n- Fix parsing of ascii TFORM when precision is missing. [#13520]\n\n- A compressed image HDU created from the header of a PRIMARY HDU, now correctly updates\n  'XTENSION' and 'SIMPLE' keywords. [#13557]\n\n- Empty variable-length arrays are now properly handled when pathological combinations of\n  heapoffset and heapsize are encountered. [#13621]\n\n- ``PCOUNT`` and ``GCOUNT`` keywords are now removed from an uncompressed Primary header,\n  for compliance with ``fitsverify`` behavior. [#13753]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Bugfix for using ``MagUnit`` units on model parameters. [#13158]\n\n- Fix bug in using non-linear fitters to fit 0-degree polynomials using weights. [#13628]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a problem where accessing one field of a structured column returned a Column\n  with the same info as the original column. This resulted in unintuitive behavior\n  in general and an exception if the format for the column was set. [#13269]\n\n- Tables with columns with structured data can now be properly stacked and joined. [#13306]\n\n- Update jQuery to 3.6.0, to pick up security fixes. [#13438]\n\n- Fix a Python 3.11 compatibility issue. Ensure that when removing a table column\n  that the ``pprint_include_names`` or ``pprint_exclude_names`` attributes get\n  updated correctly. [#13639]\n\n- When using ``add_columns`` with same indexes in ``indexes`` option or without\n  specifying the option, the order of the new columns will now be kept. [#13783]\n\n- Fix a bug when printing or getting the representation of a multidimensional\n  table column that has a zero dimension. [#13838]\n\n- Ensure that mixin columns and their ``info`` are not shared between tables\n  even when their underlying data is shared with ``copy=False``. [#13842]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix ``Time.insert()`` on times which have their ``out_subfmt`` set. [#12732]\n\n- Prevent ``Time()`` from being initialized with an invalid precision\n  leading to incorrect results when representing the time as a string. [#13068]\n\n- Fix a bug in Time where a date string like \"2022-08-01.123\" was being parsed\n  as an ISO-format time \"2022-08-01 00:00:00.123\". The fractional part at the\n  end of the string was being taken as seconds. Now this raises an exception\n  because the string is not in ISO format. [#13731]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Significantly improved the performance of parsing composite units with the FITS\n  format, by ensuring the ``detailed_exception`` argument is properly passed on\n  and thus used. [#12699]\n\n- Ensure that ``np.concatenate`` on quantities can take a ``dtype`` argument (added in numpy 1.20). [#13323]\n\n- Ensure that the units of any ``initial`` argument to reductions such as\n  ``np.add.reduce`` (which underlies ``np.sum``) are properly taken into account. [#13340]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Ensure that ``np.concatenate`` on masked data can take a ``dtype`` argument (added in numpy 1.20). [#13323]\n\n- Fix error when suppressing download progress bar while using non-default\n  ``sys.stdout`` stream. [#13352]\n\n- Ensure ``str`` and ``repr`` work properly for ``Masked`` versions of\n  structured subarrays. [#13404]\n\n- If an attribute is created using ``deprecated_attribute()`` with the\n  ``alternative`` argument then getting or setting the value of the deprecated\n  attribute now accesses its replacement. [#13824]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed calling ``.tight_layout()`` on a WCSAxes. [#12418]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``WCS.pixel_to_world`` now creates an ``EarthLocation`` object using ``MJD-AVG``\n  if present before falling back to the old behaviour of using ``MJD-OBS``. [#12598]\n\n- The locations of ``WCSAxes`` ticks and tick-labels are now correctly calculated\n  when the DPI of a figure changes between a WCSAxes being created and the figure\n  being drawn, or when a rasterized artist is added to the WCSAxes. [#12630]\n\n- Fix a bug where ``SlicedLowLevelWCS.world_to_pixel_values`` would break when\n  the result of the transform is dependent on the coordinate of a sliced out\n  pixel. [#13579]\n\n- Updated bundled WCSLIB version to 7.12. This update includes bug fixes to\n  ``wcssub()`` in how it handles temporal axes with -TAB and fixes handling\n  of status returns from ``linp2x()`` and ``linx2p()`` relating to distortion\n  functions, in particular affecting TPV distortions - see #13509. For a full\n  list of changes - see http://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES or\n  `astropy/cextern/wcslib/CHANGES <https://github.com/astropy/astropy/blob/24e8730c63902d035cb9110eae2a9ebec12d8905/cextern/wcslib/CHANGES>`_. [#13635]\n\n- Fixed WCS validation not working properly if HDUList is needed\n  for multi-extension FITS file. [#13668]\n\n\nOther Changes and Additions\n---------------------------\n\n- Development wheels of astropy should now be installed from\n  https://pypi.anaconda.org/astropy/simple instead of from\n  https://pkgs.dev.azure.com/astropy-project/astropy/_packaging/nightly/pypi/simple. [#13431]\n\n- Compatibility with Python 3.11, 3.10.7, 3.9.14, 3.8.14 [#13614]\n\n\nVersion 5.1 (2022-05-24)\n========================\n\nNew Features\n------------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ephemeris used in ``astropy.coordinates`` can now be set to any version of\n  the JPL ephemeris available from https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/. [#12541]\n\n- ``Angle.to_string()`` now accepts the ``'latex_inline'`` unit format. [#13056]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Cosmology instance can be parsed from or converted to a YAML string using\n  the new \"yaml\" format in Cosmology's ``to/from_format`` I/O. [#12279]\n\n- Register \"astropy.row\" into Cosmology's to/from format I/O, allowing a\n  Cosmology instance to be parse from or converted to an Astropy Table Row. [#12313]\n\n- A method ``clone`` has been added to ``Parameter`` to quickly deep copy the\n  object and change any constructor argument.\n  A supporting equality method is added, and ``repr`` is enhanced to be able to\n  roundtrip -- ``eval(repr(Parameter()))`` -- if the Parameter's arguments can\n  similarly roundtrip.\n  Parameter's arguments are made keyword-only. [#12479]\n\n- Add methods ``Otot`` and ``Otot0`` to FLRW cosmologies to calculate the total\n  energy density of the Universe. [#12590]\n\n- Add property ``is_flat`` to cosmologies to calculate the curvature of the Universe.\n  ``Cosmology`` is now an abstract class and subclasses must override the\n  abstract property ``is_flat``. [#12606]\n\n- For converting a cosmology to a mapping, two new boolean keyword arguments are\n  added: ``cosmology_as_str`` for turning the class reference to a string,\n  instead of the class object itself, and ``move_from_meta`` to merge the\n  metadata with the rest of the returned mapping instead of adding it as a\n  nested dictionary. [#12710]\n\n- Register format \"astropy.cosmology\" with Cosmology I/O. [#12736]\n\n- Cosmological equivalency (``Cosmology.is_equivalent``) can now be extended\n  to any Python object that can be converted to a Cosmology, using the new\n  keyword argument ``format``.\n  This allows e.g. a properly formatted Table to be equivalent to a Cosmology. [#12740]\n\n- The new module ``cosmology/tests/helper.py`` has been added to provide tools\n  for testing the cosmology module and related extensions. [#12966]\n\n- A new property ``nonflat`` has been added to flat cosmologies\n  (``FlatCosmologyMixin`` subclasses) to get an equivalent cosmology, but of the\n  corresponding non-flat class. [#13076]\n\n- ``clone`` has been enhanced to allow for flat cosmologies to clone on the\n  equivalent non-flat cosmology. [#13099]\n\n- ``cosmology`` file I/O uses the Unified Table I/O interface, which has added\n  support for reading and writing file paths of the form ``~/file.ecsv`` or\n  ``~<username>/file.ecsv``, referring to the home directory of the current user\n  or the specified user, respectively. [#13129]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Simplify the way that the ``converters`` argument of ``io.ascii.read`` is\n  provided. Previously this required wrapping each data type as the tuple returned\n  by the ``io.ascii.convert_numpy()`` function and ensuring that the value is a\n  ``list``. With this update you can write ``converters={'col1': bool}`` to force\n  conversion as a ``bool`` instead of the previous syntax ``converters={'col1':\n  [io.ascii.convert_numpy(bool)]}``. Note that this update is back-compatible with\n  the old behavior. [#13073]\n\n- Added support in ``io.ascii`` for reading and writing file paths of the form\n  ``~/file.csv`` or ``~<username>/file.csv``, referring to the home directory of\n  the current user or the specified user, respectively. [#13130]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Add option ``unit_parse_strict`` to ``astropy.io.fits.connect.read_table_fits``\n  to enable warnings or errors about invalid FITS units when using ``astropy.table.Table.read``.\n  The default for this new option is ``\"warn\"``, which means warnings are now raised for\n  columns with invalid units. [#11843]\n\n- Changes default FITS behavior to use buffered I/O\n  rather than unbuffered I/O for performance reasons. [#12081]\n\n- ``astropy.io.fits.Header`` now has a method to calculate the size\n  (in bytes) of the data portion (with or without padding) following\n  that header. [#12110]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Allow serialization of model unit equivalencies. [#10198]\n\n- Built-in Cosmology subclasses can now be converted to/from YAML with the\n  functions ``dump`` and ``load`` in ``astropy.io.misc.yaml``. [#12279]\n\n- Add asdf support for ``Cosine1D``, ``Tangent1D``, ``ArcSine1D``,\n  ``ArcCosine1D``, and ``ArcTangent1D`` models. [#12895]\n\n- Add asdf support for ``Spline1D`` models. [#12897]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Added support to the Unified Table I/O interface for reading and writing file\n  paths of the form ``~/file.csv`` or ``~<username>/file.csv``, referring to the\n  home directory of the current user or the specified user, respectively. [#13129]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Add new fitters based on ``scipy.optimize.least_squares`` method of non-linear\n  least-squares optimization: [#12051]\n\n      - ``TRFLSQFitter`` using the Trust Region Reflective algorithm.\n      - ``LMLSQFitter`` using the Levenberg-Marquardt algorithm (implemented by ``scipy.optimize.least_squares``).\n      - ``DogBoxLSQFitter`` using the dogleg algorithm.\n\n- Enable direct use of the ``ignored`` feature of ``ModelBoundingBox`` by users in\n  addition to its use as part of enabling ``CompoundBoundingBox``. [#12384]\n\n- Switch ``modeling.projections`` to use ``astropy.wcs.Prjprm`` wrapper internally and provide access to the ``astropy.wcs.Prjprm`` structure. [#12558]\n\n- Add error to non-finite inputs to the ``LevMarLSQFitter``, to protect against soft scipy failure. [#12811]\n\n- Allow the ``Ellipse2D`` and ``Sersic2D`` theta parameter to be input as\n  an angular quantity. [#13030]\n\n- Added ``Schechter1D`` model. [#13116]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Add support for converting between uncertainty types. This uncertainty\n  conversion system uses a similar flow to the coordinate subsystem, where\n  Cartesian is used as the common system. In this case, variance is used as the\n  common system. [#12057]\n\n- The ``as_image_hdu`` option is now available for ``CCDData.to_hdu`` and\n  ``CCDData.write``. This option allows the user to get an ``ImageHDU`` as the\n  first item of the returned ``HDUList``, instead of the default ``PrimaryHDU``. [#12962]\n\n- File I/O through ``nddata.CCDData`` uses the Unified I/O interface, which has\n  added support for reading and writing file paths of the form ``~/file.csv`` or\n  ``~<username>/file.csv``, referring to the home directory of the current user\n  or the specified user, respectively. [#13129]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- A new keyword-only argument ``kind`` was added to the ``Table.sort`` method to\n  specify the sort algorithm. [#12637]\n\n- Columns which are ``numpy`` structured arrays are now fully supported,\n  effectively allowing tables within tables. This applies to ``Column``,\n  ``MaskedColumn``, and ``Quantity`` columns. These structured data columns\n  can be stored in ECSV, FITS, and HDF5 formats. [#12644]\n\n- Improve the performance of ``np.searchsorted`` by a factor of 1000 for a\n  bytes-type ``Column`` when the search value is ``str`` or an array of ``str``.\n  This happens commonly for string data stored in FITS or HDF5 format files. [#12680]\n\n- Add support for using mixin columns in group aggregation operations when the\n  mixin supports the specified operation (e.g. ``np.sum`` works for ``Quantity``\n  but not ``Time``). In cases where the operation is not supported the code now\n  issues a warning and drops the column instead of raising an exception. [#12825]\n\n- Added support to the Unified Table I/O interface for reading and writing file\n  paths of the form ``~/file.csv`` or ``~<username>/file.csv``, referring to the\n  home directory of the current user or the specified user, respectively. [#13129]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Add support for calling ``numpy.linspace()`` with two ``Time`` instances to\n  generate a or multiple linearly spaced set(s) of times. [#13132]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``structured_to_unstructured`` and ``unstructured_to_structured`` in\n  ``numpy.lib.recfunctions`` now work with Quantity. [#12486]\n\n- Implement multiplication and division of LogQuantities and numbers [#12566]\n\n- New ``doppler_redshift`` equivalency to convert between\n  Doppler redshift and radial velocity. [#12709]\n\n- Added the ``where`` keyword argument to the ``mean()``,``var()``, ``std()`` and ``nansum()`` methods of\n  ``astropy.units.Quantity``. Also added the ``initial`` keyword argument to ``astropy.units.Quantity.nansum()``. [#12891]\n\n- Added \"Maxwell\" as a unit for magnetic flux to the CGS module. [#12975]\n\n- ``Quantity.to_string()`` and ``FunctionUnitBase.to_string()`` now accept the\n  ``'latex_inline'`` unit format. The output of ``StructuredUnit.to_string()``\n  when called with ``format='latex_inline'`` is now more consistent with the\n  output when called with ``format='latex'``. [#13056]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added the ``where`` keyword argument to the ``mean()``, ``var()``, ``std()``, ``any()``, and ``all()`` methods of\n  ``astropy.utils.masked.MaskedNDArray``. [#12891]\n\n- Improve handling of unavailable IERS-A (predictive future Earth rotation) data\n  in two ways. First, allow conversions with degraded accuracy if the IERS-A data\n  are missing or do not cover the required time span. This is done with a new\n  config item ``conf.iers_degraded_accuracy`` which specifies the behavior when\n  times are outside the range of IERS table. The options are 'error' (raise an\n  ``IERSRangeError``, default), 'warn' (issue a ``IERSDegradedAccuracyWarning``)\n  or 'ignore' (ignore the problem). Second, the logic for auto-downloads was\n  changed to guarantee that no matter what happens with the IERS download\n  operations, only warnings will be issued. [#13052]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``astropy.wcs.Celprm`` and ``astropy.wcs.Prjprm`` have been added\n  to allow access to lower level WCSLIB functionality and to allow direct\n  access to the ``cel`` and ``prj`` members of ``Wcsprm``. [#12514]\n\n- Add ``temporal`` properties for convenient access of/selection of/testing for\n  the ``TIME`` axis introduced in WCSLIB version 7.8. [#13094]\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``dms_to_degrees`` and ``hms_to_hours`` functions (and implicitly\n  tuple-based initialization of ``Angle``) is now deprecated, as it was\n  difficult to be sure about the intent of the user for signed values of\n  the degrees/hours, minutes, and seconds. [#13162]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The already deprecated ``Planck18_arXiv_v2`` has been removed.\n  Use ``Planck18`` instead [#12354]\n\n- ``default_cosmology.get_cosmology_from_string`` is deprecated and will be\n  removed in two minor versions.\n  Use ``getattr(astropy.cosmology, <str>)`` instead. [#12375]\n\n- In I/O, conversions of Parameters move more relevant information from the\n  Parameter to the Column.\n  The default Parameter ``format_spec`` is changed from ``\".3g\"`` to ``\"\"``. [#12612]\n\n- Units of redshift are added to ``z_reion`` in built-in realizations' metadata. [#12624]\n\n- Cosmology realizations (e.g. ``Planck18``) and parameter dictionaries are now\n  lazily loaded from source files. [#12746]\n\n- The Cosmology Parameter argument \"fmt\" for specifying a format spec\n  has been deprecated in favor of using the built-in string representation from\n  the Parameter's value's dtype. [#13072]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- When reading an ECSV file, changed the type checking\n  to issue an ``InvalidEcsvDatatypeWarning`` instead of raising a ``ValueError``\n  exception if the ``datatype`` of a column is not recognized in the ECSV standard.\n  This also applies to older versions of ECSV files which used to silently\n  proceed but now warn first. [#12841]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Removed deprecated ``clobber`` argument from functions in ``astropy.io.fits``. [#12258]\n\n- Add ``-s/--sort`` argument to ``fitsheader`` to sort the fitsort-mode output. [#13106]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Deprecate asdf in astropy core in favor of the asdf-astropy package. [#12903, #12930]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Made ``astropy.modeling.fitting._fitter_to_model_params`` and ``astropy.modeling.fitting._model_to_fit_params``\n  public methods. [#12585]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Change the repr of the Table object to replace embedded newlines and tabs with\n  ``r'\\n'`` and ``r'\\t'`` respectively. This improves the display of such tables. [#12631]\n\n- A new keyword-only argument ``kind`` was added to the ``Table.sort`` method to\n  specify the sort algorithm. The signature of ``Table.sort`` was modified so that\n  the ``reverse`` argument is now keyword-only. Previously ``reverse`` could be\n  specified as the second positional argument. [#12637]\n\n- Changed behavior when a structured ``numpy.ndarray`` is added as a column to a\n  ``Table``. Previously this was converted to a ``NdarrayMixin`` subclass of\n  ``ndarray`` and added as a mixin column. This was because saving as a file (e.g.\n  HDF5, FITS, ECSV) was not supported for structured array columns. Now a\n  structured ``numpy.ndarray`` is added to the table as a native ``Column`` and\n  saving to file is supported. [#13236]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Backward-compatible import of ``astropy.tests.disable_internet``\n  has been removed; use ``pytest_remotedata.disable_internet``\n  from ``pytest-remotedata`` instead. [#12633]\n\n- Backward-compatible import of ``astropy.tests.helper.remote_data``\n  has been removed; use ``pytest.mark.remote_data`` from ``pytest-remotedata``\n  instead. [#12633]\n\n- The following are deprecated and will be removed in a future release.\n  Use ``pytest`` warning and exception handling instead: [#12633]\n\n  * ``astropy.io.ascii.tests.common.raises``\n  * ``astropy.tests.helper.catch_warnings``\n  * ``astropy.tests.helper.ignore_warnings``\n  * ``astropy.tests.helper.raises``\n  * ``astropy.tests.helper.enable_deprecations_as_exceptions``\n  * ``astropy.tests.helper.treat_deprecations_as_exceptions``\n\n- Backward-compatible plugin ``astropy.tests.plugins.display``\n  has been removed; use ``pytest-astropy-header`` instead. [#12633]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Creating an `~astropy.time.TimeDelta` object with numerical inputs\n  that do not have a unit and without specifying an explicit format,\n  for example ``TimeDelta(5)``,\n  now results in a `~astropy.time.TimeDeltaMissingUnitWarning`.\n  This also affects statements like ``Time(\"2020-01-01\") + 5`` or\n  ``Time(\"2020-01-05\") - Time(\"2020-01-03\") < 5``, which implicitly\n  transform the right-hand side into an `~astropy.time.TimeDelta` instance. [#12888]\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The machinery that makes observatory locations available as ``EarthLocation``\n  objects is now smarter about processing observatory names from its data files.\n  More names are available for use and the empty string is no longer considered\n  to be a valid name. [#12721]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed ``io.ascii`` read and write functions for most formats to correctly handle\n  data fields with embedded newlines for both the fast and pure-Python readers and\n  writers. [#12631]\n\n- Fix an issue when writing ``Time`` table columns to a file when the time\n  ``format`` is one of ``datetime``, ``datetime64``, or ``ymdhms``. Previously,\n  writing a ``Time`` column with one of these formats could result in an exception\n  or else an incorrect output file that cannot be read back in. [#12842]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Add a ``mask_invalid`` option to ``Table.read`` to allow deactivating the\n  masking of NaNs in float columns and empty strings in string columns. This\n  option is necessary to allow effective use of memory-mapped reading with\n  ``memmap=True``. [#12544]\n\n- Fix ``CompImageHeader.clear()``. [#13102]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Bugfix for ``ignore`` functionality failing in ``ModelBoundingBox`` when using\n  ``ignore`` option alongside passing bounding box data as tuples. [#13032]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a bug in ``Table.show_in_browser`` using the ``jsviewer=True`` option\n  to display the table with sortable columns. Previously the sort direction arrows\n  were not being shown due to missing image files for the arrows. [#12716]\n\n- Fix an issue when writing ``Time`` table columns to a file when the time\n  ``format`` is one of ``datetime``, ``datetime64``, or ``ymdhms``. Previously,\n  writing a ``Time`` column with one of these formats could result in an exception\n  or else an incorrect output file that cannot be read back in. [#12842]\n\n- Fixed a bug where it is not possible to set the ``.info.format`` property of a\n  table structured column and get formatted output. [#13233]\n\n- Fixed a bug when adding a masked structured array to a table. Previously this\n  was auto-converted to a ``NdarrayMixin`` which loses the mask. With this fix\n  the data are added to the table as a ``MaskedColumn`` and the mask is preserved. [#13236]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix an issue when writing ``Time`` table columns to a file when the time\n  ``format`` is one of ``datetime``, ``datetime64``, or ``ymdhms``. Previously,\n  writing a ``Time`` column with one of these formats could result in an exception\n  or else an incorrect output file that cannot be read back in. [#12842]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed a bug which caused ``numpy.interp`` to produce incorrect\n  results when ``Masked`` arrays were passed. [#12978]\n\n- Fixed HAS_YAML not working as intended. [#13066]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Convert ``NoConvergence`` errors to warnings in ``world_to_pixel_values`` so that callers can work at least with the non converged solution. [#11693]\n\n- Expose the ability to select TIME axis introduced in WCSLIB version 7.8. [#13062]\n\n- Do not call ``wcstab`` on ``wcscopy`` and copy ``wtb`` members from the original WCS. [#13063]\n\n- Updated bundled WCSLIB version to 7.11. This update together with 7.10\n  includes bug fixes to ``tabini()`` and ``tabcpy()`` as well as several\n  print formatting enhancements. For a full list of\n  changes - see http://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES [#13171]\n\n- Fixed error that occurred in ``WCS.world_to_pixel`` for ``WCS`` objects with a\n  spectral axis and observer location information when passing a ``SpectralCoord``\n  that had missing observer or target information. [#13228]\n\nVersion 5.0.4 (2022-03-31)\n==========================\n\nBug Fixes\n---------\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed the ``Gaussian2D`` ``bounding_box`` when ``theta`` is an angular\n  ``Quantity``. [#13021]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Reverted ``astropy.utils.iers.iers.IERS_A_URL`` to ``maia.usno.navy.mil`` domain instead\n  of NASA FTP to work around server issues. [#13004]\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled WCSLIB to version 7.9 with several bugfixes and added\n  support for time coordinate axes in ``wcsset()`` and ``wcssub()``. The\n  four-digit type code for the time axis will have the first digit set to 4,\n  i.e., four digit code will be 4xxx where x is a digit 0-9. For a full list of\n  bug fixes see https://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES [#12994]\n\n\nVersion 5.0.3 (2022-03-25)\n==========================\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Bugfix in ``astropy.convolution.utils.discretize_model`` which allows the function to handle a ``CompoundModel``.\n  Before this fix, ``discretize_model`` was confusing ``CompoundModel`` with a callable function. [#12959]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix write and read FITS tables with multidimensional items, using ``from_columns``\n  without previously defined ``ColDefs`` structure. [#12863]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fix VOTable linting to avoid use of shell option. [#12985]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix XML linting to avoid use of shell option. [#12985]\n\nOther Changes and Additions\n---------------------------\n\n- Updated the bundled CFITSIO library to 4.1.0. [#12967]\n\nVersion 5.0.2 (2022-03-10)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Bugfix to add backwards compatibility for reading ECSV version 0.9 files with\n  non-standard column datatypes (such as ``object``, ``str``, ``datetime64``,\n  etc.), which would raise a ValueError in ECSV version 1.0. [#12880]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Bugfix for ``units_mapping`` schema's property name conflicts. Changes:\n      * ``inputs`` to ``unit_inputs``\n      * ``outputs`` to ``unit_outputs`` [#12800]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where ``astropy.io.votable.validate`` was printing output to\n  ``sys.stdout`` when the ``output`` parameter was set to ``None``. ``validate``\n  now returns a string when ``output`` is set to ``None``, as documented.\n  [#12604]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fix handling of units on ``scale`` parameter in BlackBody model. [#12318]\n\n- Indexing on models can now be used with all types of integers\n  (like ``numpy.int64``) instead of just ``int``. [#12561]\n\n- Fix computation of the separability of a ``CompoundModel`` where another\n  ``CompoundModel`` is on the right hand side of the ``&`` operator. [#12907]\n\n- Provide a hook (``Model._calculate_separability_matrix``) to allow subclasses\n  of ``Model`` to define how to compute their separability matrix. [#12900]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed a bug in which running ``kuiper_false_positive_probability(D,N)`` on\n  distributions with many data points could produce NaN values for the false\n  positive probability of the Kuiper statistic. [#12896]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed a bug due to which ``naxis``, ``pixel_shape``, and\n  ``pixel_bounds`` attributes of ``astropy.wcs.WCS`` were not restored when\n  an ``astropy.wcs.WCS`` object was unpickled. This fix also eliminates\n  ``FITSFixedWarning`` warning issued during unpiclikng of the WCS objects\n  related to the number of axes. This fix also eliminates errors when\n  unpickling WCS objects originally created using non-default values for\n  ``key``, ``colsel``, and ``keysel`` parameters. [#12844]\n\nVersion 5.0.1 (2022-01-26)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Trying to create an instance of ``astropy.coordinates.Distance`` by providing\n  both ``z`` and ``parallax`` now raises the expected ``ValueError``. [#12531]\n\n- Fixed a bug where changing the wrap angle of the longitude component of a\n  representation could raise a warning or error in certain situations. [#12556]\n\n- ``astropy.coordinates.Distance`` constructor no longer ignores the ``unit``\n  keyword when ``parallax`` is provided. [#12569]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- ``astropy.cosmology.utils.aszarr`` can now convert ``Column`` objects. [#12525]\n\n- Reading a cosmology from an ECSV will load redshift and Hubble parameter units\n  from the cosmology units module. [#12636]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix formatting issue in ``_dump_coldefs`` and add tests for ``tabledump`` and\n  ``tableload`` convenience functions. [#12526]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- YAML can now also represent quantities and arrays with structured dtype,\n  as well as structured scalars based on ``np.void``. [#12509]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixes error when fitting multiplication or division based compound models\n  where the sub-models have different output units. [#12475]\n\n- Bugfix for incorrectly initialized and filled ``parameters`` data for ``Spline1D`` model. [#12523]\n\n- Bugfix for ``keyerror`` thrown by ``Model.input_units_equivalencies`` when\n  used on ``fix_inputs`` models which have no set unit equivalencies. [#12597]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``astropy.table.Table.keep_columns()`` and\n  ``astropy.table.Table.remove_columns()`` now work with generators of column\n  names. [#12529]\n\n- Avoid duplicate storage of info in serialized columns if the column\n  used to serialize already can hold that information. [#12607]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Fixed edge case bugs which emerged when using ``aggregate_downsample`` with custom bins. [#12527]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Structured units can be serialized to/from yaml. [#12492]\n\n- Fix bad typing problems by removing interaction with ``NDArray.__class_getitem__``. [#12511]\n\n- Ensure that ``Quantity.to_string(format='latex')`` properly typesets exponents\n  also when ``u.quantity.conf.latex_array_threshold = -1`` (i.e., when the threshold\n  is taken from numpy). [#12573]\n\n- Structured units can now be copied with ``copy.copy`` and ``copy.deepcopy``\n  and also pickled and unpicked also for ``protocol`` >= 2.\n  This does not work for big-endian architecture with older ``numpy<1.21.1``. [#12583]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Ensure that a ``Masked`` instance can be used to initialize (or viewed\n  as) a ``numpy.ma.Maskedarray``. [#12482]\n\n- Ensure ``Masked`` also works with numpy >=1.22, which has a keyword argument\n  name change for ``np.quantile``. [#12511]\n\n- ``astropy.utils.iers.LeapSeconds.auto_open()`` no longer emits unnecessary\n  warnings when ``astropy.utils.iers.conf.auto_max_age`` is set to ``None``. [#12713]\n\n\nVersion 5.0 (2021-11-15)\n========================\n\n\nNew Features\n------------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Added dealiasing support to ``convolve_fft``. [#11495]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Added missing coordinate transformations where the starting and ending frames\n  are the same (i.e., loopback transformations). [#10909]\n\n- Allow negation, multiplication and division also of representations that\n  include a differential (e.g., ``SphericalRepresentation`` with a\n  ``SphericalCosLatDifferential``).  For all operations, the outcome is\n  equivalent to transforming the representation and differential to cartesian,\n  then operating on those, and transforming back to the original representation\n  (except for ``UnitSphericalRepresentation``, which will return a\n  ``SphericalRepresentation`` if there is a scale change). [#11470]\n\n- ``RadialRepresentation.transform`` can work with a multiplication matrix only.\n  All other matrices still raise an exception. [#11576]\n\n- ``transform`` methods are added to ``BaseDifferential`` and ``CartesianDifferential``.\n  All transform methods on Representations now delegate transforming differentials\n  to the differential objects. [#11654]\n\n- Adds new ``HADec`` built-in frame with transformations to/from ``ICRS`` and ``CIRS``.\n  This frame complements ``AltAz`` to give observed coordinates (hour angle and declination)\n  in the ``ITRS`` for an equatorially mounted telescope. [#11676]\n\n- ``SkyCoord`` objects now have a ``to_table()`` method, which allows them to be\n  converted to a ``QTable``. [#11743]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Cosmologies now store metadata in a mutable parameter ``meta``.\n  The initialization arguments ``name`` and ``meta`` are keyword-only. [#11542]\n\n- A new unit, ``redshift``, is defined. It is a dimensionless unit to distinguish\n  redshift quantities from other non-redshift values. For compatibility with\n  dimensionless quantities the equivalency ``dimensionless_redshift`` is added.\n  This equivalency is enabled by default. [#11786]\n\n- Add equality operator for comparing Cosmology instances. Comparison is done on\n  all immutable fields (this excludes 'meta').\n\n  Now the following will work:\n\n  .. code-block:: python\n\n      >>> from astropy.cosmology import Planck13, Planck18\n      >>> Planck13 == Planck18\n      False\n\n      >>> Planck18 == Planck18\n      True [#11813]\n\n- Added ``read/write`` methods to Cosmology using the Unified I/O registry.\n  Now custom file format readers, writers, and format-identifier functions\n  can be registered to read, write, and identify, respectively, Cosmology\n  objects. Details are discussed in an addition to the docs. [#11948]\n\n- Added ``to_format/from_format`` methods to Cosmology using the Unified I/O\n  registry. Now custom format converters and format-identifier functions\n  can be registered to transform Cosmology objects.\n  The transformation between Cosmology and dictionaries is pre-registered.\n  Details are discussed in an addition to the docs. [#11998]\n\n- Added units module for defining and collecting cosmological units and\n  equivalencies. [#12092]\n\n- Flat cosmologies are now set by a mixin class, ``FlatCosmologyMixin`` and its\n  FLRW-specific subclass ``FlatFLRWMixin``. All ``FlatCosmologyMixin`` are flat,\n  but not all flat cosmologies are instances of ``FlatCosmologyMixin``. As\n  example, ``LambdaCDM`` **may** be flat (for the a specific set of parameter\n  values),  but ``FlatLambdaCDM`` **will** be flat.\n\n  Cosmology parameters are now descriptors. When accessed from a class they\n  transparently stores information, like the units and accepted equivalencies.\n  On a cosmology instance, the descriptor will return the parameter value.\n  Parameters can have custom ``getter`` methods.\n\n  Cosmological equality is refactored to check Parameters (and the name)\n  A new method, ``is_equivalent``, is added to check Cosmology equivalence, so\n  a ``FlatLambdaCDM`` and flat ``LambdaCDM`` are equivalent. [#12136]\n\n- Replaced ``z = np.asarray(z)`` with ``z = u.Quantity(z, u.dimensionless_unscaled).value``\n  in Cosmology methods. Input of values with incorrect units raises a UnitConversionError\n  or TypeError. [#12145]\n\n- Cosmology Parameters allow for custom value setters.\n  Values can be set once, but will error if set a second time.\n  If not specified, the default setter is used, which will assign units\n  using the Parameters ``units`` and ``equivalencies`` (if present).\n  Alternate setters may be registered with Parameter to be specified by a str,\n  not a decorator on the Cosmology. [#12190]\n\n- Cosmology instance conversion to dict now accepts keyword argument ``cls`` to\n  determine dict type, e.g. ``OrderedDict``. [#12209]\n\n- A new equivalency is added between redshift and the Hubble parameter and values\n  with units of little-h.\n  This equivalency is also available in the catch-all equivalency ``with_redshift``. [#12211]\n\n- A new equivalency is added between redshift and distance -- comoving, lookback,\n  and luminosity. This equivalency is also available in the catch-all equivalency\n  ``with_redshift``. [#12212]\n\n- Register Astropy Table into Cosmology's ``to/from_format`` I/O, allowing\n  a Cosmology instance to be parsed from or converted to a Table instance.\n  Also adds the ``__astropy_table__`` method allowing ``Table(cosmology)``. [#12213]\n\n- The WMAP1 and WMAP3 are accessible as builtin cosmologies. [#12248]\n\n- Register Astropy Model into Cosmology's ``to/from_format`` I/O, allowing\n  a Cosmology instance to be parsed from or converted to a Model instance. [#12269]\n\n- Register an ECSV reader and writer into Cosmology's I/O, allowing a Cosmology\n  instance to be read from from or written to an ECSV file. [#12321]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Added new way to specify the dtype for tables that are read: ``converters``\n  can specify column names with wildcards. [#11892]\n\n- Added a new ``astropy.io.ascii.Mrt`` class to write tables in the American\n  Astronomical Society Machine-Readable Table format,\n  including documentation and tests for the same. [#11897, #12301, #12302]\n\n- When writing, the input data are no longer copied, improving performance.\n  Metadata that might be changed, such as format and serialization\n  information, is copied, hence users can continue to count on no\n  changes being made to the input data. [#11919]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Add Parquet serialization of Tables with pyarrow, including metadata support and\n  columnar access. [#12215]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added fittable spline models to ``modeling``. [#11634]\n\n- Extensive refactor of ``BoundingBox`` for better usability and maintainability. [#11930]\n\n- Added ``CompoundBoundingBox`` feature to ``~astropy.modeling``, which allows more flexibility in\n  defining bounding boxes for models that are applied to images with many slices. [#11942]\n\n- Improved parameter support for ``astropy.modeling.core.custom_model`` created models. [#11984]\n\n- Added the following trigonometric models and linked them to their appropriate inverse models:\n    * ``Cosine1D`` [#12158]\n    * ``Tangent1D``\n    * ``ArcSine1D``\n    * ``ArcCosine1D``\n    * ``ArcTangent1D`` [#12185]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Added a new method ``Table.update()`` which does a dictionary-style update of a\n  ``Table`` by adding or replacing columns. [#11904]\n\n- Masked quantities are now fully supported in tables.  This includes ``QTable``\n  automatically converting ``MaskedColumn`` instances to ``MaskedQuantity``,\n  and ``Table`` doing the reverse. [#11914]\n\n- Added new keyword arguments ``keys_left`` and ``keys_right`` to the table ``join``\n  function to support joining tables on key columns with different names. In\n  addition the new keywords can accept a list of column-like objects which are\n  used as the match keys. This allows joining on arbitrary data which are not part\n  of the tables being joined. [#11954]\n\n- Formatting of any numerical values in the output of ``Table.info()`` and\n  ``Column.info()`` has been improved. [#12022]\n\n- It is now possible to add dask arrays as columns in tables\n  and have them remain as dask arrays rather than be converted\n  to Numpy arrays. [#12219]\n\n- Added a new registry for mixin handlers, which can be used\n  to automatically convert array-like Python objects into\n  mixin columns when assigned to a table column. [#12219]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Adds a new method ``earth_rotation_angle`` to calculate the Local Earth Rotation Angle.\n  Also adjusts Local Sidereal Time for the Terrestrial Intermediate Origin (``TIO``)\n  and adds a rigorous correction for polar motion. The ``TIO`` adjustment is approximately\n  3 microseconds per century from ``J2000`` and the polar motion correction is at most\n  about +/-50 nanoseconds. For models ``IAU1982`` and ``IAU1994``, no such adjustments are\n  made as they pre-date the TIO concept. [#11680]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- A custom binning scheme is now available in ``aggregate_downsample``.\n  It allows ``time_bin_start`` and ``time_bin_size`` to be arrays, and adds\n  an optional ``time_bin_end``.\n  This scheme mirrors the API for ``BinnedTimeSeries``. [#11266]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``Quantity`` gains a ``__class_getitem__`` to create unit-aware annotations\n   with the syntax ``Quantity[unit or physical_type, shape, numpy.dtype]``.\n   If the python version is 3.9+ or ``typing_extensions`` is installed,\n   these are valid static type annotations. [#10662]\n\n- Each physical type is added to ``astropy.units.physical``\n  (e.g., ``physical.length`` or ``physical.electrical_charge_ESU``).\n  The attribute-accessible names (underscored, without parenthesis) also\n  work with ``astropy.units.physical.get_physical_type``. [#11691]\n\n- It is now possible to have quantities based on structured arrays in\n  which the unit has matching structure, giving each field its own unit,\n  using units constructed like ``Unit('AU,AU/day')``. [#11775]\n\n- The milli- prefix has been added to ``astropy.units.Angstrom``. [#11788]\n\n- Added attributes ``base``, ``coords``, and ``index`` and method ``copy()`` to\n  ``QuantityIterator`` to match ``numpy.ndarray.flatiter``. [#11796]\n\n- Added \"angular frequency\" and \"angular velocity\" as aliases for the \"angular\n  speed\" physical type. [#11865]\n\n- Add light-second to units of length [#12128]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``astropy.utils.deprecated_renamed_argument()`` decorator now supports\n  custom warning messages. [#12305]\n\n- The NaN-aware numpy functions such as ``np.nansum`` now work on Masked\n  arrays, with masked values being treated as NaN, but without raising\n  warnings or exceptions. [#12454]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added a feature so that SphericalCircle will accept center parameter as a SkyCoord object. [#11790]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``astropy.wcs.utils.obsgeo_to_frame`` has been added to convert the obsgeo coordinate\n  array on ``astropy.wcs.WCS`` objects to an ``ITRS`` coordinate frame instance. [#11716]\n\n- Updated bundled ``WCSLIB`` to version 7.7 with several bugfixes. [#12034]\n\n\nAPI Changes\n-----------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- ``update_default_config`` and ``ConfigurationMissingWarning`` are deprecated. [#11502]\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``astropy.constants.set_enabled_constants`` context manager. [#12105]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Positions for the Moon using the 'builtin' ephemeris now use the new\n  ``erfa.moon98`` function instead of our own implementation of the Meeus\n  algorithm. As this also corrects a misunderstanding of the frame returned by\n  the Meeus, this improves the agreement with the JPL ephemeris from about 30 to\n  about 6 km rms. [#11753]\n\n- Removed deprecated ``representation`` attribute from\n  ``astropy.coordinates.BaseCoordinateFrame`` class. [#12257]\n\n- ``SpectralQuantity`` and ``SpectralCoord`` ``.to_value`` method can now be called without\n  ``unit`` argument in order to maintain a consistent interface with ``Quantity.to_value`` [#12440]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- ``z_at_value`` now works with arrays for all arguments (except ``func``,\n  ``verbose``, and ``method``). Consequently, ``coordinates.Distance.z`` can\n  be used when Distance is an array. [#11778]\n\n- Remove deprecation warning and error remapping in ``Cosmology.clone``.\n  Now unknown arguments will raise a ``TypeError``, not an ``AttributeError``. [#11785]\n\n- The ``read/write`` and ``to/from_format`` Unified I/O registries are separated\n  and apply only to ``Cosmology``. [#12015]\n\n- Cosmology parameters in ``cosmology.parameters.py`` now have units,\n  where applicable. [#12116]\n\n- The function ``astropy.cosmology.utils.inf_like()`` is deprecated. [#12175]\n\n- The function ``astropy.cosmology.utils.vectorize_if_needed()`` is deprecated.\n  A new function ``astropy.cosmology.utils.vectorize_redshift_method()`` is added\n  as replacement. [#12176]\n\n- Cosmology base class constructor now only accepts arguments ``name`` and ``meta``.\n  Subclasses should add relevant arguments and not pass them to the base class. [#12191]\n\nastropy.io\n^^^^^^^^^^\n\n- When ``astropy`` raises an ``OSError`` because a file it was told to write\n  already exists, the error message now always suggests the use of the\n  ``overwrite=True`` argument. The wording is now consistent for all I/O formats. [#12179]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``overwrite=None`` option for\n  ``astropy.io.ascii.ui.write()``. Overwriting existing files now only happens if\n  ``overwrite=True``. [#12171]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- The internal class _CardAccessor is no longer registered as a subclass of\n  the Sequence or Mapping ABCs. [#11923]\n\n- The deprecated ``clobber`` argument will be removed from the\n  ``astropy.io.fits`` functions in version 5.1, and the deprecation warnings now\n  announce that too. [#12311]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- The ``write`` function now is allowed to return possible content results, which\n  means that custom writers could, for example, create and return an instance of\n  some container class rather than a file on disk. [#11916]\n\n- The registry functions are refactored into a class-based system.\n  New Read-only, write-only, and read/write registries can be created.\n  All functions accept a new argument ``registry``, which if not specified,\n  defaults to the global default registry. [#12015]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Deprecated the ``pedantic`` keyword argument in the\n  ``astropy.io.votable.table.parse`` function and the corresponding configuration\n  setting. It has been replaced by the ``verify`` option. [#12129]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Refactored how ``astropy.modeling.Model`` handles model evaluation in order to better\n  organize the code. [#11931]\n\n- Removed the following deprecated modeling features:\n      ``astropy.modeling.utils.ExpressionTree`` class,\n      ``astropy.modeling.functional_models.MexicanHat1D`` model,\n      ``astropy.modeling.functional_models.MexicanHat2D`` model,\n      ``astropy.modeling.core.Model.inputs`` setting in model initialize,\n      ``astropy.modeling.core.CompoundModel.inverse`` setting in model initialize, and\n      ``astropy.modeling.core.CompoundModel.both_inverses_exist()`` method. [#11978]\n\n- Deprecated the ``AliasDict`` class in ``modeling.utils``. [#12411]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Removed ``block_reduce`` and ``block_replicate`` functions from\n  ``nddata.utils``. These deprecated functions in ``nddata.utils`` were\n  moved to ``nddata.blocks``. [#12288]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Removed the following deprecated features from ``astropy.stats``:\n\n  * ``conf`` argument for ``funcs.binom_conf_interval()`` and\n    ``funcs.binned_binom_proportion()``,\n  * ``conflevel`` argument for ``funcs.poisson_conf_interval()``, and\n  * ``conf_lvl`` argument for ``jackknife.jackknife_stats()``. [#12200]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Printing a ``Table`` now shows the qualified class name of mixin columns in the\n  dtype header row  instead of \"object\". This applies to all the ``Table`` formatted output\n  methods whenever ``show_dtype=True`` is selected. [#11660]\n\n- The 'overwrite' argument has been added to the jsviewer table writer.\n  Overwriting an existing file requires 'overwrite' to be True. [#11853]\n\n- The 'overwrite' argument has been added to the pandas table writers.\n  Overwriting an existing file requires 'overwrite' to be True. [#11854]\n\n- The table ``join`` function now accepts only the first four arguments ``left``,\n  ``right``, ``keys``, and ``join_type`` as positional arguments. All other\n  arguments must be supplied as keyword arguments. [#11954]\n\n- Adding a dask array to a Table will no longer convert\n  that dask to a Numpy array, so accessing t['dask_column']\n  will now return a dask array instead of a Numpy array. [#12219]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Along with the new method ``earth_rotation_angle``, ``sidereal_time`` now accepts\n  an ``EarthLocation`` as the ``longitude`` argument. [#11680]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Unit ``littleh`` and equivalency ``with_H0`` have been moved to the\n  ``cosmology`` module and are deprecated from ``astropy.units``. [#12092]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``astropy.utils.introspection.minversion()`` now uses\n  ``importlib.metadata.version()``. Therefore, its ``version_path`` keyword is no\n  longer used and deprecated. This keyword will be removed in a future release. [#11714]\n\n- Updated ``utils.console.Spinner`` to better resemble the API of\n  ``utils.console.ProgressBar``, including an ``update()`` method and\n  iterator support. [#11772]\n\n- Removed deprecated ``check_hashes`` in ``check_download_cache()``. The function also\n  no longer returns anything. [#12293]\n\n- Removed unused ``download_cache_lock_attempts`` configuration item in\n  ``astropy.utils.data``. Deprecation was not possible. [#12293]\n\n- Removed deprecated ``hexdigest`` keyword from ``import_file_to_cache()``. [#12293]\n\n- Setting ``remote_timeout`` configuration item in ``astropy.utils.data`` to 0 will\n  no longer disable download from the Internet; Set ``allow_internet`` configuration\n  item to ``False`` instead. [#12293]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``imshow_only_kwargs`` keyword from ``imshow_norm``. [#12290]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Move complex logic from ``HighLevelWCSMixin.pixel_to_world`` and\n  ``HighLevelWCSMixin.world_to_pixel`` into the helper functions\n  ``astropy.wcs.wcsapi.high_level_api.high_level_objects_to_values`` and\n  ``astropy.wcs.wcsapi.high_level_api.values_to_high_level_objects`` to allow\n  reuse in other places. [#11950]\n\n\nBug Fixes\n---------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- ``generate_config`` no longer outputs wrong syntax for list type. [#12037]\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where an older constants version cannot be set directly after\n  astropy import. [#12084]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Passing an ``array`` argument for any Kernel1D or Kernel2D subclasses (with the\n  exception of CustomKernel) will now raise a ``TypeError``. [#11969]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- If a ``Table`` containing a ``SkyCoord`` object as a column is written to a\n  FITS, ECSV or HDF5 file then any velocity information that might be present\n  will be retained. [#11750]\n\n- The output of ``SkyCoord.apply_space_motion()`` now always has the same\n  differential type as the ``SkyCoord`` itself. [#11932]\n\n- Fixed bug where Angle, Latitude and Longitude with NaN values could not be printed. [#11943]\n\n- Fixed a bug with the transformation from ``PrecessedGeocentric`` to ``GCRS``\n  where changes in ``obstime``, ``obsgeoloc``, or ``obsgeovel`` were ignored.\n  This bug would also affect loopback transformations from one ``PrecessedGeocentric``\n  frame to another ``PrecessedGeocentric`` frame. [#12152]\n\n- Fixed a bug with the transformations between ``TEME`` and ``ITRS`` or between ``TEME``\n  and itself where a change in ``obstime`` was ignored. [#12152]\n\n- Avoid unnecessary transforms through CIRS for AltAz and HADec and\n  use ICRS as intermediate frame for these transformations instead. [#12203]\n\n- Fixed a bug where instantiating a representation with a longitude component\n  could mutate input provided for that component even when copying is specified. [#12307]\n\n- Wrapping an ``Angle`` array will now ignore NaN values instead of attempting to wrap\n  them, which would produce unexpected warnings/errors when working with coordinates\n  and representations due to internal broadcasting. [#12317]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Dictionaries for in-built cosmology realizations are not altered by creating\n  the realization and are also made immutable. [#12278]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Prevent zero-byte writes for FITS binary tables to\n  speed up writes on the Lustre filesystem. [#11955]\n\n- Enable ``json.dump`` for FITS_rec with variable length (VLF) arrays. [#11957]\n\n- Add support for reading and writing int8 images [#11996]\n\n- Ensure header passed to ``astropy.io.fits.CompImageHDU`` does not need to contain\n  standard cards that can be automatically generated, such as ``BITPIX`` and ``NAXIS``. [#12061]\n\n- Fixed a bug where ``astropy.io.fits.HDUDiff`` would ignore the ``ignore_blank_cards``\n  keyword argument. [#12122]\n\n- Open uncompressed file even if extension says it's compressed [#12135]\n\n- Fix the computation of the DATASUM in a ``CompImageHDU`` when the data is >1D. [#12138]\n\n- Reading files where the SIMPLE card is present but with an invalid format now\n  issues a warning instead of raising an exception [#12234]\n\n- Convert UNDEFINED to None when iterating over card values. [#12310]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Update ASDF tag versions in ExtensionType subclasses to match ASDF Standard 1.5.0. [#11986]\n\n- Fix ASDF serialization of model inputs and outputs and add relevant assertion to\n  test helper. [#12381]\n\n- Fix bug preventing ASDF serialization of bounding box for models with only one input. [#12385]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Now accepting UCDs containing phot.color. [#11982]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added ``Parameter`` descriptions to the implemented models which were\n  missing. [#11232]\n\n- The ``separable`` property is now correctly set on models constructed with\n  ``astropy.modeling.custom_model``. [#11744]\n\n- Minor bugfixes and improvements to modeling including the following:\n      * Fixed typos and clarified several errors and their messages throughout\n        modeling.\n      * Removed incorrect try/except blocks around scipy code in\n        ``convolution.py`` and ``functional_models.py``.\n      * Fixed ``Ring2D`` model's init to properly accept all combinations\n        of ``r_in``, ``r_out``, and ``width``.\n      * Fixed bug in ``tau`` validator for the ``Logarithmic1D`` and\n        ``Exponential1D`` models when using them as model sets.\n      * Fixed ``copy`` method for ``Parameter`` in order to prevent an\n        automatic ``KeyError``, and fixed ``bool`` for ``Parameter`` so\n        that it functions with vector values.\n      * Removed unreachable code from ``Parameter``, the ``_Tabular`` model,\n        and the ``Drude1D`` model.\n      * Fixed validators in ``Drude1D`` model so that it functions in a\n        model set.\n      * Removed duplicated code from ``polynomial.py`` for handing of\n        ``domain`` and ``window``.\n      * Fixed the ``Pix2Sky_HEALPixPolar`` and ``Sky2Pix_HEALPixPolar`` modes\n        so that their ``evaluate`` and ``inverse`` methods actually work\n        without raising an error. [#12232]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Ensure that the ``wcs=`` argument to ``NDData`` is always parsed into a high\n  level WCS object. [#11985]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed a bug in sigma clipping where the bounds would not be returned for\n  completely empty or masked data. [#11994]\n\n- Fixed a bug in ``biweight_midvariance`` and ``biweight_scale`` where\n  output data units would be dropped for constant data and where the\n  result was a scalar NaN. [#12146]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Ensured that ``MaskedColumn.info`` is propagated in all cases, so that when\n  tables are sliced, writing will still be as requested on\n  ``info.serialize_method``. [#11917]\n\n- ``table.conf.replace_warnings`` and ``table.jsviewer.conf.css_urls`` configuration\n  items now have correct ``'string_list'`` type. [#12037]\n\n- Fixed an issue where initializing from a list of dict-like rows (Mappings) did\n  not work unless the row values were instances of ``dict``. Now any object that\n  is an instance of the more general ``collections.abc.Mapping`` will work. [#12417]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure that scalar ``QuantityDistribution`` unit conversion in ufuncs\n  works properly again. [#12471]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add quantity support for ``scipy.special`` dimensionless functions\n  erfinv, erfcinv, gammaln and loggamma. [#10934]\n\n- ``VOUnit.to_string`` output is now compliant with IVOA VOUnits 1.0 standards. [#11565]\n\n- Units initialization with unicode has been expanded to include strings such as\n  'M☉' and 'e⁻'. [#11827]\n\n- Give a more informative ``NotImplementedError`` when trying to parse a unit\n  using an output-only format such as 'unicode' or 'latex'. [#11829]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed a bug in ``get_readable_fileobj`` that prevented the unified file read\n  interface from closing ASCII files. [#11809]\n\n- The function ``astropy.utils.decorators.deprecated_attribute()`` no longer\n  ignores its ``message``, ``alternative``, and ``pending`` arguments. [#12184]\n\n- Ensure that when taking the minimum or maximum of a ``Masked`` array,\n  any masked NaN values are ignored. [#12454]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The tick labelling for radians has been fixed to remove a redundant ``.0`` in\n  the label for integer multiples of pi at 2pi and above. [#12221]\n\n- Fix a bug where non-``astropy.wcs.WCS`` WCS instances were not accepted in\n  ``WCSAxes.get_transform``. [#12286]\n\n- Fix compatibility with Matplotlib 3.5 when using the ``grid_type='contours'``\n  mode for drawing grid lines. [#12447]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Enabled ``SlicedLowLevelWCS.pixel_to_world_values`` to handle slices including\n  non-``int`` integers, e.g. ``numpy.int64``. [#11980]\n\n\nOther Changes and Additions\n---------------------------\n\n- In docstrings, Sphinx cross-reference targets now use intersphinx, even if the\n  target is an internal link (``link`` is now ``'astropy:link``).\n  When built in Astropy these links are interpreted as internal links. When built\n  in affiliate packages, the link target is set by the key 'astropy' in the\n  intersphinx mapping. [#11690]\n\n- Made PyYaml >= 3.13 a strict runtime dependency. [#11903]\n\n- Minimum version of required Python is now 3.8. [#11934]\n\n- Minimum version of required Scipy is now 1.3. [#11934]\n\n- Minimum version of required Matplotlib is now 3.1. [#11934]\n\n- Minimum version of required Numpy is now 1.18. [#11935]\n\n- Fix deprecation warnings with Python 3.10 [#11962]\n\n- Speed up ``minversion()`` in cases where a module with a ``__version__``\n  attribute is passed. [#12174]\n\n- ``astropy`` now requires ``packaging``. [#12199]\n\n- Updated the bundled CFITSIO library to 4.0.0. When compiling with an external\n  library, version 3.35 or later is required. [#12272]\n\n\nVersion 4.3.1 (2021-08-11)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- In ``fits.io.getdata`` do not fall back to first non-primary extension when\n  user explicitly specifies an extension. [#11860]\n\n- Ensure multidimensional masked columns round-trip properly to FITS. [#11911]\n\n- Ensure masked times round-trip to FITS, even if multi-dimensional. [#11913]\n\n- Raise ``ValueError`` if an ``np.float32`` NaN/Inf value is assigned to a\n  header keyword. [#11922]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed bug in ``fix_inputs`` handling of bounding boxes. [#11908]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix an error when converting to pandas any ``Table`` subclass that\n  automatically adds a table index when the table is created. An example is a\n  binned ``TimeSeries`` table. [#12018]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Ensure that unpickling quantities and units in new sessions does not change\n  hashes and thus cause problems with (de)composition such as getting different\n  answers from the ``.si`` attribute. [#11879]\n\n- Fixed cannot import name imperial from astropy.units namespace. [#11977]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Ensure any ``.info`` on ``Masked`` instances is propagated correctly when\n  viewing or slicing. As a consequence, ``MaskedQuantity`` can now be correctly\n  written to, e.g., ECSV format with ``serialize_method='data_mask'``. [#11910]\n\n\nVersion 4.3 (2021-07-26)\n========================\n\nNew Features\n------------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Change padding sizes for ``fft_pad`` in ``convolve_fft`` from powers of\n  2 only to scipy-optimized numbers, applied separately to each dimension;\n  yielding some performance gains and avoiding potential large memory\n  impact for certain multi-dimensional inputs. [#11533]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Adds the ability to create topocentric ``CIRS`` frames. Using these,\n  ``AltAz`` calculations are now accurate down to the milli-arcsecond\n  level. [#10994]\n\n- Adds a direct transformation from ``ICRS`` to ``AltAz`` frames. This\n  provides a modest speedup of approximately 10 percent. [#11079]\n\n- Adds new ``WGS84GeodeticRepresentation``, ``WGS72GeodeticRepresentation``,\n  and ``GRS80GeodeticRepresentation``. These are mostly for use inside\n  ``EarthLocation`` but can also be used to convert between geocentric\n  (cartesian) and different geodetic representations directly. [#11086]\n\n- ``SkyCoord.guess_from_table`` now also searches for differentials in the table.\n  In addition, multiple regex matches can be resolved when they are exact\n  component names, e.g. having both columns “dec” and “pm_dec” no longer errors\n  and will be included in the SkyCoord. [#11417]\n\n- All representations now have a ``transform`` method, which allows them to be\n  transformed by a 3x3 matrix in a Cartesian basis. By default, transformations\n  are routed through ``CartesianRepresentation``. ``SphericalRepresentation`` and\n  ``PhysicssphericalRepresentation`` override this for speed and to prevent NaN\n  leakage from the distance to the angular components.\n  Also, the functions ``is_O3`` and ``is_rotation`` have been added to\n  ``matrix_utities`` for checking whether a matrix is in the O(3) group or is a\n  rotation (proper or improper), respectively. [#11444]\n\n- Moved angle formatting and parsing utilities to\n  ``astropy.coordinates.angle_formats``.\n  Added new functionality to ``astropy.coordinates.angle_utilities`` for\n  generating points on or in spherical surfaces, either randomly or on a grid. [#11628]\n\n- Added a new method to ``SkyCoord``, ``spherical_offsets_by()``, which is the\n  conceptual inverse of ``spherical_offsets_to()``: Given angular offsets in\n  longitude and latitude, this method returns a new coordinate with the offsets\n  applied. [#11635]\n\n- Refactor conversions between ``GCRS`` and ``CIRS,TETE`` for better accuracy\n  and substantially improved speed. [#11069]\n\n- Also refactor ``EarthLocation.get_gcrs`` for an increase in performance of\n  an order of magnitude, which enters as well in getting observed positions of\n  planets using ``get_body``. [#11073]\n\n- Refactored the usage of metaclasses in ``astropy.coordinates`` to instead use\n  ``__init_subclass__`` where possible. [#11090]\n\n- Removed duplicate calls to ```transform_to``` from ```match_to_catalog_sky```\n  and ```match_to_catalog_3d```, improving their performance. [#11449]\n\n- The new DE440 and DE440s ephemerides are now available via shortcuts 'de440'\n  and 'de440s'.  The DE 440s ephemeris will probably become the default\n  ephemeris when choosing 'jpl' in 5.0. [#11601]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Cosmology parameter dictionaries now also specify the Cosmology class to which\n  the parameters correspond. For example, the dictionary for\n  ``astropy.cosmology.parameters.Planck18`` has the added key-value pair\n  (\"cosmology\", \"FlatLambdaCDM\"). [#11530]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Added support for reading and writing ASCII tables in QDP (Quick and Dandy\n  Plotter) format. [#11256]\n\n- Added support for reading and writing multidimensional column data (masked and\n  unmasked) to ECSV. Also added formal support for reading and writing object-type\n  column data which can contain items consisting of lists, dicts, and basic scalar\n  types. This can be used to store columns of variable-length arrays. Both of\n  these features use JSON to convert the object to a string that is stored in the\n  ECSV output. [#11569, #11662, #11720]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Added ``append`` keyword to append table objects to an existing FITS file [#2632, #11149]\n\n- Check that the SIMPLE card is present when opening a file, to ensure that the\n  file is a valid FITS file and raise a better error when opening a non FITS\n  one. ``ignore_missing_simple`` can be used to skip this verification. [#10895]\n\n- Expose ``Header.strip`` as a public method, to remove the most common\n  structural keywords. [#11174]\n\n- Enable the use of ``os.PathLike`` objects when dealing with (mainly FITS) files. [#11580]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Readers and writers can now set a priority, to assist with resolving which\n  format to use. [#11214]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Version 1.4 VOTables now use the VOUnit format specification. [#11032]\n\n- When reading VOTables using the Unified File Read/Write Interface (i.e. using\n  the ``Table.read()`` or ``QTable.read()`` functions) it is now possible to\n  specify all keyword arguments that are valid for\n  ``astropy.io.votable.table.parse()``. [#11643]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added a state attribute to models to allow preventing the syncing of\n  constraint values from the constituent models. This syncing can\n  greatly slow down fitting if there are large numbers of fit parameters.\n  model.sync_constraints = True means check constituent model constraints\n  for compound models every time the constraint is accessed, False, do not.\n  Fitters that support constraints will set this to False on the model copy\n  and then set back to True when the fit is complete before returning. [#11365]\n\n- The ``convolve_models_fft`` function implements model convolution so that one\n  insures that the convolution remains consistent across multiple different\n  inputs. [#11456]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Prevent unnecessary copies of the data during ``NDData`` arithmetic when units\n  need to be added. [#11107]\n\n- NDData str representations now show units, if present. [#11553]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added the ability to specify stdfunc='mad_std' when doing sigma clipping,\n  which will use a built-in function and lead to significant performance\n  improvements if cenfunc is 'mean' or 'median'. [#11664]\n\n\n- Significantly improved the performance of sigma clipping when cenfunc and\n  stdfunc are passed as strings and the ``grow`` option is not used. [#11219]\n\n- Improved performance of ``bayesian_blocks()`` by removing one ``np.log()``\n  call [#11356]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Add table attributes to include or exclude columns from the output when\n  printing a table. This functionality includes a context manager to\n  include/exclude columns temporarily. [#11190]\n\n- Improved the string representation of objects related to ``Table.indices`` so\n  they now indicate the object type and relevant attributes. [#11333]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- An exception is raised when ``n_bins`` is passed as an argument while\n  any of the parameters ``time_bin_start`` or ``time_bin_size`` is not\n  scalar. [#11463]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The ``physical_type`` attributes of each unit are now objects of the (new)\n  ``astropy.units.physical.PhysicalType`` class instead of strings and the\n  function ``astropy.units.physical.get_physical_type`` can now translate\n  strings to these objects. [#11204]\n\n-  The function ``astropy.units.physical.def_physical_type`` was created to\n   either define entirely new physical types, or to add more physical type\n   names to an existing physical types. [#11204]\n\n- ``PhysicalType``'s can be operated on using operations multiplication,\n  division, and exponentiation are to facilitate dimensional analysis. [#11204]\n\n- It is now possible to define aliases for units using\n  ``astropy.units.set_enabled_aliases``. This can be used when reading files\n  that have misspelled units. [#11258]\n\n- Add a new \"DN\" unit, ``units.dn`` or ``units.DN``, representing data number\n  for a detector. [#11591]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added ``ssl_context`` and ``allow_insecure`` options to ``download_file``,\n  as well as the ability to optionally use the ``certifi`` package to provide\n  root CA certificates when downloading from sites secured with\n  TLS/SSL. [#10434]\n\n- ``astropy.utils.data.get_pkg_data_path`` is publicly scoped (previously the\n  private function ``_find_pkg_data_path``) for obtaining file paths without\n  checking if the file/directory exists, as long as the package and module\n  do. [#11006]\n\n- Deprecated ``astropy.utils.OrderedDescriptor`` and\n  ``astropy.utils.OrderedDescriptorContainer``, as new features in Python 3\n  make their use less compelling. [#11094, #11099]\n\n- ``astropy.utils.masked`` provides a new ``Masked`` class/factory that can be\n  used to represent masked ``ndarray`` and all its subclasses, including\n  ``Quantity`` and its subclasses.  These classes can be used inside\n  coordinates, but the mask is not yet exposed.  Generally, the interface should\n  be considered experimental. [#11127, #11792]\n\n- Add new ``utils.parsing`` module to with helper wrappers around\n  ``ply``. [#11227]\n\n- Change the Time and IERS leap second handling so that the leap second table is\n  updated only when a Time transform involving UTC is performed. Previously this\n  update check was done the first time a ``Time`` object was created, which in\n  practice occurred when importing common astropy subpackages like\n  ``astropy.coordinates``. Now you can prevent querying internet resources (for\n  instance on a cluster) by setting ``iers.conf.auto_download = False``. This\n  can  be done after importing astropy but prior to performing any ``Time``\n  scale transformations related to UTC. [#11638]\n\n\n- Added a new module at ``astropy.utils.compat.optional_deps`` to consolidate\n  the definition of ``HAS_x`` optional dependency flag variables,\n  like ``HAS_SCIPY``. [#11490]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Add IVOA UCD mappings for some FITS WCS keywords commonly used in solar\n  physics. [#10965]\n\n- Add ``STOKES`` FITS WCS keyword to the IVOA UCD mapping. [#11236]\n\n- Updated bundled version of WCSLIB to version 7.6. See\n  https://www.atnf.csiro.au/people/mcalabre/WCS/CHANGES for a list of\n  included changes. [#11549]\n\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- For input to representations, subclasses of the class required for a\n  given attribute will now be allowed in. [#11113]\n\n- Except for ``UnitSphericalRepresentation``, shortcuts in representations now\n  allow for attached differentials. [#11467]\n\n- Allow coordinate name strings as input to\n  ``SkyCoord.is_transformable_to``. [#11552]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Change ``z_at_value`` to use ``scipy.optimize.minimize_scalar`` with default\n  method ``Brent`` (other options ``Bounded`` and ``Golden``) and accept\n  ``bracket`` option to set initial search region. [#11080]\n\n- Clarified definition of inputs to ``angular_diameter_distance_z1z2``.\n  The function now emits ``AstropyUserWarning`` when ``z2`` is less than\n  ``z1``. [#11197]\n\n- Split cosmology realizations from core classes, moving the former to new file\n  ``realizations``. [#11345]\n\n- Since cosmologies are immutable, the initialization signature and values can\n  be stored, greatly simplifying cloning logic and extending it to user-defined\n  cosmology classes that do not have attributes with the same name as each\n  initialization argument.  [#11515]\n\n- Cloning a cosmology with changed parameter(s) now appends \"(modified)\" to the\n  new instance's name, unless a name is explicitly passed to ``clone``. [#11536]\n\n- Allow ``m_nu`` to be input as any quantity-like or array-like -- Quantity,\n  array, float, str, etc. Input is passed to the Quantity constructor and\n  converted to eV, still with the prior mass-energy equivalence\n  enabled. [#11640]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- For conversion between FITS tables and astropy ``Table``, the standard mask\n  values of ``NaN`` for float and null string for string are now properly\n  recognized, leading to a ``MaskedColumn`` with appropriately set mask\n  instead of a ``Column`` with those values exposed. Conversely, when writing\n  an astropy ``Table`` to a FITS tables, masked values are now consistently\n  converted to the standard FITS mask values of ``NaN`` for float and null\n  string for string (i.e., not just for tables with ``masked=True``, which no\n  longer is guaranteed to signal the presence of ``MaskedColumn``). [#11222]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- The use of ``version='1.0'`` is now fully deprecated in constructing\n  a ``astropy.io.votable.tree.VOTableFile``. [#11659]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``astropy.modeling.blackbody`` module. [#10972]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Added ``Column.value`` as an alias for the existing ``Column.data`` attribute.\n  This makes accessing a column's underlying data array consistent with the\n  ``.value`` attribute available for ``Time`` and ``Quantity`` objects. [#10962]\n\n- In reading from a FITS tables, the standard mask values of ``NaN`` for float\n  and null string for string are properly recognized, leading to a\n  ``MaskedColumn`` with appropriately set mask. [#11222]\n\n- Changed the implementation of the ``table.index.Index`` class so instantiating\n  from this class now returns an ``Index`` object as expected instead of a\n  ``SlicedIndex`` object. [#11333]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The ``physical_type`` attribute of units now returns an instance of\n  ``astropy.units.physical.PhysicalType`` instead of a string.  Because\n  ``PhysicalType`` instances can be compared to strings, no code changes\n  should be necessary when making comparisons.  The string representations\n  of different physical types will differ from previous releases. [#11204]\n\n- Calling ``Unit()`` with no argument now returns a dimensionless unit,\n  as was documented but not implemented. [#11295]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Removed deprecated ``utils.misc.InheritDocstrings`` and ``utils.timer``. [#10281]\n\n- Removed usage of deprecated ``ipython`` stream in ``utils.console``. [#10942]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Deprecate ``accuracy`` argument in ``all_world2pix`` which was mistakenly\n  *documented*, in the case ``accuracy`` was ever used. [#11055]\n\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixes for ``convolve_fft`` documentation examples. [#11510]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Allow ``Distance`` instances with negative distance values as input for\n  ``SphericalRepresentation``.  This was always noted as allowed in an\n  exception message when a negative ``Quantity`` with length units was\n  passed in, but was not actually possible to do. [#11113]\n\n- Makes the ``Angle.to_string`` method to follow the format described in the\n  docstring with up to 8 significant decimals instead of 4. [#11153]\n\n- Ensure that proper motions can be calculated when converting a ``SkyCoord``\n  with cartesian representation to unit-spherical, by fixing the conversion of\n  ``CartesianDifferential`` to ``UnitSphericalDifferential``. [#11469]\n\n- When re-representing coordinates from spherical to unit-spherical and vice\n  versa, the type of differential will now be preserved. For instance, if only a\n  radial velocity was present, that will remain the case (previously, a zero\n  proper motion component was added). [#11482]\n\n- Ensure that wrapping of ``Angle`` does not raise a warning even if ``nan`` are\n  present.  Also try to make sure that the result is within the wrapped range\n  even in the presence of rounding errors. [#11568]\n\n- Comparing a non-SkyCoord object to a ``SkyCoord`` using ``==`` no longer\n  raises an error. [#11666]\n\n- Different ``SkyOffsetFrame`` classes no longer interfere with each other,\n  causing difficult to debug problems with the ``origin`` attribute. The\n  ``origin`` attribute now no longer is propagated, so while it remains\n  available on a ``SkyCoord`` that is an offset, it no longer is available once\n  that coordinate is transformed to another frame. [#11730] [#11730]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Cosmology instance names are now immutable. [#11535]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed bug where writing a table that has comments defined (via\n  ``tbl.meta['comments']``) with the 'csv' format was failing. Since the\n  formally defined CSV format does not support comments, the comments are now\n  just ignored unless ``comment=<comment prefix>`` is supplied to the\n  ``write()`` call. [#11475]\n\n- Fixed the issue where the CDS reader failed to treat columns\n  as nullable if the ReadMe file contains a limits specifier. [#11531]\n\n- Made sure that the CDS reader does not ignore an order specifier that\n  may be present after the null specifier '?'. Also made sure that it\n  checks null values only when an '=' symbol is present and reads\n  description text even if there is no whitespace after '?'. [#11593]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix ``ColDefs.add_col/del_col`` to allow in-place addition or removal of\n  a column. [#11338]\n\n- Fix indexing of ``fits.Header`` with Numpy integers. [#11387]\n\n- Do not delete ``EXTNAME`` for compressed image header if a default and\n  non-default ``EXTNAME`` are present. [#11396]\n\n- Prevent warnings about ``HIERARCH`` with ``CompImageHeader`` class. [#11404]\n\n- Fixed regression introduced in Astropy 4.0.5 and 4.2.1 with verification of\n  FITS headers with HISTORY or COMMENT cards with long (> 72 characters)\n  values. [#11487]\n\n- Fix reading variable-length arrays when there is a gap between the data and the\n  heap. [#11688]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- ``NumericArray`` converter now properly broadcasts scalar mask to array. [#11157]\n\n- VOTables are now written with the correct namespace and schema location\n  attributes. [#11659]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixes the improper propagation of ``bounding_box`` from\n  ``astropy.modeling.models`` to their inverses. For cases in which the inverses\n  ``bounding_box`` can be determined, the proper calculation has been\n  implemented. [#11414]\n\n- Bugfix to allow rotation models to accept arbitrarily-shaped inputs. [#11435]\n\n- Bugfixes for ``astropy.modeling`` to allow ``fix_inputs`` to accept empty\n  dictionaries and dictionaries with ``numpy`` integer keys. [#11443]\n\n- Bugfix for how ``SPECIAL_OPERATORS`` are handled. [#11512]\n\n- Fixes ``Model`` crashes when some inputs are scalars and during some types of\n  output reshaping. [#11548]\n\n- Fixed bug in ``LevMarLSQFitter`` when using weights and vector inputs. [#11603]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed a bug with the ``copy=False`` option when carrying out sigma\n  clipping - previously if ``masked=False`` this still copied the data,\n  but this will now change the array in-place. [#11219]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Ensure that adding a ``Quantity`` or other mixin column to a ``Table``\n  does not have side effects, such as creating an associated ``info``\n  instance (which would lead to slow-down of, e.g., slicing afterwards). [#11077]\n\n- When writing to a FITS tables, masked values are again always converted to\n  the standard FITS mask values of ``NaN`` for float and null string\n  for string, not just for table with ``masked=True``. [#11222]\n\n- Using ``Table.to_pandas()`` on an indexed ``Table`` with masked integer values\n  now correctly construct the ``pandas.DataFrame``. [#11432]\n\n- Fixed ``Table`` HTML representation in Jupyter notebooks so that it is\n  horizontally scrollable within Visual Studio Code. This was done by wrapping\n  the ``<table>`` in a ``<div>`` element. [#11476]\n\n- Fix a bug where a string-valued ``Column`` that happened to have a ``unit``\n  attribute could not be added to a ``QTable``.  Such columns are now simply\n  kept as ``Column`` instances (with a warning). [#11585]\n\n- Fix an issue in ``Table.to_pandas(index=<colname>)`` where the index column name\n  was not being set properly for the ``DataFrame`` index. This was introduced by\n  an API change in pandas version 1.3.0. Previously when creating a ``DataFrame``\n  with the index set to an astropy ``Column``, the ``DataFrame`` index name was\n  automatically set to the column name. [#11921]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix a thread-safety issue with initialization of the leap-second table\n  (which is only an issue when ERFA's built-in table is out of date). [#11234]\n\n- Fixed converting a zero-length time object from UTC to\n  UT1 when an empty array is passed. [#11516]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- ``Distribution`` instances can now be used as input to ``Quantity`` to\n  initialize ``QuantityDistribution``.  Hence, ``distribution * unit``\n  and ``distribution << unit`` will work too. [#11210]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Move non-astronomy units from astrophys.py to a new misc.py file. [#11142]\n\n- The physical type of ``astropy.units.mol / astropy.units.m ** 3`` is now\n  defined as molar concentration.  It was previously incorrectly defined\n  as molar volume. [#11204]\n\n- Make ufunc helper lookup thread-safe. [#11226]\n\n- Make ``Unit`` string parsing (as well as ``Angle`` parsing) thread-safe. [#11227]\n\n- Decorator ``astropy.units.decorators.quantity_input`` now only evaluates\n  return type annotations based on ``UnitBase`` or ``FunctionUnitBase`` types.\n  Other annotations are skipped over and are not attempted to convert to the\n  correct type. [#11506]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Make ``lazyproperty`` and ``classdecorator`` thread-safe. This should fix a\n  number of thread safety issues. [#11224]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that resulted in some parts of grid lines being visible when they\n  should have been hidden. [#11380]\n\n- Fixed a bug that resulted in ``time_support()`` failing for intervals of\n  a few months if one of the ticks was the month December. [#11615]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``fit_wcs_from_points`` now produces a WCS with integer ``NAXIXn``\n  values. [#10865]\n\n- Updated bundled version of ``WCSLIB`` to v7.4, fixing a bug that caused\n  the coefficients of the TPD distortion function to not be written to the\n  header. [#11260]\n\n- Fixed a bug in assigning type when converting ``colsel`` to\n  ``numpy.ndarray``. [#11431]\n\n- Added ``WCSCOMPARE_*`` constants to the list of WCSLIB constants\n  available/exposed through the ``astropy.wcs`` module. [#11647]\n\n- Fix a bug that caused APE 14 WCS transformations for FITS WCS with ZOPT, BETA,\n  VELO, VOPT, or VRAD CTYPE to not work correctly. [#11781]\n\n\nOther Changes and Additions\n---------------------------\n\n- The configuration file is no longer created by default when importing astropy\n  and its existence is no longer required. Affiliated packages should update their\n  ``__init__.py`` module to remove the block using ``update_default_config`` and\n  ``ConfigurationDefaultMissingWarning``. [#10877]\n\n- Replace ``pkg_resources`` (from setuptools) with ``importlib.metadata`` which\n  comes from the stdlib, except for Python 3.7 where the backport package is added\n  as a new dependency. [#11091]\n\n- Turn on numpydoc's ``numpydoc_xref_param_type``  to create cross-references\n  for the parameter types in the Parameters, Other Parameters, Returns and Yields\n  sections of the docstrings. [#11118]\n\n- Docstrings across the package are standardized to enable references.\n  Also added is an Astropy glossary-of-terms to define standard inputs,\n  e.g. ``quantity-like`` indicates an input that can be interpreted by\n  ``astropy.units.Quantity``. [#11118]\n\n- Binary wheels are now built to the manylinux2010 specification. These wheels\n  should be supported on all versions of pip shipped with Python 3.7+. [#11377]\n\n- The name of the default branch for the astropy git repository has been renamed\n  to ``main``, and the documentation and tooling has been updated accordingly.\n  If you have made a local clone you may wish to update it following the\n  instructions in the repository's README. [#11379]\n\n- Sphinx cross-reference link targets are added for every ``PhysicalType``.\n  Now in the parameter types in the Parameters, Other Parameters, Returns and\n  Yields sections of the docstring, the physical type of a quantity can be\n  annotated in square brackets.\n  E.g. `` distance : `~astropy.units.Quantity` ['length'] `` [#11595]\n\n- The minimum supported version of ``ipython`` is now 4.2. [#10942]\n\n- The minimum supported version of ``pyerfa`` is now 1.7.3. [#11637]\n\n\nVersion 4.2.1 (2021-04-01)\n==========================\n\nBug Fixes\n---------\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Fixed an issue where specializations of the comoving distance calculation\n  for certain cosmologies could not handle redshift arrays. [#10980]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix bug where manual fixes to invalid header cards were not preserved when\n  saving a FITS file. [#11108]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- ``NumericArray`` converter now properly broadcasts scalar mask to array.\n  [#11157]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix bug when initializing a ``Table`` subclass that uses ``TableAttribute``'s.\n  If the data were an instance of the table then attributes provided in the\n  table initialization call could be ignored. [#11217]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Change epoch of ``TimeUnixTAI`` (``\"unix_tai\"``) from ``1970-01-01T00:00:00 UTC``\n  to ``1970-01-01T00:00:00 TAI`` to match the intended and documented behaviour.\n  This essentially changes the resulting times by 8.000082 seconds, the initial\n  offset between TAI and UTC. [#11249]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed a bug with the ``quantity_input`` decorator where allowing\n  dimensionless inputs for an argument inadvertently disabled any checking of\n  compatible units for that argument. [#11283]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix a bug so that ``np.shape``, ``np.ndim`` and ``np.size`` again work on\n  classes that use ``ShapedLikeNDArray``, like representations, frames,\n  sky coordinates, and times. [#11133]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix error when a user defined ``proj_point`` parameter is passed to ``fit_wcs_from_points``. [#11139]\n\n\nOther Changes and Additions\n---------------------------\n\n\n- Change epoch of ``TimeUnixTAI`` (``\"unix_tai\"``) from ``1970-01-01T00:00:00 UTC``\n  to ``1970-01-01T00:00:00 TAI`` to match the intended and documented behaviour.\n  This essentially changes the resulting times by 8.000082 seconds, the initial\n  offset between TAI and UTC. [#11249]\n\n\nVersion 4.2 (2020-11-24)\n========================\n\nNew Features\n------------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Methods ``convolve`` and ``convolve_fft`` both now return Quantity arrays\n  if user input is given in one. [#10822]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Numpy functions that broadcast, change shape, or index (like\n  ``np.broadcast_to``, ``np.rot90``, or ``np.roll``) now work on\n  coordinates, frames, and representations. [#10337]\n\n- Add a new science state ``astropy.coordinates.erfa_astrom.erfa_astrom`` and\n  two classes ``ErfaAstrom``, ``ErfaAstromInterpolator`` as wrappers to\n  the ``pyerfa`` astrometric functions used in the coordinate transforms.\n  Using ``ErfaAstromInterpolator``, which interpolates astrometric properties for\n  ``SkyCoord`` instances with arrays of obstime, can dramatically speed up\n  coordinate transformations while keeping microarcsecond resolution.\n  Depending on needed precision and the obstime array in question, speed ups\n  reach factors of 10x to >100x. [#10647]\n\n- ``galactocentric_frame_defaults`` can now also be used as a registry, with\n  user-defined parameter values and metadata. [#10624]\n\n- Method ``.realize_frame`` from coordinate frames now accepts ``**kwargs``,\n  including ``representation_type``. [#10727]\n\n- Avoid an unnecessary call to ``erfa.epv00`` in transformations between\n  ``CIRS`` and ``ICRS``, improving performance by 50 %. [#10814]\n\n- A new equatorial coordinate frame, with RA and Dec measured w.r.t to the True\n  Equator and Equinox (TETE). This frame is commonly known as \"apparent place\"\n  and is the correct frame for coordinates returned from JPL Horizons. [#10867]\n\n- Added a context manager ``impose_finite_difference_dt`` to the\n  ``TransformGraph`` class to override the finite-difference time step\n  attribute (``finite_difference_dt``) for all transformations in the graph\n  with that attribute. [#10341]\n\n- Improve performance of ``SpectralCoord`` by refactoring internal\n  implementation. [#10398]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The final version of the Planck 2018 cosmological parameters are included\n  as the ``Planck18`` object, which is now the default cosmology.  The\n  parameters are identical to those of the ``Planck18_arXiv_v2`` object,\n  which is now deprecated and will be removed in a future release. [#10915]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added NFW profile and tests to modeling package [#10505]\n\n- Added missing logic for evaluate to compound models [#10002]\n\n- Stop iteration in ``FittingWithOutlierRemoval`` before reaching ``niter`` if\n  the masked points are no longer changing. [#10642]\n\n- Keep a (shallow) copy of ``fit_info`` from the last iteration of the wrapped\n  fitter in ``FittingWithOutlierRemoval`` and also record the actual number of\n  iterations performed in it. [#10642]\n\n- Added attributes for fitting uncertainties (covariance matrix, standard\n  deviations) to models. Parameter covariance matrix can be accessed via\n  ``model.cov_matrix``, standard deviations by ``model.stds`` or individually\n  for each parameter by ``parameter.std``. Currently implemented for\n  ``LinearLSQFitter`` and ``LevMarLSQFitter``. [#10552]\n\n- N-dimensional least-squares statistic and specific 1,2,3-D methods [#10670]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added ``circstd`` function to obtain a circular standard deviation. [#10690]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Allow initializing a ``Table`` using a list of ``names`` in conjunction with\n  a ``dtype`` from a numpy structured array. The list of ``names`` overrides the\n  names specified in the ``dtype``. [#10419]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Add new ``isclose()`` method to ``Time`` and ``TimeDelta`` classes to allow\n  comparison of time objects to within a specified tolerance. [#10646]\n\n- Improve initialization time by a factor of four when creating a scalar ``Time``\n  object in a format like ``unix`` or ``cxcsec`` (time delta from a reference\n  epoch time). [#10406]\n\n- Improve initialization time by a factor of ~25 or more for large arrays of\n  string times in ISO, ISOT or year day-of-year formats. This is done with a new\n  C-based time parser that can be adapted for other fixed-format custom time\n  formats. [#10360]\n\n- Numpy functions that broadcast, change shape, or index (like\n  ``np.broadcast_to``, ``np.rot90``, or ``np.roll``) now work on times.\n  [#10337, #10502]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Improve memory and speed performance when iterating over the entire time\n  column of a ``TimeSeries`` object. Previously this involved O(N^2) operations\n  and memory. [#10889]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``Quantity.to`` has gained a ``copy`` option to allow copies to be avoided\n  when the units do not change. [#10517]\n\n- Added the ``spat`` unit of solid angle that represents the full sphere.\n  [#10726]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``ShapedLikeNDArray`` has gained the capability to use numpy functions\n  that broadcast, change shape, or index. [#10337]\n\n- ``get_free_space_in_dir`` now takes a new ``unit`` keyword and\n  ``check_free_space_in_dir`` takes ``size`` defined as ``Quantity``. [#10627]\n\n- New ``astropy.utils.data.conf.allow_internet`` configuration item to\n  control downloading data from the Internet. Setting ``allow_internet=False``\n  is the same as ``remote_timeout=0``. Using ``remote_timeout=0`` to control\n  internet access will stop working in a future release. [#10632]\n\n- New ``is_url`` function so downstream packages do not have to secretly use\n  the hidden ``_is_url`` anymore. [#10684]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added the ``Quadrangle`` patch for ``WCSAxes`` for a latitude-longitude\n  quadrangle.  Unlike ``matplotlib.patches.Rectangle``, the edges of this\n  patch will be rendered as curved lines if appropriate for the WCS\n  transformation. [#10862]\n\n- The position of tick labels are now only calculated when needed. If any text\n  parameters are changed (color, font weight, size etc.) that don't effect the\n  tick label position, the positions are not recomputed, improving performance.\n  [#10806]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``WCS.to_header()`` now appends comments to SIP coefficients. [#10480]\n\n- A new property ``dropped_world_dimensions`` has been added to\n  ``SlicedLowLevelWCS`` to record information about any world axes removed by\n  slicing a WCS. [#10195]\n\n- New ``WCS.proj_plane_pixel_scales()`` and ``WCS.proj_plane_pixel_area()``\n  methods to return pixel scales and area, respectively, as Quantity. [#10872]\n\n\nAPI Changes\n-----------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- ``set_temp_config`` now preserves the existing cache rather than deleting\n  it and relying on reloading it from the previous config file. This ensures\n  that any programmatically made changes are preserved as well. [#10474]\n\n- Configuration path detection logic has changed: Now, it looks for ``~`` first\n  before falling back to older logic. In addition, ``HOMESHARE`` is no longer\n  used in Windows. [#10705]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The passing of frame classes (as opposed to frame instances) to the\n  ``transform_to()`` methods of low-level coordinate-frame classes has been\n  deprecated.  Frame classes can still be passed to the ``transform_to()``\n  method of the high-level ``SkyCoord`` class, and using ``SkyCoord`` is\n  recommended for all typical use cases of transforming coordinates. [#10475]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added a ``grow`` parameter to ``SigmaClip``, ``sigma_clip`` and\n  ``sigma_clipped_stats``, to allow expanding the masking of each deviant\n  value to its neighbours within a specified radius. [#10613]\n\n- Passing float ``n`` to ``poisson_conf_interval`` when using\n  ``interval='kraft-burrows-nousek'`` now raises ``TypeError`` as its value\n  must be an integer. [#10838]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Change ``Table.columns.keys()`` and ``Table.columns.values()`` to both return\n  generators instead of a list. This matches the behavior for Python ``dict``\n  objects. [#10543]\n\n- Removed the ``FastBST`` and ``FastRBT`` indexing engines because they depend\n  on the ``bintrees`` package, which is no longer maintained and is deprecated.\n  Instead, use the ``SCEngine`` indexing engine, which is similar in\n  performance and relies on the ``sortedcontainers`` package. [#10622]\n\n- When slicing a mixin column in a table that had indices, the indices are no\n  longer copied since they generally are not useful, having the wrong shape.\n  With this, the behaviour becomes the same as that for a regular ``Column``.\n  (Note that this does not affect slicing of a table; sliced columns in those\n  will continue to carry a sliced version of any indices). [#10890]\n\n- Change behavior so that when getting a single item out of a mixin column such\n  as ``Time``, ``TimeDelta``, ``SkyCoord`` or ``Quantity``, the ``info``\n  attribute is no longer copied. This improves performance, especially when the\n  object is an indexed column in a ``Table``. [#10889]\n\n- Raise a TypeError when a scalar column is added to an unsized table. [#10476]\n\n- The order of columns when creating a table from a ``list`` of ``dict`` may be\n  changed. Previously, the order was alphabetical because the ``dict`` keys\n  were assumed to be in random order. Since Python 3.7, the keys are always in\n  order of insertion, so ``Table`` now uses the order of keys in the first row\n  to set the column order. To alphabetize the columns to match the previous\n  behavior, use ``t = t[sorted(t.colnames)]``. [#10900]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Refactor ``Time`` and ``TimeDelta`` classes to inherit from a common\n  ``TimeBase`` class. The ``TimeDelta`` class no longer inherits from ``Time``.\n  A number of methods that only apply to ``Time`` (e.g. ``light_travel_time``)\n  are no longer available in the ``TimeDelta`` class. [#10656]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The ``bar`` unit is no longer wrongly considered an SI unit, meaning that\n  SI decompositions like ``(u.kg*u.s**-2* u.sr**-1 * u.nm**-1).si`` will\n  no longer include it. [#10586]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Shape-related items from ``astropy.utils.misc`` -- ``ShapedLikeNDArray``,\n  ``check_broadcast``, ``unbroadcast``, and ``IncompatibleShapeError`` --\n  have been moved to their own module, ``astropy.utils.shapes``. They remain\n  importable from ``astropy.utils``. [#10337]\n\n- ``check_hashes`` keyword in ``check_download_cache`` is deprecated and will\n  be removed in a future release. [#10628]\n\n- ``hexdigest`` keyword in ``import_file_to_cache`` is deprecated and will\n  be removed in a future release. [#10628]\n\n\nBug Fixes\n---------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Fix a few issues with ``generate_config`` when used with other packages.\n  [#10893]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug in the coordinate-frame attribute ``CoordinateAttribute`` where\n  the internal transformation could behave differently depending on whether\n  the input was a low-level coordinate frame or a high-level ``SkyCoord``.\n  ``CoordinateAttribute`` now always performs a ``SkyCoord``-style internal\n  transformation, including the by-default merging of frame attributes. [#10475]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed an issue of ``Model.render`` when the input ``out`` datatype is not\n  float64. [#10542]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fix support for referencing WCSAxes coordinates by their world axes names.\n  [#10484]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Objective functions called by ``astropy.wcs.fit_wcs_from_points`` were\n  treating longitude and latitude distances equally. Now longitude scaled\n  properly. [#10759]\n\n\nOther Changes and Additions\n---------------------------\n\n- Minimum version of required Python is now 3.7. [#10900]\n\n- Minimum version of required Numpy is now 1.17. [#10664]\n\n- Minimum version of required Scipy is now 1.1. [#10900]\n\n- Minimum version of required PyYAML is now 3.13. [#10900]\n\n- Minimum version of required Matplotlib is now 3.0. [#10900]\n\n- The private ``_erfa`` module has been converted to its own package,\n  ``pyerfa``, which is a required dependency for astropy, and can be imported\n  with ``import erfa``.  Importing ``_erfa`` from ``astropy`` will give a\n  deprecation warning.  [#10329]\n\n- Added ``optimize=True`` flag to calls of ``yacc.yacc`` (as already done for\n  ``lex.lex``) to allow running in ``python -OO`` session without raising an\n  exception in ``astropy.units.format``. [#10379]\n\n- Shortened FITS comment strings for some D2IM and CPDIS FITS keywords to\n  reduce the number of FITS ``VerifyWarning`` warnings when working with WCSes\n  containing lookup table distortions. [#10513]\n\n- When importing astropy without first building the extension modules first,\n  raise an error directly instead of trying to auto-build. [#10883]\n\n\n\nVersion 4.1 (2020-10-21)\n========================\n\nNew Features\n------------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Add new function ``generate_config`` to generate the configuration file and\n  include it in the documentation. [#10148]\n\n- ``ConfigNamespace.__iter__`` and ``ConfigNamespace.keys`` now yield ``ConfigItem``\n  names defined within it. Similarly, ``items`` and ``values`` would yield like a\n  Python dictionary would. [#10139]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Added a new ``SpectralCoord`` class that can be used to define spectral\n  coordinates and transform them between different velocity frames. [#10185]\n\n- Angle parsing now supports ``cardinal direction`` in the cases\n  where angles are initialized as ``string`` instances. eg ``\"17°53'27\"W\"``.[#9859]\n\n- Allow in-place modification of array-valued ``Frame`` and ``SkyCoord`` objects.\n  This provides limited support for updating coordinate data values from another\n  coordinate object of the same class and equivalent frame attributes. [#9857]\n\n- Added a robust equality operator for comparing ``SkyCoord``, frame, and\n  representation objects. A comparison like ``sc1 == sc2`` will now return a\n  boolean or boolean array where the objects are strictly equal in all relevant\n  frame attributes and coordinate representation values. [#10154]\n\n- Added the True Equator Mean Equinox (TEME) frame. [#10149]\n\n- The ``Galactocentric`` frame will now use the \"latest\" parameter definitions\n  by default. This currently corresponds to the values defined in v4.0, but will\n  change with future releases. [#10238]\n\n- The ``SkyCoord.from_name()`` and Sesame name resolving functionality now is\n  able to cache results locally and will do so by default. [#9162]\n\n- Allow in-place modification of array-valued ``Representation`` and ``Differential``\n  objects, including of representations with attached differentials. [#10210]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Functional Units can now be processed in CDS-tables. [#9971]\n\n- Allow reading in ASCII tables which have duplicate column names. [#9939]\n\n- Fixed failure of ASCII ``fast_reader`` to handle ``names``, ``include_names``,\n  ``exclude_names`` arguments for ``RDB`` formatted tables. Homogenised checks\n  and exceptions for invalid ``names`` arguments. Improved performance when\n  parsing \"wide\" tables with many columns. [#10306]\n\n- Added type validation of key arguments in calls to ``io.ascii.read()`` and\n  ``io.ascii.write()`` functions. [#10005]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n- Added serialization of parameter constraints fixed and bounds.  [#10082]\n\n- Added 'functional_models.py' and 'physical_models.py' to asdf/tags/transform,\n  with to allow serialization of all functional and physical models. [#10028, #10293]\n\n- Fix ASDF serialization of circular model inverses, and remove explicit calls\n  to ``asdf.yamlutil`` functions that became unnecessary in asdf 2.6.0. [#10189, #10384]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Added support for writing Dask arrays to disk efficiently for ``ImageHDU`` and\n  ``PrimaryHDU``. [#9742]\n\n- Add HDU name and ver to FITSDiff report where appropriate [#10197]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- New ``exceptions.conf.max_warnings`` configuration item to control the number of times a\n  type of warning appears before being suppressed. [#10152]\n\n- No longer ignore attributes whose values were specified as empty\n  strings. [#10583]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n- Added Plummer1D model to ``functional_models``. [#9896]\n\n- Added ``UnitsMapping`` model and ``Model.coerce_units`` to support units on otherwise\n  unitless models. [#9936]\n\n- Added ``domain`` and ``window`` attributes to ``repr`` and ``str``. Fixed bug with\n  ``_format_repr`` in core.py. [#9941]\n\n- Polynomial attributes ``domain`` and ``window`` are now tuples of size 2 and are\n  validated. `repr` and `print` show only their non-default values. [#10145]\n\n- Added ``replace_submodel()`` method to ``CompoundModel`` to modify an\n  existing instance. [#10176]\n\n- Delay construction of ``CompoundModel`` inverse until property is accessed,\n  to support ASDF deserialization of circular inverses in component models. [#10384]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Added support in the ``bitmask`` module for using mnemonic bit flag names\n  when specifying the bit flags to be used or ignored when converting a bit\n  field to a boolean. [#10095, #10208]\n\n- Added ``reshape_as_blocks`` function to reshape a data array into\n  blocks, which is useful to efficiently apply functions on block\n  subsets of the data instead of using loops.  The reshaped array is a\n  view of the input data array. [#10214]\n\n- Added a ``cache`` keyword option to allow caching for ``CCDData.read`` if\n  filename is a URL. [#10265]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Added ability to specify a custom matching function for table joins.  In\n  particular this makes it possible to do cross-match table joins on ``SkyCoord``,\n  ``Quantity``, or standard columns, where column entries within a specified\n  distance are considered to be matched. [#10169]\n\n- Added ``units`` and ``descriptions`` keyword arguments to the Table object\n  initialization and ``Table.read()`` methods.  This allows directly setting\n  the ``unit`` and ``description`` for the table columns at the time of\n  creating or reading the table. [#9671]\n\n- Make table ``Row`` work as mappings, by adding ``.keys()`` and ``.values()``\n  methods. With this ``**row`` becomes possible, as does, more simply, turning\n  a ``Row`` into a dictionary with ``dict(row)``. [#9712]\n\n- Added two new ``Table`` methods ``.items()`` and ``.values()``, which return\n  respectively ``tbl.columns.items()`` (iterator over name, column tuples)  and\n  ``tbl.columns.values()`` (list of columns) for a ``Table`` object ``tbl``. [#9780]\n\n- Added new ``Table`` method ``.round()``, which rounds numeric columns to the\n  specified number of decimals. [#9862]\n\n- Updated ``to_pandas()`` and ``from_pandas()`` to use and support Pandas\n  nullable integer data type for masked integer data. [#9541]\n\n- The HDF5 writer, ``write_table_hdf5()``, now allows passing through\n  additional keyword arguments to the ``h5py.Group.create_dataset()``. [#9602]\n\n- Added capability to add custom table attributes to a ``Table`` subclass.\n  These attributes are persistent and can be set during table creation. [#10097]\n\n- Added support for ``SkyCoord`` mixin columns in ``dstack``, ``vstack`` and\n  ``insert_row`` functions. [#9857]\n\n- Added support for coordinate ``Representation`` and ``Differential`` mixin\n  columns. [#10210]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Added a new time format ``unix_tai`` which is essentially Unix time but with\n  leap seconds included.  More precisely, this is the number of seconds since\n  ``1970-01-01 00:00:08 TAI`` and corresponds to the ``CLOCK_TAI`` clock\n  available on some linux platforms. [#10081]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added ``torr`` pressure unit. [#9787]\n\n- Added the ``equal_nan`` keyword argument to ``isclose`` and ``allclose``, and\n  updated the docstrings. [#9849]\n\n- Added ``Rankine`` temperature unit. [#9916]\n\n- Added integrated flux unit conversion to ``spectral_density`` equivalency.\n  [#10015]\n\n- Changed ``pixel_scale`` equivalency to allow scales defined in any unit.\n  [#10123]\n\n- The ``quantity_input`` decorator now optionally allows passing through\n  numeric values or numpy arrays with numeric dtypes to arguments where\n  ``dimensionless_unscaled`` is an allowed unit. [#10232]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added a new ``MetaAttribute`` class to support easily adding custom attributes\n  to a subclass of classes like ``Table`` or ``NDData`` that have a ``meta``\n  attribute. [#10097]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added ``invalid`` keyword to ``SqrtStretch``, ``LogStretch``,\n  ``PowerStretch``, and ``ImageNormalize`` classes and the\n  ``simple_norm`` function.  This keyword is used to replace generated\n  NaN values. [#10182]\n\n- Fixed an issue where ticks were sometimes not drawn at the edges of a spherical\n  projection on a WCSAxes. [#10442]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- WCS objects with a spectral axis will now return ``SpectralCoord``\n  objects when calling ``pixel_to_world`` instead of ``Quantity``,\n  and can now take either ``Quantity`` or ``SpectralCoord`` as input\n  to ``pixel_to_world``. [#10185]\n\n- Implemented support for the ``-TAB`` algorithm (WCS Paper III). [#9641]\n\n- Added an ``_as_mpl_axes`` method to the ``HightLevelWCSWrapper`` class. [#10138]\n\n- Add .upper() to ctype or ctype names to wcsapi/fitwcs.py to mitigate bugs from\n  unintended lower/upper case issues [#10557]\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The equality operator for comparing ``SkyCoord``, frame, and representation\n  objects was changed. A comparison like ``sc1 == sc2`` was previously\n  equivalent to ``sc1 is sc2``. It will now return a boolean or boolean array\n  where the objects are strictly equal in all relevant frame attributes and\n  coordinate representation values. If the objects have different frame\n  attributes or representation types then an exception will be raised. [#10154]\n\n- ```SkyCoord.radial_velocity_correction``` now allows you to pass an ```obstime``` directly\n  when the ```SkyCoord``` also has an ```obstime``` set. In this situation, the position of the\n  ```SkyCoord``` has space motion applied to correct to the passed ```obstime```. This allows\n  mm/s radial velocity precision for objects with large space motion. [#10094]\n\n- For consistency with other astropy classes, coordinate ``Representations``\n  and ``Differentials`` can now be initialized with an instance of their own class\n  if that instance is passed in as the first argument. [#10210]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Changed the behavior when reading a table where both the ``names`` argument\n  is provided (to specify the output column names) and the ``converters``\n  argument is provided (to specify column conversion functions). Previously the\n  ``converters`` dict names referred to the *input* table column names, but now\n  they refer to the *output* table column names. [#9739]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- For FIELDs with datatype=\"char\", store the values as strings instead\n  of bytes. [#9505]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table.from_pandas`` now supports a ``units`` dictionary as argument to pass units\n  for columns in the ``DataFrame``. [#9472]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Require that ``in_subfmt`` and ``out_subfmt`` properties of a ``Time`` object\n  have allowed values at the time of being set, either when creating the object\n  or when setting those properties on an existing ``Time`` instance.  Previously\n  the validation of those properties was not strictly enforced. [#9868]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Changed the exception raised by ``get_readable_fileobj`` on missing\n  compression modules (for ``bz2`` or ``lzma``/``xz`` support) to\n  ``ModuleNotFoundError``, consistent with ``io.fits`` file handlers. [#9761]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Deprecated the ``imshow_only_kwargs`` keyword in ``imshow_norm``.\n  [#9915]\n\n- Non-finite input values are now automatically excluded in\n  ``HistEqStretch`` and ``InvertedHistEqStretch``. [#10177]\n\n- The ``PowerDistStretch`` and ``InvertedPowerDistStretch`` ``a``\n  value is restricted to be ``a >= 0`` in addition to ``a != 1``.\n  [#10177]\n\n- The ``PowerStretch``, ``LogStretch``, and ``InvertedLogStretch``\n  ``a`` value is restricted to be ``a > 0``. [#10177]\n\n- The ``AsinhStretch`` and ``SinhStretch`` ``a`` value is restricted\n  to be ``0 < a <= 1``. [#10177]\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fix a bug where for light deflection by the Sun it was always assumed that the\n  source was at infinite distance, which in the (rare and) absolute worst-case\n  scenario could lead to errors up to 3 arcsec. [#10666]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- For FIELDs with datatype=\"char\", store the values as strings instead\n  of bytes. [#9505]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a bug that prevented ``Time`` columns from being used to sort a table.\n  [#10824]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- WCS objects with a spectral axis will now return ``SpectralCoord``\n  objects when calling ``pixel_to_world`` instead of ``Quantity``\n  (note that ``SpectralCoord`` is a sub-class of ``Quantity``). [#10185]\n\n- Add .upper() to ctype or ctype names to wcsapi/fitwcs.py to mitigate bugs from\n  unintended lower/upper case issues [#10557]\n\n- Added bounds to ``fit_wcs_from_points`` to ensure CRPIX is on\n  input image. [#10346]\n\n\nOther Changes and Additions\n---------------------------\n\n- The way in which users can specify whether to build astropy against\n  existing installations of C libraries rather than the bundled one\n  has changed, and should now be done via environment variables rather\n  than setup.py flags (e.g. --use-system-erfa). The available variables\n  are ``ASTROPY_USE_SYSTEM_CFITSIO``, ``ASTROPY_USE_SYSTEM_ERFA``,\n  ``ASTROPY_USE_SYSTEM_EXPAT``, ``ASTROPY_USE_SYSTEM_WCSLIB``, and\n  ``ASTROPY_USE_SYSTEM_ALL``. These should be set to ``1`` to build\n  against the system libraries. [#9730]\n\n- The infrastructure of the package has been updated in line with the\n  APE 17 roadmap (https://github.com/astropy/astropy-APEs/blob/master/APE17.rst).\n  The main changes are that the ``python setup.py test`` and\n  ``python setup.py build_docs`` commands will no longer work. The easiest\n  way to replicate these commands is to install the tox\n  (https://tox.readthedocs.io) package and run ``tox -e test`` and\n  ``tox -e build_docs``. It is also possible to run pytest and sphinx\n  directly. Other significant changes include switching to setuptools_scm to\n  manage the version number, and adding a ``pyproject.toml`` to opt in to\n  isolated builds as described in PEP 517/518. [#9726]\n\n- Bundled ``expat`` is updated to version 2.2.9. [#10038]\n\n- Increase minimum asdf version to 2.6.0. [#10189]\n\n- The bundled version of PLY was updated to 3.11. [#10258]\n\n- Removed dependency on scikit-image. [#10214]\n\nVersion 4.0.5 (2021-03-26)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix bug where manual fixes to invalid header cards were not preserved when\n  saving a FITS file. [#11108]\n\n- Fix parsing of RVKC header card patterns that were not recognised\n  where multiple spaces were separating field-specifier and value like\n  \"DP1.AXIS.1:   1\". [#11301]\n\n- Fix misleading missing END card error when extra data are found at the end\n  of the file. [#11285]\n\n- Fix incorrect wrapping of long card values as CONTINUE cards when some\n  words in the value are longer than a single card. [#11304]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Fixed problem when writing serialized metadata to HDF5 using h5py >= 3.0.\n  With the newer h5py this was writing the metadata table as a variable-length\n  string array instead of the previous fixed-length bytes array. Fixed astropy\n  to force using a fixed-length bytes array. [#11359]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Change ``Voigt1D`` function to use Humlicek's approximation to avoid serious\n  inaccuracies + option to use (compiled) ``scipy.special.wofz`` error function\n  for yet more accurate results. [#11177]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed bug when initializing a ``Table`` with a column as list of ``Quantity``,\n  for example ``Table({'x': [1*u.m, 2*u.m]})``. Previously this resulted in an\n  ``object`` dtype with no column ``unit`` set, but now gives a float array with\n  the correct unit. [#11329]\n\n- Fixed byteorder conversion in ``to_pandas()``, which had incorrectly\n  triggered swapping when native endianness was stored with explicit\n  ``dtype`` code ``'<'`` (or ``'>'``) instead of ``'='``. [#11288, #11294]\n\n- Fixed a compatibility issue with numpy 1.21. Initializing a Table with a\n  column like ``['str', np.ma.masked]`` was failing in tests due to a change in\n  numpy. [#11364]\n\n- Fixed bug when validating the inputs to ``table.hstack``, ``table.vstack``,\n  and ``table.dstack``. Previously, mistakenly calling ``table.hstack(t1, t2)``\n  (instead of ``table.hstack([t1, t2]))`` would return ``t1`` instead of raising\n  an exception. [#11336]\n\n- Fixed byteorder conversion in ``to_pandas()``, which had incorrectly\n  triggered swapping when native endianness was stored with explicit\n  ``dtype`` code ``'<'`` (or ``'>'``) instead of ``'='``. [#11288]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix leap second update when using a non english locale. [#11062]\n\n- Fix default assumed location to be the geocenter when transforming times\n  to and from solar-system barycenter scales. [#11134]\n\n- Fix inability to write masked times with ``formatted_value``. [#11195]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Ensure ``keepdims`` works for taking ``mean``, ``std``, and ``var`` of\n  ``Quantity``. [#11198]\n\n- For ``Quantity.to_string()``, ensure that the precision argument is also\n  used when the format is not latex. [#11145]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Allow \"un-setting\" of auxiliary WCS parameters in the ``aux`` attribute of\n  ``Wcsprm``. [#11166]\n\n\n\n\n\nVersion 4.0.4 (2020-11-24)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``norm()`` method for ``RadialDifferential`` no longer requires ``base``\n  to be specified.  The ``norm()`` method for other non-Cartesian differential\n  classes now gives a clearer error message if ``base`` is not specified. [#10969]\n\n- The transformations between ``ICRS`` and any of the heliocentric ecliptic\n  frames (``HeliocentricMeanEcliptic``, ``HeliocentricTrueEcliptic``, and\n  ``HeliocentricEclipticIAU76``) now correctly account for the small motion of\n  the Sun when transforming a coordinate with velocity information. [#10970]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Partially fixed a performance issue when reading in parallel mode. Parallel\n  reading currently has substantially worse performance than the default serial\n  reading, so we now ignore the parallel option and fall back to serial reading.\n  [#10880]\n\n- Fixed a bug where \"\" (blank string) as input data for a boolean type column\n  was causing an exception instead of indicating a masked value. As a\n  consequence of the fix, the values \"0\" and \"1\" are now also allowed as valid\n  inputs for boolean type columns. These new allowed values apply for both ECSV\n  and for basic character-delimited data files ('basic' format with appropriate\n  ``converters`` specified). [#10995]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed use of weights with ``LinearLSQFitter``. [#10687]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed an issue in biweight stats when MAD=0 to give the same output\n  with and without an input ``axis``. [#10912]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix a problem with the ``plot_date`` format for matplotlib >= 3.3 caused by\n  a change in the matplotlib plot date default reference epoch in that release.\n  [#10876]\n\n- Improve initialization time by a factor of four when creating a scalar ``Time``\n  object in a format like ``unix`` or ``cxcsec`` (time delta from a reference\n  epoch time). [#10406]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed the calculation of the tight bounding box of a ``WCSAxes``. This should\n  also significantly improve the application of ``tight_layout()`` to figures\n  containing ``WCSAxes``. [#10797]\n\n\nVersion 4.0.3 (2020-10-14)\n==========================\n\nBug Fixes\n---------\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a small bug where initializing an empty ``Column`` with a structured dtype\n  with a length and a shape failed to give the requested dtype. [#10819]\n\nOther Changes and Additions\n---------------------------\n\n- Fixed installation of the source distribution with pip<19. [#10837, #10852]\n\n\nVersion 4.0.2 (2020-10-10)\n==========================\n\nNew Features\n------------\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``astropy.utils.data.download_file`` now supports FTPS/FTP over TLS. [#9964]\n\n- ``astropy.utils.data`` now uses a lock-free mechanism for caching. This new\n  mechanism uses a new cache layout and so ignores caches created using earlier\n  mechanisms (which were causing lockups on clusters). The two cache formats can\n  coexist but do not share any files. [#10437, #10683]\n\n- ``astropy.utils.data`` now ignores the config item\n  ``astropy.utils.data.conf.download_cache_lock_attempts`` since no locking is\n  done. [#10437, #10683]\n\n- ``astropy.utils.data.download_file`` and related functions now interpret the\n  parameter or config file setting ``timeout=0`` to mean they should make no\n  attempt to download files. [#10437, #10683]\n\n- ``astropy.utils.import_file_to_cache`` now accepts a keyword-only argument\n  ``replace``, defaulting to True, to determine whether it should replace existing\n  files in the cache, in a way as close to atomic as possible. [#10437, #10683]\n\n- ``astropy.utils.data.download_file`` and related functions now treat\n  ``http://example.com`` and ``http://example.com/`` as equivalent. [#10631]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- The new auxiliary WCS parameters added in WCSLIB 7.1 are now exposed as\n  the ``aux`` attribute of ``Wcsprm``. [#10333]\n\n- Updated bundled version of ``WCSLIB`` to v7.3. [#10433]\n\n\nBug fixes\n---------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Added an extra fallback to ``os.expanduser('~')`` when trying to find the\n  user home directory. [#10570]\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Corrected definition of parsec to 648 000 / pi AU following IAU 2015 B2 [#10569]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where a float-typed integers in the argument ``x_range`` of\n  ``astropy.convolution.utils.discretize_oversample_1D`` (and the 2D version as\n  well) fails because it uses ``numpy.linspace``, which requires an ``int``.\n  [#10696]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure that for size-1 array ``SkyCoord`` and coordinate frames\n  the attributes also properly become scalars when indexed with 0.\n  [#10113]\n\n- Fixed a bug where ``SkyCoord.separation()`` and ``SkyCoord.separation_3d``\n  were not accepting a frame object. [#10332]\n\n- Ensure that the ``lon`` values in ``SkyOffsetFrame`` are wrapped correctly at\n  180 degree regardless of how the underlying data is represented. [#10163]\n\n- Fixed an error in the obliquity of the ecliptic when transforming to/from the\n  ``*TrueEcliptic`` coordinate frames. The error would primarily result in an\n  inaccuracy in the ecliptic latitude on the order of arcseconds. [#10129]\n\n- Fixed an error in the computation of the location of solar system bodies where the\n  Earth location of the observer was ignored during the correction for light travel\n  time. [#10292]\n\n- Ensure that coordinates with proper motion that are transformed to other\n  coordinate frames still can be represented properly. [#10276]\n\n- Improve the error message given when trying to get a cartesian representation\n  for coordinates that have both proper motion and radial velocity, but no\n  distance. [#10276]\n\n- Fixed an error where ``SkyCoord.apply_space_motion`` would return incorrect\n  results when no distance is set and proper motion is high. [#10296]\n\n- Make the parsing of angles thread-safe so that ``Angle`` can be used in\n  Python multithreading. [#10556]\n\n- Fixed reporting of ``EarthLocation.info`` which previously raised an exception.\n  [#10592]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug with the C ``fast_reader`` not correctly parsing newlines when\n  ``delimiter`` was also set to ``\\n`` or ``\\r``; ensured consistent handling\n  of input strings without newline characters. [#9929]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix integer formats of ``TFORMn=Iw`` columns in ASCII tables to correctly read\n  values exceeding int32 - setting int16, int32 or int64 according to ``w``. [#9901]\n\n- Fix unclosed memory-mapped FITS files in ``FITSDiff`` when difference found.\n  [#10159]\n\n- Fix crash when reading an invalid table file. [#10171]\n\n- Fix duplication issue when setting a keyword ending with space. [#10482]\n\n- Fix ResourceWarning with ``fits.writeto`` and ``pathlib.Path`` object.\n  [#10599]\n\n- Fix repr for commentary cards and strip spaces for commentary keywords.\n  [#10640]\n\n- Fix compilation of cfitsio with Xcode 12. [#10772]\n\n- Fix handling of 1-dimensional arrays with a single element in ``BinTableHDU`` [#10768]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Fix id URL in ``baseframe-1.0.0`` ASDF schema. [#10223]\n\n- Write keys to ASDF only if the value is present, to account\n  for a change in behavior in asdf 2.8. [#10674]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Fix ``Table.(read|write).help`` when reader or writer has no docstring. [#10460]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed parsing failure of VOTable with no fields. When detecting a non-empty\n  table with no fields, the following warning/exception is issued:\n  E25 \"No FIELDs are defined; DATA section will be ignored.\" [#10192]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed a problem with mapping ``input_units`` and ``return_units``\n  of a ``CompoundModel`` to the units of the constituent models. [#10158]\n\n- Removed hard-coded names of inputs and outputs. [#10174]\n\n- Fixed a problem where slicing a ``CompoundModel`` by name will crash if\n  there ``fix_inputs`` operators are present. [#10224]\n\n- Removed a limitation of fitting of data with units with compound models\n  without units when the expression involves operators other than addition\n  and subtraction. [#10415]\n\n- Fixed a problem with fitting ``Linear1D`` and ``Planar2D`` in model sets. [#10623]\n\n- Fixed reported module name of ``math_functions`` model classes. [#10694]\n\n- Fixed reported module name of ``tabular`` model classes. [#10709]\n\n- Do not create new ``math_functions`` models for ufuncs that are\n  only aliases (divide and mod). [#10697]\n\n- Fix calculation of the ``Moffat2D`` derivative with respect to gamma. [#10784]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed an API regression where ``SigmaClip.__call__`` would convert masked\n  elements to ``nan`` and upcast the dtype to ``float64`` in its output\n  ``MaskedArray`` when using the ``axis`` parameter along with the defaults\n  ``masked=True`` and ``copy=True``. [#10610]\n\n- Fixed an issue where fully masked ``MaskedArray`` input to\n  ``sigma_clipped_stats`` gave incorrect results. [#10099]\n\n- Fixed an issue where ``sigma_clip`` and ``SigmaClip.__call__``\n  would return a masked array instead of a ``ndarray`` when\n  ``masked=False`` and the input was a full-masked ``MaskedArray``.\n  [#10099]\n\n- Fixed bug with ``funcs.poisson_conf_interval`` where an integer for N\n  with ``interval='kraft-burrows-nousek'`` would throw an error with\n  mpmath backend. [#10427]\n\n- Fixed bug in ``funcs.poisson_conf_interval`` with\n  ``interval='kraft-burrows-nousek'`` where certain combinations of source\n  and background count numbers led to ``ValueError`` due to the choice of\n  starting value for numerical optimization. [#10618]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a bug when writing a table with mixin columns to FITS, ECSV or HDF5.\n  If one of the data attributes of the mixin (e.g. ``skycoord.ra``) had the\n  same name as one of the table column names (``ra``), the column (``ra``)\n  would be dropped when reading the table back. [#10222]\n\n- Fixed a bug when sorting an indexed table on the indexed column after first\n  sorting on another column. [#10103]\n\n- Fixed a bug in table argsort when called with ``reverse=True`` for an\n  indexed table. [#10103]\n\n- Fixed a performance regression introduced in #9048 when initializing a table\n  from Python lists. Also fixed incorrect behavior (for data types other than\n  float) when those lists contain ``np.ma.masked`` elements to indicate masked\n  data. [#10636]\n\n- Avoid modifying ``.meta`` when serializing columns to FITS. [#10485]\n\n- Avoid crash when reading a FITS table that contains mixin info and PyYAML\n  is missing. [#10485]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Ensure that for size-1 array ``Time``, the location also properly becomes\n  a scalar when indexed with 0. [#10113]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Refined test_parallax to resolve difference between 2012 and 2015 definitions. [#10569]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The default IERS server has been updated to use the FTPS server hosted by\n  CDDIS. [#9964]\n\n- Fixed memory allocation on 64-bit systems within ``xml.iterparse`` [#10076]\n\n- Fix case where ``None`` could be used in a numerical computation. [#10126]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where the ``ImageNormalize`` ``clip`` keyword was\n  ignored when used with calling the object on data. [#10098]\n\n- Fixed a bug where ``axes.xlabel``/``axes.ylabel`` where not correctly set\n  nor returned on an ``EllipticalFrame`` class ``WCSAxes`` plot. [#10446]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Handled WCS 360 -> 0 deg crossover in ``fit_wcs_from_points`` [#10155]\n\n- Do not issue ``DATREF`` warning when ``MJDREF`` has default value. [#10440]\n\n- Fixed a bug due to which ``naxis`` argument was ignored if ``header``\n  was supplied during the initialization of a WCS object. [#10532]\n\nOther Changes and Additions\n---------------------------\n\n- Improved the speed of sorting a large ``Table`` on a single column by a factor\n  of around 5. [#10103]\n\n- Ensure that astropy can be used inside Application bundles built with\n  pyinstaller. [#8795]\n\n- Updated the bundled CFITSIO library to 3.49. See\n  ``cextern/cfitsio/docs/changes.txt`` for additional information.\n  [#10256, #10665]\n\n- ``extract_array`` raises a ``ValueError`` if the data type of the\n  input array is inconsistent with the ``fill_value``. [#10602]\n\n\nVersion 4.0.1 (2020-03-27)\n==========================\n\nBug fixes\n---------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Fixed a bug where importing a development version of a package that uses\n  ``astropy`` configuration system can result in a\n  ``~/.astropy/config/package..cfg`` file. [#9975]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where a vestigal trace of a frame class could persist in the\n  transformation graph even after the removal of all transformations involving\n  that frame class. [#9815]\n\n- Fixed a bug with ``TransformGraph.remove_transform()`` when the \"from\" and\n  \"to\" frame classes are not explicitly specified. [#9815]\n\n- Read-only longitudes can now be passed in to ``EarthLocation`` even if\n  they include angles outside of the range of -180 to 180 degrees. [#9900]\n\n- ```SkyCoord.radial_velocity_correction``` no longer raises an Exception\n  when space motion information is present on the SkyCoord. [#9980]\n\nastropy.io\n^^^^^^^^^^\n\n- Fixed a bug that prevented the unified I/O infrastructure from working with\n  datasets that are represented by directories rather than files. [#9866]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug in the ``fast_reader`` C parsers incorrectly returning entries\n  of isolated positive/negative signs as ``float`` instead of ``str``. [#9918]\n\n- Fixed a segmentation fault in the ``fast_reader`` C parsers when parsing an\n  invalid file with ``guess=True`` and the file contains inconsistent column\n  numbers in combination with a quoted field; e.g., ``\"1  2\\n 3  4 '5'\"``.\n  [#9923]\n\n- Magnitude, decibel, and dex can now be stored in ``ecsv`` files. [#9933]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Magnitude, decibel, and dex can now be stored in ``hdf5`` files. [#9933]\n\n- Fixed serialization of polynomial models to include non default values of\n  domain and window values. [#9956, #9961]\n\n- Fixed a bug which affected overwriting tables within ``hdf5`` files.\n  Overwriting an existing path with associated column meta data now also\n  overwrites the meta data associated with the table. [#9950]\n\n- Fixed serialization of Time objects with location under time-1.0.0\n  ASDF schema. [#9983]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix regression with ``GroupsHDU`` which needs to modify the header to handle\n  invalid headers, and fix accessing ``.data`` for empty HDU. [#9711, #9934]\n\n- Fix ``fitsdiff`` when its arguments are directories that contain other\n  directories. [#9711]\n\n- Fix writing noncontiguous data to a compressed HDU. [#9958]\n\n- Added verification of ``disp`` (``TDISP``) keyword to ``fits.Column`` and\n  extended tests for ``TFORM`` and ``TDISP`` validation. [#9978]\n\n- Fix checksum verification to process all HDUs instead of only the first one\n  because of the lazy loading feature. [#10012]\n\n- Allow passing ``output_verify`` to ``.close`` when using the context manager.\n  [#10030]\n\n- Prevent instantiation of ``PrimaryHDU`` and ``ImageHDU`` with a scalar.\n  [#10041]\n\n- Fix column access by attribute with FITS_rec: columns with scaling or columns\n  from ASCII tables where not properly converted when accessed by attribute\n  name. [#10069]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Magnitude, decibel, and dex can now be stored in ``hdf5`` files. [#9933]\n\n- Fixed serialization of polynomial models to include non default values of\n  domain and window values. [#9956, #9961]\n\n- Fixed a bug which affected overwriting tables within ``hdf5`` files.\n  Overwriting an existing path with associated column meta data now also\n  overwrites the meta data associated with the table. [#9950]\n\n- Fixed serialization of Time objects with location under time-1.0.0\n  ASDF schema. [#9983]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug in setting default values of parameters of orthonormal\n  polynomials when constructing a model set. [#9987]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed bug in ``Table.reverse`` for tables that contain non-mutable mixin columns\n  (like ``SkyCoord``) for which in-place item update is not allowed. [#9839]\n\n- Tables containing Magnitude, decibel, and dex columns can now be saved to\n  ``ecsv`` files. [#9933]\n\n- Fixed bug where adding or inserting a row fails on a table with an index\n  defined on a column that is not the first one. [#10027]\n\n- Ensured that ``table.show_in_browser`` also worked for mixin columns like\n  ``Time`` and ``SkyCoord``. [#10068]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix inaccuracy when converting between TimeDelta and datetime.timedelta. [#9679]\n\n- Fixed exception when changing ``format`` in the case when ``out_subfmt`` is\n  defined and is incompatible with the new format. [#9812]\n\n- Fixed exceptions in ``Time.to_value()``: when supplying any ``subfmt`` argument\n  for string-based formats like 'iso', and for ``subfmt='long'`` for the formats\n  'byear', 'jyear', and 'decimalyear'. [#9812]\n\n- Fixed bug where the location attribute was lost when creating a new ``Time``\n  object from an existing ``Time`` or list of ``Time`` objects. [#9969]\n\n- Fixed a bug where an exception occurred when creating a ``Time`` object\n  if the ``val1`` argument was a regular double and the ``val2`` argument\n  was a ``longdouble``. [#10034]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Fixed issue with reference time for the ``transit_time`` parameter returned by\n  the ``BoxLeastSquares`` periodogram. Now, the ``transit_time`` will be within\n  the range of the input data and arbitrary time offsets/zero points no longer\n  affect results. [#10013]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fix for ``quantity_input`` annotation raising an exception on iterable\n  types that don't define a general ``__contains__`` for checking if ``None``\n  is contained (e.g. Enum as of python3.8), by instead checking for instance of\n  Sequence. [#9948]\n\n- Fix for ``u.Quantity`` not taking into account ``ndmin`` if constructed from\n  another ``u.Quantity`` instance with different but convertible unit [#10066]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed ``deprecated_renamed_argument`` not passing in user value to\n  deprecated keyword when the keyword has no new name. [#9981]\n\n- Fixed ``deprecated_renamed_argument`` not issuing a deprecation warning when\n  deprecated keyword without new name is passed in as positional argument.\n  [#9985]\n\n- Fixed detection of read-only filesystems in the caching code. [#10007]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed bug from matplotlib >=3.1 where an empty Quantity array is\n  sent for unit conversion as an empty list. [#9848]\n\n- Fix bug in ``ZScaleInterval`` to return the array minimum and\n  maximum when there are less then ``min_npixels`` in the input array. [#9913]\n\n- Fix a bug in simplifying axis labels that affected non-rectangular frames.\n  [#8004, #9991]\n\n\nOther Changes and Additions\n---------------------------\n\n- Increase minimum asdf version to 2.5.2. [#9996, #9819]\n\n- Updated bundled version of ``WCSLIB`` to v7.2. [#10021]\n\n\n\nVersion 4.0 (2019-12-16)\n========================\n\nNew Features\n------------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- The config and cache directories and the name of the config file are now\n  customizable. This allows affiliated packages to put their configuration\n  files in locations other than ``CONFIG_DIR/.astropy/``. [#8237]\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- The version of constants can be specified via ScienceState in a way\n  that ``constants`` and ``units`` will be consistent. [#8517]\n\n- Default constants now use CODATA 2018 and IAU 2015 definitions. [#8761]\n\n- Constants can be pickled and unpickled. [#9377]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug [#9168] where having a kernel defined using unitless astropy\n  quantity objects would result in a crash [#9300]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Changed ``coordinates.solar_system_ephemeris`` to also accept local files\n  as input. The ephemeris can now be selected by either keyword (e.g. 'jpl',\n  'de430'), URL or file path. [#8767]\n\n- Added a ``cylindrical`` property to ``SkyCoord`` for shorthand access to a\n  ``CylindricalRepresentation`` of the coordinate, as is already available\n  for other common representations. [#8857]\n\n- The default parameters for the ``Galactocentric`` frame are now controlled by\n  a ``ScienceState`` subclass, ``galactocentric_frame_defaults``. New\n  parameter sets will be added to this object periodically to keep up with\n  ever-improved measurements of the solar position and motion. [#9346]\n\n- Coordinate frame classes can now have multiple aliases by assigning a list\n  of aliases to the class variable ``name``.  Any of the aliases can be used\n  for attribute-style access or as the target of ``tranform_to()`` calls.\n  [#8834]\n\n- Passing a NaN to ``Distance`` no longer raises a warning. [#9598]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The pre-publication Planck 2018 cosmological parameters are included as the\n  ``Planck2018_arXiv_v2`` object.  Please note that the values are preliminary,\n  and when the paper is accepted a final version will be included as\n  ``Planck18``. [#8111]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Removed incorrect warnings on ``Overflow`` when reading in\n  ``FloatType`` 0.0 with ``use_fast_converter``; synchronised\n  ``IntType`` ``Overflow`` warning messages. [#9082]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Eliminate deprecated compatibility mode when writing ``Table`` metadata to\n  HDF5 format. [#8899]\n\n- Add support for orthogonal polynomial models to ASDF. [#9107]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Changed the ``fitscheck`` and ``fitsdiff`` script to use the ``argparse``\n  module instead of ``optparse``. [#9148]\n\n- Allow writing of ``Table`` objects with ``Time`` columns that are also table\n  indices to FITS files. [#8077]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Support VOTable version 1.4.  The main addition is the new element, TIMESYS,\n  which allows defining of metadata for temporal coordinates much like COOSYS\n  defines metadata for celestial coordinates. [#9475]\n\nastropy.logger\n^^^^^^^^^^^^^^\n\n- Added a configuration option to specify the text encoding of the log file,\n  with the default behavior being the platform-preferred encoding. [#9203]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Major rework of modeling internals. `See modeling documentation for details.\n  <https://docs.astropy.org/en/v4.0.x/modeling/changes_for_4.html>`_ . [#8769]\n\n- Add ``Tabular1D.inverse``. [#9083]\n\n- ``Model.rename`` was changed to add the ability to rename ``Model.inputs``\n  and ``Model.outputs``. [#9220]\n\n- New function ``fix_inputs`` to generate new models from others by fixing\n  specific inputs variable values to constants. [#9135]\n\n- ``inputs`` and ``outputs`` are now model instance attributes, and ``n_inputs``\n  and ``n_outputs`` are class attributes. Backwards compatible default\n  values of ``inputs`` and ``outputs`` are generated. ``Model.inputs`` and\n  ``Model.outputs`` are now settable which allows renaming them on per user\n  case. [#9298]\n\n- Add a new model representing a sequence of rotations in 3D around an\n  arbitrary number of axes. [#9369]\n\n- Add many of the numpy ufunc functions as models. [#9401]\n\n- Add ``BlackBody`` model. [#9282]\n\n- Add ``Drude1D`` model. [#9452]\n\n- Added analytical King model (KingProjectedAnalytic1D). [#9084]\n\n- Added Exponential1D and Logarithmic1D models. [#9351]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Add a way for technically invalid but unambiguous units in a fits header\n  to be parsed by ``CCDData``. [#9397]\n\n- ``NDData`` now only accepts WCS objects which implement either the high, or\n  low level APE 14 WCS API. All WCS objects are converted to a high level WCS\n  object, so ``NDData.wcs`` now always returns a high level APE 14 object. Not\n  all array slices are valid for wcs objects, so some slicing operations which\n  used to work may now fail. [#9067]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- The ``biweight_location``, ``biweight_scale``, and\n  ``biweight_midvariance`` functions now allow for the ``axis``\n  keyword to be a tuple of integers. [#9309]\n\n- Added an ``ignore_nan`` option to the ``biweight_location``,\n  ``biweight_scale``, and ``biweight_midvariance`` functions. [#9457]\n\n- A numpy ``MaskedArray`` can now be input to the ``biweight_location``,\n  ``biweight_scale``, and ``biweight_midvariance`` functions. [#9466]\n\n- Removed the warning related to p0 in the Bayesian blocks algorithm. The\n  caveat related to p0 is described in the docstring for ``Events``. [#9567]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Improved the implementation of ``Table.replace_column()`` to provide\n  a speed-up of 5 to 10 times for wide tables.  The method can now accept\n  any input which convertible to a column of the correct length, not just\n  ``Column`` subclasses. [#8902]\n\n- Improved the implementation of ``Table.add_column()`` to provide a speed-up\n  of 2 to 10 (or more) when adding a column to tables, with increasing benefit\n  as the number of columns increases.  The method can now accept any input\n  which is convertible to a column of the correct length, not just ``Column``\n  subclasses. [#8933]\n\n- Changed the implementation of ``Table.add_columns()`` to use the new\n  ``Table.add_column()`` method.  In most cases the performance is similar\n  or slightly faster to the previous implementation. [#8933]\n\n- ``MaskedColumn.data`` will now return a plain ``MaskedArray`` rather than\n  the previous (unintended) ``masked_BaseColumn``. [#8855]\n\n- Added depth-wise stacking ``dstack()`` in higher level table operation.\n  It help will in stacking table column depth-wise. [#8939]\n\n- Added a new table equality method ``values_equal()`` which allows comparison\n  table values to another table, list, or value, and returns an\n  element-by-element equality table. [#9068]\n\n- Added new ``join_type='cartesian'`` option to the ``join`` operation. [#9288]\n\n- Allow adding a table column as a list of mixin-type objects, for instance\n  ``t['q'] = [1 * u.m, 2 * u.m]``. [#9165]\n\n- Allow table ``join()`` using any sortable key column (e.g. Time), not\n  just ndarray subclasses. A column is considered sortable if there is a\n  ``<column>.info.get_sortable_arrays()`` method that is implemented. [#9340]\n\n- Added ``Table.iterrows()`` for making row-wise iteration faster. [#8969]\n\n- Allow table to be initialized with a list of dict where the dict keys\n  are not the same in every row. The table column names are the set of all keys\n  found in the input data, and any missing key/value pairs are turned into\n  missing data in the table. [#9425]\n\n- Prevent unnecessary ERFA warnings when indexing by ``Time`` columns. [#9545]\n\n- Added support for sorting tables which contain non-mutable mixin columns\n  (like ``SkyCoord``) for which in-place item update is not allowed. [#9549]\n\n- Ensured that inserting ``np.ma.masked`` (or any other value with a mask) into\n  a ``MaskedColumn`` causes a masked entry to be inserted. [#9623]\n\n- Fixed a bug that caused an exception when initializing a ``MaskedColumn`` from\n  another ``MaskedColumn`` that has a structured dtype. [#9651]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- The plugin that handles the custom header in the test output has been\n  moved to the ``pytest-astropy-header plugin`` package. `See the README at\n  <https://github.com/astropy/pytest-astropy-header>`__ for information about\n  using this new plugin. [#9214]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Added a new time format ``ymdhms`` for representing times via year, month,\n  day, hour, minute, and second attributes. [#7644]\n\n- ``TimeDelta`` gained a ``to_value`` method, so that it becomes easier to\n  use it wherever a ``Quantity`` with units of time could be used. [#8762]\n\n- Made scalar ``Time`` and ``TimeDelta`` objects hashable based on JD, time\n  scale, and location attributes. [#8912]\n\n- Improved error message when bad input is used to initialize a ``Time`` or\n  ``TimeDelta`` object and the format is specified. [#9296]\n\n- Allow numeric time formats to be initialized with numpy ``longdouble``,\n  ``Decimal`` instances, and strings.  One can select just one of these\n  using ``in_subfmt``.  The output can be similarly set using ``out_subfmt``.\n  [#9361]\n\n- Introduce a new ``.to_value()`` method for ``Time`` (and adjusted the\n  existing method for ``TimeDelta``) so that one can get values in a given\n  ``format`` and possible ``subfmt`` (e.g., ``to_value('mjd', 'str')``. [#9361]\n\n- Prevent unnecessary ERFA warnings when sorting ``Time`` objects. [#9545]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Adding ``epoch_phase``, ``wrap_phase`` and ``normalize_phase`` keywords to\n  ``TimeSeries.fold()`` to control the phase of the epoch and to return\n  normalized phase rather than time for the folded TimeSeries. [#9455]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- ``Distribution`` was rewritten such that it deals better with subclasses.\n  As a result, Quantity distributions now behave correctly with ``to`` methods\n  yielding new distributions of the kind expected for the starting\n  distribution, and ``to_value`` yielding ``NdarrayDistribution`` instances.\n  [#9429, #9442]\n\n- The ``pdf_*`` properties that were used to calculate statistical properties\n  of ``Distribution`` instances were changed into methods. This allows one\n  to pass parameters such as ``ddof`` to ``pdf_std`` and ``pdf_var`` (which\n  generally should equal 1 instead of the default 0), and reflects that these\n  are fairly involved calculations, not just \"properties\". [#9613]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Support for unicode parsing. Currently supported are superscripts, Ohm,\n  Ångström, and the micro-sign. [#9348]\n\n- Accept non-unit type annotations in @quantity_input. [#8984]\n\n- For numpy 1.17 and later, the new ``__array_function__`` protocol is used to\n  ensure that all top-level numpy functions interact properly with\n  ``Quantity``, preserving units also in operations like ``np.concatenate``.\n  [#8808]\n\n- Add equivalencies for surface brightness units to spectral_density. [#9282]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``astropy.utils.data.download_file`` and\n  ``astropy.utils.data.get_readable_fileobj`` now provides an ``http_headers``\n  keyword to pass in specific request headers for the download. It also now\n  defaults to providing ``User-Agent: Astropy`` and ``Accept: */*``\n  headers. The default ``User-Agent`` value can be set with a new\n  ``astropy.data.conf.default_http_user_agent`` configuration item.\n  [#9508, #9564]\n\n- Added a new ``astropy.utils.misc.unbroadcast`` function which can be used\n  to return the smallest array that can be broadcasted back to the initial\n  array. [#9209]\n\n- The specific IERS Earth rotation parameter table used for time and\n  coordinate transformations can now be set, either in a context or per\n  session, using ``astropy.utils.iers.earth_rotation_table``. [#9244]\n\n- Added ``export_cache`` and ``import_cache`` to permit transporting\n  downloaded data to machines with no Internet connection. Several new\n  functions are available to investigate the cache contents; e.g.,\n  ``check_download_cache`` can be used to confirm that the persistent\n  cache has not become damaged. [#9182]\n\n- A new ``astropy.utils.iers.LeapSeconds`` class has been added to track\n  leap seconds. [#9365]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added a new ``time_support`` context manager/function for making it easy to\n  plot and format ``Time`` objects in Matplotlib. [#8782]\n\n- Added support for plotting any WCS compliant with the generalized (APE 14)\n  WCS API with WCSAxes. [#8885, #9098]\n\n- Improved display of information when inspecting ``WCSAxes.coords``. [#9098]\n\n- Improved error checking for the ``slices=`` argument to ``WCSAxes``. [#9098]\n\n- Added support for more solar frames in WCSAxes. [#9275]\n\n- Add support for one dimensional plots to ``WCSAxes``. [#9266]\n\n- Add a ``get_format_unit`` to ``wcsaxes.CoordinateHelper``. [#9392]\n\n- ``WCSAxes`` now, by default, sets a default label for plot axes which is the\n  WCS physical type (and unit) for that axis. This can be disabled using the\n  ``coords[i].set_auto_axislabel(False)`` or by explicitly setting an axis\n  label. [#9392]\n\n- Fixed the display of tick labels when plotting all sky images that have a\n  coord_wrap less than 360. [#9542]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Added a ``astropy.wcs.wcsapi.pixel_to_pixel`` function that can be used to\n  transform pixel coordinates in one dataset with a WCS to pixel coordinates\n  in another dataset with a different WCS. This function is designed to be\n  efficient when the input arrays are broadcasted views of smaller\n  arrays. [#9209]\n\n- Added a ``local_partial_pixel_derivatives`` function that can be used to\n  determine a matrix of partial derivatives of each world coordinate with\n  respect to each pixel coordinate. [#9392]\n\n- Updated wcslib to v6.4. [#9125]\n\n- Improved the  ``SlicedLowLevelWCS`` class in ``astropy.wcs.wcsapi`` to avoid\n  storing chains of nested ``SlicedLowLevelWCS`` objects when applying multiple\n  slicing operations in turn. [#9210]\n\n- Added a ``wcs_info_str`` function to ``astropy.wcs.wcsapi`` to show a summary\n  of an APE-14-compliant WCS as a string. [#8546, #9207]\n\n- Added two new optional attributes to the APE 14 low-level WCS:\n  ``pixel_axis_names`` and ``world_axis_names``. [#9156]\n\n- Updated the WCS class to now correctly take and return ``Time`` objects in\n  the high-level APE 14 API (e.g. ``pixel_to_world``. [#9376]\n\n- ``SlicedLowLevelWCS`` now raises ``IndexError`` rather than ``ValueError`` on\n  an invalid slice. [#9067]\n\n- Added ``fit_wcs_from_points`` function to ``astropy.wcs.utils``. Fits a WCS\n  object to set of matched detector/sky coordinates. [#9469]\n\n- Fix various bugs in ``SlicedLowLevelWCS`` when the WCS being sliced was one\n  dimensional. [#9693]\n\n\nAPI Changes\n-----------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Deprecated ``set_enabled_constants`` context manager. Use\n  ``astropy.physical_constants`` and ``astropy.astronomical_constants``.\n  [#9025]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Removed the deprecated keyword argument ``interpolate_nan`` from\n  ``convolve_fft``. [#9356]\n\n- Removed the deprecated keyword argument ``stddev`` from\n  ``Gaussian2DKernel``. [#9356]\n\n- Deprecated and renamed ``MexicanHat1DKernel`` and ``MexicanHat2DKernel``\n  to ``RickerWavelet1DKernel`` and ``RickerWavelet2DKernel``. [#9445]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Removed the ``recommended_units`` attribute from Representations; it was\n  deprecated since 3.0. [#8892]\n\n- Removed the deprecated frame attribute classes, ``FrameAttribute``,\n  ``TimeFrameAttribute``, ``QuantityFrameAttribute``,\n  ``CartesianRepresentationFrameAttribute``; deprecated since 3.0. [#9326]\n\n- Removed ``longitude`` and ``latitude`` attributes from ``EarthLocation``;\n  deprecated since 2.0. [#9326]\n\n- The ``DifferentialAttribute`` for frame classes now passes through any input\n  to the ``allowed_classes`` if only one allowed class is specified, i.e. this\n  now allows passing a quantity in for frame attributes that use\n  ``DifferentialAttribute``. [#9325]\n\n- Removed the deprecated ``galcen_ra`` and ``galcen_dec`` attributes from the\n  ``Galactocentric`` frame. [#9346]\n\nastropy.extern\n^^^^^^^^^^^^^^\n\n- Remove the bundled ``six`` module. [#8315]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Masked column handling has changed, see ``astropy.table`` entry below.\n  [#8789]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Masked column handling has changed, see ``astropy.table`` entry below.\n  [#8789]\n\n- Removed deprecated ``usecPickle`` kwarg from ``fnunpickle`` and\n  ``fnpickle``. [#8890]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Masked column handling has changed, see ``astropy.table`` entry below.\n  [#8789]\n\n- ``io.fits.Header`` has been made safe for subclasses for copying and slicing.\n  As a result of this change, the private subclass ``CompImageHeader``\n  now always should be passed an explicit ``image_header``. [#9229]\n\n- Removed the deprecated ``tolerance`` option in ``fitsdiff`` and\n  ``io.fits.diff`` classes. [#9520]\n\n- Removed deprecated keyword arguments for ``CompImageHDU``:\n  ``compressionType``, ``tileSize``, ``hcompScale``, ``hcompSmooth``,\n  ``quantizeLevel``. [#9520]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Changed ``pedantic`` argument to ``verify`` and change it to have three\n  string-based options (``ignore``, ``warn``, and ``exception``) instead of\n  just being a boolean. In addition, changed default to ``ignore``, which means\n  that warnings will not be shown by default when loading VO tables. [#8715]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Eliminates support for compound classes (but not compound instances!) [#8769]\n\n- Slicing compound models more restrictive. [#8769]\n\n- Shape of parameters now includes n_models as dimension. [#8769]\n\n- Parameter instances now hold values instead of models. [#8769]\n\n- Compound model parameters now share instance and value with\n  constituent models. [#8769]\n\n- No longer possible to assign slices of parameter values to model parameters\n  attribute (it is possible to replace it with a complete array). [#8769]\n\n- Many private attributes and methods have changed (see documentation). [#8769]\n\n- Deprecated ``BlackBody1D`` model and ``blackbody_nu`` and\n  ``blackbody_lambda`` functions. [#9282]\n\n- The deprecated ``rotations.rotation_matrix_from_angle`` was removed. [#9363]\n\n- Deprecated and renamed ``MexicanHat1D`` and ``MexicanHat2D``\n  to ``RickerWavelet1D`` and ``RickerWavelet2D``. [#9445]\n\n- Deprecated ``modeling.utils.ExpressionTree``. [#9576]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Removed the ``iters`` keyword from sigma clipping stats functions. [#8948]\n\n- Renamed the ``a`` parameter to ``data`` in biweight stat functions. [#8948]\n\n- Renamed the ``a`` parameter to ``data`` in ``median_absolute_deviation``.\n  [#9011]\n\n- Renamed the ``conflevel`` keyword to ``confidence_level`` in\n  ``poisson_conf_interval``. Usage of ``conflevel`` now issues\n  ``AstropyDeprecationWarning``. [#9408]\n\n- Renamed the ``conf`` keyword to ``confidence_level`` in\n  ``binom_conf_interval`` and ``binned_binom_proportion``. Usage of ``conf``\n  now issues ``AstropyDeprecationWarning``. [#9408]\n\n- Renamed the ``conf_lvl`` keyword to ``confidence_level`` in\n  ``jackknife_stats``. Usage of ``conf_lvl`` now issues\n  ``AstropyDeprecationWarning``. [#9408]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- The handling of masked columns in the ``Table`` class has changed in a way\n  that may impact program behavior. Now a ``Table`` with ``masked=False``\n  may contain both ``Column`` and ``MaskedColumn`` objects, and adding a\n  masked column or row to a table no longer \"upgrades\" the table and columns\n  to masked.  This means that tables with masked data which are read via\n  ``Table.read()`` will now always have ``masked=False``, though specific\n  columns will be masked as needed. Two new table properties\n  ``has_masked_columns`` and ``has_masked_values`` were added. See the\n  `Masking change in astropy 4.0 section within\n  <https://docs.astropy.org/en/v4.0.x/table/masking.html>`_ for\n  details. [#8789]\n\n- Table operation functions such as ``join``, ``vstack``, ``hstack``, etc now\n  always return a table with ``masked=False``, though the individual columns\n  may be masked as necessary. [#8957]\n\n- Changed implementation of ``Table.add_column()`` and ``Table.add_columns()``\n  methods.  Now it is possible add any object(s) which can be converted or\n  broadcasted to a valid column for the table.  ``Table.__setitem__`` now\n  just calls ``add_column``. [#8933]\n\n- Changed default table configuration setting ``replace_warnings`` from\n  ``['slice']`` to ``[]``.  This removes the default warning when replacing\n  a table column that is a slice of another column. [#9144]\n\n- Removed the non-public method\n  ``astropy.table.np_utils.recarray_fromrecords``. [#9165]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- In addition to ``DeprecationWarning``, now ``FutureWarning`` and\n  ``ImportWarning`` would also be turned into exceptions. [#8506]\n\n- ``warnings_to_ignore_by_pyver`` option in\n  ``enable_deprecations_as_exceptions()`` has changed. Please refer to API\n  documentation. [#8506]\n\n- Default settings for ``warnings_to_ignore_by_pyver`` are updated to remove\n  very old warnings that are no longer relevant and to add a new warning\n  caused by ``pytest-doctestplus``. [#8506]\n\nastropy.time\n^^^^^^^^^^^^\n\n- ``Time.get_ut1_utc`` now uses the auto-updated ``IERS_Auto`` by default,\n  instead of the bundled ``IERS_B`` file. [#9226]\n\n- Time formats that do not use ``val2`` now raise ValueError instead of\n  silently ignoring a provided value. [#9373]\n\n- Custom time formats can now accept floating-point types with extended\n  precision. Existing time formats raise exceptions rather than discarding\n  extended precision through conversion to ordinary floating-point. [#9368]\n\n- Time formats (implemented in subclasses of ``TimeFormat``) now have\n  their input and output routines more thoroughly validated, making it more\n  difficult to create damaged ``Time`` objects. [#9375]\n\n- The ``TimeDelta.to_value()`` method now can also take the ``format`` name\n  as its argument, in which case the value will be calculated using the\n  ``TimeFormat`` machinery. For this case, one can also pass a ``subfmt``\n  argument to retrieve the value in another form than ``float``. [#9361]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Keyword ``midpoint_epoch`` is renamed to ``epoch_time``. [#9455]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- ``Distribution`` was rewritten such that it deals better with subclasses.\n  As a result, Quantity distributions now behave correctly with ``to`` methods\n  yielding new distributions of the kind expected for the starting distribution,\n  and ``to_value`` yielding ``NdarrayDistribution`` instances. [#9442]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- For consistency with ``ndarray``, scalar ``Quantity.value`` will now return\n  a numpy scalar rather than a python one.  This should help keep track of\n  precision better, but may lead to unexpected results for the rare cases\n  where numpy scalars behave differently than python ones (e.g., taking the\n  square root of a negative number). [#8876]\n\n- Removed the ``magnitude_zero_points`` module, which was deprecated in\n  favour of ``astropy.units.photometric`` since 3.1. [#9353]\n\n- ``EquivalentUnitsList`` now has a ``_repr_html_`` method to output a HTML\n  table on a call to ``find_equivalent_units`` in Jupyter notebooks. [#9495]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``download_file`` and related functions now accept a list of fallback\n  sources, and they are able to update the cache at the user's request. [#9182]\n\n- Allow ``astropy.utils.console.ProgressBarOrSpinner.map`` and\n  ``.map_unordered`` to take an argument ``multiprocessing_start_method`` to\n  control how subprocesses are started; the different methods (``fork``,\n  ``spawn``, and ``forkserver``) have different implications in terms of\n  security, efficiency, and behavioural anomalies. The option is useful in\n  particular for cross-platform testing because Windows supports only ``spawn``\n  while Linux defaults to ``fork``. [#9182]\n\n- All operations that act on the astropy download cache now take an argument\n  ``pkgname`` that allows one to specify which package's cache to use.\n  [#8237, #9182]\n\n- Removed deprecated ``funcsigs`` and ``futures`` from\n  ``astropy.utils.compat``. [#8909]\n\n- Removed the deprecated ``astropy.utils.compat.numpy`` module. [#8910]\n\n- Deprecated ``InheritDocstrings`` as it is natively supported by\n  Sphinx 1.7 or higher. [#8881]\n\n- Deprecated ``astropy.utils.timer`` module, which has been moved to\n  ``astroquery.utils.timer`` and will be part of ``astroquery`` 0.4.0. [#9038]\n\n- Deprecated ``astropy.utils.misc.set_locale`` function, as it is meant for\n  internal use only. [#9471]\n\n- The implementation of ``data_info.DataInfo`` has changed (for a considerable\n  performance boost). Generally, this should not affect simple subclasses, but\n  because the class now uses ``__slots__`` any attributes on the class have to\n  be explicitly given a slot. [#8998]\n\n- ``IERS`` tables now use ``nan`` to mark missing values\n  (rather than ``1e20``). [#9226]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The default ``clip`` value is now ``False`` in ``ImageNormalize``. [#9478]\n\n- The default ``clip`` value is now ``False`` in ``simple_norm``.\n  [#9698]\n\n- Infinite values are now excluded when calculating limits in\n  ``ManualInterval`` and ``MinMaxInterval``.  They were already excluded in\n  all other interval classes. [#9480]\n\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed ``nan_treatment='interpolate'`` option to ``convolve_fft`` to properly\n  take into account ``fill_value``. [#8122]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``QuantityAttribute`` class now supports a None default value if a unit\n  is specified. [#9345]\n\n- When ``Representation`` classes with the same name are defined, this no\n  longer leads to a ``ValueError``, but instead to a warning and the removal\n  of both from the name registry (i.e., one either has to use the class itself\n  to set, e.g., ``representation_type``, or refer to the class by its fully\n  qualified name). [#8561]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Implemented skip (after warning) of header cards with reserved\n  keywords in ``table_to_hdu``. [#9390]\n\n- Add ``AstropyDeprecationWarning`` to ``read_table_fits`` when ``hdu=`` is\n  selected, but does not match single present table HDU. [#9512]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Address issue #8995 by ignoring BINARY2 null mask bits for string values\n  on parsing a VOTable.  In this way, the reader should never create masked\n  values for string types. [#9057]\n\n- Corrected a spurious warning issued for the ``value`` attribute of the\n  ``<OPTION>`` element in VOTable, as well as a test that erroneously\n  treated the warning as acceptable.  [#9470]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``Cutout2D`` will now get the WCS from its first argument if that argument\n  has with WCS property. [#9492]\n\n- ``overlap_slices`` will now raise a ``ValueError`` if the input\n  position contains any non-finite values (e.g. NaN or inf). [#9648]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed a bug where ``bayesian_blocks`` returned a single edge. [#8560]\n\n- Fixed input data type validation for ``bayesian_blocks`` to work int\n  arrays. [#9513]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix bug where adding a column consisting of a list of masked arrays was\n  dropping the masks. [#9048]\n\n- ``Quantity`` columns with custom units can now round-trip via FITS tables,\n  as long as the custom unit is enabled during reading (otherwise, the unit\n  will become an ``UnrecognizedUnit``). [#9015]\n\n- Fix bug where string values could be truncated when inserting into a\n  ``Column`` or ``MaskedColumn``, or when adding or inserting a row containing\n  string values. [#9559]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix bug when ``Time`` object is created with only masked elements. [#9624]\n\n- Fix inaccuracy when converting between TimeDelta and datetime.timedelta.\n  [#9679]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Ensure that output from test functions of and comparisons between quantities\n  can be stored into pre-allocated output arrays (using ``out=array``) [#9273]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- For the default ``IERS_Auto`` table, which combines IERS A and B values, the\n  IERS nutation parameters \"dX_2000A\" and \"dY_2000A\" are now also taken from\n  the actual IERS B file rather than from the B values stored in the IERS A\n  file.  Any differences should be negligible for any practical application,\n  but this may help exactly reproducing results. [#9237]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Calling ``WCSAxes.set_axis_off()`` now correctly turns off drawing the Axes.\n  [#9411]\n\n- Fix incorrect transformation behavior in ``WCSAxes.plot_coord`` and correctly\n  handle when input coordinates are not already in spherical representations.\n  [#8927]\n\n- Fixed ``ImageNormalize`` so that when it is initialized without\n  ``data`` it will still use the input ``interval`` class. [#9698]\n\n- Fixed ``ImageNormalize`` to handle input data with non-finite\n  values. [#9698]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix incorrect value returned by\n  ``wcsapi.HighLevelWCSWrapper.axis_correlation_matrix``. [#9554]\n\n- Fix NaN-masking of world coordinates when some but not all of the coordinates\n  were flagged as invalid by WCSLIB. This occurred for example with WCS with >2\n  dimensions where two of the dimensions were celestial coordinates and pixel\n  coordinates outside of the 'sky' were converted to world coordinates -\n  previously all world coordinates were masked even if uncorrelated with the\n  celestial axes, but this is no longer the case. [#9688]\n\n- The default WCS to celestial frame mapping for world coordinate systems that\n  specify ``TLON`` and ``TLAT`` coordinates will now return an ITRS frame with\n  the representation class set to ``SphericalRepresentation``. This fixes a bug\n  that caused ``WCS.pixel_to_world`` to raise an error for such world\n  coordinate systems. [#9609]\n\n- ``FITSWCSAPIMixin`` now returns tuples not lists from ``pixel_to_world`` and\n  ``world_to_pixel``. [#9678]\n\n\nOther Changes and Additions\n---------------------------\n\n- Versions of Python <3.6 are no longer supported. [#8955]\n\n- Matplotlib 2.1 and later is now required. [#8787]\n\n- Versions of Numpy <1.16 are no longer supported. [#9292]\n\n- Updated the bundled CFITSIO library to 3.470. See\n  ``cextern/cfitsio/docs/changes.txt`` for additional information. [#9233]\n\n- The bundled ERFA was updated to version 1.7.0. This is based on\n  SOFA 20190722. This includes a fix to avoid precision loss for negative\n  JDs, and also includes additional routines to allow updates to the\n  leap-second table. [#9323, #9734]\n\n- The default server for the IERS data files has been updated to reflect\n  long-term downtime of the canonical USNO server. [#9487, #9508]\n\n\n\nVersion 3.2.3 (2019-10-27)\n==========================\n\nOther Changes and Additions\n---------------------------\n\n- Updated IERS A URLs due to USNO prolonged maintenance. [#9443]\n\n\n\nVersion 3.2.2 (2019-10-07)\n==========================\n\nBug fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug in ``discretize_oversample_1D/2D()`` from\n  ``astropy.convolution.utils``, which might occasionally introduce unexpected\n  oversampling grid dimensions due to a numerical precision issue. [#9293]\n\n- Fixed a bug [#9168] where having a kernel defined using unitless astropy\n  quantity objects would result in a crash [#9300]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fix concatenation of representations for cases where the units were different.\n  [#8877]\n\n- Check for NaN values in catalog and match coordinates before building and\n  querying the ``KDTree`` for coordinate matching. [#9007]\n\n- Fix sky coordinate matching when a dimensionless distance is provided. [#9008]\n\n- Raise a faster and more meaningful error message when differential data units\n  are not compatible with a containing representation's units. [#9064]\n\n- Changed the timescale in ICRS to CIRS from 'tdb' to 'tt' conversion and\n  vice-versa, as the erfa function that gets called in the process, pnm06a\n  accepts time in TT. [#9079]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed the fast reader when used in parallel and with the multiprocessing\n  'spawn' method (which is the default on MacOS X with Python 3.8 and later),\n  and enable parallel fast reader on Windows. [#8853]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixes bug where an invalid TRPOS<n> keyword was being generated for FITS\n  time column when no location was available. [#8784]\n\n- Fixed a wrong exception when converting a Table with a unit that is not FITS\n  compliant and not convertible to a string using ``format='fits'``. [#8906]\n\n- Fixed an issue with A3DTABLE extension that could not be read. [#9012]\n\n- Fixed the update of the header when creating GroupsHDU from data. [#9216]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fix to ``add_array``, which now accepts ``array_small`` having dimensions\n  equal to ``array_large``, instead of only allowing smaller sizes of\n  arrays. [#9118]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed ``median_absolute_deviation`` for the case where ``ignore_nan=True``\n  and an input masked array contained both NaNs and infs. [#9307]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Comparisons between ``Column`` instances and ``Quantity`` will now\n  correctly take into account the unit (as was already the case for\n  regular operations such as addition). [#8904]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Allow ``Time`` to be initialized with an empty value for all formats. [#8854]\n\n- Fixed a troubling bug in which ``Time`` could loose precision, with deviations\n  of 300 ns. [#9328]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Fixed handling of ``Quantity`` input data for all methods of\n  ``LombScarge.false_alarm_probabilty``. [#9246]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Allow conversion of ``Column`` with logarithmic units to a suitable\n  ``Quantity`` subclass if ``subok=True``. [#9188]\n\n- Ensured that we simplify powers to smaller denominators if that is\n  consistent within rounding precision. [#9267]\n\n- Ensured that the powers shown in a unit's repr are always correct,\n  not oversimplified. [#9267]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed ``find_api_page`` access by using custom request headers and HTTPS\n  when version is specified. [#9032]\n\n- Make ``download_file`` (and by extension ``get_readable_fileobj`` and others)\n  check the size of downloaded files against the size claimed by the server.\n  [#9302]\n\n- Fix ``find_current_module`` so that it works properly if astropy is being used\n  inside a bundle such as that produced by PyInstaller. [#8845]\n\n- Fix path to renamed classes, which previously included duplicate path/module\n  information under certain circumstances. [#8845]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Silence numpy runtime warnings in ``WCSAxes`` when drawing grids. [#8882]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed equality test between ``cunit`` where the first element was equal but\n  the following elements differed. [#9154]\n\n- Fixed a crash while loading a WCS from headers containing duplicate SIP\n  keywords. [#8893]\n\n- Fixed a possible buffer overflow when using too large negative indices for\n  ``cunit`` or ``ctype`` [#9151]\n\n- Fixed reference counting in ``WCSBase.__init__`` [#9166]\n\n- Fix ``SlicedLowLevelWCS`` ``world_to_pixel_values`` and\n  ``pixel_to_world_values`` when inputs need broadcasting to the same shape.\n  (i.e. when one input is sliced out) [#9250]\n\n- Fixed a bug that caused ``WCS.array_shape``, ``WCS.pixel_shape`` and\n  ``WCS.pixel_bounds`` to be incorrect after using ``WCS.sub``. [#9095]\n\n\nOther Changes and Additions\n---------------------------\n\n- Fixed a bug that caused files outside of the astropy module directory to be\n  included as package data, resulting in some cases in errors when doing\n  repeated builds. [#9039]\n\n\n\nVersion 3.2.1 (2019-06-14)\n==========================\n\nBug fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Avoid reporting a warning with ``BinTableHDU.from_columns`` with keywords that\n  are not provided by the user.  [#8838]\n\n- Fix ``Header.fromfile`` to work on FITS files. [#8713]\n\n- Fix reading of empty ``BinTableHDU`` when stored in a gzip-compressed file.\n  [#8848]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a problem where mask was dropped when creating a ``MaskedColumn``\n  from a list of ``MaskedArray`` objects. [#8826]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Added ``None`` to be displayed as a ``world_axis_physical_types`` in\n  the ``WCS`` repr, as ``None`` values are now supported in ``APE14``. [#8811]\n\n\n\nVersion 3.2 (2019-06-10)\n========================\n\nNew Features\n------------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Add CODATA 2018 constants but not make them default because the\n  redefinition of SI units that will follow has not been implemented\n  yet. [#8595]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- New ``BarycentricMeanEcliptic``, ``HeliocentricTrueEcliptic`` and\n  ``GeocentricTrueEcliptic`` frames.\n  The ecliptic frames are no longer considered experimental. [#8394]\n\n- The default time scale for epochs like 'J2000' or 'B1975' is now \"tt\",\n  which is the correct one for 'J2000' and avoids leap-second warnings\n  for epochs in the far future or past. [#8600]\n\nastropy.extern\n^^^^^^^^^^^^^^\n\n- Bundled ``six`` now emits ``AstropyDeprecationWarning``. It will be removed\n  in 4.0. [#8323]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- IPAC tables now output data types of ``float`` instead of ``double``, or\n  ``int`` instead of ``long``, based on the column ``dtype.itemsize``. [#8216]\n\n- Update handling of MaskedColumn columns when using the 'data_mask' serialization\n  method.  This can make writing ECSV significantly faster if the data do not\n  actually have any masked values. [#8447]\n\n- Fixed a bug that caused newlines to be incorrect when writing out ASCII tables\n  on Windows (they were ``\\r\\r\\n`` instead of ``\\r\\n``). [#8659]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Implement serialization of ``TimeDelta`` in ASDF. [#8285]\n\n- Implement serialization of ``EarthLocation`` in ASDF. [#8286]\n\n- Implement serialization of ``SkyCoord`` in ASDF. [#8284]\n\n- Support serialization of Astropy tables with mixin columns in ASDF. [#8337]\n\n- No warnings when reading HDF5 files with only one table and no ``path=``\n  argument [#8483]\n\n- The HDF5 writer will now create a default table instead of raising an\n  exception when ``path=`` is not specified and when writing to empty/new HDF5\n  files. [#8553]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Optimize parsing of cards within the ``Header`` class. [#8428]\n\n- Optimize the parsing of headers to get the structural keywords that are\n  needed to find extensions. Thanks to this, getting a random HDU from a file\n  with many extensions is much faster than before, in particular when the\n  extension headers contain many keywords. [#8502]\n\n-  Change behavior of FITS undefined value in ``Header`` such that ``None``\n   is used in Python to represent FITS undefined when using dict interface.\n   ``Undefined`` can also be assigned and is translated to ``None``.\n   Previously setting a header card value to ``None`` resulted in an\n   empty string field rather than a FITS undefined value. [#8572]\n\n- Allow ``Header.fromstring`` and ``Card.fromstring`` to accept ``bytes``.\n  [#8707]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Implement ``Table`` reader and writer for ``ASDF``. [#8261]\n\n- Implement ``Table`` reader and writer methods to wrap ``pandas`` I/O methods\n  for CSV, Fixed width format, HTML, and JSON. [#8381]\n\n- Add ``help()`` and ``list_formats()`` methods to unified I/O ``read`` and\n  ``write`` methods. For example ``Table.read.help()`` gives help on available\n  ``Table`` read formats and ``Table.read.help('fits')`` gives detailed\n  help on the arguments for reading FITS table file. [#8255]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Initializing a table with ``Table(rows=...)``, if the first item is an ``OrderedDict``,\n  now uses the column order of the first row. [#8587]\n\n- Added new pprint_all() and pformat_all() methods to Table. These two new\n  methods print the entire table by default. [#8577]\n\n- Removed restriction of initializing a Table from a dict with copy=False. [#8541]\n\n- Improved speed of table row access by a factor of about 2-3.  Improved speed\n  of Table len() by a factor of around 3-10 (depending on the number of columns).\n  [#8494]\n\n- Improved the Table - pandas ``DataFrame`` interface (``to_pandas()`` and\n  ``from_pandas()``).  Mixin columns like ``Time`` and ``Quantity`` can now be\n  converted to pandas by flattening the columns as necessary to plain\n  columns.  ``Time`` and ``TimeDelta`` columns get converted to\n  corresponding pandas date or time delta types.  The ``DataFrame``\n  index is now handled in the conversion methods. [#8247]\n\n- Added ``rename_columns`` method to rename multiple columns in one call.\n  [#5159, #8070]\n\n- Improved Table performance by reducing unnecessary calls to copy and deepcopy,\n  especially as related to the table and column ``meta`` attributes.  Changed the\n  behavior when slicing a table (either in rows or with a list of column names)\n  so now the sliced output gets a light (key-only) copy of ``meta`` instead of a\n  deepcopy.  Changed the ``Table.meta`` class-level descriptor so that assigning\n  directly to ``meta``, e.g. ``tbl.meta = new_meta`` no longer does a deepcopy\n  and instead just directly assigns the ``new_meta`` object reference.  Changed\n  Table initialization so that input ``meta`` is copied only if ``copy=True``.\n  [#8404]\n\n- Improved Table slicing performance with internal implementation changes\n  related to column attribute access and certain input validation. [#8493]\n\n- Added ``reverse`` argument to the ``sort`` and ``argsort`` methods to allow\n  sorting in reverse order. [#8528]\n\n- Improved ``Table.sort()`` performance by removing ``self[keys]`` from code\n  which is creating deep copies of ``meta`` attribute and adding a new keyword\n  ``names`` in ``get_index()`` to get index by using a list or tuple containing\n  names of columns. [#8570]\n\n- Expose ``represent_mixins_as_columns`` as a public function in the\n  ``astropy.table`` subpackage.  This previously-private function in the\n  ``table.serialize`` module is used to represent mixin columns in a Table as\n  one or more plain Column objects. [#7729]\n\nastropy.timeseries\n^^^^^^^^^^^^^^^^^^\n\n- Added a new astropy.timeseries sub-package to represent and manipulate\n  sampled and binned time series. [#8540]\n\n- The ``BoxLeastSquares`` and ``LombScargle`` classes have been moved to\n  ``astropy.timeseries.periodograms`` from ``astropy.stats``. [#8591]\n\n- Added the ability to provide absolute ``Time`` objects to the\n  ``BoxLeastSquares`` and ``LombScargle`` periodogram classes. [#8599]\n\n- Added model inspection methods (``model_parameters()``, ``design_matrix()``,\n  and ``offset()``) to ``astropy.timeseries.LombScargle`` class [#8397].\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``Quantity`` overrides of ``ndarray`` methods such as ``sum``, ``min``,\n  ``max``, which are implemented via reductions, have been removed since they\n  are dealt with in ``Quantity.__array_ufunc__``. This should not affect\n  subclasses, but they may consider doing similarly. [#8316]  Note that this\n  does not include methods that use more complicated python code such as\n  ``mean``, ``std`` and ``var``. [#8370]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n- Added ``CompositeStretch``, which inherits from ``CompositeTransform`` and\n  also ``BaseStretch`` so that it can be used with ``ImageNormalize``. [#8564]\n\n- Added a ``log_a`` argument to the ``simple_norm`` method. Similar to the\n  exposing of the ``asinh_a`` argument for ``AsinhStretch``, the new\n  ``log_a`` argument is now exposed for ``LogStretch``. [#8436]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- WCSLIB was updated to v 6.2.\n  This adds support for time-related WCS keywords (WCS Paper VII).\n  FITS headers containing ``Time`` axis are parsed and the axis is included in\n  the WCS object. [#8592]\n\n- The ``OBSGEO`` attribute as expanded to 6 members - ``XYZLBH``. [#8592]\n\n- Added a new class ``SlicedLowLevelWCS`` in ``astropy.wcs.wcsapi`` that can be\n  used to slice any WCS that conforms to the ``BaseLowLevelWCS`` API. [#8546]\n\n- Updated implementation of ``WCS.__getitem__`` and ``WCS.slice`` to now return\n  a ``SlicedLowLevelWCS`` rather than raising an error when reducing the\n  dimensionality of the WCS. [#8546]\n\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``QuantityAttribute`` no longer has a default value for ``default``.  The\n  previous value of None was misleading as it always was an error. [#8450]\n\n- The default J2000 has been changed to use be January 1, 2000 12:00 TT instead\n  of UTC.  This is more in line with convention. [#8594]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- IPAC tables now output data types of ``float`` instead of ``double``, or\n  ``int`` instead of ``long``, based on the column ``dtype.itemsize``. [#8216]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Unit equivalencies can now be serialized to ASDF. [#8252]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Composition of model classes is deprecated and will be removed in 4.0.\n  Composition of model instances remain unaffected. [#8234, #8408]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- The ``BoxLeastSquares`` and ``LombScargle`` classes have been moved to the\n  ``astropy.timeseries.periodograms`` module and will now emit a deprecation\n  warning when imported from ``astropy.stats``. [#8591]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Converting an empty table to an array using ``as_array`` method now returns\n  an empty array instead of ``None``. [#8647]\n\n- Changed the behavior when slicing a table (either in rows or with a list of column\n  names) so now the sliced output gets a light (key-only) copy of ``meta`` instead of\n  a deepcopy.  Changed the ``Table.meta`` class-level descriptor so that assigning\n  directly to ``meta``, e.g. ``tbl.meta = new_meta`` no longer does a deepcopy\n  and instead just directly assigns the ``new_meta`` object reference. Changed\n  Table initialization so that input ``meta`` is copied only if ``copy=True``.\n  [#8404]\n\n- Added a keyword ``names`` in ``Table.as_array()``.  If provided this specifies\n  a list of column names to include for the returned structured array. [#8532]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Removed ``pytest_plugins`` as they are completely broken for ``pytest>=4``.\n  [#7786]\n\n- Removed the ``astropy.tests.plugins.config`` plugin and removed the\n  ``--astropy-config-dir`` and ``--astropy-cache-dir`` options from\n  testing. Please use caching functionality that is natively in ``pytest``.\n  [#7787, #8489]\n\nastropy.time\n^^^^^^^^^^^^\n\n- The default time scale for epochs like 'J2000' or 'B1975' is now \"tt\",\n  which is the correct one for 'J2000' and avoids leap-second warnings\n  for epochs in the far future or past. [#8600]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Unit equivalencies can now be introspected. [#8252]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- The ``world_to_pixel``, ``world_to_array_index*``, ``pixel_to_world*`` and\n  ``array_index_to_world*`` methods now all consistently return scalars, arrays,\n  or objects not wrapped in a one-element tuple/list when only one scalar,\n  array, or object (as was previously already the case for ``WCS.pixel_to_world``\n  and ``WCS.array_index_to_world``). [#8663]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- It is now possible to control the number of cores used by ``ProgressBar.map``\n  by passing a positive integer as the ``multiprocess`` keyword argument. Use\n  ``True`` to use all cores. [#8083]\n\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``BarycentricTrueEcliptic``, ``HeliocentricTrueEcliptic`` and\n  ``GeocentricTrueEcliptic`` now use the correct transformation\n  (including nutation), whereas the new ``*MeanEcliptic`` classes\n  use the nutation-free transformation. [#8394]\n\n- Representations with ``float32`` coordinates can now be transformed,\n  although the output will always be ``float64``. [#8759]\n\n- Fixed bug that prevented using differentials with HCRS<->ICRS\n  transformations. [#8794]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug where an exception was raised when writing a table which includes\n  mixin columns (e.g. a Quantity column) and the output format was specified\n  using the ``formats`` keyword. [#8681]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Fixed bug in ASDF tag that inadvertently introduced dependency on ``pytest``.\n  [#8456]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed slowness for certain compound models consisting of large numbers\n  of multi-input models [#8338, #8349]\n\n- Fixed bugs in fitting of compound models with units. [#8369]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fixed bug in reading multi-extension FITS files written by earlier versions\n  of ``CCDData``. [#8534]\n\n- Fixed two errors in the way ``CCDData`` handles FITS files with WCS in the\n  header. Some of the WCS keywords that should have been removed from the\n  header were not, potentially leading to FITS files with inconsistent\n  WCS. [#8602]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a bug when initializing from an empty list: ``Table([])`` no longer\n  results in a crash. [#8647]\n\n- Fixed a bug when initializing from an existing ``Table``.  In this case the\n  input ``meta`` argument was being ignored.  Now the input ``meta``, if\n  supplied, will be used as the ``meta`` for the new ``Table``. [#8404]\n\n- Fix the conversion of bytes values to Python ``str`` with ``Table.tolist``.\n  [#8739]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fixed a number of issues to ensure a consistent output type resulting from\n  multiplication or division involving a ``TimeDelta`` instance. The output is\n  now always a ``TimeDelta`` if the result is a time unit (like u.s or u.d),\n  otherwise it will be a ``Quantity``. [#8356]\n\n- Multiplication between two ``TimeDelta`` instances is now possible, resulting\n  in a ``Quantity`` with units of time squared (division already correctly\n  resulted in a dimensionless ``Quantity``). [#8356]\n\n- Like for comparisons, addition, and subtraction of ``Time`` instances with\n  with non-time instances, multiplication and division of ``TimeDelta``\n  instances with incompatible other instances no longer immediately raise an\n  ``UnitsError`` or ``TypeError`` (depending on the other instance), but\n  rather go through the regular Python mechanism of ``TimeDelta`` returning\n  ``NotImplemented`` (which will lead to a regular ``TypeError`` unless the\n  other instance can handle ``TimeDelta``). [#8356]\n\n- Corrected small rounding errors that could cause the ``jd2`` values in\n  ``Time`` to fall outside the range of -0.5 to 0.5. [#8763]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added a ``Quantity.to_string`` method to add flexibility to the string formatting\n  of quantities. It produces unadorned or LaTeX strings, and accepts two different\n  sets of delimiters in the latter case: ``inline`` and ``display``. [#8313]\n\n- Ensure classes that mimic quantities by having a ``unit`` attribute and/or\n  ``to`` and ``to_value`` methods can be properly used to initialize ``Quantity``\n  or set ``Quantity`` instance items. [#8535]\n\n- Add support for ``<<`` to create logarithmic units. [#8290]\n\n- Add support for the ``clip`` ufunc, which in numpy 1.17 is used to implement\n  ``np.clip``.  As part of that, remove the ``Quantity.clip`` method under\n  numpy 1.17. [#8747]\n\n- Fix parsing of numerical powers in FITS-compatible units. [#8251]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Added a ``PyUnitListProxy_richcmp`` method in ``UnitListProxy`` class to enable\n  ``WCS.wcs.cunit`` equality testing. It helps to check whether the two instances of\n  ``WCS.wcs.cunit`` are equal or not by comparing the data members of\n  ``UnitListProxy`` class [#8480]\n\n- Fixed ``SlicedLowLevelWCS`` when ``array_shape`` is ``None``. [#8649]\n\n- Do not attempt to delete repeated distortion keywords multiple times when\n  loading distortions with ``_read_distortion_kw`` and\n  ``_read_det2im_kw``. [#8777]\n\n\nOther Changes and Additions\n---------------------------\n\n- Update bundled expat to 2.2.6. [#8343]\n\n- Added instructions for uploading releases to Zenodo. [#8395]\n\n- The bug fixes to the behaviour of ``TimeDelta`` for multiplication and\n  division, which ensure that the output is now always a ``TimeDelta`` if the\n  result is a time unit (like u.s or u.d) and otherwise a ``Quantity``, imply\n  that sometimes the output type will be different than it was before. [#8356]\n\n- For types unrecognized by ``TimeDelta``, multiplication and division now\n  will consistently return a ``TypeError`` if the other instance cannot handle\n  ``TimeDelta`` (rather than ``UnitsError`` or ``TypeError`` depending on\n  presumed abilities of the other instance). [#8356]\n\n- Multiplication between two ``TimeDelta`` instances will no longer result in\n  an ``OperandTypeError``, but rather result in a ``Quantity`` with units of\n  time squared (division already correctly resulted in a dimensionless\n  ``Quantity``). [#8356]\n\n- Made running the tests insensitive to local user configuration when running\n  the tests in parallel mode or directly with pytest. [#8727]\n\n- Added a narrative style guide to the documentation for contributor reference.\n  [#8588]\n\n- Ensure we call numpy equality functions in a way that reduces the number\n  of ``DeprecationWarning``. [#8755]\n\nInstallation\n^^^^^^^^^^^^\n\n- We now require setuptools 30.3.0 or later to install the core astropy\n  package. [#8240]\n\n- We now define groups of dependencies that can be installed with pip, e.g.\n  ``pip install astropy[all]`` (to install all optional dependencies). [#8198]\n\n\n\nVersion 3.1.2 (2019-02-23)\n==========================\n\nBug fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Convert the default of ``QuantityAttribute``, thereby catching the error case\n  case of it being set to None at attribute creation, and giving a more useful\n  error message in the process. [#8300]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Fix elliptic analytical solution for comoving distance. Only\n  relevant for non-flat cosmologies without radiation and ``Om0`` > ``Ode0``.\n  [#8391]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed slowness for certain compound models consisting of large numbers\n  of multi-input models [#8338, #8349]\n\nastropy.visualization.wcsaxes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Fix a bug that caused an error when passing an array with all values the same\n  to contour or contourf. [#8321]\n\n- Fix a bug that caused contour and contourf to return None instead of the\n  contour set. [#8321]\n\n\nVersion 3.1.1 (2018-12-31)\n==========================\n\nBug fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix error when writing out empty table. [#8279]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``fitsdiff --ignore-hdus`` now prints input filenames in the diff report\n  instead of ``<HDUList object at 0x1150f9778>``. [#8295]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Ensure correctness of units when raising to a negative power. [#8263]\n\n- Fix ``with_H0`` equivalency to use the correct direction of\n  conversion. [#8292]\n\n\n\nVersion 3.1 (2018-12-06)\n========================\n\nNew Features\n------------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- ``convolve`` now accepts any array-like input, not just ``numpy.ndarray`` or\n  lists. [#7303]\n\n- ``convolve`` Now raises AstropyUserWarning if nan_treatment='interpolate' and\n  preserve_nan=False and NaN values are present post convolution. [#8088]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``SkyCoord.from_name`` constructor now has the ability to create\n  coordinate objects by parsing object catalogue names that have embedded\n  J-coordinates. [#7830]\n\n- The new function ``make_transform_graph_docs`` can be used to create a\n  docstring graph from a custom ``TransformGraph`` object. [#7135]\n\n- ``KDTree`` for catalog matching is now built with sliding midpoint rule\n  rather than standard.  In code, this means setting ``compact_nodes=False``\n  and ``balanced_tree=False`` in ``cKDTree``. The sliding midpoint rule is much\n  more suitable for catalog matching, and results in 1000x speedup in some\n  cases. [#7324]\n\n- Additional information about a site loaded from the Astropy sites registry is\n  now available in ``EarthLocation.info.meta``. [#7857]\n\n- Added a ``concatenate_representations`` function to combine coordinate\n  representation data and any associated differentials. [#7922]\n\n- ``BaseCoordinateFrame`` will now check for a method named\n  ``_astropy_repr_in_frame`` when constructing the string forms of attributes.\n  Allowing any class to control how ``BaseCoordinateFrame`` represents it when\n  it is an attribute of a frame. [#7745]\n\n- Some rarely-changed attributes of frame classes are now cached, resulting in\n  speedups (up to 50% in some cases) when creating new scalar frame or\n  ``SkyCoord`` objects. [#7949, #5952]\n\n- Added a ``directional_offset_by`` method to ``SkyCoord`` that computes a new\n  coordinate given a coordinate, position angle, and angular separation [#5727]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The default cosmology has been changed from ``WMAP9`` to ``Planck15``. [#8123]\n\n- Distance calculations with ``LambaCDM`` with no radiation (T_CMB0=0)\n  are now 20x faster by using elliptic integrals for non-flat cases. [#7155]\n\n- Distance calculations with ``FlatLambaCDM`` with no radiation (T_CMB0=0)\n  are now 20x faster by using the hypergeometric function solution\n  for this special case. [#7087]\n\n- Age calculations with ``FlatLambdaCDM`` with no radiation (Tcmb0=0)\n  are now 1000x faster by using analytic solutions instead of integrating.\n  [#7117]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Latex reader now ignores ``\\toprule``, ``\\midrule``, and ``\\bottomrule``\n  commands. [#7349]\n\n- Added the RST (Restructured-text) table format and the fast version of the\n  RDB reader to the set of formats that are guessed by default. [#5578]\n\n- The read trace (used primarily for debugging) now includes guess argument\n  sets that were skipped entirely e.g. for not supporting user-supplied kwargs.\n  All guesses thus removed from ``filtered_guess_kwargs`` are now listed as\n  \"Disabled\" at the beginning of the trace. [#5578]\n\n- Emit a warning when reading an ECSV file without specifying the ``format``\n  and without PyYAML installed.  Previously this silently fell through to\n  parsing as a basic format file and the file metadata was lost. [#7580]\n\n- Optionally allow writing masked columns to ECSV with the mask explicitly\n  specified as a separate column instead of marking masked elements with \"\"\n  (empty string).  This allows handling the case of a masked string column\n  with \"\" data rows.  [#7481]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Added support for saving all representation classes and many coordinate\n  frames to the asdf format. [#7079]\n\n- Added support for saving models with units to the asdf format. [#7237]\n\n- Added a new ``character_as_bytes`` keyword to the HDF5 Table reading\n  function to control whether byte string columns in the HDF5 file\n  are left as bytes or converted to unicode.  The default is to read\n  as bytes (``character_as_bytes=True``). [#7024, #8017]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``HDUList.pop()`` now accepts string and tuple extension name\n  specifications. [#7236]\n\n- Add an ``ignore_hdus`` keyword to ``FITSDiff`` to allow ignoring HDUs by\n  NAME when diffing two FITS files [#7538]\n\n- Optionally allow writing masked columns to FITS with the mask explicitly\n  specified as a separate column instead of using the FITS standard of\n  certain embedded null values (``NaN`` for float, ``TNULL`` for integers).\n  This can be used to work around limitations in the FITS standard. [#7481]\n\n- All time coordinates can now be written to and read from FITS binary tables,\n  including those with vectorized locations. [#7430]\n\n- The ``fitsheader`` command line tool now supports a ``dfits+fitsort`` mode,\n  and the dotted notation for keywords (e.g. ``ESO.INS.ID``). [#7240]\n\n- Fall back to reading arrays using mode='denywrite' if mode='readonly' fails\n  when using memory-mapping. This solves cases on some platforms when the\n  available address space was less than the file size (even when using memory\n  mapping). [#7926]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Add a ``Multiply`` model which preserves unit through evaluate, unlike\n  ``Scale`` which is dimensionless. [#7210]\n\n- Add a ``uses_quantity`` property to ``Model`` which allows introspection of if\n  the ``Model`` can accept ``Quantity`` objects. [#7417]\n\n- Add a ``separability_matrix`` function which returns the correlation matrix\n  of inputs and outputs. [#7803]\n\n- Fixed compatibility of ``JointFitter`` with the latest version of Numpy. [#7984]\n\n- Add ``prior`` and ``posterior`` constraints to modeling parameters. These are\n  not used by any current fitters, but are provided to allow user code to\n  experiment with Bayesian fitters.  [#7558]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``NDUncertainty`` objects now have a ``quantity`` attribute for simple\n  conversion to quantities. [#7704]\n\n- Add a ``bitmask`` module that provides functions for manipulating bitmasks\n  and data quality (DQ) arrays. [#7944]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Add an ``astropy.stats.bls`` module with an implementation of the \"box least\n  squares\" periodogram that is commonly used for discovering transiting\n  exoplanets and eclipsing binaries. [#7391]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Added support for full use of ``Time`` mixin column for join, hstack, and\n  vstack table operations. [#6888]\n\n- Added a new table index engine, ``SCEngine``, based on the Sorted Containers\n  package. [#7574]\n\n- Add a new keyword argument ``serialize_method`` to ``Table.write`` to\n  control how ``Time`` and ``MaskedColumn`` columns are written. [#7481]\n\n- Allow mixin columns to be used in table ``group`` and ``unique``\n  functions. This applies to both the key columns and the other data\n  columns. [#7712]\n\n- Added support for stacking ``Column``, mixin column (e.g. ``Quantity``,\n  ``Time``) or column-like objects. [#7674]\n\n- Added support for inserting a row into a Table that has ``Time`` or\n  ``TimeDelta`` column(s). [#7897]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Added an option ``--readonly`` to the test command to change the\n  permissions on the temporary installation location to read-only. [#7598]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Allow array-valued ``Time`` object to be modified in place. [#6028]\n\n- Added support for missing values (masking) to the ``Time`` class. [#6028]\n\n- Added supper for a 'local' time scale (for free-running clocks, etc.),\n  and round-tripping to the corresponding FITS time scale. [#7122]\n\n- Added `datetime.timedelta` format class for ``TimeDelta``. [#7441]\n\n- Added ``strftime`` and ``strptime`` methods to ``Time`` class.\n  These methods are similar to those in the Python standard library\n  `time` package and provide flexible input and output formatting. [#7323]\n\n- Added ``datetime64`` format to the ``Time`` class to support working with\n  ``numpy.datetime64`` dtype arrays. [#7361]\n\n- Add fractional second support for ``strftime`` and ``strptime`` methods\n  of ``Time`` class. [#7705]\n\n- Added an ``insert`` method to allow inserting one or more values into a\n  ``Time`` or ``TimeDelta`` object. [#7897]\n\n- Remove timescale from string version of FITS format time string.\n  The timescale is not part of the FITS standard and should not be included.\n  This change may cause some compatibility issues for code that relies on\n  round-tripping a FITS format string with a timescale. Strings generated\n  from previous versions of this package are still understood but a\n  DeprecationWarning will be issued. [#7870]\n\nastropy.uncertainty\n^^^^^^^^^^^^^^^^^^^\n\n- This sub-package was added as a \"preview\" (i.e. API unstable), containing\n  the ``Distribution`` class and associated convenience functions. [#6945]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add complex numbers support for ``Quantity._repr_latex_``. [#7676]\n\n- Add ``thermodynamic_temperature`` equivalency to convert between\n  Jy/sr and \"thermodynamic temperature\" for cosmology. [#7054]\n\n- Add millibar unit. [#7863]\n\n- Add maggy and nanomaggy unit, as well as associated ``zero_point_flux``\n  equivalency. [#7891]\n\n- ``AB`` and ``ST`` are now enabled by default, and have alternate names\n  ``ABflux`` and ``STflux``. [#7891]\n\n- Added ``littleh`` unit and associated ``with_H0`` equivalency. [#7970]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added ``imshow_norm`` function, which combines imshow and creation of a\n  ``ImageNormalize`` object. [#7785]\n\nastropy.visualization.wcsaxes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Add support for setting ``set_separator(None)`` in WCSAxes to use default\n  separators. [#7570]\n\n- Added two keyword argument options to ``CoordinateHelper.set_format_unit``:\n  ``decimal`` can be used to specify whether to use decimal formatting for the\n  labels (by default this is False for degrees and hours and True otherwise),\n  and ``show_decimal_unit`` can be used to determine whether the units should be\n  shown for decimal labels. [#7318]\n\n- Added documentation for ``transform=`` and ``coord_meta=``. [#7698]\n\n- Allow ``coord_meta=`` to optionally include ``format_unit=``. [#7848]\n\n- Add support for more rcParams related to the grid, ticks, and labels, and\n  should work with most built-in Matplotlib styles. [#7961]\n\n- Improved rendering of outward-facing ticks. [#7961]\n\n- Add support for ``tick_params`` (which is a standard Matplotlib\n  function/method) on both the ``WCSAxes`` class and the individual\n  ``CoordinateHelper`` classes. Note that this is provided for compatibility\n  with Matplotlib syntax users may be familiar with, but it is not the\n  preferred way to change settings. Instead, methods such as ``set_ticks``\n  should be preferred. [#7969]\n\n- Moved the argument ``exclude_overlapping`` from ``set_ticks`` to\n  ``set_ticklabel``. [#7969]\n\n- Added a ``pad=`` argument to ``set_ticklabel`` to provide a way to control\n  the padding between ticks and tick labels. [#7969]\n\n- Added support for setting the tick direction in ``set_ticks`` using the\n  ``direction=`` keyword argument. [#7969]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Map ITRS frames to terrestrial WCS coordinates. This will make it possible to\n  use WCSAxes to make figures that combine both celestial and terrestrial\n  features. An example is plotting the coordinates of an astronomical transient\n  over an all- sky satellite image to illustrate the position relative to the\n  Earth at the time of the event. The ITRS frame is identified with WCSs that\n  use the ``TLON-`` and ``TLAT-`` coordinate types. There are several examples\n  of WCSs where this syntax is used to describe terrestrial coordinate systems:\n  Section 7.4.1 of `WCS in FITS \"Paper II\" <https://ui.adsabs.harvard.edu/abs/2002A%26A...395.1077C>`_\n  and the `WCSTools documentation <http://tdc-www.harvard.edu/software/wcstools/wcstools.multiwcs.html>`_.\n  [#6990]\n\n- Added the abstract base class for the low-level WCS API described in APE 14\n  (https://doi.org/10.5281/zenodo.1188875). [#7325]\n\n- Add ``WCS.footprint_contains()`` function to check if the WCS footprint contains a given sky coordinate. [#7273]\n\n- Added the abstract base class for the high-level WCS API described in APE 14\n  (https://doi.org/10.5281/zenodo.1188875). [#7325]\n\n- Added the high-level wrapper class for low-level WCS objects as described in\n  APE 14 (https://doi.org/10.5281/zenodo.1188875). [#7326]\n\n- Added a new property ``WCS.has_distortion``. [#7326]\n\n- Deprecated ``_naxis1`` and ``_naxis2`` in favor of ``pixel_shape``. [#7973]\n\n- Added compatibility to wcslib version 6. [#8093]\n\n\nAPI Changes\n-----------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- ``kernel`` can now be a tuple. [#7561]\n\n- Not technically an API changes, however, the doc string indicated that ``boundary=None``\n  was the default when actually it is ``boundary='fill'``. The doc string has been corrected,\n  however, someone may interpret this as an API change not realising that nothing has actually\n  changed. [#7293]\n\n- ``interpolate_replace_nans()`` can no longer accept the keyword argument\n  ``preserve_nan``. It is explicitly set to ``False``. [#8088]\n\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed ``astropy.coordinates.concatenate`` to include velocity data in the\n  concatenation. [#7922]\n\n- Changed the name of the single argument to ``Frame.realize_frame()`` from the\n  (incorrect) ``representation_type`` to ``data``. [#7923]\n\n- Negative parallaxes passed to ``Distance()`` now raise an error by default\n  (``allow_negative=False``), or are converted to NaN values with a warning\n  (``allow_negative=True``). [#7988]\n\n- Negating a ``SphericalRepresentation`` object now changes the angular\n  coordinates (by rotating 180º) instead of negating the distance. [#7988]\n\n- Creation of new frames now generally creates copies of frame attributes,\n  rather than inconsistently either copying or making references. [#8204]\n\n- The frame class method ``is_equivalent_frame`` now checks for equality of\n  components to determine if a frame is the same when it has frame attributes\n  that are representations, rather than checking if they are the same\n  object. [#8218]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- If a fast reader is explicitly selected (e.g. ``fast_reader='force'``) and\n  options which are incompatible with the fast reader are provided\n  (e.g. ``quotechar='##'``) then now a ``ParameterError`` exception will be\n  raised. [#5578]\n\n- The fast readers will now raise ``InconsistentTableError`` instead of\n  ``CParserError`` if the number of data and header columns do not match.\n  [#5578]\n\n- Changed a number of ``ValueError`` exceptions to ``InconsistentTableError``\n  in places where the exception is related to parsing a table which is\n  inconsistent with the specified table format.  Note that\n  ``InconsistentTableError`` inherits from ``ValueError`` so no user code\n  changes are required. [#7425]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- The ``fits.table_to_hdu()`` function will translate any column ``format``\n  attributes to a TDISPn format string, if possible, and store it as a TDISPn\n  keyword in the ``HDU`` header. [#7226]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Change the order of the return values from ``FittingWithOutlierRemoval``,\n  such that ``fitted_model`` comes first, for consistency with other fitters.\n  For the second value, return only a boolean outlier ``mask``, instead of the\n  previous ``MaskedArray`` (which included a copy of the input data that was\n  both redundant and inadvertently corrupted at masked points). Return a\n  consistent type for the second value when ``niter=0``. [#7407]\n\n- Set the minimum value for the ``bolometric_flux`` parameter of the\n  ``BlackBody1D`` model to zero. [#7045]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Add two new uncertainty classes, ``astropy.nddata.VarianceUncertainty`` and\n  ``astropy.nddata.InverseVariance``. [#6971]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- String values can now be used for the ``cenfunc`` and ``stdfunc``\n  keywords in the ``SigmaClip`` class and ``sigma_clip`` and\n  ``sigma_clipped_stats`` functions. [#7478]\n\n- The ``SigmaClip`` class and ``sigma_clip`` and\n  ``sigma_clipped_stats`` functions now have a ``masked`` keyword,\n  which can be used to return either a masked array (default) or an\n  ndarray with the min/max values. [#7478]\n\n- The ``iters`` keyword has been renamed (and deprecated) to\n  ``maxiters`` in the ``SigmaClip`` class and ``sigma_clip`` and\n  ``sigma_clipped_stats`` functions. [#7478]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table.read()`` on a FITS binary table file will convert any TDISPn header\n  keywords to a Python formatting string when possible, and store it in the\n  column ``format`` attribute. [#7226]\n\n- No values provided to stack will now raise ``ValueError`` rather than\n  ``TypeError``. [#7674]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- ``from astropy.tests.helper import *`` no longer includes\n  ``quantity_allclose``. However,\n  ``from astropy.tests.helper import quantity_allclose`` would still work.\n  [#7381]\n\n- ``warnings_to_ignore_by_pyver`` option in\n  ``enable_deprecations_as_exceptions()`` now takes ``None`` as key.\n  Any deprecation message that is mapped to ``None`` will be ignored\n  regardless of the Python version. [#7790]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Added the ability to use ``local`` as time scale in ``Time`` and\n  ``TimeDelta``. [#6487]\n\n- Comparisons, addition, and subtraction of ``Time`` instances with non-time\n  instances will now return ``NotImplemented`` rather than raise the\n  ``Time``-specific ``OperandTypeError``.  This will generally lead to a\n  regular ``TypeError``.  As a result, ``OperandTypeError`` now only occurs if\n  the operation is between ``Time`` instances of incompatible type or scale.\n  [#7584]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- In ``UnitBase.compose()``, if a sequence (list|tuple) is passed in to\n  ``units``, the default for ``include_prefix_units`` is set to\n  `True`, so that no units get ignored. [#6957]\n\n- Negative parallaxes are now converted to NaN values when using the\n  ``parallax`` equivalency. [#7988]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``InheritDocstrings`` now also works on class properties. [#7166]\n\n- ``diff_values()``, ``report_diff_values()``, and ``where_not_allclose()``\n  utility functions are moved from ``astropy.io.fits.diff``. [#7444]\n\n- ``invalidate_caches()`` has been removed from the\n  ``astropy.utils.compat`` namespace, use it directly from ``importlib``. [#7872]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- In ``ImageNormalize``, the default for ``clip`` is set to ``True``. [#7800]\n\n- Changed ``AsymmetricPercentileInterval`` and ``MinMaxInterval`` to\n  ignore NaN values in arrays. [#7360]\n\n- Automatically default to using ``grid_type='contours'`` in WCSAxes when using\n  a custom ``Transform`` object if the transform has no inverse. [#7847]\n\n\nPerformance Improvements\n------------------------\n\n- Reduced import time by more cautious use of the standard library. [#7647]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Major performance overhaul to ``convolve()``. [#7293]\n\n- ``convolve()``: Boundaries ``fill``, ``extend``, and ``wrap`` now use a single\n  implementation that pads the image with the correct boundary values before convolving.\n  The runtimes of these three were significantly skewed. They now have\n  equivalent runtimes that are also faster than before due to performant contiguous\n  memory access. However, this does increase the memory footprint as an entire\n  new image array is required plus that needed for the padded region.[#7293]\n\n- ``convolve()``: Core computation ported from Cython to C. Several optimization\n  techniques have been implemented to achieve performance gains, e.g. compiler\n  hoisting, and vectorization, etc. Compiler optimization level ``-O2`` required for\n  hoisting and ``-O3`` for vectorization. [#7293]\n\n- ``convolve()``: ``nan_treatment=‘interpolate’`` was slow to compute irrespective of\n  whether any NaN values exist within the array. The input array is now\n  checked for NaN values and interpolation is disabled if non are found. This is a\n  significant performance boost for arrays without NaN values. [#7293]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Sped up creating SkyCoord objects by a factor of ~2 in some cases. [#7615]\n\n- Sped up getting xyz vectors from ``CartesianRepresentation`` (which\n  is used a lot internally). [#7638]\n\n- Sped up transformations and some representation methods by replacing\n  python code with (compiled) ``erfa`` ufuncs. [#7639]\n\n- Sped up adding differential (velocity) data to representations by a factor of\n  ~20, which improves the speed of frame and SkyCoord initialization. [#7924]\n\n- Refactored ``SkyCoord`` initializer to improve performance and code clarity.\n  [#7958]\n\n- Sped up initialization of ``Longitude`` by ~40%. [#7616]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- The ``SigmaClip`` class and ``sigma_clip`` and\n  ``sigma_clipped_stats`` functions are now significantly faster. [#7478]\n\n- A Cython implementation for `astropy.stats.kuiper_two` and a vectorized\n  implementation for `astropy.stats.kuiper_false_positive_probability` have\n  been added, speeding up both functions.  [#8104]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Sped up creating new composite units, and raising units to some power\n  [#7549, #7649]\n\n- Sped up Unit.to when target unit is the same as the original unit. [#7643]\n\n- Lazy-load ``scipy.special`` to shorten ``astropy.units`` import time. [#7636]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Significantly sped up drawing of contours in WCSAxes. [#7568]\n\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed bug in ``convolve_fft`` where masked input was copied with\n  ``numpy.asarray`` instead of ``numpy.asanyarray``.\n  ``numpy.asarray`` removes the mask subclass causing\n  ``numpy.ma.ismasked(input)`` to fail, causing ``convolve_fft``\n  to ignore all masked input. [#8137]\n\n- Remove function side-effects of input data from ``convolve_fft``.\n  It was possible for input data to remain modified if particular exceptions\n  were raised. [#8152]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``EarthLocation.of_address`` now uses the OpenStreetMap geocoding API by\n  default to retrieve coordinates, with the Google API (which now requires an\n  API key) as an option. [#7918]\n\n- Fixed a bug that caused frame objects with NaN distances to have NaN sky\n  positions, even if valid sky coordinates were specified. [#7988]\n\n- Fixed ``represent_as()`` to not round-trip through cartesian if the same\n  representation class as the instance is passed in. [#7988]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed a problem when ``guess=True`` that ``fast_reader`` options\n  could be dropped after the first fast reader class was tried. [#5578]\n\n- Units in CDS-formatted tables are now parsed correctly by the units\n  module. [#7348]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Fixed bug when writing a table with masked columns to HDF5. Previously\n  the mask was being silently dropped.  If the ``serialize_meta`` option is\n  enabled the data mask will now be written as an additional column and the\n  masked columns will round-trip correctly. [#7481]\n\n- Fixed a bug where writing to HDF5 failed for for tables with columns of\n  unicode strings.  Now those columns are first encoded to UTF-8 and\n  written as byte strings. [#7024, #8017]\n\n- Fixed a bug with serializing the bounding_box of models initialized\n  with ``Quantities`` . [#8052]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Added support for ``copy.copy`` and ``copy.deepcopy`` for ``HDUList``. [#7218]\n\n- Override ``HDUList.copy()`` to return a shallow HDUList instance. [#7218]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fix behaviour of certain models with units, by making certain unit-related\n  attributes readonly. [#7210]\n\n- Fixed an issue with validating a ``bounding_box`` whose items are\n  ``Quantities``. [#8052]\n\n- Fix ``Moffat1D`` and ``Moffat2D`` derivatives. [#8108]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fixed rounding behavior in ``overlap_slices`` for even-sized small\n  arrays. [#7859]\n\n- Added support for pickling ``NDData`` instances that have an uncertainty.\n  [#7383]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fix errors in ``kuiper_false_positive_probability``. [#7975]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Fixing bug that prevented to run the doctests on only a single rst documentation\n  file rather than all of them. [#8055]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix a bug when setting a ``TimeDelta`` array item with plain float value(s).\n  This was always interpreted as a JD (day) value regardless of the\n  ``TimeDelta`` format. [#7990]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- To simplify fast creation of ``Quantity`` instances from arrays, one can now\n  write ``array << unit`` (equivalent to ``Quantity(array, unit, copy=False)``).\n  If ``array`` is already a ``Quantity``, this will convert the quantity to the\n  requested units; in-place conversion can be done with ``quantity <<= unit``.\n  [#7734]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed a bug due to which ``report_diff_values()`` was reporting incorrect\n  number of differences when comparing two ``numpy.ndarray``. [#7470]\n\n- The download progress bar is now only displayed in terminals, to avoid\n  polluting piped output. [#7577]\n\n- Ignore URL mirror caching when there is no internet. [#8163]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Right ascension coordinates are now shown in hours by default, and the\n  ``set_format_unit`` method on ``CoordinateHelper`` now works correctly\n  with angle coordinates. [#7215]\n\n\nOther Changes and Additions\n---------------------------\n\n- The documentation build now uses the Sphinx configuration from sphinx-astropy\n  rather than from astropy-helpers. [#7139]\n\n- Versions of Numpy <1.13 are no longer supported. [#7058]\n\n- Running tests now suppresses the output of the installation stage by default,\n  to allow easier viewing of the test results. To re-enable the output as\n  before, use ``python setup.py test --verbose-install``. [#7512]\n\n- The ERFA functions are now wrapped in ufuncs instead of custom C code,\n  leading to some speed improvements, and setting the stage for allowing\n  overrides with ``__array_ufunc__``. [#7502]\n\n- Updated the bundled CFITSIO library to 3.450. See\n  ``cextern/cfitsio/docs/changes.txt`` for additional information. [#8014]\n\n- The ``representation`` keywords in coordinate frames are now deprecated in\n  favor of the ``representation_type`` keywords (which are less\n  ambiguously named). [#8119]\n\n\n\nVersion 3.0.5 (2018-10-14)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed bug in which consecutive ``StaticMatrixTransform``'s in a frame\n  transform path would be combined in the incorrect order. [#7707]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Fixing bug that doctests were not picked up from the narrative\n  documentation when tests were run for all modules. [#7767]\n\n\n\nVersion 3.0.4 (2018-08-02)\n==========================\n\nAPI Changes\n-----------\n\nastropy.table\n^^^^^^^^^^^^^\n\n- The private ``_parent`` attribute in the ``info`` attribute of table\n  columns was changed from a direct reference to the parent column to a weak\n  reference.  This was in response to a memory leak caused by having a\n  circular reference cycle.  This change means that expressions like\n  ``col[3:5].info`` will now fail because at the point of the ``info``\n  property being evaluated the ``col[3:5]`` weak reference is dead.  Instead\n  force a reference with ``c = col[3:5]`` followed by\n  ``c.info.indices``. [#6277, #7448]\n\n\nBug Fixes\n---------\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fixed an bug when creating the ``WCS`` of a cutout (see ``nddata.Cutout2D``)\n  when input image's ``WCS`` contains ``SIP`` distortion corrections by\n  adjusting the ``crpix`` of the ``astropy.wcs.Sip`` (in addition to\n  adjusting the ``crpix`` of the ``astropy.wcs.WCS`` object). This bug\n  had the potential to produce large errors in ``WCS`` coordinate\n  transformations depending on the position of the cutout relative\n  to the input image's ``crpix``. [#7556, #7550]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix memory leak where updating a table column or deleting a table\n  object was not releasing the memory due to a reference cycle\n  in the column ``info`` attributes. [#6277, #7448]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed an bug when creating the ``WCS`` slice (see ``WCS.slice()``)\n  when ``WCS`` contains ``SIP`` distortion corrections by\n  adjusting the ``WCS.sip.crpix`` in addition to adjusting\n  ``WCS.wcs.crpix``. This bug had the potential to produce large errors in\n  ``WCS`` coordinate transformations depending on the position of the slice\n  relative to ``WCS.wcs.crpix``. [#7556, #7550]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled wcslib to v 5.19.1 [#7688]\n\n\nVersion 3.0.3 (2018-06-01)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix stripping correct (header) comment line from ``meta['comments']``\n  in the ``CommentedHeader`` reader for all ``header_start`` settings. [#7508]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Raise error when attempting to open gzipped FITS file in 'append' mode.\n  [#7473]\n\n- Fix a bug when writing to FITS a table that has a column description\n  with embedded blank lines. [#7482]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Enabling running tests for multiple packages when specified comma\n  separated. [#7463]\n\n\nVersion 3.0.2 (2018-04-23)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Computing a 3D separation between two ``SkyCoord`` objects (with the\n  ``separation_3d`` method) now works with or without velocity data attached to\n  the objects. [#7387]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fix validate with xmllint=True. [#7255, #7283]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- ``FittingWithOutlierRemoval`` now handles model sets, as long as the\n  underlying fitter supports masked values. [#7199]\n\n- Remove assumption that ``model_set_axis == 0`` for 2D models in\n  ``LinearLSQFitter``. [#7317, #7199]\n\n- Fix the shape of the outputs when a model set is evaluated with\n  ``model_set_axis=False`` . [#7317]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Accept a tuple for the ``axis`` parameter in ``sigma_clip``, like the\n  underlying ``numpy`` functions and some other functions in ``stats``. [#7199]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- The function ``quantity_allclose`` was moved to the ``units`` package with\n  the new, shorter name ``allclose``. This eliminates a runtime dependency on\n  ``pytest`` which was causing issues for some affiliated packages. The old\n  import will continue to work but may be deprecated in the future. [#7252]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added a units-aware ``allclose`` function (this was previously available in\n  the ``tests`` module as ``quantity_allclose``). To complement ``allclose``,\n  a new ``isclose`` function is also added and backported. [#7252]\n\n\nVersion 3.0.1 (2018-03-12)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix a unicode decode error when reading a table with non-ASCII characters.\n  The fast C reader cannot handle unicode so the code now uses the pure-Python\n  reader in this case. [#7103]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Updated the bundled CFITSIO library to 3.430. This is to remedy a critical\n  security vulnerability that was identified by NASA. See\n  ``cextern/cfitsio/docs/changes.txt`` for additional information. [#7274]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Make sure that a sufficiently recent version of ASDF is installed when\n  running test suite against ASDF tags and schemas. [#7205]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Fix reading files with serialized metadata when using a Table subclass. [#7213]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fix lookup fields by ID. [#7208]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fix model set evaluation over common input when model_set_axis > 0. [#7222]\n\n- Fixed the evaluation of compound models with units. This required adding the\n  ability to have ``input_units_strict`` and ``input_units_allow_dimensionless``\n  be dictionaries with input names as keys. [#6952]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``quantity_helper`` no longer requires ``scipy>=0.18``. [#7219]\n\n\nVersion 3.0 (2018-02-12)\n========================\n\nNew Features\n------------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- New context manager ``set_enabled_constants`` to temporarily use an older\n  version. [#7008]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``Distance`` object now accepts ``parallax`` as a keyword in the\n  initializer, and supports retrieving a parallax (as an ``Angle``) via\n  the ``.parallax`` attributes. [#6855]\n\n- The coordinate frame classes (subclasses of ``BaseCoordinateFrame``) now\n  always have ``.velocity``, ``.proper_motion``, and ``.radial_velocity``\n  properties that provide shorthands to the full-space Cartesian velocity as\n  a ``CartesianDifferential``, the 2D proper motion as a ``Quantity``, and the\n  radial or line-of-sight velocity as a ``Quantity``. [#6869]\n\n- ``SkyCoord`` objects now support storing and transforming differentials - i.e.,\n  both radial velocities and proper motions. [#6944]\n\n- All frame classes now automatically get sensible representation mappings for\n  velocity components. For example, ``d_x``, ``d_y``, ``d_z`` are all\n  automatically mapped to frame component namse ``v_x``, ``v_y``, ``v_z``.\n  [#6856]\n\n- ``SkyCoord`` objects now support updating the position of a source given its\n  space motion and a new time or time difference. [#6872]\n\n- The frame classes now accept a representation class or differential class, or\n  string names for either, through the keyword arguments ``representation_type``\n  and ``differential_type`` instead of ``representation`` and\n  ``differential_cls``. [#6873]\n\n- The frame classes (and ``SkyCoord``) now give more useful error messages when\n  incorrect attribute names are given.  Instead of using the representation\n  attribute names, they use the frame attribute names. [#7106]\n\n- ``EarthLocation`` now has a method to compute the  gravitational redshift due\n  due to solar system bodies.  [#6861, #6935]\n\n- ``EarthLocation`` now has a ``get_gcrs`` convenience method to get the\n  location in GCRS coordinates.  [#6861, #6935]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Expanded the FITS ``Column`` interface to accept attributes pertaining to the FITS\n  World Coordinate System, which includes spatial(celestial) and time coordinates. [#6359]\n\n- Added ``ver`` attribute to set the ``EXTVER`` header keyword to ``ImageHDU``\n  and ``TableHDU``. [#6454]\n\n- The performance for reading FITS tables has been significantly improved,\n  in particular for cases where the tables contain one or more string columns\n  and when done through ``Table.read``. [#6821]\n\n- The performance for writing tables from ``Table.write`` has now been\n  significantly improved for tables containing one or more string columns. [#6920]\n\n- The ``Table.read`` now supports a ``memmap=`` keyword argument to control\n  whether or not to use  memory mapping when reading the table. [#6821]\n\n- When reading FITS tables with ``fits.open``, a new keyword argument\n  ``character_as_bytes`` can be passed - when set to `True`, character columns\n  are returned as Numpy byte arrays (Numpy type S) while when set to `False`,\n  the same columns are decoded to Unicode strings (Numpy type U) which uses more\n  memory. [#6821]\n\n- The ``table_to_hdu`` function and the ``BinTableHDU.from_columns`` and\n  ``FITS_rec.from_columns`` methods now include a ``character_as_bytes``\n  keyword argument - if set to `True`, then when string columns are accessed,\n  byte columns will be returned, which can provide significantly improved\n  performance. [#6920]\n\n- Added support for writing and reading back a table which has \"mixin columns\"\n  such as ``SkyCoord`` or ``EarthLocation`` with no loss of information. [#6912]\n\n- Enable tab-completion for ``FITS_rec`` column names and ``Header`` keywords\n  with IPython 5 and later. [#7071]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- When writing to HDF5 files, the serialized metadata are now saved in a new\n  dataset, instead of the HDF5 dataset attributes. This allows for metadata of\n  any dimensions. [#6304]\n\n- Added support in HDF5 for writing and reading back a table which has \"mixin\n  columns\" such as ``SkyCoord`` or ``EarthLocation`` with no loss of\n  information. [#7007]\n\n- Add implementations of astropy-specific ASDF tag types. [#6790]\n\n- Add ASDF tag and schema for ICRSCoord. [#6904]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Add unit support for tabular models. [#6529]\n\n- A ``deepcopy()`` method was added to models. [#6515]\n\n- Added units support to ``AffineTransformation``. [#6853]\n\n- Added ``is_separable`` function to modeling to test the\n  separability of a model. [#6746]\n\n- Added ``Model.separable`` property. It returns a boolean value or\n  ``None`` if not set. [#6746]\n\n- Support masked array values in ``LinearLSQFitter`` (instead of silently\n  ignoring the mask). [#6927]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added false alarm probability computation to ``astropy.stats.LombScargle``\n  [#6488]\n\n- Implemented Kuiper functions in ``astropy.stats`` [#3724, #6565]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Added support for reading and writing ``astropy.time.Time`` Table columns\n  to and from FITS tables, to the extent supported by the FITS standard. [#6176]\n\n- Improved exception handling and error messages when column ``format``\n  attribute is incorrect for the column type. [#6385]\n\n- Allow to pass ``htmldict`` option to the jsviewer writer. [#6551]\n\n- Added new table operation ``astropy.table.setdiff`` that returns the set\n  difference of table rows for two tables. [#6443]\n\n- Added support for reading time columns in FITS compliant binary tables\n  as ``astropy.time.Time`` Table columns. [#6442]\n\n- Allowed to remove table rows through the ``__delitem__`` method. [#5839]\n\n- Added a new ``showtable`` command-line script to view binary or ASCII table\n  files. [#6859]\n\n- Added new table property ``astropy.table.Table.loc_indices`` that returns the\n  location of rows by indexes. [#6831]\n\n- Allow updating of table by indices through the property ``astropy.table.Table.loc``. [#6831]\n\n- Enable tab-completion for column names with IPython 5 and later. [#7071]\n\n- Allow getting and setting a table Row using multiple column names. [#7107]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Split pytest plugins into separate modules. Move remotedata, openfiles,\n  doctestplus plugins to standalone repositories. [#6384, #6606]\n\n- When testing, astropy (or the package being tested) is now installed to\n  a temporary directory instead of copying the build. This allows\n  entry points to work correctly. [#6890]\n\n- The tests_require setting in setup.py now works properly when running\n  'python setup.py test'. [#6892]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Deprecated conversion of quantities to truth values. Currently, the expression\n  ``bool(0 * u.dimensionless_unscaled)`` evaluates to ``True``. In the future,\n  attempting to convert a ``Quantity`` to a ``bool`` will raise ``ValueError``.\n  [#6580, #6590]\n\n- Modify the ``brightness_temperature`` equivalency to provide a surface\n  brightness equivalency instead of the awkward assumed-per-beam equivalency\n  that previously existed [#5173, #6663]\n\n- Support was added for a number of ``scipy.special`` functions. [#6852]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``astropy.utils.console.ProgressBar.map`` class method now supports the\n  ``ipython_widget`` option. You can now pass it both ``multiprocess=True`` and\n  ``ipython_widget=True`` to get both multiprocess speedup and a progress bar\n  widget in an IPython Notebook. [#6368]\n\n- The ``astropy.utils.compat.funcsigs`` module has now been deprecated. Use the\n  Python 'inspect' module directly instead. [#6598]\n\n- The ``astropy.utils.compat.futures`` module has now been deprecated. Use the\n  Python 'concurrent.futures' module directly instead. [#6598]\n\n- ``JsonCustomEncoder`` is expanded to handle ``Quantity`` and ``UnitBase``.\n  [#5471]\n\n- Added a ``dcip_xy`` method to IERS that interpolates along the dX_2000A and\n  dY_2000A columns of the IERS table.  Hence, the data for the CIP offsets is\n  now available for use in coordinate frame conversion. [#5837]\n\n- The functions ``matmul``, ``broadcast_arrays``, ``broadcast_to`` of the\n  ``astropy.utils.compat.numpy`` module have been deprecated. Use the\n  NumPy functions directly. [#6691]\n\n- The ``astropy.utils.console.ProgressBar.map`` class method now returns\n  results in sequential order. Previously, if you set ``multiprocess=True``,\n  then the results could arrive in any arbitrary order, which could be a nasty\n  shock. Although the function will still be evaluated on the items in\n  arbitrary order, the return values will arrive in the same order in which the\n  input items were provided. The method is now a thin wrapper around\n  ``astropy.utils.console.ProgressBar.map_unordered``, which preserves the old\n  behavior. [#6439]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Enable Matplotlib's subtraction shorthand syntax for composing and\n  inverting transformations for the ``WCSWorld2PixelTransform`` and\n  ``WCSPixel2WorldTransform`` classes by setting ``has_inverse`` to ``True``.\n  In order to implement a unit test, also implement the equality comparison\n  operator for both classes. [#6531]\n\n- Added automatic hiding of axes labels when no tick labels are drawn on that\n  axis. This parameter can be configured with\n  ``WCSAxes.coords[*].set_axislabel_visibility_rule`` so that labels are automatically\n  hidden when no ticks are drawn or always shown. [#6774]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Added a new function ``celestial_frame_to_wcs`` to convert from\n  coordinate frames to WCS (the opposite of what ``wcs_to_celestial_frame``\n  currently does. [#6481]\n\n- ``wcslib`` was updated to v 5.18. [#7066]\n\n\nAPI Changes\n-----------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- ``Gaussian2DKernel`` now accepts ``x_stddev`` in place of ``stddev`` with\n  an option for ``y_stddev``, if different. It also accepts ``theta`` like\n  ``Gaussian2D`` model. [#3605, #6748]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Deprecated ``recommended_units`` for representations. These were used to\n  ensure that any angle was presented in degrees in sky coordinates and\n  frames. This is more logically done in the frame itself. [#6858]\n\n- As noted above, the frame class attributes ``representation`` and\n  ``differential_cls`` are being replaced by ``representation_type`` and\n  ``differential_type``. In the next version, using ``representation`` will raise\n  a deprecation warning. [#6873]\n\n- Coordinate frame classes now can't be added to the frame transform graph if\n  they have frame attribute names that conflict with any component names. This\n  is so ``SkyCoord`` can uniquely identify and distinguish frame attributes from\n  frame components. [#6871]\n\n- Slicing and reshaping of ``SkyCoord`` and coordinate frames no longer passes\n  the new object through ``__init__``, but directly sets attributes on a new\n  instance. This speeds up those methods by an order of magnitude, but means\n  that any customization done in ``__init__`` is by-passed. [#6941]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Allow ECSV files to be auto-identified by ``Table.read`` or\n  ``Table.write`` based on the ``.ecsv`` file name suffix. In this case it\n  is not required to provide the ``format`` keyword. [#6552]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Automatically detect and handle compression in FITS files that are opened by\n  passing a file handle to ``fits.open`` [#6373]\n\n- Remove the ``nonstandard`` checksum option. [#6571]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- When writing to HDF5 files, the serialized metadata are now saved in a new\n  dataset instead of the HDF5 dataset attributes. This allows for metadata of\n  any dimensions. [#6304]\n\n- Deprecated the ``usecPickle`` kwarg of ``fnunpickle`` and ``fnpickle`` as\n  it was needed only for Python2 usage. [#6655]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Add handling of ``tree.Group`` elements to ``tree.Resource``.  Unified I/O\n  or conversion to astropy tables is not affected. [#6262]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``GaussianAbsorption1D`` model.\n  Use ``Const1D - Gaussian1D`` instead. [#6542]\n\n- Removed the registry from modeling. [#6706]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- When setting the column ``format`` attribute the value is now immediately\n  validated. Previously one could set to any value and it was only checked\n  when actually formatting the column. [#6385]\n\n- Deprecated the ``python3_only`` kwarg of the\n  ``convert_bytestring_to_unicode`` and ``convert_unicode_to_bytestring``\n  methods it was needed only for Python2 usage. [#6655]\n\n- When reading in FITS tables with ``Table.read``, string columns are now\n  represented using Numpy byte (dtype ``S``) arrays rather than Numpy\n  unicode arrays (dtype ``U``). The ``Column`` class then ensures the\n  bytes are automatically converted to string as needed. [#6821]\n\n- When getting a table row using multiple column names, if one of the\n  names is not a valid column name then a ``KeyError`` exception is\n  now raised (previously ``ValueError``).  When setting a table row,\n  if the right hand side is not a sequence with the correct length\n  then a ``ValueError`` is now raised (previously in certain cases\n  a ``TypeError`` was raised). [#7107]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``download_files_in_parallel`` now always uses ``cache=True`` to make the\n  function work on Windows. [#6671]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The Astropy matplotlib plot style has been deprecated. It will continue to\n  work in future but is no longer documented. [#6991]\n\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Frame objects now use the default differential even if the representation is\n  explicitly provided as long as the representation provided is the same type as\n  the default representation. [#6944]\n\n- Coordinate frame classes now raise an error when they are added to the frame\n  transform graph if they have frame attribute names that conflict with any\n  component names. [#6871]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Added support for reading very large tables in chunks to reduce memory\n  usage. [#6458]\n\n- Strip leading/trailing white-space from latex lines to avoid issues when\n  matching ``\\begin{tabular}`` statements.  This is done by introducing a new\n  ``LatexInputter`` class to override the ``BaseInputter``. [#6311]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Properly handle opening of FITS files from ``http.client.HTTPResponse`` (i.e.\n  it now works correctly when passing the results of ``urllib.request.urlopen``\n  to ``fits.open``). [#6378]\n\n- Fix the ``fitscheck`` script for updating invalid checksums, or removing\n  checksums. [#6571]\n\n- Fixed potential problems with the compression module [#6732]\n\n- Always use the 'D' format for floating point values in ascii tables. [#6938]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix getting a table row when using multiple column names (for example\n  ``t[3]['a', 'b', 'c']``).  Also fix a problem when setting an entire row:\n  if setting one of the right-hand side values failed this could result in\n  a partial update of the referenced parent table before the exception is\n  raised. [#7107]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Initialization of ``Time`` instances with bytes or arrays with dtype ``S``\n  will now automatically attempt to decode as ASCII. This ensures ``Column``\n  instances with ASCII strings stored with dtype ``S`` can be used.\n  [#6823, #6903]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed a bug that caused PLY files to not be generated correctly in Python 3.\n  [#7174]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``deprecated`` decorator applied to a class will now modify the class\n  itself, rather than to create a class that just looks and behave like the\n  original. This is needed so that the Python 3 ``super`` without arguments\n  works for decorated classes. [#6615]\n\n- Fixed ``HomogeneousList`` when setting one item or a slice. [#6773]\n\n- Also check the type when creating a new instance of\n  ``HomogeneousList``. [#6773]\n\n- Make ``HomogeneousList`` work with iterators and generators when creating the\n  instance, extending it, or using when setting a slice. [#6773]\n\n\nOther Changes and Additions\n---------------------------\n\n- Versions of Python <3.5 are no longer supported. [#6556]\n\n- Versions of Pytest <3.1 are no longer supported. [#6419]\n\n- Versions of Numpy <1.10 are no longer supported. [#6593]\n\n- The bundled CFITSIO was updated to version 3.41 [#6477]\n\n- ``analytic_functions`` sub-package is removed.\n  Use ``astropy.modeling.blackbody``. [#6541]\n\n- ``astropy.vo`` sub-package is removed. Use ``astropy.samp`` for SAMP and\n  ``astroquery`` for VO cone search. [#6540]\n\n- The guide to setting up Emacs for code development was simplified, and\n  updated to recommend ``flycheck`` and ``flake8`` for syntax checks. [#6692]\n\n- The bundled version of PLY was updated to 3.10. [#7174]\n\n\n\nVersion 2.0.16 (2019-10-27)\n===========================\n\nBug Fixes\n---------\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fixed a troubling bug in which ``Time`` could loose precision, with deviations\n  of 300 ns. [#9328]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated IERS A URLs due to USNO prolonged maintenance. [#9443]\n\n\n\nVersion 2.0.15 (2019-10-06)\n===========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where the string representation of a ``BaseCoordinateFrame``\n  object could become garbled under specific circumstances when the frame\n  defines custom component names via ``RepresentationMapping``. [#8869]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix uint conversion in ``FITS_rec`` when slicing a table. [#8982]\n\n- Fix reading of unsigned 8-bit integer with compressed fits. [#9219]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fixed a bug in ``overlap_slices`` where the ``\"strict\"`` mode was\n  too strict for a small array along the upper edge of the large array.\n  [#8901]\n\n- Fixed a bug in ``overlap_slices`` where a ``NoOverlapError`` would\n  be incorrectly raised for a 0-shaped small array at the origin.\n  [#8901]\n\nastropy.samp\n^^^^^^^^^^^^\n\n- Fixed a bug that caused an incorrectly constructed warning message\n  to raise an error. [#8966]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix ``FixedWidthNoHeader`` to pay attention to ``data_start`` keyword when\n  finding first data line to split columns [#8485, #8511]\n\n- Fix bug when initializing ``Table`` with ``rows`` as a generator. [#9315]\n\n- Fix ``join`` when there are multiple mixin (Quantity) columns as keys. [#9313]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``Quantity`` now preserves the ``dtype`` for anything that is floating\n  point, including ``float16``. [#8872]\n\n- ``Unit()`` now accepts units with fractional exponents such as ``m(3/2)``\n  in the default/``fits`` and ``vounit`` formats that would previously\n  have been rejected for containing multiple solidi (``/``). [#9000]\n\n- Fixed the LaTeX representation of units containing a superscript. [#9218]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed compatibility issues with latest versions of Matplotlib. [#8961]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated required version of Cython to v0.29.13 to make sure that\n  generated C files are compatible with the upcoming Python 3.8 release\n  as well as earlier supported versions of Python. [#9198]\n\n\n\nVersion 2.0.14 (2019-06-14)\n===========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix ``Header.update`` which was dropping the comments when passed\n  a ``Header`` object. [#8840]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- ``Moffat1D.fwhm`` and ``Moffat2D.fwhm`` will return a positive value when\n  ``gamma`` is negative. [#8801, #8815]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed a bug that prevented ``EarthLocation`` from being initialized with\n  numpy >=1.17. [#8849]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed ``quantity_support`` to work around the fact that matplotlib\n  does not detect subclasses in its ``units`` framework. With this,\n  ``Angle`` and other subclasses work correctly. [#8818]\n\n- Fixed ``quantity_support`` to work properly if multiple context managers\n  are nested. [#8844]\n\n\nVersion 2.0.13 (2019-06-08)\n===========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n- Fixed bug in ``ColDefs._init_from_array()`` that caused unsigned datatypes\n  with the opposite endianness as the host architecture to fail the\n  TestColumnFunctions.test_coldefs_init_from_array unit test. [#8460]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Explicitly set PyYAML default flow style to None to ensure consistent\n  astropy YAML output for PyYAML version 5.1 and later. [#8500]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Block floating-point columns from using repr format when converted to Table\n  [#8358]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed issue in ``bayesian_blocks`` when called with the ``ncp_prior``\n  keyword. [#8339]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fix ``take`` when one gets only a single element from a ``Quantity``,\n  ensuring it returns a ``Quantity`` rather than a scalar. [#8617]\n\n\n\nVersion 2.0.12 (2019-02-23)\n===========================\n\nNew Features\n------------\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``deprecated_renamed_argument`` decorator now capable deprecating an\n  argument without renaming it. It also got a new ``alternative`` keyword\n  argument to suggest alternative functionality instead of the removed\n  one. [#8324]\n\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed bug in ``ColDefs._init_from_array()`` that caused non-scalar unsigned\n  entries to not have the correct bzero value set. [#8353]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed compatibility of ``JointFitter`` with the latest version of Numpy.\n  [#7984]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix ``.quantity`` property of ``Column`` class for function-units (e.g.,\n  ``dex``). Previously setting this was possible, but getting raised\n  an error. [#8425]\n\n- Fixes a bug where initializing a new ``Table`` from the final row of an\n  existing ``Table`` failed.  This happened when that row was generated using\n  the item index ``[-1]``. [#8422]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix bug that caused ``WCS.has_celestial``, ``wcs_to_celestial_frame``, and\n  other functionality depending on it to fail in the presence of correlated\n  celestial and other axes. [#8420]\n\n\nOther Changes and Additions\n---------------------------\n\n- Fixed ``make clean`` for the documentation on Windows to ensure it\n  properly removes the ``api`` and ``generated`` directories. [#8346]\n\n- Updating bundled ``pytest-openfiles`` to v0.3.2. [#8434]\n\n- Making ``ErfaWarning`` and ``ErfaError`` available via\n  ``astropy.utils.exceptions``. [#8441]\n\n\n\nVersion 2.0.11 (2018-12-31)\n===========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix fast reader C tokenizer to handle double quotes in quoted field.\n  [#8283]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix a bug in ``io.fits`` with writing Fortran-ordered arrays to file\n  objects. [#8282]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add support for ``np.matmul`` as a ``ufunc`` (new in numpy 1.16).\n  [#8264, #8305]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix failures caused by IERS_A_URL being unavailable by introducing\n  IERS_A_URL_MIRROR. [#8308]\n\n\n\nVersion 2.0.10 (2018-12-04)\n===========================\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fix Moffat2DKernel's FWHM computation, which has an influence on the default\n  size of the kernel when no size is given. [#8105]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Disable ``of_address`` usage due to Google API now requiring API key. [#7993]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``fits.append`` now correctly handles file objects with valid modes other\n  than ``ostream``. [#7856]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix ``Table.show_in_notebook`` failure when mixin columns are present. [#8069]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Explicitly disallow incompatible versions of ``pytest`` when using the test\n  runner. [#8188]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed the spelling of the 'luminous emittance/illuminance' physical\n  property. [#7942]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that caused origin to be incorrect if not specified. [#7927]\n\n- Fixed a bug that caused an error when plotting grids multiple times\n  with grid_type='contours'. [#7927]\n\n- Put an upper limit on the number of bins in ``hist`` and ``histogram`` and\n  factor out calculation of bin edges into public function\n  ``calculate_bin_edges``. [#7991]\n\n\nOther Changes and Additions\n---------------------------\n\n- Fixing ``astropy.__citation__`` to provide the full bibtex entry of the 2018\n  paper. [#8110]\n\n- Pytest 4.0 is not supported by the 2.0.x LTS releases. [#8173]\n\n- Updating bundled ``pytest-remotedata`` to v0.3.1. [#8174]\n\n- Updating bundled ``pytest-doctestplus`` to v0.2.0. [#8175]\n\n- Updating bundled ``pytest-openfiles`` to v0.3.0. [#8176]\n\n- Adding ``warning_type`` keyword argument to the \"deprecated\" decorators to\n  allow issuing custom warning types instead of the default\n  ``AstropyDeprecationWarning``. [#8178]\n\n\nVersion 2.0.9 (2018-10-14)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix reading of big files with the fast reader. [#7885]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``HDUList.__contains__()`` now works with ``HDU`` arguments. That is,\n  ``hdulist[0] in hdulist`` now works as expected. [#7282]\n\n- ``HDUList`` s can now be written to streams in Python 3 [#7850]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fixed the bug in CCData.read when the HDU is not specified and the first one\n  is empty so the function searches for the first HDU with data which may not\n  have an image extension. [#7739]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed bugs in biweight statistics functions where a constant data\n  array (or if using the axis keyword, constant along an axis) would\n  return NaN. [#7737]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a bug in ``to_pandas()`` where integer type masked columns were always\n  getting converted to float. This could cause loss of precision. Now this only\n  occurs if there are actually masked data values, in which case ``pandas``\n  does require the values to be float so that ``NaN`` can be used to mark the\n  masked values. [#7741, #7747]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Change the name of the configuration variable controlling the location of the\n  Astropy cache in the Pytest plugin from ``cache_dir`` to\n  ``astropy_cache_dir``. The command line flag also changed to\n  ``--astropy-cache-dir``.  This prevents a conflict with the ``cache_dir``\n  variable provided by pytest itself. Also made similar change to\n  ``config_dir`` option as a precaution. [#7721]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``UnrecognizedUnit`` instances can now be compared to any other object\n  without raising `TypeError`. [#7606]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fix compatibility with Matplotlib 3.0. [#7839]\n\n- Fix an issue that caused a crash when using WCSAxes with a custom Transform\n  object and when using ``grid_type='contours'`` to plot a grid. [#7846]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Instead of raising an error ``astropy.wcs`` now returns the input when\n  the input has zero size.                                       [#7746]\n\n- Fix ``malloc(0)`` bug in ``pipeline_all_pixel2world()`` and\n  ``pipeline_pix2foc()``. They now raise an exception for input with\n  zero coordinates, i.e. shape = (0, n). [#7806]\n\n- Fixed an issue with scalar input when WCS.naxis is one. [#7858]\n\nOther Changes and Additions\n---------------------------\n\n- Added a new ``astropy.__citation__`` attribute which gives a citation\n  for Astropy in bibtex format. Made sure that both this and\n  ``astropy.__bibtex__`` works outside the source environment, too. [#7718]\n\n\n\nVersion 2.0.8 (2018-08-02)\n==========================\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Correct data type conversion for non-float masked kernels. [#7542]\n\n- Fix non-float or masked, zero sum kernels when ``normalize_kernel=False``.\n  Non-floats would yield a type error and masked kernels were not being filled.\n  [#7541]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure that relative humidities can be given as Quantities, rather than take\n  any quantity and just strip its unit. [#7668]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Fixed ``Cutout2D`` output WCS NAXIS values to reflect the cutout\n  image size. [#7552]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a bug in ``add_columns`` method where ``rename_duplicate=True`` would\n  cause an error if there were no duplicates. [#7540]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Fixed bug in ``python setup.py test --coverage`` on Windows machines. [#7673]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Avoid rounding errors when converting ``Quantity`` to ``TimeDelta``. [#7625]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that caused the position of the tick values in decimal mode\n  to be incorrectly determined. [#7332]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed a bug that caused ``wcs_to_celestial_frame``, ``skycoord_to_pixel``, and\n  ``pixel_to_skycoord`` to raise an error if the axes of the celestial WCS were\n  swapped. [#7691]\n\n\nVersion 2.0.7 (2018-06-01)\n==========================\n\nBug Fixes\n---------\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed ``Tabular`` models to not change the shape of data. [#7411]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- In ``freedman_bin_width``, if the data has too small IQR,\n  raise ``ValueError``. [#7248, #7402]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a performance issue in ``MaskedColumn`` where initialization was\n  extremely slow for large arrays with the default ``mask=None``. [#7422]\n\n- Fix printing table row indexed with unsigned integer. [#7469]\n\n- Fix copy of mask when copying a Table, as this is no more done systematically\n  by Numpy since version 1.14. Also fixed a problem when MaskedColumn was\n  initialized with ``mask=np.ma.nomask``. [#7486]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fixed a bug in Time that raised an error when initializing a subclass of Time\n  with a Time object. [#7453]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed a bug that improperly handled unicode case of URL mirror in Python 2.\n  [#7493]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that prevented legends from being added to plots done with\n  units. [#7510]\n\n\nOther Changes and Additions\n---------------------------\n\n- Bundled ``pytest-remotedata`` plugin is upgraded to 0.3. [#7493]\n\n\nVersion 2.0.6 (2018-04-23)\n==========================\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- convolve(boundary=None) requires the kernel to be smaller than the image.\n  This was never actually checked, it now is and an exception is raised.\n  [#7313]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- ``u.quantity_input`` no longer errors if the return annotation for a\n  function is ``None``. [#7336, #7380]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Explicitly default to origin='lower' in WCSAxes. [#7331]\n\n- Lists of units are now converted in the Matplotlib unit converter. This means\n  that for Matplotlib versions later than 2.2, more plotting functions now work\n  with units (e.g. errorbar). [#7037]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated the bundled CFITSIO library to 3.44. This is to remedy another\n  critical security vulnerability that was identified by NASA. See\n  ``cextern/cfitsio/docs/changes.txt`` for additional information. [#7370]\n\n\nVersion 2.0.5 (2018-03-12)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Add a workaround for a bug in the einsum function in Numpy 1.14.0. [#7187]\n\n- Fix problems with printing ``Angle`` instances under numpy 1.14.1. [#7234]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed the ``fitsdiff`` script for matching fits file with one in a\n  directory path. [#7085]\n\n- Make sure that lazily-loaded ``HDUList`` is automatically loaded when calling\n  ``hdulist.pop``. [#7186]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Propagate weights to underlying fitter in ``FittingWithOutlierRemoval`` [#7249]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Support dotted package names as namespace packages when gathering test\n  coverage. [#7170]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Matplotlib axes have the ``axisbelow`` property to control the z-order of\n  ticks, tick labels, and grid lines. WCSAxes will now respect this property.\n  This is useful for drawing scale bars or inset boxes, which should have a\n  z-order that places them above all ticks and gridlines. [#7098]\n\n\nOther Changes and Additions\n---------------------------\n\n- Updated the bundled CFITSIO library to 3.430. This is to remedy a critical\n  security vulnerability that was identified by NASA. See\n  ``cextern/cfitsio/docs/changes.txt`` for additional information. [#7274, #7275]\n\n\nVersion 2.0.4 (2018-02-06)\n==========================\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed IndexError when ``preserve_nan=True`` in ``convolve_fft``. Added\n  testing with ``preserve_nan=True``. [#7000]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``sites.json`` file is now parsed explicitly with a UTF-8 encoding. This\n  means that future revisions to the file with unicode observatory names can\n  be done without breaking the site registry parser.  [#7082]\n\n- Working around a bug in Numpy 1.14.0 that broke some coordinate\n  transformations. [#7105]\n\n- Fixed a bug where negative angles could be rounded wrongly when converting\n  to a string with seconds omitted. [#7148]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- When datafile is missing, fits.tabledump uses input file name to build\n  output file name. Fixed how it gets input file name from HDUList. [#6976]\n\n- Fix in-place updates to scaled columns. [#6956]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed bug in identifying inherited registrations from multiple ancestors [#7156]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug in ``LevMarLSQFitter`` when fitting 2D models with constraints. [#6705]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``download_file`` function will check for cache downloaded from mirror URL\n  first before attempting actual download if primary URL is unavailable. [#6987]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed test failures for ``astropy.visualization.wcsaxes`` which were due to\n  local matplotlibrc files being taken into account. [#7132]\n\n\nOther Changes and Additions\n---------------------------\n\n- Fixed broken links in the documentation. [#6745]\n\n- Substantial performance improvement (potentially >1000x for some cases) when\n  converting non-scalar ``coordinates.Angle`` objects to strings. [#7004]\n\n\nVersion 2.0.3 (2017-12-13)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ecliptic frame classes now support attributes ``v_x``, ``v_y``, ``v_z`` when\n  using with a Cartesian representation. [#6569]\n\n- Added a nicer error message when accidentally calling ``frame.representation``\n  instead of ``frame.data`` in the context of methods that use ``._apply()``.\n  [#6561]\n\n- Creating a new ``SkyCoord`` from a list of multiple ``SkyCoord`` objects now\n  yield the correct type of frame, and works at all for non-equatorial frames.\n  [#6612]\n\n- Improved accuracy of velocity calculation in ``EarthLocation.get_gcrs_posvel``.\n  [#6699]\n\n- Improved accuracy of radial velocity corrections in\n  ``SkyCoord.radial_velocity_correction```. [#6861]\n\n- The precision of ecliptic frames is now much better, after removing the\n  nutation from the rotation and fixing the computation of the position of the\n  Sun. [#6508]\n\nastropy.extern\n^^^^^^^^^^^^^^\n\n- Version 0.2.1 of ``pytest-astropy`` is included as an external package.\n  [#6918]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix writing the result of ``fitsdiff`` to file with ``--output-file``. [#6621]\n\n- Fix a minor bug where ``FITS_rec`` instances can not be indexed with tuples\n  and other sequences that end up with a scalar. [#6955, #6966]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Fix ``ImportError`` when ``hdf5`` is imported first in a fresh Python\n  interpreter in Python 3. [#6604, #6610]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Suppress errors during WCS creation in CCDData.read(). [#6500]\n\n- Fixed a problem with ``CCDData.read`` when the extension wasn't given and the\n  primary HDU contained no ``data`` but another HDU did. In that case the header\n  were not correctly combined. [#6489]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed an issue where the biweight statistics functions would\n  sometimes cause runtime underflow/overflow errors for float32 input\n  arrays. [#6905]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a problem when printing a table when a column is deleted and\n  garbage-collected, and the format function caching mechanism happens\n  to reuse the same cache key. [#6714]\n\n- Fixed a problem when comparing a unicode masked column (on left side) to\n  a bytes masked column (on right side). [#6899]\n\n- Fixed a problem in comparing masked columns in bytes and unicode when the\n  unicode had masked entries. [#6899]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Fixed a bug that causes tests for rst files to not be run on certain\n  platforms. [#6555, #6608]\n\n- Fixed a bug that caused the doctestplus plugin to not work nicely with the\n  hypothesis package. [#6605, #6609]\n\n- Fixed a bug that meant that the data.astropy.org mirror could not be used when\n  using --remote-data=astropy. [#6724]\n\n- Support compatibility with new ``pytest-astropy`` plugins. [#6918]\n\n- When testing, astropy (or the package being tested) is now installed to\n  a temporary directory instead of copying the build. This allows\n  entry points to work correctly. [#6890]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Initialization of Time instances now is consistent for all formats to\n  ensure that ``-0.5 <= jd2 < 0.5``. [#6653]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Ensure that ``Quantity`` slices can be set with objects that have a ``unit``\n  attribute (such as ``Column``). [#6123]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``download_files_in_parallel`` now respects the given ``timeout`` value.\n  [#6658]\n\n- Fixed bugs in remote data handling and also in IERS unit test related to path\n  URL, and URI normalization on Windows. [#6651]\n\n- Fixed a bug that caused ``get_pkg_data_fileobj`` to not work correctly when\n  used with non-local data from inside packages. [#6724]\n\n- Make sure ``get_pkg_data_fileobj`` fails if the URL can not be read, and\n  correctly falls back on the mirror if necessary. [#6767]\n\n- Fix the ``finddiff`` option in ``find_current_module`` to properly deal\n  with submodules. [#6767]\n\n- Fixed ``pyreadline`` import in ``utils.console.isatty`` for older IPython\n  versions on Windows. [#6800]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed the vertical orientation of the ``fits2bitmap`` output bitmap\n  image to match that of the FITS image. [#6844, #6969]\n\n- Added a workaround for a bug in matplotlib so that the ``fits2bitmap``\n  script generates the correct output file type. [#6969]\n\n\nOther Changes and Additions\n---------------------------\n\n- No longer require LaTeX to build the documentation locally and\n  use mathjax instead. [#6701]\n\n- Ensured that all tests use the Astropy data mirror if needed. [#6767]\n\n\nVersion 2.0.2 (2017-09-08)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure transformations via ICRS also work for coordinates that use cartesian\n  representations. [#6440]\n\n- Fixed a bug that was preventing ``SkyCoord`` objects made from lists of other\n  coordinate objects from being written out to ECSV files. [#6448]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Support the ``GZIP_2`` FITS image compression algorithm as claimed\n  in docs. [#6486]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that wrote out VO table as version 1.2 instead of 1.3. [#6521]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a bug when combining unicode columns via join or vstack.  The character\n  width of the output column was a factor of 4 larger than needed. [#6459]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Fixed running the test suite using --parallel. [#6415]\n\n- Added error handling for attempting to run tests in parallel without having\n  the ``pytest-xdist`` package installed. [#6416]\n\n- Fixed issue running doctests with pytest>=3.2. [#6423, #6430]\n\n- Fixed issue caused by antivirus software in response to malformed compressed\n  files used for testing. [#6522]\n\n- Updated top-level config file to properly ignore top-level directories.\n  [#6449]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Quantity._repr_latex_ now respects precision option from numpy\n  printoptions. [#6412]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- For the ``deprecated_renamed_argument`` decorator, refer to the deprecation‘s\n  caller instead of ``astropy.utils.decorators``, to makes it easier to find\n  where the deprecation warnings comes from. [#6422]\n\n\nVersion 2.0.1 (2017-07-30)\n==========================\n\nBug Fixes\n---------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Fixed Earth radius to be the IAU2015 value for the equatorial radius.\n  The polar value had erroneously been used in 2.0. [#6400]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Added old frame attribute classes back to top-level namespace of\n  ``astropy.coordinates``. [#6357]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Scaling an image always uses user-supplied values when given. Added\n  defaults for scaling when bscale/bzero are not present (float images).\n  Fixed a small bug in when to reset ``_orig_bscale``. [#5955]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed a bug in initializing compound models with units. [#6398]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Updating CCDData.read() to be more flexible with inputs, don't try to\n  delete keywords that are missing from the header. [#6388]\n\nastropy.tests\n^^^^^^^^^^^^^\n- Fixed the test command that is run from ``setuptools`` to allow it to\n  gracefully handle keyboard interrupts and pass them on to the ``pytest``\n  subprocess. This prompts ``pytest`` to teardown and display useful traceback\n  and test information [#6369]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Ticks and tick labels are now drawn in front of, rather than behind,\n  gridlines in WCS axes. This improves legibility in situations where\n  tick labels may be on the interior of the axes frame, such as the right\n  ascension axis of an all-sky Aitoff or Mollweide projection. [#6361]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix the missing wcskey part in _read_sip_kw, this will cause error when\n  reading sip wcs while there is no default CRPIX1 CRPIX2 keywords and only\n  CRPIX1n CRPIX2n in header. [#6372]\n\n\n\nVersion 2.0 (2017-07-07)\n========================\n\nNew Features\n------------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Constants are now organized into version modules, with physical CODATA\n  constants in the ``codata2010`` and ``codata2014`` sub-modules,\n  and astronomical constants defined by the IAU in the ``iau2012`` and\n  ``iau2015`` sub-modules. The default constants in ``astropy.constants``\n  in Astropy 2.0 have been updated from ``iau2012`` to ``iau2015`` and\n  from ``codata2010`` to ``codata2014``. The constants for 1.3 can be\n  accessed in the ``astropyconst13`` sub-module and the constants for 2.0\n  (the default in ``astropy.constants``) can also be accessed in the\n  ``astropyconst20`` sub-module [#6083]\n\n- The GM mass parameters recommended by IAU 2015 Resolution B 3 have been\n  added as ``GM_sun``, ``GM_jup``, and ``GM_earth``, for the Sun,\n  Jupiter and the Earth. [#6083]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Major change in convolution behavior and keyword arguments. Additional\n  details are in the API section. [#5782]\n\n- Convolution with un-normalized and un-normalizable kernels is now possible.\n  [#5782]\n\n- Add a new argument, ``normalization_rtol``, to ``convolve_fft``, allowing\n  the user to specify the relative error tolerance in the normalization of\n  the convolution kernel. [#5649, #5177]\n\n- Models can now be convoluted using ``convolve`` or ``convolve_fft``,\n  which generates a regular compound model. [#6015]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Frame attributes set on ``SkyCoord`` are now always validated, and any\n  ndarray-like operation (like slicing) will also be done on those. [#5751]\n\n- Caching of  all possible frame attributes was implemented. This greatly\n  speeds up many ``SkyCoord`` operations. [#5703, #5751]\n\n- A class hierarchy was added to allow the representation layer to store\n  differentials (i.e., finite derivatives) of coordinates.  This is intended\n  to enable support for velocities in coordinate frames. [#5871]\n\n- ``replicate_without_data`` and ``replicate`` methods were added to\n  coordinate frames that allow copying an existing frame object with various\n  reference or copy behaviors and possibly overriding frame attributes. [#6182]\n\n- The representation class instances can now contain differential objects.\n  This is primarily useful for internal operations that will provide support\n  for transforming velocity components in coordinate frames. [#6169]\n\n- ``EarthLocation.to_geodetic()`` (and ``EarthLocation.geodetic``) now return\n  namedtuples instead of regular tuples. [#6237]\n\n- ``EarthLocation`` now has ``lat`` and ``lon`` properties (equivalent to, but\n  preferred over, the previous ``latitude`` and ``longitude``). [#6237]\n\n- Added a ``radial_velocity_correction`` method to ``SkyCoord`` to do compute\n  barycentric and heliocentric velocity corrections. [#5752]\n\n- Added a new ``AffineTransform`` class for coordinate frame transformations.\n  This class supports matrix operations with vector offsets in position or\n  any differential quantities (so far, only velocity is supported). The\n  matrix transform classes now subclass from the base affine transform.\n  [#6218]\n\n- Frame objects now have experimental support for velocity components. Most\n  frames default to accepting proper motion components and radial velocity,\n  and the velocities transform correctly for any transformation that uses\n  one of the ``AffineTransform``-type transformations.  For other\n  transformations a finite-difference velocity transformation is available,\n  although it is not as numerically stable as those that use\n  ``AffineTransform``-type transformations. [#6219, #6226]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Allow to specify encoding in ``ascii.read``, only for Python 3 and with the\n  pure-Python readers. [#5448]\n\n- Writing latex tables with only a ``tabular`` environment is now possible by\n  setting ``latexdict['tabletyle']`` to ``None``. [#6205]\n\n- Allow ECSV format to support reading and writing mixin columns like\n  ``Time``, ``SkyCoord``, ``Latitude``, and ``EarthLocation``. [#6181]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Checking available disk space before writing out file. [#5550, #4065]\n\n- Change behavior to warn about units that are not FITS-compliant when\n  writing a FITS file but not when reading. [#5675]\n\n- Added absolute tolerance parameter when comparing FITS files. [#4729]\n\n- New convenience function ``printdiff`` to print out diff reports. [#5759]\n\n- Allow to instantiate a ``BinTableHDU`` directly from a ``Table`` object.\n  [#6139]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- YAML representer now also accepts numpy types. [#6077]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- New functions to unregister readers, writers, and identifiers. [#6217]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added ``SmoothlyBrokenPowerLaw1D`` model. [#5656]\n\n- Add ``n_submodels`` shared method to single and compound models, which\n  allows users to get the number of components of a given single (compound)\n  model. [#5747]\n\n- Added a ``name`` setter for instances of ``_CompoundModel``. [#5741]\n\n- Added FWHM properties to Gaussian and Moffat models. [#6027]\n\n- Added support for evaluating models and setting the results for inputs\n  outside the bounding_box to a user specified ``fill_value``. This\n  is controlled by a new optional boolean keyword ``with_bounding_box``. [#6081]\n\n- Added infrastructure support for units on parameters and during\n  model evaluation and fitting, added support for units on all\n  functional, power-law, polynomial, and rotation models where this\n  is appropriate. A new BlackBody1D model has been added.\n  [#4855, #6183, #6204, #6235]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Added an image class, ``CCDData``. [#6173]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added ``biweight_midcovariance`` function. [#5777]\n\n- Added ``biweight_scale`` and ``biweight_midcorrelation``\n  functions. [#5991]\n\n- ``median_absolute_deviation`` and ``mad_std`` have ``ignore_nan`` option\n  that will use ``np.ma.median`` with nans masked out or ``np.nanmedian``\n  instead of ``np.median`` when computing the median. [#5232]\n\n- Implemented statistical estimators for Ripley's K Function. [#5712]\n\n- Added ``SigmaClip`` class. [#6206]\n\n- Added ``std_ddof`` keyword option to ``sigma_clipped_stats``.\n  [#6066, #6207]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Issue a warning when assigning a string value to a column and\n  the string gets truncated.  This can occur because numpy string\n  arrays are fixed-width and silently drop characters which do not\n  fit within the fixed width. [#5624, #5819]\n\n- Added functionality to allow ``astropy.units.Quantity`` to be written\n  as a normal column to FITS files. [#5910]\n\n- Add support for Quantity columns (within a ``QTable``) in table\n  ``join()``, ``hstack()`` and ``vstack()`` operations. [#5841]\n\n- Allow unicode strings to be stored in a Table bytestring column in\n  Python 3 using UTF-8 encoding.  Allow comparison and assignment of\n  Python 3 ``str`` object in a bytestring column (numpy ``'S'`` dtype).\n  If comparison with ``str`` instead of ``bytes`` is a problem\n  (and ``bytes`` is really more logical), please open an issue on GitHub.\n  [#5700]\n\n- Added functionality to allow ``astropy.units.Quantity`` to be read\n  from and written to a VOtable file. [#6132]\n\n- Added support for reading and writing a table with mixin columns like\n  ``Time``, ``SkyCoord``, ``Latitude``, and ``EarthLocation`` via the\n  ASCII ECSV format. [#6181]\n\n- Bug fix for ``MaskedColumn`` insert method, where ``fill_value`` attribute\n  was not being passed along to the copy of the ``MaskedColumn`` that was\n  returned. [#7585]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- ``enable_deprecations_as_exceptions`` function now accepts additional\n  user-defined module imports and warning messages to ignore. [#6223, #6334]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The ``astropy.units.quantity_input`` decorator will now convert the output to\n  the unit specified as a return annotation under Python 3. [#5606]\n\n- Passing a logarithmic unit to the ``Quantity`` constructor now returns the\n  appropriate logarithmic quantity class if ``subok=True``. For instance,\n  ``Quantity(1, u.dex(u.m), subok=True)`` yields ``<Dex 1.0 dex(m)>``. [#5928]\n\n- The ``quantity_input`` decorator now accepts a string physical type in\n  addition to of a unit object to specify the expected input ``Quantity``'s\n  physical type. For example, ``@u.quantity_input(x='angle')`` is now\n  functionally the same as ``@u.quantity_input(x=u.degree)``. [#3847]\n\n- The ``quantity_input`` decorator now also supports unit checking for\n  optional keyword arguments and accepts iterables of units or physical types\n  for specifying multiple valid equivalent inputs. For example,\n  ``@u.quantity_input(x=['angle', 'angular speed'])`` or\n  ``@u.quantity_input(x=[u.radian, u.radian/u.yr])`` would both allow either\n  a ``Quantity`` angle or angular speed passed in to the argument ``x``.\n  [#5653]\n\n- Added a new equivalence ``molar_mass_amu`` between g/mol to\n  atomic mass units. [#6040, #6113]\n\n- ``Quantity`` has gained a new ``to_value`` method which returns the value\n  of the quantity in a given unit. [#6127]\n\n- ``Quantity`` now supports the ``@`` operator for matrix multiplication that\n  was introduced in Python 3.5, for all supported versions of numpy. [#6144]\n\n- ``Quantity`` supports the new ``__array_ufunc__`` protocol introduced in\n  numpy 1.13.  As a result, operations that involve unit conversion will be\n  sped up considerably (by up to a factor of two for costly operations such\n  as trigonometric ones). [#2583]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added a new ``dataurl_mirror`` configuration item in ``astropy.utils.data``\n  that is used to indicate a mirror for the astropy data server. [#5547]\n\n- Added a new convenience method ``get_cached_urls`` to ``astropy.utils.data``\n  for getting a list of the URLs in your cache. [#6242]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Upgraded the included wcslib to version 5.16. [#6225]\n\n  The minimum required version of wcslib in is 5.14.\n\n\nAPI Changes\n-----------\n\nastropy.analytic_functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- This entire sub-package is deprecated because blackbody has been moved to\n  ``astropy.modeling.blackbody``. [#6191]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Major change in convolution behavior and keyword arguments.\n  ``astropy.convolution.convolve_fft`` replaced ``interpolate_nan`` with\n  ``nan_treatment``, and ``astropy.convolution.convolve`` received a new\n  ``nan_treatment`` argument. ``astropy.convolution.convolve`` also no longer\n  double-interpolates interpolates over NaNs, although that is now available\n  as a separate ``astropy.convolution.interpolate_replace_nans`` function. See\n  `the backwards compatibility note\n  <https://docs.astropy.org/en/v2.0.16/convolution/index.html#a-note-on-backward-compatibility-pre-v2-0>`_\n  for more on how to get the old behavior (and why you probably don't want to.)\n  [#5782]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``astropy.coordinates.Galactic`` frame previously was had the cartesian\n  ordering 'w', 'u', 'v' (for 'x', 'y', and 'z', respectively).  This was an\n  error and against the common convention.  The 'x', 'y', and 'z' axes now\n  map to 'u', 'v', and 'w', following the right-handed ('u' points to\n  the Galactic center) convention. [#6330]\n\n- Removed deprecated ``angles.rotation_matrix`` and\n  ``angles.angle_axis``. Use the routines in\n  ``coordinates.matrix_utilities`` instead. [#6170]\n\n- ``EarthLocation.latitude`` and ``EarthLocation.longitude`` are now\n  deprecated in favor of ``EarthLocation.lat`` and ``EarthLocation.lon``.\n  They former will be removed in a future version. [#6237]\n\n- The ``FrameAttribute`` class and subclasses have been renamed to just contain\n  ``Attribute``. For example, ``QuantityFrameAttribute`` is now\n  ``QuantityAttribute``. [#6300]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Cosmological models do not include any contribution from neutrinos or photons\n  by default -- that is, the default value of Tcmb0 is 0.  This does not affect\n  built in models (such as WMAP or Planck). [#6112]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Remove deprecated ``NumCode`` and ``ImgCode`` properties on FITS\n  ``_ImageBaseHDU``.  Use module-level constants ``BITPIX2DTYPE`` and\n  ``DTYPE2BITPIX`` instead. [#4993]\n\n- ``comments`` meta key (which is ``io.ascii``'s table convention) is output\n  to ``COMMENT`` instead of ``COMMENTS`` header. Similarly, ``COMMENT``\n  headers are read into ``comments`` meta [#6097]\n\n- Remove compatibility code which forced loading all HDUs on close. The old\n  behavior can be used with ``lazy_load_hdus=False``. Because of this change,\n  trying to access the ``.data`` attribute from an HDU which is not loaded\n  now raises a ``IndexError`` instead of a ``ValueError``. [#6082]\n\n- Deprecated ``clobber`` keyword; use ``overwrite``. [#6203]\n\n- Add EXTVER column to the output of ``HDUList.info()``. [#6124]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Removed deprecated ``Redshift`` model; Use ``RedshiftScaleFactor``. [#6053]\n\n- Removed deprecated ``Pix2Sky_AZP.check_mu`` and ``Pix2Sky_SZP.check_mu``\n  methods. [#6170]\n\n- Deprecated ``GaussianAbsorption1D`` model, as it can be better represented\n  by subtracting ``Gaussian1D`` from ``Const1D``. [#6200]\n\n- Added method ``sum_of_implicit_terms`` to ``Model``, needed when performing\n  a linear fit to a model that has built-in terms with no corresponding\n  parameters (primarily the ``1*x`` term of ``Shift``). [#6174]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Removed deprecated usage of parameter ``propagate_uncertainties`` as a\n  positional keyword. [#6170]\n\n- Removed deprecated ``support_correlated`` attribute. [#6170]\n\n- Removed deprecated ``propagate_add``, ``propagate_subtract``,\n  ``propagate_multiply`` and ``propagate_divide`` methods. [#6170]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Removed the deprecated ``sig`` and ``varfunc`` keywords in the\n  ``sigma_clip`` function. [#5715]\n\n- Added ``modify_sample_size`` keyword to ``biweight_midvariance``\n  function. [#5991]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- In Python 3, when getting an item from a bytestring Column it is now\n  converted to ``str``.  This means comparing a single item to a ``bytes``\n  object will always fail, and instead one must compare with a ``str``\n  object. [#5700]\n\n- Removed the deprecated ``data`` property of Row. [#5729]\n\n- Removed the deprecated functions ``join``, ``hstack``, ``vstack`` and\n  ``get_groups`` from np_utils. [#5729]\n\n- Added ``name`` parameter to method ``astropy.table.Table.add_column`` and\n  ``names`` parameter to method ``astropy.table.Table.add_columns``, to\n  provide the flexibility to add unnamed columns, mixin objects and also to\n  specify explicit names. Default names will be used if not\n  specified. [#5996]\n\n- Added optional ``axis`` parameter to ``insert`` method for ``Column`` and\n  ``MaskedColumn`` classes. [#6092]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Moved ``units.cgs.emu`` to ``units.deprecated.emu`` due to ambiguous\n  definition of \"emu\". [#4918, #5906]\n\n- ``jupiterMass``, ``earthMass``, ``jupiterRad``, and ``earthRad`` no longer\n  have their prefixed units included in the standard units.  If needed, they\n  can still  be found in ``units.deprecated``. [#5661]\n\n- ``solLum``,``solMass``, and ``solRad`` no longer have  their prefixed units\n  included in the standard units.  If needed, they can still be found in\n  ``units.required_by_vounit``, and are enabled by default. [#5661]\n\n- Removed deprecated ``Unit.get_converter``. [#6170]\n\n- Internally, astropy replaced use of ``.to(unit).value`` with the new\n  ``to_value(unit)`` method, since this is somewhat faster. Any subclasses\n  that overwrote ``.to``, should also overwrite ``.to_value`` (or\n  possibly just the private ``._to_value`` method.  (If you did this,\n  please let us know what was lacking that made this necessary!). [#6137]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Removed the deprecated compatibility modules for Python 2.6 (``argparse``,\n  ``fractions``, ``gzip``, ``odict``, ``subprocess``) [#5975,#6157,#6164]\n\n- Removed the deprecated ``zest.releaser`` machinery. [#6282]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Removed the deprecated ``scale_image`` function. [#6170]\n\nastropy.vo\n^^^^^^^^^^\n\n- Cone Search now issues deprecation warning because it is moved to\n  Astroquery 0.3.5 and will be removed from Astropy in a future version.\n  [#5558, #5904]\n\n- The ``astropy.vo.samp`` package has been moved to ``astropy.samp``, and no\n  longer supports HTTPS/SSL. [#6201, #6213]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Removed deprecated ``wcs.rotateCD``. [#6170]\n\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Major change in convolution behavior and keyword arguments:\n  ``astropy.convolution.convolve`` was not performing normalized convolution\n  in earlier versions of astropy. [#5782]\n\n- Direct convolution previously implemented the wrong definition of\n  convolution.  This error only affects *asymmetric* kernels. [#6267]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- The ``astropy.coordinates.Galactic`` frame had an incorrect ordering for the\n  'u', 'v', and 'w' cartesian coordinates. [#6330]\n\n- The ``astropy.coordinates.search_around_sky``,\n  ``astropy.coordinates.search_around_3d``, and ``SkyCoord`` equivalent methods\n  now correctly yield an ``astropy.coordinates.Angle`` as the third return type\n  even if there are no matches (previously it returned a raw Quantity). [#6347]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix an issue where the fast C-reader was dropping table comments for a\n  table with no data lines. [#8274]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``comments`` meta key (which is ``io.ascii``'s table convention) is output\n  to ``COMMENT`` instead of ``COMMENTS`` header. Similarly, ``COMMENT``\n  headers are read into ``comments`` meta [#6097]\n\n- Use more sensible fix values for invalid NAXISj header values. [#5935]\n\n- Close file on error to avoid creating a ``ResourceWarning`` warning\n  about an unclosed file. [#6168, #6177]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Creating a compound model where one of the submodels is\n  a compound model whose parameters were changed now uses the\n  updated parameters and not the parameters of the original model. [#5741]\n\n- Allow ``Mapping`` and ``Identity`` to be fittable. [#6018]\n\n- Gaussian models now impose positive ``stddev`` in fitting. [#6019]\n\n- OrthoPolynomialBase (Chebyshev2D / Legendre2D) models were being evaluated\n  incorrectly when part of a compound model (using the parameters from the\n  original model), which in turn caused fitting to fail as a no-op. [#6085]\n\n- Allow ``Ring2D`` to be defined using ``r_out``. [#6192]\n\n- Make ``LinearLSQFitter`` produce correct results with fixed model\n  parameters and allow ``Shift`` and ``Scale`` to be fitted with\n  ``LinearLSQFitter`` and ``LevMarLSQFitter``. [#6174]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Allow to choose which median function is used in ``mad_std`` and\n  ``median_absolute_deviation``. And allow to use these functions with\n  a multi-dimensional ``axis``. [#5835]\n\n- Fixed ``biweight_midvariance`` so that by default it returns a\n  variance that agrees with the standard definition. [#5991]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a problem with vstack for bytes columns in Python 3. [#5628]\n\n- Fix QTable add/insert row for multidimensional Quantity. [#6092]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fixed the initial condition of ``TimeFITS`` to allow scale, FITS scale\n  and FITS realization to be checked and equated properly. [#6202]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug that caused the default WCS to return coordinates offset by\n  one. [#6339]\n\nastropy.vo\n^^^^^^^^^^\n\n- Fixed a bug in vo.samp when stopping a hub for which a lockfile was\n  not created. [#6211]\n\n\nOther Changes and Additions\n---------------------------\n\n- Numpy 1.7 and 1.8 are no longer supported. [#6006]\n\n- Python 3.3 is no longer supported. [#6020]\n\n- The bundled ERFA was updated to version 1.4.0. [#6239]\n\n- The bundled version of pytest has now been removed, but the\n  astropy.tests.helper.pytest import will continue to work properly.\n  Affiliated packages should nevertheless transition to importing pytest\n  directly rather than from astropy.tests.helper. This also means that\n  pytest is now a formal requirement for testing for both Astropy and\n  for affiliated packages. [#5694]\n\n\nVersion 1.3.3 (2017-05-29)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where ``StaticMatrixTransform`` erroneously copied frame\n  attributes from the input coordinate to the output frame. In practice, this\n  didn't actually affect any transforms in Astropy but may change behavior for\n  users who explicitly used the ``StaticMatrixTransform`` in their own code.\n  [#6045]\n\n- Fixed ``get_icrs_coordinates`` to loop through all the urls in case one\n  raises an exception. [#5864]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix table header not written out properly when ``fits.writeto()``\n  convenience function is used. [#6042]\n\n- Fix writing out read-only arrays. [#6036]\n\n- Extension headers are written out properly when the ``fits.update()``\n  convenience function is used. [#6058]\n\n- Angstrom, erg, G, and barn are no more reported as deprecated FITS units.\n  [#5929]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix problem with Table pprint/pformat raising an exception for\n  non-UTF-8 compliant bytestring data. [#6117]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Allow strings 'nan' and 'inf' as Quantity inputs. [#5958]\n\n- Add support for ``positive`` and ``divmod`` ufuncs (new in numpy 1.13).\n  [#5998, #6020, #6116]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- On systems that do not have ``pkg_resources`` non-numerical additions to\n  version numbers like ``dev`` or ``rc1`` are stripped in ``minversion`` to\n  avoid a ``TypeError`` in ``distutils.version.LooseVersion`` [#5944]\n\n- Fix ``auto_download`` setting ignored in ``Time.ut1``. [#6033]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fix bug in ManualInterval which caused the limits to be returned incorrectly\n  if set to zero, and fix defaults for ManualInterval in the presence of NaNs.\n  [#6088]\n\n- Get rid of warnings that occurred when slicing a cube due to the tick\n  locator trying to find ticks for the sliced axis. [#6104]\n\n- Accept normal Matplotlib keyword arguments in set_xlabel and set_ylabel\n  functions. [#5686, #5692, #6060]\n\n- Fix a bug that caused labels to be missing from frames with labels that\n  could change direction mid-axis, such as EllipticalFrame. Also ensure\n  that empty tick labels do not cause any warnings. [#6063]\n\n\nVersion 1.3.2 (2017-03-30)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ensure that checking equivalence of ``SkyCoord`` objects works with\n  non-scalar attributes [#5884, #5887]\n\n- Ensure that transformation to frames with multi-dimensional attributes\n  works as expected [#5890, #5897]\n\n- Make sure all ``BaseRepresentation`` objects can be output as strings.\n  [#5889, #5897]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Add support for ``heaviside`` ufunc (new in numpy 1.13). [#5920]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fix to allow the C-based _fast_iterparse() VOTable XML parser to\n  relloc() its buffers instead of overflowing them. [#5824, #5869]\n\n\nOther Changes and Additions\n---------------------------\n\n- File permissions are revised in the released source distribution. [#5912]\n\n\nVersion 1.3.1 (2017-03-18)\n==========================\n\nNew Features\n------------\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``deprecated_renamed_argument`` decorator got a new ``pending``\n  parameter to suppress the deprecation warnings. [#5761]\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Changed ``SkyCoord`` so that frame attributes which are not valid for the\n  current ``frame`` (but are valid for other frames) are stored on the\n  ``SkyCoord`` instance instead of the underlying ``frame`` instance (e.g.,\n  setting ``relative_humidity`` on an ICRS ``SkyCoord`` instance.) [#5750]\n\n- Ensured that ``position_angle`` and ``separation`` give correct answers for\n  frames with different equinox (see #5722). [#5762]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix problem with padding bytes written for BinTable columns converted\n  from unicode [#5280, #5287, #5288, #5296].\n\n- Fix out-of-order TUNITn cards when writing tables to FITS. [#5720]\n\n- Recognize PrimaryHDU when non boolean values are present for the\n  'GROUPS' header keyword. [#5808]\n\n- Fix the insertion of new keywords in compressed image headers\n  (``CompImageHeader``). [#5866]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed a problem with setting ``bounding_box`` on 1D models. [#5718]\n\n- Fixed a broadcasting problem with weighted fitting of 2D models\n  with ``LevMarLSQFitter``. [#5788]\n\n- Fixed a problem with passing kwargs to fitters, specifically ``verblevel``. [#5815]\n\n- Changed FittingWithOutlierRemoval to reject on the residual to the fit [#5831]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fix the psd normalization for Lomb-Scargle periodograms in the presence\n  of noise. [#5713]\n\n- Fix bug in the autofrequency range when ``minimum_frequency`` is specified\n  but ``maximum_frequency`` is not. [#5738]\n\n- Ensure that a masked array is returned when sigma clipping fully masked\n  data. [#5711]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix problem where key for caching column format function was not\n  sufficiently unique. [#5803]\n\n- Handle sorting NaNs and masked values in jsviewer. [#4052, #5572]\n\n- Ensure mixin columns can be added to a table using a scalar value for the\n  right-hand side if the type supports broadcasting. E.g., for an existing\n  ``QTable``, ``t['q'] = 3*u.m`` will now add a column as expected. [#5820]\n\n- Fixes the bug of setting/getting values from rows/columns of a table using\n  numpy array scalars. [#5772]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed problem where IrreducibleUnits could fail to unpickle. [#5868]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Avoid importing ``ipython`` in ``utils.console`` until it is necessary, to\n  prevent deprecation warnings when importing, e.g., ``Column``. [#5755]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Avoid importing matplotlib.pyplot when importing\n  astropy.visualization.wcsaxes. [#5680, #5684]\n\n- Ignore Numpy warnings that happen in coordinate transforms in WCSAxes.\n  [#5792]\n\n- Fix compatibility issues between WCSAxes and Matplotlib 2.x. [#5786]\n\n- Fix a bug that caused WCSAxes frame visual properties to not be copied\n  over when resetting the WCS. [#5791]\n\nastropy.extern\n^^^^^^^^^^^^^^\n\n- Fixed a bug where PLY was overwriting its generated files. [#5728]\n\nOther Changes and Additions\n---------------------------\n\n- Fixed a deprecation warning that occurred when running tests with\n  astropy.test(). [#5689]\n\n- The deprecation of the ``clobber`` argument (originally deprecated in 1.3.0)\n  in the ``io.fits`` write functions was changed to a \"pending\" deprecation\n  (without displaying warnings) for now. [#5761]\n\n- Updated bundled astropy-helpers to v1.3.1. [#5880]\n\n\nVersion 1.3 (2016-12-22)\n========================\n\nNew Features\n------------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- The ``convolve`` and ``convolve_fft`` arguments now support a ``mask`` keyword,\n  which allows them to also support ``NDData`` objects as inputs. [#5554]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Added an ``of_address`` classmethod to ``EarthLocation`` to enable fast creation of\n  ``EarthLocation`` objects given an address by querying the Google maps API [#5154].\n\n- A new routine, ``get_body_barycentric_posvel`` has been added that allows\n  one to calculate positions as well as velocities for solar system bodies.\n  For JPL kernels, this roughly doubles the execution time, so if one requires\n  only the positions, one should use ``get_body_barycentric``. [#5231]\n\n- Transformations between coordinate systems can use the more accurate JPL\n  ephemerides. [#5273, #5436]\n\n- Arithmetic on representations, such as addition of two representations,\n  multiplication with a ``Quantity``, or calculating the norm via ``abs``,\n  has now become possible. Furthermore, there are new methods ``mean``,\n  ``sum``, ``dot``, and ``cross``. For all these, the representations are\n  treated as vectors in cartesian space (temporarily converting to\n  ``CartesianRepresentation`` if necessary).  [#5301]\n  has now become possible. Furthermore, there are news methods ``mean``,\n  ``sum``, ``dot``, and ``cross`` with obvious meaning. [#5301]\n  multiplication with a ``Quantity`` has now become possible. Furthermore,\n  there are new methods ``norm``, ``mean``, ``sum``, ``dot``, and ``cross``.\n  In all operations, the representations are treated as vectors. They are\n  temporarily converted to ``CartesianRepresentation`` if necessary.  [#5301]\n\n- ``CartesianRepresentation`` can be initialized with plain arrays by passing\n  in a ``unit``. Furthermore, for input with a vector array, the coordinates\n  no longer have to be in the first dimension, but can be at any ``xyz_axis``.\n  To complement the latter, a new ``get_xyz(xyz_axis)`` method allows one to\n  get a vector array out along a given axis. [#5439]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Files with \"Fortran-style\" columns (i.e. double-precision scientific notation\n  with a character other than \"e\", like ``1.495978707D+13``) can now be parsed by\n  the fast reader natively. [#5552]\n\n- Allow round-tripping masked data tables in most formats by using an\n  empty string ``''`` as the default representation of masked values\n  when writing. [#5347]\n\n- Allow reading HTML tables with unicode column values in Python 2.7. [#5410]\n\n- Check for self-consistency of ECSV header column names. [#5463]\n\n- Produce warnings when writing an IPAC table from an astropy table that\n  contains metadata not supported by the IPAC format. [#4700]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- \"Lazy\" loading of HDUs now occurs - when an HDU is requested, the file is\n  only read up to the point where that HDU is found.  This can mean a\n  substantial speedup when accessing files that have many HDUs. [#5065]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Added ``io.misc.yaml`` module to support serializing core astropy objects\n  using the YAML protocol. [#5486]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Added ``delay_doc_updates`` contextmanager to postpone the formatting of\n  the documentation for the ``read`` and ``write`` methods of the class to\n  optionally reduce the import time. [#5275]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added a class to combine astropy fitters and functions to remove outliers\n  e. g., sigma clip. [#4760]\n\n- Added a ``Tabular`` model. [#5105]\n\n- Added ``Hermite1D`` and ``Hermite2D`` polynomial models [#5242]\n\n- Added the injection of EntryPoints into astropy.modeling.fitting if\n  they inherit from Fitters class. [#5241]\n\n- Added bounding box to ``Lorentz1D`` and ``MexicanHat1D`` models. [#5393]\n\n- Added ``Planar2D`` functional model. [#5456]\n\n- Updated ``Gaussian2D`` to accept no arguments (will use default x/y_stddev\n  and theta). [#5537]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Added ``keep`` and ``**kwargs`` parameter to ``support_nddata``. [#5477]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added ``axis`` keyword to ``biweight_location`` and\n  ``biweight_midvariance``. [#5127, #5158]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Allow renaming mixin columns. [#5469]\n\n- Support generalized value formatting for mixin columns in tables. [#5274]\n\n- Support persistence of table indices when pickling and copying table. [#5468]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Install both runtime and test dependencies when running the\n  ./setup.py test command. These dependencies are specified by the\n  install_requires and tests_require keywords via setuptools. [#5092]\n\n- Enable easier subclassing of the TestRunner class. [#5505]\n\nastropy.time\n^^^^^^^^^^^^\n\n- ``light_travel_time`` can now use more accurate JPL ephemerides. [#5273, #5436]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added ``pixel_scale`` and ``plate_scale`` equivalencies. [#4987]\n\n- The ``spectral_density`` equivalency now supports transformations of\n  luminosity density. [#5151]\n\n- ``Quantity`` now accepts strings consisting of a number and unit such\n  as '10 km/s'. [#5245]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added a new decorator: ``deprecated_renamed_argument``. This can be used to\n  rename a function argument, while it still allows for the use of the older\n  argument name. [#5214]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added a ``make_lupton_rgb`` function to generate color images from three\n  greyscale images, following the algorithm of Lupton et al. (2004). [#5535]\n\n- Added ``data`` and ``interval`` inputs to the ``ImageNormalize``\n  class. [#5206]\n\n- Added a new ``simple_norm`` convenience function. [#5206]\n\n- Added a default stretch for the ``Normalization`` class. [#5206].\n\n- Added a default ``vmin/vmax`` for the ``ManualInterval`` class.\n  [#5206].\n\n- The ``wcsaxes`` subpackage has now been integrated in astropy as\n  ``astropy.visualization.wcsaxes``.  This allows plotting of astronomical\n  data/coordinate systems in Matplotlib. [#5496]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Improved ``footprint_to_file``: allow to specify the coordinate system, and\n  use by default the one from ``RADESYS``. Overwrite the file instead of\n  appending to it. [#5494]\n\n\nAPI Changes\n-----------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- ``discretize_model`` now raises an exception if non-integer ranges are used.\n  Previously it had incorrect behavior but did not raise an exception. [#5538]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``SkyCoord``, ``ICRS``, and other coordinate objects, as well as the\n  underlying representations such as ``SphericalRepresentation`` and\n  ``CartesianRepresentation`` can now be reshaped using methods named like the\n  numpy ones for ``ndarray`` (``reshape``, ``swapaxes``, etc.)\n  [#4123, #5254, #5482]\n\n- The ``obsgeoloc`` and ``obsgeovel`` attributes of ``GCRS`` and\n  ``PrecessedGeocentric`` frames are now stored and returned as\n  ``CartesianRepresentation`` objects, rather than ``Quantity`` objects.\n  Similarly, ``EarthLocation.get_gcrs_posvel`` now returns a tuple of\n  ``CartesianRepresentation`` objects. [#5253]\n\n- ``search_around_3d`` and ``search_around_sky`` now return units\n  for the distance matching their input argument when no match is\n  found, instead of ``dimensionless_unscaled``. [#5528]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- ASCII writers now accept an 'overwrite' argument.\n  The default behavior is changed so that a warning will be\n  issued when overwriting an existing file unless ``overwrite=True``.\n  In a future version this will be changed from a warning to an\n  exception to prevent accidentally overwriting a file. [#5007]\n\n- The default representation of masked values when writing tables was\n  changed from ``'--'`` to the empty string ``''``.  Previously any\n  user-supplied ``fill_values`` parameter would overwrite the class\n  default, but now the values are prepended to the class default. [#5347]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- The old ``Header`` interface, deprecated since Astropy 0.1 (PyFITS 3.1), has\n  been removed entirely. See :ref:`header-transition-guide` for explanations\n  on this change and help on the transition. [#5310]\n\n- The following functions, classes and methods have been removed:\n  ``CardList``, ``Card.key``, ``Card.cardimage``, ``Card.ascardimage``,\n  ``create_card``, ``create_card_from_string``, ``upper_key``,\n  ``Header.ascard``, ``Header.rename_key``, ``Header.get_history``,\n  ``Header.get_comment``, ``Header.toTxtFile``, ``Header.fromTxtFile``,\n  ``new_table``, ``tdump``, ``tcreate``, ``BinTableHDU.tdump``,\n  ``BinTableHDU.tcreate``.\n\n- Removed ``txtfile`` argument to the ``Header`` constructor.\n\n- Removed usage of ``Header.update`` with ``Header.update(keyword, value,\n  comment)`` arguments.\n\n- Removed ``startColumn`` and ``endColumn`` arguments to the ``FITS_record``\n  constructor.\n\n- The ``clobber`` argument in FITS writers has been renamed to\n  ``overwrite``. This change affects the following functions and\n  methods: ``tabledump``, ``writeto``, ``Header.tofile``,\n  ``Header.totextfile``, ``_BaseDiff.report``,\n  ``_BaseHDU.overwrite``, ``BinTableHDU.dump`` and\n  ``HDUList.writeto``. [#5171]\n\n- Added an optional ``copy`` parameter to ``fits.Header`` which controls if\n  a copy is made when creating an ``Header`` from another ``Header``.\n  [#5005, #5326]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- ``.fts`` and ``.fts.gz`` files will be automatically identified as\n  ``io.fits`` files if no explicit ``format`` is given. [#5211]\n\n- Added an optional ``readwrite`` parameter for ``get_formats`` to filter\n  formats for read or write. [#5275]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- ``Gaussian2D`` now raises an error if ``theta`` is set at the same time as\n  ``cov_matrix`` (previously ``theta`` was silently ignored). [#5537]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Setting an existing table column (e.g. ``t['a'] = [1, 2, 3]``) now defaults\n  to *replacing* the column with a column corresponding to the new value\n  (using ``t.replace_column()``) instead of doing an in-place update.  Any\n  existing meta-data in the column (e.g. the unit) is discarded.  An\n  in-place update is still done when the new value is not a valid column,\n  e.g. ``t['a'] = 0``.  To force an in-place update use the pattern\n  ``t['a'][:] = [1, 2, 3]``. [#5556]\n\n- Allow ``collections.Mapping``-like ``data`` attribute when initializing a\n  ``Table`` object (``dict``-like was already possible). [#5213]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- The inputs to the ``TestRunner.run_tests()`` method now must be\n  keyword arguments (no positional arguments).  This applies to the\n  ``astropy.test()`` function as well. [#5505]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Renamed ``ignored`` context manager in ``compat.misc`` to ``suppress``\n  to be consistent with https://bugs.python.org/issue19266 . [#5003]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Deprecated the ``scale_image`` function. [#5206]\n\n- The ``mpl_normalize`` module (containing the ``ImageNormalize``\n  class) is now automatically imported with the ``visualization``\n  subpackage. [#5491]\n\nastropy.vo\n^^^^^^^^^^\n\n- The ``clobber`` argument in ``VOSDatabase.to_json()`` has been\n  renamed to ``overwrite``. [#5171]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- ``wcs.rotateCD()`` was deprecated without a replacement. [#5240]\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Transformations between CIRS and AltAz now correctly account for the\n  location of the observer. [#5591]\n\n- GCRS frames representing a location on Earth with multiple obstimes are now\n  allowed. This means that the solar system routines ``get_body``,\n  ``get_moon`` and ``get_sun`` now work with non-scalar times and a\n  non-geocentric observer. [#5253]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix issue with units or other astropy core classes stored in table meta.\n  [#5605]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Copying a ``fits.Header`` using ``copy`` or ``deepcopy`` from the ``copy``\n  module will use ``Header.copy`` to ensure that modifying the copy will\n  not alter the other original Header and vice-versa. [#4990, #5323]\n\n- ``HDUList.info()`` no longer raises ``AttributeError`` in presence of\n  ``BZERO``. [#5508]\n\n- Avoid exceptions with numpy 1.10 and up when using scaled integer data\n  where ``BZERO`` has float type but integer value. [#4639, #5527]\n\n- Converting a header card to a string now calls ``self.verify('fix+warn')``\n  instead of ``self.verify('fix')`` so headers with invalid keywords will\n  not raise a ``VerifyError`` on printing. [#887,#5054]\n\n- ``FITS_Record._convert_ascii`` now converts blank fields to 0 when a\n  non-blank null column value is set. [#5134, #5394]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- ``read`` now correctly raises an IOError if a file with an unknown\n  extension can't be found, instead of raising IORegistryError:\n  \"Format could not be identified.\" [#4779]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Ensure ``Time`` instances holding a single ``delta_ut1_utc`` can be copied,\n  flattened, etc. [#5225]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Operations involving ``Angle`` or ``Distance``, or any other\n  ``SpecificTypeQuantity`` instance, now also keep return an instance of the\n  same type if the instance was the second argument (if the resulting unit\n  is consistent with the specific type). [#5327]\n\n- Inplace operations on ``Angle`` and ``Distance`` instances now raise an\n  exception if the final unit is not equivalent to radian and meter, resp.\n  Similarly, views as ``Angle`` and ``Distance`` can now only be taken\n  from quantities with appropriate units, and views as ``Quantity`` can only\n  be taken from logarithmic quanties such as ``Magnitude`` if the physical\n  unit is dimensionless. [#5070]\n\n- Conversion from quantities to logarithmic units now correctly causes a\n  logarithmic quantity such as ``Magnitude`` to be returned. [#5183]\n\n\nastropy.wcs\n^^^^^^^^^^^\n\n- SIP distortion for an alternate WCS is correctly initialized now by\n  looking at the \"CTYPE\" values matching the alternate WCS. [#5443]\n\nOther Changes and Additions\n---------------------------\n\n- The bundled ERFA was updated to version 1.3.0.  This includes the\n  leap second planned for 2016 Dec 31.\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Initialization of ``Angle`` has been sped up for ``Quantity`` and ``Angle``\n  input. [#4970]\n\n- The use of ``np.matrix`` instances in the transformations has been\n  deprecated, since this class does not allow stacks of matrices.  As a\n  result, the semi-public functions ``angles.rotation_matrix`` and\n  ``angles.angle_axis`` are also deprecated, in favour of the new routines\n  with the same name in ``coordinates.matrix_utilities``. [#5104]\n\n- A new ``BaseCoordinateFrame.cache`` dictionary has been created to expose\n  the internal cache. This is useful when modifying representation data\n  in-place without using ``realize_frame``. Additionally, documentation for\n  in-place operations on coordinates were added. [#5575]\n\n- Coordinates and their representations are printed with a slightly different\n  format, following how numpy >= 1.12 prints structured arrays. [#5423]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- The default cosmological model has been changed to Planck 2015,\n  and the citation strings have been updated. [#5372]\n\nastropy.extern\n^^^^^^^^^^^^^^\n\n- Updated the bundled ``six`` module to version 1.10.0. [#5521]\n\n- Updated the astropy shipped version of ``PLY`` to version 3.9. [#5526]\n\n- Updated the astropy shipped version of jQuery to v3.3.1, and dataTables\n  to v1.10.12. [#5564]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Performance improvements for tables with many columns. [#4985]\n\n- Removed obsolete code that was previously needed to properly\n  implement the append mode. [#4793]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Reduced the time spent in the ``get_formats`` function. This also reduces\n  the time it takes to import astropy subpackages, i.e.\n  ``astropy.coordinates``. [#5262]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The functions ``add_enabled_units``, ``set_enabled_equivalencies`` and\n  ``add_enabled_equivalencies`` have been sped up by copying the current\n  ``_UnitRegistry`` instead of building it from scratch. [#5306]\n\n- To build the documentation, the ``build_sphinx`` command has been deprecated\n  in favor of ``build_docs``. [#5179]\n\n- The ``--remote-data`` option to ``python setup.py test`` can now take\n  different arguments: ``--remote-data=none`` is the same as not specifying\n  ``--remote-data`` (skip all tests that require the internet),\n  ``--remote-data=astropy`` skips all tests that need remote data except those\n  that require only data from data.astropy.org, and ``--remote-data=any`` is\n  the same as ``--remote-data`` (run all tests that use remote data). [#5506]\n\n- The pytest ``recwarn`` fixture has been removed from the tests in favor of\n  ``utils.catch_warnings``. [#5489]\n\n- Deprecated escape sequences in strings (Python 3.6) have been removed. [#5489]\n\n\nVersion 1.2.2 (2016-12-22)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix a bug where the ``fill_values`` parameter was ignored when writing a\n  table to HTML format. [#5379]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Handle unicode FITS BinTable column names on Python 2 [#5204, #4805]\n\n- Fix reading of float values from ASCII tables, that could be read as\n  float32 instead of float64 (with the E and F formats). These values are now\n  always read as float64. [#5362]\n\n- Fixed memoryleak when using the compression module. [#5399, #5464]\n\n- Able to insert and remove lower case HIERARCH keywords in a consistent\n  manner [#5313, #5321]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fixed broadcasting in ``sigma_clip`` when using negative ``axis``. [#4988]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Assigning a logarithmic unit to a ``QTable`` column that did not have a\n  unit yet now correctly turns it into the appropriate function quantity\n  subclass (such as ``Magnitude`` or ``Dex``). [#5345]\n\n- Fix default value for ``show_row_index`` in ``Table.show_in_browser``.\n  [#5562]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- For inverse trig functions that operate on quantities, catch any warnings\n  that occur from evaluating the function on the unscaled quantity value\n  between __array_prepare__ and __array_wrap__. [#5153]\n\n- Ensure ``!=`` also works for function units such as ``MagUnit`` [#5345]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fix use of the ``relax`` keyword in ``to_header`` when used to change the\n  output precision. [#5164]\n\n- ``wcs.to_header(relax=True)`` adds a \"-SIP\" suffix to ``CTYPE`` when SIP\n  distortion is present in the WCS object. [#5239]\n\n- Improved log messages in ``to_header``. [#5239]\n\nOther Changes and Additions\n---------------------------\n\n- The bundled ERFA was updated to version 1.3.0.  This includes the\n  leap second planned for 2016 Dec 31.\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- ``poisson_conf_interval`` with ``'kraft-burrows-nousek'`` interval is now\n  faster and usable with SciPy versions < 0.14. [#5064, #5290]\n\n\n\nVersion 1.2.1 (2016-06-22)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed a bug that caused TFIELDS to not be in the correct position in\n  compressed image HDU headers under certain circumstances, which created\n  invalid FITS files. [#5118, #5125]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed an  ``ImportError`` that occurred whenever ``astropy.constants`` was\n  imported before ``astropy.units``. [#5030, #5121]\n\n- Magnitude zero points used to define ``STmag``, ``ABmag``, ``M_bol`` and\n  ``m_bol`` are now collected in ``astropy.units.magnitude_zero_points``.\n  They are not enabled as regular units by default, but can be included\n  using ``astropy.units.magnitude_zero_points.enable()``. This makes it\n  possible to round-trip magnitudes as originally intended.  [#5030]\n\nVersion 1.2 (2016-06-19)\n========================\n\nGeneral\n-------\n\n- Astropy now requires Numpy 1.7.0 or later. [#4784]\n\nNew Features\n------------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Add ``L_bol0``, the luminosity corresponding to absolute bolometric\n  magnitude zero. [#4262]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``CartesianRepresentation`` now includes a transform() method that can take\n  a 3x3 matrix to transform coordinates. [#4860]\n\n- Solar system and lunar ephemerides accessible via ``get_body``,\n  ``get_body_barycentric`` and ``get_moon`` functions. [#4890]\n\n- Added astrometric frames (i.e., a frame centered on a particular\n  point/object specified in another frame). [#4909, #4941]\n\n- Added ``SkyCoord.spherical_offsets_to`` method. [#4338]\n\n- Recent Earth rotation (IERS) data are now auto-downloaded so that AltAz\n  transformations for future dates now use the most accurate available\n  rotation values. [#4436]\n\n- Add support for heliocentric coordinate frames. [#4314]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- ``angular_diameter_distance_z1z2`` now supports the computation of\n  the angular diameter distance between a scalar and an array like\n  argument. [#4593] The method now supports models with negative\n  Omega_k0 (positive curvature universes) [#4661] and allows z2 < z1.\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- File name could be passed as ``Path`` object. [#4606]\n\n- Check that columns in ``formats`` specifier exist in the output table\n  when writing. [#4508, #4511]\n\n- Allow trailing whitespace in the IPAC header lines. [#4758]\n\n- Updated to filter out the default parser warning of BeautifulSoup.\n  [#4551]\n\n- Added support for reading and writing reStructuredText simple tables.\n  [#4812]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- File name could be passed as ``Path`` object. [#4606]\n\n- Header allows a dictionary-like cards argument during creation. [#4663]\n\n- New function ``convenience.table_to_hdu`` to allow creating a FITS\n  HDU object directly from an astropy ``Table``. [#4778]\n\n- New optional arguments ``ignore_missing`` and ``remove_all`` are added\n  to ``astropy.io.fits.header.remove()``. [#5020]\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Added custom ``IORegistryError``. [#4833]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- File name could be passed as ``Path`` object. [#4606]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added the fittable=True attribute to the Scale and Shift models with tests. [#4718]\n\n- Added example plots to docstrings for some built-in models. [#4008]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``UnknownUncertainty`` new subclass of ``NDUncertainty`` that can be used to\n  save uncertainties that cannot be used for error propagation. [#4272]\n\n- ``NDArithmeticMixin``: ``add``, ``subtract``, ``multiply`` and ``divide``\n  can be used as classmethods but require that two operands are given. These\n  operands don't need to be NDData instances but they must be convertible to\n  NDData. This conversion is done internally. Using it on the instance does\n  not require (but also allows) two operands. [#4272, #4851]\n\n- ``NDDataRef`` new subclass that implements ``NDData`` together with all\n  currently available mixins. This class does not implement additional\n  attributes, methods or a numpy.ndarray-like interface like ``NDDataArray``.\n  attributes, methods or a numpy.ndarray-like interface like ``NDDataArray``.\n  [#4797]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added ``axis`` keyword for ``mad_std`` function. [#4688, #4689]\n\n- Added Bayesian and Akaike Information Criteria. [#4716]\n\n- Added Bayesian upper limits for Poisson count rates. [#4622]\n\n- Added ``circstats``; a module for computing circular statistics. [#3705, #4472]\n\n- Added ``jackknife`` resampling method. [#3708, #4439]\n\n- Updated ``bootstrap`` to allow bootstrapping statistics with multiple\n  outputs. [#3601]\n\n- Added ``LombScargle`` class to compute Lomb-Scargle periodograms [#4811]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table.show_in_notebook`` and ``Table.show_in_browser(jsviewer=True)`` now\n  yield tables with an \"idx\" column, allowing easy identification of the index\n  of a row even when the table is re-sorted in the browser. [#4404]\n\n- Added ``AttributeError`` when trying to set mask on non-masked table. [#4637]\n\n- Allow to use a tuple of keys in ``Table.sort``.  [#4671]\n\n- Added ``itercols``; a way to iterate through columns of a table. [#3805,\n  #4888]\n\n- ``Table.show_in_notebook`` and the default notebook display (i.e.,\n  ``Table._repr_html_``) now use consistent table styles which can be set\n  using the ``astropy.table.default_notebook_table_class`` configuration\n  item. [#4886]\n\n- Added interface to create ``Table`` directly from any table-like object\n  that has an ``__astropy_table__`` method.  [#4885]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Enable test runner to obtain documentation source files from directory\n  other than \"docs\". [#4748]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Added caching of scale and format transformations for improved performance.\n  [#4422]\n\n- Recent Earth rotation (IERS) data are now auto-downloaded so that UT1\n  transformations for future times now work out of the box. [#4436]\n\n- Add support for barycentric/heliocentric time corrections. [#4314]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The option to use tuples to indicate fractional powers of units,\n  deprecated in 0.3.1, has been removed. [#4449]\n\n- Added slug to imperial units. [#4670]\n\n- Added Earth radius (``R_earth``) and Jupiter radius (``R_jup``) to units.\n  [#4818]\n\n- Added a ``represents`` property to allow access to the definition of a\n  named unit (e.g., ``u.kpc.represents`` yields ``1000 pc``). [#4806]\n\n- Add bolometric absolute and apparent magnitudes, ``M_bol`` and ``m_bol``.\n  [#4262]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``Path`` object could be passed to ``get_readable_fileobj``. [#4606]\n\n- Implemented a generic and extensible way of merging metadata. [#4459]\n\n- Added ``format_doc`` decorator which allows to replace and/or format the\n  current docstring of an object. [#4242]\n\n- Added a new context manager ``set_locale`` to temporarily set the\n  current locale. [#4363]\n\n- Added new IERS_Auto class to auto-download recent IERS (Earth rotation)\n  data when required by coordinate or time transformations. [#4436]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Add zscale interval based on Numdisplay's implementation. [#4776]\n\nAPI changes\n-----------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- The deprecated ``ConfigurationItem`` and ``ConfigAlias`` classes and the\n  ``save_config``, ``get_config_items``, and ``generate_all_config_items``\n  functions have now been removed. [#2767, #4446]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Removed compatibility layer for pre-v0.4 API. [#4447]\n\n- Added ``copy`` keyword-only argument to allow initialization without\n  copying the (possibly large) input coordinate arrays. [#4883]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Improve documentation of z validity range of cosmology objects [#4882, #4949]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Add a way to control HTML escaping when writing a table as an HTML file. [#4423]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Two optional boolean arguments ``ignore_missing`` and ``remove_all`` are\n  added to ``Header.remove``. [#5020]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Renamed ``Redshift`` model to ``RedshiftScaleFactor``. [#3672]\n\n- Inputs (``coords`` and ``out``) to ``render`` function in ``Model`` are\n  converted to float. [#4697]\n\n- ``RotateNative2Celestial`` and ``RotateCelestial2Native`` are now\n  implemented as subclasses of ``EulerAngleRotation``. [#4881, #4940]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``NDDataBase`` does not set the private uncertainty property anymore. This\n  only affects you if you subclass ``NDDataBase`` directly. [#4270]\n\n- ``NDDataBase``: the ``uncertainty``-setter is removed. A similar one is\n  added in ``NDData`` so this also only affects you if you subclassed\n  ``NDDataBase`` directly. [#4270]\n\n- ``NDDataBase``: ``uncertainty``-getter returns ``None`` instead of the\n  private uncertainty and is now abstract. This getter is moved to\n  ``NDData`` so it only affects direct subclasses of ``NDDataBase``. [#4270]\n\n- ``NDData`` accepts a Quantity-like data and an explicitly given unit.\n  Before a ValueError was raised in this case. The final instance will use the\n  explicitly given unit-attribute but doesn't check if the units are\n  convertible and the data will not be scaled. [#4270]\n\n- ``NDData`` : the given mask, explicit or implicit if the data was masked,\n  will be saved by the setter. It will not be saved directly as the private\n  attribute. [#4879]\n\n- ``NDData`` accepts an additional argument ``copy`` which will copy every\n  parameter before it is saved as attribute of the instance. [#4270]\n\n- ``NDData``: added an ``uncertainty.getter`` that returns the private\n  attribute. It is equivalent to the old ``NDDataBase.uncertainty``-getter.\n  [#4270]\n\n- ``NDData``: added an ``uncertainty.setter``. It is slightly modified with\n  respect to the old ``NDDataBase.uncertainty``-setter. The changes include:\n\n- if the uncertainty has no uncertainty_type an info message is printed\n  instead of a TypeError and the uncertainty is saved as\n  ``UnknownUncertainty`` except the uncertainty is None. [#4270]\n\n- the requirement that the uncertainty_type of the uncertainty needs to be a\n  string was removed. [#4270]\n\n- if the uncertainty is a subclass of NDUncertainty the parent_nddata\n  attribute will be set so the uncertainty knows to which data it belongs.\n  This is also a Bugfix. [#4152, #4270]\n\n- ``NDData``: added a ``meta``-getter, which will set and return an empty\n  OrderedDict if no meta was previously set. [#4509, #4469]\n\n- ``NDData``: added an ``meta``-setter. It requires that the meta is\n  dictionary-like (it also accepts Headers or ordered dictionaries and others)\n  or None. [#4509, #4469, #4921]\n\n- ``NDArithmeticMixin``: The operand in arithmetic methods (``add``, ...)\n  doesn't need to be a subclass of ``NDData``. It is sufficient if it can be\n  converted to one. This conversion is done internally. [#4272]\n\n- ``NDArithmeticMixin``: The arithmetic methods allow several new arguments to\n  control how or if different attributes of the class will be processed during\n  the operation. [#4272]\n\n- ``NDArithmeticMixin``: Giving the parameter ``propagate_uncertainties`` as\n  positional keyword is deprecated and will be removed in the future. You now\n  need to specify it as keyword-parameter. Besides ``True`` and ``False`` also\n  ``None`` is now a valid value for this parameter. [#4272, #4851]\n\n- ``NDArithmeticMixin``: The wcs attribute of the operands is not compared and\n  thus raises no ValueError if they differ, except if a ``compare_wcs``\n  parameter is specified. [#4272]\n\n- ``NDArithmeticMixin``: The arithmetic operation was split from a general\n  ``_arithmetic`` method to different specialized private methods to allow\n  subclasses more control on how the attributes are processed without\n  overriding ``_arithmetic``. The ``_arithmetic`` method is now used to call\n  these other methods. [#4272]\n\n- ``NDSlicingMixin``: If the attempt at slicing the mask, wcs or uncertainty\n  fails with a ``TypeError`` a Warning is issued instead of the TypeError. [#4271]\n\n- ``NDUncertainty``: ``support_correlated`` attribute is deprecated in favor of\n  ``supports_correlated`` which is a property. Also affects\n  ``StdDevUncertainty``. [#4272]\n\n- ``NDUncertainty``: added the ``__init__`` that was previously implemented in\n  ``StdDevUncertainty`` and takes an additional ``unit`` parameter. [#4272]\n\n- ``NDUncertainty``: added a ``unit`` property without setter that returns the\n  set unit or if not set the unit of the parent. [#4272]\n\n- ``NDUncertainty``: included a ``parent_nddata`` property similar to the one\n  previously implemented in StdDevUncertainty. [#4272]\n\n- ``NDUncertainty``: added an ``array`` property with setter. The setter will\n  convert the value to a plain numpy array if it is a list or a subclass of a\n  numpy array. [#4272]\n\n- ``NDUncertainty``: ``propagate_multiply`` and similar were removed. Before\n  they were abstract properties and replaced by methods with the same name but\n  with a leading underscore. The entry point for propagation is a method\n  called ``propagate``. [#4272]\n\n- ``NDUncertainty`` and subclasses: implement a representation (``__repr__``).\n  [#4787]\n\n- ``StdDevUncertainty``: error propagation allows an explicitly given\n  correlation factor, which may be a scalar or an array which will be taken\n  into account during propagation.\n  This correlation must be determined manually and is not done by the\n  uncertainty! [#4272]\n\n- ``StdDevUncertainty``: the ``array`` is converted to a plain numpy array\n  only if it's a list or a subclass of numpy.ndarray. Previously it was always\n  cast to a numpy array but also allowed subclasses. [#4272]\n\n- ``StdDevUncertainty``: setting the ``parent_nddata`` does not compare if the\n  shape of it's array is identical to the parents data shape. [#4272]\n\n- ``StdDevUncertainty``: the ``array.setter`` doesn't compare if the array has\n  the same shape as the parents data. [#4272]\n\n- ``StdDevUncertainty``: deprecated ``support_correlated`` in favor of\n  ``supports_correlated``. [#4272, #4828]\n\n- ``StdDevUncertainty``: deprecated ``propagate_add`` and similar methods in\n  favor of ``propagate``. [#4272, #4828]\n\n- Allow ``data`` to be a named argument in ``NDDataArray``. [#4626]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``operations.unique`` now has a ``keep`` parameter, which allows\n  one to select whether to keep the first or last row in a set of\n  duplicate rows, or to remove all rows that are duplicates. [#4632]\n\n- ``QTable`` now behaves more consistently by making columns act as a\n  ``Quantity`` even if they are assigned a unit after the table is\n  created. [#4497, #4884]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Remove deprecated ``register`` argument for Unit classes. [#4448]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The astropy.utils.compat.argparse module has now been deprecated. Use the\n  Python 'argparse' module directly instead. [#4462]\n\n- The astropy.utils.compat.odict module has now been deprecated. Use the\n  Python 'collections' module directly instead. [#4466]\n\n- The astropy.utils.compat.gzip module has now been deprecated. Use the\n  Python 'gzip' module directly instead. [#4464]\n\n- The deprecated ``ScienceStateAlias`` class has been removed. [#2767, #4446]\n\n- The astropy.utils.compat.subprocess module has now been deprecated. Use the\n  Python 'subprocess' module instead. [#4483]\n\n- The astropy.utils.xml.unescaper module now also unescapes ``'%2F'`` to\n  ``'/'`` and ``'&&'`` to ``'&'`` in a given URL. [#4699]\n\n- The astropy.utils.metadata.MetaData descriptor has now two optional\n  parameters: doc and copy. [#4921]\n\n- The default IERS (Earth rotation) data now is now auto-downloaded via a\n  new class IERS_Auto.  When extrapolating UT1-UTC or polar motion values\n  outside the available time range, the values are now clipped at the last\n  available value instead of being linearly extrapolated. [#4436]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- WCS objects can now be initialized with an ImageHDU or\n  PrimaryHDU object. [#4493, #4505]\n\n- astropy.wcs now issues an INFO message when the header has SIP coefficients but\n  \"-SIP\" is missing from CTYPE. [#4814]\n\nBug fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Ameliorate a problem with ``get_sun`` not round-tripping due to\n  approximations in the light deflection calculation. [#4952]\n\n- Ensure that ``angle_utilities.position_angle`` accepts floats, as stated\n  in the docstring. [#3800]\n\n- Ensured that transformations for ``GCRS`` frames are correct for\n  non-geocentric observers. [#4986]\n\n- Fixed a problem with the ``Quantity._repr_latex_`` method causing errors\n  when showing an ``EarthLocation`` in a Jupyter notebook. [#4542, #5068]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix a problem where the fast reader (with use_fast_converter=False) can\n  fail on non-US locales. [#4363]\n\n- Fix astropy.io.ascii.read handling of units for IPAC formatted files.\n  Columns with no unit are treated as unitless not dimensionless.\n  [#4867, #4947]\n\n- Fix problems the header parsing in the sextractor reader. [#4603, #4910]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``GroupsHDU.is_image`` property is now set to ``False``. [#4742]\n\n- Ensure scaling keywords are removed from header when unsigned integer data\n  is converted to signed type. [#4974, #5053]\n\n- Made TFORMx keyword check more flexible in test of compressed images to\n  enable compatibility of the test with cfitsio 3.380. [#4646, #4653]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- The astropy.io.votable.validator.html module is updated to handle division\n  by zero when generating validation report. [#4699]\n\n- KeyError when converting Table v1.2 numeric arrays fixed. [#4782]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Refactored ``AiryDisk2D``, ``Sersic1D``, and ``Sersic2D`` models\n  to be able to combine them as classes as well as instances. [#4720]\n\n- Modified the \"LevMarLSQFitter\" class to use the weights in the\n  calculation of the Jacobian. [#4751]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``NDData`` giving masked_Quantities as data-argument will use the\n  implicitly passed mask, unit and value. [#4270]\n\n- ``NDData`` using a subclass implementing ``NDData`` with\n  ``NDArithmeticMixin`` now allows error propagation. [#4270]\n\n- Fixed memory leak that happened when uncertainty of ``NDDataArray`` was\n  set. [#4825, #4862]\n\n- ``StdDevUncertainty``: During error propagation the unit of the uncertainty\n  is taken into account. [#4272]\n\n- ``NDArithmeticMixin``: ``divide`` and ``multiply`` yield correct\n  uncertainties if only one uncertainty is set. [#4152, #4272]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Fix ``sigma_clipped_stats`` to use the ``axis`` argument. [#4726, #4808]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed bug where Tables created from existing Table objects were not\n  inheriting the ``primary_key`` attribute. [#4672, #4930]\n\n- Provide more detail in the error message when reading a table fails due to a\n  problem converting column string values. [#4759]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Exponentiation using a ``Quantity`` with a unit equivalent to dimensionless\n  as base and an ``array``-like exponent yields the correct result. [#4770]\n\n- Ensured that with ``spectral_density`` equivalency one could also convert\n  between ``photlam`` and ``STmag``/``ABmag``. [#5017]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The astropy.utils.compat.fractions module has now been deprecated. Use the\n  Python 'fractions' module directly instead. [#4463]\n\n- Added ``format_doc`` decorator which allows to replace and/or format the\n  current docstring of an object. [#4242]\n\n- Attributes using the astropy.utils.metadata.MetaData descriptor are now\n  included in the sphinx documentation. [#4921]\n\nastropy.vo\n^^^^^^^^^^\n\n- Relaxed expected accuracy of Cone Search prediction test to reduce spurious\n  failures. [#4382]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- astropy.wcs.to_header removes \"-SIP\" from CTYPE when SIP coefficients\n  are not written out, i.e. ``relax`` is either ``False`` or ``None``.\n  astropy.wcs.to_header appends \"-SIP\" to CTYPE when SIP coefficients\n  are written out, i.e. ``relax=True``. [#4814]\n\n- Made ``wcs.bounds_check`` call ``wcsprm_python2c``, which means it\n  works even if ``wcs.set`` has not been called yet. [#4957, #4966].\n\n- WCS objects can no longer be reverse-indexed, which was technically\n  permitted but incorrectly implemented previously [#4962]\n\nOther Changes and Additions\n---------------------------\n\n- Python 2.6 is no longer supported. [#4486]\n\n- The bundled version of py.test has been updated to 2.8.3. [#4349]\n\n- Reduce Astropy's import time (``import astropy``) by almost a factor 2. [#4649]\n\n- Cython prerequisite for building changed to v0.19 in install.rst [#4705,\n  #4710, #4719]\n\n- All astropy.modeling functionality that was deprecated in Astropy 1.0 has\n  been removed. [#4857]\n\n- Added instructions for installing Astropy into CASA. [#4840]\n\n- Added an example gallery to the docs demonstrating short\n  snippets/examples. [#4734]\n\n\nVersion 1.1.2 (2016-03-10)\n==========================\n\nNew Features\n------------\n\nastropy.wcs\n^^^^^^^^^^^\n\n- The ``astropy.wcs`` module now exposes ``WCSHDO_P*`` constants that can be\n  used to allow more control over output precision when using the ``relax``\n  keyword argument. [#4616]\n\nBug Fixes\n---------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed handling of CDS data file when no description is given and also\n  included stripping out of markup for missing value from description. [#4437, #4474]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed possible segfault during error handling in FITS tile\n  compression. [#4489]\n\n- Fixed crash on pickling of binary table columns with the 'X', 'P', or\n  'Q' format. [#4514]\n\n- Fixed memory / reference leak that could occur when copying a ``FITS_rec``\n  object (the ``.data`` for table HDUs). [#520]\n\n- Fixed a memory / reference leak in ``FITS_rec`` that occurred in a wide\n  range of cases, especially after writing FITS tables to a file, but in\n  other cases as well. [#4539]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fix a bug to allow instantiation of a modeling class having a parameter\n  with a custom setter that takes two parameters ``(value, model)`` [#4656]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed bug when replacing a table column with a mixin column like\n  Quantity or Time. [#4601]\n\n- Disable initial ordering in jsviewer (``show_in_browser``,\n  ``show_in_notebook``) to respect the order from the Table. [#4628]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed sphinx issues on plotting quantities. [#4527]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed latex representation of function units. [#4563]\n\n- The ``zest.releaser`` hooks included in Astropy are now injected locally to\n  Astropy, rather than being global. [#4650]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed ``fits2bitmap`` script to allow ext flag to contain extension\n  names or numbers. [#4468]\n\n- Fixed ``fits2bitmap`` default output filename generation for\n  compressed FITS files. [#4468]\n\n- Fixed ``quantity_support`` to ensure its conversion returns ndarray\n  instances (needed for numpy >=1.10). [#4654]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Fixed possible exception in handling of SIP headers that was introduced in\n  v1.1.1. [#4492]\n\n- Fixed a bug that caused WCS objects with a high dynamic range of values for\n  certain parameters to lose precision when converted to a header. This\n  occurred for example in cases of spectral cubes, where a spectral axis in\n  Hz might have a CRVAL3 value greater than 1e10 but the spatial coordinates\n  would have CRVAL1/2 values 8 to 10 orders of magnitude smaller. This bug\n  was present in Astropy 1.1 and 1.1.1 but not 1.0.x. This has now been fixed\n  by ensuring that all WCS keywords are output with 14 significant figures by\n  default. [#4616]\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled astropy-helpers to v1.1.2. [#4678]\n\n- Updated bundled copy of WCSLIB to 5.14. [#4579]\n\n\nVersion 1.1.1 (2016-01-08)\n==========================\n\nNew Features\n------------\n\nastropy.io.registry\n^^^^^^^^^^^^^^^^^^^\n\n- Allow ``pathlib.Path`` objects (available in Python 3.4 and later) for\n  specifying the file name in registry read / write functions. [#4405]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``console.human_file_size`` now accepts quantities with byte-equivalent\n  units [#4373]\n\nBug Fixes\n---------\n\nastropy.analytic_functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed the blackbody functions' handling of overflows on some platforms\n  (Windows with MSVC, older Linux versions) with a buggy ``expm1`` function.\n  [#4393]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed an bug where updates to string columns in FITS tables were not saved\n  on Python 3. [#4452]\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled astropy-helpers to v1.1.1. [#4413]\n\n\nVersion 1.1 (2015-12-11)\n========================\n\nNew Features\n------------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- Added new tools ``set_temp_config`` and ``set_temp_cache`` which can be\n  used either as function decorators or context managers to temporarily\n  use alternative directories in which to read/write the Astropy config\n  files and download caches respectively.  This is especially useful for\n  testing, though ``set_temp_cache`` may also be used as a way to provide\n  an alternative (application specific) download cache for large data files,\n  rather than relying on the default cache location in users' home\n  directories. [#3975]\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Added the Thomson scattering cross-section. [#3839]\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Added Moffat2DKernel. [#3965]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Added ``get_constellation`` function and ``SkyCoord.get_constellation``\n  convenience method to determine the constellation that a coordinate\n  is in. [#3758]\n\n- Added ``PrecessedGeocentric`` frame, which is based on GCRS, but precessed\n  to a specific requested mean equinox. [#3758]\n\n- Added ``Supergalactic`` frame to support de Vaucouleurs supergalactic\n  coordinates. [#3892]\n\n- ``SphericalRepresentation`` now has a ``._unit_representation`` class attribute to specify\n  an equivalent UnitSphericalRepresentation. This allows subclasses of\n  representations to pair up correctly. [#3757]\n\n- Added functionality to support getting the locations of observatories by\n  name. See ``astropy.coordinates.EarthLocation.of_site``. [#4042]\n\n- Added ecliptic coordinates, including ``GeocentricTrueEcliptic``,\n  ``BarycentricTrueEcliptic``, and ``HeliocentricTrueEcliptic``. [#3749]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Add Planck 2015 cosmology [#3476]\n\n- Distance calculations now > 20-40x faster for the supplied\n  cosmologies due to implementing Cython scalar versions of\n  ``FLRW.inv_efunc``.[#4127]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Automatically use ``guess=False`` when reading if the file ``format`` is\n  provided and the format parameters are uniquely specified.  This update\n  also removes duplicate format guesses to improve performance. [#3418]\n\n- Calls to ascii.read() for fixed-width tables may now omit one of the keyword\n  arguments ``col_starts`` or ``col_ends``. Columns will be assumed to begin and\n  end immediately adjacent to each other. [#3657]\n\n- Add a function ``get_read_trace()`` that returns a traceback of the\n  attempted read formats for the last call to ``astropy.io.ascii.read``. [#3688]\n\n- Supports LZMA decompression via ``get_readable_fileobj`` [#3667]\n\n- Allow ``-`` character is Sextractor format column names. [#4168]\n\n- Improve DAOphot reader to read multi-aperture files [#3535, #4207]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Support reading and writing from bzip2 compressed files. i.e. ``.fits.bz2``\n  files. [#3789]\n\n- Included a new command-line script called ``fitsinfo`` to display\n  a summary of the HDUs in one or more FITS files. [#3677]\n\nastropy.io.misc\n^^^^^^^^^^^^^^^\n\n- Support saving all meta information, description and units of tables and columns\n  in HDF5 files [#4103]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- A new method was added to ``astropy.io.votable.VOTable``,\n  ``get_info_by_id`` to conveniently find an ``INFO`` element by its\n  ``ID`` attribute. [#3633]\n\n- Instances in the votable tree now have better ``__repr__`` methods. [#3639]\n\nastropy.logger.py\n^^^^^^^^^^^^^^^^^\n\n- Added log levels (e.g., DEBUG, INFO, CRITICAL) to ``astropy.log`` [#3947]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added a new ``Parameter.validator`` interface for setting a validation\n  method on individual model parameters.  See the ``Parameter``\n  documentation for more details. [#3910]\n\n- The projection classes that are named based on the 3-letter FITS\n  WCS projections (e.g. ``Pix2Sky_TAN``) now have aliases using\n  longer, more descriptive names (e.g. ``Pix2Sky_Gnomonic``).\n  [#3583]\n\n- All of the standard FITS WCS projection types have been\n  implemented in ``astropy.modeling.projections`` (by wrapping\n  WCSLIB). [#3906]\n\n- Added ``Sersic1D`` and ``Sersic2D`` model classes. [#3889]\n\n- Added the Voigt profile to existing models. [#3901]\n\n- Added ``bounding_box`` property and ``render_model`` function [#3909]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Added ``block_reduce`` and ``block_replicate`` functions. [#3453]\n\n- ``extract_array`` now offers different options to deal with array\n  boundaries [#3727]\n\n- Added a new ``Cutout2D`` class to create postage stamp image cutouts\n  with optional WCS propagation. [#3823]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Added ``sigma_lower`` and ``sigma_upper`` keywords to\n  ``sigma_clip`` to allow for non-symmetric clipping. [#3595]\n\n- Added ``cenfunc``, ``stdfunc``, and ``axis`` keywords to\n  ``sigma_clipped_stats``. [#3792]\n\n- ``sigma_clip`` automatically masks invalid input values (NaNs, Infs) before\n  performing the clipping [#4051]\n\n- Added the ``histogram`` routine, which is similar to ``np.histogram`` but\n  includes several additional options for automatic determination of optimal\n  histogram bins. Associated helper routines include ``bayesian_blocks``,\n  ``friedman_bin_width``, ``scott_bin_width``, and ``knuth_bin_width``.\n  This functionality was ported from the astroML library. [#3756]\n\n- Added the ``bayesian_blocks`` routine, which implements a dynamic algorithm\n  for locating change-points in various time series. [#3756]\n\n- A new function ``poisson_conf_interval()`` was added to allow easy calculation\n  of several standard formulae for the error bars on the mean of a Poisson variable\n  estimated from a single sample.\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``add_column()`` and ``add_columns()`` now have ``rename_duplicate``\n  option to rename new column(s) rather than raise exception when its name\n  already exists. [#3592]\n\n- Added ``Table.to_pandas`` and ``Table.from_pandas`` for converting to/from\n  pandas dataframes. [#3504]\n\n- Initializing a ``Table`` with ``Column`` objects no longer requires\n  that the column ``name`` attribute be defined. [#3781]\n\n- Added an ``info`` property to ``Table`` objects which provides configurable\n  summary information about the table and its columns. [#3731]\n\n- Added an ``info`` property to column classes (``Column`` or mixins).  This\n  serves a dual function of providing configurable summary information about\n  the column, and acting as a manager of column attributes such as\n  name, format, or description. [#3731]\n\n- Updated table and column representation to use the ``dtype_info_name``\n  function for the dtype value.  Removed the default \"masked=False\"\n  from the table representation. [#3868, #3869]\n\n- Updated row representation to be consistent with the corresponding\n  table representation for that row.  Added HTML representation so a\n  row displays nicely in IPython notebook.\n\n- Added a new table indexing engine allowing for the creation of\n  indices on one or more columns of a table using ``add_index``. These\n  indices enable new functionality such as searching for rows by value\n  using ``loc`` and ``iloc``, as well as increased performance for\n  certain operations. [#3915, #4202]\n\n- Added capability to include a structured array or recarray in a table\n  as a mixin column.  This allows for an approximation of nested tables.\n  [#3925]\n\n- Added ``keep_byteorder`` option to ``Table.as_array()``.  See the\n  \"API Changes\" section below. [#4080]\n\n- Added a new method ``Table.replace_column()`` to replace an existing\n  column with a new data column. [#4090]\n\n- Added a ``tableclass`` option to ``Table.pformat()`` to allow specifying\n  a list of CSS classes added to the HTML table. [#4131]\n\n- New CSS for jsviewer table [#2917, #2982, #4174]\n\n- Added a new ``Table.show_in_notebook`` method that shows an interactive view\n  of a Table (similar to ``Table.show_in_browser(jsviewer=True)``) in an\n  Python/Jupyter notebook. [#4197]\n\n- Added column alignment formatting for better pprint viewing\n  experience. [#3644]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Added new test config options, ``config_dir`` and ``cache_dir``  (these\n  can be edited in ``setup.cfg`` or as extra command-line options to\n  py.test) for setting the locations to use for the Astropy config files\n  and download caches (see also the related ``set_temp_config/cache``\n  features added in ``astropy.config``). [#3975]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Add support for FITS standard time strings. [#3547]\n\n- Allow the ``format`` attribute to be updated in place to change the\n  default representation of a ``Time`` object. [#3673]\n\n- Add support for shape manipulation (reshape, ravel, etc.). [#3224]\n\n- Add argmin, argmax, argsort, min, max, ptp, sort methods. [#3681]\n\n- Add ``Time.to_datetime`` method for converting ``Time`` objects to\n  timezone-aware datetimes. [#4119, #4124]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added furlong to imperial units. [#3529]\n\n- Added mil to imperial units. [#3716]\n\n- Added stone to imperial units. [#4192]\n\n- Added Earth Mass (``M_earth``) and Jupiter mass (``M_jup``) to units [#3907]\n\n- Added support for functional units, in particular the logarithmic ones\n  ``Magnitude``, ``Decibel``, and ``Dex``. [#1894]\n\n- Quantities now work with the unit support in matplotlib.  See\n  :ref:`plotting-quantities`. [#3981]\n\n- Clarified imperial mass measurements and added pound force (lbf),\n  kilopound (kip), and pound per square inch (psi). [#3409]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Added new ``OrderedDescriptor`` and ``OrderedDescriptorContainer`` utility\n  classes that make it easier to implement classes with declarative APIs,\n  wherein class-level attributes have an inherit \"ordering\" to them that is\n  specified by the order in which those attributes are defined in the class\n  declaration (by defining them using special descriptors that have\n  ``OrderedDescriptor`` as a base class).  See the API documentation for\n  these classes for more details. Coordinate frames and models now use this\n  interface. [#3679]\n\n- The ``get_pkg_data_*`` functions now take an optional ``package`` argument\n  which allows specifying any package to read package data filenames or\n  content out of, as opposed to only being able to use data from the package\n  that the function is called from. [#4079]\n\n- Added function ``dtype_info_name`` to the ``data_info`` module to provide\n  the name of a ``dtype`` for human-readable informational purposes. [#3868]\n\n- Added ``classproperty`` decorator--this is to ``property`` as\n  ``classmethod`` is to normal instance methods. [#3982]\n\n- ``iers.open`` now handles network URLs, as well as local paths. [#3850]\n\n- The ``astropy.utils.wraps`` decorator now takes an optional\n  ``exclude_args`` argument not shared by the standard library ``wraps``\n  decorator (as it is unique to the Astropy version's ability of copying\n  the wrapped function's argument signature).  ``exclude_args`` allows\n  certain arguments on the wrapped function to be excluded from the signature\n  of the wrapper function.  This is particularly useful when wrapping an\n  instance method as a function (to exclude the ``self`` argument). [#4017]\n\n- ``get_readable_fileobj`` can automatically decompress LZMA ('.xz')\n  files using the ``lzma`` module of Python 3.3+ or, when available, the\n  ``backports.lzma`` package on earlier versions. [#3667]\n\n- The ``resolve_name`` utility now accepts any number of additional\n  positional arguments that are automatically dotted together with the\n  first ``name`` argument. [#4083]\n\n- Added ``is_url_in_cache`` for resolving paths to cached files via URLS\n  and checking if files exist. [#4095]\n\n- Added a ``step`` argument to the ``ProgressBar.map`` method to give\n  users control over the update frequency of the progress bar. [#4191]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Added a function / context manager ``quantity_support`` for enabling\n  seamless plotting of ``Quantity`` instances in matplotlib. [#3981]\n\n- Added the ``hist`` function, which is similar to ``plt.hist`` but\n  includes several additional options for automatic determination of optimal\n  histogram bins. This functionality was ported from the astroML library.\n  [#3756]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- The included version of wcslib has been upgraded to 5.10. [#3992, #4239]\n\n  The minimum required version of wcslib in the 4.x series remains 4.24.\n\n  The minimum required version of wcslib in the 5.x series is\n  5.8.  Building astropy against a wcslib 5.x prior to 5.8\n  will raise an ``ImportError`` when ``astropy.wcs`` is imported.\n\n  The wcslib changes relevant to astropy are:\n\n- The FITS headers returned by ``astropy.wcs.WCS.to_header`` and\n  ``astropy.wcs.WCS.to_header_string`` now include values with\n  more precision.  This will result in numerical differences in\n  your results if you convert ``astropy.wcs.WCS`` objects to FITS\n  headers and use the results.\n\n- ``astropy.wcs.WCS`` now recognises the ``TPV``, ``TPD``,\n  ``TPU``, ``DSS``, ``TNX`` and ``ZPX`` polynomial distortions.\n\n- Added relaxation flags to allow ``PC0i_0ja``, ``PV0j_0ma``, and\n  ``PS0j_0ma`` (i.e. with leading zeroes on the index).\n\n- Tidied up error reporting, particularly relating to translating\n  status returns from lower-level functions.\n\n- Changed output formatting of floating point values in\n  ``to_header``.\n\n- Enhanced text representation of ``WCS`` objects. [#3604]\n\n- The ``astropy.tests.helper`` module is now part of the public API (and has a\n  documentation page).  This module was in previous releases of astropy,\n  but was not considered part of the public API until now. [#3890]\n\n- There is a new function ``astropy.online_help`` to search the\n  astropy documentation and display the result in a web\n  browser. [#3642]\n\nAPI changes\n-----------\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- ``FLRW._tfunc`` and ``FLRW._xfunc`` are marked as deprecated.  Users\n  should use the new public interfaces ``FLRW.lookback_time_integrand``\n  and ``FLRW.abs_distance_integrand`` instead. [#3767]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- The default header line processing was made to be consistent with data line\n  processing in that it now ignores blank lines that may have whitespace\n  characters.  Any code that explicitly specifies a ``header_start`` value\n  for parsing a file with blank lines in the header containing whitespace will\n  need to be updated. [#2654]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- The ``uint`` argument to ``fits.open`` is now True by default; that is,\n  arrays using the FITS unsigned integer convention will be detected, and\n  read as unsigned integers by default.  A new config option for\n  ``io.fits``, ``enable_uint``, can be changed to False to revert to the\n  original behavior of ignoring the ``uint`` convention unless it is\n  explicitly requested with ``uint=True``. [#3916]\n\n- The ``ImageHDU.NumCode`` and ``ImageHDU.ImgCode`` attributes (and same\n  for other classes derived from ``_ImageBaseHDU``) are deprecated.  Instead,\n  the ``astropy.io.fits`` module-level constants ``BITPIX2DTYPE`` and\n  ``DTYPE2BITPIX`` can be used. [#3916]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Note: Comparisons of model parameters with array-like values now\n  yields a Numpy boolean array as one would get with normal Numpy\n  array comparison.  Previously this returned a scalar True or False,\n  with True only if the comparison was true for all elements compared,\n  which could lead to confusing circumstances. [#3912]\n\n- Using ``model.inverse = None`` to reset a model's inverse to its\n  default is deprecated.  In the future this syntax will explicitly make\n  a model not have an inverse (even if it has a default).  Instead, use\n  ``del model.inverse`` to reset a model's inverse to its default (if it\n  has a default, otherwise this just deletes any custom inverse that has\n  been assigned to the model and is still equivalent to setting\n  ``model.inverse = None``). [#4236]\n\n- Adds a ``model.has_user_inverse`` attribute which indicates whether or not\n  a user has assigned a custom inverse to ``model.inverse``.  This is just\n  for informational purposes, for example, for software that introspects\n  model objects. [#4236]\n\n- Renamed the parameters of ``RotateNative2Celestial`` and\n  ``RotateCelestial2Native`` from ``phi``, ``theta``, ``psi`` to\n  ``lon``, ``lat`` and ``lon_pole``. [#3578]\n\n- Deprecated the ``Pix2Sky_AZP.check_mu`` and ``Sky2Pix_AZP.check_mu``\n  methods (these were obscure \"accidentally public\" methods that were\n  probably not used by anyone). [#3910]\n\n- Added a phase parameter to the Sine1D model. [#3807]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- Renamed the ``sigma_clip`` ``sig`` keyword as ``sigma``. [#3595]\n\n- Changed the ``sigma_clip`` ``varfunc`` keyword to ``stdfunc``. [#3595]\n\n- Renamed the ``sigma_clipped_stats`` ``mask_val`` keyword to\n  ``mask_value``. [#3595]\n\n- Changed the default ``iters`` keyword value to 5 in both the\n  ``sigma_clip`` and ``sigma_clipped_stats`` functions. [#4067]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- ``Table.as_array()`` always returns a structured array with each column in\n  the system's native byte order.  The optional ``keep_byteorder=True``\n  option will keep each column's data in its original byteorder. [#4080]\n\n- ``Table.simple_table()`` now creates tables with int64 and float64 types\n  instead of int32 and float64. [#4114]\n\n- An empty table can now be initialized without a ``names`` argument as long\n  as a valid ``dtype`` argument (with names embedded) is supplied. [#3977]\n\nastropy.time\n^^^^^^^^^^^^\n\n- The ``astropy_time`` attribute and time format has been removed from the\n  public interface.  Existing code that instantiates a new time object using\n  ``format='astropy_time'`` can simply omit the ``format``\n  specification. [#3857]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Single-item ``Quantity`` instances with record ``dtype`` will now have\n  their ``isscalar`` property return ``True``, consistent with behaviour for\n  numpy arrays, where ``np.void`` records are considered scalar. [#3899]\n\n- Three changes relating to the FITS unit format [#3993]:\n\n- The FITS unit format will no longer parse an arbitrary number as a\n  scale value.  It must be a power of 10 of the form ``10^^k``,\n  ``10^k``, ``10+k``, ``10-k`` and ``10(k)``. [#3993]\n\n- Scales that are powers of 10 can be written out.  Previously, any\n  non-1.0 scale was rejected.\n\n- The ``*`` character is accepted as a separator between the scale\n  and the units.\n\n- Unit formatter classes now require the ``parse`` and ``to_string``\n  methods are now required to be classmethods (and the formatter\n  classes themselves are assumed to be singletons that are not\n  instantiated).  As unit formatters are mostly an internal implementation\n  detail this is not likely to affect any users. [#4001]\n\n- CGS E&M units are now defined separately from SI E&M units, and have\n  distinct physical types. [#4255, #4355]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- All of the ``get_pkg_data_*`` functions take an optional ``package``\n  argument as their second positional argument.  So any code that previously\n  passed other arguments to these functions as positional arguments might\n  break.  Use keyword argument passing instead to mitigate this. [#4079]\n\n- ``astropy.utils.iers`` now uses a ``QTable`` internally, which means that\n  the numerical columns are stored as ``Quantity``, with full support for\n  units.  Furthermore, the ``ut1_utc`` method now returns a ``Quantity``\n  instead of a float or an array (as did ``pm_xy`` already). [#3223]\n\n- ``astropy.utils.iers`` now throws an ``IERSRangeError``, a subclass\n  of ``IndexError``, rather than a raw ``IndexError``.  This allows more\n  fine-grained catching of situations where a ``Time`` is beyond the range\n  of the loaded IERS tables. [#4302]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- When compiled with wcslib 5.9 or later, the FITS headers returned\n  by ``astropy.wcs.WCS.to_header`` and\n  ``astropy.wcs.WCS.to_header_string`` now include values with more\n  precision.  This will result in numerical differences in your\n  results if you convert ``astropy.wcs.WCS`` objects to FITS headers\n  and use the results.\n\n- If NAXIS1 or NAXIS2 is not passed with the header object to\n  WCS.calc_footprint, a ValueError is raised. [#3557]\n\nBug fixes\n---------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- The constants ``Ry`` and ``u`` are now properly used inside the\n  corresponding units.  The latter have changed slightly as a result. [#4229]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Internally, ``coordinates`` now consistently uses the appropriate time\n  scales for using ERFA functions. [#4302]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix a segfault in the fast C parser when one of the column headers\n  is empty [#3545].\n\n- Fix several bugs that prevented the fast readers from being used\n  when guessing the file format.  Also improved the read trace\n  information to better understand format guessing. [#4115]\n\n- Fix an underlying problem that resulted in an uncaught TypeError\n  exception when reading a CDS-format file with guessing enabled. [#4120]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- ``Simplex`` fitter now correctly passes additional keywords arguments to\n  the scipy solver. [#3966]\n\n- The keyword ``acc`` (for accuracy) is now correctly accepted by\n  ``Simplex``. [#3966]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- The units ``Ryd`` and ``u`` are no longer hard-coded numbers, but depend\n  on the appropriate values in the ``constants`` module.  As a result, these\n  units now imply slightly different conversions.  [#4229]\n\nOther Changes and Additions\n---------------------------\n\n- The ``./setup.py test`` command is now implemented in the ``astropy.tests``\n  module again (previously its implementation had been moved into\n  astropy-helpers).  However, that made it difficult to synchronize changes\n  to the Astropy test runner with changes to the ``./setup.py test`` UI.\n  astropy-helpers v1.1 and above will detect this implementation of the\n  ``test`` command, when present, and use it instead of the old version that\n  was included in astropy-helpers (most users will not notice any difference\n  as a result of this change). [#4020]\n\n- The repr for ``Table`` no longer displays ``masked=False`` since tables\n  are not masked by default anyway. [#3869]\n\n- The version of ``PLY`` that ships with astropy has been updated to 3.6.\n\n- WCSAxes is now required for doc builds. [#4074]\n\n- The migration guide from pre-v0.4 coordinates has been removed to avoid\n  cluttering the ``astropy.coordinates`` documentation with increasingly\n  irrelevant material.  To see the migration guide, we recommend you simply look\n  to the archived documentation for previous versions, e.g.\n  https://docs.astropy.org/en/v1.0/coordinates/index.html#migrating-from-pre-v0-4-coordinates\n  [#4203]\n\n- In ``astropy.coordinates``, the transformations between GCRS, CIRS,\n  and ITRS have been adjusted to more logically reflect the order in\n  which they actually apply.  This should not affect most coordinate\n  transformations, but may affect code that is especially sensitive to\n  machine precision effects that change when the order in which\n  transformations occur is changed. [#4255]\n\n- Astropy v1.1.0 will be the last release series to officially support\n  Python 2.6.  A deprecation warning will now be issued when using Astropy\n  in Python 2.6 (this warning can be disabled through the usual Python warning\n  filtering mechanisms). [#3779]\n\n\nVersion 1.0.13 (2017-05-29)\n===========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix use of quantize level parameter for ``CompImageHDU``. [#6029]\n\n- Prevent crash when a header contains non-ASCII (e.g. UTF-8) characters, to\n  allow fixing the problematic cards. [#6084]\n\n\nVersion 1.0.12 (2017-03-05)\n===========================\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed bug in ``discretize_integrate_2D`` in which x and y coordinates\n  where swapped. [#5634]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where ``get_transform`` could sometimes produce confusing errors\n  because of a typo in the input validation. [#5645]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Guard against extremely unlikely problems in compressed images, which\n  could lead to memory unmapping errors. [#5775]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed a bug where stdlib ``realloc()`` was used instead of\n  ``PyMem_Realloc()`` [#5696, #4739, #2100]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed ImportError with NumPy < 1.7 and Python 3.x in\n  ``_register_patched_dtype_reduce``. [#5848]\n\n\nVersion 1.0.11 (2016-12-22)\n===========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Initialising a SkyCoord from a list containing a single SkyCoord no longer removes\n  the distance from the coordinate. [#5270]\n\n- Fix errors in the implementation of the conversion to and from FK4 frames\n  without e-terms, which will have affected coordinates not on the unit\n  sphere (i.e., with distances). [#4293]\n\n- Fix bug where with cds units enabled it was no longer possible to initialize\n  an ``Angle``. [#5483]\n\n- Ensure that ``search_around_sky`` and ``search_around_3d`` return\n  integer type index arrays for empty (non) matches. [#4877, #5083]\n\n- Return an empty set of matches for ``search_around_sky`` and\n  ``search_around_3d`` when one or both of the input coordinate\n  arrays is empty. [#4875, #5083]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix a bug with empty value at end of tab-delimited table on Windows. [#5370]\n\n- Fix reading of big ASCII tables (more than 2Gb) with the fast reader.\n  [#5319]\n\n- Fix segfault with FastCsv and row with too many columns. [#5534]\n\n- Fix problem reading an AASTex format table that does not have ``\\\\``\n  at the end of the last table row. [#5427]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Removed raising of AssertionError that could occur after closing or\n  deleting compressed image data. [#4690, #4694, #4948]\n\n- Fixed bug that caused an ignored exception to be displayed under certain\n  conditions when terminating a script after using fits.getdata(). [#4977]\n\n- Fixed usage of inplace operations that were raising an exception with\n  recent versions of Numpy due to implicit casting. [#5250]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed bug of ``Resource.__repr__()`` having undefined attributes and\n  variables. [#5382]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- CompoundModel now correctly inherits _n_models, allowing the use of model sets [#5358]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Fixed bug in Ci definition. [#5106]\n\n- Non-ascii cds unit strings are now correctly represented using ``str`` also\n  on python2. This solves bugs in parsing coordinates involving strings too.\n  [#5355]\n\n- Ensure ``Quantity`` supports ``np.float_power``, which is new in numpy 1.12.\n  [#5480]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed AttributeError when calling ``utils.misc.signal_number_to_name`` with\n  Python3 [#5430].\n\nastropy.wcs\n^^^^^^^^^^^\n\n- Update the ``_naxis{x}`` attributes when calling ``WCS.slice``. [#5411]\n\n\nOther Changes and Additions\n---------------------------\n\n- The bundled ERFA was updated to version 1.3.0.  This includes the\n  leap second planned for 2016 Dec 31. [#5418]\n\nVersion 1.0.10 (2016-06-09)\n===========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``SkyCoord`` objects created before a new frame which has frame attributes\n  is created no longer raise ``AttributeError`` when the new attributes are\n  accessed [#5021]\n\n- Fix some errors in the implementation of aberration  for ``get_sun``. [#4979]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix problem reading a zero-length ECSV table with a bool type column. [#5010]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix convenience functions (``getdata``, ``getheader``, ``append``,\n  ``update``) to close files. [#4786]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- The astropy.io.votable.validator.html module is updated to handle division\n  by zero when generating validation report. [#4699]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fixed a bug where ``pprint()`` sometimes raises ``UnicodeDecodeError``\n  in Python 2. [#4946]\n\n- Fix bug when doing outer join on multi-dimensional columns. [#4060]\n\n- Fixed bug where Tables created from existing Table objects were not\n  inheriting the ``primary_key`` attribute. [#4672]\n\nastropy.tests\n^^^^^^^^^^^^^\n\n- Fix coverage reporting in Python 3. [#4822]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Duplicates between long and short names are now removed in the ``names``\n  and ``aliases`` properties of units. [#5036]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The astropy.utils.xml.unescaper module now also unescapes ``'%2F'`` to\n  ``'/'`` and ``'&&'`` to ``'&'`` in a given URL. [#4699]\n\n- Fix two problems related to the download cache: clear_download_cache() does\n  not work in Python 2.7 and downloading in Python 2.7 and then Python 3\n  can result in an exception. [#4810]\n\nastropy.vo\n^^^^^^^^^^\n\n- Cache option now properly caches both downloaded JSON database and XML VO\n  tables. [#4699]\n\n- The astropy.vo.validator.conf.conesearch_urls listing is updated to reflect\n  external changes to some VizieR Cone Search services. [#4699]\n\n- VOSDatabase decodes byte-string to UTF-8 instead of ASCII to avoid\n  UnicodeDecodeError for some rare cases. Fixed a Cone Search test that is\n  failing as a side-effect of #4699. [#4757]\n\nOther Changes and Additions\n---------------------------\n\n- Updated ``astropy.tests`` test runner code to work with Coverage v4.0 when\n  generating test coverage reports. [#4176]\n\n\nVersion 1.0.9 (2016-03-10)\n==========================\n\nNew Features\n------------\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- ``NDArithmeticMixin`` check for matching WCS now works with\n  ``astropy.wcs.WCS`` objects [#4499, #4503]\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Correct a bug in which ``psf_pad`` and ``fft_pad`` would be ignored [#4366]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fixed addition of new line characters after last row of data in\n  ascii.latex.AASTex. [#4561]\n\n- Fixed reading of Latex tables where the ``\\tabular`` tag is in the first\n  line. [#4595]\n\n- Fix use of plain format strings with the fast writer. [#4517]\n\n- Fix bug writing space-delimited file when table has empty fields. [#4417]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed possible segfault during error handling in FITS tile\n  compression. [#4489]\n\n- Fixed crash on pickling of binary table columns with the 'X', 'P', or\n  'Q' format. [#4514]\n\n- Fixed memory / reference leak that could occur when copying a ``FITS_rec``\n  object (the ``.data`` for table HDUs). [#520]\n\n- Fixed a memory / reference leak in ``FITS_rec`` that occurred in a wide\n  range of cases, especially after writing FITS tables to a file, but in\n  other cases as well. [#4539]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed display of compound model expressions and components when printing\n  compound model instances. [#4414, #4482]\n\nastropy.stats\n^^^^^^^^^^^^^\n\n- the input for median_absolute_deviation will not be cast to plain numpy\n  arrays when given subclasses of numpy arrays\n  (like Quantity, numpy.ma.MaskedArray, etc.) [#4658]\n\n- Fixed incorrect results when using median_absolute_deviation with masked\n  arrays. [#4658]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``zest.releaser`` hooks included in Astropy are now injected locally to\n  Astropy, rather than being global. [#4650]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed ``fits2bitmap`` script to allow ext flag to contain extension\n  names or numbers. [#4468]\n\n- Fixed ``fits2bitmap`` default output filename generation for\n  compressed FITS files. [#4468]\n\n\nVersion 1.0.8 (2016-01-08)\n==========================\n\nBug Fixes\n---------\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed an bug where updates to string columns in FITS tables were not saved\n  on Python 3. [#4452]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- In-place peak-to-peak calculations now work on ``Quantity``. [#4442]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed ``find_api_page`` to work correctly on python 3.x [#4378, #4379]\n\n\nVersion 1.0.7 (2015-12-04)\n==========================\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Pickling of ``EarthLocation`` instances now also works on Python 2. [#4304]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix fast writer so bytestring column output is not prefixed by 'b' in\n  Python 3. [#4350]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed a regression that could cause writes of large FITS files to be\n  truncated. [#4307]\n\n- Astropy v1.0.6 included a fix (#4228) for an obscure case where the TDIM\n  of a table column is smaller than the repeat count of its data format.\n  This updates that fix in such a way that it works with Numpy 1.10 as well.\n  [#4266]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix a bug when pickling a Table with mixin columns (e.g. Time). [#4098]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fix incorrect ``value`` attribute for epoch formats like \"unix\"\n  when ``scale`` is different from the class ``epoch_scale``. [#4312]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- Fixed an issue where if ipython is installed but ipykernel is not\n  installed then importing astropy from the ipython console gave an\n  IPython.kernel deprecation warning. [#4279]\n\n- Fixed crash that could occur in ``ProgressBar`` when ``astropy`` is\n  imported in an IPython startup script. [#4274]\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled astropy-helpers to v1.0.6. [#4372]\n\n\nVersion 1.0.6 (2015-10-22)\n==========================\n\nBug Fixes\n---------\n\nastropy.analytic_functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Fixed blackbody analytic functions to properly support arrays of\n  temperatures. [#4251]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed errors in transformations for objects within a few AU of the\n  Earth.  Included substantive changes to transformation machinery\n  that may change distances at levels ~machine precision for other\n  objects. [#4254]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- ``fitsdiff`` and related functions now do a better job reporting differences\n  between values that are different types but have the same representation\n  (ex: the string '0' versus the number 0). [#4122]\n\n- Miscellaneous fixes for supporting Numpy 1.10. [#4228]\n\n- Fixed an issue where writing a column of unicode strings to a FITS table\n  resulted in a quadrupling of size of the column (i.e. the format of the\n  FITS column was 4 characters for every one in the original strings).\n  [#4228]\n\n- Added support for an obscure case (but nonetheless allowed by the FITS\n  standard) where a column has some TDIMn keyword, but a repeat count in\n  the TFORMn column greater than the number of elements implied by the\n  TDIMn.  For example TFORMn = 100I, but TDIMn = '(5,5)'.  In this case\n  the TDIMn implies 5x5 arrays in the column, but the TFORMn implies\n  a 100 element 1-D array in the column.  In this case the TDIM takes\n  precedence, and the remaining bytes in the column are ignored. [#4228]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Fixed crash with Python compiler optimization level = 2. [#4231]\n\nastropy.vo\n^^^^^^^^^^\n\n- Fixed ``check_conesearch_sites`` with ``parallel=True`` on Python >= 3.3\n  and on Windows (it was broken in both those cases for separate reasons).\n  [#2970]\n\nOther Changes and Additions\n---------------------------\n\n- All tests now pass against Numpy v1.10.x. This implies nominal support for\n  Numpy 1.10.x moving forward (but there may still be unknown issues). For\n  example, there is already a known performance issue with tables containing\n  large multi-dimensional columns--for example, tables that contain entire\n  images in one or more of their columns.  This is a known upstream issue in\n  Numpy. [#4259]\n\n\nVersion 1.0.5 (2015-10-05)\n==========================\n\nBug Fixes\n---------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Rename units -> unit and error -> uncertainty in the ``repr`` and ``str``\n  of constants to match attribute names. [#4147]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fix string representation of ``SkyCoord`` objects transformed into\n  the ``AltAz`` frame [#4055, #4057]\n\n- Fix the ``search_around_sky`` function to allow ``storekdtree`` to be\n  ``False`` as was intended. [#4082, #4212]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fix bug when extending one header (without comments) with another\n  (with comments). [#3967]\n\n- Somewhat improved resource usage for FITS data--previously a new ``mmap``\n  was opened for each HDU of a FITS file accessed through an ``HDUList``.\n  Each ``mmap`` used up a single file descriptor, causing problems with\n  system resource limits for some users.  Now only a single ``mmap`` is\n  opened, and shared for the data of all HDUs.  Note: The problem still\n  persists with using the \"convenience\" functions.  For example using\n  ``fits.getdata`` will create one ``mmap`` per HDU read this way (as\n  opposed to opening the file with ``fits.open`` and accessing the HDUs\n  through the ``HDUList`` object). [#4097]\n\n- Fix bug where reading a file without a newline failed with an\n  unrelated / unhelpful exception. [#4160]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Cleaned up ``repr`` of models that have no parameters. [#4076]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Initializing ``NDDataArray`` from another instance now sets ``flags`` as\n  expected and no longer fails when ``uncertainty`` is set [#4129].\n  Initializing an ``NDData`` subclass from a parent instance\n  (eg. ``NDDataArray`` from ``NDData``) now sets the attributes other than\n  ``data`` as it should [#4130, #4137].\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Fix an issue with setting fill value when column dtype is changed. [#4088]\n\n- Fix bug when unpickling a bare Column where the _parent_table\n  attribute was not set.  This impacted the Column representation. [#4099]\n\n- Fix issue with the web browser opening with an empty page, and ensure that\n  the url is correctly formatted for Windows. [#4132]\n\n- Fix NameError in table stack exception message. [#4213]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- ``resolve_name`` no longer causes ``sys.modules`` to be cluttered with\n  additional copies of modules under a package imported like\n  ``resolve_name('numpy')``. [#4084]\n\n- ``console`` was updated to support IPython 4.x and Jupyter 1.x.\n  This should suppress a ShimWarning that was appearing at\n  import of astropy with IPython 4.0 or later. [#4078]\n\n- Temporary downloaded files created by ``get_readable_fileobj`` when passed\n  a URL are now deleted immediately after the file is closed. [#4198]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The color for axes labels was set to white. Since white labels on white\n  background are hard to read, the label color has been changed to black.\n  [#4143]\n\n- ``ImageNormalize`` now automatically determines ``vmin``/``vmax``\n  (via the ``autoscale_None`` method) when they have not been set\n  explicitly. [#4117]\n\nastropy.vo\n^^^^^^^^^^\n\n- Cone Search validation no longer crashes when the provider gives an\n  incomplete test query. It also ensures search radius for a test query\n  is not too large to avoid timeout. [#4158, #4159]\n\nOther Changes and Additions\n---------------------------\n\n- Astropy now supports Python 3.5. [#4027]\n\n- Updated bundled version of astropy-helpers to 1.0.5. [#4215]\n\n- Updated tests to support py.test 2.7, and upgraded the bundled copy of\n  py.test to v2.7.3. [#4027]\n\n\nVersion 1.0.4 (2015-08-11)\n==========================\n\nNew Features\n------------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Modified Cython functions to release the GIL. This enables convolution\n  to be parallelized effectively and gives large speedups when used with\n  multithreaded task schedulers such as Dask. [#3949]\n\nAPI Changes\n-----------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Some transformations for an input coordinate that's a scalar now correctly\n  return a scalar.  This was always the intended behavior, but it may break\n  code that has been written to work-around this bug, so it may be viewed as\n  an unplanned API change [#3920, #4039]\n\nastropy.visualization\n^^^^^^^^^^^^^^^^^^^^^\n\n- The ``astropy_mpl_style`` no longer sets ``interactive`` to ``True``, but\n  instead leaves it at the user preference.  This makes using the style\n  compatible with building docs with Sphinx, and other non-interactive\n  contexts. [#4030]\n\nBug Fixes\n---------\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fix bug where coordinate representation setting gets reset to default value\n  when coordinate array is indexed or sliced. [#3824]\n\n- Fixed confusing warning message shown when using dates outside current IERS\n  data. [#3844]\n\n- ``get_sun`` now yields a scalar when the input time is a scalar (this was a\n  regression in v1.0.3 from v1.0.2) [#3998, #4039]\n\n- Fixed bug where some scalar coordinates were incorrectly being changed to\n  length-1 array coordinates after transforming through certain frames.\n  [#3920, #4039]\n\n- Fixed bug causing the ``separation`` methods of ``SkyCoord`` and frame\n  classes to fail due to infinite recursion [#4033, #4039]\n\n- Made it so that passing in a list of ``SkyCoord`` objects that are in\n  UnitSphericalRepresentation to the ``SkyCoord`` constructor appropriately\n  yields a new object in UnitSphericalRepresentation [#3938, #4039]\n\nastropy.cosmology\n^^^^^^^^^^^^^^^^^\n\n- Fixed wCDM to not ignore the Ob0 parameter on initialization. [#3934]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed crash when updating data in a random groups HDU opened in update\n  mode. [#3730]\n\n- Fixed incorrect checksum / datasum being written when re-writing a scaled\n  HDU (i.e. non-trivial BSCALE and/or BZERO) with\n  ``do_not_scale_image_data=False``. [#3883]\n\n- Fixed stray deprecation warning in ``BinTableHDU.copy()``. [#3798]\n\n- Better handling of the ``BLANK`` keyword when auto-scaling scaled image\n  data.  The ``BLANK`` keyword is now removed from the header after\n  auto-scaling is applied, and it is restored properly (with floating point\n  NaNs replaced by the filler value) when updating a file opened with the\n  ``scale_back=True`` argument.  Invalid usage of the ``BLANK`` keyword is\n  also better warned about during validation. [#3865]\n\n- Reading memmaped scaled images won't fail when\n  ``do_not_scale_image_data=True`` (that is, since we're just reading the raw\n  / physical data there is no reason mmap can't be used). [#3766]\n\n- Fixed a reference cycle that could sometimes cause FITS table-related\n  objects (``BinTableHDU``, ``ColDefs``, etc.) to hang around in memory\n  longer than expected. [#4012]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Improved support for pickling of compound models, including both compound\n  model instances, and new compound model classes. [#3867]\n\n- Added missing default values for ``Ellipse2D`` parameters. [#3903]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fixed iteration of scalar ``Time`` objects so that ``iter()`` correctly\n  raises a ``TypeError`` on them (while still allowing ``Time`` arrays to be\n  iterated). [#4048]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Added frequency-equivalency check when declaring doppler equivalencies\n  [#3728]\n\n- Define ``floor_divide`` (``//``) for ``Quantity`` to be consistent\n  ``divmod``, such that it only works where the quotient is dimensionless.\n  This guarantees that ``(q1 // q2) * q2 + (q1 % q2) == q1``. [#3817]\n\n- Fixed the documentation of supported units to correctly report support for\n  SI prefixes.  Previously the table of supported units incorrectly showed\n  several derived unit as not supporting prefixes, when in fact they do.\n  [#3835]\n\n- Fix a crash when calling ``astropy.units.cds.enable()``.  This will now\n  \"set\" rather than \"add\" units to the active set to avoid the namespace\n  clash with the default units. [#3873]\n\n- Ensure in-place operations on ``float32`` quantities work. [#4007]\n\nastropy.utils\n^^^^^^^^^^^^^\n\n- The ``deprecated`` decorator did not correctly wrap classes that have a\n  custom metaclass--the metaclass could be dropped from the deprecated\n  version of the class. [#3997]\n\n- The ``wraps`` decorator would copy the wrapped function's name to the\n  wrapper function even when ``'__name__'`` is excluded from the ``assigned``\n  argument. [#4016]\n\nMisc\n^^^^\n\n- ``fitscheck`` no longer causes scaled image data to be rescaled when\n  adding checksums to existing files. [#3884]\n\n- Fixed an issue where running ``import astropy`` from within the source\n  tree did not automatically build the extension modules if the source is\n  from a source distribution (as opposed to a git repository). [#3932]\n\n- Fixed multiple instances of a bug that prevented Astropy from being used\n  when compiled with the ``python -OO`` flag, due to it causing all\n  docstrings to be stripped out. [#3923]\n\n- Removed source code template files that were being installed\n  accidentally alongside installed Python modules. [#4014]\n\n- Fixed a bug in the exception logging that caused a crash in the exception\n  handler itself on Python 3 when exceptions do not include a message.\n  [#4056]\n\n\nVersion 1.0.3 (2015-06-05)\n==========================\n\nNew Features\n------------\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Greatly improved the speed of printing a large table to the screen when\n  only a few rows are being displayed. [#3796]\n\nastropy.time\n^^^^^^^^^^^^\n\n- Add support for the 2015-Jun-30 leap second. [#3794]\n\nAPI Changes\n-----------\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Note that HTML formatted tables will not always be found with guess mode\n  unless it passes certain heuristics that strongly suggest the presence of\n  HTML in the input.  Code that expects to read tables from HTML should\n  specify ``format='html'`` explicitly. See bug fixes below for more\n  details. [#3693]\n\nBug Fixes\n---------\n\nastropy.convolution\n^^^^^^^^^^^^^^^^^^^\n\n- Fix issue with repeated normalizations of ``Kernels``. [#3747]\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- Fixed ``get_sun`` to yield frames with the ``obstime`` set to what's passed into the function (previously it incorrectly always had J2000). [#3750]\n\n- Fixed ``get_sun`` to account for aberration of light. [#3750]\n\n- Fixed error in the GCRS->ICRS transformation that gave incorrect distances. [#3750]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Remove HTML from the list of automatically-guessed formats when reading if\n  the file does not appear to be HTML.  This was necessary to avoid a\n  commonly-encountered segmentation fault occurring in the libxml parser on\n  MacOSX. [#3693]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixes to support the upcoming Numpy 1.10. [#3419]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Polynomials are now scaled when used in a compound model. [#3702]\n\n- Fixed the ``Ellipse2D`` model to be consistent with ``Disk2D`` in\n  how pixels are included. [#3736]\n\n- Fixed crash when evaluating a model that accepts no inputs. [#3772]\n\nastropy.testing\n^^^^^^^^^^^^^^^\n\n- The Astropy py.test plugins that disable unintentional internet access\n  in tests were also blocking use of local UNIX sockets in tests, which\n  prevented testing some multiprocessing code--fixed. [#3713]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Supported full SI prefixes for the barn unit (\"picobarn\", \"femtobarn\",\n  etc.)  [#3753]\n\n- Fix loss of precision when multiplying non-whole-numbered powers\n  of units together.  For example, before this change, ``(u.m **\n  1.5) ** Fraction(4, 5)`` resulted in an inaccurate floating-point\n  power of ``1.2000000000000002``.  After this change, the exact\n  rational number of ``Fraction(6, 5)`` is maintained. [#3790]\n\n- Fixed printing of object ndarrays containing multiple Quantity\n  objects with differing / incompatible units. Note: Unit conversion errors\n  now cause a ``UnitConversionError`` exception to be raised.  However, this\n  is a subclass of the ``UnitsError`` exception used previously, so existing\n  code that catches ``UnitsError`` should still work. [#3778]\n\nOther Changes and Additions\n---------------------------\n\n- Added a new ``astropy.__bibtex__`` attribute which gives a citation\n  for Astropy in bibtex format. [#3697]\n\n- The bundled version of ERFA was updated to v1.2.0 to address leapsecond\n  updates. [#3802]\n\n\nVersion 0.4.6 (2015-05-29)\n==========================\n\nBug Fixes\n---------\n\nastropy.time\n^^^^^^^^^^^^\n\n- Fixed ERFA code to handle the 2015-Jun-30 leap second. [#3795]\n\n\nVersion 1.0.2 (2015-04-16)\n==========================\n\nNew Features\n------------\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added support for polynomials with degree 0 or degree greater than 15.\n  [#3574, 3589]\n\nBug Fixes\n---------\n\nastropy.config\n^^^^^^^^^^^^^^\n\n- The pre-astropy-0.4 configuration API has been fixed. It was\n  inadvertently broken in 1.0.1. [#3627]\n\nastropy.io.fits\n^^^^^^^^^^^^^^^\n\n- Fixed a severe memory leak that occurred when reading tile compressed\n  images. [#3680]\n\n- Fixed bug where column data could be unintentionally byte-swapped when\n  copying data from an existing FITS file to a new FITS table with a\n  TDIMn keyword for that column. [#3561]\n\n- The ``ColDefs.change_attrib``, ``ColDefs.change_name``, and\n  ``ColDefs.change_unit`` methods now work as advertised.  It is also\n  possible (and preferable) to update attributes directly on ``Column``\n  objects (for example setting ``column.name``), and the change will be\n  accurately reflected in any associated table data and its FITS header.\n  [#3283, #1539, #2618]\n\n- Fixes an issue with the ``FITS_rec`` interface to FITS table data, where a\n  ``FITS_rec`` created by copying an existing FITS table but adding new rows\n  could not be sliced or masked correctly.  [#3641]\n\n- Fixed handling of BINTABLE with TDIMn of size 1. [#3580]\n\nastropy.io.votable\n^^^^^^^^^^^^^^^^^^\n\n- Loading a ``TABLE`` element without any ``DATA`` now correctly\n  creates a 0-row array. [#3636]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Added workaround to support inverses on compound models when one of the\n  sub-models is itself a compound model with a manually-assigned custom\n  inverse. [#3542]\n\n- Fixed instantiation of polynomial models with constraints for parameters\n  (constraints could still be assigned after instantiation, but not during).\n  [#3606]\n\n- Fixed fitting of 2D polynomial models with the ``LeVMarLSQFitter``. [#3606]\n\nastropy.table\n^^^^^^^^^^^^^\n\n- Ensure ``QTable`` can be pickled [#3590]\n\n- Some corner cases when instantiating an ``astropy.table.Table``\n  with a Numpy array are handled [#3637]. Notably:\n\n- a zero-length array is the same as passing ``None``\n\n- a scalar raises a ``ValueError``\n\n- a one-dimensional array is treated as a single row of a table.\n\n- Ensure a ``Column`` without units is treated as an ``array``, not as an\n  dimensionless ``Quantity``. [#3648]\n\nastropy.units\n^^^^^^^^^^^^^\n\n- Ensure equivalencies that do more than just scale a ``Quantity`` are\n  properly handled also in ``ufunc`` evaluations. [#2496, #3586]\n\n- The LaTeX representation of the Angstrom unit has changed from\n  ``\\overset{\\circ}{A}`` to ``\\mathring{A}``, which should have\n  better support across regular LaTeX, MathJax and matplotlib (as of\n  version 1.5) [#3617]\n\nastropy.vo\n^^^^^^^^^^\n\n- Using HTTPS/SSL for communication between SAMP hubs now works\n  correctly on all supported versions of Python [#3613]\n\nastropy.wcs\n^^^^^^^^^^^\n\n- When no ``relax`` argument is passed to ``WCS.to_header()`` and\n  the result omits non-standard WCS keywords, a warning is\n  emitted. [#3652]\n\nOther Changes and Additions\n---------------------------\n\nastropy.vo\n^^^^^^^^^^\n\n- The number of retries for connections in ``astropy.vo.samp`` can now be\n  configured by a ``n_retries`` configuration option. [#3612]\n\n- Testing\n\n- Running ``astropy.test()`` from within the IPython prompt has been\n  provisionally re-enabled. [#3184]\n\n\nVersion 1.0.1 (2015-03-06)\n==========================\n\nBug Fixes\n---------\n\nastropy.constants\n^^^^^^^^^^^^^^^^^\n\n- Ensure constants can be turned into ``Quantity`` safely. [#3537, #3538]\n\nastropy.io.ascii\n^^^^^^^^^^^^^^^^\n\n- Fix a segfault in the fast C parser when one of the column headers\n  is empty [#3545].\n\n- Fixed support for reading inf and nan values with the fast reader in\n  Windows.  Also fixed in the case of using ``use_fast_converter=True``\n  with the fast reader. [#3525]\n\n- Fixed use of mmap in the fast reader on Windows. [#3525]\n\n- Fixed issue where commented header would treat comments defining the table\n  (i.e. column headers) as purely information comments, leading to problems\n  when trying to round-trip the table. [#3562]\n\nastropy.modeling\n^^^^^^^^^^^^^^^^\n\n- Fixed propagation of parameter constraints ('fixed', 'bounds', 'tied')\n  between compound models and their components.  There is may still be some\n  difficulty defining 'tied' constraints properly for use with compound\n  models, however. [#3481]\n\nastropy.nddata\n^^^^^^^^^^^^^^\n\n- Restore several properties to the compatibility class ``NDDataArray`` that\n  were inadvertently omitted [#3466].\n\nastropy.time\n^^^^^^^^^^^^\n\n- Time objects now always evaluate to ``True``, except when empty. [#3530]\n\nMiscellaneous\n-------------\n\n- The ERFA wrappers are now written directly in the Python/C API\n  rather than using Cython, for greater performance. [#3521]\n\n- Improve import time of astropy [#3488].\n\nOther Changes and Additions\n---------------------------\n\n- Updated bundled astropy-helpers version to v1.0.1 to address installation\n  issues with some packages that depend on Astropy. [#3541]\n\n\nVersion 1.0 (2015-02-18)\n========================\n\nGeneral\n-------\n\n- Astropy now requires Numpy 1.6.0 or later.\n\nNew Features\n------------\n\nastropy.analytic_functions\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- The ``astropy.analytic_functions`` was added to contain analytic functions\n  useful for astronomy [#3077].\n\nastropy.coordinates\n^^^^^^^^^^^^^^^^^^^\n\n- ``astropy.coordinates`` now has a full stack of frames allowing\n  transformations from ICRS or other celestial systems down to Alt/Az\n  coordinates. [#3217]\n\n- ``astropy.coordinates`` now has a "
        },
        {
          "name": "CITATION",
          "type": "blob",
          "size": 0.064453125,
          "content": "See https://github.com/astropy/astropy/blob/main/astropy/CITATION\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 67.6435546875,
          "content": "# This is a -*- yaml -*- file\n\ncff-version: 1.2.0\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\n\n# Project information\ntitle: Astropy\nauthors:\n  - name: \"Astropy Collaboration\"\nrepository-code: 'https://github.com/astropy/astropy'\nurl: 'https://www.astropy.org'\nlicense: BSD-3-Clause\n\nidentifiers:\n  - type: doi\n    description: Concept DOI\n    value: \"10.5281/zenodo.4670728\"\n  - type: url\n    description: ASCL entry\n    value: https://ascl.net/1304.002\n\n# Associated papers\npreferred-citation:\n  title: >-\n    The Astropy Project: Sustaining and Growing a Community-oriented\n    Open-source Project and the Latest Major Release (v5.0) of the\n    Core Package\n  authors:\n    - name: \"Astropy Collaboration\"\n    - family-names: Price-Whelan\n      given-names: Adrian M.\n      orcid: https://orcid.org/0000-0003-0872-7098\n      affiliation: Center for Computational Astrophysics, Flatiron Institute, 162\n        5th Ave, New York, NY 10010, USA\n    - family-names: Lim\n      given-names: Pey Lian\n      orcid: https://orcid.org/0000-0003-0079-4114\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Earl\n      given-names: Nicholas\n      orcid: https://orcid.org/0000-0003-1714-7415\n      affiliation: Department of Astronomy, University of Illinois at Urbana-Champaign,\n        1002 W. Green St., Urbana, IL 61801 USA\n    - family-names: Starkman\n      given-names: Nathaniel\n      orcid: https://orcid.org/0000-0003-3954-3291\n      affiliation: David A. Dunlap Department of Astronomy & Astrophysics, University\n        of Toronto, 50 St. George Street, Toronto ON M5S 3H4, Canada\n    - family-names: Bradley\n      given-names: Larry\n      orcid: https://orcid.org/0000-0002-7908-9284\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Shupe\n      given-names: David L.\n      orcid: https://orcid.org/0000-0003-4401-0430\n      affiliation: IPAC, MC 100-22, Caltech, 1200E. California Blvd. Pasadena, CA\n        91125\n    - family-names: Patil\n      given-names: Aarya A.\n      orcid: https://orcid.org/0000-0002-7626-506X\n      affiliation: David A. Dunlap Department of Astronomy & Astrophysics, University\n        of Toronto, 50 St. George Street, Toronto ON M5S 3H4, Canada\n    - family-names: Corrales\n      given-names: Lia\n      orcid: https://orcid.org/0000-0002-5466-3817\n      affiliation: University of Michigan Astronomy, 1085 S. University, Ann Arbor\n        MI 48109, United States\n    - family-names: Brasseur\n      given-names: C. E.\n      orcid: https://orcid.org/0000-0002-9314-960X\n      affiliation: School of Physics and Astronomy, University of St Andrews, North\n        Haugh, St Andrews KY16 9SS, Scotland\n    - family-names: Nöthe\n      given-names: Maximilian\n      orcid: https://orcid.org/0000-0001-7993-8189\n      affiliation: Astroparticle Physics, TU Dortmund University, Otto-Hahn-Str. 4a,\n        44227 Dortmund, Germany\n    - family-names: Donath\n      given-names: Axel\n      orcid: https://orcid.org/0000-0003-4568-7005\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Tollerud\n      given-names: Erik\n      orcid: https://orcid.org/0000-0002-9599-310X\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Morris\n      given-names: Brett M.\n      orcid: https://orcid.org/0000-0003-2528-3409\n      affiliation: Center for Space and Habitability, University of Bern, Gesellschaftsstrasse\n        6, 3012 Bern, Switzerland\n    - family-names: Ginsburg\n      given-names: Adam\n      orcid: https://orcid.org/0000-0001-6431-9633\n      affiliation: Department of Astronomy, University of Florida, P.O. Box 112055,\n        Gainesville, FL, USA\n    - family-names: Vaher\n      given-names: Eero\n      affiliation: Lund Observatory, Department of Astronomy and Theoretical Physics,\n        Lund University, Box 43, 22100 Lund, Sweden\n    - family-names: Weaver\n      given-names: Benjamin A.\n      affiliation: NSF's National Optical-Infrared Astronomy Research Laboratory,\n        950 North Cherry Avenue, Tucson, AZ 85719, United States\n    - family-names: Tocknell\n      given-names: James\n      orcid: https://orcid.org/0000-0001-6637-6922\n      affiliation: School of Mathematical and Physical Sciences, Macquarie University,\n        Sydney, NSW 2109, Australia\n    - family-names: Jamieson\n      given-names: William\n      orcid: https://orcid.org/0000-0001-5976-4492\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Kerkwijk\n      given-names: Marten H. van\n      orcid: https://orcid.org/0000-0002-5830-8505\n      affiliation: David A. Dunlap Department of Astronomy & Astrophysics, University\n        of Toronto, 50 St. George Street, Toronto ON M5S 3H4, Canada\n    - family-names: Robitaille\n      given-names: Thomas P.\n      orcid: https://orcid.org/0000-0002-8642-1329\n      affiliation: Aperio Software Ltd., Insight House, Riverside Business Park, Stoney\n        Common Road, Stansted, Essex, CM24 8PL, UK\n    - family-names: Merry\n      given-names: Bruce\n      affiliation: South African Radio Astronomy Observatory, 2 Fir Street, Black\n        River Park, Observatory 7925, South Africa\n    - family-names: Bachetti\n      given-names: Matteo\n      affiliation: Istituto Nazionale di Astrofisica/Osservatorio Astronomico di Cagliari,\n        via della Scienza 5, I-09047 Selargius (CA), Italy\n    - family-names: Günther\n      given-names: H. Moritz\n      orcid: https://orcid.org/0000-0003-4243-2840\n      affiliation: MIT Kavli Institute for Astrophysics and Space Research, 77 Massachusetts\n        Avenue, Cambridge, MA 02139, USA\n    - family-names: Aldcroft\n      given-names: Thomas L.\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Alvarado-Montes\n      given-names: Jaime A.\n      orcid: https://orcid.org/0000-0003-0353-9741\n      affiliation: School of Mathematical and Physical Sciences, Macquarie University,\n        Sydney, NSW 2109, Australia\n    - family-names: Archibald\n      given-names: Anne M.\n      orcid: https://orcid.org/0000-0003-0638-3340\n      affiliation: Newcastle University\n    - family-names: Bódi\n      given-names: Attila\n      orcid: https://orcid.org/0000-0002-8585-4544\n      affiliation: Konkoly Observatory, Research Centre for Astronomy and Earth Sciences\n        (ELKH), H-1121 Budapest, Konkoly Thege Miklós út 15-17, Hungary\n    - family-names: Bapat\n      given-names: Shreyas\n      orcid: https://orcid.org/0000-0002-0870-4665\n      affiliation: School of Computing and Electrical Engineering, Indian Institute\n        of Technology Mandi, Kamand, Mandi (H.P.), 175005, India\n    - family-names: Barentsen\n      given-names: Geert\n      orcid: https://orcid.org/0000-0002-3306-3484\n      affiliation: Bay Area Environmental Research Institute, P.O. Box 25, Moffett\n        Field, CA 94035, USA\n    - family-names: Bazán\n      given-names: Juanjo\n      orcid: https://orcid.org/0000-0001-7699-3983\n      affiliation: CIEMAT, Astroparticle physics, Madrid, Spain\n    - family-names: Biswas\n      given-names: Manish\n      affiliation: Savitribai Phule Pune University, Pune, Maharashtra, India\n    - family-names: Boquien\n      given-names: Médéric\n      orcid: https://orcid.org/0000-0003-0946-6176\n      affiliation: Centro de Astronomía (CITEVA), Universidad de Antofagasta, Avenida\n        Angamos 601, Antofagasta, Chile\n    - family-names: Burke\n      given-names: D. J.\n      orcid: https://orcid.org/0000-0003-4428-7835\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Cara\n      given-names: Daria\n      orcid: https://orcid.org/0000-0003-3833-1668\n      affiliation: Wake Forest University, 1834 Wake Forest Rd, Winston-Salem, NC,\n        27109, USA\n    - family-names: Cara\n      given-names: Mihai\n      orcid: https://orcid.org/0000-0002-9294-6551\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Conroy\n      given-names: Kyle E\n      orcid: https://orcid.org/0000-0002-5442-8550\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Conseil\n      given-names: Simon\n      orcid: https://orcid.org/0000-0002-3657-4191\n      affiliation: Aix Marseille Univ, CNRS, CNES, LAM, Marseille, France\n    - family-names: Craig\n      given-names: Matthew W.\n      orcid: https://orcid.org/0000-0001-7988-8919\n      affiliation: Department of Physics and Astronomy, Minnesota State University\n        Moorhead, Moorhead, MN 56563\n    - family-names: Cross\n      given-names: Robert M.\n      orcid: https://orcid.org/0000-0003-0081-8024\n      affiliation: Independent Astropy Contributor\n    - family-names: Cruz\n      given-names: Kelle L.\n      orcid: https://orcid.org/0000-0002-1821-0650\n      affiliation: Hunter College, Physics and Astronomy, 695 Park Avenue, New York,\n        NY 10065\n    - family-names: D'Eugenio\n      given-names: Francesco\n      orcid: https://orcid.org/0000-0003-2388-8172\n      affiliation: Cavendish Laboratory and Kavli Institute for Cosmology, University\n        of Cambridge, Madingley Rise, Cambridge, CB3 0HA, United Kingdom\n    - family-names: Dencheva\n      given-names: Nadia\n      orcid: https://orcid.org/0000-0002-5686-9632\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Devillepoix\n      given-names: Hadrien A. R.\n      orcid: https://orcid.org/0000-0001-9226-1870\n      affiliation: School of Earth and Planetary Sciences, Curtin University, Perth\n        WA 6845, Australia\n    - family-names: Dietrich\n      given-names: Jörg P.\n      orcid: https://orcid.org/0000-0002-8134-9591\n      affiliation: Arndtstr. 10, 55124 Mainz, Germany\n    - family-names: Eigenbrot\n      given-names: Arthur Davis\n      orcid: https://orcid.org/0000-0003-0810-4368\n      affiliation: National Solar Observatory, 3665 Discovery Drive, Boulder CO. 80303\n    - family-names: Erben\n      given-names: Thomas\n      affiliation: Argelander-Institut für Astronomie (University of Bonn), Auf dem\n        Hügel 71, 53121 Bonn, Germany\n    - family-names: Ferreira\n      given-names: Leonardo\n      orcid: https://orcid.org/0000-0002-8919-079X\n      affiliation: Centre for Astronomy and Particle Physics, University of Nottingham,\n        Nottingham, UK\n    - family-names: Foreman-Mackey\n      given-names: Daniel\n      orcid: https://orcid.org/0000-0002-9328-5652\n      affiliation: Center for Computational Astrophysics, Flatiron Institute, 162\n        5th Ave, New York, NY 10010, USA\n    - family-names: Fox\n      given-names: Ryan\n      affiliation: Independent Astropy Contributor\n    - family-names: Freij\n      given-names: Nabil\n      orcid: https://orcid.org/0000-0002-6253-082X\n      affiliation: Bay Area Environmental Research Institute, P.O. Box 25, Moffett\n        Field, CA 94035, USA\n    - family-names: Garg\n      given-names: Suyog\n      orcid: https://orcid.org/0000-0002-2309-9731\n      affiliation: Department of Physics, The University of Tokyo, Bunkyo-ku, Tokyo\n        113-0033, Japan\n    - family-names: Geda\n      given-names: Robel\n      orcid: https://orcid.org/0000-0003-1509-9966\n      affiliation: Department of Astrophysical Sciences, 4 Ivy Lane, Princeton University,\n        Princeton, NJ 08544, USA\n    - family-names: Glattly\n      given-names: Lauren\n      affiliation: ScienceBetter Consulting, LLC, 4 West 101st Street, No.29, New\n        York, NY 10025\n    - family-names: Gondhalekar\n      given-names: Yash\n      orcid: https://orcid.org/0000-0002-6646-4225\n      affiliation: BITS Pilani/Computer Science, Sancoale, Goa 403726, India\n    - family-names: Gordon\n      given-names: Karl D.\n      orcid: https://orcid.org/0000-0001-5340-6774\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Grant\n      given-names: David\n      orcid: https://orcid.org/0000-0001-5878-618X\n      affiliation: University of Oxford, Department of Physics, Keble Road, Oxford,\n        OX1 3RH, UK\n    - family-names: Greenfield\n      given-names: Perry\n      orcid: https://orcid.org/0000-0003-2269-0551\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Groener\n      given-names: Austen M.\n      orcid: https://orcid.org/0000-0002-6508-2938\n      affiliation: Drexel University Department of Physics, 816 Disque Hall 32 S.\n        32nd Street Philadelphia, PA 19104\n    - family-names: Guest\n      given-names: Steve\n      affiliation: RAL Space, STFC Rutherford Appleton Laboratory, Harwell, Didcot\n        OX11 0QX, UK\n    - family-names: Gurovich\n      given-names: Sebastian\n      orcid: https://orcid.org/0000-0001-5848-4077\n      affiliation: Instituto De Astronomía Teórica y Experimental - Observatorio Astronómico\n        Córdoba( IATEOACUNCCONICET), Córdoba, Argentina\n    - family-names: Handberg\n      given-names: Rasmus\n      orcid: https://orcid.org/0000-0001-8725-4502\n      affiliation: Stellar Astrophysics Centre, Department of Physics and Astronomy,\n        Aarhus University, Ny Munkegade 120, DK-8000 Aarhus C, Denmark.\n    - family-names: Hart\n      given-names: Akeem\n      orcid: https://orcid.org/0000-0002-8138-1479\n      affiliation: Independent Astropy Contributor\n    - family-names: Hatfield-Dodds\n      given-names: Zac\n      orcid: https://orcid.org/0000-0002-8646-8362\n      affiliation: Australian National University, Canberra, Australia\n    - family-names: Homeier\n      given-names: Derek\n      orcid: https://orcid.org/0000-0002-8546-9128\n      affiliation: Aperio Software Ltd., Insight House, Riverside Business Park, Stoney\n        Common Road, Stansted, Essex, CM24 8PL, UK\n    - family-names: Hosseinzadeh\n      given-names: Griffin\n      orcid: https://orcid.org/0000-0002-0832-2974\n      affiliation: Steward Observatory, University of Arizona, 933 North Cherry Avenue,\n        Tucson, AZ 85721-0065, USA\n    - family-names: Jenness\n      given-names: Tim\n      orcid: https://orcid.org/0000-0001-5982-167X\n      affiliation: Vera C. Rubin Observatory, 950 N. Cherry Ave, Tucson, AZ 85719\n    - family-names: Jones\n      given-names: Craig K.\n      orcid: https://orcid.org/0000-0002-0629-3006\n      affiliation: The Malone Center for Healthcare in Engineering, Johns Hopkins\n        University\n    - family-names: Joseph\n      given-names: Prajwel\n      orcid: https://orcid.org/0000-0003-1409-1903\n      affiliation: Indian Institute of Astrophysics, Bangalore 560034, India\n    - family-names: Kalmbach\n      given-names: J. Bryce\n      orcid: https://orcid.org/0000-0002-6825-5283\n      affiliation: DIRAC Institute, Department of Astronomy, University of Washington,\n        Box 351580, Seattle, WA 98195\n    - family-names: Karamehmetoglu\n      given-names: Emir\n      orcid: https://orcid.org/0000-0001-6209-838X\n      affiliation: Aarhus University, Department of Physics and Astronomy, Ny Munkegade\n        120, DK-8000 Aarhus C, Denmark\n    - family-names: Kałuszyński\n      given-names: ' Mikołaj'\n      orcid: https://orcid.org/0000-0003-0109-5833\n      affiliation: Nicolaus Copernicus Astronomical Center, Polish Academy of Sciences,\n        Bartycka 18, 00-716 Warsaw, Poland\n    - family-names: Kelley\n      given-names: Michael S. P.\n      orcid: https://orcid.org/0000-0002-6702-7676\n      affiliation: Department of Astronomy, University of Maryland, 4296 Stadium Drive,\n        College Park, MD 20742-0001\n    - family-names: Kern\n      given-names: Nicholas\n      orcid: https://orcid.org/0000-0002-8211-1892\n      affiliation: Massachusetts Institute of Technology / Dept. of Physics, 182 Memorial\n        Dr, Cambridge, USA\n    - family-names: Kerzendorf\n      given-names: Wolfgang E.\n      orcid: https://orcid.org/0000-0002-0479-7235\n      affiliation: Department of Physics & Astronomy/Computational Mathematics, Science,\n        and Engineering, Michigan State University, East Lansing, MI 48824, USA\n    - family-names: Koch\n      given-names: Eric W.\n      orcid: https://orcid.org/0000-0001-9605-780X\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Kulumani\n      given-names: Shankar\n      orcid: https://orcid.org/0000-0002-7822-0471\n      affiliation: Johns Hopkins University Applied Physics Laboratory, Laurel, MD\n        USA\n    - family-names: Lee\n      given-names: Antony\n      orcid: https://orcid.org/0000-0003-2193-5369\n      affiliation: Laboratoire Photonique, Numérique et Nanosciences UMR 5298, Université\n        de Bordeaux, Institut d'Optique, CNRS, 33400 Talence, France\n    - family-names: Ly\n      given-names: Chun\n      orcid: https://orcid.org/0000-0002-4245-2318\n      affiliation: Steward Observatory, University of Arizona, 933 North Cherry Avenue,\n        Tucson, AZ 85721-0065, USA\n    - family-names: Ma\n      given-names: Zhiyuan\n      orcid: https://orcid.org/0000-0003-3270-6844\n      affiliation: Department of Astronomy, University of Massachusetts - Amherst,\n        710 North Pleasant Street, Amherst, MA 01003, USA\n    - family-names: MacBride\n      given-names: Conor\n      orcid: https://orcid.org/0000-0002-9901-8723\n      affiliation: Astrophysics Research Centre, School of Mathematics and Physics,\n        Queen's University Belfast, Belfast, BT7 1NN, UK\n    - family-names: Maljaars\n      given-names: Jakob M.\n      orcid: https://orcid.org/0000-0001-8100-9514\n      affiliation: Science & Technology Corporation, Delft, The Netherlands\n    - family-names: Muna\n      given-names: Demitri\n      orcid: https://orcid.org/0000-0002-1631-4114\n      affiliation: Department of Physics and Astronomy, University of Texas at San\n        Antonio, USA\n    - family-names: Murphy\n      given-names: N. A.\n      orcid: https://orcid.org/0000-0001-6628-8033\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Norman\n      given-names: Henrik\n      orcid: https://orcid.org/0000-0003-4189-3450\n      affiliation: Winter Way, Lerum, Sweden\n    - family-names: O'Steen\n      given-names: Richard\n      orcid: https://orcid.org/0000-0002-2432-8946\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Oman\n      given-names: Kyle A.\n      orcid: https://orcid.org/0000-0001-9857-7788\n      affiliation: Institute for Computational Cosmology, Durham University, South\n        Road, Durham DH1 3LE, United Kingdom\n    - family-names: Pacifici\n      given-names: Camilla\n      affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n        MD 21218, USA\n    - family-names: Pascual\n      given-names: Sergio\n      orcid: https://orcid.org/0000-0002-9351-6051\n      affiliation: Departamento de Física de la Tierra y Astrofísica, Fac. CC. Físicas,\n        Universidad Complutense de Madrid, E28040, Madrid, Spain\n    - family-names: Pascual-Granado\n      given-names: J.\n      orcid: https://orcid.org/0000-0003-0139-6951\n      affiliation: Instituto de Astrofísica de Andalucía (CSIC). Glorieta de la Astronomía\n        s/n. 18008, Granada, Spain\n    - family-names: Patil\n      given-names: Rohit R.\n      orcid: https://orcid.org/0000-0002-5923-4966\n      affiliation: Syracuse University, Syracuse, NY, USA\n    - family-names: Perren\n      given-names: Gabriel I\n      orcid: https://orcid.org/0000-0002-1852-9653\n      affiliation: Instituto de Astrofísica de La Plata, IALP (CONICET-UNLP), 1900\n        La Plata, Argentina\n    - family-names: Pickering\n      given-names: Timothy E.\n      orcid: https://orcid.org/0000-0002-9427-5448\n      affiliation: MMT Observatory, Tucson, AZ, USA\n    - family-names: Rastogi\n      given-names: Tanuj\n      affiliation: Independent Astropy Contributor\n    - family-names: Roulston\n      given-names: Benjamin R.\n      orcid: https://orcid.org/0000-0002-9453-7735\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Ryan\n      given-names: Daniel F\n      orcid: https://orcid.org/0000-0001-8661-3825\n      affiliation: University of Applied Sciences and Arts Northwest Switzerland,\n        Bahnhofstrasse 6, 5210 Windisch, Switzerland\n    - family-names: Rykoff\n      given-names: Eli S.\n      orcid: https://orcid.org/0000-0001-9376-3135\n      affiliation: SLAC National Accelerator Laboratory, Menlo Park, CA 94025, USA\n    - family-names: Sabater\n      given-names: Jose\n      orcid: https://orcid.org/0000-0003-1149-6294\n      affiliation: STFC UK Astronomy Technology Centre, Royal Observatory, Blackford\n        Hill, Edinburgh, EH9 3HJ, UK\n    - family-names: Sakurikar\n      given-names: Parikshit\n      orcid: https://orcid.org/0000-0002-9523-5640\n      affiliation: International Institute of Information Technology, Hyderabad, India\n    - family-names: Salgado\n      given-names: Jesús\n      orcid: https://orcid.org/0000-0002-3680-4364\n      affiliation: SKAO Observatory, Jodrell Bank, Cheshire, UK\n    - family-names: Sanghi\n      given-names: Aniket\n      orcid: https://orcid.org/0000-0002-1838-4757\n      affiliation: Department of Astronomy, The University of Texas at Austin, 2515\n        Speedway, C1400, Austin, TX 78712, USA\n    - family-names: Saunders\n      given-names: Nicholas\n      orcid: https://orcid.org/0000-0003-2657-3889\n      affiliation: Institute for Astronomy, University of Hawaiʻi at Māaanoa, 2680\n        Woodlawn Drive, Honolulu, HI 96822, USA\n    - family-names: Savchenko\n      given-names: Volodymyr\n      orcid: https://orcid.org/0000-0001-6353-0808\n      affiliation: Department of Astronomy, University of Geneva, Chemin d'Écogia,\n        16 CH-1290 Versoix, Switzerland\n    - family-names: Schwardt\n      given-names: Ludwig\n      affiliation: South African Radio Astronomy Observatory, 2 Fir Street, Black\n        River Park, Observatory 7925, South Africa\n    - family-names: Seifert-Eckert\n      given-names: Michael\n      affiliation: Independent Astropy Contributor\n    - family-names: Shih\n      given-names: Albert Y.\n      orcid: https://orcid.org/0000-0001-6874-2594\n      affiliation: NASA Goddard Space Flight Center, 8800 Greenbelt Road, Greenbelt,\n        MD 20771, USA\n    - family-names: Jain\n      given-names: Anany Shrey\n      affiliation: Independent Astropy Contributor\n    - family-names: Shukla\n      given-names: Gyanendra\n      orcid: https://orcid.org/0000-0001-9268-3803\n      affiliation: Maulana Azad National Institute Of Technology, Bhopal, India\n    - family-names: Sick\n      given-names: Jonathan\n      orcid: https://orcid.org/0000-0003-3001-676X\n      affiliation: J.Sick Codes Inc., Penetanguishene ON Canada\n    - family-names: Simpson\n      given-names: Chris\n      orcid: https://orcid.org/0000-0001-8589-4055\n      affiliation: Gemini Observatory/NSF's NOIRLab, 670 N. A`ohoku Place, Hilo HI\n        96720\n    - family-names: Singanamalla\n      given-names: Sudheesh\n      orcid: https://orcid.org/0000-0003-2462-7273\n      affiliation: Paul G. Allen School of Computer Science and Engineering, University\n        of Washington, Seattle, WA, USA\n    - family-names: Singer\n      given-names: Leo P.\n      orcid: https://orcid.org/0000-0001-9898-5597\n      affiliation: Astroparticle Physics Laboratory, NASA Goddard Space Flight Center,\n        Code 661, Greenbelt, MD 20771, USA\n    - family-names: Singhal\n      given-names: Jaladh\n      orcid: https://orcid.org/0000-0002-8310-0829\n      affiliation: TARDIS collaboration\n    - family-names: Sinha\n      given-names: Manodeep\n      orcid: https://orcid.org/0000-0002-4845-1228\n      affiliation: Centre for Astrophysics & Supercomputing, Swinburne University\n        of Technology, Hawthorn, VIC 3122, Australia\n    - family-names: Sipőcz\n      given-names: Brigitta M.\n      orcid: https://orcid.org/0000-0002-3713-6337\n      affiliation: IPAC, MC 100-22, Caltech, 1200E. California Blvd. Pasadena, CA\n        91125\n    - family-names: Spitler\n      given-names: Lee R.\n      orcid: https://orcid.org/0000-0001-5185-9876\n      affiliation: School of Mathematical and Physical Sciences, Macquarie University,\n        Sydney, NSW 2109, Australia\n    - family-names: Stansby\n      given-names: David\n      orcid: https://orcid.org/0000-0002-1365-1908\n      affiliation: Mullard Space Science Laboratory, University College London, Holmbury\n        St. Mary, Surrey, RH5 6NT, UK\n    - family-names: Streicher\n      given-names: Ole\n      orcid: https://orcid.org/0000-0001-7751-1843\n      affiliation: Leibniz Institute for Astrophysics, An der Sternwarte 16, 14482\n        Potsdam, Germany\n    - family-names: Šumak\n      given-names: Jani\n      affiliation: Independent Astropy Contributor\n    - family-names: Swinbank\n      given-names: John D.\n      orcid: https://orcid.org/0000-0001-9445-1846\n      affiliation: ASTRON, Oude Hoogeveensedijk 4, 7991 PD Dwingeloo, The Netherlands\n    - family-names: Taranu\n      given-names: Dan S.\n      orcid: https://orcid.org/0000-0001-6268-1882\n      affiliation: Department of Astrophysical Sciences, 4 Ivy Lane, Princeton University,\n        Princeton, NJ 08544, USA\n    - family-names: Tewary\n      given-names: Nikita\n      affiliation: Bharati Vidyapeeth's College of Engineering/ Electronics and Communication\n        Department, A-4 Block, Baba Ramdev Marg, Shiva Enclave, Paschim Vihar, New\n        Delhi, 110063\n    - family-names: Tremblay\n      given-names: Grant R.\n      orcid: https://orcid.org/0000-0002-5445-5401\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Val-Borro\n      given-names: Miguel de\n      orcid: https://orcid.org/0000-0002-0455-9384\n      affiliation: Planetary Science Institute, 1700 East Fort Lowell, Tucson, AZ\n        85719\n    - family-names: Kooten\n      given-names: Samuel J. Van\n      orcid: https://orcid.org/0000-0002-4472-8517\n      affiliation: Southwest Research Institute, 1050 Walnut St. Ste 300, Boulder\n        CO 80302, USA\n    - family-names: Vasović\n      given-names: Zlatan\n      affiliation: Faculty of Physics, University of Belgrade, Studentski trg 12-16,\n        Belgrade, Serbia\n    - family-names: Verma\n      given-names: Shresth\n      orcid: https://orcid.org/0000-0003-0370-5471\n      affiliation: Atal Bihari Vajpayee Indian institute of Information Technology\n        and Management Gwalior, MP, India\n    - family-names: Cardoso\n      given-names: José Vinícius de Miranda\n      orcid: https://orcid.org/0000-0001-5410-5551\n      affiliation: The Hong Kong University of Science and Technology, Department\n        of Electronic and Computer Engineering, Hong Kong SAR China\n    - family-names: Williams\n      given-names: Peter K. G.\n      orcid: https://orcid.org/0000-0003-3734-3587\n      affiliation: Center for Astrophysics | Harvard & Smithsonian, 60 Garden Street,\n        Cambridge, MA, 02138, USA\n    - family-names: Wilson\n      given-names: Tom J.\n      orcid: https://orcid.org/0000-0001-6352-9735\n      affiliation: School of Physics, University of Exeter, Stocker Road, Exeter,\n        EX4 4QL, UK\n    - family-names: Winkel\n      given-names: Benjamin\n      orcid: https://orcid.org/0000-0001-6999-3635\n      affiliation: Max-Planck-Institut für Radioastronomie, Auf dem Hügel 69, 53121\n        Bonn, Germany\n    - family-names: Wood-Vasey\n      given-names: W. M.\n      orcid: https://orcid.org/0000-0001-7113-1233\n      affiliation: Pittsburgh Particle Physics, Astrophysics, and Cosmology Center\n        (PITT PACC). Physics and Astronomy Department, University of Pittsburgh, Pittsburgh,\n        PA 15260, USA\n    - family-names: Xue\n      given-names: Rui\n      orcid: https://orcid.org/0000-0001-7689-9305\n      affiliation: National Radio Astronomy Observatory, 520 Edgemont Road, Charlottesville,\n        VA 22903, USA\n    - family-names: Yoachim\n      given-names: Peter\n      orcid: https://orcid.org/0000-0003-2874-6464\n      affiliation: Department of Astronomy, University of Washington, Seattle, WA\n        98195, USA\n    - family-names: ZHANG\n      given-names: Chen\n      orcid: https://orcid.org/0000-0002-9583-263X\n      affiliation: Purple Mountain Observatory, CAS, Qixia District, Nanjing 210023,\n        China\n    - family-names: Zonca\n      given-names: Andrea\n      orcid: https://orcid.org/0000-0001-6841-1058\n      affiliation: San Diego Supercomputer Center, University of California San Diego,\n        9500 Gilman Dr, La Jolla, CA 92093, USA\n  abstract: >-\n    The Astropy Project supports and fosters the development of\n    open-source and openly developed Python packages that provide\n    commonly needed functionality to the astronomical community. A key\n    element of the Astropy Project is the core package astropy, which\n    serves as the foundation for more specialized projects and\n    packages. In this article, we summarize key features in the core\n    package as of the recent major release, version 5.0, and provide\n    major updates on the Project. We then discuss supporting a broader\n    ecosystem of interoperable packages, including connections with\n    several astronomical observatories and missions. We also revisit\n    the future outlook of the Astropy Project and the current status\n    of Learn Astropy.  We conclude by raising and discussing the\n    current and future challenges facing the Project.\n  keywords:\n    - Astronomy software\n    - Open source software\n    - Astronomy data analysis\n    - \"Astrophysics - Instrumentation and Methods for Astrophysics\"\n  type: article\n  journal: \"The Astrophysical Journal\"\n  volume: 935\n  issue: 2\n  pages: 20\n  year: 2022\n  identifiers:\n    - description: ADS bibcode\n      type: url\n      value: \"https://ui.adsabs.harvard.edu/abs/2022ApJ...935..167A\"\n    - description: The Astrophysical Journal\n      type: doi\n      value: 10.3847/1538-4357/ac7c74\n    - description: arXiv\n      type: doi\n      value: 10.48550/arXiv.2206.14220\n    - description: Publisher PDF (open access)\n      type: url\n      value: \"https://iopscience.iop.org/article/10.3847/1538-4357/ac7c74/pdf\"\n    - description: ArXiv eprint (open access)\n      type: url\n      value: \"https://arxiv.org/pdf/2206.14220.pdf\"\n\nreferences:\n  - title: >-\n      The Astropy Project: Building an Open-science Project and Status\n      of the v2.0 Core Package\n    authors:\n      - name: \"Astropy Collaboration\"\n      - family-names: Price-Whelan\n        given-names: A. M.\n        orcid: https://orcid.org/0000-0003-0872-7098\n        affiliation: Department of Astrophysical Sciences, Princeton University, Princeton,\n          NJ 08544, USA\n      - family-names: Sipőcz\n        given-names: B. M.\n        orcid: https://orcid.org/0000-0002-3713-6337\n        affiliation: Institute of Astronomy, University of Cambridge, Madingley Road, Cambridge, CB3 0HA, UK\n      - family-names: Günther\n        given-names: H. M.\n        orcid: https://orcid.org/0000-0003-4243-2840\n        affiliation: Kavli Institute for Astrophysics and Space Research, Massachusetts\n          Institute of Technology, 70 Vassar St., Cambridge, MA 02139, USA\n      - family-names: Lim\n        given-names: P. L.\n        orcid: https://orcid.org/0000-0003-0079-4114\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Crawford\n        given-names: S. M.\n        orcid: https://orcid.org/0000-0002-8969-5229\n        affiliation: South African Astronomical Observatory, PO Box 9, Observatory\n          7935, Cape Town, South Africa\n      - family-names: Conseil\n        given-names: S.\n        orcid: https://orcid.org/0000-0002-3657-4191\n        affiliation: Univ Lyon, Univ Lyon1, Ens de Lyon, CNRS, Centre de Recherche\n          Astrophysique de Lyon UMR5574, F-69230, Saint-Genis-Laval, France\n      - family-names: Shupe\n        given-names: D. L.\n        orcid: https://orcid.org/0000-0003-4401-0430\n        affiliation: Caltech/IPAC, 1200 E. California Blvd, Pasadena, CA 91125\n      - family-names: Craig\n        given-names: M. W.\n        orcid: https://orcid.org/0000-0001-7988-8919\n        affiliation: Department of Physics and Astronomy, Minnesota State University\n          Moorhead, 1104 7th Ave S, Moorhead, MN 56563\n      - family-names: Dencheva\n        given-names: N.\n        orcid: https://orcid.org/0000-0002-5686-9632\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Ginsburg\n        given-names: A.\n        orcid: https://orcid.org/0000-0001-6431-9633\n        affiliation: National Radio Astronomy Observatory, 1003 Lopezville Rd, Socorro,\n          NM 87801\n      - family-names: VanderPlas\n        given-names: J. T.\n        orcid: https://orcid.org/0000-0002-9623-3401\n        affiliation: eScience Institute, University of Washington, 3910 15th Ave NE,\n          Seattle, WA 98195, USA\n      - family-names: Bradley\n        given-names: L. D.\n        orcid: https://orcid.org/0000-0002-7908-9284\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Pérez-Suárez\n        given-names: D.\n        orcid: https://orcid.org/0000-0003-0784-6909\n        affiliation: University College London/Research IT Services, Gower St, Bloomsbury,\n          London WC1E 6BT, United Kingdom\n      - family-names: Val-Borro\n        given-names: M. de\n        orcid: https://orcid.org/0000-0002-0455-9384\n        affiliation: Astrochemistry Laboratory, NASA Goddard Space Flight Center,\n          8800 Greenbelt Road, Greenbelt, MD 20771, USA\n      - family-names: Aldcroft\n        given-names: T. L.\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden St., Cambridge,\n          MA, 02138, USA\n      - family-names: Cruz\n        given-names: K. L.\n        orcid: https://orcid.org/0000-0002-1821-0650\n        affiliation: Department of Physics and Astronomy, Hunter College, City University\n          of New York, 695 Park Avenue, New York, NY 10065\n      - family-names: Robitaille\n        given-names: T. P.\n        orcid: https://orcid.org/0000-0002-8642-1329\n        affiliation: Aperio Software Ltd., Headingley Enterprise and Arts Centre,\n          Bennett Road, Leeds, LS6 3HN, United Kingdom\n      - family-names: Tollerud\n        given-names: E. J.\n        orcid: https://orcid.org/0000-0002-9599-310X\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Ardelean\n        given-names: C.\n        affiliation: Department of Physics & Astronomy, University of Western Ontario,\n          1151 Richmond St, London ON N5X4H1 Canada\n      - family-names: Babej\n        given-names: T.\n        orcid: https://orcid.org/0000-0002-8222-3595\n        affiliation: Department of Theoretical Physics & Astrophysics, Masaryk University,\n          Kotlarska 2, 61137 Brno, Czech Republic\n      - family-names: Bach\n        given-names: Y. P.\n        orcid: https://orcid.org/0000-0002-2618-1124\n        affiliation: Department of Physics and Astronomy, Seoul National University,\n          Gwanak-gu, Seoul 08826, South Korea\n      - family-names: Bachetti\n        given-names: M.\n        orcid: https://orcid.org/0000-0002-4576-9337\n        affiliation: INAF-Osservatorio Astronomico di Cagliari, via della Scienza\n          5, I-09047, Selargius, Italy\n      - family-names: Bakanov\n        given-names: A. V.\n      - family-names: Bamford\n        given-names: S. P.\n        orcid: https://orcid.org/0000-0001-7821-7195\n        affiliation: School of Physics & Astronomy, University of Nottingham, University\n          Park, Nottingham NG7 2RD, UK\n      - family-names: Barentsen\n        given-names: G.\n        orcid: https://orcid.org/0000-0002-3306-3484\n        affiliation: NASA Ames Research Center, Moffett Field, CA 94043, USA\n      - family-names: Barmby\n        given-names: P.\n        orcid: https://orcid.org/0000-0003-2767-0090\n        affiliation: Department of Physics & Astronomy, University of Western Ontario,\n          1151 Richmond St, London ON N5X4H1 Canada\n      - family-names: Baumbach\n        given-names: A.\n        orcid: https://orcid.org/0000-0002-9374-2729\n        affiliation: Heidelberg University, Kirchhoff Institut for Physics, Im Neuenheimer\n          Feld 227, 69116 Heidelberg, Germany\n      - family-names: Berry\n        given-names: K. L.\n      - family-names: Biscani\n        given-names: F.\n        affiliation: Max-Planck-Institut für Astronomie, Königstuhl 17, 69117 Heidelberg,\n          Germany\n      - family-names: Boquien\n        given-names: M.\n        orcid: https://orcid.org/0000-0003-0946-6176\n        affiliation: Unidad de Astronomía, Fac. Cs. Básicas, Universidad de Antofagasta,\n          Avda. U. de Antofagasta 02800, Antofagasta, Chile\n      - family-names: Bostroem\n        given-names: K. A.\n        affiliation: Department of Physics, UC Davis, 1 Shields Ave, Davis, CA, 95616,\n          USA\n      - family-names: Bouma\n        given-names: L. G.\n        affiliation: Department of Astrophysical Sciences, Princeton University, Princeton,\n          NJ 08544, USA\n      - family-names: Brammer\n        given-names: G. B.\n        orcid: https://orcid.org/0000-0003-2680-005X\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Bray\n        given-names: E. M.\n      - family-names: Breytenbach\n        given-names: H.\n        orcid: https://orcid.org/0000-0001-5391-2386\n        affiliation: South African Astronomical Observatory, PO Box 9, Observatory\n          7935, Cape Town, South Africa\n      - family-names: Buddelmeijer\n        given-names: H.\n        orcid: https://orcid.org/0000-0001-8001-0089\n        affiliation: Leiden Observatory, Leiden University, P.O. Box 9513, 2300 RA,\n          Leiden, The Netherlands\n      - family-names: Burke\n        given-names: D. J.\n        orcid: https://orcid.org/0000-0003-4428-7835\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden St., Cambridge,\n          MA, 02138, USA\n      - family-names: Calderone\n        given-names: G.\n        orcid: https://orcid.org/0000-0002-7738-5389\n        affiliation: Istituto Nazionale di Astrofisica, via Tiepolo 11 Trieste, Italy\n      - family-names: Rodríguez\n        given-names: J. L. Cano\n        orcid: https://orcid.org/0000-0002-2187-161X\n      - family-names: Cara\n        given-names: M.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Cardoso\n        given-names: J. V. M.\n        affiliation: Universidade Federal de Campina Grande, Campina Grande, PB 58429-900,\n          Brazil\n      - family-names: Cheedella\n        given-names: S.\n        affiliation: Department of Physics, Virginia Tech, Blacksburg, VA 24061, USA\n      - family-names: Copin\n        given-names: Y.\n        orcid: https://orcid.org/0000-0002-5317-7518\n        affiliation: Université de Lyon, F-69622, Lyon, France; Université de Lyon\n          1, Villeurbanne; CNRS/IN2P3, Institut de Physique Nucléaire de Lyon\n      - family-names: Corrales\n        given-names: 'L. '\n        orcid: https://orcid.org/0000-0002-5466-3817\n        affiliation: University of Wisconsin - Madison, 475 North Charter Street,\n          Madison, WI 53706\n      - family-names: Crichton\n        given-names: D.\n        orcid: https://orcid.org/0000-0003-1204-3035\n        affiliation: Department of Physics and Astronomy, Johns Hopkins University,\n          Baltimore, MD 21218, USA\n      - family-names: D'Avella\n        given-names: D.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Deil\n        given-names: C.\n        orcid: https://orcid.org/0000-0002-4198-4005\n        affiliation: Max-Planck-Institut für Kernphysik, PO Box 103980, 69029 Heidelberg,\n          Germany\n      - family-names: Depagne\n        given-names: É.\n        orcid: https://orcid.org/0000-0003-0526-3873\n        affiliation: South African Astronomical Observatory, PO Box 9, Observatory\n          7935, Cape Town, South Africa\n      - family-names: Dietrich\n        given-names: J. P.\n        orcid: https://orcid.org/0000-0002-8134-9591\n        affiliation: Faculty of Physics, Ludwig-Maximilians-Universität, Scheinerstr.\n          1, 81679 Munich, Germany\n      - family-names: Donath\n        given-names: A.\n        affiliation: Max-Planck-Institut für Kernphysik, PO Box 103980, 69029 Heidelberg,\n          Germany\n      - family-names: Droettboom\n        given-names: M.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Earl\n        given-names: N.\n        orcid: https://orcid.org/0000-0003-1714-7415\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Erben\n        given-names: T.\n        affiliation: Argelander-Institut für Astronomie, Auf dem Hügel 71, 53121 Bonn,\n          Germany\n      - family-names: Fabbro\n        given-names: S.\n      - family-names: Ferreira\n        given-names: L. A.\n        orcid: https://orcid.org/0000-0002-8919-079X\n        affiliation: Instituto de Matemática Estatística e Física – IMEF, Universidade\n          Federal do Rio Grande – FURG, Rio Grande, RS 96203-900, Brazil\n      - family-names: Finethy\n        given-names: T.\n      - family-names: Fox\n        given-names: R. T.\n        orcid: https://orcid.org/0000-0003-4291-1091\n      - family-names: Garrison\n        given-names: L. H.\n        orcid: https://orcid.org/0000-0002-9853-5673\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden St., Cambridge,\n          MA, 02138, USA\n      - family-names: Gibbons\n        given-names: S. L. J.\n        affiliation: Institute of Astronomy, University of Cambridge, Madingley Road,\n          Cambridge, CB3 0HA, UK\n      - family-names: Goldstein\n        given-names: D. A.\n        affiliation: 'Department of Astronomy, UC Berkeley, 501 Campbell Hall #3411,\n          Berkeley, CA 94720, USA'\n      - family-names: Gommers\n        given-names: R.\n        orcid: https://orcid.org/0000-0002-0300-3333\n        affiliation: Scion, Private Bag 3020, Rotorua, New Zealand\n      - family-names: Greco\n        given-names: J. P.\n        orcid: https://orcid.org/0000-0003-4970-2874\n        affiliation: Department of Astrophysical Sciences, Princeton University, Princeton,\n          NJ 08544, USA\n      - family-names: Greenfield\n        given-names: P.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Groener\n        given-names: A. M.\n        orcid: https://orcid.org/0000-0002-6508-2938\n        affiliation: Drexel University, Physics Department, Philadelphia, PA 19104,\n          USA\n      - family-names: Grollier\n        given-names: F.\n      - family-names: Hagen\n        given-names: A.\n        orcid: https://orcid.org/0000-0003-2031-7737\n        affiliation: Vizual.ai, 3600 O'Donnell St, Suite 250, Baltimore, MD 21224\n      - family-names: Hirst\n        given-names: P.\n        affiliation: Gemini Observatory, 670 N. Aohoku Pl, Hilo, HI 96720, USA\n      - family-names: Homeier\n        given-names: D.\n        orcid: https://orcid.org/0000-0002-8546-9128\n        affiliation: Zentrum für Astronomie der Universität Heidelberg, Landessternwarte,\n          Königstuhl 12, 69117 Heidelberg, Germany\n      - family-names: Horton\n        given-names: A. J.\n        orcid: https://orcid.org/0000-0002-4600-7852\n        affiliation: Australian Astronomical Observatory, 105 Delhi Road, North Ryde\n          NSW 2113, Australia\n      - family-names: Hosseinzadeh\n        given-names: G.\n        orcid: https://orcid.org/0000-0002-0832-2974\n        affiliation: Las Cumbres Observatory, 6740 Cortona Drive, Suite 102, Goleta,\n          CA 93117-5575, USA\n      - family-names: Hu\n        given-names: L.\n        affiliation: Imperial College London,  Kensington, London SW7 2AZ, United\n          Kingdom\n      - family-names: Hunkeler\n        given-names: J. S.\n        orcid: https://orcid.org/0000-0003-4989-0289\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Ivezić\n        given-names: Ž.\n        orcid: https://orcid.org/0000-0001-5250-2633\n        affiliation: Department of Astronomy, University of Washington, Seattle, WA\n          98155\n      - family-names: Jain\n        given-names: A.\n        affiliation: BITS PILANI/Computer Science, Pilani Campus, Rajasthan, India\n      - family-names: Jenness\n        given-names: T.\n        orcid: https://orcid.org/0000-0001-5982-167X\n        affiliation: Large Synoptic Survey Telescope, 950 N. Cherry Ave., Tucson,\n          AZ, 85719, USA\n      - family-names: Kanarek\n        given-names: G.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Kendrew\n        given-names: S.\n        orcid: https://orcid.org/0000-0002-7612-0469\n        affiliation: European Space Agency, Space Telescope Science Institute, 3700\n          San Martin Dr., Baltimore, MD 21218, USA\n      - family-names: Kern\n        given-names: N. S.\n        orcid: https://orcid.org/0000-0002-8211-1892\n        affiliation: 'Department of Astronomy, UC Berkeley, 501 Campbell Hall #3411,\n          Berkeley, CA 94720, USA'\n      - family-names: Kerzendorf\n        given-names: W. E.\n        orcid: https://orcid.org/0000-0002-0479-7235\n        affiliation: European Southern Observatory, Karl-Schwarzschild-Straße 2, 85748\n          Garching bei München, Germany\n      - family-names: Khvalko\n        given-names: A.\n      - family-names: King\n        given-names: J.\n        affiliation: Max-Planck-Institut für Kernphysik, PO Box 103980, 69029 Heidelberg,\n          Germany\n      - family-names: Kirkby\n        given-names: D.\n        orcid: https://orcid.org/0000-0002-8828-5463\n        affiliation: Department of Physics and Astronomy, University of California,\n          Irvine, CA 92697, USA\n      - family-names: Kulkarni\n        given-names: A. M.\n        affiliation: College of Engineering Pune/Department of Computer Engineering\n          and IT, Shivajinagar, Pune 411005, India\n      - family-names: Kumar\n        given-names: A.\n        affiliation: Delhi Technological University\n      - family-names: Lee\n        given-names: A.\n        orcid: https://orcid.org/0000-0003-2193-5369\n        affiliation: Department of Physics, University of Berkeley, Califonia, CA94709,\n          USA\n      - family-names: Lenz\n        given-names: D.\n        orcid: https://orcid.org/0000-0001-5820-475X\n        affiliation: Jet Propulsion Laboratory, California Institute of Technology,\n          4800 Oak Grove Drive, Pasadena, CA 91109, USA\n      - family-names: Littlefair\n        given-names: S. P.\n        orcid: https://orcid.org/0000-0001-7221-855X\n        affiliation: Department of Physics & Astronomy, University of Sheffield, Sheffield,\n          S3 7RH, UK\n      - family-names: Ma\n        given-names: Z.\n        orcid: https://orcid.org/0000-0003-3270-6844\n        affiliation: Department of Physics and Astronomy, University of Missouri,\n          Columbia, Missouri, 65211, USA\n      - family-names: Macleod\n        given-names: D. M.\n        orcid: https://orcid.org/0000-0002-1395-8694\n        affiliation: Cardiff University, Cardiff CF24 3AA, UK\n      - family-names: Mastropietro\n        given-names: M.\n        orcid: https://orcid.org/0000-0002-6324-5713\n        affiliation: Department of Physics and Astronomy, Ghent University, Krijgslaan\n          281, S9, B-9000 Gent, Belgium\n      - family-names: McCully\n        given-names: C.\n        orcid: https://orcid.org/0000-0001-5807-7893\n        affiliation: Las Cumbres Observatory, 6740 Cortona Drive, Suite 102, Goleta,\n          CA 93117-5575, USA\n      - family-names: Montagnac\n        given-names: S.\n        affiliation: Puy-Sainte-Réparade Observatory\n      - family-names: Morris\n        given-names: B. M.\n        orcid: https://orcid.org/0000-0003-2528-3409\n        affiliation: Department of Astronomy, University of Washington, Seattle, WA\n          98155\n      - family-names: Mueller\n        given-names: M.\n      - family-names: Mumford\n        given-names: S. J.\n        orcid: https://orcid.org/0000-0003-4217-4642\n        affiliation: SP$^{2}$RC, School of Mathematics and Statistics, The University\n          of Sheffield, U.K.\n      - family-names: Muna\n        given-names: D.\n        orcid: https://orcid.org/0000-0002-1631-4114\n        affiliation: Center for Cosmology and Astroparticle Physics, The Ohio State\n          University, 191 West Woodruff Avenue, Columbus, OH 43210\n      - family-names: Murphy\n        given-names: N. A.\n        orcid: https://orcid.org/0000-0001-6628-8033\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden St., Cambridge,\n          MA, 02138, USA\n      - family-names: Nelson\n        given-names: S.\n        affiliation: Department of Physics and Astronomy, Minnesota State University\n          Moorhead, 1104 7th Ave S, Moorhead, MN 56563\n      - family-names: Nguyen\n        given-names: G. H.\n        orcid: https://orcid.org/0000-0002-1966-3627\n        affiliation: VNU-HCMC, University of Natural Sciences/Faculty of IT, 227 Nguyen\n          Van Cu St., Ward 4, District 5, Ho Chi Minh City, Vietnam\n      - family-names: Ninan\n        given-names: J. P.\n        orcid: https://orcid.org/0000-0001-8720-5612\n        affiliation: Dept of Astronomy and Astrophysics, Pennsylvania State University,\n          University Park, PA 16802\n      - family-names: Nöthe\n        given-names: M.\n        affiliation: Experimental Physics 5, TU Dortmund, Otto-Hahn-Str. 4, 44227\n          Dortmund, Germany\n      - family-names: Ogaz\n        given-names: S.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Oh\n        given-names: S.\n        orcid: https://orcid.org/0000-0001-7790-5308\n        affiliation: Department of Astrophysical Sciences, Princeton University, Princeton,\n          NJ 08544, USA\n      - family-names: Parejko\n        given-names: J. K.\n        affiliation: Department of Astronomy, University of Washington, Seattle, WA\n          98155\n      - family-names: Parley\n        given-names: N.\n        affiliation: University of Reading, Whiteknights Campus, Reading RG6 6BX,\n          UK\n      - family-names: Pascual\n        given-names: S.\n        orcid: https://orcid.org/0000-0002-9351-6051\n        affiliation: Departamento de Astrofisica, Universidad Complutense de Madrid,\n          Madrid, Spain\n      - family-names: Patil\n        given-names: R.\n      - family-names: Patil\n        given-names: A. A.\n        affiliation: Pune Institute of Computer Technology, Pune 411043, India\n      - family-names: Plunkett\n        given-names: A. L.\n        orcid: https://orcid.org/0000-0002-9912-5705\n        affiliation: European Southern Observatory, Av. Alonso de Córdova 3107, Vitacura,\n          Santiago, Chile\n      - family-names: Prochaska\n        given-names: J. X.\n        affiliation: Astronomy & Astrophysics, UC Santa Cruz, 1156 High St., Santa\n          Cruz, CA 95064 USA\n      - family-names: Rastogi\n        given-names: T.\n      - family-names: Janga\n        given-names: V. Reddy\n        affiliation: Indian Institute of Technology, Mechanical Engineering, Kharagpur,\n          India\n      - family-names: Sabater\n        given-names: J.\n        orcid: https://orcid.org/0000-0003-1149-6294\n        affiliation: Institute for Astronomy (IfA), University of Edinburgh, Royal\n          Observatory, Blackford Hill, EH9 3HJ Edinburgh, U.K.\n      - family-names: Sakurikar\n        given-names: P.\n        affiliation: IIIT-Hyderabad, India\n      - family-names: Seifert\n        given-names: M.\n      - family-names: Sherbert\n        given-names: L. E.\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Sherwood-Taylor\n        given-names: H.\n        orcid: https://orcid.org/0000-0003-0477-6220\n      - family-names: Shih\n        given-names: A. Y.\n        affiliation: NASA Goddard Space Flight Center, 8800 Greenbelt Road, Greenbelt,\n          MD 20771, USA\n      - family-names: Sick\n        given-names: J.\n        orcid: https://orcid.org/0000-0003-3001-676X\n      - family-names: Silbiger\n        given-names: M. T.\n      - family-names: Singanamalla\n        given-names: S.\n        orcid: https://orcid.org/0000-0003-2462-7273\n        affiliation: Microsoft Research\n      - family-names: Singer\n        given-names: L. P.\n        orcid: https://orcid.org/0000-0001-9898-5597\n        affiliation: Astroparticle Physics Laboratory, NASA Goddard Space Flight Center,\n          8800 Greenbelt Road, Greenbelt, MD 20771, USA\n      - family-names: Sladen\n        given-names: P. H.\n        orcid: https://orcid.org/0000-0003-1585-225X\n        affiliation: Zentrum für Astronomie der Universität Heidelberg, Astronomisches\n          Rechen-Institut, Mönchhofstraße 12--14, 69120 Heidelberg, Germany\n      - family-names: Sooley\n        given-names: K. A.\n      - family-names: Sornarajah\n        given-names: S.\n      - family-names: Streicher\n        given-names: O.\n        orcid: https://orcid.org/0000-0001-7751-1843\n        affiliation: Leibniz Institute for Astrophysics Potsdam (AIP), An der Sternwarte\n          16, 14482 Potsdam, Germany\n      - family-names: Teuben\n        given-names: P.\n        orcid: https://orcid.org/0000-0003-1774-3436\n        affiliation: Astronomy Department, University of Maryland, College Park, MD.\n          20742, USA\n      - family-names: Thomas\n        given-names: S. W.\n        affiliation: Institute of Astronomy, University of Cambridge, Madingley Road,\n          Cambridge, CB3 0HA, UK\n      - family-names: Tremblay\n        given-names: G. R.\n        orcid: https://orcid.org/0000-0002-5445-5401\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden St., Cambridge,\n          MA, 02138, USA\n      - family-names: Turner\n        given-names: J. E. H.\n        affiliation: Gemini Observatory, Casilla 603, La Serena, Chile\n      - family-names: Terrón\n        given-names: V.\n        affiliation: Institute of Astrophysics of Andalusia (IAA-CSIC), Granada, Spain\n      - family-names: Kerkwijk\n        given-names: M. H. van\n        orcid: https://orcid.org/0000-0002-5830-8505\n        affiliation: Department of Astronomy & Astrophysics, University of Toronto,\n          50 Saint George Street, Toronto, ON M5S 3H4, Canada\n      - family-names: Vega\n        given-names: A. de la\n        orcid: https://orcid.org/0000-0002-6219-5558\n        affiliation: Department of Physics and Astronomy, Johns Hopkins University,\n          Baltimore, MD 21218, USA\n      - family-names: Watkins\n        given-names: L. L.\n        orcid: https://orcid.org/0000-0002-1343-134X\n        affiliation: Space Telescope Science Institute, 3700 San Martin Dr., Baltimore,\n          MD 21218, USA\n      - family-names: Weaver\n        given-names: B. A.\n        affiliation: National Optical Astronomy Observatory, 950 N. Cherry Ave., Tucson,\n          AZ 85719, USA\n      - family-names: Whitmore\n        given-names: J. B.\n        orcid: https://orcid.org/0000-0003-4824-2087\n        affiliation: Centre for Astrophysics and Supercomputing, Swinburne University\n          of Technology, Hawthorn, VIC 3122, Australia\n      - family-names: Woillez\n        given-names: J.\n        orcid: https://orcid.org/0000-0002-2958-4738\n        affiliation: European Southern Observatory, Karl-Schwarzschild-Straße 2, 85748\n          Garching bei München, Germany\n      - family-names: Zabalza\n        given-names: V.\n        orcid: https://orcid.org/0000-0003-2638-7648\n    abstract: >-\n      The Astropy Project supports and fosters the development of\n      open-source and openly developed Python packages that provide\n      commonly needed functionality to the astronomical community. A\n      key element of the Astropy Project is the core package astropy,\n      which serves as the foundation for more specialized projects and\n      packages. In this article, we provide an overview of the\n      organization of the Astropy project and summarize key features\n      in the core package, as of the recent major release, version\n      2.0. We then describe the project infrastructure designed to\n      facilitate and support development for a broader ecosystem of\n      interoperable packages. We conclude with a future outlook of\n      planned new features and directions for the broader Astropy\n      Project.\n    type: article\n    journal: \"The Astrophysical Journal\"\n    volume: 156\n    issue: 3\n    pages: 19\n    year: 2018\n    identifiers:\n      - description: ADS bibcode\n        type: url\n        value: \"https://ui.adsabs.harvard.edu/abs/2018AJ....156..123A\"\n      - description: The Astrophysical Journal\n        type: doi\n        value: 10.3847/1538-3881/aabc4f\n      - description: arXiv\n        type: doi\n        value: 10.48550/arXiv.1801.02634\n      - description: Publisher PDF (open access)\n        type: url\n        value: https://iopscience.iop.org/article/10.3847/1538-3881/aabc4f/pdf\n      - description: ArXiv eprint (open access)\n        type: url\n        value: https://arxiv.org/pdf/1801.02634.pdf\n  - title: 'Astropy: A community Python package for astronomy'\n    authors:\n      - name: Astropy Collaboration\n      - family-names: Robitaille\n        given-names: Thomas P.\n        orcid: https://orcid.org/0000-0002-8642-1329\n        affiliation: Max-Planck-Institut für Astronomie, Königstuhl 17, Heidelberg\n          69117, Germany\n      - family-names: Tollerud\n        given-names: Erik J.\n        orcid: https://orcid.org/0000-0002-9599-310X\n        affiliation: Department of Astronomy, Yale University, P.O. Box 208101, New\n          Haven, CT 06510, USA\n      - family-names: Greenfield\n        given-names: Perry\n        orcid: https://orcid.org/0000-0003-2269-0551\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Droettboom\n        given-names: Michael\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Bray\n        given-names: Erik\n        orcid: https://orcid.org/0000-0001-5391-2386\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Aldcroft\n        given-names: Tom\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden Street,\n          Cambridge, MA, 02138, USA\n      - family-names: Davis\n        given-names: Matt\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Ginsburg\n        given-names: Adam\n        orcid: https://orcid.org/0000-0001-6431-9633\n        affiliation: Center for Astrophysics and Space Astronomy, University of Colorado,\n          Boulder, CO 80309, USA\n      - family-names: Price-Whelan\n        given-names: Adrian M.\n        orcid: https://orcid.org/0000-0003-0872-7098\n        affiliation: Department of Astronomy, Columbia University, Pupin Hall, 550W\n          120th St., New York, NY 10027, USA\n      - family-names: Kerzendorf\n        given-names: Wolfgang E.\n        orcid: https://orcid.org/0000-0002-0479-7235\n        affiliation: Department of Astronomy and Astrophysics, University of Toronto,\n          50 Saint George Street, Toronto, ON M5S3H4, Canada\n      - family-names: Conley\n        given-names: Alexander\n        orcid: https://orcid.org/0000-0002-3556-0716\n        affiliation: Center for Astrophysics and Space Astronomy, University of Colorado,\n          Boulder, CO 80309, USA\n      - family-names: Crighton\n        given-names: Neil\n        orcid: https://orcid.org/0000-0002-3080-6975\n        affiliation: Max-Planck-Institut für Astronomie, Königstuhl 17, Heidelberg\n          69117, Germany\n      - family-names: Barbary\n        given-names: Kyle\n        orcid: https://orcid.org/0000-0002-2532-3696\n        affiliation: Argonne National Laboratory, High Energy Physics Division, 9700\n          South Cass Avenue, Argonne, IL 60439, USA\n      - family-names: Muna\n        given-names: Demitri\n        orcid: https://orcid.org/0000-0002-1631-4114\n        affiliation: Department of Astronomy, Ohio State University, Columbus, OH\n          43210, USA\n      - family-names: Ferguson\n        given-names: Henry\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Grollier\n        given-names: Frédéric\n      - family-names: Parikh\n        given-names: Madhura M.\n        affiliation: S.V.National Institute of Technology, Surat., India\n      - family-names: Nair\n        given-names: Prasanth H.\n      - family-names: Günther\n        given-names: Hans M.\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden Street,\n          Cambridge, MA, 02138, USA\n      - family-names: Deil\n        given-names: Christoph\n        orcid: https://orcid.org/0000-0002-4198-4005\n        affiliation: Max-Planck-Institut für Kernphysik, P.O. Box 103980, 69029 Heidelberg,\n          Germany\n      - family-names: Woillez\n        given-names: Julien\n        orcid: https://orcid.org/0000-0002-2958-4738\n        affiliation: European Southern Observatory, Karl-Schwarzschild-Str. 2, 85748,\n          Garching bei München, Germany\n      - family-names: Conseil\n        given-names: Simon\n        orcid: https://orcid.org/0000-0002-3657-4191\n        affiliation: Laboratoire d'Astrophysique de Marseille, OAMP, Université Aix-Marseille\n          et CNRS, Marseille, France\n      - family-names: Kramer\n        given-names: Roban\n        affiliation: ETH Zürich, Institute for Astronomy, Wolfgang-Pauli-Strasse 27,\n          Building HIT, Floor J, CH-8093 Zurich, Switzerland\n      - family-names: Turner\n        given-names: James E. H.\n        affiliation: Gemini Observatory, Casilla 603, La Serena, Chile\n      - family-names: Singer\n        given-names: Leo\n        orcid: https://orcid.org/0000-0001-9898-5597\n        affiliation: LIGO Laboratory, California Institute of Technology, 1200 E.\n          California Blvd., Pasadena, CA, 91125, USA\n      - family-names: Fox\n        given-names: Ryan\n        orcid: https://orcid.org/0000-0003-4291-1091\n      - family-names: Weaver\n        given-names: Benjamin A.\n        affiliation: Center for Cosmology and Particle Physics, New York University,\n          New York, NY 10003, USA\n      - family-names: Zabalza\n        given-names: Victor\n        orcid: https://orcid.org/0000-0003-2638-7648\n        affiliation: Max-Planck-Institut für Kernphysik, P.O. Box 103980, 69029 Heidelberg,\n          Germany\n      - family-names: Edwards\n        given-names: Zachary I.\n        affiliation: Department of Physics and Astronomy, Louisiana State University,\n          Nicholson Hall, Baton Rouge, LA 70803, USA\n      - family-names: Bostroem\n        given-names: K. Azalee\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Burke\n        given-names: D. J.\n        orcid: https://orcid.org/0000-0003-4428-7835\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden Street,\n          Cambridge, MA, 02138, USA\n      - family-names: Casey\n        given-names: Andrew R.\n        affiliation: Research School of Astronomy and Astrophysics, Australian National\n          University, Mount Stromlo Observatory, via Cotter Road, Weston Creek ACT\n          2611, Australia\n      - family-names: Crawford\n        given-names: Steven M.\n        orcid: https://orcid.org/0000-0002-8969-5229\n        affiliation: SAAO, P.O. Box 9, Observatory 7935, Cape Town, South Africa\n      - family-names: Dencheva\n        given-names: Nadia\n        orcid: https://orcid.org/0000-0002-5686-9632\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Ely\n        given-names: Justin\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Jenness\n        given-names: Tim\n        orcid: https://orcid.org/0000-0001-5982-167X\n        affiliation: Joint Astronomy Centre, 660 N. A`ohōkū Place, Hilo, HI 96720,\n          USA\n      - family-names: Labrie\n        given-names: Kathleen\n        affiliation: Gemini Observatory, 670 N. A`ohōkū Place, Hilo, Hawaii 96720,\n          USA\n      - family-names: Lim\n        given-names: Pey Lian\n        orcid: https://orcid.org/0000-0003-0079-4114\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Pierfederici\n        given-names: Francesco\n        affiliation: Space Telescope Science Institute, 3700 San Martin Drive, Baltimore,\n          MD 21218, USA\n      - family-names: Pontzen\n        given-names: Andrew\n        affiliation: Oxford Astrophysics, Denys Wilkinson Building, Keble Road, Oxford\n          OX1 3RH, UK\n      - family-names: Ptak\n        given-names: Andy\n        affiliation: NASA Goddard Space Flight Center, X-ray Astrophysics Lab Code\n          662, Greenbelt, MD 20771, USA\n      - family-names: Refsdal\n        given-names: Brian\n        affiliation: Harvard-Smithsonian Center for Astrophysics, 60 Garden Street,\n          Cambridge, MA, 02138, USA\n      - family-names: Servillat\n        given-names: Mathieu\n        orcid: https://orcid.org/0000-0001-5443-4128\n        affiliation: Laboratoire AIM, CEA Saclay, Bat. 709, 91191 Gif-sur-Yvette,\n          France\n      - family-names: Streicher\n        given-names: Ole\n        orcid: https://orcid.org/0000-0001-7751-1843\n        affiliation: Leibniz-Institut für Astrophysik Potsdam (AIP), An der Sternwarte\n          16, 14482 Potsdam, Germany\n    abstract: >-\n      We present the first public version (v0.2) of the open-source\n      and community-developed Python package, Astropy. This package\n      provides core astronomy-related functionality to the community,\n      including support for domain-specific file formats such as\n      flexible image transport system (FITS) files, Virtual\n      Observatory (VO) tables, and common ASCII table formats, unit\n      and physical quantity conversions, physical constants specific\n      to astronomy, celestial coordinate and time transformations,\n      world coordinate system (WCS) support, generalized containers\n      for representing gridded as well as tabular data, and a\n      framework for cosmological transformations and\n      conversions. Significant functionality is under active\n      development, such as a model fitting framework, VO client and\n      server tools, and aperture and point spread function (PSF)\n      photometry tools. The core development team is actively making\n      additions and enhancements to the current code base, and we\n      encourage anyone interested to participate in the development of\n      future Astropy versions.\n    type: article\n    journal: \"Astronomy & Astrophysics\"\n    volume: 558\n    pages: 9\n    year: 2013\n    identifiers:\n      - description: ADS bibcode\n        type: url\n        value: \"https://ui.adsabs.harvard.edu/abs/2013A&A...558A..33A\"\n      - description: \"Astronomy & Astrophysics\"\n        type: doi\n        value: 10.1051/0004-6361/201322068\n      - description: arXiv\n        type: doi\n        value: 10.48550/arXiv.1307.6212\n      - description: Publisher PDF (open access)\n        type: url\n        value: \"https://www.aanda.org/articles/aa/pdf/2013/10/aa22068-13.pdf\"\n      - description: ArXiv eprint (open access)\n        type: url\n        value: \"https://arxiv.org/pdf/1307.6212.pdf\"\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1357421875,
          "content": "All Astropy community members are expected to abide by the [Astropy Project Code of Conduct](http://www.astropy.org/code_of_conduct.html).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.59375,
          "content": "Contributing to Astropy\n=======================\n\nReporting Issues\n----------------\n\nWhen opening an issue to report a problem, please try to provide a minimal code\nexample that reproduces the issue along with details of the operating\nsystem and the Python, NumPy, and `astropy` versions you are using.\n\nContributing Code and Documentation\n-----------------------------------\n\nSo you are interested in contributing to the Astropy Project?  Excellent!\nWe love contributions! Astropy is open source, built on open source, and\nwe'd love to have you hang out in our community.\n\nAnti Imposter Syndrome Reassurance\n----------------------------------\n\nWe want your help. No, really.\n\nThere may be a little voice inside your head that is telling you that you're not\nready to be an open source contributor; that your skills aren't nearly good\nenough to contribute. What could you possibly offer a project like this one?\n\nWe assure you - the little voice in your head is wrong. If you can write code or\ndocumentation, you can contribute code to open source.\nContributing to open source projects is a fantastic way to advance one's coding\nand open source workflow skills. Writing perfect code isn't the measure of a good\ndeveloper (that would disqualify all of us!); it's trying to create something,\nmaking mistakes, and learning from those mistakes. That's how we all improve,\nand we are happy to help others learn.\n\nBeing an open source contributor doesn't just mean writing code, either. You can\nhelp out by writing documentation, tests, or even giving feedback about the\nproject (and yes - that includes giving feedback about the contribution\nprocess). Some of these contributions may be the most valuable to the project as\na whole, because you're coming to the project with fresh eyes, so you can see\nthe errors and assumptions that seasoned contributors have glossed over.\n\nNote: This text was originally written by\n[Adrienne Lowe](https://github.com/adriennefriend) for a\n[PyCon talk](https://www.youtube.com/watch?v=6Uj746j9Heo), and was adapted by\nAstropy based on its use in the README file for the\n[MetPy project](https://github.com/Unidata/MetPy).\n\nHow to Contribute, Best Practices\n---------------------------------\n\nMost contributions to Astropy are done via [pull\nrequests](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests)\nfrom GitHub users' forks of the [astropy\nrepository](https://github.com/astropy/astropy). If you are new to this\nstyle of development, you will want to read over our [development\nworkflow](https://docs.astropy.org/en/latest/development/quickstart.html).\n\nYou may also/instead be interested in contributing to an\n[astropy affiliated package](https://www.astropy.org/affiliated/).\nAffiliated packages are astronomy-related software packages that are not a part\nof the `astropy` core package, but build on it for more specialized applications\nand follow the Astropy guidelines for reuse, interoperability, and interfacing.\nEach affiliated package has its own developers/maintainers and its own specific\nguidelines for contributions, so be sure to read their docs.\n\nOnce you open a pull request (which should be opened against the ``main``\nbranch, not against any of the other branches), please make sure to\ninclude the following:\n\n- **Code**: the code you are adding, which should follow\n  our [coding guidelines](https://docs.astropy.org/en/latest/development/codeguide.html) as much as possible.\n\n- **Tests**: these are usually tests to ensure code that previously\n  failed now works (regression tests), or tests that cover as much as possible\n  of the new functionality to make sure it does not break in the future and\n  also returns consistent results on all platforms (since we run these tests on\n  many platforms/configurations). For more information about how to write\n  tests, see our [testing guidelines](https://docs.astropy.org/en/latest/development/testguide.html).\n\n- **Documentation**: if you are adding new functionality, be sure to include a\n  description in the main documentation (in ``docs/``). Again, we have some\n  detailed [documentation guidelines](https://docs.astropy.org/en/latest/development/docguide.html) to help you out.\n\n- **Performance improvements**: if you are making changes that impact `astropy`\n  performance, consider adding a performance benchmark in the\n  [astropy-benchmarks](https://github.com/astropy/astropy-benchmarks)\n  repository. You can find out more about how to do this\n  [in the README for that repository](https://github.com/astropy/astropy-benchmarks#contributing-benchmarks).\n  A maintainer will also be able to run comparative benchmarks using\n  GitHub Actions on your changes to catch performance changes. The PR\n  needs to have the `benchmark` label to run the workflow.\n\n- **Changelog entry**: whether you are fixing a bug or adding new\n  functionality, you should add a changelog fragment in the ``docs/changes/``\n  directory. See ``docs/changes/README.rst`` for some guidance on the creation\n  of this file.\n\n  If you are opening a pull request you may not know\n  the PR number yet, but you can add it once the pull request is open. If you\n  are not sure where to put the changelog entry, wait until a maintainer\n  has reviewed your PR and assigned it to a milestone.\n\n  You do not need to include a changelog entry for fixes to bugs introduced in\n  the developer version and therefore are not present in the stable releases. In\n  general you do not need to include a changelog entry for minor documentation\n  or test updates. Only user-visible changes (new features/API changes, fixed\n  issues) need to be mentioned. If in doubt, ask the core maintainer reviewing\n  your changes.\n\nChecklist for Contributed Code\n------------------------------\n\nBefore being merged, a pull request for a new feature will be reviewed to see if\nit meets the following requirements. If you are unsure about how to meet all of these\nrequirements, please submit the PR and ask for help and/or guidance. An Astropy\nmaintainer will collaborate with you to make sure that the pull request meets the\nrequirements for inclusion in the package:\n\n**Scientific Quality** (when applicable)\n  * Is the submission relevant to astronomy?\n  * Are references included to the origin source for the algorithm?\n  * Does the code perform as expected?\n  * Has the code been tested against previously existing implementations?\n\n**Code Quality**\n  * Are the [coding guidelines](https://docs.astropy.org/en/latest/development/codeguide.html) followed?\n  * Is the code compatible with the supported versions of Python (see [pyproject.toml](https://github.com/astropy/astropy/blob/main/pyproject.toml))?\n  * Are there dependencies other than the run-time dependencies listed in pyproject.toml?\n    * Is the package importable even if the C-extensions are not built?\n    * Are additional dependencies handled appropriately?\n    * Do functions that require additional dependencies raise an `ImportError`\n      if they are not present?\n\n**Testing**\n  * Are the [testing guidelines](https://docs.astropy.org/en/latest/development/testguide.html) followed?\n  * Are the inputs to the functions sufficiently tested?\n  * Are there tests for any exceptions raised?\n  * Are there tests for the expected performance?\n  * Are the sources for the tests documented?\n  * Have tests that require an [optional dependency](https://docs.astropy.org/en/latest/development/testguide.html#tests-requiring-optional-dependencies)\n    been marked as such?\n  * Does ``tox -e test`` run without failures?\n\n**Documentation**\n  * Are the [documentation guidelines](https://docs.astropy.org/en/latest/development/docguide.html) followed?\n  * Is there a docstring in [numpydoc format](https://numpydoc.readthedocs.io/en/latest/format.html) in the function describing:\n    * What the code does?\n    * The format of the inputs of the function?\n    * The format of the outputs of the function?\n    * References to the original algorithms?\n    * Any exceptions which are raised?\n    * An example of running the code?\n  * Is there any information needed to be added to the docs to describe the\n    function?\n  * Does the documentation build without errors or warnings?\n\n**License**\n  * Is the `astropy` license included at the top of the file?\n  * Are there any conflicts with this code and existing codes?\n\n**Astropy requirements**\n  * Do all the GitHub Actions and CircleCI tests pass? If not, are they allowed to fail?\n  * If applicable, has an entry been added into the changelog?\n  * Can you check out the pull request and repeat the examples and tests?\n\nOther Tips\n----------\n\n- Behind the scenes, we conduct a number of tests or checks with new pull requests.\n  This is a technique that is called continuous integration, and we use GitHub Actions\n  and CircleCI. To prevent the automated tests from running, you can add ``[ci skip]``\n  to your commit message. This is useful if your PR is a work in progress (WIP) and\n  you are not yet ready for the tests to run. For example:\n\n      $ git commit -m \"WIP widget [ci skip]\"\n\n  - If you already made the commit without including this string, you can edit\n    your existing commit message by running:\n\n        $ git commit --amend\n\n- If your commit makes substantial changes to the documentation but none of\n  those changes include code snippets, then you can use ``[ci skip]``,\n  which will skip all CI except RTD, where the documentation is built.\n\n- When contributing trivial documentation fixes (i.e., fixes to typos, spelling,\n  grammar) that don't contain any special markup and are not associated with\n  code changes, please include the string ``[ci skip]`` in your commit\n  message.\n\n      $ git commit -m \"Fixed typo [ci skip]\"\n\n- ``[ci skip]`` and ``[skip ci]`` are the same and can be used interchangeably.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 0.1259765625,
          "content": "# Astropy Project Governance\n\nPlease visit our website to learn more about the [Astropy Team](http://www.astropy.org/team.html).\n"
        },
        {
          "name": "LICENSE.rst",
          "type": "blob",
          "size": 1.4609375,
          "content": "Copyright (c) 2011-2024, Astropy Developers\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n* Neither the name of the Astropy Team nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.173828125,
          "content": "# This subpckage is only used in development checkouts and should not be\n# included in built tarballs\nprune astropy/_dev\n\nprune docs/_build\nprune build\n\nglobal-exclude *.pyc *.o\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 5.1494140625,
          "content": "|Astropy Logo|\n\n----\n\n|Actions Status| |CircleCI Status| |Coverage Status| |PyPI Status| |Documentation Status| |Pre-Commit| |Ruff| |Zenodo|\n\n----\n\nThe Astropy Project is a community effort to develop a\nsingle core package for astronomy in Python and foster interoperability between\npackages used in the field. This repository contains the core library.\n\n* `Website <https://astropy.org/>`_\n* `Documentation <https://docs.astropy.org/>`_\n* `Slack <https://astropy.slack.com/>`_\n* `Open Astronomy Discourse <https://community.openastronomy.org/c/astropy/8>`_\n* `Astropy users mailing list <https://mail.python.org/mailman/listinfo/astropy>`_\n* `Astropy developers mailing list <https://groups.google.com/g/astropy-dev>`_\n\nInstallation\n============\n\nTo install `astropy` from PyPI, use:\n\n.. code-block:: bash\n\n    pip install astropy\n\nFor more detailed instructions, see the `install guide\n<https://docs.astropy.org/en/stable/install.html>`_ in the docs.\n\nContributing\n============\n\n|User Stats|\n\nThe Astropy Project is made both by and for its users, so we welcome and\nencourage contributions of many kinds. Our goal is to keep this a positive,\ninclusive, successful, and growing community that abides by the\n`Astropy Community Code of Conduct\n<https://www.astropy.org/about.html#codeofconduct>`_.\n\nFor guidance on contributing to or submitting feedback for the Astropy Project,\nsee the `contributions page <https://www.astropy.org/contribute.html>`_.\nFor contributing code specifically, the developer docs have a\n`guide <https://docs.astropy.org/en/latest/index_dev.html>`_ with a quickstart.\nThere's also a `summary of contribution guidelines <CONTRIBUTING.md>`_.\n\nDeveloping with Codespaces\n==========================\n\nGitHub Codespaces is a cloud development environment using Visual Studio Code\nin your browser. This is a convenient way to start developing Astropy, using\nour `dev container <.devcontainer/devcontainer.json>`_ configured\nwith the required packages. For help, see the `GitHub Codespaces\ndocs <https://docs.github.com/en/codespaces>`_.\n\n|Codespaces|\n\nAcknowledging and Citing\n========================\nSee the `acknowledgement and citation guide\n<https://www.astropy.org/acknowledging.html>`_ and the `CITATION\n<https://github.com/astropy/astropy/blob/main/astropy/CITATION>`_ file.\n\nSupporting the Project\n======================\n\n|NumFOCUS| |Donate|\n\nThe Astropy Project is sponsored by NumFOCUS, a 501(c)(3) nonprofit in the\nUnited States. You can donate to the project by using the link above, and this\ndonation will support our mission to promote sustainable, high-level code base\nfor the astronomy community, open code development, educational materials, and\nreproducible scientific research.\n\nLicense\n=======\n\nAstropy is licensed under a 3-clause BSD style license - see the\n`LICENSE.rst <LICENSE.rst>`_ file.\n\n\n.. |Astropy Logo| image:: https://github.com/astropy/repo_stats/blob/main/dashboard_template/astropy_banner_gray.svg\n    :target: https://www.astropy.org/\n    :alt: Astropy\n\n.. |User Stats| image:: https://github.com/astropy/repo_stats/blob/cache/cache/astropy_user_stats_light.png\n    :target: https://docs.astropy.org/en/latest/impact_health.html\n    :alt: Astropy User Statistics\n\n.. |Actions Status| image:: https://github.com/astropy/astropy/actions/workflows/ci_workflows.yml/badge.svg\n    :target: https://github.com/astropy/astropy/actions\n    :alt: Astropy's GitHub Actions CI Status\n\n.. |CircleCI Status| image::  https://img.shields.io/circleci/build/github/astropy/astropy/main?logo=circleci&label=CircleCI\n    :target: https://circleci.com/gh/astropy/astropy\n    :alt: Astropy's CircleCI Status\n\n.. |Coverage Status| image:: https://codecov.io/gh/astropy/astropy/branch/main/graph/badge.svg\n    :target: https://codecov.io/gh/astropy/astropy\n    :alt: Astropy's Coverage Status\n\n.. |PyPI Status| image:: https://img.shields.io/pypi/v/astropy.svg\n    :target: https://pypi.org/project/astropy\n    :alt: Astropy's PyPI Status\n\n.. |Zenodo| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.4670728.svg\n    :target: https://doi.org/10.5281/zenodo.4670728\n    :alt: Zenodo DOI\n\n.. |Documentation Status| image:: https://img.shields.io/readthedocs/astropy/latest.svg?logo=read%20the%20docs&logoColor=white&label=Docs&version=stable\n    :target: https://docs.astropy.org/en/stable/?badge=stable\n    :alt: Documentation Status\n\n.. |Pre-Commit| image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n    :target: https://github.com/pre-commit/pre-commit\n    :alt: pre-commit\n\n.. |Ruff| image:: https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json\n    :target: https://github.com/astral-sh/ruff\n    :alt: Ruff\n\n.. |NumFOCUS| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A\n    :target: https://numfocus.org\n    :alt: Powered by NumFOCUS\n\n.. |Donate| image:: https://img.shields.io/badge/Donate-to%20Astropy-brightgreen.svg\n    :target: https://numfocus.org/donate-to-astropy\n\n.. |Codespaces| image:: https://github.com/codespaces/badge.svg\n    :target: https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=2081289\n    :alt: Open in GitHub Codespaces\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.126953125,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe table below indicates which versions of `astropy` are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 7.1.x (main)   | :white_check_mark: |\n| 7.0.x   | :white_check_mark: |\n| < 7.0   | :x:                |\n\n## Reporting a Vulnerability\n\n[GitHub private security vulnerability reporting](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)\nshould be enabled for `astropy`. But if that does not work for whatever reason, please report to the\n[@astropy/security-team](https://github.com/orgs/astropy/teams/security-team) that is also listed on the [Astropy Team listing](https://www.astropy.org/team).\n\nWe will respond as soon as we are able. If vulnerability is accepted, we will work on a hotfix.\nThe timing depends on the available resources and the severity/risk of the vulnerability.\nIf a vulnerability is declined, we will take no further action as far as code is concerned. Either way, we will communicate back to you.\n\nThank you for your help!\n"
        },
        {
          "name": "astropy",
          "type": "tree",
          "content": null
        },
        {
          "name": "asv.ci.conf.json",
          "type": "blob",
          "size": 0.375,
          "content": " {\n   \"version\": 1,\n   \"project\": \"astropy\",\n   \"project_url\": \"https://www.astropy.org/\",\n   \"repo\": \".\",\n   \"install_command\": [\n     \"pip install . matplotlib scipy\"\n   ],\n   \"branches\": [\"main\"],\n   \"show_commit_url\": \"https://github.com/astropy/astropy/commit/\",\n   \"pythons\": [\"3.11\"],\n   \"environment_type\": \"virtualenv\",\n   \"benchmark_dir\": \"astropy-benchmarks/benchmarks\"\n }\n"
        },
        {
          "name": "cextern",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.23828125,
          "content": "comment: off\ncoverage:\n  status:\n    project:\n      default:\n        target: auto\n        # adjust accordingly based on how flaky your tests are\n        # this allows a 0.01% drop from the previous base commit coverage\n        threshold: 0.01%\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 2.837890625,
          "content": "# Licensed under a 3-clause BSD style license - see LICENSE.rst\n\n# This file is the main file used when running tests with pytest directly,\n# in particular if running e.g. ``pytest docs/``.\n\nimport os\nimport tempfile\nfrom pathlib import Path\n\nimport hypothesis\n\nfrom astropy import __version__\n\ntry:\n    from pytest_astropy_header.display import PYTEST_HEADER_MODULES, TESTED_VERSIONS\nexcept ImportError:\n    PYTEST_HEADER_MODULES = {}\n    TESTED_VERSIONS = {}\n\n\n# This has to be in the root dir or it will not display in CI.\ndef pytest_configure(config):\n    PYTEST_HEADER_MODULES[\"PyERFA\"] = \"erfa\"\n    PYTEST_HEADER_MODULES[\"Cython\"] = \"cython\"\n    PYTEST_HEADER_MODULES[\"Scikit-image\"] = \"skimage\"\n    PYTEST_HEADER_MODULES[\"pyarrow\"] = \"pyarrow\"\n    PYTEST_HEADER_MODULES[\"asdf-astropy\"] = \"asdf_astropy\"\n    TESTED_VERSIONS[\"Astropy\"] = __version__\n\n\n# This has to be in the root dir or it will not display in CI.\ndef pytest_report_header(config):\n    # This gets added after the pytest-astropy-header output.\n    return (\n        f'CI: {os.environ.get(\"CI\", \"undefined\")}\\n'\n        f'ARCH_ON_CI: {os.environ.get(\"ARCH_ON_CI\", \"undefined\")}\\n'\n        f'IS_CRON: {os.environ.get(\"IS_CRON\", \"undefined\")}\\n'\n    )\n\n\n# Tell Hypothesis that we might be running slow tests, to print the seed blob\n# so we can easily reproduce failures from CI, and derive a fuzzing profile\n# to try many more inputs when we detect a scheduled build or when specifically\n# requested using the HYPOTHESIS_PROFILE=fuzz environment variable or\n# `pytest --hypothesis-profile=fuzz ...` argument.\n\nhypothesis.settings.register_profile(\n    \"ci\",\n    deadline=None,\n    print_blob=True,\n    derandomize=True,\n    # disabling HealthCheck.differing_executors to allow double test\n    # see https://github.com/astropy/astropy/issues/17299\n    suppress_health_check=[hypothesis.HealthCheck.differing_executors],\n)\nhypothesis.settings.register_profile(\n    \"fuzzing\", deadline=None, print_blob=True, max_examples=1000\n)\ndefault = (\n    \"fuzzing\"\n    if (\n        os.environ.get(\"IS_CRON\") == \"true\"\n        and os.environ.get(\"ARCH_ON_CI\") not in (\"aarch64\", \"ppc64le\")\n    )\n    else \"ci\"\n)\nhypothesis.settings.load_profile(os.environ.get(\"HYPOTHESIS_PROFILE\", default))\n\n# Make sure we use temporary directories for the config and cache\n# so that the tests are insensitive to local configuration.\n\nos.environ[\"XDG_CONFIG_HOME\"] = tempfile.mkdtemp(\"astropy_config\")\nos.environ[\"XDG_CACHE_HOME\"] = tempfile.mkdtemp(\"astropy_cache\")\n\nPath(os.environ[\"XDG_CONFIG_HOME\"]).joinpath(\"astropy\").mkdir()\nPath(os.environ[\"XDG_CACHE_HOME\"]).joinpath(\"astropy\").mkdir()\n\n# Note that we don't need to change the environment variables back or remove\n# them after testing, because they are only changed for the duration of the\n# Python process, and this configuration only matters if running pytest\n# directly, not from e.g. an IPython session.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 18.5703125,
          "content": "[project]\nname = \"astropy\"\ndynamic = [\n    \"version\"\n]\ndescription = \"Astronomy and astrophysics core library\"\nreadme = \"README.rst\"\nauthors = [\n    { name = \"The Astropy Developers\", email = \"astropy.team@gmail.com\" }\n]\nlicense = { text = \"BSD-3-Clause\" }\nrequires-python = \">=3.11\"\nclassifiers = [\n    \"Intended Audience :: Science/Research\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: C\",\n    \"Programming Language :: Cython\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Topic :: Scientific/Engineering :: Astronomy\",\n    \"Topic :: Scientific/Engineering :: Physics\",\n]\nkeywords = [\n    \"astronomy\",\n    \"astrophysics\",\n    \"cosmology\",\n    \"space\",\n    \"science\",\n    \"units\",\n    \"table\",\n    \"wcs\",\n    \"samp\",\n    \"coordinate\",\n    \"fits\",\n    \"modeling\",\n    \"models\",\n    \"fitting\",\n    \"ascii\",\n]\ndependencies = [\n    \"numpy>=1.23.2\",\n    \"pyerfa>=2.0.1.1\",\n    \"astropy-iers-data>=0.2024.12.30.0.33.36\",\n    \"PyYAML>=6.0.0\",\n    \"packaging>=22.0.0\",\n]\n\n[project.optional-dependencies]\n# Recommended run-time dependencies to enable a lot of functionality within Astropy.\nrecommended = [\n    \"scipy>=1.9.2\",\n    \"matplotlib>=3.6.0\",\n]\n# Optional IPython-related behavior is in many places in Astropy. IPython is a complex\n# dependency that occasionally requires pinning one of it's upstream dependencies. If\n# you are using Astropy from an IPython-dependent IDE, like Jupyter, this should enforce\n# the minimum supported version of IPython.\nipython = [\n    \"ipython>=8.0.0\",\n]\njupyter = [  # these are optional dependencies for utils.console and table\n    \"astropy[ipython]\",\n    \"ipywidgets\",\n    \"ipykernel\",\n    \"ipydatagrid\",\n    \"pandas\",\n]\n# This is ALL the run-time optional dependencies.\nall = [\n    # Install grouped optional dependencies\n    \"astropy[recommended]\",\n    \"astropy[ipython]\",\n    \"astropy[jupyter]\",\n    # Install all remaining optional dependencies\n    \"certifi>=2022.6.15.1\",\n    \"dask[array]>=2022.5.1\",\n    \"h5py>=3.8.0\",\n    \"pyarrow>=10.0.1\",\n    \"beautifulsoup4>=4.9.3\", # imposed by pandas==2.0\n    \"html5lib>=1.1\",\n    \"bleach>=3.2.1\",\n    \"pandas>=2.0\",\n    \"sortedcontainers>=1.5.7\", # (older versions may work)\n    \"pytz>=2016.10\", # (older versions may work)\n    \"jplephem>=2.6\", # (older versions may work)\n    \"mpmath>=1.2.1\",\n    \"asdf>=2.8.3\", # via asdf-astropy==0.3.*\n    \"asdf-astropy>=0.3\",\n    \"bottleneck>=1.3.3\",\n    \"fsspec[http]>=2023.4.0\",\n    \"s3fs>=2023.4.0\",\n]\n# The base set of test-time dependencies.\ntest = [\n    \"coverage>=6.4.4\",\n    \"pre-commit>=2.9.3\", # lower bound is not tested beyond installation\n    \"pytest>=7.3.0\",\n    \"pytest-doctestplus>=0.12\",\n    \"pytest-astropy-header>=0.2.1\",\n    \"pytest-astropy>=0.10.0\",\n    \"pytest-xdist>=2.5.0\",\n    \"threadpoolctl>=3.0.0\",\n]\ntest_all = [\n    # Install grouped optional dependencies\n    \"astropy[all]\",  # installs all optional run-time dependencies\n    \"astropy[test]\",\n    # Install all remaining dependencies\n    \"objgraph>=1.6.0\",\n    \"skyfield>=1.20\",\n    \"sgp4>=2.3\",\n    \"array-api-strict\",\n]\ntyping = [\n    \"pandas-stubs>=2.0\",\n]\ndocs = [\n    \"astropy[recommended]\",  # installs the [recommended] dependencies\n    \"sphinx\",\n    \"sphinx-astropy[confv2]>=1.9.1\",\n    \"pytest>=7.0\",\n    \"sphinx-changelog>=1.2.0\",\n    \"sphinx_design\",\n    \"Jinja2>=3.1.3\",\n    \"sphinxcontrib-globalsubs >= 0.1.1\",\n    \"matplotlib>=3.9.1\",  # https://github.com/matplotlib/matplotlib/issues/28234\n]\n# These group together all the dependencies needed for developing in Astropy.\ndev = [\n    \"astropy[recommended]\",  # installs the most common optional dependencies\n    \"astropy[test]\",\n    \"astropy[docs]\",\n    \"astropy[typing]\",\n]\ndev_all = [\n    \"tox\",\n    \"astropy[dev]\",\n    \"astropy[test_all]\",\n]\n\n[project.urls]\nhomepage = \"https://www.astropy.org/\"\ndocumentation = \"https://docs.astropy.org\"\nrepository = \"https://github.com/astropy/astropy\"\n\n[project.scripts]\nfits2bitmap = \"astropy.visualization.scripts.fits2bitmap:main\"\nfitscheck = \"astropy.io.fits.scripts.fitscheck:main\"\nfitsdiff = \"astropy.io.fits.scripts.fitsdiff:main\"\nfitsheader = \"astropy.io.fits.scripts.fitsheader:main\"\nfitsinfo = \"astropy.io.fits.scripts.fitsinfo:main\"\nsamp_hub = \"astropy.samp.hub_script:hub_script\"\nshowtable = \"astropy.table.scripts.showtable:main\"\nvolint = \"astropy.io.votable.volint:main\"\nwcslint = \"astropy.wcs.wcslint:main\"\n\n[build-system]\nrequires = [\"setuptools\",\n            \"setuptools_scm>=6.2\",\n            \"cython>=3.0.0, <4\",\n            \"numpy>=2.0.0, <3\",\n            \"extension-helpers>=1,<2\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools]\ninclude-package-data = true\nlicense-files = [\"LICENSE.rst\", \"licenses/*.rst\"]\n\n[tool.setuptools.packages.find]\ninclude = [\"astropy*\"]\nexclude = [\"astropy._dev*\"]\nnamespaces = true\n\n[tool.setuptools.package-data]\n\"*\" = [\n    \"data/*\",\n    \"data/*/*\",\n    \"data/*/*/*\",\n    \"data/*/*/*/*\",\n    \"data/*/*/*/*/*\",\n    \"data/*/*/*/*/*/*\",\n]\n\"astropy\" = [\"astropy.cfg\", \"CITATION\"]\n\"astropy.cosmology\" = [\"*.ecsv\"]\n\"astropy.tests.figures\" = [\"*.json\"]\n\"astropy.wcs\" = [\"include/*/*.h\"]\n\"astropy.wcs.tests\" = [\"extension/*.c\"]\n# Delete with deprecated astropy.utils.misc.walk_skip_hidden()\n\"astropy.utils.tests\" = [\"data/.hidden_file.txt\"]\n\n[tool.setuptools_scm]\nwrite_to = \"astropy/_version.py\"\n\n[tool.pytest.ini_options]\nminversion = \"7.0\"\ntestpaths = [\n    \"astropy\",\n    \"docs\",\n]\nnorecursedirs = [\n    \"docs[\\\\/]_build\",\n    \"docs[\\\\/]generated\",\n    \"astropy[\\\\/]extern\",\n    \"astropy[\\\\/]_dev\",\n]\nastropy_header = true\ndoctest_plus = \"enabled\"\ntext_file_format = \"rst\"\nremote_data_strict = true\naddopts = [\n    \"--color=yes\",\n    \"--doctest-rst\",\n    \"--strict-config\",\n    \"--strict-markers\",\n    \"-p no:legacypath\",\n]\nlog_cli_level = \"info\"\nxfail_strict = true\nfilterwarnings = [\n    \"error\",\n    \"ignore:unclosed <socket:ResourceWarning\",\n    \"ignore:unclosed <ssl.SSLSocket:ResourceWarning\",\n]\ndoctest_norecursedirs = [\n    \"*/setup_package.py\",\n    \"*/tests/command.py\",\n]\ndoctest_subpackage_requires = [\n    \"astropy/cosmology/_io/mapping.py = python>=3.12\",  # not PYTHON_LT_3_12 (PR 17277)\n    \"astropy/cosmology/_io/row.py = python>=3.12\",  # not PYTHON_LT_3_12 (PR 17277)\n    \"astropy/cosmology/_io/table.py = python>=3.12\",  # not PYTHON_LT_3_12 (PR 17277)\n    \"astropy/table/table.py = python>=3.12\",  # not PYTHON_LT_3_12 (PR 17277)\n    \"astropy/table/mixins/dask.py = dask\",\n    \"docs/* = numpy>=2\",   # not NUMPY_LT_2_0 (PR 15065)\n    \"docs/timeseries/index.rst = numpy<2.2.0.dev0\",  # NUMPY_LT_2_2 (PR 17364)\n    \"astropy/stats/info_theory.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/stats/jackknife.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/table/row.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/time/formats.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/timeseries/periodograms/bls/core.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/timeseries/periodograms/lombscargle/core.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/units/structured.py = numpy>=2\",  # not NUMPY_LT_2_0 (PR 15065)\n    \"astropy/modeling/_fitting_parallel.py = dask\",\n    \"docs/modeling/parallel-fitting.rst = dask\",\n]\nmarkers = [\n    \"mpl_image_compare\",\n]\n\n[tool.cibuildwheel]\n# We disable testing for the following wheels:\n# - Linux AArch64 (no native hardware, tests take too long)\n# - MuslLinux (tests hang non-deterministically)\ntest-skip = \"*-manylinux_aarch64 *-musllinux_x86_64\"\n\n[tool.cibuildwheel.macos]\narchs = [\"x86_64\", \"arm64\"]\n\n[tool.cibuildwheel.linux]\narchs = [\"auto\", \"aarch64\"]\n\n\n[tool.docformatter]\n    # The ``summaries`` are not (yet) 75 characters because the summary lines can't be\n    # automatically wrapped and must be re-written, which should be done at some point.\n    recursive = true\n    wrap-summaries = 1000\n    wrap-descriptions = 75\n    black = true\n    syntax = \"numpy\"\n\n\n[tool.coverage]\n\n    [tool.coverage.run]\n        omit = [\n            \"astropy/__init__*\",\n            \"astropy/**/conftest.py\",\n            \"astropy/**/setup*\",\n            \"astropy/**/tests/*\",\n            \"astropy/extern/*\",\n            \"astropy/utils/compat/*\",\n            \"astropy/version*\",\n            \"astropy/wcs/docstrings*\",\n            \"*/astropy/__init__*\",\n            \"*/astropy/**/conftest.py\",\n            \"*/astropy/**/setup*\",\n            \"*/astropy/**/tests/*\",\n            \"*/astropy/extern/*\",\n            \"*/astropy/utils/compat/*\",\n            \"*/astropy/version*\",\n            \"*/astropy/wcs/docstrings*\",\n        ]\n\n    [tool.coverage.report]\n        exclude_lines = [\n            # Have to re-enable the standard pragma\n            \"pragma: no cover\",\n            # Don't complain about packages we have installed\n            \"except ImportError\",\n            # Don't complain if tests don't hit defensive assertion code:\n            \"raise AssertionError\",\n            \"raise NotImplementedError\",\n            # Don't complain about script hooks\n            \"'def main(.*):'\",\n            # Ignore branches that don't pertain to this version of Python\n            \"pragma: py{ignore_python_version}\",\n            # Don't complain about IPython completion helper\n            \"def _ipython_key_completions_\",\n            # typing.TYPE_CHECKING is False at runtime\n            \"if TYPE_CHECKING:\",\n            # Ignore typing overloads\n            \"@overload\",\n        ]\n\n[tool.ruff]\nlint.select = [\"ALL\"]\nexclude=[\n    \"astropy/extern/*\",\n    \"*_parsetab.py\",\n    \"*_lextab.py\"\n]\nlint.ignore = [  # NOTE: non-permanent exclusions should be added to `.ruff.toml` instead.\n\n    # flake8-builtins (A) : shadowing a Python built-in.\n    # New ones should be avoided and is up to maintainers to enforce.\n    \"A00\",\n\n    # flake8-bugbear (B)\n    \"B008\",  # FunctionCallArgumentDefault\n\n    # flake8-commas (COM)\n    \"COM812\",  # TrailingCommaMissing\n    \"COM819\",  # TrailingCommaProhibited\n\n    # pydocstyle (D)\n    # Missing Docstrings\n    \"D102\",  # Missing docstring in public method. Don't check b/c docstring inheritance.\n    \"D105\",  # Missing docstring in magic method. Don't check b/c class docstring.\n    # Whitespace Issues\n    \"D200\",  # FitsOnOneLine\n    # Docstring Content Issues\n    \"D410\",  # BlankLineAfterSection. Using D412 instead.\n    \"D400\",  # EndsInPeriod.  NOTE: might want to revisit this.\n\n    # pycodestyle (E, W)\n    \"E711\",  # NoneComparison  (see unfixable)\n    \"E741\",  # AmbiguousVariableName. Physics variables are often poor code variables\n\n    # flake8-fixme (FIX)\n    \"FIX002\",  # Line contains TODO | notes for improvements are OK iff the code works\n\n    # ISC001 shouldn't be used with ruff format\n    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules\n    \"ISC001\",\n\n    # pep8-naming (N)\n    \"N803\",  # invalid-argument-name. Physics variables are often poor code variables\n    \"N806\",  # non-lowercase-variable-in-function. Physics variables are often poor code variables\n\n    # pandas-vet (PD)\n    \"PD\",\n\n    # pylint (PLR and PLW)\n    \"PLR1730\", # if-stmt-min-max (not always clearer, and sometimes slower)\n    \"PLW0642\", # self-or-cls-assignment (occasionally desirable, very rarely a mistake)\n\n    # flake8-use-pathlib (PTH)\n    \"PTH123\", # builtin-open (not worth creating a Path object, builtin open is fine)\n\n    # flake8-simplify (SIM)\n    \"SIM103\", # needless-bool (cannot be safely applied in all contexts (np.True_ is not True))\n\n    # flake8-self (SLF)\n    \"SLF001\", # private member access\n\n    # flake8-todos (TD)\n    \"TD002\",  # Missing author in TODO\n\n    # flake8-return (RET)\n    # RET can sometimes help find places where refactoring is very helpful,\n    # but enforcing it everywhere might create undesirable churn\n    \"RET505\",  # superfluous-else-return\n    \"RET506\",  # superfluous-else-raise\n\n    # Ruff-specific rules (RUF)\n    \"RUF005\",  # unpack-instead-of-concatenating-to-collection-literal -- it's not clearly faster.\n]\n\n[tool.ruff.lint.extend-per-file-ignores]\n\"setup.py\" = [\"INP001\"]  # Part of configuration, not a package.\n\".github/workflows/*.py\" = [\"INP001\"]\n\"astropy/modeling/models/__init__.py\" = [\"F405\"]\n\"astropy/utils/decorators.py\" = [\n    \"D214\", \"D215\",  # keep Examples section indented.\n    \"D411\",  # sphinx treats spaced example sections as real sections\n]\n\"test_*.py\" = [\n    \"ANN201\",  # Public function without return type annotation\n    \"B018\",  # UselessExpression\n    \"D\",  # pydocstyle\n    \"S101\",  # Use of assert detected\n]\n\".pyinstaller/*.py\" = [\"INP001\"]  # Not a package.\n\"conftest.py\" = [\"INP001\"]  # Part of configuration, not a package.\n\"docs/*.py\" = [\n    \"INP001\",  # implicit-namespace-package. The examples are not a package.\n]\n\"examples/*.py\" = [\n    \"E402\",   # Imports are done as needed.\n    \"INP001\", # implicit-namespace-package. The examples are not a package.\n    \"T203\"    # pprint found\n]\n\"__init__.py\" = [\"F403\"]  # Wildcard imports\n\n[tool.ruff.lint.flake8-annotations]\nignore-fully-untyped = true\nmypy-init-return = true\n\n[tool.ruff.lint.flake8-comprehensions]\nallow-dict-calls-with-keyword-arguments = true\n\n[tool.ruff.lint.flake8-type-checking]\nexempt-modules = []\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"astropy\", \"extension_helpers\"]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"numpy\"\n\n[tool.repo-review]\nignore = [\n    \"MY\",    # ignore MyPy setting checks\n    \"PC111\", # ignore using `blacken-docs` in pre-commit\n    \"PC140\", # ignore using `mypy` in pre-commit\n    \"PC180\", # ignore using `prettier` in pre-commit\n    \"PC901\", # ignore using custom update message (we have many of the default ones in our history already)\n    \"PP308\", # ignore requiring `-ra` flag for pytest, astropy's test suite is too large for this to be useful\n]\n\n[tool.towncrier]\n    package = \"astropy\"\n    filename = \"CHANGES.rst\"\n    directory = \"docs/changes\"\n    underlines = \"=-^\"\n    template = \"docs/changes/template.rst\"\n    title_format = \"Version {version} ({project_date})\"\n\n    [[tool.towncrier.type]]\n        directory = \"feature\"\n        name = \"New Features\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"api\"\n        name = \"API Changes\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"bugfix\"\n        name = \"Bug Fixes\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"perf\"\n        name = \"Performance Improvements\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"other\"\n        name = \"Other Changes and Additions\"\n        showcontent = true\n\n    [[tool.towncrier.section]]\n        name = \"\"\n        path = \"\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.config\"\n        path = \"config\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.constants\"\n        path = \"constants\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.convolution\"\n        path = \"convolution\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.coordinates\"\n        path = \"coordinates\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.cosmology\"\n        path = \"cosmology\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.extern\"\n        path = \"extern\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.io.ascii\"\n        path = \"io.ascii\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.io.fits\"\n        path = \"io.fits\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.io.misc\"\n        path = \"io.misc\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.io.registry\"\n        path = \"io.registry\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.io.votable\"\n        path = \"io.votable\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.modeling\"\n        path = \"modeling\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.nddata\"\n        path = \"nddata\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.samp\"\n        path = \"samp\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.stats\"\n        path = \"stats\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.table\"\n        path = \"table\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.tests\"\n        path = \"tests\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.time\"\n        path = \"time\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.timeseries\"\n        path = \"timeseries\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.uncertainty\"\n        path = \"uncertainty\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.units\"\n        path = \"units\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.utils\"\n        path = \"utils\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.visualization\"\n        path = \"visualization\"\n\n    [[tool.towncrier.section]]\n        name = \"astropy.wcs\"\n        path = \"wcs\"\n\n[tool.gilesbot]\n    [tool.gilesbot.circleci_artifacts]\n        enabled = true\n\n    [tool.gilesbot.pull_requests]\n        enabled = true\n\n    [tool.gilesbot.towncrier_changelog]\n        enabled = true\n        verify_pr_number = true\n        changelog_skip_label = \"no-changelog-entry-needed\"\n        help_url = \"https://github.com/astropy/astropy/blob/main/docs/changes/README.rst\"\n        changelog_missing_long = \"There isn't a changelog file in this pull request. Please add a changelog file to the `changelog/` directory following the instructions in the changelog [README](https://github.com/astropy/astropy/blob/main/docs/changes/README.rst).\"\n        type_incorrect_long = \"The changelog file you added is not one of the allowed types. Please use one of the types described in the changelog [README](https://github.com/astropy/astropy/blob/main/docs/changes/README.rst)\"\n        number_incorrect_long = \"The number in the changelog file you added does not match the number of this pull request. Please rename the file.\"\n\n    [tool.gilesbot.circleci_artifacts.py311-test-image-mpl360]\n        url = \".tmp/py311-test-image-mpl360/results/fig_comparison.html\"\n        message = \"Click details to see the figure test comparisons, for py311-test-image-mpl360.\"\n        report_on_fail = true\n\n    [tool.gilesbot.circleci_artifacts.py311-test-image-mpldev]\n        url = \".tmp/py311-test-image-mpldev/results/fig_comparison.html\"\n        message = \"Click details to see the figure test comparisons for py311-test-image-mpldev.\"\n        report_on_fail = true\n\n[tool.codespell]\nskip = \"\"\"\n    *.cff,\n    */data/*,\n    *extern/*,\n    astropy/CITATION,\n    docs/credits.rst,\n    *_lextab.py,\n    *_parsetab.py,\n\"\"\"\n# The following list of words for codespell to ignore may contain some\n# misspellings that should be revisited and fixed in the future.\nignore-words-list = \"\"\"\n    aas,\n    ans,\n    clen,\n    coo,\n    datas,\n    ded,\n    dum,\n    fo,\n    hel,\n    lightyear,\n    lond,\n    nax,\n    nd,\n    ned,\n    nin,\n    numer,\n    precess,\n    precessed,\n    precesses,\n    precessing,\n    pres,\n    som,\n    splitted,\n    stil,\n    te,\n    wirth,\n\"\"\"\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.5615234375,
          "content": "#!/usr/bin/env python\n# Licensed under a 3-clause BSD style license - see LICENSE.rst\n\n# NOTE: The configuration for the package, including the name, version, and\n# other information are set in the pyproject.toml file.\n\nfrom setuptools import setup\n\nfrom extension_helpers import get_extensions\n\next_modules = get_extensions()\n\n# Specify the minimum version for the Numpy C-API\nfor ext in ext_modules:\n    if ext.include_dirs and \"numpy\" in ext.include_dirs[0]:\n        ext.define_macros.append((\"NPY_TARGET_VERSION\", \"NPY_1_23_API_VERSION\"))\n\nsetup(ext_modules=ext_modules)\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 6.876953125,
          "content": "[tox]\nenvlist =\n    py{311,312,313,dev}-test{,-recdeps,-alldeps,-oldestdeps,-devdeps,-devinfra,-predeps,-numpy123,-numpy124,-numpy125,-mpl360}{,-cov}{,-clocale}{,-fitsio}{,-noscipy}\n    # Only these two exact tox environments have corresponding figure hash files.\n    py311-test-image-mpl360-cov\n    py311-test-image-mpldev-cov\n    build_docs\n    linkcheck\n    codestyle\n\n[testenv]\n# Pass through the following environment variables which are needed for the CI\npassenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI,IS_CRON,ARCH_ON_CI\n\nsetenv =\n    NUMPY_WARN_IF_NO_MEM_POLICY = 1\n    # For coverage, we need to pass extra options to the C compiler\n    cov: CFLAGS = --coverage -fno-inline-functions -O0\n    # opt-in faster coverage when available (requires Python >= 3.12)\n    py312: COVERAGE_CORE=sysmon\n    py313: COVERAGE_CORE=sysmon\n    image: MPLFLAGS = -m \"mpl_image_compare\" --mpl --mpl-generate-summary=html --mpl-results-path={toxinidir}/results --mpl-hash-library={toxinidir}/astropy/tests/figures/{envname}.json --mpl-baseline-path=https://raw.githubusercontent.com/astropy/astropy-figure-tests/astropy-main/figures/{envname}/ --remote-data\n    !image: MPLFLAGS =\n    clocale: LC_CTYPE = C.ascii\n    clocale: LC_ALL = C\n    devdeps: PIP_VERBOSE = 1\n    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/liberfa/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple\n    mpldev: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scientific-python-nightly-wheels/simple\n    fitsio: ASTROPY_ALWAYS_TEST_FITSIO = true\n\n# Run the tests in a temporary directory to make sure that we don't import\n# astropy from the source tree\nchangedir = .tmp/{envname}\n\n# tox environments are constructed with so-called 'factors' (or terms)\n# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:\n# will only take effect if that factor is included in the environment name. To\n# see a list of example environments that can be run, along with a description,\n# run:\n#\n#     tox -l -v\n#\ndescription =\n    run tests\n    recdeps: with recommended optional dependencies\n    alldeps: with all optional and test dependencies\n    devdeps: with the latest developer version of key dependencies\n    devinfra: like devdeps but also dev version of infrastructure\n    oldestdeps: with the oldest supported version of key dependencies\n    cov: and test coverage\n    numpy123: with numpy 1.23.*\n    numpy124: with numpy 1.24.*\n    numpy125: with numpy 1.25.*\n    image: with image tests\n    mpl360: with matplotlib 3.6.0\n    mpldev: with the latest developer version of matplotlib\n    double: twice in a row to check for global state changes\n    noscipy: without scipy-dev\n\ndeps =\n    numpy123: numpy==1.23.*\n    numpy124: numpy==1.24.*\n    numpy125: numpy==1.25.*\n\n    mpl360: matplotlib==3.6.0\n    # mpl 3.6.0 isn't compatible with numpy 2.0 but didn't include a pin\n    mpl360: numpy<2.0\n\n    image: latex\n    image: scipy\n    image: pytest-mpl>=0.17\n\n    # Some FITS tests use fitsio as a comparison\n    fitsio: fitsio\n\n    # The oldestdeps factor is intended to be used to install the oldest versions of all\n    # dependencies that have a minimum version.\n    oldestdeps: packaging==22.0.0\n    oldestdeps: pyerfa==2.0.1.1\n    oldestdeps: numpy==1.23.2\n    oldestdeps: matplotlib==3.6.0\n    oldestdeps: asdf==2.8.*  # asdf-astropy==0.3.*\n    oldestdeps: asdf-astropy==0.3.*\n    oldestdeps: attrs < 24.1.0  # ASDF_LT_3_4\n    oldestdeps: scipy==1.9.2\n    oldestdeps: pyyaml==6.0.0\n    oldestdeps: ipython==8.0.0\n    oldestdeps: pandas==2.0.*\n    oldestdeps: pyarrow==10.0.1\n    oldestdeps: dask[array]==2022.5.1\n\n    # The devdeps factor is intended to be used to install the latest developer version\n    # or nightly wheel of key dependencies.\n    devdeps-!noscipy: scipy>=0.0.dev0\n    devdeps: numpy>=0.0.dev0\n    devdeps-!noscipy: matplotlib>=0.0.dev0\n    devdeps: pyerfa>=0.0.dev0\n\n    mpldev: matplotlib>=0.0.dev0\n\n    # Latest developer version of infrastructure packages.\n    devinfra: git+https://github.com/pytest-dev/pytest.git\n    devinfra: git+https://github.com/astropy/extension-helpers.git\n    devinfra: git+https://github.com/scientific-python/pytest-doctestplus.git\n    devinfra: git+https://github.com/astropy/pytest-remotedata.git\n    devinfra: git+https://github.com/astropy/pytest-astropy-header.git\n    devinfra: git+https://github.com/astropy/pytest-arraydiff.git\n    devinfra: git+https://github.com/astropy/pytest-filter-subpackage.git\n    devinfra: git+https://github.com/matplotlib/pytest-mpl.git\n    devinfra: git+https://github.com/astropy/pytest-astropy.git\n\n# The following indicates which [project.optional-dependencies] from pyproject.toml will be installed\nextras =\n    test: test\n    recdeps: recommended\n    recdeps: test_all\n    alldeps: all\n    alldeps: test_all\n\ncommands =\n    {list_dependencies_command}\n    !cov-!double: pytest --pyargs astropy {toxinidir}/docs {env:MPLFLAGS} {posargs}\n    cov-!double: pytest --pyargs astropy {toxinidir}/docs {env:MPLFLAGS} --cov astropy --cov-config={toxinidir}/pyproject.toml --cov-report xml:{toxinidir}/coverage.xml {posargs}\n\n    double: python -c 'import sys; from astropy import test; test(); sys.exit(test())'\n\npip_pre =\n    devdeps: true\n    predeps: true\n\n\n# This lets developers use tox to build docs and ignores warnings.\n# This is not used in CI; For that, we have RTD PR builder.\n[testenv:build_docs]\nchangedir = docs\ndescription = invoke sphinx-build to build the HTML docs\nextras =\n  docs\n  all\ncommands =\n    {list_dependencies_command}\n    sphinx-build -b html . _build/html {posargs:-j auto}\n\n[testenv:linkcheck]\nchangedir = docs\ndescription = check the links in the HTML docs\nextras = docs\ncommands =\n    {list_dependencies_command}\n    sphinx-build -b linkcheck . _build/html {posargs:-W}\n\n[testenv:codestyle]\nskip_install = true\ndescription = Run all style and file checks with pre-commit\ndeps =\n    pre-commit\ncommands =\n    pre-commit install-hooks\n    pre-commit run {posargs:--color always --all-files --show-diff-on-failure}\n\n[testenv:pyinstaller]\n# Check that astropy can be included in a PyInstaller bundle without any issues. This\n# also serves as a test that tests do not import anything from outside the tests\n# directories with relative imports, since we copy the tests out to a separate directory\n# to run them.\ndescription = check that astropy can be included in a pyinstaller bundle\nchangedir = .pyinstaller\ndeps =\n    pyinstaller\n    pytest-mpl\n    matplotlib\nextras = test\ncommands =\n    pyinstaller --onefile run_astropy_tests.py \\\n                --distpath . \\\n                --additional-hooks-dir hooks \\\n                --exclude-module tkinter \\\n                --collect-submodules=py \\\n                --hidden-import pytest \\\n                --hidden-import pytest_astropy.plugin \\\n                --hidden-import pytest_remotedata.plugin \\\n                --hidden-import pytest_doctestplus.plugin \\\n                --hidden-import pytest_mpl.plugin\n    ./run_astropy_tests --astropy-root {toxinidir}\n"
        }
      ]
    }
  ]
}