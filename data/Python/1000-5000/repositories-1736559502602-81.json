{
  "metadata": {
    "timestamp": 1736559502602,
    "page": 81,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pudo/dataset",
      "stars": 4785,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bumpversion.cfg",
          "type": "blob",
          "size": 0.2548828125,
          "content": "[bumpversion]\ncurrent_version = 1.6.2\ntag_name = {new_version}\ncommit = True\ntag = True\n\n[bumpversion:file:setup.py]\nsearch = version=\"{current_version}\"\nreplace = version=\"{new_version}\"\n\n[bumpversion:file:dataset/__init__.py]\n\n[bumpversion:file:docs/conf.py]\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.150390625,
          "content": "*.pyc\n*.egg-info\n*.egg\n.eggs/\ndist/*\n.tox/*\n.vscode/*\nbuild/*\n.DS_Store\n.watchr\n.coverage\nhtmlcov/\n\n*.pyo\nenv3/*\nenv/*\nTest.yaml\nFreezefile.yaml\n:memory:\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.0048828125,
          "content": "# dataset ChangeLog\n\n*The changelog has only been started with version 0.3.12, previous\nchanges must be reconstructed from revision history.*\n\n* 1.2.0: Add support for views, multiple comparison operators.\n  Remove support for Python 2.\n* 1.1.0: Introduce `types` system to shortcut for SQLA types.\n* 1.0.0: Massive re-factor and code cleanup.\n* 0.6.0: Remove sqlite_datetime_fix for automatic int-casting of dates,\n  make table['foo', 'bar'] an alias for table.distinct('foo', 'bar'),\n  check validity of column and table names more thoroughly, rename\n  reflectMetadata constructor argument to reflect_metadata, fix\n  ResultIter to not leave queries open (so you can update in a loop).\n* 0.5.7: dataset Databases can now have customized row types. This allows,\n  for example, information to be retrieved in attribute-accessible dict\n  subclasses, such as stuf.\n* 0.5.4: Context manager for transactions, thanks to @victorkashirin.\n* 0.5.1: Fix a regression where empty queries would raise an exception.\n* 0.5: Improve overall code quality and testing, including Travis CI.\n  An advanced __getitem__ syntax which allowed for the specification \n  of primary keys when getting a table was dropped. \n  DDL is no longer run against a transaction, but the base connection. \n* 0.4: Python 3 support and switch to alembic for migrations.\n* 0.3.15: Fixes to update and insertion of data, thanks to @cli248\n  and @abhinav-upadhyay.\n* 0.3.14: dataset went viral somehow. Thanks to @gtsafas for\n  refactorings, @alasdairnicol for fixing the Freezfile example in \n  the documentation. @diegoguimaraes fixed the behaviour of insert to\n  return the newly-created primary key ID. table.find_one() now\n  returns a dict, not an SQLAlchemy ResultProxy. Slugs are now generated\n  using the Python-Slugify package, removing slug code from dataset. \n* 0.3.13: Fixed logging, added support for transformations on result\n  rows to support slug generation in output (#28).\n* 0.3.12: Makes table primary key's types and names configurable, fixing\n  #19. Contributed by @dnatag.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.08203125,
          "content": "Copyright (c) 2013, Open Knowledge Foundation, Friedrich Lindenberg,\n  Gregor Aisch\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3701171875,
          "content": "\nall: clean test dists\n\n.PHONY: test\ntest:\n\tpytest\n\ndists:\n\tpython setup.py sdist\n\tpython setup.py bdist_wheel\n\nrelease: dists\n\tpip install -q twine\n\ttwine upload dist/*\n\n.PHONY: clean\nclean:\n\trm -rf dist build .eggs\n\tfind . -name '*.egg-info' -exec rm -fr {} +\n\tfind . -name '*.egg' -exec rm -f {} +\n\tfind . -name '*.pyc' -exec rm -f {} +\n\tfind . -name '*.pyo' -exec rm -f {} +\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.595703125,
          "content": "dataset: databases for lazy people\n==================================\n\n![build](https://github.com/pudo/dataset/workflows/build/badge.svg)\n\nIn short, **dataset** makes reading and writing data in databases as simple as reading and writing JSON files.\n\n[Read the docs](https://dataset.readthedocs.io/)\n\nTo install dataset, fetch it with ``pip``:\n\n```bash\n$ pip install dataset\n```\n\n**Note:** as of version 1.0, **dataset** is split into two packages, with the\ndata export features now extracted into a stand-alone package, **datafreeze**.\nSee the relevant repository [here](https://github.com/pudo/datafreeze).\n"
        },
        {
          "name": "dataset",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.125,
          "content": "[metadata]\ndescription-file = README.md\n\n[flake8]\nignore = E501,E123,E124,E126,E127,E128,E722,E741\n\n[bdist_wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.544921875,
          "content": "from setuptools import setup, find_packages\n\nwith open(\"README.md\") as f:\n    long_description = f.read()\n\nsetup(\n    name=\"dataset\",\n    version=\"1.6.2\",\n    description=\"Toolkit for Python-based database access.\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    classifiers=[\n        \"Development Status :: 3 - Alpha\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n    ],\n    keywords=\"sql sqlalchemy etl loading utility\",\n    author=\"Friedrich Lindenberg, Gregor Aisch, Stefan Wehrmeyer\",\n    author_email=\"friedrich.lindenberg@gmail.com\",\n    url=\"http://github.com/pudo/dataset\",\n    license=\"MIT\",\n    packages=find_packages(exclude=[\"ez_setup\", \"examples\", \"test\"]),\n    namespace_packages=[],\n    include_package_data=False,\n    zip_safe=False,\n    install_requires=[\n        \"sqlalchemy >= 1.3.2, < 2.0.0\",\n        \"alembic >= 0.6.2\",\n        \"banal >= 1.0.1\",\n    ],\n    extras_require={\n        \"dev\": [\n            \"pip\",\n            \"pytest\",\n            \"wheel\",\n            \"flake8\",\n            \"coverage\",\n            \"psycopg2-binary\",\n            \"PyMySQL\",\n            \"cryptography\",\n        ]\n    },\n    tests_require=[\"pytest\"],\n    test_suite=\"test\",\n    entry_points={},\n)\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}