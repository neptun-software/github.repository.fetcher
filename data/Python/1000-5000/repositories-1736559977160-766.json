{
  "metadata": {
    "timestamp": 1736559977160,
    "page": 766,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eudicots/Cactus",
      "stars": 3465,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.111328125,
          "content": ".DS_Store\n*.pyc\ndist\nbuild\nskeleton.tar.gz\nCactus.egg-info\nexamples/blog/config.json\n*.egg\n.tox\nTestProject\n.eggs\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2353515625,
          "content": "sudo: false\nlanguage: python\npython:\n    - \"2.6\"\n    - \"2.7\"\n    - \"3.4\"\n    - \"3.5\"\n    - \"3.6\"\n    - \"3.6-dev\"\n    - \"3.7-dev\"\n    - \"nightly\"\ninstall:\n    - pip install .\n    - pip install -r test_requirements.txt\nscript:\n    - nosetests\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.705078125,
          "content": "Benjamin Estes <benjamin.estes@distilled.net>\nBenjamin Petersen <bnjmn.ptrsn@gmail.com>\nEmmanuel Ackaouy <ack@mindthefrog.com>\nGary Robertson <gary@aardweb.co.uk>\nJason Bonta <jbonta@gmail.com>\nJeffrey Paul <sneak@datavibe.net>\nJochen Brissier <j.brissier@gmail.com>\nJoe Germuska <joe@germuska.com>\nJon LÃ¸nne <jon@funkbit.no>\nKlaas Pieter Annema <klaaspieter@annema.me>\nKoen Bok <koen@madebysofa.com>\nRoss McFarland <rwmcfa1@gmail.com>\nRyan Bagwell <ryan@ryanbagwell.com>\nThomas Bartels <tbartels@gmail.com>\nThomas Orozco <thomas@orozco.fr>\nTodd Kennedy <todd.kennedy@gmail.com>\nTodd Kennedy <todd@updater.com>\nTom Kruijsen <tom@tomkr.org>\nTung Dao <me@tungdao.com>\njochen brissier <codenameuser@me.com>\npjv <pjv@pjv.me>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.451171875,
          "content": "Copyright (c) 2012 Koen Bok. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, \n  this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n* Neither the name of Koen Bok nor the names of any contributors may\n  be used to endorse or promote products derived from this software without\n  specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT \nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR \nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT \nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, \nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED \nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR \nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF \nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING \nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0634765625,
          "content": "include LICENSE README.md requirements.txt test_requirements.txt\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4375,
          "content": "install:\n\tpython setup.py install\n\tmake clean\n\nuninstall:\n\tpython setup.py uninstall\n\nreinstall:\n\tmake uninstall\n\tmake install\n\nclean:\n\trm -Rf build Cactus.egg-info dist\n\ntest:\n\ttox\n\ntestw:\n\twatchmedo shell-command \\\n\t\t--patterns=\"*.py;*.txt\" \\\n\t\t--recursive \\\n\t\t--command='nosetests -x -s --logging-level=CRITICAL --processes=4' \\\n\t\t.\n\nalltests:\n\tmake clean\n\tmake uninstall\n\tmake install\n\tmake test\n\nsubmit:\n\tpython setup.py register\n\n.PHONY: test"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.11328125,
          "content": "[![Build Status](https://travis-ci.org/eudicots/Cactus.svg?branch=master)](https://travis-ci.org/eudicots/Cactus)\n\nNews\n--------------\n\n### Cactus 3 is out!\n\nWe're happy to announce Cactus 3. It brings a set of great new features like asset fingerprinting, an asset pipeline, pretty urls, native Mac filesystem events, automatic nameserver configuration, support for multiple deployment backends (Google Sites) and more. Large parts of the code have been rewritten, accompanied by an extensive suite of unit tests. Many thanks to Thomas Orozco and other contributors.\n\n\nWhat is Cactus\n--------------\n\nCactus is a simple but powerful [static website generator][1] using Python and the [Django template system][2].\nCactus also makes it easy to develop locally and deploy your site to S3 directly.\nIt works great for company, portfolio, personal, support websites and blogs.\n\nTo get a quick overview [watch this short video tutorial][3].\n\nCactus is based on the idea that most dynamic features on websites these days can be done using Javascript while the\nactual site can stay static. Static websites are easy to host and typically very fast.\n\nI developed Cactus because I wanted a standard, easy system that designers at [Sofa](http://madebysofa.com) could\nuse to build and deploy fast websites. So typical users would be designers that are tech-savvy, want to use templates,\nbut don't like to mess with setting up django or S3.\n\nSince then it has evolved quite a bit with a plugin system that supports blogging, spriting, versioning and is\nextensible.\n\nYou can find more discussion about static site generators in this [Hacker News discussion][4].\n\n\n### Examples\n\n  + http://www.cactusformac.com -  Cactus app site\n  + http://www.framerjs.com - Framer website\n  + https://crate.io - Crate, Distributed Database for Docker (source: https://github.com/crate/crate-web)\n\n\nThere is also an example blog project included.\n\n\nSuper quick tutorial for the impatient\n--------------------------------------\n\nInstall Cactus with the following one liner\n\n    sudo easy_install cactus\n\nIf you saw no errors, you can now generate a new project\n\n    cactus create ~/www.mysite.com\n\nTo start editing and previewing your site type the following. Then point your browser to localhost:8000 and start editing. Cactus will automatically rebuild your project and refresh your browser on changes.\n\n    cd ~/www.mysite.com\n    cactus serve\n\nOnce you are ready to deploy your site to S3 you can run the following. You will need your [Amazon access keys][5].\nIf you don't have one yet, [read how to get one here][6].\n\n    cactus deploy\n\nVoila. Your website generated by Cactus and hosted on S3!\n\n\nExtended guide\n--------------\n\n### Creating a new project\n\nYou can create a new project by generating a new project structure like this. Make sure the destination folder does not\nexist yet.\n\n    cactus create [path]\n\nIf you did not see any errors, the path you pointed to should now look like this.\n\n    - .build                Generated site (upload this to your host)\n    - pages                 Your actual site pages\n        - index.html\n        - sitemap.xml\n        - robots.txt\n        - error.html        A default 404 page\n    - templates             Holds your django templates\n        - base.html\n    - static                Directory with static assets\n        - images\n        - css\n        - js\n    - plugins               A list of plugins. To enable remove disabled from the name\n\n\n### Making your site\n\nAfter generating your site you can start building by adding pages to contents, which can rely on templates. So for\nexample if you want a page `/articles/2010/my-article.html` you would create the file with directories in your pages\nfolder. Then you can edit the file and use django's template features.\n\n\n### Building your site\n\nWhen you build your site it will generate a static version in the build folder that you can upload to any host.\nBasically it will render each page from your pages folder, copy it over to the build folder and add all the static\nassets to it so it becomes a self contained website. You can build your site like this:\n\n    cd [your-cactus-path]\n    cactus build\n\nYour rendered website can now be found in the (hidden) [path]/.build folder. Cactus can also run a small webserver to\npreview your site and update it when you make any changes. This is really handy when developing to get live visual feedback.\n\nYou can run it like this:\n\n    cactus serve\n\n### Linking and contexts\n\nCactus makes it easy to relatively link to pages and static assets inside your project by using the template tags\n{% static %} and {% url %}. For example if you are at page `/blog/2011/Jan/my-article.html` and would like to link to\n`/contact.html` you would write the following:\n\n    <a href=\"{% url '/contact.html' %}\">Contact</a>\n\nJust use the URL you would normally use: don't forget the leading slash.\n\n\n### Templates\n\nCactus uses the Django templates. They should be very similar to other templating systems and have some nice\ncapabilities like inheritance. In a nutshell: a variable looks like this `{{ name }}` and a tag like this\n`{% block title %}Welcome{% endblock %}`. You can read the [full documentation][7] at the django site.\n\n\n### Enabling Plugins\n\nTo enable a plugin for your site, change the file name from [PLUGIN].disabled.py to [PLUGIN].py.\n\n### Deploying\n\nCactus can deploy your website directly to S3, all you need are your Amazon credentials and a bucket name. Cactus\nremembers these in a configuration file name config.json to make future deploys painless. The secret key is stored\nsecurely in the Keychain or similar services on other OSs.\n\n    cactus deploy\n\nAfter deploying you can visit the website directly. Cactus also makes sure all your text files are compressed and adds caching headers.\n\n\n### Extras\n\n#### Blogs\n\nFor the full example of how to build a blog on top of Cactus, see [CactusBlog](https://github.com/koenbok/CactusBlog/).\n\nBlog plugin takes post title, author, and date from metadata. For example:\n\n    title: My first post\n    author: Koen Bok\n    date: 22-07-2012\n\n    {% extends \"post.html\" %}\n    {% block body %}\n\n    {% endblock %}\n\nModify `config.json` to set a custom blog path, default author name, or date pattern used to parse metadata. The defaults are:\n\n    \"blog\": {\n        \"path\": \"blog\",\n        \"author\": \"Unknown\",\n        \"date-format\": \"%d-%m-%Y\"\n    }\n\n#### YAML Variables\nBy default you can declare variables to be included above each page, for example:\n\n```\ntest_text: Lorem Ipsum\n\n<p>{{ test_text }}</p>\n```\n\nYou can declare the variables using YAML instead. Just surround the block with the `---`\nand `...` [Document Separators](http://yaml.org/spec/1.1/#id857577). Then the objects\nand arrays will be available inside the templates:\n\n```\n---\nheader_text: Lorem Ipsum\ncustom_object:\n  name: Lorem\n  description: Ipsum\ncustom_array:\n  -\n    name: lorem\n  -\n    name: ipsum\n...\n\n{% for item in custom_array %}\n  <p>{{ header_text }}: {{ item.name }}</p>\n{% endfor %}\n\n<p>{{ custom_object.name }} | {{ custom_object.description }}</p>\n```\n\nThe *PyYAML* library is used for this functionality.\n\n#### Asset pipeline\n\nCactus comes with an asset pipeline for your static files. If you'd like to use it, make sure you use the {% static %}\ntemplate tag to link to your static assets: they might be renamed in the process.\n\n\n##### Fingerprinting\n\nModify `config.json`, and add the extensions you want to be fingerprinting:\n\n    \"fingerprint\": [\n        \"js\",\n        \"css\"\n    ],\n\nThis lets you enable caching with long expiration dates. When a file changes, its name will reflect the change. Great for when you use a CDN.\n\n\n##### Optimization\n\nModify `config.json`, and add the extensions you want to be optimizing:\n\n    \"optimize\": [\n        \"js\",\n        \"css\"\n    ],\n\n\nBy default, Cactus will use:\n\n  + YUI for CSS minification\n  + Closure compiler for JS minification (YUI is built-in too, so you can use it!)\n\nCheck out `plugins/static_optimizes.py` in your project to understand how this works. It's very easy to add your own\noptimizers!\n\n\n#### Site URL\n\nIf you would like for your sitemap to have absolute paths you need to\nadd a site-url key to your config.json\n\nYou can enable this by adding modifying your configuration and adding:\n\n    \"site-url\": \"http://yoursite.com\",\n\nNote that you need to do this if you want your sitemap to be valid for Google Webmaster Tools.\n\n\n#### \"Pretty\" URLs\n\nIf you would like to not have \".html\" in your URLs, Cactus can rewrite those for you, and make \"/my-page.html\" look\nappear as \"/my-page/\", by creating the \"/my-page/index.html\" file.\n\nYou can enable this by adding modifying your configuration and adding:\n\n    \"prettify\": true\n\nNote that if you're going to use this, you should definitely set your \"Meta canonical\" to the URL you're using so as\nto not hurt your search rankings:\n\n    <link rel=\"canonical\" href=\"{{ CURRENT_PAGE.absolute_final_url }}\" />\n\n\n#### Nameserver configuration\n\nTo set up a hosted zone and generate the correct nameserver records for your domain, make sure your bucket is a valid domain name, and run:\n\n    cactus domain:setup\n\nCactus will return with a set of nameservers that you can then enter with your registrar. To see the list again run:\n\n    cactus domain:list\n\nIf your domain is 'naked' (eg. without www), Cactus will add create an extra bucket that redirects the www variant of your domain to your naked domain (so www.cactus.com to cactus.com). All the above is Amazon only for now.\n\n\n#### Extra files\n\nCactus will auto generate a `robots.txt` and `sitemap.xml` file for you based on your pages.\n\nThis will help bots to index your pages for Google and Bing for example.\n\n\nPython Versions\n---------------\n\nCactus is tested on Python 2.6, 2.7, 3.4 and 3.5. It probably works on Python\n3.3 as well.\n\n\n  [1]: http://mickgardner.com/2011/04/27/An-Introduction-To-Static-Site-Generators.html\n  [2]: http://docs.djangoproject.com/en/dev/topics/templates/\n  [3]: https://vimeo.com/46999791\n  [4]: http://news.ycombinator.com/item?id=2233620\n  [5]: https://payments.amazon.com/sdui/sdui/helpTab/Checkout-by-Amazon/Advanced-Integration-Help/Using-Your-Access-Key\n  [6]: http://www.hongkiat.com/blog/amazon-s3-the-beginners-guide/#Gettting_an_Amazon_S3_Account\n  [7]: https://docs.djangoproject.com/en/dev/topics/templates/\n"
        },
        {
          "name": "cactus",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.2.6.txt",
          "type": "blob",
          "size": 0.017578125,
          "content": "keyring>=5.0,<6.0\n"
        },
        {
          "name": "requirements.2.7.txt",
          "type": "blob",
          "size": 0.0126953125,
          "content": "keyring>=4.0\n"
        },
        {
          "name": "requirements.3.txt",
          "type": "blob",
          "size": 0.0126953125,
          "content": "keyring>=4.0\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1259765625,
          "content": "Django>=1.6,<1.7\ndjango-markwhat>=1.4,<2\nmarkdown2\nargparse\nkeyring\nboto>=2.4.1\ntornado>=3.2\ncolorlog\ncolorama\nsix>=1.9.0\nPyYAML\n"
        },
        {
          "name": "run.py",
          "type": "blob",
          "size": 0.1552734375,
          "content": "#!/usr/bin/env python\n# encoding: utf-8\n\nimport cactus\n\nfrom cactus.cli import main\n\nprint \"Using: %s\" % cactus.__file__\n\nif __name__ == \"__main__\":\n    main()"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.025390625,
          "content": "[bdist_wheel]\nuniversal=1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 5.041015625,
          "content": "import os\nimport sys\nimport subprocess\nimport shutil\n\nfrom distutils.sysconfig import get_python_lib\nfrom setuptools import setup\n\n\nVERSION = \"3.3.3\"\nSKELETON_FOLDERS = ['pages', 'plugins', 'static/css', 'static/images', 'static/js', 'templates', 'locale']\nSKELETON_GLOB = ['skeleton/{0}/*'.format(folder) for folder in SKELETON_FOLDERS]\n\nif \"uninstall\" in sys.argv:\n\n    def run(command):\n        try:\n            return subprocess.check_output(command, shell = True).strip()\n        except subprocess.CalledProcessError:\n            pass\n\n    cactusBinPath = run('which cactus')\n    cactusPackagePath = None\n\n    for p in os.listdir(get_python_lib()):\n        if p.lower().startswith('cactus') and p.lower().endswith('.egg'):\n            cactusPackagePath = os.path.join(get_python_lib(), p)\n\n    if cactusBinPath and os.path.exists(cactusBinPath):\n        sys.stdout.write('Removing cactus script at %s' % cactusBinPath)\n        os.unlink(cactusBinPath)\n\n    if cactusPackagePath and os.path.isdir(cactusPackagePath):\n        sys.stdout.write('Removing cactus package at %s' % cactusPackagePath)\n        shutil.rmtree(cactusPackagePath)\n\n    sys.exit()\n\nif \"install\" in sys.argv or \"bdist_egg\" in sys.argv:\n\n    # Check if we have an old version of cactus installed\n    p1 = '/usr/local/bin/cactus.py'\n    p2 = '/usr/local/bin/cactus.pyc'\n\n    if os.path.exists(p1) or os.path.exists(p2):\n        sys.stdout.write(\"Error: you have an old version of Cactus installed, we need to move it:\")\n        if os.path.exists(p1):\n            sys.stderr.write(\"  sudo rm %s\" % p1)\n        if os.path.exists(p2):\n            sys.stderr.write(\"  sudo rm %s\" % p2)\n        sys.exit()\n\n# From Django\n\ndef fullsplit(path, result=None):\n    \"\"\"\n    Split a pathname into components (the opposite of os.path.join)\n    in a platform-neutral way.\n    \"\"\"\n    if result is None:\n        result = []\n    head, tail = os.path.split(path)\n    if head == '':\n        return [tail] + result\n    if head == path:\n        return result\n    return fullsplit(head, [tail] + result)\n\n\nEXCLUDE_FROM_PACKAGES = ['cactus.skeleton',]\n\ndef is_package(package_name):\n    for pkg in EXCLUDE_FROM_PACKAGES:\n        if package_name.startswith(pkg):\n            return False\n    return True\n\n# Compile the list of packages available, because distutils doesn't have\n# an easy way to do this.\npackages, package_data = [], {}\n\nroot_dir = os.path.dirname(__file__)\nif root_dir != '':\n    os.chdir(root_dir)\ncactus_dir = 'cactus'\n\nfor dirpath, dirnames, filenames in os.walk(cactus_dir):\n    # Ignore PEP 3147 cache dirs and those whose names start with '.'\n    dirnames[:] = [d for d in dirnames if not d.startswith('.') and d != '__pycache__']\n    parts = fullsplit(dirpath)\n    package_name = '.'.join(parts)\n    if '__init__.py' in filenames and is_package(package_name):\n        packages.append(package_name)\n    elif filenames:\n        relative_path = []\n        while '.'.join(parts) not in packages:\n            relative_path.append(parts.pop())\n        relative_path.reverse()\n        path = os.path.join(*relative_path)\n        package_files = package_data.setdefault('.'.join(parts), [])\n        package_files.extend([os.path.join(path, f) for f in filenames])\n\n\ndef find_requirements():\n    # Find all requirements.VERSION.txt files that match (e.g. Python 2.6 matches\n    # requirements.2.6.txt, requirements.2.txt, and requirments.txt).\n    v = [str(x) for x in  sys.version_info[:2]]\n    requirements = []\n    while True:\n        reqs_file = '.'.join([\"requirements\"] + v + [\"txt\"])\n        try:\n            with open(os.path.join(root_dir, reqs_file)) as f:\n                requirements.extend(f.readlines())\n        except IOError:\n            pass\n        try:\n            v.pop()\n        except IndexError:\n            break\n\n    return requirements\n\nsetup(\n    name='Cactus',\n    version=VERSION,\n    description=\"Static site generation and deployment.\",\n    long_description=open('README.md').read(),\n    url='http://github.com/koenbok/Cactus',\n    author='Koen Bok',\n    author_email='koen@madebysofa.com',\n    license='BSD',\n    packages=packages,\n    package_data=package_data,\n    entry_points={\n        'console_scripts': [\n            'cactus = cactus.cli:cli_entrypoint',\n        ],\n    },\n    install_requires=find_requirements(),\n    extras_require={\n        'GCS Deployment': ['google-api-python-client'],\n        'Cloud Files Deployment': ['pyrax'],\n        'Mac Native FSEvents': ['macfsevents'],\n    },\n    tests_require=open(os.path.join(root_dir, \"test_requirements.txt\")).readlines(),\n    zip_safe=False,\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Environment :: Console\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: BSD License\",\n        \"Natural Language :: English\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python :: 2\",\n        \"Programming Language :: Python :: 2.6\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.4\",\n        \"Topic :: Internet :: WWW/HTTP\",\n    ],\n)\n"
        },
        {
          "name": "test_requirements.txt",
          "type": "blob",
          "size": 0.0322265625,
          "content": "nose\nmock\ntox\nunittest2\nrequests\n"
        },
        {
          "name": "todo.txt",
          "type": "blob",
          "size": 0.271484375,
          "content": "# Features\n\n- Attempt to re-use the same port\n- Kill process when parent dies\n\n- GC old stuff from s3?\n- See if all assets are used\n- Update html, css last on deploy to prevent/minimize weirdness\n\n# Plugins\n\n- Less CSS\n- Javascript Clojure/Minify\n- Offline Manifest\n- CloudFront"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.2822265625,
          "content": "[tox]\nenvlist={py26,py27,py34,py35}-{win,linux,darwin}\n\n[testenv]\nplatform=\n    win: win\n    linux: linux\n    darwin: darwin\ndeps =\n    --requirement={toxinidir}/requirements.txt\n    --requirement={toxinidir}/test_requirements.txt\n    darwin: macfsevents\ncommands=\n    nosetests {posargs}\n"
        }
      ]
    }
  ]
}