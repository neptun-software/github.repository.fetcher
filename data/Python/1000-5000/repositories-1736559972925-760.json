{
  "metadata": {
    "timestamp": 1736559972925,
    "page": 760,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "foolwood/SiamMask",
      "stars": 3482,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1748046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2019 Qiang Wang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.2919921875,
          "content": "# SiamMask\n\n**NEW:** now including code for both training and inference!\n\n\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/fast-online-object-tracking-and-segmentation/visual-object-tracking-vot201718)](https://paperswithcode.com/sota/visual-object-tracking-vot201718?p=fast-online-object-tracking-and-segmentation)\n\nThis is the official implementation with *training* code for SiamMask (CVPR2019). For technical details, please refer to:\n\n**Fast Online Object Tracking and Segmentation: A Unifying Approach** <br />\n[Qiang Wang](http://www.robots.ox.ac.uk/~qwang/)\\*, [Li Zhang](http://www.robots.ox.ac.uk/~lz)\\*, [Luca Bertinetto](http://www.robots.ox.ac.uk/~luca)\\*, [Weiming Hu](https://scholar.google.com/citations?user=Wl4tl4QAAAAJ&hl=en), [Philip H.S. Torr](https://scholar.google.it/citations?user=kPxa2w0AAAAJ&hl=en&oi=ao) (\\* denotes equal contribution) <br />\n**CVPR 2019** <br />\n**[[Paper](https://arxiv.org/abs/1812.05050)] [[Video](https://youtu.be/I_iOVrcpEBw)] [[Project Page](http://www.robots.ox.ac.uk/~qwang/SiamMask)]** <br />\n\n\n<div align=\"center\">\n  <img src=\"http://www.robots.ox.ac.uk/~qwang/SiamMask/img/SiamMask.jpg\" width=\"600px\" />\n</div>\n\n### Bibtex\nIf you find this code useful, please consider citing:\n\n```\n@inproceedings{wang2019fast,\n    title={Fast online object tracking and segmentation: A unifying approach},\n    author={Wang, Qiang and Zhang, Li and Bertinetto, Luca and Hu, Weiming and Torr, Philip HS},\n    booktitle={Proceedings of the IEEE conference on computer vision and pattern recognition},\n    year={2019}\n}\n```\n\n\n## Contents\n1. [Environment Setup](#environment-setup)\n2. [Demo](#demo)\n3. [Testing Models](#testing-models)\n4. [Training Models](#training-models)\n\n## Environment setup\nThis code has been tested on Ubuntu 16.04, Python 3.6, Pytorch 0.4.1, CUDA 9.2, RTX 2080 GPUs\n\n- Clone the repository \n```\ngit clone https://github.com/foolwood/SiamMask.git && cd SiamMask\nexport SiamMask=$PWD\n```\n- Setup python environment\n```\nconda create -n siammask python=3.6\nsource activate siammask\npip install -r requirements.txt\nbash make.sh\n```\n- Add the project to your PYTHONPATH\n```\nexport PYTHONPATH=$PWD:$PYTHONPATH\n```\n\n## Demo\n- [Setup](#environment-setup) your environment\n- Download the SiamMask model\n```shell\ncd $SiamMask/experiments/siammask_sharp\nwget http://www.robots.ox.ac.uk/~qwang/SiamMask_VOT.pth\nwget http://www.robots.ox.ac.uk/~qwang/SiamMask_DAVIS.pth\n```\n- Run `demo.py`\n\n```shell\ncd $SiamMask/experiments/siammask_sharp\nexport PYTHONPATH=$PWD:$PYTHONPATH\npython ../../tools/demo.py --resume SiamMask_DAVIS.pth --config config_davis.json\n```\n\n<div align=\"center\">\n  <img src=\"http://www.robots.ox.ac.uk/~qwang/SiamMask/img/SiamMask_demo.gif\" width=\"500px\" />\n</div>\n\n\n## Testing\n- [Setup](#environment-setup) your environment\n- Download test data\n```shell\ncd $SiamMask/data\nsudo apt-get install jq\nbash get_test_data.sh\n```\n- Download pretrained models\n```shell\ncd $SiamMask/experiments/siammask_sharp\nwget http://www.robots.ox.ac.uk/~qwang/SiamMask_VOT.pth\nwget http://www.robots.ox.ac.uk/~qwang/SiamMask_VOT_LD.pth\nwget http://www.robots.ox.ac.uk/~qwang/SiamMask_DAVIS.pth\n```\n- Evaluate performance on [VOT](http://www.votchallenge.net/)\n```shell\nbash test_mask_refine.sh config_vot.json SiamMask_VOT.pth VOT2016 0\nbash test_mask_refine.sh config_vot.json SiamMask_VOT.pth VOT2018 0\nbash test_mask_refine.sh config_vot.json SiamMask_VOT.pth VOT2019 0\nbash test_mask_refine.sh config_vot18.json SiamMask_VOT_LD.pth VOT2016 0\nbash test_mask_refine.sh config_vot18.json SiamMask_VOT_LD.pth VOT2018 0\npython ../../tools/eval.py --dataset VOT2016 --tracker_prefix C --result_dir ./test/VOT2016\npython ../../tools/eval.py --dataset VOT2018 --tracker_prefix C --result_dir ./test/VOT2018\npython ../../tools/eval.py --dataset VOT2019 --tracker_prefix C --result_dir ./test/VOT2019\n```\n- Evaluate performance on [DAVIS](https://davischallenge.org/) (less than 50s)\n```shell\nbash test_mask_refine.sh config_davis.json SiamMask_DAVIS.pth DAVIS2016 0\nbash test_mask_refine.sh config_davis.json SiamMask_DAVIS.pth DAVIS2017 0\n```\n- Evaluate performance on [Youtube-VOS](https://youtube-vos.org/) (need download data from [website](https://youtube-vos.org/dataset/download))\n```shell\nbash test_mask_refine.sh config_davis.json SiamMask_DAVIS.pth ytb_vos 0\n```\n\n### Results\nThese are the reproduction results from this repository. All results can be downloaded from our [project page](http://www.robots.ox.ac.uk/~qwang/SiamMask/).\n\n|                           <sub>Tracker</sub>                           |      <sub>VOT2016</br>EAO /  A / R</sub>     |      <sub>VOT2018</br>EAO / A / R</sub>      |  <sub>DAVIS2016</br>J / F</sub>  |  <sub>DAVIS2017</br>J / F</sub>  |     <sub>Youtube-VOS</br>J_s / J_u / F_s / F_u</sub>     |     <sub>Speed</sub>     |\n|:----------------------------------------------------------------------:|:--------------------------------------------:|:--------------------------------------------:|:--------------------------------:|:--------------------------------:|:--------------------------------------------------------:|:------------------------:|\n| <sub>[SiamMask-box](http://www.robots.ox.ac.uk/~qwang/SiamMask/)</sub> |       <sub>0.412/0.623/0.233</sub>       |       <sub>0.363/0.584/0.300</sub>       |               - / -              |               - / -              |                      - / - / - / -                       | <sub>**77** FPS</sub> |\n| <sub>[SiamMask](http://www.robots.ox.ac.uk/~qwang/SiamMask/)</sub> | <sub>**0.433**/**0.639**/**0.214**</sub> | <sub>**0.380**/**0.609**/**0.276**</sub> | <sub>**0.713**/**0.674**</sub> | <sub>**0.543**/**0.585**</sub> | <sub>**0.602**/**0.451**/**0.582**/**0.477**</sub> |   <sub>56 FPS</sub>   |\n| <sub>[SiamMask-LD](http://www.robots.ox.ac.uk/~qwang/SiamMask/)</sub> | <sub>**0.455**/**0.634**/**0.219**</sub> | <sub>**0.423**/**0.615**/**0.248**</sub> | - / - | - / - | - / - / - / - | <sub>56 FPS</sub> |\n\n**Note:** \n- Speed are tested on a NVIDIA RTX 2080. \n- `-box` reports an axis-aligned bounding box from the box branch.\n- `-LD` means training with large dataset (ytb-bb+ytb-vos+vid+coco+det).\n\n\n## Training\n\n### Training Data \n- Download the [Youtube-VOS](https://youtube-vos.org/dataset/download/), \n[COCO](http://cocodataset.org/#download), \n[ImageNet-DET](http://image-net.org/challenges/LSVRC/2015/), \nand [ImageNet-VID](http://image-net.org/challenges/LSVRC/2015/).\n- Preprocess each datasets according the [readme](data/coco/readme.md) files.\n\n### Download the pre-trained model (174 MB)\n(This model was trained on the ImageNet-1k Dataset)\n```\ncd $SiamMask/experiments\nwget http://www.robots.ox.ac.uk/~qwang/resnet.model\nls | grep siam | xargs -I {} cp resnet.model {}\n```\n\n### Training SiamMask base model\n- [Setup](#environment-setup) your environment\n- From the experiment directory, run\n```\ncd $SiamMask/experiments/siammask_base/\nbash run.sh\n```\n- Training takes about 10 hours in our 4 Tesla V100 GPUs.\n- If you experience out-of-memory errors, you can reduce the batch size in `run.sh`.\n- You can view progress on Tensorboard (logs are at <experiment\\_dir>/logs/)\n- After training, you can test checkpoints on VOT dataset.\n```shell\nbash test_all.sh -s 1 -e 20 -d VOT2018 -g 4  # test all snapshots with 4 GPUs\n```\n- Select best model for hyperparametric search.\n```shell\n#bash test_all.sh -m [best_test_model] -d VOT2018 -n [thread_num] -g [gpu_num] # 8 threads with 4 GPUS\nbash test_all.sh -m snapshot/checkpoint_e12.pth -d VOT2018 -n 8 -g 4 # 8 threads with 4 GPUS\n```\n\n### Training SiamMask model with the Refine module\n- [Setup](#environment-setup) your environment\n- In the experiment file, train with the best SiamMask base model\n```\ncd $SiamMask/experiments/siammask_sharp\nbash run.sh <best_base_model>\nbash run.sh checkpoint_e12.pth\n```\n- You can view progress on Tensorboard (logs are at <experiment\\_dir>/logs/)\n- After training, you can test checkpoints on VOT dataset\n```shell\nbash test_all.sh -s 1 -e 20 -d VOT2018 -g 4\n```\n\n### Training SiamRPN++ model (*unofficial*)\n- [Setup](#environment-setup) your environment\n- From the experiment directory, run\n```\ncd $SiamMask/experiments/siamrpn_resnet\nbash run.sh\n```\n- You can view progress on Tensorboard (logs are at <experiment\\_dir>/logs/)\n- After training, you can test checkpoints on VOT dataset\n```shell\nbash test_all.sh -h\nbash test_all.sh -s 1 -e 20 -d VOT2018 -g 4\n```\n\n## License\nLicensed under an MIT license.\n\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "experiments",
          "type": "tree",
          "content": null
        },
        {
          "name": "make.sh",
          "type": "blob",
          "size": 0.1533203125,
          "content": "#!/usr/bin/env bash\n\ncd utils/pyvotkit\npython setup.py build_ext --inplace\ncd ../../\n\ncd utils/pysot/utils/\npython setup.py build_ext --inplace\ncd ../../../\n"
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.240234375,
          "content": "Cython==0.29.4\ncolorama==0.3.9\nnumpy==1.15.4\nrequests==2.21.0\nfire==0.1.3\ntorch==0.4.1\nmatplotlib==2.2.3\nnumba==0.39.0\nscipy==1.1.0\nh5py==2.8.0\npandas==0.23.4\ntqdm==4.29.1\ntensorboardX==1.6\nopencv_python==3.4.3.18\ntorch==0.4.1\ntorchvision==0.2.1\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}