{
  "metadata": {
    "timestamp": 1736559825303,
    "page": 563,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "andialbrecht/sqlparse",
      "stars": 3793,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0966796875,
          "content": "[flake8]\nexclude =\n  tests,\n  docs,\n  dist\nmax-complexity = 31\nstatistics = True\nshow-source = True"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.091796875,
          "content": "*.py[co]\ndocs/build\ndist/\nbuild/\nMANIFEST\n.coverage\n.cache/\n*.egg-info/\nhtmlcov/\n.pytest_cache"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.015625,
          "content": "# Read the Docs configuration file for Sphinx projects\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n    # You can also specify other tool versions:\n    # nodejs: \"20\"\n    # rust: \"1.70\"\n    # golang: \"1.20\"\n\n# Build documentation in the \"docs/\" directory with Sphinx\nsphinx:\n  configuration: docs/source/conf.py\n  # You can configure Sphinx to use a different builder, for instance use the dirhtml builder for simpler URLs\n  # builder: \"dirhtml\"\n  # Fail on all warnings to avoid broken references\n  # fail_on_warning: true\n\n# Optionally build your docs in additional formats such as PDF and ePub\n# formats:\n#   - pdf\n#   - epub\n\n# Optional but recommended, declare the Python requirements required\n# to build your documentation\n# See https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\n# python:\n#   install:\n#     - requirements: docs/requirements.txt"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 3.3056640625,
          "content": "python-sqlparse is written and maintained by Andi Albrecht <albrecht.andi@gmail.com>.\n\nThis module contains code (namely the lexer and filter mechanism) from\nthe pygments project that was written by Georg Brandl.\n\nThis module contains code (Python 2/3 compatibility) from the six\nproject: https://bitbucket.org/gutworth/six.\n\nAlphabetical list of contributors:\n* Adam Greenhall <agreenhall@lyft.com>\n* Adam Johnson <me@adamj.eu>\n* Aki Ariga <chezou+github@gmail.com>\n* Alexander Beedie <ayembee@gmail.com>\n* Alexey Malyshev <nostrict@gmail.com>\n* ali-tny <aliteeney@googlemail.com>\n* andrew deryabin <github@djsf.com>\n* Andrew Tipton <andrew.tipton@compareglobalgroup.com>\n* atronah <atronah.ds@gmail.com>\n* casey <casey@cloudera.com>\n* Cauê Beloni <cbeloni@gmail.com>\n* Christian Clauss <cclauss@me.com>\n* circld <circld1@gmail.com>\n* Corey Zumar <corey.zumar@databricks.com>\n* Cristian Orellana <cristiano@groupon.com>\n* Dag Wieers <dag@wieers.com>\n* Daniel Harding <dharding@living180.net>\n* Darik Gamble <darik.gamble@gmail.com>\n* Demetrio92 <Demetrio.Rodriguez.T@gmail.com>\n* Dennis Taylor <dennis.taylor@clio.com>\n* Dvořák Václav <Vaclav.Dvorak@ysoft.com>\n* Erik Cederstrand <erik@adamatics.com>\n* Florian Bauer <florian.bauer@zmdi.com>\n* Fredy Wijaya <fredy.wijaya@gmail.com>\n* Gavin Wahl <gwahl@fusionbox.com>\n* Georg Traar <georg@crate.io>\n* griff <70294474+griffatrasgo@users.noreply.github.com>\n* Hugo van Kemenade <hugovk@users.noreply.github.com>\n* hurcy <cinyoung.hur@gmail.com>\n* Ian Robertson <ian.robertson@capitalone.com>\n* Igor Khrol <igor.khrol@automattic.com>\n* JacekPliszka <Jacek.Pliszka@gmail.com>\n* JavierPan <PeterSandwich@users.noreply.github.com>\n* Jean-Martin Archer <jm@jmartin.ca>\n* Jesús Leganés Combarro \"Piranna\" <piranna@gmail.com>\n* Johannes Hoff <johshoff@gmail.com>\n* John Bodley <john.bodley@airbnb.com>\n* Jon Dufresne <jon.dufresne@gmail.com>\n* Josh Soref <jsoref@users.noreply.github.com>\n* Kevin Jing Qiu <kevin.jing.qiu@gmail.com>\n* koljonen <koljonen@outlook.com>\n* Likai Liu <liulk@likai.org>\n* Long Le Xich <codenamelxl@users.noreply.github.com>\n* mathilde.oustlant <mathilde.oustlant@ext.cdiscount.com>\n* Michael Schuller <chick@mschuller.net>\n* Mike Amy <cocoade@googlemail.com>\n* mulos <daniel.strackbein@gmail.com>\n* Oleg Broytman <phd@phdru.name>\n* osmnv <80402144+osmnv@users.noreply.github.com>\n* Patrick Schemitz <patrick.schemitz@digitalbriefkasten.de>\n* Pi Delport <pjdelport@gmail.com>\n* Prudhvi Vatala <pvatala@gmail.com>\n* quest <quest@wonky.windwards.net>\n* Robert Nix <com.github@rnix.org>\n* Rocky Meza <rmeza@fusionbox.com>\n* Romain Rigaux <romain.rigaux@gmail.com>\n* Rowan Seymour <rowanseymour@gmail.com>\n* Ryan Wooden <rygwdn@gmail.com>\n* saaj <id@saaj.me>\n* Shen Longxing <shenlongxing2012@gmail.com>\n* Simon Heisterkamp <she@delegate.dk>\n* Sjoerd Job Postmus\n* skryzh <sergeikryzh95@gmail.com>\n* Soloman Weng <soloman1124@gmail.com>\n* spigwitmer <itgpmc@gmail.com>\n* Tao Wang <twang2218@gmail.com>\n* Tenghuan <tenghuanhe@gmail.com>\n* Tim Graham <timograham@gmail.com>\n* Victor Hahn <info@victor-hahn.de>\n* Victor Uriarte <vmuriart@gmail.com>\n* Ville Skyttä <ville.skytta@iki.fi>\n* vthriller <farreva232@yandex.ru>\n* wayne.wuw <wayne.wuw@alibaba-inc.com>\n* Will Jones <willjones127@gmail.com>\n* William Ivanski <william.ivanski@gmail.com>\n* Yago Riveiro <yago.riveiro@gmail.com>\n* Zi-Xuan Fu <r33s3n6@gmail.com>\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 21.9208984375,
          "content": "Development Version\n-------------------\n\nNothing yet.\n\n\nRelease 0.5.3 (Dez 10, 2024)\n----------------------------\n\nBug Fixes\n\n* This version introduces a more generalized handling of potential denial of\n  service attack (DOS) due to recursion errors for deeply nested statements.\n  Brought up and fixed by @living180. Thanks a lot!\n\n\nRelease 0.5.2 (Nov 14, 2024)\n----------------------------\n\nBug Fixes\n\n* EXTENSION is now recognized as a keyword (issue785).\n* SQL hints are not removed when removing comments (issue262, by skryzh).\n\n\nRelease 0.5.1 (Jul 15, 2024)\n----------------------------\n\nEnhancements\n\n* New \"compact\" option for formatter. If set, the formatter tries to produce\n  a more compact output by avoiding some line breaks (issue783).\n\nBug Fixes\n\n* The strip comments filter was a bit greedy and removed too much\n  whitespace (issue772).\n  Note: In some cases you might want to add `strip_whitespace=True` where you\n  previously used just `strip_comments=True`. `strip_comments` did some of the\n  work that `strip_whitespace` should do.\n* Fix error when splitting statements that contain multiple CASE clauses\n  within a BEGIN block (issue784).\n* Fix whitespace removal with nested expressions (issue782).\n* Fix parsing and formatting of ORDER clauses containing NULLS FIRST or\n  NULLS LAST (issue532).\n\n\nRelease 0.5.0 (Apr 13, 2024)\n----------------------------\n\nNotable Changes\n\n* Drop support for Python 3.5, 3.6, and 3.7.\n* Python 3.12 is now supported (pr725, by hugovk).\n* IMPORTANT: Fixes a potential denial of service attack (DOS) due to recursion\n  error for deeply nested statements. Instead of recursion error a generic\n  SQLParseError is raised. See the security advisory for details:\n  https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-2m57-hf25-phgg\n  The vulnerability was discovered by @uriyay-jfrog. Thanks for reporting!\n\nEnhancements\n\n* Splitting statements now allows to remove the semicolon at the end.\n  Some database backends love statements without semicolon (issue742).\n* Support TypedLiterals in get_parameters (pr749, by Khrol).\n* Improve splitting of Transact SQL when using GO keyword (issue762).\n* Support for some JSON operators (issue682).\n* Improve formatting of statements containing JSON operators (issue542).\n* Support for BigQuery and Snowflake keywords (pr699, by griffatrasgo).\n* Support parsing of OVER clause (issue701, pr768 by r33s3n6).\n\nBug Fixes\n\n* Ignore dunder attributes when creating Tokens (issue672).\n* Allow operators to precede dollar-quoted strings (issue763).\n* Fix parsing of nested order clauses (issue745, pr746 by john-bodley).\n* Thread-safe initialization of Lexer class (issue730).\n* Classify TRUNCATE as DDL and GRANT/REVOKE as DCL keywords (based on pr719\n  by josuc1, thanks for bringing this up!).\n* Fix parsing of PRIMARY KEY (issue740).\n\nOther\n\n* Optimize performance of matching function (pr799, by admachainz).\n\n\nRelease 0.4.4 (Apr 18, 2023)\n----------------------------\n\nNotable Changes\n\n* IMPORTANT: This release fixes a security vulnerability in the\n  parser where a regular expression vulnerable to ReDOS (Regular\n  Expression Denial of Service) was used. See the security advisory\n  for details: https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-rrm6-wvj7-cwh2\n  The vulnerability was discovered by @erik-krogh from GitHub\n  Security Lab (GHSL). Thanks for reporting!\n\nBug Fixes\n\n* Revert a change from 0.4.0 that changed IN to be a comparison (issue694).\n  The primary expectation is that IN is treated as a keyword and not as a\n  comparison operator. That also follows the definition of reserved keywords\n  for the major SQL syntax definitions.\n* Fix regular expressions for string parsing.\n\nOther\n\n* sqlparse now uses pyproject.toml instead of setup.cfg (issue685).\n\n\nRelease 0.4.3 (Sep 23, 2022)\n----------------------------\n\nEnhancements\n\n* Add support for DIV operator (pr664, by chezou).\n* Add support for additional SPARK keywords (pr643, by mrmasterplan).\n* Avoid tokens copy (pr622, by living180).\n* Add REGEXP as a comparision (pr647, by PeterSandwich).\n* Add DISTINCTROW keyword for MS Access (issue677).\n* Improve parsing of CREATE TABLE AS SELECT (pr662, by chezou).\n\nBug Fixes\n\n* Fix spelling of INDICATOR keyword (pr653, by ptld).\n* Fix formatting error in EXTRACT function (issue562, issue670, pr676, by ecederstrand).\n* Fix bad parsing of create table statements that use lower case (issue217, pr642, by mrmasterplan).\n* Handle backtick as valid quote char (issue628, pr629, by codenamelxl).\n* Allow any unicode character as valid identifier name (issue641).\n\nOther\n\n* Update github actions to test on Python 3.10 as well (pr661, by cclaus).\n\n\nRelease 0.4.2 (Sep 10, 2021)\n----------------------------\n\nNotable Changes\n\n* IMPORTANT: This release fixes a security vulnerability in the\n  strip comments filter. In this filter a regular expression that was\n  vulnerable to ReDOS (Regular Expression Denial of Service) was\n  used. See the security advisory for details: https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-p5w8-wqhj-9hhf\n  The vulnerability was discovered by @erik-krogh and @yoff from\n  GitHub Security Lab (GHSL). Thanks for reporting!\n\nEnhancements\n\n* Add ELSIF as keyword (issue584).\n* Add CONFLICT and ON_ERROR_STOP keywords (pr595, by j-martin).\n\nBug Fixes\n\n* Fix parsing of backticks (issue588).\n* Fix parsing of scientific number (issue399).\n\n\nRelease 0.4.1 (Oct 08, 2020)\n----------------------------\n\nBug Fixes\n\n* Just removed a debug print statement, sorry...\n\n\nRelease 0.4.0 (Oct 07, 2020)\n----------------------------\n\nNotable Changes\n\n* Remove support for end-of-life Python 2.7 and 3.4. Python 3.5+ is now\n  required.\n* Remaining strings that only consist of whitespaces are not treated as\n  statements anymore. Code that ignored the last element from\n  sqlparse.split() should be updated accordingly since that function\n  now doesn't return an empty string as the last element in some\n  cases (issue496).\n\nEnhancements\n\n* Add WINDOW keyword (pr579 by ali-tny).\n* Add RLIKE keyword (pr582 by wjones1).\n\nBug Fixes\n\n* Improved parsing of IN(...) statements (issue566, pr567 by hurcy).\n* Preserve line breaks when removing comments (issue484).\n* Fix parsing error when using square bracket notation (issue583).\n* Fix splitting when using DECLARE ... HANDLER (issue581).\n* Fix splitting of statements using CASE ... WHEN (issue580).\n* Improve formatting of type casts in parentheses.\n* Stabilize formatting of invalid SQL statements.\n\n\nRelease 0.3.1 (Feb 29, 2020)\n----------------------------\n\nEnhancements\n\n* Add HQL keywords (pr475, by matwalk).\n* Add support for time zone casts (issue489).\n* Enhance formatting of AS keyword (issue507, by john-bodley).\n* Stabilize grouping engine when parsing invalid SQL statements.\n\nBug Fixes\n\n* Fix splitting of SQL with multiple statements inside\n  parentheses (issue485, pr486 by win39).\n* Correctly identify NULLS FIRST / NULLS LAST as keywords (issue487).\n* Fix splitting of SQL statements that contain dollar signs in\n  identifiers (issue491).\n* Remove support for parsing double slash comments introduced in\n  0.3.0 (issue456) as it had some side-effects with other dialects and\n  doesn't seem to be widely used (issue476).\n* Restrict detection of alias names to objects that actually could\n  have an alias (issue455, adopted some parts of pr509 by john-bodley).\n* Fix parsing of date/time literals (issue438, by vashek).\n* Fix initialization of TokenList (issue499, pr505 by john-bodley).\n* Fix parsing of LIKE (issue493, pr525 by dbczumar).\n* Improve parsing of identifiers (pr527 by liulk).\n\n\nRelease 0.3.0 (Mar 11, 2019)\n----------------------------\n\nNotable Changes\n\n* Remove support for Python 3.3.\n\nEnhancements\n\n* New formatting option \"--indent_after_first\" (pr345, by johshoff).\n* New formatting option \"--indent_columns\" (pr393, by digitalarbeiter).\n* Add UPSERT keyword (issue408).\n* Strip multiple whitespace within parentheses (issue473, by john-bodley).\n* Support double slash (//) comments (issue456, by theianrobertson).\n* Support for Calcite temporal keywords (pr468, by john-bodley).\n\nBug Fixes\n\n* Fix occasional IndexError (pr390, by circld, issue313).\n* Fix incorrect splitting of strings containing new lines (pr396, by fredyw).\n* Fix reindent issue for parenthesis (issue427, by fredyw).\n* Fix from( parsing issue (issue446, by fredyw)\t.\n* Fix for get_real_name() to return correct name (issue369, by fredyw).\n* Wrap function params when wrap_after is set (pr398, by soloman1124).\n* Fix parsing of \"WHEN name\" clauses (pr418, by andrew deryabin).\n* Add missing EXPLAIN keyword (issue421).\n* Fix issue with strip_comments causing a syntax error (issue425, by fredyw).\n* Fix formatting on INSERT which caused staircase effect on values (issue329,\n  by fredyw).\n* Avoid formatting of psql commands (issue469).\n\nInternal Changes\n\n* Unify handling of GROUP BY/ORDER BY (pr457, by john-bodley).\n* Remove unnecessary compat shim for bytes (pr453, by jdufresne).\n\n\nRelease 0.2.4 (Sep 27, 2017)\n----------------------------\n\nEnhancements\n\n* Add more keywords for MySQL table options (pr328, pr333, by phdru).\n* Add more PL/pgSQL keywords (pr357, by Demetrio92).\n* Improve parsing of floats (pr330, by atronah).\n\nBug Fixes\n\n* Fix parsing of MySQL table names starting with digits (issue337).\n* Fix detection of identifiers using comparisons (issue327).\n* Fix parsing of UNION ALL after WHERE (issue349).\n* Fix handling of semicolon in assignments (issue359, issue358).\n\n\n\nRelease 0.2.3 (Mar 02, 2017)\n----------------------------\n\nEnhancements\n\n* New command line option \"--encoding\" (by twang2218, pr317).\n* Support CONCURRENTLY keyword (issue322, by rowanseymour).\n\nBug Fixes\n\n* Fix some edge-cases when parsing invalid SQL statements.\n* Fix indentation of LIMIT (by romainr, issue320).\n* Fix parsing of INTO keyword (issue324).\n\nInternal Changes\n\n* Several improvements regarding encodings.\n\n\nRelease 0.2.2 (Oct 22, 2016)\n----------------------------\n\nEnhancements\n\n* Add comma_first option: When splitting list \"comma first\" notation\n  is used (issue141).\n\nBug Fixes\n\n* Fix parsing of incomplete AS (issue284, by vmuriart).\n* Fix parsing of Oracle names containing dollars (issue291).\n* Fix parsing of UNION ALL (issue294).\n* Fix grouping of identifiers containing typecasts (issue297).\n* Add Changelog to sdist again (issue302).\n\nInternal Changes\n\n* `is_whitespace` and `is_group` changed into properties\n\n\nRelease 0.2.1 (Aug 13, 2016)\n----------------------------\n\nNotable Changes\n\n* PostgreSQL: Function bodys are parsed as literal string. Previously\n  sqlparse assumed that all function bodys are parsable psql\n  strings (see issue277).\n\nBug Fixes\n\n* Fix a regression to parse streams again (issue273, reported and\n  test case by gmccreight).\n* Improve Python 2/3 compatibility when using parsestream (issue190,\n  by phdru).\n* Improve splitting of PostgreSQL functions (issue277).\n\n\nRelease 0.2.0 (Jul 20, 2016)\n----------------------------\n\nIMPORTANT: The supported Python versions have changed with this release.\nsqlparse 0.2.x supports Python 2.7 and Python >= 3.3.\n\nThanks to the many contributors for writing bug reports and working\non pull requests who made this version possible!\n\nInternal Changes\n\n* sqlparse.SQLParseError was removed from top-level module and moved to\n  sqlparse.exceptions.\n* sqlparse.sql.Token.to_unicode was removed.\n* The signature of a filter's process method has changed from\n  process(stack, stream) -> to process(stream). Stack was never used at\n  all.\n* Lots of code cleanups and modernization (thanks esp. to vmuriart!).\n* Improved grouping performance. (sjoerdjob)\n\nEnhancements\n\n* Support WHILE loops (issue215, by shenlongxing).\n* Better support for CTEs (issue217, by Andrew Tipton).\n* Recognize USING as a keyword more consistently (issue236, by koljonen).\n* Improve alignment of columns (issue207, issue235, by vmuriat).\n* Add wrap_after option for better alignment when formatting\n  lists (issue248, by Dennis Taylor).\n* Add reindent-aligned option for alternate formatting (Adam Greenhall)\n* Improved grouping of operations (issue211, by vmuriat).\n\nBug Fixes\n\n* Leading whitespaces are now removed when format() is called with\n  strip_whitespace=True (issue213, by shenlongxing).\n* Fix typo in keywords list (issue229, by cbeloni).\n* Fix parsing of functions in comparisons (issue230, by saaj).\n* Fix grouping of identifiers (issue233).\n* Fix parsing of CREATE TABLE statements (issue242, by Tenghuan).\n* Minor bug fixes (issue101).\n* Improve formatting of CASE WHEN constructs (issue164, by vmuriat).\n\n\nRelease 0.1.19 (Mar 07, 2016)\n-----------------------------\n\nBug Fixes\n\n* Fix IndexError when statement contains WITH clauses (issue205).\n\n\nRelease 0.1.18 (Oct 25, 2015)\n-----------------------------\n\nBug Fixes\n\n* Remove universal wheel support, added in 0.1.17 by mistake.\n\n\nRelease 0.1.17 (Oct 24, 2015)\n-----------------------------\n\nEnhancements\n\n* Speed up parsing of large SQL statements (pull request: issue201, fixes the\n  following issues: issue199, issue135, issue62, issue41, by Ryan Wooden).\n\nBug Fixes\n\n* Fix another splitter bug regarding DECLARE (issue194).\n\nMisc\n\n* Packages on PyPI are signed from now on.\n\n\nRelease 0.1.16 (Jul 26, 2015)\n-----------------------------\n\nBug Fixes\n\n* Fix a regression in get_alias() introduced in 0.1.15 (issue185).\n* Fix a bug in the splitter regarding DECLARE (issue193).\n* sqlformat command line tool doesn't duplicate newlines anymore (issue191).\n* Don't mix up MySQL comments starting with hash and MSSQL\n  temp tables (issue192).\n* Statement.get_type() now ignores comments at the beginning of\n  a statement (issue186).\n\n\nRelease 0.1.15 (Apr 15, 2015)\n-----------------------------\n\nBug Fixes\n\n* Fix a regression for identifiers with square bracktes\n  notation (issue153, by darikg).\n* Add missing SQL types (issue154, issue155, issue156, by jukebox).\n* Fix parsing of multi-line comments (issue172, by JacekPliszka).\n* Fix parsing of escaped backslashes (issue174, by caseyching).\n* Fix parsing of identifiers starting with underscore (issue175).\n* Fix misinterpretation of IN keyword (issue183).\n\nEnhancements\n\n* Improve formatting of HAVING statements.\n* Improve parsing of inline comments (issue163).\n* Group comments to parent object (issue128, issue160).\n* Add double precision builtin (issue169, by darikg).\n* Add support for square bracket array indexing (issue170, issue176,\n  issue177 by darikg).\n* Improve grouping of aliased elements (issue167, by darikg).\n* Support comments starting with '#' character (issue178).\n\n\nRelease 0.1.14 (Nov 30, 2014)\n-----------------------------\n\nBug Fixes\n\n* Floats in UPDATE statements are now handled correctly (issue145).\n* Properly handle string literals in comparisons (issue148, change proposed\n  by aadis).\n* Fix indentation when using tabs (issue146).\n\nEnhancements\n\n* Improved formatting in list when newlines precede commas (issue140).\n\n\nRelease 0.1.13 (Oct 09, 2014)\n-----------------------------\n\nBug Fixes\n\n* Fix a regression in handling of NULL keywords introduced in 0.1.12.\n\n\nRelease 0.1.12 (Sep 20, 2014)\n-----------------------------\n\nBug Fixes\n\n* Fix handling of NULL keywords in aliased identifiers.\n* Fix SerializerUnicode to split unquoted newlines (issue131, by Michael Schuller).\n* Fix handling of modulo operators without spaces (by gavinwahl).\n\nEnhancements\n\n* Improve parsing of identifier lists containing placeholders.\n* Speed up query parsing of unquoted lines (by Michael Schuller).\n\n\nRelease 0.1.11 (Feb 07, 2014)\n-----------------------------\n\nBug Fixes\n\n* Fix incorrect parsing of string literals containing line breaks (issue118).\n* Fix typo in keywords, add MERGE, COLLECT keywords (issue122/124,\n  by Cristian Orellana).\n* Improve parsing of string literals in columns.\n* Fix parsing and formatting of statements containing EXCEPT keyword.\n* Fix Function.get_parameters() (issue126/127, by spigwitmer).\n\nEnhancements\n\n* Classify DML keywords (issue116, by Victor Hahn).\n* Add missing FOREACH keyword.\n* Grouping of BEGIN/END blocks.\n\nOther\n\n* Python 2.5 isn't automatically tested anymore, neither Travis nor Tox\n  still support it out of the box.\n\n\nRelease 0.1.10 (Nov 02, 2013)\n-----------------------------\n\nBug Fixes\n\n* Removed buffered reading again, it obviously causes wrong parsing in some rare\n  cases (issue114).\n* Fix regression in setup.py introduced 10 months ago (issue115).\n\nEnhancements\n\n* Improved support for JOINs, by Alexander Beedie.\n\n\nRelease 0.1.9 (Sep 28, 2013)\n----------------------------\n\nBug Fixes\n\n* Fix an regression introduced in 0.1.5 where sqlparse didn't properly\n  distinguished between single and double quoted strings when tagging\n  identifier (issue111).\n\nEnhancements\n\n* New option to truncate long string literals when formatting.\n* Scientific numbers are pares correctly (issue107).\n* Support for arithmetic expressions (issue109, issue106; by prudhvi).\n\n\nRelease 0.1.8 (Jun 29, 2013)\n----------------------------\n\nBug Fixes\n\n* Whitespaces within certain keywords are now allowed (issue97, patch proposed\n  by xcombelle).\n\nEnhancements\n\n* Improve parsing of assignments in UPDATE statements (issue90).\n* Add STRAIGHT_JOIN statement (by Yago Riveiro).\n* Function.get_parameters() now returns the parameter if only one parameter is\n  given (issue94, by wayne.wuw).\n* sqlparse.split() now removes leading and trailing whitespaces from split\n  statements.\n* Add USE as keyword token (by mulos).\n* Improve parsing of PEP249-style placeholders (issue103).\n\n\nRelease 0.1.7 (Apr 06, 2013)\n----------------------------\n\nBug Fixes\n\n* Fix Python 3 compatibility of sqlformat script (by Pi Delport).\n* Fix parsing of SQL statements that contain binary data (by Alexey\n  Malyshev).\n* Fix a bug where keywords were identified as aliased identifiers in\n  invalid SQL statements.\n* Fix parsing of identifier lists where identifiers are keywords too\n  (issue10).\n\nEnhancements\n\n* Top-level API functions now accept encoding keyword to parse\n  statements in certain encodings more reliable (issue20).\n* Improve parsing speed when SQL contains CLOBs or BLOBs (issue86).\n* Improve formatting of ORDER BY clauses (issue89).\n* Formatter now tries to detect runaway indentations caused by\n  parsing errors or invalid SQL statements. When re-indenting such\n  statements the formatter flips back to column 0 before going crazy.\n\nOther\n\n* Documentation updates.\n\n\nRelease 0.1.6 (Jan 01, 2013)\n----------------------------\n\nsqlparse is now compatible with Python 3 without any patches. The\nPython 3 version is generated during install by 2to3. You'll need\ndistribute to install sqlparse for Python 3.\n\nBug Fixes\n\n* Fix parsing error with dollar-quoted procedure bodies (issue83).\n\nOther\n\n* Documentation updates.\n* Test suite now uses tox and pytest.\n* py3k fixes (by vthriller).\n* py3k fixes in setup.py (by Florian Bauer).\n* setup.py now requires distribute (by Florian Bauer).\n\n\nRelease 0.1.5 (Nov 13, 2012)\n----------------------------\n\nBug Fixes\n\n* Improve handling of quoted identifiers (issue78).\n* Improve grouping and formatting of identifiers with operators (issue53).\n* Improve grouping and formatting of concatenated strings (issue53).\n* Improve handling of varchar() (by Mike Amy).\n* Clean up handling of various SQL elements.\n* Switch to pytest and clean up tests.\n* Several minor fixes.\n\nOther\n\n* Deprecate sqlparse.SQLParseError. Please use\n  sqlparse.exceptions.SQLParseError instead.\n* Add caching to speed up processing.\n* Add experimental filters for token processing.\n* Add sqlformat.parsestream (by quest).\n\n\nRelease 0.1.4 (Apr 20, 2012)\n----------------------------\n\nBug Fixes\n\n* Avoid \"stair case\" effects when identifiers, functions,\n  placeholders or keywords are mixed in identifier lists (issue45,\n  issue49, issue52) and when asterisks are used as operators\n  (issue58).\n* Make keyword detection more restrict (issue47).\n* Improve handling of CASE statements (issue46).\n* Fix statement splitting when parsing recursive statements (issue57,\n  thanks to piranna).\n* Fix for negative numbers (issue56, thanks to kevinjqiu).\n* Pretty format comments in identifier lists (issue59).\n* Several minor bug fixes and improvements.\n\n\nRelease 0.1.3 (Jul 29, 2011)\n----------------------------\n\nBug Fixes\n\n* Improve parsing of floats (thanks to Kris).\n* When formatting a statement a space before LIMIT was removed (issue35).\n* Fix strip_comments flag (issue38, reported by ooberm...@gmail.com).\n* Avoid parsing names as keywords (issue39, reported by djo...@taket.org).\n* Make sure identifier lists in subselects are grouped (issue40,\n  reported by djo...@taket.org).\n* Split statements with IF as functions correctly (issue33 and\n  issue29, reported by charles....@unige.ch).\n* Relax detection of keywords, esp. when used as function names\n  (issue36, nyuhu...@gmail.com).\n* Don't treat single characters as keywords (issue32).\n* Improve parsing of stand-alone comments (issue26).\n* Detection of placeholders in paramterized queries (issue22,\n  reported by Glyph Lefkowitz).\n* Add parsing of MS Access column names with braces (issue27,\n  reported by frankz...@gmail.com).\n\nOther\n\n* Replace Django by Flask in App Engine frontend (issue11).\n\n\nRelease 0.1.2 (Nov 23, 2010)\n----------------------------\n\nBug Fixes\n\n* Fixed incorrect detection of keyword fragments embed in names (issue7,\n  reported and initial patch by andyboyko).\n* Stricter detection of identifier aliases (issue8, reported by estama).\n* WHERE grouping consumed closing parenthesis (issue9, reported by estama).\n* Fixed an issue with trailing whitespaces (reported by Kris).\n* Better detection of escaped single quotes (issue13, reported by\n  Martin Brochhaus, patch by bluemaro with test case by Dan Carley).\n* Ignore identifier in double-quotes when changing cases (issue 21).\n* Lots of minor fixes targeting encoding, indentation, statement\n  parsing and more (issues 12, 14, 15, 16, 18, 19).\n* Code cleanup with a pinch of refactoring.\n\n\nRelease 0.1.1 (May 6, 2009)\n---------------------------\n\nBug Fixes\n\n* Lexers preserves original line breaks (issue1).\n* Improved identifier parsing: backtick quotes, wildcards, T-SQL variables\n  prefixed with @.\n* Improved parsing of identifier lists (issue2).\n* Recursive recognition of AS (issue4) and CASE.\n* Improved support for UPDATE statements.\n\nOther\n\n* Code cleanup and better test coverage.\n\n\nRelease 0.1.0 (Apr 8, 2009)\n---------------------------\n\nInitial release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.3896484375,
          "content": "# Contributing to `sqlparse`\n\nThanks for your interest in contributing to the `sqlparse` project!\n\nAll contributors are expected to follow the \n[Python Community Code of Conduct](https://www.python.org/psf/codeofconduct/).\n\nHead over to the \n[Discussions Page](https://github.com/andialbrecht/sqlparse/discussions) if\nyou have any questions. We're still working on a more elaborate \ndeveloper guide."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5009765625,
          "content": "Copyright (c) 2016, Andi Albrecht <albrecht.andi@gmail.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n    * Neither the name of the authors nor the names of its contributors may be\n      used to endorse or promote products derived from this software without\n      specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.533203125,
          "content": "# Makefile to simplify some common development tasks.\n# Run 'make help' for a list of commands.\n\nPYTHON=`which python`\n\ndefault: help\n\nhelp:\n\t@echo \"Available commands:\"\n\t@sed -n '/^[a-zA-Z0-9_.]*:/s/:.*//p' <Makefile | sort\n\ntest:\n\ttox\n\ncoverage:\n\tpytest --cov=sqlparse --cov-report=html --cov-report=term\n\nclean:\n\t$(PYTHON) setup.py clean\n\tfind . -name '*.pyc' -delete\n\tfind . -name '*~' -delete\n\nrelease:\n\t@rm -rf dist/\n\tpython -m build\n\thatch publish\n\t@echo \"Reminder: Add release on github https://github.com/andialbrecht/sqlparse/releases\"\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.2626953125,
          "content": "python-sqlparse - Parse SQL statements\n======================================\n\n|buildstatus|_\n|coverage|_\n|docs|_\n|packageversion|_\n\n.. docincludebegin\n\nsqlparse is a non-validating SQL parser for Python.\nIt provides support for parsing, splitting and formatting SQL statements.\n\nThe module is compatible with Python 3.8+ and released under the terms of the\n`New BSD license <https://opensource.org/licenses/BSD-3-Clause>`_.\n\nVisit the project page at https://github.com/andialbrecht/sqlparse for\nfurther information about this project.\n\n\nQuick Start\n-----------\n\n.. code-block:: sh\n\n   $ pip install sqlparse\n\n.. code-block:: python\n\n   >>> import sqlparse\n\n   >>> # Split a string containing two SQL statements:\n   >>> raw = 'select * from foo; select * from bar;'\n   >>> statements = sqlparse.split(raw)\n   >>> statements\n   ['select * from foo;', 'select * from bar;']\n\n   >>> # Format the first statement and print it out:\n   >>> first = statements[0]\n   >>> print(sqlparse.format(first, reindent=True, keyword_case='upper'))\n   SELECT *\n   FROM foo;\n\n   >>> # Parsing a SQL statement:\n   >>> parsed = sqlparse.parse('select * from foo')[0]\n   >>> parsed.tokens\n   [<DML 'select' at 0x7f22c5e15368>, <Whitespace ' ' at 0x7f22c5e153b0>, <Wildcard '*' … ]\n   >>>\n\nLinks\n-----\n\nProject page\n   https://github.com/andialbrecht/sqlparse\n\nBug tracker\n   https://github.com/andialbrecht/sqlparse/issues\n\nDocumentation\n   https://sqlparse.readthedocs.io/\n\nOnline Demo\n   https://sqlformat.org/\n\n\nsqlparse is licensed under the BSD license.\n\nParts of the code are based on pygments written by Georg Brandl and others.\npygments-Homepage: http://pygments.org/\n\n.. |buildstatus| image:: https://github.com/andialbrecht/sqlparse/actions/workflows/python-app.yml/badge.svg\n.. _buildstatus: https://github.com/andialbrecht/sqlparse/actions/workflows/python-app.yml\n.. |coverage| image:: https://codecov.io/gh/andialbrecht/sqlparse/branch/master/graph/badge.svg\n.. _coverage: https://codecov.io/gh/andialbrecht/sqlparse\n.. |docs| image:: https://readthedocs.org/projects/sqlparse/badge/?version=latest\n.. _docs: https://sqlparse.readthedocs.io/en/latest/?badge=latest\n.. |packageversion| image:: https://img.shields.io/pypi/v/sqlparse?color=%2334D058&label=pypi%20package\n.. _packageversion: https://pypi.org/project/sqlparse\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5078125,
          "content": "# Security Policy\n\n## Supported Versions\n\nFor now `sqlparse` uses very defensive version numbers. There's no major version yet. \nIn turn there's only one supported version and this is the latest.\n\n## Reporting a Vulnerability\n\nTo report a vulnerability head over to the [Security Advisories](https://github.com/andialbrecht/sqlparse/security/advisories) \npage and click on \"New draft security advisory\".\n\nFeel free to contact me at albrecht.andi@gmail.com if you have any questions or want to discuss things\nbeforehand.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.283203125,
          "content": "* See\n  https://groups.google.com/d/msg/sqlparse/huz9lKXt0Lc/11ybIKPJWbUJ\n  for some interesting hints and suggestions.\n* Provide a function to replace tokens. See this thread: https://groups.google.com/d/msg/sqlparse/5xmBL2UKqX4/ZX9z_peve-AJ\n* Document filter stack and processing phases.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.6083984375,
          "content": "[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n\n[project]\nname = \"sqlparse\"\ndescription = \"A non-validating SQL parser.\"\nauthors = [{name = \"Andi Albrecht\", email = \"albrecht.andi@gmail.com\"}]\nreadme = \"README.rst\"\ndynamic = [\"version\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Database\",\n    \"Topic :: Software Development\",\n]\nrequires-python = \">=3.8\"\n\n[project.urls]\nHome = \"https://github.com/andialbrecht/sqlparse\"\nDocumentation = \"https://sqlparse.readthedocs.io/\"\n\"Release Notes\" = \"https://sqlparse.readthedocs.io/en/latest/changes.html\"\nSource = \"https://github.com/andialbrecht/sqlparse\"\nTracker = \"https://github.com/andialbrecht/sqlparse/issues\"\n\n[project.scripts]\nsqlformat = \"sqlparse.__main__:main\"\n\n[project.optional-dependencies]\ndev = [\n    \"hatch\",\n    \"build\",\n]\ndoc = [\n    \"sphinx\",\n]\n\n[tool.hatch.version]\npath = \"sqlparse/__init__.py\"\n\n[tool.hatch.envs.default]\ndependencies = [\n    \"coverage[toml]>=6.5\",\n    \"pytest\",\n    # switch to ruff, but fix problems first\n    # but check defaults!\n    # https://hatch.pypa.io/1.9/config/static-analysis/#default-settings\n    \"flake8\",\n]\n[tool.hatch.envs.default.scripts]\nunittest = \"pytest {args:tests}\"\ntest-cov = \"coverage run -m pytest {args:tests}\"\ncov-report = [\n    \"- coverage combine\",\n    \"coverage report\",\n]\ncov = [\n    \"test-cov\",\n    \"cov-report\",\n]\ncheck = \"flake8 sqlparse/\"\ntest = [\"check\", \"unittest\"]\n\n[[tool.hatch.envs.all.matrix]]\npython = [\"3.8\", \"3.9\", \"3.10\", \"3.11\", \"3.12\"]\n\n[tool.hatch.envs.types]\ndependencies = [\n    \"mypy>=1.0.0\",\n]\n[tool.hatch.envs.types.scripts]\ncheck = \"mypy --install-types --non-interactive {args:sqlparse tests}\"\n\n[tool.coverage.run]\nsource_pkgs = [\"sqlparse\", \"tests\"]\nbranch = true\nparallel = true\nomit = [\n    \"sqlparse/__main__.py\",\n]\n\n[tool.coverage.paths]\nsqlparse = [\"sqlparse\"]\ntests = [\"tests\"]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"no cov\",\n    \"if __name__ == .__main__.:\",\n    \"if TYPE_CHECKING:\",\n]\n"
        },
        {
          "name": "sqlparse",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}