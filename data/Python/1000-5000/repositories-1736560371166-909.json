{
  "metadata": {
    "timestamp": 1736560371166,
    "page": 909,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CodedotAl/gpt-code-clippy",
      "stars": 3298,
      "defaultBranch": "camera-ready",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 8.00390625,
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8232421875,
          "content": "core\nhuman-eval\nhf_cache\ndata\n.vscode\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\nwandb/\n_tmp/\n_*.py\n_*.ipynb\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.490234375,
          "content": "[submodule \"dependency_repos/github-downloader\"]\n\tpath = dependency_repos/github-downloader\n\turl = https://github.com/EleutherAI/github-downloader\n[submodule \"dependency_repos/apps\"]\n\tpath = dependency_repos/apps\n\turl = https://github.com/hendrycks/apps.git\n[submodule \"dependency_repos/human-eval\"]\n\tpath = dependency_repos/human-eval\n\turl = https://github.com/openai/human-eval\n[submodule \"dependency_repos/CodeXGLUE\"]\n\tpath = dependency_repos/CodeXGLUE\n\turl = https://github.com/microsoft/CodeXGLUE\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.12109375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Nathan Cooper and the amazing contributors of this project\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5595703125,
          "content": "# GPT-Code-Clippy (GPT-CC)\n**Please refer to our new [GitHub Wiki](https://github.com/ncoop57/gpt-code-clippy/wiki) which documents our efforts in detail in creating the open source version of GitHub  Copilot**\n\n<p align=\"center\">\n    <br>\n    <img src=\"https://raw.githubusercontent.com/ncoop57/gpt-code-clippy/camera-ready/code_clippy_logo.jpg\" width=\"256\"/>\n    <br>\n    Courtesy of the awesome Aimee Trevett!\n<p>\n\n## Introduction\n\nGPT-Code-Clippy (GPT-CC) is an open source version of [GitHub Copilot](https://copilot.github.com/), a language model -- based on [GPT-3](https://arxiv.org/abs/2005.14165), called [GPT-Codex](https://arxiv.org/abs/2107.03374) -- that is fine-tuned on publicly available code from GitHub.\n\n## Datasets\n\nThe dataset used to train GPT-CC is obtained from [SEART GitHub Search](https://seart-ghs.si.usi.ch/) using the following criteria:\n\n- &gt;10 GitHub stars\n- &gt;2 commits\n- Must have a licence\n- Exclude forks\n- Size < 70708 bytes\n\nThese repositories are then combined with all of the GitHub repositories contain in [The Pile](https://arxiv.org/abs/2101.00027).\n\nThe repositories are then filtered for duplicate files. Filtering is performed by regexing each file in each repository to obtain a list of \"variables\" (the tokens which only contain alphanumeric characters) and then filtering out any files which contain the same sequence of \"variables. The deduplication script is available [here](https://github.com/ncoop57/gpt-code-clippy/tree/camera-ready/data_processing/deduplication).\n\nThe final dataset is available [here](https://the-eye.eu/public/AI/training_data/code_clippy_data/code_clippy_dedup_data/). The dataset without the duplicates filtered out is also available [here](https://the-eye.eu/public/AI/training_data/code_clippy_data/code_clippy_dedup_data/).\n\nThe datasheet discussing in more detail the construction, usage, and limitation of the dataset can be found [here](https://github.com/ncoop57/datasets/tree/code-clippy/datasets/code_clippy). We hope to get it officially into Huggingface's datasets library [soon](https://github.com/huggingface/datasets/pull/2666)!\n\n## ISSUE : Wrong Filenames in the Dataset\nWe recently came to know about a bug which happened during the scraping of the dataset. We found out that the file names are obsolete/misleading.[Refer this [issue](https://github.com/CodedotAl/gpt-code-clippy/issues/71)] We thank Naman for pointing out the issue.      \n    \nThis might have two implications,    \n- Since the filtering for the training dataset is done using the file extension, we might have had wrong datapoints in the dataset while training and we might have missed a lot of right datapoints that belong to the languages of choice.      \n    \nOne intermittent fix would be to use tools like lib-magic to some extension for the purpose of filtering. More detailed steps can be found [here](https://github.com/CodedotAl/gpt-code-clippy/issues/71#issuecomment-955613925).\n    \n    \n## Models\n\nThe GPT-CC models are fine-tuned versions of [GPT-2](https://cdn.openai.com/better-language-models/language_models_are_unsupervised_multitask_learners.pdf) and [GPT-Neo](https://github.com/EleutherAI/gpt-neo).\n\nThe available models can be found [here](https://huggingface.co/models?search=code-clippy)\n\nThe ones that perform relatively well (None improve on the standard GPT-Neo 125M model except for APPs specific models and only for the APPs task):\n- https://huggingface.co/flax-community/gpt-code-clippy-125M-apps-alldata\n- https://huggingface.co/flax-community/gpt-code-clippy-1.3B-apps-alldata-2\n- https://huggingface.co/flax-community/gpt-code-clippy-1.3B-apps-alldata\n- https://huggingface.co/flax-community/gpt-code-clippy-1.3B-apps\n- https://huggingface.co/flax-community/gpt-neo-125M-code-clippy\n- https://huggingface.co/flax-community/gpt-neo-125M-code-clippy-dedup-filtered-no-resize-2048bs\n- https://huggingface.co/flax-community/gpt-neo-125M-code-clippy-dedup-2048\n\nTODO: which is the recommended model?\n\n## Training\n\nTraining is done using the training scripts available [here](https://github.com/ncoop57/gpt-code-clippy/tree/camera-ready/training).\n\nFor fine-tuning GPTNeo-125M on CodeClippy dataset we used AdamW optimizer (beta1=0.9, beta2=0.95) with GPT3-like learning rate schedule (4k warmup steps from 0 to 5e-5 followed by 50k cosine decay steps to 5e-6), weight decay 0.1 and batch size 1024, sequence length 2048. The choice of relatively large batch size and low LR with long warmup are made to avoid agressive updates and preserve the knowledge contained in pretrained GPTNeo weights.\n\nFor fine-tuning GPTNe0-125M on APPS dataset we used AdamW optimizer (beta1=0.9, beta2=0.98) with linear learning rate schedule (800 warmup steps from 0 to peak LR followed by linear decay to 0, a range of value for peak LR was [1e-5; 1e-4]), weight decay 0.1 and batch size 256, sequence length 1024. We trained model for 5 epochs selecting best checkpoint judging by validation loss. The language modelling objective for APPS dataset is modified to backpropagate loss only for the tokens corresponding to code solution (refer to [Hendrycks et al](https://arxiv.org/pdf/2105.09938.pdf) for more details).\n\nFor fine-tuning GPTNe0-1.3B on APPS dataset we used [Adafactor optimizer](https://github.com/deepmind/optax/blob/243ed1991b2793e87ab60387f7c3d49d6ab57710/optax/_src/alias.py#L74) with linear learning rate schedule (5k warmup steps from 0 to 2e-5 followed by linear decay to 0), weight decay 0.1 and batch size 24, sequence length 1024. The choice of hyperparameters for 1.3B model is in part determined by hardware limitations. We trained model for 5 epochs selecting best checkpoint judging by validation loss.\n\n\nTODO: which is the recommended way to train GPT-CC?\n\n## Evaluation\n\nThe models are also evaluated on the [APPS](https://github.com/hendrycks/apps) and [HumanEval](https://github.com/openai/human-eval) datasets.\n\n### Human Eval Results\n\n| Model                             |   pass@1    |   pass@2    |   pass@5    |   pass@10   |\n| --------------------------------- | :---------: | :---------: | :---------: | :---------: |\n| EleutherAI/gpt-neo                |    0.12%    |    0.24%    |    0.61%    |    1.22%    |\n| gpt-neo-125M-apps                 |    0.06%    |    0.12%    |    0.30%    |    0.61%    |\n| dedup-filtered-no-resize-2048bs   |    0.00%    |    0.00%    |    0.00%    |    0.00%    |\n| 1024-filtered                     |    0.00%    |    0.00%    |    0.00%    |    0.00%    |\n| dedup-2048                        |    0.00%    |    0.00%    |    0.00%    |    0.00%    |\n\n### APPS Eval Results\n\nComing soon...\n\n## Demo\n\nA [Visual Studio Code](https://code.visualstudio.com/) which uses the [HuggingFace Inference API](https://api-inference.huggingface.co/docs/python/html/index.html) is available and can be found [here](https://github.com/CodedotAl/code-clippy-vscode).\n\nWe also have [Huggingface's Space demo](https://huggingface.co/spaces/flax-community/code-clippy-problem-solver) where you can specify and problem in the format of a programming competition question.\n\nTODO: more information about this when complete.\n\n## Further Reading\n\nFor more information about GPT-CC, GitHub Copilot, etc, see:\n\n- https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/\n\nTODO: add more further reading.\n\n## Acknowledgements\n\nSpecial thanks to our contributors!!\n- https://github.com/arampacha\n- https://github.com/ncoop57\n- https://github.com/bentrevett\n- https://github.com/arunraja-hub\n- https://github.com/reshinthadithyan\n- https://github.com/shpotes\n- https://github.com/taisazero\n- https://github.com/neubig\n- https://github.com/Mrinal18\n- and everyone else that helped out the project!\n"
        },
        {
          "name": "code-clippy-demo.gif",
          "type": "blob",
          "size": 899.34765625,
          "content": null
        },
        {
          "name": "code_clippy_logo.jpg",
          "type": "blob",
          "size": 55.998046875,
          "content": null
        },
        {
          "name": "data_processing",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependency_repos",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "evaluation",
          "type": "tree",
          "content": null
        },
        {
          "name": "reindent.py",
          "type": "blob",
          "size": 5.7373046875,
          "content": "\"\"\"\nReindent files.\n(from https://github.com/hendrycks/apps/blob/main/train/dataset_lm/reindent.py)\n\"\"\"\n\nfrom __future__ import print_function\nimport sys\nimport getopt\nimport codecs\nimport tempfile\nimport shutil\nimport os\n\n\ndef _find_indentation(line, config):\n    if len(line) and line[0] in (\" \", \"\\t\") and not line.isspace():\n        if line[0] == \"\\t\":\n            config['is-tabs'] = True\n        # Find indentation\n        i = 0\n        for char in list(line):\n            if char not in (\" \", \"\\t\"):\n                break\n            i += 1\n        config[\"from\"] = i\n\n\ndef find_indentation(line, config):\n    # Find indentation level used in file\n    if config['from'] < 0:\n        _find_indentation(line, config)\n\n    if config['from'] >= 0:\n        # Set old indent\n        indent = \" \" if not config['is-tabs'] else \"\\t\"\n        indent = indent * config['from']\n\n        # Set new indent\n        newindent = \" \" if not config['tabs'] else \"\\t\"\n        if not config['tabs']:\n            newindent = newindent * config['to']\n\n        return indent, newindent\n\n    # Continue to the next line, indentation not found\n    return False\n\n\ndef replace_inline_tabs(content, config):\n    newcontent = \"\"\n    imagined_i = 0\n    for i in range(0, len(content)):\n        char = content[i]\n        if char == '\\t':\n            spaces = config['tabsize']-(imagined_i % config['tabsize'])\n            newcontent += \" \" * spaces\n            imagined_i += spaces\n        else:\n            newcontent += char\n            imagined_i += 1\n    return newcontent\n\n\ndef run(fd_in, fd_out, config):\n    while True:\n        line = fd_in.readline()\n        if not line:\n            break\n        line = line.rstrip('\\r\\n')\n\n        # Find indentation style used in file if not set\n        if config['from'] < 0:\n            indent = find_indentation(line, config)\n            if not indent:\n                print(line, file=fd_out)\n                continue\n            indent, newindent = indent\n\n        # Find current indentation level\n        level = 0\n        while True:\n            whitespace = line[:len(indent) * (level + 1)]\n            if whitespace == indent * (level + 1):\n                level += 1\n            else:\n                break\n\n        content = line[len(indent) * level:]\n        if config['all-tabs']:\n            content = replace_inline_tabs(content, config)\n\n        line = (newindent * level) + content\n        print(line, file=fd_out)\n\n\ndef run_files(filenames, config):\n    for filename in filenames:\n        with codecs.open(filename, encoding=config['encoding']) as fd_in:\n            if config['dry-run']:\n                print(\"Filename: %s\" % filename)\n                fd_out = sys.stdout\n            else:\n                fd_out = tempfile.NamedTemporaryFile(mode='wb', delete=False)\n                fd_out.close()\n                fd_out = codecs.open(fd_out.name, \"wb\", encoding=config['encoding'])\n\n            run(fd_in, fd_out, config)\n\n            if not config[\"dry-run\"]:\n                fd_out.close()\n                shutil.copy(fd_out.name, filename)\n                os.remove(fd_out.name)\n\n\ndef main(args):\n    config = {\n        \"dry-run\": False,\n        \"help\": False,\n        \"to\": 4,\n        \"from\": -1,\n        \"tabs\": False,\n        \"encoding\": \"utf-8\",\n        \"is-tabs\": False,\n        \"tabsize\": 4,\n        \"all-tabs\": False\n    }\n    possible_args = {\n        \"d\":  \"dry-run\",\n        \"h\":  \"help\",\n        \"t:\": \"to=\",\n        \"f:\": \"from=\",\n        \"n\":  \"tabs\",\n        \"e:\": \"encoding=\",\n        \"s:\": \"tabsize=\",\n        \"a\":  \"all-tabs\",\n    }\n    optlist, filenames = getopt.getopt(\n        args[1:],\n        \"\".join(possible_args.keys()),\n        possible_args.values()\n    )\n\n    shortargs, longargs = [], []\n    for shortarg in possible_args:\n        shortargs.append(shortarg.rstrip(\":\"))\n        longargs.append(possible_args[shortarg].rstrip(\"=\"))\n\n    for opt, val in optlist:\n        opt = opt.lstrip(\"-\")\n        if opt in shortargs:\n            opt = longargs[shortargs.index(opt)]\n        if isinstance(config[opt], bool):\n            config[opt] = True\n        elif isinstance(config[opt], int):\n            config[opt] = int(val)\n        else:\n            config[opt] = val\n\n    if config['help']:\n        help = \"\"\"\n        Usage: %s [options] filename(s)\n        Options:\n            -h, --help              Show this message\n            -d, --dry-run           Don't save anything, just print\n                                    the result\n            -t <n>, --to <n>        Convert to this number of spaces\n                                    (default: 4)\n            -f <n>, --from <n>      Convert from this number of spaces\n                                    (default: auto-detect, will also\n                                    detect tabs)\n            -n, --tabs              Don't convert indentation to spaces,\n                                    convert to tabs instead. -t and\n                                    --to will have no effect.\n            -a, --all-tabs          Also convert tabs used for alignment\n                                    in the code (Warning: will replace\n                                    all tabs in the file, even if inside\n                                    a string)\n            -s <n>, --tabsize <n>   Set how many spaces one tab is\n                                    (only has an effect on -a, default: 4)\n            -e <s>, --encoding <s>  Open files with specified encoding\n                                    (default: utf-8)\n        \"\"\" % args[0]\n\n        # Also removes 8 leading spaces to remove our indentation\n        print(\"\\n\".join([x[8:] for x in help[1:].split(\"\\n\")]))\n        sys.exit(0)\n\n    if filenames:\n        run_files(filenames, config)\n    else:\n        run(sys.stdin, sys.stdout, config)\n\nif __name__ == \"__main__\":\n    main(sys.argv)"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.78125,
          "content": "absl-py==0.12.0\nasn1crypto==0.24.0\nastunparse==1.6.3\ncached-property==1.5.2\ncachetools==4.2.2\ncertifi==2020.12.5\nchardet==4.0.0\nchex==0.0.8\nclick==8.0.1\ncryptography==2.1.4\ncycler==0.10.0\ndataclasses==0.8\ndatasets==1.9.0\ndill==0.3.4\ndm-tree==0.1.6\nfastcore==1.3.20\nfilelock==3.0.12\nfire==0.4.0\nflatbuffers==1.12\nflax==0.3.4\nfsspec==2021.7.0\ngast==0.4.0\ngdown==3.13.0\ngoogle-auth==1.30.0\ngoogle-auth-oauthlib==0.4.4\ngoogle-pasta==0.2.0\ngrpcio==1.34.1\nh5py==3.1.0\nhuggingface-hub==0.0.12\n-e git+https://github.com/openai/human-eval.git@77b90b8f70e2553ba720c3d24156acfd28104ec4#egg=human_eval\nidna==2.6\nimportlib-metadata==4.0.1\njax==0.2.17\njaxlib==0.1.69\njoblib==1.0.1\njsonlines==2.0.0\nkeras-nightly==2.5.0.dev2021032900\nKeras-Preprocessing==1.1.2\nkeyring==10.6.0\nkeyrings.alt==3.0\nkiwisolver==1.3.1\nlm-dataformat==0.0.19\nMarkdown==3.3.4\nmatplotlib==3.3.4\nmsgpack==1.0.2\nmultiprocess==0.70.12.2\nnumpy==1.19.5\noauthlib==3.1.0\nopt-einsum==3.3.0\noptax==0.0.9\npackaging==21.0\npandas==1.1.5\nPillow==8.3.1\nportalocker==2.0.0\nprotobuf==3.17.0\npyarrow==4.0.1\npyasn1==0.4.8\npyasn1-modules==0.2.8\npycrypto==2.6.1\npygobject==3.26.1\npyparsing==2.4.7\npython-apt==1.6.5+ubuntu0.5\npython-dateutil==2.8.2\npython-magic==0.4.24\npytz==2021.1\npyxdg==0.25\nPyYAML==5.4.1\nregex==2021.7.6\nrequests==2.25.1\nrequests-oauthlib==1.3.0\nrsa==4.7.2\nsacrebleu==1.5.1\nsacremoses==0.0.45\nscipy==1.5.4\nSecretStorage==2.3.1\nsix==1.15.0\ntensorboard==2.5.0\ntensorboard-data-server==0.6.1\ntensorboard-plugin-wit==1.8.0\ntensorflow==2.5.0\ntensorflow-estimator==2.5.0rc0\ntermcolor==1.1.0\ntokenizers==0.10.3\ntoolz==0.11.1\ntqdm==4.61.2\ntransformers @ git+https://github.com/huggingface/transformers@534f6eb9f1f8910a4912ccccd79f1f974c625168\ntyping-extensions==3.7.4.3\nujson==4.0.2\nurllib3==1.26.4\nWerkzeug==2.0.0\nwrapt==1.12.1\nxxhash==2.0.2\nzipp==3.4.1\nzstandard==0.15.2\n"
        },
        {
          "name": "requirements_scripts.txt",
          "type": "blob",
          "size": 0.078125,
          "content": "requests\ntqdm\njoblib\nfire\npython-magic\npandas\nnumpy\nfastcore\ngdown\nlm_dataformat"
        },
        {
          "name": "training",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}