{
  "metadata": {
    "timestamp": 1736559461255,
    "page": 19,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "al-one/hass-xiaomi-miot",
      "stars": 4962,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01953125,
          "content": ".idea/\n__pycache__/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.8701171875,
          "content": "[![version](https://img.shields.io/github/manifest-json/v/al-one/hass-xiaomi-miot?filename=custom_components%2Fxiaomi_miot%2Fmanifest.json)](https://github.com/al-one/hass-xiaomi-miot/releases/latest)\n[![releases](https://img.shields.io/github/downloads/al-one/hass-xiaomi-miot/total)](https://github.com/al-one/hass-xiaomi-miot/releases)\n[![stars](https://img.shields.io/github/stars/al-one/hass-xiaomi-miot)](https://github.com/al-one/hass-xiaomi-miot/stargazers)\n[![issues](https://img.shields.io/github/issues/al-one/hass-xiaomi-miot)](https://github.com/al-one/hass-xiaomi-miot/issues)\n[![HACS](https://img.shields.io/badge/HACS-Default-orange.svg)](https://hacs.xyz)\n\n# Xiaomi Miot For HomeAssistant\n\nEnglish | [简体中文](https://github.com/al-one/hass-xiaomi-miot/blob/master/README_zh.md)\n\n[MIoT-Spec](https://iot.mi.com/new/doc/design/spec/overall): The protocol specification for Xiaomi IoT devices, is a standard designed by the Xiaomi IoT platform to describe the function definition of hardware products according to the networking mode of hardware products, the characteristics of product functions, the characteristics of user usage scenarios and the user's requirements for hardware product use experience specification.\n\nThis component uses the **miot** protocol to automatically integrate Xiaomi devices into [HomeAssistant](https://www.home-assistant.io), and currently supports most Xiaomi IoT devices. And it supports HA Web UI, and you can easily integrate Xiaomi devices into HA without configuring yaml.\n\n![hass-xiaomi-miot-configs](https://user-images.githubusercontent.com/4549099/142151697-5188ea2d-0aad-4778-8b60-b949bcc410bb.png)\n\n\n<a name=\"installing\"></a>\n## Installation\n\n#### Method 1: [HACS](https://hacs.xyz)\n- First installation\n    > HACS > Integrations > ➕ EXPLORE & DOWNLOAD REPOSITORIES > [`Xiaomi Miot Auto`](https://my.home-assistant.io/redirect/hacs_repository/?owner=al-one&repository=hass-xiaomi-miot) > DOWNLOAD THIS REPOSITORY\n- Update component\n    > HACS > Integrations > [`Xiaomi Miot Auto`](https://my.home-assistant.io/redirect/hacs_repository/?owner=al-one&repository=hass-xiaomi-miot) > UPDATE / Redownload\n\n#### Method 2: Manually installation via Samba / SFTP\n> Download and copy `custom_components/xiaomi_miot` folder to `custom_components` folder in your HomeAssistant config folder\n\n#### Method 3: Onkey shell via SSH / Terminal & SSH add-on\n```shell\nwget -O - https://get.hacs.vip | DOMAIN=xiaomi_miot bash -\n\n# Or\n\nwget -O - https://raw.githubusercontent.com/al-one/hass-xiaomi-miot/master/install.sh | ARCHIVE_TAG=latest bash -\n```\n\n#### Method 4: shell_command service\n1. Copy this code to file `configuration.yaml`\n    ```yaml\n    shell_command:\n      update_xiaomi_miot: |-\n        wget -O - https://get.hacs.vip | DOMAIN=xiaomi_miot bash -\n    ```\n2. Restart HA core\n3. Call this [`service: shell_command.update_xiaomi_miot`](https://my.home-assistant.io/redirect/developer_call_service/?service=shell_command.update_xiaomi_miot) in Developer Tools\n2. Restart HA core again\n\n\n## Config\n\n> [⚙️ Configuration](https://my.home-assistant.io/redirect/config) > Devices and Services > [🧩 Integrations](https://my.home-assistant.io/redirect/integrations) > [➕ Add Integration](https://my.home-assistant.io/redirect/config_flow_start?domain=xiaomi_miot) > 🔍 Search `Xiaomi Miot Auto`\n\nOr click: [![Add Integration](https://my.home-assistant.io/badges/config_flow_start.svg)](https://my.home-assistant.io/redirect/config_flow_start?domain=xiaomi_miot)\n\n### Add devices using Mi Account:\nStarting from the v0.4.4 version, the component has added support for selecting the connection device mode when integrated by account:\n- **Automatic**: The component will regularly update [the devices that support miot-spec in LAN](https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/miot_local_devices.py), and automatically use the local connection for the supported devices (recommended)\n- **Local**: All devices filtered by the integrated configuration will use local connection. If you check the devices that do not support miot in LAN, they will be unavailable\n- **Cloud**: All devices filtered by the integrated configuration will use cloud connection. It is recommended that miio, BLE, ZigBee devices use this mode\n\n### Add device using host/token:\nSuitable for devices support miot-spec protocol in LAN\n\n### Config Xiaomi Cloud:\n\n> Config Xiaomi cloud for the devices **integrated by host/token**\n\n```yaml\n# configuration.yaml\nxiaomi_miot:\n  username: xiaomi_username\n  password: xiaomi_password\n  # server_country: cn # Location of xiaomi cloud: cn(default), de, i2, ru, sg, tw, us\n  # http_timeout: 15   # Timeout (seconds) for requesting the xiaomi apis\n```\n\n> [⚙️ Configuration](https://my.home-assistant.io/redirect/config) > Devices and Services > [🧩 Integrations](https://my.home-assistant.io/redirect/integrations) > Xiaomi Miot Auto > Options > ☑️ Enable miot cloud\n\n### Translations\n\n> Looking forward to your [contribution](https://github.com/al-one/hass-xiaomi-miot/edit/master/custom_components/xiaomi_miot/core/translation_languages.py).\n\n```yaml\n# configuration.yaml\nxiaomi_miot:\n  language: zh # Using the built-in dictionary, currently only `zh` is supported\n  # https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/translation_languages.py\n  translations:\n    # Global dictionary\n    idle: '空闲'\n    busy: '工作中'\n    # Dictionary for specifying fan modes\n    fan.mode:\n      straight wind: '直吹模式'\n      natural wind: '自然风'\n    # Dictionary for specifying the drying modes of the washer\n    washer.drying_level:\n      moist: '微湿'\n      extra: '特干'\n```\n\n\n### [Customize entity](https://www.home-assistant.io/docs/configuration/customizing-devices/#customizing-entities)\n\n```yaml\n# configuration.yaml\nhomeassistant:\n  customize: !include customize.yaml\n\n# Customize via device model\nxiaomi_miot:\n  # https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/device_customizes.py\n  device_customizes:\n    chuangmi.plug.212a01:\n      miot_local: true\n      chunk_properties: 7\n\n\n# Customize via parent entity\n# customize.yaml\ndomain.your_entity_id:\n  miot_local: true        # Force to read and write data in LAN (integrate by account)\n  miot_cloud: true        # Enable miot cloud for entity (read, write, action)\n  miot_cloud_write: true  # Enable miot cloud (only write)\n  miot_cloud_action: true # Enable miot cloud (only action)\n  check_lan: true         # Check LAN connection in cloud mode\n  miio_properties: power,battery # Get miio properties to state attributes\n  miio_cloud_props: prop.power,event.dev_online\n\n# Custom sub entities\ndomain.parent_entity_id:\n  sensor_properties: temperature,humidity,illumination # Miot properties\n  binary_sensor_properties: is_volume_muted,any_boolen_property\n  switch_properties: on,power\n  number_properties: volume\n  select_properties: mode\n  fan_properties: mode,fan_level\n  cover_properties: motor_control\n\nlight.your_entity_id:\n  color_temp_reverse: false # Reverse color temperature (Requires reload config entry)\n  yeelight_smooth_on:  2000 # milliseconds (Only for Yeelights in local mode)\n  yeelight_smooth_off: 3000 # milliseconds (Only for Yeelights in local mode)\n\nclimate.your_entity_id:\n  bind_sensor: sensor.temperature_entity,sensor.humidity_entity # Sensor entities\n\ncamera.your_entity_id:\n  video_attribute: 1   # https://github.com/al-one/hass-xiaomi-miot/issues/11#issuecomment-773054167\n  keep_streaming: true # Continuously update stream address\n\ncover.your_entity_id:\n  closed_position: 5     # Change cover state to closed when position <= 5%\n  deviated_position: 2   # Current position deviation 2% -> 0%, 98% -> 100%\n  motor_reverse: true    # Reverse motor state (Requires reload config entry)\n  position_reverse: true # Reverse motor position (Requires reload config entry)\n  open_texts: Open,Up\n  close_texts: Close,Down\n\nmedia_player.mitv_entity_id:\n  bind_xiaoai: media_player.xiaoai_entity_id # Bind xiaoai speaker for turn on TV\n\ndomain.your_entity_id_xxxx:\n  interval_seconds: 30 # Seconds between each update state (Requires reload config entry)\n  chunk_properties: 10 # Chunk miot properties on update state (LAN)\n  reverse_state: true  # Reverse the On/Off state of a binary sensor\n```\n\n### Filter entity attributes\n\n> Too many entity attributes will make your HA's database very large. If some entity attributes are useless to you, you can configure `exclude_state_attributes` to ignore them.\n\n```yaml\n# configuration.yaml\nxiaomi_miot:\n  exclude_state_attributes:\n    - miot_type\n    - stream_address\n    - motion_video_latest\n```\n\n### YAML configuration reloading\nThis component has added support for configuration reloading (to avoid having to restart [HomeAssistant](https://www.home-assistant.io) instance after a YAML configuration change):\n> [🔨 Developer tools](https://my.home-assistant.io/redirect/developer_states) > [YAML Configuration](https://my.home-assistant.io/redirect/server_controls) > YAML configuration reloading > 🔍 Look for `Xiaomi Miot Auto` (almost at the bottom of the list)\n\n\n## [Supported Devices](https://github.com/al-one/hass-xiaomi-miot/issues/12)\n\n- 🔌 [outlet](https://home.miot-spec.com/s/plug) / [switch](https://home.miot-spec.com/s/switch)\n- 💡 [light](https://home.miot-spec.com/s/light)\n- ❄️ [air-conditioner](https://home.miot-spec.com/s/aircondition) / [air-conditioner-outlet](https://home.miot-spec.com/s/acpartner) / [ir-aircondition-control](https://home.miot-spec.com/s/miir.aircondition)\n- 🌀 [fan](https://home.miot-spec.com/s/fan) / [ceiling-fan](https://home.miot-spec.com/s/ven_fan)\n- 🛀 [bath-heater](https://home.miot-spec.com/s/bhf_light) / 🔥 [heater](https://home.miot-spec.com/s/heater) / [thermostat](https://home.miot-spec.com/s/airrtc)\n- 📷 [camera](https://home.miot-spec.com/s/camera) / [video-doorbell](https://home.miot-spec.com/s/cateye) [❓️](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-903078604)\n- 📺 [television](https://home.miot-spec.com/s/tv) / 📽️ [projector](https://home.miot-spec.com/s/projector) / [tv-box](https://home.miot-spec.com/s/tvbox)\n- 🗣️ [intelligent-speaker](https://home.miot-spec.com/s/wifispeaker) [❓️](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-885989099)\n- 🎮️ [ir-remote-control](https://home.miot-spec.com/s/chuangmi.remote) [❓️](https://github.com/al-one/hass-xiaomi-miot/commit/fbcc8063783e53b9480574536a034d338634f4e8#commitcomment-56563663)\n- 🔐 [lock](https://home.miot-spec.com/s/lock) / 🚪 [door](https://home.miot-spec.com/s/door)\n- 👕 [washer](https://home.miot-spec.com/s/washer) / [dryer](https://home.miot-spec.com/s/dry) / [fridge](https://home.miot-spec.com/s/fridge)\n- 🚰 [water-purifier](https://home.miot-spec.com/s/waterpuri) / [kettle](https://home.miot-spec.com/s/kettle)\n- ♻️ [air-purifier](https://home.miot-spec.com/s/airpurifier) / [air-fresh](https://home.miot-spec.com/s/airfresh) / [hood](https://home.miot-spec.com/s/hood)\n- 🌡 [temperature-humidity-sensor](https://home.miot-spec.com/s/sensor_ht) / [submersion-sensor](https://home.miot-spec.com/s/flood) / [smoke-sensor](https://home.miot-spec.com/s/sensor_smoke)\n- 🥘 [cooker](https://home.miot-spec.com/s/cooker) / [pressure-cooker](https://home.miot-spec.com/s/pre_cooker) / [electric-steamer](https://home.miot-spec.com/s/esteamer)\n- 🍲 [induction-cooker](https://home.miot-spec.com/s/ihcooker) / [oven](https://home.miot-spec.com/s/oven) / [microwave](https://home.miot-spec.com/s/microwave)\n- 🍗 [air-fryer](https://home.miot-spec.com/s/fryer) / [multifunction-cooking-pot](https://home.miot-spec.com/s/mfcp)\n- 🍵 [health-pot](https://home.miot-spec.com/s/health_pot) / ☕️ [coffee-machine](https://home.miot-spec.com/s/coffee)\n- 🍹 [juicer](https://home.miot-spec.com/s/juicer) / [fruit-vegetable-purifier](https://home.miot-spec.com/s/f_washer)\n- ♨️ [water-heater](https://home.miot-spec.com/s/waterheater) / [dishwasher](https://home.miot-spec.com/s/dishwasher) / [foot-bath](https://home.miot-spec.com/s/foot_bath)\n- 🦠 [steriliser](https://home.miot-spec.com/s/steriliser) / [towel-rack](https://home.miot-spec.com/s/.tow)\n- 🪟 [curtain](https://home.miot-spec.com/s/curtain) / [window-opener](https://home.miot-spec.com/s/wopener) / [airer](https://home.miot-spec.com/s/airer)\n- 🧹 [vacuum](https://home.miot-spec.com/s/vacuum) / [mopping-machine](https://home.miot-spec.com/s/.mop)\n- 💦 [humidifier](https://home.miot-spec.com/s/humidifier) / [dehumidifier](https://home.miot-spec.com/s/derh) / [diffuser](https://home.miot-spec.com/s/diffuser)\n- 🍃 [air-monitor](https://home.miot-spec.com/s/airmonitor) / 🪴 [plant-monitor](https://home.miot-spec.com/s/plantmonitor)\n- 🛏 [bed](https://home.miot-spec.com/s/bed) / [blanket](https://home.miot-spec.com/s/blanket) / 😴 [sleep-monitor](https://home.miot-spec.com/s/lunar)\n- 💺 [chair](https://home.miot-spec.com/s/chair) / [table](https://home.miot-spec.com/s/desk)\n- 💆 [massager](https://home.miot-spec.com/s/massage) / [magic-touch](https://home.miot-spec.com/s/magic_touch)\n- 🏃 [walking-pad](https://home.miot-spec.com/s/walkingpad) / [treadmill](https://home.miot-spec.com/s/treadmill)\n- 🚽 [toilet](https://home.miot-spec.com/s/toilet) / [cat-toilet](https://home.miot-spec.com/s/litter_box) / 🪥 [toothbrush](https://home.miot-spec.com/s/toothbrush)\n- 🐱 [pet-feeder](https://home.miot-spec.com/s/feeder) / ⛲ [pet-drinking-fountain](https://home.miot-spec.com/s/pet_waterer) / 🐟 [fish-tank](https://home.miot-spec.com/s/fishbowl)\n- 🦟 [mosquito-dispeller](https://home.miot-spec.com/s/mosq) / [germicidal-lamp](https://home.miot-spec.com/s/s_lamp)\n- 🚘 [rearview-mirror](https://home.miot-spec.com/s/rv_mirror) / [head-up-display](https://home.miot-spec.com/s/hud)\n- ⌚️ [watch](https://home.miot-spec.com/s/watch) / [bracelet](https://home.miot-spec.com/s/bracelet)\n- 🚶 [motion-sensor](https://home.miot-spec.com/s/motion) / 🧲 [magnet-sensor](https://home.miot-spec.com/s/magnet) [❓️](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-909031222)\n- 📳 [vibration-sensor](https://home.miot-spec.com/s/vibration)\n- 🌐 [router](https://home.miot-spec.com/s/router) / 🖨 [printer](https://home.miot-spec.com/s/printer)\n\n\n### Unsupported devices\n\n> This component uses the polling method to obtain the device state, so it cannot listen the events of some devices in real time.\n\n- Wireless Switch (like: [lumi.sensor_switch.v1](https://home.miot-spec.com/s/lumi.sensor_switch.v1) / [lumi.remote.b686opcn01](https://home.miot-spec.com/s/lumi.remote.b686opcn01))\n- Motion Sensor (like: [lumi.sensor_motion.v1](https://home.miot-spec.com/s/lumi.sensor_motion.v1))\n- Window and Door Sensor (like: [lumi.sensor_magnet.v1](https://home.miot-spec.com/s/lumi.sensor_magnet.v1))\n\n\n## Services\n\n> Since the HA support service response has been for some time, this component no longer triggers events starting from v0.7.18.\n\n#### [`xiaomi_miot.set_property`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.set_property)\n```yaml\nservice: xiaomi_miot.set_property\ndata:\n  entity_id: camera.isa_hlc7_xxxx\n  field: camera_control.on\n  value: true\n```\n\n#### [`xiaomi_miot.set_miot_property`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.set_miot_property)\n```yaml\nservice: xiaomi_miot.set_miot_property\ndata:\n  entity_id: camera.isa_hlc7_xxxx\n  siid: 2\n  piid: 1\n  value: true\n```\n\n#### [`xiaomi_miot.get_properties`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.get_properties)\n```yaml\nservice: xiaomi_miot.get_properties\ndata:\n  entity_id: camera.isa_hlc7_1ab7\n  mapping:\n    - siid: 2\n      piid: 1\n    - siid: 3\n      piid: 2\n  update_entity: true # Update to entity state attributes\n```\n\n#### [`xiaomi_miot.call_action`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.call_action)\n```yaml\nservice: xiaomi_miot.call_action\ndata:\n  entity_id: vacuum.dreame_p2259_entity_id\n  siid: 4 # vacuum-extend\n  aiid: 1 # start-clean\n  params:\n    - 18 # piid: 1 - work-mode\n    - '{\"selects\":[[7,1,0,2,1]]}' # piid: 10 - clean-extend-data\n```\n\n#### [`xiaomi_miot.send_command`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.send_command)\n```yaml\nservice: xiaomi_miot.send_command\ndata:\n  entity_id: switch.your_entity_id\n  method: set_power\n  params:\n    - on\n```\n\n#### [`xiaomi_miot.get_token`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.get_token)\n```yaml\nservice: xiaomi_miot.get_token\ndata:\n  name: Light # Keyword of device name in Mihome / IP / Model.\n```\n\n#### [`xiaomi_miot.intelligent_speaker`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.intelligent_speaker)\n```yaml\nservice: xiaomi_miot.intelligent_speaker\ndata:\n  entity_id: media_player.xiaoai_lx04_xxxx\n  text: Turn on the light\n  execute: true # Execute text directive.\n  silent: true  # Silent execution.\n```\n\n#### [`xiaomi_miot.xiaoai_wakeup`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.xiaoai_wakeup)\n```yaml\nservice: xiaomi_miot.xiaoai_wakeup\ndata:\n  entity_id: media_player.xiaoai_lx04_xxxx\n```\n\n#### [`xiaomi_miot.renew_devices`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.renew_devices)\n```yaml\nservice: xiaomi_miot.renew_devices\ndata:\n  username: 80001234 # Xiaomi Account ID / Email / Phone\n```\n\n#### [`xiaomi_miot.request_xiaomi_api`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.request_xiaomi_api)\n```yaml\nservice: xiaomi_miot.request_xiaomi_api\ndata:\n  entity_id: sensor.your_entity_id\n  api: /v2/plugin/fetch_plugin\n  data:\n    latest_req:\n      api_version: 10070\n      plugins:\n        - model: brand.device.model\n```\n\n> [More services](https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/services.yaml)\n\n\n## Debug\n\n### Get Entity State Attributes\n\n> [🔨 Developer tools](https://my.home-assistant.io/redirect/developer_states) > [ℹ️ State](https://my.home-assistant.io/redirect/developer_states) > 🔍 Filter Entity\n\n### [Get Debug Logs](https://www.home-assistant.io/integrations/logger)\n\n```yaml\n# configuration.yaml\nlogger:\n  default: warning\n  logs:\n    custom_components.xiaomi_miot: debug\n```\n\n> [⚙️ Configuration](https://my.home-assistant.io/redirect/config) > [⚙️ System](https://my.home-assistant.io/redirect/system_dashboard) > [✍️ Logs](https://my.home-assistant.io/redirect/logs)\n\n\n## Obtain miio token\n- Use HomeAssistant Service\n  1. Goto HomeAssistant service developer tool [![](https://my.home-assistant.io/badges/developer_services.svg)](https://my.home-assistant.io/redirect/developer_services/)\n  2. Select [`xiaomi_miot.get_token`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.get_token), Enter the keyword of device name\n  3. Find the token from the HA notifications\n- Use MiHome mod by [@vevsvevs](https://github.com/custom-components/ble_monitor/issues/7#issuecomment-595874419)\n  1. Down apk from [СКАЧАТЬ ВЕРСИЮ 7.x.x](https://www.vevs.me/2017/11/mi-home.html) and install\n  2. Start Mihome APP > Profile > Experimental features\n  3. Check on `Write custom log files` and `Enable app's debug mode`\n  4. Find the token from `vevs/logs/misc/devices.txt` after restart app\n- [Xiaomi Cloud Tokens Extractor](https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor)\n  1. Download and run [token_extractor.exe](https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor/blob/master/token_extractor.exe) for Windows or install [for Python](https://github.com/PiotrMachowski/Xiaomi-cloud-tokens-extractor#other-platforms)\n  2. Enter username, password and your server region\n  3. Extracts tokens from your cloud account. Also reveals the bind_key for BT devices\n\n\n## Thanks\n\n- [PyCharm](https://www.jetbrains.com/pycharm/)\n- [Dler](https://dler.pro/auth/register?affid=130833) (10% Discount coupon for new user: `CXVbfhHuSRsi`)\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 22.3173828125,
          "content": "[![version](https://img.shields.io/github/manifest-json/v/al-one/hass-xiaomi-miot?filename=custom_components%2Fxiaomi_miot%2Fmanifest.json)](https://github.com/al-one/hass-xiaomi-miot/releases/latest)\n[![releases](https://img.shields.io/github/downloads/al-one/hass-xiaomi-miot/total)](https://github.com/al-one/hass-xiaomi-miot/releases)\n[![stars](https://img.shields.io/github/stars/al-one/hass-xiaomi-miot)](https://github.com/al-one/hass-xiaomi-miot/stargazers)\n[![issues](https://img.shields.io/github/issues/al-one/hass-xiaomi-miot)](https://github.com/al-one/hass-xiaomi-miot/issues)\n[![HACS](https://img.shields.io/badge/HACS-Default-orange.svg)](https://hacs.xyz)\n\n# Xiaomi Miot For HomeAssistant\n\n[English](https://github.com/al-one/hass-xiaomi-miot/blob/master/README.md) | 简体中文\n\n[MIoT-Spec](https://iot.mi.com/new/doc/design/spec/overall) 是小米IoT平台根据硬件产品的联网方式、产品功能的特点、用户使用场景的特征和用户对硬件产品使用体验的要求，设计的描述硬件产品功能定义的标准规范。\n\n本插件利用了**miot**协议的规范，可将小米设备自动接入[HomeAssistant](https://www.home-assistant.io)，目前已支持大部分小米米家智能设备。且该插件支持HA后台界面集成，无需配置yaml即可轻松将小米设备接入HA。\n\n![hass-xiaomi-miot-configs](https://user-images.githubusercontent.com/4549099/142151697-5188ea2d-0aad-4778-8b60-b949bcc410bb.png)\n\n\n<a name=\"faq\"></a>\n## 常见问题\n- 👍 **[新手入门手把手教程1](https://mp.weixin.qq.com/s/1y_EV6xcg17r743aV-2eRw)** (感谢@来鸭大佬)\n- 👍 **[新手入门手把手教程2](https://bbs.iobroker.cn/t/topic/10831)** (感谢@萝卜大佬)\n- [登录失败/没有实体等常见问题解决办法](https://github.com/al-one/hass-xiaomi-miot/issues/500)\n- [支持哪些设备？是否支持XX型号？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-855183145)\n- [账号集成还是token集成？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-855183156)\n- [为什么XX型号的设备需要开启云端模式？如何开启？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-855185251)\n- [怎样为一个实体添加自定义属性？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-864678774)\n- [为什么设备状态会有延迟？如何减小延迟？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-909031222)\n- [如何翻译实体的选项文本？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-874613054)\n- [如何让小爱同学播放文本(TTS)和执行语音命令？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-885989099)\n- [如何在HA查看摄像头实体回放(看家助手)视频？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-903078604)\n- [为什么设备状态会有延迟？如何减小延迟？](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-909031222)\n- [如何删除本插件生成的HA设备？](https://github.com/al-one/hass-xiaomi-miot/issues/165#issuecomment-899988208)\n- [[**新手必读**]更多其他常见问题...](https://github.com/al-one/hass-xiaomi-miot/issues/100)\n\n\n<a name=\"installing\"></a>\n<a name=\"installation\"></a>\n## 安装/更新\n\n#### 方法1: [HACS](https://github.com/hacs-china/integration)\n- 首次安装\n    > HACS > 集成 > ➕ 浏览并下载存储库 > [`Xiaomi Miot Auto`](https://my.home-assistant.io/redirect/hacs_repository/?owner=al-one&repository=hass-xiaomi-miot) > 下载此存储库\n- 升级插件\n    > HACS > 集成 > [`Xiaomi Miot Auto`](https://my.home-assistant.io/redirect/hacs_repository/?owner=al-one&repository=hass-xiaomi-miot) > 更新 / 重新下载\n\n#### 方法2: 通过`Samba`或`SFTP`手动安装\n> 下载并复制`custom_components/xiaomi_miot`文件夹到HA根目录下的`custom_components`文件夹\n\n#### 方法3: 通过`SSH`或`Terminal & SSH`加载项执行一键安装命令\n```shell\nwget -O - https://get.hacs.vip | DOMAIN=xiaomi_miot bash -\n```\n\n#### 方法4: `shell_command`服务\n1. 复制下面的代码到HA配置文件`configuration.yaml`\n    ```yaml\n    shell_command:\n      update_xiaomi_miot: |-\n        wget -O - https://get.hacs.vip | DOMAIN=xiaomi_miot bash -\n    ```\n2. 重启HA使配置生效\n3. 在HA开发者工具中调用此服务[`service: shell_command.update_xiaomi_miot`](https://my.home-assistant.io/redirect/developer_call_service/?service=shell_command.update_xiaomi_miot)\n4. 再次重启HA使新版插件生效\n\n#### 视频教程\n- 📺 **[HACS安装插件及使用视频教程](https://www.bilibili.com/video/BV1hY4y1a7Gh?t=48)** (感谢[小帅同学Js](https://space.bilibili.com/230242045))\n- 📺 **[HACS安装插件视频教程](https://www.bilibili.com/video/BV17L411j73Y?t=62)** (感谢[@老明](https://space.bilibili.com/583175067))\n- 📺 **[手动安装插件视频教程](https://www.bilibili.com/video/BV1EU4y1n7VR)** (感谢[@爱运动的数码君](https://space.bilibili.com/39480347))\n\n\n<a name=\"config\"></a>\n## 配置\n\n> [⚙️ 配置](https://my.home-assistant.io/redirect/config) > 设备与服务 > [🧩 集成](https://my.home-assistant.io/redirect/integrations) > [➕ 添加集成](https://my.home-assistant.io/redirect/config_flow_start?domain=xiaomi_miot) > 🔍 搜索 `Xiaomi Miot Auto`\n\n或者点击: [![添加集成](https://my.home-assistant.io/badges/config_flow_start.svg)](https://my.home-assistant.io/redirect/config_flow_start?domain=xiaomi_miot)\n\n<a name=\"add-devices-using-mi-account\"></a>\n### 账号集成 (Add devices using Mi Account):\n自v0.4.4版本开始，插件新增支持账号集成时选择连接设备的模式：\n- **自动模式**：插件定期更新[支持本地miot协议的设备](https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/miot_local_devices.py)，并自动将用户筛选的设备中符合条件的型号使用本地连接（推荐）\n- **本地模式**：集成配置所筛选的设备都将使用本地连接，如勾选了不支持本地miot协议的设备将不可用\n- **云端模式**：集成配置所筛选的设备都将使用云端连接，建议旧版miio、蓝牙、ZigBee设备使用\n\n<a name=\"add-device-using-hosttoken\"></a>\n### 本地集成 (Add device using host/token):\n通过host/token接入设备，适用于在局域网环境下支持miot协议的设备\n\n\n<a name=\"config-xiaomi-cloud\"></a>\n### 配置云端模式:\n\n> 为**通过token集成的设备**开启云端模式\n\n```yaml\n# configuration.yaml\nxiaomi_miot:\n  username: xiaomi_username\n  password: xiaomi_password\n  # server_country: cn # 小米云服务器位置: cn(默认), de, i2, ru, sg, tw, us\n  # http_timeout: 15   # 请求小米接口的超时时间(秒)\n```\n\n> [⚙️ 配置](https://my.home-assistant.io/redirect/config) > 设备与服务 > [🧩 集成](https://my.home-assistant.io/redirect/integrations) > Xiaomi Miot Auto > 选项 > ☑️ 开启云端模式\n\n<a name=\"translations\"></a>\n### 配置翻译词典:\n\n> 可以通过配置文件将大部分miot属性的选项描述（如：模式、风速等）翻译成你想要的语言，当然也欢迎你[贡献](https://github.com/al-one/hass-xiaomi-miot/edit/master/custom_components/xiaomi_miot/core/translation_languages.py)你的词典给其他人👏🏻。\n\n```yaml\n# configuration.yaml\nxiaomi_miot:\n  language: zh # 使用内置词典，目前仅支持`zh`\n  # https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/translation_languages.py\n  translations:\n    # 全局词典，对所有实体生效\n    idle: '空闲'\n    busy: '工作中'\n    # 指定风扇模式的词典\n    fan.mode:\n      straight wind: '直吹模式'\n      natural wind: '自然风'\n    # 指定洗衣机烘干模式的词典\n    washer.drying_level:\n      moist: '微湿'\n      extra: '特干'\n```\n\n\n<a name=\"customize-entity\"></a>\n### [自定义实体](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-864678774)\n\n```yaml\n# configuration.yaml\nhomeassistant:\n  customize: !include customize.yaml\n\n# 通过设备型号自定义\nxiaomi_miot:\n  # https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/device_customizes.py\n  device_customizes:\n    chuangmi.plug.212a01:\n      miot_local: true\n      chunk_properties: 7\n\n\n# 通过父实体自定义\n# customize.yaml\ndomain.your_entity_id:\n  miot_local: true        # 使用本地模式 (通过账号接入的设备)\n  miot_cloud: true        # 为该实体开启云端模式 (read, write, action)\n  miot_cloud_write: true  # 仅写属性使用云端模式\n  miot_cloud_action: true # 仅action使用云端模式\n  check_lan: true         # 云端模式下检查设备在局域网是否可用\n  miio_properties: power,battery # 获取miio属性到实体的属性中\n  miio_cloud_props: prop.power,event.dev_online\n\n# 自定义子实体\ndomain.parent_entity_id:\n  sensor_properties: temperature,humidity,illumination # Miot属性\n  binary_sensor_properties: is_volume_muted,any_boolen_property\n  switch_properties: on,power\n  number_properties: volume\n  select_properties: mode\n  fan_properties: mode,fan_level\n  cover_properties: motor_control\n\nlight.your_entity_id:\n  color_temp_reverse: false # 反转色温(需重载集成配置)\n  yeelight_smooth_on:  2000 # 毫秒 (仅支持本地接入的易来灯)\n  yeelight_smooth_off: 3000 # 毫秒 (仅支持本地接入的易来灯)\n\nclimate.your_entity_id:\n  bind_sensor: sensor.temperature_entity,sensor.humidity_entity # 绑定传感器实体\n\ncamera.your_entity_id:\n  video_attribute: 1   # https://github.com/al-one/hass-xiaomi-miot/issues/11#issuecomment-773054167\n  keep_streaming: true # 持续更新流地址\n\ncover.your_entity_id:\n  closed_position: 5     # 当实体位置值小于等于此值时为关闭状态\n  deviated_position: 2   # 位置偏差值 2% -> 0%, 98% -> 100%\n  motor_reverse: true    # 反转电机状态(需重载集成配置)\n  position_reverse: true # 反转电机进程(需重载集成配置)\n  open_texts: 打开,升\n  close_texts: 关闭,降\n\nmedia_player.mitv_entity_id:\n  bind_xiaoai: media_player.xiaoai_entity_id # 绑定小爱音箱以打开电视\n  turn_off_screen: true   # 关闭电视/投影时发送熄屏指令\n  screenshot_compress: 20 # 指定电视/投影屏幕截图的压缩率 默认为50%，100时质量最高\n  sources_via_apps: 桌面,米家,百度网盘,设置 # 将电视内的APP添加到输入源列表\n  sources_via_keycodes: menu,enter,back # 将电视遥控按键添加到输入源列表\n  mitv_lan_host: 192.168.31.66 # 指定小米电视的局域网IP\n\ndomain.your_entity_id_xxxx:\n  interval_seconds: 30 # 每次更新状态间隔秒数(需重载集成配置)\n  chunk_properties: 10 # 单次查询设备属性的最大个数(LAN)\n  reverse_state: true  # 反转开关状态（仅作用于Binary Sensor）\n```\n\n<a name=\"filter-entity-attributes\"></a>\n### 过滤实体属性\n\n> 过多的实体属性会导致你的HA数据库变得很庞大，如果某些实体属性对你没有用处，你可以配置`exclude_state_attributes`来忽略它们\n\n```yaml\n# configuration.yaml\nxiaomi_miot:\n  exclude_state_attributes:\n    - miot_type\n    - stream_address\n    - motion_video_latest\n```\n\n<a name=\"yaml-configuration-reloading\"></a>\n### YAML配置重载\n本插件支持配置重载(修改YAML配置后无需重启[HomeAssistant](https://www.home-assistant.io)):\n> [🔨 开发者工具](https://my.home-assistant.io/redirect/developer_states) > [YAML 重载](https://my.home-assistant.io/redirect/server_controls) > 配置重载 > 🔍 `重载 XIAOMI MIOT AUTO`\n\n\n<a name=\"supported-devices\"></a>\n## [支持的设备](https://github.com/al-one/hass-xiaomi-miot/issues/12)\n\n- 🔌 [插座](https://home.miot-spec.com/s/plug) / [开关](https://home.miot-spec.com/s/switch)\n- 💡 [智能灯](https://home.miot-spec.com/s/light)\n- ❄️ [空调](https://home.miot-spec.com/s/aircondition) / [空调伴侣](https://home.miot-spec.com/s/acpartner) / [红外空调](https://home.miot-spec.com/s/miir.aircondition)\n- 🌀 [风扇](https://home.miot-spec.com/s/fan) / [凉霸](https://home.miot-spec.com/s/ven_fan)\n- 🛀 [浴霸](https://home.miot-spec.com/s/bhf_light) / 🔥 [取暖器](https://home.miot-spec.com/s/heater) / [温控器](https://home.miot-spec.com/s/airrtc)\n- 📷 [摄像头](https://home.miot-spec.com/s/camera) / [猫眼/可视门铃](https://home.miot-spec.com/s/cateye) [❓️](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-903078604)\n- 📺 [电视](https://home.miot-spec.com/s/tv) / 📽️ [投影仪](https://home.miot-spec.com/s/projector) / [机顶盒](https://home.miot-spec.com/s/tvbox)\n- 🗣️ [小爱音箱](https://home.miot-spec.com/s/wifispeaker) [❓️](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-885989099)\n- 🎮️ [万能遥控器](https://home.miot-spec.com/s/chuangmi.remote) [❓️](https://github.com/al-one/hass-xiaomi-miot/commit/fbcc8063783e53b9480574536a034d338634f4e8#commitcomment-56563663)\n- 🔐 [智能门锁](https://home.miot-spec.com/s/lock) / 🚪 [智慧门](https://home.miot-spec.com/s/door)\n- 👕 [洗衣机](https://home.miot-spec.com/s/washer) / [干衣机](https://home.miot-spec.com/s/dry) / [冰箱](https://home.miot-spec.com/s/fridge)\n- 🚰 [净水器](https://home.miot-spec.com/s/waterpuri) / [饮水机](https://home.miot-spec.com/s/kettle)\n- ♻️ [空气净化器](https://home.miot-spec.com/s/airpurifier) / [新风机](https://home.miot-spec.com/s/airfresh) / [油烟机](https://home.miot-spec.com/s/hood)\n- 🌡 [温湿度传感器](https://home.miot-spec.com/s/sensor_ht) / [水侵传感器](https://home.miot-spec.com/s/flood) / [烟雾传感器](https://home.miot-spec.com/s/sensor_smoke)\n- 🥘 [电饭煲](https://home.miot-spec.com/s/cooker) / [压力锅](https://home.miot-spec.com/s/pre_cooker) / [电蒸锅](https://home.miot-spec.com/s/esteamer)\n- 🍲 [电磁炉](https://home.miot-spec.com/s/ihcooker) / [烤箱](https://home.miot-spec.com/s/oven) / [微波炉](https://home.miot-spec.com/s/microwave)\n- 🍗 [空气炸锅](https://home.miot-spec.com/s/fryer) / [多功能锅](https://home.miot-spec.com/s/mfcp)\n- 🍵 [养生壶](https://home.miot-spec.com/s/health_pot) / ☕️ [咖啡机](https://home.miot-spec.com/s/coffee)\n- 🍹 [破壁机](https://home.miot-spec.com/s/juicer) / [搅拌机](https://home.miot-spec.com/s/juicer) / [果蔬清洗机](https://home.miot-spec.com/s/f_washer)\n- ♨️ [热水器](https://home.miot-spec.com/s/waterheater) / [洗碗机](https://home.miot-spec.com/s/dishwasher) / [足浴器](https://home.miot-spec.com/s/foot_bath)\n- 🦠 [消毒柜](https://home.miot-spec.com/s/steriliser) / [毛巾架](https://home.miot-spec.com/s/.tow)\n- 🪟 [窗帘电机](https://home.miot-spec.com/s/curtain) / [开窗器](https://home.miot-spec.com/s/wopener) / [晾衣机](https://home.miot-spec.com/s/airer)\n- 🧹 [扫地/扫拖机器人](https://home.miot-spec.com/s/vacuum) / [擦地机](https://home.miot-spec.com/s/.mop)\n- 💦 [加湿器](https://home.miot-spec.com/s/humidifier) / [除湿器](https://home.miot-spec.com/s/derh) / [除味器](https://home.miot-spec.com/s/diffuser)\n- 🍃 [空气检测仪](https://home.miot-spec.com/s/airmonitor) / 🪴 [植物监测仪](https://home.miot-spec.com/s/plantmonitor)\n- 🛏 [电动床](https://home.miot-spec.com/s/bed) / [电热毯/水暖床垫](https://home.miot-spec.com/s/blanket) / 😴 [睡眠监测仪](https://home.miot-spec.com/s/lunar)\n- 💺 [办公椅](https://home.miot-spec.com/s/chair) / [升降桌](https://home.miot-spec.com/s/desk)\n- 💆 [按摩椅](https://home.miot-spec.com/s/massage) / [按摩仪](https://home.miot-spec.com/s/magic_touch)\n- 🏃 [走步机](https://home.miot-spec.com/s/walkingpad) / [跑步机](https://home.miot-spec.com/s/treadmill)\n- 🚽 [马桶(盖)](https://home.miot-spec.com/s/toilet) / [猫砂盆](https://home.miot-spec.com/s/litter_box) / 🪥 [牙刷](https://home.miot-spec.com/s/toothbrush)\n- 🐱 [宠物喂食器](https://home.miot-spec.com/s/feeder) / ⛲ [宠物饮水机](https://home.miot-spec.com/s/pet_waterer) / 🐟 [鱼缸](https://home.miot-spec.com/s/fishbowl)\n- 🦟 [驱蚊器](https://home.miot-spec.com/s/mosq) / [消毒/灭菌灯](https://home.miot-spec.com/s/s_lamp)\n- 🚘 [智能后视镜](https://home.miot-spec.com/s/rv_mirror) / [抬头显示HUD](https://home.miot-spec.com/s/hud)\n- ⌚️ [智能/儿童手表](https://home.miot-spec.com/s/watch) / [手环](https://home.miot-spec.com/s/bracelet)\n- 🚶 [人体传感器](https://home.miot-spec.com/s/motion) / 🧲 [门窗传感器](https://home.miot-spec.com/s/magnet) [❓️](https://github.com/al-one/hass-xiaomi-miot/issues/100#issuecomment-909031222)\n- 📳 [动静贴](https://home.miot-spec.com/s/vibration)\n- 🌐 [路由器](https://home.miot-spec.com/s/router) / 🖨 [打印机](https://home.miot-spec.com/s/printer)\n\n\n<a name=\"unsupported-devices\"></a>\n### 不支持的设备\n\n> 本插件使用轮询的方式获取设备状态，因此无法实时监听部分设备的事件\n\n- 无线场景开关类 (如: [lumi.sensor_switch.v1](https://home.miot-spec.com/s/lumi.sensor_switch.v1) / [lumi.remote.b686opcn01](https://home.miot-spec.com/s/lumi.remote.b686opcn01))\n- 人体传感器类 (如: [lumi.sensor_motion.v1](https://home.miot-spec.com/s/lumi.sensor_motion.v1))\n- 门窗传感器类 (如: [lumi.sensor_magnet.v1](https://home.miot-spec.com/s/lumi.sensor_magnet.v1))\n\n\n<a name=\"services\"></a>\n## 服务\n\n> 由于HA支持服务响应已经有一段时间了，本组件自v0.7.18开始不再触发事件。\n\n#### [`xiaomi_miot.set_property`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.set_property)\n```yaml\nservice: xiaomi_miot.set_property\ndata:\n  entity_id: camera.isa_hlc7_xxxx\n  field: camera_control.on\n  value: true\n```\n\n#### [`xiaomi_miot.set_miot_property`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.set_miot_property)\n```yaml\nservice: xiaomi_miot.set_miot_property\ndata:\n  entity_id: camera.isa_hlc7_xxxx\n  siid: 2\n  piid: 1\n  value: true\n```\n\n#### [`xiaomi_miot.get_properties`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.get_properties)\n```yaml\nservice: xiaomi_miot.get_properties\ndata:\n  entity_id: camera.isa_hlc7_1ab7\n  mapping:\n    - siid: 2\n      piid: 1\n    - siid: 3\n      piid: 2\n  update_entity: true # 更新实体状态属性\n```\n\n#### [`xiaomi_miot.call_action`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.call_action)\n```yaml\nservice: xiaomi_miot.call_action\ndata:\n  entity_id: vacuum.dreame_p2259_entity_id\n  siid: 4 # vacuum-extend\n  aiid: 1 # start-clean\n  params:\n    - 18 # piid: 1 - work-mode\n    - '{\"selects\":[[7,1,0,2,1]]}' # piid: 10 - clean-extend-data\n```\n\n#### [`xiaomi_miot.send_command`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.send_command)\n```yaml\nservice: xiaomi_miot.send_command\ndata:\n  entity_id: switch.your_entity_id\n  method: set_power\n  params:\n    - on\n```\n\n#### [`xiaomi_miot.get_token`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.get_token)\n```yaml\nservice: xiaomi_miot.get_token\ndata:\n  name: Light # 米家中的设备名称关键词或IP、型号\n```\n\n#### [`xiaomi_miot.intelligent_speaker`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.intelligent_speaker)\n```yaml\nservice: xiaomi_miot.intelligent_speaker\ndata:\n  entity_id: media_player.xiaoai_lx04_xxxx\n  text: Turn on the light\n  execute: true # 执行指令\n  silent: true  # 静默执行\n```\n\n#### [`xiaomi_miot.xiaoai_wakeup`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.xiaoai_wakeup)\n```yaml\nservice: xiaomi_miot.xiaoai_wakeup\ndata:\n  entity_id: media_player.xiaoai_lx04_xxxx\n```\n\n#### [`xiaomi_miot.renew_devices`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.renew_devices)\n```yaml\nservice: xiaomi_miot.renew_devices\ndata:\n  username: 80001234 # 小米账号ID/登录邮箱/手机号\n```\n\n#### [`xiaomi_miot.request_xiaomi_api`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.request_xiaomi_api)\n```yaml\nservice: xiaomi_miot.request_xiaomi_api\ndata:\n  entity_id: sensor.your_entity_id\n  api: /v2/plugin/fetch_plugin\n  data:\n    latest_req:\n      api_version: 10070\n      plugins:\n        - model: brand.device.model\n```\n\n> 查看[更多服务](https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/services.yaml)\n\n\n<a name=\"debug\"></a>\n## 调试\n\n### 获取实体状态属性\n\n> [🔨 开发者工具](https://my.home-assistant.io/redirect/developer_states) > [ℹ️ 状态](https://my.home-assistant.io/redirect/developer_states) > 🔍 筛选实体\n\n### [获取调试日志](https://www.home-assistant.io/integrations/logger)\n\n```yaml\n# 使用HA服务 (无需重启)\nservice: logger.set_level\ndata:\n  custom_components.xiaomi_miot: debug\n\n# 或者修改 configuration.yaml (需重启)\nlogger:\n  default: warning\n  logs:\n    custom_components.xiaomi_miot: debug\n```\n\n> [⚙️ 配置](https://my.home-assistant.io/redirect/config) > [⚙️ 系统](https://my.home-assistant.io/redirect/system_dashboard) > [✍️ 日志](https://my.home-assistant.io/redirect/logs)\n\n\n## 交流\n\n- TG群：[@xiaomi_miot](https://t.me/xiaomi_miot)\n- QQ群：[198841186](https://jq.qq.com/?_wv=1027&k=lZAMn5Uo) (已满)\n- 微信群：\n\n  <img src=\"https://user-images.githubusercontent.com/4549099/161735971-0540ce1c-eb49-4aff-8cb3-3bdad15e22f7.png\" alt=\"xiaomi miot weixin group\" width=\"100\">\n\n\n<a name=\"obtain-miio-token\"></a>\n## 获取 miio token\n\n- 使用HomeAssistant服务\n  1. 打开HomeAssistant服务工具 [![](https://my.home-assistant.io/badges/developer_services.svg)](https://my.home-assistant.io/redirect/developer_services/)\n  2. 选择服务[`xiaomi_miot.get_token`](https://my.home-assistant.io/redirect/developer_call_service/?service=xiaomi_miot.get_token)，输入设备名称关键词\n  3. 在HA通知列表中找到token\n\n- 使用[@vevsvevs](https://github.com/custom-components/ble_monitor/issues/7#issuecomment-595874419)修改版的米家\n  1. 下载APK [СКАЧАТЬ ВЕРСИЮ 7.x.x](https://www.vevs.me/2017/11/mi-home.html) 并安装\n  2. 打开米家APP > 我的 > 实验室功能\n  3. 打开`Write custom log files`和`Enable app's debug mode`\n  4. 重启APP后在`vevs/logs/misc/devices.txt`文件中找到token\n\n\n## 鸣谢\n\n- [PyCharm](https://www.jetbrains.com/pycharm/)\n- [Dler](https://dler.pro/auth/register?affid=130833) (新用户10%折扣代码`CXVbfhHuSRsi`)\n"
        },
        {
          "name": "custom_components",
          "type": "tree",
          "content": null
        },
        {
          "name": "hacs.json",
          "type": "blob",
          "size": 0.19921875,
          "content": "{\n  \"name\": \"Xiaomi Miot Auto\",\n  \"content_in_root\": false,\n  \"zip_release\": true,\n  \"filename\": \"xiaomi_miot.zip\",\n  \"render_readme\": true,\n  \"hide_default_branch\": true,\n  \"homeassistant\": \"2023.9.0\"\n}\n"
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 4.228515625,
          "content": "#!/bin/bash\n# wget -q -O - https://raw.githubusercontent.com/al-one/hass-xiaomi-miot/master/install.sh | bash -\n# wget -q -O - https://raw.githubusercontent.com/al-one/hass-xiaomi-miot/master/install.sh | ARCHIVE_TAG=v1.0.0 bash -\n# wget -q -O - https://raw.githubusercontent.com/al-one/hass-xiaomi-miot/master/install.sh | HUB_DOMAIN=hub.fastgit.xyz bash -\n# wget -q -O - https://raw.githubusercontent.com/al-one/hass-xiaomi-miot/master/install.sh | DOMAIN=hacs REPO_PATH=hacs-china/integration ARCHIVE_TAG=main bash -\nset -e\n\n[ -z \"$DOMAIN\" ] && DOMAIN=\"xiaomi_miot\"\n[ -z \"$REPO_PATH\" ] && REPO_PATH=\"al-one/hass-xiaomi-miot\"\nREPO_NAME=$(basename \"$REPO_PATH\")\n\n[ -z \"$ARCHIVE_TAG\" ] && ARCHIVE_TAG=\"$1\"\n[ -z \"$ARCHIVE_TAG\" ] && ARCHIVE_TAG=\"master\"\n[ -z \"$HUB_DOMAIN\" ] && HUB_DOMAIN=\"github.com\"\nARCHIVE_URL=\"https://$HUB_DOMAIN/$REPO_PATH/archive/$ARCHIVE_TAG.zip\"\n\nif [ \"$ARCHIVE_TAG\" = \"latest\" ]; then\n    ARCHIVE_URL=\"https://$HUB_DOMAIN/$REPO_PATH/releases/$ARCHIVE_TAG/download/$DOMAIN.zip\"\nfi\nif [ \"$DOMAIN\" = \"hacs\" ]; then\n    if [ \"$ARCHIVE_TAG\" = \"main\" ] || [ \"$ARCHIVE_TAG\" = \"china\" ]; then\n        ARCHIVE_TAG=\"latest\"\n    fi\n    ARCHIVE_URL=\"https://$HUB_DOMAIN/$REPO_PATH/releases/$ARCHIVE_TAG/download/$DOMAIN.zip\"\nfi\n\nRED_COLOR='\\033[0;31m'\nGREEN_COLOR='\\033[0;32m'\nGREEN_YELLOW='\\033[1;33m'\nNO_COLOR='\\033[0m'\n\ndeclare haPath\ndeclare ccPath\ndeclare -a paths=(\n    \"$PWD\"\n    \"$PWD/config\"\n    \"/config\"\n    \"$HOME/.homeassistant\"\n    \"/usr/share/hassio/homeassistant\"\n)\n\nfunction info () { echo -e \"${GREEN_COLOR}INFO: $1${NO_COLOR}\";}\nfunction warn () { echo -e \"${GREEN_YELLOW}WARN: $1${NO_COLOR}\";}\nfunction error () { echo -e \"${RED_COLOR}ERROR: $1${NO_COLOR}\"; if [ \"$2\" != \"false\" ]; then exit 1;fi; }\n\nfunction checkRequirement () {\n    if [ -z \"$(command -v \"$1\")\" ]; then\n        error \"'$1' is not installed\"\n    fi\n}\n\ncheckRequirement \"wget\"\ncheckRequirement \"unzip\"\n\ninfo \"Archive URL: $ARCHIVE_URL\"\ninfo \"Trying to find the correct directory...\"\nfor path in \"${paths[@]}\"; do\n    if [ -n \"$haPath\" ]; then\n        break\n    fi\n\n    if [ -f \"$path/home-assistant.log\" ]; then\n        haPath=\"$path\"\n    else\n        if [ -d \"$path/.storage\" ] && [ -f \"$path/configuration.yaml\" ]; then\n            haPath=\"$path\"\n        fi\n    fi\ndone\n\nif [ -n \"$haPath\" ]; then\n    info \"Found Home Assistant configuration directory at '$haPath'\"\n    cd \"$haPath\" || error \"Could not change path to $haPath\"\n    ccPath=\"$haPath/custom_components\"\n    if [ ! -d \"$ccPath\" ]; then\n        info \"Creating custom_components directory...\"\n        mkdir \"$ccPath\"\n    fi\n\n    info \"Changing to the custom_components directory...\"\n    cd \"$ccPath\" || error \"Could not change path to $ccPath\"\n\n    info \"Downloading...\"\n    wget -t 2 -O \"$ccPath/$ARCHIVE_TAG.zip\" \"$ARCHIVE_URL\"\n\n    if [ -d \"$ccPath/$DOMAIN\" ]; then\n        warn \"custom_components/$DOMAIN directory already exist, cleaning up...\"\n        rm -R \"$ccPath/$DOMAIN\"\n    fi\n\n    ver=${ARCHIVE_TAG/#v/}\n    if [ ! -d \"$ccPath/$REPO_NAME-$ver\" ]; then\n        ver=$ARCHIVE_TAG\n    fi\n\n    info \"Unpacking...\"\n    str=\"/releases/\"\n    if [ ${ARCHIVE_URL/${str}/} = $ARCHIVE_URL ]; then\n        unzip -o \"$ccPath/$ARCHIVE_TAG.zip\" -d \"$ccPath\" >/dev/null 2>&1\n    else\n        dir=\"$ccPath/$REPO_NAME-$ver/custom_components/$DOMAIN\"\n        mkdir -p $dir\n        unzip -o \"$ccPath/$ARCHIVE_TAG.zip\" -d $dir >/dev/null 2>&1\n    fi\n\n    if [ ! -d \"$ccPath/$REPO_NAME-$ver\" ]; then\n        error \"Could not find $REPO_NAME-$ver directory\" false\n        error \"找不到文件夹: $REPO_NAME-$ver\"\n    fi\n    cp -rf \"$ccPath/$REPO_NAME-$ver/custom_components/$DOMAIN\" \"$ccPath\"\n\n    info \"Removing temp files...\"\n    rm -rf \"$ccPath/$ARCHIVE_TAG.zip\"\n    rm -rf \"$ccPath/$REPO_NAME-$ver\"\n    info \"Installation complete.\"\n    info \"安装成功！\"\n    echo\n    info \"Remember to restart Home Assistant before you configure it.\"\n    info \"请重启 Home Assistant\"\n\nelse\n    echo\n    error \"Could not find the directory for Home Assistant\" false\n    error \"找不到 Home Assistant 根目录\" false\n    echo \"Manually change the directory to the root of your Home Assistant configuration\"\n    echo \"With the user that is running Home Assistant and run the script again\"\n    echo \"请手动进入 Home Assistant 根目录后再次执行此脚本\"\n    exit 1\nfi\n"
        }
      ]
    }
  ]
}