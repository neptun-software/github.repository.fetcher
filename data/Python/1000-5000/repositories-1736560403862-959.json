{
  "metadata": {
    "timestamp": 1736560403862,
    "page": 959,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LLaVA-VL/LLaVA-NeXT",
      "stars": 3239,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.3505859375,
          "content": "# The .dockerignore file excludes files from the container build process.\n#\n# https://docs.docker.com/engine/reference/builder/#dockerignore-file\n\n# Exclude Git files\n.git\n.github\n.gitignore\n\n# Exclude Python cache files\n__pycache__\n.mypy_cache\n.pytest_cache\n.ruff_cache\n\n# Exclude Python virtual environment\n/venv\n\n# Exclude some weights\n/openai\n/liuhaotian\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3115234375,
          "content": "root = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\n\n# 4 space indentation\n[*.{py,json}]\nindent_style = space\nindent_size = 4\n\n# 2 space indentation\n[*.{md,sh,yaml,yml}]\nindent_style = space\nindent_size = 2"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.75390625,
          "content": "# https://git-scm.com/docs/gitattributes\n\n# Set the default behavior, in case people don't have core.autocrlf set.\n# https://git-scm.com/docs/gitattributes#_end_of_line_conversion\n* text=auto\n\n# common python attributes, taken from https://github.com/alexkaratarakis/gitattributes/blob/710900479a2bedeec7003d381719521ffbb18bf8/Python.gitattributes\n# Source files\n# ============\n*.pxd    text diff=python\n*.py     text diff=python\n*.py3    text diff=python\n*.pyw    text diff=python\n*.pyx    text diff=python\n*.pyz    text diff=python\n*.pyi    text diff=python\n\n# Binary files\n# ============\n*.db     binary\n*.p      binary\n*.pkl    binary\n*.pickle binary\n*.pyc    binary export-ignore\n*.pyo    binary export-ignore\n*.pyd    binary\n\n# Jupyter notebook\n*.ipynb  text eol=lf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.89453125,
          "content": "# Python\n__pycache__\n*.pyc\n*.egg-info\ndist\n\n# Log\n*.log\n*.log.*\n# *.json\n# *.jsonl\n\n# Data\n!**/alpaca-data-conversation.json\n# Editor\n.idea\n*.swp\n.vscode\n\n# Other\n.DS_Store\nwandb\noutput\nllavavid\n\ncheckpoints\nproject_checkpoints\ndebug_checkpoints\nplayground/data\nplayground/cc3m_llava34b_cap\nckpts*\n\n.ipynb_checkpoints\nchunyl_scripts\n*.ipynb\n\n# DevContainer\n!.devcontainer/*\n\n# Demo\nserve_images/\nnotebooks/\nlogs\nscripts/dist_*\nlogs/\nsubmissions/\ncn_scripts/\ninternal_project_checkpoints/\nwork_dirs\nscripts/i18n/*\nplayground/.nfs028b000000010add00000001\nHIP\nplayground/.nfs028b0000017bff2c00000012\nscripts/qwen\nscripts/vicuna\nscripts/mistral\nscripts/baseline_rep\nscripts/cn_boli01_hl\nscripts/cn_boli01_lf\nscripts/cn_lf\nscripts/cn_lq\nscripts/cn_yg\nscripts/cn_yg_hao\nscripts/eva_encoder\nscripts/i18n\nscripts/i18n_higher_res\nscripts/multi-images\nscratchpad\nbuild/\nplayground/*.json\nmlx_configs/\ndata_processing/\n# demo/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.501953125,
          "content": "<p align=\"center\" width=\"100%\">\n<img src=\"https://i.postimg.cc/pL17YtG4/WX20240508-220230-2x.png\"  width=\"80%\" height=\"80%\">\n</p>\n\n# LLaVA-NeXT: Open Large Multimodal Models\n[![Static Badge](https://img.shields.io/badge/llava_video-paper-green)](http://arxiv.org/abs/2410.02713)\n[![Static Badge](https://img.shields.io/badge/llava_onevision-paper-green)](https://arxiv.org/abs/2408.03326)\n[![llava_next-blog](https://img.shields.io/badge/llava_next-blog-green)](https://llava-vl.github.io/blog/)\n\n[![llava_onevision-demo](https://img.shields.io/badge/llava_onevision-demo-red)](https://llava-onevision.lmms-lab.com/)\n[![llava_next-video_demo](https://img.shields.io/badge/llava_video-demo-red)](https://huggingface.co/spaces/WildVision/vision-arena)\n[![llava_next-interleave_demo](https://img.shields.io/badge/llava_next-interleave_demo-red)](https://huggingface.co/spaces/lmms-lab/LLaVA-NeXT-Interleave-Demo)\n[![Openbayes Demo](https://img.shields.io/static/v1?label=Demo&message=OpenBayes%E8%B4%9D%E5%BC%8F%E8%AE%A1%E7%AE%97&color=green)](https://openbayes.com/console/public/tutorials/gW0ng9jKXfO)\n\n[![llava_video-checkpoints](https://img.shields.io/badge/llava_video-checkpoints-blue)](https://huggingface.co/collections/lmms-lab/llava-next-video-661e86f5e8dabc3ff793c944)\n[![llava_onevision-checkpoints](https://img.shields.io/badge/llava_onevision-checkpoints-blue)](https://huggingface.co/collections/lmms-lab/llava-onevision-66a259c3526e15166d6bba37)\n[![llava_next-interleave_checkpoints](https://img.shields.io/badge/llava_next-interleave_checkpoints-blue)](https://huggingface.co/collections/lmms-lab/llava-next-interleave-66763c55c411b340b35873d1)\n[![llava_next-image_checkpoints](https://img.shields.io/badge/llava_next-image_checkpoints-blue)](https://huggingface.co/lmms-lab)\n\n## Release Notes\n\n- **[2024/10/04] 🔥 LLaVA-Video** (formerly LLaVA-NeXT-Video) has undergone a major upgrade! We are excited to release **LLaVA-Video-178K**, a high-quality synthetic dataset for video instruction tuning. This dataset includes:\n\n  - 178,510 caption entries\n  - 960,792 open-ended Q&A pairs\n  - 196,198 multiple-choice Q&A items\n\n  Along with this, we’re also releasing the **LLaVA-Video 7B/72B models**, which deliver competitive performance on the latest video benchmarks, including [Video-MME](https://video-mme.github.io/home_page.html#leaderboard), [LongVideoBench](https://longvideobench.github.io/), and [Dream-1K](https://tarsier-vlm.github.io/).\n\n  📄 **Explore more**:\n  - [LLaVA-Video-178K Dataset](https://huggingface.co/datasets/lmms-lab/LLaVA-Video-178K): Download the dataset.\n  - [LLaVA-Video Models](https://huggingface.co/collections/lmms-lab/llava-video-661e86f5e8dabc3ff793c944): Access model checkpoints.\n  - [Paper](http://arxiv.org/abs/2410.02713): Detailed information about LLaVA-Video.\n  - [LLaVA-Video Documentation](https://github.com/LLaVA-VL/LLaVA-NeXT/blob/main/docs/LLaVA_Video_1003.md): Guidance on training, inference and evaluation.\n\n- [2024/09/13] 🔥 **🚀 [LLaVA-OneVision-Chat](docs/LLaVA_OneVision_Chat.md)**. The new LLaVA-OV-Chat (7B/72B) significantly improves the chat experience of LLaVA-OV. 📄\n  \n  ![](docs/ov_chat_images/chat_results.png)\n\n- [2024/08/06] 🔥 **🚀 [LLaVA-OneVision (OV)](https://llava-vl.github.io/blog/2024-08-05-llava-onevision/)!** The new LLaVA-OV models (0.5B/7B/72B) achieve new state-of-the-art performance across single-image, multi-image, and video benchmarks, sometimes rivaling top commercial models on 47 diverse benchmarks. 📄 Explore More:\n  * [[Paper]](https://arxiv.org/abs/2408.03326): In-depth insights, new emegerging scenarios, ie, strong video understadning through task transfer from images.\n  * [[LLaVA-OV Doc]](https://github.com/LLaVA-VL/LLaVA-NeXT/blob/main/docs/LLaVA_OneVision.md): Model inference and evaluation guidance.\n  * [[Scripts]](https://github.com/LLaVA-VL/LLaVA-NeXT/blob/main/scripts/train): Start training models on your single-image/multi-image/video data.\n    \n- [2024/07/16] 🔥 **LLaVA-NeXT-Video** has been upgraded. The new 32B model achieves the best open-source performance on several video benchmarks, including [Video-MME](https://video-mme.github.io/home_page.html#leaderboard). Please refer to [this page](docs/LLaVA-NeXT-Video_0716.md) for details, refer to [llava_next-video_demo](https://huggingface.co/spaces/WildVision/vision-arena) for demo.\n\n\n- [2024/06/23] 🔥 **LLaVA-NeXT-Interleave** is released. We utilize image-text interleaved format to unify multi-image, video, and 3D tasks in one LLM and achieve **SoTA** performance on a wide range of benchmarks. Check out [paper](https://arxiv.org/pdf/2407.07895), [blog](https://llava-vl.github.io/blog/2024-06-16-llava-next-interleave/), and [checkpoints](https://huggingface.co/collections/lmms-lab/llava-next-interleave-66763c55c411b340b35873d1) to see new capabilities and improved performance! We have released 0.5b, 7b, and 7b-dpo models.\n  * An all-round LLM for multi-image, video, and 3D with strong performance \\[[demo](https://huggingface.co/spaces/lmms-lab/LLaVA-NeXT-Interleave-Demo)\\]\n  * Construct interleave training data [**M4-Instruct**](https://huggingface.co/datasets/lmms-lab/M4-Instruct-Data)\n  * Construct multi-image benchmark [**LLaVA-Interleave Bench**](https://huggingface.co/datasets/lmms-lab/LLaVA-NeXT-Interleave-Bench)\n\n\n- [2024/05/25] 🔥 Wondering \"[What Else Influences Visual Instruction Tuning Beyond Data?](https://llava-vl.github.io/blog/2024-05-25-llava-next-ablations/)\" Our new [blog](https://llava-vl.github.io/blog/2024-05-25-llava-next-ablations/) summarizes empirical explorations to ablate the various design choices in improving LMMs except instruct data itself. Meanwhile, open-source the recapioned high-quality data using LLaVA-NeXT-34B on [[COCO]](https://huggingface.co/datasets/lmms-lab/LLaVA-ReCap-118K) [[LCS]](https://huggingface.co/datasets/lmms-lab/LLaVA-ReCap-558K) [[CC3M]](https://huggingface.co/datasets/lmms-lab/LLaVA-ReCap-CC3M).\n  * Architectures (LMM & Vision Encoder)\n  * Visual Representations (Resolution & # Tokens)\n  * Training Strategies (High-quality data & Trainable modules)\n\n- [2024/05/10] 🔥 **LLaVA-NeXT** (Stronger) models are released, with support of stronger LMM inlcuding LLama-3 (8B) and Qwen-1.5 (72B/110B) Check out [[blog](https://llava-vl.github.io/blog/2024-05-10-llava-next-stronger-llms/)] and [[checkpoints](https://huggingface.co/lmms-lab)] to see improved performance!\n- [2024/05/10] 🔥 **LLaVA-NeXT** (Video) is released. The image-only-trained LLaVA-NeXT model is surprisingly strong on video tasks with zero-shot modality transfer. DPO training with AI feedback on videos can yield significant improvement. [[Blog](https://llava-vl.github.io/blog/2024-04-30-llava-next-video/)], [[checkpoints](https://huggingface.co/collections/lmms-lab/llava-next-video-661e86f5e8dabc3ff793c944)] and [[sglang](https://github.com/sgl-project/sglang)]\n- [2024/01/30] 🔥 **LLaVA-NeXT** is out! With additional scaling to LLaVA-1.5, LLaVA-NeXT-34B outperforms Gemini Pro on some benchmarks. It can now process 4x more pixels and perform more tasks/applications than before. Check out the [blog post](https://llava-vl.github.io/blog/2024-01-30-llava-next/), and explore the [demo](https://llava.hliu.cc/)! Models are available in [Model Zoo](https://github.com/haotian-liu/LLaVA/blob/main/docs/MODEL_ZOO.md). Training/eval data and scripts coming soon.\n<details>\n<summary>More</summary>\n  \n- [2024/03/10] 🔥 Releasing **LMMs-Eval**, a highly efficient evaluation pipeline we used when developing LLaVA-NeXT. It supports the evaluation of LMMs on dozens of public datasets and allows new dataset onboarding, making the dev of new LMMs much faster. [[Blog](https://lmms-lab.github.io/lmms-eval-blog/lmms-eval-0.1/)] [[Codebase](https://github.com/EvolvingLMMs-Lab/lmms-eval)]\n  \n- [2023/11/10] [LLaVA-Plus](https://llava-vl.github.io/llava-plus/) is released: Learning to Use Tools for Creating Multimodal Agents, with LLaVA-Plus (LLaVA that Plug and Learn to Use Skills). [[Project Page](https://llava-vl.github.io/llava-plus/)] [[Demo](https://llavaplus.ngrok.io/)] [[Code](https://github.com/LLaVA-VL/LLaVA-Plus-Codebase)] [[Paper](https://arxiv.org/abs/2311.05437)]\n- [2023/11/02] [LLaVA-Interactive](https://llava-vl.github.io/llava-interactive/) is released: Experience the future of human-AI multimodal interaction with an all-in-one demo for Image Chat, Segmentation, Generation and Editing. [[Project Page](https://llava-vl.github.io/llava-interactive/)] [[Demo](https://llavainteractive.ngrok.io/)] [[Code](https://github.com/LLaVA-VL/LLaVA-Interactive-Demo)] [[Paper](https://arxiv.org/abs/2311.00571)]\n- [2023/10/26] 🔥 LLaVA-1.5 with LoRA achieves comparable performance as full-model finetuning, with a reduced GPU RAM requirement ([ckpts](https://github.com/haotian-liu/LLaVA/blob/main/docs/MODEL_ZOO.md#llava-v15), [script](https://github.com/haotian-liu/LLaVA#train)). We also provide a [doc](https://github.com/haotian-liu/LLaVA/blob/main/docs/Finetune_Custom_Data.md) on how to finetune LLaVA-1.5 on your own dataset with LoRA.\n- [2023/10/12] Check out the Korean LLaVA (Ko-LLaVA), created by ETRI, who has generously supported our research! [[🤗 Demo](https://huggingface.co/spaces/etri-vilab/Ko-LLaVA)]\n- [2023/10/05] 🔥 LLaVA-1.5 is out! Achieving SoTA on 11 benchmarks, with just simple modifications to the original LLaVA, utilizes all public data, completes training in ~1 day on a single 8-A100 node, and surpasses methods like Qwen-VL-Chat that use billion-scale data. Check out the [technical report](https://arxiv.org/abs/2310.03744), and explore the [demo](https://llava.hliu.cc/)! Models are available in [Model Zoo](https://github.com/haotian-liu/LLaVA/blob/main/docs/MODEL_ZOO.md). The training data and scripts of LLaVA-1.5 are released [here](https://github.com/haotian-liu/LLaVA#train), and evaluation scripts are released [here](https://github.com/haotian-liu/LLaVA/blob/main/docs/Evaluation.md)!\n- [2023/09/26] LLaVA is improved with reinforcement learning from human feedback (RLHF) to improve fact grounding and reduce hallucination. Check out the new SFT and RLHF checkpoints at project [[LLavA-RLHF]](https://llava-rlhf.github.io/)\n- [2023/09/22] [LLaVA](https://arxiv.org/abs/2304.08485) is accepted by NeurIPS 2023 as **oral presentation**, and [LLaVA-Med](https://arxiv.org/abs/2306.00890) is accepted by NeurIPS 2023 Datasets and Benchmarks Track as **spotlight presentation**.\n- [2023/11/06] Support **Intel** dGPU and CPU platforms. [More details here.](https://github.com/haotian-liu/LLaVA/tree/intel/docs/intel)\n- [2023/10/12] LLaVA is now supported in [llama.cpp](https://github.com/ggerganov/llama.cpp/pull/3436) with 4-bit / 5-bit quantization support!\n- [2023/10/11] The training data and scripts of LLaVA-1.5 are released [here](https://github.com/haotian-liu/LLaVA#train), and evaluation scripts are released [here](https://github.com/haotian-liu/LLaVA/blob/main/docs/Evaluation.md)!\n- [2023/10/10] [Roboflow Deep Dive](https://blog.roboflow.com/first-impressions-with-llava-1-5/): First Impressions with LLaVA-1.5.\n- [2023/09/20] We summarize our empirical study of training 33B and 65B LLaVA models in a [note](https://arxiv.org/abs/2309.09958). Further, if you are interested in the comprehensive review, evolution and trend of multimodal foundation models, please check out our recent survey paper [``Multimodal Foundation Models: From Specialists to General-Purpose Assistants''.](https://arxiv.org/abs/2309.10020)\n<p align=\"center\">\n  <img src=\"https://github.com/Computer-Vision-in-the-Wild/CVinW_Readings/blob/main/images/mfm_evolution.jpeg?raw=true\" width=50%/>\n</p>\n\n- [2023/07/19] 🔥 We release a major upgrade, including support for LLaMA-2, LoRA training, 4-/8-bit inference, higher resolution (336x336), and a lot more. We release [LLaVA Bench](https://github.com/haotian-liu/LLaVA/blob/main/docs/LLaVA_Bench.md) for benchmarking open-ended visual chat with results from Bard and Bing-Chat. We also support and verify training with RTX 3090 and RTX A6000. Check out [LLaVA-from-LLaMA-2](https://github.com/haotian-liu/LLaVA/blob/main/docs/LLaVA_from_LLaMA2.md), and our [model zoo](https://github.com/haotian-liu/LLaVA/blob/main/docs/MODEL_ZOO.md)!\n- [2023/06/26] [CVPR 2023 Tutorial](https://vlp-tutorial.github.io/) on **Large Multimodal Models: Towards Building and Surpassing Multimodal GPT-4**!  Please check out [[Slides](https://datarelease.blob.core.windows.net/tutorial/vision_foundation_models_2023/slides/Chunyuan_cvpr2023_tutorial_lmm.pdf)] [[Notes](https://arxiv.org/abs/2306.14895)] [[YouTube](https://youtu.be/mkI7EPD1vp8)] [[Bilibli](https://www.bilibili.com/video/BV1Ng4y1T7v3/)].\n- [2023/06/11] We released the preview for the most requested feature: DeepSpeed and LoRA support!  Please see documentations [here](./docs/LoRA.md).\n- [2023/06/01] We released **LLaVA-Med: Large Language and Vision Assistant for Biomedicine**, a step towards building biomedical domain large language and vision models with GPT-4 level capabilities.  Checkout the [paper](https://arxiv.org/abs/2306.00890) and [page](https://github.com/microsoft/LLaVA-Med).\n- [2023/05/06] We are releasing [LLaVA-Lighting-MPT-7B-preview](https://huggingface.co/liuhaotian/LLaVA-Lightning-MPT-7B-preview), based on MPT-7B-Chat!  See [here](#LLaVA-MPT-7b) for more details.\n- [2023/05/02] 🔥 We are releasing LLaVA-Lighting!  Train a lite, multimodal GPT-4 with just $40 in 3 hours!  See [here](#train-llava-lightning) for more details.\n- [2023/04/27] Thanks to the community effort, LLaVA-13B with 4-bit quantization allows you to run on a GPU with as few as 12GB VRAM!  Try it out [here](https://github.com/oobabooga/text-generation-webui/tree/main/extensions/llava).\n- [2023/04/17] 🔥 We released **LLaVA: Large Language and Vision Assistant**. We propose visual instruction tuning, towards building large language and vision models with GPT-4 level capabilities.  Checkout the [paper](https://arxiv.org/abs/2304.08485) and [demo](https://llava.hliu.cc/).\n\n</details>\n\n<!-- <a href=\"https://llava.hliu.cc/\"><img src=\"assets/demo.gif\" width=\"70%\"></a> -->\n\n**Usage and License Notices**: This project utilizes certain datasets and checkpoints that are subject to their respective original licenses. Users must comply with all terms and conditions of these original licenses, including but not limited to the [OpenAI Terms of Use](https://openai.com/policies/terms-of-use) for the dataset and the specific licenses for base language models for checkpoints trained using the dataset (e.g. [Llama-1/2 community license](https://ai.meta.com/llama/license/) for LLaMA-2 and Vicuna-v1.5, [Tongyi Qianwen RESEARCH LICENSE AGREEMENT](https://huggingface.co/Qwen/Qwen1.5-0.5B-Chat/blob/main/LICENSE) and [Llama-3 Research License](https://llama.meta.com/llama3/license/)). This project does not impose any additional constraints beyond those stipulated in the original licenses. Furthermore, users are reminded to ensure that their use of the dataset and checkpoints is in compliance with all applicable laws and regulations.\n\n## Models & Scripts\n\n### Installation\n\n#### 1. **Clone this repository and navigate to the LLaVA folder:**\n```bash\ngit clone https://github.com/LLaVA-VL/LLaVA-NeXT\ncd LLaVA-NeXT\n```\n\n#### 2. **Install the inference package:**\n```bash\nconda create -n llava python=3.10 -y\nconda activate llava\npip install --upgrade pip  # Enable PEP 660 support.\npip install -e \".[train]\"\n```\n\n### Project Navigation\nPlease checkout the following page for more inference & evaluation details.\n\n#### - **LLaVA-OneVision: Easy Task Transfer**\n- [LLaVA-OneVision]([./docs/LLaVA-NeXT.md](https://github.com/LLaVA-VL/LLaVA-NeXT/blob/main/docs/LLaVA_OneVision.md)): for demo inference. The evaluation code is in [lmms-eval](https://github.com/EvolvingLMMs-Lab/lmms-eval).\n\n#### - **LLaVA-NeXT: Stronger LLMs Supercharge Multimodal Capabilities in the Wild**\n- [LLaVA-NeXT-Image](./docs/LLaVA-NeXT.md): for image demo inference and evaluation of stronger LMMs using [lmms-eval](https://github.com/EvolvingLMMs-Lab/lmms-eval).\n\n\n#### - LLaVA-NeXT: A Strong Zero-shot Video Understanding Model\n- [LLaVA-NeXT-Video](./docs/LLaVA-NeXT-Video.md): for video inference and evaluation scripts. We recommend to use [LMMs-video](https://lmms-lab.github.io/posts/lmms-eval-0.2/) for evaluation.\n\n#### - LLaVA-NeXT: Tackling Multi-image, Video, and 3D in Large Multimodal Models\n- [LLaVA-NeXT-Interleave](./docs/LLaVA-NeXT-Interleave.md): for multi-image demo and evaluation scripts.\n\n## SGLang for SpeedUp Inference and Deployment\n\nWe use [SGLang](https://github.com/sgl-project/sglang) to speed up inference and deployment of LLaVA-NeXT. You could make LLaVA-NeXT as a backend API service with SGLang.\n\n**Prepare Environment**:\n    Following the instruction in the [sglang](https://github.com/sgl-project/sglang?tab=readme-ov-file#install)\n\n### LLaVA-NeXT/OneVision\n\nCheckout the HTTP Post/Get and SRT usage at [sglang/examples/runtime/llava_onevision](https://github.com/sgl-project/sglang/tree/main/examples/runtime/llava_onevision)\n\n### LLaVA-NeXT (Video)\n\n**Launch and Run on (K) Nodes**:\n- Go to sglang project\n    ```\n    cd PATH_TO/sglang\n    ```\n- First node:\n    ```sh\n    bash examples/usage/llava_video/srt_example_llava_v.sh K 0 YOUR_VIDEO_PATH YOUR_MODEL_PATH FRAMES_PER_VIDEO\n    (e.g. bash examples/usage/llava_video/srt_example_llava_v.sh K 0 examples/usage/llava_video/videos/Q98Z4OTh8RwmDonc.mp4 lmms-lab/LLaVA-NeXT-Video-7B-DPO 16)\n    ```\n- Second node:\n    ```sh\n    bash examples/usage/llava_video/srt_example_llava_v.sh K 1 YOUR_VIDEO_PATH YOUR_MODEL_PATH FRAMES_PER_VIDEO\n    ```\n- The K node:\n    ```sh\n    bash examples/usage/llava_video/srt_example_llava_v.sh K K-1 YOUR_VIDEO_PATH YOUR_MODEL_PATH FRAMES_PER_VIDEO\n    ```\n\n\n## Citation\n\nIf you find it useful for your research and applications, please cite related papers/blogs using this BibTeX:\n```bibtex\n@article{li2024llava,\n  title={LLaVA-NeXT-Interleave: Tackling Multi-image, Video, and 3D in Large Multimodal Models},\n  author={Li, Feng and Zhang, Renrui and Zhang, Hao and Zhang, Yuanhan and Li, Bo and Li, Wei and Ma, Zejun and Li, Chunyuan},\n  journal={arXiv preprint arXiv:2407.07895},\n  year={2024}\n}\n\n@misc{li2024llavanext-ablations,\n\ttitle={LLaVA-NeXT: What Else Influences Visual Instruction Tuning Beyond Data?},\n\turl={https://llava-vl.github.io/blog/2024-05-25-llava-next-ablations/},\n\tauthor={Li, Bo and Zhang, Hao and Zhang, Kaichen and Guo, Dong and Zhang, Yuanhan and Zhang, Renrui and Li, Feng and Liu, Ziwei and Li, Chunyuan},\n\tmonth={May},\n\tyear={2024}\n}\n\n@misc{li2024llavanext-strong,\n    title={LLaVA-NeXT: Stronger LLMs Supercharge Multimodal Capabilities in the Wild},\n    url={https://llava-vl.github.io/blog/2024-05-10-llava-next-stronger-llms/},\n    author={Li, Bo and Zhang, Kaichen and Zhang, Hao and Guo, Dong and Zhang, Renrui and Li, Feng and Zhang, Yuanhan and Liu, Ziwei and Li, Chunyuan},\n    month={May},\n    year={2024}\n}\n\n@misc{zhang2024llavanext-video,\n  title={LLaVA-NeXT: A Strong Zero-shot Video Understanding Model},\n  url={https://llava-vl.github.io/blog/2024-04-30-llava-next-video/},\n  author={Zhang, Yuanhan and Li, Bo and Liu, haotian and Lee, Yong jae and Gui, Liangke and Fu, Di and Feng, Jiashi and Liu, Ziwei and Li, Chunyuan},\n  month={April},\n  year={2024}\n}\n\n@misc{liu2024llavanext,\n    title={LLaVA-NeXT: Improved reasoning, OCR, and world knowledge},\n    url={https://llava-vl.github.io/blog/2024-01-30-llava-next/},\n    author={Liu, Haotian and Li, Chunyuan and Li, Yuheng and Li, Bo and Zhang, Yuanhan and Shen, Sheng and Lee, Yong Jae},\n    month={January},\n    year={2024}\n}\n\n@misc{liu2023improvedllava,\n      title={Improved Baselines with Visual Instruction Tuning}, \n      author={Liu, Haotian and Li, Chunyuan and Li, Yuheng and Lee, Yong Jae},\n      publisher={arXiv:2310.03744},\n      year={2023},\n}\n\n@misc{liu2023llava,\n      title={Visual Instruction Tuning}, \n      author={Liu, Haotian and Li, Chunyuan and Wu, Qingyang and Lee, Yong Jae},\n      publisher={NeurIPS},\n      year={2023},\n}\n```\n\n## Acknowledgement\n\n- [Vicuna](https://github.com/lm-sys/FastChat): the codebase we built upon, and our base model Vicuna-13B that has the amazing language capabilities!\n- The LLaVA-NeXT project is currently maintained by the team along with our contributors (listed alphabetically by the first names): [Bo Li](https://brianboli.com/), [Dong Guo](https://www.linkedin.com/in/dongguoset/), [Feng Li](https://scholar.google.com/citations?hl=zh-CN&user=ybRe9GcAAAAJ&view_op=list_works&sortby=pubdate), [Hao Zhang](https://scholar.google.com/citations?user=B8hPxMQAAAAJ&hl=en), [Kaichen Zhang](https://www.linkedin.com/in/kaichen-zhang-014b17219/?originalSubdomain=sg), [Renrui Zhang](https://zrrskywalker.github.io/), [Yuanhan Zhang](https://zhangyuanhan-ai.github.io/), led by [Chunyuan Li](https://chunyuan.li/) and with the guidance and help from [Haotian Liu](https://hliu.cc/).\n- The `﻿lmms-eval` framework and its core contributors, including Peiyuan Zhang, Fanyi Pu, Joshua Adrian Cahyono, and Kairui Hu, for their support on the evaluation side.\n\n## Related Projects\n\n- [Instruction Tuning with GPT-4](https://github.com/Instruction-Tuning-with-GPT-4/GPT-4-LLM)\n- [LLaVA-Med: Training a Large Language-and-Vision Assistant for Biomedicine in One Day](https://github.com/microsoft/LLaVA-Med)\n- [Otter: In-Context Multi-Modal Instruction Tuning](https://github.com/Luodian/Otter)\n\nFor future project ideas, please check out:\n- [SEEM: Segment Everything Everywhere All at Once](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once)\n- [Grounded-Segment-Anything](https://github.com/IDEA-Research/Grounded-Segment-Anything) to detect, segment, and generate anything by marrying [Grounding DINO](https://github.com/IDEA-Research/GroundingDINO) and [Segment-Anything](https://github.com/facebookresearch/segment-anything).\n"
        },
        {
          "name": "cog.yaml",
          "type": "blob",
          "size": 0.9580078125,
          "content": "# Configuration for Cog ⚙️\n# Reference: https://github.com/replicate/cog/blob/main/docs/yaml.md\n\nbuild:\n  gpu: true\n\n  python_version: \"3.11\"\n\n  python_packages:\n    - \"torch==2.0.1\"\n    - \"accelerate==0.21.0\"\n    - \"bitsandbytes==0.41.0\"\n    - \"deepspeed==0.9.5\"\n    - \"einops-exts==0.0.4\"\n    - \"einops==0.6.1\"\n    - \"gradio==3.35.2\"\n    - \"gradio_client==0.2.9\"\n    - \"httpx==0.24.0\"\n    - \"markdown2==2.4.10\"\n    - \"numpy==1.26.0\"\n    - \"peft==0.4.0\"\n    - \"scikit-learn==1.2.2\"\n    - \"sentencepiece==0.1.99\"\n    - \"shortuuid==1.0.11\"\n    - \"timm==0.6.13\"\n    - \"tokenizers==0.13.3\"\n    - \"torch==2.0.1\"\n    - \"torchvision==0.15.2\"\n    - \"transformers==4.31.0\"\n    - \"wandb==0.15.12\"\n    - \"wavedrom==2.0.3.post3\"\n    - \"Pygments==2.16.1\"\n  run:\n    - curl -o /usr/local/bin/pget -L \"https://github.com/replicate/pget/releases/download/v0.0.3/pget\" && chmod +x /usr/local/bin/pget\n\n# predict.py defines how predictions are run on your model\npredict: \"predict.py:Predictor\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "llava",
          "type": "tree",
          "content": null
        },
        {
          "name": "playground",
          "type": "tree",
          "content": null
        },
        {
          "name": "predict.py",
          "type": "blob",
          "size": 5.9345703125,
          "content": "import torch\n\nfrom llava.constants import IMAGE_TOKEN_INDEX, DEFAULT_IMAGE_TOKEN\nfrom llava.conversation import conv_templates, SeparatorStyle\nfrom llava.model.builder import load_pretrained_model\nfrom llava.utils import disable_torch_init\nfrom llava.mm_utils import tokenizer_image_token, KeywordsStoppingCriteria\nfrom transformers.generation.streamers import TextIteratorStreamer\n\nfrom PIL import Image\n\nimport requests\nfrom io import BytesIO\n\nfrom cog import BasePredictor, Input, Path, ConcatenateIterator\nimport time\nimport subprocess\nfrom threading import Thread\n\nimport os\nos.environ[\"HUGGINGFACE_HUB_CACHE\"] = os.getcwd() + \"/weights\"\n\n# url for the weights mirror\nREPLICATE_WEIGHTS_URL = \"https://weights.replicate.delivery/default\"\n# files to download from the weights mirrors\nweights = [\n    {\n        \"dest\": \"liuhaotian/llava-v1.5-13b\",\n        # git commit hash from huggingface\n        \"src\": \"llava-v1.5-13b/006818fc465ebda4c003c0998674d9141d8d95f8\",\n        \"files\": [\n            \"config.json\",\n            \"generation_config.json\",\n            \"pytorch_model-00001-of-00003.bin\",\n            \"pytorch_model-00002-of-00003.bin\",\n            \"pytorch_model-00003-of-00003.bin\",\n            \"pytorch_model.bin.index.json\",\n            \"special_tokens_map.json\",\n            \"tokenizer.model\",\n            \"tokenizer_config.json\",\n        ],\n    },\n    {\n        \"dest\": \"openai/clip-vit-large-patch14-336\",\n        \"src\": \"clip-vit-large-patch14-336/ce19dc912ca5cd21c8a653c79e251e808ccabcd1\",\n        \"files\": [\"config.json\", \"preprocessor_config.json\", \"pytorch_model.bin\"],\n    },\n]\n\n\ndef download_json(url: str, dest: Path):\n    res = requests.get(url, allow_redirects=True)\n    if res.status_code == 200 and res.content:\n        with dest.open(\"wb\") as f:\n            f.write(res.content)\n    else:\n        print(f\"Failed to download {url}. Status code: {res.status_code}\")\n\ndef download_weights(baseurl: str, basedest: str, files: list[str]):\n    basedest = Path(basedest)\n    start = time.time()\n    print(\"downloading to: \", basedest)\n    basedest.mkdir(parents=True, exist_ok=True)\n    for f in files:\n        dest = basedest / f\n        url = os.path.join(REPLICATE_WEIGHTS_URL, baseurl, f)\n        if not dest.exists():\n            print(\"downloading url: \", url)\n            if dest.suffix == \".json\":\n                download_json(url, dest)\n            else:\n                subprocess.check_call([\"pget\", url, str(dest)], close_fds=False)\n    print(\"downloading took: \", time.time() - start)\n\nclass Predictor(BasePredictor):\n    def setup(self) -> None:\n        \"\"\"Load the model into memory to make running multiple predictions efficient\"\"\"\n        for weight in weights:\n            download_weights(weight[\"src\"], weight[\"dest\"], weight[\"files\"])\n        disable_torch_init()\n        self.tokenizer, self.model, self.image_processor, self.context_len = load_pretrained_model(\"liuhaotian/llava-v1.5-13b\", model_name=\"llava-v1.5-13b\", model_base=None, load_8bit=False, load_4bit=False)\n\n    def predict(\n        self,\n        image: Path = Input(description=\"Input image\"),\n        prompt: str = Input(description=\"Prompt to use for text generation\"),\n        top_p: float = Input(description=\"When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens\", ge=0.0, le=1.0, default=1.0),\n        temperature: float = Input(description=\"Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic\", default=0.2, ge=0.0),\n        max_tokens: int = Input(description=\"Maximum number of tokens to generate. A word is generally 2-3 tokens\", default=1024, ge=0),\n    ) -> ConcatenateIterator[str]:\n        \"\"\"Run a single prediction on the model\"\"\"\n\n        conv_mode = \"llava_v1\"\n        conv = conv_templates[conv_mode].copy()\n\n        image_data = load_image(str(image))\n        image_tensor = self.image_processor.preprocess(image_data, return_tensors=\"pt\")[\"pixel_values\"].half().cuda()\n\n        # loop start\n\n        # just one turn, always prepend image token\n        inp = DEFAULT_IMAGE_TOKEN + \"\\n\" + prompt\n        conv.append_message(conv.roles[0], inp)\n\n        conv.append_message(conv.roles[1], None)\n        prompt = conv.get_prompt()\n\n        input_ids = tokenizer_image_token(prompt, self.tokenizer, IMAGE_TOKEN_INDEX, return_tensors=\"pt\").unsqueeze(0).cuda()\n        stop_str = conv.sep if conv.sep_style != SeparatorStyle.TWO else conv.sep2\n        keywords = [stop_str]\n        stopping_criteria = KeywordsStoppingCriteria(keywords, self.tokenizer, input_ids)\n        streamer = TextIteratorStreamer(self.tokenizer, skip_prompt=True, timeout=20.0)\n\n        with torch.inference_mode():\n            thread = Thread(\n                target=self.model.generate,\n                kwargs=dict(inputs=input_ids, images=image_tensor, do_sample=True, temperature=temperature, top_p=top_p, max_new_tokens=max_tokens, streamer=streamer, use_cache=True, stopping_criteria=[stopping_criteria]),\n            )\n            thread.start()\n            # workaround: second-to-last token is always \" \"\n            # but we want to keep it if it's not the second-to-last token\n            prepend_space = False\n            for new_text in streamer:\n                if new_text == \" \":\n                    prepend_space = True\n                    continue\n                if new_text.endswith(stop_str):\n                    new_text = new_text[: -len(stop_str)].strip()\n                    prepend_space = False\n                elif prepend_space:\n                    new_text = \" \" + new_text\n                    prepend_space = False\n                if len(new_text):\n                    yield new_text\n            if prepend_space:\n                yield \" \"\n            thread.join()\n\n\ndef load_image(image_file):\n    if image_file.startswith(\"http\") or image_file.startswith(\"https\"):\n        response = requests.get(image_file)\n        image = Image.open(BytesIO(response.content)).convert(\"RGB\")\n    else:\n        image = Image.open(image_file).convert(\"RGB\")\n    return image\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.9912109375,
          "content": "[tool.black]\nline-length = 240\n\n[build-system]\nrequires = [\"setuptools>=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"llava\"\nversion = \"1.7.0.dev0\"\ndescription = \"LLaVA OneVision: The Next Generation of LLaVA with Better Image and Video Understanding Capabilities\"\nreadme = \"README.md\"\nrequires-python = \">=3.8\"\nclassifiers = [\n    \"Programming Language :: Python :: 3\",\n    \"License :: OSI Approved :: Apache Software License\",\n]\n\n[project.optional-dependencies]\nstandalone = [\n    \"shortuuid\",\n    \"httpx==0.24.0\",\n    \"einops\",\n    \"ftfy\",\n]\n\n\ntrain = [\n    \"llava[standalone]\",\n    \"numpy==1.26.1\",\n    \"open_clip_torch\",\n    \"fastapi\",\n    \"markdown2[all]\",\n    \"numpy\",\n    \"requests\",\n    \"sentencepiece\",\n    \"torch==2.1.2\",\n    \"torchvision==0.16.2\",\n    \"uvicorn\",\n    \"wandb\",\n    \"deepspeed==0.14.4\",\n    \"peft==0.4.0\",\n    \"accelerate>=0.29.1\",\n    \"tokenizers~=0.15.2\",\n    \"transformers@git+https://github.com/huggingface/transformers.git@1c39974a4c4036fd641bc1191cc32799f85715a4\",\n    \"bitsandbytes==0.41.0\",\n    \"scikit-learn==1.2.2\",\n    \"sentencepiece~=0.1.99\",\n    \"einops==0.6.1\",\n    \"einops-exts==0.0.4\",\n    \"gradio_client==0.2.9\",\n    \"urllib3<=2.0.0\",\n    \"datasets==2.16.1\",\n    \"pydantic==1.10.8\",\n    \"timm\",\n    \"hf_transfer\",\n    \"opencv-python\",\n    \"av\",\n    \"decord\",\n    \"tyro\",\n    \"scipy\",\n]\n\n[project.urls]\n\"Homepage\" = \"https://llava-vl.github.io\"\n\"Bug Tracker\" = \"https://github.com/haotian-liu/LLaVA/issues\"\n\n[tool.setuptools.packages.find]\ninclude = [\"llava*\", \"trl*\"]\nexclude = [\n    \"assets*\",\n    \"benchmark*\",\n    \"docs\",\n    \"dist*\",\n    \"playground*\",\n    \"scripts*\",\n    \"tests*\",\n    \"checkpoints*\",\n    \"project_checkpoints*\",\n    \"debug_checkpoints*\",\n    \"mlx_configs*\",\n    \"wandb*\",\n    \"notebooks*\",\n]\n\n[tool.wheel]\nexclude = [\n    \"assets*\",\n    \"benchmark*\",\n    \"docs\",\n    \"dist*\",\n    \"playground*\",\n    \"scripts*\",\n    \"tests*\",\n    \"checkpoints*\",\n    \"project_checkpoints*\",\n    \"debug_checkpoints*\",\n    \"mlx_configs*\",\n    \"wandb*\",\n    \"notebooks*\",\n]\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 5.884765625,
          "content": "Babel==2.14.0\nDataProperty==1.0.1\nDeprecated==1.2.14\nGitPython==3.1.43\nJinja2==3.1.3\nLevenshtein==0.25.1\nMarkupSafe==2.1.5\nPyJWT==2.8.0\nPyYAML==6.0.1\nPygments==2.17.2\nQtPy==2.4.1\nSend2Trash==1.8.3\nabsl-py==2.1.0\naccelerate==0.29.3\naiofiles==22.1.0\naiohttp==3.9.5\naiosignal==1.3.1\naiosqlite==0.20.0\naltair==5.3.0\nanyio==4.3.0\nappdirs==1.4.4\nargon2-cffi-bindings==21.2.0\nargon2-cffi==23.1.0\narrow==1.3.0\nasttokens==2.4.1\nasync-timeout==4.0.3\nattrs==23.1.0\nbeautifulsoup4==4.12.3\nbidict==0.23.1\nbitsandbytes==0.41.0\nblack==24.1.0\nbleach==6.1.0\nbyted-remote-ikernel==0.4.8\nbyted-torch-monitor==0.0.1\nbyted-wandb==0.13.72\nbytedance-context==0.7.1\nbytedance-metrics==0.5.1\nbytedance.modelhub==0.0.64\nbytedance.servicediscovery==0.1.2\nbytedbackgrounds==0.0.6\nbyteddatabus==1.0.6\nbyteddps==0.1.2\nbytedenv==0.6.2\nbytedlogger==0.15.1\nbytedmemfd==0.2\nbytedmetrics==0.10.2\nbytedpymongo==2.0.5\nbytedrh2==1.18.7a2\nbytedservicediscovery==0.17.4\nbytedtcc==1.4.2\nbytedtos==1.1.16\nbytedtrace==0.3.0\nbytedztijwthelper==0.0.22\nbytedztispiffe==0.0.11\ncertifi==2024.2.2\ncffi==1.16.0\ncfgv==3.4.0\nchardet==5.2.0\ncharset-normalizer==3.3.2\nclick==8.1.7\ncolorama==0.4.6\ncomm==0.2.2\ncontourpy==1.2.1\ncrcmod==1.7\ncryptography==38.0.4\ncycler==0.12.1\ndatasets==2.16.1\ndebugpy==1.8.1\ndecorator==5.1.1\ndecord==0.6.0\ndeepspeed==0.12.2\ndefusedxml==0.7.1\ndill==0.3.7\ndistlib==0.3.8\ndistro==1.9.0\ndnspython==2.6.1\ndocker-pycreds==0.4.0\ndocstring_parser==0.16\neinops-exts==0.0.4\neinops==0.6.1\nentrypoints==0.4\net-xmlfile==1.1.0\neval_type_backport==0.2.0\nevaluate==0.4.1\nexceptiongroup==1.2.1\nexecuting==2.0.1\nfastapi==0.110.2\nfastjsonschema==2.19.1\nffmpy==0.3.2\nfilelock==3.13.4\nflash-attn==2.5.7\nfonttools==4.51.0\nfqdn==1.5.1\nfrozenlist==1.4.1\nfsspec==2023.10.0\nftfy==6.2.0\ngitdb==4.0.11\ngradio==3.35.2\ngradio_client==0.2.9\ngrpcio==1.62.2\nh11==0.14.0\nhf_transfer==0.1.6\nhjson==3.1.0\nhttpcore==0.17.3\nhttpx==0.24.0\nhuggingface-hub==0.22.2\nidentify==2.5.36\nidna==3.7\nimportlib_metadata==7.1.0\nimportlib_resources==6.4.0\niniconfig==2.0.0\nipaddress==1.0.23\nipykernel==6.29.4\nipython-genutils==0.2.0\nipython==8.18.1\nipywidgets==8.1.2\nisoduration==20.11.0\njedi==0.19.1\njoblib==1.4.0\njson5==0.9.25\njsonlines==4.0.0\njsonpointer==2.4\njsonschema-specifications==2023.12.1\njsonschema==4.21.1\njupyter-client==7.0.0\njupyter-console==6.6.3\njupyter-events==0.10.0\njupyter-ydoc==0.2.5\njupyter==1.0.0\njupyter_core==5.7.2\njupyter_server==2.14.0\njupyter_server_fileid==0.9.2\njupyter_server_terminals==0.5.3\njupyter_server_ydoc==0.8.0\njupyterlab==3.6.4\njupyterlab_pygments==0.3.0\njupyterlab_server==2.27.1\njupyterlab_widgets==3.0.10\nkiwisolver==1.4.5\nlinkify-it-py==2.0.3\nllava==1.7.0.dev0\nllava==1.7.0.dev0\nlmms_eval==0.1.1\nlxml==5.2.1\nmarkdown-it-py==2.2.0\nmarkdown2==2.4.13\nmatplotlib-inline==0.1.7\nmatplotlib==3.8.4\nmbstrdecoder==1.1.3\nmdit-py-plugins==0.3.3\nmdurl==0.1.2\nmistune==3.0.2\nmpmath==1.3.0\nmsgpack==1.0.8\nmultidict==6.0.5\nmultiprocess==0.70.15\nmypy-extensions==1.0.0\nnbclassic==1.0.0\nnbclient==0.10.0\nnbconvert==7.16.3\nnbformat==5.10.4\nnest-asyncio==1.6.0\nnetworkx==3.2.1\nninja==1.11.1.1\nnltk==3.8.1\nnodeenv==1.8.0\nnotebook==6.5.6\nnotebook_shim==0.2.4\nnumexpr==2.10.0\nnumpy==1.26.4\nnvidia-cublas-cu12==12.1.3.1\nnvidia-cuda-cupti-cu12==12.1.105\nnvidia-cuda-nvrtc-cu12==12.1.105\nnvidia-cuda-runtime-cu12==12.1.105\nnvidia-cudnn-cu12==8.9.2.26\nnvidia-cufft-cu12==11.0.2.54\nnvidia-curand-cu12==10.3.2.106\nnvidia-cusolver-cu12==11.4.5.107\nnvidia-cusparse-cu12==12.1.0.106\nnvidia-nccl-cu12==2.18.1\nnvidia-nvjitlink-cu12==12.4.127\nnvidia-nvtx-cu12==12.1.105\nopen-clip-torch==2.24.0\nopenai==1.23.6\nopencv-python-headless==4.9.0.80\nopenpyxl==3.1.2\norjson==3.10.1\noverrides==7.7.0\npackaging==24.0\npandas==2.2.2\npandocfilters==1.5.1\nparso==0.8.4\npathlib2==2.3.7.post1\npathspec==0.12.1\npathtools==0.1.2\npathvalidate==3.2.0\npeft==0.4.0\npexpect==4.8.0\npillow==10.3.0\npip==23.3.1\npip==24.0\nplatformdirs==4.2.1\npluggy==1.5.0\nply==3.11\nportalocker==2.8.2\npre-commit==3.7.0\nprometheus_client==0.20.0\npromise==2.3\nprompt-toolkit==3.0.43\nprotobuf==3.20.3\npsutil==5.9.8\nptyprocess==0.7.0\npure-eval==0.2.2\npy-cpuinfo==9.0.0\npy-spy==0.3.14\npy==1.11.0\npyOpenSSL==22.1.0\npyarrow-hotfix==0.6\npyarrow==16.0.0\npybind11==2.12.0\npycocoevalcap==1.2\npycocotools==2.0.7\npycparser==2.22\npycryptodomex==3.20.0\npydantic==1.10.8\npydub==0.25.1\npynvml==11.5.0\npyparsing==3.1.2\npytablewriter==1.2.0\npytest==6.2.5\npython-consul==1.1.0\npython-dateutil==2.9.0.post0\npython-engineio==4.9.0\npython-etcd==0.4.5\npython-json-logger==2.0.7\npython-multipart==0.0.9\npython-socketio==5.11.2\npytz==2024.1\npyzmq==24.0.1\nqtconsole==5.5.1\nrapidfuzz==3.8.1\nreferencing==0.35.0\nregex==2024.4.16\nrequests==2.31.0\nresponses==0.18.0\nrfc3339-validator==0.1.4\nrfc3986-validator==0.1.1\nrich==13.7.1\nrouge-score==0.1.2\nrpds-py==0.18.0\nsacrebleu==2.4.2\nsafetensors==0.4.3\nschedule==1.2.1\nscikit-learn==1.2.2\nscipy==1.13.0\nsemantic-version==2.10.0\nsentencepiece==0.1.99\nsentry-sdk==2.0.0\nsetproctitle==1.3.3\nsetuptools==68.2.2\nshortuuid==1.0.13\nshtab==1.7.1\nsimple-websocket==1.0.0\nsix==1.16.0\nsmmap==5.0.1\nsniffio==1.3.1\nsoupsieve==2.5\nsqlitedict==2.1.0\nstack-data==0.6.3\nstarlette==0.37.2\nsvgwrite==1.4.3\nsympy==1.12\ntabledata==1.3.3\ntabulate==0.9.0\ntcolorpy==0.1.4\ntenacity==8.2.3\nterminado==0.18.1\nthreadpoolctl==3.4.0\nthriftpy2==0.4.20\ntiktoken==0.6.0\ntimm==0.9.16\ntinycss2==1.3.0\ntokenizers==0.15.2\ntoml==0.10.2\ntomli==2.0.1\ntoolz==0.12.1\ntorch==2.1.2\ntorchvision==0.16.2\ntornado==6.4\ntox==3.28.0\ntqdm-multiprocess==0.0.11\ntqdm==4.66.2\ntraitlets==5.14.3\ntransformers-stream-generator==0.0.5\ntransformers==4.40.0.dev0\ntriton==2.1.0\ntypepy==1.3.2\ntypes-python-dateutil==2.9.0.20240316\ntyping_extensions==4.11.0\ntyro==0.8.3\ntzdata==2024.1\nuc-micro-py==1.0.3\nuri-template==1.3.0\nurllib3==2.2.1\nuvicorn==0.29.0\nvirtualenv==20.26.0\nwandb==0.16.5\nwatchdog==4.0.0\nwavedrom==2.0.3.post3\nwcwidth==0.2.13\nwebcolors==1.13\nwebencodings==0.5.1\nwebsocket-client==1.8.0\nwebsockets==12.0\nwheel==0.41.2\nwidgetsnbextension==4.0.10\nwrapt==1.16.0\nwsproto==1.2.0\nxxhash==3.4.1\ny-py==0.6.2\nyarl==1.9.4\nypy-websocket==0.8.4\nzipp==3.18.1\nzstandard==0.22.0"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "trl",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}