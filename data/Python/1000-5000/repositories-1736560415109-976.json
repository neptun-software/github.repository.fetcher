{
  "metadata": {
    "timestamp": 1736560415109,
    "page": 976,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linkedin/qark",
      "stars": 3219,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2607421875,
          "content": "*.pyc\n*.png\n*.jpg\nlogs\nandroid-sdk*\nsettings.properties\n*.swp\nbuild\nrun\nsampleApps/goatdroid\nlib/plyj/lextab.py\ntest/.coverage\n.coverage\nparsetab.py\nsampleApps\nlextab.py\nqark/test/testData/*\n.idea\n.DS_Store\n*.iml\nlib/\n.cache/\ndist/\nqark.egg-info/\nvenv/\nqark_debug.log"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1328125,
          "content": "language: python\npython:\n  - \"2.7\"\n  - \"3.6\"\ninstall:\n  - pip install -r requirements-test.txt\nscript:\n  - travis_wait python -m pytest\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 2.0322265625,
          "content": " Copyright 2015 LinkedIn Corp.  All rights reserved.\r\n\r\n Copyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.  You may obtain a copy of the License at http://www.apache.org/         licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS,  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\r\n ==============================================================================\r\n Copyrights and Licenses for Third Party Software Distributed with QARK:\r\n ==============================================================================\r\n The QARK software also contains code written by third parties. Such software will\r\n have its own individual LICENSE.TXT file in the directory in which it appears, or\r\n at the top of the files in case the LICENSE.TXT is not present. This file will\r\n describe the copyrights, license, and restrictions which apply to that code.\r\n\r\n The following pieces of software have additional or alternate copyrights,\r\n licenses, and/or restrictions:\r\n\r\n Program                     Type\r\n -------                     ----\r\n six                         MIT\r\n pluginbase                  BSD\r\n requests[security]          Apache Software License (Apache 2.0)\r\n jinja2                      BSD\r\n enum34                      BSD\r\n javalang                    MIT\r\n click                       BSD\r\n apktool                     Apache Software License (Apache 2.0)     qark/qark/lib/apktool\r\n dex2jar                     Apache Software License (Apache 2.0)     qark/qark/lib/dex2jar-2.0\r\n procyon                     Apache Software License (Apache 2.0)     qark/qark/lib/decompilers/procyon-decompiler-1.0.jar\r\n cfr                         MIT                                      qark/qark/lib/decompilers/cfr_0_124.jar\r\n fernflower                  Apache Software License (Apache 2.0)     qark/qark/lib/decompilers/fernflower.jar"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.4716796875,
          "content": "Quick Android Review Kit\n========================\nThis tool is designed to look for several security related Android application vulnerabilities, either in source code or packaged APKs. The tool is also capable of creating \"Proof-of-Concept\" deployable APKs and/or ADB commands, capable of exploiting many of the vulnerabilities it finds. There is no need to root the test device, as this tool focuses on vulnerabilities that can be exploited under otherwise secure conditions.\n\n\nRequirements\n============\nTested on Python 2.7.13 and 3.6\nTested on OSX, Linux, and Windows\n\nUsage\n=====\nFor more options please see the ``--help`` command.\n\nAPK::\n\n  ~ qark --apk path/to/my.apk\n\nJava source code files::\n\n  ~ qark --java path/to/parent/java/folder\n  ~ qark --java path/to/specific/java/file.java\n\n\nResults\n=======\nA report is generated in JSON and can be built into other format types, to change the report type please use the ``--report-type`` flag.\n\nInstallation\n============\nWith pip (no security checks on requirements)::\n\n  ~ pip install --user qark  # --user is only needed if not using a virtualenv\n  ~ qark --help\n\n\nWith `requirements.txt` (security checks on requirements)::\n\n  ~ git clone https://github.com/linkedin/qark\n  ~ cd qark\n  ~ pip install -r requirements.txt\n  ~ pip install . --user  # --user is only needed if not using a virtualenv\n  ~ qark --help\n\n\nExploit APK\n===========\nQARK can generate a basic exploit APK for a few of the vulnerabilities that have been found.\n\nTo generate the exploit APK there are a few steps to follow. You need to have the Android SDK v21 and build-tools v21.1.2\n\n1. Install the android SDK, you can get it under the 'command line tools': https://developer.android.com/studio/#downloads\n2. Unzip the android SDK\n3. Go into the new directory and generate the licenses with `bin/sdkmanager --licenses`\n4. Make sure the generated licenses are in the android SDK directory.\n5. Install the SDK and the proper build-tools version: `bin/sdkmanager --install \"platforms;android-21\" \"sources;android-21\" \"build-tools;21.1.2\"`\n\nChecks\n======\nQARK is an easy to use tool capable of finding common security vulnerabilities in Android applications. Unlike commercial products, it is 100% free to use. QARK features educational information allowing security reviewers to locate precise, in-depth explanations of the vulnerabilities. QARK automates the use of multiple decompilers, leveraging their combined outputs, to produce superior results, when decompiling APKs. Finally, the major advantage QARK has over traditional tools, that just point you to possible vulnerabilities, is that it can produce ADB commands, or even fully functional APKs, that turn hypothetical vulnerabilities into working \"POC\" exploits.\n\nIncluded in the types of security vulnerabilities this tool attempts to find are:\n\n- Inadvertently exported components\n- Improperly protected exported components\n- Intents which are vulnerable to interception or eavesdropping\n- Improper x.509 certificate validation\n- Creation of world-readable or world-writeable files\n- Activities which may leak data\n- The use of Sticky Intents\n- Insecurely created Pending Intents\n- Sending of insecure Broadcast Intents\n- Private keys embedded in the source\n- Weak or improper cryptography use\n- Potentially exploitable WebView configurations\n- Exported Preference Activities\n- Tapjacking\n- Apps which enable backups\n- Apps which are debuggable\n- Apps supporting outdated API versions, with known vulnerabilities\n\n\nNotice\n======\nNote: QARK decompiles Android applications back to raw source code. Please do not use this tool if this may be considered illegal in your juristdiction. If you are unsure, seek legal counsel.\n\nIf you run into issues on OSX, especially relating to the outbound call to the Play Store, or the downloading of the SDK, it is\nlikely due to your Python/OpenSSL configuration and the fact that recent changes in OSX impacted Python installed via brew. Nuking your\nPython installation(s) and re-installing from source may fix your issues.\n\n\nLicense\n=======\nCopyright 2015 LinkedIn Corp.  All rights reserved.\n\nCopyright 2015 LinkedIn Corp. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. \nYou may obtain a copy of the License `here <http://www.apache.org/licenses/LICENSE-2.0/>`_.\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "qark",
          "type": "tree",
          "content": null
        },
        {
          "name": "report",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-test.txt",
          "type": "blob",
          "size": 6.5966796875,
          "content": "#\n# This file is autogenerated by pip-compile\n# To update, run:\n#\n#    pip-compile --generate-hashes --output-file requirements-test.txt requirements-test.txt\n#\nattrs==17.4.0 \\\n    --hash=sha256:1c7960ccfd6a005cd9f7ba884e6316b5e430a3f1a6c37c5f87d8b43f83b54ec9 \\\n    --hash=sha256:a17a9573a6f475c99b551c0e0a812707ddda1ec9653bed04c13841404ed6f450 \\\n    # via pytest\ncertifi==2018.1.18 \\\n    --hash=sha256:14131608ad2fd56836d33a71ee60fa1c82bc9d2c8d98b7bdbc631fe1b3cd1296 \\\n    --hash=sha256:edbc3f203427eef571f79a7692bb160a2b0f7ccaa31953e99bd17e307cf63f7d\nchardet==3.0.4 \\\n    --hash=sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae \\\n    --hash=sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\nclick==6.7 \\\n    --hash=sha256:29f99fc6125fbc931b758dc053b3114e55c77a6e4c6c3a2674a2dc986016381d \\\n    --hash=sha256:f15516df478d5a56180fbf80e68f206010e6d160fc39fa508b65e035fd75130b\nconfigparser==3.5.0 \\\n    --hash=sha256:5308b47021bc2340965c371f0f058cc6971a04502638d4244225c49d80db273a \\\n    # via flake8\ncoverage==4.5.1 \\\n    --hash=sha256:03481e81d558d30d230bc12999e3edffe392d244349a90f4ef9b88425fac74ba \\\n    --hash=sha256:0b136648de27201056c1869a6c0d4e23f464750fd9a9ba9750b8336a244429ed \\\n    --hash=sha256:198626739a79b09fa0a2f06e083ffd12eb55449b5f8bfdbeed1df4910b2ca640 \\\n    --hash=sha256:28b2191e7283f4f3568962e373b47ef7f0392993bb6660d079c62bd50fe9d162 \\\n    --hash=sha256:2eb564bbf7816a9d68dd3369a510be3327f1c618d2357fa6b1216994c2e3d508 \\\n    --hash=sha256:337ded681dd2ef9ca04ef5d93cfc87e52e09db2594c296b4a0a3662cb1b41249 \\\n    --hash=sha256:3a2184c6d797a125dca8367878d3b9a178b6fdd05fdc2d35d758c3006a1cd694 \\\n    --hash=sha256:3c79a6f7b95751cdebcd9037e4d06f8d5a9b60e4ed0cd231342aa8ad7124882a \\\n    --hash=sha256:3d72c20bd105022d29b14a7d628462ebdc61de2f303322c0212a054352f3b287 \\\n    --hash=sha256:3eb42bf89a6be7deb64116dd1cc4b08171734d721e7a7e57ad64cc4ef29ed2f1 \\\n    --hash=sha256:4635a184d0bbe537aa185a34193898eee409332a8ccb27eea36f262566585000 \\\n    --hash=sha256:56e448f051a201c5ebbaa86a5efd0ca90d327204d8b059ab25ad0f35fbfd79f1 \\\n    --hash=sha256:5a13ea7911ff5e1796b6d5e4fbbf6952381a611209b736d48e675c2756f3f74e \\\n    --hash=sha256:69bf008a06b76619d3c3f3b1983f5145c75a305a0fea513aca094cae5c40a8f5 \\\n    --hash=sha256:6bc583dc18d5979dc0f6cec26a8603129de0304d5ae1f17e57a12834e7235062 \\\n    --hash=sha256:701cd6093d63e6b8ad7009d8a92425428bc4d6e7ab8d75efbb665c806c1d79ba \\\n    --hash=sha256:7608a3dd5d73cb06c531b8925e0ef8d3de31fed2544a7de6c63960a1e73ea4bc \\\n    --hash=sha256:76ecd006d1d8f739430ec50cc872889af1f9c1b6b8f48e29941814b09b0fd3cc \\\n    --hash=sha256:7aa36d2b844a3e4a4b356708d79fd2c260281a7390d678a10b91ca595ddc9e99 \\\n    --hash=sha256:7d3f553904b0c5c016d1dad058a7554c7ac4c91a789fca496e7d8347ad040653 \\\n    --hash=sha256:7e1fe19bd6dce69d9fd159d8e4a80a8f52101380d5d3a4d374b6d3eae0e5de9c \\\n    --hash=sha256:8c3cb8c35ec4d9506979b4cf90ee9918bc2e49f84189d9bf5c36c0c1119c6558 \\\n    --hash=sha256:9d6dd10d49e01571bf6e147d3b505141ffc093a06756c60b053a859cb2128b1f \\\n    --hash=sha256:be6cfcd8053d13f5f5eeb284aa8a814220c3da1b0078fa859011c7fffd86dab9 \\\n    --hash=sha256:c1bb572fab8208c400adaf06a8133ac0712179a334c09224fb11393e920abcdd \\\n    --hash=sha256:de4418dadaa1c01d497e539210cb6baa015965526ff5afc078c57ca69160108d \\\n    --hash=sha256:e05cb4d9aad6233d67e0541caa7e511fa4047ed7750ec2510d466e806e0255d6 \\\n    --hash=sha256:f3f501f345f24383c0000395b26b726e46758b71393267aeae0bd36f8b3ade80 \\\n    # via pytest-cov\nenum34==1.1.6 ; python_version < \"3.4\" \\\n    --hash=sha256:2d81cbbe0e73112bdfe6ef8576f2238f2ba27dd0d55752a776c41d38b7da2850 \\\n    --hash=sha256:644837f692e5f550741432dd3f223bbb9852018674981b1664e5dc339387588a \\\n    --hash=sha256:6bd0f6ad48ec2aa117d3d141940d484deccda84d4fcd884f5c3d93c23ecd8c79 \\\n    --hash=sha256:8ad8c4783bf61ded74527bffb48ed9b54166685e4230386a9ed9b1279e2df5b1\nflake8==3.5.0 \\\n    --hash=sha256:7253265f7abd8b313e3892944044a365e3f4ac3fcdcfb4298f55ee9ddf188ba0 \\\n    --hash=sha256:c7841163e2b576d435799169b78703ad6ac1bbb0f199994fc05f700b2a90ea37\nfuncsigs==1.0.2 \\\n    --hash=sha256:330cc27ccbf7f1e992e69fef78261dc7c6569012cf397db8d3de0234e6c937ca \\\n    --hash=sha256:a7bb0f2cf3a3fd1ab2732cb49eba4252c2af4240442415b4abce3b87022a8f50 \\\n    # via pytest\nidna==2.6 \\\n    --hash=sha256:2c6a5de3089009e3da7c5dde64a141dbc8551d5b7f6cf4ed7c2568d0cc520a8f \\\n    --hash=sha256:8c7309c718f94b3a625cb648ace320157ad16ff131ae0af362c9f21b80ef6ec4\njavalang==0.11.0 \\\n    --hash=sha256:3fcab8c0d4a1c51512bc7de1f4aaf9de8fb582833746b572478da6c0ac318a0b\njinja2==2.10 \\\n    --hash=sha256:74c935a1b8bb9a3947c50a54766a969d4846290e1e788ea44c1392163723c3bd \\\n    --hash=sha256:f84be1bb0040caca4cea721fcbbbbd61f9be9464ca236387158b0feea01914a4\nmarkupsafe==1.0 \\\n    --hash=sha256:a6be69091dac236ea9c6bc7d012beab42010fa914c459791d627dad4910eb665\nmccabe==0.6.1 \\\n    --hash=sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42 \\\n    --hash=sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f \\\n    # via flake8\npluggy==0.6.0 \\\n    --hash=sha256:7f8ae7f5bdf75671a718d2daf0a64b7885f74510bcd98b1a0bb420eb9a9d0cff \\\n    # via pytest\npluginbase==0.5 \\\n    --hash=sha256:b4f830242a078a4f44c978a84f3365bba4d008fdd71a591c71447f4df35354dd\npy==1.5.3 \\\n    --hash=sha256:29c9fab495d7528e80ba1e343b958684f4ace687327e6f789a94bf3d1915f881 \\\n    --hash=sha256:983f77f3331356039fdd792e9220b7b8ee1aa6bd2b25f567a963ff1de5a64f6a \\\n    # via pytest\npycodestyle==2.3.1 \\\n    --hash=sha256:682256a5b318149ca0d2a9185d365d8864a768a28db66a84a2ea946bcc426766 \\\n    --hash=sha256:6c4245ade1edfad79c3446fadfc96b0de2759662dc29d07d80a6f27ad1ca6ba9 \\\n    # via flake8\npyflakes==1.6.0 \\\n    --hash=sha256:08bd6a50edf8cffa9fa09a463063c425ecaaf10d1eb0335a7e8b1401aef89e6f \\\n    --hash=sha256:8d616a382f243dbf19b54743f280b80198be0bca3a5396f1d2e1fca6223e8805 \\\n    # via flake8\npytest-cov==2.5.1 \\\n    --hash=sha256:03aa752cf11db41d281ea1d807d954c4eda35cfa1b21d6971966cc041bbf6e2d \\\n    --hash=sha256:890fe5565400902b0c78b5357004aab1c814115894f4f21370e2433256a3eeec\npytest==3.4.2 \\\n    --hash=sha256:062027955bccbc04d2fcd5d79690947e018ba31abe4c90b2c6721abec734261b \\\n    --hash=sha256:117bad36c1a787e1a8a659df35de53ba05f9f3398fb9e4ac17e80ad5903eb8c5\nrequests==2.18.4 \\\n    --hash=sha256:6a1b267aa90cac58ac3a765d067950e7dbbf75b1da07e895d1f594193a40a38b \\\n    --hash=sha256:9c443e7324ba5b85070c4a818ade28bfabedf16ea10206da1132edaa6dda237e\nsix==1.11.0 \\\n    --hash=sha256:70e8a77beed4562e7f14fe23a786b54f6296e34344c23bc42f07b15018ff98e9 \\\n    --hash=sha256:832dc0e10feb1aa2c68dcc57dbb658f1c7e65b9b61af69048abc87a2db00a0eb\nurllib3==1.22 \\\n    --hash=sha256:06330f386d6e4b195fbfc736b297f58c5a892e4440e54d294d7004e3a9bbea1b \\\n    --hash=sha256:cc44da8e1145637334317feebd728bd869a35285b93cbb4cca2577da7e62db4f\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 6.62109375,
          "content": "asn1crypto==0.24.0 \\\n    --hash=sha256:2f1adbb7546ed199e3c90ef23ec95c5cf3585bac7d11fb7eb562a3fe89c64e87 \\\n    --hash=sha256:9d5c20441baf0cb60a4ac34cc447c6c189024b6b4c6cd7877034f4965c464e49 \\\n    # via cryptography\ncertifi==2018.1.18 \\\n    --hash=sha256:14131608ad2fd56836d33a71ee60fa1c82bc9d2c8d98b7bdbc631fe1b3cd1296 \\\n    --hash=sha256:edbc3f203427eef571f79a7692bb160a2b0f7ccaa31953e99bd17e307cf63f7d \\\n    # via requests\ncffi==1.11.5 \\\n    --hash=sha256:151b7eefd035c56b2b2e1eb9963c90c6302dc15fbd8c1c0a83a163ff2c7d7743 \\\n    --hash=sha256:1553d1e99f035ace1c0544050622b7bc963374a00c467edafac50ad7bd276aef \\\n    --hash=sha256:1b0493c091a1898f1136e3f4f991a784437fac3673780ff9de3bcf46c80b6b50 \\\n    --hash=sha256:2ba8a45822b7aee805ab49abfe7eec16b90587f7f26df20c71dd89e45a97076f \\\n    --hash=sha256:3c85641778460581c42924384f5e68076d724ceac0f267d66c757f7535069c93 \\\n    --hash=sha256:3eb6434197633b7748cea30bf0ba9f66727cdce45117a712b29a443943733257 \\\n    --hash=sha256:4c91af6e967c2015729d3e69c2e51d92f9898c330d6a851bf8f121236f3defd3 \\\n    --hash=sha256:770f3782b31f50b68627e22f91cb182c48c47c02eb405fd689472aa7b7aa16dc \\\n    --hash=sha256:79f9b6f7c46ae1f8ded75f68cf8ad50e5729ed4d590c74840471fc2823457d04 \\\n    --hash=sha256:7a33145e04d44ce95bcd71e522b478d282ad0eafaf34fe1ec5bbd73e662f22b6 \\\n    --hash=sha256:857959354ae3a6fa3da6651b966d13b0a8bed6bbc87a0de7b38a549db1d2a359 \\\n    --hash=sha256:87f37fe5130574ff76c17cab61e7d2538a16f843bb7bca8ebbc4b12de3078596 \\\n    --hash=sha256:95d5251e4b5ca00061f9d9f3d6fe537247e145a8524ae9fd30a2f8fbce993b5b \\\n    --hash=sha256:9d1d3e63a4afdc29bd76ce6aa9d58c771cd1599fbba8cf5057e7860b203710dd \\\n    --hash=sha256:a36c5c154f9d42ec176e6e620cb0dd275744aa1d804786a71ac37dc3661a5e95 \\\n    --hash=sha256:ae5e35a2c189d397b91034642cb0eab0e346f776ec2eb44a49a459e6615d6e2e \\\n    --hash=sha256:b0f7d4a3df8f06cf49f9f121bead236e328074de6449866515cea4907bbc63d6 \\\n    --hash=sha256:b75110fb114fa366b29a027d0c9be3709579602ae111ff61674d28c93606acca \\\n    --hash=sha256:ba5e697569f84b13640c9e193170e89c13c6244c24400fc57e88724ef610cd31 \\\n    --hash=sha256:be2a9b390f77fd7676d80bc3cdc4f8edb940d8c198ed2d8c0be1319018c778e1 \\\n    --hash=sha256:d5d8555d9bfc3f02385c1c37e9f998e2011f0db4f90e250e5bc0c0a85a813085 \\\n    --hash=sha256:e55e22ac0a30023426564b1059b035973ec82186ddddbac867078435801c7801 \\\n    --hash=sha256:e90f17980e6ab0f3c2f3730e56d1fe9bcba1891eeea58966e89d352492cc74f4 \\\n    --hash=sha256:ecbb7b01409e9b782df5ded849c178a0aa7c906cf8c5a67368047daab282b184 \\\n    --hash=sha256:ed01918d545a38998bfa5902c7c00e0fee90e957ce036a4000a88e3fe2264917 \\\n    --hash=sha256:edabd457cd23a02965166026fd9bfd196f4324fe6032e866d0f3bd0301cd486f \\\n    --hash=sha256:fdf1c1dc5bafc32bc5d08b054f94d659422b05aba244d6be4ddc1c72d9aa70fb \\\n    # via cryptography\nchardet==3.0.4 \\\n    --hash=sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae \\\n    --hash=sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691 \\\n    # via requests\nclick==6.7 \\\n    --hash=sha256:29f99fc6125fbc931b758dc053b3114e55c77a6e4c6c3a2674a2dc986016381d \\\n    --hash=sha256:f15516df478d5a56180fbf80e68f206010e6d160fc39fa508b65e035fd75130b\ncryptography==2.2.1 \\\n    --hash=sha256:0f61273eccc681dc5a77dcd517cc2cb74078d1b00adb2b273d0a010153ae43c7 \\\n    --hash=sha256:27dd18e180608c512433c843ad2d62396399608a0f3603c4d805500caeeec3d6 \\\n    --hash=sha256:2893ee1d67dace6178732c9ea8c176fedf5b6a6463f72f1378b779cdba8a0ea5 \\\n    --hash=sha256:2c5265c622e02af289bdc5e96c0a572bffa2fc2ac3f86fac3bace632ab25888c \\\n    --hash=sha256:34a433c3783946106236c25a89e0c271a3bb1a8e8cd8f12782e8bf8bec4e351e \\\n    --hash=sha256:39532ae44154ce88eec25d2a361e9c285b2477e0a4b4fc61fb9d4bcb3804dec6 \\\n    --hash=sha256:469a72fda257b2179bb43e431b822d8087da53b40e68813bcfa54a16c3ebcdfe \\\n    --hash=sha256:54029ce210d3013dccced6478f4dfb25e7a409e13086f714be9c14489c64e2c7 \\\n    --hash=sha256:54776f1e2ffd957571b79738fb41d8df69a93edb6d148ca149494d73975e8cab \\\n    --hash=sha256:84642ad31dccf9969b2613fa532ff5e871e9ee592ab0244dc9f6724e56591b8b \\\n    --hash=sha256:8ce363eed7ccc70f53be6ea4200aa20bbff99c8cbfce21a904f98e76c2bf5887 \\\n    --hash=sha256:95b7822c8bf203bafb95527eaf8995d9dd4eef1b6899631f9293aa6926dab1d9 \\\n    --hash=sha256:9f2d66952fc55f13f9c62ea6ae6ff88c2f9c2c21533065e1f7bddf0cf33c4cb9 \\\n    --hash=sha256:c27ed8b01d5feeff8479384ed782bad1e5071563f47194703f0dc20c1b558503 \\\n    --hash=sha256:cf1069fda0c8e1d2bbef2cf0de0be797860c8a34d1df3a24f1180045fc06974f \\\n    --hash=sha256:dddad9d322a3f0867009ff9f25477b8f7c0bdbedf143704b384c9472f11cb2d3 \\\n    --hash=sha256:e42b290eb7804d82c6d614b55e3b726dee464099a0e6240175f8d7b682b9295d \\\n    # via pyopenssl, requests\nenum34==1.1.6 ; python_version < \"3.4\" \\\n    --hash=sha256:2d81cbbe0e73112bdfe6ef8576f2238f2ba27dd0d55752a776c41d38b7da2850 \\\n    --hash=sha256:644837f692e5f550741432dd3f223bbb9852018674981b1664e5dc339387588a \\\n    --hash=sha256:6bd0f6ad48ec2aa117d3d141940d484deccda84d4fcd884f5c3d93c23ecd8c79 \\\n    --hash=sha256:8ad8c4783bf61ded74527bffb48ed9b54166685e4230386a9ed9b1279e2df5b1\nidna==2.6 \\\n    --hash=sha256:2c6a5de3089009e3da7c5dde64a141dbc8551d5b7f6cf4ed7c2568d0cc520a8f \\\n    --hash=sha256:8c7309c718f94b3a625cb648ace320157ad16ff131ae0af362c9f21b80ef6ec4 \\\n    # via cryptography, requests\nipaddress==1.0.19 \\\n    --hash=sha256:200d8686011d470b5e4de207d803445deee427455cd0cb7c982b68cf82524f81 \\\n    # via cryptography\njavalang==0.11.0 \\\n    --hash=sha256:3fcab8c0d4a1c51512bc7de1f4aaf9de8fb582833746b572478da6c0ac318a0b\njinja2==2.10 \\\n    --hash=sha256:74c935a1b8bb9a3947c50a54766a969d4846290e1e788ea44c1392163723c3bd \\\n    --hash=sha256:f84be1bb0040caca4cea721fcbbbbd61f9be9464ca236387158b0feea01914a4\nmarkupsafe==1.0 \\\n    --hash=sha256:a6be69091dac236ea9c6bc7d012beab42010fa914c459791d627dad4910eb665 \\\n    # via jinja2\npluginbase==0.5 \\\n    --hash=sha256:b4f830242a078a4f44c978a84f3365bba4d008fdd71a591c71447f4df35354dd\npycparser==2.18 \\\n    --hash=sha256:99a8ca03e29851d96616ad0404b4aad7d9ee16f25c9f9708a11faf2810f7b226 \\\n    # via cffi\npyopenssl==17.5.0 \\\n    --hash=sha256:07a2de1a54de07448732a81e38a55df7da109b2f47f599f8bb35b0cbec69d4bd \\\n    --hash=sha256:2c10cfba46a52c0b0950118981d61e72c1e5b1aac451ca1bc77de1a679456773 \\\n    # via requests\nrequests[security]==2.18.4 \\\n    --hash=sha256:6a1b267aa90cac58ac3a765d067950e7dbbf75b1da07e895d1f594193a40a38b \\\n    --hash=sha256:9c443e7324ba5b85070c4a818ade28bfabedf16ea10206da1132edaa6dda237e\nsix==1.11.0 \\\n    --hash=sha256:70e8a77beed4562e7f14fe23a786b54f6296e34344c23bc42f07b15018ff98e9 \\\n    --hash=sha256:832dc0e10feb1aa2c68dcc57dbb658f1c7e65b9b61af69048abc87a2db00a0eb\nurllib3==1.22 \\\n    --hash=sha256:06330f386d6e4b195fbfc736b297f58c5a892e4440e54d294d7004e3a9bbea1b \\\n    --hash=sha256:cc44da8e1145637334317feebd728bd869a35285b93cbb4cca2577da7e62db4f \\\n    # via requests\n"
        },
        {
          "name": "requirements_to_freeze.txt",
          "type": "blob",
          "size": 0.083984375,
          "content": "requests[security]\npluginbase\njinja2\nenum34; python_version < '3.4'\njavalang\nclick\nsix"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.1494140625,
          "content": "[flake8]\nignore = E121,E123,E226,E266\nmax-line-length = 160\n\n[tool:pytest]\naddopts = -m \"not long\" --cov=qark --cov-report term-missing -x --durations 0\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.087890625,
          "content": "from setuptools import setup, find_packages\nimport os\nimport io\n\nQARK_DIR = \"qark\"\nLIB_DIR = os.path.join(QARK_DIR, \"lib\")\n\n\nexploit_apk_files = [os.path.join(dir_path, filename).replace(os.path.join(QARK_DIR, \"\"), \"\")\n                     for dir_path, _, files in os.walk(os.path.join(QARK_DIR, \"exploit_apk\"))\n                     for filename in files]\n\n\nwith io.open('README.rst', 'rt', encoding='utf8') as f:\n    long_description = f.read()\n\nsetup(\n    name=\"qark\",\n    version=\"4.0.0\",\n    packages=find_packages(exclude=[\"tests*\"]),\n    package_dir={QARK_DIR: QARK_DIR},\n    package_data={\n        QARK_DIR: [\n            os.path.join(\"lib\", \"decompilers\", \"*.jar\"),  # include any decompiler jar files\n            os.path.join(\"lib\", \"apktool\", \"*.jar\"),  # include apktool\n            os.path.join(\"lib\", \"dex2jar-2.0\", \"*\"),  # include dex2jar\n            os.path.join(\"lib\", \"dex2jar-2.0\", \"lib\", \"*\"),  # include dex2jar\n            os.path.join(\"templates\", \"*.jinja\"),  # include the reporting template files\n        ] + exploit_apk_files,  # include all the java files required for creating an exploit APK\n    },\n    install_requires=[\n        \"requests[security]\",\n        \"pluginbase\",\n        \"jinja2\",\n        \"enum34; python_version < '3.4'\",\n        \"javalang\",\n        \"click\",\n        \"six\",\n    ],\n    # metadata for upload to PyPI\n    author=\"Tushar Dalvi & Tony Trummer\",\n    author_email=\"tushardalvi@gmail.com, tonytrummer@hotmail.com\",\n    description=\"Android static code analyzer\",\n    long_description=long_description,\n    license=\"Apache 2.0\",\n    keywords=\"android security qark exploit\",\n    url=\"https://www.github.com/linkedin/qark\",\n    entry_points=\"\"\"\n        [console_scripts]\n        qark=qark.qark:cli\"\"\",\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Environment :: Console\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Operating System :: MacOS\",\n        \"Operating System :: Microsoft :: Windows\",\n        \"Operating System :: Unix\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Programming Language :: Python :: 3.6\",\n    ]\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}