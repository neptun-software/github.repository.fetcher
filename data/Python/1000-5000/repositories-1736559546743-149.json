{
  "metadata": {
    "timestamp": 1736559546743,
    "page": 149,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pywebio/PyWebIO",
      "stars": 4619,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".drone.yml",
          "type": "blob",
          "size": 0.6123046875,
          "content": "kind: pipeline\ntype: exec\nname: default\n\ntrigger:\n  branch:\n  - dev-release\n  event:\n  - push\n\nsteps:\n  - name: deploy demos\n    commands:\n      - |  # https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#pipe-dockerfile-through-stdin\n        docker build -t pywebio -f- . <<EOF\n        FROM python:3\n        WORKDIR /usr/src/app\n        ADD ./ .\n        RUN pip3 install . && pip3 install --no-cache-dir -r requirements.txt\n        EXPOSE 8080\n        CMD python3 demos/__main__.py\n        EOF\n      - docker rm -f pywebio-demos || true\n      - docker run --restart=always --name=pywebio-demos -d pywebio\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2705078125,
          "content": "# https://github.com/github/linguist#overrides\n\npywebio/html/js/* linguist-vendored\npywebio/html/css/* linguist-vendored\npywebio/html/codemirror/* linguist-vendored\n\npywebio/html/css/app.css -linguist-vendored\n\ndocs/* linguist-documentation\n\nwebiojs/package* linguist-generated"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1396484375,
          "content": "__pycache__/\n*.py[cod]\n*$py.class\n*.db\n*.sqlite3\n\n.idea/\n\npywebio/html/js/pywebio.min.*\n/no_git\n/build\n/dist\n/*.egg-info\n/docs/_build\n/archive\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.6875,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-lts-latest\n  tools:\n    python: \"3.9\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Build documentation with MkDocs\n#mkdocs:\n#  configuration: mkdocs.yml\n\n# Optionally build your docs in additional formats such as PDF and ePub\nformats: \n - pdf\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  install:\n    - requirements: requirements.txt\n    - method: pip\n      path: .\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2020 WangWeimin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0830078125,
          "content": "recursive-include demos *.py\nprune docs\ngraft pywebio/html\ngraft pywebio/platform/tpl"
        },
        {
          "name": "README-zh.md",
          "type": "blob",
          "size": 6.0673828125,
          "content": "<h1 align=\"center\" name=\"pywebio-zh\">PyWebIO</h1>\n<p align=\"center\">\n    <em>Write interactive web app in script way.</em>\n</p>\n<p align=\"center\">\n    <a href=\"https://percy.io/pywebio/pywebio\">\n        <img src=\"https://percy.io/static/images/percy-badge.svg\" alt=\"Percy visual test\">\n    </a>\n    <a href=\"https://codecov.io/gh/pywebio/PyWebIO\">\n        <img src=\"https://codecov.io/gh/pywebio/PyWebIO/branch/dev/graph/badge.svg?token=YWH3WC828H\" alt=\"Code coverage\"/>\n    </a>\n    <a href=\"https://www.jsdelivr.com/package/gh/wang0618/PyWebIO-assets\">\n        <img src=\"https://data.jsdelivr.com/v1/package/gh/wang0618/PyWebIO-assets/badge?style=rounded\" alt=\"Jsdelivr hit count\"/>\n    </a>\n    <a href=\"https://pywebio.readthedocs.io/zh_CN/latest/?badge=latest\">\n        <img src=\"https://readthedocs.org/projects/pywebio/badge/?version=latest\" alt=\"Documentation Status\">\n    </a>\n    <a href=\"https://pypi.org/project/PyWebIO/\">\n        <img src=\"https://img.shields.io/pypi/v/pywebio?colorB=brightgreen\" alt=\"Package version\">\n    </a>\n    <a href=\"https://pypi.org/project/PyWebIO/\">\n        <img src=\"https://img.shields.io/badge/python->%3D%203.5.2-brightgreen\" alt=\"Python Version\">\n    </a>\n    <br/>\n    <a href=\"https://github.com/wang0618/PyWebIO/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/github/license/wang0618/PyWebIO.svg\" alt=\"License\">\n    </a>\n    <br/>\n    <a href=\"https://pywebio.readthedocs.io/zh_CN/latest/\">[Document]</a> | <a href=\"http://pywebio-demos.pywebio.online/\">[Demos]</a> | <a href=\"https://play.pywebio.online\">[Playground]</a> | <a href=\"https://github.com/wang0618/PyWebIO/wiki/%5B%E4%B8%AD%E6%96%87%5D-Why-PyWebIO%3F\">[Why PyWebIO?]</a>\n</p>\n\n[English](README.md) | [中文](README-zh.md)\n\nPyWebIO提供了一系列命令式的交互函数来在浏览器上获取用户输入和进行输出，将浏览器变成了一个“富文本终端”，可以用于构建简单的Web应用或基于浏览器的GUI应用。\nPyWebIO还可以方便地整合进现有的Web服务，让你不需要编写HTML和JS代码，就可以构建出具有良好可用性的应用。\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/wang0618/PyWebIO/dev/docs/assets/output_demo.gif\" alt=\"PyWebIO output demo\" width='609px'/>\n    <img src=\"https://raw.githubusercontent.com/wang0618/PyWebIO/dev/docs/assets/input_demo.gif\" alt=\"PyWebIO input demo\" width='609px'/>\n</p>\n\n\n功能特性：\n\n- 使用同步而不是基于回调的方式获取输入，代码编写逻辑更自然\n- 非声明式布局，布局方式简单高效\n- 代码侵入性小，旧脚本代码仅需修改输入输出逻辑便可改造为Web服务\n- 支持整合到现有的Web服务，目前支持与Flask、Django、Tornado、aiohttp、FastAPI框架集成\n- 同时支持基于线程的执行模型和基于协程的执行模型\n- 支持结合第三方库实现数据可视化\n\n## Installation\n\n稳定版安装:\n\n```bash\npip3 install -U pywebio\n```\n\n开发版安装:\n```bash\npip3 install -U https://github.com/pywebio/PyWebIO/archive/dev-release.zip\n```\n\n**系统要求**: PyWebIO要求 Python 版本在 3.5.2 及以上\n\n## Quickstart\n\n**Hello, world**\n\n这是一个使用PyWebIO计算 [BMI指数](https://en.wikipedia.org/wiki/Body_mass_index) 的脚本:\n\n```python\nfrom pywebio.input import input, FLOAT\nfrom pywebio.output import put_text\n\ndef bmi():\n    height = input(\"请输入你的身高(cm)：\", type=FLOAT)\n    weight = input(\"请输入你的体重(kg)：\", type=FLOAT)\n\n    BMI = weight / (height / 100) ** 2\n\n    top_status = [(14.9, '极瘦'), (18.4, '偏瘦'),\n                  (22.9, '正常'), (27.5, '过重'),\n                  (40.0, '肥胖'), (float('inf'), '非常肥胖')]\n\n    for top, status in top_status:\n        if BMI <= top:\n            put_text('你的 BMI 值: %.1f，身体状态：%s' % (BMI, status))\n            break\n\nif __name__ == '__main__':\n    bmi()\n```\n\n\n如果没有使用PyWebIO，这只是一个非常简单的脚本，而通过使用PyWebIO提供的输入输出函数，你可以在浏览器中与代码进行交互 [[demo]](http://pywebio-demos.pywebio.online/bmi)：\n\n<p align=\"center\">\n    <a href=\"http://pywebio-demos.pywebio.online/?pywebio_api=bmi\">\n        <img src=\"https://raw.githubusercontent.com/wang0618/PyWebIO/dev/docs/assets/demo_zh.gif\" alt=\"PyWebIO demo\" width=\"400px\"/>\n    </a>\n</p>\n\n**作为Web服务提供**\n\n上文BMI程序会在计算完毕后立刻退出，可以使用 [`pywebio.start_server()`](https://pywebio.readthedocs.io/zh_CN/latest/platform.html#pywebio.platform.tornado.start_server) 将 `bmi()` 函数作为Web服务提供：\n\n```python\nfrom pywebio import start_server\nfrom pywebio.input import input, FLOAT\nfrom pywebio.output import put_text\n\ndef bmi():  # bmi() 函数内容不变\n    ...  \n\nif __name__ == '__main__':\n    start_server(bmi, port=80)\n```\n\n**与现有Web框架整合**\n\nTornado应用整合：仅需在现有的Tornado应用中添加一个 `RequestHandler` ，就可以将PyWebIO应用整合进Tornado Web服务中\n\n```python\nimport tornado.ioloop\nimport tornado.web\nfrom pywebio.platform.tornado import webio_handler\n\nclass MainHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write(\"Hello, world\")\n\nif __name__ == \"__main__\":\n    application = tornado.web.Application([\n        (r\"/\", MainHandler),\n        (r\"/bmi\", webio_handler(bmi)),  # bmi 即为上文计算BMI指数的函数\n    ])\n    application.listen(port=80, address='localhost')\n    tornado.ioloop.IOLoop.current().start()\n```\n\n在 `http://localhost/bmi` 页面上就可以计算BMI了。\n\n与其他Web框架整合请见[文档](https://pywebio.readthedocs.io/zh_CN/latest/advanced.html#integration-with-web-framework)\n\n## Demos\n\n - [基本demo](http://pywebio-demos.pywebio.online/) : 包含PyWebIO基本输入输出演示和使用PyWebIO编写的小应用\n - [数据可视化demo](http://pywebio-charts.pywebio.online/) : 使用 bokeh、plotly、pyecharts 等库进行数据可视化\n\n## Links\n\n* 使用手册和实现文档见 [pywebio.readthedocs.io](https://pywebio.readthedocs.io/zh_CN/latest/)\n* [PyWebIO Playground](https://play.pywebio.online/): 在线编辑、运行和分享PyWebIO代码\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.1552734375,
          "content": "<h1 align=\"center\" name=\"pywebio-en\">PyWebIO</h1>\n<p align=\"center\">\n    <em>Write interactive web app in script way.</em>\n</p>\n<p align=\"center\">\n    <a href=\"https://percy.io/pywebio/pywebio\">\n        <img src=\"https://percy.io/static/images/percy-badge.svg\" alt=\"Percy visual test\">\n    </a>\n    <a href=\"https://codecov.io/gh/pywebio/PyWebIO\">\n        <img src=\"https://codecov.io/gh/pywebio/PyWebIO/branch/dev/graph/badge.svg?token=YWH3WC828H\" alt=\"Code coverage\"/>\n    </a>\n    <a href=\"https://www.jsdelivr.com/package/gh/wang0618/PyWebIO-assets\">\n        <img src=\"https://data.jsdelivr.com/v1/package/gh/wang0618/PyWebIO-assets/badge?style=rounded\" alt=\"Jsdelivr hit count\"/>\n    </a>\n    <a href=\"https://pywebio.readthedocs.io/zh_CN/latest/?badge=latest\">\n        <img src=\"https://readthedocs.org/projects/pywebio/badge/?version=latest\" alt=\"Documentation Status\">\n    </a>\n    <a href=\"https://pypi.org/project/PyWebIO/\">\n        <img src=\"https://img.shields.io/pypi/v/pywebio?colorB=brightgreen\" alt=\"Package version\">\n    </a>\n    <a href=\"https://pypi.org/project/PyWebIO/\">\n        <img src=\"https://img.shields.io/badge/python->%3D%203.5.2-brightgreen\" alt=\"Python Version\">\n    </a>\n    <br/>\n    <a href=\"https://github.com/wang0618/PyWebIO/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/github/license/wang0618/PyWebIO.svg\" alt=\"License\">\n    </a>\n    <br/>\n    <a href=\"https://pywebio.readthedocs.io\">[Document]</a> | <a href=\"http://pywebio-demos.pywebio.online/\">[Demos]</a> | <a href=\"https://play.pywebio.online\">[Playground]</a> | <a href=\"https://github.com/wang0618/PyWebIO/wiki/Why-PyWebIO%3F\">[Why PyWebIO?]</a>\n</p>\n\n[English](README.md) | [中文](README-zh.md)\n\nPyWebIO provides a series of imperative functions to obtain user input and output on the browser, turning the browser into a \"rich text terminal\", and can be used to build simple web applications or browser-based GUI applications without the need to have knowledge of HTML and JS. PyWebIO can also be easily integrated into existing Web services. PyWebIO is very suitable for quickly building applications that do not require complex UI.\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/wang0618/PyWebIO/dev/docs/assets/output_demo.gif\" alt=\"PyWebIO output demo\" width='609px'/>\n    <img src=\"https://raw.githubusercontent.com/wang0618/PyWebIO/dev/docs/assets/input_demo.gif\" alt=\"PyWebIO input demo\" width='609px'/>\n</p>\n\n\nFeatures：\n\n- Use synchronization instead of a callback-based method to get input\n- Non-declarative layout, simple and efficient\n- Less intrusive: old script code can be transformed into a Web application only by modifying the input and output operation\n- Support integration into existing web services, currently supports Flask, Django, Tornado, aiohttp, FastAPI framework\n- Support for ``asyncio`` and coroutine\n- Support data visualization with third-party libraries, e.g., `plotly`, `bokeh`, `pyecharts`.\n\n## Installation\n\nStable version:\n\n```bash\npip3 install -U pywebio\n```\n\nDevelopment version:\n```bash\npip3 install -U https://github.com/pywebio/PyWebIO/archive/dev-release.zip\n```\n\n**Prerequisites**: PyWebIO requires Python 3.5.2 or newer\n\n## Quickstart\n\n**Hello, world**\n\nHere is a simple PyWebIO script to calculate the [BMI](https://en.wikipedia.org/wiki/Body_mass_index):\n\n```python\nfrom pywebio.input import input, FLOAT\nfrom pywebio.output import put_text\n\ndef bmi():\n    height = input(\"Your Height(cm)：\", type=FLOAT)\n    weight = input(\"Your Weight(kg)：\", type=FLOAT)\n\n    BMI = weight / (height / 100) ** 2\n\n    top_status = [(14.9, 'Severely underweight'), (18.4, 'Underweight'),\n                  (22.9, 'Normal'), (27.5, 'Overweight'),\n                  (40.0, 'Moderately obese'), (float('inf'), 'Severely obese')]\n\n    for top, status in top_status:\n        if BMI <= top:\n            put_text('Your BMI: %.1f, category: %s' % (BMI, status))\n            break\n\nif __name__ == '__main__':\n    bmi()\n```\n\nThis is just a very simple script if you ignore PyWebIO, but using the input and output functions provided by PyWebIO, you can interact with the code in the browser [[demo]](http://pywebio-demos.pywebio.online/bmi):\n\n<p align=\"center\">\n    <a href=\"http://pywebio-demos.pywebio.online/?pywebio_api=bmi\">\n        <img src=\"https://raw.githubusercontent.com/wang0618/PyWebIO/dev/docs/assets/demo.gif\" alt=\"PyWebIO demo\" width=\"400px\"/>\n    </a>\n</p>\n\n**Serve as web service**\n\nThe above BMI program will exit immediately after the calculation, you can use [`pywebio.start_server()`](https://pywebio.readthedocs.io/en/latest/platform.html#pywebio.platform.tornado.start_server) to publish the `bmi()` function as a web application:\n\n```python\nfrom pywebio import start_server\nfrom pywebio.input import input, FLOAT\nfrom pywebio.output import put_text\n\ndef bmi(): # bmi() keep the same\n    ...  \n\nif __name__ == '__main__':\n    start_server(bmi, port=80)\n```\n\n**Integration with web framework**\n\nTo integrate a PyWebIO application into Tornado, all you need is to add a `RequestHandler` to the existing Tornado application:\n\n```python\nimport tornado.ioloop\nimport tornado.web\nfrom pywebio.platform.tornado import webio_handler\n\nclass MainHandler(tornado.web.RequestHandler):\n    def get(self):\n        self.write(\"Hello, world\")\n\nif __name__ == \"__main__\":\n    application = tornado.web.Application([\n        (r\"/\", MainHandler),\n        (r\"/bmi\", webio_handler(bmi)),  # bmi is the same function as above\n    ])\n    application.listen(port=80, address='localhost')\n    tornado.ioloop.IOLoop.current().start()\n```\n\nNow, you can open `http://localhost/bmi` for BMI calculation.\n\nFor integration with other web frameworks, please refer to [document](https://pywebio.readthedocs.io/en/latest/advanced.html#integration-with-web-framework).\n\n## Demos\n\n - [Basic demo](http://pywebio-demos.pywebio.online/) : PyWebIO basic input and output demos and some small applications written using PyWebIO.\n - [Data visualization demo](http://pywebio-charts.pywebio.online/) : Data visualization with the third-party libraries, e.g., `plotly`, `bokeh`, `pyecharts`.\n\n## Links\n\n* Document [pywebio.readthedocs.io](https://pywebio.readthedocs.io)\n* [PyWebIO Playground](https://play.pywebio.online/): Edit, Run, Share PyWebIO Code Online"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lgtm.yml",
          "type": "blob",
          "size": 0.66796875,
          "content": "##########################################################################################\n# Use the `path_classifiers` block to define changes to the default classification of    #\n# files.                                                                                 #\n##########################################################################################\n\npath_classifiers:\n  test:\n    - exclude: /\n    - test\n    - exclude: test/util.py\n\n  library:\n    - pywebio/html\n    - exclude: pywebio/html/css/app.css\n    - exclude: pywebio/html/index.html\n\nqueries:\n  # Specifically hide the results of two queries.\n  - exclude: py/call-to-non-callable\n  - exclude: py/path-injection"
        },
        {
          "name": "pywebio",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.4501953125,
          "content": "tornado>=5.0\nuser-agents\n\n# extra support\nflask\ndjango\naiohttp\nstarlette\nuvicorn[standard]\naiofiles\nbokeh\npandas\ncutecharts\npyecharts\nplotly\nPillow\n\n# test requirements\nselenium\npercy-selenium\ncoverage\n\n# doc building requirements\nJinja2\nsphinx\nsphinx-tabs\nsphinx-rtd-theme\nsphinx-toolbox\nsphinx-intl\n# pywebio_battery in master branch\nhttps://github.com/pywebio/pywebio-battery/archive/refs/heads/master.zip\n\n# demo running requirements\nnumpy\nmatplotlib\nopenai"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.27734375,
          "content": "import os\nfrom functools import reduce\n\nfrom setuptools import setup, find_packages\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\nabout = {}\nwith open(os.path.join(here, 'pywebio', '__version__.py'), encoding='utf8') as f:\n    exec(f.read(), about)\n\nwith open('README.md', encoding='utf8') as f:\n    readme = f.read()\n\nextras_require = {\n    'flask': ['flask>=0.10'],\n    'django': ['django>=2.2'],\n    'aiohttp': ['aiohttp>=3.1'],\n    'bokeh': ['bokeh'],\n    'doc': ['sphinx', 'sphinx-tabs'],\n}\n# 可以使用 pip install pywebio[all] 安装所有额外依赖\nextras_require['all'] = reduce(lambda x, y: x + y, extras_require.values())\n\nsetup(\n    name=about['__package__'],\n    version=about['__version__'],\n    description=about['__description__'],\n    long_description=readme,\n    long_description_content_type='text/markdown',\n    author=about['__author__'],\n    author_email=about['__author_email__'],\n    url=about['__url__'],\n    license=about['__license__'],\n    python_requires=\">=3.5.2\",\n    packages=[p for p in find_packages() if p.startswith('pywebio')],\n    scripts=['tools/pywebio-path-deploy'],\n    package_data={\n        # data files need to be listed both here (which determines what gets\n        # installed) and in MANIFEST.in (which determines what gets included\n        # in the sdist tarball)\n        \"pywebio\": [\n            \"html/codemirror/*\",\n            \"html/image/*\",\n            \"html/js/*\",\n            \"html/css/*\",\n            \"html/css/bs-theme/*\",\n            \"platform/tpl/index.html\"\n        ],\n    },\n    entry_points={\n        # pyinstaller hook\n        # https://pyinstaller.org/en/stable/hooks.html#providing-pyinstaller-hooks-with-your-package\n        'pyinstaller40': [\n            'hook-dirs = pywebio.platform.pyinstaller:get_hook_dirs',\n        ]\n    },\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n    ],\n    install_requires=[\n        'tornado>=5.0',\n        'user-agents',\n    ],\n    extras_require=extras_require,\n    project_urls={\n        'Documentation': 'https://pywebio.readthedocs.io',\n        'Source': 'https://github.com/wang0618/PyWebIO',\n    },\n)\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "webiojs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}