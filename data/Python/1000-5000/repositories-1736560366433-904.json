{
  "metadata": {
    "timestamp": 1736560366433,
    "page": 904,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PaddlePaddle/PARL",
      "stars": 3304,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".copyright.hook",
          "type": "blob",
          "size": 3.404296875,
          "content": "from __future__ import absolute_import\nfrom __future__ import print_function\n\nimport argparse\nimport io, re\nimport sys, os\nimport subprocess\nimport platform\n\nCOPYRIGHT = '''\n  Copyright (c) 2016 PaddlePaddle Authors. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'''\n\nLANG_COMMENT_MARK = None\n\nNEW_LINE_MARK = None\n\nCOPYRIGHT_HEADER = None\n\nif platform.system() == \"Windows\":\n    NEW_LINE_MARK = \"\\r\\n\"\nelse:\n    NEW_LINE_MARK = '\\n'\n    COPYRIGHT_HEADER = COPYRIGHT.split(NEW_LINE_MARK)[1]\n    p = re.search('(\\d{4})', COPYRIGHT_HEADER).group(0)\n    process = subprocess.Popen([\"date\", \"+%Y\"], stdout=subprocess.PIPE)\n    date, err = process.communicate()\n    date = date.decode(\"utf-8\").rstrip(\"\\n\")\n    COPYRIGHT_HEADER = COPYRIGHT_HEADER.replace(p, date)\n\n\ndef generate_copyright(template, lang='C'):\n    if lang == 'Python':\n        LANG_COMMENT_MARK = '#'\n    else:\n        LANG_COMMENT_MARK = \"//\"\n\n    lines = template.split(NEW_LINE_MARK)\n    BLANK = \" \"\n    ans = LANG_COMMENT_MARK + BLANK + COPYRIGHT_HEADER + NEW_LINE_MARK\n    for lino, line in enumerate(lines):\n        if lino == 0 or lino == 1 or lino == len(lines) - 1: continue\n        if len(line)  == 0:\n            BLANK = \"\"\n        else:\n            BLANK = \" \"\n        ans += LANG_COMMENT_MARK + BLANK + line + NEW_LINE_MARK\n\n    return ans + \"\\n\"\n\n\ndef lang_type(filename):\n    if filename.endswith(\".py\"):\n        return \"Python\"\n    elif filename.endswith(\".h\"):\n        return \"C\"\n    elif filename.endswith(\".c\"):\n        return \"C\"\n    elif filename.endswith(\".hpp\"):\n        return \"C\"\n    elif filename.endswith(\".cc\"):\n        return \"C\"\n    elif filename.endswith(\".cpp\"):\n        return \"C\"\n    elif filename.endswith(\".cu\"):\n        return \"C\"\n    elif filename.endswith(\".cuh\"):\n        return \"C\"\n    elif filename.endswith(\".go\"):\n        return \"C\"\n    elif filename.endswith(\".proto\"):\n        return \"C\"\n    else:\n        print(\"Unsupported filetype %s\", filename)\n        exit(0)\n\n\nPYTHON_ENCODE = re.compile(\"^[ \\t\\v]*#.*?coding[:=][ \\t]*([-_.a-zA-Z0-9]+)\")\n\n\ndef main(argv=None):\n    parser = argparse.ArgumentParser(\n        description='Checker for copyright declaration.')\n    parser.add_argument('filenames', nargs='*', help='Filenames to check')\n    args = parser.parse_args(argv)\n\n    retv = 0\n    for filename in args.filenames:\n        fd = io.open(filename, encoding=\"utf-8\")\n        first_line = fd.readline()\n        second_line = fd.readline()\n        if \"COPYRIGHT (C)\" in first_line.upper(): continue\n        if \"THIRD PARTY\" in first_line.upper(): continue\n        original_contents = io.open(filename, encoding=\"utf-8\").read()\n        new_contents = generate_copyright(\n            COPYRIGHT, lang_type(filename)) + original_contents\n        print('Auto Insert Copyright Header {}'.format(filename))\n        retv = 1\n        with io.open(filename, 'w') as output_file:\n            output_file.write(new_contents)\n\n    return retv\n\n\nif __name__ == '__main__':\n    exit(main())\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.154296875,
          "content": "# tilde\n*~\n\n# VIM swap file\n.*.swp\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.9814453125,
          "content": "repos:\n-   repo: https://github.com/Lucas-C/pre-commit-hooks.git\n    sha: v1.0.1\n    hooks:\n    -   id: remove-crlf\n        files: (?!.*third_party)^.*$ | (?!.*book)^.*$\n-   repo: https://github.com/pre-commit/mirrors-yapf.git\n    sha: v0.24.0\n    hooks:\n    -   id: yapf\n        language_version: python3.7\n        args: ['--style={column_limit:120}' ]\n        files: (.*\\.(py|bzl)|BUILD|.*\\.BUILD|WORKSPACE)$\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    sha: 5bf6c09bfa1297d3692cadd621ef95f1284e33c0\n    hooks:\n    -   id: check-added-large-files\n    -   id: check-merge-conflict\n    -   id: check-symlinks\n    -   id: detect-private-key\n        files: (?!.*third_party)^.*$ | (?!.*book)^.*$\n    -   id: end-of-file-fixer\n-   repo: local\n    hooks:\n    -   id: copyright_checker\n        name: copyright_checker\n        entry: python ./.copyright.hook\n        language: system\n        files: \\.(c|cc|cxx|cpp|cu|h|hpp|hxx|proto|py)$\n        exclude: (?!.*third_party)^.*$ | (?!.*book)^.*$\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.1767578125,
          "content": "version: 2\nformats: []\nsphinx:\n  configuration: docs/conf.py\npython:\n   version: 3.8\n   install:\n     - requirements: docs/requirements.txt\n     - method: setuptools\n       path: .\n"
        },
        {
          "name": ".teamcity",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.234375,
          "content": "#   Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\ncmake_minimum_required(VERSION 3.20)\nproject(PARLCMAKE)\n\nenable_testing()\n\noption(WITH_TESTING \"Include unit testing\" ON)\noption(IS_TESTING_SERIALLY \"testing scripts that cannot run in parallel\" OFF)\noption(IS_TESTING_IMPORT \"testing import parl\" OFF)\noption(IS_TESTING_DOCS \"testing compling the docs\" OFF)\noption(IS_TESTING_TORCH \"testing torch parts\" OFF)\noption(IS_TESTING_FLUID \"testing fluid parts\" OFF)\noption(IS_TESTING_REMOTE \"testing remote module\" OFF)\noption(IS_TESTING_REMOTE_WITH_GPU \"testing remote module with GPU\" OFF)\n\nset(PADDLE_PYTHON_PATH \"\" CACHE STRING \"Python path to PaddlePaddle Fluid\")\n\nfunction(py_test TARGET_NAME)\n    set(options \"\")\n    set(oneValueArgs \"\")\n    set(multiValueArgs SRCS DEPS ARGS ENVS)\n    cmake_parse_arguments(py_test \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN})\n    if (${FILE_NAME} MATCHES \".*abs_test.py\")\n        add_test(NAME ${TARGET_NAME}\"_with_abs_path\"\n            COMMAND python -u ${py_test_SRCS} ${py_test_ARGS}\n            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n        set_tests_properties(${TARGET_NAME}\"_with_abs_path\" PROPERTIES TIMEOUT 500)\n    else()\n        get_filename_component(WORKING_DIR ${py_test_SRCS} DIRECTORY)\n        get_filename_component(FILE_NAME ${py_test_SRCS} NAME)\n        get_filename_component(COMBINED_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${WORKING_DIR} ABSOLUTE)\n        add_test(NAME ${TARGET_NAME}\n            COMMAND python -u ${FILE_NAME} ${py_test_ARGS}\n            WORKING_DIRECTORY ${COMBINED_PATH})\n        set_tests_properties(${TARGET_NAME} PROPERTIES TIMEOUT 500)\n    endif()\nendfunction()\n\nfunction(import_test TARGET_NAME)\n    set(options \"\")\n    set(oneValueArgs \"\")\n    set(multiValueArgs SRCS DEPS ARGS ENVS)\n    cmake_parse_arguments(py_test \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN})\n\n    add_test(NAME ${TARGET_NAME}_with_empty_env\n        COMMAND python -u ${py_test_SRCS} ${py_test_ARGS}\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n\nendfunction()\n\nfunction(docs_test)\n    add_test(NAME compling_docs_test\n        COMMAND bash ./docs/test.sh\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\nendfunction()\n\nif (WITH_TESTING)\n    if (IS_TESTING_IMPORT)\n        set(src \"parl/tests/import_test\")\n        import_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n    elseif (IS_TESTING_DOCS)\n        docs_test()\n    elseif (IS_TESTING_SERIALLY)\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test_alone.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n        endforeach()\n    elseif (IS_TESTING_TORCH)\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test_torch.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n        endforeach()\n    elseif (IS_TESTING_FLUID)\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test_fluid.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n        endforeach()\n    elseif (IS_TESTING_REMOTE)\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            if (${src} MATCHES \".*remote.*\" AND (NOT (${src} MATCHES \".*gpu.*\")))\n                py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n            endif()\n        endforeach()\n    elseif (IS_TESTING_REMOTE_WITH_GPU)\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            if (${src} MATCHES \".*remote.*\" AND ((${src} MATCHES \".*gpu.*\")))\n                py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n            endif()\n        endforeach()\n    else ()\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            if (NOT ${src} MATCHES \".*remote.*\")\n                py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n            endif()\n        endforeach()\n        file(GLOB_RECURSE TEST_OPS RELATIVE \"${CMAKE_CURRENT_SOURCE_DIR}\" \"*_test_paddle.py\")\n        string(REPLACE \".py\" \"\" TEST_OPS \"${TEST_OPS}\")\n        foreach(src ${TEST_OPS})\n            py_test(${src} SRCS ${src}.py ENVS ${PADDLE_PYTHON_PATH})\n        endforeach()\n    endif()\nendif()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.208984375,
          "content": "include parl/remote/static/logo.png\ninclude parl/remote/static/favicon.ico\nrecursive-include parl/remote/templates *.html\nrecursive-include parl/remote/static/css *.css\nrecursive-include parl/remote/static/js *.js\n"
        },
        {
          "name": "README.cn.md",
          "type": "blob",
          "size": 6.0361328125,
          "content": "<p align=\"center\">\n<img src=\".github/PARL-logo.png\" alt=\"PARL\" width=\"500\"/>\n</p>\n\n[English](./README.md) | 简体中文\n\n[![Documentation Status](https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat)](https://parl.readthedocs.io/en/latest/index.html) [![Documentation Status](https://img.shields.io/badge/中文文档-最新-brightgreen.svg)](https://parl.readthedocs.io/zh_CN/latest/) [![Documentation Status](https://img.shields.io/badge/手册-中文-brightgreen.svg)](./docs/zh_CN/Overview.md) [![Release](https://img.shields.io/badge/release-v2.2.1-blue.svg)](https://github.com/PaddlePaddle/PARL/releases)\n\n\n> PARL 是一个高性能、灵活的强化学习框架。\n\n<!-- toc -->\n\n- [概览](#概览)\n  - [特点](#特点)\n  - [框架结构](#框架结构)\n  - [简易高效的并行接口](#简易高效的并行接口)\n- [安装](#安装)\n- [快速开始](#快速开始)\n- [算法示例](#算法示例)\n\n# 概览\n## 特点\n**可复现性保证**。我们提供了高质量的主流强化学习算法实现，严格地复现了论文对应的指标。\n\n**大规模并行支持**。框架最高可支持上万个CPU的同时并发计算，并且支持多GPU强化学习模型的训练。\n\n**可复用性强**。用户无需自己重新实现算法，通过复用框架提供的算法可以轻松地把经典强化学习算法应用到具体的场景中。\n\n**良好扩展性**。当用户想调研新的算法时，可以通过继承我们提供的基类可以快速实现自己的强化学习算法。\n\n\n## 框架结构\n<img src=\".github/abstractions.png\" alt=\"abstractions\" width=\"400\"/>  \nPARL的目标是构建一个可以完成复杂任务的智能体。以下是用户在逐步构建一个智能体的过程中需要了解到的结构：\n\n### Model\n`Model` 用来定义前向 (`Forward`)网络，这通常是一个策略网络 (`Policy Network`)或者一个值函数网络 (`Value Function`)，输入是当前环境状态 (`State`)。\n\n### Algorithm\n`Algorithm` 定义了具体的算法来更新前向网络 (`Model`)，也就是通过定义损失函数来更新`Model`。一个`Algorithm`包含至少一个`Model`。\n\n### Agent\n`Agent` 负责算法与环境的交互，在交互过程中把生成的数据提供给`Algorithm`来更新模型 (`Model`)，数据的预处理流程也一般定义在这里。\n\n提示： 请访问[教程](https://parl.readthedocs.io/zh_CN/latest/tutorial/getting_started.html) and [API 文档](https://parl.readthedocs.io/zh_CN/latest/apis/model.html)以获取更多关于基础类的信息。\n\n## 简易高效的并行接口\n在PARL中，一个**修饰符**(parl.remote_class)就可以帮助用户实现自己的并行算法。\n以下我们通过`Hello World`的例子来说明如何简单地通过PARL来调度外部的计算资源实现并行计算。 请访问我们的[教程文档](https://parl.readthedocs.io/zh_CN/latest/parallel_training/setup.html)以获取更多的并行训练信息。\n```python\n#============Agent.py=================\n@parl.remote_class\nclass Agent(object):\n\n\tdef say_hello(self):\n\t\tprint(\"Hello World!\")\n\n\tdef sum(self, a, b):\n\t\treturn a+b\n\nparl.connect('localhost:8037')\nagent = Agent()\nagent.say_hello()\nans = agent.sum(1,5) # run remotely and not comsume any local computation resources \n```\n两步调度外部的计算资源：\n1. 使用`parl.remote_class`修饰一个类，之后这个类就被转化为可以运行在其他CPU或者机器上的类。\n2. 调用`parl.connect`函数来初始化并行通讯，通过这种方式获取到的实例和原来的类是有同样的函数的。由于这些类是在别的计算资源上运行的，执行这些函数**不再消耗当前线程计算资源**。\n\n<img src=\".github/decorator.png\" alt=\"PARL\" width=\"450\"/>\n\n如上图所示，真实的actor（橙色圆圈）运行在CPU集群，learner（蓝色圆圈）和remote actor（黄色圆圈）运行在本地的GPU上。对于用户而言，完全可以像写多线程代码一样来实现并行算法，相当简单，但是这些多线程的运算利用了外部的计算资源。我们也提供了并行算法示例，更多细节请参考[IMPALA](benchmark/fluid/IMPALA/), [A2C](examples/A2C/)。\n\n\n# 安装:\n### 依赖\n- Python 3.6+. (Python 3.8+ 更适合用于并行训练)\n- [paddlepaddle>=2.3.1](https://github.com/PaddlePaddle/Paddle) (**非必须的**，如果你只用并行部分的接口不需要安装paddle) \n\n\n```\npip install parl\n```\n\n# 快速开始\n请查看一下几个教程帮助您快速上手PARL:\n- [教程](https://parl.readthedocs.io/zh_CN/latest/tutorial/getting_started.html) : 解决经典的 CartPole 问题。\n- [Xparl用法](https://parl.readthedocs.io/zh_CN/latest/parallel_training/setup.html) : 如何使用`xparl`设置集群，实现并行运算。\n- [进阶教程](https://parl.readthedocs.io/zh_CN/latest/implementations/new_alg.html) : 自定义新算法。\n- [API 文档](https://parl.readthedocs.io/zh_CN/latest/apis/model.html)\n\n同时，我们还为零基础开发者提供强化学习入门课程 : ( [视频](https://www.bilibili.com/video/BV1yv411i7xd) | [代码](examples/tutorials/) )\n\n# 算法示例\n- [QuickStart](examples/QuickStart/)\n- [DQN](examples/DQN/)\n- [ES](examples/ES/)\n- [DDPG](examples/DDPG/)\n- [A2C](examples/A2C/)\n- [TD3](examples/TD3/)\n- [SAC](examples/SAC/)\n- [QMIX](examples/QMIX/)\n- [MADDPG](examples/MADDPG/)\n- [PPO](examples/PPO/)\n- [CQL](examples/CQL/)\n- [IMPALA](examples/IMPALA)\n- [冠军解决方案：NIPS2018强化学习假肢挑战赛](examples/NeurIPS2018-AI-for-Prosthetics-Challenge/)\n- [冠军解决方案：NIPS2019强化学习仿生人控制赛事](examples/NeurIPS2019-Learn-to-Move-Challenge/)\n- [冠军解决方案：NIPS2020强化学习电网调度赛事](examples/NeurIPS2020-Learning-to-Run-a-Power-Network-Challenge/)\n\n<img src=\"examples/NeurIPS2019-Learn-to-Move-Challenge/image/performance.gif\" width = \"300\" height =\"200\" alt=\"NeurlIPS2018\"/> <img src=\".github/Half-Cheetah.gif\" width = \"300\" height =\"200\" alt=\"Half-Cheetah\"/> <img src=\".github/Breakout.gif\" width = \"200\" height =\"200\" alt=\"Breakout\"/> \n<br>\n<img src=\".github/Aircraft.gif\"  width = \"808\" height =\"300\"  alt=\"NeurlIPS2018\"/>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.103515625,
          "content": "<p align=\"center\">\n<img src=\".github/PARL-logo.png\" alt=\"PARL\" width=\"500\"/>\n</p>\n\nEnglish | [简体中文](./README.cn.md)\n\n[![Documentation Status](https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat)](https://parl.readthedocs.io/en/latest/index.html) [![Documentation Status](https://img.shields.io/badge/中文文档-最新-brightgreen.svg)](https://parl.readthedocs.io/zh_CN/latest/) [![Documentation Status](https://img.shields.io/badge/手册-中文-brightgreen.svg)](./docs/zh_CN/Overview.md) [![Release](https://img.shields.io/badge/release-v2.2.1-blue.svg)](https://github.com/PaddlePaddle/PARL/releases)\n\n> PARL is a flexible and high-efficient reinforcement learning framework.\n\n<!-- toc -->\n\n- [About PARL](#about-parl)\n  - [Features](#features)\n  - [Abstractions](#abstractions)\n  - [Parallelization](#parallelization)\n- [Install](#install)\n- [Getting Started](#getting-started)\n- [Examples](#examples)\n\n# About PARL\n## Features\n**Reproducible**. We provide algorithms that stably reproduce the result of many influential reinforcement learning algorithms.\n\n**Large Scale**. Ability to support high-performance parallelization of training with thousands of CPUs and multi-GPUs.\n\n**Reusable**.  Algorithms provided in the repository could be directly adapted to a new task by defining a forward network and training mechanism will be built automatically.\n\n**Extensible**. Build new algorithms quickly by inheriting the abstract class in the framework.\n\n\n## Abstractions\n<img src=\".github/abstractions.png\" alt=\"abstractions\" width=\"400\"/>\nPARL aims to build an agent for training algorithms to perform complex tasks.   \nThe main abstractions introduced by PARL that are used to build an agent recursively are the following:\n\n### Model\n`Model` is abstracted to construct the forward network which defines a policy network or critic network given state as input.\n\n### Algorithm\n`Algorithm` describes the mechanism to update parameters in `Model` and often contains at least one model.\n\n### Agent\n`Agent`, a data bridge between the environment and the algorithm, is responsible for data I/O with the outside environment and describes data preprocessing before feeding data into the training process.  \n\nNote: For more information about base classes, please visit our [tutorial](https://parl.readthedocs.io/en/latest/tutorial/getting_started.html) and [API documentation](https://parl.readthedocs.io/en/latest/apis/model.html).\n\n## Parallelization\nPARL provides a compact API for distributed training, allowing users to transfer the code into a parallelized version by simply adding a decorator. For more information about our APIs for parallel training, please visit our [documentation](https://parl.readthedocs.io/en/latest/parallel_training/setup.html).  \nHere is a `Hello World` example to demonstrate how easy it is to leverage outer computation resources.\n```python\n#============Agent.py=================\n@parl.remote_class\nclass Agent(object):\n\n    def say_hello(self):\n        print(\"Hello World!\")\n\n    def sum(self, a, b):\n        return a+b\n\nparl.connect('localhost:8037')\nagent = Agent()\nagent.say_hello()\nans = agent.sum(1,5) # it runs remotely, without consuming any local computation resources\n```\nTwo steps to use outer computation resources:\n1. use the `parl.remote_class` to decorate a class at first, after which it is transferred to be a new class that can run in other CPUs or machines.\n2. call `parl.connect` to initialize parallel communication before creating an object. Calling any function of the objects **does not** consume local computation resources since they are executed elsewhere.\n\n<img src=\".github/decorator.png\" alt=\"PARL\" width=\"450\"/>\nAs shown in the above figure, real actors (orange circle) are running at the cpu cluster, while the learner (blue circle) is running at the local gpu with several remote actors (yellow circle with dotted edge).  \n\nFor users, they can write code in a simple way, just like writing multi-thread code, but with actors consuming remote resources. We have also provided examples of parallized algorithms like [IMPALA](benchmark/fluid/IMPALA/), [A2C](examples/A2C/). For more details in usage please refer to these examples.  \n\n\n# Install:\n### Dependencies\n- Python 3.6+(Python 3.8+ is preferable for distributed training). \n- [paddlepaddle>=2.3.1](https://github.com/PaddlePaddle/Paddle) (**Optional**, if you only want to use APIs related to parallelization alone)  \n\n\n```\npip install parl\n```\n\n# Getting Started\nSeveral-points to get you started:\n- [Tutorial](https://parl.readthedocs.io/en/latest/tutorial/getting_started.html) : How to solve cartpole problem.\n- [Xparl Usage](https://parl.readthedocs.io/en/latest/parallel_training/setup.html) : How to set up a cluster with `xparl` and compute in parallel.\n- [Advanced Tutorial](https://parl.readthedocs.io/en/latest/implementations/new_alg.html) : Create customized algorithms.\n- [API documentation](https://parl.readthedocs.io/en/latest/apis/model.html)\n\nFor beginners who know little about reinforcement learning, we also provide an introductory course: ( [Video](https://www.bilibili.com/video/BV1yv411i7xd) | [Code](examples/tutorials/) )\n\n# Examples\n- [QuickStart](examples/QuickStart/)\n- [DQN](examples/DQN/)\n- [ES](examples/ES/)\n- [DDPG](examples/DDPG/)\n- [A2C](examples/A2C/)\n- [TD3](examples/TD3/)\n- [SAC](examples/SAC/)\n- [QMIX](examples/QMIX/)\n- [MADDPG](examples/MADDPG/)\n- [PPO](examples/PPO/)\n- [CQL](examples/CQL/)\n- [IMPALA](examples/IMPALA)\n- [Winning Solution for NIPS2018: AI for Prosthetics Challenge](examples/NeurIPS2018-AI-for-Prosthetics-Challenge/)\n- [Winning Solution for NIPS2019: Learn to Move Challenge](examples/NeurIPS2019-Learn-to-Move-Challenge/)\n- [Winning Solution for NIPS2020: Learning to Run a Power Network Challenge](examples/NeurIPS2020-Learning-to-Run-a-Power-Network-Challenge/)\n\n<img src=\"examples/NeurIPS2019-Learn-to-Move-Challenge/image/performance.gif\" width = \"280\" height =\"200\" alt=\"NeurlIPS2018\"/> <img src=\".github/Half-Cheetah.gif\" width = \"280\" height =\"200\" alt=\"Half-Cheetah\"/> <img src=\".github/Breakout.gif\" width = \"195\" height =\"200\" alt=\"Breakout\"/>\n<br>\n<img src=\".github/Aircraft.gif\"  width = \"762\" height =\"300\"  alt=\"NeurlIPS2018\"/>\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "evo_kit",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "papers",
          "type": "tree",
          "content": null
        },
        {
          "name": "parl",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.197265625,
          "content": "#   Copyright (c) 2018 PaddlePaddle Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport codecs\nimport sys\nimport os\nimport re\nfrom setuptools import setup, find_packages\n\ncur_dir = os.path.abspath(os.path.dirname(__file__))\nwith open(os.path.join(cur_dir, 'README.md'), 'rb') as f:\n    lines = [x.decode('utf-8') for x in f.readlines()]\n    lines = ''.join([re.sub('^<.*>\\n$', '', x) for x in lines])\n    long_description = lines\n\n\ndef _find_packages(prefix=''):\n    packages = []\n    path = '.'\n    prefix = prefix\n    for root, _, files in os.walk(path):\n        if '__init__.py' in files:\n            if sys.platform == 'win32':\n                packages.append(\n                    re.sub('^[^A-z0-9_]', '', root.replace('\\\\', '.')))\n            else:\n                packages.append(\n                    re.sub('^[^A-z0-9_]', '', root.replace('/', '.')))\n    return packages\n\n\ndef read(*parts):\n    with codecs.open(os.path.join(cur_dir, *parts), 'r') as fp:\n        return fp.read()\n\n\n# Reference: https://github.com/pypa/pip/blob/master/setup.py\ndef find_version(*file_paths):\n    version_file = read(*file_paths)\n    version_match = re.search(\n        r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n        version_file,\n        re.M,\n    )\n    if version_match:\n        return version_match.group(1)\n\n    raise RuntimeError(\"Unable to find version string.\")\n\n\nsetup(\n    name='parl',\n    version=find_version(\"parl\", \"__init__.py\"),\n    description='Reinforcement Learning Framework',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    url='https://github.com/PaddlePaddle/PARL',\n    packages=_find_packages(),\n    include_package_data=True,\n    package_data={'': ['*.so']},\n    install_requires=[\n        \"termcolor>=1.1.0\",\n        'pyzmq==18.1.1; python_version<\"3.9\"',\n        'pyzmq==22.3.0; python_version>=\"3.9\"',\n        \"scipy>=1.0.0\",\n        'cloudpickle==1.3.0; python_version<\"3\"',\n        'cloudpickle==1.6.0; python_version>=\"3\"',\n        \"tensorboardX==2.5\",\n        \"tensorboard<=2.11.0\",\n        \"flask>=1.0.4\",\n        \"click\",\n        \"psutil>=5.6.2\",\n        \"flask_cors\",\n        \"requests\",\n        \"grpcio==1.37.0\",\n        \"protobuf>=3.14.0, <=3.20.0\",\n        \"pynvml\"\n    ],\n    classifiers=[\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: Apache Software License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n    ],\n    entry_points={\"console_scripts\": [\"xparl=parl.remote.scripts:main\"]},\n)\n"
        },
        {
          "name": "test_tipc",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}