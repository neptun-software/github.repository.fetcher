{
  "metadata": {
    "timestamp": 1736559781948,
    "page": 501,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "0xHJK/music-dl",
      "stars": 3876,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.248046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\nreport.xml\n\n# Translations\n*.mo\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.idea\n.vscode\ntest.py\n\n# music\n*.mp3\n*.ogg\n*.flac\n!static/sample.mp3\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5107421875,
          "content": "# https://travis-ci.org/0xHJK/music-dl\nlanguage: python\n\ninstall:\n  - pip install pytest-cov codecov\n  - make install\n\njobs:\n  include:\n    - stage: test\n      script:\n        - make test\n        - make ci\n      python: '3.5'\n    - stage: test\n      script:\n        - make test\n        - make ci\n      python: '3.6'\n    - stage: test\n      script:\n        - make test\n        - make ci\n      python: '3.7'\n      dist: xenial\n    - stage: coverage\n      python: '3.6'\n      script:\n        - make coverage\n        - codecov\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.111328125,
          "content": "MIT License\n\nCopyright (c) 2012-2019 Mort Yao <mort.yao@gmail.com>\nCopyright (c) 2012 Boyu Guo <iambus@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.6044921875,
          "content": ".PHONY: test\n\nci:\n\tpy.test --junitxml=report.xml\n\ntest:\n\tpython3 setup.py test\n\ncoverage:\n\tpy.test --cov-config .coveragerc --verbose --cov-report term --cov-report xml --cov=music_dl --junitxml=report.xml tests\n\nflake8:\n\tflake8 --ignore=E501,F401,W503 music_dl\n\nclean:\n\trm -fr build dist .egg pymusic_dl.egg-info\n\trm -fr *.mp3 .pytest_cache coverage.xml report.xml htmlcov\n\tfind . | grep __pycache__ | xargs rm -fr\n\tfind . | grep .pyc | xargs rm -f\n\ninstall:\n\tpython3 setup.py install\n\npublish:\n\tpip3 install 'twine>=1.5.0'\n\tpython3 setup.py sdist bdist_wheel\n\ttwine upload dist/*\n\trm -fr build .egg requests.egg-info\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 3.6640625,
          "content": "# Music-dl: Listen to what you want\n\n<p align=\"center\">\n  <a href=\"https://github.com/0xHJK/music-dl\">\n    <img src=\"https://github.com/0xHJK/music-dl/raw/master/static/logo.png\" height=\"400\" alt=\"music-dl\">\n  </a>\n</p>\n<hr>\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/0xHJK/music-dl\">\n    <img src=\"https://travis-ci.org/0xHJK/music-dl.svg?branch=master\">\n  </a>\n  <a><img src=\"https://img.shields.io/pypi/pyversions/pymusic-dl.svg\"></a>\n  <a href=\"https://codecov.io/gh/0xHJK/music-dl\">\n    <img src=\"https://codecov.io/gh/0xHJK/music-dl/branch/master/graph/badge.svg\"/>\n  </a>\n  <a href=\"https://github.com/0xHJK/music-dl/releases\">\n    <img src=\"https://img.shields.io/github/release/0xHJK/music-dl.svg\">\n  </a>\n  <a><img src=\"https://img.shields.io/github/license/0xHJK/music-dl.svg\"></a>\n</p>\n\n**[Music-dl](https://github.com/0xHJK/music-dl)** is a command line tool which helps you search and download music from multiple sources.\n\nSupport for QQ music, Netease music, Xiami music, Kugou music and Baidu music. See [supported sources](#supported-sources).\n\n**Python3 Only. Python 3.5+ Recommended.**\n\nEnglish | [中文文档](https://github.com/0xHJK/music-dl/blob/master/README.md)\n\n> Note: Some music sources may not be available in some countries and regions. If that happens, you could use Chinese proxies. See <https://github.com/0xHJK/Proxies> for public proxies.\n\n- Support for lossless music\n- Search for high-quality music with priority ( flac -> 320K -> 128K )\n- Support for HTTP and SOCKS proxy\n- Support for multithreading searching\n- Support for merging and sorting results\n- Support keyword highlighting\n\n## Installation\n\nInstall using pip (Recommended)\n\n```bash\n$ pip3 install pymusic-dl\n```\n\nManual\n\n```bash\n$ git clone https://github.com/0xHJK/music-dl.git\n$ cd music-dl\n$ python3 setup.py install\n```\n\nUse directly\n\n```bash\n$ git clone https://github.com/0xHJK/music-dl.git\n$ cd music-dl\n$ pip3 install -r requirements.txt\n$ ./music-dl\n\n# OR python3 music-dl\n```\n\n## Usage\n\n```\n$ music-dl --help\nUsage: music-dl [OPTIONS]\n\n  Search and download music from netease, qq, kugou, baidu and xiami.\n  Example: music-dl -k \"Bruno Mars\"\n\nOptions:\n  --version            Show the version and exit.\n  -k, --keyword TEXT   Query keyword\n  -s, --source TEXT    Support for qq netease kugou baidu xiami flac\n  -c, --count INTEGER  Searching count limit (default: 5)\n  -o, --outdir TEXT    Output dir (default: current dir)\n  -x, --proxy TEXT     Set proxy (like http://127.0.0.1:1087)\n  -m, --merge          Sort and merge\n  -v, --verbose        Verbose mode\n  --help               Show this message and exit.\n```\n\nExample:\n\n![](https://github.com/0xHJK/music-dl/raw/master/static/preview-en.png)\n\n## Supported sources\n\n| Music sources             | Abbreviation | Websites                  |\n| ------------------------- | ------------ | ------------------------- |\n| QQ Music                  | qq           | <https://y.qq.com/>       |\n| Kugou Music               | kugou        | <http://www.kugou.com/>   |\n| Netease Music             | netease      | <https://music.163.com/>  |\n| Baidu Music               | baidu        | <http://music.baidu.com/> |\n| Xiami Music               | xiami        | <https://www.xiami.com/>  |\n| Lossless Music From Baidu | flac         | <http://music.baidu.com/> |\n\nWelcome to submit plugins to support more music sources! Refer to the files in `extractors`.\n\n![](https://github.com/0xHJK/music-dl/raw/master/static/fork.png)\n\n## Credits\n\n- <https://github.com/requests/requests>\n- <https://github.com/soimort/you-get>\n- <https://github.com/maicong/music>\n- <https://github.com/YongHaoWu/NeteaseCloudMusicFlac>\n\n## LICENSE\n\n[MIT License](https://github.com/0xHJK/music-dl/blob/master/LICENSE)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.4599609375,
          "content": "# Music-dl: Listen to what you want\n\n<p align=\"center\">\n  <a href=\"https://github.com/0xHJK/music-dl\">\n    <img src=\"https://github.com/0xHJK/music-dl/raw/master/static/logo.png\" height=\"400\" alt=\"music-dl\">\n  </a>\n</p>\n<hr>\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/0xHJK/music-dl\">\n    <img src=\"https://travis-ci.org/0xHJK/music-dl.svg?branch=master\">\n  </a>\n  <a><img src=\"https://img.shields.io/pypi/pyversions/pymusic-dl.svg\"></a>\n  <a href=\"https://codecov.io/gh/0xHJK/music-dl\">\n    <img src=\"https://codecov.io/gh/0xHJK/music-dl/branch/master/graph/badge.svg\"/>\n  </a>\n  <a href=\"https://github.com/0xHJK/music-dl/releases\">\n    <img src=\"https://img.shields.io/github/release/0xHJK/music-dl.svg\">\n  </a>\n  <a><img src=\"https://img.shields.io/github/license/0xHJK/music-dl.svg\"></a>\n</p>\n\n**[Music-dl](https://github.com/0xHJK/music-dl)** is a command line tool which helps you search and download music from multiple sources.\n\nSupport for QQ music, Netease music, Xiami music, Kugou music and Baidu music. See [supported sources](#支持的音乐源列表).\n\n**Python3 Only. Python 3.5+ Recommended.**\n\n[English](https://github.com/0xHJK/music-dl/blob/master/README.en.md) | 中文文档\n\n**[Music-dl](https://github.com/0xHJK/music-dl)\n**是一个基于Python3的命令行工具，可以从多个网站搜索和下载音乐，方便寻找音乐，解决不知道哪个网站有版权的问题。工具的本意是**聚合搜索**，API\n是从公开的网络中获得，**不是破解版**，也听不了付费歌曲。\n\n**禁止将本工具用于商业用途**，如产生法律纠纷与本人无关，如有侵权，请联系我删除。\n\n微博：[可乐芬达王老吉](https://weibo.com/p/1005056970125848/home?is_all=1)\n\nQQ群：[785798493](//shang.qq.com/wpa/qunwpa?idkey=ead6a77d50b8dbaa73cf78809aca0bd20c306b12f9984a17436f0342b1c0d65c)\n\n最近API封杀有点多，个人有点维护不过来，需要大家帮忙更新。查看 [支持的音乐源列表](#支持的音乐源列表)\n\n> 注意: 部分音乐源在一些国家和地区不可用，可以考虑使用中国大陆代理。获取公共代理的方式可以参考我的另一个项目<https://github.com/0xHJK/Proxies>，两分钟获得数千个有效代理。\n\n## 功能\n\n- 部分歌曲支持无损音乐\n- 优先搜索高品质音乐（无损 -> 320K -> 128K）\n- 支持 HTTP 和 SOCKS 代理\n- 支持多线程搜索\n- 支持搜索结果去重和排序\n- 支持搜索关键字高亮\n- 支持下载歌词和封面（部分）\n\n> 注意：仅支持Python3，建议使用 **Python3.5 以上版本**\n\n## 安装\n\n使用pip安装（推荐，注意前面有一个`py`）：\n\n```bash\n$ pip3 install pymusic-dl\n```\n\n手动安装（最新）：\n\n```bash\n$ git clone https://github.com/0xHJK/music-dl.git\n$ cd music-dl\n$ python3 setup.py install\n```\n\n不安装直接运行：\n\n```bash\n$ git clone https://github.com/0xHJK/music-dl.git\n$ cd music-dl\n$ pip3 install -r requirements.txt\n$ ./music-dl\n\n# 或 python3 music-dl\n```\n\n在以下环境测试通过：\n\n| 系统名称 | 系统版本       | Python版本 |\n| -------- | -------------- | ---------- |\n| macOS    | 10.14          | 3.7.0      |\n| macOS    | 10.13          | 3.7.0      |\n| Windows  | Windows 7 x64  | 3.7.2      |\n| Windows  | Windows 10 x64 | 3.7.2      |\n| Ubuntu   | 16.04 x64      | 3.5.2      |\n\n## 使用方式\n\nv3.0预览版命令有较大的改变，建议先查看帮助\n\n```\n$ music-dl --help\nUsage: music-dl [OPTIONS]\n\n  Search and download music from netease, qq, kugou, baidu and xiami.\n  Example: music-dl -k \"周杰伦\"\n\nOptions:\n  --version             Show the version and exit.\n  -k, --keyword TEXT    搜索关键字，歌名和歌手同时输入可以提高匹配（如 空帆船 朴树）\n  -u, --url TEXT        通过指定的歌曲URL下载音乐\n  -p, --playlist TEXT   通过指定的歌单URL下载音乐\n  -s, --source TEXT     Supported music source: qq netease kugou baidu\n  -n, --number INTEGER  Number of search results\n  -o, --outdir TEXT     Output directory\n  -x, --proxy TEXT      Proxy (e.g. http://127.0.0.1:1087)\n  -v, --verbose         Verbose mode\n  --lyrics              同时下载歌词\n  --cover               同时下载封面\n  --nomerge             不对搜索结果列表排序和去重\n  --help                Show this message and exit.\n```\n\n- 默认搜索`qq netease kugou baidu `，每个数量限制为5，保存目录为当前目录。\n- 指定序号时可以使用`1-5 7 10`的形式。\n- 默认对搜索结果排序和去重，排序顺序按照歌手和歌名排序，当两者都相同时保留最大的文件。\n- 无损音乐歌曲数量较少，如果没有无损会显示320K或128K。\n- 支持http代理和socks代理，格式形如`-x http://127.0.0.1:1087`或`-x socks5://127.0.0.1:1086`\n\n示例：\n\n![](https://github.com/0xHJK/music-dl/raw/master/static/preview.png)\n\n## 支持的音乐源列表\n\n| 音乐源     | 缩写    | 网址                      | 有效 | 无损 | 320K | 封面 | 歌词 | 歌单 | 单曲 |\n| ---------- | ------- | ------------------------- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| QQ音乐     | qq      | <https://y.qq.com/>       | ✓     | -    | -    | ✕    | ✓     | ✕    | ✕    |\n| 酷狗音乐   | kugou   | <http://www.kugou.com/>   | ✓     | -    | -    | -    | ✕    | -    | ✕    |\n| 网易云音乐 | netease | <https://music.163.com/>  | ✓    | -    | ✓    | ✓    | ✓    | ✓    | ✓    |\n| 咪咕音乐   | migu    | <http://www.migu.cn/>     | ✓    | ✓    | ✓    | ✓    | ✓    | ✕    | ✕    |\n| 百度音乐   | baidu   | <http://music.baidu.com/> | ✓    | -    | ✓    | ✓    | ✓    | ✕    | ✕    |\n| 虾米音乐   | xiami   | <https://www.xiami.com/>  | ✕    | -    | -    | -    | -    | ✕    | ✕    |\n\n> `-`表示不一定支持，`✓`表示部分或完全支持，`✕`表示尚未支持\n\n欢迎提交插件支持更多音乐源！插件写法参考`addons`中的文件\n\n![](https://github.com/0xHJK/music-dl/raw/master/static/fork.png)\n\n## 更新记录\n\n- 2019-08-25 修复了QQ音乐、网易云音乐、酷狗音乐，新增咪咕音乐\n- 2019-08-03 修复了一些bug，屏蔽了不支持的源，目前仅百度音乐可用\n- 2019-06-13 重新增加虾米音乐高品质音乐支持，感谢群友0.0提供的API\n- 2019-06-11 v3.0预览版，代码重构，支持网易云音乐歌单和单曲下载，支持百度高品质音乐\n- 2019-04-08 发布v2.2.1版本\n- 2019-04-04 因为虾米音乐API变更，暂时屏蔽虾米搜索结果#22\n- 2019-04-02 修复#18和#21的BUG，优化显示效果，支持部分音乐源歌词和封面下载\n- 2019-03-11 开启默认支持所有音乐源，默认对搜索结果排序去重，优化显示效果，高亮搜索关键字和高品质音乐\n- 2019-02 完成部分翻译（英语、德语、日语、克罗地亚语）感谢@anomie31 @DarkLinkXXXX @terorie的帮助，目前翻译尚未完善，欢迎提交PR改进翻译\n- 2019-01-31 新增单元测试，集成发布，新增LOGO，新增小徽章，发布v2.1.0版本\n- 2019-01-28 重写一半以上代码，全面优化，发布到pip库，发布v2.0.0版本\n- 2019-01-26 支持http和socks代理，删除wget库，新增click库，发布v1.1版\n- 2019-01-25 支持百度无损音乐\n- 2019-01-24 优化交互、修复bug\n- 2019-01-22 解决Windows兼容问题，支持多线程，发布v1.0版\n- 2019-01-21 支持虾米音乐，支持去重\n- 2019-01-20 支持百度音乐\n- 2019-01-17 支持指定目录、数量、音乐源\n- 2019-01-12 QQ音乐320K失效\n- 2019-01-11 支持网易云音乐\n- 2019-01-09 完成v0.1版，支持酷狗和QQ\n\n## 提Issues说明\n\n- **检查是否是最新的代码，检查是否是Python3.5+，检查依赖有没有安装完整**。\n- 说明使用的操作系统，例如Windows 10 x64\n- 说明Python版本，以及是否使用了pyenv等虚拟环境\n- 说明使用的命令参数、搜索关键字和出错的音乐源\n- 使用`-v`参数重试，说明详细的错误信息，最好有截图\n- 如果有新的思路和建议也欢迎提交\n\n## Credits 致谢\n\n本项目受以下项目启发，参考了其中一部分思路，向这些开发者表示感谢。\n\n- <https://github.com/requests/requests>\n- <https://github.com/soimort/you-get>\n- <https://github.com/maicong/music>\n- <https://github.com/YongHaoWu/NeteaseCloudMusicFlac>\n- <https://github.com/darknessomi/musicbox>\n\n## 用爱发电\n\n维护不易，欢迎扫描恰饭二维码\n\n![](https://github.com/0xHJK/music-dl/raw/master/static/wepay.jpg)\n\n## LICENSE\n\n[MIT License](https://github.com/0xHJK/music-dl/blob/master/LICENSE)\n"
        },
        {
          "name": "locale",
          "type": "tree",
          "content": null
        },
        {
          "name": "music-dl",
          "type": "blob",
          "size": 0.482421875,
          "content": "#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\"\"\"\n@author: HJK \n@file: music-dl\n@time: 2019-01-26\n\n启动器\n\n\"\"\"\n\nimport os, sys\nimport gettext\n\ngettext.install(\"music-dl\", \"locale\")\n\n_srcdir = \"%s/\" % os.path.dirname(os.path.realpath(__file__))\n_filepath = os.path.dirname(sys.argv[0])\nsys.path.insert(1, os.path.join(_filepath, _srcdir))\n\nif sys.version_info[0] == 3:\n    import music_dl\n\n    if __name__ == \"__main__\":\n        music_dl.main()\nelse:  # Python 2\n    print(_(\"Python3 Only.\"))\n"
        },
        {
          "name": "music_dl",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0390625,
          "content": "click\nrequests\npycryptodome\nprettytable\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.9013671875,
          "content": "#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\"\"\"\n@author: HJK \n@file: setup.py \n@time: 2019-01-26\n\n打包配置文件\n\n\"\"\"\nimport os\nimport sys\nimport setuptools\n\n# 'setup.py publish' shortcut.\nif sys.argv[-1] == \"publish\":\n    os.system(\"rm -rf dist\")\n    os.system(\"python setup.py sdist bdist_wheel\")\n    os.system(\"twine upload dist/*\")\n    sys.exit()\n\nhere = os.path.abspath(os.path.dirname(__file__))\nabout = {}\nwith open(os.path.join(here, \"music_dl\", \"__version__.py\"), \"r\", encoding=\"utf-8\") as f:\n    exec(f.read(), about)\n\nwith open(\"README.md\", \"r\", encoding=\"utf-8\") as fh:\n    long_description = fh.read()\n\nsetuptools.setup(\n    name=about[\"__title__\"],\n    version=about[\"__version__\"],\n    description=about[\"__description__\"],\n    author=about[\"__author__\"],\n    author_email=about[\"__author_email__\"],\n    url=about[\"__url__\"],\n    license=about[\"__license__\"],\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    packages=setuptools.find_packages(),\n    test_suite=\"tests\",\n    entry_points={\"console_scripts\": [\"music-dl = music_dl.__main__:main\"]},\n    install_requires=[\"requests\", \"click\", \"pycryptodome\", \"prettytable\"],\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Environment :: Console\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: End Users/Desktop\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Topic :: Internet\",\n        \"Topic :: Internet :: WWW/HTTP\",\n        \"Topic :: Multimedia\",\n        \"Topic :: Multimedia :: Sound/Audio\",\n        \"Topic :: Utilities\",\n    ],\n)\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}