{
  "metadata": {
    "timestamp": 1736559673801,
    "page": 343,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "agermanidis/autosub",
      "stars": 4164,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0634765625,
          "content": "*pyc\n*.egg-info\n*html\nbuild/\ndist/\n.DS_Store\nMANIFEST\n*#*\n.vscode"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.109375,
          "content": "language: python\npython:\n  - \"2.7\"\ninstall:\n  - pip install .\n  - pip install pylint\nscript:\n  - pylint autosub\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Anastasis Germanidis\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0322265625,
          "content": "include README.md\ninclude LICENSE"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1904296875,
          "content": "# Autosub <a href=\"https://pypi.python.org/pypi/autosub\"><img src=\"https://img.shields.io/pypi/v/autosub.svg\"></img></a>\n  \n### Auto-generated subtitles for any video\n\nAutosub is a utility for automatic speech recognition and subtitle generation. It takes a video or an audio file as input, performs voice activity detection to find speech regions, makes parallel requests to Google Web Speech API to generate transcriptions for those regions, (optionally) translates them to a different language, and finally saves the resulting subtitles to disk. It supports a variety of input and output languages (to see which, run the utility with the argument `--list-languages`) and can currently produce subtitles in either the [SRT format](https://en.wikipedia.org/wiki/SubRip) or simple [JSON](https://en.wikipedia.org/wiki/JSON).\n\n### Installation\n\n1. Install [ffmpeg](https://www.ffmpeg.org/).\n2. Run `pip install autosub`.\n\n### Usage\n\n```\n$ autosub -h\nusage: autosub [-h] [-C CONCURRENCY] [-o OUTPUT] [-F FORMAT] [-S SRC_LANGUAGE]\n               [-D DST_LANGUAGE] [-K API_KEY] [--list-formats]\n               [--list-languages]\n               [source_path]\n\npositional arguments:\n  source_path           Path to the video or audio file to subtitle\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -C CONCURRENCY, --concurrency CONCURRENCY\n                        Number of concurrent API requests to make\n  -o OUTPUT, --output OUTPUT\n                        Output path for subtitles (by default, subtitles are\n                        saved in the same directory and name as the source\n                        path)\n  -F FORMAT, --format FORMAT\n                        Destination subtitle format\n  -S SRC_LANGUAGE, --src-language SRC_LANGUAGE\n                        Language spoken in source file\n  -D DST_LANGUAGE, --dst-language DST_LANGUAGE\n                        Desired language for the subtitles\n  -K API_KEY, --api-key API_KEY\n                        The Google Translate API key to be used. (Required for\n                        subtitle translation)\n  --list-formats        List all available subtitle formats\n  --list-languages      List all available source/destination languages\n```\n\n### License\n\nMIT\n"
        },
        {
          "name": "autosub",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.4609375,
          "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\ntry:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\n\nlong_description = (\n    'Autosub is a utility for automatic speech recognition and subtitle generation. '\n    'It takes a video or an audio file as input, performs voice activity detection '\n    'to find speech regions, makes parallel requests to Google Web Speech API to '\n    'generate transcriptions for those regions, (optionally) translates them to a '\n    'different language, and finally saves the resulting subtitles to disk. '\n    'It supports a variety of input and output languages (to see which, run the '\n    'utility with --list-src-languages and --list-dst-languages as arguments '\n    'respectively) and can currently produce subtitles in either the SRT format or '\n    'simple JSON.'\n)\n\nsetup(\n    name='autosub',\n    version='0.4.0',\n    description='Auto-generates subtitles for any video or audio file',\n    long_description=long_description,\n    author='Anastasis Germanidis',\n    author_email='agermanidis@gmail.com',\n    url='https://github.com/agermanidis/autosub',\n    packages=['autosub'],\n    entry_points={\n        'console_scripts': [\n            'autosub = autosub:main',\n        ],\n    },\n    install_requires=[\n        'google-api-python-client>=1.4.2',\n        'requests>=2.3.0',\n        'pysrt>=1.0.1',\n        'progressbar2>=3.34.3',\n        'six>=1.11.0',\n    ],\n    license=open(\"LICENSE\").read()\n)\n"
        }
      ]
    }
  ]
}