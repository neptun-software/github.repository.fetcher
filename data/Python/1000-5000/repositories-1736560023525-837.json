{
  "metadata": {
    "timestamp": 1736560023525,
    "page": 837,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "overviewer/Minecraft-Overviewer",
      "stars": 3371,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.9765625,
          "content": "---\nLanguage: Cpp\nAlignEscapedNewlinesLeft: 'true'\nAlignTrailingComments: 'true'\nAllowShortBlocksOnASingleLine: 'false'\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: 'false'\nAllowShortLoopsOnASingleLine: 'false'\nColumnLimit: '0'\nContinuationIndentWidth: '4'\nIndentWidth: '4'\nSortIncludes: true\nIncludeCategories:\n  - Regex:           '<[[:alnum:].]+>'\n    Priority:        -1\n  - Regex:           '\\\".*\\\"'\n    Priority:        1\nIndentCaseLabels: false\nMaxEmptyLinesToKeep: '1'\nPointerAlignment: Left\nSpaceBeforeAssignmentOperators: 'true'\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: 'false'\nSpacesBeforeTrailingComments: '1'\nSpacesInCStyleCastParentheses: 'false'\nSpacesInContainerLiterals: 'false'\nSpacesInParentheses: 'false'\nTabWidth: '4'\nBreakBeforeTernaryOperators: true\nCpp11BracedListStyle: true\nBreakBeforeBraces: Custom\nBraceWrapping:\n  BeforeElse: false\n  AfterEnum: false\n  AfterFunction: false\n  AfterStruct: false\n  AfterUnion: false\n...\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.763671875,
          "content": "*.pyc\nMANIFEST\nbuild/\ndist/\ndocs/_build/\nMinecraft_Overviewer.egg-info\nterrain.png\ncachedir*\n\n#MCPatcher HD texture files\ncustom_*.png\n\n# vim swap files\n.*.swp\n\n# user-provided settings file as well as any variations on that name\nsettings*.py\n\n# header files that may be copied over, if missing\nImPlatform.h\nImaging.h\n\n# various forms of compiled c_overviewer extensions\noverviewer_core/c_overviewer*.so\noverviewer_core/c_overviewer*.pyd\noverviewer_core/c_overviewer_d*.pyd\noverviewer_core/c_overviewer*.dylib\n\n# generated files\noverviewer_core/overviewer_version.py\noverviewer_core/src/primitives.h\n\n# Mac OS X noise\n.DS_Store\n\n#Script files, as users may want their own scripts.\n*.sh\n*.bat\n\n# PyCharm directory\n.idea\n/.vs/Minecraft-Overviewer/v15/.suo\n/.vs\n.vscode\nImagingUtils.h\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 14.34375,
          "content": "stages:\n  - build\n  - test\n  - package\n  - verify\n  - deploy\n  - testrepo\n\nvariables:\n  EXMAPLE_REPO: \"https://github.com/overviewer/Minecraft-Overviewer-Addons\"\n  MC_VERSION: \"1.12\"\n\nbuild:linux:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:base\n  stage: build\n  dependencies: []\n  tags:\n    - docker\n  cache:\n    key: \"$CI_BUILD_REF_NAME-$CI_PIPELINE_ID-linuxbuild\"\n    paths:\n      - overviewer_core/c_overviewer.so\n      - overviewer_core/overviewer_version.py\n      - overviewer_core/src/primitives.h\n      - build/\n  script:\n    - python2 setup.py build\n    - python2 overviewer.py --verbose --version\n\nbuild:windows:\n  stage: build\n  dependencies: []\n  tags:\n    - windows\n  script:\n    - call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" amd64\n    - set DISTUTILS_USE_SDK=1\n    - set MSSdk=1\n    - set PIL_INCLUDE_DIR=c:\\devel\\pillow\\src\\libImaging\n    - c:\\Python27\\python.exe c:\\devel\\virtualenv\\virtualenv.py ci_env\n    - ci_env\\scripts\\pip.exe install numpy Pillow==5.1.0\n    - ci_env\\Scripts\\python.exe setup.py build\n    - ci_env\\Scripts\\python.exe overviewer.py --verbose --version\n\n\nbuild:docs:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:base\n  stage: build\n  dependencies: []\n  tags:\n    - docker\n  script:\n    - cd docs\n    - make\n  artifacts:\n    name: \"overviewer-docs\"\n    expire_in: 2 weeks\n    paths:\n      - docs/_build/html/\n\ntest:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:base\n  stage: test\n  dependencies: []\n  tags:\n    - docker\n  cache:\n    key: \"$CI_BUILD_REF_NAME-$CI_PIPELINE_ID-linuxbuild\"\n    paths:\n      - overviewer_core/c_overviewer.so\n      - overviewer_core/overviewer_version.py\n      - overviewer_core/src/primitives.h\n      - build/\n  script:\n    - python2 setup.py build\n    - python2 test/test_all.py\n\n\nrender:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:base\n  stage: test\n  dependencies: []\n  tags:\n    - docker\n  cache:\n    key: \"$CI_BUILD_REF_NAME-$CI_PIPELINE_ID-linuxbuild\"\n    paths:\n      - overviewer_core/c_overviewer.so\n      - overviewer_core/overviewer_version.py\n      - overviewer_core/src/primitives.h\n      - build/\n  script:\n    - python2 setup.py build\n    - wget -N https://s3.amazonaws.com/Minecraft.Download/versions/${MC_VERSION}/${MC_VERSION}.jar -P ~/.minecraft/versions/${MC_VERSION}/\n    - git clone --depth=1 ${EXMAPLE_REPO} maprepo\n    - export RENDER_DIR=render/\n    - mkdir -p $RENDER_DIR\n    - python2 overviewer.py -p2 --rendermode=smooth_lighting maprepo/exmaple $RENDER_DIR\n    - zip -r render.zip $RENDER_DIR\n  artifacts:\n    expire_in: 2 days\n    paths:\n      - render.zip\n\n\n# Builds a source package\npkg:src:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:base\n  stage: package\n  dependencies: []\n  tags:\n    - docker\n  script:\n    - python2 setup.py sdist\n    - ls -lh dist\n    - mv dist/*.tar.gz .\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - Minecraft-Overviewer*.tar.gz\n\npkg:centos7rpm:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:centos7\n  stage: package\n  dependencies: []\n  tags:\n    - docker\n  script:\n    - export MCO_VERSION=`python2 setup.py --version`\n    - echo  \"Building Minecraft version ${MCO_VERSION}\"\n    - mkdir -p ${HOME}/rpmbuild/SOURCES\n    - tar --transform 's,^,Minecraft-Overviewer/,S' -czf ${HOME}/rpmbuild/SOURCES/Minecraft-Overviewer-${MCO_VERSION}.tar.gz *\n    - sed s/{VERSION}/$MCO_VERSION/g build-tools/dockerfiles/centos7/Minecraft-Overviewer.spec > Minecraft-Overviewer.spec\n    - pwd\n    - rpmbuild -bs --define 'dist .centos7' Minecraft-Overviewer.spec\n    - /usr/bin/mock -r centos-7-x86_64 ${HOME}/rpmbuild/SRPMS/Minecraft-Overviewer-${MCO_VERSION}-1.centos7.src.rpm\n    - cp /var/lib/mock/centos-7-x86_64/result/Minecraft-Overviewer*.x86_64.rpm .\n    - ls -l *.rpm\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - Minecraft-Overviewer*.x86_64.rpm\n\npkg:centos7-32rpm:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:centos7\n  stage: package\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n    - triggers\n  script:\n    - export MCO_VERSION=`python2 setup.py --version`\n    - echo  \"Building Minecraft version ${MCO_VERSION}\"\n    - mkdir -p ${HOME}/rpmbuild/SOURCES\n    - tar --transform 's,^,Minecraft-Overviewer/,S' -czf ${HOME}/rpmbuild/SOURCES/Minecraft-Overviewer-${MCO_VERSION}.tar.gz *\n    - sed s/{VERSION}/$MCO_VERSION/g build-tools/dockerfiles/centos7/Minecraft-Overviewer.spec > Minecraft-Overviewer.spec\n    - pwd\n    - rpmbuild -bs --define 'dist .centos7' Minecraft-Overviewer.spec\n    - /usr/bin/mock -r centos-7-i386 ${HOME}/rpmbuild/SRPMS/Minecraft-Overviewer-${MCO_VERSION}-1.centos7.src.rpm\n    - cp /var/lib/mock/centos-7-i386/result/Minecraft-Overviewer*.i*86.rpm .\n    - ls -l *.rpm\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - Minecraft-Overviewer*.i*86.rpm\n\n# Note that even though we are building a centos6 rpm, we can still use the centos7 docker image\npkg:centos6rpm:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:centos7\n  stage: package\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n    - triggers\n  script:\n    - export MCO_VERSION=`python2 setup.py --version`\n    - echo  \"Building Minecraft version ${MCO_VERSION}\"\n    - mkdir -p ${HOME}/rpmbuild/SOURCES\n    - tar --transform 's,^,Minecraft-Overviewer/,S' -czf ${HOME}/rpmbuild/SOURCES/Minecraft-Overviewer-${MCO_VERSION}.tar.gz *\n    - sed s/{VERSION}/$MCO_VERSION/g build-tools/dockerfiles/centos6/Minecraft-Overviewer.spec > Minecraft-Overviewer.spec\n    - pwd\n    - rpmbuild -bs --define 'dist .centos6' Minecraft-Overviewer.spec\n    - /usr/bin/mock -r centos-6-x86_64 ${HOME}/rpmbuild/SRPMS/Minecraft-Overviewer-${MCO_VERSION}-1.centos6.src.rpm\n    - cp /var/lib/mock/centos-6-x86_64/result/Minecraft-Overviewer*.x86_64.rpm .\n    - ls -l *.rpm\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - Minecraft-Overviewer*.x86_64.rpm\n\npkg:debian64:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:debian64\n  stage: package\n  dependencies: []\n  tags:\n    - docker\n  script:\n    - export MCO_VERSION=`python2 setup.py --version`\n    - echo  \"Building Minecraft version ${MCO_VERSION}\"\n    - python setup.py build\n    - cp -r build-tools/dockerfiles/debian64 debian\n    - sh debian/generate_changelog.sh > debian/changelog\n    - cat debian/changelog \n    - debuild -i -us -uc -b\n    - mv ../*.deb .\n    - ls -l *.deb\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - minecraft-overviewer*.deb\n\n\npkg:win64:\n  stage: package\n  dependencies: []\n  tags:\n    - windows\n  script:\n    - call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" amd64\n    - set DISTUTILS_USE_SDK=1\n    - set MSSdk=1\n    - set PIL_INCLUDE_DIR=c:\\devel\\pillow\\src\\libImaging\n    - c:\\Python27\\python.exe c:\\devel\\virtualenv\\virtualenv.py ci_env\n    - ci_env\\scripts\\pip.exe install numpy Pillow==5.1.0 pyinstaller sphinx\n    - ci_env\\Scripts\\python.exe setup.py build\n    - copy build-tools\\overviewer.spec .\n    - ci_env\\Scripts\\pyinstaller.exe overviewer.spec\n    - for /f \"delims=\" %%a in ('ci_env\\Scripts\\python.exe setup.py --version') do @set OVR_VERSION=%%a\n    - ci_env\\Scripts\\sphinx-build.exe docs dist\\overviewer-%OVR_VERSION%\\docs\n    - rename dist dist-win64\n    - ci_env\\Scripts\\python.exe -m zipfile -c overviewer-win64-%OVR_VERSION%.zip dist-win64\\overviewer-%OVR_VERSION%\\\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - overviewer-win64-*.zip\n\npkg:win32:\n  stage: package\n  dependencies: []\n  tags:\n    - windows\n  script:\n    - call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x86\n    - set DISTUTILS_USE_SDK=1\n    - set MSSdk=1\n    - set PIL_INCLUDE_DIR=c:\\devel\\pillow\\src\\libImaging\n    - \"\\\"c:\\\\Python27 (x86)\\\\python.exe\\\" c:\\\\devel\\\\virtualenv\\\\virtualenv.py ci_env\"\n    - ci_env\\scripts\\pip.exe install numpy Pillow==5.1.0 pyinstaller sphinx\n    - ci_env\\Scripts\\python.exe setup.py build\n    - copy build-tools\\overviewer.spec .\n    - ci_env\\Scripts\\pyinstaller.exe overviewer.spec\n    - for /f \"delims=\" %%a in ('ci_env\\Scripts\\python.exe setup.py --version') do @set OVR_VERSION=%%a\n    - ci_env\\Scripts\\sphinx-build.exe docs dist\\overviewer-%OVR_VERSION%\\docs\n    - rename dist dist-win32\n    - ci_env\\Scripts\\python.exe -m zipfile -c overviewer-win32-%OVR_VERSION%.zip dist-win32\\overviewer-%OVR_VERSION%\\\n  artifacts:\n    expire_in: 2 weeks\n    paths:\n      - overviewer-win32-*.zip\n\nverify:centos7:\n  image: registry.code.em32.net/overviewer/minecraft-overviewer:centos7-verify\n  stage: verify\n  tags:\n    - docker\n  dependencies:\n    - pkg:centos7rpm\n  script:\n    - ls -l *.rpm\n    - ls -l\n    - echo yum -y install ./Minecraft-Overviewer-0*.rpm\n    - yum -y install ./Minecraft-Overviewer-0*.rpm\n    - which overviewer.py\n    - overviewer.py --verbose --version\n    - wget -N https://s3.amazonaws.com/Minecraft.Download/versions/${MC_VERSION}/${MC_VERSION}.jar -P ~/.minecraft/versions/${MC_VERSION}/\n    - git clone --depth=1 ${EXMAPLE_REPO} maprepo\n    - overviewer.py --check-terrain --verbose\n\n\nverify:debian64:\n  image: debian:jessie\n  stage: verify\n  tags:\n    - docker\n  dependencies:\n    - pkg:debian64\n  script:\n    - apt-get -y update\n    - apt-get -y install wget git\n    - dpkg -i ./minecraft-overviewer*.deb || echo \"\"\n    - apt-get -y -f install\n    - which overviewer.py\n    - overviewer.py --verbose --version\n    - wget -N https://s3.amazonaws.com/Minecraft.Download/versions/${MC_VERSION}/${MC_VERSION}.jar -P ~/.minecraft/versions/${MC_VERSION}/\n    - git clone --depth=1 ${EXMAPLE_REPO} maprepo\n    - overviewer.py --check-terrain --verbose\n\n\n\ndeploy:\n  stage: deploy\n  tags:\n    - diax\n    - deploy\n  variables:\n      GIT_STRATEGY: none\n  dependencies:\n    - render\n  script:\n    - rm -rf render\n    - unzip render.zip\n    - mkdir -p /renders/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n    - cp -r render/* /renders/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n    - echo View render at http://static-backend.overviewer.org/renders/ci/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n\ndeploy:builds:\n  stage: deploy\n  tags:\n    - diax\n    - deploy\n  dependencies:\n    - build:docs\n    - pkg:src\n    - pkg:centos7rpm\n    - pkg:centos7-32rpm\n    - pkg:centos6rpm\n    - pkg:debian64\n    - pkg:win64\n    - pkg:win32\n  script:\n    - ls -ltr\n    - mkdir -p /builds/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n    - cp *.deb /builds/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n    - cp *.rpm /builds/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n    - cp overviewer*.zip /builds/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n    - echo Artifacts copied to http://static-backend.overviewer.org/builds/$CI_BUILD_REF_SLUG/$CI_BUILD_ID/\n\ndeploy:repos:\n  stage: deploy\n  tags:\n    - diax\n    - deploy\n  only:\n    - master\n  dependencies:\n    - pkg:centos7rpm\n    - pkg:centos7-32rpm\n    - pkg:centos6rpm\n    - pkg:debian64\n  script:\n    - ls -ltr\n    - dpkg-sig -g '--use-agent --batch --no-tty' --sign builder *.deb\n    - cp *.deb /repos/debian/files/\n    - make -C /repos/debian/ -f /gitlab_runner/debian/Makefile\n    - /gitlab_runner/rpmsign.sh *.rpm\n    - cp *.el7.*.rpm /repos/rpm/7/x86_64/packages/\n    - cp *.el6.*.rpm /repos/rpm/6/x86_64/packages/\n    - make -C /repos/rpm/ -f /gitlab_runner/rpm/Makefile\n\n\n\nrepo:centos7:\n  image: centos:7\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - yum -y install wget\n    - wget -O /etc/yum.repos.d/overviewer.repo http://overviewer.org/rpms_new/overviewer.repo\n    - yum -y install Minecraft-Overviewer\n    - overviewer.py --verbose --version\n\nrepo:centos6:\n  image: centos:6\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - yum -y install wget\n    - wget -O /etc/yum.repos.d/overviewer.repo http://overviewer.org/rpms_new/overviewer.repo\n    - yum -y install Minecraft-Overviewer\n    - overviewer.py --verbose --version\n\nrepo:fc25:\n  image: fedora:25\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - yum -y install wget\n    - wget -O /etc/yum.repos.d/overviewer.repo http://overviewer.org/rpms_new/overviewer.repo\n    - yum -y install Minecraft-Overviewer\n    - overviewer.py --verbose --version\n\nrepo:fc24:\n  image: fedora:24\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - yum -y install wget\n    - wget -O /etc/yum.repos.d/overviewer.repo http://overviewer.org/rpms_new/overviewer.repo\n    - yum -y install Minecraft-Overviewer\n    - overviewer.py --verbose --version\n\nrepo:fc23:\n  image: fedora:23\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - yum -y install wget\n    - wget -O /etc/yum.repos.d/overviewer.repo http://overviewer.org/rpms_new/overviewer.repo\n    - yum -y install Minecraft-Overviewer\n    - overviewer.py --verbose --version\n\nrepo:jessie:\n  image: debian:jessie\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - apt-get -y update\n    - apt-get -y install wget\n    - wget -O - http://overviewer.org/debian_new/overviewer.gpg.asc | apt-key add -\n    - echo 'deb http://overviewer.org/debian_new ./' >> /etc/apt/sources.list\n    - apt-get -y update\n    - apt-get -y install minecraft-overviewer\n    - overviewer.py --verbose --version\n\nrepo:stretch:\n  image: debian:stretch\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - apt-get -y update\n    - apt-get -y install wget gnupg\n    - wget -O - http://overviewer.org/debian_new/overviewer.gpg.asc | apt-key add -\n    - echo 'deb http://overviewer.org/debian_new ./' >> /etc/apt/sources.list\n    - apt-get -y update\n    - apt-get -y install minecraft-overviewer\n    - overviewer.py --verbose --version\n\nrepo:wheezy:\n  image: debian:wheezy\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - apt-get -y update\n    - apt-get -y install wget\n    - wget -O - http://overviewer.org/debian_new/overviewer.gpg.asc | apt-key add -\n    - echo 'deb http://overviewer.org/debian_new ./' >> /etc/apt/sources.list\n    - apt-get -y update\n    - apt-get -y install minecraft-overviewer\n    - overviewer.py --verbose --version\n\nrepo:artful:\n  image: ubuntu:artful\n  stage: testrepo\n  dependencies: []\n  tags:\n    - docker\n  only:\n    - master\n  script:\n    - apt-get -y update\n    - apt-get -y install wget\n    - wget -O - http://overviewer.org/debian_new/overviewer.gpg.asc | apt-key add -\n    - echo 'deb http://overviewer.org/debian_new ./' >> /etc/apt/sources.list\n    - apt-get -y update\n    - apt-get -y install minecraft-overviewer\n    - overviewer.py --verbose --version\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.11328125,
          "content": "[submodule \"test/data/worlds\"]\n\tpath = test/data/worlds\n\turl = git://github.com/overviewer/Overviewer-Test-Data.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.5283203125,
          "content": "Andrew Brown <brownan@gmail.com> <andrew@fry.(none)>\nAlex Headley <aheadley@waysaboutstuff.com> <aheadley@nexcess.net>\nAlex Headley <aheadley@waysaboutstuff.com> aheadley\nMichael Fallows <michael@fallo.ws> redorkulated\nMaciej Malecki <maciej.malecki@hotmail.com> Maciej Małecki\nNicolas F <ovdev@fratti.ch> <spam@tes-cheese.ch>\nNicolas F <ovdev@fratti.ch> CounterPillow\nNicolas F <ovdev@fratti.ch> <ajidala@gmail.com>\nNicolas F <ovdev@fratti.ch> <kleinnici@frattaroli.ch>\nNicolas F <ovdev@fratti.ch> <CounterPillow@users.noreply.github.com>\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.943359375,
          "content": "language: python\ndist: xenial\npython:\n  - \"3.5\"\n  - \"3.6\"\n  - \"3.7\"\n  - \"3.8\"\n  - \"3.9\"\nenv:\n  - MC_VERSION=1.19\nbefore_install:\n  - wget https://raw.githubusercontent.com/python-pillow/Pillow/master/src/libImaging/Imaging.h\n  - wget https://raw.githubusercontent.com/python-pillow/Pillow/master/src/libImaging/ImagingUtils.h\n  - wget https://raw.githubusercontent.com/python-pillow/Pillow/master/src/libImaging/ImPlatform.h\ninstall:\n  - pip install -q pillow\n  - pip install -q numpy\n  - pip install -q networkx\n  - pip install -q pytest\n  - python3 setup.py build\nbefore_script:\n  - git clone git://github.com/overviewer/Minecraft-Overviewer-Addons.git ~/mcoa/\n  - mkdir -p ~/.minecraft/versions/${MC_VERSION}/\n  - wget -N https://overviewer.org/textures/${MC_VERSION} -O ~/.minecraft/versions/${MC_VERSION}/${MC_VERSION}.jar\nscript:\n  - pytest\n  - python3 overviewer.py ~/mcoa/exmaple ~/test-output --rendermodes=smooth-lighting -p1\nnotifications:\n  email: false\n"
        },
        {
          "name": "CONTRIBUTORS.rst",
          "type": "blob",
          "size": 3,
          "content": "============\nContributors\n============\n\nThis file contains a list of every person who has contributed code to\nOverviewer. It was created from the git commit log, and should include\neveryone, but we may have missed a few and it is manually updated\nnow. If you feel like you've been left out, feel free to tell us!\n\nNot currently included (but hopefully soon) are countless testers and bug\nreporters that helped fixed the many bugs that have popped up in the course of\ndevelopment.\n\n---------------\nOriginal Author\n---------------\n\n * Andrew Brown <brownan@gmail.com>\n\n-------------------------\nLong-term Contributions\n-------------------------\n\nThese contributors have made many changes, over a fairly long time span, or\nfor many different parts of the code.\n\n * Alejandro Aguilera <fenixin@lavabit.com>\n * Andrew Chin <achin@eminence32.net>\n * Aaron Griffith <aargri@gmail.com>\n * Alex Headley <aheadley@waysaboutstuff.com>\n * Alex Jurkiewicz <alex@bluebottle.net.au>\n * Thomas Lake <tswsl1989@sucs.org>\n * Richard Pastrick <rpastric@contre.us>\n * Michael Writhe <michael@writhem.com>\n * Xon <Xon@localhost>\n * Nicolas Frattaroli <ovdev@fratti.ch>\n\n------------------------\nShort-term Contributions\n------------------------\n\nThese contributors have made specific changes for a particular bug fix or\nfeature.\n\n * Albireo <kappa7194@hotmail.it>\n * arrai <array.of.intellect@gmail.com>\n * asmodai <asmodai@in-nomine.org>\n * Mark Barnes <mark.e.barnes@gmail.com>\n * Kyle Brantley <kyle@averageurl.com>\n * but2002 <barryt_9@hotmail.com>\n * Eric Carr <eric@carr.no>\n * cbarber <CraigBarber@taryx.com>\n * Carter Charbonneau <zcarterc@gmail.com>\n * Alex Cline <cline@vivisimo.com>\n * Andrew Clunis <andrew@orospakr.ca>\n * Mark Crichton <crichton@gmail.com>\n * Johannes Dewender <github@JonnyJD.net>\n * Michael Fallows <michael@fallo.ws>\n * Ryan Finnie <ryan@feh.colobox.com>\n * Stephen Fluin <stephen@mistuph.com>\n * Freakus Geekus <freakus@gmail.com>\n * Pierre Guinoiseau <pierre@guinoiseau.eu>\n * Lucas Hereld <duckman@piratehook.com>\n * Benjamin Herr <ben@0x539.de>\n * Ryan Hitchman <hitchmanr@gmail.com>\n * Jenny <jennytoo@gmail.com>\n * Michael Jensen <emjay1988@gmail.com>\n * Sean Kilgore <krystalogik@gmail.com>\n * Johan Kiviniemi <devel@johan.kiviniemi.name>\n * Philip Kovac <pkovac@cs.uml.edu>\n * Maciej Malecki <maciej.malecki@hotmail.com>\n * Ryan McCue <ryanmccue@cubegames.net>\n * Zach McCullough <nosrepa@gmail.com>\n * Mike <mike@snowcrash.ca>\n * Morlok8k <otis.spankmeyer@gmail.com>\n * Adam Novak <interfect@gmail.com>\n * rakama <ramsesakama@gmail.com>\n * Ryan Rector <rmrector@gmail.com>\n * Matti Ruohonen <matti.j.ruohonen@gmail.com>\n * Jason Scheirer <jason.scheirer@gmail.com>\n * Kang Seonghoon <public+git@mearie.org>\n * Gregory Short <gshort2@gmail.com>\n * Socolin <beber-le-scaraber@hotmail.fr>\n * Sam Steele <sam@sigbox.c99.org>\n * stoneLeaf <owi.stoneleaf@gmail.com>\n * timwolla <timwolla@mail.develfusion.com>\n * TJ09 <TJ09@localhost>\n * untergrundbiber <untergrundbiber@github>\n * Philippe Villiers <kissifrot@gmail.com>\n * Jeffrey Warren <warren@mit.edu>\n"
        },
        {
          "name": "COPYING.txt",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.384765625,
          "content": "include COPYING.txt\ninclude README.rst\ninclude CONTRIBUTORS.rst\ninclude overviewer.py\ninclude contribManager.py\ninclude sample_config.py\nrecursive-include overviewer_core *.py\nrecursive-include overviewer_core/src *.c *.h\nrecursive-include overviewer_core/src/primitives *.c *.h\nrecursive-include overviewer_core/data *\nrecursive-include contrib *.py\nrecursive-include docs *\nprune docs/_build\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.50390625,
          "content": "====================================\nMinecraft Overviewer  |Build Status|\n====================================\nBy Andrew Brown and contributors (see CONTRIBUTORS.rst).\n\nDocumentation:\n    http://docs.overviewer.org\n\nGithub code repository:\n    https://github.com/overviewer/Minecraft-Overviewer\n\nTravis-CI:\n    https://travis-ci.org/overviewer/Minecraft-Overviewer\n\nBlog:\n    https://overviewer.org/blog/\n\n\n**PLEASE NOTE: Overviewer is currently unmaintained. PRs will not be merged\nand issues will not be addressed. The website and repository will remain online\nand accessible.**\n\nFor an alternative, please consider using `BlueMap`_ instead.\n\n.. _BlueMap: https://bluemap.bluecolored.de/\n\nThe Minecraft Overviewer is a command-line tool for rendering high-resolution\nmaps of Minecraft worlds. It generates a set of static html and image files and\nuses Leaflet to display a nice interactive map.\n\nThe Overviewer has been in active development for several years and has many\nfeatures, including day and night lighting, cave rendering, mineral overlays,\nand many plugins for even more features! It is written mostly in Python with\ncritical sections in C as an extension module.\n\nGetting Started\n---------------\nAll documentation has been consolidated at our documentation site. For\ninformation on downloading, compiling, installing, and running The Overviewer,\nvisit the docs site.\n\nhttp://docs.overviewer.org\n\nA few helpful tips are below, but everyone is going to want to visit the\ndocumentation site for the most up-to-date and complete set of instructions!\n\nAlternatively, the docs are also in the docs/ directory of the source download.\nLook in there if you can't access the docs site.\n\nExamples\n--------\nSee examples of The Overviewer in action!\n\nhttps://github.com/overviewer/Minecraft-Overviewer/wiki/Map-examples\n\nDisclaimers\n-----------\nBefore you dive into using this, just be aware that, for large maps, there is a\n*lot* of data to parse through and process. If your world is very large, expect\nthe initial render to take at least an hour, possibly more. (Since Minecraft\nmaps are practically infinite, the maximum time this could take is also\ninfinite!)\n\nIf you press ctrl-C, it will stop. The next run will pick up where it left off.\n\nOnce your initial render is done, subsequent renderings will be MUCH faster due\nto all the caching that happens behind the scenes. Just use the same output\ndirectory and it will only update the tiles it needs to.\n\nThere are probably some other minor glitches along the way, hopefully they will\nbe fixed soon. See the `Bugs`_ section below.\n\nViewing the Results\n-------------------\nWithin the output directory you will find two things: an index.html file, and a\ndirectory hierarchy full of images. To view your world, simply open index.html\nin a web browser.\n\nYou can throw these files up to a web server to let others view your map.\n\nBedrock and other formats\n=========================\n\nMinecraft Overviewer only supports the world format from the Java edition of Minecraft.\nMinecraft Bedrock (the Windows 10 version) is not supported by Overviewer, but users\nhave reported success using `Amulet <https://www.amuletmc.com/>`__ to convert\nBedrock worlds to the Java format, and then used Overviewer to render the converted\nworlds.\n\nBugs\n====\n\nFor a current list of issues, visit\nhttps://github.com/overviewer/Minecraft-Overviewer/issues\n\nFeel free to comment on issues, report new issues, and vote on issues that are\nimportant to you.\n\n.. |Build Status| image:: https://secure.travis-ci.org/overviewer/Minecraft-Overviewer.svg?branch=master\n"
        },
        {
          "name": "build-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "contribManager.py",
          "type": "blob",
          "size": 2.2109375,
          "content": "#!/usr/bin/env python3\n\n\"\"\"The contrib manager is used to help control the contrib scripts\nthat are shipped with overviewer in Windows packages.\"\"\"\n\nimport ast\nimport os.path\nimport sys\n\nscripts = {     # keys are names, values are scripts\n    \"convertCyrillic\":  \"cyrillic_convert.py\",\n    \"playerInspect\":    \"playerInspect.py\",\n    \"testRender\":       \"testRender.py\",\n    \"pngit\":            \"png-it.py\",\n    \"gallery\":          \"gallery.py\",\n    \"regionTrimmer\":    \"regionTrimmer.py\",\n    \"contributors\":     \"contributors.py\"\n}\n\n# you can symlink or hardlink contribManager.py to another name to have it\n# automatically find the right script to run.  For example:\n# > ln -s contribManager.py pngit.exe\n# > chmod +x pngit.exe\n# > ./pngit.exe -h\n\n\n# figure out what script to execute\nargv = os.path.basename(sys.argv[0])\n\nif argv[-4:] == \".exe\":\n    argv = argv[0:-4]\nif argv[-3:] == \".py\":\n    argv = argv[0:-3]\n\n\nusage = \"\"\"Usage:\n%s --list-contribs | <script name> <arguments>\n\nExecutes a contrib script.\n\nOptions:\n  --list-contribs           Lists the supported contrib scripts\n\n\"\"\" % os.path.basename(sys.argv[0])\n\nif argv in scripts.keys():\n    script = scripts[argv]\n    sys.argv[0] = script\nelse:\n    if \"--list-contribs\" in sys.argv:\n        for contrib in scripts.keys():\n            # use an AST to extract the docstring for this module\n            script = scripts[contrib]\n            with open(os.path.join(\"contrib\", script)) as f:\n                d = f.read()\n            node = ast.parse(d, script)\n            docstring = ast.get_docstring(node)\n            if docstring:\n                docstring = docstring.strip().splitlines()[0]\n            else:\n                docstring = \"(No description found. Add one by adding a docstring to %s.)\" % script\n            print(\"%s : %s\" % (contrib, docstring))\n        sys.exit(0)\n    if len(sys.argv) > 1 and sys.argv[1] in scripts.keys():\n        script = scripts[sys.argv[1]]\n        sys.argv = [script] + sys.argv[2:]\n    else:\n        print(usage, file=sys.stderr)\n        sys.exit(1)\n\n\ntorun = os.path.join(\"contrib\", script)\n\nif not os.path.exists(torun):\n    print(\"Script '%s' is missing!\" % script, file=sys.stderr)\n    sys.exit(1)\n\nexec(compile(open(torun, \"rb\").read(), torun, 'exec'))\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "overviewer.py",
          "type": "blob",
          "size": 28.8505859375,
          "content": "#!/usr/bin/env python3\n\n#    This file is part of the Minecraft Overviewer.\n#\n#    Minecraft Overviewer is free software: you can redistribute it and/or\n#    modify it under the terms of the GNU General Public License as published\n#    by the Free Software Foundation, either version 3 of the License, or (at\n#    your option) any later version.\n#\n#    Minecraft Overviewer is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General\n#    Public License for more details.\n#\n#    You should have received a copy of the GNU General Public License along\n#    with the Overviewer.  If not, see <http://www.gnu.org/licenses/>.\n\nfrom __future__ import print_function\n\nimport platform\nimport sys\n\n# quick version check\nif sys.version_info[0] == 2 or (sys.version_info[0] == 3 and sys.version_info[1] < 4):\n    print(\"Sorry, the Overviewer requires at least Python 3.4 to run.\")\n    sys.exit(1)\n\nimport os\nimport os.path\nimport re\nimport subprocess\nimport multiprocessing\nimport time\nimport logging\nfrom argparse import ArgumentParser\nfrom collections import OrderedDict\n\nfrom overviewer_core import util\nfrom overviewer_core import logger\nfrom overviewer_core import textures\nfrom overviewer_core import optimizeimages, world\nfrom overviewer_core import config_parser, tileset, assetmanager, dispatcher\nfrom overviewer_core import cache\nfrom overviewer_core import observer\nfrom overviewer_core.nbt import CorruptNBTError\n\nhelptext = \"\"\"\n%(prog)s [--rendermodes=...] [options] <World> <Output Dir>\n%(prog)s --config=<config file> [options]\"\"\"\n\n\ndef main():\n    # bootstrap the logger with defaults\n    logger.configure()\n\n    if os.name == \"posix\":\n        if os.geteuid() == 0:\n            logging.warning(\"You are running Overviewer as root. \"\n                            \"It is recommended that you never do this, \"\n                            \"as it is dangerous for your system. If you are running \"\n                            \"into permission errors, fix your file/directory \"\n                            \"permissions instead. Overviewer does not need access to \"\n                            \"critical system resources and therefore does not require \"\n                            \"root access.\")\n        try:\n            with open(\"/etc/redhat-release\", \"r\") as release_f:\n                rel_contents = release_f.read()\n                try:\n                    major_rel = re.search(r'\\d(\\.\\d+)?', rel_contents).group(0).split('.')[0]\n                    if major_rel == \"6\":\n                        logging.warning(\n                            \"We will be dropping support for this release of your distribution \"\n                            \"soon. Please upgrade as soon as possible, or you will not receive \"\n                            \"future Overviewer updates.\")\n                except AttributeError:\n                    pass\n        except IOError:\n            pass\n\n    try:\n        cpus = multiprocessing.cpu_count()\n    except NotImplementedError:\n        cpus = 1\n\n    avail_north_dirs = ['lower-left', 'upper-left', 'upper-right', 'lower-right', 'auto']\n\n    # Parse for basic options\n    parser = ArgumentParser(usage=helptext)\n    parser.add_argument(\"-c\", \"--config\", dest=\"config\", action=\"store\",\n                        help=\"Specify the config file to use.\")\n    parser.add_argument(\"-p\", \"--processes\", dest=\"procs\", action=\"store\", type=int,\n                        help=\"The number of local worker processes to spawn. Defaults to the \"\n                        \"number of CPU cores your computer has.\")\n\n    parser.add_argument(\"--pid\", dest=\"pid\", action=\"store\", help=\"Specify the pid file to use.\")\n    # Options that only apply to the config-less render usage\n    parser.add_argument(\"--rendermodes\", dest=\"rendermodes\", action=\"store\",\n                        help=\"If you're not using a config file, specify which rendermodes to \"\n                        \"render with this option. This is a comma-separated list.\")\n    parser.add_argument(\"world\", nargs='?',\n                        help=\"Path or name of the world you want to render.\")\n    parser.add_argument(\"output\", nargs='?',\n                        help=\"Output directory for the rendered map.\")\n\n    # Useful one-time render modifiers:\n    render_modifiers = parser.add_mutually_exclusive_group()\n    render_modifiers.add_argument(\"--forcerender\", dest=\"forcerender\", action=\"store_true\",\n                                  help=\"Force re-render the entire map.\")\n    render_modifiers.add_argument(\"--check-tiles\", dest=\"checktiles\", action=\"store_true\",\n                                  help=\"Check each tile on disk and re-render old tiles.\")\n    render_modifiers.add_argument(\"--no-tile-checks\", dest=\"notilechecks\", action=\"store_true\",\n                                  help=\"Only render tiles that come from chunks that have changed \"\n                                  \"since the last render (the default).\")\n\n    # Useful one-time debugging options:\n    parser.add_argument(\"--check-terrain\", dest=\"check_terrain\", action=\"store_true\",\n                        help=\"Try to locate the texture files. Useful for debugging texture\"\n                        \" problems.\")\n    parser.add_argument(\"-V\", \"--version\", dest=\"version\",\n                        help=\"Display version information and then exits.\", action=\"store_true\")\n    parser.add_argument(\"--check-version\", dest=\"checkversion\",\n                        help=\"Fetch information about the latest version of Overviewer.\",\n                        action=\"store_true\")\n    parser.add_argument(\"--update-web-assets\", dest='update_web_assets', action=\"store_true\",\n                        help=\"Update web assets. Will *not* render tiles or update \"\n                        \"overviewerConfig.js.\")\n\n    # Log level options:\n    parser.add_argument(\"-q\", \"--quiet\", dest=\"quiet\", action=\"count\", default=0,\n                        help=\"Print less output. You can specify this option multiple times.\")\n    parser.add_argument(\"-v\", \"--verbose\", dest=\"verbose\", action=\"count\", default=0,\n                        help=\"Print more output. You can specify this option multiple times.\")\n    parser.add_argument(\"--simple-output\", dest=\"simple\", action=\"store_true\", default=False,\n                        help=\"Use a simple output format, with no colors or progress bars.\")\n\n    # create a group for \"plugin exes\"\n    # (the concept of a plugin exe is only loosely defined at this point)\n    exegroup = parser.add_argument_group(\"Other Scripts\", \"These scripts may accept different \"\n                                         \"arguments than the ones listed above.\")\n    exegroup.add_argument(\"--genpoi\", dest=\"genpoi\", action=\"store_true\",\n                          help=\"Run the genPOI script.\")\n    exegroup.add_argument(\"--skip-scan\", dest=\"skipscan\", action=\"store_true\",\n                          help=\"When running GenPOI, don't scan for entities.\")\n    exegroup.add_argument(\"--skip-players\", dest=\"skipplayers\", action=\"store_true\",\n                          help=\"When running GenPOI, don't scan player data.\")\n\n    args, unknowns = parser.parse_known_args()\n\n    # Check for possible shell quoting issues\n    if len(unknowns) > 0 and args.world and args.output:\n        possible_mistakes = []\n        for i in range(len(unknowns) + 1):\n            possible_mistakes.append(\" \".join([args.world, args.output] + unknowns[:i]))\n            possible_mistakes.append(\" \".join([args.output] + unknowns[:i]))\n        for mistake in possible_mistakes:\n            if os.path.exists(mistake):\n                logging.warning(\"Looks like you tried to make me use {0} as an argument, but \"\n                                \"forgot to quote the argument correctly. Try using \\\"{0}\\\" \"\n                                \"instead if the spaces are part of the path.\".format(mistake))\n                parser.error(\"Too many arguments.\")\n        parser.error(\"Too many arguments.\")\n\n    # first thing to do is check for stuff in the exegroup:\n    if args.genpoi:\n        # remove the \"--genpoi\" option from sys.argv before running genPI\n        sys.argv.remove(\"--genpoi\")\n        g = __import__(\"overviewer_core.aux_files\", {}, {}, [\"genPOI\"])\n        g.genPOI.main()\n        return 0\n\n    # re-configure the logger now that we've processed the command line options\n    logger.configure(logging.INFO + 10 * args.quiet - 10 * args.verbose,\n                     verbose=args.verbose > 0, simple=args.simple)\n\n    ##########################################################################\n    # This section of main() runs in response to any one-time options we have,\n    # such as -V for version reporting\n    if args.version:\n        print(\"Minecraft Overviewer %s\" % util.findGitVersion() +\n              \" (%s)\" % util.findGitHash()[:7])\n        try:\n            import overviewer_core.overviewer_version as overviewer_version\n            print(\"built on %s\" % overviewer_version.BUILD_DATE)\n            if args.verbose > 0:\n                print(\"Build machine: %s %s\" % (overviewer_version.BUILD_PLATFORM,\n                                                overviewer_version.BUILD_OS))\n                print(\"Read version information from %r\" % overviewer_version.__file__)\n        except ImportError:\n            print(\"(build info not found)\")\n        if args.verbose > 0:\n            print(\"Python executable: %r\" % sys.executable)\n            print(sys.version)\n        if not args.checkversion:\n            return 0\n    if args.checkversion:\n        print(\"Currently running Minecraft Overviewer %s\" % util.findGitVersion() +\n              \" (%s)\" % util.findGitHash()[:7])\n        try:\n            from urllib import request\n            import json\n            latest_ver = json.loads(request.urlopen(\"http://overviewer.org/download.json\")\n                                    .read())['src']\n            print(\"Latest version of Minecraft Overviewer %s (%s)\" % (latest_ver['version'],\n                                                                      latest_ver['commit'][:7]))\n            print(\"See https://overviewer.org/downloads for more information.\")\n        except Exception:\n            print(\"Failed to fetch latest version info.\")\n            if args.verbose > 0:\n                import traceback\n                traceback.print_exc()\n            else:\n                print(\"Re-run with --verbose for more details.\")\n            return 1\n        return 0\n\n    if args.pid:\n        if os.path.exists(args.pid):\n            try:\n                with open(args.pid, 'r') as fpid:\n                    pid = int(fpid.read())\n                    if util.pid_exists(pid):\n                        print(\"Overviewer is already running (pid exists) - exiting.\")\n                        return 0\n            except (IOError, ValueError):\n                pass\n        with open(args.pid, \"w\") as f:\n            f.write(str(os.getpid()))\n    # if --check-terrain was specified, but we have NO config file, then we cannot\n    # operate on a custom texture path.  we do terrain checking with a custom texture\n    # pack later on, after we've parsed the config file\n    if args.check_terrain and not args.config:\n        import hashlib\n        from overviewer_core.textures import Textures\n        tex = Textures()\n\n        logging.info(\"Looking for a few common texture files...\")\n        try:\n            f = tex.find_file(\"assets/minecraft/textures/block/sandstone_top.png\", verbose=True)\n            f = tex.find_file(\"assets/minecraft/textures/block/grass_block_top.png\", verbose=True)\n            f = tex.find_file(\"assets/minecraft/textures/block/diamond_ore.png\", verbose=True)\n            f = tex.find_file(\"assets/minecraft/textures/block/acacia_planks.png\", verbose=True)\n            # 1.16\n            f = tex.find_file(\"assets/minecraft/textures/block/ancient_debris_top.png\",\n                              verbose=True)\n        except IOError:\n            logging.error(\"Could not find any texture files.\")\n            return 1\n\n        return 0\n\n    # if no arguments are provided, print out a helpful message\n    if not (args.world and args.output) and not args.config:\n        # first provide an appropriate error for bare-console users\n        # that don't provide any options\n        if util.is_bare_console():\n            print(\"\\n\")\n            print(\"The Overviewer is a console program.  Please open a Windows command prompt\")\n            print(\"first and run Overviewer from there.   Further documentation is available at\")\n            print(\"http://docs.overviewer.org/\\n\")\n            print(\"\\n\")\n            print(\"For a quick-start guide on Windows, visit the following URL:\\n\")\n            print(\"http://docs.overviewer.org/en/latest/win_tut/windowsguide/\\n\")\n\n        else:\n            # more helpful message for users who know what they're doing\n            logging.error(\"You must either specify --config or give me a world directory \"\n                          \"and output directory.\")\n            parser.print_help()\n            list_worlds()\n        return 1\n\n    ##########################################################################\n    # This section does some sanity checking on the command line options passed\n    # in. It checks to see if --config was given that no worldname/destdir were\n    # given, and vice versa\n    if args.config and (args.world and args.output):\n        print()\n        print(\"If you specify --config, you need to specify the world to render as well as \"\n              \"the destination in the config file, not on the command line.\")\n        print(\"Put something like this in your config file:\")\n        print(\"worlds['myworld'] = %r\" % args[0])\n        print(\"outputdir = %r\" % (args[1] if len(args) > 1 else \"/path/to/output\"))\n        print()\n        logging.error(\"You cannot specify both --config AND a world + output directory on the \"\n                      \"command line.\")\n        parser.print_help()\n        return 1\n\n    if not args.config and (args.world or args.output) and not (args.world and args.output):\n        logging.error(\"You must specify both the world directory and an output directory\")\n        parser.print_help()\n        return 1\n\n    #########################################################################\n    # These two halfs of this if statement unify config-file mode and\n    # command-line mode.\n    mw_parser = config_parser.MultiWorldParser()\n\n    if not args.config:\n        # No config file mode.\n        worldpath, destdir = map(os.path.expanduser, [args.world, args.output])\n        logging.debug(\"Using %r as the world directory\", worldpath)\n        logging.debug(\"Using %r as the output directory\", destdir)\n\n        mw_parser.set_config_item(\"worlds\", {'world': worldpath})\n        mw_parser.set_config_item(\"outputdir\", destdir)\n\n        rendermodes = ['lighting']\n        if args.rendermodes:\n            rendermodes = args.rendermodes.replace(\"-\", \"_\").split(\",\")\n\n        # Now for some good defaults\n        renders = OrderedDict()\n        for rm in rendermodes:\n            renders[\"world-\" + rm] = {\n                \"world\": \"world\",\n                \"title\": \"Overviewer Render (%s)\" % rm,\n                \"rendermode\": rm,\n            }\n        mw_parser.set_config_item(\"renders\", renders)\n\n    else:\n        if args.rendermodes:\n            logging.error(\"You cannot specify --rendermodes if you give a config file. \"\n                          \"Configure your rendermodes in the config file instead.\")\n            parser.print_help()\n            return 1\n\n        # Parse the config file\n        try:\n            mw_parser.parse(os.path.expanduser(args.config))\n        except config_parser.MissingConfigException as e:\n            # this isn't a \"bug\", so don't print scary traceback\n            logging.error(str(e))\n            util.nice_exit(1)\n\n    # Add in the command options here, perhaps overriding values specified in\n    # the config\n    if args.procs:\n        mw_parser.set_config_item(\"processes\", args.procs)\n\n    # Now parse and return the validated config\n    try:\n        config = mw_parser.get_validated_config()\n    except Exception as ex:\n        if args.verbose:\n            logging.exception(\"An error was encountered with your configuration. \"\n                              \"See the information below.\")\n        else:   # no need to print scary traceback!\n            logging.error(\"An error was encountered with your configuration.\")\n            logging.error(str(ex))\n        return 1\n\n    if args.check_terrain:   # we are already in the \"if configfile\" branch\n        logging.info(\"Looking for a few common texture files...\")\n        for render_name, render in config['renders'].items():\n            logging.info(\"Looking at render %r.\", render_name)\n\n            # find or create the textures object\n            texopts = util.dict_subset(render, [\"texturepath\"])\n\n            tex = textures.Textures(**texopts)\n            f = tex.find_file(\"assets/minecraft/textures/block/sandstone_top.png\", verbose=True)\n            f = tex.find_file(\"assets/minecraft/textures/block/grass_block_top.png\", verbose=True)\n            f = tex.find_file(\"assets/minecraft/textures/block/diamond_ore.png\", verbose=True)\n            f = tex.find_file(\"assets/minecraft/textures/block/oak_planks.png\", verbose=True)\n        return 0\n\n    ############################################################\n    # Final validation steps and creation of the destination directory\n    logging.info(\"Welcome to Minecraft Overviewer version %s (%s)!\" % (util.findGitVersion(), util.findGitHash()[:7]))\n    logging.debug(\"Current log level: {0}.\".format(logging.getLogger().level))\n\n    def set_renderchecks(checkname, num):\n        for name, render in config['renders'].items():\n            if render.get('renderchecks', 0) == 3:\n                logging.warning(checkname + \" ignoring render \" + repr(name) + \" since it's \"\n                                \"marked as \\\"don't render\\\".\")\n            else:\n                render['renderchecks'] = num\n\n    if args.forcerender:\n        logging.info(\"Forcerender mode activated. ALL tiles will be rendered.\")\n        set_renderchecks(\"forcerender\", 2)\n    elif args.checktiles:\n        logging.info(\"Checking all tiles for updates manually.\")\n        set_renderchecks(\"checktiles\", 1)\n    elif args.notilechecks:\n        logging.info(\"Disabling all tile mtime checks. Only rendering tiles \"\n                     \"that need updating since last render.\")\n        set_renderchecks(\"notilechecks\", 0)\n\n    if not config['renders']:\n        logging.error(\"You must specify at least one render in your config file. Check the \"\n                      \"documentation at http://docs.overviewer.org if you're having trouble.\")\n        return 1\n\n    #####################\n    # Do a few last minute things to each render dictionary here\n    for rname, render in config['renders'].items():\n        # Convert render['world'] to the world path, and store the original\n        # in render['worldname_orig']\n        try:\n            worldpath = config['worlds'][render['world']]\n        except KeyError:\n            logging.error(\"Render %s's world is '%s', but I could not find a corresponding entry \"\n                          \"in the worlds dictionary.\", rname, render['world'])\n            return 1\n        render['worldname_orig'] = render['world']\n        render['world'] = worldpath\n\n        # If 'forcerender' is set, change renderchecks to 2\n        if render.get('forcerender', False):\n            render['renderchecks'] = 2\n\n        # check if overlays are set, if so, make sure that those renders exist\n        if render.get('overlay', []) != []:\n            for x in render.get('overlay'):\n                if x != rname:\n                    try:\n                        renderLink = config['renders'][x]\n                    except KeyError:\n                        logging.error(\"Render %s's overlay is '%s', but I could not find a \"\n                                      \"corresponding entry in the renders dictionary.\", rname, x)\n                        return 1\n                else:\n                    logging.error(\"Render %s's overlay contains itself.\", rname)\n                    return 1\n\n    destdir = config['outputdir']\n    if not destdir:\n        logging.error(\"You must specify the output directory in your config file.\")\n        logging.error(\"e.g. outputdir = '/path/to/outputdir'\")\n        return 1\n    if not os.path.exists(destdir):\n        try:\n            os.mkdir(destdir)\n        except OSError:\n            logging.exception(\"Could not create the output directory.\")\n            return 1\n\n    ########################################################################\n    # Now we start the actual processing, now that all the configuration has\n    # been gathered and validated\n    # create our asset manager... ASSMAN\n    assetMrg = assetmanager.AssetManager(destdir, config.get('customwebassets', None))\n\n    # If we've been asked to update web assets, do that and then exit\n    if args.update_web_assets:\n        assetMrg.output_noconfig()\n        logging.info(\"Web assets have been updated.\")\n        return 0\n\n    # The changelist support.\n    changelists = {}\n    for render in config['renders'].values():\n        if 'changelist' in render:\n            path = render['changelist']\n            if path not in changelists:\n                out = open(path, \"w\")\n                logging.debug(\"Opening changelist %s (%s).\", out, out.fileno())\n                changelists[path] = out\n            else:\n                out = changelists[path]\n            render['changelist'] = out.fileno()\n\n    tilesets = []\n\n    # saves us from creating the same World object over and over again\n    worldcache = {}\n    # same for textures\n    texcache = {}\n\n    # Set up the cache objects to use\n    caches = []\n    caches.append(cache.LRUCache(size=100))\n    # TODO: optionally more caching layers here\n\n    renders = config['renders']\n    for render_name, render in renders.items():\n        logging.debug(\"Found the following render thing: %r\", render)\n\n        # find or create the world object\n        try:\n            w = worldcache[render['world']]\n        except KeyError:\n            try:\n                w = world.World(render['world'])\n            except CorruptNBTError as e:\n                logging.error(\"Failed to open world %r.\", render['world'])\n                raise e\n            except world.UnsupportedVersion as e:\n                for ln in str(e).split('\\n'):\n                    logging.error(ln)\n                sys.exit(1)\n\n            worldcache[render['world']] = w\n\n        # find or create the textures object\n        texopts = util.dict_subset(render, [\"texturepath\", \"bgcolor\", \"northdirection\"])\n        texopts_key = tuple(texopts.items())\n        if texopts_key not in texcache:\n            tex = textures.Textures(**texopts)\n            logging.info(\"Generating textures...\")\n            tex.generate()\n            logging.debug(\"Finished generating textures.\")\n            texcache[texopts_key] = tex\n        else:\n            tex = texcache[texopts_key]\n\n        try:\n            logging.debug(\"Asking for regionset %r.\" % render['dimension'][1])\n            rset = w.get_regionset(render['dimension'][1])\n        except IndexError:\n            logging.error(\"Sorry, I can't find anything to render!  Are you sure there are .mca \"\n                          \"files in the world directory of %s?\" % render['world'])\n            return 1\n        if rset is None:    # indicates no such dimension was found\n            logging.warning(\"Sorry, you requested dimension '%s' for %s, but I couldn't find it.\",\n                         render['dimension'][0], render_name)\n            continue\n\n        #################\n        # Apply any regionset transformations here\n\n        # Insert a layer of caching above the real regionset. Any world\n        # tranformations will pull from this cache, but their results will not\n        # be cached by this layer. This uses a common pool of caches; each\n        # regionset cache pulls from the same underlying cache object.\n        rset = world.CachedRegionSet(rset, caches)\n\n        # If a crop is requested, wrap the regionset here\n        if \"crop\" in render:\n            rsets = []\n            for zone in render['crop']:\n                rsets.append(world.CroppedRegionSet(rset, *zone))\n        else:\n            rsets = [rset]\n\n        # If this is to be a rotated regionset, wrap it in a RotatedRegionSet\n        # object\n        if (render['northdirection'] > 0):\n            newrsets = []\n            for r in rsets:\n                r = world.RotatedRegionSet(r, render['northdirection'])\n                newrsets.append(r)\n            rsets = newrsets\n\n        ###############################\n        # Do the final prep and create the TileSet object\n\n        # create our TileSet from this RegionSet\n        tileset_dir = os.path.abspath(os.path.join(destdir, render_name))\n\n        # only pass to the TileSet the options it really cares about\n        render['name'] = render_name    # perhaps a hack. This is stored here for the asset manager\n        tileSetOpts = util.dict_subset(render, [\n            \"name\", \"imgformat\", \"renderchecks\", \"rerenderprob\", \"bgcolor\", \"defaultzoom\",\n            \"imgquality\", \"imglossless\", \"optimizeimg\", \"rendermode\", \"worldname_orig\", \"title\",\n            \"dimension\", \"changelist\", \"showspawn\", \"overlay\", \"base\", \"poititle\", \"maxzoom\",\n            \"showlocationmarker\", \"minzoom\", \"center\"])\n        tileSetOpts.update({\"spawn\": w.find_true_spawn()})  # TODO find a better way to do this\n        for rset in rsets:\n            tset = tileset.TileSet(w, rset, assetMrg, tex, tileSetOpts, tileset_dir)\n            tilesets.append(tset)\n\n    # If none of the requested dimenstions exist, tilesets will be empty\n    if not tilesets:\n        logging.error(\"There are no tilesets to render! There's nothing to do, so exiting.\")\n        return 1\n\n    # Do tileset preprocessing here, before we start dispatching jobs\n    logging.info(\"Preprocessing...\")\n    for ts in tilesets:\n        ts.do_preprocessing()\n\n    # Output initial static data and configuration\n    assetMrg.initialize(tilesets)\n\n    # multiprocessing dispatcher\n    if config['processes'] == 1:\n        dispatch = dispatcher.Dispatcher()\n    else:\n        dispatch = dispatcher.MultiprocessingDispatcher(\n            local_procs=config['processes'])\n    dispatch.render_all(tilesets, config['observer'])\n    dispatch.close()\n\n    assetMrg.finalize(tilesets)\n\n    for out in changelists.values():\n        logging.debug(\"Closing %s (%s).\", out, out.fileno())\n        out.close()\n\n    if config['processes'] == 1:\n        logging.debug(\"Final cache stats:\")\n        for c in caches:\n            logging.debug(\"\\t%s: %s hits, %s misses\", c.__class__.__name__, c.hits, c.misses)\n    if args.pid:\n        os.remove(args.pid)\n\n    logging.info(\"Your render has been written to '%s', open index.html to view it.\" % destdir)\n\n    return 0\n\n\ndef list_worlds():\n    \"Prints out a brief summary of saves found in the default directory\"\n    print()\n    worlds = world.get_worlds()\n    if not worlds:\n        print('No world saves found in the usual place.')\n        return\n    print(\"Detected saves:\")\n\n    # get max length of world name\n    worldNameLen = max([len(x) for x in worlds] + [len(\"World\")])\n\n    formatString = \"%-\" + str(worldNameLen) + \"s | %-8s | %-16s | %s \"\n    print(formatString % (\"World\", \"Playtime\", \"Modified\", \"Path\"))\n    print(formatString % (\"-\" * worldNameLen, \"-\" * 8, '-' * 16, '-' * 4))\n    for name, info in sorted(worlds.items()):\n        if isinstance(name, str) and name.startswith(\"World\") and len(name) == 6:\n            try:\n                world_n = int(name[-1])\n                # we'll catch this one later, when it shows up as an\n                # integer key\n                continue\n            except ValueError:\n                pass\n        if info['LastPlayed'] > 0:\n            timestamp = time.strftime(\"%Y-%m-%d %H:%M\", time.localtime(info['LastPlayed'] / 1000))\n        else:\n            timestamp = \"\"\n        if info['Time'] > 0:\n            playtime = info['Time'] / 20\n            playstamp = '%d:%02d' % (playtime / 3600, playtime / 60 % 60)\n        else:\n            playstamp = \"\"\n        path = info['path']\n        print(formatString % (name, playstamp, timestamp, path))\n    found_corrupt = any([x.get(\"IsCorrupt\") for x in worlds.values()])\n    if found_corrupt:\n        print()\n        print(\"An error has been detected in one or more of your worlds (see the above table).\")\n        print(\"This is usually due to a corrupt level.dat file. Corrupt worlds need to be \"\n              \"repaired before Overviewer can render them.\")\n\n\nif __name__ == \"__main__\":\n    multiprocessing.freeze_support()\n    try:\n        ret = main()\n        util.nice_exit(ret)\n    except textures.TextureException as e:\n        # this isn't a \"bug\", so don't print scary traceback\n        logging.error(str(e))\n        util.nice_exit(1)\n    except Exception as e:\n        logging.exception(\"\"\"An error has occurred. This may be a bug. Please let us know!\nSee http://docs.overviewer.org/en/latest/index.html#help\n\nThis is the error that occurred:\"\"\")\n        util.nice_exit(1)\n    except KeyboardInterrupt:\n        logging.info(\"Interrupted by user. Aborting.\")\n        util.nice_exit(2)\n"
        },
        {
          "name": "overviewer_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample_config.py",
          "type": "blob",
          "size": 1.224609375,
          "content": "# This is a sample config file, meant to give you an idea of how to format your\n# config file and what's possible.\n\n# Define the path to your world here. 'My World' in this case will show up as\n# the world name on the map interface. If you change it, be sure to also change\n# the referenced world names in the render definitions below.\nworlds['My World'] = \"/path/to/your/world\"\n\n# Define where to put the output here.\noutputdir = \"/tmp/test_render\"\n\n# This is an item usually specified in a renders dictionary below, but if you\n# set it here like this, it becomes the default for all renders that don't\n# define it.\n# Try \"smooth_lighting\" for even better looking maps!\nrendermode = \"lighting\"\n\nrenders[\"render1\"] = {\n        'world': 'My World',\n        'title': 'A regular render',\n}\n\n# This example is the same as above, but rotated\nrenders[\"render2\"] = {\n        'world': 'My World',\n        'northdirection': 'upper-right',\n        'title': 'Upper-right north direction',\n}\n\n# Here's how to do a nighttime render. Also try \"smooth_night\" instead of \"night\"\nrenders[\"render3\"] = {\n        'world': 'My World',\n        'title': 'Nighttime',\n        # Notice how this overrides the rendermode default specified above\n        'rendermode': 'night',\n}\n\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.12109375,
          "content": "[pycodestyle]\nmax_line_length = 100\nignore = E129,E221,E222,E241,E741,W503,W504\nstatistics = True\n[isort]\nline_length = 100\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 12.1181640625,
          "content": "#!/usr/bin/env python3\n\nimport sys\nimport traceback\n\n\n# quick version check\nif sys.version_info[0] == 2 or (sys.version_info[0] == 3 and sys.version_info[1] < 4):\n    print(\"Sorry, the Overviewer requires at least Python 3.4 to run.\")\n    sys.exit(1)\n\n\nfrom distutils.core import setup\nfrom distutils.extension import Extension\nfrom distutils.command.build import build\nfrom distutils.command.clean import clean\nfrom distutils.command.build_ext import build_ext\nfrom distutils.command.sdist import sdist\nfrom distutils.cmd import Command\nfrom distutils.dir_util import remove_tree\nfrom distutils.sysconfig import get_python_inc\nfrom distutils import log\nimport os, os.path\nimport glob\nimport platform\nimport time\nimport overviewer_core.util as util\nimport numpy\n\ntry:\n    import py2exe\nexcept ImportError:\n    py2exe = None\n\ntry:\n    import py2app\n    from setuptools.extension import Extension\nexcept ImportError:\n    py2app = None\n\n# make sure our current working directory is the same directory\n# setup.py is in\ncurdir = os.path.split(sys.argv[0])[0]\nif curdir:\n    os.chdir(curdir)\n\n# now, setup the keyword arguments for setup\n# (because we don't know until runtime if py2exe/py2app is available)\nsetup_kwargs = {}\nsetup_kwargs['ext_modules'] = []\nsetup_kwargs['cmdclass'] = {}\nsetup_kwargs['options'] = {}\n\n#\n# metadata\n#\n\n# Utility function to read the README file.\n# Used for the long_description.  It's nice, because now 1) we have a top level\n# README file and 2) it's easier to type in the README file than to put a raw\n# string in below ...\ndef read(fname):\n    return open(fname).read()\n\nsetup_kwargs['name'] = 'Minecraft-Overviewer'\nsetup_kwargs['version'] = util.findGitVersion()\nsetup_kwargs['description'] = 'Generates large resolution images of a Minecraft map.'\nsetup_kwargs['url'] = 'http://overviewer.org/'\nsetup_kwargs['author'] = 'Andrew Brown'\nsetup_kwargs['author_email'] = 'brownan@gmail.com'\nsetup_kwargs['license'] = 'GNU General Public License v3'\nsetup_kwargs['long_description'] = read('README.rst')\n\n# top-level files that should be included as documentation\ndoc_files = ['COPYING.txt', 'README.rst', 'CONTRIBUTORS.rst', 'sample_config.py']\n\n# helper to create a 'data_files'-type sequence recursively for a given dir\ndef recursive_data_files(src, dest=None):\n    if dest is None:\n        dest = src\n\n    ret = []\n    for dirpath, dirnames, filenames in os.walk(src):\n        current_dest = os.path.relpath(dirpath, src)\n        if current_dest == '.':\n            current_dest = dest\n        else:\n            current_dest = os.path.join(dest, current_dest)\n\n        current_sources = map(lambda p: os.path.join(dirpath, p), filenames)\n\n        ret.append((current_dest, current_sources))\n    return ret\n\n# helper to create a 'package_data'-type sequence recursively for a given dir\ndef recursive_package_data(src, package_dir='overviewer_core'):\n    full_src = os.path.join(package_dir, src)\n    ret = []\n    for dirpath, dirnames, filenames in os.walk(full_src, topdown=False):\n        current_path = os.path.relpath(dirpath, package_dir)\n        for filename in filenames:\n            ret.append(os.path.join(current_path, filename))\n\n    return ret\n\n# Finds the system-wide path from within a venv.\n# Taken from https://github.com/pyinstaller/pyinstaller/blob/master/PyInstaller/hooks/pre_find_module_path/hook-distutils.py\ndef find_system_module_path():\n    # opcode is not a virtualenv module, so we can use it to find the stdlib. Technique taken from virtualenv's\n    # \"distutils\" package detection at\n    # https://github.com/pypa/virtualenv/blob/16.3.0/virtualenv_embedded/distutils-init.py#L5\n    import opcode\n\n    system_module_path = os.path.normpath(os.path.dirname(opcode.__file__))\n    return system_module_path\n\n#\n# py2exe options\n#\n\nif py2exe is not None:\n    setup_kwargs['comments'] = \"http://overviewer.org\"\n    # py2exe likes a very particular type of version number:\n    setup_kwargs['version'] = util.findGitVersion().replace(\"-\",\".\")\n\n    setup_kwargs['console'] = ['overviewer.py', 'contribManager.py']\n    setup_kwargs['data_files'] = [('', doc_files)]\n    setup_kwargs['data_files'] += recursive_data_files('overviewer_core/data/textures', 'textures')\n    setup_kwargs['data_files'] += recursive_data_files('overviewer_core/data/web_assets', 'web_assets')\n    setup_kwargs['data_files'] += recursive_data_files('overviewer_core/data/js_src', 'js_src')\n    setup_kwargs['data_files'] += recursive_data_files('contrib', 'contrib')\n    setup_kwargs['zipfile'] = None\n    if platform.system() == 'Windows' and '64bit' in platform.architecture():\n        b = 3\n    else:\n        b = 1\n    setup_kwargs['options']['py2exe'] = {'bundle_files' : b, 'excludes': 'Tkinter', 'includes':\n        ['fileinput', 'overviewer_core.items', 'overviewer_core.aux_files.genPOI']}\n\n#\n# py2app options\n#\n\nif py2app is not None:\n    setup_kwargs['app'] = ['overviewer.py']\n    setup_kwargs['options']['py2app'] = {'argv_emulation' : False}\n    setup_kwargs['setup_requires'] = ['py2app']\n\n#\n# script, package, and data\n#\n\nsetup_kwargs['packages'] = ['overviewer_core', 'overviewer_core/aux_files']\nsetup_kwargs['scripts'] = ['overviewer.py']\nsetup_kwargs['package_data'] = {'overviewer_core': recursive_package_data('data/textures') + recursive_package_data('data/web_assets') + recursive_package_data('data/js_src')}\n\nif py2exe is None:\n    setup_kwargs['data_files'] = [('share/doc/minecraft-overviewer', doc_files)]\n\n\n#\n# c_overviewer extension\n#\n\n# Third-party modules - we depend on numpy for everything\n# Obtain the numpy include directory.  This logic works across numpy versions.\ntry:\n    numpy_include = numpy.get_include()\nexcept AttributeError:\n    numpy_include = numpy.get_numpy_include()\n\ntry:\n    pil_include = os.environ['PIL_INCLUDE_DIR'].split(os.pathsep)\nexcept Exception:\n    pil_include = [ os.path.join(get_python_inc(plat_specific=1), 'Imaging') ]\n    if not os.path.exists(pil_include[0]):\n        pil_include = [ ]\n\n\n# used to figure out what files to compile\n# auto-created from files in primitives/, but we need the raw names so\n# we can use them later.\nprimitives = []\nfor name in glob.glob(\"overviewer_core/src/primitives/*.c\"):\n    name = os.path.split(name)[-1]\n    name = os.path.splitext(name)[0]\n    primitives.append(name)\n\nc_overviewer_files = ['main.c', 'composite.c', 'iterate.c', 'endian.c', 'rendermodes.c', 'block_class.c']\nc_overviewer_files += ['primitives/%s.c' % (mode) for mode in primitives]\nc_overviewer_files += ['Draw.c']\nc_overviewer_includes = ['overviewer.h', 'rendermodes.h']\n\nc_overviewer_files = ['overviewer_core/src/' + s for s in c_overviewer_files]\nc_overviewer_includes = ['overviewer_core/src/' + s for s in c_overviewer_includes]\n\n# really ugly hack for our scuffed CI, remove this once we move\n# to something else. The problem is that virtualenv somehow\n# now overrides the base_prefix (which it shouldn't do) which\n# makes distutils unable to find our Python library\npython_lib_dirs = None\nif platform.system() == 'Windows':\n    ci_python_dir = os.path.split(find_system_module_path())[0]\n    python_lib_dirs = [os.path.join(ci_python_dir, \"Libs\")]\n\nsetup_kwargs['ext_modules'].append(Extension(\n    'overviewer_core.c_overviewer',\n    c_overviewer_files,\n    include_dirs=['.', numpy_include] + pil_include,\n    library_dirs=python_lib_dirs,\n    depends=c_overviewer_includes,\n    extra_link_args=[]\n))\n\n\n# tell build_ext to build the extension in-place\n# (NOT in build/)\nsetup_kwargs['options']['build_ext'] = {'inplace' : 1}\n\n# custom clean command to remove in-place extension\n# and the version file, primitives header\nclass CustomClean(clean):\n    def run(self):\n        # do the normal cleanup\n        clean.run(self)\n\n        # try to remove '_composite.{so,pyd,...}' extension,\n        # regardless of the current system's extension name convention\n        build_ext = self.get_finalized_command('build_ext')\n        ext_fname = build_ext.get_ext_filename('overviewer_core.c_overviewer')\n        versionpath = os.path.join(\"overviewer_core\", \"overviewer_version.py\")\n        primspath = os.path.join(\"overviewer_core\", \"src\", \"primitives.h\")\n\n        for fname in [ext_fname, primspath]:\n            if os.path.exists(fname):\n                try:\n                    log.info(\"removing '%s'\", fname)\n                    if not self.dry_run:\n                        os.remove(fname)\n\n                except OSError:\n                    log.warning(\"'%s' could not be cleaned -- permission denied\",\n                                fname)\n            else:\n                log.debug(\"'%s' does not exist -- can't clean it\",\n                          fname)\n\n        # now try to purge all *.pyc files\n        for root, dirs, files in os.walk(os.path.join(os.path.dirname(__file__), \".\")):\n            for f in files:\n                if f.endswith(\".pyc\"):\n                    if self.dry_run:\n                        log.warning(\"Would remove %s\", os.path.join(root,f))\n                    else:\n                        os.remove(os.path.join(root, f))\n\ndef generate_version_py():\n    try:\n        outstr = \"\"\n        outstr += \"VERSION=%r\\n\" % util.findGitVersion()\n        outstr += \"HASH=%r\\n\" % util.findGitHash()\n        outstr += \"BUILD_DATE=%r\\n\" % time.asctime()\n        outstr += \"BUILD_PLATFORM=%r\\n\" % platform.processor()\n        outstr += \"BUILD_OS=%r\\n\" % platform.platform()\n        f = open(\"overviewer_core/overviewer_version.py\", \"w\")\n        f.write(outstr)\n        f.close()\n    except Exception:\n        print(\"WARNING: failed to build overviewer_version file\")\n\ndef generate_primitives_h():\n    global primitives\n    prims = [p.lower().replace('-', '_') for p in primitives]\n\n    outstr = \"/* this file is auto-generated by setup.py */\\n\"\n    for p in prims:\n        outstr += \"extern RenderPrimitiveInterface primitive_{0};\\n\".format(p)\n    outstr += \"static RenderPrimitiveInterface *render_primitives[] = {\\n\"\n    for p in prims:\n        outstr += \"    &primitive_{0},\\n\".format(p)\n    outstr += \"    NULL\\n\"\n    outstr += \"};\\n\"\n\n    with open(\"overviewer_core/src/primitives.h\", \"w\") as f:\n        f.write(outstr)\n\nclass CustomSDist(sdist):\n    def run(self):\n        # generate the version file\n        generate_version_py()\n        generate_primitives_h()\n        sdist.run(self)\n\nclass CustomBuild(build):\n    def run(self):\n        # generate the version file\n        try:\n            generate_version_py()\n            generate_primitives_h()\n            build.run(self)\n            print(\"\\nBuild Complete\")\n        except Exception:\n            traceback.print_exc(limit=1)\n            print(\"\\nFailed to build Overviewer!\")\n            print(\"Please review the errors printed above and the build instructions\")\n            print(\"at <http://docs.overviewer.org/en/latest/building/>.  If you are\")\n            print(\"still having build problems, file an incident on the github tracker\")\n            print(\"or find us in IRC.\")\n            sys.exit(1)\n\nclass CustomBuildExt(build_ext):\n    def build_extensions(self):\n        c = self.compiler.compiler_type\n        if c == \"msvc\":\n            # customize the build options for this compilier\n            for e in self.extensions:\n                e.extra_link_args.append(\"/MANIFEST\")\n                e.extra_link_args.append(\"/DWINVER=0x060\")\n                e.extra_link_args.append(\"/D_WIN32_WINNT=0x060\")\n        if c == \"unix\":\n            # customize the build options for this compilier\n            for e in self.extensions:\n                e.extra_compile_args.append(\"-Wno-unused-variable\") # quell some annoying warnings\n                e.extra_compile_args.append(\"-Wno-unused-function\") # quell some annoying warnings\n                e.extra_compile_args.append(\"-Wdeclaration-after-statement\")\n                e.extra_compile_args.append(\"-Werror=declaration-after-statement\")\n                e.extra_compile_args.append(\"-O3\")\n                e.extra_compile_args.append(\"-std=gnu99\")\n\n\n        # build in place, and in the build/ tree\n        self.inplace = False\n        build_ext.build_extensions(self)\n        self.inplace = True\n        build_ext.build_extensions(self)\n\n\nsetup_kwargs['cmdclass']['clean'] = CustomClean\nsetup_kwargs['cmdclass']['sdist'] = CustomSDist\nsetup_kwargs['cmdclass']['build'] = CustomBuild\nsetup_kwargs['cmdclass']['build_ext'] = CustomBuildExt\n###\n\nsetup(**setup_kwargs)\n\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}