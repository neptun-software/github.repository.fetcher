{
  "metadata": {
    "timestamp": 1736559594870,
    "page": 228,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "UX-Decoder/Segment-Everything-Everywhere-All-At-Once",
      "stars": 4452,
      "defaultBranch": "v1.0",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.21484375,
          "content": "# IntelliJ project files\n.idea\n*.iml\nout\ngen\n\n### Vim template\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n\n### IPythonNotebook template\n# Temporary data\n.ipynb_checkpoints/\n\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\n#lib/\n#lib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n*.ipynb\n*.params\n# *.json\n.vscode/\n*.code-workspace/\n\nlib/pycocotools/_mask.c\nlib/nms/cpu_nms.c\n\nOUTPUT\nOUTPUT/*\nmodels/*\nDATASET\nDATASET/*\nexternal/\namlt/\namlt/*\nMODELS\nMODELS/*\n\neval_seem.sh\ntrain_seem.sh\ntrain_seem_v0.sh\n\ndraws/\nplot/\n\nConfig/\nConfig/*\n\n*venv/*\n./demo_code/*.pt\n./demo_code/*.pth\n*.pt\n*.pth\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.0078125,
          "content": "# 👀*SEEM:* Segment Everything Everywhere All at Once\n\n:grapes: \\[[Read our arXiv Paper](https://arxiv.org/pdf/2304.06718.pdf)\\] &nbsp; :apple: \\[[Try our Demo](http://semantic-sam.xyzou.net:6090/)\\] \n\nWe introduce **SEEM** that can **S**egment **E**verything **E**verywhere with **M**ulti-modal prompts all at once. SEEM allows users to easily segment an image using prompts of different types including visual prompts (points, marks, boxes, scribbles and image segments) and language prompts (text and audio), etc. It can also work with any combination of prompts or generalize to custom prompts!\n\nby [Xueyan Zou*](https://maureenzou.github.io/), [Jianwei Yang*](https://jwyang.github.io/), [Hao Zhang*](https://scholar.google.com/citations?user=B8hPxMQAAAAJ&hl=en),  [Feng Li*](https://fengli-ust.github.io/), [Linjie Li](https://scholar.google.com/citations?user=WR875gYAAAAJ&hl=en), [Jianfeng Wang](http://jianfengwang.me/), [Lijuan Wang](https://scholar.google.com/citations?user=cDcWXuIAAAAJ&hl=zh-CN), [Jianfeng Gao^](https://www.microsoft.com/en-us/research/people/jfgao/?from=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fum%2Fpeople%2Fjfgao%2F), [Yong Jae Lee^](https://pages.cs.wisc.edu/~yongjaelee/), in **NeurIPS 2023**.\n\nA brief introduction of all the generic and interactive segmentation tasks we can do!\n\n![SEEM design](assets/images/teaser_new.png?raw=true)\n\n## :rocket: Updates\n* **[2023.11.2]**  SEEM is applied in [LLaVA-Interactive](https://llava-vl.github.io/llava-interactive/): an all-in-one demo for Image Chat, Segmentation, Generation and Editing. Experience the future of interactive image editing with visual chat.\n[[Project Page](https://llava-vl.github.io/llava-interactive/)] [[Demo](https://6dd3-20-163-117-69.ngrok-free.app/)] [[Code](https://github.com/LLaVA-VL/LLaVA-Interactive-Demo)] [[Paper](https://arxiv.org/abs/2311.00571)]\n* **[2023.10.23]**  SEEM is used in [Set-of-Mark Prompting](https://som-gpt4v.github.io/): a brand-new visual prompting technique for GPT-4V! It totally unleashes the extraordinary visual grounding power of GPT-4V!\n[[Project Page](https://github.com/microsoft/SoM)] [[Code](https://github.com/microsoft/SoM)] [[Paper](https://arxiv.org/abs/2310.11441)]\n* **[2023.10.10]** We release the training [log](https://huggingface.co/xdecoder/SEEM/raw/main/seem_v1_focall_unicl.log) for SEEM-Large-v1 and [log](https://huggingface.co/xdecoder/SEEM/raw/main/seem_v1_focalt_unicl.log) for SEEM-Tiny-v1!\n* **[2023.10.04]** We are excited to release :white_check_mark: [training/evaluation/demo code](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/edit/v1.0/README.md#bookmark_tabs-catalog), :white_check_mark: [new checkpoints](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/edit/v1.0/README.md#bookmark_tabs-catalog), and :white_check_mark: [comprehensive readmes](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/edit/v1.0/README.md#bookmark_tabs-catalog) for ***both X-Decoder and SEEM***!\n* **[2023.09.25]** Our work has been accepted to NeurIPS 2023!\n* **[2023.07.27]** We are excited to release our [X-Decoder](https://github.com/microsoft/X-Decoder) training code! We will release its descendant SEEM training code very soon!\n* **[2023.07.10]** We release [Semantic-SAM](https://github.com/UX-Decoder/Semantic-SAM), a universal image segmentation model to enable segment and recognize anything at any desired granularity. Code and checkpoint are available!\n* **[2023.05.02]** We have released the [SEEM Focal-L](https://projects4jw.blob.core.windows.net/x-decoder/release/seem_focall_v1.pt) and [X-Decoder Focal-L](https://projects4jw.blob.core.windows.net/x-decoder/release/xdecoder_focall_last.pt) checkpoints and [configs](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/blob/main/demo_code/configs/seem/seem_focall_lang.yaml)!\n* **[2023.04.28]** We have updated the [ArXiv](https://arxiv.org/pdf/2304.06718.pdf) that shows *better interactive segmentation results than SAM*, which trained on x50 more data than us!\n* **[2023.04.26]** We have released the [Demo Code](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/tree/main/demo_code) and [SEEM-Tiny Checkpoint](https://projects4jw.blob.core.windows.net/x-decoder/release/seem_focalt_v1.pt)! Please try the One-Line Started!\n* **[2023.04.20]** SEEM Referring Video Segmentation is out! Please try the [Video Demo](https://huggingface.co/spaces/xdecoder/SEEM) and take a look at the [NERF examples](https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once#tulip-nerf-examples).\n\n## :bookmark_tabs: Catalog\nWe release the following contents for **both SEEM and X-Decoder**:exclamation:\n- [x] Demo Code\n- [x] Model Checkpoint\n- [x] Comprehensive User Guide\n- [x] Training Code\n- [x] Evaluation Code\n\n:point_right: **One-Line SEEM Demo with Linux:**\n```sh\ngit clone git@github.com:UX-Decoder/Segment-Everything-Everywhere-All-At-Once.git && sh assets/scripts/run_demo.sh\n```\n\n:round_pushpin: *[New]* **Getting Started:**\n\n* [INSTALL.md](assets/readmes/INSTALL.md) <br>\n* [DATASET.md](assets/readmes/DATASET.md) <br>\n* [TRAIN.md](assets/readmes/TRAIN.md) <br>\n* [EVAL.md](assets/readmes/EVAL.md)\n\n:round_pushpin: *[New]* **Latest Checkpoints and Numbers:**\n|                 |                                                                                      |          | COCO |      |      | Ref-COCOg |      |      | VOC   |       | SBD   |       |\n|-----------------|---------------------------------------------------------------------------------------------|------------|------|------|------|-----------|------|------|-------|-------|-------|-------|\n| Method          |  Checkpoint                                                                                  | Backbone | PQ &uarr;  | mAP &uarr; | mIoU &uarr; | cIoU  &uarr; | mIoU &uarr; | AP50 &uarr; | NoC85 &darr; | NoC90 &darr;| NoC85 &darr;| NoC90 &darr;|\n| X-Decoder       |  [ckpt](https://huggingface.co/xdecoder/X-Decoder/resolve/main/xdecoder_focalt_last.pt) | Focal-T  | 50.8 | 39.5 | 62.4 | 57.6      | 63.2 | 71.6 | -     | -     | -     | -     |\n| X-Decoder-oq201 |  [ckpt](https://huggingface.co/xdecoder/X-Decoder/resolve/main/xdecoder_focall_last.pt) | Focal-L  | 56.5 | 46.7 | 67.2 | 62.8      | 67.5 | 76.3 | -     | -     | -     | -     |\n| SEEM_v0            | [ckpt](https://huggingface.co/xdecoder/SEEM/resolve/main/seem_focalt_v0.pt)      | Focal-T  | 50.6 | 39.4 | 60.9 | 58.5      | 63.5 | 71.6 | 3.54  | 4.59  | *     | *     |\n| SEEM_v0            |  -                                                                                           | Davit-d3 | 56.2 | 46.8 | 65.3 | 63.2      | 68.3 | 76.6 | 2.99  | 3.89  | 5.93  | 9.23  |\n| SEEM_v0      | [ckpt](https://huggingface.co/xdecoder/SEEM/resolve/main/seem_focall_v0.pt)       | Focal-L  | 56.2 | 46.4 | 65.5 | 62.8      | 67.7 | 76.2 | 3.04  | 3.85  | *     | *     |\n| SEEM_v1      | [ckpt](https://huggingface.co/xdecoder/SEEM/resolve/main/seem_samvitb_v1.pt)       | SAM-ViT-B  | 52.0 | 43.5 | 60.2 | 54.1      | 62.2 | 69.3 | 2.53  | 3.23  | *     | *     |\n| SEEM_v1       | [ckpt](https://huggingface.co/xdecoder/SEEM/resolve/main/seem_samvitl_v1.pt)       | SAM-ViT-L  | 49.0 | 41.6 | 58.2 | 53.8      | 62.2 | 69.5 | 2.40  | 2.96  | *     | *     |\n| SEEM_v1      | [ckpt](https://huggingface.co/xdecoder/SEEM/resolve/main/seem_focalt_v1.pt)/[log](https://huggingface.co/xdecoder/SEEM/raw/main/seem_v1_focalt_unicl.log)       | Focal-T  | 50.8 | 39.4 | 60.7 |   58.5    |  63.7 | 72.0 | 3.19  | 4.13  | *     | *     |\n| SEEM_v1      | [ckpt](https://huggingface.co/xdecoder/SEEM/blob/main/seem_focall_v1.pt)/[log](https://huggingface.co/xdecoder/SEEM/blob/main/seem_v1_focall_unicl.log)      | Focal-L  | 56.1 | 46.3 | 65.8 |   62.4    |  67.8 | 76.0 | 2.66  | 3.44  | *     | *     |\n\n**SEEM_v0:** Supporting Single Interactive object training and inference <br>\n**SEEM_v1:** Supporting Multiple Interactive objects training and inference\n\n<div  align=\"center\">    \n  <img src=\"https://user-images.githubusercontent.com/11957155/233255289-35c0c1e2-35f7-48e4-a7e9-68da50c839d3.gif\" width=\"400\" />\n  <img src=\"https://user-images.githubusercontent.com/11957155/233526415-a0a44963-19a3-4e56-965a-afaa598e6127.gif\" width=\"400\" />   \n</div>\n\n:fire: **Related projects:**\n\n* [FocalNet](https://github.com/microsoft/FocalNet) and [DaViT](https://github.com/dingmyu/davit) : We used FocalNet and DaViT as the vision backbones.\n* [UniCL](https://github.com/microsoft/UniCL) : We used unified contrastive learning technique for learning image-text representations.\n* [X-Decoder](https://github.com/microsoft/X-Decoder) : We built SEEM based on X-Decoder which is a generalist decoder that can do multiple tasks with one model only.\n\n:fire: **Other projects you may find interesting:**\n* [Semantic-SAM](https://github.com/UX-Decoder/Semantic-SAM), a universal image segmentation model to enable segment and recognize anything at any desired granularity\n* [OpenSeed](https://github.com/IDEA-Research/OpenSeeD) : Strong open-set segmentation methods.\n* [Grounding SAM](https://github.com/IDEA-Research/Grounded-Segment-Anything) : Combining Grounding DINO and Segment Anything; [Grounding DINO](https://github.com/IDEA-Research/GroundingDINO): A strong open-set detection model.\n* [X-GPT](https://github.com/microsoft/X-Decoder/tree/xgpt) : Conversational Visual Agent supported by X-Decoder.\n* [LLaVA](https://github.com/haotian-liu/LLaVA) : Large Language and Vision Assistant.\n\n## :bulb: Highlights\nInspired by the appealing universal interface in LLMs, we are advocating a universal, interactive multi-modal interface for any type of segmentation with **ONE SINGLE MODEL**. We emphasize **4** important features of **SEEM** below.\n1. **Versatility**: work with various types of prompts, for example, clicks, boxes, polygons, scribbles, texts, and referring image;\n2. **Compositionaliy**: deal with any compositions of prompts;\n3. **Interactivity**: interact with user in multi-rounds, thanks to the memory prompt of **SEEM** to store the session history;\n4. **Semantic awareness**: give a semantic label to any predicted mask;\n\n## :unicorn: How to use the demo\n- Try our default examples first;\n- Upload an image;\n- Select at least one type of prompt of your choice (If you want to use referred region of another image please check \"Example\" and upload another image in referring image panel);\n- Remember to provide the actual prompt for each prompt type you select, otherwise you will meet an error (e.g., remember to draw on the referring image);\n- Our model by default support the **vocabulary** of COCO 80 categories, others will be classified to 'others' or misclassified. If you want to segment using open-vocabulary labels, include the text label in 'text' button after drawing scribbles.\n- Click \"Submit\" and wait for a few seconds.\n\n## :volcano: An interesting example\nAn example of Transformers. The referred image is the truck form of Optimus Prime. Our model can always segment Optimus Prime in target images no matter which form it is in. Thanks Hongyang Li for this fun example.\n\n<div  align=\"center\">    \n<img src=\"assets/images/transformers_gh.png\" width = \"700\" alt=\"assets/images/transformers_gh.png\" align=center />\n</div>\n\n## :tulip: NERF Examples\n* Inspired by the example in [SA3D](https://github.com/Jumpat/SegmentAnythingin3D), we tried SEEM on NERF Examples and works well :)\n\n<div  align=\"center\">    \n  <img src=\"https://user-images.githubusercontent.com/11957155/234230320-2189056d-1c89-4f0c-88da-851d12e8323c.gif\" width=\"400\" />\n  <img src=\"https://user-images.githubusercontent.com/11957155/234231284-0adc4bae-ef90-41d3-9883-41f6407a883b.gif\" width=\"400\" /> \n</div>\n\n## :camping: Click, scribble to mask\nWith a simple click or stoke from the user, we can generate the masks and the corresponding category labels for it.\n\n![SEEM design](assets/images/click.png?raw=true)\n## :mountain_snow: Text to mask\nSEEM can generate the mask with text input from the user, providing multi-modality interaction with human.\n\n![example](assets/images/text.png?raw=true)\n<!-- \n<div  align=\"center\">    \n<img src=\"assets/images/text.png\" width = \"700\" alt=\"assets/images/text.png\" align=center />\n</div> -->\n\n## :mosque: Referring image to mask\nWith a simple click or stroke on the referring image, the model is able to segment the objects with similar semantics on the target images.\n![example](assets/images/ref_seg.png?raw=true)\n\nSEEM understands the spatial relationship very well. Look at the three zebras! The segmented zebras have similar positions with the referred zebras. For example, when the leftmost zebra is referred on the upper row, the leftmost zebra on the bottom row is segmented.\n![example](assets/images/spatial_relation.png?raw=true)\n\n## :blossom: Referring image to video mask\nNo training on video data needed, SEEM works perfectly for you to segment videos with whatever queries you specify!\n![example](assets/images/referring_video_visualize.png?raw=true)\n\n## :sunflower: Audio to mask\nWe use Whisper to turn audio into text prompt to segment the object. Try it in our demo!\n\n<div  align=\"center\">    \n<img src=\"assets/images/audio.png\" width = \"900\" alt=\"assets/images/audio.png\" align=center />\n</div>\n\n<!-- ## 🔥 Combination of different prompts to mask -->\n\n## :deciduous_tree: Examples of different styles\nAn example of segmenting a meme.\n<div  align=\"center\">    \n<img src=\"assets/images/emoj.png\" width = \"500\" alt=\"assets/images/emoj.png\" align=center />\n</div>\n\nAn example of segmenting trees in cartoon style.\n<div  align=\"center\">    \n<img src=\"assets/images/trees_text.png\" width = \"700\" alt=\"assets/images/trees_text.png\" align=center />\n</div>\n\nAn example of segmenting a Minecraft image.\n<div  align=\"center\">    \n<img src=\"assets/images/minecraft.png\" width = \"700\" alt=\"assets/images/minecraft.png\" align=center />\n</div>\n<!-- ![example](assets/images/minecraft.png?raw=true) -->\nAn example of using referring image on a popular teddy bear.\n\n![example](assets/images/fox_v2.png?raw=true)\n\n## Model\n![SEEM design](assets/images/model.png?raw=true)\n\n## Comparison with SAM\nIn the following figure, we compare the levels of interaction and semantics of three segmentation tasks (edge detection, open-set, and interactive segmentation). Open-set Segmentation usually requires a high level of semantics and does not require interaction. Compared with [SAM](https://arxiv.org/abs/2304.02643), SEEM covers a wider range of interaction and semantics levels.  For example, SAM only supports limited interaction types like points and boxes, while misses high-semantic tasks since it does not output semantic labels itself. The reasons are: First, SEEM has a unified prompt encoder that encodes all visual and language prompts into a joint representation space. In consequence, SEEM can support more general usages. It has potential to extend to custom prompts. Second, SEEM works very well on text to mask (grounding segmentation) and outputs semantic-aware predictions.\n<div  align=\"center\">    \n<img src=\"assets/images/compare.jpg\" width = \"500\" alt=\"assets/images/compare.jpg\" align=center />\n</div>\n<!-- This figure shows a comparison of our model with concurrent work SAM on the level of interactions and semantics. The x-axis and y-axis denote the level of interaction and semantics, respectively. Three segmentation tasks are shown, including Open-set Segmentation, Edge detection, and Interactive Segmentation. These tasks have different levels of interactions and semantics. For example, Open-set Segmentation usually requires a high level of semantics and does not require interaction. Compared with SAM, our model covers a wider range of interaction and semantics levels. For example, SAM only supports limited interaction types like points and boxes, while misses high-semantic tasks since it does not output semantic labels itself. Note that although we do not report edge detection results, our model can support it by simply converting masks to edges. -->\n\n## :cupid: Acknowledgements\n- We appreciate hugging face for the GPU support on demo!\n\n\n<!-- ## Citation (update when paper is available on arxiv)\nIf you find this project helpful for your research, please consider citing the following BibTeX entry.\n```BibTex\n\n``` -->\n"
        },
        {
          "name": "__init__.py",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "entry.py",
          "type": "blob",
          "size": 2.341796875,
          "content": "# --------------------------------------------------------\n# X-Decoder -- Generalized Decoding for Pixel, Image, and Language\n# Copyright (c) 2022 Microsoft\n# Licensed under The MIT License [see LICENSE for details]\n# Modified by Xueyan Zou (xueyan@cs.wisc.edu)\n# --------------------------------------------------------\n\nimport os\nimport sys\nimport torch\nimport logging\nimport wandb\n\nfrom utils.arguments import load_opt_command\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\ndef init_wandb(args, job_dir, entity='xueyanz', project='xdecoder', job_name='tmp'):\n    wandb_dir = os.path.join(job_dir, 'wandb')\n    os.makedirs(wandb_dir, exist_ok=True)\n    runid = None\n    if os.path.exists(f\"{wandb_dir}/runid.txt\"):\n        runid = open(f\"{wandb_dir}/runid.txt\").read()\n\n    wandb.init(project=project,\n            name=job_name,\n            dir=wandb_dir,\n            entity=entity,\n            resume=\"allow\",\n            id=runid,\n            config={\"hierarchical\": True},)\n\n    open(f\"{wandb_dir}/runid.txt\", 'w').write(wandb.run.id)\n    wandb.config.update({k: args[k] for k in args if k not in wandb.config})\n\ndef main(args=None):\n    '''\n    [Main function for the entry point]\n    1. Set environment variables for distributed training.\n    2. Load the config file and set up the trainer.\n    '''\n\n    opt, cmdline_args = load_opt_command(args)\n    command = cmdline_args.command\n\n    if cmdline_args.user_dir:\n        absolute_user_dir = os.path.abspath(cmdline_args.user_dir)\n        opt['base_path'] = absolute_user_dir\n\n    # update_opt(opt, command)\n    world_size = 1\n    if 'OMPI_COMM_WORLD_SIZE' in os.environ:\n        world_size = int(os.environ['OMPI_COMM_WORLD_SIZE'])\n\n    if opt['TRAINER'] == 'xdecoder':\n        from trainer import XDecoder_Trainer as Trainer\n    else:\n        assert False, \"The trainer type: {} is not defined!\".format(opt['TRAINER'])\n    \n    trainer = Trainer(opt)\n    os.environ['TORCH_DISTRIBUTED_DEBUG']='DETAIL'\n\n    if command == \"train\":\n        if opt['rank'] == 0 and opt['WANDB']:\n            wandb.login(key=os.environ['WANDB_KEY'])\n            init_wandb(opt, trainer.save_folder, job_name=trainer.save_folder)\n        trainer.train()\n    elif command == \"evaluate\":\n        trainer.eval()\n    else:\n        raise ValueError(f\"Unknown command: {command}\")\n\nif __name__ == \"__main__\":\n    main()\n    sys.exit(0)\n"
        },
        {
          "name": "inference",
          "type": "tree",
          "content": null
        },
        {
          "name": "modeling",
          "type": "tree",
          "content": null
        },
        {
          "name": "pipeline",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.5859375,
          "content": "[build-system]\nrequires = [\"setuptools>=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"SEEM\"\nversion = \"1.0\"\ndescription = \"Segment Everything Everywhere All at Once.\"\nreadme = \"README.md\"\nrequires-python = \">=3.8\"\nclassifiers = [\n    \"Programming Language :: Python :: 3\",\n    \"License :: OSI Approved :: Apache Software License\",\n]\n\ndependencies = [\n    \"torch\",\n    \"torchvision\",\n    \"pillow==9.4.0\",\n    \"opencv-python==4.8.1.78\",\n    \"pyyaml==6.0.1\",\n    \"json_tricks==3.17.3\",\n    \"yacs==0.1.8\",\n    \"scikit-learn==1.3.1\",\n    \"pandas==2.0.3\",\n    \"timm==0.4.12\",\n    \"numpy==1.23.1\",\n    \"einops==0.7.0\",\n    \"fvcore==0.1.5.post20221221\",\n    \"transformers==4.34.0\",\n    \"sentencepiece==0.1.99\",\n    \"ftfy==6.1.1\",\n    \"regex==2023.10.3\",\n    \"nltk==3.8.1\",\n    \"vision-datasets==0.2.2\",\n    \"cython==3.0.2\",\n    \"pycocotools==2.0.7\",\n    \"diffdist==0.1\",\n    \"pyarrow==13.0.0\",\n    \"cityscapesscripts==2.2.2\",\n    \"shapely==1.8.0\",\n    \"scikit-image==0.21.0\",\n    \"mup==1.0.0\",\n    \"accelerate==0.23.0\",\n    \"kornia==0.7.0\",\n    \"deepspeed==0.10.3\",\n    \"wandb==0.15.12\",\n    \"infinibatch==0.1.1\",\n    \"gradio==3.42.0\",     \n    \"openai-whisper\",    \n]\n\n[tool.poetry.dependencies]\ndetectron2 = {git = \"https://github.com/MaureenZOU/detectron2-xyz.git\"}\n\n\n[project.urls]\n\"Paper\" = \"https://arxiv.org/abs/2304.06718\"\n\"Code\" = \"https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/tree/v1.0\"\n\"Bug Tracker\" = \"https://github.com/UX-Decoder/Segment-Everything-Everywhere-All-At-Once/issues\"\n\n[tool.setuptools.packages.find]\nexclude = [\"assets*\"]\n\n[tool.wheel]\nexclude = [\"assets*\"]\n"
        },
        {
          "name": "trainer",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}