{
  "metadata": {
    "timestamp": 1736560355988,
    "page": 888,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sabeechen/hassio-google-drive-backup",
      "stars": 3319,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.267578125,
          "content": "[run]\nomit =\n    hassio-google-drive-backup/backup/logger.py\n    hassio-google-drive-backup/backup/tracing_session.py\n    hassio-google-drive-backup/backup/ui/debug.py\n    hassio-google-drive-backup/backup/server/cloudlogger.py\n    hassio-google-drive-backup/backup/debug/*\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.517578125,
          "content": "*.pyc\n*.dat\n*.id\n*pycache*\n.pytest_cache/*\nhtmlcov/*\n.mypy_cache/*\n*drive_creds*\ndev/backup/*.tar\nhassio-google-drive-backup/backup/__pycache__/server.cpython-37.pyc.16291344\n.vscode/tags\ndev/error.py\ndev/data/retained.json\n*.egg-info\nhassio-google-drive-backup/dev/data/id.json\nhassio-google-drive-backup/dev/data/stop_addon_state.json\nhassio-google-drive-backup/dev/data/retained.json\njunit/test-results.xml\n.coverage\ncoverage.xml\nhassio-google-drive-backup/dev/data/data_cache.json\nhassio-google-drive-backup/dev/data/*.backup\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.2109375,
          "content": "{\n  \"printWidth\": 120,\n  \"trailingComma\": \"all\",\n  \"quoteProps\": \"preserve\",\n  \"singleQuote\": false,\n  \"overrides\": [\n    {\n      \"files\": \"*.jinja2\",\n      \"options\": {\n        \"printWidth\": 180\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.4287109375,
          "content": "# Contributing\n\n## About the project\n\nThe project is mostly maintained by Stephen Beechen (stephen@beechens.com) whom you can reach out to for guidance. Before digging in to this, you might be helpful to familiarize yourself with some of the technologies used in the project.\n\n- [Developing Addons for Home Assistant](https://developers.home-assistant.io/docs/add-ons) - Useful to understand how addons work.\n- [Python](https://www.python.org/) - The addon is written in Python 3.11 and makes heavy use of the asyncio framework.\n- [AIOHTTP](https://docs.aiohttp.org/en/stable/) - The addon serves its web interface through an AIOHTTP server, and uses the AIOHTTP client library for all web requests.\n- [pytest](https://docs.pytest.org/en/latest/) - The addon uses pytest for all of its test.\n- [Visual Studio Code](https://code.visualstudio.com/) - The addon codebase is designed to work with Visual Studio code, but in practice you could use any editor (it would be harder). These instructions assume you're using VSCode, it’s a free cross-platform download.\n- [Docker](https://www.docker.com/) - All Home Assistant addons run in their own Docker container, and while you could certainly contribute without knowing much about it, knowledge of the basic commands will help.\n\n## Approval Process\n - Please only make PR's against the [dev branch](https://github.com/sabeechen/hassio-google-drive-backup/tree/dev).  Making a PR against master/main will result in an embarrassing song-and-dance where I ignore your PR for a little while, then ask you to remake it against dev, then ignore it again for a little while out of spite.  Neither of us wants this, and you can avoid it by making it against dev in the first place.\n - If you're making a small change that fixes a bug I'm going to approve your PR quickly and heap you with praise.  If you make a huge change without talking to me first I'm going to review your PR slowly and move through it with suspicion.  A spectrum exists between those two extremes.  Please try to understand that I'm the one ultimately on the line for the addon's reputation.\n   - Breaking up a large change into smaller manageable pieces make things easier.\n   - You can reach out to me in any of these ways to talk about a change you're considering:\n     - Preferred: [File an issue on github](https://github.com/sabeechen/hassio-google-drive-backup/issues) proposing your changes.\n     - Next best: Email: stephen@beechens.com\n     - Acceptable but worst: Home Assistant Forums: [@sabeechen](https://community.home-assistant.io/u/sabeechen/summary)\n - Any submissions to the dev branch get automatically built and pushed to a staging version of the addon that you can install using [this repository](https://github.com/sabeechen/hgdb-dev-staging).  Its identical to the \"Production\" addon but talks to [https://dev.habackup.io](https://dev.habackup.io) instead of [https://habackup.io](https://habackup.io).\n - Releases of the addon are made as-needed for bug fixes and new features.  If you've made a signifigant change to the addon, you can expect me to communicate to you when you can expect to see it released.  Important fixes will often demand an out-of-schedule rushed release.\n## Setting up a Development Environment\n\n### Easy: Using the Dev Container\nIf the you open the repository folder in Visual Studio code with docker installed, it will notice that it provides a devcontainer configuration and ask you to open it.  This is the easiest method to use, sets up all the necessary plugins and dependencies, and its how I (the primary maintainer of the project) develop the addon.\n\n### Harder but also works: Manual Setup\n1. Install [Visual Studio Code](https://code.visualstudio.com/)\n2. Install [Python 3.11](https://www.python.org/downloads/) for your platform.\n3. Install a git client. I like [GitHub Desktop](https://desktop.github.com/)\n4. Clone the project repository\n   ```\n   https://github.com/sabeechen/hassio-google-drive-backup.git\n   ```\n5. Open Visual studio Code, go to the extension menu, and install the Desktop] (Python extension from Microsoft. It may prompt you to choose a Python interpreter (you want Python 3.11) and select a test framework (you want pytest).\n6. <kbd>File</kbd> > <kbd>Open Folder</kbd> to open the cloned repository folder.\n7. Open the terminal (`Ctrl` + `Shift` + <code>`</code>) and install the Python packages required for development:\n   ```\n   > python3.11 -m pip install -r .devcontainer/requirements-dev.txt\n   ```\n   That should set you up!\n\n## Helpful Pointers\n\nHere are some pointers about how things work that might get you to where you want to get faster:\n\n- Constructor dependencies are handled through dependency injection. You can look at the attributes defined on most any class or constructor to see how they should be defined.\n- The project has almost **100% test coverage** and the expectation for all submissions (including my own) is that they will not lower that number. If you change something, your PR **must** include tests that cover it. The only exception is all the javascript, which has no unit tests.\n- The web server for the addon is in `uiserver.py`.\n- You'll want to make your changes to the `dev` branch, since the `master` branch is where new releases are made.\n\n## Trying Out Changes\n\nTo try out changes locally during development, I've written a server that simulates Home Assistant, Supervisor, habackup.io, and Google Drive HTTP endpoints that the addon expects in [simulationserver.py](https://github.com/sabeechen/hassio-google-drive-backup/blob/master/hassio-google-drive-backup/dev/simulationserver.py). It’s a beast of a class and does a lot. It simulates the services for development and is also used to make unit tests work.\n\nTo give it a shot, open up Visual Studio's \"Run\" Dialog and start up `Run Mock Backend Server`. Then also run one of these options:\n\n- `Run Addons (Dev Backends)` - This starts up the addon web server and connects it to the simulated Home Assistant, Supervisor, and Google Drive. All of the functionality of the addon is supported (creating/deleting backups, authenticating with Google drive, etc.).\n- `Run Addons (Dev Drive)` - This should be unused by contributors, as its only used for testing prior to a release by @sabeechen.\n- `Run Addons (Real Drive)` - This uses a simulated Home Assistant and Supervisor, but connects to the real Google Drive. You'll have to use a real Google account to work with this configuration.\n\n## The Staging Addon\nAny submissions made to the dev branch (including PR's) get automatically built and deployed to a staging version of the addon.  You can install this by adding the repository [https://github.com/sabeechen/hgdb-dev-staging](https://github.com/sabeechen/hgdb-dev-staging) to your home assistant machine.  This addon is identical to what will be released with the next version of the addon but:\n - It is a separate \"App\" in Google's perspective, so it can't see any backups created by the \"Production\" addon.\n - Its not reocmmended to run it along side the \"Production\" addon on the same machine (it see's the same backups).\n - It talks to [https://dev.habackup.io](https://dev.habackup.io) instead of [https://habackup.io](https://habackup.io) to authenticate with Google Drive.\n - If you submit code to the dev branch, you should see an update to the addon show up in Home Assistant ~25 minutes later.\n - It is the \"bleeding edge\" of changes, so it might have bugs.  Be warned!\n\nFor some changes, just testing locally might not be enough, you may want to run it as a real addon. You can do this roughly following the instruction for [Add-on Testing](https://developers.home-assistant.io/docs/add-ons/testing#local-build). Here are the two methods I've found work best:\n\n- ### Building a Local Addon Container in Home Assistant\n  Copy the folder `hassio-google-drive-backup` (the one with `config.json` inside it) into the local addon folder (you'll need the samba addon or something similar to do so). Modify the uploaded `config.json` to remove the `\"image\"` line near the bottom. Then in Home Assistant Web-UI go to <kbd>Supervisor</kbd> -> <kbd>Addon-Store</kbd>, <kbd>Reload</kbd>, and the addon should show up under \"Local Addons\". It should include buttons for building the container, starting/stopping etc.\n- ### Building a container\n  You could also build the container as a docker container locally, upload it to Docker Hub, and then have Home Assistant download the image. First install docker desktop, then:\n  ```bash\n  > cd hassio-google-drive-backup\n  > docker login\n  > docker build -f Dockerfile-addon -t YOUR_DOCKER_USERNAME/hassio-google-drive-backup-amd64:dev_testing --build-arg BUILD_FROM=homeassistant/amd64-base .\n  > docker push YOUR_DOCKER_USERNAME/hassio-google-drive-backup-amd64:dev-testing\n  ```\n  Then make a folder in the local addon directory like before, but only copy in config.json. change these two keys in config.json to match what you uploaded:\n  ```json\n  {\n    \"image\": \"YOUR_DOCKER_USERNAME/hassio-google-drive-backup-{arch}\",\n    \"version\": \"dev-testing\"\n  }\n  ```\n  From there you should be able to see the addon in local addons, and installing will download the container from Docker Hub. To make it see changes, you'll need to rebuild and reupload the container, then uninstall and reinstall the addon in Home Assistant. I've found this to be faster than rebuilding the image from scratch within Home Assistant.\n  > Note: Make sure you stop any other versions of the installed addon in Home Assistant before starting it as a local addon.\n\nI haven't tried using the Supervisor's new devcontainers for development yet (the addon predates this), let me know if you can get that working well.\n\n## Running Tests\n\nYou should be able to run tests from within the Visual Studio tests tab. Make sure all the tests pass before you to make a PR. You can also run them from the command line with:\n\n```bash\n> python3.11 -m pytest hassio-google-drive-backup\n```\n\n## Writing Tests\n\nTest dependencies get injected by `pytest`, which are defined in the [conftest.py](https://github.com/sabeechen/hassio-google-drive-backup/blob/master/hassio-google-drive-backup/tests/conftest.py) file. This is responsible for starting the simulation server, mocking necessary classes, etc.\nMost classes have their own test file in the [tests](https://github.com/sabeechen/hassio-google-drive-backup/tree/master/hassio-google-drive-backup/tests) directory. If you change anything in the code, you must also submit tests with your PR that verify that change. The only exception is that all the addon's JavaScript, I've never found a good way to do JavaScript tests.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0673828125,
          "content": "\r\nMIT License\r\n\r\nCopyright (c) 2023 Stephen Beechen\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE."
        },
        {
          "name": "LOCAL_AUTH.md",
          "type": "blob",
          "size": 6.8525390625,
          "content": "# Using Custom/Personal Google Credentials\r\nYou've arrived here because you'd like to use your own client ID and client secret to authenticate the add-on with Google Drive.  I'll caution that this is a very detailed and complicated process geared more toward developers than end users, so if you'd like to do it the easy way, go back to your add-on (typically http://homeassistant.local:8123/hassio/ingress/hassio_google_drive_backup) and click the \"Authenticate with Google Drive\" button.  These instructions will have you create a project on Google's Developer Cloud console, generate your own credentials, and use them to authenticate with Google Drive.  You can expect this to take about 15 minutes.  Typically this is what would be done by a developer when releasing a project that several users would use, but in this case you will be the only user.  This workflow is for you if:\r\n* You'd like to avoid having your account's credentials go through a server maintained by the developer of this addon.  The typical authentication workflow never sees your Google account password, but it does receive a token from Google that, if I were malicious, I could use to see the backups you've uploaded to Google Drive.  I don't store this token anywhere and instead just pass it back to you, but because of how Google OAuth tokens are generated there is no way you could verify that.  I tip my tinfoil hat to yours and respect your desire to protect your personal information :)\r\n* The typical authentication flow didn't work.  This may be because of a bug, or because the server I set up to handle it is down or broken.  Its just me back here providing this as a free service to the community, so apologies if things fall into disrepair.\r\n\r\nThese instructions are current as of June 2022.  If you do this and notice they're out of date, Please file an issue on this project's issue page so I can be made aware of it and make the changes necessary.  Thanks!\r\n\r\n## Step 0 - Check addon version\r\nYou must be running version 0.106.1 or greater of the add-on for this to work.  In Feb 2022 Google changed how some of their authentication APIs work which broke the way the addon did it before that version\r\n## Step 1 - Create a Google Cloud Project\r\n>**NOTE:** If you already followed these steps in the past, you do not need to create a new project.  Just use the one you used before.\r\n* Go to http://console.developers.google.com and log in with your Google account.\r\n* Click \"Select Project\" on the top left.\r\n* Click \"New Project\" to create a project.\r\n* Give the project any name you like, and click \"Create Project\".  Don't worry about billing or location information, you won't be charged for anything we're doing here.\r\n![](images/step1.png)\r\n\r\n## Step 2 - Enable the Drive API\r\n\r\n>**NOTE:** If you already followed these steps in the past, the API shoudl already be enabled\r\n\r\nWith your project now created:\r\n* Go to https://console.developers.google.com/apis/library\r\n* Search for \"Google Drive API\", and click \"Enable\".  This is necessary because the \"Project\" you're creating will use the [Google Drive API](https://developers.google.com/drive/api/v3/reference). \r\n\r\n## Step 3 - Create a Consent Screen\r\n>**NOTE:** If you already followed these steps in the past, you probably already have a consent screen.  Reuse your existing one and just make sure it matches the information described below.  In particular ensure the consent screen in \"Publishing status\" is \"In production\"\r\n\r\nBefore creating credentials, you'll need to create a consent screen.  Normally this is what people would see when they request to allow your new application to access their Google Drive, but because you're creating it just for yourself this is basically just a necessary formality.\r\n* Go back to http://console.developers.google.com and ensure the project name you created earlier is displayed in the upper left.\r\n* In the menu on the upper left, click **Enabled APIs & Services** then *OAuth Consent Screen*.\r\n* Select *External* for the user type and then click \"Create\".  Even though you're probably making these credentials with the same account you'll be using to authenticate the addon, you'll still be considered an *External* user.  \r\n* On the next screen \"App Information\", fill in all the required fields, *App Name*, *Support Email*, and *Developer Email*.  Then click \"Save & Continue\".  What you enter here doesn't really matter, but a good App Name is something that will make you laugh if you ever have to see this again, like \"Buy the name-brand SD Card this time, maybe?\"\r\n* On the next screen, click **Add OR Remove Scopes**.  In the dialog that pops up check the box for \"../auth/drive.file\" and then click \"Update\".  You might have to search for \"drive.file\" to make it show up.  This part is very important since it gives the credentials we're about to create permission to see files in Google Drive.  If you don't see this in the dialog that comes up, make sure you did step 2.\r\n* You can leave the rest of this form blank, just click **Save**  or **Continue** for any other screens.\r\n* Once its created, either click **Go Back to Dashboard** or click **OAuth Consent Screen** on the left.  Under **Publishing status** click **Publish App** and then **Confirm**.  This dialog will warn that the app will be available to all users, but in our case it will still only be you if you keep the credentials you create later just to yourself.  This step is necessary because \"Testing\" credentials would require you to manually re-authorize the addon ever 7 days, which is a pain.\r\n\r\n## Step 4 - Create Credentials\r\n>**NOTE:** If you already followed these steps in the past, you probably already have credentials.  If they don't whats described below, you'll need to create a new ones.  In particular ensure the credential type is \"TVs and Limited Input Devices\".  So long as you use the same consent screen, you can create any number of credentials you want.\r\n\r\nNow you've set up everything necessary to actually create credentials.\r\n* From http://console.developers.google.com, click **Enabled APIs & Services** then **Credentials** on the left.\r\n* Click **+ Create Credentials** at the top of the page.\r\n* Select \"OAuth client ID\" form the drop down.\r\nThis should have opened a dialog titled \"Create OAuth client ID\".\r\n* Select **TVs and Limited Input Devices** for **Application Type**.  Home Assistant might not seem like a \"Limited Input Device\" but is is necessary because its the only OAuth authentication method Google provides that doesn't require you to maintain a public SSL encrypted web service. \r\n* Give the credentials a **Name**, anything will do and it doesn't matter.\r\n![](images/step4.png)\r\n* Click \"Create\"\r\n\r\n\r\n## Step 5 - Copy your credentials\r\nThis should have opened a new dialog with your generated client ID and client secret.  Take these back to the Add-on, and paste them into the appropriate fields of the add-on web-UI, and follow the instructions from there.\r\n\r\n![](images/step5.png)\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.154296875,
          "content": "# Home Assistant Google Drive Backup\r\n\r\n![screenshot](images/screenshot.png)\r\n\r\n## About\r\n\r\nA complete and easy way to back up Home Assistant to Google Drive.\r\n\r\nThis is for you if you want to quickly set up a backup strategy without much fuss. It doesn't require much familiarity with Home Assistant, its architecture, or Google Drive. Detailed install instructions are provided below but you can just add this repo, click install and open the Web UI. It will tell you what to do and only takes a few simple clicks.  [Detailed install instructions are below](#detailed-install-instructions) if that doesn't seem clear.\r\n\r\n### Features Overview\r\n\r\n- Creates backups on a configurable schedule.\r\n- Uploads backups to Drive, even the ones it didn't create.\r\n- Clean up old backups in Home Assistant and Google Drive, so you don't run out of space.\r\n- Lots of options for customization, but never requires you to write a yaml file.\r\n- Restore from a fresh install or recover quickly from disaster by uploading your backups directly from Google Drive.\r\n- Integrates with Home Assistant Notifications and provides sensors you can trigger off of.\r\n- Notifies you when something goes wrong with your backups.\r\n- Super easy installation and configuration.\r\n- Privacy-centric design philosophy.\r\n- Comprehensive documentation.\r\n- _Most certainly_ doesn't mine bitcoin on your home automation server. Definitely no.  Or does it?\r\n\r\n### The Upsell\r\nThis addon has been featured by %YOUR_FAVORITE_HA_YOUTUBER% and is often listed as an _essential_ addon when starting with Home Assistant.  Here are some videos about it from others if you'd like to get an idea of what using it looks like or what the community thinks:\r\n\r\n[<img src=\"http://img.youtube.com/vi/GwmPPtBRdjQ/0.jpg\" width=\"300\"/>](http://www.youtube.com/watch?v=GwmPPtBRdjQ \"Everything Smart Home\")\r\n[<img src=\"http://img.youtube.com/vi/WcErD5PvIYw/0.jpg\" width=\"300\"/>](http://www.youtube.com/watch?v=WcErD5PvIYw \"DrZzs\")\r\n\r\n>This project requires financial support to make the Google Drive integration work, but it is free for you to use.  You can join those helping to keep the lights on at:\r\n>  \r\n>[<img src=\"images/bmc-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](https://www.buymeacoffee.com/sabeechen)\r\n>[<img src=\"images/paypal-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](https://www.paypal.com/paypalme/stephenbeechen)\r\n>[<img src=\"images/patreon-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](https://www.patreon.com/bePatron?u=4064183)\r\n>[<img src=\"images/github-sponsors-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](https://github.com/sponsors/sabeechen)\r\n>[<img src=\"images/monero-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](donate-crypto.md)\r\n>[<img src=\"images/bitcoin-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](donate-crypto.md)\r\n>[<img src=\"images/ethereum-button.svg\" width=150 height=40 style=\"margin: 5px\"/>](donate-crypto.md)\r\n\r\n\r\n\r\n### Detailed Install Instructions\r\n1. Navigate in your Home Assistant frontend to <kbd>Settings</kbd> -> <kbd>Add-ons</kbd> -> <kbd>Add-on Store (Bottom Right)</kbd>.\r\n\r\n2. Click the 3-dots menu at upper right <kbd>...</kbd> > <kbd>Repositories</kbd> and add this repository's URL: [https://github.com/sabeechen/hassio-google-drive-backup](https://github.com/sabeechen/hassio-google-drive-backup)\r\n\r\n   <img src=\"images/add_ss.png\" width=\"300\"/>\r\n\r\n3. Reload the page , scroll to the bottom to find the new repository, and click the new add-on named \"Home Assistant Google Drive Backup\":\r\n   \r\n   <img src=\"images/repo_ss.png\" width=\"429\"/>\r\n   \r\n   Note: Home Assistant loads the repository in the background and the new item won't always show up automatically.  You might need to wait a few seconds and then \"hard refesh\" the page for it to show up.  On most browser the keyboard shortcut for this is CTRL+F5. If it still doesn't show up, clear your browser's cache and it should then.\r\n4. Click <kbd>Install</kbd> and give it a few minutes to finish downloading.\r\n\r\n5. Click <kbd>Start</kbd>, give it a few seconds to spin up, and then click the `Open Web UI` button that appears.\r\n\r\n6. The \"Getting Started\" page will tell you how many backups you have and what it will do with them once you connect it to Google Drive. You can click `Settings` to change those options through the add-on (which is the recommended way, they take effect immediately), or update them from the page where you installed the add-on as described below (also works, restart for them to take effect).\r\n\r\n7. Click the `Authenticate with Drive` button to link the add-on with your Google Drive account. Alternatively, you can generate your [own Google API credentials](#can-i-use-my-own-google-api-information-to-authenticate-instead-of-yours), though the process is not simple.\r\n\r\n8. You should be redirected automatically to the backup status page. Here you can make a new backups, see the progress of uploading to Google Drive, etc. You're done!\r\n\r\n## Configuration\r\n\r\nAfter you start the addon you have an opportunity to review your settings within the addon's Web-UI before you connect it to Google Drive.  It is recommended to modify the setting this way because the UI makes it easy and explains what each option does.\r\n\r\nIf you'd still prefer use edit your setting in yaml or through the supervisor, the list of configurable options with explanations is available [here](./hassio-google-drive-backup/DOCS.md#configuration).\r\n\r\n## FAQ\r\n### Is this for me?\r\nMost likely, yes.  This addon is focused on making backup simple, reliable, easy to understand, and well supported.  It provides clear error messages when things go wrong and explains how you fix it.  It has a fancy-pants web interface you can look at to see how things are going.  To do that it sacrafices customizability.  It can't:\r\n- Create backups more than once a day.\r\n- Create backups only when your configuration changes.\r\n- Upload somewhere other than Google Drive.\r\n- Be customized outside of what the settings allow.\r\n\r\nIf you want a backup strategy _highly_ customized to your needs, you might be better off hacking something together with automations and the samba addon, for example.  This project started out as me doing exactly that for myself, and now its grown into a mature project with ~100k people using it all over the world.  Weird.  I never thought I'd be getting community pressure to translate the UI into portugese, but here I am dealing with those kinds of problems now.\r\n\r\n\r\n### How will I know this will be there when I need it?\r\n\r\nHome Assistant is notorious for failing silently, and your backups aren't something you want to find is broken after an erroneous comma makes you unable to turn on any of the lights in your house. That's why I've added some functionality to keep you informed if things start to break. If the add-on runs into trouble and gets more than 12 hours behind its schedule, you'll know in two ways:\r\n\r\n- Notifications in Home Assistant UI\r\n\r\n  <img src=\"images/notification_error.png\" width=\"300\"/>\r\n\r\n- A [binary_sensor](#lovelace-card) you can use to trigger additional actions.\r\n\r\n  <img src=\"images/binary_sensor.png\" width=\"600\"/>\r\n\r\nRedundancy is the foundation of reliability. With local backups, Google Drive's backups, and two flavors of notification I think you're covered.\r\n\r\n### How do I restore a backup?\r\nThe backups this addon creates are the same backups that Home Assistant makes by itself and can be restored using any of the methods documented elsewhere.  Here are few pointers to get you started.\r\n- If you can still get to the addon's web-UI then select the backup and click \"Load into Home Assistant\" have it copied back into Home Assistant.\r\n- If not (eg, maybe your hard drive died and you're starting over):\r\n  - Download one of the backups you've previously created from [Google Drive](https://drive.google.com).\r\n  - On whatever hardware you're using to run Home Assistant now, follow the [normal instructions](https://www.home-assistant.io/getting-started/) to install Home Assistant.\r\n  - Once it's running (but before you create a user), click the link on the Home Assistant setup page that says \"Alternatively you can restore from a previous backup\" and upload the backup you downloaded from Google Drive.\r\n- If you've got a backup that you'd like to restore to an already set up Home Assistant instance that doesn't already have this addon installed, you'll need to use something like the [Samba Addon](https://www.home-assistant.io/hassio/haos_common_tasks/#installing-and-using-the-samba-add-on) to copy a backup downloaded from Google Drive into the /backup folder.  \r\n\r\n### I never look at HA notifications. Can I show information about backups in my Home Assistant Interface?\r\n\r\nThe add-on creates a few sensors that show the status of backups that you could trigger automations off of. `binary_sensor.backups_stale` becomes true when the add-on has trouble backing up or creating backups. For example, the Lovelace card below only shows up in the UI when backups go stale:\r\n\r\n#### Lovelace Card\r\n\r\n```yaml\r\ntype: conditional\r\nconditions:\r\n  - entity: binary_sensor.backups_stale\r\n    state_not: \"off\"\r\ncard:\r\n  type: markdown\r\n  content: >-\r\n    Backups are stale! Please visit the \"Home Assistant Google Drive Backup\" add-on\r\n    status page for details.\r\n  title: Stale Backups!`\r\n```\r\n\r\n#### Mobile Notifications\r\n\r\nIf you have [android](https://github.com/Crewski/HANotify) or [iOS](https://www.home-assistant.io/docs/ecosystem/ios/), [other notifications](https://www.home-assistant.io/components/notify/) set up, this automation would let you know if things go stale:\r\n\r\n```yaml\r\n    - alias: Backups went stale\r\n      id: 'backups_went_stale'\r\n      trigger:\r\n      - platform: state\r\n        entity_id: binary_sensor.backups_stale\r\n        from: 'off'\r\n        to: 'on'\r\n      condition: []\r\n      action:\r\n      - service: notify.android\r\n        data:\r\n          title: Backups are Stale\r\n          message: Please visit the 'Home Assistant Google Drive Backup ' add-on status page\r\n            for details.\r\n```\r\n\r\nYou could automate anything off of this binary sensor. The add-on also exposes a sensor `sensor.backup_state` that exposes the details of each backup. I'm working on a custom Lovelace component to expose that information.\r\n\r\n### Can I specify what time of day backups should be created?\r\n\r\nYou can add `\"backup_time_of_day\": \"13:00\"` to your add-on configuration to make backups always happen at 1 pm. Specify the time in the 24-hour format of `\"HH:MM\"`. When unspecified, the next backup will be created (roughly) at the same time of day as the last one.\r\n\r\n### Can I keep older backups for longer?\r\n\r\n> This is just an overview of how to keep older backups longer. [See here](https://github.com/sabeechen/hassio-google-drive-backup/blob/master/hassio-google-drive-backup/GENERATIONAL_BACKUP.md) for a more in-depth explanation.\r\n\r\nThe add-on can be configured to keep [generational backups](https://en.wikipedia.org/wiki/Backup_rotation_scheme) on daily, weekly, monthly, and yearly intervals instead of just deleting the oldest backup. This can be useful if, for example, you've made an erroneous change but haven't noticed for several days and all the backups before the change are gone. With a configuration setting like this...\r\n\r\n```yaml\r\ngenerational_days: 3\r\ngenerational_weeks: 4\r\ngenerational_months: 12\r\ngenerational_years: 5\r\n```\r\n\r\n... a backup will be kept for the last 3 days, the last 4 weeks, the last 12 months, and the last 5 years. Additionally, you may configure the day of the week, day of the month, and day of the year that weekly, monthly, and yearly backups are maintained.\r\n\r\n```yaml\r\ngenerational_days: 3\r\n\r\ngenerational_weeks: 4\r\ngenerational_day_of_week: \"mon\" # Can be 'mon', 'tue', 'wed', 'thu', 'fri', 'sat' or 'sun' (defaults to 'mon')\r\n\r\ngenerational_months: 12\r\ngenerational_day_of_month: 1 # Can be 1 through 31 (defaults to 1)\r\n\r\ngenerational_years: 5\r\ngenerational_day_of_year: 1 # can be 1 through 365 (defaults to 1)\r\n```\r\n\r\n- Any combination of days, weeks, months, and years can be used. They all default to 0.\r\n- It's highly recommended to set '`days_between_backups: 1`' to ensure a backup is available for each day.\r\n- Ensure you've set `max_backups_in_drive` appropriately high to keep enough backups (24 in the example above).\r\n- Once this option is enabled, it may take several days or weeks to see older backups get cleaned up. Old backups will only get deleted when the number present exceeds `max_backups_in_drive` or `max_backups_in_ha`\r\n\r\n### I already have something that creates backups on a schedule. Can I use this just to backup to Google Drive?\r\n\r\nIf you set '`days_between_backups: 0`', then the add-on won't try to create new backups but will still upload up any it finds to Google Drive and clean up old backups in both Home Assistant and Google Drive. This can be useful if you already have for example an automation that creates backups on a schedule.\r\n\r\n### Can I give backups a different name?\r\n\r\nThe config option `backup_name` can be changed to give backups a different name or with a date format of your choosing. The default is `{type} Backup {year}-{month}-{day} {hr24}:{min}:{sec}`, which makes backups with a name like `Full Backup 2021-10-31 14:00:00`. Using the settings menu in the Web UI, you can see a preview of what a backup name will look like but you can also set it in the add-on's options. Below is the list of variables you can add to modify the name to your liking.\r\n\r\n- `{type}`: The type of backup, either 'Full' or 'Partial'\r\n- `{year}`: Year in 4 digit format (eg 2)\r\n- `{year_short}`: Year in 2 digit format (eg 19)\r\n- `{weekday}`: Long day of the week (eg Monday, ..., Sunday)\r\n- `{weekday_short}`: Short day of week (eg Mon, ... Sun)\r\n- `{month}`: 2 digit month (eg 01, ... 12)\r\n- `{month_long}`: Month long name (January, ... , December)\r\n- `{month_short}`: Month long name (Jan, ... , Dec)\r\n- `{ms}`: Milliseconds (001, ..., 999)\r\n- `{day}`: Day of the month (01, ..., 31)\r\n- `{hr24}`: 2 digit hour of the day (0, ..., 24)\r\n- `{hr12}`: 2 digit hour of the day (0, ..., 12)\r\n- `{min}`: 2 digit minute of the hour (0, ..., 59)\r\n- `{sec}`: 2 digit second of the minute (0, ..., 59)\r\n- `{ampm}`: am or pm, depending on the time of day\r\n- `{version_ha}`, Home Assistant version string (eg 0.91.3)\r\n- `{version_hassos}`: HassOS version string (eg 0.2.15)\r\n- `{version_super}`: , Supervisor version string (eg 1.2.19)\r\n- `{date}`: Locale aware date (eg 2023/01/01).\r\n- `{time}`: Locale aware time (eg 02:03:04 am)\r\n- `{datetime}`: Locale-aware datetime string\r\n- `{isotime}`: Date and time in ISO format\r\n- `{hostname}`: The Home Assistant machine's hostname\r\n\r\n### Will this ever upload to Dropbox/OnDrive/FTP/SMB/MyFavoriteProtocol?\r\n\r\nMost likely no. I started this project to solve a specific problem I had, storing backups in a redundant cloud provider without having to write a bunch of buggy logic and automations. It might seem like a small change to make this work with another cloud provider, but trust me. I wrote this version of it, and it's not a simple change. I don't have the time to do it.\r\n\r\n### But Google reads my emails!\r\n\r\nMaybe. You can encrypt your backups by giving a password in the add-on's options.\r\n\r\n### Does this store any personal information?\r\n\r\nOn a matter of principle, I only keep track of and store information necessary for the add-on to function. To the best of my knowledge the scope of this is:\r\n\r\n- You can opt-in to sending error reports from the add-on sent to a database maintained by me. This includes the full text of the error's stack trace, the error message, and the version of the add-on you're running. This helps notice problems with new releases but leaving it off (the default unless you turn it on) doesn't affect the functionality of the add-on in any way.\r\n- Once authenticated with Google, your Google credentials are only stored locally on your Home Assistant instance. This isn't your actual username and password, only an opaque token returned from Google used to verify that you previously gave the Add-on permission to access your Google Drive. Your password is never seen by me or the add-on. You can read more about how authentication with Google is accomplished [here](https://github.com/sabeechen/hassio-google-drive-backup/blob/master/hassio-google-drive-backup/AUTHENTICATION.md).\r\n- The add-on has access to the files in Google Drive it created, which is the 'Home Assistant Backups' folder and any backups it uploads. See the https://www.googleapis.com/auth/drive.file scope in the [Drive REST API v3 Documentation](https://developers.google.com/drive/api/v3/about-auth) for details, this is the only scope the add-on requests for your account.\r\n- Google stores a history of information about the number of requests, number of errors, and latency of requests made by this Add-on and makes a graph of that visible to me. This is needed because Google only gives me a certain quota for requests shared between all users of the add-on, so I need to be aware if someone is abusing it.\r\n- The Add-on is distributed as a Docker container hosted on Docker Hub, which is how almost all add-ons work. Docker keeps track of how many people have requested an image and makes that information publicly visible.\r\n\r\nThis invariably means that I have a very limited ability to see how many people are using the add-on or if it is functioning well. If you do like it, feel free to shoot me an email at [stephen@beechens.com](mailto:stephen@beechens.com) or star this repo on GitHub, it helps keep me motivated. If you run into problems or think a new feature would be nice, file an issue on GitHub.\r\n\r\n### Can I use my own Google API information to authenticate instead of yours?\r\n\r\nOn the first \"Getting Started\" page of the add-on underneath the \"Authenticate with Google Drive\" button is a link that lets you enter your own `Client Id` and `Client Sercet` to authenticate with Google Drive. You can get back to that page by going to \"Actions\" -> \"Reauthorize Google Drive\" from the add-on's web UI if you've already connected it previously. Instructions are also provided for those who are unfamiliar with the process, it's tedious to complete but ensures the add-on's communication is only between you and Google Drive.\r\n\r\n### Can I permanently save a backup so it doesn't get cleaned up?\r\n\r\nSelect \"Never Delete\" from the menu next to a backup in the add-on's Web UI. You can choose to keep it from being deleted in Home Assistant or Google Drive. When you do this, the backups will no longer count against the maximum number of backups allowed in Google Drive or Home Assistant.\r\nAlternatively, you can move a backup in Google Drive out of the backup folder. the add-on will ignore any files that aren't in the backup folder. Just don't move them back in accidentally since they'll get \"cleaned up\" like any old backup after a while :)\r\n\r\n### What do I do if I've found an error?\r\n\r\nIf the add-on runs into trouble and can't back up, you should see a big red box with the text of the error on the status webpage. This should include a link to pre-populate a new issue in GitHub, which I'd encourage you to do. Additionally, you can set the add-on config option `\"verbose\": true` to get information from the add-on's logs to help me with debugging.\r\n\r\n### Will this fill up my Google Drive? Why are my backups so big?\r\n\r\nYou'll need to take care to ensure you don't configure this to blow up your Google Drive. You might want to consider:\r\n\r\n- If your backups are HUGE, it's probably because Home Assistant by default keeps a long sensor history. Consider setting `purge_keep_days: N` in your [recorder configuration](https://www.home-assistant.io/components/recorder/) to trim it down to something more manageable, like 1 day of history.\r\n- Some other add-ons are designed to manage large amounts of media. For example, add-ons like the Plex Media Server are designed to store media in the /share folder, and Mobile Upload folders default to a sub-folder in the addons folder. If you migrate all of your media to the Home Assistant folder structure and you don't exclude it from the backup, you _could easily chew up your entire Google Drive space in a single backup_.\r\n- If you use the Google Drive Desktop sync client, you'll probably want to tell it not to sync this folder (it's available in the options).\r\n\r\n### I want my backups to sync to my Desktop computer too\r\n\r\nThat's not a question but you can use [Google Drive Backup & Sync]([https://www.google.com/drive/download/) to download anything in your Google Drive to your desktop/laptop automatically.\r\n\r\n### I configured this to only keep 4 backups in Drive and Home Assistant, but sometimes I can see there are 5?\r\n\r\nThe add-on will only delete an old backup if a new one exists to replace it, so it will create a 5th one before deleting the first. This is a reliability/disk usage compromise that favors reliability because otherwise, it would have to delete an old backup (leaving only 3) before it could guarantee the 4th one exists.\r\n\r\n### Can I exclude specific sub-folders from my backup?\r\n\r\nThe add-on uses the supervisor to create backups, and the supervisor only permits you to include or exclude the 5 main folders (home assistant configuration, share, SSL, media, and local add-ons). Excluding specific subfolders, or only including specific subfolders from a backup isn't possible today.\r\n\r\n### <a href=\"supervisor_logs\"></a>I'm getting weird errors.  Where do I look for more detils about an error (Supervisor logs).\r\n\r\nThe addon uses Home Assistant's \"supervisor\" to create and delete backups on Home Asisstant's side.  In case you don't know, the supervisor is something that runs in the background on Home Assistant and manages stuff like backups, connections to hardware, and setting up the environment that Home Assistant Core (eg the UI) and addons run in.  Because of this a lot of errors you run into (problems with the NAS, HD corruption, etc) only show up in the supervisor's logs.  The supervisor's logs are kind of hidden by default, to view them:\r\n\r\n- Go to your Home Assistant user profile by clicking the user icon in the bottom left of Home Assistant's main UI.\r\n- Enable \"Advanced Mode\" in your profile.\r\n- Navigate to Settings > System > Logs\r\n- Select \"Supervisor\" from the drop down at the top right of the page.\r\n\r\nThe logs there keep a pretty short history, so if you ahve a lot of other errors/warnings happening (which is common) you might need to go check the logs right after you see errors in the addon.\r\n\r\n"
        },
        {
          "name": "donate-crypto.md",
          "type": "blob",
          "size": 1.076171875,
          "content": "## Contributing with Cryptocurrency\nBelow are the addresses and relevant QR Codes for contributiong to the project with Monreo, Ethereum and Bitcoin.  Thank you for considering!  If you'd like to donate using a currency not listed, make an [issue](https://github.com/sabeechen/hassio-google-drive-backup/issues) so I can consider it.  Cryptocurrency might be the purest way to contribute, because I have no way of knowing who you are.  Your anonymous support is appreciated <3\n<br><br>\n### <img src=\"images/monero-button.svg\" width=\"200\" /><br>\n<img src=\"images/monero-qr.svg\" width=\"200\" />\n\nMonero/XMR Address:\n```\n8BtRhV9vUNkTDST7WEWuH7JumpvrFApVag5D2fVTLgfdJH8sjiy5LQo68WK4GaLBijTYb7XW6D6bChQGkDeDMmfTTTZGNTr\n```\n\n<br><br>\n### <img src=\"images/ethereum-button.svg\" width=\"200\" /><br>\n<img src=\"images/ethereum-qr.svg\" width=\"200\" />\n\nEthereum/ETH Address:\n```\n0xfa455Bdd245F67Dd1D549C2Ac67EA6BBf91402a7\n```\n\n\n<br><br>\n### <img src=\"images/bitcoin-button.svg\" width=\"200\" /><br>\n<img src=\"images/bitcoin-qr.svg\" width=\"200\" />\n\nBitcoin/BTC Address:\n```\nbc1qystpwsqqwusam38mhwafh8n4yln798zqprsl93\n```"
        },
        {
          "name": "hassio-google-drive-backup",
          "type": "tree",
          "content": null
        },
        {
          "name": "heroku.yml",
          "type": "blob",
          "size": 0.068359375,
          "content": "build:\n  docker:\n    web: hassio-google-drive-backup/Dockerfile-server"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.19921875,
          "content": "[pytest]\ntimeout = 600\njunit_family=xunit1\nasyncio_mode = auto\nfilterwarnings =\n    ignore\n    default:::backup.*\n    ignore::DeprecationWarning:backup.tracing_session:\naddopts = --cov-config=.coveragerc\n"
        },
        {
          "name": "repository.json",
          "type": "blob",
          "size": 0.189453125,
          "content": "{\n    \"name\": \"Home Assistant Google Drive Backup Repository\",\n    \"url\": \"https://github.com/sabeechen/hassio-google-drive-backup\",\n    \"maintainer\": \"Stephen Beechen <stephen@beechens.com>\"\n}\n"
        }
      ]
    }
  ]
}