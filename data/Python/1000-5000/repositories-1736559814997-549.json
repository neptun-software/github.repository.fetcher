{
  "metadata": {
    "timestamp": 1736559814997,
    "page": 549,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shroominic/codeinterpreter-api",
      "stars": 3815,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.3876953125,
          "content": "# (set True to enable logging)\nVERBOSE=False\n\n# (required)\nOPENAI_API_KEY=\n# ANTHROPIC_API_KEY=\n\n# (optional, required for production)\n# CODEBOX_API_KEY=\n\n# (optional, required for Azure OpenAI)\n# OPENAI_API_TYPE=azure\n# OPENAI_API_VERSION=2023-07-01-preview\n# OPENAI_API_BASE=\n# DEPLOYMENT_NAME=\n\n# (optional, [codebox, postgres or redis])\n# HISTORY_BACKEND=postgres\n# REDIS_URL=\n# POSTGRES_URL=\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6474609375,
          "content": "# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.pyc\n*.egg\nMANIFEST\n.vscode\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# PEP 582\n__pypackages__/\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n.codebox\n.context\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache\n.dmypy.json\ndmypy.json\n\n.DS_Store\nfoodb_2020_04_07_json\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "# MIT License\n\nCopyright (c) 2023 Dominic Bäumer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.220703125,
          "content": "# 👾 Code Interpreter API\n\n[![Version](https://badge.fury.io/py/codeinterpreterapi.svg)](https://badge.fury.io/py/codeinterpreterapi)\n![Downloads](https://img.shields.io/pypi/dm/codeinterpreterapi)\n![License](https://img.shields.io/pypi/l/codeinterpreterapi)\n![PyVersion](https://img.shields.io/pypi/pyversions/codeinterpreterapi)\n\nA [LangChain](https://github.com/langchain-ai/langchain) implementation of the ChatGPT Code Interpreter.\nUsing CodeBoxes as backend for sandboxed python code execution.\n[CodeBox](https://github.com/shroominic/codebox-api/tree/main) is the simplest cloud infrastructure for your LLM Apps.\nYou can run everything local except the LLM using your own OpenAI API Key.\n\n## Features\n\n- Dataset Analysis, Stock Charting, Image Manipulation, ....\n- Internet access and auto Python package installation\n- Input `text + files` -> Receive `text + files`\n- Conversation Memory: respond based on previous inputs\n- Run everything local except the OpenAI API (OpenOrca or others maybe soon)\n- Use CodeBox API for easy scaling in production\n\n## Docs\n\nCheckout the [documentation](https://shroominic.github.io/codeinterpreter-api/) for more information.\n\n## Installation\n\nGet your OpenAI API Key [here](https://platform.openai.com/account/api-keys) and install the package.\n\n```bash\npip install \"codeinterpreterapi[all]\"\n```\n\nEverything for local experiments are installed with the `all` extra.\nFor deployments, you can use `pip install codeinterpreterapi` instead which does not install the additional dependencies.\n\n## Usage\n\nTo configure OpenAI and Azure OpenAI, ensure that you set the appropriate environment variables (or use a .env file):\n\nFor OpenAI, set the OPENAI_API_KEY environment variable:\n\n```bash\nexport OPENAI_API_KEY=sk-**********\n```\n\n```python\nfrom codeinterpreterapi import CodeInterpreterSession, settings\n\n\n# create a session and close it automatically\nwith CodeInterpreterSession() as session:\n    # generate a response based on user input\n    response = session.generate_response(\n        \"Plot the bitcoin chart of year 2023\"\n    )\n    # output the response\n    response.show()\n```\n\n![Bitcoin YTD](https://github.com/shroominic/codeinterpreter-api/blob/main/examples/assets/bitcoin_chart.png?raw=true)\nBitcoin YTD Chart Output\n\n## Dataset Analysis\n\n```python\nfrom codeinterpreterapi import CodeInterpreterSession, File\n\n# this example uses async but normal sync like above works too\nasync def main():\n    # context manager for auto start/stop of the session\n    async with CodeInterpreterSession() as session:\n        # define the user request\n        user_request = \"Analyze this dataset and plot something interesting about it.\"\n        files = [\n            # attach files to the request\n            File.from_path(\"examples/assets/iris.csv\"),\n        ]\n\n        # generate the response\n        response = await session.generate_response(\n            user_request, files=files\n        )\n\n        # output to the user\n        print(\"AI: \", response.content)\n        for file in response.files:\n            # iterate over the files (display if image)\n            file.show_image()\n\n\nif __name__ == \"__main__\":\n    import asyncio\n\n    asyncio.run(main())\n```\n\n![Iris Dataset Analysis](https://github.com/shroominic/codeinterpreter-api/blob/main/examples/assets/iris_analysis.png?raw=true)\nIris Dataset Analysis Output\n\n## Production\n\nIn case you want to deploy to production, you can utilize the CodeBox API for seamless scalability.\n\nPlease contact me if you are interested in this, as it is still in the early stages of development.\n\n## Contributing\n\nThere are some remaining TODOs in the code.\nSo, if you want to contribute, feel free to do so.\nYou can also suggest new features. Code refactoring is also welcome.\nJust open an issue or pull request and I will review it.\n\nPlease also submit any bugs you find as an issue with a minimal code example or screenshot.\nThis helps me a lot in improving the code.\n\n## Contact\n\nYou can contact me at [contact@shroominic.com](mailto:contact@shroominic.com).\nBut I prefer to use [Twitter](https://twitter.com/shroominic) or [Discord](https://discord.gg/Vaq25XJvvW) DMs.\n\n## Support this project\n\nIf you would like to help this project with a donation, you can [click here](https://ko-fi.com/shroominic).\nThanks, this helps a lot! ❤️\n"
        },
        {
          "name": "dev-setup.sh",
          "type": "blob",
          "size": 0.404296875,
          "content": "# AUTO DEV SETUP\n\n# check if rye is installed\nif ! command -v rye &> /dev/null\nthen\n    echo \"rye could not be found: installing now ...\"\n    curl -sSf https://rye-up.com/get | bash\n    echo \"Check the rye docs for more info: https://rye-up.com/\"\nfi\n\necho \"SYNC: setup .venv\"\nrye sync\n\necho \"ACTIVATE: activate .venv\"\nrye shell\n\necho \"SETUP: install pre-commit hooks\"\npre-commit install\n\necho \"TESTING ...\"\npytest\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.84765625,
          "content": "site_name: CodeInterpreterAPI - Documentation\nsite_author: Shroominic\nsite_url: https://shroominic.github.io/codeinterpreter-api/\nrepo_name: shroominic/codeinterpreter-api\nrepo_url: https://github.com/shroominic/codeinterpreter-api/\n\nnav:\n  - 'Getting Started':\n    - 'Welcome': 'index.md'\n    - 'Installation': 'installation.md'\n    - 'Usage': 'usage.md'\n    - 'Settings': 'settings.md'\n  - 'Code Interpreter':\n    - 'Overview': 'concepts_overview.md'\n    - 'Session': 'code_interpreter_session.md'\n    - 'CodeBox': 'codebox.md'\n    - 'File': 'file.md'\n    - 'Request': 'user_request.md'\n    - 'Response': 'code_interpreter_response.md'\n  - 'Deployment': 'deploy.md'\n  - 'Examples':\n    - 'Bitcoin Chart': 'bitcoin_chart.md'\n    - 'Iris Dataset': 'iris_dataset.md'\n    - 'Streamlit Webapp': 'streamlit_webapp.md'\n\ntheme:\n  name: material\n  palette:\n    scheme: slate\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.8720703125,
          "content": "[project]\nname = \"codeinterpreterapi\"\nversion = \"0.1.20\"\ndescription = \"CodeInterpreterAPI is an (unofficial) open source python interface for the ChatGPT CodeInterpreter.\"\nauthors = [{ name = \"Shroominic\", email = \"contact@shroominic.com\" }]\ndependencies = [\n    \"langchain>=0.1, <0.2\",\n    \"langchain_openai\",\n    \"codeboxapi==0.1.19\",\n    \"pyzmq==25.1.2\",\n]\nlicense = { file = \"LICENSE\" }\nreadme = \"README.md\"\nrequires-python = \">= 3.9.7, <3.13\"\nkeywords = [\n    \"codeinterpreter\",\n    \"chatgpt\",\n    \"codeinterpreterapi\",\n    \"api\",\n    \"langchain\",\n    \"codeboxapi\",\n]\nclassifiers = [\n    \"License :: OSI Approved :: MIT License\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n]\n\n[project.urls]\nCode = \"https://github.com/shroominic/codeinterpreter-api\"\nDocs = \"https://shroominic.github.io/codeinterpreter-api\"\n\n[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n\n[tool.rye]\nmanaged = true\ndev-dependencies = [\n    \"ruff\",\n    \"mypy\",\n    \"isort\",\n    \"pytest\",\n    \"ipython\",\n    \"pre-commit\",\n    \"codeinterpreterapi[all]\",\n    \"mkdocs-material>=9.4\",\n]\n\n[project.optional-dependencies]\nlocalbox = [\"codeboxapi[local_support]\"]\nfrontend = [\"streamlit\"]\nimage_support = [\"codeboxapi[image_support]\"]\nall = [\"codeboxapi[all]\", \"codeinterpreterapi[frontend]\"]\n\n[tool.hatch.metadata]\nallow-direct-references = true\n\n[tool.pytest.ini_options]\naddopts = \"-p no:warnings\"\n\n[tool.isort]\nmulti_line_output = 3\ninclude_trailing_comma = true\nforce_grid_wrap = 0\nline_length = 120\n\n[tool.flake8]\nmax-line-length = 120\n\n[tool.mypy]\nignore_missing_imports = true\ndisallow_untyped_defs = true\ndisallow_untyped_calls = true\ndisallow_incomplete_defs = true\n\n[tool.ruff.lint]\nselect = [\"E\", \"F\", \"I\"]\n"
        },
        {
          "name": "requirements-dev.lock",
          "type": "blob",
          "size": 10.3408203125,
          "content": "# generated by rye\n# use `rye lock` or `rye sync` to update this lockfile\n#\n# last locked with the following flags:\n#   pre: false\n#   features: []\n#   all-features: false\n#   with-sources: false\n#   generate-hashes: false\n#   universal: false\n\n-e file:.\naiohappyeyeballs==2.4.3\n    # via aiohttp\naiohttp==3.10.10\n    # via codeboxapi\n    # via langchain\n    # via langchain-community\naiosignal==1.3.1\n    # via aiohttp\naltair==5.4.1\n    # via streamlit\nannotated-types==0.7.0\n    # via pydantic\nanyio==4.6.2.post1\n    # via httpx\n    # via jupyter-server\n    # via openai\nappnope==0.1.4\n    # via ipykernel\nargon2-cffi==23.1.0\n    # via jupyter-server\n    # via notebook\nargon2-cffi-bindings==21.2.0\n    # via argon2-cffi\narrow==1.3.0\n    # via isoduration\nasttokens==2.4.1\n    # via stack-data\nasync-timeout==4.0.3\n    # via aiohttp\n    # via langchain\nattrs==24.2.0\n    # via aiohttp\n    # via jsonschema\n    # via referencing\nbabel==2.16.0\n    # via mkdocs-material\nbeautifulsoup4==4.12.3\n    # via nbconvert\nbleach==6.2.0\n    # via nbconvert\nblinker==1.8.2\n    # via streamlit\ncachetools==5.5.0\n    # via streamlit\ncertifi==2024.8.30\n    # via httpcore\n    # via httpx\n    # via requests\ncffi==1.17.1\n    # via argon2-cffi-bindings\ncfgv==3.4.0\n    # via pre-commit\ncharset-normalizer==3.4.0\n    # via requests\nclick==8.1.7\n    # via mkdocs\n    # via streamlit\ncodeboxapi==0.1.19\n    # via codeinterpreterapi\ncolorama==0.4.6\n    # via mkdocs-material\ncomm==0.2.2\n    # via ipykernel\ndataclasses-json==0.6.7\n    # via langchain\n    # via langchain-community\ndebugpy==1.8.7\n    # via ipykernel\ndecorator==5.1.1\n    # via ipython\ndefusedxml==0.7.1\n    # via nbconvert\ndistlib==0.3.9\n    # via virtualenv\ndistro==1.9.0\n    # via openai\nentrypoints==0.4\n    # via jupyter-client\nexceptiongroup==1.2.2\n    # via anyio\n    # via ipython\n    # via pytest\nexecuting==2.1.0\n    # via stack-data\nfastjsonschema==2.20.0\n    # via nbformat\nfilelock==3.16.1\n    # via virtualenv\nfqdn==1.5.1\n    # via jsonschema\nfrozenlist==1.5.0\n    # via aiohttp\n    # via aiosignal\nghp-import==2.1.0\n    # via mkdocs\ngitdb==4.0.11\n    # via gitpython\ngitpython==3.1.43\n    # via streamlit\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.6\n    # via httpx\nhttpx==0.27.2\n    # via langsmith\n    # via openai\nidentify==2.6.1\n    # via pre-commit\nidna==3.10\n    # via anyio\n    # via httpx\n    # via jsonschema\n    # via requests\n    # via yarl\nimportlib-metadata==8.5.0\n    # via markdown\n    # via mkdocs\n    # via mkdocs-get-deps\n    # via nbconvert\niniconfig==2.0.0\n    # via pytest\nipykernel==6.29.5\n    # via nbclassic\n    # via notebook\nipython==8.18.1\n    # via ipykernel\nipython-genutils==0.2.0\n    # via nbclassic\n    # via notebook\nisoduration==20.11.0\n    # via jsonschema\nisort==5.13.2\njedi==0.19.1\n    # via ipython\njinja2==3.1.4\n    # via altair\n    # via jupyter-server\n    # via mkdocs\n    # via mkdocs-material\n    # via nbconvert\n    # via notebook\n    # via pydeck\njiter==0.7.0\n    # via openai\njsonpatch==1.33\n    # via langchain-core\njsonpointer==3.0.0\n    # via jsonpatch\n    # via jsonschema\njsonschema==4.23.0\n    # via altair\n    # via jupyter-events\n    # via nbformat\njsonschema-specifications==2024.10.1\n    # via jsonschema\njupyter-client==7.4.9\n    # via ipykernel\n    # via jupyter-kernel-gateway\n    # via jupyter-server\n    # via nbclient\n    # via notebook\njupyter-core==5.7.2\n    # via ipykernel\n    # via jupyter-client\n    # via jupyter-kernel-gateway\n    # via jupyter-server\n    # via nbclient\n    # via nbconvert\n    # via nbformat\n    # via notebook\njupyter-events==0.10.0\n    # via jupyter-server\njupyter-kernel-gateway==2.5.2\n    # via codeboxapi\njupyter-server==2.14.2\n    # via notebook-shim\njupyter-server-terminals==0.5.3\n    # via jupyter-server\njupyterlab-pygments==0.3.0\n    # via nbconvert\nlangchain==0.1.20\n    # via codeinterpreterapi\nlangchain-community==0.0.38\n    # via langchain\nlangchain-core==0.1.53\n    # via langchain\n    # via langchain-community\n    # via langchain-openai\n    # via langchain-text-splitters\nlangchain-openai==0.1.7\n    # via codeinterpreterapi\nlangchain-text-splitters==0.0.2\n    # via langchain\nlangsmith==0.1.139\n    # via langchain\n    # via langchain-community\n    # via langchain-core\nmarkdown==3.7\n    # via mkdocs\n    # via mkdocs-material\n    # via pymdown-extensions\nmarkdown-it-py==3.0.0\n    # via rich\nmarkupsafe==3.0.2\n    # via jinja2\n    # via mkdocs\n    # via nbconvert\nmarshmallow==3.23.1\n    # via dataclasses-json\nmatplotlib-inline==0.1.7\n    # via ipykernel\n    # via ipython\nmdurl==0.1.2\n    # via markdown-it-py\nmergedeep==1.3.4\n    # via mkdocs\n    # via mkdocs-get-deps\nmistune==3.0.2\n    # via nbconvert\nmkdocs==1.6.1\n    # via mkdocs-material\nmkdocs-get-deps==0.2.0\n    # via mkdocs\nmkdocs-material==9.5.43\nmkdocs-material-extensions==1.3.1\n    # via mkdocs-material\nmultidict==6.1.0\n    # via aiohttp\n    # via yarl\nmypy==1.13.0\nmypy-extensions==1.0.0\n    # via mypy\n    # via typing-inspect\nnarwhals==1.12.1\n    # via altair\nnbclassic==1.1.0\n    # via notebook\nnbclient==0.10.0\n    # via nbconvert\nnbconvert==7.16.4\n    # via jupyter-server\n    # via notebook\nnbformat==5.10.4\n    # via jupyter-server\n    # via nbclient\n    # via nbconvert\n    # via notebook\nnest-asyncio==1.6.0\n    # via ipykernel\n    # via jupyter-client\n    # via nbclassic\n    # via notebook\nnodeenv==1.9.1\n    # via pre-commit\nnotebook==6.5.7\n    # via jupyter-kernel-gateway\nnotebook-shim==0.2.4\n    # via nbclassic\nnumpy==1.26.4\n    # via langchain\n    # via langchain-community\n    # via pandas\n    # via pydeck\n    # via streamlit\nopenai==1.54.3\n    # via langchain-openai\norjson==3.10.11\n    # via langsmith\noverrides==7.7.0\n    # via jupyter-server\npackaging==23.2\n    # via altair\n    # via ipykernel\n    # via jupyter-server\n    # via langchain-core\n    # via marshmallow\n    # via mkdocs\n    # via nbconvert\n    # via pytest\n    # via streamlit\npaginate==0.5.7\n    # via mkdocs-material\npandas==2.2.3\n    # via streamlit\npandocfilters==1.5.1\n    # via nbconvert\nparso==0.8.4\n    # via jedi\npathspec==0.12.1\n    # via mkdocs\npexpect==4.9.0\n    # via ipython\npillow==10.4.0\n    # via codeboxapi\n    # via streamlit\nplatformdirs==4.3.6\n    # via jupyter-core\n    # via mkdocs-get-deps\n    # via virtualenv\npluggy==1.5.0\n    # via pytest\npre-commit==4.0.1\nprometheus-client==0.21.0\n    # via jupyter-server\n    # via notebook\nprompt-toolkit==3.0.48\n    # via ipython\npropcache==0.2.0\n    # via yarl\nprotobuf==5.28.3\n    # via streamlit\npsutil==6.1.0\n    # via ipykernel\nptyprocess==0.7.0\n    # via pexpect\n    # via terminado\npure-eval==0.2.3\n    # via stack-data\npyarrow==18.0.0\n    # via streamlit\npycparser==2.22\n    # via cffi\npydantic==2.9.2\n    # via codeboxapi\n    # via langchain\n    # via langchain-core\n    # via langsmith\n    # via openai\n    # via pydantic-settings\npydantic-core==2.23.4\n    # via pydantic\npydantic-settings==2.6.1\n    # via codeboxapi\npydeck==0.9.1\n    # via streamlit\npygments==2.18.0\n    # via ipython\n    # via mkdocs-material\n    # via nbconvert\n    # via rich\npymdown-extensions==10.12\n    # via mkdocs-material\npytest==8.3.3\npython-dateutil==2.9.0.post0\n    # via arrow\n    # via ghp-import\n    # via jupyter-client\n    # via pandas\npython-dotenv==1.0.1\n    # via pydantic-settings\npython-json-logger==2.0.7\n    # via jupyter-events\npytz==2024.2\n    # via pandas\npyyaml==6.0.2\n    # via jupyter-events\n    # via langchain\n    # via langchain-community\n    # via langchain-core\n    # via mkdocs\n    # via mkdocs-get-deps\n    # via pre-commit\n    # via pymdown-extensions\n    # via pyyaml-env-tag\npyyaml-env-tag==0.1\n    # via mkdocs\npyzmq==25.1.2\n    # via codeinterpreterapi\n    # via ipykernel\n    # via jupyter-client\n    # via jupyter-server\n    # via notebook\nreferencing==0.35.1\n    # via jsonschema\n    # via jsonschema-specifications\n    # via jupyter-events\nregex==2024.9.11\n    # via mkdocs-material\n    # via tiktoken\nrequests==2.32.3\n    # via codeboxapi\n    # via jupyter-kernel-gateway\n    # via langchain\n    # via langchain-community\n    # via langsmith\n    # via mkdocs-material\n    # via requests-toolbelt\n    # via streamlit\n    # via tiktoken\nrequests-toolbelt==1.0.0\n    # via langsmith\nrfc3339-validator==0.1.4\n    # via jsonschema\n    # via jupyter-events\nrfc3986-validator==0.1.1\n    # via jsonschema\n    # via jupyter-events\nrich==13.9.4\n    # via streamlit\nrpds-py==0.20.1\n    # via jsonschema\n    # via referencing\nruff==0.7.2\nsend2trash==1.8.3\n    # via jupyter-server\n    # via notebook\nsix==1.16.0\n    # via asttokens\n    # via python-dateutil\n    # via rfc3339-validator\nsmmap==5.0.1\n    # via gitdb\nsniffio==1.3.1\n    # via anyio\n    # via httpx\n    # via openai\nsoupsieve==2.6\n    # via beautifulsoup4\nsqlalchemy==2.0.35\n    # via langchain\n    # via langchain-community\nstack-data==0.6.3\n    # via ipython\nstreamlit==1.39.0\n    # via codeinterpreterapi\ntenacity==8.5.0\n    # via langchain\n    # via langchain-community\n    # via langchain-core\n    # via streamlit\nterminado==0.18.1\n    # via jupyter-server\n    # via jupyter-server-terminals\n    # via notebook\ntiktoken==0.8.0\n    # via langchain-openai\ntinycss2==1.4.0\n    # via nbconvert\ntoml==0.10.2\n    # via streamlit\ntomli==2.0.2\n    # via mypy\n    # via pytest\ntornado==6.4.1\n    # via ipykernel\n    # via jupyter-client\n    # via jupyter-kernel-gateway\n    # via jupyter-server\n    # via notebook\n    # via streamlit\n    # via terminado\ntqdm==4.67.0\n    # via openai\ntraitlets==5.14.3\n    # via comm\n    # via ipykernel\n    # via ipython\n    # via jupyter-client\n    # via jupyter-core\n    # via jupyter-events\n    # via jupyter-kernel-gateway\n    # via jupyter-server\n    # via matplotlib-inline\n    # via nbclient\n    # via nbconvert\n    # via nbformat\n    # via notebook\ntypes-python-dateutil==2.9.0.20241003\n    # via arrow\ntyping-extensions==4.12.2\n    # via altair\n    # via anyio\n    # via ipython\n    # via multidict\n    # via mypy\n    # via openai\n    # via pydantic\n    # via pydantic-core\n    # via rich\n    # via sqlalchemy\n    # via streamlit\n    # via typing-inspect\ntyping-inspect==0.9.0\n    # via dataclasses-json\ntzdata==2024.2\n    # via pandas\nuri-template==1.3.0\n    # via jsonschema\nurllib3==2.2.3\n    # via requests\nvirtualenv==20.27.1\n    # via pre-commit\nwatchdog==6.0.0\n    # via mkdocs\nwcwidth==0.2.13\n    # via prompt-toolkit\nwebcolors==24.8.0\n    # via jsonschema\nwebencodings==0.5.1\n    # via bleach\n    # via tinycss2\nwebsocket-client==1.8.0\n    # via jupyter-server\nwebsockets==13.1\n    # via codeboxapi\nyarl==1.17.1\n    # via aiohttp\nzipp==3.20.2\n    # via importlib-metadata\n"
        },
        {
          "name": "requirements.lock",
          "type": "blob",
          "size": 3.271484375,
          "content": "# generated by rye\n# use `rye lock` or `rye sync` to update this lockfile\n#\n# last locked with the following flags:\n#   pre: false\n#   features: []\n#   all-features: false\n#   with-sources: false\n#   generate-hashes: false\n#   universal: false\n\n-e file:.\naiohappyeyeballs==2.4.3\n    # via aiohttp\naiohttp==3.10.10\n    # via codeboxapi\n    # via langchain\n    # via langchain-community\naiosignal==1.3.1\n    # via aiohttp\nannotated-types==0.7.0\n    # via pydantic\nanyio==4.6.2.post1\n    # via httpx\n    # via openai\nasync-timeout==4.0.3\n    # via aiohttp\n    # via langchain\nattrs==24.2.0\n    # via aiohttp\ncertifi==2024.8.30\n    # via httpcore\n    # via httpx\n    # via requests\ncharset-normalizer==3.4.0\n    # via requests\ncodeboxapi==0.1.19\n    # via codeinterpreterapi\ndataclasses-json==0.6.7\n    # via langchain\n    # via langchain-community\ndistro==1.9.0\n    # via openai\nexceptiongroup==1.2.2\n    # via anyio\nfrozenlist==1.5.0\n    # via aiohttp\n    # via aiosignal\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.6\n    # via httpx\nhttpx==0.27.2\n    # via langsmith\n    # via openai\nidna==3.10\n    # via anyio\n    # via httpx\n    # via requests\n    # via yarl\njiter==0.7.0\n    # via openai\njsonpatch==1.33\n    # via langchain-core\njsonpointer==3.0.0\n    # via jsonpatch\nlangchain==0.1.20\n    # via codeinterpreterapi\nlangchain-community==0.0.38\n    # via langchain\nlangchain-core==0.1.53\n    # via langchain\n    # via langchain-community\n    # via langchain-openai\n    # via langchain-text-splitters\nlangchain-openai==0.1.7\n    # via codeinterpreterapi\nlangchain-text-splitters==0.0.2\n    # via langchain\nlangsmith==0.1.139\n    # via langchain\n    # via langchain-community\n    # via langchain-core\nmarshmallow==3.23.1\n    # via dataclasses-json\nmultidict==6.1.0\n    # via aiohttp\n    # via yarl\nmypy-extensions==1.0.0\n    # via typing-inspect\nnumpy==1.26.4\n    # via langchain\n    # via langchain-community\nopenai==1.54.3\n    # via langchain-openai\norjson==3.10.11\n    # via langsmith\npackaging==23.2\n    # via langchain-core\n    # via marshmallow\npropcache==0.2.0\n    # via yarl\npydantic==2.9.2\n    # via codeboxapi\n    # via langchain\n    # via langchain-core\n    # via langsmith\n    # via openai\n    # via pydantic-settings\npydantic-core==2.23.4\n    # via pydantic\npydantic-settings==2.6.1\n    # via codeboxapi\npython-dotenv==1.0.1\n    # via pydantic-settings\npyyaml==6.0.2\n    # via langchain\n    # via langchain-community\n    # via langchain-core\npyzmq==25.1.2\n    # via codeinterpreterapi\nregex==2024.11.6\n    # via tiktoken\nrequests==2.32.3\n    # via codeboxapi\n    # via langchain\n    # via langchain-community\n    # via langsmith\n    # via requests-toolbelt\n    # via tiktoken\nrequests-toolbelt==1.0.0\n    # via langsmith\nsniffio==1.3.1\n    # via anyio\n    # via httpx\n    # via openai\nsqlalchemy==2.0.35\n    # via langchain\n    # via langchain-community\ntenacity==8.5.0\n    # via langchain\n    # via langchain-community\n    # via langchain-core\ntiktoken==0.8.0\n    # via langchain-openai\ntqdm==4.67.0\n    # via openai\ntyping-extensions==4.12.2\n    # via anyio\n    # via multidict\n    # via openai\n    # via pydantic\n    # via pydantic-core\n    # via sqlalchemy\n    # via typing-inspect\ntyping-inspect==0.9.0\n    # via dataclasses-json\nurllib3==2.2.3\n    # via requests\nwebsockets==13.1\n    # via codeboxapi\nyarl==1.17.1\n    # via aiohttp\n"
        },
        {
          "name": "roadmap.todo",
          "type": "blob",
          "size": 0.1845703125,
          "content": "[ ] - funcchain rewrite\n\n[ ] - local model support\n\n[ ] - codeinterpreter-ui (self hosted web frontend)\n\n[ ] - codeinterpreter-api (serve mode)\n\n[ ] - codeinterpreter-cli (cli chat)\n\n[ ] -\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}