{
  "metadata": {
    "timestamp": 1736559698292,
    "page": 380,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "strawberry-graphql/strawberry",
      "stars": 4096,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".alexignore",
          "type": "blob",
          "size": 0.021484375,
          "content": "CHANGELOG.md\nTWEET.md\n"
        },
        {
          "name": ".alexrc",
          "type": "blob",
          "size": 0.2197265625,
          "content": "{\n  \"allow\": [\n    \"black\",\n    \"hook\",\n    \"hooks\",\n    \"failure\",\n    \"period\",\n    \"execute\",\n    \"executed\",\n    \"executes\",\n    \"execution\",\n    \"reject\",\n    \"special\",\n    \"primitive\",\n    \"invalid\",\n    \"crash\"\n  ]\n}\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.353515625,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n\n  status:\n    project: yes\n    patch: yes\n    changes: no\n\ncomment:\n  layout: \"header, diff\"\n  behavior: default\n  require_changes: no\n\nignore:\n  - \"strawberry/ext/mypy_plugin.py\"\n  - \"setup.py\"\n  - \"strawberry/experimental/pydantic/conversion_types.py\"\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.845703125,
          "content": "# .coveragerc to control coverage.py\n[run]\nbranch = True\n\n[report]\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Don't complain about missing debug-only code:\n    def __repr__\n    if self\\.debug\n\n    # Don't complain if tests don't hit defensive assertion code:\n    raise AssertionError\n    raise NotImplementedError\n    raise UnsupportedTypeError\n\n    # Don't complain if non-runnable code isn't run:\n    if 0:\n    if __name__ == .__main__.:\n\n    # Don't complain about abstract methods, they aren't run:\n    @(abc\\.)?abstractmethod\n\n    # Don't complain about TYPE_CHECKING\n    if TYPE_CHECKING:\n\n    @overload\n\n    # Those are not supposed to be hit\n    assert_never\\(\\w+\\)\n\nignore_errors = True\n\nomit =\n  ./.venv/**\n  noxfile.py\n\n[html]\ndirectory = coverage_html_report\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0712890625,
          "content": ".git\n.github\n.benchmarks\n.devcotainer\n.venv\n.mypy_cache\n.nox\n.ruff_cache\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.20703125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\n\n[*.py]\nindent_size = 4\ntrim_trailing_whitespace = true\nmax_line_length = 88\ninsert_final_newline = true\n\n[*.yml]\nindent_size = 2\ninsert_final_newline = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.5908203125,
          "content": "# Created by https://www.gitignore.io/api/macos,linux,python,windows\n# Edit at https://www.gitignore.io/?templates=macos,linux,python,windows\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\nPipfile\nPipfile.lock\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n### Python Patch ###\n.venv/\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# End of https://www.gitignore.io/api/macos,linux,python,windows\n\n.vscode/\n.idea/\nnode_modules/\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.251953125,
          "content": "tasks:\n  - before: |\n      curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -\n      source $HOME/.poetry/env\n      pip install pre-commit\n    init: |\n      poetry install\n      pre-commit install --install-hooks\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.994140625,
          "content": "repos:\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff-format\n        exclude: ^tests/\\w+/snapshots/\n      - id: ruff\n        exclude: ^tests/\\w+/snapshots/\n\n  - repo: https://github.com/patrick91/pre-commit-alex\n    rev: aa5da9e54b92ab7284feddeaf52edf14b1690de3\n    hooks:\n      - id: alex\n        exclude: (CHANGELOG|TWEET).md\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v4.0.0-alpha.8\n    hooks:\n      - id: prettier\n        files: '^docs/.*\\.mdx?$'\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-merge-conflict\n      - id: end-of-file-fixer\n        exclude: ^tests/relay/snapshots\n      - id: check-toml\n      - id: no-commit-to-branch\n        args: [\"--branch\", \"main\"]\n\n  - repo: https://github.com/adamchainz/blacken-docs\n    rev: 1.19.1\n    hooks:\n      - id: blacken-docs\n        args: [--skip-errors]\n        files: '\\.(rst|md|markdown|py|mdx)$'\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.046875,
          "content": "{\n  \"proseWrap\": \"always\",\n  \"printWidth\": 80\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 320.484375,
          "content": "CHANGELOG\n=========\n\n0.257.0 - 2025-01-09\n--------------------\n\nThe common `node: Node` used to resolve relay nodes means we will be relying on\nis_type_of to check if the returned object is in fact a subclass of the Node\ninterface.\n\nHowever, integrations such as Django, SQLAlchemy and Pydantic will not return\nthe type itself, but instead an alike object that is later resolved to the\nexpected type.\n\nIn case there are more than one possible type defined for that model that is\nbeing returned, the first one that replies True to `is_type_of` check would be\nused in the resolution, meaning that when asking for `\"PublicUser:123\"`,\nstrawberry could end up returning `\"User:123\"`, which can lead to security\nissues (such as data leakage).\n\nIn here we are introducing a new `strawberry.cast`, which will be used to mark\nan object with the already known type by us, and when asking for is_type_of that\nmark will be used to check instead, ensuring we will return the correct type.\n\nThat `cast` is already in place for the relay node resolution and pydantic.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3749](https://github.com/strawberry-graphql/strawberry/pull/3749/)\n\n\n0.256.1 - 2024-12-23\n--------------------\n\nThis release updates Strawberry internally to no longer pass keywords arguments\nto `pathlib.PurePath`. Support for supplying keyword arguments to\n`pathlib.PurePath` is deprecated and scheduled for removal in Python 3.14\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3738](https://github.com/strawberry-graphql/strawberry/pull/3738/)\n\n\n0.256.0 - 2024-12-21\n--------------------\n\nThis release drops support for Python 3.8, which reached its end-of-life (EOL)\nin October 2024. The minimum supported Python version is now 3.9.\n\nWe strongly recommend upgrading to Python 3.9 or a newer version, as older\nversions are no longer maintained and may contain security vulnerabilities.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3730](https://github.com/strawberry-graphql/strawberry/pull/3730/)\n\n\n0.255.0 - 2024-12-20\n--------------------\n\nThis release adds support for making Relay connection optional, this is useful\nwhen you want to add permission classes to the connection and not fail the whole\nquery if the user doesn't have permission to access the connection.\n\nExample:\n\n```python\nimport strawberry\nfrom strawberry import relay\nfrom strawberry.permission import BasePermission\n\n\nclass IsAuthenticated(BasePermission):\n    message = \"User is not authenticated\"\n\n    # This method can also be async!\n    def has_permission(\n        self, source: typing.Any, info: strawberry.Info, **kwargs\n    ) -> bool:\n        return False\n\n\n@strawberry.type\nclass Fruit(relay.Node):\n    code: relay.NodeID[int]\n    name: str\n    weight: float\n\n    @classmethod\n    def resolve_nodes(\n        cls,\n        *,\n        info: strawberry.Info,\n        node_ids: Iterable[str],\n    ):\n        return []\n\n\n@strawberry.type\nclass Query:\n    node: relay.Node = relay.node()\n\n    @relay.connection(\n        relay.ListConnection[Fruit] | None, permission_classes=[IsAuthenticated()]\n    )\n    def fruits(self) -> Iterable[Fruit]:\n        # This can be a database query, a generator, an async generator, etc\n        return all_fruits.values()\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3707](https://github.com/strawberry-graphql/strawberry/pull/3707/)\n\n\n0.254.1 - 2024-12-20\n--------------------\n\nThis release updates the Context and RootValue vars to have\na default value of `None`, this makes it easier to use the views\nwithout having to pass in a value for these vars.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3732](https://github.com/strawberry-graphql/strawberry/pull/3732/)\n\n\n0.254.0 - 2024-12-13\n--------------------\n\nThis release adds a new `on_ws_connect` method to all HTTP view integrations.\nThe method is called when a `graphql-transport-ws` or `graphql-ws` connection is\nestablished and can be used to customize the connection acknowledgment behavior.\n\nThis is particularly useful for authentication, authorization, and sending a\ncustom acknowledgment payload to clients when a connection is accepted. For\nexample:\n\n```python\nclass MyGraphQLView(GraphQLView):\n    async def on_ws_connect(self, context: Dict[str, object]):\n        connection_params = context[\"connection_params\"]\n\n        if not isinstance(connection_params, dict):\n            # Reject without a custom graphql-ws error payload\n            raise ConnectionRejectionError()\n\n        if connection_params.get(\"password\") != \"secret:\n            # Reject with a custom graphql-ws error payload\n            raise ConnectionRejectionError({\"reason\": \"Invalid password\"})\n\n        if username := connection_params.get(\"username\"):\n            # Accept with a custom acknowledgement payload\n            return {\"message\": f\"Hello, {username}!\"}\n\n        # Accept without a acknowledgement payload\n        return await super().on_ws_connect(context)\n```\n\nTake a look at our documentation to learn more.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3720](https://github.com/strawberry-graphql/strawberry/pull/3720/)\n\n\n0.253.1 - 2024-12-03\n--------------------\n\nDescription:\nFixed a bug in the OpenTelemetryExtension class where the _span_holder dictionary was incorrectly shared across all instances. This was caused by defining _span_holder as a class-level attribute with a mutable default value (dict()).\n\nContributed by [Conglei](https://github.com/conglei) via [PR #3716](https://github.com/strawberry-graphql/strawberry/pull/3716/)\n\n\n0.253.0 - 2024-11-23\n--------------------\n\nIn this release, the return types of the `get_root_value` and `get_context`\nmethods were updated to be consistent across all view integrations. Before this\nrelease, the return types used by the ASGI and Django views were too generic.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3712](https://github.com/strawberry-graphql/strawberry/pull/3712/)\n\n\n0.252.0 - 2024-11-22\n--------------------\n\nThe view classes of all integrations now have a `decode_json` method that allows\nyou to customize the decoding of HTTP JSON requests.\n\nThis is useful if you want to use a different JSON decoder, for example, to\noptimize performance.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3709](https://github.com/strawberry-graphql/strawberry/pull/3709/)\n\n\n0.251.0 - 2024-11-21\n--------------------\n\nStarting with this release, the same JSON encoder is used to encode HTTP\nresponses and WebSocket messages.\n\nThis enables developers to override the `encode_json` method on their views to\ncustomize the JSON encoder used by all web protocols.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3708](https://github.com/strawberry-graphql/strawberry/pull/3708/)\n\n\n0.250.1 - 2024-11-19\n--------------------\n\nThis release refactors part of the legacy `graphql-ws` protocol implementation, making it easier to read, maintain, and extend.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3704](https://github.com/strawberry-graphql/strawberry/pull/3704/)\n\n\n0.250.0 - 2024-11-18\n--------------------\n\nIn this release, we migrated the `graphql-transport-ws` types from data classes to typed dicts.\nUsing typed dicts enabled us to precisely model `null` versus `undefined` values, which are common in that protocol.\nAs a result, we could remove custom conversion methods handling these cases and simplify the codebase.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3701](https://github.com/strawberry-graphql/strawberry/pull/3701/)\n\n\n0.249.0 - 2024-11-18\n--------------------\n\nAfter a year-long deprecation period, the `SentryTracingExtension` has been\nremoved in favor of the official Sentry SDK integration.\n\nTo migrate, remove the `SentryTracingExtension` from your Strawberry schema and\nthen follow the\n[official Sentry SDK integration guide](https://docs.sentry.io/platforms/python/integrations/strawberry/).\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3672](https://github.com/strawberry-graphql/strawberry/pull/3672/)\n\n\n0.248.1 - 2024-11-08\n--------------------\n\nThis release fixes the following deprecation warning:\n\n```\nFailing to pass a value to the 'type_params' parameter of 'typing._eval_type' is deprecated,\nas it leads to incorrect behaviour when calling typing._eval_type on a stringified annotation\nthat references a PEP 695 type parameter. It will be disallowed in Python 3.15.\n```\n\nThis was only trigger in Python 3.13 and above.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3692](https://github.com/strawberry-graphql/strawberry/pull/3692/)\n\n\n0.248.0 - 2024-11-07\n--------------------\n\nIn this release, all types of the legacy graphql-ws protocol were refactored.\nThe types are now much stricter and precisely model the difference between null and undefined fields.\nAs a result, our protocol implementation and related tests are now more robust and easier to maintain.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3689](https://github.com/strawberry-graphql/strawberry/pull/3689/)\n\n\n0.247.2 - 2024-11-05\n--------------------\n\nThis release fixes the issue that some coroutines in the WebSocket protocol handlers were never awaited if clients disconnected shortly after starting an operation.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3687](https://github.com/strawberry-graphql/strawberry/pull/3687/)\n\n\n0.247.1 - 2024-11-01\n--------------------\n\nStarting with this release, both websocket-based protocols will handle unexpected socket disconnections more gracefully.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3685](https://github.com/strawberry-graphql/strawberry/pull/3685/)\n\n\n0.247.0 - 2024-10-21\n--------------------\n\nThis release fixes a regression in the legacy GraphQL over WebSocket protocol.\nLegacy protocol implementations should ignore client message parsing errors.\nDuring a recent refactor, Strawberry changed this behavior to match the new protocol, where parsing errors must close the WebSocket connection.\nThe expected behavior is restored and adequately tested in this release.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3670](https://github.com/strawberry-graphql/strawberry/pull/3670/)\n\n\n0.246.3 - 2024-10-21\n--------------------\n\nThis release addresses a bug where directives were being added multiple times when defined in an interface which multiple objects inherits from.\n\nThe fix involves deduplicating directives when applying extensions/permissions to a field, ensuring that each directive is only added once.\n\nContributed by [Arthur](https://github.com/Speedy1991) via [PR #3674](https://github.com/strawberry-graphql/strawberry/pull/3674/)\n\n\n0.246.2 - 2024-10-12\n--------------------\n\nThis release tweaks the Flask integration's `render_graphql_ide` method to be stricter typed internally, making type checkers ever so slightly happier.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3666](https://github.com/strawberry-graphql/strawberry/pull/3666/)\n\n\n0.246.1 - 2024-10-09\n--------------------\n\nThis release adds support for using raw Python enum types in your schema\n(enums that are not decorated with `@strawberry.enum`)\n\nThis is useful if you have enum types from other places in your code\nthat you want to use in strawberry.\ni.e\n```py\n# somewhere.py\nfrom enum import Enum\n\n\nclass AnimalKind(Enum):\n    AXOLOTL, CAPYBARA = range(2)\n\n\n# gql/animals\nfrom somewhere import AnimalKind\n\n\n@strawberry.type\nclass AnimalType:\n    kind: AnimalKind\n```\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #3639](https://github.com/strawberry-graphql/strawberry/pull/3639/)\n\n\n0.246.0 - 2024-10-07\n--------------------\n\nThe AIOHTTP, ASGI, and Django test clients' `asserts_errors` option has been renamed to `assert_no_errors` to better reflect its purpose.\nThis change is backwards-compatible, but the old option name will raise a deprecation warning.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3661](https://github.com/strawberry-graphql/strawberry/pull/3661/)\n\n\n0.245.0 - 2024-10-07\n--------------------\n\nThis release removes the dated `subscriptions_enabled` setting from the Django and Channels integrations.\nInstead, WebSocket support is now enabled by default in all GraphQL IDEs.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3660](https://github.com/strawberry-graphql/strawberry/pull/3660/)\n\n\n0.244.1 - 2024-10-06\n--------------------\n\nFixes an issue where the codegen tool would crash when working with a nullable list of types.\n\nContributed by [Jacob Allen](https://github.com/enoua5) via [PR #3653](https://github.com/strawberry-graphql/strawberry/pull/3653/)\n\n\n0.244.0 - 2024-10-05\n--------------------\n\nStarting with this release, WebSocket logic now lives in the base class shared between all HTTP integrations.\nThis makes the behaviour of WebSockets much more consistent between integrations and easier to maintain.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3638](https://github.com/strawberry-graphql/strawberry/pull/3638/)\n\n\n0.243.1 - 2024-09-26\n--------------------\n\nThis releases adds support for Pydantic 2.9.0's Mypy plugin\n\nContributed by [Krisque](https://github.com/chrisemke) via [PR #3632](https://github.com/strawberry-graphql/strawberry/pull/3632/)\n\n\n0.243.0 - 2024-09-25\n--------------------\n\nStarting with this release, multipart uploads are disabled by default and Strawberry Django view is no longer implicitly exempted from Django's CSRF protection.\nBoth changes relieve users from implicit security implications inherited from the GraphQL multipart request specification which was enabled in Strawberry by default.\n\nThese are breaking changes if you are using multipart uploads OR the Strawberry Django view.\nMigrations guides including further information are available on the Strawberry website.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3645](https://github.com/strawberry-graphql/strawberry/pull/3645/)\n\n\n0.242.0 - 2024-09-19\n--------------------\n\nStarting with this release, clients using the legacy graphql-ws subprotocol will receive an error when they try to send binary data frames.\nBefore, binary data frames were silently ignored.\n\nWhile vaguely defined in the protocol, the legacy graphql-ws subprotocol is generally understood to only support text data frames.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3633](https://github.com/strawberry-graphql/strawberry/pull/3633/)\n\n\n0.241.0 - 2024-09-16\n--------------------\n\nYou can now configure your schemas to provide a custom subclass of\n`strawberry.types.Info` to your types and queries.\n\n```py\nimport strawberry\nfrom strawberry.schema.config import StrawberryConfig\n\nfrom .models import ProductModel\n\n\nclass CustomInfo(strawberry.Info):\n    @property\n    def selected_group_id(self) -> int | None:\n        \"\"\"Get the ID of the group you're logged in as.\"\"\"\n        return self.context[\"request\"].headers.get(\"Group-ID\")\n\n\n@strawberry.type\nclass Group:\n    id: strawberry.ID\n    name: str\n\n\n@strawberry.type\nclass User:\n    id: strawberry.ID\n    name: str\n    group: Group\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def user(self, id: strawberry.ID, info: CustomInfo) -> Product:\n        kwargs = {\"id\": id, \"name\": ...}\n\n        if info.selected_group_id is not None:\n            # Get information about the group you're a part of, if\n            # available.\n            kwargs[\"group\"] = ...\n\n        return User(**kwargs)\n\n\nschema = strawberry.Schema(\n    Query,\n    config=StrawberryConfig(info_class=CustomInfo),\n)\n```\n\nContributed by [Ethan Henderson](https://github.com/parafoxia) via [PR #3592](https://github.com/strawberry-graphql/strawberry/pull/3592/)\n\n\n0.240.4 - 2024-09-13\n--------------------\n\nThis release fixes how we check for multipart subscriptions to be\nin line with the latest changes in the spec.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3627](https://github.com/strawberry-graphql/strawberry/pull/3627/)\n\n\n0.240.3 - 2024-09-12\n--------------------\n\nThis release fixes an issue that prevented extensions to receive the result from\nthe execution context when executing operations in async.\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #3629](https://github.com/strawberry-graphql/strawberry/pull/3629/)\n\n\n0.240.2 - 2024-09-11\n--------------------\n\nThis release updates how we check for GraphQL core's version to remove a\ndependency on the `packaging` package.\n\nContributed by [Nicholas Bollweg](https://github.com/bollwyvl) via [PR #3622](https://github.com/strawberry-graphql/strawberry/pull/3622/)\n\n\n0.240.1 - 2024-09-11\n--------------------\n\nThis release adds support for Python 3.13 (which will be out soon!)\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3510](https://github.com/strawberry-graphql/strawberry/pull/3510/)\n\n\n0.240.0 - 2024-09-10\n--------------------\n\nThis release adds support for schema-extensions in subscriptions.\n\nHere's a small example of how to use them (they work the same way as query and\nmutation extensions):\n\n```python\nimport asyncio\nfrom typing import AsyncIterator\n\nimport strawberry\nfrom strawberry.extensions.base_extension import SchemaExtension\n\n\n@strawberry.type\nclass Subscription:\n    @strawberry.subscription\n    async def notifications(self, info: strawberry.Info) -> AsyncIterator[str]:\n        for _ in range(3):\n            yield \"Hello\"\n\n\nclass MyExtension(SchemaExtension):\n    async def on_operation(self):\n        # This would run when the subscription starts\n        print(\"Subscription started\")\n        yield\n        # The subscription has ended\n        print(\"Subscription ended\")\n\n\nschema = strawberry.Schema(\n    query=Query, subscription=Subscription, extensions=[MyExtension]\n)\n```\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #3554](https://github.com/strawberry-graphql/strawberry/pull/3554/)\n\n\n0.239.2 - 2024-09-03\n--------------------\n\nThis release fixes a TypeError on Python 3.8 due to us using a\n`asyncio.Queue[Tuple[bool, Any]](1)` instead of `asyncio.Queue(1)`.\n\nContributed by [Daniel Szoke](https://github.com/szokeasaurusrex) via [PR #3615](https://github.com/strawberry-graphql/strawberry/pull/3615/)\n\n\n0.239.1 - 2024-09-02\n--------------------\n\nThis release fixes an issue with the http multipart subscription where the\nstatus code would be returned as `None`, instead of 200.\n\nWe also took the opportunity to update the internals to better support\nadditional protocols in future.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3610](https://github.com/strawberry-graphql/strawberry/pull/3610/)\n\n\n0.239.0 - 2024-08-31\n--------------------\n\nThis release adds support for multipart subscriptions in almost all[^1] of our\nhttp integrations!\n\n[Multipart subcriptions](https://www.apollographql.com/docs/router/executing-operations/subscription-multipart-protocol/)\nare a new protocol from Apollo GraphQL, built on the\n[Incremental Delivery over HTTP spec](https://github.com/graphql/graphql-over-http/blob/main/rfcs/IncrementalDelivery.md),\nwhich is also used for `@defer` and `@stream`.\n\nThe main advantage of this protocol is that when using the Apollo Client\nlibraries you don't need to install any additional dependency, but in future\nthis feature should make it easier for us to implement `@defer` and `@stream`\n\nAlso, this means that you don't need to use Django Channels for subscription,\nsince this protocol is based on HTTP we don't need to use websockets.\n\n[^1]: Flask, Chalice and the sync Django integration don't support this.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3076](https://github.com/strawberry-graphql/strawberry/pull/3076/)\n\n\n0.238.1 - 2024-08-30\n--------------------\n\nFix an issue where `StrawberryResolver.is_async` was returning `False` for a\nfunction decorated with asgiref's `@sync_to_async`.\n\nThe root cause is that in python >= 3.12 coroutine functions are market using\n`inspect.markcoroutinefunction`, which should be checked with\n`inspect.iscoroutinefunction` instead of `asyncio.iscoroutinefunction`\n\nContributed by [Hyun S. Moon](https://github.com/shmoon-kr) via [PR #3599](https://github.com/strawberry-graphql/strawberry/pull/3599/)\n\n\n0.238.0 - 2024-08-30\n--------------------\n\nThis release removes the integration of Starlite, as it\nhas been deprecated since 11 May 2024.\n\nIf you are using Starlite, please consider migrating to Litestar (https://litestar.dev) or another alternative.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3609](https://github.com/strawberry-graphql/strawberry/pull/3609/)\n\n\n0.237.3 - 2024-07-31\n--------------------\n\nThis release fixes the type of the ASGI request handler's `scope` argument, making type checkers ever so slightly happier.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3581](https://github.com/strawberry-graphql/strawberry/pull/3581/)\n\n\n0.237.2 - 2024-07-26\n--------------------\n\nThis release makes the ASGI and FastAPI integrations share their HTTP request adapter code, making Strawberry ever so slightly smaller and easier to maintain.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3582](https://github.com/strawberry-graphql/strawberry/pull/3582/)\n\n\n0.237.1 - 2024-07-24\n--------------------\n\nThis release adds support for GraphQL-core v3.3 (which has not yet been\nreleased). Note that we continue to support GraphQL-core v3.2 as well.\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #3570](https://github.com/strawberry-graphql/strawberry/pull/3570/)\n\n\n0.237.0 - 2024-07-24\n--------------------\n\nThis release ensures using pydantic 2.8.0 doesn't break when using experimental\npydantic_type and running mypy.\n\nContributed by [Martin Roy](https://github.com/lindycoder) via [PR #3562](https://github.com/strawberry-graphql/strawberry/pull/3562/)\n\n\n0.236.2 - 2024-07-23\n--------------------\n\nUpdate federation entity resolver exception handling to set the result to the original error instead of a `GraphQLError`, which obscured the original message and meta-fields.\n\nContributed by [Bradley Oesch](https://github.com/bradleyoesch) via [PR #3144](https://github.com/strawberry-graphql/strawberry/pull/3144/)\n\n\n0.236.1 - 2024-07-23\n--------------------\n\nThis release fixes an issue where optional lazy types using `| None` were\nfailing to be correctly resolved inside modules using future annotations, e.g.\n\n```python\nfrom __future__ import annotations\n\nfrom typing import Annotated, TYPE_CHECKING\n\nimport strawberry\n\nif TYPE_CHECKING:\n    from types import Group\n\n\n@strawberry.type\nclass Person:\n    group: Annotated[\"Group\", strawberry.lazy(\"types.group\")] | None\n```\n\nThis should now work as expected.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3576](https://github.com/strawberry-graphql/strawberry/pull/3576/)\n\n\n0.236.0 - 2024-07-17\n--------------------\n\nThis release changes some of the internals of Strawberry, it shouldn't\nbe affecting most of the users, but since we have changed the structure\nof the code you might need to update your imports.\n\nThankfully we also provide a codemod for this, you can run it with:\n\n```bash\nstrawberry upgrade update-imports\n```\n\nThis release also includes additional documentation to some of\nthe classes, methods and functions, this is in preparation for\nhaving the API reference in the documentation ✨\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3546](https://github.com/strawberry-graphql/strawberry/pull/3546/)\n\n\n0.235.2 - 2024-07-08\n--------------------\n\nThis release removes an unnecessary check from our internal GET query parsing logic making it simpler and (insignificantly) faster.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3558](https://github.com/strawberry-graphql/strawberry/pull/3558/)\n\n\n0.235.1 - 2024-06-26\n--------------------\n\nThis release improves the performance when returning a lot of data, especially\nwhen using generic inputs (where we got a 7x speedup in our benchmark!).\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3549](https://github.com/strawberry-graphql/strawberry/pull/3549/)\n\n\n0.235.0 - 2024-06-10\n--------------------\n\nThis release adds a new configuration to disable field suggestions in the error\nresponse.\n\n```python\n@strawberry.type\nclass Query:\n    name: str\n\n\nschema = strawberry.Schema(\n    query=Query, config=StrawberryConfig(disable_field_suggestions=True)\n)\n```\n\nTrying to query `{ nam }` will not suggest to query `name` instead.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3537](https://github.com/strawberry-graphql/strawberry/pull/3537/)\n\n\n0.234.3 - 2024-06-10\n--------------------\n\nFixes a bug where pydantic models as the default value for an input did not print the proper schema.\nSee [this issue](https://github.com/strawberry-graphql/strawberry/issues/3285).\n\nContributed by [ppease](https://github.com/ppease) via [PR #3499](https://github.com/strawberry-graphql/strawberry/pull/3499/)\n\n\n0.234.2 - 2024-06-07\n--------------------\n\nThis release fixes an issue when trying to retrieve specialized type vars from a\ngeneric type that has been aliased to a name, in cases like:\n\n```python\n@strawberry.type\nclass Fruit(Generic[T]): ...\n\n\nSpecializedFruit = Fruit[str]\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3535](https://github.com/strawberry-graphql/strawberry/pull/3535/)\n\n\n0.234.1 - 2024-06-06\n--------------------\n\nImproved error message when supplying GlobalID with invalid or unknown type name component\n\nContributed by [Take Weiland](https://github.com/diesieben07) via [PR #3533](https://github.com/strawberry-graphql/strawberry/pull/3533/)\n\n\n0.234.0 - 2024-06-01\n--------------------\n\nThis release separates the `relay.ListConnection` logic that calculates the\nslice of the nodes into a separate function.\n\nThis allows for easier reuse of that logic for other places/libraries.\n\nThe new function lives in the `strawberry.relay.utils` and can be used by\ncalling `SliceMetadata.from_arguments`.\n\nThis has no implications to end users.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3530](https://github.com/strawberry-graphql/strawberry/pull/3530/)\n\n\n0.233.3 - 2024-05-31\n--------------------\n\nThis release fixes a typing issue where trying to type a `root` argument with\n`strawberry.Parent` would fail, like in the following example:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass SomeType:\n    @strawberry.field\n    def hello(self, root: strawberry.Parent[str]) -> str:\n        return \"world\"\n```\n\nThis should now work as intended.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3529](https://github.com/strawberry-graphql/strawberry/pull/3529/)\n\n\n0.233.2 - 2024-05-31\n--------------------\n\nThis release fixes an introspection issue when requesting `isOneOf` on built-in\nscalars, like `String`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3528](https://github.com/strawberry-graphql/strawberry/pull/3528/)\n\n\n0.233.1 - 2024-05-30\n--------------------\n\nThis release exposes `get_arguments` in the schema_converter module to allow\nintegrations, such as strawberry-django, to reuse that functionality if needed.\n\nThis is an internal change with no impact for end users.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3527](https://github.com/strawberry-graphql/strawberry/pull/3527/)\n\n\n0.233.0 - 2024-05-29\n--------------------\n\nThis release refactors our Federation integration to create types using\nStrawberry directly, instead of using low level types from GraphQL-core.\n\nThe only user facing change is that now the `info` object passed to the\n`resolve_reference` function is the `strawberry.Info` object instead of the one\ncoming coming from GraphQL-core. This is a **breaking change** for users that\nwere using the `info` object directly.\n\nIf you need to access the original `info` object you can do so by accessing the\n`_raw_info` attribute.\n\n```python\nimport strawberry\n\n\n@strawberry.federation.type(keys=[\"upc\"])\nclass Product:\n    upc: str\n\n    @classmethod\n    def resolve_reference(cls, info: strawberry.Info, upc: str) -> \"Product\":\n        # Access the original info object\n        original_info = info._raw_info\n\n        return Product(upc=upc)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3525](https://github.com/strawberry-graphql/strawberry/pull/3525/)\n\n\n0.232.2 - 2024-05-28\n--------------------\n\nThis release fixes an issue that would prevent using lazy aliased connections to\nannotate a connection field.\n\nFor example, this should now work correctly:\n\n```python\n# types.py\n\n\n@strawberry.type\nclass Fruit: ...\n\n\nFruitConnection: TypeAlias = ListConnection[Fruit]\n```\n\n```python\n# schema.py\n\n\n@strawberry.type\nclass Query:\n    fruits: Annotated[\"FruitConnection\", strawberry.lazy(\"types\")] = (\n        strawberry.connection()\n    )\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3524](https://github.com/strawberry-graphql/strawberry/pull/3524/)\n\n\n0.232.1 - 2024-05-27\n--------------------\n\nThis release fixes an issue where mypy would complain when using a typed async\nresolver with `strawberry.field(resolver=...)`.\n\nNow the code will type check correctly. We also updated our test suite to make\nwe catch similar issues in the future.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3516](https://github.com/strawberry-graphql/strawberry/pull/3516/)\n\n\n0.232.0 - 2024-05-25\n--------------------\n\nThis release improves type checking for async resolver functions when used as\n`strawberry.field(resolver=resolver_func)`.\n\nNow doing this will raise a type error:\n\n```python\nimport strawberry\n\n\ndef some_resolver() -> int:\n    return 0\n\n\n@strawberry.type\nclass User:\n    # Note the field being typed as str instead of int\n    name: str = strawberry.field(resolver=some_resolver)\n```\n\nContributed by [Bryan Ricker](https://github.com/bricker) via [PR #3241](https://github.com/strawberry-graphql/strawberry/pull/3241/)\n\n\n0.231.1 - 2024-05-25\n--------------------\n\nFixes an issue where lazy annotations raised an error when used together with a List\n\nContributed by [jeich](https://github.com/jeich) via [PR #3388](https://github.com/strawberry-graphql/strawberry/pull/3388/)\n\n\n0.231.0 - 2024-05-25\n--------------------\n\nWhen calling the CLI without all the necessary dependencies installed,\na `MissingOptionalDependenciesError` will be raised instead of a\n`ModuleNotFoundError`. This new exception will provide a more helpful\nhint regarding how to fix the problem.\n\nContributed by [Ethan Henderson](https://github.com/parafoxia) via [PR #3511](https://github.com/strawberry-graphql/strawberry/pull/3511/)\n\n\n0.230.0 - 2024-05-22\n--------------------\n\nThis release adds support for `@oneOf` on input types! 🎉 You can use\n`one_of=True` on input types to create an input type that should only have one\nof the fields set.\n\n```python\nimport strawberry\n\n\n@strawberry.input(one_of=True)\nclass ExampleInputTagged:\n    a: str | None = strawberry.UNSET\n    b: int | None = strawberry.UNSET\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3429](https://github.com/strawberry-graphql/strawberry/pull/3429/)\n\n\n0.229.2 - 2024-05-22\n--------------------\n\nThis release fixes an issue when using `Annotated` + `strawberry.lazy` +\ndeferred annotations such as:\n\n```python\nfrom __future__ import annotations\nimport strawberry\nfrom typing import Annotated\n\n\n@strawberry.type\nclass Query:\n    a: Annotated[\"datetime\", strawberry.lazy(\"datetime\")]\n\n\nschema = strawberry.Schema(Query)\n```\n\nBefore this would only work if `datetime` was not inside quotes. Now it should\nwork as expected!\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3507](https://github.com/strawberry-graphql/strawberry/pull/3507/)\n\n\n0.229.1 - 2024-05-15\n--------------------\n\nThis release fixes a regression from 0.229.0 where using a generic interface\ninside a union would return an error.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3502](https://github.com/strawberry-graphql/strawberry/pull/3502/)\n\n\n0.229.0 - 2024-05-12\n--------------------\n\nThis release improves our support for generic types, now using the same the same\ngeneric multiple times with a list inside an interface or union is supported,\nfor example the following will work:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass BlockRow[T]:\n    items: list[T]\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def blocks(self) -> list[BlockRow[str] | BlockRow[int]]:\n        return [\n            BlockRow(items=[\"a\", \"b\", \"c\"]),\n            BlockRow(items=[1, 2, 3, 4]),\n        ]\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3463](https://github.com/strawberry-graphql/strawberry/pull/3463/)\n\n\n0.228.0 - 2024-05-12\n--------------------\n\nThis releases updates the JSON scalar definition to have the updated `specifiedBy` URL.\n\nThe release is marked as minor because it will change the generated schema if you're using the JSON scalar.\n\nContributed by [Egor](https://github.com/Birdi7) via [PR #3478](https://github.com/strawberry-graphql/strawberry/pull/3478/)\n\n\n0.227.7 - 2024-05-12\n--------------------\n\nThis releases updates the `field-extensions` documentation's `StrawberryField` stability warning to include stable features.\n\nThe release is marked as patch because it only changes documentation.\n\nContributed by [Ray Sy](https://github.com/fireteam99) via [PR #3496](https://github.com/strawberry-graphql/strawberry/pull/3496/)\n\n\n0.227.6 - 2024-05-11\n--------------------\n\nFix `AssertionError` caused by the `DatadogTracingExtension` whenever the query is unavailable.\n\nThe bug in question was reported by issue [#3150](https://github.com/strawberry-graphql/strawberry/issues/3150).\nThe datadog extension would throw an `AssertionError` whenever there was no query available. This could happen if,\nfor example, a user POSTed something to `/graphql` with a JSON that doesn't contain a `query` field as per the\nGraphQL spec.\n\nThe fix consists of adding `query_missing` to the `operation_type` tag, and also adding `query_missing` to the resource name.\nIt also makes it easier to look for logs of users making invalid queries by searching for `query_missing` in Datadog.\n\nContributed by [Lucas Valente](https://github.com/serramatutu) via [PR #3483](https://github.com/strawberry-graphql/strawberry/pull/3483/)\n\n\n0.227.5 - 2024-05-11\n--------------------\n\n**Deprecations:** This release deprecates the `Starlite` integration in favour of the `LiteStar` integration.\nRefer to the [LiteStar](./litestar.md) integration for more information.\nLiteStar is a [renamed](https://litestar.dev/about/organization.html#litestar-and-starlite) and upgraded version of Starlite.\n\nBefore:\n\n```python\nfrom strawberry.starlite import make_graphql_controller\n```\n\nAfter:\n\n```python\nfrom strawberry.litestar import make_graphql_controller\n```\n\nContributed by [Egor](https://github.com/Birdi7) via [PR #3492](https://github.com/strawberry-graphql/strawberry/pull/3492/)\n\n\n0.227.4 - 2024-05-09\n--------------------\n\nThis release fixes a bug in release 0.227.3 where FragmentSpread nodes\nwere not resolving edges.\n\nContributed by [Eric Uriostigue](https://github.com/euriostigue) via [PR #3487](https://github.com/strawberry-graphql/strawberry/pull/3487/)\n\n\n0.227.3 - 2024-05-01\n--------------------\n\nThis release adds an optimization to `ListConnection` such that only queries with\n`edges` or `pageInfo` in their selected fields triggers `resolve_edges`.\n\nThis change is particularly useful for the `strawberry-django` extension's\n`ListConnectionWithTotalCount` and the only selected field is `totalCount`. An\nextraneous SQL query is prevented with this optimization.\n\nContributed by [Eric Uriostigue](https://github.com/euriostigue) via [PR #3480](https://github.com/strawberry-graphql/strawberry/pull/3480/)\n\n\n0.227.2 - 2024-04-21\n--------------------\n\nThis release fixes a minor issue where the docstring for the relay util `to_base64` described the return type incorrectly.\n\nContributed by [Gavin Bannerman](https://github.com/gbannerman) via [PR #3467](https://github.com/strawberry-graphql/strawberry/pull/3467/)\n\n\n0.227.1 - 2024-04-20\n--------------------\n\nThis release fixes an issue where annotations on `@strawberry.type`s were overridden\nby our code. With release all annotations should be preserved.\n\nThis is useful for libraries that use annotations to introspect Strawberry types.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3003](https://github.com/strawberry-graphql/strawberry/pull/3003/)\n\n\n0.227.0 - 2024-04-19\n--------------------\n\nThis release improves the schema codegen, making it more robust and easier to\nuse.\n\nIt does this by introducing a directed acyclic graph for the schema codegen,\nwhich should reduce the amount of edits needed to make the generated code work,\nsince it will be able to generate the code in the correct order (based on the\ndependencies of each type).\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3116](https://github.com/strawberry-graphql/strawberry/pull/3116/)\n\n\n0.226.2 - 2024-04-19\n--------------------\n\nThis release updates our Mypy plugin to add support for Pydantic >= 2.7.0\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3462](https://github.com/strawberry-graphql/strawberry/pull/3462/)\n\n\n0.226.1 - 2024-04-19\n--------------------\n\nThis releases fixes a bug in the mypy plugin where the `from_pydantic` method\nwas not correctly typed.\n\nContributed by [Corentin-Br](https://github.com/Corentin-Br) via [PR #3368](https://github.com/strawberry-graphql/strawberry/pull/3368/)\n\n\n0.226.0 - 2024-04-17\n--------------------\n\nStarting with this release, any error raised from within schema\nextensions will abort the operation and is returned to the client.\n\nThis corresponds to the way we already handle field extension errors\nand resolver errors.\n\nThis is particular useful for schema extensions performing checks early\nin the request lifecycle, for example:\n\n```python\nclass MaxQueryLengthExtension(SchemaExtension):\n    MAX_QUERY_LENGTH = 8192\n\n    async def on_operation(self):\n        if len(self.execution_context.query) > self.MAX_QUERY_LENGTH:\n            raise StrawberryGraphQLError(message=\"Query too large\")\n        yield\n```\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #3217](https://github.com/strawberry-graphql/strawberry/pull/3217/)\n\n\n0.225.1 - 2024-04-15\n--------------------\n\nThis change fixes GET request queries returning a 400 if a content_type header is supplied\n\nContributed by [Nathan John](https://github.com/vethan) via [PR #3452](https://github.com/strawberry-graphql/strawberry/pull/3452/)\n\n\n0.225.0 - 2024-04-14\n--------------------\n\nThis release adds support for using FastAPI APIRouter arguments in GraphQLRouter.\n\nNow you have the opportunity to specify parameters such as `tags`, `route_class`,\n`deprecated`, `include_in_schema`, etc:\n\n```python\nimport strawberry\n\nfrom fastapi import FastAPI\nfrom strawberry.fastapi import GraphQLRouter\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self) -> str:\n        return \"Hello World\"\n\n\nschema = strawberry.Schema(Query)\n\ngraphql_app = GraphQLRouter(schema, tags=[\"graphql\"])\n\napp = FastAPI()\napp.include_router(graphql_app, prefix=\"/graphql\")\n```\n\nContributed by [Nikita Paramonov](https://github.com/nparamonov) via [PR #3442](https://github.com/strawberry-graphql/strawberry/pull/3442/)\n\n\n0.224.2 - 2024-04-13\n--------------------\n\nThis releases fixes a bug where schema extensions where not running a LIFO order.\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #3416](https://github.com/strawberry-graphql/strawberry/pull/3416/)\n\n\n0.224.1 - 2024-03-30\n--------------------\n\nThis release fixes a deprecation warning when using the Apollo Tracing\nExtension.\n\nContributed by [A. Coady](https://github.com/coady) via [PR #3410](https://github.com/strawberry-graphql/strawberry/pull/3410/)\n\n\n0.224.0 - 2024-03-30\n--------------------\n\nThis release adds support for using both Pydantic v1 and v2, when importing from\n`pydantic.v1`.\n\nThis is automatically detected and the correct version is used.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3426](https://github.com/strawberry-graphql/strawberry/pull/3426/)\n\n\n0.223.0 - 2024-03-29\n--------------------\n\nThis release adds support for Apollo Federation in the schema codegen. Now you\ncan convert a schema like this:\n\n```graphql\nextend schema\n  @link(url: \"https://specs.apollo.dev/federation/v2.3\",\n        import: [\"@key\", \"@shareable\"])\n\ntype Query {\n  me: User\n}\n\ntype User @key(fields: \"id\") {\n  id: ID!\n  username: String! @shareable\n}\n```\n\nto a Strawberry powered schema like this:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    me: User | None\n\n\n@strawberry.federation.type(keys=[\"id\"])\nclass User:\n    id: strawberry.ID\n    username: str = strawberry.federation.field(shareable=True)\n\n\nschema = strawberry.federation.Schema(query=Query, enable_federation_2=True)\n```\n\nBy running the following command:\n\n```bash\nstrawberry schema-codegen example.graphql\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3417](https://github.com/strawberry-graphql/strawberry/pull/3417/)\n\n\n0.222.0 - 2024-03-27\n--------------------\n\nThis release adds support for Apollo Federation v2.7 which includes the `@authenticated`, `@requiresScopes`, `@policy` directives, as well as the `label` argument for `@override`.\nAs usual, we have first class support for them in the `strawberry.federation` namespace, here's an example:\n\n```python\nfrom strawberry.federation.schema_directives import Override\n\n\n@strawberry.federation.type(\n    authenticated=True,\n    policy=[[\"client\", \"poweruser\"], [\"admin\"]],\n    requires_scopes=[[\"client\", \"poweruser\"], [\"admin\"]],\n)\nclass Product:\n    upc: str = strawberry.federation.field(\n        override=Override(override_from=\"mySubGraph\", label=\"percent(1)\")\n    )\n```\n\nContributed by [Tyger Taco](https://github.com/TygerTaco) via [PR #3420](https://github.com/strawberry-graphql/strawberry/pull/3420/)\n\n\n0.221.1 - 2024-03-21\n--------------------\n\nThis release properly allows passing one argument to the `Info` class.\n\nThis is now fully supported:\n\n```python\nimport strawberry\n\nfrom typing import TypedDict\n\n\nclass Context(TypedDict):\n    user_id: str\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def info(self, info: strawberry.Info[Context]) -> str:\n        return info.context[\"user_id\"]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3419](https://github.com/strawberry-graphql/strawberry/pull/3419/)\n\n\n0.221.0 - 2024-03-21\n--------------------\n\nThis release improves the `Info` type, by adding support for default TypeVars\nand by exporting it from the main module. This makes it easier to use `Info` in\nyour own code, without having to import it from `strawberry.types.info`.\n\n### New export\n\nBy exporting `Info` from the main module, now you can do the follwing:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def info(self, info: strawberry.Info) -> str:\n        # do something with info\n        return \"hello\"\n```\n\n### Default TypeVars\n\nThe `Info` type now has default TypeVars, so you can use it without having to\nspecify the type arguments, like we did in the example above. Make sure to use\nthe latest version of Mypy or Pyright for this. It also means that you can only\npass one value to it if you only care about the context type:\n\n```python\nimport strawberry\n\nfrom .context import Context\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def info(self, info: strawberry.Info[Context]) -> str:\n        return info.context.user_id\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3418](https://github.com/strawberry-graphql/strawberry/pull/3418/)\n\n\n0.220.0 - 2024-03-08\n--------------------\n\nThis release adds support to allow passing `connection_params` as dictionary to `GraphQLWebsocketCommunicator` class when testing [channels integration](https://strawberry.rocks/docs/integrations/channels#testing)\n\n\n### Example\n\n\n```python\nGraphQLWebsocketCommunicator(\n    application=application,\n    path=\"/graphql\",\n    connection_params={\"username\": \"strawberry\"},\n)\n```\n\nContributed by [selvarajrajkanna](https://github.com/selvarajrajkanna) via [PR #3403](https://github.com/strawberry-graphql/strawberry/pull/3403/)\n\n\n0.219.2 - 2024-02-06\n--------------------\n\nThis releases updates the dependency of `python-multipart` to be at least `0.0.7` (which includes a security fix).\n\nIt also removes the upper bound for `python-multipart` so you can always install the latest version (if compatible) 😊\n\nContributed by [Srikanth](https://github.com/XChikuX) via [PR #3375](https://github.com/strawberry-graphql/strawberry/pull/3375/)\n\n\n0.219.1 - 2024-01-28\n--------------------\n\n- Improved error message when supplying in incorrect before or after argument with using relay and pagination.\n- Add extra PR requirement in README.md\n\nContributed by [SD](https://github.com/sdobbelaere) via [PR #3361](https://github.com/strawberry-graphql/strawberry/pull/3361/)\n\n\n0.219.0 - 2024-01-24\n--------------------\n\nThis release adds support for [litestar](https://litestar.dev/).\n\n```python\nimport strawberry\nfrom litestar import Request, Litestar\nfrom strawberry.litestar import make_graphql_controller\nfrom strawberry.types.info import Info\n\n\ndef custom_context_getter(request: Request):\n    return {\"custom\": \"context\"}\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self, info: strawberry.Info[object, None]) -> str:\n        return info.context[\"custom\"]\n\n\nschema = strawberry.Schema(Query)\n\n\nGraphQLController = make_graphql_controller(\n    schema,\n    path=\"/graphql\",\n    context_getter=custom_context_getter,\n)\n\napp = Litestar(\n    route_handlers=[GraphQLController],\n)\n```\n\nContributed by [Matthieu MN](https://github.com/gazorby) via [PR #3213](https://github.com/strawberry-graphql/strawberry/pull/3213/)\n\n\n0.218.1 - 2024-01-23\n--------------------\n\nThis release fixes a small issue in the GraphQL Transport websocket\nwhere the connection would fail when receiving extra parameters\nin the payload sent from the client.\n\nThis would happen when using Apollo Sandbox.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3356](https://github.com/strawberry-graphql/strawberry/pull/3356/)\n\n\n0.218.0 - 2024-01-22\n--------------------\n\nThis release adds a new method `get_fields` on the `Schema` class.\nYou can use `get_fields` to hide certain field based on some conditions,\nfor example:\n\n```python\n@strawberry.type\nclass User:\n    name: str\n    email: str = strawberry.field(metadata={\"tags\": [\"internal\"]})\n\n\n@strawberry.type\nclass Query:\n    user: User\n\n\ndef public_field_filter(field: StrawberryField) -> bool:\n    return \"internal\" not in field.metadata.get(\"tags\", [])\n\n\nclass PublicSchema(strawberry.Schema):\n    def get_fields(\n        self, type_definition: StrawberryObjectDefinition\n    ) -> List[StrawberryField]:\n        return list(filter(public_field_filter, type_definition.fields))\n\n\nschema = PublicSchema(query=Query)\n```\n\nThe schema here would only have the `name` field on the `User` type.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3274](https://github.com/strawberry-graphql/strawberry/pull/3274/)\n\n\n0.217.1 - 2024-01-04\n--------------------\n\nThis hotfix enables permission extensions to be used with AsyncGenerators.\n\nContributed by [Erik Wrede](https://github.com/erikwrede) via [PR #3318](https://github.com/strawberry-graphql/strawberry/pull/3318/)\n\n\n0.217.0 - 2023-12-18\n--------------------\n\nPermissions classes now use a `FieldExtension`. The new preferred way to add permissions\nis to use the `PermissionsExtension` class:\n\n```python\nimport strawberry\nfrom strawberry.permission import PermissionExtension, BasePermission\n\n\nclass IsAuthorized(BasePermission):\n    message = \"User is not authorized\"\n    error_extensions = {\"code\": \"UNAUTHORIZED\"}\n\n    def has_permission(self, source, info, **kwargs) -> bool:\n        return False\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field(extensions=[PermissionExtension(permissions=[IsAuthorized()])])\n    def name(self) -> str:\n        return \"ABC\"\n```\n\nThe old way of adding permissions using `permission_classes` is still\nsupported via the automatic addition of a `PermissionExtension` on the field.\n\n### ⚠️ Breaking changes\n\nPreviously the `kwargs` argument keys for the `has_permission` method were\nusing camel casing (depending on your schema configuration), now they will\nalways follow the python name defined in your resolvers.\n\n```python\nclass IsAuthorized(BasePermission):\n    message = \"User is not authorized\"\n\n    def has_permission(\n        self, source, info, **kwargs: typing.Any\n    ) -> bool:  # pragma: no cover\n        # kwargs will have a key called \"a_key\"\n        # instead of `aKey`\n\n        return False\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field(permission_classes=[IsAuthorized])\n    def name(self, a_key: str) -> str:  # pragma: no cover\n        return \"Erik\"\n```\n\nUsing the new `PermissionExtension` API, permissions support even more features:\n\n#### Silent errors\n\nTo return `None` or `[]` instead of raising an error, the `fail_silently ` keyword\nargument on `PermissionExtension` can be set to `True`.\n\n#### Custom Error Extensions & classes\n\nPermissions will now automatically add pre-defined error extensions to the error, and\ncan use a custom `GraphQLError` class. This can be configured by modifying\nthe  `error_class` and `error_extensions` attributes on the `BasePermission` class.\n\n#### Customizable Error Handling\n\nTo customize the error handling, the `on_unauthorized` method on\nthe `BasePermission` class can be used. Further changes can be implemented by\nsubclassing the `PermissionExtension` class.\n\n#### Schema Directives\n\nPermissions will automatically be added as schema directives to the schema. This\nbehavior can be altered by setting the `add_directives` to `False`\non `PermissionExtension`, or by setting the `_schema_directive` class attribute of the\npermission to a custom directive.\n\nContributed by [Erik Wrede](https://github.com/erikwrede) via [PR #2570](https://github.com/strawberry-graphql/strawberry/pull/2570/)\n\n\n0.216.1 - 2023-12-12\n--------------------\n\nDon't require `NodeId` annotation if resolve_id is overwritten on `Node` implemented types\n\nContributed by [Alexander](https://github.com/devkral) via [PR #2844](https://github.com/strawberry-graphql/strawberry/pull/2844/)\n\n\n0.216.0 - 2023-12-06\n--------------------\n\nOverride encode_json() method in Django BaseView to use DjangoJSONEncoder\n\nContributed by [Noam Stolero](https://github.com/noamsto) via [PR #3273](https://github.com/strawberry-graphql/strawberry/pull/3273/)\n\n\n0.215.3 - 2023-12-06\n--------------------\n\nFixed the base view so it uses `parse_json` when loading parameters from the query string instead of `json.loads`.\n\nContributed by [Elias Gabriel](https://github.com/thearchitector) via [PR #3272](https://github.com/strawberry-graphql/strawberry/pull/3272/)\n\n\n0.215.2 - 2023-12-05\n--------------------\n\nThis release updates the Apollo Sandbox integration to all you to\npass cookies to the GraphQL endpoint by enabling the **Include cookes**\noption in the Sandbox settings.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3278](https://github.com/strawberry-graphql/strawberry/pull/3278/)\n\n\n0.215.1 - 2023-11-20\n--------------------\n\nImproved error message when supplying GlobalID format that relates to another type than the query itself.\n\nContributed by [SD](https://github.com/sdobbelaere) via [PR #3194](https://github.com/strawberry-graphql/strawberry/pull/3194/)\n\n\n0.215.0 - 2023-11-19\n--------------------\n\nAdds an optional `extensions` parameter to `strawberry.federation.field`, with default value `None`. The key is passed through to `strawberry.field`, so the functionality is exactly as described [here](https://strawberry.rocks/docs/guides/field-extensions).\n\nExample:\n\n```python\nstrawberry.federation.field(extensions=[InputMutationExtension()])\n```\n\nContributed by [Bryan Ricker](https://github.com/bricker) via [PR #3239](https://github.com/strawberry-graphql/strawberry/pull/3239/)\n\n\n0.214.0 - 2023-11-15\n--------------------\n\nThis release updates the GraphiQL packages to their latest versions:\n\n- `graphiql@3.0.9`\n- `@graphiql/plugin-explorer@1.0.2`\n\nContributed by [Rodrigo Feijao](https://github.com/rodrigofeijao) via [PR #3227](https://github.com/strawberry-graphql/strawberry/pull/3227/)\n\n\n0.213.0 - 2023-11-08\n--------------------\n\nThis release adds support in _all_ all our HTTP integration for choosing between\ndifferent GraphQL IDEs. For now we support [GraphiQL](https://github.com/graphql/graphiql) (the default),\n[Apollo Sandbox](https://www.apollographql.com/docs/graphos/explorer/sandbox/), and [Pathfinder](https://pathfinder.dev/).\n\n**Deprecations:** This release deprecates the `graphiql` option in all HTTP integrations,\nin favour of `graphql_ide`, this allows us to only have one settings to change GraphQL ide,\nor to disable it.\n\nHere's a couple of examples of how you can use this:\n\n### FastAPI\n\n```python\nimport strawberry\n\nfrom fastapi import FastAPI\nfrom strawberry.fastapi import GraphQLRouter\nfrom api.schema import schema\n\ngraphql_app = GraphQLRouter(schema, graphql_ide=\"apollo-sandbox\")\n\napp = FastAPI()\napp.include_router(graphql_app, prefix=\"/graphql\")\n```\n\n### Django\n\n```python\nfrom django.urls import path\n\nfrom strawberry.django.views import GraphQLView\n\nfrom api.schema import schema\n\nurlpatterns = [\n    path(\"graphql/\", GraphQLView.as_view(schema=schema, graphql_ide=\"pathfinder\")),\n]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3209](https://github.com/strawberry-graphql/strawberry/pull/3209/)\n\n\n0.212.0 - 2023-11-07\n--------------------\n\nThis release changes how we check for generic types. Previously, any type that\nhad a generic typevar would be considered generic for the GraphQL schema, this\nwould generate un-necessary types in some cases. Now, we only consider a type\ngeneric if it has a typevar that is used as the type of a field or one of its arguments.\n\nFor example the following type:\n\n```python\n@strawberry.type\nclass Edge[T]:\n    cursor: strawberry.ID\n    some_interna_value: strawberry.Private[T]\n```\n\nWill not generate a generic type in the schema, as the typevar `T` is not used\nas the type of a field or argument.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3202](https://github.com/strawberry-graphql/strawberry/pull/3202/)\n\n\n0.211.2 - 2023-11-06\n--------------------\n\nThis release removes unused `graphiql` submodules for Flask, Quart and Sanic.\n\nContributed by [Pierre Chapuis](https://github.com/catwell) via [PR #3203](https://github.com/strawberry-graphql/strawberry/pull/3203/)\n\n\n0.211.1 - 2023-10-25\n--------------------\n\nThis release fixes an issue that prevented the `parser_cache` extension to be used in combination with\nother extensions such as `MaxTokensLimiter`.\n\nThe following should work as expected now:\n\n```python\nschema = strawberry.Schema(\n    query=Query, extensions=[MaxTokensLimiter(max_token_count=20), ParserCache()]\n)\n```\n\nContributed by [David Šanda](https://github.com/Dazix) via [PR #3170](https://github.com/strawberry-graphql/strawberry/pull/3170/)\n\n\n0.211.0 - 2023-10-24\n--------------------\n\nThis release adds a Quart view.\n\nContributed by [Pierre Chapuis](https://github.com/catwell) via [PR #3162](https://github.com/strawberry-graphql/strawberry/pull/3162/)\n\n\n0.210.0 - 2023-10-24\n--------------------\n\nThis release deprecates our `SentryTracingExtension`, as it is now incorporated directly into Sentry itself as of [version 1.32.0](https://github.com/getsentry/sentry-python/releases/tag/1.32.0). You can now directly instrument Strawberry with Sentry.\n\nBelow is the revised usage example:\n\n```python\nimport sentry_sdk\nfrom sentry_sdk.integrations.strawberry import StrawberryIntegration\n\nsentry_sdk.init(\n    dsn=\"___PUBLIC_DSN___\",\n    integrations=[\n        # make sure to set async_execution to False if you're executing\n        # GraphQL queries synchronously\n        StrawberryIntegration(async_execution=True),\n    ],\n    traces_sample_rate=1.0,\n)\n```\n\nMany thanks to @sentrivana for their work on this integration!\n\n0.209.8 - 2023-10-20\n--------------------\n\nFix strawberry mypy plugin for pydantic v2\n\nContributed by [Corentin-Br](https://github.com/Corentin-Br) via [PR #3159](https://github.com/strawberry-graphql/strawberry/pull/3159/)\n\n\n0.209.7 - 2023-10-15\n--------------------\n\nRemove stack_info from error log messages to not clutter error logging with unnecessary information.\n\nContributed by [Malte Finsterwalder](https://github.com/finsterwalder) via [PR #3143](https://github.com/strawberry-graphql/strawberry/pull/3143/)\n\n\n0.209.6 - 2023-10-07\n--------------------\n\nAdd text/html content-type to chalice graphiql response\n\nContributed by [Julian Popescu](https://github.com/jpopesculian) via [PR #3137](https://github.com/strawberry-graphql/strawberry/pull/3137/)\n\n\n0.209.5 - 2023-10-03\n--------------------\n\nThis release adds a new private hook in our HTTP views, it is called\n`_handle_errors` and it is meant to be used by Sentry (or other integrations)\nto handle errors without having to patch methods that could be overridden\nby the users\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3127](https://github.com/strawberry-graphql/strawberry/pull/3127/)\n\n\n0.209.4 - 2023-10-02\n--------------------\n\nThis release changes how we check for conflicting resolver arguments to\nexclude `self` from those checks, which were introduced on version 0.208.0.\n\nIt is a common pattern among integrations, such as the Django one, to\nuse `root: Model` in the resolvers for better typing inference.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3131](https://github.com/strawberry-graphql/strawberry/pull/3131/)\n\n\n0.209.3 - 2023-10-02\n--------------------\n\nMark Django's asyncview as a coroutine using `asgiref.sync.markcoroutinefunction`\nto support using it with Python 3.12.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3124](https://github.com/strawberry-graphql/strawberry/pull/3124/)\n\n\n0.209.2 - 2023-09-24\n--------------------\n\nFix generation of input based on pydantic models using nested `Annotated` type annotations:\n\n```python\nimport strawberry\nfrom pydantic import BaseModel\n\n\nclass User(BaseModel):\n    age: Optional[Annotated[int, \"metadata\"]]\n\n\n@strawberry.experimental.pydantic.input(all_fields=True)\nclass UserInput:\n    pass\n```\n\nContributed by [Matthieu MN](https://github.com/gazorby) via [PR #3109](https://github.com/strawberry-graphql/strawberry/pull/3109/)\n\n\n0.209.1 - 2023-09-21\n--------------------\n\nThis release fixes an issue when trying to generate code from a schema that\nwas using double quotes inside descriptions.\n\nThe following schema will now generate code correctly:\n\n```graphql\n\"\"\"\nA type of person or character within the \"Star Wars\" Universe.\n\"\"\"\ntype Species {\n  \"\"\"\n  The classification of this species, such as \"mammal\" or \"reptile\".\n  \"\"\"\n  classification: String!\n}\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3112](https://github.com/strawberry-graphql/strawberry/pull/3112/)\n\n\n0.209.0 - 2023-09-19\n--------------------\n\nThis release adds support for generating Strawberry types from SDL files. For example, given the following SDL file:\n\n```graphql\ntype Query {\n  user: User\n}\n\ntype User {\n  id: ID!\n  name: String!\n}\n```\n\nyou can run\n\n```bash\nstrawberry schema-codegen schema.graphql\n```\n\nto generate the following Python code:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    user: User | None\n\n\n@strawberry.type\nclass User:\n    id: strawberry.ID\n    name: str\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3096](https://github.com/strawberry-graphql/strawberry/pull/3096/)\n\n\n0.208.3 - 2023-09-19\n--------------------\n\nAdding support for additional pydantic built in types like EmailStr or PostgresDsn.\n\nContributed by [ppease](https://github.com/ppease) via [PR #3101](https://github.com/strawberry-graphql/strawberry/pull/3101/)\n\n\n0.208.2 - 2023-09-18\n--------------------\n\nThis release fixes an issue that would prevent using generics with unnamed\nunions, like in this example:\n\n```python\nfrom typing import Generic, TypeVar, Union\nimport strawberry\n\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass Connection(Generic[T]):\n    nodes: list[T]\n\n\n@strawberry.type\nclass Entity1:\n    id: int\n\n\n@strawberry.type\nclass Entity2:\n    id: int\n\n\n@strawberry.type\nclass Query:\n    entities: Connection[Union[Entity1, Entity2]]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3099](https://github.com/strawberry-graphql/strawberry/pull/3099/)\n\n\n0.208.1 - 2023-09-15\n--------------------\n\nThis fixes a bug where codegen would choke trying to find a field in the schema for a generic type.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #3077](https://github.com/strawberry-graphql/strawberry/pull/3077/)\n\n\n0.208.0 - 2023-09-14\n--------------------\n\nAdds new strawberry.Parent type annotation to support resolvers without use of self.\n\nE.g.\n\n```python\n@dataclass\nclass UserRow:\n    id_: str\n\n\n@strawberry.type\nclass User:\n    @strawberry.field\n    @staticmethod\n    async def name(parent: strawberry.Parent[UserRow]) -> str:\n        return f\"User Number {parent.id_}\"\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def user(self) -> User:\n        return UserRow(id_=\"1234\")\n```\n\nContributed by [mattalbr](https://github.com/mattalbr) via [PR #3017](https://github.com/strawberry-graphql/strawberry/pull/3017/)\n\n\n0.207.1 - 2023-09-14\n--------------------\n\nThis fixes a bug where codegen would choke on FragmentSpread nodes in the GraphQL during type collection.\n\ne.g.:\n\n```\nfragment PartialBlogPost on BlogPost {\n  title\n}\n\nquery OperationName {\n  interface {\n    id\n    ... on BlogPost {\n      ...PartialBlogPost\n    }\n    ... on Image {\n      url\n    }\n  }\n}\n```\n\nThe current version of the code generator is not able to handle the `...PartialBogPost` in this position because it assumes it can only find `Field` type nodes even though the spread should be legit.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #3086](https://github.com/strawberry-graphql/strawberry/pull/3086/)\n\n\n0.207.0 - 2023-09-14\n--------------------\n\nThis release removes the deprecated `ignore` argument from the `QueryDepthLimiter` extension.\n\nContributed by [Kai Benevento](https://github.com/benesgarage) via [PR #3093](https://github.com/strawberry-graphql/strawberry/pull/3093/)\n\n\n0.206.0 - 2023-09-13\n--------------------\n\n`strawberry codegen` can now operate on multiple input query files.\nThe previous behavior of naming the file `types.js` and `types.py`\nfor the builtin `typescript` and `python` plugins respectively is\npreserved, but only if a single query file is passed.  When more\nthan one query file is passed, the code generator will now use\nthe stem of the query file's name to construct the name of the\noutput files.  e.g. `my_query.graphql` -> `my_query.js` or\n`my_query.py`.  Creators of custom plugins are responsible\nfor controlling the name of the output file themselves.  To\naccomodate this, if the `__init__` method of a `QueryCodegenPlugin`\nhas a parameter named `query` or `query_file`, the `pathlib.Path`\nto the query file will be passed to the plugin's `__init__`\nmethod.\n\nFinally, the `ConsolePlugin` has also recieved two new lifecycle\nmethods.  Unlike other `QueryCodegenPlugin`, the same instance of\nthe `ConsolePlugin` is used for each query file processed.  This\nallows it to keep state around how many total files were processed.\nThe `ConsolePlugin` recieved two new lifecycle hooks: `before_any_start`\nand `after_all_finished` that get called at the appropriate times.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2911](https://github.com/strawberry-graphql/strawberry/pull/2911/)\n\n\n0.205.0 - 2023-08-24\n--------------------\n\n`strawberry codegen` previously choked for inputs that used the\n`strawberry.UNSET` sentinal singleton value as a default.  The intent\nhere is to say that if a variable is not part of the request payload,\nthen the `UNSET` default value will not be modified and the service\ncode can then treat an unset value differently from a default value,\netc.\n\nFor codegen, we treat the `UNSET` default value as a `GraphQLNullValue`.\nThe `.value` property is the `UNSET` object in this case (instead of\nthe usual `None`).  In the built-in python code generator, this causes\nthe client to generate an object with a `None` default.  Custom client\ngenerators can sniff at this value and update their behavior.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #3050](https://github.com/strawberry-graphql/strawberry/pull/3050/)\n\n\n0.204.0 - 2023-08-15\n--------------------\n\nAdds a new flag to `export-schema` command, `--output`, which allows the user to specify the output file. If unset (current behavior), the command will continue to print to stdout.\n\nContributed by [Chris Hua](https://github.com/stillmatic) via [PR #3033](https://github.com/strawberry-graphql/strawberry/pull/3033/)\n\n\n0.203.3 - 2023-08-14\n--------------------\n\nMark pydantic constrained list test with need_pydantic_v1 since it is removed in pydantic V2\n\nContributed by [tjeerddie](https://github.com/tjeerddie) via [PR #3034](https://github.com/strawberry-graphql/strawberry/pull/3034/)\n\n\n0.203.2 - 2023-08-14\n--------------------\n\nEnhancements:\n- Improved pydantic conversion compatibility with specialized list classes.\n  - Modified `StrawberryAnnotation._is_list` to check if the `annotation` extends from the `list` type, enabling it to be considered a list.\n  - in `StrawberryAnnotation` Moved the `_is_list` check before the `_is_generic` check in `resolve` to avoid `unsupported` error in `_is_generic` before it checked `_is_list`.\n\nThis enhancement enables the usage of constrained lists as class types and allows the creation of specialized lists. The following example demonstrates this feature:\n\n```python\nimport strawberry\nfrom pydantic import BaseModel, ConstrainedList\n\n\nclass FriendList(ConstrainedList):\n    min_items = 1\n\n\nclass UserModel(BaseModel):\n    age: int\n    friend_names: FriendList[str]\n\n\n@strawberry.experimental.pydantic.type(UserModel)\nclass User:\n    age: strawberry.auto\n    friend_names: strawberry.auto\n```\n\nContributed by [tjeerddie](https://github.com/tjeerddie) via [PR #2909](https://github.com/strawberry-graphql/strawberry/pull/2909/)\n\n\n0.203.1 - 2023-08-12\n--------------------\n\nThis release updates the built-in GraphiQL to the current latest version (3.0.5), it also updates React to the current latest version (18.2.0) and uses the production distribution instead of development to reduce bundle size.\n\nContributed by [Kien Dang](https://github.com/kiendang) via [PR #3031](https://github.com/strawberry-graphql/strawberry/pull/3031/)\n\n\n0.203.0 - 2023-08-10\n--------------------\n\nAdd support for extra colons in the `GlobalID` string.\n\nBefore, the string `SomeType:some:value` would produce raise an error saying that\nit was expected the string to be splited in 2 parts when doing `.split(\":\")`.\n\nNow we are using `.split(\":\", 1)`, meaning that the example above will consider\n`SomeType` to be the type name, and `some:value` to be the node_id.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3025](https://github.com/strawberry-graphql/strawberry/pull/3025/)\n\n\n0.202.1 - 2023-08-09\n--------------------\n\nTypingUnionType import error check is reraised because TypingGenericAlias is checked at the same time which is checked under 3.9 instead of under 3.10\n\nFix by separating TypingUnionType and TypingGenericAlias imports in their own try-catch\n\nContributed by [tjeerddie](https://github.com/tjeerddie) via [PR #3023](https://github.com/strawberry-graphql/strawberry/pull/3023/)\n\n\n0.202.0 - 2023-08-08\n--------------------\n\nThis release updates Strawberry's codebase to use new features in Python 3.8.\nIt also removes `backports.cached-property` from our dependencies, as we can\nnow rely on the standard library's `functools.cached_property`.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2995](https://github.com/strawberry-graphql/strawberry/pull/2995/)\n\n\n0.201.1 - 2023-08-08\n--------------------\n\nFix strawberry mypy plugin for pydantic v1\n\nContributed by [tjeerddie](https://github.com/tjeerddie) via [PR #3019](https://github.com/strawberry-graphql/strawberry/pull/3019/)\n\n\n0.201.0 - 2023-08-08\n--------------------\n\nFix import error in `strawberry.ext.mypy_plugin` for users who don't use pydantic.\n\nContributed by [David Němec](https://github.com/davidnemec) via [PR #3018](https://github.com/strawberry-graphql/strawberry/pull/3018/)\n\n\n0.200.0 - 2023-08-07\n--------------------\n\nAdds initial support for pydantic V2.\n\nThis is extremely experimental for wider initial testing.\n\nWe do not encourage using this in production systems yet.\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #2972](https://github.com/strawberry-graphql/strawberry/pull/2972/)\n\n\n0.199.3 - 2023-08-06\n--------------------\n\nThis release fixes an issue on `relay.ListConnection` where async iterables that returns\nnon async iterable objects after being sliced where producing errors.\n\nThis should fix an issue with async strawberry-graphql-django when returning already\nprefetched QuerySets.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #3014](https://github.com/strawberry-graphql/strawberry/pull/3014/)\n\n\n0.199.2 - 2023-08-03\n--------------------\n\nThis releases improves how we handle Annotated and async types\n(used in subscriptions). Previously we weren't able to use\nunions with names inside subscriptions, now that's fixed 😊\n\nExample:\n\n```python\n@strawberry.type\nclass A:\n    a: str\n\n\n@strawberry.type\nclass B:\n    b: str\n\n\n@strawberry.type\nclass Query:\n    x: str = \"Hello\"\n\n\n@strawberry.type\nclass Subscription:\n    @strawberry.subscription\n    async def example_with_union(self) -> AsyncGenerator[Union[A, B], None]:\n        yield A(a=\"Hi\")\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3008](https://github.com/strawberry-graphql/strawberry/pull/3008/)\n\n\n0.199.1 - 2023-08-02\n--------------------\n\nThis release fixes an issue in the `graphql-ws` implementation\nwhere sending a `null` payload would cause the connection\nto be closed.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #3007](https://github.com/strawberry-graphql/strawberry/pull/3007/)\n\n\n0.199.0 - 2023-08-01\n--------------------\n\nThis release changes how we handle generic type vars, bringing\nsupport to the new generic syntax in Python 3.12 (which will be out in October).\n\nThis now works:\n\n```python\n@strawberry.type\nclass Edge[T]:\n    cursor: strawberry.ID\n    node_field: T\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def example(self) -> Edge[int]:\n        return Edge(cursor=strawberry.ID(\"1\"), node_field=1)\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2993](https://github.com/strawberry-graphql/strawberry/pull/2993/)\n\n\n0.198.0 - 2023-07-31\n--------------------\n\nThis release adds support for returning interfaces directly in resolvers:\n\n```python\n@strawberry.interface\nclass Node:\n    id: strawberry.ID\n\n    @classmethod\n    def resolve_type(cls, obj: Any, *args: Any, **kwargs: Any) -> str:\n        return \"Video\" if obj.id == \"1\" else \"Image\"\n\n\n@strawberry.type\nclass Video(Node): ...\n\n\n@strawberry.type\nclass Image(Node): ...\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def node(self, id: strawberry.ID) -> Node:\n        return Node(id=id)\n\n\nschema = strawberry.Schema(query=Query, types=[Video, Image])\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2989](https://github.com/strawberry-graphql/strawberry/pull/2989/)\n\n\n0.197.0 - 2023-07-30\n--------------------\n\nThis release removes support for Python 3.7 as its end of life\nwas on 27 Jun 2023.\n\nThis will allow us to reduce the number of CI jobs we have,\nand potentially use newer features of Python. ⚡\n\nContributed by [Alexander](https://github.com/devkral) via [PR #2907](https://github.com/strawberry-graphql/strawberry/pull/2907/)\n\n\n0.196.2 - 2023-07-28\n--------------------\n\nThis release fixes an issue when trying to use `Annotated[strawberry.auto, ...]`\non python 3.10 or older, which got evident after the fix from 0.196.1.\n\nPreviously we were throwing the type away, since it usually is `Any`, but python\n3.10 and older will validate that the first argument passed for `Annotated`\nis callable (3.11+ does not do that anymore), and `StrawberryAuto` is not.\n\nThis changes it to keep that `Any`, which is also what someone would expect\nwhen resolving the annotation using our custom `eval_type` function.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2990](https://github.com/strawberry-graphql/strawberry/pull/2990/)\n\n\n0.196.1 - 2023-07-26\n--------------------\n\nThis release fixes an issue where annotations resolution for auto and lazy fields\nusing `Annotated` where not preserving the remaining arguments because of a\ntypo in the arguments filtering.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2983](https://github.com/strawberry-graphql/strawberry/pull/2983/)\n\n\n0.196.0 - 2023-07-26\n--------------------\n\nThis release adds support for union with a single member, they are\nuseful for future proofing your schema in cases you know a field\nwill be part of a union in future.\n\n```python\nimport strawberry\n\nfrom typing import Annotated\n\n\n@strawberry.type\nclass Audio:\n    duration: int\n\n\n@strawberry.type\nclass Query:\n    # note: Python's Union type doesn't support single members,\n    # Union[Audio] is exactly the same as Audio, so we use\n    # use Annotated and strawberry.union to tell Strawberry this is\n    # a union with a single member\n    latest_media: Annotated[Audio, strawberry.union(\"MediaItem\")]\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2982](https://github.com/strawberry-graphql/strawberry/pull/2982/)\n\n\n0.195.3 - 2023-07-22\n--------------------\n\nThis release no longer requires an upperbound pin for uvicorn, ensuring\ncompatibility with future versions of uvicorn without the need for updating\nStrawberry.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2968](https://github.com/strawberry-graphql/strawberry/pull/2968/)\n\n\n0.195.2 - 2023-07-15\n--------------------\n\nThis release introduces a bug fix for relay connection where previously they wouldn't work without padding the `first` argument.\n\nContributed by [Alexander](https://github.com/devkral) via [PR #2938](https://github.com/strawberry-graphql/strawberry/pull/2938/)\n\n\n0.195.1 - 2023-07-15\n--------------------\n\nThis release fixes a bug where returning a generic type from a field\nthat was returning an interface would throw an error.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2955](https://github.com/strawberry-graphql/strawberry/pull/2955/)\n\n\n0.195.0 - 2023-07-14\n--------------------\n\nImprove the time complexity of `strawberry.interface` using `resolve_type`.\nAchieved time complexity is now O(1) with respect to the number of\nimplementations of an interface. Previously, the use of `is_type_of` resulted\nin a worst-case performance of O(n).\n\n**Before**:\n\n```shell\n---------------------------------------------------------------------------\nName (time in ms)                         Min                 Max\n---------------------------------------------------------------------------\ntest_interface_performance[1]         18.0224 (1.0)       50.3003 (1.77)\ntest_interface_performance[16]        22.0060 (1.22)      28.4240 (1.0)\ntest_interface_performance[256]       69.1364 (3.84)      76.1349 (2.68)\ntest_interface_performance[4096]     219.6461 (12.19)    231.3732 (8.14)\n---------------------------------------------------------------------------\n```\n\n**After**:\n\n```shell\n---------------------------------------------------------------------------\nName (time in ms)                        Min                Max\n---------------------------------------------------------------------------\ntest_interface_performance[1]        14.3921 (1.0)      46.2064 (2.79)\ntest_interface_performance[16]       14.8669 (1.03)     16.5732 (1.0)\ntest_interface_performance[256]      15.8977 (1.10)     24.4618 (1.48)\ntest_interface_performance[4096]     18.7340 (1.30)     21.2899 (1.28)\n---------------------------------------------------------------------------\n```\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1949](https://github.com/strawberry-graphql/strawberry/pull/1949/)\n\n\n0.194.4 - 2023-07-08\n--------------------\n\nThis release makes sure that `Schema.process_errors()` is called _once_ for every error\nwhich happens with `graphql-transport-ws` operations.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2899](https://github.com/strawberry-graphql/strawberry/pull/2899/)\n\n\n0.194.3 - 2023-07-08\n--------------------\n\nAdded default argument to the typer Argument function, this adds\nsupport for older versions of typer.\n\nContributed by [Jaime Coello de Portugal](https://github.com/jaimecp89) via [PR #2906](https://github.com/strawberry-graphql/strawberry/pull/2906/)\n\n\n0.194.2 - 2023-07-08\n--------------------\n\nThis release includes a performance improvement to `strawberry.lazy()` to allow relative module imports to be resolved faster.\n\nContributed by [Karim Alibhai](https://github.com/karimsa) via [PR #2926](https://github.com/strawberry-graphql/strawberry/pull/2926/)\n\n\n0.194.1 - 2023-07-08\n--------------------\n\nThis release adds a setter on `StrawberryAnnotation.annotation`, this fixes\nan issue on Strawberry Django.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2932](https://github.com/strawberry-graphql/strawberry/pull/2932/)\n\n\n0.194.0 - 2023-07-08\n--------------------\n\nRestore evaled type access in `StrawberryAnnotation`\n\nPrior to Strawberry 192.2 the `annotation` attribute of `StrawberryAnnotation`\nwould return an evaluated type when possible due reserved argument parsing.\n192.2 moved the responsibility of evaluating and caching results to the\n`evaluate` method of `StrawberryAnnotation`. This introduced a regression when\nusing future annotations for any code implicitely relying on the `annotation`\nattribute being an evaluated type.\n\nTo fix this regression and mimick pre-192.2 behavior, this release adds an\n`annotation` property to `StrawberryAnnotation` that internally calls the\n`evaluate` method. On success the evaluated type is returned. If a `NameError`\nis raised due to an unresolvable annotation, the raw annotation is returned.\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #2925](https://github.com/strawberry-graphql/strawberry/pull/2925/)\n\n\n0.193.1 - 2023-07-05\n--------------------\n\nThis fixes a regression from 0.190.0 where changes to the\nreturn type of a field done by Field Extensions would not\nbe taken in consideration by the schema.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2922](https://github.com/strawberry-graphql/strawberry/pull/2922/)\n\n\n0.193.0 - 2023-07-04\n--------------------\n\nThis release updates the API to listen to Django Channels to avoid race conditions\nwhen confirming GraphQL subscriptions.\n\n**Deprecations:**\n\nThis release contains a deprecation for the Channels integration. The `channel_listen`\nmethod will be replaced with an async context manager that returns an awaitable\nAsyncGenerator. This method is called `listen_to_channel`.\n\nAn example of migrating existing code is given below:\n\n```py\n# Existing code\n@strawberry.type\nclass MyDataType:\n    name: str\n\n\n@strawberry.type\nclass Subscription:\n    @strawberry.subscription\n    async def my_data_subscription(\n        self, info: strawberry.Info, groups: list[str]\n    ) -> AsyncGenerator[MyDataType | None, None]:\n        yield None\n        async for message in info.context[\"ws\"].channel_listen(\n            \"my_data\", groups=groups\n        ):\n            yield MyDataType(name=message[\"payload\"])\n```\n\n```py\n# New code\n@strawberry.type\nclass Subscription:\n    @strawberry.subscription\n    async def my_data_subscription(\n        self, info: strawberry.Info, groups: list[str]\n    ) -> AsyncGenerator[MyDataType | None, None]:\n        async with info.context[\"ws\"].listen_to_channel(\"my_data\", groups=groups) as cm:\n            yield None\n            async for message in cm:\n                yield MyDataType(name=message[\"payload\"])\n```\n\nContributed by [Moritz Ulmer](https://github.com/moritz89) via [PR #2856](https://github.com/strawberry-graphql/strawberry/pull/2856/)\n\n\n0.192.2 - 2023-07-03\n--------------------\n\nThis release fixes an issue related to using `typing.Annotated` in resolver\narguments following the declaration of a reserved argument such as\n`strawberry.types.Info`.\n\nBefore this fix, the following would be converted incorrectly:\n\n```python\nfrom __future__ import annotations\nimport strawberry\nimport uuid\nfrom typing_extensions import Annotated\nfrom strawberry.types import Info\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def get_testing(\n        self,\n        info: strawberry.Info,\n        id_: Annotated[uuid.UUID, strawberry.argument(name=\"id\")],\n    ) -> str | None:\n        return None\n\n\nschema = strawberry.Schema(query=Query)\n\nprint(schema)\n```\n\nResulting in the schema:\n\n```graphql\ntype Query {\n  getTesting(id_: UUID!): String # ⬅️ see `id_`\n}\n\nscalar UUID\n```\n\nAfter this fix, the schema is converted correctly:\n\n```graphql\ntype Query {\n  getTesting(id: UUID!): String\n}\n\nscalar UUID\n```\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #2901](https://github.com/strawberry-graphql/strawberry/pull/2901/)\n\n\n0.192.1 - 2023-07-02\n--------------------\n\nAdd specifications in FastAPI doc if query via GET is enabled\n\nContributed by [guillaumeLepape](https://github.com/guillaumeLepape) via [PR #2913](https://github.com/strawberry-graphql/strawberry/pull/2913/)\n\n\n0.192.0 - 2023-06-28\n--------------------\n\nThis release introduces a new command called `upgrade`, this command can be used\nto run codemods on your codebase to upgrade to the latest version of Strawberry.\n\nAt the moment we only support upgrading unions to use the new syntax with\nannotated, but in future we plan to add more commands to help with upgrading.\n\nHere's how you can use the command to upgrade your codebase:\n\n```shell\nstrawberry upgrade annotated-union .\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2886](https://github.com/strawberry-graphql/strawberry/pull/2886/)\n\n\n0.191.0 - 2023-06-28\n--------------------\n\nThis release adds support for declaring union types using `typing.Annotated`\ninstead of `strawberry.union(name, types=...)`.\n\nCode using the old syntax will continue to work, but it will trigger a\ndeprecation warning. Using Annotated will improve type checking and IDE support\nespecially when using `pyright`.\n\nBefore:\n\n```python\nAnimal = strawberry.union(\"Animal\", (Cat, Dog))\n```\n\nAfter:\n\n```python\nfrom typing import Annotated, Union\n\nAnimal = Annotated[Union[Cat, Dog], strawberry.union(\"Animal\")]\n```\n\n0.190.0 - 2023-06-27\n--------------------\n\nThis release refactors the way we resolve field types to to make it\nmore robust, resolving some corner cases.\n\nOne case that should be fixed is when using specialized generics\nwith future annotations.\n\nContributed by [Alexander](https://github.com/devkral) via [PR #2868](https://github.com/strawberry-graphql/strawberry/pull/2868/)\n\n\n0.189.3 - 2023-06-27\n--------------------\n\nThis release removes some usage of deprecated functions from GraphQL-core.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2894](https://github.com/strawberry-graphql/strawberry/pull/2894/)\n\n\n0.189.2 - 2023-06-27\n--------------------\n\nThe `graphql-transport-ws` protocol allows for subscriptions to error during execution without terminating\nthe subscription.  Non-fatal errors produced by subscriptions now produce `Next` messages containing\nan `ExecutionResult` with an `error` field and don't necessarily terminate the subscription.\nThis is in accordance to the behaviour of Apollo server.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2876](https://github.com/strawberry-graphql/strawberry/pull/2876/)\n\n\n0.189.1 - 2023-06-25\n--------------------\n\nThis release fixes a deprecation warning being triggered\nby the relay integration.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2858](https://github.com/strawberry-graphql/strawberry/pull/2858/)\n\n\n0.189.0 - 2023-06-22\n--------------------\n\nThis release updates `create_type` to add support for all arguments\nthat `strawberry.type` supports. This includes: `description`, `extend`,\n`directives`, `is_input` and `is_interface`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2880](https://github.com/strawberry-graphql/strawberry/pull/2880/)\n\n\n0.188.0 - 2023-06-22\n--------------------\n\nThis release gives codegen clients the ability to inquire about the `__typename`\nof a `GraphQLObjectType`.  This information can be used to automatically select\nthe proper type to hydrate when working with a union type in the response.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2875](https://github.com/strawberry-graphql/strawberry/pull/2875/)\n\n\n0.187.5 - 2023-06-21\n--------------------\n\nThis release fixes a regression when comparing a `StrawberryAnnotation`\ninstance with anything that is not also a `StrawberryAnnotation` instance,\nwhich caused it to raise a `NotImplementedError`.\n\nThis reverts its behavior back to how it worked before, where it returns\n`NotImplemented` instead, meaning that the comparison can be delegated to\nthe type being compared against or return `False` in case it doesn't define\nan `__eq__` method.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2879](https://github.com/strawberry-graphql/strawberry/pull/2879/)\n\n\n0.187.4 - 2023-06-21\n--------------------\n\n`graphql-transport-ws` handler now uses a single dict to manage active operations.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2699](https://github.com/strawberry-graphql/strawberry/pull/2699/)\n\n\n0.187.3 - 2023-06-21\n--------------------\n\nThis release fixes a typing regression on `StraberryContainer` subclasses\nwhere type checkers would not allow non `WithStrawberryObjectDefinition` types\nto be passed for its `of_type` argument (e.g. `StrawberryOptional(str)`)\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2878](https://github.com/strawberry-graphql/strawberry/pull/2878/)\n\n\n0.187.2 - 2023-06-21\n--------------------\n\nThis release removes `get_object_definition_strict` and instead\noverloads `get_object_definition` to accept an extra `strct` keyword.\n\nThis is a new feature so it is unlikely to break anything.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2877](https://github.com/strawberry-graphql/strawberry/pull/2877/)\n\n\n0.187.1 - 2023-06-21\n--------------------\n\nThis release bumps the minimum requirement of\n`typing-extensions` to 4.5\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2872](https://github.com/strawberry-graphql/strawberry/pull/2872/)\n\n\n0.187.0 - 2023-06-20\n--------------------\n\nThis release renames `_type_definition` to `__strawberry_definition__`. This doesn't change the public API of Strawberry, but if you were using `_type_definition` you can still access it, but it will be removed in future.\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #2836](https://github.com/strawberry-graphql/strawberry/pull/2836/)\n\n\n0.186.3 - 2023-06-20\n--------------------\n\nThis release adds resolve_async to NodeExtension to allow it to\nbe used together with other field async extensions/permissions.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2863](https://github.com/strawberry-graphql/strawberry/pull/2863/)\n\n\n0.186.2 - 2023-06-19\n--------------------\n\nThis release fixes an issue on StrawberryField.copy_with method\nnot copying its extensions and overwritten `_arguments`.\n\nAlso make sure that all lists/tuples in those types are copied as\nnew lists/tuples to avoid unexpected behavior.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2865](https://github.com/strawberry-graphql/strawberry/pull/2865/)\n\n\n0.186.1 - 2023-06-16\n--------------------\n\nIn this release, we pass the default values from the strawberry.Schema through to the codegen plugins.\nThe default python plugin now adds these default values to the objects it generates.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2860](https://github.com/strawberry-graphql/strawberry/pull/2860/)\n\n\n0.186.0 - 2023-06-15\n--------------------\n\nThis release removes more parts of the Mypy plugin, since they are\nnot needed anymore.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2852](https://github.com/strawberry-graphql/strawberry/pull/2852/)\n\n\n0.185.2 - 2023-06-15\n--------------------\n\nThis release fixes a bug causing a KeyError exception to be thrown during subscription cleanup.\n\nContributed by [rjwills28](https://github.com/rjwills28) via [PR #2794](https://github.com/strawberry-graphql/strawberry/pull/2794/)\n\n\n0.185.1 - 2023-06-14\n--------------------\n\nCorrect a type-hinting bug with `strawberry.directive`.\nThis may cause some consumers to have to remove a `# type: ignore` comment\nor unnecessary `typing.cast` in order to get `mypy` to pass.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2847](https://github.com/strawberry-graphql/strawberry/pull/2847/)\n\n\n0.185.0 - 2023-06-14\n--------------------\n\nThis release removes our custom `__dataclass_transform__` decorator and replaces\nit with typing-extension's one. It also removes parts of the mypy plugin, since\nmost of it is not needed anymore 🙌\n\nThis update requires typing_extensions>=4.1.0\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2227](https://github.com/strawberry-graphql/strawberry/pull/2227/)\n\n\n0.184.1 - 2023-06-13\n--------------------\n\nThis release migrates our CLI to typer, all commands\nshould work the same as before.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2569](https://github.com/strawberry-graphql/strawberry/pull/2569/)\n\n\n0.184.0 - 2023-06-12\n--------------------\n\nThis release improves the ﻿`relay.NodeID` annotation check by delaying it until after class initialization. This resolves issues with evaluating type annotations before they are fully defined and enables integrations to inject code for it in the type.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2838](https://github.com/strawberry-graphql/strawberry/pull/2838/)\n\n\n0.183.8 - 2023-06-12\n--------------------\n\nThis release fixes a bug in the codegen where `List` objects are currently emitted\nas `Optional` objects.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2843](https://github.com/strawberry-graphql/strawberry/pull/2843/)\n\n\n0.183.7 - 2023-06-12\n--------------------\n\nRefactor `ConnectionExtension` to copy arguments instead of extending them.\nThis should fix some issues with integrations which override `arguments`,\nlike the django one, where the inserted arguments were vanishing.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2839](https://github.com/strawberry-graphql/strawberry/pull/2839/)\n\n\n0.183.6 - 2023-06-09\n--------------------\n\nThis release fixes a bug where codegen would fail on mutations that have object arguments in the query.\n\nAdditionally, it does a topological sort of the types before passing it to the plugins to ensure that\ndependent types are defined after their dependencies.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2831](https://github.com/strawberry-graphql/strawberry/pull/2831/)\n\n\n0.183.5 - 2023-06-08\n--------------------\n\nThis release fixes an issue where Strawberry would make copies\nof types that were using specialized generics that were not\nStrawerry types.\n\nThis issue combined with the use of lazy types was resulting\nin duplicated type errors.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2824](https://github.com/strawberry-graphql/strawberry/pull/2824/)\n\n\n0.183.4 - 2023-06-07\n--------------------\n\nThis release fixes an issue for parsing lazy types using forward references\nwhen they were enclosed in an `Optional[...]` type.\n\nThe following now should work properly:\n\n```python\nfrom __future__ import annotations\n\nfrom typing import Optional, Annotated\nimport strawberry\n\n\n@strawberry.type\nclass MyType:\n    other_type: Optional[Annotated[\"OtherType\", strawberry.lazy(\"some.module\")]]\n    # or like this\n    other_type: Annotated[\"OtherType\", strawberry.lazy(\"some.module\")] | None\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2821](https://github.com/strawberry-graphql/strawberry/pull/2821/)\n\n\n0.183.3 - 2023-06-07\n--------------------\n\nThis release fixes a codegen bug.  Prior to this fix,\ninline fragments would only include the last field defined\nwithin its scope and all fields common with its siblings.\n\nAfter this fix, all fields will be included in the\ngenerated types.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2819](https://github.com/strawberry-graphql/strawberry/pull/2819/)\n\n\n0.183.2 - 2023-06-07\n--------------------\n\nFields with generics support directives.\n\nContributed by [A. Coady](https://github.com/coady) via [PR #2811](https://github.com/strawberry-graphql/strawberry/pull/2811/)\n\n\n0.183.1 - 2023-06-06\n--------------------\n\nThis release fixes an issue of the new relay integration adding an `id: GlobalID!`\nargument on all objects that inherit from `relay.Node`. That should've only happened\nfor `Query` types.\n\nStrawberry now will not force a `relay.Node` or any type that inherits it to be\ninject the node extension which adds the argument and a resolver for it, meaning that\nthis code:\n\n```python\nimport strawberry\nfrom strawberry import relay\n\n\n@strawberry.type\nclass Fruit(relay.Node):\n    id: relay.NodeID[int]\n\n\n@strawberry.type\nclass Query:\n    node: relay.Node\n    fruit: Fruit\n```\n\nShould now be written as:\n\n```python\nimport strawberry\nfrom strawberry import relay\n\n\n@strawberry.type\nclass Fruit(relay.Node):\n    id: relay.NodeID[int]\n\n\n@strawberry.type\nclass Query:\n    node: relay.Node = relay.node()  # <- note the \"= relay.node()\" here\n    fruit: Fruit = relay.node()\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2814](https://github.com/strawberry-graphql/strawberry/pull/2814/)\n\n\n0.183.0 - 2023-06-06\n--------------------\n\nThis release adds a new field extension called `InputMutationExtension`, which makes\nit easier to create mutations that receive a single input type called `input`,\nwhile still being able to define the arguments of that input on the resolver itself.\n\nThe following example:\n\n```python\nimport strawberry\nfrom strawberry.field_extensions import InputMutationExtension\n\n\n@strawberry.type\nclass Fruit:\n    id: strawberry.ID\n    name: str\n    weight: float\n\n\n@strawberry.type\nclass Mutation:\n    @strawberry.mutation(extensions=[InputMutationExtension()])\n    def update_fruit_weight(\n        self,\n        info: strawberry.Info,\n        id: strawberry.ID,\n        weight: Annotated[\n            float,\n            strawberry.argument(description=\"The fruit's new weight in grams\"),\n        ],\n    ) -> Fruit:\n        fruit = ...  # retrieve the fruit with the given ID\n        fruit.weight = weight\n        ...  # maybe save the fruit in the database\n        return fruit\n```\n\nWould generate a schema like this:\n\n```graphql\ninput UpdateFruitInput {\n  id: ID!\n\n  \"\"\"\n  The fruit's new weight in grams\n  \"\"\"\n  weight: Float!\n}\n\ntype Fruit {\n  id: ID!\n  name: String!\n  weight: Float!\n}\n\ntype Mutation {\n  updateFruitWeight(input: UpdateFruitInput!): Fruit!\n}\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2580](https://github.com/strawberry-graphql/strawberry/pull/2580/)\n\n\n0.182.0 - 2023-06-06\n--------------------\n\nInitial relay spec implementation. For information on how to use\nit, check out the docs in here: https://strawberry.rocks/docs/guides/relay\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2511](https://github.com/strawberry-graphql/strawberry/pull/2511/)\n\n\n0.181.0 - 2023-06-06\n--------------------\n\nThis release adds support for properly resolving lazy references\nwhen using forward refs.\n\nFor example, this code should now work without any issues:\n\n```python\nfrom __future__ import annotations\n\nfrom typing import TYPE_CHECKING, Annotated\n\nif TYPE_CHECKING:\n    from some.module import OtherType\n\n\n@strawberry.type\nclass MyType:\n    @strawberry.field\n    async def other_type(\n        self,\n    ) -> Annotated[OtherType, strawberry.lazy(\"some.module\")]: ...\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2744](https://github.com/strawberry-graphql/strawberry/pull/2744/)\n\n\n0.180.5 - 2023-06-02\n--------------------\n\nThis release fixes a bug in fragment codegen to pick up type definitions from the proper place\nin the schema.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2805](https://github.com/strawberry-graphql/strawberry/pull/2805/)\n\n\n0.180.4 - 2023-06-02\n--------------------\n\nCustom codegen plugins will fail to write files if the plugin is trying to put the\nfile anywhere other than the root output directory (since the child directories do\nnot yet exist).  This change will create the child directory if necessary before\nattempting to write the file.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2806](https://github.com/strawberry-graphql/strawberry/pull/2806/)\n\n\n0.180.3 - 2023-06-02\n--------------------\n\nThis release updates the built-in GraphiQL to the current latest version 2.4.7 and improves styling for the GraphiQL Explorer Plugin.\n\nContributed by [Kien Dang](https://github.com/kiendang) via [PR #2804](https://github.com/strawberry-graphql/strawberry/pull/2804/)\n\n\n0.180.2 - 2023-06-02\n--------------------\n\nIn this release codegen no longer chokes on queries that use a fragment.\n\nThere is one significant limitation at the present.  When a fragment is included via the spread operator in an object, it must be the only field present.  Attempts to include more fields will result in a ``ValueError``.\n\nHowever, there are some real benefits.  When a fragment is included in multiple places in the query, only a single class will be made to represent that fragment:\n\n```\nfragment Point on Bar {\n   id\n   x\n   y\n}\n\nquery GetPoints {\n  circlePoints {\n    ...Point\n  }\n  squarePoints {\n    ...Point\n  }\n}\n```\n\nMight generate the following types\n\n```py\nclass Point:\n    id: str\n    x: float\n    y: float\n\n\nclass GetPointsResult:\n    circle_points: List[Point]\n    square_points: List[Point]\n```\n\nThe previous behavior would generate duplicate classes for for the `GetPointsCirclePoints` and `GetPointsSquarePoints` even though they are really identical classes.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2802](https://github.com/strawberry-graphql/strawberry/pull/2802/)\n\n\n0.180.1 - 2023-06-01\n--------------------\n\nMake StrawberryAnnotation hashable, to make it compatible to newer versions of dacite.\n\nContributed by [Jaime Coello de Portugal](https://github.com/jaimecp89) via [PR #2790](https://github.com/strawberry-graphql/strawberry/pull/2790/)\n\n\n0.180.0 - 2023-05-31\n--------------------\n\nThis release updates the Django Channels integration so that it uses the same base\nclasses used by all other integrations.\n\n**New features:**\n\nThe Django Channels integration supports two new features:\n\n* Setting headers in a response\n* File uploads via `multipart/form-data` POST requests\n\n**Breaking changes:**\n\nThis release contains a breaking change for the Channels integration. The context\nobject is now a `dict` and it contains different keys depending on the connection\nprotocol:\n\n1. HTTP: `request` and `response`. The `request` object contains the full\n   request (including the body). Previously, `request` was the `GraphQLHTTPConsumer`\n   instance of the current connection. The consumer is now available via\n   `request.consumer`.\n2. WebSockets: `request`, `ws` and `response`. `request` and `ws` are the same\n   `GraphQLWSConsumer` instance of the current connection.\n\nIf you want to use a dataclass for the context object (like in previous releases),\nyou can still use them by overriding the `get_context` methods. See the Channels\nintegration documentation for an example.\n\nContributed by [Christian Dröge](https://github.com/cdroege) via [PR #2775](https://github.com/strawberry-graphql/strawberry/pull/2775/)\n\n\n0.179.0 - 2023-05-31\n--------------------\n\nThis PR allows passing metadata to Strawberry arguments.\n\nExample:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(\n        self,\n        info,\n        input: Annotated[str, strawberry.argument(metadata={\"test\": \"foo\"})],\n    ) -> str:\n        argument_definition = info.get_argument_definition(\"input\")\n        assert argument_definition.metadata[\"test\"] == \"foo\"\n\n        return f\"Hi {input}\"\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2755](https://github.com/strawberry-graphql/strawberry/pull/2755/)\n\n\n0.178.3 - 2023-05-31\n--------------------\n\nIn this release codegen no longer chokes on queries that have a `__typename` in them.\nPython generated types will not have the `__typename` included in the fields.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2797](https://github.com/strawberry-graphql/strawberry/pull/2797/)\n\n\n0.178.2 - 2023-05-31\n--------------------\n\nPrevent AssertionError when using `strawberry codegen` on a query file that contains a mutation.\n\nContributed by [Matt Gilson](https://github.com/mgilson) via [PR #2795](https://github.com/strawberry-graphql/strawberry/pull/2795/)\n\n\n0.178.1 - 2023-05-30\n--------------------\n\nThis release fixes a bug in experimental.pydantic whereby `Optional` type annotations weren't exactly aligned between strawberry type and pydantic model.\n\nPreviously this would have caused the series field to be non-nullable in graphql.\n```python\nfrom typing import Optional\nfrom pydantic import BaseModel, Field\nimport strawberry\n\n\nclass VehicleModel(BaseModel):\n    series: Optional[str] = Field(default=\"\")\n\n\n@strawberry.experimental.pydantic.type(model=VehicleModel, all_fields=True)\nclass VehicleModelType:\n    pass\n```\n\nContributed by [Nick Butlin](https://github.com/nicholasbutlin) via [PR #2782](https://github.com/strawberry-graphql/strawberry/pull/2782/)\n\n\n0.178.0 - 2023-05-22\n--------------------\n\nThis release introduces the new `should_ignore` argument to the `QueryDepthLimiter` extension that provides\na more general and more verbose way of specifying the rules by which a query's depth should be limited.\n\nThe `should_ignore` argument should be a function that accepts a single argument of type `IgnoreContext`.\nThe `IgnoreContext` class has the following attributes:\n- `field_name` of type `str`: the name of the field to be compared against\n- `field_args` of type `strawberry.extensions.query_depth_limiter.FieldArgumentsType`: the arguments of the field to be compared against\n- `query` of type `graphql.language.Node`: the query string\n- `context` of type `graphql.validation.ValidationContext`: the context passed to the query\nand returns `True` if the field should be ignored and `False` otherwise.\nThis argument is injected, regardless of name, by the `QueryDepthLimiter` class and should not be passed by the user.\n\nInstead, the user should write business logic to determine whether a field should be ignored or not by\nthe attributes of the `IgnoreContext` class.\n\nFor example, the following query:\n```python\n\"\"\"\n    query {\n      matt: user(name: \"matt\") {\n        email\n      }\n      andy: user(name: \"andy\") {\n        email\n        address {\n          city\n        }\n        pets {\n          name\n          owner {\n            name\n          }\n        }\n      }\n    }\n\"\"\"\n```\ncan have its depth limited by the following `should_ignore`:\n```python\nfrom strawberry.extensions import IgnoreContext\n\n\ndef should_ignore(ignore: IgnoreContext):\n    return ignore.field_args.get(\"name\") == \"matt\"\n\n\nquery_depth_limiter = QueryDepthLimiter(should_ignore=should_ignore)\n```\nso that it *effectively* becomes:\n```python\n\"\"\"\n    query {\n      andy: user(name: \"andy\") {\n        email\n        pets {\n          name\n          owner {\n            name\n          }\n        }\n      }\n    }\n\"\"\"\n```\n\nContributed by [Tommy Smith](https://github.com/tsmith023) via [PR #2505](https://github.com/strawberry-graphql/strawberry/pull/2505/)\n\n\n0.177.3 - 2023-05-19\n--------------------\n\nThis release adds a method on the DatadogTracingExtension class called `create_span` that can be overridden to create a custom span or add additional tags to the span.\n\n```python\nfrom ddtrace import Span\n\nfrom strawberry.extensions import LifecycleStep\nfrom strawberry.extensions.tracing import DatadogTracingExtension\n\n\nclass DataDogExtension(DatadogTracingExtension):\n    def create_span(\n        self,\n        lifecycle_step: LifecycleStep,\n        name: str,\n        **kwargs,\n    ) -> Span:\n        span = super().create_span(lifecycle_step, name, **kwargs)\n        if lifecycle_step == LifeCycleStep.OPERATION:\n            span.set_tag(\"graphql.query\", self.execution_context.query)\n        return span\n```\n\nContributed by [Ronald Williams](https://github.com/ronaldnwilliams) via [PR #2773](https://github.com/strawberry-graphql/strawberry/pull/2773/)\n\n\n0.177.2 - 2023-05-18\n--------------------\n\nThis release fixes an issue with optional scalars using the `or`\nnotation with forward references on python 3.10.\n\nThe following code would previously raise `TypeError` on python 3.10:\n\n```python\nfrom __future__ import annotations\n\nimport strawberry\nfrom strawberry.scalars import JSON\n\n\n@strawberry.type\nclass SomeType:\n    an_optional_json: JSON | None\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2774](https://github.com/strawberry-graphql/strawberry/pull/2774/)\n\n\n0.177.1 - 2023-05-09\n--------------------\n\nThis release adds support for using `enum_value` with `IntEnum`s, like this:\n\n```python\nimport strawberry\n\nfrom enum import IntEnum\n\n\n@strawberry.enum\nclass Color(IntEnum):\n    OTHER = strawberry.enum_value(\n        -1, description=\"Other: The color is not red, blue, or green.\"\n    )\n    RED = strawberry.enum_value(0, description=\"Red: The color red.\")\n    BLUE = strawberry.enum_value(1, description=\"Blue: The color blue.\")\n    GREEN = strawberry.enum_value(2, description=\"Green: The color green.\")\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2761](https://github.com/strawberry-graphql/strawberry/pull/2761/)\n\n\n0.177.0 - 2023-05-07\n--------------------\n\nThis release adds a SentryTracingExtension that you can use to automatically add\ntracing information to your GraphQL queries.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2495](https://github.com/strawberry-graphql/strawberry/pull/2495/)\n\n\n0.176.4 - 2023-05-07\n--------------------\n\nThis release adds support for custom classes inside the OpenTelemetry integration.\nWith this, we shouldn't see errors like this anymore:\n\n```Invalid type dict for attribute 'graphql.param.paginator' value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types.```\n\nContributed by [Budida Abhinav Ramana](https://github.com/abhinavramana) via [PR #2753](https://github.com/strawberry-graphql/strawberry/pull/2753/)\n\n\n0.176.3 - 2023-05-03\n--------------------\n\nAdd `get_argument_definition` helper function on the Info object to get\na StrawberryArgument definition by argument name from inside a resolver or\nField Extension.\n\nExample:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def field(\n        self,\n        info,\n        my_input: Annotated[\n            str,\n            strawberry.argument(description=\"Some description\"),\n        ],\n    ) -> str:\n        my_input_def = info.get_argument_definition(\"my_input\")\n        assert my_input_def.type is str\n        assert my_input_def.description == \"Some description\"\n\n        return my_input\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2732](https://github.com/strawberry-graphql/strawberry/pull/2732/)\n\n\n0.176.2 - 2023-05-02\n--------------------\n\nThis release adds more type hints to internal APIs and public APIs.\n\nContributed by [Alex Auritt](https://github.com/alexauritt) via [PR #2568](https://github.com/strawberry-graphql/strawberry/pull/2568/)\n\n\n0.176.1 - 2023-05-02\n--------------------\n\nThis release improves the `graphql-transport-ws` implementation by starting the sub-protocol timeout only when the connection handshake is completed.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2703](https://github.com/strawberry-graphql/strawberry/pull/2703/)\n\n\n0.176.0 - 2023-05-01\n--------------------\n\nThis release parses the input arguments to a field earlier so that Field\nExtensions recieve instances of Input types rather than plain dictionaries.\n\nExample:\n\n```python\nimport strawberry\nfrom strawberry.extensions import FieldExtension\n\n\n@strawberry.input\nclass MyInput:\n    foo: str\n\n\nclass MyFieldExtension(FieldExtension):\n    def resolve(\n        self, next_: Callable[..., Any], source: Any, info: strawberry.Info, **kwargs\n    ):\n        # kwargs[\"my_input\"] is instance of MyInput\n        ...\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def field(self, my_input: MyInput) -> str:\n        return \"hi\"\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2731](https://github.com/strawberry-graphql/strawberry/pull/2731/)\n\n\n0.175.1 - 2023-04-30\n--------------------\n\nThis release adds a missing parameter to `get_context`\nwhen using subscriptions with ASGI.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2739](https://github.com/strawberry-graphql/strawberry/pull/2739/)\n\n\n0.175.0 - 2023-04-29\n--------------------\n\nDo not display graphiql view in fastapi doc if graphiql parameter is deactivated\n\nContributed by [yak-toto](https://github.com/yak-toto) via [PR #2736](https://github.com/strawberry-graphql/strawberry/pull/2736/)\n\n\n0.174.0 - 2023-04-25\n--------------------\n\nThis PR adds a MaxTokensLimiter extension which limits the number of tokens in a GraphQL document.\n\n## Usage example:\n\n```python\nimport strawberry\nfrom strawberry.extensions import MaxTokensLimiter\n\nschema = strawberry.Schema(\n    Query,\n    extensions=[\n        MaxTokensLimiter(max_token_count=1000),\n    ],\n)\n```\n\nContributed by [reka](https://github.com/reka) via [PR #2729](https://github.com/strawberry-graphql/strawberry/pull/2729/)\n\n\n0.173.1 - 2023-04-25\n--------------------\n\nThis release bumps the version of typing_extensions to >= `4.0.0` to fix the\nerror: `\"cannot import Self from typing_extensions\"`.\n\nContributed by [Tien Truong](https://github.com/tienman) via [PR #2704](https://github.com/strawberry-graphql/strawberry/pull/2704/)\n\n\n0.173.0 - 2023-04-25\n--------------------\n\nThis releases adds an extension for [PyInstrument](https://github.com/joerick/pyinstrument). It allows to instrument your server and find slow code paths.\n\nYou can use it like this:\n\n```python\nimport strawberry\nfrom strawberry.extensions import pyinstrument\n\nschema = strawberry.Schema(\n    Query,\n    extensions=[\n        pyinstrument.PyInstrument(report_path=\"pyinstrument.html\"),\n    ],\n)\n```\n\nContributed by [Peyton Duncan](https://github.com/Helithumper) via [PR #2727](https://github.com/strawberry-graphql/strawberry/pull/2727/)\n\n\n0.172.0 - 2023-04-24\n--------------------\n\nThis PR adds a MaxAliasesLimiter extension which limits the number of aliases in a GraphQL document.\n\n## Usage example:\n\n```python\nimport strawberry\nfrom strawberry.extensions import MaxAliasesLimiter\n\nschema = strawberry.Schema(\n    Query,\n    extensions=[\n        MaxAliasesLimiter(max_alias_count=15),\n    ],\n)\n```\n\nContributed by [reka](https://github.com/reka) via [PR #2726](https://github.com/strawberry-graphql/strawberry/pull/2726/)\n\n\n0.171.3 - 2023-04-21\n--------------------\n\nThis release adds missing annotations in class methods, improving\nour type coverage.\n\nContributed by [Kai Benevento](https://github.com/benesgarage) via [PR #2721](https://github.com/strawberry-graphql/strawberry/pull/2721/)\n\n\n0.171.2 - 2023-04-21\n--------------------\n\n`graphql_transport_ws`: Cancelling a subscription no longer blocks the connection\nwhile any subscription finalizers run.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2718](https://github.com/strawberry-graphql/strawberry/pull/2718/)\n\n\n0.171.1 - 2023-04-07\n--------------------\n\nThis release fix the return value of enums when using a custom\nname converter for them.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2696](https://github.com/strawberry-graphql/strawberry/pull/2696/)\n\n\n0.171.0 - 2023-04-06\n--------------------\n\nThis release adds support for Mypy 1.2.0\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2693](https://github.com/strawberry-graphql/strawberry/pull/2693/)\n\n\n0.170.0 - 2023-04-06\n--------------------\n\nThis release add support for converting the enum value names\nfrom `NameConverter`. It looks like this:\n\n\n```python\nfrom enum import Enum\n\nimport strawberry\nfrom strawberry.enum import EnumDefinition, EnumValue\nfrom strawberry.schema.config import StrawberryConfig\nfrom strawberry.schema.name_converter import NameConverter\n\n\nclass EnumNameConverter(NameConverter):\n    def from_enum_value(self, enum: EnumDefinition, enum_value: EnumValue) -> str:\n        return f\"{super().from_enum_value(enum, enum_value)}_enum_value\"\n\n\n@strawberry.enum\nclass MyEnum(Enum):\n    A = \"a\"\n    B = \"b\"\n\n\n@strawberry.type\nclass Query:\n    a_enum: MyEnum\n\n\nschema = strawberry.Schema(\n    query=Query,\n    config=StrawberryConfig(name_converter=EnumNameConverter()),\n)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2690](https://github.com/strawberry-graphql/strawberry/pull/2690/)\n\n\n0.169.0 - 2023-04-05\n--------------------\n\nThis release updates all\\* the HTTP integration to use the same base class,\nwhich makes it easier to maintain and extend them in future releases.\n\nWhile this doesn't provide any new features (other than settings headers in\nChalice and Sanic), it does make it easier to extend the HTTP integrations in\nthe future. So, expect some new features in the next releases!\n\n**New features:**\n\nNow both Chalice and Sanic integrations support setting headers in the response.\nBringing them to the same level as the other HTTP integrations.\n\n**Breaking changes:**\n\nUnfortunately, this release does contain some breaking changes, but they are\nminimal and should be quick to fix.\n\n1. Flask `get_root_value` and `get_context` now receive the request\n2. Sanic `get_root_value` now receives the request and it is async\n\n\\* The only exception is the channels http integration, which will be updated in\na future release.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2681](https://github.com/strawberry-graphql/strawberry/pull/2681/)\n\n\n0.168.2 - 2023-04-03\n--------------------\n\nFixes type hint for StrawberryTypeFromPydantic._pydantic_type to be a Type instead of an instance of the Pydantic model.\nAs it is a private API, we still highly discourage using it, but it's now typed correctly.\n\n```python\nfrom pydantic import BaseModel\nfrom typing import Type, List\n\nimport strawberry\nfrom strawberry.experimental.pydantic.conversion_types import StrawberryTypeFromPydantic\n\n\nclass User(BaseModel):\n    name: str\n\n    @staticmethod\n    def foo() -> List[str]:\n        return [\"Patrick\", \"Pietro\", \"Pablo\"]\n\n\n@strawberry.experimental.pydantic.type(model=User, all_fields=True)\nclass UserType:\n    @strawberry.field\n    def foo(self: StrawberryTypeFromPydantic[User]) -> List[str]:\n        # This is now inferred correctly as Type[User] instead of User\n        # We still highly discourage using this private API, but it's\n        # now typed correctly\n        pydantic_type: Type[User] = self._pydantic_type\n        return pydantic_type.foo()\n\n\ndef get_users() -> UserType:\n    user: User = User(name=\"Patrick\")\n    return UserType.from_pydantic(user)\n\n\n@strawberry.type\nclass Query:\n    user: UserType = strawberry.field(resolver=get_users)\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #2683](https://github.com/strawberry-graphql/strawberry/pull/2683/)\n\n\n0.168.1 - 2023-03-26\n--------------------\n\nThis releases adds a new `extra` group for Starlite, preventing it from being\ninstalled by default.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2664](https://github.com/strawberry-graphql/strawberry/pull/2664/)\n\n\n0.168.0 - 2023-03-26\n--------------------\n\nThis release adds support for [starlite](https://starliteproject.dev/).\n\n```python\nimport strawberry\nfrom starlite import Request, Starlite\nfrom strawberry.starlite import make_graphql_controller\nfrom strawberry.types.info import Info\n\n\ndef custom_context_getter(request: Request):\n    return {\"custom\": \"context\"}\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self, info: strawberry.Info[object, None]) -> str:\n        return info.context[\"custom\"]\n\n\nschema = strawberry.Schema(Query)\n\n\nGraphQLController = make_graphql_controller(\n    schema,\n    path=\"/graphql\",\n    context_getter=custom_context_getter,\n)\n\napp = Starlite(\n    route_handlers=[GraphQLController],\n)\n```\n\nContributed by [Matthieu MN](https://github.com/gazorby) via [PR #2391](https://github.com/strawberry-graphql/strawberry/pull/2391/)\n\n\n0.167.1 - 2023-03-26\n--------------------\n\nThis release fixes and issue where you'd get a warning\nabout using Apollo Federation directives even when using\n`strawberry.federation.Schema`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2661](https://github.com/strawberry-graphql/strawberry/pull/2661/)\n\n\n0.167.0 - 2023-03-25\n--------------------\n\nThis releases adds more type annotations for public functions and methods.\n\nNo new changes have been added to the API.\n\nContributed by [Jad Haddad](https://github.com/JadHADDAD92) via [PR #2627](https://github.com/strawberry-graphql/strawberry/pull/2627/)\n\n\n0.166.0 - 2023-03-25\n--------------------\n\nThis release adds a warning when using `@strawberry.federation.type`\nbut not using `strawberry.federation.Schema`\n\nContributed by [Rubens O Leão](https://github.com/rubensoleao) via [PR #2572](https://github.com/strawberry-graphql/strawberry/pull/2572/)\n\n\n0.165.1 - 2023-03-21\n--------------------\n\nUpdates the `MaskErrors` extension to the new extension API, which was missed previously.\n\nContributed by [Nikolai Maas](https://github.com/N-Maas) via [PR #2655](https://github.com/strawberry-graphql/strawberry/pull/2655/)\n\n\n0.165.0 - 2023-03-18\n--------------------\n\nAdd full support for forward references, specially when using\n`from __future__ import annotations`.\n\nBefore the following would fail on python versions older than 3.10:\n\n```python\nfrom __future__ import annotations\n\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    foo: str | None\n```\n\nAlso, this would fail in any python versions:\n\n```python\nfrom __future__ import annotations\n\nfrom typing import Annotated\n\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    foo: Annotated[str, \"some annotation\"]\n```\n\nNow both of these cases are supported.\nPlease open an issue if you find any edge cases that are still not supported.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2592](https://github.com/strawberry-graphql/strawberry/pull/2592/)\n\n\n0.164.1 - 2023-03-18\n--------------------\n\nFix interface duplication leading to schema compilation error in multiple\ninheritance scenarios (i.e. \"Diamond Problem\" inheritance)\n\nThank you @mzhu22 for the thorough bug report!\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #2647](https://github.com/strawberry-graphql/strawberry/pull/2647/)\n\n\n0.164.0 - 2023-03-14\n--------------------\n\nThis release introduces a breaking change to make pydantic default behavior consistent with normal strawberry types.\nThis changes the schema generated for pydantic types, that are required, and have default values.\nPreviously pydantic type with a default, would get converted to a strawberry type that is not required.\nThis is now fixed, and the schema will now correctly show the type as required.\n\n```python\nimport pydantic\nimport strawberry\n\n\nclass UserPydantic(pydantic.BaseModel):\n    name: str = \"James\"\n\n\n@strawberry.experimental.pydantic.type(UserPydantic, all_fields=True)\nclass User: ...\n\n\n@strawberry.type\nclass Query:\n    a: User = strawberry.field()\n\n    @strawberry.field\n    def a(self) -> User:\n        return User()\n```\nThe schema is now\n```\ntype Query {\n  a: User!\n}\n\ntype User {\n  name: String! // String! rather than String previously\n}\n```\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #2623](https://github.com/strawberry-graphql/strawberry/pull/2623/)\n\n\n0.163.2 - 2023-03-14\n--------------------\n\nThis release covers an edge case where the following would not give a nice error.\n```python\nsome_field: \"Union[list[str], SomeType]]\"\n```\nFixes [#2591](https://github.com/strawberry-graphql/strawberry/issues/2591)\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #2593](https://github.com/strawberry-graphql/strawberry/pull/2593/)\n\n\n0.163.1 - 2023-03-14\n--------------------\n\nProvide close reason to ASGI websocket as specified by ASGI 2.3\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2639](https://github.com/strawberry-graphql/strawberry/pull/2639/)\n\n\n0.163.0 - 2023-03-13\n--------------------\n\nThis release adds support for list arguments in operation directives.\n\nThe following is now supported:\n\n```python\n@strawberry.directive(locations=[DirectiveLocation.FIELD])\ndef append_names(\n    value: DirectiveValue[str], names: List[str]\n):  # note the usage of List here\n    return f\"{value} {', '.join(names)}\"\n```\n\nContributed by [chenyijian](https://github.com/hot123s) via [PR #2632](https://github.com/strawberry-graphql/strawberry/pull/2632/)\n\n\n0.162.0 - 2023-03-10\n--------------------\n\nAdds support for a custom field using the approach specified in issue [#2168](abc).\nField Extensions may be used to change the way how fields work and what they return.\nUse cases might include pagination, permissions or other behavior modifications.\n\n```python\nfrom strawberry.extensions import FieldExtension\n\n\nclass UpperCaseExtension(FieldExtension):\n    async def resolve_async(\n        self,\n        next: Callable[..., Awaitable[Any]],\n        source: Any,\n        info: strawberry.Info,\n        **kwargs\n    ):\n        result = await next(source, info, **kwargs)\n        return str(result).upper()\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field(extensions=[UpperCaseExtension()])\n    async def string(self) -> str:\n        return \"This is a test!!\"\n```\n\n```graphql\nquery {\n    string\n}\n```\n\n```json\n{\n  \"string\": \"THIS IS A TEST!!\"\n}\n```\n\nContributed by [Erik Wrede](https://github.com/erikwrede) via [PR #2567](https://github.com/strawberry-graphql/strawberry/pull/2567/)\n\n\n0.161.1 - 2023-03-09\n--------------------\n\nEnsure that no other messages follow a \"complete\" or \"error\" message\nfor an operation in the graphql-transport-ws protocol.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2600](https://github.com/strawberry-graphql/strawberry/pull/2600/)\n\n\n0.161.0 - 2023-03-08\n--------------------\n\nCalling `ChannelsConsumer.channel_listen` multiple times will now pass\nalong the messages being listened for to multiple callers, rather than\nonly one of the callers, which was the old behaviour.\n\nThis resolves an issue where creating multiple GraphQL subscriptions\nusing a single websocket connection could result in only one of those\nsubscriptions (in a non-deterministic order) being triggered if they\nare listening for channel layer messages of the same type.\n\nContributed by [James Thorniley](https://github.com/jthorniley) via [PR #2525](https://github.com/strawberry-graphql/strawberry/pull/2525/)\n\n\n0.160.0 - 2023-03-08\n--------------------\n\nRename `Extension` to `SchemaExtension` to pave the way for FieldExtensions.\nImporting `Extension` from `strawberry.extensions` will now raise a deprecation\nwarning.\n\nBefore:\n\n```python\nfrom strawberry.extensions import Extension\n```\n\nAfter:\n\n```python\nfrom strawberry.extensions import SchemaExtension\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2574](https://github.com/strawberry-graphql/strawberry/pull/2574/)\n\n\n0.159.1 - 2023-03-07\n--------------------\n\nThis releases adds support for Mypy 1.1.1\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2616](https://github.com/strawberry-graphql/strawberry/pull/2616/)\n\n\n0.159.0 - 2023-02-22\n--------------------\n\nThis release changes how extension hooks are defined. The new style hooks are\nmore flexible and allow to run code before and after the execution.\n\nThe old style hooks are still supported but will be removed in future releases.\n\n**Before:**\n\n```python\ndef on_executing_start(self):  # Called before the execution start\n    ...\n\n\ndef on_executing_end(self):  # Called after the execution ends\n    ...\n```\n\n**After**\n\n```python\ndef on_execute(self):\n    #  This part is called before the execution start\n    yield\n    #  This part is called after the execution ends\n```\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #2428](https://github.com/strawberry-graphql/strawberry/pull/2428/)\n\n\n0.158.2 - 2023-02-21\n--------------------\n\nAdd a type annotation to `strawberry.fastapi.BaseContext`'s `__init__` method so that\nit can be used without `mypy` raising an error.\n\nContributed by [Martin Winkel](https://github.com/SaturnFromTitan) via [PR #2581](https://github.com/strawberry-graphql/strawberry/pull/2581/)\n\n\n0.158.1 - 2023-02-19\n--------------------\n\nVersion 1.5.10 of GraphiQL disabled introspection for deprecated\narguments because it wasn't supported by all GraphQL server versions.\nThis PR enables it so that deprecated arguments show up again in\nGraphiQL.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2575](https://github.com/strawberry-graphql/strawberry/pull/2575/)\n\n\n0.158.0 - 2023-02-18\n--------------------\n\nThrow proper exceptions when Unions are created with invalid types\n\nPreviously, using Lazy types inside of Unions would raise unexpected, unhelpful errors.\n\nContributed by [ignormies](https://github.com/BryceBeagle) via [PR #2540](https://github.com/strawberry-graphql/strawberry/pull/2540/)\n\n\n0.157.0 - 2023-02-18\n--------------------\n\nThis releases adds support for Apollo Federation 2.1, 2.2 and 2.3.\n\nThis includes support for `@composeDirective` and `@interfaceObject`,\nwe expose directives for both, but we also have shortcuts, for example\nto use `@composeDirective` with a custom schema directive, you can do\nthe following:\n\n```python\n@strawberry.federation.schema_directive(\n    locations=[Location.OBJECT], name=\"cacheControl\", compose=True\n)\nclass CacheControl:\n    max_age: int\n```\n\nThe `compose=True` makes so that this directive is included in the supergraph\nschema.\n\nFor `@interfaceObject` we introduced a new `@strawberry.federation.interface_object`\ndecorator. This works like `@strawberry.federation.type`, but it adds, the appropriate\ndirective, for example:\n\n```python\n@strawberry.federation.interface_object(keys=[\"id\"])\nclass SomeInterface:\n    id: strawberry.ID\n```\n\ngenerates the following type:\n\n```graphql\ntype SomeInterface @key(fields: \"id\") @interfaceObject {\n  id: ID!\n}\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2549](https://github.com/strawberry-graphql/strawberry/pull/2549/)\n\n\n0.156.4 - 2023-02-13\n--------------------\n\nThis release fixes a regression introduce in version 0.156.2 that\nwould make Mypy throw an error in the following code:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Author:\n    name: str\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    async def get_authors(self) -> list[Author]:\n        return [Author(name=\"Michael Crichton\")]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2535](https://github.com/strawberry-graphql/strawberry/pull/2535/)\n\n\n0.156.3 - 2023-02-10\n--------------------\n\nThis release adds support for Mypy 1.0\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2516](https://github.com/strawberry-graphql/strawberry/pull/2516/)\n\n\n0.156.2 - 2023-02-09\n--------------------\n\nThis release updates the typing for the resolver argument in\n`strawberry.field`i to support async resolvers.\nThis means that now you won't get any type\nerror from Pyright when using async resolver, like the following example:\n\n```python\nimport strawberry\n\n\nasync def get_user_age() -> int:\n    return 0\n\n\n@strawberry.type\nclass User:\n    name: str\n    age: int = strawberry.field(resolver=get_user_age)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2528](https://github.com/strawberry-graphql/strawberry/pull/2528/)\n\n\n0.156.1 - 2023-02-09\n--------------------\n\nAdd `GraphQLWebsocketCommunicator` for testing websockets on channels.\ni.e:\n\n```python\nimport pytest\nfrom strawberry.channels.testing import GraphQLWebsocketCommunicator\nfrom myapp.asgi import application\n\n\n@pytest.fixture\nasync def gql_communicator():\n    async with GraphQLWebsocketCommunicator(\n        application=application, path=\"/graphql\"\n    ) as client:\n        yield client\n\n\nasync def test_subscribe_echo(gql_communicator):\n    async for res in gql_communicator.subscribe(\n        query='subscription { echo(message: \"Hi\") }'\n    ):\n        assert res.data == {\"echo\": \"Hi\"}\n```\n\nContributed by [ניר](https://github.com/nrbnlulu) via [PR #2458](https://github.com/strawberry-graphql/strawberry/pull/2458/)\n\n\n0.156.0 - 2023-02-08\n--------------------\n\nThis release adds support for specialized generic types.\nBefore, the following code would give an error, saying that `T` was not\nprovided to the generic type:\n\n```python\n@strawberry.type\nclass Foo(Generic[T]):\n    some_var: T\n\n\n@strawberry.type\nclass IntFoo(Foo[int]): ...\n\n\n@strawberry.type\nclass Query:\n    int_foo: IntFoo\n```\n\nAlso, because the type is already specialized, `Int` won't get inserted to its name,\nmeaning it will be exported to the schema with a type name of `IntFoo` and not\n`IntIntFoo`.\n\nFor example, this query:\n\n```python\n@strawberry.type\nclass Query:\n    int_foo: IntFoo\n    str_foo: Foo[str]\n```\n\nWill generate a schema like this:\n\n```graphql\ntype IntFoo {\n  someVar: Int!\n}\n\ntype StrFoo {\n  someVar: String!\n}\n\ntype Query {\n  intFoo: IntFoo!\n  strfoo: StrFoo!\n}\n```\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2517](https://github.com/strawberry-graphql/strawberry/pull/2517/)\n\n\n0.155.4 - 2023-02-06\n--------------------\n\nFix file not found error when exporting schema with lazy types from CLI #2469\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #2512](https://github.com/strawberry-graphql/strawberry/pull/2512/)\n\n\n0.155.3 - 2023-02-01\n--------------------\n\nFix missing custom `resolve_reference` for using pydantic with federation\n\ni.e:\n\n```python\nimport typing\nfrom pydantic import BaseModel\nimport strawberry\nfrom strawberry.federation.schema_directives import Key\n\n\nclass ProductInDb(BaseModel):\n    upc: str\n    name: str\n\n\n@strawberry.experimental.pydantic.type(\n    model=ProductInDb, directives=[Key(fields=\"upc\", resolvable=True)]\n)\nclass Product:\n    upc: str\n    name: str\n\n    @classmethod\n    def resolve_reference(cls, upc):\n        return Product(upc=upc, name=\"\")\n```\n\nContributed by [filwaline](https://github.com/filwaline) via [PR #2503](https://github.com/strawberry-graphql/strawberry/pull/2503/)\n\n\n0.155.2 - 2023-01-25\n--------------------\n\nThis release fixes a bug in subscriptions using the graphql-transport-ws protocol\nwhere the conversion of the NextMessage object to a dictionary took an unnecessary\namount of time leading to an increase in CPU usage.\n\nContributed by [rjwills28](https://github.com/rjwills28) via [PR #2481](https://github.com/strawberry-graphql/strawberry/pull/2481/)\n\n\n0.155.1 - 2023-01-24\n--------------------\n\nA link to the changelog has been added to the package metadata, so it shows up on PyPI.\n\nContributed by [Tom Most](https://github.com/twm) via [PR #2490](https://github.com/strawberry-graphql/strawberry/pull/2490/)\n\n\n0.155.0 - 2023-01-23\n--------------------\n\nThis release adds a new utility function to convert a Strawberry object to a\ndictionary.\n\nYou can use `strawberry.asdict(...)` function to convert a Strawberry object to\na dictionary:\n\n```python\n@strawberry.type\nclass User:\n    name: str\n    age: int\n\n\n# should be {\"name\": \"Lorem\", \"age\": 25}\nuser_dict = strawberry.asdict(User(name=\"Lorem\", age=25))\n```\n\n> Note: This function uses the `dataclasses.asdict` function under the hood, so\n> you can safely replace `dataclasses.asdict` with `strawberry.asdict` in your\n> code. This will make it easier to update your code to newer versions of\n> Strawberry if we decide to change the implementation.\n\nContributed by [Haze Lee](https://github.com/Hazealign) via [PR #2417](https://github.com/strawberry-graphql/strawberry/pull/2417/)\n\n\n0.154.1 - 2023-01-17\n--------------------\n\nFix `DuplicatedTypeName` exception being raised on generics declared using\n`strawberry.lazy`. Previously the following would raise:\n\n```python\n# issue_2397.py\nfrom typing import Annotated, Generic, TypeVar\n\nimport strawberry\n\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass Item:\n    name: str\n\n\n@strawberry.type\nclass Edge(Generic[T]):\n    node: T\n\n\n@strawberry.type\nclass Query:\n    edges_normal: Edge[Item]\n    edges_lazy: Edge[Annotated[\"Item\", strawberry.lazy(\"issue_2397\")]]\n\n\nif __name__ == \"__main__\":\n    schema = strawberry.Schema(query=Query)\n```\n\nContributed by [pre-commit-ci](https://github.com/pre-commit-ci) via [PR #2462](https://github.com/strawberry-graphql/strawberry/pull/2462/)\n\n\n0.154.0 - 2023-01-13\n--------------------\n\nSupport constrained float field types in Pydantic models.\n\ni.e.\n\n```python\nimport pydantic\n\n\nclass Model(pydantic.BaseModel):\n    field: pydantic.confloat(le=100.0)\n    equivalent_field: float = pydantic.Field(le=100.0)\n```\n\nContributed by [Etienne Wodey](https://github.com/airwoodix) via [PR #2455](https://github.com/strawberry-graphql/strawberry/pull/2455/)\n\n\n0.153.0 - 2023-01-13\n--------------------\n\nThis change allows clients to define connectionParams when making Subscription requests similar to the way [Apollo-Server](https://www.apollographql.com/docs/apollo-server/data/subscriptions/#operation-context) does it.\n\nWith [Apollo-Client (React)](https://www.apollographql.com/docs/react/data/subscriptions/#5-authenticate-over-websocket-optional) as an example, define a Websocket Link:\n```\nimport { GraphQLWsLink } from '@apollo/client/link/subscriptions';\nimport { createClient } from 'graphql-ws';\n\nconst wsLink = new GraphQLWsLink(createClient({\n  url: 'ws://localhost:4000/subscriptions',\n  connectionParams: {\n    authToken: user.authToken,\n  },\n}));\n```\nand the JSON passed to `connectionParams` here will appear within Strawberry's context as the `connection_params` attribute when accessing `info.context` within a Subscription resolver.\n\nContributed by [Tommy Smith](https://github.com/tsmith023) via [PR #2380](https://github.com/strawberry-graphql/strawberry/pull/2380/)\n\n\n0.152.0 - 2023-01-10\n--------------------\n\nThis release adds support for updating (or adding) the query document inside an\nextension's `on_request_start` method.\n\nThis can be useful for implementing persisted queries. The old behavior of\nreturning a 400 error if no query is present in the request is still supported.\n\nExample usage:\n\n```python\nfrom strawberry.extensions import Extension\n\n\ndef get_doc_id(request) -> str:\n    \"\"\"Implement this to get the document ID using your framework's request object\"\"\"\n    ...\n\n\ndef load_persisted_query(doc_id: str) -> str:\n    \"\"\"Implement this load a query by document ID. For example, from a database.\"\"\"\n    ...\n\n\nclass PersistedQuery(Extension):\n    def on_request_start(self):\n        request = self.execution_context.context.request\n\n        doc_id = get_doc_id(request)\n\n        self.execution_context.query = load_persisted_query(doc_id)\n```\n\nContributed by [James Thorniley](https://github.com/jthorniley) via [PR #2431](https://github.com/strawberry-graphql/strawberry/pull/2431/)\n\n\n0.151.3 - 2023-01-09\n--------------------\n\nThis release adds support for FastAPI 0.89.0\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2440](https://github.com/strawberry-graphql/strawberry/pull/2440/)\n\n\n0.151.2 - 2022-12-23\n--------------------\n\nThis release fixes `@strawberry.experimental.pydantic.type` and adds support for the metadata attribute on fields.\n\nExample:\n```python\n@strawberry.experimental.pydantic.type(model=User)\nclass UserType:\n    private: strawberry.auto = strawberry.field(metadata={\"admin_only\": True})\n    public: strawberry.auto\n```\n\nContributed by [Huy Z](https://github.com/huyz) via [PR #2415](https://github.com/strawberry-graphql/strawberry/pull/2415/)\n\n\n0.151.1 - 2022-12-20\n--------------------\n\nThis release fixes an issue that prevented using generic\nthat had a field of type enum. The following works now:\n\n```python\n@strawberry.enum\nclass EstimatedValueEnum(Enum):\n    test = \"test\"\n    testtest = \"testtest\"\n\n\n@strawberry.type\nclass EstimatedValue(Generic[T]):\n    value: T\n    type: EstimatedValueEnum\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def estimated_value(self) -> Optional[EstimatedValue[int]]:\n        return EstimatedValue(value=1, type=EstimatedValueEnum.test)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2411](https://github.com/strawberry-graphql/strawberry/pull/2411/)\n\n\n0.151.0 - 2022-12-13\n--------------------\n\nThis PR adds a new `graphql_type` parameter to strawberry.field that allows you\nto explicitly set the field type. This parameter will take preference over the\nresolver return type and the class field type.\n\nFor example:\n\n```python\n@strawberry.type\nclass Query:\n    a: float = strawberry.field(graphql_type=str)\n    b = strawberry.field(graphql_type=int)\n\n    @strawberry.field(graphql_type=float)\n    def c(self) -> str:\n        return \"3.4\"\n\n\nschema = strawberry.Schema(Query)\n\nstr(\n    schema\n) == \"\"\"\n  type Query {\n    a: String!\n    b: Int!\n    c: Float!\n  }\n\"\"\"\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2313](https://github.com/strawberry-graphql/strawberry/pull/2313/)\n\n\n0.150.1 - 2022-12-13\n--------------------\n\nFixed field resolvers with nested generic return types\n(e.g. `list`, `Optional`, `Union` etc) raising TypeErrors.\nThis means resolver factory methods can now be correctly type hinted.\n\nFor example the below would previously error unless you ommited all the\ntype hints on `resolver_factory` and `actual_resolver` functions.\n```python\nfrom typing import Callable, Optional, Type, TypeVar\n\nimport strawberry\n\n\n@strawberry.type\nclass Cat:\n    name: str\n\n\nT = TypeVar(\"T\")\n\n\ndef resolver_factory(type_: Type[T]) -> Callable[[], Optional[T]]:\n    def actual_resolver() -> Optional[T]:\n        # load rows from database and cast to type etc\n        ...\n\n    return actual_resolver\n\n\n@strawberry.type\nclass Query:\n    cat: Cat = strawberry.field(resolver_factory(Cat))\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Tim OSullivan](https://github.com/invokermain) via [PR #1900](https://github.com/strawberry-graphql/strawberry/pull/1900/)\n\n\n0.150.0 - 2022-12-13\n--------------------\n\nThis release implements the ability to use custom caching for dataloaders.\nIt also allows to provide a `cache_key_fn` to the dataloader. This function\nis used to generate the cache key for the dataloader. This is useful when\nyou want to use a custom hashing function for the cache key.\n\nContributed by [Aman Choudhary](https://github.com/Techno-Tut) via [PR #2394](https://github.com/strawberry-graphql/strawberry/pull/2394/)\n\n\n0.149.2 - 2022-12-09\n--------------------\n\nThis release fixes support for generics in arguments, see the following example:\n\n ```python\n T = TypeVar(\"T\")\n\n\n @strawberry.type\n class Node(Generic[T]):\n     @strawberry.field\n     def data(self, arg: T) -> T:  # `arg` is also generic\n         return arg\n ```\n\nContributed by [A. Coady](https://github.com/coady) via [PR #2316](https://github.com/strawberry-graphql/strawberry/pull/2316/)\n\n\n0.149.1 - 2022-12-09\n--------------------\n\nThis release improves the performance of rich exceptions on custom scalars\nby changing how frames are fetched from the call stack.\nBefore the change, custom scalars were using a CPU intensive call to the\n`inspect` module to fetch frame info which could lead to serious CPU spikes.\n\nContributed by [Paulo Amaral](https://github.com/paulopaixaoamaral) via [PR #2390](https://github.com/strawberry-graphql/strawberry/pull/2390/)\n\n\n0.149.0 - 2022-12-09\n--------------------\n\nThis release does some internal refactoring of the HTTP views, hopefully it\ndoesn't affect anyone. It mostly changes the status codes returned in case of\nerrors (e.g. bad JSON, missing queries and so on).\n\nIt also improves the testing, and adds an entirely new test suite for the HTTP\nviews, this means in future we'll be able to keep all the HTTP views in sync\nfeature-wise.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1840](https://github.com/strawberry-graphql/strawberry/pull/1840/)\n\n\n0.148.0 - 2022-12-08\n--------------------\n\nThis release changes the `get_context`, `get_root_value` and `process_result`\nmethods of the Flask async view to be async functions. This allows you to use\nasync code in these methods.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2388](https://github.com/strawberry-graphql/strawberry/pull/2388/)\n\n\n0.147.0 - 2022-12-08\n--------------------\n\nThis release introduces a `encode_json` method on all the HTTP integrations.\nThis method allows to customize the encoding of the JSON response. By default we\nuse `json.dumps` but you can override this method to use a different encoder.\n\nIt also deprecates `json_encoder` and `json_dumps_params` in the Django and\nSanic views, `encode_json` should be used instead.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2272](https://github.com/strawberry-graphql/strawberry/pull/2272/)\n\n\n0.146.0 - 2022-12-05\n--------------------\n\nThis release updates the Sanic integration and includes some breaking changes.\nYou might need to update your code if you are customizing `get_context` or\n`process_result`\n\n## `get_context`\n\n`get_context` now receives the request as the first argument and the response as\nthe second argument.\n\n## `process_result`\n\n`process_result` is now async and receives the request and the GraphQL execution\nresult.\n\nThis change is needed to align all the HTTP integrations and reduce the amount\nof code needed to maintain. It also makes the errors consistent with other\nintegrations.\n\nIt also brings a **new feature** and it allows to customize the HTTP status code\nby using `info.context[\"response\"].status_code = YOUR_CODE`.\n\nIt also removes the upper bound on the Sanic version, so you can use the latest\nversion of Sanic with Strawberry.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2273](https://github.com/strawberry-graphql/strawberry/pull/2273/)\n\n\n0.145.0 - 2022-12-04\n--------------------\n\nThis release introduced improved errors! Now, when you have a syntax error in\nyour code, you'll get a nice error message with a line number and a pointer to\nthe exact location of the error. ✨\n\nThis is a huge improvement over the previous behavior, which was providing a\nstack trace with no clear indication of where the error was. 🙈\n\nYou can enable rich errors by installing Strawberry with the `cli` extra:\n\n```bash\npip install \"strawberry-graphql[cli]\"\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2027](https://github.com/strawberry-graphql/strawberry/pull/2027/)\n\n\n0.144.3 - 2022-12-04\n--------------------\n\nThis release fixes an issue with type duplication of generics.\n\nYou can now use a lazy type with a generic even if\nthe original type was already used with that generic in the schema.\n\nExample:\n\n```python\n@strawberry.type\nclass Query:\n    regular: Edge[User]\n    lazy: Edge[Annotated[\"User\", strawberry.lazy(\".user\")]]\n```\n\nContributed by [Dmitry Semenov](https://github.com/lonelyteapot) via [PR #2381](https://github.com/strawberry-graphql/strawberry/pull/2381/)\n\n\n0.144.2 - 2022-12-02\n--------------------\n\nGeneric types are now allowed in the schema's extra types.\n```python\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass Node(Generic[T]):\n    field: T\n\n\n@strawberry.type\nclass Query:\n    name: str\n\n\nschema = strawberry.Schema(Query, types=[Node[int]])\n```\n\nContributed by [A. Coady](https://github.com/coady) via [PR #2294](https://github.com/strawberry-graphql/strawberry/pull/2294/)\n\n\n0.144.1 - 2022-12-02\n--------------------\n\nThis release fixes a regression that prevented Generic types\nfrom being used multiple types.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2378](https://github.com/strawberry-graphql/strawberry/pull/2378/)\n\n\n0.144.0 - 2022-12-02\n--------------------\n\nAdded extra validation that types used in a schema are unique.\nStrawberry starts to throw an exception `DuplicatedTypeName` when two types defined in a schema have the same name.\n\nContributed by [Bartosz Polnik](https://github.com/bartekbp) via [PR #2356](https://github.com/strawberry-graphql/strawberry/pull/2356/)\n\n\n0.143.0 - 2022-12-01\n--------------------\n\nAdded an error to be used when overriding GraphQLError in custom extensions and added a guide on how to use it.\nExposing GraphQLError from the strawberry namespace brings a better experience and will be useful in the future (when we move to something else).\n\nContributed by [Niten Nashiki](https://github.com/nnashiki) via [PR #2360](https://github.com/strawberry-graphql/strawberry/pull/2360/)\n\n\n0.142.3 - 2022-11-29\n--------------------\n\nThis release updates GraphiQL to 2.2.0 and fixes an issue with the websocket URL\nbeing incorrectly set when navigating to GraphiQL with an URL with a hash.\n\nContributed by [Shen Li](https://github.com/ericls) via [PR #2363](https://github.com/strawberry-graphql/strawberry/pull/2363/)\n\n\n0.142.2 - 2022-11-15\n--------------------\n\nThis release changes the dataloader batch resolution to avoid resolving\nfutures that were canceled, and also from reusing them from the cache.\nTrying to resolve a future that was canceled would raise `asyncio.InvalidStateError`\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2339](https://github.com/strawberry-graphql/strawberry/pull/2339/)\n\n\n0.142.1 - 2022-11-11\n--------------------\n\nThis release fixes a bug where using a custom scalar in a union would result\nin an unclear exception. Instead, when using a custom scalar in a union,\nthe `InvalidUnionType` exception is raised with a clear message that you\ncannot use that type in a union.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2336](https://github.com/strawberry-graphql/strawberry/pull/2336/)\n\n\n0.142.0 - 2022-11-11\n--------------------\n\nThis release adds support for `typing.Self` and `typing_extensions.Self` for types and interfaces.\n\n```python\nfrom typing_extensions import Self\n\n\n@strawberry.type\nclass Node:\n    @strawberry.field\n    def field(self) -> Self:\n        return self\n```\n\nContributed by [A. Coady](https://github.com/coady) via [PR #2295](https://github.com/strawberry-graphql/strawberry/pull/2295/)\n\n\n0.141.0 - 2022-11-10\n--------------------\n\nThis release adds support for an implicit `resolve_reference` method\non Federation type. This method will automatically create a Strawberry\ninstance for a federation type based on the input data received, for\nexample, the following:\n\n```python\n@strawberry.federation.type(keys=[\"id\"])\nclass Something:\n    id: str\n\n\n@strawberry.federation.type(keys=[\"upc\"])\nclass Product:\n    upc: str\n    something: Something\n\n    @staticmethod\n    def resolve_reference(**data):\n        return Product(upc=data[\"upc\"], something=Something(id=data[\"something_id\"]))\n```\n\ndoesn't need the resolve_reference method anymore.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2332](https://github.com/strawberry-graphql/strawberry/pull/2332/)\n\n\n0.140.3 - 2022-11-09\n--------------------\n\n[Internal] Update StrawberryField so that `type_annotation` is always an instance of StrawberryAnnotation.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2319](https://github.com/strawberry-graphql/strawberry/pull/2319/)\n\n\n0.140.2 - 2022-11-08\n--------------------\n\nThis release fixes an issue that prevented using enums that\nwere using strawberry.enum_value, like the following example:\n\n```python\nfrom enum import Enum\nimport strawberry\n\n\n@strawberry.enum\nclass TestEnum(Enum):\n    A = strawberry.enum_value(\"A\")\n    B = \"B\"\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def receive_enum(self, test: TestEnum) -> int:\n        return 0\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2306](https://github.com/strawberry-graphql/strawberry/pull/2306/)\n\n\n0.140.1 - 2022-11-08\n--------------------\n\nThis release adds logging back for parsing and validation errors that was\naccidentally removed in v0.135.0.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2323](https://github.com/strawberry-graphql/strawberry/pull/2323/)\n\n\n0.140.0 - 2022-11-07\n--------------------\n\nThis release allows to disable operation logging when running the debug server.\n\n```\nstrawberry server demo --log-operations False\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2310](https://github.com/strawberry-graphql/strawberry/pull/2310/)\n\n\n0.139.0 - 2022-11-04\n--------------------\n\nThis release changes the type resolution priority to prefer the field annotation over the resolver return type.\n\n```python\ndef my_resolver() -> str:\n    return \"1.33\"\n\n\n@strawberry.type\nclass Query:\n    a: float = strawberry.field(resolver=my_resolver)\n\n\nschema = strawberry.Schema(Query)\n\n# Before:\nstr(\n    schema\n) == \"\"\"\ntype Query {\n  a: String!\n}\n\"\"\"\n\n# After:\nstr(\n    schema\n) == \"\"\"\ntype Query {\n  a: Float!\n}\n\"\"\"\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2312](https://github.com/strawberry-graphql/strawberry/pull/2312/)\n\n\n0.138.2 - 2022-11-04\n--------------------\n\nFix Pydantic integration for Python 3.10.0 (which was missing the `kw_only`\nparameter for `dataclasses.make_dataclass()`).\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2309](https://github.com/strawberry-graphql/strawberry/pull/2309/)\n\n\n0.138.1 - 2022-10-31\n--------------------\n\nThis release changes an internal implementation for FastAPI's\nGraphQL router. This should reduce overhead when using the context,\nand it shouldn't affect your code.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #2278](https://github.com/strawberry-graphql/strawberry/pull/2278/)\n\n\n0.138.0 - 2022-10-31\n--------------------\n\nThis release adds support for generic in arguments, see the following example:\n\n```python\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass Node(Generic[T]):\n    @strawberry.field\n    def data(self, arg: T) -> T:  # `arg` is also generic\n        return arg\n```\n\nContributed by [A. Coady](https://github.com/coady) via [PR #2293](https://github.com/strawberry-graphql/strawberry/pull/2293/)\n\n\n0.137.1 - 2022-10-24\n--------------------\n\nAllowed `CustomScalar | None` syntax for python >= 3.10.\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) via [PR #2279](https://github.com/strawberry-graphql/strawberry/pull/2279/)\n\n\n0.137.0 - 2022-10-21\n--------------------\n\nThis release fixes errors when using Union-of-lazy-types\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2271](https://github.com/strawberry-graphql/strawberry/pull/2271/)\n\n\n0.136.0 - 2022-10-21\n--------------------\n\nThis release refactors the chalice integration in order to keep it consistent with\nthe other integrations.\n\n## Deprecation:\n\nPassing `render_graphiql` is now deprecated, please use `graphiql` instead.\n\n## New features:\n\n- You can now return a custom status by using `info.context[\"response\"].status_code = 418`\n- You can enabled/disable queries via get using `allow_queries_via_get` (defaults to `True`)\n\n## Changes:\n\nTrying to access /graphql via a browser and with `graphiql` set to `False` will return a 404.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2266](https://github.com/strawberry-graphql/strawberry/pull/2266/)\n\n\n0.135.0 - 2022-10-21\n--------------------\n\nThis release adds a new `MaskErrors` extension that can be used to hide error\nmessages from the client to prevent exposing sensitive details. By default it\nmasks all errors raised in any field resolver.\n\n```python\nimport strawberry\nfrom strawberry.extensions import MaskErrors\n\nschema = strawberry.Schema(\n    Query,\n    extensions=[\n        MaskErrors(),\n    ],\n)\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2248](https://github.com/strawberry-graphql/strawberry/pull/2248/)\n\n\n0.134.5 - 2022-10-20\n--------------------\n\nThis release improves the error message that you get when trying\nto use an enum that hasn't been decorated with `@strawberry.enum`\ninside a type's field.\n\nContributed by [Rise Riyo](https://github.com/riseriyo) via [PR #2267](https://github.com/strawberry-graphql/strawberry/pull/2267/)\n\n\n0.134.4 - 2022-10-20\n--------------------\n\nThis release adds support for printing schema directives on an input type object, for example the following schema:\n\n```python\n@strawberry.schema_directive(locations=[Location.INPUT_FIELD_DEFINITION])\nclass RangeInput:\n    min: int\n    max: int\n\n\n@strawberry.input\nclass CreateUserInput:\n    name: str\n    age: int = strawberry.field(directives=[RangeInput(min=1, max=100)])\n```\n\nprints the following:\n\n```graphql\ndirective @rangeInput(min: Int!, max: Int!) on INPUT_FIELD_DEFINITION\n\ninput Input @sensitiveInput(reason: \"GDPR\") {\n  firstName: String!\n  age: Int! @rangeInput(min: 1, max: 100)\n}\n```\n\nContributed by [Etty](https://github.com/estyxx) via [PR #2233](https://github.com/strawberry-graphql/strawberry/pull/2233/)\n\n\n0.134.3 - 2022-10-16\n--------------------\n\nThis release fixes an issue that prevented using strawberry.lazy with relative paths.\n\nThe following should work now:\n\n```python\n@strawberry.type\nclass TypeA:\n    b: Annotated[\"TypeB\", strawberry.lazy(\".type_b\")]\n```\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2244](https://github.com/strawberry-graphql/strawberry/pull/2244/)\n\n\n0.134.2 - 2022-10-16\n--------------------\n\nThis release adds pyupgrade to our CI and includes some minor changes to keep our codebase modern.\n\nContributed by [Liel Fridman](https://github.com/lielfr) via [PR #2255](https://github.com/strawberry-graphql/strawberry/pull/2255/)\n\n\n0.134.1 - 2022-10-14\n--------------------\n\nThis release fixes an issue that prevented using lazy types inside\ngeneric types.\n\nThe following is now allowed:\n\n```python\nT = TypeVar(\"T\")\n\nTypeAType = Annotated[\"TypeA\", strawberry.lazy(\"tests.schema.test_lazy.type_a\")]\n\n\n@strawberry.type\nclass Edge(Generic[T]):\n    node: T\n\n\n@strawberry.type\nclass Query:\n    users: Edge[TypeAType]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2254](https://github.com/strawberry-graphql/strawberry/pull/2254/)\n\n\n0.134.0 - 2022-10-14\n--------------------\n\nThese release allow you to define a different `url` in the `GraphQLTestClient`, the default is \"/graphql/\".\n\nHere's an example with Starlette client:\n```python\nimport pytest\n\nfrom starlette.testclient import TestClient\nfrom strawberry.asgi.test import GraphQLTestClient\n\n\n@pytest.fixture\ndef graphql_client() -> GraphQLTestClient:\n    return GraphQLTestClient(\n        TestClient(app, base_url=\"http://localhost:8000\"), url=\"/api/\"\n    )\n```\n\nContributed by [Etty](https://github.com/estyxx) via [PR #2238](https://github.com/strawberry-graphql/strawberry/pull/2238/)\n\n\n0.133.7 - 2022-10-14\n--------------------\n\nThis release fixes a type issue when passing `scalar_overrides` to `strawberry.Schema`\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2251](https://github.com/strawberry-graphql/strawberry/pull/2251/)\n\n\n0.133.6 - 2022-10-13\n--------------------\n\nFix support for arguments where `arg.type=LazyType[\"EnumType\"]`\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2245](https://github.com/strawberry-graphql/strawberry/pull/2245/)\n\n\n0.133.5 - 2022-10-03\n--------------------\n\nUpdated `unset` import, from `strawberry.arguments` to `strawberry.unset` in codebase.\n\nThis will prevent strawberry from triggering its own warning on deprecated imports.\n\nContributed by [dependabot](https://github.com/dependabot) via [PR #2219](https://github.com/strawberry-graphql/strawberry/pull/2219/)\n\n\n0.133.4 - 2022-10-03\n--------------------\n\nThis release fixes the type of strawberry.federation.field,\nthis will prevent errors from mypy and pyright when doing the following:\n\n```python\n@strawberry.federation.type(keys=[\"id\"])\nclass Location:\n    id: strawberry.ID\n\n    # the following field was reporting an error in mypy and pylance\n    celestial_body: CelestialBody = strawberry.federation.field(\n        resolver=resolve_celestial_body\n    )\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2222](https://github.com/strawberry-graphql/strawberry/pull/2222/)\n\n\n0.133.3 - 2022-10-03\n--------------------\n\nThis release allows to create a federation schema without having to pass a\n`Query` type. This is useful when your schema only extends some types without\nadding any additional root field.\n\n```python\n@strawberry.federation.type(keys=[\"id\"])\nclass Location:\n    id: strawberry.ID\n    name: str = strawberry.federation.field(override=\"start\")\n\n\nschema = strawberry.federation.Schema(types=[Location])\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2220](https://github.com/strawberry-graphql/strawberry/pull/2220/)\n\n\n0.133.2 - 2022-09-30\n--------------------\n\nThis release fixes an issue with `strawberry.federation.field` that\nprevented instantiating field when passing a resolver function.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2218](https://github.com/strawberry-graphql/strawberry/pull/2218/)\n\n\n0.133.1 - 2022-09-28\n--------------------\n\nThis release fixes an issue that prevented using `strawberry.field` with\n`UNSET` as the default value.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2128](https://github.com/strawberry-graphql/strawberry/pull/2128/)\n\n\n0.133.0 - 2022-09-27\n--------------------\n\nReduce the number of required dependencies, by marking Pygments and python-multipart as optional. These dependencies are still necessary for some functionality, and so users of that functionality need to ensure they're installed, either explicitly or via an extra:\n\n- Pygments is still necessary when using Strawberry in debug mode, and is included in the `strawberry[debug-server]` extra.\n- python-multipart is still necessary when using `strawberry.file_uploads.Upload` with FastAPI or Starlette, and is included in the `strawberry[fastapi]` and `strawberry[asgi]` extras, respectively.\n\nThere is now also the `strawberry[cli]` extra to support commands like `strawberry codegen` and `strawberry export-schema`.\n\nContributed by [Huon Wilson](https://github.com/huonw) via [PR #2205](https://github.com/strawberry-graphql/strawberry/pull/2205/)\n\n\n0.132.1 - 2022-09-23\n--------------------\n\nImprove resolving performance by avoiding extra calls for basic fields.\n\nThis change improves performance of resolving a query by skipping `Info`\ncreation and permission checking for fields that don't have a resolver\nor permission classes. In local benchmarks it improves performance of large\nresults by ~14%.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2194](https://github.com/strawberry-graphql/strawberry/pull/2194/)\n\n\n0.132.0 - 2022-09-23\n--------------------\n\nSupport storing metadata in strawberry fields.\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2190](https://github.com/strawberry-graphql/strawberry/pull/2190/)\n\n\n0.131.5 - 2022-09-22\n--------------------\n\nFixes false positives with the mypy plugin.\nHappened when `to_pydantic` was called on a type that was converted\npydantic with all_fields=True.\n\nAlso fixes the type signature when `to_pydantic` is defined by the user.\n\n```python\nfrom pydantic import BaseModel\nfrom typing import Optional\nimport strawberry\n\n\nclass MyModel(BaseModel):\n    email: str\n    password: Optional[str]\n\n\n@strawberry.experimental.pydantic.input(model=MyModel, all_fields=True)\nclass MyModelStrawberry: ...\n\n\nMyModelStrawberry(email=\"\").to_pydantic()\n# previously would complain wrongly about missing email and password\n```\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #2017](https://github.com/strawberry-graphql/strawberry/pull/2017/)\n\n\n0.131.4 - 2022-09-22\n--------------------\n\nThis release updates the mypy plugin and the typing for Pyright to treat all\nstrawberry fields as keyword-only arguments. This reflects a previous change to\nthe Strawberry API.\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2191](https://github.com/strawberry-graphql/strawberry/pull/2191/)\n\n\n0.131.3 - 2022-09-22\n--------------------\n\nBug fix: Do not force kw-only=False in fields specified with strawberry.field()\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2189](https://github.com/strawberry-graphql/strawberry/pull/2189/)\n\n\n0.131.2 - 2022-09-22\n--------------------\n\nThis release fixes a small issue that might happen when\nuploading files and not passing the operations object.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2192](https://github.com/strawberry-graphql/strawberry/pull/2192/)\n\n\n0.131.1 - 2022-09-16\n--------------------\n\nFix warnings during unit tests for Sanic's upload.\n\nOtherwise running unit tests results in a bunch of warning like this:\n\n```\nDeprecationWarning: Use 'content=<...>' to upload raw bytes/text content.\n```\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2178](https://github.com/strawberry-graphql/strawberry/pull/2178/)\n\n\n0.131.0 - 2022-09-15\n--------------------\n\nThis release improves the dataloader class with new features:\n\n- Explicitly cache invalidation, prevents old data from being fetched after a mutation\n- Importing data into the cache, prevents unnecessary load calls if the data has already been fetched by other means.\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #2149](https://github.com/strawberry-graphql/strawberry/pull/2149/)\n\n\n0.130.4 - 2022-09-14\n--------------------\n\nThis release adds improved support for Pyright and Pylance, VSCode default\nlanguage server for Python.\n\nUsing `strawberry.type`, `strawberry.field`, `strawberry.input` and\n`strawberry.enum` will now be correctly recognized by Pyright and Pylance and\nwon't show errors.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2172](https://github.com/strawberry-graphql/strawberry/pull/2172/)\n\n\n0.130.3 - 2022-09-12\n--------------------\n\nFix invalid deprecation warning issued on arguments annotated\nby a subclassed `strawberry.types.Info`.\n\nThanks to @ThirVondukr for the bug report!\n\nExample:\n\n```python\nclass MyInfo(Info):\n    pass\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def is_tasty(self, info: MyInfo) -> bool:\n        \"\"\"Subclassed ``info`` argument no longer raises deprecation warning.\"\"\"\n```\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #2137](https://github.com/strawberry-graphql/strawberry/pull/2137/)\n\n\n0.130.2 - 2022-09-12\n--------------------\n\nThis release fixes the conversion of generic aliases when\nusing pydantic.\n\nContributed by [Silas Sewell](https://github.com/silas) via [PR #2152](https://github.com/strawberry-graphql/strawberry/pull/2152/)\n\n\n0.130.1 - 2022-09-12\n--------------------\n\nFix version parsing issue related to dev builds of Mypy in `strawberry.ext.mypy_plugin`\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #2157](https://github.com/strawberry-graphql/strawberry/pull/2157/)\n\n\n0.130.0 - 2022-09-12\n--------------------\n\nConvert Tuple and Sequence types to GraphQL list types.\n\nExample:\n\n```python\nfrom collections.abc import Sequence\nfrom typing import Tuple\n\n\n@strawberry.type\nclass User:\n    pets: Sequence[Pet]\n    favourite_ice_cream_flavours: Tuple[IceCreamFlavour]\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #2164](https://github.com/strawberry-graphql/strawberry/pull/2164/)\n\n\n0.129.0 - 2022-09-11\n--------------------\n\nThis release adds `strawberry.lazy` which allows you to define the type of the\nfield and its path. This is useful when you want to define a field with a type\nthat has a circular dependency.\n\nFor example, let's say we have a `User` type that has a list of `Post` and a\n`Post` type that has a `User`:\n\n```python\n# posts.py\nfrom typing import TYPE_CHECKING, Annotated\n\nimport strawberry\n\nif TYPE_CHECKING:\n    from .users import User\n\n\n@strawberry.type\nclass Post:\n    title: str\n    author: Annotated[\"User\", strawberry.lazy(\".users\")]\n```\n\n```python\n# users.py\nfrom typing import TYPE_CHECKING, Annotated, List\n\nimport strawberry\n\nif TYPE_CHECKING:\n    from .posts import Post\n\n\n@strawberry.type\nclass User:\n    name: str\n    posts: List[Annotated[\"Post\", strawberry.lazy(\".posts\")]]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2158](https://github.com/strawberry-graphql/strawberry/pull/2158/)\n\n\n0.128.0 - 2022-09-05\n--------------------\n\nThis release changes how dataclasses are created to make use of the new\n`kw_only` argument in Python 3.10 so that fields without a default value can now\nfollow a field with a default value. This feature is also backported to all other\nsupported Python versions.\n\nMore info: https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass\n\nFor example:\n\n```python\n# This no longer raises a TypeError\n\n\n@strawberry.type\nclass MyType:\n    a: str = \"Hi\"\n    b: int\n```\n\n⚠️ This is a breaking change! Whenever instantiating a Strawberry type make sure\nthat you only pass values are keyword arguments:\n\n```python\n# Before:\n\nMyType(\"foo\", 3)\n\n# After:\n\nMyType(a=\"foo\", b=3)\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) via [PR #1187](https://github.com/strawberry-graphql/strawberry/pull/1187/)\n\n\n0.127.4 - 2022-08-31\n--------------------\n\nThis release fixes a bug in the subscription clean up when subscribing using the\ngraphql-transport-ws protocol, which could occasionally cause a 'finally'\nstatement within the task to not get run, leading to leaked resources.\n\nContributed by [rjwills28](https://github.com/rjwills28) via [PR #2141](https://github.com/strawberry-graphql/strawberry/pull/2141/)\n\n\n0.127.3 - 2022-08-30\n--------------------\n\nThis release fixes a couple of small styling issues with\nthe GraphiQL explorer\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2143](https://github.com/strawberry-graphql/strawberry/pull/2143/)\n\n\n0.127.2 - 2022-08-30\n--------------------\n\nThis release adds support for passing schema directives to\n`Schema(..., types=[])`. This can be useful if using a built-inschema directive\nthat's not supported by a gateway.\n\nFor example the following:\n\n```python\nimport strawberry\nfrom strawberry.scalars import JSON\nfrom strawberry.schema_directive import Location\n\n\n@strawberry.type\nclass Query:\n    example: JSON\n\n\n@strawberry.schema_directive(locations=[Location.SCALAR], name=\"specifiedBy\")\nclass SpecifiedBy:\n    name: str\n\n\nschema = strawberry.Schema(query=Query, types=[SpecifiedBy])\n```\n\nwill print the following SDL:\n\n```graphql\ndirective @specifiedBy(name: String!) on SCALAR\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf).\n\"\"\"\nscalar JSON\n  @specifiedBy(\n    url: \"https://ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf\"\n  )\n\ntype Query {\n  example: JSON!\n}\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2140](https://github.com/strawberry-graphql/strawberry/pull/2140/)\n\n\n0.127.1 - 2022-08-30\n--------------------\n\nThis release fixes an issue with the updated GraphiQL\ninterface.\n\nContributed by [Doctor](https://github.com/ThirVondukr) via [PR #2138](https://github.com/strawberry-graphql/strawberry/pull/2138/)\n\n\n0.127.0 - 2022-08-29\n--------------------\n\nThis release updates the built-in GraphiQL version to version 2.0,\nwhich means you can now enjoy all the new features that come with the latest version!\n\nContributed by [Matt Exact](https://github.com/MattExact) via [PR #1889](https://github.com/strawberry-graphql/strawberry/pull/1889/)\n\n\n0.126.2 - 2022-08-23\n--------------------\n\nThis release restricts the `backports.cached_property` dependency to only be\ninstalled when Python < 3.8. Since version 3.8 `cached_property` is included\nin the builtin `functools`. The code is updated to use the builtin version\nwhen Python >= 3.8.\n\nContributed by [ljnsn](https://github.com/ljnsn) via [PR #2114](https://github.com/strawberry-graphql/strawberry/pull/2114/)\n\n\n0.126.1 - 2022-08-22\n--------------------\n\nKeep extra discovered types sorted so that each schema printing is\nalways the same.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2115](https://github.com/strawberry-graphql/strawberry/pull/2115/)\n\n\n0.126.0 - 2022-08-18\n--------------------\n\nThis release adds support for adding descriptions to enum values.\n\n### Example\n\n\n```python\n@strawberry.enum\nclass IceCreamFlavour(Enum):\n    VANILLA = strawberry.enum_value(\"vanilla\")\n    STRAWBERRY = strawberry.enum_value(\n        \"strawberry\",\n        description=\"Our favourite\",\n    )\n    CHOCOLATE = \"chocolate\"\n\n\n@strawberry.type\nclass Query:\n    favorite_ice_cream: IceCreamFlavour = IceCreamFlavour.STRAWBERRY\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nThis produces the following schema\n\n```graphql\nenum IceCreamFlavour {\n  VANILLA\n\n  \"\"\"Our favourite.\"\"\"\n  STRAWBERRY\n  CHOCOLATE\n}\n\ntype Query {\n  favoriteIceCream: IceCreamFlavour!\n}\n```\n\nContributed by [Felipe Gonzalez](https://github.com/gonzalezzfelipe) via [PR #2106](https://github.com/strawberry-graphql/strawberry/pull/2106/)\n\n\n0.125.1 - 2022-08-16\n--------------------\n\nThis release hides `resolvable: True` in @keys directives\nwhen using Apollo Federation 1, to preserve compatibility\nwith older Gateways.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2099](https://github.com/strawberry-graphql/strawberry/pull/2099/)\n\n\n0.125.0 - 2022-08-12\n--------------------\n\nThis release adds an integration with Django Channels. The integration will\nallow you to use GraphQL subscriptions via Django Channels.\n\nContributed by [Dan Sloan](https://github.com/LucidDan) via [PR #1407](https://github.com/strawberry-graphql/strawberry/pull/1407/)\n\n\n0.124.0 - 2022-08-08\n--------------------\n\nThis release adds full support for Apollo Federation 2.0. To opt-in you need to\npass `enable_federation_2=True` to `strawberry.federation.Schema`, like in the\nfollowing example:\n\n```python\n@strawberry.federation.type(keys=[\"id\"])\nclass User:\n    id: strawberry.ID\n\n\n@strawberry.type\nclass Query:\n    user: User\n\n\nschema = strawberry.federation.Schema(query=Query, enable_federation_2=True)\n```\n\nThis release also improves type checker support for the federation.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2047](https://github.com/strawberry-graphql/strawberry/pull/2047/)\n\n\n0.123.3 - 2022-08-02\n--------------------\n\nThis release fixes a regression introduced in version 0.118.2 which was\npreventing using circular dependencies in Strawberry django and Strawberry\ndjango plus.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #2062](https://github.com/strawberry-graphql/strawberry/pull/2062/)\n\n\n0.123.2 - 2022-08-01\n--------------------\n\nThis release adds support for priting custom enums used only on\nschema directives, for example the following schema:\n\n```python\n@strawberry.enum\nclass Reason(str, Enum):\n    EXAMPLE = \"example\"\n\n\n@strawberry.schema_directive(locations=[Location.FIELD_DEFINITION])\nclass Sensitive:\n    reason: Reason\n\n\n@strawberry.type\nclass Query:\n    first_name: str = strawberry.field(directives=[Sensitive(reason=Reason.EXAMPLE)])\n```\n\nprints the following:\n\n```graphql\ndirective @sensitive(reason: Reason!) on FIELD_DEFINITION\n\ntype Query {\n    firstName: String! @sensitive(reason: EXAMPLE)\n}\n\nenum Reason {\n    EXAMPLE\n}\n```\n\nwhile previously it would omit the definition of the enum.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2059](https://github.com/strawberry-graphql/strawberry/pull/2059/)\n\n\n0.123.1 - 2022-08-01\n--------------------\n\nThis release adds support for priting custom scalar used only on\nschema directives, for example the following schema:\n\n```python\nSensitiveConfiguration = strawberry.scalar(str, name=\"SensitiveConfiguration\")\n\n\n@strawberry.schema_directive(locations=[Location.FIELD_DEFINITION])\nclass Sensitive:\n    config: SensitiveConfiguration\n\n\n@strawberry.type\nclass Query:\n    first_name: str = strawberry.field(directives=[Sensitive(config=\"Some config\")])\n```\n\nprints the following:\n\n```graphql\ndirective @sensitive(config: SensitiveConfiguration!) on FIELD_DEFINITION\n\ntype Query {\n    firstName: String! @sensitive(config: \"Some config\")\n}\n\nscalar SensitiveConfiguration\n```\n\nwhile previously it would omit the definition of the scalar.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2058](https://github.com/strawberry-graphql/strawberry/pull/2058/)\n\n\n0.123.0 - 2022-08-01\n--------------------\n\nThis PR adds support for adding schema directives to the schema of\nyour GraphQL API. For printing the following schema:\n\n```python\n@strawberry.schema_directive(locations=[Location.SCHEMA])\nclass Tag:\n    name: str\n\n\n@strawberry.type\nclass Query:\n    first_name: str = strawberry.field(directives=[Tag(name=\"team-1\")])\n\n\nschema = strawberry.Schema(query=Query, schema_directives=[Tag(name=\"team-1\")])\n```\n\nwill print the following:\n\n```graphql\ndirective @tag(name: String!) on SCHEMA\n\nschema @tag(name: \"team-1\") {\n    query: Query\n}\n\ntype Query {\n    firstName: String!\n}\n\"\"\"\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2054](https://github.com/strawberry-graphql/strawberry/pull/2054/)\n\n\n0.122.1 - 2022-07-31\n--------------------\n\nThis release fixes that the AIOHTTP integration ignored the `operationName` of query\noperations. This behaviour is a regression introduced in version 0.107.0.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) via [PR #2055](https://github.com/strawberry-graphql/strawberry/pull/2055/)\n\n\n0.122.0 - 2022-07-29\n--------------------\n\nThis release adds support for printing default values for scalars like JSON.\n\nFor example the following:\n\n```python\nimport strawberry\nfrom strawberry.scalars import JSON\n\n\n@strawberry.input\nclass MyInput:\n    j: JSON = strawberry.field(default_factory=dict)\n    j2: JSON = strawberry.field(default_factory=lambda: {\"hello\": \"world\"})\n```\n\nwill print the following schema:\n\n```graphql\ninput MyInput {\n    j: JSON! = {}\n    j2: JSON! = {hello: \"world\"}\n}\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2048](https://github.com/strawberry-graphql/strawberry/pull/2048/)\n\n\n0.121.1 - 2022-07-27\n--------------------\n\nThis release adds a backward compatibility layer with libraries\nthat specify a custom `get_result`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2038](https://github.com/strawberry-graphql/strawberry/pull/2038/)\n\n\n0.121.0 - 2022-07-23\n--------------------\n\nThis release adds support for overriding the default resolver for fields.\n\nCurrently the default resolver is `getattr`, but now you can change it to any\nfunction you like, for example you can allow returning dictionaries:\n\n```python\n@strawberry.type\nclass User:\n    name: str\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def user(self) -> User:\n        return {\"name\": \"Patrick\"}  # type: ignore\n\n\nschema = strawberry.Schema(\n    query=Query,\n    config=StrawberryConfig(default_resolver=getitem),\n)\n\nquery = \"{ user { name } }\"\n\nresult = schema.execute_sync(query)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2037](https://github.com/strawberry-graphql/strawberry/pull/2037/)\n\n\n0.120.0 - 2022-07-23\n--------------------\n\nThis release add a new `DatadogTracingExtension` that can be used to instrument\nyour application with Datadog.\n\n```python\nimport strawberry\n\nfrom strawberry.extensions.tracing import DatadogTracingExtension\n\nschema = strawberry.Schema(\n    Query,\n    extensions=[\n        DatadogTracingExtension,\n    ],\n)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #2001](https://github.com/strawberry-graphql/strawberry/pull/2001/)\n\n\n0.119.2 - 2022-07-23\n--------------------\n\nFixed edge case where `Union` types raised an `UnallowedReturnTypeForUnion`\nerror when returning the correct type from the resolver. This also improves\nperformance of StrawberryUnion's `_resolve_union_type` from `O(n)` to `O(1)` in\nthe majority of cases where `n` is the number of types in the schema.\n\nFor\n[example the below](https://play.strawberry.rocks/?gist=f7d88898d127e65b12140fdd763f9ef2))\nwould previously raise the error when querying `two` as `StrawberryUnion` would\nincorrectly determine that the resolver returns `Container[TypeOne]`.\n\n```python\nimport strawberry\nfrom typing import TypeVar, Generic, Union, List, Type\n\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass Container(Generic[T]):\n    items: List[T]\n\n\n@strawberry.type\nclass TypeOne:\n    attr: str\n\n\n@strawberry.type\nclass TypeTwo:\n    attr: str\n\n\ndef resolver_one():\n    return Container(items=[TypeOne(\"one\")])\n\n\ndef resolver_two():\n    return Container(items=[TypeTwo(\"two\")])\n\n\n@strawberry.type\nclass Query:\n    one: Union[Container[TypeOne], TypeOne] = strawberry.field(resolver_one)\n    two: Union[Container[TypeTwo], TypeTwo] = strawberry.field(resolver_two)\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nContributed by [Tim OSullivan](https://github.com/invokermain) via [PR #2029](https://github.com/strawberry-graphql/strawberry/pull/2029/)\n\n\n0.119.1 - 2022-07-18\n--------------------\n\nAn explanatory custom exception is raised when union of GraphQL input types is attempted.\n\nContributed by [Dhanshree Arora](https://github.com/DhanshreeA) via [PR #2019](https://github.com/strawberry-graphql/strawberry/pull/2019/)\n\n\n0.119.0 - 2022-07-14\n--------------------\n\nThis release changes when we add the custom directives extension, previously\nthe extension was always enabled, now it is only enabled if you pass custom\ndirectives to `strawberry.Schema`.\n\nContributed by [bomtall](https://github.com/bomtall) via [PR #2020](https://github.com/strawberry-graphql/strawberry/pull/2020/)\n\n\n0.118.2 - 2022-07-14\n--------------------\n\nThis release adds an initial fix to make `strawberry.auto` work when using\n`from __future__ import annotations`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1994](https://github.com/strawberry-graphql/strawberry/pull/1994/)\n\n\n0.118.1 - 2022-07-14\n--------------------\n\nFixes issue where users without pydantic were not able to use the mypy plugin.\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #2016](https://github.com/strawberry-graphql/strawberry/pull/2016/)\n\n\n0.118.0 - 2022-07-13\n--------------------\n\nYou can now pass keyword arguments to `to_pydantic`\n```python\nfrom pydantic import BaseModel\nimport strawberry\n\n\nclass MyModel(BaseModel):\n    email: str\n    password: str\n\n\n@strawberry.experimental.pydantic.input(model=MyModel)\nclass MyModelStrawberry:\n    email: strawberry.auto\n    # no password field here\n\n\nMyModelStrawberry(email=\"\").to_pydantic(password=\"hunter\")\n```\n\nAlso if you forget to pass password, mypy will complain\n\n```python\nMyModelStrawberry(email=\"\").to_pydantic()\n# error: Missing named argument \"password\" for \"to_pydantic\" of \"MyModelStrawberry\"\n```\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #2012](https://github.com/strawberry-graphql/strawberry/pull/2012/)\n\n\n0.117.1 - 2022-07-07\n--------------------\n\nAllow to add alias to fields generated from pydantic with `strawberry.field(name=\"ageAlias\")`.\n\n```\nclass User(pydantic.BaseModel):\n    age: int\n\n@strawberry.experimental.pydantic.type(User)\nclass UserType:\n    age: strawberry.auto = strawberry.field(name=\"ageAlias\")\n```\n\nContributed by [Alex](https://github.com/benzolium) via [PR #1986](https://github.com/strawberry-graphql/strawberry/pull/1986/)\n\n\n0.117.0 - 2022-07-06\n--------------------\n\nThis release fixes an issue that required installing opentelemetry when\ntrying to use the ApolloTracing extension\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1977](https://github.com/strawberry-graphql/strawberry/pull/1977/)\n\n\n0.116.4 - 2022-07-04\n--------------------\n\nFix regression caused by the new resolver argument handling mechanism\nintroduced in v0.115.0. This release restores the ability to use unhashable\ndefault values in resolvers such as dict and list. See example below:\n\n```python\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def field(self, x: List[str] = [\"foo\"], y: JSON = {\"foo\": 42}) -> str:  # noqa: B006\n        return f\"{x} {y}\"\n```\n\nThanks to @coady for the regression report!\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1985](https://github.com/strawberry-graphql/strawberry/pull/1985/)\n\n\n0.116.3 - 2022-07-04\n--------------------\n\nThis release fixes the following error when trying to use Strawberry\nwith Apollo Federation:\n\n```\nError: A valid schema couldn't be composed. The following composition errors were found:\n\t[burro-api] Unknown type _FieldSet\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1988](https://github.com/strawberry-graphql/strawberry/pull/1988/)\n\n\n0.116.2 - 2022-07-03\n--------------------\n\nReimplement `StrawberryResolver.annotations` property after removal in v0.115.\n\nLibrary authors who previously relied on the public `annotations` property\ncan continue to do so after this fix.\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1990](https://github.com/strawberry-graphql/strawberry/pull/1990/)\n\n\n0.116.1 - 2022-07-03\n--------------------\n\nThis release fixes a breaking internal error in mypy plugin for the following case.\n- using positional arguments to pass a resolver for `strawberry.field()` or `strawberry.mutation()`\n\n```python\nfailed: str = strawberry.field(resolver)\nsuccessed: str = strawberry.field(resolver=resolver)\n```\n\nnow mypy returns an error with `\"field()\" or \"mutation()\" only takes keyword arguments` message\nrather than an internal error.\n\nContributed by [cake-monotone](https://github.com/cake-monotone) via [PR #1987](https://github.com/strawberry-graphql/strawberry/pull/1987/)\n\n\n0.116.0 - 2022-07-03\n--------------------\n\nThis release adds a link from generated GraphQLCore types to the Strawberry type\nthat generated them.\n\nFrom a GraphQLCore type you can now access the Strawberry type by doing:\n\n```python\nstrawberry_type: TypeDefinition = graphql_core_type.extensions[\n    GraphQLCoreConverter.DEFINITION_BACKREF\n]\n```\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #1766](https://github.com/strawberry-graphql/strawberry/pull/1766/)\n\n\n0.115.0 - 2022-07-01\n--------------------\n\nThis release changes how we declare the `info` argument in resolvers and the\n`value` argument in directives.\n\nPreviously we'd use the name of the argument to determine its value. Now we use\nthe type annotation of the argument to determine its value.\n\nHere's an example of how the old syntax works:\n\n```python\ndef some_resolver(info) -> str:\n    return info.context.get(\"some_key\", \"default\")\n\n\n@strawberry.type\nclass Example:\n    a_field: str = strawberry.resolver(some_resolver)\n```\n\nand here's an example of how the new syntax works:\n\n```python\nfrom strawberry.types import Info\n\n\ndef some_resolver(info: strawberry.Info) -> str:\n    return info.context.get(\"some_key\", \"default\")\n\n\n@strawberry.type\nclass Example:\n    a_field: str = strawberry.resolver(some_resolver)\n```\n\nThis means that you can now use a different name for the `info` argument in your\nresolver and the `value` argument in your directive.\n\nHere's an example that uses a custom name for both the value and the info\nparameter in directives:\n\n```python\nfrom strawberry.types import Info\nfrom strawberry.directive import DirectiveLocation, DirectiveValue\n\n\n@strawberry.type\nclass Cake:\n    frosting: Optional[str] = None\n    flavor: str = \"Chocolate\"\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def cake(self) -> Cake:\n        return Cake()\n\n\n@strawberry.directive(\n    locations=[DirectiveLocation.FIELD],\n    description=\"Add frosting with ``value`` to a cake.\",\n)\ndef add_frosting(value: str, v: DirectiveValue[Cake], my_info: strawberry.Info):\n    # Arbitrary argument name when using `DirectiveValue` is supported!\n    assert isinstance(v, Cake)\n    if (\n        value in my_info.context[\"allergies\"]\n    ):  # Info can now be accessed from directives!\n        raise AllergyError(\"You are allergic to this frosting!\")\n    else:\n        v.frosting = value  # Value can now be used as a GraphQL argument name!\n    return v\n```\n\n**Note:** the old way of passing arguments by name is deprecated and will be\nremoved in future releases of Strawberry.\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1713](https://github.com/strawberry-graphql/strawberry/pull/1713/)\n\n\n0.114.7 - 2022-07-01\n--------------------\n\nAllow use of implicit `Any` in `strawberry.Private` annotated Generic types.\n\nFor example the following is now supported:\n\n```python\nfrom __future__ import annotations\n\nfrom typing import Generic, Sequence, TypeVar\n\nimport strawberry\n\n\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass Foo(Generic[T]):\n    private_field: strawberry.Private[Sequence]  # instead of Sequence[Any]\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def foo(self) -> Foo[str]:\n        return Foo(private_field=[1, 2, 3])\n```\n\nSee Issue [#1938](https://github.com/strawberry-graphql/strawberry/issues/1938)\nfor details.\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1939](https://github.com/strawberry-graphql/strawberry/pull/1939/)\n\n\n0.114.6 - 2022-06-30\n--------------------\n\nThe federation decorator now allows for a list of additional arbitrary schema\ndirectives extending the key/shareable directives used for federation.\n\nExample Python:\n\n```python\nimport strawberry\nfrom strawberry.schema.config import StrawberryConfig\nfrom strawberry.schema_directive import Location\n\n\n@strawberry.schema_directive(locations=[Location.OBJECT])\nclass CacheControl:\n    max_age: int\n\n\n@strawberry.federation.type(\n    keys=[\"id\"], shareable=True, extend=True, directives=[CacheControl(max_age=42)]\n)\nclass FederatedType:\n    id: strawberry.ID\n\n\nschema = strawberry.Schema(query=Query, config=StrawberryConfig(auto_camel_case=False))\n```\n\nResulting GQL Schema:\n\n```graphql\ndirective @CacheControl(max_age: Int!) on OBJECT\ndirective @key(fields: _FieldSet!, resolvable: Boolean) on OBJECT | INTERFACE\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\nextend type FederatedType\n  @key(fields: \"id\")\n  @shareable\n  @CacheControl(max_age: 42) {\n  id: ID!\n}\n\ntype Query {\n  federatedType: FederatedType!\n}\n```\n\nContributed by [Jeffrey DeFond](https://github.com/defond0) via [PR #1945](https://github.com/strawberry-graphql/strawberry/pull/1945/)\n\n\n0.114.5 - 2022-06-23\n--------------------\n\nThis release adds support in Mypy for using strawberry.mutation\nwhile passing a resolver, the following now doesn't make Mypy return\nan error:\n\n```python\nimport strawberry\n\n\ndef set_name(self, name: str) -> None:\n    self.name = name\n\n\n@strawberry.type\nclass Mutation:\n    set_name: None = strawberry.mutation(resolver=set_name)\n```\n\nContributed by [Etty](https://github.com/estyxx) via [PR #1966](https://github.com/strawberry-graphql/strawberry/pull/1966/)\n\n\n0.114.4 - 2022-06-23\n--------------------\n\nThis release fixes the type annotation of `Response.errors` used in the `GraphQLTestClient` to be a `List` of `GraphQLFormattedError`.\n\nContributed by [Etty](https://github.com/estyxx) via [PR #1961](https://github.com/strawberry-graphql/strawberry/pull/1961/)\n\n\n0.114.3 - 2022-06-21\n--------------------\n\nThis release fixes the type annotation of `Response.errors` used in the `GraphQLTestClient` to be a `List` of `GraphQLError`.\n\nContributed by [Etty](https://github.com/estyxx) via [PR #1959](https://github.com/strawberry-graphql/strawberry/pull/1959/)\n\n\n0.114.2 - 2022-06-15\n--------------------\n\nThis release fixes an issue in the `GraphQLTestClient` when using both variables and files together.\n\nContributed by [Etty](https://github.com/estyxx) via [PR #1576](https://github.com/strawberry-graphql/strawberry/pull/1576/)\n\n\n0.114.1 - 2022-06-09\n--------------------\n\nFix crash in Django's `HttpResponse.__repr__` by handling `status_code=None` in `TemporalHttpResponse.__repr__`.\n\nContributed by [Daniel Hahler](https://github.com/blueyed) via [PR #1950](https://github.com/strawberry-graphql/strawberry/pull/1950/)\n\n\n0.114.0 - 2022-05-27\n--------------------\n\nImprove schema directives typing and printing after latest refactor.\n\n- Support for printing schema directives for non-scalars (e.g. types) and null values.\n- Also print the schema directive itself and any extra types defined in it\n- Fix typing for apis expecting directives (e.g. `strawberry.field`, `strawberry.type`, etc)\n  to expect an object instead of a `StrawberrySchemaDirective`, which is now an internal type.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #1723](https://github.com/strawberry-graphql/strawberry/pull/1723/)\n\n\n0.113.0 - 2022-05-19\n--------------------\n\nThis release adds support for Starlette 0.18 to 0.20\n\nIt also removes upper bound dependencies limit for starlette,\nallowing you to install the latest version without having to\nwait for a new release of Strawberry\n\nContributed by [Timothy Pansino](https://github.com/TimPansino) via [PR #1594](https://github.com/strawberry-graphql/strawberry/pull/1594/)\n\n\n0.112.0 - 2022-05-15\n--------------------\n\nThis release adds a new flask view to allow for aysnc dispatching of requests.\n\nThis is especially useful when using dataloaders with flask.\n\n```python\nfrom strawberry.flask.views import AsyncGraphQLView\n\n...\n\napp.add_url_rule(\n    \"/graphql\",\n    view_func=AsyncGraphQLView.as_view(\"graphql_view\", schema=schema, **kwargs),\n)\n```\n\nContributed by [Scott Weitzner](https://github.com/scottweitzner) via [PR #1907](https://github.com/strawberry-graphql/strawberry/pull/1907/)\n\n\n0.111.2 - 2022-05-09\n--------------------\n\nThis release fixes resolvers using functions with generic type variables raising a `MissingTypesForGenericError` error.\n\nFor example a resolver factory like the below can now be used:\n\n```python\nimport strawberry\nfrom typing import Type, TypeVar\n\nT = TypeVar(\"T\")  # or TypeVar(\"T\", bound=StrawberryType) etc\n\n\ndef resolver_factory(strawberry_type: Type[T]):\n    def resolver(id: strawberry.ID) -> T:\n        # some actual logic here\n        return strawberry_type(...)\n\n    return resolver\n```\n\nContributed by [Tim OSullivan](https://github.com/invokermain) via [PR #1891](https://github.com/strawberry-graphql/strawberry/pull/1891/)\n\n\n0.111.1 - 2022-05-03\n--------------------\n\nRename internal variable `custom_getter` in FastAPI router implementation.\n\nContributed by [Gary Donovan](https://github.com/garyd203) via [PR #1875](https://github.com/strawberry-graphql/strawberry/pull/1875/)\n\n\n0.111.0 - 2022-05-02\n--------------------\n\nThis release adds support for Apollo Federation 2 directives:\n- @shareable\n- @tag\n- @override\n- @inaccessible\n\nThis release does **not** add support for the @link directive.\n\nThis release updates the @key directive to align with Apollo Federation 2 updates.\n\nSee the below code snippet and/or the newly-added test cases for examples on how to use the new directives.\nThe below snippet demonstrates the @override directive.\n```python\nimport strawberry\nfrom typing import List\n\n\n@strawberry.interface\nclass SomeInterface:\n    id: strawberry.ID\n\n\n@strawberry.federation.type(keys=[\"upc\"], extend=True)\nclass Product(SomeInterface):\n    upc: str = strawberry.federation.field(external=True, override=[\"mySubGraph\"])\n\n\n@strawberry.federation.type\nclass Query:\n    @strawberry.field\n    def top_products(self, first: int) -> List[Product]:\n        return []\n\n\nschema = strawberry.federation.Schema(query=Query)\n```\n\nshould return:\n\n```graphql\nextend type Product implements SomeInterface @key(fields: \"upc\", resolvable: \"True\") {\n  id: ID!\n  upc: String! @external @override(from: \"mySubGraph\")\n}\n\ntype Query {\n  _service: _Service!\n  _entities(representations: [_Any!]!): [_Entity]!\n  topProducts(first: Int!): [Product!]!\n}\n\ninterface SomeInterface {\n  id: ID!\n}\n\nscalar _Any\n\nunion _Entity = Product\n\ntype _Service {\n  sdl: String!\n}\n```\n\nContributed by [Matt Skillman](https://github.com/mtskillman) via [PR #1874](https://github.com/strawberry-graphql/strawberry/pull/1874/)\n\n\n0.110.0 - 2022-05-02\n--------------------\n\nThis release adds support for passing a custom name to schema directives fields,\nby using `strawberry.directive_field`.\n\n```python\nimport strawberry\n\n\n@strawberry.schema_directive(locations=[Location.FIELD_DEFINITION])\nclass Sensitive:\n    reason: str = strawberry.directive_field(name=\"as\")\n    real_age_2: str = strawberry.directive_field(name=\"real_age\")\n\n\n@strawberry.type\nclass Query:\n    first_name: str = strawberry.field(\n        directives=[Sensitive(reason=\"GDPR\", real_age_2=\"42\")]\n    )\n```\n\nshould return:\n\n```graphql\ntype Query {\n    firstName: String! @sensitive(as: \"GDPR\", real_age: \"42\")\n}\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1871](https://github.com/strawberry-graphql/strawberry/pull/1871/)\n\n\n0.109.1 - 2022-04-28\n--------------------\n\nThis release adds support for Mypy 0.950\n\nContributed by [dependabot](https://github.com/dependabot) via [PR #1855](https://github.com/strawberry-graphql/strawberry/pull/1855/)\n\n\n0.109.0 - 2022-04-23\n--------------------\n\nChanged the location of `UNSET` from `arguments.py` to `unset.py`. `UNSET` can now also be imported directly from `strawberry`. Deprecated the `is_unset` method in favor of the builtin `is` operator:\n\n```python\nfrom strawberry import UNSET\nfrom strawberry.arguments import is_unset  # old\n\na = UNSET\n\nassert a is UNSET  # new\nassert is_unset(a)  # old\n```\nFurther more a new subsection to the docs was added explaining this.\n\nContributed by [Dominique Garmier](https://github.com/DominiqueGarmier) via [PR #1813](https://github.com/strawberry-graphql/strawberry/pull/1813/)\n\n\n0.108.3 - 2022-04-22\n--------------------\n\nFixes a bug when converting pydantic models with NewTypes in a List.\nThis no longers causes an exception.\n\n ```python\n from typing import List, NewType\n from pydantic import BaseModel\n import strawberry\n\n password = NewType(\"password\", str)\n\n\n class User(BaseModel):\n     passwords: List[password]\n\n\n @strawberry.experimental.pydantic.type(User)\n class UserType:\n     passwords: strawberry.auto\n ```\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #1770](https://github.com/strawberry-graphql/strawberry/pull/1770/)\n\n\n0.108.2 - 2022-04-21\n--------------------\n\nFixes mypy type inference when using @strawberry.experimental.pydantic.input\n and @strawberry.experimental.pydantic.interface decorators\n\nContributed by [James Chua](https://github.com/thejaminator) via [PR #1832](https://github.com/strawberry-graphql/strawberry/pull/1832/)\n\n\n0.108.1 - 2022-04-20\n--------------------\n\nRefactoring: Move enum deserialization logic from convert_arguments to CustomGraphQLEnumType\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #1765](https://github.com/strawberry-graphql/strawberry/pull/1765/)\n\n\n0.108.0 - 2022-04-19\n--------------------\n\nAdded support for deprecating Enum values with `deprecation_reason` while using `strawberry.enum_value` instead of string definition.\n\n```python\n@strawberry.enum\nclass IceCreamFlavour(Enum):\n    VANILLA = strawberry.enum_value(\"vanilla\")\n    STRAWBERRY = strawberry.enum_value(\"strawberry\", deprecation_reason=\"We ran out\")\n    CHOCOLATE = \"chocolate\"\n```\n\nContributed by [Mateusz Sobas](https://github.com/msobas) via [PR #1720](https://github.com/strawberry-graphql/strawberry/pull/1720/)\n\n\n0.107.1 - 2022-04-18\n--------------------\n\nThis release fixes an issue in the previous release where requests using query params did not support passing variable values. Variables passed by query params are now parsed from a string to a dictionary.\n\nContributed by [Matt Exact](https://github.com/MattExact) via [PR #1820](https://github.com/strawberry-graphql/strawberry/pull/1820/)\n\n\n0.107.0 - 2022-04-18\n--------------------\n\nThis release adds support in all our integration for queries via GET requests.\nThis behavior is enabled by default, but you can disable it by passing\n`allow_queries_via_get=False` to the constructor of the integration of your\nchoice.\n\nFor security reason only queries are allowed via `GET` requests.\n\nContributed by [Matt Exact](https://github.com/MattExact) via [PR #1686](https://github.com/strawberry-graphql/strawberry/pull/1686/)\n\n\n0.106.3 - 2022-04-15\n--------------------\n\nCorrectly parse Decimal scalar types to avoid floating point errors\n\nContributed by [Marco Acierno](https://github.com/marcoacierno) via [PR #1811](https://github.com/strawberry-graphql/strawberry/pull/1811/)\n\n\n0.106.2 - 2022-04-14\n--------------------\n\nAllow all data types in `Schema(types=[...])`\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) via [PR #1714](https://github.com/strawberry-graphql/strawberry/pull/1714/)\n\n\n0.106.1 - 2022-04-14\n--------------------\n\nThis release fixes a number of problems with single-result-operations over\n`graphql-transport-ws` protocol\n\n- operation **IDs** now share the same namespace as streaming operations\n  meaning that they cannot be reused while the others are in operation\n\n- single-result-operations now run as *tasks* meaning that messages related\n  to them can be overlapped with other messages on the websocket.\n\n- single-result-operations can be cancelled with the `complete` message.\n\n- IDs for single result and streaming result operations are now released\n  once the operation is done, allowing them to be re-used later, as well as\n  freeing up resources related to previous requests.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #1792](https://github.com/strawberry-graphql/strawberry/pull/1792/)\n\n\n0.106.0 - 2022-04-14\n--------------------\n\nThis release adds an implementation of the `GraphQLTestClient` for the `aiohttp` integration (in addition to the existing `asgi` and `Django` support). It hides the HTTP request's details and verifies that there are no errors in the response (this behavior can be disabled by passing `asserts_errors=False`). This makes it easier to test queries and makes your tests cleaner.\n\nIf you are using `pytest` you can add a fixture in `conftest.py`\n\n```python\nimport pytest\n\nfrom strawberry.aiohttp.test.client import GraphQLTestClient\n\n\n@pytest.fixture\ndef graphql_client(aiohttp_client, myapp):\n    yield GraphQLTestClient(aiohttp_client(myapp))\n```\n\nAnd use it everywhere in your tests\n\n```python\ndef test_strawberry(graphql_client):\n    query = \"\"\"\n        query Hi($name: String!) {\n            hi(name: $name)\n        }\n    \"\"\"\n\n    result = graphql_client.query(query, variables={\"name\": \"🍓\"})\n\n    assert result.data == {\"hi\": \"Hi 🍓!\"}\n```\n\nContributed by [Etty](https://github.com/estyxx) via [PR #1604](https://github.com/strawberry-graphql/strawberry/pull/1604/)\n\n\n0.105.1 - 2022-04-12\n--------------------\n\nThis release fixes a bug in the codegen that marked optional unions\nas non optional.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1806](https://github.com/strawberry-graphql/strawberry/pull/1806/)\n\n\n0.105.0 - 2022-04-05\n--------------------\n\nThis release adds support for passing `json_encoder` and `json_dumps_params` to Sanic's view.\n\n\n```python\nfrom strawberry.sanic.views import GraphQLView\n\nfrom api.schema import Schema\n\napp = Sanic(__name__)\n\napp.add_route(\n    GraphQLView.as_view(\n        schema=schema,\n        graphiql=True,\n        json_encoder=CustomEncoder,\n        json_dumps_params={},\n    ),\n    \"/graphql\",\n)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1797](https://github.com/strawberry-graphql/strawberry/pull/1797/)\n\n\n0.104.4 - 2022-04-05\n--------------------\n\nAllow use of `AsyncIterator` and `AsyncIterable` generics to annotate return\ntype of subscription resolvers.\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1771](https://github.com/strawberry-graphql/strawberry/pull/1771/)\n\n\n0.104.3 - 2022-04-03\n--------------------\n\nExeptions from handler functions in graphql_transport_ws are no longer\nincorrectly caught and classified as message parsing errors.\n\nContributed by [Kristján Valur Jónsson](https://github.com/kristjanvalur) via [PR #1761](https://github.com/strawberry-graphql/strawberry/pull/1761/)\n\n\n0.104.2 - 2022-04-02\n--------------------\n\nDrop support for Django < 3.2.\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) via [PR #1787](https://github.com/strawberry-graphql/strawberry/pull/1787/)\n\n\n0.104.1 - 2022-03-28\n--------------------\n\nThis release adds support for aliased fields when doing codegen.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1772](https://github.com/strawberry-graphql/strawberry/pull/1772/)\n\n\n0.104.0 - 2022-03-28\n--------------------\n\nAdd `is_auto` utility for checking if a type is `strawberry.auto`,\nconsidering the possibility of it being a `StrawberryAnnotation` or\neven being used inside `Annotated`.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) via [PR #1721](https://github.com/strawberry-graphql/strawberry/pull/1721/)\n\n\n0.103.9 - 2022-03-23\n--------------------\n\nThis release moves the console plugin for the codegen command\nto be last one, allowing to run code before writing files to\ndisk.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1760](https://github.com/strawberry-graphql/strawberry/pull/1760/)\n\n\n0.103.8 - 2022-03-18\n--------------------\n\nThis release adds a `python_type` to the codegen `GraphQLEnum` class\nto allow access to the original python enum when generating code\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1752](https://github.com/strawberry-graphql/strawberry/pull/1752/)\n\n\n0.103.7 - 2022-03-18\n--------------------\n\nFix an issue where there was no clean way to mark a Pydantic field as deprecated, add permission classes, or add directives. Now you can use the short field syntax to do all three.\n\n```python\nimport pydantic\nimport strawberry\n\n\nclass MyModel(pydantic.BaseModel):\n    age: int\n    name: str\n\n\n@strawberry.experimental.pydantic.type(MyModel)\nclass MyType:\n    age: strawberry.auto\n    name: strawberry.auto = strawberry.field(\n        deprecation_reason=\"Because\",\n        permission_classes=[MyPermission],\n        directives=[MyDirective],\n    )\n```\n\nContributed by [Matt Allen](https://github.com/Matt343) via [PR #1748](https://github.com/strawberry-graphql/strawberry/pull/1748/)\n\n\n0.103.6 - 2022-03-18\n--------------------\n\nThis release adds a missing `__init__.py` inside `cli/commands`\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1751](https://github.com/strawberry-graphql/strawberry/pull/1751/)\n\n\n0.103.5 - 2022-03-18\n--------------------\n\nThis release fixes an issue that prevented using generic types\nwith interfaces.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1701](https://github.com/strawberry-graphql/strawberry/pull/1701/)\n\n\n0.103.4 - 2022-03-18\n--------------------\n\nThis release fixes a couple of more issues with codegen:\n\n1. Adds support for boolean values in input fields\n2. Changes how we unwrap types in order to add full support for LazyTypes, Optionals and Lists\n3. Improve also how we generate types for unions, now we don't generate a Union type if the selection is for only one type\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1746](https://github.com/strawberry-graphql/strawberry/pull/1746/)\n\n\n0.103.3 - 2022-03-17\n--------------------\n\nThe return type annotation for `DataLoader.load` and `load_many` no longer\nincludes any exceptions directly returned by the `load_fn`. The ability to\nhandle errors by returning them as elements from `load_fn` is now documented too.\n\nContributed by [Huon Wilson](https://github.com/huonw) via [PR #1737](https://github.com/strawberry-graphql/strawberry/pull/1737/)\n\n\n0.103.2 - 2022-03-17\n--------------------\n\nThis release add supports for `LazyType`s in the codegen command\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1745](https://github.com/strawberry-graphql/strawberry/pull/1745/)\n\n\n0.103.1 - 2022-03-15\n--------------------\n\nThis release adds support for MyPy 0.941 under Python 3.10\n\nContributed by [dependabot](https://github.com/dependabot) via [PR #1728](https://github.com/strawberry-graphql/strawberry/pull/1728/)\n\n\n0.103.0 - 2022-03-14\n--------------------\n\nThis release adds an experimental codegen feature for queries.\nIt allows to combine a graphql query and Strawberry schema to generate\nPython types or TypeScript types.\n\nYou can use the following command:\n\n```bash\nstrawberry codegen --schema schema --output-dir ./output -p python query.graphql\n```\n\nto generate python types that correspond to your GraphQL query.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1655](https://github.com/strawberry-graphql/strawberry/pull/1655/)\n\n\n0.102.3 - 2022-03-14\n--------------------\n\nThis release makes StrawberryOptional and StrawberryList hashable,\nallowing to use strawberry types with libraries like dacite and\ndataclasses_json.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1726](https://github.com/strawberry-graphql/strawberry/pull/1726/)\n\n\n0.102.2 - 2022-03-08\n--------------------\n\nAdd support for postponed evaluation of annotations\n([PEP-563](https://www.python.org/dev/peps/pep-0563/)) to `strawberry.Private`\nannotated fields.\n\n## Example\n\nThis release fixes Issue #1586 using schema-conversion time filtering of\n`strawberry.Private` fields for PEP-563. This means the following is now\nsupported:\n\n```python\n@strawberry.type\nclass Query:\n    foo: \"strawberry.Private[int]\"\n```\n\nForward references are supported as well:\n\n```python\nfrom __future__ import annotations\n\nfrom dataclasses import dataclass\n\n\n@strawberry.type\nclass Query:\n    private_foo: strawberry.Private[SensitiveData]\n\n    @strawberry.field\n    def foo(self) -> int:\n        return self.private_foo.visible\n\n\n@dataclass\nclass SensitiveData:\n    visible: int\n    not_visible: int\n```\n\nContributed by [San Kilkis](https://github.com/skilkis) via [PR #1684](https://github.com/strawberry-graphql/strawberry/pull/1684/)\n\n\n0.102.1 - 2022-03-07\n--------------------\n\nThis PR improves the support for scalars when using MyPy.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) via [PR #1205](https://github.com/strawberry-graphql/strawberry/pull/1205/)\n\n\n0.102.0 - 2022-03-07\n--------------------\n\nAdded the response object to `get_context` on the `flask` view. This means that in fields, something like this can be used;\n\n```python\n@strawberry.field\ndef response_check(self, info: strawberry.Info) -> bool:\n    response: Response = info.context[\"response\"]\n    response.status_code = 401\n\n    return True\n```\n\n0.101.0 - 2022-03-06\n--------------------\n\nThis release adds support for `graphql-transport-ws` single result operations.\n\nSingle result operations allow clients to execute queries and mutations over an existing WebSocket connection.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1698](https://github.com/strawberry-graphql/strawberry/pull/1698/)\n\n\n0.100.0 - 2022-03-05\n--------------------\n\nChange `strawberry.auto` to be a type instead of a sentinel.\nThis not only removes the dependency on sentinel from the project, but also fixes\nsome related issues, like the fact that only types can be used with `Annotated`.\n\nAlso, custom scalars will now trick static type checkers into thinking they\nreturned their wrapped type. This should fix issues with pyright 1.1.224+ where\nit doesn't allow non-type objects to be used as annotations for dataclasses and\ndataclass-alike classes (which is strawberry's case). The change to `strawberry.auto`\nalso fixes this issue for it.\n\nContributed by [Thiago Bellini Ribeiro](https://github.com/bellini666) [PR #1690](https://github.com/strawberry-graphql/strawberry/pull/1690/)\n\n\n0.99.3 - 2022-03-05\n-------------------\n\nThis release adds support for flask 2.x and also relaxes the requirements for Django, allowing to install newer version of Django without having to wait for Strawberry to update its supported dependencies list.\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) [PR #1687](https://github.com/strawberry-graphql/strawberry/pull/1687/)\n\n\n0.99.2 - 2022-03-04\n-------------------\n\nThis fixes the schema printer to add support for schema\ndirectives on input types.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1697](https://github.com/strawberry-graphql/strawberry/pull/1697/)\n\n\n0.99.1 - 2022-03-02\n-------------------\n\nThis release fixed a false positive deprecation warning related to our AIOHTTP class based view.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1691](https://github.com/strawberry-graphql/strawberry/pull/1691/)\n\n\n0.99.0 - 2022-02-28\n-------------------\n\nThis release adds the following scalar types:\n\n- `JSON`\n- `Base16`\n- `Base32`\n- `Base64`\n\nthey can be used like so:\n\n```python\nfrom strawberry.scalar import Base16, Base32, Base64, JSON\n\n\n@strawberry.type\nclass Example:\n    a: Base16\n    b: Base32\n    c: Base64\n    d: JSON\n```\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) [PR #1647](https://github.com/strawberry-graphql/strawberry/pull/1647/)\n\n\n0.98.2 - 2022-02-24\n-------------------\n\nAdds support for converting pydantic conlist.\nNote that constraint is not enforced in the graphql type.\nThus, we recommend always working on the pydantic type such that the validation is enforced.\n\n```python\nimport strawberry\nfrom pydantic import BaseModel, conlist\n\n\nclass Example(BaseModel):\n    friends: conlist(str, min_items=1)\n\n\n@strawberry.experimental.pydantic.input(model=Example, all_fields=True)\nclass ExampleGQL: ...\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field()\n    def test(self, example: ExampleGQL) -> None:\n        # friends may be an empty list here\n        print(example.friends)\n        # calling to_pydantic() runs the validation and raises\n        # an error if friends is empty\n        print(example.to_pydantic().friends)\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nThe converted graphql type is\n```\ninput ExampleGQL {\n  friends: [String!]!\n}\n```\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1656](https://github.com/strawberry-graphql/strawberry/pull/1656/)\n\n0.98.1 - 2022-02-24\n-------------------\n\nThis release wasn't published on PyPI\n\n0.98.0 - 2022-02-23\n-------------------\n\nThis release updates `graphql-core` to `3.2.0`\n\nMake sure you take a look at [`graphql-core`'s release notes](https://github.com/graphql-python/graphql-core/releases/tag/v3.2.0)\nfor any potential breaking change that might affect you if you're importing things\nfrom the `graphql` package directly.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1601](https://github.com/strawberry-graphql/strawberry/pull/1601/)\n\n\n0.97.0 - 2022-02-17\n-------------------\n\nSupport \"void\" functions\n\nIt is now possible to have a resolver that returns \"None\". Strawberry will automatically assign the new `Void` scalar in the schema\nand will always send `null` in the response\n\n## Exampe\n\n```python\n@strawberry.type\nclass Mutation:\n    @strawberry.field\n    def do_something(self, arg: int) -> None:\n        return\n```\nresults in this schema:\n```graphql\ntype Mutation {\n    doSomething(arg: Int!): Void\n}\n```\n\nContributed by [Paulo Costa](https://github.com/paulo-raca) [PR #1648](https://github.com/strawberry-graphql/strawberry/pull/1648/)\n\n\n0.96.0 - 2022-02-07\n-------------------\n\nAdd better support for custom Pydantic conversion logic and standardize the\nbehavior when not using `strawberry.auto` as the type.\n\nSee https://strawberry.rocks/docs/integrations/pydantic#custom-conversion-logic for details and examples.\n\nNote that this release fixes a bug related to Pydantic aliases in schema\ngeneration. If you have a field with the same name as an aliased Pydantic field\nbut with a different type than `strawberry.auto`, the generated field will now\nuse the alias name. This may cause schema changes on upgrade in these cases, so\ncare should be taken. The alias behavior can be disabled by setting the\n`use_pydantic_alias` option of the decorator to false.\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1629](https://github.com/strawberry-graphql/strawberry/pull/1629/)\n\n\n0.95.5 - 2022-02-07\n-------------------\n\nAdds support for `use_pydantic_alias` parameter in pydantic model conversion.\nDecides if the all the GraphQL field names for the generated type should use the alias name or not.\n\n```python\nfrom pydantic import BaseModel, Field\nimport strawberry\n\n\nclass UserModel(BaseModel):\n    id: int = Field(..., alias=\"my_alias_name\")\n\n\n@strawberry.experimental.pydantic.type(UserModel, use_pydantic_alias=False)\nclass User:\n    id: strawberry.auto\n```\n\nIf `use_pydantic_alias` is `False`, the GraphQL type User will use `id` for the name of the `id` field coming from the Pydantic model.\n```\ntype User {\n      id: Int!\n}\n```\n\nWith `use_pydantic_alias` set to `True` (the default behaviour) the GraphQL type user will use `myAliasName` for the `id` field coming from the Pydantic models (since the field has a `alias` specified`)\n```\ntype User {\n      myAliasName: Int!\n}\n```\n\n`use_pydantic_alias` is set to `True` for backwards compatibility.\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1546](https://github.com/strawberry-graphql/strawberry/pull/1546/)\n\n\n0.95.4 - 2022-02-06\n-------------------\n\nThis release adds compatibility with uvicorn 0.17\n\nContributed by [dependabot](https://github.com/dependabot) [PR #1627](https://github.com/strawberry-graphql/strawberry/pull/1627/)\n\n\n0.95.3 - 2022-02-03\n-------------------\n\nThis release fixes an issue with FastAPI context dependency injection that causes class-based custom contexts to no longer be permitted.\n\nContributed by [Tommy Smith](https://github.com/tsmith023) [PR #1564](https://github.com/strawberry-graphql/strawberry/pull/1564/)\n\n\n0.95.2 - 2022-02-02\n-------------------\n\nThis release fixes an issue with the name generation for nested generics,\nthe following:\n\n```python\nT = TypeVar(\"T\")\nK = TypeVar(\"K\")\nV = TypeVar(\"V\")\n\n\n@strawberry.type\nclass Value(Generic[T]):\n    value: T\n\n\n@strawberry.type\nclass DictItem(Generic[K, V]):\n    key: K\n    value: V\n\n\n@strawberry.type\nclass Query:\n    d: Value[List[DictItem[int, str]]]\n```\n\nnow yields the correct schema:\n\n```graphql\ntype IntStrDictItem {\n  key: Int!\n  value: String!\n}\n\ntype IntStrDictItemListValue {\n  value: [IntStrDictItem!]!\n}\n\ntype Query {\n  d: IntStrDictItemListValue!\n}\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1621](https://github.com/strawberry-graphql/strawberry/pull/1621/)\n\n\n0.95.1 - 2022-01-26\n-------------------\n\nFix bug #1504 in the Pydantic integration, where it was impossible to define\nboth an input and output type based on the same Pydantic base class.\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1592](https://github.com/strawberry-graphql/strawberry/pull/1592/)\n\n\n0.95.0 - 2022-01-22\n-------------------\n\nAdds `to_pydantic` and `from_pydantic` type hints for IDE support.\n\nAdds mypy extension support as well.\n\n```python\nfrom pydantic import BaseModel\nimport strawberry\n\n\nclass UserPydantic(BaseModel):\n    age: int\n\n\n@strawberry.experimental.pydantic.type(UserPydantic)\nclass UserStrawberry:\n    age: strawberry.auto\n\n\nreveal_type(UserStrawberry(age=123).to_pydantic())\n```\nMypy will infer the type as \"UserPydantic\". Previously it would be \"Any\"\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1544](https://github.com/strawberry-graphql/strawberry/pull/1544/)\n\n\n0.94.0 - 2022-01-18\n-------------------\n\nThis release replaces `cached_property` with `backports.cached_property` to improve\nthe typing of the library.\n\nContributed by [Rishi Kumar Ray](https://github.com/RishiKumarRay) [PR #1582](https://github.com/strawberry-graphql/strawberry/pull/1582/)\n\n\n0.93.23 - 2022-01-11\n--------------------\n\nImprove typing of `@strawberry.enum()` by:\n\n1. Using a `TypeVar` bound on `EnumMeta` instead of `EnumMeta`, which allows\n   type-checkers (like pyright) to detect the fields of the enum being\n   decorated. For example, for the following enum:\n\n```python\n@strawberry.enum\nclass IceCreamFlavour(Enum):\n    VANILLA = \"vanilla\"\n    STRAWBERRY = \"strawberry\"\n    CHOCOLATE = \"chocolate\"\n```\n\nPrior to this change, pyright would complain if you tried to access\n`IceCreamFlavour.VANILLA`, since the type information of `IceCreamFlavour` was\nbeing erased by the `EnumMeta` typing .\n\n2. Overloading it so that type-checkers (like pyright) knows in what cases it\n   returns a decorator (when it's called with keyword arguments, e.g.\n   `@strawberry.enum(name=\"IceCreamFlavor\")`), versus when it returns the\n   original enum type (without keyword arguments.\n\nContributed by [Tim Joseph Dumol](https://github.com/TimDumol) [PR #1568](https://github.com/strawberry-graphql/strawberry/pull/1568/)\n\n\n0.93.22 - 2022-01-09\n--------------------\n\nThis release adds `load_many` to `DataLoader`.\n\nContributed by [Silas Sewell](https://github.com/silas) [PR #1528](https://github.com/strawberry-graphql/strawberry/pull/1528/)\n\n\n0.93.21 - 2022-01-07\n--------------------\n\nThis release adds `deprecation_reason` support to arguments and mutations.\n\nContributed by [Silas Sewell](https://github.com/silas) [PR #1527](https://github.com/strawberry-graphql/strawberry/pull/1527/)\n\n\n0.93.20 - 2022-01-07\n--------------------\n\nThis release checks for AutoFieldsNotInBaseModelError when converting from pydantic models.\n It is raised when strawberry.auto is used, but the pydantic model does not have\nthe particular field defined.\n\n```python\nclass User(BaseModel):\n    age: int\n\n\n@strawberry.experimental.pydantic.type(User)\nclass UserType:\n    age: strawberry.auto\n    password: strawberry.auto\n```\n\nPreviously no errors would be raised, and the password field would not appear on graphql schema.\nSuch mistakes could be common during refactoring. Now, AutoFieldsNotInBaseModelError is raised.\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1551](https://github.com/strawberry-graphql/strawberry/pull/1551/)\n\n\n0.93.19 - 2022-01-06\n--------------------\n\nFixes TypeError when converting a pydantic BaseModel with NewType field\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1547](https://github.com/strawberry-graphql/strawberry/pull/1547/)\n\n\n0.93.18 - 2022-01-05\n--------------------\n\nThis release allows setting http headers and custom http status codes with FastAPI GraphQLRouter.\n\nContributed by [David Němec](https://github.com/davidnemec) [PR #1537](https://github.com/strawberry-graphql/strawberry/pull/1537/)\n\n\n0.93.17 - 2022-01-05\n--------------------\n\nFix compatibility with Sanic 21.12\n\nContributed by [Artjoms Iskovs](https://github.com/mildbyte) [PR #1520](https://github.com/strawberry-graphql/strawberry/pull/1520/)\n\n\n0.93.16 - 2022-01-04\n--------------------\n\nAdd support for piping `StrawberryUnion` and `None` when annotating types.\n\nFor example:\n```python\n@strawberry.type\nclass Cat:\n    name: str\n\n\n@strawberry.type\nclass Dog:\n    name: str\n\n\nAnimal = strawberry.union(\"Animal\", (Cat, Dog))\n\n\n@strawberry.type\nclass Query:\n    animal: Animal | None  # This line no longer triggers a TypeError\n```\n\nContributed by [Yossi Rozantsev](https://github.com/Apakottur) [PR #1540](https://github.com/strawberry-graphql/strawberry/pull/1540/)\n\n\n0.93.15 - 2022-01-04\n--------------------\n\nThis release fixes the conversion of pydantic models with a default_factory\nfield.\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1538](https://github.com/strawberry-graphql/strawberry/pull/1538/)\n\n\n0.93.14 - 2022-01-03\n--------------------\n\nThis release allows conversion of pydantic models with mutable default fields into strawberry types.\nAlso fixes bug when converting a pydantic model field with default_factory. Previously it would raise an exception when fields with a default_factory were declared before fields without defaults.\n\nContributed by [James Chua](https://github.com/thejaminator) [PR #1491](https://github.com/strawberry-graphql/strawberry/pull/1491/)\n\n\n0.93.13 - 2021-12-25\n--------------------\n\nThis release updates the Decimal and UUID scalar parsers to exclude the original_error exception and format the error message similar to other builtin scalars.\n\nContributed by [Silas Sewell](https://github.com/silas) [PR #1507](https://github.com/strawberry-graphql/strawberry/pull/1507/)\n\n\n0.93.12 - 2021-12-24\n--------------------\n\nFix mypy plugin crushes when _get_type_for_expr is used on var nodes\n\nContributed by [Andrii Kohut](https://github.com/andriykohut) [PR #1513](https://github.com/strawberry-graphql/strawberry/pull/1513/)\n\n\n0.93.11 - 2021-12-24\n--------------------\n\nThis release fixes a bug in the annotation parser that prevents using strict typinh for Optional arguments which have their default set to UNSET.\n\nContributed by [Sarah Henkens](https://github.com/sarahhenkens) [PR #1467](https://github.com/strawberry-graphql/strawberry/pull/1467/)\n\n\n0.93.10 - 2021-12-21\n--------------------\n\nThis release adds support for mypy 0.920.\n\nContributed by [Yossi Rozantsev](https://github.com/Apakottur) [PR #1503](https://github.com/strawberry-graphql/strawberry/pull/1503/)\n\n\n0.93.9 - 2021-12-21\n-------------------\n\nThis releases fixes a bug with the opentracing extension\nwhere the tracer wasn't replacing the field name correctly.\n\n0.93.8 - 2021-12-20\n-------------------\n\nThis release modifies the internal utility function `await_maybe` towards updating mypy to 0.920.\n\nContributed by [Yossi Rozantsev](https://github.com/Apakottur) [PR #1505](https://github.com/strawberry-graphql/strawberry/pull/1505/)\n\n\n0.93.7 - 2021-12-18\n-------------------\n\nChange `context_getter` in `strawberry.fastapi.GraphQLRouter` to merge, rather than overwrite, default and custom getters.\n\nThis mean now you can always access the `request` instance from `info.context`, even when using\na custom context getter.\n\nContributed by [Tommy Smith](https://github.com/tsmith023) [PR #1494](https://github.com/strawberry-graphql/strawberry/pull/1494/)\n\n\n0.93.6 - 2021-12-18\n-------------------\n\nThis release changes when we fetch the event loop in dataloaders\nto prevent using the wrong event loop in some occasions.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1498](https://github.com/strawberry-graphql/strawberry/pull/1498/)\n\n\n0.93.5 - 2021-12-16\n-------------------\n\nThis release fixes an issue that prevented from lazily importing\nenum types using LazyType.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1501](https://github.com/strawberry-graphql/strawberry/pull/1501/)\n\n\n0.93.4 - 2021-12-10\n-------------------\n\nThis release allows running strawberry as a script, for example, you can start the debug server with the following command:\n\n```shell\npython -m strawberry server schema\n```\n\nContributed by [YogiLiu](https://github.com/YogiLiu) [PR #1481](https://github.com/strawberry-graphql/strawberry/pull/1481/)\n\n\n0.93.3 - 2021-12-08\n-------------------\n\nThis release adds support for uvicorn 0.16\n\nContributed by [dependabot](https://github.com/dependabot) [PR #1487](https://github.com/strawberry-graphql/strawberry/pull/1487/)\n\n\n0.93.2 - 2021-12-08\n-------------------\n\nThis fixes the previous release that introduced a direct dependency on Django.\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) [PR #1489](https://github.com/strawberry-graphql/strawberry/pull/1489/)\n\n\n0.93.1 - 2021-12-08\n-------------------\n\nThis release adds support for Django 4.0\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) [PR #1484](https://github.com/strawberry-graphql/strawberry/pull/1484/)\n\n\n0.93.0 - 2021-12-07\n-------------------\n\nThis release `operation_type` to the `ExecutionContext` type that is available\nin extensions. It also gets the `operation_name` from the query if one isn't\nprovided by the client.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1286](https://github.com/strawberry-graphql/strawberry/pull/1286/)\n\n\n0.92.2 - 2021-12-06\n-------------------\n\nThis release adds support for passing `json_encoder` and `json_dumps_params` to Django [`JsonResponse`](https://docs.djangoproject.com/en/stable/ref/request-response/#jsonresponse-objects) via a view.\n\n\n```python\nfrom json import JSONEncoder\n\nfrom django.urls import path\nfrom strawberry.django.views import AsyncGraphQLView\n\nfrom .schema import schema\n\n# Pass the JSON params to `.as_view`\nurlpatterns = [\n    path(\n        \"graphql\",\n        AsyncGraphQLView.as_view(\n            schema=schema,\n            json_encoder=JSONEncoder,\n            json_dumps_params={\"separators\": (\",\", \":\")},\n        ),\n    ),\n]\n\n\n# … or set them in a custom view\nclass CustomAsyncGraphQLView(AsyncGraphQLView):\n    json_encoder = JSONEncoder\n    json_dumps_params = {\"separators\": (\",\", \":\")}\n```\n\nContributed by [Illia Volochii](https://github.com/illia-v) [PR #1472](https://github.com/strawberry-graphql/strawberry/pull/1472/)\n\n\n0.92.1 - 2021-12-04\n-------------------\n\nFix cross-module type resolving for fields and resolvers\n\nThe following two issues are now fixed:\n\n- A field with a generic (typeless) resolver looks up the\n  type relative to the resolver and not the class the field is\n  defined in. (#1448)\n\n- When inheriting fields from another class the origin of the\n  fields are set to the inheriting class and not the class the\n  field is defined in.\n\nBoth these issues could lead to a rather undescriptive error message:\n\n> TypeError: (...) fields cannot be resolved. Unexpected type 'None'\n\nContributed by [Michael P. Jung](https://github.com/bikeshedder) [PR #1449](https://github.com/strawberry-graphql/strawberry/pull/1449/)\n\n\n0.92.0 - 2021-12-04\n-------------------\n\nThis releases fixes an issue where you were not allowed\nto return a non-strawberry type for fields that return\nan interface. Now this works as long as each type\nimplementing the interface implements an `is_type_of`\nclassmethod. Previous automatic duck typing on types\nthat implement an interface now requires explicit\nresolution using this classmethod.\n\nContributed by [Etty](https://github.com/estyxx) [PR #1299](https://github.com/strawberry-graphql/strawberry/pull/1299/)\n\n\n0.91.0 - 2021-12-04\n-------------------\n\nThis release adds a `GraphQLTestClient`. It hides the http request's details and asserts that there are no errors in the response (you can always disable this behavior by passing `asserts_errors=False`). This makes it easier to test queries and makes your tests cleaner.\n\nIf you are using `pytest` you can add a fixture in `conftest.py`\n\n```python\nimport pytest\n\nfrom django.test.client import Client\n\nfrom strawberry.django.test import GraphQLTestClient\n\n\n@pytest.fixture\ndef graphql_client():\n    yield GraphQLTestClient(Client())\n```\n\nAnd use it everywere in your test methods\n\n```python\ndef test_strawberry(graphql_client):\n    query = \"\"\"\n        query Hi($name: String!) {\n            hi(name: $name)\n        }\n    \"\"\"\n\n    result = graphql_client.query(query, variables={\"name\": \"Marcotte\"})\n\n    assert result.data == {\"hi\": \"Hi Marcotte!\"}\n```\n\nIt can be used to test the file uploads as well\n\n```python\nfrom django.core.files.uploadedfile import SimpleUploadedFile\n\n\ndef test_upload(graphql_client):\n    f = SimpleUploadedFile(\"file.txt\", b\"strawberry\")\n    query = \"\"\"\n        mutation($textFile: Upload!) {\n            readText(textFile: $textFile)\n        }\n    \"\"\"\n\n    response = graphql_client.query(\n        query=query,\n        variables={\"textFile\": None},\n        files={\"textFile\": f},\n    )\n\n    assert response.data[\"readText\"] == \"strawberry\"\n```\n\nContributed by [Etty](https://github.com/estyxx) [PR #1225](https://github.com/strawberry-graphql/strawberry/pull/1225/)\n\n\n0.90.3 - 2021-12-02\n-------------------\n\nThis release fixes an issue that prevented using enums as\narguments for generic types inside unions.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1463](https://github.com/strawberry-graphql/strawberry/pull/1463/)\n\n\n0.90.2 - 2021-11-28\n-------------------\n\nThis release fixes the message of `InvalidFieldArgument` to properly show the field's name in the error message.\n\nContributed by [Etty](https://github.com/estyxx) [PR #1322](https://github.com/strawberry-graphql/strawberry/pull/1322/)\n\n\n0.90.1 - 2021-11-27\n-------------------\n\nThis release fixes an issue that prevented using `classmethod`s and `staticmethod`s as resolvers\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    @staticmethod\n    def static_text() -> str:\n        return \"Strawberry\"\n\n    @strawberry.field\n    @classmethod\n    def class_name(cls) -> str:\n        return cls.__name__\n```\n\nContributed by [Illia Volochii](https://github.com/illia-v) [PR #1430](https://github.com/strawberry-graphql/strawberry/pull/1430/)\n\n\n0.90.0 - 2021-11-26\n-------------------\n\nThis release improves type checking support for `strawberry.union` and now allows\nto use unions without any type issue, like so:\n\n```python\n@strawberry.type\nclass User:\n    name: str\n\n\n@strawberry.type\nclass Error:\n    message: str\n\n\nUserOrError = strawberry.union(\"UserOrError\", (User, Error))\n\nx: UserOrError = User(name=\"Patrick\")\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1438](https://github.com/strawberry-graphql/strawberry/pull/1438/)\n\n\n0.89.2 - 2021-11-26\n-------------------\n\nFix init of Strawberry types from pydantic by skipping fields that have resolvers.\n\nContributed by [Nina](https://github.com/nina-j) [PR #1451](https://github.com/strawberry-graphql/strawberry/pull/1451/)\n\n\n0.89.1 - 2021-11-25\n-------------------\n\nThis release fixes an issubclass test failing for `Literal`s in the experimental `pydantic` integration.\n\nContributed by [Nina](https://github.com/nina-j) [PR #1445](https://github.com/strawberry-graphql/strawberry/pull/1445/)\n\n\n0.89.0 - 2021-11-24\n-------------------\n\nThis release changes how `strawberry.Private` is implemented to\nimprove support for type checkers.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1437](https://github.com/strawberry-graphql/strawberry/pull/1437/)\n\n\n0.88.0 - 2021-11-24\n-------------------\n\nThis release adds support for AWS Chalice. A framework for deploying serverless applications using AWS.\n\nA view for aws chalice has been added to the strawberry codebase.\nThis view embedded in a chalice app allows anyone to get a GraphQL API working and hosted on AWS in minutes using a serverless architecture.\n\nContributed by [Mark Sheehan](https://github.com/mcsheehan) [PR #923](https://github.com/strawberry-graphql/strawberry/pull/923/)\n\n\n0.87.3 - 2021-11-23\n-------------------\n\nThis release fixes the naming generation of generics when\npassing a generic type to another generic, like so:\n\n```python\n@strawberry.type\nclass Edge(Generic[T]):\n    node: T\n\n\n@strawberry.type\nclass Connection(Generic[T]):\n    edges: List[T]\n\n\nConnection[Edge[int]]\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1436](https://github.com/strawberry-graphql/strawberry/pull/1436/)\n\n\n0.87.2 - 2021-11-19\n-------------------\n\nThis releases updates the `typing_extension` dependency to latest version.\n\nContributed by [dependabot](https://github.com/dependabot) [PR #1417](https://github.com/strawberry-graphql/strawberry/pull/1417/)\n\n\n0.87.1 - 2021-11-15\n-------------------\n\nThis release renames an internal exception from `NotAnEnum` to `ObjectIsNotAnEnumError`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1317](https://github.com/strawberry-graphql/strawberry/pull/1317/)\n\n\n0.87.0 - 2021-11-15\n-------------------\n\nThis release changes how we handle GraphQL names. It also introduces a new\nconfiguration option called `name_converter`. This option allows you to specify\na custom `NameConverter` to be used when generating GraphQL names.\n\nThis is currently not documented because the API will change slightly in future\nas we are working on renaming internal types.\n\nThis release also fixes an issue when creating concrete types from generic when\npassing list objects.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1394](https://github.com/strawberry-graphql/strawberry/pull/1394/)\n\n\n0.86.1 - 2021-11-12\n-------------------\n\nThis release fixes our MyPy plugin and re-adds support\nfor typechecking classes created with the apollo federation decorator.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1414](https://github.com/strawberry-graphql/strawberry/pull/1414/)\n\n\n0.86.0 - 2021-11-12\n-------------------\n\nAdd `on_executing_*` hooks to extensions to allow you to override the execution phase of a GraphQL operation.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1400](https://github.com/strawberry-graphql/strawberry/pull/1400/)\n\n\n0.85.1 - 2021-10-26\n-------------------\n\nThis release fixes an issue with schema directives not\nbeing printed correctly.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1376](https://github.com/strawberry-graphql/strawberry/pull/1376/)\n\n\n0.85.0 - 2021-10-23\n-------------------\n\nThis release introduces initial support for schema directives and\nupdates the federation support to use that.\n\nFull support will be implemented in future releases.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #815](https://github.com/strawberry-graphql/strawberry/pull/815/)\n\n\n0.84.4 - 2021-10-23\n-------------------\n\nField definition uses output of `default_factory` as the GraphQL `default_value`.\n```python\na_field: list[str] = strawberry.field(default_factory=list)\n```\n```graphql\naField: [String!]! = []\n```\n\nContributed by [A. Coady](https://github.com/coady) [PR #1371](https://github.com/strawberry-graphql/strawberry/pull/1371/)\n\n\n0.84.3 - 2021-10-19\n-------------------\n\nThis release fixed the typing support for Pyright.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1363](https://github.com/strawberry-graphql/strawberry/pull/1363/)\n\n\n0.84.2 - 2021-10-17\n-------------------\n\nThis release adds an extra dependency for FastAPI to prevent\nit being downloaded even when not needed.\n\nTo install Strawberry with FastAPI support you can do:\n\n```\npip install 'strawberry-graphql[fastapi]'\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1366](https://github.com/strawberry-graphql/strawberry/pull/1366/)\n\n\n0.84.1 - 2021-10-17\n-------------------\n\nThis release fixes the `merge_types` type signature.\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) [PR #1348](https://github.com/strawberry-graphql/strawberry/pull/1348/)\n\n\n0.84.0 - 2021-10-16\n-------------------\n\nThis release adds support for FastAPI integration using APIRouter.\n\n```python\nimport strawberry\n\nfrom fastapi import FastAPI\nfrom strawberry.fastapi import GraphQLRouter\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self) -> str:\n        return \"Hello World\"\n\n\nschema = strawberry.Schema(Query)\n\ngraphql_app = GraphQLRouter(schema)\n\napp = FastAPI()\napp.include_router(graphql_app, prefix=\"/graphql\")\n```\n\nContributed by [Jiří Bireš](https://github.com/jiribires) [PR #1291](https://github.com/strawberry-graphql/strawberry/pull/1291/)\n\n\n0.83.6 - 2021-10-16\n-------------------\n\nImprove help texts for CLI to work better on ZSH.\n\nContributed by [Magnus Markling](https://github.com/memark) [PR #1360](https://github.com/strawberry-graphql/strawberry/pull/1360/)\n\n\n0.83.5 - 2021-10-16\n-------------------\n\nErrors encountered in subscriptions will now be logged to the `strawberry.execution` logger as errors encountered in Queries and Mutations are. <3\n\nContributed by [Michael Ossareh](https://github.com/ossareh) [PR #1316](https://github.com/strawberry-graphql/strawberry/pull/1316/)\n\n\n0.83.4 - 2021-10-13\n-------------------\n\nAdd logic to convert arguments of type LazyType.\n\nContributed by [Luke Murray](https://github.com/lukesmurray) [PR #1350](https://github.com/strawberry-graphql/strawberry/pull/1350/)\n\n\n0.83.3 - 2021-10-13\n-------------------\n\nThis release fixes a bug where passing scalars in the `scalar_overrides`\nparameter wasn't being applied consistently.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1212](https://github.com/strawberry-graphql/strawberry/pull/1212/)\n\n\n0.83.2 - 2021-10-13\n-------------------\n\nPydantic fields' `description` are now copied to the GraphQL schema\n\n```python\nimport pydantic\nimport strawberry\n\n\nclass UserModel(pydantic.BaseModel):\n    age: str = pydantic.Field(..., description=\"Description\")\n\n\n@strawberry.experimental.pydantic.type(UserModel)\nclass User:\n    age: strawberry.auto\n```\n\n```\ntype User {\n  \"\"\"Description\"\"\"\n  age: String!\n}\n```\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) [PR #1332](https://github.com/strawberry-graphql/strawberry/pull/1332/)\n\n\n0.83.1 - 2021-10-12\n-------------------\n\nWe now run our tests against Windows during CI!\n\nContributed by [Michael Ossareh](https://github.com/ossareh) [PR #1321](https://github.com/strawberry-graphql/strawberry/pull/1321/)\n\n\n0.83.0 - 2021-10-12\n-------------------\n\nAdd a shortcut to merge queries, mutations. E.g.:\n\n```python\nimport strawberry\nfrom strawberry.tools import merge_types\n\n\n@strawberry.type\nclass QueryA: ...\n\n\n@strawberry.type\nclass QueryB: ...\n\n\nComboQuery = merge_types(\"ComboQuery\", (QueryB, QueryA))\nschema = strawberry.Schema(query=ComboQuery)\n```\n\nContributed by [Alexandru Mărășteanu](https://github.com/alexei) [PR #1273](https://github.com/strawberry-graphql/strawberry/pull/1273/)\n\n\n0.82.2 - 2021-10-12\n-------------------\n\nMakes the GraphQLSchema instance accessible from resolvers via the `info` parameter.\n\nContributed by [Aryan Iyappan](https://github.com/codebyaryan) [PR #1311](https://github.com/strawberry-graphql/strawberry/pull/1311/)\n\n\n0.82.1 - 2021-10-11\n-------------------\n\nFix bug where errors thrown in the on_parse_* extension hooks were being\nswallowed instead of being propagated.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1324](https://github.com/strawberry-graphql/strawberry/pull/1324/)\n\n\n0.82.0 - 2021-10-11\n-------------------\n\nAdds support for the `auto` type annotation described in #1192 to the Pydantic\nintegration, which allows a user to define the list of fields without having to\nre-specify the type themselves. This gives better editor and type checker\nsupport. If you want to expose every field you can instead pass\n`all_fields=True` to the decorators and leave the body empty.\n\n```python\nimport pydantic\nimport strawberry\nfrom strawberry.experimental.pydantic import auto\n\n\nclass User(pydantic.BaseModel):\n    age: int\n    password: str\n\n\n@strawberry.experimental.pydantic.type(User)\nclass UserType:\n    age: auto\n    password: auto\n```\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1280](https://github.com/strawberry-graphql/strawberry/pull/1280/)\n\n\n0.81.0 - 2021-10-04\n-------------------\n\nThis release adds a safety check on `strawberry.type`, `strawberry.input` and\n`strawberry.interface` decorators. When you try to use them with an object that is not a\nclass, you will get a nice error message:\n`strawberry.type can only be used with classes`\n\nContributed by [dependabot](https://github.com/dependabot) [PR #1278](https://github.com/strawberry-graphql/strawberry/pull/1278/)\n\n\n0.80.2 - 2021-10-01\n-------------------\n\nAdd `Starlette` to the integrations section on the documentation.\n\nContributed by [Marcelo Trylesinski](https://github.com/Kludex) [PR #1287](https://github.com/strawberry-graphql/strawberry/pull/1287/)\n\n\n0.80.1 - 2021-10-01\n-------------------\n\nThis release add support for the upcoming python 3.10 and it adds support\nfor the new union syntax, allowing to declare unions like this:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass User:\n    name: str\n\n\n@strawberry.type\nclass Error:\n    code: str\n\n\n@strawberry.type\nclass Query:\n    find_user: User | Error\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #719](https://github.com/strawberry-graphql/strawberry/pull/719/)\n\n\n0.80.0 - 2021-09-30\n-------------------\n\nThis release adds support for the `graphql-transport-ws` GraphQL over WebSocket\nprotocol. Previously Strawberry only supported the legacy `graphql-ws` protocol.\n\nDevelopers can decide which protocols they want to accept. The following example shows\nhow to do so using the ASGI integration. By default, both protocols are accepted.\nTake a look at our GraphQL subscription documentation to learn more.\n\n```python\nfrom strawberry.asgi import GraphQL\nfrom strawberry.subscriptions import GRAPHQL_TRANSPORT_WS_PROTOCOL\nfrom api.schema import schema\n\n\napp = GraphQL(schema, subscription_protocols=[GRAPHQL_TRANSPORT_WS_PROTOCOL])\n```\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1256](https://github.com/strawberry-graphql/strawberry/pull/1256/)\n\n\n0.79.0 - 2021-09-29\n-------------------\n\nNests the resolver under the correct span; prior to this change your span would have looked something like:\n\n```\nGraphQL Query\n  GraphQL Parsing\n  GraphQL Validation\n  my_resolver\n  my_span_of_interest #1\n    my_sub_span_of_interest #2\n```\n\nAfter this change you'll have:\n\n```\nGraphQL Query\n  GraphQL Parsing\n  GraphQL Validation\n  GraphQL Resolving: my_resolver\n    my_span_of_interest #1\n      my_sub_span_of_interest #2\n```\n\nContributed by [Michael Ossareh](https://github.com/ossareh) [PR #1281](https://github.com/strawberry-graphql/strawberry/pull/1281/)\n\n\n0.78.2 - 2021-09-27\n-------------------\n\nEnhances strawberry.extensions.tracing.opentelemetry to include spans for the Parsing and Validation phases of request handling. These occur before your resovler is called, so now you can see how much time those phases take up!\n\nContributed by [Michael Ossareh](https://github.com/ossareh) [PR #1274](https://github.com/strawberry-graphql/strawberry/pull/1274/)\n\n\n0.78.1 - 2021-09-26\n-------------------\n\nFix `extensions` argument type definition on `strawberry.Schema`\n\nContributed by [Guillaume Andreu Sabater](https://github.com/g-as) [PR #1276](https://github.com/strawberry-graphql/strawberry/pull/1276/)\n\n\n0.78.0 - 2021-09-22\n-------------------\n\nThis release introduces some brand new extensions to help improve the\nperformance of your GraphQL server:\n\n* `ParserCache` - Cache the parsing of a query in memory\n* `ValidationCache` - Cache the validation step of execution\n\nFor complicated queries these 2 extensions can improve performance by over 50%!\n\nExample:\n\n```python\nimport strawberry\nfrom strawberry.extensions import ParserCache, ValidationCache\n\nschema = strawberry.Schema(\n    Query,\n    extensions=[\n        ParserCache(),\n        ValidationCache(),\n    ],\n)\n```\n\nThis release also removes the `validate_queries` and `validation_rules`\nparameters on the `schema.execute*` methods in favour of using the\n`DisableValidation` and `AddValidationRule` extensions.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1196](https://github.com/strawberry-graphql/strawberry/pull/1196/)\n\n\n0.77.12 - 2021-09-20\n--------------------\n\nThis release adds support for Sanic v21\n\nContributed by [dependabot](https://github.com/dependabot) [PR #1105](https://github.com/strawberry-graphql/strawberry/pull/1105/)\n\n\n0.77.11 - 2021-09-19\n--------------------\n\nFixes returning \"500 Internal Server Error\" responses to requests with malformed json when running with ASGI integration.\n\nContributed by [Olesia Grydzhuk](https://github.com/Zlira) [PR #1260](https://github.com/strawberry-graphql/strawberry/pull/1260/)\n\n\n0.77.10 - 2021-09-16\n--------------------\n\nThis release adds `python_name` to the `Info` type.\n\nContributed by [Joe Freeman](https://github.com/joefreeman) [PR #1257](https://github.com/strawberry-graphql/strawberry/pull/1257/)\n\n\n0.77.9 - 2021-09-16\n-------------------\n\nFix the Pydantic conversion method for Enum values, and add a mechanism to specify an interface type when converting from Pydantic. The Pydantic interface is really a base dataclass for the subclasses to extend. When you do the conversion, you have to use `strawberry.experimental.pydantic.interface` to let us know that this type is an interface. You also have to use your converted interface type as the base class for the sub types as normal.\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1241](https://github.com/strawberry-graphql/strawberry/pull/1241/)\n\n\n0.77.8 - 2021-09-14\n-------------------\n\nFixes a bug with the `selected_fields` property on `info` when an operation\nvariable is not defined.\n\nIssue [#1248](https://github.com/strawberry-graphql/strawberry/issues/1248).\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1249](https://github.com/strawberry-graphql/strawberry/pull/1249/)\n\n\n0.77.7 - 2021-09-14\n-------------------\n\nFix issues ([#1158][issue1158] and [#1104][issue1104]) where Generics using LazyTypes\nand Enums would not be properly resolved\n\nThese now function as expected:\n\n# Enum\n\n```python\nT = TypeVar(\"T\")\n\n\n@strawberry.enum\nclass VehicleMake(Enum):\n    FORD = \"ford\"\n    TOYOTA = \"toyota\"\n    HONDA = \"honda\"\n\n\n@strawberry.type\nclass GenericForEnum(Generic[T]):\n    generic_slot: T\n\n\n@strawberry.type\nclass SomeType:\n    field: GenericForEnum[VehicleMake]\n```\n\n# LazyType\n\n`another_file.py`\n```python\n@strawberry.type\nclass TypeFromAnotherFile:\n    something: bool\n```\n\n`this_file.py`\n```python\nT = TypeVar(\"T\")\n\n\n@strawberry.type\nclass GenericType(Generic[T]):\n    item: T\n\n\n@strawberry.type\nclass RealType:\n    lazy: GenericType[LazyType[\"TypeFromAnotherFile\", \"another_file.py\"]]\n```\n\n[issue1104]: https://github.com/strawberry-graphql/strawberry/issues/1104\n[issue1158]: https://github.com/strawberry-graphql/strawberry/issues/1158\n\nContributed by [ignormies](https://github.com/BryceBeagle) [PR #1235](https://github.com/strawberry-graphql/strawberry/pull/1235/)\n\n\n0.77.6 - 2021-09-13\n-------------------\n\nThis release adds fragment and input variable information to the\n`selected_fields` attribute on the `Info` object.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1213](https://github.com/strawberry-graphql/strawberry/pull/1213/)\n\n\n0.77.5 - 2021-09-11\n-------------------\n\nFixes a bug in the Pydantic conversion code around `Union` values.\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1231](https://github.com/strawberry-graphql/strawberry/pull/1231/)\n\n\n0.77.4 - 2021-09-11\n-------------------\n\nFixes a bug in the `export-schema` command around the handling of local modules.\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1233](https://github.com/strawberry-graphql/strawberry/pull/1233/)\n\n\n0.77.3 - 2021-09-10\n-------------------\n\nFixes a bug in the Pydantic conversion code around complex `Optional` values.\n\nContributed by [Matt Allen](https://github.com/Matt343) [PR #1229](https://github.com/strawberry-graphql/strawberry/pull/1229/)\n\n\n0.77.2 - 2021-09-10\n-------------------\n\nThis release adds a new exception called `InvalidFieldArgument` which is raised when a Union or Interface is used as an argument type.\nFor example this will raise an exception:\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Noun:\n    text: str\n\n\n@strawberry.type\nclass Verb:\n    text: str\n\n\nWord = strawberry.union(\"Word\", types=(Noun, Verb))\n\n\n@strawberry.field\ndef add_word(word: Word) -> bool: ...\n```\n\nContributed by [Mohammad Hossein Yazdani](https://github.com/MAM-SYS) [PR #1222](https://github.com/strawberry-graphql/strawberry/pull/1222/)\n\n\n0.77.1 - 2021-09-10\n-------------------\n\nFix type resolution when inheriting from types from another module using deferred annotations.\n\nContributed by [Daniel Bowring](https://github.com/dbowring) [PR #1010](https://github.com/strawberry-graphql/strawberry/pull/1010/)\n\n\n0.77.0 - 2021-09-10\n-------------------\n\nThis release adds support for Pyright and Pylance, improving the\nintegration with Visual Studio Code!\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #922](https://github.com/strawberry-graphql/strawberry/pull/922/)\n\n\n0.76.1 - 2021-09-09\n-------------------\n\nChange the version constraint of opentelemetry-sdk and opentelemetry-api to <2\n\nContributed by [Michael Ossareh](https://github.com/ossareh) [PR #1226](https://github.com/strawberry-graphql/strawberry/pull/1226/)\n\n\n0.76.0 - 2021-09-06\n-------------------\n\nThis release adds support for enabling subscriptions in GraphiQL\non Django by setting a flag `subscriptions_enabled` on the BaseView class.\n```python\nfrom strawberry.django.views import AsyncGraphQLView\n\nfrom .schema import schema\n\nurlpatterns = [\n    path(\n        \"graphql\",\n        AsyncGraphQLView.as_view(\n            schema=schema, graphiql=True, subscriptions_enabled=True\n        ),\n    )\n]\n```\n\nContributed by [lijok](https://github.com/lijok) [PR #1215](https://github.com/strawberry-graphql/strawberry/pull/1215/)\n\n\n0.75.1 - 2021-09-03\n-------------------\n\nThis release fixes an issue with the MyPy plugin that prevented using\nTextChoices from django in `strawberry.enum`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1202](https://github.com/strawberry-graphql/strawberry/pull/1202/)\n\n\n0.75.0 - 2021-09-01\n-------------------\n\nThis release improves how we deal with custom scalars. Instead of being global\nthey are now scoped to the schema. This allows you to have multiple schemas in\nthe same project with different scalars.\n\nAlso you can now override the built in scalars with your own custom\nimplementation. Out of the box Strawberry provides you with custom scalars for\ncommon Python types like `datetime` and `Decimal`. If you require a custom\nimplementation of one of these built in scalars you can now pass a map of\noverrides to your schema:\n\n```python\nfrom datetime import datetime, timezone\nimport strawberry\n\nEpochDateTime = strawberry.scalar(\n    datetime,\n    serialize=lambda value: int(value.timestamp()),\n    parse_value=lambda value: datetime.fromtimestamp(int(value), timezone.utc),\n)\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def current_time(self) -> datetime:\n        return datetime.now()\n\n\nschema = strawberry.Schema(\n    Query,\n    scalar_overrides={\n        datetime: EpochDateTime,\n    },\n)\nresult = schema.execute_sync(\"{ currentTime }\")\nassert result.data == {\"currentTime\": 1628683200}\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1147](https://github.com/strawberry-graphql/strawberry/pull/1147/)\n\n\n0.74.1 - 2021-08-27\n-------------------\n\nThis release allows to install Strawberry along side `click` version 8.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1181](https://github.com/strawberry-graphql/strawberry/pull/1181/)\n\n\n0.74.0 - 2021-08-27\n-------------------\n\nThis release add full support for async directives and fixes and issue when\nusing directives and async extensions.\n\n```python\n@strawberry.type\nclass Query:\n    name: str = \"Banana\"\n\n\n@strawberry.directive(\n    locations=[DirectiveLocation.FIELD], description=\"Make string uppercase\"\n)\nasync def uppercase(value: str):\n    return value.upper()\n\n\nschema = strawberry.Schema(query=Query, directives=[uppercase])\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1179](https://github.com/strawberry-graphql/strawberry/pull/1179/)\n\n\n0.73.9 - 2021-08-26\n-------------------\n\nFix issue where `strawberry.Private` fields on converted Pydantic types were not added to the resulting dataclass.\n\nContributed by [Paul Sud](https://github.com/paul-sud) [PR #1173](https://github.com/strawberry-graphql/strawberry/pull/1173/)\n\n\n0.73.8 - 2021-08-26\n-------------------\n\nThis releases fixes a MyPy issue that prevented from using types created with\n`create_type` as base classes. This is now allowed and doesn't throw any error:\n\n```python\nimport strawberry\nfrom strawberry.tools import create_type\n\n\n@strawberry.field\ndef name() -> str:\n    return \"foo\"\n\n\nMyType = create_type(\"MyType\", [name])\n\n\nclass Query(MyType): ...\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1175](https://github.com/strawberry-graphql/strawberry/pull/1175/)\n\n\n0.73.7 - 2021-08-25\n-------------------\n\nThis release fixes an import error when trying to import `create_type` without having `opentelemetry` installed.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1171](https://github.com/strawberry-graphql/strawberry/pull/1171/)\n\n\n0.73.6 - 2021-08-24\n-------------------\n\nThis release adds support for the latest version of the optional opentelemetry dependency.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1170](https://github.com/strawberry-graphql/strawberry/pull/1170/)\n\n\n0.73.5 - 2021-08-24\n-------------------\n\nThis release adds support for the latest version of the optional opentelemetry dependency.\n\nContributed by [Joe Freeman](https://github.com/joefreeman) [PR #1169](https://github.com/strawberry-graphql/strawberry/pull/1169/)\n\n\n0.73.4 - 2021-08-24\n-------------------\n\nThis release allows background tasks to be set with the ASGI integration. Tasks can be set on the response in the context, and will then get run after the query result is returned.\n\n```python\nfrom starlette.background import BackgroundTask\n\n\n@strawberry.mutation\ndef create_flavour(self, info: strawberry.Info) -> str:\n    info.context[\"response\"].background = BackgroundTask(...)\n```\n\nContributed by [Joe Freeman](https://github.com/joefreeman) [PR #1168](https://github.com/strawberry-graphql/strawberry/pull/1168/)\n\n\n0.73.3 - 2021-08-24\n-------------------\n\nThis release caches attributes on the `Info` type which aren't delegated to the core info object.\n\nContributed by [A. Coady](https://github.com/coady) [PR #1167](https://github.com/strawberry-graphql/strawberry/pull/1167/)\n\n\n0.73.2 - 2021-08-23\n-------------------\n\nThis releases fixes an issue where you were not allowed\nto use duck typing and return a different type that the\ntype declared on the field when the type was implementing\nan interface. Now this works as long as you return a type\nthat has the same shape as the field type.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1150](https://github.com/strawberry-graphql/strawberry/pull/1150/)\n\n\n0.73.1 - 2021-08-23\n-------------------\n\nThis release improves execution performance significantly by lazy loading\nattributes on the `Info` type 🏎\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1165](https://github.com/strawberry-graphql/strawberry/pull/1165/)\n\n\n0.73.0 - 2021-08-22\n-------------------\n\nThis release adds support for asynchronous hooks to the Strawberry extension-system.\nAll available hooks can now be implemented either synchronously or asynchronously.\n\nIt's also possible to mix both synchronous and asynchronous hooks within one extension.\n\n\n```python\nfrom strawberry.extensions import Extension\n\n\nclass MyExtension(Extension):\n    async def on_request_start(self):\n        print(\"GraphQL request start\")\n\n    def on_request_end(self):\n        print(\"GraphQL request end\")\n```\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1142](https://github.com/strawberry-graphql/strawberry/pull/1142/)\n\n\n0.72.3 - 2021-08-22\n-------------------\n\nThis release refactors the reload feature of the built-in debug server. The refactor\nmade the debug server more responsive and allowed us to remove `hupper` from the\ndependencies.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1114](https://github.com/strawberry-graphql/strawberry/pull/1114/)\n\n\n0.72.2 - 2021-08-22\n-------------------\n\nThis releases pins graphql-core to only accept patch versions in order to prevent breaking changes since graphql-core doesn't properly follow semantic versioning.\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1162](https://github.com/strawberry-graphql/strawberry/pull/1162/)\n\n\n0.72.1 - 2021-08-18\n-------------------\n\nThis release improves the default logging format for errors to include more information about the errors. For example it will show were an error was originated in a request:\n\n```\nGraphQL request:2:5\n1 | query {\n2 |     example\n  |     ^\n3 | }\n```\n\nContributed by [Ivan Gonzalez](https://github.com/scratchmex) [PR #1152](https://github.com/strawberry-graphql/strawberry/pull/1152/)\n\n\n0.72.0 - 2021-08-18\n-------------------\n\nThis release adds support for asynchronous permission classes. The only difference to\ntheir synchronous counterpart is that the `has_permission` method is asynchronous.\n\n```python\nfrom strawberry.permission import BasePermission\n\n\nclass IsAuthenticated(BasePermission):\n    message = \"User is not authenticated\"\n\n    async def has_permission(self, source, info, **kwargs):\n        return True\n```\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1125](https://github.com/strawberry-graphql/strawberry/pull/1125/)\n\n\n0.71.3 - 2021-08-11\n-------------------\n\nGet a field resolver correctly when extending from a pydantic model\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1116](https://github.com/strawberry-graphql/strawberry/pull/1116/)\n\n\n0.71.2 - 2021-08-10\n-------------------\n\nThis release adds `asgi` as an extra dependencies group for Strawberry. Now\nyou can install the required dependencies needed to use Strawberry with\nASGI by running:\n\n```\npip install 'strawberry[asgi]'\n```\n\nContributed by [A. Coady](https://github.com/coady) [PR #1036](https://github.com/strawberry-graphql/strawberry/pull/1036/)\n\n\n0.71.1 - 2021-08-09\n-------------------\n\nThis releases adds `selected_fields` on the `info` objects and it\nallows to introspect the fields that have been selected in a GraphQL\noperation.\n\nThis can become useful to run optimisation based on the queried fields.\n\nContributed by [A. Coady](https://github.com/coady) [PR #874](https://github.com/strawberry-graphql/strawberry/pull/874/)\n\n\n0.71.0 - 2021-08-08\n-------------------\n\nThis release adds a query depth limit validation rule so that you can guard\nagainst malicious queries:\n\n```python\nimport strawberry\nfrom strawberry.schema import default_validation_rules\nfrom strawberry.tools import depth_limit_validator\n\n\n# Add the depth limit validator to the list of default validation rules\nvalidation_rules = default_validation_rules + [depth_limit_validator(3)]\n\nresult = schema.execute_sync(\n    \"\"\"\n    query MyQuery {\n      user {\n        pets {\n          owner {\n            pets {\n              name\n            }\n          }\n        }\n      }\n    }\n    \"\"\",\n    validation_rules=validation_rules,\n)\nassert len(result.errors) == 1\nassert result.errors[0].message == \"'MyQuery' exceeds maximum operation depth of 3\"\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1021](https://github.com/strawberry-graphql/strawberry/pull/1021/)\n\n\n0.70.4 - 2021-08-07\n-------------------\n\nAddition of `app.add_websocket_route(\"/subscriptions\", graphql_app)` to FastAPI example docs\n\nContributed by [Anton Melser](https://github.com/AntonOfTheWoods) [PR #1103](https://github.com/strawberry-graphql/strawberry/pull/1103/)\n\n\n0.70.3 - 2021-08-06\n-------------------\n\nThis release changes how we map Pydantic fields to types\nto allow using older version of Pydantic.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1071](https://github.com/strawberry-graphql/strawberry/pull/1071/)\n\n\n0.70.2 - 2021-08-04\n-------------------\n\nThis release makes the `strawberry server` command inform the user about missing\ndependencies required by the builtin debug server.\n\nAlso `hupper` a package only used by said command has been made optional.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1107](https://github.com/strawberry-graphql/strawberry/pull/1107/)\n\n\n0.70.1 - 2021-08-01\n-------------------\n\nSwitch CDN used to load GraphQLi dependencies from jsdelivr.com to unpkg.com\n\nContributed by [Tim Savage](https://github.com/timsavage) [PR #1096](https://github.com/strawberry-graphql/strawberry/pull/1096/)\n\n\n0.70.0 - 2021-07-23\n-------------------\n\nThis release adds support for disabling auto camel casing. It\ndoes so by introducing a new configuration parameter to the schema.\n\nYou can use it like so:\n\n```python\n@strawberry.type\nclass Query:\n    example_field: str = \"Example\"\n\n\nschema = strawberry.Schema(query=Query, config=StrawberryConfig(auto_camel_case=False))\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #798](https://github.com/strawberry-graphql/strawberry/pull/798/)\n\n\n0.69.4 - 2021-07-23\n-------------------\n\nFix for regression when defining inherited types with explicit fields.\n\nContributed by [A. Coady](https://github.com/coady) [PR #1076](https://github.com/strawberry-graphql/strawberry/pull/1076/)\n\n\n0.69.3 - 2021-07-21\n-------------------\n\nThis releases improves the MyPy plugin to be more forgiving of\nsettings like follow_imports = skip which would break the type checking.\n\nThis is a continuation of the previous release and fixes for type checking issues.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1078](https://github.com/strawberry-graphql/strawberry/pull/1078/)\n\n\n0.69.2 - 2021-07-21\n-------------------\n\nThis releases improves the MyPy plugin to be more forgiving of\nsettings like `follow_imports = skip` which would break the\ntype checking.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1077](https://github.com/strawberry-graphql/strawberry/pull/1077/)\n\n\n0.69.1 - 2021-07-20\n-------------------\n\nThis release removes a `TypeGuard` import to prevent errors\nwhen using older versions of `typing_extensions`.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1074](https://github.com/strawberry-graphql/strawberry/pull/1074/)\n\n\n0.69.0 - 2021-07-20\n-------------------\n\nRefactor of the library's typing internals. Previously, typing was handled\nindividually by fields, arguments, and objects with a hodgepodge of functions to tie it\ntogether. This change creates a unified typing system that the object, fields, and\narguments each hook into.\n\nMainly replaces the attributes that were stored on StrawberryArgument and\nStrawberryField with a hierarchy of StrawberryTypes.\n\nIntroduces `StrawberryAnnotation`, as well as `StrawberryType` and some subclasses,\nincluding `StrawberryList`, `StrawberryOptional`, and `StrawberryTypeVar`.\n\nThis is a breaking change if you were calling the constructor for `StrawberryField`,\n`StrawberryArgument`, etc. and using arguments such as `is_optional` or `child`.\n\n`@strawberry.field` no longer takes an argument called `type_`. It instead takes a\n`StrawberryAnnotation` called `type_annotation`.\n\nContributed by [ignormies](https://github.com/BryceBeagle) [PR #906](https://github.com/strawberry-graphql/strawberry/pull/906/)\n\n\n0.68.4 - 2021-07-19\n-------------------\n\nThis release fixes an issue with the federation printer that\nprevented using federation directives with types that were\nimplementing interfaces.\n\nThis is now allowed:\n\n```python\n@strawberry.interface\nclass SomeInterface:\n    id: strawberry.ID\n\n\n@strawberry.federation.type(keys=[\"upc\"], extend=True)\nclass Product(SomeInterface):\n    upc: str = strawberry.federation.field(external=True)\n```\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1068](https://github.com/strawberry-graphql/strawberry/pull/1068/)\n\n\n0.68.3 - 2021-07-15\n-------------------\n\nThis release changes our `graphiql.html` template to use a specific version of `js-cookie`\nto prevent a JavaScript error, see:\n\nhttps://github.com/js-cookie/js-cookie/issues/698\n\nContributed by [星](https://github.com/star2000) [PR #1062](https://github.com/strawberry-graphql/strawberry/pull/1062/)\n\n\n0.68.2 - 2021-07-07\n-------------------\n\nThis release fixes a regression that broke strawberry-graphql-django.\n\n`Field.get_results` now always receives the `info` argument.\n\nContributed by [Lauri Hintsala](https://github.com/la4de) [PR #1047](https://github.com/strawberry-graphql/strawberry/pull/1047/)\n\n\n0.68.1 - 2021-07-05\n-------------------\n\nThis release only changes some internal code to make future improvements\neasier.\n\nContributed by [Patrick Arminio](https://github.com/patrick91) [PR #1044](https://github.com/strawberry-graphql/strawberry/pull/1044/)\n\n\n0.68.0 - 2021-07-03\n-------------------\n\nMatching the behaviour of `graphql-core`, passing an incorrect ISO string value for a Time, Date or DateTime scalar now raises a `GraphQLError` instead of the original parsing error.\n\nThe `GraphQLError` will include the error message raised by the string parser, e.g. `Value cannot represent a DateTime: \"2021-13-01T09:00:00\". month must be in 1..12`\n\n0.67.1 - 2021-06-22\n-------------------\n\nFixes [#1022](https://github.com/strawberry-graphql/strawberry/issues/1022) by making starlette an optional dependency.\n\nContributed by [Marcel Wiegand](https://github.com/mawiegand) [PR #1027](https://github.com/strawberry-graphql/strawberry/pull/1027/)\n\n\n0.67.0 - 2021-06-17\n-------------------\n\nAdd ability to specific the graphql name for a resolver argument. E.g.,\n\n```python\nfrom typing import Annotated\nimport strawberry\n\n\n@strawberry.input\nclass HelloInput:\n    name: str = \"world\"\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(\n        self, input_: Annotated[HelloInput, strawberry.argument(name=\"input\")]\n    ) -> str:\n        return f\"Hi {input_.name}\"\n```\n\nContributed by [Daniel Bowring](https://github.com/dbowring) [PR #1024](https://github.com/strawberry-graphql/strawberry/pull/1024/)\n\n\n0.66.0 - 2021-06-15\n-------------------\n\nThis release fixes a bug that was preventing the use of an enum member as the\ndefault value for an argument.\n\nFor example:\n\n```python\n@strawberry.enum\nclass IceCreamFlavour(Enum):\n    VANILLA = \"vanilla\"\n    STRAWBERRY = \"strawberry\"\n    CHOCOLATE = \"chocolate\"\n    PISTACHIO = \"pistachio\"\n\n\n@strawberry.mutation\ndef create_flavour(self, flavour: IceCreamFlavour = IceCreamFlavour.STRAWBERRY) -> str:\n    return f\"{flavour.name}\"\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #1015](https://github.com/strawberry-graphql/strawberry/pull/1015/)\n\n\n0.65.5 - 2021-06-15\n-------------------\n\nThis release reverts the changes made in v0.65.4 that caused an issue leading to\ncircular imports when using the `strawberry-graphql-django` extension package.\n\nContributed by [Lauri Hintsala](https://github.com/la4de) [PR #1019](https://github.com/strawberry-graphql/strawberry/pull/1019/)\n\n\n0.65.4 - 2021-06-14\n-------------------\n\nThis release fixes the IDE integration where package `strawberry.django` could not be find by some editors like vscode.\n\nContributed by [Lauri Hintsala](https://github.com/la4de) [PR #994](https://github.com/strawberry-graphql/strawberry/pull/994/)\n\n\n0.65.3 - 2021-06-09\n-------------------\n\nThis release fixes the ASGI subscription implementation by handling disconnecting clients properly.\n\nAdditionally, the ASGI implementation has been internally refactored to match the AIOHTTP implementation.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1002](https://github.com/strawberry-graphql/strawberry/pull/1002/)\n\n\n0.65.2 - 2021-06-06\n-------------------\n\nThis release fixes a bug in the subscription implementations that prevented clients\nfrom selecting one of multiple subscription operations from a query. Client sent\nmessages like the following one are now handled as expected.\n\n```json\n{\n  \"type\": \"GQL_START\",\n  \"id\": \"DEMO\",\n  \"payload\": {\n    \"query\": \"subscription Sub1 { sub1 } subscription Sub2 { sub2 }\",\n    \"operationName\": \"Sub2\"\n  }\n}\n```\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #1000](https://github.com/strawberry-graphql/strawberry/pull/1000/)\n\n\n0.65.1 - 2021-06-02\n-------------------\n\nThis release fixes the upload of nested file lists. Among other use cases, having an\ninput type like shown below is now working properly.\n\n```python\nimport typing\nimport strawberry\nfrom strawberry.file_uploads import Upload\n\n\n@strawberry.input\nclass FolderInput:\n    files: typing.List[Upload]\n```\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #989](https://github.com/strawberry-graphql/strawberry/pull/989/)\n\n\n0.65.0 - 2021-06-01\n-------------------\n\nThis release extends the file upload support of all integrations to support the upload\nof file lists.\n\nHere is an example how this would work with the ASGI integration.\n\n```python\nimport typing\nimport strawberry\nfrom strawberry.file_uploads import Upload\n\n\n@strawberry.type\nclass Mutation:\n    @strawberry.mutation\n    async def read_files(self, files: typing.List[Upload]) -> typing.List[str]:\n        contents = []\n        for file in files:\n            content = (await file.read()).decode()\n            contents.append(content)\n        return contents\n```\n\nCheck out the documentation to learn how the same can be done with other integrations.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #979](https://github.com/strawberry-graphql/strawberry/pull/979/)\n\n\n0.64.5 - 2021-05-28\n-------------------\n\nThis release fixes that AIOHTTP subscription requests were not properly separated.\nThis could lead to subscriptions terminating each other.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #970](https://github.com/strawberry-graphql/strawberry/pull/970/)\n\n\n0.64.4 - 2021-05-28\n-------------------\n\n* Remove usages of `undefined` in favour of `UNSET`\n* Change the signature of `StrawberryField` to make it easier to instantiate\ndirectly. Also change `default_value` argument to `default`\n* Rename `default_value` to `default` in `StrawberryArgument`\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #916](https://github.com/strawberry-graphql/strawberry/pull/916/)\n\n\n0.64.3 - 2021-05-26\n-------------------\n\nThis release integrates the `strawberry-graphql-django` package into Strawberry\ncore so that it's possible to use the Django extension package directly via the\n`strawberry.django` namespace.\n\nYou still need to install `strawberry-graphql-django` if you want to use the\nextended Django support.\n\nSee: https://github.com/strawberry-graphql/strawberry-graphql-django\n\nContributed by [Lauri Hintsala](https://github.com/la4de) [PR #949](https://github.com/strawberry-graphql/strawberry/pull/949/)\n\n\n0.64.2 - 2021-05-26\n-------------------\n\nThis release fixes that enum values yielded from async generators were not resolved\nproperly.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #969](https://github.com/strawberry-graphql/strawberry/pull/969/)\n\n\n0.64.1 - 2021-05-23\n-------------------\n\nThis release fixes a max recursion depth error in the AIOHTTP subscription\nimplementation.\n\nContributed by [Jonathan Ehwald](https://github.com/DoctorJohn) [PR #966](https://github.com/strawberry-graphql/strawberry/pull/966/)\n\n\n0.64.0 - 2021-05-22\n-------------------\n\nThis release adds an extensions field to the `GraphQLHTTPResponse` type and also exposes it in the view's response.\n\nThis field gets populated by Strawberry extensions: https://strawberry.rocks/docs/guides/extensions#get-results\n\nContributed by [lijok](https://github.com/lijok) [PR #903](https://github.com/strawberry-graphql/strawberry/pull/903/)\n\n\n0.63.2 - 2021-05-22\n-------------------\n\nAdd `root_value` to `ExecutionContext` type so that it can be accessed in\nextensions.\n\nExample:\n\n```python\nimport strawberry\nfrom strawberry.extensions import Extension\n\n\nclass MyExtension(Extension):\n    def on_request_end(self):\n        root_value = self.execution_context.root_value\n        # do something with the root_value\n```\n\nContributed by [Jonathan Kim](https://github.com/jkimbo) [PR #959](https://github.com/strawberry-graphql/strawberry/pull/959/)\n\n\n0.63.1 - 2021-05-20\n-------------------\n\nNew deployment process to release new Strawberry releases\n\n[Marco Acierno](https://github.com/marcoacierno) [PR #957](https://github.com/strawberry-graphql/strawberry/pull/957/)\n\n\n0.63.0 - 2021-05-19\n-------------------\n\nThis release adds extra values to the ExecutionContext object so that it can be\nused by extensions and the `Schema.process_errors` function.\n\nThe full ExecutionContext object now looks like this:\n\n```python\nfrom graphql import ExecutionResult as GraphQLExecutionResult\nfrom graphql.error.graphql_error import GraphQLError\nfrom graphql.language import DocumentNode as GraphQLDocumentNode\n\n\n@dataclasses.dataclass\nclass ExecutionContext:\n    query: str\n    context: Any = None\n    variables: Optional[Dict[str, Any]] = None\n    operation_name: Optional[str] = None\n\n    graphql_document: Optional[GraphQLDocumentNode] = None\n    errors: Optional[List[GraphQLError]] = None\n    result: Optional[GraphQLExecutionResult] = None\n```\n\nand can be accessed in any of the extension hooks:\n\n```python\nfrom strawberry.extensions import Extension\n\n\nclass MyExtension(Extension):\n    def on_request_end(self):\n        result = self.execution_context.result\n        # Do something with the result\n\n\nschema = strawberry.Schema(query=Query, extensions=[MyExtension])\n```\n\n---\n\nNote: This release also removes the creation of an ExecutionContext object in the web\nframework views. If you were relying on overriding the `get_execution_context`\nfunction then you should change it to `get_request_data` and use the\n`strawberry.http.parse_request_data` function to extract the pieces of data\nneeded from the incoming request.\n\n0.62.1 - 2021-05-19\n-------------------\n\nThis releases fixes an issue with the debug server that prevented the\nusage of dataloaders, see: https://github.com/strawberry-graphql/strawberry/issues/940\n\n0.62.0 - 2021-05-19\n-------------------\n\nThis release adds support for GraphQL subscriptions to the AIOHTTP integration.\nSubscription support works out of the box and does not require any additional\nconfiguration.\n\nHere is an example how to get started with subscriptions in general. Note that by\nspecification GraphQL schemas must always define a query, even if only subscriptions\nare used.\n\n```python\nimport asyncio\nimport typing\nimport strawberry\n\n\n@strawberry.type\nclass Subscription:\n    @strawberry.subscription\n    async def count(self, target: int = 100) -> typing.AsyncGenerator[int, None]:\n        for i in range(target):\n            yield i\n            await asyncio.sleep(0.5)\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def _unused(self) -> str:\n        return \"\"\n\n\nschema = strawberry.Schema(subscription=Subscription, query=Query)\n```\n\n0.61.3 - 2021-05-13\n-------------------\n\nFix `@requires(fields: [\"email\"])` and `@provides(fields: [\"name\"])` usage on a Federation field\n\nYou can use `@requires` to specify which fields you need to resolve a field\n\n```python\nimport strawberry\n\n\n@strawberry.federation.type(keys=[\"id\"], extend=True)\nclass Product:\n    id: strawberry.ID = strawberry.federation.field(external=True)\n    code: str = strawberry.federation.field(external=True)\n\n    @classmethod\n    def resolve_reference(cls, id: strawberry.ID, code: str):\n        return cls(id=id, code=code)\n\n    @strawberry.federation.field(requires=[\"code\"])\n    def my_code(self) -> str:\n        return self.code\n```\n\n`@provides` can be used to specify what fields are going to be resolved\nby the service itself without having the Gateway to contact the external service\nto resolve them.\n\n0.61.2 - 2021-05-08\n-------------------\n\nThis release adds support for the info param in resolve_reference:\n\n```python\n@strawberry.federation.type(keys=[\"upc\"])\nclass Product:\n    upc: str\n    info: str\n\n    @classmethod\n    def resolve_reference(cls, info, upc):\n        return Product(upc, info)\n```\n\n> Note: resolver reference is used when using Federation, similar to [Apollo server's __resolveReference](https://apollographql.com/docs/federation/api/apollo-federation/#__resolvereference)\n\n0.61.1 - 2021-05-05\n-------------------\n\nThis release extends the `strawberry server` command to allow the specification\nof a schema symbol name within a module:\n\n```sh\nstrawberry server mypackage.mymodule:myschema\n```\n\nThe schema symbol name defaults to `schema` making this change backwards compatible.\n\n0.61.0 - 2021-05-04\n-------------------\n\nThis release adds file upload support to the [Sanic](https://sanicframework.org)\nintegration. No additional configuration is required to enable file upload support.\n\nThe following example shows how a file upload based mutation could look like:\n\n```python\nimport strawberry\nfrom strawberry.file_uploads import Upload\n\n\n@strawberry.type\nclass Mutation:\n    @strawberry.mutation\n    def read_text(self, text_file: Upload) -> str:\n        return text_file.read().decode()\n```\n\n0.60.0 - 2021-05-04\n-------------------\n\nThis release adds an `export-schema` command to the Strawberry CLI.\nUsing the command you can print your schema definition to your console.\nPipes and redirection can be used to store the schema in a file.\n\nExample usage:\n\n```sh\nstrawberry export-schema mypackage.mymodule:myschema > schema.graphql\n```\n\n0.59.1 - 2021-05-04\n-------------------\n\nThis release fixes an issue that prevented using `source` as name of an argument\n\n0.59.0 - 2021-05-03\n-------------------\n\nThis release adds an [aiohttp](https://github.com/aio-libs/aiohttp) integration for\nStrawberry. The integration provides a `GraphQLView` class which can be used to\nintegrate Strawberry with aiohttp:\n\n```python\nimport strawberry\nfrom aiohttp import web\nfrom strawberry.aiohttp.views import GraphQLView\n\n\n@strawberry.type\nclass Query:\n    pass\n\n\nschema = strawberry.Schema(query=Query)\n\napp = web.Application()\n\napp.router.add_route(\"*\", \"/graphql\", GraphQLView(schema=schema))\n```\n\n0.58.0 - 2021-05-03\n-------------------\n\nThis release adds a function called `create_type` to create a Strawberry type from a list of fields.\n\n```python\nimport strawberry\nfrom strawberry.tools import create_type\n\n\n@strawberry.field\ndef hello(info) -> str:\n    return \"World\"\n\n\ndef get_name(info) -> str:\n    return info.context.user.name\n\n\nmy_name = strawberry.field(name=\"myName\", resolver=get_name)\n\nQuery = create_type(\"Query\", [hello, my_name])\n\nschema = strawberry.Schema(query=Query)\n```\n\n0.57.4 - 2021-04-28\n-------------------\n\nThis release fixes an issue when using nested lists, this now works properly:\n\n```python\ndef get_polygons() -> List[List[float]]:\n    return [[2.0, 6.0]]\n\n\n@strawberry.type\nclass Query:\n    polygons: List[List[float]] = strawberry.field(resolver=get_polygons)\n\n\nschema = strawberry.Schema(query=Query)\n\nquery = \"{ polygons }\"\n\nresult = schema.execute_sync(query, root_value=Query())\n```\n\n0.57.3 - 2021-04-27\n-------------------\n\nThis release fixes support for generic types so that now we can also use generics for input types:\n\n```python\nT = typing.TypeVar(\"T\")\n\n\n@strawberry.input\nclass Input(typing.Generic[T]):\n    field: T\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def field(self, input: Input[str]) -> str:\n        return input.field\n```\n\n0.57.2 - 2021-04-19\n-------------------\n\nThis release fixes a bug that prevented from extending a generic type when\npassing a type, like here:\n\n```python\nT = typing.TypeVar(\"T\")\n\n\n@strawberry.interface\nclass Node(typing.Generic[T]):\n    id: strawberry.ID\n\n    def _resolve(self) -> typing.Optional[T]:\n        return None\n\n\n@strawberry.type\nclass Book(Node[str]):\n    name: str\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def books(self) -> typing.List[Book]:\n        return list()\n```\n\n0.57.1 - 2021-04-17\n-------------------\n\nFix converting pydantic objects to strawberry types using `from_pydantic` when having a falsy value like 0 or ''.\n\n0.57.0 - 2021-04-14\n-------------------\n\nAdd a `process_errors` method to `strawberry.Schema` which logs all exceptions during execution to a `strawberry.execution` logger.\n\n0.56.3 - 2021-04-13\n-------------------\n\nThis release fixes the return type value from info argument of resolver.\n\n0.56.2 - 2021-04-07\n-------------------\n\nThis release improves Pydantic support to support default values and factories.\n\n0.56.1 - 2021-04-06\n-------------------\n\nThis release fixes the pydantic integration where you couldn't\nconvert objects to pydantic instance when they didn't have a\ndefault value.\n\n0.56.0 - 2021-04-05\n-------------------\n\nAdd --app-dir CLI option to specify where to find the schema module to load when using\nthe debug server.\n\nFor example if you have a _schema_ module in a _my_app_ package under ./src, then you\ncan run the debug server with it using:\n\n```bash\nstrawberry server --app-dir src my_app.schema\n```\n\n0.55.0 - 2021-04-05\n-------------------\n\nAdd support for `default` and `default_factory` arguments in `strawberry.field`\n\n```python\n@strawberry.type\nclass Droid:\n    name: str = strawberry.field(default=\"R2D2\")\n    aka: List[str] = strawberry.field(default_factory=lambda: [\"Artoo\"])\n```\n\n0.54.0 - 2021-04-03\n-------------------\n\nInternal refactoring.\n\n* Renamed `StrawberryArgument` to `StrawberryArgumentAnnotation`\n* Renamed `ArgumentDefinition` to `StrawberryArgument`\n    * Renamed `ArgumentDefinition(type: ...)` argument to\n      `StrawberryArgument(type_: ...)`\n\n0.53.4 - 2021-04-03\n-------------------\n\nFixed issue with django multipart/form-data uploads\n\n0.53.3 - 2021-04-02\n-------------------\n\nFix issue where StrawberryField.graphql_name would always be camelCased\n\n0.53.2 - 2021-04-01\n-------------------\n\nThis release fixes an issue with the generated `__eq__` and `__repr__` methods when defining\nfields with resolvers.\n\nThis now works properly:\n\n```python\n@strawberry.type\nclass Query:\n    a: int\n\n    @strawberry.field\n    def name(self) -> str:\n        return \"A\"\n\n\nassert Query(1) == Query(1)\nassert Query(1) != Query(2)\n```\n\n0.53.1 - 2021-03-31\n-------------------\n\nGracefully handle user-induced subscription errors.\n\n0.53.0 - 2021-03-30\n-------------------\n\n* `FieldDefinition` has been absorbed into `StrawberryField` and now no longer exists.\n\n* `FieldDefinition.origin_name` and `FieldDefinition.name`  have been replaced with\n  `StrawberryField.python_name` and `StrawberryField.graphql_name`. This should help\n  alleviate some backend confusion about which should be used for certain situations.\n\n* `strawberry.types.type_resolver.resolve_type` has been split into\n  `resolve_type_argument` and `_resolve_type` (for arguments) until `StrawberryType` is\n  implemented to combine them back together. This was done to reduce the scope of this\n  PR and defer changing `ArgumentDefinition` (future `StrawberryArgument`) until a\n  different PR.\n\n> Note: The constructor signature for `StrawberryField` has `type_` as an argument\n> instead of `type` as was the case for `FieldDefinition`. This is done to prevent\n> shadowing of builtins.\n\n> Note: `StrawberryField.name` still exists because of the way dataclass `Field`s\nwork, but is an alias for `StrawberryField.python_name`.\n\n0.52.1 - 2021-03-28\n-------------------\n\nInclude `field_nodes` in Strawberry info object.\n\n0.52.0 - 2021-03-23\n-------------------\n\nChange `get_context` to be async for sanic integration\n\n0.51.1 - 2021-03-22\n-------------------\n\nConfigures GraphiQL to attach CSRF cookies as request headers sent to the GQL server.\n\n0.51.0 - 2021-03-22\n-------------------\n\nExpose Strawberry Info object instead of GraphQLResolveInfo in resolvers\n\n0.50.3 - 2021-03-22\n-------------------\n\nDjango 3.2 support\n\n0.50.2 - 2021-03-22\n-------------------\n\nRaise exception when un-serializable payload is provided to the Django view.\n\n0.50.1 - 2021-03-18\n-------------------\n\nThis release fixes a regression with the django sending the wrong content type.\n\n0.50.0 - 2021-03-18\n-------------------\n\nThis release updates get_context in the django integration to also receive a temporal response object that can be used to set headers, cookies and status code.\n\n\n```\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def abc(self, info: strawberry.Info) -> str:\n        info.context.response.status_code = 418\n\n        return \"ABC\"\n```\n\n0.49.2 - 2021-03-18\n-------------------\n\nThis releases changes how we define resolvers internally, now we have one single resolver for async and sync code.\n\n0.49.1 - 2021-03-14\n-------------------\n\nFix bug when using arguments inside a type that uses typing.Generics\n\n0.49.0 - 2021-03-12\n-------------------\n\nThis releases updates the ASGI class to make it easier to override `get_http_response`.\n\n`get_http_response` has been now removed from strawberry.asgi.http and been moved to be\na method on the ASGI class.\n\nA new `get_graphiql_response` method has been added to make it easier to provide a different GraphiQL interface.\n\n0.48.3 - 2021-03-11\n-------------------\n\nThis release updates `get_context` in the asgi integration to also\nreceive a temporal response object that can be used to set headers\nand cookies.\n\n0.48.2 - 2021-03-09\n-------------------\n\nThis release fixes a bug when using the debug server and upload a file\n\n0.48.1 - 2021-03-03\n-------------------\n\nFix DataLoader docs typo.\n\n0.48.0 - 2021-03-02\n-------------------\n\n# New Features\nAdded support for sanic webserver.\n\n# Changelog\n`ExecutionResult` was erroneously defined twice in the repository. The entry in `strawberry.schema.base` has been removed. If you were using it, switch to using\n`strawberry.types.ExecutionResult` instead:\n\n```python\nfrom strawberry.types import ExecutionResult\n```\n\n0.47.1 - 2021-03-02\n-------------------\n\nEnable using .get for django context as well as for the square brackets notation.\n\n0.47.0 - 2021-02-28\n-------------------\n\nEnable dot notation for django context request\n\n0.46.0 - 2021-02-26\n-------------------\n\nSupporting multipart file uploads on Flask\n\n0.45.4 - 2021-02-16\n-------------------\n\nExpose execution info under `strawberry.types.Info`\n\n0.45.3 - 2021-02-08\n-------------------\n\nFixes mypy failing when casting in enum decorator\n\n0.45.2 - 2021-02-08\n-------------------\n\nSuggest installing the debug server on the getting started docs, so examples can work without import errors of uvicorn\n\n0.45.1 - 2021-01-31\n-------------------\n\nFix Generic name generation to use the custom name specified in Strawberry if available\n\n```python\n@strawberry.type(name=\"AnotherName\")\nclass EdgeName:\n    node: str\n\n\n@strawberry.type\nclass Connection(Generic[T]):\n    edge: T\n```\n\nwill result in `AnotherNameConnection`, and not `EdgeNameConnection` as before.\n\n0.45.0 - 2021-01-27\n-------------------\n\nThis release add the ability to disable query validation by setting\n`validate_queries` to `False`\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self) -> str:\n        return \"Hello\"\n\n\nschema = strawberry.Schema(Query, validate_queries=validate_queries)\n```\n\n0.44.12 - 2021-01-23\n--------------------\n\nThis release adds support for MyPy==0.800\n\n0.44.11 - 2021-01-22\n--------------------\n\nFix for a duplicated input types error.\n\n0.44.10 - 2021-01-22\n--------------------\n\nInternal codebase refactor. Clean up, consolidate, and standardize the conversion layer\nbetween Strawberry types and GraphQL Core types; with room for further future\nabstraction to support other GraphQL backends.\n\n0.44.9 - 2021-01-22\n-------------------\n\nImproves typing when decorating an enum with kwargs like description and name. Adds more mypy tests.\n\n0.44.8 - 2021-01-20\n-------------------\n\nThis releases fixes a wrong dependency issue\n\n0.44.7 - 2021-01-13\n-------------------\n\nSupporting multipart uploads as described here: https://github.com/jaydenseric/graphql-multipart-request-spec for ASGI.\n\n0.44.6 - 2021-01-02\n-------------------\n\nFix Strawberry to handle multiple subscriptions at the same time\n\n0.44.5 - 2020-12-28\n-------------------\n\nPass `execution_context_class` to Schema creation\n\n0.44.4 - 2020-12-27\n-------------------\n\nAdd support for converting more pydantic types\n\n- pydantic.EmailStr\n- pydantic.AnyUrl\n- pydantic.AnyHttpUrl\n- pydantic.HttpUrl\n- pydantic.PostgresDsn\n- pydantic.RedisDsn\n\n0.44.3 - 2020-12-16\n-------------------\n\nThis releases fixes an issue where methods marked as field were\nremoved from the class.\n\n0.44.2 - 2020-11-22\n-------------------\n\nValidate the schema when it is created instead of at runtime.\n\n0.44.1 - 2020-11-20\n-------------------\n\nThis release adds support for strawberry.federation.field under mypy.\n\n0.44.0 - 2020-11-19\n-------------------\n\nCreation of a `[debug-server]` extra, which is required to get going quickly with this project!\n\n```\npip install strawberry-graphql\n```\n\nWill now install the primary portion of of the framework, allowing you to build your GraphQL\nschema using the dataclasses pattern.\n\nTo get going quickly, you can install `[debug-server]` which brings along a server which allows\nyou to develop your API dynamically, assuming your schema is defined in the `app` module:\n\n```\npip install 'strawberry-graphql[debug-server]'\nstrawberry server app\n```\n\nTypically, in a production environment, you'd want to bring your own server :)\n\n0.43.2 - 2020-11-19\n-------------------\n\nThis release fixes an issue when using unions inside generic types, this is now\nsupported:\n\n\n```python\n@strawberry.type\nclass Dog:\n    name: str\n\n\n@strawberry.type\nclass Cat:\n    name: str\n\n\n@strawberry.type\nclass Connection(Generic[T]):\n    nodes: List[T]\n\n\n@strawberry.type\nclass Query:\n    connection: Connection[Union[Dog, Cat]]\n```\n\n0.43.1 - 2020-11-18\n-------------------\n\nThis releases fixes an issue with Strawberry requiring Pydantic even when not used.\n\n0.43.0 - 2020-11-18\n-------------------\n\nThis release adds support for creating types from Pydantic models. Here's an\nexample:\n\n```python\nimport strawberry\n\nfrom datetime import datetime\nfrom typing import List, Optional\nfrom pydantic import BaseModel\n\n\nclass UserModel(BaseModel):\n    id: int\n    name = \"John Doe\"\n    signup_ts: Optional[datetime] = None\n    friends: List[int] = []\n\n\n@strawberry.experimental.pydantic.type(\n    model=UserModel, fields=[\"id\", \"name\", \"friends\"]\n)\nclass UserType:\n    pass\n```\n\n0.42.7 - 2020-11-18\n-------------------\n\nAdd some checks to make sure the types passed to `.union` are valid.\n\n0.42.6 - 2020-11-18\n-------------------\n\nFix issue preventing reusing the same resolver for multiple fields, like here:\n\n```python\ndef get_name(self) -> str:\n    return \"Name\"\n\n\n@strawberry.type\nclass Query:\n    name: str = strawberry.field(resolver=get_name)\n    name_2: str = strawberry.field(resolver=get_name)\n```\n\n0.42.5 - 2020-11-18\n-------------------\n\nAnother small improvement for mypy, this should prevent mypy from crashing when it can't find a type\n\n0.42.4 - 2020-11-18\n-------------------\n\nThis release fixes another issue with mypy where it wasn't able to identify strawberry fields.\nIt also now knows that fields with resolvers aren't put in the __init__ method of the class.\n\n0.42.3 - 2020-11-17\n-------------------\n\nThis release type improves support for strawberry.field in mypy,\nnow we don't get `Attributes without a default cannot follow attributes with one`\nwhen using strawberry.field before a type without a default.\n\n0.42.2 - 2020-11-17\n-------------------\n\nBugfix to allow the use of `UNSET` as a default value for arguments.\n\n```python\nimport strawberry\nfrom strawberry.arguments import UNSET, is_unset\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self, name: Optional[str] = UNSET) -> str:\n        if is_unset(name):\n            return \"Hi there\"\n        return \"Hi {name}\"\n\n\nschema = strawberry.Schema(query=Query)\n\nresult = schema.execute_async(\"{ hello }\")\nassert result.data == {\"hello\": \"Hi there\"}\n\nresult = schema.execute_async('{ hello(name: \"Patrick\" }')\nassert result.data == {\"hello\": \"Hi Patrick\"}\n```\n\nSDL:\n\n```graphql\ntype Query {\n  hello(name: String): String!\n}\n```\n\n0.42.1 - 2020-11-17\n-------------------\n\nThis release improves mypy support for strawberry.field\n\n0.42.0 - 2020-11-17\n-------------------\n\n* Completely revamped how resolvers are created, stored, and managed by\n  StrawberryField. Now instead of monkeypatching a `FieldDefinition` object onto\n  the resolver function itself, all resolvers are wrapped inside of a\n  `StrawberryResolver` object with the useful properties.\n* `arguments.get_arguments_from_resolver` is now the\n  `StrawberryResolver.arguments` property\n* Added a test to cover a situation where a field is added to a StrawberryType\n  manually using `dataclasses.field` but not annotated. This was previously\n  uncaught.\n\n0.41.1 - 2020-11-14\n-------------------\n\nThis release fixes an issue with forward types\n\n0.41.0 - 2020-11-06\n-------------------\n\nThis release adds a built-in dataloader. Example:\n\n```python\nasync def app():\n    async def idx(keys):\n        return keys\n\n    loader = DataLoader(load_fn=idx)\n\n    [value_a, value_b, value_c] = await asyncio.gather(\n        loader.load(1),\n        loader.load(2),\n        loader.load(3),\n    )\n\n    assert value_a == 1\n    assert value_b == 2\n    assert value_c == 3\n```\n\n0.40.2 - 2020-11-05\n-------------------\n\nAllow interfaces to implement other interfaces.\nThis may be useful if you are using the relay pattern\nor if you want to model base interfaces that can be extended.\n\nExample:\n```python\nimport strawberry\n\n\n@strawberry.interface\nclass Error:\n    message: str\n\n\n@strawberry.interface\nclass FieldError(Error):\n    message: str\n    field: str\n\n\n@strawberry.type\nclass PasswordTooShort(FieldError):\n    message: str\n    field: str\n    fix: str\n```\nProduces the following SDL:\n```graphql\ninterface Error {\n  message: String!\n}\n\ninterface FieldError implements Error {\n  message: String!\n  field: String!\n}\n\ntype PasswordTooShort implements FieldError & Error {\n  message: String!\n  field: String!\n  fix: String!\n}\n```\n\n0.40.1 - 2020-11-05\n-------------------\n\nFix mypy plugin to handle bug where the `types` argument to `strawberry.union` is passed in as a keyword argument instead of a position one.\n\n```python\nMyUnion = strawberry.union(types=(TypeA, TypeB), name=\"MyUnion\")\n```\n\n0.40.0 - 2020-11-03\n-------------------\n\nThis release adds a new AsyncGraphQLView for django.\n\n0.39.4 - 2020-11-02\n-------------------\n\nImprove typing for `field` and `StrawberryField`.\n\n0.39.3 - 2020-10-30\n-------------------\n\nThis release disable implicit re-export of modules. This fixes Strawberry for you if you were using `implicit_reexport = False` in your MyPy config.\n\n0.39.2 - 2020-10-29\n-------------------\n\nThis fixes the prettier pre-lint check.\n\n0.39.1 - 2020-10-28\n-------------------\n\nFix issue when using `strawberry.enum(module.EnumClass)` in mypy\n\n0.39.0 - 2020-10-27\n-------------------\n\nThis release adds support to mark a field as deprecated via `deprecation_reason`\n\n0.38.1 - 2020-10-27\n-------------------\n\nSet default value to null in the schema when it's set to None\n\n0.38.0 - 2020-10-27\n-------------------\n\nRegister UUID's as a custom scalar type instead of the ID type.\n\n⚠️ This is a potential breaking change because inputs of type UUID are now parsed as instances of uuid.UUID instead of strings as they were before.\n\n0.37.7 - 2020-10-27\n-------------------\n\nThis release fixes a bug when returning list in async resolvers\n\n0.37.6 - 2020-10-23\n-------------------\n\nThis release improves how we check for enums\n\n0.37.5 - 2020-10-23\n-------------------\n\nThis release improves how we handle enum values when returning lists of enums.\n\n0.37.4 - 2020-10-22\n-------------------\n\nThis releases adds a workaround to prevent mypy from crashing in specific occasions\n\n0.37.3 - 2020-10-22\n-------------------\n\nThis release fixes an issue preventing to return enums in lists\n\n0.37.2 - 2020-10-21\n-------------------\n\nThis release improves support for strawberry.enums when type checking with mypy.\n\n0.37.1 - 2020-10-20\n-------------------\n\nFix ASGI view to call `get_context` during a websocket request\n\n0.37.0 - 2020-10-18\n-------------------\n\nAdd support for adding a description to field arguments using the [`Annotated`](https://docs.python.org/3/library/typing.html#typing.Annotated) type:\n\n```python\nfrom typing import Annotated\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def user_by_id(\n        id: Annotated[str, strawberry.argument(description=\"The ID of the user\")]\n    ) -> User: ...\n```\n\nwhich results in the following schema:\n\n```graphql\ntype Query {\n  userById(\n    \"\"\"The ID of the user\"\"\"\n    id: String\n  ): User!\n}\n```\n\n**Note:** if you are not using Python v3.9 or greater you will need to import `Annotated` from `typing_extensions`\n\n0.36.4 - 2020-10-17\n-------------------\n\nThis release adds support for using strawberry.enum as a function with MyPy,\nthis is now valid typed code:\n\n```python\nfrom enum import Enum\n\nimport strawberry\n\n\nclass IceCreamFlavour(Enum):\n    VANILLA = \"vanilla\"\n    STRAWBERRY = \"strawberry\"\n    CHOCOLATE = \"chocolate\"\n\n\nFlavour = strawberry.enum(IceCreamFlavour)\n```\n\n0.36.3 - 2020-10-16\n-------------------\n\nAdd `__str__` to `Schema` to allow printing schema sdl with `str(schema)`\n\n0.36.2 - 2020-10-12\n-------------------\n\nExtend support for parsing isoformat datetimes,\nadding a dependency on the `dateutil` library.\nFor example: \"2020-10-12T22:00:00.000Z\"\ncan now be parsed as a datetime with a UTC timezone.\n\n0.36.1 - 2020-10-11\n-------------------\n\nAdd `schema.introspect()` method to return introspection result of the schema.\nThis might be useful for tools like `apollo codegen` or `graphql-voyager` which\nexpect a full json representation of the schema\n\n0.36.0 - 2020-10-06\n-------------------\n\nThis releases adds a new extension for OpenTelemetry.\n\n```python\nimport asyncio\n\nfrom opentelemetry import trace\nfrom opentelemetry.sdk.trace import TracerProvider\nfrom opentelemetry.sdk.trace.export import (\n    ConsoleSpanExporter,\n    SimpleExportSpanProcessor,\n)\n\nimport strawberry\nfrom strawberry.extensions.tracing import OpenTelemetryExtension\n\n\ntrace.set_tracer_provider(TracerProvider())\ntrace.get_tracer_provider().add_span_processor(\n    SimpleExportSpanProcessor(ConsoleSpanExporter())\n)\n\n\n@strawberry.type\nclass User:\n    name: str\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    async def user(self, name: str) -> User:\n        await asyncio.sleep(0.1)\n        return User(name)\n\n\nschema = strawberry.Schema(Query, extensions=[OpenTelemetryExtension])\n```\n\n0.35.5 - 2020-10-05\n-------------------\n\nThis release disables tracing for default resolvers and introspection queries\n\n0.35.4 - 2020-10-05\n-------------------\n\nThis releases allows UNSET to be used anywhere and prevents mypy to report an error.\n\n0.35.3 - 2020-10-05\n-------------------\n\nThis releases adds support for strawberry.union inside mypy.\n\n0.35.2 - 2020-10-04\n-------------------\n\nThis release fixes an issue with the extension runner and async resolvers\n\n0.35.1 - 2020-10-02\n-------------------\n\nFixed bug where you couldn't use the same Union type multiple times in a schema.\n\n0.35.0 - 2020-10-02\n-------------------\n\nAdded `strawberry.Private` type to mark fields as \"private\" so they don't show up in the GraphQL schema.\n\nExample:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass User:\n    age: strawberry.Private[int]\n\n    @strawberry.field\n    def age_in_months(self) -> int:\n        return self.age * 12\n```\n\n0.34.2 - 2020-10-01\n-------------------\n\nFix typo in type_resolver.py\n\n0.34.1 - 2020-09-30\n-------------------\n\nThis release fixes an issue with mypy when doing the following:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass User:\n    name: str = strawberry.field(description=\"Example\")\n```\n\n0.34.0 - 2020-09-30\n-------------------\n\nThis release adds support for Apollo Tracing and support for creating Strawberry\nextensions, here's how you can enable Apollo tracing:\n\n```python\nfrom strawberry.extensions.tracing import ApolloTracingExtension\n\nschema = strawberry.Schema(query=Query, extensions=[ApolloTracingExtension])\n```\n\nAnd here's an example of custom extension:\n\n```python\nfrom strawberry.extensions import Extension\n\n\nclass MyExtension(Extension):\n    def get_results(self):\n        return {\"example\": \"this is an example for an extension\"}\n\n\nschema = strawberry.Schema(query=Query, extensions=[MyExtension])\n```\n\n0.33.1 - 2020-09-25\n-------------------\n\nThis release fixes an issue when trying to print a type\nwith a UNSET default value\n\n0.33.0 - 2020-09-24\n-------------------\n\n* `UnionDefinition` has been renamed to `StrawberryUnion`\n* `strawberry.union` now returns an instance of `StrawberryUnion` instead of a\ndynamically generated class instance with a `_union_definition` attribute of\ntype `UnionDefinition`.\n\n0.32.4 - 2020-09-22\n-------------------\n\nThis release adds the `py.typed` file for better mypy support.\n\n0.32.3 - 2020-09-07\n-------------------\n\nThis release fixes another issue with extending types.\n\n0.32.2 - 2020-09-07\n-------------------\n\nThis releases fixes an issue when extending types, now\nfields should work as they were working before even\nwhen extending an existing type.\n\n0.32.1 - 2020-09-06\n-------------------\n\nImproves tooling by adding `flake8-eradicate` to `flake8` `pre-commit` hook..\n\n0.32.0 - 2020-09-06\n-------------------\n\nPreviously, `strawberry.field` had redundant arguments for the resolver, one for\nwhen `strawberry.field` was used as a decorator, and one for when it was used as\na function. These are now combined into a single argument.\n\nThe `f` argument of `strawberry.field` no longer exists. This is a\nbackwards-incompatible change, but should not affect many users. The `f`\nargument was the first argument for `strawberry.field` and its use was only\ndocumented without the keyword. The fix is very straight-forward: replace any\n`f=` kwarg with `resolver=`.\n\n```python\n@strawberry.type\nclass Query:\n    my_int: int = strawberry.field(f=lambda: 5)\n    # becomes\n    my_int: int = strawberry.field(resolver=lambda: 5)\n\n    # no change\n    @strawberry.field\n    def my_float(self) -> float:\n        return 5.5\n```\n\nOther (minor) breaking changes\n* `MissingArgumentsAnnotationsError`'s message now uses the original Python\nfield name instead of the GraphQL field name. The error can only be thrown while\ninstantiating a strawberry.field, so the Python field name should be more\nhelpful.\n* As a result, `strawberry.arguments.get_arguments_from_resolver()` now only\ntakes one field -- the `resolver` Callable.\n* `MissingFieldAnnotationError` is now thrown when a strawberry.field is not\ntype-annotated but also has no resolver to determine its type\n\n0.31.1 - 2020-08-26\n-------------------\n\nThis release fixes the Flask view that was returning 400 when there were errors\nin the GraphQL results. Now it always returns 200.\n\n0.31.0 - 2020-08-26\n-------------------\n\nAdd `process_result` to views for Django, Flask and ASGI. They can be overridden\nto provide a custom response and also to process results and errors.\n\nIt also removes `request` from Flask view's `get_root_value` and `get_context`\nsince request in Flask is a global.\n\nDjango example:\n\n```python\n# views.py\nfrom django.http import HttpRequest\nfrom strawberry.django.views import GraphQLView as BaseGraphQLView\nfrom strawberry.http import GraphQLHTTPResponse\nfrom strawberry.types import ExecutionResult\n\n\nclass GraphQLView(BaseGraphQLView):\n    def process_result(\n        self, request: HttpRequest, result: ExecutionResult\n    ) -> GraphQLHTTPResponse:\n        return {\"data\": result.data, \"errors\": result.errors or []}\n```\n\nFlask example:\n\n```python\n# views.py\nfrom strawberry.flask.views import GraphQLView as BaseGraphQLView\nfrom strawberry.http import GraphQLHTTPResponse\nfrom strawberry.types import ExecutionResult\n\n\nclass GraphQLView(BaseGraphQLView):\n    def process_result(self, result: ExecutionResult) -> GraphQLHTTPResponse:\n        return {\"data\": result.data, \"errors\": result.errors or []}\n```\n\nASGI example:\n\n```python\nfrom strawberry.asgi import GraphQL as BaseGraphQL\nfrom strawberry.http import GraphQLHTTPResponse\nfrom strawberry.types import ExecutionResult\nfrom starlette.requests import Request\n\nfrom .schema import schema\n\n\nclass GraphQL(BaseGraphQLView):\n    async def process_result(\n        self, request: Request, result: ExecutionResult\n    ) -> GraphQLHTTPResponse:\n        return {\"data\": result.data, \"errors\": result.errors or []}\n```\n\n0.30.1 - 2020-08-17\n-------------------\n\nThis releases fixes the check for unset values.\n\n0.30.0 - 2020-08-16\n-------------------\n\nAdd functions `get_root_value` and `get_context` to views for Django, Flask and\nASGI. They can be overridden to provide custom values per request.\n\nDjango example:\n\n```python\n# views.py\nfrom strawberry.django.views import GraphQLView as BaseGraphQLView\n\n\nclass GraphQLView(BaseGraphQLView):\n    def get_context(self, request):\n        return {\n            \"request\": request,\n            \"custom_context_value\": \"Hi!\",\n        }\n\n    def get_root_value(self, request):\n        return {\n            \"custom_root_value\": \"🍓\",\n        }\n\n\n# urls.py\nfrom django.urls import path\n\nfrom .views import GraphQLView\nfrom .schema import schema\n\nurlpatterns = [\n    path(\"graphql/\", GraphQLView.as_view(schema=schema)),\n]\n```\n\nFlask example:\n\n```python\n# views.py\nfrom strawberry.flask.views import GraphQLView as BaseGraphQLView\n\n\nclass GraphQLView(BaseGraphQLView):\n    def get_context(self, request):\n        return {\n            \"request\": request,\n            \"custom_context_value\": \"Hi!\",\n        }\n\n    def get_root_value(self, request):\n        return {\n            \"custom_root_value\": \"🍓\",\n        }\n\n\n# app.py\nfrom flask import Flask\n\nfrom .views import GraphQLView\nfrom .schema import schema\n\napp = Flask(__name__)\n\napp.add_url_rule(\n    \"/graphql\",\n    view_func=GraphQLView.as_view(\"graphql_view\", schema=schema),\n)\n```\n\n\nASGI example:\n\n```python\n# app.py\nfrom strawberry.asgi import GraphQL as BaseGraphQL\n\nfrom .schema import schema\n\n\nclass GraphQL(BaseGraphQLView):\n    async def get_context(self, request):\n        return {\n            \"request\": request,\n            \"custom_context_value\": \"Hi!\",\n        }\n\n    async def get_root_value(self, request):\n        return {\n            \"custom_root_value\": \"🍓\",\n        }\n\n\napp = GraphQL(schema)\n```\n\n0.29.1 - 2020-08-07\n-------------------\n\nSupport for `default_value` on inputs.\n\nUsage:\n```python\nclass MyInput:\n    s: Optional[str] = None\n    i: int = 0\n```\n```graphql\ninput MyInput {\n  s: String = null\n  i: Int! = 0\n}\n```\n\n0.29.0 - 2020-08-03\n-------------------\n\nThis release adds support for file uploads within Django.\n\nWe follow the following spec: https://github.com/jaydenseric/graphql-multipart-request-spec\n\n\nExample:\n\n```python\nimport strawberry\nfrom strawberry.file_uploads import Upload\n\n\n@strawberry.type\nclass Mutation:\n    @strawberry.mutation\n    def read_text(self, text_file: Upload) -> str:\n        return text_file.read().decode()\n```\n\n0.28.5 - 2020-08-01\n-------------------\n\nFix issue when reusing an interface\n\n0.28.4 - 2020-07-28\n-------------------\n\nFix issue when using generic types with federation\n\n0.28.3 - 2020-07-27\n-------------------\n\nAdd support for using lazy types inside generics.\n\n0.28.2 - 2020-07-26\n-------------------\n\nThis releae add support for UUID as field types. They will be\nrepresented as GraphQL ID in the GraphQL schema.\n\n0.28.1 - 2020-07-25\n-------------------\n\nThis release fixes support for PEP-563, now you can safely use `from __future__ import annotations`,\nlike the following example:\n\n\n```python\nfrom __future__ import annotations\n\n\n@strawberry.type\nclass Query:\n    me: MyType = strawberry.field(name=\"myself\")\n\n\n@strawberry.type\nclass MyType:\n    id: strawberry.ID\n```\n\n0.28.0 - 2020-07-24\n-------------------\n\nThis releases brings a much needed internal refactor of how we generate\nGraphQL types from class definitions. Hopefully this will make easier to\nextend Strawberry in future.\n\nThere are some internal breaking changes, so if you encounter any issue\nlet us know and well try to help with the migration.\n\nIn addition to the internal refactor we also fixed some bugs and improved\nthe public api for the schema class. Now you can run queries directly\non the schema by running `schema.execute`, `schema.execute_sync` and\n`schema.subscribe` on your schema.\n\n0.27.5 - 2020-07-22\n-------------------\n\nAdd websocket object to the subscription context.\n\n0.27.4 - 2020-07-14\n-------------------\n\nThis PR fixes a bug when declaring multiple non-named union types\n\n0.27.3 - 2020-07-10\n-------------------\n\nOptimized signature reflection and added benchmarks.\n\n0.27.2 - 2020-06-11\n-------------------\n\nThis release fixes an issue when using named union types in generic types,\nfor example using an optional union. This is now properly supported:\n\n\n```python\n@strawberry.type\nclass A:\n    a: int\n\n\n@strawberry.type\nclass B:\n    b: int\n\n\nResult = strawberry.union(\"Result\", (A, B))\n\n\n@strawberry.type\nclass Query:\n    ab: Optional[Result] = None\n```\n\n0.27.1 - 2020-06-11\n-------------------\n\nFix typo in Decimal description\n\n0.27.0 - 2020-06-10\n-------------------\n\nThis release adds support for decimal type, example:\n\n\n```python\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def example_decimal(self) -> Decimal:\n        return Decimal(\"3.14159\")\n```\n\n0.26.3 - 2020-06-10\n-------------------\n\nThis release disables subscription in GraphiQL where it\nis not supported.\n\n0.26.2 - 2020-06-03\n-------------------\n\nFixes a bug when using unions and lists together\n\n0.26.1 - 2020-05-22\n-------------------\n\nArgument conversion doesn't populate missing args with defaults.\n```python\n@strawberry.field\ndef hello(self, null_or_unset: Optional[str] = UNSET, nullable: str = None) -> None:\n    pass\n```\n\n0.26.0 - 2020-05-21\n-------------------\n\nThis releases adds experimental support for apollo federation.\n\nHere's an example:\n\n```python\nimport strawberry\n\n\n@strawberry.federation.type(extend=True, keys=[\"id\"])\nclass Campaign:\n    id: strawberry.ID = strawberry.federation.field(external=True)\n\n    @strawberry.field\n    def title(self) -> str:\n        return f\"Title for {self.id}\"\n\n    @classmethod\n    def resolve_reference(cls, id):\n        return Campaign(id)\n\n\n@strawberry.federation.type(extend=True)\nclass Query:\n    @strawberry.field\n    def strawberry(self) -> str:\n        return \"🍓\"\n\n\nschema = strawberry.federation.Schema(query=Query, types=[Campaign])\n```\n\n0.25.6 - 2020-05-19\n-------------------\n\nDefault values make input arguments nullable when the default is None.\n```python\nclass Query:\n    @strawberry.field\n    def hello(self, i: int = 0, s: str = None) -> str:\n        return s\n```\n```graphql\ntype Query {\n  hello(i: Int! = 0, s: String): String!\n}\n```\n\n0.25.5 - 2020-05-18\n-------------------\n\nAdded sentinel value for input parameters that aren't sent by the clients.\nIt checks for when a field is unset.\n\n0.25.4 - 2020-05-18\n-------------------\n\nSupport for `default_value` on inputs and arguments.\n\nUsage:\n```python\nclass MyInput:\n    s: Optional[str]\n    i: int = 0\n```\n```graphql\ninput MyInput {\n  s: String\n  i: Int! = 0\n}\n```\n\n0.25.3 - 2020-05-17\n-------------------\n\nImproves tooling by updating `pre-commit` hooks and adding `pre-commit` to\n`pyproject.toml`.\n\n0.25.2 - 2020-05-11\n-------------------\n\nAdd support for setting `root_value` in asgi.\n\nUsage:\n```python\nschema = strawberry.Schema(query=Query)\napp = strawberry.asgi.GraphQL(schema, root_value=Query())\n```\n\n0.25.1 - 2020-05-08\n-------------------\n\nFix error when a subscription accepted input arguments\n\n0.25.0 - 2020-05-05\n-------------------\n\nThis release add supports for named unions, now you can create\na new union type by writing:\n\n```python\nResult = strawberry.union(\"Result\", (A, B), description=\"Example Result\")\n```\n\nThis also improves the support for Union and Generic types, as it\nwas broken before.\n\n0.24.1 - 2020-04-29\n-------------------\n\nThis release fixes a bug introduced by 0.24.0\n\n0.24.0 - 2020-04-29\n-------------------\n\nThis releases allows to use resolver without having\nto specify root and info arguments:\n\n```python\ndef function_resolver() -> str:\n    return \"I'm a function resolver\"\n\n\ndef function_resolver_with_params(x: str) -> str:\n    return f\"I'm {x}\"\n\n\n@strawberry.type\nclass Query:\n    hello: str = strawberry.field(resolver=function_resolver)\n    hello_with_params: str = strawberry.field(resolver=function_resolver_with_params)\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self) -> str:\n        return \"I'm a function resolver\"\n\n    @strawberry.field\n    def hello_with_params(self, x: str) -> str:\n        return f\"I'm {x}\"\n```\n\nThis makes it easier to reuse existing functions and makes code\ncleaner when not using info or root.\n\n0.23.3 - 2020-04-29\n-------------------\n\nThis release fixes the dependency of GraphQL-core\n\n0.23.2 - 2020-04-25\n-------------------\n\nThis releases updates the _debug server_ to serve the API on '/' as well as '/graphql'.\n\n0.23.1 - 2020-04-20\n-------------------\n\nRemoves the need for duplicate graphiql template file.\n\n0.23.0 - 2020-04-19\n-------------------\n\nThis releases replaces the playground with GraphiQL including the GraphiQL explorer plugin.\n\n0.22.0 - 2020-04-19\n-------------------\n\nThis release adds support for generic types, allowing\nto reuse types, here's an example:\n\n```python\nT = typing.TypeVar(\"T\")\n\n\n@strawberry.type\nclass Edge(typing.Generic[T]):\n    cursor: strawberry.ID\n    node: T\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def int_edge(self, info, **kwargs) -> Edge[int]:\n        return Edge(cursor=strawberry.ID(\"1\"), node=1)\n```\n\n0.21.1 - 2020-03-25\n-------------------\n\nUpdate version of graphql-core to 3.1.0b2\n\n0.21.0 - 2020-02-13\n-------------------\n\nAdded a Flask view that allows you to query the schema and interact with it via GraphiQL.\n\nUsage:\n\n```python\n# app.py\nfrom strawberry.flask.views import GraphQLView\nfrom your_project.schema import schema\n\napp = Flask(__name__)\n\napp.add_url_rule(\n    \"/graphql\", view_func=GraphQLView.as_view(\"graphql_view\", schema=schema)\n)\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n```\n\n0.20.3 - 2020-02-11\n-------------------\n\nImprove datetime, date and time types conversion. Removes aniso dependency\nand also adds support for python types, so now we can do use python datetime's types\ninstead of our custom scalar types.\n\n0.20.2 - 2020-01-22\n-------------------\n\nThis version adds support for Django 3.0\n\n0.20.1 - 2020-01-15\n-------------------\n\nFix directives bugs:\n\n- Fix autogenerated `return` argument bug\n\n- Fix include and skip failure bug\n\n0.20.0 - 2020-01-02\n-------------------\n\nThis release improves support for permissions (it is a breaking change).\nNow you will receive the source and the arguments in the `has_permission` method,\nso you can run more complex permission checks. It also allows to use permissions\non fields, here's an example:\n\n\n```python\nimport strawberry\n\nfrom strawberry.permission import BasePermission\n\n\nclass IsAdmin(BasePermission):\n    message = \"You are not authorized\"\n\n    def has_permission(self, source, info):\n        return source.name.lower() == \"Patrick\" or _is_admin(info)\n\n\n@strawberry.type\nclass User:\n    name: str\n    email: str = strawberry.field(permission_classes=[IsAdmin])\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field(permission_classes=[IsAdmin])\n    def user(self, info) -> str:\n        return User(name=\"Patrick\", email=\"example@email.com\")\n```\n\n0.19.1 - 2019-12-20\n-------------------\n\nThis releases removes support for async resolver in django\nas they causes issues when accessing the databases.\n\n0.19.0 - 2019-12-19\n-------------------\n\nThis release improves support for django and asgi integration.\n\nIt allows to use async resolvers when using django. It also changes the status\ncode from 400 to 200 even if there are errors this makes it possible to still\nuse other fields even if one raised an error.\n\nWe also moved strawberry.contrib.django to strawberry.django, so if you're using\nthe django view make sure you update the paths.\n\n0.18.3 - 2019-12-09\n-------------------\n\nFix missing support for booleans when converting arguments\n\n0.18.2 - 2019-12-09\n-------------------\n\nThis releases fixes an issue when converting complex input types,\nnow it should support lists of complex types properly.\n\n0.18.1 - 2019-11-03\n-------------------\n\nSet `is_type_of` only when the type implements an interface,\nthis allows to return different (but compatible) types in basic cases.\n\n0.18.0 - 2019-10-31\n-------------------\n\nRefactored CLI folder structure, importing click commands from a subfolder. Follows click's complex example.\n\n0.17.0 - 2019-10-30\n-------------------\n\nAdd support for custom GraphQL scalars.\n\n0.16.10 - 2019-10-30\n--------------------\n\nTests are now run on GitHub actions on both python 3.7 and python3.8 🐍\n\n0.16.9 - 2019-10-30\n-------------------\n\nFixed some typos in contributing.md .\n\n0.16.8 - 2019-10-29\n-------------------\n\nFixed some typos in readme.md and contributing.md.\n\n0.16.7 - 2019-10-28\n-------------------\n\nMinimal support for registering types without fields and abstract interface querying.\n\n0.16.6 - 2019-10-27\n-------------------\n\nGrammar fixes - changed 'corresponding tests, if tests' to 'corresponding tests. If tests' and removed extraneous period from 'Provide specific examples to demonstrate the steps..'. Also made 'Enhancement' lowercase to stay consistent with its usage in documentation and changed 'on the Strawberry' to 'to Strawberry'.\n\n0.16.5 - 2019-10-16\n-------------------\n\nAdded issue template files (bug_report.md, feature_request.md, other_issues.md) and a pull request template file.\n\n0.16.4 - 2019-10-14\n-------------------\n\nFix execution of async resolvers.\n\n0.16.3 - 2019-10-14\n-------------------\n\nTypo fix - changed the spelling from 'follwing' to 'following'.\n\n0.16.2 - 2019-10-03\n-------------------\n\nUpdated docs to provide reference on how to use Django view.\n\n0.16.1 - 2019-09-29\n-------------------\n\nRemoved custom representation for Strawberry types,\nthis should make using types much nicer.\n\n0.16.0 - 2019-09-13\n-------------------\n\nSwitched from `graphql-core-next` dependency to `graphql-core@^3.0.0a0`.\n\n0.15.6 - 2019-09-11\n-------------------\n\nFixes MYPY plugin\n\n0.15.5 - 2019-09-10\n-------------------\n\nAdd the flake8-bugbear linting plugin to catch likely bugs\n\n0.15.4 - 2019-09-06\n-------------------\n\nFixed conversion of enum when value was falsy.\n\n0.15.3 - 2019-09-06\n-------------------\n\nFixed issue when trying to convert optional arguments to a type\n\n0.15.2 - 2019-09-06\n-------------------\n\nFix issue with converting arguments with optional fields.\n\nThanks to [@sciyoshi](https://github.com/sciyoshi) for the fix!\n\n0.15.1 - 2019-09-05\n-------------------\n\nAdded a Django view that allows you to query the schema and interact with it via GraphiQL\n\nUsage:\n\n```python\n# Install\n# pip install \"strawberry-graphql[django]\"\n\n# settings.py\nINSTALLED_APPS = [\n    ...,\n    \"strawberry.django\",\n]\n\n# urls.py\nfrom strawberry.django.views import GraphQLView\nfrom your_project.schema import schema\n\nurlpatterns = [\n    path(\"graphql/\", GraphQLView.as_view(schema=schema)),\n]\n```\n\n0.15.0 - 2019-09-04\n-------------------\n\nThis release doesn't add any feature or fixes, but it fixes an issue with\nchecking for release files when submitting PRs ✨.\n\n0.14.4 - 2019-09-01\n-------------------\n\nFixes the conversion of Enums in resolvers, arguments and input types.\n\n0.14.3 - 2019-09-01\n-------------------\n\nAdd a mypy plugin that enables typechecking Strawberry types\n\n0.14.2 - 2019-08-31\n-------------------\n\nFix List types being converted to Optional GraphQL lists.\n\n0.14.1 - 2019-08-25\n-------------------\n\nThis release doesn't add any feature or fixes, it only introduces a GitHub\nAction to let people know how to add a RELEASE.md file when submitting a PR.\n\n0.14.0 - 2019-08-14\n-------------------\n\nAdded support for defining query directives, example:\n\n```python\nimport strawberry\nfrom strawberry.directive import DirectiveLocation\n\n\n@strawberry.type\nclass Query:\n    cake: str = \"made_in_switzerland\"\n\n\n@strawberry.directive(\n    locations=[DirectiveLocation.FIELD], description=\"Make string uppercase\"\n)\ndef uppercase(value: str, example: str):\n    return value.upper()\n\n\nschema = strawberry.Schema(query=Query, directives=[uppercase])\n```\n\n0.13.4 - 2019-08-01\n-------------------\n\nImprove dict_to_type conversion by checking if the field has a different name or case\n\n0.13.3 - 2019-07-23\n-------------------\n\nFix field initialization not allowed when using `strawberry.field` in an `input` type\n\n```python\n@strawberry.input\nclass Say:\n    what = strawberry.field(is_input=True)\n```\n\n0.13.2 - 2019-07-18\n-------------------\n\nAllow the usage of Union types in the mutations\n\n```python\n@strawberry.type\nclass A:\n    x: int\n\n\n@strawberry.type\nclass B:\n    y: int\n\n\n@strawberry.type\nclass Mutation:\n    @strawberry.mutation\n    def hello(self, info) -> Union[A, B]:\n        return B(y=5)\n\n\nschema = strawberry.Schema(query=A, mutation=Mutation)\n\nquery = \"\"\"\nmutation {\n    hello {\n        __typename\n\n        ... on A {\n            x\n        }\n\n        ... on B {\n            y\n        }\n    }\n}\n\"\"\"\n```\n\n0.13.1 - 2019-07-17\n-------------------\n\nFix missing fields when extending a class, now we can do this:\n\n\n```python\n@strawberry.type\nclass Parent:\n    cheese: str = \"swiss\"\n\n    @strawberry.field\n    def friend(self, info) -> str:\n        return \"food\"\n\n\n@strawberry.type\nclass Schema(Parent):\n    cake: str = \"made_in_swiss\"\n```\n\n0.13.0 - 2019-07-16\n-------------------\n\nThis release adds field support for permissions\n\n```python\nimport strawberry\n\nfrom strawberry.permission import BasePermission\n\n\nclass IsAdmin(BasePermission):\n    message = \"You are not authorized\"\n\n    def has_permission(self, info):\n        return False\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field(permission_classes=[IsAdmin])\n    def hello(self, info) -> str:\n        return \"Hello\"\n```\n\n0.12.0 - 2019-06-25\n-------------------\n\nThis releases adds support for ASGI 3.0\n\n```python\nfrom strawberry.asgi import GraphQL\nfrom starlette.applications import Starlette\n\ngraphql_app = GraphQL(schema_module.schema, debug=True)\n\napp = Starlette(debug=True)\napp.add_route(\"/graphql\", graphql_app)\napp.add_websocket_route(\"/graphql\", graphql_app)\n```\n\n0.11.0 - 2019-06-07\n-------------------\n\nAdded support for optional fields with default arguments in the GraphQL schema when default arguments are passed to the resolver.\n\nExample:\n ```python\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def hello(self, info, name: str = \"world\") -> str:\n        return name\n```\n\n```graphql\ntype Query {\n    hello(name: String = \"world\"): String\n}\n```\n\n0.10.0 - 2019-05-28\n-------------------\n\nFixed issue that was prevent usage of InitVars.\nNow you can safely use InitVar to prevent fields from showing up in the schema:\n\n\n```python\n@strawberry.type\nclass Category:\n    name: str\n    id: InitVar[str]\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def category(self, info) -> Category:\n        return Category(name=\"example\", id=\"123\")\n```\n\n0.9.1 - 2019-05-25\n------------------\n\nFixed logo on PyPI\n\n0.9.0 - 2019-05-24\n------------------\n\nAdded support for passing resolver functions\n\n```python\ndef resolver(root, info, par: str) -> str:\n    return f\"hello {par}\"\n\n\n@strawberry.type\nclass Query:\n    example: str = strawberry.field(resolver=resolver)\n```\n\nAlso we updated some of the dependencies of the project\n\n0.8.0 - 2019-05-09\n------------------\n\nAdded support for renaming fields. Example usage:\n```python\n@strawberry.type\nclass Query:\n    example: str = strawberry.field(name=\"test\")\n```\n\n0.7.0 - 2019-05-09\n------------------\n\nAdded support for declaring interface by using `@strawberry.interface`\nExample:\n```python\n@strawberry.interface\nclass Node:\n    id: strawberry.ID\n```\n\n0.6.0 - 2019-05-02\n------------------\n\nThis changes field to be lazy by default, allowing to use circular dependencies\nwhen declaring types.\n\n0.5.6 - 2019-04-30\n------------------\n\nImprove listing on pypi.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.1611328125,
          "content": "# Contributing to Strawberry\n\nFirst off, thanks for taking the time to contribute!\n\nThe following is a set of guidelines for contributing to Strawberry on GitHub.\nThese are mostly guidelines, not rules. Use your best judgment, and feel free\nto propose changes to this document in a pull request.\n\n#### Table of contents\n\n[How to contribute](#how-to-contribute)\n\n- [Reporting bugs](#reporting-bugs)\n- [Suggesting enhancements](#suggesting-enhancements)\n- [Contributing to code](#contributing-to-code)\n\n## How to contribute\n\n### Reporting bugs\n\nThis section guides you through submitting a bug report for Strawberry.\nFollowing these guidelines helps maintainers and the community understand your report, reproduce the behavior, and find related reports.\n\nBefore creating bug reports, please check\n[this list](#before-submitting-a-bug-report) to be sure that you need to create\none. When you are creating a bug report, please include as many details as\npossible. Make sure you include the Python and Strawberry versions.\n\n> **Note:** If you find a **Closed** issue that seems like it is the same thing\n> that you're experiencing, open a new issue and include a link to the original\n> issue in the body of your new one.\n\n#### Before submitting a bug report\n\n- Check that your issue does not already exist in the issue tracker on GitHub.\n\n#### How do I submit a bug report?\n\nBugs are tracked on the issue tracker on GitHub where you can create a new one.\n\nExplain the problem and include additional details to help maintainers reproduce\nthe problem:\n\n- **Use a clear and descriptive title** for the issue to identify the problem.\n- **Describe the exact steps which reproduce the problem** in as many details as\n  possible.\n- **Provide specific examples to demonstrate the steps to reproduce the issue**.\n  Include links to files or GitHub projects, or copy-paste-able snippets, which you use in those examples.\n- **Describe the behavior you observed after following the steps** and point out\n  what exactly is the problem with that behavior.\n- **Explain which behavior you expected to see instead and why.**\n\nProvide more context by answering these questions:\n\n- **Did the problem start happening recently** (e.g. after updating to a new version of Strawberry) or was this always a problem?\n- If the problem started happening recently, **can you reproduce the problem in\n  an older version of Strawberry?** What's the most recent version in which the problem doesn't happen?\n- **Can you reliably reproduce the issue?** If not, provide details about how\n  often the problem happens and under which conditions it normally happens.\n\nInclude details about your configuration and environment:\n\n- **Which version of Strawberry are you using?**\n- **Which Python version Strawberry has been installed for?**\n- **What's the name and version of the OS you're using?**\n\n### Suggesting enhancements\n\nThis section guides you through submitting an enhancement suggestion for\nStrawberry, including completely new features and minor improvements to existing\nfunctionality. Following these guidelines helps maintainers and the community\nunderstand your suggestion and find related suggestions.\n\nBefore creating enhancement suggestions, please check\n[this list](#before-submitting-an-enhancement-suggestion) as you might find out\nthat you don't need to create one. When you are creating an enhancement\nsuggestion, please\n[include as many details as possible](#how-do-i-submit-an-enhancement-suggestion).\n\n#### Before submitting an enhancement suggestion\n\n- Check that your issue does not already exist in the issue tracker on GitHub.\n\n#### How do I submit an enhancement suggestion?\n\nEnhancement suggestions are tracked on the project's issue tracker on GitHub\nwhere you can create a new one and provide the following information:\n\n- **Use a clear and descriptive title** for the issue to identify the\n  suggestion.\n- **Provide a step-by-step description of the suggested enhancement** in as many\n  details as possible.\n- **Provide specific examples to demonstrate the steps**.\n- **Describe the current behavior** and **explain which behavior you expected to\n  see instead** and why.\n\n### Contributing to code\n\n> This section is about contributing to\n[Strawberry Python library](https://github.com/strawberry-graphql/strawberry).\n\n#### Local development\n\nYou will need Poetry to start contributing to Strawberry. Refer to the\n[documentation](https://poetry.eustace.io/docs/#introduction) to start using\nPoetry.\n\nYou will first need to clone the repository using `git` and place yourself in\nits directory:\n\n```shell\n$ git clone git@github.com:strawberry-graphql/strawberry.git\n$ cd strawberry\n```\n\nNow, you will need to install the required dependencies for Strawberry and be sure\nthat the current tests are passing on your machine:\n\n```shell\n$ poetry install --with integrations\n$ poetry run pytest\n$ poetry run mypy\n```\n\nSome tests are known to be inconsistent. (The fix is in progress.) These tests are marked with the `pytest.mark.flaky` marker.\n\nStrawberry uses the [black](https://github.com/ambv/black) coding style and you\nmust ensure that your code follows it. If not, the CI will fail and your Pull Request will not be merged.\n\nTo make sure that you don't accidentally commit code that does not follow the\ncoding style, you can install a pre-commit hook that will check that everything\nis in order:\n\n```shell\n$ poetry run pre-commit install\n```\n\nYour code must always be accompanied by corresponding tests. If tests are not\npresent, your code will not be merged.\n\n#### Pull requests\n\n- Be sure that your pull request contains tests that cover the changed or added\n  code.\n- If your changes warrant a documentation change, the pull request must also\n  update the documentation.\n\n##### RELEASE.md files\n\nWhen you submit a PR, make sure to include a RELEASE.md file. We use that to automatically do releases here on GitHub and, most importantly, to PyPI!\n\nSo as soon as your PR is merged, a release will be made.\n\nHere's an example of RELEASE.md:\n\n```text\nRelease type: patch\n\nDescription of the changes, ideally with some examples, if adding a new feature.\n```\n\nRelease type can be one of patch, minor or major. We use [semver](https://semver.org/), so make sure to pick the appropriate type. If in doubt feel free to ask :)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2018 Patrick Arminio\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.0517578125,
          "content": "<img src=\"https://github.com/strawberry-graphql/strawberry/raw/main/.github/logo.png\" width=\"124\" height=\"150\">\n\n# Strawberry GraphQL\n\n> Python GraphQL library based on dataclasses\n\n[![CircleCI](https://img.shields.io/circleci/token/307b40d5e152e074d34f84d30d226376a15667d5/project/github/strawberry-graphql/strawberry/main.svg?style=for-the-badge)](https://circleci.com/gh/strawberry-graphql/strawberry/tree/main)\n[![Discord](https://img.shields.io/discord/689806334337482765?label=discord&logo=discord&logoColor=white&style=for-the-badge&color=blue)](https://discord.gg/ZkRTEJQ)\n[![PyPI](https://img.shields.io/pypi/v/strawberry-graphql?logo=pypi&logoColor=white&style=for-the-badge)](https://pypi.org/project/strawberry-graphql/)\n\n## Installation ( Quick Start )\n\nThe quick start method provides a server and CLI to get going quickly. Install\nwith:\n\n```shell\npip install \"strawberry-graphql[debug-server]\"\n```\n\n## Getting Started\n\nCreate a file called `app.py` with the following code:\n\n```python\nimport strawberry\n\n\n@strawberry.type\nclass User:\n    name: str\n    age: int\n\n\n@strawberry.type\nclass Query:\n    @strawberry.field\n    def user(self) -> User:\n        return User(name=\"Patrick\", age=100)\n\n\nschema = strawberry.Schema(query=Query)\n```\n\nThis will create a GraphQL schema defining a `User` type and a single query\nfield `user` that will return a hardcoded user.\n\nTo run the debug server run the following command:\n\n```shell\nstrawberry server app\n```\n\nOpen the debug server by clicking on the following link:\n[http://0.0.0.0:8000/graphql](http://0.0.0.0:8000/graphql)\n\nThis will open GraphiQL where you can test the API.\n\n### Type-checking\n\nStrawberry comes with a [mypy] plugin that enables statically type-checking your\nGraphQL schema. To enable it, add the following lines to your `mypy.ini`\nconfiguration:\n\n```ini\n[mypy]\nplugins = strawberry.ext.mypy_plugin\n```\n\n[mypy]: http://www.mypy-lang.org/\n\n### Django Integration\n\nA Django view is provided for adding a GraphQL endpoint to your application.\n\n1. Add the app to your `INSTALLED_APPS`.\n\n```python\nINSTALLED_APPS = [\n    ...,  # your other apps\n    \"strawberry.django\",\n]\n```\n\n2. Add the view to your `urls.py` file.\n\n```python\nfrom strawberry.django.views import GraphQLView\nfrom .schema import schema\n\nurlpatterns = [\n    ...,\n    path(\"graphql\", GraphQLView.as_view(schema=schema)),\n]\n```\n\n## WebSockets\n\nTo support graphql Subscriptions over WebSockets you need to provide a WebSocket\nenabled server. The debug server can be made to support WebSockets with these\ncommands:\n\n```shell\npip install 'strawberry-graphql[debug-server]'\npip install 'uvicorn[standard]'\n```\n\n## Examples\n\n* [Various examples on how to use Strawberry](https://github.com/strawberry-graphql/examples)\n* [Full stack example using Starlette, SQLAlchemy, Typescript codegen and Next.js](https://github.com/jokull/python-ts-graphql-demo)\n* [Quart + Strawberry tutorial](https://github.com/rockyburt/Ketchup)\n\n## Contributing\n\nWe use [poetry](https://github.com/sdispater/poetry) to manage dependencies, to\nget started follow these steps:\n\n```shell\ngit clone https://github.com/strawberry-graphql/strawberry\ncd strawberry\npoetry install --with integrations\npoetry run pytest\n```\n\nFor all further detail, check out the [Contributing Page](CONTRIBUTING.md)\n\n\n### Pre commit\n\nWe have a configuration for\n[pre-commit](https://github.com/pre-commit/pre-commit), to add the hook run the\nfollowing command:\n\n```shell\npre-commit install\n```\n\n## Links\n\n- Project homepage: https://strawberry.rocks\n- Repository: https://github.com/strawberry-graphql/strawberry\n- Issue tracker: https://github.com/strawberry-graphql/strawberry/issues\n  - In case of sensitive bugs like security vulnerabilities, please contact\n    patrick.arminio@gmail.com directly instead of using the issue tracker. We\n    value your effort to improve the security and privacy of this project!\n\n## Licensing\n\nThe code in this project is licensed under MIT license. See [LICENSE](./LICENSE)\nfor more information.\n\n![Recent Activity](https://images.repography.com/0/strawberry-graphql/strawberry/recent-activity/d751713988987e9331980363e24189ce.svg)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "federation-compatibility",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 1.4453125,
          "content": "[mypy]\nfiles = strawberry\nplugins = pydantic.mypy, strawberry.ext.mypy_plugin\nimplicit_reexport = False\nwarn_unused_configs = True\nwarn_unused_ignores = True\ncheck_untyped_defs = True\nignore_errors = False\nstrict_optional = True\nshow_error_codes = True\nwarn_redundant_casts = True\nignore_missing_imports = True\ninstall_types = True\nnon_interactive = True\nshow_traceback = True\n# TODO: enable strict at some point\n;strict = True\n\n; Disabled because of this bug: https://github.com/python/mypy/issues/9689\n; disallow_untyped_decorators = True\n\n[mypy-graphql.*]\nignore_errors = True\n\n[mypy-pydantic.*]\nignore_errors = True\n\n[mypy-pydantic_core.*]\nignore_errors = True\n\n[mypy-rich.*]\nignore_errors = True\n\n[mypy-libcst.*]\nignore_errors = True\n\n[mypy-pygments.*]\nignore_missing_imports = True\n\n[mypy-email_validator.*]\nignore_missing_imports = True\nignore_errors = True\n\n[mypy-dotenv.*]\nignore_missing_imports = True\n\n[mypy-django.apps.*]\nignore_missing_imports = True\n\n[mypy-django.http.*]\nignore_missing_imports = True\n\n[mypy-strawberry_django.*]\nignore_missing_imports = True\n\n[mypy-cached_property.*]\nignore_missing_imports = True\n\n[mypy-importlib_metadata.*]\nignore_errors = True\n\n[mypy-anyio.*]\nignore_errors = True\n\n[mypy-dns.*]\nignore_errors = True\n\n[mypy-click.*]\nignore_errors = True\n\n[mypy-h11.*]\nignore_errors = True\n\n[mypy-httpx.*]\nignore_errors = True\n\n[mypy-httpcore.*]\nignore_errors = True\n\n[mypy-idna.*]\nignore_errors = True\n\n[mypy-markdown_it.*]\nignore_errors = True\n"
        },
        {
          "name": "noxfile.py",
          "type": "blob",
          "size": 5.044921875,
          "content": "import itertools\nfrom typing import Any, Callable\n\nimport nox\nfrom nox_poetry import Session, session\n\nnox.options.reuse_existing_virtualenvs = True\nnox.options.error_on_external_run = True\nnox.options.default_venv_backend = \"uv\"\n\nPYTHON_VERSIONS = [\"3.13\", \"3.12\", \"3.11\", \"3.10\", \"3.9\"]\n\nGQL_CORE_VERSIONS = [\n    \"3.2.3\",\n    \"3.3.0a6\",\n]\n\nCOMMON_PYTEST_OPTIONS = [\n    \"--cov=.\",\n    \"--cov-append\",\n    \"--cov-report=xml\",\n    \"-n\",\n    \"auto\",\n    \"--showlocals\",\n    \"-vv\",\n    \"--ignore=tests/typecheckers\",\n    \"--ignore=tests/cli\",\n    \"--ignore=tests/benchmarks\",\n    \"--ignore=tests/experimental/pydantic\",\n]\n\nINTEGRATIONS = [\n    \"asgi\",\n    \"aiohttp\",\n    \"chalice\",\n    \"channels\",\n    \"django\",\n    \"fastapi\",\n    \"flask\",\n    \"quart\",\n    \"sanic\",\n    \"litestar\",\n    \"pydantic\",\n]\n\n\ndef _install_gql_core(session: Session, version: str) -> None:\n    session._session.install(f\"graphql-core=={version}\")\n\n\ngql_core_parametrize = nox.parametrize(\n    \"gql_core\",\n    GQL_CORE_VERSIONS,\n)\n\n\ndef with_gql_core_parametrize(name: str, params: list[str]) -> Callable[[Any], Any]:\n    # github cache doesn't support comma in the name, this is a workaround.\n    arg_names = f\"{name}, gql_core\"\n    combinations = list(itertools.product(params, GQL_CORE_VERSIONS))\n    ids = [f\"{name}-{comb[0]}__graphql-core-{comb[1]}\" for comb in combinations]\n    return lambda fn: nox.parametrize(arg_names, combinations, ids=ids)(fn)\n\n\n@session(python=PYTHON_VERSIONS, name=\"Tests\", tags=[\"tests\"])\n@gql_core_parametrize\ndef tests(session: Session, gql_core: str) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n    _install_gql_core(session, gql_core)\n    markers = (\n        [\"-m\", f\"not {integration}\", f\"--ignore=tests/{integration}\"]\n        for integration in INTEGRATIONS\n    )\n    markers = [item for sublist in markers for item in sublist]\n\n    session.run(\n        \"pytest\",\n        *COMMON_PYTEST_OPTIONS,\n        *markers,\n    )\n\n\n@session(python=[\"3.12\"], name=\"Django tests\", tags=[\"tests\"])\n@with_gql_core_parametrize(\"django\", [\"5.1.3\", \"5.0.9\", \"4.2.0\"])\ndef tests_django(session: Session, django: str, gql_core: str) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n    _install_gql_core(session, gql_core)\n    session._session.install(f\"django~={django}\")  # type: ignore\n    session._session.install(\"pytest-django\")  # type: ignore\n\n    session.run(\"pytest\", *COMMON_PYTEST_OPTIONS, \"-m\", \"django\")\n\n\n@session(python=[\"3.11\"], name=\"Starlette tests\", tags=[\"tests\"])\n@gql_core_parametrize\ndef tests_starlette(session: Session, gql_core: str) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n\n    session._session.install(\"starlette\")  # type: ignore\n    _install_gql_core(session, gql_core)\n    session.run(\"pytest\", *COMMON_PYTEST_OPTIONS, \"-m\", \"asgi\")\n\n\n@session(python=[\"3.11\"], name=\"Test integrations\", tags=[\"tests\"])\n@with_gql_core_parametrize(\n    \"integration\",\n    [\n        \"aiohttp\",\n        \"chalice\",\n        \"channels\",\n        \"fastapi\",\n        \"flask\",\n        \"quart\",\n        \"sanic\",\n        \"litestar\",\n    ],\n)\ndef tests_integrations(session: Session, integration: str, gql_core: str) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n\n    session._session.install(integration)  # type: ignore\n    _install_gql_core(session, gql_core)\n    if integration == \"aiohttp\":\n        session._session.install(\"pytest-aiohttp\")  # type: ignore\n    elif integration == \"channels\":\n        session._session.install(\"pytest-django\")  # type: ignore\n        session._session.install(\"daphne\")  # type: ignore\n\n    session.run(\"pytest\", *COMMON_PYTEST_OPTIONS, \"-m\", integration)\n\n\n@session(python=PYTHON_VERSIONS, name=\"Pydantic tests\", tags=[\"tests\", \"pydantic\"])\n@with_gql_core_parametrize(\"pydantic\", [\"1.10\", \"2.8.0\", \"2.9.0\"])\ndef test_pydantic(session: Session, pydantic: str, gql_core: str) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n\n    session._session.install(f\"pydantic~={pydantic}\")  # type: ignore\n    _install_gql_core(session, gql_core)\n    session.run(\n        \"pytest\",\n        \"--cov=.\",\n        \"--cov-append\",\n        \"--cov-report=xml\",\n        \"-m\",\n        \"pydantic\",\n        \"--ignore=tests/cli\",\n        \"--ignore=tests/benchmarks\",\n    )\n\n\n@session(python=PYTHON_VERSIONS, name=\"Type checkers tests\", tags=[\"tests\"])\ndef tests_typecheckers(session: Session) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n\n    session.install(\"pyright\")\n    session.install(\"pydantic\")\n    session.install(\"mypy\")\n\n    session.run(\n        \"pytest\",\n        \"--cov=.\",\n        \"--cov-append\",\n        \"--cov-report=xml\",\n        \"tests/typecheckers\",\n        \"-vv\",\n    )\n\n\n@session(python=PYTHON_VERSIONS, name=\"CLI tests\", tags=[\"tests\"])\ndef tests_cli(session: Session) -> None:\n    session.run_always(\"poetry\", \"install\", external=True)\n\n    session._session.install(\"uvicorn\")  # type: ignore\n    session._session.install(\"starlette\")  # type: ignore\n\n    session.run(\n        \"pytest\",\n        \"--cov=.\",\n        \"--cov-append\",\n        \"--cov-report=xml\",\n        \"tests/cli\",\n        \"-vv\",\n    )\n"
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 395.126953125,
          "content": "# This file is automatically @generated by Poetry 1.8.2 and should not be changed by hand.\n\n[[package]]\nname = \"aiofiles\"\nversion = \"24.1.0\"\ndescription = \"File support for asyncio.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"aiofiles-24.1.0-py3-none-any.whl\", hash = \"sha256:b4ec55f4195e3eb5d7abd1bf7e061763e864dd4954231fb8539a0ef8bb8260e5\"},\n    {file = \"aiofiles-24.1.0.tar.gz\", hash = \"sha256:22a075c9e5a3810f0c2e48f3008c94d68c65d763b9b03857924c99e57355166c\"},\n]\n\n[[package]]\nname = \"aiohappyeyeballs\"\nversion = \"2.4.4\"\ndescription = \"Happy Eyeballs for asyncio\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"aiohappyeyeballs-2.4.4-py3-none-any.whl\", hash = \"sha256:a980909d50efcd44795c4afeca523296716d50cd756ddca6af8c65b996e27de8\"},\n    {file = \"aiohappyeyeballs-2.4.4.tar.gz\", hash = \"sha256:5fdd7d87889c63183afc18ce9271f9b0a7d32c2303e394468dd45d514a757745\"},\n]\n\n[[package]]\nname = \"aiohttp\"\nversion = \"3.10.11\"\ndescription = \"Async http client/server framework (asyncio)\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"aiohttp-3.10.11-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:5077b1a5f40ffa3ba1f40d537d3bec4383988ee51fbba6b74aa8fb1bc466599e\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:8d6a14a4d93b5b3c2891fca94fa9d41b2322a68194422bef0dd5ec1e57d7d298\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:ffbfde2443696345e23a3c597049b1dd43049bb65337837574205e7368472177\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:20b3d9e416774d41813bc02fdc0663379c01817b0874b932b81c7f777f67b217\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2b943011b45ee6bf74b22245c6faab736363678e910504dd7531a58c76c9015a\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:48bc1d924490f0d0b3658fe5c4b081a4d56ebb58af80a6729d4bd13ea569797a\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e12eb3f4b1f72aaaf6acd27d045753b18101524f72ae071ae1c91c1cd44ef115\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f14ebc419a568c2eff3c1ed35f634435c24ead2fe19c07426af41e7adb68713a\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:72b191cdf35a518bfc7ca87d770d30941decc5aaf897ec8b484eb5cc8c7706f3\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:5ab2328a61fdc86424ee540d0aeb8b73bbcad7351fb7cf7a6546fc0bcffa0038\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:aa93063d4af05c49276cf14e419550a3f45258b6b9d1f16403e777f1addf4519\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:30283f9d0ce420363c24c5c2421e71a738a2155f10adbb1a11a4d4d6d2715cfc\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e5358addc8044ee49143c546d2182c15b4ac3a60be01c3209374ace05af5733d\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-win32.whl\", hash = \"sha256:e1ffa713d3ea7cdcd4aea9cddccab41edf6882fa9552940344c44e59652e1120\"},\n    {file = \"aiohttp-3.10.11-cp310-cp310-win_amd64.whl\", hash = \"sha256:778cbd01f18ff78b5dd23c77eb82987ee4ba23408cbed233009fd570dda7e674\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:80ff08556c7f59a7972b1e8919f62e9c069c33566a6d28586771711e0eea4f07\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:2c8f96e9ee19f04c4914e4e7a42a60861066d3e1abf05c726f38d9d0a466e695\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:fb8601394d537da9221947b5d6e62b064c9a43e88a1ecd7414d21a1a6fba9c24\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2ea224cf7bc2d8856d6971cea73b1d50c9c51d36971faf1abc169a0d5f85a382\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:db9503f79e12d5d80b3efd4d01312853565c05367493379df76d2674af881caa\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0f449a50cc33f0384f633894d8d3cd020e3ccef81879c6e6245c3c375c448625\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:82052be3e6d9e0c123499127782a01a2b224b8af8c62ab46b3f6197035ad94e9\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:20063c7acf1eec550c8eb098deb5ed9e1bb0521613b03bb93644b810986027ac\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:489cced07a4c11488f47aab1f00d0c572506883f877af100a38f1fedaa884c3a\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ea9b3bab329aeaa603ed3bf605f1e2a6f36496ad7e0e1aa42025f368ee2dc07b\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ca117819d8ad113413016cb29774b3f6d99ad23c220069789fc050267b786c16\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:2dfb612dcbe70fb7cdcf3499e8d483079b89749c857a8f6e80263b021745c730\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:f9b615d3da0d60e7d53c62e22b4fd1c70f4ae5993a44687b011ea3a2e49051b8\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-win32.whl\", hash = \"sha256:29103f9099b6068bbdf44d6a3d090e0a0b2be6d3c9f16a070dd9d0d910ec08f9\"},\n    {file = \"aiohttp-3.10.11-cp311-cp311-win_amd64.whl\", hash = \"sha256:236b28ceb79532da85d59aa9b9bf873b364e27a0acb2ceaba475dc61cffb6f3f\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:7480519f70e32bfb101d71fb9a1f330fbd291655a4c1c922232a48c458c52710\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:f65267266c9aeb2287a6622ee2bb39490292552f9fbf851baabc04c9f84e048d\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:7400a93d629a0608dc1d6c55f1e3d6e07f7375745aaa8bd7f085571e4d1cee97\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f34b97e4b11b8d4eb2c3a4f975be626cc8af99ff479da7de49ac2c6d02d35725\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1e7b825da878464a252ccff2958838f9caa82f32a8dbc334eb9b34a026e2c636\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f9f92a344c50b9667827da308473005f34767b6a2a60d9acff56ae94f895f385\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc6f1ab987a27b83c5268a17218463c2ec08dbb754195113867a27b166cd6087\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1dc0f4ca54842173d03322793ebcf2c8cc2d34ae91cc762478e295d8e361e03f\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:7ce6a51469bfaacff146e59e7fb61c9c23006495d11cc24c514a455032bcfa03\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:aad3cd91d484d065ede16f3cf15408254e2469e3f613b241a1db552c5eb7ab7d\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f4df4b8ca97f658c880fb4b90b1d1ec528315d4030af1ec763247ebfd33d8b9a\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:2e4e18a0a2d03531edbc06c366954e40a3f8d2a88d2b936bbe78a0c75a3aab3e\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:6ce66780fa1a20e45bc753cda2a149daa6dbf1561fc1289fa0c308391c7bc0a4\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-win32.whl\", hash = \"sha256:a919c8957695ea4c0e7a3e8d16494e3477b86f33067478f43106921c2fef15bb\"},\n    {file = \"aiohttp-3.10.11-cp312-cp312-win_amd64.whl\", hash = \"sha256:b5e29706e6389a2283a91611c91bf24f218962717c8f3b4e528ef529d112ee27\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:703938e22434d7d14ec22f9f310559331f455018389222eed132808cd8f44127\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:9bc50b63648840854e00084c2b43035a62e033cb9b06d8c22b409d56eb098413\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:5f0463bf8b0754bc744e1feb61590706823795041e63edf30118a6f0bf577461\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f6c6dec398ac5a87cb3a407b068e1106b20ef001c344e34154616183fe684288\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bcaf2d79104d53d4dcf934f7ce76d3d155302d07dae24dff6c9fffd217568067\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:25fd5470922091b5a9aeeb7e75be609e16b4fba81cdeaf12981393fb240dd10e\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bbde2ca67230923a42161b1f408c3992ae6e0be782dca0c44cb3206bf330dee1\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:249c8ff8d26a8b41a0f12f9df804e7c685ca35a207e2410adbd3e924217b9006\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:878ca6a931ee8c486a8f7b432b65431d095c522cbeb34892bee5be97b3481d0f\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:8663f7777ce775f0413324be0d96d9730959b2ca73d9b7e2c2c90539139cbdd6\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:6cd3f10b01f0c31481fba8d302b61603a2acb37b9d30e1d14e0f5a58b7b18a31\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:4e8d8aad9402d3aa02fdc5ca2fe68bcb9fdfe1f77b40b10410a94c7f408b664d\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:38e3c4f80196b4f6c3a85d134a534a56f52da9cb8d8e7af1b79a32eefee73a00\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-win32.whl\", hash = \"sha256:fc31820cfc3b2863c6e95e14fcf815dc7afe52480b4dc03393c4873bb5599f71\"},\n    {file = \"aiohttp-3.10.11-cp313-cp313-win_amd64.whl\", hash = \"sha256:4996ff1345704ffdd6d75fb06ed175938c133425af616142e7187f28dc75f14e\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:74baf1a7d948b3d640badeac333af581a367ab916b37e44cf90a0334157cdfd2\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:473aebc3b871646e1940c05268d451f2543a1d209f47035b594b9d4e91ce8339\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:c2f746a6968c54ab2186574e15c3f14f3e7f67aef12b761e043b33b89c5b5f95\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d110cabad8360ffa0dec8f6ec60e43286e9d251e77db4763a87dcfe55b4adb92\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e0099c7d5d7afff4202a0c670e5b723f7718810000b4abcbc96b064129e64bc7\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0316e624b754dbbf8c872b62fe6dcb395ef20c70e59890dfa0de9eafccd2849d\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5a5f7ab8baf13314e6b2485965cbacb94afff1e93466ac4d06a47a81c50f9cca\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c891011e76041e6508cbfc469dd1a8ea09bc24e87e4c204e05f150c4c455a5fa\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:9208299251370ee815473270c52cd3f7069ee9ed348d941d574d1457d2c73e8b\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:459f0f32c8356e8125f45eeff0ecf2b1cb6db1551304972702f34cd9e6c44658\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:14cdc8c1810bbd4b4b9f142eeee23cda528ae4e57ea0923551a9af4820980e39\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:971aa438a29701d4b34e4943e91b5e984c3ae6ccbf80dd9efaffb01bd0b243a9\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:9a309c5de392dfe0f32ee57fa43ed8fc6ddf9985425e84bd51ed66bb16bce3a7\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-win32.whl\", hash = \"sha256:9ec1628180241d906a0840b38f162a3215114b14541f1a8711c368a8739a9be4\"},\n    {file = \"aiohttp-3.10.11-cp38-cp38-win_amd64.whl\", hash = \"sha256:9c6e0ffd52c929f985c7258f83185d17c76d4275ad22e90aa29f38e211aacbec\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:cdc493a2e5d8dc79b2df5bec9558425bcd39aff59fc949810cbd0832e294b106\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:b3e70f24e7d0405be2348da9d5a7836936bf3a9b4fd210f8c37e8d48bc32eca6\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:968b8fb2a5eee2770eda9c7b5581587ef9b96fbdf8dcabc6b446d35ccc69df01\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:deef4362af9493d1382ef86732ee2e4cbc0d7c005947bd54ad1a9a16dd59298e\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:686b03196976e327412a1b094f4120778c7c4b9cff9bce8d2fdfeca386b89829\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3bf6d027d9d1d34e1c2e1645f18a6498c98d634f8e373395221121f1c258ace8\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:099fd126bf960f96d34a760e747a629c27fb3634da5d05c7ef4d35ef4ea519fc\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c73c4d3dae0b4644bc21e3de546530531d6cdc88659cdeb6579cd627d3c206aa\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:0c5580f3c51eea91559db3facd45d72e7ec970b04528b4709b1f9c2555bd6d0b\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:fdf6429f0caabfd8a30c4e2eaecb547b3c340e4730ebfe25139779b9815ba138\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d97187de3c276263db3564bb9d9fad9e15b51ea10a371ffa5947a5ba93ad6777\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:0acafb350cfb2eba70eb5d271f55e08bd4502ec35e964e18ad3e7d34d71f7261\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:c13ed0c779911c7998a58e7848954bd4d63df3e3575f591e321b19a2aec8df9f\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-win32.whl\", hash = \"sha256:22b7c540c55909140f63ab4f54ec2c20d2635c0289cdd8006da46f3327f971b9\"},\n    {file = \"aiohttp-3.10.11-cp39-cp39-win_amd64.whl\", hash = \"sha256:7b26b1551e481012575dab8e3727b16fe7dd27eb2711d2e63ced7368756268fb\"},\n    {file = \"aiohttp-3.10.11.tar.gz\", hash = \"sha256:9dc2b8f3dcab2e39e0fa309c8da50c3b55e6f34ab25f1a71d3288f24924d33a7\"},\n]\n\n[package.dependencies]\naiohappyeyeballs = \">=2.3.0\"\naiosignal = \">=1.1.2\"\nasync-timeout = {version = \">=4.0,<6.0\", markers = \"python_version < \\\"3.11\\\"\"}\nattrs = \">=17.3.0\"\nfrozenlist = \">=1.1.1\"\nmultidict = \">=4.5,<7.0\"\nyarl = \">=1.12.0,<2.0\"\n\n[package.extras]\nspeedups = [\"Brotli\", \"aiodns (>=3.2.0)\", \"brotlicffi\"]\n\n[[package]]\nname = \"aiosignal\"\nversion = \"1.3.1\"\ndescription = \"aiosignal: a list of registered asynchronous callbacks\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"aiosignal-1.3.1-py3-none-any.whl\", hash = \"sha256:f8376fb07dd1e86a584e4fcdec80b36b7f81aac666ebc724e2c090300dd83b17\"},\n    {file = \"aiosignal-1.3.1.tar.gz\", hash = \"sha256:54cd96e15e1649b75d6c87526a6ff0b6c1b0dd3459f43d9ca11d48c339b68cfc\"},\n]\n\n[package.dependencies]\nfrozenlist = \">=1.1.0\"\n\n[[package]]\nname = \"annotated-types\"\nversion = \"0.7.0\"\ndescription = \"Reusable constraint types to use with typing.Annotated\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"annotated_types-0.7.0-py3-none-any.whl\", hash = \"sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53\"},\n    {file = \"annotated_types-0.7.0.tar.gz\", hash = \"sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89\"},\n]\n\n[[package]]\nname = \"ansicon\"\nversion = \"1.89.0\"\ndescription = \"Python wrapper for loading Jason Hood's ANSICON\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ansicon-1.89.0-py2.py3-none-any.whl\", hash = \"sha256:f1def52d17f65c2c9682cf8370c03f541f410c1752d6a14029f97318e4b9dfec\"},\n    {file = \"ansicon-1.89.0.tar.gz\", hash = \"sha256:e4d039def5768a47e4afec8e89e83ec3ae5a26bf00ad851f914d1240b444d2b1\"},\n]\n\n[[package]]\nname = \"anyio\"\nversion = \"4.5.2\"\ndescription = \"High level compatibility layer for multiple asynchronous event loop implementations\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"anyio-4.5.2-py3-none-any.whl\", hash = \"sha256:c011ee36bc1e8ba40e5a81cb9df91925c218fe9b778554e0b56a21e1b5d4716f\"},\n    {file = \"anyio-4.5.2.tar.gz\", hash = \"sha256:23009af4ed04ce05991845451e11ef02fc7c5ed29179ac9a420e5ad0ac7ddc5b\"},\n]\n\n[package.dependencies]\nexceptiongroup = {version = \">=1.0.2\", markers = \"python_version < \\\"3.11\\\"\"}\nidna = \">=2.8\"\nsniffio = \">=1.1\"\ntyping-extensions = {version = \">=4.1\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndoc = [\"Sphinx (>=7.4,<8.0)\", \"packaging\", \"sphinx-autodoc-typehints (>=1.2.0)\", \"sphinx-rtd-theme\"]\ntest = [\"anyio[trio]\", \"coverage[toml] (>=7)\", \"exceptiongroup (>=1.2.0)\", \"hypothesis (>=4.0)\", \"psutil (>=5.9)\", \"pytest (>=7.0)\", \"pytest-mock (>=3.6.1)\", \"trustme\", \"truststore (>=0.9.1)\", \"uvloop (>=0.21.0b1)\"]\ntrio = [\"trio (>=0.26.1)\"]\n\n[[package]]\nname = \"argcomplete\"\nversion = \"3.5.2\"\ndescription = \"Bash tab completion for argparse\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"argcomplete-3.5.2-py3-none-any.whl\", hash = \"sha256:036d020d79048a5d525bc63880d7a4b8d1668566b8a76daf1144c0bbe0f63472\"},\n    {file = \"argcomplete-3.5.2.tar.gz\", hash = \"sha256:23146ed7ac4403b70bd6026402468942ceba34a6732255b9edf5b7354f68a6bb\"},\n]\n\n[package.extras]\ntest = [\"coverage\", \"mypy\", \"pexpect\", \"ruff\", \"wheel\"]\n\n[[package]]\nname = \"asgiref\"\nversion = \"3.8.1\"\ndescription = \"ASGI specs, helper code, and adapters\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"asgiref-3.8.1-py3-none-any.whl\", hash = \"sha256:3e1e3ecc849832fe52ccf2cb6686b7a55f82bb1d6aee72a58826471390335e47\"},\n    {file = \"asgiref-3.8.1.tar.gz\", hash = \"sha256:c343bd80a0bec947a9860adb4c432ffa7db769836c64238fc34bdc3fec84d590\"},\n]\n\n[package.dependencies]\ntyping-extensions = {version = \">=4\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ntests = [\"mypy (>=0.800)\", \"pytest\", \"pytest-asyncio\"]\n\n[[package]]\nname = \"asttokens\"\nversion = \"3.0.0\"\ndescription = \"Annotate AST trees with source code positions\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"asttokens-3.0.0-py3-none-any.whl\", hash = \"sha256:e3078351a059199dd5138cb1c706e6430c05eff2ff136af5eb4790f9d28932e2\"},\n    {file = \"asttokens-3.0.0.tar.gz\", hash = \"sha256:0dcd8baa8d62b0c1d118b399b2ddba3c4aff271d0d7a9e0d4c1681c79035bbc7\"},\n]\n\n[package.extras]\nastroid = [\"astroid (>=2,<4)\"]\ntest = [\"astroid (>=2,<4)\", \"pytest\", \"pytest-cov\", \"pytest-xdist\"]\n\n[[package]]\nname = \"async-timeout\"\nversion = \"5.0.1\"\ndescription = \"Timeout context manager for asyncio programs\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"async_timeout-5.0.1-py3-none-any.whl\", hash = \"sha256:39e3809566ff85354557ec2398b55e096c8364bacac9405a7a1fa429e77fe76c\"},\n    {file = \"async_timeout-5.0.1.tar.gz\", hash = \"sha256:d9321a7a3d5a6a5e187e824d2fa0793ce379a202935782d555d6e9d2735677d3\"},\n]\n\n[[package]]\nname = \"attrs\"\nversion = \"24.3.0\"\ndescription = \"Classes Without Boilerplate\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"attrs-24.3.0-py3-none-any.whl\", hash = \"sha256:ac96cd038792094f438ad1f6ff80837353805ac950cd2aa0e0625ef19850c308\"},\n    {file = \"attrs-24.3.0.tar.gz\", hash = \"sha256:8f5c07333d543103541ba7be0e2ce16eeee8130cb0b3f9238ab904ce1e85baff\"},\n]\n\n[package.extras]\nbenchmark = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-codspeed\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ncov = [\"cloudpickle\", \"coverage[toml] (>=5.3)\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ndev = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pre-commit-uv\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ndocs = [\"cogapp\", \"furo\", \"myst-parser\", \"sphinx\", \"sphinx-notfound-page\", \"sphinxcontrib-towncrier\", \"towncrier (<24.7)\"]\ntests = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ntests-mypy = [\"mypy (>=1.11.1)\", \"pytest-mypy-plugins\"]\n\n[[package]]\nname = \"autobahn\"\nversion = \"23.1.2\"\ndescription = \"WebSocket client & server library, WAMP real-time framework\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"autobahn-23.1.2.tar.gz\", hash = \"sha256:c5ef8ca7422015a1af774a883b8aef73d4954c9fcd182c9b5244e08e973f7c3a\"},\n]\n\n[package.dependencies]\ncryptography = \">=3.4.6\"\nhyperlink = \">=21.0.0\"\nsetuptools = \"*\"\ntxaio = \">=21.2.1\"\n\n[package.extras]\nall = [\"PyGObject (>=3.40.0)\", \"argon2_cffi (>=20.1.0)\", \"attrs (>=20.3.0)\", \"base58 (>=2.1.0)\", \"cbor2 (>=5.2.0)\", \"cffi (>=1.14.5)\", \"click (>=8.1.2)\", \"ecdsa (>=0.16.1)\", \"eth-abi @ git+https://github.com/ethereum/eth-abi.git@v4.0.0-beta.2\", \"flatbuffers (>=22.12.6)\", \"hkdf (>=0.0.3)\", \"jinja2 (>=2.11.3)\", \"mnemonic (>=0.19)\", \"msgpack (>=1.0.2)\", \"passlib (>=1.7.4)\", \"py-ecc (>=5.1.0)\", \"py-eth-sig-utils (>=0.4.0)\", \"py-multihash (>=2.0.1)\", \"py-ubjson (>=0.16.1)\", \"pynacl (>=1.4.0)\", \"pyopenssl (>=20.0.1)\", \"python-snappy (>=0.6.0)\", \"pytrie (>=0.4.0)\", \"qrcode (>=7.3.1)\", \"rlp (>=2.0.1)\", \"service_identity (>=18.1.0)\", \"spake2 (>=0.8)\", \"twisted (>=20.3.0)\", \"ujson (>=4.0.2)\", \"web3[ipfs] @ git+https://github.com/ethereum/web3.py.git@v6.0.0-beta.9\", \"xbr (>=21.2.1)\", \"yapf (==0.29.0)\", \"zlmdb (>=21.2.1)\", \"zope.interface (>=5.2.0)\"]\ncompress = [\"python-snappy (>=0.6.0)\"]\ndev = [\"backports.tempfile (>=1.0)\", \"bumpversion (>=0.5.3)\", \"codecov (>=2.0.15)\", \"flake8 (<5)\", \"humanize (>=0.5.1)\", \"mypy (>=0.610)\", \"passlib\", \"pep8-naming (>=0.3.3)\", \"pip (>=9.0.1)\", \"pyenchant (>=1.6.6)\", \"pyflakes (>=1.0.0)\", \"pyinstaller (>=4.2)\", \"pylint (>=1.9.2)\", \"pytest (>=3.4.2)\", \"pytest-aiohttp\", \"pytest-asyncio (>=0.14.0)\", \"pytest-runner (>=2.11.1)\", \"pyyaml (>=4.2b4)\", \"qualname\", \"sphinx (>=1.7.1)\", \"sphinx-autoapi (>=1.7.0)\", \"sphinx_rtd_theme (>=0.1.9)\", \"sphinxcontrib-images (>=0.9.1)\", \"tox (>=4.2.8)\", \"tox-gh-actions (>=2.2.0)\", \"twine (>=3.3.0)\", \"twisted (>=22.10.0)\", \"txaio (>=20.4.1)\", \"watchdog (>=0.8.3)\", \"wheel (>=0.36.2)\", \"yapf (==0.29.0)\"]\nencryption = [\"pynacl (>=1.4.0)\", \"pyopenssl (>=20.0.1)\", \"pytrie (>=0.4.0)\", \"qrcode (>=7.3.1)\", \"service_identity (>=18.1.0)\"]\nnvx = [\"cffi (>=1.14.5)\"]\nscram = [\"argon2_cffi (>=20.1.0)\", \"cffi (>=1.14.5)\", \"passlib (>=1.7.4)\"]\nserialization = [\"cbor2 (>=5.2.0)\", \"flatbuffers (>=22.12.6)\", \"msgpack (>=1.0.2)\", \"py-ubjson (>=0.16.1)\", \"ujson (>=4.0.2)\"]\ntwisted = [\"attrs (>=20.3.0)\", \"twisted (>=20.3.0)\", \"zope.interface (>=5.2.0)\"]\nui = [\"PyGObject (>=3.40.0)\"]\nxbr = [\"base58 (>=2.1.0)\", \"cbor2 (>=5.2.0)\", \"click (>=8.1.2)\", \"ecdsa (>=0.16.1)\", \"eth-abi @ git+https://github.com/ethereum/eth-abi.git@v4.0.0-beta.2\", \"hkdf (>=0.0.3)\", \"jinja2 (>=2.11.3)\", \"mnemonic (>=0.19)\", \"py-ecc (>=5.1.0)\", \"py-eth-sig-utils (>=0.4.0)\", \"py-multihash (>=2.0.1)\", \"rlp (>=2.0.1)\", \"spake2 (>=0.8)\", \"twisted (>=20.3.0)\", \"web3[ipfs] @ git+https://github.com/ethereum/web3.py.git@v6.0.0-beta.9\", \"xbr (>=21.2.1)\", \"yapf (==0.29.0)\", \"zlmdb (>=21.2.1)\"]\n\n[[package]]\nname = \"automat\"\nversion = \"24.8.1\"\ndescription = \"Self-service finite-state machines for the programmer on the go.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"Automat-24.8.1-py3-none-any.whl\", hash = \"sha256:bf029a7bc3da1e2c24da2343e7598affaa9f10bf0ab63ff808566ce90551e02a\"},\n    {file = \"automat-24.8.1.tar.gz\", hash = \"sha256:b34227cf63f6325b8ad2399ede780675083e439b20c323d376373d8ee6306d88\"},\n]\n\n[package.dependencies]\ntyping-extensions = {version = \"*\", markers = \"python_version < \\\"3.10\\\"\"}\n\n[package.extras]\nvisualize = [\"Twisted (>=16.1.1)\", \"graphviz (>0.5.1)\"]\n\n[[package]]\nname = \"black\"\nversion = \"24.8.0\"\ndescription = \"The uncompromising code formatter.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"black-24.8.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:09cdeb74d494ec023ded657f7092ba518e8cf78fa8386155e4a03fdcc44679e6\"},\n    {file = \"black-24.8.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:81c6742da39f33b08e791da38410f32e27d632260e599df7245cccee2064afeb\"},\n    {file = \"black-24.8.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:707a1ca89221bc8a1a64fb5e15ef39cd755633daa672a9db7498d1c19de66a42\"},\n    {file = \"black-24.8.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:d6417535d99c37cee4091a2f24eb2b6d5ec42b144d50f1f2e436d9fe1916fe1a\"},\n    {file = \"black-24.8.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:fb6e2c0b86bbd43dee042e48059c9ad7830abd5c94b0bc518c0eeec57c3eddc1\"},\n    {file = \"black-24.8.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:837fd281f1908d0076844bc2b801ad2d369c78c45cf800cad7b61686051041af\"},\n    {file = \"black-24.8.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:62e8730977f0b77998029da7971fa896ceefa2c4c4933fcd593fa599ecbf97a4\"},\n    {file = \"black-24.8.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:72901b4913cbac8972ad911dc4098d5753704d1f3c56e44ae8dce99eecb0e3af\"},\n    {file = \"black-24.8.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:7c046c1d1eeb7aea9335da62472481d3bbf3fd986e093cffd35f4385c94ae368\"},\n    {file = \"black-24.8.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:649f6d84ccbae73ab767e206772cc2d7a393a001070a4c814a546afd0d423aed\"},\n    {file = \"black-24.8.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:2b59b250fdba5f9a9cd9d0ece6e6d993d91ce877d121d161e4698af3eb9c1018\"},\n    {file = \"black-24.8.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:6e55d30d44bed36593c3163b9bc63bf58b3b30e4611e4d88a0c3c239930ed5b2\"},\n    {file = \"black-24.8.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:505289f17ceda596658ae81b61ebbe2d9b25aa78067035184ed0a9d855d18afd\"},\n    {file = \"black-24.8.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:b19c9ad992c7883ad84c9b22aaa73562a16b819c1d8db7a1a1a49fb7ec13c7d2\"},\n    {file = \"black-24.8.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:1f13f7f386f86f8121d76599114bb8c17b69d962137fc70efe56137727c7047e\"},\n    {file = \"black-24.8.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:f490dbd59680d809ca31efdae20e634f3fae27fba3ce0ba3208333b713bc3920\"},\n    {file = \"black-24.8.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:eab4dd44ce80dea27dc69db40dab62d4ca96112f87996bca68cd75639aeb2e4c\"},\n    {file = \"black-24.8.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3c4285573d4897a7610054af5a890bde7c65cb466040c5f0c8b732812d7f0e5e\"},\n    {file = \"black-24.8.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:9e84e33b37be070ba135176c123ae52a51f82306def9f7d063ee302ecab2cf47\"},\n    {file = \"black-24.8.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:73bbf84ed136e45d451a260c6b73ed674652f90a2b3211d6a35e78054563a9bb\"},\n    {file = \"black-24.8.0-py3-none-any.whl\", hash = \"sha256:972085c618ee94f402da1af548a4f218c754ea7e5dc70acb168bfaca4c2542ed\"},\n    {file = \"black-24.8.0.tar.gz\", hash = \"sha256:2500945420b6784c38b9ee885af039f5e7471ef284ab03fa35ecdde4688cd83f\"},\n]\n\n[package.dependencies]\nclick = \">=8.0.0\"\nmypy-extensions = \">=0.4.3\"\npackaging = \">=22.0\"\npathspec = \">=0.9.0\"\nplatformdirs = \">=2\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntyping-extensions = {version = \">=4.0.1\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ncolorama = [\"colorama (>=0.4.3)\"]\nd = [\"aiohttp (>=3.7.4)\", \"aiohttp (>=3.7.4,!=3.9.0)\"]\njupyter = [\"ipython (>=7.8.0)\", \"tokenize-rt (>=3.2.0)\"]\nuvloop = [\"uvloop (>=0.15.2)\"]\n\n[[package]]\nname = \"blessed\"\nversion = \"1.20.0\"\ndescription = \"Easy, practical library for making terminal apps, by providing an elegant, well-documented interface to Colors, Keyboard input, and screen Positioning capabilities.\"\noptional = false\npython-versions = \">=2.7\"\nfiles = [\n    {file = \"blessed-1.20.0-py2.py3-none-any.whl\", hash = \"sha256:0c542922586a265e699188e52d5f5ac5ec0dd517e5a1041d90d2bbf23f906058\"},\n    {file = \"blessed-1.20.0.tar.gz\", hash = \"sha256:2cdd67f8746e048f00df47a2880f4d6acbcdb399031b604e34ba8f71d5787680\"},\n]\n\n[package.dependencies]\njinxed = {version = \">=1.1.0\", markers = \"platform_system == \\\"Windows\\\"\"}\nsix = \">=1.9.0\"\nwcwidth = \">=0.1.4\"\n\n[[package]]\nname = \"blinker\"\nversion = \"1.8.2\"\ndescription = \"Fast, simple object-to-object and broadcast signaling\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"blinker-1.8.2-py3-none-any.whl\", hash = \"sha256:1779309f71bf239144b9399d06ae925637cf6634cf6bd131104184531bf67c01\"},\n    {file = \"blinker-1.8.2.tar.gz\", hash = \"sha256:8f77b09d3bf7c795e969e9486f39c2c5e9c39d4ee07424be2bc594ece9642d83\"},\n]\n\n[[package]]\nname = \"botocore\"\nversion = \"1.35.85\"\ndescription = \"Low-level, data-driven core of boto 3.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"botocore-1.35.85-py3-none-any.whl\", hash = \"sha256:04c196905b0eebcb29f7594a9e4588772a5222deed1b381f54cab78d0f30e239\"},\n    {file = \"botocore-1.35.85.tar.gz\", hash = \"sha256:5e7e8075e85427c9e0e6d15dcb7d13b3c843011b25d43981571fe1bfb3fd6985\"},\n]\n\n[package.dependencies]\njmespath = \">=0.7.1,<2.0.0\"\npython-dateutil = \">=2.1,<3.0.0\"\nurllib3 = [\n    {version = \">=1.25.4,<1.27\", markers = \"python_version < \\\"3.10\\\"\"},\n    {version = \">=1.25.4,<2.2.0 || >2.2.0,<3\", markers = \"python_version >= \\\"3.10\\\"\"},\n]\n\n[package.extras]\ncrt = [\"awscrt (==0.22.0)\"]\n\n[[package]]\nname = \"build\"\nversion = \"1.2.2.post1\"\ndescription = \"A simple, correct Python build frontend\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"build-1.2.2.post1-py3-none-any.whl\", hash = \"sha256:1d61c0887fa860c01971625baae8bdd338e517b836a2f70dd1f7aa3a6b2fc5b5\"},\n    {file = \"build-1.2.2.post1.tar.gz\", hash = \"sha256:b36993e92ca9375a219c99e606a122ff365a760a2d4bba0caa09bd5278b608b7\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"os_name == \\\"nt\\\"\"}\nimportlib-metadata = {version = \">=4.6\", markers = \"python_full_version < \\\"3.10.2\\\"\"}\npackaging = \">=19.1\"\npyproject_hooks = \"*\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndocs = [\"furo (>=2023.08.17)\", \"sphinx (>=7.0,<8.0)\", \"sphinx-argparse-cli (>=1.5)\", \"sphinx-autodoc-typehints (>=1.10)\", \"sphinx-issues (>=3.0.0)\"]\ntest = [\"build[uv,virtualenv]\", \"filelock (>=3)\", \"pytest (>=6.2.4)\", \"pytest-cov (>=2.12)\", \"pytest-mock (>=2)\", \"pytest-rerunfailures (>=9.1)\", \"pytest-xdist (>=1.34)\", \"setuptools (>=42.0.0)\", \"setuptools (>=56.0.0)\", \"setuptools (>=56.0.0)\", \"setuptools (>=67.8.0)\", \"wheel (>=0.36.0)\"]\ntyping = [\"build[uv]\", \"importlib-metadata (>=5.1)\", \"mypy (>=1.9.0,<1.10.0)\", \"tomli\", \"typing-extensions (>=3.7.4.3)\"]\nuv = [\"uv (>=0.1.18)\"]\nvirtualenv = [\"virtualenv (>=20.0.35)\"]\n\n[[package]]\nname = \"cachecontrol\"\nversion = \"0.14.1\"\ndescription = \"httplib2 caching for requests\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"cachecontrol-0.14.1-py3-none-any.whl\", hash = \"sha256:65e3abd62b06382ce3894df60dde9e0deb92aeb734724f68fa4f3b91e97206b9\"},\n    {file = \"cachecontrol-0.14.1.tar.gz\", hash = \"sha256:06ef916a1e4eb7dba9948cdfc9c76e749db2e02104a9a1277e8b642591a0f717\"},\n]\n\n[package.dependencies]\nfilelock = {version = \">=3.8.0\", optional = true, markers = \"extra == \\\"filecache\\\"\"}\nmsgpack = \">=0.5.2,<2.0.0\"\nrequests = \">=2.16.0\"\n\n[package.extras]\ndev = [\"CacheControl[filecache,redis]\", \"build\", \"cherrypy\", \"codespell[tomli]\", \"furo\", \"mypy\", \"pytest\", \"pytest-cov\", \"ruff\", \"sphinx\", \"sphinx-copybutton\", \"tox\", \"types-redis\", \"types-requests\"]\nfilecache = [\"filelock (>=3.8.0)\"]\nredis = [\"redis (>=2.10.5)\"]\n\n[[package]]\nname = \"certifi\"\nversion = \"2024.12.14\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"certifi-2024.12.14-py3-none-any.whl\", hash = \"sha256:1275f7a45be9464efc1173084eaa30f866fe2e47d389406136d332ed4967ec56\"},\n    {file = \"certifi-2024.12.14.tar.gz\", hash = \"sha256:b650d30f370c2b724812bee08008be0c4163b163ddaec3f2546c1caf65f191db\"},\n]\n\n[[package]]\nname = \"cffi\"\nversion = \"1.17.1\"\ndescription = \"Foreign Function Interface for Python calling C code.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:df8b1c11f177bc2313ec4b2d46baec87a5f3e71fc8b45dab2ee7cae86d9aba14\"},\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8f2cdc858323644ab277e9bb925ad72ae0e67f69e804f4898c070998d50b1a67\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:edae79245293e15384b51f88b00613ba9f7198016a5948b5dddf4917d4d26382\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:45398b671ac6d70e67da8e4224a065cec6a93541bb7aebe1b198a61b58c7b702\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ad9413ccdeda48c5afdae7e4fa2192157e991ff761e7ab8fdd8926f40b160cc3\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5da5719280082ac6bd9aa7becb3938dc9f9cbd57fac7d2871717b1feb0902ab6\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2bb1a08b8008b281856e5971307cc386a8e9c5b625ac297e853d36da6efe9c17\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:045d61c734659cc045141be4bae381a41d89b741f795af1dd018bfb532fd0df8\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:6883e737d7d9e4899a8a695e00ec36bd4e5e4f18fabe0aca0efe0a4b44cdb13e\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:6b8b4a92e1c65048ff98cfe1f735ef8f1ceb72e3d5f0c25fdb12087a23da22be\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win32.whl\", hash = \"sha256:c9c3d058ebabb74db66e431095118094d06abf53284d9c81f27300d0e0d8bc7c\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f048dcf80db46f0098ccac01132761580d28e28bc0f78ae0d58048063317e15\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:a45e3c6913c5b87b3ff120dcdc03f6131fa0065027d0ed7ee6190736a74cd401\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:30c5e0cb5ae493c04c8b42916e52ca38079f1b235c2f8ae5f4527b963c401caf\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f75c7ab1f9e4aca5414ed4d8e5c0e303a34f4421f8a0d47a4d019ceff0ab6af4\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a1ed2dd2972641495a3ec98445e09766f077aee98a1c896dcb4ad0d303628e41\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:46bf43160c1a35f7ec506d254e5c890f3c03648a4dbac12d624e4490a7046cd1\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a24ed04c8ffd54b0729c07cee15a81d964e6fee0e3d4d342a27b020d22959dc6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:610faea79c43e44c71e1ec53a554553fa22321b65fae24889706c0a84d4ad86d\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:a9b15d491f3ad5d692e11f6b71f7857e7835eb677955c00cc0aefcd0669adaf6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:de2ea4b5833625383e464549fec1bc395c1bdeeb5f25c4a3a82b5a8c756ec22f\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:fc48c783f9c87e60831201f2cce7f3b2e4846bf4d8728eabe54d60700b318a0b\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win32.whl\", hash = \"sha256:85a950a4ac9c359340d5963966e3e0a94a676bd6245a4b55bc43949eee26a655\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:caaf0640ef5f5517f49bc275eca1406b0ffa6aa184892812030f04c2abf589a0\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:805b4371bf7197c329fcb3ead37e710d1bca9da5d583f5073b799d5c5bd1eee4\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:733e99bc2df47476e3848417c5a4540522f234dfd4ef3ab7fafdf555b082ec0c\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1257bdabf294dceb59f5e70c64a3e2f462c30c7ad68092d01bbbfb1c16b1ba36\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da95af8214998d77a98cc14e3a3bd00aa191526343078b530ceb0bd710fb48a5\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d63afe322132c194cf832bfec0dc69a99fb9bb6bbd550f161a49e9e855cc78ff\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f79fc4fc25f1c8698ff97788206bb3c2598949bfe0fef03d299eb1b5356ada99\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b62ce867176a75d03a665bad002af8e6d54644fad99a3c70905c543130e39d93\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:386c8bf53c502fff58903061338ce4f4950cbdcb23e2902d86c0f722b786bbe3\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:4ceb10419a9adf4460ea14cfd6bc43d08701f0835e979bf821052f1805850fe8\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win32.whl\", hash = \"sha256:a08d7e755f8ed21095a310a693525137cfe756ce62d066e53f502a83dc550f65\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:51392eae71afec0d0c8fb1a53b204dbb3bcabcb3c9b807eedf3e1e6ccf2de903\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f3a2b4222ce6b60e2e8b337bb9596923045681d71e5a082783484d845390938e\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:0984a4925a435b1da406122d4d7968dd861c1385afe3b45ba82b750f229811e2\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d01b12eeeb4427d3110de311e1774046ad344f5b1a7403101878976ecd7a10f3\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:706510fe141c86a69c8ddc029c7910003a17353970cff3b904ff0686a5927683\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de55b766c7aa2e2a3092c51e0483d700341182f08e67c63630d5b6f200bb28e5\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c59d6e989d07460165cc5ad3c61f9fd8f1b4796eacbd81cee78957842b834af4\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd398dbc6773384a17fe0d3e7eeb8d1a21c2200473ee6806bb5e6a8e62bb73dd\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:3edc8d958eb099c634dace3c7e16560ae474aa3803a5df240542b305d14e14ed\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:72e72408cad3d5419375fc87d289076ee319835bdfa2caad331e377589aebba9\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win32.whl\", hash = \"sha256:e03eab0a8677fa80d646b5ddece1cbeaf556c313dcfac435ba11f107ba117b5d\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:f6a16c31041f09ead72d69f583767292f750d24913dadacf5756b966aacb3f1a\"},\n    {file = \"cffi-1.17.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:636062ea65bd0195bc012fea9321aca499c0504409f413dc88af450b57ffd03b\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c7eac2ef9b63c79431bc4b25f1cd649d7f061a28808cbc6c47b534bd789ef964\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e221cf152cff04059d011ee126477f0d9588303eb57e88923578ace7baad17f9\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:31000ec67d4221a71bd3f67df918b1f88f676f1c3b535a7eb473255fdc0b83fc\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6f17be4345073b0a7b8ea599688f692ac3ef23ce28e5df79c04de519dbc4912c\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0e2b1fac190ae3ebfe37b979cc1ce69c81f4e4fe5746bb401dca63a9062cdaf1\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win32.whl\", hash = \"sha256:7596d6620d3fa590f677e9ee430df2958d2d6d6de2feeae5b20e82c00b76fbf8\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:78122be759c3f8a014ce010908ae03364d00a1f81ab5c7f4a7a5120607ea56e1\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:b2ab587605f4ba0bf81dc0cb08a41bd1c0a5906bd59243d56bad7668a6fc6c16\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:28b16024becceed8c6dfbc75629e27788d8a3f9030691a1dbf9821a128b22c36\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1d599671f396c4723d016dbddb72fe8e0397082b0a77a4fab8028923bec050e8\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ca74b8dbe6e8e8263c0ffd60277de77dcee6c837a3d0881d8c1ead7268c9e576\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f7f5baafcc48261359e14bcd6d9bff6d4b28d9103847c9e136694cb0501aef87\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:98e3969bcff97cae1b2def8ba499ea3d6f31ddfdb7635374834cf89a1a08ecf0\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdf5ce3acdfd1661132f2a9c19cac174758dc2352bfe37d98aa7512c6b7178b3\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:9755e4345d1ec879e3849e62222a18c7174d65a6a92d5b346b1863912168b595\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:f1e22e8c4419538cb197e4dd60acc919d7696e5ef98ee4da4e01d3f8cfa4cc5a\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:c03e868a0b3bc35839ba98e74211ed2b05d2119be4e8a0f224fba9384f1fe02e\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win32.whl\", hash = \"sha256:e31ae45bc2e29f6b2abd0de1cc3b9d5205aa847cafaecb8af1476a609a2f6eb7\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:d016c76bdd850f3c626af19b0542c9677ba156e4ee4fccfdd7848803533ef662\"},\n    {file = \"cffi-1.17.1.tar.gz\", hash = \"sha256:1c39c6016c32bc48dd54561950ebd6836e1670f2ae46128f67cf49e789c52824\"},\n]\n\n[package.dependencies]\npycparser = \"*\"\n\n[[package]]\nname = \"chalice\"\nversion = \"1.31.3\"\ndescription = \"Microframework\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"chalice-1.31.3-py3-none-any.whl\", hash = \"sha256:5b994f658b7d3bd5ea4ee83df356600ac461142c041b528e3b16a488f3c01239\"},\n    {file = \"chalice-1.31.3.tar.gz\", hash = \"sha256:b971b23ca4ee636c4cfaf0ab4e9522b98d9ea5f049caf4c80f841598c0e861ae\"},\n]\n\n[package.dependencies]\nbotocore = \">=1.14.0,<2.0.0\"\nclick = \">=7,<9.0\"\ninquirer = \">=3.0.0,<4.0.0\"\njmespath = \">=0.9.3,<2.0.0\"\npip = \">=9,<24.4\"\npyyaml = \">=5.3.1,<7.0.0\"\nsetuptools = \"*\"\nsix = \">=1.10.0,<2.0.0\"\nwheel = \"*\"\n\n[package.extras]\ncdk = [\"aws_cdk.aws-s3-assets (>=1.85.0,<2.0)\", \"aws_cdk.aws_iam (>=1.85.0,<2.0)\", \"aws_cdk.cloudformation-include (>=1.85.0,<2.0)\", \"aws_cdk.core (>=1.85.0,<2.0)\"]\ncdkv2 = [\"aws-cdk-lib (>2.0,<3.0)\"]\nevent-file-poller = [\"watchdog (==2.3.1)\"]\n\n[[package]]\nname = \"channels\"\nversion = \"4.2.0\"\ndescription = \"Brings async, event-driven capabilities to Django.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"channels-4.2.0-py3-none-any.whl\", hash = \"sha256:6b75bc8d6888fb7236e7e7bf1948520b72d296ad08216a242fc56b1db0ffde1a\"},\n    {file = \"channels-4.2.0.tar.gz\", hash = \"sha256:d9e707487431ba5dbce9af982970dab3b0efd786580fadb99e45dca5e39fdd59\"},\n]\n\n[package.dependencies]\nasgiref = \">=3.6.0,<4\"\nDjango = \">=4.2\"\n\n[package.extras]\ndaphne = [\"daphne (>=4.0.0)\"]\ntests = [\"async-timeout\", \"coverage (>=4.5,<5.0)\", \"pytest\", \"pytest-asyncio\", \"pytest-django\"]\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"3.4.0\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\noptional = false\npython-versions = \">=3.7.0\"\nfiles = [\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:4f9fc98dad6c2eaa32fc3af1417d95b5e3d08aff968df0cd320066def971f9a6\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0de7b687289d3c1b3e8660d0741874abe7888100efe14bd0f9fd7141bcbda92b\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:5ed2e36c3e9b4f21dd9422f6893dec0abf2cca553af509b10cd630f878d3eb99\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:40d3ff7fc90b98c637bda91c89d51264a3dcf210cade3a2c6f838c7268d7a4ca\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1110e22af8ca26b90bd6364fe4c763329b0ebf1ee213ba32b68c73de5752323d\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:86f4e8cca779080f66ff4f191a685ced73d2f72d50216f7112185dc02b90b9b7\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7f683ddc7eedd742e2889d2bfb96d69573fde1d92fcb811979cdb7165bb9c7d3\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:27623ba66c183eca01bf9ff833875b459cad267aeeb044477fedac35e19ba907\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f606a1881d2663630ea5b8ce2efe2111740df4b687bd78b34a8131baa007f79b\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:0b309d1747110feb25d7ed6b01afdec269c647d382c857ef4663bbe6ad95a912\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:136815f06a3ae311fae551c3df1f998a1ebd01ddd424aa5603a4336997629e95\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:14215b71a762336254351b00ec720a8e85cada43b987da5a042e4ce3e82bd68e\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:79983512b108e4a164b9c8d34de3992f76d48cadc9554c9e60b43f308988aabe\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-win32.whl\", hash = \"sha256:c94057af19bc953643a33581844649a7fdab902624d2eb739738a30e2b3e60fc\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:55f56e2ebd4e3bc50442fbc0888c9d8c94e4e06a933804e2af3e89e2f9c1c749\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:0d99dd8ff461990f12d6e42c7347fd9ab2532fb70e9621ba520f9e8637161d7c\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c57516e58fd17d03ebe67e181a4e4e2ccab1168f8c2976c6a334d4f819fe5944\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6dba5d19c4dfab08e58d5b36304b3f92f3bd5d42c1a3fa37b5ba5cdf6dfcbcee\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf4475b82be41b07cc5e5ff94810e6a01f276e37c2d55571e3fe175e467a1a1c\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ce031db0408e487fd2775d745ce30a7cd2923667cf3b69d48d219f1d8f5ddeb6\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8ff4e7cdfdb1ab5698e675ca622e72d58a6fa2a8aa58195de0c0061288e6e3ea\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3710a9751938947e6327ea9f3ea6332a09bf0ba0c09cae9cb1f250bd1f1549bc\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:82357d85de703176b5587dbe6ade8ff67f9f69a41c0733cf2425378b49954de5\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:47334db71978b23ebcf3c0f9f5ee98b8d65992b65c9c4f2d34c2eaf5bcaf0594\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:8ce7fd6767a1cc5a92a639b391891bf1c268b03ec7e021c7d6d902285259685c\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f1a2f519ae173b5b6a2c9d5fa3116ce16e48b3462c8b96dfdded11055e3d6365\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:63bc5c4ae26e4bc6be6469943b8253c0fd4e4186c43ad46e713ea61a0ba49129\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:bcb4f8ea87d03bc51ad04add8ceaf9b0f085ac045ab4d74e73bbc2dc033f0236\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-win32.whl\", hash = \"sha256:9ae4ef0b3f6b41bad6366fb0ea4fc1d7ed051528e113a60fa2a65a9abb5b1d99\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:cee4373f4d3ad28f1ab6290684d8e2ebdb9e7a1b74fdc39e4c211995f77bec27\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:0713f3adb9d03d49d365b70b84775d0a0d18e4ab08d12bc46baa6132ba78aaf6\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:de7376c29d95d6719048c194a9cf1a1b0393fbe8488a22008610b0361d834ecf\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:4a51b48f42d9358460b78725283f04bddaf44a9358197b889657deba38f329db\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b295729485b06c1a0683af02a9e42d2caa9db04a373dc38a6a58cdd1e8abddf1\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ee803480535c44e7f5ad00788526da7d85525cfefaf8acf8ab9a310000be4b03\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3d59d125ffbd6d552765510e3f31ed75ebac2c7470c7274195b9161a32350284\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8cda06946eac330cbe6598f77bb54e690b4ca93f593dee1568ad22b04f347c15\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:07afec21bbbbf8a5cc3651aa96b980afe2526e7f048fdfb7f1014d84acc8b6d8\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6b40e8d38afe634559e398cc32b1472f376a4099c75fe6299ae607e404c033b2\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:b8dcd239c743aa2f9c22ce674a145e0a25cb1566c495928440a181ca1ccf6719\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:84450ba661fb96e9fd67629b93d2941c871ca86fc38d835d19d4225ff946a631\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:44aeb140295a2f0659e113b31cfe92c9061622cadbc9e2a2f7b8ef6b1e29ef4b\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:1db4e7fefefd0f548d73e2e2e041f9df5c59e178b4c72fbac4cc6f535cfb1565\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-win32.whl\", hash = \"sha256:5726cf76c982532c1863fb64d8c6dd0e4c90b6ece9feb06c9f202417a31f7dd7\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:b197e7094f232959f8f20541ead1d9862ac5ebea1d58e9849c1bf979255dfac9\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:dd4eda173a9fcccb5f2e2bd2a9f423d180194b1bf17cf59e3269899235b2a114\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e9e3c4c9e1ed40ea53acf11e2a386383c3304212c965773704e4603d589343ed\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:92a7e36b000bf022ef3dbb9c46bfe2d52c047d5e3f3343f43204263c5addc250\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54b6a92d009cbe2fb11054ba694bc9e284dad30a26757b1e372a1fdddaf21920\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1ffd9493de4c922f2a38c2bf62b831dcec90ac673ed1ca182fe11b4d8e9f2a64\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:35c404d74c2926d0287fbd63ed5d27eb911eb9e4a3bb2c6d294f3cfd4a9e0c23\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4796efc4faf6b53a18e3d46343535caed491776a22af773f366534056c4e1fbc\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e7fdd52961feb4c96507aa649550ec2a0d527c086d284749b2f582f2d40a2e0d\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:92db3c28b5b2a273346bebb24857fda45601aef6ae1c011c0a997106581e8a88\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:ab973df98fc99ab39080bfb0eb3a925181454d7c3ac8a1e695fddfae696d9e90\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4b67fdab07fdd3c10bb21edab3cbfe8cf5696f453afce75d815d9d7223fbe88b\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:aa41e526a5d4a9dfcfbab0716c7e8a1b215abd3f3df5a45cf18a12721d31cb5d\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:ffc519621dce0c767e96b9c53f09c5d215578e10b02c285809f76509a3931482\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-win32.whl\", hash = \"sha256:f19c1585933c82098c2a520f8ec1227f20e339e33aca8fa6f956f6691b784e67\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:707b82d19e65c9bd28b81dde95249b07bf9f5b90ebe1ef17d9b57473f8a64b7b\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:dbe03226baf438ac4fda9e2d0715022fd579cb641c4cf639fa40d53b2fe6f3e2\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dd9a8bd8900e65504a305bf8ae6fa9fbc66de94178c420791d0293702fce2df7\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b8831399554b92b72af5932cdbbd4ddc55c55f631bb13ff8fe4e6536a06c5c51\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a14969b8691f7998e74663b77b4c36c0337cb1df552da83d5c9004a93afdb574\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dcaf7c1524c0542ee2fc82cc8ec337f7a9f7edee2532421ab200d2b920fc97cf\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:425c5f215d0eecee9a56cdb703203dda90423247421bf0d67125add85d0c4455\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:d5b054862739d276e09928de37c79ddeec42a6e1bfc55863be96a36ba22926f6\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:f3e73a4255342d4eb26ef6df01e3962e73aa29baa3124a8e824c5d3364a65748\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:2f6c34da58ea9c1a9515621f4d9ac379871a8f21168ba1b5e09d74250de5ad62\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:f09cb5a7bbe1ecae6e87901a2eb23e0256bb524a79ccc53eb0b7629fbe7677c4\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:0099d79bdfcf5c1f0c2c72f91516702ebf8b0b8ddd8905f97a8aecf49712c621\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-win32.whl\", hash = \"sha256:9c98230f5042f4945f957d006edccc2af1e03ed5e37ce7c373f00a5a4daa6149\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:62f60aebecfc7f4b82e3f639a7d1433a20ec32824db2199a11ad4f5e146ef5ee\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:af73657b7a68211996527dbfeffbb0864e043d270580c5aef06dc4b659a4b578\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:cab5d0b79d987c67f3b9e9c53f54a61360422a5a0bc075f43cab5621d530c3b6\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:9289fd5dddcf57bab41d044f1756550f9e7cf0c8e373b8cdf0ce8773dc4bd417\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6b493a043635eb376e50eedf7818f2f322eabbaa974e948bd8bdd29eb7ef2a51\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9fa2566ca27d67c86569e8c85297aaf413ffab85a8960500f12ea34ff98e4c41\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a8e538f46104c815be19c975572d74afb53f29650ea2025bbfaef359d2de2f7f\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6fd30dc99682dc2c603c2b315bded2799019cea829f8bf57dc6b61efde6611c8\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2006769bd1640bdf4d5641c69a3d63b71b81445473cac5ded39740a226fa88ab\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:dc15e99b2d8a656f8e666854404f1ba54765871104e50c8e9813af8a7db07f12\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:ab2e5bef076f5a235c3774b4f4028a680432cded7cad37bba0fd90d64b187d19\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4ec9dd88a5b71abfc74e9df5ebe7921c35cbb3b641181a531ca65cdb5e8e4dea\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:43193c5cda5d612f247172016c4bb71251c784d7a4d9314677186a838ad34858\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:aa693779a8b50cd97570e5a0f343538a8dbd3e496fa5dcb87e29406ad0299654\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-win32.whl\", hash = \"sha256:7706f5850360ac01d80c89bcef1640683cc12ed87f42579dab6c5d3ed6888613\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:c3e446d253bd88f6377260d07c895816ebf33ffffd56c1c792b13bff9c3e1ade\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:980b4f289d1d90ca5efcf07958d3eb38ed9c0b7676bf2831a54d4f66f9c27dfa\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:f28f891ccd15c514a0981f3b9db9aa23d62fe1a99997512b0491d2ed323d229a\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8aacce6e2e1edcb6ac625fb0f8c3a9570ccc7bfba1f63419b3769ccf6a00ed0\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bd7af3717683bea4c87acd8c0d3d5b44d56120b26fd3f8a692bdd2d5260c620a\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5ff2ed8194587faf56555927b3aa10e6fb69d931e33953943bc4f837dfee2242\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e91f541a85298cf35433bf66f3fab2a4a2cff05c127eeca4af174f6d497f0d4b\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:309a7de0a0ff3040acaebb35ec45d18db4b28232f21998851cfa709eeff49d62\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:285e96d9d53422efc0d7a17c60e59f37fbf3dfa942073f666db4ac71e8d726d0\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:5d447056e2ca60382d460a604b6302d8db69476fd2015c81e7c35417cfabe4cd\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:20587d20f557fe189b7947d8e7ec5afa110ccf72a3128d61a2a387c3313f46be\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:130272c698667a982a5d0e626851ceff662565379baf0ff2cc58067b81d4f11d\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:ab22fbd9765e6954bc0bcff24c25ff71dcbfdb185fcdaca49e81bac68fe724d3\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7782afc9b6b42200f7362858f9e73b1f8316afb276d316336c0ec3bd73312742\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-win32.whl\", hash = \"sha256:2de62e8801ddfff069cd5c504ce3bc9672b23266597d4e4f50eda28846c322f2\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:95c3c157765b031331dd4db3c775e58deaee050a3042fcad72cbc4189d7c8dca\"},\n    {file = \"charset_normalizer-3.4.0-py3-none-any.whl\", hash = \"sha256:fe9f97feb71aa9896b81973a7bbada8c49501dc73e58a10fcef6663af95e5079\"},\n    {file = \"charset_normalizer-3.4.0.tar.gz\", hash = \"sha256:223217c3d4f82c3ac5e29032b3f1c2eb0fb591b72161f86d93f5719079dae93e\"},\n]\n\n[[package]]\nname = \"cleo\"\nversion = \"2.1.0\"\ndescription = \"Cleo allows you to create beautiful and testable command-line interfaces.\"\noptional = false\npython-versions = \">=3.7,<4.0\"\nfiles = [\n    {file = \"cleo-2.1.0-py3-none-any.whl\", hash = \"sha256:4a31bd4dd45695a64ee3c4758f583f134267c2bc518d8ae9a29cf237d009b07e\"},\n    {file = \"cleo-2.1.0.tar.gz\", hash = \"sha256:0b2c880b5d13660a7ea651001fb4acb527696c01f15c9ee650f377aa543fd523\"},\n]\n\n[package.dependencies]\ncrashtest = \">=0.4.1,<0.5.0\"\nrapidfuzz = \">=3.0.0,<4.0.0\"\n\n[[package]]\nname = \"click\"\nversion = \"8.1.7\"\ndescription = \"Composable command line interface toolkit\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"click-8.1.7-py3-none-any.whl\", hash = \"sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28\"},\n    {file = \"click-8.1.7.tar.gz\", hash = \"sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\n\n[[package]]\nname = \"colorlog\"\nversion = \"6.9.0\"\ndescription = \"Add colours to the output of Python's logging module.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"colorlog-6.9.0-py3-none-any.whl\", hash = \"sha256:5906e71acd67cb07a71e779c47c4bcb45fb8c2993eebe9e5adcd6a6f1b283eff\"},\n    {file = \"colorlog-6.9.0.tar.gz\", hash = \"sha256:bfba54a1b93b94f54e1f4fe48395725a3d92fd2a4af702f6bd70946bdc0c6ac2\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\n\n[package.extras]\ndevelopment = [\"black\", \"flake8\", \"mypy\", \"pytest\", \"types-colorama\"]\n\n[[package]]\nname = \"constantly\"\nversion = \"23.10.4\"\ndescription = \"Symbolic constants in Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"constantly-23.10.4-py3-none-any.whl\", hash = \"sha256:3fd9b4d1c3dc1ec9757f3c52aef7e53ad9323dbe39f51dfd4c43853b68dfa3f9\"},\n    {file = \"constantly-23.10.4.tar.gz\", hash = \"sha256:aa92b70a33e2ac0bb33cd745eb61776594dc48764b06c35e0efd050b7f1c7cbd\"},\n]\n\n[[package]]\nname = \"coverage\"\nversion = \"7.6.1\"\ndescription = \"Code coverage measurement for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"coverage-7.6.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b06079abebbc0e89e6163b8e8f0e16270124c154dc6e4a47b413dd538859af16\"},\n    {file = \"coverage-7.6.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:cf4b19715bccd7ee27b6b120e7e9dd56037b9c0681dcc1adc9ba9db3d417fa36\"},\n    {file = \"coverage-7.6.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e61c0abb4c85b095a784ef23fdd4aede7a2628478e7baba7c5e3deba61070a02\"},\n    {file = \"coverage-7.6.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:fd21f6ae3f08b41004dfb433fa895d858f3f5979e7762d052b12aef444e29afc\"},\n    {file = \"coverage-7.6.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8f59d57baca39b32db42b83b2a7ba6f47ad9c394ec2076b084c3f029b7afca23\"},\n    {file = \"coverage-7.6.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:a1ac0ae2b8bd743b88ed0502544847c3053d7171a3cff9228af618a068ed9c34\"},\n    {file = \"coverage-7.6.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:e6a08c0be454c3b3beb105c0596ebdc2371fab6bb90c0c0297f4e58fd7e1012c\"},\n    {file = \"coverage-7.6.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:f5796e664fe802da4f57a168c85359a8fbf3eab5e55cd4e4569fbacecc903959\"},\n    {file = \"coverage-7.6.1-cp310-cp310-win32.whl\", hash = \"sha256:7bb65125fcbef8d989fa1dd0e8a060999497629ca5b0efbca209588a73356232\"},\n    {file = \"coverage-7.6.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:3115a95daa9bdba70aea750db7b96b37259a81a709223c8448fa97727d546fe0\"},\n    {file = \"coverage-7.6.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:7dea0889685db8550f839fa202744652e87c60015029ce3f60e006f8c4462c93\"},\n    {file = \"coverage-7.6.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:ed37bd3c3b063412f7620464a9ac1314d33100329f39799255fb8d3027da50d3\"},\n    {file = \"coverage-7.6.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d85f5e9a5f8b73e2350097c3756ef7e785f55bd71205defa0bfdaf96c31616ff\"},\n    {file = \"coverage-7.6.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9bc572be474cafb617672c43fe989d6e48d3c83af02ce8de73fff1c6bb3c198d\"},\n    {file = \"coverage-7.6.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0c0420b573964c760df9e9e86d1a9a622d0d27f417e1a949a8a66dd7bcee7bc6\"},\n    {file = \"coverage-7.6.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:1f4aa8219db826ce6be7099d559f8ec311549bfc4046f7f9fe9b5cea5c581c56\"},\n    {file = \"coverage-7.6.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:fc5a77d0c516700ebad189b587de289a20a78324bc54baee03dd486f0855d234\"},\n    {file = \"coverage-7.6.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:b48f312cca9621272ae49008c7f613337c53fadca647d6384cc129d2996d1133\"},\n    {file = \"coverage-7.6.1-cp311-cp311-win32.whl\", hash = \"sha256:1125ca0e5fd475cbbba3bb67ae20bd2c23a98fac4e32412883f9bcbaa81c314c\"},\n    {file = \"coverage-7.6.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:8ae539519c4c040c5ffd0632784e21b2f03fc1340752af711f33e5be83a9d6c6\"},\n    {file = \"coverage-7.6.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:95cae0efeb032af8458fc27d191f85d1717b1d4e49f7cb226cf526ff28179778\"},\n    {file = \"coverage-7.6.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:5621a9175cf9d0b0c84c2ef2b12e9f5f5071357c4d2ea6ca1cf01814f45d2391\"},\n    {file = \"coverage-7.6.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:260933720fdcd75340e7dbe9060655aff3af1f0c5d20f46b57f262ab6c86a5e8\"},\n    {file = \"coverage-7.6.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:07e2ca0ad381b91350c0ed49d52699b625aab2b44b65e1b4e02fa9df0e92ad2d\"},\n    {file = \"coverage-7.6.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c44fee9975f04b33331cb8eb272827111efc8930cfd582e0320613263ca849ca\"},\n    {file = \"coverage-7.6.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:877abb17e6339d96bf08e7a622d05095e72b71f8afd8a9fefc82cf30ed944163\"},\n    {file = \"coverage-7.6.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:3e0cadcf6733c09154b461f1ca72d5416635e5e4ec4e536192180d34ec160f8a\"},\n    {file = \"coverage-7.6.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:c3c02d12f837d9683e5ab2f3d9844dc57655b92c74e286c262e0fc54213c216d\"},\n    {file = \"coverage-7.6.1-cp312-cp312-win32.whl\", hash = \"sha256:e05882b70b87a18d937ca6768ff33cc3f72847cbc4de4491c8e73880766718e5\"},\n    {file = \"coverage-7.6.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:b5d7b556859dd85f3a541db6a4e0167b86e7273e1cdc973e5b175166bb634fdb\"},\n    {file = \"coverage-7.6.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:a4acd025ecc06185ba2b801f2de85546e0b8ac787cf9d3b06e7e2a69f925b106\"},\n    {file = \"coverage-7.6.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:a6d3adcf24b624a7b778533480e32434a39ad8fa30c315208f6d3e5542aeb6e9\"},\n    {file = \"coverage-7.6.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d0c212c49b6c10e6951362f7c6df3329f04c2b1c28499563d4035d964ab8e08c\"},\n    {file = \"coverage-7.6.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6e81d7a3e58882450ec4186ca59a3f20a5d4440f25b1cff6f0902ad890e6748a\"},\n    {file = \"coverage-7.6.1-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:78b260de9790fd81e69401c2dc8b17da47c8038176a79092a89cb2b7d945d060\"},\n    {file = \"coverage-7.6.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:a78d169acd38300060b28d600344a803628c3fd585c912cacc9ea8790fe96862\"},\n    {file = \"coverage-7.6.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2c09f4ce52cb99dd7505cd0fc8e0e37c77b87f46bc9c1eb03fe3bc9991085388\"},\n    {file = \"coverage-7.6.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:6878ef48d4227aace338d88c48738a4258213cd7b74fd9a3d4d7582bb1d8a155\"},\n    {file = \"coverage-7.6.1-cp313-cp313-win32.whl\", hash = \"sha256:44df346d5215a8c0e360307d46ffaabe0f5d3502c8a1cefd700b34baf31d411a\"},\n    {file = \"coverage-7.6.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:8284cf8c0dd272a247bc154eb6c95548722dce90d098c17a883ed36e67cdb129\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:d3296782ca4eab572a1a4eca686d8bfb00226300dcefdf43faa25b5242ab8a3e\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:502753043567491d3ff6d08629270127e0c31d4184c4c8d98f92c26f65019962\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6a89ecca80709d4076b95f89f308544ec8f7b4727e8a547913a35f16717856cb\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a318d68e92e80af8b00fa99609796fdbcdfef3629c77c6283566c6f02c6d6704\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:13b0a73a0896988f053e4fbb7de6d93388e6dd292b0d87ee51d106f2c11b465b\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:4421712dbfc5562150f7554f13dde997a2e932a6b5f352edcce948a815efee6f\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:166811d20dfea725e2e4baa71fffd6c968a958577848d2131f39b60043400223\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:225667980479a17db1048cb2bf8bfb39b8e5be8f164b8f6628b64f78a72cf9d3\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-win32.whl\", hash = \"sha256:170d444ab405852903b7d04ea9ae9b98f98ab6d7e63e1115e82620807519797f\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-win_amd64.whl\", hash = \"sha256:b9f222de8cded79c49bf184bdbc06630d4c58eec9459b939b4a690c82ed05657\"},\n    {file = \"coverage-7.6.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:6db04803b6c7291985a761004e9060b2bca08da6d04f26a7f2294b8623a0c1a0\"},\n    {file = \"coverage-7.6.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:f1adfc8ac319e1a348af294106bc6a8458a0f1633cc62a1446aebc30c5fa186a\"},\n    {file = \"coverage-7.6.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a95324a9de9650a729239daea117df21f4b9868ce32e63f8b650ebe6cef5595b\"},\n    {file = \"coverage-7.6.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b43c03669dc4618ec25270b06ecd3ee4fa94c7f9b3c14bae6571ca00ef98b0d3\"},\n    {file = \"coverage-7.6.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8929543a7192c13d177b770008bc4e8119f2e1f881d563fc6b6305d2d0ebe9de\"},\n    {file = \"coverage-7.6.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:a09ece4a69cf399510c8ab25e0950d9cf2b42f7b3cb0374f95d2e2ff594478a6\"},\n    {file = \"coverage-7.6.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:9054a0754de38d9dbd01a46621636689124d666bad1936d76c0341f7d71bf569\"},\n    {file = \"coverage-7.6.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:0dbde0f4aa9a16fa4d754356a8f2e36296ff4d83994b2c9d8398aa32f222f989\"},\n    {file = \"coverage-7.6.1-cp38-cp38-win32.whl\", hash = \"sha256:da511e6ad4f7323ee5702e6633085fb76c2f893aaf8ce4c51a0ba4fc07580ea7\"},\n    {file = \"coverage-7.6.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:3f1156e3e8f2872197af3840d8ad307a9dd18e615dc64d9ee41696f287c57ad8\"},\n    {file = \"coverage-7.6.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:abd5fd0db5f4dc9289408aaf34908072f805ff7792632250dcb36dc591d24255\"},\n    {file = \"coverage-7.6.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:547f45fa1a93154bd82050a7f3cddbc1a7a4dd2a9bf5cb7d06f4ae29fe94eaf8\"},\n    {file = \"coverage-7.6.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:645786266c8f18a931b65bfcefdbf6952dd0dea98feee39bd188607a9d307ed2\"},\n    {file = \"coverage-7.6.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9e0b2df163b8ed01d515807af24f63de04bebcecbd6c3bfeff88385789fdf75a\"},\n    {file = \"coverage-7.6.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:609b06f178fe8e9f89ef676532760ec0b4deea15e9969bf754b37f7c40326dbc\"},\n    {file = \"coverage-7.6.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:702855feff378050ae4f741045e19a32d57d19f3e0676d589df0575008ea5004\"},\n    {file = \"coverage-7.6.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:2bdb062ea438f22d99cba0d7829c2ef0af1d768d1e4a4f528087224c90b132cb\"},\n    {file = \"coverage-7.6.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:9c56863d44bd1c4fe2abb8a4d6f5371d197f1ac0ebdee542f07f35895fc07f36\"},\n    {file = \"coverage-7.6.1-cp39-cp39-win32.whl\", hash = \"sha256:6e2cd258d7d927d09493c8df1ce9174ad01b381d4729a9d8d4e38670ca24774c\"},\n    {file = \"coverage-7.6.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:06a737c882bd26d0d6ee7269b20b12f14a8704807a01056c80bb881a4b2ce6ca\"},\n    {file = \"coverage-7.6.1-pp38.pp39.pp310-none-any.whl\", hash = \"sha256:e9a6e0eb86070e8ccaedfbd9d38fec54864f3125ab95419970575b42af7541df\"},\n    {file = \"coverage-7.6.1.tar.gz\", hash = \"sha256:953510dfb7b12ab69d20135a0662397f077c59b1e6379a768e97c59d852ee51d\"},\n]\n\n[package.dependencies]\ntomli = {version = \"*\", optional = true, markers = \"python_full_version <= \\\"3.11.0a6\\\" and extra == \\\"toml\\\"\"}\n\n[package.extras]\ntoml = [\"tomli\"]\n\n[[package]]\nname = \"crashtest\"\nversion = \"0.4.1\"\ndescription = \"Manage Python errors with ease\"\noptional = false\npython-versions = \">=3.7,<4.0\"\nfiles = [\n    {file = \"crashtest-0.4.1-py3-none-any.whl\", hash = \"sha256:8d23eac5fa660409f57472e3851dab7ac18aba459a8d19cbbba86d3d5aecd2a5\"},\n    {file = \"crashtest-0.4.1.tar.gz\", hash = \"sha256:80d7b1f316ebfbd429f648076d6275c877ba30ba48979de4191714a75266f0ce\"},\n]\n\n[[package]]\nname = \"cryptography\"\nversion = \"43.0.3\"\ndescription = \"cryptography is a package which provides cryptographic recipes and primitives to Python developers.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"cryptography-43.0.3-cp37-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:bf7a1932ac4176486eab36a19ed4c0492da5d97123f1406cf15e41b05e787d2e\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:63efa177ff54aec6e1c0aefaa1a241232dcd37413835a9b674b6e3f0ae2bfd3e\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7e1ce50266f4f70bf41a2c6dc4358afadae90e2a1e5342d3c08883df1675374f\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:443c4a81bb10daed9a8f334365fe52542771f25aedaf889fd323a853ce7377d6\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:74f57f24754fe349223792466a709f8e0c093205ff0dca557af51072ff47ab18\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:9762ea51a8fc2a88b70cf2995e5675b38d93bf36bd67d91721c309df184f49bd\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:81ef806b1fef6b06dcebad789f988d3b37ccaee225695cf3e07648eee0fc6b73\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-win32.whl\", hash = \"sha256:cbeb489927bd7af4aa98d4b261af9a5bc025bd87f0e3547e11584be9e9427be2\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-win_amd64.whl\", hash = \"sha256:f46304d6f0c6ab8e52770addfa2fc41e6629495548862279641972b6215451cd\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:8ac43ae87929a5982f5948ceda07001ee5e83227fd69cf55b109144938d96984\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:846da004a5804145a5f441b8530b4bf35afbf7da70f82409f151695b127213d5\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0f996e7268af62598f2fc1204afa98a3b5712313a55c4c9d434aef49cadc91d4\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:f7b178f11ed3664fd0e995a47ed2b5ff0a12d893e41dd0494f406d1cf555cab7\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:c2e6fc39c4ab499049df3bdf567f768a723a5e8464816e8f009f121a5a9f4405\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:e1be4655c7ef6e1bbe6b5d0403526601323420bcf414598955968c9ef3eb7d16\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:df6b6c6d742395dd77a23ea3728ab62f98379eff8fb61be2744d4679ab678f73\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-win32.whl\", hash = \"sha256:d56e96520b1020449bbace2b78b603442e7e378a9b3bd68de65c782db1507995\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-win_amd64.whl\", hash = \"sha256:0c580952eef9bf68c4747774cde7ec1d85a6e61de97281f2dba83c7d2c806362\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:d03b5621a135bffecad2c73e9f4deb1a0f977b9a8ffe6f8e002bf6c9d07b918c\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-manylinux_2_28_aarch64.whl\", hash = \"sha256:a2a431ee15799d6db9fe80c82b055bae5a752bef645bba795e8e52687c69efe3\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:281c945d0e28c92ca5e5930664c1cefd85efe80e5c0d2bc58dd63383fda29f83\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:f18c716be16bc1fea8e95def49edf46b82fccaa88587a45f8dc0ff6ab5d8e0a7\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:4a02ded6cd4f0a5562a8887df8b3bd14e822a90f97ac5e544c162899bc467664\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-manylinux_2_28_aarch64.whl\", hash = \"sha256:53a583b6637ab4c4e3591a15bc9db855b8d9dee9a669b550f311480acab6eb08\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:1ec0bcf7e17c0c5669d881b1cd38c4972fade441b27bda1051665faaa89bdcaa\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:2ce6fae5bdad59577b44e4dfed356944fbf1d925269114c28be377692643b4ff\"},\n    {file = \"cryptography-43.0.3.tar.gz\", hash = \"sha256:315b9001266a492a6ff443b61238f956b214dbec9910a081ba5b6646a055a805\"},\n]\n\n[package.dependencies]\ncffi = {version = \">=1.12\", markers = \"platform_python_implementation != \\\"PyPy\\\"\"}\n\n[package.extras]\ndocs = [\"sphinx (>=5.3.0)\", \"sphinx-rtd-theme (>=1.1.1)\"]\ndocstest = [\"pyenchant (>=1.6.11)\", \"readme-renderer\", \"sphinxcontrib-spelling (>=4.0.1)\"]\nnox = [\"nox\"]\npep8test = [\"check-sdist\", \"click\", \"mypy\", \"ruff\"]\nsdist = [\"build\"]\nssh = [\"bcrypt (>=3.1.5)\"]\ntest = [\"certifi\", \"cryptography-vectors (==43.0.3)\", \"pretend\", \"pytest (>=6.2.0)\", \"pytest-benchmark\", \"pytest-cov\", \"pytest-xdist\"]\ntest-randomorder = [\"pytest-randomly\"]\n\n[[package]]\nname = \"daphne\"\nversion = \"4.1.2\"\ndescription = \"Django ASGI (HTTP/WebSocket) server\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"daphne-4.1.2-py3-none-any.whl\", hash = \"sha256:618d1322bb4d875342b99dd2a10da2d9aae7ee3645f765965fdc1e658ea5290a\"},\n    {file = \"daphne-4.1.2.tar.gz\", hash = \"sha256:fcbcace38eb86624ae247c7ffdc8ac12f155d7d19eafac4247381896d6f33761\"},\n]\n\n[package.dependencies]\nasgiref = \">=3.5.2,<4\"\nautobahn = \">=22.4.2\"\ntwisted = {version = \">=22.4\", extras = [\"tls\"]}\n\n[package.extras]\ntests = [\"django\", \"hypothesis\", \"pytest\", \"pytest-asyncio\"]\n\n[[package]]\nname = \"deprecated\"\nversion = \"1.2.15\"\ndescription = \"Python @deprecated decorator to deprecate old python classes, functions or methods.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7\"\nfiles = [\n    {file = \"Deprecated-1.2.15-py2.py3-none-any.whl\", hash = \"sha256:353bc4a8ac4bfc96800ddab349d89c25dec1079f65fd53acdcc1e0b975b21320\"},\n    {file = \"deprecated-1.2.15.tar.gz\", hash = \"sha256:683e561a90de76239796e6b6feac66b99030d2dd3fcf61ef996330f14bbb9b0d\"},\n]\n\n[package.dependencies]\nwrapt = \">=1.10,<2\"\n\n[package.extras]\ndev = [\"PyTest\", \"PyTest-Cov\", \"bump2version (<1)\", \"jinja2 (>=3.0.3,<3.1.0)\", \"setuptools\", \"sphinx (<2)\", \"tox\"]\n\n[[package]]\nname = \"distlib\"\nversion = \"0.3.9\"\ndescription = \"Distribution utilities\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"distlib-0.3.9-py2.py3-none-any.whl\", hash = \"sha256:47f8c22fd27c27e25a65601af709b38e4f0a45ea4fc2e710f65755fa8caaaf87\"},\n    {file = \"distlib-0.3.9.tar.gz\", hash = \"sha256:a60f20dea646b8a33f3e7772f74dc0b2d0772d2837ee1342a00645c81edf9403\"},\n]\n\n[[package]]\nname = \"django\"\nversion = \"4.2.17\"\ndescription = \"A high-level Python web framework that encourages rapid development and clean, pragmatic design.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"Django-4.2.17-py3-none-any.whl\", hash = \"sha256:3a93350214ba25f178d4045c0786c61573e7dbfa3c509b3551374f1e11ba8de0\"},\n    {file = \"Django-4.2.17.tar.gz\", hash = \"sha256:6b56d834cc94c8b21a8f4e775064896be3b4a4ca387f2612d4406a5927cd2fdc\"},\n]\n\n[package.dependencies]\nasgiref = \">=3.6.0,<4\"\nsqlparse = \">=0.3.1\"\ntzdata = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\n\n[package.extras]\nargon2 = [\"argon2-cffi (>=19.1.0)\"]\nbcrypt = [\"bcrypt\"]\n\n[[package]]\nname = \"dnspython\"\nversion = \"2.6.1\"\ndescription = \"DNS toolkit\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"dnspython-2.6.1-py3-none-any.whl\", hash = \"sha256:5ef3b9680161f6fa89daf8ad451b5f1a33b18ae8a1c6778cdf4b43f08c0a6e50\"},\n    {file = \"dnspython-2.6.1.tar.gz\", hash = \"sha256:e8f0f9c23a7b7cb99ded64e6c3a6f3e701d78f50c55e002b839dea7225cff7cc\"},\n]\n\n[package.extras]\ndev = [\"black (>=23.1.0)\", \"coverage (>=7.0)\", \"flake8 (>=7)\", \"mypy (>=1.8)\", \"pylint (>=3)\", \"pytest (>=7.4)\", \"pytest-cov (>=4.1.0)\", \"sphinx (>=7.2.0)\", \"twine (>=4.0.0)\", \"wheel (>=0.42.0)\"]\ndnssec = [\"cryptography (>=41)\"]\ndoh = [\"h2 (>=4.1.0)\", \"httpcore (>=1.0.0)\", \"httpx (>=0.26.0)\"]\ndoq = [\"aioquic (>=0.9.25)\"]\nidna = [\"idna (>=3.6)\"]\ntrio = [\"trio (>=0.23)\"]\nwmi = [\"wmi (>=1.5.1)\"]\n\n[[package]]\nname = \"dulwich\"\nversion = \"0.21.7\"\ndescription = \"Python Git Library\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"dulwich-0.21.7-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:d4c0110798099bb7d36a110090f2688050703065448895c4f53ade808d889dd3\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2bc12697f0918bee324c18836053644035362bb3983dc1b210318f2fed1d7132\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:471305af74790827fcbafe330fc2e8bdcee4fb56ca1177c8c481b1c8f806c4a4\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d54c9d0e845be26f65f954dff13a1cd3f2b9739820c19064257b8fd7435ab263\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:12d61334a575474e707614f2e93d6ed4cdae9eb47214f9277076d9e5615171d3\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:e274cebaf345f0b1e3b70197f2651de92b652386b68020cfd3bf61bc30f6eaaa\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:817822f970e196e757ae01281ecbf21369383285b9f4a83496312204cf889b8c\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-win32.whl\", hash = \"sha256:7836da3f4110ce684dcd53489015fb7fa94ed33c5276e3318b8b1cbcb5b71e08\"},\n    {file = \"dulwich-0.21.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:4a043b90958cec866b4edc6aef5fe3c2c96a664d0b357e1682a46f6c477273c4\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:ce8db196e79c1f381469410d26fb1d8b89c6b87a4e7f00ff418c22a35121405c\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:62bfb26bdce869cd40be443dfd93143caea7089b165d2dcc33de40f6ac9d812a\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c01a735b9a171dcb634a97a3cec1b174cfbfa8e840156870384b633da0460f18\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fa4d14767cf7a49c9231c2e52cb2a3e90d0c83f843eb6a2ca2b5d81d254cf6b9\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7bca4b86e96d6ef18c5bc39828ea349efb5be2f9b1f6ac9863f90589bac1084d\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:a7b5624b02ef808cdc62dabd47eb10cd4ac15e8ac6df9e2e88b6ac6b40133673\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:c3a539b4696a42fbdb7412cb7b66a4d4d332761299d3613d90a642923c7560e1\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-win32.whl\", hash = \"sha256:675a612ce913081beb0f37b286891e795d905691dfccfb9bf73721dca6757cde\"},\n    {file = \"dulwich-0.21.7-cp311-cp311-win_amd64.whl\", hash = \"sha256:460ba74bdb19f8d498786ae7776745875059b1178066208c0fd509792d7f7bfc\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:4c51058ec4c0b45dc5189225b9e0c671b96ca9713c1daf71d622c13b0ab07681\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:4bc4c5366eaf26dda3fdffe160a3b515666ed27c2419f1d483da285ac1411de0\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:a0650ec77d89cb947e3e4bbd4841c96f74e52b4650830112c3057a8ca891dc2f\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4f18f0a311fb7734b033a3101292b932158cade54b74d1c44db519e42825e5a2\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c589468e5c0cd84e97eb7ec209ab005a2cb69399e8c5861c3edfe38989ac3a8\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:d62446797163317a397a10080c6397ffaaca51a7804c0120b334f8165736c56a\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:e84cc606b1f581733df4350ca4070e6a8b30be3662bbb81a590b177d0c996c91\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-win32.whl\", hash = \"sha256:c3d1685f320907a52c40fd5890627945c51f3a5fa4bcfe10edb24fec79caadec\"},\n    {file = \"dulwich-0.21.7-cp312-cp312-win_amd64.whl\", hash = \"sha256:6bd69921fdd813b7469a3c77bc75c1783cc1d8d72ab15a406598e5a3ba1a1503\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:7d8ab29c660125db52106775caa1f8f7f77a69ed1fe8bc4b42bdf115731a25bf\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b0d2e4485b98695bf95350ce9d38b1bb0aaac2c34ad00a0df789aa33c934469b\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e138d516baa6b5bafbe8f030eccc544d0d486d6819b82387fc0e285e62ef5261\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:f34bf9b9fa9308376263fd9ac43143c7c09da9bc75037bb75c6c2423a151b92c\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:2e2c66888207b71cd1daa2acb06d3984a6bc13787b837397a64117aa9fc5936a\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-win32.whl\", hash = \"sha256:10893105c6566fc95bc2a67b61df7cc1e8f9126d02a1df6a8b2b82eb59db8ab9\"},\n    {file = \"dulwich-0.21.7-cp37-cp37m-win_amd64.whl\", hash = \"sha256:460b3849d5c3d3818a80743b4f7a0094c893c559f678e56a02fff570b49a644a\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:74700e4c7d532877355743336c36f51b414d01e92ba7d304c4f8d9a5946dbc81\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:c92e72c43c9e9e936b01a57167e0ea77d3fd2d82416edf9489faa87278a1cdf7\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:d097e963eb6b9fa53266146471531ad9c6765bf390849230311514546ed64db2\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:808e8b9cc0aa9ac74870b49db4f9f39a52fb61694573f84b9c0613c928d4caf8\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e1957b65f96e36c301e419d7adaadcff47647c30eb072468901bb683b1000bc5\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:4b09bc3a64fb70132ec14326ecbe6e0555381108caff3496898962c4136a48c6\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:d5882e70b74ac3c736a42d3fdd4f5f2e6570637f59ad5d3e684760290b58f041\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-win32.whl\", hash = \"sha256:29bb5c1d70eba155ded41ed8a62be2f72edbb3c77b08f65b89c03976292f6d1b\"},\n    {file = \"dulwich-0.21.7-cp38-cp38-win_amd64.whl\", hash = \"sha256:25c3ab8fb2e201ad2031ddd32e4c68b7c03cb34b24a5ff477b7a7dcef86372f5\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:8929c37986c83deb4eb500c766ee28b6670285b512402647ee02a857320e377c\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:cc1e11be527ac06316539b57a7688bcb1b6a3e53933bc2f844397bc50734e9ae\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:0fc3078a1ba04c588fabb0969d3530efd5cd1ce2cf248eefb6baf7cbc15fc285\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:40dcbd29ba30ba2c5bfbab07a61a5f20095541d5ac66d813056c122244df4ac0\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8869fc8ec3dda743e03d06d698ad489b3705775fe62825e00fa95aa158097fc0\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:d96ca5e0dde49376fbcb44f10eddb6c30284a87bd03bb577c59bb0a1f63903fa\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:e0064363bd5e814359657ae32517fa8001e8573d9d040bd997908d488ab886ed\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-win32.whl\", hash = \"sha256:869eb7be48243e695673b07905d18b73d1054a85e1f6e298fe63ba2843bb2ca1\"},\n    {file = \"dulwich-0.21.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:404b8edeb3c3a86c47c0a498699fc064c93fa1f8bab2ffe919e8ab03eafaaad3\"},\n    {file = \"dulwich-0.21.7-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:e598d743c6c0548ebcd2baf94aa9c8bfacb787ea671eeeb5828cfbd7d56b552f\"},\n    {file = \"dulwich-0.21.7-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d4a2d76c96426e791556836ef43542b639def81be4f1d6d4322cd886c115eae1\"},\n    {file = \"dulwich-0.21.7-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f6c88acb60a1f4d31bd6d13bfba465853b3df940ee4a0f2a3d6c7a0778c705b7\"},\n    {file = \"dulwich-0.21.7-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:ecd315847dea406a4decfa39d388a2521e4e31acde3bd9c2609c989e817c6d62\"},\n    {file = \"dulwich-0.21.7-pp37-pypy37_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:d05d3c781bc74e2c2a2a8f4e4e2ed693540fbe88e6ac36df81deac574a6dad99\"},\n    {file = \"dulwich-0.21.7-pp37-pypy37_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6de6f8de4a453fdbae8062a6faa652255d22a3d8bce0cd6d2d6701305c75f2b3\"},\n    {file = \"dulwich-0.21.7-pp37-pypy37_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e25953c7acbbe4e19650d0225af1c0c0e6882f8bddd2056f75c1cc2b109b88ad\"},\n    {file = \"dulwich-0.21.7-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:4637cbd8ed1012f67e1068aaed19fcc8b649bcf3e9e26649826a303298c89b9d\"},\n    {file = \"dulwich-0.21.7-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:858842b30ad6486aacaa607d60bab9c9a29e7c59dc2d9cb77ae5a94053878c08\"},\n    {file = \"dulwich-0.21.7-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:739b191f61e1c4ce18ac7d520e7a7cbda00e182c3489552408237200ce8411ad\"},\n    {file = \"dulwich-0.21.7-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:274c18ec3599a92a9b67abaf110e4f181a4f779ee1aaab9e23a72e89d71b2bd9\"},\n    {file = \"dulwich-0.21.7-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:2590e9b431efa94fc356ae33b38f5e64f1834ec3a94a6ac3a64283b206d07aa3\"},\n    {file = \"dulwich-0.21.7-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:ed60d1f610ef6437586f7768254c2a93820ccbd4cfdac7d182cf2d6e615969bb\"},\n    {file = \"dulwich-0.21.7-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8278835e168dd097089f9e53088c7a69c6ca0841aef580d9603eafe9aea8c358\"},\n    {file = \"dulwich-0.21.7-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ffc27fb063f740712e02b4d2f826aee8bbed737ed799962fef625e2ce56e2d29\"},\n    {file = \"dulwich-0.21.7-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:61e3451bd3d3844f2dca53f131982553be4d1b1e1ebd9db701843dd76c4dba31\"},\n    {file = \"dulwich-0.21.7.tar.gz\", hash = \"sha256:a9e9c66833cea580c3ac12927e4b9711985d76afca98da971405d414de60e968\"},\n]\n\n[package.dependencies]\nurllib3 = \">=1.25\"\n\n[package.extras]\nfastimport = [\"fastimport\"]\nhttps = [\"urllib3 (>=1.24.1)\"]\nparamiko = [\"paramiko\"]\npgp = [\"gpg\"]\n\n[[package]]\nname = \"email-validator\"\nversion = \"2.2.0\"\ndescription = \"A robust email address syntax and deliverability validation library.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"email_validator-2.2.0-py3-none-any.whl\", hash = \"sha256:561977c2d73ce3611850a06fa56b414621e0c8faa9d66f2611407d87465da631\"},\n    {file = \"email_validator-2.2.0.tar.gz\", hash = \"sha256:cb690f344c617a714f22e66ae771445a1ceb46821152df8e165c5f9a364582b7\"},\n]\n\n[package.dependencies]\ndnspython = \">=2.0.0\"\nidna = \">=2.0.0\"\n\n[[package]]\nname = \"exceptiongroup\"\nversion = \"1.2.2\"\ndescription = \"Backport of PEP 654 (exception groups)\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"exceptiongroup-1.2.2-py3-none-any.whl\", hash = \"sha256:3111b9d131c238bec2f8f516e123e14ba243563fb135d3fe885990585aa7795b\"},\n    {file = \"exceptiongroup-1.2.2.tar.gz\", hash = \"sha256:47c2edf7c6738fafb49fd34290706d1a1a2f4d1c6df275526b62cbb4aa5393cc\"},\n]\n\n[package.extras]\ntest = [\"pytest (>=6)\"]\n\n[[package]]\nname = \"execnet\"\nversion = \"2.1.1\"\ndescription = \"execnet: rapid multi-Python deployment\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"execnet-2.1.1-py3-none-any.whl\", hash = \"sha256:26dee51f1b80cebd6d0ca8e74dd8745419761d3bef34163928cbebbdc4749fdc\"},\n    {file = \"execnet-2.1.1.tar.gz\", hash = \"sha256:5189b52c6121c24feae288166ab41b32549c7e2348652736540b9e6e7d4e72e3\"},\n]\n\n[package.extras]\ntesting = [\"hatch\", \"pre-commit\", \"pytest\", \"tox\"]\n\n[[package]]\nname = \"executing\"\nversion = \"2.1.0\"\ndescription = \"Get the currently executing AST node of a frame, and other information\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"executing-2.1.0-py2.py3-none-any.whl\", hash = \"sha256:8d63781349375b5ebccc3142f4b30350c0cd9c79f921cde38be2be4637e98eaf\"},\n    {file = \"executing-2.1.0.tar.gz\", hash = \"sha256:8ea27ddd260da8150fa5a708269c4a10e76161e2496ec3e587da9e3c0fe4b9ab\"},\n]\n\n[package.extras]\ntests = [\"asttokens (>=2.1.0)\", \"coverage\", \"coverage-enable-subprocess\", \"ipython\", \"littleutils\", \"pytest\", \"rich\"]\n\n[[package]]\nname = \"faker\"\nversion = \"33.1.0\"\ndescription = \"Faker is a Python package that generates fake data for you.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"Faker-33.1.0-py3-none-any.whl\", hash = \"sha256:d30c5f0e2796b8970de68978365247657486eb0311c5abe88d0b895b68dff05d\"},\n    {file = \"faker-33.1.0.tar.gz\", hash = \"sha256:1c925fc0e86a51fc46648b504078c88d0cd48da1da2595c4e712841cab43a1e4\"},\n]\n\n[package.dependencies]\npython-dateutil = \">=2.4\"\ntyping-extensions = \"*\"\n\n[[package]]\nname = \"fastapi\"\nversion = \"0.115.6\"\ndescription = \"FastAPI framework, high performance, easy to learn, fast to code, ready for production\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"fastapi-0.115.6-py3-none-any.whl\", hash = \"sha256:e9240b29e36fa8f4bb7290316988e90c381e5092e0cbe84e7818cc3713bcf305\"},\n    {file = \"fastapi-0.115.6.tar.gz\", hash = \"sha256:9ec46f7addc14ea472958a96aae5b5de65f39721a46aaf5705c480d9a8b76654\"},\n]\n\n[package.dependencies]\npydantic = \">=1.7.4,<1.8 || >1.8,<1.8.1 || >1.8.1,<2.0.0 || >2.0.0,<2.0.1 || >2.0.1,<2.1.0 || >2.1.0,<3.0.0\"\nstarlette = \">=0.40.0,<0.42.0\"\ntyping-extensions = \">=4.8.0\"\n\n[package.extras]\nall = [\"email-validator (>=2.0.0)\", \"fastapi-cli[standard] (>=0.0.5)\", \"httpx (>=0.23.0)\", \"itsdangerous (>=1.1.0)\", \"jinja2 (>=2.11.2)\", \"orjson (>=3.2.1)\", \"pydantic-extra-types (>=2.0.0)\", \"pydantic-settings (>=2.0.0)\", \"python-multipart (>=0.0.7)\", \"pyyaml (>=5.3.1)\", \"ujson (>=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0)\", \"uvicorn[standard] (>=0.12.0)\"]\nstandard = [\"email-validator (>=2.0.0)\", \"fastapi-cli[standard] (>=0.0.5)\", \"httpx (>=0.23.0)\", \"jinja2 (>=2.11.2)\", \"python-multipart (>=0.0.7)\", \"uvicorn[standard] (>=0.12.0)\"]\n\n[[package]]\nname = \"fastjsonschema\"\nversion = \"2.21.1\"\ndescription = \"Fastest Python implementation of JSON schema\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"fastjsonschema-2.21.1-py3-none-any.whl\", hash = \"sha256:c9e5b7e908310918cf494a434eeb31384dd84a98b57a30bcb1f535015b554667\"},\n    {file = \"fastjsonschema-2.21.1.tar.gz\", hash = \"sha256:794d4f0a58f848961ba16af7b9c85a3e88cd360df008c59aac6fc5ae9323b5d4\"},\n]\n\n[package.extras]\ndevel = [\"colorama\", \"json-spec\", \"jsonschema\", \"pylint\", \"pytest\", \"pytest-benchmark\", \"pytest-cache\", \"validictory\"]\n\n[[package]]\nname = \"filelock\"\nversion = \"3.16.1\"\ndescription = \"A platform independent file lock.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"filelock-3.16.1-py3-none-any.whl\", hash = \"sha256:2082e5703d51fbf98ea75855d9d5527e33d8ff23099bec374a134febee6946b0\"},\n    {file = \"filelock-3.16.1.tar.gz\", hash = \"sha256:c249fbfcd5db47e5e2d6d62198e565475ee65e4831e2561c8e313fa7eb961435\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\", \"sphinx (>=8.0.2)\", \"sphinx-autodoc-typehints (>=2.4.1)\"]\ntesting = [\"covdefaults (>=2.3)\", \"coverage (>=7.6.1)\", \"diff-cover (>=9.2)\", \"pytest (>=8.3.3)\", \"pytest-asyncio (>=0.24)\", \"pytest-cov (>=5)\", \"pytest-mock (>=3.14)\", \"pytest-timeout (>=2.3.1)\", \"virtualenv (>=20.26.4)\"]\ntyping = [\"typing-extensions (>=4.12.2)\"]\n\n[[package]]\nname = \"flask\"\nversion = \"3.0.3\"\ndescription = \"A simple framework for building complex web applications.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"flask-3.0.3-py3-none-any.whl\", hash = \"sha256:34e815dfaa43340d1d15a5c3a02b8476004037eb4840b34910c6e21679d288f3\"},\n    {file = \"flask-3.0.3.tar.gz\", hash = \"sha256:ceb27b0af3823ea2737928a4d99d125a06175b8512c445cbd9a9ce200ef76842\"},\n]\n\n[package.dependencies]\nblinker = \">=1.6.2\"\nclick = \">=8.1.3\"\nimportlib-metadata = {version = \">=3.6.0\", markers = \"python_version < \\\"3.10\\\"\"}\nitsdangerous = \">=2.1.2\"\nJinja2 = \">=3.1.2\"\nWerkzeug = \">=3.0.0\"\n\n[package.extras]\nasync = [\"asgiref (>=3.2)\"]\ndotenv = [\"python-dotenv\"]\n\n[[package]]\nname = \"freezegun\"\nversion = \"1.5.1\"\ndescription = \"Let your Python tests travel through time\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"freezegun-1.5.1-py3-none-any.whl\", hash = \"sha256:bf111d7138a8abe55ab48a71755673dbaa4ab87f4cff5634a4442dfec34c15f1\"},\n    {file = \"freezegun-1.5.1.tar.gz\", hash = \"sha256:b29dedfcda6d5e8e083ce71b2b542753ad48cfec44037b3fc79702e2980a89e9\"},\n]\n\n[package.dependencies]\npython-dateutil = \">=2.7\"\n\n[[package]]\nname = \"frozenlist\"\nversion = \"1.5.0\"\ndescription = \"A list-like structure which implements collections.abc.MutableSequence\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"frozenlist-1.5.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:5b6a66c18b5b9dd261ca98dffcb826a525334b2f29e7caa54e182255c5f6a65a\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:d1b3eb7b05ea246510b43a7e53ed1653e55c2121019a97e60cad7efb881a97bb\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:15538c0cbf0e4fa11d1e3a71f823524b0c46299aed6e10ebb4c2089abd8c3bec\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e79225373c317ff1e35f210dd5f1344ff31066ba8067c307ab60254cd3a78ad5\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9272fa73ca71266702c4c3e2d4a28553ea03418e591e377a03b8e3659d94fa76\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:498524025a5b8ba81695761d78c8dd7382ac0b052f34e66939c42df860b8ff17\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:92b5278ed9d50fe610185ecd23c55d8b307d75ca18e94c0e7de328089ac5dcba\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7f3c8c1dacd037df16e85227bac13cca58c30da836c6f936ba1df0c05d046d8d\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f2ac49a9bedb996086057b75bf93538240538c6d9b38e57c82d51f75a73409d2\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:e66cc454f97053b79c2ab09c17fbe3c825ea6b4de20baf1be28919460dd7877f\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:5a3ba5f9a0dfed20337d3e966dc359784c9f96503674c2faf015f7fe8e96798c\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:6321899477db90bdeb9299ac3627a6a53c7399c8cd58d25da094007402b039ab\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:76e4753701248476e6286f2ef492af900ea67d9706a0155335a40ea21bf3b2f5\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-win32.whl\", hash = \"sha256:977701c081c0241d0955c9586ffdd9ce44f7a7795df39b9151cd9a6fd0ce4cfb\"},\n    {file = \"frozenlist-1.5.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:189f03b53e64144f90990d29a27ec4f7997d91ed3d01b51fa39d2dbe77540fd4\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:fd74520371c3c4175142d02a976aee0b4cb4a7cc912a60586ffd8d5929979b30\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:2f3f7a0fbc219fb4455264cae4d9f01ad41ae6ee8524500f381de64ffaa077d5\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:f47c9c9028f55a04ac254346e92977bf0f166c483c74b4232bee19a6697e4778\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0996c66760924da6e88922756d99b47512a71cfd45215f3570bf1e0b694c206a\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a2fe128eb4edeabe11896cb6af88fca5346059f6c8d807e3b910069f39157869\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1a8ea951bbb6cacd492e3948b8da8c502a3f814f5d20935aae74b5df2b19cf3d\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:de537c11e4aa01d37db0d403b57bd6f0546e71a82347a97c6a9f0dcc532b3a45\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9c2623347b933fcb9095841f1cc5d4ff0b278addd743e0e966cb3d460278840d\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:cee6798eaf8b1416ef6909b06f7dc04b60755206bddc599f52232606e18179d3\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:f5f9da7f5dbc00a604fe74aa02ae7c98bcede8a3b8b9666f9f86fc13993bc71a\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:90646abbc7a5d5c7c19461d2e3eeb76eb0b204919e6ece342feb6032c9325ae9\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:bdac3c7d9b705d253b2ce370fde941836a5f8b3c5c2b8fd70940a3ea3af7f4f2\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:03d33c2ddbc1816237a67f66336616416e2bbb6beb306e5f890f2eb22b959cdf\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-win32.whl\", hash = \"sha256:237f6b23ee0f44066219dae14c70ae38a63f0440ce6750f868ee08775073f942\"},\n    {file = \"frozenlist-1.5.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:0cc974cc93d32c42e7b0f6cf242a6bd941c57c61b618e78b6c0a96cb72788c1d\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:31115ba75889723431aa9a4e77d5f398f5cf976eea3bdf61749731f62d4a4a21\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:7437601c4d89d070eac8323f121fcf25f88674627505334654fd027b091db09d\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:7948140d9f8ece1745be806f2bfdf390127cf1a763b925c4a805c603df5e697e\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:feeb64bc9bcc6b45c6311c9e9b99406660a9c05ca8a5b30d14a78555088b0b3a\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:683173d371daad49cffb8309779e886e59c2f369430ad28fe715f66d08d4ab1a\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7d57d8f702221405a9d9b40f9da8ac2e4a1a8b5285aac6100f3393675f0a85ee\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:30c72000fbcc35b129cb09956836c7d7abf78ab5416595e4857d1cae8d6251a6\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:000a77d6034fbad9b6bb880f7ec073027908f1b40254b5d6f26210d2dab1240e\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:5d7f5a50342475962eb18b740f3beecc685a15b52c91f7d975257e13e029eca9\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:87f724d055eb4785d9be84e9ebf0f24e392ddfad00b3fe036e43f489fafc9039\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:6e9080bb2fb195a046e5177f10d9d82b8a204c0736a97a153c2466127de87784\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:9b93d7aaa36c966fa42efcaf716e6b3900438632a626fb09c049f6a2f09fc631\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:52ef692a4bc60a6dd57f507429636c2af8b6046db8b31b18dac02cbc8f507f7f\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-win32.whl\", hash = \"sha256:29d94c256679247b33a3dc96cce0f93cbc69c23bf75ff715919332fdbb6a32b8\"},\n    {file = \"frozenlist-1.5.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:8969190d709e7c48ea386db202d708eb94bdb29207a1f269bab1196ce0dcca1f\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:7a1a048f9215c90973402e26c01d1cff8a209e1f1b53f72b95c13db61b00f953\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:dd47a5181ce5fcb463b5d9e17ecfdb02b678cca31280639255ce9d0e5aa67af0\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:1431d60b36d15cda188ea222033eec8e0eab488f39a272461f2e6d9e1a8e63c2\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6482a5851f5d72767fbd0e507e80737f9c8646ae7fd303def99bfe813f76cf7f\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:44c49271a937625619e862baacbd037a7ef86dd1ee215afc298a417ff3270608\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:12f78f98c2f1c2429d42e6a485f433722b0061d5c0b0139efa64f396efb5886b\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ce3aa154c452d2467487765e3adc730a8c153af77ad84096bc19ce19a2400840\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9b7dc0c4338e6b8b091e8faf0db3168a37101943e687f373dce00959583f7439\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:45e0896250900b5aa25180f9aec243e84e92ac84bd4a74d9ad4138ef3f5c97de\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:561eb1c9579d495fddb6da8959fd2a1fca2c6d060d4113f5844b433fc02f2641\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:df6e2f325bfee1f49f81aaac97d2aa757c7646534a06f8f577ce184afe2f0a9e\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:140228863501b44b809fb39ec56b5d4071f4d0aa6d216c19cbb08b8c5a7eadb9\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:7707a25d6a77f5d27ea7dc7d1fc608aa0a478193823f88511ef5e6b8a48f9d03\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-win32.whl\", hash = \"sha256:31a9ac2b38ab9b5a8933b693db4939764ad3f299fcaa931a3e605bc3460e693c\"},\n    {file = \"frozenlist-1.5.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:11aabdd62b8b9c4b84081a3c246506d1cddd2dd93ff0ad53ede5defec7886b28\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:dd94994fc91a6177bfaafd7d9fd951bc8689b0a98168aa26b5f543868548d3ca\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2d0da8bbec082bf6bf18345b180958775363588678f64998c2b7609e34719b10\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:73f2e31ea8dd7df61a359b731716018c2be196e5bb3b74ddba107f694fbd7604\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:828afae9f17e6de596825cf4228ff28fbdf6065974e5ac1410cecc22f699d2b3\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f1577515d35ed5649d52ab4319db757bb881ce3b2b796d7283e6634d99ace307\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2150cc6305a2c2ab33299453e2968611dacb970d2283a14955923062c8d00b10\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a72b7a6e3cd2725eff67cd64c8f13335ee18fc3c7befc05aed043d24c7b9ccb9\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c16d2fa63e0800723139137d667e1056bee1a1cf7965153d2d104b62855e9b99\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:17dcc32fc7bda7ce5875435003220a457bcfa34ab7924a49a1c19f55b6ee185c\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:97160e245ea33d8609cd2b8fd997c850b56db147a304a262abc2b3be021a9171\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f1e6540b7fa044eee0bb5111ada694cf3dc15f2b0347ca125ee9ca984d5e9e6e\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:91d6c171862df0a6c61479d9724f22efb6109111017c87567cfeb7b5d1449fdf\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:c1fac3e2ace2eb1052e9f7c7db480818371134410e1f5c55d65e8f3ac6d1407e\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-win32.whl\", hash = \"sha256:b97f7b575ab4a8af9b7bc1d2ef7f29d3afee2226bd03ca3875c16451ad5a7723\"},\n    {file = \"frozenlist-1.5.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:374ca2dabdccad8e2a76d40b1d037f5bd16824933bf7bcea3e59c891fd4a0923\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:9bbcdfaf4af7ce002694a4e10a0159d5a8d20056a12b05b45cea944a4953f972\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:1893f948bf6681733aaccf36c5232c231e3b5166d607c5fa77773611df6dc336\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:2b5e23253bb709ef57a8e95e6ae48daa9ac5f265637529e4ce6b003a37b2621f\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0f253985bb515ecd89629db13cb58d702035ecd8cfbca7d7a7e29a0e6d39af5f\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:04a5c6babd5e8fb7d3c871dc8b321166b80e41b637c31a995ed844a6139942b6\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a9fe0f1c29ba24ba6ff6abf688cb0b7cf1efab6b6aa6adc55441773c252f7411\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:226d72559fa19babe2ccd920273e767c96a49b9d3d38badd7c91a0fdeda8ea08\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:15b731db116ab3aedec558573c1a5eec78822b32292fe4f2f0345b7f697745c2\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:366d8f93e3edfe5a918c874702f78faac300209a4d5bf38352b2c1bdc07a766d\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:1b96af8c582b94d381a1c1f51ffaedeb77c821c690ea5f01da3d70a487dd0a9b\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c03eff4a41bd4e38415cbed054bbaff4a075b093e2394b6915dca34a40d1e38b\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:50cf5e7ee9b98f22bdecbabf3800ae78ddcc26e4a435515fc72d97903e8488e0\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:1e76bfbc72353269c44e0bc2cfe171900fbf7f722ad74c9a7b638052afe6a00c\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-win32.whl\", hash = \"sha256:666534d15ba8f0fda3f53969117383d5dc021266b3c1a42c9ec4855e4b58b9d3\"},\n    {file = \"frozenlist-1.5.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:5c28f4b5dbef8a0d8aad0d4de24d1e9e981728628afaf4ea0792f5d0939372f0\"},\n    {file = \"frozenlist-1.5.0-py3-none-any.whl\", hash = \"sha256:d994863bba198a4a518b467bb971c56e1db3f180a25c6cf7bb1949c267f748c3\"},\n    {file = \"frozenlist-1.5.0.tar.gz\", hash = \"sha256:81d5af29e61b9c8348e876d442253723928dce6433e0e76cd925cd83f1b4b817\"},\n]\n\n[[package]]\nname = \"graphql-core\"\nversion = \"3.2.5\"\ndescription = \"GraphQL implementation for Python, a port of GraphQL.js, the JavaScript reference implementation for GraphQL.\"\noptional = false\npython-versions = \"<4,>=3.6\"\nfiles = [\n    {file = \"graphql_core-3.2.5-py3-none-any.whl\", hash = \"sha256:2f150d5096448aa4f8ab26268567bbfeef823769893b39c1a2e1409590939c8a\"},\n    {file = \"graphql_core-3.2.5.tar.gz\", hash = \"sha256:e671b90ed653c808715645e3998b7ab67d382d55467b7e2978549111bbabf8d5\"},\n]\n\n[package.dependencies]\ntyping-extensions = {version = \">=4,<5\", markers = \"python_version < \\\"3.10\\\"\"}\n\n[[package]]\nname = \"h11\"\nversion = \"0.14.0\"\ndescription = \"A pure-Python, bring-your-own-I/O implementation of HTTP/1.1\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"h11-0.14.0-py3-none-any.whl\", hash = \"sha256:e3fe4ac4b851c468cc8363d500db52c2ead036020723024a109d37346efaa761\"},\n    {file = \"h11-0.14.0.tar.gz\", hash = \"sha256:8f19fbbe99e72420ff35c00b27a34cb9937e902a8b810e2c88300c6f0a3b699d\"},\n]\n\n[[package]]\nname = \"h2\"\nversion = \"4.1.0\"\ndescription = \"HTTP/2 State-Machine based protocol implementation\"\noptional = false\npython-versions = \">=3.6.1\"\nfiles = [\n    {file = \"h2-4.1.0-py3-none-any.whl\", hash = \"sha256:03a46bcf682256c95b5fd9e9a99c1323584c3eec6440d379b9903d709476bc6d\"},\n    {file = \"h2-4.1.0.tar.gz\", hash = \"sha256:a83aca08fbe7aacb79fec788c9c0bac936343560ed9ec18b82a13a12c28d2abb\"},\n]\n\n[package.dependencies]\nhpack = \">=4.0,<5\"\nhyperframe = \">=6.0,<7\"\n\n[[package]]\nname = \"hpack\"\nversion = \"4.0.0\"\ndescription = \"Pure-Python HPACK header compression\"\noptional = false\npython-versions = \">=3.6.1\"\nfiles = [\n    {file = \"hpack-4.0.0-py3-none-any.whl\", hash = \"sha256:84a076fad3dc9a9f8063ccb8041ef100867b1878b25ef0ee63847a5d53818a6c\"},\n    {file = \"hpack-4.0.0.tar.gz\", hash = \"sha256:fc41de0c63e687ebffde81187a948221294896f6bdc0ae2312708df339430095\"},\n]\n\n[[package]]\nname = \"html5tagger\"\nversion = \"1.3.0\"\ndescription = \"Pythonic HTML generation/templating (no template files)\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"html5tagger-1.3.0-py3-none-any.whl\", hash = \"sha256:ce14313515edffec8ed8a36c5890d023922641171b4e6e5774ad1a74998f5351\"},\n    {file = \"html5tagger-1.3.0.tar.gz\", hash = \"sha256:84fa3dfb49e5c83b79bbd856ab7b1de8e2311c3bb46a8be925f119e3880a8da9\"},\n]\n\n[[package]]\nname = \"httpcore\"\nversion = \"1.0.7\"\ndescription = \"A minimal low-level HTTP client.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"httpcore-1.0.7-py3-none-any.whl\", hash = \"sha256:a3fff8f43dc260d5bd363d9f9cf1830fa3a458b332856f34282de498ed420edd\"},\n    {file = \"httpcore-1.0.7.tar.gz\", hash = \"sha256:8551cb62a169ec7162ac7be8d4817d561f60e08eaa485234898414bb5a8a0b4c\"},\n]\n\n[package.dependencies]\ncertifi = \"*\"\nh11 = \">=0.13,<0.15\"\n\n[package.extras]\nasyncio = [\"anyio (>=4.0,<5.0)\"]\nhttp2 = [\"h2 (>=3,<5)\"]\nsocks = [\"socksio (==1.*)\"]\ntrio = [\"trio (>=0.22.0,<1.0)\"]\n\n[[package]]\nname = \"httptools\"\nversion = \"0.6.4\"\ndescription = \"A collection of framework independent HTTP protocol utils.\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"httptools-0.6.4-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:3c73ce323711a6ffb0d247dcd5a550b8babf0f757e86a52558fe5b86d6fefcc0\"},\n    {file = \"httptools-0.6.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:345c288418f0944a6fe67be8e6afa9262b18c7626c3ef3c28adc5eabc06a68da\"},\n    {file = \"httptools-0.6.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:deee0e3343f98ee8047e9f4c5bc7cedbf69f5734454a94c38ee829fb2d5fa3c1\"},\n    {file = \"httptools-0.6.4-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ca80b7485c76f768a3bc83ea58373f8db7b015551117375e4918e2aa77ea9b50\"},\n    {file = \"httptools-0.6.4-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:90d96a385fa941283ebd231464045187a31ad932ebfa541be8edf5b3c2328959\"},\n    {file = \"httptools-0.6.4-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:59e724f8b332319e2875efd360e61ac07f33b492889284a3e05e6d13746876f4\"},\n    {file = \"httptools-0.6.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:c26f313951f6e26147833fc923f78f95604bbec812a43e5ee37f26dc9e5a686c\"},\n    {file = \"httptools-0.6.4-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:f47f8ed67cc0ff862b84a1189831d1d33c963fb3ce1ee0c65d3b0cbe7b711069\"},\n    {file = \"httptools-0.6.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:0614154d5454c21b6410fdf5262b4a3ddb0f53f1e1721cfd59d55f32138c578a\"},\n    {file = \"httptools-0.6.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f8787367fbdfccae38e35abf7641dafc5310310a5987b689f4c32cc8cc3ee975\"},\n    {file = \"httptools-0.6.4-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:40b0f7fe4fd38e6a507bdb751db0379df1e99120c65fbdc8ee6c1d044897a636\"},\n    {file = \"httptools-0.6.4-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:40a5ec98d3f49904b9fe36827dcf1aadfef3b89e2bd05b0e35e94f97c2b14721\"},\n    {file = \"httptools-0.6.4-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:dacdd3d10ea1b4ca9df97a0a303cbacafc04b5cd375fa98732678151643d4988\"},\n    {file = \"httptools-0.6.4-cp311-cp311-win_amd64.whl\", hash = \"sha256:288cd628406cc53f9a541cfaf06041b4c71d751856bab45e3702191f931ccd17\"},\n    {file = \"httptools-0.6.4-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:df017d6c780287d5c80601dafa31f17bddb170232d85c066604d8558683711a2\"},\n    {file = \"httptools-0.6.4-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:85071a1e8c2d051b507161f6c3e26155b5c790e4e28d7f236422dbacc2a9cc44\"},\n    {file = \"httptools-0.6.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:69422b7f458c5af875922cdb5bd586cc1f1033295aa9ff63ee196a87519ac8e1\"},\n    {file = \"httptools-0.6.4-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:16e603a3bff50db08cd578d54f07032ca1631450ceb972c2f834c2b860c28ea2\"},\n    {file = \"httptools-0.6.4-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:ec4f178901fa1834d4a060320d2f3abc5c9e39766953d038f1458cb885f47e81\"},\n    {file = \"httptools-0.6.4-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:f9eb89ecf8b290f2e293325c646a211ff1c2493222798bb80a530c5e7502494f\"},\n    {file = \"httptools-0.6.4-cp312-cp312-win_amd64.whl\", hash = \"sha256:db78cb9ca56b59b016e64b6031eda5653be0589dba2b1b43453f6e8b405a0970\"},\n    {file = \"httptools-0.6.4-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ade273d7e767d5fae13fa637f4d53b6e961fb7fd93c7797562663f0171c26660\"},\n    {file = \"httptools-0.6.4-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:856f4bc0478ae143bad54a4242fccb1f3f86a6e1be5548fecfd4102061b3a083\"},\n    {file = \"httptools-0.6.4-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:322d20ea9cdd1fa98bd6a74b77e2ec5b818abdc3d36695ab402a0de8ef2865a3\"},\n    {file = \"httptools-0.6.4-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4d87b29bd4486c0093fc64dea80231f7c7f7eb4dc70ae394d70a495ab8436071\"},\n    {file = \"httptools-0.6.4-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:342dd6946aa6bda4b8f18c734576106b8a31f2fe31492881a9a160ec84ff4bd5\"},\n    {file = \"httptools-0.6.4-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4b36913ba52008249223042dca46e69967985fb4051951f94357ea681e1f5dc0\"},\n    {file = \"httptools-0.6.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:28908df1b9bb8187393d5b5db91435ccc9c8e891657f9cbb42a2541b44c82fc8\"},\n    {file = \"httptools-0.6.4-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:d3f0d369e7ffbe59c4b6116a44d6a8eb4783aae027f2c0b366cf0aa964185dba\"},\n    {file = \"httptools-0.6.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:94978a49b8f4569ad607cd4946b759d90b285e39c0d4640c6b36ca7a3ddf2efc\"},\n    {file = \"httptools-0.6.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:40dc6a8e399e15ea525305a2ddba998b0af5caa2566bcd79dcbe8948181eeaff\"},\n    {file = \"httptools-0.6.4-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ab9ba8dcf59de5181f6be44a77458e45a578fc99c31510b8c65b7d5acc3cf490\"},\n    {file = \"httptools-0.6.4-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:fc411e1c0a7dcd2f902c7c48cf079947a7e65b5485dea9decb82b9105ca71a43\"},\n    {file = \"httptools-0.6.4-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:d54efd20338ac52ba31e7da78e4a72570cf729fac82bc31ff9199bedf1dc7440\"},\n    {file = \"httptools-0.6.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:df959752a0c2748a65ab5387d08287abf6779ae9165916fe053e68ae1fbdc47f\"},\n    {file = \"httptools-0.6.4-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:85797e37e8eeaa5439d33e556662cc370e474445d5fab24dcadc65a8ffb04003\"},\n    {file = \"httptools-0.6.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:db353d22843cf1028f43c3651581e4bb49374d85692a85f95f7b9a130e1b2cab\"},\n    {file = \"httptools-0.6.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d1ffd262a73d7c28424252381a5b854c19d9de5f56f075445d33919a637e3547\"},\n    {file = \"httptools-0.6.4-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:703c346571fa50d2e9856a37d7cd9435a25e7fd15e236c397bf224afaa355fe9\"},\n    {file = \"httptools-0.6.4-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:aafe0f1918ed07b67c1e838f950b1c1fabc683030477e60b335649b8020e1076\"},\n    {file = \"httptools-0.6.4-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:0e563e54979e97b6d13f1bbc05a96109923e76b901f786a5eae36e99c01237bd\"},\n    {file = \"httptools-0.6.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:b799de31416ecc589ad79dd85a0b2657a8fe39327944998dea368c1d4c9e55e6\"},\n    {file = \"httptools-0.6.4.tar.gz\", hash = \"sha256:4e93eee4add6493b59a5c514da98c939b244fce4a0d8879cd3f466562f4b7d5c\"},\n]\n\n[package.extras]\ntest = [\"Cython (>=0.29.24)\"]\n\n[[package]]\nname = \"httpx\"\nversion = \"0.28.1\"\ndescription = \"The next generation HTTP client.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"httpx-0.28.1-py3-none-any.whl\", hash = \"sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad\"},\n    {file = \"httpx-0.28.1.tar.gz\", hash = \"sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc\"},\n]\n\n[package.dependencies]\nanyio = \"*\"\ncertifi = \"*\"\nhttpcore = \"==1.*\"\nidna = \"*\"\n\n[package.extras]\nbrotli = [\"brotli\", \"brotlicffi\"]\ncli = [\"click (==8.*)\", \"pygments (==2.*)\", \"rich (>=10,<14)\"]\nhttp2 = [\"h2 (>=3,<5)\"]\nsocks = [\"socksio (==1.*)\"]\nzstd = [\"zstandard (>=0.18.0)\"]\n\n[[package]]\nname = \"hypercorn\"\nversion = \"0.17.3\"\ndescription = \"A ASGI Server based on Hyper libraries and inspired by Gunicorn\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"hypercorn-0.17.3-py3-none-any.whl\", hash = \"sha256:059215dec34537f9d40a69258d323f56344805efb462959e727152b0aa504547\"},\n    {file = \"hypercorn-0.17.3.tar.gz\", hash = \"sha256:1b37802ee3ac52d2d85270700d565787ab16cf19e1462ccfa9f089ca17574165\"},\n]\n\n[package.dependencies]\nexceptiongroup = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\nh11 = \"*\"\nh2 = \">=3.1.0\"\npriority = \"*\"\ntaskgroup = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\ntomli = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\ntyping_extensions = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\nwsproto = \">=0.14.0\"\n\n[package.extras]\ndocs = [\"pydata_sphinx_theme\", \"sphinxcontrib_mermaid\"]\nh3 = [\"aioquic (>=0.9.0,<1.0)\"]\ntrio = [\"trio (>=0.22.0)\"]\nuvloop = [\"uvloop (>=0.18)\"]\n\n[[package]]\nname = \"hyperframe\"\nversion = \"6.0.1\"\ndescription = \"HTTP/2 framing layer for Python\"\noptional = false\npython-versions = \">=3.6.1\"\nfiles = [\n    {file = \"hyperframe-6.0.1-py3-none-any.whl\", hash = \"sha256:0ec6bafd80d8ad2195c4f03aacba3a8265e57bc4cff261e802bf39970ed02a15\"},\n    {file = \"hyperframe-6.0.1.tar.gz\", hash = \"sha256:ae510046231dc8e9ecb1a6586f63d2347bf4c8905914aa84ba585ae85f28a914\"},\n]\n\n[[package]]\nname = \"hyperlink\"\nversion = \"21.0.0\"\ndescription = \"A featureful, immutable, and correct URL for Python.\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"hyperlink-21.0.0-py2.py3-none-any.whl\", hash = \"sha256:e6b14c37ecb73e89c77d78cdb4c2cc8f3fb59a885c5b3f819ff4ed80f25af1b4\"},\n    {file = \"hyperlink-21.0.0.tar.gz\", hash = \"sha256:427af957daa58bc909471c6c40f74c5450fa123dd093fc53efd2e91d2705a56b\"},\n]\n\n[package.dependencies]\nidna = \">=2.5\"\n\n[[package]]\nname = \"idna\"\nversion = \"3.10\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\"},\n    {file = \"idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\"},\n]\n\n[package.extras]\nall = [\"flake8 (>=7.1.1)\", \"mypy (>=1.11.2)\", \"pytest (>=8.3.2)\", \"ruff (>=0.6.2)\"]\n\n[[package]]\nname = \"importlib-metadata\"\nversion = \"8.5.0\"\ndescription = \"Read metadata from Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"importlib_metadata-8.5.0-py3-none-any.whl\", hash = \"sha256:45e54197d28b7a7f1559e60b95e7c567032b602131fbd588f1497f47880aa68b\"},\n    {file = \"importlib_metadata-8.5.0.tar.gz\", hash = \"sha256:71522656f0abace1d072b9e5481a48f07c138e00f079c38c8f883823f9c26bd7\"},\n]\n\n[package.dependencies]\nzipp = \">=3.20\"\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\nperf = [\"ipython\"]\ntest = [\"flufl.flake8\", \"importlib-resources (>=1.3)\", \"jaraco.test (>=5.4)\", \"packaging\", \"pyfakefs\", \"pytest (>=6,!=8.1.*)\", \"pytest-perf (>=0.9.2)\"]\ntype = [\"pytest-mypy\"]\n\n[[package]]\nname = \"incremental\"\nversion = \"24.7.2\"\ndescription = \"A small library that versions your Python projects.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"incremental-24.7.2-py3-none-any.whl\", hash = \"sha256:8cb2c3431530bec48ad70513931a760f446ad6c25e8333ca5d95e24b0ed7b8fe\"},\n    {file = \"incremental-24.7.2.tar.gz\", hash = \"sha256:fb4f1d47ee60efe87d4f6f0ebb5f70b9760db2b2574c59c8e8912be4ebd464c9\"},\n]\n\n[package.dependencies]\nsetuptools = \">=61.0\"\ntomli = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\nscripts = [\"click (>=6.0)\"]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"2.0.0\"\ndescription = \"brain-dead simple config-ini parsing\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"iniconfig-2.0.0-py3-none-any.whl\", hash = \"sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374\"},\n    {file = \"iniconfig-2.0.0.tar.gz\", hash = \"sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3\"},\n]\n\n[[package]]\nname = \"inline-snapshot\"\nversion = \"0.10.2\"\ndescription = \"golden master/snapshot/approval testing library which puts the values right into your source code\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"inline_snapshot-0.10.2-py3-none-any.whl\", hash = \"sha256:f61d42f0d4bddd2a3efae041f5b168e94ac2df566cbf2c67a26d03d5f090835a\"},\n    {file = \"inline_snapshot-0.10.2.tar.gz\", hash = \"sha256:fb3c1410a08c9700ca838a269f70117760b024d99d6193661a8b47f8302b09cd\"},\n]\n\n[package.dependencies]\nasttokens = \">=2.0.5\"\nblack = \">=23.3.0\"\nclick = \">=8.1.4\"\nexecuting = \">=2.0.0\"\nrich = \">=13.7.1\"\ntoml = \">=0.10.2\"\ntypes-toml = \">=0.10.8.7\"\n\n[[package]]\nname = \"inquirer\"\nversion = \"3.1.4\"\ndescription = \"Collection of common interactive command line user interfaces, based on Inquirer.js\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"inquirer-3.1.4-py3-none-any.whl\", hash = \"sha256:8ca28834b6c6f69e0bf19cab2e2bea2c465312bb74bd6317b88a46458163a051\"},\n    {file = \"inquirer-3.1.4.tar.gz\", hash = \"sha256:958dbd5978f173630756a6ed6243acf931e750416eb7a6ed3a0ff13af0fdfcb5\"},\n]\n\n[package.dependencies]\nblessed = \">=1.19.0\"\npython-editor = \">=1.0.4\"\nreadchar = \">=3.0.6\"\n\n[[package]]\nname = \"installer\"\nversion = \"0.7.0\"\ndescription = \"A library for installing Python wheels.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"installer-0.7.0-py3-none-any.whl\", hash = \"sha256:05d1933f0a5ba7d8d6296bb6d5018e7c94fa473ceb10cf198a92ccea19c27b53\"},\n    {file = \"installer-0.7.0.tar.gz\", hash = \"sha256:a26d3e3116289bb08216e0d0f7d925fcef0b0194eedfa0c944bcaaa106c4b631\"},\n]\n\n[[package]]\nname = \"itsdangerous\"\nversion = \"2.2.0\"\ndescription = \"Safely pass data to untrusted environments and back.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"itsdangerous-2.2.0-py3-none-any.whl\", hash = \"sha256:c6242fc49e35958c8b15141343aa660db5fc54d4f13a1db01a3f5891b98700ef\"},\n    {file = \"itsdangerous-2.2.0.tar.gz\", hash = \"sha256:e0050c0b7da1eea53ffaf149c0cfbb5c6e2e2b69c4bef22c81fa6eb73e5f6173\"},\n]\n\n[[package]]\nname = \"jaraco-classes\"\nversion = \"3.4.0\"\ndescription = \"Utility functions for Python class constructs\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"jaraco.classes-3.4.0-py3-none-any.whl\", hash = \"sha256:f662826b6bed8cace05e7ff873ce0f9283b5c924470fe664fff1c2f00f581790\"},\n    {file = \"jaraco.classes-3.4.0.tar.gz\", hash = \"sha256:47a024b51d0239c0dd8c8540c6c7f484be3b8fcf0b2d85c13825780d3b3f3acd\"},\n]\n\n[package.dependencies]\nmore-itertools = \"*\"\n\n[package.extras]\ndocs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\ntesting = [\"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\"]\n\n[[package]]\nname = \"jeepney\"\nversion = \"0.8.0\"\ndescription = \"Low-level, pure Python DBus protocol wrapper.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"jeepney-0.8.0-py3-none-any.whl\", hash = \"sha256:c0a454ad016ca575060802ee4d590dd912e35c122fa04e70306de3d076cce755\"},\n    {file = \"jeepney-0.8.0.tar.gz\", hash = \"sha256:5efe48d255973902f6badc3ce55e2aa6c5c3b3bc642059ef3a91247bcfcc5806\"},\n]\n\n[package.extras]\ntest = [\"async-timeout\", \"pytest\", \"pytest-asyncio (>=0.17)\", \"pytest-trio\", \"testpath\", \"trio\"]\ntrio = [\"async_generator\", \"trio\"]\n\n[[package]]\nname = \"jinja2\"\nversion = \"3.1.4\"\ndescription = \"A very fast and expressive template engine.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"jinja2-3.1.4-py3-none-any.whl\", hash = \"sha256:bc5dd2abb727a5319567b7a813e6a2e7318c39f4f487cfe6c89c6f9c7d25197d\"},\n    {file = \"jinja2-3.1.4.tar.gz\", hash = \"sha256:4a3aee7acbbe7303aede8e9648d13b8bf88a429282aa6122a993f0ac800cb369\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=2.0\"\n\n[package.extras]\ni18n = [\"Babel (>=2.7)\"]\n\n[[package]]\nname = \"jinxed\"\nversion = \"1.3.0\"\ndescription = \"Jinxed Terminal Library\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"jinxed-1.3.0-py2.py3-none-any.whl\", hash = \"sha256:b993189f39dc2d7504d802152671535b06d380b26d78070559551cbf92df4fc5\"},\n    {file = \"jinxed-1.3.0.tar.gz\", hash = \"sha256:1593124b18a41b7a3da3b078471442e51dbad3d77b4d4f2b0c26ab6f7d660dbf\"},\n]\n\n[package.dependencies]\nansicon = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"jmespath\"\nversion = \"1.0.1\"\ndescription = \"JSON Matching Expressions\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"jmespath-1.0.1-py3-none-any.whl\", hash = \"sha256:02e2e4cc71b5bcab88332eebf907519190dd9e6e82107fa7f83b1003a6252980\"},\n    {file = \"jmespath-1.0.1.tar.gz\", hash = \"sha256:90261b206d6defd58fdd5e85f478bf633a2901798906be2ad389150c5c60edbe\"},\n]\n\n[[package]]\nname = \"keyring\"\nversion = \"24.3.1\"\ndescription = \"Store and access your passwords safely.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"keyring-24.3.1-py3-none-any.whl\", hash = \"sha256:df38a4d7419a6a60fea5cef1e45a948a3e8430dd12ad88b0f423c5c143906218\"},\n    {file = \"keyring-24.3.1.tar.gz\", hash = \"sha256:c3327b6ffafc0e8befbdb597cacdb4928ffe5c1212f7645f186e6d9957a898db\"},\n]\n\n[package.dependencies]\nimportlib-metadata = {version = \">=4.11.4\", markers = \"python_version < \\\"3.12\\\"\"}\n\"jaraco.classes\" = \"*\"\njeepney = {version = \">=0.4.2\", markers = \"sys_platform == \\\"linux\\\"\"}\npywin32-ctypes = {version = \">=0.2.0\", markers = \"sys_platform == \\\"win32\\\"\"}\nSecretStorage = {version = \">=3.2\", markers = \"sys_platform == \\\"linux\\\"\"}\n\n[package.extras]\ncompletion = [\"shtab (>=1.1.0)\"]\ndocs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (<7.2.5)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\ntesting = [\"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\"]\n\n[[package]]\nname = \"libcst\"\nversion = \"1.1.0\"\ndescription = \"A concrete syntax tree with AST-like properties for Python 3.5, 3.6, 3.7, 3.8, 3.9, and 3.10 programs.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"libcst-1.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:63f75656fd733dc20354c46253fde3cf155613e37643c3eaf6f8818e95b7a3d1\"},\n    {file = \"libcst-1.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8ae11eb1ea55a16dc0cdc61b41b29ac347da70fec14cc4381248e141ee2fbe6c\"},\n    {file = \"libcst-1.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4bc745d0c06420fe2644c28d6ddccea9474fb68a2135904043676deb4fa1e6bc\"},\n    {file = \"libcst-1.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8c1f2da45f1c45634090fd8672c15e0159fdc46853336686959b2d093b6e10fa\"},\n    {file = \"libcst-1.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:003e5e83a12eed23542c4ea20fdc8de830887cc03662432bb36f84f8c4841b81\"},\n    {file = \"libcst-1.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:3ebbb9732ae3cc4ae7a0e97890bed0a57c11d6df28790c2b9c869f7da653c7c7\"},\n    {file = \"libcst-1.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:d68c34e3038d3d1d6324eb47744cbf13f2c65e1214cf49db6ff2a6603c1cd838\"},\n    {file = \"libcst-1.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:9dffa1795c2804d183efb01c0f1efd20a7831db6a21a0311edf90b4100d67436\"},\n    {file = \"libcst-1.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cc9b6ac36d7ec9db2f053014ea488086ca2ed9c322be104fbe2c71ca759da4bb\"},\n    {file = \"libcst-1.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:78b7a38ec4c1c009ac39027d51558b52851fb9234669ba5ba62283185963a31c\"},\n    {file = \"libcst-1.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5297a16e575be8173185e936b7765c89a3ca69d4ae217a4af161814a0f9745a7\"},\n    {file = \"libcst-1.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:7ccaf53925f81118aeaadb068a911fac8abaff608817d7343da280616a5ca9c1\"},\n    {file = \"libcst-1.1.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:75816647736f7e09c6120bdbf408456f99b248d6272277eed9a58cf50fb8bc7d\"},\n    {file = \"libcst-1.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:c8f26250f87ca849a7303ed7a4fd6b2c7ac4dec16b7d7e68ca6a476d7c9bfcdb\"},\n    {file = \"libcst-1.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2d37326bd6f379c64190a28947a586b949de3a76be00176b0732c8ee87d67ebe\"},\n    {file = \"libcst-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e3d8cf974cfa2487b28f23f56c4bff90d550ef16505e58b0dca0493d5293784b\"},\n    {file = \"libcst-1.1.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:82d1271403509b0a4ee6ff7917c2d33b5a015f44d1e208abb1da06ba93b2a378\"},\n    {file = \"libcst-1.1.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:bca1841693941fdd18371824bb19a9702d5784cd347cb8231317dbdc7062c5bc\"},\n    {file = \"libcst-1.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:f36f592e035ef84f312a12b75989dde6a5f6767fe99146cdae6a9ee9aff40dd0\"},\n    {file = \"libcst-1.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:f561c9a84eca18be92f4ad90aa9bd873111efbea995449301719a1a7805dbc5c\"},\n    {file = \"libcst-1.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:97fbc73c87e9040e148881041fd5ffa2a6ebf11f64b4ccb5b52e574b95df1a15\"},\n    {file = \"libcst-1.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:99fdc1929703fd9e7408aed2e03f58701c5280b05c8911753a8d8619f7dfdda5\"},\n    {file = \"libcst-1.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0bf69cbbab5016d938aac4d3ae70ba9ccb3f90363c588b3b97be434e6ba95403\"},\n    {file = \"libcst-1.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:fe41b33aa73635b1651f64633f429f7aa21f86d2db5748659a99d9b7b1ed2a90\"},\n    {file = \"libcst-1.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:73c086705ed34dbad16c62c9adca4249a556c1b022993d511da70ea85feaf669\"},\n    {file = \"libcst-1.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3a07ecfabbbb8b93209f952a365549e65e658831e9231649f4f4e4263cad24b1\"},\n    {file = \"libcst-1.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c653d9121d6572d8b7f8abf20f88b0a41aab77ff5a6a36e5a0ec0f19af0072e8\"},\n    {file = \"libcst-1.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5f1cd308a4c2f71d5e4eec6ee693819933a03b78edb2e4cc5e3ad1afd5fb3f07\"},\n    {file = \"libcst-1.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8afb6101b8b3c86c5f9cec6b90ab4da16c3c236fe7396f88e8b93542bb341f7c\"},\n    {file = \"libcst-1.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:d22d1abfe49aa60fc61fa867e10875a9b3024ba5a801112f4d7ba42d8d53242e\"},\n    {file = \"libcst-1.1.0.tar.gz\", hash = \"sha256:0acbacb9a170455701845b7e940e2d7b9519db35a86768d86330a0b0deae1086\"},\n]\n\n[package.dependencies]\npyyaml = \">=5.2\"\ntyping-extensions = \">=3.7.4.2\"\ntyping-inspect = \">=0.4.0\"\n\n[package.extras]\ndev = [\"Sphinx (>=5.1.1)\", \"black (==23.9.1)\", \"build (>=0.10.0)\", \"coverage (>=4.5.4)\", \"fixit (==2.0.0.post1)\", \"flake8 (>=3.7.8,<5)\", \"hypothesis (>=4.36.0)\", \"hypothesmith (>=0.0.4)\", \"jinja2 (==3.1.2)\", \"jupyter (>=1.0.0)\", \"maturin (>=0.8.3,<0.16)\", \"nbsphinx (>=0.4.2)\", \"prompt-toolkit (>=2.0.9)\", \"pyre-check (==0.9.18)\", \"setuptools-rust (>=1.5.2)\", \"setuptools-scm (>=6.0.1)\", \"slotscheck (>=0.7.1)\", \"sphinx-rtd-theme (>=0.4.3)\", \"ufmt (==2.2.0)\", \"usort (==1.0.7)\"]\n\n[[package]]\nname = \"litestar\"\nversion = \"2.13.0\"\ndescription = \"Litestar - A production-ready, highly performant, extensible ASGI API Framework\"\noptional = false\npython-versions = \"<4.0,>=3.8\"\nfiles = [\n    {file = \"litestar-2.13.0-py3-none-any.whl\", hash = \"sha256:a40765644115639015a54e8cd7e7bdbe597a58d3f2d8f6d21afe9f343df43916\"},\n    {file = \"litestar-2.13.0.tar.gz\", hash = \"sha256:51a3ab60b7bc8de2c126f3ad907c2ba6f9d22194bdf1be9df52253e57ed80f0e\"},\n]\n\n[package.dependencies]\nanyio = \">=3\"\nclick = \"*\"\nexceptiongroup = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\nhttpx = \">=0.22\"\nimportlib-metadata = {version = \"*\", markers = \"python_version < \\\"3.10\\\"\"}\nlitestar-htmx = \">=0.3.0\"\nmsgspec = \">=0.18.2\"\nmultidict = \">=6.0.2\"\npolyfactory = \">=2.6.3\"\npyyaml = \"*\"\nrich = \">=13.0.0\"\nrich-click = \"*\"\ntyping-extensions = \"*\"\n\n[package.extras]\nannotated-types = [\"annotated-types\"]\nattrs = [\"attrs\"]\nbrotli = [\"brotli\"]\ncli = [\"jsbeautifier\", \"uvicorn[standard]\", \"uvloop (>=0.18.0)\"]\ncryptography = [\"cryptography\"]\nfull = [\"advanced-alchemy (>=0.2.2)\", \"annotated-types\", \"attrs\", \"brotli\", \"cryptography\", \"email-validator\", \"fast-query-parsers (>=1.0.2)\", \"jinja2\", \"jinja2 (>=3.1.2)\", \"jsbeautifier\", \"mako (>=1.2.4)\", \"minijinja (>=1.0.0)\", \"opentelemetry-instrumentation-asgi\", \"piccolo\", \"picologging\", \"prometheus-client\", \"pydantic\", \"pydantic-extra-types\", \"pyjwt (>=2.9.0)\", \"redis[hiredis] (>=4.4.4)\", \"structlog\", \"uvicorn[standard]\", \"uvloop (>=0.18.0)\"]\nhtmx = [\"litestar-htmx (>=0.3.0)\"]\njinja = [\"jinja2 (>=3.1.2)\"]\njwt = [\"cryptography\", \"pyjwt (>=2.9.0)\"]\nmako = [\"mako (>=1.2.4)\"]\nminijinja = [\"minijinja (>=1.0.0)\"]\nopentelemetry = [\"opentelemetry-instrumentation-asgi\"]\npiccolo = [\"piccolo\"]\npicologging = [\"picologging\"]\nprometheus = [\"prometheus-client\"]\npydantic = [\"email-validator\", \"pydantic\", \"pydantic-extra-types\"]\nredis = [\"redis[hiredis] (>=4.4.4)\"]\nsqlalchemy = [\"advanced-alchemy (>=0.2.2)\"]\nstandard = [\"fast-query-parsers (>=1.0.2)\", \"jinja2\", \"jsbeautifier\", \"uvicorn[standard]\", \"uvloop (>=0.18.0)\"]\nstructlog = [\"structlog\"]\n\n[[package]]\nname = \"litestar-htmx\"\nversion = \"0.4.1\"\ndescription = \"HTMX Integration for Litesstar\"\noptional = false\npython-versions = \"<4.0,>=3.8\"\nfiles = [\n    {file = \"litestar_htmx-0.4.1-py3-none-any.whl\", hash = \"sha256:ba2a8ff1e210f21980735b9cde13d239a2b7c3627cb4aeb425d66f4a314d1a59\"},\n    {file = \"litestar_htmx-0.4.1.tar.gz\", hash = \"sha256:ba2537008eb8cc18bfc8bee5cecb280924c7818bb1c066d79eae4b221696ca08\"},\n]\n\n[[package]]\nname = \"markdown-it-py\"\nversion = \"3.0.0\"\ndescription = \"Python port of markdown-it. Markdown parsing, done right!\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"markdown-it-py-3.0.0.tar.gz\", hash = \"sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb\"},\n    {file = \"markdown_it_py-3.0.0-py3-none-any.whl\", hash = \"sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1\"},\n]\n\n[package.dependencies]\nmdurl = \">=0.1,<1.0\"\n\n[package.extras]\nbenchmarking = [\"psutil\", \"pytest\", \"pytest-benchmark\"]\ncode-style = [\"pre-commit (>=3.0,<4.0)\"]\ncompare = [\"commonmark (>=0.9,<1.0)\", \"markdown (>=3.4,<4.0)\", \"mistletoe (>=1.0,<2.0)\", \"mistune (>=2.0,<3.0)\", \"panflute (>=2.3,<3.0)\"]\nlinkify = [\"linkify-it-py (>=1,<3)\"]\nplugins = [\"mdit-py-plugins\"]\nprofiling = [\"gprof2dot\"]\nrtd = [\"jupyter_sphinx\", \"mdit-py-plugins\", \"myst-parser\", \"pyyaml\", \"sphinx\", \"sphinx-copybutton\", \"sphinx-design\", \"sphinx_book_theme\"]\ntesting = [\"coverage\", \"pytest\", \"pytest-cov\", \"pytest-regressions\"]\n\n[[package]]\nname = \"markupsafe\"\nversion = \"2.1.3\"\ndescription = \"Safely add untrusted strings to HTML/XML markup.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:cd0f502fe016460680cd20aaa5a76d241d6f35a1c3350c474bac1273803893fa\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:e09031c87a1e51556fdcb46e5bd4f59dfb743061cf93c4d6831bf894f125eb57\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:68e78619a61ecf91e76aa3e6e8e33fc4894a2bebe93410754bd28fce0a8a4f9f\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:65c1a9bcdadc6c28eecee2c119465aebff8f7a584dd719facdd9e825ec61ab52\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:525808b8019e36eb524b8c68acdd63a37e75714eac50e988180b169d64480a00\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:962f82a3086483f5e5f64dbad880d31038b698494799b097bc59c2edf392fce6\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:aa7bd130efab1c280bed0f45501b7c8795f9fdbeb02e965371bbef3523627779\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:c9c804664ebe8f83a211cace637506669e7890fec1b4195b505c214e50dd4eb7\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-win32.whl\", hash = \"sha256:10bbfe99883db80bdbaff2dcf681dfc6533a614f700da1287707e8a5d78a8431\"},\n    {file = \"MarkupSafe-2.1.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:1577735524cdad32f9f694208aa75e422adba74f1baee7551620e43a3141f559\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:ad9e82fb8f09ade1c3e1b996a6337afac2b8b9e365f926f5a61aacc71adc5b3c\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:3c0fae6c3be832a0a0473ac912810b2877c8cb9d76ca48de1ed31e1c68386575\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b076b6226fb84157e3f7c971a47ff3a679d837cf338547532ab866c57930dbee\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bfce63a9e7834b12b87c64d6b155fdd9b3b96191b6bd334bf37db7ff1fe457f2\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:338ae27d6b8745585f87218a3f23f1512dbf52c26c28e322dbe54bcede54ccb9\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:e4dd52d80b8c83fdce44e12478ad2e85c64ea965e75d66dbeafb0a3e77308fcc\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:df0be2b576a7abbf737b1575f048c23fb1d769f267ec4358296f31c2479db8f9\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-win32.whl\", hash = \"sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb\"},\n    {file = \"MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-win32.whl\", hash = \"sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007\"},\n    {file = \"MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ca379055a47383d02a5400cb0d110cef0a776fc644cda797db0c5696cfd7e18e\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:b7ff0f54cb4ff66dd38bebd335a38e2c22c41a8ee45aa608efc890ac3e3931bc\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:c011a4149cfbcf9f03994ec2edffcb8b1dc2d2aede7ca243746df97a5d41ce48\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:56d9f2ecac662ca1611d183feb03a3fa4406469dafe241673d521dd5ae92a155\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-win32.whl\", hash = \"sha256:8758846a7e80910096950b67071243da3e5a20ed2546e6392603c096778d48e0\"},\n    {file = \"MarkupSafe-2.1.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:787003c0ddb00500e49a10f2844fac87aa6ce977b90b0feaaf9de23c22508b24\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:2ef12179d3a291be237280175b542c07a36e7f60718296278d8593d21ca937d4\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2c1b19b3aaacc6e57b7e25710ff571c24d6c3613a45e905b1fde04d691b98ee0\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8afafd99945ead6e075b973fefa56379c5b5c53fd8937dad92c662da5d8fd5ee\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8c41976a29d078bb235fea9b2ecd3da465df42a562910f9022f1a03107bd02be\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d080e0a5eb2529460b30190fcfcc4199bd7f827663f858a226a81bc27beaa97e\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:69c0f17e9f5a7afdf2cc9fb2d1ce6aabdb3bafb7f38017c0b77862bcec2bbad8\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:504b320cd4b7eff6f968eddf81127112db685e81f7e36e75f9f84f0df46041c3\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:42de32b22b6b804f42c5d98be4f7e5e977ecdd9ee9b660fda1a3edf03b11792d\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-win32.whl\", hash = \"sha256:ceb01949af7121f9fc39f7d27f91be8546f3fb112c608bc4029aef0bab86a2a5\"},\n    {file = \"MarkupSafe-2.1.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:1b40069d487e7edb2676d3fbdb2b0829ffa2cd63a2ec26c4938b2d34391b4ecc\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:8023faf4e01efadfa183e863fefde0046de576c6f14659e8782065bcece22198\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:6b2b56950d93e41f33b4223ead100ea0fe11f8e6ee5f641eb753ce4b77a7042b\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9dcdfd0eaf283af041973bff14a2e143b8bd64e069f4c383416ecd79a81aab58\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:05fb21170423db021895e1ea1e1f3ab3adb85d1c2333cbc2310f2a26bc77272e\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:282c2cb35b5b673bbcadb33a585408104df04f14b2d9b01d4c345a3b92861c2c\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:ab4a0df41e7c16a1392727727e7998a467472d0ad65f3ad5e6e765015df08636\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:7ef3cb2ebbf91e330e3bb937efada0edd9003683db6b57bb108c4001f37a02ea\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:0a4e4a1aff6c7ac4cd55792abf96c915634c2b97e3cc1c7129578aa68ebd754e\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-win32.whl\", hash = \"sha256:fec21693218efe39aa7f8599346e90c705afa52c5b31ae019b2e57e8f6542bb2\"},\n    {file = \"MarkupSafe-2.1.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:3fd4abcb888d15a94f32b75d8fd18ee162ca0c064f35b11134be77050296d6ba\"},\n    {file = \"MarkupSafe-2.1.3.tar.gz\", hash = \"sha256:af598ed32d6ae86f1b747b82783958b1a4ab8f617b06fe68795c7f026abbdcad\"},\n]\n\n[[package]]\nname = \"mdurl\"\nversion = \"0.1.2\"\ndescription = \"Markdown URL utilities\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"mdurl-0.1.2-py3-none-any.whl\", hash = \"sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8\"},\n    {file = \"mdurl-0.1.2.tar.gz\", hash = \"sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba\"},\n]\n\n[[package]]\nname = \"more-itertools\"\nversion = \"10.5.0\"\ndescription = \"More routines for operating on iterables, beyond itertools\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"more-itertools-10.5.0.tar.gz\", hash = \"sha256:5482bfef7849c25dc3c6dd53a6173ae4795da2a41a80faea6700d9f5846c5da6\"},\n    {file = \"more_itertools-10.5.0-py3-none-any.whl\", hash = \"sha256:037b0d3203ce90cca8ab1defbbdac29d5f993fc20131f3664dc8d6acfa872aef\"},\n]\n\n[[package]]\nname = \"msgpack\"\nversion = \"1.1.0\"\ndescription = \"MessagePack serializer\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"msgpack-1.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:7ad442d527a7e358a469faf43fda45aaf4ac3249c8310a82f0ccff9164e5dccd\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:74bed8f63f8f14d75eec75cf3d04ad581da6b914001b474a5d3cd3372c8cc27d\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:914571a2a5b4e7606997e169f64ce53a8b1e06f2cf2c3a7273aa106236d43dd5\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c921af52214dcbb75e6bdf6a661b23c3e6417f00c603dd2070bccb5c3ef499f5\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d8ce0b22b890be5d252de90d0e0d119f363012027cf256185fc3d474c44b1b9e\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:73322a6cc57fcee3c0c57c4463d828e9428275fb85a27aa2aa1a92fdc42afd7b\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:e1f3c3d21f7cf67bcf2da8e494d30a75e4cf60041d98b3f79875afb5b96f3a3f\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:64fc9068d701233effd61b19efb1485587560b66fe57b3e50d29c5d78e7fef68\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:42f754515e0f683f9c79210a5d1cad631ec3d06cea5172214d2176a42e67e19b\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-win32.whl\", hash = \"sha256:3df7e6b05571b3814361e8464f9304c42d2196808e0119f55d0d3e62cd5ea044\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:685ec345eefc757a7c8af44a3032734a739f8c45d1b0ac45efc5d8977aa4720f\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:3d364a55082fb2a7416f6c63ae383fbd903adb5a6cf78c5b96cc6316dc1cedc7\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:79ec007767b9b56860e0372085f8504db5d06bd6a327a335449508bbee9648fa\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6ad622bf7756d5a497d5b6836e7fc3752e2dd6f4c648e24b1803f6048596f701\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8e59bca908d9ca0de3dc8684f21ebf9a690fe47b6be93236eb40b99af28b6ea6\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5e1da8f11a3dd397f0a32c76165cf0c4eb95b31013a94f6ecc0b280c05c91b59\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:452aff037287acb1d70a804ffd022b21fa2bb7c46bee884dbc864cc9024128a0\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8da4bf6d54ceed70e8861f833f83ce0814a2b72102e890cbdfe4b34764cdd66e\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:41c991beebf175faf352fb940bf2af9ad1fb77fd25f38d9142053914947cdbf6\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:a52a1f3a5af7ba1c9ace055b659189f6c669cf3657095b50f9602af3a3ba0fe5\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-win32.whl\", hash = \"sha256:58638690ebd0a06427c5fe1a227bb6b8b9fdc2bd07701bec13c2335c82131a88\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:fd2906780f25c8ed5d7b323379f6138524ba793428db5d0e9d226d3fa6aa1788\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:d46cf9e3705ea9485687aa4001a76e44748b609d260af21c4ceea7f2212a501d\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:5dbad74103df937e1325cc4bfeaf57713be0b4f15e1c2da43ccdd836393e2ea2\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:58dfc47f8b102da61e8949708b3eafc3504509a5728f8b4ddef84bd9e16ad420\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4676e5be1b472909b2ee6356ff425ebedf5142427842aa06b4dfd5117d1ca8a2\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:17fb65dd0bec285907f68b15734a993ad3fc94332b5bb21b0435846228de1f39\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a51abd48c6d8ac89e0cfd4fe177c61481aca2d5e7ba42044fd218cfd8ea9899f\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:2137773500afa5494a61b1208619e3871f75f27b03bcfca7b3a7023284140247\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:398b713459fea610861c8a7b62a6fec1882759f308ae0795b5413ff6a160cf3c\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:06f5fd2f6bb2a7914922d935d3b8bb4a7fff3a9a91cfce6d06c13bc42bec975b\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-win32.whl\", hash = \"sha256:ad33e8400e4ec17ba782f7b9cf868977d867ed784a1f5f2ab46e7ba53b6e1e1b\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:115a7af8ee9e8cddc10f87636767857e7e3717b7a2e97379dc2054712693e90f\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:071603e2f0771c45ad9bc65719291c568d4edf120b44eb36324dcb02a13bfddf\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:0f92a83b84e7c0749e3f12821949d79485971f087604178026085f60ce109330\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:4a1964df7b81285d00a84da4e70cb1383f2e665e0f1f2a7027e683956d04b734\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:59caf6a4ed0d164055ccff8fe31eddc0ebc07cf7326a2aaa0dbf7a4001cd823e\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0907e1a7119b337971a689153665764adc34e89175f9a34793307d9def08e6ca\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:65553c9b6da8166e819a6aa90ad15288599b340f91d18f60b2061f402b9a4915\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:7a946a8992941fea80ed4beae6bff74ffd7ee129a90b4dd5cf9c476a30e9708d\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:4b51405e36e075193bc051315dbf29168d6141ae2500ba8cd80a522964e31434\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:b4c01941fd2ff87c2a934ee6055bda4ed353a7846b8d4f341c428109e9fcde8c\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-win32.whl\", hash = \"sha256:7c9a35ce2c2573bada929e0b7b3576de647b0defbd25f5139dcdaba0ae35a4cc\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:bce7d9e614a04d0883af0b3d4d501171fbfca038f12c77fa838d9f198147a23f\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c40ffa9a15d74e05ba1fe2681ea33b9caffd886675412612d93ab17b58ea2fec\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f1ba6136e650898082d9d5a5217d5906d1e138024f836ff48691784bbe1adf96\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e0856a2b7e8dcb874be44fea031d22e5b3a19121be92a1e098f46068a11b0870\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:471e27a5787a2e3f974ba023f9e265a8c7cfd373632247deb225617e3100a3c7\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:646afc8102935a388ffc3914b336d22d1c2d6209c773f3eb5dd4d6d3b6f8c1cb\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:13599f8829cfbe0158f6456374e9eea9f44eee08076291771d8ae93eda56607f\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-win32.whl\", hash = \"sha256:8a84efb768fb968381e525eeeb3d92857e4985aacc39f3c47ffd00eb4509315b\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:879a7b7b0ad82481c52d3c7eb99bf6f0645dbdec5134a4bddbd16f3506947feb\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:53258eeb7a80fc46f62fd59c876957a2d0e15e6449a9e71842b6d24419d88ca1\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7e7b853bbc44fb03fbdba34feb4bd414322180135e2cb5164f20ce1c9795ee48\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:f3e9b4936df53b970513eac1758f3882c88658a220b58dcc1e39606dccaaf01c\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:46c34e99110762a76e3911fc923222472c9d681f1094096ac4102c18319e6468\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8a706d1e74dd3dea05cb54580d9bd8b2880e9264856ce5068027eed09680aa74\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:534480ee5690ab3cbed89d4c8971a5c631b69a8c0883ecfea96c19118510c846\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:8cf9e8c3a2153934a23ac160cc4cba0ec035f6867c8013cc6077a79823370346\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:3180065ec2abbe13a4ad37688b61b99d7f9e012a535b930e0e683ad6bc30155b\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:c5a91481a3cc573ac8c0d9aace09345d989dc4a0202b7fcb312c88c26d4e71a8\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-win32.whl\", hash = \"sha256:f80bc7d47f76089633763f952e67f8214cb7b3ee6bfa489b3cb6a84cfac114cd\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:4d1b7ff2d6146e16e8bd665ac726a89c74163ef8cd39fa8c1087d4e52d3a2325\"},\n    {file = \"msgpack-1.1.0.tar.gz\", hash = \"sha256:dd432ccc2c72b914e4cb77afce64aab761c1137cc698be3984eee260bcb2896e\"},\n]\n\n[[package]]\nname = \"msgspec\"\nversion = \"0.18.6\"\ndescription = \"A fast serialization and validation library, with builtin support for JSON, MessagePack, YAML, and TOML.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"msgspec-0.18.6-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:77f30b0234eceeff0f651119b9821ce80949b4d667ad38f3bfed0d0ebf9d6d8f\"},\n    {file = \"msgspec-0.18.6-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:1a76b60e501b3932782a9da039bd1cd552b7d8dec54ce38332b87136c64852dd\"},\n    {file = \"msgspec-0.18.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:06acbd6edf175bee0e36295d6b0302c6de3aaf61246b46f9549ca0041a9d7177\"},\n    {file = \"msgspec-0.18.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:40a4df891676d9c28a67c2cc39947c33de516335680d1316a89e8f7218660410\"},\n    {file = \"msgspec-0.18.6-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:a6896f4cd5b4b7d688018805520769a8446df911eb93b421c6c68155cdf9dd5a\"},\n    {file = \"msgspec-0.18.6-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:3ac4dd63fd5309dd42a8c8c36c1563531069152be7819518be0a9d03be9788e4\"},\n    {file = \"msgspec-0.18.6-cp310-cp310-win_amd64.whl\", hash = \"sha256:fda4c357145cf0b760000c4ad597e19b53adf01382b711f281720a10a0fe72b7\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:e77e56ffe2701e83a96e35770c6adb655ffc074d530018d1b584a8e635b4f36f\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d5351afb216b743df4b6b147691523697ff3a2fc5f3d54f771e91219f5c23aaa\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c3232fabacef86fe8323cecbe99abbc5c02f7698e3f5f2e248e3480b66a3596b\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e3b524df6ea9998bbc99ea6ee4d0276a101bcc1aa8d14887bb823914d9f60d07\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:37f67c1d81272131895bb20d388dd8d341390acd0e192a55ab02d4d6468b434c\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:d0feb7a03d971c1c0353de1a8fe30bb6579c2dc5ccf29b5f7c7ab01172010492\"},\n    {file = \"msgspec-0.18.6-cp311-cp311-win_amd64.whl\", hash = \"sha256:41cf758d3f40428c235c0f27bc6f322d43063bc32da7b9643e3f805c21ed57b4\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:d86f5071fe33e19500920333c11e2267a31942d18fed4d9de5bc2fbab267d28c\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ce13981bfa06f5eb126a3a5a38b1976bddb49a36e4f46d8e6edecf33ccf11df1\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e97dec6932ad5e3ee1e3c14718638ba333befc45e0661caa57033cd4cc489466\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ad237100393f637b297926cae1868b0d500f764ccd2f0623a380e2bcfb2809ca\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:db1d8626748fa5d29bbd15da58b2d73af25b10aa98abf85aab8028119188ed57\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:d70cb3d00d9f4de14d0b31d38dfe60c88ae16f3182988246a9861259c6722af6\"},\n    {file = \"msgspec-0.18.6-cp312-cp312-win_amd64.whl\", hash = \"sha256:1003c20bfe9c6114cc16ea5db9c5466e49fae3d7f5e2e59cb70693190ad34da0\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:f7d9faed6dfff654a9ca7d9b0068456517f63dbc3aa704a527f493b9200b210a\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:9da21f804c1a1471f26d32b5d9bc0480450ea77fbb8d9db431463ab64aaac2cf\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:46eb2f6b22b0e61c137e65795b97dc515860bf6ec761d8fb65fdb62aa094ba61\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c8355b55c80ac3e04885d72db515817d9fbb0def3bab936bba104e99ad22cf46\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:9080eb12b8f59e177bd1eb5c21e24dd2ba2fa88a1dbc9a98e05ad7779b54c681\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:cc001cf39becf8d2dcd3f413a4797c55009b3a3cdbf78a8bf5a7ca8fdb76032c\"},\n    {file = \"msgspec-0.18.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:fac5834e14ac4da1fca373753e0c4ec9c8069d1fe5f534fa5208453b6065d5be\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:974d3520fcc6b824a6dedbdf2b411df31a73e6e7414301abac62e6b8d03791b4\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:fd62e5818731a66aaa8e9b0a1e5543dc979a46278da01e85c3c9a1a4f047ef7e\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7481355a1adcf1f08dedd9311193c674ffb8bf7b79314b4314752b89a2cf7f1c\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6aa85198f8f154cf35d6f979998f6dadd3dc46a8a8c714632f53f5d65b315c07\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:0e24539b25c85c8f0597274f11061c102ad6b0c56af053373ba4629772b407be\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:c61ee4d3be03ea9cd089f7c8e36158786cd06e51fbb62529276452bbf2d52ece\"},\n    {file = \"msgspec-0.18.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:b5c390b0b0b7da879520d4ae26044d74aeee5144f83087eb7842ba59c02bc090\"},\n    {file = \"msgspec-0.18.6.tar.gz\", hash = \"sha256:a59fc3b4fcdb972d09138cb516dbde600c99d07c38fd9372a6ef500d2d031b4e\"},\n]\n\n[package.extras]\ndev = [\"attrs\", \"coverage\", \"furo\", \"gcovr\", \"ipython\", \"msgpack\", \"mypy\", \"pre-commit\", \"pyright\", \"pytest\", \"pyyaml\", \"sphinx\", \"sphinx-copybutton\", \"sphinx-design\", \"tomli\", \"tomli-w\"]\ndoc = [\"furo\", \"ipython\", \"sphinx\", \"sphinx-copybutton\", \"sphinx-design\"]\ntest = [\"attrs\", \"msgpack\", \"mypy\", \"pyright\", \"pytest\", \"pyyaml\", \"tomli\", \"tomli-w\"]\ntoml = [\"tomli\", \"tomli-w\"]\nyaml = [\"pyyaml\"]\n\n[[package]]\nname = \"multidict\"\nversion = \"6.1.0\"\ndescription = \"multidict implementation\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"multidict-6.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:3380252550e372e8511d49481bd836264c009adb826b23fefcc5dd3c69692f60\"},\n    {file = \"multidict-6.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:99f826cbf970077383d7de805c0681799491cb939c25450b9b5b3ced03ca99f1\"},\n    {file = \"multidict-6.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:a114d03b938376557927ab23f1e950827c3b893ccb94b62fd95d430fd0e5cf53\"},\n    {file = \"multidict-6.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b1c416351ee6271b2f49b56ad7f308072f6f44b37118d69c2cad94f3fa8a40d5\"},\n    {file = \"multidict-6.1.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6b5d83030255983181005e6cfbac1617ce9746b219bc2aad52201ad121226581\"},\n    {file = \"multidict-6.1.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3e97b5e938051226dc025ec80980c285b053ffb1e25a3db2a3aa3bc046bf7f56\"},\n    {file = \"multidict-6.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d618649d4e70ac6efcbba75be98b26ef5078faad23592f9b51ca492953012429\"},\n    {file = \"multidict-6.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:10524ebd769727ac77ef2278390fb0068d83f3acb7773792a5080f2b0abf7748\"},\n    {file = \"multidict-6.1.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:ff3827aef427c89a25cc96ded1759271a93603aba9fb977a6d264648ebf989db\"},\n    {file = \"multidict-6.1.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:06809f4f0f7ab7ea2cabf9caca7d79c22c0758b58a71f9d32943ae13c7ace056\"},\n    {file = \"multidict-6.1.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f179dee3b863ab1c59580ff60f9d99f632f34ccb38bf67a33ec6b3ecadd0fd76\"},\n    {file = \"multidict-6.1.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:aaed8b0562be4a0876ee3b6946f6869b7bcdb571a5d1496683505944e268b160\"},\n    {file = \"multidict-6.1.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:3c8b88a2ccf5493b6c8da9076fb151ba106960a2df90c2633f342f120751a9e7\"},\n    {file = \"multidict-6.1.0-cp310-cp310-win32.whl\", hash = \"sha256:4a9cb68166a34117d6646c0023c7b759bf197bee5ad4272f420a0141d7eb03a0\"},\n    {file = \"multidict-6.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:20b9b5fbe0b88d0bdef2012ef7dee867f874b72528cf1d08f1d59b0e3850129d\"},\n    {file = \"multidict-6.1.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:3efe2c2cb5763f2f1b275ad2bf7a287d3f7ebbef35648a9726e3b69284a4f3d6\"},\n    {file = \"multidict-6.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c7053d3b0353a8b9de430a4f4b4268ac9a4fb3481af37dfe49825bf45ca24156\"},\n    {file = \"multidict-6.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:27e5fc84ccef8dfaabb09d82b7d179c7cf1a3fbc8a966f8274fcb4ab2eb4cadb\"},\n    {file = \"multidict-6.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0e2b90b43e696f25c62656389d32236e049568b39320e2735d51f08fd362761b\"},\n    {file = \"multidict-6.1.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d83a047959d38a7ff552ff94be767b7fd79b831ad1cd9920662db05fec24fe72\"},\n    {file = \"multidict-6.1.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d1a9dd711d0877a1ece3d2e4fea11a8e75741ca21954c919406b44e7cf971304\"},\n    {file = \"multidict-6.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ec2abea24d98246b94913b76a125e855eb5c434f7c46546046372fe60f666351\"},\n    {file = \"multidict-6.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4867cafcbc6585e4b678876c489b9273b13e9fff9f6d6d66add5e15d11d926cb\"},\n    {file = \"multidict-6.1.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:5b48204e8d955c47c55b72779802b219a39acc3ee3d0116d5080c388970b76e3\"},\n    {file = \"multidict-6.1.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:d8fff389528cad1618fb4b26b95550327495462cd745d879a8c7c2115248e399\"},\n    {file = \"multidict-6.1.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a7a9541cd308eed5e30318430a9c74d2132e9a8cb46b901326272d780bf2d423\"},\n    {file = \"multidict-6.1.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:da1758c76f50c39a2efd5e9859ce7d776317eb1dd34317c8152ac9251fc574a3\"},\n    {file = \"multidict-6.1.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:c943a53e9186688b45b323602298ab727d8865d8c9ee0b17f8d62d14b56f0753\"},\n    {file = \"multidict-6.1.0-cp311-cp311-win32.whl\", hash = \"sha256:90f8717cb649eea3504091e640a1b8568faad18bd4b9fcd692853a04475a4b80\"},\n    {file = \"multidict-6.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:82176036e65644a6cc5bd619f65f6f19781e8ec2e5330f51aa9ada7504cc1926\"},\n    {file = \"multidict-6.1.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:b04772ed465fa3cc947db808fa306d79b43e896beb677a56fb2347ca1a49c1fa\"},\n    {file = \"multidict-6.1.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:6180c0ae073bddeb5a97a38c03f30c233e0a4d39cd86166251617d1bbd0af436\"},\n    {file = \"multidict-6.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:071120490b47aa997cca00666923a83f02c7fbb44f71cf7f136df753f7fa8761\"},\n    {file = \"multidict-6.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:50b3a2710631848991d0bf7de077502e8994c804bb805aeb2925a981de58ec2e\"},\n    {file = \"multidict-6.1.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b58c621844d55e71c1b7f7c498ce5aa6985d743a1a59034c57a905b3f153c1ef\"},\n    {file = \"multidict-6.1.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:55b6d90641869892caa9ca42ff913f7ff1c5ece06474fbd32fb2cf6834726c95\"},\n    {file = \"multidict-6.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4b820514bfc0b98a30e3d85462084779900347e4d49267f747ff54060cc33925\"},\n    {file = \"multidict-6.1.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:10a9b09aba0c5b48c53761b7c720aaaf7cf236d5fe394cd399c7ba662d5f9966\"},\n    {file = \"multidict-6.1.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:1e16bf3e5fc9f44632affb159d30a437bfe286ce9e02754759be5536b169b305\"},\n    {file = \"multidict-6.1.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:76f364861c3bfc98cbbcbd402d83454ed9e01a5224bb3a28bf70002a230f73e2\"},\n    {file = \"multidict-6.1.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:820c661588bd01a0aa62a1283f20d2be4281b086f80dad9e955e690c75fb54a2\"},\n    {file = \"multidict-6.1.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:0e5f362e895bc5b9e67fe6e4ded2492d8124bdf817827f33c5b46c2fe3ffaca6\"},\n    {file = \"multidict-6.1.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:3ec660d19bbc671e3a6443325f07263be452c453ac9e512f5eb935e7d4ac28b3\"},\n    {file = \"multidict-6.1.0-cp312-cp312-win32.whl\", hash = \"sha256:58130ecf8f7b8112cdb841486404f1282b9c86ccb30d3519faf301b2e5659133\"},\n    {file = \"multidict-6.1.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:188215fc0aafb8e03341995e7c4797860181562380f81ed0a87ff455b70bf1f1\"},\n    {file = \"multidict-6.1.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:d569388c381b24671589335a3be6e1d45546c2988c2ebe30fdcada8457a31008\"},\n    {file = \"multidict-6.1.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:052e10d2d37810b99cc170b785945421141bf7bb7d2f8799d431e7db229c385f\"},\n    {file = \"multidict-6.1.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f90c822a402cb865e396a504f9fc8173ef34212a342d92e362ca498cad308e28\"},\n    {file = \"multidict-6.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b225d95519a5bf73860323e633a664b0d85ad3d5bede6d30d95b35d4dfe8805b\"},\n    {file = \"multidict-6.1.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:23bfd518810af7de1116313ebd9092cb9aa629beb12f6ed631ad53356ed6b86c\"},\n    {file = \"multidict-6.1.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5c09fcfdccdd0b57867577b719c69e347a436b86cd83747f179dbf0cc0d4c1f3\"},\n    {file = \"multidict-6.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bf6bea52ec97e95560af5ae576bdac3aa3aae0b6758c6efa115236d9e07dae44\"},\n    {file = \"multidict-6.1.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:57feec87371dbb3520da6192213c7d6fc892d5589a93db548331954de8248fd2\"},\n    {file = \"multidict-6.1.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0c3f390dc53279cbc8ba976e5f8035eab997829066756d811616b652b00a23a3\"},\n    {file = \"multidict-6.1.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:59bfeae4b25ec05b34f1956eaa1cb38032282cd4dfabc5056d0a1ec4d696d3aa\"},\n    {file = \"multidict-6.1.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b2f59caeaf7632cc633b5cf6fc449372b83bbdf0da4ae04d5be36118e46cc0aa\"},\n    {file = \"multidict-6.1.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:37bb93b2178e02b7b618893990941900fd25b6b9ac0fa49931a40aecdf083fe4\"},\n    {file = \"multidict-6.1.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4e9f48f58c2c523d5a06faea47866cd35b32655c46b443f163d08c6d0ddb17d6\"},\n    {file = \"multidict-6.1.0-cp313-cp313-win32.whl\", hash = \"sha256:3a37ffb35399029b45c6cc33640a92bef403c9fd388acce75cdc88f58bd19a81\"},\n    {file = \"multidict-6.1.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:e9aa71e15d9d9beaad2c6b9319edcdc0a49a43ef5c0a4c8265ca9ee7d6c67774\"},\n    {file = \"multidict-6.1.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:db7457bac39421addd0c8449933ac32d8042aae84a14911a757ae6ca3eef1392\"},\n    {file = \"multidict-6.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:d094ddec350a2fb899fec68d8353c78233debde9b7d8b4beeafa70825f1c281a\"},\n    {file = \"multidict-6.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:5845c1fd4866bb5dd3125d89b90e57ed3138241540897de748cdf19de8a2fca2\"},\n    {file = \"multidict-6.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9079dfc6a70abe341f521f78405b8949f96db48da98aeb43f9907f342f627cdc\"},\n    {file = \"multidict-6.1.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3914f5aaa0f36d5d60e8ece6a308ee1c9784cd75ec8151062614657a114c4478\"},\n    {file = \"multidict-6.1.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c08be4f460903e5a9d0f76818db3250f12e9c344e79314d1d570fc69d7f4eae4\"},\n    {file = \"multidict-6.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d093be959277cb7dee84b801eb1af388b6ad3ca6a6b6bf1ed7585895789d027d\"},\n    {file = \"multidict-6.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3702ea6872c5a2a4eeefa6ffd36b042e9773f05b1f37ae3ef7264b1163c2dcf6\"},\n    {file = \"multidict-6.1.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:2090f6a85cafc5b2db085124d752757c9d251548cedabe9bd31afe6363e0aff2\"},\n    {file = \"multidict-6.1.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:f67f217af4b1ff66c68a87318012de788dd95fcfeb24cc889011f4e1c7454dfd\"},\n    {file = \"multidict-6.1.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:189f652a87e876098bbc67b4da1049afb5f5dfbaa310dd67c594b01c10388db6\"},\n    {file = \"multidict-6.1.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:6bb5992037f7a9eff7991ebe4273ea7f51f1c1c511e6a2ce511d0e7bdb754492\"},\n    {file = \"multidict-6.1.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:ac10f4c2b9e770c4e393876e35a7046879d195cd123b4f116d299d442b335bcd\"},\n    {file = \"multidict-6.1.0-cp38-cp38-win32.whl\", hash = \"sha256:e27bbb6d14416713a8bd7aaa1313c0fc8d44ee48d74497a0ff4c3a1b6ccb5167\"},\n    {file = \"multidict-6.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:22f3105d4fb15c8f57ff3959a58fcab6ce36814486500cd7485651230ad4d4ef\"},\n    {file = \"multidict-6.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:4e18b656c5e844539d506a0a06432274d7bd52a7487e6828c63a63d69185626c\"},\n    {file = \"multidict-6.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:a185f876e69897a6f3325c3f19f26a297fa058c5e456bfcff8015e9a27e83ae1\"},\n    {file = \"multidict-6.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ab7c4ceb38d91570a650dba194e1ca87c2b543488fe9309b4212694174fd539c\"},\n    {file = \"multidict-6.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e617fb6b0b6953fffd762669610c1c4ffd05632c138d61ac7e14ad187870669c\"},\n    {file = \"multidict-6.1.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:16e5f4bf4e603eb1fdd5d8180f1a25f30056f22e55ce51fb3d6ad4ab29f7d96f\"},\n    {file = \"multidict-6.1.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f4c035da3f544b1882bac24115f3e2e8760f10a0107614fc9839fd232200b875\"},\n    {file = \"multidict-6.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:957cf8e4b6e123a9eea554fa7ebc85674674b713551de587eb318a2df3e00255\"},\n    {file = \"multidict-6.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:483a6aea59cb89904e1ceabd2b47368b5600fb7de78a6e4a2c2987b2d256cf30\"},\n    {file = \"multidict-6.1.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:87701f25a2352e5bf7454caa64757642734da9f6b11384c1f9d1a8e699758057\"},\n    {file = \"multidict-6.1.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:682b987361e5fd7a139ed565e30d81fd81e9629acc7d925a205366877d8c8657\"},\n    {file = \"multidict-6.1.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ce2186a7df133a9c895dea3331ddc5ddad42cdd0d1ea2f0a51e5d161e4762f28\"},\n    {file = \"multidict-6.1.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:9f636b730f7e8cb19feb87094949ba54ee5357440b9658b2a32a5ce4bce53972\"},\n    {file = \"multidict-6.1.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:73eae06aa53af2ea5270cc066dcaf02cc60d2994bbb2c4ef5764949257d10f43\"},\n    {file = \"multidict-6.1.0-cp39-cp39-win32.whl\", hash = \"sha256:1ca0083e80e791cffc6efce7660ad24af66c8d4079d2a750b29001b53ff59ada\"},\n    {file = \"multidict-6.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:aa466da5b15ccea564bdab9c89175c762bc12825f4659c11227f515cee76fa4a\"},\n    {file = \"multidict-6.1.0-py3-none-any.whl\", hash = \"sha256:48e171e52d1c4d33888e529b999e5900356b9ae588c2f09a52dcefb158b27506\"},\n    {file = \"multidict-6.1.0.tar.gz\", hash = \"sha256:22ae2ebf9b0c69d206c003e2f6a914ea33f0a932d4aa16f236afc049d9958f4a\"},\n]\n\n[package.dependencies]\ntyping-extensions = {version = \">=4.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[[package]]\nname = \"mypy\"\nversion = \"1.13.0\"\ndescription = \"Optional static typing for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"mypy-1.13.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:6607e0f1dd1fb7f0aca14d936d13fd19eba5e17e1cd2a14f808fa5f8f6d8f60a\"},\n    {file = \"mypy-1.13.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8a21be69bd26fa81b1f80a61ee7ab05b076c674d9b18fb56239d72e21d9f4c80\"},\n    {file = \"mypy-1.13.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:7b2353a44d2179846a096e25691d54d59904559f4232519d420d64da6828a3a7\"},\n    {file = \"mypy-1.13.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:0730d1c6a2739d4511dc4253f8274cdd140c55c32dfb0a4cf8b7a43f40abfa6f\"},\n    {file = \"mypy-1.13.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:c5fc54dbb712ff5e5a0fca797e6e0aa25726c7e72c6a5850cfd2adbc1eb0a372\"},\n    {file = \"mypy-1.13.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:581665e6f3a8a9078f28d5502f4c334c0c8d802ef55ea0e7276a6e409bc0d82d\"},\n    {file = \"mypy-1.13.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:3ddb5b9bf82e05cc9a627e84707b528e5c7caaa1c55c69e175abb15a761cec2d\"},\n    {file = \"mypy-1.13.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:20c7ee0bc0d5a9595c46f38beb04201f2620065a93755704e141fcac9f59db2b\"},\n    {file = \"mypy-1.13.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:3790ded76f0b34bc9c8ba4def8f919dd6a46db0f5a6610fb994fe8efdd447f73\"},\n    {file = \"mypy-1.13.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:51f869f4b6b538229c1d1bcc1dd7d119817206e2bc54e8e374b3dfa202defcca\"},\n    {file = \"mypy-1.13.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:5c7051a3461ae84dfb5dd15eff5094640c61c5f22257c8b766794e6dd85e72d5\"},\n    {file = \"mypy-1.13.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:39bb21c69a5d6342f4ce526e4584bc5c197fd20a60d14a8624d8743fffb9472e\"},\n    {file = \"mypy-1.13.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:164f28cb9d6367439031f4c81e84d3ccaa1e19232d9d05d37cb0bd880d3f93c2\"},\n    {file = \"mypy-1.13.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:a4c1bfcdbce96ff5d96fc9b08e3831acb30dc44ab02671eca5953eadad07d6d0\"},\n    {file = \"mypy-1.13.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:a0affb3a79a256b4183ba09811e3577c5163ed06685e4d4b46429a271ba174d2\"},\n    {file = \"mypy-1.13.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:a7b44178c9760ce1a43f544e595d35ed61ac2c3de306599fa59b38a6048e1aa7\"},\n    {file = \"mypy-1.13.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:5d5092efb8516d08440e36626f0153b5006d4088c1d663d88bf79625af3d1d62\"},\n    {file = \"mypy-1.13.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:de2904956dac40ced10931ac967ae63c5089bd498542194b436eb097a9f77bc8\"},\n    {file = \"mypy-1.13.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:7bfd8836970d33c2105562650656b6846149374dc8ed77d98424b40b09340ba7\"},\n    {file = \"mypy-1.13.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:9f73dba9ec77acb86457a8fc04b5239822df0c14a082564737833d2963677dbc\"},\n    {file = \"mypy-1.13.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:100fac22ce82925f676a734af0db922ecfea991e1d7ec0ceb1e115ebe501301a\"},\n    {file = \"mypy-1.13.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:7bcb0bb7f42a978bb323a7c88f1081d1b5dee77ca86f4100735a6f541299d8fb\"},\n    {file = \"mypy-1.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:bde31fc887c213e223bbfc34328070996061b0833b0a4cfec53745ed61f3519b\"},\n    {file = \"mypy-1.13.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:07de989f89786f62b937851295ed62e51774722e5444a27cecca993fc3f9cd74\"},\n    {file = \"mypy-1.13.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:4bde84334fbe19bad704b3f5b78c4abd35ff1026f8ba72b29de70dda0916beb6\"},\n    {file = \"mypy-1.13.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:0246bcb1b5de7f08f2826451abd947bf656945209b140d16ed317f65a17dc7dc\"},\n    {file = \"mypy-1.13.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:7f5b7deae912cf8b77e990b9280f170381fdfbddf61b4ef80927edd813163732\"},\n    {file = \"mypy-1.13.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:7029881ec6ffb8bc233a4fa364736789582c738217b133f1b55967115288a2bc\"},\n    {file = \"mypy-1.13.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:3e38b980e5681f28f033f3be86b099a247b13c491f14bb8b1e1e134d23bb599d\"},\n    {file = \"mypy-1.13.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:a6789be98a2017c912ae6ccb77ea553bbaf13d27605d2ca20a76dfbced631b24\"},\n    {file = \"mypy-1.13.0-py3-none-any.whl\", hash = \"sha256:9c250883f9fd81d212e0952c92dbfcc96fc237f4b7c92f56ac81fd48460b3e5a\"},\n    {file = \"mypy-1.13.0.tar.gz\", hash = \"sha256:0291a61b6fbf3e6673e3405cfcc0e7650bebc7939659fdca2702958038bd835e\"},\n]\n\n[package.dependencies]\nmypy-extensions = \">=1.0.0\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntyping-extensions = \">=4.6.0\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\nfaster-cache = [\"orjson\"]\ninstall-types = [\"pip\"]\nmypyc = [\"setuptools (>=50)\"]\nreports = [\"lxml\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"1.0.0\"\ndescription = \"Type system extensions for programs checked with the mypy type checker.\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"mypy_extensions-1.0.0-py3-none-any.whl\", hash = \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\"},\n    {file = \"mypy_extensions-1.0.0.tar.gz\", hash = \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"},\n]\n\n[[package]]\nname = \"nox\"\nversion = \"2024.10.9\"\ndescription = \"Flexible test automation.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"nox-2024.10.9-py3-none-any.whl\", hash = \"sha256:1d36f309a0a2a853e9bccb76bbef6bb118ba92fa92674d15604ca99adeb29eab\"},\n    {file = \"nox-2024.10.9.tar.gz\", hash = \"sha256:7aa9dc8d1c27e9f45ab046ffd1c3b2c4f7c91755304769df231308849ebded95\"},\n]\n\n[package.dependencies]\nargcomplete = \">=1.9.4,<4\"\ncolorlog = \">=2.6.1,<7\"\npackaging = \">=20.9\"\ntomli = {version = \">=1\", markers = \"python_version < \\\"3.11\\\"\"}\nvirtualenv = \">=20.14.1\"\n\n[package.extras]\ntox-to-nox = [\"jinja2\", \"tox\"]\nuv = [\"uv (>=0.1.6)\"]\n\n[[package]]\nname = \"nox-poetry\"\nversion = \"1.0.3\"\ndescription = \"nox-poetry\"\noptional = false\npython-versions = \">=3.7,<4.0\"\nfiles = [\n    {file = \"nox_poetry-1.0.3-py3-none-any.whl\", hash = \"sha256:a2fffeb70ae81840479e68287afe1c772bf376f70f1e92f99832a20b3c64d064\"},\n    {file = \"nox_poetry-1.0.3.tar.gz\", hash = \"sha256:dc7ecbbd812a333a0c0b558f57e5b37f7c12926cddbcecaf2264957fd373824e\"},\n]\n\n[package.dependencies]\nnox = \">=2020.8.22\"\npackaging = \">=20.9\"\ntomlkit = \">=0.7\"\n\n[[package]]\nname = \"opentelemetry-api\"\nversion = \"1.29.0\"\ndescription = \"OpenTelemetry Python API\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"opentelemetry_api-1.29.0-py3-none-any.whl\", hash = \"sha256:5fcd94c4141cc49c736271f3e1efb777bebe9cc535759c54c936cca4f1b312b8\"},\n    {file = \"opentelemetry_api-1.29.0.tar.gz\", hash = \"sha256:d04a6cf78aad09614f52964ecb38021e248f5714dc32c2e0d8fd99517b4d69cf\"},\n]\n\n[package.dependencies]\ndeprecated = \">=1.2.6\"\nimportlib-metadata = \">=6.0,<=8.5.0\"\n\n[[package]]\nname = \"opentelemetry-sdk\"\nversion = \"1.29.0\"\ndescription = \"OpenTelemetry Python SDK\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"opentelemetry_sdk-1.29.0-py3-none-any.whl\", hash = \"sha256:173be3b5d3f8f7d671f20ea37056710217959e774e2749d984355d1f9391a30a\"},\n    {file = \"opentelemetry_sdk-1.29.0.tar.gz\", hash = \"sha256:b0787ce6aade6ab84315302e72bd7a7f2f014b0fb1b7c3295b88afe014ed0643\"},\n]\n\n[package.dependencies]\nopentelemetry-api = \"1.29.0\"\nopentelemetry-semantic-conventions = \"0.50b0\"\ntyping-extensions = \">=3.7.4\"\n\n[[package]]\nname = \"opentelemetry-semantic-conventions\"\nversion = \"0.50b0\"\ndescription = \"OpenTelemetry Semantic Conventions\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"opentelemetry_semantic_conventions-0.50b0-py3-none-any.whl\", hash = \"sha256:e87efba8fdb67fb38113efea6a349531e75ed7ffc01562f65b802fcecb5e115e\"},\n    {file = \"opentelemetry_semantic_conventions-0.50b0.tar.gz\", hash = \"sha256:02dc6dbcb62f082de9b877ff19a3f1ffaa3c306300fa53bfac761c4567c83d38\"},\n]\n\n[package.dependencies]\ndeprecated = \">=1.2.6\"\nopentelemetry-api = \"1.29.0\"\n\n[[package]]\nname = \"packaging\"\nversion = \"24.2\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"packaging-24.2-py3-none-any.whl\", hash = \"sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759\"},\n    {file = \"packaging-24.2.tar.gz\", hash = \"sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\"},\n]\n\n[[package]]\nname = \"pathspec\"\nversion = \"0.12.1\"\ndescription = \"Utility library for gitignore style pattern matching of file paths.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pathspec-0.12.1-py3-none-any.whl\", hash = \"sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08\"},\n    {file = \"pathspec-0.12.1.tar.gz\", hash = \"sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712\"},\n]\n\n[[package]]\nname = \"pexpect\"\nversion = \"4.9.0\"\ndescription = \"Pexpect allows easy control of interactive console applications.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pexpect-4.9.0-py2.py3-none-any.whl\", hash = \"sha256:7236d1e080e4936be2dc3e326cec0af72acf9212a7e1d060210e70a47e253523\"},\n    {file = \"pexpect-4.9.0.tar.gz\", hash = \"sha256:ee7d41123f3c9911050ea2c2dac107568dc43b2d3b0c7557a33212c398ead30f\"},\n]\n\n[package.dependencies]\nptyprocess = \">=0.5\"\n\n[[package]]\nname = \"pip\"\nversion = \"24.3.1\"\ndescription = \"The PyPA recommended tool for installing Python packages.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pip-24.3.1-py3-none-any.whl\", hash = \"sha256:3790624780082365f47549d032f3770eeb2b1e8bd1f7b2e02dace1afa361b4ed\"},\n    {file = \"pip-24.3.1.tar.gz\", hash = \"sha256:ebcb60557f2aefabc2e0f918751cd24ea0d56d8ec5445fe1807f1d2109660b99\"},\n]\n\n[[package]]\nname = \"pkginfo\"\nversion = \"1.12.0\"\ndescription = \"Query metadata from sdists / bdists / installed packages.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pkginfo-1.12.0-py3-none-any.whl\", hash = \"sha256:dcd589c9be4da8973eceffa247733c144812759aa67eaf4bbf97016a02f39088\"},\n    {file = \"pkginfo-1.12.0.tar.gz\", hash = \"sha256:8ad91a0445a036782b9366ef8b8c2c50291f83a553478ba8580c73d3215700cf\"},\n]\n\n[package.extras]\ntesting = [\"pytest\", \"pytest-cov\", \"wheel\"]\n\n[[package]]\nname = \"platformdirs\"\nversion = \"4.3.6\"\ndescription = \"A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"platformdirs-4.3.6-py3-none-any.whl\", hash = \"sha256:73e575e1408ab8103900836b97580d5307456908a03e92031bab39e4554cc3fb\"},\n    {file = \"platformdirs-4.3.6.tar.gz\", hash = \"sha256:357fb2acbc885b0419afd3ce3ed34564c13c9b95c89360cd9563f73aa5e2b907\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\", \"proselint (>=0.14)\", \"sphinx (>=8.0.2)\", \"sphinx-autodoc-typehints (>=2.4)\"]\ntest = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.3)\", \"pytest (>=8.3.2)\", \"pytest-cov (>=5)\", \"pytest-mock (>=3.14)\"]\ntype = [\"mypy (>=1.11.2)\"]\n\n[[package]]\nname = \"pluggy\"\nversion = \"1.5.0\"\ndescription = \"plugin and hook calling mechanisms for python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pluggy-1.5.0-py3-none-any.whl\", hash = \"sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\"},\n    {file = \"pluggy-1.5.0.tar.gz\", hash = \"sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1\"},\n]\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\ntesting = [\"pytest\", \"pytest-benchmark\"]\n\n[[package]]\nname = \"poetry\"\nversion = \"1.8.5\"\ndescription = \"Python dependency management and packaging made easy.\"\noptional = false\npython-versions = \"<4.0,>=3.8\"\nfiles = [\n    {file = \"poetry-1.8.5-py3-none-any.whl\", hash = \"sha256:5505fba69bf2a792b5d7402d21839c853644337392b745109b86a23010cce5f3\"},\n    {file = \"poetry-1.8.5.tar.gz\", hash = \"sha256:eb2c88d224f58f36df8f7b36d6c380c07d1001bca28bde620f68fc086e881b70\"},\n]\n\n[package.dependencies]\nbuild = \">=1.0.3,<2.0.0\"\ncachecontrol = {version = \">=0.14.0,<0.15.0\", extras = [\"filecache\"]}\ncleo = \">=2.1.0,<3.0.0\"\ncrashtest = \">=0.4.1,<0.5.0\"\ndulwich = \">=0.21.2,<0.22.0\"\nfastjsonschema = \">=2.18.0,<3.0.0\"\nimportlib-metadata = {version = \">=4.4\", markers = \"python_version < \\\"3.10\\\"\"}\ninstaller = \">=0.7.0,<0.8.0\"\nkeyring = \">=24.0.0,<25.0.0\"\npackaging = \">=23.1\"\npexpect = \">=4.7.0,<5.0.0\"\npkginfo = \">=1.12,<2.0\"\nplatformdirs = \">=3.0.0,<5\"\npoetry-core = \"1.9.1\"\npoetry-plugin-export = \">=1.6.0,<2.0.0\"\npyproject-hooks = \">=1.0.0,<2.0.0\"\nrequests = \">=2.26,<3.0\"\nrequests-toolbelt = \">=1.0.0,<2.0.0\"\nshellingham = \">=1.5,<2.0\"\ntomli = {version = \">=2.0.1,<3.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntomlkit = \">=0.11.4,<1.0.0\"\ntrove-classifiers = \">=2022.5.19\"\nvirtualenv = \">=20.26.6,<21.0.0\"\nxattr = {version = \">=1.0.0,<2.0.0\", markers = \"sys_platform == \\\"darwin\\\"\"}\n\n[[package]]\nname = \"poetry-core\"\nversion = \"1.9.1\"\ndescription = \"Poetry PEP 517 Build Backend\"\noptional = false\npython-versions = \"<4.0,>=3.8\"\nfiles = [\n    {file = \"poetry_core-1.9.1-py3-none-any.whl\", hash = \"sha256:6f45dd3598e0de8d9b0367360253d4c5d4d0110c8f5c71120a14f0e0f116c1a0\"},\n    {file = \"poetry_core-1.9.1.tar.gz\", hash = \"sha256:7a2d49214bf58b4f17f99d6891d947a9836c9899a67a5069f52d7b67217f61b8\"},\n]\n\n[[package]]\nname = \"poetry-plugin-export\"\nversion = \"1.8.0\"\ndescription = \"Poetry plugin to export the dependencies to various formats\"\noptional = false\npython-versions = \"<4.0,>=3.8\"\nfiles = [\n    {file = \"poetry_plugin_export-1.8.0-py3-none-any.whl\", hash = \"sha256:adbe232cfa0cc04991ea3680c865cf748bff27593b9abcb1f35fb50ed7ba2c22\"},\n    {file = \"poetry_plugin_export-1.8.0.tar.gz\", hash = \"sha256:1fa6168a85d59395d835ca564bc19862a7c76061e60c3e7dfaec70d50937fc61\"},\n]\n\n[package.dependencies]\npoetry = \">=1.8.0,<3.0.0\"\npoetry-core = \">=1.7.0,<3.0.0\"\n\n[[package]]\nname = \"polyfactory\"\nversion = \"2.18.1\"\ndescription = \"Mock data generation factories\"\noptional = false\npython-versions = \"<4.0,>=3.8\"\nfiles = [\n    {file = \"polyfactory-2.18.1-py3-none-any.whl\", hash = \"sha256:1a2b0715e08bfe9f14abc838fc013ab8772cb90e66f2e601e15e1127f0bc1b18\"},\n    {file = \"polyfactory-2.18.1.tar.gz\", hash = \"sha256:17c9db18afe4fb8d7dd8e5ba296e69da0fcf7d0f3b63d1840eb10d135aed5aad\"},\n]\n\n[package.dependencies]\nfaker = \"*\"\ntyping-extensions = \">=4.6.0\"\n\n[package.extras]\nattrs = [\"attrs (>=22.2.0)\"]\nbeanie = [\"beanie\", \"pydantic[email]\"]\nfull = [\"attrs\", \"beanie\", \"msgspec\", \"odmantic\", \"pydantic\", \"sqlalchemy\"]\nmsgspec = [\"msgspec\"]\nodmantic = [\"odmantic (<1.0.0)\", \"pydantic[email]\"]\npydantic = [\"pydantic[email]\"]\nsqlalchemy = [\"sqlalchemy (>=1.4.29)\"]\n\n[[package]]\nname = \"priority\"\nversion = \"2.0.0\"\ndescription = \"A pure-Python implementation of the HTTP/2 priority tree\"\noptional = false\npython-versions = \">=3.6.1\"\nfiles = [\n    {file = \"priority-2.0.0-py3-none-any.whl\", hash = \"sha256:6f8eefce5f3ad59baf2c080a664037bb4725cd0a790d53d59ab4059288faf6aa\"},\n    {file = \"priority-2.0.0.tar.gz\", hash = \"sha256:c965d54f1b8d0d0b19479db3924c7c36cf672dbf2aec92d43fbdaf4492ba18c0\"},\n]\n\n[[package]]\nname = \"propcache\"\nversion = \"0.2.0\"\ndescription = \"Accelerated property cache\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"propcache-0.2.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:c5869b8fd70b81835a6f187c5fdbe67917a04d7e52b6e7cc4e5fe39d55c39d58\"},\n    {file = \"propcache-0.2.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:952e0d9d07609d9c5be361f33b0d6d650cd2bae393aabb11d9b719364521984b\"},\n    {file = \"propcache-0.2.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:33ac8f098df0585c0b53009f039dfd913b38c1d2edafed0cedcc0c32a05aa110\"},\n    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:97e48e8875e6c13909c800fa344cd54cc4b2b0db1d5f911f840458a500fde2c2\"},\n    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:388f3217649d6d59292b722d940d4d2e1e6a7003259eb835724092a1cca0203a\"},\n    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f571aea50ba5623c308aa146eb650eebf7dbe0fd8c5d946e28343cb3b5aad577\"},\n    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3dfafb44f7bb35c0c06eda6b2ab4bfd58f02729e7c4045e179f9a861b07c9850\"},\n    {file = \"propcache-0.2.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a3ebe9a75be7ab0b7da2464a77bb27febcb4fab46a34f9288f39d74833db7f61\"},\n    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:d2f0d0f976985f85dfb5f3d685697ef769faa6b71993b46b295cdbbd6be8cc37\"},\n    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:a3dc1a4b165283bd865e8f8cb5f0c64c05001e0718ed06250d8cac9bec115b48\"},\n    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:9e0f07b42d2a50c7dd2d8675d50f7343d998c64008f1da5fef888396b7f84630\"},\n    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:e63e3e1e0271f374ed489ff5ee73d4b6e7c60710e1f76af5f0e1a6117cd26394\"},\n    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:56bb5c98f058a41bb58eead194b4db8c05b088c93d94d5161728515bd52b052b\"},\n    {file = \"propcache-0.2.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:7665f04d0c7f26ff8bb534e1c65068409bf4687aa2534faf7104d7182debb336\"},\n    {file = \"propcache-0.2.0-cp310-cp310-win32.whl\", hash = \"sha256:7cf18abf9764746b9c8704774d8b06714bcb0a63641518a3a89c7f85cc02c2ad\"},\n    {file = \"propcache-0.2.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:cfac69017ef97db2438efb854edf24f5a29fd09a536ff3a992b75990720cdc99\"},\n    {file = \"propcache-0.2.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:63f13bf09cc3336eb04a837490b8f332e0db41da66995c9fd1ba04552e516354\"},\n    {file = \"propcache-0.2.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:608cce1da6f2672a56b24a015b42db4ac612ee709f3d29f27a00c943d9e851de\"},\n    {file = \"propcache-0.2.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:466c219deee4536fbc83c08d09115249db301550625c7fef1c5563a584c9bc87\"},\n    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fc2db02409338bf36590aa985a461b2c96fce91f8e7e0f14c50c5fcc4f229016\"},\n    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a6ed8db0a556343d566a5c124ee483ae113acc9a557a807d439bcecc44e7dfbb\"},\n    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:91997d9cb4a325b60d4e3f20967f8eb08dfcb32b22554d5ef78e6fd1dda743a2\"},\n    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4c7dde9e533c0a49d802b4f3f218fa9ad0a1ce21f2c2eb80d5216565202acab4\"},\n    {file = \"propcache-0.2.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffcad6c564fe6b9b8916c1aefbb37a362deebf9394bd2974e9d84232e3e08504\"},\n    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:97a58a28bcf63284e8b4d7b460cbee1edaab24634e82059c7b8c09e65284f178\"},\n    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:945db8ee295d3af9dbdbb698cce9bbc5c59b5c3fe328bbc4387f59a8a35f998d\"},\n    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:39e104da444a34830751715f45ef9fc537475ba21b7f1f5b0f4d71a3b60d7fe2\"},\n    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c5ecca8f9bab618340c8e848d340baf68bcd8ad90a8ecd7a4524a81c1764b3db\"},\n    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:c436130cc779806bdf5d5fae0d848713105472b8566b75ff70048c47d3961c5b\"},\n    {file = \"propcache-0.2.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:191db28dc6dcd29d1a3e063c3be0b40688ed76434622c53a284e5427565bbd9b\"},\n    {file = \"propcache-0.2.0-cp311-cp311-win32.whl\", hash = \"sha256:5f2564ec89058ee7c7989a7b719115bdfe2a2fb8e7a4543b8d1c0cc4cf6478c1\"},\n    {file = \"propcache-0.2.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:6e2e54267980349b723cff366d1e29b138b9a60fa376664a157a342689553f71\"},\n    {file = \"propcache-0.2.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:2ee7606193fb267be4b2e3b32714f2d58cad27217638db98a60f9efb5efeccc2\"},\n    {file = \"propcache-0.2.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:91ee8fc02ca52e24bcb77b234f22afc03288e1dafbb1f88fe24db308910c4ac7\"},\n    {file = \"propcache-0.2.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:2e900bad2a8456d00a113cad8c13343f3b1f327534e3589acc2219729237a2e8\"},\n    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f52a68c21363c45297aca15561812d542f8fc683c85201df0bebe209e349f793\"},\n    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1e41d67757ff4fbc8ef2af99b338bfb955010444b92929e9e55a6d4dcc3c4f09\"},\n    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a64e32f8bd94c105cc27f42d3b658902b5bcc947ece3c8fe7bc1b05982f60e89\"},\n    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:55346705687dbd7ef0d77883ab4f6fabc48232f587925bdaf95219bae072491e\"},\n    {file = \"propcache-0.2.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:00181262b17e517df2cd85656fcd6b4e70946fe62cd625b9d74ac9977b64d8d9\"},\n    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6994984550eaf25dd7fc7bd1b700ff45c894149341725bb4edc67f0ffa94efa4\"},\n    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:56295eb1e5f3aecd516d91b00cfd8bf3a13991de5a479df9e27dd569ea23959c\"},\n    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:439e76255daa0f8151d3cb325f6dd4a3e93043e6403e6491813bcaaaa8733887\"},\n    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f6475a1b2ecb310c98c28d271a30df74f9dd436ee46d09236a6b750a7599ce57\"},\n    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:3444cdba6628accf384e349014084b1cacd866fbb88433cd9d279d90a54e0b23\"},\n    {file = \"propcache-0.2.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:4a9d9b4d0a9b38d1c391bb4ad24aa65f306c6f01b512e10a8a34a2dc5675d348\"},\n    {file = \"propcache-0.2.0-cp312-cp312-win32.whl\", hash = \"sha256:69d3a98eebae99a420d4b28756c8ce6ea5a29291baf2dc9ff9414b42676f61d5\"},\n    {file = \"propcache-0.2.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:ad9c9b99b05f163109466638bd30ada1722abb01bbb85c739c50b6dc11f92dc3\"},\n    {file = \"propcache-0.2.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ecddc221a077a8132cf7c747d5352a15ed763b674c0448d811f408bf803d9ad7\"},\n    {file = \"propcache-0.2.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:0e53cb83fdd61cbd67202735e6a6687a7b491c8742dfc39c9e01e80354956763\"},\n    {file = \"propcache-0.2.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:92fe151145a990c22cbccf9ae15cae8ae9eddabfc949a219c9f667877e40853d\"},\n    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d6a21ef516d36909931a2967621eecb256018aeb11fc48656e3257e73e2e247a\"},\n    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3f88a4095e913f98988f5b338c1d4d5d07dbb0b6bad19892fd447484e483ba6b\"},\n    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5a5b3bb545ead161be780ee85a2b54fdf7092815995661947812dde94a40f6fb\"},\n    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67aeb72e0f482709991aa91345a831d0b707d16b0257e8ef88a2ad246a7280bf\"},\n    {file = \"propcache-0.2.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3c997f8c44ec9b9b0bcbf2d422cc00a1d9b9c681f56efa6ca149a941e5560da2\"},\n    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:2a66df3d4992bc1d725b9aa803e8c5a66c010c65c741ad901e260ece77f58d2f\"},\n    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:3ebbcf2a07621f29638799828b8d8668c421bfb94c6cb04269130d8de4fb7136\"},\n    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:1235c01ddaa80da8235741e80815ce381c5267f96cc49b1477fdcf8c047ef325\"},\n    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3947483a381259c06921612550867b37d22e1df6d6d7e8361264b6d037595f44\"},\n    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:d5bed7f9805cc29c780f3aee05de3262ee7ce1f47083cfe9f77471e9d6777e83\"},\n    {file = \"propcache-0.2.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e4a91d44379f45f5e540971d41e4626dacd7f01004826a18cb048e7da7e96544\"},\n    {file = \"propcache-0.2.0-cp313-cp313-win32.whl\", hash = \"sha256:f902804113e032e2cdf8c71015651c97af6418363bea8d78dc0911d56c335032\"},\n    {file = \"propcache-0.2.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:8f188cfcc64fb1266f4684206c9de0e80f54622c3f22a910cbd200478aeae61e\"},\n    {file = \"propcache-0.2.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:53d1bd3f979ed529f0805dd35ddaca330f80a9a6d90bc0121d2ff398f8ed8861\"},\n    {file = \"propcache-0.2.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:83928404adf8fb3d26793665633ea79b7361efa0287dfbd372a7e74311d51ee6\"},\n    {file = \"propcache-0.2.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:77a86c261679ea5f3896ec060be9dc8e365788248cc1e049632a1be682442063\"},\n    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:218db2a3c297a3768c11a34812e63b3ac1c3234c3a086def9c0fee50d35add1f\"},\n    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:7735e82e3498c27bcb2d17cb65d62c14f1100b71723b68362872bca7d0913d90\"},\n    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:20a617c776f520c3875cf4511e0d1db847a076d720714ae35ffe0df3e440be68\"},\n    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67b69535c870670c9f9b14a75d28baa32221d06f6b6fa6f77a0a13c5a7b0a5b9\"},\n    {file = \"propcache-0.2.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4569158070180c3855e9c0791c56be3ceeb192defa2cdf6a3f39e54319e56b89\"},\n    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:db47514ffdbd91ccdc7e6f8407aac4ee94cc871b15b577c1c324236b013ddd04\"},\n    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_armv7l.whl\", hash = \"sha256:2a60ad3e2553a74168d275a0ef35e8c0a965448ffbc3b300ab3a5bb9956c2162\"},\n    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:662dd62358bdeaca0aee5761de8727cfd6861432e3bb828dc2a693aa0471a563\"},\n    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:25a1f88b471b3bc911d18b935ecb7115dff3a192b6fef46f0bfaf71ff4f12418\"},\n    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:f60f0ac7005b9f5a6091009b09a419ace1610e163fa5deaba5ce3484341840e7\"},\n    {file = \"propcache-0.2.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:74acd6e291f885678631b7ebc85d2d4aec458dd849b8c841b57ef04047833bed\"},\n    {file = \"propcache-0.2.0-cp38-cp38-win32.whl\", hash = \"sha256:d9b6ddac6408194e934002a69bcaadbc88c10b5f38fb9307779d1c629181815d\"},\n    {file = \"propcache-0.2.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:676135dcf3262c9c5081cc8f19ad55c8a64e3f7282a21266d05544450bffc3a5\"},\n    {file = \"propcache-0.2.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:25c8d773a62ce0451b020c7b29a35cfbc05de8b291163a7a0f3b7904f27253e6\"},\n    {file = \"propcache-0.2.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:375a12d7556d462dc64d70475a9ee5982465fbb3d2b364f16b86ba9135793638\"},\n    {file = \"propcache-0.2.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:1ec43d76b9677637a89d6ab86e1fef70d739217fefa208c65352ecf0282be957\"},\n    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f45eec587dafd4b2d41ac189c2156461ebd0c1082d2fe7013571598abb8505d1\"},\n    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bc092ba439d91df90aea38168e11f75c655880c12782facf5cf9c00f3d42b562\"},\n    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fa1076244f54bb76e65e22cb6910365779d5c3d71d1f18b275f1dfc7b0d71b4d\"},\n    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:682a7c79a2fbf40f5dbb1eb6bfe2cd865376deeac65acf9beb607505dced9e12\"},\n    {file = \"propcache-0.2.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8e40876731f99b6f3c897b66b803c9e1c07a989b366c6b5b475fafd1f7ba3fb8\"},\n    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:363ea8cd3c5cb6679f1c2f5f1f9669587361c062e4899fce56758efa928728f8\"},\n    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:140fbf08ab3588b3468932974a9331aff43c0ab8a2ec2c608b6d7d1756dbb6cb\"},\n    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:e70fac33e8b4ac63dfc4c956fd7d85a0b1139adcfc0d964ce288b7c527537fea\"},\n    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b33d7a286c0dc1a15f5fc864cc48ae92a846df287ceac2dd499926c3801054a6\"},\n    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:f6d5749fdd33d90e34c2efb174c7e236829147a2713334d708746e94c4bde40d\"},\n    {file = \"propcache-0.2.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:22aa8f2272d81d9317ff5756bb108021a056805ce63dd3630e27d042c8092798\"},\n    {file = \"propcache-0.2.0-cp39-cp39-win32.whl\", hash = \"sha256:73e4b40ea0eda421b115248d7e79b59214411109a5bc47d0d48e4c73e3b8fcf9\"},\n    {file = \"propcache-0.2.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:9517d5e9e0731957468c29dbfd0f976736a0e55afaea843726e887f36fe017df\"},\n    {file = \"propcache-0.2.0-py3-none-any.whl\", hash = \"sha256:2ccc28197af5313706511fab3a8b66dcd6da067a1331372c82ea1cb74285e036\"},\n    {file = \"propcache-0.2.0.tar.gz\", hash = \"sha256:df81779732feb9d01e5d513fad0122efb3d53bbc75f61b2a4f29a020bc985e70\"},\n]\n\n[[package]]\nname = \"psutil\"\nversion = \"6.1.1\"\ndescription = \"Cross-platform lib for process and system monitoring in Python.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7\"\nfiles = [\n    {file = \"psutil-6.1.1-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:9ccc4316f24409159897799b83004cb1e24f9819b0dcf9c0b68bdcb6cefee6a8\"},\n    {file = \"psutil-6.1.1-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:ca9609c77ea3b8481ab005da74ed894035936223422dc591d6772b147421f777\"},\n    {file = \"psutil-6.1.1-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:8df0178ba8a9e5bc84fed9cfa61d54601b371fbec5c8eebad27575f1e105c0d4\"},\n    {file = \"psutil-6.1.1-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:1924e659d6c19c647e763e78670a05dbb7feaf44a0e9c94bf9e14dfc6ba50468\"},\n    {file = \"psutil-6.1.1-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:018aeae2af92d943fdf1da6b58665124897cfc94faa2ca92098838f83e1b1bca\"},\n    {file = \"psutil-6.1.1-cp27-none-win32.whl\", hash = \"sha256:6d4281f5bbca041e2292be3380ec56a9413b790579b8e593b1784499d0005dac\"},\n    {file = \"psutil-6.1.1-cp27-none-win_amd64.whl\", hash = \"sha256:c777eb75bb33c47377c9af68f30e9f11bc78e0f07fbf907be4a5d70b2fe5f030\"},\n    {file = \"psutil-6.1.1-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:fc0ed7fe2231a444fc219b9c42d0376e0a9a1a72f16c5cfa0f68d19f1a0663e8\"},\n    {file = \"psutil-6.1.1-cp36-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:0bdd4eab935276290ad3cb718e9809412895ca6b5b334f5a9111ee6d9aff9377\"},\n    {file = \"psutil-6.1.1-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b6e06c20c05fe95a3d7302d74e7097756d4ba1247975ad6905441ae1b5b66003\"},\n    {file = \"psutil-6.1.1-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:97f7cb9921fbec4904f522d972f0c0e1f4fabbdd4e0287813b21215074a0f160\"},\n    {file = \"psutil-6.1.1-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:33431e84fee02bc84ea36d9e2c4a6d395d479c9dd9bba2376c1f6ee8f3a4e0b3\"},\n    {file = \"psutil-6.1.1-cp36-cp36m-win32.whl\", hash = \"sha256:384636b1a64b47814437d1173be1427a7c83681b17a450bfc309a1953e329603\"},\n    {file = \"psutil-6.1.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8be07491f6ebe1a693f17d4f11e69d0dc1811fa082736500f649f79df7735303\"},\n    {file = \"psutil-6.1.1-cp37-abi3-win32.whl\", hash = \"sha256:eaa912e0b11848c4d9279a93d7e2783df352b082f40111e078388701fd479e53\"},\n    {file = \"psutil-6.1.1-cp37-abi3-win_amd64.whl\", hash = \"sha256:f35cfccb065fff93529d2afb4a2e89e363fe63ca1e4a5da22b603a85833c2649\"},\n    {file = \"psutil-6.1.1.tar.gz\", hash = \"sha256:cf8496728c18f2d0b45198f06895be52f36611711746b7f30c464b422b50e2f5\"},\n]\n\n[package.extras]\ndev = [\"abi3audit\", \"black\", \"check-manifest\", \"coverage\", \"packaging\", \"pylint\", \"pyperf\", \"pypinfo\", \"pytest-cov\", \"requests\", \"rstcheck\", \"ruff\", \"sphinx\", \"sphinx_rtd_theme\", \"toml-sort\", \"twine\", \"virtualenv\", \"vulture\", \"wheel\"]\ntest = [\"pytest\", \"pytest-xdist\", \"setuptools\"]\n\n[[package]]\nname = \"ptyprocess\"\nversion = \"0.7.0\"\ndescription = \"Run a subprocess in a pseudo terminal\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ptyprocess-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:4b41f3967fce3af57cc7e94b888626c18bf37a083e3651ca8feeb66d492fef35\"},\n    {file = \"ptyprocess-0.7.0.tar.gz\", hash = \"sha256:5c5d0a3b48ceee0b48485e0c26037c0acd7d29765ca3fbb5cb3831d347423220\"},\n]\n\n[[package]]\nname = \"pyasn1\"\nversion = \"0.6.1\"\ndescription = \"Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pyasn1-0.6.1-py3-none-any.whl\", hash = \"sha256:0d632f46f2ba09143da3a8afe9e33fb6f92fa2320ab7e886e2d0f7672af84629\"},\n    {file = \"pyasn1-0.6.1.tar.gz\", hash = \"sha256:6f580d2bdd84365380830acf45550f2511469f673cb4a5ae3857a3170128b034\"},\n]\n\n[[package]]\nname = \"pyasn1-modules\"\nversion = \"0.4.1\"\ndescription = \"A collection of ASN.1-based protocols modules\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pyasn1_modules-0.4.1-py3-none-any.whl\", hash = \"sha256:49bfa96b45a292b711e986f222502c1c9a5e1f4e568fc30e2574a6c7d07838fd\"},\n    {file = \"pyasn1_modules-0.4.1.tar.gz\", hash = \"sha256:c28e2dbf9c06ad61c71a075c7e0f9fd0f1b0bb2d2ad4377f240d33ac2ab60a7c\"},\n]\n\n[package.dependencies]\npyasn1 = \">=0.4.6,<0.7.0\"\n\n[[package]]\nname = \"pycparser\"\nversion = \"2.22\"\ndescription = \"C parser in Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pycparser-2.22-py3-none-any.whl\", hash = \"sha256:c3702b6d3dd8c7abc1afa565d7e63d53a1d0bd86cdc24edd75470f4de499cfcc\"},\n    {file = \"pycparser-2.22.tar.gz\", hash = \"sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6\"},\n]\n\n[[package]]\nname = \"pydantic\"\nversion = \"2.10.4\"\ndescription = \"Data validation using Python type hints\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pydantic-2.10.4-py3-none-any.whl\", hash = \"sha256:597e135ea68be3a37552fb524bc7d0d66dcf93d395acd93a00682f1efcb8ee3d\"},\n    {file = \"pydantic-2.10.4.tar.gz\", hash = \"sha256:82f12e9723da6de4fe2ba888b5971157b3be7ad914267dea8f05f82b28254f06\"},\n]\n\n[package.dependencies]\nannotated-types = \">=0.6.0\"\npydantic-core = \"2.27.2\"\ntyping-extensions = \">=4.12.2\"\n\n[package.extras]\nemail = [\"email-validator (>=2.0.0)\"]\ntimezone = [\"tzdata\"]\n\n[[package]]\nname = \"pydantic-core\"\nversion = \"2.27.2\"\ndescription = \"Core functionality for Pydantic validation and serialization\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pydantic_core-2.27.2-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:2d367ca20b2f14095a8f4fa1210f5a7b78b8a20009ecced6b12818f455b1e9fa\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:491a2b73db93fab69731eaee494f320faa4e093dbed776be1a829c2eb222c34c\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7969e133a6f183be60e9f6f56bfae753585680f3b7307a8e555a948d443cc05a\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:3de9961f2a346257caf0aa508a4da705467f53778e9ef6fe744c038119737ef5\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e2bb4d3e5873c37bb3dd58714d4cd0b0e6238cebc4177ac8fe878f8b3aa8e74c\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:280d219beebb0752699480fe8f1dc61ab6615c2046d76b7ab7ee38858de0a4e7\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:47956ae78b6422cbd46f772f1746799cbb862de838fd8d1fbd34a82e05b0983a\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:14d4a5c49d2f009d62a2a7140d3064f686d17a5d1a268bc641954ba181880236\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:337b443af21d488716f8d0b6164de833e788aa6bd7e3a39c005febc1284f4962\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-musllinux_1_1_armv7l.whl\", hash = \"sha256:03d0f86ea3184a12f41a2d23f7ccb79cdb5a18e06993f8a45baa8dfec746f0e9\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:7041c36f5680c6e0f08d922aed302e98b3745d97fe1589db0a3eebf6624523af\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-win32.whl\", hash = \"sha256:50a68f3e3819077be2c98110c1f9dcb3817e93f267ba80a2c05bb4f8799e2ff4\"},\n    {file = \"pydantic_core-2.27.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:e0fd26b16394ead34a424eecf8a31a1f5137094cabe84a1bcb10fa6ba39d3d31\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:8e10c99ef58cfdf2a66fc15d66b16c4a04f62bca39db589ae8cba08bc55331bc\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:26f32e0adf166a84d0cb63be85c562ca8a6fa8de28e5f0d92250c6b7e9e2aff7\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8c19d1ea0673cd13cc2f872f6c9ab42acc4e4f492a7ca9d3795ce2b112dd7e15\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:5e68c4446fe0810e959cdff46ab0a41ce2f2c86d227d96dc3847af0ba7def306\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d9640b0059ff4f14d1f37321b94061c6db164fbe49b334b31643e0528d100d99\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:40d02e7d45c9f8af700f3452f329ead92da4c5f4317ca9b896de7ce7199ea459\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1c1fd185014191700554795c99b347d64f2bb637966c4cfc16998a0ca700d048\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:d81d2068e1c1228a565af076598f9e7451712700b673de8f502f0334f281387d\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:1a4207639fb02ec2dbb76227d7c751a20b1a6b4bc52850568e52260cae64ca3b\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-musllinux_1_1_armv7l.whl\", hash = \"sha256:3de3ce3c9ddc8bbd88f6e0e304dea0e66d843ec9de1b0042b0911c1663ffd474\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:30c5f68ded0c36466acede341551106821043e9afaad516adfb6e8fa80a4e6a6\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-win32.whl\", hash = \"sha256:c70c26d2c99f78b125a3459f8afe1aed4d9687c24fd677c6a4436bc042e50d6c\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:08e125dbdc505fa69ca7d9c499639ab6407cfa909214d500897d02afb816e7cc\"},\n    {file = \"pydantic_core-2.27.2-cp311-cp311-win_arm64.whl\", hash = \"sha256:26f0d68d4b235a2bae0c3fc585c585b4ecc51382db0e3ba402a22cbc440915e4\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:9e0c8cfefa0ef83b4da9588448b6d8d2a2bf1a53c3f1ae5fca39eb3061e2f0b0\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:83097677b8e3bd7eaa6775720ec8e0405f1575015a463285a92bfdfe254529ef\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:172fce187655fece0c90d90a678424b013f8fbb0ca8b036ac266749c09438cb7\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:519f29f5213271eeeeb3093f662ba2fd512b91c5f188f3bb7b27bc5973816934\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:05e3a55d124407fffba0dd6b0c0cd056d10e983ceb4e5dbd10dda135c31071d6\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9c3ed807c7b91de05e63930188f19e921d1fe90de6b4f5cd43ee7fcc3525cb8c\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6fb4aadc0b9a0c063206846d603b92030eb6f03069151a625667f982887153e2\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:28ccb213807e037460326424ceb8b5245acb88f32f3d2777427476e1b32c48c4\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:de3cd1899e2c279b140adde9357c4495ed9d47131b4a4eaff9052f23398076b3\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-musllinux_1_1_armv7l.whl\", hash = \"sha256:220f892729375e2d736b97d0e51466252ad84c51857d4d15f5e9692f9ef12be4\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:a0fcd29cd6b4e74fe8ddd2c90330fd8edf2e30cb52acda47f06dd615ae72da57\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-win32.whl\", hash = \"sha256:1e2cb691ed9834cd6a8be61228471d0a503731abfb42f82458ff27be7b2186fc\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:cc3f1a99a4f4f9dd1de4fe0312c114e740b5ddead65bb4102884b384c15d8bc9\"},\n    {file = \"pydantic_core-2.27.2-cp312-cp312-win_arm64.whl\", hash = \"sha256:3911ac9284cd8a1792d3cb26a2da18f3ca26c6908cc434a18f730dc0db7bfa3b\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:7d14bd329640e63852364c306f4d23eb744e0f8193148d4044dd3dacdaacbd8b\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:82f91663004eb8ed30ff478d77c4d1179b3563df6cdb15c0817cd1cdaf34d154\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:71b24c7d61131bb83df10cc7e687433609963a944ccf45190cfc21e0887b08c9\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:fa8e459d4954f608fa26116118bb67f56b93b209c39b008277ace29937453dc9\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ce8918cbebc8da707ba805b7fd0b382816858728ae7fe19a942080c24e5b7cd1\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:eda3f5c2a021bbc5d976107bb302e0131351c2ba54343f8a496dc8783d3d3a6a\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bd8086fa684c4775c27f03f062cbb9eaa6e17f064307e86b21b9e0abc9c0f02e\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:8d9b3388db186ba0c099a6d20f0604a44eabdeef1777ddd94786cdae158729e4\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:7a66efda2387de898c8f38c0cf7f14fca0b51a8ef0b24bfea5849f1b3c95af27\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-musllinux_1_1_armv7l.whl\", hash = \"sha256:18a101c168e4e092ab40dbc2503bdc0f62010e95d292b27827871dc85450d7ee\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:ba5dd002f88b78a4215ed2f8ddbdf85e8513382820ba15ad5ad8955ce0ca19a1\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-win32.whl\", hash = \"sha256:1ebaf1d0481914d004a573394f4be3a7616334be70261007e47c2a6fe7e50130\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:953101387ecf2f5652883208769a79e48db18c6df442568a0b5ccd8c2723abee\"},\n    {file = \"pydantic_core-2.27.2-cp313-cp313-win_arm64.whl\", hash = \"sha256:ac4dbfd1691affb8f48c2c13241a2e3b60ff23247cbcf981759c768b6633cf8b\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:d3e8d504bdd3f10835468f29008d72fc8359d95c9c415ce6e767203db6127506\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:521eb9b7f036c9b6187f0b47318ab0d7ca14bd87f776240b90b21c1f4f149320\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:85210c4d99a0114f5a9481b44560d7d1e35e32cc5634c656bc48e590b669b145\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:d716e2e30c6f140d7560ef1538953a5cd1a87264c737643d481f2779fc247fe1\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f66d89ba397d92f840f8654756196d93804278457b5fbede59598a1f9f90b228\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:669e193c1c576a58f132e3158f9dfa9662969edb1a250c54d8fa52590045f046\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9fdbe7629b996647b99c01b37f11170a57ae675375b14b8c13b8518b8320ced5\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:d262606bf386a5ba0b0af3b97f37c83d7011439e3dc1a9298f21efb292e42f1a\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:cabb9bcb7e0d97f74df8646f34fc76fbf793b7f6dc2438517d7a9e50eee4f14d\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-musllinux_1_1_armv7l.whl\", hash = \"sha256:d2d63f1215638d28221f664596b1ccb3944f6e25dd18cd3b86b0a4c408d5ebb9\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:bca101c00bff0adb45a833f8451b9105d9df18accb8743b08107d7ada14bd7da\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-win32.whl\", hash = \"sha256:f6f8e111843bbb0dee4cb6594cdc73e79b3329b526037ec242a3e49012495b3b\"},\n    {file = \"pydantic_core-2.27.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:fd1aea04935a508f62e0d0ef1f5ae968774a32afc306fb8545e06f5ff5cdf3ad\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:c10eb4f1659290b523af58fa7cffb452a61ad6ae5613404519aee4bfbf1df993\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ef592d4bad47296fb11f96cd7dc898b92e795032b4894dfb4076cfccd43a9308\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c61709a844acc6bf0b7dce7daae75195a10aac96a596ea1b776996414791ede4\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:42c5f762659e47fdb7b16956c71598292f60a03aa92f8b6351504359dbdba6cf\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4c9775e339e42e79ec99c441d9730fccf07414af63eac2f0e48e08fd38a64d76\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:57762139821c31847cfb2df63c12f725788bd9f04bc2fb392790959b8f70f118\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0d1e85068e818c73e048fe28cfc769040bb1f475524f4745a5dc621f75ac7630\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:097830ed52fd9e427942ff3b9bc17fab52913b2f50f2880dc4a5611446606a54\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:044a50963a614ecfae59bb1eaf7ea7efc4bc62f49ed594e18fa1e5d953c40e9f\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-musllinux_1_1_armv7l.whl\", hash = \"sha256:4e0b4220ba5b40d727c7f879eac379b822eee5d8fff418e9d3381ee45b3b0362\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5e4f4bb20d75e9325cc9696c6802657b58bc1dbbe3022f32cc2b2b632c3fbb96\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-win32.whl\", hash = \"sha256:cca63613e90d001b9f2f9a9ceb276c308bfa2a43fafb75c8031c4f66039e8c6e\"},\n    {file = \"pydantic_core-2.27.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:77d1bca19b0f7021b3a982e6f903dcd5b2b06076def36a652e3907f596e29f67\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:2bf14caea37e91198329b828eae1618c068dfb8ef17bb33287a7ad4b61ac314e\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:b0cb791f5b45307caae8810c2023a184c74605ec3bcbb67d13846c28ff731ff8\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:688d3fd9fcb71f41c4c015c023d12a79d1c4c0732ec9eb35d96e3388a120dcf3\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3d591580c34f4d731592f0e9fe40f9cc1b430d297eecc70b962e93c5c668f15f\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:82f986faf4e644ffc189a7f1aafc86e46ef70372bb153e7001e8afccc6e54133\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl\", hash = \"sha256:bec317a27290e2537f922639cafd54990551725fc844249e64c523301d0822fc\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-musllinux_1_1_armv7l.whl\", hash = \"sha256:0296abcb83a797db256b773f45773da397da75a08f5fcaef41f2044adec05f50\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl\", hash = \"sha256:0d75070718e369e452075a6017fbf187f788e17ed67a3abd47fa934d001863d9\"},\n    {file = \"pydantic_core-2.27.2-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:7e17b560be3c98a8e3aa66ce828bdebb9e9ac6ad5466fba92eb74c4c95cb1151\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:c33939a82924da9ed65dab5a65d427205a73181d8098e79b6b426bdf8ad4e656\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:00bad2484fa6bda1e216e7345a798bd37c68fb2d97558edd584942aa41b7d278\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c817e2b40aba42bac6f457498dacabc568c3b7a986fc9ba7c8d9d260b71485fb\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:251136cdad0cb722e93732cb45ca5299fb56e1344a833640bf93b2803f8d1bfd\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:d2088237af596f0a524d3afc39ab3b036e8adb054ee57cbb1dcf8e09da5b29cc\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl\", hash = \"sha256:d4041c0b966a84b4ae7a09832eb691a35aec90910cd2dbe7a208de59be77965b\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-musllinux_1_1_armv7l.whl\", hash = \"sha256:8083d4e875ebe0b864ffef72a4304827015cff328a1be6e22cc850753bfb122b\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl\", hash = \"sha256:f141ee28a0ad2123b6611b6ceff018039df17f32ada8b534e6aa039545a3efb2\"},\n    {file = \"pydantic_core-2.27.2-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:7d0c8399fcc1848491f00e0314bd59fb34a9c008761bcb422a057670c3f65e35\"},\n    {file = \"pydantic_core-2.27.2.tar.gz\", hash = \"sha256:eb026e5a4c1fee05726072337ff51d1efb6f59090b7da90d30ea58625b1ffb39\"},\n]\n\n[package.dependencies]\ntyping-extensions = \">=4.6.0,<4.7.0 || >4.7.0\"\n\n[[package]]\nname = \"pygments\"\nversion = \"2.18.0\"\ndescription = \"Pygments is a syntax highlighting package written in Python.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pygments-2.18.0-py3-none-any.whl\", hash = \"sha256:b8e6aca0523f3ab76fee51799c488e38782ac06eafcf95e7ba832985c8e7b13a\"},\n    {file = \"pygments-2.18.0.tar.gz\", hash = \"sha256:786ff802f32e91311bff3889f6e9a86e81505fe99f2735bb6d60ae0c5004f199\"},\n]\n\n[package.extras]\nwindows-terminal = [\"colorama (>=0.4.6)\"]\n\n[[package]]\nname = \"pyinstrument\"\nversion = \"5.0.0\"\ndescription = \"Call stack profiler for Python. Shows you why your code is slow!\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pyinstrument-5.0.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:6a83cf18f5594e1b1899b12b46df7aabca556eef895846ccdaaa3a46a37d1274\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:1cc236313272d0222261be8e2b2a08e42d7ccbe54db9059babf4d77040da1880\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6dd685d68a31f3715ca61f82c37c1c2f8b75f45646bd9840e04681d91862bd85\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4cecd0f6558f13fba74a9f036b2b168956206e9525dcb84c6add2d73ab61dc22\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:40a8485c2e41082a20822001a6651667bb5327f6f5f6759987198593e45bb376\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:a6294b7111348765ba4c311fc91821ed8b59c6690c4dab23aa7165a67da9e972\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:a164f3dae5c7db2faa501639659d64034cde8db62a4d6744712593a369bc8629\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:6f6bac8a434407de6f2ebddbcdecdb19b324c9315cbb8b8c2352714f7ced8181\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-win32.whl\", hash = \"sha256:7e8dc887e535f5c5e5a2a64a0729496f11ddcef0c23b0a555d5ab6fa19759445\"},\n    {file = \"pyinstrument-5.0.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:0c337190a1818841732643ba93065411591df526bc9de44b97ba8f56b581d2ef\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:c9052f548ec5ccecc50676fbf1a1d0b60bdbd3cd67630c5253099af049d1f0ad\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:197d25487f52da3f8ec26d46db7202bc5d703cc73c1503371166417eb7cea14e\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a072d928dc16a32e0f3d1e51726f4472a69d66d838ee1d1bf248737fd70b9415\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c2c7ae2c984879a645fce583bf3053b7e57495f60c1e158bb71ad7dfced1fbf1\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8284bf8847629c9a5054702b9306eab3ab14c2474959e01e606369ffbcf938bc\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:4fd94cc725efb1dd41ae8e20a5f06a6a5363dec959e8a9dacbac3f4d12d28f03\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:e0fdb9fe6f9c694940410dcc82e23a3fe2928114328efd35047fc0bb8a6c959f\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:9ffe938e63173ceb8ce7b6b309ce26c9d44d16f53c0162d89d6e706eb9e69802\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-win32.whl\", hash = \"sha256:80d2a248516f372a89e0fe9ddf4a9d6388a4c6481b6ebd3dfe01b3cd028c0275\"},\n    {file = \"pyinstrument-5.0.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:7ccf4267aff62de0e1d976e8f5da25dcb69737ae86e38d3cfffa24877837e7d1\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:dec3529a5351ea160baeef1ef2a6e28b1a7a7b3fb5e9863fae8de6da73d0f69a\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:5a39e3ef84c56183f8274dfd584b8c2fae4783c6204f880513e70ab2440b9137\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b3938f063ee065e05826628dadf1fb32c7d26b22df4a945c22f7fe25ea1ba6a2\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f18990cc16b2e23b54738aa2f222863e1d36daaaec8f67b1613ddfa41f5b24db\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3731412b5bfdcef8014518f145140c69384793e218863a33a39ccfe5fb42045\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:02b2eaf38460b14eea646d6bb7f373eb5bb5691d13f788e80bdcb3a4eaa2519e\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:e57db06590f13657b2bce8c4d9cf8e9e2bd90bb729bcbbe421c531ba67ad7add\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ddaa3001c1b798ec9bf1266ef476bbc0834b74d547d531f5ed99e7d05ac5d81b\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-win32.whl\", hash = \"sha256:b69ff982acf5ef2f4e0f32ce9b4b598f256faf88438f233ea3a72f1042707e5b\"},\n    {file = \"pyinstrument-5.0.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:0bf4ef061d60befe72366ce0ed4c75dee5be089644de38f9936d2df0bcf44af0\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:79a54def2d4aa83a4ed37c6cffc5494ae5de140f0453169eb4f7c744cc249d3a\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:9538f746f166a40c8802ebe5c3e905d50f3faa189869cd71c083b8a639e574bb\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2bbab65cae1483ad8a18429511d1eac9e3efec9f7961f2fd1bf90e1e2d69ef15\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4351ad041d208c597e296a0e9c2e6e21cc96804608bcafa40cfa168f3c2b8f79\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ceee5252f4580abec29bcc5c965453c217b0d387c412a5ffb8afdcda4e648feb\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:b3050a4e7033103a13cfff9802680e2070a9173e1a258fa3f15a80b4eb9ee278\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:3b1f44a34da7810938df615fb7cbc43cd879b42ca6b5cd72e655aee92149d012\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:fde075196c8a3b2be191b8da05b92ff909c78d308f82df56d01a8cfdd6da07b9\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-win32.whl\", hash = \"sha256:1a9b62a8b54e05e7723eb8b9595fadc43559b73290c87b3b1cb2dc5944559790\"},\n    {file = \"pyinstrument-5.0.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:2478d2c55f77ad8e281e67b0dfe7c2176304bb824c307e86e11890f5e68d7feb\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:c2e3b4283f85232fd5818e2153e6798bceb39a8c3ccfaa22fae08faf554740b7\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:fb1139d2822abff1cbf1c81c018341f573b7afa23a94ce74888a0f6f47828cbc\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0c971566d86ba46a7233d3f5b0d85d7ee4c9863f541f5d8f796c3947ebe17f68\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:429376235960179d6ab9b97e7871090059d39de160b4e3b2723672f30e8eea8e\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8599b4b0630c776b30fc3c4f7476d5e3814ee7fe42d99131644fe3c00b40fdf1\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:a8bc688afa2a5368042a7cb56866d5a28fdff8f37a282f7be79b17cae042841b\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:5d34c06e2276d1f549a540bccb063688ea3d876e6df7c391205f1c8b4b96d5c8\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:4d3b2ec6e028731dbb2ba8cf06f19030162789e6696bca990a09519881ad42fb\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-win32.whl\", hash = \"sha256:5ed6f5873a7526ec5915e45d956d044334ef302653cf63649e48c41561aaa285\"},\n    {file = \"pyinstrument-5.0.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:9e87d65bae7d0f5ef50908e35d67d43b7cc566909995cc99e91721bb49b4ea06\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:bd953163616bc29c2ccb1e4c0e48ccdd11e0a97fc849da26bc362bba372019ba\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:8d2a7279ed9b6d7cdae247bc2e57095a32f35dfe32182c334ab0ac3eb02e0eac\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:68001dfcb8a37b624a1c3de5d2ee7d634f63eac7a6dd1357b7370a5cdbdcf567\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d5c4c3cc6410ad5afe0e352a7fb09fb1ab85eb5676ec5ec8522123759d9cc68f\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7d87ddab66b1b3525ad3abc49a88aaa51efcaf83578e9d2a702c03a1cea39f28\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:03182ffaa9c91687cbaba80dc0c5a47015c5ea170fe642f632d88e885cf07356\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:39b60417c9c12eed04e1886644e92aa0b281d72e5d0b097b16253cade43110f7\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7bb389b6d1573361bd1367b296133c5c69184e35fc18db22e29e8cdf56f158f9\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-win32.whl\", hash = \"sha256:ae69478815edb3c63e7ebf82e1e13e38c3fb2bab833b1c013643c3475b1b8cf5\"},\n    {file = \"pyinstrument-5.0.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:83caeb4150c0334e9e290c0f9bb164ff6bdc199065ecb62016268e8a88589a51\"},\n    {file = \"pyinstrument-5.0.0.tar.gz\", hash = \"sha256:144f98eb3086667ece461f66324bf1cc1ee0475b399ab3f9ded8449cc76b7c90\"},\n]\n\n[package.extras]\nbin = [\"click\", \"nox\"]\ndocs = [\"furo (==2024.7.18)\", \"myst-parser (==3.0.1)\", \"sphinx (==7.4.7)\", \"sphinx-autobuild (==2024.4.16)\", \"sphinxcontrib-programoutput (==0.17)\"]\nexamples = [\"django\", \"litestar\", \"numpy\"]\ntest = [\"cffi (>=1.17.0)\", \"flaky\", \"greenlet (>=3)\", \"ipython\", \"pytest\", \"pytest-asyncio (==0.23.8)\", \"trio\"]\ntypes = [\"typing-extensions\"]\n\n[[package]]\nname = \"pyopenssl\"\nversion = \"24.3.0\"\ndescription = \"Python wrapper module around the OpenSSL library\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"pyOpenSSL-24.3.0-py3-none-any.whl\", hash = \"sha256:e474f5a473cd7f92221cc04976e48f4d11502804657a08a989fb3be5514c904a\"},\n    {file = \"pyopenssl-24.3.0.tar.gz\", hash = \"sha256:49f7a019577d834746bc55c5fce6ecbcec0f2b4ec5ce1cf43a9a173b8138bb36\"},\n]\n\n[package.dependencies]\ncryptography = \">=41.0.5,<45\"\n\n[package.extras]\ndocs = [\"sphinx (!=5.2.0,!=5.2.0.post0,!=7.2.5)\", \"sphinx_rtd_theme\"]\ntest = [\"pretend\", \"pytest (>=3.0.1)\", \"pytest-rerunfailures\"]\n\n[[package]]\nname = \"pyproject-hooks\"\nversion = \"1.2.0\"\ndescription = \"Wrappers to call pyproject.toml-based build backend hooks.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"pyproject_hooks-1.2.0-py3-none-any.whl\", hash = \"sha256:9e5c6bfa8dcc30091c74b0cf803c81fdd29d94f01992a7707bc97babb1141913\"},\n    {file = \"pyproject_hooks-1.2.0.tar.gz\", hash = \"sha256:1e859bd5c40fae9448642dd871adf459e5e2084186e8d2c2a79a824c970da1f8\"},\n]\n\n[[package]]\nname = \"pytest\"\nversion = \"7.4.4\"\ndescription = \"pytest: simple powerful testing with Python\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"pytest-7.4.4-py3-none-any.whl\", hash = \"sha256:b090cdf5ed60bf4c45261be03239c2c1c22df034fbffe691abe93cd80cea01d8\"},\n    {file = \"pytest-7.4.4.tar.gz\", hash = \"sha256:2cf0005922c6ace4a3e2ec8b4080eb0d9753fdc93107415332f50ce9e7994280\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nexceptiongroup = {version = \">=1.0.0rc8\", markers = \"python_version < \\\"3.11\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=0.12,<2.0\"\ntomli = {version = \">=1.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ntesting = [\"argcomplete\", \"attrs (>=19.2.0)\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"pygments (>=2.7.2)\", \"requests\", \"setuptools\", \"xmlschema\"]\n\n[[package]]\nname = \"pytest-aiohttp\"\nversion = \"1.0.5\"\ndescription = \"Pytest plugin for aiohttp support\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"pytest-aiohttp-1.0.5.tar.gz\", hash = \"sha256:880262bc5951e934463b15e3af8bb298f11f7d4d3ebac970aab425aff10a780a\"},\n    {file = \"pytest_aiohttp-1.0.5-py3-none-any.whl\", hash = \"sha256:63a5360fd2f34dda4ab8e6baee4c5f5be4cd186a403cabd498fced82ac9c561e\"},\n]\n\n[package.dependencies]\naiohttp = \">=3.8.1\"\npytest = \">=6.1.0\"\npytest-asyncio = \">=0.17.2\"\n\n[package.extras]\ntesting = [\"coverage (==6.2)\", \"mypy (==0.931)\"]\n\n[[package]]\nname = \"pytest-asyncio\"\nversion = \"0.23.8\"\ndescription = \"Pytest support for asyncio\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pytest_asyncio-0.23.8-py3-none-any.whl\", hash = \"sha256:50265d892689a5faefb84df80819d1ecef566eb3549cf915dfb33569359d1ce2\"},\n    {file = \"pytest_asyncio-0.23.8.tar.gz\", hash = \"sha256:759b10b33a6dc61cce40a8bd5205e302978bbbcc00e279a8b61d9a6a3c82e4d3\"},\n]\n\n[package.dependencies]\npytest = \">=7.0.0,<9\"\n\n[package.extras]\ndocs = [\"sphinx (>=5.3)\", \"sphinx-rtd-theme (>=1.0)\"]\ntesting = [\"coverage (>=6.2)\", \"hypothesis (>=5.7.1)\"]\n\n[[package]]\nname = \"pytest-codspeed\"\nversion = \"3.1.0\"\ndescription = \"Pytest plugin to create CodSpeed benchmarks\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pytest_codspeed-3.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:1cb7c16e5a64cb30bad30f5204c7690f3cbc9ae5b9839ce187ef1727aa5d2d9c\"},\n    {file = \"pytest_codspeed-3.1.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:4d23910893c22ceef6efbdf85d80e803b7fb4a231c9e7676ab08f5ddfc228438\"},\n    {file = \"pytest_codspeed-3.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:fb1495a633a33e15268a1f97d91a4809c868de06319db50cf97b4e9fa426372c\"},\n    {file = \"pytest_codspeed-3.1.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:dbd8a54b99207bd25a4c3f64d9a83ac0f3def91cdd87204ca70a49f822ba919c\"},\n    {file = \"pytest_codspeed-3.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:c4d1ac896ebaea5b365e69b41319b4d09b57dab85ec6234f6ff26116b3795f03\"},\n    {file = \"pytest_codspeed-3.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:5f0c1857a0a6cce6a23c49f98c588c2eef66db353c76ecbb2fb65c1a2b33a8d5\"},\n    {file = \"pytest_codspeed-3.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:a4731a7cf1d8d38f58140d51faa69b7c1401234c59d9759a2507df570c805b11\"},\n    {file = \"pytest_codspeed-3.1.0-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:c5f2e4b63260f65493b8d42c8167f831b8ed90788f81eb4eb95a103ee6aa4294\"},\n    {file = \"pytest_codspeed-3.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:db44099b3f1ec1c9c41f0267c4d57d94e31667f4cb3fb4b71901561e8ab8bc98\"},\n    {file = \"pytest_codspeed-3.1.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:a533c1ad3cc60f07be432864c83d1769ce2877753ac778e1bfc5a9821f5c6ddf\"},\n    {file = \"pytest_codspeed-3.1.0.tar.gz\", hash = \"sha256:f29641d27b4ded133b1058a4c859e510a2612ad4217ef9a839ba61750abd2f8a\"},\n]\n\n[package.dependencies]\ncffi = \">=1.17.1\"\nimportlib-metadata = {version = \">=8.5.0\", markers = \"python_version < \\\"3.10\\\"\"}\npytest = \">=3.8\"\nrich = \">=13.8.1\"\n\n[package.extras]\ncompat = [\"pytest-benchmark (>=5.0.0,<5.1.0)\", \"pytest-xdist (>=3.6.1,<3.7.0)\"]\nlint = [\"mypy (>=1.11.2,<1.12.0)\", \"ruff (>=0.6.5,<0.7.0)\"]\ntest = [\"pytest (>=7.0,<8.0)\", \"pytest-cov (>=4.0.0,<4.1.0)\"]\n\n[[package]]\nname = \"pytest-cov\"\nversion = \"4.1.0\"\ndescription = \"Pytest plugin for measuring coverage.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"pytest-cov-4.1.0.tar.gz\", hash = \"sha256:3904b13dfbfec47f003b8e77fd5b589cd11904a21ddf1ab38a64f204d6a10ef6\"},\n    {file = \"pytest_cov-4.1.0-py3-none-any.whl\", hash = \"sha256:6ba70b9e97e69fcc3fb45bfeab2d0a138fb65c4d0d6a41ef33983ad114be8c3a\"},\n]\n\n[package.dependencies]\ncoverage = {version = \">=5.2.1\", extras = [\"toml\"]}\npytest = \">=4.6\"\n\n[package.extras]\ntesting = [\"fields\", \"hunter\", \"process-tests\", \"pytest-xdist\", \"six\", \"virtualenv\"]\n\n[[package]]\nname = \"pytest-django\"\nversion = \"4.9.0\"\ndescription = \"A Django plugin for pytest.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pytest_django-4.9.0-py3-none-any.whl\", hash = \"sha256:1d83692cb39188682dbb419ff0393867e9904094a549a7d38a3154d5731b2b99\"},\n    {file = \"pytest_django-4.9.0.tar.gz\", hash = \"sha256:8bf7bc358c9ae6f6fc51b6cebb190fe20212196e6807121f11bd6a3b03428314\"},\n]\n\n[package.dependencies]\npytest = \">=7.0.0\"\n\n[package.extras]\ndocs = [\"sphinx\", \"sphinx-rtd-theme\"]\ntesting = [\"Django\", \"django-configurations (>=2.0)\"]\n\n[[package]]\nname = \"pytest-emoji\"\nversion = \"0.2.0\"\ndescription = \"A pytest plugin that adds emojis to your test result report\"\noptional = false\npython-versions = \">=3.4\"\nfiles = [\n    {file = \"pytest-emoji-0.2.0.tar.gz\", hash = \"sha256:e1bd4790d87649c2d09c272c88bdfc4d37c1cc7c7a46583087d7c510944571e8\"},\n    {file = \"pytest_emoji-0.2.0-py3-none-any.whl\", hash = \"sha256:6e34ed21970fa4b80a56ad11417456bd873eb066c02315fe9df0fafe6d4d4436\"},\n]\n\n[package.dependencies]\npytest = \">=4.2.1\"\n\n[[package]]\nname = \"pytest-mock\"\nversion = \"3.14.0\"\ndescription = \"Thin-wrapper around the mock package for easier use with pytest\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pytest-mock-3.14.0.tar.gz\", hash = \"sha256:2719255a1efeceadbc056d6bf3df3d1c5015530fb40cf347c0f9afac88410bd0\"},\n    {file = \"pytest_mock-3.14.0-py3-none-any.whl\", hash = \"sha256:0b72c38033392a5f4621342fe11e9219ac11ec9d375f8e2a0c164539e0d70f6f\"},\n]\n\n[package.dependencies]\npytest = \">=6.2.5\"\n\n[package.extras]\ndev = [\"pre-commit\", \"pytest-asyncio\", \"tox\"]\n\n[[package]]\nname = \"pytest-snapshot\"\nversion = \"0.9.0\"\ndescription = \"A plugin for snapshot testing with pytest.\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"pytest-snapshot-0.9.0.tar.gz\", hash = \"sha256:c7013c3abc3e860f9feff899f8b4debe3708650d8d8242a61bf2625ff64db7f3\"},\n    {file = \"pytest_snapshot-0.9.0-py3-none-any.whl\", hash = \"sha256:4b9fe1c21c868fe53a545e4e3184d36bc1c88946e3f5c1d9dd676962a9b3d4ab\"},\n]\n\n[package.dependencies]\npytest = \">=3.0.0\"\n\n[[package]]\nname = \"pytest-xdist\"\nversion = \"3.6.1\"\ndescription = \"pytest xdist plugin for distributed testing, most importantly across multiple CPUs\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pytest_xdist-3.6.1-py3-none-any.whl\", hash = \"sha256:9ed4adfb68a016610848639bb7e02c9352d5d9f03d04809919e2dafc3be4cca7\"},\n    {file = \"pytest_xdist-3.6.1.tar.gz\", hash = \"sha256:ead156a4db231eec769737f57668ef58a2084a34b2e55c4a8fa20d861107300d\"},\n]\n\n[package.dependencies]\nexecnet = \">=2.1\"\npsutil = {version = \">=3.0\", optional = true, markers = \"extra == \\\"psutil\\\"\"}\npytest = \">=7.0.0\"\n\n[package.extras]\npsutil = [\"psutil (>=3.0)\"]\nsetproctitle = [\"setproctitle\"]\ntesting = [\"filelock\"]\n\n[[package]]\nname = \"python-dateutil\"\nversion = \"2.9.0.post0\"\ndescription = \"Extensions to the standard Python datetime module\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,>=2.7\"\nfiles = [\n    {file = \"python-dateutil-2.9.0.post0.tar.gz\", hash = \"sha256:37dd54208da7e1cd875388217d5e00ebd4179249f90fb72437e91a35459a0ad3\"},\n    {file = \"python_dateutil-2.9.0.post0-py2.py3-none-any.whl\", hash = \"sha256:a8b2bc7bffae282281c8140a97d3aa9c14da0b136dfe83f850eea9a5f7470427\"},\n]\n\n[package.dependencies]\nsix = \">=1.5\"\n\n[[package]]\nname = \"python-editor\"\nversion = \"1.0.4\"\ndescription = \"Programmatically open an editor, capture the result.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"python-editor-1.0.4.tar.gz\", hash = \"sha256:51fda6bcc5ddbbb7063b2af7509e43bd84bfc32a4ff71349ec7847713882327b\"},\n    {file = \"python_editor-1.0.4-py2-none-any.whl\", hash = \"sha256:5f98b069316ea1c2ed3f67e7f5df6c0d8f10b689964a4a811ff64f0106819ec8\"},\n    {file = \"python_editor-1.0.4-py3-none-any.whl\", hash = \"sha256:1bf6e860a8ad52a14c3ee1252d5dc25b2030618ed80c022598f00176adc8367d\"},\n]\n\n[[package]]\nname = \"python-multipart\"\nversion = \"0.0.20\"\ndescription = \"A streaming multipart parser for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"python_multipart-0.0.20-py3-none-any.whl\", hash = \"sha256:8a62d3a8335e06589fe01f2a3e178cdcc632f3fbe0d492ad9ee0ec35aab1f104\"},\n    {file = \"python_multipart-0.0.20.tar.gz\", hash = \"sha256:8dd0cab45b8e23064ae09147625994d090fa46f5b0d1e13af944c331a7fa9d13\"},\n]\n\n[[package]]\nname = \"pywin32-ctypes\"\nversion = \"0.2.3\"\ndescription = \"A (partial) reimplementation of pywin32 using ctypes/cffi\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"pywin32-ctypes-0.2.3.tar.gz\", hash = \"sha256:d162dc04946d704503b2edc4d55f3dba5c1d539ead017afa00142c38b9885755\"},\n    {file = \"pywin32_ctypes-0.2.3-py3-none-any.whl\", hash = \"sha256:8a1513379d709975552d202d942d9837758905c8d01eb82b8bcc30918929e7b8\"},\n]\n\n[[package]]\nname = \"pyyaml\"\nversion = \"6.0.2\"\ndescription = \"YAML parser and emitter for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win32.whl\", hash = \"sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win32.whl\", hash = \"sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win32.whl\", hash = \"sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win32.whl\", hash = \"sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win32.whl\", hash = \"sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8\"},\n    {file = \"pyyaml-6.0.2.tar.gz\", hash = \"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\"},\n]\n\n[[package]]\nname = \"quart\"\nversion = \"0.19.9\"\ndescription = \"A Python ASGI web microframework with the same API as Flask\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"quart-0.19.9-py3-none-any.whl\", hash = \"sha256:8acb8b299c72b66ee9e506ae141498bbbfcc250b5298fbdb712e97f3d7e4082f\"},\n    {file = \"quart-0.19.9.tar.gz\", hash = \"sha256:30a61a0d7bae1ee13e6e99dc14c929b3c945e372b9445d92d21db053e91e95a5\"},\n]\n\n[package.dependencies]\naiofiles = \"*\"\nblinker = \">=1.6\"\nclick = \">=8.0.0\"\nflask = \">=3.0.0\"\nhypercorn = \">=0.11.2\"\nimportlib_metadata = {version = \"*\", markers = \"python_version < \\\"3.10\\\"\"}\nitsdangerous = \"*\"\njinja2 = \"*\"\nmarkupsafe = \"*\"\ntyping_extensions = {version = \"*\", markers = \"python_version < \\\"3.10\\\"\"}\nwerkzeug = \">=3.0.0\"\n\n[package.extras]\ndocs = [\"pydata_sphinx_theme\"]\ndotenv = [\"python-dotenv\"]\n\n[[package]]\nname = \"rapidfuzz\"\nversion = \"3.9.7\"\ndescription = \"rapid fuzzy string matching\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:ccf68e30b80e903f2309f90a438dbd640dd98e878eeb5ad361a288051ee5b75c\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:696a79018ef989bf1c9abd9005841cee18005ccad4748bad8a4c274c47b6241a\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c4eebf6c93af0ae866c22b403a84747580bb5c10f0d7b51c82a87f25405d4dcb\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0e9125377fa3d21a8abd4fbdbcf1c27be73e8b1850f0b61b5b711364bf3b59db\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c12d180b17a22d107c8747de9c68d0b9c1d15dcda5445ff9bf9f4ccfb67c3e16\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c1318d42610c26dcd68bd3279a1bf9e3605377260867c9a8ed22eafc1bd93a7c\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd5fa6e3c6e0333051c1f3a49f0807b3366f4131c8d6ac8c3e05fd0d0ce3755c\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:fcf79b686962d7bec458a0babc904cb4fa319808805e036b9d5a531ee6b9b835\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:8b01153c7466d0bad48fba77a303d5a768e66f24b763853469f47220b3de4661\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:94baaeea0b4f8632a6da69348b1e741043eba18d4e3088d674d3f76586b6223d\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:6c5b32875646cb7f60c193ade99b2e4b124f19583492115293cd00f6fb198b17\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:110b6294396bc0a447648627479c9320f095c2034c0537f687592e0f58622638\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-win32.whl\", hash = \"sha256:3445a35c4c8d288f2b2011eb61bce1227c633ce85a3154e727170f37c0266bb2\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:0d1415a732ee75e74a90af12020b77a0b396b36c60afae1bde3208a78cd2c9fc\"},\n    {file = \"rapidfuzz-3.9.7-cp310-cp310-win_arm64.whl\", hash = \"sha256:836f4d88b8bd0fff2ebe815dcaab8aa6c8d07d1d566a7e21dd137cf6fe11ed5b\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:d098ce6162eb5e48fceb0745455bc950af059df6113eec83e916c129fca11408\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:048d55d36c02c6685a2b2741688503c3d15149694506655b6169dcfd3b6c2585\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c33211cfff9aec425bb1bfedaf94afcf337063aa273754f22779d6dadebef4c2\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e6d9db2fa4e9be171e9bb31cf2d2575574774966b43f5b951062bb2e67885852\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d4e049d5ad61448c9a020d1061eba20944c4887d720c4069724beb6ea1692507\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:cfa74aac64c85898b93d9c80bb935a96bf64985e28d4ee0f1a3d1f3bf11a5106\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:965693c2e9efd425b0f059f5be50ef830129f82892fa1858e220e424d9d0160f\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8501000a5eb8037c4b56857724797fe5a8b01853c363de91c8d0d0ad56bef319\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:8d92c552c6b7577402afdd547dcf5d31ea6c8ae31ad03f78226e055cfa37f3c6\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:1ee2086f490cb501d86b7e386c1eb4e3a0ccbb0c99067089efaa8c79012c8952\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:1de91e7fd7f525e10ea79a6e62c559d1b0278ec097ad83d9da378b6fab65a265\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:a4da514d13f4433e16960a17f05b67e0af30ac771719c9a9fb877e5004f74477\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-win32.whl\", hash = \"sha256:a40184c67db8252593ec518e17fb8a6e86d7259dc9f2d6c0bf4ff4db8cf1ad4b\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-win_amd64.whl\", hash = \"sha256:c4f28f1930b09a2c300357d8465b388cecb7e8b2f454a5d5425561710b7fd07f\"},\n    {file = \"rapidfuzz-3.9.7-cp311-cp311-win_arm64.whl\", hash = \"sha256:675b75412a943bb83f1f53e2e54fd18c80ef15ed642dc6eb0382d1949419d904\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:1ef6a1a8f0b12f8722f595f15c62950c9a02d5abc64742561299ffd49f6c6944\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:32532af1d70c6ec02ea5ac7ee2766dfff7c8ae8c761abfe8da9e527314e634e8\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ae1a38bade755aa9dd95a81cda949e1bf9cd92b79341ccc5e2189c9e7bdfc5ec\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d73ee2df41224c87336448d279b5b6a3a75f36e41dd3dcf538c0c9cce36360d8\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:be3a1fc3e2ab3bdf93dc0c83c00acca8afd2a80602297d96cf4a0ba028333cdf\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:603f48f621272a448ff58bb556feb4371252a02156593303391f5c3281dfaeac\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:268f8e1ca50fc61c0736f3fe9d47891424adf62d96ed30196f30f4bd8216b41f\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:5f8bf3f0d02935751d8660abda6044821a861f6229f7d359f98bcdcc7e66c39b\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:b997ff3b39d4cee9fb025d6c46b0a24bd67595ce5a5b652a97fb3a9d60beb651\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ca66676c8ef6557f9b81c5b2b519097817a7c776a6599b8d6fcc3e16edd216fe\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:35d3044cb635ca6b1b2b7b67b3597bd19f34f1753b129eb6d2ae04cf98cd3945\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:5a93c9e60904cb76e7aefef67afffb8b37c4894f81415ed513db090f29d01101\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-win32.whl\", hash = \"sha256:579d107102c0725f7c79b4e79f16d3cf4d7c9208f29c66b064fa1fd4641d5155\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-win_amd64.whl\", hash = \"sha256:953b3780765c8846866faf891ee4290f6a41a6dacf4fbcd3926f78c9de412ca6\"},\n    {file = \"rapidfuzz-3.9.7-cp312-cp312-win_arm64.whl\", hash = \"sha256:7c20c1474b068c4bd45bf2fd0ad548df284f74e9a14a68b06746c56e3aa8eb70\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:fde81b1da9a947f931711febe2e2bee694e891f6d3e6aa6bc02c1884702aea19\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:47e92c155a14f44511ea8ebcc6bc1535a1fe8d0a7d67ad3cc47ba61606df7bcf\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8772b745668260c5c4d069c678bbaa68812e6c69830f3771eaad521af7bc17f8\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:578302828dd97ee2ba507d2f71d62164e28d2fc7bc73aad0d2d1d2afc021a5d5\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fc3e6081069eea61593f1d6839029da53d00c8c9b205c5534853eaa3f031085c\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0b1c2d504eddf97bc0f2eba422c8915576dbf025062ceaca2d68aecd66324ad9\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6fb76e5a21034f0307c51c5a2fc08856f698c53a4c593b17d291f7d6e9d09ca3\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:d4ba2318ef670ce505f42881a5d2af70f948124646947341a3c6ccb33cd70369\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:057bb03f39e285047d7e9412e01ecf31bb2d42b9466a5409d715d587460dd59b\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:a8feac9006d5c9758438906f093befffc4290de75663dbb2098461df7c7d28dd\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:95b8292383e717e10455f2c917df45032b611141e43d1adf70f71b1566136b11\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e9fbf659537d246086d0297628b3795dc3e4a384101ecc01e5791c827b8d7345\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-win32.whl\", hash = \"sha256:1dc516ac6d32027be2b0196bedf6d977ac26debd09ca182376322ad620460feb\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-win_amd64.whl\", hash = \"sha256:b4f86e09d3064dca0b014cd48688964036a904a2d28048f00c8f4640796d06a8\"},\n    {file = \"rapidfuzz-3.9.7-cp313-cp313-win_arm64.whl\", hash = \"sha256:19c64d8ddb2940b42a4567b23f1681af77f50a5ff6c9b8e85daba079c210716e\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:fbda3dd68d8b28ccb20ffb6f756fefd9b5ba570a772bedd7643ed441f5793308\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:2379e0b2578ad3ac7004f223251550f08bca873ff76c169b09410ec562ad78d8\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5d1eff95362f993b0276fd3839aee48625b09aac8938bb0c23b40d219cba5dc5\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cd9360e30041690912525a210e48a897b49b230768cc8af1c702e5395690464f\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a93cd834b3c315ab437f0565ee3a2f42dd33768dc885ccbabf9710b131cf70d2\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4ff196996240db7075f62c7bc4506f40a3c80cd4ae3ab0e79ac6892283a90859\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:948dcee7aaa1cd14358b2a7ef08bf0be42bf89049c3a906669874a715fc2c937\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:d95751f505a301af1aaf086c19f34536056d6c8efa91b2240de532a3db57b543\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:90db86fa196eecf96cb6db09f1083912ea945c50c57188039392d810d0b784e1\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3171653212218a162540a3c8eb8ae7d3dcc8548540b69eaecaf3b47c14d89c90\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:36dd6e820379c37a1ffefc8a52b648758e867cd9d78ee5b5dc0c9a6a10145378\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:7b702de95666a1f7d5c6b47eacadfe2d2794af3742d63d2134767d13e5d1c713\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-win32.whl\", hash = \"sha256:9030e7238c0df51aed5c9c5ed8eee2bdd47a2ae788e562c1454af2851c3d1906\"},\n    {file = \"rapidfuzz-3.9.7-cp38-cp38-win_amd64.whl\", hash = \"sha256:f847fb0fbfb72482b1c05c59cbb275c58a55b73708a7f77a83f8035ee3c86497\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:97f2ce529d2a70a60c290f6ab269a2bbf1d3b47b9724dccc84339b85f7afb044\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:e2957fdad10bb83b1982b02deb3604a3f6911a5e545f518b59c741086f92d152\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5d5262383634626eb45c536017204b8163a03bc43bda880cf1bdd7885db9a163\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:364587827d7cbd41afa0782adc2d2d19e3f07d355b0750a02a8e33ad27a9c368\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ecc24af7f905f3d6efb371a01680116ffea8d64e266618fb9ad1602a9b4f7934\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9dc86aa6b29d174713c5f4caac35ffb7f232e3e649113e8d13812b35ab078228\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e3dcfbe7266e74a707173a12a7b355a531f2dcfbdb32f09468e664330da14874\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:b23806fbdd6b510ba9ac93bb72d503066263b0fba44b71b835be9f063a84025f\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:5551d68264c1bb6943f542da83a4dc8940ede52c5847ef158698799cc28d14f5\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:13d8675a1fa7e2b19650ca7ef9a6ec01391d4bb12ab9e0793e8eb024538b4a34\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:9b6a5de507b9be6de688dae40143b656f7a93b10995fb8bd90deb555e7875c60\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:111a20a3c090cf244d9406e60500b6c34b2375ba3a5009e2b38fd806fe38e337\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-win32.whl\", hash = \"sha256:22589c0b8ccc6c391ce7f776c93a8c92c96ab8d34e1a19f1bd2b12a235332632\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:6f83221db5755b8f34222e40607d87f1176a8d5d4dbda4a55a0f0b67d588a69c\"},\n    {file = \"rapidfuzz-3.9.7-cp39-cp39-win_arm64.whl\", hash = \"sha256:3665b92e788578c3bb334bd5b5fa7ee1a84bafd68be438e3110861d1578c63a0\"},\n    {file = \"rapidfuzz-3.9.7-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:d7df9c2194c7ec930b33c991c55dbd0c10951bd25800c0b7a7b571994ebbced5\"},\n    {file = \"rapidfuzz-3.9.7-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:68bd888eafd07b09585dcc8bc2716c5ecdb7eed62827470664d25588982b2873\"},\n    {file = \"rapidfuzz-3.9.7-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d1230e0f9026851a6a432beaa0ce575dda7b39fe689b576f99a0704fbb81fc9c\"},\n    {file = \"rapidfuzz-3.9.7-pp310-pypy310_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a3b36e1c61b796ae1777f3e9e11fd39898b09d351c9384baf6e3b7e6191d8ced\"},\n    {file = \"rapidfuzz-3.9.7-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9dba13d86806fcf3fe9c9919f58575e0090eadfb89c058bde02bcc7ab24e4548\"},\n    {file = \"rapidfuzz-3.9.7-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:1f1a33e84056b7892c721d84475d3bde49a145126bc4c6efe0d6d0d59cb31c29\"},\n    {file = \"rapidfuzz-3.9.7-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:3492c7a42b7fa9f0051d7fcce9893e95ed91c97c9ec7fb64346f3e070dd318ed\"},\n    {file = \"rapidfuzz-3.9.7-pp38-pypy38_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:ece45eb2af8b00f90d10f7419322e8804bd42fb1129026f9bfe712c37508b514\"},\n    {file = \"rapidfuzz-3.9.7-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9dcd14cf4876f04b488f6e54a7abd3e9b31db5f5a6aba0ce90659917aaa8c088\"},\n    {file = \"rapidfuzz-3.9.7-pp38-pypy38_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:521c58c72ed8a612b25cda378ff10dee17e6deb4ee99a070b723519a345527b9\"},\n    {file = \"rapidfuzz-3.9.7-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:18669bb6cdf7d40738526d37e550df09ba065b5a7560f3d802287988b6cb63cf\"},\n    {file = \"rapidfuzz-3.9.7-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:7abe2dbae81120a64bb4f8d3fcafe9122f328c9f86d7f327f174187a5af4ed86\"},\n    {file = \"rapidfuzz-3.9.7-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:a3c0783910911f4f24655826d007c9f4360f08107410952c01ee3df98c713eb2\"},\n    {file = \"rapidfuzz-3.9.7-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:03126f9a040ff21d2a110610bfd6b93b79377ce8b4121edcb791d61b7df6eec5\"},\n    {file = \"rapidfuzz-3.9.7-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:591908240f4085e2ade5b685c6e8346e2ed44932cffeaac2fb32ddac95b55c7f\"},\n    {file = \"rapidfuzz-3.9.7-pp39-pypy39_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e9012d86c6397edbc9da4ac0132de7f8ee9d6ce857f4194d5684c4ddbcdd1c5c\"},\n    {file = \"rapidfuzz-3.9.7-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:df596ddd3db38aa513d4c0995611267b3946e7cbe5a8761b50e9306dfec720ee\"},\n    {file = \"rapidfuzz-3.9.7-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:3ed5adb752f4308fcc8f4fb6f8eb7aa4082f9d12676fda0a74fa5564242a8107\"},\n    {file = \"rapidfuzz-3.9.7.tar.gz\", hash = \"sha256:f1c7296534c1afb6f495aa95871f14ccdc197c6db42965854e483100df313030\"},\n]\n\n[package.extras]\nfull = [\"numpy\"]\n\n[[package]]\nname = \"readchar\"\nversion = \"4.2.1\"\ndescription = \"Library to easily read single chars and key strokes\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"readchar-4.2.1-py3-none-any.whl\", hash = \"sha256:a769305cd3994bb5fa2764aa4073452dc105a4ec39068ffe6efd3c20c60acc77\"},\n    {file = \"readchar-4.2.1.tar.gz\", hash = \"sha256:91ce3faf07688de14d800592951e5575e9c7a3213738ed01d394dcc949b79adb\"},\n]\n\n[[package]]\nname = \"requests\"\nversion = \"2.32.3\"\ndescription = \"Python HTTP for Humans.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"requests-2.32.3-py3-none-any.whl\", hash = \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"},\n    {file = \"requests-2.32.3.tar.gz\", hash = \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\"},\n]\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset-normalizer = \">=2,<4\"\nidna = \">=2.5,<4\"\nurllib3 = \">=1.21.1,<3\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\"]\nuse-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]\n\n[[package]]\nname = \"requests-toolbelt\"\nversion = \"1.0.0\"\ndescription = \"A utility belt for advanced users of python-requests\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"requests-toolbelt-1.0.0.tar.gz\", hash = \"sha256:7681a0a3d047012b5bdc0ee37d7f8f07ebe76ab08caeccfc3921ce23c88d5bc6\"},\n    {file = \"requests_toolbelt-1.0.0-py2.py3-none-any.whl\", hash = \"sha256:cccfdd665f0a24fcf4726e690f65639d272bb0637b9b92dfd91a5568ccf6bd06\"},\n]\n\n[package.dependencies]\nrequests = \">=2.0.1,<3.0.0\"\n\n[[package]]\nname = \"rich\"\nversion = \"13.9.4\"\ndescription = \"Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"rich-13.9.4-py3-none-any.whl\", hash = \"sha256:6049d5e6ec054bf2779ab3358186963bac2ea89175919d699e378b99738c2a90\"},\n    {file = \"rich-13.9.4.tar.gz\", hash = \"sha256:439594978a49a09530cff7ebc4b5c7103ef57baf48d5ea3184f21d9a2befa098\"},\n]\n\n[package.dependencies]\nmarkdown-it-py = \">=2.2.0\"\npygments = \">=2.13.0,<3.0.0\"\ntyping-extensions = {version = \">=4.0.0,<5.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\njupyter = [\"ipywidgets (>=7.5.1,<9)\"]\n\n[[package]]\nname = \"rich-click\"\nversion = \"1.8.5\"\ndescription = \"Format click help output nicely with rich\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"rich_click-1.8.5-py3-none-any.whl\", hash = \"sha256:0fab7bb5b66c15da17c210b4104277cd45f3653a7322e0098820a169880baee0\"},\n    {file = \"rich_click-1.8.5.tar.gz\", hash = \"sha256:a3eebe81da1c9da3c32f3810017c79bd687ff1b3fa35bfc9d8a3338797f1d1a1\"},\n]\n\n[package.dependencies]\nclick = \">=7\"\nrich = \">=10.7\"\ntyping_extensions = \">=4\"\n\n[package.extras]\ndev = [\"mypy\", \"packaging\", \"pre-commit\", \"pytest\", \"pytest-cov\", \"rich-codex\", \"ruff\", \"types-setuptools\"]\ndocs = [\"markdown_include\", \"mkdocs\", \"mkdocs-glightbox\", \"mkdocs-material-extensions\", \"mkdocs-material[imaging] (>=9.5.18,<9.6.0)\", \"mkdocs-rss-plugin\", \"mkdocstrings[python]\", \"rich-codex\"]\n\n[[package]]\nname = \"sanic\"\nversion = \"24.6.0\"\ndescription = \"A web server and web framework that's written to go fast. Build fast. Run fast.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"sanic-24.6.0-py3-none-any.whl\", hash = \"sha256:e2c6b392e213d85d9843cf27c64e3f2dacb3ec5c31c8c7ade4c404cd3030e994\"},\n    {file = \"sanic-24.6.0.tar.gz\", hash = \"sha256:2e0841e2c8c28e68a0e6fc570c42aafbbe3b385d7141b9f96997d9d6c17d7afb\"},\n]\n\n[package.dependencies]\naiofiles = \">=0.6.0\"\nhtml5tagger = \">=1.2.1\"\nhttptools = \">=0.0.10\"\nmultidict = \">=5.0,<7.0\"\nsanic-routing = \">=23.12.0\"\nsetuptools = \">=70.1.0\"\ntracerite = \">=1.0.0\"\ntyping-extensions = \">=4.4.0\"\nujson = {version = \">=1.35\", markers = \"sys_platform != \\\"win32\\\" and implementation_name == \\\"cpython\\\"\"}\nuvloop = {version = \">=0.15.0\", markers = \"sys_platform != \\\"win32\\\" and implementation_name == \\\"cpython\\\"\"}\nwebsockets = \">=10.0\"\n\n[package.extras]\nall = [\"autodocsumm (>=0.2.11)\", \"bandit\", \"beautifulsoup4\", \"chardet (==3.*)\", \"coverage\", \"cryptography\", \"docutils\", \"enum-tools[sphinx]\", \"m2r2\", \"mistune (<2.0.0)\", \"mypy\", \"pygments\", \"pytest (>=8.2.2)\", \"pytest-benchmark\", \"pytest-sanic\", \"ruff\", \"sanic-testing (>=23.6.0)\", \"slotscheck (>=0.8.0,<1)\", \"sphinx (>=2.1.2)\", \"sphinx-rtd-theme (>=0.4.3)\", \"towncrier\", \"tox\", \"types-ujson\", \"uvicorn\"]\ndev = [\"bandit\", \"beautifulsoup4\", \"chardet (==3.*)\", \"coverage\", \"cryptography\", \"docutils\", \"mypy\", \"pygments\", \"pytest (>=8.2.2)\", \"pytest-benchmark\", \"pytest-sanic\", \"ruff\", \"sanic-testing (>=23.6.0)\", \"slotscheck (>=0.8.0,<1)\", \"towncrier\", \"tox\", \"types-ujson\", \"uvicorn\"]\ndocs = [\"autodocsumm (>=0.2.11)\", \"docutils\", \"enum-tools[sphinx]\", \"m2r2\", \"mistune (<2.0.0)\", \"pygments\", \"sphinx (>=2.1.2)\", \"sphinx-rtd-theme (>=0.4.3)\"]\next = [\"sanic-ext\"]\nhttp3 = [\"aioquic\"]\ntest = [\"bandit\", \"beautifulsoup4\", \"chardet (==3.*)\", \"coverage\", \"docutils\", \"mypy\", \"pygments\", \"pytest (>=8.2.2)\", \"pytest-benchmark\", \"pytest-sanic\", \"ruff\", \"sanic-testing (>=23.6.0)\", \"slotscheck (>=0.8.0,<1)\", \"types-ujson\", \"uvicorn\"]\n\n[[package]]\nname = \"sanic-routing\"\nversion = \"23.12.0\"\ndescription = \"Core routing component for Sanic\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"sanic-routing-23.12.0.tar.gz\", hash = \"sha256:1dcadc62c443e48c852392dba03603f9862b6197fc4cba5bbefeb1ace0848b04\"},\n    {file = \"sanic_routing-23.12.0-py3-none-any.whl\", hash = \"sha256:1558a72afcb9046ed3134a5edae02fc1552cff08f0fff2e8d5de0877ea43ed73\"},\n]\n\n[[package]]\nname = \"sanic-testing\"\nversion = \"23.12.0\"\ndescription = \"Core testing clients for Sanic\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"sanic-testing-23.12.0.tar.gz\", hash = \"sha256:2b9c52b7314b7e1807958f41581e18b8254c5161c953e70fcf492e0dd2fe133f\"},\n    {file = \"sanic_testing-23.12.0-py3-none-any.whl\", hash = \"sha256:d809911fca49cba93e1df9de5c6ab8d95d91bdc03b18ba8a25b4e0b66c4e4c73\"},\n]\n\n[package.dependencies]\nhttpx = \">=0.18\"\n\n[package.extras]\ndev = [\"pytest\", \"pytest-asyncio\", \"sanic (>=22.12)\", \"setuptools\"]\n\n[[package]]\nname = \"secretstorage\"\nversion = \"3.3.3\"\ndescription = \"Python bindings to FreeDesktop.org Secret Service API\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"SecretStorage-3.3.3-py3-none-any.whl\", hash = \"sha256:f356e6628222568e3af06f2eba8df495efa13b3b63081dafd4f7d9a7b7bc9f99\"},\n    {file = \"SecretStorage-3.3.3.tar.gz\", hash = \"sha256:2403533ef369eca6d2ba81718576c5e0f564d5cca1b58f73a8b23e7d4eeebd77\"},\n]\n\n[package.dependencies]\ncryptography = \">=2.0\"\njeepney = \">=0.6\"\n\n[[package]]\nname = \"service-identity\"\nversion = \"24.2.0\"\ndescription = \"Service identity verification for pyOpenSSL & cryptography.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"service_identity-24.2.0-py3-none-any.whl\", hash = \"sha256:6b047fbd8a84fd0bb0d55ebce4031e400562b9196e1e0d3e0fe2b8a59f6d4a85\"},\n    {file = \"service_identity-24.2.0.tar.gz\", hash = \"sha256:b8683ba13f0d39c6cd5d625d2c5f65421d6d707b013b375c355751557cbe8e09\"},\n]\n\n[package.dependencies]\nattrs = \">=19.1.0\"\ncryptography = \"*\"\npyasn1 = \"*\"\npyasn1-modules = \"*\"\n\n[package.extras]\ndev = [\"coverage[toml] (>=5.0.2)\", \"idna\", \"mypy\", \"pyopenssl\", \"pytest\", \"types-pyopenssl\"]\ndocs = [\"furo\", \"myst-parser\", \"pyopenssl\", \"sphinx\", \"sphinx-notfound-page\"]\nidna = [\"idna\"]\nmypy = [\"idna\", \"mypy\", \"types-pyopenssl\"]\ntests = [\"coverage[toml] (>=5.0.2)\", \"pytest\"]\n\n[[package]]\nname = \"setuptools\"\nversion = \"75.3.0\"\ndescription = \"Easily download, build, install, upgrade, and uninstall Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"setuptools-75.3.0-py3-none-any.whl\", hash = \"sha256:f2504966861356aa38616760c0f66568e535562374995367b4e69c7143cf6bcd\"},\n    {file = \"setuptools-75.3.0.tar.gz\", hash = \"sha256:fba5dd4d766e97be1b1681d98712680ae8f2f26d7881245f2ce9e40714f1a686\"},\n]\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\", \"ruff (>=0.5.2)\"]\ncore = [\"importlib-metadata (>=6)\", \"importlib-resources (>=5.10.2)\", \"jaraco.collections\", \"jaraco.functools\", \"jaraco.text (>=3.7)\", \"more-itertools\", \"more-itertools (>=8.8)\", \"packaging\", \"packaging (>=24)\", \"platformdirs (>=4.2.2)\", \"tomli (>=2.0.1)\", \"wheel (>=0.43.0)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"pyproject-hooks (!=1.1)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (>=1,<2)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\", \"towncrier (<24.7)\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"build[virtualenv] (>=1.0.3)\", \"filelock (>=3.4.0)\", \"ini2toml[lite] (>=0.14)\", \"jaraco.develop (>=7.21)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"jaraco.test (>=5.5)\", \"packaging (>=23.2)\", \"pip (>=19.1)\", \"pyproject-hooks (!=1.1)\", \"pytest (>=6,!=8.1.*)\", \"pytest-home (>=0.5)\", \"pytest-perf\", \"pytest-subprocess\", \"pytest-timeout\", \"pytest-xdist (>=3)\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel (>=0.44.0)\"]\ntype = [\"importlib-metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (==1.12.*)\", \"pytest-mypy\"]\n\n[[package]]\nname = \"shellingham\"\nversion = \"1.5.4\"\ndescription = \"Tool to Detect Surrounding Shell\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"shellingham-1.5.4-py2.py3-none-any.whl\", hash = \"sha256:7ecfff8f2fd72616f7481040475a65b2bf8af90a56c89140852d1120324e8686\"},\n    {file = \"shellingham-1.5.4.tar.gz\", hash = \"sha256:8dbca0739d487e5bd35ab3ca4b36e11c4078f3a234bfce294b0a0291363404de\"},\n]\n\n[[package]]\nname = \"six\"\nversion = \"1.17.0\"\ndescription = \"Python 2 and 3 compatibility utilities\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,>=2.7\"\nfiles = [\n    {file = \"six-1.17.0-py2.py3-none-any.whl\", hash = \"sha256:4721f391ed90541fddacab5acf947aa0d3dc7d27b2e1e8eda2be8970586c3274\"},\n    {file = \"six-1.17.0.tar.gz\", hash = \"sha256:ff70335d468e7eb6ec65b95b99d3a2836546063f63acc5171de367e834932a81\"},\n]\n\n[[package]]\nname = \"sniffio\"\nversion = \"1.3.1\"\ndescription = \"Sniff out which async library your code is running under\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"sniffio-1.3.1-py3-none-any.whl\", hash = \"sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2\"},\n    {file = \"sniffio-1.3.1.tar.gz\", hash = \"sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc\"},\n]\n\n[[package]]\nname = \"sqlparse\"\nversion = \"0.5.3\"\ndescription = \"A non-validating SQL parser.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"sqlparse-0.5.3-py3-none-any.whl\", hash = \"sha256:cf2196ed3418f3ba5de6af7e82c694a9fbdbfecccdfc72e281548517081f16ca\"},\n    {file = \"sqlparse-0.5.3.tar.gz\", hash = \"sha256:09f67787f56a0b16ecdbde1bfc7f5d9c3371ca683cfeaa8e6ff60b4807ec9272\"},\n]\n\n[package.extras]\ndev = [\"build\", \"hatch\"]\ndoc = [\"sphinx\"]\n\n[[package]]\nname = \"starlette\"\nversion = \"0.41.3\"\ndescription = \"The little ASGI library that shines.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"starlette-0.41.3-py3-none-any.whl\", hash = \"sha256:44cedb2b7c77a9de33a8b74b2b90e9f50d11fcf25d8270ea525ad71a25374ff7\"},\n    {file = \"starlette-0.41.3.tar.gz\", hash = \"sha256:0e4ab3d16522a255be6b28260b938eae2482f98ce5cc934cb08dce8dc3ba5835\"},\n]\n\n[package.dependencies]\nanyio = \">=3.4.0,<5\"\ntyping-extensions = {version = \">=3.10.0\", markers = \"python_version < \\\"3.10\\\"\"}\n\n[package.extras]\nfull = [\"httpx (>=0.22.0)\", \"itsdangerous\", \"jinja2\", \"python-multipart (>=0.0.7)\", \"pyyaml\"]\n\n[[package]]\nname = \"taskgroup\"\nversion = \"0.2.1\"\ndescription = \"backport of asyncio.TaskGroup, asyncio.Runner and asyncio.timeout\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"taskgroup-0.2.1-py2.py3-none-any.whl\", hash = \"sha256:bff020b6e63408d1bcf952486cce05ed4c4e0747743c4762eb10b35726c89ab3\"},\n    {file = \"taskgroup-0.2.1.tar.gz\", hash = \"sha256:11fa9c2db1037188ac0b60c70fa979243d00b1fee1a6e61e3171c21c1af75f78\"},\n]\n\n[package.dependencies]\nexceptiongroup = \"*\"\ntyping_extensions = \">=4.12.2,<5\"\n\n[[package]]\nname = \"toml\"\nversion = \"0.10.2\"\ndescription = \"Python Library for Tom's Obvious, Minimal Language\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\nfiles = [\n    {file = \"toml-0.10.2-py2.py3-none-any.whl\", hash = \"sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b\"},\n    {file = \"toml-0.10.2.tar.gz\", hash = \"sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f\"},\n]\n\n[[package]]\nname = \"tomli\"\nversion = \"2.2.1\"\ndescription = \"A lil' TOML parser\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"tomli-2.2.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:678e4fa69e4575eb77d103de3df8a895e1591b48e740211bd1067378c69e8249\"},\n    {file = \"tomli-2.2.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:023aa114dd824ade0100497eb2318602af309e5a55595f76b626d6d9f3b7b0a6\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ece47d672db52ac607a3d9599a9d48dcb2f2f735c6c2d1f34130085bb12b112a\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6972ca9c9cc9f0acaa56a8ca1ff51e7af152a9f87fb64623e31d5c83700080ee\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c954d2250168d28797dd4e3ac5cf812a406cd5a92674ee4c8f123c889786aa8e\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8dd28b3e155b80f4d54beb40a441d366adcfe740969820caf156c019fb5c7ec4\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:e59e304978767a54663af13c07b3d1af22ddee3bb2fb0618ca1593e4f593a106\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:33580bccab0338d00994d7f16f4c4ec25b776af3ffaac1ed74e0b3fc95e885a8\"},\n    {file = \"tomli-2.2.1-cp311-cp311-win32.whl\", hash = \"sha256:465af0e0875402f1d226519c9904f37254b3045fc5084697cefb9bdde1ff99ff\"},\n    {file = \"tomli-2.2.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:2d0f2fdd22b02c6d81637a3c95f8cd77f995846af7414c5c4b8d0545afa1bc4b\"},\n    {file = \"tomli-2.2.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:4a8f6e44de52d5e6c657c9fe83b562f5f4256d8ebbfe4ff922c495620a7f6cea\"},\n    {file = \"tomli-2.2.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:8d57ca8095a641b8237d5b079147646153d22552f1c637fd3ba7f4b0b29167a8\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4e340144ad7ae1533cb897d406382b4b6fede8890a03738ff1683af800d54192\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:db2b95f9de79181805df90bedc5a5ab4c165e6ec3fe99f970d0e302f384ad222\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:40741994320b232529c802f8bc86da4e1aa9f413db394617b9a256ae0f9a7f77\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:400e720fe168c0f8521520190686ef8ef033fb19fc493da09779e592861b78c6\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:02abe224de6ae62c19f090f68da4e27b10af2b93213d36cf44e6e1c5abd19fdd\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b82ebccc8c8a36f2094e969560a1b836758481f3dc360ce9a3277c65f374285e\"},\n    {file = \"tomli-2.2.1-cp312-cp312-win32.whl\", hash = \"sha256:889f80ef92701b9dbb224e49ec87c645ce5df3fa2cc548664eb8a25e03127a98\"},\n    {file = \"tomli-2.2.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:7fc04e92e1d624a4a63c76474610238576942d6b8950a2d7f908a340494e67e4\"},\n    {file = \"tomli-2.2.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f4039b9cbc3048b2416cc57ab3bda989a6fcf9b36cf8937f01a6e731b64f80d7\"},\n    {file = \"tomli-2.2.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:286f0ca2ffeeb5b9bd4fcc8d6c330534323ec51b2f52da063b11c502da16f30c\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a92ef1a44547e894e2a17d24e7557a5e85a9e1d0048b0b5e7541f76c5032cb13\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9316dc65bed1684c9a98ee68759ceaed29d229e985297003e494aa825ebb0281\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e85e99945e688e32d5a35c1ff38ed0b3f41f43fad8df0bdf79f72b2ba7bc5272\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:ac065718db92ca818f8d6141b5f66369833d4a80a9d74435a268c52bdfa73140\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:d920f33822747519673ee656a4b6ac33e382eca9d331c87770faa3eef562aeb2\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a198f10c4d1b1375d7687bc25294306e551bf1abfa4eace6650070a5c1ae2744\"},\n    {file = \"tomli-2.2.1-cp313-cp313-win32.whl\", hash = \"sha256:d3f5614314d758649ab2ab3a62d4f2004c825922f9e370b29416484086b264ec\"},\n    {file = \"tomli-2.2.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:a38aa0308e754b0e3c67e344754dff64999ff9b513e691d0e786265c93583c69\"},\n    {file = \"tomli-2.2.1-py3-none-any.whl\", hash = \"sha256:cb55c73c5f4408779d0cf3eef9f762b9c9f147a77de7b258bef0a5628adc85cc\"},\n    {file = \"tomli-2.2.1.tar.gz\", hash = \"sha256:cd45e1dc79c835ce60f7404ec8119f2eb06d38b1deba146f07ced3bbc44505ff\"},\n]\n\n[[package]]\nname = \"tomlkit\"\nversion = \"0.13.2\"\ndescription = \"Style preserving TOML library\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"tomlkit-0.13.2-py3-none-any.whl\", hash = \"sha256:7a974427f6e119197f670fbbbeae7bef749a6c14e793db934baefc1b5f03efde\"},\n    {file = \"tomlkit-0.13.2.tar.gz\", hash = \"sha256:fff5fe59a87295b278abd31bec92c15d9bc4a06885ab12bcea52c71119392e79\"},\n]\n\n[[package]]\nname = \"tracerite\"\nversion = \"1.1.1\"\ndescription = \"Human-readable HTML tracebacks for Python exceptions\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"tracerite-1.1.1-py3-none-any.whl\", hash = \"sha256:3a787a9ecb1a136ea9ce17e6328e414ec414a4f644130af4e1e330bec2dece29\"},\n    {file = \"tracerite-1.1.1.tar.gz\", hash = \"sha256:6400a35a187747189e4bb8d4a8e471bd86d14dbdcc94bcad23f4eda023f41356\"},\n]\n\n[package.dependencies]\nhtml5tagger = \">=1.2.1\"\n\n[[package]]\nname = \"trove-classifiers\"\nversion = \"2024.10.21.16\"\ndescription = \"Canonical source for classifiers on PyPI (pypi.org).\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"trove_classifiers-2024.10.21.16-py3-none-any.whl\", hash = \"sha256:0fb11f1e995a757807a8ef1c03829fbd4998d817319abcef1f33165750f103be\"},\n    {file = \"trove_classifiers-2024.10.21.16.tar.gz\", hash = \"sha256:17cbd055d67d5e9d9de63293a8732943fabc21574e4c7b74edf112b4928cf5f3\"},\n]\n\n[[package]]\nname = \"twisted\"\nversion = \"24.11.0\"\ndescription = \"An asynchronous networking framework written in Python\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"twisted-24.11.0-py3-none-any.whl\", hash = \"sha256:fe403076c71f04d5d2d789a755b687c5637ec3bcd3b2b8252d76f2ba65f54261\"},\n    {file = \"twisted-24.11.0.tar.gz\", hash = \"sha256:695d0556d5ec579dcc464d2856b634880ed1319f45b10d19043f2b57eb0115b5\"},\n]\n\n[package.dependencies]\nattrs = \">=22.2.0\"\nautomat = \">=24.8.0\"\nconstantly = \">=15.1\"\nhyperlink = \">=17.1.1\"\nidna = {version = \">=2.4\", optional = true, markers = \"extra == \\\"tls\\\"\"}\nincremental = \">=24.7.0\"\npyopenssl = {version = \">=21.0.0\", optional = true, markers = \"extra == \\\"tls\\\"\"}\nservice-identity = {version = \">=18.1.0\", optional = true, markers = \"extra == \\\"tls\\\"\"}\ntyping-extensions = \">=4.2.0\"\nzope-interface = \">=5\"\n\n[package.extras]\nall-non-platform = [\"appdirs (>=1.4.0)\", \"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"bcrypt (>=3.1.3)\", \"cryptography (>=3.3)\", \"cryptography (>=3.3)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"h2 (>=3.2,<5.0)\", \"h2 (>=3.2,<5.0)\", \"httpx[http2] (>=0.27)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"hypothesis (>=6.56)\", \"idna (>=2.4)\", \"idna (>=2.4)\", \"priority (>=1.1.0,<2.0)\", \"priority (>=1.1.0,<2.0)\", \"pyhamcrest (>=2)\", \"pyhamcrest (>=2)\", \"pyopenssl (>=21.0.0)\", \"pyopenssl (>=21.0.0)\", \"pyserial (>=3.0)\", \"pyserial (>=3.0)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"service-identity (>=18.1.0)\", \"service-identity (>=18.1.0)\"]\nconch = [\"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"cryptography (>=3.3)\"]\ndev = [\"coverage (>=7.5,<8.0)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"pydoctor (>=23.9.0,<23.10.0)\", \"pyflakes (>=2.2,<3.0)\", \"pyhamcrest (>=2)\", \"python-subunit (>=1.4,<2.0)\", \"sphinx (>=6,<7)\", \"sphinx-rtd-theme (>=1.3,<2.0)\", \"towncrier (>=23.6,<24.0)\", \"twistedchecker (>=0.7,<1.0)\"]\ndev-release = [\"pydoctor (>=23.9.0,<23.10.0)\", \"pydoctor (>=23.9.0,<23.10.0)\", \"sphinx (>=6,<7)\", \"sphinx (>=6,<7)\", \"sphinx-rtd-theme (>=1.3,<2.0)\", \"sphinx-rtd-theme (>=1.3,<2.0)\", \"towncrier (>=23.6,<24.0)\", \"towncrier (>=23.6,<24.0)\"]\ngtk-platform = [\"appdirs (>=1.4.0)\", \"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"bcrypt (>=3.1.3)\", \"cryptography (>=3.3)\", \"cryptography (>=3.3)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"h2 (>=3.2,<5.0)\", \"h2 (>=3.2,<5.0)\", \"httpx[http2] (>=0.27)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"hypothesis (>=6.56)\", \"idna (>=2.4)\", \"idna (>=2.4)\", \"priority (>=1.1.0,<2.0)\", \"priority (>=1.1.0,<2.0)\", \"pygobject\", \"pygobject\", \"pyhamcrest (>=2)\", \"pyhamcrest (>=2)\", \"pyopenssl (>=21.0.0)\", \"pyopenssl (>=21.0.0)\", \"pyserial (>=3.0)\", \"pyserial (>=3.0)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"service-identity (>=18.1.0)\", \"service-identity (>=18.1.0)\"]\nhttp2 = [\"h2 (>=3.2,<5.0)\", \"priority (>=1.1.0,<2.0)\"]\nmacos-platform = [\"appdirs (>=1.4.0)\", \"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"bcrypt (>=3.1.3)\", \"cryptography (>=3.3)\", \"cryptography (>=3.3)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"h2 (>=3.2,<5.0)\", \"h2 (>=3.2,<5.0)\", \"httpx[http2] (>=0.27)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"hypothesis (>=6.56)\", \"idna (>=2.4)\", \"idna (>=2.4)\", \"priority (>=1.1.0,<2.0)\", \"priority (>=1.1.0,<2.0)\", \"pyhamcrest (>=2)\", \"pyhamcrest (>=2)\", \"pyobjc-core\", \"pyobjc-core\", \"pyobjc-framework-cfnetwork\", \"pyobjc-framework-cfnetwork\", \"pyobjc-framework-cocoa\", \"pyobjc-framework-cocoa\", \"pyopenssl (>=21.0.0)\", \"pyopenssl (>=21.0.0)\", \"pyserial (>=3.0)\", \"pyserial (>=3.0)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"service-identity (>=18.1.0)\", \"service-identity (>=18.1.0)\"]\nmypy = [\"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"coverage (>=7.5,<8.0)\", \"cryptography (>=3.3)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"h2 (>=3.2,<5.0)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"idna (>=2.4)\", \"mypy (==1.10.1)\", \"mypy-zope (==1.0.6)\", \"priority (>=1.1.0,<2.0)\", \"pydoctor (>=23.9.0,<23.10.0)\", \"pyflakes (>=2.2,<3.0)\", \"pyhamcrest (>=2)\", \"pyopenssl (>=21.0.0)\", \"pyserial (>=3.0)\", \"python-subunit (>=1.4,<2.0)\", \"pywin32 (!=226)\", \"service-identity (>=18.1.0)\", \"sphinx (>=6,<7)\", \"sphinx-rtd-theme (>=1.3,<2.0)\", \"towncrier (>=23.6,<24.0)\", \"twistedchecker (>=0.7,<1.0)\", \"types-pyopenssl\", \"types-setuptools\"]\nosx-platform = [\"appdirs (>=1.4.0)\", \"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"bcrypt (>=3.1.3)\", \"cryptography (>=3.3)\", \"cryptography (>=3.3)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"h2 (>=3.2,<5.0)\", \"h2 (>=3.2,<5.0)\", \"httpx[http2] (>=0.27)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"hypothesis (>=6.56)\", \"idna (>=2.4)\", \"idna (>=2.4)\", \"priority (>=1.1.0,<2.0)\", \"priority (>=1.1.0,<2.0)\", \"pyhamcrest (>=2)\", \"pyhamcrest (>=2)\", \"pyobjc-core\", \"pyobjc-core\", \"pyobjc-framework-cfnetwork\", \"pyobjc-framework-cfnetwork\", \"pyobjc-framework-cocoa\", \"pyobjc-framework-cocoa\", \"pyopenssl (>=21.0.0)\", \"pyopenssl (>=21.0.0)\", \"pyserial (>=3.0)\", \"pyserial (>=3.0)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"service-identity (>=18.1.0)\", \"service-identity (>=18.1.0)\"]\nserial = [\"pyserial (>=3.0)\", \"pywin32 (!=226)\"]\ntest = [\"cython-test-exception-raiser (>=1.0.2,<2)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"pyhamcrest (>=2)\"]\ntls = [\"idna (>=2.4)\", \"pyopenssl (>=21.0.0)\", \"service-identity (>=18.1.0)\"]\nwindows-platform = [\"appdirs (>=1.4.0)\", \"appdirs (>=1.4.0)\", \"bcrypt (>=3.1.3)\", \"bcrypt (>=3.1.3)\", \"cryptography (>=3.3)\", \"cryptography (>=3.3)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"cython-test-exception-raiser (>=1.0.2,<2)\", \"h2 (>=3.2,<5.0)\", \"h2 (>=3.2,<5.0)\", \"httpx[http2] (>=0.27)\", \"httpx[http2] (>=0.27)\", \"hypothesis (>=6.56)\", \"hypothesis (>=6.56)\", \"idna (>=2.4)\", \"idna (>=2.4)\", \"priority (>=1.1.0,<2.0)\", \"priority (>=1.1.0,<2.0)\", \"pyhamcrest (>=2)\", \"pyhamcrest (>=2)\", \"pyopenssl (>=21.0.0)\", \"pyopenssl (>=21.0.0)\", \"pyserial (>=3.0)\", \"pyserial (>=3.0)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"pywin32 (!=226)\", \"service-identity (>=18.1.0)\", \"service-identity (>=18.1.0)\", \"twisted-iocpsupport (>=1.0.2)\", \"twisted-iocpsupport (>=1.0.2)\"]\n\n[[package]]\nname = \"txaio\"\nversion = \"23.1.1\"\ndescription = \"Compatibility API between asyncio/Twisted/Trollius\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"txaio-23.1.1-py2.py3-none-any.whl\", hash = \"sha256:aaea42f8aad50e0ecfb976130ada140797e9dcb85fad2cf72b0f37f8cefcb490\"},\n    {file = \"txaio-23.1.1.tar.gz\", hash = \"sha256:f9a9216e976e5e3246dfd112ad7ad55ca915606b60b84a757ac769bd404ff704\"},\n]\n\n[package.extras]\nall = [\"twisted (>=20.3.0)\", \"zope.interface (>=5.2.0)\"]\ndev = [\"pep8 (>=1.6.2)\", \"pyenchant (>=1.6.6)\", \"pytest (>=2.6.4)\", \"pytest-cov (>=1.8.1)\", \"sphinx (>=1.2.3)\", \"sphinx-rtd-theme (>=0.1.9)\", \"sphinxcontrib-spelling (>=2.1.2)\", \"tox (>=2.1.1)\", \"tox-gh-actions (>=2.2.0)\", \"twine (>=1.6.5)\", \"wheel\"]\ntwisted = [\"twisted (>=20.3.0)\", \"zope.interface (>=5.2.0)\"]\n\n[[package]]\nname = \"typer\"\nversion = \"0.15.1\"\ndescription = \"Typer, build great CLIs. Easy to code. Based on Python type hints.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"typer-0.15.1-py3-none-any.whl\", hash = \"sha256:7994fb7b8155b64d3402518560648446072864beefd44aa2dc36972a5972e847\"},\n    {file = \"typer-0.15.1.tar.gz\", hash = \"sha256:a0588c0a7fa68a1978a069818657778f86abe6ff5ea6abf472f940a08bfe4f0a\"},\n]\n\n[package.dependencies]\nclick = \">=8.0.0\"\nrich = \">=10.11.0\"\nshellingham = \">=1.3.0\"\ntyping-extensions = \">=3.7.4.3\"\n\n[[package]]\nname = \"types-aiofiles\"\nversion = \"24.1.0.20240626\"\ndescription = \"Typing stubs for aiofiles\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types-aiofiles-24.1.0.20240626.tar.gz\", hash = \"sha256:48604663e24bc2d5038eac05ccc33e75799b0779e93e13d6a8f711ddc306ac08\"},\n    {file = \"types_aiofiles-24.1.0.20240626-py3-none-any.whl\", hash = \"sha256:7939eca4a8b4f9c6491b6e8ef160caee9a21d32e18534a57d5ed90aee47c66b4\"},\n]\n\n[[package]]\nname = \"types-certifi\"\nversion = \"2021.10.8.3\"\ndescription = \"Typing stubs for certifi\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"types-certifi-2021.10.8.3.tar.gz\", hash = \"sha256:72cf7798d165bc0b76e1c10dd1ea3097c7063c42c21d664523b928e88b554a4f\"},\n    {file = \"types_certifi-2021.10.8.3-py3-none-any.whl\", hash = \"sha256:b2d1e325e69f71f7c78e5943d410e650b4707bb0ef32e4ddf3da37f54176e88a\"},\n]\n\n[[package]]\nname = \"types-chardet\"\nversion = \"5.0.4.6\"\ndescription = \"Typing stubs for chardet\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"types-chardet-5.0.4.6.tar.gz\", hash = \"sha256:caf4c74cd13ccfd8b3313c314aba943b159de562a2573ed03137402b2bb37818\"},\n    {file = \"types_chardet-5.0.4.6-py3-none-any.whl\", hash = \"sha256:ea832d87e798abf1e4dfc73767807c2b7fee35d0003ae90348aea4ae00fb004d\"},\n]\n\n[[package]]\nname = \"types-deprecated\"\nversion = \"1.2.15.20241117\"\ndescription = \"Typing stubs for Deprecated\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types-Deprecated-1.2.15.20241117.tar.gz\", hash = \"sha256:924002c8b7fddec51ba4949788a702411a2e3636cd9b2a33abd8ee119701d77e\"},\n    {file = \"types_Deprecated-1.2.15.20241117-py3-none-any.whl\", hash = \"sha256:a0cc5e39f769fc54089fd8e005416b55d74aa03f6964d2ed1a0b0b2e28751884\"},\n]\n\n[[package]]\nname = \"types-freezegun\"\nversion = \"1.1.10\"\ndescription = \"Typing stubs for freezegun\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"types-freezegun-1.1.10.tar.gz\", hash = \"sha256:cb3a2d2eee950eacbaac0673ab50499823365ceb8c655babb1544a41446409ec\"},\n    {file = \"types_freezegun-1.1.10-py3-none-any.whl\", hash = \"sha256:fadebe72213e0674036153366205038e1f95c8ca96deb4ef9b71ddc15413543e\"},\n]\n\n[[package]]\nname = \"types-protobuf\"\nversion = \"4.25.0.20240417\"\ndescription = \"Typing stubs for protobuf\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types-protobuf-4.25.0.20240417.tar.gz\", hash = \"sha256:c34eff17b9b3a0adb6830622f0f302484e4c089f533a46e3f147568313544352\"},\n    {file = \"types_protobuf-4.25.0.20240417-py3-none-any.whl\", hash = \"sha256:e9b613227c2127e3d4881d75d93c93b4d6fd97b5f6a099a0b654a05351c8685d\"},\n]\n\n[[package]]\nname = \"types-python-dateutil\"\nversion = \"2.9.0.20241206\"\ndescription = \"Typing stubs for python-dateutil\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types_python_dateutil-2.9.0.20241206-py3-none-any.whl\", hash = \"sha256:e248a4bc70a486d3e3ec84d0dc30eec3a5f979d6e7ee4123ae043eedbb987f53\"},\n    {file = \"types_python_dateutil-2.9.0.20241206.tar.gz\", hash = \"sha256:18f493414c26ffba692a72369fea7a154c502646301ebfe3d56a04b3767284cb\"},\n]\n\n[[package]]\nname = \"types-pyyaml\"\nversion = \"6.0.12.20240917\"\ndescription = \"Typing stubs for PyYAML\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types-PyYAML-6.0.12.20240917.tar.gz\", hash = \"sha256:d1405a86f9576682234ef83bcb4e6fff7c9305c8b1fbad5e0bcd4f7dbdc9c587\"},\n    {file = \"types_PyYAML-6.0.12.20240917-py3-none-any.whl\", hash = \"sha256:392b267f1c0fe6022952462bf5d6523f31e37f6cea49b14cee7ad634b6301570\"},\n]\n\n[[package]]\nname = \"types-six\"\nversion = \"1.17.0.20241205\"\ndescription = \"Typing stubs for six\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types_six-1.17.0.20241205-py3-none-any.whl\", hash = \"sha256:a4947c2bdcd9ab69d44466a533a15839ff48ddc27223615cb8145d73ab805bc2\"},\n    {file = \"types_six-1.17.0.20241205.tar.gz\", hash = \"sha256:1f662347a8f3b2bf30517d629d82f591420df29811794b0bf3804e14d716f6e0\"},\n]\n\n[[package]]\nname = \"types-toml\"\nversion = \"0.10.8.20240310\"\ndescription = \"Typing stubs for toml\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types-toml-0.10.8.20240310.tar.gz\", hash = \"sha256:3d41501302972436a6b8b239c850b26689657e25281b48ff0ec06345b8830331\"},\n    {file = \"types_toml-0.10.8.20240310-py3-none-any.whl\", hash = \"sha256:627b47775d25fa29977d9c70dc0cbab3f314f32c8d8d0c012f2ef5de7aaec05d\"},\n]\n\n[[package]]\nname = \"types-typed-ast\"\nversion = \"1.5.8.7\"\ndescription = \"Typing stubs for typed-ast\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"types-typed-ast-1.5.8.7.tar.gz\", hash = \"sha256:f7795f6f9d597b35212314040b993f6613b51d81738edce3c1e3a3e9ef655124\"},\n    {file = \"types_typed_ast-1.5.8.7-py3-none-any.whl\", hash = \"sha256:97bdd9b4228f96c6904a76e10a050305ddadb529bd35e4d8234711e09c41b543\"},\n]\n\n[[package]]\nname = \"types-ujson\"\nversion = \"5.10.0.20240515\"\ndescription = \"Typing stubs for ujson\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"types-ujson-5.10.0.20240515.tar.gz\", hash = \"sha256:ceae7127f0dafe4af5dd0ecf98ee13e9d75951ef963b5c5a9b7ea92e0d71f0d7\"},\n    {file = \"types_ujson-5.10.0.20240515-py3-none-any.whl\", hash = \"sha256:02bafc36b3a93d2511757a64ff88bd505e0a57fba08183a9150fbcfcb2015310\"},\n]\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.12.2\"\ndescription = \"Backported and Experimental Type Hints for Python 3.8+\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"typing_extensions-4.12.2-py3-none-any.whl\", hash = \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\"},\n    {file = \"typing_extensions-4.12.2.tar.gz\", hash = \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"},\n]\n\n[[package]]\nname = \"typing-inspect\"\nversion = \"0.9.0\"\ndescription = \"Runtime inspection utilities for typing module.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"typing_inspect-0.9.0-py3-none-any.whl\", hash = \"sha256:9ee6fc59062311ef8547596ab6b955e1b8aa46242d854bfc78f4f6b0eff35f9f\"},\n    {file = \"typing_inspect-0.9.0.tar.gz\", hash = \"sha256:b23fc42ff6f6ef6954e4852c1fb512cdd18dbea03134f91f856a95ccc9461f78\"},\n]\n\n[package.dependencies]\nmypy-extensions = \">=0.3.0\"\ntyping-extensions = \">=3.7.4\"\n\n[[package]]\nname = \"tzdata\"\nversion = \"2024.2\"\ndescription = \"Provider of IANA time zone data\"\noptional = false\npython-versions = \">=2\"\nfiles = [\n    {file = \"tzdata-2024.2-py2.py3-none-any.whl\", hash = \"sha256:a48093786cdcde33cad18c2555e8532f34422074448fbc874186f0abd79565cd\"},\n    {file = \"tzdata-2024.2.tar.gz\", hash = \"sha256:7d85cc416e9382e69095b7bdf4afd9e3880418a2413feec7069d533d6b4e31cc\"},\n]\n\n[[package]]\nname = \"ujson\"\nversion = \"5.10.0\"\ndescription = \"Ultra fast JSON encoder and decoder for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"ujson-5.10.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2601aa9ecdbee1118a1c2065323bda35e2c5a2cf0797ef4522d485f9d3ef65bd\"},\n    {file = \"ujson-5.10.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:348898dd702fc1c4f1051bc3aacbf894caa0927fe2c53e68679c073375f732cf\"},\n    {file = \"ujson-5.10.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:22cffecf73391e8abd65ef5f4e4dd523162a3399d5e84faa6aebbf9583df86d6\"},\n    {file = \"ujson-5.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:26b0e2d2366543c1bb4fbd457446f00b0187a2bddf93148ac2da07a53fe51569\"},\n    {file = \"ujson-5.10.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:caf270c6dba1be7a41125cd1e4fc7ba384bf564650beef0df2dd21a00b7f5770\"},\n    {file = \"ujson-5.10.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:a245d59f2ffe750446292b0094244df163c3dc96b3ce152a2c837a44e7cda9d1\"},\n    {file = \"ujson-5.10.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:94a87f6e151c5f483d7d54ceef83b45d3a9cca7a9cb453dbdbb3f5a6f64033f5\"},\n    {file = \"ujson-5.10.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:29b443c4c0a113bcbb792c88bea67b675c7ca3ca80c3474784e08bba01c18d51\"},\n    {file = \"ujson-5.10.0-cp310-cp310-win32.whl\", hash = \"sha256:c18610b9ccd2874950faf474692deee4223a994251bc0a083c114671b64e6518\"},\n    {file = \"ujson-5.10.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:924f7318c31874d6bb44d9ee1900167ca32aa9b69389b98ecbde34c1698a250f\"},\n    {file = \"ujson-5.10.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:a5b366812c90e69d0f379a53648be10a5db38f9d4ad212b60af00bd4048d0f00\"},\n    {file = \"ujson-5.10.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:502bf475781e8167f0f9d0e41cd32879d120a524b22358e7f205294224c71126\"},\n    {file = \"ujson-5.10.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5b91b5d0d9d283e085e821651184a647699430705b15bf274c7896f23fe9c9d8\"},\n    {file = \"ujson-5.10.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:129e39af3a6d85b9c26d5577169c21d53821d8cf68e079060602e861c6e5da1b\"},\n    {file = \"ujson-5.10.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f77b74475c462cb8b88680471193064d3e715c7c6074b1c8c412cb526466efe9\"},\n    {file = \"ujson-5.10.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:7ec0ca8c415e81aa4123501fee7f761abf4b7f386aad348501a26940beb1860f\"},\n    {file = \"ujson-5.10.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ab13a2a9e0b2865a6c6db9271f4b46af1c7476bfd51af1f64585e919b7c07fd4\"},\n    {file = \"ujson-5.10.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:57aaf98b92d72fc70886b5a0e1a1ca52c2320377360341715dd3933a18e827b1\"},\n    {file = \"ujson-5.10.0-cp311-cp311-win32.whl\", hash = \"sha256:2987713a490ceb27edff77fb184ed09acdc565db700ee852823c3dc3cffe455f\"},\n    {file = \"ujson-5.10.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:f00ea7e00447918ee0eff2422c4add4c5752b1b60e88fcb3c067d4a21049a720\"},\n    {file = \"ujson-5.10.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:98ba15d8cbc481ce55695beee9f063189dce91a4b08bc1d03e7f0152cd4bbdd5\"},\n    {file = \"ujson-5.10.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:a9d2edbf1556e4f56e50fab7d8ff993dbad7f54bac68eacdd27a8f55f433578e\"},\n    {file = \"ujson-5.10.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6627029ae4f52d0e1a2451768c2c37c0c814ffc04f796eb36244cf16b8e57043\"},\n    {file = \"ujson-5.10.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f8ccb77b3e40b151e20519c6ae6d89bfe3f4c14e8e210d910287f778368bb3d1\"},\n    {file = \"ujson-5.10.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f3caf9cd64abfeb11a3b661329085c5e167abbe15256b3b68cb5d914ba7396f3\"},\n    {file = \"ujson-5.10.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6e32abdce572e3a8c3d02c886c704a38a1b015a1fb858004e03d20ca7cecbb21\"},\n    {file = \"ujson-5.10.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:a65b6af4d903103ee7b6f4f5b85f1bfd0c90ba4eeac6421aae436c9988aa64a2\"},\n    {file = \"ujson-5.10.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:604a046d966457b6cdcacc5aa2ec5314f0e8c42bae52842c1e6fa02ea4bda42e\"},\n    {file = \"ujson-5.10.0-cp312-cp312-win32.whl\", hash = \"sha256:6dea1c8b4fc921bf78a8ff00bbd2bfe166345f5536c510671bccececb187c80e\"},\n    {file = \"ujson-5.10.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:38665e7d8290188b1e0d57d584eb8110951a9591363316dd41cf8686ab1d0abc\"},\n    {file = \"ujson-5.10.0-cp313-cp313-macosx_10_9_x86_64.whl\", hash = \"sha256:618efd84dc1acbd6bff8eaa736bb6c074bfa8b8a98f55b61c38d4ca2c1f7f287\"},\n    {file = \"ujson-5.10.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:38d5d36b4aedfe81dfe251f76c0467399d575d1395a1755de391e58985ab1c2e\"},\n    {file = \"ujson-5.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:67079b1f9fb29ed9a2914acf4ef6c02844b3153913eb735d4bf287ee1db6e557\"},\n    {file = \"ujson-5.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d7d0e0ceeb8fe2468c70ec0c37b439dd554e2aa539a8a56365fd761edb418988\"},\n    {file = \"ujson-5.10.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:59e02cd37bc7c44d587a0ba45347cc815fb7a5fe48de16bf05caa5f7d0d2e816\"},\n    {file = \"ujson-5.10.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:2a890b706b64e0065f02577bf6d8ca3b66c11a5e81fb75d757233a38c07a1f20\"},\n    {file = \"ujson-5.10.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:621e34b4632c740ecb491efc7f1fcb4f74b48ddb55e65221995e74e2d00bbff0\"},\n    {file = \"ujson-5.10.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:b9500e61fce0cfc86168b248104e954fead61f9be213087153d272e817ec7b4f\"},\n    {file = \"ujson-5.10.0-cp313-cp313-win32.whl\", hash = \"sha256:4c4fc16f11ac1612f05b6f5781b384716719547e142cfd67b65d035bd85af165\"},\n    {file = \"ujson-5.10.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:4573fd1695932d4f619928fd09d5d03d917274381649ade4328091ceca175539\"},\n    {file = \"ujson-5.10.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:a984a3131da7f07563057db1c3020b1350a3e27a8ec46ccbfbf21e5928a43050\"},\n    {file = \"ujson-5.10.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:73814cd1b9db6fc3270e9d8fe3b19f9f89e78ee9d71e8bd6c9a626aeaeaf16bd\"},\n    {file = \"ujson-5.10.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:61e1591ed9376e5eddda202ec229eddc56c612b61ac6ad07f96b91460bb6c2fb\"},\n    {file = \"ujson-5.10.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d2c75269f8205b2690db4572a4a36fe47cd1338e4368bc73a7a0e48789e2e35a\"},\n    {file = \"ujson-5.10.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7223f41e5bf1f919cd8d073e35b229295aa8e0f7b5de07ed1c8fddac63a6bc5d\"},\n    {file = \"ujson-5.10.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:d4dc2fd6b3067c0782e7002ac3b38cf48608ee6366ff176bbd02cf969c9c20fe\"},\n    {file = \"ujson-5.10.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:232cc85f8ee3c454c115455195a205074a56ff42608fd6b942aa4c378ac14dd7\"},\n    {file = \"ujson-5.10.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:cc6139531f13148055d691e442e4bc6601f6dba1e6d521b1585d4788ab0bfad4\"},\n    {file = \"ujson-5.10.0-cp38-cp38-win32.whl\", hash = \"sha256:e7ce306a42b6b93ca47ac4a3b96683ca554f6d35dd8adc5acfcd55096c8dfcb8\"},\n    {file = \"ujson-5.10.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:e82d4bb2138ab05e18f089a83b6564fee28048771eb63cdecf4b9b549de8a2cc\"},\n    {file = \"ujson-5.10.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:dfef2814c6b3291c3c5f10065f745a1307d86019dbd7ea50e83504950136ed5b\"},\n    {file = \"ujson-5.10.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:4734ee0745d5928d0ba3a213647f1c4a74a2a28edc6d27b2d6d5bd9fa4319e27\"},\n    {file = \"ujson-5.10.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d47ebb01bd865fdea43da56254a3930a413f0c5590372a1241514abae8aa7c76\"},\n    {file = \"ujson-5.10.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dee5e97c2496874acbf1d3e37b521dd1f307349ed955e62d1d2f05382bc36dd5\"},\n    {file = \"ujson-5.10.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7490655a2272a2d0b072ef16b0b58ee462f4973a8f6bbe64917ce5e0a256f9c0\"},\n    {file = \"ujson-5.10.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:ba17799fcddaddf5c1f75a4ba3fd6441f6a4f1e9173f8a786b42450851bd74f1\"},\n    {file = \"ujson-5.10.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:2aff2985cef314f21d0fecc56027505804bc78802c0121343874741650a4d3d1\"},\n    {file = \"ujson-5.10.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:ad88ac75c432674d05b61184178635d44901eb749786c8eb08c102330e6e8996\"},\n    {file = \"ujson-5.10.0-cp39-cp39-win32.whl\", hash = \"sha256:2544912a71da4ff8c4f7ab5606f947d7299971bdd25a45e008e467ca638d13c9\"},\n    {file = \"ujson-5.10.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:3ff201d62b1b177a46f113bb43ad300b424b7847f9c5d38b1b4ad8f75d4a282a\"},\n    {file = \"ujson-5.10.0-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:5b6fee72fa77dc172a28f21693f64d93166534c263adb3f96c413ccc85ef6e64\"},\n    {file = \"ujson-5.10.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:61d0af13a9af01d9f26d2331ce49bb5ac1fb9c814964018ac8df605b5422dcb3\"},\n    {file = \"ujson-5.10.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ecb24f0bdd899d368b715c9e6664166cf694d1e57be73f17759573a6986dd95a\"},\n    {file = \"ujson-5.10.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fbd8fd427f57a03cff3ad6574b5e299131585d9727c8c366da4624a9069ed746\"},\n    {file = \"ujson-5.10.0-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:beeaf1c48e32f07d8820c705ff8e645f8afa690cca1544adba4ebfa067efdc88\"},\n    {file = \"ujson-5.10.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:baed37ea46d756aca2955e99525cc02d9181de67f25515c468856c38d52b5f3b\"},\n    {file = \"ujson-5.10.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:7663960f08cd5a2bb152f5ee3992e1af7690a64c0e26d31ba7b3ff5b2ee66337\"},\n    {file = \"ujson-5.10.0-pp38-pypy38_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:d8640fb4072d36b08e95a3a380ba65779d356b2fee8696afeb7794cf0902d0a1\"},\n    {file = \"ujson-5.10.0-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:78778a3aa7aafb11e7ddca4e29f46bc5139131037ad628cc10936764282d6753\"},\n    {file = \"ujson-5.10.0-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b0111b27f2d5c820e7f2dbad7d48e3338c824e7ac4d2a12da3dc6061cc39c8e6\"},\n    {file = \"ujson-5.10.0-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:c66962ca7565605b355a9ed478292da628b8f18c0f2793021ca4425abf8b01e5\"},\n    {file = \"ujson-5.10.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:ba43cc34cce49cf2d4bc76401a754a81202d8aa926d0e2b79f0ee258cb15d3a4\"},\n    {file = \"ujson-5.10.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:ac56eb983edce27e7f51d05bc8dd820586c6e6be1c5216a6809b0c668bb312b8\"},\n    {file = \"ujson-5.10.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f44bd4b23a0e723bf8b10628288c2c7c335161d6840013d4d5de20e48551773b\"},\n    {file = \"ujson-5.10.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7c10f4654e5326ec14a46bcdeb2b685d4ada6911050aa8baaf3501e57024b804\"},\n    {file = \"ujson-5.10.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0de4971a89a762398006e844ae394bd46991f7c385d7a6a3b93ba229e6dac17e\"},\n    {file = \"ujson-5.10.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:e1402f0564a97d2a52310ae10a64d25bcef94f8dd643fcf5d310219d915484f7\"},\n    {file = \"ujson-5.10.0.tar.gz\", hash = \"sha256:b3cd8f3c5d8c7738257f1018880444f7b7d9b66232c64649f562d7ba86ad4bc1\"},\n]\n\n[[package]]\nname = \"urllib3\"\nversion = \"1.26.20\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7\"\nfiles = [\n    {file = \"urllib3-1.26.20-py2.py3-none-any.whl\", hash = \"sha256:0ed14ccfbf1c30a9072c7ca157e4319b70d65f623e91e7b32fadb2853431016e\"},\n    {file = \"urllib3-1.26.20.tar.gz\", hash = \"sha256:40c2dc0c681e47eb8f90e7e27bf6ff7df2e677421fd46756da1161c39ca70d32\"},\n]\n\n[package.extras]\nbrotli = [\"brotli (==1.0.9)\", \"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\", \"brotlipy (>=0.6.0)\"]\nsecure = [\"certifi\", \"cryptography (>=1.3.4)\", \"idna (>=2.0.0)\", \"ipaddress\", \"pyOpenSSL (>=0.14)\", \"urllib3-secure-extra\"]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7,<2.0)\"]\n\n[[package]]\nname = \"uvicorn\"\nversion = \"0.33.0\"\ndescription = \"The lightning-fast ASGI server.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"uvicorn-0.33.0-py3-none-any.whl\", hash = \"sha256:2c30de4aeea83661a520abab179b24084a0019c0c1bbe137e5409f741cbde5f8\"},\n    {file = \"uvicorn-0.33.0.tar.gz\", hash = \"sha256:3577119f82b7091cf4d3d4177bfda0bae4723ed92ab1439e8d779de880c9cc59\"},\n]\n\n[package.dependencies]\nclick = \">=7.0\"\nh11 = \">=0.8\"\ntyping-extensions = {version = \">=4.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\nstandard = [\"colorama (>=0.4)\", \"httptools (>=0.6.3)\", \"python-dotenv (>=0.13)\", \"pyyaml (>=5.1)\", \"uvloop (>=0.14.0,!=0.15.0,!=0.15.1)\", \"watchfiles (>=0.13)\", \"websockets (>=10.4)\"]\n\n[[package]]\nname = \"uvloop\"\nversion = \"0.21.0\"\ndescription = \"Fast implementation of asyncio event loop on top of libuv\"\noptional = false\npython-versions = \">=3.8.0\"\nfiles = [\n    {file = \"uvloop-0.21.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ec7e6b09a6fdded42403182ab6b832b71f4edaf7f37a9a0e371a01db5f0cb45f\"},\n    {file = \"uvloop-0.21.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:196274f2adb9689a289ad7d65700d37df0c0930fd8e4e743fa4834e850d7719d\"},\n    {file = \"uvloop-0.21.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f38b2e090258d051d68a5b14d1da7203a3c3677321cf32a95a6f4db4dd8b6f26\"},\n    {file = \"uvloop-0.21.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:87c43e0f13022b998eb9b973b5e97200c8b90823454d4bc06ab33829e09fb9bb\"},\n    {file = \"uvloop-0.21.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:10d66943def5fcb6e7b37310eb6b5639fd2ccbc38df1177262b0640c3ca68c1f\"},\n    {file = \"uvloop-0.21.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:67dd654b8ca23aed0a8e99010b4c34aca62f4b7fce88f39d452ed7622c94845c\"},\n    {file = \"uvloop-0.21.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:c0f3fa6200b3108919f8bdabb9a7f87f20e7097ea3c543754cabc7d717d95cf8\"},\n    {file = \"uvloop-0.21.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:0878c2640cf341b269b7e128b1a5fed890adc4455513ca710d77d5e93aa6d6a0\"},\n    {file = \"uvloop-0.21.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b9fb766bb57b7388745d8bcc53a359b116b8a04c83a2288069809d2b3466c37e\"},\n    {file = \"uvloop-0.21.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8a375441696e2eda1c43c44ccb66e04d61ceeffcd76e4929e527b7fa401b90fb\"},\n    {file = \"uvloop-0.21.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:baa0e6291d91649c6ba4ed4b2f982f9fa165b5bbd50a9e203c416a2797bab3c6\"},\n    {file = \"uvloop-0.21.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:4509360fcc4c3bd2c70d87573ad472de40c13387f5fda8cb58350a1d7475e58d\"},\n    {file = \"uvloop-0.21.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:359ec2c888397b9e592a889c4d72ba3d6befba8b2bb01743f72fffbde663b59c\"},\n    {file = \"uvloop-0.21.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:f7089d2dc73179ce5ac255bdf37c236a9f914b264825fdaacaded6990a7fb4c2\"},\n    {file = \"uvloop-0.21.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:baa4dcdbd9ae0a372f2167a207cd98c9f9a1ea1188a8a526431eef2f8116cc8d\"},\n    {file = \"uvloop-0.21.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:86975dca1c773a2c9864f4c52c5a55631038e387b47eaf56210f873887b6c8dc\"},\n    {file = \"uvloop-0.21.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:461d9ae6660fbbafedd07559c6a2e57cd553b34b0065b6550685f6653a98c1cb\"},\n    {file = \"uvloop-0.21.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:183aef7c8730e54c9a3ee3227464daed66e37ba13040bb3f350bc2ddc040f22f\"},\n    {file = \"uvloop-0.21.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:bfd55dfcc2a512316e65f16e503e9e450cab148ef11df4e4e679b5e8253a5281\"},\n    {file = \"uvloop-0.21.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:787ae31ad8a2856fc4e7c095341cccc7209bd657d0e71ad0dc2ea83c4a6fa8af\"},\n    {file = \"uvloop-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5ee4d4ef48036ff6e5cfffb09dd192c7a5027153948d85b8da7ff705065bacc6\"},\n    {file = \"uvloop-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3df876acd7ec037a3d005b3ab85a7e4110422e4d9c1571d4fc89b0fc41b6816\"},\n    {file = \"uvloop-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:bd53ecc9a0f3d87ab847503c2e1552b690362e005ab54e8a48ba97da3924c0dc\"},\n    {file = \"uvloop-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a5c39f217ab3c663dc699c04cbd50c13813e31d917642d459fdcec07555cc553\"},\n    {file = \"uvloop-0.21.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:17df489689befc72c39a08359efac29bbee8eee5209650d4b9f34df73d22e414\"},\n    {file = \"uvloop-0.21.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:bc09f0ff191e61c2d592a752423c767b4ebb2986daa9ed62908e2b1b9a9ae206\"},\n    {file = \"uvloop-0.21.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f0ce1b49560b1d2d8a2977e3ba4afb2414fb46b86a1b64056bc4ab929efdafbe\"},\n    {file = \"uvloop-0.21.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e678ad6fe52af2c58d2ae3c73dc85524ba8abe637f134bf3564ed07f555c5e79\"},\n    {file = \"uvloop-0.21.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:460def4412e473896ef179a1671b40c039c7012184b627898eea5072ef6f017a\"},\n    {file = \"uvloop-0.21.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:10da8046cc4a8f12c91a1c39d1dd1585c41162a15caaef165c2174db9ef18bdc\"},\n    {file = \"uvloop-0.21.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:c097078b8031190c934ed0ebfee8cc5f9ba9642e6eb88322b9958b649750f72b\"},\n    {file = \"uvloop-0.21.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:46923b0b5ee7fc0020bef24afe7836cb068f5050ca04caf6b487c513dc1a20b2\"},\n    {file = \"uvloop-0.21.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:53e420a3afe22cdcf2a0f4846e377d16e718bc70103d7088a4f7623567ba5fb0\"},\n    {file = \"uvloop-0.21.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:88cb67cdbc0e483da00af0b2c3cdad4b7c61ceb1ee0f33fe00e09c81e3a6cb75\"},\n    {file = \"uvloop-0.21.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:221f4f2a1f46032b403bf3be628011caf75428ee3cc204a22addf96f586b19fd\"},\n    {file = \"uvloop-0.21.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:2d1f581393673ce119355d56da84fe1dd9d2bb8b3d13ce792524e1607139feff\"},\n    {file = \"uvloop-0.21.0.tar.gz\", hash = \"sha256:3bf12b0fda68447806a7ad847bfa591613177275d35b6724b1ee573faa3704e3\"},\n]\n\n[package.extras]\ndev = [\"Cython (>=3.0,<4.0)\", \"setuptools (>=60)\"]\ndocs = [\"Sphinx (>=4.1.2,<4.2.0)\", \"sphinx-rtd-theme (>=0.5.2,<0.6.0)\", \"sphinxcontrib-asyncio (>=0.3.0,<0.4.0)\"]\ntest = [\"aiohttp (>=3.10.5)\", \"flake8 (>=5.0,<6.0)\", \"mypy (>=0.800)\", \"psutil\", \"pyOpenSSL (>=23.0.0,<23.1.0)\", \"pycodestyle (>=2.9.0,<2.10.0)\"]\n\n[[package]]\nname = \"virtualenv\"\nversion = \"20.28.0\"\ndescription = \"Virtual Python Environment builder\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"virtualenv-20.28.0-py3-none-any.whl\", hash = \"sha256:23eae1b4516ecd610481eda647f3a7c09aea295055337331bb4e6892ecce47b0\"},\n    {file = \"virtualenv-20.28.0.tar.gz\", hash = \"sha256:2c9c3262bb8e7b87ea801d715fae4495e6032450c71d2309be9550e7364049aa\"},\n]\n\n[package.dependencies]\ndistlib = \">=0.3.7,<1\"\nfilelock = \">=3.12.2,<4\"\nplatformdirs = \">=3.9.1,<5\"\n\n[package.extras]\ndocs = [\"furo (>=2023.7.26)\", \"proselint (>=0.13)\", \"sphinx (>=7.1.2,!=7.3)\", \"sphinx-argparse (>=0.4)\", \"sphinxcontrib-towncrier (>=0.2.1a0)\", \"towncrier (>=23.6)\"]\ntest = [\"covdefaults (>=2.3)\", \"coverage (>=7.2.7)\", \"coverage-enable-subprocess (>=1)\", \"flaky (>=3.7)\", \"packaging (>=23.1)\", \"pytest (>=7.4)\", \"pytest-env (>=0.8.2)\", \"pytest-freezer (>=0.4.8)\", \"pytest-mock (>=3.11.1)\", \"pytest-randomly (>=3.12)\", \"pytest-timeout (>=2.1)\", \"setuptools (>=68)\", \"time-machine (>=2.10)\"]\n\n[[package]]\nname = \"wcwidth\"\nversion = \"0.2.13\"\ndescription = \"Measures the displayed width of unicode strings in a terminal\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"wcwidth-0.2.13-py2.py3-none-any.whl\", hash = \"sha256:3da69048e4540d84af32131829ff948f1e022c1c6bdb8d6102117aac784f6859\"},\n    {file = \"wcwidth-0.2.13.tar.gz\", hash = \"sha256:72ea0c06399eb286d978fdedb6923a9eb47e1c486ce63e9b4e64fc18303972b5\"},\n]\n\n[[package]]\nname = \"websockets\"\nversion = \"13.1\"\ndescription = \"An implementation of the WebSocket Protocol (RFC 6455 & 7692)\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"websockets-13.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:f48c749857f8fb598fb890a75f540e3221d0976ed0bf879cf3c7eef34151acee\"},\n    {file = \"websockets-13.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c7e72ce6bda6fb9409cc1e8164dd41d7c91466fb599eb047cfda72fe758a34a7\"},\n    {file = \"websockets-13.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:f779498eeec470295a2b1a5d97aa1bc9814ecd25e1eb637bd9d1c73a327387f6\"},\n    {file = \"websockets-13.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4676df3fe46956fbb0437d8800cd5f2b6d41143b6e7e842e60554398432cf29b\"},\n    {file = \"websockets-13.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a7affedeb43a70351bb811dadf49493c9cfd1ed94c9c70095fd177e9cc1541fa\"},\n    {file = \"websockets-13.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1971e62d2caa443e57588e1d82d15f663b29ff9dfe7446d9964a4b6f12c1e700\"},\n    {file = \"websockets-13.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:5f2e75431f8dc4a47f31565a6e1355fb4f2ecaa99d6b89737527ea917066e26c\"},\n    {file = \"websockets-13.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:58cf7e75dbf7e566088b07e36ea2e3e2bd5676e22216e4cad108d4df4a7402a0\"},\n    {file = \"websockets-13.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:c90d6dec6be2c7d03378a574de87af9b1efea77d0c52a8301dd831ece938452f\"},\n    {file = \"websockets-13.1-cp310-cp310-win32.whl\", hash = \"sha256:730f42125ccb14602f455155084f978bd9e8e57e89b569b4d7f0f0c17a448ffe\"},\n    {file = \"websockets-13.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:5993260f483d05a9737073be197371940c01b257cc45ae3f1d5d7adb371b266a\"},\n    {file = \"websockets-13.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:61fc0dfcda609cda0fc9fe7977694c0c59cf9d749fbb17f4e9483929e3c48a19\"},\n    {file = \"websockets-13.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ceec59f59d092c5007e815def4ebb80c2de330e9588e101cf8bd94c143ec78a5\"},\n    {file = \"websockets-13.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c1dca61c6db1166c48b95198c0b7d9c990b30c756fc2923cc66f68d17dc558fd\"},\n    {file = \"websockets-13.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:308e20f22c2c77f3f39caca508e765f8725020b84aa963474e18c59accbf4c02\"},\n    {file = \"websockets-13.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:62d516c325e6540e8a57b94abefc3459d7dab8ce52ac75c96cad5549e187e3a7\"},\n    {file = \"websockets-13.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:87c6e35319b46b99e168eb98472d6c7d8634ee37750d7693656dc766395df096\"},\n    {file = \"websockets-13.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:5f9fee94ebafbc3117c30be1844ed01a3b177bb6e39088bc6b2fa1dc15572084\"},\n    {file = \"websockets-13.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:7c1e90228c2f5cdde263253fa5db63e6653f1c00e7ec64108065a0b9713fa1b3\"},\n    {file = \"websockets-13.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:6548f29b0e401eea2b967b2fdc1c7c7b5ebb3eeb470ed23a54cd45ef078a0db9\"},\n    {file = \"websockets-13.1-cp311-cp311-win32.whl\", hash = \"sha256:c11d4d16e133f6df8916cc5b7e3e96ee4c44c936717d684a94f48f82edb7c92f\"},\n    {file = \"websockets-13.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:d04f13a1d75cb2b8382bdc16ae6fa58c97337253826dfe136195b7f89f661557\"},\n    {file = \"websockets-13.1-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:9d75baf00138f80b48f1eac72ad1535aac0b6461265a0bcad391fc5aba875cfc\"},\n    {file = \"websockets-13.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:9b6f347deb3dcfbfde1c20baa21c2ac0751afaa73e64e5b693bb2b848efeaa49\"},\n    {file = \"websockets-13.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:de58647e3f9c42f13f90ac7e5f58900c80a39019848c5547bc691693098ae1bd\"},\n    {file = \"websockets-13.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a1b54689e38d1279a51d11e3467dd2f3a50f5f2e879012ce8f2d6943f00e83f0\"},\n    {file = \"websockets-13.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cf1781ef73c073e6b0f90af841aaf98501f975d306bbf6221683dd594ccc52b6\"},\n    {file = \"websockets-13.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8d23b88b9388ed85c6faf0e74d8dec4f4d3baf3ecf20a65a47b836d56260d4b9\"},\n    {file = \"websockets-13.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:3c78383585f47ccb0fcf186dcb8a43f5438bd7d8f47d69e0b56f71bf431a0a68\"},\n    {file = \"websockets-13.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:d6d300f8ec35c24025ceb9b9019ae9040c1ab2f01cddc2bcc0b518af31c75c14\"},\n    {file = \"websockets-13.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:a9dcaf8b0cc72a392760bb8755922c03e17a5a54e08cca58e8b74f6902b433cf\"},\n    {file = \"websockets-13.1-cp312-cp312-win32.whl\", hash = \"sha256:2f85cf4f2a1ba8f602298a853cec8526c2ca42a9a4b947ec236eaedb8f2dc80c\"},\n    {file = \"websockets-13.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:38377f8b0cdeee97c552d20cf1865695fcd56aba155ad1b4ca8779a5b6ef4ac3\"},\n    {file = \"websockets-13.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:a9ab1e71d3d2e54a0aa646ab6d4eebfaa5f416fe78dfe4da2839525dc5d765c6\"},\n    {file = \"websockets-13.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:b9d7439d7fab4dce00570bb906875734df13d9faa4b48e261c440a5fec6d9708\"},\n    {file = \"websockets-13.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:327b74e915cf13c5931334c61e1a41040e365d380f812513a255aa804b183418\"},\n    {file = \"websockets-13.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:325b1ccdbf5e5725fdcb1b0e9ad4d2545056479d0eee392c291c1bf76206435a\"},\n    {file = \"websockets-13.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:346bee67a65f189e0e33f520f253d5147ab76ae42493804319b5716e46dddf0f\"},\n    {file = \"websockets-13.1-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:91a0fa841646320ec0d3accdff5b757b06e2e5c86ba32af2e0815c96c7a603c5\"},\n    {file = \"websockets-13.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:18503d2c5f3943e93819238bf20df71982d193f73dcecd26c94514f417f6b135\"},\n    {file = \"websockets-13.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:a9cd1af7e18e5221d2878378fbc287a14cd527fdd5939ed56a18df8a31136bb2\"},\n    {file = \"websockets-13.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:70c5be9f416aa72aab7a2a76c90ae0a4fe2755c1816c153c1a2bcc3333ce4ce6\"},\n    {file = \"websockets-13.1-cp313-cp313-win32.whl\", hash = \"sha256:624459daabeb310d3815b276c1adef475b3e6804abaf2d9d2c061c319f7f187d\"},\n    {file = \"websockets-13.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:c518e84bb59c2baae725accd355c8dc517b4a3ed8db88b4bc93c78dae2974bf2\"},\n    {file = \"websockets-13.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:c7934fd0e920e70468e676fe7f1b7261c1efa0d6c037c6722278ca0228ad9d0d\"},\n    {file = \"websockets-13.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:149e622dc48c10ccc3d2760e5f36753db9cacf3ad7bc7bbbfd7d9c819e286f23\"},\n    {file = \"websockets-13.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:a569eb1b05d72f9bce2ebd28a1ce2054311b66677fcd46cf36204ad23acead8c\"},\n    {file = \"websockets-13.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:95df24ca1e1bd93bbca51d94dd049a984609687cb2fb08a7f2c56ac84e9816ea\"},\n    {file = \"websockets-13.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d8dbb1bf0c0a4ae8b40bdc9be7f644e2f3fb4e8a9aca7145bfa510d4a374eeb7\"},\n    {file = \"websockets-13.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:035233b7531fb92a76beefcbf479504db8c72eb3bff41da55aecce3a0f729e54\"},\n    {file = \"websockets-13.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:e4450fc83a3df53dec45922b576e91e94f5578d06436871dce3a6be38e40f5db\"},\n    {file = \"websockets-13.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:463e1c6ec853202dd3657f156123d6b4dad0c546ea2e2e38be2b3f7c5b8e7295\"},\n    {file = \"websockets-13.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:6d6855bbe70119872c05107e38fbc7f96b1d8cb047d95c2c50869a46c65a8e96\"},\n    {file = \"websockets-13.1-cp38-cp38-win32.whl\", hash = \"sha256:204e5107f43095012b00f1451374693267adbb832d29966a01ecc4ce1db26faf\"},\n    {file = \"websockets-13.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:485307243237328c022bc908b90e4457d0daa8b5cf4b3723fd3c4a8012fce4c6\"},\n    {file = \"websockets-13.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:9b37c184f8b976f0c0a231a5f3d6efe10807d41ccbe4488df8c74174805eea7d\"},\n    {file = \"websockets-13.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:163e7277e1a0bd9fb3c8842a71661ad19c6aa7bb3d6678dc7f89b17fbcc4aeb7\"},\n    {file = \"websockets-13.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:4b889dbd1342820cc210ba44307cf75ae5f2f96226c0038094455a96e64fb07a\"},\n    {file = \"websockets-13.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:586a356928692c1fed0eca68b4d1c2cbbd1ca2acf2ac7e7ebd3b9052582deefa\"},\n    {file = \"websockets-13.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7bd6abf1e070a6b72bfeb71049d6ad286852e285f146682bf30d0296f5fbadfa\"},\n    {file = \"websockets-13.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6d2aad13a200e5934f5a6767492fb07151e1de1d6079c003ab31e1823733ae79\"},\n    {file = \"websockets-13.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:df01aea34b6e9e33572c35cd16bae5a47785e7d5c8cb2b54b2acdb9678315a17\"},\n    {file = \"websockets-13.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:e54affdeb21026329fb0744ad187cf812f7d3c2aa702a5edb562b325191fcab6\"},\n    {file = \"websockets-13.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:9ef8aa8bdbac47f4968a5d66462a2a0935d044bf35c0e5a8af152d58516dbeb5\"},\n    {file = \"websockets-13.1-cp39-cp39-win32.whl\", hash = \"sha256:deeb929efe52bed518f6eb2ddc00cc496366a14c726005726ad62c2dd9017a3c\"},\n    {file = \"websockets-13.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:7c65ffa900e7cc958cd088b9a9157a8141c991f8c53d11087e6fb7277a03f81d\"},\n    {file = \"websockets-13.1-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:5dd6da9bec02735931fccec99d97c29f47cc61f644264eb995ad6c0c27667238\"},\n    {file = \"websockets-13.1-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:2510c09d8e8df777177ee3d40cd35450dc169a81e747455cc4197e63f7e7bfe5\"},\n    {file = \"websockets-13.1-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f1c3cf67185543730888b20682fb186fc8d0fa6f07ccc3ef4390831ab4b388d9\"},\n    {file = \"websockets-13.1-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:bcc03c8b72267e97b49149e4863d57c2d77f13fae12066622dc78fe322490fe6\"},\n    {file = \"websockets-13.1-pp310-pypy310_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:004280a140f220c812e65f36944a9ca92d766b6cc4560be652a0a3883a79ed8a\"},\n    {file = \"websockets-13.1-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:e2620453c075abeb0daa949a292e19f56de518988e079c36478bacf9546ced23\"},\n    {file = \"websockets-13.1-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:9156c45750b37337f7b0b00e6248991a047be4aa44554c9886fe6bdd605aab3b\"},\n    {file = \"websockets-13.1-pp38-pypy38_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:80c421e07973a89fbdd93e6f2003c17d20b69010458d3a8e37fb47874bd67d51\"},\n    {file = \"websockets-13.1-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:82d0ba76371769d6a4e56f7e83bb8e81846d17a6190971e38b5de108bde9b0d7\"},\n    {file = \"websockets-13.1-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e9875a0143f07d74dc5e1ded1c4581f0d9f7ab86c78994e2ed9e95050073c94d\"},\n    {file = \"websockets-13.1-pp38-pypy38_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a11e38ad8922c7961447f35c7b17bffa15de4d17c70abd07bfbe12d6faa3e027\"},\n    {file = \"websockets-13.1-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:4059f790b6ae8768471cddb65d3c4fe4792b0ab48e154c9f0a04cefaabcd5978\"},\n    {file = \"websockets-13.1-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:25c35bf84bf7c7369d247f0b8cfa157f989862c49104c5cf85cb5436a641d93e\"},\n    {file = \"websockets-13.1-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:83f91d8a9bb404b8c2c41a707ac7f7f75b9442a0a876df295de27251a856ad09\"},\n    {file = \"websockets-13.1-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7a43cfdcddd07f4ca2b1afb459824dd3c6d53a51410636a2c7fc97b9a8cf4842\"},\n    {file = \"websockets-13.1-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:48a2ef1381632a2f0cb4efeff34efa97901c9fbc118e01951ad7cfc10601a9bb\"},\n    {file = \"websockets-13.1-pp39-pypy39_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:459bf774c754c35dbb487360b12c5727adab887f1622b8aed5755880a21c4a20\"},\n    {file = \"websockets-13.1-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:95858ca14a9f6fa8413d29e0a585b31b278388aa775b8a81fa24830123874678\"},\n    {file = \"websockets-13.1-py3-none-any.whl\", hash = \"sha256:a9a396a6ad26130cdae92ae10c36af09d9bfe6cafe69670fd3b6da9b07b4044f\"},\n    {file = \"websockets-13.1.tar.gz\", hash = \"sha256:a3b3366087c1bc0a2795111edcadddb8b3b59509d5db5d7ea3fdd69f954a8878\"},\n]\n\n[[package]]\nname = \"werkzeug\"\nversion = \"3.0.6\"\ndescription = \"The comprehensive WSGI web application library.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"werkzeug-3.0.6-py3-none-any.whl\", hash = \"sha256:1bc0c2310d2fbb07b1dd1105eba2f7af72f322e1e455f2f93c993bee8c8a5f17\"},\n    {file = \"werkzeug-3.0.6.tar.gz\", hash = \"sha256:a8dd59d4de28ca70471a34cba79bed5f7ef2e036a76b3ab0835474246eb41f8d\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=2.1.1\"\n\n[package.extras]\nwatchdog = [\"watchdog (>=2.3)\"]\n\n[[package]]\nname = \"wheel\"\nversion = \"0.45.1\"\ndescription = \"A built-package format for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"wheel-0.45.1-py3-none-any.whl\", hash = \"sha256:708e7481cc80179af0e556bbf0cc00b8444c7321e2700b8d8580231d13017248\"},\n    {file = \"wheel-0.45.1.tar.gz\", hash = \"sha256:661e1abd9198507b1409a20c02106d9670b2576e916d58f520316666abca6729\"},\n]\n\n[package.extras]\ntest = [\"pytest (>=6.0.0)\", \"setuptools (>=65)\"]\n\n[[package]]\nname = \"wrapt\"\nversion = \"1.17.0\"\ndescription = \"Module for decorators, wrappers and monkey patching.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"wrapt-1.17.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:2a0c23b8319848426f305f9cb0c98a6e32ee68a36264f45948ccf8e7d2b941f8\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b1ca5f060e205f72bec57faae5bd817a1560fcfc4af03f414b08fa29106b7e2d\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e185ec6060e301a7e5f8461c86fb3640a7beb1a0f0208ffde7a65ec4074931df\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bb90765dd91aed05b53cd7a87bd7f5c188fcd95960914bae0d32c5e7f899719d\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:879591c2b5ab0a7184258274c42a126b74a2c3d5a329df16d69f9cee07bba6ea\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:fce6fee67c318fdfb7f285c29a82d84782ae2579c0e1b385b7f36c6e8074fffb\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:0698d3a86f68abc894d537887b9bbf84d29bcfbc759e23f4644be27acf6da301\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-win32.whl\", hash = \"sha256:69d093792dc34a9c4c8a70e4973a3361c7a7578e9cd86961b2bbf38ca71e4e22\"},\n    {file = \"wrapt-1.17.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:f28b29dc158ca5d6ac396c8e0a2ef45c4e97bb7e65522bfc04c989e6fe814575\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:74bf625b1b4caaa7bad51d9003f8b07a468a704e0644a700e936c357c17dd45a\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0f2a28eb35cf99d5f5bd12f5dd44a0f41d206db226535b37b0c60e9da162c3ed\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:81b1289e99cf4bad07c23393ab447e5e96db0ab50974a280f7954b071d41b489\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f2939cd4a2a52ca32bc0b359015718472d7f6de870760342e7ba295be9ebaf9\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:6a9653131bda68a1f029c52157fd81e11f07d485df55410401f745007bd6d339\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:4e4b4385363de9052dac1a67bfb535c376f3d19c238b5f36bddc95efae15e12d\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:bdf62d25234290db1837875d4dceb2151e4ea7f9fff2ed41c0fde23ed542eb5b\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-win32.whl\", hash = \"sha256:5d8fd17635b262448ab8f99230fe4dac991af1dabdbb92f7a70a6afac8a7e346\"},\n    {file = \"wrapt-1.17.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:92a3d214d5e53cb1db8b015f30d544bc9d3f7179a05feb8f16df713cecc2620a\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:89fc28495896097622c3fc238915c79365dd0ede02f9a82ce436b13bd0ab7569\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:875d240fdbdbe9e11f9831901fb8719da0bd4e6131f83aa9f69b96d18fae7504\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e5ed16d95fd142e9c72b6c10b06514ad30e846a0d0917ab406186541fe68b451\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:18b956061b8db634120b58f668592a772e87e2e78bc1f6a906cfcaa0cc7991c1\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:daba396199399ccabafbfc509037ac635a6bc18510ad1add8fd16d4739cdd106\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:4d63f4d446e10ad19ed01188d6c1e1bb134cde8c18b0aa2acfd973d41fcc5ada\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:8a5e7cc39a45fc430af1aefc4d77ee6bad72c5bcdb1322cfde852c15192b8bd4\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-win32.whl\", hash = \"sha256:0a0a1a1ec28b641f2a3a2c35cbe86c00051c04fffcfcc577ffcdd707df3f8635\"},\n    {file = \"wrapt-1.17.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:3c34f6896a01b84bab196f7119770fd8466c8ae3dfa73c59c0bb281e7b588ce7\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:714c12485aa52efbc0fc0ade1e9ab3a70343db82627f90f2ecbc898fdf0bb181\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da427d311782324a376cacb47c1a4adc43f99fd9d996ffc1b3e8529c4074d393\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ba1739fb38441a27a676f4de4123d3e858e494fac05868b7a281c0a383c098f4\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e711fc1acc7468463bc084d1b68561e40d1eaa135d8c509a65dd534403d83d7b\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:140ea00c87fafc42739bd74a94a5a9003f8e72c27c47cd4f61d8e05e6dec8721\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:73a96fd11d2b2e77d623a7f26e004cc31f131a365add1ce1ce9a19e55a1eef90\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:0b48554952f0f387984da81ccfa73b62e52817a4386d070c75e4db7d43a28c4a\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-win32.whl\", hash = \"sha256:498fec8da10e3e62edd1e7368f4b24aa362ac0ad931e678332d1b209aec93045\"},\n    {file = \"wrapt-1.17.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:fd136bb85f4568fffca995bd3c8d52080b1e5b225dbf1c2b17b66b4c5fa02838\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:17fcf043d0b4724858f25b8826c36e08f9fb2e475410bece0ec44a22d533da9b\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e4a557d97f12813dc5e18dad9fa765ae44ddd56a672bb5de4825527c847d6379\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0229b247b0fc7dee0d36176cbb79dbaf2a9eb7ecc50ec3121f40ef443155fb1d\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8425cfce27b8b20c9b89d77fb50e368d8306a90bf2b6eef2cdf5cd5083adf83f\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:9c900108df470060174108012de06d45f514aa4ec21a191e7ab42988ff42a86c\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:4e547b447073fc0dbfcbff15154c1be8823d10dab4ad401bdb1575e3fdedff1b\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:914f66f3b6fc7b915d46c1cc424bc2441841083de01b90f9e81109c9759e43ab\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-win32.whl\", hash = \"sha256:a4192b45dff127c7d69b3bdfb4d3e47b64179a0b9900b6351859f3001397dabf\"},\n    {file = \"wrapt-1.17.0-cp313-cp313t-win_amd64.whl\", hash = \"sha256:4f643df3d4419ea3f856c5c3f40fec1d65ea2e89ec812c83f7767c8730f9827a\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:69c40d4655e078ede067a7095544bcec5a963566e17503e75a3a3e0fe2803b13\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2f495b6754358979379f84534f8dd7a43ff8cff2558dcdea4a148a6e713a758f\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:baa7ef4e0886a6f482e00d1d5bcd37c201b383f1d314643dfb0367169f94f04c\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a8fc931382e56627ec4acb01e09ce66e5c03c384ca52606111cee50d931a342d\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:8f8909cdb9f1b237786c09a810e24ee5e15ef17019f7cecb207ce205b9b5fcce\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:ad47b095f0bdc5585bced35bd088cbfe4177236c7df9984b3cc46b391cc60627\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:948a9bd0fb2c5120457b07e59c8d7210cbc8703243225dbd78f4dfc13c8d2d1f\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-win32.whl\", hash = \"sha256:5ae271862b2142f4bc687bdbfcc942e2473a89999a54231aa1c2c676e28f29ea\"},\n    {file = \"wrapt-1.17.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:f335579a1b485c834849e9075191c9898e0731af45705c2ebf70e0cd5d58beed\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:d751300b94e35b6016d4b1e7d0e7bbc3b5e1751e2405ef908316c2a9024008a1\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7264cbb4a18dc4acfd73b63e4bcfec9c9802614572025bdd44d0721983fc1d9c\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:33539c6f5b96cf0b1105a0ff4cf5db9332e773bb521cc804a90e58dc49b10578\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c30970bdee1cad6a8da2044febd824ef6dc4cc0b19e39af3085c763fdec7de33\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:bc7f729a72b16ee21795a943f85c6244971724819819a41ddbaeb691b2dd85ad\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:6ff02a91c4fc9b6a94e1c9c20f62ea06a7e375f42fe57587f004d1078ac86ca9\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:2dfb7cff84e72e7bf975b06b4989477873dcf160b2fd89959c629535df53d4e0\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-win32.whl\", hash = \"sha256:2399408ac33ffd5b200480ee858baa58d77dd30e0dd0cab6a8a9547135f30a88\"},\n    {file = \"wrapt-1.17.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:4f763a29ee6a20c529496a20a7bcb16a73de27f5da6a843249c7047daf135977\"},\n    {file = \"wrapt-1.17.0-py3-none-any.whl\", hash = \"sha256:d2c63b93548eda58abf5188e505ffed0229bf675f7c3090f8e36ad55b8cbc371\"},\n    {file = \"wrapt-1.17.0.tar.gz\", hash = \"sha256:16187aa2317c731170a88ef35e8937ae0f533c402872c1ee5e6d079fcf320801\"},\n]\n\n[[package]]\nname = \"wsproto\"\nversion = \"1.2.0\"\ndescription = \"WebSockets state-machine based protocol implementation\"\noptional = false\npython-versions = \">=3.7.0\"\nfiles = [\n    {file = \"wsproto-1.2.0-py3-none-any.whl\", hash = \"sha256:b9acddd652b585d75b20477888c56642fdade28bdfd3579aa24a4d2c037dd736\"},\n    {file = \"wsproto-1.2.0.tar.gz\", hash = \"sha256:ad565f26ecb92588a3e43bc3d96164de84cd9902482b130d0ddbaa9664a85065\"},\n]\n\n[package.dependencies]\nh11 = \">=0.9.0,<1\"\n\n[[package]]\nname = \"xattr\"\nversion = \"1.1.0\"\ndescription = \"Python wrapper for extended filesystem attributes\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"xattr-1.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ef2fa0f85458736178fd3dcfeb09c3cf423f0843313e25391db2cfd1acec8888\"},\n    {file = \"xattr-1.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:ccab735d0632fe71f7d72e72adf886f45c18b7787430467ce0070207882cfe25\"},\n    {file = \"xattr-1.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9013f290387f1ac90bccbb1926555ca9aef75651271098d99217284d9e010f7c\"},\n    {file = \"xattr-1.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9dcd5dfbcee73c7be057676ecb900cabb46c691aff4397bf48c579ffb30bb963\"},\n    {file = \"xattr-1.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6480589c1dac7785d1f851347a32c4a97305937bf7b488b857fe8b28a25de9e9\"},\n    {file = \"xattr-1.1.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:08f61cbed52dc6f7c181455826a9ff1e375ad86f67dd9d5eb7663574abb32451\"},\n    {file = \"xattr-1.1.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:918e1f83f2e8a072da2671eac710871ee5af337e9bf8554b5ce7f20cdb113186\"},\n    {file = \"xattr-1.1.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:0f06e0c1e4d06b4e0e49aaa1184b6f0e81c3758c2e8365597918054890763b53\"},\n    {file = \"xattr-1.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:46a641ac038a9f53d2f696716147ca4dbd6a01998dc9cd4bc628801bc0df7f4d\"},\n    {file = \"xattr-1.1.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:7e4ca0956fd11679bb2e0c0d6b9cdc0f25470cc00d8da173bb7656cc9a9cf104\"},\n    {file = \"xattr-1.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6881b120f9a4b36ccd8a28d933bc0f6e1de67218b6ce6e66874e0280fc006844\"},\n    {file = \"xattr-1.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:dab29d9288aa28e68a6f355ddfc3f0a7342b40c9012798829f3e7bd765e85c2c\"},\n    {file = \"xattr-1.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e0c80bbf55339c93770fc294b4b6586b5bf8e85ec00a4c2d585c33dbd84b5006\"},\n    {file = \"xattr-1.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d1418705f253b6b6a7224b69773842cac83fcbcd12870354b6e11dd1cd54630f\"},\n    {file = \"xattr-1.1.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:687e7d18611ef8d84a6ecd8f4d1ab6757500c1302f4c2046ce0aa3585e13da3f\"},\n    {file = \"xattr-1.1.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:b6ceb9efe0657a982ccb8b8a2efe96b690891779584c901d2f920784e5d20ae3\"},\n    {file = \"xattr-1.1.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:b489b7916f239100956ea0b39c504f3c3a00258ba65677e4c8ba1bd0b5513446\"},\n    {file = \"xattr-1.1.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:0a9c431b0e66516a078125e9a273251d4b8e5ba84fe644b619f2725050d688a0\"},\n    {file = \"xattr-1.1.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:1a5921ea3313cc1c57f2f53b63ea8ca9a91e48f4cc7ebec057d2447ec82c7efe\"},\n    {file = \"xattr-1.1.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:f6ad2a7bd5e6cf71d4a862413234a067cf158ca0ae94a40d4b87b98b62808498\"},\n    {file = \"xattr-1.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:0683dae7609f7280b0c89774d00b5957e6ffcb181c6019c46632b389706b77e6\"},\n    {file = \"xattr-1.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54cb15cd94e5ef8a0ef02309f1bf973ba0e13c11e87686e983f371948cfee6af\"},\n    {file = \"xattr-1.1.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff6223a854229055e803c2ad0c0ea9a6da50c6be30d92c198cf5f9f28819a921\"},\n    {file = \"xattr-1.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d44e8f955218638c9ab222eed21e9bd9ab430d296caf2176fb37abe69a714e5c\"},\n    {file = \"xattr-1.1.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:caab2c2986c30f92301f12e9c50415d324412e8e6a739a52a603c3e6a54b3610\"},\n    {file = \"xattr-1.1.0-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:d6eb7d5f281014cd44e2d847a9107491af1bf3087f5afeded75ed3e37ec87239\"},\n    {file = \"xattr-1.1.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:47a3bdfe034b4fdb70e5941d97037405e3904accc28e10dbef6d1c9061fb6fd7\"},\n    {file = \"xattr-1.1.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:00d2b415cf9d6a24112d019e721aa2a85652f7bbc9f3b9574b2d1cd8668eb491\"},\n    {file = \"xattr-1.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:78b377832dd0ee408f9f121a354082c6346960f7b6b1480483ed0618b1912120\"},\n    {file = \"xattr-1.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:6461a43b585e5f2e049b39bcbfcb6391bfef3c5118231f1b15d10bdb89ef17fe\"},\n    {file = \"xattr-1.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:24d97f0d28f63695e3344ffdabca9fcc30c33e5c8ccc198c7524361a98d526f2\"},\n    {file = \"xattr-1.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6ad47d89968c9097900607457a0c89160b4771601d813e769f68263755516065\"},\n    {file = \"xattr-1.1.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dc53cab265f6e8449bd683d5ee3bc5a191e6dd940736f3de1a188e6da66b0653\"},\n    {file = \"xattr-1.1.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:cd11e917f5b89f2a0ad639d9875943806c6c9309a3dd02da5a3e8ef92db7bed9\"},\n    {file = \"xattr-1.1.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:9c5a78c7558989492c4cb7242e490ffb03482437bf782967dfff114e44242343\"},\n    {file = \"xattr-1.1.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:cebcf8a303a44fbc439b68321408af7267507c0d8643229dbb107f6c132d389c\"},\n    {file = \"xattr-1.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b0d73150f2f9655b4da01c2369eb33a294b7f9d56eccb089819eafdbeb99f896\"},\n    {file = \"xattr-1.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:793c01deaadac50926c0e1481702133260c7cb5e62116762f6fe1543d07b826f\"},\n    {file = \"xattr-1.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:e189e440bcd04ccaad0474720abee6ee64890823ec0db361fb0a4fb5e843a1bf\"},\n    {file = \"xattr-1.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:afacebbc1fa519f41728f8746a92da891c7755e6745164bd0d5739face318e86\"},\n    {file = \"xattr-1.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9b1664edf003153ac8d1911e83a0fc60db1b1b374ee8ac943f215f93754a1102\"},\n    {file = \"xattr-1.1.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dda2684228798e937a7c29b0e1c7ef3d70e2b85390a69b42a1c61b2039ba81de\"},\n    {file = \"xattr-1.1.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:b735ac2625a4fc2c9343b19f806793db6494336338537d2911c8ee4c390dda46\"},\n    {file = \"xattr-1.1.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:fa6a7af7a4ada43f15ccc58b6f9adcdbff4c36ba040013d2681e589e07ae280a\"},\n    {file = \"xattr-1.1.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d1059b2f726e2702c8bbf9bbf369acfc042202a4cc576c2dec6791234ad5e948\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:e2255f36ebf2cb2dbf772a7437ad870836b7396e60517211834cf66ce678b595\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dba4f80b9855cc98513ddf22b7ad8551bc448c70d3147799ea4f6c0b758fb466\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4cb70c16e7c3ae6ba0ab6c6835c8448c61d8caf43ea63b813af1f4dbe83dd156\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:83652910ef6a368b77b00825ad67815e5c92bfab551a848ca66e9981d14a7519\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:7a92aff66c43fa3e44cbeab7cbeee66266c91178a0f595e044bf3ce51485743b\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9d4f71b673339aeaae1f6ea9ef8ea6c9643c8cd0df5003b9a0eaa75403e2e06c\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a20de1c47b5cd7b47da61799a3b34e11e5815d716299351f82a88627a43f9a96\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:23705c7079b05761ff2fa778ad17396e7599c8759401abc05b312dfb3bc99f69\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:27272afeba8422f2a9d27e1080a9a7b807394e88cce73db9ed8d2dde3afcfb87\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dd43978966de3baf4aea367c99ffa102b289d6c2ea5f3d9ce34a203dc2f2ab73\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ded771eaf27bb4eb3c64c0d09866460ee8801d81dc21097269cf495b3cac8657\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:96ca300c0acca4f0cddd2332bb860ef58e1465d376364f0e72a1823fdd58e90d\"},\n    {file = \"xattr-1.1.0.tar.gz\", hash = \"sha256:fecbf3b05043ed3487a28190dec3e4c4d879b2fcec0e30bafd8ec5d4b6043630\"},\n]\n\n[package.dependencies]\ncffi = \">=1.16.0\"\n\n[package.extras]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"yarl\"\nversion = \"1.15.2\"\ndescription = \"Yet another URL library\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"yarl-1.15.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:e4ee8b8639070ff246ad3649294336b06db37a94bdea0d09ea491603e0be73b8\"},\n    {file = \"yarl-1.15.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:a7cf963a357c5f00cb55b1955df8bbe68d2f2f65de065160a1c26b85a1e44172\"},\n    {file = \"yarl-1.15.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:43ebdcc120e2ca679dba01a779333a8ea76b50547b55e812b8b92818d604662c\"},\n    {file = \"yarl-1.15.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3433da95b51a75692dcf6cc8117a31410447c75a9a8187888f02ad45c0a86c50\"},\n    {file = \"yarl-1.15.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:38d0124fa992dbacd0c48b1b755d3ee0a9f924f427f95b0ef376556a24debf01\"},\n    {file = \"yarl-1.15.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ded1b1803151dd0f20a8945508786d57c2f97a50289b16f2629f85433e546d47\"},\n    {file = \"yarl-1.15.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ace4cad790f3bf872c082366c9edd7f8f8f77afe3992b134cfc810332206884f\"},\n    {file = \"yarl-1.15.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c77494a2f2282d9bbbbcab7c227a4d1b4bb829875c96251f66fb5f3bae4fb053\"},\n    {file = \"yarl-1.15.2-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:b7f227ca6db5a9fda0a2b935a2ea34a7267589ffc63c8045f0e4edb8d8dcf956\"},\n    {file = \"yarl-1.15.2-cp310-cp310-musllinux_1_2_armv7l.whl\", hash = \"sha256:31561a5b4d8dbef1559b3600b045607cf804bae040f64b5f5bca77da38084a8a\"},\n    {file = \"yarl-1.15.2-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3e52474256a7db9dcf3c5f4ca0b300fdea6c21cca0148c8891d03a025649d935\"},\n    {file = \"yarl-1.15.2-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:0e1af74a9529a1137c67c887ed9cde62cff53aa4d84a3adbec329f9ec47a3936\"},\n    {file = \"yarl-1.15.2-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:15c87339490100c63472a76d87fe7097a0835c705eb5ae79fd96e343473629ed\"},\n    {file = \"yarl-1.15.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:74abb8709ea54cc483c4fb57fb17bb66f8e0f04438cff6ded322074dbd17c7ec\"},\n    {file = \"yarl-1.15.2-cp310-cp310-win32.whl\", hash = \"sha256:ffd591e22b22f9cb48e472529db6a47203c41c2c5911ff0a52e85723196c0d75\"},\n    {file = \"yarl-1.15.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:1695497bb2a02a6de60064c9f077a4ae9c25c73624e0d43e3aa9d16d983073c2\"},\n    {file = \"yarl-1.15.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:9fcda20b2de7042cc35cf911702fa3d8311bd40055a14446c1e62403684afdc5\"},\n    {file = \"yarl-1.15.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:0545de8c688fbbf3088f9e8b801157923be4bf8e7b03e97c2ecd4dfa39e48e0e\"},\n    {file = \"yarl-1.15.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:fbda058a9a68bec347962595f50546a8a4a34fd7b0654a7b9697917dc2bf810d\"},\n    {file = \"yarl-1.15.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d1ac2bc069f4a458634c26b101c2341b18da85cb96afe0015990507efec2e417\"},\n    {file = \"yarl-1.15.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cd126498171f752dd85737ab1544329a4520c53eed3997f9b08aefbafb1cc53b\"},\n    {file = \"yarl-1.15.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3db817b4e95eb05c362e3b45dafe7144b18603e1211f4a5b36eb9522ecc62bcf\"},\n    {file = \"yarl-1.15.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:076b1ed2ac819933895b1a000904f62d615fe4533a5cf3e052ff9a1da560575c\"},\n    {file = \"yarl-1.15.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f8cfd847e6b9ecf9f2f2531c8427035f291ec286c0a4944b0a9fce58c6446046\"},\n    {file = \"yarl-1.15.2-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:32b66be100ac5739065496c74c4b7f3015cef792c3174982809274d7e51b3e04\"},\n    {file = \"yarl-1.15.2-cp311-cp311-musllinux_1_2_armv7l.whl\", hash = \"sha256:34a2d76a1984cac04ff8b1bfc939ec9dc0914821264d4a9c8fd0ed6aa8d4cfd2\"},\n    {file = \"yarl-1.15.2-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:0afad2cd484908f472c8fe2e8ef499facee54a0a6978be0e0cff67b1254fd747\"},\n    {file = \"yarl-1.15.2-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c68e820879ff39992c7f148113b46efcd6ec765a4865581f2902b3c43a5f4bbb\"},\n    {file = \"yarl-1.15.2-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:98f68df80ec6ca3015186b2677c208c096d646ef37bbf8b49764ab4a38183931\"},\n    {file = \"yarl-1.15.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:3c56ec1eacd0a5d35b8a29f468659c47f4fe61b2cab948ca756c39b7617f0aa5\"},\n    {file = \"yarl-1.15.2-cp311-cp311-win32.whl\", hash = \"sha256:eedc3f247ee7b3808ea07205f3e7d7879bc19ad3e6222195cd5fbf9988853e4d\"},\n    {file = \"yarl-1.15.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:0ccaa1bc98751fbfcf53dc8dfdb90d96e98838010fc254180dd6707a6e8bb179\"},\n    {file = \"yarl-1.15.2-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:82d5161e8cb8f36ec778fd7ac4d740415d84030f5b9ef8fe4da54784a1f46c94\"},\n    {file = \"yarl-1.15.2-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:fa2bea05ff0a8fb4d8124498e00e02398f06d23cdadd0fe027d84a3f7afde31e\"},\n    {file = \"yarl-1.15.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:99e12d2bf587b44deb74e0d6170fec37adb489964dbca656ec41a7cd8f2ff178\"},\n    {file = \"yarl-1.15.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:243fbbbf003754fe41b5bdf10ce1e7f80bcc70732b5b54222c124d6b4c2ab31c\"},\n    {file = \"yarl-1.15.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:856b7f1a7b98a8c31823285786bd566cf06226ac4f38b3ef462f593c608a9bd6\"},\n    {file = \"yarl-1.15.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:553dad9af802a9ad1a6525e7528152a015b85fb8dbf764ebfc755c695f488367\"},\n    {file = \"yarl-1.15.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:30c3ff305f6e06650a761c4393666f77384f1cc6c5c0251965d6bfa5fbc88f7f\"},\n    {file = \"yarl-1.15.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:353665775be69bbfc6d54c8d134bfc533e332149faeddd631b0bc79df0897f46\"},\n    {file = \"yarl-1.15.2-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:f4fe99ce44128c71233d0d72152db31ca119711dfc5f2c82385ad611d8d7f897\"},\n    {file = \"yarl-1.15.2-cp312-cp312-musllinux_1_2_armv7l.whl\", hash = \"sha256:9c1e3ff4b89cdd2e1a24c214f141e848b9e0451f08d7d4963cb4108d4d798f1f\"},\n    {file = \"yarl-1.15.2-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:711bdfae4e699a6d4f371137cbe9e740dc958530cb920eb6f43ff9551e17cfbc\"},\n    {file = \"yarl-1.15.2-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4388c72174868884f76affcdd3656544c426407e0043c89b684d22fb265e04a5\"},\n    {file = \"yarl-1.15.2-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:f0e1844ad47c7bd5d6fa784f1d4accc5f4168b48999303a868fe0f8597bde715\"},\n    {file = \"yarl-1.15.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:a5cafb02cf097a82d74403f7e0b6b9df3ffbfe8edf9415ea816314711764a27b\"},\n    {file = \"yarl-1.15.2-cp312-cp312-win32.whl\", hash = \"sha256:156ececdf636143f508770bf8a3a0498de64da5abd890c7dbb42ca9e3b6c05b8\"},\n    {file = \"yarl-1.15.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:435aca062444a7f0c884861d2e3ea79883bd1cd19d0a381928b69ae1b85bc51d\"},\n    {file = \"yarl-1.15.2-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:416f2e3beaeae81e2f7a45dc711258be5bdc79c940a9a270b266c0bec038fb84\"},\n    {file = \"yarl-1.15.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:173563f3696124372831007e3d4b9821746964a95968628f7075d9231ac6bb33\"},\n    {file = \"yarl-1.15.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:9ce2e0f6123a60bd1a7f5ae3b2c49b240c12c132847f17aa990b841a417598a2\"},\n    {file = \"yarl-1.15.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:eaea112aed589131f73d50d570a6864728bd7c0c66ef6c9154ed7b59f24da611\"},\n    {file = \"yarl-1.15.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e4ca3b9f370f218cc2a0309542cab8d0acdfd66667e7c37d04d617012485f904\"},\n    {file = \"yarl-1.15.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:23ec1d3c31882b2a8a69c801ef58ebf7bae2553211ebbddf04235be275a38548\"},\n    {file = \"yarl-1.15.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:75119badf45f7183e10e348edff5a76a94dc19ba9287d94001ff05e81475967b\"},\n    {file = \"yarl-1.15.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:78e6fdc976ec966b99e4daa3812fac0274cc28cd2b24b0d92462e2e5ef90d368\"},\n    {file = \"yarl-1.15.2-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:8657d3f37f781d987037f9cc20bbc8b40425fa14380c87da0cb8dfce7c92d0fb\"},\n    {file = \"yarl-1.15.2-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:93bed8a8084544c6efe8856c362af08a23e959340c87a95687fdbe9c9f280c8b\"},\n    {file = \"yarl-1.15.2-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:69d5856d526802cbda768d3e6246cd0d77450fa2a4bc2ea0ea14f0d972c2894b\"},\n    {file = \"yarl-1.15.2-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ccad2800dfdff34392448c4bf834be124f10a5bc102f254521d931c1c53c455a\"},\n    {file = \"yarl-1.15.2-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:a880372e2e5dbb9258a4e8ff43f13888039abb9dd6d515f28611c54361bc5644\"},\n    {file = \"yarl-1.15.2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:c998d0558805860503bc3a595994895ca0f7835e00668dadc673bbf7f5fbfcbe\"},\n    {file = \"yarl-1.15.2-cp313-cp313-win32.whl\", hash = \"sha256:533a28754e7f7439f217550a497bb026c54072dbe16402b183fdbca2431935a9\"},\n    {file = \"yarl-1.15.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:5838f2b79dc8f96fdc44077c9e4e2e33d7089b10788464609df788eb97d03aad\"},\n    {file = \"yarl-1.15.2-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:fbbb63bed5fcd70cd3dd23a087cd78e4675fb5a2963b8af53f945cbbca79ae16\"},\n    {file = \"yarl-1.15.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:e2e93b88ecc8f74074012e18d679fb2e9c746f2a56f79cd5e2b1afcf2a8a786b\"},\n    {file = \"yarl-1.15.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:af8ff8d7dc07ce873f643de6dfbcd45dc3db2c87462e5c387267197f59e6d776\"},\n    {file = \"yarl-1.15.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:66f629632220a4e7858b58e4857927dd01a850a4cef2fb4044c8662787165cf7\"},\n    {file = \"yarl-1.15.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:833547179c31f9bec39b49601d282d6f0ea1633620701288934c5f66d88c3e50\"},\n    {file = \"yarl-1.15.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2aa738e0282be54eede1e3f36b81f1e46aee7ec7602aa563e81e0e8d7b67963f\"},\n    {file = \"yarl-1.15.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9a13a07532e8e1c4a5a3afff0ca4553da23409fad65def1b71186fb867eeae8d\"},\n    {file = \"yarl-1.15.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c45817e3e6972109d1a2c65091504a537e257bc3c885b4e78a95baa96df6a3f8\"},\n    {file = \"yarl-1.15.2-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:670eb11325ed3a6209339974b276811867defe52f4188fe18dc49855774fa9cf\"},\n    {file = \"yarl-1.15.2-cp38-cp38-musllinux_1_2_armv7l.whl\", hash = \"sha256:d417a4f6943112fae3924bae2af7112562285848d9bcee737fc4ff7cbd450e6c\"},\n    {file = \"yarl-1.15.2-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:bc8936d06cd53fddd4892677d65e98af514c8d78c79864f418bbf78a4a2edde4\"},\n    {file = \"yarl-1.15.2-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:954dde77c404084c2544e572f342aef384240b3e434e06cecc71597e95fd1ce7\"},\n    {file = \"yarl-1.15.2-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:5bc0df728e4def5e15a754521e8882ba5a5121bd6b5a3a0ff7efda5d6558ab3d\"},\n    {file = \"yarl-1.15.2-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:b71862a652f50babab4a43a487f157d26b464b1dedbcc0afda02fd64f3809d04\"},\n    {file = \"yarl-1.15.2-cp38-cp38-win32.whl\", hash = \"sha256:63eab904f8630aed5a68f2d0aeab565dcfc595dc1bf0b91b71d9ddd43dea3aea\"},\n    {file = \"yarl-1.15.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:2cf441c4b6e538ba0d2591574f95d3fdd33f1efafa864faa077d9636ecc0c4e9\"},\n    {file = \"yarl-1.15.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:a32d58f4b521bb98b2c0aa9da407f8bd57ca81f34362bcb090e4a79e9924fefc\"},\n    {file = \"yarl-1.15.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:766dcc00b943c089349d4060b935c76281f6be225e39994c2ccec3a2a36ad627\"},\n    {file = \"yarl-1.15.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:bed1b5dbf90bad3bfc19439258c97873eab453c71d8b6869c136346acfe497e7\"},\n    {file = \"yarl-1.15.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed20a4bdc635f36cb19e630bfc644181dd075839b6fc84cac51c0f381ac472e2\"},\n    {file = \"yarl-1.15.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d538df442c0d9665664ab6dd5fccd0110fa3b364914f9c85b3ef9b7b2e157980\"},\n    {file = \"yarl-1.15.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28c6cf1d92edf936ceedc7afa61b07e9d78a27b15244aa46bbcd534c7458ee1b\"},\n    {file = \"yarl-1.15.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ce44217ad99ffad8027d2fde0269ae368c86db66ea0571c62a000798d69401fb\"},\n    {file = \"yarl-1.15.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b47a6000a7e833ebfe5886b56a31cb2ff12120b1efd4578a6fcc38df16cc77bd\"},\n    {file = \"yarl-1.15.2-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:e52f77a0cd246086afde8815039f3e16f8d2be51786c0a39b57104c563c5cbb0\"},\n    {file = \"yarl-1.15.2-cp39-cp39-musllinux_1_2_armv7l.whl\", hash = \"sha256:f9ca0e6ce7774dc7830dc0cc4bb6b3eec769db667f230e7c770a628c1aa5681b\"},\n    {file = \"yarl-1.15.2-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:136f9db0f53c0206db38b8cd0c985c78ded5fd596c9a86ce5c0b92afb91c3a19\"},\n    {file = \"yarl-1.15.2-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:173866d9f7409c0fb514cf6e78952e65816600cb888c68b37b41147349fe0057\"},\n    {file = \"yarl-1.15.2-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:6e840553c9c494a35e449a987ca2c4f8372668ee954a03a9a9685075228e5036\"},\n    {file = \"yarl-1.15.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:458c0c65802d816a6b955cf3603186de79e8fdb46d4f19abaec4ef0a906f50a7\"},\n    {file = \"yarl-1.15.2-cp39-cp39-win32.whl\", hash = \"sha256:5b48388ded01f6f2429a8c55012bdbd1c2a0c3735b3e73e221649e524c34a58d\"},\n    {file = \"yarl-1.15.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:81dadafb3aa124f86dc267a2168f71bbd2bfb163663661ab0038f6e4b8edb810\"},\n    {file = \"yarl-1.15.2-py3-none-any.whl\", hash = \"sha256:0d3105efab7c5c091609abacad33afff33bdff0035bece164c98bcf5a85ef90a\"},\n    {file = \"yarl-1.15.2.tar.gz\", hash = \"sha256:a39c36f4218a5bb668b4f06874d676d35a035ee668e6e7e3538835c703634b84\"},\n]\n\n[package.dependencies]\nidna = \">=2.0\"\nmultidict = \">=4.0\"\npropcache = \">=0.2.0\"\n\n[[package]]\nname = \"zipp\"\nversion = \"3.20.2\"\ndescription = \"Backport of pathlib-compatible object wrapper for zip files\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"zipp-3.20.2-py3-none-any.whl\", hash = \"sha256:a817ac80d6cf4b23bf7f2828b7cabf326f15a001bea8b1f9b49631780ba28350\"},\n    {file = \"zipp-3.20.2.tar.gz\", hash = \"sha256:bc9eb26f4506fda01b81bcde0ca78103b6e62f991b381fec825435c836edbc29\"},\n]\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\", \"jaraco.test\", \"more-itertools\", \"pytest (>=6,!=8.1.*)\", \"pytest-ignore-flaky\"]\ntype = [\"pytest-mypy\"]\n\n[[package]]\nname = \"zope-interface\"\nversion = \"7.2\"\ndescription = \"Interfaces for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"zope.interface-7.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:ce290e62229964715f1011c3dbeab7a4a1e4971fd6f31324c4519464473ef9f2\"},\n    {file = \"zope.interface-7.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:05b910a5afe03256b58ab2ba6288960a2892dfeef01336dc4be6f1b9ed02ab0a\"},\n    {file = \"zope.interface-7.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:550f1c6588ecc368c9ce13c44a49b8d6b6f3ca7588873c679bd8fd88a1b557b6\"},\n    {file = \"zope.interface-7.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0ef9e2f865721553c6f22a9ff97da0f0216c074bd02b25cf0d3af60ea4d6931d\"},\n    {file = \"zope.interface-7.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:27f926f0dcb058211a3bb3e0e501c69759613b17a553788b2caeb991bed3b61d\"},\n    {file = \"zope.interface-7.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:144964649eba4c5e4410bb0ee290d338e78f179cdbfd15813de1a664e7649b3b\"},\n    {file = \"zope.interface-7.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:1909f52a00c8c3dcab6c4fad5d13de2285a4b3c7be063b239b8dc15ddfb73bd2\"},\n    {file = \"zope.interface-7.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:80ecf2451596f19fd607bb09953f426588fc1e79e93f5968ecf3367550396b22\"},\n    {file = \"zope.interface-7.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:033b3923b63474800b04cba480b70f6e6243a62208071fc148354f3f89cc01b7\"},\n    {file = \"zope.interface-7.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a102424e28c6b47c67923a1f337ede4a4c2bba3965b01cf707978a801fc7442c\"},\n    {file = \"zope.interface-7.2-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:25e6a61dcb184453bb00eafa733169ab6d903e46f5c2ace4ad275386f9ab327a\"},\n    {file = \"zope.interface-7.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:3f6771d1647b1fc543d37640b45c06b34832a943c80d1db214a37c31161a93f1\"},\n    {file = \"zope.interface-7.2-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:086ee2f51eaef1e4a52bd7d3111a0404081dadae87f84c0ad4ce2649d4f708b7\"},\n    {file = \"zope.interface-7.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:21328fcc9d5b80768bf051faa35ab98fb979080c18e6f84ab3f27ce703bce465\"},\n    {file = \"zope.interface-7.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f6dd02ec01f4468da0f234da9d9c8545c5412fef80bc590cc51d8dd084138a89\"},\n    {file = \"zope.interface-7.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8e7da17f53e25d1a3bde5da4601e026adc9e8071f9f6f936d0fe3fe84ace6d54\"},\n    {file = \"zope.interface-7.2-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cab15ff4832580aa440dc9790b8a6128abd0b88b7ee4dd56abacbc52f212209d\"},\n    {file = \"zope.interface-7.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:29caad142a2355ce7cfea48725aa8bcf0067e2b5cc63fcf5cd9f97ad12d6afb5\"},\n    {file = \"zope.interface-7.2-cp313-cp313-macosx_10_9_x86_64.whl\", hash = \"sha256:3e0350b51e88658d5ad126c6a57502b19d5f559f6cb0a628e3dc90442b53dd98\"},\n    {file = \"zope.interface-7.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:15398c000c094b8855d7d74f4fdc9e73aa02d4d0d5c775acdef98cdb1119768d\"},\n    {file = \"zope.interface-7.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:802176a9f99bd8cc276dcd3b8512808716492f6f557c11196d42e26c01a69a4c\"},\n    {file = \"zope.interface-7.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:eb23f58a446a7f09db85eda09521a498e109f137b85fb278edb2e34841055398\"},\n    {file = \"zope.interface-7.2-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a71a5b541078d0ebe373a81a3b7e71432c61d12e660f1d67896ca62d9628045b\"},\n    {file = \"zope.interface-7.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:4893395d5dd2ba655c38ceb13014fd65667740f09fa5bb01caa1e6284e48c0cd\"},\n    {file = \"zope.interface-7.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:d3a8ffec2a50d8ec470143ea3d15c0c52d73df882eef92de7537e8ce13475e8a\"},\n    {file = \"zope.interface-7.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:31d06db13a30303c08d61d5fb32154be51dfcbdb8438d2374ae27b4e069aac40\"},\n    {file = \"zope.interface-7.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e204937f67b28d2dca73ca936d3039a144a081fc47a07598d44854ea2a106239\"},\n    {file = \"zope.interface-7.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:224b7b0314f919e751f2bca17d15aad00ddbb1eadf1cb0190fa8175edb7ede62\"},\n    {file = \"zope.interface-7.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:baf95683cde5bc7d0e12d8e7588a3eb754d7c4fa714548adcd96bdf90169f021\"},\n    {file = \"zope.interface-7.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:7dc5016e0133c1a1ec212fc87a4f7e7e562054549a99c73c8896fa3a9e80cbc7\"},\n    {file = \"zope.interface-7.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7bd449c306ba006c65799ea7912adbbfed071089461a19091a228998b82b1fdb\"},\n    {file = \"zope.interface-7.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a19a6cc9c6ce4b1e7e3d319a473cf0ee989cbbe2b39201d7c19e214d2dfb80c7\"},\n    {file = \"zope.interface-7.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:72cd1790b48c16db85d51fbbd12d20949d7339ad84fd971427cf00d990c1f137\"},\n    {file = \"zope.interface-7.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:52e446f9955195440e787596dccd1411f543743c359eeb26e9b2c02b077b0519\"},\n    {file = \"zope.interface-7.2-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2ad9913fd858274db8dd867012ebe544ef18d218f6f7d1e3c3e6d98000f14b75\"},\n    {file = \"zope.interface-7.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:1090c60116b3da3bfdd0c03406e2f14a1ff53e5771aebe33fec1edc0a350175d\"},\n    {file = \"zope.interface-7.2.tar.gz\", hash = \"sha256:8b49f1a3d1ee4cdaf5b32d2e738362c7f5e40ac8b46dd7d1a65e82a4872728fe\"},\n]\n\n[package.dependencies]\nsetuptools = \"*\"\n\n[package.extras]\ndocs = [\"Sphinx\", \"furo\", \"repoze.sphinx.autointerface\"]\ntest = [\"coverage[toml]\", \"zope.event\", \"zope.testing\"]\ntesting = [\"coverage[toml]\", \"zope.event\", \"zope.testing\"]\n\n[extras]\naiohttp = [\"aiohttp\"]\nasgi = [\"python-multipart\", \"starlette\"]\nchalice = [\"chalice\"]\nchannels = [\"asgiref\", \"channels\"]\ncli = [\"libcst\", \"pygments\", \"rich\", \"typer\"]\ndebug = [\"libcst\", \"rich\"]\ndebug-server = [\"libcst\", \"pygments\", \"python-multipart\", \"rich\", \"starlette\", \"typer\", \"uvicorn\"]\ndjango = [\"Django\", \"asgiref\"]\nfastapi = [\"fastapi\", \"python-multipart\"]\nflask = [\"flask\"]\nlitestar = [\"litestar\"]\nopentelemetry = [\"opentelemetry-api\", \"opentelemetry-sdk\"]\npydantic = [\"pydantic\"]\npyinstrument = [\"pyinstrument\"]\nquart = [\"quart\"]\nsanic = [\"sanic\"]\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \"^3.9\"\ncontent-hash = \"6ccb728661c37d68d045aaae1651fd3f55b6905aa7d9d81711b70da488f7d05f\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 9.67578125,
          "content": "[tool.poetry]\nname = \"strawberry-graphql\"\npackages = [ { include = \"strawberry\" } ]\nversion = \"0.257.0\"\ndescription = \"A library for creating GraphQL APIs\"\nauthors = [\"Patrick Arminio <patrick.arminio@gmail.com>\"]\nlicense = \"MIT\"\nreadme = \"README.md\"\nkeywords = [\"graphql\", \"api\", \"rest\", \"starlette\", \"async\"]\n\nhomepage = \"https://strawberry.rocks/\"\nrepository = \"https://github.com/strawberry-graphql/strawberry\"\ndocumentation = \"https://strawberry.rocks/\"\n\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"Topic :: Software Development :: Libraries\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"License :: OSI Approved :: MIT License\",\n]\ninclude = [\"strawberry/py.typed\"]\n\n[tool.poetry.urls]\n\"Changelog\" = \"https://strawberry.rocks/changelog\"\n\"Discord\" = \"https://discord.com/invite/3uQ2PaY\"\n\"Twitter\" = \"https://twitter.com/strawberry_gql\"\n\"Mastodon\" = \"https://farbun.social/@strawberry\"\n\"Sponsor on GitHub\" = \"https://github.com/sponsors/strawberry-graphql\"\n\"Sponsor on Open Collective\" = \"https://opencollective.com/strawberry-graphql\"\n\n[build-system]\nrequires = [\"poetry-core>=1.6\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.poetry.dependencies]\npython = \"^3.9\"\ngraphql-core = \">=3.2.0,<3.4.0\"\ntyping-extensions = \">=4.5.0\"\npython-dateutil = \"^2.7.0\"\nstarlette = {version = \">=0.18.0\", optional = true}\ntyper = {version = \">=0.7.0\", optional = true}\npygments = {version = \"^2.3\", optional = true}\nuvicorn = {version = \">=0.11.6\", optional = true}\nDjango = {version = \">=3.2\", optional = true}\nasgiref = {version = \"^3.2\", optional = true}\nflask = {version = \">=1.1\", optional = true}\nquart = {version = \">=0.19.3\", optional = true}\nopentelemetry-api = {version = \"<2\", optional = true}\nopentelemetry-sdk = {version = \"<2\", optional = true}\nchalice = {version = \"^1.22\", optional = true}\npydantic = {version = \">1.6.1\", optional = true}\npython-multipart = {version = \">=0.0.7\", optional = true}\nsanic = {version = \">=20.12.2\", optional = true}\naiohttp = {version = \"^3.7.4.post0\", optional = true}\nfastapi = {version = \">=0.65.2\", optional = true}\nlitestar = {version = \">=2\", optional = true}\nchannels = {version = \">=3.0.5\", optional = true}\nlibcst = {version = \">=0.4.7\", optional = true}\nrich = {version = \">=12.0.0\", optional = true}\npyinstrument = {version = \">=4.0.0\", optional = true}\n\n[tool.poetry.group.dev.dependencies]\nasgiref = \"^3.2\"\nemail-validator = {version = \">=1.1.3,<3.0.0\", optional = false}\nfreezegun = \"^1.2.1\"\nlibcst = {version = \">=1.0.0\", optional = false}\nMarkupSafe = \"2.1.3\"\nnox = \"^2024.4.15\"\nnox-poetry = \"^1.0.3\"\nopentelemetry-api = \"<2\"\nopentelemetry-sdk = \"<2\"\npygments = \"^2.3\"\npyinstrument = {version = \">=4.0.0\", optional = false}\npytest = \"^7.2\"\npytest-asyncio = \">=0.20.3\"\npytest-codspeed = { version = \">=3.0.0\", python = \">=3.9\" }\npytest-cov = \"^4.0.0\"\npytest-emoji = \"^0.2.0\"\npytest-mock = \"^3.10\"\npytest-snapshot = \"^0.9.0\"\npytest-xdist = {extras = [\"psutil\"], version = \"^3.1.0\"}\npython-multipart = \">=0.0.7\"\nrich = {version = \">=12.5.1\", optional = false}\nsanic-testing = \">=22.9,<24.0\"\ntyper = {version = \">=0.7.0\", optional = false}\ntypes-aiofiles = \">=22.1\"\ntypes-certifi = \"^2021.10.8\"\ntypes-chardet = \"^5.0.4\"\ntypes-freezegun = \"^1.1.9\"\ntypes-python-dateutil = \"^2.8.19\"\ntypes-toml = \"^0.10.8\"\ntypes-typed-ast = \"^1.5.8\"\ntypes-ujson = \"^5.6.0\"\ntypes-protobuf = \"^4.23.0.1\"\npoetry-plugin-export = \"^1.6.0\"\n# another bug in poetry\nurllib3 = \"<2\"\ngraphlib_backport = {version = \"*\", python = \"<3.9\", optional = false}\ninline-snapshot = \"^0.10.1\"\ntypes-deprecated = \"^1.2.15.20241117\"\ntypes-six = \"^1.17.0.20241205\"\ntypes-pyyaml = \"^6.0.12.20240917\"\nmypy = \"^1.13.0\"\n\n[tool.poetry.group.integrations]\noptional = true\n\n[tool.poetry.group.integrations.dependencies]\naiohttp = \"^3.7.4.post0\"\nchalice = {version = \"^1.22\"}\nchannels = \">=3.0.5,<5.0.0\"\nDjango = \">=3.2\"\nfastapi = {version = \">=0.65.0\", optional = false}\nflask = \">=1.1\"\nquart = \">=0.19.3\"\npydantic = {version = \">=2.0\", optional = false}\npytest-aiohttp = \"^1.0.3\"\npytest-django = {version = \"^4.5\"}\nsanic = \">=20.12.2\"\nstarlette = \">=0.13.6\"\nlitestar = {version = \">=2\", optional = false}\nuvicorn = \">=0.11.6\"\ndaphne = \"^4.0.0\"\n\n[tool.poetry.extras]\naiohttp = [\"aiohttp\"]\nasgi = [\"starlette\", \"python-multipart\"]\ndebug = [\"rich\", \"libcst\"]\ndebug-server = [\"starlette\", \"uvicorn\", \"python-multipart\", \"typer\", \"pygments\", \"rich\", \"libcst\"]\ndjango = [\"Django\", \"pytest-django\", \"asgiref\"]\nchannels = [\"channels\", \"asgiref\"]\nflask = [\"flask\"]\nquart=[\"quart\"]\nopentelemetry = [\"opentelemetry-api\", \"opentelemetry-sdk\"]\npydantic = [\"pydantic\"]\nsanic = [\"sanic\"]\nfastapi = [\"fastapi\", \"python-multipart\"]\nchalice = [\"chalice\"]\ncli = [\"typer\", \"pygments\", \"rich\", \"libcst\", \"graphlib_backport\"]\nlitestar = [\"litestar\"]\npyinstrument = [\"pyinstrument\"]\n\n[tool.poetry.scripts]\nstrawberry = \"strawberry.cli:run\"\n\n[tool.pytest.ini_options]\naddopts = \"--emoji\"\nDJANGO_SETTINGS_MODULE = \"tests.django.django_settings\"\ntestpaths = [\"tests/\"]\nmarkers = [\n    \"aiohttp\",\n    \"asgi\",\n    \"chalice\",\n    \"channels\",\n    \"django_db\",\n    \"django\",\n    \"fastapi\",\n    \"flaky\",\n    \"flask\",\n    \"litestar\",\n    \"pydantic\",\n    \"quart\",\n    \"relay\",\n    \"sanic\",\n    \"starlette\",\n]\nasyncio_mode = \"auto\"\nfilterwarnings = [\n    \"ignore::DeprecationWarning:strawberry.*.resolver\",\n    \"ignore:LazyType is deprecated:DeprecationWarning\",\n    \"ignore::DeprecationWarning:ddtrace.internal\",\n    \"ignore::DeprecationWarning:django.utils.encoding\",\n    # ignoring the text instead of the whole warning because we'd\n    # get an error when django is not installed\n    \"ignore:The default value of USE_TZ\",\n    \"ignore::DeprecationWarning:pydantic_openapi_schema.*\",\n    \"ignore::DeprecationWarning:graphql.*\",\n    \"ignore::DeprecationWarning:websockets.*\",\n    \"ignore::DeprecationWarning:pydantic.*\",\n    \"ignore::UserWarning:pydantic.*\",\n    \"ignore::DeprecationWarning:pkg_resources.*\",\n]\n\n[tool.autopub]\ngit-username = \"Botberry\"\ngit-email = \"bot@strawberry.rocks\"\nproject-name = \"🍓\"\nappend-github-contributor = true\n\n[tool.pyright]\n# include = [\"strawberry\"]\nexclude = [\"**/__pycache__\",]\nreportMissingImports = true\nreportMissingTypeStubs = false\npythonVersion = \"3.9\"\nstubPath = \"\"\n\n[tool.ruff]\nline-length = 88\ntarget-version = \"py39\"\nfix = true\nexclude = [\n    \".bzr\",\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".hg\",\n    \".mypy_cache\",\n    \".nox\",\n    \".pants.d\",\n    \".ruff_cache\",\n    \".svn\",\n    \".tox\",\n    \".venv\",\n    \"__pypackages__\",\n    \"_build\",\n    \"buck-out\",\n    \"build\",\n    \"dist\",\n    \"node_modules\",\n    \"venv\",\n    \"tests/*/snapshots\"\n]\nsrc = [\"strawberry\", \"tests\"]\n\n[tool.ruff.lint]\nselect = [\"ALL\"]\nignore = [\n    # https://github.com/astral-sh/ruff/pull/4427\n    # equivalent to keep-runtime-typing. We might want to enable those\n    # after we drop support for Python 3.9\n    \"UP006\",\n    \"UP007\",\n\n    # we use asserts in tests and to hint mypy\n    \"S101\",\n\n    # Allow \"Any\" for annotations. We have too many Any annotations and some\n    # are legit. Maybe reconsider in the future, except for tests?\n    \"ANN401\",\n\n    # Allow our exceptions to have names that don't end in \"Error\". Maybe refactor\n    # in the future? But that would be a breaking change.\n    \"N818\",\n\n    # Allow \"type: ignore\" without rule code. Because we support both mypy and\n    # pyright, and they have different codes for the same error, we can't properly\n    # fix those issues.\n    \"PGH003\",\n\n    # Variable `T` in function should be lowercase\n    # this seems a potential bug or opportunity for improvement in ruff\n    \"N806\",\n\n    # shadowing builtins\n    \"A001\",\n    \"A002\",\n    \"A003\",\n\n    # Unused arguments\n    \"ARG001\",\n    \"ARG002\",\n    \"ARG003\",\n    \"ARG004\",\n    \"ARG005\",\n\n    # Boolean positional arguments\n    \"FBT001\",\n    \"FBT002\",\n    \"FBT003\",\n\n    # Too many arguments/branches/return statements\n    \"PLR0913\",\n    \"PLR0912\",\n    \"PLR0911\",\n\n    # Do not force adding _co to covariant typevars\n    \"PLC0105\",\n\n    # Allow private access to attributes\n    \"SLF001\",\n\n    # code complexity\n    \"C901\",\n\n    # Allow todo/fixme/etc comments\n    \"TD002\",\n    \"TD003\",\n    \"FIX001\",\n    \"FIX002\",\n\n    # We don't want to add \"from __future__ mport annotations\" everywhere\n    \"FA100\",\n\n    # Docstrings, maybe to enable later\n    \"D100\",\n    \"D101\",\n    \"D102\",\n    \"D103\",\n    \"D104\",\n    \"D105\",\n    \"D106\",\n    \"D107\",\n    \"D412\",\n\n    # Allow to define exceptions text in the exception body\n    \"TRY003\",\n    \"EM101\",\n    \"EM102\",\n    \"EM103\",\n\n    # Allow comparisons with magic numbers\n    \"PLR2004\",\n\n    # Allow methods to use lru_cache\n    \"B019\",\n\n    # Don't force if branches to be converted to \"or\"\n    \"SIM114\",\n\n    # ruff formatter recommends to disable those, as they conflict with it\n    # we don't need to ever enable those.\n    \"COM812\",\n    \"COM819\",\n    \"D206\",\n    \"E111\",\n    \"E114\",\n    \"E117\",\n    \"E501\",\n    \"ISC001\",\n    \"Q000\",\n    \"Q001\",\n    \"Q002\",\n    \"Q003\",\n    \"W191\",\n]\n\n[tool.ruff.lint.per-file-ignores]\n\".github/*\" = [\"INP001\"]\n\"federation-compatibility/*\" = [\"INP001\"]\n\"strawberry/cli/*\" = [\"B008\"]\n\"strawberry/extensions/tracing/__init__.py\" = [\"TCH004\"]\n\"strawberry/fastapi/*\" = [\"B008\"]\n\"strawberry/annotation.py\" = [\"RET505\"]\n\"tests/*\" = [\n    \"ANN001\",\n    \"ANN201\",\n    \"ANN202\",\n    \"ANN204\",\n    \"B008\",\n    \"B018\",\n    \"D\",\n    \"DTZ001\",\n    \"DTZ005\",\n    \"FA102\",\n    \"N805\",\n    \"PLC1901\",\n    \"PLR2004\",\n    \"PLW0603\",\n    \"PT011\",\n    \"RUF012\",\n    \"S105\",\n    \"S106\",\n    \"S603\",\n    \"S607\",\n    \"TCH001\",\n    \"TCH002\",\n    \"TCH003\",\n    \"TRY002\",\n]\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"strawberry\"]\nknown-third-party = [\"django\", \"graphql\"]\nextra-standard-library = [\"typing_extensions\"]\n\n[tool.ruff.format]\nexclude =[\n    'tests/codegen/snapshots/',\n    'tests/cli/snapshots/'\n]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"google\"\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.23046875,
          "content": "#!/usr/bin/env python\n\n# we use poetry for our build, but this file seems to be required\n# in order to get GitHub dependencies graph to work\n\nimport setuptools\n\nif __name__ == \"__main__\":\n    setuptools.setup(name=\"strawberry-graphql\")\n"
        },
        {
          "name": "strawberry",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}