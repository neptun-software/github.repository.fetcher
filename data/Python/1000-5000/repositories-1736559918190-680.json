{
  "metadata": {
    "timestamp": 1736559918190,
    "page": 680,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebookresearch/ReAgent",
      "stars": 3577,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.109375,
          "content": "ignore:\n  # These are more experimental stuffs\n  - \"reagent/ope/**/*\"\n  - \"reagent/training/gradient_free/**/*\"\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.7236328125,
          "content": "# Tutorial generated files\necom_*\n\n# Project files\n.vscode\n\n# CircleCI\ngen.yml\n\n# Test data\ncartpole_discrete\ncartpole_discrete_timeline\ntraining_data\n\n# Spark data\nmetastore_db\nspark-warehouse\n\n# Compiled POM\ndependency-reduced-pom.xml\n\n# Model outputs\noutputs\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# local output\n/outputs\n.DS_Store\n\n# Thrift output\nreagent/thrift/__init__.py\nreagent/thrift/core/\nml/rl/thrift/__init__.py\nml/rl/thrift/core/\n\n# Docusaurus\n.DS_Store\n\nnode_modules\n\nlib/core/metadata.js\nlib/core/MetadataBlog.js\n\nwebsite/translated_docs\nwebsite/build/\nwebsite/yarn.lock\nwebsite/node_modules\nwebsite/i18n/*\n!website/i18n/en.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.630859375,
          "content": "[submodule \"serving/external/googletest\"]\n\tpath = serving/external/googletest\n\turl = https://github.com/google/googletest.git\n[submodule \"serving/external/json\"]\n\tpath = serving/external/nlohmann_json\n\turl = https://github.com/nlohmann/json.git\n[submodule \"serving/external/exprtk\"]\n\tpath = serving/external/exprtk\n\turl = https://github.com/ArashPartow/exprtk.git\n[submodule \"serving/external/SimpleWebServer\"]\n\tpath = serving/external/SimpleWebServer\n\turl = https://gitlab.com/eidheim/Simple-Web-Server.git\n[submodule \"serving/external/cpp-taskflow\"]\n\tpath = serving/external/cpp-taskflow\n\turl = https://github.com/cpp-taskflow/cpp-taskflow.git\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.1796875,
          "content": "[settings]\nmulti_line_output=3\ninclude_trailing_comma=True\nforce_grid_wrap=0\nuse_parentheses=True\nline_length=88\nlines_after_imports=2\nreverse_relative=True\ndefault_section=THIRDPARTY\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.0126953125,
          "content": "# Contributing to ReAgent\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `master`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\n## License\nBy contributing ReAgent, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4794921875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2017-present, Facebook, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8466796875,
          "content": "![Banner](logo/reagent_banner.png)\n\n### ReAgent is officially archived and no longer maintained. For latest support on production-ready reinforcement learning open-source library, please refer to [Pearl](https://github.com/facebookresearch/Pearl/) - Production-ready Reinforcement Learning AI Agent Library, by the Applied Reinforcement Learning team @ Meta.\n\n[![Support Ukraine](https://img.shields.io/badge/Support-Ukraine-FFD500?style=flat&labelColor=005BBB)](https://opensource.fb.com/support-ukraine)\n[![License](https://img.shields.io/badge/license-BSD%203--Clause-brightgreen)](LICENSE)\n[![CircleCI](https://circleci.com/gh/facebookresearch/ReAgent/tree/main.svg?style=shield)](https://circleci.com/gh/facebookresearch/ReAgent/tree/main)\n[![codecov](https://codecov.io/gh/facebookresearch/ReAgent/branch/main/graph/badge.svg)](https://codecov.io/gh/facebookresearch/ReAgent)\n---\n\n### Overview\nReAgent is an open source end-to-end platform for applied reinforcement learning (RL) developed and used at Facebook. ReAgent is built in Python and uses PyTorch for modeling and training and TorchScript for model serving. The platform contains workflows to train popular deep RL algorithms and includes data preprocessing, feature transformation, distributed training, counterfactual policy evaluation, and optimized serving. For more detailed information about ReAgent see the release post [here](https://research.fb.com/publications/horizon-facebooks-open-source-applied-reinforcement-learning-platform/) and white paper [here](https://arxiv.org/abs/1811.00260).\n\nThe platform was once named \"Horizon\" but we have adopted the name \"ReAgent\" recently to emphasize its broader scope in decision making and reasoning.\n\n### Algorithms Supported\n\nClassic Off-Policy algorithms:\n- Discrete-Action [DQN](https://storage.googleapis.com/deepmind-media/dqn/DQNNaturePaper.pdf)\n- Parametric-Action DQN\n- [Double DQN](https://arxiv.org/abs/1509.06461), [Dueling DQN](https://arxiv.org/abs/1511.06581), [Dueling Double DQN](https://arxiv.org/abs/1710.02298)\n- Distributional RL: [C51](https://arxiv.org/abs/1707.06887) and [QR-DQN](https://arxiv.org/abs/1710.10044)\n- [Twin Delayed DDPG](https://arxiv.org/abs/1802.09477) (TD3)\n- [Soft Actor-Critic](https://arxiv.org/abs/1801.01290) (SAC)\n- [Critic Regularized Regression](https://arxiv.org/abs/2006.15134) (CRR)\n- [Proximal Policy Optimization Algorithms](https://arxiv.org/abs/1707.06347) (PPO)\n\nRL for recommender systems:\n- [Seq2Slate](https://arxiv.org/abs/1810.02019)\n- [SlateQ](https://arxiv.org/abs/1905.12767)\n\nCounterfactual Evaluation:\n- [Doubly Robust](https://arxiv.org/abs/1612.01205) (for bandits)\n- [Doubly Robust](https://arxiv.org/abs/1511.03722) (for sequential decisions)\n- [MAGIC](https://arxiv.org/abs/1604.00923)\n\nMulti-Arm and Contextual Bandits:\n- [UCB1](https://www.cs.bham.ac.uk/internal/courses/robotics/lectures/ucb1.pdf)\n- [MetricUCB](https://arxiv.org/abs/0809.4882)\n- [Thompson Sampling](https://web.stanford.edu/~bvr/pubs/TS_Tutorial.pdf)\n- [LinUCB](https://arxiv.org/abs/1003.0146)\n\n\nOthers:\n- [Cross-Entropy Method](http://web.mit.edu/6.454/www/www_fall_2003/gew/CEtutorial.pdf)\n- [Synthetic Return for Credit Assignment](https://arxiv.org/abs/2102.12425)\n\n\n### Installation\nReAgent can be installed via. Docker or manually. Detailed instructions on how to install ReAgent can be found [here](docs/installation.rst).\n\n### Tutorial\nReAgent is designed for large-scale, distributed recommendation/optimization tasks where we don’t have access to a simulator.\nIn this environment, it is typically better to train offline on batches of data, and release new policies slowly over time.\nBecause the policy updates slowly and in batches, we use off-policy algorithms. To test a new policy without deploying it,\nwe rely on counter-factual policy evaluation (CPE), a set of techniques for estimating a policy based on the actions of another policy.\n\nWe also have a set of tools to facilitate applying RL in real-world applications:\n- Domain Analysis Tool, which analyzes state/action feature importance and identifies whether the problem is a suitable for applying batch RL\n- Behavior Cloning, which clones from the logging policy to bootstrap the learning policy safely\n\nDetailed instructions on how to use ReAgent can be found [here](docs/usage.rst).\n\n\n### License\nReAgent is released under a BSD 3-Clause license.  Find out more about it [here](LICENSE).\n\n[Terms of Use](https://opensource.facebook.com/legal/terms) | [Privacy Policy](https://opensource.facebook.com/legal/privacy) | Copyright © 2022 Meta Platforms, Inc\n\n\n### Citing\n```\n@article{gauci2018horizon,\n  title={Horizon: Facebook's Open Source Applied Reinforcement Learning Platform},\n  author={Gauci, Jason and Conti, Edoardo and Liang, Yitao and Virochsiri, Kittipat and Chen, Zhengxing and He, Yuchen and Kaden, Zachary and Narayanan, Vivek and Ye, Xiaohui},\n  journal={arXiv preprint arXiv:1811.00260},\n  year={2018}\n}\n```\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "preprocessing",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.1591796875,
          "content": "[build-system]\nrequires = [\n    \"setuptools >= 42\",\n    \"setuptools_scm[toml] >= 3.4\",\n    \"wheel\"\n]\nbuild-backend = \"setuptools.build_meta\"\n[tool.setuptools_scm]\n"
        },
        {
          "name": "rasp_requirements.txt",
          "type": "blob",
          "size": 0.0498046875,
          "content": "boost\ncmake\ngflags==2.2.2\nglog==0.4.0\neigen==3.3.7\n"
        },
        {
          "name": "reagent",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "serving",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.9287109375,
          "content": "[metadata]\nname = reagent\nversion = 0.1\nurl = https://github.com/facebookresearch/ReAgent\nauthor = Facebook\ndescription = Facebook RL\nlong_description = file: README.md\nlong_description_content_type = text/markdown\nlicense = BSD 3-Clause License\n\n[options]\npackages = find:\npython_requires = >=3.8\ninstall_requires =\n  # v1.48.0 and above upgraded the protobuf dependency, which lead to an error:\n  # https://stackoverflow.com/questions/72441758/typeerror-descriptors-cannot-not-be-created-directly\n  grpcio-tools>=1.44.0,<1.48.0\n  click>=7.0\n  # ~=1.2.0 for compatibility with gym\n  # issue: https://github.com/openai/spinningup/issues/178\n  cloudpickle~=1.2.0\n  iopath\n  numpy>=1.17.2,<1.24.0\n  pandas>=1.0.3\n  # https://github.com/samuelcolvin/pydantic/issues/2042\n  pydantic>=1.4,<1.7\n  tinydb >= 4.1.1\n  tqdm>=4.46.0\n  petastorm>=0.9.0\n  parameterized>=0.7.4\n  pyspark==3.1.1\n  pytorch-lightning==1.6.0\n  ruamel.yaml>=0.15.99\n  scipy>=1.3.1\n  tensorboard>=1.14\n  scikit-learn>=0.20.0\n\n\n[options.extras_require]\ngym =\n  # Some issue with https://github.com/openai/gym/pull/1974\n  # Remove the pinning when https://github.com/openai/gym/issues/2058 is fixed\n  gym[classic_control,box2d,atari]==0.17.2\n  gym_minigrid\n  recsim-no-tf\n\ntest =\n  coverage>=5.1\n  pytest-xdist>=1.30.0\n  pytest>=5.3\n  spark-testing-base==0.10.0\n  pytest-cov\n\nax = ax-platform\n\nlite = nevergrad>=0.4.3\n\ntorchrec_gpu = torchrec\n\n# July 2022: torchrec-cpu stable (0.1.1) caused test errors\ntorchrec_cpu = torchrec-nightly-cpu\n\n\n###########\n# Linting #\n###########\n\n[flake8]\n# E203: black and flake8 disagree on whitespace before ':'\n# W503: black and flake8 disagree on how to place operators\nignore = E203, W503\nmax-line-length = 88\nexclude =\n  .git,__pycache__,docs\n\n[coverage:report]\nomit =\n  serving/*\n\n\n###########\n# Testing #\n###########\n\n[tool:pytest]\naddopts = --verbose\npython_files = reagent/test/*.py reagent/test/**/*.py reagent/gym/tests/*.py reagent/gym/tests/**/*.py\nmarkers = serial\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.1484375,
          "content": "#!/usr/bin/env python3\n# Copyright (c) Facebook, Inc. and its affiliates. All rights reserved.\n\nfrom setuptools import setup\n\n\n# see config.cfg\nsetup()\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 4.1396484375,
          "content": "# tox (https://tox.readthedocs.io/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n# This post discusses how to specify patterns for testing specific tests\n# https://stackoverflow.com/questions/36456920/is-there-a-way-to-specify-which-pytest-tests-to-run-from-a-file\n\n[tox]\nenvlist = py38\n\n[pytest]\naddopts = --verbose -d --tx popen --cov=reagent --cov-report=xml --cov-append --junitxml={envlogdir}/junit-{envname}.xml\n\n\n\n# Refer to https://docs.pytest.org/en/stable/example/markers.html\n# for how we include/exclude tests in pytest\n\n[testenv]\n# Install the latest pip, setuptools, wheel; this is needed for downloading opencv-python wheel,\n# instead of building from source (which is super slow).\ndownload = true\nextras =\n    gym\n    test\n    torchrec_cpu\ninstall_command =\n    pip install --pre --extra-index-url https://download.pytorch.org/whl/cpu -f https://download.pytorch.org/whl/nightly/torchrec_nightly_cpu/ {opts} {packages} --progress-bar off\ncommands =\n    pytest -n2 -m \"(not serial) and (not seq2slate_long)\"\n    pytest -n0 -m \"serial\"\n\n\n# install CUDA 11.3 Torch\n[ubuntu_gpu]\nextras =\n    gym\n    test\n    torchrec_gpu\ninstall_command =\n    pip install --pre --extra-index-url https://download.pytorch.org/whl/cu113 -f https://download.pytorch.org/whl/torchrec/ {opts} {packages} --progress-bar off\n\n\n[testenv:circleci_misc_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/test -n2 -m \"not serial\" --ignore=reagent/test/mab/ --ignore=reagent/test/lite/ --ignore=reagent/test/ranking/ --ignore=reagent/test/training/ --ignore=reagent/test/prediction/ --ignore=reagent/test/world_model/\n    pytest reagent/test -n0 -m \"serial\" --ignore=reagent/test/mab/ --ignore=reagent/test/lite/ --ignore=reagent/test/ranking/ --ignore=reagent/test/training/ --ignore=reagent/test/prediction/ --ignore=reagent/test/world_model/\n\n\n[testenv:circleci_gym_replay_buffer_1_cpu_unittest]\ncommands =\n    pytest reagent/gym/tests -n2 -m \"not serial\" -k \"test_replay_buffer_gym_cpu_1\"\n\n\n[testenv:circleci_gym_replay_buffer_2_cpu_unittest]\ncommands =\n    pytest reagent/gym/tests -n2 -m \"not serial\" -k \"test_replay_buffer_gym_cpu_2\"\n\n\n# all cpu tests in reagent/gym/tests except test_replay_buffer_gym_cpu_x\n[testenv:circleci_gym_cpu_unittest]\ncommands =\n    pytest reagent/gym/tests -n2 -m \"not serial\" -k \"not test_replay_buffer_gym_cpu\"\n\n\n[testenv:circleci_gym_replay_buffer_1_gpu_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/gym/tests -n0 -m \"serial\" -k \"test_replay_buffer_gym_gpu_1\"\n\n\n[testenv:circleci_gym_replay_buffer_2_gpu_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/gym/tests -n0 -m \"serial\" -k \"test_replay_buffer_gym_gpu_2\"\n\n\n# all gpu tests in reagent/gym/tests except test_replay_buffer_gym_gpu_x\n[testenv:circleci_gym_gpu_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/gym/tests -n0 -m \"serial\" -k \"not test_replay_buffer_gym_gpu\"\n\n\n[testenv:circleci_ranking_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/test/ranking -n2\n\n\n[testenv:circleci_training_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/test/training -n2\n\n\n[testenv:circleci_prediction_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/test/prediction -n2\n\n\n[testenv:circleci_world_model_unittest]\ninstall_command = {[ubuntu_gpu]install_command}\nextras = {[ubuntu_gpu]extras}\ncommands =\n    pytest reagent/test/world_model -n2\n\n\n[testenv:circleci_lite_api_unittest]\nextras =\n    lite\n    test\ncommands =\n    pytest reagent/test/lite -n2\n    pytest --doctest-modules reagent/lite -n2 --doctest-continue-on-failure\n\n\n[testenv:circleci_mab_unittest]\nextras =\n    test\ncommands =\n    pytest reagent/test/mab -n2\n"
        }
      ]
    }
  ]
}