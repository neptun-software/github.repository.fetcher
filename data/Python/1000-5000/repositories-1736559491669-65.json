{
  "metadata": {
    "timestamp": 1736559491669,
    "page": 65,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LionSec/katoolin",
      "stars": 4814,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.685546875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n"
        },
        {
          "name": "Changelog.txt",
          "type": "blob",
          "size": 0.4052734375,
          "content": "---------------------------------------------26 / 08 / 2015----------------------------------------------------\n\nThe problem of uppercases characters in the installation script has been solved .\n\n---------------------------------------------19 / 04 / 2016----------------------------------------------------\n\nRemoved Inguma from the menu to bypass issue with installation (By Jayson Grace : https://github.com/l50)\n"
        },
        {
          "name": "LICENCE",
          "type": "blob",
          "size": 17.6240234375,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year}  {fullname}\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.203125,
          "content": "![katoolin](https://cloud.githubusercontent.com/assets/8742190/9415562/83397aae-4840-11e5-8f72-28dfffcc70a9.png)\n# katoolin\nAutomatically install all Kali linux tools\n\n# Features\n- Add Kali linux repositories\n- Remove kali linux repositories\n- Install Kali linux tools\n\n# Requirements\n- Python 2.7\n- An operating system (tested on Ubuntu)\n\n# Installation\n- sudo su\n- git clone https://github.com/LionSec/katoolin.git && cp katoolin/katoolin.py /usr/bin/katoolin\n- chmod +x /usr/bin/katoolin\n- sudo katoolin \n\n# Video\nhttps://www.youtube.com/watch?v=8VxCWVoZEEE\n\n# Usage\n- Typing the number of a tool will install it\n- Typing 0 will install all Kali Linux tools\n- back : Go back\n- gohome : Go to the main menu\n- By installing armitage , you will install metasploit\n\n# Warning\nBefore updating your system , please remove all Kali-linux repositories to avoid any kind of problem .\n\n# I have some questions!\n\nPlease visit https://github.com/LionSec/katoolin/issues\n\n# Donations\n- Paypal : https://www.paypal.me/lionsec\n- skrill : informatica98es@gmail.com\n\n\n# Contact\n- Website : https://neodrix.com\n- Youtube : https://youtube.com/inf98es\n- Facebook : https://facebook.com/in98\n- Twitter: @LionSec1\n- Email : informatica98es@gmail.com\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "katoolin.py",
          "type": "blob",
          "size": 50.1962890625,
          "content": "#!/usr/bin/python\n\nimport os\nimport sys, traceback\n\n\nif os.getuid() != 0:\n\tprint \"Sorry. This script requires sudo privledges\"\n\tsys.exit()\ndef main():\n\ttry:\n\t\tprint ('''\n\n $$\\   $$\\             $$\\                         $$\\ $$\\           \n $$ | $$  |            $$ |                        $$ |\\__|          \n $$ |$$  /  $$$$$$\\  $$$$$$\\    $$$$$$\\   $$$$$$\\  $$ |$$\\ $$$$$$$\\  \n $$$$$  /   \\____$$\\ \\_$$  _|  $$  __$$\\ $$  __$$\\ $$ |$$ |$$  __$$\\ \n $$  $$<    $$$$$$$ |  \\033[1;36mKali linux tools installer\\033[1;m |$$ |$$ |$$ |  $$ |\n \\033[1;36m$$ |\\$$\\  $$  __$$ |  $$ |$$\\ $$ |  $$ |$$ |  $$ |$$ |$$ |$$ |  $$ |\n $$ | \\$$\\ \\$$$$$$$ |  \\$$$$  |\\$$$$$$  |\\$$$$$$  |$$ |$$ |$$ |  $$ |\n \\__|  \\__| \\_______|   \\____/  \\______/  \\______/ \\__|\\__|\\__|  \\__| V2.0 \\033[1;m\n\n\n \\033[1;32m+ -- -- +=[ Author: LionSec | Homepage: www.neodrix.com\\033[1;m\n \\033[1;32m+ -- -- +=[ 331 Tools \\033[1;m\n\n\n\\033[1;91m[W] Before updating your system , please remove all Kali-linux repositories to avoid any kind of problem .\\033[1;m\n\t\t''')\n\t\tdef inicio1():\n\t\t\twhile True:\n\t\t\t\tprint ('''\n1) Add Kali repositories & Update \n2) View Categories\n3) Install classicmenu indicator\n4) Install Kali menu\n5) Help\n\n\t\t\t''')\n\n\t\t\t\topcion0 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\n\t\t\t\twhile opcion0 == \"1\":\n\t\t\t\t\tprint ('''\n1) Add kali linux repositories\n2) Update\n3) Remove all kali linux repositories\n4) View the contents of sources.list file\n\n\t\t\t\t\t''')\n\t\t\t\t\trepo = raw_input(\"\\033[1;32mWhat do you want to do ?> \\033[1;m\")\n\t\t\t\t\tif repo == \"1\":\n\t\t\t\t\t\tcmd1 = os.system(\"apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ED444FF07D8D0BF6\")\n\t\t\t\t\t\tcmd2 = os.system(\"echo '# Kali linux repositories | Added by Katoolin\\ndeb http://http.kali.org/kali kali-rolling main contrib non-free' >> /etc/apt/sources.list\")\n\t\t\t\t\telif repo == \"2\":\n\t\t\t\t\t\tcmd3 = os.system(\"apt-get update -m\")\n\t\t\t\t\telif repo == \"3\":\n\t\t\t\t\t\tinfile = \"/etc/apt/sources.list\"\n\t\t\t\t\t\toutfile = \"/etc/apt/sources.list\"\n\n\t\t\t\t\t\tdelete_list = [\"# Kali linux repositories | Added by Katoolin\\n\", \"deb http://http.kali.org/kali kali-rolling main contrib non-free\\n\"]\n\t\t\t\t\t\tfin = open(infile)\n\t\t\t\t\t\tos.remove(\"/etc/apt/sources.list\")\n\t\t\t\t\t\tfout = open(outfile, \"w+\")\n\t\t\t\t\t\tfor line in fin:\n\t\t\t\t\t\t    for word in delete_list:\n\t\t\t\t\t\t        line = line.replace(word, \"\")\n\t\t\t\t\t\t    fout.write(line)\n\t\t\t\t\t\tfin.close()\n\t\t\t\t\t\tfout.close()\n\t\t\t\t\t\tprint (\"\\033[1;31m\\nAll kali linux repositories have been deleted !\\n\\033[1;m\")\n\t\t\t\t\telif repo == \"back\":\n\t\t\t\t\t\tinicio1()\n\t\t\t\t\telif repo == \"gohome\":\n\t\t\t\t\t\tinicio1()\n\t\t\t\t\telif repo == \"4\":\n\t\t\t\t\t\tfile = open('/etc/apt/sources.list', 'r')\n\n\t\t\t\t\t\tprint (file.read())\n\n\t\t\t\t\telse:\n\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\") \t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\tif opcion0 == \"3\":\n\t\t\t\t\tprint (''' \nClassicMenu Indicator is a notification area applet (application indicator) for the top panel of Ubuntu's Unity desktop environment.\n\nIt provides a simple way to get a classic GNOME-style application menu for those who prefer this over the Unity dash menu.\n\nLike the classic GNOME menu, it includes Wine games and applications if you have those installed.\n\nFor more information , please visit : http://www.florian-diesch.de/software/classicmenu-indicator/\n\n''')\n\t\t\t\t\trepo = raw_input(\"\\033[1;32mDo you want to install classicmenu indicator ? [y/n]> \\033[1;m\")\n\t\t\t\t\tif repo == \"y\":\n\t\t\t\t\t\tcmd1 = os.system(\"add-apt-repository ppa:diesch/testing && apt-get update\")\n\t\t\t\t\t\tcmd = os.system(\"sudo apt-get install classicmenu-indicator\")\n\n\t\t\t\telif opcion0 == \"4\"\t:\n\t\t\t\t\trepo = raw_input(\"\\033[1;32mDo you want to install Kali menu ? [y/n]> \\033[1;m\")\n\t\t\t\t\tif repo == \"y\":\n\t\t\t\t\t\tcmd1 = os.system(\"apt-get install kali-menu\")\n\t\t\t\telif opcion0 == \"5\":\n\t\t\t\t\tprint (''' \n****************** +Commands+ ******************\n\n\n\\033[1;32mback\\033[1;m \t\\033[1;33mGo back\\033[1;m\n\n\\033[1;32mgohome\\033[1;m\t\\033[1;33mGo to the main menu\\033[1;m\n\n\t\t''')\n\n\n\t\t\t\tdef inicio():\n\t\t\t\t\twhile opcion0 == \"2\":\n\t\t\t\t\t\tprint ('''\n\\033[1;36m**************************** All Categories *****************************\\033[1;m\n\n1) Information Gathering\t\t\t8) Exploitation Tools\n2) Vulnerability Analysis\t\t\t9) Forensics Tools\n3) Wireless Attacks\t\t\t\t10) Stress Testing\n4) Web Applications\t\t\t\t11) Password Attacks\n5) Sniffing & Spoofing\t\t\t\t12) Reverse Engineering\n6) Maintaining Access\t\t\t\t13) Hardware Hacking\n7) Reporting Tools \t\t\t\t14) Extra\n\t\t\t\t\t\t\t\t\t\n0) All\n\n\t\t\t ''')\n\t\t\t\t\t\tprint (\"\\033[1;32mSelect a category or press (0) to install all Kali linux tools .\\n\\033[1;m\")\n\n\t\t\t\t\t\topcion1 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\tif opcion1 == \"back\":\n\t\t\t\t\t\t\tinicio1()\n\t\t\t\t\t\telif opcion1 == \"gohome\":\n\t\t\t\t\t\t\tinicio1()\n\t\t\t\t\t\telif opcion1 == \"0\":\n\t\t\t\t\t\t\tcmd = os.system(\"apt-get -f install acccheck ace-voip amap automater braa casefile cdpsnarf cisco-torch cookie-cadger copy-router-config dmitry dnmap dnsenum dnsmap dnsrecon dnstracer dnswalk dotdotpwn enum4linux enumiax exploitdb fierce firewalk fragroute fragrouter ghost-phisher golismero goofile lbd maltego-teeth masscan metagoofil miranda nmap p0f parsero recon-ng set smtp-user-enum snmpcheck sslcaudit sslsplit sslstrip sslyze thc-ipv6 theharvester tlssled twofi urlcrazy wireshark wol-e xplico ismtp intrace hping3 bbqsql bed cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch copy-router-config doona dotdotpwn greenbone-security-assistant hexorbase jsql lynis nmap ohrwurm openvas-cli openvas-manager openvas-scanner oscanner powerfuzzer sfuzz sidguesser siparmyknife sqlmap sqlninja sqlsus thc-ipv6 tnscmd10g unix-privesc-check yersinia aircrack-ng asleap bluelog blueranger bluesnarfer bully cowpatty crackle eapmd5pass fern-wifi-cracker ghost-phisher giskismet gqrx kalibrate-rtl killerbee kismet mdk3 mfcuk mfoc mfterm multimon-ng pixiewps reaver redfang spooftooph wifi-honey wifitap wifite apache-users arachni bbqsql blindelephant burpsuite cutycapt davtest deblaze dirb dirbuster fimap funkload grabber jboss-autopwn joomscan jsql maltego-teeth padbuster paros parsero plecost powerfuzzer proxystrike recon-ng skipfish sqlmap sqlninja sqlsus ua-tester uniscan vega w3af webscarab websploit wfuzz wpscan xsser zaproxy burpsuite dnschef fiked hamster-sidejack hexinject iaxflood inviteflood ismtp mitmproxy ohrwurm protos-sip rebind responder rtpbreak rtpinsertsound rtpmixsound sctpscan siparmyknife sipp sipvicious sniffjoke sslsplit sslstrip thc-ipv6 voiphopper webscarab wifi-honey wireshark xspy yersinia zaproxy cryptcat cymothoa dbd dns2tcp http-tunnel httptunnel intersect nishang polenum powersploit pwnat ridenum sbd u3-pwn webshells weevely casefile cutycapt dos2unix dradis keepnote magictree metagoofil nipper-ng pipal armitage backdoor-factory cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch crackle jboss-autopwn linux-exploit-suggester maltego-teeth set shellnoob sqlmap thc-ipv6 yersinia beef-xss binwalk bulk-extractor chntpw cuckoo dc3dd ddrescue dumpzilla extundelete foremost galleta guymager iphone-backup-analyzer p0f pdf-parser pdfid pdgmail peepdf volatility xplico dhcpig funkload iaxflood inviteflood ipv6-toolkit mdk3 reaver rtpflood slowhttptest t50 termineter thc-ipv6 thc-ssl-dos acccheck burpsuite cewl chntpw cisco-auditing-tool cmospwd creddump crunch findmyhash gpp-decrypt hash-identifier hexorbase john johnny keimpx maltego-teeth maskprocessor multiforcer ncrack oclgausscrack pack patator polenum rainbowcrack rcracki-mt rsmangler statsprocessor thc-pptp-bruter truecrack webscarab wordlists zaproxy apktool dex2jar python-distorm3 edb-debugger jad javasnoop jd ollydbg smali valgrind yara android-sdk apktool arduino dex2jar sakis3g smali && wget http://www.morningstarsecurity.com/downloads/bing-ip2hosts-0.4.tar.gz && tar -xzvf bing-ip2hosts-0.4.tar.gz && cp bing-ip2hosts-0.4/bing-ip2hosts /usr/local/bin/\")\t\n\t\t\t\t\t\twhile opcion1 == \"1\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Information Gathering\\033[1;m\n\n 1) acccheck\t\t\t\t\t30) lbd\n 2) ace-voip\t\t\t\t\t31) Maltego Teeth\n 3) Amap\t\t\t\t\t32) masscan\n 4) Automater\t\t\t\t\t33) Metagoofil\n 5) bing-ip2hosts\t\t\t\t34) Miranda\n 6) braa\t\t\t\t\t35) Nmap\n 7) CaseFile\t\t\t\t\t36) ntop\n 8) CDPSnarf\t\t\t\t\t37) p0f\n 9) cisco-torch\t\t\t\t\t38) Parsero\n10) Cookie Cadger\t\t\t\t39) Recon-ng\n11) copy-router-config\t\t\t\t40) SET\n12) DMitry\t\t\t\t\t41) smtp-user-enum\n13) dnmap\t\t\t\t\t42) snmpcheck\n14) dnsenum\t\t\t\t\t43) sslcaudit\n15) dnsmap\t\t\t\t\t44) SSLsplit\n16) DNSRecon\t\t\t\t\t45) sslstrip\n17) dnstracer\t\t\t\t\t46) SSLyze\n18) dnswalk\t\t\t\t\t47) THC-IPV6\n19) DotDotPwn\t\t\t\t\t48) theHarvester\n20) enum4linux\t\t\t\t\t49) TLSSLed\n21) enumIAX\t\t\t\t\t50) twofi\n22) exploitdb\t\t\t\t\t51) URLCrazy\n23) Fierce\t\t\t\t\t52) Wireshark\n24) Firewalk\t\t\t\t\t53) WOL-E\n25) fragroute\t\t\t\t\t54) Xplico\n26) fragrouter\t\t\t\t\t55) iSMTP\n27) Ghost Phisher\t\t\t\t56) InTrace\n28) GoLismero\t\t\t\t\t57) hping3\n29) goofile\n\n0) Install all Information Gathering tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install acccheck\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ace-voip\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install amap\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install automater\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"wget http://www.morningstarsecurity.com/downloads/bing-ip2hosts-0.4.tar.gz && tar -xzvf bing-ip2hosts-0.4.tar.gz && cp bing-ip2hosts-0.4/bing-ip2hosts /usr/local/bin/\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install braa\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install casefile\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cdpsnarf\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-torch\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cookie-cadger\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install copy-router-config\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dmitry\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnmap\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnsenum\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnsmap\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnsrecon\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnstracer\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnswalk\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dotdotpwn\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install enum4linux\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install enumiax\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install exploitdb\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install fierce\")\n\t\t\t\t\t\t\telif opcion2 == \"24\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install firewalk\")\n\t\t\t\t\t\t\telif opcion2 == \"25\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install fragroute\")\n\t\t\t\t\t\t\telif opcion2 == \"26\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install fragrouter\")\n\t\t\t\t\t\t\telif opcion2 == \"27\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ghost-phisher\")\n\t\t\t\t\t\t\telif opcion2 == \"28\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install golismero\")\n\t\t\t\t\t\t\telif opcion2 == \"29\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install goofile\")\n\t\t\t\t\t\t\telif opcion2 == \"30\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install lbd\")\n\t\t\t\t\t\t\telif opcion2 == \"31\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install maltego-teeth\")\n\t\t\t\t\t\t\telif opcion2 == \"32\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install masscan\")\n\t\t\t\t\t\t\telif opcion2 == \"33\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install metagoofil\")\n\t\t\t\t\t\t\telif opcion2 == \"34\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install miranda\")\n\t\t\t\t\t\t\telif opcion2 == \"35\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install nmap\")\n\t\t\t\t\t\t\telif opcion2 == \"36\":\n\t\t\t\t\t\t\t\tprint ('ntop is unavailable')\n\t\t\t\t\t\t\telif opcion2 == \"37\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install p0f\")\n\t\t\t\t\t\t\telif opcion2 == \"38\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install parsero\")\n\t\t\t\t\t\t\telif opcion2 == \"39\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install recon-ng\")\n\t\t\t\t\t\t\telif opcion2 == \"40\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install set\")\n\t\t\t\t\t\t\telif opcion2 == \"41\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install smtp-user-enum\")\n\t\t\t\t\t\t\telif opcion2 == \"42\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install snmpcheck\")\n\t\t\t\t\t\t\telif opcion2 == \"43\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sslcaudit\")\n\t\t\t\t\t\t\telif opcion2 == \"44\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sslsplit\")\n\t\t\t\t\t\t\telif opcion2 == \"45\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sslstrip\")\n\t\t\t\t\t\t\telif opcion2 == \"46\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sslyze\")\n\t\t\t\t\t\t\telif opcion2 == \"47\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-ipv6\")\n\t\t\t\t\t\t\telif opcion2 == \"48\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install theharvester\")\n\t\t\t\t\t\t\telif opcion2 == \"49\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install tlssled\")\n\t\t\t\t\t\t\telif opcion2 == \"50\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install twofi\")\n\t\t\t\t\t\t\telif opcion2 == \"51\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install urlcrazy\")\n\t\t\t\t\t\t\telif opcion2 == \"52\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wireshark\")\n\t\t\t\t\t\t\telif opcion2 == \"53\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wol-e\")\n\t\t\t\t\t\t\telif opcion2 == \"54\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install xplico\")\n\t\t\t\t\t\t\telif opcion2 == \"55\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ismtp\")\n\t\t\t\t\t\t\telif opcion2 == \"56\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install intrace\")\n\t\t\t\t\t\t\telif opcion2 == \"57\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install hping3\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()\t\t\n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y acccheck ace-voip amap automater braa casefile cdpsnarf cisco-torch cookie-cadger copy-router-config dmitry dnmap dnsenum dnsmap dnsrecon dnstracer dnswalk dotdotpwn enum4linux enumiax exploitdb fierce firewalk fragroute fragrouter ghost-phisher golismero goofile lbd maltego-teeth masscan metagoofil miranda nmap p0f parsero recon-ng set smtp-user-enum snmpcheck sslcaudit sslsplit sslstrip sslyze thc-ipv6 theharvester tlssled twofi urlcrazy wireshark wol-e xplico ismtp intrace hping3 && wget http://www.morningstarsecurity.com/downloads/bing-ip2hosts-0.4.tar.gz && tar -xzvf bing-ip2hosts-0.4.tar.gz && cp bing-ip2hosts-0.4/bing-ip2hosts /usr/local/bin/\")\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\n\n\n\t\t\t\t\t\twhile opcion1 == \"2\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Vulnerability Analysis\\033[1;m\n\n 1) BBQSQL\t\t\t\t18) Nmap\n 2) BED\t\t\t\t\t19)ohrwurm\n 3) cisco-auditing-tool\t\t\t20) openvas-administrator\n 4) cisco-global-exploiter\t\t21) openvas-cli\n 5) cisco-ocs\t\t\t\t22) openvas-manager\n 6) cisco-torch\t\t\t\t23) openvas-scanner\n 7) copy-router-config\t\t\t24) Oscanner\n 8) commix\t\t\t\t25) Powerfuzzer\n 9) DBPwAudit\t\t\t\t26) sfuzz\n10) DoonaDot\t\t\t\t27) SidGuesser\n11) DotPwn\t\t\t\t28) SIPArmyKnife\n12) Greenbone Security Assistant \t29) sqlmap\n13) GSD\t\t\t\t\t30) Sqlninja\n14) HexorBase\t\t\t\t31) sqlsus\n15) Inguma\t\t\t\t32) THC-IPV6\n16) jSQL\t\t\t\t33) tnscmd10g\n17) Lynis\t\t\t\t34) unix-privesc-check\n\t\t\t\t\t35) Yersinia\n\n0) Install all Vulnerability Analysis tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bbqsql\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bed\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-auditing-tool\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-global-exploiter\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-ocs\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-torch\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install copy-router-config\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone https://github.com/stasinopoulos/commix.git commix && cd commix && python ./commix.py --install\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"echo 'download page : http://www.cqure.net/wp/tools/database/dbpwaudit/'\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install doona\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dotdotpwn\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install greenbone-security-assistant\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/gsd.git\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install hexorbase\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tprint (\"Please download inguma from : http://inguma.sourceforge.net\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install jsql\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install lynis\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install nmap\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ohrwurm\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install openvas-administrator\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install openvas-cli\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install openvas-manager\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install openvas-scanner\")\n\t\t\t\t\t\t\telif opcion2 == \"24\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install oscanner\")\n\t\t\t\t\t\t\telif opcion2 == \"25\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install powerfuzzer\")\n\t\t\t\t\t\t\telif opcion2 == \"26\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sfuzz\")\n\t\t\t\t\t\t\telif opcion2 == \"27\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sidguesser\")\n\t\t\t\t\t\t\telif opcion2 == \"28\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install siparmyknife\")\n\t\t\t\t\t\t\telif opcion2 == \"29\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlmap\")\n\t\t\t\t\t\t\telif opcion2 == \"30\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlninja\")\n\t\t\t\t\t\t\telif opcion2 == \"31\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlsus\")\n\t\t\t\t\t\t\telif opcion2 == \"32\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-ipv6\")\n\t\t\t\t\t\t\telif opcion2 == \"33\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install tnscmd10g\")\n\t\t\t\t\t\t\telif opcion2 == \"34\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install unix-privesc-check\")\n\t\t\t\t\t\t\telif opcion2 == \"35\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install yersinia\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()\t\t\t\t\t\t\n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y bbqsql bed cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch copy-router-config doona dotdotpwn greenbone-security-assistant hexorbase jsql lynis nmap ohrwurm openvas-cli openvas-manager openvas-scanner oscanner powerfuzzer sfuzz sidguesser siparmyknife sqlmap sqlninja sqlsus thc-ipv6 tnscmd10g unix-privesc-check yersinia\")\t\t\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\n\t\t\t\t\t\twhile opcion1 == \"3\":\n\t\t\t\t\t\t\tprint ('''\n\t\t\\033[1;36m=+[ Wireless Attacks\\033[1;m\n\n 1) Aircrack-ng\t\t\t\t17) kalibrate-rtl\n 2) Asleap\t\t\t\t18) KillerBee\n 3) Bluelog\t\t\t\t19) Kismet\n 4) BlueMaho\t\t\t\t20) mdk3\n 5) Bluepot\t\t\t\t21) mfcuk\n 6) BlueRanger\t\t\t\t22) mfoc\n 7) Bluesnarfer\t\t\t\t23) mfterm\n 8) Bully\t\t\t\t24) Multimon-NG\n 9) coWPAtty\t\t\t\t25) PixieWPS\n10) crackle\t\t\t\t26) Reaver\n11) eapmd5pass\t\t\t\t27) redfang\n12) Fern Wifi Cracker\t\t\t28) RTLSDR Scanner\n13) Ghost Phisher\t\t\t29) Spooftooph\n14) GISKismet\t\t\t\t30) Wifi Honey\t\t\t\t31) Wifitap\n16) gr-scan\t\t\t\t32) Wifite \n\n0) Install all Wireless Attacks tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install aircrack-ng\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install asleap\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bluelog\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/bluemaho.git\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/bluepot.git\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install blueranger\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bluesnarfer\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bully\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cowpatty\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install crackle\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install eapmd5pass\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install fern-wifi-cracker\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ghost-phisher\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install giskismet\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/gr-scan.git\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install kalibrate-rtl\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install killerbee\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install kismet\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install mdk3\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install mfcuk\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install mfoc\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install mfterm\")\n\t\t\t\t\t\t\telif opcion2 == \"24\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install multimon-ng\")\n\t\t\t\t\t\t\telif opcion2 == \"25\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pixiewps\")\n\t\t\t\t\t\t\telif opcion2 == \"26\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install reaver\")\n\t\t\t\t\t\t\telif opcion2 == \"27\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install redfang\")\n\t\t\t\t\t\t\telif opcion2 == \"28\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rtlsdr-scanner\")\n\t\t\t\t\t\t\telif opcion2 == \"29\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install spooftooph\")\n\t\t\t\t\t\t\telif opcion2 == \"30\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wifi-honey\")\n\t\t\t\t\t\t\telif opcion2 == \"31\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wifitap\")\n\t\t\t\t\t\t\telif opcion2 == \"32\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wifite\")\n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y aircrack-ng asleap bluelog blueranger bluesnarfer bully cowpatty crackle eapmd5pass fern-wifi-cracker ghost-phisher giskismet gqrx kalibrate-rtl killerbee kismet mdk3 mfcuk mfoc mfterm multimon-ng pixiewps reaver redfang spooftooph wifi-honey wifitap wifite\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()\t\t\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"4\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Web Applications\\033[1;m\n\n 1) apache-users\t\t\t21) Parsero\n 2) Arachni\t\t\t\t22) plecost\n 3) BBQSQL\t\t\t\t23) Powerfuzzer\n 4) BlindElephant\t\t\t24) ProxyStrike\n 5) Burp Suite\t\t\t\t25) Recon-ng\n 6) commix\t\t\t\t26) Skipfish\n 7) CutyCapt\t\t\t\t27) sqlmap\n 8) DAVTest\t\t\t\t28) Sqlninja\n 9) deblaze\t\t\t\t29) sqlsus\n10) DIRB\t\t\t\t30) ua-tester\n11) DirBuster\t\t\t\t31) Uniscan\n12) fimap\t\t\t\t32) Vega\n13) FunkLoad\t\t\t\t33) w3af\n14) Grabber\t\t\t\t34) WebScarab\n15) jboss-autopwn\t\t\t35) Webshag\n16) joomscan\t\t\t\t36) WebSlayer\n17) jSQL\t\t\t\t37) WebSploit\n18) Maltego Teeth\t\t\t38) Wfuzz\n19) PadBuster\t\t\t\t39) WPScan\n20) Paros\t\t\t\t40) XSSer\n\t\t\t\t\t41) zaproxy\n\n0) Install all Web Applications tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install apache-users\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install arachni\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bbqsql\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install blindelephant\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install burpsuite\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cutycapt\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone https://github.com/stasinopoulos/commix.git commix && cd commix && python ./commix.py --install\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install davtest\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install deblaze\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dirb\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dirbuster\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install fimap\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install funkload\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install grabber\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install jboss-autopwn\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install joomscan\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install jsql\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install maltego-teeth\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install padbuster\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install paros\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install parsero\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install plecost\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install powerfuzzer\")\n\t\t\t\t\t\t\telif opcion2 == \"24\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install proxystrike\")\n\t\t\t\t\t\t\telif opcion2 == \"25\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install recon-ng\")\n\t\t\t\t\t\t\telif opcion2 == \"26\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install skipfish\")\n\t\t\t\t\t\t\telif opcion2 == \"27\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlmap\")\n\t\t\t\t\t\t\telif opcion2 == \"28\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlninja\")\n\t\t\t\t\t\t\telif opcion2 == \"29\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlsus\")\n\t\t\t\t\t\t\telif opcion2 == \"30\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ua-tester\")\n\t\t\t\t\t\t\telif opcion2 == \"31\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install uniscan\")\n\t\t\t\t\t\t\telif opcion2 == \"32\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install vega\")\n\t\t\t\t\t\t\telif opcion2 == \"33\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install w3af\")\n\t\t\t\t\t\t\telif opcion2 == \"34\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install webscarab\")\n\t\t\t\t\t\t\telif opcion2 == \"35\":\n\t\t\t\t\t\t\t\tprint (\"Webshag is unavailable\")\n\t\t\t\t\t\t\telif opcion2 == \"36\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/webslayer.git\")\n\t\t\t\t\t\t\telif opcion2 == \"37\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install websploit\")\n\t\t\t\t\t\t\telif opcion2 == \"38\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wfuzz\")\n\t\t\t\t\t\t\telif opcion2 == \"39\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wpscan\")\n\t\t\t\t\t\t\telif opcion2 == \"40\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install xsser\")\n\t\t\t\t\t\t\telif opcion2 == \"41\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install zaproxy\")\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()\t\n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y apache-users arachni bbqsql blindelephant burpsuite cutycapt davtest deblaze dirb dirbuster fimap funkload grabber jboss-autopwn joomscan jsql maltego-teeth padbuster paros parsero plecost powerfuzzer proxystrike recon-ng skipfish sqlmap sqlninja sqlsus ua-tester uniscan vega w3af webscarab websploit wfuzz wpscan xsser zaproxy\")\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"5\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Sniffing & Spoofing\\033[1;m\n\n 1) Burp Suite\t\t\t\t17) rtpmixsound\n 2) DNSChef\t\t\t\t18) sctpscan\n 3) fiked\t\t\t\t19) SIPArmyKnife\n 4) hamster-sidejack\t\t\t20) SIPp\n 5) HexInject\t\t\t\t21) SIPVicious\n 6) iaxflood\t\t\t\t22) SniffJoke\n 7) inviteflood\t\t\t\t23) SSLsplit\n 8) iSMTP\t\t\t\t24) sslstrip\n 9) isr-evilgrade\t\t\t25) THC-IPV6\n10) mitmproxy\t\t\t\t26) VoIPHopper\n11) ohrwurm\t\t\t\t27) WebScarab\n12) protos-sip\t\t\t\t28) Wifi Honey\n13) rebind\t\t\t\t29) Wireshark\n14) responder\t\t\t\t30) xspy\n15) rtpbreak\t\t\t\t31) Yersinia\n16) rtpinsertsound\t\t\t32) zaproxy \n\n0) Install all Sniffing & Spoofing tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install burpsuite\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dnschef\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install fiked\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install hamster-sidejack\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install hexinject\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install iaxflood\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install inviteflood\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ismtp\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/isr-evilgrade.git\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install mitmproxy\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ohrwurm\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install protos-sip\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rebind\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install responder\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rtpbreak\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rtpinsertsound\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rtpmixsound\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sctpscan\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install siparmyknife\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sipp\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sipvicious\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sniffjoke\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sslsplit\")\n\t\t\t\t\t\t\telif opcion2 == \"24\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sslstrip\")\n\t\t\t\t\t\t\telif opcion2 == \"25\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-ipv6\")\n\t\t\t\t\t\t\telif opcion2 == \"26\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install voiphopper\")\n\t\t\t\t\t\t\telif opcion2 == \"27\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install webscarab\")\n\t\t\t\t\t\t\telif opcion2 == \"28\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wifi-honey\")\n\t\t\t\t\t\t\telif opcion2 == \"29\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wireshark\")\n\t\t\t\t\t\t\telif opcion2 == \"30\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install xspy\")\n\t\t\t\t\t\t\telif opcion2 == \"31\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install yersinia\")\n\t\t\t\t\t\t\telif opcion2 == \"32\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install zaproxy\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()\n\n\n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y burpsuite dnschef fiked hamster-sidejack hexinject iaxflood inviteflood ismtp mitmproxy ohrwurm protos-sip rebind responder rtpbreak rtpinsertsound rtpmixsound sctpscan siparmyknife sipp sipvicious sniffjoke sslsplit sslstrip thc-ipv6 voiphopper webscarab wifi-honey wireshark xspy yersinia zaproxy\")  \n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\n\t\t\t\t\t\twhile opcion1 == \"6\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Maintaining Access\\033[1;m\n\n 1) CryptCat\n 2) Cymothoa\n 3) dbd\n 4) dns2tcp\n 5) http-tunnel\t\n 6) HTTPTunnel\n 7) Intersect\n 8) Nishang\n 9) polenum\n10) PowerSploit\n11) pwnat\n12) RidEnum\n13) sbd\n14) U3-Pwn\n15) Webshells\n16) Weevely\n\n0) Install all Maintaining Access tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cryptcat\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cymothoa\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dbd\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dns2tcp\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install http-tunnel\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install httptunnel\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install intersect\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install nishang\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install polenum\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install powersploit\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pwnat\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ridenum\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sbd\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install u3-pwn\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install webshells\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install weevely\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y cryptcat cymothoa dbd dns2tcp http-tunnel httptunnel intersect nishang polenum powersploit pwnat ridenum sbd u3-pwn webshells weevely\")\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"7\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Reporting Tools\\033[1;m\n\n1) CaseFile\n2) CutyCapt\n3) dos2unix\n4) Dradis\n5) KeepNote\t\n6) MagicTree\n7) Metagoofil\n8) Nipper-ng\n9) pipal\n\n0) Install all Reporting Tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install casefile\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cutycapt\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dos2unix\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dradis\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install keepnote\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install magictree\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install metagoofil\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install nipper-ng\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pipal\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y casefile cutycapt dos2unix dradis keepnote magictree metagoofil nipper-ng pipal\")  \n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\n\t\t\t\t\t\twhile opcion1 == \"8\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Exploitation Tools\\033[1;m\n\n 1) Armitage\n 2) Backdoor Factory\n 3) BeEF\n 4) cisco-auditing-tool\n 5) cisco-global-exploiter\t\n 6) cisco-ocs\n 7) cisco-torch\n 8) commix\n 9) crackle\n10) jboss-autopwn\n11) Linux Exploit Suggester\n12) Maltego Teeth\n13) SET\n14) ShellNoob\n15) sqlmap\n16) THC-IPV6\n17) Yersinia\n\n0) Install all Exploitation Tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install armitage\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install backdoor-factory\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install beef-xss\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-auditing-tool\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-global-exploiter\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-ocs\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-torch\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone https://github.com/stasinopoulos/commix.git commix && cd commix && python ./commix.py --install\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install crackle\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install jboss-autopwn\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install linux-exploit-suggester\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install maltego-teeth\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install set\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install shellnoob\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sqlmap\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-ipv6\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install yersinia\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y armitage backdoor-factory cisco-auditing-tool cisco-global-exploiter cisco-ocs cisco-torch crackle jboss-autopwn linux-exploit-suggester maltego-teeth set shellnoob sqlmap thc-ipv6 yersinia beef-xss\")  \t\t\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\n\t\t\t\t\t\twhile opcion1 == \"9\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Forensics Tools\\033[1;m\n\n 1) Binwalk\t\t\t\t11) extundelete\n 2) bulk-extractor\t\t\t12) Foremost\n 3) Capstone\t\t\t\t13) Galleta\n 4) chntpw\t\t\t\t14) Guymager\n 5) Cuckoo\t\t\t\t15) iPhone Backup Analyzer\n 6) dc3dd\t\t\t\t16) p0f\n 7) ddrescue\t\t\t\t17) pdf-parser\n 8) DFF\t\t\t\t\t18) pdfid\n 9) diStorm3\t\t\t\t19) pdgmail\n10) Dumpzilla\t\t\t\t20) peepdf\n\t\t\t\t\t21) RegRipper\n\t\t\t\t\t22) Volatility\n\t\t\t\t\t23) Xplico\n\n0) Install all Forensics Tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install binwalk\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install bulk-extractor\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/capstone.git\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install chntpw\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cuckoo\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dc3dd\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ddrescue\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tprint ('dff is unavailable')\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/distorm3.git\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dumpzilla\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install extundelete\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install foremost\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install galleta\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install guymager\")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install iphone-backup-analyzer\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install p0f\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pdf-parser\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pdfid\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pdgmail\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install peepdf\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tprint (\"Regripper is unavailable\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install volatility\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install xplico\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y binwalk bulk-extractor chntpw cuckoo dc3dd ddrescue dumpzilla extundelete foremost galleta guymager iphone-backup-analyzer p0f pdf-parser pdfid pdgmail peepdf volatility xplico\")\t\t\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"10\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Stress Testing\\033[1;m\n\n 1) DHCPig\n 2) FunkLoad\n 3) iaxflood\n 4) Inundator\n 5) inviteflood\t\n 6) ipv6-toolkit\n 7) mdk3\n 8) Reaver\n 9) rtpflood\n10) SlowHTTPTest\n11) t50\n12) Termineter\n13) THC-IPV6\n14) THC-SSL-DOS \t\t\n\n0) Install all Stress Testing tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dhcpig\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install funkload\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install iaxflood\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/inundator.git\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install inviteflood\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ipv6-toolkit\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install mdk3\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install reaver\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rtpflood\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install slowhttptest\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install t50\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install termineter\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-ipv6\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-ssl-dos \")    \t\t\t\t             \t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y dhcpig funkload iaxflood inviteflood ipv6-toolkit mdk3 reaver rtpflood slowhttptest t50 termineter thc-ipv6 thc-ssl-dos\")\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"11\":\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Password Attacks\\033[1;m\n\n 1) acccheck\t\t\t\t19) Maskprocessor\n 2) Burp Suite\t\t\t\t20) multiforcer\n 3) CeWL\t\t\t\t21) Ncrack\n 4) chntpw\t\t\t\t22) oclgausscrack\n 5) cisco-auditing-tool\t\t\t23) PACK\n 6) CmosPwd\t\t\t\t24) patator\n 7) creddump\t\t\t\t25) phrasendrescher\n 8) crunch\t\t\t\t26) polenum\n 9) DBPwAudit\t\t\t\t27) RainbowCrack\n10) findmyhash\t\t\t\t28) rcracki-mt\n11) gpp-decrypt\t\t\t\t29) RSMangler\n12) hash-identifier\t\t\t30) SQLdict\n13) HexorBase\t\t\t\t31) Statsprocessor\n14) THC-Hydra\t\t\t\t32) THC-pptp-bruter\n15) John the Ripper\t\t\t33) TrueCrack\n16) Johnny\t\t\t\t34) WebScarab \n17) keimpx\t\t\t\t35) wordlists \n18) Maltego Teeth\t\t\t36) zaproxy \n\n0) Install all Password Attacks tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install acccheck\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install burpsuite\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cewl\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install chntpw\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cisco-auditing-tool\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install cmospwd\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install creddump\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install crunch\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install git && git clone git://git.kali.org/packages/dbpwaudit.git\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install findmyhash\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install gpp-decrypt\")\n\t\t\t\t\t\t\telif opcion2 == \"12\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install hash-identifier\")\n\t\t\t\t\t\t\telif opcion2 == \"13\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install hexorbase\")\n\t\t\t\t\t\t\telif opcion2 == \"14\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"echo 'please visit : https://www.thc.org/thc-hydra/' \")\n\t\t\t\t\t\t\telif opcion2 == \"15\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install john\")\n\t\t\t\t\t\t\telif opcion2 == \"16\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install johnny\")\n\t\t\t\t\t\t\telif opcion2 == \"17\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install keimpx\")\n\t\t\t\t\t\t\telif opcion2 == \"18\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install maltego-teeth\")\n\t\t\t\t\t\t\telif opcion2 == \"19\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install maskprocessor\")\n\t\t\t\t\t\t\telif opcion2 == \"20\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install multiforcer\")\n\t\t\t\t\t\t\telif opcion2 == \"21\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install ncrack\")\n\t\t\t\t\t\t\telif opcion2 == \"22\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install oclgausscrack\")\n\t\t\t\t\t\t\telif opcion2 == \"23\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install pack\")\n\t\t\t\t\t\t\telif opcion2 == \"24\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install patator\")\n\t\t\t\t\t\t\telif opcion2 == \"25\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"echo 'please visit : http://www.leidecker.info/projects/phrasendrescher/index.shtml' \")\n\t\t\t\t\t\t\telif opcion2 == \"26\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install polenum\")\n\t\t\t\t\t\t\telif opcion2 == \"27\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rainbowcrack\")\n\t\t\t\t\t\t\telif opcion2 == \"28\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rcracki-mt\")\n\t\t\t\t\t\t\telif opcion2 == \"29\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install rsmangler\")\n\t\t\t\t\t\t\telif opcion2 == \"30\":\n\t\t\t\t\t\t\t\tprint (\"Sqldict is unavailable\")\n\t\t\t\t\t\t\telif opcion2 == \"31\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install statsprocessor\")\n\t\t\t\t\t\t\telif opcion2 == \"32\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install thc-pptp-bruter\")\n\t\t\t\t\t\t\telif opcion2 == \"33\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install truecrack\")\n\t\t\t\t\t\t\telif opcion2 == \"34\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install webscarab\")\n\t\t\t\t\t\t\telif opcion2 == \"35\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install wordlists\")\n\t\t\t\t\t\t\telif opcion2 == \"36\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install zaproxy\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y acccheck burpsuite cewl chntpw cisco-auditing-tool cmospwd creddump crunch findmyhash gpp-decrypt hash-identifier hexorbase john johnny keimpx maltego-teeth maskprocessor multiforcer ncrack oclgausscrack pack patator polenum rainbowcrack rcracki-mt rsmangler statsprocessor thc-pptp-bruter truecrack webscarab wordlists zaproxy\")\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"12\" :\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Reverse Engineering\\033[1;m\n\n 1) apktool\n 2) dex2jar\n 3) diStorm3\n 4) edb-debugger\n 5) jad\t\n 6) javasnoop\n 7) JD-GUI\n 8) OllyDbg\n 9) smali\n10) Valgrind\n11) YARA\n\n0) Install all Reverse Engineering tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install apktool\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dex2jar\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install python-diStorm3\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install edb-debugger\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install jad\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install javasnoop\")\n\t\t\t\t\t\t\telif opcion2 == \"7\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install JD\")\n\t\t\t\t\t\t\telif opcion2 == \"8\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install OllyDbg\")\n\t\t\t\t\t\t\telif opcion2 == \"9\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install smali\")\n\t\t\t\t\t\t\telif opcion2 == \"10\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install Valgrind\")\n\t\t\t\t\t\t\telif opcion2 == \"11\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install YARA\")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y apktool dex2jar python-diStorm3 edb-debugger jad javasnoop JD OllyDbg smali Valgrind YARA\")\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"13\" :\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Hardware Hacking\\033[1;m\n\n 1) android-sdk\n 2) apktool\n 3) Arduino\n 4) dex2jar\n 5) Sakis3G\t\n 6) smali\n\n0) Install all Hardware Hacking tools\n\t\t\t\t \n\t\t\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install android-sdk\")\n\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install apktool\")\n\n\t\t\t\t\t\t\telif opcion2 == \"3\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install arduino\")\n\t\t\t\t\t\t\telif opcion2 == \"4\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install dex2jar\")\n\t\t\t\t\t\t\telif opcion2 == \"5\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install sakis3g\")\n\t\t\t\t\t\t\telif opcion2 == \"6\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install smali\")\n\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()   \n\t\t\t\t\t\t\telif opcion2 == \"0\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install -y android-sdk apktool arduino dex2jar sakis3g smali\")\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tprint (\"\\033[1;31mSorry, that was an invalid command!\\033[1;m\")\n\t\t\t\t\t\twhile opcion1 == \"14\" :\n\t\t\t\t\t\t\tprint ('''\n\\033[1;36m=+[ Extra\\033[1;m\n\n1) Wifresti\n2) Squid3\n\t\t\t\t''')\n\t\t\t\t\t\t\tprint (\"\\033[1;32mInsert the number of the tool to install it .\\n\\033[1;m\")\n\t\t\t\t\t\t\topcion2 = raw_input(\"\\033[1;36mkat > \\033[1;m\")\n\t\t\t\t\t\t\tif opcion2 == \"1\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"git clone https://github.com/LionSec/wifresti.git && cp wifresti/wifresti.py /usr/bin/wifresti && chmod +x /usr/bin/wifresti && wifresti\")\n\t\t\t\t\t\t\t\tprint (\" \")\n\t\t\t\t\t\t\telif opcion2 == \"2\":\n\t\t\t\t\t\t\t\tcmd = os.system(\"apt-get install squid3\")\n\t\t\t\t\t\t\t\tprint (\" \")\n\t\t\t\t\t\t\telif opcion2 == \"back\":\n\t\t\t\t\t\t\t\tinicio()\n\t\t\t\t\t\t\telif opcion2 == \"gohome\":\n\t\t\t\t\t\t\t\tinicio1()\n\n\t\t\t\tinicio()\n\t\tinicio1()\n\texcept KeyboardInterrupt:\n\t\tprint (\"Shutdown requested...Goodbye...\")\n\texcept Exception:\n\t\ttraceback.print_exc(file=sys.stdout)\n\tsys.exit(0)\n\nif __name__ == \"__main__\":\n    main()\n"
        }
      ]
    }
  ]
}