{
  "metadata": {
    "timestamp": 1736559928932,
    "page": 697,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "praw-dev/praw",
      "stars": 3560,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.080078125,
          "content": "[report]\nexclude_lines =\n    @abstract\n    if TYPE_CHECKING:\n    pragma: no cover\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08984375,
          "content": "*.egg\n*.egg-info/\n*.eggs/\n*.pyc\n.cache/\n.coverage\n.pytest_cache/\n.tox/\n_build/\nbuild/\ndist/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.5283203125,
          "content": "repos:\n  - repo: local\n    hooks:\n      - id: static_word_checks\n        args:\n          - '--replace'\n        entry: python -m tools.static_word_checks\n        language: system\n        name: Static Word Checks\n        pass_filenames: false\n        types: [ python ]\n\n      - id: check_documentation\n        entry: python -m tools.check_documentation\n        language: system\n        name: Check Documentation\n        pass_filenames: false\n        types: [ python ]\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-executables-have-shebangs\n      - id: check-shebang-scripts-are-executable\n      - id: check-toml\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: mixed-line-ending\n        args: [ --fix=no ]\n      - id: name-tests-test\n        args: [ --pytest-test-first ]\n        files: ^tests/integration/.*\\.py|tests/unit/.*\\.py$\n      - id: sort-simple-yaml\n        files: ^(\\.github/workflows/.*\\.ya?ml|\\.readthedocs.ya?ml)$\n      - id: trailing-whitespace\n\n  - repo: https://github.com/pappasam/toml-sort\n    rev: v0.24.2\n    hooks:\n      - id: toml-sort-fix\n        files: ^(.*\\.toml)$\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff\n        args: [ --exit-non-zero-on-fix, --fix ]\n        files: ^(praw/.*.py)$\n\n  - repo: https://github.com/psf/black\n    hooks:\n      - id: black\n    rev: 24.10.0\n\n  - repo: https://github.com/LilSpazJoekp/docstrfmt\n    hooks:\n      - id: docstrfmt\n    rev: v1.9.0\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.1796875,
          "content": "build:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.9\"\nformats:\n  - htmlzip\npython:\n  install:\n    - method: pip\n      extra_requirements:\n        - readthedocs\n      path: .\nversion: 2\n"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 4.6767578125,
          "content": "Maintainers\n===========\n\n- Bryce Boe <bbzbryce@gmail.com> `@bboe <https://github.com/bboe>`_\n- Joe RH <jarhill0@gmail.com> `@jarhill0 <https://github.com/jarhill0>`_\n- Joel Payne <lilspazjoekp@gmail.com> `@LilSpazJoekp <https://github.com/LilSpazJoekp>`_\n\nDocumentation Contributors\n==========================\n\n- Dale Cudmore <dalecudmore@gmail.com> `@DCuddies <https://github.com/DCuddies>`_\n- Zhifu Ge <zhifu@me.com> `@zhifuge <https://github.com/zhifuge>`_\n- diceroll123 `@diceroll123 <https://github.com/diceroll123>`_\n- Watchful1 `@Watchful1 <https://github.com/Watchful1>`_\n- theonefoster `@theonefoster <https://github.com/theonefoster>`_\n- Eric Woolard `@ericwoolard <https://github.com/ericwoolard>`_\n- Marc `@PerhapsSomeone <https://github.com/PerhapsSomeone>`_\n- Richard Hoekstra `@RichardHoekstra <https://github.com/RichardHoekstra>`_\n- Pim Tholhuijsen `@mandjevant <https://github.com/mandjevant>`_\n- Martin Michlmayr `@tbm <https://github.com/tbm>`_\n- jac0b-w `@jac0b-w <https://github.com/jac0b-w>`_\n- Kenneth Yang `@kennethy <https://github.com/kennethy>`_\n- Tarak Oueriache <Igosad@protonmail.com> `@igosad <https://github.com/igosad>`_\n- xCROv `@xCROv <https://github.com/xCROv>`_\n- taq `@greentaquitos <https://github.com/greentaquitos>`_\n- Federico Gallo `@Karmavil <https://github.com/Karmavil>`_\n- Aidan Welch `@AidanWelch <https://github.com/AidanWelch>`_\n- Tom Eagles `@deplorableword <https://github.com/deplorableword>`_\n- Mohammad Ghalayini `@mghalayini <https://github.com/mghalayini>`_\n- Jason Haines `@jghaines <https://github.com/jghaines>`_\n- Johanna RÃ¼hrig `@TheRealVira <https://github.com/TheRealVira>`_\n- Sam Snarr `@sss-ng <https://github.com/sss-ng>`_\n- Moshe Dicker `@dickermoshe <https://github.com/dickermoshe>`_\n- u/gkanor `@gkanor <https://github.com/gkanor>`_\n- Add \"Name <email (optional)> and github profile link\" above this line.\n\nLogo Creator\n============\n\n- kungming2 `@kungming2 <https://github.com/kungming2>`_\n\nSource Contributors\n===================\n\n- Ethan Dalool <edalool@yahoo.com> `@voussoir <https://github.com/voussoir>`_\n- William McKinnerney <me@williammck.net> `@williammck <https://github.com/williammck>`_\n- Katharine Jarmul <katharine@kjamistan.com> `@kjam <https://github.com/kjam>`_\n- nmtake `@nmtake <https://github.com/nmtake>`_\n- Levi Roth <levimroth@gmail.com> `@leviroth <https://github.com/leviroth>`_\n- Keith Diedrick <kediedrick@gmail.com> `@darthkedrik <https://github.com/darthkedrik>`_\n- elnuno `@elnuno <https://github.com/elnuno>`_\n- Robbie Gibson `@rkgibson2 <https://github.com/rkgibson2>`_\n- Mike Wohlrab `@D0cR3d <https://github.com/D0cR3d>`_\n- Matthew Lee `@kwwxis <https://github.com/kwwxis>`_\n- guaneec `@guaneec <https://github.com/guaneec>`_\n- Jason Woodrich `@jwoodrich <https://github.com/jwoodrich>`_\n- Andrew Arnold `@asquared31415 <https://github.com/asquared31415>`_\n- bakonydraco `@bakonydraco <https://github.com/bakonydraco>`_\n- salehio `@salehio <https://github.com/salehio>`_\n- Amanda O'Neal <amanda.oneal.dev@gmail.com> `@amandaoneal\n  <https://github.com/amandaoneal>`_\n- Gourari Oussama <gourari.ouss@gmail.com> `@O-Gourari <https://github.com/O-Gourari>`_\n- Declan Hoare <declanhoare@exemail.com.au> `@NetwideRogue\n  <https://github.com/NetwideRogue>`_\n- Elaina Martineau `@CrackedP0t <https://github.com/CrackedP0t>`_\n- Rob Curtis <BourbonInExile@gmail.com> `@waab76 <https://github.com/waab76>`_\n- Pyprohly <pyprohly@outlook.com> `@Pyprohly <https://github.com/Pyprohly>`_\n- Timendum `@timendum <https://github.com/timendum>`_\n- vaclav-2012 `@vaclav-2012 <https://github.com/vaclav-2012>`_\n- Jon Meager `@H4CKY54CK <https://github.com/H4CKY54CK>`_\n- kungming2 `@kungming2 <https://github.com/kungming2>`_\n- Jack Steel `@jackodsteel <https://github.com/jackodsteel>`_\n- David Mirch `@fwump38 <https://github.com/fwump38>`_\n- PythonCoderAS `@PythonCoderAS <https://github.com/PythonCoderAS>`_\n- Michael Cetrulo <contact@michael-cetrulo.com> `@git2samus\n  <https://github.com/git2samus>`_\n- George Schizas `@gschizas <https://github.com/gschizas>`_\n- Todd Roberts `@toddrob99 <https://github.com/toddrob99>`_\n- MaybeNetwork `@MaybeNetwork <https://github.com/MaybeNetwork>`_\n- Nick Kelly `@nickatnight <https://github.com/nickatnight>`_\n- Yash Chhabria `@Cyatos <https://github.com/Cyatos>`_\n- Justin Krejcha <justin@justinkrejcha.com> `@jkrejcha <https://github.com/jkrejcha>`_\n- Dio Brando `@isFakeAccount <https://github.com/isFakeAccount>`_\n- Josh Kim `@jsk56143 <https://github.com/jsk56143>`_\n- Rolf Campbell `@endlisnis <https://github.com/endlisnis>`_\n- zacc `@zacc <https://github.com/zacc>`_\n- c0d3rman `@c0d3rman <https://github.com/c0d3rman>`_\n- Joe Kerhin `@jkerhin <https://github.com/jkerhin>`_\n- Add \"Name <email (optional)> and github profile link\" above this line.\n"
        },
        {
          "name": "CHANGES.rst",
          "type": "blob",
          "size": 47.8330078125,
          "content": "Change Log\n==========\n\nPRAW follows `semantic versioning <https://semver.org/>`_.\n\nUnreleased\n----------\n\n7.8.1 (2024/10/25)\n------------------\n\n**Changed**\n\n- Bumped prawcore to 2.4.0.\n\n7.8.0 (2024/10/20)\n------------------\n\n**Added**\n\n- :meth:`~.SubredditLinkFlairTemplates.reorder` to reorder a subreddit's link flair\n  templates.\n- :meth:`~.SubredditRedditorFlairTemplates.reorder` to reorder a subreddit's redditor\n  flair templates.\n- :func:`.stream_generator` now accepts the ``continue_after_id`` parameter, which\n  starts the stream after a given item ID.\n- Support for new share URL format created from Reddit's mobile apps.\n- :class:`.Reddit` has a new configurable parameter, ``window_size``. This tells PRAW\n  how long reddit's rate limit window is. This defaults to 600 seconds and shouldn't\n  need to be changed unless reddit changes the size of their rate limit window.\n\n**Fixed**\n\n- An issue where submitting a post with media would fail due to an API change.\n\n**Changed**\n\n- Drop support for Python 3.7, which is end-of-life on 2023-06-27.\n\n7.7.1 (2023/07/11)\n------------------\n\n**Fixed**\n\n- An issue with replying to a modmail conversation results in a error.\n\n7.7.0 (2023/02/25)\n------------------\n\n**Added**\n\n- :meth:`.delete_mobile_banner` to delete mobile banners.\n- :meth:`.upload_mobile_banner` to upload mobile banners.\n- Experimental :meth:`~.Submission._edit_experimental` for adding new inline media or\n  editing a submission that has inline media.\n\n  .. danger::\n\n      This method is experimental. It is reliant on undocumented API endpoints and may\n      result in existing inline media not displaying correctly and/or creating a\n      malformed body. Use at your own risk. This method may be removed in the future\n      without warning.\n\n  This method is identical to :meth:`.Submission.edit` except for the following:\n\n  - The ability to add inline media to existing posts.\n  - Additional ``preserve_inline_media`` keyword argument to allow PRAW to attempt to\n    preserve the existing inline media when editing a post. This is an experimental fix\n    for an issue that occurs when editing a post with inline media would cause the media\n    to lose their inline appearance.\n\n**Fixed**\n\n- An issue with iterating :class:`.ModNote` when a user has more than a hundred notes.\n- Removal reasons are now returned in the same order as they appear on Reddit.\n\n7.6.1 (2022/11/11)\n------------------\n\n**Changed**\n\n- Revert :meth:`~.Comment.edit` positional argument deprecation.\n- Revert :meth:`~.Comment.reply` positional argument deprecation.\n- Revert :meth:`~.Message.reply` positional argument deprecation.\n- Revert :meth:`~.Submission.edit` positional argument deprecation.\n- Revert :meth:`~.Submission.reply` positional argument deprecation.\n\n**Fixed**\n\n- An issue where :class:`.ModmailConversation`'s ``messages`` attribute would only\n  contain the latest message.\n\n7.6.0 (2022/05/10)\n------------------\n\n**Added**\n\n- :meth:`.pin` to manage pinned submissions on the authenticated user's profile.\n- :meth:`.update_display_layout` to update the display layout of posts in a\n  :class:`.Collection`.\n- :meth:`.SubredditCollectionsModeration.create` keyword argument ``display_layout`` for\n  specifying a display layout when creating a :class:`.Collection`.\n- :attr:`~.Message.parent` to get the parent of a :class:`.Message`.\n- :class:`.ModNote` to represent a moderator note.\n- :meth:`.ModNote.delete` to delete a single moderator note.\n- :class:`.RedditModNotes` to interact with moderator notes from a :class:`.Reddit`\n  instance. This provides the ability to create and fetch notes for one or more\n  redditors from one or more subreddits.\n- :class:`.RedditorModNotes` to interact with moderator notes from a :class:`.Redditor`\n  instance.\n- :meth:`.RedditorModNotes.subreddits` to obtain moderator notes from multiple\n  subreddits for a single redditor.\n- :class:`.SubredditModNotes` to interact with moderator notes from a\n  :class:`.Subreddit` instance.\n- :meth:`.SubredditModNotes.redditors` to obtain moderator notes for multiple redditors\n  from a single subreddit.\n- :meth:`~.BaseModNotes.create` to create a moderator note.\n- :attr:`.Redditor.notes` to interact with :class:`.RedditorModNotes`.\n- :attr:`.SubredditModeration.notes` to interact with :class:`.SubredditModNotes`.\n- :meth:`~.ModNoteMixin.create_note` create a moderator note from a :class:`.Comment` or\n  :class:`.Submission`.\n- :meth:`~.ModNoteMixin.author_notes` to view the moderator notes for the author of a\n  :class:`.Comment` or :class:`.Submission`.\n\n**Changed**\n\n- Drop support for Python 3.6, which is end-of-life on 2021-12-23.\n- :meth:`.conversations` now returns a :class:`.ListingGenerator` allowing you to page\n  through more than 100 conversations.\n\n**Deprecated**\n\n- The ``after`` argument for :meth:`.conversations` will now have to be included in\n  ``params`` keyword argument.\n- Positional keyword arguments for applicable functions and methods. Starting with PRAW\n  8, most functions and methods will no longer support positional arguments. It will\n  encourage more explicit argument passing, enable arguments to be sorted\n  alphabetically, and prevent breaking changes when adding new arguments to existing\n  methods.\n\n7.5.0 (2021/11/13)\n------------------\n\n**Added**\n\n- Log a warning if a submission's ``comment_sort`` attribute is updated after the\n  submission has already been fetched and a ``warn_comment_sort`` config setting to turn\n  off the warning.\n- :meth:`.user_selectable` to get available subreddit link flairs.\n- Automatic RateLimit handling will support errors with millisecond resolution.\n\n**Fixed**\n\n- An import error when using PRAW in environments where ``libsqlite3-dev`` is needed to\n  utilize the ``sqlite3`` builtin.\n- Fixed bug where some keyword arguments that are passed to :meth:`.Draft.submit` would\n  not have an effect.\n\n7.4.0 (2021/07/30)\n------------------\n\n**Added**\n\n- :meth:`~.WikiPage.discussions` to obtain site-wide link submissions that link to the\n  WikiPage.\n- :meth:`.revert` to revert a WikiPage to a specified revision.\n- :meth:`.Inbox.mark_all_read` to mark all messages as read with one API call.\n- :meth:`~.InboxableMixin.unblock_subreddit` to unblock a subreddit.\n- :meth:`.update_crowd_control_level` to update the crowd control level of a post.\n- :meth:`.moderator_subreddits`, which returns information about the subreddits that the\n  authenticated user moderates, has been restored.\n- The configuration setting ``refresh_token`` has been added back. See\n  https://www.reddit.com/r/redditdev/comments/olk5e6/followup_oauth2_api_changes_regarding_refresh/\n  for more info.\n- :class:`.Draft` to represent a submission draft.\n- :meth:`.Draft.delete` to delete drafts.\n- :meth:`.Draft.submit` to submit drafts.\n- :meth:`.Draft.update` to modify drafts.\n- :class:`.DraftHelper` to fetch or create drafts on new Reddit.\n- :class:`.DraftList` to represent a list of :class:`.Draft` objects.\n\n**Changed**\n\n- :meth:`.Reddit.delete` now accepts the ``params`` parameter.\n\n**Deprecated**\n\n- :class:`.Reddit` keyword argument ``token_manager``.\n\n7.3.0 (2021/06/17)\n------------------\n\n**Added**\n\n- :class:`.UserSubreddit` for the ``subreddit`` attribute of :class:`.Redditor`.\n- :meth:`.username_available` checks if a username is available.\n- :meth:`.trusted` to retrieve a :class:`.RedditorList` of trusted users.\n- :meth:`.trust` to add a user to the trusted list.\n- :meth:`.distrust` to remove a user from the trusted list.\n- :class:`.SQLiteTokenManager` (may not work on Windows).\n\n**Changed**\n\n- :meth:`.moderated` will now objectify all data returned from the API.\n- The ``wiki_edit`` endpoint has been changed from ``r/{subreddit}/api/wiki/edit/`` to\n  ``r/{subreddit}/api/wiki/edit``.\n- :meth:`.Redditor.block` no longer needs to retrieve a user's fullname.\n\n**Deprecated**\n\n- The ``subreddit`` attribute of :class:`.Redditor` is no longer a dict.\n- Legacy modmail is slated for deprecation by Reddit in June 2021. See\n  https://www.reddit.com/r/modnews/comments/mar9ha/even_more_modmail_improvements/ for\n  more info.\n\n**Fixed**\n\n- Fixed bug where :meth:`.WikiPage.edit` and :meth:`.SubredditWiki.create` would fail if\n  passed ``content`` and ``reason`` parameters that produced a request with a body\n  greater than 500 KiB, even when the parameters did not exceed their respective\n  permitted maximum lengths.\n- Fixed bug where :meth:`.request` could not handle instances of ``BadRequest``\\ s when\n  the JSON data contained only the keys \"reason\" and \"message\".\n- Fixed bug where :meth:`.request` could not handle instances of ``BadRequest``\\ s when\n  the response did not contain valid JSON data.\n- Fixed bug where :meth:`~.FullnameMixin.fullname` sometimes returned the wrong\n  fullname.\n\n7.2.0 (2021/02/24)\n------------------\n\n**Added**\n\n- :class:`.Reddit` keyword argument ``token_manager``.\n- :class:`.FileTokenManager` and its parent abstract class :class:`.BaseTokenManager`.\n\n**Deprecated**\n\n- The configuration setting ``refresh_token`` is deprecated and its use will result in a\n  :py:class:`DeprecationWarning`. This deprecation applies in all ways of setting\n  configuration values, i.e., via ``praw.ini``, as a keyword argument when initializing\n  an instance of :class:`.Reddit`, and via the ``PRAW_REFRESH_TOKEN`` environment\n  variable. To be prepared for PRAW 8, use the new :class:`.Reddit` keyword argument\n  ``token_manager``. See :ref:`refresh_token` in PRAW's documentation for an example.\n- :meth:`.me` will no longer return ``None`` when called in :attr:`.read_only` mode\n  starting in PRAW 8. A :py:class:`DeprecationWarning` will be issued. To switch forward\n  to the PRAW 8 behavior set ``praw8_raise_exception_on_me=True`` in your\n  :class:`.Reddit` call.\n\n7.1.4 (2021/02/07)\n------------------\n\n**Fixed**\n\n- Asynchronous check will no longer fail in Python 3.6 multithreading edge cases.\n\n7.1.3 (2021/02/05)\n------------------\n\n**Changed**\n\n- Asynchronous check will no longer occur when in a Jupyter notebook.\n\n7.1.2 (2021/02/03)\n------------------\n\n**Fixed**\n\n- Asynchronous check would not work on Python 3.6 as\n  :py:func:`~asyncio.get_running_loop` only exists on Python 3.7+.\n\n7.1.1 (2021/02/02)\n------------------\n\n**Added**\n\n- Add method :meth:`.Subreddits.premium` to reflect the naming change in Reddit's API.\n- Ability to submit image galleries with :meth:`~.Subreddit.submit_gallery`.\n- Ability to pass a gallery url to :meth:`.Reddit.submission`.\n- Ability to specify modmail mute duration.\n- Add method :meth:`.invited` to get invited moderators of a subreddit.\n- Ability to submit text/self posts with inline media.\n- Add method :meth:`.Submission.award` and :meth:`.Comment.award` with the ability to\n  specify type of award, anonymity, and message when awarding a submission or comment.\n- Ability to specify subreddits by name using the `subreddits` parameter in\n  :meth:`.Reddit.info`.\n- A check to see if PRAW is running in an asynchronous environment and will advise the\n  user to use `Async PRAW <https://asyncpraw.readthedocs.io>`_. This also adds a\n  configuration option to disable the check.\n\n**Changed**\n\n- Drop support for Python 3.5, which is end-of-life on 2020-09-13.\n- :class:`.BoundedSet` will now utilize a Last-Recently-Used (LRU) storing mechanism,\n  which will change the order in which elements are removed from the set.\n- Improved :meth:`~.Subreddit.submit_image` and :meth:`~.Subreddit.submit_video`\n  performance in slow network environments by removing a race condition when\n  establishing a websocket connection.\n\n**Deprecated**\n\n- :meth:`.Subreddits.gold` is superseded by :meth:`.Subreddits.premium`.\n- :meth:`.Submission.gild` is superseded by :meth:`.Submission.award`.\n- :meth:`.Comment.gild` is superseded by :meth:`.Comment.award`.\n\n**Fixed**\n\n- An issue where leaving as a moderator fails if you are using token auth.\n- An issue where an incorrect error was being raised due to invalid submission urls.\n- Some cases where streams yield the same item multiple times. This cannot be prevented\n  in every case.\n\n7.1.0 (2020/06/22)\n------------------\n\n**Added**\n\n- :class:`.Rule` to represent one rule of a subreddit.\n- :class:`.SubredditRules` to get and add rules.\n- Ability to submit polls with :meth:`~.Subreddit.submit_poll`.\n- :class:`.PollData` and :class:`.PollOption`.\n- Ability to view poll data and poll options via the ``.poll_data`` attribute on poll\n  submissions.\n- Add method :meth:`~.Reddit.delete` to :class:`.Reddit` class to support HTTP DELETE\n  requests.\n- Added :class:`.CalendarConfiguration` to represent the configuration of a\n  :class:`.Calendar` widget.\n- Added :class:`.Hover` to represent the hover state of a :class:`.Button`.\n- Added :class:`.Styles` to represent widget styling information.\n- Ability to stream live thread updates via new class :class:`.LiveThreadStream` with\n  method :meth:`~.LiveThreadStream.updates`.\n\n**Changed**\n\n- :meth:`.RemovalReason.update`'s parameters are now optional.\n- :meth:`.SubredditRemovalReasons.__getitem__` now takes integers and slices to get\n  removal reasons from the list of reasons as returned by Reddit.\n\n**Deprecated**\n\n- :attr:`.WebSocketException.original_exception` is deprecated and slated for removal in\n  PRAW 8.0.\n\n**Fixed**\n\n- An issue where certain subreddit settings could not be set through\n  :meth:`.SubredditModeration.update`, such as ``welcome_message_enabled`` and\n  ``welcome_message_text``. This change also removes the need for PRAW to track current\n  subreddit settings and send unmodified ones in the update request.\n- Instances of ``BadRequest``\\ s captured by PRAW that do not contain any detailed JSON\n  data are re-raised as the original ``BadRequest``.\n- :meth:`~.Subreddit.submit_image` and :meth:`~.Subreddit.submit_video` will throw\n  :class:`.MediaPostFailed` when Reddit fails to post an image or video post.\n\n7.0.0 (2020/04/24)\n------------------\n\n**Added**\n\n- ``config_interpolation`` parameter for :class:`.Reddit` supporting basic and extended\n  modes.\n- Add :meth:`.partial_redditors` that returns lightweight redditor objects that contain\n  only a few fields. This is useful for resolving :class:`.Redditor` IDs to their\n  usernames in bulk.\n- :meth:`.User.friends` has a new parameter ``user`` that takes either an instance of\n  :class:`.Redditor` or a string containing a redditor name and returns an instance of\n  :class:`.Redditor` if the authenticated user is friends with the user, otherwise\n  throws an exception.\n- :meth:`.SubmissionModeration.flair` has the parameter ``flair_template_id`` for\n  applying flairs with template IDs.\n- :meth:`.Emoji.update` supports modifying an emoji's permissions.\n- :meth:`.SubredditEmoji.add` now supports optionally passing booleans to set an emoji's\n  permissions upon upload.\n- Methods :meth:`.SubredditLinkFlairTemplates.update` and\n  :meth:`.SubredditRedditorFlairTemplates.update` contain a new parameter, ``fetch``,\n  that toggles the automatic fetching of existing data from Reddit. It is set to True by\n  default.\n- Values in methods :meth:`.SubredditLinkFlairTemplates.update` and\n  :meth:`.SubredditRedditorFlairTemplates.update` that are left as the defaults will no\n  longer be over-written if the ``fetch`` parameter is set to ``True``, but will fill in\n  existing values for the flair template.\n- The parameter ``text`` for methods :meth:`.SubredditLinkFlairTemplates.update` and\n  :meth:`.SubredditRedditorFlairTemplates.update` is no longer required.\n- There is a new method, :meth:`~.Subreddit.post_requirements`, to fetch a subreddit's\n  post requirements.\n- Method :meth:`.SubmissionModeration.sticky` will now ignore the Conflict exception\n  generated by trying to sticky the same post multiple times.\n- A new method :meth:`.CommentModeration.show` will uncollapse a comment that was\n  collapsed because of Crowd Control\n- Methods :meth:`~.Subreddit.submit_image` and :meth:`~.Subreddit.submit_video` will\n  throw :class:`.TooLargeMediaException` if the submitted media is rejected by Reddit\n  due to the size of the media.\n- Class :class:`.Reddit` has an attribute, ``validate_on_submit``, that can be set after\n  class initialization that causes methods :meth:`~.Subreddit.submit`,\n  :meth:`~.Subreddit.submit_image`, :meth:`~.Subreddit.submit_video`, and\n  :meth:`.Submission.edit` to check that the submission matches a subreddit's post\n  validation rules. This attribute will be functionally useless once Reddit implements\n  their change. This attribute will be deprecated on the next release after Reddit's\n  change, and will be removed on the next major release after Reddit's change.\n\n.. warning::\n\n    In May-June 2020, Reddit will force all submissions to run through a subreddit's\n    validation rules.\n\n- Introduced a data class, :class:`.RedditErrorItem`, to represent an individual error\n  item returned from Reddit.\n- Class :class:`.RedditAPIException` now serves as a container for the\n  :class:`.RedditErrorItem`\\ s. You can access the items by doing\n  ``RedditAPIException.items``, which returns a list.\n- :class:`.APIException` is an alias to :class:`.RedditAPIException`.\n- Parameter ``discussion_type`` to methods :meth:`~.Subreddit.submit`,\n  :meth:`~.Subreddit.submit_image`, and :meth:`~.Subreddit.submit_video` to support\n  submitting as a live discussion (set to ``\"CHAT\"``).\n- Instances of :class:`.Trophy` can be compared for equality with each other.\n- :class:`.Reddit` has a new configurable parameter, ``timeout``. This defaults to 16\n  seconds. It controls how long PRAW will wait for a response before throwing an\n  exception.\n- PRAW now handles ratelimit errors returned as instances of\n  :class:`.RedditAPIException`.\n- :class:`.Reddit` has one new parameter, ``ratelimit_seconds`` . The parameter\n  configures the maximum amount of seconds to catch ratelimits for. It defaults to 5\n  seconds when not specified.\n\n**Changed**\n\n- ``prawcore.BadRequest`` should no longer be raised. Instead, a more useful\n  :class:`.RedditAPIException` instance will be raised.\n- Set the default comment sort to ``confidence`` instead of ``best`` because it turns\n  out ``best`` isn't actually the correct value for the parameter.\n\n**Deprecated**\n\n- :class:`.APIException` is deprecated and slated for removal in PRAW 8.0.\n\n**Fixed**\n\n- :meth:`.SubredditFlair.update` will not error out when the flair text contains quote\n  marks.\n\n**Removed**\n\n- Converting :class:`.APIException` to string will no longer escape unicode characters.\n- Module ``praw.models.modaction`` no longer exists. Please use the module\n  ``praw.models.mod_action``, or directly import ``ModAction`` from ``praw.models``.\n- Methods :meth:`.SubredditLinkFlairTemplates.update` and\n  :meth:`.SubredditRedditorFlairTemplates.update` will no longer create flairs that are\n  using an invalid template id, but instead throw a :class:`.InvalidFlairTemplateID`.\n- Method ``reddit.user.moderator_subreddits`` has been removed. Please use\n  :meth:`.moderated` instead.\n\n6.5.1 (2020/01/07)\n------------------\n\n**Fixed**\n\n- Removed usages of ``NoReturn`` that caused PRAW to fail due to ``ImportError`` in\n  Python ``<3.5.4`` and ``<3.6.2``.\n\n6.5.0 (2020/01/05)\n------------------\n\n**Added**\n\n- :meth:`.set_original_content` supports marking a submission as original content.\n- :meth:`.unset_original_content` supports unmarking a submission as original content.\n- :meth:`.moderated` to get a list of a redditor's moderated subreddits.\n- Parameter ``without_websockets`` to :meth:`~.Subreddit.submit_image` and\n  :meth:`~.Subreddit.submit_video` to submit without using WebSockets.\n- :meth:`.Reddit.redditor` supports ``fullname`` param to fetch a :class:`.Redditor` by\n  the fullname instead of name. :class:`.Redditor` constructor now also has ``fullname``\n  param.\n- Add :class:`.RemovalReason` and :class:`.SubredditRemovalReasons` to work with removal\n  reasons\n- Attribute ``removal_reasons`` to :class:`.SubredditModeration` to interact with new\n  removal reason classes\n- Parameters ``mod_note`` and ``reason_id`` to :meth:`~.ThingModerationMixin.remove` to\n  optionally apply a removal reason on removal\n- Add :class:`.SubredditModerationStream` to enable moderation streams\n- Attribute ``stream`` to :class:`.SubredditModeration` to interact with new moderation\n  streams\n- Add :meth:`~.SubredditModerationStream.edited` to allow streaming of\n  :meth:`.SubredditModeration.edited`\n- Add :meth:`~.SubredditModerationStream.log` to allow streaming of\n  :meth:`.SubredditModeration.log`\n- Add :meth:`~.SubredditModerationStream.modmail_conversations` to allow streaming of\n  :meth:`.Modmail.conversations`\n- Add :meth:`~.SubredditModerationStream.modqueue` to allow streaming of\n  :meth:`.SubredditModeration.modqueue`\n- Add :meth:`~.SubredditModerationStream.reports` to allow streaming of\n  :meth:`.SubredditModeration.reports`\n- Add :meth:`~.SubredditModerationStream.spam` to allow streaming of\n  :meth:`.SubredditModeration.spam`\n- Add :meth:`~.SubredditModerationStream.unmoderated` to allow streaming of\n  :meth:`.SubredditModeration.unmoderated`\n- Add :meth:`~.SubredditModerationStream.unread` to allow streaming of\n  :meth:`.SubredditModeration.unread`\n- Parameter ``exclude_before`` to :func:`.stream_generator` to allow\n  :meth:`~.SubredditModerationStream.modmail_conversations` to work\n- Parameters ``allowable_content`` and ``max_emojis`` to\n  :meth:`~.SubredditRedditorFlairTemplates.add`,\n  :meth:`~.SubredditLinkFlairTemplates.add`, and\n  :meth:`~.SubredditFlairTemplates.update`, as well as its child classes.\n\n**Deprecated**\n\n- Method ``reddit.user.moderator_subreddits`` as :meth:`.moderated` provides more\n  functionality.\n- The file for ModActions (``praw/models/modaction.py``) has been moved to\n  ``praw/models/mod_action.py`` and the previous has been deprecated.\n\n**Expected Changes**\n\n- The behavior of ``APIException`` will no longer unicode-escape strings in the next\n  minor release.\n\n6.4.0 (2019/09/21)\n------------------\n\n**Added**\n\n- :meth:`.crosspost` support parameter ``flair_id`` to flair the submission immediately\n  upon crossposting.\n- :meth:`.crosspost` support parameter ``flair_text`` to set a custom text to the flair\n  immediately upon crossposting.\n- :meth:`.crosspost` support parameter ``nsfw`` to mark the submission NSFW immediately\n  upon crossposting.\n- :meth:`.crosspost` support parameter ``spoiler`` to mark the submission as a spoiler\n  immediately upon crossposting.\n\n**Fixed**\n\n- :meth:`.add_community_list` has parameter ``description`` to support unannounced\n  upstream Reddit API changes.\n- :meth:`.WidgetModeration.update` supports passing a list of :class:`.Subreddit`\n  objects.\n\n**Changed**\n\n- Removed ``css_class`` parameter cannot be used with ``background_color``,\n  ``text_color``, or ``mod_only`` constraint on methods:\n\n  - ``SubredditFlairTemplates.update()``\n  - ``SubredditRedditorFlairTemplates.add()``\n  - ``SubredditLinkFlairTemplates.add()``\n\n**Removed**\n\n- Drop official support for Python 2.7.\n- ``Multireddit.rename()`` no longer works due to a change in the Reddit API.\n\n6.3.1 (2019/06/10)\n------------------\n\n**Removed**\n\n- ``SubredditListingMixin.gilded()``, as this was supposed to be removed in 6.0.0 after\n  deprecation in 5.2.0.\n\n6.3.0 (2019/06/09)\n------------------\n\n**Added**\n\n- Collections (:class:`.Collection` and helper classes).\n- :meth:`~.Subreddit.submit`, :meth:`~.Subreddit.submit_image`, and\n  :meth:`~.Subreddit.submit_video` can be used to submit a post directly to a\n  collection.\n- ``praw.util.camel_to_snake`` and ``praw.util.snake_case_keys``.\n- Comments can now be locked and unlocked via ``comment.mod.lock()`` and\n  ``comment.mod.unlock()``. See: (:meth:`~.ThingModerationMixin.lock` and\n  :meth:`~.ThingModerationMixin.unlock`).\n- ``align`` parameter to :meth:`.upload_banner_additional_image`\n\n**Changed**\n\n- :meth:`.Reddit.info` now accepts any non-str iterable for fullnames (not just\n  ``list``).\n- :meth:`.Reddit.info` now returns a generator instead of a list when using the ``url``\n  parameter.\n\n6.2.0 (2019/05/05)\n------------------\n\n**Added**\n\n- :meth:`.upload_banner`\n- :meth:`.upload_banner_additional_image`\n- :meth:`.upload_banner_hover_image`\n- :meth:`.delete_banner`\n- :meth:`.delete_banner_additional_image`\n- :meth:`.delete_banner_hover_image`\n- :meth:`~.Subreddit.submit`, :meth:`~.Subreddit.submit_image`, and\n  :meth:`~.Subreddit.submit_video` support parameter ``nsfw`` to mark the submission\n  NSFW immediately upon posting.\n- :meth:`~.Subreddit.submit`, :meth:`~.Subreddit.submit_image`, and\n  :meth:`~.Subreddit.submit_video` support parameter ``spoiler`` to mark the submission\n  as a spoiler immediately upon posting.\n- :meth:`~.Subreddit.submit_image` and :meth:`~.Subreddit.submit_video` support\n  parameter ``timeout``. Default timeout has been raised from 2 seconds to 10 seconds.\n- Added parameter ``function_kwargs`` to :func:`.stream_generator` to pass additional\n  kwargs to ``function``.\n\n**Fixed**\n\n- :meth:`.Subreddit.random` returns ``None`` instead of raising\n  :class:`.ClientException` when the subreddit does not support generating random\n  submissions.\n\n**Other**\n\n- Bumped minimum prawcore version to 1.0.1.\n\n6.1.1 (2019/01/29)\n------------------\n\n**Added**\n\n- :meth:`.SubredditFlair.set` supports parameter ``flair_template_id`` for giving a user\n  redesign flair.\n\n6.1.0 (2019/01/19)\n------------------\n\n**Added**\n\n- Add method :meth:`.Redditor.trophies` to get a list of the Redditor's trophies.\n- Add class :class:`.PostFlairWidget`.\n- Add attributes ``reply_limit`` and ``reply_sort`` to class :class:`.Comment`\n- Add class :class:`.SubredditWidgetsModeration` (accessible through\n  :attr:`.SubredditWidgets.mod`) and method :meth:`.add_text_area`.\n- Add class :class:`.WidgetModeration` (accessible through the ``.mod`` attribute on any\n  widget) with methods :meth:`~.WidgetModeration.update` and\n  :meth:`~.WidgetModeration.delete`.\n- Add method :meth:`.Reddit.put` for HTTP PUT requests.\n- Add methods :meth:`.add_calendar` and :meth:`.add_community_list`.\n- Add methods :meth:`.add_image_widget` and :meth:`.upload_image`.\n- Add method :meth:`.add_custom_widget`.\n- Add method :meth:`.add_post_flair_widget`.\n- Add method :meth:`.add_menu`.\n- Add method :meth:`.add_button_widget`.\n- Add method :meth:`~.SubredditWidgetsModeration.reorder` to reorder a subreddit's\n  widgets.\n- Add :class:`.Redditors` (``reddit.redditors``) to provide :class:`.Redditor` listings.\n- Add :meth:`~.Subreddit.submit_image` for submitting native images to Reddit.\n- Add :meth:`~.Subreddit.submit_video` for submitting native videos and videogifs to\n  Reddit.\n\n**Changed**\n\n- :meth:`.me` returns ``None`` in :attr:`.read_only` mode.\n- :meth:`.SubredditLinkFlairTemplates.__iter__` uses the v2 flair API endpoint. This\n  change will result in additional fields being returned. All fields that were\n  previously returned will still be returned.\n- :meth:`.SubredditRedditorFlairTemplates.__iter__` uses the v2 flair API endpoint. The\n  method will still return the exact same items.\n- Methods :meth:`.SubredditRedditorFlairTemplates.add`,\n  :meth:`.SubredditLinkFlairTemplates.add`,\n  :meth:`.SubredditRedditorFlairTemplates.update`, and\n  :meth:`.SubredditLinkFlairTemplates.update` can add and update redesign-style flairs\n  with the v2 flair API endpoint. They can still update pre-redesign-style flairs with\n  the older endpoint.\n\n**Fixed**\n\n- Widgets of unknown types are parsed as :class:`.Widget`\\ s rather than raising an\n  exception.\n\n6.0.0 (2018/07/24)\n------------------\n\n**Added**\n\n- Add method :meth:`.revision` to get a specific wiki page revision.\n- Added parameter ``skip_existing`` to :func:`.stream_generator` to skip existing items\n  when starting a stream.\n- Add method :meth:`.Front.best` to get the front page \"best\" listing.\n- Add :attr:`.Subreddit.widgets`, :class:`.SubredditWidgets`, and widget subclasses like\n  :class:`.TextArea` to support fetching Reddit widgets.\n- Add method :meth:`.Submission.mark_visited` to mark a submission as visited on the\n  Reddit backend.\n\n**Fixed**\n\n- Fix :py:class:`RecursionError` on :class:`.SubredditEmoji`'s ``repr`` and ``str``.\n- :meth:`.SubredditFilters.add` and :meth:`.SubredditFilters.remove` also accept a\n  :class:`.Subreddit` for the ``subreddit`` parameter.\n- Remove restriction which prevents installed (non-confidential) apps from using OAuth2\n  authorization code grant flow.\n\n**Removed**\n\n- ``Subreddit.submissions`` as the API endpoint backing the method is no more. See\n  https://www.reddit.com/r/changelog/comments/7tus5f/update_to_search_api/.\n\n5.4.0 (2018/03/27)\n------------------\n\n**Added**\n\n- Add method :meth:`~.Reddit.patch` to :class:`.Reddit` class to support HTTP PATCH\n  requests.\n- Add class :class:`.Preferences` to access and update Reddit preferences.\n- Add attribute :attr:`.User.preferences` to access an instance of\n  :class:`.Preferences`.\n- Add method :meth:`.Message.delete`.\n- Add class :class:`.Emoji` to work with custom subreddit emoji.\n\n**Deprecated**\n\n- ``Subreddit.submissions`` as the API endpoint backing the method is going away. See\n  https://www.reddit.com/r/changelog/comments/7tus5f/update_to_search_api/.\n\n**Fixed**\n\n- Fix bug with positive ``pause_after`` values in streams provided by\n  :func:`.stream_generator` where the wait time was not reset after a yielded ``None``.\n- Parse URLs with trailing slashes and no ``\"comments\"`` element when creating\n  :class:`.Submission` objects.\n- Fix bug where ``Subreddit.submissions`` returns a same submission more than once\n- Fix bug where ``ListingGenerator`` fetches the same batch of submissions in an\n  infinite loop when ``\"before\"`` parameter is provided.\n\n**Removed**\n\n- Removed support for Python 3.3 as it is no longer supported by requests.\n\n5.3.0 (2017/12/16)\n------------------\n\n**Added**\n\n- :attr:`.Multireddit.stream`, to stream submissions and comments from a multireddit.\n- :meth:`.Redditor.block`\n\n**Fixed**\n\n- Now raises ``prawcore.UnavailableForLegalReasons`` instead of an\n  :py:class:`AssertionError` when encountering a HTTP 451 response.\n\n5.2.0 (2017/10/24)\n------------------\n\n**Changed**\n\n- An attribute on :class:`.LiveUpdate` now works as lazy attribute (i.e., populate an\n  attribute when the attribute is first accessed).\n\n**Deprecated**\n\n- ``subreddit.comments.gilded`` because there isn't actually an endpoint that returns\n  only gilded comments. Use ``subreddit.gilded`` instead.\n\n**Fixed**\n\n- Removed ``comment.permalink()`` because ``comment.permalink`` is now an attribute\n  returned by Reddit.\n\n5.1.0 (2017/08/31)\n------------------\n\n**Added**\n\n- :attr:`.Redditor.stream`, with methods :meth:`.RedditorStream.submissions` and\n  :meth:`.RedditorStream.comments` to stream a Redditor's comments or submissions\n- :class:`.RedditorStream` has been added to facilitate :attr:`.Redditor.stream`\n- :meth:`.Inbox.collapse` to mark messages as collapsed.\n- :meth:`.Inbox.uncollapse` to mark messages as uncollapsed.\n- Raise :class:`.ClientException` when calling :meth:`.Comment.refresh` when the comment\n  does not appear in the resulting comment tree.\n- :meth:`.Submission.crosspost` to crosspost to a subreddit.\n\n**Fixed**\n\n- Calling :meth:`.Comment.refresh` on a directly fetched, deeply nested\n  :class:`.Comment` will additionally pull in as many parent comments as possible\n  (currently 8) enabling significantly quicker traversal to the top-most\n  :class:`.Comment` via successive :meth:`.parent` calls.\n- Calling :meth:`~.Comment.refresh` previously could have resulted in a\n  ``AttributeError: \"MoreComments\" object has no attribute \"_replies\"`` exception. This\n  situation will now result in a :class:`.ClientException`.\n- Properly handle ``BAD_CSS_NAME`` errors when uploading stylesheet images with invalid\n  filenames. Previously an :py:class:`AssertionError` was raised.\n- :class:`.Submission`'s ``gilded`` attribute properly returns the expected value from\n  reddit.\n\n5.0.1 (2017/07/11)\n------------------\n\n**Fixed**\n\n- Calls to :meth:`.hide` and :meth:`.unhide` properly batch into requests of 50\n  submissions at a time.\n- Lowered the average maximum delay between inactive stream checks by 4x to 16 seconds.\n  It was previously 64 seconds, which was too long.\n\n5.0.0 (2017/07/04)\n------------------\n\n**Added**\n\n- :meth:`.Comment.disable_inbox_replies`, :meth:`.Comment.enable_inbox_replies`\n  :meth:`.Submission.disable_inbox_replies`, and\n  :meth:`.Submission.enable_inbox_replies` to toggle inbox replies on comments and\n  submissions.\n\n**Changed**\n\n- ``cloudsearch`` is no longer the default syntax for :meth:`~.Subreddit.search`.\n  ``lucene`` is now the default syntax so that PRAW's default is aligned with Reddit's\n  default.\n- :meth:`.Reddit.info` will now take either a list of fullnames or a single URL string.\n- :meth:`.Subreddit.submit` accepts a flair template ID and text.\n\n**Fixed**\n\n- Fix accessing :attr:`.LiveUpdate.contrib` raises ``AttributeError``.\n\n**Removed**\n\n- Iterating directly over :class:`.SubredditRelationship` (e.g., ``subreddit.banned``,\n  ``subreddit.contributor``, ``subreddit.moderator``, etc) and :class:`.SubredditFlair`\n  is no longer possible. Iterate instead over their callables, e.g.\n  ``subreddit.banned()`` and ``subreddit.flair()``.\n- The following methods are removed: ``Subreddit.mod.approve``,\n  ``Subreddit.mod.distinguish``, ``Subreddit.mod.ignore_reports``,\n  ``Subreddit.mod.remove``, ``Subreddit.mod.undistinguish``,\n  ``Subreddit.mod.unignore_reports``.\n- Support for passing a :class:`.Submission` to :meth:`.SubredditFlair.set` is removed.\n- The ``thing`` argument to :meth:`.SubredditFlair.set` is removed.\n- Return values from :meth:`.Comment.block`, :meth:`.Message.block`,\n  :meth:`.SubredditMessage.block`, :meth:`.SubredditFlair.delete`, :meth:`.friend`,\n  :meth:`.Redditor.message`, :meth:`.Subreddit.message`, :meth:`.select`, and\n  :meth:`.unfriend` are removed as they do not provide any useful information.\n- ``praw.ini`` no longer reads in ``http_proxy`` and ``https_proxy`` settings.\n- ``is_link`` parameter of :meth:`.SubredditRedditorFlairTemplates.add` and\n  :meth:`.SubredditRedditorFlairTemplates.clear`. Use\n  :class:`.SubredditLinkFlairTemplates` instead.\n\n4.6.0 (2017/07/04)\n------------------\n\nThe release's sole purpose is to announce the deprecation of the ``is_link`` parameter\nas described below:\n\n**Added**\n\n- :attr:`.SubredditFlair.link_templates` to manage link flair templates.\n\n**Deprecated**\n\n- ``is_link`` parameter of :meth:`.SubredditRedditorFlairTemplates.add` and\n  :meth:`.SubredditRedditorFlairTemplates.clear`. Use\n  :class:`.SubredditLinkFlairTemplates` instead.\n\n4.5.1 (2017/05/07)\n------------------\n\n**Fixed**\n\n- Calling :meth:`.parent` works on :class:`.Comment` instances obtained via\n  :meth:`.comment_replies`.\n\n4.5.0 (2017/04/29)\n------------------\n\n**Added**\n\n- :meth:`.Modmail.unread_count` to get unread count by conversation state.\n- :meth:`.Modmail.bulk_read` to mark conversations as read by conversation state.\n- :meth:`.Modmail.subreddits` to fetch subreddits using new modmail.\n- :meth:`.Modmail.create` to create a new modmail conversation.\n- :meth:`.ModmailConversation.read` to mark modmail conversations as read.\n- :meth:`.ModmailConversation.unread` to mark modmail conversations as unread.\n- :meth:`.conversations` to get new modmail conversations.\n- :meth:`.ModmailConversation.highlight` to highlight modmail conversations.\n- :meth:`.ModmailConversation.unhighlight` to unhighlight modmail conversations.\n- :meth:`.ModmailConversation.mute` to mute modmail conversations.\n- :meth:`.ModmailConversation.unmute` to unmute modmail conversations.\n- :meth:`.ModmailConversation.archive` to archive modmail conversations.\n- :meth:`.ModmailConversation.unarchive` to unarchive modmail conversations.\n- :meth:`.ModmailConversation.reply` to reply to modmail conversations.\n- :meth:`.Modmail.__call__` to get a new modmail conversation.\n- :meth:`.Inbox.stream` to stream new items in the inbox.\n- Exponential request delay to all streams when no new items are returned in a request.\n  The maximum delay between requests is 66 seconds.\n\n**Changed**\n\n- :meth:`~.Subreddit.submit` accepts ``selftext=''`` to create a title-only submission.\n- :class:`.Reddit` accepts ``requestor_class=cls`` for a customized requestor class and\n  ``requestor_kwargs={\"param\": value}`` for passing arguments to requestor\n  initialization.\n- :meth:`.SubredditStream.comments`, :meth:`.SubredditStream.submissions`, and\n  :meth:`.Subreddits.stream` accept a ``pause_after`` argument to allow pausing of the\n  stream. The default value of ``None`` retains the preexisting behavior.\n\n**Deprecated**\n\n- ``cloudsearch`` will no longer be the default syntax for :meth:`.Subreddit.search` in\n  PRAW 5. Instead, ``lucene`` will be the default syntax so that PRAW's default is\n  aligned with Reddit's default.\n\n**Fixed**\n\n- Fix bug where :class:`.WikiPage` revisions with deleted authors caused ``TypeError``.\n- :class:`.Submission` attributes ``comment_limit`` and ``comment_sort`` maintain their\n  values after making instances non-lazy.\n\n4.4.0 (2017/02/21)\n------------------\n\n**Added**\n\n- :meth:`.LiveThreadContribution.update` to update settings of a live thread.\n- ``reset_timestamp`` to :meth:`.limits` to provide insight into when the current rate\n  limit window will expire.\n- :meth:`.upload_mobile_header` to upload subreddit mobile header.\n- :meth:`.upload_mobile_icon` to upload subreddit mobile icon.\n- :meth:`.delete_mobile_header` to remove subreddit mobile header.\n- :meth:`.delete_mobile_icon` to remove subreddit mobile icon.\n- :meth:`.LiveUpdateContribution.strike` to strike a content of a live thread.\n- :meth:`.LiveContributorRelationship.update` to update contributor permissions for a\n  redditor.\n- :meth:`.LiveContributorRelationship.update_invite` to update contributor invite\n  permissions for a redditor.\n- :meth:`.LiveThread.discussions` to get submissions linking to the thread.\n- :meth:`.LiveThread.report` to report the thread violating the Reddit rules.\n- :meth:`.LiveHelper.now` to get the currently featured live thread.\n- :meth:`.LiveHelper.info` to fetch information about each live thread in live thread\n  IDs.\n\n**Fixed**\n\n- Uploading an image resulting in too large of a request (>500 KB) now raises\n  ``prawcore.TooLarge`` instead of an :py:class:`AssertionError`.\n- Uploading an invalid image raises ``APIException``.\n- :class:`.Redditor` instances obtained via :attr:`~.Subreddit.moderator` (e.g.,\n  ``reddit.subreddit(\"test\").moderator()``) will contain attributes with the\n  relationship metadata (e.g., ``mod_permissions``).\n- :class:`.Message` instances retrieved from the inbox now have attributes ``author``,\n  ``dest`` ``replies`` and ``subreddit`` properly converted to their appropriate PRAW\n  model.\n\n4.3.0 (2017/01/19)\n------------------\n\n**Added**\n\n- :meth:`.LiveContributorRelationship.leave` to abdicate the live thread contributor\n  position.\n- :meth:`.LiveContributorRelationship.remove` to remove the redditor from the live\n  thread contributors.\n- :meth:`.limits` to provide insight into number of requests made and remaining in the\n  current rate limit window.\n- :attr:`.LiveThread.contrib` to obtain an instance of :class:`.LiveThreadContribution`.\n- :meth:`.LiveThreadContribution.add` to add an update to the live thread.\n- :meth:`.LiveThreadContribution.close` to close the live thread permanently.\n- :attr:`.LiveUpdate.contrib` to obtain an instance of :class:`.LiveUpdateContribution`.\n- :meth:`.LiveUpdateContribution.remove` to remove a live update.\n- :meth:`.LiveContributorRelationship.accept_invite` to accept an invite to contribute\n  the live thread.\n- :meth:`.SubredditHelper.create` and :meth:`.SubredditModeration.update` have\n  documented support for ``spoilers_enabled``. Note, however, that\n  :meth:`.SubredditModeration.update` will currently unset the ``spoilers_enabled``\n  value until such a time that Reddit returns the value along with the other settings.\n- :meth:`.spoiler` and :meth:`.unspoiler` to change a submission's spoiler status.\n\n**Fixed**\n\n- :meth:`.LiveContributorRelationship.invite` and\n  :meth:`.LiveContributorRelationship.remove_invite` now hit endpoints, which starts\n  with \"api/\", for consistency.\n- :meth:`.ModeratorRelationship.update`, and\n  :meth:`.ModeratorRelationship.update_invite` now always remove known unlisted\n  permissions.\n\n4.2.0 (2017/01/07)\n------------------\n\n**Added**\n\n- ``.Subreddit.rules`` to get the rules of a subreddit.\n- :class:`.LiveContributorRelationship`, which can be obtained through\n  :attr:`.LiveThread.contributor`, to interact with live threads' contributors.\n- :meth:`~.ModeratorRelationship.remove_invite` to remove a moderator invite.\n- :meth:`.LiveContributorRelationship.invite` to send a contributor invitation.\n- :meth:`.LiveContributorRelationship.remove_invite` to remove the contributor\n  invitation.\n\n**Deprecated**\n\n- Return values from :meth:`.Comment.block`, :meth:`.Message.block`,\n  :meth:`.SubredditMessage.block`, :meth:`.SubredditFlair.delete`, :meth:`.friend`,\n  :meth:`.Redditor.message`, :meth:`.Subreddit.message`, :meth:`.select`, and\n  :meth:`.unfriend` will be removed in PRAW 5 as they do not provide any useful\n  information.\n\n**Fixed**\n\n- :meth:`.hide` and :meth:`.unhide` now accept a list of additional submissions.\n- :meth:`.replace_more` is now recoverable. Previously, when an exception was raised\n  during the work done by :meth:`.replace_more`, all unreplaced :class:`.MoreComments`\n  instances were lost. Now :class:`.MoreComments` instances are only removed once their\n  children have been added to the :class:`.CommentForest` enabling callers of\n  :meth:`.replace_more` to call the method as many times as required to complete the\n  replacement.\n- Working with contributors on :class:`.SubredditWiki` is done consistently through\n  ``contributor`` not ``contributors``.\n- ``Subreddit.moderator()`` works.\n- ``live_thread.contributor()`` now returns :class:`.RedditorList` correctly.\n\n**Removed**\n\n- ``validate_time_filter`` is no longer part of the public interface.\n\n4.1.0 (2016/12/24)\n------------------\n\n**Added**\n\n- :meth:`.Subreddits.search_by_topic` to search subreddits by topic. (see:\n  https://www.reddit.com/dev/api/#GET_api_subreddits_by_topic).\n- :meth:`.LiveHelper.__call__` to provide interface to\n  ``praw.models.LiveThread.__init__``.\n- :class:`.SubredditFilters` to work with filters for special subreddits, like\n  ``r/all``.\n- Added callables for :class:`.SubredditRelationship` and :class:`.SubredditFlair` so\n  that ``limit`` and other parameters can be passed.\n- Add :meth:`.Message.reply` to :class:`.Message` which was accidentally missed\n  previously.\n- Add ``sticky`` parameter to :meth:`.CommentModeration.distinguish` to sticky comments.\n- :meth:`.Submission.flair` to add a submission's flair from an instance of\n  :class:`.Submission`.\n- :meth:`.Comment.parent` to obtain the parent of a :class:`.Comment`.\n- :meth:`.opt_in` and :meth:`.opt_out` to :class:`.Subreddit` to permit working with\n  quarantined subreddits.\n- :class:`.LiveUpdate` to represent an individual update in a :class:`.LiveThread`.\n- Ability to access an individual :class:`.LiveUpdate` via\n  ``reddit.live(\"THREAD_ID\")[\"UPDATE_ID\"]``.\n- :meth:`.LiveThread.updates` to iterate the updates of the thread.\n\n**Changed**\n\n- :meth:`.me` now caches its result in order to reduce redundant requests for methods\n  that depend on it. Set ``use_cache=False`` when calling to bypass the cache.\n- :meth:`.replace_more` can be called on :class:`.Comment` ``replies``.\n\n**Deprecated**\n\n- ``validate_time_filter`` will be removed from the public interface in PRAW 4.2 as it\n  was never intended to be part of it to begin with.\n- Iterating directly over :class:`.SubredditRelationship` (e.g., ``subreddit.banned``,\n  ``subreddit.contributor``, ``subreddit.moderator``, etc) and :class:`.SubredditFlair`\n  will be removed in PRAW 5. Iterate instead over their callables, e.g.\n  ``subreddit.banned()`` and ``subreddit.flair()``.\n- The following methods are deprecated to be removed in PRAW 5 and are replaced with\n  similar ``Comment.mod...`` and ``Submission.mod...`` alternatives:\n  ``Subreddit.mod.approve``, ``Subreddit.mod.distinguish``,\n  ``Subreddit.mod.ignore_reports``, ``Subreddit.mod.remove``,\n  ``Subreddit.mod.undistinguish``, ``Subreddit.mod.unignore_reports``.\n- Support for passing a :class:`.Submission` to :meth:`.SubredditFlair.set` will be\n  removed in PRAW 5. Use :meth:`.Submission.flair` instead.\n- The ``thing`` argument to :meth:`.SubredditFlair.set` is replaced with ``redditor``\n  and will be removed in PRAW 5.\n\n**Fixed**\n\n- :meth:`.SubredditModeration.update` accurately updates ``exclude_banned_modqueue``,\n  ``header_hover_text``, ``show_media`` and ``show_media_preview`` values.\n- Instances of :class:`.Comment` obtained through the inbox (including mentions) are now\n  refreshable.\n- Searching ``r/all`` should now work as intended for all users.\n- Accessing an invalid attribute on an instance of :class:`.Message` will raise\n  :py:class:`AttributeError` instead of :class:`.PRAWException`.\n\n4.0.0 (2016/11/29)\n------------------\n\n**Fixed**\n\n- Fix bug where ipython tries to access attribute\n  ``_ipython_canary_method_should_not_exist_`` resulting in a useless fetch.\n- Fix bug where :class:`.Comment` replies becomes ``[]`` after attempting to access an\n  invalid attribute on the Comment.\n- Reddit.wiki[...] converts the passed in page name to lower case as pages are only\n  saved in lower case and non-lower case page names results in a Redirect exception\n  (thanks pcjonathan).\n\n4.0.0rc3 (2016/11/26)\n---------------------\n\n**Added**\n\n- ``implicit`` parameter to :meth:`.url` to support the implicit flow for **installed**\n  applications (see:\n  https://github.com/reddit/reddit/wiki/OAuth2#authorization-implicit-grant-flow)\n- :meth:`.scopes` to discover which scopes are available to the current authentication\n- Lots of documentation: https://praw.readthedocs.io/\n\n4.0.0rc2 (2016/11/20)\n---------------------\n\n**Fixed**\n\n- :meth:`.Auth.authorize` properly sets the session's Authentication (thanks\n  @williammck).\n\n4.0.0rc1 (2016/11/20)\n---------------------\n\nPRAW 4 introduces significant breaking changes. The numerous changes are not listed\nhere, only the feature removals. Please read through :doc:`/getting_started/quick_start`\nto help with updating your code to PRAW 4. If you require additional help please ask on\n`r/redditdev <https://www.reddit.com/r/redditdev>`_ or via Slack.\n\n**Added**\n\n- :meth:`.Comment.block`, :meth:`.Message.block`, and :meth:`.SubredditMessage.block` to\n  permit blocking unwanted user contact.\n- :meth:`.LiveHelper.create` to create new live threads.\n- :meth:`.Redditor.unblock` to undo a block.\n- :meth:`.Subreddits.gold` to iterate through gold subreddits.\n- :meth:`.Subreddits.search` to search for subreddits by name and description.\n- :meth:`.Subreddits.stream` to obtain newly created subreddits in near realtime.\n- :meth:`.User.karma` to retrieve the current user's subreddit karma.\n- ``praw.models.reddit.submission.SubmissionModeration.lock`` and\n  ``praw.models.reddit.submission.SubmissionModeration.unlock`` to change a Submission's\n  lock state.\n- :meth:`.SubredditFlairTemplates.delete` to delete a single flair template.\n- :meth:`.SubredditModeration.unread` to iterate over unread moderation messages.\n- :meth:`.ModeratorRelationship.invite` to invite a moderator to a subreddit.\n- :meth:`.ModeratorRelationship.update` to update a moderator's permissions.\n- :meth:`.ModeratorRelationship.update_invite` to update an invited moderator's\n  permissions.\n- :meth:`.Front.random_rising`, :meth:`.Subreddit.random_rising` and\n  :meth:`.Multireddit.random_rising`.\n- :class:`.WikiPage` supports a revision argument.\n- :meth:`.SubredditWiki.revisions` to obtain a list of recent revisions to a subreddit.\n- :meth:`.WikiPage.revisions` to obtain a list of revisions for a wiki page.\n- Support installed-type OAuth apps.\n- Support read-only OAuth for all application types.\n- Support script-type OAuth apps.\n\n**Changed**\n\n.. note::\n\n    Only prominent changes are listed here.\n\n- ``helpers.comments_stream`` is now :meth:`.SubredditStream.comments`\n- ``helpers.submissions_between`` is now ``Subreddit.submissions``. This new method now\n  only iterates through newest submissions first and as a result makes approximately 33%\n  fewer requests.\n- ``helpers.submission_stream`` is now :meth:`.SubredditStream.submissions`\n\n**Removed**\n\n- Removed :class:`.Reddit`'s ``login`` method. Authentication must be done through\n  OAuth.\n- Removed ``praw-multiprocess`` as this functionality is no longer needed with PRAW 4.\n- Removed non-oauth functions ``Message.collapse`` and ``Message.uncollapse``\n  ``is_username_available``.\n- Removed captcha related functions.\n\nFor changes prior to version 4.0 please see: `3.6.2 changelog\n<https://praw.readthedocs.io/en/v3.6.2/pages/changelog.html>`_\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.265625,
          "content": "Copyright (c) 2016, Bryce Boe\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2255859375,
          "content": "include CHANGES.rst LICENSE.txt README.rst\ninclude praw/praw.ini\ninclude \"praw/images/PRAW logo.png\"\ninclude docs/Makefile\nrecursive-include docs *.png *.py *.rst\nrecursive-include tests *.json *.py\nrecursive-include tests/files *\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.0947265625,
          "content": "PRAW: The Python Reddit API Wrapper\n===================================\n\n.. image:: https://img.shields.io/pypi/v/praw.svg\n    :alt: Latest PRAW Version\n    :target: https://pypi.python.org/pypi/praw\n\n.. image:: https://img.shields.io/pypi/pyversions/praw\n    :alt: Supported Python Versions\n    :target: https://pypi.python.org/pypi/praw\n\n.. image:: https://img.shields.io/pypi/dm/praw\n    :alt: PyPI - Downloads - Monthly\n    :target: https://pypi.python.org/pypi/praw\n\n.. image:: https://github.com/praw-dev/praw/actions/workflows/ci.yml/badge.svg?event=push\n    :alt: GitHub Actions Status\n    :target: https://github.com/praw-dev/praw/actions/workflows/ci.yml\n\n.. image:: https://coveralls.io/repos/github/praw-dev/praw/badge.svg\n    :alt: Coveralls Coverage\n    :target: https://coveralls.io/github/praw-dev/praw?branch=master\n\n.. image:: https://api.securityscorecards.dev/projects/github.com/praw-dev/praw/badge\n    :alt: OpenSSF Scorecard\n    :target: https://api.securityscorecards.dev/projects/github.com/praw-dev/praw\n\n.. image:: https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\n    :alt: Contributor Covenant\n    :target: https://github.com/praw-dev/.github/blob/main/CODE_OF_CONDUCT.md\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n    :alt: pre-commit\n    :target: https://github.com/pre-commit/pre-commit\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :alt: Black code style\n    :target: https://github.com/psf/black\n\nPRAW, an acronym for \"Python Reddit API Wrapper\", is a Python package that allows for\nsimple access to Reddit's API. PRAW aims to be easy to use and internally follows all of\n`Reddit's API rules <https://github.com/reddit/reddit/wiki/API>`_. With PRAW there's no\nneed to introduce ``sleep`` calls in your code. Give your client an appropriate user\nagent and you're set.\n\n.. _installation:\n\nInstallation\n------------\n\nPRAW is supported on Python 3.8+. The recommended way to install PRAW is via `pip\n<https://pypi.python.org/pypi/pip>`_.\n\n.. code-block:: bash\n\n    pip install praw\n\nTo install the latest development version of PRAW run the following instead:\n\n.. code-block:: bash\n\n    pip install --upgrade https://github.com/praw-dev/praw/archive/master.zip\n\nFor instructions on installing Python and pip see \"The Hitchhiker's Guide to Python\"\n`Installation Guides <https://docs.python-guide.org/en/latest/starting/installation/>`_.\n\nQuickstart\n----------\n\nAssuming you already have a credentials for a script-type OAuth application you can\ninstantiate an instance of PRAW like so:\n\n.. code-block:: python\n\n    import praw\n\n    reddit = praw.Reddit(\n        client_id=\"CLIENT_ID\",\n        client_secret=\"CLIENT_SECRET\",\n        password=\"PASSWORD\",\n        user_agent=\"USERAGENT\",\n        username=\"USERNAME\",\n    )\n\nWith the ``reddit`` instance you can then interact with Reddit:\n\n.. code-block:: python\n\n    # Create a submission to r/test\n    reddit.subreddit(\"test\").submit(\"Test Submission\", url=\"https://reddit.com\")\n\n    # Comment on a known submission\n    submission = reddit.submission(url=\"https://www.reddit.com/comments/5e1az9\")\n    submission.reply(\"Super rad!\")\n\n    # Reply to the first comment of a weekly top thread of a moderated community\n    submission = next(reddit.subreddit(\"mod\").top(time_filter=\"week\"))\n    submission.comments[0].reply(\"An automated reply\")\n\n    # Output score for the first 256 items on the frontpage\n    for submission in reddit.front.hot(limit=256):\n        print(submission.score)\n\n    # Obtain the moderator listing for r/test\n    for moderator in reddit.subreddit(\"test\").moderator():\n        print(moderator)\n\nPlease see PRAW's `documentation <https://praw.readthedocs.io/>`_ for more examples of\nwhat you can do with PRAW.\n\nDiscord Bots and Asynchronous Environments\n------------------------------------------\n\nIf you plan on using PRAW in an asynchronous environment, (e.g., discord.py, asyncio) it\nis strongly recommended to use `Async PRAW <https://asyncpraw.readthedocs.io/>`_. It is\nthe official asynchronous version of PRAW and its usage is similar and has the same\nfeatures as PRAW.\n\nPRAW Discussion and Support\n---------------------------\n\nFor those new to Python, or would otherwise consider themselves a Python beginner,\nplease consider asking questions on the `r/learnpython\n<https://www.reddit.com/r/learnpython>`_ subreddit. There are wonderful people there who\ncan help with general Python and simple PRAW related questions.\n\nOtherwise, there are a few official places to ask questions about PRAW:\n\n`r/redditdev <https://www.reddit.com/r/redditdev>`_ is the best place on Reddit to ask\nPRAW related questions. This subreddit is for all Reddit API related discussion so\nplease tag submissions with *[PRAW]*. Please perform a search on the subreddit first to\nsee if anyone has similar questions.\n\nReal-time chat can be conducted via the `PRAW Slack Organization\n<https://join.slack.com/t/praw/shared_invite/enQtOTUwMDcxOTQ0NzY5LWVkMGQ3ZDk5YmQ5MDEwYTZmMmJkMTJkNjBkNTY3OTU0Y2E2NGRlY2ZhZTAzMWZmMWRiMTMwYjdjODkxOGYyZjY>`_\n(please create an issue if that invite link has expired).\n\nPlease do not directly message any of the contributors via Reddit, email, or Slack\nunless they have indicated otherwise. We strongly encourage everyone to help others with\ntheir questions.\n\nPlease file bugs and feature requests as issues on `GitHub\n<https://github.com/praw-dev/praw/issues>`_ after first searching to ensure a similar\nissue was not already filed. If such an issue already exists please give it a thumbs up\nreaction. Comments to issues containing additional information are certainly welcome.\n\n.. note::\n\n    This project is released with a `Contributor Code of Conduct\n    <https://github.com/praw-dev/.github/blob/main/CODE_OF_CONDUCT.md>`_. By\n    participating in this project you agree to abide by its terms.\n\nDocumentation\n-------------\n\nPRAW's documentation is located at https://praw.readthedocs.io/.\n\nHistory\n-------\n\n`August 2010\n<https://github.com/praw-dev/praw/commit/efef08a4a713fcfd7dfddf992097cf89426586ae>`_:\nTimothy Mellor created a github project called ``reddit_api``.\n\n`March 2011\n<https://github.com/praw-dev/praw/commit/ebfc9caba5b58b9e68c77af9c8e53f5562a2ee64>`_:\nThe Python package ``reddit`` was registered and uploaded to pypi.\n\n`December 2011\n<https://github.com/praw-dev/praw/commit/74bb962b3eefe04ce6acad88e6f53f43d10c8803>`_:\nBryce Boe took over as maintainer of the ``reddit`` package.\n\n`June 2012\n<https://github.com/praw-dev/praw/commit/adaf89fe8631f41ab9913b379de104c9ef6a1e73>`_:\nBryce renamed the project ``PRAW`` and the repository was relocated to the newly created\npraw-dev organization on GitHub.\n\n`February 2016\n<https://github.com/praw-dev/praw/commit/252083ef1dbfe6ea53c2dc99ac235b4ba330b658>`_:\nBryce began work on PRAW4, a complete rewrite of PRAW.\n\nLicense\n-------\n\nPRAW's source (v4.0.0+) is provided under the `Simplified BSD License\n<https://github.com/praw-dev/praw/blob/0860c11a9309c80621c267af7caeb6a993933744/LICENSE.txt>`_.\n\n- Copyright Â©, 2016, Bryce Boe\n\nEarlier versions of PRAW were released under `GPLv3\n<https://github.com/praw-dev/praw/blob/0c88697fdc26e75f87b68e2feb11e101e90ce215/COPYING>`_.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3056640625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe supported versions of PRAW include the previous major release.\nThis means that if PRAW is on 6.5.0, PRAW versions 5.0.0 and greater are supported.\n\n## Reporting a Vulnerability\n\nContact Bryce Boe (bbzbryce@gmail.com) as soon as possible to address\nthe vulnerability.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "praw",
          "type": "tree",
          "content": null
        },
        {
          "name": "pre_push.py",
          "type": "blob",
          "size": 2.4580078125,
          "content": "#!/usr/bin/env python3\n\"\"\"Run static analysis on the project.\"\"\"\n\nimport argparse\nimport sys\nfrom subprocess import CalledProcessError, check_call\nfrom tempfile import TemporaryDirectory\n\n\ndef do_process(args, shell=False):\n    \"\"\"Run program provided by args.\n\n    Return ``True`` on success.\n\n    Output failed message on non-zero exit and return False.\n\n    Exit if command is not found.\n\n    \"\"\"\n    print(f\"Running: {' '.join(args)}\")\n    try:\n        check_call(args, shell=shell)\n    except CalledProcessError:\n        print(f\"\\nFailed: {' '.join(args)}\")\n        return False\n    except Exception as exc:\n        sys.stderr.write(f\"{str(exc)}\\n\")\n        sys.exit(1)\n    return True\n\n\ndef run_static():\n    \"\"\"Runs the static tests.\n\n    Returns a statuscode of 0 if everything ran correctly. Otherwise, it will return\n    statuscode 1\n\n    \"\"\"\n    success = True\n    success &= do_process([\"pre-commit\", \"run\", \"--all-files\"])\n\n    with TemporaryDirectory() as tmp_dir:\n        success &= do_process([\"sphinx-build\", \"-W\", \"--keep-going\", \"docs\", tmp_dir])\n\n    return success\n\n\ndef run_unit():\n    \"\"\"Runs the unit-tests.\n\n    Follows the behavior of the static tests, where any failed tests cause pre_push.py\n    to fail.\n\n    \"\"\"\n    return do_process([\"pytest\"])\n\n\ndef main():\n    \"\"\"Runs the main function.\n\n    usage: pre_push.py [-h] [-n] [-u] [-a]\n\n    Run static and/or unit-tests\n\n    \"\"\"\n    parser = argparse.ArgumentParser(description=\"Run static and/or unit-tests\")\n    parser.add_argument(\n        \"-n\",\n        \"--unstatic\",\n        action=\"store_true\",\n        help=\"Do not run static tests (black/flake8/pydocstyle/sphinx-build)\",\n        default=False,\n    )\n    parser.add_argument(\n        \"-u\",\n        \"--unit-tests\",\n        \"--unit\",\n        action=\"store_true\",\n        default=False,\n        help=\"Run the unit tests\",\n    )\n    parser.add_argument(\n        \"-a\",\n        \"--all\",\n        action=\"store_true\",\n        default=False,\n        help=\"Run all the tests (static and unit). Overrides the unstatic argument.\",\n    )\n    args = parser.parse_args()\n    success = True\n    try:\n        if not args.unstatic or args.all:\n            success &= run_static()\n        if args.all or args.unit_tests:\n            success &= run_unit()\n    except KeyboardInterrupt:\n        return int(not False)\n    return int(not success)\n\n\nif __name__ == \"__main__\":\n    exit_code = main()\n    print(\"\\npre_push.py: Success!\" if not exit_code else \"\\npre_push.py: Fail\")\n    sys.exit(exit_code)\n"
        },
        {
          "name": "profile_tests.sh",
          "type": "blob",
          "size": 0.1845703125,
          "content": "#!/bin/bash -e\n\npython -m cProfile -o profile $(which py.test)\n\npython -c \"import pstats; p = pstats.Stats('profile'); \\\np.sort_stats('tottime').print_stats(64)\"\n\nrm -f profile\n\n\n\n\nexit 0;\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.798828125,
          "content": "[build-system]\nbuild-backend = \"flit_core.buildapi\"\nrequires = [\"flit_core >=3.4,<4\"]\n\n[project]\nauthors = [{name = \"Bryce Boe\", email = \"bbzbryce@gmail.com\"}]\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Environment :: Console\",\n  \"Intended Audience :: Developers\",\n  \"License :: OSI Approved :: BSD License\",\n  \"Natural Language :: English\",\n  \"Operating System :: OS Independent\",\n  \"Programming Language :: Python\",\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Topic :: Utilities\"\n]\ndependencies = [\n  \"prawcore >=2.4, <3\",\n  \"update_checker >=0.18\",\n  \"websocket-client >=0.54.0\"\n]\ndynamic = [\"version\", \"description\"]\nkeywords = [\"reddit\", \"api\", \"wrapper\"]\nlicense = {file = \"LICENSE.txt\"}\nmaintainers = [\n  {name = \"Bryce Boe\", email = \"bbzbryce@gmail.com\"},\n  {name = \"Joe RH\", email = \"jarhill0@gmail.com\"},\n  {name = \"Joel Payne\", email = \"lilspazjoekp@gmail.com\"}\n]\nname = \"praw\"\nreadme = \"README.rst\"\nrequires-python = \"~=3.8\"\n\n[project.optional-dependencies]\nci = [\"coveralls\"]\ndev = [\n  \"packaging\",\n  \"praw[lint]\",\n  \"praw[test]\"\n]\nlint = [\n  \"praw[readthedocs]\",\n  \"pre-commit\",\n  \"ruff >=0.0.291\"\n]\nreadthedocs = [\n  \"furo\",\n  \"sphinx\"\n]\ntest = [\n  \"betamax >=0.8, <0.9\",\n  \"betamax-matchers >=0.3.0, <0.5\",\n  \"pytest >=2.7.3\",\n  \"requests >=2.20.1, <3\",\n  \"urllib3 ==1.26.*, <2\"\n]\n\n[project.urls]\n\"Change Log\" = \"https://praw.readthedocs.io/en/latest/package_info/change_log.html\"\n\"Documentation\" = \"https://praw.readthedocs.io/\"\n\"Issue Tracker\" = \"https://github.com/praw-dev/praw/issues\"\n\"Source Code\" = \"https://github.com/praw-dev/praw\"\n\n[tool.black]\nextend_exclude = '/(\\.venv.*)/'\nline-length = 88\n\n[tool.docstrfmt]\nextend_exclude = ['./docs/examples/']\n\n[tool.isort]\nprofile = 'black'\nskip_glob = '.venv*'\n\n[tool.ruff]\ntarget-version = \"py38\"\ninclude = [\n  \"praw/**/*.py\"\n]\n\n[tool.ruff.lint]\nignore = [\n  \"A002\", # shadowing built-in\n  \"ANN101\", # missing type annotation for self in method\n  \"ANN102\", # missing type annotation for cls in classmethod\n  \"ANN202\", # missing return type for private method\n  \"ANN401\", # typing.Any usage\n  \"D203\", # 1 blank line required before class docstring\n  \"D213\", # Multi-line docstring summary should start at the second line\n  \"E501\", # line-length\n  \"N818\", # exception name should be named with an Error suffix\n  \"PLR0913\", # too many arguments\n  \"PLR2004\", # Magic value used in comparison,\n  \"S101\" # use of assert\n]\nignore-init-module-imports = true\nselect = [\n  \"A\", # flake8-builtins\n  \"ANN\", # flake8-annotations\n  \"ARG\", # flake8-unused-arguments\n  \"B\", # flake8-bugbear\n  \"BLE\", # flake8-blind-except\n  \"C4\", # flake8-comprehensions\n  \"D\", # pydocstyle\n  \"DTZ\", # flake8-datetimez\n  \"E\", # pycodestyle errors\n  \"EM\", # flake8-errmsg\n  \"ERA\", # eradicate\n  \"EXE\", # flake8-executable\n  \"F\", # pyflakes\n  \"FA\", # flake8-future-annotations\n  \"FIX\", # flake8-fix me\n  \"FLY\", # flynt\n  \"G\", # flake8-logging-format\n  \"I\", # isort\n  \"INP\", # flake8-no-pep420\n  \"ISC\", # flake8-implicit-str-concat\n  \"N\", # pep8-naming\n  \"PIE\", # flake8-pie\n  \"PGH\", # pygrep-hooks\n  \"PL\", # Pylint\n  \"PT\", # flake8-pytest-style\n  \"PTH\", # flake8-use-pathlib\n  \"PYI\", # flake8-pyi\n  \"Q\", # flake8-quotes\n  \"RET\", # flake8-return\n  \"RSE\", # flake8-raise\n  \"S\", # bandit\n  \"SIM\", # flake8-simplify\n  \"T10\", # flake8-debugger\n  \"T20\", # flake8-print\n  \"TCH\", # flake8-type-checking\n  \"TD\", # flake8-todos\n  \"W\", # pycodestyle warnings\n  \"UP\" # pyupgrade\n]\n\n[tool.ruff.lint.flake8-annotations]\nallow-star-arg-any = true\nmypy-init-return = true\nsuppress-dummy-args = true\nsuppress-none-returning = true\n\n[tool.ruff.lint.per-file-ignores]\n\"__init__.py\" = [\"F401\"]\n\"praw/models/mod_notes.py\" = [\"FA100\"]\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.1044921875,
          "content": "[tox]\nenvlist = py38,py39,py310,py311\nskipsdist = true\n\n[testenv]\ndeps =\n    .[test]\ncommands =\n    pytest\n"
        }
      ]
    }
  ]
}