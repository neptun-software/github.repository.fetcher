{
  "metadata": {
    "timestamp": 1736560020753,
    "page": 833,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pantsbuild/pants",
      "stars": 3378,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0.2021484375,
          "content": "# Sets the python source roots in vscode to match Pants' repo layout\n# Unless it turns out some other IDE relies on this, this file can\n# be removed once #10920 is solved.\n\nPYTHONPATH=$PYTHONPATH:src/python\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.6259765625,
          "content": "# This commit reformatted all the Python code with Black the first time.\n6c60cf752a6cc150620e8a2437974ae7d16917c5\n\n# This commit reverted the previous commit as more work and discussions were needed.\n33a6d51db91ea1fe69c39117c8878abcb824cdfb\n\n# This commit ran docformatter over the whole codebase.\nd0998872d8116edd5ebc8231dbdd28779591dc2b\n\n# This commit ran Black over the whole codebase.\n29cf9fc8b25a540f32e4a9e0aeeaaa6ea4dcc48f\n\n# README in german was reverted within a day by 208e941ce6281ee9ce7ba16815f643e116bfdbc9\ndc8227b9841a1057b6ca8629c430f072dd9a190f\n\n# This commit formatted all Rust code\n3632a66bc7918ace25c0aa6f05b4b6a4253d908e\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3671875,
          "content": "*.class\n*.iml\n*.ipr\n*.iws\n*.lock_message\n*.pyc\n__pycache__/\n*.hprof\n*.swp\n*.sublime-project\n*.sublime-workspace\n*~\n*#\n.#*\n.envrc\n.DS_Store\n.build.properties\n.buildcache/\n.coverage*\n.emacs.desktop*\n.idea\n/.vscode/\n.cache\n.pants.d\n# TODO: We can probably delete these 3. They have not been used in a long time, if ever.\n#  In fact there's a lot of things we can clean up in this .gitignore. It's not harmful\n#  to keep them, but it's nice to keep things tight and avoid questions/confusion.\n.pants.run\n.pants.workdir.file_lock\n.pants.stats\n# TODO: .pids is no longer in use (it is now under .pants.d) but Pants developers switching\n#  to older branches will still see files created under .pids, which will then linger when they\n#  switch back to main. So we keep this in main's .gitignore for a while. We can remove this,\n#  to reduce confusion, once we're no longer developing in branches prior to 2.19.x.\n.pids\n.project\n.settings\n.classpath\n.factorypath\n.python\n.python-version\n.pydevproject\n.pytest_cache/\ncodegen/classes/\nhtmlcov/\nout/\n# remove root-level /bin, which is created by Eclipse\n/bin/\n/build-support/*.pex\n/build-support/virtualenv-*\n/build-support/virtualenv.dist/\n/build-support/phab/\n/build-support/twine-deps.venv/\n/dist/\n/lib/\narc.sh\nBUILD.release*\n/pants.pex\npants.ini.sitegen\ntarget\nGPATH\nGRTAGS\nGSYMS\nGTAGS\n.mypy_cache/\n/.pants\n/.pants.rc\n/.venv\n.tool-versions\nTAGS\nnode_modules\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 2.1640625,
          "content": "# We use the mailmap to map email addresses to canonical full names.\n# Some folks submit changes under several different email addresses\n# and sometimes the full names associated with those email addresses\n# varies.  The entries below correct the full names for alternate\n# email addresses such that all email addresses used by a single\n# person are associated with the same full name.\n#\n# See `git help shortlog` which has a section describing\n# 'MAPPING AUTHORS', which can also be found here:\n# ftp://www.kernel.org/pub/software/scm/git/docs/git-shortlog.html\n\nBenjy Weinberger <benjy@foursquare.com>\nBenjy Weinberger <benjyw@gmail.com>\nBrian Wickman <wickman@apache.org>\nChris Burroughs <chris.burroughs@gmail.com>\nChris Heisterkamp <cheister@gmail.com>\nCraig Schertz <cschertz@CraigLinuxMint.(none)>\nDan Davydov <ddavydov@twitter.com>\nFedor Korotkov <fkorotkov@twitter.com>\nFiona Condone <fiona@giphy.com>\nGreg Shuflin <greg.shuflin@toolchain.com>\nJay Crumb <103955359+jcrumb-u21@users.noreply.github.com>\nJohn Chee <cheecheeo+rbcommons@gmail.com>\nJohn Ioannidis <rbcommons@tla.org>\nJohn Sirois <jsirois@twitter.com>\nJon Boulle <jon@twitter.com>\nJoshua Cannon <joshdcannon@gmail.com>\nJustin Trobec <jtrobec@twitter.com>\nKris Wilson <kwilson@twopensource.com>\nLarry Hosken <mister@lahosken.san-francisco.ca.us>\nLawrence Finn <larry@actioniq.co>\nLe Nucksi <lenucksi@users.noreply.github.com>\nLeo Kim <leo@foursquare.com>\nMarius Eriksen <marius@monkey.org>\nMark Chu-Carroll <markcc@foursquare.com>\nMark McBride <mmcbride@twitter.com>\nNora Howard <ndh@baroquebobcat.com>\nNora Howard <nh@baroquebobcat.com>\nNora Howard <nhoward@twitter.com>\nNora Howard <nhoward@twopensource.com>\nNy Saechao <nysaechao@outlook.com>\nPaul Yau <yaup@cs.washington.edu>\nRhys Madigan <rhysmadigan@gmail.com>\nRobert Stapenhurst <robert@stapenhurst.co.uk>\nRoger Jiang <rogerj.2010@gmail.com>\nSameer Brenn <sameerparekh@users.noreply.github.com>\nShantanu Kumar <ShantanuKumar@users.noreply.github.com>\nShuo Li <shuoli84@gmail.com>\nStu Hood <stuhood@gmail.com>\nSuresh Joshi <suresh@vicarasolutions.com>\nSuresh Joshi <sureshj@gmail.com>\nUgo Di Girolamo <ugodiggi@gmail.com>\nYi Cheng <wisechengyi@gmail.com>\nYujie Chen <yujieproject@gmail.com>\n"
        },
        {
          "name": ".scalafix.conf",
          "type": "blob",
          "size": 0.1533203125,
          "content": "rules = [\n  NoAutoTupling,\n  DisableSyntax,\n  NoValInForComprehension,\n  RedundantSyntax,\n  RemoveUnused,\n  ProcedureSyntax\n]\n\nDisableSyntax.noThrows = true\n"
        },
        {
          "name": ".scalafmt.conf",
          "type": "blob",
          "size": 0.056640625,
          "content": "version = 3.2.1\nrunner.dialect = scala213\nmaxColumn = 100\n"
        },
        {
          "name": ".taplo.toml",
          "type": "blob",
          "size": 0.03125,
          "content": "[formatting]\ncolumn_width = 100\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD",
          "type": "blob",
          "size": 1.5966796875,
          "content": "# Copyright 2019 Pants project contributors (see CONTRIBUTORS.md).\n# Licensed under the Apache License, Version 2.0 (see LICENSE).\n\nshell_sources(name=\"scripts\", sources=[\"cargo\", \"pants\"])\n\n# We use `BUILD_ROOT` to establish the build root, rather than `./pants`, per\n# https://github.com/pantsbuild/pants/pull/8105.\nfiles(name=\"files\", sources=[\"BUILD_ROOT\", \"pants.toml\"])\n\npython_test_utils(name=\"test_utils\")\n\n# Used for experimenting with the new Docker support.\ndocker_environment(\n    name=\"docker_env\",\n    image=\"python:3.11\",\n    python_bootstrap_search_path=[\"<PATH>\"],\n)\n\n# See `build-support/reapi-sample-server/README.md` for information on how to use this environment\n# for internal testing.\nremote_environment(\n    name=\"buildgrid_remote\",\n    python_bootstrap_search_path=[\"<PATH>\"],\n)\n\nfiles(\n    name=\"all-__init__.py-files\",\n    sources=[\n        \"**/__init__.py\",\n        \"!testprojects/**\",\n        # These are explicit namespace packages\n        \"!src/python/pants/__init__.py\",\n        \"!src/python/pants/testutil/__init__.py\",\n    ],\n)\n\n# NB: This should be in `lint` when we implement `lint` in https://github.com/pantsbuild/pants/issues/17729\nexperimental_test_shell_command(\n    name=\"checks-empty-init-files\",\n    command=\"\"\"\n        NONEMPTY_INITS=$(find . -type f -name \"*.py\" -size +0);\n\n        if [ -n \"$NONEMPTY_INITS\" ]; then\n            echo \"All \\\\`__init__.py\\\\` file should be empty, but the following had content:\";\n            echo \"$NONEMPTY_INITS\";\n            exit 1;\n        fi\n        exit 0;\n    \"\"\",\n    tools=[\"echo\", \"find\"],\n    execution_dependencies=[\":all-__init__.py-files\"],\n)\n"
        },
        {
          "name": "BUILD_ROOT",
          "type": "blob",
          "size": 0.154296875,
          "content": "# Used for our tests to find the build root, as we cannot safely use `./pants`\n# for the sentinel filename per https://github.com/pantsbuild/pants/pull/8105.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.14453125,
          "content": "# Pants Code of Conduct\n\nSee [here](https://www.pantsbuild.org/docs/code-of-conduct) for our current code of conduct, and how to report violations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1259765625,
          "content": "# Contributing\n\nPlease see [www.pantsbuild.org/docs/contributor-overview](https://www.pantsbuild.org/docs/contributor-overview).\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 6.05859375,
          "content": "Created as part of the release process.\n\n+ A. Alonso Dominguez\n+ APL\n+ Aaron Mitchell\n+ Adam Chainz\n+ Adam Retter\n+ Aditya Raj Verma\n+ Alan Paulin\n+ Alan Velasco\n+ Alex Bancroft\n+ Alex Schmitt\n+ Alexander Heldt\n+ Alexander Johnson\n+ Alexander Kuhn-Regnier\n+ Alexandre Viau\n+ Alexey Tereshenkov\n+ Alisha Parveen\n+ Andreas Stenius\n+ Andrew Hamilton\n+ Andrii Porokhnavets\n+ Andy Reitz\n+ Anler\n+ Antoine Tollenaere\n+ Asher Foa\n+ Aurelien Didier\n+ Axel Goblet\n+ Baptiste Gentholz\n+ Bardur Arantsson\n+ Bastian Wegge\n+ Ben Limmer\n+ Benjamin Dabelow\n+ Benjy Weinberger\n+ Berkay Öztürk\n+ Bill Farner\n+ Billy \"Hyun Joon\" Seol\n+ Blaž Šnuderl\n+ Bob Gregory\n+ Borja Lorente\n+ Brandon Milton\n+ Brandon Novick\n+ Brian Larson\n+ Brian Wickman\n+ Bruno Bieth\n+ Bryan Weber\n+ Caitie McCaffrey\n+ Caleb Lloyd\n+ Carina C. Zona\n+ Caspar Krieger\n+ Chris Aniszczyk\n+ Chris Borckholder\n+ Chris Burroughs\n+ Chris Chen\n+ Chris Heisterkamp\n+ Chris Livingston\n+ Chris Pesto\n+ Chris Smith\n+ Chris Targett\n+ Chris Williams\n+ Christoph Proeschel\n+ Christopher Livingston\n+ Christopher Maier\n+ Christopher Neugebauer\n+ Cody Gibb\n+ Colin Taylor\n+ Constantin Ponfick\n+ Craig Schertz\n+ Cristian Matache\n+ D. Luke Nelson\n+ Damon Revoe\n+ Dan Davydov\n+ Dan Fabulich\n+ Dan Harrison\n+ Daniel Anderson\n+ Daniel Bentley\n+ Daniel Cavazos\n+ Daniel Goldman\n+ Daniel Moran\n+ Daniel Peebles\n+ Daniel Wagner-Hall\n+ Danny McClanahan\n+ Dave Brewster\n+ David Katz\n+ David Singleton\n+ David Taylor\n+ David Turner\n+ Derek Young\n+ Dimitar Kovachev\n+ Dimitrios Bariamis\n+ Divij Rajkumar\n+ Dominic Hamon\n+ Doron Somech\n+ Dorothy Ordogh\n+ Drew Rothstein\n+ Dumitru Daniliuc\n+ Dylan Herman\n+ Dương Đỗ Minh Châu\n+ Ebube Chuba\n+ Eitan Adler\n+ Ekaterina Tyurina\n+ Emily Caveness\n+ Eric Arellano\n+ Eric Ayers\n+ Eric Danielson\n+ Eric Jacob\n+ Eric Lindvall\n+ Eugene Burmako\n+ Evan Jones\n+ Evgeny Kravchenko\n+ Facetoe\n+ Fatin H\n+ Fedor Korotkov\n+ Filip Nikolovski\n+ Fiona Condone\n+ Flo\n+ Florian Leibert\n+ Fredrik Ekholdt\n+ Gabriel Gonzalez\n+ Garrett Malmquist\n+ Gary M. Josack\n+ Gautham Nair\n+ Gerald Spencer\n+ Gordon Cassie\n+ Greg Niemann\n+ Greg Shuflin\n+ Gregory Borodin\n+ Grzegorz Kossakowski\n+ Guy Marom\n+ Harley Cooper\n+ HeetVekariya\n+ Henri Parfait\n+ Henry Fuller\n+ Herbert Rusznak\n+ Huon Wilson\n+ Hwasung Lee\n+ Ian Tabolt\n+ Idan Attias\n+ Igor Morozov\n+ Ikai Lan\n+ In-Ho Yi\n+ Israël Hallé\n+ Itay Donanhirsh\n+ Ity Kaul\n+ JC (Jonathan Chen)\n+ Jack Evans\n+ Jack Zhao\n+ Jackson Davis\n+ Jacob Floyd\n+ Jake Donham\n+ Jake Zerrer\n+ Jakub Bujny\n+ James Bench\n+ James Koch\n+ James Mouradian\n+ Jan Berkel\n+ Jan Paul Erkelens\n+ Jason Barnett\n+ Jason Jackson\n+ Jason Song\n+ Jay Crumb\n+ Jeff Jenkins\n+ Jeremy Hintz\n+ Jessica Rosenfield\n+ Jin Feng\n+ Joe Crobak\n+ Joe Ennever\n+ Joe Smith\n+ Johan Oskarsson\n+ Johan Sim Jian An\n+ John Barry\n+ John Basila\n+ John Chee\n+ John Gallagher\n+ John Granström\n+ John Ioannidis\n+ John Sirois\n+ John Townsend\n+ Jon Boulle\n+ Jonas Rauber\n+ Jonas Stendahl\n+ Jonathan Coveney\n+ Jonathan D. Simms\n+ Jonathan Sokolowski\n+ Joseph Tilahun\n+ Josh Reed\n+ Josh Soref\n+ Josh Suereth\n+ Joshua Cannon\n+ Joshua Cohen\n+ Joshua Humphries\n+ Jovial Joe Jayarson\n+ Julio Batista Silva\n+ Justin Trobec\n+ KadenAgrey\n+ Karin Lundberg\n+ Kaushik Srenevasan\n+ Ken Howard\n+ Ken Kawamoto\n+ Kevin Oliveira\n+ Kevin Oliver\n+ Kevin Sweeney\n+ Koki Nishihara\n+ Kris Wilson\n+ Krishna Vudata\n+ Krishnan Chandra\n+ Kushal Dave\n+ Kyle Derr\n+ Kyujin Cho\n+ Larry Hosken\n+ Lasse Alm\n+ Lawrence Finn\n+ Le Nucksi\n+ Lei Wang\n+ Leo Kim\n+ Lex Spoon\n+ Li Li\n+ Liam Deacon\n+ Liam Wilson\n+ Luc Cary\n+ Luca Clementi\n+ Lukasz Jastrzebski\n+ Mahesh Vashishtha\n+ Marc Abramowitz\n+ Marcelo Trylesinski\n+ Marcin Podolski\n+ Marcus Bolmstedt\n+ Marcus Lim\n+ Marek Żarnowski\n+ Marijn Valk\n+ Marilyn Cruz\n+ Marius Eriksen\n+ Marius Räsener\n+ Mark Chu-Carroll\n+ Mark Davis\n+ Mark McBride\n+ Martim Lobao\n+ Mateo Rodriguez\n+ Mathew Jennings\n+ Mathieu Sabourin\n+ Matt Dee\n+ Matt Landis\n+ Matt Olsen\n+ Matthew Jeffryes\n+ Matthias Berndt\n+ Maxim Khutornenko\n+ Maxim Popenko\n+ Michael Doherty\n+ Michael Glass\n+ Michal Bryc\n+ Mikael Souza\n+ Mike Cripps\n+ Mike Geeves\n+ Mike Lindsey\n+ Mike Solomon\n+ Misho Krastev\n+ Mohamed Abdi\n+ Morten Hauge\n+ Moses Nakamura\n+ Muhammad Tsany Qudsi\n+ Nadav Samet\n+ Nathan Levesque\n+ Navneeth Jayendran\n+ Neeraj Kashyap\n+ Neil Sanchala\n+ Nicholas Gustafson\n+ Nicholas Santos\n+ Nick Dellosa\n+ Nik Shkrob\n+ Nimrod Shlagman\n+ Nitay Joffe\n+ Nobu\n+ Nora Howard\n+ Ny Saechao\n+ Oliver Gould\n+ Oliver Seemann\n+ Omer Zach\n+ Owen Parry\n+ Pall Valmundsson\n+ Pankaj Gupta\n+ Patrick Lawson\n+ Patrick Liu\n+ Paul Groudas\n+ Paul Phillips\n+ Paul Yau\n+ Peiyu Wang\n+ Peter A. I. Forsyth\n+ Peter Seibel\n+ Peter Vlugter\n+ Pierre Chevalier\n+ Pierre DAL-PRA\n+ Qicheng Ma\n+ Rahul Mehta\n+ Ramon Buckland\n+ Raph Estrada\n+ Raúl Cuza\n+ Rhuan Barreto\n+ Rhys Madigan\n+ Robert Stapenhurst\n+ Roger Jiang\n+ Roman Andriadi\n+ Rushal Verma\n+ Ryan Despain\n+ Ryan King\n+ Ryan Scott Brown\n+ Ryan Williams\n+ Sameer Arora\n+ Sameer Brenn\n+ Sara Solano\n+ Scott Lessans\n+ Scott Searcy\n+ Senthil Kumaran\n+ SergeKireev\n+ Sergey Serebryakov\n+ Seve Martinez\n+ Shane Delmore\n+ Shantanu Kumar\n+ Shuo Li\n+ Simeon Franklin\n+ Simon Biggs\n+ Sion Kang\n+ Srikanth Kotagiri\n+ Stefan Sauer\n+ Stephan Erb\n+ Stu Hood\n+ Subin Kim\n+ Suresh Joshi\n+ Sven Widén\n+ Tal Amuyal\n+ Tansy Arron-Walker\n+ Ted Dziuba\n+ Tejal Desai\n+ Thales Menato\n+ Theo Ribeiro\n+ Tianshuo Deng\n+ Tien Nguyen\n+ Tim Gates\n+ Tim Nielens\n+ Tim Treptow\n+ Timur Abishev\n+ Tina Huang\n+ Tobias Nilsson\n+ Todd Stumpf\n+ Tom Dimiduk\n+ Tom Dyas\n+ Tom Howland\n+ Tom Most\n+ Tom Solberg\n+ Tomasz Godzik\n+ Tomasz Pasternak\n+ Tony Sherman\n+ Travis Crawford\n+ Troy Howard\n+ Tushar Singh\n+ Ugo Di Girolamo\n+ Ulugbek Adilbekov\n+ Viktor Kleen\n+ Vincent Tavernier\n+ Walter Scheper\n+ Wei An\n+ Wilhelmina Drengwitz\n+ Willy Lulciuc\n+ Win Wang\n+ Wolfram Arnold\n+ Xaelias\n+ Xuanwo\n+ Yarden Shoham\n+ Yi Cheng\n+ Yoav Alon\n+ Yuhan GUO\n+ Yujie Chen\n+ achrafmam2\n+ andreaimprovised\n+ azban\n+ bianca rosa\n+ billybecker\n+ csqzhang\n+ csteiner\n+ eugene yokota\n+ gyudoza\n+ hephex\n+ jgartdele/del\n+ lukevmorris\n+ offsetcyan\n+ okcleary\n+ olivercoleman-switchdin\n+ philipp-sontag-by\n+ purajit\n+ ravi2024sk\n+ sww\n+ twunderlich-grapl\n+ wimax-grapl\n+ yjabri\n+ Éric Jacob\n+ Ólafur Páll Geirsson\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0947265625,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014 [your identifying information]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.70703125,
          "content": "Active Maintainers\n==================\n\n* A. Alonso Dominguez\n* Alexey Tereshenkov\n* Andreas Stenius\n* Benjy Weinberger\n* Carina C. Zona\n* Christopher Neugebauer\n* Dan Moran\n* Daniel McClanahan\n* Daniel Wagner-Hall\n* Henry Fuller\n* Joshua Cannon\n* Kris Wilson\n* Patrick Lawson\n* Stu Hood\n* Suresh Joshi (SJ)\n* Tobias Nilsson\n* Tom Dyas\n* Yi Cheng\n\nEmeritus\n========\n\n* Andy Reitz\n* Borja Lorente\n* Chris Heisterkamp\n* Chris Livingston\n* David Taylor\n* David Turner\n* Dorothy Ordogh\n* Eric Arellano\n* Eric Ayers\n* Fedor Korotkov\n* Garrett Malmquist\n* Greg Shuflin\n* Ity Kaul\n* John Sirois\n* Larry Hosken\n* Mateo Rodriguez\n* Matt Olsen\n* Nora Howard\n* Peiyu Wang\n* Pierre Chevalier\n* Tejal Desai\n* Travis Crawford\n* Yujie Chen\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.875,
          "content": "# Pants Build System\n\nPants is a scalable build system for _monorepos_: codebases containing \nmultiple projects, often using multiple programming languages and frameworks, \nin a single unified code repository.\n\nSome noteworthy features include:\n\n* Explicit dependency modeling.\n* Fine-grained invalidation.\n* Shared result caching.\n* Concurrent execution.\n* Remote execution.\n* Unified interface for multiple tools and languages.\n* Extensibility and customizability via a plugin API.\n\nDocumentation: [www.pantsbuild.org](https://www.pantsbuild.org/).\n\n# Getting started\n\nSee the [getting started](https://www.pantsbuild.org/docs/getting-started) documentation.\n\n# Credits\n\nmacOS CI resources provided by [MacStadium](https://www.macstadium.com/).\n\n<img width=\"150\" height=\"61\" src=\"https://uploads-ssl.webflow.com/5ac3c046c82724970fc60918/5c019d917bba312af7553b49_MacStadium-developerlogo.png\">\n\n"
        },
        {
          "name": "build-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "cargo",
          "type": "blob",
          "size": 1.41796875,
          "content": "#!/usr/bin/env bash\n# Copyright 2020 Pants project contributors (see CONTRIBUTORS.md).\n# Licensed under the Apache License, Version 2.0 (see LICENSE).\n\nREPO_ROOT=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd -P)\n\n# shellcheck source=build-support/common.sh\nsource \"${REPO_ROOT}/build-support/common.sh\"\n\nPY=\"$(determine_python)\"\nexport PY\nexport PYO3_PYTHON=\"${PY}\"\nexport PYTHON_SYS_EXECUTABLE=\"${PY}\" # Consumed by the cpython crate.\nif is_macos_big_sur; then\n  # With Big Sur, MacOS changed its versioning scheme from 10.X to 11.X. A pantsbuild.pants\n  # wheel built on Big Sur will declare its platform (in its name) as macosx_11_0. Unfortunately\n  # pip does not yet recognize that as a compatible platform for Big Sur.\n  # Fortunately, Big Sur may also be identified as 10.16, for backwards compatibility with the old\n  # versioning scheme. Setting MACOSX_DEPLOYMENT_TARGET=10.16 when building the wheel will cause\n  # that wheel to declare its platform as macosx_10_16, which pip will then happily install.\n  # However, in order to build the wheel as macosx_10_16 we must also build the native code for\n  # that platform string, hence this setting here.\n  export MACOSX_DEPLOYMENT_TARGET=10.16\nfi\n\nif ! command -v rustup &> /dev/null; then\n  die \"Please install Rustup and ensure \\`rustup\\` is on your PATH (usually by adding ~/.cargo/bin). See https://rustup.rs.\"\nfi\n\ncd \"${REPO_ROOT}/src/rust/engine\" || exit \"${PIPESTATUS[0]}\"\nexec cargo \"$@\"\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 1.001953125,
          "content": "# Copyright 2022 Pants project contributors (see CONTRIBUTORS.md).\n# Licensed under the Apache License, Version 2.0 (see LICENSE).\n\n\nimport pytest\n\n\n@pytest.hookimpl(hookwrapper=True)\ndef pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo[None]):\n    outcome = yield\n    rep = outcome.get_result()\n\n    if (\n        item.config.getoption(\"--noskip\")\n        and rep.skipped\n        and (call.excinfo and call.excinfo.errisinstance(pytest.skip.Exception))\n        and \"no_error_if_skipped\" not in item.keywords\n    ):\n        rep.outcome = \"failed\"\n        assert call.excinfo is not None\n        r = call.excinfo._getreprcrash()\n        rep.longrepr = f\"Forbidden skipped test - {r.message}\"\n\n\ndef pytest_configure(config):\n    config.addinivalue_line(\n        \"markers\", \"no_error_if_skipped: Don't error if this test is skipped when using --noskip\"\n    )\n\n\ndef pytest_addoption(parser):\n    parser.addoption(\n        \"--noskip\", action=\"store_true\", default=False, help=\"Treat skipped tests as errors\"\n    )\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pants",
          "type": "blob",
          "size": 2.7978515625,
          "content": "#!/usr/bin/env bash\n# Copyright 2014 Pants project contributors (see CONTRIBUTORS.md).\n# Licensed under the Apache License, Version 2.0 (see LICENSE).\n\n# This bootstrap script runs pants from the live sources in this repo.\n#\n# The script defaults to running with either Python 3.7 or Python 3.8. To use another Python version,\n# prefix the script with `PY=python3.8`.\n\nset -eo pipefail\n\nHERE=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\n\n# Source any custom bootstrap settings for Pants from PANTS_BOOTSTRAP if it exists.\n: \"${PANTS_BOOTSTRAP:=.pants.bootstrap}\"\nif [[ -f \"${PANTS_BOOTSTRAP}\" ]]; then\n  # shellcheck source=/dev/null\n  source \"${PANTS_BOOTSTRAP}\"\nfi\n\n# Exposes:\n# + determine_python: Determine which interpreter version to use.\n# shellcheck source=build-support/common.sh\nsource \"${HERE}/build-support/common.sh\"\n\nPY=\"$(determine_python)\"\nexport PY\n\n# Exposes:\n# + activate_pants_venv: Activate a virtualenv for pants requirements, creating it if needed.\n# shellcheck source=build-support/pants_venv\nsource \"${HERE}/build-support/pants_venv\"\n\n# Exposes:\n# + bootstrap_native_code: Builds target-specific native engine binaries.\n# shellcheck source=build-support/bin/rust/bootstrap_code.sh\nsource \"${HERE}/build-support/bin/rust/bootstrap_code.sh\"\n\nfunction exec_pants_bare() {\n  PANTS_PY_EXE=\"${HERE}/src/python/pants/bin/pants_loader.py\"\n  PANTS_SRCPATH=\"${HERE}/src/python\"\n\n  # Redirect activation and native bootstrap to ensure that they don't interfere with stdout.\n  activate_pants_venv 1>&2\n  bootstrap_native_code 1>&2\n\n  if [ -n \"${PANTS_DEBUG}\" ]; then\n    if [[ \"$*\" != *\"--no-pantsd\"* ]]; then\n      echo \"Error! Must pass '--no-pantsd' when using PANTS_DEBUG\"\n      exit 1\n    fi\n    DEBUG_ARGS=\"-m debugpy --listen 127.0.0.1:5678 --wait-for-client\"\n    echo \"Will launch debugpy server at '127.0.0.1:5678' waiting for client connection.\"\n  fi\n\n  if [ -z \"${PANTS_NO_NATIVE_CLIENT}\" ]; then\n    set +e\n    \"${NATIVE_CLIENT_BINARY}\" \"$@\"\n    result=$?\n    # N.B.: The native pants client currently relies on pantsd being up. If it's not, it will fail\n    # with exit code 75 (EX_TEMPFAIL in /usr/include/sysexits.h) and we should fall through to the\n    # python pants client which knows how to start up pantsd. This failure takes O(1ms); so has no\n    # appreciable impact on --no-pantsd runs.\n    #\n    # TODO: Split out a `pants_server` or `pants_legacy_entrypoint` from this script, and then use\n    # the native client's support for fallback to the legacy entrypoint to remove the special\n    # exit code case.\n    if ((result != 75)); then\n      exit ${result}\n    fi\n    set -e\n  fi\n\n  # shellcheck disable=SC2086\n  PYTHONPATH=\"${PANTS_SRCPATH}:${PYTHONPATH}\" RUNNING_PANTS_FROM_SOURCES=1 NO_SCIE_WARNING=1 \\\n    exec ${PANTS_PREPEND_ARGS:-} \"$(venv_dir)/bin/python\" ${DEBUG_ARGS} \"${PANTS_PY_EXE}\" \"$@\"\n}\n\nexec_pants_bare \"$@\"\n"
        },
        {
          "name": "pants-plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pants.ci.toml",
          "type": "blob",
          "size": 0.3291015625,
          "content": "[GLOBAL]\ncolors = true\n\n[test]\nreport = true\nattempts_default = 3\n\n[pytest]\nargs = [\"--no-header\", \"--noskip\", \"-vv\"]\n\n[subprocess-environment]\nenv_vars.add = [\n  # Works around bad `-arch arm64` flag embedded in Xcode 12.x Python interpreters on intel\n  # machines. See: https://github.com/giampaolo/psutil/issues/1832\n  \"ARCHFLAGS\",\n]\n"
        },
        {
          "name": "pants.remote-execution.toml",
          "type": "blob",
          "size": 0.658203125,
          "content": "# See `build-support/reapi-sample-server/README.md` for information on how to use this config\n# for internal testing.\n\n[GLOBAL]\n\n# NB: We disable the `toolchain` plugin to avoid it overriding remote execution settings,\n# and disable config verification to ignore `toolchain` related settings.\nplugins = []\nverify_config = false\n\nremote_execution = true\nremote_cache_read = true\nremote_cache_write = true\n\nremote_store_address = \"grpc://127.0.0.1:50051\"\nremote_execution_address = \"grpc://127.0.0.1:50051\"\nremote_instance_name = \"\"\n\n# TODO: See https://gitlab.com/BuildGrid/buildgrid/-/blob/master/buildgrid/server/server.py#L212-222\nprocess_execution_remote_parallelism = 4\n"
        },
        {
          "name": "pants.toml",
          "type": "blob",
          "size": 7.85546875,
          "content": "[GLOBAL]\nprint_stacktrace = true\n\n# Enable our custom loose-source plugins.\npythonpath = [\"%(buildroot)s/pants-plugins\"]\nbackend_packages.add = [\n  \"pants.backend.build_files.fix.deprecations\",\n  \"pants.backend.build_files.fmt.black\",\n  \"pants.backend.python\",\n  \"pants.backend.experimental.python.packaging.pyoxidizer\",\n  \"pants.backend.python.lint.autoflake\",\n  \"pants.backend.python.lint.black\",\n  \"pants.backend.python.lint.docformatter\",\n  \"pants.backend.python.lint.flake8\",\n  \"pants.backend.python.lint.isort\",\n  \"pants.backend.python.typecheck.mypy\",\n  \"pants.backend.python.lint.pyupgrade\",\n  \"pants.backend.python.mixed_interpreter_constraints\",\n  \"pants.backend.shell\",\n  \"pants.backend.shell.lint.shellcheck\",\n  \"pants.backend.shell.lint.shfmt\",\n  \"pants.backend.docker\",\n  \"pants.backend.docker.lint.hadolint\",\n  \"pants.backend.experimental.adhoc\",\n  \"pants.backend.experimental.go\",\n  \"pants.backend.experimental.java\",\n  \"pants.backend.experimental.java.lint.google_java_format\",\n  \"pants.backend.experimental.java.debug_goals\",\n  \"pants.backend.experimental.javascript\",\n  \"pants.backend.experimental.javascript.lint.prettier\",\n  \"pants.backend.experimental.python\",\n  \"pants.backend.experimental.python.packaging.pyoxidizer\",\n  \"pants.backend.experimental.scala\",\n  \"pants.backend.experimental.scala.lint.scalafmt\",\n  \"pants.backend.experimental.scala.lint.scalafix\",\n  \"pants.backend.experimental.scala.debug_goals\",\n  \"pants.backend.experimental.tools.workunit_logger\",\n  \"pants.backend.experimental.typescript\",\n  \"pants.backend.experimental.visibility\",\n  \"pants.backend.tools.preamble\",\n  \"pants.backend.tools.taplo\",\n  \"pants_explorer.server\",\n  \"internal_plugins.releases\",\n  \"internal_plugins.test_lockfile_fixtures\",\n]\nplugins = [\n  \"hdrhistogram\", # For use with `--stats-log`.\n]\n\n# The invalidation globs cover the PYTHONPATH by default, but we exclude some files that are on the\n# path but not consumed by python, and additionally add the rust code.\npantsd_invalidation_globs.add = [\n  \"!*_test.py\",\n  \"!BUILD\",\n  \"!src/python/pants_release/**\",\n  # NB: The `target` directory is ignored via `pants_ignore` below.\n  \"src/rust/engine/**/*.rs\",\n  \"src/rust/engine/**/*.toml\",\n]\n# Path patterns to ignore for filesystem operations on top of the builtin patterns.\npants_ignore.add = [\n  # venv directories under build-support.\n  \"/build-support/*.venv/\",\n  # We shouldn't walk or watch the rust compiler artifacts because it is slow.\n  \"/src/rust/engine/target\",\n  # We want to .gitignore Java .class files, but pants should pay attention to them.\n  \"!*.class\",\n  # We also want to override the .gitignore'd pants.pex file\n  \"!/pants.pex\",\n  # Ignore node modules for docs processing tools\n  \"/docs/node_modules\",\n  # We have Pants stuff in here\n  \"!.github/\",\n  \"!/src/rust/engine/.cargo\",\n]\n\nbuild_ignore.add = [\n  # Disable Go targets by default so Pants developers do not need Go installed.\n  \"testprojects/src/go/**\",\n]\n\nunmatched_build_file_globs = \"error\"\n\n# TODO: We would like to be able to use `validate` or `defer` here, but further hardening of\n# network codepaths is needed. See:\n#   https://github.com/pantsbuild/pants/issues/16096.\ncache_content_behavior = \"fetch\"\n\n# Our current macOS 10.15 and 11 infrastructure is working okay, so for now (i.e. 2.24 dev\n# releases), we'll just keep building on them:\nallow_deprecated_macos_versions = [\"10\", \"11\"]\n\n[DEFAULT]\n# Tell `scie-pants` to use our `./pants` bootstrap script.\ndelegate_bootstrap = true\n\n[anonymous-telemetry]\nenabled = true\nrepo_id = \"7775F8D5-FC58-4DBC-9302-D00AE4A1505F\"\n\n[cli.alias]\n--all-changed = \"--changed-since=HEAD --changed-dependents=transitive\"\n\n[source]\nroot_patterns = [\n  \"src/*\",\n  \"test/*\",\n  \"tests/*\",\n  \"3rdparty/*\",\n  \"/build-support/bin\",\n  \"/build-support/flake8\",\n  \"/build-support/migration-support\",\n  \"/pants-plugins\",\n  # For `conftest.py`\n  \"/\",\n]\n\n[environments-preview.names]\n# We don't define any local environments because the options system covers our cases adequately.\ndocker = \"//:docker_env\"\n# Used for iterating on remote-execution.\nremote = \"//:buildgrid_remote\"\n\n[tailor]\nbuild_file_header = \"\"\"\\\n# Copyright 2024 Pants project contributors (see CONTRIBUTORS.md).\n# Licensed under the Apache License, Version 2.0 (see LICENSE).\n\"\"\"\nignore_paths = [\"build-support/migration-support/BUILD\"]\nignore_adding_targets = [\n  \"src/python/pants:__main__\",\n  \"src/python/pants/backend/docker/subsystems:dockerfile_wrapper_script\",\n  \"src/python/pants/backend/python/dependency_inference/scripts:dependency_parser0\",\n  \"src/python/pants/backend/terraform:hcl2_parser0\",\n]\n\n[update-build-files]\n# We use `pants.backend.build_files.fmt.black`\nfmt = false\n\n[pex]\nvenv_use_symlinks = true\n# This is off by default, but we want to dogfood it before switching on for everyone.\nemit_warnings = true\n\n[python]\n# N.B.: When upgrading to a new Python version, you must update the Pants\n# `python_distribution` targets, currently:\n# + src/python/pants:pants-packaged\n# + src/python/pants/testutil:testutil_wheel\n# And update the PythonBuildStandalone version/URL:\n# + src/python/pants/core/subsystems/python_bootstrap.py\ninterpreter_constraints = [\"==3.11.*\"]\nmacos_big_sur_compatibility = true\nenable_resolves = true\npip_version = \"latest\"\n\n[python.resolves]\npython-default = \"3rdparty/python/user_reqs.lock\"\nflake8 = \"3rdparty/python/flake8.lock\"\nmypy = \"3rdparty/python/mypy.lock\"\npytest = \"3rdparty/python/pytest.lock\"\npbs-script = \"3rdparty/python/pbs-script-requirements.lock\"\n\n[python-infer]\nassets = true\nunowned_dependency_behavior = \"error\"\n\n[docformatter]\nargs = [\"--wrap-summaries=100\", \"--wrap-descriptions=100\"]\n\n[flake8]\nconfig = \"build-support/flake8/.flake8\"\nsource_plugins = [\"build-support/flake8\"]\ninstall_from_resolve = \"flake8\"\nrequirements = [\"//3rdparty/python:flake8\"]\n\n[shellcheck]\nargs = [\"--external-sources\"]\n\n[shfmt]\n# See https://github.com/mvdan/sh/blob/master/cmd/shfmt/shfmt.1.scd#printer-flags.\nargs = [\"-i 2\", \"-ci\", \"-sr\"]\n\n[pytest]\nargs = [\"--no-header\", \"-vv\"]\nexecution_slot_var = \"TEST_EXECUTION_SLOT\"\ninstall_from_resolve = \"pytest\"\nrequirements = [\"//3rdparty/python:pytest\"]\n\n[test]\nextra_env_vars = [\n  # TODO: These are exposed to tests in order to allow for python interpreter discovery when\n  # Pants-tests-Pants: in particular, the [python] subsystem consumes them.\n  #   see https://github.com/pantsbuild/pants/issues/11638\n  \"PYENV_ROOT\",\n  \"HOME\",\n  \"PATH\",\n  # We'd always like complete backtraces in tests.\n  \"RUST_BACKTRACE=1\",\n]\ntimeout_default = 60\n\n[mypy]\ninstall_from_resolve = \"mypy\"\nrequirements = [\"//3rdparty/python:mypy\"]\n\n\n[coverage-py]\ninterpreter_constraints = [\"==3.11.*\"]\n\n[preamble]\ntemplate_by_globs = \"@build-support/preambles/config.yaml\"\n\n[generate-lockfiles]\ndiff = true\n\n[pyupgrade]\nargs = [\"--keep-runtime-typing\", \"--py38-plus\"]\n\n\n[jvm]\ndefault_resolve = \"jvm_testprojects\"\n\n[jvm.resolves]\n# A shared resolve for all testproject/example code. Because this is not shipped with Pants\n# binaries, it requires no isolation.\njvm_testprojects = \"3rdparty/jvm/testprojects.lockfile\"\n# A resolve for the java_parser, which is shipped with Pants, and invoked with its own isolated\n# classpath. Consequently, we isolate it to its own lockfile.\n# Note: The jvm_artifact targets in this resolve must be kept in sync with the requirements\n# in `generate_java_parser_lockfile_request`.\njava_parser_dev = \"src/python/pants/backend/java/dependency_inference/java_parser.lock\"\n# Has the same isolation requirements as `java_parser`.\n# Note: The jvm_artifact targets in this resolve must be kept in sync with with the requirements\n# in `generate_scala_parser_lockfile_request`.\nscala_parser_dev = \"src/python/pants/backend/scala/dependency_inference/scala_parser.lock\"\nstrip_jar_dev = \"src/python/pants/jvm/strip_jar/strip_jar.lock\"\njar_tool_dev = \"src/python/pants/jvm/jar_tool/jar_tool.lock\"\n\n[scala]\nversion_for_resolve = { \"scala_parser_dev\" = \"2.13.8\" }\n\n[scalac]\nargs = [\"-Yrangepos\", \"-Xlint:unused\"]\n\n[scala-infer]\nforce_add_siblings_as_dependencies = false\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.5830078125,
          "content": "[tool.black]\nline-length = 100\nexclude = '''\n/(\n  # These would already be ignored by pants, but having them here allows for manually running Black if one so wishes.\n  | \\.git\n  | \\.mypy_cache\n  | dist\n  | \\.pants\\.d\n  | virtualenvs\n  # This file intentionally contains invalid syntax\n  # It trips black up.\n  | compilation_failure\n)/\n'''\n\n[tool.isort]\nprofile = \"black\"\nline_length = 100\ncolor_output = true\nknown_first_party = [\"internal_plugins\", \"pants\", \"pants_test\"]\n\n[tool.pytest.ini_options]\nasyncio_mode = \"auto\"\nmarkers = [\"platform_specific_behavior\"]\n\n[tool.coverage.report]\n# We inject this file at test time (see src/python/pants/conftest.py), and so\n# coverage will gather stats for it, but it doesn't correspond to a real source file,\n# so reporting will fail, unless we omit it here.\nomit = [\"src/python/pants/__init__.py\"]\n\n[tool.mypy]\nnamespace_packages = true\nexplicit_package_bases = true\nmypy_path = \"src/python:tests/python:testprojects/src/python\"\nplugins = \"mypy_typing_asserts.mypy_plugin, strawberry.ext.mypy_plugin\"\n\nno_implicit_optional = true\nimplicit_reexport = false\nstrict_equality = true\n\nwarn_unused_configs = true\nwarn_unused_ignores = true\nwarn_return_any = true\nwarn_redundant_casts = true\nwarn_unreachable = true\n\npretty = true\nshow_column_numbers = true\nshow_error_context = true\nshow_error_codes = true\nshow_traceback = true\n\n[[tool.mypy.overrides]]\nmodule = [\n  \"botocore\",\n  \"bs4\",\n  \"chevron\",\n  \"colors\",\n  \"dockerfile\",\n  \"fasteners\",\n  \"freezegun\",\n  \"gnupg\",\n  \"hdrh\",\n  \"hdrh.histogram\",\n  \"ijson.*\",\n  \"nodesemver\",\n  \"pex.*\",\n  \"psutil\",\n]\nignore_missing_imports = true\n"
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 0.201171875,
          "content": "{ pkgs ? import (fetchTarball \"https://github.com/NixOS/nixpkgs/archive/refs/tags/23.05.tar.gz\") {} }:\n\npkgs.mkShell {\n  packages = with pkgs; [\n    curl\n    git\n    python39\n    rustup\n    protobuf\n  ];\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}