{
  "metadata": {
    "timestamp": 1736560389779,
    "page": 940,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jdepoix/youtube-transcript-api",
      "stars": 3262,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1025390625,
          "content": ".idea\n.venv\nvirtualenv\n*.pyc\ndist\nbuild\n*.egg-info\nupload_new_version.sh\n.coverage\ncoverage.xml\n.DS_STORE"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Jonas Depoix\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.193359375,
          "content": "\r\n<h1 align=\"center\">\r\n  âœ¨ YouTube Transcript API âœ¨\r\n</h1>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=BAENLEW8VUJ6G&source=url\">\r\n    <img src=\"https://img.shields.io/badge/Donate-PayPal-green.svg\" alt=\"Donate\">\r\n  </a>\r\n  <a href=\"https://github.com/jdepoix/youtube-transcript-api/actions\">\r\n    <img src=\"https://github.com/jdepoix/youtube-transcript-api/actions/workflows/ci.yml/badge.svg?branch=master\" alt=\"Build Status\">\r\n  </a>\r\n  <a href=\"https://coveralls.io/github/jdepoix/youtube-transcript-api?branch=master\">\r\n    <img src=\"https://coveralls.io/repos/github/jdepoix/youtube-transcript-api/badge.svg?branch=master\" alt=\"Coverage Status\">\r\n  </a>\r\n  <a href=\"http://opensource.org/licenses/MIT\">\r\n    <img src=\"http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat\" alt=\"MIT license\">\r\n  </a>\r\n  <a href=\"https://pypi.org/project/youtube-transcript-api/\">\r\n    <img src=\"https://img.shields.io/pypi/v/youtube-transcript-api.svg\" alt=\"Current Version\">\r\n  </a>\r\n  <a href=\"https://pypi.org/project/youtube-transcript-api/\">\r\n    <img src=\"https://img.shields.io/pypi/pyversions/youtube-transcript-api.svg\" alt=\"Supported Python Versions\">\r\n  </a>\r\n</p>\r\n\r\n<p align=\"center\">\r\n  <b>This is a python API which allows you to retrieve the transcript/subtitles for a given YouTube video. It also works for automatically generated subtitles, supports translating subtitles and it does not require a headless browser, like other selenium based solutions do!</b>\r\n</p>\r\n<p align=\"center\">\r\n Maintenance of this project is made possible by all the <a href=\"https://github.com/jdepoix/youtube-transcript-api/graphs/contributors\">contributors</a> and <a href=\"https://github.com/sponsors/jdepoix\">sponsors</a>. If you'd like to sponsor this project and have your avatar or company logo appear below <a href=\"https://github.com/sponsors/jdepoix\">click here</a>. ðŸ’–\r\n</p>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://www.searchapi.io\">\r\n    <picture>\r\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://www.searchapi.io/press/v1/svg/searchapi_logo_white_h.svg\">\r\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://www.searchapi.io/press/v1/svg/searchapi_logo_black_h.svg\">\r\n      <img alt=\"SearchAPI\" src=\"https://www.searchapi.io/press/v1/svg/searchapi_logo_black_h.svg\" height=\"40px\" style=\"vertical-align: middle;\">\r\n    </picture>\r\n  </a>\r\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n  <a href=\"https://supadata.ai\">\r\n    <picture>\r\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://supadata.ai/logo-dark.svg\">\r\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://supadata.ai/logo-light.svg\">\r\n      <img alt=\"supadata\" src=\"https://supadata.ai/logo-light.svg\" height=\"40px\">\r\n    </picture>\r\n  </a>\r\n</p>\r\n\r\n## Install\r\n\r\nIt is recommended to [install this module by using pip](https://pypi.org/project/youtube-transcript-api/):\r\n\r\n```\r\npip install youtube-transcript-api\r\n```\r\n\r\nYou can either integrate this module [into an existing application](#api) or just use it via a [CLI](#cli).\r\n\r\n## API\r\n\r\nThe easiest way to get a transcript for a given video is to execute:\r\n\r\n```python\r\nfrom youtube_transcript_api import YouTubeTranscriptApi\r\n\r\nYouTubeTranscriptApi.get_transcript(video_id)\r\n```\r\n\r\n> **Note:** By default, this will try to access the English transcript of the video. If your video has a different language, or you are interested in fetching a different language's transcript, please read the section below.\r\n\r\nThis will return a list of dictionaries looking somewhat like this:\r\n\r\n```python\r\n[\r\n    {\r\n        'text': 'Hey there',\r\n        'start': 7.58,\r\n        'duration': 6.13\r\n    },\r\n    {\r\n        'text': 'how are you',\r\n        'start': 14.08,\r\n        'duration': 7.58\r\n    },\r\n    # ...\r\n]\r\n```\r\n### Retrieve different languages\r\n\r\nYou can add the `languages` param if you want to make sure the transcripts are retrieved in your desired language (it defaults to english).\r\n\r\n```python\r\nYouTubeTranscriptApi.get_transcript(video_id, languages=['de', 'en'])\r\n```\r\n\r\nIt's a list of language codes in a descending priority. In this example it will first try to fetch the german transcript (`'de'`) and then fetch the english transcript (`'en'`) if it fails to do so. If you want to find out which languages are available first, [have a look at `list_transcripts()`](#list-available-transcripts).\r\n\r\nIf you only want one language, you still need to format the `languages` argument as a list\r\n\r\n```python\r\nYouTubeTranscriptApi.get_transcript(video_id, languages=['de'])\r\n```\r\n### Batch fetching of transcripts\r\n\r\nTo get transcripts for a list of video ids you can call:\r\n\r\n```python\r\nYouTubeTranscriptApi.get_transcripts([\"video_id1\", \"video_id2\"], languages=['de', 'en'])\r\n```\r\n\r\n`languages` also is optional here.\r\n\r\n### Preserve formatting\r\n\r\nYou can also add `preserve_formatting=True` if you'd like to keep HTML formatting elements such as `<i>` (italics) and `<b>` (bold).\r\n\r\n```python\r\nYouTubeTranscriptApi.get_transcripts(video_ids, languages=['de', 'en'], preserve_formatting=True)\r\n```\r\n\r\n### List available transcripts\r\n\r\nIf you want to list all transcripts which are available for a given video you can call:\r\n\r\n```python\r\ntranscript_list = YouTubeTranscriptApi.list_transcripts(video_id)\r\n```\r\n\r\nThis will return a `TranscriptList` object  which is iterable and provides methods to filter the list of transcripts for specific languages and types, like:\r\n\r\n```python\r\ntranscript = transcript_list.find_transcript(['de', 'en'])\r\n```\r\n\r\nBy default this module always picks manually created transcripts over automatically created ones, if a transcript in the requested language is available both manually created and generated. The `TranscriptList` allows you to bypass this default behaviour by searching for specific transcript types:\r\n\r\n```python\r\n# filter for manually created transcripts\r\ntranscript = transcript_list.find_manually_created_transcript(['de', 'en'])\r\n\r\n# or automatically generated ones\r\ntranscript = transcript_list.find_generated_transcript(['de', 'en'])\r\n```\r\n\r\nThe methods `find_generated_transcript`, `find_manually_created_transcript`, `find_transcript` return `Transcript` objects. They contain metadata regarding the transcript:\r\n\r\n```python\r\nprint(\r\n    transcript.video_id,\r\n    transcript.language,\r\n    transcript.language_code,\r\n    # whether it has been manually created or generated by YouTube\r\n    transcript.is_generated,\r\n    # whether this transcript can be translated or not\r\n    transcript.is_translatable,\r\n    # a list of languages the transcript can be translated to\r\n    transcript.translation_languages,\r\n)\r\n```\r\n\r\nand provide the method, which allows you to fetch the actual transcript data:\r\n\r\n```python\r\ntranscript.fetch()\r\n```\r\n\r\n### Translate transcript\r\n\r\nYouTube has a feature which allows you to automatically translate subtitles. This module also makes it possible to access this feature. To do so `Transcript` objects provide a `translate()` method, which returns a new translated `Transcript` object:\r\n\r\n```python\r\ntranscript = transcript_list.find_transcript(['en'])\r\ntranslated_transcript = transcript.translate('de')\r\nprint(translated_transcript.fetch())\r\n```\r\n\r\n### By example\r\n```python\r\nfrom youtube_transcript_api import YouTubeTranscriptApi\r\n\r\n# retrieve the available transcripts\r\ntranscript_list = YouTubeTranscriptApi.list_transcripts('video_id')\r\n\r\n# iterate over all available transcripts\r\nfor transcript in transcript_list:\r\n\r\n    # the Transcript object provides metadata properties\r\n    print(\r\n        transcript.video_id,\r\n        transcript.language,\r\n        transcript.language_code,\r\n        # whether it has been manually created or generated by YouTube\r\n        transcript.is_generated,\r\n        # whether this transcript can be translated or not\r\n        transcript.is_translatable,\r\n        # a list of languages the transcript can be translated to\r\n        transcript.translation_languages,\r\n    )\r\n\r\n    # fetch the actual transcript data\r\n    print(transcript.fetch())\r\n\r\n    # translating the transcript will return another transcript object\r\n    print(transcript.translate('en').fetch())\r\n\r\n# you can also directly filter for the language you are looking for, using the transcript list\r\ntranscript = transcript_list.find_transcript(['de', 'en'])  \r\n\r\n# or just filter for manually created transcripts  \r\ntranscript = transcript_list.find_manually_created_transcript(['de', 'en'])  \r\n\r\n# or automatically generated ones  \r\ntranscript = transcript_list.find_generated_transcript(['de', 'en'])\r\n```\r\n\r\n### Using Formatters\r\nFormatters are meant to be an additional layer of processing of the transcript you pass it. The goal is to convert the transcript from its Python data type into a consistent string of a given \"format\". Such as a basic text (`.txt`) or even formats that have a defined specification such as JSON (`.json`), WebVTT (`.vtt`), SRT (`.srt`), Comma-separated format (`.csv`), etc...\r\n\r\nThe `formatters` submodule provides a few basic formatters to wrap around you transcript data in cases where you might want to do something such as output a specific format then write that format to a file. Maybe to backup/store and run another script against at a later time.\r\n\r\nWe provided a few subclasses of formatters to use:\r\n\r\n- JSONFormatter\r\n- PrettyPrintFormatter\r\n- TextFormatter\r\n- WebVTTFormatter\r\n- SRTFormatter\r\n\r\nHere is how to import from the `formatters` module.\r\n\r\n```python\r\n# the base class to inherit from when creating your own formatter.\r\nfrom youtube_transcript_api.formatters import Formatter\r\n\r\n# some provided subclasses, each outputs a different string format.\r\nfrom youtube_transcript_api.formatters import JSONFormatter\r\nfrom youtube_transcript_api.formatters import TextFormatter\r\nfrom youtube_transcript_api.formatters import WebVTTFormatter\r\nfrom youtube_transcript_api.formatters import SRTFormatter\r\n```\r\n\r\n### Provided Formatter Example\r\nLets say we wanted to retrieve a transcript and write that transcript as a JSON file in the same format as the API returned it as. That would look something like this:\r\n\r\n```python\r\n# your_custom_script.py\r\n\r\nfrom youtube_transcript_api import YouTubeTranscriptApi\r\nfrom youtube_transcript_api.formatters import JSONFormatter\r\n\r\n# Must be a single transcript.\r\ntranscript = YouTubeTranscriptApi.get_transcript(video_id)\r\n\r\nformatter = JSONFormatter()\r\n\r\n# .format_transcript(transcript) turns the transcript into a JSON string.\r\njson_formatted = formatter.format_transcript(transcript)\r\n\r\n\r\n# Now we can write it out to a file.\r\nwith open('your_filename.json', 'w', encoding='utf-8') as json_file:\r\n    json_file.write(json_formatted)\r\n\r\n# Now should have a new JSON file that you can easily read back into Python.\r\n```\r\n\r\n**Passing extra keyword arguments**\r\n\r\nSince JSONFormatter leverages `json.dumps()` you can also forward keyword arguments into `.format_transcript(transcript)` such as making your file output prettier by forwarding the `indent=2` keyword argument.\r\n\r\n```python\r\njson_formatted = JSONFormatter().format_transcript(transcript, indent=2)\r\n```\r\n\r\n### Custom Formatter Example\r\nYou can implement your own formatter class. Just inherit from the `Formatter` base class and ensure you implement the `format_transcript(self, transcript, **kwargs)` and `format_transcripts(self, transcripts, **kwargs)` methods which should ultimately return a string when called on your formatter instance.\r\n\r\n```python\r\n\r\nclass MyCustomFormatter(Formatter):\r\n    def format_transcript(self, transcript, **kwargs):\r\n        # Do your custom work in here, but return a string.\r\n        return 'your processed output data as a string.'\r\n\r\n    def format_transcripts(self, transcripts, **kwargs):\r\n        # Do your custom work in here to format a list of transcripts, but return a string.\r\n        return 'your processed output data as a string.'\r\n```\r\n\r\n## CLI\r\n\r\nExecute the CLI script using the video ids as parameters and the results will be printed out to the command line:  \r\n\r\n```  \r\nyoutube_transcript_api <first_video_id> <second_video_id> ...  \r\n```  \r\n\r\nThe CLI also gives you the option to provide a list of preferred languages:  \r\n\r\n```  \r\nyoutube_transcript_api <first_video_id> <second_video_id> ... --languages de en  \r\n```\r\n\r\nYou can also specify if you want to exclude automatically generated or manually created subtitles:\r\n\r\n```  \r\nyoutube_transcript_api <first_video_id> <second_video_id> ... --languages de en --exclude-generated\r\nyoutube_transcript_api <first_video_id> <second_video_id> ... --languages de en --exclude-manually-created\r\n```\r\n\r\nIf you would prefer to write it into a file or pipe it into another application, you can also output the results as json using the following line:  \r\n\r\n```  \r\nyoutube_transcript_api <first_video_id> <second_video_id> ... --languages de en --format json > transcripts.json\r\n```  \r\n\r\nTranslating transcripts using the CLI is also possible:\r\n\r\n```  \r\nyoutube_transcript_api <first_video_id> <second_video_id> ... --languages en --translate de\r\n```  \r\n\r\nIf you are not sure which languages are available for a given video you can call, to list all available transcripts:\r\n\r\n```  \r\nyoutube_transcript_api --list-transcripts <first_video_id>\r\n```\r\n\r\nIf a video's ID starts with a hyphen you'll have to mask the hyphen using `\\` to prevent the CLI from mistaking it for a argument name. For example to get the transcript for the video with the ID `-abc123` run:\r\n\r\n```\r\nyoutube_transcript_api \"\\-abc123\"\r\n```\r\n\r\n## Proxy  \r\n\r\nYou can specify a https proxy, which will be used during the requests to YouTube:\r\n\r\n```python  \r\nfrom youtube_transcript_api import YouTubeTranscriptApi  \r\n\r\nYouTubeTranscriptApi.get_transcript(video_id, proxies={\"https\": \"https://user:pass@domain:port\"})\r\n```  \r\n\r\nAs the `proxies` dict is passed on to the `requests.get(...)` call, it follows the [format used by the requests library](https://requests.readthedocs.io/en/latest/user/advanced/#proxies).  \r\n\r\nUsing the CLI:  \r\n\r\n```  \r\nyoutube_transcript_api <first_video_id> <second_video_id> --https-proxy https://user:pass@domain:port\r\n```\r\n\r\n## Cookies\r\n\r\nSome videos are age restricted, so this module won't be able to access those videos without some sort of authentication. To do this, you will need to have access to the desired video in a browser. Then, you will need to download that pages cookies into a text file. You can use the Chrome extension [Cookie-Editor](https://chromewebstore.google.com/detail/cookie-editor/hlkenndednhfkekhgcdicdfddnkalmdm?hl=en) and select \"Netscape\" during export, or the Firefox extension [cookies.txt](https://addons.mozilla.org/en-US/firefox/addon/cookies-txt/).\r\n\r\nOnce you have that, you can use it with the module to access age-restricted videos' captions like so.\r\n\r\n```python  \r\nfrom youtube_transcript_api import YouTubeTranscriptApi  \r\n\r\nYouTubeTranscriptApi.get_transcript(video_id, cookies='/path/to/your/cookies.txt')\r\n\r\nYouTubeTranscriptApi.get_transcripts([video_id], cookies='/path/to/your/cookies.txt')\r\n```\r\n\r\nUsing the CLI:\r\n\r\n```\r\nyoutube_transcript_api <first_video_id> <second_video_id> --cookies /path/to/your/cookies.txt\r\n```\r\n\r\n## Warning  \r\n\r\nThis code uses an undocumented part of the YouTube API, which is called by the YouTube web-client. So there is no guarantee that it won't stop working tomorrow, if they change how things work. I will however do my best to make things working again as soon as possible if that happens. So if it stops working, let me know!  \r\n\r\n## Contributing\r\n\r\nTo setup the project locally run (requires [poetry](https://python-poetry.org/docs/) to be installed):\r\n```shell\r\npoetry install --with test,dev\r\n```\r\n\r\nThere's [poe](https://github.com/nat-n/poethepoet?tab=readme-ov-file#quick-start) tasks to run tests, coverage, the linter and formatter (you'll need to pass all of those for the build to pass):\r\n```shell\r\npoe test\r\npoe coverage\r\npoe format\r\npoe lint\r\n```\r\n\r\nIf you just want to make sure that your code passes all the necessary checks to get a green build, you can simply run:\r\n```shell\r\npoe precommit\r\n```\r\n\r\n## Donations\r\n\r\nIf this project makes you happy by reducing your development time, you can make me happy by treating me to a cup of coffee, or become a [Sponsor of this project](https://github.com/sponsors/jdepoix) :)  \r\n\r\n[![Donate](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=BAENLEW8VUJ6G&source=url)\r\n"
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 38.416015625,
          "content": "# This file is automatically @generated by Poetry 1.8.3 and should not be changed by hand.\n\n[[package]]\nname = \"certifi\"\nversion = \"2024.8.30\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"certifi-2024.8.30-py3-none-any.whl\", hash = \"sha256:922820b53db7a7257ffbda3f597266d435245903d80737e34f8a45ff3e3230d8\"},\n    {file = \"certifi-2024.8.30.tar.gz\", hash = \"sha256:bec941d2aa8195e248a60b31ff9f0558284cf01a52591ceda73ea9afffd69fd9\"},\n]\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"3.4.0\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\noptional = false\npython-versions = \">=3.7.0\"\nfiles = [\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:4f9fc98dad6c2eaa32fc3af1417d95b5e3d08aff968df0cd320066def971f9a6\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0de7b687289d3c1b3e8660d0741874abe7888100efe14bd0f9fd7141bcbda92b\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:5ed2e36c3e9b4f21dd9422f6893dec0abf2cca553af509b10cd630f878d3eb99\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:40d3ff7fc90b98c637bda91c89d51264a3dcf210cade3a2c6f838c7268d7a4ca\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1110e22af8ca26b90bd6364fe4c763329b0ebf1ee213ba32b68c73de5752323d\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:86f4e8cca779080f66ff4f191a685ced73d2f72d50216f7112185dc02b90b9b7\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7f683ddc7eedd742e2889d2bfb96d69573fde1d92fcb811979cdb7165bb9c7d3\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:27623ba66c183eca01bf9ff833875b459cad267aeeb044477fedac35e19ba907\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f606a1881d2663630ea5b8ce2efe2111740df4b687bd78b34a8131baa007f79b\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:0b309d1747110feb25d7ed6b01afdec269c647d382c857ef4663bbe6ad95a912\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:136815f06a3ae311fae551c3df1f998a1ebd01ddd424aa5603a4336997629e95\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:14215b71a762336254351b00ec720a8e85cada43b987da5a042e4ce3e82bd68e\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:79983512b108e4a164b9c8d34de3992f76d48cadc9554c9e60b43f308988aabe\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-win32.whl\", hash = \"sha256:c94057af19bc953643a33581844649a7fdab902624d2eb739738a30e2b3e60fc\"},\n    {file = \"charset_normalizer-3.4.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:55f56e2ebd4e3bc50442fbc0888c9d8c94e4e06a933804e2af3e89e2f9c1c749\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:0d99dd8ff461990f12d6e42c7347fd9ab2532fb70e9621ba520f9e8637161d7c\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:c57516e58fd17d03ebe67e181a4e4e2ccab1168f8c2976c6a334d4f819fe5944\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6dba5d19c4dfab08e58d5b36304b3f92f3bd5d42c1a3fa37b5ba5cdf6dfcbcee\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf4475b82be41b07cc5e5ff94810e6a01f276e37c2d55571e3fe175e467a1a1c\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ce031db0408e487fd2775d745ce30a7cd2923667cf3b69d48d219f1d8f5ddeb6\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8ff4e7cdfdb1ab5698e675ca622e72d58a6fa2a8aa58195de0c0061288e6e3ea\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3710a9751938947e6327ea9f3ea6332a09bf0ba0c09cae9cb1f250bd1f1549bc\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:82357d85de703176b5587dbe6ade8ff67f9f69a41c0733cf2425378b49954de5\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:47334db71978b23ebcf3c0f9f5ee98b8d65992b65c9c4f2d34c2eaf5bcaf0594\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:8ce7fd6767a1cc5a92a639b391891bf1c268b03ec7e021c7d6d902285259685c\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f1a2f519ae173b5b6a2c9d5fa3116ce16e48b3462c8b96dfdded11055e3d6365\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:63bc5c4ae26e4bc6be6469943b8253c0fd4e4186c43ad46e713ea61a0ba49129\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:bcb4f8ea87d03bc51ad04add8ceaf9b0f085ac045ab4d74e73bbc2dc033f0236\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-win32.whl\", hash = \"sha256:9ae4ef0b3f6b41bad6366fb0ea4fc1d7ed051528e113a60fa2a65a9abb5b1d99\"},\n    {file = \"charset_normalizer-3.4.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:cee4373f4d3ad28f1ab6290684d8e2ebdb9e7a1b74fdc39e4c211995f77bec27\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:0713f3adb9d03d49d365b70b84775d0a0d18e4ab08d12bc46baa6132ba78aaf6\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:de7376c29d95d6719048c194a9cf1a1b0393fbe8488a22008610b0361d834ecf\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:4a51b48f42d9358460b78725283f04bddaf44a9358197b889657deba38f329db\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b295729485b06c1a0683af02a9e42d2caa9db04a373dc38a6a58cdd1e8abddf1\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ee803480535c44e7f5ad00788526da7d85525cfefaf8acf8ab9a310000be4b03\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3d59d125ffbd6d552765510e3f31ed75ebac2c7470c7274195b9161a32350284\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8cda06946eac330cbe6598f77bb54e690b4ca93f593dee1568ad22b04f347c15\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:07afec21bbbbf8a5cc3651aa96b980afe2526e7f048fdfb7f1014d84acc8b6d8\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6b40e8d38afe634559e398cc32b1472f376a4099c75fe6299ae607e404c033b2\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:b8dcd239c743aa2f9c22ce674a145e0a25cb1566c495928440a181ca1ccf6719\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:84450ba661fb96e9fd67629b93d2941c871ca86fc38d835d19d4225ff946a631\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:44aeb140295a2f0659e113b31cfe92c9061622cadbc9e2a2f7b8ef6b1e29ef4b\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:1db4e7fefefd0f548d73e2e2e041f9df5c59e178b4c72fbac4cc6f535cfb1565\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-win32.whl\", hash = \"sha256:5726cf76c982532c1863fb64d8c6dd0e4c90b6ece9feb06c9f202417a31f7dd7\"},\n    {file = \"charset_normalizer-3.4.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:b197e7094f232959f8f20541ead1d9862ac5ebea1d58e9849c1bf979255dfac9\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:dd4eda173a9fcccb5f2e2bd2a9f423d180194b1bf17cf59e3269899235b2a114\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e9e3c4c9e1ed40ea53acf11e2a386383c3304212c965773704e4603d589343ed\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:92a7e36b000bf022ef3dbb9c46bfe2d52c047d5e3f3343f43204263c5addc250\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54b6a92d009cbe2fb11054ba694bc9e284dad30a26757b1e372a1fdddaf21920\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1ffd9493de4c922f2a38c2bf62b831dcec90ac673ed1ca182fe11b4d8e9f2a64\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:35c404d74c2926d0287fbd63ed5d27eb911eb9e4a3bb2c6d294f3cfd4a9e0c23\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4796efc4faf6b53a18e3d46343535caed491776a22af773f366534056c4e1fbc\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e7fdd52961feb4c96507aa649550ec2a0d527c086d284749b2f582f2d40a2e0d\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:92db3c28b5b2a273346bebb24857fda45601aef6ae1c011c0a997106581e8a88\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:ab973df98fc99ab39080bfb0eb3a925181454d7c3ac8a1e695fddfae696d9e90\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4b67fdab07fdd3c10bb21edab3cbfe8cf5696f453afce75d815d9d7223fbe88b\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:aa41e526a5d4a9dfcfbab0716c7e8a1b215abd3f3df5a45cf18a12721d31cb5d\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:ffc519621dce0c767e96b9c53f09c5d215578e10b02c285809f76509a3931482\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-win32.whl\", hash = \"sha256:f19c1585933c82098c2a520f8ec1227f20e339e33aca8fa6f956f6691b784e67\"},\n    {file = \"charset_normalizer-3.4.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:707b82d19e65c9bd28b81dde95249b07bf9f5b90ebe1ef17d9b57473f8a64b7b\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:dbe03226baf438ac4fda9e2d0715022fd579cb641c4cf639fa40d53b2fe6f3e2\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dd9a8bd8900e65504a305bf8ae6fa9fbc66de94178c420791d0293702fce2df7\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b8831399554b92b72af5932cdbbd4ddc55c55f631bb13ff8fe4e6536a06c5c51\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a14969b8691f7998e74663b77b4c36c0337cb1df552da83d5c9004a93afdb574\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dcaf7c1524c0542ee2fc82cc8ec337f7a9f7edee2532421ab200d2b920fc97cf\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:425c5f215d0eecee9a56cdb703203dda90423247421bf0d67125add85d0c4455\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:d5b054862739d276e09928de37c79ddeec42a6e1bfc55863be96a36ba22926f6\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:f3e73a4255342d4eb26ef6df01e3962e73aa29baa3124a8e824c5d3364a65748\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:2f6c34da58ea9c1a9515621f4d9ac379871a8f21168ba1b5e09d74250de5ad62\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:f09cb5a7bbe1ecae6e87901a2eb23e0256bb524a79ccc53eb0b7629fbe7677c4\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:0099d79bdfcf5c1f0c2c72f91516702ebf8b0b8ddd8905f97a8aecf49712c621\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-win32.whl\", hash = \"sha256:9c98230f5042f4945f957d006edccc2af1e03ed5e37ce7c373f00a5a4daa6149\"},\n    {file = \"charset_normalizer-3.4.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:62f60aebecfc7f4b82e3f639a7d1433a20ec32824db2199a11ad4f5e146ef5ee\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:af73657b7a68211996527dbfeffbb0864e043d270580c5aef06dc4b659a4b578\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:cab5d0b79d987c67f3b9e9c53f54a61360422a5a0bc075f43cab5621d530c3b6\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:9289fd5dddcf57bab41d044f1756550f9e7cf0c8e373b8cdf0ce8773dc4bd417\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6b493a043635eb376e50eedf7818f2f322eabbaa974e948bd8bdd29eb7ef2a51\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9fa2566ca27d67c86569e8c85297aaf413ffab85a8960500f12ea34ff98e4c41\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a8e538f46104c815be19c975572d74afb53f29650ea2025bbfaef359d2de2f7f\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6fd30dc99682dc2c603c2b315bded2799019cea829f8bf57dc6b61efde6611c8\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2006769bd1640bdf4d5641c69a3d63b71b81445473cac5ded39740a226fa88ab\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:dc15e99b2d8a656f8e666854404f1ba54765871104e50c8e9813af8a7db07f12\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:ab2e5bef076f5a235c3774b4f4028a680432cded7cad37bba0fd90d64b187d19\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4ec9dd88a5b71abfc74e9df5ebe7921c35cbb3b641181a531ca65cdb5e8e4dea\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:43193c5cda5d612f247172016c4bb71251c784d7a4d9314677186a838ad34858\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:aa693779a8b50cd97570e5a0f343538a8dbd3e496fa5dcb87e29406ad0299654\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-win32.whl\", hash = \"sha256:7706f5850360ac01d80c89bcef1640683cc12ed87f42579dab6c5d3ed6888613\"},\n    {file = \"charset_normalizer-3.4.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:c3e446d253bd88f6377260d07c895816ebf33ffffd56c1c792b13bff9c3e1ade\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:980b4f289d1d90ca5efcf07958d3eb38ed9c0b7676bf2831a54d4f66f9c27dfa\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:f28f891ccd15c514a0981f3b9db9aa23d62fe1a99997512b0491d2ed323d229a\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8aacce6e2e1edcb6ac625fb0f8c3a9570ccc7bfba1f63419b3769ccf6a00ed0\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bd7af3717683bea4c87acd8c0d3d5b44d56120b26fd3f8a692bdd2d5260c620a\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5ff2ed8194587faf56555927b3aa10e6fb69d931e33953943bc4f837dfee2242\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e91f541a85298cf35433bf66f3fab2a4a2cff05c127eeca4af174f6d497f0d4b\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:309a7de0a0ff3040acaebb35ec45d18db4b28232f21998851cfa709eeff49d62\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:285e96d9d53422efc0d7a17c60e59f37fbf3dfa942073f666db4ac71e8d726d0\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:5d447056e2ca60382d460a604b6302d8db69476fd2015c81e7c35417cfabe4cd\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:20587d20f557fe189b7947d8e7ec5afa110ccf72a3128d61a2a387c3313f46be\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:130272c698667a982a5d0e626851ceff662565379baf0ff2cc58067b81d4f11d\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:ab22fbd9765e6954bc0bcff24c25ff71dcbfdb185fcdaca49e81bac68fe724d3\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7782afc9b6b42200f7362858f9e73b1f8316afb276d316336c0ec3bd73312742\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-win32.whl\", hash = \"sha256:2de62e8801ddfff069cd5c504ce3bc9672b23266597d4e4f50eda28846c322f2\"},\n    {file = \"charset_normalizer-3.4.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:95c3c157765b031331dd4db3c775e58deaee050a3042fcad72cbc4189d7c8dca\"},\n    {file = \"charset_normalizer-3.4.0-py3-none-any.whl\", hash = \"sha256:fe9f97feb71aa9896b81973a7bbada8c49501dc73e58a10fcef6663af95e5079\"},\n    {file = \"charset_normalizer-3.4.0.tar.gz\", hash = \"sha256:223217c3d4f82c3ac5e29032b3f1c2eb0fb591b72161f86d93f5719079dae93e\"},\n]\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\n\n[[package]]\nname = \"coverage\"\nversion = \"7.6.1\"\ndescription = \"Code coverage measurement for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"coverage-7.6.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b06079abebbc0e89e6163b8e8f0e16270124c154dc6e4a47b413dd538859af16\"},\n    {file = \"coverage-7.6.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:cf4b19715bccd7ee27b6b120e7e9dd56037b9c0681dcc1adc9ba9db3d417fa36\"},\n    {file = \"coverage-7.6.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e61c0abb4c85b095a784ef23fdd4aede7a2628478e7baba7c5e3deba61070a02\"},\n    {file = \"coverage-7.6.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:fd21f6ae3f08b41004dfb433fa895d858f3f5979e7762d052b12aef444e29afc\"},\n    {file = \"coverage-7.6.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8f59d57baca39b32db42b83b2a7ba6f47ad9c394ec2076b084c3f029b7afca23\"},\n    {file = \"coverage-7.6.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:a1ac0ae2b8bd743b88ed0502544847c3053d7171a3cff9228af618a068ed9c34\"},\n    {file = \"coverage-7.6.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:e6a08c0be454c3b3beb105c0596ebdc2371fab6bb90c0c0297f4e58fd7e1012c\"},\n    {file = \"coverage-7.6.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:f5796e664fe802da4f57a168c85359a8fbf3eab5e55cd4e4569fbacecc903959\"},\n    {file = \"coverage-7.6.1-cp310-cp310-win32.whl\", hash = \"sha256:7bb65125fcbef8d989fa1dd0e8a060999497629ca5b0efbca209588a73356232\"},\n    {file = \"coverage-7.6.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:3115a95daa9bdba70aea750db7b96b37259a81a709223c8448fa97727d546fe0\"},\n    {file = \"coverage-7.6.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:7dea0889685db8550f839fa202744652e87c60015029ce3f60e006f8c4462c93\"},\n    {file = \"coverage-7.6.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:ed37bd3c3b063412f7620464a9ac1314d33100329f39799255fb8d3027da50d3\"},\n    {file = \"coverage-7.6.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d85f5e9a5f8b73e2350097c3756ef7e785f55bd71205defa0bfdaf96c31616ff\"},\n    {file = \"coverage-7.6.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9bc572be474cafb617672c43fe989d6e48d3c83af02ce8de73fff1c6bb3c198d\"},\n    {file = \"coverage-7.6.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0c0420b573964c760df9e9e86d1a9a622d0d27f417e1a949a8a66dd7bcee7bc6\"},\n    {file = \"coverage-7.6.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:1f4aa8219db826ce6be7099d559f8ec311549bfc4046f7f9fe9b5cea5c581c56\"},\n    {file = \"coverage-7.6.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:fc5a77d0c516700ebad189b587de289a20a78324bc54baee03dd486f0855d234\"},\n    {file = \"coverage-7.6.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:b48f312cca9621272ae49008c7f613337c53fadca647d6384cc129d2996d1133\"},\n    {file = \"coverage-7.6.1-cp311-cp311-win32.whl\", hash = \"sha256:1125ca0e5fd475cbbba3bb67ae20bd2c23a98fac4e32412883f9bcbaa81c314c\"},\n    {file = \"coverage-7.6.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:8ae539519c4c040c5ffd0632784e21b2f03fc1340752af711f33e5be83a9d6c6\"},\n    {file = \"coverage-7.6.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:95cae0efeb032af8458fc27d191f85d1717b1d4e49f7cb226cf526ff28179778\"},\n    {file = \"coverage-7.6.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:5621a9175cf9d0b0c84c2ef2b12e9f5f5071357c4d2ea6ca1cf01814f45d2391\"},\n    {file = \"coverage-7.6.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:260933720fdcd75340e7dbe9060655aff3af1f0c5d20f46b57f262ab6c86a5e8\"},\n    {file = \"coverage-7.6.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:07e2ca0ad381b91350c0ed49d52699b625aab2b44b65e1b4e02fa9df0e92ad2d\"},\n    {file = \"coverage-7.6.1-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c44fee9975f04b33331cb8eb272827111efc8930cfd582e0320613263ca849ca\"},\n    {file = \"coverage-7.6.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:877abb17e6339d96bf08e7a622d05095e72b71f8afd8a9fefc82cf30ed944163\"},\n    {file = \"coverage-7.6.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:3e0cadcf6733c09154b461f1ca72d5416635e5e4ec4e536192180d34ec160f8a\"},\n    {file = \"coverage-7.6.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:c3c02d12f837d9683e5ab2f3d9844dc57655b92c74e286c262e0fc54213c216d\"},\n    {file = \"coverage-7.6.1-cp312-cp312-win32.whl\", hash = \"sha256:e05882b70b87a18d937ca6768ff33cc3f72847cbc4de4491c8e73880766718e5\"},\n    {file = \"coverage-7.6.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:b5d7b556859dd85f3a541db6a4e0167b86e7273e1cdc973e5b175166bb634fdb\"},\n    {file = \"coverage-7.6.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:a4acd025ecc06185ba2b801f2de85546e0b8ac787cf9d3b06e7e2a69f925b106\"},\n    {file = \"coverage-7.6.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:a6d3adcf24b624a7b778533480e32434a39ad8fa30c315208f6d3e5542aeb6e9\"},\n    {file = \"coverage-7.6.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d0c212c49b6c10e6951362f7c6df3329f04c2b1c28499563d4035d964ab8e08c\"},\n    {file = \"coverage-7.6.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6e81d7a3e58882450ec4186ca59a3f20a5d4440f25b1cff6f0902ad890e6748a\"},\n    {file = \"coverage-7.6.1-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:78b260de9790fd81e69401c2dc8b17da47c8038176a79092a89cb2b7d945d060\"},\n    {file = \"coverage-7.6.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:a78d169acd38300060b28d600344a803628c3fd585c912cacc9ea8790fe96862\"},\n    {file = \"coverage-7.6.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2c09f4ce52cb99dd7505cd0fc8e0e37c77b87f46bc9c1eb03fe3bc9991085388\"},\n    {file = \"coverage-7.6.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:6878ef48d4227aace338d88c48738a4258213cd7b74fd9a3d4d7582bb1d8a155\"},\n    {file = \"coverage-7.6.1-cp313-cp313-win32.whl\", hash = \"sha256:44df346d5215a8c0e360307d46ffaabe0f5d3502c8a1cefd700b34baf31d411a\"},\n    {file = \"coverage-7.6.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:8284cf8c0dd272a247bc154eb6c95548722dce90d098c17a883ed36e67cdb129\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:d3296782ca4eab572a1a4eca686d8bfb00226300dcefdf43faa25b5242ab8a3e\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:502753043567491d3ff6d08629270127e0c31d4184c4c8d98f92c26f65019962\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6a89ecca80709d4076b95f89f308544ec8f7b4727e8a547913a35f16717856cb\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a318d68e92e80af8b00fa99609796fdbcdfef3629c77c6283566c6f02c6d6704\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:13b0a73a0896988f053e4fbb7de6d93388e6dd292b0d87ee51d106f2c11b465b\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:4421712dbfc5562150f7554f13dde997a2e932a6b5f352edcce948a815efee6f\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:166811d20dfea725e2e4baa71fffd6c968a958577848d2131f39b60043400223\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:225667980479a17db1048cb2bf8bfb39b8e5be8f164b8f6628b64f78a72cf9d3\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-win32.whl\", hash = \"sha256:170d444ab405852903b7d04ea9ae9b98f98ab6d7e63e1115e82620807519797f\"},\n    {file = \"coverage-7.6.1-cp313-cp313t-win_amd64.whl\", hash = \"sha256:b9f222de8cded79c49bf184bdbc06630d4c58eec9459b939b4a690c82ed05657\"},\n    {file = \"coverage-7.6.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:6db04803b6c7291985a761004e9060b2bca08da6d04f26a7f2294b8623a0c1a0\"},\n    {file = \"coverage-7.6.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:f1adfc8ac319e1a348af294106bc6a8458a0f1633cc62a1446aebc30c5fa186a\"},\n    {file = \"coverage-7.6.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a95324a9de9650a729239daea117df21f4b9868ce32e63f8b650ebe6cef5595b\"},\n    {file = \"coverage-7.6.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b43c03669dc4618ec25270b06ecd3ee4fa94c7f9b3c14bae6571ca00ef98b0d3\"},\n    {file = \"coverage-7.6.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8929543a7192c13d177b770008bc4e8119f2e1f881d563fc6b6305d2d0ebe9de\"},\n    {file = \"coverage-7.6.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:a09ece4a69cf399510c8ab25e0950d9cf2b42f7b3cb0374f95d2e2ff594478a6\"},\n    {file = \"coverage-7.6.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:9054a0754de38d9dbd01a46621636689124d666bad1936d76c0341f7d71bf569\"},\n    {file = \"coverage-7.6.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:0dbde0f4aa9a16fa4d754356a8f2e36296ff4d83994b2c9d8398aa32f222f989\"},\n    {file = \"coverage-7.6.1-cp38-cp38-win32.whl\", hash = \"sha256:da511e6ad4f7323ee5702e6633085fb76c2f893aaf8ce4c51a0ba4fc07580ea7\"},\n    {file = \"coverage-7.6.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:3f1156e3e8f2872197af3840d8ad307a9dd18e615dc64d9ee41696f287c57ad8\"},\n    {file = \"coverage-7.6.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:abd5fd0db5f4dc9289408aaf34908072f805ff7792632250dcb36dc591d24255\"},\n    {file = \"coverage-7.6.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:547f45fa1a93154bd82050a7f3cddbc1a7a4dd2a9bf5cb7d06f4ae29fe94eaf8\"},\n    {file = \"coverage-7.6.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:645786266c8f18a931b65bfcefdbf6952dd0dea98feee39bd188607a9d307ed2\"},\n    {file = \"coverage-7.6.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9e0b2df163b8ed01d515807af24f63de04bebcecbd6c3bfeff88385789fdf75a\"},\n    {file = \"coverage-7.6.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:609b06f178fe8e9f89ef676532760ec0b4deea15e9969bf754b37f7c40326dbc\"},\n    {file = \"coverage-7.6.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:702855feff378050ae4f741045e19a32d57d19f3e0676d589df0575008ea5004\"},\n    {file = \"coverage-7.6.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:2bdb062ea438f22d99cba0d7829c2ef0af1d768d1e4a4f528087224c90b132cb\"},\n    {file = \"coverage-7.6.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:9c56863d44bd1c4fe2abb8a4d6f5371d197f1ac0ebdee542f07f35895fc07f36\"},\n    {file = \"coverage-7.6.1-cp39-cp39-win32.whl\", hash = \"sha256:6e2cd258d7d927d09493c8df1ce9174ad01b381d4729a9d8d4e38670ca24774c\"},\n    {file = \"coverage-7.6.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:06a737c882bd26d0d6ee7269b20b12f14a8704807a01056c80bb881a4b2ce6ca\"},\n    {file = \"coverage-7.6.1-pp38.pp39.pp310-none-any.whl\", hash = \"sha256:e9a6e0eb86070e8ccaedfbd9d38fec54864f3125ab95419970575b42af7541df\"},\n    {file = \"coverage-7.6.1.tar.gz\", hash = \"sha256:953510dfb7b12ab69d20135a0662397f077c59b1e6379a768e97c59d852ee51d\"},\n]\n\n[package.extras]\ntoml = [\"tomli\"]\n\n[[package]]\nname = \"defusedxml\"\nversion = \"0.7.1\"\ndescription = \"XML bomb protection for Python stdlib modules\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"defusedxml-0.7.1-py2.py3-none-any.whl\", hash = \"sha256:a352e7e428770286cc899e2542b6cdaedb2b4953ff269a210103ec58f6198a61\"},\n    {file = \"defusedxml-0.7.1.tar.gz\", hash = \"sha256:1bb3032db185915b62d7c6209c5a8792be6a32ab2fedacc84e01b52c51aa3e69\"},\n]\n\n[[package]]\nname = \"exceptiongroup\"\nversion = \"1.2.2\"\ndescription = \"Backport of PEP 654 (exception groups)\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"exceptiongroup-1.2.2-py3-none-any.whl\", hash = \"sha256:3111b9d131c238bec2f8f516e123e14ba243563fb135d3fe885990585aa7795b\"},\n    {file = \"exceptiongroup-1.2.2.tar.gz\", hash = \"sha256:47c2edf7c6738fafb49fd34290706d1a1a2f4d1c6df275526b62cbb4aa5393cc\"},\n]\n\n[package.extras]\ntest = [\"pytest (>=6)\"]\n\n[[package]]\nname = \"httpretty\"\nversion = \"1.1.4\"\ndescription = \"HTTP client mock for Python\"\noptional = false\npython-versions = \">=3\"\nfiles = [\n    {file = \"httpretty-1.1.4.tar.gz\", hash = \"sha256:20de0e5dd5a18292d36d928cc3d6e52f8b2ac73daec40d41eb62dee154933b68\"},\n]\n\n[[package]]\nname = \"idna\"\nversion = \"3.10\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\"},\n    {file = \"idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\"},\n]\n\n[package.extras]\nall = [\"flake8 (>=7.1.1)\", \"mypy (>=1.11.2)\", \"pytest (>=8.3.2)\", \"ruff (>=0.6.2)\"]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"2.0.0\"\ndescription = \"brain-dead simple config-ini parsing\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"iniconfig-2.0.0-py3-none-any.whl\", hash = \"sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374\"},\n    {file = \"iniconfig-2.0.0.tar.gz\", hash = \"sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3\"},\n]\n\n[[package]]\nname = \"mock\"\nversion = \"5.1.0\"\ndescription = \"Rolling backport of unittest.mock for all Pythons\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"mock-5.1.0-py3-none-any.whl\", hash = \"sha256:18c694e5ae8a208cdb3d2c20a993ca1a7b0efa258c247a1e565150f477f83744\"},\n    {file = \"mock-5.1.0.tar.gz\", hash = \"sha256:5e96aad5ccda4718e0a229ed94b2024df75cc2d55575ba5762d31f5767b8767d\"},\n]\n\n[package.extras]\nbuild = [\"blurb\", \"twine\", \"wheel\"]\ndocs = [\"sphinx\"]\ntest = [\"pytest\", \"pytest-cov\"]\n\n[[package]]\nname = \"packaging\"\nversion = \"24.2\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"packaging-24.2-py3-none-any.whl\", hash = \"sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759\"},\n    {file = \"packaging-24.2.tar.gz\", hash = \"sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\"},\n]\n\n[[package]]\nname = \"pluggy\"\nversion = \"1.5.0\"\ndescription = \"plugin and hook calling mechanisms for python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pluggy-1.5.0-py3-none-any.whl\", hash = \"sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\"},\n    {file = \"pluggy-1.5.0.tar.gz\", hash = \"sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1\"},\n]\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\ntesting = [\"pytest\", \"pytest-benchmark\"]\n\n[[package]]\nname = \"pytest\"\nversion = \"8.3.3\"\ndescription = \"pytest: simple powerful testing with Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pytest-8.3.3-py3-none-any.whl\", hash = \"sha256:a6853c7375b2663155079443d2e45de913a911a11d669df02a50814944db57b2\"},\n    {file = \"pytest-8.3.3.tar.gz\", hash = \"sha256:70b98107bd648308a7952b06e6ca9a50bc660be218d53c257cc1fc94fda10181\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nexceptiongroup = {version = \">=1.0.0rc8\", markers = \"python_version < \\\"3.11\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=1.5,<2\"\ntomli = {version = \">=1\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndev = [\"argcomplete\", \"attrs (>=19.2)\", \"hypothesis (>=3.56)\", \"mock\", \"pygments (>=2.7.2)\", \"requests\", \"setuptools\", \"xmlschema\"]\n\n[[package]]\nname = \"requests\"\nversion = \"2.32.3\"\ndescription = \"Python HTTP for Humans.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"requests-2.32.3-py3-none-any.whl\", hash = \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"},\n    {file = \"requests-2.32.3.tar.gz\", hash = \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\"},\n]\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset-normalizer = \">=2,<4\"\nidna = \">=2.5,<4\"\nurllib3 = \">=1.21.1,<3\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\"]\nuse-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]\n\n[[package]]\nname = \"ruff\"\nversion = \"0.6.9\"\ndescription = \"An extremely fast Python linter and code formatter, written in Rust.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"ruff-0.6.9-py3-none-linux_armv6l.whl\", hash = \"sha256:064df58d84ccc0ac0fcd63bc3090b251d90e2a372558c0f057c3f75ed73e1ccd\"},\n    {file = \"ruff-0.6.9-py3-none-macosx_10_12_x86_64.whl\", hash = \"sha256:140d4b5c9f5fc7a7b074908a78ab8d384dd7f6510402267bc76c37195c02a7ec\"},\n    {file = \"ruff-0.6.9-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:53fd8ca5e82bdee8da7f506d7b03a261f24cd43d090ea9db9a1dc59d9313914c\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:645d7d8761f915e48a00d4ecc3686969761df69fb561dd914a773c1a8266e14e\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:eae02b700763e3847595b9d2891488989cac00214da7f845f4bcf2989007d577\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7d5ccc9e58112441de8ad4b29dcb7a86dc25c5f770e3c06a9d57e0e5eba48829\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl\", hash = \"sha256:417b81aa1c9b60b2f8edc463c58363075412866ae4e2b9ab0f690dc1e87ac1b5\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3c866b631f5fbce896a74a6e4383407ba7507b815ccc52bcedabb6810fdb3ef7\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7b118afbb3202f5911486ad52da86d1d52305b59e7ef2031cea3425142b97d6f\"},\n    {file = \"ruff-0.6.9-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a67267654edc23c97335586774790cde402fb6bbdb3c2314f1fc087dee320bfa\"},\n    {file = \"ruff-0.6.9-py3-none-musllinux_1_2_aarch64.whl\", hash = \"sha256:3ef0cc774b00fec123f635ce5c547dac263f6ee9fb9cc83437c5904183b55ceb\"},\n    {file = \"ruff-0.6.9-py3-none-musllinux_1_2_armv7l.whl\", hash = \"sha256:12edd2af0c60fa61ff31cefb90aef4288ac4d372b4962c2864aeea3a1a2460c0\"},\n    {file = \"ruff-0.6.9-py3-none-musllinux_1_2_i686.whl\", hash = \"sha256:55bb01caeaf3a60b2b2bba07308a02fca6ab56233302406ed5245180a05c5625\"},\n    {file = \"ruff-0.6.9-py3-none-musllinux_1_2_x86_64.whl\", hash = \"sha256:925d26471fa24b0ce5a6cdfab1bb526fb4159952385f386bdcc643813d472039\"},\n    {file = \"ruff-0.6.9-py3-none-win32.whl\", hash = \"sha256:eb61ec9bdb2506cffd492e05ac40e5bc6284873aceb605503d8494180d6fc84d\"},\n    {file = \"ruff-0.6.9-py3-none-win_amd64.whl\", hash = \"sha256:785d31851c1ae91f45b3d8fe23b8ae4b5170089021fbb42402d811135f0b7117\"},\n    {file = \"ruff-0.6.9-py3-none-win_arm64.whl\", hash = \"sha256:a9641e31476d601f83cd602608739a0840e348bda93fec9f1ee816f8b6798b93\"},\n    {file = \"ruff-0.6.9.tar.gz\", hash = \"sha256:b076ef717a8e5bc819514ee1d602bbdca5b4420ae13a9cf61a0c0a4f53a2baa2\"},\n]\n\n[[package]]\nname = \"tomli\"\nversion = \"2.1.0\"\ndescription = \"A lil' TOML parser\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"tomli-2.1.0-py3-none-any.whl\", hash = \"sha256:a5c57c3d1c56f5ccdf89f6523458f60ef716e210fc47c4cfb188c5ba473e0391\"},\n    {file = \"tomli-2.1.0.tar.gz\", hash = \"sha256:3f646cae2aec94e17d04973e4249548320197cfabdf130015d023de4b74d8ab8\"},\n]\n\n[[package]]\nname = \"urllib3\"\nversion = \"2.2.3\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"urllib3-2.2.3-py3-none-any.whl\", hash = \"sha256:ca899ca043dcb1bafa3e262d73aa25c465bfb49e0bd9dd5d59f1d0acba2f8fac\"},\n    {file = \"urllib3-2.2.3.tar.gz\", hash = \"sha256:e7d814a81dad81e6caf2ec9fdedb284ecc9c73076b62654547cc64ccdcae26e9\"},\n]\n\n[package.extras]\nbrotli = [\"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\"]\nh2 = [\"h2 (>=4,<5)\"]\nsocks = [\"pysocks (>=1.5.6,!=1.5.7,<2.0)\"]\nzstd = [\"zstandard (>=0.18.0)\"]\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \">=3.8,<3.14\"\ncontent-hash = \"9688fe60ffcd776c6ed6da0a9cedf875f97aefcd72fdc817495978b68afc381b\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.642578125,
          "content": "[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.poetry]\nname = \"youtube-transcript-api\"\nversion = \"0.6.3\"\ndescription = \"This is an python API which allows you to get the transcripts/subtitles for a given YouTube video. It also works for automatically generated subtitles, supports translating subtitles and it does not require a headless browser, like other selenium based solutions do!\"\nreadme = \"README.md\"\nlicense = \"MIT\"\nauthors = [\n    \"Jonas Depoix <jonas.depoix@web.de>\",\n]\nhomepage = \"https://github.com/jdepoix/youtube-transcript-api\"\nrepository = \"https://github.com/jdepoix/youtube-transcript-api\"\nkeywords = [\n    \"cli\",\n    \"subtitle\",\n    \"subtitles\",\n    \"transcript\",\n    \"transcripts\",\n    \"youtube\",\n    \"youtube-api\",\n    \"youtube-subtitles\",\n    \"youtube-transcripts\",\n]\nclassifiers = [\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n]\n\n[tool.poetry.scripts]\nyoutube_transcript_api = \"youtube_transcript_api.__main__:main\"\n\n[tool.poe.tasks]\ntest = \"pytest youtube_transcript_api\"\nci-test.shell = \"coverage run -m unittest discover && coverage xml\"\ncoverage.shell = \"coverage run -m unittest discover && coverage report -m --fail-under=100\"\nformat = \"ruff format youtube_transcript_api\"\nci-format = \"ruff format youtube_transcript_api --check\"\nlint = \"ruff check youtube_transcript_api\"\nprecommit.shell = \"poe format && poe lint && poe coverage\"\n\n[tool.poetry.dependencies]\npython = \">=3.8,<3.14\"\nrequests = \"*\"\ndefusedxml = \"^0.7.1\"\n\n[tool.poetry.group.test]\noptional = true\n\n[tool.poetry.group.test.dependencies]\npytest = \"^8.3.3\"\ncoverage = \"^7.6.1\"\nmock = \"^5.1.0\"\nhttpretty = \"^1.1.4\"\n\n[tool.poetry.group.dev]\noptional = true\n\n[tool.poetry.group.dev.dependencies]\nruff = \"^0.6.8\"\n\n[tool.coverage.run]\nsource = [\"youtube_transcript_api\"]\n\n[tool.coverage.report]\nomit = [\"*/__main__.py\", \"youtube_transcript_api/test/*\"]\nexclude_lines = [\n    \"pragma: no cover\",\n\n    # Don't complain about missing debug-only code:\n    \"def __unicode__\",\n    \"def __repr__\",\n    \"if self\\\\.debug\",\n\n    # Don't complain if tests don't hit defensive assertion code:\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n\n    # Don't complain if non-runnable code isn't run:\n    \"if 0:\",\n    \"if __name__ == .__main__.:\",\n\n    # Don't complain about empty stubs of abstract methods\n    \"@abstractmethod\",\n    \"@abstractclassmethod\",\n    \"@abstractstaticmethod\"\n]\nshow_missing = true"
        },
        {
          "name": "youtube_transcript_api",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}