{
  "metadata": {
    "timestamp": 1736559734812,
    "page": 434,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AonCyberLabs/Windows-Exploit-Suggester",
      "stars": 4000,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7587890625,
          "content": "DESCRIPTION\n=========== \nThis tool compares a targets patch levels against the Microsoft vulnerability\ndatabase in order to detect potential missing patches on the target. It also\nnotifies the user if there are public exploits and Metasploit modules\navailable for the missing bulletins.\n\nIt requires the 'systeminfo' command output from a Windows host in order to\ncompare that the Microsoft security bulletin database and determine the \npatch level of the host.\n\nIt has the ability to automatically download the security bulletin database\nfrom Microsoft with the --update flag, and saves it as an Excel spreadsheet.\n\nWhen looking at the command output, it is important to note that it assumes\nall vulnerabilities and then selectively removes them based upon the hotfix\ndata. This can result in many false-positives, and it is key to know what\nsoftware is actually running on the target host. For example, if there are\nknown IIS exploits it will flag them even if IIS is not running on the\ntarget host.\n\nThe output shows either public exploits (E), or Metasploit modules (M) as\nindicated by the character value. \n\nIt was heavily inspired by Linux_Exploit_Suggester by Pentura.\n\nBlog Post: \"Introducing Windows Exploit Suggester\", https://blog.gdssecurity.com/labs/2014/7/11/introducing-windows-exploit-suggester.html\n\nUSAGE\n=====\nupdate the database\n```\n$ ./windows-exploit-suggester.py --update\n[*] initiating...\n[*] successfully requested base url\n[*] scraped ms download url\n[+] writing to file 2014-06-06-mssb.xlsx\n[*] done\n```\ninstall dependencies\n\n(install python-xlrd, $ pip install xlrd --upgrade)\n\nfeed it \"systeminfo\" input, and point it to the microsoft database\n```\n$ ./windows-exploit-suggester.py --database 2014-06-06-mssb.xlsx --systeminfo win7sp1-systeminfo.txt \n[*] initiating...\n[*] database file detected as xls or xlsx based on extension\n[*] reading from the systeminfo input file\n[*] querying database file for potential vulnerabilities\n[*] comparing the 15 hotfix(es) against the 173 potential bulletins(s)\n[*] there are now 168 remaining vulns\n[+] windows version identified as 'Windows 7 SP1 32-bit'\n[*] \n[M] MS14-012: Cumulative Security Update for Internet Explorer (2925418) - Critical\n[E] MS13-101: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (2880430) - Important\n[M] MS13-090: Cumulative Security Update of ActiveX Kill Bits (2900986) - Critical\n[M] MS13-080: Cumulative Security Update for Internet Explorer (2879017) - Critical\n[M] MS13-069: Cumulative Security Update for Internet Explorer (2870699) - Critical\n[M] MS13-059: Cumulative Security Update for Internet Explorer (2862772) - Critical\n[M] MS13-055: Cumulative Security Update for Internet Explorer (2846071) - Critical\n[M] MS13-053: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2850851) - Critical\n[M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical\n[M] MS13-005: Vulnerability in Windows Kernel-Mode Driver Could Allow Elevation of Privilege (2778930) - Important\n[*] done\n```\n\npossible exploits for an operating system can be used without hotfix data\n```\n$ ./windows-exploit-suggester.py --database 2014-06-06-mssb.xlsx --ostext 'windows server 2008 r2' \n[*] initiating...\n[*] database file detected as xls or xlsx based on extension\n[*] getting OS information from command line text\n[*] querying database file for potential vulnerabilities\n[*] comparing the 0 hotfix(es) against the 196 potential bulletins(s)\n[*] there are now 196 remaining vulns\n[+] windows version identified as 'Windows 2008 R2 64-bit'\n[*] \n[M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical\n[M] MS13-005: Vulnerability in Windows Kernel-Mode Driver Could Allow Elevation of Privilege (2778930) - Important\n[E] MS11-011: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (2393802) - Important\n[M] MS10-073: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (981957) - Important\n[M] MS10-061: Vulnerability in Print Spooler Service Could Allow Remote Code Execution (2347290) - Critical\n[E] MS10-059: Vulnerabilities in the Tracing Feature for Services Could Allow Elevation of Privilege (982799) - Important\n[E] MS10-047: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (981852) - Important\n[M] MS10-002: Cumulative Security Update for Internet Explorer (978207) - Critical\n[M] MS09-072: Cumulative Security Update for Internet Explorer (976325) - Critical\n```\n\nLIMITATIONS\n===========\nCurrently, if the 'systeminfo' command reveals 'File 1' as the output for\nthe hotfixes, it will not be able to determine which are installed on\nthe target. If this occurs, the list of hotfixes will need to be \nretrieved from the target host and passed in using the --hotfixes flag\n\nIt currently does not seperate 'editions' of the Windows OS such as\n'Tablet' or 'Media Center' for example, or different architectures, such as\nItanium-based only\n\nFalse positives also occur where it assumes EVERYTHING is installed\non the target Windows operating system. If you receive the 'File 1'\noutput, try executing 'wmic qfe list full' and feed that as input\nwith the --hotfixes flag, along with the 'systeminfo'\n\nLICENSE\n=======\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n"
        },
        {
          "name": "windows-exploit-suggester.py",
          "type": "blob",
          "size": 67.5537109375,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# Windows Exploit Suggester\n# revision 3.3, 2017-02-13\n#\n# author: Sam Bertram, Gotham Digital Science\n# contact: labs@gdssecurity.com,sbertram@gdssecurity.com,sammbertram@gmail.com\n# blog post: \"Introducing Windows Exploit Suggester\", http://blog.gdssecurity.com/\n# \n# DESCRIPTION\n# \n# This tool compares a targets patch levels against the Microsoft vulnerability\n# database in order to detect potential missing patches on the target. It also\n# notifies the user if there are public exploits and Metasploit modules\n# available for the missing bulletins.\n#\n# It requires the 'systeminfo' command output from a Windows host in order to\n# compare that the Microsoft security bulletin database and determine the \n# patch level of the host.\n#\n# It has the ability to automatically download the security bulletin database\n# from Microsoft with the --update flag, and saves it as an Excel spreadsheet.\n#\n# When looking at the command output, it is important to note that it assumes\n# all vulnerabilities and then selectively removes them based upon the hotfix\n# data. This can result in many false-positives, and it is key to know what\n# software is actually running on the target host. For example, if there are\n# known IIS exploits it will flag them even if IIS is not running on the\n# target host.\n#\n# The output shows either public exploits (E), or Metasploit modules (M) as\n# indicated by the character value. \n#\n# It was heavily inspired by Linux_Exploit_Suggester by Pentura.\n#\n# Blog Post: \"Introducing Windows Exploit Suggester\", https://blog.gdssecurity.com/labs/2014/7/11/introducing-windows-exploit-suggester.html\n#\n# USAGE\n# \n# update the database\n#\n# $ ./windows-exploit-suggester.py --update\n# [*] initiating...\n# [*] successfully requested base url\n# [*] scraped ms download url\n# [+] writing to file 2014-06-06-mssb.xlsx\n# [*] done\n#\n# install dependencies\n#\n# (install python-xlrd, $ pip install xlrd --upgrade)\n#\n# feed it \"systeminfo\" input, and point it to the microsoft database\n#\n# $ ./windows-exploit-suggester.py --database 2014-06-06-mssb.xlsx --systeminfo win7sp1-systeminfo.txt \n# [*] initiating...\n# [*] database file detected as xls or xlsx based on extension\n# [*] reading from the systeminfo input file\n# [*] querying database file for potential vulnerabilities\n# [*] comparing the 15 hotfix(es) against the 173 potential bulletins(s)\n# [*] there are now 168 remaining vulns\n# [+] windows version identified as 'Windows 7 SP1 32-bit'\n# [*] \n# [M] MS14-012: Cumulative Security Update for Internet Explorer (2925418) - Critical\n# [E] MS13-101: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (2880430) - Important\n# [M] MS13-090: Cumulative Security Update of ActiveX Kill Bits (2900986) - Critical\n# [M] MS13-080: Cumulative Security Update for Internet Explorer (2879017) - Critical\n# [M] MS13-069: Cumulative Security Update for Internet Explorer (2870699) - Critical\n# [M] MS13-059: Cumulative Security Update for Internet Explorer (2862772) - Critical\n# [M] MS13-055: Cumulative Security Update for Internet Explorer (2846071) - Critical\n# [M] MS13-053: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2850851) - Critical\n# [M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical\n# [M] MS13-005: Vulnerability in Windows Kernel-Mode Driver Could Allow Elevation of Privilege (2778930) - Important\n# [*] done\n#\n# possible exploits for an operating system can be used without hotfix data\n# $ ./windows-exploit-suggester.py --database 2014-06-06-mssb.xlsx --ostext 'windows server 2008 r2' \n# [*] initiating...\n# [*] database file detected as xls or xlsx based on extension\n# [*] getting OS information from command line text\n# [*] querying database file for potential vulnerabilities\n# [*] comparing the 0 hotfix(es) against the 196 potential bulletins(s)\n# [*] there are now 196 remaining vulns\n# [+] windows version identified as 'Windows 2008 R2 64-bit'\n# [*] \n# [M] MS13-009: Cumulative Security Update for Internet Explorer (2792100) - Critical\n# [M] MS13-005: Vulnerability in Windows Kernel-Mode Driver Could Allow Elevation of Privilege (2778930) - Important\n# [E] MS11-011: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (2393802) - Important\n# [M] MS10-073: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (981957) - Important\n# [M] MS10-061: Vulnerability in Print Spooler Service Could Allow Remote Code Execution (2347290) - Critical\n# [E] MS10-059: Vulnerabilities in the Tracing Feature for Services Could Allow Elevation of Privilege (982799) - Important\n# [E] MS10-047: Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (981852) - Important\n# [M] MS10-002: Cumulative Security Update for Internet Explorer (978207) - Critical\n# [M] MS09-072: Cumulative Security Update for Internet Explorer (976325) - Critical\n#\n# TROUBLESHOOTING\n#\n# If you're receiving the following error message, update the xlrd library\n# $ pip install xlrd --update\n#\n# [*] initiating winsploit version 24...\n# [*] database file detected as xls or xlsx based on extension\n# Traceback (most recent call last):\n# \t  File \"windows-exploit-suggester/windows-exploit-suggester.py\", line 1414, in <module>\n# \t      main()\n# \t        File \"windows-exploit-suggester/windows-exploit-suggester.py\", line 354, in main\n# \t\t    wb = xlrd.open_workbook(ARGS.database)\n# \t\t      File \"/usr/lib/pymodules/python2.7/xlrd/__init__.py\", line 370, in open_workbook\n# \t\t          biff_version = bk.getbof(XL_WORKBOOK_GLOBALS)\n# \t\t\t    File \"/usr/lib/pymodules/python2.7/xlrd/__init__.py\", line 1323, in getbof\n# \t\t\t        raise XLRDError('Expected BOF record; found 0x%04x' % opcode)\n# \t\t\txlrd.biffh.XLRDError: Expected BOF record; found 0x4b50\n#\n# LIMITATIONS\n#\n# Currently, if the 'systeminfo' command reveals 'File 1' as the output for\n# the hotfixes, it will not be able to determine which are installed on\n# the target. If this occurs, the list of hotfixes will need to be \n# retrieved from the target host and passed in using the --hotfixes flag\n#\n# It currently does not seperate 'editions' of the Windows OS such as\n# 'Tablet' or 'Media Center' for example, or different architectures, such as\n# Itanium-based only\n#\n# False positives also occur where it assumes EVERYTHING is installed\n# on the target Windows operating system. If you receive the 'File 1'\n# output, try executing 'wmic qfe list full' and feed that as input\n# with the --hotfixes flag, along with the 'systeminfo'\n#\n# LICENSE\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n# TODOLIST\n#\n# TODO better if/then/case when detecting OS. more flexibility with parsing\n#     different systeminfo output\n# TODO seperate by editions? may result in false positives\n# TODO count the number of exploits in the summary prior to outputting it?\n# TODO finish -s --search function so that all info on an MS number can be\n#      returned\n# TODO add titles to exploit list so that it is more portable\n# TODO test for Windows RT systeminfo output\n# TODO improved msf/poc output? perhaps adding details on each MS number?\n# TODO if it's running on windows, then try and execute the systeminfo command?\n# TODO SPEED. this is now way too slow...  somewhat improved!\n# TODO automatically install python module? xlrd.\n# TODO manually override MS11-011 for Non-Affected Products. The bulletin\n# database is wrong.\n#  Windows 7 for 32-bit Systems Service Pack 1\n#  Windows 7 for x64-based Systems Service Pack 1\n#  Windows Server 2008 R2 for x64-based Systems Service Pack 1\n#  Windows Server 2008 R2 for Itanium-based Systems Service Pack 1\n#\n# CHANGE LOG\n# v33 2017-02-13\n# - added links to exploits and resources for each bulletins. can be ignored with the -q/--quiet flag\n# - hard coded ms11-011 to ignore false positives\n# - added additional resources\n#\n# v31 2016-02-10\n# - changed bulletin url, microsoft 404'd it\n#\t\n# v30 2016-01-04\n# - added exploits and bulletins from the past six months\n#\n# v29 2015-09-16\n# - adding support for windows 10\n#\n# v28 2015-07-30\n# - added bulletin scraping for xlsx and xls files using regex. thanks to\n#   edebernis for reporting the bug\n# - added ms15-022, ms15-015 update to msf\n#\n# v27 2015-06-18\n# - added new bulletin url that is only xls and not xlsx. thanks to bstork for\n#   reporting the bug\n# - added ms15-010, ms15-051, and ms15-052\n#\n# v26 2015-06-02\n# - small bug fix with linked output\n# - added duplicates flag that can allow for bulletins to be displayed\n#   multiple times. this will allow for greater analysis on linked bulletins\n#\n# v25 2015-05-18\n# - added ms15-051 local priv\n#\n# v24 2015-01-30\n# - added --sub/-s command in order to display output of msids as linked\n#   this aides in demonstrating what patches need to be applied precisely. \n#   this change was implemented in v23, but only followed the depth to level\n#   1 instead of the entire way.\n# - fixed a bug that know allows for multiple supercedes msids in the db\n# - allowed for getarchitecture to be recursive, and reduced redunancy when\n#   it is called throughout the program\n# - added ms14-070\n#\n# v23 2015-01-26\n# - typo in --local flag case (pontential vs potential). issue #5 closed. \n#\n# v22 2015-01-23\n# - speed optimisations! it was too slow beforehand. realised i could easily\n#   make it a bit more efficient\n# \n# v21 2015-01-22\n# - changed display formatting to include nested/linked MS numbers. makes it\n#   easier to determine the dependencies\n# - made args global\n# - changed some code formatting, including double-space instead of \\t\n# - added some additional comments\n# - disable ANSI output if on windows platform \n# - added recent exploits\n#\n# v20 2014-12-16\n# - added ms14-068,ms14-064,ms14-060, and ms14-058 to the internal vuln list\n#\n# v19 2014-10-08\n# - added support for windows server 2012, this includes ignoring the\n#   architecture for 2012, and forcing from 32-bit to 64-bit\n#\n# v18 2014-09-02\n# - added ms14-029 poc\n#\n# v17 2014-08-05\n# - fixed a bug where it would not detect OS version when a unicode char comes\n#   before search string\n#\n# v16 2014-07-28\n# - improved reading of various file encodings for systeminfo. now attempts to \n#   detect the file first, otherwise loops through common encodings\n# - improved OS, service pack, architecture, and release detection. this is now\n#   not English-dependent as it was previously\n# - better architecture detection of systeminfo input (look for -based string)\n# - added /usr/bin/env python\n# - added ms14-035 poc\n#\n# v15 2014-07-15\n# - changed file open to io, and attempt to decode as utf-8; otherwise attempt\n#   utf-16\n#\n# v14 2014-07-13\n# - allowed for --ostext flag to properly supersede OS detection of systeminfo\n#   input\n#\n# v13a 2014-07-01\n# - added new msf flags for ms13-097, and ms14-009\n#\n# v12a 2014-06-06\n# - quick cleanup for release\n#\n# v11a 2014-05-02\n# - fixed the bulletin scrape regex for the update command. ms changed it\n#\n# v10a 2014-03-24\n# - added a hotfixes argument, that can be used to supplement the list\n#  of hotfixes detected in the systeminfo input\n# - added severity at the end of the output when reporting bulletins\n# - added a 'patches' argument, that can be used to determine any\n#  of the hotfixes for a specific bulletin. this is good for debugging.\n#\n# v09a 2014-03-18\n# - again, another massive bug on the linked kb searching function\n#   getlinkedms(). should be fixed now\n# - also checks columns 11 and 12 for superseded, i think it has to\n#   do with dos and *nix output\n#\n# v08a 2014-02-14\n# - bug where the superseded column wasn't being checked\n#   this may be because it's only xlsx and it parsed differently in csv\n# - added some new exploits from edb\n#\n# v07a 2014-02-12\n# - added indicator for os version, and in green\n# - better parsing of architecture for itanium based support\n#\n# v06a 2014-01-19\n# - added 'ostext' or 'o' option, when don't have any patch information\n#   but just know the OS\n#\n# v05a\n# - added a check for \"Kernel version\" column, as well as \"OS version\"\n#\n# v04a\n# - added support for XLSX files directly with the updated XLRD library, this\n#   requires the python-xlrd library to be installed and upgraded with:\n#   $ pip install xlrd --upgrade\n# - changed MS13-101 to E, as there isn't a metasploit module (yet!)\n#\n# v03a\n# - fixed an issue where component KB wasn't being checked\n#\n# FUNCTIONS\n#\n# def main():\n# def run(database):\n# def detect_encoding(filename):\n# def trace(database):\n# def patches(database):\n# def getversion(name, release, servicepack, architecture):\n# def getname(ostext):\n# def getrelease(ostext):    \n# def getservicepack(ostext):\n# def getarchitecture(ostext):\n# def getitanium(ostext):\n# def getpatch(ostext):\n# def getbulletinids(haystack):\n# def isaffected(name, release, servicepack, architecture, haystack):\n# def getlinkedms(msids, database):\n# def getexploit(msid = 0):\n# def update():\n# def merge_list(li):\n#\nimport re\nimport platform\nimport argparse\nimport subprocess\nimport csv\nimport StringIO\nimport os\nimport datetime\nimport urllib2\nimport io\nfrom random import randint\nfrom time import sleep\nfrom tempfile import NamedTemporaryFile\nfrom sys import exit\n\n# constants/globals\nMSSB_URL = 'http://www.microsoft.com/en-gb/download/confirmation.aspx?id=36982'\nBULLETIN_URL = 'http://download.microsoft.com/download/6/7/3/673E4349-1CA5-40B9-8879-095C72D5B49D/BulletinSearch.xlsx'\nVERSION = \"3.3\"\n\n# global parser\nparser = argparse.ArgumentParser(description=\"search microsoft security bulletins for exploits based upon the patch level of the machine by feeding in systeminfo command\")\nparser.add_argument(\"-v\", \"--verbose\", help=\"verbose output\", action=\"store_true\")\nparser.add_argument(\"-i\", \"--systeminfo\", help=\"feed in an input file that contains the 'systeminfo' command\")\nparser.add_argument(\"-d\", \"--database\", help=\"the file that contains the microsoft security bulletin database\")\nparser.add_argument(\"-u\", \"--update\", help=\"required flag to even run the script\", action=\"store_true\")\nparser.add_argument(\"-a\", \"--audit\", help=\"show all entries, not only exploits\", action=\"store_true\")\nparser.add_argument(\"-t\", \"--trace\", help=\"used to determine linked ms bulletins\")\nparser.add_argument(\"-p\", \"--patches\", help=\"used to determine specific patches for a ms bulletin\")\nparser.add_argument(\"-o\", \"--ostext\", help=\"a loose text representation of the windows OS (ex: \\\"windows xp home edition sp2\\\")\")\nparser.add_argument(\"-s\", \"--sub\", help=\"generate output using linked/sub bulletins. WARNING: SLOW!\", action=\"store_true\")\nparser.add_argument(\"-2\", \"--duplicates\", help=\"allow duplicate ms bulletin output within the results. this will produce a lot of output, but is useful when determining linked ms bulletins\", action=\"store_true\")\nparser.add_argument(\"-q\", \"--quiet\", help=\"don't show exploit information. shorter output\", action=\"store_true\")\n# hotfixes\n# used to parse \"wmic qfe list full\" input, and to solve the 'File 1' errors\nparser.add_argument(\"-H\", \"--hotfixes\", help=\"a loose list of hotfixes to be added, for use with the following command: 'wmic qfe list full'\")\n\n# search by exploit type only\nexptypegroup = parser.add_mutually_exclusive_group()\nexptypegroup.add_argument(\"-r\", \"--remote\", help=\"search remote exploits only\", action=\"store_true\")\nexptypegroup.add_argument(\"-l\", \"--local\", help=\"search local exploits only\", action=\"store_true\")\n\n# global args parsed\nARGS = parser.parse_args()\n\ndef main():\n  ALERT(\"initiating winsploit version %s...\" % VERSION)\n\n  database = ''\n\n  # if there is a database switch\n  if ARGS.database:\n\n    # split name and extension\n    name, extension = os.path.splitext(ARGS.database)\n\n    # csv\n    if 'csv' in extension:\n\n      ALERT(\"database file detected as csv based on extension\", ALERT.NORMAL)\n\n      # attempt to open the file\n      try:\n        dbfile = open(ARGS.database, 'r')\n\n      except IOError, e:\n        ALERT(\"could not open the file %s\" % filename, ALERT.BAD)\n        exit(1)\n\n      data = ''\n      for line in dbfile:\n        data += line\n      database = data\n\n      dbfile.close()\n\n    # xls or xslx\n    elif 'xls' in extension:\n\n      ALERT(\"database file detected as xls or xlsx based on extension\", ALERT.NORMAL)\n\n      try:\n        import xlrd\n      except ImportError as e:\n        ALERT(\"please install and upgrade the python-xlrd library\", ALERT.BAD)\n        exit(1)\n\n      # open the xls file\n      try:\n        wb = xlrd.open_workbook(ARGS.database)\n      except IOError as e:\n        ALERT(\"no such file or directory '%s'. ensure you have the correct database file passed in --database/-d\" % ARGS.database, ALERT.BAD)\n        exit(1)\n      #sh = wb.sheet_by_name('Export Bulletin Search Spreadsh')\n      sh = wb.sheet_by_index(0)\n\n      # read the spreadsheet into a temp file\n      f = NamedTemporaryFile(mode='wb')\n      wr = csv.writer(f, quoting=csv.QUOTE_NONE, delimiter=',')\n\n      data = ''\n\n      # loop through xls\n      for rownum in xrange(sh.nrows):\n\n        values = sh.row_values(rownum)\n\n        # loop through row values, and process input\n        for i in range(len(values)):\n          values[i] = unicode(values[i]).encode('utf8')\n          values[i] = values[i].replace('\\n',' ')\n          values[i] = values[i].replace(',','')\n          values[i] = values[i].replace('.0','')\n\n        data += \",\".join(values)\n        data += '\\n'\n  \n      # set the database to the csv data\n      database = data\n\n    # unknown filetype, error\n    else:\n      ALERT(\"unknown filetype. change file extension to indicate csv or xls/xlsx\", ALERT.BAD)\n      exit(1)\n\n  if ARGS.trace: trace(database)\n  elif ARGS.systeminfo or ARGS.ostext: run(database)\n  elif ARGS.update: update()\n  elif ARGS.patches: patches(database)\n\n  # error\n  else:\n    ALERT(\"an error occured while running, not enough arguments\", ALERT.BAD)\n    exit(1)\n\n  ALERT(\"done\")\n  # end main()\n\ndef run(database):\n\n  # variables used\n  ostext=None\n  name=None\n  release=None\n  servicepack=None\n    \n  # will default to 32-bit, but can be 64 bit or itanium\n  architecture=None\n\n  hotfixes=set([])\n  bulletinids=set([])\n\n  potential=[]\n  \n  vulns={}\n  ids=set([])\n\n  cmdoutput = []\n\n  # test for database\n  if not ARGS.database:\n    ALERT(\"please supply a MSSB database file with the --database or -d flag, this can be downloaded using the --update command\", ALERT.BAD)\n    exit(1)\n\n  # read from ostext first\n  if ARGS.ostext:\n    ALERT(\"getting OS information from command line text\")\n        \n    name=getname(ARGS.ostext)\n    release=getrelease(ARGS.ostext)\n    servicepack=getservicepack(ARGS.ostext)\n    architecture=getarchitecture(ARGS.ostext)\n    \n    # the os name at least has to be identified\n    if not name:\n      ALERT(\"unable to determine the windows version command line text from '%s'\" % ARGS.ostext, ALERT.BAD)\n      exit(1)\n\n  # get the systeminfo information from the input file\n  if ARGS.systeminfo:\n\n    ALERT(\"attempting to read from the systeminfo input file\")\n\n    # when reading the systeminfo file, we want to attempt to detect it using chardet\n    # if this doesn't work, we will loop through a list of common encodings and try them all\n    encodings = ['utf-8', 'utf-16', 'utf-16-le', 'utf-16-be', 'iso-8859-2']\n\n    detected_encoding =  detect_encoding(ARGS.systeminfo)\n\n    # insert detected encoding to the front of the list\n    if detected_encoding: \n      if ARGS.verbose: ALERT(\"detected encoding of file as '%s'\" % detected_encoding)\n      encodings.insert(0, detected_encoding)\n\n    cmdfile = None\n    cmdoutput = None\n    \n    # now loop through all encodings, with the detected one first (if it was possible)\n    for encoding in encodings:\n\n      if ARGS.verbose: ALERT(\"  attempting to read with '%s' encoding\" % encoding)          \n\n      # if we can read the file, and read the command output, we are done with the loop\n      try: \n        cmdfile = io.open(ARGS.systeminfo, \"r\", encoding=encoding) # throws UnicodeDecodeError      \n        cmdoutput = cmdfile.readlines() # throws UnicodeError\n        break\n\n      except (UnicodeError, UnicodeDecodeError) as e:\n        ALERT(\"could not read file using '%s' encoding: %s\" % (encoding, e), ALERT.BAD)\n  \n      # file might not exist\n      except:\n        ALERT(\"could not read from input file specified: %s\" % ARGS.systeminfo, ALERT.BAD)\n        exit(1)  \n\n    # general catchall if somehow it was able to keep processing\n    if not cmdfile or not cmdoutput:\n      ALERT(\"could not read from input file, or could not detect encoding\", ALERT.BAD)\n      exit(1)\n    \n    # file read successfully\n    ALERT(\"systeminfo input file read successfully (%s)\" % encoding, ALERT.GOOD)\n\n  # error\n  if not ARGS.systeminfo and not ARGS.ostext and platform.system() != 'Windows':\n    ALERT(\"please run from a Windows machine, or provide an input file using --systeminfo, or use the --ostext option to get data with no patch information\", ALERT.BAD)\n    exit(1)\n\n  # parse the systeminfo information\n  hotfix=False\n\n  # loop through the systeminfo input\n  for haystack in cmdoutput:\n\n    # only attempt to set the version, arch, service pack if there is no\n    # ostext flag\n    if not ARGS.ostext:\n\n      # when detecting the operating system version, every line (independent of language)\n      # appears to have Microsoft Windows in it, sometimes with (R)\n      if \"Microsoft\" in haystack and \"Windows\" in haystack and not name:\n        name = getname(haystack)\n\n      # the windows release is similar to the above and has the text 'Microsoft Windows' in the text\n      if \"Microsoft\" in haystack and \"Windows\" in haystack and not release:\n        release = getrelease(haystack)\n\n      # similar to OS, there is the words 'Service Pack' \n      if \"Service Pack\" in haystack and not servicepack:\n        servicepack = getservicepack(haystack)\n      \n      # get architecture only if -based is in the line, and --ostext hasn't been used\n      if \"-based\" in haystack and not architecture: \n        architecture=getarchitecture(haystack)\n\n    # look for kbs\n    if (\"KB\" in haystack or \"]: \" in haystack):\n      patch=getpatch(haystack)\n      \n      # if a patch was parsed\n      if patch:\n        if ARGS.verbose: ALERT(\"found hotfix %s\" % patch)\n        hotfixes.add(patch)\n\n  # now process the hotfixes argument input\n  if ARGS.hotfixes:\n\n    encodings = ['utf-8', 'utf-16', 'utf-16-le', 'utf-16-be', 'iso-8859-2']\n\n    detected_encoding =  detect_encoding(ARGS.systeminfo)\n\n    # insert detected encoding to the front of the list\n    if detected_encoding: \n      if ARGS.verbose: ALERT(\"detected encoding of file as '%s'\" % detected_encoding)\n      encodings.insert(0, detected_encoding)\n\n    cmdfile = None\n    hotfixesfile = None\n    \n    # now loop through all encodings, with the detected one first (if it was possible)\n    for encoding in encodings:\n\n      if ARGS.verbose: ALERT(\"  attempting to read with '%s' encoding\" % encoding)          \n\n      # if we can read the file, and read the command output, we are done with the loop\n      try: \n        cmdfile = io.open(ARGS.hotfixes, \"r\", encoding=encoding) # throws UnicodeDecodeError      \n        hotfixesfile = cmdfile.readlines() # throws UnicodeError\n        break\n\n      except (UnicodeError, UnicodeDecodeError) as e:\n        if ARGS.verbose: ALERT(\"could not read file using '%s' encoding: %s\" % (encoding, e), ALERT.BAD)\n  \n      # file might not exist\n      except:\n        ALERT(\"could not read from input file specified: %s\" % ARGS.hotfixes, ALERT.BAD)\n        exit(1)  \n\n    # general catchall if somehow it was able to keep processing\n    if not cmdfile or not hotfixesfile:\n      ALERT(\"could not read from input file, or could not detect encoding\", ALERT.BAD)\n      exit(1)\n\n    # file read successfully\n    ALERT(\"hotfixes input file read successfully (%s)\" % encoding, ALERT.GOOD)\n    \n    # loop through hotfixes file input\n    for haystack in hotfixesfile:\n      # look for kbs\n      if (\"KB\" in haystack or \"]: \" in haystack):\n        patch=getpatch(haystack)\n        \n        # if a patch was parsed\n        if patch:\n          if ARGS.verbose: ALERT(\"found hotfix %s\" % patch)\n          hotfixes.add(patch)\n        \n  if ARGS.verbose:\n    ALERT(\"name: %s; release: %s; servicepack: %s; architecture: %s\" % (name, release, servicepack, architecture))\n\n  # verify that a windows os was at least able to be parsed\n  if not name:\n    if ARGS.systeminfo:\n      ALERT(\"unable to determine the windows versions from the input file specified. consider using --ostext option to force detection (example: --ostext 'windows 7 sp1 64-bit')\", ALERT.BAD)\n      exit(1)\n\n  if ARGS.verbose:\n    ALERT(\"name: %s\" % name)\n    ALERT(\"release: %s\" % release)\n    ALERT(\"service pack: %s\" % servicepack)\n    ALERT(\"architecture: %s\" % architecture)\n\n  ALERT(\"querying database file for potential vulnerabilities\")\n\n  # potential, all matches within the CSV database for the name,release,sp,arch\n  # bulletinds, set of the above with MSIDs (good to keep count)\n\n  # get the potential bulletins\n  try:\n    for row in csv.reader(StringIO.StringIO(database)):\n      bulletinid=row[1]\n      affected=row[6]\n\n      if isaffected(name, release, servicepack, architecture, affected):\n        \n        # only add the bulletin if it's not already in the list\n        if bulletinid not in bulletinids:\n          potential.append(row)\n          bulletinids.add(bulletinid)\n\n          if ARGS.verbose:\n            ALERT(\"%s has been added to potential list '%s'\" % (bulletinid, affected))\n            \n  except csv.Error, e:\n    ALERT('could not parse database file, make sure it is in the proper format', ALERT.BAD)\n    exit(1)\n         \n  # there should always be some potential vulns, because of the amount of windows software and false positives  \n  if len(bulletinid) == 0:\n    ALERT(\"there are no potential vulnerabilities for, ensure you're searching a valid windows OS\", ALERT.BAD)\n    exit(1)\n\n  ALERT(\"comparing the %s hotfix(es) against the %s potential bulletins(s) with a database of %s known exploits\" % (len(hotfixes), len(bulletinids), getexploit()))\n  \n  # start removing the vulns because of hotfixes\n  for row in list(potential):\n\n    # ms bulletin\n    bulletinid=row[1]\n    kb=row[2]\n    componentkb=row[7]\n\n    for hotfix in hotfixes:\n    \n      # if either the hotfixes match the kb or componentkb columns, and the bulletin is in the list\n      # of potential bulletins\n      if (hotfix == kb or hotfix == componentkb) and bulletinid in bulletinids:\n\n        if ARGS.verbose:\n          ALERT(\"  %s hotfix triggered a removal of %skb and the %s bulletin; componentkb is %s\" % (hotfix,kb,bulletinid,componentkb))\n\n        # get the linked ms, this will automatically calculate the superseded by as well\n        linkedms = getlinkedms([bulletinid], csv.reader(StringIO.StringIO(database)))\n        linkedmsstr = ''\n        \n        # calculate the pretty string, only care when verbose\n        if len(linkedms) > 0:\n          for m in linkedms:\n            linkedmsstr += ' ' + m\n\n        if ARGS.verbose:\n        \n          if hotfix == kb:\n            ALERT(\"    due to presence of KB%s (Bulletin KB) removing%s bulletin(s)\" % (kb, linkedmsstr))\n            \n          elif componentkb == kb:\n            ALERT(\"    due to presence of KB%s (Component KB) removing%s bulletin(s)\" % (componentkb, linkedmsstr))\n\n        bulletinids = bulletinids.difference(linkedms)\n        potential.remove(row)\n\n  ALERT(\"there are now %s remaining vulns\" % len(bulletinids))\n\n  # search local exploits only\n  if ARGS.local:\n    ALERT(\"searching for local exploits only\")\n    for row in list(potential):\n      bulletinid = row[1]\n      impact = row[4]\n\n      if bulletinid in bulletinids and not \"elevation of privilege\" in impact.lower():\n\n        remove = getlinkedms([bulletinid], csv.reader(StringIO.StringIO(database)))\n        \n        if ARGS.verbose:\n          ALERT(\"   removing %s (total of %s MS ids), because of its impact %s\" % (bulletinid, len(remove), impact))\n\n        bulletinids = bulletinids.difference(remove)\n        potential.remove(row)\n\n  # search remote exploits only\n  if ARGS.remote:\n    ALERT(\"searching for remote exploits only\")\n    for row in list(potential):\n      bulletinid = row[1]\n      impact = row[4]\n\n      if bulletinid in bulletinids and not \"remote code execution\" in impact.lower():\n\n        remove = getlinkedms([bulletinid], csv.reader(StringIO.StringIO(database)))\n        \n        if ARGS.verbose:\n          ALERT(\"   removing %s (total of %s MS ids), because of its impact %s\" % (bulletinid, len(remove), impact))\n\n        bulletinids = bulletinids.difference(remove)\n        potential.remove(row)\n  \n  # print windows version\n  version=getversion(name, release, servicepack, architecture)\n\n  ALERT(\"[E] exploitdb PoC, [M] Metasploit module, [*] missing bulletin\", ALERT.GOOD)\n  ALERT(\"windows version identified as '%s'\" % version, ALERT.GOOD)\n\n  # spacer\n  ALERT(\"\")\n\n  # vulns, the dictionary of the bulletins based off of the potential bulletins\n  # also, a good opportunity to remove false-positives due to the\n  # differences in the technet post and bulletin\n  for row in potential:\n    id = row[1]\n\n    # start removing vulns because of false-positives\n    # Manual override for MS11-011 to reduce false positives. The article was updated, but the bulletin database wasn't (https://technet.microsoft.com/en-us/library/security/ms11-011.aspx)\n    # V1.2 (March 18, 2011): Added Windows 7 for 32-bit Systems Service Pack 1, Windows 7 for x64-based Systems Service Pack 1, Windows Server 2008 R2 for x64-based Systems Service Pack 1, and Windows Server 2008 R2 for Itanium-based Systems Service Pack 1 to Non-Affected Software. This is an informational change only. There were no changes to the security update files or detection logic.\n    if id == 'MS11-011':\n        ms11_011 = ['Windows 7 for 32-bit Systems Service Pack 1', 'Windows 7 for x64-based Systems Service Pack 1', 'Windows Server 2008 R2 for x64-based Systems Service Pack 1','Windows Server 2008 R2 for Itanium-based Systems Service Pack 1']\n        for not_affected in ms11_011:\n            compare_version = getversion(getname(not_affected),getrelease(not_affected),getservicepack(not_affected),getarchitecture(not_affected))\n            if version == compare_version:\n                if ARGS.verbose: ALERT(\"Ignoring MS11-011 false positive due to it not affecting '%s'\" % compare_version)\n                id = False\n        \n    for bulletinid in bulletinids:\n      if bulletinid == id:\n        title = row[5]\n        kb = row[2]\n        severity = row[3]\n        if id not in ids:\n          vulns[id] = [title,kb,severity]\n          ids.add(id)\n\n  # alerted, if a bulletin has been alerted to the user so that it doesn't appear twice\n  #          this occurs when a bulletin has multiple parents\n  # msids, the actual data for all of the relevant msids (the row from the CSV)\n  alerted = set()\n  msids = sorted(vulns, reverse=True)\n  \n  # loop through the bulletinids which is the set of the actual bulletins that are to\n  # be alerted\n  for msid in msids:\n\n    ## don't alert twice, no matter the case\n    if msid not in alerted: \n\n      # get the msid, exploitability alert rating, and resources\n      m,exploit,resources = getexploit(msid)\n      \n      # only display the message, if the exploit flag isn't used\n      # or if it is used, and the alert level is MSF or EXP\n      if ARGS.audit or (exploit == ALERT.MSF or exploit == ALERT.EXP):\n\n        alert = ALERT.NORMAL\n        if exploit: alert = exploit\n      \n        ALERT(\"%s: %s (%s) - %s\" % (msid, vulns[msid][0], vulns[msid][1], vulns[msid][2]), alert)\n        if resources and not ARGS.quiet:\n            for resource in resources:\n                ALERT(\"  %s\" % resource)\n            ALERT(\"\")\n                \n        alerted.add(msid)\n\n        # only attempt to display linked/sub msids based on cli arguments\n        if ARGS.sub:\n\n          # linked ms, the children of this msid\n          linked = set(getlinkedms([msid], csv.reader(StringIO.StringIO(database))))\n          linked = linked.intersection(msids)\n          \n\t      # loop through the linked msids, and only display those that qualify and\n          # those that have not been alerted yet\n          for lmsid in sorted(linked, reverse=True):\n            if lmsid in msids and lmsid not in alerted:\n              lexploit = getexploit(lmsid)\n              lalert = ALERT.NORMAL\n              if ARGS.audit or (lexploit == ALERT.MSF or lexploit == ALERT.EXP):\n                if lexploit: lalert = lexploit\n                ALERT(\"|_%s: %s (%s) - %s\" % (lmsid, vulns[lmsid][0], vulns[lmsid][1], vulns[lmsid][2]), lalert)\n                \n\t\t# only allow duplicate events to be displayed when command-line args passed\n\t\tif not ARGS.duplicates: alerted.add(lmsid)\n\n  # end run()\n\n\n# attempt to detect character encoding of a file\n# otherwise return None\n# https://stackoverflow.com/questions/3323770/character-detection-in-a-text-file-in-python-using-the-universal-encoding-detect\ndef detect_encoding(filename):\n  try:\n    import chardet\n    data = open(filename, \"r\").read()\n    result = chardet.detect(data)\n    encoding = result['encoding']\n    return encoding\n  except:\n    return None\n\n# the trace command is used to determine linked MS bulletins\n# TODO much of this is duplicated from run(). should be merged\ndef trace(database):\n\n  # convert to upper\n  bulletinid = ARGS.trace.upper()\n  ALERT(\"searching for bulletin id %s\" % bulletinid)\n\n  # get linked msids\n  lmsids =  getlinkedms([bulletinid], csv.reader(StringIO.StringIO(database)))\n\n  msids = []\n\n  if ARGS.ostext: \n    ALERT(\"getting OS information from command line text\")\n\n    name=getname(ARGS.ostext)\n    release=getrelease(ARGS.ostext)\n    servicepack=getservicepack(ARGS.ostext)\n    architecture=getarchitecture(ARGS.ostext)\n\n    if ARGS.verbose:\n      ALERT(\"name: %s\" % name)\n      ALERT(\"release: %s\" % release)\n      ALERT(\"service pack: %s\" % servicepack)\n      ALERT(\"architecture: %s\" % architecture)\n\n    # the os name at least has to be identified\n    if not name:\n      ALERT(\"unable to determine the windows version command line text from '%s'\" % ARGS.ostext, ALERT.BAD)\n      exit(1)\n\n    # get linked msids, loop through the row\n    for row in csv.reader(StringIO.StringIO(database)):\n      msid = row[1]\n      affected = row[6]\n\n      if msid in lmsids:  \n        # debug\n        #print (\"%s,%s,%s,%s,%s,%s\" % (msid, name, release, servicepack, architecture, affected))\n\n        if isaffected(name, release, servicepack, architecture, affected) and msid not in msids: msids.append(msid)\n    \n \n  else: msids = lmsids\n\n  ALERT(\"linked msids %s\" % msids, ALERT.GOOD)\n\n  \ndef patches(database):\n  \n  kbs = []\n\n  # convert to upper\n  bulletinid = ARGS.patches.upper()\n  ALERT(\"searching all kb's for bulletin id %s\" % bulletinid)\n\n  # get linked msids, loop through the row\n  for row in csv.reader(StringIO.StringIO(database)):\n      \n    bulletinkb=row[2]\n    componentkb=row[7]\n    \n    # if there's a match\n    if bulletinid in row[1]:\n      kbs.append(bulletinkb)\n      kbs.append(componentkb)\n\n  ALERT(\"relevant kbs %s\" % (sorted(set(kbs), reverse=True)), ALERT.GOOD)\n\ndef getversion(name, release, servicepack, architecture):\n    \n  version = \"Windows \" + name\n\n  # append release first\n  if release: version += \" R\" + release\n      \n  # then service pack\n  if servicepack: version += \" SP\" + servicepack\n  \n  # architecture\n  if architecture == \"Itanium\":  version += \" Itanium-based\"\n  else: version += \" %s-bit\" % architecture\n    \n  return version\n\n\ndef getname(ostext):\n\n  if ostext == False:\n    return False\n      \n  osname=False\n\n  osnamearray=[[\"xp\",\"XP\"],\n               [\"2000\",\"2000\"],\n               [\"2003\",\"2003\"],\n               [\"vista\",\"Vista\"],\n               [\"2008\",\"2008\"],\n               [\" 7\",\"7\"],\n               [\" 8\",\"8\"],\n               [\"2012\",\"2012\"],\n               [\"8.1\",\"8.1\"],\n               [\" 10\",\"10\"]]\n\n  for needle in osnamearray:\n    ostext = ostext.lower()\n    if \"windows\" + needle[0] in ostext or \"windows \" + needle[0] in ostext or \"server\" + needle[0] in ostext or \"server \" + needle[0] in ostext:\n      osname = needle[1]\n\n  # the first loop is a more restrictive detection of the OS name, but it does not detect the following\n  # > Microsoft Windows\\xFF7 Entreprise \n  # so if there is no detection from the first attempt, then search on a more loosely based string of \n  # needle and space\n  if not osname:\n    for needle in osnamearray:\n      if needle[0] + \" \" in ostext.lower():\n        osname = needle[1]\n\n  return osname\n\n\ndef getrelease(ostext):    \n    \n  if ostext == False:\n    return False\n      \n  osrelease=False\n  \n  regex=\"( r| rc|release|rel)[ ]*(\\d)\"\n  m=re.search(regex, ostext.lower())\n  \n  if m and m.group(2):    \n    osrelease=m.group(2)\n      \n  return osrelease\n  \ndef getservicepack(ostext):\n    \n  if ostext == False:\n    return False\n      \n  servicepack=False\n  \n  regex=\"(sp|pack|pack:)[ ]*(\\d)\"\n  m=re.search(regex, ostext.lower())\n  if m and m.group(2):\n    servicepack=m.group(2)\n\n  return servicepack\n\n\n # architecture defaults to 32, but can be 64-bit\n # or itanium based\ndef getarchitecture(ostext):\n  \n  # default to 32-bit\n  architecture=\"32\"\n\n  # haystack\n  s = ostext.lower()\n  \n  # attempt to be as flexible as possible\n  # matching '64-based', 'x64', ' 64', 'i64', '64bit', '64 bit', '64-bit'\n  if (\"64-based\" in s) or (\"x64\" in s) or (\" 64\" in s) or (\"i64\" in s) or (\"64bit\" in s) or (\"64 bit\" in s) or (\"64-bit\" in s): architecture=\"64\"\n\n  # target Itanium with a simple search for 'tani'\n  if \"tani\" in s: architecture=\"Itanium\"\n        \n  if getname(ostext) == \"2008\" and getrelease(ostext) == \"2\" and architecture == \"32\":\n    if ARGS.verbose:\n      ALERT(\"forcing unidentified architecture to 64-bit because OS identified as Windows 2008 R2 (although could be Itanium and wasn't detected?)\")\n    architecture = \"64\"\n\n  # windows server 2012 is only 64-bit arch\n  if getname(ostext) == \"2012\" and architecture == \"32\":\n    if ARGS.verbose:\n      ALERT(\"forcing unidentified architecture to 64-bit because OS identified as Windows Server 2012 does not support 32-bit\")\n    architecture = \"64\"  \n\n  return architecture\n\n# itanium build search string\ndef getitanium(ostext):\n    \n  if ostext == False:\n    return False\n\n  regex=\"(tanium)\"\n  m=re.search(regex, ostext.lower())\n\n  if m:\n    return True\n\n  return False\n\ndef getpatch(ostext):\n    \n  patch=False\n  \n  regex=\"(\\d){5,10}\"\n  m=re.search(regex, ostext.lower())\n  if m and m.group():\n    patch=m.group()\n  \n  return patch\n\n# get the bulletin ids from the haystack\n# these are typically in the form of: \n#   MS14-009[2898860]\n#   MS13-052[2833940],MS14-009[2898856]\n# will return a list if found, otherwise false\ndef getbulletinids(haystack):\n  regex=\"MS[\\d]{2,3}-[\\d]{2,3}\"\n  m = re.findall(regex, haystack)\n  if len(m) > 0: return m\n  return False\n\ndef isaffected(name, release, servicepack, architecture, haystack):\n\n  if name == getname(haystack):\n\n    # ensure None are set to False\n    # example, if getservicepack() does not get called in the systeminfo parsing\n    # then servicepack will be None. this will then fail when comparing to False. \n    if release == None: release = False\n    if servicepack == None: servicepack = False\n    if architecture == None: architecture = False\n\n#    print \"%s,%s,%s,%s\" % (name, release, servicepack, architecture)\n#    print \"%s,%s,%s,%s\" % (getname(haystack),getrelease(haystack),getservicepack(haystack),getarchitecture(haystack))\n\n    n = (name == getname(haystack))\n    r = (release == getrelease(haystack))\n    s = (servicepack == getservicepack(haystack))\n    a = (architecture == getarchitecture(haystack))\n\n    # we ignore the architecture for 2012 servers, as there is only 64-bit\n    if name == \"2012\": return r and s\n\n#    print \"%s,%s,%s,%s,%s\" % (name, release, servicepack, architecture, (a and r and s))\n\n    return a and r and s\n    \n# search entire database for linked msids\n# this will also search the superseded column (11)\ndef getlinkedms(msids, database):\n\n  lmsids = []\n\n  # go through each row in the database\n  for row in database:\n  \n    # base MS-XX\n    rowid=row[1]\n    \n    # superseded MS-XX\n    \n    # first try row 12, and then row 11 for the supercedes column due to\n    # differences in csv and xlrd parsing. this was a bug that might be\n    # fixed now\n    rowidsuper = getbulletinids(row[12])\n    if rowidsuper == False: rowidsuper=getbulletinids(row[11])  \n    \n    rowidsuper = merge_list(rowidsuper)\n\n    # loop through each msid for each row\n    for msid in msids:\n      \n      # debug output, what we're working with\n      #print \"%s,%s,%s\" % (msid, rowid, rowidsuper)\n      # MS14-053,MS14-053,['MS13-052', 'MS14-009']\n      # MS14-053,MS14-053,['MS13-004']\n      # MS14-053,MS14-053,['MS13-004']\n      # MS14-053,MS14-053,['MS13-004']\n      # MS14-053,MS14-053,['MS13-004']\n      # MS14-053,MS14-053,[]\n\n      # if the msid matches the row, get the supercedes column (which is a list)\n      if msid == rowid or rowid in lmsids:\n        #print \"%s,%s,%s\" % (msid, rowid, rowidsuper)\n        lmsids.append(msid)\n        lmsids = lmsids + rowidsuper\n\n  return sorted(set(lmsids), reverse=True)\n\n# determines whether or not an msid is in a list of exploits. if msid = 0\n# then it will just return the count\ndef getexploit(msid = 0):\n# search using searchsploit\n#MS Windows (ListBox/ComboBox Control) Local Exploit (MS03-045)        /windows/local/122.c\n#MS Windows Utility Manager Local SYSTEM Exploit (MS04-011)          /windows/local/271.c\n#MS Windows 2000 Utility Manager Privilege Elevation Exploit (MS04-019)    /windows/local/350.c\n#MS Windows 2K POSIX Subsystem Privilege Escalation Exploit (MS04-020)     /windows/local/351.c\n#MS Windows 2000 Universal Language Utility Manager Exploit (MS04-019)     /windows/local/352.c\n#MS Windows 2K/XP Task Scheduler .job Exploit (MS04-022)           /windows/local/353.c\n#MS Windows 2k Utility Manager (All-In-One) Exploit (MS04-019)         /windows/local/355.c\n#MS Windows XP Task Scheduler (.job) Universal Exploit (MS04-022)      /windows/local/368.c\n#MS Windows (HTA) Script Execution Exploit (MS05-016)            /windows/local/938.cpp\n#MS Windows COM Structured Storage Local Exploit (MS05-012)          /windows/local/1019.c\n#MS Windows CSRSS Local Privilege Escalation Exploit (MS05-018)        /windows/local/1198.c\n#MS Windows 2k Kernel APC Data-Free Local Escalation Exploit (MS05-055)    /windows/local/1407.c\n#MS Windows Telephony Service Command Execution Exploit (MS05-040)       /windows/local/1584.cpp\n#MS Windows (NtClose DeadLock) Vulnerability PoC (MS06-030)          /windows/local/1910.c\n#MS Windows XP/2K (Mrxsmb.sys) Privilege Escalation PoC (MS06-030)       /windows/local/1911.c\n#Microsoft IIS ASP Stack Overflow Exploit (MS06-034)             /windows/local/2056.c\n#MS Windows (Windows Kernel) Privilege Escalation Exploit (MS06-049)     /windows/local/2412.c\n#MS Windows GDI Local Privilege Escalation Exploit (MS07-017)        /windows/local/3688.c\n#MS Windows GDI Local Privilege Escalation Exploit (MS07-017) 2        /windows/local/3755.c\n#Kodak Image Viewer TIF/TIFF Code Execution Exploit PoC (MS07-055)       /windows/local/4584.c\n#Microsoft Office .WPS File Stack Overflow Exploit (MS08-011)        /windows/local/5107.c\n#Microsoft Office Excel Code Execution Exploit (MS08-014)          /windows/local/5287.txt\n#Microsoft Office XP SP3 PPT File Buffer Overflow Exploit (ms08-016)     /windows/local/5320.txt\n#MS Windows GDI Image Parsing Stack Overflow Exploit (MS08-021)        /windows/local/5442.cpp\n\n#MS Word Record Parsing Buffer Overflow (MS09-027)               /windows/local/14693.py\n#MS Excel Malformed FEATHEADER Record Exploit (MS09-067)           /windows/local/14706.py\n#MS Word Record Parsing Buffer Overflow MS09-027 (meta)            /windows/local/17177.rb\n#MS Internet Explorer Object Tag Exploit (MS03-020)              /windows/remote/37.pl\n#MS Windows Media Services Remote Exploit (MS03-022)             /windows/remote/48.c\n#Microsoft WordPerfect Document Converter Exploit (MS03-036)         /windows/remote/92.c\n#MS Windows (RPC DCOM) Scanner (MS03-039)                  /windows/remote/97.c\n#MS Windows (RPC DCOM) Long Filename Overflow Exploit (MS03-026)       /windows/remote/100.c\n#MS Windows (RPC DCOM2) Remote Exploit (MS03-039)              /windows/remote/103.c\n#MS Windows (RPC2) Universal Exploit & DoS (RPC3) (MS03-039)         /windows/remote/109.c\n#MS Windows 2000/XP Workstation Service Overflow (MS03-049)          /windows/remote/119.c\n#MS Frontpage Server Extensions fp30reg.dll Exploit (MS03-051)         /windows/remote/121.c\n#MS Windows Workstation Service WKSSVC Remote Exploit (MS03-049)       /windows/remote/123.c\n#MS Windows XP Workstation Service Remote Exploit (MS03-049)         /windows/remote/130.c\n#MS Windows Messenger Service Remote Exploit FR (MS03-043)           /windows/remote/135.c\n#MS Internet Explorer URL Injection in History List (MS04-004)         /windows/remote/151.txt\n#MS Windows IIS 5.0 SSL Remote buffer overflow Exploit (MS04-011)      /windows/remote/275.c\n#MS Windows Lsasrv.dll RPC Remote Buffer Overflow Exploit (MS04-011)     /windows/remote/293.c\n#MS Windows XP/2K Lsasrv.dll Remote Universal Exploit (MS04-011)       /windows/remote/295.c\n#MS Windows JPEG GDI+ Overflow Administrator Exploit (MS04-028)        /windows/remote/475.sh\n#MS Windows JPEG GDI+ Overflow Download Shellcode Exploit (MS04-028)     /windows/remote/478.c\n#MS Windows JPEG GDI+ Remote Heap Overflow Exploit (MS04-028)        /windows/remote/480.c\n#MS Windows Metafile (.emf) Heap Overflow Exploit (MS04-032)         /windows/remote/584.c\n#MS Windows Compressed Zipped Folders Exploit (MS04-034)           /windows/remote/640.c\n#MS Windows NetDDE Remote Buffer Overflow Exploit (MS04-031)         /windows/remote/734.c\n#MS Internet Explorer .ANI files handling Universal Exploit (MS05-002)     /windows/remote/765.c\n#MS Internet Explorer .ANI files handling Downloader Exploit (MS05-002)    /windows/remote/771.cpp\n#MS Exchange Server Remote Code Execution Exploit (MS05-021)         /windows/remote/947.pl\n#MS Outlook Express NNTP Buffer Overflow Exploit (MS05-030)          /windows/remote/1066.cpp\n#MS Windows Message Queuing BoF Universal Exploit (MS05-017) (v.0.3)     /windows/remote/1075.c\n#MS Internet Explorer (blnmgr.dll) COM Object Remote Exploit (MS05-038)    /windows/remote/1144.html\n#MS Windows Plug-and-Play Service Remote Overflow (MS05-039)         /windows/remote/1146.c\n#MS Windows Plug-and-Play Service Remote  Universal Exploit (MS05-039)     /windows/remote/1149.c\n#Microsoft Windows DTC Remote Exploit (PoC) (MS05-051) (updated)       /windows/remote/1352.cpp\n#Windows Media Player 7.1 <= 10 BMP Heap Overflow PoC (MS06-005) (2)     /windows/remote/1502.py\n#MS Windows Media Player 9 Plugin Overflow Exploit (MS06-006) (meta)     /windows/remote/1504.pm\n#MS Windows Media Player 10 Plugin Overflow Exploit (MS06-006)         /windows/remote/1505.html\n#MS Windows Color Management Module Overflow Exploit (MS05-036) (2)      /windows/remote/1506.c\n#MS Windows Media Player Plugin Overflow Exploit (MS06-006)(3)         /windows/remote/1520.pl\n#MS Windows RRAS Remote Stack Overflow Exploit (MS06-025)          /windows/remote/1940.pm\n#MS Windows RRAS RASMAN Registry Stack Overflow Exploit (MS06-025)       /windows/remote/1965.pm\n#MS Internet Explorer (MDAC) Remote Code Execution Exploit (MS06-014)    /windows/remote/2052.sh\n#MS Windows DHCP Client Broadcast Attack Exploit (MS06-036)          /windows/remote/2054.txt\n#MS Windows NetpIsRemote() Remote Overflow Exploit (MS06-040)        /windows/remote/2162.pm\n#Internet Explorer (MDAC) Remote Code Execution Exploit (MS06-014) (2)     /windows/remote/2164.pm\n#MS Windows CanonicalizePathName() Remote Exploit (MS06-040)         /windows/remote/2223.c\n#MS Windows NetpIsRemote() Remote Overflow Exploit (MS06-040) (2)      /windows/remote/2265.c\n#MS Windows NetpIsRemote() Remote Overflow Exploit (MS06-040) (2k3)      /windows/remote/2355.pm\n#MS Windows NetpManageIPCConnect Stack Overflow Exploit (MS06-070)       /windows/remote/2789.cpp\n#MS Windows Wkssvc NetrJoinDomain2 Stack Overflow Exploit (MS06-070)     /windows/remote/2800.cpp\n#MS Windows ASN.1 Remote Exploit (MS04-007)                  /windows/remote/3022.txt\n#MS Internet Explorer VML Remote Buffer Overflow Exploit (MS07-004)      /windows/remote/3137.html\n#MS Internet Explorer VML Download and Execute Exploit (MS07-004)      /windows/remote/3148.pl\n#MS Internet Explorer Recordset Double Free Memory Exploit (MS07-009)    /windows/remote/3577.html\n#MS Windows (.ANI) GDI Remote Elevation of Privilege Exploit (MS07-017)    /windows/remote/3804.txt\n#MS Internet Explorer <= 7 Remote Arbitrary File Rewrite PoC (MS07-027)    /windows/remote/3892.html\n#Microsoft Internet Explorer TIF/TIFF Code Execution (MS07-055)        /windows/remote/4616.pl\n#MS Windows Message Queuing Service RPC BOF Exploit (MS07-065)         /windows/remote/4745.cpp\n#MS Windows 2000 AS SP4 Message Queue Exploit (MS07-065)           /windows/remote/4760.txt\n#Windows Media Encoder wmex.dll ActiveX BOF Exploit (MS08-053)         /windows/remote/6454.html\n#MS Windows GDI (EMR_COLORMATCHTOTARGETW) Exploit MS08-021           /windows/remote/6656.txt\n#MS Windows Server Service Code Execution Exploit (MS08-067) (Univ)      /windows/remote/6841.txt\n#MS Windows Server Service Code Execution Exploit (MS08-067)         /windows/remote/7104.c\n#SmbRelay3 NTLM Replay Attack Tool/Exploit (MS08-068)            /windows/remote/7125.txt\n#MS Windows Server Service Code Execution Exploit (MS08-067) (2k/2k3)    /windows/remote/7132.py\n#Microsoft XML Core Services DTD Cross-Domain Scripting PoC MS08-069     /windows/remote/7196.html\n#MS Internet Explorer 7 Memory Corruption Exploit (MS09-002) (xp sp2)    /windows/remote/8079.html\n#MS Internet Explorer 7 Memory Corruption Exploit (MS09-002) (py)      /windows/remote/8080.py\n#MS Internet Explorer 7 Memory Corruption PoC (MS09-002) (win2k3sp2)     /windows/remote/8082.html\n#MS Internet Explorer 7 Memory Corruption Exploit (MS09-002) (fast)      /windows/remote/8152.py\n#Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference (MS09-050) /windows/remote/14674.txt\n#Microsoft Services MS06-066 nwwks.dll                     /windows/remote/16369.rb\n#Microsoft Services MS06-066 nwapi32.dll                   /windows/remote/16373.rb\n#MS03-020 Internet Explorer Object Type                    /windows/remote/16581.rb\n#MS03-046 Exchange 2000 XEXCH50 Heap Overflow                /windows/remote/16820.rb\n\n# no ms number yet?\n#MS??-???,http://www.exploit-db.com/exploits/30014/,P,??2914486\n  # bulletin, type, details\n  exploits = [\n\n    ['MS16-135', ALERT.EXP, [ # CVE-2016-7255\n    \"https://www.exploit-db.com/exploits/40745/ -- Microsoft Windows Kernel - win32k Denial of Service (MS16-135)\",\n    \"https://www.exploit-db.com/exploits/41015/ -- Microsoft Windows Kernel - 'win32k.sys' 'NtSetWindowLongPtr' Privilege Escalation (MS16-135) (2)\",\n    \"https://github.com/tinysec/public/tree/master/CVE-2016-7255\"]],\n\n    ['MS16-129', ALERT.EXP, [ # CVE 2016-7200, CVE-2016-7201\n    \"https://www.exploit-db.com/exploits/40990/ -- Microsoft Edge (Windows 10) - 'chakra.dll' Info Leak / Type Confusion Remote Code Execution\",\n    \"https://github.com/theori-io/chakra-2016-11\"]],\n\n    ['MS16-098', ALERT.EXP, [\n    \"https://www.exploit-db.com/exploits/41020/ -- Microsoft Windows 8.1 (x64) - RGNOBJ Integer Overflow (MS16-098)\"]],\n\n    ['MS16-075', ALERT.MSF, [\n    \"https://github.com/foxglovesec/RottenPotato\",\n\t\"https://github.com/Kevin-Robertson/Tater\",\n\t\"https://bugs.chromium.org/p/project-zero/issues/detail?id=222 -- Windows: Local WebDAV NTLM Reflection Elevation of Privilege\",\n    \"https://foxglovesecurity.com/2016/01/16/hot-potato/ -- Hot Potato - Windows Privilege Escalation\"]],\n\n    ['MS16-074', ALERT.EXP, [ # CVE 2016-3216\n     \"https://www.exploit-db.com/exploits/39990/ -- Windows - gdi32.dll Multiple DIB-Related EMF Record Handlers Heap-Based Out-of-Bounds Reads/Memory Disclosure (MS16-074), PoC\",\n     \"https://www.exploit-db.com/exploits/39991/ -- Windows Kernel - ATMFD.DLL NamedEscape 0x250C Pool Corruption (MS16-074), PoC\"]], # CVE 2016-3220\n\n    ['MS16-063', ALERT.EXP, [ # CVE 2016-0199\n     \"https://www.exploit-db.com/exploits/39994/ -- Internet Explorer 11 - Garbage Collector Attribute Type Confusion (MS16-063), PoC\"]],\n\n    ['MS16-042', ALERT.EXP, [ # CVE 2016-0122\n     \"https://www.exploit-db.com/exploits/39694/ -- Microsoft Office Excel Out-of-Bounds Read Remote Code Execution (MS16-042), PoC\"]],\n\n    ['MS16-059', ALERT.EXP, [ # CVE 2016-0185\n     \"https://www.exploit-db.com/exploits/39805/ -- Microsoft Windows Media Center - .MCL File Processing Remote Code Execution (MS16-059), PoC\"]],\n\n    ['MS16-056', ALERT.EXP, [ # CVE-2015-1730\n     \"https://www.exploit-db.com/exploits/40881/ -- Microsoft Internet Explorer - jscript9 Java­Script­Stack­Walker Memory Corruption (MS15-056)\",\n     \"http://blog.skylined.nl/20161206001.html -- MSIE jscript9 Java­Script­Stack­Walker memory corruption\"]],\n\n    ['MS16-032', ALERT.EXP, [ # CVE 2016-0099\n     \"https://www.exploit-db.com/exploits/40107/ -- MS16-032 Secondary Logon Handle Privilege Escalation, MSF\",\n     \"https://www.exploit-db.com/exploits/39574/ -- Microsoft Windows 8.1/10 - Secondary Logon Standard Handles Missing Sanitization Privilege Escalation (MS16-032), PoC\",\n     \"https://www.exploit-db.com/exploits/39719/ -- Microsoft Windows 7-10 & Server 2008-2012 (x32/x64) - Local Privilege Escalation (MS16-032) (PowerShell), PoC\",\n     \"https://www.exploit-db.com/exploits/39809/ -- Microsoft Windows 7-10 & Server 2008-2012 (x32/x64) - Local Privilege Escalation (MS16-032) (C#)\"]],\n\n    ['MS16-016', ALERT.MSF, [ # CVE 2016-0051\n     \"https://www.exploit-db.com/exploits/40085/ -- MS16-016 mrxdav.sys WebDav Local Privilege Escalation, MSF\",\n     \"https://www.exploit-db.com/exploits/39788/ -- Microsoft Windows 7 - WebDAV Privilege Escalation Exploit (MS16-016) (2), PoC\",\n     \"https://www.exploit-db.com/exploits/39432/ -- Microsoft Windows 7 SP1 x86 - WebDAV Privilege Escalation (MS16-016) (1), PoC\"]],\n\n    ['MS16-014', ALERT.EXP, [ # CVE 2016-0400\n     \"Windows 7 SP1 x86 - Privilege Escalation (MS16-014), https://www.exploit-db.com/exploits/40039/, PoC\"]],\n\n    ['MS16-007', ALERT.EXP, [ # CVE 2016-0015, CVE 2016-0016\n     \"https://www.exploit-db.com/exploits/39232/ -- Microsoft Windows devenum.dll!DeviceMoniker::Load() - Heap Corruption Buffer Underflow (MS16-007), PoC\",\n     \"https://www.exploit-db.com/exploits/39233/ -- Microsoft Office / COM Object DLL Planting with WMALFXGFXDSP.dll (MS-16-007), PoC\"]],\n\n    ['MS15-134', ALERT.EXP, [ # CVE 2015-6131\n     \"https://www.exploit-db.com/exploits/38911/ -- Microsoft Windows Media Center Library Parsing RCE Vulnerability aka self-executing' MCL File, PoC\",\n     \"https://www.exploit-db.com/exploits/38912/ -- Microsoft Windows Media Center Link File Incorrectly Resolved Reference, PoC\",\n     \"https://www.exploit-db.com/exploits/38918/ -- Microsoft Office / COM Object - 'els.dll' DLL Planting (MS15-134)\",\n     \"https://code.google.com/p/google-security-research/issues/detail?id=514 -- Microsoft Office / COM Object DLL Planting with els.dll\"]],\n\n    ['MS15-132', ALERT.EXP, [ # CVE 2015-6132, CVE 2015-6128\n     \"https://www.exploit-db.com/exploits/38968/ -- Microsoft Office / COM Object DLL Planting with comsvcs.dll Delay Load of mqrt.dll (MS15-132), PoC\",\n     \"https://www.exploit-db.com/exploits/38918/ -- Microsoft Office / COM Object els.dll DLL Planting (MS15-134), PoC\"]],\n\n    ['MS15-112', ALERT.EXP, [ # CVE 2015-6086\n     \"https://www.exploit-db.com/exploits/39698/ -- Internet Explorer 9/10/11 - CDOMStringDataList::InitFromString Out-of-Bounds Read (MS15-112)\"]],\n\n    ['MS15-111', ALERT.EXP, [ # CVE 2015-2553\n     \"https://www.exploit-db.com/exploits/38474/ -- Windows 10 Sandboxed Mount Reparse Point Creation Mitigation Bypass (MS15-111), PoC\"]],\n\n    ['MS15-102', ALERT.EXP, [ # CVE 2015-2524, CVE 2015-2525, CVE 2015-2528\n     \"https://www.exploit-db.com/exploits/38202/ -- Windows CreateObjectTask SettingsSyncDiagnostics Privilege Escalation, PoC\",\n     \"https://www.exploit-db.com/exploits/38200/ -- Windows Task Scheduler DeleteExpiredTaskAfter File Deletion Privilege Escalation, PoC\",\n     \"https://www.exploit-db.com/exploits/38201/ -- Windows CreateObjectTask TileUserBroker Privilege Escalation, PoC\"]],\n\n    ['MS15-100', ALERT.MSF, [ # CVE 2015-2509\n     \"https://www.exploit-db.com/exploits/38195/ -- MS15-100 Microsoft Windows Media Center MCL Vulnerability, MSF\",\n     \"https://www.exploit-db.com/exploits/38151/ -- Windows Media Center - Command Execution (MS15-100), PoC\"]],\n\n    ['MS15-097', ALERT.EXP, [ # CVE 2015-2508, CVE 2015-2527\n     \"https://www.exploit-db.com/exploits/38198/ -- Windows 10 Build 10130 - User Mode Font Driver Thread Permissions Privilege Escalation, PoC\",\n     \"https://www.exploit-db.com/exploits/38199/ -- Windows NtUserGetClipboardAccessToken Token Leak, PoC\"]],\n\n    ['MS15-078', ALERT.MSF, [ # CVE 2015-2426, CVE 2015-2433\n     \"https://www.exploit-db.com/exploits/38222/ -- MS15-078 Microsoft Windows Font Driver Buffer Overflow\"]],\n\n    ['MS15-052', ALERT.EXP, [ # CVE 2015-1674\n     \"https://www.exploit-db.com/exploits/37052/ -- Windows - CNG.SYS Kernel Security Feature Bypass PoC (MS15-052), PoC\"]],\n\n    ['MS15-051', ALERT.MSF, [ # CVE 2015-1701\n     \"https://github.com/hfiref0x/CVE-2015-1701, Win32k Elevation of Privilege Vulnerability, PoC\",\n     \"https://www.exploit-db.com/exploits/37367/ -- Windows ClientCopyImage Win32k Exploit, MSF\"]],\n\n    ['MS15-022', ALERT.EXP, [ # CVE 2015-0097\n     \"https://www.exploit-db.com/exploits/37657/ -- Microsoft Word Local Machine Zone Remote Code Execution Vulnerability, PoC\",\n     \"https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/sploits/37657.zip\"]],\n\n    ['MS15-010', ALERT.EXP, [ # CVE 2015-0057\n     \"https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows 8.1 - win32k Local Privilege Escalation (MS15-010), PoC\",\n     \"https://www.exploit-db.com/exploits/37098/ -- Microsoft Windows - Local Privilege Escalation (MS15-010), PoC\",\n     \"https://www.exploit-db.com/exploits/39035/ -- Microsoft Windows win32k Local Privilege Escalation (MS15-010), PoC\"]],\n\n    ['MS15-001', ALERT.EXP, [ # CVE 2015-0002\n     \"http://www.exploit-db.com/exploits/35661/ -- Windows 8.1 (32/64 bit) - Privilege Escalation (ahcache.sys/NtApphelpCacheControl), PoC\"]],\n\n    ['MS14-070', ALERT.EXP, [ # CVE 2014 4076\n     \"http://www.exploit-db.com/exploits/35936/ -- Microsoft Windows Server 2003 SP2 - Privilege Escalation, PoC\"]],\n\n    ['MS14-068', ALERT.EXP, [ # CVE 2014-6324\n     \"http://www.exploit-db.com/exploits/35474/ -- Windows Kerberos - Elevation of Privilege (MS14-068), PoC\"]],\n\n    ['MS14-064', ALERT.MSF, [ # CVE 2014-6332\n     \"https://www.exploit-db.com/exploits/37800// -- Microsoft Windows HTA (HTML Application) - Remote Code Execution (MS14-064), PoC\",\n     \"http://www.exploit-db.com/exploits/35308/ -- Internet Explorer OLE Pre-IE11 - Automation Array Remote Code Execution / Powershell VirtualAlloc (MS14-064), PoC\",\n     \"http://www.exploit-db.com/exploits/35229/ -- Internet Explorer <= 11 - OLE Automation Array Remote Code Execution (#1), PoC\",\n     \"http://www.exploit-db.com/exploits/35230/ -- Internet Explorer < 11 - OLE Automation Array Remote Code Execution (MSF), MSF\",\n     \"http://www.exploit-db.com/exploits/35235/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution Through Python, MSF\",\n     \"http://www.exploit-db.com/exploits/35236/ -- MS14-064 Microsoft Windows OLE Package Manager Code Execution, MSF\"]],\n\n    ['MS14-062', ALERT.MSF, [ # CVE 2014-4971\n     \"http://www.exploit-db.com/exploits/34112/ -- Microsoft Windows XP SP3 MQAC.sys - Arbitrary Write Privilege Escalation, PoC\",\n     \"http://www.exploit-db.com/exploits/34982/ -- Microsoft Bluetooth Personal Area Networking (BthPan.sys) Privilege Escalation\"]],\n\n    ['MS14-060', ALERT.MSF, [ # CVE 2014-4114\n     \"http://www.exploit-db.com/exploits/35055/ -- Windows OLE - Remote Code Execution 'Sandworm' Exploit (MS14-060), PoC\",\n     \"http://www.exploit-db.com/exploits/35020/ -- MS14-060 Microsoft Windows OLE Package Manager Code Execution, MSF\"]],\n\n    ['MS14-058', ALERT.MSF, [ # CVE 2014-4113\n     \"http://www.exploit-db.com/exploits/35101/ -- Windows TrackPopupMenu Win32k NULL Pointer Dereference, MSF\"]],\n\n    ['MS14-040', ALERT.EXP, [ # CVE 2014-1767\n     \"https://www.exploit-db.com/exploits/39525/ -- Microsoft Windows 7 x64 - afd.sys Privilege Escalation (MS14-040), PoC\",\n     \"https://www.exploit-db.com/exploits/39446/ -- Microsoft Windows - afd.sys Dangling Pointer Privilege Escalation (MS14-040), PoC\"]],\n\n    ['MS14-035', ALERT.EXP],\n    ['MS14-029', ALERT.EXP, [\n     \"http://www.exploit-db.com/exploits/34458/\"]],\n\n    ['MS14-026', ALERT.EXP, [ # CVE 2014-1806\n     \"http://www.exploit-db.com/exploits/35280/, -- .NET Remoting Services Remote Command Execution, PoC\"]],\n\n    ['MS14-017', ALERT.MSF],\n    ['MS14-012', ALERT.MSF],\n    ['MS14-009', ALERT.MSF],\n    ['MS14-002', ALERT.EXP],\n    ['MS13-101', ALERT.EXP],\n    ['MS13-097', ALERT.MSF],\n    ['MS13-096', ALERT.MSF],\n    ['MS13-090', ALERT.MSF],\n    ['MS13-080', ALERT.MSF],\n    ['MS13-071', ALERT.MSF],\n    ['MS13-069', ALERT.MSF],\n    ['MS13-067', ALERT.EXP],\n    ['MS13-059', ALERT.MSF],\n    ['MS13-055', ALERT.MSF],\n    ['MS13-053', ALERT.MSF],\n    ['MS13-009', ALERT.MSF],\n    ['MS13-005', ALERT.MSF],\n    ['MS12-037', ALERT.EXP, [ # CVE 2012-1876\n     \"http://www.exploit-db.com/exploits/35273/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP & EMET 5., PoC\",\n     \"http://www.exploit-db.com/exploits/34815/ -- Internet Explorer 8 - Fixed Col Span ID Full ASLR, DEP & EMET 5.0 Bypass (MS12-037), PoC\"]],\n\n    ['MS12-022', ALERT.MSF],\n    ['MS11-080', ALERT.MSF],\n    ['MS11-011', ALERT.EXP],\n    ['MS10-073', ALERT.MSF],\n    ['MS10-061', ALERT.MSF],\n    ['MS10-059', ALERT.EXP],\n    ['MS10-047', ALERT.EXP],\n    ['MS10-015', ALERT.MSF],\n    ['MS10-002', ALERT.MSF],\n    ['MS09-072', ALERT.MSF],\n    ['MS09-067', ALERT.MSF],\n    ['MS09-065', ALERT.MSF],\n    ['MS09-053', ALERT.MSF],\n    ['MS09-050', ALERT.MSF, [\n    \"https://www.rapid7.com/db/modules/exploit/windows/smb/ms09_050_smb2_negotiate_func_index -- MS09-050 Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference\"]],\n    \n    ['MS09-050', ALERT.MSF],\n    ['MS09-043', ALERT.MSF],\n    ['MS09-020', ALERT.MSF],\n    ['MS09-004', ALERT.MSF],\n    ['MS09-002', ALERT.MSF],\n    ['MS09-001', ALERT.MSF],\n    ['MS08-078', ALERT.MSF],\n    ['MS08-070', ALERT.MSF],\n    ['MS08-067', ALERT.MSF],\n    ['MS08-067', ALERT.MSF],\n    ['MS08-053', ALERT.MSF],\n    ['MS08-041', ALERT.MSF],\n    ['MS08-025', ALERT.EXP],\n    ['MS07-065', ALERT.MSF],\n    ['MS07-065', ALERT.MSF],\n    ['MS07-064', ALERT.MSF],\n    ['MS07-029', ALERT.MSF],\n    ['MS07-029', ALERT.MSF],\n    ['MS07-017', ALERT.MSF],\n    ['MS06-071', ALERT.MSF],\n    ['MS06-070', ALERT.MSF],\n    ['MS06-070', ALERT.MSF],\n    ['MS06-067', ALERT.MSF],\n    ['MS06-066', ALERT.MSF],\n    ['MS06-066', ALERT.MSF],\n    ['MS06-063', ALERT.MSF],\n    ['MS06-057', ALERT.MSF],\n    ['MS06-055', ALERT.MSF],\n    ['MS06-049', ALERT.EXP],\n    ['MS06-040', ALERT.MSF],\n    ['MS06-040', ALERT.MSF],\n    ['MS06-035', ALERT.MSF],\n    ['MS06-025', ALERT.MSF],\n    ['MS06-025', ALERT.MSF],\n    ['MS06-019', ALERT.MSF],\n    ['MS06-013', ALERT.MSF],\n    ['MS06-001', ALERT.MSF],\n    ['MS05-054', ALERT.MSF],\n    ['MS05-047', ALERT.MSF],\n    ['MS05-039', ALERT.MSF],\n    ['MS05-039', ALERT.MSF],\n    ['MS05-030', ALERT.MSF],\n    ['MS05-017', ALERT.MSF],\n    ['MS05-017', ALERT.MSF],\n    ['MS04-045', ALERT.MSF],\n    ['MS04-031', ALERT.MSF],\n    ['MS04-031', ALERT.MSF],\n    ['MS04-011', ALERT.MSF],\n    ['MS04-011', ALERT.MSF],\n    ['MS04-007', ALERT.MSF],\n    ['MS04-007', ALERT.MSF],\n    ['MS03-051', ALERT.MSF],\n    ['MS03-049', ALERT.MSF],\n    ['MS03-049', ALERT.MSF],\n    ['MS03-046', ALERT.MSF],\n    ['MS03-026', ALERT.MSF],\n    ['MS03-026', ALERT.MSF],\n    ['MS03-022', ALERT.MSF],\n    ['MS03-020', ALERT.MSF],\n    ['MS03-007', ALERT.MSF],\n    ['MS02-065', ALERT.MSF],\n    ['MS02-063', ALERT.MSF],\n    ['MS02-056', ALERT.MSF],\n    ['MS02-039', ALERT.MSF],\n    ['MS02-018', ALERT.MSF],\n    ['MS01-033', ALERT.MSF],\n    ['MS01-026', ALERT.MSF],\n    ['MS01-023', ALERT.MSF],\n    ['MS00-094', ALERT.MSF]\n  ]\n\n  # return the count of exploits  \n  if msid == 0: return len(exploits)\n\n  for exploit in exploits:\n    if msid == exploit[0]:\n      # need 3 values to unpack, in case there are resources\n      if len(exploit) == 2: \n          exploit.append(None)\n          return exploit\n      \n      # otherwise there are 3 values\n      return exploit\n  \n  return [False,False,False]\n\n# the update function\ndef update():\n\n  # compute the filenames to be used\n  filenames = '%s-mssb' % datetime.datetime.now().strftime('%Y-%m-%d')\n  xlsFile = '%s.%s' % (filenames, 'xls')\n  csvFile = '%s.%s' % (filenames, 'csv')\n\n  # url request opener with user-agent\n  opener = urllib2.build_opener()\n  opener.addheaders = [('User-agent', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.57 Safari/537.36')]\n\n  # grab the new data from ms and scrape the site\n  #try:\n  #  response = opener.open(MSSB_URL)\n  #except urllib2.URLError, e:\n  #  ALERT(\"error getting url %s\" % MSSB_URL, ALERT.BAD)\n  #  exit(1)\n  #\n  #ALERT(\"successfully requested base url\")\n  \n  # 2016-02-10, ms changed link to http://download.microsoft.com/download/6/7/3/673E4349-1CA5-40B9-8879-095C72D5B49D/BulletinSearch.xlsx\n  #\n  # now parse the data, ensure we have an mssb link\n  # <td>BulletinSearch_20131111_151603.xlsx <span class=\"green-sniff-recommend\">(recommended)</span></td>\n  #html = response.read()\n  #m = re.findall('url=(.*BulletinSearch.*.xls[x]*)', html)\n  # m = re.findall('href=\"(.*BulletinSearch.*.xlsx)\"', html) # old bulletin request url, 20140502\n\n  # ensure we get the bulletin search\n  #if m and m[0]:\n  bulletinUrl = BULLETIN_URL\n  #  ALERT(\"scraped ms download url\")\n    # if the file was xlsx, add an x to the extension\n  #  if \"xlsx\" in bulletinUrl: xlsFile += \"x\"\n  #else:\n  #  ALERT(\"error finding the ms download url from previous response\", ALERT.BAD)\n  #  exit(1)\n    \n  # now download the mssb file, with a random sleep\n  try:    \n    #sleep(randint(1,3))\n    response = opener.open(bulletinUrl)\n  except urllib2.URLError, e:\n    ALERT(\"error getting ms sb url %s\" % bulletinUrl, ALERT.BAD)\n    exit(1)\n    \n  bulletinData = response.read()\n  \n  ALERT(\"writing to file %s\" % xlsFile, ALERT.GOOD)\n  f = open(xlsFile, 'wb')\n  f.write(bulletinData)\n  f.close\n\n# modified ALERT class for exploit and metasploit level logging\nclass ALERT(object):\n  \n  def __init__(self, message, level=0, ansi=True):\n\n    # default to ansi alerting, if it's detected as windows platform then disable\n    if platform.system() is \"Windows\": ansi = False\n\n    good = '[+]'\n    bad = '[-]'\n    normal = '[*]'\n  \n    msf = '[M]'\n    exploit = '[E]'\n    \n    if ansi == True:\n      if level == ALERT.GOOD: print(\"%s%s%s\" % ('\\033[1;32m',good,\"\\033[0;0m\")),\n      elif level == ALERT.BAD: print(\"%s%s%s\" % ('\\033[1;31m',bad,\"\\033[0;0m\")),\n      elif level == ALERT.MSF: print(\"%s%s%s\" % ('\\033[1;32m',msf,\"\\033[0;0m\")),\n      elif level == ALERT.EXP: print(\"%s%s%s\" % ('\\033[1;32m',exploit,\"\\033[0;0m\")),\n      else: print(\"%s%s%s\" % ('\\033[1;34m',normal,\"\\033[0;0m\")),\n      \n    else:\n      if level == ALERT.GOOD: print('%s' % good),\n      elif level == ALERT.BAD: print('%s' % bad),\n      elif level == ALERT.MSF: print('%s' % msf),\n      elif level == ALERT.EXP: print('%s' % exploit),\n      else: print('%s' % normal),\n      \n    print message\n  \n  @staticmethod\n  @property\n  def BAD(self): return -1\n    \n  @staticmethod\n  @property\n  def NORMAL(self): return 0\n    \n  @staticmethod\n  @property\n  def GOOD(self): return 1\n    \n  @staticmethod\n  @property\n  def MSF(self): return 2\n    \n  @staticmethod\n  @property\n  def EXP(self): return 3\n\n# this helper function will merge a list of lists into one sorted set\ndef merge_list(li):\n  s = []\n  if li:\n    for l in li:\n        if isinstance(l, list): s = s + l\n        else: s.append(l)\n  return s\n\nif __name__ == '__main__':\n  main()\n\n"
        }
      ]
    }
  ]
}