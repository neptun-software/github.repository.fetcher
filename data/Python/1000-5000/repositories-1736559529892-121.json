{
  "metadata": {
    "timestamp": 1736559529892,
    "page": 121,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "idealo/image-super-resolution",
      "stars": 4688,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bumpversion.cfg",
          "type": "blob",
          "size": 0.126953125,
          "content": "[bumpversion]\ncurrent_version = 2.2.0\ncommit = False\ntag = True\n\n[bumpversion:file:setup.py]\n\n[bumpversion:file:ISR/__init__.py]\n\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0625,
          "content": "*\n!ISR\n!scripts\n!weights/sample_weights/*\n!config.yml\n!setup.py\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1171875,
          "content": "*.hdf5 filter=lfs diff=lfs merge=lfs -text\n*.ipynb linguist-language=Python\nweights filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.9560546875,
          "content": "# Created by https://www.gitignore.io/api/python\n# Edit at https://www.gitignore.io/?templates=python\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n### Python Patch ###\n.venv/\n\n### Python.VirtualEnv Stack ###\n# Virtualenv\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\n[Bb]in\n[Ii]nclude\n[Ll]ib\n[Ll]ib64\n[Ll]ocal\npyvenv.cfg\npip-selfcheck.json\n\n# End of https://www.gitignore.io/api/python\n\n# Custom\nweights/*\n!weights/sample_weights\ndata/*\n!data/input\n.DS_Store\n.idea\nlog_file\nlogs/\nmkdocs/docs/CONTRIBUTING.md\nmkdocs/docs/LICENSE.md\nmkdocs/docs/index.md\nmkdocs/docs/figures/\nmkdocs/docs/models/\nmkdocs/docs/predict/\nmkdocs/docs/assistant.md\nmkdocs/docs/utils/\nmkdocs/docs/train/\n.gitignore\n*private\n*rdsn.py\n*rrdsn.py\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.13671875,
          "content": "git:\n  lfs_skip_smudge: true\nlanguage: python\npython:\n  - 3.6\ninstall:\n  - pip install flake8 -e \".[tests, docs]\"\nscript:\n  - flake8 . --count --show-source --statistics --select=E9,F63,F7,F82\n  - pytest -vs --cov=ISR --show-capture=no --disable-pytest-warnings tests/\n  - cd mkdocs && sh build_docs.sh\ndeploy:\n  provider: pages\n  skip_cleanup: true\n  github_token: \"$GITHUB_TOKEN\"\n  local-dir: docs/\n  on:\n    branch: master\n  target_branch: gh-pages\nenv:\n  global:\n    secure: kyQNz150Rx7cagYA9Y3wIniUZX/z8w4SS33zyWuyUgcO7GFsDAr0x1o8lC3usqIiFKYlsXL40dLWSa23MR9QRw+VHwekdhZJNQ4hOD+YLRoLSbAfX2xLyHtl5QIxd7h6KCSxtmnKHlKUu2Qf29RJ9mvjwhpfh45e1gfj4TpM5rnfuQ1pO2iNOblmxRN3Q5AdapmeC3mMYeAxleFAoRAZGbCX6F+Eq7HHxh9u8brOzI3nrr0HzEz3HvLecyghRD18uz7Adgwb5Jh+7s18vqD6dagidOFFLyPwukKz5gTZcbRJGK88yhDb00cWfb6ZmVLmspC2YcCFHo6+2NOr/eND3YSJ3IPgG19u79MiaXG8lX+7SVLlzc5RPuLNSFOqCToIKm1PJQBZ+8ZzThEBO5frruKIMQKySL+bx89TRU7tI2gl9hePZcdQTdYf6tse50k/hnKNn/0XFiuac80hQIy7RG8Y+hQzNh2siVEWqTc+TkmkMqPICp+k1cvT9Sc7e/GuYS2dG53BVeog1tT5ZT2bGB9MIUDeMtGQIPOtHn61pcx/zMV8q3y9IGJPPjurJ4NaV7YcBpwcPgoaBwhlORSFw+GcpK8oXC7GPibpb3ft8fZwNrvJwI/DwMAB2MtkhM6zvor9K2fHIPZf2EPc+6CJlSG4mF3i1KQxlu+I3YDZetg=\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 2.193359375,
          "content": "- 2019-03-14 1.9.0 beta: added deep features from VGG19 and a discriminator for GAN training.\nMoved all non strictly architecture building operations outside of the model files.\nThe models are combined when needed in the Trainer class.\nIn order to allow for GAN training `fit_generator` function had to be replaced\nwith the more granular `train_on_batch`. Now the project relies on\ncustom data handlers and loggers instead of the custom Keras generator.\n\n- 1.9.2 beta: Included tutorial notebooks, modified init files for less verbose import statements.\nComprehensive docstrings refactor.\n\n- 2019-03-25 1.9.3 beta: now ISR models are child of the ImageModel class, whose purpose is to collect\ncommon functions across models. At the moment it only contains a predict function that takes numpy arrays\nas input and returns numpy arrays in a proper image format.\n\n- 2019-03-26 2.0.0 beta: brought a number of training hyperparameters to the surface of trainer and the CLI assistant.\nRemoved most hard-coded variables and improved assistant. Weights saving now allows metric selection, with suggested metrics list in assistant.\n\n- 2019-04-01 2.0.1 beta: Cleaner training session tracking: now weights are saved together with a yaml configuration file that contains hyperparameters and other relevant training details.\n  Partial migration to pathlib from os.\n\n- 2019-04-02 2.0.2 beta: Predictor uses the model parameters and the configuration file rather than inferring details from the name of the weights. Minor changes to input/output folder structure. Partial migration to pathlib.\n  Added configuration settings to pre-trained weights.\n\n- 2019-04-03 2.0.3 beta: Parametric metrics and losses in trainer. Custom weights initialization range with RandomUniform initializer.\n  Added PSNR evaluation on Y channel (for literature comparison). Automatic session config generation from trainer input parameters.\n  Uniform naming for feature extractor and name change for generator network.\n\n- 2019-04-16 2.0.5 beta: Added flatness check scheduler. Refactored some trainer variables into dictionaries for a more compact configuration summary.\n\n-2019-05-30 2.1 beta: Added large image inference. Minor fixes and added new non-artifact-removing GANS model.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.314453125,
          "content": "# Contribution Guide\n\nWe welcome any contributions whether it's,\n\n- Submitting feedback\n- Fixing bugs\n- Or implementing a new feature.\n\nPlease read this guide before making any contributions.\n\n#### Submit Feedback\nThe feedback should be submitted by creating an issue at [GitHub issues](https://github.com/idealo/image-super-resolution/issues).\nSelect the related template (bug report, feature request, or custom) and add the corresponding labels.\n\n#### Fix Bugs:\nYou may look through the [GitHub issues](https://github.com/idealo/image-super-resolution/issues) for bugs.\n\n#### Implement Features\nYou may look through the [GitHub issues](https://github.com/idealo/image-super-resolution/issues) for feature requests.\n\n## Pull Requests (PR)\n1. Fork the repository and a create a new branch from the master branch.\n2. For bug fixes, add new tests and for new features please add changes to the documentation.\n3. Do a PR from your new branch to our `dev` branch of the original Image Super-Resolution repo.\n\n## Documentation\n- Make sure any new function or class you introduce has proper docstrings.\n\n## Testing\n- We use [pytest](https://docs.pytest.org/en/latest/) for our testing. Make sure to write tests for any new feature and/or bug fixes.\n\n## Main Contributor List\nWe maintain a list of main contributors to appreciate all the contributions.\n"
        },
        {
          "name": "Dockerfile.cpu",
          "type": "blob",
          "size": 0.599609375,
          "content": "FROM tensorflow/tensorflow:1.13.1-py3\n\n# Install system packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      bzip2 \\\n      g++ \\\n      git \\\n      graphviz \\\n      libgl1-mesa-glx \\\n      libhdf5-dev \\\n      openmpi-bin \\\n      screen \\\n      wget && \\\n    rm -rf /var/lib/apt/lists/* \\\n    apt-get upgrade\n\nENV TENSOR_HOME /home/isr\nWORKDIR $TENSOR_HOME\n\nCOPY ISR ./ISR\nCOPY scripts ./scripts\nCOPY weights ./weights\nCOPY config.yml ./\nCOPY setup.py ./\n\nRUN pip install --upgrade pip\nRUN pip install -e .\n\nENV PYTHONPATH ./ISR/:$PYTHONPATH\nENTRYPOINT [\"sh\", \"./scripts/entrypoint.sh\"]\n"
        },
        {
          "name": "Dockerfile.gpu",
          "type": "blob",
          "size": 0.62890625,
          "content": "FROM tensorflow/tensorflow:1.13.1-gpu-py3\n\n# Install system packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      bzip2 \\\n      g++ \\\n      git \\\n      graphviz \\\n      libgl1-mesa-glx \\\n      libhdf5-dev \\\n      openmpi-bin \\\n      screen \\\n      wget && \\\n    rm -rf /var/lib/apt/lists/* \\\n    apt-get upgrade\n\nENV TENSOR_HOME /home/isr\nWORKDIR $TENSOR_HOME\n\nCOPY ISR ./ISR\nCOPY scripts ./scripts\nCOPY weights ./weights\nCOPY config.yml ./\nCOPY setup.py ./\n\nRUN pip install --upgrade pip\nRUN pip install -e \".[gpu]\" --ignore-installed\n\nENV PYTHONPATH ./ISR/:$PYTHONPATH\nENTRYPOINT [\"sh\", \"./scripts/entrypoint.sh\"]\n"
        },
        {
          "name": "ISR",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1484375,
          "content": "Copyright 2018 idealo internet GmbH. All rights reserved.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.765625,
          "content": "# Image Super-Resolution (ISR)\n\n<img src=\"figures/butterfly.png\">\n\n[![Build Status](https://travis-ci.org/idealo/image-super-resolution.svg?branch=master)](https://travis-ci.org/idealo/image-super-resolution)\n[![Docs](https://img.shields.io/badge/docs-online-brightgreen)](https://idealo.github.io/image-super-resolution/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-orange.svg)](https://github.com/idealo/image-super-resolution/blob/master/LICENSE)\n\nThe goal of this project is to upscale and improve the quality of low resolution images.\n\nSince the code is no longer actively maintained, it will be archived on 2025-01-03.\n\nThis project contains Keras implementations of different Residual Dense Networks for Single Image Super-Resolution (ISR) as well as scripts to train these networks using content and adversarial loss components.  \n\nThe implemented networks include:\n\n- The super-scaling Residual Dense Network described in [Residual Dense Network for Image Super-Resolution](https://arxiv.org/abs/1802.08797) (Zhang et al. 2018)\n- The super-scaling Residual in Residual Dense Network described in [ESRGAN: Enhanced Super-Resolution Generative Adversarial Networks](https://arxiv.org/abs/1809.00219) (Wang et al. 2018)\n- A multi-output version of the Keras VGG19 network for deep features extraction used in the perceptual loss\n- A custom discriminator network based on the one described in [Photo-Realistic Single Image Super-Resolution Using a Generative Adversarial Network](https://arxiv.org/abs/1609.04802) (SRGANS, Ledig et al. 2017)\n\nRead the full documentation at: [https://idealo.github.io/image-super-resolution/](https://idealo.github.io/image-super-resolution/).\n\n[Docker scripts](https://idealo.github.io/image-super-resolution/tutorials/docker/) and [Google Colab notebooks](https://github.com/idealo/image-super-resolution/tree/master/notebooks) are available to carry training and prediction. Also, we provide scripts to facilitate training on the cloud with AWS and [nvidia-docker](https://github.com/NVIDIA/nvidia-docker) with only a few commands.\n\nISR is compatible with Python 3.6 and is distributed under the Apache 2.0 license. We welcome any kind of contribution. If you wish to contribute, please see the [Contribute](#contribute) section.\n\n## Contents\n- [Pre-trained networks](#pre-trained-networks)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Additional Information](#additional-information)\n- [Contribute](#contribute)\n- [Citation](#citation)\n- [Maintainers](#maintainers)\n- [License](#copyright)\n\n## Troubleshooting\n### Training not delivering good/patchy results\nWhen training your own model, start with only PSNR loss (50+ epochs, depending on the dataset) and only then introduce GANS and feature loss. This can be controlled by the loss weights argument.\n\nThis is just sample, you will need to tune these parameters.\n\nPSNR only:\n```\nloss_weights = {\n  'generator': 1.0,\n  'feature_extractor': 0.0,\n  'discriminator': 0.00\n}\n```\n\nLater:\n```\nloss_weights = {\n  'generator': 0.0,\n  'feature_extractor': 0.0833,\n  'discriminator': 0.01\n}\n```\n### Weights loading\nIf you are having trouble loading your own weights or the pre-trained weights (`AttributeError: 'str' object has no attribute 'decode'`), try:\n```bash\npip install 'h5py==2.10.0' --force-reinstall\n```\n[Issue](https://github.com/idealo/image-super-resolution/issues/197#issue-877826405)\n\n## Pre-trained networks\n\nThe weights used to produced these images are available directly when creating the model object. \n\nCurrently 4 models are available:\n  - RDN: psnr-large, psnr-small, noise-cancel\n  - RRDN: gans\n \nExample usage:\n\n```\nmodel = RRDN(weights='gans')\n```\n  \nThe network parameters will be automatically chosen.\n(see [Additional Information](#additional-information)).\n\n#### Basic model\nRDN model, PSNR driven, choose the option ```weights='psnr-large'``` or ```weights='psnr-small'``` when creating a RDN model.\n\n|![butterfly-sample](figures/butterfly_comparison_SR_baseline.png)|\n|:--:|\n| Low resolution image (left), ISR output (center), bicubic scaling (right). Click to zoom. |\n#### GANS model\nRRDN model, trained with Adversarial and VGG features losses, choose the option ```weights='gans'``` when creating a RRDN model.\n\n|![baboon-comparison](figures/baboon-compare.png)|\n|:--:|\n| RRDN GANS model (left), bicubic upscaling (right). |\n-> [more detailed comparison](http://www.framecompare.com/screenshotcomparison/PGZPNNNX)\n\n#### Artefact Cancelling GANS model\nRDN model, trained with Adversarial and VGG features losses, choose the option ```weights='noise-cancel'``` when creating a RDN model.\n\n|![temple-comparison](figures/temple_comparison.png)|\n|:--:|\n| Standard vs GANS model. Click to zoom. |\n\n\n|![sandal-comparison](figures/sandal-compare.png)|\n|:--:|\n| RDN GANS artefact cancelling model (left), RDN standard PSNR driven model (right). |\n-> [more detailed comparison](http://www.framecompare.com/screenshotcomparison/2ECCNNNU)\n\n\n## Installation\nThere are two ways to install the Image Super-Resolution package:\n\n- Install ISR from PyPI (recommended):\n```\npip install ISR\n```\n- Install ISR from the GitHub source:\n```\ngit clone https://github.com/idealo/image-super-resolution\ncd image-super-resolution\npython setup.py install\n```\n\n## Usage\n\n### Prediction\n\nLoad image and prepare it\n```python\nimport numpy as np\nfrom PIL import Image\n\nimg = Image.open('data/input/test_images/sample_image.jpg')\nlr_img = np.array(img)\n```\n\nLoad a pre-trained model and run prediction (check the prediction tutorial under notebooks for more details)\n```python\nfrom ISR.models import RDN\n\nrdn = RDN(weights='psnr-small')\nsr_img = rdn.predict(lr_img)\nImage.fromarray(sr_img)\n```\n\n#### Large image inference\nTo predict on large images and avoid memory allocation errors, use the `by_patch_of_size` option for the predict method, for instance\n```\nsr_img = model.predict(image, by_patch_of_size=50)\n```\nCheck the documentation of the `ImageModel` class for further details.\n\n### Training\n\nCreate the models\n```python\nfrom ISR.models import RRDN\nfrom ISR.models import Discriminator\nfrom ISR.models import Cut_VGG19\n\nlr_train_patch_size = 40\nlayers_to_extract = [5, 9]\nscale = 2\nhr_train_patch_size = lr_train_patch_size * scale\n\nrrdn  = RRDN(arch_params={'C':4, 'D':3, 'G':64, 'G0':64, 'T':10, 'x':scale}, patch_size=lr_train_patch_size)\nf_ext = Cut_VGG19(patch_size=hr_train_patch_size, layers_to_extract=layers_to_extract)\ndiscr = Discriminator(patch_size=hr_train_patch_size, kernel_size=3)\n```\n\nCreate a Trainer object using the desired settings and give it the models (`f_ext` and `discr` are optional)\n```python\nfrom ISR.train import Trainer\nloss_weights = {\n  'generator': 0.0,\n  'feature_extractor': 0.0833,\n  'discriminator': 0.01\n}\nlosses = {\n  'generator': 'mae',\n  'feature_extractor': 'mse',\n  'discriminator': 'binary_crossentropy'\n}\n\nlog_dirs = {'logs': './logs', 'weights': './weights'}\n\nlearning_rate = {'initial_value': 0.0004, 'decay_factor': 0.5, 'decay_frequency': 30}\n\nflatness = {'min': 0.0, 'max': 0.15, 'increase': 0.01, 'increase_frequency': 5}\n\ntrainer = Trainer(\n    generator=rrdn,\n    discriminator=discr,\n    feature_extractor=f_ext,\n    lr_train_dir='low_res/training/images',\n    hr_train_dir='high_res/training/images',\n    lr_valid_dir='low_res/validation/images',\n    hr_valid_dir='high_res/validation/images',\n    loss_weights=loss_weights,\n    learning_rate=learning_rate,\n    flatness=flatness,\n    dataname='image_dataset',\n    log_dirs=log_dirs,\n    weights_generator=None,\n    weights_discriminator=None,\n    n_validation=40,\n)\n```\n\nStart training\n```python\ntrainer.train(\n    epochs=80,\n    steps_per_epoch=500,\n    batch_size=16,\n    monitored_metrics={'val_PSNR_Y': 'max'}\n)\n```\n\n## Additional Information\nYou can read about how we trained these network weights in our Medium posts:\n- part 1: [A deep learning based magnifying glass](https://medium.com/idealo-tech-blog/a-deep-learning-based-magnifying-glass-dae1f565c359)\n- part 2: [Zoom in... enhance](https://medium.com/idealo-tech-blog/zoom-in-enhance-a-deep-learning-based-magnifying-glass-part-2-c021f98ebede\n)\n\n### RDN Pre-trained weights\nThe weights of the RDN network trained on the [DIV2K dataset](https://data.vision.ee.ethz.ch/cvl/DIV2K) are available in ```weights/sample_weights/rdn-C6-D20-G64-G064-x2/PSNR-driven/rdn-C6-D20-G64-G064-x2_PSNR_epoch086.hdf5```. <br>\nThe model was trained using ```C=6, D=20, G=64, G0=64``` as parameters (see architecture for details) for 86 epochs of 1000 batches of 8 32x32 augmented patches taken from LR images.\n\nThe artefact can cancelling weights obtained with a combination of different training sessions using different datasets and perceptual loss with VGG19 and GAN can be found at `weights/sample_weights/rdn-C6-D20-G64-G064-x2/ArtefactCancelling/rdn-C6-D20-G64-G064-x2_ArtefactCancelling_epoch219.hdf5`\nWe recommend using these weights only when cancelling compression artefacts is a desirable effect.\n\n### RDN Network architecture\nThe main parameters of the architecture structure are:\n- D - number of Residual Dense Blocks (RDB)\n- C - number of convolutional layers stacked inside a RDB\n- G - number of feature maps of each convolutional layers inside the RDBs\n- G0 - number of feature maps for convolutions outside of RDBs and of each RBD output\n\n<img src=\"figures/RDN.png\" width=\"600\">\n<br>\n\n<img src=\"figures/RDB.png\" width=\"600\">\n\nsource: [Residual Dense Network for Image Super-Resolution](https://arxiv.org/abs/1802.08797)\n\n### RRDN Network architecture\nThe main parameters of the architecture structure are:\n- T - number of Residual in Residual Dense Blocks (RRDB)\n- D - number of Residual Dense Blocks (RDB) insider each RRDB\n- C - number of convolutional layers stacked inside a RDB\n- G - number of feature maps of each convolutional layers inside the RDBs\n- G0 - number of feature maps for convolutions outside of RDBs and of each RBD output\n\n<img src=\"figures/RRDN.jpg\" width=\"600\">\n<br>\n\n<img src=\"figures/RRDB.png\" width=\"600\">\n\nsource: [ESRGAN: Enhanced Super-Resolution Generative Adversarial Networks](https://arxiv.org/abs/1809.00219)\n\n## Contribute\nWe welcome all kinds of contributions, models trained on different datasets, new model architectures and/or hyperparameters combinations that improve the performance of the currently published model.\n\nWill publish the performances of new models in this repository.\n\nSee the [Contribution](CONTRIBUTING.md) guide for more details.\n\n#### Bump version\nTo bump up the version, use\n```\nbumpversion {part} setup.py\n```\n\n## Citation\nPlease cite our work in your publications if it helps your research.\n\n```BibTeX\n@misc{cardinale2018isr,\n  title={ISR},\n  author={Francesco Cardinale et al.},\n  year={2018},\n  howpublished={\\url{https://github.com/idealo/image-super-resolution}},\n}\n```\n\n## Maintainers\n* Francesco Cardinale, github: [cfrancesco](https://github.com/cfrancesco)\n* Dat Tran, github: [datitran](https://github.com/datitran)\n\n## Copyright\n\nSee [LICENSE](LICENSE) for details.\n"
        },
        {
          "name": "config.yml",
          "type": "blob",
          "size": 1.615234375,
          "content": "---\ndefault:\n  generator: rdn\n  feature_extractor: false\n  discriminator: false\n  training_set: div2k\n  test_set: sample\nlog_dirs:\n  logs: ./logs\n  weights: ./weights\nfeature_extractor:\n  vgg19:\n    layers_to_extract:\n      - 5\n      - 9\ngenerators:\n  rrdn:\n    C: 4\n    D: 3\n    G: 32\n    G0: 32\n    T: 4\n    x: 4\n  rdn:\n    C: 6\n    D: 20\n    G: 64\n    G0: 64\n    x: 2\nloss_weights:\n  generator: 1.0\n  feature_extractor: 0.0833\n  discriminator: 0.01\nlosses:\n  generator: mae\n  discriminator: binary_crossentropy\n  feature_extractor: mse\nsession:\n  prediction:\n    patch_size:\n  training:\n    steps_per_epoch: 1000\n    patch_size: 32\n    batch_size: 16\n    epochs: 300\n    n_validation_samples: 100\n    learning_rate:\n      initial_value: 0.0004\n      decay_frequency: 50\n      decay_factor: 0.5\n    fallback_save_every_n_epochs: 2\n    flatness:\n      min: 0.0\n      increase_frequency: null\n      increase: 0.0\n      max: 0.0\n    metrics:\n      generator: PSNR_Y\n    monitored_metrics:\n      val_loss: min\n      val_PSNR_Y: max\n    adam_optimizer:\n      beta1: 0.9\n      beta2: 0.999\n      epsilon: null\ntest_sets:\n  sample: ./data/input/sample\ntraining_sets:\n  custom data:\n    lr_train_dir: ./data/custom/lr/train\n    hr_train_dir: ./data/custom/hr/train\n    lr_valid_dir: ./data/custom/lr/validation\n    hr_valid_dir: ./data/custom/hr/validation\n    data_name: custom\n  div2k:\n    lr_train_dir: ./data/DIV2K/DIV2K_train_LR_bicubic/X2\n    hr_train_dir: ./data/DIV2K/DIV2K_train_HR\n    lr_valid_dir: ./data/DIV2K/DIV2K_valid_LR_bicubic/X2\n    hr_valid_dir: ./data/DIV2K/DIV2K_valid_HR\n    data_name: div2k\nweights_paths:\n  discriminator:\n  generator:\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "figures",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "notebooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pypi.sh",
          "type": "blob",
          "size": 0.0859375,
          "content": "#!/usr/bin/env bash\n\nrm -rf dist/\npython setup.py sdist bdist_wheel\ntwine upload dist/*\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0390625,
          "content": "[metadata]\ndescription-file = README.md\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.38671875,
          "content": "from setuptools import setup, find_packages\n\nlong_description = '''\nISR (Image Super-Resolution) is a library to upscale and improve the quality of low resolution images.\n\nRead the documentation at: https://idealo.github.io/image-super-resolution/\n\nISR is compatible with Python 3.6 and is distributed under the Apache 2.0 license.\n'''\n\nsetup(\n    name='ISR',\n    version='2.2.0',\n    author='Francesco Cardinale',\n    author_email='testadicardi@gmail.com',\n    description='Image Super Resolution',\n    long_description=long_description,\n    license='Apache 2.0',\n    install_requires=['imageio', 'numpy', 'tensorflow==2.*', 'tqdm', 'pyaml', 'h5py==2.10.0'],\n    extras_require={\n        'tests': ['pytest==4.3.0', 'pytest-cov==2.6.1'],\n        'docs': ['mkdocs==1.0.4', 'mkdocs-material==4.0.2'],\n        'gpu': ['tensorflow-gpu==2.*'],\n        'dev': ['bumpversion==0.5.3'],\n    },\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Intended Audience :: Developers',\n        'Intended Audience :: Education',\n        'Intended Audience :: Science/Research',\n        'License :: OSI Approved :: Apache Software License',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.6',\n        'Topic :: Software Development :: Libraries',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n    ],\n    packages=find_packages(exclude=('tests',)),\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "weights",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}