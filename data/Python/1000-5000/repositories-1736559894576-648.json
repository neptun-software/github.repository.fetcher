{
  "metadata": {
    "timestamp": 1736559894576,
    "page": 648,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "django-haystack/django-haystack",
      "stars": 3634,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.525390625,
          "content": "# See http://editorconfig.org for format details and\n# http://editorconfig.org/#download for editor / IDE integration\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nend_of_line = lf\ncharset = utf-8\n\n# Makefiles always use tabs for indentation\n[Makefile]\nindent_style = tab\n\n[*.{yaml,yml}]\nindent_size = 2\n\n# We don't want to apply our defaults to third-party code or minified bundles:\n[**/{external,vendor}/**,**.min.{js,css}]\nindent_style = ignore\nindent_size = ignore\n"
        },
        {
          "name": ".gitchangelog.rc",
          "type": "blob",
          "size": 6.087890625,
          "content": "##\n## Format\n##\n##   ACTION: [AUDIENCE:] COMMIT_MSG [!TAG ...]\n##\n## Description\n##\n##   ACTION is one of 'chg', 'fix', 'new'\n##\n##       Is WHAT the change is about.\n##\n##       'chg' is for refactor, small improvement, cosmetic changes...\n##       'fix' is for bug fixes\n##       'new' is for new features, big improvement\n##\n##   AUDIENCE is optional and one of 'dev', 'usr', 'pkg', 'test', 'doc'\n##\n##       Is WHO is concerned by the change.\n##\n##       'dev'  is for developpers (API changes, refactors...)\n##       'usr'  is for final users (UI changes)\n##       'pkg'  is for packagers   (packaging changes)\n##       'test' is for testers     (test only related changes)\n##       'doc'  is for doc guys    (doc only changes)\n##\n##   COMMIT_MSG is ... well ... the commit message itself.\n##\n##   TAGs are additionnal adjective as 'refactor' 'minor' 'cosmetic'\n##\n##       They are preceded with a '!' or a '@' (prefer the former, as the\n##       latter is wrongly interpreted in github.) Commonly used tags are:\n##\n##       'refactor' is obviously for refactoring code only\n##       'minor' is for a very meaningless change (a typo, adding a comment)\n##       'cosmetic' is for cosmetic driven change (re-indentation, 80-col...)\n##       'wip' is for partial functionality but complete subfunctionality.\n##\n## Example:\n##\n##   new: usr: support of bazaar implemented\n##   chg: re-indentend some lines !cosmetic\n##   new: dev: updated code to be compatible with last version of killer lib.\n##   fix: pkg: updated year of licence coverage.\n##   new: test: added a bunch of test around user usability of feature X.\n##   fix: typo in spelling my name in comment. !minor\n##\n##   Please note that multi-line commit message are supported, and only the\n##   first line will be considered as the \"summary\" of the commit message. So\n##   tags, and other rules only applies to the summary.  The body of the commit\n##   message will be displayed in the changelog without reformatting.\n\n\n##\n## ``ignore_regexps`` is a line of regexps\n##\n## Any commit having its full commit message matching any regexp listed here\n## will be ignored and won't be reported in the changelog.\n##\nignore_regexps = [\n        r'@minor', r'!minor',\n        r'@cosmetic', r'!cosmetic',\n        r'@refactor', r'!refactor',\n        r'@wip', r'!wip',\n        r'^([cC]hg|[fF]ix|[nN]ew)\\s*:\\s*[p|P]kg:',\n        r'^([cC]hg|[fF]ix|[nN]ew)\\s*:\\s*[d|D]ev:',\n        r'^(.{3,3}\\s*:)?\\s*[fF]irst commit.?\\s*$',\n  ]\n\n\n## ``section_regexps`` is a list of 2-tuples associating a string label and a\n## list of regexp\n##\n## Commit messages will be classified in sections thanks to this. Section\n## titles are the label, and a commit is classified under this section if any\n## of the regexps associated is matching.\n##\nsection_regexps = [\n    ('New', [\n\tr'^[nN]ew\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n    ('Changes', [\n        r'^[cC]hg\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n    ('Fix', [\n        r'^[fF]ix\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n\n    ('Other', None ## Match all lines\n     ),\n\n]\n\n\n## ``body_process`` is a callable\n##\n## This callable will be given the original body and result will\n## be used in the changelog.\n##\n## Available constructs are:\n##\n##   - any python callable that take one txt argument and return txt argument.\n##\n##   - ReSub(pattern, replacement): will apply regexp substitution.\n##\n##   - Indent(chars=\"  \"): will indent the text with the prefix\n##     Please remember that template engines gets also to modify the text and\n##     will usually indent themselves the text if needed.\n##\n##   - Wrap(regexp=r\"\\n\\n\"): re-wrap text in separate paragraph to fill 80-Columns\n##\n##   - noop: do nothing\n##\n##   - ucfirst: ensure the first letter is uppercase.\n##     (usually used in the ``subject_process`` pipeline)\n##\n##   - final_dot: ensure text finishes with a dot\n##     (usually used in the ``subject_process`` pipeline)\n##\n##   - strip: remove any spaces before or after the content of the string\n##\n## Additionally, you can `pipe` the provided filters, for instance:\n#body_process = Wrap(regexp=r'\\n(?=\\w+\\s*:)') | Indent(chars=\"  \")\n#body_process = Wrap(regexp=r'\\n(?=\\w+\\s*:)')\n#body_process = noop\nbody_process = ReSub(r'((^|\\n)[A-Z]\\w+(-\\w+)*: .*(\\n\\s+.*)*)+$', r'') | strip\n\n\n## ``subject_process`` is a callable\n##\n## This callable will be given the original subject and result will\n## be used in the changelog.\n##\n## Available constructs are those listed in ``body_process`` doc.\nsubject_process = (strip |\n    ReSub(r'^([cC]hg|[fF]ix|[nN]ew)\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n@]*)(@[a-z]+\\s+)*$', r'\\4') |\n    ucfirst | final_dot)\n\n\n## ``tag_filter_regexp`` is a regexp\n##\n## Tags that will be used for the changelog must match this regexp.\n##\ntag_filter_regexp = r'^v[0-9]+\\.[0-9]+(\\.[0-9]+)?$'\n\n\n## ``unreleased_version_label`` is a string\n##\n## This label will be used as the changelog Title of the last set of changes\n## between last valid tag and HEAD if any.\nunreleased_version_label = \"%%version%% (unreleased)\"\n\n\n## ``output_engine`` is a callable\n##\n## This will change the output format of the generated changelog file\n##\n## Available choices are:\n##\n##   - rest_py\n##\n##        Legacy pure python engine, outputs ReSTructured text.\n##        This is the default.\n##\n##   - mustache(<template_name>)\n##\n##        Template name could be any of the available templates in\n##        ``templates/mustache/*.tpl``.\n##        Requires python package ``pystache``.\n##        Examples:\n##           - mustache(\"markdown\")\n##           - mustache(\"restructuredtext\")\n##\n##   - makotemplate(<template_name>)\n##\n##        Template name could be any of the available templates in\n##        ``templates/mako/*.tpl``.\n##        Requires python package ``mako``.\n##        Examples:\n##           - makotemplate(\"restructuredtext\")\n##\noutput_engine = rest_py\n#output_engine = mustache(\"restructuredtext\")\n#output_engine = mustache(\"markdown\")\n#output_engine = makotemplate(\"restructuredtext\")\n\n\n## ``include_merge`` is a boolean\n##\n## This option tells git-log whether to include merge commits in the log.\n## The default is to include them.\ninclude_merge = True\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.19140625,
          "content": ".settings\n*.pyc\n.DS_Store\n_build\n.*.sw[po]\n*.egg-info\ndist\nbuild\nMANIFEST\n.tox\nenv\nenv3\n*.egg\n.eggs\n.coverage\n.idea\n\n# Build artifacts from test setup\n*.tgz\ntest_haystack/solr_tests/server/solr4/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.2763671875,
          "content": "ci:\n  autoupdate_schedule: monthly\nexclude: \".*/vendor/.*\"\nrepos:\n  - repo: https://github.com/adamchainz/django-upgrade\n    rev: 1.20.0\n    hooks:\n      - id: django-upgrade\n        args: [--target-version, \"5.1\"] # Replace with Django version\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.6.3\n    hooks:\n      - id: ruff\n        # args: [ --fix, --exit-non-zero-on-fix ]\n\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n\n  - repo: https://github.com/psf/black\n    rev: 24.8.0\n    hooks:\n      - id: black\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n      - id: check-added-large-files\n        args: [\"--maxkb=128\"]\n      - id: check-ast\n      - id: check-byte-order-marker\n      - id: check-case-conflict\n      - id: check-docstring-first\n      - id: check-executables-have-shebangs\n      - id: check-json\n      - id: check-merge-conflict\n      - id: check-symlinks\n      - id: check-toml\n      - id: check-xml\n      - id: check-yaml\n      - id: debug-statements\n      - id: detect-private-key\n      - id: end-of-file-fixer\n      - id: mixed-line-ending\n        args: [\"--fix=lf\"]\n      - id: pretty-format-json\n        args: [\"--autofix\", \"--no-sort-keys\", \"--indent=4\"]\n      - id: trailing-whitespace\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.2314453125,
          "content": "# Read the Docs configuration file for Sphinx projects\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n\nsphinx:\n  configuration: docs/conf.py\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 8.1171875,
          "content": "Primary Authors:\n\n    * Daniel Lindsley\n    * Matt Croydon (some documentation, sanity checks and the sweet name)\n    * Travis Cline (the original SQ implementation, improvements to ModelSearchIndex)\n    * David Sauve (notanumber) for the Xapian backend, the simple backend and various patches.\n    * Jannis Leidel (jezdez)\n    * Chris Adams (acdha)\n    * Justin Caratzas (bigjust)\n    * Andrew Schoen (andrewschoen)\n    * Dan Watson (dcwatson)\n    * Matt Woodward (mpwoodward)\n    * Alex Vidal (avidal)\n    * Zach Smith (zmsmith)\n    * Stefan Wehrmeyer (stefanw)\n    * George Hickman (ghickman)\n    * Ben Spaulding (benspaulding)\n\n\nThanks to\n    * Jacob Kaplan-Moss & Joseph Kocherhans for the original implementation of\n      djangosearch, of which portions were used, as well as basic API feedback.\n    * Christian Metts for designing the logo and building a better site.\n    * Nathan Borror for testing and advanced form usage.\n    * Malcolm Tredinnick for API feedback.\n    * Mediaphormedia for funding the development on More Like This and faceting.\n    * Travis Cline for API feedback, Git help and improvements to the reindex command.\n    * Brian Rosner for various patches.\n    * Richard Boulton for feedback and suggestions.\n    * Cyberdelia for feedback and patches.\n    * Ask Solem for for patching the setup.py.\n    * Ben Spaulding for feedback and documentation patches.\n    * smulloni for various patches.\n    * JoeGermuska for various patches.\n    * SmileyChris for various patches.\n    * sk1p for various patches.\n    * Ryszard Szopa (ryszard) for various patches.\n    * Patryk Zawadzki (patrys) for various patches and feedback.\n    * Frank Wiles for documentation patches.\n    * Chris Adams (acdha) for various patches.\n    * Kyle MacFarlane for various patches.\n    * Alex Gaynor (alex) for help with handling deferred models with More Like This.\n    * RobertGawron for a patch to the Highlighter.\n    * Simon Willison (simonw) for various proposals and patches.\n    * Ben Firshman (bfirsh) for faceting improvements and suggestions.\n    * Peter Bengtsson for a patch regarding passing a customized site.\n    * Sam Bull (osirius) for a patch regarding initial data on SearchForms.\n    * slai for a patch regarding Whoosh and fetching all documents of a certain model type.\n    * alanwj for a patch regarding Whoosh and empty MultiValueFields.\n    * alanzoppa for a patch regarding highlighting.\n    * piquadrat for a patch regarding the more_like_this template tag.\n    * dedsm for a patch regarding the pickling of SearchResult objects.\n    * EmilStenstrom for a patch to the Highlighter.\n    * symroe for a patch regarding the more_like_this template tag.\n    * ghostrocket for a patch regarding the simple backend.\n    * Rob Hudson (robhudson) for improvements to the admin search.\n    * apollo13 for simplifying ``SearchForm.__init__``.\n    * Carl Meyer (carljm) for a patch regarding character primary keys.\n    * oyiptong for a patch regarding pickling.\n    * alfredo for a patch to generate epub docs.\n    * Luke Hatcher (lukeman) for documentation patches.\n    * Trey Hunner (treyhunner) for a Whoosh field boosting patch.\n    * Kent Gormat of Retail Catalyst for funding the development of multiple index support.\n    * Gidsy for funding the initial geospatial implementation\n    * CMGdigital for funding the development on:\n        * a multiprocessing-enabled version of ``update_index``.\n        * the addition of ``--start/--end`` options in ``update_index``.\n        * the ability to specify both apps & models to ``update_index``.\n        * A significant portion of the geospatial feature.\n        * A significant portion of the input types feature.\n    * Aram Dulyan (Aramgutang) for fixing the included admin class to be Django 1.4 compatible.\n    * Honza Kral (HonzaKral) for various Elasticsearch tweaks & testing.\n    * Alex Vidal (avidal) for a patch allowing developers to override the queryset used for update operations.\n    * Igor Támara (ikks) for a patch related to Unicode ``verbose_name_plural``.\n    * Dan Helfman (witten) for a patch related to highlighting.\n    * Matt DeBoard for refactor of ``SolrSearchBackend.search`` method to allow simpler extension of the class.\n    * Rodrigo Guzman (rz) for a fix to query handling in the ``simple`` backend.\n    * Martin J. Laubach (mjl) for fixing the logic used when combining querysets\n    * Eric Holscher (ericholscher) for a docs fix.\n    * Erik Rose (erikrose) for a quick pyelasticsearch-compatibility patch\n    * Stefan Wehrmeyer (stefanw) for a simple search filter fix\n    * Dan Watson (dcwatson) for various patches.\n    * Andrew Schoen (andrewschoen) for the addition of ``HAYSTACK_IDENTIFIER_METHOD``\n    * Pablo SEMINARIO (pabluk) for a docs fix, and a fix in the ElasticSearch backend.\n    * Eric Thurgood (ethurgood) for a import fix in the Elasticssearch backend.\n    * Revolution Systems & The Python Software Foundation for funding a significant portion of the port to Python 3!\n    * Artem Kostiuk (postatum) for patch allowing to search for slash character in ElasticSearch since Lucene 4.0.\n    * Luis Barrueco (luisbarrueco) for a simple fix regarding updating indexes using multiple backends.\n    * Szymon Teżewski (jasisz) for an update to the bounding-box calculation for spatial queries\n    * Chris Wilson (qris) and Orlando Fiol (overflow) for an update allowing the use of multiple order_by()\n      fields with Whoosh as long as they share a consistent sort direction\n    * Steven Skoczen (@skoczen) for an ElasticSearch bug fix\n    * @Xaroth for updating the app loader to be compatible with Django 1.7\n    * Jaroslav Gorjatsev (jarig) for a bugfix with index_fieldname\n    * Dirk Eschler (@deschler) for app loader Django 1.7 compatibility fixes\n    * Wictor (wicol) for a patch improving the error message given when model_attr references a non-existent\n      field\n    * Pierre Dulac (dulaccc) for a patch updating distance filters for ElasticSearch 1.x\n    * Andrei Fokau (andreif) for adding support for ``SQ`` in ``SearchQuerySet.narrow()``\n    * Phill Tornroth (phill-tornroth) for several patches improving UnifiedIndex and ElasticSearch support\n    * Philippe Luickx (philippeluickx) for documenting how to provide backend-specific facet options\n    * Felipe Prenholato (@chronossc) for a patch making it easy to exclude documents from indexing using custom logic\n    * Alfredo Armanini (@phingage) for a patch fixing compatibility with database API changes in Django 1.8\n    * Ben Spaulding (@benspaulding) for many updates for Django 1.8 support\n    * Troy Grosfield (@troygrosfield) for fixing the test runner for Django 1.8\n    * Ilan Steemers (@Koed00) for fixing Django 1.9 deprecation warnings\n    * Ana Carolina (@anacarolinats) and Steve Bussetti (@sbussetti) for adding the ``fuzzy`` operator to\n      SearchQuerySet\n    * Tadas Dailyda (@skirsdeda) for various patches\n    * Craig de Stigter (@craigds) for a patch fixing concurrency issues when building UnifiedIndex\n    * Claude Paroz (@claudep) for Django 1.9 support\n    * Chris Brooke (@chrisbrooke) for patching around a backwards-incompatible change in ElasticSearch 2\n    * Gilad Beeri (@giladbeeri) for adding retries when updating a backend\n    * Arjen Verstoep (@terr) for a patch that allows attribute lookups through Django ManyToManyField relationships\n    * Tim Babych (@tymofij) for enabling backend-specific parameters in ``.highlight()``\n    * Antony Raj (@antonyr) for adding endswith input type and fixing contains input type\n    * Morgan Aubert (@ellmetha) for Django 1.10 support\n    * João Junior (@joaojunior) and Bruno Marques (@ElSaico) for Elasticsearch 2.x support\n    * Alex Tomkins (@tomkins) for various patches\n    * Martin Pauly (@mpauly) for Django 2.0 support\n    * Ryan Jarvis (@cabalist) for some code cleanup\n    * Dulmandakh Sukhbaatar (@dulmandakh) for GitHub Actions support, and flake8, black, isort checks.\n    * Deniz Dogan (@denizdogan) for adding support for the ``analyzer`` parameter for the Whoosh backend\n    * parruc for basic Whoosh faceting support\n    * Jens Kadenbach (audax) for updating and testing Whoosh faceting support\n    * Alejandro Sedeño (asedeno) trying the Whoosh faceting thing again\n    * Fábio Piovam (fabiopiovam) for date_facet on Solr 6.6+\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.0224609375,
          "content": "# Contributing\n\nHaystack is open-source and, as such, grows (or shrinks) & improves in part\ndue to the community. Below are some guidelines on how to help with the project.\n\n## Philosophy\n\n-   Haystack is BSD-licensed. All contributed code must be either\n    -   the original work of the author, contributed under the BSD, or...\n    -   work taken from another project released under a BSD-compatible license.\n-   GPL'd (or similar) works are not eligible for inclusion.\n-   Haystack's git master branch should always be stable, production-ready &\n    passing all tests.\n-   Major releases (1.x.x) are commitments to backward-compatibility of the public APIs.\n    Any documented API should ideally not change between major releases.\n    The exclusion to this rule is in the event of either a security issue\n    or to accommodate changes in Django itself.\n-   Minor releases (x.3.x) are for the addition of substantial features or major\n    bugfixes.\n-   Patch releases (x.x.4) are for minor features or bugfixes.\n\n## Guidelines For Reporting An Issue/Feature\n\nSo you've found a bug or have a great idea for a feature. Here's the steps you\nshould take to help get it added/fixed in Haystack:\n\n-   First, check to see if there's an existing issue/pull request for the\n    bug/feature. All issues are at https://github.com/django-haystack/django-haystack/issues\n    and pull reqs are at https://github.com/django-haystack/django-haystack/pulls.\n-   If there isn't one there, please file an issue. The ideal report includes:\n    -   A description of the problem/suggestion.\n    -   How to recreate the bug.\n    -   If relevant, including the versions of your:\n        -   Python interpreter\n        -   Django\n        -   Haystack\n        -   Search engine used (as well as bindings)\n        -   Optionally of the other dependencies involved\n-   Ideally, creating a pull request with a (failing) test case demonstrating\n    what's wrong. This makes it easy for us to reproduce & fix the problem.\n\n    Github has a great guide for writing an effective pull request:\n    https://github.com/blog/1943-how-to-write-the-perfect-pull-request\n\n    Instructions for running the tests are at\n    https://django-haystack.readthedocs.io/en/latest/running_tests.html\n\nYou might also hop into the IRC channel (`#haystack` on `irc.freenode.net`)\n& raise your question there, as there may be someone who can help you with a\nwork-around.\n\n## Guidelines For Contributing Code\n\nIf you're ready to take the plunge & contribute back some code/docs, the\nprocess should look like:\n\n-   Fork the project on GitHub into your own account.\n-   Clone your copy of Haystack.\n-   Make a new branch in git & commit your changes there.\n-   Push your new branch up to GitHub.\n-   Again, ensure there isn't already an issue or pull request out there on it.\n    If there is & you feel you have a better fix, please take note of the issue\n    number & mention it in your pull request.\n-   Create a new pull request (based on your branch), including what the\n    problem/feature is, versions of your software & referencing any related\n    issues/pull requests.\n\nIn order to be merged into Haystack, contributions must have the following:\n\n-   A solid patch that:\n    -   is clear.\n    -   works across all supported versions of Python/Django.\n    -   follows the existing style of the code base formatted with\n        [`isort`](https://pypi.org/project/isort/) and\n        [`Black`](https://pypi.org/project/black/) using the provided\n        configuration in the repo\n    -   comments included as needed to explain why the code functions as it does\n-   A test case that demonstrates the previous flaw that now passes\n    with the included patch.\n-   If it adds/changes a public API, it must also include documentation\n    for those changes.\n-   Must be appropriately licensed (see [Philosophy](#philosophy)).\n-   Adds yourself to the AUTHORS file.\n\nIf your contribution lacks any of these things, they will have to be added\nby a core contributor before being merged into Haystack proper, which may take\nsubstantial time for the all-volunteer team to get to.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5693359375,
          "content": "Copyright (c) 2009-2013, Daniel Lindsley.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of Haystack nor the names of its contributors may be used\n       to endorse or promote products derived from this software without\n       specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n---\n\nPrior to April 17, 2009, this software was released under the MIT license.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.123046875,
          "content": "recursive-include docs *\nrecursive-include haystack/templates *.xml *.html\ninclude AUTHORS\ninclude LICENSE\ninclude README.rst\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.3701171875,
          "content": ".. image:: https://github.com/django-haystack/django-haystack/actions/workflows/test.yml/badge.svg\n      :target: https://github.com/django-haystack/django-haystack/actions/workflows/test.yml\n.. image:: https://img.shields.io/pypi/v/django-haystack.svg\n      :target: https://pypi.python.org/pypi/django-haystack/\n.. image:: https://img.shields.io/pypi/pyversions/django-haystack.svg\n      :target: https://pypi.python.org/pypi/django-haystack/\n.. image:: https://img.shields.io/pypi/dm/django-haystack.svg\n      :target: https://pypi.python.org/pypi/django-haystack/\n.. image:: https://readthedocs.org/projects/django-haystack/badge/\n      :target: https://django-haystack.readthedocs.io/\n.. image:: https://img.shields.io/badge/code%20style-black-000.svg\n      :target: https://github.com/psf/black\n.. image:: https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\n      :target: https://pycqa.github.io/isort/\n\n========\nHaystack\n========\n\n:author: Daniel Lindsley\n:date: 2013/07/28\n\nHaystack provides modular search for Django. It features a unified, familiar\nAPI that allows you to plug in different search backends (such as Solr_,\nElasticsearch_, Whoosh_, Xapian_, etc.) without having to modify your code.\n\n.. _Solr: http://lucene.apache.org/solr/\n.. _Elasticsearch: https://www.elastic.co/products/elasticsearch\n.. _Whoosh: https://github.com/mchaput/whoosh/\n.. _Xapian: http://xapian.org/\n\nHaystack is BSD licensed, plays nicely with third-party app without needing to\nmodify the source and supports advanced features like faceting, More Like This,\nhighlighting, spatial search and spelling suggestions.\n\nYou can find more information at http://haystacksearch.org/.\n\n\nGetting Help\n============\n\nThere is a mailing list (http://groups.google.com/group/django-haystack/)\navailable for general discussion and an IRC channel (#haystack on\nirc.freenode.net).\n\n\nDocumentation\n=============\n\n* Development version: http://docs.haystacksearch.org/\n* v3.3.0: https://django-haystack.readthedocs.io/en/v3.3.0/\n* v2.8.1: https://django-haystack.readthedocs.io/en/v2.8.1/\n\nSee the `changelog <docs/changelog.rst>`_\n\nRequirements\n============\n\nHaystack has a relatively easily-met set of requirements.\n\n* Python 3.8+\n* Django 3-5\n\nAdditionally, each backend has its own requirements. You should refer to\nhttps://django-haystack.readthedocs.io/en/latest/installing_search_engines.html for more\ndetails.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_project",
          "type": "tree",
          "content": null
        },
        {
          "name": "haystack",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.4873046875,
          "content": "[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\n  \"setuptools>=61.2\",\n  \"setuptools_scm[toml]>=3.4\",\n  \"wheel\",\n]\n\n[project]\nname = \"django-haystack\"\ndescription = \"Pluggable search for Django.\"\nreadme = \"README.rst\"\nauthors = [{name = \"Daniel Lindsley\", email = \"daniel@toastdriven.com\"}]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Web Environment\",\n    \"Framework :: Django\",\n    \"Framework :: Django :: 3.2\",\n    \"Framework :: Django :: 4.2\",\n    \"Framework :: Django :: 5.0\",\n    \"Framework :: Django :: 5.1\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Utilities\",\n]\ndynamic = [\n  \"version\",\n]\ndependencies = [\n  \"Django>=3.2\",\n  \"packaging\",\n]\n[project.optional-dependencies]\nelasticsearch = [\n  \"elasticsearch<8,>=5\",\n]\ntesting = [\n  \"coverage\",\n  \"geopy==2\",\n  \"pysolr>=3.7\",\n  \"python-dateutil\",\n  \"requests\",\n  \"whoosh<3.0,>=2.5.4\",\n]\n[project.urls]\nDocumentation = \"https://django-haystack.readthedocs.io\"\nHomepage = \"http://haystacksearch.org/\"\nSource = \"https://github.com/django-haystack/django-haystack\"\n\n[tool.setuptools]\npackages = [\n    \"haystack\",\n    \"haystack.backends\",\n    \"haystack.management\",\n    \"haystack.management.commands\",\n    \"haystack.templatetags\",\n    \"haystack.utils\",\n]\ninclude-package-data = false\n# test-suite = \"test_haystack.run_tests.run_all\"  # validate-pyproject-toml will complain\nzip-safe = false\n\n[tool.setuptools.package-data]\nhaystack = [\n    \"templates/panels/*\",\n    \"templates/search_configuration/*\",\n]\n\n[tool.setuptools_scm]\nfallback_version = \"0.0.dev0\"\nwrite_to = \"haystack/version.py\"\n\n[tool.isort]\nknown_first_party = [\"haystack\", \"test_haystack\"]\nprofile = \"black\"\nmulti_line_output = 3\n\n[tool.ruff]\nextend-exclude = [\"test_haystack/*\"]\nline-length = 162\ntarget-version = \"py38\"\n\n[tool.ruff.lint]\nignore = [\"B018\", \"B028\", \"B904\", \"B905\"]\nselect = [\"ASYNC\", \"B\", \"C4\", \"DJ\", \"E\", \"F\", \"G\", \"PLR091\", \"W\"]\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"haystack\", \"test_haystack\"]\n\n[tool.ruff.lint.mccabe]\nmax-complexity = 14\n\n[tool.ruff.lint.pylint]\nmax-args = 20\nmax-branches = 40\nmax-returns = 8\nmax-statements = 91\n"
        },
        {
          "name": "test_haystack",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.091796875,
          "content": "[tox]\nenvlist =\n    docs\n    py{38,39,310,311,312}-django{3.2,4.2,5.0,5.1}-es7.x\n\n[gh-actions]\npython =\n    3.8: py38\n    3.9: py39\n    3.10: py310\n    3.11: py311\n    3.12: py312\n\n[gh-actions:env]\nDJANGO =\n    3.2: django3.2\n    4.2: django4.2\n    5.0: django5.0\n    5.1: django5.1\n\n[testenv]\ncommands =\n    python test_haystack/solr_tests/server/wait-for-solr\n    coverage run {toxinidir}/test_haystack/run_tests.py\ndeps =\n    pysolr>=3.7.0\n    whoosh>=2.5.4,<3.0\n    python-dateutil\n    geopy==2.0.0\n    coverage\n    requests\n    setuptools; python_version >= \"3.12\"  # Can be removed on pysolr >= v3.10\n    django3.2: Django>=3.2,<3.3\n    django4.2: Django>=4.2,<4.3\n    django5.0: Django>=5.0,<5.1\n    django5.1: Django>=5.1,<5.2\n    es1.x: elasticsearch>=1,<2\n    es2.x: elasticsearch>=2,<3\n    es5.x: elasticsearch>=5,<6\n    es7.x: elasticsearch>=7,<8\nsetenv =\n    es1.x: VERSION_ES=>=1,<2\n    es2.x: VERSION_ES=>=2,<3\n    es5.x: VERSION_ES=>=5,<6\n    es7.x: VERSION_ES=>=7,<8\n\n\n[testenv:docs]\nchangedir = docs\ndeps =\n    sphinx\ncommands =\n    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html\n"
        }
      ]
    }
  ]
}