{
  "metadata": {
    "timestamp": 1736559520210,
    "page": 109,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nameko/nameko",
      "stars": 4725,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.12109375,
          "content": "[run]\nconcurrency = eventlet\nbranch = ${BRANCH}\nsource =\n    nameko\n    test\n\n[report]\nshow_missing = true\nfail_under = 100\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0751953125,
          "content": ".coverage\n*.pyc\n_py_cache\ndocs/build\ncerts\n\n## Packages\n*.egg-info\ndist\n.tox\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.1953125,
          "content": "[settings]\nline_length=79\nskip=nameko/cli/run.py\nknown_third_party=six\nknown_first_party=nameko\nindent='    '\nmulti_line_output=5\nforced_separate=test\ndefault_section=THIRDPARTY\nlines_after_imports=2\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 18.9833984375,
          "content": "Release Notes\n=============\n\nHere you can see the full list of changes between nameko versions. Versions\nare in form of *headline.major.minor* numbers. Backwards-compatible changes\nincrement the minor version number only.\n\nVersion 2.14.1\n--------------\n\nReleased: 2021-12-05\n\n* `nameko test` exit code command honours pytest result, and suppresses \"module already imported\" warning  (#748)\n* Support for Python 3.10 (#747)\n* Upgrade pytest version used in CI (#729)\n\nVersion 2.14.0\n--------------\n\nReleased: 2021-10-18\n\n* Ability to use werkzeug 2x with websockets implementation (#724)\n* Stop unsafe use of YAML parser when loading config files (#722)\n* Stop automatic monkey-patching by Eventlet (#727)\n* Support for disabling event exchange declarations (#730)\n* Provide a way to set AMQP login_method via config (#713)\n* Make a flaky test more reliable (#704)\n* Convert CI to GitHub actions (#715)\n* A couple of docs fixes (#710, #683)\n* Run CI on on py3.7 through 3.9 (#726)\n\nVersion 2.13.0\n--------------\n\nReleased: 2020-09-11\n\n* Add timeout parameter to entrypoint_hook (#622)\n* Remove or ignore a bunch of deprecation warnings in the test suite (#613)\n* Fix Python 3.7 warning on collections.abc (#649)\n* Add --version flag to CLI tool (#662)\n* Remove support for Python 3.4 and support Werkzeug>1 (#680)\n\n\nVersion 2.12.0\n--------------\n\nReleased: 2019-03-18\n\n* Refactor utils so standalone.events does not import eventlet (#580)\n* Compatibility with latest dependencies (moto #577, pyyaml and kombu #612)\n* Timer now waits for the spawned entrypoint to complete before firing again,\n  as documented (#579, #303)\n* Timer is also improved to avoid drift (#614)\n* Hide password in logged amqp uri (#582)\n* Docs updates (#587, #591, #276, #596)\n* Nameko shell changed to not catch exceptions when used in non-TTY mode\n  (#597)\n\nVersion 2.11.0\n--------------\n\nReleased: 2018-08-09\n\n* Compatibility with kombu 4 and pyamqp 2+, minimum supported kombu version\n  is now 4.2 (#564)\n\nVersion 2.10.0\n--------------\n\nReleased: 2018-08-06\n\n* Bump the minimum supported eventlet version to 0.20.1 (#557)\n\nVersion 2.9.1\n-------------\n\nReleased: 2018-07-20\n\n* SSL connections now supported by all AMQP extensions, configurable using\n  the `AMQP_SSL` config key. (#524)\n* Restore compatibility with eventlet 0.22+  (#556)\n* Log unhandled worker exceptions at `ERROR` level instead of `INFO` (#547)\n\nVersion 2.9.0\n-------------\n\nReleased: 2018-05-30\n\n* RPC reply queues are now set to expire rather than auto-delete, and\n  are no longer exclusive, allowing clients reconnect. Fixes #359.\n* It's now possible to accept messages in multiple serialization formats.\n  Adds config-based mechanism for specifying custom serializers. See #535.\n* Enhanced environment variable substitution including recursive references.\n  See #515.\n\nVersion 2.8.5\n-------------\n\nReleased: 2018-03-15\n\n* Workaround for a Kombu bug causing new sockets to sometimes have short\n  timeouts. (#521)\n\nVersion 2.8.4\n-------------\n\nReleased: 2018-02-18\n\n* Fixes a bug where the container crashed if the connection to RabbitMQ\n  was lost while an AMQP entrypoint was running (#511)\n* Correction to WorkerContext.immediate_call_id which actually referred\n  to the id of original call. Adds WorkerContext.origin_call_id to\n  replicate the previous behaviour.\n\nVersion 2.8.3\n-------------\n\nReleased: 2018-01-12\n\n* Restrict eventlet to `<0.22.0` until we're compatible.\n\nVersion 2.8.2\n-------------\n\nReleased: 2017-12-11\n\n* Remove the pytest `--log-level` argument added by the pytest plugin since\n  this conflicts with newer versions of `pytest` (`>= 3.3.0`). For older\n  versions this can be restored by installing the `pytest-catchlog` package.\n\n\nVersion 2.8.1\n-------------\n\nReleased: 2017-11-29\n\n* Added the 'show-config' command which will print the service configuration\n  to the console, after environment variable substitution.\n\n\nVersion 2.8.0\n-------------\n\nReleased: 2017-10-31\n\n* Environment variables substituted into config files are now interpreted\n  as YAML rather than bare values, allowing use of rich data types.\n\n\nVersion 2.7.0\n-------------\n\nReleased: 2017-10-07\n\n* Set stopped flag in register_provider() to allow PollingQueueConsumer\n  object reuse [fixes #462]\n* Refactor of AMQP message publishing logic into `nameko.amqp.publish`\n* Exposes delivery options and other messaging configuration to AMQP-based\n  DependencyProviders. [addresses #374]\n* Class attributes for configuring `use_confirms`, `retry` and `retry_policy`\n  have been deprecated from the Publisher, EventDispatcher, and RPC MethodProxy\n  classes. If you were subclassing these classes to set these options, you\n  should now set them at class instantiation time.\n\n\nVersion 2.6.0\n-------------\n\nReleased: 2017-04-30\n\n* Environment variables are now interpreted as native YAML data types rather\n  than just strings\n* The WSGI Server now uses an explicit logger so it can be controlled using a\n  logging config\n* Drops several backwards-compatibility shims that were marked as being\n  maintained only until this release\n\n\nVersion 2.5.4\n-------------\n\nReleased: 2017-04-20\n\n* Don't block the QueueConsumer thread on the worker pool, which could cause\n  service deadlock and occasional dropped AMQP connections [fixes #428]\n* Revert prefetch count change from 2.5.3 and ack messages outside of the\n  QueueConsumer thread. [fixes #417 more robustly]\n\n\nVersion 2.5.3\n-------------\n\nReleased: 2017-03-16\n\n* Bump the amqp `prefetch_count` by 1 to `max_workers + 1` to fix throughput\n  issue. [fixes 417]\n\n\nVersion 2.5.2\n-------------\n\nReleased 2017-02-28\n\n* Improves teardown speed of the `rabbit_config` pytest fixture\n* Support for providing an alternative reply listener to the standalone\n  RPC proxy\n\nVersion 2.5.1\n-------------\n\nReleased 2017-01-19\n\n* Adds a DependencyProvider to give services access to the config object\n* Internal refactor to make all worker lifecycle steps run in the same thread\n\nVersion 2.5.0\n-------------\n\nReleased 2016-12-20\n\n* Enables publish confirms by default for all AMQP message publishers\n* Refactors common AMQP connection code into `nameko.amqp`\n\nVersion 2.4.4\n-------------\n\nReleased 2016-11-28\n\n* Adds AMQP heartbeats to Consumer connections\n* Handles an uncaught exception caused by a fast-disconnecting client under\n  Python 3 [fixes #367]\n\nVersion 2.4.3\n-------------\n\nReleased 2016-11-16\n\n* Pins kombu back to a compatible release (<4) [fixes #378]\n* Fixes compatibility with latest bpython and ipython shells\n  [fixes #355 and #375]\n* Fixes socket cleanup bug in websocket hub [fixes #367]\n\nVersion 2.4.2\n-------------\n\nReleased 2016-10-10\n\n* Added support for environment variables in YAML config files\n* Enhanced :func:`~nameko.testing.services.entrypoint_waiter`. The new\n  implementation is backwards compatible but additionally:\n\n    - Gives you access to the result returned (or exception raised)\n    - Adds the ability to wait for a specific result\n    - Doesn't fire until the worker is completely torn down\n\nVersion 2.4.1\n-------------\n\nReleased 2016-09-14\n\n* Enhanced :class: `~nameko.web.server.WebServer` with `get_wsgi_app` and\n  `get_wsgi_server` to allow easy usage of WSGI middleware and modifications\n  of the WSGI server.\n* Enhanced :func:`~nameko.testing.services.replace_dependencies` to allow\n  specific replacement values to be provided with named arguments.\n\nVersion 2.4.0\n-------------\n\nReleased 2016-08-30\n\n* Add dictionary access to ``standalone.rpc.ClusterProxy`` to allow the proxy\n  to call services whose name is not a legal identifier in python\n  (e.g. name has a ``-`` in it).\n* Add the ability to specify a custom `ServiceContainer` class via config key.\n  Deprecate the keyword arguments to `ServiceRunner` and `run_services` for\n  the same purpose.\n* Deprecate the keyword arguments to `run_services`, `ServiceContainer` and\n  `ServiceRunner.add_service` for specifying a custom `WorkerContext` class.\n  Custom `WorkerContext` classes can now only be specified with a custom\n  `ServiceContainer` class that defines the `worker_ctx_cls` attribute.\n* Remove the `context_keys` attribute of the `WorkerContext`, which was\n  previously used to \"whitelist\" worker context data passed from call to call.\n  It was a feature that leaked from a specific implementation into the main\n  framework, and not useful enough in its own right to continue to be\n  supported.\n* Refactor `ServiceContainer` internals for better separation between \"managed\"\n  and \"worker\" threads. Improved logging when threads are killed.\n\nVersion 2.3.1\n-------------\n\nReleased 2016-05-11\n\n* Deprecate ``MethodProxy.async`` in favour of ``MethodProxy.call_async`` in\n  preparation for async becoming a keyword\n* Add support for loading logging configuration from ``config.yaml``\n\n\nVersion 2.3.0\n-------------\n\nReleased 2016-04-05\n\n* Add support for loading configuration file in ``nameko shell`` via\n  ``--config`` option\n* Changed :class:`~nameko.web.handlers.HttpRequestHandler` to allow override\n  how web exceptions are handled\n* Enabled reliable delivery on broadcast events when combined with a custom\n  :py:attr:`~nameko.events.EventHandler.broadcast_identity`. Reliable delivery\n  now defaults to enabled for all handler types. It must be explicitly turned\n  off with broadcast mode unless you override the default `broadcast_identity`.\n* Update bundled pytest fixtures to use a random vhost in RabbitMQ by default\n* Now requires eventlet>=0.16.1 because older versions were removed from PyPI\n\nVersion 2.2.0\n-------------\n\nReleased 2015-10-04\n\n* Add support for alternative serializers in AMQP messages\n* Add pytest plugin with common fixtures\n* Fix examples in documentation and add tests to prevent future breakage\n* Fix bug handling non-ascii characters in exception messages\n* Various documentation fixes\n\n\nVersion 2.1.2\n-------------\n\nReleased 2015-05-26\n\n* Refactor the standalone queue consumer for more extensibility\n\n\nVersion 2.1.1\n-------------\n\nReleased 2015-05-11\n\n* Nameko shell to use bpython or ipython interpreter if available\n* Support for marking entrypoint arguments as sensitive (for later redaction)\n\n\nVersion 2.1.0\n-------------\n\nReleased 2015-04-13\n\n* Changed default AMQP URI so examples work with an unconfigured RabbitMQ.\n* Heuristic messages for AMQP connection errors.\n* Added six to requirements.\n* Minor documentation fixes.\n\n\nVersion 2.0.0\n-------------\n\nReleased 2015-03-31\n\n* python 3 compatibility\n* Added HTTP entrypoints and experimental websocket support (contributed by\n  Armin Ronacher)\n* Added CLI and console script\n* Introduction of nameko \"extensions\" and nomenclature clarification\n* Removal of ``DependencyFactory`` in favour of prototype pattern\n* Complete documentation rewrite\n* Spun out ``nameko.contrib.sqlalchemy`` into\n  `nameko-sqlalchemy <https://pypi.python.org/pypi/nameko-sqlalchemy>`_\n  as a **community extension**.\n* Spun out ``nameko.legacy`` package into\n  `nameko-nova-compat <https://pypi.python.org/pypi/nameko-nova-compat>`_\n* Rename the standalone rpc proxy to\n  :class:`~nameko.standalone.rpc.ServiceRpcProxy` and add a\n  :class:`~nameko.standalone.rpc.ClusterRpcProxy`, using a single reply queue\n  for communicating with multiple remote services.\n* Make the standalone event dispatcher more shell-friendly, connecting on\n  demand.\n\n\nVersion 1.14.0\n--------------\n\nReleased 2014-12-19\n\n* Remove parallel provider in favour of async RPC\n* Update :func:`~nameko.testing.services.worker_factory` to raise if asked to\n  replace a non-existent injection.\n* Add various ``__repr__`` methods for better logging\n* Support for timeouts in the (non-legacy) standalone RPC proxy\n* Add helper for manipulating an AMQP URI into a dict\n\n\nVersion 1.13.0\n--------------\n\nReleased 2014-12-02\n\n* RPC reply queues now auto-delete.\n* Extra protection against badly-behaved dependencies during container kill\n* Make legacy :class:`~nameko.legacy.nova.NovaRpcConsumer` more robust against\n  failures in the :class:`~nameko.legacy.nova.NovaRpc` provider.\n\n\nVersion 1.12.0\n--------------\n\nReleased 2014-11-25\n\n* Add ability to make asynchronous rpc calls using the rpc proxy.\n* Add a new nameko context key ``user_agent`` to support including such info\n  in the rpc header.\n\n\nVersion 1.11.5\n--------------\n\nReleased 2014-11-18\n\n* Have the standalone rpc proxy mark its reply queues as auto-delete, to stop\n  them staying around after use.\n\n\nVersion 1.11.4\n--------------\n\nReleased 2014-11-10\n\n* Make :class:`~nameko.rpc.RpcConsumer` more robust against failures in the\n  :class:`~nameko.rpc.Rpc` provider.\n* Add a new exception :class:`~nameko.exceptions.MalformedRequest` that RPC\n  providers can raise if they detect an invalid message. Raise this exception\n  in the default ``Rpc`` provider if ``args`` or ``kwargs`` keys are missing\n  from the message.\n* Fix issues in queue consumer tests against non-localhost brokers.\n* Upgrade to eventlet 0.15.2.\n* Include pyrabbit in ``requirements.txt`` (no longer just for tests).\n* Catch dying containers in the entrypoint_hook to avoid hangs.\n* Add ``expected_exceptions`` kwarg to the rpc entrypoint to enable different\n  exception handling (in dependencies) for user vs system errors.\n\n\nVersion 1.11.3\n--------------\n\nReleased 2014-10-10\n\n* Add more logging for workers killed by\n  :meth:`~nameko.containers.ServiceContainer.kill`.\n\n\nVersion 1.11.2\n--------------\n\nReleased 2014-09-18\n\n* Add a default implementation for ``acquire_injection`` (returning ``None``)\n  for dependency providers that are used for side-effects rather than injecting\n  dependencies.\n\n\nVersion 1.11.1\n--------------\n\nReleased 2014-09-15\n\n* New test helper :func:`~nameko.testing.services.entrypoint_waiter` to wait\n  for entrypoints (e.g. event handlers) to complete.\n\n\nVersion 1.11.0\n--------------\n\nReleased 2014-09-01\n\n* Raise a specific ``RpcTimeout`` error in the RPC proxy rather than\n  ``socket.timeout`` to avoid confusing kombu's ``Connection.ensure``\n* Improve logging helpers\n* Use ``inspect.getcallargs`` instead of shadow lambda for RPC argument\n  checking\n* Add default retry policies to all publishers\n* Stricter handling of connections between tests\n* Workarounds for RabbitMQ bugs described at\n  https://groups.google.com/d/topic/rabbitmq-users/lrl0tYd1L38/discussion\n\nVersion 1.10.1\n--------------\n\nReleased 2014-08-27\n\n* Inspect the service class (instead of an instance) in\n  :func:`~nameko.testing.services.worker_factory`. Works better with\n  descriptors.\n* Explicitly delete ``exc_info`` variable when not needed, to help the\n  garbage collector.\n\n\nVersion 1.10.0\n--------------\n\nReleased 2014-08-14\n\n* Entrypoint providers' handle_result is now able to manipulate and modify and\n  return the ``(result, exc_info)`` tuple. This enables default post-processing\n  (e.g. serialization, translations)\n* Added serialization safety to legacy RPC entrypoint.\n\n\nVersion 1.9.1\n-------------\n\nReleased 2014-08-12\n\n* Bugfix to exception handling in ``nameko.legacy.dependencies``\n\n\nVersion 1.9.0\n-------------\n\nReleased 2014-07-15\n\n* No longer relying on eventlet for standalone RPC proxy timeouts.\n* Introduced RPC entrypoints compatible with the 'legacy' proxy.\n\n\nVersion 1.8.2\n-------------\n\nReleased 2014-07-07\n\n* Documentation generator accepts a function listing event classes and adds\n  to output accordingly.\n\n\nVersion 1.8.1\n-------------\n\nReleased 2014-06-23\n\n* Adding ``wait_for_worker_idle`` test helper.\n\nVersion 1.8.0\n-------------\n\nReleased 2014-06-13\n\n* Now passing ``exc_info`` tuples instead of bare exceptions to\n  ``worker_result`` and ``handle_result``, to enable exception processing in\n  non-worker greenthreads.\n\nVersion 1.7.2\n-------------\n\nReleased 2014-06-10\n\n* :meth:`~nameko.containers.ServiceContainer._run_worker` now calls any\n  ``handle_result`` method before dependency teardown.\n* Serialization errors now generate a specific error message rather\n  than bubbling into the container.\n* Minor change to ``nameko_doc`` output.\n\nVersion 1.7.1\n-------------\n\nReleased 2014-05-20\n\n* Added ``language``, ``auth_token`` and ``user_id`` dependency providers to\n  make context data available to service workers.\n* Refactored constants into their own module.\n* Minor test changes to enable testing on shared rabbit brokers.\n\nVersion 1.7.0\n-------------\n\nReleased 2014-05-07\n\n* :meth:`~nameko.containers.ServiceContainer.spawn_worker` now throws\n  :class:`~nameko.exceptions.ContainerBeingKilled` if a ``kill`` is\n  in progress, since some providers may already be dead. Providers should catch\n  this and e.g. requeue rpc messages. There is a race condition between\n  completing the kill sequence and remaining entrypoints firing.\n\n\nVersion 1.6.1\n-------------\n\nReleased 2014-04-03\n\n* Revert changes to legacy exception serialization to maintain backwards\n  compatibility with old clients.\n* Add forwards compatibility for future clients that wish to serialize\n  exceptions into more data\n* Promote conftest rabbit manipulations to test helpers\n\n\nVersion 1.6.0\n-------------\n\nReleased 2014-03-31\n\n* Rename instance_factory to worker_factory\n* Raise :class:`~nameko.exception.IncorrectSignature` instead of\n  ``RemoteError: TypeError`` if an RPC method is called with invalid arguments.\n* Raise :class:`~nameko.exception.MethodNotFound` instead of\n  ``RemoteError: MethodNotFound`` if a non-existent RPC method is called.\n* Let log handlers format warning messages so that aggregators group them\n  correctly.\n* Expose the entire dependency provider (rather than just the method name) to\n  the worker context.\n\n\nVersion 1.5.0\n-------------\n\nReleased 2014-03-27\n\n* Improvements to :class:`~nameko.containers.ServiceContainer.kill()` enabling\n  better tracebacks and cleaner teardown:\n\n    - Using ``sys.exc_info`` to preserve tracebacks\n    - No longer passing exception into\n      :meth:`~nameko.extensions.DependencyProvider.kill()`, removing race\n      conditions.\n    - No longer requiring ``exc`` in\n      :class:`~nameko.containers.ServiceContainer.kill()`\n\nVersion 1.4.1\n-------------\n\nReleased 2014-03-26\n\n* Adds the ``nameko_doc`` package, for easing the creation of service-oriented\n  documentation.\n\n\nVersion 1.4.0\n-------------\n\nReleased 2014-03-20\n\n* RPC calls to non-existent services (no queues bound to the RPC exchange with\n  the appropriate routing key) now raise an exception instead of hanging\n  indefinitely. Note that calls to existing but non-running services (where the\n  queue exists but has no consumer) behave as before.\n\n\nVersion 1.3.5\n-------------\n\nReleased 2014-03-05\n\n* Increased test resilience. Force-closing existing connections on rabbit\n  reset\n\n\nVersion 1.3.4\n-------------\n\nReleased 2014-03-05\n\n* Use ``MagicMock`` for dependency replacement in test utilities\n* Use ``autospec=True`` wherever possible when mocking\n* Merge ``ServiceContainers`` into a single class\n\n\nVersion 1.3.3\n-------------\n\nReleased 2014-02-25\n\n* Bugfixes enabling reconnection to the broker if the connection is temporarily\n  lost.\n\n\nVersion 1.3.2\n-------------\n\nReleased 2014-02-13\n\n* Dropping headers with a ``None`` value because they can't be serialized by\n  AMQP\n\n\nVersion 1.3.1\n-------------\n\nReleased 2014-01-28\n\n* Add ``event_handler_cls`` kwarg to the ``event_handler`` entrypoint, for\n  using a custom subclass of the ``EventHandler`` provider\n\n\nVersion 1.3.0\n-------------\n\nReleased 2014-01-23\n\n* Standalone RPC proxy interface changed to class with contextmanager interface\n  and manual ``start()`` and ``stop()`` methods.\n"
        },
        {
          "name": "CONTRIBUTORS.txt",
          "type": "blob",
          "size": 0.8203125,
          "content": "Contributions have been made by:\n\nEdward George (@edwardgeorge)\nDavid Szotten (@davidszotten)\nFergus Doyle (@junkafarian)\nMatt Bennett (@mattbennett)\nJan Klaas Kollhof (@kollhof)\nTony Bajan (@tonybajan)\nTim Buckland (@timbu)\nShaun Stanworth (@shauns)\nRuss Ferriday (@topiaruss)\nJuan Ginzo (@juanginzo)\nArmin Ronacher (@mitsuhiko)\nMar Bartolome (@marbru)\nAhnSeongHyun (@sh84ahn)\nT. Zengerink (@Mytho)\nDavid Winterbottom (@codeinthehole)\nDavid Weterings (@davidweterings)\nRadek Jankiewicz (@radekj)\nMiguel Flores Ruiz de Eguino (@miguelfrde)\nArtur Stawiarski (@astawiarski)\nSebastian Maj (@s-maj)\nJakub Borys (@kooba)\nAndriy Kogut (@andriykohut)\nFabrizio Romano (@gianchub)\nAlexandre Héaumé (@aheaume)\nJesse Pollak (@jessepollak)\nMiklos Vincze (@vmikki)\nYihang Yang (@mikegreen7892003)\nBob Haddleton (@bobh66)\nDavis Kirkendall (@daviskirk)\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 9.935546875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.111328125,
          "content": "include readme.rst\ninclude LICENSE\ninclude pylintrc\n\ngraft docs\nprune docs/build\n\ngraft test\nglobal-exclude *.pyc\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.94140625,
          "content": ".PHONY: test docs\n\nENABLE_BRANCH_COVERAGE ?= 0\nAUTO_FIX_IMPORTS ?= 0\n\nifneq ($(AUTO_FIX_IMPORTS), 1)\n  autofix = --check-only\nendif\n\nstatic: imports flake8 pylint\ntest: static test_lib test_examples\n\nflake8:\n\tflake8 nameko test\n\npylint:\n\tpylint --rcfile=pylintrc nameko -E\n\nimports:\n\tisort $(autofix) nameko test\n\ntest_lib:\n\tBRANCH=$(ENABLE_BRANCH_COVERAGE) coverage run -m nameko test test -v --strict-markers --timeout 30\n\tBRANCH=$(ENABLE_BRANCH_COVERAGE) coverage report\n\ntest_examples:\n\tBRANCH=$(ENABLE_BRANCH_COVERAGE) nameko test docs/examples/test --strict-markers --timeout 30 --cov=docs/examples --cov-config=$(CURDIR)/.coveragerc\n\tnameko test docs/examples/testing\n\ntest_docs: docs spelling #linkcheck\n\ndocs:\n\tsphinx-build -n -b html -d docs/build/doctrees docs docs/build/html\n\nspelling:\n\tsphinx-build -b spelling -d docs/build/doctrees docs docs/build/spelling\n\nlinkcheck:\n\tsphinx-build -W -b linkcheck -d docs/build/doctrees docs docs/build/linkcheck\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.5537109375,
          "content": "Copyright 2015 Nameko Project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.04296875,
          "content": "Nameko\n======\n\n.. image:: https://github.com/nameko/nameko/actions/workflows/ci.yaml/badge.svg\n\n*[nah-meh-koh]*\n\n.. pull-quote ::\n\n    A microservices framework for Python that lets service developers concentrate on application logic and encourages testability.\n\n\nA nameko service is just a class:\n\n.. code-block:: python\n\n    # helloworld.py\n\n    from nameko.rpc import rpc\n\n    class GreetingService:\n        name = \"greeting_service\"\n\n        @rpc\n        def hello(self, name):\n            return \"Hello, {}!\".format(name)\n\n\nYou can run it in a shell:\n\n.. code-block:: shell\n\n    $ nameko run helloworld\n    starting services: greeting_service\n    ...\n\nAnd play with it from another:\n\n.. code-block:: pycon\n\n    $ nameko shell\n    >>> n.rpc.greeting_service.hello(name=\"ナメコ\")\n    'Hello, ナメコ!'\n\n\nFeatures\n--------\n\n* AMQP RPC and Events (pub-sub)\n* HTTP GET, POST & websockets\n* CLI for easy and rapid development\n* Utilities for unit and integration testing\n\n\nGetting Started\n---------------\n\n* Check out the `documentation <http://nameko.readthedocs.io>`_.\n\n\nSupport\n-------\n\nFor help, comments or questions, please go to `<https://discourse.nameko.io/>`_.\n\nFor enterprise\n---------------------\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of Nameko and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. `Learn more. <https://tidelift.com/subscription/pkg/pypi-nameko?utm_source=pypi-nameko&utm_medium=referral&utm_campaign=enterprise&utm_term=repo>`_\n\n\nSecurity contact information\n----------------------------\n\nTo report a security vulnerability, please use the `Tidelift security contact <https://tidelift.com/security>`_. Tidelift will coordinate the fix and disclosure.\n\n\nContribute\n----------\n\n* Fork the repository\n* Raise an issue or make a feature request\n\n\nLicense\n-------\n\nApache 2.0. See LICENSE for details.\n"
        },
        {
          "name": "RELEASING.rst",
          "type": "blob",
          "size": 0.7197265625,
          "content": "Releasing a new version to PyPI\n-------------------------------\n\n#. Make sure any merged features have entries in the change log (``CHANGES``)\n\n#. Decide how much to bump the version (typically point version for backwards compatible changes, and minor version for backwards incompatible changes).\n\n#. Bump the version in ``setup.py`` and in ``CHANGES``.\n\n#. Update the release date in ``CHANGES``.\n\n#. Unless this is already part of a feature branch, you may want to do all this in a dedicated ``vx.y.z-rc`` branch.\n\n#. Merge your branch branch\n\n#. Create a new `\"release\" <https://github.com/nameko/nameko/releases>`_ on github, named vx.y.z to match your version.\n\n#. Publish the release, which will trigger a push to pypi from travis\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "nameko",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 7.0341796875,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n\n[MESSAGES CONTROL]\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=colorized\n\n# Include message's id in output\nmsg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\n#files-output=no   # unsupported in modern pylint\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n\n[BASIC]\n\n# List of builtins function names that should not be used, separated by a comma\n#bad-functions=map,filter,apply,input  # unsupported in modern pylint\n\n# Regular expression which should only match correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression which should only match correct module level names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression which should only match correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression which should only match correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct instance attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct list comprehension /\n# generator expression variable names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Regular expression which should only match functions or classes name which do\n# not require a docstring\nno-docstring-rgx=__.*__\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=80\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \" \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set).\nignored-classes=SQLObject\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E0201 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,acl_users,aq_parent\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the beginning of the name of dummy variables\n# (i.e. not used).\ndummy-variables-rgx=_|dummy\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,string,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=builtins.Exception\n"
        },
        {
          "name": "rtd_requirements.txt",
          "type": "blob",
          "size": 0.1435546875,
          "content": "# ReadTheDocs doesn't support installation of requirements via extras_require\n# See https://github.com/rtfd/readthedocs.org/issues/173\n\n-e .[docs]\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.3212890625,
          "content": "[bdist_wheel]\nuniversal = 1\n\n[flake8]\nignore = E402, E722, W504\nmax-line-length = 88\nexclude = test/nameko_doc/example/*\n\n[tool:pytest]\nfilterwarnings =\n    ignore::DeprecationWarning:kombu.mixins\n    ignore::DeprecationWarning:eventlet.patcher\n    ignore::DeprecationWarning:dns.hash\n    ignore::DeprecationWarning:dns.namedict\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.5546875,
          "content": "#!/usr/bin/env python\nimport os\nfrom codecs import open\n\nfrom setuptools import find_packages, setup\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\nwith open(os.path.join(here, 'README.rst'), 'r', 'utf-8') as handle:\n    readme = handle.read()\n\n\nsetup(\n    name='nameko',\n    version='2.14.1',\n    description='A microservices framework for Python that lets service '\n                'developers concentrate on application logic and encourages '\n                'testability.',\n    long_description=readme,\n    author='onefinestay',\n    url='http://github.com/nameko/nameko',\n    packages=find_packages(exclude=['test', 'test.*']),\n    install_requires=[\n        \"dnspython<2 ; python_version<'3.10'\",\n        \"eventlet>=0.20.1\",\n        \"eventlet>=0.21.0 ; python_version>='3.6'\",\n        \"eventlet>=0.25.0 ; python_version>='3.7'\",\n        \"eventlet>=0.33.0 ; python_version>='3.10'\",\n        \"kombu>=4.2.0\",\n        \"kombu>=5.2.0 ; python_version>='3.10'\",\n        \"importlib-metadata<5 ; python_version<='3.7'\",  # https://github.com/celery/celery/issues/7783\n        \"mock>=1.2\",\n        \"path.py>=6.2\",\n        \"pyyaml>=5.1\",\n        \"requests>=1.2.0\",\n        \"six>=1.9.0\",\n        \"werkzeug>=1.0.0\",\n        \"wrapt>=1.0.0\",\n        \"packaging\",\n    ],\n    extras_require={\n        'dev': [\n            \"coverage==5.5 ; python_version<'3'\",\n            \"coverage==7.1.0 ; python_version>'3'\",\n            \"flake8==3.9.2\",\n            \"isort==4.3.21 ; python_version<'3'\",\n            \"isort==5.11.5 ; python_version>'3'\",\n            \"pylint==1.9.5 ; python_version<'3'\",\n            \"pylint==2.16.2 ; python_version>'3'\",\n            \"pytest==4.6.11 ; python_version<'3'\",\n            \"pytest==6.2.5 ; python_version>'3'\",\n            \"pytest-cov==2.5.1\",\n            \"pytest-timeout==1.3.3\",\n            \"requests==2.27.1\",\n            \"urllib3==1.26.4\",\n            \"websocket-client==0.48.0\",\n        ],\n        'docs': [\n            \"pyenchant==1.6.11\",\n            \"Sphinx==1.8.5\",\n            \"sphinxcontrib-spelling==4.2.1\",\n            \"sphinx-nameko-theme==0.0.3\",\n            \"docutils<0.18\",  # https://github.com/sphinx-doc/sphinx/issues/9788\n            \"jinja2<3.1.0\",  # https://github.com/readthedocs/readthedocs.org/issues/9037\n        ],\n        'examples': [\n            \"nameko-sqlalchemy==0.0.1\",\n            \"PyJWT==1.7.1 ; python_version<'3'\",\n            \"PyJWT==2.6.0 ; python_version>'3'\",\n            \"moto==1.3.6 ; python_version<'3'\",\n            \"moto==4.1.2 ; python_version>'3'\",\n            \"bcrypt==3.1.3\",\n            \"regex==2018.2.21\"\n        ]\n    },\n    entry_points={\n        'console_scripts': [\n            'nameko=nameko.cli.main:main',\n        ],\n        'pytest11': [\n            'pytest_nameko=nameko.testing.pytest'\n        ]\n    },\n    zip_safe=True,\n    license='Apache License, Version 2.0',\n    classifiers=[\n        \"Programming Language :: Python\",\n        \"Operating System :: MacOS :: MacOS X\",\n        \"Operating System :: POSIX\",\n        \"Programming Language :: Python :: 2\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Topic :: Internet\",\n        \"Topic :: Software Development :: Libraries :: Python Modules\",\n        \"Intended Audience :: Developers\",\n    ]\n)\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.869140625,
          "content": "[tox]\nenvlist = {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-{oldest,pinned,latest,extra}-test, {py2.7,py3.5,py3.6}-latest-test-mastereventlet, py3.6-latest-test-branchcoverage, {py2.7,py3.9}-examples, docs, {py2.7,py3.9}-static\nskipsdist = True\n\n[testenv]\ndeps =\n    # oldest supported libraries for each python\n    {py2.7,py3.5}-oldest: eventlet==0.20.1\n    {py3.6}-oldest: eventlet==0.21.0\n    {py3.7,py3.8,py3.9}-oldest: eventlet==0.25.1\n    {py3.10,py3.11}-oldest: eventlet==0.33.3\n    {py2.7,py3.5,py3.6,py3.7,py3.8,py3.9}-oldest: kombu==4.2.0\n    {py3.10,py3.11}-oldest: kombu==5.2.0\n    oldest: mock==1.2.0\n    oldest: path.py==6.2\n    oldest: requests==2.4.3\n    oldest: six==1.10.0\n    oldest: werkzeug==1.0.0\n    oldest: wrapt==1.0.0\n\n    # pinned library versions\n    {py3.5,py3.6,py3.7}-{pinned,extra}: eventlet==0.26.0\n    {py3.10,py3.11}-{pinned,extra}: eventlet==0.33.3\n    {py2.7}-pinned: kombu==4.6.11 \n    {py3.5,py3.6}-pinned: kombu==5.1.0\n    {py3.7,py3.9,py3.9,py3.10,py3.11}-pinned: kombu==5.2.0\n    pinned: mock==2.0.0\n    pinned: path.py==11.0.1\n    pinned: requests==2.27.1\n    pinned: six==1.11.0\n    pinned: werkzeug==1.0.1\n    pinned: wrapt==1.10.11\n\n    {py3.5,py3.6,py3.7,py3.8,py3.9,py3.10,py3.11}-extra: regex==2018.07.11\n\n\nsetenv =\n    branchcoverage: ENABLE_BRANCH_COVERAGE=1\n    examples: ENABLE_BRANCH_COVERAGE=1\n\nallowlist_externals = make\n\ncommands =\n    mastereventlet: pip install --editable .[dev]\n    mastereventlet: pip install --upgrade https://github.com/eventlet/eventlet/archive/master.zip\n    mastereventlet: make test_lib\n\n    static: pip install --editable .[dev]\n    static: make imports\n    static: make flake8\n    static: make pylint\n\n    test: pip install --editable .[dev]\n    test: make test_lib\n\n    examples: pip install --editable .[dev,examples]\n    examples: make test_examples\n\n    docs: pip install --editable .[docs]\n    docs: make test_docs\n"
        }
      ]
    }
  ]
}