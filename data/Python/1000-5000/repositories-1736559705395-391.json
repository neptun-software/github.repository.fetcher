{
  "metadata": {
    "timestamp": 1736559705395,
    "page": 391,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Nixtla/statsforecast",
      "stars": 4075,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 8.048828125,
          "content": "{\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": false,\n  \"contributors\": [\n    {\n      \"login\": \"AzulGarza\",\n      \"name\": \"azul\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/10517170?v=4\",\n      \"profile\": \"https://github.com/AzulGarza\",\n      \"contributions\": [\n        \"code\",\n        \"maintenance\"\n      ]\n    },\n    {\n      \"login\": \"jmoralez\",\n      \"name\": \"José Morales\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8473587?v=4\",\n      \"profile\": \"https://github.com/jmoralez\",\n      \"contributions\": [\n        \"code\",\n        \"maintenance\"\n      ]\n    },\n    {\n      \"login\": \"sugatoray\",\n      \"name\": \"Sugato Ray\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/10201242?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/sugatoray/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"tackes\",\n      \"name\": \"Jeff Tackes\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/9125316?v=4\",\n      \"profile\": \"http://www.jefftackes.com\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"darinkist\",\n      \"name\": \"darinkist\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/62692170?v=4\",\n      \"profile\": \"https://github.com/darinkist\",\n      \"contributions\": [\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"alech97\",\n      \"name\": \"Alec Helyar\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/22159405?v=4\",\n      \"profile\": \"https://github.com/alech97\",\n      \"contributions\": [\n        \"question\"\n      ]\n    },\n    {\n      \"login\": \"dhirschfeld\",\n      \"name\": \"Dave Hirschfeld\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/881019?v=4\",\n      \"profile\": \"https://dhirschfeld.github.io\",\n      \"contributions\": [\n        \"question\"\n      ]\n    },\n    {\n      \"login\": \"mergenthaler\",\n      \"name\": \"mergenthaler\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4086186?v=4\",\n      \"profile\": \"https://github.com/mergenthaler\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"kdgutier\",\n      \"name\": \"Kin\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/19935241?v=4\",\n      \"profile\": \"https://github.com/kdgutier\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Yasslight90\",\n      \"name\": \"Yasslight90\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/58293883?v=4\",\n      \"profile\": \"https://github.com/Yasslight90\",\n      \"contributions\": [\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"asinig\",\n      \"name\": \"asinig\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/99350687?v=4\",\n      \"profile\": \"https://github.com/asinig\",\n      \"contributions\": [\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"guerda\",\n      \"name\": \"Philip Gillißen\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/230782?v=4\",\n      \"profile\": \"https://github.com/guerda\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"shagn\",\n      \"name\": \"Sebastian Hagn\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/16029092?v=4\",\n      \"profile\": \"https://github.com/shagn\",\n      \"contributions\": [\n        \"bug\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"goodwanghan\",\n      \"name\": \"Han Wang\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/21092479?v=4\",\n      \"profile\": \"https://github.com/fugue-project/fugue\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"bjeffrey92\",\n      \"name\": \"Ben Jeffrey\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/36240394?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/benjamin-jeffrey-218548a8/\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"Beliavsky\",\n      \"name\": \"Beliavsky\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/38887928?v=4\",\n      \"profile\": \"https://github.com/Beliavsky\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"MMenchero\",\n      \"name\": \"Mariana Menchero García \",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/47995617?v=4\",\n      \"profile\": \"https://github.com/MMenchero\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ngupta23\",\n      \"name\": \"Nikhil Gupta\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/33585645?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/guptanick/\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"jdegene\",\n      \"name\": \"JD\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/17744939?v=4\",\n      \"profile\": \"https://github.com/jdegene\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"jattenberg\",\n      \"name\": \"josh attenberg\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/924185?v=4\",\n      \"profile\": \"https://github.com/jattenberg\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"JeroenPeterBos\",\n      \"name\": \"JeroenPeterBos\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/15342738?v=4\",\n      \"profile\": \"https://github.com/JeroenPeterBos\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"jvdd\",\n      \"name\": \"Jeroen Van Der Donckt\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/18898740?v=4\",\n      \"profile\": \"https://github.com/jvdd\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Roymprog\",\n      \"name\": \"Roymprog\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4035367?v=4\",\n      \"profile\": \"https://github.com/Roymprog\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"nelsoncardenas\",\n      \"name\": \"Nelson Cárdenas Bolaño\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/18086414?v=4\",\n      \"profile\": \"https://github.com/nelsoncardenas\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"kschmaus\",\n      \"name\": \"Kyle Schmaus\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/6586847?v=4\",\n      \"profile\": \"https://github.com/kschmaus\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"akmalsoliev\",\n      \"name\": \"Akmal Soliev\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/24494206?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/akmal-soliev/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"nickto\",\n      \"name\": \"Nick To\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/11967792?v=4\",\n      \"profile\": \"https://github.com/nickto\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"kvnkho\",\n      \"name\": \"Kevin Kho\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/32503212?v=4\",\n      \"profile\": \"https://www.linkedin.com/in/kvnkho/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"yibenhuang\",\n      \"name\": \"Yiben Huang\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/62163340?v=4\",\n      \"profile\": \"https://github.com/yibenhuang\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"andrewgross\",\n      \"name\": \"Andrew Gross\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/370118?v=4\",\n      \"profile\": \"https://github.com/andrewgross\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"taniishkaaa\",\n      \"name\": \"taniishkaaa\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/109246904?v=4\",\n      \"profile\": \"https://github.com/taniishkaaa\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"manuel-calzolari\",\n      \"name\": \"Manuel Calzolari\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/2764902?v=4\",\n      \"profile\": \"https://manuel.calzolari.name\",\n      \"contributions\": [\n        \"code\"\n      ]\n    }\n  ],\n  \"contributorsPerLine\": 7,\n  \"projectName\": \"statsforecast\",\n  \"projectOwner\": \"Nixtla\",\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"skipCi\": true,\n  \"commitConvention\": \"angular\",\n  \"commitType\": \"docs\"\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.091796875,
          "content": "nbs/** linguist-documentation\nexperiments/** linguist-documentation\n*.ipynb merge=nbdev-merge\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2451171875,
          "content": ".ipynb_checkpoints\n__pycache__\n*.egg-info\nGemfile*\nGemfile.lock\ndocs/_site\nbuild\ndist\n.vscode\n.idea\n*.gif\n*.icloud\n*.csv\ndata\n*.parquet\ntmp\n_docs/\n_proc/\n.DS_Store\n.gitattributes\n.gitconfig\nnbs/.last_checked\n.venv\n.idea\nmlruns/\n.luarc.json\n*.so\n*.dll\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1005859375,
          "content": "[submodule \"external_libs/eigen\"]\n\tpath = external_libs/eigen\n\turl = https://gitlab.com/libeigen/eigen\n"
        },
        {
          "name": ".mypy.ini",
          "type": "blob",
          "size": 0.0361328125,
          "content": "[mypy]\nignore_missing_imports = True\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.7109375,
          "content": "fail_fast: true\n\nrepos:\n  - repo: local\n    hooks:\n      - id: imports_with_code\n        name: Cells with imports and code\n        entry: python action_files/imports_with_code.py\n        language: system\n      - id: nbdev_clean\n        name: Clean notebooks\n        entry: sh action_files/clean_nbs\n        language: system\n\n  - repo: https://github.com/fastai/nbdev\n    rev: 2.2.10\n    hooks:\n      - id: nbdev_export\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.2.1\n    hooks:\n      - id: ruff\n        files: python/statsforecast\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.8.0\n    hooks:\n      - id: mypy\n        args: [--ignore-missing-imports]\n        files: python/statsforecast\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0927734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nops@nixtla.io.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.77734375,
          "content": "# Step-by-step Contribution Guide\n\n> This document contains instructions for collaborating on the different libraries of Nixtla.\n\nSometimes, diving into a new technology can be challenging and overwhelming. We've been there too, and we're more than ready to assist you with any issues you may encounter while following these steps. Don't hesitate to reach out to us on [Slack](https://join.slack.com/t/nixtlacommunity/shared_invite/zt-1pmhan9j5-F54XR20edHk0UtYAPcW4KQ). Just give Azul a ping, and she'll be glad to assist you.\n\n## Table of Contents 📚\n\n1. [Prerequisites](#prerequisites)\n2. [Git `fork-and-pull` worklow](#git-fork-and-pull-worklow)\n3. [Set Up a Virtual Environment](#set-up-a-virtual-environment)\n4. [Install required libraries for development](#install-required-libraries-for-development)\n5. [Start editable mode](#start-editable-mode)\n6. [Set Up your Notebook based development environment](#set-up-your-notebook-based-development-environment)\n7. [Start Coding](#start-coding)\n8. [Example with Screen-shots](#example-with-screen-shots)\n\n## Prerequisites\n\n- **GitHub**: You should already have a GitHub account and a basic understanding of its functionalities. Alternatively check [this guide](https://docs.github.com/en/get-started).\n- **uv**: You need to have `uv` installed. You can refer to the [docs](https://docs.astral.sh/uv/getting-started/installation/) in order to install it.\n\n## Git `fork-and-pull` worklow\n\n**1. Fork the Project:**\nStart by forking the Nixtla repository to your own GitHub account. This creates a personal copy of the project where you can make changes without affecting the main repository.\n\n**2. Clone the Forked Repository**\nClone the forked repository to your local machine using `git clone --recursive https://github.com/<your-username>/statsforecast.git`. This allows you to work with the code directly on your system.\n\n**3. Create a Branch:**\n\nBranching in GitHub is a key strategy for effectively managing and isolating changes to your project. It allows you to segregate work on different features, fixes, and issues without interfering with the main, production-ready codebase.\n\n1. *Main Branch*: The default branch with production-ready code.\n\n2. *Feature Branches*: For new features, create branches prefixed with 'feature/', like `git checkout -b feature/new-model`.\n\n3. *Fix Branches*: For bug fixes, use 'fix/' prefix, like `git checkout -b fix/forecasting-bug`.\n\n4. *Issue Branches*: For specific issues, use `git checkout -b issue/issue-number` or `git checkout -b issue/issue-description`.\n\nAfter testing, branches are merged back into the main branch via a pull request, and then typically deleted to maintain a clean repository. You can read more about github and branching [here](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-and-deleting-branches-within-your-repository).\n\n##  Set Up a Virtual Environment\n\n> If you want to use Docker or Codespaces, let us know opening an issue and we will set you up.\n\nNext, you'll need to create a virtual environment. uv is an open-source package management and environment management system that runs on Windows, macOS, and Linux. It allows you to create isolated environments with the dependencies required for a specific project.\n\nFirst, ensure you have uv installed on your system. Alternatively, refer to the [installation docs](https://docs.astral.sh/uv/getting-started/installation/).\n\nThen, you can create a new environment using `uv venv`. This will use your default python interpreter, you can also define a specific python version (which will be downloaded if you don't have it already) by providing the `--python` flag. For example, `uv venv --python 3.12`.\n\nActivate your new environment with `source .venv/bin/activate` for MacOS and Linux or `.\\.venv\\Scripts\\activate` for Windows.\n\n## Install required libraries for development\n\nThe `setup.py` file contains all the dependencies required for the project. To install these dependencies you can use `uv pip install -r setup.py --extra dev`\n\n### Setup pre-commit hooks\n\nWe use [pre-commit](https://pre-commit.com/) to ease the development process, which run some checks before you make a commit to have a faster feedback loop.\n\nTo setup the pre-commit hooks run: `pre-commit install`\n\n## Start editable mode\n\nInstall the library in editable mode using `uv pip install --no-build-isolation -e .` (this requires a C++ compiler).\n\nBy using the `-e` flag the package is linked directly to the source code, allowing any changes made to the source code to be immediately reflected in your Python environment without the need to reinstall the package. This is useful for testing changes during package development.\n\n### Re-compiling the shared library\nIf you're working on the C++ code, you'll need to re-compile the shared library, which can be done with: `python setup.py build_ext --inplace` (this will compile it into the `build` directory and copy it to the python package location).\n\n## Set Up your Notebook based development environment\n\nNotebook-based development refers to using interactive notebooks, such as Jupyter Notebooks, for coding, data analysis, and visualization. Here's a brief description of its characteristics:\n\n1. **Interactivity**: Code in notebooks is written in cells which can be run independently. This allows for iterative development and testing of small code snippets.\n\n2. **Visualization**: Notebooks can render charts, tables, images, and other graphical outputs within the same interface, making it great for data exploration and analysis.\n\n3. **Documentation**: Notebooks support Markdown and HTML, allowing for detailed inline documentation. Code, outputs, and documentation are in one place, which is ideal for tutorials, reports, or sharing work.\n\nFor notebook based development you'll need `nbdev` and a notebook editor (such as VS Code, Jupyter Notebook or Jupyter Lab). `nbdev` and jupyter have been installed in the previous step. If you use VS Code follow [this tutorial](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).\n\n[nbdev](https://github.com/fastai/nbdev) makes debugging and refactoring your code much easier than in traditional programming environments since you always have live objects at your fingertips. `nbdev` also promotes software engineering best practices because tests and documentation are first class.\n\nAll your changes must be written in the notebooks contained in the library (under the `nbs` directory). Once a specific notebook is open (more details to come), you can write your Python code in cells within the notebook, as you would do in a traditional Python development workflow. You can break down complex problems into smaller parts, visualizing data, and documenting your thought process. Along with your code, you can include markdown cells to add documentation directly in the notebook. This includes explanations of your logic, usage examples, and more. Also, `nbdev` allows you to write [tests inline](https://nbdev.fast.ai/tutorials/best_practices.html#document-error-cases-as-tests) with your code in your notebook. After writing a function, you can immediately write tests for it in the following cells.\n\nOnce your code is ready, `nbdev` can automatically convert your notebook into Python scripts. Code cells are converted into Python code, and markdown cells into comments and docstrings.\n\n## Start Coding\n\nOpen a jupyter notebook using `jupyter lab` (or VS Code).\n\n1. **Make Your Changes:** Make changes to the codebase, ensuring your changes are self-contained and cohesive.\n\n2. **Commit Your Changes:** Add the changed files using `git add [your_modified_file_0.ipynb] [your_modified_file_1.ipynb]`, then commit these changes using `git commit -m \"<type>: <Your descriptive commit message>\"`. Please use [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)\n\n\n3. **Push Your Changes:**\nPush your changes to the remote repository on GitHub with `git push origin feature/your-feature-name`.\n\n4. **Open a Pull Request:** Open a pull request from your new branch on the Nixtla repository on GitHub. Provide a thorough description of your changes when creating the pull request.\n\n5. **Wait for Review:** The maintainers of the Nixtla project will review your changes. Be ready to iterate on your contributions based on their feedback.\n\nRemember, contributing to open-source projects is a collaborative effort. Respect the work of others, welcome feedback, and always strive to improve. Happy coding!\n\n> Nixtla offers the possibility of assisting with stipends for computing infrastructure for our contributors. If you are interested, please join our [slack](https://nixtlacommunity.slack.com/join/shared_invite/zt-1pmhan9j5-F54XR20edHk0UtYAPcW4KQ#/shared-invite/email) and write to Azul or Max.\n\nYou can find a detailed step by step buide with screen-shots below.\n\n## Example with Screen-shots\n\n### 1. Create a fork of the mlforecast repo\nThe first thing you need to do is create a fork of the GitHub repository to your own account:\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/af767f5b-66f1-4068-9dd2-917096285ae9)\n\nYour fork on your account will look like this:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/912b848d-d3d1-4f79-9d5b-10dd66e1bd35)\n\nIn that repository, you can make your changes and then request to have them added to the main repo.\n\n### 2. Clone the repository\n\nIn this tutorial, we are using Mac (also compatible with other Linux distributions). If you are a collaborator of Nixtla, you can request an AWS instance to collaborate from there. If this is the case, please reach out to Max or Azul on [Slack](https://join.slack.com/t/nixtlacommunity/shared_invite/zt-1pmhan9j5-F54XR20edHk0UtYAPcW4KQ) to receive the appropriate access. We also use Visual Studio Code, which you can download from [here](https://code.visualstudio.com/download).\n\nOnce the repository is created, you need to clone it to your own computer. Simply copy the repository URL from GitHub as shown below:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/1331354e-ac24-4222-82f1-71df7077f2e0)\n\nThen open Visual Studio Code, click on \"Clone Git Repository,\" and paste the line you just copied into the top part of the window, as shown below:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/982827d5-89a6-43d4-8bb8-85bd1758bc10)\n\nSelect the folder where you want to copy the repository:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/c1a169e6-df27-41fb-84ee-a441a149e3d6)\n\nAnd choose to open the cloned repository:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/00140c15-237e-4afa-a47d-078a1afbbac0)\n\nYou will end up with something like this:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/ea4aed6f-2000-4ec8-a242-36b9dfd68d26)\n\n### 3. Make the changes you want.\n\nIn this section, we assume that we want to increase the default number of windows used to create prediction intervals from 2 to 3. The first thing we need to do is create a specific branch for that change using `git checkout -b [new_branch]` like this:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/7884f89a-ecc6-4200-8176-6a9b9f7c0aa2)\n\nOnce created, open the notebook you want to modify. In this case, it's `nbs/utils.ipynb`, which contains the metadata for the prediction intervals. After opening it, click on the environment you want to use (top right) and select the `.venv` environment.\n\nNext, execute the notebook and make the necessary changes. In this case, we want to modify the `PredictionIntervals` class:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/0a614d14-52c9-4ba1-88e5-02e19661cae7)\n\nWe will change the default value of `n_window` from 2 to 3:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/af31a79d-0165-4c79-94bc-f411ec67b3ea)\n\nOnce you have made the change and performed any necessary validations, it's time to convert the notebook to Python modules. To do this, simply use `nbdev_export` in the terminal.\n\nYou will see that the `mlforecast/utils.py` file has been modified (the changes from `nbs/utils.ipynb` are reflected in that module). Before committing the changes, we need to clean the notebooks using the command `./action_files/clean_nbs`.\n\nOnce you have done the above, simply add the changes using `git add nbs/utils.ipynb mlforecast/utils.py`:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/107689d8-a270-4621-ac5d-9d077d9203c3)\n\nCreate a descriptive commit message for the changes using `git commit -m \"[description of changes]\"`:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/034578e2-d63c-4d74-a96f-99f405288326)\n\nFinally, push your changes using `git push`:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/49c6851c-949b-4ca7-ac38-6b17ec103437)\n\n\n### 4. Create a pull request.\n\nIn GitHub, open your repository that contains your fork of the original repo. Once inside, you will see the changes you just pushed. Click on \"Compare and pull request\":\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/c3d2ce0d-5fc9-4356-87d3-51b32e72524a)\n\nInclude an appropriate title for your pull request and fill in the necessary information. Once you're done, click on \"Create pull request\".\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/7de9c461-ad49-4fc2-b648-507662466851)\n\nFinally, you will see something like this:\n\n![image](https://github.com/Nixtla/how-to-contribute-nixtlaverse/assets/10517170/846c0b97-46d2-492b-a58e-3e9f669c1632)\n\n\n## Notes\n- This file was generated using [this file](https://github.com/Nixtla/nixtla-commons/blob/main/docs/contribute/step-by-step.md). Please change that file if you want to enhance the document.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2022 Nixtla\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.486328125,
          "content": "## Include List\n\ninclude README.md\ninclude LICENSE\ninclude settings.ini\n\n\nrecursive-include python/statsforecast *\nrecursive-include include/statsforecast *\nrecursive-include external_libs *\n\n## Exclude List\n\nexclude CONTRIBUTING.md\nexclude Makefile\nexclude environment.yml\n\nexclude .gitconfig\nexclude .gitignore\nexclude .gitmodules\n\nrecursive-exclude .github *\nrecursive-exclude docs *\nrecursive-exclude examples *\nrecursive-exclude experiments *\nrecursive-exclude nbs *\nrecursive-exclude tests *\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.94921875,
          "content": "include dev/.help.mk \n\nSHELL := /bin/bash \nCURR_DIR := $(CURDIR)\n\nSTART_COMMAND := jupyter-lab --allow-root\nJUPYTER_LIST := jupyter-lab list\nPIPINSTALLE := pip install -e .\n\nbuild: # Command to build Docker file [optional]\n\t@docker build -t statsforecast -f dev/Dockerfile .\n\nrun: build # Run jupyter notebook using Docker image\n\t@docker run --name statsforecast --rm -d --network host -v $(CURR_DIR):/workdir/ statsforecast $(START_COMMAND)\n\t@docker exec statsforecast $(PIPINSTALLE)\n\nbuildless: # Run jupyter notebook using Docker image without building the image\n\t@docker run --name statsforecast --rm -d --network host -v $(CURR_DIR):/workdir/ statsforecast $(START_COMMAND)\n\t@docker exec statsforecast $(PIPINSTALLE)\n\naddress: # Show the ipaddress and port of Jupyter Notebook \n\t@docker exec statsforecast $(JUPYTER_LIST)\n\nstop: # Stops statsforecast container\n\t@docker stop statsforecast\n\nremove: # Deletes statsforecast Docker image\n\t@docker image rm statsforecast\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.912109375,
          "content": "# Nixtla &nbsp; [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Statistical%20Forecasting%20Algorithms%20by%20Nixtla%20&url=https://github.com/Nixtla/statsforecast&via=nixtlainc&hashtags=StatisticalModels,TimeSeries,Forecasting) &nbsp;[![Slack](https://img.shields.io/badge/Slack-4A154B?&logo=slack&logoColor=white)](https://join.slack.com/t/nixtlacommunity/shared_invite/zt-1pmhan9j5-F54XR20edHk0UtYAPcW4KQ)\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-32-orange.svg?style=flat-square)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/Nixtla/neuralforecast/main/nbs/imgs_indx/logo_mid.png\">\n<h1 align=\"center\">Statistical ⚡️ Forecast</h1>\n<h3 align=\"center\">Lightning fast forecasting with statistical and econometric models</h3>\n    \n[![CI](https://github.com/Nixtla/statsforecast/actions/workflows/ci.yaml/badge.svg?branch=main)](https://github.com/Nixtla/statsforecast/actions/workflows/ci.yaml)\n[![Python](https://img.shields.io/pypi/pyversions/statsforecast)](https://pypi.org/project/statsforecast/)\n[![PyPi](https://img.shields.io/pypi/v/statsforecast?color=blue)](https://pypi.org/project/statsforecast/)\n[![conda-nixtla](https://img.shields.io/conda/vn/conda-forge/statsforecast?color=seagreen&label=conda)](https://anaconda.org/conda-forge/statsforecast)\n[![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://github.com/Nixtla/statsforecast/blob/main/LICENSE)\n[![docs](https://img.shields.io/website-up-down-green-red/http/nixtla.github.io/statsforecast.svg?label=docs)](https://nixtla.github.io/statsforecast/)\n[![Downloads](https://pepy.tech/badge/statsforecast)](https://pepy.tech/project/statsforecast)\n    \n**StatsForecast** offers a collection of widely used univariate time series forecasting models, including automatic `ARIMA`, `ETS`, `CES`, and `Theta` modeling optimized for high performance using `numba`. It also includes a large battery of benchmarking models.\n</div>\n\n## Installation\n\nYou can install `StatsForecast` with:\n\n```python\npip install statsforecast\n```\n\nor \n\n```python\nconda install -c conda-forge statsforecast\n``` \n\n\nVist our [Installation Guide](https://nixtla.github.io/statsforecast/docs/getting-started/installation.html) for further instructions.\n\n## Quick Start\n\n**Minimal Example**\n\n```python\nfrom statsforecast import StatsForecast\nfrom statsforecast.models import AutoARIMA\nfrom statsforecast.utils import AirPassengersDF\n\ndf = AirPassengersDF\nsf = StatsForecast(\n    models=[AutoARIMA(season_length=12)],\n    freq='ME',\n)\nsf.fit(df)\nsf.predict(h=12, level=[95])\n```\n\n**Get Started with this [quick guide](https://nixtla.github.io/statsforecast/docs/getting-started/getting_started_short.html).**\n\n**Follow this [end-to-end walkthrough](https://nixtla.github.io/statsforecast/docs/getting-started/getting_started_complete.html) for best practices.**\n\n## Why? \n\nCurrent Python alternatives for statistical models are slow, inaccurate and don't scale well. So we created a library that can be used to forecast in production environments or as benchmarks.  `StatsForecast` includes an extensive battery of models that can efficiently fit millions of time series.\n\n## Features\n\n* Fastest and most accurate implementations of `AutoARIMA`, `AutoETS`, `AutoCES`, `MSTL` and `Theta` in Python. \n* Out-of-the-box compatibility with Spark, Dask, and Ray.\n* Probabilistic Forecasting and Confidence Intervals.\n* Support for exogenous Variables and static covariates.\n* Anomaly Detection.\n* Familiar sklearn syntax: `.fit` and `.predict`.\n\n## Highlights\n\n* Inclusion of `exogenous variables` and `prediction intervals` for ARIMA.\n* 20x [faster](./experiments/arima/) than `pmdarima`.\n* 1.5x faster than `R`.\n* 500x faster than `Prophet`. \n* 4x [faster](./experiments/ets/) than `statsmodels`.\n* Compiled to high performance machine code through [`numba`](https://numba.pydata.org/).\n* 1,000,000 series in [30 min](https://github.com/Nixtla/statsforecast/tree/main/experiments/ray) with [ray](https://github.com/ray-project/ray).\n* Replace FB-Prophet in two lines of code and gain speed and accuracy. Check the experiments [here](https://github.com/Nixtla/statsforecast/tree/main/experiments/arima_prophet_adapter).\n* Fit 10 benchmark models on **1,000,000** series in [under **5 min**](./experiments/benchmarks_at_scale/). \n\n\nMissing something? Please open an issue or write us in [![Slack](https://img.shields.io/badge/Slack-4A154B?&logo=slack&logoColor=white)](https://join.slack.com/t/nixtlaworkspace/shared_invite/zt-135dssye9-fWTzMpv2WBthq8NK0Yvu6A)\n\n## Examples and Guides\n\n📚 [End to End Walkthrough](https://nixtla.github.io/statsforecast/docs/getting-started/getting_started_complete.html): Model training, evaluation and selection for multiple time series\n\n🔎 [Anomaly Detection](https://nixtla.github.io/statsforecast/docs/tutorials/anomalydetection.html): detect anomalies for time series using in-sample prediction intervals.\n\n👩‍🔬 [Cross Validation](https://nixtla.github.io/statsforecast/docs/tutorials/crossvalidation.html): robust model’s performance evaluation.\n\n❄️ [Multiple Seasonalities](https://nixtla.github.io/statsforecast/docs/tutorials/multipleseasonalities.html): how to forecast data with multiple seasonalities using an MSTL.\n\n🔌 [Predict Demand Peaks](https://nixtla.github.io/statsforecast/docs/tutorials/electricitypeakforecasting.html): electricity load forecasting for detecting daily peaks and reducing electric bills.\n\n📈 [Intermittent Demand](https://nixtla.github.io/statsforecast/docs/tutorials/intermittentdata.html): forecast series with very few non-zero observations. \n\n🌡️ [Exogenous Regressors](https://nixtla.github.io/statsforecast/docs/how-to-guides/exogenous.html): like weather or prices\n\n\n## Models\n\n### Automatic Forecasting\nAutomatic forecasting tools search for the best parameters and select the best possible model for a group of time series. These tools are useful for large collections of univariate time series.\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[AutoARIMA](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#autoarima)|✅|✅|✅|✅|✅|\n|[AutoETS](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#autoets)|✅|✅|✅|✅||\n|[AutoCES](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#autoces)|✅|✅|✅|✅||\n|[AutoTheta](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#autotheta)|✅|✅|✅|✅||\n|[AutoMFLES](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#automfles)|✅|✅|✅|✅|✅|\n|[AutoTBATS](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#autotbats)|✅|✅|✅|✅||\n\n### ARIMA Family\nThese models exploit the existing autocorrelations in the time series.\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[ARIMA](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#arima)|✅|✅|✅|✅|✅|\n|[AutoRegressive](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#autoregressive)|✅|✅|✅|✅|✅|\n\n### Theta Family\nFit two theta lines to a deseasonalized time series, using different techniques to obtain and combine the two theta lines to produce the final forecasts.\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[Theta](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#theta)|✅|✅|✅|✅||\n|[OptimizedTheta](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#optimizedtheta)|✅|✅|✅|✅||\n|[DynamicTheta](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#dynamictheta)|✅|✅|✅|✅||\n|[DynamicOptimizedTheta](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#dynamicoptimizedtheta)|✅|✅|✅|✅||\n\n\n### Multiple Seasonalities\nSuited for signals with more than one clear seasonality. Useful for low-frequency data like electricity and logs.\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[MSTL](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#mstl)|✅|✅|✅|✅|If trend forecaster supports|\n|[MFLES](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#mfles)|✅|✅|✅|✅|✅|\n|[TBATS](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#tbats)|✅|✅|✅|✅||\n\n### GARCH and ARCH Models \nSuited for modeling time series that exhibit non-constant volatility over time. The ARCH model is a particular case of GARCH. \n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[GARCH](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#garch)|✅|✅|✅|✅||\n|[ARCH](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#arch)|✅|✅|✅|✅||\n\n### Baseline Models\nClassical models for establishing baseline.\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[HistoricAverage](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#historicaverage)|✅|✅|✅|✅||\n|[Naive](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#naive)|✅|✅|✅|✅||\n|[RandomWalkWithDrift](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#randomwalkwithdrift)|✅|✅|✅|✅||\n|[SeasonalNaive](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#seasonalnaive)|✅|✅|✅|✅||\n|[WindowAverage](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#windowaverage)|✅|||||\n|[SeasonalWindowAverage](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#seasonalwindowaverage)|✅|||||\n\n### Exponential Smoothing\nUses a weighted average of all past observations where the weights decrease exponentially into the past. Suitable for data with clear trend and/or seasonality. Use the `SimpleExponential` family for data with no clear trend or seasonality.\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[SimpleExponentialSmoothing](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#simpleexponentialsmoothing)|✅|||||\n|[SimpleExponentialSmoothingOptimized](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#simpleexponentialsmoothingoptimized)|✅|||||\n|[SeasonalExponentialSmoothing](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#seasonalexponentialsmoothing)|✅|||||\n|[SeasonalExponentialSmoothingOptimized](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#seasonalexponentialsmoothingoptimized)|✅|||||\n|[Holt](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#holt)|✅|✅|✅|✅||\n|[HoltWinters](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#holtwinters)|✅|✅|✅|✅||\n\n### Sparse or Inttermitent\nSuited for series with very few non-zero observations\n\n|Model | Point Forecast | Probabilistic Forecast | Insample fitted values | Probabilistic fitted values |Exogenous features|\n|:------|:-------------:|:----------------------:|:---------------------:|:----------------------------:|:----------------:|\n|[ADIDA](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#adida)|✅||✅|✅||\n|[CrostonClassic](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#crostonclassic)|✅||✅|✅||\n|[CrostonOptimized](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#crostonoptimized)|✅||✅|✅||\n|[CrostonSBA](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#crostonsba)|✅||✅|✅||\n|[IMAPA](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#imapa)|✅||✅|✅||\n|[TSB](https://nixtlaverse.nixtla.io/statsforecast/src/core/models.html#tsb)|✅||✅|✅||\n\n## 🔨 How to contribute\nSee [CONTRIBUTING.md](https://github.com/Nixtla/statsforecast/blob/main/CONTRIBUTING.md).\n\n## Citing\n\n```bibtex\n@misc{garza2022statsforecast,\n    author={Azul Garza, Max Mergenthaler Canseco, Cristian Challú, Kin G. Olivares},\n    title = {{StatsForecast}: Lightning fast forecasting with statistical and econometric models},\n    year={2022},\n    howpublished={{PyCon} Salt Lake City, Utah, US 2022},\n    url={https://github.com/Nixtla/statsforecast}\n}\n```\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/AzulGarza\"><img src=\"https://avatars.githubusercontent.com/u/10517170?v=4?s=100\" width=\"100px;\" alt=\"azul\"/><br /><sub><b>azul</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=AzulGarza\" title=\"Code\">💻</a> <a href=\"#maintenance-AzulGarza\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jmoralez\"><img src=\"https://avatars.githubusercontent.com/u/8473587?v=4?s=100\" width=\"100px;\" alt=\"José Morales\"/><br /><sub><b>José Morales</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=jmoralez\" title=\"Code\">💻</a> <a href=\"#maintenance-jmoralez\" title=\"Maintenance\">🚧</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/sugatoray/\"><img src=\"https://avatars.githubusercontent.com/u/10201242?v=4?s=100\" width=\"100px;\" alt=\"Sugato Ray\"/><br /><sub><b>Sugato Ray</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=sugatoray\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://www.jefftackes.com\"><img src=\"https://avatars.githubusercontent.com/u/9125316?v=4?s=100\" width=\"100px;\" alt=\"Jeff Tackes\"/><br /><sub><b>Jeff Tackes</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/issues?q=author%3Atackes\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/darinkist\"><img src=\"https://avatars.githubusercontent.com/u/62692170?v=4?s=100\" width=\"100px;\" alt=\"darinkist\"/><br /><sub><b>darinkist</b></sub></a><br /><a href=\"#ideas-darinkist\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/alech97\"><img src=\"https://avatars.githubusercontent.com/u/22159405?v=4?s=100\" width=\"100px;\" alt=\"Alec Helyar\"/><br /><sub><b>Alec Helyar</b></sub></a><br /><a href=\"#question-alech97\" title=\"Answering Questions\">💬</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://dhirschfeld.github.io\"><img src=\"https://avatars.githubusercontent.com/u/881019?v=4?s=100\" width=\"100px;\" alt=\"Dave Hirschfeld\"/><br /><sub><b>Dave Hirschfeld</b></sub></a><br /><a href=\"#question-dhirschfeld\" title=\"Answering Questions\">💬</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mergenthaler\"><img src=\"https://avatars.githubusercontent.com/u/4086186?v=4?s=100\" width=\"100px;\" alt=\"mergenthaler\"/><br /><sub><b>mergenthaler</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=mergenthaler\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/kdgutier\"><img src=\"https://avatars.githubusercontent.com/u/19935241?v=4?s=100\" width=\"100px;\" alt=\"Kin\"/><br /><sub><b>Kin</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=kdgutier\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Yasslight90\"><img src=\"https://avatars.githubusercontent.com/u/58293883?v=4?s=100\" width=\"100px;\" alt=\"Yasslight90\"/><br /><sub><b>Yasslight90</b></sub></a><br /><a href=\"#ideas-Yasslight90\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/asinig\"><img src=\"https://avatars.githubusercontent.com/u/99350687?v=4?s=100\" width=\"100px;\" alt=\"asinig\"/><br /><sub><b>asinig</b></sub></a><br /><a href=\"#ideas-asinig\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/guerda\"><img src=\"https://avatars.githubusercontent.com/u/230782?v=4?s=100\" width=\"100px;\" alt=\"Philip Gillißen\"/><br /><sub><b>Philip Gillißen</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=guerda\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/shagn\"><img src=\"https://avatars.githubusercontent.com/u/16029092?v=4?s=100\" width=\"100px;\" alt=\"Sebastian Hagn\"/><br /><sub><b>Sebastian Hagn</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/issues?q=author%3Ashagn\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/Nixtla/statsforecast/commits?author=shagn\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/fugue-project/fugue\"><img src=\"https://avatars.githubusercontent.com/u/21092479?v=4?s=100\" width=\"100px;\" alt=\"Han Wang\"/><br /><sub><b>Han Wang</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=goodwanghan\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/benjamin-jeffrey-218548a8/\"><img src=\"https://avatars.githubusercontent.com/u/36240394?v=4?s=100\" width=\"100px;\" alt=\"Ben Jeffrey\"/><br /><sub><b>Ben Jeffrey</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/issues?q=author%3Abjeffrey92\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Beliavsky\"><img src=\"https://avatars.githubusercontent.com/u/38887928?v=4?s=100\" width=\"100px;\" alt=\"Beliavsky\"/><br /><sub><b>Beliavsky</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=Beliavsky\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/MMenchero\"><img src=\"https://avatars.githubusercontent.com/u/47995617?v=4?s=100\" width=\"100px;\" alt=\"Mariana Menchero García \"/><br /><sub><b>Mariana Menchero García </b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=MMenchero\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/guptanick/\"><img src=\"https://avatars.githubusercontent.com/u/33585645?v=4?s=100\" width=\"100px;\" alt=\"Nikhil Gupta\"/><br /><sub><b>Nikhil Gupta</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/issues?q=author%3Angupta23\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jdegene\"><img src=\"https://avatars.githubusercontent.com/u/17744939?v=4?s=100\" width=\"100px;\" alt=\"JD\"/><br /><sub><b>JD</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/issues?q=author%3Ajdegene\" title=\"Bug reports\">🐛</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jattenberg\"><img src=\"https://avatars.githubusercontent.com/u/924185?v=4?s=100\" width=\"100px;\" alt=\"josh attenberg\"/><br /><sub><b>josh attenberg</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=jattenberg\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/JeroenPeterBos\"><img src=\"https://avatars.githubusercontent.com/u/15342738?v=4?s=100\" width=\"100px;\" alt=\"JeroenPeterBos\"/><br /><sub><b>JeroenPeterBos</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=JeroenPeterBos\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jvdd\"><img src=\"https://avatars.githubusercontent.com/u/18898740?v=4?s=100\" width=\"100px;\" alt=\"Jeroen Van Der Donckt\"/><br /><sub><b>Jeroen Van Der Donckt</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=jvdd\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Roymprog\"><img src=\"https://avatars.githubusercontent.com/u/4035367?v=4?s=100\" width=\"100px;\" alt=\"Roymprog\"/><br /><sub><b>Roymprog</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=Roymprog\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nelsoncardenas\"><img src=\"https://avatars.githubusercontent.com/u/18086414?v=4?s=100\" width=\"100px;\" alt=\"Nelson Cárdenas Bolaño\"/><br /><sub><b>Nelson Cárdenas Bolaño</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=nelsoncardenas\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/kschmaus\"><img src=\"https://avatars.githubusercontent.com/u/6586847?v=4?s=100\" width=\"100px;\" alt=\"Kyle Schmaus\"/><br /><sub><b>Kyle Schmaus</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=kschmaus\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/akmal-soliev/\"><img src=\"https://avatars.githubusercontent.com/u/24494206?v=4?s=100\" width=\"100px;\" alt=\"Akmal Soliev\"/><br /><sub><b>Akmal Soliev</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=akmalsoliev\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nickto\"><img src=\"https://avatars.githubusercontent.com/u/11967792?v=4?s=100\" width=\"100px;\" alt=\"Nick To\"/><br /><sub><b>Nick To</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=nickto\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/kvnkho/\"><img src=\"https://avatars.githubusercontent.com/u/32503212?v=4?s=100\" width=\"100px;\" alt=\"Kevin Kho\"/><br /><sub><b>Kevin Kho</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=kvnkho\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/yibenhuang\"><img src=\"https://avatars.githubusercontent.com/u/62163340?v=4?s=100\" width=\"100px;\" alt=\"Yiben Huang\"/><br /><sub><b>Yiben Huang</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=yibenhuang\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/andrewgross\"><img src=\"https://avatars.githubusercontent.com/u/370118?v=4?s=100\" width=\"100px;\" alt=\"Andrew Gross\"/><br /><sub><b>Andrew Gross</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=andrewgross\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/taniishkaaa\"><img src=\"https://avatars.githubusercontent.com/u/109246904?v=4?s=100\" width=\"100px;\" alt=\"taniishkaaa\"/><br /><sub><b>taniishkaaa</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=taniishkaaa\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://manuel.calzolari.name\"><img src=\"https://avatars.githubusercontent.com/u/2764902?v=4?s=100\" width=\"100px;\" alt=\"Manuel Calzolari\"/><br /><sub><b>Manuel Calzolari</b></sub></a><br /><a href=\"https://github.com/Nixtla/statsforecast/commits?author=manuel-calzolari\" title=\"Code\">💻</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n"
        },
        {
          "name": "action_files",
          "type": "tree",
          "content": null
        },
        {
          "name": "experiments",
          "type": "tree",
          "content": null
        },
        {
          "name": "external_libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "nbs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.2685546875,
          "content": "[build-system]\nrequires = [\"setuptools>=42\", \"pybind11>=2.10\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.cibuildwheel]\narchs = \"all\"\nbuild-verbosity = 1\n\n[tool.ruff]\ntarget-version = \"py38\"\nline-length = 88\nlint.select = [\"F\"]\n\n[tool.mypy]\nignore_missing_imports = true\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.ini",
          "type": "blob",
          "size": 1.3134765625,
          "content": "[DEFAULT]\nhost = github\nlib_name = statsforecast\nuser = Nixtla\ndescription = Time series forecasting suite using statistical models\nkeywords = time-series forecasting arima ets\nauthor = Nixtla\nauthor_email = business@nixtla.io\ncopyright = Nixtla Inc.\nbranch = main\nversion = 2.0.0.99\nmin_python = 3.9\naudience = Developers\nlanguage = English\ncustom_sidebar = True\nlicense = apache2\nstatus = 4\nrequirements = cloudpickle coreforecast>=0.0.12 numba>=0.55.0 numpy>=1.21.6 pandas>=1.3.5 scipy>=1.7.3 statsmodels>=0.13.2 tqdm fugue>=0.8.1 utilsforecast>=0.1.4 threadpoolctl>=3\npolars_requirements = polars[numpy]\nray_requirements = fugue[ray]>=0.8.1 protobuf>=3.15.3,<4.0.0 numpy<2 pandas<2.2 ray<=2.10\ndask_requirements = fugue[dask]>=0.8.1\nspark_requirements = fugue[spark]>=0.8.1\nplotly_requirements = plotly plotly-resampler\ndev_requirements = black datasetsforecast fire nbdev==2.3.25 nbformat nbdev_plotly pandas[plot] pmdarima polars[numpy] pre-commit prophet pyarrow pybind11 pytest scikit-learn setuptools<70 supersmoother yfinance\nnbs_path = nbs\ndoc_path = _docs\nrecursive = True\ndoc_host =  https://%(user)s.github.io\ndoc_baseurl = /%(lib_name)s/\ngit_url = https://github.com/%(user)s/statsforecast/\nlib_path = python/statsforecast\ntitle = %(lib_name)s\nblack_formatting = True\njupyter_hooks = True\nclean_ids = True\nreadme_nb = index.ipynb\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.560546875,
          "content": "import glob\n\nimport setuptools\nfrom configparser import ConfigParser\nfrom pybind11.setup_helpers import ParallelCompile, Pybind11Extension, naive_recompile\n\n# note: all settings are in settings.ini; edit there, not here\nconfig = ConfigParser(delimiters=['='])\nconfig.read('settings.ini')\ncfg = config['DEFAULT']\n\ncfg_keys = 'version description keywords author author_email'.split()\nexpected = cfg_keys + \"lib_name user branch license status min_python audience language\".split()\nfor o in expected: assert o in cfg, \"missing expected setting: {}\".format(o)\nsetup_cfg = {o:cfg[o] for o in cfg_keys}\n\nlicenses = {\n    'apache2': ('Apache Software License 2.0','OSI Approved :: Apache Software License'),\n    'mit': ('MIT License', 'OSI Approved :: MIT License'),\n    'gpl2': ('GNU General Public License v2', 'OSI Approved :: GNU General Public License v2 (GPLv2)'),\n    'gpl3': ('GNU General Public License v3', 'OSI Approved :: GNU General Public License v3 (GPLv3)'),\n    'bsd3': ('BSD License', 'OSI Approved :: BSD License'),\n}\nstatuses = [\n    '1 - Planning',\n    '2 - Pre-Alpha',\n    '3 - Alpha',\n    '4 - Beta',\n    '5 - Production/Stable',\n    '6 - Mature',\n    '7 - Inactive'\n]\npy_versions = '3.9 3.10 3.11 3.12'.split()\n\nrequirements = cfg.get('requirements','').split()\nif cfg.get('pip_requirements'): requirements += cfg.get('pip_requirements','').split()\nmin_python = cfg['min_python']\nlic = licenses.get(cfg['license'].lower(), (cfg['license'], None))\ndask_requirements = cfg['dask_requirements'].split()\nray_requirements = [\n    req + \" ; python_version < '3.12'\" for req in cfg['ray_requirements'].split()\n]\nspark_requirements = cfg['spark_requirements'].split()\nplotly_requirements = cfg['plotly_requirements'].split()\npolars_requirements = cfg['polars_requirements'].split()\ndev_requirements = cfg['dev_requirements'].split()\nall_requirements = [\n    *dask_requirements,\n    *spark_requirements,\n    *plotly_requirements,\n    *polars_requirements,\n    *dev_requirements,\n    *ray_requirements,\n]\n\next_modules = [\n    Pybind11Extension(\n        name=\"statsforecast._lib\",\n        sources=glob.glob(\"src/*.cpp\"),\n        include_dirs=[\"include/statsforecast\", \"external_libs/eigen\"],\n        cxx_std=20,\n    )\n]\nParallelCompile(\"CMAKE_BUILD_PARALLEL_LEVEL\", needs_recompile=naive_recompile).install()\n\nsetuptools.setup(\n    name = 'statsforecast',\n    license = lic[0],\n    classifiers = [\n        'Development Status :: ' + statuses[int(cfg['status'])],\n        'Intended Audience :: ' + cfg['audience'].title(),\n        'Natural Language :: ' + cfg['language'].title(),\n    ] + ['Programming Language :: Python :: '+o for o in py_versions[py_versions.index(min_python):]] + (['License :: ' + lic[1] ] if lic[1] else []),\n    url = cfg['git_url'],\n    package_dir={\"\": \"python\"},\n    packages = setuptools.find_packages(where=\"python\"),\n    include_package_data = True,\n    install_requires = requirements,\n    extras_require={\n        'dev': dev_requirements,\n        'dask': dask_requirements,\n        'ray': ray_requirements,\n        'spark': spark_requirements,\n        'plotly': plotly_requirements,\n        'polars': polars_requirements,\n        'all': all_requirements,\n    },\n    dependency_links = cfg.get('dep_links','').split(),\n    python_requires  = '>=' + cfg['min_python'],\n    long_description = open('README.md', encoding='utf8').read(),\n    long_description_content_type = 'text/markdown',\n    zip_safe = False,\n    entry_points = {\n        'console_scripts': cfg.get('console_scripts','').split(),\n        'nbdev': ['statsforecast=statsforecast._modidx:d']\n    },\n    ext_modules=ext_modules,\n    **setup_cfg\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}