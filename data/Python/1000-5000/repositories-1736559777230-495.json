{
  "metadata": {
    "timestamp": 1736559777230,
    "page": 495,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "diego-vicente/som-tsp",
      "stars": 3883,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3193359375,
          "content": "\n# Created by https://www.gitignore.io/api/macos,emacs,python\n\n### Emacs ###\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\ndist/\n\n# Flycheck\nflycheck_*.el\n\n# server auth directory\n/server/\n\n# projectiles files\n.projectile\nprojectile-bookmarks.eld\n\n# directory configuration\n.dir-locals.el\n\n# saveplace\nplaces\n\n# url cache\nurl/cache/\n\n# cedet\nede-projects.el\n\n# smex\nsmex-items\n\n# company-statistics\ncompany-statistics-cache.el\n\n# anaconda-mode\nanaconda-mode/\n\n### macOS ###\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# End of https://www.gitignore.io/api/macos,emacs,python\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Diego Vicente\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.org",
          "type": "blob",
          "size": 1.9208984375,
          "content": "#+TITLE:  Solving the Traveling Salesman Problem using Self-Organizing Maps\n#+AUTHOR: Diego Vicente Mart√≠n\n#+EMAIL:  mail@diego.codes\n\nThis repository contains an implementation of a Self Organizing Map that can be\nused to find sub-optimal solutions for the Traveling Salesman Problem. The\ninstances of the problems that the program supports are =.tsp= files, which is\na widespread format in this problem. All the source code can be found in the\n=src= directory, while a report and brief presentation slides (in Spanish) can\nbe found in the =report= folder. However, for a complete read on the topic, you\ncan read [[https://diego.codes/post/som-tsp/][my blog post explaining this implementation and its evaluation]].\n\n[[file:diagrams/uruguay.gif]]\n\nTo run the code, only Python 3 and the dependencies (=matplotlib=, =numpy= and =pandas=,\nwhich are included in the Anaconda distribution by default) are needed. In case\nyou are not using Anaconda, you can install all the dependencies with:\n\n#+BEGIN_SRC sh\npip install -r requirements.txt\n#+END_SRC\n\nTo run the code, simply execute:\n\n#+BEGIN_SRC sh\ncd som-tsp\npython src/main.py assets/<instance>.tsp\n#+END_SRC\n\nThe images generated will be stored in the =diagrams= folder. Using a tool like\n=convert=, you can easily generate an animation like the one in this file by\nrunning:\n\n#+BEGIN_SRC sh\nconvert -delay 10 -loop 0 *.png animation.gif\n#+END_SRC\n\nThis code is licensed under MIT License, so feel free to modify and/or use it\nin your projects. If you have any doubts, feel free to contact me or contribute\nto this repository by creating an issue.\n\n-----\n\nThis code was presented for the Bio-Inspired Artificial Intelligence course in\nthe Computer Science & Technology master's degree @ UC3M. A previous version of\nthis code can be found in [[https://github.com/DiegoVicen/ntnu-som][this repository]]. Special thanks to [[https://github.com/leo-labs][Leonard Kleinans]],\nwho worked with me in that previous version.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "diagrams",
          "type": "tree",
          "content": null
        },
        {
          "name": "report",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0458984375,
          "content": "matplotlib==2.1.0\npandas==0.20.3\nnumpy==1.14.0\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}