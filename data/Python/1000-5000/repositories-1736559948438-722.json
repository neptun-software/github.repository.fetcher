{
  "metadata": {
    "timestamp": 1736559948438,
    "page": 722,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "open-mmlab/mmpretrain",
      "stars": 3527,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0966796875,
          "content": "[report]\nexclude_lines =\n    @abstractmethod\n    @abc.abstractmethod\n    raise NotImplementedError\n"
        },
        {
          "name": ".dev_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.06640625,
          "content": "docs/** linguist-documentation\ndocs_zh-CN/** linguist-documentation\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.806640625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n**/*.pyc\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\noutputs/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Auto generate documentation\ndocs/en/_build/\ndocs/en/_model_zoo.rst\ndocs/en/modelzoo_statistics.md\ndocs/en/papers/\ndocs/en/api/generated/\ndocs/zh_CN/_build/\ndocs/zh_CN/_model_zoo.rst\ndocs/zh_CN/modelzoo_statistics.md\ndocs/zh_CN/papers/\ndocs/zh_CN/api/generated/\ndocs/zh_CN/locales/\n!docs/zh_CN/locales/zh_CN/LC_MESSAGES/api.po\n!docs/zh_CN/locales/zh_CN/LC_MESSAGES/papers.po\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# custom\n/data\n.vscode\n.idea\n*.pkl\n*.pkl.json\n*.log.json\n/work_dirs\n/projects/*/work_dirs\n/projects/*/data\n/mmpretrain/.mim\n.DS_Store\n\n# Pytorch\n*.pth\n\n# IPU\n*.pvti\n*.pvti-journal\n/cache_engine\n/report\n\n# slurm\n*.out\n\n# tensorflow\n*.tar.gz\ncheckpoint\nmodel_params.txt\n*.ckpt*\nresults.txt\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.0947265625,
          "content": "exclude: ^tests/data/\nrepos:\n  - repo: https://github.com/PyCQA/flake8\n    rev: 4.0.1\n    hooks:\n      - id: flake8\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.11.5\n    hooks:\n      - id: isort\n  - repo: https://github.com/pre-commit/mirrors-yapf\n    rev: v0.30.0\n    hooks:\n      - id: yapf\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.1.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: requirements-txt-fixer\n      - id: double-quote-string-fixer\n      - id: check-merge-conflict\n      - id: fix-encoding-pragma\n        args: [\"--remove\"]\n      - id: mixed-line-ending\n        args: [\"--fix=lf\"]\n  - repo: https://github.com/executablebooks/mdformat\n    rev: 0.7.9\n    hooks:\n      - id: mdformat\n        args: [\"--number\", \"--table-width\", \"200\", '--disable-escape', 'backslash', '--disable-escape', 'link-enclosure']\n        additional_dependencies:\n          - \"mdformat-openmmlab>=0.0.4\"\n          - mdformat_frontmatter\n          - linkify-it-py\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.1.0\n    hooks:\n      - id: codespell\n  - repo: https://github.com/myint/docformatter\n    rev: v1.3.1\n    hooks:\n      - id: docformatter\n        args: [\"--in-place\", \"--wrap-descriptions\", \"79\"]\n  - repo: https://github.com/open-mmlab/pre-commit-hooks\n    rev: v0.4.0\n    hooks:\n    -   id: check-copyright\n        args: [\"mmpretrain\", \"tests\", \"demo\", \"tools\", \"--excludes\", \"mmpretrain/.mim/\", \"--ignore-file-not-found-error\"]\n  - repo: local\n    hooks:\n      - id: metafile\n        args: ['--skip', 'flops-param']\n        name: metafile\n        description: Check the format of metafile\n        entry: python .dev_scripts/check_metafile.py\n        language: python\n        files: (metafile)\\.(yml)$\n        additional_dependencies:\n          - modelindex\n  # - repo: local\n  #   hooks:\n  #     - id: clang-format\n  #       name: clang-format\n  #       description: Format files with ClangFormat\n  #       entry: clang-format -style=google -i\n  #       language: system\n  #       files: \\.(c|cc|cxx|cpp|cu|h|hpp|hxx|cuh|proto)$\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.25,
          "content": "version: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.8\"\n\nformats:\n    - epub\n\npython:\n  install:\n    - requirements: requirements/docs.txt\n    - requirements: requirements/readthedocs.txt\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.296875,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\ntitle: \"OpenMMLab's Pre-training Toolbox and Benchmark\"\nauthors:\n  - name: \"MMPreTrain Contributors\"\nversion: 0.15.0\ndate-released: 2023-04-06\nrepository-code: \"https://github.com/open-mmlab/mmpretrain\"\nlicense: Apache-2.0\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.896484375,
          "content": "# Contributing to MMPreTrain\n\n- [Contributing to MMPreTrain](#contributing-to-mmpretrain)\n  - [Workflow](#workflow)\n  - [Code style](#code-style)\n    - [Python](#python)\n    - [C++ and CUDA](#c-and-cuda)\n  - [Pre-commit Hook](#pre-commit-hook)\n\nThanks for your interest in contributing to MMPreTrain! All kinds of contributions are welcome, including but not limited to the following.\n\n- Fix typo or bugs\n- Add documentation or translate the documentation into other languages\n- Add new features and components\n\n## Workflow\n\nWe recommend the potential contributors follow this workflow for contribution.\n\n1. Fork and pull the latest MMPreTrain repository, follow [get started](https://mmpretrain.readthedocs.io/en/latest/get_started.html) to setup the environment.\n2. Checkout a new branch (**do not use the master or dev branch** for PRs)\n\n```bash\ngit checkout -b xxxx # xxxx is the name of new branch\n```\n\n3. Edit the related files follow the code style mentioned below\n4. Use [pre-commit hook](https://pre-commit.com/) to check and format your changes.\n5. Commit your changes\n6. Create a PR with related information\n\n## Code style\n\n### Python\n\nWe adopt [PEP8](https://www.python.org/dev/peps/pep-0008/) as the preferred code style.\n\nWe use the following tools for linting and formatting:\n\n- [flake8](https://github.com/PyCQA/flake8): A wrapper around some linter tools.\n- [isort](https://github.com/timothycrosley/isort): A Python utility to sort imports.\n- [yapf](https://github.com/google/yapf): A formatter for Python files.\n- [codespell](https://github.com/codespell-project/codespell): A Python utility to fix common misspellings in text files.\n- [mdformat](https://github.com/executablebooks/mdformat): Mdformat is an opinionated Markdown formatter that can be used to enforce a consistent style in Markdown files.\n- [docformatter](https://github.com/myint/docformatter): A formatter to format docstring.\n\nStyle configurations of yapf and isort can be found in [setup.cfg](https://github.com/open-mmlab/mmpretrain/blob/main/setup.cfg).\n\n### C++ and CUDA\n\nWe follow the [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html).\n\n## Pre-commit Hook\n\nWe use [pre-commit hook](https://pre-commit.com/) that checks and formats for `flake8`, `yapf`, `isort`, `trailing whitespaces`, `markdown files`,\nfixes `end-of-files`, `double-quoted-strings`, `python-encoding-pragma`, `mixed-line-ending`, sorts `requirments.txt` automatically on every commit.\nThe config for a pre-commit hook is stored in [.pre-commit-config](https://github.com/open-mmlab/mmpretrain/blob/main/.pre-commit-config.yaml).\n\nAfter you clone the repository, you will need to install initialize pre-commit hook.\n\n```shell\npip install -U pre-commit\n```\n\nFrom the repository folder\n\n```shell\npre-commit install\n```\n\nAfter this on every commit check code linters and formatter will be enforced.\n\n> Before you create a PR, make sure that your code lints and is formatted by yapf.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1279296875,
          "content": "Copyright (c) OpenMMLab. All rights reserved\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020 MMPreTrain Authors.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.20703125,
          "content": "include requirements/*.txt\ninclude mmpretrain/.mim/model-index.yml\ninclude mmpretrain/.mim/dataset-index.yml\nrecursive-include mmpretrain/.mim/configs *.py *.yml\nrecursive-include mmpretrain/.mim/tools *.py *.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.4970703125,
          "content": "<div align=\"center\">\n\n<img src=\"resources/mmpt-logo.png\" width=\"600\"/>\n  <div>&nbsp;</div>\n  <div align=\"center\">\n    <b><font size=\"5\">OpenMMLab website</font></b>\n    <sup>\n      <a href=\"https://openmmlab.com\">\n        <i><font size=\"4\">HOT</font></i>\n      </a>\n    </sup>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <b><font size=\"5\">OpenMMLab platform</font></b>\n    <sup>\n      <a href=\"https://platform.openmmlab.com\">\n        <i><font size=\"4\">TRY IT OUT</font></i>\n      </a>\n    </sup>\n  </div>\n  <div>&nbsp;</div>\n\n[![PyPI](https://img.shields.io/pypi/v/mmpretrain)](https://pypi.org/project/mmpretrain)\n[![Docs](https://img.shields.io/badge/docs-latest-blue)](https://mmpretrain.readthedocs.io/en/latest/)\n[![Build Status](https://github.com/open-mmlab/mmpretrain/workflows/build/badge.svg)](https://github.com/open-mmlab/mmpretrain/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmpretrain/branch/main/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmpretrain)\n[![license](https://img.shields.io/github/license/open-mmlab/mmpretrain.svg)](https://github.com/open-mmlab/mmpretrain/blob/main/LICENSE)\n[![open issues](https://isitmaintained.com/badge/open/open-mmlab/mmpretrain.svg)](https://github.com/open-mmlab/mmpretrain/issues)\n[![issue resolution](https://isitmaintained.com/badge/resolution/open-mmlab/mmpretrain.svg)](https://github.com/open-mmlab/mmpretrain/issues)\n\n[📘 Documentation](https://mmpretrain.readthedocs.io/en/latest/) |\n[🛠️ Installation](https://mmpretrain.readthedocs.io/en/latest/get_started.html#installation) |\n[👀 Model Zoo](https://mmpretrain.readthedocs.io/en/latest/modelzoo_statistics.html) |\n[🆕 Update News](https://mmpretrain.readthedocs.io/en/latest/notes/changelog.html) |\n[🤔 Reporting Issues](https://github.com/open-mmlab/mmpretrain/issues/new/choose)\n\n<img src=\"https://user-images.githubusercontent.com/36138628/230307505-4727ad0a-7d71-4069-939d-b499c7e272b7.png\" width=\"400\"/>\n\nEnglish | [简体中文](/README_zh-CN.md)\n\n</div>\n\n</div>\n\n<div align=\"center\">\n  <a href=\"https://openmmlab.medium.com/\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219255827-67c1a27f-f8c5-46a9-811d-5e57448c61d1.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://discord.gg/raweFPmdzG\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218347213-c080267f-cbb6-443e-8532-8e1ed9a58ea9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://twitter.com/OpenMMLab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346637-d30c8a0f-3eba-4699-8131-512fb06d46db.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.youtube.com/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346691-ceb2116a-465a-40af-8424-9f30d2348ca9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://space.bilibili.com/1293512903\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026751-d7d14cce-a7c9-4e82-9942-8375fca65b99.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.zhihu.com/people/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026120-ba71e48b-6e94-4bd4-b4e9-b7d175b5e362.png\" width=\"3%\" alt=\"\" /></a>\n</div>\n\n## Introduction\n\nMMPreTrain is an open source pre-training toolbox based on PyTorch. It is a part of the [OpenMMLab](https://openmmlab.com/) project.\n\nThe `main` branch works with **PyTorch 1.8+**.\n\n### Major features\n\n- Various backbones and pretrained models\n- Rich training strategies (supervised learning, self-supervised learning, multi-modality learning etc.)\n- Bag of training tricks\n- Large-scale training configs\n- High efficiency and extensibility\n- Powerful toolkits for model analysis and experiments\n- Various out-of-box inference tasks.\n  - Image Classification\n  - Image Caption\n  - Visual Question Answering\n  - Visual Grounding\n  - Retrieval (Image-To-Image, Text-To-Image, Image-To-Text)\n\nhttps://github.com/open-mmlab/mmpretrain/assets/26739999/e4dcd3a2-f895-4d1b-a351-fbc74a04e904\n\n## What's new\n\n🌟 v1.2.0 was released in 04/01/2023\n\n- Support LLaVA 1.5.\n- Implement of RAM with a gradio interface.\n\n🌟 v1.1.0 was released in 12/10/2023\n\n- Support Mini-GPT4 training and provide a Chinese model (based on Baichuan-7B)\n- Support zero-shot classification based on CLIP.\n\n🌟 v1.0.0 was released in 04/07/2023\n\n- Support inference of more **multi-modal** algorithms, such as [**LLaVA**](./configs/llava/), [**MiniGPT-4**](./configs/minigpt4), [**Otter**](./configs/otter/), etc.\n- Support around **10 multi-modal** datasets!\n- Add [**iTPN**](./configs/itpn/), [**SparK**](./configs/spark/) self-supervised learning algorithms.\n- Provide examples of [New Config](./mmpretrain/configs/) and [DeepSpeed/FSDP with FlexibleRunner](./configs/mae/benchmarks/). Here are the documentation links of [New Config](https://mmengine.readthedocs.io/en/latest/advanced_tutorials/config.html#a-pure-python-style-configuration-file-beta) and [DeepSpeed/FSDP with FlexibleRunner](https://mmengine.readthedocs.io/en/latest/api/generated/mmengine.runner.FlexibleRunner.html#mmengine.runner.FlexibleRunner).\n\n🌟 Upgrade from MMClassification to MMPreTrain\n\n- Integrated Self-supervised learning algorithms from **MMSelfSup**, such as **MAE**, **BEiT**, etc.\n- Support **RIFormer**, a simple but effective vision backbone by removing token mixer.\n- Refactor dataset pipeline visualization.\n- Support **LeViT**, **XCiT**, **ViG**, **ConvNeXt-V2**, **EVA**, **RevViT**, **EfficientnetV2**, **CLIP**, **TinyViT** and **MixMIM** backbones.\n\nThis release introduced a brand new and flexible training & test engine, but it's still in progress. Welcome\nto try according to [the documentation](https://mmpretrain.readthedocs.io/en/latest/).\n\nAnd there are some BC-breaking changes. Please check [the migration tutorial](https://mmpretrain.readthedocs.io/en/latest/migration.html).\n\nPlease refer to [changelog](https://mmpretrain.readthedocs.io/en/latest/notes/changelog.html) for more details and other release history.\n\n## Installation\n\nBelow are quick steps for installation:\n\n```shell\nconda create -n open-mmlab python=3.8 pytorch==1.10.1 torchvision==0.11.2 cudatoolkit=11.3 -c pytorch -y\nconda activate open-mmlab\npip install openmim\ngit clone https://github.com/open-mmlab/mmpretrain.git\ncd mmpretrain\nmim install -e .\n```\n\nPlease refer to [installation documentation](https://mmpretrain.readthedocs.io/en/latest/get_started.html) for more detailed installation and dataset preparation.\n\nFor multi-modality models support, please install the extra dependencies by:\n\n```shell\nmim install -e \".[multimodal]\"\n```\n\n## User Guides\n\nWe provided a series of tutorials about the basic usage of MMPreTrain for new users:\n\n- [Learn about Configs](https://mmpretrain.readthedocs.io/en/latest/user_guides/config.html)\n- [Prepare Dataset](https://mmpretrain.readthedocs.io/en/latest/user_guides/dataset_prepare.html)\n- [Inference with existing models](https://mmpretrain.readthedocs.io/en/latest/user_guides/inference.html)\n- [Train](https://mmpretrain.readthedocs.io/en/latest/user_guides/train.html)\n- [Test](https://mmpretrain.readthedocs.io/en/latest/user_guides/test.html)\n- [Downstream tasks](https://mmpretrain.readthedocs.io/en/latest/user_guides/downstream.html)\n\nFor more information, please refer to [our documentation](https://mmpretrain.readthedocs.io/en/latest/).\n\n## Model zoo\n\nResults and models are available in the [model zoo](https://mmpretrain.readthedocs.io/en/latest/modelzoo_statistics.html).\n\n<div align=\"center\">\n  <b>Overview</b>\n</div>\n<table align=\"center\">\n  <tbody>\n    <tr align=\"center\" valign=\"bottom\">\n      <td>\n        <b>Supported Backbones</b>\n      </td>\n      <td>\n        <b>Self-supervised Learning</b>\n      </td>\n      <td>\n        <b>Multi-Modality Algorithms</b>\n      </td>\n      <td>\n        <b>Others</b>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <ul>\n        <li><a href=\"configs/vgg\">VGG</a></li>\n        <li><a href=\"configs/resnet\">ResNet</a></li>\n        <li><a href=\"configs/resnext\">ResNeXt</a></li>\n        <li><a href=\"configs/seresnet\">SE-ResNet</a></li>\n        <li><a href=\"configs/seresnet\">SE-ResNeXt</a></li>\n        <li><a href=\"configs/regnet\">RegNet</a></li>\n        <li><a href=\"configs/shufflenet_v1\">ShuffleNet V1</a></li>\n        <li><a href=\"configs/shufflenet_v2\">ShuffleNet V2</a></li>\n        <li><a href=\"configs/mobilenet_v2\">MobileNet V2</a></li>\n        <li><a href=\"configs/mobilenet_v3\">MobileNet V3</a></li>\n        <li><a href=\"configs/swin_transformer\">Swin-Transformer</a></li>\n        <li><a href=\"configs/swin_transformer_v2\">Swin-Transformer V2</a></li>\n        <li><a href=\"configs/repvgg\">RepVGG</a></li>\n        <li><a href=\"configs/vision_transformer\">Vision-Transformer</a></li>\n        <li><a href=\"configs/tnt\">Transformer-in-Transformer</a></li>\n        <li><a href=\"configs/res2net\">Res2Net</a></li>\n        <li><a href=\"configs/mlp_mixer\">MLP-Mixer</a></li>\n        <li><a href=\"configs/deit\">DeiT</a></li>\n        <li><a href=\"configs/deit3\">DeiT-3</a></li>\n        <li><a href=\"configs/conformer\">Conformer</a></li>\n        <li><a href=\"configs/t2t_vit\">T2T-ViT</a></li>\n        <li><a href=\"configs/twins\">Twins</a></li>\n        <li><a href=\"configs/efficientnet\">EfficientNet</a></li>\n        <li><a href=\"configs/edgenext\">EdgeNeXt</a></li>\n        <li><a href=\"configs/convnext\">ConvNeXt</a></li>\n        <li><a href=\"configs/hrnet\">HRNet</a></li>\n        <li><a href=\"configs/van\">VAN</a></li>\n        <li><a href=\"configs/convmixer\">ConvMixer</a></li>\n        <li><a href=\"configs/cspnet\">CSPNet</a></li>\n        <li><a href=\"configs/poolformer\">PoolFormer</a></li>\n        <li><a href=\"configs/inception_v3\">Inception V3</a></li>\n        <li><a href=\"configs/mobileone\">MobileOne</a></li>\n        <li><a href=\"configs/efficientformer\">EfficientFormer</a></li>\n        <li><a href=\"configs/mvit\">MViT</a></li>\n        <li><a href=\"configs/hornet\">HorNet</a></li>\n        <li><a href=\"configs/mobilevit\">MobileViT</a></li>\n        <li><a href=\"configs/davit\">DaViT</a></li>\n        <li><a href=\"configs/replknet\">RepLKNet</a></li>\n        <li><a href=\"configs/beit\">BEiT</a></li>\n        <li><a href=\"configs/mixmim\">MixMIM</a></li>\n        <li><a href=\"configs/efficientnet_v2\">EfficientNet V2</a></li>\n        <li><a href=\"configs/revvit\">RevViT</a></li>\n        <li><a href=\"configs/convnext_v2\">ConvNeXt V2</a></li>\n        <li><a href=\"configs/vig\">ViG</a></li>\n        <li><a href=\"configs/xcit\">XCiT</a></li>\n        <li><a href=\"configs/levit\">LeViT</a></li>\n        <li><a href=\"configs/riformer\">RIFormer</a></li>\n        <li><a href=\"configs/glip\">GLIP</a></li>\n        <li><a href=\"configs/sam\">ViT SAM</a></li>\n        <li><a href=\"configs/eva02\">EVA02</a></li>\n        <li><a href=\"configs/dinov2\">DINO V2</a></li>\n        <li><a href=\"configs/hivit\">HiViT</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n        <li><a href=\"configs/mocov2\">MoCo V1 (CVPR'2020)</a></li>\n        <li><a href=\"configs/simclr\">SimCLR (ICML'2020)</a></li>\n        <li><a href=\"configs/mocov2\">MoCo V2 (arXiv'2020)</a></li>\n        <li><a href=\"configs/byol\">BYOL (NeurIPS'2020)</a></li>\n        <li><a href=\"configs/swav\">SwAV (NeurIPS'2020)</a></li>\n        <li><a href=\"configs/densecl\">DenseCL (CVPR'2021)</a></li>\n        <li><a href=\"configs/simsiam\">SimSiam (CVPR'2021)</a></li>\n        <li><a href=\"configs/barlowtwins\">Barlow Twins (ICML'2021)</a></li>\n        <li><a href=\"configs/mocov3\">MoCo V3 (ICCV'2021)</a></li>\n        <li><a href=\"configs/beit\">BEiT (ICLR'2022)</a></li>\n        <li><a href=\"configs/mae\">MAE (CVPR'2022)</a></li>\n        <li><a href=\"configs/simmim\">SimMIM (CVPR'2022)</a></li>\n        <li><a href=\"configs/maskfeat\">MaskFeat (CVPR'2022)</a></li>\n        <li><a href=\"configs/cae\">CAE (arXiv'2022)</a></li>\n        <li><a href=\"configs/milan\">MILAN (arXiv'2022)</a></li>\n        <li><a href=\"configs/beitv2\">BEiT V2 (arXiv'2022)</a></li>\n        <li><a href=\"configs/eva\">EVA (CVPR'2023)</a></li>\n        <li><a href=\"configs/mixmim\">MixMIM (arXiv'2022)</a></li>\n        <li><a href=\"configs/itpn\">iTPN (CVPR'2023)</a></li>\n        <li><a href=\"configs/spark\">SparK (ICLR'2023)</a></li>\n        <li><a href=\"configs/mff\">MFF (ICCV'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n        <li><a href=\"configs/blip\">BLIP (arxiv'2022)</a></li>\n        <li><a href=\"configs/blip2\">BLIP-2 (arxiv'2023)</a></li>\n        <li><a href=\"configs/ofa\">OFA (CoRR'2022)</a></li>\n        <li><a href=\"configs/flamingo\">Flamingo (NeurIPS'2022)</a></li>\n        <li><a href=\"configs/chinese_clip\">Chinese CLIP (arxiv'2022)</a></li>\n        <li><a href=\"configs/minigpt4\">MiniGPT-4 (arxiv'2023)</a></li>\n        <li><a href=\"configs/llava\">LLaVA (arxiv'2023)</a></li>\n        <li><a href=\"configs/otter\">Otter (arxiv'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n      Image Retrieval Task:\n        <ul>\n        <li><a href=\"configs/arcface\">ArcFace (CVPR'2019)</a></li>\n        </ul>\n      Training&Test Tips:\n        <ul>\n        <li><a href=\"https://arxiv.org/abs/1909.13719\">RandAug</a></li>\n        <li><a href=\"https://arxiv.org/abs/1805.09501\">AutoAug</a></li>\n        <li><a href=\"mmpretrain/datasets/samplers/repeat_aug.py\">RepeatAugSampler</a></li>\n        <li><a href=\"mmpretrain/models/tta/score_tta.py\">TTA</a></li>\n        <li>...</li>\n        </ul>\n      </td>\n  </tbody>\n</table>\n\n## Contributing\n\nWe appreciate all contributions to improve MMPreTrain.\nPlease refer to [CONTRUBUTING](https://mmpretrain.readthedocs.io/en/latest/notes/contribution_guide.html) for the contributing guideline.\n\n## Acknowledgement\n\nMMPreTrain is an open source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks.\nWe wish that the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and supporting their own academic research.\n\n## Citation\n\nIf you find this project useful in your research, please consider cite:\n\n```BibTeX\n@misc{2023mmpretrain,\n    title={OpenMMLab's Pre-training Toolbox and Benchmark},\n    author={MMPreTrain Contributors},\n    howpublished = {\\url{https://github.com/open-mmlab/mmpretrain}},\n    year={2023}\n}\n```\n\n## License\n\nThis project is released under the [Apache 2.0 license](LICENSE).\n\n## Projects in OpenMMLab\n\n- [MMEngine](https://github.com/open-mmlab/mmengine): OpenMMLab foundational library for training deep learning models.\n- [MMCV](https://github.com/open-mmlab/mmcv): OpenMMLab foundational library for computer vision.\n- [MIM](https://github.com/open-mmlab/mim): MIM installs OpenMMLab packages.\n- [MMEval](https://github.com/open-mmlab/mmeval): A unified evaluation library for multiple machine learning libraries.\n- [MMPreTrain](https://github.com/open-mmlab/mmpretrain): OpenMMLab pre-training toolbox and benchmark.\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab detection toolbox and benchmark.\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab's next-generation platform for general 3D object detection.\n- [MMRotate](https://github.com/open-mmlab/mmrotate): OpenMMLab rotated object detection toolbox and benchmark.\n- [MMYOLO](https://github.com/open-mmlab/mmyolo): OpenMMLab YOLO series toolbox and benchmark.\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab semantic segmentation toolbox and benchmark.\n- [MMOCR](https://github.com/open-mmlab/mmocr): OpenMMLab text detection, recognition, and understanding toolbox.\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab pose estimation toolbox and benchmark.\n- [MMHuman3D](https://github.com/open-mmlab/mmhuman3d): OpenMMLab 3D human parametric model toolbox and benchmark.\n- [MMSelfSup](https://github.com/open-mmlab/mmselfsup): OpenMMLab self-supervised learning toolbox and benchmark.\n- [MMRazor](https://github.com/open-mmlab/mmrazor): OpenMMLab model compression toolbox and benchmark.\n- [MMFewShot](https://github.com/open-mmlab/mmfewshot): OpenMMLab fewshot learning toolbox and benchmark.\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab's next-generation action understanding toolbox and benchmark.\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab video perception toolbox and benchmark.\n- [MMFlow](https://github.com/open-mmlab/mmflow): OpenMMLab optical flow toolbox and benchmark.\n- [MMagic](https://github.com/open-mmlab/mmagic): Open**MM**Lab **A**dvanced, **G**enerative and **I**ntelligent **C**reation toolbox.\n- [MMGeneration](https://github.com/open-mmlab/mmgeneration): OpenMMLab image and video generative models toolbox.\n- [MMDeploy](https://github.com/open-mmlab/mmdeploy): OpenMMLab model deployment framework.\n- [Playground](https://github.com/open-mmlab/playground): A central hub for gathering and showcasing amazing projects built upon OpenMMLab.\n"
        },
        {
          "name": "README_zh-CN.md",
          "type": "blob",
          "size": 17.8818359375,
          "content": "<div align=\"center\">\n\n<img src=\"resources/mmpt-logo.png\" width=\"600\"/>\n  <div>&nbsp;</div>\n  <div align=\"center\">\n    <b><font size=\"5\">OpenMMLab 官网</font></b>\n    <sup>\n      <a href=\"https://openmmlab.com\">\n        <i><font size=\"4\">HOT</font></i>\n      </a>\n    </sup>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <b><font size=\"5\">OpenMMLab 开放平台</font></b>\n    <sup>\n      <a href=\"https://platform.openmmlab.com\">\n        <i><font size=\"4\">TRY IT OUT</font></i>\n      </a>\n    </sup>\n  </div>\n  <div>&nbsp;</div>\n\n[![PyPI](https://img.shields.io/pypi/v/mmpretrain)](https://pypi.org/project/mmpretrain)\n[![Docs](https://img.shields.io/badge/docs-latest-blue)](https://mmpretrain.readthedocs.io/zh_CN/latest/)\n[![Build Status](https://github.com/open-mmlab/mmpretrain/workflows/build/badge.svg)](https://github.com/open-mmlab/mmpretrain/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmpretrain/branch/main/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmpretrain)\n[![license](https://img.shields.io/github/license/open-mmlab/mmpretrain.svg)](https://github.com/open-mmlab/mmpretrain/blob/main/LICENSE)\n[![open issues](https://isitmaintained.com/badge/open/open-mmlab/mmpretrain.svg)](https://github.com/open-mmlab/mmpretrain/issues)\n[![issue resolution](https://isitmaintained.com/badge/resolution/open-mmlab/mmpretrain.svg)](https://github.com/open-mmlab/mmpretrain/issues)\n\n[📘 中文文档](https://mmpretrain.readthedocs.io/zh_CN/latest/) |\n[🛠️ 安装教程](https://mmpretrain.readthedocs.io/zh_CN/latest/get_started.html) |\n[👀 模型库](https://mmpretrain.readthedocs.io/zh_CN/latest/modelzoo_statistics.html) |\n[🆕 更新日志](https://mmpretrain.readthedocs.io/zh_CN/latest/notes/changelog.html) |\n[🤔 报告问题](https://github.com/open-mmlab/mmpretrain/issues/new/choose)\n\n<img src=\"https://user-images.githubusercontent.com/36138628/230307505-4727ad0a-7d71-4069-939d-b499c7e272b7.png\" width=\"400\"/>\n\n[English](/README.md) | 简体中文\n\n</div>\n\n<div align=\"center\">\n  <a href=\"https://openmmlab.medium.com/\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219255827-67c1a27f-f8c5-46a9-811d-5e57448c61d1.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://discord.gg/raweFPmdzG\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218347213-c080267f-cbb6-443e-8532-8e1ed9a58ea9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://twitter.com/OpenMMLab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346637-d30c8a0f-3eba-4699-8131-512fb06d46db.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.youtube.com/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346691-ceb2116a-465a-40af-8424-9f30d2348ca9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://space.bilibili.com/1293512903\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026751-d7d14cce-a7c9-4e82-9942-8375fca65b99.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.zhihu.com/people/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026120-ba71e48b-6e94-4bd4-b4e9-b7d175b5e362.png\" width=\"3%\" alt=\"\" /></a>\n</div>\n\n## Introduction\n\nMMPreTrain 是一款基于 PyTorch 的开源深度学习预训练工具箱，是 [OpenMMLab](https://openmmlab.com/) 项目的成员之一\n\n`主分支`代码目前支持 PyTorch 1.8 以上的版本。\n\n### 主要特性\n\n- 支持多样的主干网络与预训练模型\n- 支持多种训练策略（有监督学习，无监督学习，多模态学习等）\n- 提供多种训练技巧\n- 大量的训练配置文件\n- 高效率和高可扩展性\n- 功能强大的工具箱，有助于模型分析和实验\n- 支持多种开箱即用的推理任务\n  - 图像分类\n  - 图像描述（Image Caption）\n  - 视觉问答（Visual Question Answering）\n  - 视觉定位（Visual Grounding）\n  - 检索（图搜图，图搜文，文搜图）\n\nhttps://github.com/open-mmlab/mmpretrain/assets/26739999/e4dcd3a2-f895-4d1b-a351-fbc74a04e904\n\n## 更新日志\n\n🌟 2024/01/04 发布了 v1.2.0 版本\n\n- 支持了 LLaVA 1.5\n- 实现了一个 RAM 模型的 gradio 推理例程\n\n🌟 2023/10/12 发布了 v1.1.0 版本\n\n- 支持 Mini-GPT4 训练并提供一个基于 Baichuan-7B 的中文模型\n- 支持基于 CLIP 的零样本分类。\n\n🌟 2023/7/4 发布了 v1.0.0 版本\n\n- 支持更多**多模态**算法的推理, 例如 [**LLaVA**](./configs/llava/), [**MiniGPT-4**](./configs/minigpt4), [**Otter**](./configs/otter/) 等。\n- 支持约 **10 个多模态**数据集!\n- 添加自监督学习算法 [**iTPN**](./configs/itpn/), [**SparK**](./configs/spark/)。\n- 提供[新配置文件](./mmpretrain/configs/)和 [DeepSpeed/FSDP](./configs/mae/benchmarks/) 的样例。这是[新配置文件](https://mmengine.readthedocs.io/en/latest/advanced_tutorials/config.html#a-pure-python-style-configuration-file-beta) 和 [DeepSpeed/FSDP with FlexibleRunner](https://mmengine.readthedocs.io/en/latest/api/generated/mmengine.runner.FlexibleRunner.html#mmengine.runner.FlexibleRunner) 的文档链接。\n\n🌟 从 MMClassification 升级到 MMPreTrain\n\n- 整合来自 MMSelfSup 的自监督学习算法，例如 `MAE`, `BEiT` 等\n- 支持了 **RIFormer**，简单但有效的视觉主干网络，却移除了 token mixer\n- 重构数据管道可视化\n- 支持了 **LeViT**, **XCiT**, **ViG**, **ConvNeXt-V2**, **EVA**, **RevViT**, **EfficientnetV2**, **CLIP**, **TinyViT** 和 **MixMIM** 等骨干网络结构\n\n这个版本引入一个全新的，可扩展性强的训练和测试引擎，但目前仍在开发中。欢迎根据 [文档](https://mmpretrain.readthedocs.io/zh_CN/latest/) 进行试用。\n\n同时，新版本中存在一些与旧版本不兼容的修改。请查看 [迁移文档](https://mmpretrain.readthedocs.io/zh_CN/latest/migration.html) 来详细了解这些变动。\n\n发布历史和更新细节请参考 [更新日志](https://mmpretrain.readthedocs.io/zh_CN/latest/notes/changelog.html)。\n\n## 安装\n\n以下是安装的简要步骤：\n\n```shell\nconda create -n open-mmlab python=3.8 pytorch==1.10.1 torchvision==0.11.2 cudatoolkit=11.3 -c pytorch -y\nconda activate open-mmlab\npip3 install openmim\ngit clone https://github.com/open-mmlab/mmpretrain.git\ncd mmpretrain\nmim install -e .\n```\n\n更详细的步骤请参考 [安装指南](https://mmpretrain.readthedocs.io/zh_CN/latest/get_started.html) 进行安装。\n\n如果需要多模态模型，请使用如下方式安装额外的依赖：\n\n```shell\nmim install -e \".[multimodal]\"\n```\n\n## 基础教程\n\n我们为新用户提供了一系列基础教程：\n\n- [学习配置文件](https://mmpretrain.readthedocs.io/zh_CN/latest/user_guides/config.html)\n- [准备数据集](https://mmpretrain.readthedocs.io/zh_CN/latest/user_guides/dataset_prepare.html)\n- [使用现有模型推理](https://mmpretrain.readthedocs.io/zh_CN/latest/user_guides/inference.html)\n- [训练](https://mmpretrain.readthedocs.io/zh_CN/latest/user_guides/train.html)\n- [测试](https://mmpretrain.readthedocs.io/zh_CN/latest/user_guides/test.html)\n- [下游任务](https://mmpretrain.readthedocs.io/zh_CN/latest/user_guides/downstream.html)\n\n关于更多的信息，请查阅我们的 [相关文档](https://mmpretrain.readthedocs.io/zh_CN/latest/)。\n\n## 模型库\n\n相关结果和模型可在 [模型库](https://mmpretrain.readthedocs.io/zh_CN/latest/modelzoo_statistics.html) 中获得。\n\n<div align=\"center\">\n  <b>概览</b>\n</div>\n<table align=\"center\">\n  <tbody>\n    <tr align=\"center\" valign=\"bottom\">\n      <td>\n        <b>支持的主干网络</b>\n      </td>\n      <td>\n        <b>自监督学习</b>\n      </td>\n      <td>\n        <b>多模态算法</b>\n      </td>\n      <td>\n        <b>其它</b>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <ul>\n        <li><a href=\"configs/vgg\">VGG</a></li>\n        <li><a href=\"configs/resnet\">ResNet</a></li>\n        <li><a href=\"configs/resnext\">ResNeXt</a></li>\n        <li><a href=\"configs/seresnet\">SE-ResNet</a></li>\n        <li><a href=\"configs/seresnet\">SE-ResNeXt</a></li>\n        <li><a href=\"configs/regnet\">RegNet</a></li>\n        <li><a href=\"configs/shufflenet_v1\">ShuffleNet V1</a></li>\n        <li><a href=\"configs/shufflenet_v2\">ShuffleNet V2</a></li>\n        <li><a href=\"configs/mobilenet_v2\">MobileNet V2</a></li>\n        <li><a href=\"configs/mobilenet_v3\">MobileNet V3</a></li>\n        <li><a href=\"configs/swin_transformer\">Swin-Transformer</a></li>\n        <li><a href=\"configs/swin_transformer_v2\">Swin-Transformer V2</a></li>\n        <li><a href=\"configs/repvgg\">RepVGG</a></li>\n        <li><a href=\"configs/vision_transformer\">Vision-Transformer</a></li>\n        <li><a href=\"configs/tnt\">Transformer-in-Transformer</a></li>\n        <li><a href=\"configs/res2net\">Res2Net</a></li>\n        <li><a href=\"configs/mlp_mixer\">MLP-Mixer</a></li>\n        <li><a href=\"configs/deit\">DeiT</a></li>\n        <li><a href=\"configs/deit3\">DeiT-3</a></li>\n        <li><a href=\"configs/conformer\">Conformer</a></li>\n        <li><a href=\"configs/t2t_vit\">T2T-ViT</a></li>\n        <li><a href=\"configs/twins\">Twins</a></li>\n        <li><a href=\"configs/efficientnet\">EfficientNet</a></li>\n        <li><a href=\"configs/edgenext\">EdgeNeXt</a></li>\n        <li><a href=\"configs/convnext\">ConvNeXt</a></li>\n        <li><a href=\"configs/hrnet\">HRNet</a></li>\n        <li><a href=\"configs/van\">VAN</a></li>\n        <li><a href=\"configs/convmixer\">ConvMixer</a></li>\n        <li><a href=\"configs/cspnet\">CSPNet</a></li>\n        <li><a href=\"configs/poolformer\">PoolFormer</a></li>\n        <li><a href=\"configs/inception_v3\">Inception V3</a></li>\n        <li><a href=\"configs/mobileone\">MobileOne</a></li>\n        <li><a href=\"configs/efficientformer\">EfficientFormer</a></li>\n        <li><a href=\"configs/mvit\">MViT</a></li>\n        <li><a href=\"configs/hornet\">HorNet</a></li>\n        <li><a href=\"configs/mobilevit\">MobileViT</a></li>\n        <li><a href=\"configs/davit\">DaViT</a></li>\n        <li><a href=\"configs/replknet\">RepLKNet</a></li>\n        <li><a href=\"configs/beit\">BEiT</a></li>\n        <li><a href=\"configs/mixmim\">MixMIM</a></li>\n        <li><a href=\"configs/revvit\">RevViT</a></li>\n        <li><a href=\"configs/convnext_v2\">ConvNeXt V2</a></li>\n        <li><a href=\"configs/vig\">ViG</a></li>\n        <li><a href=\"configs/xcit\">XCiT</a></li>\n        <li><a href=\"configs/levit\">LeViT</a></li>\n        <li><a href=\"configs/riformer\">RIFormer</a></li>\n        <li><a href=\"configs/glip\">GLIP</a></li>\n        <li><a href=\"configs/sam\">ViT SAM</a></li>\n        <li><a href=\"configs/eva02\">EVA02</a></li>\n        <li><a href=\"configs/dinov2\">DINO V2</a></li>\n        <li><a href=\"configs/hivit\">HiViT</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n        <li><a href=\"configs/mocov2\">MoCo V1 (CVPR'2020)</a></li>\n        <li><a href=\"configs/simclr\">SimCLR (ICML'2020)</a></li>\n        <li><a href=\"configs/mocov2\">MoCo V2 (arXiv'2020)</a></li>\n        <li><a href=\"configs/byol\">BYOL (NeurIPS'2020)</a></li>\n        <li><a href=\"configs/swav\">SwAV (NeurIPS'2020)</a></li>\n        <li><a href=\"configs/densecl\">DenseCL (CVPR'2021)</a></li>\n        <li><a href=\"configs/simsiam\">SimSiam (CVPR'2021)</a></li>\n        <li><a href=\"configs/barlowtwins\">Barlow Twins (ICML'2021)</a></li>\n        <li><a href=\"configs/mocov3\">MoCo V3 (ICCV'2021)</a></li>\n        <li><a href=\"configs/beit\">BEiT (ICLR'2022)</a></li>\n        <li><a href=\"configs/mae\">MAE (CVPR'2022)</a></li>\n        <li><a href=\"configs/simmim\">SimMIM (CVPR'2022)</a></li>\n        <li><a href=\"configs/maskfeat\">MaskFeat (CVPR'2022)</a></li>\n        <li><a href=\"configs/cae\">CAE (arXiv'2022)</a></li>\n        <li><a href=\"configs/milan\">MILAN (arXiv'2022)</a></li>\n        <li><a href=\"configs/beitv2\">BEiT V2 (arXiv'2022)</a></li>\n        <li><a href=\"configs/eva\">EVA (CVPR'2023)</a></li>\n        <li><a href=\"configs/mixmim\">MixMIM (arXiv'2022)</a></li>\n        <li><a href=\"configs/itpn\">iTPN (CVPR'2023)</a></li>\n        <li><a href=\"configs/spark\">SparK (ICLR'2023)</a></li>\n        <li><a href=\"configs/mff\">MFF (ICCV'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n        <li><a href=\"configs/blip\">BLIP (arxiv'2022)</a></li>\n        <li><a href=\"configs/blip2\">BLIP-2 (arxiv'2023)</a></li>\n        <li><a href=\"configs/ofa\">OFA (CoRR'2022)</a></li>\n        <li><a href=\"configs/flamingo\">Flamingo (NeurIPS'2022)</a></li>\n        <li><a href=\"configs/chinese_clip\">Chinese CLIP (arxiv'2022)</a></li>\n        <li><a href=\"configs/minigpt4\">MiniGPT-4 (arxiv'2023)</a></li>\n        <li><a href=\"configs/llava\">LLaVA (arxiv'2023)</a></li>\n        <li><a href=\"configs/otter\">Otter (arxiv'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n      图像检索任务：\n        <ul>\n        <li><a href=\"configs/arcface\">ArcFace (CVPR'2019)</a></li>\n        </ul>\n      训练和测试 Tips:\n        <ul>\n        <li><a href=\"https://arxiv.org/abs/1909.13719\">RandAug</a></li>\n        <li><a href=\"https://arxiv.org/abs/1805.09501\">AutoAug</a></li>\n        <li><a href=\"mmpretrain/datasets/samplers/repeat_aug.py\">RepeatAugSampler</a></li>\n        <li><a href=\"mmpretrain/models/tta/score_tta.py\">TTA</a></li>\n        <li>...</li>\n        </ul>\n      </td>\n  </tbody>\n</table>\n\n## 参与贡献\n\n我们非常欢迎任何有助于提升 MMPreTrain 的贡献，请参考 [贡献指南](https://mmpretrain.readthedocs.io/zh_CN/latest/notes/contribution_guide.html) 来了解如何参与贡献。\n\n## 致谢\n\nMMPreTrain 是一款由不同学校和公司共同贡献的开源项目。我们感谢所有为项目提供算法复现和新功能支持的贡献者，以及提供宝贵反馈的用户。\n我们希望该工具箱和基准测试可以为社区提供灵活的代码工具，供用户复现现有算法并开发自己的新模型，从而不断为开源社区提供贡献。\n\n## 引用\n\n如果你在研究中使用了本项目的代码或者性能基准，请参考如下 bibtex 引用 MMPreTrain。\n\n```BibTeX\n@misc{2023mmpretrain,\n    title={OpenMMLab's Pre-training Toolbox and Benchmark},\n    author={MMPreTrain Contributors},\n    howpublished = {\\url{https://github.com/open-mmlab/mmpretrain}},\n    year={2023}\n}\n```\n\n## 许可证\n\n该项目开源自 [Apache 2.0 license](LICENSE).\n\n## OpenMMLab 的其他项目\n\n- [MMEngine](https://github.com/open-mmlab/mmengine): OpenMMLab 深度学习模型训练基础库\n- [MMCV](https://github.com/open-mmlab/mmcv): OpenMMLab 计算机视觉基础库\n- [MIM](https://github.com/open-mmlab/mim): MIM 是 OpenMMlab 项目、算法、模型的统一入口\n- [MMEval](https://github.com/open-mmlab/mmeval): 统一开放的跨框架算法评测库\n- [MMPreTrain](https://github.com/open-mmlab/mmpretrain): OpenMMLab 深度学习预训练工具箱\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab 目标检测工具箱\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab 新一代通用 3D 目标检测平台\n- [MMRotate](https://github.com/open-mmlab/mmrotate): OpenMMLab 旋转框检测工具箱与测试基准\n- [MMYOLO](https://github.com/open-mmlab/mmyolo): OpenMMLab YOLO 系列工具箱与测试基准\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab 语义分割工具箱\n- [MMOCR](https://github.com/open-mmlab/mmocr): OpenMMLab 全流程文字检测识别理解工具包\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab 姿态估计工具箱\n- [MMHuman3D](https://github.com/open-mmlab/mmhuman3d): OpenMMLab 人体参数化模型工具箱与测试基准\n- [MMSelfSup](https://github.com/open-mmlab/mmselfsup): OpenMMLab 自监督学习工具箱与测试基准\n- [MMRazor](https://github.com/open-mmlab/mmrazor): OpenMMLab 模型压缩工具箱与测试基准\n- [MMFewShot](https://github.com/open-mmlab/mmfewshot): OpenMMLab 少样本学习工具箱与测试基准\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab 新一代视频理解工具箱\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab 一体化视频目标感知平台\n- [MMFlow](https://github.com/open-mmlab/mmflow): OpenMMLab 光流估计工具箱与测试基准\n- [MMagic](https://github.com/open-mmlab/mmagic): OpenMMLab 新一代人工智能内容生成（AIGC）工具箱\n- [MMGeneration](https://github.com/open-mmlab/mmgeneration): OpenMMLab 图片视频生成模型工具箱\n- [MMDeploy](https://github.com/open-mmlab/mmdeploy): OpenMMLab 模型部署框架\n- [Playground](https://github.com/open-mmlab/playground): 收集和展示 OpenMMLab 相关的前沿、有趣的社区项目\n\n## 欢迎加入 OpenMMLab 社区\n\n扫描下方的二维码可关注 OpenMMLab 团队的 [知乎官方账号](https://www.zhihu.com/people/openmmlab)，扫描下方微信二维码添加喵喵好友，进入 MMPretrain 微信交流社群。【加好友申请格式：研究方向+地区+学校/公司+姓名】\n\n<div align=\"center\">\n<img src=\"./resources/zhihu_qrcode.jpg\" height=\"400\"/> <img src=\"./resources/miaomiao_qrcode.jpg\" height=\"400\"/>\n</div>\n\n我们会在 OpenMMLab 社区为大家\n\n- 📢 分享 AI 框架的前沿核心技术\n- 💻 解读 PyTorch 常用模块源码\n- 📰 发布 OpenMMLab 的相关新闻\n- 🚀 介绍 OpenMMLab 开发的前沿算法\n- 🏃 获取更高效的问题答疑和意见反馈\n- 🔥 提供与各行各业开发者充分交流的平台\n\n干货满满 📘，等你来撩 💗，OpenMMLab 社区期待您的加入 👬\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dataset-index.yml",
          "type": "blob",
          "size": 0.3046875,
          "content": "imagenet1k:\n  dataset: OpenDataLab/ImageNet-1K\n  download_root: data\n  data_root: data/imagenet\n  script: tools/dataset_converters/odl_imagenet1k_preprocess.sh\n\ncub:\n  dataset: OpenDataLab/CUB-200-2011\n  download_root: data\n  data_root: data/CUB_200_2011\n  script: tools/dataset_converters/odl_cub_preprocess.sh\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mmpretrain",
          "type": "tree",
          "content": null
        },
        {
          "name": "model-index.yml",
          "type": "blob",
          "size": 2.71484375,
          "content": "Import:\n  - configs/mobilenet_v2/metafile.yml\n  - configs/mobilenet_v3/metafile.yml\n  - configs/resnet/metafile.yml\n  - configs/res2net/metafile.yml\n  - configs/resnext/metafile.yml\n  - configs/seresnet/metafile.yml\n  - configs/shufflenet_v1/metafile.yml\n  - configs/shufflenet_v2/metafile.yml\n  - configs/swin_transformer/metafile.yml\n  - configs/vgg/metafile.yml\n  - configs/repvgg/metafile.yml\n  - configs/tnt/metafile.yml\n  - configs/vision_transformer/metafile.yml\n  - configs/t2t_vit/metafile.yml\n  - configs/tinyvit/metafile.yml\n  - configs/mlp_mixer/metafile.yml\n  - configs/conformer/metafile.yml\n  - configs/regnet/metafile.yml\n  - configs/deit/metafile.yml\n  - configs/twins/metafile.yml\n  - configs/efficientnet/metafile.yml\n  - configs/convnext/metafile.yml\n  - configs/hrnet/metafile.yml\n  - configs/repmlp/metafile.yml\n  - configs/wrn/metafile.yml\n  - configs/van/metafile.yml\n  - configs/cspnet/metafile.yml\n  - configs/convmixer/metafile.yml\n  - configs/densenet/metafile.yml\n  - configs/poolformer/metafile.yml\n  - configs/inception_v3/metafile.yml\n  - configs/mvit/metafile.yml\n  - configs/edgenext/metafile.yml\n  - configs/mobileone/metafile.yml\n  - configs/efficientformer/metafile.yml\n  - configs/swin_transformer_v2/metafile.yml\n  - configs/deit3/metafile.yml\n  - configs/hornet/metafile.yml\n  - configs/mobilevit/metafile.yml\n  - configs/davit/metafile.yml\n  - configs/replknet/metafile.yml\n  - configs/csra/metafile.yml\n  - configs/beit/metafile.yml\n  - configs/beitv2/metafile.yml\n  - configs/eva/metafile.yml\n  - configs/revvit/metafile.yml\n  - configs/clip/metafile.yml\n  - configs/mixmim/metafile.yml\n  - configs/efficientnet_v2/metafile.yml\n  - configs/convnext_v2/metafile.yml\n  - configs/levit/metafile.yml\n  - configs/vig/metafile.yml\n  - configs/arcface/metafile.yml\n  - configs/xcit/metafile.yml\n  - configs/byol/metafile.yml\n  - configs/densecl/metafile.yml\n  - configs/mocov2/metafile.yml\n  - configs/mocov3/metafile.yml\n  - configs/simclr/metafile.yml\n  - configs/simsiam/metafile.yml\n  - configs/swav/metafile.yml\n  - configs/mae/metafile.yml\n  - configs/simmim/metafile.yml\n  - configs/barlowtwins/metafile.yml\n  - configs/cae/metafile.yml\n  - configs/maskfeat/metafile.yml\n  - configs/milan/metafile.yml\n  - configs/ofa/metafile.yml\n  - configs/riformer/metafile.yml\n  - configs/sam/metafile.yml\n  - configs/glip/metafile.yml\n  - configs/eva02/metafile.yml\n  - configs/dinov2/metafile.yml\n  - configs/blip/metafile.yml\n  - configs/flamingo/metafile.yml\n  - configs/blip2/metafile.yml\n  - configs/chinese_clip/metafile.yml\n  - configs/itpn/metafile.yml\n  - configs/hivit/metafile.yml\n  - configs/spark/metafile.yml\n  - configs/minigpt4/metafile.yml\n  - configs/llava/metafile.yml\n  - configs/otter/metafile.yml\n  - configs/mff/metafile.yml\n"
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0810546875,
          "content": "-r requirements/optional.txt\n-r requirements/runtime.txt\n-r requirements/tests.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.76171875,
          "content": "[bdist_wheel]\nuniversal=1\n\n[aliases]\ntest=pytest\n\n[yapf]\nbased_on_style = pep8\nblank_line_before_nested_class_or_def = true\nsplit_before_expression_after_opening_paren = true\n\n[isort]\nline_length = 79\nmulti_line_output = 0\nextra_standard_library = pkg_resources,setuptools\nknown_first_party = mmpretrain\nno_lines_before = STDLIB,LOCALFOLDER\ndefault_section = THIRDPARTY\n\n[codespell]\nskip = *.ipynb\nquiet-level = 3\nignore-words-list = patten,confectionary,nd,ty,formating,dows\n\n[flake8]\n# The E251 check is conflict with yapf in some situation.\n# See https://github.com/google/yapf/issues/393\nextend-ignore = E251\n# The F401 check is wrong if the `__all__` variable is modified\n# in `__init__.py`\nper-file-ignores =\n    */__init__.py: F401\n    mmpretrain/configs/*: F401,F403,F405\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.435546875,
          "content": "import os\nimport os.path as osp\nimport shutil\nimport sys\nimport warnings\nfrom setuptools import find_packages, setup\n\n\ndef readme():\n    with open('README.md', encoding='utf-8') as f:\n        content = f.read()\n    return content\n\n\ndef get_version():\n    version_file = 'mmpretrain/version.py'\n    with open(version_file, 'r', encoding='utf-8') as f:\n        exec(compile(f.read(), version_file, 'exec'))\n    return locals()['__version__']\n\n\ndef parse_requirements(fname='requirements.txt', with_version=True):\n    \"\"\"Parse the package dependencies listed in a requirements file but strips\n    specific versioning information.\n\n    Args:\n        fname (str): path to requirements file\n        with_version (bool, default=False): if True include version specs\n\n    Returns:\n        List[str]: list of requirements items\n\n    CommandLine:\n        python -c \"import setup; print(setup.parse_requirements())\"\n    \"\"\"\n    import re\n    import sys\n    from os.path import exists\n    require_fpath = fname\n\n    def parse_line(line):\n        \"\"\"Parse information from a line in a requirements text file.\"\"\"\n        if line.startswith('-r '):\n            # Allow specifying requirements in other files\n            target = line.split(' ')[1]\n            for info in parse_require_file(target):\n                yield info\n        else:\n            info = {'line': line}\n            if line.startswith('-e '):\n                info['package'] = line.split('#egg=')[1]\n            else:\n                # Remove versioning from the package\n                pat = '(' + '|'.join(['>=', '==', '>']) + ')'\n                parts = re.split(pat, line, maxsplit=1)\n                parts = [p.strip() for p in parts]\n\n                info['package'] = parts[0]\n                if len(parts) > 1:\n                    op, rest = parts[1:]\n                    if ';' in rest:\n                        # Handle platform specific dependencies\n                        # http://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-platform-specific-dependencies\n                        version, platform_deps = map(str.strip,\n                                                     rest.split(';'))\n                        info['platform_deps'] = platform_deps\n                    else:\n                        version = rest  # NOQA\n                    if '--' in version:\n                        # the `extras_require` doesn't accept options.\n                        version = version.split('--')[0].strip()\n                    info['version'] = (op, version)\n            yield info\n\n    def parse_require_file(fpath):\n        with open(fpath, 'r') as f:\n            for line in f.readlines():\n                line = line.strip()\n                if line and not line.startswith('#'):\n                    for info in parse_line(line):\n                        yield info\n\n    def gen_packages_items():\n        if exists(require_fpath):\n            for info in parse_require_file(require_fpath):\n                parts = [info['package']]\n                if with_version and 'version' in info:\n                    parts.extend(info['version'])\n                if not sys.version.startswith('3.4'):\n                    # apparently package_deps are broken in 3.4\n                    platform_deps = info.get('platform_deps')\n                    if platform_deps is not None:\n                        parts.append(';' + platform_deps)\n                item = ''.join(parts)\n                yield item\n\n    packages = list(gen_packages_items())\n    return packages\n\n\ndef add_mim_extension():\n    \"\"\"Add extra files that are required to support MIM into the package.\n\n    These files will be added by creating a symlink to the originals if the\n    package is installed in `editable` mode (e.g. pip install -e .), or by\n    copying from the originals otherwise.\n    \"\"\"\n\n    # parse installment mode\n    if 'develop' in sys.argv:\n        # installed by `pip install -e .`\n        mode = 'symlink'\n    elif 'sdist' in sys.argv or 'bdist_wheel' in sys.argv:\n        # installed by `pip install .`\n        # or create source distribution by `python setup.py sdist`\n        mode = 'copy'\n    else:\n        return\n\n    filenames = ['tools', 'configs', 'model-index.yml', 'dataset-index.yml']\n    repo_path = osp.dirname(__file__)\n    mim_path = osp.join(repo_path, 'mmpretrain', '.mim')\n    os.makedirs(mim_path, exist_ok=True)\n\n    for filename in filenames:\n        if osp.exists(filename):\n            src_path = osp.join(repo_path, filename)\n            tar_path = osp.join(mim_path, filename)\n\n            if osp.isfile(tar_path) or osp.islink(tar_path):\n                os.remove(tar_path)\n            elif osp.isdir(tar_path):\n                shutil.rmtree(tar_path)\n\n            if mode == 'symlink':\n                src_relpath = osp.relpath(src_path, osp.dirname(tar_path))\n                try:\n                    os.symlink(src_relpath, tar_path)\n                except OSError:\n                    # Creating a symbolic link on windows may raise an\n                    # `OSError: [WinError 1314]` due to privilege. If\n                    # the error happens, the src file will be copied\n                    mode = 'copy'\n                    warnings.warn(\n                        f'Failed to create a symbolic link for {src_relpath}, '\n                        f'and it will be copied to {tar_path}')\n                else:\n                    continue\n\n            if mode == 'copy':\n                if osp.isfile(src_path):\n                    shutil.copyfile(src_path, tar_path)\n                elif osp.isdir(src_path):\n                    shutil.copytree(src_path, tar_path)\n                else:\n                    warnings.warn(f'Cannot copy file {src_path}.')\n            else:\n                raise ValueError(f'Invalid mode {mode}')\n\n\nif __name__ == '__main__':\n    add_mim_extension()\n    setup(\n        name='mmpretrain',\n        version=get_version(),\n        description='OpenMMLab Model Pretraining Toolbox and Benchmark',\n        long_description=readme(),\n        long_description_content_type='text/markdown',\n        keywords='computer vision, image classification, '\n        'unsupervised learning, self-supervised learning',\n        packages=find_packages(exclude=('configs', 'tools', 'demo', 'tests')),\n        include_package_data=True,\n        python_requires='>=3.7',\n        classifiers=[\n            'Development Status :: 4 - Beta',\n            'License :: OSI Approved :: Apache Software License',\n            'Operating System :: OS Independent',\n            'Programming Language :: Python :: 3',\n            'Programming Language :: Python :: 3.7',\n            'Programming Language :: Python :: 3.8',\n            'Programming Language :: Python :: 3.9',\n            'Programming Language :: Python :: 3.10',\n            'Programming Language :: Python :: 3.11',\n            'Topic :: Scientific/Engineering :: Artificial Intelligence',\n        ],\n        url='https://github.com/open-mmlab/mmpretrain',\n        author='MMPretrain Contributors',\n        author_email='openmmlab@gmail.com',\n        license='Apache License 2.0',\n        install_requires=parse_requirements('requirements/runtime.txt'),\n        extras_require={\n            'all': parse_requirements('requirements.txt'),\n            'tests': parse_requirements('requirements/tests.txt'),\n            'optional': parse_requirements('requirements/optional.txt'),\n            'mim': parse_requirements('requirements/mminstall.txt'),\n            'multimodal': parse_requirements('requirements/multimodal.txt'),\n        },\n        zip_safe=False)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}