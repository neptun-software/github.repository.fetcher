{
  "metadata": {
    "timestamp": 1736559576745,
    "page": 196,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spec-first/connexion",
      "stars": 4507,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.0400390625,
          "content": "600ed4ed94a3c9868370aa0d6e0c40a5ebd455be\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": "build\ndist\nconnexion.egg-info\n__pycache__\n.coverage\n*.egg\nhtmlcov/\n*.pyc\n.eggs\n.cache/\n*.swp\n.tox/\n.idea/\n.vscode/\nvenv/\n.venv/\nsrc/\n*.un~\npoetry.lock\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.421875,
          "content": "ci:\n  autoupdate_branch: \"main\"\n  autoupdate_schedule: monthly\nrepos:\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.1.1\n    hooks:\n      - id: flake8\n        files: \"^connexion/\"\n        additional_dependencies:\n          - flake8-rst-docstrings==0.2.3\n\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n        name: isort\n        files: \"^connexion/\"\n        args: [\"--project\", \"connexion\", \"--check-only\", \"--diff\"]\n      - id: isort\n        name: isort examples\n        files: \"^examples/\"\n        args: [\"--thirdparty\", \"connexion\", \"--check-only\", \"--diff\"]\n      - id: isort\n        name: isort tests\n        files: \"^tests/\"\n        args: [\"--project\", \"conftest\", \"--thirdparty\", \"connexion\", \"--check-only\", \"--diff\"]\n\n  - repo: https://github.com/psf/black\n    rev: 22.3.0\n    hooks:\n      - id: black\n        name: black\n        files: \"^connexion/\"\n        args: [\"connexion\"]\n      - id: black\n        name: black examples\n        files: \"^examples/\"\n        args: [\"examples\"]\n      - id: black\n        name: black tests\n        files: \"^tests/\"\n        args: [\"tests\"]\n\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v0.981\n    hooks:\n      - id: mypy\n        files: \"^connexion/\"\n        args: [\"--ignore-missing-imports\", \"connexion\"]\n        additional_dependencies:\n          - types-jsonschema\n          - types-PyYAML\n          - types-requests\n        pass_filenames: false\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.466796875,
          "content": "version: 2\n\nsphinx:\n  configuration: docs/conf.py\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    python: \"3.8\"\n  jobs:\n    post_create_environment:\n      # Install poetry\n      - python -m pip install poetry\n      # Tell poetry to not use a virtual environment\n      - poetry config virtualenvs.create false\n    post_install:\n      # Install dependencies with 'docs' dependency group\n      - VIRTUAL_ENV=$READTHEDOCS_VIRTUALENV_PATH python -m poetry install --with docs --all-extras\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.099609375,
          "content": "Connexion\nCopyright 2021 Robbe Sneyders\nCopyright 2021 Ruwan Lambrichts\nCopyright 2015-2021 Zalando SE"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.490234375,
          "content": " <a id=\"top\"></a>\n <p align=\"center\">\n     <img src=\"https://raw.githubusercontent.com/spec-first/connexion/main/docs/images/logo_banner.svg\" width=\"100%\"/>\n </p>\n <p align=\"center\">\n     <a href=\"https://pypi.org/project/connexion\"><img alt=\"coveralls\" src=\"https://img.shields.io/pypi/status/connexion.svg?style=flat-square&color=brightgreen\"></a>\n     <a href=\"https://pypi.org/project/connexion\"><img alt=\"PyPI version\" src=\"https://img.shields.io/pypi/v/connexion?color=brightgreen&style=flat-square\"></a>\n     <a href=\"https://pypistats.org/packages/connexion\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/dm/connexion?style=flat-square&color=brightgreen\"></a>\n     <a href=\"https://github.com/spec-first/connexion/blob/main/LICENSE\"><img alt=\"License\" src=\"https://img.shields.io/pypi/l/connexion?style=flat-square&color=brightgreen\"></a>\n     <a href=\"https://github.com/spec-first/connexion/actions/workflows/pipeline.yml\"><img alt=\"GitHub Workflow Status\" src=\"https://img.shields.io/github/actions/workflow/status/spec-first/connexion/pipeline.yml?style=flat-square\"></a>\n     <a href=\"https://coveralls.io/github/spec-first/connexion?branch=main\"><img alt=\"Coveralls\" src=\"https://img.shields.io/coverallsCoverage/github/spec-first/connexion?style=flat-square\"></a>\n     <a href=\"https://gurubase.io/g/connexion\"><img alt=\"Gurubase\" src=\"https://img.shields.io/badge/Gurubase-Ask%20Connexion%20Guru-brightgreen?style=flat-square\"></a>\n     <br>\n     <br>\n     <a href=\"https://connexion.readthedocs.io/en/stable/\"><strong>Explore the docs »</strong></a>\n </p>\n\n---\n\nConnexion is a modern Python web framework that makes spec-first and api-first development easy.\nYou describe your API in an [OpenAPI][OpenAPI] (or [Swagger][Swagger]) specification with as much \ndetail as you want and Connexion will guarantee that it works as you specified.\n\nIt works either standalone, or in combination with any ASGI or WSGI-compatible framework!\n\n<p align=\"center\">\n   <br>\n   <a href=\"https://connexion.readthedocs.io/en/latest/v3.html\"><strong>📢 Connexion 3 was recently released! Read about the changes here »</strong></a>\n   <br>\n   <br>\n</p>\n\n## ✨ Features\n\nConnexion provides the following functionality **based on your specification**:\n\n- 🚏 **Automatic route registration**, no ``@route`` decorators needed\n- 🔒 **Authentication**, split from your application logic\n- 🔎 **Request and response validation** of headers, parameters, and body\n- 📬 **Parameter parsing and injection**, no request object needed\n- 📨 **Response serialization**, you can return regular Python objects\n- 📺 **A Swagger UI console** with live documentation and ‘try it out’ feature\n- 🧩 **Pluggability**, in all dimensions\n\nConnexion also **helps you write your OpenAPI specification** and develop against it by providing a command line interface which lets you test and mock your specification.\n\n```shell\n   connexion run openapi.yaml\n```\n\n <p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n## 🫶 Sponsors\n\n<a href=\"https://www.ml6.eu\"><img src=\"https://raw.githubusercontent.com/spec-first/connexion/main/docs/images/sponsors/ML6.png\" title=ML6 height=\"100\"></a>\n<a href=\"https://www.devmark.ai/fern/?utm_source=connexion&utm_loc=readme&utm_type=logo\"><img src=\"https://raw.githubusercontent.com/spec-first/connexion/main/docs/images/sponsors/Fern.png\" title=Fern height=\"100\"></a>\n\nSponsors help us dedicate time to maintain Connexion. Want to help?\n\n<a href=\"https://github.com/sponsors/spec-first\"><strong>Explore the options »</strong></a>\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## 🪤 Why Connexion\n\nWith Connexion, you write the spec first. Connexion then calls your Python\ncode, handling the mapping from the specification to the code. This\nincentivizes you to write the specification so that all of your\ndevelopers can understand what your API does, even before you write a\nsingle line of code.\n\nIf multiple teams depend on your APIs, you can use Connexion to easily\nsend them the documentation of your API. This guarantees that your API will\nfollow the specification that you wrote. This is a different process from\nthe one offered by most frameworks, which generate a specification\n*after* you've written the code.\nSome disadvantages of generating specifications based on code is that\nthey often end up lacking details or mix your documentation with the implementation\nlogic of your application.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## ⚒️ How to Use\n\n### Installation\n\nYou can install connexion using pip:\n\n```shell\n    $ pip install connexion\n```\n\nConnexion provides 'extras' with optional dependencies to unlock additional features:\n\n- `swagger-ui`: Enables a Swagger UI console for your application.\n- `uvicorn`: Enables to run the your application using `app.run()` for\n  development instead of using an external ASGI server.\n- `flask`: Enables the `FlaskApp` to build applications compatible with the Flask\n  ecosystem.\n\nYou can install them as follows:\n\n```shell\n    $ pip install connexion[swagger-ui]\n    $ pip install connexion[swagger-ui,uvicorn]\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### Creating your application\n\nConnexion can be used either as a standalone application or as a middleware wrapping an existing\nASGI (or WSGI) application written using a different framework. The standalone application can be\nbuilt using either the `AsyncApp` or `FlaskApp`.\n\n- The `AsyncApp` is a lightweight application with native asynchronous support. Use it if you\n  are starting a new project and have no specific reason to use one of the other options.\n\n  ```Python\n      from connexion import AsyncApp\n\n      app = AsyncApp(__name__)\n  ```\n\n- The `FlaskApp` leverages the `Flask` framework, which is useful if you're migrating from\n  connexion 2.X or you want to leverage the `Flask` ecosystem.\n\n  ```python\n      from connexion import FlaskApp\n\n      app = FlaskApp(__name__)\n  ```\n\n- The `ConnexionMiddleware` can be wrapped around any existing ASGI or WSGI application.\n  Use it if you already have an application written in a different framework and want to add\n  functionality provided by connexion\n\n  ```python\n      from asgi_framework import App\n      from connexion import ConnexionMiddleware\n\n      app = App(__name__)\n      app = ConnexionMiddleware(app)\n  ```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### Registering an API\n\nWhile you can register individual routes on your application, Connexion really shines when you\nregister an API defined by an OpenAPI (or Swagger) specification.\nThe operation described in your specification is automatically linked to your Python view function via the ``operationId``\n\n**run.py**\n\n```python\n   def post_greeting(name: str, greeting: str):  # Paramaeters are automatically unpacked\n       return f\"{greeting} {name}\", 200          # Responses are automatically serialized\n\n   app.add_api(\"openapi.yaml\")\n```\n\n**openapi.yaml**\n\n```yaml\n   ...\n   paths:\n     /greeting/{name}:\n       post:\n         operationId: run.post_greeting\n         responses:\n           '200':\n             content:\n               text/plain:\n                 schema:\n                   type: string\n         parameters:\n           - name: name\n             in: path\n             required: true\n             schema:\n               type: string\n           - name: greeting\n             in: query\n             required: true\n             schema:\n               type: string\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### Running your application\n\nIf you installed connexion using `connexion[uvicorn]`, you can run it using the\n`run` method. This is only recommended for development:\n\n```python\n    app.run()\n```\n\nIn production, run your application using an ASGI server such as `uvicorn`. If you defined your\n`app` in a python module called `run.py`, you can run it as follows:\n\n```shell\n    $ uvicorn run:app\n```\n\nOr with gunicorn:\n\n```shell\n    $ gunicorn -k uvicorn.workers.UvicornWorker run:app\n```\n\n----\n\nNow you're able to run and use Connexion!\n\nSee the [examples][examples] folder for more examples.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## 📜 Changes\n\nA full changelog is maintained on the [GitHub releases page][Releases].\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## 🤲 Contributing\n\nWe welcome your ideas, issues, and pull requests. Just follow the\nusual/standard GitHub practices.\n\nFor easy development, install connexion using poetry with all extras, and\ninstall the pre-commit hooks to automatically run black formatting and static analysis checks.\n\n```shell\n    pip install poetry\n    poetry install --all-extras\n    pre-commit install\n```\n\nYou can find out more about how Connexion works and where to apply your changes by having a look\nat our [architecture][Architecture].\n\nUnless you explicitly state otherwise in advance, any non trivial\ncontribution intentionally submitted for inclusion in this project by you\nto the steward of this repository shall be under the\nterms and conditions of Apache License 2.0 written below, without any\nadditional copyright information, terms or conditions.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## 🙏 Thanks\n\nWe'd like to thank all of Connexion's contributors for working on this\nproject, Swagger/OpenAPI for their support, and Zalando for originally developing and releasing Connexion.\n\n## 📚 Recommended Resources\n\nAbout the advantages of working spec-first:\n\n* [Blog Atlassian][Blog Atlassian]\n* [API guidelines Zalando][API guidelines Zalando]\n* [Blog ML6][Blog ML6]\n* [Blog Zalando][Blog Zalando]\n\nTools to help you work spec-first:\n\n* [Online swagger editor][Online swagger editor]\n* [VS Code plugin][VS Code plugin]\n* [Pycharm plugin][Pycharm plugin]\n\n[OpenAPI]: https://openapis.org/\n[Swagger]: http://swagger.io/open-source-integrations/\n[Blog atlassian]: https://www.atlassian.com/blog/technology/spec-first-api-development\n[Blog ML6]: https://blog.ml6.eu/why-we-decided-to-help-maintain-connexion-c9f449877083\n[Blog Zalando]: https://engineering.zalando.com/posts/2016/12/crafting-effective-microservices-in-python.html\n[API guidelines Zalando]: https://opensource.zalando.com/restful-api-guidelines/#api-first\n[Online swagger editor]: https://editor.swagger.io/\n[VS Code plugin]: https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi\n[Pycharm plugin]: https://plugins.jetbrains.com/plugin/14837-openapi-swagger-editor\n[examples]: https://github.com/spec-first/connexion/blob/main/examples\n[Releases]: https://github.com/spec-first/connexion/releases\n[Architecture]: https://github.com/spec-first/connexion/blob/main/docs/images/architecture.png\n"
        },
        {
          "name": "connexion",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.05078125,
          "content": "[tool.poetry]\nname = \"connexion\"\nversion = \"3.0.dev0\"\ndescription = \"Connexion - API first applications with OpenAPI/Swagger\"\nreadme = \"README.md\"\nkeywords = [\"api\", \"swagger\", \"openapi\"]\nlicense = \"Apache-2.0\"\nauthors = [\n    \"Robbe Sneyders <robbe.sneyders@gmail.com>\",\n    \"Ruwan Lambrichts <ruwan.lambrichts@ml6.eu>\",\n    \"Daniel Grossmann-Kavanagh <me@danielgk.com>\",\n    \"Henning Jacobs <henning.jacobs@zalando.de>\",\n    \"João Santos <joao.santos@zalando.de>\",\n]\nmaintainers = [\n    \"Robbe Sneyders <robbe.sneyders@gmail.com>\",\n    \"Ruwan Lambrichts <ruwan.lambrichts@ml6.eu>\",\n]\nrepository = \"https://github.com/spec-first/connexion\"\ninclude = [\"*.txt\", \"*.rst\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Internet\",\n    \"Topic :: Internet :: WWW/HTTP\",\n    \"Topic :: Internet :: WWW/HTTP :: HTTP Servers\",\n    \"Topic :: Software Development\",\n    \"Topic :: Software Development :: Libraries\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Typing :: Typed\",\n]\n\n[tool.poetry.scripts]\nconnexion = 'connexion.cli:main'\n\n[tool.poetry.dependencies]\npython = '^3.8'\nasgiref = \">= 3.4\"\nhttpx = \">= 0.23\"\ninflection = \">= 0.3.1\"\njsonschema = \">=4.17.3\"\nJinja2 = \">= 3.0.0\"\npython-multipart = \">= 0.0.15\"\nPyYAML = \">= 5.1\"\nrequests = \">= 2.27\"\nstarlette = \">= 0.35\"\ntyping-extensions = \">= 4.6.1\"\nwerkzeug = \">= 2.2.1\"\n\na2wsgi = { version = \">= 1.7\", optional = true }\nflask = { version = \">= 2.2\", extras = [\"async\"], optional = true }\nswagger-ui-bundle = { version = \">= 1.1.0\", optional = true }\nuvicorn = { version = \">= 0.17.6\", extras = [\"standard\"], optional = true }\njsf = { version = \">=0.10.0\", optional = true }\n\n[tool.poetry.extras]\nflask = [\"a2wsgi\", \"flask\"]\nswagger-ui = [\"swagger-ui-bundle\"]\nuvicorn = [\"uvicorn\"]\nmock = [\"jsf\"]\n\n[tool.poetry.group.tests.dependencies]\npre-commit = \"~2.21.0\"\npytest = \"7.2.1\"\npytest-asyncio = \"~0.18.3\"\npytest-cov = \"~2.12.1\"\n\n[tool.poetry.group.docs.dependencies]\nsphinx = \"5.3.0\"\nsphinx_copybutton = \"0.5.2\"\nsphinx_design = \"0.4.1\"\nsphinx-rtd-theme = \"1.2.0\"\nsphinxemoji = \"0.2.0\"\n\n[build-system]\nrequires = [\"poetry-core>=1.2.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.distutils.bdist_wheel]\nuniversal = true\n\n[tool.pytest.ini_options]\nfilterwarnings = [\n    \"ignore::DeprecationWarning:connexion.*:\",\n    \"ignore::FutureWarning:connexion.*:\",\n]\nasyncio_mode = \"auto\"\n\n[tool.isort]\nprofile = \"black\"\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"if t.TYPE_CHECKING:\",\n    \"@t.overload\",\n]\n\n[[tool.mypy.overrides]]\nmodule = \"referencing.jsonschema.*\"\nfollow_imports = \"skip\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.9970703125,
          "content": "[flake8]\nexclude=connexion/__init__.py\nrst-roles=class,mod,obj\n# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#flake8\n# Longest docstring in current code base\nmax-line-length=137\nextend-ignore=E203,RST303\n\n[tox]\nisolated_build = True\nenvlist =\n    py38-min\n    {py38,py39,py310,py311,py312}-pypi\n    pre-commit\n\n[gh-actions]\npython =\n    3.8: py38-min,py38-pypi\n    3.9: py39-pypi\n    3.10: py310-pypi\n    3.11: py311-pypi,pre-commit\n    3.12: py312-pypi\n\n[testenv]\nsetenv=PYTHONPATH = {toxinidir}:{toxinidir}\ndeps=\n    poetry\nallowlist_externals=\n    cp\n    sed\n    mv\ncommands=\n    min: cp pyproject.toml .pyproject.toml\n    min: sed -i -E 's/\"(\\^|~|>=)([ 0-9])/\"==\\2/' pyproject.toml\n    poetry lock\n    poetry install --all-extras --with tests\n    poetry show\n    poetry run python -m pytest tests --cov connexion --cov-report term-missing\n    min: mv -f .pyproject.toml pyproject.toml\n\n[testenv:pre-commit]\ndeps=pre-commit\ncommands=pre-commit run --all-files --show-diff-on-failure\n"
        }
      ]
    }
  ]
}