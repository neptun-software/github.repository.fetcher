{
  "metadata": {
    "timestamp": 1736559989140,
    "page": 784,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "skorokithakis/catt",
      "stars": 3441,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.28515625,
          "content": "# http://editorconfig.org\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\ncharset = utf-8\nend_of_line = lf\n\n[*.bat]\nindent_style = tab\nend_of_line = crlf\n\n[LICENSE]\ninsert_final_newline = false\n\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".gitchangelog.rc",
          "type": "blob",
          "size": 6.3974609375,
          "content": "##\n## Format\n##\n##   ACTION: [AUDIENCE:] COMMIT_MSG [!TAG ...]\n##\n## Description\n##\n##   ACTION is one of 'chg', 'fix', 'new'\n##\n##       Is WHAT the change is about.\n##\n##       'chg' is for refactor, small improvement, cosmetic changes...\n##       'fix' is for bug fixes\n##       'new' is for new features, big improvement\n##\n##   AUDIENCE is optional and one of 'dev', 'usr', 'pkg', 'test', 'doc'\n##\n##       Is WHO is concerned by the change.\n##\n##       'dev'  is for developpers (API changes, refactors...)\n##       'usr'  is for final users (UI changes)\n##       'pkg'  is for packagers   (packaging changes)\n##       'test' is for testers     (test only related changes)\n##       'doc'  is for doc guys    (doc only changes)\n##\n##   COMMIT_MSG is ... well ... the commit message itself.\n##\n##   TAGs are additionnal adjective as 'refactor' 'minor' 'cosmetic'\n##\n##       They are preceded with a '!' or a '@' (prefer the former, as the\n##       latter is wrongly interpreted in github.) Commonly used tags are:\n##\n##       'refactor' is obviously for refactoring code only\n##       'minor' is for a very meaningless change (a typo, adding a comment)\n##       'cosmetic' is for cosmetic driven change (re-indentation, 80-col...)\n##       'wip' is for partial functionality but complete subfunctionality.\n##\n## Example:\n##\n##   new: usr: support of bazaar implemented\n##   chg: re-indentend some lines !cosmetic\n##   new: dev: updated code to be compatible with last version of killer lib.\n##   fix: pkg: updated year of licence coverage.\n##   new: test: added a bunch of test around user usability of feature X.\n##   fix: typo in spelling my name in comment. !minor\n##\n##   Please note that multi-line commit message are supported, and only the\n##   first line will be considered as the \"summary\" of the commit message. So\n##   tags, and other rules only applies to the summary.  The body of the commit\n##   message will be displayed in the changelog without reformatting.\n\n\n##\n## ``ignore_regexps`` is a line of regexps\n##\n## Any commit having its full commit message matching any regexp listed here\n## will be ignored and won't be reported in the changelog.\n##\nignore_regexps = [\n        r'@minor', r'!minor',\n        r'@cosmetic', r'!cosmetic',\n        r'@refactor', r'!refactor',\n        r'@wip', r'!wip',\n        r'^([cC]hg|[fF]ix|[nN]ew|[fF]eat)\\s*:\\s*[p|P]kg:',\n        r'^([cC]hg|[fF]ix|[nN]ew|[Ff]eat)\\s*:\\s*[d|D]ev:',\n        r'^(.{3,3}\\s*:)?\\s*[fF]irst commit.?\\s*$',\n        r'^\\d+\\.\\d+\\.\\d+$',\n  ]\n\n\n## ``section_regexps`` is a list of 2-tuples associating a string label and a\n## list of regexp\n##\n## Commit messages will be classified in sections thanks to this. Section\n## titles are the label, and a commit is classified under this section if any\n## of the regexps associated is matching.\n##\n## Please note that ``section_regexps`` will only classify commits and won't\n## make any changes to the contents. So you'll probably want to go check\n## ``subject_process`` (or ``body_process``) to do some changes to the subject,\n## whenever you are tweaking this variable.\n##\nsection_regexps = [\n    ('Features', [\n\tr'^([nN]ew|[fF]eat)\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n    ('Changes', [\n        r'^[cC]hg\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n    ('Fixes', [\n        r'^[fF]ix\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n]\n\n\n## ``body_process`` is a callable\n##\n## This callable will be given the original body and result will\n## be used in the changelog.\n##\n## Available constructs are:\n##\n##   - any python callable that take one txt argument and return txt argument.\n##\n##   - ReSub(pattern, replacement): will apply regexp substitution.\n##\n##   - Indent(chars=\"  \"): will indent the text with the prefix\n##     Please remember that template engines gets also to modify the text and\n##     will usually indent themselves the text if needed.\n##\n##   - Wrap(regexp=r\"\\n\\n\"): re-wrap text in separate paragraph to fill 80-Columns\n##\n##   - noop: do nothing\n##\n##   - ucfirst: ensure the first letter is uppercase.\n##     (usually used in the ``subject_process`` pipeline)\n##\n##   - final_dot: ensure text finishes with a dot\n##     (usually used in the ``subject_process`` pipeline)\n##\n##   - strip: remove any spaces before or after the content of the string\n##\n## Additionally, you can `pipe` the provided filters, for instance:\n#body_process = Wrap(regexp=r'\\n(?=\\w+\\s*:)') | Indent(chars=\"  \")\n#body_process = Wrap(regexp=r'\\n(?=\\w+\\s*:)')\n#body_process = noop\n#body_process = ReSub(r'((^|\\n)[A-Z]\\w+(-\\w+)*: .*(\\n\\s+.*)*)+$', r'') | strip\nbody_process = lambda text: \"\"\n\n\n## ``subject_process`` is a callable\n##\n## This callable will be given the original subject and result will\n## be used in the changelog.\n##\n## Available constructs are those listed in ``body_process`` doc.\nsubject_process = (strip |\n    ReSub(r'^([cC]hg|[fF]ix|[nN]ew|[fF]eat)\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n@]*)(@[a-z]+\\s+)*$', r'\\4') |\n    ucfirst | final_dot)\n\n\n## ``tag_filter_regexp`` is a regexp\n##\n## Tags that will be used for the changelog must match this regexp.\n##\ntag_filter_regexp = r'^v?[0-9]+\\.[0-9]+(\\.[0-9]+)?$'\n\n\n## ``unreleased_version_label`` is a string\n##\n## This label will be used as the changelog Title of the last set of changes\n## between last valid tag and HEAD if any.\nunreleased_version_label = \"Unreleased\"\n\n\n## ``output_engine`` is a callable\n##\n## This will change the output format of the generated changelog file\n##\n## Available choices are:\n##\n##   - rest_py\n##\n##        Legacy pure python engine, outputs ReSTructured text.\n##        This is the default.\n##\n##   - mustache(<template_name>)\n##\n##        Template name could be any of the available templates in\n##        ``templates/mustache/*.tpl``.\n##        Requires python package ``pystache``.\n##        Examples:\n##           - mustache(\"markdown\")\n##           - mustache(\"restructuredtext\")\n##\n##   - makotemplate(<template_name>)\n##\n##        Template name could be any of the available templates in\n##        ``templates/mako/*.tpl``.\n##        Requires python package ``mako``.\n##        Examples:\n##           - makotemplate(\"restructuredtext\")\n##\n#output_engine = rest_py\n#output_engine = mustache(\"restructuredtext\")\noutput_engine = mustache(\"markdown\")\n#output_engine = makotemplate(\"restructuredtext\")\n\n\n## ``include_merge`` is a boolean\n##\n## This option tells git-log whether to include merge commits in the log.\n## The default is to include them.\ninclude_merge = True\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4462890625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n.idea/\npoetry.lock\n.vscode/\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.8486328125,
          "content": "image: python:3.11\n\nstages:\n  - build\n  - release\n\ntest:\n  variables:\n    PRE_COMMIT_HOME: \"$CI_PROJECT_DIR/.cache/pre-commit\"\n    PIP_CACHE_DIR: \"${CI_PROJECT_DIR}/.cache/pip\"\n  cache:\n    key: \"${CI_JOB_NAME}\"\n    paths:\n      - .cache/pre-commit\n      - .cache/pip\n      - venv\n  stage: build\n  before_script:\n    - pip install virtualenv poetry pre-commit urllib3==1.26.15\n    - virtualenv venv\n    - source venv/bin/activate\n    - poetry config virtualenvs.create false\n    - poetry install --no-root\n  script:\n    - pre-commit run -a --hook-stage manual\n    - pytest\n\npypi:\n  variables:\n    TWINE_USERNAME: \"__token__\"\n  stage: release\n  needs: [test]\n  rules:\n  - if: $CI_COMMIT_TAG =~ /^v\\d+.\\d+.\\d+$/\n    when: on_success\n  script:\n      - pip install -U twine gitchangelog pystache poetry\n      - gitchangelog\n      - poetry build\n      - twine upload dist/*\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.6943359375,
          "content": "repos:\n- repo: https://github.com/ambv/black\n  rev: 23.3.0\n  hooks:\n  - id: black\n    args: [--line-length=120]\n- repo: https://github.com/asottile/reorder_python_imports\n  rev: v3.9.0\n  hooks:\n  -   id: reorder-python-imports\n- repo: https://github.com/charliermarsh/ruff-pre-commit\n  rev: 'v0.0.265'\n  hooks:\n    - id: ruff\n- repo: https://github.com/pre-commit/mirrors-mypy\n  rev: v1.2.0\n  hooks:\n  - id: mypy\n    args: [\"--ignore-missing-imports\"]\n    additional_dependencies: [\"types-requests\"]\n- repo: local\n  hooks:\n  - id: gitchangelog\n    language: system\n    always_run: true\n    pass_filenames: false\n    name: Generate changelog\n    entry: bash -c \"gitchangelog > CHANGELOG.md\"\n    stages: [commit]\n"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 0.15625,
          "content": "=======\nCredits\n=======\n\nDevelopment Lead\n----------------\n\n* Stavros Korokithakis <hi@stavros.io>\n\nContributors\n------------\n\n* theychx <theychx@fastmail.com>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.03515625,
          "content": "# Changelog\n\n\n## v0.12.12 (2024-01-28)\n\n### Fixes\n\n* Set Poetry as the build-backend explicitly (#433) [Martin Weinelt]\n\n\n## v0.12.11 (2023-05-09)\n\n### Features\n\n* Add volumemute command (#427) [neurodiv-eric]\n\n### Fixes\n\n* Update pychromecast requirement plus fixes (#429) [theychx]\n\n\n## v0.12.10 (2023-01-30)\n\n### Features\n\n* Add swiergot's custom receiver. [Stavros Korokithakis]\n\n### Fixes\n\n* Change DashCast app ID. [Stavros Korokithakis]\n\n* Fix discovery function in the API (#406) [Scott Moreau]\n\n\n## v0.12.9 (2022-06-24)\n\n### Fixes\n\n* Rework broken get_cast_with_ip (#403) [theychx]\n\n\n## v0.12.8 (2022-06-22)\n\n### Fixes\n\n* Fix issues with recent pychromecast / zeroconf (#398) [theychx]\n\n* Pin Protobuf to <4 to reduce incompatibilities (fixes #394) [Stavros Korokithakis]\n\n\n## v0.12.7 (2022-01-27)\n\n### Fixes\n\n* Fix importlib error on Python 3.8 and older (#382) [Emil Oppeln-Bronikowski]\n\n\n## v0.12.6 (2022-01-15)\n\n### Fixes\n\n* Fix casing issue with device names (#375) (#377) [Lee]\n\n\n## v0.12.5 (2021-12-19)\n\n### Fixes\n\n* Switch to yt-dlp so YouTube and other services will work again (#369) [anthonyrocom]\n\n\n## v0.12.4 (2021-12-18)\n\n### Fixes\n\n* Fix crash while scanning (fixes #368) [Stavros Korokithakis]\n\n\n## v0.12.3 (2021-12-10)\n\n### Fixes\n\n* Make aliases case-insensitive (fixes #366) [Stavros Korokithakis]\n\n* Use yt-dlp rather than the defunct youtube-dl. [Stavros Korokithakis]\n\n\n## v0.12.2 (2021-07-11)\n\n### Fixes\n\n* Pin PyChromecast and zeroconf (3rd-party dependency) to specific versions to avoid breakage. [Stavros Korokithakis]\n\n* Allow use of info cmds on idle/inactive cc (#345) [theychx]\n\n* Include changelog in releases. [Stavros Korokithakis]\n\n\n## v0.12.1 (2021-02-27)\n\n### Fixes\n\n* Support PyChromecst 9 (#325) [theychx]\n\n* Fix potential PyChromecast error by pinning to version 8. [Stavros Korokithakis]\n\n* Don't do discovery dance when checking ip validity (#309) [theychx]\n\n\n## v0.12.0 (2020-10-28)\n\n### Features\n\n* Add seek-to opt to cast cmd (#307) [theychx]\n\n* Add remote-only subtitles to the API (#258) [Stavros Korokithakis]\n\n### Fixes\n\n* Wait longer for the Chromecast to connect to the HTTP server (#295) [Edd Barrett]\n\n\n## v0.11.3 (2020-07-18)\n\n### Fixes\n\n* Fix spurious \"Invalid byte range\" error. [Stavros Korokithakis]\n\n\n## v0.11.2 (2020-07-01)\n\n### Fixes\n\n* Revert to PyChromecast 6 until we can figure out what to do about 7. [Stavros Korokithakis]\n\n\n## v0.11.1 (2020-06-29)\n\n### Fixes\n\n* Force pychromecast 7, update to new api. [Ian Calvert]\n\n* Recognize the .jpeg suffix as a jpeg file (#262) [Stavros Korokithakis]\n\n* Create parent directories if config dir doesn't exist (fixes #251) (#252) [Stavros Korokithakis]\n\n\n## v0.11.0 (2020-03-01)\n\n### Features\n\n* Add cmds for config file manipulation (#240) [theychx]\n\n* Add play_toggle cmd (#239) [theychx]\n\n* Add force option to stop cmd (#238) [theychx]\n\n* Add block option to cast cmd (#237) [theychx]\n\n### Fixes\n\n* Fix filename display (#244) [theychx]\n\n\n## v0.10.3 (2020-01-26)\n\n### Fixes\n\n* Update PyChromecast requirement. [Stavros Korokithakis]\n\n\n## v0.10.2 (2019-10-23)\n\n### Fixes\n\n* Add socket based fallback approach in get_local_ip. [Stavros Korokithakis]\n\n* Add socket based fallback approach in get_local_ip. [theychx]\n\n* Fix namespace related crash when using DashCast. [Stavros Korokithakis]\n\n* Only serve files forever if it is necessary (#210) [Stavros Korokithakis]\n\n\n## v0.10.0 (2019-08-19)\n\n### Features\n\n* Add ability to use subtitles with remote content (#207) [theychx]\n\n* Add ability to use ip-address as device argument  (#197) [theychx]\n\n### Fixes\n\n* Adapt write_config to \"new\" get_chromecast (#208) [theychx]\n\n* Try to eliminate spurious error msgs when seeking (#194) [theychx]\n\n\n## v0.9.5 (2019-03-26)\n\n### Fixes\n\n* Only build py3 wheels/packages. [Stavros Korokithakis]\n\n\n## v0.9.4 (2019-03-26)\n\n### Fixes\n\n* Make catt refuse to install under 2 more. [Stavros Korokithakis]\n\n\n## v0.9.3 (2019-03-26)\n\n### Fixes\n\n* Refuse to install under Python 2. [Stavros Korokithakis]\n\n* Show better error message if Chromecast disconnects while playing. [Stavros Korokithakis]\n\n\n## v0.9.0 (2019-01-20)\n\n### Features\n\n* Use new Youtube controller (#156) [theychx]\n\n* Add stable API. [theychx]\n\n### Fixes\n\n* Make use of --ytdl-opt imply --force-default (#150) [theychx]\n\n\n## v0.8.1 (2018-10-12)\n\n### Features\n\n* Use user specified format filter (#129) [theychx]\n\n### Fixes\n\n* Correct cast_site and write_config command names (#134) [theychx]\n\n* Give correct error messages with Dashcast (#133) [theychx]\n\n\n## v0.8.0 (2018-09-10)\n\n### Features\n\n* Add YouTube-DL option command line parameter. [Fatih Ka]\n\n* Group support (#120) [theychx]\n\n### Fixes\n\n* Make save files portable (#125) [theychx]\n\n* Fix \"playing\" never getting set (#113) [theychx]\n\n* Fix ids and thumbnails not returned for active playlist entries (#112) [theychx]\n\n* Make save restore more robust (#111) [theychx]\n\n* Fail if a file given as a cli argument does not exist (#109) [theychx]\n\n* Make cast_site accept stdin as argument (#108) [theychx]\n\n* Make dashcast work with audio devices (#107) [theychx]\n\n\n## v0.7.0 (2018-05-26)\n\n### Features\n\n* Cast a website to Chromecast (via DashCast) (#102) [Marcos Diez]\n\n* Cast file with local or remote subtitles (#93) [Marcos Diez]\n\n### Fixes\n\n* Use netifaces instead of socket for get_local_ip (#100) [theychx]\n\n* Guess the content type of remote files as well. [Samuel Loury]\n\n* Specify the correct mimetype when casting local files (#96) [Marcos Diez]\n\n\n## v0.6.1 (2018-05-05)\n\n### Fixes\n\n* Use a more educational example Youtube link (#92) [Ofek Lev]\n\n\n## v0.6.0 (2018-04-30)\n\n### Features\n\n* Play random playlist entry (#86) [theychx]\n\n* Save/restore (#84) [theychx]\n\n### Fixes\n\n* Improve kill (#85) [theychx]\n\n\n## v0.5.7 (2018-04-10)\n\n### Features\n\n* Add force default option to cast command (#76) [theychx]\n\n### Fixes\n\n* Remove py2 compat code (#75) [theychx]\n\n\n## v0.5.4 (2018-02-22)\n\n### Fixes\n\n* Misc improvements/fixes for final Python 2 release (#69) [theychx]\n\n\n## v0.5.3 (2018-02-17)\n\n### Fixes\n\n* Make status command more useful (#65) [theychx]\n\n* Proper fix for add action (#64) [theychx]\n\n* Make info command more useful (#63) [theychx]\n\n\n## v0.5.1 (2017-09-30)\n\n### Features\n\n* Make audio devices stream DASH-audio from YouTube (#49) [theychx]\n\n* Add skip command (#43) [theychx]\n\n* YouTube Queue support (#40) [theychx]\n\n* Make scan fail when no cc's are found (#35) [theychx]\n\n### Fixes\n\n* Improve standard format (#54) [theychx]\n\n* Ensure DIAL info from all CC's (#45) [theychx]\n\n* Turn human_time into a def (#33) [theychx]\n\n\n## v0.5.0 (2017-03-27)\n\n### Features\n\n* Make status use regular time descriptions (#32) [theychx]\n\n* Add argument to volumeupdown (#29) [theychx]\n\n* Add scanning for local Chromecasts. [Stavros Korokithakis]\n\n### Fixes\n\n* Further improve play_media (#31) [theychx]\n\n* Rework CastController.init. [theychx]\n\n* Do state_check in CastController.init. [theychx]\n\n* Make check_state private. [theychx]\n\n* Correct timeout parameter type. [theychx]\n\n* Make catt work with pychromecast 0.8.0. [theychx]\n\n\n## v0.4.3 (2017-03-14)\n\n### Fixes\n\n* Handle playlists better (fixes #24) [theychx]\n\n\n## v0.4.2 (2017-02-18)\n\n### Features\n\n* Add aliases to config. (#19) [theychx]\n\n* Switch to configparser for the config. [Stavros Korokithakis]\n\n* Add custom time type for seek functions (#13) [theychx]\n\n* Add config (#11) [theychx]\n\n* Add user selectable CC device. [Stavros Korokithakis]\n\n* Add user selectable CC device. [theychx]\n\n### Fixes\n\n* Freeze requirements until #12 is sorted (#20) [theychx]\n\n* Replace connection message with more useful error message. (#18) [theychx]\n\n* Cleanup in controllers / cli. (#17) [theychx]\n\n* Change volume description (#16) [theychx]\n\n* Remove volume default. (#15) [theychx]\n\n* Make catt exit nicely if ytdl does not find a video. (#14) [theychx]\n\n* Fail if a Chromecast cannot be found when writing the configuration. [Stavros Korokithakis]\n\n* Small fix and comments in controllers.Cache. [theychx]\n\n* Change cache filename and fix tempdir. [theychx]\n\n* Simplify cache retrieval. [theychx]\n\n* Weed out another auto-discovery edge case. [theychx]\n\n* Solution for edge case where cc would not be auto-discovered. [theychx]\n\n* Make test_catt.py pass (again) [theychx]\n\n* Slight improvement of cache. [theychx]\n\n* Make test_catt.py pass. [theychx]\n\n* Stabilize cache handling. [theychx]\n\n* Remove unnecessary code from play_media. [Stavros Korokithakis]\n\n\n## v0.4.1 (2016-09-21)\n\n### Fixes\n\n* Add python3 compatible imports. [theychx]\n\n\n## v0.4.0 (2016-09-20)\n\n### Features\n\n* Add local file casting support. [Stavros Korokithakis]\n\n\n## v0.3.4 (2016-08-18)\n\n### Features\n\n* Add additional volume and info commands. [Stavros Korokithakis]\n\n\n## v0.3.2 (2016-08-17)\n\n### Fixes\n\n* Speed up casting by not killing apps known to be nonblocking. [Stavros Korokithakis]\n\n\n## v0.3.1 (2016-08-05)\n\n### Fixes\n\n* Find the best format from youtube-dl properly. [Stavros Korokithakis]\n\n\n## v0.3.0 (2016-08-05)\n\n### Features\n\n* Add ability to fast forward and adjust volume. [Stavros Korokithakis]\n\n### Fixes\n\n* Pin to a different youtube-dl version (fixes #2). [Stavros Korokithakis]\n\n\n## v0.2.0 (2016-05-30)\n\n### Features\n\n* Show title instead of URL when playing. [Stavros Korokithakis]\n\n### Fixes\n\n* Don't die on video URLs that point to the video file itself. [Stavros Korokithakis]\n\n* Remove decimals from status time. [Stavros Korokithakis]\n\n* Don't crash on status if nothing is playing. [Stavros Korokithakis]\n\n\n## v0.1.4 (2016-04-25)\n\n### Fixes\n\n* Make the CLI interface more self-documenting. [Stavros Korokithakis]\n\n* Fix rewind. [Stavros Korokithakis]\n\n\n## v0.1.3 (2016-04-25)\n\n### Fixes\n\n* Fix setup.py crash due to missing history. [Stavros Korokithakis]\n\n\n## v0.1.2 (2016-04-25)\n\n### Fixes\n\n* Fix version. [Stavros Korokithakis]\n\n\n## v0.1.1 (2016-04-25)\n\n### Fixes\n\n* Don't crash on status if nothing is playing. [Stavros Korokithakis]\n\n* Add option to delete cache. [Stavros Korokithakis]\n\n\n## v0.1.0 (2016-04-25)\n\n### Features\n\n* Change the Chromecast stop command to kill. [Stavros Korokithakis]\n\n* Add more commands. [Stavros Korokithakis]\n\n### Fixes\n\n* Make temporary directory finding cross-platform. [Stavros Korokithakis]\n\n* Remove unused import. [Stavros Korokithakis]\n\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1630859375,
          "content": "Contributing\n============\n\nContributions are welcome, and they are greatly appreciated! Every\nlittle bit helps, and credit will always be given.\n\nYou can contribute in many ways:\n\nTypes of Contributions\n----------------------\n\n### Report Bugs\n\nReport bugs at <https://github.com/skorokithakis/catt/issues>.\n\nIf you are reporting a bug, please include:\n\n-   Your operating system name and version.\n-   Any details about your local setup that might be helpful in\n    troubleshooting.\n-   Detailed steps to reproduce the bug.\n\n### Fix Bugs\n\nLook through the GitHub issues for bugs. Anything tagged with \\\"bug\\\" is\nopen to whoever wants to implement it.\n\n### Implement Features\n\nLook through the GitHub issues for features. Anything tagged with\n\\\"feature\\\" is open to whoever wants to implement it.\n\n### Write Documentation\n\nCast All The Things could always use more documentation, whether as part\nof the official Cast All The Things docs, in docstrings, or even on the\nweb in blog posts, articles, and such.\n\n### Submit Feedback\n\nThe best way to send feedback is to file an issue at\n<https://github.com/skorokithakis/catt/issues>.\n\nIf you are proposing a feature:\n\n-   Explain in detail how it would work.\n-   Keep the scope as narrow as possible, to make it easier to\n    implement.\n-   Remember that this is a volunteer-driven project, and that\n    contributions are welcome :)\n\nGet Started!\n------------\n\nReady to contribute? Here\\'s how to set up [catt]{.title-ref} for local\ndevelopment.\n\n1.  Fork the [catt]{.title-ref} repo on GitHub.\n\n2.  Clone your fork locally:\n\n    ``` {.shell}\n    $ git clone git@github.com:your_name_here/catt.git\n    ```\n\n3.  Install your local copy into a virtualenv. Assuming you have\n    poetry installed, this is how you set up your fork for\n    local development:\n\n    ``` {.shell}\n    $ poetry shell\n    $ poetry install --no-root\n    ```\n\n4.  Create a branch for local development:\n\n    ``` {.shell}\n    $ git checkout -b name-of-your-bugfix-or-feature\n    ```\n\n    Now you can make your changes locally.\n\n5.  When you\\'re done making changes, check that your changes pass\n    flake8 and the tests, including testing other Python versions with\n    tox:\n\n    ``` {.shell}\n    $ flake8 catt tests\n    $ pytest\n    ```\n\n    To get flake8 and tox, just pip install them into your virtualenv.\n\n6.  Commit your changes and push your branch to GitHub:\n\n    ``` {.shell}\n    $ git add .\n    $ git commit -m \"Your detailed description of your changes.\"\n    $ git push origin name-of-your-bugfix-or-feature\n    ```\n\n7.  Submit a pull request through the GitHub website.\n\nPull Request Guidelines\n-----------------------\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n1.  The pull request should include tests.\n2.  If the pull request adds functionality, the docs should be updated.\n    Put your new functionality into a function with a docstring, and add\n    the feature to the list in README.md.\n3.  The pull request should work for all Python versions after 3.7. Check\n    <https://gitlab.com/stavros/catt/-/pipelines> and make\n    sure that the tests pass for all supported Python versions.\n\nTips\n----\n\nTo run a subset of tests:\n\n``` {.shell}\n$ python -m unittest tests.test_catt\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2939453125,
          "content": "BSD 2-Clause License\n\nCopyright (c) 2016, Stavros Korokithakis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.923828125,
          "content": "Cast All The Things\n===================\n\n[![image](https://img.shields.io/pypi/v/catt.svg)](https://pypi.python.org/pypi/catt)\n[![image](https://img.shields.io/travis/skorokithakis/catt.svg)](https://travis-ci.org/skorokithakis/catt)\n[![image](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/skorokithakis/catt)\n\nCast All The Things allows you to send videos from many, many online\nsources (YouTube, Vimeo, and a few hundred others) to your Chromecast.\nIt also allows you to cast local files or render websites.\n\nInstallation\n------------\n\nYou can install Cast All The Things with pipx:\n\n    pipx install catt\n\nOr with pip, but that's not as good:\n\n    pip3 install catt\n\n`catt` is only compatible with Python 3. If you need a Python\n2-compatible version, please install `0.5.6`, the last py2-compatible\nrelease.\n\nUsage\n-----\n\nTo use Cast All The Things, just specify a URL:\n\n    catt cast \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n\n`catt` supports any service that yt-dlp supports, which includes most\nonline video hosting services.\n\n`catt` can also cast local files (if they're in a format the Chromecast\nsupports natively):\n\n    catt cast ./myvideo.mp4\n\nYou can also control your Chromecast through `catt` commands, for\nexample with `catt pause`. Try running `catt --help` to see the full\nlist of commands.\n\nIf you have subtitles and the name is similar to the name of the local\nfile, `catt` will add them automatically. You can, of course, specify\nany other subtitle if you want. Although Chromecast only supports\nWEBVTT, TTML and Line 21 subtitles, `catt` conveniently converts SRTs to\nWEBVTT for you on the fly. Here is how to use it:\n\n    catt cast -s ./mysubtitle.srt /myvideo.mp4\n\n`catt` can also tell your Chromecast to display any website:\n\n    catt cast_site https://en.wikipedia.org/wiki/Rickrolling\n\nPlease note that the Chromecast has a slow CPU but a reasonably recent\nversion of Google Chrome. The display resolution is 1280x720.\n\nIf you want to pass yt-dlp options to catt through the [-y]{.title-ref}\ncommand-line flag, you need to use yt-dlp's [internal option\nname](https://github.com/yt-dlp/yt-dlp/blob/master/yt_dlp/__init__.py#L620),\nrather than its command-line name.\n\nIf you notice that catt stops working with video sites (YouTube, Vimeo,\netc), just upgrade yt-dlp with [pip install -U yt-dlp]{.title-ref} and\nthat will probably fix it. This is because sites keep changing and\nyt-dlp is updated very regularly to keep them all working.\n\nYou can also run `catt` in Docker, if you prefer:\n\n    docker run --net=host --rm -it python:3.7 /bin/bash -c \"pip install catt; catt cast 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'\"\n\n### Configuration file\n\nCATT can utilize a config-file stored at `~/.config/catt/catt.cfg`\n(`%APPDATA%\\catt\\catt.cfg` on Windows, `~/Library/Application Support/catt/catt.cfg` on macOS).\n\nThe format is as following:\n\n```ini\n[options]\ndevice = chromecast_one\n\n[aliases]\none = chromecast_one\ntwo = chromecast_two\n```\n\nIn the `[options]` section, `device` denotes the default device that\nwill be selected, when you have not selected a device via the cli.\n\nYou can write your choice of default device to `catt.cfg` by doing:\n\n    catt -d <name_of_chromecast> set_default\n\nIn the `[aliases]` section, you can specify aliases for the names of\nyour chromecasts. You can then select a device just by doing:\n\n    catt -d <alias> <command>\n\nYou can write an alias name for a device to `catt.cfg` by doing:\n\n    catt -d <name_of_chromecast> set_alias <alias>\n\nFirewall\n--------\n\nFor the casting of local files to work you need to allow in the port range 45000-47000 over tcp.\n\nContributing\n------------\n\nIf you want to contribute a feature to `catt`, please open an issue (or\ncomment on an existing one) first, to make sure it's something that the\nmaintainers are interested in. Afterwards, just clone the repository and\nhack away!\n\nTo run `catt` in development, you can use the following command:\n\n    python -m catt.cli --help\n\nBefore committing, please make sure you install `pre-commit` and install\nits hooks:\n\n    pip install pre-commit\n    pre-commit install\n\nThat's all, now you can commit and the hooks will run. Black (which is\nused to format the code) requires Python 3.6 to run, but please make the\neffort, as our CI will yell at you if the code is not formatted, and\nnobody wants that.\n\nThanks!\n\nInfo\n----\n\n-   Free software: BSD license\n\nFeatures\n--------\n\n- Casts videos to Chromecast\n- From [many, many online\n  sources](https://github.com/yt-dlp/yt-dlp/blob/master/supportedsites.md)\n- Casts local files (videos, photos and music)\n- Casts any website to Chromecast\n\nThanks\n------\n\nCatt would not be possible without these great projects:\n\n- [pychromecast](https://github.com/balloob/pychromecast) - Library\n  for Python 3 to communicate with the Google Chromecast\n- [yt-dlp](https://github.com/yt-dlp/yt-dlp) - Command-line program to\n  download videos from YouTube.com and other video sites\n- [casttube](https://github.com/ur1katz/casttube) - YouTube Chromecast\n  API\n"
        },
        {
          "name": "catt",
          "type": "tree",
          "content": null
        },
        {
          "name": "catt_receiver",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.38671875,
          "content": "[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool]\n\n[tool.poetry]\nname = \"catt\"\nversion = \"0.12.13\"\ndescription = \"Cast All The Things allows you to send videos from many, many online sources to your Chromecast.\"\nlicense = \"BSD\"\nkeywords = [\"chromecast\", \"cast\", \"catt\", \"cast_all_the_things\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: End Users/Desktop\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Natural Language :: English\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.7\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n]\nhomepage = \"https://github.com/skorokithakis/catt\"\nauthors = [\"Stavros Korokithakis <hi@stavros.io>\"]\nreadme = \"README.md\"\n\n[tool.poetry.scripts]\ncatt = \"catt.cli:main\"\n\n[tool.poetry.dependencies]\npython = \">=3.7\"\nclick = \">=7.1.2\"\nifaddr = \">=0.1.7\"\npychromecast = \">=14.0.1, <15\"\nrequests = \">=2.23.0\"\nyt-dlp = \">=2023.3.4\"\n\n[tool.poetry.dev-dependencies]\ncoverage = \"*\"\nflake8 = \"*\"\ngitchangelog = \"*\"\nisort = \"*\"\nmypy = \"*\"\npep8-naming = \"*\"\npre-commit = \"*\"\npystache = \"*\"\npytest = \"*\"\nsphinx = \"==1.3.1\"\ntox = \">=3.13.2\"\nvirtualenv = \">=20.0.8\"\nwheel = \"*\"\n\n[tool.ruff]\nignore = [\"F403\", \"E501\", \"N802\", \"N803\", \"N806\", \"C901\", \"D100\", \"D102\", \"D102\", \"D10\"]\n"
        },
        {
          "name": "realcc_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements_dev.txt",
          "type": "blob",
          "size": 0.126953125,
          "content": "Sphinx==1.3.1\ncoverage\nflake8\ngitchangelog\nisort\nmypy\npep8-naming\npre-commit\npystache\npytest\ntox>=3.13.2\nvirtualenv>=20.0.8\nwheel\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.4521484375,
          "content": "[bumpversion]\ntag = True\ncommit = True\ncurrent_version = 0.9.5\n\n[wheel]\nuniversal = 1\n\n[flake8]\nexclude = docs\nignore = E501,W503\nimport-order-style = smarkets\n\n[bdist_wheel]\npython-tag = py3\n\n[options]\npython_requires = >= 3.4\n\n[isort]\ninclude_trailing_comma = true\nline_length = 120\nforce_grid_wrap = 0\nmulti_line_output = 3\nskip = migrations,node_modules\n\n[semantic_release]\nversion_variable = catt/__init__.py:__version__\n\n[bumpversion:file:catt/__init__.py]\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.2861328125,
          "content": "[tox]\nenvlist = py36, py37, py38, py39\n\n[testenv]\nsetenv =\n    PYTHONPATH = {toxinidir}:{toxinidir}/catt\ncommands = python setup.py test\n\n[testenv:py36]\nbasepython = python3.6\n\n[testenv:py37]\nbasepython = python3.7\n\n[testenv:py38]\nbasepython = python3.8\n\n[testenv:py39]\nbasepython = python3.9\n"
        }
      ]
    }
  ]
}