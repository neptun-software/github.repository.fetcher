{
  "metadata": {
    "timestamp": 1736559796848,
    "page": 522,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Python-Markdown/markdown",
      "stars": 3853,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.0126953125,
          "content": "comment: off\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0693359375,
          "content": "[run]\nomit=\n    *site-packages*\n    tests/*\n    markdown/test_tools.py\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.23046875,
          "content": "tests/basic/** linguist-vendored\ntests/extensions/** linguist-vendored\ntests/misc/** linguist-vendored\ntests/options/** linguist-vendored\ntests/php/** linguist-vendored\ntests/pl/** linguist-vendored\ntests/safe_mode/** linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.845703125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\ntest-output.html\n\n# Translations\n*.mo\n*.pot\n\n# Scrapy stuff:\n.scrapy\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# virtualenv\n.venv/\nvenv/\nENV/\n\n# MkDocs documentation\nsite/\n\n# Mac files\n.DS_Store\n"
        },
        {
          "name": ".pyspelling.yml",
          "type": "blob",
          "size": 2.0126953125,
          "content": "spellchecker: aspell\n\nmatrix:\n- name: mkdocs\n  group: docs\n  sources:\n  - site/**/*.html\n  aspell:\n    lang: en\n    d: en_US\n  dictionary:\n    wordlists:\n    - .spell-dict\n    output: build/dictionary/mkdocs.dic\n  pipeline:\n  - pyspelling.filters.html:\n      comments: false\n      attributes:\n      - title\n      - alt\n      ignores:\n      - 'code, pre'\n      captures:\n      - '[role=main] *|*:not(script,style)'\n  - pyspelling.filters.context:\n      context_visible_first: true\n      delimiters:\n      # Ignore possessive endings\n      - open: '(?<=\\w)â€™s(?!\\w)'\n        close: '\\b'\n  - pyspelling.filters.url:\n\n- name: markdown\n  group: docs\n  sources:\n  - README.md\n  - INSTALL.md\n  - LICENSE.md\n  - CODE_OF_CONDUCT.md\n  aspell:\n    lang: en\n    d: en_US\n    mode: markdown\n  dictionary:\n    wordlists:\n    - .spell-dict\n    output: build/dictionary/markdown.dic\n\n- name: python\n  group: source\n  sources:\n  - '{markdown,tests}/**/*.py'\n  aspell:\n    lang: en\n    d: en_US\n    mode: markdown\n  dictionary:\n    wordlists:\n    - .spell-dict\n    output: build/dictionary/python.dic\n  pipeline:\n  - pyspelling.filters.python:\n      group_comments: true\n  - pyspelling.flow_control.wildcard:\n      allow:\n      - py-comment\n  - pyspelling.filters.context:\n      context_visible_first: true\n      delimiters:\n      # Ignore lint (noqa) and coverage (pragma) as well as shebang (#!)\n      - open: '^(?: *(?:noqa\\b|pragma: no cover)|!)'\n        close: '$'\n      # Ignore Python encoding string -*- encoding stuff -*-\n      - open: '^ *-\\*-'\n        close: '-\\*-$'\n      # Ignore possessive endings\n      - open: '(?<=\\w)''s(?!\\w)'\n        close: '\\b'\n  - pyspelling.filters.context:\n      context_visible_first: true\n      escapes: '\\\\[\\\\`]'\n      delimiters:\n      # Ignore lines which are inedented at least one level (Markdown code block)\n      # For some reason indented code blocks are not properly ignored by aspell in markdown mode.\n      # Warning: This could ignore a nested list item\n      - open: '^ {4,}'\n        close: '$'\n  - pyspelling.filters.url:\n"
        },
        {
          "name": ".spell-dict",
          "type": "blob",
          "size": 1.7666015625,
          "content": "facelessuser\nmitya\nwaylan\nAbrahamsen\nAltmayer\nAPI\nArtem\naspell\nBabelmark\nbacktick\nbackticks\nBalogh\nBlockParser\nBlockprocessor\nBlockprocessors\nblockquote\nblockquotes\nboolean\nCamelCase\nChodarev\nchangelog\nchangelogs\nCLI\ncPython\nCodeHilite\ncodehilite\nCogumbreiro\nCommonMark\nconvertFile\nCSS\ncustomizable\ndedent\ndeliminators\nderegister\ndetabbed\nDmitry\ndocdata\nElementTree\nencodings\nextendMarkdown\nFauske\nformatter\nFortin\nGitHub\nglobals\nGruber\nGruber's\nGSoC\nhacky\nHeaderId\nHTTPS\nhtml\nimplementers\nInlineProcessor\nJiryu\nJSON\nkeepachangelog\nKjell\nKrech\nkwargs\nLimberg\nMacOS\nMagne\nMAILTO\nmakeExtension\nManfed\nmarkdownFromFile\nMaruku\nmd\nmerchantability\nmetadata\nMkDocs\nmkdocstrings\nmulti\nMultiMarkdown\nmunge\nnamespace\nNanoDOM\nNeale\nnosetests\nOrderedDict\nOrderedDicts\nOSX\nol\nPh\nPHP\nPosix\npostprocessor\npostprocessors\nprepend\nprepended\npreprocessor\npreprocessors\nPygments\nPyPI\nPyPy\nPYTHONPATH\nPyTidyLib\nPyYAML\nrc\nredistribution\nredistributions\nrefactor\nrefactored\nrefactors\nregisterExtension\nresettable\nricheland\nRSS\nrST\nryneeverett\nsanitizer\nsanitizers\nSauder\nschemeless\nsetuptools\nSergej\nserializer\nserializers\nsexualized\nShachnev\nsitemap\nslugify\nSmartyPants\nSourceforge\nStackOverflow\nStansifer\nstdout\nStelios\nStienstra\nsubclasses\nsubmodules\nSuperFences\nsvn\nSwartz\nSzakmeister\nTakhteyev\nTiago\ntoc\ntokenized\ntox\nTrac\ntraceback\nTredinnick\nTreeprocessor\nTreeprocessors\ntuple\ntuples\nunparsable\nunclosed\nunescape\nunescaping\nunittest\nunordered\nunsanitized\nuntrusted\nUTF\nuTidylib\nversa\nversioning\nWaylan\nwhitelist\nwhitespace\nWikiLink\nWikiLinks\nWolever\nworkflow\nXanthakis\nXHTML\nxhtml\nYAML\nYunusov\ninline\nwiki\nJavaScript\nplugin\nplugins\nconfigs\npre\nformatters\n\ndedented\nSetext\nunindented\nmonkeypatch\nTODO\nNko\nThaana\nTifinagh\nbackport\nFredrik\nLundh\nsubclass\ntortious\nperformantly\nSeemant\nKulleen\nSerafim\noverridable\nunescaped\nAPIs\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.353515625,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating\ndocumentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free\nexperience for everyone, regardless of level of experience, gender, gender\nidentity and expression, sexual orientation, disability, personal appearance,\nbody size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic\n  addresses, without explicit permission\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, project maintainers commit themselves to\nfairly and consistently applying these principles to every aspect of managing\nthis project. Project maintainers who do not follow or enforce the Code of\nConduct may be permanently removed from the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting a project maintainer at python.markdown@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. Maintainers are\nobligated to maintain confidentiality with regard to the reporter of an\nincident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.3.0, available at\n[https://www.contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: https://www.contributor-covenant.org/\n[version]: https://www.contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 0.2626953125,
          "content": "Installing Python-Markdown\n==========================\n\nAs an Admin/Root user on your system do:\n\n    pip install markdown\n\nOr for more specific instructions, view the documentation in `docs/install.md`\nor on the website at <https://Python-Markdown.github.io/install/>.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.611328125,
          "content": "BSD 3-Clause License\n\nCopyright 2007, 2008 The Python Markdown Project (v. 1.7 and later)  \nCopyright 2004, 2005, 2006 Yuri Takhteyev (v. 0.2-1.6b)  \nCopyright 2004 Manfred Stienstra (the original version)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.265625,
          "content": "recursive-include markdown *.py\nrecursive-include docs *\nrecursive-include tests *.txt *.html *.py\ninclude makefile\ninclude LICENSE.md\ninclude README.md\ninclude INSTALL.md\ninclude MANIFEST\ninclude *-requirements.txt\ninclude mkdocs.yml\ninclude tox.ini\ninclude scripts/*.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.5419921875,
          "content": "[Python-Markdown][]\n===================\n\n[![Build Status][build-button]][build]\n[![Coverage Status][codecov-button]][codecov]\n[![Latest Version][mdversion-button]][md-pypi]\n[![Python Versions][pyversion-button]][md-pypi]\n[![BSD License][bsdlicense-button]][bsdlicense]\n[![Code of Conduct][codeofconduct-button]][Code of Conduct]\n\n[build-button]: https://github.com/Python-Markdown/markdown/workflows/CI/badge.svg?event=push\n[build]: https://github.com/Python-Markdown/markdown/actions?query=workflow%3ACI+event%3Apush\n[codecov-button]: https://codecov.io/gh/Python-Markdown/markdown/branch/master/graph/badge.svg\n[codecov]: https://codecov.io/gh/Python-Markdown/markdown\n[mdversion-button]: https://img.shields.io/pypi/v/Markdown.svg\n[md-pypi]: https://pypi.org/project/Markdown/\n[pyversion-button]: https://img.shields.io/pypi/pyversions/Markdown.svg\n[bsdlicense-button]: https://img.shields.io/badge/license-BSD-yellow.svg\n[bsdlicense]: https://opensource.org/licenses/BSD-3-Clause\n[codeofconduct-button]: https://img.shields.io/badge/code%20of%20conduct-contributor%20covenant-green.svg?style=flat-square\n[Code of Conduct]: https://github.com/Python-Markdown/markdown/blob/master/CODE_OF_CONDUCT.md\n\nThis is a Python implementation of John Gruber's [Markdown][].\nIt is almost completely compliant with the reference implementation,\nthough there are a few known issues. See [Features][] for information\non what exactly is supported and what is not. Additional features are\nsupported by the [Available Extensions][].\n\n[Python-Markdown]: https://Python-Markdown.github.io/\n[Markdown]: https://daringfireball.net/projects/markdown/\n[Features]: https://Python-Markdown.github.io#Features\n[Available Extensions]: https://Python-Markdown.github.io/extensions\n\nDocumentation\n-------------\n\n```bash\npip install markdown\n```\n```python\nimport markdown\nhtml = markdown.markdown(your_text_string)\n```\n\nFor more advanced [installation] and [usage] documentation, see the `docs/` directory\nof the distribution or the project website at <https://Python-Markdown.github.io/>.\n\n[installation]: https://python-markdown.github.io/install/\n[usage]: https://python-markdown.github.io/reference/\n\nSee the change log at <https://python-markdown.github.io/changelog/>.\n\nSupport\n-------\n\nYou may report bugs, ask for help, and discuss various other issues on the [bug tracker][].\n\n[bug tracker]: https://github.com/Python-Markdown/markdown/issues\n\nCode of Conduct\n---------------\n\nEveryone interacting in the Python-Markdown project's code bases, issue trackers,\nand mailing lists is expected to follow the [Code of Conduct].\n"
        },
        {
          "name": "checklinks.sh",
          "type": "blob",
          "size": 0.6630859375,
          "content": "#!/bin/bash\n\necho \"Checking links in documentation...\"\n\n# List of files in docs dir\ndocs=$(find . -path './docs/*.md')\n# List of files in project root (README, etc)\nextras=$(find . -maxdepth 1 -name '*.md')\n# Combined list of files to check\nfiles=(\"${docs[@]}\" \"${extras[@]}\")\n\nlet \"fails=0\"\nlet \"count=0\"\n\nfor file in ${files[@]}; do\n    let \"count++\"\n    markdown-link-check -q \"$file\"\n    if [ $? -ne 0 ]; then\n        let \"fails++\"\n    fi\ndone\n\necho -e \"\\n\\033[0;33m$count files checked.\"\n\nif [ $fails -gt 0 ]; then\n    echo -e \"\\033[0;31mERROR: $fails files with dead links found!\"\n    exit 1\nelse\n    echo -e \"\\033[0;32mCongratulations! No dead links found.\"\n    exit 0\nfi\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 1.109375,
          "content": "# Python-Markdown makefile\n\n.PHONY : help\nhelp:\n\t@echo 'Usage: make <subcommand>'\n\t@echo ''\n\t@echo 'Subcommands:'\n\t@echo '    install       Install Python-Markdown locally'\n\t@echo '    deploy        Register and upload a new release to PyPI'\n\t@echo '    build         Build a source distribution'\n\t@echo '    docs          Build documentation'\n\t@echo '    test          Run all tests'\n\t@echo '    clean         Clean up the source directories'\n\n.PHONY : install\ninstall:\n\tpip install .\n\n.PHONY : deploy\ndeploy:\n\trm -rf build\n\trm -rf dist\n\tpython -m build\n\ttwine upload dist/*\n\n.PHONY : build\nbuild:\n\trm -rf build\n\trm -rf dist\n\tpython -m build\n\n.PHONY : docs\ndocs:\n\tmkdocs build --clean\n\n.PHONY : test\ntest:\n\tcoverage run --source=markdown -m unittest discover tests\n\tcoverage report --show-missing\n\n.PHONY : clean\nclean:\n\trm -f MANIFEST\n\trm -f test-output.html\n\trm -f *.pyc\n\trm -f markdown/*.pyc\n\trm -f markdown/extensions/*.pyc\n\trm -f *.bak\n\trm -f markdown/*.bak\n\trm -f markdown/extensions/*.bak\n\trm -f *.swp\n\trm -f markdown/*.swp\n\trm -f markdown/extensions/*.swp\n\trm -rf build\n\trm -rf dist\n\trm -rf tmp\n\trm -rf site\n\t# git clean -dfx'\n"
        },
        {
          "name": "markdown",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 3.564453125,
          "content": "site_name: Python-Markdown\nsite_url: https://Python-Markdown.github.io/\nrepo_url: https://github.com/Python-Markdown/markdown\nsite_author: \"The Python-Markdown Project\"\ncopyright: \"Copyright &copy; 2010-2023\"\n\nuse_directory_urls: true\nwatch: [markdown, scripts]\n\ntheme:\n  name: nature\n  icon: py.png\n  release: !!python/name:markdown.__version__\n  issue_tracker: https://github.com/Python-Markdown/markdown/issues\n\nextra_css:\n  - custom.css\n  - mkdocstrings.css\n\nnav:\n  - Python-Markdown: index.md\n  - Installation: install.md\n  - Library Reference: reference.md\n  - Command Line: cli.md\n  - Extensions: extensions/index.md\n  - Officially Supported Extensions:\n      - Abbreviations: extensions/abbreviations.md\n      - Admonition: extensions/admonition.md\n      - Attribute Lists: extensions/attr_list.md\n      - CodeHilite: extensions/code_hilite.md\n      - Definition Lists: extensions/definition_lists.md\n      - Extra: extensions/extra.md\n      - Fenced Code Blocks: extensions/fenced_code_blocks.md\n      - Footnotes: extensions/footnotes.md\n      - Legacy Attributes: extensions/legacy_attrs.md\n      - Legacy Emphasis: extensions/legacy_em.md\n      - Meta-Data: extensions/meta_data.md\n      - New Line to Break: extensions/nl2br.md\n      - Markdown in HTML: extensions/md_in_html.md\n      - Sane Lists: extensions/sane_lists.md\n      - SmartyPants: extensions/smarty.md\n      - Table of Contents: extensions/toc.md\n      - Tables: extensions/tables.md\n      - WikiLinks: extensions/wikilinks.md\n  - Extension API: extensions/api.md\n  - Test Tools: test_tools.md\n  - API Reference: reference/\n  - Contributing to Python-Markdown: contributing.md\n  - Changelog: changelog.md\n  - Authors: authors.md\n\nnot_in_nav: |\n  change_log/\n\nvalidation:\n  omitted_files: warn\n  absolute_links: warn\n  unrecognized_links: warn\n  anchors: warn\n\nmarkdown_extensions:\n  - extra\n  - admonition\n  - smarty\n  - codehilite\n  - toc:\n      permalink: true\n  - mdx_gh_links:\n      user: Python-Markdown\n      repo: markdown\n\nplugins:\n- search\n- gen-files:\n    scripts:\n    - scripts/gen_ref_nav.py\n- literate-nav:\n    nav_file: SUMMARY.md\n- section-index\n- mkdocstrings:\n    custom_templates: docs/templates\n    handlers:\n      python:\n        import:\n        - https://docs.python.org/3/objects.inv\n        options:\n          annotations_path: brief\n          docstring_options:\n            ignore_init_summary: true\n          docstring_style: google\n          docstring_section_style: list\n          extensions:\n          - scripts/griffe_extensions.py:DeprecatedExtension\n          - scripts/griffe_extensions.py:PriorityTableExtension:\n              paths:\n                - markdown.preprocessors.build_preprocessors\n                - markdown.blockprocessors.build_block_parser\n                - markdown.treeprocessors.build_treeprocessors\n                - markdown.inlinepatterns.build_inlinepatterns\n                - markdown.postprocessors.build_postprocessors\n          filters: [\"!^_\"]\n          group_by_category: false\n          heading_level: 1\n          inherited_members: true\n          members_order: source\n          merge_init_into_class: true\n          separate_signature: false\n          show_root_heading: true\n          show_object_full_path: true\n          show_signature_annotations: true\n          show_source: false\n          show_symbol_type_heading: true\n          show_symbol_type_toc: false\n          signature_crossrefs: false\n          summary: true\n          source:\n            repo: https://github.com/Python-Markdown/markdown\n            tag: !!python/name:markdown.__version__\n            title: \"View source code on GitHub.\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.6875,
          "content": "[build-system]\n# Minimum requirements for the build system to execute.\nrequires = [\"setuptools>=61.2\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = 'Markdown'\ndynamic = ['version']\ndescription = \"Python implementation of John Gruber's Markdown.\"\nreadme = {file = 'README.md', content-type='text/markdown'}\nauthors = [\n    {name = 'Manfred Stienstra'},\n    {name = 'Yuri Takhteyev'},\n    {name = 'Waylan limberg', email = 'python.markdown@gmail.com'}\n]\nmaintainers = [\n    {name = 'Waylan Limberg', email = 'python.markdown@gmail.com'},\n    {name = 'Isaac Muse'}\n]\nlicense = {file = 'LICENSE.md'}\nrequires-python = '>=3.8'\ndependencies = [\n    \"importlib-metadata>=4.4;python_version<'3.10'\"\n]\nkeywords = ['markdown', 'markdown-parser', 'python-markdown', 'markdown-to-html']\nclassifiers = [\n    'Development Status :: 5 - Production/Stable',\n    'License :: OSI Approved :: BSD License',\n    'Operating System :: OS Independent',\n    'Programming Language :: Python',\n    'Programming Language :: Python :: 3',\n    'Programming Language :: Python :: 3.8',\n    'Programming Language :: Python :: 3.9',\n    'Programming Language :: Python :: 3.10',\n    'Programming Language :: Python :: 3.11',\n    'Programming Language :: Python :: 3.12',\n    'Programming Language :: Python :: 3 :: Only',\n    'Programming Language :: Python :: Implementation :: CPython',\n    'Programming Language :: Python :: Implementation :: PyPy',\n    'Topic :: Communications :: Email :: Filters',\n    'Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries',\n    'Topic :: Internet :: WWW/HTTP :: Site Management',\n    'Topic :: Software Development :: Documentation',\n    'Topic :: Software Development :: Libraries :: Python Modules',\n    'Topic :: Text Processing :: Filters',\n    'Topic :: Text Processing :: Markup :: HTML',\n    'Topic :: Text Processing :: Markup :: Markdown'\n]\n\n[project.optional-dependencies]\ntesting = [\n    'coverage',\n    'pyyaml'\n]\ndocs = [\n    'mkdocs>=1.6',\n    'mkdocs-nature>=0.6',\n    'mdx_gh_links>=0.2',\n    \"mkdocstrings[python]\",\n    \"mkdocs-gen-files\",\n    \"mkdocs-section-index\",\n    \"mkdocs-literate-nav\",\n]\n\n[project.urls]\n'Homepage' = 'https://Python-Markdown.github.io/'\n'Documentation' = 'https://Python-Markdown.github.io/'\n'Repository' = 'https://github.com/Python-Markdown/markdown'\n'Issue Tracker' = 'https://github.com/Python-Markdown/markdown/issues'\n'Changelog' = 'https://python-markdown.github.io/changelog/'\n\n[project.scripts]\nmarkdown_py = 'markdown.__main__:run'\n\n[project.entry-points.'markdown.extensions']\nabbr = 'markdown.extensions.abbr:AbbrExtension'\nadmonition = 'markdown.extensions.admonition:AdmonitionExtension'\nattr_list = 'markdown.extensions.attr_list:AttrListExtension'\ncodehilite = 'markdown.extensions.codehilite:CodeHiliteExtension'\ndef_list = 'markdown.extensions.def_list:DefListExtension'\nextra = 'markdown.extensions.extra:ExtraExtension'\nfenced_code = 'markdown.extensions.fenced_code:FencedCodeExtension'\nfootnotes = 'markdown.extensions.footnotes:FootnoteExtension'\nmd_in_html = 'markdown.extensions.md_in_html:MarkdownInHtmlExtension'\nmeta = 'markdown.extensions.meta:MetaExtension'\nnl2br = 'markdown.extensions.nl2br:Nl2BrExtension'\nsane_lists = 'markdown.extensions.sane_lists:SaneListExtension'\nsmarty = 'markdown.extensions.smarty:SmartyExtension'\ntables = 'markdown.extensions.tables:TableExtension'\ntoc = 'markdown.extensions.toc:TocExtension'\nwikilinks = 'markdown.extensions.wikilinks:WikiLinkExtension'\nlegacy_attrs = 'markdown.extensions.legacy_attrs:LegacyAttrExtension'\nlegacy_em = 'markdown.extensions.legacy_em:LegacyEmExtension'\n\n[tool.setuptools]\npackages = ['markdown', 'markdown.extensions']\n\n[tool.setuptools.dynamic]\nversion = {attr = 'markdown.__meta__.__version__'}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.1064453125,
          "content": "[tox]\nenvlist = py{38, 39, 310, 311, 312}, pypy{38, 39, 310}, pygments, flake8, checkspelling, pep517check, checklinks\nisolated_build = True\n\n[testenv]\nextras = testing\ndeps = pytidylib\nallowlist_externals = coverage\ncommands =\n    coverage run --source=markdown -m unittest discover {toxinidir}/tests\n    coverage xml\n    coverage report --show-missing\n\n[testenv:pygments]\n# Run tests with pygments installed (override deps only).\nsetenv =\n    PYGMENTS_VERSION = 2.7.1\ndeps =\n    pytidylib\n    pygments=={env:PYGMENTS_VERSION}\n\n[testenv:flake8]\ndeps = flake8\nallowlist_externals = flake8\ncommands = flake8 {toxinidir}/markdown {toxinidir}/tests\nskip_install = true\n\n[testenv:checkspelling]\nextras = docs\ndeps = pyspelling\ncommands =\n    {envpython} -m mkdocs build --config-file {toxinidir}/mkdocs.yml\n    {envpython} -m pyspelling --config {toxinidir}/.pyspelling.yml\n\n[testenv:checklinks]\nextras = docs\ndeps =\ncommands = {envpython} -m mkdocs build --strict --config-file {toxinidir}/mkdocs.yml\n\n[testenv:pep517check]\ndeps = pep517\ncommands = python -m pep517.check {toxinidir}\nskip_install = true\n\n[flake8]\nmax-line-length = 119\n"
        }
      ]
    }
  ]
}