{
  "metadata": {
    "timestamp": 1736560030558,
    "page": 846,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "chrissimpkins/Crunch",
      "stars": 3363,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.083984375,
          "content": ".vscode\n.pytest_cache\n__pycache__\n*.pyc\n.tox\n.coverage\n\\.DS_Store\n*.dmg\n*-checksum.txt"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.7705078125,
          "content": "## Changelog\n\n### v5.0.0\n\n- Remove command line executable cPython 2 support\n- Fix GUI fails on recent versions of macOS (reported on macOS 12.3.1) (#92, fix #94)\n- Add Apple iconset application icons\n- Add icns application icon package and convert to use of this format for production Crunch application\n- Convert to use of https://github.com/sindresorhus/create-dmg for GUI macOS dmg installer prep\n- Add Makefile build-macos-icns target\n- Add Makefile build-macos-installer target\n- Add GitHub Actions CI testing\n- Remove Travis CI testing configuration file\n- Update GUI installation documentation\n- Remove dmg installer file from version control (will still be included in releases)\n- Remove dmg installer checksum file from version control (will still be included in releases)\n\n### v4.0.0\n\n- Updated pngquant to v2.12.5\n- Updated libpng to v1.6.37\n- Updated zopflipng to v2.2.0 (@chrissimpkins derivative) - upstream updates through https://github.com/google/zopfli/commit/5d9b71b3c636e9e14a8f7a3f983ff93a1a3793ac\n- crunch executable : added ANSI color support in stdout / stderr messages\n- crunch.py : PEP 8 source code formatting refactor with `black`\n- crunch.py : refactor logging setup approach\n- FIX Crunch macOS service : fixed bug in processing of png image file paths that include spaces (thanks Changyoung!)\n- FIX crunch executable: command line error handling when no arguments are passed to the command line `crunch` executable\n- Added Makefile dist target\n- Added Makefile benchmark target\n- Added Makefile clean target\n- Updated Makefile flake8 linting target\n- Updated dmg-builder.sh dmg installer script\n- Added new image-compare.py script for comparison of test image file sizes\n- Added new dssim-comparisons.sh script for DSSIM analysis of pre/post compression test images\n- Added new suite of reference PNG images and benchmarking support in `bench.py` script\n- Added continuous benchmarking through Travis CI\n\n### v3.0.1\n\n- modified the macOS GUI idle animation to reduce CPU usage during the application idle stage (issue report #66)\n\n### v3.0.0\n\n- improved quality of pngquant quantization of PNG images across all file sizes\n- upgraded embedded pngquant to v2.12.0 (includes reduced pngquant optimization times)\n- converted to custom build of zopflipng that is modified for use in the Crunch applications (forked from google/zopfli at git tag zopfli-1.0.2) at git version tag v2.1.0 (source repository is chrissimpkins/zopfli)\n- improved zopfli compression ratios for post-quantized and non-quantized in-file sizes under 350kB.  Many files are ~33% original file size after they are quantized with pngquant so this affects pre-optimization files up to just over ~1MB in size when the pngquant step is completed (the quantize step yields a modified image binary when it does not lead to larger file size or image quality below Crunch project thresholds, when this does not occur the original file at the original file size is used as the in-file to zopflipng)\n- improved zopfli compression speed for post-quantized and non-quantized in-file sizes over 750kB\n- eliminate optional PNG chunks by default in all files (reduces file size)\n- converted to use of PNG filter = 0 for zopflipng compression of all quantized files (increases compression speed)\n- use automated detection of best PNG filter for zopfli compression in all non-quantized files (improves compression)\n- remove hidden colors behind alpha channel 0 in files that are not quantized due to low quality or increased file size following pngquant runs\n- added new macOS GUI animations with success and fail indicators (thanks Gary Jacobs!)\n- added logging of compression data and errors in macOS GUI and macOS right-click menu service tools in a new log file that is generated on the path `~/.crunch/crunch.log`\n- updated redirect to /dev/null in install-dependencies.sh compile script for POSIX compliance\n- refactored command line option parsing code (thanks Chris Clauss!)\n- added new bug reporting template\n\n### v2.1.0\n\n- added automated detection of png image types through read of PNG file signatures\n- removed testing for *.png file extension to process files\n- added support for simple modification of pnquant and zopflipng paths that are used for optimization, convert to system PATH installed versions by modification of the Python script (issue #40)\n- bugfix for macOS GUI and right-click menu service failures with absolute file paths that contain multiple directory levels with space characters\n\n### v2.0.2\n\n- bugfix for failed image optimization with macOS GUI and right-click menu service tools when spaces are included in absolute file paths (issue report #30)\n\n### v2.0.1\n\n- bugfix for failed image optimization on pngquant execution that leads to file sizes below min acceptable (issue report #25)\n\n### v2.0.0\n\n- new `crunch` executable that supports parallel PNG image optimization on *nix platforms (including macOS, Linux, and POSIX compliant application environments on Windows such as Cygwin)\n- parallel image processing support added to the Crunch macOS GUI application\n- parallel image processing support added to the Crunch Image(s) macOS right-click menu service\n- updated embedded pngquant executable to v2.11.7 (January 2018) with statically compiled library dependencies\n- updated embedded zopflipng executable to git tag `zopfli-1.0.1`\n- convert Crunch macOS GUI files to binary (from XML text files) \n- new make target and shell script for pngquant dependency source compile support for *nix platforms\n- new make target and shell script for zopflipng dependency source compile support for *nix platforms\n- new make target for pngquant dependency uninstall\n- new make target for zopflipng depdendency uninstall\n- new make target for command line executable install\n- new make target for command line executable uninstall\n- new make target for Python script testing\n- new make target for shell script linting\n- fix for make target install of macOS right-click service over a previous install\n\n### v1.1.0\n\n- added a new macOS right click menu service for Crunch PNG image optimization named \"Crunch Image(s)\"\n- added Makefile with target support for macOS service installs and uninstalls\n- reformatted About menu text\n- added Upgrade documentation to the About menu\n- new source repository macOS service documentation, `docs/SERVICE.md`\n- repository documentation updates\n\n### v1.0.1\n\n- fix for pngquant library dependencies bug ([Issue report #7](https://github.com/chrissimpkins/Crunch/issues/7))\n\n### v1.0.0\n\n- swanky new UI design with conversion to WebView and animations\n- new application icon colors\n- modified nib file to fix window size\n\n### v0.10.0\n\n- updated zopflipng to commit https://github.com/google/zopfli/commit/64c6f362fefd56dccbf31906fdb3e31f6a6faf80\n- updated pngquant to commit https://github.com/kornelski/pngquant/commit/e50eb86a2f15f05da02fc4343a9d36ebb7d6d790\n\n### v0.9.0\n\n- initial release"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 37.1708984375,
          "content": "## Crunch License\n\nThe MIT License (MIT)\n\nCopyright (c) 2019 Christopher Simpkins\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n## pngquant License\n\n\npngquant and libimagequant are derived from code by Jef Poskanzer and Greg Roelofs\nlicensed under pngquant's original licenses (near the end of this file),\nand contain extensive changes and additions by Kornel Lesiński licensed under GPL v3.\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\npngquant © 2009-2015 by Kornel Lesiński.\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nThe quantization and dithering code in pngquant is lifted from Jef Poskanzer's\n'ppmquant', part of his wonderful PBMPLUS tool suite.\n\nGreg Roelofs hacked it into a (in his words) \"slightly cheesy\" 'pamquant' back\nin 1997 (see http://pobox.com/~newt/greg_rgba.html) and finally he ripped out\nthe cheesy file-I/O parts and replaced them with nice PNG code in December\n2000. The PNG reading and writing code is a merged and slightly simplified\nversion of readpng, readpng2, and writepng from his book \"PNG: The Definitive\nGuide.\"\nIn 2014 Greg has relicensed the code under the simplified BSD license.\n\nNote that both licenses are basically BSD-like; that is, use the code however\nyou like, as long as you acknowledge its origins.\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\npngquant.c:\n\n   © 1989, 1991 by Jef Poskanzer.\n\n   Permission to use, copy, modify, and distribute this software and its\n   documentation for any purpose and without fee is hereby granted, provided\n   that the above copyright notice appear in all copies and that both that\n   copyright notice and this permission notice appear in supporting\n   documentation.  This software is provided \"as is\" without express or\n   implied warranty.\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\npngquant.c and rwpng.c/h:\n\n   © 1997-2002 by Greg Roelofs; based on an idea by Stefan Schneider.\n\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without modification,\n   are permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n   FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n## zopflipng License\n\nCopyright 2013 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n// Author: lode.vandevenne@gmail.com (Lode Vandevenne)\n// Author: jyrki.alakuijala@gmail.com (Jyrki Alakuijala)\n\n// Library to recompress and optimize PNG images. Uses Zopfli as the compression\n// backend, chooses optimal PNG color model, and tries out several PNG filter\n// strategies.\n\n## Application Icon Image License\n\nThe application icon image is a slightly modified (color) version of the [\"Audacity Icon\" by Evin @xrilla](http://xillra.deviantart.com/art/Audacity-Icon-523082017) and is licensed under Creative Commons Attribution 3.0 license\n\n\n## Animated GIF Spinner Images License\n\nThe animated *.gif images used on the README.md page were provided by [loading.io](https://loading.io) under a CC0 / CC-By license."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.77734375,
          "content": "\nbenchmark:\n\tcd benchmarks && $(MAKE) $@\n\nbuild-dependencies:\n\tsrc/install-dependencies.sh\n\nbuild-macos-icns:\n\trm -rf img/CrunchIcon.iconset\n\tmkdir img/CrunchIcon.iconset\n\tsips -z 16 16     img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_16x16.png\n\tsips -z 32 32     img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_16x16@2x.png\n\tsips -z 32 32     img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_32x32.png\n\tsips -z 64 64     img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_32x32@2x.png\n\tsips -z 128 128   img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_128x128.png\n\tsips -z 256 256   img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_128x128@2x.png\n\tsips -z 256 256   img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_256x256.png\n\tsips -z 512 512   img/Crunch-icon-3.png --out img/CrunchIcon.iconset/icon_256x256@2x.png\n\tcd img && iconutil -c icns CrunchIcon.iconset\n\nbuild-macos-installer:\n\t# https://github.com/sindresorhus/create-dmg\n\t-rm bin/*.dmg\n\t-cd bin && create-dmg Crunch.app\n\t# create checksum file for the installer\n\tcd bin && mv Crunch*.dmg Crunch-Installer.dmg\n\tcd bin && shasum -a 256 Crunch-Installer.dmg > Crunch-Installer-checksum.txt\n\nclean:\n\trm benchmarks/img/*-crunch.png\n\ndist: \n\t./dmg-builder.sh\n\ndist-homebrew:\n\tcask-repair crunch\n\ninstall-executable:\n\tsudo cp src/crunch.py /usr/local/bin/crunch\n\t@echo \" \"\n\t@echo \"[*] crunch executable installed on path /usr/local/bin/crunch\"\n\t@echo \"[*] Usage: $ crunch [image path 1]...[image path n]\"\n\ninstall-macos-service:\n\t- sudo rm -rf ~/Library/Services/Crunch\\ Image\\(s\\).workflow\n\tsudo cp -R service/Crunch\\ Image\\(s\\).workflow ~/Library/Services/Crunch\\ Image\\(s\\).workflow\n\t@echo \" \"\n\t@echo \"[*] Crunch Image(s) macOS service installed on the path ~/Library/Services/Crunch\\ Image\\(s\\).workflow\"\n\t@echo \" \"\n\t@echo \"[*] You can use the Crunch service by right clicking on one or more PNG files, then select Services > Crunch Image(s)\"\n\nuninstall-dependencies:\n\tsudo rm -rf ~/pngquant\n\tsudo rm -rf ~/zopfli\n\t@echo \" \"\n\t@echo \"[*] Dependency removal complete.\"\n\nuninstall-executable:\n\tsudo rm /usr/local/bin/crunch\n\t@echo \" \"\n\t@echo \"[*] crunch executable uninstall complete.\"\n\nuninstall-macos-service:\n\tsudo rm -rf ~/Library/Services/Crunch\\ Image\\(s\\).workflow\n\t@echo \" \"\n\t@echo \"[*] The Crunch Image(s) macOS service was removed from your system\"\n\ntest-coverage:\n\t./coverage.sh\n\ntest-python:\n\ttox\n\tflake8 src/crunch.py\n\ntest-shell:\n\tshellcheck --exclude=2046 src/*.sh\n\ntest-valid-png-output:\n\tcrunch testfiles/*.png\n\tpngcheck testfiles/*-crunch.png\n\trm testfiles/*-crunch.png\n\ntest: test-python test-shell test-valid-png-output\n\n\n.PHONY: benchmark build-dependencies install-executable install-macos-service uninstall-executable uninstall-macos-service test test-coverage test-python test-shell test-valid-png-output dist"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.8974609375,
          "content": "<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/header-img-crunch.png\" alt=\"Crunch PNG file optimization\" width=\"250\"><img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/slowdots.gif\" alt=\"Crunch PNG file optimization\" width=\"100\">\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/header-arrow-crunch.png\" alt=\"Crunch PNG file optimization\">\n\n[![GitHub release](https://img.shields.io/github/release/chrissimpkins/Crunch.svg?style=flat-square)](https://github.com/chrissimpkins/Crunch/releases/latest)\n![Linux Python CI](https://github.com/chrissimpkins/Crunch/workflows/Linux%20CI/badge.svg)\n![macOS Python CI](https://github.com/chrissimpkins/Crunch/workflows/macOS%20CI/badge.svg)\n![Lints](https://github.com/chrissimpkins/Crunch/workflows/Lints/badge.svg)\n![Benchmarks](https://github.com/chrissimpkins/Crunch/workflows/Benchmarks/badge.svg)\n\n## About\n\nCrunch is a tool for lossy PNG image file optimization.  It combines selective bit depth, color type, and color palette reduction with zopfli DEFLATE compression algorithm encoding using the pngquant and zopflipng PNG optimization tools.  This approach leads to a significant file size gain relative to lossless approaches at the expense of a relatively modest decrease in image quality (see [example images](#examples) below).\n\n[Continuous benchmark testing](https://github.com/chrissimpkins/Crunch/actions/workflows/crunch-bench.yml) is available in our GitHub Actions CI. Please see the benchmarks directory of this repository for details about the benchmarking approach and instructions on how to execute benchmarks locally on the reference images distributed in this repository or with your own image files.\n\nCrunch PNG image optimization is available through the following applications that are distributed in this repository:\n\n- [`crunch`](docs/EXECUTABLE.md) - a *nix command line executable that can be used on macOS, Linux, and Windows POSIX application deployment environments such as Cygwin or the Windows subsystem for Linux\n- [Crunch GUI](docs/MACOSGUI.md) - a native macOS drag and drop GUI tool\n- [Crunch Image(s)](docs/SERVICE.md) service - a macOS right-click menu service for PNG images selected in the Finder\n\n## Installation and Usage\n\nInstallation and usage documentation links for each of the Crunch applications are available below.\n\n## `crunch` Command Line Executable\n\nThe `crunch` command line executable can be installed with `make` or manually.  Please see the [Install documentation](docs/EXECUTABLE.md#install).\n\nEnter paths to your PNG image files as arguments to the `crunch` executable.  Please see the [Usage documentation](docs/EXECUTABLE.md#usage).\n\n## Crunch macOS GUI Application\n\nThe Crunch native macOS GUI application can be installed with Homebrew or the dmg installer that can be downloaded from the [repository releases](https://github.com/chrissimpkins/Crunch/releases/latest).  Please see the [Install documentation](docs/MACOSGUI.md#install).\n\nDrag and drop one or more images on the application window to process your PNG files.  Please see the [Usage documentation](docs/MACOSGUI.md#usage).\n\n## Crunch Image(s) macOS Right-Click Menu Service\n\nThe macOS right-click menu service \"Crunch Image(s)\" can be installed with `make` or manually by drag and drop in the macOS Finder. Please see the [Install documentation](docs/SERVICE.md).\n\nSelect one or more PNG images in the Finder, right-click, and select the `Services > Crunch Image(s)` menu item to process your files.  Please see the [Usage documentation](docs/SERVICE.md).\n\n## Contents\n\n- [Examples](#examples)\n\t- [Photography Examples](#photography-examples)\n\t- [Illustration Examples](#illustration-examples)\n- [Issue Reporting](#issue-reporting)\n- [Licenses](#licenses)\n- [Contributing](#contributing)\n- [Acknowlegments](#acknowledgments)\n\n## Examples\n\nThe following examples demonstrate the benefits and disadvantages of the current iteration of Crunch's aggressive space saving optimization strategy.  The optimized image files are updated at every Crunch release.  In many cases, the PNG optimization decreases file size with an imperceptible impact on image quality.  In some cases, degradation of image quality is visible. Visual confirmation of image quality is highly recommended with lossy optimization tools in production settings.\n\n## Photography Examples\n\n### Cat Image\n\n- Original Size: 583,398 bytes\n- Optimized Size: 196,085 bytes\n- DSSIM similarity score: 0.001383\n- Percent original size: 33.61%\n\n##### Original\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/cat-1285634_640.png\" alt=\"cat example pre optimization\">\n\n##### Optimized\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/cat-1285634_640-crunch.png\" alt=\"cat example post optimization\">\n\n### Sun's Rays\n\n- Original Size: 138,272\n- Optimized Size: 66,593\n- DSSIM similarity score: 0.000920\n- Percent original size: 48.16%\n\n##### Original\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/suns-rays-478249_640.png\" alt=\"sun rays example pre optimization\">\n\n##### Optimized\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/suns-rays-478249_640-crunch.png\" alt=\"sun rays example pre optimization\">\n\n\n### Prairie Image\n\n- Original Size: 196,794 bytes\n- Optimized Size: 77,965 bytes\n- DSSIM similarity score: 0.002923\n- Percent original size: 39.62%\n\n##### Original\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/prairie-679014_640.png\" alt=\"prarie example pre optimization\">\n\n##### Optimized\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/prairie-679014_640-crunch.png\" alt=\"prarie example post optimization\">\n\n\n\n## Illustration Examples\n\n### Robot Image\n\n- Original Size: 197,193 bytes\n- Optimized Size: 67,596 bytes\n- DSSIM similarity score: 0.003047\n- Percent original size: 34.28%\n\n##### Original\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/robot-1214536_640.png\" alt=\"robot example pre optimization\">\n\n##### Optimized\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/robot-1214536_640-crunch.png\" alt=\"robot example post optimization\">\n\n### Color Circle Image\n\n- Original Size: 249,251 bytes\n- Optimized Size: 67,135 bytes\n- DSSIM similarity score: 0.002450\n- Percent original size: 26.93%\n\n##### Original\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/colors-157474_640.png\" alt=\"colors example pre optimization\">\n\n##### Optimized\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/colors-157474_640-crunch.png\" alt=\"colors example post optimization\">\n\n\n### Flowers Image\n\n- Original Size: 440,126 bytes\n- Optimized Size: 196,962 bytes\n- DSSIM similarity score: 0.001013\n- Percent original size: 44.75%\n\n##### Original\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/flowers-67839_640.png\" alt=\"748\">\n\n##### Optimized\n\n<img src=\"https://github.com/chrissimpkins/Crunch/raw/master/img/flowers-67839_640-crunch.png\" alt=\"748\">\n\nAll images above were obtained from [Pixabay](https://pixabay.com) and are dedicated to the public domain under the [CC0 Public Domain Dedication](https://creativecommons.org/publicdomain/zero/1.0/).\n\nDSSIM testing was performed with v2.10.0 of the [kornelski/dssim tool](https://github.com/kornelski/dssim).\n\n## Issue Reporting\n\nHave you identified a problem? Please [create a new issue report](https://github.com/chrissimpkins/Crunch/issues/new/choose) on the Github issue tracker so that we can address it.\n\n## Licenses\n\nCrunch is licensed under the [MIT license](https://github.com/chrissimpkins/Crunch/blob/master/LICENSE.md).\n\n### Embedded Software\n\npngquant is licensed under the [Gnu General Public License, version 3](https://github.com/pornel/pngquant/blob/master/COPYRIGHT).  The pngquant source code is available [here](https://github.com/pornel/pngquant).\n\nzopflipng is licensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0).  The upstream zopflipng source code is available [here](https://github.com/google/zopfli).  The source for the modified zopflipng fork that is used in this project is available [here](https://github.com/chrissimpkins/zopfli).\n\nSee the [LICENSE.md](LICENSE.md) document for details and additional licensing information for this project.\n\n## Contributing\n\nContributions to the project are warmly welcomed.  Please suggest enhancements as new issue reports on this repository.  Source contributors should fork the git repository and submit changes as a Github pull request.\n\n## Acknowledgments\n\nCrunch is a simple tool that makes excellent, free, open source software built by others more accessible. The hard work on the optimization engines that run Crunch has been performed by:\n\n- Lode Vandevenne, Jyrki Alakuijala, and the [zopfli project contributors](https://github.com/google/zopfli/graphs/contributors)\n- Kornel Lesiński and the [pngquant project contributors](https://github.com/kornelski/pngquant/graphs/contributors)\n\nThe fantastic macOS GUI animations were designed by [Gary Jacobs](https://github.com/garyjacobs).\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage.sh",
          "type": "blob",
          "size": 0.08203125,
          "content": "#!/bin/sh\n\ncoverage run --include=\"src/crunch.py\" -m py.test src\ncoverage report -m\n"
        },
        {
          "name": "dmg-builder.sh",
          "type": "blob",
          "size": 0.677734375,
          "content": "#!/bin/sh\n\n# This script uses the `create-dmg` script from https://github.com/andreyvit/create-dmg\n\ncreate-dmg \\\n--volname \"Crunch Installer\" \\\n--volicon \"/Users/chris/Library/Application Support/Platypus/PlatypusIcon-13299.icns\" \\\n--background \"img/dmg-installer-bg.png\" \\\n--window-pos 200 120 \\\n--window-size 800 400 \\\n--icon-size 100 \\\n--icon Crunch.app 200 190 \\\n--hide-extension Crunch.app \\\n--app-drop-link 600 185 \\\nCrunch-Installer.dmg \\\n/Users/chris/code/Crunch/bin\n\n# create checksum file for the installer\nmv Crunch-Installer.dmg installer/Crunch-Installer.dmg\ncd installer || exit 1\nshasum Crunch-Installer.dmg > Crunch-Installer-checksum.txt\nshasum -c Crunch-Installer-checksum.txt"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "html",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "profile",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.029296875,
          "content": "[flake8]\nmax-line-length = 90\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.087890625,
          "content": "[tox]\nskipsdist = True\nenvlist = py310\n\n[testenv]\ndeps = pytest\ncommands =\n    pytest src\n"
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}