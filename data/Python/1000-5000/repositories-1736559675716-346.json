{
  "metadata": {
    "timestamp": 1736559675716,
    "page": 346,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "midoks/mdserver-web",
      "stars": 4155,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3984375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\nlib/python*\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\nbin\npyvenv.cfg\ninclude\nshare\npip-selfcheck.json\n\n# mypy\n.mypy_cache/\n\n.DS_Store\n.idea/*.xml\n.idea/*.iml\ntmp/*\n*.swp\n*.pem\n*.zip\ndebug.out\nmdioks.session-journal\n*.session\n\ntemp\n\nlogs/panel.pid\nlogs/panel.log\nlogs/panel_task.log\nlogs/panel_exec.log\nlogs/panel_task.lock\n\nssl/local\nssl/nginx\nssl/choose.pl\n\nscripts/init.d/mw\nscripts/mdserver-web\n\ndata/api_login.txt\ndata/sessions\n\ndata/*.db\ndata/iplist.txt\ndata/json/index.json\ndata/json/config.json\ndata/site.pl\ndata/admin_path.pl\ndata/close.pl\ndata/datadir.pl\ndata/502Task.pl\ndata/default.pl\ndata/backup.pl\ndata/debug.pl\ndata/default_site.pl\ndata/ssl.pl\n\ndata/port.pl\ndata/ipv6.pl\ndata/restart.pl\ndata/edate.pl\ndata/osname.pl\ndata/only_netio_counters.pl\ndata/system.db-journal\ndata/hook_*.json\ndata/letsencrypt.json\ndata/basic_auth.json\ndata/notify.json\ndata/api.json\ndata/bind_domain.pl\ndata/unauthorized_status.pl\ndata/auth_secret.pl\ndata/panelSpeed.pl\n\nplugins/vip_*\nplugins/own_*\nplugins/my_*\nplugins/op_auth\nplugins/l2tp\nplugins/openlitespeed\nplugins/tamper_proof\nplugins/cryptocurrency_trade\nplugins/zimg\nplugins/bk_demo\nplugins/mail\nplugins/fastdfs\nplugins/v2ray\nplugins/frp\nplugins/file_search\nplugins/proxysql\nplugins/tidb\nplugins/goedge-admin\nplugins/goedge-node\nplugins/goedge-happy\nplugins/dztasks\n\n/logs\n/data\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0947265625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [midoks] [midoks of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2548828125,
          "content": "<p align=\"center\">\n  <img alt=\"logo\" src=\"https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/route/static/logo.png\" height=\"140\" />\n  <h3 align=\"center\">mdserver-web</h3>\n  <p align=\"center\">一款简单Linux面板服务</p>\n  <p align=\"center\">强烈推荐系统:debian</p>\n</p>\n\n### 简介\n\n简单的Linux面板,感谢BT.CN写出如此好的web管理软件。我一看到，就知道这是我一直想要的页面化管理方式。\n复制了后台管理界面，按照自己想要的方式写了一版。\n\n![EulerOS](https://img.shields.io/badge/LINUX-EulerOS-blue?style=for-the-badge&logo=EulerOS)\n![Debian](https://img.shields.io/badge/LINUX-Debian-blue?style=for-the-badge&logo=Debian)\n![Ubuntu](https://img.shields.io/badge/LINUX-Ubuntu-blue?style=for-the-badge&logo=Ubuntu)\n![Fedora](https://img.shields.io/badge/LINUX-Fedora-blue?style=for-the-badge&logo=Fedora)\n![CentOS](https://img.shields.io/badge/LINUX-CentOS-blue?style=for-the-badge&logo=CentOS)\n\n\n[![Wiki](https://img.shields.io/badge/MW-Wiki-red?style=for-the-badge&logo=wiki)](https://github.com/midoks/mdserver-web/wiki)\n[![jsdelivr](https://data.jsdelivr.com/v1/package/gh/midoks/mdserver-web/badge)](https://www.jsdelivr.com/package/gh/midoks/mdserver-web)\n\n* SSH终端工具\n* 面板收藏功能\n* 网站备份功能\n* 插件方式管理\n\n基本上可以使用,后续会继续优化!欢迎提供意见！\n\n- 吹水组 - https://t.me/mdserver_web\n- 交流论坛 - https://bbs.midoks.icu\n\n```\n如果出现问题，最好私给我面板信息。不要让我猜。如果不提供，不要提出问题，自行解决。  — 座右铭\nTalk is cheap, show me the code.  -- linus\n```\n\n- [兼容性测试报告](/compatibility.md)\n- [常用命令说明](/cmd.md) [ mw default ] [ mw update_dev ]\n\n### 特别赞助\n\n- [虚位以待](https://bbs.midoks.icu)\n\n### 主要插件介绍\n\n* OpenResty - 轻量级，占有内存少，并发能力强。\n* PHP[53-84] - PHP是世界上最好的编程语言。\n* MySQL - 一种关系数据库管理系统。\n* MariaDB - 是MySQL的一个重要分支。\n* MySQL[community] - 一种关系数据库管理系统。\n* MongoDB - 一种非关系NOSQL数据库管理系统。\n* PostgreSQL - 功能强大的开源数据库。\n* phpMyAdmin - 著名Web端MySQL管理工具。\n* Memcached - 一个高性能的分布式内存对象缓存系统。\n* Redis - 一个高性能的KV数据库。\n* PureFtpd - 一款专注于程序健壮和软件安全的免费FTP服务器软件。\n* Gogs - 一款极易搭建的自助Git服务。\n* Rsyncd - 通用同步服务。\n\n\n### 插件开发相关\n\n```\n插件文档还不完善，如果有不明白的地方提Issue! 我会尽力完善。\n如果你自己写了插件，想分享出来，也可以提Issue。\n```\n\n- 简单例子 - https://github.com/mw-plugin/simple-plugin \n- 插件地址 - https://github.com/mw-plugin\n- 开发文档 - https://github.com/midoks/mdserver-web/wiki/插件开发\n\n## 其他插件\n\n- OP鉴权 - https://github.com/mw-plugin/op_auth\n\n\n# Note\n\n```\nphpMyAdmin[4.4.15]支持MySQL[5.5-5.7]\nphpMyAdmin[5.2.1]支持MySQL[8.0+]\n\nPHP[53-72]支持phpMyAdmin[4.4.15]\nPHP[72-84]支持phpMyAdmin[5.2.1]\n```\n\n# 郑重声明\n\n不卖、不会监控(统计使用除外)、更不会注入病毒,大家使用方便(望大家不吝捐赠)。\n\n- https://www.youtube.com/watch?v=2taa5K-Jmmw\n\n\n# AD - VPS推荐 - 🙏\n\n| 服务商\t\t\t| \tLOGO   |  推广地址  | 优惠码 |\n| ------------- |----------|-----------|-------|\n| digitalvirt\t|[![digitalvirt](https://digitalvirt.com/templates/BlueWhite/img/logo-dark.svg)](https://digitalvirt.com/aff.php?aff=154) | https://digitalvirt.com/aff.php?aff=154 | mdserver-web |\n\n# Docker\n\n- 由[DDS-Derek](https://github.com/DDS-Derek)开发维护。\n- https://github.com/DDS-Derek/mdserver-web-Docker\n\n```\ndocker run -itd --name mw-server --privileged=true -p 7200:7200 -p 80:80 -p 443:443 -p 888:888 ddsderek/mw-server:latest\n```\n\n\n### 版本更新 0.18.0\n\n- 重新架构面板。\n- PHP84正式版。\n- 加入alist插件。\n- 数据管理-常用命令。\n- 插件读取优化(加入缓存+定时检查状态)。\n- 恢复面板书签。\n- 常规更新。\n\n### JSDelivr安装地址\n\n- 初始安装\n\n```\ncurl --insecure -fsSL https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/install.sh | bash\n```\n\n- 直接更新\n\n```\ncurl --insecure -fsSL https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/update.sh | bash\n```\n\n- 卸载脚本\n\n```\nwget --no-check-certificate -O uninstall.sh https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/uninstall.sh && bash uninstall.sh\n```\n\n### 备用地址\n\n- 初始安装\n\n```\ncurl --insecure -fsSL https://raw.githubusercontent.com/midoks/mdserver-web/master/scripts/install.sh | bash\ncurl --insecure -fsSL https://code.midoks.icu/midoks/mdserver-web/raw/branch/master/scripts/install.sh | bash\n```\n\n- 直接更新\n\n```\ncurl --insecure -fsSL https://raw.githubusercontent.com/midoks/mdserver-web/master/scripts/update.sh | bash\n```\n\n- 卸载脚本\n\n```\nwget --no-check-certificate -O uninstall.sh https://raw.githubusercontent.com/midoks/mdserver-web/master/scripts/uninstall.sh && bash uninstall.sh\n```\n\n\n### 通用软件安装[命令行安装]\n\n- 需已经安装mdserver-web\n\n```\ncurl --insecure -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/quick/app.sh | bash\n```\n\n\n### DEV使用\n\n```\ncurl --insecure -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/install_dev.sh | bash\ncurl --insecure -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/update_dev.sh | bash\n\nwget --no-check-certificate -O install.sh https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/install.sh && bash install.sh\n\nwget --no-check-certificate -O uninstall.sh https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/uninstall.sh && bash uninstall.sh\n\ncurl --insecure -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/quick/debug.sh | bash\n\ncurl --insecure -fsSL https://code.midoks.icu/midoks/mdserver-web/raw/branch/dev/scripts/install_dev.sh | bash\ncurl --insecure -fsSL https://code.midoks.icu/midoks/mdserver-web/raw/branch/dev/scripts/update_dev.sh | bash\n```\n\n### 旧版安装\n```\ncurl --insecure -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/old/install.sh | bash\ncurl --insecure -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/old/update.sh | bash\n```\n\n### 捐赠地址 USDT（TRC20）\n\nTVbNgrpeGBGZVm5gTLa21ADP7RpnPFhjya\n\n日行一善，以后必定大富大贵\n\n\n### 支付宝赞助\n\n[![截图](https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/route/static/img/alipay_zz.png)](https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/route/static/img/alipay_zz.png)\n\n\n### 无图不真相\n\n[![截图](https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/route/static/mdw.jpg)](https://cdn.jsdelivr.net/gh/midoks/mdserver-web@latest/route/static/mdw.jpg)\n\n\n### Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/midoks/mdserver-web.svg)](https://starchart.cc/midoks/mdserver-web)\n\n\n### 感谢开发赞助\n\n[![digitalvirt](https://digitalvirt.com/templates/BlueWhite/img/logo-dark.svg)](https://digitalvirt.com/aff.php?aff=154)\n\n### 授权许可\n\n本项目采用 Apache 开源授权许可证，完整的授权说明已放置在 [LICENSE](https://github.com/midoks/mdserver-web/blob/master/LICENSE) 文件中。\n\n"
        },
        {
          "name": "clear.sh",
          "type": "blob",
          "size": 0.2607421875,
          "content": "#!/bin/bash\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin:/usr/local/lib/python2.7/bin\n\n\n\nfind . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch\nfind . -name .DS_Store  | xargs rm -rf\nfind . -type d -name \"*.pyc\" | xargs rm -rf"
        },
        {
          "name": "cli.sh",
          "type": "blob",
          "size": 2.97265625,
          "content": "#!/bin/bash\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin:/opt/homebrew/bin\nDIR=$(cd \"$(dirname \"$0\")\"; pwd)\nMDIR=$(dirname \"$DIR\")\n\nexport LC_ALL=\"en_US.UTF-8\"\n\n# echo $DIR\n\nPATH=$PATH:$DIR/bin\nif [ -f ${DIR}/bin/activate ];then\n\tsource ${DIR}/bin/activate\n\n\tif [ \"$?\" != \"0\" ];then\n\t\techo \"load local python env fail!\"\n\tfi\nfi\n\nmw_start_task()\n{\n    isStart=$(ps aux |grep 'panel_task.py'|grep -v grep|awk '{print $2}')\n    if [ \"$isStart\" == '' ];then\n        echo -e \"starting mw-tasks... \\c\"\n        cd $DIR && python3 panel_task.py >> ${DIR}/logs/panel_task.log 2>&1 &\n        sleep 0.3\n        isStart=$(ps aux |grep 'panel_task.py'|grep -v grep|awk '{print $2}')\n        if [ \"$isStart\" == '' ];then\n            echo -e \"\\033[31mfailed\\033[0m\"\n            echo '------------------------------------------------------'\n            tail -n 20 $DIR/logs/panel_task.log\n            echo '------------------------------------------------------'\n            echo -e \"\\033[31mError: mw-tasks service startup failed.\\033[0m\"\n            return;\n        fi\n        echo -e \"\\033[32mdone\\033[0m\"\n    else\n        echo \"starting mw-tasks... mw-tasks (pid $(echo $isStart)) already running\"\n    fi\n}\n\nmw_start(){\n\t# 后台任务\n\tmw_start_task\n\t\n\tcd ${DIR}/web && gunicorn -c setting.py app:app\n}\n\n\nmw_start_debug(){\n\tif [ ! -f $DIR/logs/panel_task.log ];then\n\t\techo '' > $DIR/logs/panel_task.log\n\tfi\n\n\tpython3 panel_task.py >> $DIR/logs/panel_task.log 2>&1 &\n\tport=7200\n    if [ -f /www/server/mdserver-web/data/port.pl ];then\n        port=$(cat /www/server/mdserver-web/data/port.pl)\n    fi\n\n    if [ -f ${DIR}/data/port.pl ];then\n        port=$(cat ${DIR}/data/port.pl)\n    fi\n    cd ${DIR}/web && gunicorn -b :${port} -k eventlet -w 1 app:app\n\t# cd ${DIR}/web && gunicorn -b :${port} -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -w 1 app:app\n}\n\nmw_start_panel(){\n\tport=7200\n\tif [ -f ${DIR}/data/port.pl ];then\n        port=$(cat ${DIR}/data/port.pl)\n    fi\n\tcd ${DIR}/web && gunicorn -b :${port} -k eventlet -w 1  app:app\n\t# cd ${DIR}/web && gunicorn -b :${port} -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -w 1  app:app\n\t\n}\n\nmw_start_bgtask(){\n\tcd ${DIR}/web && gunicorn -c setting.py app:app\n\tcd ${DIR} && python3 panel_task.py\n}\n\n\nmw_stop()\n{\n\tAPP_LIST=`ps -ef|grep app:app |grep -v grep|awk '{print $2}'`\n\tAPP_LIST=($APP_LIST)\n\tfor p in ${APP_LIST[@]}\n\tdo\n\t    kill -9 $p > /dev/null 2>&1\n\tdone\n\n\tTASK_LIST=`ps -ef|grep panel_task.py | grep -v grep |awk '{print $2}'`\n\tTASK_LIST=($TASK_LIST)\n    for p in ${TASK_LIST[@]}\n    do\n    \tkill -9 $p > /dev/null 2>&1\n    done\n\n    zzpids=`ps -A -o stat,ppid,pid | grep -e '^[Zz]' | awk '{print $2}'`\n    zzpids=($zzpids)\n    for p in ${zzpids[@]}\n    do\n        kill -9 ${p} > /dev/null 2>&1\n    done\n}\n\ncase \"$1\" in\n    'start') mw_start;;\n    'stop') mw_stop;;\n    'restart') \n\t\tmw_stop \n\t\tmw_start\n\t\t;;\n\t'debug') \n\t\tmw_stop \n\t\tmw_start_debug\n\t\t;;\n\t'panel') \n\t\tmw_stop \n\t\tmw_start_panel\n\t\t;;\n\t'task') \n\t\t# mw_stop \n\t\tmw_start_bgtask\n\t\t;;\nesac"
        },
        {
          "name": "cmd.md",
          "type": "blob",
          "size": 1.10546875,
          "content": "### 常用命令说明\n\n\n- 面板相关命令\n\n```\nmw default\t| 显示登录信息\nmw db \t\t| 快捷连接MySQL\nmw redis \t| 快捷连接Redis\nmw valkey \t| 快捷连接valkey\nmw mongodb \t| 快捷连接MongoDB\nmw pgdb \t| 快捷连接PostgreSQL\n----------------------------------------\nmw open\t\t\t\t| 开启面板\nmw close\t\t\t| 关闭面板\n\nmw debug\t\t\t| 开发测试\nmw venv\t\t\t\t| 进入虚拟环境\nmw mirror\t\t\t| 切换镜像\nmw install_app\t\t\t| 快捷安装常用软件\nmw update \t\t\t| 更新到正式\nmw dev/update_dev\t\t| 更新到开发\n\nservice mw [start|stop|reload|restart|status]\n```\n\n- OpenResty\n\n```\n\nsystemctl [start|stop|reload|restart|status] openresty \n\n```\n\n- MySQL\n\n```\n\nsystemctl [start|stop|reload|restart|status] mysql \n\n```\n\n- MariaDB\n\n```\n\nsystemctl [start|stop|reload|restart|status] mariadb \n\n```\n\n- PHP\n\n```\n\nsystemctl [start|stop|reload|restart|status] php[54-81] \n\nsystemctl start php71\n```\n\n- Redis\n\n```\n\nsystemctl [start|stop|reload|restart|status] redis\n\n```\n\n- Memcached\n\n```\n\nsystemctl [start|stop|reload|restart|status] memcached\n\n```\n\n\n- sphinx\n\n```\n\nsystemctl [start|stop|reload|restart|status] sphinx\n\n```\n"
        },
        {
          "name": "compatibility.md",
          "type": "blob",
          "size": 3.4931640625,
          "content": "### 兼容性测试报告\n\n快速测试命令\n\n```\ncd /www/server/mdserver-web/scripts/quick && bash debug.sh\ncd /www/server/mdserver-web/plugins/php/versions && bash all_test.sh\n```\n\n\n| 系统名称 \t\t\t| \t面板 \t\t|\tOpenResty \t|\n| ----------------- |---------------|---------------|\n| CentOS 7.9 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| CentOS 8.4 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| CentOS 8 Stream \t|✅\t\t\t\t|✅\t\t\t\t|\n| CentOS 9 Stream \t|✅\t\t\t\t|✅\t\t\t\t|\n| Debian 10.3 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| Debian 11.3 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| Debian 12.0 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| Ubuntu 18.04 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| Ubuntu 20.04 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| Ubuntu 22.04 \t\t|✅\t\t\t\t|✅\t\t\t\t|\t\n| Fedora 31 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| Fedora 32 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| AlmaLinux 9 \t\t|✅\t\t\t\t|✅\t\t\t\t|\n| RockyLinux 8.6 \t|✅\t\t\t\t|✅\t\t\t\t|\n| Arch Linux　 \t \t|✅\t\t\t\t|✅\t\t\t\t|\n| openSUSE 15.4 \t|✅\t\t\t\t|✅\t\t\t\t|\n\n\n\n| 系统名称 \t\t\t|PHP53\t|PHP54\t|PHP55\t|PHP56\t|PHP70\t|PHP71\t|PHP72\t|PHP73\t|PHP74\t|PHP80\t|PHP81\t|PHP82\t|PHP83\t|PHP84\t|\n| ----------------- |-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|-------|\n| CentOS 7.9 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| CentOS 8.4 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| CentOS 8 Stream \t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| CentOS 9 Stream \t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Debian 10.3 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Debian 11.3 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Debian 12 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Ubuntu 18.04 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Ubuntu 20.04 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Ubuntu 22.04 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Fedora 31 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Fedora 32 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| AlmaLinux 9 \t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| RockyLinux 8.6 \t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| Arch Linux \t \t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n| openSUSE 15.4 \t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|✅\t\t|\n\n\n\n| 系统名称 \t\t\t| MySQL55|MySQL56|MySQL57|MySQL80|\n| ----------------- |-------|--------|-------|-------|\n| CentOS 7.9 \t\t|✅\t\t|✅\t\t |✅\t |✅\t |\n| CentOS 8.4 \t\t|✅\t\t|✅\t  \t |✅\t |✅\t |\t\n| CentOS 8 Stream \t|✅\t\t|✅\t  \t |✅\t |✅\t |\t\t\n| CentOS 9 Stream \t|✅\t\t|✅  \t |✅\t |✅\t |\n| Debian 10.3 \t\t|✅\t\t|✅\t  \t |✅\t |✅\t |\t\n| Debian 11.3 \t\t|✅\t\t|✅\t  \t |✅\t |✅\t |\n| Debian 12 \t\t|✅\t\t|✅\t  \t |✅\t |✅\t |\n| Ubuntu 18.04 \t\t|✅\t\t|✅\t  \t |✅\t |✅\t |\t\n| Ubuntu 20.04 \t\t|✅\t\t|✅\t  \t |✅\t |✅\t |\n| Ubuntu 22.04 \t\t|✅\t\t|✅\t   \t |✅\t |✅\t |\n| Fedora 31 \t\t|✅\t\t|✅\t   \t |✅\t |✅\t |\t\n| Fedora 32 \t\t|✅\t\t|✅\t   \t |✅\t |✅\t |\t\n| AlmaLinux 9 \t\t|✅\t\t|✅   \t |✅\t |✅\t |\t\n| RockyLinux 8.6 \t|✅\t\t|✅\t   \t |✅\t |✅\t |\n| Arch Linux \t \t|✅\t\t|✅\t   \t |✅\t |✅\t |\t\n| openSUSE 15.4 \t|✅\t\t|✅\t   \t |✅\t |✅\t |\n\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "panel_task.py",
          "type": "blob",
          "size": 11.16796875,
          "content": "# coding: utf-8\n\n# ---------------------------------------------------------------------------------\n# MW-Linux面板\n# ---------------------------------------------------------------------------------\n# copyright (c) 2018-∞(https://github.com/midoks/mdserver-web) All rights reserved.\n# ---------------------------------------------------------------------------------\n# Author: midoks <midoks@163.com>\n# ---------------------------------------------------------------------------------\n\n# ---------------------------------------------------------------------------------\n# 计划任务\n# ---------------------------------------------------------------------------------\n\nimport sys\nimport os\nimport json\nimport time\nimport threading\nimport psutil\n\n\nweb_dir = os.getcwd() + \"/web\"\nos.chdir(web_dir)\nsys.path.append(web_dir)\n\nimport core.mw as mw\nimport thisdb\n\nfrom admin import setup\nsetup.init()\n\ng_log_file = mw.getPanelTaskExecLog()\nif not os.path.exists(g_log_file):\n    os.system(\"touch \" + g_log_file)\n\ndef execShell(cmdstring, cwd=None, timeout=None, shell=True):\n    cmd = cmdstring + ' > ' + g_log_file + ' 2>&1'\n    return mw.execShell(cmd)\n\ndef writeLogs(data):\n    # 写输出日志\n    try:\n        fp = open(g_log_file, 'w+')\n        fp.write(data)\n        fp.close()\n    except:\n        pass\n\ndef downloadFile(url, filename):\n    # 下载文件\n    try:\n        import urllib\n        import socket\n        socket.setdefaulttimeout(300)\n\n        headers = ('User-Agent', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36')\n        opener = urllib.request.build_opener()\n        opener.addheaders = [headers]\n        urllib.request.install_opener(opener)\n\n        urllib.request.urlretrieve(url, filename=filename, reporthook=downloadHook)\n\n        if not mw.isAppleSystem():\n            os.system('chown www.www ' + filename)\n\n        writeLogs(filename + ' download success!')\n    except Exception as e:\n        writeLogs(str(e))\n    return True\n\ndef downloadHook(count, blockSize, totalSize):\n    # 下载文件进度回调\n    used = count * blockSize\n    pre = int((100.0 * used / totalSize))\n    speed = {'total': totalSize, 'used': used, 'pre': pre}\n    writeLogs(json.dumps(speed))\n\ndef runPanelTask():\n    # 站点过期检查\n    siteEdateCheck()\n\n    lock_file = mw.getTriggerTaskLockFile()\n    try:\n        if os.path.exists(lock_file):\n            bash_list = thisdb.getTaskList(status=-1)\n            for task in bash_list:\n                thisdb.setTaskStatus(task['id'], 0)\n\n            run_list = thisdb.getTaskList(status=0)\n            for run_task in run_list:\n                start = int(time.time())\n                thisdb.setTaskData(run_task['id'], start=start)\n                thisdb.setTaskStatus(run_task['id'], -1)\n\n                if run_task['type'] == 'download':\n                    argv = run_task['cmd'].split('|mw|')\n                    downloadFile(argv[0], argv[1])\n                elif run_task['type'] == 'execshell':\n                    execShell(run_task['cmd'])\n\n                end = int(time.time())\n                thisdb.setTaskData(run_task['id'], end=end)\n                thisdb.setTaskStatus(run_task['id'], 1)\n\n            if thisdb.getTaskUnexecutedCount() < 1:\n                os.remove(lock_file)\n    except Exception as e:\n        print('runPanelTask:',mw.getTracebackInfo())\n\n# 网站到期处理\ndef siteEdateCheck():\n    try:\n        from utils.site import sites as MwSites\n        website_edate = thisdb.getOption('website_edate', default='0000-00-00')\n        now_time_ymd = time.strftime('%Y-%m-%d', time.localtime())\n\n        if website_edate == now_time_ymd:\n            return False\n        site_list = thisdb.getSitesEdateList(now_time_ymd)\n        for site in site_list:\n            MwSites.instance().stop(site['id'])\n        thisdb.setOption('website_edate', now_time_ymd)\n    except Exception as e:\n        print('siteEdateCheck:',mw.getTracebackInfo())\n\n# 任务队列\ndef startPanelTask():\n    try:\n        while True:\n            runPanelTask()\n            time.sleep(5)\n    except Exception as e:\n        print('startPanelTask:',mw.getTracebackInfo())\n        time.sleep(30)\n        startPanelTask()\n\ndef systemTask():\n    # 系统监控任务\n    from  utils.system import monitor\n    try:\n        while True:\n            monitor_status = thisdb.getOption('monitor_status',type='monitor',default='open')\n            if monitor_status == 'open':\n                monitor.instance().run()\n            time.sleep(5)\n    except Exception as ex:\n        print('systemTask:',mw.getTracebackInfo())\n        time.sleep(30)\n        systemTask()\n\n\ndef panelPluginStatusCheck():\n    # 系统监控任务\n    from  utils.plugin import plugin\n    try:\n        while True:\n            # start_t = time.time()\n            plugin.instance().autoCachePluginStatus()\n            # end_t = time.time()\n            time.sleep(60)\n    except Exception as ex:\n        print('panelPluginStatusCheck:',mw.getTracebackInfo())\n        time.sleep(120)\n        panelPluginStatusCheck()\n\n# -------------------------------------- PHP监控 start --------------------------------------------- #\n# 502错误检查线程\ndef check502Task():\n    try:\n        check_file = mw.getPanelDir() + '/data/502Task.pl'\n        while True:\n            if os.path.exists(check_file):\n                check502()\n            time.sleep(10)\n    except:\n        time.sleep(30)\n        check502Task()\n\n\ndef check502():\n    try:\n        verlist = [\n            '52', '53', '54', '55', '56', '70',\n            '71', '72', '73', '74', '80', '81', \n            '82', '83', '84'\n        ]\n        for ver in verlist:\n            server_dir = mw.getServerDir()\n            php_path = server_dir + '/php/' + ver + '/sbin/php-fpm'\n            if not os.path.exists(php_path):\n                continue\n            if checkPHPVersion(ver):\n                continue\n            if startPHPVersion(ver):\n                print('检测到PHP-' + ver + '处理异常,已自动修复!')\n                mw.writeLog('PHP守护程序', '检测到PHP-' + ver + '处理异常,已自动修复!')\n\n    except Exception as e:\n        mw.writeLog('PHP守护程序', '自动修复异常:'+str(e))\n\n\n# 处理指定PHP版本\ndef startPHPVersion(version):\n    server_dir = mw.getServerDir()\n    try:\n        # system\n        phpService = mw.systemdCfgDir() + '/php' + version + '.service'\n        if os.path.exists(phpService):\n            mw.execShell(\"systemctl restart php\" + version)\n            if checkPHPVersion(version):\n                return True\n\n        # initd\n        fpm = server_dir + '/php/init.d/php' + version\n        php_path = server_dir + '/php/' + version + '/sbin/php-fpm'\n        if not os.path.exists(php_path):\n            if os.path.exists(fpm):\n                os.remove(fpm)\n            return False\n\n        if not os.path.exists(fpm):\n            return False\n\n        # 尝试重载服务\n        os.system(fpm + ' reload')\n        if checkPHPVersion(version):\n            return True\n        # 尝试重启服务\n        cgi = '/tmp/php-cgi-' + version + '.sock'\n        pid = server_dir + '/php/' + version + '/var/run/php-fpm.pid'\n        data = mw.execShell(\"ps -ef | grep php/\" + version +\" | grep -v grep|grep -v python |awk '{print $2}'\")\n        if data[0] != '':\n            os.system(\"ps -ef | grep php/\" + version + \" | grep -v grep|grep -v python |awk '{print $2}' | xargs kill \")\n        time.sleep(0.5)\n        if not os.path.exists(cgi):\n            os.system('rm -f ' + cgi)\n        if not os.path.exists(pid):\n            os.system('rm -f ' + pid)\n        os.system(fpm + ' start')\n        if checkPHPVersion(version):\n            return True\n\n        # 检查是否正确启动\n        if os.path.exists(cgi):\n            return True\n    except Exception as e:\n        print('startPHPVersion:',mw.getTracebackInfo())\n        mw.writeLog('PHP守护程序', '自动修复异常:'+str(e))\n        return True\n\n\ndef checkPHPVersion(version):\n    # 检查指定PHP版本\n    try:\n        sock = mw.getFpmAddress(version)\n        data = mw.requestFcgiPHP(sock, '/phpfpm_status_' + version + '?json')\n        result = str(data, encoding='utf-8')\n    except Exception as e:\n        result = 'Bad Gateway'\n    # 检查openresty\n    if result.find('Bad Gateway') != -1:\n        return False\n    if result.find('HTTP Error 404: Not Found') != -1:\n        return False\n\n    # 检查Web服务是否启动\n    if result.find('Connection refused') != -1:\n        return False\n    return True\n\n# -------------------------------------- PHP监控 end --------------------------------------------- #\n\n\n# --------------------------------------OpenResty Auto Restart Start --------------------------------------------- #\n# 解决acme.sh续签后,未起效。\ndef openrestyAutoRestart():\n    try:\n        while True:\n            # 检查是否安装\n            odir = mw.getServerDir() + '/openresty'\n            if not os.path.exists(odir):\n                time.sleep(86400)\n                continue\n            mw.opWeb('reload')\n            time.sleep(86400)\n    except Exception as e:\n        mw.writeLog('OpenResty检测', '自动修复异常:'+str(e))\n        time.sleep(86400)\n\n# --------------------------------------OpenResty Auto Restart End   --------------------------------------------- #\n\n# ------------------------------------  OpenResty Restart At Once Start ------------------------------------------ #\n\n\ndef openrestyRestartAtOnce():\n    restart_nginx_tip = mw.getPanelDir()+'/data/restart_nginx.pl'\n    while True:\n        if os.path.exists(restart_nginx_tip):\n            os.remove(restart_nginx_tip)\n            mw.opWeb('reload')\n        time.sleep(1)\n# -----------------------------------   OpenResty Restart At Once End   ------------------------------------------ #\n\n\n# --------------------------------------Panel Restart Start   --------------------------------------------- #\ndef restartPanelService():\n    restart_tip = mw.getPanelDir()+'/data/restart.pl'\n    while True:\n        if os.path.exists(restart_tip):\n            print(\"restart panel\")\n            os.remove(restart_tip)\n            mw.panelCmd('restart_panel')\n        time.sleep(1)\n# --------------------------------------Panel Restart End   --------------------------------------------- #\n\n\ndef setDaemon(t):\n    if sys.version_info.major == 3 and sys.version_info.minor >= 10:\n        t.daemon = True\n    else:\n        t.setDaemon(True)\n    return t\n\ndef run():\n    # 系统监控\n    sysTask = threading.Thread(target=systemTask)\n    sysTask = setDaemon(sysTask)\n    sysTask.start()\n\n    # PHP 502错误检查线程\n    php502 = threading.Thread(target=check502Task)\n    php502 = setDaemon(php502)\n    php502.start()\n\n    # OpenResty Restart At Once Start\n    oraos = threading.Thread(target=openrestyRestartAtOnce)\n    oraos = setDaemon(oraos)\n    oraos.start()\n\n    # OpenResty Auto Restart Start\n    oar = threading.Thread(target=openrestyAutoRestart)\n    oar = setDaemon(oar)\n    oar.start()\n\n    # Panel Plugin Status Check\n    pps = threading.Thread(target=panelPluginStatusCheck)\n    pps = setDaemon(pps)\n    pps.start()\n\n    # Panel Restart Start\n    rps = threading.Thread(target=restartPanelService)\n    rps = setDaemon(rps)\n    rps.start()\n\n    # 面板后台任务\n    startPanelTask()\n\nif __name__ == \"__main__\":\n    run()\n    \n"
        },
        {
          "name": "panel_tools.py",
          "type": "blob",
          "size": 13.025390625,
          "content": "# coding=utf-8\n\n# ---------------------------------------------------------------------------------\n# MW-Linux面板\n# ---------------------------------------------------------------------------------\n# copyright (c) 2018-∞(https://github.com/midoks/mdserver-web) All rights reserved.\n# ---------------------------------------------------------------------------------\n# Author: midoks <midoks@163.com>\n# ---------------------------------------------------------------------------------\n\n# ---------------------------------------------------------------------------------\n# 工具箱\n# ---------------------------------------------------------------------------------\n\n\nimport sys\nimport os\nimport json\nimport time\nimport re\n\nweb_dir = os.getcwd() + \"/web\"\nos.chdir(web_dir)\nsys.path.append(web_dir)\n\nfrom utils.firewall import Firewall as MwFirewall\nimport core.mw as mw\nimport thisdb\n\nINIT_DIR = \"/etc/rc.d/init.d\"\nif mw.isAppleSystem():\n    INIT_DIR = mw.getPanelDir() + \"/scripts/init.d\"\n\nINIT_CMD = INIT_DIR + \"/mw\"\n\n\ndef mw_input_cmd(msg):\n    if sys.version_info[0] == 2:\n        in_val = raw_input(msg)\n    else:\n        in_val = input(msg)\n    return in_val\n\ndef getRemainLen(cmd, max_length=100):\n    cmd_len = len(cmd)\n    cmd_u8_len = len(cmd.encode('utf-8'))\n    return max_length-int((cmd_u8_len - cmd_len)/2+cmd_len)\n\ndef mwcli(mw_input=0):\n    panel_dir = mw.getPanelDir()\n\n    raw_tip = \"========================================================================\"\n    if not mw_input:\n        print(\"========================mdserver-web cli tools==========================\")\n        cmd_list = [\n            '(1)    重启面板服务',\n            '(2)    停止面板服务',\n            '(3)    启动面板服务',\n            '(4)    重载面板服务',\n            '(5)    修改面板IP',\n            '(6)    修改面板端口',\n            '(7)    关闭安全入口',\n            '(10)   查看面板默认信息',\n            '(11)   修改面板密码',\n            '(12)   修改面板用户名',\n            '(13)   显示面板错误日志',\n            '(14)   关闭面板访问',\n            '(15)   开启面板访问',\n            '(20)   关闭BasicAuth认证',\n            '(21)   解除域名绑定',\n            '(22)   解除面板SSL绑定',\n            '(23)   开启IPV6支持',\n            '(24)   关闭IPV6支持',\n            '(25)   开启防火墙SSH端口',\n            '(26)   关闭二次验证',\n            '(27)   查看防火墙信息',\n            '(28)   自动识别防火墙端口到面板',\n            '(100)  开启PHP52显示',\n            '(101)  关闭PHP52显示',\n            '(200)  切换Linux系统软件源',\n            '(201)  简单速度测试',\n            '(0)    取消'\n        ]\n        cmd_list_num = len(cmd_list)\n        for index in range(cmd_list_num):\n            cmd = cmd_list[index]\n            if index % 2 == 0:\n                if index == (cmd_list_num-1):\n                    print(cmd)\n                else:\n                    print(cmd + \" \" * getRemainLen(cmd, 40), end=\"\")\n            if index % 2 == 1:\n                print(cmd)\n        print(raw_tip)\n        try:\n            mw_input = input(\"请输入命令编号：\")\n            if sys.version_info[0] == 3:\n                mw_input = int(mw_input)\n        except:\n            mw_input = 0\n\n    nums = [\n        1, 2, 3, 4, 5, 6, 7,\n        10, 11, 12, 13, 14, 15,\n        20, 21, 22, 23, 24, 25, 26, 27, 28,\n        100, 101, \n        200, 201\n    ]\n    if not mw_input in nums:\n        print(raw_tip)\n        print(\"已取消!\")\n        exit()\n\n    if mw_input == 1:\n        os.system(INIT_CMD + \" restart\")\n    elif mw_input == 2:\n        os.system(INIT_CMD + \" stop\")\n    elif mw_input == 3:\n        os.system(INIT_CMD + \" start\")\n    elif mw_input == 4:\n        os.system(INIT_CMD + \" reload\")\n    elif mw_input == 5:\n        in_ip = mw_input_cmd(\"请输入设置的面板IP：\")\n        in_ip = in_ip.strip()\n        ip_text = panel_dir + '/data/iplist.txt'\n        if not mw.isVaildIp(in_ip):\n            mw.echoInfo(\"【\"+in_ip+\"】: IP不合法\")\n            return\n        mw.writeFile(ip_text, in_ip)\n        thisdb.setOption('server_ip', in_ip)\n        mw.echoInfo(\"设置面板IP: \" + in_ip)\n    elif mw_input == 6:\n        in_port = mw_input_cmd(\"请输入新的面板端口：\")\n        in_port_int = int(in_port.strip())\n        if in_port_int < 65536 and in_port_int > 0:\n            MwFirewall.instance().addAcceptPort(in_port, 'WEB面板[TOOLS修改]', 'port')\n            panel_port = panel_dir + '/data/port.pl'\n            mw.writeFile(panel_port, in_port)\n            os.system(INIT_CMD + \" restart_panel\")\n            os.system(INIT_CMD + \" default\")\n        else:\n            mw.echoInfo(\"端口范围在0-65536之间\")\n        return\n    elif mw_input == 7:\n        thisdb.setOption('admin_path', '')\n        mw.echoInfo(\"关闭安全入口成功!\")\n    elif mw_input == 10:\n        os.system(INIT_CMD + \" default\")\n    elif mw_input == 11:\n        input_pwd = mw_input_cmd(\"请输入新的面板密码：\")\n        if len(input_pwd.strip()) < 5:\n            mw.echoInfo(\"错误，密码长度不能小于5位\")\n            return\n        set_panel_pwd(input_pwd.strip(), True)\n    elif mw_input == 12:\n        input_user = mw_input_cmd(\"请输入新的面板用户名(>=5位)：\")\n        set_panel_username(input_user.strip())\n    elif mw_input == 13:\n        os.system('tail -100 ' + panel_dir + '/logs/panel_error.log')\n    elif mw_input == 14:\n        admin_close = thisdb.getOption('admin_close')\n        if admin_close == 'no':\n            thisdb.setOption('admin_close', 'yes')\n            mw.echoInfo(\"关闭面板访问成功!\")\n        else:\n            mw.echoInfo(\"已关闭面板访问!\")\n    elif mw_input == 15:\n        admin_close = thisdb.getOption('admin_close')\n        if admin_close == 'yes':\n            thisdb.setOption('admin_close', 'no')\n            mw.echoInfo(\"开启面板访问成功!\")\n        else:\n            mw.echoInfo(\"已开启面板访问!\")\n    elif mw_input == 20:\n        basic_auth = thisdb.getOptionByJson('basic_auth', default={'open':False})\n        if basic_auth['open']:\n            basic_auth['open'] = False\n            thisdb.setOption('basic_auth', json.dumps(basic_auth))\n            os.system(INIT_CMD + \" restart\")\n            mw.echoInfo(\"关闭basic_auth成功\")\n    elif mw_input == 21:\n        panel_domain = thisdb.getOption('panel_domain', default='')\n        if panel_domain != '':\n            thisdb.setOption('panel_domain', '')\n            os.system(INIT_CMD + \" unbind_domain\")\n            mw.echoInfo(\"解除域名绑定成功\")\n        else:\n            mw.echoInfo(\"面板未绑定域名!\")\n    elif mw_input == 22:\n        panel_ssl = thisdb.getOptionByJson('panel_ssl', default={'open':False})\n        if panel_ssl['open']:\n            panel_ssl['open'] = False\n            thisdb.setOption('panel_ssl', json.dumps(panel_ssl))\n            os.system(INIT_CMD + \" unbind_ssl\")\n            mw.echoInfo(\"解除面板SSL绑定成功\")\n    elif mw_input == 23:\n        listen_ipv6 = panel_dir + '/data/ipv6.pl'\n        if not os.path.exists(listen_ipv6):\n            mw.writeFile(listen_ipv6, 'True')\n            os.system(INIT_CMD + \" restart\")\n            mw.echoInfo(\"开启IPv6支持了\")\n        else:\n            mw.echoInfo(\"已开启IPv6支持!\")\n    elif mw_input == 24:\n        listen_ipv6 = panel_dir + '/data/ipv6.pl'\n        if not os.path.exists(listen_ipv6):\n            mw.echoInfo(\"已关闭IPv6支持!\")\n        else:\n            os.remove(listen_ipv6)\n            os.system(INIT_CMD + \" restart\")\n            mw.echoInfo(\"关闭IPv6支持了\")\n    elif mw_input == 25:\n        open_ssh_port()\n        mw.echoInfo(\"已开启!\")\n    elif mw_input == 26:\n        two_step_verification = thisdb.getOptionByJson('two_step_verification', default={'open':False})\n        if two_step_verification['open']:\n            two_step_verification['open'] = False\n            thisdb.setOption('two_step_verification', json.dumps(two_step_verification))\n            mw.echoInfo(\"关闭二次验证成功!\")\n        else:\n            mw.echoInfo(\"二次验证已关闭!\")\n    elif mw_input == 27:\n        cmd = 'which ufw'\n        run_cmd = False\n        find_cmd =  mw.execShell(cmd)\n        if find_cmd[0].strip() != '':\n            run_cmd = True\n            os.system('ufw status')\n\n        cmd = 'which firewall-cmd'\n        find_cmd =  mw.execShell(cmd)\n        if find_cmd[0].strip() != '':\n            run_cmd = True\n            os.system('firewall-cmd --list-all')\n        if not run_cmd:\n            mw.echoInfo(\"未检测到防火墙!\")\n    elif mw_input == 28:\n        MwFirewall.instance().aIF()\n        mw.echoInfo(\"执行自动识别防火墙端口到面板成功!\")\n    elif mw_input == 100:\n        php_conf = panel_dir + '/plugins/php/info.json'\n        if os.path.exists(php_conf):\n            cont = mw.readFile(php_conf)\n            cont = re.sub(\"\\\"53\\\"\", \"\\\"52\\\",\\\"53\\\"\", cont)\n            cont = re.sub(\"\\\"5.3.29\\\"\", \"\\\"5.2.17\\\",\\\"5.3.29\\\"\", cont)\n            mw.writeFile(php_conf, cont)\n            mw.echoInfo(\"执行PHP52显示成功!\")\n    elif mw_input == 101:\n        php_conf = panel_dir + '/plugins/php/info.json'\n        if os.path.exists(php_conf):\n            cont = mw.readFile(php_conf)\n            cont = re.sub(\"\\\"52\\\",\", \"\", cont)\n            cont = re.sub(\"\\\"5.2.17\\\",\", cont)\n            mw.writeFile(php_conf, cont)\n            mw.echoInfo(\"执行PHP52隐藏成功!\")\n    elif mw_input == 200:\n        os.system(\"bash <(curl -sSL https://linuxmirrors.cn/main.sh)\")\n        # os.system(INIT_CMD + \" mirror\")\n    elif mw_input == 201:\n        os.system('curl -Lso- bench.sh | bash')\n\n\ndef open_ssh_port():\n    \n    find_ssh_port_cmd = \"cat /etc/ssh/sshd_config | grep '^Port \\\\d*' | tail -1\"\n    cmd_data = mw.execShell(find_ssh_port_cmd)\n    ssh_port = cmd_data[0].replace(\"Port \", '').strip()\n    if ssh_port == '':\n        ssh_port = '22'\n\n    mw.echoInfo(\"SSH端口: \"+ str(ssh_port))\n    MwFirewall.instance().addAcceptPort(ssh_port, 'SSH远程管理服务', 'port')\n    return True\n\n\ndef set_panel_pwd(password, ncli=False):\n    info = thisdb.getUserByRoot()\n    thisdb.setUserByRoot(password=password)\n    if ncli:\n        mw.echoInfo(\"username: \" + info['name'])\n        mw.echoInfo(\"password: \" + password)\n    else:\n        print(username)\n\n\ndef show_panel_pwd():\n    # 面板密码展示\n    info = thisdb.getUserByRoot()\n    defailt_pwd_file = mw.getPanelDir()+'/data/default.pl'\n    pwd = ''\n    if os.path.exists(defailt_pwd_file):\n        pwd = mw.readFile(defailt_pwd_file).strip()\n\n    if mw.md5(pwd) == info['password']:\n        mw.echoInfo('password: ' + pwd)\n        return\n    print(\"*-password has been changed!\")\n\ndef show_panel_adminpath():\n    admin_path = thisdb.getOption('admin_path')\n    if admin_path == '':\n        print('/login')\n    else:\n        print('/'+admin_path)\n\n\ndef set_panel_username(username=None):\n    # 随机面板用户名\n    if username:\n        if len(username) < 5:\n            mw.echoInfo(\"错误，用户名长度不能少于5位\")\n            return\n        if username in ['admin', 'root']:\n            mw.echoInfo(\"错误，不能使用过于简单的用户名\")\n            return\n\n        thisdb.setUserByRoot(name=username)\n        mw.echoInfo(\"username: %s\" % username)\n        return\n\n    info = thisdb.getUserByRoot()\n    if info['name'] == 'admin':\n        username = mw.getRandomString(8).lower()\n        thisdb.setUserByRoot(name=username)\n    mw.echoInfo('username: ' + info['name'])\n\n\ndef getServerIp():\n    version = sys.argv[2]\n    # ip = mw.execShell(\n    #     \"curl --insecure -{} -sS --connect-timeout 5 -m 60 https://v6r.ipip.net/?format=text\".format(version))\n    ip = mw.execShell(\n        \"curl --insecure -{} -sS --connect-timeout 5 -m 60 https://ip.cachecha.com/?format=text\".format(version))\n    # print(ip[0])\n    return ip[0]\n\n\ndef getPanelSslType():\n    scheme = 'http'\n    panel_ssl = thisdb.getOptionByJson('panel_ssl', default={'open':False})\n    if panel_ssl['open']:\n        scheme = 'https'\n    return scheme\n\ndef getPanelBindDomain():\n    return thisdb.getOption('panel_domain', default='')\n\n\ndef main():\n    if len(sys.argv) == 1:\n        print('ERROR: Parameter error!')\n        exit(-2)\n    method = sys.argv[1]\n    if method == 'panel':\n        set_panel_pwd(sys.argv[2])\n    elif method == 'username':\n        if len(sys.argv) > 2:\n            set_panel_username(sys.argv[2])\n        else:\n            set_panel_username()\n    elif method == 'password':\n        show_panel_pwd()\n    elif method == 'test':\n        thisdb.getOption('admin_path')\n    elif method == 'admin_path':\n        show_panel_adminpath()\n    elif method == 'getServerIp':\n        print(getServerIp())\n    elif method == 'panel_ssl_type':\n        print(getPanelSslType())\n    elif method == 'panel_bind_domain':\n        print(getPanelBindDomain())\n    elif method == \"cli\":\n        clinum = 0\n        try:\n            if len(sys.argv) > 2:\n                clinum = int(sys.argv[2]) if sys.argv[2][:6] else sys.argv[2]\n        except:\n            clinum = sys.argv[2]\n        mwcli(clinum)\n    else:\n        print('ERROR: Parameter error')\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.7529296875,
          "content": "setuptools>=33.1.1\nWerkzeug>=1.0.1\nwheel>=0.37.1\ngunicorn>=21.2.0\nrequests>=2.27.1\nurllib3>=1.21.1\nflask>=2.0.3\nflask-session==0.3.2\nflask-helper==0.19\nflask-bcrypt==1.0.1\nflask-caching>=1.10.1\ncache==1.0.3\ngevent>=22.10.2\ngevent-websocket==0.10.1\neventlet>=0.24.1\npsutil==5.9.1\nchardet==3.0.4\nSQLAlchemy>=1.4.54\nFlask-SQLAlchemy>=2.5.1\n#Flask-Migrate==4.*\n#Flask-Security-Too==5.5.*; python_version >= '3.10'\n#Flask-Security-Too==5.4.*; python_version <= '3.9'\npyOpenSSL==23.2.0\ncryptography>=40.0.2\nconfigparser==5.2.0\npython-engineio>=4.3.2\npython-socketio>=4.2.0\nflask-socketio>=5.2.0\nflask-sockets>=0.2.1\nzmq==0.0.0\nparamiko>=2.8.0\npymongo\npymemcache\nredis\npillow\nJinja2>=2.11.2\nPyMySQL>=1.0.2\nwhitenoise==5.3.0\npyotp\npytz\nsupervisor\npyTelegramBotAPI\ntelebot\npyyaml\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "ssl",
          "type": "tree",
          "content": null
        },
        {
          "name": "version",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}