{
  "metadata": {
    "timestamp": 1736559976621,
    "page": 765,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Breakthrough/PySceneDetect",
      "stars": 3466,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.884765625,
          "content": "docs/_build/\nwebsite/build/\ntests/resources/*\n*.mp4\n*.jpg\n*.jpeg\n*.patch\n*.exe\n*.mkv\n*.m4v\n*.csv\n\n\n# From https://raw.githubusercontent.com/github/gitignore/main/Python.gitignore\n\n__pycache__/\n*.py[cod]\n*$py.class\n*.so\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n*.manifest\n*.spec\npip-log.txt\npip-delete-this-directory.txt\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n*.mo\n*.pot\n.scrapy\ndocs/_build/\n.pybuilder/\ntarget/\n.ipynb_checkpoints\nprofile_default/\nipython_config.py\n.pdm.toml\n__pypackages__/\ncelerybeat-schedule\ncelerybeat.pid\n*.sage.py\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n.spyderproject\n.spyproject\n.ropeproject\n/site\n.mypy_cache/\n.dmypy.json\ndmypy.json\n.pyre/\n.pytype/\ncython_debug/\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.3427734375,
          "content": "cff-version: 1.2.0\ntitle: PySceneDetect\nmessage: www.scenedetect.com\ntype: software\nauthors:\n  - given-names: Brandon\n    family-names: Castellano\n    affiliation: www.bcastell.com\nrepository-code: 'https://github.com/Breakthrough/PySceneDetect'\nurl: 'https://www.scenedetect.com'\nabstract: Video Cut Detection and Analysis Tool\nlicense: BSD-3-Clause\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4697265625,
          "content": "BSD 3-Clause License\n\nCopyright (C) 2024, Brandon Castellano\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.263671875,
          "content": "recursive-exclude .github *\nrecursive-exclude dist *\nrecursive-exclude docs *\nrecursive-exclude website *\nexclude *\ninclude README.md\ninclude LICENSE\ninclude pyproject.toml\ninclude setup.cfg\ninclude scenedetect.cfg\ninclude dist/package-info.rst\nrecursive-include docs *\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6171875,
          "content": "\n![PySceneDetect](https://raw.githubusercontent.com/Breakthrough/PySceneDetect/main/website/pages/img/pyscenedetect_logo_small.png)\n==========================================================\nVideo Cut Detection and Analysis Tool\n----------------------------------------------------------\n\n[![Build Status](https://img.shields.io/github/actions/workflow/status/Breakthrough/PySceneDetect/build.yml)](https://github.com/Breakthrough/PySceneDetect/actions)\n[![PyPI Status](https://img.shields.io/pypi/status/scenedetect.svg)](https://pypi.python.org/pypi/scenedetect/)\n[![PyPI Version](https://img.shields.io/pypi/v/scenedetect?color=blue)](https://pypi.python.org/pypi/scenedetect/)\n[![PyPI License](https://img.shields.io/pypi/l/scenedetect.svg)](https://scenedetect.com/copyright/)\n\n----------------------------------------------------------\n\n### Latest Release: v0.6.5 (November 24, 2024)\n\n**Website**:  [scenedetect.com](https://www.scenedetect.com)\n\n**Quickstart Example**: [scenedetect.com/cli/](https://www.scenedetect.com/cli/)\n\n**Documentation**:  [scenedetect.com/docs/](https://www.scenedetect.com/docs/)\n\n**Discord**: https://discord.gg/H83HbJngk7\n\n----------------------------------------------------------\n\n**Quick Install**:\n\n    pip install scenedetect[opencv] --upgrade\n\nRequires ffmpeg/mkvmerge for video splitting support. Windows builds (MSI installer/portable ZIP) can be found on [the download page](https://scenedetect.com/download/).\n\n----------------------------------------------------------\n\n**Quick Start (Command Line)**:\n\nSplit input video on each fast cut using `ffmpeg`:\n\n    scenedetect -i video.mp4 split-video\n\nSave some frames from each cut:\n\n    scenedetect -i video.mp4 save-images\n\nSkip the first 10 seconds of the input video:\n\n    scenedetect -i video.mp4 time -s 10s\n\nMore examples can be found throughout [the documentation](https://www.scenedetect.com/docs/latest/cli.html).\n\n**Quick Start (Python API)**:\n\nTo get started, there is a high level function in the library that performs content-aware scene detection on a video (try it from a Python prompt):\n\n```python\nfrom scenedetect import detect, ContentDetector\nscene_list = detect('my_video.mp4', ContentDetector())\n```\n\n`scene_list` will now be a list containing the start/end times of all scenes found in the video.  There also exists a two-pass version `AdaptiveDetector` which handles fast camera movement better, and `ThresholdDetector` for handling fade out/fade in events.\n\nTry calling `print(scene_list)`, or iterating over each scene:\n\n```python\nfrom scenedetect import detect, ContentDetector\nscene_list = detect('my_video.mp4', ContentDetector())\nfor i, scene in enumerate(scene_list):\n    print('    Scene %2d: Start %s / Frame %d, End %s / Frame %d' % (\n        i+1,\n        scene[0].get_timecode(), scene[0].get_frames(),\n        scene[1].get_timecode(), scene[1].get_frames(),))\n```\n\nWe can also split the video into each scene if `ffmpeg` is installed (`mkvmerge` is also supported):\n\n```python\nfrom scenedetect import detect, ContentDetector, split_video_ffmpeg\nscene_list = detect('my_video.mp4', ContentDetector())\nsplit_video_ffmpeg('my_video.mp4', scene_list)\n```\n\nFor more advanced usage, the API is highly configurable, and can easily integrate with any pipeline. This includes using different detection algorithms, splitting the input video, and much more. The following example shows how to implement a function similar to the above, but using [the `scenedetect` API](https://www.scenedetect.com/docs/latest/api.html):\n\n```python\nfrom scenedetect import open_video, SceneManager, split_video_ffmpeg\nfrom scenedetect.detectors import ContentDetector\nfrom scenedetect.video_splitter import split_video_ffmpeg\n\ndef split_video_into_scenes(video_path, threshold=27.0):\n    # Open our video, create a scene manager, and add a detector.\n    video = open_video(video_path)\n    scene_manager = SceneManager()\n    scene_manager.add_detector(\n        ContentDetector(threshold=threshold))\n    scene_manager.detect_scenes(video, show_progress=True)\n    scene_list = scene_manager.get_scene_list()\n    split_video_ffmpeg(video_path, scene_list, show_progress=True)\n```\n\nSee [the documentation](https://www.scenedetect.com/docs/latest/api.html) for more examples.\n\n## Reference\n\n - [Documentation](https://www.scenedetect.com/docs/) (covers application and Python API)\n - [CLI Example](https://www.scenedetect.com/cli/)\n - [Config File](https://www.scenedetect.com/docs/0.6.4/cli/config_file.html)\n\n## Help & Contributing\n\nPlease submit any bugs/issues or feature requests to [the Issue Tracker](https://github.com/Breakthrough/PySceneDetect/issues). Before submission, ensure you search through existing issues (both open and closed) to avoid creating duplicate entries.\nPull requests are welcome and encouraged.  PySceneDetect is released under the BSD 3-Clause license, and submitted code should be compliant.\n\nFor help or other issues, you can join [the official PySceneDetect Discord Server](https://discord.gg/H83HbJngk7), submit an issue/bug report [here on Github](https://github.com/Breakthrough/PySceneDetect/issues), or contact me via [my website](http://www.bcastell.com/about/).\n\n## Code Signing\n\nThis program uses free code signing provided by [SignPath.io](https://signpath.io?utm_source=foundation&utm_medium=github&utm_campaign=PySceneDetect), and a free code signing certificate by the [SignPath Foundation](https://signpath.org?utm_source=foundation&utm_medium=github&utm_campaign=PySceneDetect)\n\n## License\n\nBSD-3-Clause; see [`LICENSE`](LICENSE) and [`THIRD-PARTY.md`](THIRD-PARTY.md) for details.\n\n----------------------------------------------------------\n\nCopyright (C) 2014-2024 Brandon Castellano.\nAll rights reserved.\n"
        },
        {
          "name": "THIRD-PARTY.md",
          "type": "blob",
          "size": 3.0498046875,
          "content": "# Ancillary Software Licenses\n\nThis file includes license information for various open-source projects\nthat are imported, derived into, or distributed with PySceneDetect.\nSee [LICENSE](LICENSE) for the main PySceneDetect license.\n\nDepending on the features being used, PySceneDetect uses the following\nthird-party software which are released under the terms detailed below.\nBy downloading, copying, installing or using this software, you agree\nto these terms.\n\nIn no particular order:\n\n-----------------------------------------------------------------------\n\n> click [Copyright (C) 2017, Armin Ronacher]:\n    This software uses OpenCV; see thirdparty/LICENSE-CLICK or visit:\n    [ http://click.pocoo.org/license/ ]\n\n> NumPy [Copyright (C) 2005-2016, Numpy Developers]:\n    This software uses Numpy; see thirdparty/LICENSE-NUMPY or visit:\n    [ http://www.numpy.org/license.html ]\n\n> OpenCV [Copyright (C) 2017, Itseez]:\n    This software uses OpenCV; see thirdparty/LICENSE-OPENCV or visit:\n    [ http://opencv.org/license.html ]\n\n> PyAV [Copyright (C) 2017, Mike Boers and others]:\n    This software uses PyAV; see thirdparty/LICENSE-PYAV or visit:\n    [ https://github.com/PyAV-Org/PyAV/blob/main/LICENSE.txt ]\n\n> pytest [Copyright (C) 2004-2017, Holger Krekel and others]:\n    This software uses pytest; see thirdparty/LICENSE-PYTEST or visit:\n    [ https://docs.pytest.org/en/latest/license.html ]\n\n> simpletable [Copyright (C) 2014-2019, Matheus Vieira Portela and others]:\n    This software uses simpletable; see thirdparty/LICENSE-SIMPLETABLE or visit:\n    [ https://github.com/matheusportela/simpletable/blob/master/LICENSE ]\n\n> tqdm [Copyright (C) 2013-2018, Casper da Costa-Luis,\n        Google Inc., and Noam Yorav-Raphael]:\n    This software uses tqdm; see thirdparty/LICENSE-TQDM or visit:\n    [ https://github.com/tqdm/tqdm/blob/master/LICENCE ]\n\n> MoviePy [ Copyright (C) 2015 Zulko ]\n    This software uses tqdm; see thirdparty/LICENSE-TQDM or visit:\n    [ https://github.com/Zulko/moviepy/blob/master/LICENCE.txt ]\n\n-----------------------------------------------------------------------\n\nThis software may also invoke FFmpeg or mkvmerge, if available. If required,\nthese programs can be obtained from following URLs:\n\n    FFmpeg:   [ https://ffmpeg.org/download.html ]\n    mkvmerge: [ https://mkvtoolnix.download/downloads.html ]\n\nOnce installed, ensure the program is in your PATH variable (i.e. you can\nrun the `ffmpeg` or `mkvmerge` command from any location).\n\nCertain distributions of PySceneDetect may include ffmpeg. See\nthirdparty/LICENSE-FFMPEG file or visit [ https://ffmpeg.org ]\n\nFFmpeg is a trademark of Fabrice Bellard\nmkvmerge is Copyright (C) 2005-2016, Matroska\n\nWindows distributions may include a compiled Python distribution. For license\ninformation regarding the distributed version of Python, see the\nthirdparty/LICENSE-PYTHON file, or visit [ https://docs.python.org/3/license.html ]\n\n-----------------------------------------------------------------------\n\nIf any information above is incorrect, please let us know.\nVisit [ https://www.scenedetect.com ] for contact information.\n\n\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 5.3515625,
          "content": "# Build signed releases for PySceneDetect Windows x64\n\nbuild: false\n\n# Branches applies to tags as well. We only build on tagged releases of the form vX.Y.Z-release\nbranches:\n  only:\n    - main\n    - /releases\\/.+/\n    - /v.+-release/\n\nskip_tags: false\nskip_non_tags: true\n\nenvironment:\n  matrix:\n    - PYTHON: \"C:\\\\Python313-x64\"\n  # Encrypted AdvancedInstaller License\n  ai_license_secret:\n    secure: of3o1pInqCJYwKLFsiadbsRYazCmCuZq7r2roaYvYXmBvm6e6JHsRU47waylTmhm\n  ai_license_salt:\n    secure: +NKWwlkEptlThgfeL35pLo7EsnkJc+4WODm8tTg1aO5fc0duQ4r100fHQYj6nzhyUdy3Dhs/mOLkxD8rNbBiEQ==\n\n# SignPath Config for Code Signing\ndeploy:\n- provider: Webhook\n  url: https://app.signpath.io/API/v1/f2efa44c-5b5c-45f2-b44f-8f9dde708313/Integrations/AppVeyor?ProjectSlug=PySceneDetect&SigningPolicySlug=release-signing\n  authorization:\n     secure: FBgWCaxCCKOqc2spYf5NGWSNUGLbT5WeuC5U0k4Of1Ids9n51YWxhGlMyzLbdNBFe64RUcOSzk/N3emlQzbsJg==\n  on:\n    APPVEYOR_REPO_TAG: true # keep casing this way for Linux builds where variables are case-sensitive\n\ninstall:\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  - echo * *                      SETTING UP PYTHON ENVIRONMENT                      * *\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  - 'SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%'\n  - python --version\n  - python -m pip install --upgrade pip build wheel virtualenv setuptools\n  - python -m pip install -r docs/requirements.txt\n  - python -m pip install --upgrade -r dist/requirements_windows.txt --no-binary imageio-ffmpeg\n  # Checkout build resources and third party software used for testing.\n  - git checkout refs/remotes/origin/resources -- dist/\n  - appveyor DownloadFile https://github.com/GyanD/codexffmpeg/releases/download/7.1/ffmpeg-7.1-full_build.7z\n  - 7z e ffmpeg-7.1-full_build.7z -odist/ffmpeg ffmpeg.exe LICENSE -r\n  - 'SET IMAGEIO_FFMPEG_EXE=%APPVEYOR_BUILD_FOLDER%\\\\dist\\\\ffmpeg\\\\ffmpeg.exe'\n\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  - echo * *                          BUILDING WINDOWS EXE                           * *\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  # Build Windows .EXE and create portable .ZIP\n  - python dist/pre_release.py --release\n  - pyinstaller dist/scenedetect.spec\n  - sphinx-build -b singlehtml docs dist/scenedetect/docs\n  - mkdir dist\\scenedetect\\thirdparty\n  - move LICENSE dist\\scenedetect\\\n  - move dist\\windows\\README* dist\\scenedetect\\\n  - move dist\\windows\\LICENSE* dist\\scenedetect\\thirdparty\\\n  - move scenedetect\\_thirdparty\\LICENSE* dist\\scenedetect\\thirdparty\\\n  - copy dist\\ffmpeg\\ffmpeg.exe dist\\scenedetect\\\n  - move dist\\ffmpeg\\LICENSE dist\\scenedetect\\thirdparty\\LICENSE-FFMPEG\n  - cd dist/scenedetect\n  - 7z a ../scenedetect-win64.zip *\n  - cd ../..\n\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  - echo * *                         BUILDING MSI INSTALLER                          * *\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  # Download, install, and register AdvancedInstaller\n  - cd dist/installer\n  - ps: iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))\n  - appveyor-tools\\secure-file -decrypt license65.dat.enc -secret %ai_license_secret% -salt %ai_license_salt%\n  - appveyor DownloadFile https://www.advancedinstaller.com/downloads/advinst.msi\n  - msiexec /i advinst.msi /qn\n  - 'SET PATH=%PATH%;C:\\\\Program Files (x86)\\\\Caphyon\\\\Advanced Installer 22.3\\\\bin\\\\x86'\n  # License path must be absolute\n  - AdvancedInstaller.com /RegisterOffline \"%cd%\\license65.dat\"\n  # Create MSI installer\n  - AdvancedInstaller.com /build PySceneDetect.aip\n  - cd ../..\n\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  - echo * *                        PACKAGING BUILD ARTIFACTS                        * *\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  # Zip all resources together for code signing\n  - cd dist\n  - move installer\\PySceneDetect-*.msi .\n  - cp scenedetect\\scenedetect.exe .\n  - 7z a scenedetect-signed.zip scenedetect.exe PySceneDetect-*.msi\n  - cd ..\n\ntest_script:\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  - echo * *                              TESTING BUILD                              * *\n  - echo * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n  # Checkout required test resources\n  - git fetch --depth=1 https://github.com/Breakthrough/PySceneDetect.git refs/heads/resources:refs/remotes/origin/resources\n  - git checkout refs/remotes/origin/resources -- tests/resources/\n  - move dist\\scenedetect\\ffmpeg.exe ffmpeg.exe\n  # Run unit tests\n  - pytest\n  # Test Windows build\n  - move ffmpeg.exe dist\\scenedetect\\ffmpeg.exe\n  - cd dist/scenedetect\n  - scenedetect.exe version\n  - scenedetect.exe -i ../../tests/resources/testvideo.mp4 -b opencv detect-content time -e 2s\n  - scenedetect.exe -i ../../tests/resources/testvideo.mp4 -b pyav detect-content time -e 2s\n\nartifacts:\n  # Portable ZIP\n  - path: dist/scenedetect-win64.zip\n    name: PySceneDetect-win64_portable\n  # MSI Installer + .EXE Bundle for Signing\n  - path: dist/scenedetect-signed.zip\n    name: PySceneDetect-win64_installer\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.1923828125,
          "content": "#\n#         PySceneDetect: Python-Based Video Scene Detector\n#   ---------------------------------------------------------------\n#     [  Site: http://www.bcastell.com/projects/PySceneDetect/   ]\n#     [  Github: https://github.com/Breakthrough/PySceneDetect/  ]\n#     [  Documentation: http://www.scenedetect.com/docs/         ]\n#\n# Copyright (C) 2014-2024 Brandon Castellano <http://www.bcastell.com>.\n#\n\n[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.ruff]\nexclude = [\n    \"docs\"\n]\nline-length = 100\nindent-width = 4\n\n[tool.ruff.format]\nquote-style = \"double\"\nindent-style = \"space\"\nskip-magic-trailing-comma = false\ndocstring-code-format = true\n\n[tool.ruff.lint]\nselect = [\n    # flake8-bugbear\n    \"B\",\n    # pycodestyle\n    \"E\",\n    # Pyflakes\n    \"F\",\n    # isort\n    \"I\",\n    # TODO - Add additional rule sets (https://docs.astral.sh/ruff/rules/):\n    # pyupgrade\n    #\"UP\",\n    # flake8-simplify\n    #\"SIM\",\n]\nignore = [\n    # TODO: Determine if we should use __all__, a reudndant alias, or keep this suppressed.\n    \"F401\",\n    # TODO: Line too long\n    \"E501\",\n    # TODO: Do not assign a `lambda` expression, use a `def`\n    \"E731\",\n]\nfixable = [\"ALL\"]\nunfixable = []\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.099609375,
          "content": "#\n# PySceneDetect Requirements\n#\nav>=9.2\nclick>=8.0\nnumpy\nopencv-python\nplatformdirs\npytest>=7.0\ntqdm\n"
        },
        {
          "name": "requirements_headless.txt",
          "type": "blob",
          "size": 0.1298828125,
          "content": "#\n# PySceneDetect Requirements for Headless Machines\n#\nav>=9.2\nclick>=8.0\nnumpy\nopencv-python-headless\nplatformdirs\npytest>=7.0\ntqdm\n"
        },
        {
          "name": "scenedetect.cfg",
          "type": "blob",
          "size": 10.0693359375,
          "content": "\n#\n# This file contains every possible PySceneDetect config option.\n#\n# A config file path can be specified via the -c/--config option, or by\n# creating a `scenedetect.cfg` file the following location:\n#\n#   Windows: C:/Users/%USERNAME%/AppData/Local/PySceneDetect/scenedetect.cfg\n#\n#   Linux:   ~/.config/PySceneDetect/scenedetect.cfg\n#            $XDG_CONFIG_HOME/scenedetect.cfg\n#\n#   Mac:     ~/Library/Preferences/PySceneDetect/scenedetect.cfg\n#\n# Run `scenedetect --help` to see the exact path on your system which will be\n# used (it will be listed under the help text for the -c/--config option).\n#\n\n\n#\n# GLOBAL OPTIONS\n#\n\n[global]\n\n# Default detector to use.\n# Must be one of: detect-adaptive, detect-content, detect-threshold, detect-hist\n#default-detector = detect-adaptive\n\n# Output directory for written files. Defaults to working directory.\n#output = /usr/tmp/scenedetect/\n\n# Verbosity of console output (debug, info, warning, error, or none).\n# Set to none for the same behavior as specifying -q/--quiet.\n#verbosity = debug\n\n# Crop input video to area. Specified as two points in the form X0 Y0 X1 Y1 or\n# as (X0 Y0), (X1 Y1). Coordinate (0, 0) is the top-left corner.\n#crop = 100 100 200 250\n\n# Video backend interface, must be one of: opencv, pyav, moviepy.\n#backend = opencv\n\n# Minimum length of a given scene.\n#min-scene-len = 0.6s\n\n# Merge last scene if it is shorter than min-scene-len (yes/no). This can occur\n# when a cut is detected just before the video ends.\n#merge-last-scene = no\n\n# Drop scenes shorter than min-scene-len instead of merging (yes/no).\n#drop-short-scenes = no\n\n# Downscale frame before processing. Set to 1 for no downscaling.\n# By default, downscale will be calculated automatically.\n#downscale = 1\n\n# Method to use for downscaling (nearest, linear, cubic, area, lanczos4).\n#downscale-method = linear\n\n# Amount of frames to skip between performing scene detection. Not recommended.\n#frame-skip = 0\n\n\n#\n# DETECTOR OPTIONS\n#\n\n[detect-adaptive]\n# Frame score threshold, refers to the `adaptive_ratio` metric in stats file.\n#threshold = 3\n\n# Minimum threshold that `content_val` metric from detect-content must exceed.\n#min-content-val = 15\n\n# Window size (number of frames) before and after each frame to average together.\n#frame-window = 2\n\n# Minimum length of a given scene (overrides [global] option).\n#min-scene-len = 0.6s\n\n# The following parameters are the those used to calculate `content_val`.\n# See [detect-content] for detailed descriptions of these parameters.\n#weights = 1.0, 1.0, 1.0, 0.0\n#luma-only = no\n#kernel-size = -1\n\n\n[detect-content]\n# Sensitivity threshold from 0 to 255. Lower values are more sensitive.\n#threshold = 27\n\n# Minimum length of a given scene (overrides [global] option).\n#min-scene-len = 0.6s\n\n# Mode to use when filtering scenes to comply with min-scene-len:\n#   merge: Consecutive scenes shorter than min-scene-len are combined.\n#   suppress: No new scenes can be generated until min-scene-len passes.\n#filter-mode = merge\n\n# Weight to place on each component when calculating frame score (the value\n# `threshold` is compared against). The components are in the order\n# (delta_hue, delta_sat, delta_lum, delta_edges). Description of components:\n#  - delta_hue:    Difference between hue values of adjacent frames\n#  - delta_sat:    Difference between saturation values of adjacent frames\n#  - delta_lum:    Difference between luma/brightness values of adjacent frames\n#  - delta_edges:  Difference between calculated edges of adjacent frames\n# The score of each frame ('content_val' in the statsfile) is calculated as\n# the weighted sum of all components.\n#weights = 1.0 1.0 1.0 0.0\n\n# Discard colour information and only use luminance (yes/no).\n# If yes, overrides weights with (0.0, 0.0, 1.0, 0.0).\n#luma-only = no\n\n# Size of kernel for expanding detected edges. Must be odd integer greater\n# than or equal to 3. If None, automatically set using video resolution.\n#kernel-size = -1\n\n# Mode to use for enforcing min-scene-len:\n#   merge: Consecutive scenes shorter than min-scene-len are combined.\n#   suppress: No new scenes can be generated until min-scene-len passes.\n#filter-mode = merge\n\n\n[detect-hash]\n# Threshold between 0.0 and 1.0 to set the relative difference between\n# hashes required to trigger a shot change. Lower values are more sensitive.\n#threshold = 0.395\n\n# The ratio between 1 and 256 of how much low frequency information to keep.\n# Represents highest frequency which will pass the filter. 1 means keep all,\n# 2 means keep lower 1/2 of frequency data, 4 means keep lower 1/4, etc...\n#lowpass = 2\n\n# Size between 1 and 256 representing size of square of low frequency data to\n# use for the direct cosine transform (DCT).\n#size = 16\n\n# Minimum length of a given scene (overrides [global] option).\n#min-scene-len = 0.6s\n\n\n[detect-hist]\n# Threshold between 0.0 to 1.0 to set the relative difference between Y\n# channel histograms (YUV) required to trigger a shot change. Lower values\n# are more sensitive.\n#threshold = 0.05\n\n# Number of bins between 1 and 256 to use for the histogram.\n#bins = 256\n\n# Minimum length of a given scene (overrides [global] option).\n#min-scene-len = 0.6s\n\n\n[detect-threshold]\n# Average pixel intensity from 0-255 at which a fade event is triggered.\n#threshold = 12\n\n# Percent from -100.0 to 100.0 of timecode skew for where cuts should be placed.\n# -100 indicates start frame, +100 indicates end frame, and 0 is the center.\n#fade-bias 0\n\n# Generate a scene from the end of the last fade out to the end of the video.\n#add-last-scene = yes\n\n# Discard colour information and only use luminance (yes/no).\n#luma-only = no\n\n# Minimum length of a given scene (overrides [global] option).\n#min-scene-len = 0.6s\n\n#\n# COMMAND OPTIONS\n#\n\n[split-video]\n# Folder to output videos. Overrides [global] output option.\n#output = /usr/tmp/encoded\n\n# Filename template to use as output.\n#filename = $VIDEO_NAME-Scene-$SCENE_NUMBER\n\n# Suppress output from split tool.\n#quiet = no\n\n# Use higher bitrate for better output quality (y/n), equivalent to setting\n# rate-factor = 17 and preset = slow.\n#high-quality = no\n\n# Use codec copying instead of encoding. Significantly faster, but can result\n# in inaccurate splits due to keyframe positioning.\n#copy = no\n\n# Use mkvmerge for copying instead of encoding. Has the same drawbacks as copy = yes.\n#mkvmerge = no\n\n# x264 rate-factor, higher indicates lower quality / smaller filesize.\n# 0 = lossless, 17 = visually identical, 22 = default.\n#rate-factor = 22\n\n# One of the ffmpeg x264 presets (e.g. veryfast, fast, medium, slow, slower).\n#preset = veryfast\n\n# Arguments to specify to ffmpeg for encoding. Quotes are not required.\n#args = -map 0:v:0 -map 0:a? -map 0:s? -c:v libx264 -preset veryfast -crf 22 -c:a aac\n\n\n[save-images]\n# Folder to output videos. Overrides [global] output option.\n#output = /usr/tmp/images\n\n# Filename format of created images. Can use $VIDEO_NAME, $SCENE_NUMBER, $IMAGE_NUMBER,\n# $TIMECODE, $FRAME_NUMBER, and $TIMESTAMP_MS. Should not include extension.\n#filename = $VIDEO_NAME-Scene-$SCENE_NUMBER-$IMAGE_NUMBER\n\n# Image format (jpeg, png, webp).\n#format = jpeg\n\n# Number of images to generate for each scene.\n#num-images = 3\n\n# Image quality (jpeg/webp). Default is 95 for jpeg, 100 for webp\n#quality = 95\n\n# Compression amount for png images (0 to 9). Only affects size, not quality.\n#compression = 3\n\n# Number of frames to ignore around each scene cut when selecting frames.\n#frame-margin = 1\n\n# Resize by scale factor (0.5 = half, 1.0 = same, 2.0 = double).\n#scale = 1.0\n\n# Resize to specified height, width, or both. Mutually exclusive with scale.\n#height = 0\n#width = 0\n\n# Method to use for scaling (nearest, linear, cubic, area, lanczos4).\n#scale-method = linear\n\n# Use separate threads for encoding and disk IO. Can improve performance.\n#threading = yes\n\n\n[export-html]\n# Filename format of created HTML file. Can use $VIDEO_NAME in the name.\n#filename = $VIDEO_NAME-Scenes.html\n\n# Automatically open resulting HTML when processing is complete.\n#show = no\n\n# Override <img> element width/height.\n#image-height = 0\n#image-width = 0\n\n# Do not generate <img> elements in resulting table (yes/no).\n#no-images = no\n\n\n[list-scenes]\n# By default, list-scenes will create a CSV file. Enable this option\n# to suppress creating the CSV file.\n#no-output-file = no\n\n# Folder to output scene list. Overrides [global] output option.\n#output = /usr/tmp/images\n\n# Filename format to use when saving scene list. $VIDEO_NAME can be used to\n# represent the name of the video being processed.\n#filename = $VIDEO_NAME-Scenes.csv\n\n# Display a table with the start/end boundaries for each scene (yes/no).\n#display-scenes = yes\n\n# Display list of cut points generated from scene boundaries (yes/no).\n#display-cuts = yes\n\n# Separator to use between columns in output file. Must be single (escaped)\n# ASCII character.\n#col-separator = ,\n\n# Separator to use between rows in output file. Must be (escaped) ASCII\n# characters.\n#row-separator = \\n\n\n# Format to use for list of cut points (frames, seconds, timecode).\n#cut-format = timecode\n\n# Skip writing cut points as the first row in the CSV file (yes/no).\n# Set for RFC 4180 compliance.\n#skip-cuts = no\n\n# Suppress all display output of list-scenes command.\n# Overrides `display-scenes` and `display-cuts`.\n#quiet = no\n\n\n[load-scenes]\n# Name of column used to mark scene cut points.\n#start-col-name = Start Frame\n\n\n[save-qp]\n\n# Filename format of QP file. Can use $VIDEO_NAME macro.\n#filename = $VIDEO_NAME.qp\n\n# Folder to output QP file to. Overrides [global] output option.\n#output = /usr/tmp/images\n\n# Disable shifting frame numbers by start time (yes/no).\n#disable-shift = no\n\n\n#\n# BACKEND OPTIONS\n#\n\n[backend-opencv]\n# Number of times to keep reading frames after one fails to decode.\n# If set to 0, processing will stop on the first decode failure.\n#max-decode-attempts = 5\n\n\n[backend-pyav]\n# Threading mode to use (none, slice, frame, auto). Slice mode is the\n# PyAV default, and auto/frame are the fastest.\n#threading-mode = auto\n\n# Suppress ffmpeg log output. Default is `no`.\n#\n# WARNING: When threading-mode is set to auto/frame, setting\n# `suppress-output = yes` can cause the the program to not exit properly\n# on Linux/OSX (press Ctrl+C to quit if this occurs).\n#suppress-output = no\n"
        },
        {
          "name": "scenedetect",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.9521484375,
          "content": "\n[metadata]\nname = scenedetect\nversion = attr: scenedetect.__version__\nlicense = BSD 3-Clause License\nauthor = Brandon Castellano\nauthor_email = brandon248@gmail.com\ndescription = Video scene cut/shot detection program and Python library.\nlong_description = file: dist/package-info.rst\nlong_description_content_type = text/x-rst\nurl = https://www.scenedetect.com\nproject_urls =\n    Homepage = https://www.scenedetect.com\n    Repository = https://github.com/Breakthrough/PySceneDetect/\n    Documentation = https://www.scenedetect.com/docs/\n    Bug Tracker = https://github.com/Breakthrough/PySceneDetect/issues/\nclassifiers =\n    Development Status :: 5 - Production/Stable\n    Environment :: Console\n    Environment :: Console :: Curses\n    Intended Audience :: Developers\n    Intended Audience :: End Users/Desktop\n    Intended Audience :: System Administrators\n    License :: OSI Approved :: MIT License\n    Operating System :: OS Independent\n    Programming Language :: Python :: 3\n    Programming Language :: Python :: 3.7\n    Programming Language :: Python :: 3.8\n    Programming Language :: Python :: 3.9\n    Programming Language :: Python :: 3.10\n    Programming Language :: Python :: 3.11\n    Programming Language :: Python :: 3.12\n    Programming Language :: Python :: 3.13\n    Topic :: Multimedia :: Video\n    Topic :: Multimedia :: Video :: Conversion\n    Topic :: Multimedia :: Video :: Non-Linear Editor\n    Topic :: Utilities\nkeywords = video computer-vision analysis\n\n[options]\ninstall_requires =\n    Click\n    numpy\n    platformdirs\n    tqdm\npackages =\n    scenedetect\n    scenedetect._cli\n    scenedetect._thirdparty\n    scenedetect.backends\n    scenedetect.detectors\npython_requires = >=3.7\n\n[options.extras_require]\nopencv = opencv-python\nopencv-headless = opencv-python-headless\npyav = av\nmoviepy = moviepy\n\n[options.entry_points]\nconsole_scripts =\n    scenedetect = scenedetect.__main__:main\n\n[aliases]\ntest = pytest\n\n[tool:pytest]\naddopts = --verbose\npython_files = tests/*.py\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.623046875,
          "content": "#!/usr/bin/env python\n#\n#         PySceneDetect: Python-Based Video Scene Detector\n#   ---------------------------------------------------------------\n#     [  Site: http://www.bcastell.com/projects/PySceneDetect/   ]\n#     [  Github: https://github.com/Breakthrough/PySceneDetect/  ]\n#     [  Documentation: http://www.scenedetect.com/docs/         ]\n#\n# Copyright (C) 2014-2024 Brandon Castellano <http://www.bcastell.com>.\n#\n\"\"\"PySceneDetect setup.py - DEPRECATED.\n\nBuild using `python -m build` and installing the resulting .whl using `pip`.\n\"\"\"\n\nimport setuptools\n\nif __name__ == \"__main__\":\n    setuptools.setup(name=\"scenedetect\")\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}