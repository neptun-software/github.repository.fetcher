{
  "metadata": {
    "timestamp": 1736559792089,
    "page": 516,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fastmonkeys/stellar",
      "stars": 3858,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "*.pyc\n*.egg-info\n.tox\ndist"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1083984375,
          "content": "language: python\npython:\n  - 2.7\n  - 3.3\n  - 3.4\n  - pypy\ninstall:\n  - pip install -q -e .\nscript:\n  - py.test\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0341796875,
          "content": "Copyright (c) 2014 Fast Monkeys Oy\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.11328125,
          "content": "recursive-include stellar *.md *.txt *.py\nrecursive-include tests *.md *.txt *.py\ninclude README.md\ninclude LICENSE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.380859375,
          "content": "Stellar - Fast database snapshot and restore tool for development.\n=======\n\n[![Build Status](https://travis-ci.org/fastmonkeys/stellar.svg?branch=master)](https://travis-ci.org/fastmonkeys/stellar)&nbsp;\n![](http://img.shields.io/pypi/dm/stellar.svg)&nbsp;\n![](http://img.shields.io/pypi/v/stellar.svg)\n\n\nStellar allows you to quickly restore database when you are e.g. writing database migrations, switching branches or messing with SQL. PostgreSQL and MySQL (partially) are supported.\n\n![Screenshot of Stellar terminal window](http://imgur.com/0fXXdcx.png)\n\n\nBenchmarks\n-------\nStellar is fast. It can restore a database ~140 times faster than using the usual\npg_dump & pg_restore.\n\n![Benchmarking database restore speed](http://imgur.com/Md1AHXa.png)\n\nHow it works\n-------\n\nStellar works by storing copies of the database in the RDBMS (named as stellar_xxx_master and stellar_xxxx_slave). When restoring the database, Stellar simply renames the database making it lot faster than the usual SQL dump. However, Stellar uses lots of storage space so you probably don't want to make too many snapshots or you will eventually run out of storage space.\n\n**Warning: Please don't use Stellar if you can't afford data loss.** It's great for developing but not meant for production.\n\nHow to get started\n-------\n\nYou can install Stellar with `pip`.\n\n```$ pip install stellar```\n\nAfter that, you should go to your project folder and initialize Stellar settings. Stellar initialization wizard will help you with that.\n\n```$ stellar init```\n\nStellar settings are saved as 'stellar.yaml' so you probably want to add that to your `.gitignore`.\n\n```$ echo stellar.yaml >> .gitignore```\n\nDone! :dancers:\n\n\nHow to take a snapshot\n-------\n\n```$ stellar snapshot SNAPSHOT_NAME```\n\nHow to restore from a snapshot\n-------\n\n```$ stellar restore SNAPSHOT_NAME```\n\nCommon issues\n-------\n\n````\nsqlalchemy.exc.OperationalError: (OperationalError) (1044, u\"Access denied for user 'my_db_username'@'localhost' to database 'stellar_data'\") \"CREATE DATABASE stellar_data CHARACTER SET = 'utf8'\" ()\n`````\n\nMake sure you have the rights to create new databases. See [Issue 10](https://github.com/fastmonkeys/stellar/issues/10) for discussion\n\nIf you are using PostgreSQL, make sure you have a database that is named the same as the unix username. You can test this by running just `psql`. (See [issue #44](https://github.com/fastmonkeys/stellar/issues/44) for details)\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.109375,
          "content": "PyYAML>=3.11\nSQLAlchemy>=0.9.6\nhumanize>=0.5.1\nschema>=0.3.1\npsutil>=2.1.1\nclick>=3.1\nSQLAlchemy-Utils>=0.26.13\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.689453125,
          "content": "# coding: utf-8\nimport os\nimport re\n\nfrom setuptools import setup, find_packages\n\n\n# https://bitbucket.org/zzzeek/alembic/raw/f38eaad4a80d7e3d893c3044162971971ae0\n# 09bf/setup.py\nwith open(\n    os.path.join(os.path.dirname(__file__), 'stellar', 'app.py')\n) as app_file:\n    VERSION = re.compile(\n        r\".*__version__ = '(.*?)'\", re.S\n    ).match(app_file.read()).group(1)\n\nwith open(\"README.md\") as readme:\n    long_description = readme.read()\n\nsetup(\n    name='stellar',\n    description=(\n        'stellar is a tool for creating and restoring database snapshots'\n    ),\n    long_description=long_description,\n    version=VERSION,\n    url='https://github.com/fastmonkeys/stellar',\n    license='BSD',\n    author=u'Teemu Kokkonen, Pekka PÃ¶yry',\n    author_email='teemu@fastmonkeys.com, pekka@fastmonkeys.com',\n    packages=find_packages('.', exclude=['examples*', 'test*']),\n    entry_points={\n        'console_scripts': [ 'stellar = stellar.command:main' ],\n    },\n    zip_safe=False,\n    include_package_data=True,\n    platforms='any',\n    classifiers=[\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: BSD License',\n        'Operating System :: POSIX',\n        'Operating System :: Microsoft :: Windows',\n        'Operating System :: MacOS :: MacOS X',\n        'Topic :: Utilities',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 3',\n        'Topic :: Database',\n        'Topic :: Software Development :: Version Control',\n    ],\n    install_requires = [\n        'PyYAML>=3.11',\n        'SQLAlchemy>=0.9.6',\n        'humanize>=0.5.1',\n        'schema>=0.3.1',\n        'click>=3.1',\n        'SQLAlchemy-Utils>=0.26.11',\n        'psutil>=2.1.1',\n    ]\n)\n"
        },
        {
          "name": "stellar",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.3466796875,
          "content": "# Tox (http://tox.testrun.org/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist = py27, py33, py34, pypy\n\n[testenv]\ndeps =\n    pytest\ncommands =\n    pip install -e .\n    py.test\n"
        }
      ]
    }
  ]
}