{
  "metadata": {
    "timestamp": 1736559995477,
    "page": 792,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rembo10/headphones",
      "stars": 3432,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6552734375,
          "content": "[Tt]est[Rr]esult*\n/cache\n/logs\n.project\n.pydevproject\n\n# coverage generated\n/cover-html/\n.coverage\n.coveralls.yml\n\n# Compiled source\n*.pyc\n*.py~\n*.pyproj\n*.sln\n\n# Headphones files\n*.log\n*.db*\n*.db-journal\n*.ini\nversion.lock\nlogs/*\ncache/*\n\n# HTTPS Cert/Key\n*.crt\n*.key\n*.csr\n\n# OS generated files\n.DS_Store?\n.DS_Store\nehthumbs.db\nIcon?\nThumbs.db\n\n# Ignore files generated by PyCharm\n.idea/*\n\n# Ignore files generated by vi\n*.swp\n\n# Ignore files build by Visual Studio\n*.obj\n*.exe\n*.pdb\n*.user\n*.aps\n*.pch\n*.vspscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.cache\n*.ilk\n*.log\n[Bb]in\n[Dd]ebug*/\n*.lib\n*.sbr\nobj/\n[Rr]elease*/\n_ReSharper*/\n.vscode\n\n# Python virtual env\nvenv"
        },
        {
          "name": ".pep8",
          "type": "blob",
          "size": 0.2734375,
          "content": "[pep8]\n# E126 continuation line over-indented for hanging indent\n# E127 continuation line over-indented for visual indent\n# E128 continuation line under-indented for visual indent\n# E501 line too long (312 > 160 characters)\nignore = E123,E126,E127,E128,E501\nmax-line-length = 160\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3505859375,
          "content": "# Travis CI configuration file\n# http://about.travis-ci.org/docs/\n\nlanguage: python\n\nsudo: false\n\ncache:\n  pip: true\n  directories:\n    - lib\n\npython:\n  - \"2.7\"\n\ninstall:\n  - pip install -r requirements-dev.txt\n\nscript:\n  - pep8 headphones\n  - pyflakes headphones\n  - nosetests\n\nafter_success:\n  - if [[ $TRAVIS_PYTHON_VERSION == \"2.7\" ]]; then coveralls; fi\n"
        },
        {
          "name": "API.md",
          "type": "blob",
          "size": 4.802734375,
          "content": "# API Reference\nThe API is still pretty new and needs some serious cleaning up on the backend but should be reasonably functional. There are no error codes yet.\n\n## General structure\nThe API endpoint is `http://ip:port + HTTP_ROOT + /api?apikey=$apikey&cmd=$command`\n\nData response in JSON formatted. If executing a command like \"delArtist\" or \"addArtist\" you'll get back an \"OK\", else, you'll get the data you requested.\n\n## API methods\n\n### getIndex\nFetch data from index page. Returns: ArtistName, ArtistSortName, ArtistID, Status, DateAdded, [LatestAlbum, ReleaseDate, AlbumID], HaveTracks, TotalTracks, IncludeExtras, LastUpdated, [ArtworkURL, ThumbURL]: a remote url to the artwork/thumbnail.\n\nTo get the cached image path, see getArtistArt command. ThumbURL is added/updated when an artist is added/updated. If your using the database method to get the artwork, it's more reliable to use the ThumbURL than the ArtworkURL)\n\n### getArtist&id=$artistid\nFetch artist data. returns the artist object (see above) and album info: Status, AlbumASIN, DateAdded, AlbumTitle, ArtistName, ReleaseDate, AlbumID, ArtistID, Type, ArtworkURL: hosted image path. For cached image, see getAlbumArt command)\n\n### getAlbum&id=$albumid\nFetch data from album page. Returns the album object, a description object and a tracks object. Tracks contain: AlbumASIN, AlbumTitle, TrackID, Format, TrackDuration (ms), ArtistName, TrackTitle, AlbumID, ArtistID, Location, TrackNumber, CleanName (stripped of punctuation /styling), BitRate)\n\n### getUpcoming\nReturns: Status, AlbumASIN, DateAdded, AlbumTitle, ArtistName, ReleaseDate, AlbumID, ArtistID, Type\n\n### getWanted\nReturns: Status, AlbumASIN, DateAdded, AlbumTitle, ArtistName, ReleaseDate, AlbumID, ArtistID, Type\n\n### getSimilar\nReturns similar artists  - with a higher \"Count\" being more likely to be similar. Returns: Count, ArtistName, ArtistID\n\n### getHistory\nReturns: Status, DateAdded, Title, URL (nzb), FolderName, AlbumID, Size (bytes)\n\n### getLogs\nNot working yet\n\n### findArtist&name=$artistname[&limit=$limit]\nPerform artist query on musicbrainz. Returns: url, score, name, uniquename (contains disambiguation info), id)\n\n### findAlbum&name=$albumname[&limit=$limit]\nPerform album query on musicbrainz. Returns: title, url (artist), id (artist), albumurl, albumid, score, uniquename (artist - with disambiguation)\n\n### addArtist&id=$artistid\nAdd an artist to the db by artistid)\n\n### addAlbum&id=$releaseid\nAdd an album to the db by album release id\n\n### delArtist&id=$artistid\nDelete artist from db by artistid)\n\n### pauseArtist&id=$artistid\nPause an artist in db)\n\n### resumeArtist&id=$artistid\nResume an artist in db)\n\n### refreshArtist&id=$artistid\nRefresh info for artist in db from musicbrainz\n\n### queueAlbum&id=$albumid[&new=True&lossless=True]\nMark an album as wanted and start the searcher. Optional paramters: 'new' looks for new versions, 'lossless' looks only for lossless versions\n\n### unqueueAlbum&id=$albumid\nUnmark album as wanted / i.e. mark as skipped\n\n### forceSearch\nforce search for wanted albums - not launched in a separate thread so it may take a bit to complete\n### forceProcess[&dir=/path/to/folder]\nForce post process albums in download directory - also not launched in a separate thread\n### forceActiveArtistsUpdate\nforce Active Artist Update - also not launched in a separate thread\n\n### getVersion\nReturns some version information: git_path, install_type, current_version, installed_version, commits_behind\n\n### checkGithub\nUpdates the version information above and returns getVersion data\n\n### shutdown\nShut down headphones\n\n### restart\nRestart headphones\n\n### update\nUpdate headphones - you may want to check the install type in get version and not allow this if type==exe\n\n### getArtistArt&id=$artistid\nReturns either a relative path to the cached image, or a remote url if the image can't be saved to the cache dir\n\ngetAlbumArt&id=$albumid\nsee above\n\n### getArtistInfo&id=$artistid\nReturns Summary and Content, both formatted in html.\n\n### getAlbumInfo&id=$albumid\nSee above, returns Summary and Content.\n\n### getArtistThumb&id=$artistid\nReturns either a relative path to the cached thumbnail artist image, or an http:// address if the cache dir can't be written to.\n\n### getAlbumThumb&id=$albumid\nSee above.\n\n### choose_specific_download&id=$albumid\nGives you a list of results from searcher.searchforalbum(). Basically runs a normal search, but rather than sorting them and downloading the best result, it dumps the data, which you can then pass on to download_specific_release(). Returns a list of dictionaries with params: title, size, url, provider & kind - all of these values must be passed back to download_specific_release\n\n### download_specific_release&id=albumid&title=$title&size=$size&url=$url&provider=$provider&kind=$kind\nAllows you to manually pass a choose_specific_download release back to searcher.send_to_downloader()\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.2587890625,
          "content": "# Changelog\n\n## v0.6.3\n Released 26 May 2024\n\nHighlights:\n* Hotfix for searcher not returning results\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.6.2...v0.6.3).\n\n## v0.6.2\n Released 26 May 2024\n\nHighlights:\n* Added soulseek support\n* Added bandcamp support\n* Changes and dependency updates to work with Python >= 3.12\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.6.1...v0.6.2).\n\n## v0.6.1\nR eleased 26 November 2023\n\nHighlights:\n* Dependency updates to work with > Python 3.11\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.6.0...v0.6.1).\n\n## v0.6.0\nReleased 13 November 2022\n\nHighlights:\n* Updated to python 3\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.20...v0.6.0).\n\n## v0.5.20\nReleased 15 October 2021\n\nHighlights:\n* Improved: Last.fm & metacrtic api fixes\n* Improved: Various database fixes\n* Added: qBitTorrent\n* Added: Telegram notifications\n* Improved: Many more since the last release. Check the list\n\nMany thanks to @AdeHub for keeping the ship afloat\nand to everyone else who contributed.\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.19...v0.5.20).\n\n## v0.5.19\nReleased 27 March 2018\n\nHighlights:\n* Improved: Windows encoding fixes\n* Improved: Performance enhancements\n* Improved: Many more since the last release. Check the list\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.18...v0.5.19).\n\n## v0.5.18\nReleased 01 December 2016\n\nHighlights:\n* Added: PassTheHeadphones support\n* Fixed: Special characters in password fields breaking on config page\n* Improved: Updated t411 url\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.17...v0.5.18).\n\n\n## v0.5.17\nReleased 10 November 2016\n\nHighlights:\n* Added: t411 support\n* Fixed: Rutracker login\n* Fixed: Deluge empty password\n* Fixed: FreeBSD init script\n* Improved: Musicbrainz searching\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.16...v0.5.17).\n\n## v0.5.16\nReleased 10 June 2016\n\nHotfix update\n\nHighlights:\n* Fixed: Waffles url\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.15...v0.5.16).\n\n## v0.5.15\nReleased 07 June 2016\n\nHotfix update\n\nHighlights:\n* Fixed: Update vip mirror url to point to new server\n* Fixed: Update waffles url to .ch\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.14...v0.5.15).\n\n## v0.5.14\nReleased 02 June 2016\n\nHighlights:\n* Fixed: File/folder format on new installs\n* Fixed: Pep8 errors\n* Improved: Updated fontawesome\n* Improved: Reverted back to less\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.13...v0.5.14).\n\n## v0.5.13\nReleased 25 February 2016\n\nAnother hotfix update\n\nHighlights:\n* Fixed: Saving config with non-defined options\n* Fixed: Pep8 errors\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.12...v0.5.13).\n\n## v0.5.12\nReleased 25 February 2016\n\nThis is mostly a hotfix update\n\nHighlights:\n* Added: Experimental Deluge Support\n* Fixed: Some pep8 stuff\n* Improved: Use curly braces for pathrender optional variables\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.11...v0.5.12).\n\n## v0.5.11\nReleased 20 February 2016\n\nHighlights:\n* Added: Soft chroot option\n* Fixed: Post processing temporary directory fix (#2504)\n* Fixed: Ubuntu init script (#2509)\n* Fixed: Image cache uncaught exception (#2485)\n* Improved: $Date/$date variable in folder renaming\n* Improved: Reuse transmission session id\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.10...v0.5.11).\n\n## v0.5.10\nReleased 29 January 2016\n\nHighlights:\n* Added: API option to post-process single folders\n* Added: Ability to specify extension when re-encoding\n* Added: Option to stop renaming folders\n* Fixed: Utorrent torrents not being removed (#2385)\n* Fixed: Torznab to transmission\n* Fixed: Magnet folder names in history\n* Fixed: Multiple torcache fixes\n* Fixed: Updated requests & urllib3 to latest versions to fix errors with pyOpenSSL\n* Improved: Use a temporary folder during post-processing\n* Improved: Added verify_ssl_cert option\n* Improved: Fixed track matching progress\n* Improved: pylint, pep8 & pylint fixes\n* Improved: Stop JS links from scrolling to the top of the page\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.9...v0.5.10).\n\n## v0.5.9\nReleased 05 September 2015\n\nHighlights:\n* Added: Providers Strike, Jackett, custom Torznabs\n* Added: Option to stop post-processing if no good match found (#2343)\n* Fixed: Blackhole -> Magnet, limit to torcache\n* Fixed: Kat 403 flac error\n* Fixed: Last.fm errors\n* Fixed: Pushover notifications\n* Improved: Rutracker logging, switched to requests lib\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.8...v0.5.9).\n\n## v0.5.8\nReleased 13 July 2015\n\nHighlights:\n* Added: Option to only include official extras\n* Added: Option to wait until album release date before searching\n* Fixed: NotifyMyAndroid notifications\n* Fixed: Plex Notifications\n* Fixed: Metacritic parsing\n* Fixed: Pushbullet notifications\n* Fixed: What.cd not honoring custom search term (#2279)\n* Improved: XSS Search bug\n* Improved: Config page layout\n* Improved: Set localhost as default\n* Improved: Better single artist scanning\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.7...v0.5.8).\n\n## v0.5.7\nReleased 01 July 2015\n\nHighlights:\n* Improved: Moved pushover to use requests lib\n* Improved: Plex tokens with Plex Home\n* Improved: Added getLogs & clearLogs to api\n* Improved: Cache MetaCritic scores. Added user-agent header to fix 403 errors\n* Improved: Specify whether to delete folders when force post-processing\n* Improved: Convert target bitrate to vbr preset for what.cd searching\n* Improved: Switched Pushover to requests lib\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.6...v0.5.7).\n\n## v0.5.6\nReleased 08 June 2015\n\nHighlights:\n* Added: Metacritic scores\n* Added: Series support (e.g. Cafe Del Mar, Now That's What I Call Music, etc)\n* Added: Filter out clean/edited/censored releases (#2198)\n* Added: Button on the log page to toggle verbose/debug logging\n* Fixed: Connecting to SABnzbd over https with python >= 2.7.9\n* Fixed: Email Notifications with SSL\n* Fixed: Don't limit musicbrainz results to first 100\n* Fixed: nzbget url fix\n* Fixed: OSX Notifications\n* Improved: Cuesplit, allow wav, ape to be split\n* Improved: Moved the 'freeze db' option to the advanced->misc. tab\n* Improved: Moved kickass searching to json api, so it doesn't throw 404 errors anymore when there are no results\n* Improved: SSL for headphones indexer\n* Improved: Disable update dialog box if check_github is diabled\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.5...v0.5.6).\n\n## v0.5.5\nReleased 04 May 2015\n\nHighlights:\n* Added: force ID3v2.3 during post processing (#2121)\n* Added: MusicBrainz authentication (#2125)\n* Added: Email notifications (addresses #1045)\n* Fixed: Kickass url updated to kickass.to (#2119)\n* Fixed: Piratebay returning 0 bytes for all files\n* Fixed: Albums stopped automatically refreshing when adding an artist\n* Fixed: Min/max sizes for target bitrate\n* Fixed: Don't filter any results if looking for a specific download\n* Fixed: Sort by size in the specific download table\n* Fixed: Deal with beets recommendation.none correctly\n* Improved: Close dialog window automatically when choosing a specific download\n* Improved: Move some repetitive log messages to debug level\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.4...v0.5.5).\n\n## v0.5.4\nReleased 05 February 2015\n\nHighlights:\n* Added: backported 'Scan Artist' feature from `sarakha63/headphones`\n* Fixed: change file permissions of cache files according to settings (#2102)\n* Fixed: hide Songkick if no regional events are available\n* Fixed: only reschedule jobs if timeout changed (#2099)\n* Fixed: limit dialog height (#2096)\n* Improved: upgraded requests to 2.5.1\n* Improved: upgraded unidecode to 0.04.17\n* Improved: upgraded tzlocal to 1.1.2\n* Improved: upgraded PyTZ to 2014.10\n* Improved: upgraded mako to 1.0.1\n* Improved: upgraded mutagen to 1.27\n* Improved: upgraded beets to 1.3.10\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.3...v0.5.4).\n\n## v0.5.3\nReleased 15 January 2015\n\nHighlights:\n* Added: update active artists via API (#2075)\n* Fixed: queue instance lacks `add` method (#2055)\n* Improved: better SSL error messages (#2058)\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.2...v0.5.3).\n\n## v0.5.2\nReleased 28 December 2014\n\nHighlights:\n* Added: advanced option to ignore certain folders by patterns. (#2037)\n* Added: advanced option to ignore certain files by patterns (library only)\n* Added: specify optional paths to CUE splitting tools (#1938)\n* Added: experimental support for OPB (provide details yourself!)\n* Fixed: magnet to torrent conversion (#1926)\n* Fixed: new KAT URL (#2043)\n* Fixed: LMS notifications (#1564)\n* Improved: notify user of SSL-related warnings, instead of silently failing.\n* Improved: show all search results for 'Choose Specific Release'\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5.1...v0.5.2).\n\n## v0.5.1\nReleased 13 November 2014\n\nHighlights:\n* Added: allow one to disable interval tasks (#2002)\n* Added: script to downgrade Headphones to last version that started (Linux only)\n* Fixed: SSL issues in CherryPy. Self-generated certificates will be 2048 now (#1995)\n* Fixed: Transmission URL detection (#1998)\n* Fixed: missing dependencies for APScheduler and CherryPy (#2001)\n* Improved: symlink infinite recursion detection\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.5...v0.5.1).\n\n## v0.5\nReleased 10 November 2014\n\nHighlights:\n* Added: CUE splitter\n* Added: filter search result by MusicBrainz Release Group ID\n* Added: follow symlinks while scanning library (#1953)\n* Fixed: crash during post processing (#1897)\n* Fixed: embedding lyrics (#1896)\n* Fixed: HTTP errors with older versions of Python 2.6\n* Fixed: jump back to top of page (#1948)\n* Improved: parse MusicBrainz RGID first when post processing (#1952)\n* Improved: Growl unicode characters (#1695)\n* Improved: search handling for PB and KAT\n* Improved: Last.FM API support (#1877)\n* Improved: upgraded CherryPy to version 3.6.0\n* Improved: upgraded Requests to version 2.4.1\n* Improved: upgraded APScheduler to version 3.0.1\n* Improved: lot of code refactoring\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.4...v0.5).\n\n## v0.4\nReleased 20 September 2014\n\nHighlights:\n* Added: support for libav-tools (which replaces FFmpeg under Ubuntu)\n* Added: option to freeze library when post processing\n* Added: Songkick per area\n* Added: rename original NFO file (#1797)\n* Removed: removed dead search providers\n* Fixed: removed left-overs of old packages\n* Improved: rename by original folder (#1811)\n* Improved: uTorrent fixess\n* Improved: delayed loading of album art\n* Improved: search result parser\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.3.4...v0.4).\n\n## v0.3.4\nReleased 15 May 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.3.3...v0.3.4).\n\n## v0.3.3\nReleased 05 May 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.3.2...v0.3.3).\n\n## v0.3.2\nReleased 17 April 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.3.1...v0.3.2).\n\n## v0.3.1\nReleased 11 April 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.3...v0.3.1).\n\n## v0.3\nReleased 09 April 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.2.3...v0.3).\n\n## v0.2.3\nReleased 28 March 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.2.2...v0.2.3).\n\n## v0.2.2\nReleased 15 January 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.2.1...v0.2.2).\n\n## v0.2.1\nReleased 13 January 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.2...v0.2.1).\n\n## v0.2\nReleased 13 January 2014\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.1.2...v0.2).\n\n## v0.1.2\nReleased 11 October 2013\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.1.1...v0.1.2).\n\n## v0.1.1\nReleased 26 August 2013\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/v0.1...v0.1.1).\n\n## v0.1\nReleased 05 August 2013\n\nThe full list of commits can be found [here](https://github.com/rembo10/headphones/compare/2156e1341405d07c5bcfbe994f6b354b32d94cda...v0.1).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.6943359375,
          "content": "# Contributing to Headphones\n\n## Issues\nIn case you read this because you are posting an issue, please take a minute and conside the things below. The issue tracker is not a support forum. It is primarily intended to submit bugs, improvements or feature requests. However, we are glad to help you, and make sure the problem is not caused by Headphones, but don't expect step-by-step answers.\n\n* Use the search function. Chances are that your problem is already discussed. Do not append to (closed) issues if your problem does not fit the discussion.\n* Visit the [Troubleshooting](../../wiki/TroubleShooting) wiki first.\n* Use [proper formatting](https://help.github.com/articles/github-flavored-markdown/). Paste your logs in code blocks.\n* Close your issue if you resolved it.\n\n## Pull Requests\nIf you think you can contribute code to the Headphones repository, do not hesitate to submit a pull request.\n\n### Branches\nAll pull requests should be based on the `develop` branch, to minimize cross merges. When you want to develop a new feature, clone the repository with `git clone origin/develop -b FEATURE_NAME`. Use meaningful commit messages.\n\n### Python Code\n\n#### Compatibility\nThe code should work with Python 2.6 and 2.7. Note that Headphones runs on different platforms, including Network Attached Storage devices such as Synology.\n\nRe-use existing code. Do not hesitate to add logging in your code. You can the logger module `headphones.logger.*` for this. Web requests are invoked via `headphones.request.*` and derived ones. Use these methods to automatically add proper and meaningful error handling.\n\n#### Code conventions\nAlthough Headphones did not adapt a code convention in the past, we try to follow the [PEP8](http://legacy.python.org/dev/peps/pep-0008/) conventions for future code. A short summary to remind you (copied from http://wiki.ros.org/PyStyleGuide):\n\n * 4 space indentation\n * 80 characters per line\n * `package_name`\n * `ClassName`\n * `method_name`\n * `field_name`\n * `_private_something`\n * `self.__really_private_field`\n * `_global`\n\n#### Documentation\nDocument your code. Use docstrings See [PEP-257](https://www.python.org/dev/peps/pep-0257/) for more information.\n\n#### Continuous Integration\nHeadphones has a configuration file for [travis-ci](https://travis-ci.org/). You can add your forked repo to Travis to have it check your code against PEP8, PyLint, and PyFlakes for you. Your pull request will show a green check mark or a red cross on each tested commit, depending on if linting passes.\n\n### HTML/Template code\n\n#### Compatibility\nHTML5 compatible browsers are targetted. There is no specific mobile version of Headphones yet.\n\n#### Conventions\n* 4 space indentation\n* `methodName`\n* `variableName`\n* `ClassName`"
        },
        {
          "name": "Headphones.py",
          "type": "blob",
          "size": 8.1748046875,
          "content": "#!/usr/bin/env python\n#  This file is part of Headphones.\n#\n#  Headphones is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n#\n#  Headphones is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU General Public License for more details.\n#\n#  You should have received a copy of the GNU General Public License\n#  along with Headphones.  If not, see <http://www.gnu.org/licenses/>.\n\nimport os\nimport sys\n\nif sys.version_info <= (3, 6):\n    sys.stdout.write(\"Headphones requires Python >= 3.7\\n\")\n    sys.exit(1)\n\n# Ensure lib added to path, before any other imports\nsys.path.insert(0, os.path.join(os.path.dirname(__file__), 'lib/'))\n\nfrom headphones import webstart, logger\n\nimport locale\nimport time\nimport signal\nimport argparse\nimport headphones\n\n# Register signals, such as CTRL + C\nsignal.signal(signal.SIGINT, headphones.sig_handler)\nsignal.signal(signal.SIGTERM, headphones.sig_handler)\n\n\ndef main():\n    \"\"\"\n    Headphones application entry point. Parses arguments, setups encoding and\n    initializes the application.\n    \"\"\"\n\n    # Fixed paths to Headphones\n    if hasattr(sys, 'frozen'):\n        headphones.FULL_PATH = os.path.abspath(sys.executable)\n    else:\n        headphones.FULL_PATH = os.path.abspath(__file__)\n\n    headphones.PROG_DIR = os.path.dirname(headphones.FULL_PATH)\n    headphones.ARGS = sys.argv[1:]\n\n    # From sickbeard\n    headphones.SYS_PLATFORM = sys.platform\n    headphones.SYS_ENCODING = None\n\n    try:\n        locale.setlocale(locale.LC_ALL, \"\")\n        if headphones.SYS_PLATFORM == 'win32':\n            headphones.SYS_ENCODING = sys.getdefaultencoding().upper()\n        else:\n            headphones.SYS_ENCODING = locale.getpreferredencoding()\n    except (locale.Error, IOError):\n        pass\n\n    # for OSes that are poorly configured I'll just force UTF-8\n    if not headphones.SYS_ENCODING or headphones.SYS_ENCODING in ('ANSI_X3.4-1968', 'US-ASCII', 'ASCII'):\n        headphones.SYS_ENCODING = 'UTF-8'\n\n    # Set up and gather command line arguments\n    parser = argparse.ArgumentParser(\n        description='Music add-on for SABnzbd+, Transmission and more.')\n\n    parser.add_argument(\n        '-v', '--verbose', action='store_true', help='Increase console logging verbosity')\n    parser.add_argument(\n        '-q', '--quiet', action='store_true', help='Turn off console logging')\n    parser.add_argument(\n        '-d', '--daemon', action='store_true', help='Run as a daemon')\n    parser.add_argument(\n        '-p', '--port', type=int, help='Force Headphones to run on a specified port')\n    parser.add_argument(\n        '--datadir', help='Specify a directory where to store your data files')\n    parser.add_argument('--config', help='Specify a config file to use')\n    parser.add_argument('--nolaunch', action='store_true',\n                        help='Prevent browser from launching on startup')\n    parser.add_argument(\n        '--pidfile', help='Create a pid file (only relevant when running as a daemon)')\n    parser.add_argument(\n        '--host', help='Specify a host (default - localhost)')\n\n    args = parser.parse_args()\n\n    if args.verbose:\n        headphones.VERBOSE = True\n    if args.quiet:\n        headphones.QUIET = True\n\n    # Do an intial setup of the logger.\n    logger.initLogger(console=not headphones.QUIET, log_dir=False,\n        verbose=headphones.VERBOSE)\n\n    if args.daemon:\n        if sys.platform == 'win32':\n            sys.stderr.write(\n                \"Daemonizing not supported under Windows, starting normally\\n\")\n        else:\n            headphones.DAEMON = True\n            headphones.QUIET = True\n\n    if args.pidfile:\n        headphones.PIDFILE = str(args.pidfile)\n\n        # If the pidfile already exists, headphones may still be running, so\n        # exit\n        if os.path.exists(headphones.PIDFILE):\n            raise SystemExit(\"PID file '%s' already exists. Exiting.\" %\n                headphones.PIDFILE)\n\n        # The pidfile is only useful in daemon mode, make sure we can write the\n        # file properly\n        if headphones.DAEMON:\n            headphones.CREATEPID = True\n\n            try:\n                with open(headphones.PIDFILE, 'w') as fp:\n                    fp.write(\"pid\\n\")\n            except IOError as e:\n                raise SystemExit(\"Unable to write PID file: %s\", e)\n        else:\n            logger.warn(\"Not running in daemon mode. PID file creation \" \\\n                \"disabled.\")\n\n    # Determine which data directory and config file to use\n    if args.datadir:\n        headphones.DATA_DIR = args.datadir\n    else:\n        headphones.DATA_DIR = headphones.PROG_DIR\n\n    if args.config:\n        config_file = args.config\n    else:\n        config_file = os.path.join(headphones.DATA_DIR, 'config.ini')\n\n    # Try to create the DATA_DIR if it doesn't exist\n    if not os.path.exists(headphones.DATA_DIR):\n        try:\n            os.makedirs(headphones.DATA_DIR)\n        except OSError:\n            raise SystemExit(\n                'Could not create data directory: ' + headphones.DATA_DIR + '. Exiting....')\n\n    # Make sure the DATA_DIR is writeable\n    if not os.access(headphones.DATA_DIR, os.W_OK):\n        raise SystemExit(\n            'Cannot write to the data directory: ' + headphones.DATA_DIR + '. Exiting...')\n\n    # Put the database in the DATA_DIR\n    headphones.DB_FILE = os.path.join(headphones.DATA_DIR, 'headphones.db')\n\n    # Read config and start logging\n    try:\n        headphones.initialize(config_file)\n    except headphones.exceptions.SoftChrootError as e:\n        raise SystemExit('FATAL ERROR')\n\n    if headphones.DAEMON:\n        headphones.daemonize()\n\n    # Configure the connection to the musicbrainz database\n    headphones.mb.startmb()\n\n    # Force the http port if neccessary\n    if args.port:\n        http_port = args.port\n        logger.info('Using forced web server port: %i', http_port)\n    else:\n        http_port = int(headphones.CONFIG.HTTP_PORT)\n\n    # Force the http host if neccessary\n    if args.host:\n        http_host = args.host\n        logger.info('Using forced web server host: %s', http_host)\n    else:\n        http_host = headphones.CONFIG.HTTP_HOST\n\n    # Check if pyOpenSSL is installed. It is required for certificate generation\n    # and for CherryPy.\n    if headphones.CONFIG.ENABLE_HTTPS:\n        try:\n            import OpenSSL\n        except ImportError:\n            logger.warn(\"The pyOpenSSL module is missing. Install this \" \\\n                \"module to enable HTTPS. HTTPS will be disabled.\")\n            headphones.CONFIG.ENABLE_HTTPS = False\n\n    # Try to start the server. Will exit here is address is already in use.\n    web_config = {\n        'http_port': http_port,\n        'http_host': http_host,\n        'http_root': headphones.CONFIG.HTTP_ROOT,\n        'http_proxy': headphones.CONFIG.HTTP_PROXY,\n        'enable_https': headphones.CONFIG.ENABLE_HTTPS,\n        'https_cert': headphones.CONFIG.HTTPS_CERT,\n        'https_key': headphones.CONFIG.HTTPS_KEY,\n        'http_username': headphones.CONFIG.HTTP_USERNAME,\n        'http_password': headphones.CONFIG.HTTP_PASSWORD,\n    }\n    webstart.initialize(web_config)\n\n    # Start the background threads\n    headphones.start()\n\n    # Open webbrowser\n    if headphones.CONFIG.LAUNCH_BROWSER and not args.nolaunch:\n        headphones.launch_browser(headphones.CONFIG.HTTP_HOST, http_port,\n                                  headphones.CONFIG.HTTP_ROOT)\n\n    # Wait endlessy for a signal to happen\n    while True:\n        if not headphones.SIGNAL:\n            try:\n                time.sleep(1)\n            except KeyboardInterrupt:\n                headphones.SIGNAL = 'shutdown'\n        else:\n            logger.info('Received signal: %s', headphones.SIGNAL)\n\n            if headphones.SIGNAL == 'shutdown':\n                headphones.shutdown()\n            elif headphones.SIGNAL == 'restart':\n                headphones.shutdown(restart=True)\n            else:\n                headphones.shutdown(restart=True, update=True)\n\n            headphones.SIGNAL = None\n\n# Call main()\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8994140625,
          "content": "## ![Headphones Logo](https://github.com/rembo10/headphones/raw/master/data/images/headphoneslogo.png) Headphones\n\n[![Build Status](https://travis-ci.org/rembo10/headphones.svg?branch=master)](https://travis-ci.org/rembo10/headphones)\n[![Build Status](https://img.shields.io/travis/rembo10/headphones/develop.svg?label=develop%20branch%20build)](https://travis-ci.org/rembo10/headphones)\n\nHeadphones is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent, Deluge and Blackhole.\n\n## Support & Discuss\nYou are free to join the Headphones support community on IRC where you can ask questions, hang around and discuss anything related to HP.\n\n1. Use any IRC client and connect to the Freenode server, `irc.freenode.net`.\n2. Join the `#headphones` channel.\n\n## Installation and Notes\n\n* [Installation page](../../wiki/Installation) shows you how to install Headphones.\n* [Usage guide](../../wiki/Usage-guide) introduces you to Headphones.\n* [Troubleshooting page](../../wiki/TroubleShooting) in the wiki can help you with common problems.\n\n**Issues** can be reported on the GitHub issue tracker considering these rules:\n\n1. Analyze your log, you just might find the solution yourself!\n2. You read the wiki and searched existing issues, but this is not solving your problem.\n3. Post the issue with a clear title, description and the HP log and use [proper markdown syntax](https://help.github.com/articles/github-flavored-markdown) to structure your text (code/log in code blocks).\n4. Close your issue when it's solved! If you found the solution yourself, please comment so that others benefit from it.\n\n**Feature requests** can be reported on the GitHub issue tracker too:\n\n1. Search for similar existing 'issues', feature requests can be recognized by the label 'Request'.\n2. If a similar Request exists, post a comment (+1, or add a new idea to the existing request), otherwise you can create a new one.\n\nIf you **comply with these rules** you can [post your request/issue](http://github.com/rembo10/headphones/issues).\n\n**Support** the project by implementing new features, solving support tickets and provide bug fixes.\n\n## Screenshots\n\nHomepage (Artist Overview):\n\n![preview thumb](http://i.imgur.com/LZO9a.png)\n\nOne of the many settings pages:\n\n![preview thumb](http://i.imgur.com/xcWNy.png)\n\nIt might even know you better than you know yourself:\n\n![preview thumb](http://i.imgur.com/R7J0f.png)\n\nImport Your Favorite Artists:\n\n![preview thumb](http://i.imgur.com/6tZoC.png)\n\nSearch Results:\n\n![preview thumb](http://i.imgur.com/rIV0P.png)\n\nArtist Page with Bio & Album Overview:\n\n![preview thumb](http://i.imgur.com/SSil1.png)\n\nAlbum Page with track overview:\n\n![preview thumb](http://i.imgur.com/kcjES.png)\n\n## License\nThis is free software under the GPL v3 open source license. Feel free to do with it what you wish, but any modification must be open sourced. A copy of the license is included.\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "headphones",
          "type": "tree",
          "content": null
        },
        {
          "name": "init-scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 9.0341796875,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\ninit-hook=sys.path.insert(0, 'lib/')\n\n# Profiled execution.\nprofile=no\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n\n[MESSAGES CONTROL]\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\n#I0011 an inline option disables a pylint message or a messages category\n#R0801 a set of similar lines has been detected among multiple file\n#W0142 a function or method is called using *args or **kwargs to dispatch argument\n\n# W1201(logging-not-lazy)\n# C0330(bad-continuation)\n# E1205(logging-too-many-args)\n\ndisable=I0011,R0801,W0142,C0103,C0111,C0301,C0302,C0304,C0321,C1001,E0101,E0203,E0602,E1101,E1123,R0201,R0401,R0911,R0912,R0914,R0915,R0923,W0102,W0109,W0120,W0141,W0201,W0212,W0231,W0232,W0233,W0301,W0311,W0401,W0403,W0404,W0511,W0601,W0602,W0603,W0611,W0612,W0613,W0621,W0622,W0633,W0702,W0703,W1401,W1201,C0330\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\n#output-format=parseable\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Add a comment according to your evaluation note. This is used by the global\n# evaluation report (RP0004).\ncomment=no\n\n# Template used to display messages. This is a python new-style format string\n# used to format the massage information. See doc for all details\n#msg-template=\nmsg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}\n\n[BASIC]\n\n# Required attributes for module, separated by a comma\nrequired-attributes=\n\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=map,filter,apply,input\n\n# Regular expression which should only match correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression which should only match correct module level names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression which should only match correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression which should only match correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Regular expression which should only match correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Regular expression which should only match correct instance attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Regular expression which should only match correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Regular expression which should only match correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Regular expression which should only match correct attribute names in class\n# bodies\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Regular expression which should only match correct list comprehension /\n# generator expression variable names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=__.*__\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=150\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \" \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set).\nignored-classes=SQLObject\n\n# When zope mode is activated, add a predefined set of Zope acquired attributes\n# to generated-members.\nzope=no\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E0201 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,acl_users,aq_parent,objects\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the beginning of the name of dummy variables\n# (i.e. not used).\ndummy-variables-rgx=_$|dummy\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n\n[CLASSES]\n\n# List of interface methods to ignore, separated by a comma. This is used for\n# instance to not check methods defines in Zope's Interface base class.\nignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=10\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=20\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=0\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=100\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.1552734375,
          "content": "coverage==4.0.3\ncoveralls==1.1\nmock==1.3.0\nnose==1.3.7\npep8==1.7.0\npyflakes==1.1.0\npylint==1.3.1  # pylint 1.4 does not run under python 2.6\npyOpenSSL==0.15.1\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.1640625,
          "content": "[nosetests]\nverbosity=2\ntests=headphones\n#rednose=1\n#exclude-dir=lib\n\nwith-coverage=1\ncover-branches=1\n\ncover-html=1\ncover-html-dir=cover-html\ncover-package=headphones\n"
        }
      ]
    }
  ]
}