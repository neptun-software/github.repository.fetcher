{
  "metadata": {
    "timestamp": 1736559938770,
    "page": 709,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "orakaro/rainbowstream",
      "stars": 3543,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.720703125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n.DS_Store\n\n# C extensions\n*.so\n\n# Pyenv\n.python-version\n\n# Distribution / packaging\n.Python\nenv/\nbin/\nbuild/\n_build/\ndevelop-eggs/\ndist/\neggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.cache\nnosetests.xml\ncoverage.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n# Rope\n.ropeproject\n\n# Django stuff:\n*.log\n*.pot\n\n# Sphinx documentation\ndocs/_build/\n\n# DB files\n*.db\n\n# Editor\n*sublime*\n.tag*\n*.swp*\n*.swo*\n\n# Virtualenv\n/venv*\n\n# History completer\ncompleter.hist\n\n# Consumer\nrainbowstream/consumer.py\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.0654296875,
          "content": "FROM python:2.7.9\n\nRUN pip install rainbowstream\nCMD rainbowstream\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.03125,
          "content": "Copyright (c) 2014 Vu Nhat Minh\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1015625,
          "content": "include README.rst LICENSE.txt\ninclude rainbowstream/image.c\nrecursive-include rainbowstream/colorset *\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 6.8427734375,
          "content": "Rainbow Stream\n--------------\n\n.. image:: http://img.shields.io/pypi/l/rainbowstream.svg?style=flat-square\n   :target: https://github.com/DTVD/rainbowstream/blob/master/LICENSE.txt\n\n.. image:: http://img.shields.io/pypi/v/rainbowstream.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/rainbowstream\n\nTerminal-based full-fledged Twitter client, built upon `Python Twitter Tools`.\n\nShowcase\n--------\n\n.. figure:: https://raw.githubusercontent.com/DTVD/rainbowstream/master/screenshot/rs.gif\n   :alt: gif\n\nInstallation\n------------\n\nDirect installation\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: bash\n\n    sudo pip3 install rainbowstream\n\nVirtualenv (Recommended)\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: bash\n\n    virtualenv -p /usr/bin/python3 venv\n    source venv/bin/activate\n    pip install rainbowstream\n\nInstallation Troubleshooting\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nIf you run into dependency issues, you may want to install additional libraries\n\nDebian-based distros:\n\n.. code:: bash\n\n    sudo apt-get install python-dev libjpeg-dev libfreetype6 libfreetype6-dev zlib1g-dev\n\nCentOS:\n\n.. code:: bash\n\n    sudo yum install python-devel libjpeg-devel\n\nMac OSX \nMac has a `clang unknown argument`_\nproblem with the ``Pillow`` package—a dependency of this\napp.  Please see the workaround in `Issue #10`_\n\n.. code:: bash\n\n    export ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future\n\nIf you still experience issues:\n\n-  ``sudo pip uninstall rainbowstream``\n-  Use the *virtualenv installation*\n-  `Create an issue`_ and provide:\n    - Your OS\n    - Your Python version\n\nUsage\n-----\n\nThe Stream\n^^^^^^^^^^\n\nSimply run ``rainbowstream`` to start the application, or enjoy its ASCII images with ``rainbowstream -iot`` or set ``IMAGE_ON_TERM`` to ``True`` in your config.\n\nIf your terminal supports 24-bit colors, run ``rainbowstream -p24`` instead to utilize 24 bit ASCII images.\n\nIf your terminal supports sixel, ie. wezterm or MLTerm, change the ``IMAGE_ON_TERM`` config to ``sixel`` and enjoy high-quality images.\n\nYou might want to change ``IMAGE_SHIFT`` to set the image's margin (relative to your terminal's\nwidth), and ``IMAGE_MAX_HEIGHT`` to control the max height of every image (see\n`Config Management`_).\n\nYou will be asked for Twitter authorization the first time you run Rainbow\nStream.  Just click the \"Authorize access\" button, paste the PIN to the\nterminal, and the application will start.\n\nYou might want to use Rainbow Stream with an **HTTP/SOCKS proxy**.  Proxy\nsettings are specified as follows:\n\n.. code:: bash\n\n    rainbowstream --proxy-host localhost --proxy-port 1337 --proxy-type HTTP\n    # or the short form:\n    rainbowstream -ph localhost -pp 1337 -pt HTTP\n\nBoth ``--proxy-port`` and ``--proxy-type`` are optional.  The default proxy port\nis ``8080`` and the default proxy type is ``SOCKS5``.\n\nInteractive Mode\n^^^^^^^^^^^^^^^^\n\nWhile your stream is continued, you are also ready to tweet, search,\nreply, retweet, etc. directly from your console.  Simply type ``h`` and hit the\nEnter key to see the help.\n\nInput is in interactive mode.  It means that you can use the arrow keys to move\nup and down through the history, tab-autocomplete, or double-tab to view\navailable suggestions.  Input history from the previous run is also available.\n\n`Read the docs`_ for available commands.\n\nTheme Customization\n^^^^^^^^^^^^^^^^^^^\n\nRainbow Stream is shipped with some default themes.  You can switch themes with\nthe ``theme`` command.  You can also customize themes as you please.\n\nTheme screenshots:\n\n- Monokai\n\n.. figure:: https://raw.githubusercontent.com/DTVD/rainbowstream/master/screenshot/themes/Monokai.png\n   :alt: monokai\n\n- Solarized\n\n.. figure:: https://raw.githubusercontent.com/DTVD/rainbowstream/master/screenshot/themes/Solarized.png\n   :alt: solarized\n\n- Tomorrow Night\n\n.. figure:: https://raw.githubusercontent.com/DTVD/rainbowstream/master/screenshot/themes/TomorrowNight.png\n   :alt: tomorrownight\n\n- Larapaste\n\n.. figure:: https://raw.githubusercontent.com/DTVD/rainbowstream/master/screenshot/themes/larapaste.png\n   :alt: larapaste\n\nSee `Theme Usage and Customization`_ for detailed information.\n\nA Note about Twitter API Change\n-------------------------------\n\nSince Twitter discontinued supporting Stream API, RainbowStream is now using a [Polling Strategy](https://github.com/orakaro/rainbowstream/issues/271) that utilizes the `home` command to poll for your tweets every 90 seconds. This `home` command is rate limited by 15 times per 15 minutes, so don't run it too frequently to leave space for the polling stream.\n\nBug and Feature Requests\n------------------------\n\nFound a bug or a feature request?  Please `create an issue`_ or contact me at\n`@orakaro`_.\n\nDevelopment\n-----------\n\nIf you want to build a runnable version yourself, follow these simple steps:\n\n- `Create your Twitter Application`_\n-  Get your Twitter application’s API key and secret\n- `Create your own Pocket Application`_ (platform: Web)\n-  Get your Pocket application’s key\n-  Fork this repo and ``git clone`` it\n-  Create a ``consumer.py`` file in the `rainbowstream` directory containing:\n\n   .. code:: python\n\n       # Consumer information\n       CONSUMER_KEY = 'APIKey' # Your Twitter application's API key\n       CONSUMER_SECRET = 'APISecret' # Your Twitter application's API secret\n       PCKT_CONSUMER_KEY = 'PocketAPIKey' # Your Pocket application's API key\n\n-  Use pip to install it locally\n\n   .. code:: bash\n\n       # cd to directory which contains setup.py (cloned directory)\n       virtualenv venv # Python3 users: use -p to specify python3\n       source venv/bin/activate\n       pip install -e .\n       which rainbowstream # /this-directory/venv/bin/rainbowstream\n       # Remove ~/.rainbow_oauth if it exists\n       rainbowstream # local version of rainbowstream\n\n\nContributing\n------------\n\nI appreciate any help and support.  Feel free to `fork`_ and `create a pull\nrequest`_. \n\nLicense\n-------\n\nRainbow Stream is released under an MIT License.  See LICENSE.txt for details.\n\n\n.. _Python Twitter Tools: http://mike.verdone.ca/twitter/\n.. _Twitter API: https://dev.twitter.com/docs/api/1.1\n.. _Create an issue: https://github.com/DTVD/rainbowstream/issues/new\n.. _@orakaro: https://twitter.com/dtvd88\n.. _fork: https://github.com/DTVD/rainbowstream/fork\n.. _create a pull request: https://github.com/DTVD/rainbowstream/compare/\n.. _Read the docs: http://rainbowstream.readthedocs.org/en/latest/\n.. _config guide: https://github.com/DTVD/rainbowstream/blob/master/theme.md\n.. _Theme Usage and Customization: https://github.com/DTVD/rainbowstream/blob/master/theme.md\n.. _Create your Twitter Application: https://apps.twitter.com/app/new\n.. _Create your own Pocket Application: https://getpocket.com/developer/apps/new\n.. _Config Management: http://rainbowstream.readthedocs.org/en/latest/#config-explanation\n.. _clang unknown argument: http://kaspermunck.github.io/2014/03/fixing-clang-error/\n.. _Issue #10: https://github.com/DTVD/rainbowstream/issues/10\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "rainbowstream",
          "type": "tree",
          "content": null
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 0.189453125,
          "content": "# Packaging\npython setup.py sdist bdist_wheel\n# Check distribution package\ntwine check dist/*\n# Upload to PyPi\ntwine upload dist/*\n# Announce the latest version to Github\ngit push origin master\n"
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.CFG",
          "type": "blob",
          "size": 0.0400390625,
          "content": "[metadata]\ndescription-file = README.rst\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.3564453125,
          "content": "from setuptools import setup, find_packages\nimport os\nimport os.path\nimport sys\n\nif sys.version[0] == \"2\":\n    from pipes import quote\nelse:\n    from shlex import quote\n\n# Bumped version\nversion = '1.6.0'\n\n# Require\ninstall_requires = [\n    \"python-dateutil\",\n    \"arrow\",\n    \"requests\",\n    \"pyfiglet\",\n    \"twitter\",\n    \"Pillow\",\n    \"PySocks\",\n    \"pocket\",\n    \"libsixel-python\",\n    \"resize-image\"\n]\n\n# Default user (considers non virtualenv method)\nuser = os.environ.get('SUDO_USER', os.environ.get('USER', None))\n\n# Copy default config if not exists\ndefault = os.path.expanduser(\"~\") + os.sep + '.rainbow_config.json'\nif not os.path.isfile(default):\n    cmd = 'cp rainbowstream/colorset/config ' + default\n    os.system(cmd)\n    if user:\n        cmd = 'chown ' + quote(user) + ' ' + default\n        os.system(cmd)\n    cmd = 'chmod 777 ' + default\n    os.system(cmd)\n\n# Setup\nsetup(name='rainbowstream',\n      version=version,\n      description=\"A smart and nice Twitter client on terminal.\",\n      long_description=open(\"./README.rst\", \"r\").read(),\n      classifiers=[\n          \"Development Status :: 5 - Production/Stable\",\n          \"Environment :: Console\",\n          \"Intended Audience :: End Users/Desktop\",\n          \"Natural Language :: English\",\n          \"Operating System :: OS Independent\",\n          \"Programming Language :: Python :: 2.7\",\n          \"Programming Language :: Python :: 3.2\",\n          \"Programming Language :: Python :: 3.3\",\n          \"Programming Language :: Python :: 3.4\",\n          \"Programming Language :: Python :: 3.5\",\n          \"Programming Language :: Python :: 3.6\",\n          \"Programming Language :: Python :: 3.7\",\n          \"Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries\",\n          \"Topic :: Utilities\",\n          \"License :: OSI Approved :: MIT License\",\n      ],\n      keywords='twitter, command-line tools, stream API',\n      author='Vu Nhat Minh',\n      author_email='nhatminh179@gmail.com',\n      url='http://www.rainbowstream.org/',\n      license='MIT License',\n      packages=find_packages(exclude=['ez_setup', 'examples', 'tests']),\n      include_package_data=True,\n      zip_safe=True,\n      install_requires=install_requires,\n      long_description_content_type='text/markdown',\n      entry_points=\"\"\"\n      # -*- Entry points: -*-\n      [console_scripts]\n      rainbowstream=rainbowstream.rainbow:fly\n      \"\"\",\n      )\n"
        },
        {
          "name": "theme.md",
          "type": "blob",
          "size": 6.259765625,
          "content": "## Available themes\n#### Monokai (`monokai`)\n![Monokai](./screenshot/themes/Monokai.png)\n#### Solarized (`solarized`)\n![Solarized](./screenshot/themes/Solarized.png)\n#### Tomorrow Night (`tomorrow_night`)\n![Solarized](./screenshot/themes/TomorrowNight.png)\n#### Larapaste (`larapaste`)\n![Solarized](./screenshot/themes/larapaste.png)\n\n## Customization\nModify `~/.rainbow_config.json` and follow next instruction.\n\nExamples are available in\n[Themes folder](https://github.com/DTVD/rainbowstream/blob/master/rainbowstream/colorset)\n\n### Custom config\n * There is a file named exactly `.rainbow_config.json` and is placed at your home directory.\n * Add color configurations to above file and follow json format.\n * Comments as `//` or `/*...*/` are allowed.\n * Here is an example\n\n```json\n{\n    \"DECORATED_NAME\" : 198,\n    \"CYCLE_COLOR\" :[198,57,166,50,179,74,112],\n    \"TWEET\" : {\n        \"mynick\"          : 179,\n        \"nick\"            : 112,\n        \"clock\"           : 57,\n        \"id\"              : 166,\n        \"client\"          : 74,\n        \"favorited\"       : 50,\n        \"retweet_count\"   : 50,\n        \"favorite_count\"  : 198,\n        \"rt\"              : 179,\n        \"link\"            : 74,\n        \"hashtag\"         : 198,\n        \"mytweet\"         : 179,\n        \"keyword\"         : \"on_light_green\"\n    },\n\n    \"NOTIFICATION\":{\n        \"source_nick\"   : 112,\n        \"notify\"        : 179,\n        \"clock\"         : 57\n    },\n\n    \"MESSAGE\" : {\n        \"partner\"       : 112,\n        \"me\"            : 112,\n        \"partner_frame\" : 198,\n        \"me_frame\"      : 74,\n        \"sender\"        : 112,\n        \"recipient\"     : 112,\n        \"to\"            : 50,\n        \"clock\"         : 57,\n        \"id\"            : 166\n    },\n\n    \"PROFILE\" : {\n        \"statuses_count\"    : 112,\n        \"friends_count\"     : 198,\n        \"followers_count\"   : 57,\n        \"nick\"              : 198,\n        \"profile_image_url\" : 74,\n        \"description\"       : 166,\n        \"location\"          : 112,\n        \"url\"               : 74,\n        \"clock\"             : 57\n    },\n\n    \"TREND\" : {\n        \"url\": 74\n    },\n\n    \"CAL\" : {\n        \"days\": 57,\n        \"today\": \"on_light_blue\"\n    },\n\n    \"GROUP\" : {\n        \"name\": 112,\n        \"member\": 57,\n        \"subscriber\": 198,\n        \"mode\": 112,\n        \"description\": 166,\n        \"clock\": 57\n    }\n}\n```\n\n### Available Colors\n\nThere are 16 basic colors:\n  * default\n  * black\n  * red\n  * green\n  * yellow\n  * blue\n  * magenta\n  * cyan\n  * grey\n  * light_red\n  * light_green\n  * light_yellow\n  * light_blue\n  * light_magenta\n  * light_cyan\n  * white\n\nThese colors will be enough for almost terminals.\nBut if your terminal can support 256 colors (check your `$TERM` variable!),\nyou can even use 0 to 255 as the example above.\n\nThere are also background highlight colors like:\n  * on_default\n  * on_black\n  * on_red\n  * on_green\n  * on_yellow\n  * on_blue\n  * on_magenta\n  * on_cyan\n  * on_grey\n  * on_light_red\n  * on_light_green\n  * on_light_yellow\n  * on_light_blue\n  * on_light_magenta\n  * on_light_cyan\n  * on_white\n\n\nColor reference can be found at\n[bash colors](http://misc.flogisoft.com/bash/tip_colors_and_formatting) or\n[256 xterm colors](http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html).\n\n### Available options\n* `DECORATED_NAME`: color of your Twitter's __username__ which is placed at every line's begin.\n* `CYCLE_COLOR`: list of colors from which Twitter __real name__ 's color is selected.\n  * Color selection is cycle through this list but with _memoization_.\n  * It's means that same names will appear in same colors.\n* `TWEET`: colors of parts in a tweet's ouput.\n  * `mynick` : color for your Twitter __username__.\n  * `nick` : color for other Twitter __username__.\n  * `clock`: color for time of tweet.\n  * `id`: color for tweet's id.\n  * `client`: color for used Twitter client.\n  * `favorite`: color for the star symbol when a tweet is favorited by you.\n  * `retweet_count`: color for retweets count.\n  * `favorite_count`: color for favorites count.\n  * `rt`: color for `RT` word in tweet's content.\n  * `link`: color for an url.\n  * `hashtag`: color for a hashtag.\n  * `mytweet`: color for tweet's text from yourself.\n  * `keyword`: color for highlighted keyword (in tweets search).\n* `NOTIFICATION`: colors of notification events.\n  * `source_nick`: color for user's __username__.\n  * `notify`: color for notification message.\n  * `clock`: color for time of notification event.\n* `MESSAGE`: colors of parts in message's output.\n  * `partner`: color for __partner__.\n  * `me`: color for __authenticated user__.\n  * `partner_frame`: color for __partner's frame__.\n  * `me_frame`: color for __authenticated user's frame__.\n  * `sender`: color for sender's __username__.\n  * `recipient`: color for recipient's __username__.\n  * `to`: color for the `>>>` symbol.\n  * `clock`: color for time of message.\n  * `id`: color for message's id.\n* `PROFILE`: colors for parts in profile's ouput.\n  * `statuses_count`: color for statuses count.\n  * `friends_count`: color for friends count.\n  * `followers_count`: color for followers count.\n  * `nick`: color for Twitter __username__.\n  * `profile_image_url`: color for profile image url.\n  * `description`: color for description.\n  * `location`: color for location.\n  * `url`: color for url.\n  * `clock`: color for joined time.\n* `TREND`: colors for trend's output:\n  * `url`: color for trend's url.\n* `CAL`: colors for calendar's output:\n  * `days`: color for days in current month.\n  * `today`: color for today.\n* `GROUP`: colors for twitter list output:\n  * `name`: color for twitter list's name.\n  * `member`: color member count.\n  * `subscriber`: color subscriber count.\n  * `mode`: color twitter list's mode.\n  * `description`: color twitter list's description.\n  * `clock`: color twitter list's created time.\n\n### Theme usage\nWhile entered Rainbow Stream:\n* `theme` and hit ENTER to see which is available.\n* `theme` + TAB twice will show themes list instantly.\n* `theme monokai` will apply `monokai` theme immediately. You can use TAB key for theme's name autocompletion.\n\n### Theme contribution\nI appreciate any contribution for themes for this app.\nPlease add a file to [themes folder](https://github.com/DTVD/rainbowstream/tree/master/rainbowstream/colorset)\n(json format!) and create a [pull request](https://github.com/DTVD/rainbowstream/compare/) with a screenshot.\n"
        }
      ]
    }
  ]
}