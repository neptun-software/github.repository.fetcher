{
  "metadata": {
    "timestamp": 1736559534866,
    "page": 130,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jazzband/tablib",
      "stars": 4650,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.2578125,
          "content": "# .coveragerc to control coverage.py\n\n[report]\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma:\n    pragma: no cover\n\n    # Don't complain if non-runnable code isn't run:\n    if __name__ == .__main__.:\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0576171875,
          "content": "[flake8]\nmax_line_length = 99\nexclude =\n    .tox\n    *env/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4169921875,
          "content": "# application builds\nbuild/*\ndist/*\nMANIFEST\n\n# python skin\n*.pyc\n*.pyo\n\n# osx noise\n.DS_Store\nprofile\n\n# pycharm noise\n.idea\n.idea/*\n\n# vi noise\n*.swp\ndocs/_build/*\ncoverage.xml\nnosetests.xml\njunit-py25.xml\njunit-py26.xml\njunit-py27.xml\n\n# tox noise\n.tox\n\n# pyenv noise\n.python-version\ntablib.egg-info/*\n\n# Coverage\n.coverage\nhtmlcov\n\n# setuptools noise\n.eggs\n*.egg-info\n\n# generated by setuptools-scm\n/src/tablib/_version.py\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.732421875,
          "content": "repos:\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.19.1\n    hooks:\n      - id: pyupgrade\n        args: [--py39-plus]\n\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n\n  - repo: https://github.com/PyCQA/flake8\n    rev: 7.1.1\n    hooks:\n      - id: flake8\n\n  - repo: https://github.com/isidentical/teyit\n    rev: 0.4.3\n    hooks:\n      -   id: teyit\n\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.10.0\n    hooks:\n      - id: python-check-blanket-noqa\n      - id: rst-backticks\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-merge-conflict\n      - id: check-toml\n      - id: check-yaml\n\nci:\n  autoupdate_schedule: quarterly\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.1943359375,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-20.04\n  tools:\n    python: \"3.10\"\n\nsphinx:\n  configuration: docs/conf.py\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n    - method: pip\n      path: .\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.7236328125,
          "content": "Tablib was originally written by Kenneth Reitz and is now maintained\nby the Jazzband GitHub team.\n\nHere is a list of past and present much-appreciated contributors:\n\n    Alex Gaynor\n    Andrii Soldatenko\n    Benjamin Wohlwend\n    Bruno Soares\n    Claude Paroz\n    Daniel Santos\n    Erik Youngren\n    Hugo van Kemenade\n    Iuri de Silvio\n    Jakub Janoszek\n    James Douglass\n    Joel Friedly\n    Josh Ourisman\n    Kenneth Reitz\n    Luca Beltrame\n    Luke Lee\n    Marc Abramowitz\n    Marco Dallagiacoma\n    Maris Nartiss\n    Mark Rogers\n    Mark Walling\n    Mathias Loesch\n    Matthew Hegarty\n    Matthias Dellweg\n    Mike Waldner\n    Peyman Salehi\n    Rabin Nankhwa\n    Tommy Anthony\n    Tsuyoshi Hombashi\n    Tushar Makkar\n    Yunis Yilmaz\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.3193359375,
          "content": "# Code of Conduct\n\nAs contributors and maintainers of the Jazzband projects, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in the Jazzband a harassment-free experience\nfor everyone, regardless of the level of experience, gender, gender identity and\nexpression, sexual orientation, disability, personal appearance, body size, race,\nethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery\n- Personal attacks\n- Trolling or insulting/derogatory comments\n- Public or private harassment\n- Publishing other's private information, such as physical or electronic addresses,\n  without explicit permission\n- Other unethical or unprofessional conduct\n\nThe Jazzband roadies have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are not\naligned to this Code of Conduct, or to ban temporarily or permanently any contributor\nfor other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, the roadies commit themselves to fairly and\nconsistently applying these principles to every aspect of managing the jazzband\nprojects. Roadies who do not follow or enforce the Code of Conduct may be permanently\nremoved from the Jazzband roadies.\n\nThis code of conduct applies both within project spaces and in public spaces when an\nindividual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by\ncontacting the roadies at `roadies@jazzband.co`. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and appropriate to\nthe circumstances. Roadies are obligated to maintain confidentiality with regard to the\nreporter of an incident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version\n1.3.0, available at [https://contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: https://contributor-covenant.org\n[version]: https://contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 10.662109375,
          "content": "# History\n\n## 3.7.0 (2024-10-08)\n\n### Improvements\n\n- Add support for Python 3.13 (#592)\n- Drop support for EOL Python 3.8 (#598)\n- Add styling to datetime, date and time values for ODS (#594)\n- Add styling for date/time types for XLS (#596)\n\n### Bugfixes\n\n- Fix time and datetime export in ODS format (#595)\n- Avoid normalizing input twice in `import_set`/`book` (#591)\n\n## 3.6.1 (2024-04-04)\n\n### Bugfixes\n\n- Fix broken installs with pip failing to resolve the request for `tablib[html]` in some cases (#588).\n\n## 3.6.0 (2024-03-23)\n\n### Improvements\n\n- It's now possible to access a dataset row using its index without slicing (#24).\n- The dataset `transpose()` method can be called on datasets without headers.\n- The html format now supports importing from HTML content (#243)\n- The ODS format now supports importing from .ods files (#567). The support is\n  still a bit experimental.\n- When adding rows to a dataset with dynamic columns, it's now possible to\n  provide only static values, and dynamic column values will be automatically\n  calculated and added to the row (#572).\n\n### Changes\n\n- The html export format does not depend on MarkupPy any longer, therefore the\n  tablib[html] install target was removed also.\n\n### Bugfixes\n\n- Fix crash when loading a databook from an XLS file (#522).\n- `None` Python values are now converted to the empty string by the ODS formatter.\n- When applying formatters, the internal data is no longer mutated (#578).\n- Columns can be inserted even when a dataset has headers but no values (#583).\n\n## 3.5.0 (2023-06-11)\n\n### Improvements\n\n- Add support for Python 3.12 (#550)\n- Drop support for EOL Python 3.7 (#551)\n- Allow importing 'ragged' .xlsx files through dataset (#547)\n- Release: replace deprecated `repository_url` with `repository-url` (#545)\n\n## 3.4.0 (2023-03-24)\n\n### Improvements\n\n- Move setup to `pyproject.toml` (#542)\n- xlsx export: remove redundant code (#541)\n- xlsx export: support escape of formulae (#540)\n- Add &lt;tbody&gt; tags to HTML output (#539)\n- Check for type list and improve error msg (#524)\n\n### Bugfixes\n\n- Fix bug when yaml file is empty (#535)\n- Fix linting issues raised by Flake8 (#536)\n\n## 3.3.0 (2022-12-10)\n\n### Improvements\n\n- Add support for Python 3.11 (#525).\n- ODS export: integers/floats/decimals are exported as numbers (#527).\n\n## 3.2.1 (2022-04-09)\n\n### Bugfixes\n\n- Support solo CR in text input imports (#518).\n\n## 3.2.0 (2022-01-27)\n\n### Changes\n\n- Dropped Python 3.6 support (#513).\n\n### Bugfixes\n\n- Corrected order of arguments to a regex call in `safe_xlsx_sheet_title` (#510).\n\n## 3.1.0 (2021-10-26)\n\n### Improvements\n\n- Add support for Python 3.10 (#504).\n- The csv, xls, and xlsx formats gained support for the `skip_lines` keyword\n  argument for their `import_set()` method to be able to skip the nth first\n  lines of a read file (#497).\n\n### Bugfixes\n\n- Avoided mutable parameter defaults (#494).\n- Specify build backend for editable installs (#501).\n- Doubled sample size passed to `csv.Sniffer()` in `_csv.detect()` (#503).\n\n## 3.0.0 (2020-12-05)\n\n### Breaking changes\n\n- Dropped Python 3.5 support.\n- JSON-exported data is no longer forced to ASCII characters.\n- YAML-exported data is no longer forced to ASCII characters.\n\n### Improvements\n\n- Added Python 3.9 support.\n- Added read_only option to xlsx file reader (#482).\n\n### Bugfixes\n\n- Prevented crash in rst export with only-space strings (#469).\n\n## 2.0.0 (2020-05-16)\n\n### Breaking changes\n\n- The `Row.lpush/rpush` logic was reversed. `lpush` was appending while `rpush`\n  and `append` were prepending. This was fixed (reversed behavior). If you\n  counted on the broken behavior, please update your code (#453).\n\n### Bugfixes\n\n- Fixed minimal openpyxl dependency version to 2.6.0 (#457).\n- Dates from xls files are now read as Python datetime objects (#373).\n- Allow import of \"ragged\" xlsx files (#465).\n\n### Improvements\n\n- When importing an xlsx file, Tablib will now read cell values instead of formulas (#462).\n\n## 1.1.0 (2020-02-13)\n\n### Deprecations\n\n- Upcoming breaking change in Tablib 2.0.0: the `Row.lpush/rpush` logic is reversed.\n  `lpush` is appending while `rpush` and `append` are prepending. The broken behavior\n  will remain in Tablib 1.x and will be fixed (reversed) in Tablib 2.0.0 (#453). If you\n  count on the broken behavior, please update your code when you upgrade to Tablib 2.x.\n\n### Improvements\n\n- Tablib is now able to import CSV content where not all rows have the same\n  length. Missing columns on any line receive the empty string (#226).\n\n## 1.0.0 (2020-01-13)\n\n### Breaking changes\n\n- Dropped Python 2 support\n- Dependencies are now all optional. To install `tablib` as before with all\n  possible supported formats, run `pip install tablib[all]`\n\n### Improvements\n\n- Formats can now be dynamically registered through the\n  `tablib.formats.registry.refister` API (#256).\n- Tablib methods expecting data input (`detect_format`, `import_set`,\n  `Dataset.load`, `Databook.load`) now accepts file-like objects in addition\n  to raw strings and bytestrings (#440).\n\n### Bugfixes\n\n- Fixed a crash when exporting an empty string with the ReST format (#368)\n- Error cells from imported .xls files contain now the error string (#202)\n\n## 0.14.0 (2019-10-19)\n\n### Deprecations\n\n- The 0.14.x series will be the last to support Python 2\n\n### Breaking changes\n\n- Dropped Python 3.4 support\n\n### Improvements\n\n- Added Python 3.7 and 3.8 support\n- The project is now maintained by the Jazzband team, https://jazzband.co\n- Improved format autodetection and added autodetection for the odf format.\n- Added search to all documentation pages\n- Open xlsx workbooks in read-only mode (#316)\n- Unpin requirements\n- Only install backports.csv on Python 2\n\n### Bugfixes\n\n- Fixed `DataBook().load` parameter ordering (first stream, then format).\n- Fixed a regression for xlsx exports where non-string values were forced to\n  strings (#314)\n- Fixed xlsx format detection (which was often detected as `xls` format)\n\n## 0.13.0 (2019-03-08)\n\n- Added reStructuredText output capability (#336)\n- Added Jira output capability\n- Stopped calling openpyxl deprecated methods (accessing cells, removing sheets)\n  (openpyxl minimal version is now 2.4.0)\n- Fixed a circular dependency issue in JSON output (#332)\n- Fixed Unicode error for the CSV export on Python 2 (#215)\n- Removed usage of optional `ujson` (#311)\n- Dropped Python 3.3 support\n\n## 0.12.1 (2017-09-01)\n\n- Favor `Dataset.export(<format>)` over `Dataset.<format>` syntax in docs\n- Make Panda dependency optional\n\n## 0.12.0 (2017-08-27)\n\n- Add initial Panda DataFrame support\n- Dropped Python 2.6 support\n\n## 0.11.5 (2017-06-13)\n\n- Use `yaml.safe_load` for importing yaml.\n\n## 0.11.4 (2017-01-23)\n\n- Use built-in `json` package if available\n- Support Python 3.5+ in classifiers\n\n### Bugfixes\n\n- Fixed textual representation for Dataset with no headers\n- Handle decimal types\n\n## 0.11.3 (2016-02-16)\n\n- Release fix.\n\n## 0.11.2 (2016-02-16)\n\n### Bugfixes\n\n- Fix export only formats.\n- Fix for xlsx output.\n\n## 0.11.1 (2016-02-07)\n\n### Bugfixes\n\n- Fixed packaging error on Python 3.\n\n\n## 0.11.0 (2016-02-07)\n\n### New Formats!\n\n- Added LaTeX table export format (`Dataset.latex`).\n- Support for dBase (DBF) files (`Dataset.dbf`).\n\n### Improvements\n\n- New import/export interface (`Dataset.export()`, `Dataset.load()`).\n- CSV custom delimiter support (`Dataset.export('csv', delimiter='$')`).\n- Adding ability to remove duplicates to all rows in a dataset (`Dataset.remove_duplicates()`).\n- Added a mechanism to avoid `datetime.datetime` issues when serializing data.\n- New `detect_format()` function (mostly for internal use).\n- Update the vendored unicodecsv to fix `None` handling.\n- Only freeze the headers row, not the headers columns (xls).\n\n### Breaking Changes\n\n- `detect()` function removed.\n\n### Bugfixes\n\n- Fix XLSX import.\n- Bugfix for `Dataset.transpose().transpose()`.\n\n\n## 0.10.0 (2014-05-27)\n\n* Unicode Column Headers\n* ALL the bugfixes!\n\n## 0.9.11 (2011-06-30)\n\n* Bugfixes\n\n## 0.9.10 (2011-06-22)\n\n* Bugfixes\n\n## 0.9.9 (2011-06-21)\n\n* Dataset API Changes\n* `stack_rows` => `stack`, `stack_columns` => `stack_cols`\n* column operations have their own methods now (`append_col`, `insert_col`)\n* List-style `pop()`\n* Redis-style `rpush`, `lpush`, `rpop`, `lpop`, `rpush_col`, and `lpush_col`\n\n## 0.9.8 (2011-05-22)\n\n* OpenDocument Spreadsheet support (.ods)\n* Full Unicode TSV support\n\n\n## 0.9.7 (2011-05-12)\n\n* Full XLSX Support!\n* Pickling Bugfix\n* Compat Module\n\n\n## 0.9.6 (2011-05-12)\n\n* `seperators` renamed to `separators`\n* Full unicode CSV support\n\n\n## 0.9.5 (2011-03-24)\n\n* Python 3.1, Python 3.2 Support (same code base!)\n* Formatter callback support\n* Various bug fixes\n\n\n\n## 0.9.4 (2011-02-18)\n\n* Python 2.5 Support!\n* Tox Testing for 2.5, 2.6, 2.7\n* AnyJSON Integrated\n* OrderedDict support\n* Caved to community pressure (spaces)\n\n\n## 0.9.3 (2011-01-31)\n\n* Databook duplication leak fix.\n* HTML Table output.\n* Added column sorting.\n\n\n## 0.9.2 (2010-11-17)\n\n* Transpose method added to Datasets.\n* New frozen top row in Excel output.\n* Pickling support for Datasets and Rows.\n* Support for row/column stacking.\n\n\n## 0.9.1 (2010-11-04)\n\n* Minor reference shadowing bugfix.\n\n\n## 0.9.0 (2010-11-04)\n\n* Massive documentation update!\n* Tablib.org!\n* Row tagging and Dataset filtering!\n* Column insert/delete support\n* Column append API change (header required)\n* Internal Changes (Row object and use thereof)\n\n\n## 0.8.5 (2010-10-06)\n\n* New import system. All dependencies attempt to load from site-packages,\n  then fallback on tenderized modules.\n\n\n## 0.8.4 (2010-10-04)\n\n* Updated XLS output: Only wrap if '\\\\n' in cell.\n\n\n## 0.8.3 (2010-10-04)\n\n* Ability to append new column passing a callable\n  as the value that will be applied to every row.\n\n\n## 0.8.2 (2010-10-04)\n\n* Added alignment wrapping to written cells.\n* Added separator support to XLS.\n\n\n## 0.8.1 (2010-09-28)\n\n* Packaging Fix\n\n\n## 0.8.0 (2010-09-25)\n\n* New format plugin system!\n* Imports! ELEGANT Imports!\n* Tests. Lots of tests.\n\n\n## 0.7.1 (2010-09-20)\n\n* Reverting methods back to properties.\n* Windows bug compensated in documentation.\n\n\n## 0.7.0 (2010-09-20)\n\n* Renamed DataBook Databook for consistency.\n* Export properties changed to methods (XLS filename / StringIO bug).\n* Optional Dataset.xls(path='filename') support (for writing on windows).\n* Added utf-8 on the worksheet level.\n\n\n## 0.6.4 (2010-09-19)\n\n* Updated unicode export for XLS.\n* More exhaustive unit tests.\n\n\n## 0.6.3 (2010-09-14)\n\n* Added Dataset.append() support for columns.\n\n\n## 0.6.2 (2010-09-13)\n\n* Fixed Dataset.append() error on empty dataset.\n* Updated Dataset.headers property w/ validation.\n* Added Testing Fixtures.\n\n## 0.6.1 (2010-09-12)\n\n* Packaging hotfixes.\n\n\n## 0.6.0 (2010-09-11)\n\n* Public Release.\n* Export Support for XLS, JSON, YAML, and CSV.\n* DataBook Export for XLS, JSON, and YAML.\n* Python Dict Property Support.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "Copyright 2016 Kenneth Reitz\nCopyright 2019 Jazzband\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.73046875,
          "content": "# Tablib: format-agnostic tabular dataset library\n\n[![Jazzband](https://jazzband.co/static/img/badge.svg)](https://jazzband.co/)\n[![PyPI version](https://img.shields.io/pypi/v/tablib.svg)](https://pypi.org/project/tablib/)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/tablib.svg)](https://pypi.org/project/tablib/)\n[![PyPI downloads](https://img.shields.io/pypi/dm/tablib.svg)](https://pypistats.org/packages/tablib)\n[![GitHub Actions status](https://github.com/jazzband/tablib/workflows/Test/badge.svg)](https://github.com/jazzband/tablib/actions)\n[![codecov](https://codecov.io/gh/jazzband/tablib/branch/master/graph/badge.svg)](https://codecov.io/gh/jazzband/tablib)\n[![GitHub](https://img.shields.io/github/license/jazzband/tablib.svg)](LICENSE)\n\n    _____         ______  ___________ ______\n    __  /_______ ____  /_ ___  /___(_)___  /_\n    _  __/_  __ `/__  __ \\__  / __  / __  __ \\\n    / /_  / /_/ / _  /_/ /_  /  _  /  _  /_/ /\n    \\__/  \\__,_/  /_.___/ /_/   /_/   /_.___/\n\n\nTablib is a format-agnostic tabular dataset library, written in Python.\n\nOutput formats supported:\n\n- Excel (Sets + Books)\n- JSON (Sets + Books)\n- YAML (Sets + Books)\n- Pandas DataFrames (Sets)\n- HTML (Sets)\n- Jira (Sets)\n- LaTeX (Sets)\n- TSV (Sets)\n- ODS (Sets)\n- CSV (Sets)\n- DBF (Sets)\n\nNote that tablib *purposefully* excludes XML support. It always will. (Note: This is a\njoke. Pull requests are welcome.)\n\nTablib documentation is graciously hosted on https://tablib.readthedocs.io\n\nIt is also available in the ``docs`` directory of the source distribution.\n\nMake sure to check out [Tablib on PyPI](https://pypi.org/project/tablib/)!\n\n## Contribute\n\nPlease see the [contributing guide](https://github.com/jazzband/tablib/blob/master/.github/CONTRIBUTING.md).\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 1.0810546875,
          "content": "# Release checklist\n\nJazzband guidelines: https://jazzband.co/about/releases\n\n* [ ] Get master to the appropriate code release state.\n      [GitHub Actions](https://github.com/jazzband/tablib/actions)\n      should pass on master.\n      [![GitHub Actions status](https://github.com/jazzband/tablib/workflows/Test/badge.svg)](https://github.com/jazzband/tablib/actions)\n\n* [ ] Check [HISTORY.md](https://github.com/jazzband/tablib/blob/master/HISTORY.md),\n      update version number and release date\n\n* [ ] Create new GitHub release: https://github.com/jazzband/tablib/releases/new\n  * Tag:\n    * Click \"Choose a tag\"\n    * Enter new tag: \"v3.4.0\"\n    * Click \"**Create new tag: v3.4.0** on publish\"\n  * Title: Leave blank, will be same as tag\n  * Click \"Generate release notes\" and edit as required\n  * Click \"Publish release\"\n\n* [ ] Once GitHub Actions has built and uploaded distributions, check files at\n      [Jazzband](https://jazzband.co/projects/tablib) and release to\n      [PyPI](https://pypi.org/pypi/tablib)\n\n* [ ] Check installation:\n```bash\npip uninstall -y tablib && pip install -U tablib\n```\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.6806640625,
          "content": "[build-system]\nrequires = [\"setuptools>=58\", \"setuptools_scm[toml]>=6.2\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"tablib\"\ndescription = \"Format agnostic tabular data library (XLS, JSON, YAML, CSV, etc.)\"\nreadme = \"README.md\"\nlicense = {text = \"MIT License\"}\nauthors = [\n    {name = \"Kenneth Reitz\", email = \"me@kennethreitz.org\"}\n]\nmaintainers = [\n    {name = \"Jazzband Team\", email = \"roadies@jazzband.co\"},\n    {name = \"Hugo van Kemenade\"},\n    {name = \"Claude Paroz\", email = \"claude@2xlibre.net\"},\n]\nrequires-python = \">=3.9\"\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"Natural Language :: English\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n]\ndynamic = [\"version\"]\n\n[project.optional-dependencies]\nall = [\n    \"odfpy\",\n    \"openpyxl>=2.6.0\",\n    \"pandas\",\n    \"pyyaml\",\n    \"tabulate\",\n    \"xlrd\",\n    \"xlwt\",\n]\ncli = [\"tabulate\"]\nhtml = []\nods = [\"odfpy\"]\npandas = [\"pandas\"]\nxls = [\"xlrd\", \"xlwt\"]\nxlsx = [\"openpyxl>=2.6.0\"]\nyaml = [\"pyyaml\"]\n\n[project.urls]\nhomepage = \"https://tablib.readthedocs.io\"\ndocumentation = \"https://tablib.readthedocs.io\"\nrepository = \"https://github.com/jazzband/tablib\"\nchangelog = \"https://github.com/jazzband/tablib/blob/master/HISTORY.md\"\n\n[tool.setuptools_scm]\nwrite_to = \"src/tablib/_version.py\"\n\n[tool.isort]\nprofile = \"black\"\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.1484375,
          "content": "[pytest]\nnorecursedirs = .git .*\naddopts = -rsxX --showlocals --tb=native --cov=tablib --cov=tests --cov-report xml --cov-report term --cov-report html\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.5478515625,
          "content": "[tox]\nusedevelop = true\nminversion = 2.4\nenvlist =\n    docs\n    lint\n    py{39,310,311,312,313}\n\n[testenv]\ndeps =\n    -rtests/requirements.txt\ncommands_pre =\n    - {envpython} -m pip install --only-binary :all: pandas\npassenv =\n    FORCE_COLOR\ncommands =\n    pytest {posargs:tests}\n\n[testenv:docs]\ndeps =\n    sphinx\ncommands =\n    sphinx-build -b html -d {envtmpdir}/doctrees docs {envtmpdir}/html\n\n[testenv:lint]\ndeps =\n    pre-commit\n    build\n    twine\ncommands =\n    pre-commit run --all-files\n    python -m build\n    twine check dist/*\nskip_install = true\n"
        }
      ]
    }
  ]
}