{
  "metadata": {
    "timestamp": 1736559911764,
    "page": 671,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "maxcountryman/flask-login",
      "stars": 3593,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2119140625,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nend_of_line = lf\ncharset = utf-8\nmax_line_length = 88\n\n[*.{yml,yaml,json,js,css,html}]\nindent_size = 2\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.255859375,
          "content": "# move to src directory\n610b99845e667c81e2d422531476f2ea4fecdb04\n# apply pyupgrade\n6032c9a193170f11ef9c6e0d225c41e9c12d3d4a\n# apply reorder_python_imports\n379166376da287bf4ee5b2e87e25c8ebf1b2bfd1\n# apply black formatting\n379166376da287bf4ee5b2e87e25c8ebf1b2bfd1\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1220703125,
          "content": ".idea/\n.vscode/\n__pycache__/\n*.pyc\n.pytest_cache/\n.ruff_cache/\n.tox/\n.coverage\n.coverage.*\nhtmlcov/\ndocs/_build/\ndist/\nvenv/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3974609375,
          "content": "ci:\n  autoupdate_schedule: monthly\nrepos:\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.1.3\n    hooks:\n      - id: ruff\n      - id: ruff-format\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: check-merge-conflict\n      - id: debug-statements\n      - id: fix-byte-order-marker\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.2041015625,
          "content": "version: 2\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: '3.12'\npython:\n  install:\n    - requirements: requirements/docs.txt\n    - method: pip\n      path: .\nsphinx:\n  builder: dirhtml\n  fail_on_warning: true\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 7.4921875,
          "content": "Flask-Login Changelog\n=====================\n\nVersion 0.7.0\n-------------\n\nUnreleased\n\n- Bump to Python >= 3.8.\n- Bump to Flask >= 2.3.0.\n- Bump to Werkzeug >= 2.3.2.\n- Remove previously deprecated code. #694\n- Deprecate the `__about__` module and `__version__` attribute. Use `importlib.metadata`\n  to get library information instead. #701\n- Use modern `pyproject.toml` project metadata. Use flit_core instead of setuptools as\n  build backend.\n- Use `datetime.now(timezone.utc)` instead of deprecated `datetime.utcnow`. #758\n- Never look at the `X-Forwarded-For` header, always use `request.remote_addr`,\n  requiring the developer to configure `ProxyFix` appropriately. #700\n- Remove `LOGIN_DISABLED` config. #697\n\n\nVersion 0.6.3\n-------------\n\nReleased 2023-10-30\n\n-   Compatibility with Flask 3 and Werkzeug 3. #813\n\n\nVersion 0.6.2\n-------------\n\nReleased on July 25th, 2022\n\n- Fix compatibility with Werkzeug 2.2 and Flask 2.2. #691\n- Revert change to `expand_login_view` that attempted to preserve a\n  dynamic subdomain value. Such values should be handled using\n  `app.url_value_preprocessor` and `app.url_defaults`. #691\n- Ensure deprecation warnings are present for deprecated features that\n  will be removed in the next feature release.\n  - Use `request_loader` instead of `header_loader`.\n  - Use `user_loaded_from_request` instead of `user_loaded_from_header`.\n  - Use `app.config[\"LOGIN_DISABLED\"]` instead of `_login_disabled`.\n  - Use `init_app` instead of `setup_app`.\n\nVersion 0.6.1\n-------------\n\nReleased on May 1st, 2022\n\n- Only preserve subdomain or host view args in unauthorized redirect #663\n- The new utility function `login_remembered` returns `True` if the current\n  login is remembered across sessions. #654\n- Fix side effect potentially executing view twice for same request. #666\n- Clarify usage of FlaskLoginClient test client in docs. #668\n\nVersion 0.6.0\n-------------\n\nReleased on March 30th, 2022\n\n- Drop support for Python 2.7, 3.5, and 3.6, which have all reached the\n  end of their official support. #594, #638\n- The minimum supported version of Flask is 1.0.4, and Werkzeug is\n  1.0.1. However, projects are advised to use the latest versions of\n  both. #639\n- Only flash \"needs_refresh_message\" if value is set #464\n- Modify `expand_login_view` to allow for subdomain and host matching for `login_view` #462\n- Add accessors for `request_loader` and `user_loader` callback functions #472\n- Change \"remember_me\" cookie to match Werkzeug default value #488\n- Change \"remember_me\" cookie to `HttpOnly`, matching Flask session cookie #488\n- Add example for using `unauthorized_handler` #492\n- Fix `assertEqual` deprecation warning in pytest #518\n- Fix `collections` deprecation warning under Python 3.8 #525\n- Replace `safe_str_cmp` with `hmac.compare_digest` #585\n- Document `REMEMBER_COOKIE_SAMESITE` config #577\n- Revise setup.py to use README.md for long description #598\n- Various documentation corrections #484, #482, #487, #534\n- Fix `from flask_login import *` behavior, although note that\n `import *` is not usually a good pattern in code. #485\n- `UserMixin.is_authenticated` will return whatever `is_active` returns\n  by default. This prevents inactive users from logging in. #486, #530\n- Session protection will only mark the session as not fresh if it's not\n  already marked as such, avoiding modifying the session cookie\n  unnecessarily. #612\n\nVersion 0.5.0\n-------------\n\nReleased on February 9th, 2020\n\n- New custom test client: `flask_login.FlaskLoginClient`.\n  You can use this to write clearer automated tests. #431\n- Prefix authenticated user_id, remember, and remember_seconds in Flask Session\n  with underscores to prevent accidental usage in application code. #470\n- Simplify user loading. #378\n- Various documentation improvements. #393, #394, #397, #417\n- Set session ID when setting next. #403\n- Clear session identifier on logout. #404\n- Ensure use of a safe and up-to-date version of Flask.\n- Drop support of Python versions: 2.6, 3.3, 3.4 #450\n\nVersion 0.4.1\n-------------\n\nReleased on December 2nd, 2017\n\n- New config option USE_SESSION_FOR_NEXT to enable storing next url in session\n  instead of url. #330\n- Accept int seconds along with timedelta for REMEMBER_COOKIE_DURATION. #370\n- New config option FORCE_HOST_FOR_REDIRECTS to force host for redirects. #371\n\n\nVersion 0.4.0\n-------------\n\nReleased on October 26th, 2016\n\n- Fixes OPTIONS exemption from login. #244\n- Fixes use of MD5 by replacing with SHA512. #264\n- BREAKING: The `login_manager.token_handler` function, `get_auth_token` method\n  on the User class, and the `utils.make_secure_token` utility function have\n  been removed to prevent users from creating insecure auth implementations.\n  Use the `Alternative Tokens` example from the docs instead. #291\n\n\nVersion 0.3.2\n-------------\n\nReleased on October 8th, 2015\n\n- Fixes Python 2.6 compatibility.\n- Updates SESSION_KEYS to include \"remember\".\n\n\nVersion 0.3.1\n-------------\n\nReleased on September 30th, 2015\n\n- Fixes removal of non-Flask-Login keys from session object when using 'strong'\n  protection.\n\n\nVersion 0.3.0\n-------------\n\nReleased on September 10th, 2015\n\n- Fixes handling of X-Forward-For header.\n- Update to use SHA512 instead of MD5 for session identifier creation.\n- Fixes session creation for every view.\n- BREAKING: UTC used to set cookie duration.\n- BREAKING: Non-fresh logins now returns HTTP 401.\n- Support unicode user IDs in cookie.\n- Fixes user_logged_out signal invocation.\n- Support for per-Blueprint login views.\n- BREAKING: The `is_authenticated`, `is_active`, and `is_anonymous` members of\n  the user class are now properties, not methods. Applications should update\n  their user classes accordingly.\n- Various other improvements including documentation and code clean up.\n\n\nVersion 0.2.11\n--------------\n\nReleased on May 19th, 2014\n\n- Fixes missing request loader invocation when authorization header exists.\n\n\nVersion 0.2.10\n--------------\n\nReleased on March 9th, 2014\n\n- Generalized `request_loader` introduced; ability to log users in via\n  customized callback over request.\n- Fixes request context dependency by explicitly checking `has_request_context`.\n- Fixes remember me issues since lazy user loading changes.\n\n\nVersion 0.2.9\n-------------\n\nReleased on December 28th, 2013\n\n- Fixes anonymous user assignment.\n- Fixes localization in Python 3.\n\n\nVersion 0.2.8\n-------------\n\nReleased on December 21st 2013\n\n- Support login via authorization header. This allows login via Basic Auth, for\n  example. Useful in an API presentation context.\n- Ability to override user ID method name. This is useful if the ID getter is\n  named differently than the default.\n- Session data is now only read when the user is requested. This can be\n  beneficial for cookie and caching control when differenting between\n  requests that use user information for rendering and ones where all users\n  (including anonymous) get the same result (e.g. static pages)\n- BREAKING: User *must* always be accessed through the ``current_user``\n  local. This breaks any previous direct access to ``_request_ctx.top.user``.\n  This is because user is not loaded until current_user is accessed.\n- Fixes unnecessary access to the session when the user is anonymous\n  and session protection is active.\n  see https://github.com/maxcountryman/flask-login/issues/120\n- Fixes issue where order dependency of applying the login manager\n  before dependent applications was required.\n  see https://github.com/mattupstate/flask-principal/issues/22\n- Fixes Python 3 ``UserMixin`` hashing.\n- Fixes incorrect documentation.\n\n\nPrevious Versions\n=================\n\nPrior to 0.2.8, no proper changelog was kept.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5908203125,
          "content": "# Contributor Guidelines\n\nFlask-Login is open source and will happily consider pull requests with bugfixes, documentation improvements, and occasionally new features. Note that major changes will generally not be accepted.\n\nBefore you submit an issue or pull request, please read the following guidelines.\n\n## Submitting Issues\n\nBefore you submit a new issue, **please review the [CHANGES](https://github.com/maxcountryman/flask-login/blob/master/CHANGES) document**. This is where you will find all major changes, including breaking changes, which may be causing your issue.\n\nDo not open a new issue before reading through CHANGES thoroughly and reviewing other open and closed issues. Duplicate issues will be closed and locked. Please do not open issues related to release deadlines: we will get to it when we can and in the meantime you are free to issue your own releases however you like.\n\nIssues should relate to specific bugs or feature requests. If this doesn't fit the profile, then please don't open an issue.\n\n## Submitting a Pull Request\n\nIf you'd like to submit PR, please make sure that all tests pass prior to submission. The README contains further instructions.\n\n## Extended Documentation\n\nSphinx-generated documentation can be found [here](https://flask-login.readthedocs.io/en/latest/). This page is updated automatically. Documentation for prior versions of the library may be found there as well. Always review this page when a problem is first encountered.\n\n## Thanks\n\nFinally this project has seen contributions from many people and we owe them a debt of gratitude for taking time to improve the project.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0341796875,
          "content": "Copyright (c) 2011 Matthew Frazier\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.7861328125,
          "content": "# Flask-Login\n\nFlask-Login provides user session management for [Flask][]. It handles the common\ntasks of logging in, logging out, and remembering your users' sessions over\nextended periods of time.\n\nFlask-Login is not bound to any particular database system or permissions\nmodel. The only requirement is that your user objects implement a few methods,\nand that you provide a callback to the extension capable of loading users from\ntheir ID.\n\nRead the documentation at <https://flask-login.readthedocs.io>.\n\n[Flask]: https://flask.palletsprojects.com\n\n\n## A Basic Example\n\nLet's walk through setting up a basic application. Note that this is a very basic guide:\nwe will be taking shortcuts here that you should never take in a real application.\n\nTo begin we'll set up a Flask app and a `LoginManager` from Flask-Login.\n\n```python\nimport flask\nimport flask_login\n\napp = flask.Flask(__name__)\napp.secret_key = \"super secret string\"  # Change this!\n\nlogin_manager = flask_login.LoginManager()\nlogin_manager.init_app(app)\n```\n\nTo keep things simple we're going to use a basic `User` class and a dictionary to\nrepresent a database of users. In a real application, this would be an actual\npersistence layer. However, it's important to point out this is a feature of\nFlask-Login: it doesn't care how your data is stored so long as you tell it how to\nretrieve it!\n\n```python\nclass User(flask_login.UserMixin):\n    def __init__(self, email, password):\n        self.id = email\n        self.password = password\n\nusers = {\"leafstorm\": User(\"leafstorm\", \"secret\")}\n```\n\nWe also need to tell the login manager how to load a user from a request by defining its\n`user_loader` callback. If no user is found it returns `None`.\n\n```python\n@login_manager.user_loader\ndef user_loader(id):\n    return users.get(id)\n```\n\nNow we're ready to define our views. The login view will populate the session with\nauthentication info. The protected view will only be avialble to authenticated users;\nvisiting it otherwise will show an error. The logout view clearing the session.\n\n```python\n@app.get(\"/login\")\ndef login():\n    return \"\"\"<form method=post>\n      Email: <input name=\"email\"><br>\n      Password: <input name=\"password\" type=password><br>\n      <button>Log In</button>\n    </form>\"\"\"\n\n@app.post(\"/login\")\ndef login():\n    user = users.get(flask.request.form[\"email\"])\n\n    if user is None or user.password != flask.request.form[\"password\"]:\n        return flask.redirect(flask.url_for(\"login\"))\n\n    flask_login.login_user(user)\n    return flask.redirect(flask.url_for(\"protected\"))\n\n@app.route(\"/protected\")\n@flask_login.login_required\ndef protected():\n    return flask.render_template_string(\n        \"Logged in as: {{ user.id }}\",\n        user=flask_login.current_user\n    )\n\n@app.route(\"/logout\")\ndef logout():\n    flask_login.logout_user()\n    return \"Logged out\"\n```\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.6171875,
          "content": "[project]\nname = \"Flask-Login\"\nversion = \"0.7.0.dev\"\ndescription = \"User authentication and session management for Flask.\"\nreadme = \"README.md\"\nlicense = { file = \"LICENSE\" }\nmaintainers = [{ name = \"Max Countryman\" }]\nauthors = [{ name = \"Matthew Frazier\" }]\nclassifiers = [\n    \"Development Status :: 4 - Beta\",\n    \"Environment :: Web Environment\",\n    \"Framework :: Flask\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n]\nrequires-python = \">=3.8\"\ndependencies = [\n    \"flask>=2.3\",\n    \"werkzeug>=2.3.2\",\n]\n\n[project.urls]\nDocumentation = \"https://flask-login.readthedocs.io\"\nSource = \"https://github.com/maxcountryman/flask-login/\"\n\n[build-system]\nrequires = [\"flit_core<4\"]\nbuild-backend = \"flit_core.buildapi\"\n\n[tool.flit.module]\nname = \"flask_login\"\n\n[tool.flit.sdist]\ninclude = [\n    \"CHANGES.md\",\n    \"tox.ini\",\n    \"requirements*/\",\n    \"docs/\",\n    \"tests/\",\n]\nexclude = [\n    \"docs/_build/\",\n]\n\n[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\nfilterwarnings = [\n    \"error\",\n]\n\n[tool.coverage.run]\nbranch = true\nsource = [\"flask_login\", \"tests\"]\n\n[tool.coverage.paths]\nsource = [\"src\", \"*/site-packages\"]\n\n[tool.ruff]\nsrc = [\"src\"]\nfix = true\nshow-fixes = true\nshow-source = true\n\n[tool.ruff.lint]\nselect = [\n    \"B\",  # flake8-bugbear\n    \"E\",  # pycodestyle error\n    \"F\",  # pyflakes\n    \"I\",  # isort\n    \"UP\",  # pyupgrade\n    \"W\",  # pycodestyle warning\n]\nignore-init-module-imports = true\n\n[tool.ruff.lint.isort]\nforce-single-line = true\norder-by-type = false\n"
        },
        {
          "name": "requirements-min",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.6591796875,
          "content": "[tox]\nenvlist =\n    py3{12,11,10,9,8}\n    py38-min\n    style\n    docs\nskip_missing_interpreters = true\n\n[testenv]\npackage = wheel\nwheel_build_env = .pkg\ndeps =\n    -r requirements/tests.txt\n    min: -r requirements-min/tests-min.txt\nconstrain_package_deps = true\nuse_frozen_constraints = true\ncommands =\n    coverage run --source=flask_login --module \\\n        pytest -v --tb=short --basetemp={envtmpdir} {posargs}\n    coverage report\n\n[testenv:style]\ndeps = pre-commit\nskip_install = true\ncommands = pre-commit run --all-files\n\n[testenv:docs]\ndeps = -r requirements/docs.txt\ncommands =\n    sphinx-build -M clean docs docs/_build\n    sphinx-build -M html docs docs/_build -W\n"
        }
      ]
    }
  ]
}