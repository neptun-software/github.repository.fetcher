{
  "metadata": {
    "timestamp": 1736559733743,
    "page": 432,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JonathanSalwan/ROPgadget",
      "stars": 4005,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "*.pyc\nbuild\ndist\nROPGadget.egg-info\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.1572265625,
          "content": "\nROPgadget project (>= v5.0)\n===================================================\n\nAuthors:\n\n* Jonathan Salwan\n* Alexey Vishnyakov\n\n\nContributors:\n\n* hugsy - Has added the --offset option\n* Francisco Falcon - Has fixed the --badbytes option and added the count/loaddb/save2db console features\n* Kevin Hamacher - Added some functionality for using ROPgadget as library. Also added support for x86(_64) jmp {r,e}sp/call {r,e}sp instructions\n* Florian Meier - Added the 64b ROP chain generation\n* √Ålvaro Felipe Melchor (increase performance)\n* Sascha Schirra (features, python3, bugs fix)\n* Stephen Edwards (increase performance)\n* Mikhail Davidov (features)\n* penguin-wwy (features)\n* Alexey Nurmukhametov (increase performance)\n* Mario Haustein (PowerPC for MachO binaries)\n* pkubaj (PowerPC 64-bit)\n* 0xMirasio (RISC-V 64 and Compressed)\n\n\n\nROPgadget initial project (<= v4.0.3)\n===================================================\n\nAuthors:\n\n* Jonathan Salwan\n* Allan Wirth\n\n\nContributors:\n\n* Hellman (Bug Fix)\n* Axel \"0vercl0k\" Souchet (Bug Fix)\n* k3rensk1 (Bug repport)\n* brianairb (Bug Fix)\n* cao (Bug Fix)\n* dark-rose (Made searching for gadgets faster)\n* Dennis Semakin (Bug Fix)\n"
        },
        {
          "name": "LICENSE_BSD.txt",
          "type": "blob",
          "size": 1.49609375,
          "content": "This is the software license for the ROPgadget project.\n\nCopyright (c) 2016-2023. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n* Neither the name of the developers nor the names of its\n  contributors may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.921875,
          "content": "ROPgadget Tool\n==============\n\nThis tool lets you search your gadgets on your binaries to facilitate your ROP\nexploitation. ROPgadget supports ELF/PE/Mach-O/Raw formats on x86, x64, ARM,\nARM64, PowerPC, SPARC, MIPS, RISC-V 64, and RISC-V Compressed architectures.\n\nInstall\n-------\n\nThe easiest way is installing ROPgadget from PyPi:\n\n    $ sudo apt install python3-pip\n    $ sudo -H python3 -m pip install ROPgadget\n    $ ROPgadget --help\n\nAlternatively you can install ROPgadget from source.\nYou have to install [Capstone](http://www.capstone-engine.org/) first.\n\nFor the Capstone's installation on nix machine:\n\n    $ sudo apt install python3-pip\n    $ sudo -H python3 -m pip install capstone\n\nCapstone supports multi-platforms (windows, ios, android, cygwin...). For the cross-compilation,\nplease refer to the https://github.com/capstone-engine/capstone/blob/master/COMPILE.TXT file.\n\nAfter Capstone is installed, ROPgadget can be used as a standalone tool:\n\n    $ python3 ROPgadget.py --help\n\nOr installed into the Python site-packages library, and executed from $PATH.\n\n    $ sudo -H python3 setup.py install\n    $ ROPgadget --help\n\nUsage\n-----\n\n    usage: ROPgadget.py [-h] [-v] [-c] [--binary <binary>] [--opcode <opcodes>]\n                        [--string <string>] [--memstr <string>] [--depth <nbyte>]\n                        [--only <key>] [--filter <key>] [--range <start-end>]\n                        [--badbytes <byte>] [--rawArch <arch>] [--rawMode <mode>]\n                        [--rawEndian <endian>] [--re <re>] [--offset <hexaddr>]\n                        [--ropchain] [--thumb] [--console] [--norop] [--nojop]\n                        [--callPreceded] [--nosys] [--multibr] [--all] [--noinstr]\n                        [--dump] [--silent] [--align ALIGN] [--mipsrop <rtype>]\n\n    description:\n      ROPgadget lets you search your gadgets on a binary. It supports several\n      file formats and architectures and uses the Capstone disassembler for\n      the search engine.\n\n    formats supported:\n      - ELF\n      - PE\n      - Mach-O\n      - Raw\n\n    architectures supported:\n      - x86\n      - x86-64\n      - ARM\n      - ARM64\n      - MIPS\n      - PowerPC\n      - Sparc\n      - RISC-V 64\n      - RISC-V Compressed\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         Display the ROPgadget's version\n      -c, --checkUpdate     Checks if a new version is available\n      --binary <binary>     Specify a binary filename to analyze\n      --opcode <opcodes>    Search opcode in executable segment\n      --string <string>     Search string in readable segment\n      --memstr <string>     Search each byte in all readable segment\n      --depth <nbyte>       Depth for search engine (default 10)\n      --only <key>          Only show specific instructions\n      --filter <key>        Suppress specific mnemonics\n      --range <start-end>   Search between two addresses (0x...-0x...)\n      --badbytes <byte>     Rejects specific bytes in the gadget's address\n      --rawArch <arch>      Specify an arch for a raw file\n                            x86|arm|arm64|sparc|mips|ppc|riscv\n      --rawMode <mode>      Specify a mode for a raw file 32|64|arm|thumb\n      --rawEndian <endian>  Specify an endianness for a raw file little|big\n      --re <re>             Regular expression\n      --offset <hexaddr>    Specify an offset for gadget addresses\n      --ropchain            Enable the ROP chain generation\n      --thumb               Use the thumb mode for the search engine (ARM only)\n      --console             Use an interactive console for search engine\n      --norop               Disable ROP search engine\n      --nojop               Disable JOP search engine\n      --callPreceded        Only show gadgets which are call-preceded\n      --nosys               Disable SYS search engine\n      --multibr             Enable multiple branch gadgets\n      --all                 Disables the removal of duplicate gadgets\n      --noinstr             Disable the gadget instructions console printing\n      --dump                Outputs the gadget bytes\n      --silent              Disables printing of gadgets during analysis\n      --align ALIGN         Align gadgets addresses (in bytes)\n      --mipsrop <rtype>     MIPS useful gadgets finder\n                            stackfinder|system|tails|lia0|registers\n\n    examples:\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --ropchain\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --depth 3\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --string \"main\"\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --string \"m..n\"\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --opcode c9c3\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --only \"mov|ret\"\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --only \"mov|pop|xor|ret\"\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --filter \"xchg|add|sub|cmov.*\"\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --norop --nosys\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --range 0x08041000-0x08042000\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --string main --range 0x080c9aaa-0x080c9aba\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --memstr \"/bin/sh\"\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --console\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-x86 --badbytes \"00|01-1f|7f|42\"\n      ROPgadget.py --binary ./test-suite-binaries/Linux_lib64.so --offset 0xdeadbeef00000000\n      ROPgadget.py --binary ./test-suite-binaries/elf-ARMv7-ls --depth 5\n      ROPgadget.py --binary ./test-suite-binaries/elf-ARM64-bash --depth 5\n      ROPgadget.py --binary ./test-suite-binaries/raw-x86.raw --rawArch=x86 --rawMode=32\n      ROPgadget.py --binary ./test-suite-binaries/elf-Linux-RISCV_64 --depth 8\n\nHow can I contribute ?\n----------------------\n\n- Add system gadgets for PPC, Sparc, ARM64 (Gadgets.addSYSGadgets()).\n- Support RISC-V 32-bit.\n- Handle bad bytes in data during ROP chain generation.\n- Manage big endian in Mach-O format like the ELF class.\n- Everything you think is cool :)\n\nBugs/Patches/Contact\n--------------------\n\nPlease, report bugs, submit pull requests, etc. on GitHub at https://github.com/JonathanSalwan/ROPgadget\n\nLicense\n-------\n\nSee LICENSE_BSD.txt and the license header on all source files.\n\nScreenshots\n-----------\n\n<img src=\"http://shell-storm.org/project/ROPgadget/x64.png\" alt=\"x64\"></img>\n\n<img src=\"http://shell-storm.org/project/ROPgadget/arm.png\" alt=\"ARM\"></img>\n\n<img src=\"http://shell-storm.org/project/ROPgadget/sparc.png\" alt=\"Sparc\"></img>\n\n<img src=\"http://shell-storm.org/project/ROPgadget/mips.png\" alt=\"MIPS\"></img>\n\n<img src=\"http://shell-storm.org/project/ROPgadget/ppc.png\" alt=\"PowerPC\"></img>\n\n<img src=\"http://shell-storm.org/project/ROPgadget/ropchain.png\" alt=\"ROP chain\"></img>\n"
        },
        {
          "name": "ROPgadget.py",
          "type": "blob",
          "size": 0.220703125,
          "content": "#!/usr/bin/env python\n## -*- coding: utf-8 -*-\n##\n##  Jonathan Salwan - 2014-05-12 - ROPgadget tool\n##\n##  http://twitter.com/JonathanSalwan\n##  http://shell-storm.org/project/ROPgadget/\n##\n\nimport ropgadget\n\nropgadget.main()\n"
        },
        {
          "name": "ropgadget",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 2.998046875,
          "content": "# All configuration for plugins and other utils is defined here.\n# Read more about `setup.cfg`:\n# https://docs.python.org/3/distutils/configfile.html\n\n\n# === Linter configuration ===\n# You can reuse this configuration in your own projects.\n# See: https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/nitpick.html\n\n[flake8]\n# Base flake8 configuration:\n# https://flake8.pycqa.org/en/latest/user/configuration.html\nformat = wemake\nshow-source = True\nstatistics = False\ndoctests = True\n\n# Plugins:\nmax-complexity = 6\nmax-line-length = 100\n\n# Self settings:\nmax-imports = 17\n\n# Excluding some directories:\nexclude =\n  .git\n  __pycache__\n  .venv\n  .eggs\n  *.egg\n  dist\n\n# Exclude some checks globally:\nignore = B001, C901, D100, D101, D102, D103, D104, D107, D205, D400, E221, E241,\n    E251, E266, E271, E272, E722, F403, F405, I004, N802, N803, N806, P101,\n    Q000, W503, W504, WPS110, WPS111, WPS112, WPS122, WPS202, WPS204, WPS210,\n    WPS212, WPS213, WPS214, WPS220, WPS221, WPS222, WPS223, WPS226, WPS229,\n    WPS231, WPS232, WPS301, WPS323, WPS336, WPS337, WPS338, WPS341, WPS347,\n    WPS412, WPS420, WPS421, WPS430, WPS432, WPS433, WPS440, WPS504, WPS514,\n    WPS515, WPS602, WPS605\n\nper-file-ignores =\n    ROPgadget.py: WPS102\n    ropgadget/__init__.py: F401\n    ropgadget/args.py: E501, WPS317, WPS318\n    ropgadget/binary.py: E501\n    ropgadget/core.py: E501, I001, S110, WPS125, WPS503, WPS513, WPS609\n    ropgadget/gadgets.py: C812, E126, E261, E501, E800, WPS318, WPS319, WPS513\n    ropgadget/loaders/__init__.py: F401\n    ropgadget/loaders/elf.py: E126, E203, E222, E501, E701, N801, WPS114,\n                              WPS115, WPS120, WPS318, WPS339\n    ropgadget/loaders/macho.py: E126, E203, E222, E501, N801, WPS114, WPS115,\n                                WPS120, WPS318, WPS339, WPS349\n    ropgadget/loaders/pe.py: E126, E203, E222, E501, N801, WPS114, WPS115,\n                             WPS120, WPS318, WPS339, WPS349\n    ropgadget/loaders/raw.py: E126, E222, E501, WPS318\n    ropgadget/loaders/universal.py: E126, E501, N801, WPS114, WPS115, WPS120,\n                                    WPS318, WPS328, WPS339, WPS519\n    ropgadget/options.py: E501, S110\n    ropgadget/ropchain/__init__.py: F401\n    ropgadget/ropchain/arch/__init__.py: F401\n    ropgadget/ropchain/arch/ropmakerx64.py: E501, S112, W605, WPS211, WPS327,\n                                            WPS503\n    ropgadget/ropchain/arch/ropmakerx86.py: E501, S112, W605, WPS211, WPS327,\n                                            WPS503\n    ropgadget/ropchain/ropmaker.py: E501, N400\n    ropgadget/updateAlert.py: E501, I001, I003, S309, W605, WPS102, WPS301\n    setup.py: E501\n\n[isort]\n# isort configuration:\n# https://github.com/timothycrosley/isort/wiki/isort-Settings\ninclude_trailing_comma = true\nuse_parentheses = true\n# See https://github.com/timothycrosley/isort#multi-line-output-modes\nmulti_line_output = 3\n# Is the same as 80 in flake8:\nline_length = 100\n\n\n[darglint]\n# darglint configuration:\n# https://github.com/terrencepreilly/darglint\nstrictness = long\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.2841796875,
          "content": "#!/usr/bin/env python\r\n\r\nimport os\r\n\r\nfrom setuptools import setup\r\n\r\npackage_name = \"ROPGadget\"\r\npackage_dir  = \"ropgadget\"\r\npackage_description = \"This tool lets you search your gadgets on your binaries to facilitate your ROP exploitation.\"\r\nlong_description = \"\"\"\r\nROPgadget supports ELF, PE, Mach-O, and Raw formats on x86, x64, ARM, ARM64, PowerPC, SPARC, MIPS, RISC-V 64, and RISC-V Compressed architectures.\r\nhttps://github.com/JonathanSalwan/ROPgadget\r\n\"\"\".strip()\r\n\r\n\r\ndef fullsplit(path, result=None):\r\n    \"\"\"\r\n    Split a pathname into components (the opposite of os.path.join) in a\r\n    platform-neutral way.\r\n    \"\"\"\r\n    if result is None:\r\n        result = []\r\n    head, tail = os.path.split(path)\r\n    if head == '':\r\n        return [tail] + result\r\n    if head == path:\r\n        return result\r\n    return fullsplit(head, [tail] + result)\r\n\r\n\r\n# Compile the list of packages available, because distutils doesn't have\r\n# an easy way to do this.\r\npackages, data_files = [], []\r\nroot_dir = os.path.dirname(__file__)\r\nif root_dir != '':\r\n    os.chdir(root_dir)\r\n\r\nfor dirpath, dirnames, filenames in os.walk(package_dir):\r\n    # Ignore dirnames that start with '.'\r\n    for i, dirname in enumerate(dirnames):\r\n        if dirname.startswith('.'):\r\n            del dirnames[i]\r\n    if '__init__.py' in filenames:\r\n        packages.append('.'.join(fullsplit(dirpath)))\r\n    elif filenames:\r\n        data_files.append([dirpath, [os.path.join(dirpath, f) for f in filenames]])\r\n\r\nversion = \"7.5\"\r\n\r\nsetup(\r\n    name             = package_name,\r\n    version          = version,\r\n    description      = package_description,\r\n    long_description = long_description,\r\n    packages         = packages,\r\n    license          = \"BSD\",\r\n    author           = \"Jonathan Salwan\",\r\n    author_email     = \"jonathan.salwan@gmail.com\",\r\n    url              = \"https://github.com/JonathanSalwan/ROPgadget\",\r\n    scripts          = ['scripts/ROPgadget'],\r\n    install_requires = ['capstone>=5.0.1'],\r\n    classifiers      = [\r\n        'Topic :: Security',\r\n        'Environment :: Console',\r\n        'Operating System :: OS Independent',\r\n        'License :: OSI Approved :: BSD License',\r\n        'Programming Language :: Python :: 2.7',\r\n        'Programming Language :: Python :: 3',\r\n        'Intended Audience :: Developers',\r\n    ],\r\n)\r\n"
        },
        {
          "name": "test-suite-binaries",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}