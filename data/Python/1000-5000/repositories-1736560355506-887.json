{
  "metadata": {
    "timestamp": 1736560355506,
    "page": 887,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "airtai/faststream",
      "stars": 3321,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codespell-whitelist.txt",
          "type": "blob",
          "size": 0.033203125,
          "content": "dependant\nunsecure\nsocio-economic\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1748046875,
          "content": "__pycache__\ndist\n.idea\nvenv*\n.venv*\n.env\n.env*\n*.lock\n.vscode\n.pypirc\n.pytest_cache\n.ruff_cache\n.mypy_cache\n.coverage*\n.cache\nhtmlcov\ntoken\n.DS_Store\n\ndocs/site/\ndocs/site_build/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.9755859375,
          "content": "# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\ndefault_stages: [pre-commit, pre-merge-commit]\nrepos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n    -   id: trailing-whitespace\n        stages: [pre-commit, pre-merge-commit, manual]\n    -   id: end-of-file-fixer\n        stages: [pre-commit, pre-merge-commit, manual]\n        exclude: |\n            (?x)^(\n                docs/docs/SUMMARY.md|\n                docs/docs/en/api/.meta.yml\n            )$\n    -   id: check-yaml\n        stages: [pre-commit, pre-merge-commit, manual]\n        exclude: 'docs/mkdocs.yml'\n    -   id: check-added-large-files\n        stages: [pre-commit, pre-merge-commit, manual]\n\n-   repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n    -   id: codespell\n        stages: [pre-commit, pre-merge-commit, manual]\n        args: [--ignore-words=.codespell-whitelist.txt]\n        exclude: |\n            (?x)^(\n                docs/overrides/home.html\n            )$\n\n-   repo: local\n    hooks:\n    -   id: lint\n        name: Linter\n        stages: [pre-commit, pre-merge-commit, manual]\n        entry: \"scripts/lint-pre-commit.sh\"\n        language: python\n        types: [python]\n        require_serial: true\n        verbose: true\n\n-   repo: local\n    hooks:\n    -   id: static-analysis\n        name: Static analysis\n        entry: \"scripts/static-pre-commit.sh\"\n        language: python\n        types: [python]\n        require_serial: true\n        verbose: true\n\n-   repo: local\n    hooks:\n    -   id: docs\n        name: Build docs\n        entry: \"scripts/build-docs-pre-commit.sh\"\n        language: python\n        files: ^docs\n        require_serial: true\n        verbose: true\n\n-   repo: https://github.com/Yelp/detect-secrets\n    rev: v1.5.0\n    hooks:\n    -   id: detect-secrets\n        args: ['--baseline', '.secrets.baseline']\n        exclude: package.lock.json\n        stages: [pre-commit, pre-merge-commit, manual]\n"
        },
        {
          "name": ".secrets.baseline",
          "type": "blob",
          "size": 4.0107421875,
          "content": "{\n  \"version\": \"1.5.0\",\n  \"plugins_used\": [\n    {\n      \"name\": \"ArtifactoryDetector\"\n    },\n    {\n      \"name\": \"AWSKeyDetector\"\n    },\n    {\n      \"name\": \"AzureStorageKeyDetector\"\n    },\n    {\n      \"name\": \"Base64HighEntropyString\",\n      \"limit\": 4.5\n    },\n    {\n      \"name\": \"BasicAuthDetector\"\n    },\n    {\n      \"name\": \"CloudantDetector\"\n    },\n    {\n      \"name\": \"DiscordBotTokenDetector\"\n    },\n    {\n      \"name\": \"GitHubTokenDetector\"\n    },\n    {\n      \"name\": \"GitLabTokenDetector\"\n    },\n    {\n      \"name\": \"HexHighEntropyString\",\n      \"limit\": 3.0\n    },\n    {\n      \"name\": \"IbmCloudIamDetector\"\n    },\n    {\n      \"name\": \"IbmCosHmacDetector\"\n    },\n    {\n      \"name\": \"IPPublicDetector\"\n    },\n    {\n      \"name\": \"JwtTokenDetector\"\n    },\n    {\n      \"name\": \"KeywordDetector\",\n      \"keyword_exclude\": \"\"\n    },\n    {\n      \"name\": \"MailchimpDetector\"\n    },\n    {\n      \"name\": \"NpmDetector\"\n    },\n    {\n      \"name\": \"OpenAIDetector\"\n    },\n    {\n      \"name\": \"PrivateKeyDetector\"\n    },\n    {\n      \"name\": \"PypiTokenDetector\"\n    },\n    {\n      \"name\": \"SendGridDetector\"\n    },\n    {\n      \"name\": \"SlackDetector\"\n    },\n    {\n      \"name\": \"SoftlayerDetector\"\n    },\n    {\n      \"name\": \"SquareOAuthDetector\"\n    },\n    {\n      \"name\": \"StripeDetector\"\n    },\n    {\n      \"name\": \"TelegramBotTokenDetector\"\n    },\n    {\n      \"name\": \"TwilioKeyDetector\"\n    }\n  ],\n  \"filters_used\": [\n    {\n      \"path\": \"detect_secrets.filters.allowlist.is_line_allowlisted\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.common.is_baseline_file\",\n      \"filename\": \".secrets.baseline\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.common.is_ignored_due_to_verification_policies\",\n      \"min_level\": 2\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_indirect_reference\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_likely_id_string\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_lock_file\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_not_alphanumeric_string\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_potential_uuid\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_prefixed_with_dollar_sign\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_sequential_string\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_swagger_file\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_templated_secret\"\n    }\n  ],\n  \"results\": {\n    \"docs/docs/en/confluent/security.md\": [\n      {\n        \"type\": \"Secret Keyword\",\n        \"filename\": \"docs/docs/en/confluent/security.md\",\n        \"hashed_secret\": \"5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8\",\n        \"is_verified\": false,\n        \"line_number\": 88,\n        \"is_secret\": false\n      }\n    ],\n    \"docs/docs/en/getting-started/config/index.md\": [\n      {\n        \"type\": \"Basic Auth Credentials\",\n        \"filename\": \"docs/docs/en/getting-started/config/index.md\",\n        \"hashed_secret\": \"35675e68f4b5af7b995d9205ad0fc43842f16450\",\n        \"is_verified\": false,\n        \"line_number\": 68,\n        \"is_secret\": false\n      }\n    ],\n    \"docs/docs/en/release.md\": [\n      {\n        \"type\": \"Basic Auth Credentials\",\n        \"filename\": \"docs/docs/en/release.md\",\n        \"hashed_secret\": \"35675e68f4b5af7b995d9205ad0fc43842f16450\",\n        \"is_verified\": false,\n        \"line_number\": 1958,\n        \"is_secret\": false\n      }\n    ],\n    \"examples/e10_middlewares.py\": [\n      {\n        \"type\": \"Basic Auth Credentials\",\n        \"filename\": \"examples/e10_middlewares.py\",\n        \"hashed_secret\": \"35675e68f4b5af7b995d9205ad0fc43842f16450\",\n        \"is_verified\": false,\n        \"line_number\": 35,\n        \"is_secret\": false\n      }\n    ],\n    \"examples/e11_settings.py\": [\n      {\n        \"type\": \"Basic Auth Credentials\",\n        \"filename\": \"examples/e11_settings.py\",\n        \"hashed_secret\": \"35675e68f4b5af7b995d9205ad0fc43842f16450\",\n        \"is_verified\": false,\n        \"line_number\": 15,\n        \"is_secret\": false\n      }\n    ]\n  },\n  \"generated_at\": \"2025-01-08T14:22:57Z\"\n}\n"
        },
        {
          "name": ".semgrepignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "docs/overrides/main.html\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 2.6181640625,
          "content": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: FastStream\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Nikita\n    family-names: Pastukhov\n    email: diementros@yandex.com\n  - given-names: Davor\n    family-names: Runje\n    email: davor@airt.ai\n    affiliation: airt\n    orcid: 'https://orcid.org/0000-0001-6912-9900'\n  - given-names: Tvrtko\n    family-names: Sternak\n    email: tvrtko@airt.ai\n    affiliation: airt\n  - given-names: Kumaran\n    family-names: Rajendhiran\n    email: kumaran@airt.ai\n    affiliation: airt\n  - given-names: Harish Mohan\n    family-names: Raj\n    email: harish@airt.ai\n    affiliation: airt\n  - given-names: Robert\n    family-names: Jambrecic\n    email: robert@airt.ai\n    affiliation: airt\n  - name: airt\n    city: Zagreb\n    email: info@airt.ai\n    website: 'https://airt.ai'\nrepository-code: 'https://github.com/airtai/faststream'\nurl: 'https://faststream.airt.ai/'\nrepository-artifact: 'https://pypistats.org/packages/faststream'\nabstract: >\n  FastStream simplifies the process of writing producers and\n  consumers for message queues, handling all the parsing,\n  networking and documentation generation automatically.\n\n  Making streaming microservices has never been easier.\n  Designed with junior developers in mind, FastStream\n  simplifies your work while keeping the door open for more\n  advanced use cases. Here's a look at the core features\n  that make FastStream a go-to framework for modern,\n  data-centric microservices.\n\n  - Multiple Brokers: FastStream provides a unified API to\n  work across multiple message brokers (Apache Kafka,\n  RabbitMQ, NATS and Redis support)\n\n  - Pydantic Validation: Leverage Pydantic's validation\n  capabilities to serialize and validate incoming messages\n\n  - Automatic Docs: Stay ahead with automatic AsyncAPI\n  documentation\n\n  - Intuitive: Full-typed editor support makes your\n  development experience smooth, catching errors before they\n  reach runtime\n\n  - Powerful Dependency Injection System: Manage your\n  service dependencies efficiently with FastStream's\n  built-in DI system\n\n  - Testable: Supports in-memory tests, making your CI/CD\n  pipeline faster and more reliable\n\n  - Extensible: Use extensions for lifespans, custom\n  serialization and middleware\n\n  - Integrations: FastStream is fully compatible with any\n  HTTP framework you want (FastAPI especially)\nkeywords:\n  - python\n  - redis\n  - distributed-systems\n  - apache kafka\n  - rabbitmq\n  - nats\n  - stream-processing\n  - asyncio\n  - asyncapi\nlicense: Apache-2.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3515625,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n<info@airt.ai>.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.5859375,
          "content": "> **_NOTE:_**  This is an auto-generated file. Please edit docs/docs/en/getting-started/contributing/CONTRIBUTING.md instead.\n\n# Development\n\nAfter cloning the project, you'll need to set up the development environment. Here are the guidelines on how to do this.\n\n## Virtual Environment with `venv`\n\nCreate a virtual environment in a directory using Python's `venv` module:\n\n```bash\npython -m venv venv\n```\n\nThat will create a `./venv/` directory with Python binaries, allowing you to install packages in an isolated environment.\n\n## Activate the Environment\n\nActivate the new environment with:\n\n```bash\nsource ./venv/bin/activate\n```\n\nEnsure you have the latest pip version in your virtual environment:\n\n```bash\npython -m pip install --upgrade pip\n```\n\n## Installing Dependencies\n\nAfter activating the virtual environment as described above, run:\n\n```bash\npip install -e \".[dev]\"\n```\n\nThis will install all the dependencies and your local **FastStream** in your virtual environment.\n\n### Using Your local **FastStream**\n\nIf you create a Python file that imports and uses **FastStream**, and run it with the Python from your local environment, it will use your local **FastStream** source code.\n\nWhenever you update your local **FastStream** source code, it will automatically use the latest version when you run your Python file again. This is because it is installed with `-e`.\n\nThis way, you don't have to \"install\" your local version to be able to test every change.\n\nTo use your local **FastStream CLI**, type:\n\n```bash\npython -m faststream ...\n```\n\n## Running Tests\n\n### Pytest\n\nTo run tests with your current **FastStream** application and Python environment, use:\n\n```bash\npytest tests\n# or\n./scripts/test.sh\n# with coverage output\n./scripts/test-cov.sh\n```\n\nIn your project, you'll find some *pytest marks*:\n\n* **slow**\n* **rabbit**\n* **kafka**\n* **nats**\n* **redis**\n* **all**\n\nBy default, running *pytest* will execute \"not slow\" tests.\n\nTo run all tests use:\n\n```bash\npytest -m 'all'\n```\n\nIf you don't have a local broker instance running, you can run tests without those dependencies:\n\n```bash\npytest -m 'not rabbit and not kafka and not nats and not redis and not confluent'\n```\n\nTo run tests based on RabbitMQ, Kafka, or other dependencies, the following dependencies are needed to be started as docker containers:\n\n```yaml\n{! includes/docker-compose.yaml !}\n```\n\nYou can start the dependencies easily using provided script by running:\n\n```bash\n./scripts/start_test_env.sh\n```\n\nOnce you are done with development and running tests, you can stop the dependencies' docker containers by running:\n\n```bash\n./scripts/stop_test_env.sh\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0966796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2024 onwards] AIRT Technologies, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.3291015625,
          "content": "# FastStream\n\n<b>Effortless event stream integration for your services</b>\n\n---\n\n<p align=\"center\">\n  <a href=\"https://trendshift.io/repositories/3043\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/3043\" alt=\"airtai%2Ffaststream | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n\n  <br/>\n  <br/>\n\n  <a href=\"https://github.com/airtai/faststream/actions/workflows/pr_tests.yaml\" target=\"_blank\">\n    <img src=\"https://github.com/airtai/faststream/actions/workflows/pr_tests.yaml/badge.svg?branch=main\" alt=\"Test Passing\"/>\n  </a>\n\n  <a href=\"https://coverage-badge.samuelcolvin.workers.dev/redirect/airtai/faststream\" target=\"_blank\">\n      <img src=\"https://coverage-badge.samuelcolvin.workers.dev/airtai/faststream.svg\" alt=\"Coverage\"/>\n  </a>\n\n  <a href=\"https://www.pepy.tech/projects/faststream\" target=\"_blank\">\n    <img src=\"https://static.pepy.tech/personalized-badge/faststream?period=month&units=international_system&left_color=grey&right_color=green&left_text=downloads/month\" alt=\"Downloads\"/>\n  </a>\n\n  <a href=\"https://pypi.org/project/faststream\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/faststream?label=PyPI\" alt=\"Package version\"/>\n  </a>\n\n  <a href=\"https://pypi.org/project/faststream\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/pyversions/faststream.svg\" alt=\"Supported Python versions\"/>\n  </a>\n\n  <br/>\n\n  <a href=\"https://github.com/airtai/faststream/actions/workflows/pr_codeql.yaml\" target=\"_blank\">\n    <img src=\"https://github.com/airtai/faststream/actions/workflows/pr_codeql.yaml/badge.svg\" alt=\"CodeQL\"/>\n  </a>\n\n  <a href=\"https://github.com/airtai/faststream/actions/workflows/pr_dependency-review.yaml\" target=\"_blank\">\n    <img src=\"https://github.com/airtai/faststream/actions/workflows/pr_dependency-review.yaml/badge.svg\" alt=\"Dependency Review\"/>\n  </a>\n\n  <a href=\"https://github.com/airtai/faststream/blob/main/LICENSE\" target=\"_blank\">\n    <img src=\"https://img.shields.io/github/license/airtai/faststream.png\" alt=\"License\"/>\n  </a>\n\n  <a href=\"https://github.com/airtai/faststream/blob/main/CODE_OF_CONDUCT.md\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/Contributor%20Covenant-2.1-4baaaa.svg\" alt=\"Code of Conduct\"/>\n  </a>\n\n  <a href=\"https://discord.gg/qFm6aSqq59\" target=\"_blank\">\n      <img alt=\"Discord\" src=\"https://img.shields.io/discord/1085457301214855171?logo=discord&label=EN\"/>\n  </a>\n\n  <a href=\"https://t.me/python_faststream\" target=\"_blank\">\n    <img alt=\"Telegram\" src=\"https://img.shields.io/badge/-telegram-black?color=blue&logo=telegram&label=RU\"/>\n  </a>\n\n  <br/>\n\n  <a href=\"https://gurubase.io/g/faststream\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/Gurubase-Ask%20FastStream%20Guru-006BFF\" alt=\"Gurubase\"/>\n  </a>\n</p>\n\n---\n\n## Features\n\n[**FastStream**](https://faststream.airt.ai/latest/) simplifies the process of writing producers and consumers for message queues, handling all the\nparsing, networking and documentation generation automatically.\n\nMaking streaming microservices has never been easier. Designed with junior developers in mind, **FastStream** simplifies your work while keeping the door open for more advanced use cases. Here's a look at the core features that make **FastStream** a go-to framework for modern, data-centric microservices.\n\n- **Multiple Brokers**: **FastStream** provides a unified API to work across multiple message brokers ([**Kafka**](https://kafka.apache.org/), [**RabbitMQ**](https://www.rabbitmq.com/), [**NATS**](https://nats.io/), [**Redis**](https://redis.io/) support)\n\n- [**Pydantic Validation**](#writing-app-code): Leverage [**Pydantic's**](https://docs.pydantic.dev/) validation capabilities to serialize and validate incoming messages\n\n- [**Automatic Docs**](#project-documentation): Stay ahead with automatic [**AsyncAPI**](https://www.asyncapi.com/) documentation\n\n- **Intuitive**: Full-typed editor support makes your development experience smooth, catching errors before they reach runtime\n\n- [**Powerful Dependency Injection System**](#dependencies): Manage your service dependencies efficiently with **FastStream**'s built-in DI system\n\n- [**Testable**](#testing-the-service): Supports in-memory tests, making your CI/CD pipeline faster and more reliable\n\n- **Extensible**: Use extensions for lifespans, custom serialization and middleware\n\n- [**Integrations**](#any-framework): **FastStream** is fully compatible with any HTTP framework you want ([**FastAPI**](#fastapi-plugin) especially)\n\nThat's **FastStream** in a nutshell—easy, efficient, and powerful. Whether you're just starting with streaming microservices or looking to scale, **FastStream** has got you covered.\n\n---\n\n**Documentation**: <a href=\"https://faststream.airt.ai/latest/\" target=\"_blank\">https://faststream.airt.ai/latest/</a>\n\n---\n\n## History\n\n**FastStream** is a new package based on the ideas and experiences gained from [**FastKafka**](https://github.com/airtai/fastkafka) and [**Propan**](https://github.com/lancetnik/propan). By joining our forces, we picked up the best from both packages and created a unified way to write services capable of processing streamed data regardless of the underlying protocol. We'll continue to maintain both packages, but new development will be in this project. If you are starting a new service, this package is the recommended way to do it.\n\n---\n\n## Install\n\n**FastStream** works on **Linux**, **macOS**, **Windows** and most **Unix**-style operating systems.\nYou can install it with `pip` as usual:\n\n```sh\npip install faststream[kafka]\n# or\npip install faststream[rabbit]\n# or\npip install faststream[nats]\n# or\npip install faststream[redis]\n```\n\nBy default **FastStream** uses **PydanticV2** written in **Rust**, but you can downgrade it manually, if your platform has no **Rust** support - **FastStream** will work correctly with **PydanticV1** as well.\n\n---\n\n## Writing app code\n\n**FastStream** brokers provide convenient function decorators `@broker.subscriber`\nand `@broker.publisher` to allow you to delegate the actual process of:\n\n- consuming and producing data to Event queues, and\n\n- decoding and encoding JSON-encoded messages\n\nThese decorators make it easy to specify the processing logic for your consumers and producers, allowing you to focus on the core business logic of your application without worrying about the underlying integration.\n\nAlso, **FastStream** uses [**Pydantic**](https://docs.pydantic.dev/) to parse input\nJSON-encoded data into Python objects, making it easy to work with structured data in your applications, so you can serialize your input messages just using type annotations.\n\nHere is an example Python app using **FastStream** that consumes data from an incoming data stream and outputs the data to another one:\n\n```python\nfrom faststream import FastStream\nfrom faststream.kafka import KafkaBroker\n# from faststream.rabbit import RabbitBroker\n# from faststream.nats import NatsBroker\n# from faststream.redis import RedisBroker\n\nbroker = KafkaBroker(\"localhost:9092\")\n# broker = RabbitBroker(\"amqp://guest:guest@localhost:5672/\")\n# broker = NatsBroker(\"nats://localhost:4222/\")\n# broker = RedisBroker(\"redis://localhost:6379/\")\n\napp = FastStream(broker)\n\n@broker.subscriber(\"in\")\n@broker.publisher(\"out\")\nasync def handle_msg(user: str, user_id: int) -> str:\n    return f\"User: {user_id} - {user} registered\"\n```\n\nAlso, **Pydantic**’s [`BaseModel`](https://docs.pydantic.dev/usage/models/) class allows you\nto define messages using a declarative syntax, making it easy to specify the fields and types of your messages.\n\n```python\nfrom pydantic import BaseModel, Field, PositiveInt\nfrom faststream import FastStream\nfrom faststream.kafka import KafkaBroker\n\nbroker = KafkaBroker(\"localhost:9092\")\napp = FastStream(broker)\n\nclass User(BaseModel):\n    user: str = Field(..., examples=[\"John\"])\n    user_id: PositiveInt = Field(..., examples=[\"1\"])\n\n@broker.subscriber(\"in\")\n@broker.publisher(\"out\")\nasync def handle_msg(data: User) -> str:\n    return f\"User: {data.user} - {data.user_id} registered\"\n```\n\n---\n\n## Testing the service\n\nThe service can be tested using the `TestBroker` context managers, which, by default, puts the Broker into \"testing mode\".\n\nThe Tester will redirect your `subscriber` and `publisher` decorated functions to the InMemory brokers, allowing you to quickly test your app without the need for a running broker and all its dependencies.\n\nUsing pytest, the test for our service would look like this:\n\n```python\n# Code above omitted 👆\n\nimport pytest\nimport pydantic\nfrom faststream.kafka import TestKafkaBroker\n\n\n@pytest.mark.asyncio\nasync def test_correct():\n    async with TestKafkaBroker(broker) as br:\n        await br.publish({\n            \"user\": \"John\",\n            \"user_id\": 1,\n        }, \"in\")\n\n@pytest.mark.asyncio\nasync def test_invalid():\n    async with TestKafkaBroker(broker) as br:\n        with pytest.raises(pydantic.ValidationError):\n            await br.publish(\"wrong message\", \"in\")\n```\n\n## Running the application\n\nThe application can be started using built-in **FastStream** CLI command.\n\nBefore running the service, install **FastStream CLI** using the following command:\n\n```shell\npip install \"faststream[cli]\"\n```\n\nTo run the service, use the **FastStream CLI** command and pass the module (in this case, the file where the app implementation is located) and the app symbol to the command.\n\n``` shell\nfaststream run basic:app\n```\n\nAfter running the command, you should see the following output:\n\n``` shell\nINFO     - FastStream app starting...\nINFO     - input_data |            - `HandleMsg` waiting for messages\nINFO     - FastStream app started successfully! To exit press CTRL+C\n```\n\nAlso, **FastStream** provides you with a great hot reload feature to improve your Development Experience\n\n``` shell\nfaststream run basic:app --reload\n```\n\nAnd multiprocessing horizontal scaling feature as well:\n\n``` shell\nfaststream run basic:app --workers 3\n```\n\nYou can learn more about **CLI** features [here](https://faststream.airt.ai/latest/getting-started/cli/)\n\n---\n\n## Project Documentation\n\n**FastStream** automatically generates documentation for your project according to the [**AsyncAPI**](https://www.asyncapi.com/) specification. You can work with both generated artifacts and place a web view of your documentation on resources available to related teams.\n\nThe availability of such documentation significantly simplifies the integration of services: you can immediately see what channels and message formats the application works with. And most importantly, it won't cost anything - **FastStream** has already created the docs for you!\n\n![HTML-page](https://github.com/airtai/faststream/blob/main/docs/docs/assets/img/AsyncAPI-basic-html-short.png?raw=true)\n\n---\n\n## Dependencies\n\n**FastStream** (thanks to [**FastDepends**](https://lancetnik.github.io/FastDepends/)) has a dependency management system similar to `pytest fixtures` and `FastAPI Depends` at the same time. Function arguments declare which dependencies you want are needed, and a special decorator delivers them from the global Context object.\n\n```python\nfrom faststream import Depends, Logger\n\nasync def base_dep(user_id: int) -> bool:\n    return True\n\n@broker.subscriber(\"in-test\")\nasync def base_handler(user: str,\n                       logger: Logger,\n                       dep: bool = Depends(base_dep)):\n    assert dep is True\n    logger.info(user)\n```\n\n---\n\n## HTTP Frameworks integrations\n\n### Any Framework\n\nYou can use **FastStream** `MQBrokers` without a `FastStream` application.\nJust *start* and *stop* them according to your application's lifespan.\n\n```python\nfrom aiohttp import web\n\nfrom faststream.kafka import KafkaBroker\n\nbroker = KafkaBroker(\"localhost:9092\")\n\n@broker.subscriber(\"test\")\nasync def base_handler(body):\n    print(body)\n\nasync def start_broker(app):\n    await broker.start()\n\nasync def stop_broker(app):\n    await broker.close()\n\nasync def hello(request):\n    return web.Response(text=\"Hello, world\")\n\napp = web.Application()\napp.add_routes([web.get(\"/\", hello)])\napp.on_startup.append(start_broker)\napp.on_cleanup.append(stop_broker)\n\nif __name__ == \"__main__\":\n    web.run_app(app)\n```\n\n### **FastAPI** Plugin\n\nAlso, **FastStream** can be used as part of **FastAPI**.\n\nJust import a **StreamRouter** you need and declare the message handler with the same `@router.subscriber(...)` and `@router.publisher(...)` decorators.\n\n```python\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\nfrom faststream.kafka.fastapi import KafkaRouter\n\nrouter = KafkaRouter(\"localhost:9092\")\n\nclass Incoming(BaseModel):\n    m: dict\n\n@router.subscriber(\"test\")\n@router.publisher(\"response\")\nasync def hello(m: Incoming):\n    return {\"response\": \"Hello, world!\"}\n\napp = FastAPI()\napp.include_router(router)\n```\n\nMore integration features can be found [here](https://faststream.airt.ai/latest/getting-started/integrations/fastapi/)\n\n---\n\n## Stay in touch\n\nPlease show your support and stay in touch by:\n\n- giving our [GitHub repository](https://github.com/airtai/faststream/) a star, and\n\n- joining our [EN Discord server](https://discord.gg/qFm6aSqq59)\n\n- joining our [RU Telegram group](https://t.me/python_faststream)\n\nYour support helps us to stay in touch with you and encourages us to\ncontinue developing and improving the framework. Thank you for your\nsupport!\n\n---\n\n## Contributors\n\nThanks to all of these amazing people who made the project better!\n\n<a href=\"https://github.com/airtai/faststream/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=airtai/faststream\"/>\n</a>\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.38671875,
          "content": "# Security Policy\n\nSecurity and stability are paramount for FastStream.\n\nLearn more below. 👇\n\n## Versions\n\nThe latest version of FastStream is actively supported.\n\nWe strongly encourage you to write tests for your application and regularly update your FastStream version after confirming that your tests pass. This ensures you benefit from the latest features, bug fixes, and **security updates**.\n\n## Reporting a Vulnerability\n\nIf you suspect a security issue, even if you are uncertain, please report it promptly. However, **do not create a public issue**.\n\nTo responsibly report a security concern, navigate to the Security tab of the repository and click on *\"Report a vulnerability\"*.\n\n![Screenshot of repo security tab showing \"Report a vulnerability\" button](https://github.com/encode/.github/raw/master/img/github-demos-private-vulnerability-reporting.png)\n\nAlternatively, you can send an email to: [info@airt.ai](info@airt.ai).\n\nEnsure your report contains sufficient detail. As with standard issue reports, a minimal, reproducible example expedites issue resolution.\n\nAlso, include the output of the following command in your report:\n\n```bash\nfaststream --version\n```\n\n## Public Discussions\n\nPlease restrain from publicly discussing potential security vulnerabilities. 🙊\n\nIt is advisable to engage in private discussions and seek solutions first to minimize potential impact.\n\n---\n\nThanks for your help!\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "faststream",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 10.7060546875,
          "content": "[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n\n[project]\nname = \"faststream\"\ndescription = \"FastStream: the simplest way to work with a messaging queues\"\nreadme = \"README.md\"\nauthors = [\n    { name = \"airt\", email = \"info@airt.ai\" },\n    { name = \"Nikita Pastukhov\", email = \"nikita@pastukhov-dev.ru\" },\n]\n\nkeywords = [\n    \"rabbitmq\",\n    \"kafka\",\n    \"framework\",\n    \"nats\",\n    \"redis\",\n    \"message brokers\",\n]\n\nrequires-python = \">=3.8\"\n\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Operating System :: OS Independent\",\n    \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Topic :: Software Development :: Libraries\",\n    \"Topic :: Software Development\",\n    \"Topic :: System :: Networking\",\n    \"Topic :: System :: Distributed Computing\",\n    \"Typing :: Typed\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Information Technology\",\n    \"Intended Audience :: System Administrators\",\n    \"Environment :: Web Environment\",\n    \"Framework :: AsyncIO\",\n    \"Framework :: Pydantic\",\n    \"Framework :: Pydantic :: 1\",\n    \"Framework :: Pydantic :: 2\",\n]\n\ndynamic = [\"version\"]\n\ndependencies = [\n    \"anyio>=3.7.1,<5\",\n    \"fast-depends>=2.4.0b0,<3.0.0\",\n    \"typing-extensions>=4.8.0\",\n]\n\n[project.optional-dependencies]\n# public distributions\nrabbit = [\"aio-pika>=9,<10\"]\n\nkafka = [\"aiokafka>=0.9,<0.13\"]\n\nconfluent = [\n    \"confluent-kafka>=2,<3; python_version < '3.13'\",\n    \"confluent-kafka>=2.6,<3; python_version >= '3.13'\",\n]\n\nnats = [\"nats-py>=2.7.0,<=3.0.0\"]\n\nredis = [\"redis>=5.0.0,<6.0.0\"]\n\notel = [\"opentelemetry-sdk>=1.24.0,<2.0.0\"]\n\ncli = [\n    \"typer>=0.9,!=0.12,<=0.15.1\",\n    \"watchfiles>=0.15.0,<1.1.0\"\n]\n\nprometheus = [\"prometheus-client>=0.20.0,<0.30.0\"]\n\n# dev dependencies\noptionals = [\"faststream[rabbit,kafka,confluent,nats,redis,otel,cli,prometheus]\"]\n\ndevdocs = [\n    \"mkdocs-material==9.5.49\",\n    \"mkdocs-static-i18n==1.2.3\",\n    \"mdx-include==1.4.2\",\n    \"mkdocstrings[python]==0.27.0\",\n    \"mkdocs-literate-nav==0.6.1\",\n    \"mkdocs-git-revision-date-localized-plugin==1.3.0\",\n    \"mike==2.1.3\",                                      # versioning\n    \"mkdocs-minify-plugin==0.8.0\",\n    \"mkdocs-macros-plugin==1.3.7\",                      # includes with variables\n    \"mkdocs-glightbox==0.4.0\",                          # img zoom\n    \"pillow\",                                           # required for mkdocs-glightbo\n    \"cairosvg\",                                         # required for mkdocs-glightbo\n    \"requests\",                                         # using in CI, do not pin it\n]\n\ntypes = [\n    \"faststream[optionals]\",\n    \"mypy==1.14.1\",\n    # mypy extensions\n    \"types-Deprecated\",\n    \"types-PyYAML\",\n    \"types-setuptools\",\n    \"types-ujson\",\n    \"types-redis\",\n    \"types-Pygments\",\n    \"types-docutils\",\n    \"types-aiofiles\",\n    \"confluent-kafka-stubs; python_version >= '3.11'\",\n]\n\nlint = [\n    \"faststream[types]\",\n    \"ruff==0.8.6\",\n    \"bandit==1.8.0\",\n    \"semgrep==1.101.0\",\n    \"codespell==2.3.0\",\n]\n\ntest-core = [\n    \"coverage[toml]==7.6.10; python_version >= '3.9'\",\n    \"coverage[toml]==7.6.1; python_version == '3.8'\",\n    \"pytest==8.3.4\",\n    \"pytest-asyncio==0.25.1; python_version >= '3.9'\",\n    \"pytest-asyncio==0.24.0; python_version == '3.8'\",\n    \"dirty-equals==0.8.0\",\n    \"typing-extensions>=4.8.0,<4.12.1; python_version < '3.9'\",  # to fix dirty-equals\n]\n\ntesting = [\n    \"faststream[test-core]\",\n    \"fastapi==0.115.6\",\n    \"pydantic-settings>=2.0.0,<3.0.0\",\n    \"httpx==0.28.1\",\n    \"PyYAML==6.0.2\",\n    \"email-validator==2.2.0\",\n]\n\ndev = [\n    \"faststream[optionals,lint,testing,devdocs]\",\n    \"pre-commit==3.5.0; python_version < '3.9'\",\n    \"pre-commit==4.0.1; python_version >= '3.9'\",\n    \"detect-secrets==1.5.0\",\n]\n\n[project.urls]\nHomepage = \"https://faststream.airt.ai/latest/\"\nDocumentation = \"https://faststream.airt.ai/latest/getting-started/\"\nTracker = \"https://github.com/airtai/FastStream/issues\"\nSource = \"https://github.com/airtai/FastStream\"\nDiscord = \"https://discord.gg/qFm6aSqq59\"\n\n[project.scripts]\nfaststream = \"faststream.__main__:cli\"\n\n[tool.hatch.version]\npath = \"faststream/__about__.py\"\n\n[tool.hatch.build]\nskip-excluded-dirs = true\nexclude = [\"/tests\", \"/docs\"]\n\n[tool.mypy]\nfiles = [\"faststream\", \"tests/mypy\"]\nstrict = true\npython_version = \"3.8\"\nignore_missing_imports = true\ninstall_types = true\nnon_interactive = true\nplugins = [\"pydantic.mypy\"]\n\n# from https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/\ndisallow_untyped_defs = true\nno_implicit_optional = true\ncheck_untyped_defs = true\nwarn_return_any = true\nshow_error_codes = true\nwarn_unused_ignores = true\n\ndisallow_incomplete_defs = true\ndisallow_untyped_decorators = true\ndisallow_any_unimported = false\n\n[tool.ruff]\nfix = true\nline-length = 88\ntarget-version = \"py38\"\ninclude = [\n    \"faststream/**/*.py\",\n    \"faststream/**/*.pyi\",\n    \"tests/**/*.py\",\n    \"docs/**/*.py\",\n    \"pyproject.toml\",\n]\nexclude = [\"docs/docs_src\"]\n\n[tool.ruff.lint]\nselect = [\n    \"E\",     # pycodestyle errors     https://docs.astral.sh/ruff/rules/#error-e\n    \"W\",     # pycodestyle warnings   https://docs.astral.sh/ruff/rules/#warning-w\n    \"C90\",   # mccabe                 https://docs.astral.sh/ruff/rules/#mccabe-c90\n    \"N\",     # pep8-naming            https://docs.astral.sh/ruff/rules/#pep8-naming-n\n    \"D\",     # pydocstyle             https://docs.astral.sh/ruff/rules/#pydocstyle-d\n    \"I\",     # isort                  https://docs.astral.sh/ruff/rules/#isort-i\n    \"F\",     # pyflakes               https://docs.astral.sh/ruff/rules/#pyflakes-f\n    \"ASYNC\", # flake8-async           https://docs.astral.sh/ruff/rules/#flake8-async-async\n    \"C4\",    # flake8-comprehensions  https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4\n    \"B\",     # flake8-bugbear         https://docs.astral.sh/ruff/rules/#flake8-bugbear-b\n    \"Q\",     # flake8-quotes          https://docs.astral.sh/ruff/rules/#flake8-quotes-q\n    \"T20\",   # flake8-print           https://docs.astral.sh/ruff/rules/#flake8-print-t20\n    \"SIM\",   # flake8-simplify        https://docs.astral.sh/ruff/rules/#flake8-simplify-sim\n    \"PT\",    # flake8-pytest-style    https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt\n    \"PTH\",   # flake8-use-pathlib     https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth\n    \"TCH\",   # flake8-type-checking   https://docs.astral.sh/ruff/rules/#flake8-type-checking-tch\n    \"RUF\",   # Ruff-specific rules    https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf\n    \"PERF\",  # Perflint               https://docs.astral.sh/ruff/rules/#perflint-perf\n    \"UP\",    # pyupgrade              https://docs.astral.sh/ruff/rules/#pyupgrade-up\n]\n\nignore = [\n    \"ASYNC109\", # own timeout implementation\n\n    \"E501\",     # line too long, handled by formatter later\n    \"C901\",     # too complex\n\n    # todo pep8-naming\n    \"N817\",     # CamelCase `*` imported as acronym `*`\n    \"N815\",     # Variable `*` in class scope should not be mixedCase\n    \"N803\",     # Argument name `expandMessageExamples` should be lowercase\n\n    # todo pydocstyle\n    \"D100\",     # missing docstring in public module\n    \"D101\",\n    \"D102\",\n    \"D103\",\n    \"D104\",     # missing docstring in public package\n    \"D105\",     # missing docstring in magic methods\n    \"D106\",     # missing docstring in public nested class\n    \"D107\",     # missing docstring in __init__\n]\n\n[tool.ruff.lint.per-file-ignores]\n\"tests/**\" = [\n    \"D101\",    # docstrings\n    \"D102\",\n    \"D103\",\n    \"PLR2004\", # magic-value-comparison\n    \"S101\",    # use assert\n]\n\n\"docs/*.py\" = [\n    \"D101\", # docstrings\n    \"D102\",\n    \"D103\",\n]\n\n\n[tool.ruff.lint.isort]\ncase-sensitive = true\n\n[tool.ruff.format]\ndocstring-code-format = true\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"google\"\n\n[tool.ruff.lint.flake8-bugbear]\nextend-immutable-calls = [\n    \"faststream.Depends\",\n    \"faststream.Context\",\n    \"faststream.broker.fastapi.context.Context\",\n    \"faststream.Header\",\n    \"faststream.Path\",\n    \"faststream.utils.Header\",\n    \"faststream.utils.Path\",\n    \"faststream.utils.Depends\",\n    \"faststream.utils.Context\",\n    \"faststream.utils.context.Depends\",\n    \"faststream.utils.context.Context\",\n    \"typer.Argument\",\n    \"typer.Option\",\n    \"pydantic.Field\",\n    \"rocketry.args.Arg\",\n    \"fastapi.Depends\",\n    \"fastapi.Header\",\n    \"fastapi.datastructures.Default\",\n    \"kafka.partitioner.default.DefaultPartitioner\",\n]\n\n[tool.pytest.ini_options]\nminversion = \"7.0\"\naddopts = \"-q -m 'not slow'\"\ntestpaths = [\"tests\"]\nmarkers = [\"rabbit\", \"kafka\", \"confluent\", \"nats\", \"redis\", \"slow\", \"all\"]\nasyncio_default_fixture_loop_scope = \"function\"\n\n[tool.coverage.run]\nparallel = true\nbranch = true\nconcurrency = [\"multiprocessing\", \"thread\"]\nsource = [\"docs/docs_src\", \"examples\", \"faststream\", \"tests\"]\ncontext = '${CONTEXT}'\nomit = [\"**/__init__.py\", \"tests/mypy/*\"]\n\n[tool.coverage.report]\nshow_missing = true\nskip_empty = true\nexclude_also = [\n    \"if __name__ == .__main__.:\",\n    \"self.logger\",\n    \"def __repr__\",\n    \"lambda: None\",\n    \"from .*\",\n    \"import .*\",\n    '@(abc\\.)?abstractmethod',\n    \"raise NotImplementedError\",\n    'raise AssertionError',\n    'logger\\..*',\n    \"pass\",\n    '\\.\\.\\.',\n]\nomit = [\n    '*/__about__.py',\n    '*/__main__.py',\n    '*/__init__.py',\n    '*/annotations.py',\n    'docs/docs_src/getting_started/serialization/avro.py',\n    'docs/docs_src/getting_started/serialization/msgpack_ex.py',\n    'docs/docs_src/getting_started/serialization/protobuf.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/aiohttp.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/blacksheep.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/falcon.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/litestar.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/quart.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/sanic.py',\n    'docs/docs_src/integrations/http_frameworks_integrations/tornado.py',\n    'examples/howto/structlogs.py',\n    'examples/serialization/avro/avro.py',\n    'examples/serialization/msgpack/pack.py',\n    'examples/serialization/protobuf/protobuf.py',\n]\n\n[tool.bandit]\n\n[tool.codespell]\nskip = \"./venv*,./docs/site/*,./htmlcov\"\nignore-words = \".codespell-whitelist.txt\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}