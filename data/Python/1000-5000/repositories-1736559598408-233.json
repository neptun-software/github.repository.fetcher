{
  "metadata": {
    "timestamp": 1736559598408,
    "page": 233,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "schenkd/nginx-ui",
      "stars": 4439,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 7.8525390625,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### VirtualEnv template\n# Virtualenv\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\n.Python\n[Bb]in\n[Ii]nclude\n[Ll]ib\n[Ll]ib64\n[Ll]ocal\n[Ss]cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n\n### macOS template\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n### VisualStudioCode template\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n\n### Linux template\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n### VirtualEnv template\n# Virtualenv\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\n\n### macOS template\n# General\n\n# Icon must end with two \\r\n\n# Thumbnails\n\n# Files that might appear in the root of a volume\n\n# Directories potentially created on remote AFP share\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n\n# Generated files\n\n# Sensitive or high-churn files\n\n# Gradle\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\n\n# Mongo Explorer plugin\n\n# File-based project format\n\n# IntelliJ\n\n# mpeltonen/sbt-idea plugin\n\n# JIRA plugin\n\n# Cursive Clojure plugin\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\n\n# Editor-based Rest Client\n\n# Android studio 3.1+ serialized cache file\n\n### Node template\n# Logs\nlogs\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n\n# next.js build output\n.next\n\n# nuxt.js build output\n.nuxt\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n### Python template\n# Byte-compiled / optimized / DLL files\n\n# C extensions\n\n# Distribution / packaging\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n\n# Installer logs\n\n# Unit test / coverage reports\n\n# Translations\n\n# Django stuff:\n\n# Flask stuff:\n\n# Scrapy stuff:\n\n# Sphinx documentation\n\n# PyBuilder\n\n# Jupyter Notebook\n\n# IPython\n\n# pyenv\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# celery beat schedule file\n\n# SageMath parsed files\n\n# Environments\n\n# Spyder project settings\n\n# Rope project settings\n\n# mkdocs documentation\n\n# mypy\n\n# Pyre type checker\n\n### VisualStudioCode template\n\n### Linux template\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n\n# KDE directory preferences\n\n# Linux trash folder which might appear on any partition or disk\n\n# .nfs files are created when an open file is removed but is still being accessed\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.396484375,
          "content": "FROM python:3.7-alpine\n\nADD requirements.txt .\n\nRUN apk add python3-dev build-base linux-headers pcre-dev && pip install --no-cache-dir -r requirements.txt\n\n# adding application files\nADD . /webapp\n\n# configure path /webapp to HOME-dir\nENV HOME /webapp\nWORKDIR /webapp\n\nENTRYPOINT [\"uwsgi\"]\nCMD [\"--http\", \"0.0.0.0:8080\", \"--wsgi-file\", \"wsgi.py\", \"--callable\", \"app\", \"--processes\", \"1\", \"--threads\", \"8\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2020 David Schenk\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.8525390625,
          "content": "# nginx ui\n\n![Docker Image CI](https://github.com/schenkd/nginx-ui/workflows/Docker%20Image%20CI/badge.svg)\n\n![Image of Nginx UI](https://i.ibb.co/XXcfsDp/Bildschirmfoto-2020-06-20-um-18-40-27.png)\n\nTable of Contents\n\n- [nginx ui](#nginx-ui)\n  - [Introduction](#introduction)\n  - [Setup](#setup)\n    - [Example](#example)\n    - [Docker](#docker)\n  - [UI](#ui)\n  - [Authentication](#authentication)\n    - [Configure the auth file](#configure-the-auth-file)\n    - [Configure nginx](#configure-nginx)\n\n## Introduction\n\nWe use nginx in our company lab environment. It often happens that my\ncolleagues have developed an application that is now deployed in our Stage\nor Prod environment. To make this application accessible nginx has to be\nadapted. Most of the time my colleagues don't have the permission to access\nthe server and change the configuration files and since I don't feel like\ndoing this for everyone anymore I thought a UI could help us all. If you\nfeel the same way I wish you a lot of fun with the application and I am\nlooking forward to your feedback, change requests or even a star.\n\n## Setup\n\nContainerization is now state of the art and therefore the application is\ndelivered in a container.\n\n### Example\n\n- `-d` run as deamon in background\n- `--restart=always` restart on crash or server reboot\n- `--name nginxui` give the container a name\n- `-v /etc/nginx:/etc/nginx` map the hosts nginx directory into the container\n- `-p 8080:8080` map host port 8080 to docker container port 8080\n\n```bash\ndocker run -d --restart=always --name nginxui -v /etc/nginx:/etc/nginx -p 8080:8080 schenkd/nginx-ui:latest\n```\n\n### Docker\n\nRepository @ [DockerHub](https://hub.docker.com/r/schenkd/nginx-ui)\n\nDocker Compose excerpt\n\n```yaml\n# Docker Compose excerpt\nservices:\n  nginx-ui:\n    image: schenkd/nginx-ui:latest\n    ports:\n      - 8080:8080\n    volumes:\n      - nginx:/etc/nginx\n```\n\n## UI\n\n![Image of Nginx UI](https://i.ibb.co/qNgBRrt/Bildschirmfoto-2020-06-21-um-10-01-46.png)\n\nWith the menu item Main Config the Nginx specific configuration files\ncan be extracted and updated. These are dynamically read from the Nginx\ndirectory. If a file has been added manually, it is immediately integrated\ninto the Nginx UI Main Config menu item.\n\n![Image of Nginx UI](https://i.ibb.co/j85XKM6/Bildschirmfoto-2020-06-21-um-10-01-58.png)\n\nAdding a domain opens an exclusive editing window for the configuration\nfile. This can be applied, deleted and enabled/disabled.\n\n## Authentication\n\n[BasicAuth with nginx](https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/)\n\nIn general, this app does not come with authentication. However, it is easy to setup basic auth to restrict unwanted access.\nHere is how this can be done when using nginx.\n\n### Configure the auth file\n\n1. Verify that `apache2-utils` (Debian, Ubuntu) or `httpd-tools` (RHEL/CentOS/Oracle Linux) is installed\n2. Run the htpasswd utility to create a new user and set a passwort.\n    - Make sure, that the directory exists\n    - Remove the `-c` flag, if you have created a user before, since it creates the inital user/passwort file\n    - `sudo htpasswd -c /etc/apache2/.htpasswd user1`\n\n### Configure nginx\n\nThe following example adds basic auth to our nginxui app running in a docker container with a mapped port 8080.\nIn this case, it will be accessible via nginx.mydomain.com\n\n```none\nserver {\n    server_name nginx.mydomain.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:8080/;\n    }\n\n    auth_basic \"nginxui secured\";\n    auth_basic_user_file /etc/apache2/.htpasswd;\n\n    # [...] ommited ssl configuration\n}\n```\n\n1. Add above nginx conf to your `/etc/nginx/my.conf` file\n2. Run `nginx -t` to make sure, that your config is valid\n3. Run `systemctl restart nginx` (or equivalent) to restart your nginx and apply the new settings\n4. Your nginx ui is now accessible at nginx.mydomain.com and will correctly prompt for basic auth\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.py",
          "type": "blob",
          "size": 0.361328125,
          "content": "import os\n\n\nclass Config(object):\n    SECRET_KEY = os.urandom(64).hex()\n\n    NGINX_PATH = '/etc/nginx'\n    CONFIG_PATH = os.path.join(NGINX_PATH, 'conf.d')\n\n    @staticmethod\n    def init_app(app):\n        pass\n\n\nclass DevConfig(Config):\n    DEBUG = True\n\n\nclass WorkingConfig(Config):\n    DEBUG = False\n\n\nconfig = {\n    'dev': DevConfig,\n    'default': WorkingConfig\n}\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.3115234375,
          "content": "version: '3'\nservices:\n  nginx-ui:\n    container_name: nginx-ui\n    build: .\n    image: nginx-ui:latest\n    ports:\n      - 8080:8080\n    volumes:\n      - nginx:/etc/nginx\n\n  nginx:\n    container_name: nginx\n    image: nginx:1.18.0-alpine\n    ports:\n      - 80:80\n    volumes:\n      - nginx:/etc/nginx\n\nvolumes:\n  nginx:"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.138671875,
          "content": "click==7.1.2\nFlask==1.1.2\nFlask-Moment==0.9.0\nitsdangerous==1.1.0\nJinja2==2.11.3\nMarkupSafe==1.1.1\npytz==2020.1\nuWSGI==2.0.18\nWerkzeug==1.0.1\n"
        },
        {
          "name": "wsgi.py",
          "type": "blob",
          "size": 0.09375,
          "content": "import os\nfrom app import create_app\n\n\napp = create_app(os.getenv('FLASK_CONFIG') or 'default')\n"
        }
      ]
    }
  ]
}