{
  "metadata": {
    "timestamp": 1736560379771,
    "page": 922,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyserial/pyserial",
      "stars": 3286,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.095703125,
          "content": "**/__pycache__\n*.pyc\n*.pyo\ndocumentation/_build\nbuild\ndist\n*.egg-info\n\n/MANIFEST\n\n.idea\nvenv\nxxx*\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2392578125,
          "content": "# Copyright Roger Meier <r.meier@siemens.com>\n# SPDX-License-Identifier:    BSD-3-Clause\n\nlanguage: python\n\npython:\n  - 2.7\n  - 3.4\n  - 3.5\n  - 3.6\n  - pypy\n  - pypy3\n\nscript:\n  - python setup.py install\n  - python test/run_all_tests.py loop://\n"
        },
        {
          "name": "CHANGES.rst",
          "type": "blob",
          "size": 27.5625,
          "content": "========================\n pySerial Release Notes\n========================\n\nVersion 1.0     13 Feb 2002\n---------------------------\n- First public release.\n- Split from the pybsl application (see http://mspgcc.sourceforge.net)\n\nNew Features:\n\n- Added Jython support\n\n\nVersion 1.1     14 Feb 2002\n---------------------------\nBugfixes:\n\n- Win32, when not specifying a timeout\n- Typos in the Docs\n\nNew Features:\n\n- added ``serialutil`` which provides a base class for the ``Serial``\n  objects.\n\n- ``readline``, ``readlines``, ``writelines`` and ``flush`` are now supported\n  see README.txt for deatils.\n\n\nVersion 1.11    14 Feb 2002\n---------------------------\nSame as 1.1 but added missing files.\n\n\nVersion 1.12    18 Feb 2002\n---------------------------\nRemoved unneeded constants to fix RH7.x problems.\n\n\nVersion 1.13    09 Apr 2002\n---------------------------\nAdded alternate way for enabling rtscts (CNEW_RTSCTS is tried too)\nIf port opening fails, a ``SerialException`` is raised on all platforms\n\n\nVersion 1.14    29 May 2002\n---------------------------\nAdded examples to archive\nAdded non-blocking mode for ``timeout=0`` (tnx Mat Martineau)\n\nBugfixes:\n\n- win32 does now return the remaining characters on timeout\n\n\nVersion 1.15    04 Jun 2002\n---------------------------\nBugfixes (win32):\n\n- removed debug messages\n- compatibility to win9x improved\n\n\nVersion 1.16    02 Jul 2002\n---------------------------\nAdded implementation of RI and corrected RTS/CTS on Win32\n\n\nVersion 1.17    03 Jul 2002\n---------------------------\nSilly mix of two versions in win32 code corrected\n\n\nVersion 1.18    06 Dec 2002\n---------------------------\nBugfixes (general):\n\n- remove the mapping of flush to the destructive flushOutput as\n  this is not the expected behaviour.\n- readline: EOL character for lines can be chosen idea by \n  John Florian.\n\nBugfixes (posix):\n\n- cygwin port numbering fixed\n- test each and every constant for it's existence in termios module,\n  use default if not existent (fix for Bug item #640214)\n- wrong exception on nonexistent ports with /dev file. bug report\n  by Louis Cordier\n\nBugfixes (win32):\n\n- RTS/CTS handling as suggested in Bug #635072\n- bugfix of timeouts brought up by Markus Hoffrogge\n\n\nVersion 1.19    19 Mar 2003\n---------------------------\nBugfixes (posix):\n\n- removed ``dgux`` entry which actually had a wrong comment and is\n  probably not in use anywhere.\n\nBugfixes (win32):\n\n- added ``int()`` conversion, [Bug 702120]\n- remove code to set control lines in close method of win32\n  version. [Bug 669625]\n\n\nVersion 1.20    28 Aug 2003\n---------------------------\n- Added ``serial.device()`` for all platforms\n\nBugfixes (win32):\n\n- don't recreate overlapped structures and events on each\n  read/write.\n- don't set unneeded event masks.\n- don't use DOS device names for ports > 9.\n- remove send timeout (it's not used in the linux impl. anyway).\n\n\nVersion 1.21    30 Sep 2003\n---------------------------\nBugfixes (win32):\n\n- name for COM10 was not built correctly, found by Norm Davis.\n\nBugfixes (examples):\n\n- small change in ``miniterm.py`` that should mage it run on cygwin,\n  [Bug 809904] submitted by Rolf Campbell.\n\n\nVersion 2.0b1    1 Oct 2003\n---------------------------\nTransition to the Python 2.0 series:\n\n- New implementation only supports Python 2.2+, backwards compatibility\n  should be maintained almost everywhere.\n  The OS handles (like the ``hComPort`` or ``fd`` attribute) were prefixed\n  with an underscore. The different names stay, as anyone that uses one of\n  these has to write platform specific code anyway.\n- Common base class ``serialutil.SerialBase`` for all implementations.\n- ``PARITY_NONE``, ``PARITY_EVEN``, ``PARITY_ODD`` constants changed and all\n  these constants moved to ``serialutil.py`` (still available as\n  ``serial.PARITY_NONE`` etc. and they should be used that way)\n- Added ``serial.PARITY_NAMES`` (implemented in ``serialutil.PARITY_NAMES``).\n  This dictionary can be used to convert parity constants to meaningful\n  strings.\n- Each Serial class and instance has a list of supported values:\n  ``BAUDRATES``, ``BYTESIZES``, ``PARITIES``, ``STOPBITS``Ggg\n  (i.e. ``serial.Serial.BAUDRATES or s = serial.Serial; s.BAUDRATES``)\n  these values can be used to fill in value sin GUI dialogs etc.\n- Creating a ``Serial()`` object without port spec returns an unconfigured,\n  closed port. Useful if a GUI dialog should take a port and configure\n  it.\n- New methods for ``serial.Serial`` instances: ``open()``, ``isOpen()``\n- A port can be opened and closed as many times as desired.\n- Instances of ``serial.Serial`` have ``baudrate``, ``bytesize``, ``timeout``\n  etc. attributes implemented as properties, all can be set while the port is\n  opened. It will then be reconfigured.\n- Improved ``__doc__``'s.\n- New ``test_advanced.py`` for the property setting/getting testing.\n- Small bugfix on posix with get* methods (return value should be true a\n  boolean).\n- added a ``__repr__`` that returns a meaningful string will all the serial\n  setting, easy for debugging.\n- The serialposix module does not throw an exception on unsupported\n  platforms, the message is still printed. The idea that it may still\n  work even if the platform itself s not known, it simply tries to do\n  the posix stuff anyway (It's likely that opening ports by number\n  fails, but by name it should work).\n\n\nVersion 2.0b2    4 Oct 2003\n---------------------------\n- Added serial port configuration dialog for wxPython to the examples.\n- Added terminal application for wxPython with wxGlade design file\n  to the examples.\n- Jython support is currently broken as Jython does not have a Python 2.2\n  compatible release out yet\n\n\nVersion 2.0      6 Nov 2003\n---------------------------\n- Fixes ``setup.py`` for older distutils\n\n\nVersion 2.1     28 Jul 2004\n---------------------------\nBugfixes:\n\n- Fix XON/XOFF values [Bug 975250]\n\nBugfixes (posix):\n\n- ``fd == 0`` fix from Vsevolod Lobko\n- netbsd fixes from Erik Lindgren\n- Dynamically lookup baudrates and some cleanups\n\nBugfixes (examples):\n\n- CRLF handling of ``miniterm.py`` should be more consistent on Win32\n  and others. Added LF only command line option\n- Multithreading fixes to ``wxTerminal.py`` (helps with wxGTK)\n- Small change for wxPython 2.5 in ``wxSerialConfigDialog.py`` [Bug 994856]\n\nNew Features:\n\n- Implement write timeouts (``writeTimeout`` parameter)\n\n\nVersion 2.2     31 Jul 2005\n---------------------------\nBugfixes:\n\n- [Bug 1014227]: property <del> broken\n- [Bug 1105687]: ``serial_tcp_example.py``: ``--localport`` option\n- [Bug 1106313]: device (port) strings cannot be unicode\n\nBugfixes (posix):\n\n- [Patch 1043436] Fix for [Bug 1043420] (OSError: EAGAIN)\n- [Patch 1102700] ``fileno()`` added\n- ensure disabled PARMRK\n\nBugfixes (win32):\n\n- [Patch 983106]: keep RTS/CTS state on port setting changes\n\nNew Features:\n\n- ``dsrdtr`` setting to enable/disable DSR/DTR flow control independently\n  from the ``rtscts`` setting. (Currently Win32 only, ignored on other\n  platforms)\n\n\nVersion 2.3     19 Jun 2008\n---------------------------\nNew Features:\n\n- iterator interface. ``for line in Serial(...): ...`` is now possible\n  Suggested by Bernhard Bender\n- ``sendBreak()`` accepts a ``duration`` argument. Default duration increased.\n- win32 handles \\\\.\\COMx format automatically for com ports of higher number\n  (COM10 is internally translated to \\\\.\\COM10 etc.)\n- miniterm.py has a new feature to send a file (upload) and configurable\n  special characters for exit and upload. Refactored internals to class based\n  structure (upload and class refactoring by Colin D Bennett)\n\nBugfixes:\n\n- [Bug 1451535] TCP/serial redirect example \"--help\"\n- update VERSION variable\n- update wxSerialConfigDialog.py and wxTerminal.py compatibility with\n  wxPython 2.8 (Peleg)\n- Check for string in write function. Using unicode causes errors, this\n  helps catching errors early (Tom Lynn)\n\nBugfixes (posix):\n\n- [Bug 1554183] setRTS/setDTR reference to non existing local \"on\"\n- [Bug 1513653] file descriptor not closed when exception is thrown\n- FreeBSD now uses cuadX instead of cuaaX (Patrick Phalen)\n\nBugfixes (win32):\n\n- [Bug 1520357] Handle leak\n- [Bug 1679013] Ignore exception raised by SetCommTimeout() in close().\n- [Bug 1938118] process hang forever under XP\n\n\nVersion 2.4      6 Jul 2008\n---------------------------\nNew Features:\n\n- [Patch 1616790] pyserial: Add inter-character timeout feature\n- [Patch 1924805] add a setBreak function\n- Add mark/space parity\n- Add .NET/Mono backend (IronPython)\n\nBugfixes (posix):\n\n- [Bug 1783159] Arbitrary baud rates (Linux/Posix)\n\nBugfixes (win32):\n\n- [Patch 1561423] Add mark/space parity, Win32\n- [Bug 2000771] serial port CANNOT be specified by number on windows\n- examples/scanwin32.py does no longer return \\\\.\\ names\n- fix \\\\.\\ handling for some cases\n\nBugfixes (jython):\n\n - The Jython backend tries javax.comm and gnu.io (Seo Sanghyeon)\n\n\nVersion 2.5-rc1  2009-07-30\n---------------------------\nNew Features:\n\n- Python 3.x support (through 2to3)\n- compatible with Python io library (Python 2.6+)\n- Support for Win32 is now written on the top of ctypes (bundled with\n  Python 2.5+) instead of pywin32 (patch by Giovanni Bajo).\n- 1.5 stop bits (STOPBITS_ONE_POINT_FIVE, implemented on all platforms)\n- miniterm application extended (CTRL+T -> menu)\n- miniterm.py is now installed as \"script\"\n- add scanlinux.py example\n- add port_publisher example\n- experimental RFC-2217 server support (examples/rfc2217_server.py)\n- add ``getSettingsDict`` and ``applySettingsDict`` serial object methods\n- use a ``poll`` based implementation on Posix, instead of a ``select`` based,\n  provides better error handling [removed again in later releases].\n\nBugfixes:\n\n- Improve and fix tcp_serial_redirector example.\n- [Bug 2603052] 5-bit mode (needs 1.5 stop bits in some cases)\n\nBugfixes (posix):\n\n- [Bug 2810169] Propagate exceptions raised in serialposix _reconfigure\n- [Bug 2562610] setting non standard baud rates on Darwin (Emmanuel Blot)\n\nBugfixes (win32):\n\n- [Bug 2469098] parity PARITY_MARK, PARITY_SPACE isn't supported on win32\n- [SF  2446218] outWaiting implemented\n- [Bug 2392892] scanwin32.py better exception handling\n- [Bug 2505422] scanwin32.py Vista 64bit compatibility\n\n\nVersion 2.5-rc2  2010-01-02\n---------------------------\nNew Features:\n\n- Documentation update, now written with Sphinx/ReST\n- Updated miniterm.py example\n- experimental RFC-2217 client support (serial.rfc2217.Serial, see docs)\n- add ``loop://`` device for testing.\n- add ``serial.serial_for_url`` factory function (support for native ports and\n  ``rfc2217``, ``socket`` and ``loop`` URLs)\n- add new example: ``rfc2217_server.py``\n- tests live in their own directory now (no longer in examples)\n\nBugfixes:\n\n- [Bug 2915810] Fix for suboption parsing in rfc2217\n- Packaging bug (missed some files)\n\nBugfixes (posix):\n\n- improve write timeout behavior\n- [Bug 2836297] move Linux specific constants to not break other platforms\n- ``poll`` based implementation for ``read`` is in a separate class\n  ``PosixPollSerial``, as it is not supported well on all platforms (the\n  default ``Serial`` class uses select).\n- changed error handling in ``read`` so that disconnected devices are\n  detected.\n\n\nBugfixes (win32):\n\n- [Bug 2886763] hComPort doesn't get initialized for Serial(port=None)\n\n\nVersion 2.5      2010-07-22\n---------------------------\nNew Features:\n\n- [Bug 2976262] dsrdtr should default to False\n  ``dsrdtr`` parameter default value changed from ``None`` (follow ``rtscts``\n  setting) to ``False``. This means ``rtscts=True`` enables hardware flow\n  control on RTS/CTS but no longer also on DTR/DSR. This change mostly\n  affects Win32 as on other platforms, that setting was ignored anyway.\n- Improved xreadlines, it is now a generator function that yields lines as they\n  are received (previously it called readlines which would only return all\n  lines read after a read-timeout). However xreadlines is deprecated and not\n  available when the io module is used. Use ``for line in Serial(...):``\n  instead.\n\nBugfixes:\n\n- [Bug 2925854] test.py produces exception with python 3.1\n- [Bug 3029812] 2.5rc2 readline(s) doesn't work\n\nBugfixes (posix):\n\n- [BUG 3006606] Nonblocking error - Unix platform\n\nBugfixes (win32):\n\n- [Bug 2998169] Memory corruption at faster transmission speeds.\n  (bug introduced in 2.5-rc1)\n\n\nVersion 2.6      2011-11-02\n---------------------------\nNew Features:\n\n- Moved some of the examples to serial.tools so that they can be used\n  with ``python -m``\n- serial port enumeration now included as ``serial.tools.list_ports``\n- URL handlers for ``serial_for_url`` are now imported dynamically. This allows\n  to add protocols w/o editing files. The list\n  ``serial.protocol_handler_packages`` can be used to add or remove user\n  packages with protocol handlers (see docs for details).\n- new URL type: hwgrep://<regexp> uses list_ports module to search for ports\n  by their description\n- several internal changes to improve Python 3.x compatibility (setup.py,\n  use of absolute imports and more)\n\nBugfixes:\n\n- [Bug 3093882] calling open() on an already open port now raises an exception\n- [Bug 3245627] connection-lost let rfc2217 hangs in closed loop\n- [Patch 3147043] readlines() to support multi-character eol\n\nBugfixes (posix):\n\n- [Patch 3316943] Avoid unneeded termios.tcsetattr calls in serialposix.py\n- [Patch 2912349] Serial Scan as a Module with Mac Support\n\nBugfixes (win32):\n\n- [Bug 3057499] writeTimeoutError when write Timeout is 0\n- [Bug 3414327] Character out of range in list_ports_windows\n- [Patch 3036175] Windows 98 Support fix\n- [Patch 3054352] RTS automatic toggle, for RS485 functionality.\n- Fix type definitions for 64 bit Windows compatibility\n\n\nVersion 2.7      2013-10-17\n---------------------------\n- Win32: setRTS and setDTR can be called before the port is opened and it will\n  set the initial state on port open.\n- Posix: add platform specific method: outWaiting (already present for Win32)\n- Posix: rename flowControl to setXON to match name on Win32, add\n  flowControlOut function\n- rfc2217: zero polls value (baudrate, data size, stop bits, parity) (Erik\n  Lundh)\n- Posix: [Patch pyserial:28] Accept any speed on Linux [update]\n- Posix: [Patch pyserial:29] PosixSerial.read() should \"ignore\" errno.EINTR\n- OSX: [Patch pyserial:27] Scan by VendorID/Product ID for USB Serial devices\n- Ensure working with bytes in write() calls\n\nBugfixes:\n\n- [Bug 3540332] SerialException not returned\n- [Bug pyserial:145] Error in socket_connection.py\n- [Bug pyserial:135] reading from socket with timeout=None causes TypeError\n- [Bug pyserial:130] setup.py should not append py3k to package name\n- [Bug pyserial:117] no error on lost conn w/socket://\n\nBugfixes (posix):\n\n- [Patch 3462364] Fix: NameError: global name 'base' is not defined\n- list_ports and device() for BSD updated (Anders Langworthy)\n- [Bug 3518380] python3.2 -m serial.tools.list_ports error\n- [Bug pyserial:137] Patch to add non-standard baudrates to Cygwin\n- [Bug pyserial:141] open: Pass errno from IOError to SerialException\n- [Bug pyserial:125] Undefined 'base' on list_ports_posix.py, function usb_lsusb\n- [Bug pyserial:151] Serial.write() without a timeout uses 100% CPU on POSIX\n- [Patch pyserial:30] [PATCH 1/1] serial.Serial() should not raise IOError.\n\nBugfixes (win32):\n\n- [Bug 3444941] ctypes.WinError() unicode error\n- [Bug 3550043] on Windows in tools global name 'GetLastError' is not defined\n- [Bug pyserial:146] flush() does nothing in windows (despite docs)\n- [Bug pyserial:144] com0com ports ignored due to missing \"friendly name\"\n- [Bug pyserial:152] Cannot configure port, some setting was wrong. Can leave\n  port handle open but port not accessible\n\n\nVersion 3.0a0   2015-09-22\n--------------------------\n- Starting from this release, only Python 2.7 and 3.2 (or newer) are supported.\n  The source code is compatible to the 2.x and 3.x series without any changes.\n  The support for earlier Python versions than 2.7 is removed, please refer to\n  the pyserial-legacy (V2.x) series if older Python versions are a\n  requirement).\n- Development moved to github, update links in docs.\n- API changes: properties for ``rts``, ``dtr``, ``cts``, ``dsr``, ``cd``, ``ri``,\n  ``in_waiting`` (instead of get/set functions)\n- remove file ``FileLike`` class, add ``read_until`` and ``iread_until`` to\n  ``SerialBase``\n- RS485 support changed (``rts_toggle`` removed, added ``serial.rs485`` module\n  and ``rs485_mode`` property)\n- ``socket://`` and ``rfc2217://`` handlers use the IPv6 compatible\n  ``socket.create_connection``\n- New URL handler: ``spy:://``.\n- URL handlers now require the proper format (``?`` and ``&``) for arguments\n  instead of ``/`` (e.g. ``rfc2217://localhost:7000?ign_set_control&timeout=5.5``)\n- Remove obsolete examples.\n- Finish update to BSD license.\n- Use setuptools if available, fall back to distutils if unavailable.\n- miniterm: changed command line options\n- miniterm: support encodings on serial port\n- miniterm: new transformations, by default escape/convert all control characters\n- list_ports: improved, added USB location (Linux, Win32)\n- refactored code\n- [FTR pyserial:37] Support fileno() function in the socket protocol\n- Posix: [Patch pyserial:31] Mark/space parity on Linux\n- Linux: [Patch pyserial:32] Module list_ports for linux should include the\n  product information as description.\n- Java: fix 2 bugs (stop bits if/else and non-integer timeouts) (Torsten\n  Roemer)\n- Update wxSerialConfigDialog.py to use serial.tools.list_ports.\n- [Patch pyserial:34] Improvements to port_publisher.py example\n- [Feature pyserial:39] Support BlueTooth serial port discovery on Linux\n\nBugfixes:\n\n- [Bug pyserial:157] Implement inWaiting in protocol_socket\n- [Bug pyserial:166] RFC2217 connections always fail\n- [Bug pyserial:172] applySettingsDict() throws an error if the settings dictionary is not complete\n- [Bug pyserial:185] SocketSerial.read() never returns data when timeout==0\n\nBugfixes (posix):\n\n- [Bug pyserial:156] PosixSerial.open raises OSError rather than\n  SerialException when port open fails\n- [Bug pyserial:163] serial.tools.list_ports.grep() fails if it encounters None type\n- fix setXON\n- [Patch pyserial:36 / 38] Make USB information work in python 3.4 and 2.7\n- clear OCRNL/ONLCR flags (CR/LF translation settings)\n- [Feature pyserial:38] RS485 Support\n- [Bug pyserial:170] list_ports_posix not working properly for Cygwin\n- [Bug pyserial:187] improve support for FreeBSD (list_ports_posix)\n\nBugfixes (win32):\n\n- [Bug pyserial:169] missing \"import time\" in serialwin32.py\n\nBugfixes (cli):\n\n- [Bug pyserial:159] write() in serialcli.py not working with IronPython 2.7.4\n\n\nVersion 3.0b1   2015-10-19\n--------------------------\n- list_ports: add ``vid``, ``pid``, ``serial_number``, ``product``,\n  ``manufacturer`` and ``location`` attribute for USB devices.\n- list_ports: update OSX implementation.\n- list_ports: Raspberry Pi: internal port is found.\n- serial_for_url: fix import (multiple packages in list)\n- threaded: added new module implementing a reader thread\n- tweak examples/wx*\n- posix: add experimental implementation ``VTIMESerial``\n- new URL handler ``alt://`` to select alternative implementations\n\n\nVersion 3.0   2015-12-28\n------------------------\n- minor fixes to setup.py (file list), inter_byte_timeout (not stored when\n  passed to __init__), rfc2217 (behavior of close when open failed),\n  list_ports (__str__), loop://, renamed ReaderThread\n- hwgrep:// added options to pick n'th port, skip busy ports\n- miniterm: --ask option added\n\nBugfixes (posix):\n\n- [#26/#30] always call tcsettattr on open\n- [#42] fix disregard read timeout if there is more data\n- [#45] check for write timeout, even if EAGAIN was raised\n\nBugfixes (win32):\n\n- [#27] fix race condition in ``read()``, fix minimal timeout issue\n- race condition in nonblocking case\n- [#49] change exception type in case SetCommState fails\n- [#50] fixed issue with 0 timeout on windows 10\n\n\nVersion 3.0.1   2016-01-11\n--------------------------\n- special case for FDTIBUS in list_ports on win32 (#61)\n\nBugfixes:\n\n- ``Serial`` keyword arguments, more on backward compatibility, fix #55\n- list_ports: return name if product is None, fix for #54\n- port_publisher: restore some sorting of ports\n\n\nVersion 3.1.0   2016-05-27\n--------------------------\nImprovements:\n\n- improve error handling in ``alt://`` handler\n- ``socket://`` internally used select, improves timeout behavior\n- initial state of RTS/DTR: ignore error when setting on open posix\n  (support connecting to pty's)\n- code style updates\n- posix: remove \"number_to_device\" which is not called anymore\n- add cancel_read and cancel_write to win32 and posix implementations\n\nBugfixes:\n\n- [#68] aio: catch errors and close connection\n- [#87] hexlify: update codec for Python 2\n- [#100] setPort not implemented\n- [#101] bug in serial.threaded.Packetizer with easy fix\n- [#104] rfc2217 and socket: set timeout in create_connection\n- [#107] miniterm.py fails to exit on failed serial port\n\nBugfixes (posix):\n\n- [#59] fixes for RTS/DTR handling on open\n- [#77] list_ports_osx: add missing import\n- [#85] serialposix.py _set_rs485_mode() tries to read non-existing\n  rs485_settings.delay_rts_before_send\n- [#96] patch: native RS485 is never enabled\n\nBugfixes (win32):\n\n- fix bad super call and duplicate old-style __init__ call\n- [#80] list_ports: Compatibility issue between Windows/Linux\n\n\nVersion 3.1.1   2016-06-12\n--------------------------\nImprovements:\n\n- deprecate ``nonblocking()`` method on posix, the port is already in this\n  mode.\n- style: use .format() in various places instead of \"%\" formatting\n\nBugfixes:\n\n- [#122] fix bug in FramedPacket\n- [#127] The Serial class in the .NET/Mono (IronPython) backend does not\n  implement the _reconfigure_port method\n- [#123, #128] Avoid Python 3 syntax in aio module\n\nBugfixes (posix):\n\n- [#126] PATCH: Check delay_before_tx/rx for None in serialposix.py\n- posix: retry if interrupted in Serial.read\n\nBugfixes (win32):\n\n- win32: handle errors of GetOverlappedResult in read(), fixes #121\n\n\nVersion 3.2.0   2016-10-14\n--------------------------\nSee 3.2.1, this one missed a merge request related to removing aio.\n\n\nVersion 3.2.1   2016-10-14\n--------------------------\nImprovements:\n\n- remove ``serial.aio`` in favor of separate package, ``pyserial-asyncio``\n- add client mode to example ``tcp_serial_redirect.py``\n- use of monotonic clock for timeouts, when available (Python 3.3 and up)\n- [#169] arbitrary baud rate support for BSD family\n- improve tests, improve ``loop://``\n\nBugfixes:\n\n- [#137] Exception while cancel in miniterm (python3)\n- [#143] Class Serial in protocol_loop.py references variable before assigning\n  to it\n- [#149] Python 3 fix for threaded.FramedPacket\n\nBugfixes (posix):\n\n- [#133] _update_dtr_state throws Inappropriate ioctl for virtual serial\n  port created by socat on OS X\n- [#157] Broken handling of CMSPAR in serialposix.py\n\nBugfixes (win32):\n\n- [#144] Use Unicode API for list_ports\n- [#145] list_ports_windows: support devices with only VID\n- [#162] Write in non-blocking mode returns incorrect value on windows\n\n\nVersion 3.3   2017-03-08\n------------------------\nImprovements:\n\n- [#206] Exclusive access on POSIX. ``exclusive`` flag added.\n- [#172] list_ports_windows: list_ports with 'manufacturer' info property\n- [#174] miniterm: change cancel impl. for console\n- [#182] serialutil: add overall timeout for read_until\n- socket: use non-blocking socket and new Timeout class\n- socket: implement a functional a reset_input_buffer\n- rfc2217: improve read timeout implementation\n- win32: include error message from system in ClearCommError exception\n- and a few minor changes, docs\n\nBugfixes:\n\n- [#183] rfc2217: Fix broken calls to to_bytes on Python3.\n- [#188] rfc2217: fix auto-open use case when port is given as parameter\n\nBugfixes (posix):\n\n- [#178] in read, count length of converted data\n- [#189] fix return value of write\n\nBugfixes (win32):\n\n- [#194] spurious write fails with ERROR_SUCCESS\n\n\nVersion 3.4   2017-07-22\n------------------------\nImprovements:\n\n- miniterm: suspend function (temporarily release port, :kbd:`Ctrl-T s`)\n- [#240] context manager automatically opens port on ``__enter__``\n- [#141] list_ports: add interface number to location string\n- [#225] protocol_socket: Retry if ``BlockingIOError`` occurs in\n  ``reset_input_buffer``.\n\nBugfixes:\n\n- [#153] list_ports: option to include symlinked devices\n- [#237] list_ports: workaround for special characters in port names\n\nBugfixes (posix):\n\n- allow calling cancel functions w/o error if port is closed\n- [#220] protocol_socket: sync error handling with posix version\n- [#227] posix: ignore more blocking errors and EINTR, timeout only\n  applies to blocking I/O\n- [#228] fix: port_publisher typo\n\n\nVersion 3.5b0 2020-09-21\n------------------------\nNew Features:\n\n- [#411] Add a backend for Silicon Labs CP2110/4 HID-to-UART bridge.\n  (depends on `hid` module)\n\nImprovements:\n\n- [#315] Use absolute import everywhere\n- [#351] win32: miniterm Working CMD.exe terminal using Windows 10 ANSI support\n- [#354] Make ListPortInfo hashable\n- [#372] threaded: \"write\" returns byte count\n- [#400] Add bytesize and stopbits argument parser to tcp_serial_redirect\n- [#408] loop: add out_waiting\n- [#495] list_ports_linux: Correct \"interface\" property on Linux hosts\n- [#500] Remove Python 3.2 and 3.3 from test\n- [#261, #285, #296, #320, #333, #342, #356, #358, #389, #397, #510] doc updates\n- miniterm: add :kbd:`CTRL+T Q` as alternative to exit\n- miniterm: suspend function key changed to :kbd:`CTRL-T Z`\n- add command line tool entries ``pyserial-miniterm`` (replaces ``miniterm.py``)\n  and ``pyserial-ports`` (runs ``serial.tools.list_ports``).\n- ``python -m serial`` opens miniterm (use w/o args and it will print port\n  list too) [experimental]\n\nBugfixes:\n\n- [#371] Don't open port if self.port is not set while entering context manager\n- [#437, #502] refactor: raise new instances for PortNotOpenError and SerialTimeoutException\n- [#261, #263] list_ports: set default `name` attribute\n- [#286] fix: compare only of the same type in list_ports_common.ListPortInfo\n- rfc2217/close(): fix race-condition\n- [#305] return b'' when connection closes on rfc2217 connection\n- [#386] rfc2217/close(): fix race condition\n- Fixed flush_input_buffer() for situations where the remote end has closed the socket.\n- [#441] reset_input_buffer() can hang on sockets\n- examples: port_publisher python 3 fixes\n- [#324] miniterm: Fix miniterm constructor exit_character and menu_character\n- [#326] miniterm: use exclusive access for native serial ports by default\n- [#497] miniterm: fix double use of CTRL-T + s use z for suspend instead\n- [#443, #444] examples: refactor wx example, use Bind to avoid deprecated\n  warnings, IsChecked, unichr\n\nBugfixes (posix):\n\n- [#265] posix: fix PosixPollSerial with timeout=None and add cancel support\n- [#290] option for low latency mode on linux\n- [#335] Add support to xr-usb-serial ports\n- [#494] posix: Don't catch the SerialException we just raised\n- [#519] posix: Fix custom baud rate to not temporarily set 38400 baud rates on linux\n- [#509 #518] list_ports: use hardcoded path to library on osx\n\nBugfixes (win32):\n\n- [#481] win32: extend RS485 error messages\n- [#303] win32: do not check for links in serial.tools.list_ports\n- [#430] Add WaitCommEvent function to win32\n- [#314, #433] tools/list_ports_windows: Scan both 'Ports' and 'Modem' device classes\n- [#414] Serial number support for composite USB devices\n- Added recursive search for device USB serial number to support composite devices\n\nBugfixes (MacOS):\n\n- [#364] MacOS: rework list_ports to support unicode product descriptors.\n- [#367] Mac and bsd fix _update_break_state\n\n\nVersion 3.5 2020-11-23\n----------------------\nSee above (3.5b0) for what's all new in this release\n\nBugfixes:\n\n- spy: ensure bytes in write()\n\nBugfixes (posix):\n\n- [#540] serialposix: Fix inconsistent state after exception in open()\n\nBugfixes (win32):\n\n- [#530] win32: Fix exception for composite serial number search on Windows\n\nBugfixes (MacOS):\n\n- [#542] list_ports_osx: kIOMasterPortDefault no longer exported on Big Sur\n- [#545, #545] list_ports_osx: getting USB info on BigSur/AppleSilicon\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.8408203125,
          "content": "Copyright (c) 2001-2020 Chris Liechti <cliechti@gmx.net>\nAll Rights Reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following\n    disclaimer in the documentation and/or other materials provided\n    with the distribution.\n\n  * Neither the name of the copyright holder nor the names of its\n    contributors may be used to endorse or promote products derived\n    from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n---------------------------------------------------------------------------\nNote:\nIndividual files contain the following tag instead of the full license text.\n\n    SPDX-License-Identifier:    BSD-3-Clause\n\nThis enables machine processing of license information based on the SPDX\nLicense Identifiers that are here available: http://spdx.org/licenses/\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 1.048828125,
          "content": "include README.rst\ninclude LICENSE.txt\ninclude CHANGES.rst\ninclude MANIFEST.in\ninclude setup.py\ninclude setup.cfg\ninclude pylintrc\n\ninclude examples/at_protocol.py\ninclude examples/port_publisher.py\ninclude examples/port_publisher.sh\ninclude examples/rfc2217_server.py\ninclude examples/setup-miniterm-py2exe.py\ninclude examples/setup-rfc2217_server-py2exe.py\ninclude examples/setup-wxTerminal-py2exe.py\ninclude examples/tcp_serial_redirect.py\ninclude examples/wxSerialConfigDialog.py\ninclude examples/wxSerialConfigDialog.wxg\ninclude examples/wxTerminal.py\ninclude examples/wxTerminal.wxg\n\ninclude test/handlers/__init__.py\ninclude test/handlers/protocol_test.py\ninclude test/run_all_tests.py\ninclude test/test_advanced.py\ninclude test/test_high_load.py\ninclude test/test_iolib.py\ninclude test/test.py\ninclude test/test_readline.py\ninclude test/test_rfc2217.py\ninclude test/test_rs485.py\ninclude test/test_settings_dict.py\ninclude test/test_url.py\n\ninclude documentation/*.rst\ninclude documentation/pyserial.png\ninclude documentation/conf.py\ninclude documentation/Makefile\n\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.8681640625,
          "content": "=================================\n pySerial  |build-status| |docs|\n=================================\n\nOverview\n========\nThis module encapsulates the access for the serial port. It provides backends\nfor Python_ running on Windows, OSX, Linux, BSD (possibly any POSIX compliant\nsystem) and IronPython. The module named \"serial\" automatically selects the\nappropriate backend.\n\n- Project Homepage: https://github.com/pyserial/pyserial\n- Download Page: https://pypi.python.org/pypi/pyserial\n\nBSD license, (C) 2001-2020 Chris Liechti <cliechti@gmx.net>\n\n\nDocumentation\n=============\nFor API documentation, usage and examples see files in the \"documentation\"\ndirectory.  The \".rst\" files can be read in any text editor or being converted to\nHTML or PDF using Sphinx_. An HTML version is online at\nhttps://pythonhosted.org/pyserial/\n\nExamples\n========\nExamples and unit tests are in the directory examples_.\n\n\nInstallation\n============\n``pip install pyserial`` should work for most users.\n\nDetailed information can be found in `documentation/pyserial.rst`_.\n\nThe usual setup.py for Python_ libraries is used for the source distribution.\nWindows installers are also available (see download link above).\n\nor\n\nTo install this package with conda run:   \n\n``conda install -c conda-forge pyserial``   \n\nconda builds are available for linux, mac and windows.\n\n.. _`documentation/pyserial.rst`: https://github.com/pyserial/pyserial/blob/master/documentation/pyserial.rst#installation\n.. _examples: https://github.com/pyserial/pyserial/blob/master/examples\n.. _Python: http://python.org/\n.. _Sphinx: http://sphinx-doc.org/\n.. |build-status| image:: https://travis-ci.org/pyserial/pyserial.svg?branch=master\n   :target: https://travis-ci.org/pyserial/pyserial\n   :alt: Build status\n.. |docs| image:: https://readthedocs.org/projects/pyserial/badge/?version=latest\n   :target: http://pyserial.readthedocs.io/\n   :alt: Documentation\n"
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 12.2041015625,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=1\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n\n# Allow optimization of some AST trees. This will activate a peephole AST\n# optimizer, which will apply various small optimizations. For instance, it can\n# be used to obtain the result of joining multiple strings with the addition\n# operator. Joining a lot of strings can lead to a maximum recursion error in\n# Pylint and this flag can prevent that. It has one side effect, the resulting\n# AST will be different than the one from reality.\noptimize-ast=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=import-star-module-level,old-octal-literal,oct-method,print-statement,unpacking-in-except,parameter-unpacking,backtick,old-raise-syntax,old-ne-operator,long-suffix,dict-view-method,dict-iter-method,metaclass-assignment,next-method-called,raising-string,indexing-exception,raw_input-builtin,long-builtin,file-builtin,execfile-builtin,coerce-builtin,cmp-builtin,buffer-builtin,basestring-builtin,apply-builtin,filter-builtin-not-iterating,using-cmp-argument,useless-suppression,range-builtin-not-iterating,suppressed-message,no-absolute-import,old-division,cmp-method,reload-builtin,zip-builtin-not-iterating,intern-builtin,unichr-builtin,reduce-builtin,standarderror-builtin,unicode-builtin,xrange-builtin,coerce-method,delslice-method,getslice-method,setslice-method,input-builtin,round-builtin,hex-method,nonzero-method,map-builtin-not-iterating\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\nmsg-template={path}:{line}: {msg_id} {symbol}, {obj} {msg}\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=120\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,dict-separator\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[BASIC]\n\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=map,filter,input\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_,n,z,c,b,e,ri,cd\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for function names\nfunction-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for variable names\nvariable-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct constant names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Naming hint for constant names\nconst-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for attribute names\nattr-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for argument names\nargument-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Naming hint for class attribute names\nclass-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming hint for inline iteration names\ninlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Naming hint for class names\nclass-name-hint=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Naming hint for module names\nmodule-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression matching correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for method names\nmethod-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n\n[ELIF]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=urllib,asyncio,msvcrt,queue,socket\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set). This supports can work\n# with qualified names.\nignored-classes=\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_$|dummy\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=60\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=12\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "serial",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0830078125,
          "content": "[bdist_wheel]\nuniversal=1\n\n[flake8]\nmax-line-length = 120\nignore = E265, E126, E241\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.1259765625,
          "content": "# setup.py for pySerial\n#\n# Direct install (all systems):\n#   \"python setup.py install\"\n#\n# For Python 3.x use the corresponding Python executable,\n# e.g. \"python3 setup.py ...\"\n#\n# (C) 2001-2020 Chris Liechti <cliechti@gmx.net>\n#\n# SPDX-License-Identifier:    BSD-3-Clause\nimport io\nimport os\nimport re\n\ntry:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\n\n\ndef read(*names, **kwargs):\n    \"\"\"Python 2 and Python 3 compatible text file reading.\n\n    Required for single-sourcing the version string.\n    \"\"\"\n    with io.open(\n        os.path.join(os.path.dirname(__file__), *names),\n        encoding=kwargs.get(\"encoding\", \"utf8\")\n    ) as fp:\n        return fp.read()\n\n\ndef find_version(*file_paths):\n    \"\"\"\n    Search the file for a version string.\n\n    file_path contain string path components.\n\n    Reads the supplied Python module as text without importing it.\n    \"\"\"\n    version_file = read(*file_paths)\n    version_match = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n                              version_file, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError(\"Unable to find version string.\")\n\n\nversion = find_version('serial', '__init__.py')\n\n\nsetup(\n    name=\"pyserial\",\n    description=\"Python Serial Port Extension\",\n    version=version,\n    author=\"Chris Liechti\",\n    author_email=\"cliechti@gmx.net\",\n    url=\"https://github.com/pyserial/pyserial\",\n    packages=['serial', 'serial.tools', 'serial.urlhandler', 'serial.threaded'],\n    license=\"BSD\",\n    long_description=\"\"\"\\\nPython Serial Port Extension for Win32, OSX, Linux, BSD, Jython, IronPython\n\nStable:\n\n- Documentation: http://pythonhosted.org/pyserial/\n- Download Page: https://pypi.python.org/pypi/pyserial\n\nLatest:\n\n- Documentation: http://pyserial.readthedocs.io/en/latest/\n- Project Homepage: https://github.com/pyserial/pyserial\n\"\"\",\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Intended Audience :: Developers',\n        'Intended Audience :: End Users/Desktop',\n        'License :: OSI Approved :: BSD License',\n        'Natural Language :: English',\n        'Operating System :: POSIX',\n        'Operating System :: Microsoft :: Windows',\n        'Operating System :: MacOS :: MacOS X',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Topic :: Communications',\n        'Topic :: Software Development :: Libraries',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Terminals :: Serial',\n    ],\n    platforms='any',\n    entry_points = {\n        'console_scripts': [\n            'pyserial-miniterm=serial.tools.miniterm:main',\n            'pyserial-ports=serial.tools.list_ports:main'\n        ],\n    },\n    extras_require = {\n        'cp2110': ['hidapi'],\n    },\n)\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}