{
  "metadata": {
    "timestamp": 1736560413210,
    "page": 973,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "behave/behave",
      "stars": 3221,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bumpversion.cfg",
          "type": "blob",
          "size": 0.2568359375,
          "content": "[bumpversion]\ncurrent_version = 1.2.7.dev7\nfiles = behave/version.py setup.py VERSION.txt .bumpversion.cfg\nparse = (?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(?P<drop>\\w*)\nserialize = {major}.{minor}.{patch}{drop}\ncommit = False\ntag = False\nallow_dirty = True\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 1.068359375,
          "content": "# =========================================================================\n# COVERAGE CONFIGURATION FILE: .coveragerc\n# =========================================================================\n# LANGUAGE: Python\n# SEE ALSO:\n#  * https://nedbatchelder.com/code/coverage/\n#  * https://nedbatchelder.com/code/coverage/config.html\n# =========================================================================\n\n[run]\n# append  = .coverage\n# include = behave*\nsource = behave\nbranch  = True\nparallel = True\n\n[report]\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Don't complain about missing debug-only code:\n    def __repr__\n    if self\\.debug\n\n    # Don't complain if tests don't hit defensive assertion code:\n    raise AssertionError\n    raise NotImplementedError\n    raise StepNotImplementedError\n\n    # Don't complain if non-runnable code isn't run:\n    if 0:\n    if False:\n    if __name__ == .__main__.:\n\nignore_errors = True\n\n[html]\ndirectory = build/coverage.html\n\n[xml]\noutput = build/coverage.xml\n\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.6015625,
          "content": "# =============================================================================\n# EDITOR CONFIGURATION: https://editorconfig.org\n# =============================================================================\n\nroot = true\n\n# -- DEFAULT: Unix-style newlines with a newline ending every file.\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[{*.{md,rst,txt}}]\nindent_style = space\nindent_size = 4\n\n[{*.{py,ini}}]\nindent_style = space\nindent_size = 4\n\n[*.feature]\nindent_style = space\nindent_size = 2\n\n[**/makefile]\nindent_style = tab\n\n[*.{cmd,bat}]\nend_of_line = crlf\n"
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 1.0556640625,
          "content": "# ===========================================================================\n# PROJECT ENVIRONMENT SETUP: .envrc\n# ===========================================================================\n# SHELL: bash (or similiar)\n# REQUIRES: direnv >= 2.21.0  -- NEEDED FOR: path_add, venv support\n# USAGE:\n#   # -- BETTER: Use direnv (requires: Setup in bash -- $HOME/.bashrc)\n#   # BASH PROFILE NEEDS: eval \"$(direnv hook bash)\"\n#   direnv allow .\n#\n# SEE ALSO:\n#   * https://direnv.net/\n#   * https://github.com/direnv/direnv\n#   * https://peps.python.org/pep-0582/   Python local packages directory\n# ===========================================================================\n# MAYBE: HERE=\"${PWD}\"\n\n# -- USE OPTIONAL PARTS (if exist/enabled):\n# REQUIRES: direnv >= 2.26.0  -- NEEDED FOR: dotenv_if_exists\n# DISABLED: dotenv_if_exists .env\nsource_env_if_exists .envrc.use_venv\n\n# -- SETUP-PYTHON: Prepend ${HERE} to PYTHONPATH (as PRIMARY search path)\n# SIMILAR TO: export PYTHONPATH=\"${HERE}:${PYTHONPATH}\"\npath_add PYTHONPATH .\npath_add PATH bin\n\nsource_env_if_exists .envrc.override\n"
        },
        {
          "name": ".envrc.use_venv",
          "type": "blob",
          "size": 1.0302734375,
          "content": "# ===========================================================================\n# PROJECT ENVIRONMENT SETUP: .envrc.use_venv\n# ===========================================================================\n# REQUIRES: direnv >= 2.21.0  -- NEEDED FOR: venv support\n# DESCRIPTION:\n#   Setup and use a Python virtual environment (venv).\n#   On entering the directory: Creates and activates a venv for a python version.\n#   On leaving  the directory: Deactivates the venv (virtual environment).\n#\n# ENABLE/DISABLE THIS OPTIONAL PART:\n#   * TO ENABLE:  Rename \".envrc.use_venv.disabled\" to \".envrc.use_venv\"\n#   * TO DISABLE: Rename \".envrc.use_venv\" to \".envrc.use_venv.disabled\"\n#\n# SEE ALSO:\n#   * https://direnv.net/\n#   * https://github.com/direnv/direnv/wiki/Python\n#   * https://direnv.net/man/direnv-stdlib.1.html#codelayout-python-ltpythonexegtcode\n# ===========================================================================\n\n# -- VIRTUAL ENVIRONMENT SUPPORT: layout python python3\n# VENV LOCATION: .direnv/python-$(PYTHON_VERSION)\nlayout python python3\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.193359375,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n*.py   text eol=lf\n*.cmd  text eolf=crlf\n*.bat  text eolf=crlf\n\n*.png binary\n*.jpg binary\n*.pdf binary\n*.zip binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.28515625,
          "content": "*.egg-info\n*.lock\n*.log\n*.pyc\n*.pyo\n*$py.class\nbuild/\ndist/\n__pycache__/\n__pypackages__/\n__WORKDIR__/\n__*/\n__*.txt\n__*.rst\n_build/\n_WORKSPACE/\nreports/\ntools/virtualenvs\n.cache/\n.direnv/\n.fleet/\n.idea/\n.pytest_cache/\n.tox/\n.venv*/\n.vscode/\n.done.*\n.DS_Store\n.coverage\nrerun.txt\ntestrun*.json\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 21.6748046875,
          "content": "# =============================================================================\n# PYLINT CONFIGURATION\n# =============================================================================\n# PYLINT-VERSION: XXX_UPDATE: 1.5.x\n# SEE ALSO: https://www.pylint.org/\n# =============================================================================\n\n[MAIN]\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Clear in-memory caches upon conclusion of linting. Useful if running pylint\n# in a server-like mode.\nclear-cache-post-run=no\n\n# Load and enable all available extensions. Use --list-extensions to see a list\n# all available extensions.\n#enable-all-extensions=\n\n# In error mode, messages with a category besides ERROR or FATAL are\n# suppressed, and no reports are done by default. Error mode is compatible with\n# disabling specific errors.\n#errors-only=\n\n# Always return a 0 (non-error) status code, even if lint errors are found.\n# This is primarily useful in continuous integration scripts.\n#exit-zero=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-allow-list=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code. (This is an alternative name to extension-pkg-allow-list\n# for backward compatibility.)\nextension-pkg-whitelist=\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10\n\n# Interpret the stdin as a python script, whose filename needs to be passed as\n# the module_or_package argument.\n#from-stdin=\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=.git\n\n# Add files or directories matching the regular expressions patterns to the\n# ignore-list. The regex matches against paths and can be in Posix or Windows\n# format. Because '\\\\' represents the directory delimiter on Windows systems,\n# it can't be used as an escape character.\nignore-paths=\n\n# Files or directories matching the regular expression patterns are skipped.\n# The regex matches against base names, not paths. The default value ignores\n# Emacs file locks\nignore-patterns=^\\.#\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use, and will cap the count on Windows to\n# avoid hangs.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Minimum Python version to use for version dependent checks. Will default to\n# the version used to run pylint.\npy-version=3.10\n\n# Discover python modules and packages in the file system subtree.\nrecursive=no\n\n# Add paths to the list of the source roots. Supports globbing patterns. The\n# source root is an absolute path or a path relative to the current working\n# directory used to determine a package namespace for modules located under the\n# source root.\nsource-roots=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# In verbose mode, extra non-checker-related info will be displayed.\n#verbose=\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,40}|(__.*__))$\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\nconst-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\nfunction-rgx=[a-z_][a-z0-9_]{2,40}$\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=c,\n           d,\n           f,\n           h,\n           i,\n           j,\n           k,\n           m,\n           n,\n           o,\n           p,\n           r,\n           s,\n           v,\n           w,\n           x,\n           y,\n           e,\n           ex,\n           kw,\n           up,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=yes\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\nmethod-rgx=[a-z_][a-z0-9_]{2,40}$\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=__.*__\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type alias names. If left empty, type\n# alias names will be checked with the set naming style.\n#typealias-rgx=\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\nvariable-rgx=[a-z_][a-z0-9_]{2,40}$\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# List of regular expressions of class ancestor names to ignore when counting\n# public methods (see R0903)\nexclude-too-few-public-methods=\n\n# List of qualified class names to ignore when counting class parents (see\n# R0901)\nignored-parents=\n\n# Maximum number of arguments for function / method.\nmax-args=10\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=10\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=12\n\n# Maximum number of locals for function / method body.\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=30\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when caught.\novergeneral-exceptions=builtins.Exception\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# Maximum number of lines in a module.\nmax-module-lines=1000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow explicit reexports by alias from a package __init__.\nallow-reexport-from-package=no\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=regsub,\n                   string,\n                   TERMIOS,\n                   Bastion,\n                   rexec\n\n# Output a graph (.gv or any supported image format) of external dependencies\n# to the given file (report RP0402 must not be disabled).\next-import-graph=\n\n# Output a graph (.gv or any supported image format) of all (i.e. internal and\n# external) dependencies to the given file (report RP0402 must not be\n# disabled).\nimport-graph=\n\n# Output a graph (.gv or any supported image format) of internal dependencies\n# to the given file (report RP0402 must not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,\n# UNDEFINED.\nconfidence=HIGH,\n           CONTROL_FLOW,\n           INFERENCE,\n           INFERENCE_FAILURE,\n           UNDEFINED\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=raw-checker-failed,\n        bad-inline-option,\n        locally-disabled,\n        file-ignored,\n        suppressed-message,\n        useless-suppression,\n        deprecated-pragma,\n        use-symbolic-message-instead,\n        unused-variable,\n        missing-module-docstring,\n        missing-class-docstring,\n        missing-function-docstring,\n        too-few-public-methods\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[METHOD_ARGS]\n\n# List of qualified names (i.e., library.method) which require a timeout\n# parameter e.g. 'requests.api.get,requests.api.post'\ntimeout-methods=requests.api.delete,requests.api.get,requests.api.head,requests.api.options,requests.api.patch,requests.api.post,requests.api.put,requests.api.request\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n# Regular expression of note tags to take in consideration.\nnotes-rgx=\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'fatal', 'error', 'warning', 'refactor',\n# 'convention', and 'info' which contain the number of messages in each\n# category, as well as 'statement' which is the total number of statements\n# analyzed. This score is used by the global evaluation report (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\nmsg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\n#output-format=\n\n# Tells whether to display a full report or only the messages.\nreports=yes\n\n# Activate the evaluation score.\nscore=yes\n\n\n[SIMILARITIES]\n\n# Comments are removed from the similarity computation\nignore-comments=yes\n\n# Docstrings are removed from the similarity computation\nignore-docstrings=yes\n\n# Imports are removed from the similarity computation\nignore-imports=no\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. No available dictionaries : You need to install\n# both the python package and the system dependency for enchant to work..\nspelling-dict=\n\n# List of comma separated words that should be considered directives if they\n# appear at the beginning of a comment and should not be checked.\nspelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,\n                  acl_users,\n                  aq_parent\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of symbolic message names to ignore for Mixin members.\nignored-checks-for-mixins=no-member,\n                          not-async-context-manager,\n                          not-context-manager,\n                          attribute-defined-outside-init\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=SQLObject\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# Regex pattern to define which classes are considered mixins.\nmixin-class-rgx=.*[Mm]ixin\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_|dummy|kwargs\n\n# Argument names that match this expression will be ignored.\nignored-argument-names=_.*\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.7197265625,
          "content": "# =============================================================================\n# READTHEDOCS CONFIG-FILE: .readthedocs.yaml\n# =============================================================================\n# SEE ALSO:\n#  * https://docs.readthedocs.io/en/stable/config-file/v2.html\n#  * https://blog.readthedocs.com/migrate-configuration-v2/\n# =============================================================================\n\nversion: 2\nbuild:\n  os: ubuntu-lts-latest\n  tools:\n    python: \"3.12\"\n\npython:\n  install:\n    - requirements: py.requirements/docs.txt\n    - method: pip\n      path: .\n\nsphinx:\n  configuration: docs/conf.py\n  builder: dirhtml\n  fail_on_warning: true\n\n# -- PREPARED: Additional formats to generate\n# formats:\n#  - pdf\n"
        },
        {
          "name": ".ruff.toml",
          "type": "blob",
          "size": 1.330078125,
          "content": "# -----------------------------------------------------------------------------\n# SECTION: ruff -- Python linter\n# -----------------------------------------------------------------------------\n# SEE: https://github.com/charliermarsh/ruff\n# SEE: https://docs.astral.sh/ruff/configuration/\n# SEE: https://beta.ruff.rs/docs/configuration/#using-rufftoml\n# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.\n\nexclude = [\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".ruff_cache\",\n    \".tox\",\n    \".venv*\",\n    \"__pypackages__\",\n    \"build\",\n    \"dist\",\n    \"venv\",\n]\n# WAS: line-length = 88\nline-length = 100\nindent-width = 4\ntarget-version = \"py312\"\n\n\n[lint]\nselect = [\"E\", \"F\"]\nignore = []\n# Allow autofix for all enabled rules (when `--fix`) is provided.\nfixable = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"I\", \"N\", \"Q\", \"S\", \"T\", \"W\",\n    \"ANN\", \"ARG\", \"BLE\", \"COM\", \"DJ\", \"DTZ\", \"EM\", \"ERA\", \"EXE\", \"FBT\", \"ICN\", \"INP\", \"ISC\",\n    \"NPY\", \"PD\", \"PGH\", \"PIE\", \"PL\", \"PT\", \"PTH\", \"PYI\", \"RET\", \"RSE\", \"RUF\", \"SIM\", \"SLF\",\n    \"TCH\", \"TID\", \"TRY\", \"UP\", \"YTT\"\n]\nunfixable = []\n\n# Exclude a variety of commonly ignored directories.\nper-file-ignores = {}\n\n# Allow unused variables when underscore-prefixed.\ndummy-variable-rgx = \"^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$\"\n\n\n[lint.mccabe]\nmax-complexity = 10\n\n\n[format]\nquote-style = \"double\"\nindent-style = \"space\"\n"
        },
        {
          "name": "CHANGES.rst",
          "type": "blob",
          "size": 32.5419921875,
          "content": "Version History\n===============================================================================\n\nVersion: 1.4.0 (planning)\n-------------------------------------------------------------------------------\n\nGOALS:\n\n* Drop support for Python 2.7\n* MAYBE: Requires Python >= 3.7 (at least)\n\nDEPRECATIONS:\n\n* DEPRECATED: ``tag-expressions v1`` (old-style tag-expressions)\n\n\nVersion: 1.3.0 (planning)\n-------------------------------------------------------------------------------\n\nGOALS:\n\n* Will be released on https://pypi.org\n* Inlude all changes from behave v1.2.7 development\n* Last version minor version with Python 2.7 support\n* ``tag-expressions v2``: Enabled by default (\"strict\" mode: only v2 supported).\n* ``tag-expressions v1``: Disabled by default (in \"strict\" mode).\n   BUT: Can be enabled via config-file parameter in \"any\" mode (supports: v1 and v2).\n\n\nVersion: 1.2.7 (unreleased)\n-------------------------------------------------------------------------------\n\nBACKWARD-INCOMPATIBLE:\n\n* Replace old-style tag-expressions with `cucumber-tag-expressions`_ as ``tag-expressions v2``.\n\n  HINTS:\n\n  - DEPRECATING: ``tag-expressions v1`` (old-style)\n  - BUT: Currently, tag-expression version is automatically detected (and used).\n\n* CLI: Cleanup command-line short-options that are seldom used\n  (short-options for: --no-skipped (-k), --no-multiline (-m), --no-source (-s)).\n\n* parser: No longer strips trailing colon from steps with text/table section.\n* Undefined steps need to use StepNotImplementedError (was: NotImplementedError)\n\nGOALS:\n\n- Improve support for Windows (continued)\n- FIX: Unicode problems on Windows (in behave-1.2.6)\n- FIX: Regression test problems on Windows (in behave-1.2.6)\n\nDEVELOPMENT:\n\n* Renamed default branch of Git repository to \"main\" (was: \"master\").\n* Use github-actions as CI/CD pipeline (and remove Travis as CI).\n* CI: Remove python.version=2.7 for CI pipeline\n  (reason: No longer supported by Github Actions, date: 2023-07).\n* ADDED: pyproject.toml support (hint: \"setup.py\" will become DEPRECATED soon)\n\nCLEANUPS:\n\n* CLI: Remove unused option ``--expand``\n* Remove ``stdout_capture``, ``stderr_capture``, ``log_capture``\n  attributes from ``behave.runner.Context`` class\n  (use: ``captured`` attribute instead).\n\nENHANCEMENTS:\n\n* Add support for step-definitions (step-matchers) with `CucumberExpressions`_\n* Add formatter: steps.code -- Shows steps with code-section.\n* User-defined formatters: Improve diagnostics if bad formatter is used (ModuleNotFound, ...)\n* active-tags: Added ``ValueObject`` class for enhanced control of comparison mechanism\n  (supports: equals, less-than, less-or-equal, greater-than, greater-or-equal, contains, ...)\n* Add support for Gherkin v6 grammar and syntax in ``*.feature`` files\n* Use `cucumber-tag-expressions`_ with tag-matching extension (superceeds: old-style tag-expressions)\n* Use cucumber \"gherkin-languages.json\" now (simplify: Gherkin v6 aliases, language usage)\n* Support emojis in ``*.feature`` files and steps\n* Select-by-location: Add support for \"Scenario container\" (Feature, Rule, ScenarioOutline) (related to: #391)\n* pull #1185: Read Examples table data from CSV file (provided-by: rajanmanwansh)\n* issue #1183: Support Background Steps with Placeholders for Scenario Outlines (submitted by: hemendra0851)\n* pull #1097: Support And-Step as initial Scenario step if Background Steps exist (provided-by: aneeshdurg)\n* pull  #988: setup.py: Add category to install additional formatters (html) (provided-by: bittner)\n* pull  #895: UPDATE: i18n/gherkin-languages.json from cucumber repository #895 (related to: #827)\n* issue #889: Warn or error about incorrectly configured formatter aliases (provided by: jenisys, submitted by: bittner)\n* pull  #827: Fixed keyword translation in Estonian #827 (provided by: ookull)\n* issue #740: Enhancement: possibility to add cleanup to be called upon leaving outer context stack frames (submitted by: nizwiz, dcvmoole)\n* issue #678: Scenario Outline: Support tags with commas and semicolons (provided by: lawnmowerlatte, pull #679)\n* issue #675: Feature files cannot be found within symlink directories (provided by: smadness, pull #680)\n\nCLARIFICATION:\n\n* issue #810: Clarify select-by-name using regex pattern (submitted by: xv-chris-w)\n\nFIXED:\n\n* FIXED: Some tests for python-3.12\n* FIXED: Some tests related to python-3.11\n* FIXED: Some tests related to python-3.9\n* FIXED: active-tag logic if multiple tags with same category exists.\n* issue #1202: behave fails with pyproject.toml without any [tool] sections (provided by: con-fah)\n* issue #1177: Bad type-converter pattern: MatchWithError is turned into AmbiguousStep (submitted by: omrischwarz)\n* issue #1170: TagExpression auto-detection is not working properly (submitted by: Luca-morphy)\n* issue #1154: Config-files are not shown in verbose mode (submitted by: soblom)\n* issue #1120: Logging ignoring level set in setup_logging (submitted by: j7an)\n* issue #1070: Color support detection: Fails for WindowsTerminal (provided by: jenisys)\n* issue #1116: behave erroring in pretty format in pyproject.toml (submitted by: morning-sunn)\n* issue #1061: Scenario should inherit Rule tags (submitted by: testgitdl)\n* issue #1054: TagExpressions v2: AND concatenation is faulty (submitted by: janoskut)\n* pull  #967: Update __init__.py in behave import to fix pylint (provided by: dsayling)\n* issue #955: setup: Remove attribute 'use_2to3' (submitted by: krisgesling)\n* issue #772: ScenarioOutline.Examples without table (submitted by: The-QA-Geek)\n* issue #755: Failures with Python 3.8 (submitted by: hroncok)\n* issue #725: Scenario Outline description lines seem to be ignored (submitted by: nizwiz)\n* issue #713: Background section doesn't support description (provided by: dgou)\n* pull  #657: Allow async steps with timeouts to fail when they raise exceptions (provided by: ALSchwalm)\n* issue #641: Pylint errors when importing given - when - then from behave (solved by: #967)\n* issue #631: ScenarioOutline variables not possible in table headings (provided by: mschnelle, pull #642)\n* issue #619: Context __getattr__ should raise AttributeError instead of KeyError (submitted by: anxodio)\n* pull  #588: Steps-catalog argument should not break configured rerun settings (provided by: Lego3)\n\nMINOR:\n\n* issue #1047: Step type is inherited for generic step if possible (submitted by: zettseb)\n* issue #958: Replace dashes with underscores to comply with setuptools v54.1.0 #958 (submitted by: arrooney)\n* issue #800: Cleanups related to Gherkin parser/ParseError question (submitted by: otstanteplz)\n* pull  #767: FIX: use_fixture_by_tag didn't return the actual fixture in all cases (provided by: jgentil)\n* pull  #751: gherkin: Adding Rule keyword translation in portuguese and spanish to gherkin-languages.json (provided by: dunossauro)\n* pull  #660: Fix minor typos (provided by: rrueth)\n* pull  #655: Use pytest instead of py.test per upstream recommendation (provided by: scop)\n* issue #654: tox.ini: pypi.python.org -> pypi.org (submitted by: pradyunsg)\n\nDOCUMENTATION:\n\n* pull  #989: Add more tutorial links: Nicole Harris, Nick Coghlan (provided by: ncoghlan, bittner; related: #848)\n* pull  #877: docs: API reference - Capitalizing Step Keywords in example (provided by: Ibrian93)\n* pull  #731: Update links to Django docs (provided by: bittner)\n* pull  #722: DOC remove remaining pythonhosted links (provided by: leszekhanusz)\n* pull  #701: behave/runner.py docstrings (provided by: spitGlued)\n* pull  #700: Fix wording of \"gherkin.rst\" (provided by: spitGlued)\n* pull  #699: Fix wording of \"philosophy.rst\" (provided by: spitGlued)\n* pull  #684: Fix typo in \"install.rst\" (provided by: mstred)\n* pull  #628: Changed pythonhosted.org links to readthedocs.io (provided by: chrisbrake)\n\nBREAKING CHANGES (naming):\n\n* behave.configuration.OPTIONS: was ``behave.configuration.options``\n* behave.runner.Context._push(layer=None): was Context._push(layer_name=None)\n* behave.runner.scoped_context_layer(context, layer=None):\n  was scoped_context_layer(context.layer_name=None)\n\n\n.. _`cucumber-tag-expressions`: https://pypi.org/project/cucumber-tag-expressions/\n.. _`CucumberExpressions`: https://github.com/cucumber/cucumber-expressions\n\n\nVersion: 1.2.6 (2018-02-25)\n-------------------------------------------------------------------------------\n\nGOALS:\n\n- Improve support for Windows\n\n\nDOCUMENTATION:\n\n* issue #625: Formatter documentation is inaccurate for some methods (reported by: throwable-one)\n* pull  #618: Fix a typo in the background section of gherkin docs (provided by: mrrn)\n* pull  #609: Describe execute_steps() behaviour correctly (provided by: mixxorz)\n* pull  #603: Update typo tutorial.rst (provided by: fnaval)\n* pull  #601: Add Flask integration chapter to documentation (provided by: bittner)\n* pull  #580: Fix some dead ecosystem links (provided by: smadness)\n* pull  #579: Add explanation for step_impl function name (provided by: bittner)\n* issue #574: flake8 reports F811 redefinition of unused 'step_impl' (fixed by #579).\n* pull  #545: Spell \"section\" correctly (provided by: chelmertz)\n* pull  #489: Fix link to Selenium docs in Django chapter (provided by: bittner)\n* pull  #469: Fix typo in \"formatters.rst\" (provided by: ab9-er)\n* pull  #443: Fixing grammar in philosophy.rst (provided by: jamesroutley)\n* pull  #441: Integrate hint on testing more nicely (provided by: bittner)\n* pull  #429: Replace \"Manual Integration\" by \"Automation Libraries\" section (provided by: bittner)\n* pull  #379: Correct wording in README.rst (provided by: franklinchou)\n* pull  #362: docs/tutorial.rst: fixed non-monospace font (provided by: spacediver)\n* pull  #359: Update documentation related to Django (behave-django) (provided by: bittner)\n* pull  #326: docs/tutorial.rst: Correct features directory path creation (provided by: memee)\n* issue #356: docs/api.rst: type in implementation (submitted by: tomxtobin)\n* pull  #335: docs/api.rst: execute_steps() example (provided by: miabbott)\n* pull  #339: Adapt wording in install.rst (provided by: charleswhchan)\n* pull  #338: docs/philosophy.rst: Correct to uppercase in example (provided by: charleswhchan)\n* issue #323: Update Django Example to work with version >=1.7 (submitted by: mpetyx, provided by: bittner)\n* pull  #327: Fix typo in Django doc (provided by: nikolas)\n* pull  #321: Update Django integration (provided by: bittner, contains: #315, #316)\n* FIX: cmdline/config-param doc-generator, avoid duplicated param entries (related to: #318)\n* issue #317: Update comparison: lettuce tags (provided by: ramiabughazaleh)\n* pull  #307: Typo in readme (provided by: dflock)\n* pull  #305: behave.rst related fixes reapplied (provided by: bittner)\n* pull  #292: Use title-cased keywords in tutorial scenario (provided by: neoblackcap)\n* pull  #291: Tiny tweaks in tutorial docs (provided by: bernardpaulus)\n\nSITE:\n\n* pull #626: Formatting issue in stale-bot config (provided by: teapow)\n* pull #343: Update/fix badges in README (provided by: mixxorz)\n\nENHANCEMENTS:\n\n* fixtures: Add concept to simplify setup/cleanup tasks for scenario/feature/test-run\n* context-cleanups: Use context.add_cleanup() to perform cleanups after scenario/feature/test-run.\n* Tagged Examples: Examples in a ScenarioOutline can now have tags.\n* pull  #596: Add missing Czech translation (provided by: hason)\n* pull  #554: Adds galician language (provided by: carlosgoce)\n* pull  #447: behave settings from tox.ini (provided by: bittner)\n* issue #411: Support multiple active-tags with same category (submitted by: Kani999)\n* issue #409: Support async/@asyncio.coroutine steps (submitted by: dcarp)\n* issue #357: Add language attribute to Feature class\n* pull  #328: Auto-retry failed scenarios in unreliable environment (provided by: MihaiBalint, robertknight)\n* issue #302: Support escaped-pipe in Gherkin table cell value (provided by: connorsml, pull #360)\n* issue #301: Support default tags in configfile\n* issue #299: Runner can continue after a failed step (same as: #314)\n* issue #197: Hooks processing should be more exception safe (provided by: vrutkovs, jenisys, pull #205)\n\nFORMATTERS:\n\n* pull  #446: Remove Formatter scenario_outline(), examples() method (provided by:  aisbaa, jenisys)\n* pull  #448: json: Add status to scenarios in JSON report (provided by: remcowesterhoud)\n* issue #462: json: Invalid JSON output when no features are selected (submitted by: remcowesterhoud)\n* pull  #423: sphinx.steps: Support ref link for each step (provided by: ZivThaller)\n* pull  #460: pretty: Print the step implementation location when dry-run (provided by: unklhe, jenisys)\n\nREPORTERS:\n\n* junit: Add timestamp and hostname attributes to testsuite XML element.\n* junit: Support to tweak output with userdata (experimental).\n* junit: Support scenario hook-errors with JUnitReporter (related to: #466)\n\nCHANGES:\n\n* status: Use Status enum-class for feature/scenario/step.status (was: string)\n* hook-processing: Skips now feature/scenario/step if before-hook fails (related to: #454)\n* parser: language comment in feature file has higher priority than --lang option (related to: #334).\n* issue #385: before_scenario/before_feature called too late (submitted by: BRevzin)\n\nFIXED:\n\n* issue #606: Using name option w/ special unicode chars (submitted by: alluir42)\n* issue #547: Crash when using step definition with optional cfparse parts (provided by: ftartaggia, jenisys)\n* pull  #599: Steps from another Windows drive (provided by: psicopep)\n* issue #582: behave emitting PendingDeprecationWarning messages (submitted by: adamjcooper)\n* pull  #476: scenario.status when scenario without steps is skipped (provided by: ar45, jenisys)\n* pull  #471: convert an object to unicode (py2) using __unicode__ method first  unicode (provided by: ftartaggia)\n* issue #458: UnicodeEncodeError inside naked except block in __main__.py (submitted by: mseery)\n* issue #453: Unicode chars are broken in stacktrace (submitted by: throwable-one)\n* issue #455: Restore backward compatibility to Cucumber style RegexMatcher (submitted by:  avabramov)\n* issue #449: Unicode is processed incorrectly for Py2 in \"textutil.text\" (submitted by: throwable-one)\n* issue #446: after_scenario HOOK-ERROR asserts with jUnit reporter (submitted by: lagin)\n* issue #424: Exception message with unicode characters in nested steps (submitted by: yucer)\n* issue #416: JUnit report messages cut off (submitted by: remcowesterhoud, provided by: bittner)\n* issue #414: Support for Jython 2.7 (submitted by: gabtwi...)\n* issue #384: Active Tags fail with ScenarioOutline (submitted by: BRevzin)\n* issue #383: Handle (custom) Type parsing errors better (submitted by: zsoldosp)\n* pull  #382: fix typo in tag name (provided by: zsoldosp)\n* issue #361: utf8 file with BOM (provided by: karulis)\n* issue #349: ScenarioOutline skipped with --format=json\n* issue #336: Stacktrace contents getting illegal characters inserted with text function (submited by: fj40bryan)\n* issue #330: Skipped scenarios are included in junit reports when --no-skipped is specified (provided by: vrutkovs, pull #331)\n* issue #320: Userdata is case-insensitive when read from config file (provided by: mixxorz)\n* issue #319: python-version requirements in behave.whl for Python2.6 (submitted by: darkfoxprime)\n* issue #310: Use setuptools_behave.py with behave module\n* issue #309: behave --lang-list fails on Python3 (and Python2)\n* issue #300: UnicodeDecodeError when read steps.py (similar to: #361)\n* issue #288: Use print function instead print statement in environment/steps files\n\n\nVersion: 1.2.5 (2015-01-31)\n-------------------------------------------------------------------------------\n\n:Same as: Version 1.2.5a1 (unreleased).\n\nNEWS and CHANGES:\n\n  - General:\n\n    * Improve support for Python3 (py3.3, py3.4; #268)\n    * Various unicode related fixes (Unicode errors with non-ASCII, etc.)\n    * Drop support for Python 2.5\n\n  - Running:\n\n    * ScenarioOutline: Annotates name with row.id, ... to better represent row.\n    * NEW: Active Tags, see docs (`New and Noteworthy`_).\n    * NEW: Test stages, see docs (`New and Noteworthy`_).\n    * NEW: User-specific configuration data, see docs (`New and Noteworthy`_).\n    * CHANGED: Undefined step snippet uses now NotImplementedError (related to: #254)\n\n  - Model:\n\n    * ScenarioOutline: Various improvements, see docs (`New and Noteworthy`_).\n\n  - Formatters:\n\n    * plain: Can now show tags, but currently disabled per default\n    * NEW: steps.catalog: Readable summary of all steps (similar to: steps.doc, #271)\n    * NEW: User-defined formatters, see docs (`New and Noteworthy`_).\n\nENHANCEMENTS:\n\n  * pull #285: Travis CI improvements to use container environment, etc. (provided by: thedrow)\n  * pull #272: Use option role to format command line arg docs (provided by: helenst)\n  * pull #271: Provide steps.catalog formatter (provided by: berdroid)\n  * pull #261: Support \"setup.cfg\" as configuration file, too (provided by: bittner)\n  * pull #260: Documentation tweaks and typo fixes (provided by: bittner)\n  * pull #254: Undefined step raises NotImplementedError instead of assert False (provided by: mhfrantz)\n  * issue #242: JUnitReporter can show scenario tags (provided by: rigomes)\n  * issue #240: Test Stages with different step implementations (provided by: attilammagyar, jenisys)\n  * issue #238: Allow to skip scenario in step function (provided by: hotgloupi, jenisys)\n  * issue #228: Exclude scenario fron run (provided by: jdeppe, jenisys)\n  * issue #227: Add a way to add command line options to behave (provided by: attilammagyar, jenisys)\n\nFIXED:\n\n  * pull  #283: Fix \"fork me\" image in docs (provided by: frodopwns)\n  * issue #280: Fix missing begin/end-markers in RegexMatcher (provided by: tomekwszelaki, jenisys)\n  * pull  #268: Fix py3 compatibility with all tests passed (provided by: sunliwen)\n  * pull  #252: Related to #251 (provided by: mcepl)\n  * pull  #190: UnicodeDecodeError in tracebacks (provided by: b3ni, vrutkovs, related to: #226, #230)\n  * issue #257: Fix JUnitReporter (XML) for Python3 (provided by: actionless)\n  * issue #249: Fix a number of docstring problems (provided by: masak)\n  * issue #253: Various problems in PrettyFormatter.exception()\n  * issue #251: Unicode crash in model.py (provided by: mcepl, jenisys)\n  * issue #236: Command line docs are confusing (solved by: #272)\n  * issue #230: problem with assert message that contains ascii over 128 value (provided by: jenisys)\n  * issue #226: UnicodeDecodeError in tracebacks (provided by: md1023, karulis, jenisys)\n  * issue #221: Fix some PY2/PY3 incompatibilities (provided by: johbo)\n  * pull  #219: IDE's unknown modules import issue (provided by: xbx)\n  * issue #216: Using --wip option does not disable ANSI escape sequences (coloring).\n  * issue #119: Python3 support for behave (solved by: #268 and ...)\n  * issue #82:  JUnitReporter fails with Python 3.x (fixed with: #257, #268)\n\n\n.. _`New and Noteworthy`: https://github.com/behave/behave/blob/master/docs/new_and_noteworthy.rst\n\n\nVersion: 1.2.4 (2014-03-02)\n-------------------------------------------------------------------------------\n\n:Same as: Version 1.2.4a1 (unreleased).\n\nNEWS and CHANGES:\n\n  - Running:\n\n    * ABORT-BY-USER: Better handle KeyboardInterrupt to abort a test run.\n    * feature list files (formerly: feature configfiles) support wildcards.\n    * Simplify and improve setup of logging subsystem (related to: #143, #177)\n\n  - Step matchers:\n\n    * cfparse: Step matcher with \"Cardinality Field\" support (was: optional).\n\n  - Formatters:\n\n    * steps.usage: Avoid duplicated steps usage due to Scenario Outlines.\n    * json: Ensures now that matched step params (match args) cause valid JSON.\n\n\nIMPROVEMENT:\n\n  * issue #108: behave.main() can be called with command-line args (provided by: medwards, jenisys)\n  * issue #172: Subfolders in junit XML filenames (provided by: roignac).\n  * issue #203: Integration with pdb (debug on error; basic support)\n  * Simple test runner to run behave tests from \"setup.py\"\n\nFIXED:\n\n  * issue #143: Logging starts with a StreamHandler way too early (provided by: jtatum, jenisys).\n  * issue #175: Scenario isn't marked as 'failed' when Background step fails\n  * issue #177: Cannot setup logging_format\n  * issue #181: Escape apostrophes in undefined steps snippets\n  * issue #184: TypeError when running behave with --include option (provided by: s1ider).\n  * issue #186: ScenarioOutline uses wrong return value when if fails (provided by: mdavezac)\n  * issue #188: Better diagnostics if nested step is undefined\n  * issue #191: Using context.execute_steps() may change context.table/.text\n  * issue #194: Nested steps prevent that original stdout/stderr is restored\n  * issue #199: behave tag expression bug when or-not logic is used\n\n\nVersion: 1.2.3 (2013-07-08)\n-------------------------------------------------------------------------------\n\nLatest stable version.\nSame as last development version.\n\n\nVersion: 1.2.3a20 (2013-07-08)\n-------------------------------------------------------------------------------\n\nNEWS and CHANGES:\n\n  - Install:\n\n    * Require now parse>=1.6.2 to enforce log-bugfix #14 (was: parse>=1.6)\n\n  - Running:\n\n    * load_step_definitions: Are now sorted before loading (due to: Linux, ...).\n    * NEW: Use lazy-loading for formatters if possible (speed up self-tests by 20%).\n\n  - Model:\n\n    * location: Now a FileLocation object (was: string), required for ordering.\n\n  - Formatters:\n\n    * NEW: progress3 formatter, ScenarioStepProgressFormatter (provided by: roignac).\n    * NEW: sphinx.steps formatter, generate Sphinx-based docs for step definitions (related to #166).\n    * NEW: steps formatter, shows available step definitions.\n    * NEW: steps.doc formatter, shows documentation of step definitions (related to: #55).\n    * NEW: steps.usage formatter, shows where step definitions are used.\n    * RENAMED: json-pretty, tag_count, tag_location => json.pretty, tags, tags.location\n    * help: Shows now a better formatted list (improve readability).\n\nIMPROVEMENT:\n\n  * issue #166: behave should have a tool (or formatter) that generates Sphinx-based documentation (basics provided).\n\nFIXED:\n\n  * issue #172: JUnit report filename sometimes truncated (provided by: roignac).\n  * issue #171: Importing step from other step file fails with AmbiguousStep Error.\n  * issue #165: FIX issue #114: do not print a blank line when the feature is skipped (provided by: florentx).\n  * issue #164: StepRegistry.find_match() extends registered step_type lists.\n  * issue #122: Failing selftest feature: selftest.features/duplicated_step.feature.\n  * issue #110: Normalize paths provided at the command line (provided by: jesper).\n\n\nVersion: 1.2.3a19 (2013-05-18)\n-------------------------------------------------------------------------------\n\nNEWS and CHANGES:\n\n  - Running (and model):\n\n    * NEW: Support scenario file locations on command-line, ala: \"{filename}:{line}\" (related to: #160).\n    * Formatters are now created only once (was: once for each feature).\n    * Scenarios can be now be selected by name or regular expression (#87).\n    * Dry-run mode: Detects now undefined steps.\n    * Dry-run mode: Uses untested counts now (was using: skipped counts).\n    * Run decision logic: Use ModelElement.mark_skipped() to preselect what not to run.\n    * Run decision logic: Use ModelElement.should_run() to decide if element should run.\n\n  - Parsing (and model):\n\n    * Parser: Add support for Scenario/ScenarioOutline descriptions (related to: #79).\n    * Parser: Refactor to simplify and avoid code duplications (related to: #79).\n    * Parser: Improve diagnostics when parse errors occur.\n    * Parser: Check that Backgrounds have no tags.\n    * NEW: json_parser, parses JSON output and builds model.\n    * json_parser: Add support for scenario descriptions (related to: #79).\n\n  - Formatters:\n\n    * INCOMPATIBLE CHANGE:\n      Formatter Ctor uses now StreamOpener instead of opened Stream.\n      Formatter output streams are now opened late, under control of the formatter.\n      This allows the formatter to support also directory mode (if needed).\n      Needed for RerunFormatter whose file was overwritten before it was read (#160).\n\n    * NEW: RerunFormatter to simplify to rerun last failing scenarios (related to: #160).\n    * NEW: TagLocationFormatter, shows where tags are used.\n    * NEW: TagCountFormatter, shows which tags are used and how often (reborn).\n    * JSONFormatter: Use JSON array mode now (related to: #161).\n    * JSONFormatter: Added \"type\" to Background, Scenario, ScenerioOutline (related to: #161).\n    * JSONFormatter: Added \"error_message\" to result (related to: #161).\n    * JSONFormatter: Use now list<lines> instead of string for multi-line text (related to: #161).\n    * JSONFormatter: Add support for scenario descriptions (related to: #79).\n    * JSONFormatter: Generates now valid JSON (well-formed).\n    * PlainFormatter: Shows now multi-line step parts (text, table), too.\n    * PrettyFormatter: Enters now monochrome mode if output is piped/redirected.\n    * ProgressFormatter: Flushes now output to provide better feedback.\n\n  - Reporters:\n\n    * JUnitReporter: Show complete scenario w/ text/tables. Improve readability.\n    * SummaryReporter: Summary shows now untested items if one or more exist.\n\n  - Testing, development:\n\n    * tox: Use tox now in off-line mode per default (use: \"tox -e init\"...).\n    * Add utility script to show longest step durations based on JSON data.\n    * JSON: Add basic JSON schema to support JSON output validation (related to: #161).\n    * JSON: Add helper script to validate JSON output against its schema (related to: #161).\n\n\nIMPROVEMENT:\n\n  * issue #161: JSONFormatter: Should use a slightly different output schema (provided by: jenisys)\n  * issue #160: Support rerun file with failed features/scenarios during the last test run (provided by: jenisys)\n  * issue #154: Support multiple formatters (provided by: roignac, jenisys)\n  * issue #103: sort feature file by name in a given directory (provided by: gurneyalex).\n  * issue #102: Add configuration file setting for specifying default feature paths (provided by: lrowe).\n  * issue  #87: Add --name option support (provided by: johbo, jenisys).\n  * issue  #79: Provide Support for Scenario Descriptions (provided by: caphrim007, jenisys).\n  * issue  #42: Show all undefined steps taking tags into account (provided by: roignac, jenisys)\n\nFIXED:\n\n  * issue #162 Unnecessary ContextMaskWarnings when assert fails or exception is raised (provided by: jenisys).\n  * issue #159: output stream is wrapped twice in the codecs.StreamWriter (provided by: florentx).\n  * issue #153: The runtime should not by-pass the formatter to print line breaks minor.\n  * issue #152: Fix encoding issues (provided by: devainandor)\n  * issue #145: before_feature/after_feature should not be skipped (provided by: florentx).\n  * issue #141: Don't check for full package in issue 112 (provided by: roignac).\n  * issue #125: Duplicate \"Captured stdout\" if substep has failed (provided by: roignac).\n  * issue  #60: JSONFormatter has several problems (last problem fixed).\n  * issue  #48: Docs aren't clear on how Background is to be used.\n  * issue  #47: Formatter processing chain is broken (solved by: #154).\n  * issue  #33: behave 1.1.0: Install fails under Windows (verified, solved already some time ago).\n  * issue  #28: Install fails on Windows (verified, solved already some time ago).\n\n\nVersion: 1.2.2.18 (2013-03-20)\n-------------------------------------------------------------------------------\n\nNEWS and CHANGES:\n\n  * NullFormatter provided\n  * model.Row: Changed Ctor parameter ordering, move seldom used to the end.\n  * model.Row: Add methods .get(), .as_dict() and len operator (related to: #27).\n  * Introduce ``behave.compat`` as compatibility layer for Python versions.\n\nIMPROVEMENT:\n\n  * issue #117: context.execute_steps() should also support steps with multi-line text or table\n  * issue #116: SummaryReporter shows list of failing scenarios (provided by: roignac).\n  * issue #112: Improvement to AmbiguousStep error diagnostics\n  * issue #74:  django-behave module now available at pypi (done: 2012-10-04).\n  * issue #27:  Row should support .get() to be more dict-like\n\nFIXED:\n\n  * issue #135: Avoid leaking globals between step modules.\n  * issue #114: No blank lines when option --no-skipped is used (provided by: florentx).\n  * issue #111: Comment following @wip tag results in scenario being ignored\n  * issue  #83: behave.__main__:main() Various sys.exit issues\n  * issue  #80: source file names not properly printed with python 3.3.0\n  * issue  #62: --format=json: Background steps are missing (fixed: some time ago).\n\nRESOLVED:\n\n * issue #98: Summary should include the names of the first X tests that failed (solved by: #116).\n\n\nVersion: 1.2.2.16 (2013-02-10)\n-------------------------------------------------------------------------------\n\nNEW:\n\n  * \"progress\" formatter added (from jenisy-repo).\n  * Add \"issue.features/\" to simplify verification/validation of issues (from jenisy-repo).\n\nFIXED:\n\n  * issue #107: test/ directory gets installed into site-packages\n  * issue #99: Layout variation \"a directory containing your feature files\" is broken for running single features\n  * issue #96: Sub-steps failed without any error info to help debug issue\n  * issue #85: AssertionError with nested regex and pretty formatter\n  * issue #84: behave.runner behave does not reliably detected failed test runs\n  * issue #75: behave @list_of_features.txt is broken.\n  * issue #73: current_matcher is not predictable.\n  * issue #72: Using GHERKIN_COLORS caused an TypeError.\n  * issue #70: JUnitReporter: Generates invalid UTF-8 in CDATA sections (stdout/stderr output) when ANSI escapes are used.\n  * issue #69: JUnitReporter: Fault when processing ScenarioOutlines with failing steps\n  * issue #67: JSON formatter cannot serialize tables.\n  * issue #66: context.table and context.text are not cleared.\n  * issue #65: unrecognized --tag-help argument.\n  * issue #64: Exit status not set to 1 even there are failures in certain cases (related to: #52)\n  * issue #63: 'ScenarioOutline' object has no attribute 'stdout'.\n  * issue #35: \"behave --format=plain --tags @one\" seems to execute right scenario w/ wrong steps\n  * issue #32: \"behave ... --junit-directory=xxx\" fails for more than 1 level\n\nRESOLVED:\n\n  * issue #81: Allow defining steps in a separate library.\n  * issue #78: Added references to django-behave (pull-request).\n  * issue #77: Does not capture stdout from sub-processes\n\nREJECTED:\n\n  * issue #109: Insists that implemented tests are not implemented (not reproducable)\n  * issue #100: Forked package installs but won't run on RHEL.\n  * issue #88: Python 3 compatibility changes (=> use 2to3 tool instead).\n\nDUPLICATED:\n\n  * issue #106: When path is to a feature file only one folder level usable (same as #99).\n  * issue #105: behave's exit code only depends on the last scenario of the last feature (same as #95).\n  * issue #95: Failed test run still returns exit code 0 (same as #84, #64).\n  * issue #94: JUnit format does not handle ScenarioOutlines (same as #69).\n  * issue #92: Output from --format=plain shows skipped steps in next scenario (same as #35).\n  * issue #34: \"behave --version\" runs features, but shows no version (same as #30)\n\n\n\nVersion 1.2.2 - August 21, 2012\n-------------------------------------------------------------------------------\n\n* Fix for an error when an assertion message contains Unicode characters.\n* Don't repr() the step text in snippets to avoid turning Unicode text into\n  backslash hell.\n\n\nVersion 1.2.1 - August 19, 2012\n-------------------------------------------------------------------------------\n\n* Fixes for JSON output.\n* Move summary reporter and snippet output to stderr.\n\n\nVersion 1.2.0 - August 18, 2012\n-------------------------------------------------------------------------------\n\n* Changed step name provided in snippets to avoid issues with the @step\n  decorator.\n* Use setup to create console scripts.\n* Fixed installation on Windows.\n* Fix ANSI escape sequences for cursor movement and text colourisation.\n* Fixes for various command-line argument issues.\n* Only print snippets once per unique step.\n* Reworked logging capture.\n* Fixes for dry-run mode.\n* General fixes.\n\n\nVersion 1.1.0 - January 23, 2012\n-------------------------------------------------------------------------------\n\n* Context variable now contains current configuration.\n* Context values can now be tested for (``name in context``) and deleted.\n* ``__file__`` now available inside step definition files.\n* Fixes for various formatting issues.\n* Add support for configuration files.\n* Add finer-grained controls for various things like log capture, coloured\n  output, etc.\n* Fixes for tag handling.\n* Various documentation enhancements, including an example of full-stack\n  testing with Django thanks to David Eyk.\n* Split reports into a set of modules, add junit output.\n* Added work-in-progress (\"wip\") mode which is useful when developing new code\n  or new tests. See documentation for more details.\n\n\nVersion 1.0.0 - December 5, 2011\n-------------------------------------------------------------------------------\n\n* Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.3310546875,
          "content": "Copyright (c) 2012-2014 Benno Rice, Richard Jones and others, except where noted.\nCopyright (c) 2014-2023 Jens Engel and others, except where noted.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.9990234375,
          "content": "include README.rst\ninclude CHANGES.rst\ninclude MANIFEST.in\ninclude LICENSE\ninclude .coveragerc\ninclude .editorconfig\ninclude .pylintrc\ninclude .readthedocs.yaml\ninclude .ruff.toml\ninclude *.cfg\ninclude *.ini\ninclude *.py\ninclude *.rst\ninclude *.txt\ninclude *.yml\ninclude *.yaml\nexclude __*.txt\ninclude bin/behave*\ninclude bin/invoke*\nrecursive-include bin           *.py *.cmd *.sh\nrecursive-include behave4cmd0   *.py\nrecursive-include docs          *.rst *.txt *.css *.py *.html *.rst-* *.png Makefile\nrecursive-include etc           *.xsd *.txt *.json-schema\nrecursive-include examples      *.py *.feature *.txt *.rst *.ini\nrecursive-include features      *.feature *.py *.txt\nrecursive-include issue.features  *.feature *.py *.txt\nrecursive-include more.features *.feature *.py *.txt *.rst\nrecursive-include py.requirements  *.txt *.rst\nrecursive-include tasks         *.py *.txt\nrecursive-include tests         *.py *.txt\nrecursive-include tools         *.feature *.py\n\nprune .direnv\nprune .tox\nprune .venv*\nprune __*\n"
        },
        {
          "name": "PROJECT_INFO.rst",
          "type": "blob",
          "size": 1.103515625,
          "content": "Project Info\n===============================================================================\n\n=============== ===================================================================\nCategory        Hyperlink\n=============== ===================================================================\nDocumentation:  https://behave.readthedocs.io/ for `latest`_ and `stable`_ (`PDF`_)\nDownload:       https://pypi.python.org/pypi/behave (or: `github archive`_)\nRepository:     https://github.com/behave/behave\nIssues:         https://github.com/behave/behave/issues\nChangelog:      `CHANGES.rst <CHANGES.rst>`_\nNewsgroup:      https://groups.google.com/forum/#!forum/behave-users\n=============== ===================================================================\n\n.. hint::\n\n    The PyPI version is the latest stable version.\n    Otherwise, use the latest stable tag or the \"bleeding edge\" from Github.\n\n.. _latest: https://behave.readthedocs.io/en/latest/\n.. _stable: https://behave.readthedocs.io/en/stable/\n.. _PDF:    https://media.readthedocs.org/pdf/behave/latest/behave.pdf\n\n.. _`github archive`: https://github.com/behave/behave/tags\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.5498046875,
          "content": "======\nbehave\n======\n\n.. |badge.latest_version| image:: https://img.shields.io/pypi/v/behave.svg\n    :target: https://pypi.python.org/pypi/behave\n    :alt: Latest Version\n\n.. |badge.license| image:: https://img.shields.io/pypi/l/behave.svg\n    :target: https://pypi.python.org/pypi/behave/\n    :alt: License\n\n.. |badge.CI_status| image:: https://github.com/behave/behave/actions/workflows/tests.yml/badge.svg\n    :target: https://github.com/behave/behave/actions/workflows/tests.yml\n    :alt: CI Build Status\n\n.. |badge.docs_status| image:: https://readthedocs.org/projects/behave/badge/?version=latest\n    :target: https://behave.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. |badge.discussions| image:: https://img.shields.io/badge/chat-github_discussions-darkgreen\n   :target: https://github.com/behave/behave/discussions\n   :alt: Discussions at https://github.com/behave/behave/discussions\n\n.. |badge.gitter| image:: https://badges.gitter.im/join_chat.svg\n   :target: https://app.gitter.im/#/room/#behave_behave:gitter.im\n   :alt: Chat at https://gitter.im/behave/behave\n\n.. |badge.gurubase| image:: https://img.shields.io/badge/Gurubase-Ask%20behave%20Guru-006BFF\n   :target: https://gurubase.io/g/behave\n   :alt: Ask behave Guru at https://gurubase.io/g/behave\n\n\n.. |logo| image:: https://raw.github.com/behave/behave/master/docs/_static/behave_logo1.png\n\n|badge.latest_version| |badge.license| |badge.CI_status| |badge.docs_status| |badge.discussions| |badge.gitter| |badge.gurubase|\n\nbehave is behavior-driven development, Python style.\n\n|logo|\n\nBehavior-driven development (or BDD) is an agile software development\ntechnique that encourages collaboration between developers, QA and\nnon-technical or business participants in a software project.\n\n*behave* uses tests written in a natural language style, backed up by Python\ncode.\n\nFirst, `install *behave*.`_\n\n\nNow make a directory called \"features/\".\nIn that directory create a file called \"example.feature\" containing:\n\n.. code-block:: gherkin\n\n    # -- FILE: features/example.feature\n    Feature: Showing off behave\n\n      Scenario: Run a simple test\n        Given we have behave installed\n         When we implement 5 tests\n         Then behave will test them for us!\n\nMake a new directory called \"features/steps/\".\nIn that directory create a file called \"example_steps.py\" containing:\n\n.. code-block:: python\n\n    # -- FILE: features/steps/example_steps.py\n    from behave import given, when, then, step\n\n    @given('we have behave installed')\n    def step_impl(context):\n        pass\n\n    @when('we implement {number:d} tests')\n    def step_impl(context, number):  # -- NOTE: number is converted into integer\n        assert number > 1 or number == 0\n        context.tests_count = number\n\n    @then('behave will test them for us!')\n    def step_impl(context):\n        assert context.failed is False\n        assert context.tests_count >= 0\n\nRun behave:\n\n.. code-block:: console\n\n    $ behave\n    Feature: Showing off behave # features/example.feature:2\n\n      Scenario: Run a simple test          # features/example.feature:4\n        Given we have behave installed     # features/steps/example_steps.py:4\n        When we implement 5 tests          # features/steps/example_steps.py:8\n        Then behave will test them for us! # features/steps/example_steps.py:13\n\n    1 feature passed, 0 failed, 0 skipped\n    1 scenario passed, 0 failed, 0 skipped\n    3 steps passed, 0 failed, 0 skipped, 0 undefined\n\nNow, continue reading to learn how to get the most out of *behave*. To get started,\nwe recommend the `tutorial`_ and then the `feature testing language`_ and\n`api`_ references.\n\n\n.. _`Install *behave*.`: https://behave.readthedocs.io/en/stable/install.html\n.. _`tutorial`: https://behave.readthedocs.io/en/stable/tutorial.html#features\n.. _`feature testing language`: https://behave.readthedocs.io/en/stable/gherkin.html\n.. _`api`: https://behave.readthedocs.io/en/stable/api.html\n\n\nMore Information\n-------------------------------------------------------------------------------\n\n* `behave documentation`_: `latest edition`_, `stable edition`_, `PDF`_\n* `behave.example`_: Behave Examples and Tutorials (docs, executable examples).\n* `changelog`_ (latest changes)\n\n\n.. _behave documentation: https://behave.readthedocs.io/\n.. _changelog:      https://github.com/behave/behave/blob/main/CHANGES.rst\n.. _behave.example: https://github.com/behave/behave.example\n\n.. _`latest edition`: https://behave.readthedocs.io/en/latest/\n.. _`stable edition`: https://behave.readthedocs.io/en/stable/\n.. _PDF:              https://behave.readthedocs.io/_/downloads/en/stable/pdf/\n"
        },
        {
          "name": "VERSION.txt",
          "type": "blob",
          "size": 0.0107421875,
          "content": "1.2.7.dev7\n"
        },
        {
          "name": "behave.ini",
          "type": "blob",
          "size": 1.7939453125,
          "content": "# =============================================================================\n# BEHAVE CONFIGURATION\n# =============================================================================\n# FILE: .behaverc, behave.ini, setup.cfg, tox.ini, pyproject.toml\n#\n# SEE ALSO:\n#  * https://behave.readthedocs.io/en/latest/behave/#configuration-files\n#  * https://github.com/behave/behave\n#  * https://pypi.org/project/behave/\n# =============================================================================\n\n[behave]\ndefault_tags = not (@xfail or @not_implemented)\nshow_skipped = false\nformat   = rerun\n    progress3\noutfiles = rerun.txt\n    build/behave.reports/report_progress3.txt\njunit = true\njunit_directory = build/behave.reports\nlogging_level = INFO\n# logging_format = LOG.%(levelname)-8s  %(name)-10s: %(message)s\n# logging_format = LOG.%(levelname)-8s  %(asctime)s  %(name)-10s: %(message)s\n\n# -- ALLURE-FORMATTER REQUIRES: pip install allure-behave\n# brew install allure\n# pip install allure-behave\n# ALLURE_REPORTS_DIR=allure.reports\n# behave -f allure -o $ALLURE_REPORTS_DIR ...\n# allure serve $ALLURE_REPORTS_DIR\n#\n# SEE ALSO:\n# * https://github.com/allure-framework/allure2\n# * https://github.com/allure-framework/allure-python\n#\n# -- HTML-FORMATTER REQUIRES: pip install behave-html-formatter\n# SEE ALSO: https://github.com/behave-contrib/behave-html-formatter\n[behave.formatters]\nallure = allure_behave.formatter:AllureFormatter\nhtml   = behave_html_formatter:HTMLFormatter\n\n# -- RUNNER ALIASES:\n# SCHEMA:  runner_alias = scoped_runner.module_name:class_name\n# EXAMPLE: default = behave.runner:Runner\n[behave.runners]\n\n\n# -- PREPARED:\n#  [behave]\n#  format = ... missing_steps ...\n#  output = ... features/steps/missing_steps.py ...\n#  [behave.formatters]\n#  missing_steps = behave.contrib.formatter_missing_steps:MissingStepsFormatter\n"
        },
        {
          "name": "behave",
          "type": "tree",
          "content": null
        },
        {
          "name": "behave4cmd0",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 1.2333984375,
          "content": "# -*- coding: UTF-8 -*-\n\"\"\"\nConfigure pytest environment.\nAdd project-specific information.\n\n.. seealso::\n    * https://github.com/pytest-dev/pytest-html\n\"\"\"\n\nimport behave\nimport pytest\n\n\n# ---------------------------------------------------------------------------\n# PYTEST FIXTURES:\n# ---------------------------------------------------------------------------\n@pytest.fixture(autouse=True)\ndef _annotate_environment(request):\n    \"\"\"Add project-specific information to test-run environment:\n\n    * behave.version\n\n    NOTE: autouse: Fixture is automatically used when test-module is imported.\n    \"\"\"\n    # -- USEFULL FOR: pytest --html=report.html ...\n    environment = getattr(request.config, \"_environment\", None)\n    if environment:\n        # -- PROVIDED-BY: pytest-html\n        behave_version = behave.__version__\n        environment.append((\"behave\", behave_version))\n\n_pytest_version = pytest.__version__\nif _pytest_version >= \"5.0\":\n    # -- SUPPORTED SINCE: pytest 5.0\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def log_global_env_facts(record_testsuite_property):\n        # SEE: https://docs.pytest.org/en/latest/usage.html\n        behave_version = behave.__version__\n        record_testsuite_property(\"BEHAVE_VERSION\", behave_version)\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "features",
          "type": "tree",
          "content": null
        },
        {
          "name": "invoke.yaml",
          "type": "blob",
          "size": 1.041015625,
          "content": "# =====================================================\n# INVOKE CONFIGURATION: behave\n# =====================================================\n# -- ON WINDOWS:\n# run:\n#   echo: true\n#   pty:  false\n#   shell: C:\\Windows\\System32\\cmd.exe\n# =====================================================\n# MAYBE: tasks: auto_dash_names: false\n\n---\nproject:\n  name: behave\n\nrun:\n  echo: true\n\nsphinx:\n  sourcedir: \"docs\"\n  destdir: \"build/docs\"\n  language: en\n  languages:\n    - en\n    - de\n    # PREPARED: - zh-CN\n\ncleanup:\n  extra_directories:\n    - \"build\"\n    - \"dist\"\n    - \"__WORKDIR__\"\n    - reports\n\n  extra_files:\n    - \"etc/gherkin/gherkin*.json.SAVED\"\n    - \"etc/gherkin/i18n.py\"\n\ncleanup_all:\n  extra_directories:\n    - .hypothesis\n    - .pytest_cache\n    - .direnv\n    - .tox\n    - \".venv*\"\n\n  extra_files:\n    - \"**/testrun*.json\"\n    - \".done.*\"\n    - \"*.lock\"\n    - \"*.log\"\n    - .coverage\n    - rerun.txt\n\nbehave_test:\n  scopes:\n    - features\n    - tools/test-features\n    - issue.features\n  args:\n    - features\n    - tools/test-features\n    - issue.features\n"
        },
        {
          "name": "issue.features",
          "type": "tree",
          "content": null
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 4.1416015625,
          "content": "# =============================================================================\n# justfile: A makefile like build script -- Command Runner\n# =============================================================================\n# REQUIRES: cargo install just\n# PLATFORMS: macOS, Linux, Windows, ...\n# USAGE:\n#   just --list\n#   just <TARGET>\n#   just <TARGET> <PARAM_VALUE1> ...\n#\n# SEE ALSO:\n#   * https://github.com/casey/just\n# =============================================================================\n# WORKS BEST FOR: macOS, Linux\n# PLATFORM HINTS:\n#  * Windows: Python 3.x has only \"python.exe\", but no \"python3.exe\"\n#             HINT: Requires \"bash.exe\", provided by WSL or git-bash.\n#  * Linux: Python 3.x has only \"python3\", but no \"python\" (for newer versions)\n#           HINT: \"python\" seems to be used for \"python2\".\n# =============================================================================\n\n# -- OPTION: Load environment-variables from \"$HERE/.env\" file (if exists)\nset dotenv-load\nset export := true\n\n# -----------------------------------------------------------------------------\n# CONFIG:\n# -----------------------------------------------------------------------------\nHERE   := justfile_directory()\nPYTHON_DEFAULT := if os() == \"windows\" { \"python\" } else { \"python3\" }\nPYTHON := env_var_or_default(\"PYTHON\", PYTHON_DEFAULT)\nPIP_INSTALL_OPTIONS := env_var_or_default(\"PIP_INSTALL_OPTIONS\", \"--quiet\")\n\nBEHAVE_FORMATTER := env_var_or_default(\"BEHAVE_FORMATTER\", \"progress\")\nPYTEST_OPTIONS   := env_var_or_default(\"PYTEST_OPTIONS\", \"\")\n\n# -----------------------------------------------------------------------------\n# BUILD RECIPES / TARGETS:\n# -----------------------------------------------------------------------------\n\n# DEFAULT-TARGET: Ensure that packages are installed and runs tests.\ndefault: (_ensure-install-packages \"basic\") (_ensure-install-packages \"testing\") test-all\n\n# PART=all, testing, ...\ninstall-packages PART=\"all\":\n    @echo \"INSTALL-PACKAGES: {{PART}} ...\"\n    {{PYTHON}} -m pip install {{PIP_INSTALL_OPTIONS}} -r py.requirements/{{PART}}.txt\n    @touch \"{{HERE}}/.done.install-packages.{{PART}}\"\n\n# ENSURE: Python packages are installed.\n_ensure-install-packages PART=\"all\":\n    #!/usr/bin/env python3\n    from subprocess import run\n    from os import path\n    if not path.exists(\"{{HERE}}/.done.install-packages.{{PART}}\"):\n        run(\"just install-packages {{PART}}\", shell=True)\n\n# -- SIMILAR: This solution requires a Bourne-like shell (may not work on: Windows).\n# _ensure-install-packages PART=\"testing\":\n#   @test -e \"{{HERE}}/.done.install-packages.{{PART}}\" || just install-packages {{PART}}\n\n# Run tests.\ntest *TESTS:\n    {{PYTHON}} -m pytest {{PYTEST_OPTIONS}} {{TESTS}}\n\n# Run behave with feature file(s) or directory(s).\nbehave +FEATURE_FILES=\"features\":\n    {{PYTHON}} {{HERE}}/bin/behave --format={{BEHAVE_FORMATTER}} {{FEATURE_FILES}}\n\n# Run all behave tests.\nbehave-all:\n    {{PYTHON}} bin/behave --format={{BEHAVE_FORMATTER}} features\n    {{PYTHON}} bin/behave --format={{BEHAVE_FORMATTER}} issue.features\n    {{PYTHON}} bin/behave --format={{BEHAVE_FORMATTER}} tools/test-features\n\n# Run behave with code coverage collection(s) enabled.\ncoverage-behave:\n    export COVERAGE_PROCESS_START=\"{{HERE}}/.coveragerc\"\n    {{PYTHON}} bin/behave --format={{BEHAVE_FORMATTER}} features\n    {{PYTHON}} bin/behave --format={{BEHAVE_FORMATTER}} issue.features\n    {{PYTHON}} bin/behave --format={{BEHAVE_FORMATTER}} tools/test-features\n    COVERAGE_PROCESS_START=\n\n# Run all behave tests.\ntest-all: test behave-all\n\n# Determine test coverage by running the tests.\ncoverage:\n    coverage run -m pytest\n    export COVERAGE_PROCESS_START=\"{{HERE}}/.coveragerc\"\n    just coverage-behave\n    COVERAGE_PROCESS_START=\n    coverage combine\n    coverage report\n    coverage html\n\n# coverage run -m behave --format={{BEHAVE_FORMATTER}} features\n# coverage run -m behave --format={{BEHAVE_FORMATTER}} issue.features\n# coverage run -m behave --format={{BEHAVE_FORMATTER}} tools/test-features\n\n# Cleanup most parts (but leave PRECIOUS parts).\ncleanup: (_ensure-install-packages \"invoke\")\n    invoke cleanup\n\n# Cleanup everything.\ncleanup-all: (_ensure-install-packages \"invoke\")\n    invoke cleanup.all\n"
        },
        {
          "name": "more.features",
          "type": "tree",
          "content": null
        },
        {
          "name": "py.requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 8.6162109375,
          "content": "# =============================================================================\n# PACKAGE: behave\n# =============================================================================\n# SPDX-License-Identifier: BSD-2-Clause\n# DESCRIPTION:\n#   Provides a \"pyproject.toml\" for packaging usecases of this package.\n#\n# REASONS:\n#   * Python project will need a \"pyproject.toml\" soon to be installable with \"pip\".\n#   * Currently, duplicates information from \"setup.py\" here.\n#   * \"setup.py\" is kept until Python 2.7 support is dropped\n#   * \"setup.py\" is sometimes needed in some weird cases (old pip version, ...)\n#\n# SEE ALSO:\n#   * https://packaging.python.org/en/latest/tutorials/packaging-projects/\n#   * https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html\n#   * https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/\n#\n# RELATED: Project-Metadata Schema\n#   * https://packaging.python.org/en/latest/specifications/declaring-project-metadata/\n#   * https://packaging.python.org/en/latest/specifications/core-metadata/\n#   * https://pypi.org/classifiers/\n#   * https://spdx.org/licenses/preview/\n#\n# PEPs: https://peps.python.org/pep-XXXX/\n#   * PEP 508 – Dependency specification for Python Software Packages\n#   * PEP 621 – Storing project metadata in pyproject.toml => CURRENT-SPEC: declaring-project-metadata\n#   * PEP 631 – Dependency specification in pyproject.toml based on PEP 508\n#   * PEP 639 – Improving License Clarity with Better Package Metadata\n# =============================================================================\n# PREPARED-FOR: setuptools-scm\n#   * BUT: v1.2.7.devX causes problems with setuptools-scm\n#\n# SEE ALSO:\n#   * https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html\n#   * https://pypi.org/classifiers/\n#\n# PREPARED:\n#   * https://setuptools-scm.readthedocs.io/en/latest/usage/\n# =============================================================================\n# PYTHON3: requires = [\"setuptools>=64\", \"setuptools_scm>=8\", \"wheel\"]\n\n[build-system]\nrequires = [\"setuptools\", \"setuptools_scm\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n\n[project]\nname = \"behave\"\nauthors = [\n    {name = \"Jens Engel\", email = \"jenisys@noreply.github.com\"},\n    {name = \"Benno Rice\"},\n    {name = \"Richard Jones\"},\n]\nmaintainers = [\n    {name = \"Jens Engel\", email = \"jenisys@noreply.github.com\"},\n    {name = \"Peter Bittner\", email = \"bittner@noreply.github.com\"},\n]\ndescription = \"behave is behaviour-driven development, Python style\"\ndynamic = [\"version\"]\nreadme = \"README.rst\"\nrequires-python = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"\nkeywords = [\n    \"BDD\", \"behavior-driven-development\", \"bdd-framework\",\n    \"behave\", \"gherkin\", \"cucumber-like\"\n]\nlicense = {text = \"BSD-2-Clause\"}\n# DISABLED: license-files = [\"LICENSE\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Console\",\n    \"Intended Audience :: Developers\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python :: 2\",\n    \"Programming Language :: Python :: 2.7\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.5\",\n    \"Programming Language :: Python :: 3.6\",\n    \"Programming Language :: Python :: 3.7\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: Jython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Software Development :: Testing\",\n    \"License :: OSI Approved :: BSD License\",\n]\ndependencies = [\n    \"cucumber-tag-expressions >= 4.1.0\",\n    \"cucumber-expressions >= 17.1.0; python_version >= '3.8'\",\n    \"enum34; python_version < '3.4'\",\n    \"parse >= 1.18.0\",\n    \"parse-type >= 0.6.0\",\n    \"six >= 1.15.0\",\n    \"traceback2; python_version < '3.0'\",\n\n    # -- PREPARED:\n    \"win_unicode_console; python_version <= '3.9'\",\n    \"contextlib2;  python_version < '3.5'\",\n    \"colorama >= 0.3.7\",\n\n    # -- SUPPORT: \"pyproject.toml\" (or: \"behave.toml\")\n    \"tomli>=1.1.0; python_version >=  '3.0' and python_version < '3.11'\",\n    \"toml>=0.10.2; python_version <  '3.0'\",  # py27 support\n]\n\n[project.urls]\nHomepage  = \"https://github.com/behave/behave\"\nDocumentation = \"https://behave.readthedocs.io/en/latest/\"\nRepository = \"https://github.com/behave/behave\"\nIssues = \"https://github.com/behave/behave/issues/\"\nChangelog = \"https://github.com/behave/behave/blob/main/CHANGES.rst\"\n\n[project.scripts]\nbehave = \"behave.__main__:main\"\n\n[project.optional-dependencies]\ndevelop = [\n    \"build >= 0.5.1\",\n    \"twine >= 1.13.0\",\n    \"coverage >= 5.0\",\n    \"pytest >=4.2,<5.0; python_version <  '3.0'\",\n    \"pytest >= 5.0; python_version >= '3.0'\",\n    \"pytest-html >= 1.19.0,<2.0; python_version <  '3.0'\",\n    \"pytest-html >= 2.0;         python_version >= '3.0'\",\n    \"mock  <  4.0;   python_version <  '3.6'\",\n    \"mock  >= 4.0;   python_version >= '3.6'\",\n    \"PyHamcrest >= 2.0.2; python_version >= '3.0'\",\n    \"PyHamcrest <  2.0;   python_version <  '3.0'\",\n    \"pytest-cov\",\n    \"tox   >= 1.8.1,<4.0\",   # -- HINT: tox >= 4.0 has breaking changes.\n    \"virtualenv < 20.22.0\",  # -- SUPPORT FOR: Python 2.7, Python <= 3.6\n    \"invoke >=1.7.0,<2.0; python_version <  '3.6'\",\n    \"invoke >=1.7.0;      python_version >= '3.6'\",\n    # -- HINT, was RENAMED: path.py => path (for python3)\n    \"path    >= 13.1.0; python_version >= '3.5'\",\n    \"path.py >= 11.5.0; python_version <  '3.5'\",\n    \"pycmd\",\n    \"pathlib; python_version <= '3.4'\",\n    \"modernize >= 0.5\",\n    \"pylint\",\n    \"ruff; python_version >=  '3.7'\",\n]\ndocs = [\n    \"sphinx >= 7.3.7;   python_version >= '3.7'\",\n    \"sphinx >=1.6,<4.4; python_version < '3.7'\",\n    \"furo >= 2024.04.27; python_version >= '3.8'\",\n    # -- CONSTRAINTS UNTIL: sphinx > 5.0 is usable -- 2024-01\n    # PROBLEM: sphinxcontrib-applehelp v1.0.8 requires sphinx > 5.0\n    # SEE: https://stackoverflow.com/questions/77848565/sphinxcontrib-applehelp-breaking-sphinx-builds-with-sphinx-version-less-than-5-0\n    \"sphinxcontrib-applehelp >= 1.0.8; python_version >= '3.7'\",\n    \"sphinxcontrib-htmlhelp >= 2.0.5;  python_version >= '3.7'\",\n    # -- SPHINX-EXTENSIONS:\n    \"sphinx-copybutton >= 0.5.2; python_version >= '3.7'\",\n]\nformatters = [\n    \"behave-html-formatter >= 0.9.10; python_version >= '3.6'\",\n    \"behave-html-pretty-formatter >= 1.9.1; python_version >= '3.6'\"\n]\ntesting = [\n    \"pytest <  5.0; python_version <  '3.0'\", # >= 4.2\n    \"pytest >= 5.0; python_version >= '3.0'\",\n    \"pytest-html >= 1.19.0,<2.0; python_version <  '3.0'\",\n    \"pytest-html >= 2.0;         python_version >= '3.0'\",\n    \"mock  <  4.0;   python_version <  '3.6'\",\n    \"mock  >= 4.0;   python_version >= '3.6'\",\n    \"PyHamcrest >= 2.0.2; python_version >= '3.0'\",\n    \"PyHamcrest <  2.0;   python_version <  '3.0'\",\n    \"assertpy >= 1.1\",\n\n    # -- HINT: path.py => path (python-install-package was renamed for python3)\n    \"path >= 13.1.0;         python_version >= '3.5'\",\n    \"path.py >=11.5.0,<13.0; python_version <  '3.5'\",\n    # -- PYTHON2 BACKPORTS:\n    \"pathlib;    python_version <= '3.4'\",\n\n    # -- EXTRA PYTHON PACKAGES: Used for some tests\n    \"freezegun >= 1.5.1; python_version > '3.7'\",\n]\n# -- BACKWORD-COMPATIBLE SECTION: Can be removed in the future\n# HINT: Package-requirements are now part of \"dependencies\" parameter above.\ntoml = [\n    \"tomli>=1.1.0; python_version >=  '3.0' and python_version < '3.11'\",\n    \"toml>=0.10.2; python_version <  '3.0'\",\n]\n\n\n# -- BECOMING-DEPRECATED: Remove it after Python 2.7 support is dropped.\n[tool.distutils.bdist_wheel]\nuniversal = true\n\n\n# -----------------------------------------------------------------------------\n# PACAKING TOOL SPECIFIC PARTS:\n# -----------------------------------------------------------------------------\n[tool.setuptools]\nplatforms = [\"any\"]\nzip-safe = true\n\n[tool.setuptools.dynamic]\nversion = {attr = \"behave.version.VERSION\"}\n\n[tool.setuptools.packages.find]\nwhere = [\".\"]\ninclude = [\"behave*\"]\nexclude = [\"behave4cmd0*\", \"tests*\"]\nnamespaces = false\n\n# -- PREPARED: SETUPTOOLS-SCM: Generate version info from git-tag(s).\n# # GIT-TAG MATCHER: Only use git-tags that start with \"v\", like: \"v1.2.6\"\n# [tool.setuptools_scm]\n# git_describe_command = \"git describe --match 'v[0-9]*'\"\n# version_file = \"behave/version.py\"\n\n\n# -----------------------------------------------------------------------------\n# PYLINT:\n# -----------------------------------------------------------------------------\n[tool.pylint.messages_control]\ndisable = \"C0330, C0326\"\n\n[tool.pylint.format]\nmax-line-length = \"100\"\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 1.2021484375,
          "content": "# ============================================================================\n# PYTEST CONFIGURATION FILE\n# ============================================================================\n# NOTE:\n#   Can also be defined in in tox.ini or pytest.ini file.\n#\n# SEE ALSO:\n#  * https://pytest.org/\n#  * https://pytest.org/latest/customize.html\n#  * https://pytest.org/latest/usage.html\n# ============================================================================\n# MORE OPTIONS:\n#  addopts =\n#  python_classes=*Test\n#  python_functions=test_*\n# ============================================================================\n\n[pytest]\nminversion    = 4.2\ntestpaths     = tests\npython_files  = test_*.py\njunit_family = xunit2\naddopts = --metadata PACKAGE_UNDER_TEST behave\n    --html=build/testing/report.html --self-contained-html\n    --junit-xml=build/testing/report.xml\nmarkers =\n    smoke\n    slow\n\n# -- PREPARED:\nfilterwarnings =\n    ignore:.*the imp module is deprecated in favour of importlib.*:DeprecationWarning\n    # ignore::DeprecationWarning:module_name.*#   ignore:.*invalid escape sequence.*:DeprecationWarning\n\n# -- BACKWARD COMPATIBILITY: pytest < 2.8\n# norecursedirs = .git .tox build dist py.requirements tmp* _WORKSPACE\n\n"
        },
        {
          "name": "tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 3.59375,
          "content": "# ============================================================================\n# TOX CONFIGURATION: behave\n# ============================================================================\n# REQUIRES: pip install tox\n# DESCRIPTION:\n#   Use tox to run tasks (tests, ...) in a clean virtual environment.\n#\n# USAGE:\n#   tox -e py312         #< Run tests with python3.9\n#\n# SEE ALSO:\n#   * https://tox.wiki/en/latest/config.html\n# ============================================================================\n# PIP_INDEX_URL = https://pypi.org/simple\n\n[tox]\nminversion   = 2.3\nenvlist      = py313, py312, py311, py27, py310, py39, pypy3, pypy, docs\nskip_missing_interpreters = true\nisolated_build = true\n\n\n# -----------------------------------------------------------------------------\n# TEST ENVIRONMENTS:\n# -----------------------------------------------------------------------------\n[testenv]\ninstall_command = pip install -U {opts} {packages}\nchangedir = {toxinidir}\ncommands=\n    pytest {posargs:tests}\n    behave --format=progress {posargs:features}\n    behave --format=progress {posargs:tools/test-features}\n    behave --format=progress {posargs:issue.features}\ndeps= -r {toxinidir}/py.requirements/ci.tox.txt\nsetenv =\n     PYTHONPATH = {toxinidir}\n\n\n[testenv:docs]\nchangedir = docs\ncommands =\n    sphinx-build -W -b html -D language=en -d {toxinidir}/build/docs/doctrees . {toxinidir}/build/docs/html/en\ndeps = -r{toxinidir}/py.requirements/docs.txt\n\n\n[testenv:cleanroom2]\nbasepython = python2\nchangedir = {envdir}\ncommands=\n    behave --version\n    {toxinidir}/bin/toxcmd.py copytree ../../behave4cmd0 .\n    {toxinidir}/bin/toxcmd.py copytree ../../tests .\n    {toxinidir}/bin/toxcmd.py copytree ../../features .\n    {toxinidir}/bin/toxcmd.py copytree ../../tools  .\n    {toxinidir}/bin/toxcmd.py copytree ../../issue.features .\n    {toxinidir}/bin/toxcmd.py copy ../../behave.ini .\n    pytest {posargs:tests}\n    behave --format=progress {posargs:features}\n    behave --format=progress {posargs:tools/test-features}\n    behave --format=progress {posargs:issue.features}\ndeps=\n    {[testenv]deps}\nsetenv =\n     PYTHONPATH = .:{envdir}\n\n\n[testenv:cleanroom3]\nbasepython = python3\nchangedir = {envdir}\ncommands=\n    behave --version\n    {toxinidir}/bin/toxcmd.py copytree ../../behave4cmd0 .\n    {toxinidir}/bin/toxcmd.py copytree ../../tests .\n    {toxinidir}/bin/toxcmd.py copytree ../../features .\n    {toxinidir}/bin/toxcmd.py copytree ../../tools  .\n    {toxinidir}/bin/toxcmd.py copytree ../../issue.features .\n    {toxinidir}/bin/toxcmd.py copy ../../behave.ini .\n    {toxinidir}/bin/toxcmd.py 2to3 -w -n --no-diffs behave4cmd0\n    {toxinidir}/bin/toxcmd.py 2to3 -w -n --no-diffs tools\n    {toxinidir}/bin/toxcmd.py 2to3 -w -n --no-diffs features\n    {toxinidir}/bin/toxcmd.py 2to3 -w -n --no-diffs issue.features\n    pytest {posargs:tests}\n    behave --format=progress {posargs:features}\n    behave --format=progress {posargs:tools/test-features}\n    behave --format=progress {posargs:issue.features}\ndeps=\n    {[testenv]deps}\nsetenv =\n     PYTHONPATH = .:{envdir}\n\n\n# ---------------------------------------------------------------------------\n# SELDOM-USED: OPTIONAL TEST ENVIRONMENTS:\n# ---------------------------------------------------------------------------\n# -- SELDOM-USED, TESTED-WITH: jython2.7\n# JYTHON INSTALL RELATED (jit):\n#   https://sikulix-2014.readthedocs.org/en/latest/scenarios.html\n[testenv:jy27]\nbasepython= jython\ncommands=\n    pytest {posargs:tests}\n    behave --format=progress {posargs:features}\n    behave --format=progress {posargs:tools/test-features}\n    behave --format=progress {posargs:issue.features}\ndeps=\n    jit\n    {[testenv]deps}\n"
        }
      ]
    }
  ]
}