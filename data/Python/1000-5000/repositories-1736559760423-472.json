{
  "metadata": {
    "timestamp": 1736559760423,
    "page": 472,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "django-tastypie/django-tastypie",
      "stars": 3933,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1044921875,
          "content": "*.pyc\n.DS_Store\n_build\n.*.sw[po]\n*.egg-info\ndist\nbuild\nMANIFEST\ntests/tastypie.db\n.buildinfo\n.tox\nenv\nenv3\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.12890625,
          "content": "version: \"2\"\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    python: \"3.11\"\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 7.5029296875,
          "content": "Primary authors:\n\n* Daniel Lindsley\n* Cody Soyland\n* Matt Croydon\n* Josh Bohde\n* Issac Kelly\n\nContributors:\n\n* mdornseif for various patches\n* Jeff Triplett (jefftriplett) for various reports/patches.\n* Christian Klein (cklein) for the work on alphanumeric PK support.\n* Charles Leifer (coleifer) for a patch related to nullable OneToOneFields.\n* Sean Bleier (sebleier) for a patch that prevents error hiding on delete.\n* Chris Adams (acdha) for documentation fixes & other patches.\n* jonozzz for a patch regarding Paginator optimizations & a patch to multiple sort_by parameters.\n* David Guaraglia (dguaraglia) for the requirements file & a patch to limits.\n* whiteblack for a patch to Meta inheritance.\n* Travis Cline (traviscline) for patches regarding URLconf namespacing & pagination.\n* Jannis Leidel (jezdez) for patches regarding the ApiKey model, an admin inline and Django 1.4's timezone support.\n* Malcolm Tredinnick (malcolmt) for documentation corrections.\n* Vincent Driessen (nvie) for FileField related patches.\n* Christopher Grebs (EnTeQuAk) for various patches.\n* Roman Bogorodskiy (novel) for documentation fixes.\n* D. Hageman (dhageman) for a patch adding default values to RelatedFields.\n* James Hsiao (thepeopleseason) for finishing the DigestAuthentication bits.\n* jesperp for a patch adding TimeField.\n* Marcel van den Elst (MacMaru) for testing regarding ``blank=True``.\n* ulmus for a cookbook example.\n* Jason Kraus (zbyte64) for a patch related to script prefix.\n* Timothée Peignier (cyberdelia) for various patches.\n* Chris Beaven (SmileyChris) for a documentation patch.\n* Evan Borgstrom (fatbox) for a documentation patch.\n* Madis V (madisvain) for a README patch.\n* Ed Summers (edsu) for a setup.py patch.\n* Sébastien Fievet (zyegfryed) for the initial OAuth implementation.\n* Jacob Kaplan-Moss (jacobkm) for the PATCH patch.\n* Jorge E. Cardona (jorgeecardona) for a patch in renaming the ``objects`` name of the response, and get_multiple in one query.\n* vbabiy for a patch on improved use of ``bundle.request`` & related resource validation.\n* philipn (Philip Neustrom) for GeoDjango integration.\n* dgerzo (Daniel Gerzo) for GeoDjango integration, work on PATCH and related fields, improving the ``run_all_tests.sh`` script & several smaller patches..\n* ipmb (Peter Baumgartner) for a patch regarding the order of object saves.\n* easel for a documentation patch on failing syncdbs.\n* gaftech (Gabriel) for a patch regarding the ``__in`` filter syntax.\n* Christopher Groskopf (onyxfish) for a patch regarding PATCH & ``always_return_data``.\n* dericcrago (Deric Crago) for documentation patches.\n* gwrtheyrn (Danilo Bargen) for a documentation patch.\n* panta (Marco Pantaleoni) for a patch to ``setup.py``.\n* pelme (Andreas Pelme) for a patch involving re-raising exceptions during testing.\n* Rue La La for funding the development & documentation on the testing bits.\n* Aaron Elliot Ross for a patch to invalid pagination.\n* Randall Degges for patch_list method documentation patch.\n* Alexis Svinartchouk (zvin) for patching field type fix for AutoFields.\n* Mike W (mik3y) for a cookbook entry on pretty-printed JSON serialization & converting 'objects' to Meta.collection_name.\n* Taylor Mitchell (tmitchell) for finding and patching a bug in the paginator query encoding.\n* D.B. Tsai (dbtsai) & DuJour for funding:\n    * The work to make non-pk URIs work better\n* Ryan West (ryanisnan) for finding and patching a bug in patch_list where requests were not included in the bundle.\n* Julien Bouquillon (revolunet) for authentication and authorization docs fixes.\n* Andrey Voronov (eyvoro) for fixing a typo in the AUTHORS file.\n* D.B. Tsai (dbtsai) for a fix relating to ``detail_uri_kwargs``.\n* maraujop for a patch adding to ``X-HTTP-Method-Override`` support.\n* Donald Stufft (dstufft) for patching ToOneField callable attributes & for bumping the dateutil reqs.\n* Vladimir Volodin (vvolodin) for patching ToManyField callable attributes.\n* Mike Urbanski (mcu) for patching ``Paginator.get_limit``.\n* Jason Brownbridge (jbrownbridge) for patching multiple ``offset/limit`` params appearing in pagination URIs.\n* Mitar for compatability patches with django-tastypie-mongoengine\n* Jeremy Dunck (jdunck) for a patch adding an index to ``ApiKey``.\n* Wes Winham (winhamwr) for a documentation patch.\n* Andrew Austin (andrewaustin) for triaging, verifying and patching several tickets.\n* Numan Sachwani (numan) and Curtis Maloney (funkybob) for patch which allows fields to be omitted from list/detail form of resources.\n* Anton V. Yanchenko (simplylizz) for reporting and providing a patch for a security vulnerability involving ``MultiAuthentication`` and ``ApiKeyAuthentication``\n* Cristiano Lopes (cristiano2lopes) for minor bug fix in feature that allows fields to be omitted from list/detail form of resources.\n* Andrew McCloud (amccloud) for a patch improving integration with error logging tools by dispatching Django's got_request_exception when appropriate\n* Vitaly Babiy (vbabiy) form validation, and django 1.5 support.\n* Nathaniel Tucker (ntucker) django 1.5 support.\n* Soren Hansen (sorenh) Fixing tests for django 1.3.\n* Matt DeBoard (mattdeboard) for a patch to optionally set ``abstract = True`` on the ApiKey model.\n* Paul Grau (graup) Addition of iso-8601-strict to available TASTYPIE_DATETIME_FORMATTING.\n* Eric Plumb (professorplumb) for fixing the nested resource example in the cookbook.\n* Willem Bult (willembult) for fixing a bug with updating updating foreign key resources during create.\n* Yuri Govorushchenko (metametadata) for enhancing documentation on how to convert list of resources into JSON within a django template.\n* Revolution Systems & The Python Software Foundation for funding a significant portion of the port to Python 3!\n* tunix for a patch related to Tastypie's timezone-aware dates.\n* Steven Davidson (damycra) for a documentation patch.\n* Harish Srinivas for a minor bug fix that raises an exception if a given related resource is none.\n* Renjith Thankachan for a patch that fixes `django.utils.importlib` error in Django 1.9+ release.\n* Sean Hayes (SeanHayes) for test suite and CI enhancements, various patches\n* Michael Thornhill (mthornhill) for strict dict checking bugfix\n* Fedor Baart (siggyf) for an update on the serializer\n* Alexey Kotlyarov (koterpillar) - fixing DateField/DateTimeField.\n* Yuri Govorushchenko (metametadata) for documentation fixes.\n* Guilhem Saurel (Nim65s) for a minor issue with Django 1.9\n* Jack Cushman (jcushman) for converting ResourceTestCase to ResourceTestCaseMixin.\n* John Lucas (jlucas91) for an improvement to the response for requests with invalid JSON.\n* Judit Novak (juditnovak) for related schema updates\n* Mike Bryant (mikebryant) for unit tests\n* Maxim Filipenko (prokaktus) for changing repr value to str in Python 2\n* Thomas Yip (thomasyip) PR #1409\n* Matt Cooper (vtbassmatt) for making ApiKey better in Python 3\n* Nick Sullivan (gorillamania) for admin improvements.\n* Danny Roberts (dannyroberts) for very small change addressing noisy RemovedInDjango20Warning warnings\n* Sam Thompson (georgedorn) for ongoing maintenance and release management.\n* Matt Briançon (mattbriancon) for various patches\n* Blayze Wilhelm (blayzen-w) for a small patch that fixed an issue with saving (PR #1628)\n* Ryan Young (ryanneilyoung) for removing python 2 code\n* Chander Ganesan (chander) for minor patches, added support for django 4.1 and 5.0\n\n\nThanks to Tav for providing validate_jsonp.py, placed in public domain.\n\nThanks to various contributors of the Django test server patch, borrowed from\nhttp://code.djangoproject.com/ticket/2879 and placed in tests/testcases.py.\n"
        },
        {
          "name": "BACKWARDS-INCOMPATIBLE.txt",
          "type": "blob",
          "size": 1.1953125,
          "content": "v0.15.0\n=======\n\n[2024-10-15] 2444fce - PATCH requests no longer save entire objects, instead only updating fields specified in the payload. This is correct behavior and an unusual edge case, but has been broken for more than a decade so existing workarounds may break as a result.\n\n\nv0.9.16\n======\n\n[2012-12-11] abc0bef - Changed response code of PUT with always_return_data=True from 202 to 200\n\n\nv0.9.13\n=======\n\n[2013-03-15] 2dff249 - Authorization methods that were previously expected to raise ``Unauthorized`` must now always return ``True`` if the authorization succeeds\n\n\nv0.9.12\n=======\n\n[2013-02-14] 76c4f15 - JSONP is disabled by default\n[2013-02-14] 3ee47fb - Tastypie no longer ever returns HTML errors\n[2013-02-06] d850758 - Heavy rewrite of ``Authorization`` which adds a variety of new methods\n[2012-08-04] 651f964 - The addition of ``SessionAuthentication`` requires Django 1.3+\n[2012-06-26] a57d85b - ``Authentication`` classes now require ``User.is_active = True``\n[2012-05-04] 84821d7 - AutoFields will now serialize and deserialize as Integers\n\n\nBackward-incompatible commits were not recorded prior to the release of v0.9.11\nbut may be found using ``git log --oneline ...v0.9.11 | grep \"BACKWARD-\"``.\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 5.4375,
          "content": "============\nContributing\n============\n\nTastypie is open-source and, as such, grows (or shrinks) & improves in part\ndue to the community. Below are some guidelines on how to help with the project.\n\n\nPhilosophy\n==========\n\n* Tastypie is BSD-licensed. All contributed code must be either\n\n  * the original work of the author, contributed under the BSD, or...\n  * work taken from another project released under a BSD-compatible license.\n\n* GPL'd (or similar) works are not eligible for inclusion.\n* Tastypie's git master branch should always be stable, production-ready &\n  passing all tests.\n* Major releases (1.x.x) are commitments to backward-compatibility of the public APIs.\n  Any documented API should ideally not change between major releases.\n  The exclusion to this rule is in the event of either a security issue\n  or to accommodate changes in Django itself.\n* Minor releases (x.3.x) are for the addition of substantial features or major\n  bugfixes.\n* Patch releases (x.x.4) are for minor features or bugfixes.\n\n\nGuidelines For Reporting An Issue/Feature\n=========================================\n\nSo you've found a bug or have a great idea for a feature. Here's the steps you\nshould take to help get it added/fixed in Tastypie:\n\n* First, check to see if there's an existing issue/pull request for the\n  bug/feature. All issues are at https://github.com/django-tastypie/django-tastypie/issues\n  and pull reqs are at https://github.com/django-tastypie/django-tastypie/pulls.\n* If there isn't one there, please file an issue. The ideal report includes:\n\n  * A description of the problem/suggestion.\n  * How to recreate the bug.\n  * If relevant, including the versions of your:\n\n    * Python interpreter\n    * Django\n    * Tastypie\n    * Optionally of the other dependencies involved\n\n  * Ideally, creating a pull request with a (failing) test case demonstrating\n    what's wrong. This makes it easy for us to reproduce & fix the problem.\n    Instructions for running the tests are at :doc:`index`\n\nYou might also hop into the IRC channel (``#tastypie`` on ``irc.freenode.net``)\n& raise your question there, as there may be someone who can help you with a\nwork-around.\n\n\nGuidelines For Contributing Code\n================================\n\nIf you're ready to take the plunge & contribute back some code/docs, the\nprocess should look like:\n\n* Fork the project on GitHub into your own account.\n* Clone your copy of Tastypie.\n* Make a new branch in git & commit your changes there.\n* Push your new branch up to GitHub.\n* Again, ensure there isn't already an issue or pull request out there on it.\n  If there is & you feel you have a better fix, please take note of the issue\n  number & mention it in your pull request.\n* Create a new pull request (based on your branch), including what the\n  problem/feature is, versions of your software & referencing any related\n  issues/pull requests.\n\nIn order to be merged into Tastypie, contributions must have the following:\n\n* A solid patch that:\n\n  * is clear.\n  * works across all supported versions of Python/Django.\n  * follows the existing style of the code base (mostly PEP-8).\n  * comments included as needed.\n\n* A test case that demonstrates the previous flaw that now passes\n  with the included patch.\n* If it adds/changes a public API, it must also include documentation\n  for those changes.\n* Must be appropriately licensed (see \"Philosophy\").\n* Adds yourself to the AUTHORS file.\n\nPlease also:\n\n* Unless your change only modifies the documentation, add the issue you're\n  solving to the list in docs/release_notes/dev.rst, include issue and PR\n  numbers.\n* Squash your changes down to a single commit, or down to one commit containing\n  your failing tests and one more commit containing the fix that makes those\n  tests pass.\n\nIf your contribution lacks any of these things, they will have to be added\nby a core contributor before being merged into Tastypie proper, which may take\nsubstantial time for the all-volunteer team to get to.\n\n\nGuidelines For Core Contributors\n================================\n\nIf you've been granted the commit bit, here's how to shepherd the changes in:\n\n* Any time you go to work on Tastypie, please use ``git pull --rebase`` to fetch\n  the latest changes.\n* Any new features/bug fixes must meet the above guidelines for contributing\n  code (solid patch/tests passing/docs included).\n* Commits are typically cherry-picked onto a branch off master.\n\n  * This is done so as not to include extraneous commits, as some people submit\n    pull reqs based on their git master that has other things applied to it.\n\n* A set of commits should be squashed down to a single commit.\n\n  * ``git merge --squash`` is a good tool for performing this, as is\n    ``git rebase -i HEAD~N``.\n  * This is done to prevent anyone using the git repo from accidently pulling\n    work-in-progress commits.\n\n* Commit messages should use past tense, describe what changed & thank anyone\n  involved. Examples::\n\n    \"\"\"Added a new way to do per-object authorization.\"\"\"\n    \"\"\"Fixed a bug in ``Serializer.to_xml``. Thanks to joeschmoe for the report!\"\"\"\n    \"\"\"BACKWARD-INCOMPATIBLE: Altered the arguments passed to ``Bundle.__init__``.\n\n    Further description appears here if the change warrants an explanation\n    as to why it was done.\"\"\"\n\n* For any patches applied from a contributor, please ensure their name appears\n  in the AUTHORS file.\n* When closing issues or pull requests, please reference the SHA in the closing\n  message (i.e. ``Thanks! Fixed in SHA: 6b93f6``). GitHub will automatically\n  link to it.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4501953125,
          "content": "Copyright (c) 2010, Daniel Lindsley\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the tastypie nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL tastypie BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1416015625,
          "content": "recursive-include docs *\nrecursive-include tastypie/templates/tastypie *.html\ninclude AUTHORS\ninclude LICENSE\ninclude README.rst\ninclude VERSION\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.4677734375,
          "content": "===============\ndjango-tastypie\n===============\n\n.. image:: https://readthedocs.org/projects/django-tastypie/badge/\n    :target: https://django-tastypie.readthedocs.io/\n    :alt: Docs\n\n.. image:: https://github.com/django-tastypie/django-tastypie/actions/workflows/python-package.yml/badge.svg\n    :target: https://github.com/django-tastypie/django-tastypie/actions\n    :alt: CI\n\n.. image:: https://coveralls.io/repos/django-tastypie/django-tastypie/badge.svg?service=github\n    :target: https://coveralls.io/github/django-tastypie/django-tastypie\n    :alt: Code Coverage\n\n.. image:: https://img.shields.io/pypi/v/django-tastypie.svg\n    :target: https://pypi.python.org/pypi/django-tastypie\n    :alt: Version\n\n.. image:: https://pypi-badges.global.ssl.fastly.net/svg?package=django-tastypie&timeframe=monthly\n    :target: https://pypi.python.org/pypi/django-tastypie\n    :alt: Downloads\n\nCreating delicious APIs for Django apps since 2010.\n\nCurrently in beta but being used actively in production on several\nsites.\n\n\nRequirements\n============\n\nCore\n----\n\n* Python 3.8+ (Whatever is supported by your version of Django)\n* Django 4.2 (LTS releases) or Django 4.0+ (intermediate releases, including 5.0 and 5.1)\n* dateutil (http://labix.org/python-dateutil) >= 2.1\n\nFormat Support\n--------------\n\n* XML: lxml 3 (http://lxml.de/) and defusedxml (https://pypi.python.org/pypi/defusedxml)\n* YAML: pyyaml (http://pyyaml.org/)\n* binary plist: biplist (https://bitbucket.org/wooster/biplist)\n\nOptional\n--------\n\n* HTTP Digest authentication: python3-digest (https://bitbucket.org/akoha/python-digest/)\n\n\nWhat's It Look Like?\n====================\n\nA basic example looks like:\n\n.. code:: python\n\n    # myapp/api.py\n    # ============\n    from tastypie.resources import ModelResource\n    from myapp.models import Entry\n\n\n    class EntryResource(ModelResource):\n        class Meta:\n            queryset = Entry.objects.all()\n\n\n    # urls.py\n    # =======\n    from django.urls.conf import re_path, include\n    from tastypie.api import Api\n    from myapp.api import EntryResource\n\n    v1_api = Api(api_name='v1')\n    v1_api.register(EntryResource())\n\n    urlpatterns = [\n        # The normal jazz here then...\n        re_path(r'^api/', include(v1_api.urls)),\n    ]\n\nThat gets you a fully working, read-write API for the ``Entry`` model that\nsupports all CRUD operations in a RESTful way. JSON/XML/YAML support is already\nthere, and it's easy to add related data/authentication/caching.\n\nYou can find more in the documentation at\nhttps://django-tastypie.readthedocs.io/.\n\n\nWhy Tastypie?\n=============\n\nThere are other API frameworks out there for Django. You need to\nassess the options available and decide for yourself. That said, here are some\ncommon reasons for tastypie.\n\n* You need an API that is RESTful and uses HTTP well.\n* You want to support deep relations.\n* You DON'T want to have to write your own serializer to make the output right.\n* You want an API framework that has little magic, very flexible and maps well to\n  the problem domain.\n* You want/need XML serialization that is treated equally to JSON (and YAML is\n  there too).\n\n\nReference Material\n==================\n\n* https://django-tastypie.readthedocs.io/en/latest/\n* https://github.com/django-tastypie/django-tastypie/tree/master/tests/basic shows\n  basic usage of tastypie\n* http://en.wikipedia.org/wiki/REST\n* http://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n* http://www.ietf.org/rfc/rfc2616.txt\n* http://jacobian.org/writing/rest-worst-practices/\n\n\nGetting Help\n============\n\nThere are two primary ways of getting help.\n\n1. Go to `StackOverflow`_ and post a question with the ``tastypie`` tag.\n2. We have an IRC channel (`#tastypie on irc.freenode.net`_) to get help,\n   bounce an idea by us, or generally shoot the breeze.\n\n.. _`StackOverflow`: https://stackoverflow.com/questions/tagged/tastypie\n.. _#tastypie on irc.freenode.net: irc://irc.freenode.net/tastypie\n\n\nSecurity\n========\n\nTastypie is committed to providing a flexible and secure API, and was designed\nwith many security features and options in mind. Due to the complex nature of\nAPIs and the constant discovery of new attack vectors and vulnerabilities,\nno software is immune to security holes. We rely on our community to report\nand help us investigate security issues.\n\nIf you come across a security hole **please do not open a Github issue**.\nInstead, **drop us an email** at ``tastypie-security@googlegroups.com``\n\nWe'll then work together to investigate and resolve the problem so we can\nannounce a solution along with the vulnerability.\n"
        },
        {
          "name": "SECURITY.rst",
          "type": "blob",
          "size": 0.6865234375,
          "content": "===============\ndjango-tastypie\n===============\n\nSecurity Policy\n===============\n\nTastypie is committed to providing a flexible and secure API, and was designed\nwith many security features and options in mind. Due to the complex nature of\nAPIs and the constant discovery of new attack vectors and vulnerabilities,\nno software is immune to security holes. We rely on our community to report\nand help us investigate security issues.\n\nIf you come across a security hole **please do not open a Github issue**.\nInstead, **drop us an email** at ``tastypie-security@googlegroups.com``\n\nWe'll then work together to investigate and resolve the problem so we can\nannounce a solution along with the vulnerability.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.28125,
          "content": "TODO\n====\n\nShort Term\n----------\n\nCody:\n- Test support for serialization/deserialization.\n\nDaniel:\n- Authentication\n    - ``OauthAuthentication``\n    - ``DigestAuthentication``\n- More integration tests (intermediate, advanced, composite, non-model)\n\n\nLong Term\n---------\n\n- HTML browsing\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0439453125,
          "content": "python-dateutil>=2.1\npython-mimeparse>=0.1.4\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.1298828125,
          "content": "[wheel]\nuniversal = 1\n\n[flake8]\nexclude = .*/,tastypie/migrations/0001_initial.py\nignore = E128,F405,E501,W503\nmax-line-length = 119\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.5703125,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\ntry:\n    from setuptools import setup\nexcept ImportError:\n    from ez_setup import use_setuptools\n    use_setuptools()\n    from setuptools import setup\n\n\nfrom tastypie import __version__\n\n\nsetup(\n    name='django-tastypie',\n    version=__version__,\n    description='A flexible & capable API layer for Django.',\n    author='Daniel Lindsley',\n    author_email='daniel@toastdriven.com',\n    url='https://github.com/django-tastypie/django-tastypie',\n    long_description=open('README.rst', 'r').read(),\n    packages=[\n        'tastypie',\n        'tastypie.utils',\n        'tastypie.management',\n        'tastypie.management.commands',\n        'tastypie.migrations',\n        'tastypie.contrib',\n        'tastypie.contrib.gis',\n        'tastypie.contrib.contenttypes',\n    ],\n    package_data={\n        'tastypie': ['templates/tastypie/*'],\n    },\n    zip_safe=False,\n    requires=[\n        'python_mimeparse(>=0.1.4, !=1.5)',\n        'dateutil(>=2.1)',\n    ],\n    install_requires=[\n        'python-mimeparse >= 0.1.4, != 1.5',\n        'python-dateutil >= 2.1',\n    ],\n    tests_require=['PyYAML', 'lxml', 'defusedxml'],\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Environment :: Web Environment',\n        'Framework :: Django',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: BSD License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 3',\n        'Topic :: Utilities'\n    ],\n)\n"
        },
        {
          "name": "tastypie",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 2.61328125,
          "content": "[tox]\nenvlist =\n    py{3.8,3.9,3.10,3.11}-dj{4.0,4.1,4.2,dev}\n    py{3.8,3.9,3.10,3.11}-docs,\n    py{3.9,3.10,3.11}-dj{5.0,5.1}\n    py{3.8,3.9,3.10,3.11}-flake8,\n    py{3.8,3.9,3.10,3.11}-flake8-strict\n\nskipsdist=True\n\n[testenv]\nusedevelop=True\nsetenv =\n    PYTHONPATH = {toxinidir}:{toxinidir}/tests\n    PYTHONWARNINGS = always\n\tTESTEXE = {envbindir}/coverage run --append --source=tastypie,tests {envbindir}/django-admin.py\n\tdj{4.0,4.1,4.2,5.0,5.1,dev}: TESTEXE = {envbindir}/coverage run --append --source=tastypie,tests {envbindir}/django-admin\n\ncommands =\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test -p '*' core.tests --settings=settings_core\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test basic.tests --settings=settings_basic\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test related_resource.tests --settings=settings_related\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test alphanumeric.tests --settings=settings_alphanumeric\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test authorization.tests --settings=settings_authorization\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test content_gfk.tests --settings=settings_content_gfk\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test customuser.tests --settings=settings_customuser\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test namespaced.tests --settings=settings_namespaced\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test slashless.tests --settings=settings_slashless\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test validation.tests --settings=settings_validation\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: {env:TESTEXE} test gis.tests --settings=settings_gis_spatialite\n\n    docs: sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html\n    docs: sphinx-build -W -b doctest -d {envtmpdir}/doctrees . {envtmpdir}/html\n\n    flake8: {envbindir}/flake8 .\n\n    flake8-strict: {envbindir}/flake8 --ignore=E128 --max-complexity 10 .\nbasepython =\n    py3.8: python3.8\n    py3.9: python3.9\n    py3.10: python3.10\n    py3.11: python3.11\ndeps =\n    dj4.0: Django>=4.0,<4.1\n    dj4.1: Django>=4.1,<4.2\n    dj4.2: Django>=4.2,<4.3\n    dj5.0: Django>=5.0,<5.1\n    dj5.1: Django>=5.1,<5.2\n    djdev: https://github.com/django/django/archive/refs/heads/main.zip\n\n    dj{4.0,4.1,4.2,dev}: python3-digest>=1.8b4\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: -r{toxinidir}/tests/requirements.txt\n    dj{4.0,4.1,4.2,5.0,5.1,dev}: -r{toxinidir}/requirements.txt\n\n    py{3.8,3.9}-docs: Django<4.3\n    py{3.10,3.11}-docs: Django~=5.1\n    docs: -r{toxinidir}/requirements.txt\n    docs: -r{toxinidir}/docs/requirements.txt\n\n    {flake8,flake8-strict}: flake8\nchangedir =\n    docs: docs/\nsitepackages =\n    docs: True\n"
        }
      ]
    }
  ]
}