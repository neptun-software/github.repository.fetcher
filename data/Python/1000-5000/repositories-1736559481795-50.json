{
  "metadata": {
    "timestamp": 1736559481795,
    "page": 50,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "qtile/qtile",
      "stars": 4867,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.2158203125,
          "content": "[run]\nsource = libqtile\nconcurrency = multiprocessing\nparallel = true\nsigterm = true\ndynamic_context = test_function\n\n[report]\nomit =\n    libqtile/interactive/*\n    libqtile/scripts/*\n    libqtile/ffi_build.py\n    test/*\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.3525390625,
          "content": "# formatted (#4985)\n923eb6a209e13d65ed2af1c44d886823b43b8c66\n\n# enabled and fixed pyuprade rules (#4985)\n4ca8fd2fcac3bb1f076dc4ace5615b75e9e3cd92\n\n# enabled and fixed flaek8-pie rules (#4985)\n65a3d20e2a2423a650bbaa9d5e21dc44fd9366a7\n\n# initial black -> ruff\n13bee8befc81c1d5738c795b6b707e7ac26c616c\n\n# initial black run\n5fed8371bdd32a185b8e7f1abd37e01a511f05b9\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7373046875,
          "content": "# Python object files\n*.py[cd]\n*.py~\n*.so\n*.o\n__pycache__\nMANIFEST\n/build\n/dist\n/env\n# complied cffi output\nlibqtile/_ffi_pango.py\nlibqtile/backend/x11/_ffi_xcursors.py\nlibqtile/backend/wayland/_ffi.c\n# Files generated by setup.py\nqtile.egg-info/\n.eggs\n# Vim swap files\n*.swp\n*.swo\n/doc\n/docs/_build\n/docs/_static/keybindings/\n.coverage\n# some people hack on macs? :-)\n.DS_Store\n# debian stuff\n.pybuild\ndebian/files\ndebian/*.substvars\ndebian/*.log\ndebian/tmp\ndebian/qtile\ndebian/python-qtile\ndebian/python3-qtile\ndebian/*debhelper\n\n*sublime*\n\n.tox/\n.cache/\n.pytest_cache/\n.mypy_cache/\n.tags\nvenv\n.venv\n.coverage.*\n\n# intellij idea IDEs\n.idea/\n\n# vscode IDE\n.vscode/\n\n# screenshots\ndocs/screenshots/take_all.log\ndocs/_static/screenshots/\n\n# ViM tags\n/tags\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.474609375,
          "content": "exclude: \"test/configs/syntaxerr.py\"\nrepos:\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.6.2\n    hooks:\n      - id: ruff\n        args: [--fix]\n      - id: ruff-format\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.6.1\n    hooks:\n      - id: mypy\n        additional_dependencies: [\"types-python-dateutil\", \"types-pytz\"]\n        files: \"^libqtile\\/.*\"\n  - repo: https://github.com/jendrikseipp/vulture\n    rev: v2.10\n    hooks:\n      - id: vulture\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 20.0791015625,
          "content": "[MASTER]\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-whitelist=\n\n# Specify a score threshold to be exceeded before program exits with error.\nfail-under=10.0\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the blacklist. The\n# regex matches against base names, not paths.\nignore-patterns=^_.*$  # e. g. _ffi_*.py\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use.\njobs=0\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n## TODO: Check the format of docstrings (for sphinx compat):\n# load-plugins=pylint.extensions.docparams\n\n# Pickle collected data for later comparisons.\npersistent=no\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.\nconfidence=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=print-statement,\n        parameter-unpacking,\n        unpacking-in-except,\n        old-raise-syntax,\n        backtick,\n        long-suffix,\n        old-ne-operator,\n        old-octal-literal,\n        import-star-module-level,\n        non-ascii-bytes-literal,\n        raw-checker-failed,\n        bad-inline-option,\n        locally-disabled,\n        file-ignored,\n        suppressed-message,\n        useless-suppression,\n        deprecated-pragma,\n        use-symbolic-message-instead,\n        apply-builtin,\n        basestring-builtin,\n        buffer-builtin,\n        cmp-builtin,\n        coerce-builtin,\n        execfile-builtin,\n        file-builtin,\n        long-builtin,\n        raw_input-builtin,\n        reduce-builtin,\n        standarderror-builtin,\n        unicode-builtin,\n        xrange-builtin,\n        coerce-method,\n        delslice-method,\n        getslice-method,\n        setslice-method,\n        no-absolute-import,\n        old-division,\n        dict-iter-method,\n        dict-view-method,\n        next-method-called,\n        metaclass-assignment,\n        indexing-exception,\n        raising-string,\n        reload-builtin,\n        oct-method,\n        hex-method,\n        nonzero-method,\n        cmp-method,\n        input-builtin,\n        round-builtin,\n        intern-builtin,\n        unichr-builtin,\n        map-builtin-not-iterating,\n        zip-builtin-not-iterating,\n        range-builtin-not-iterating,\n        filter-builtin-not-iterating,\n        using-cmp-argument,\n        eq-without-hash,\n        div-method,\n        idiv-method,\n        rdiv-method,\n        exception-message-attribute,\n        invalid-str-codec,\n        sys-max-int,\n        bad-python3-import,\n        deprecated-string-function,\n        deprecated-str-translate-call,\n        deprecated-itertools-function,\n        deprecated-types-field,\n        next-method-defined,\n        dict-items-not-iterating,\n        dict-keys-not-iterating,\n        dict-values-not-iterating,\n        deprecated-operator-function,\n        deprecated-urllib-function,\n        xreadlines-attribute,\n        deprecated-sys-function,\n        exception-escape,\n        comprehension-escape,\n        not-callable,  # TEMP: has false-positives currently. Re-enable later.\n        protected-access,  # we need this a lot, so it will stay here!\n        c-extension-no-member,  # this is probably staying here, too.\n        # all messages disabled above were suggested by\n        # `pylint --generate-rcfile`\n        # maybe some of them can be re-enabled later, but only after we have\n        # fought the following demons:\n        # TODO: re-enable those options (remove the lines) one by one\n        arguments-differ,\n        unused-wildcard-import,\n        useless-super-delegation,\n        # useless-else-on-loop,\n        super-init-not-called,\n        no-name-in-module,\n        no-member,\n        raise-missing-from,\n        logging-not-lazy,\n        logging-format-interpolation,\n        logging-fstring-interpolation,\n        broad-except,\n        bare-except,\n        assignment-from-no-return,\n        redefined-outer-name,\n        unused-argument,\n        unused-variable,\n        attribute-defined-outside-init,\n        access-member-before-definition,\n        abstract-method,\n        global-statement,\n        pointless-statement,\n        import-error,  # probably a dependency that is not installed locally;\n        # we should deal with that locally (e.g. disable this warning when\n        # importing modules that are optional dependencies)\n        wildcard-import,\n        R,  # no refactoring messages until the important bits are dealt with\n        C,  # no convention messages -----------------||---------------------\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\n# enable=c-extension-no-member\n# Time to play Whac-A-Mole:\nenable=consider-using-sys-exit,\n       useless-super-delegation,\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'error', 'warning', 'refactor', and 'convention'\n# which contain the number of messages in each category, as well as 'statement'\n# which is the total number of statements analyzed. This score is used by the\n# global evaluation report (RP0004).\n# warnings (especially TODO, HACK, XXX, ...) do not count:\nevaluation=10.0 - ((float(5 * error + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\n#msg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit\n\n\n[SIMILARITIES]\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=120\n\n# Maximum number of lines in a module.\nmax-module-lines=2000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. Available dictionaries: de_AT (hunspell), de_BE\n# (hunspell), de_CH (hunspell), de_DE (hunspell), de_LI (hunspell), de_LU\n# (hunspell), en (aspell), en_AG (hunspell), en_AU (aspell), en_BS (hunspell),\n# en_BW (hunspell), en_BZ (hunspell), en_CA (aspell), en_DK (hunspell), en_GB\n# (hunspell), en_GH (hunspell), en_HK (hunspell), en_IE (hunspell), en_IN\n# (hunspell), en_JM (hunspell), en_NA (hunspell), en_NG (hunspell), en_NZ\n# (hunspell), en_SG (hunspell), en_TT (hunspell), en_US (hunspell), en_ZA\n# (hunspell), en_ZW (hunspell), he (hspell).\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO,\n      HACK,\n      TMP,\n      TEMP\n\n# Regular expression of note tags to take in consideration.\n#notes-rgx=\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style.\n#class-attribute-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           x,\n           y,\n           z,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style.\n#variable-rgx=\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=cls\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=optparse,tkinter.tix\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled).\next-import-graph=\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled).\nimport-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method. [5]\nmax-args=10\n\n# Maximum number of attributes for a class (see R0902). [7]\nmax-attributes=10\n\n# Maximum number of boolean expressions in an if statement (see R0916). [5]\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body. [12]\nmax-branches=20\n\n# Maximum number of locals for function / method body. [15]\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901). [7]\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904). [20]\nmax-public-methods=40\n\n# Maximum number of return / yield for function / method body. [6]\nmax-returns=6\n\n# Maximum number of statements in function / method body. [50]\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903). [2]\nmin-public-methods=1\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"BaseException, Exception\".\novergeneral-exceptions=BaseException,\n                       Exception\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.857421875,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n# Required\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n  apt_packages:\n    - libdbus-1-dev\n    - libgirepository1.0-dev\n    - gir1.2-gtk-3.0\n    - gir1.2-notify-0.7\n    - gir1.2-gudev-1.0\n    - graphviz\n    - imagemagick\n    - xserver-xephyr\n    - xvfb\n    - dbus-x11\n    - libnotify-bin\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n# Optionally build your docs in additional formats such as PDF\nformats:\n- pdf\n- htmlzip\n- epub\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  install:\n  # This first requirements file installs a pinned version of cffi as latest version causes crashes\n  - requirements: docs/requirements-rtd.txt\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 56.06640625,
          "content": "Qtile x.xx.x, released xxxx-xx-xx:\n    * features\n    * bugfixes\n\nQtile 0.30.0, released 2025-01-06:\n    !!! breaking changes !!!\n      - dbus-fast is now required for dbus support.\n        dbus-next was removed as the package is unmaintained.\n    * features\n        - Add `SwayNC` widget to interact with Sway Notification Centre (wayland only)\n        - Add `swap` method to Plasma layout\n        - New `click_or_drag_only` option for follow_mouse_focus to change the focus to the window under the mouse when click or drag\n        - Customize battery widget \"Full\" and \"Empty\" short text with `full_short_text` and `empty_short_text`\n    * bugfixes\n        - Make MonadWide layout up/down focus navigation behave like MonadTall's left/right\n\nQtile 0.29.0, released 2024-10-19:\n    * features\n        - A Nix flake has been added which can be used by Nix(OS) users to update to the latest version easily\n        - Add `group_window_remove` hook when window is removed from group\n        - Switched to ruff for formatting\n    * bugfixes\n        - Add returns to lazy.function and qtile.core.function\n        - Fix a bug with newer versions of cairo breaking the bar\n        - Fix a few TreeTab rendering bugs\n        - Fix a TaskList crash\n        - Fix a scratchpad window size bug\n\nQtile 0.28.1, released 2024-08-12:\n    * bugfixes\n        - fix a crash in the StatusNotifier widget #4959 #4960\n\nQtile 0.28.0, released 2024-08-11:\n    * bugfixes\n        - various bug fixes to widgets from previous releases\n        - fix xrandr commands racing with qtile startup\n\nQtile 0.27.0, released 2024-07-12:\n    * features\n        - Make default `Plasma` add mode dynamic\n        - Add `background` parameter to `Screen` to paint a solid colour background\n        - Add ability to use key codes to bind keys. Will benefit users who change keyboard layouts but\n          wish to retain same bindings, irrespective of layout.\n        - Wayland: Add support for idle-notify-v1 protocol needed by swayidle.\n        - Wayland: Make keybinds repeat according to the keyboard's repeat rate and delay. Previously the keybinds did not repeat.\n\n    * bugfixes\n      - Fix `Plasma` layout with `ScreenSplit` by implementing `get_windows`\n      - Fix border bug in fullscreening/maximizing wayland windows\n      - Fix automatic fullscreening for many XWayland applications (e.g. games) by checking if they want to fullscreen on map\n\nQtile 0.26.0, released 2024-05-21:\n    !!! breaking changes !!!\n      - this release drops support for python 3.9\n      - deleted the (very old) libqtile/command_* deprecation wrappers\n      - SIGUSR2 no longer restarts qtile, instead it dumps stack traces\n      - lazy.<object>.when(when_floating=X) now behaves differently: the lazy call will be executed\n        independently of the current window's float state by default, and can be limited to when it\n        is floating or tiled by passing when_floating as True or False respectively.\n      - Dropped support for KDE idle protocol on Wayland\n    !!! Notice for packagers - Wayland backend !!!\n      - Qtile's Wayland backend now requires wlroots 0.17.x, pywlroots 0.17.x and pywayland >= 0.4.17.\n    !!! Notice for pip package - Pypy !!!\n      - We currently do not build for pypy-3.10 as there seems to be a resolution error in either pypy or pip (https://github.com/pypy/pypy/issues/4956)\n    * features\n      - For Wayland you can now set the cursor theme and size to forcefully use in Qtile,\n        set `wl_xcursor_theme` and `wl_xcursor_size` in the configuration\n      - automatically lift types to their annotated type when specified via\n        the `qtile cmd-obj` command line\n      - Add `Plasma` layout. The original layout (https://github.com/numirias/qtile-plasma) appears to be unmaintained\n        so we have added this to the main codebase.\n      - Add ability to specify muted and unmuted formats for `Volume` and `PulseVolume` widgets.\n      - Add back server-side opacity support for Wayland backend\n    * bugfixes\n\nQtile 0.25.0, released 2024-04-06:\n    * features\n      - The Battery widget now supports dynamic charge control, allowing for\n        protecting battery life.\n      - To support the above (plus the other widgets that modify sysfs), qtile\n        now ships with its own udev rules, located at\n        /resources/99-qtile.rules; distro packagers will probably want to\n        install this rule set.\n    * bugfixes\n      - Fix groups marked with `persist=False` not being deleted when their last window is moved to another group.\n      - Fallback icon in StatusNotifier widget\n\nQtile 0.24.0, released 2024-01-20:\n    !!! config breakage/changes !!!\n      - Matches no longer use \"include/substring\" style matching. But match the string exactly. Previously on X11, if the WM_TYPE of a spawned window is e.g. dialog a match with wm_type dialognoonereadschangelogs would return true. Additionally a window with an empty WM_CLASS (which can happen) would match anything. If you rely this style of substring matching, pass a regex to your match or use a function with func=.\n        Using a list of strings inside Match with role, title, wm_class, wm_instance_class, wm_type are also deprecated, use a regex. Right now we replace the property with a regex if it's a list and warn with a deprecation message. You can use \"qtile migrate\" to migrate your config to this.\n    * features\n      - Change how `tox` runs tests. See https://docs.qtile.org/en/latest/manual/contributing.html#running-tests-locally\n      for more information on how to run tests locally.\n      - Add `ScreenSplit` layout which allows multiple layouts per screen. Also adds `ScreenSplit`\n        widget to display name of active split.\n      - Updated `Bluetooth` widget which allows users to manage multiple devices in a single widget\n      - Add `align` option to `Columns` layout so new windows can be added to left or right column.\n      - `.when()` have two new parameters:\n        - `func: Callable`: Enable call when the result of the callable evaluates to True\n        - `condition: bool`: a boolean value to determine whether the lazy object should be run. Unlike `func`, the\n          condition is evaluated once when the config file is first loaded.\n      - Add ability to have bar drawns over windows by adding `reserve=False` to bar's config to\n        stop the bar reserving screen space.\n      - Add ability for third-party code (widgets, layouts) to create hooks\n      - Add ability to create user-defined hooks which can be fired from external scripts\n    * bugfixes\n      - Fix two bugs in stacking transient windows in X11\n      - Checking configs containing `qtile.core.name` with `python config.py` don't fail anymore (but `qtile.core.name`\n        will be `None`)\n      - Fix an error if a wayland xwindow has unknown wm_type\n\nQtile 0.23.0, released 2023-09-24:\n    !!! Dependency Changes !!!\n      - xcffib must be upgraded to >= 1.4.0\n      - cairocffi must be upgraded to >= 1.6.0\n      - New optional dependency `pulsectl-asyncio` required for `PulseVolume` widget\n    !!! Notice for packagers - wlroots (optional dependency) bump !!!\n      - Qtile's wayland backend now requires on wlroots 0.16 (and pywlroots 0.16)\n    !!! config breakage/changes !!!\n      - The `cmd_` prefix has been dropped from all commands (this means command names are common when accessed\n        via the command interface or internal python objects).\n      - Custom widgets should now expose command methods with the `@expose_command` decorator (available via\n        `from libqtile.command.base import expose_command`).\n      - Some commands have been renamed (in addition to dropping the 'cmd_' prefix):\n          `hints` -> `get_hints`\n          `groups` -> `get_groups`\n          `screens` -> `get_screens`\n      - Layouts need to rename some methods:\n        - `add` to `add_client`\n        - `cmd_next` to `next`\n        - `cmd_previous` to `previous`\n      - Layouts or widgets that redefine the `commands` property need to update the signature:\n          `@expose_command()`\n          `def commands(self) -> list[str]:`\n      - `Window.getsize` has been renamed `Window.get_size` (i.e. merged with the get_size command).\n      - `Window.getposition` has been renamed `Window.get_position` (i.e. merged with the get_position command).\n      - The `StockTicker` widget `function` option is being deprecated: rename it to `func`.\n      - The formatting of `NetWidget` has changed, if you use the `format` parameter in your config include\n        `up_suffix`, `total_suffix` and `down_suffix` to display the respective units.\n      - The `Notify` widget now has separate `default_timeout` properties for differenct urgency levels. Previously,\n        `default_timeout` was `None` which meant that there was no timeout for all notifications (unless this had been\n        set by the client sending the notification). Now, `default_timeout` is for normal urgency notifications and this\n        has been set to a default of 10 seconds. `default_timeout_urgent`, for critical notifications, has a timeout of `None`.\n      - The `PulseVolume` widget now depends on a third party library, `pulsectl-asyncio`, to interact with the pulse audio\n        server. Users will now see an `ImportError` until they install that library.\n    * features\n        - Add ability to set icon size in `LaunchBar` widget.\n        - Add 'warp_pointer' option to `Drag` that when set will warp the pointer to the bottom right of\n          the window when dragging begins.\n        - Add `currentsong` status to `Mpd2` widget.\n        - Add ability to disable group toggling in `GroupBox` widget\n        - Add ability to have different border color when windows are stacked in Stack layout. Requires\n          setting `border_focus_stack` and `border_normal_stack` variables.\n        - Add ability to have different single border width for Columns layout by setting 'single_border_width' key.\n        - Add ability to have different border and margin widths when VerticalTile layout only contains 1 window by\n          setting 'single_border_width' and 'single_margin' keys.\n        - New widget: GenPollCommand\n        - Add `format` and `play_icon` parameters for styling cmus widget.\n        - Add ability to add a group at a specified index\n        - Add ability to spawn the `WidgetBox` widget opened.\n        - Add ability to swap focused window based on index, and change the order of windows inside current group\n        - Add ability to update the widget only once if `update_interval` is None.\n        - Add `move_to_slice` command to move current window to single layout in `Slice` layout\n        - Made the `NetWidget` text formattable.\n        - Qtile no longer floods the log following X server disconnection, instead handling those errors.\n        - `Key` and `KeyChord` bindings now have another argument `swallow`.\n          It indicates whether or not the pressed keys should be passed on to the focused client.\n          By default the keys are not passed (swallowed), so this argument is set to `True`.\n          When set to `False`, the keys are passed to the focused client. A key is never swallowed if the\n          function is not executed, e.g. due to failing the `.when()` check.\n        - Add ability to set custom \"Undefined\" status key value to `Mpd2Widget`.\n        - `Mpd2Widget` now searches for artist name in all similar keys (i.e `albumartist`, `performer`, etc.).\n        - Add svg support to `CustomLayoutIcon`\n        - added layering controls for X11 (Wayland support coming soon!):\n          - `lazy.window.keep_above()/keep_below()` marks windows to be kept above/below other windows permanently.\n             Calling the functions with no arguments toggles the state, otherwise pass `enable=True` or `enable=False`.\n          - `lazy.window.move_up()/move_down()` moves windows up and down the z axis.\n          - added `only_focused` setting to Max layout, allowing to draw multiple clients on top of each other when\n            set to False\n        - Add `suspend` hook to run functions before system goes to sleep.\n    * bugfixes\n        - Fix bug where Window.center() centers window on the wrong screen when using multiple monitors.\n        - Fix `Notify` bug when apps close notifications.\n        - Fix `CPU` precision bug with specific version of `psutil`\n        - Fix config being reevaluated twice during reload (e.g. all hooks from config were doubled)\n        - Fix `PulseVolume` high CPU usage when update_interval set to 0.\n        - Fix `Battery` widget on FreeBSD without explicit `battery` index given.\n        - Fix XMonad layout faulty call to nonexistent _shrink_up\n        - Fix setting tiled position by mouse for layouts using _SimpleLayoutBase. To support this in other layouts, add a swap method taking two windows.\n        - Fix unfullscreening bug in conjunction with Chromium based clients when auto_fullscreen is set to `False`.\n        - Ensure `CurrentLayoutIcon` expands paths for custom folders.\n        - Fix vertical alignment of icons in `TaskList` widget\n        - Fix laggy resize/positioning of floating windows in X11 by handling motion notify events later. We also introduced a cap setting if you want to limit these events further, e.g. for limiting resource usage. This is configurable with the x11_drag_polling_rate variable for each `Screen` which is set to None by default, indicating no cap.\n    * python version support\n        - We have added support for python 3.11 and pypy 3.9.\n        - python 3.7, 3.8 and pypy 3.7 are not longer supported.\n        - Fix bug where `StatusNotifier` does not update icons\n\nQtile 0.22.0, released 2022-09-22:\n    !!! Config breakage !!!\n        - lazy.qtile.display_kb() no longer receives any arguments. If you passed it any arguments\n          (which were ignored previously), remove them.\n        - If you have a custom startup Python script that you use instead of `qtile start` and run init_log\n          manually, the signature has changed. Please check the source for the updated arguments.\n        - `KeyChord`'s signature has changed. ``mode`` is now a boolean to indicate whether the mode should persist.\n          The ``name`` parameter should be used to name the chord (e.g. for the ``Chord`` widget).\n    * features\n        - Add ability to draw borders and add margins to the `Max` layout.\n        - The default XWayland cursor is now set at startup to left_ptr, so an xsetroot call is not needed to\n          avoid the ugly X cursor.\n        - Wayland: primary clipboard should now behave same way as with X after selecting something it\n          should be copied into clipboard\n        - Add `resume` hook when computer resumes from sleep/suspend/hibernate.\n        - Add `text_only` option for `LaunchBar` widget.\n        - Add `force_update` command to `ThreadPoolText` widgets to simplify updating from key bindings\n        - Add scrolling ability to `_TextBox`-based widgets.\n        - Add player controls (via mouse callbacks) to `Mpris2` widget.\n        - Wayland: input inhibitor protocol support added (pywayland>=0.4.14 & pywlroots>=0.15.19)\n        - Add commands to control Pomodoro widget.\n        - Add icon theme support to `TaskList` widget (available on X11 and Wayland backends).\n        - Wayland: Use `qtile cmd-obj -o core -f get_inputs` to get input device identifiers for\n          configuring inputs. Also input configs will be updated by config reloads (pywlroots>=0.15.21)\n    * bugfixes\n        - Widgets that are incompatible with a backend (e.g. Systray on Wayland) will no longer show\n          as a ConfigError in the bar. Instead the widget is silently removed from the bar and a message\n          included in the logs.\n        - Reduce error messages in `StatusNotifier` widget from certain apps.\n        - Reset colours in `Chord` widget\n        - Prevent crash in `LaunchBar` when using SVG icons\n        - Improve scrolling in `Mpris2` widget (options to repeat scrolling etc.)\n\nQtile 0.21.0, released 2022-03-23:\n    * features\n        - Add `lazy.window.center()` command to center a floating window on the screen.\n        - Wayland: added power-output-management-v1 protocol support, added idle protocol,\n          added idle inhibit protocol\n        - Add MonadThreeCol layout based on XMonad's ThreeColumns.\n        - Add `lazy.screen.set_wallpaper` command.\n        - Added ability to scale the battery icon's size\n        - Add Spiral layout\n        - Add `toggle` argument to `Window.togroup` with the same functionality as in `Group.toscreen`.\n        - Added `margin_on_single` and `border_on_single` to Bsp layout\n    * bugfixes\n        - Fix `Systray` crash on `reconfigure_screens`.\n        - Fix bug where widgets can't be mirrored in same bar.\n        - Fix various issues with setting fullscreen windows floating and vice versa.\n        - Fix a bug where a .when() check for lazy functions errors out when matching\n          on focused windows when none is focused. By default we do not match on focused windows,\n          to change this set `if_no_focused` to True.\n        - Widget with duplicate names will be automatically renamed by appending numeric suffixes\n        - Fix resizing of wallpaper when screen scale changes (X11)\n        - Two small bugfixes for `StatusNotifier` - better handling of Ayatana indicators\n        - Fix bug where StatusNotifierItem crashes due to invalid object paths (e.g. Zoom)\n\nQtile 0.20.0, released 2022-01-24:\n    * features\n        - Add `place_right` option in the TreeTab layout to place the tab panel on the right side\n        - X11: Add support for _NET_DESKTOP_VIEWPORT. E.g. can be used by rofi to map on current output.\n        - Wayland: Bump wlroots version. 0.15.x wlroots and 0.15.2+ pywlroots are required.\n        - Add XWayland support to the Wayland backend. XWayland will start up as needed, if it is installed.\n    * bugfixes\n        - Remove non-commandable windows from IPC. Fixes bug where IPC would fail when trying to get info\n          on all windows but Systray has icons (which are non-commandable `_Window`s.)\n        - Fix bug where bars were not reconfigured correctly when screen layout changes.\n        - Fix a Wayland bug where layer-shell surface like dunst would freeze up and stop updating.\n        - Change timing of `screens_reconfigured` hook. Will now be called ONLY if `cmd_reconfigure_screens`\n          has been called and completed.\n        - Fix order of icons in Systray widget when restarting/reloading config.\n        - Fix rounding error in PulseVolume widget's reported volume.\n        - Fix bug where Volume widget did not load images where `theme_path` had been set in `widget_defaults`.\n        - Remove ability to have multiple `Systray` widgets. Additional `Systray` widgets will result in a\n          ConfigError.\n        - Release notification name from dbus when finalising `Notify` widget. This allows other notification\n          managers to request the name.\n        - Fix bug where `Battery` widget did not retrieve `background` from `widget_defaults`.\n        - Fix bug where widgets in a `WidgetBox` are rendered on top of bar borders.\n\n        - Add ability to swap focused window based on index, and change the order of windows inside current group\nQtile 0.19.0, released 2021-12-22:\n    * features\n        - Add ability to draw borders to the Bar. Can customise size and colour per edge.\n        - Add `StatusNotifier` widget implementing the `StatusNotifierItem` specification.\n          NB Widget does not provide context menus.\n        - Add `total` bandwidth format value to the Net widget.\n        - Scratchpad groups could be defined as single so that only one of the scratchpad in the group is visible\n          at a given time.\n        - All scratchpads in a Scratchpad group can be hidden with hide_all() function.\n        - For saving states of scratchpads during restart, we use wids instead of pids.\n        - Scratchpads can now be defined with an optional matcher to match with window properties.\n        - `Qtile.cmd_reload_config` is added for reloading the config without completely restarting.\n        - Window.cmd_togroup's argument `groupName` should be changed to\n          `group_name`. For the time being a log warning is in place and a\n          migration is added. In the future `groupName` will fail.\n        - Add `min/max_ratio` to Tile layout and fix bug where windows can extend offscreen.\n        - Add ability for widget `mouse_callbacks` to take `lazy` calls (similar to keybindings)\n        - Add `aliases` to `lazy.spawncmd()` which takes a dictionary mapping convenient aliases\n          to full command lines.\n        - Add a new 'prefix' option to the net widget to display speeds with a static unit (e.g. MB).\n        - `lazy.group.toscreen()` now does not toggle groups by default. To get this behaviour back, use\n          `lazy.group.toscreen(toggle=True)`\n        - Tile layout has new `margin_on_single` and `border_on_single` option to specify\n          whether to draw margin and border when there is only one window.\n        - Thermal zone widget.\n        - Allow TextBox-based widgets to display in vertical bars.\n        - Added a focused attribute to `lazy.function.when` which can be used to Match on focused windows.\n        - Allow to update Image widget with update() function by giving a new path.\n    * bugfixes\n        - Windows are now properly re-ordered in the layouts when toggled on and off fullscreen\n\nQtile 0.18.1, released 2021-09-16:\n    * features\n        - All layouts will accept a list of colors for border_* options with which\n          they will draw multiple borders on the appropriate windows.\n\nQtile 0.18.0, released 2021-07-04:\n    !!! Config breakage !!!\n        - The `qtile` entry point doesn't run `qtile start` by default anymore\n        - New optional dependency for dbus related features: dbus-next.\n          Replaces previous reliance on dbus/Glib and allows qtile to use async\n          dbus calls within asyncio's eventloop.\n        - widget.BatteryIcon no longer has a fallback text mode; use\n          widget.Battery instead\n        - MonadX layout key new_at_current is deprecated, use new_client_position.\n        - `libqtile.window` has been moved to `libqtile.backend.x11.window`; a migration has been added for this.\n    !!! deprecation warning !!!\n        - 'main' config functions, deprecated in 0.16.1, will no longer be executed.\n    !!! Notice for packagers - new dependencies !!!\n        - Tests now require the 'dbus-next' python module plus 'dbus-launch' and 'notify-send' applications\n    * features\n        - added transparency in x11 and wayland backends\n        - added measure_mem and measure_swap attributes to memory widget to allow user to choose measurement units.\n        - memory widget can now be displayed with decimal values\n        - new \"qtile migrate\" command, which will attempt to upgrade previous\n          configs to the current version in the case of qtile API breaks.\n        - A new `reconfigure_screens` config setting. When `True` (default) it\n          hooks `Qtile.reconfigure_screens` to the `screen_change` hook,\n          reconfiguring qtile's screens in response to randr events. This\n          removes the need to restart qtile when adding/removing external\n          monitors.\n        - improved key chord / sequence functionality. Leaving a chord with `mode`\n          set brings you to a named mode you activated before, see #2264.\n          A new command, `lazy.ungrab_all_chords`, was introduced to return to the root bindings.\n          The `enter_chord` hook is now always called with a string argument.\n          The third argument to `KeyChord` was renamed from `submaping` to `submapping` (typo fix).\n        - added new argument for CheckUpdates widget: `custom_command_modify` which allows user to modify the\n          the line count of the output of `custom_command` with a lambda function (i.e. `lambda x: x-3`).\n          Argument defaults to `lambda x: x` and is overridden by `distro` argument's internal lambda.\n        - added new argument for the WindowName, WindowTabs and Tasklist widgets: `parse_text` which allows users to\n          define a function that takes a window name as an input, modify it in some way (e.g. str.replace(), str.upper() or regex)\n          and show that modification on screen.\n        - A Wayland backend has been added which can be used by calling `qtile start -b wayland` directly in your TTY.\n          It requires the latest releases of wlroots, python-xkbcommon, pywayland and pywlroots. It is expected to be\n          unstable so please let us know if you find any bugs!\n        - The 'focus` argument to `Click` and `Drag` objects in your config are no longer necessary (and are ignored).\n\nQtile 0.17.0, released 2021-02-13:\n    !!! Python version breakage !!!\n        - Python 3.5 and 3.6 are no longer supported\n    !!! Config breakage !!!\n        - Pacman widget has been removed. Use CheckUpdates instead.\n        - Mpris widget has been removed. Use Mpris2 instead.\n        - property \"masterWindows\" of Tile layout renamed to master_length\n        - Match objects now only allow one string argument for their wm\n          name/class/etc. properties. to update your config, do e.g.\n                   Group('www', spawn='firefox', layout='xmonad',\n              -          matches=[Match(wm_class=['Firefox', 'google-chrome', 'Google-chrome'])]),\n              +          matches=[Match(wm_class='Firefox'), Match(wm_class='google-chrome'), Match(wm_class='Google-chrome')]),\n        - properties wname, wmclass and role of Slice-layout replaced by Match-\n          type property \"match\"\n        - rules specified in `layout.Floating`'s `float_rules` are now evaluated with\n          AND-semantics instead of OR-semantics, i.e. if you specify 2 different\n          property rules, both have to match\n        - check the new `float_rules` for `floating_layout` in the default config and\n          extend your own rules appropriately: some non-configurable auto-floating rules\n          were made explicit and added to the default config\n        - using `dict`s for `layout.Floating`'s `float_rules` is now deprecated, please\n          use `config.Match` objects instead\n        - `no_reposition_match` in `layout.Floating` has been removed; use the list of\n          `config.Match`-objects `no_reposition_rules` instead\n        - Command line has been modernized to a single entry point, the `qtile`\n          binary. Translations are below:\n                qtile     -> qtile start\n                qtile-cmd -> qtile cmd-obj\n                qtile-run -> qtile run-cmd\n                qtile-top -> qtile top\n                qshell    -> qtile shell\n          iqshell and dqtile-cmd are no longer distributed with the\n          package, as they were either user or developer scripts. Both are\n          still available in the qtile repo in /scripts.\n\n          Running `qtile` without arguments will continue to work for the\n          forseeable future, but will be eventually deprecated. qtile prints a\n          warning when run in this configuration.\n        - Qtile.cmd_focus_by_click is no longer an available command.\n        - Qtile.cmd_get_info is no longer an available command.\n        - libqtile.command_* has been deprecated, it has been moved to\n          libqtile.command.*\n        - libqtile.widget.base.ThreadedPollText has been removed; out of tree\n          widgets can use ThreadPoolText in the same package instead.\n        - the YahooWeather widget was removed since Yahoo retired their free\n          tier of the weather API\n        - Deprecated hook `window_name_change` got removed, use\n          `client_name_updated` instead.\n        - show_state attribute from WindowName widget has been removed. Use format attribute instead.\n                show_state = True  -> format = '{state}{name}'\n                show_state = False -> format = '{name}'\n        - mouse_callbacks no longer receives the qtile object as an argument\n          (they receive no arguments); import it via `from libqtile import\n          qtile` instead.\n    * features\n        - new WidgetBox widget\n        - new restart and shutdown hooks\n        - rules specified in `layout.Floating`'s `float_rules` are now evaluated with\n          AND-semantics, allowing for more complex and specific rules\n        - Python 3.9 support\n        - switch to Github Actions for CI\n        - Columns layout has new `margin_on_single` option to specify margin\n          size when there is only one window (default -1: use `margin` option).\n        - new OpenWeather widget to replace YahooWeather\n        - new format attribute for WindowName widget\n        - new max_chars attribute for WindowName widget\n        - libqtile now exports type information\n        - add a new `qtile check` subcommand, which will check qtile configs\n          for various things:\n              - validates configs against the newly exported type information\n                if mypy is present in the environment\n              - validates that qtile can import the config file (e.g. that\n                syntax is correct, ends in a .py extension, etc.)\n              - validates Key and Mouse mod/keysym arguments are ok.\n        - Columns layout now enables column swapping by using swap_column_left and swap_column_right\n    !!! warning !!!\n        - When (re)starting, Qtile passes its state to the new process in a\n          file now, where previously it passed state directly as a string. This\n          fixes a bug where some character encodings (i.e. in group names) were\n          getting messed up in the conversion to/from said string. This change\n          will cause issues if you update Qtile then restart it, causing the\n          running old version to pass state in the previous format to the new\n          process which recognises the new.\n\nQtile 0.16.1, released 2020-08-11:\n    !!! Config breakage !!!\n        - Hooks 'addgroup', 'delgroup' and 'screen_change' will no longer\n          receive the qtile object as an argument. It can be accessed directly\n          at libqtile.qtile.\n    !!! deprecation warning !!!\n        - defining a main function in your config is deprecated. You should use\n          @hook.subscribe.startup_complete instead. If you need access to the\n          qtile object, import it from libqtile directly.\n    * bugfixes\n        - include tests in the release for distros to consume\n        - don't resize 0th screen incorrectly on root ConfigureNotify\n        - expose qtile object as libqtile.qtile (note that we still consider\n          anything not prefixed with cmd_ to be a private API)\n        - fix transparent borders\n        - MonadTall, MonadWide, and TreeTab now work with Slice\n\nQtile 0.16.0, released 2020-07-20:\n    !!! Config breakage !!!\n        - Imports from libqtile.widget are now made through a function\n          proxy to avoid the side effects of importing all widgets at\n          once. If you subclass a widget in your config, import it from\n          its own module.\n          e.g. from libqtile.widget.pomodoro import Pomodoro\n    * features\n        - added `guess_terminal` in utils\n        - added keybinding cheet sheet image generator\n        - custom keyboardlayout display\n        - added native support for key chords\n        - validate config before restart and refuse to restart with a bad\n          config\n        - added a bunch of type annotations to config objects (more to come)\n    * bugfixes\n        - major focus rework; Java-based IDEs such as PyCharm, NetBrains, etc.\n          now focus correctly\n        - fix a bug where spotify (or any window with focus-to=parent) was\n          closed, nothing would be focused and no hotkeys would work\n        - support windows unsetting the input hint\n        - respects window's/user's location setting if present (WM_SIZE_HINTS)\n        - fixed YahooWeather widget for new API\n        - fix a bug where _NET_WM_DESKTOPS wasn't correctly updated when\n          switching screens in some cases\n        - fix a crash in the BSP layout\n        - fix a stacktrace when unknown keysyms are encounted\n        - make qtile --version output more sane\n        - fix a rendering issue with special characters in window names\n        - keyboard widget no longer re-sets the keyboard settings every second\n        - fix qtile-top with the new IPC model\n        - Image widget respects its background setting now\n        - correctly re-draw non-focused screens on qtile restart\n        - fix a crash when decoding images\n        - fix the .when() constraint for lazy objects\n\nQtile 0.15.1, released 2020-04-14\n    * bugfixes\n        - fix qtile reload (it was crashing)\n\nQtile 0.15.0, released 2020-04-12:\n    !!! Config breakage !!!\n        - removed the mpd widget, which depended on python-mpd.\n        - the Clock widget now requires pytz to handle timezones that are\n          passed as string\n        - libqtile.command.Client does not exist anymore and has been\n          replaced by libqtile.command_client.CommandClient\n    !!! deprecation warning !!!\n        - libqtile.command.lazy is deprecated in favor of libqtile.lazy.lazy\n    * features\n        - Python 3.8 support\n        - `wallpaper` and `wallpaper_mode` for screens\n        - bars can now have margins\n        - `lazy.toscreen` called twice will now toggle the groups\n          (optional with the `toggle` parameter)\n        - `lazy.window.togroup` now has `switch_group` parameter to follow\n          the window to the group it is sent to\n        - qtile now copies the default config if the config file does not exist\n        - all widgets now use Pango markup by default\n        - add an `fmt` option for all textbox widgets\n        - new PulseVolume widget for controlling PulseAudio\n        - new QuickExit widget, mainly for the default config\n        - new non-graph CPU widget\n        - KeyboardLayout widget: new `options` parameter\n        - CheckUpdates widget: support ArchLinux yay\n        - GroupBox widget: new `block_highlight_text_color` parameter\n        - Mpd2 widget: new `color_progress` parameter\n        - Maildir widget can now display the inbox grand total\n        - the Net widget can now use bits as unit\n        - Spacer widget: new `background_color` parameter\n        - More consistent resize behavior in Columns layout\n        - various improvements of the default config\n        - large documentation update and improvements (e.g. widget\n          dependencies)\n    * bugfixes\n        - qtile binary: don't fail if we can't set the locale\n        - don't print help if qtile-cmd function returns nothing\n        - Monad layout: fix margins when flipped\n\nQtile 0.14.2, released 2019-06-19:\n    * bugfixes\n        - previous release still exhibited same issues with package data,\n          really fix it this time\n\nQtile 0.14.1, released 2019-06-19:\n    * bugfixes\n        - properly include png files in the package data to install included\n          icons\n\nQtile 0.14.0, released 2019-06-19:\n    !!! Python version breakage !!!\n        - Python 2 is no longer supported\n        - Python 3.4 and older is no longer supported\n    !!! Config breakage !!!\n        - Many internal things were renamed from camel case to snake case. If\n          your config uses main(), or any lazy.function() invocations that\n          interact directly with the qtile object, you may need to forward port\n          them. Also note that we do *not* consider the qtile object to be a\n          stable api, so you will need to continue forward porting these things\n          for future refactorings (for wayland, etc.). A better approach may be\n          to add an upstream API for what you want to do ;)\n        - Maildir's subFolder and maildirPath changed to maildir_path and\n          sub_folder.\n        - the graph widget requires the psutil library to be installed\n    * features\n        - add custom `change_command` to backlight widget\n        - add CommandSet extension to list available commands\n        - simplify battery monitoring widget interface and add freebsd\n          compatible battery widget implementation\n        - track last known mouse coordinates on the qtile manager\n        - allow configuration of warping behavior in columns layout\n    * bugfixes\n        - with cursor warp enabled, the cursor is warped on screen change\n        - fix stepping groups to skip the scratch pad group\n        - fix stack layout to properly shuffle\n        - silence errors when unmapping windows\n\nQtile 0.13.0, released 2018-12-23:\n    !!! deprecation warning !!!\n        - wmii layout is deprecated in terms of columns layout, which has the\n          same behavior with different defaults, see the wmii definition for\n          more details\n    * features\n        - add svg handling for images\n        - allow addgroup command to set the layout\n        - add command to get current log level\n        - allow groupbox to hide unused groups\n        - add caps lock indicator widget\n        - add custom_command to check_update widget\n    * bugfixes\n        - better shutdown handling\n        - fix clientlist current client tracking\n        - fix typo in up command on ratiotile layout\n        - various fixes to check_update widget\n        - fix 0 case for resize screen\n\nQtile 0.12.0, released 2018-07-20:\n    !!! Config breakage !!!\n        - Tile layout commands up/down/shuffle_up/shuffle_down changed to be\n          more consistent with other layouts\n        - move qcmd to qtile-cmd because of conflict with renameutils, move\n          dqcmd to dqtile-cmd for symmetry\n    * features\n        - add `add_after_last` option to Tile layout to add windows to the end\n          of the list.\n        - add new formatting options to TaskList\n        - allow Volume to open app on right click\n    * bugfixes\n        - fix floating of file transfer windows and java drop-downs\n        - fix exception when calling `cmd_next` and `cmd_previous` on layout\n          without windows\n        - fix caps lock affected behaviour of key bindings\n        - re-create cache dir if it is deleted while qtile is running\n        - fix CheckUpdates widget color when no updates\n        - handle cases where BAT_DIR does not exist\n        - fix the wallpaper widget when using `wallpaper_command`\n        - fix Tile layout order to not reverse on reset\n        - fix calling `focus_previous/next` with no windows\n        - fix floating bug is BSP layout\n\nQtile 0.11.1, released 2018-03-01:\n    * bug fix\n        - fixed pip install of qtile\n\nQtile 0.11.0, released 2018-02-28:\n    !!! Completely changed extension configuration, see the documentation !!!\n    !!! `extention` subpackage renamed to `extension` !!!\n    !!! `extentions` configuration variable changed to `extension_defaults` !!!\n    * features\n        - qshell improvements\n        - new MonadWide layout\n        - new Bsp layout\n        - new pomodoro widget\n        - new stock ticker widget\n        - new `client_name_updated` hook\n        - new RunCommand and J4DmenuDesktop extension\n        - task list expands to fill space, configurable via `spacing` parameter\n        - add group.focus_by_name() and group.info_by_name()\n        - add disk usage ratio to df widget\n        - allow displayed group name to differ from group name\n        - enable custom TaskList icon size\n        - add qcmd and dqcmd to extend functionality around qtile.command\n          functionality\n        - add ScratchPad group that has configurable drop downs\n    * bugfixes\n        - fix race condition in Window.fullscreen\n        - fix for string formatting in qtile_top\n        - fix unicode literal in tasklist\n        - move mpris2 initialization out of constructor\n        - fix wlan widget variable naming and division\n        - normalize behavior of layouts on various commands\n        - add better fallback to default config\n        - update btc widget to use coinbase\n        - fix cursor warp when using default layout implementation\n        - don't crash when using widget with unmet dependencies\n        - fix floating window default location\n\nQtile 0.10.7, released 2017-02-14:\n    * features\n        - new MPD widget, widget.MPD2, based on `mpd2` library\n        - add option to ignore duplicates in prompt widget\n        - add additional margin options to GroupBox widget\n        - add option to ignore mouse wheel to GroupBox widget\n        - add `watts` formatting string option to Battery widgets\n        - add volume commands to Volume widget\n        - add Window.focus command\n    * bugfixes\n        - place transient windows in the middle of their parents\n        - fix TreeTab layout\n        - fix CurrentLayoutIcon in Python 3\n        - fix xcb handling for xcffib 0.5.0\n        - fix bug in Screen.resize\n        - fix Qtile.display_kb command\n\nQtile 0.10.6, released 2016-05-24:\n    !!! qsh renamed to qshell !!!\n        This avoids name collision with other packages\n    * features\n        - Test framework changed to pytest\n        - Add `startup_complete` hook\n    * bugfixes\n        - Restore dynamic groups on restart\n        - Correct placement of transient_for windows\n        - Major bug fixes with floating window handling\n    * file path changes (XDG Base Directory specification)\n        - the default log file path changed from ~/.qtile.log to\n          ~/.local/share/qtile/qtile.log\n        - the cache directory changed from ~/.cache to ~/.cache/qtile\n        - the prompt widget's history file changed from ~/.qtile_history to\n          ~/.cache/qtile/prompt_history\n\nQtile 0.10.5, released 2016-03-06:\n    !!! Python 3.2 support dropped !!!\n    !!! GoogleCalendar widget dropped for KhalCalendar widget !!!\n    !!! qtile-session script removed in favor of qtile script !!!\n    * features\n        - new Columns layout, composed of dynamic and configurable columns of\n          windows\n        - new iPython kernel for qsh, called iqsh, see docs for installing\n        - new qsh command `display_kb` to show current key binding\n        - add json interface to IPC server\n        - add commands for resizing MonadTall main panel\n        - wlan widget shows when you are disconnected and uses a configurable\n          format\n    * bugfixes\n        - fix path handling in PromptWidget\n        - fix KeyboardLayout widget cycling keyboard\n        - properly guard against setting screen to too large screen index\n\nQtile 0.10.4, released 2016-01-19:\n    !!! Config breakage !!!\n        - positional arguments to Slice layout removed, now `side` and `width`\n          must be passed in as keyword arguments\n    * features\n        - add alt coin support to BitcoinTracker widget\n    * bugfixes\n        - don't use six.moves assignment (fix for >=setuptools-19.3)\n        - improved floating and fullscreen handling\n        - support empty or non-charging secondary battery in BatteryWidget\n        - fix GoogleCalendar widget crash\n\nQtile 0.10.3, released 2015-12-25:\n    * features\n        - add wmii layout\n        - add BSD support to graph widgets\n    * bugfixes\n        - fix (some) fullscreen problems\n        - update google calendar widget to latest google api\n        - improve multiple keyboard layout support\n        - fix displaying Systray widget on secondary monitor\n        - fix spawn file descriptor handling in Python 3\n        - remove duplicate assert code in test_verticaltile.py\n        - allow padding_{x,y} and margin_{x,y} widget attrs to be set to 0\n\nQtile 0.10.2, released 2015-10-19:\n    * features\n        - add qtile-top memory monitoring\n        - GroupBox can set visible groups\n        - new GroupBox highlighting, line\n        - allow window state to be hidden on WindowName widget\n        - cmd_togroup can move to current group when None sent\n        - added MOC playback widget\n        - added memory usage widget\n        - log truncation, max log size, and number of log backups configurable\n        - add a command to change to specific layout index\n          (lazy.to_layout_index(index))\n    * bugfixes\n        - fixed memory leak in dgroups\n        - margin fixes for MonalTall layout\n        - improved cursor warp\n        - remove deprecated imp for Python >= 3.3\n        - properly close file for NetGraph\n        - fix MondadTall layout grow/shrink secondary panes for Python 2\n        - Clock widget uses datetime.now() rather than .fromtimestamp()\n        - fix Python 3 compatibility of ThermalSensor widget\n        - various Systray fixes, including implementing XEMBED protocol\n        - print exception to log during loading config\n        - fixed xmonad layout margins between main and secondary panes\n        - clear last window name from group widgets when closed\n        - add toggleable window border to single xmonad layout\n    * config breakage\n        - layouts.VerticalTile `windows` is now `clients`\n        - layouts.VerticalTile focus_next/focus_previous now take a single\n          argument, similar to other layouts\n\nQtile 0.10.1, released 2015-07-08:\n    This release fixes a problem that made the PyPI package uninstallable,\n    qtile will work with a pip install now\n\nQtile 0.10.0, released 2015-07-07:\n    !!! Config breakage !!!\n        - various deprecated commands have been removed:\n            Screen.cmd_nextgroup: use cmd_next_group\n            Screen.cmd_prevgroup: use cmd_prev_group\n            Qtile.cmd_nextlayout: use cmd_next_layout\n            Qtile.cmd_prevlayout: use cmd_prev_layout\n            Qtile.cmd_to_next_screen: use cmd_next_screen\n            Qtile.cmd_to_prev_screen: use cmd_prev_screen\n        - Clock widget: remove fmt kwarg, use format kwarg\n        - GmailChecker widget: remove settings parameter\n        - Maildir widget: remove maildirPath, subFolders, and separator kwargs\n    * Dependency updates\n        - cffi>=1.1 is now required, along with xcffib>=0.3 and cairocffi>=0.7\n          (the cffi 1.0 compatible versions of each)\n        - Care must be taken that xcffib is installed *before* cairocffi\n    * features\n        - add support for themed cursors using xcb-cursor if available\n        - add CheckUpdate widget, for checking package updates, this deprecates\n          the Pacman widget\n        - add KeyboardKbdd widget, for changing keyboard layouts\n        - add Cmus widget, for showing song playing in cmus\n        - add Wallpaper widget, for showing and cycling wallpaper\n        - add EzConfig classes allowing shortcuts to define key bindings\n        - allow GroupBox urgent highlighting through text\n        - Bar can be placed vertically on sides of screens (widgets must be\n          adapted for vertical viewing)\n        - add recognizing brightness keys\n    * bugfixes\n        - deprecation warnings were not printing to logs, this has been fixed\n        - fix calculation of y property of Gap\n        - fix focus after closing floating windows and floating windows\n        - fix various Python 3 related int/float problems\n        - remember screen focus across restarts\n        - handle length 1 list passed to Drawer.set_source_rgb without raising\n          divide by zero error\n        - properly close files opened in Graph widget\n        - handle _NET_WM_STATE_DEMANDS_ATTENTION as setting urgency\n        - fix get_wm_transient_for, request WINDOW, not ATOM\n\nQtile 0.9.1, released 2015-02-13:\n    This is primarily a unicode bugfix release for 0.9.0; there were several\n    nits related to the python2/3 unicode conversion that were simply wrong.\n    This release also adds license headers to each file, which is necessary for\n    distro maintainers to package Qtile.\n    * bugfixes\n        - fix python2's importing of gobject\n        - fix unicode handling in several places\n\nQtile 0.9.0, released 2015-01-20:\n    * !!! Dependency Changes !!!\n      New dependencies will need to be installed for Qtile to work\n        - drop xpyb for xcffib (XCB bindings)\n        - drop py2cairo for cairocffi (Cairo bindings)\n        - drop PyGTK for asyncio (event loop, pangocairo bindings managed\n          internally)\n        - Qtile still depends on gobject if you want to use anything that uses\n          dbus (e.g. the mpris widgets or the libnotify widget)\n    * features\n        - add Python 3 and pypy support (made possible by dependency changes)\n        - new layout for vertical monitors\n        - add startup_once hook, which is called exactly once per session (i.e.\n          it is not called when qtile is restarted via lazy.restart()). This\n          eliminates the need for the execute_once() function found in lots of\n          user configs.\n        - add a command for showing/hiding the bar (lazy.hide_show_bar())\n        - warn when a widget's dependencies cannot be imported\n        - make qtile.log more useful via better warnings in general, including\n          deprecation and various other warnings that were previously\n          nonexistent\n        - new text-polling widget super classes, which enable easy\n          implementation of various widgets that need to poll things outside\n          the event loop.\n        - add man pages\n        - large documentation update, widget/layout documentation is now\n          autogenerated from the docstrings\n        - new ImapWidget for checking imap mailboxes\n    * bugfixes\n        - change default wmname to \"LG3D\" (this prevents some java apps from\n          not working out of the box)\n        - all code passes flake8\n        - default log level is now WARNING\n        - all widgets now use our config framework\n        - windows with the \"About\" role float by default\n        - got rid of a bunch of unnecessary bare except: clauses\n\nQtile 0.8.0, released 2014-08-18:\n    * features\n        - massive widget/layout documentation update\n        - new widget debuginfo for use in Qtile development\n        - stack has new autosplit, fair options\n        - matrix, ratiotile, stack, xmonad, zoomy get 'margin' option\n        - new launchbar widget\n        - support for matching WM_CLASS and pid in Match\n        - add support for adding dgroups rules dynamically and via ipc\n        - Clock supports non-system timezones\n        - new mpris2 widget\n        - volume widget can use emoji instead of numbers\n        - add an 'eval' function to qsh at every object level\n        - bar gradients support more colors\n        - new Clipboard widget (very handy!)\n    * bugfixes\n        - bitcoin ticker widget switched from MtGox (dead) to btc-e\n        - all widgets now use Qtile's defaults system, so their defaults are\n          settable globally, etc.\n        - fix behavior when screens are cloned\n        - all widgets use a unified polling framework\n        - \"dialog\" WM_TYPEs float by default\n        - respect xrandr --primary\n        - use a consistent font size in the default config\n        - default config supports mouse movements and floating\n        - fix a bug where the bar was not redrawn correctly in some multiscreen\n          environments\n        - add travis-ci support and make tests vastly more robust\n    * config breakage\n        - libqtile.layout.Stack's `stacks` parameter is now `num_stacks`\n\nQtile 0.7.0, released 2014-03-30:\n    * features\n        - new disk free percentage widget\n        - new widget to display static image\n        - per core CPU graphs\n        - add \"screen affinity\" in dynamic groups\n        - volume widget changes volume linear-ly instead of log-ly\n        - only draw bar when idle, vastly reducing the number of bar draws and\n          speeding things up\n        - new Gmail widget\n        - Tile now supports automatically managing master windows via the\n          `master_match` parameter.\n        - include support for minimum height, width, size increment hints\n    * bugfixes\n        - don't crash on any exception in main loop\n        - don't crash on exceptions in hooks\n        - fix a ZeroDivisionError in CPU graph\n        - remove a lot of duplicate and unused code\n        - Steam windows are placed more correctly\n        - Fixed several crashes in qsh\n        - performance improvements for some layouts\n        - keyboard layout widget behaves better with multiple keyboard\n          configurations\n    * config breakage\n        - Tile's shuffleMatch is renamed to resetMaster\n\nQtile 0.6, released 2013-05-11:\n    !!! Config breakage !!!\n    This release breaks your config file in several ways:\n        - The Textbox widget no longer takes a ``name'' positional parameter,\n          since it was redundant; you can use the ``name'' kwarg to define it.\n        - manager.Group (now _Group) is not used to configure groups any more;\n          config.Group replaces it. For simple configurations (i.e.\n          Group(\"a\") type configs), this should be a drop in replacement.\n          config.Group also provides many more options for showing and hiding\n          groups, assigning windows to groups by default, etc.\n        - The Key, Screen, Drag, and Click objects have moved from the manager\n          module to the config module.\n        - The Match object has moved from the dgroups module to the config\n          module.\n        - The addgroup hook now takes two parameters: the qtile object and the\n          name of the group added:\n              @hook.subscribe\n              def addgroup_hook(qtile, name):\n                  pass\n        - The nextgroup and prevgroup commands are now on Screen instead of\n          Group.\n    For most people, you should be able to just:\n        sed -i -e 's/libqtile.manager/libqtile.config' config.py\n    ...dgroups users will need to go to a bit more work, but hopefully\n    configuration will be much simpler now for new users.\n    * features\n        - New widgets: task list,\n        - New layout: Matrix\n        - Added ability to drag and drop groups on GroupBox\n        - added \"next urgent window\" command\n        - added font shadowing on widgets\n        - maildir widget supports multiple folders\n        - new config option log_level to set logging level (any of\n          logging.{DEBUG, INFO, WARNING, ERROR, CRITICAL})\n        - add option to battery widget to hide while level is above a certain\n          amount\n        - vastly simplify configuration of dynamic groups\n        - MPD widget now supports lots of metadata options\n    * bugfixes\n        - don't crash on restart when the config has errors\n        - save layout and selected group state on restart\n        - varous EWMH properties implemented correctly\n        - fix non-black systray icon backgrounds\n        - drastically reduce the number of timeout_add calls in most widgets\n        - restart on RandR attach events to allow for new screens\n        - log level defaults to ERROR\n        - default config options are no longer initialized when users define\n          their corresponding option (preventing duplicate widgets, etc.)\n        - don't try to load config in qsh (not used)\n        - fix font alignment across Textbox based widgets\n\nQtile 0.5, released 2012-11-11:\n    (Note, this is not complete! Many, many changes have gone in to 0.5, by a\n    large number of contributors. Thanks to everyone who reported a bug or\n    fixed one!)\n    * features\n        - Test framework is now nose\n        - Documentation is now in sphinx\n        - Several install guides for various OSes\n        - New widgets: battery based icon, MPRIS1, canto, current layout, yahoo\n          weather, sensors, screen brightness, notifiy, pacman, windowtabs,\n          she, crashme, wifi.\n        - Several improvements to old widgets (e.g. battery widget displays low\n          battery in red, GroupBox now has a better indication of which screen\n          has focus in multi-screen setups, improvements to Prompt, etc.)\n        - Desktop notification service.\n        - More sane way to handle configuration files\n        - Promote dgroups to a first class entity in libqtile\n        - Allow layouts to be named on an instance level, so you can:\n            layouts = [\n                # a layout just for gimp\n                layout.Slice('left', 192, name='gimp', role='gimp-toolbox',\n                    fallback=layout.Slice('right', 256, role='gimp-dock',\n                    fallback=layout.Stack(stacks=1, **border_args)))\n            ]\n            ...\n\n            dynamic_groups = { 'gimp': {'layout': 'gimp'} }\n\n            Dgroups(..., dynamic_groups, ...)\n        - New Layout: Zoomy\n        - Add a session manager to re-exec qtile if things go south\n        - Support for WM_TAKE_FOCUS protocol\n        - Basic .desktop file for support in login managers\n        - Qsh reconnects after qtile is restarted from within it\n        - Textbox supports pango markup\n        - Examples moved to qtile-examples repository.\n\n    * bugfixes\n        - Fix several classes of X races in a more sane way\n        - Minor typo fixes to most widgets\n        - Fix several crashes when drawing systray icons too early\n        - Create directories for qtile socket as necessary\n        - PEP8 formatting updates (though we're not totally there yet)\n        - All unit tests pass\n        - Lots of bugfixes to MonadTall\n        - Create IPC socket directory if necessary\n        - Better error if two widgets have STRETCH length\n        - Autofloat window classes can now be overridden\n        - xkeysyms updated\n\n# vim :set ts=4 sw=4 sts=4 et :\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.193359375,
          "content": "# How to contribute\n\nInstead of making this document a copy of [the _contributing_ section of our\ndocumentation](https://docs.qtile.org/en/latest/manual/contributing.html),\nwe just link to it here.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "Copyright (c) 2008, Aldo Cortesi. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.822265625,
          "content": "include CHANGELOG\ninclude LICENSE\ninclude README.rst\ninclude MANIFEST.in\ninclude CONTRIBUTING.md\ninclude .pre-commit-config.yaml\ninclude builder.py\n\nexclude .coveragerc\nexclude .pylintrc\nexclude flake.nix\nexclude flake.lock\nexclude nix/*\nexclude tox.ini\nexclude requirements.txt\nexclude requirements-dev.txt\nexclude libqtile/_ffi*.py\nexclude libqtile/backend/x11/_ffi*.py\nexclude libqtile/backend/wayland/_ffi*.*\nexclude libqtile/backend/wayland/_libinput*.*\nexclude Makefile\nexclude dev.sh\nexclude logo.png\nexclude .readthedocs.yaml\nexclude .git-blame-ignore-revs\n\ngraft libqtile/resources\ngraft libqtile/widget/helpers\ngraft resources\ngraft test\nrecursive-include libqtile *.typed\n\nprune bin\nprune docs\nprune scripts\nprune rpm\ninclude scripts/ffibuild\n\nrecursive-exclude * __pycache__\nrecursive-exclude * *.py[co]\nrecursive-exclude stubs *\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.7548828125,
          "content": ".DEFAULT_GOAL := help\n\n.PHONY: help\nhelp: ## Show this help\n\t@awk 'BEGIN {FS = \":.*?## \"} /^[a-zA-Z_-]+:.*?## / {printf \"\\033[1m%-15s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n\n.PHONY: check\ncheck: ## Run the test suite\n\t@PY=`python --version | sed 's/.*\\.\\([0-9]*\\)\\..*/py3\\1/'`; \\\n\t\techo TOXENV=$$PY tox; \\\n\t\tTOXENV=$$PY tox\n\n.PHONY: lint\nlint: ## Check the source code\n\tpre-commit run -a\n\n.PHONY: clean\nclean: ## Clean generated files\n\t-rm -rf dist qtile.egg-info docs/_build build/ .tox/ .mypy_cache/ .pytest_cache/ .eggs/\n\n.PHONY: run-ffibuild\nrun-ffibuild: ## Build FFI modules\n\t./scripts/ffibuild\n\n.PHONY: update-flake\nupdate-flake: ## Update the Nix flake.lock file, requires Nix installed with flake support, see: https://nixos.wiki/wiki/Flakes\n\tnix flake update\n\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.6220703125,
          "content": "|logo|\n\n**A full-featured, hackable tiling window manager written and configured in Python**\n\n|website| |pypi| |ci| |rtd| |license| |ruff| |coverage|\n\nFeatures\n========\n\n* Simple, small and extensible. It's easy to write your own layouts,\n  widgets and commands.\n* Configured in Python.\n* Runs as an X11 WM or a Wayland compositor.\n* Command shell that allows all aspects of Qtile to be managed and\n  inspected.\n* Complete remote scriptability - write scripts to set up workspaces,\n  manipulate windows, update status bar widgets and more.\n* Qtile's remote scriptability makes it one of the most thoroughly\n  unit-tested window managers around.\n\nCommunity\n=========\n\nQtile is supported by a dedicated group of users. If you need any help, please\ndon't hesitate to fire off an email to our mailing list or join us on IRC. You\ncan also ask questions on the discussions board.\n\n:Mailing List: https://groups.google.com/group/qtile-dev\n:Q&A: https://github.com/qtile/qtile/discussions/categories/q-a\n:IRC: irc://irc.oftc.net:6667/qtile\n:Discord: https://discord.gg/ehh233wCrC (Bridged with IRC)\n\nExample code\n============\n\nCheck out the `qtile-examples`_ repo which contains examples of users' configurations,\nscripts and other useful links.\n\n.. _`qtile-examples`: https://github.com/qtile/qtile-examples\n\nContributing\n============\n\nPlease report any suggestions, feature requests, bug reports, or annoyances to\nthe GitHub `issue tracker`_. There are also a few `tips & tricks`_,\nand `guidelines`_ for contributing in the documentation.\n\nPlease also consider submitting useful scripts etc. to the qtile-examples repo\n(see above).\n\n.. _`issue tracker`: https://github.com/qtile/qtile/issues\n.. _`tips & tricks`: https://docs.qtile.org/en/latest/manual/hacking.html\n.. _`guidelines`: https://docs.qtile.org/en/latest/manual/contributing.html\n\n.. |logo| image:: https://raw.githubusercontent.com/qtile/qtile/master/logo.png\n    :alt: Logo\n    :target: https://qtile.org\n.. |website| image:: https://img.shields.io/badge/website-qtile.org-blue.svg\n    :alt: Website\n    :target: https://qtile.org\n.. |pypi| image:: https://img.shields.io/pypi/v/qtile.svg\n    :alt: PyPI\n    :target: https://pypi.org/project/qtile/\n.. |ci| image:: https://github.com/qtile/qtile/workflows/ci/badge.svg?branch=master\n    :alt: CI status\n    :target: https://github.com/qtile/qtile/actions\n.. |rtd| image:: https://readthedocs.org/projects/qtile/badge/?version=latest\n    :alt: Read the Docs\n    :target: https://docs.qtile.org/en/latest/\n.. |license| image:: https://img.shields.io/github/license/qtile/qtile.svg\n    :alt: License\n    :target: https://github.com/qtile/qtile/blob/master/LICENSE\n.. |ruff| image:: https://img.shields.io/badge/code%20style-ruff-000000.svg\n    :alt: Codestyle\n    :target: https://github.com/astral-sh/ruff\n.. |coverage| image:: https://coveralls.io/repos/github/qtile/qtile/badge.svg\n    :alt: Coverage\n    :target: https://coveralls.io/github/qtile/qtile\n\n\nMaintainers\n===========\n\n| `@tych0`_ GPG: ``3CCA B226 289D E016 0C61 BDB4 18D1 8F1B C464 DCA3``\n| `@ramnes`_ GPG: ``99CC A84E 2C8C 74F3 2E12  AD53 8C17 0207 0803 487A``\n| `@m-col`_ GPG: ``35D9 2E7C C735 7A81 173E  A1C9 74F9 FDD2 0984 FBEC``\n| `@flacjacket`_ GPG: ``58B5 F350 8339 BFE5 CA93  AC9F 439D 9701 E7EA C588``\n| `@elParaguayo`_ GPG: ``A6BA A1E1 7D26 64AD B97B  2C6F 58A9 AA7C 8672 7DF7``\n| `@jwijenbergh`_ GPG: ``B1C8 1CF3 063B 5836 4946  3687 4827 061B D417 C233``\n\n.. _`@tych0`: https://github.com/tych0\n.. _`@ramnes`: https://github.com/ramnes\n.. _`@m-col`: https://github.com/m-col\n.. _`@flacjacket`: https://github.com/flacjacket\n.. _`@elParaguayo`: https://github.com/elparaguayo\n.. _`@jwijenbergh`: https://github.com/jwijenbergh\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "builder.py",
          "type": "blob",
          "size": 2.17578125,
          "content": "# Copyright (c) 2023, elParaguayo. All rights reserved.\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport sys\n\nfrom setuptools import build_meta as _orig\nfrom setuptools.build_meta import *  # noqa: F401,F403\n\nWAYLAND_DEPENDENCIES = [\"pywlroots>=0.17.0,<0.18.0\"]\n\n\ndef wants_wayland(config_settings):\n    if config_settings:\n        for key in [\"Backend\", \"backend\"]:\n            if config_settings.get(key, \"\").lower() == \"wayland\":\n                return True\n\n    return False\n\n\ndef get_requires_for_build_wheel(config_settings=None):\n    \"\"\"Inject pywlroots into build dependencies if wayland requested.\"\"\"\n    reqs = _orig.get_requires_for_build_wheel(config_settings)\n    if wants_wayland(config_settings):\n        reqs += WAYLAND_DEPENDENCIES\n\n    return reqs\n\n\ndef build_wheel(wheel_directory, config_settings=None, metadata_directory=None):\n    \"\"\"Stop building if wayland requested but pywlroots is not installed.\"\"\"\n    if wants_wayland(config_settings):\n        try:\n            import wlroots  # noqa: F401\n        except ImportError:\n            sys.exit(\"Wayland backend requested but pywlroots is not installed.\")\n\n    return _orig.build_wheel(wheel_directory, config_settings, metadata_directory)\n"
        },
        {
          "name": "dev.sh",
          "type": "blob",
          "size": 0.5966796875,
          "content": "#!/bin/sh\nset -e\nset -x\n\necho \"Creating dev environment in ./venv...\"\n\npython=python3\nif [ \"$#\" -eq 1 ]; then\n    python=$1\nfi\n\n${python} -m venv venv\n. venv/bin/activate\npip install -U pip setuptools wheel\n\necho \"Installing other required packages...\"\npip install -r requirements.txt\npip install -r requirements-dev.txt\n\necho \"Installing pre-commit hooks...\"\npre-commit install\n\necho \"\"\necho \"  * Created virtualenv environment in ./venv.\"\necho \"  * Installed all dependencies into the virtualenv.\"\necho \"  * You can now activate the $(python3 --version) virtualenv with this command: \\`. venv/bin/activate\\`\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.5537109375,
          "content": "{\n  \"nodes\": {\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1734649271,\n        \"narHash\": \"sha256-4EVBRhOjMDuGtMaofAIqzJbg4Ql7Ai0PSeuVZTHjyKQ=\",\n        \"owner\": \"nixos\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"d70bd19e0a38ad4790d3913bf08fcbfc9eeca507\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nixos\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 3.6728515625,
          "content": "{\n  description = \"Qtile's flake, full-featured, hackable tiling window manager written and configured in Python\";\n\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs?ref=nixos-unstable\";\n  };\n\n  outputs =\n    { self, nixpkgs }:\n    let\n      supportedSystems = [\n        \"x86_64-linux\"\n        \"aarch64-linux\"\n      ];\n\n      forAllSystems =\n        function:\n        nixpkgs.lib.genAttrs supportedSystems (\n          system:\n          let\n            nixpkgs-settings = {\n              inherit system;\n\n              overlays = [ (import ./nix/overlays.nix self) ];\n            };\n          in\n          function (import nixpkgs nixpkgs-settings)\n        );\n\n    in\n    {\n      checks = forAllSystems (pkgs: pkgs.python3Packages.qtile.passthru.tests);\n\n      overlays.default = import ./nix/overlays.nix self;\n\n      packages = forAllSystems (\n        pkgs:\n        let\n          qtile' = pkgs.python3Packages.qtile;\n        in\n        {\n          default = self.packages.${pkgs.system}.qtile;\n\n          qtile = qtile'.overrideAttrs (\n            prev:\n            let\n              remove-dbus-next = dep: dep.pname != pkgs.python3Packages.dbus-next.pname;\n\n              # seems like dependencies is a fancy wrapper on that one!\n              propagatedBuildInputs =\n                with pkgs.python3Packages;\n                [ dbus-fast ] ++ (pkgs.lib.filter remove-dbus-next prev.propagatedBuildInputs);\n            in\n            {\n              name = \"${qtile'.pname}-${qtile'.version}\";\n              inherit propagatedBuildInputs;\n              passthru.unwrapped = qtile';\n            }\n          );\n        }\n      );\n\n      devShells = forAllSystems (\n        pkgs:\n        let\n          common-python-deps =\n            ps:\n            with ps;\n            [ python-dateutil ]\n            ++ [\n              # docs building\n              numpydoc\n              sphinx\n              sphinx_rtd_theme\n              # tests\n              coverage\n              pytest\n              isort\n            ];\n\n          tests = {\n            wayland = pkgs.writeScriptBin \"qtile-run-tests-wayland\" ''\n              ./scripts/ffibuild -v\n              pytest -x --backend=wayland\n            '';\n\n            x11 = pkgs.writeScriptBin \"qtile-run-tests-x11\" ''\n              ./scripts/ffibuild -v\n              pytest -x --backend=x11\n            '';\n          };\n\n          common-system-deps =\n            with pkgs;\n            [\n              # Gdk namespaces\n              wrapGAppsHook\n              gobject-introspection\n\n              # docs graphs\n              graphviz\n\n              # x11 deps\n              xorg.xorgserver\n              xorg.libX11\n\n              wlroots_0_17\n              # test/backend/wayland/test_window.py\n              gtk-layer-shell\n              imagemagick\n            ]\n            ++ (builtins.attrValues tests);\n        in\n        {\n          default = pkgs.mkShell {\n            env = {\n              QTILE_PIXMAN_PATH = \"${pkgs.pixman}/include/pixman-1\";\n              QTILE_LIBDRM_PATH = \"${pkgs.libdrm.dev}/include/libdrm\";\n\n              LD_LIBRARY_PATH =\n                with pkgs;\n                lib.makeLibraryPath [\n                  glib\n                  pango\n                  xcb-util-cursor\n                  pixman\n                  libdrm.dev\n                ];\n            };\n\n            shellHook = ''\n              export PYTHONPATH=$(readlink -f .):$PYTHONPATH\n            '';\n\n            inputsFrom = [ self.packages.${pkgs.system}.qtile ];\n\n            packages =\n              with pkgs;\n              [\n                (python3.withPackages common-python-deps)\n                pre-commit\n              ]\n              ++ common-system-deps;\n          };\n        }\n      );\n    };\n}\n"
        },
        {
          "name": "libqtile",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 20.50390625,
          "content": null
        },
        {
          "name": "nix",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.1806640625,
          "content": "[build-system]\nrequires = [\n    \"cffi>=1.1.0\",\n    \"cairocffi[xcb]>=1.6.0\",\n    \"setuptools>=60\",\n    \"setuptools-scm>=7.0\",\n    \"wheel\",\n]\nbackend-path=[\".\"]\nbuild-backend = \"builder\"\n\n[project]\nname = \"qtile\"\ndescription = \"A pure-Python tiling window manager.\"\ndynamic = [\"version\", \"readme\", \"dependencies\", \"optional-dependencies\"]\nlicense = {text = \"MIT\"}\nclassifiers = [\n    \"Intended Audience :: End Users/Desktop\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: POSIX :: BSD :: FreeBSD\",\n    \"Operating System :: POSIX :: Linux\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Desktop Environment :: Window Managers\",\n]\n\n[project.urls]\n\"Homepage\" = \"https://qtile.org\"\n\"Documentation\" = \"https://docs.qtile.org/\"\n\"Code\" = \"https://github.com/qtile/qtile/\"\n\"Issue tracker\" = \"https://github.com/qtile/qtile/issues\"\n\"Contributing\" = \"https://docs.qtile.org/en/latest/manual/contributing.html\"\n\n[project.scripts]\nqtile = \"libqtile.scripts.main:main\"\n\n[tool.setuptools.packages.find]\ninclude = [\"libqtile*\"]\n\n[tool.setuptools_scm]\n\n[tool.setuptools.dynamic]\nreadme = {file = \"README.rst\"}\n\n[tool.ruff]\nline-length = 98\nexclude = [\"libqtile/_ffi.*.py\", \"libqtile/backend/x11/_ffi.*.py\", \"test/configs/syntaxerr.py\"]\ntarget-version = \"py310\"\n\n[tool.ruff.lint]\nselect = [\n\t\"F\",       # pyflakes\n\t\"E\",       # pycodestyle errors\n\t\"W\",       # pycodestyle warnings\n\t\"I\",       # isort\n\t\"N\",       # pep8-naming\n\t\"G\",       # flake8-logging-format\n\t\"PIE\",     # flake8-pie\n\t\"UP\",      # pyupgrade\n]\n\nignore = [\n    \"E501\",    # ignore due to conflict with formatter\n    \"N818\",    # exceptions don't need the Error suffix\n    \"E741\",    # allow ambiguous variable names\n]\n\nfixable = [\"ALL\"]\n\n[tool.ruff.lint.per-file-ignores]\n\"stubs/*\" = [\n    \"N\",       # naming conventions don't matter in stubs\n    \"F403\",    # star imports are okay in stubs\n    \"F405\",    # star imports are okay in stubs\n]\n\n[tool.ruff.format]\nquote-style = \"double\"\nindent-style = \"space\"\nskip-magic-trailing-comma = false\nline-ending = \"auto\"\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"libqtile\", \"test\"]\ndefault-section = \"third-party\"\n\n[tool.mypy]\nmypy_path = \"stubs\"\npython_version = \"3.13\"\nwarn_unused_configs = true\nwarn_unused_ignores = true\nwarn_unreachable = true\nno_implicit_optional = true\ndisallow_untyped_defs = false\ndisable_error_code = [\"method-assign\", \"annotation-unchecked\"]\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"libqtile.backend.wayland.*\",\n    \"libqtile.backend\",\n    \"libqtile.bar\",\n    \"libqtile.core.*\",\n    \"libqtile.config\",\n    \"libqtile.layout.base\",\n    \"libqtile.log_utils\",\n    \"libqtile.utils\",\n]\ndisallow_untyped_defs = true\n\n[tool.vulture]\npaths = [\"libqtile\"]\nexclude = [\"test/configs/syntaxerr.py\"]\nmin_confidence = 100\n\n[tool.pytest.ini_options]\npython_files = \"test_*.py\"\ntestpaths = [\"test\"]\nfilterwarnings = [\n    \"error:::libqtile\",\n    \"error:::test\",\n    \"ignore:::dbus_next\",\n]\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.0732421875,
          "content": "libcst\ndbus-fast\npsutil\ncoverage\npytest-cov\ntox\npre-commit\nPyGObject\nisort\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0654296875,
          "content": "cairocffi >= 1.6.0\ncffi >= 1.1.0\nxcffib >= 1.4.0\npycairo >= 1.25.1\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.0859375,
          "content": "[options]\npackages = find_namespace:\npython_requires >= 3.10\ninstall_requires =\n  cffi >= 1.1.0\n  cairocffi[xcb] >= 1.6.0\n  xcffib >= 1.4.0\ntests_require =\n  ruff\n  psutil\n  coverage\n\n[options.extras_require]\ndoc =\n  sphinx\n  sphinx_rtd_theme\n  numpydoc\nlint =\n  ruff\n  coverage\ntest =\n  pytest >= 6.2.1\n  libcst >= 1.0.0\n  dbus-fast\n  PyGObject\nipython =\n  ipykernel\n  jupyter_console\nwayland =\n  pywayland>=0.4.17\n  xkbcommon>=0.3\n  # NOTE: When updating the major or minor version of pywlroots here, also update:\n  # tox.ini, docs/manual/install/index.rst, docs/manual/wayland.rst, builder.py\n  pywlroots==0.17.0\nwidgets =\n  dbus-fast\n  imaplib2\n  iwlib\n  keyring\n  mailbox\n  psutil\n  pulsectl\n  pulsectl_asyncio\n  python-mpd2\n  pytz\n  xdg\n  xmltodict\nall =\n  # All user dependencies i.e. excluding dev deps.\n  %(ipython)s\n  %(wayland)s\n  %(widgets)s\n  libcst\n  setproctitle\n\n[options.package_data]\nlibqtile.resources =\n    battery-icons/*.png\n    layout-icons/*.png\n\n[options.packages.find]\nexclude =\n    test*\n\n[build_sphinx]\nsource-dir = docs\nbuild-dir = docs/_build\n\n[check-manifest]\nignore =\n    stubs**\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.181640625,
          "content": "#!/usr/bin/env python3\n\n# Copyright (c) 2008 Aldo Cortesi\n# Copyright (c) 2011 Mounier Florian\n# Copyright (c) 2012 dmpayton\n# Copyright (c) 2014 Sean Vig\n# Copyright (c) 2014 roger\n# Copyright (c) 2014 Pedro Algarvio\n# Copyright (c) 2014-2015 Tycho Andersen\n# Copyright (c) 2023 Matt Colligan\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\nimport importlib\nimport sys\nfrom pathlib import Path\n\nfrom setuptools import setup\n\nROOT = Path(__file__).parent.resolve()\nsys.path.insert(0, ROOT.as_posix())\n\n\ndef can_import(module):\n    try:\n        importlib.import_module(module)\n    except Exception:\n        return False\n    return True\n\n\ndef get_cffi_modules():\n    # Check we have cffi around. If not, none of these will get built.\n    if not can_import(\"cffi.pkgconfig\"):\n        print(\"CFFI package is missing\")\n        return\n\n    cffi_modules = []\n\n    # Wayland backend dependencies\n    if can_import(\"wlroots.ffi_build\"):\n        cffi_modules.append(\"libqtile/backend/wayland/cffi/build.py:ffi\")\n    else:\n        print(\"Failed to find pywlroots. Wayland backend dependencies not built.\")\n\n    return cffi_modules\n\n\nsetup(\n    use_scm_version=True,\n    cffi_modules=get_cffi_modules(),\n    include_package_data=True,\n)\n"
        },
        {
          "name": "stubs",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 3.6484375,
          "content": "[tox]\nskip_missing_interpreters = True\nskipsdist=True\nminversion = 4.0.12\nenvlist =\n    # Python environments with specific backend\n    py{py3,310,311,312,313}-{x11,wayland}\n    docs,\n    packaging-{x11,wayland},\n    # For running pytest locally\n    test-{x11,wayland,both}\n\n# Set up some variables that can be used multiple times\n[base]\ndeps =\n    setuptools >= 40.5.0\n    dbus-fast\n    wheel\n    cffi\n    xcffib >= 1.4.0\n    cairocffi >= 1.7.0\n    # We use \"!x11\" here so pywayland is installed both in CI wayland environment\n    # But also when users run locally (as both backends are run in that scenario)\n    !x11: pywayland==0.4.17\n    !x11: xkbcommon >= 0.3\ntestdeps = \n    pytest >= 6.2.1\n    {wayland,x11}: coverage\n    libcst >= 1.0.0\n    PyGObject   \n    isort\n    mypy\ncommands =\n    # pywayland has to be installed before pywlroots\n    !x11: pip install pywlroots==0.17.0\n    pip install --break-system-packages .\n    !x11: {toxinidir}/scripts/ffibuild\n\n# These are the environments that should be triggered by Github Actions\n[testenv:py{py3,310,311,312,313}-{wayland,x11}]\n# This is required in order to get UTF-8 output inside of the subprocesses\n# that our tests use.\nsetenv = LC_CTYPE = en_US.UTF-8\n# Pass Display down to have it for the tests available\npassenv = DISPLAY,WAYLAND_DISPLAY,LDFLAGS,CFLAGS\nallowlist_externals = \n    */ffibuild\n    convert\ndeps =\n    {[base]deps}\n    {[base]testdeps}\ncommands =\n    {[base]commands}\n\n    # pypy3 is very slow when running coverage reports so we skip it\n    pypy3-x11: python3 -m pytest --backend=x11 {posargs}\n    pypy3-wayland: python3 -m pytest --backend=wayland {posargs}\n    py3{10,11,12,13}-x11: coverage run -m pytest --backend=x11 {posargs}\n    py3{10,11,12,13}-wayland: coverage run -m pytest --backend=wayland {posargs}\n\n    # Coverage is only run via GithubActions\n    # Coverage runs tests in parallel so we need to combine results into a single file\n    !pypy3-{wayland,x11}: coverage combine -q\n    # Include a text summary in the build log\n    !pypy3-{wayland,x11}: coverage report -m\n    # Create an xml summary to be submitted to coveralls.io\n    !pypy3-{wayland,x11}: coverage xml\n\n# Basic environment for local testing\n[testenv:test]\n# This is required in order to get UTF-8 output inside of the subprocesses\n# that our tests use.\nsetenv = LC_CTYPE = en_US.UTF-8\n# Pass Display down to have it for the tests available\npassenv = DISPLAY,WAYLAND_DISPLAY,LDFLAGS,CFLAGS\nallowlist_externals = \n    */ffibuild\n    convert\ndeps =\n    {[base]deps}\n    {[base]testdeps}\ncommands =\n    {[base]commands}\n    python -m pytest {posargs}\n\n# Additional local environments with specified backends\n[testenv:test-{x11,wayland,both}]\n# This is required in order to get UTF-8 output inside of the subprocesses\n# that our tests use.\nsetenv = LC_CTYPE = en_US.UTF-8\n# Pass Display down to have it for the tests available\npassenv = DISPLAY,WAYLAND_DISPLAY,LDFLAGS,CFLAGS\nallowlist_externals = \n    */ffibuild\n    convert\ndeps =\n    {[base]deps}\n    {[base]testdeps}\ncommands =\n    {[base]commands}\n    x11: python -m pytest --backend=x11 {posargs}\n    wayland: python -m pytest --backend=wayland {posargs}\n    both: python -m pytest --backend=wayland --backend=x11 {posargs}\n\n[testenv:packaging-{x11,wayland}]\ndeps =\n    check-manifest\n    twine\n    build\ncommands =\n    check-manifest\n    python3 -m build --sdist .\n    twine check dist/*\n\n[testenv:docs]\ndeps = -r{toxinidir}/docs/requirements.txt\ncommands = \n    pip install -r{toxinidir}/requirements.txt\n    python3 setup.py build_sphinx -W\n\n[gh-actions]\npython =\n    pypy-3.10: pypy3\n    3.10: py310\n    3.11: py311\n    3.12: py312\n    3.13: py313, packaging\n\n[gh-actions:env]\nBACKEND =\n    x11: x11\n    wayland: wayland\n"
        }
      ]
    }
  ]
}