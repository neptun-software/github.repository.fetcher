{
  "metadata": {
    "timestamp": 1736559640891,
    "page": 296,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MongoEngine/mongoengine",
      "stars": 4274,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2216796875,
          "content": "!.gitignore\n*~\n*.py[co]\n.*.sw[po]\n.cache/\n.coverage\n.coveragerc\n.env\n.idea/\n.pytest_cache/\n.tox/\n.eggs/\n*.egg\ndocs/.build\ndocs/_build\nbuild/\ndist/\nmongoengine.egg-info/\nenv/\n.settings\n.project\n.pydevproject\nhtmlcov/\nvenv\nvenv3\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.666015625,
          "content": "fail_fast: false\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.5.0\n    hooks:\n      - id: check-merge-conflict\n      - id: debug-statements\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n  - repo: https://github.com/ambv/black\n    rev: 24.2.0\n    hooks:\n      - id: black\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.0.0\n    hooks:\n      - id: flake8\n        additional_dependencies:\n          - importlib_metadata<5\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.15.1\n    hooks:\n      - id: pyupgrade\n        args: [--py36-plus]\n  - repo: https://github.com/pycqa/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.6005859375,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  install:\n    - requirements: docs/requirements.txt\n    # docs/conf.py is importing mongoengine\n    # so mongoengine needs to be installed as well\n    - method: setuptools\n      path: .\n\n# Specify the build environment\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.9\"\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 8.076171875,
          "content": "The PRIMARY AUTHORS are (and/or have been):\n\nRoss Lawley <ross.lawley@gmail.com>\nHarry Marr <harry@hmarr.com>\nMatt Dennewitz <mattdennewitz@gmail.com>\nDeepak Thukral <iapain@yahoo.com>\nFlorian Schlachter <flori@n-schlachter.de>\nSteve Challis <steve@stevechallis.com>\nWilson Júnior <wilsonpjunior@gmail.com>\nDan Crosta https://github.com/dcrosta\nLaine Herron https://github.com/LaineHerron\n\nCONTRIBUTORS\n\nDerived from the git logs, inevitably incomplete but all of whom and others\nhave submitted patches, reported bugs and generally helped make MongoEngine\nthat much better:\n\n * blackbrrr\n * Florian Schlachter\n * Vincent Driessen\n * Steve Challis\n * flosch\n * Deepak Thukral\n * Colin Howe\n * Wilson Júnior (https://github.com/wpjunior)\n * Alistair Roche\n * Dan Crosta\n * Viktor Kerkez\n * Stephan Jaekel\n * Rached Ben Mustapha\n * Greg Turner\n * Daniel Hasselrot\n * Mircea Pasoi\n * Matt Chisholm\n * James Punteney\n * TimothéePeignier\n * Stuart Rackham\n * Serge Matveenko\n * Matt Dennewitz\n * Don Spaulding\n * Ales Zoulek\n * sshwsfc\n * sib\n * Samuel Clay\n * Nick Vlku\n * martin\n * Flavio Amieiro\n * Анхбаяр Лхагвадорж\n * Zak Johnson\n * Victor Farazdagi\n * vandersonmota\n * Theo Julienne\n * sp\n * Slavi Pantaleev\n * Richard Henry\n * Nicolas Perriault\n * Nick Vlku Jr\n * Michael Henson\n * Leo Honkanen\n * kuno\n * Josh Ourisman\n * Jaime\n * Igor Ivanov\n * Gregg Lind\n * Gareth Lloyd\n * Albert Choi\n * John Arnfield\n * grubberr\n * Paul Aliagas\n * Paul Cunnane\n * Julien Rebetez\n * Marc Tamlyn\n * Karim Allah\n * Adam Parrish\n * jpfarias\n * jonrscott\n * Alice Zoë Bevan-McGregor (https://github.com/amcgregor/)\n * Stephen Young\n * tkloc\n * aid\n * yamaneko1212\n * dave mankoff\n * Alexander G. Morano\n * jwilder\n * Joe Shaw\n * Adam Flynn\n * Ankhbayar\n * Jan Schrewe\n * David Koblas\n * Crittercism\n * Alvin Liang\n * andrewmlevy\n * Chris Faulkner\n * Ashwin Purohit\n * Shalabh Aggarwal\n * Chris Williams\n * Robert Kajic\n * Jacob Peddicord\n * Nils Hasenbanck\n * mostlystatic\n * Greg Banks\n * swashbuckler\n * Adam Reeve\n * Anthony Nemitz\n * deignacio\n * Shaun Duncan\n * Meir Kriheli\n * Andrey Fedoseev\n * aparajita\n * Tristan Escalada\n * Alexander Koshelev\n * Jaime Irurzun\n * Alexandre González\n * Thomas Steinacher\n * Tommi Komulainen\n * Peter Landry\n * biszkoptwielki\n * Anton Kolechkin\n * Sergey Nikitin\n * psychogenic\n * Stefan Wójcik (https://github.com/wojcikstefan)\n * dimonb\n * Garry Polley\n * James Slagle\n * Adrian Scott\n * Peter Teichman\n * Jakub Kot\n * Jorge Bastida\n * Aleksandr Sorokoumov\n * Yohan Graterol\n * bool-dev\n * Russ Weeks\n * Paul Swartz\n * Sundar Raman\n * Benoit Louy\n * Loic Raucy (https://github.com/lraucy)\n * hellysmile\n * Jaepil Jeong\n * Daniil Sharou\n * Pete Campton\n * Martyn Smith\n * Marcelo Anton\n * Aleksey Porfirov (https://github.com/lexqt)\n * Nicolas Trippar\n * Manuel Hermann\n * Gustavo Gawryszewski\n * Max Countryman\n * caitifbrito\n * lcya86 刘春洋\n * Martin Alderete (https://github.com/malderete)\n * Nick Joyce\n * Jared Forsyth\n * Kenneth Falck\n * Lukasz Balcerzak\n * Nicolas Cortot\n * Alex (https://github.com/kelsta)\n * Jin Zhang\n * Daniel Axtens\n * Leo-Naeka\n * Ryan Witt (https://github.com/ryanwitt)\n * Jiequan (https://github.com/Jiequan)\n * hensom (https://github.com/hensom)\n * zhy0216 (https://github.com/zhy0216)\n * istinspring (https://github.com/istinspring)\n * Massimo Santini (https://github.com/mapio)\n * Nigel McNie (https://github.com/nigelmcnie)\n * ygbourhis (https://github.com/ygbourhis)\n * Bob Dickinson (https://github.com/BobDickinson)\n * Michael Bartnett (https://github.com/michaelbartnett)\n * Alon Horev (https://github.com/alonho)\n * Kelvin Hammond (https://github.com/kelvinhammond)\n * Jatin Chopra (https://github.com/jatin)\n * Paul Uithol (https://github.com/PaulUithol)\n * Thom Knowles (https://github.com/fleat)\n * Paul (https://github.com/squamous)\n * Olivier Cortès (https://github.com/Karmak23)\n * crazyzubr (https://github.com/crazyzubr)\n * FrankSomething (https://github.com/FrankSomething)\n * Alexandr Morozov (https://github.com/LK4D4)\n * mishudark (https://github.com/mishudark)\n * Joe Friedl (https://github.com/grampajoe)\n * Daniel Ward (https://github.com/danielward)\n * Aniket Deshpande (https://github.com/anicake)\n * rfkrocktk (https://github.com/rfkrocktk)\n * Gustavo Andrés Angulo (https://github.com/woakas)\n * Dmytro Popovych (https://github.com/drudim)\n * Tom (https://github.com/tomprimozic)\n * j0hnsmith (https://github.com/j0hnsmith)\n * Damien Churchill (https://github.com/damoxc)\n * Jonathan Simon Prates (https://github.com/jonathansp)\n * Thiago Papageorgiou (https://github.com/tmpapageorgiou)\n * Omer Katz (https://github.com/thedrow)\n * Falcon Dai (https://github.com/falcondai)\n * Polyrabbit (https://github.com/polyrabbit)\n * Sagiv Malihi (https://github.com/sagivmalihi)\n * Dmitry Konishchev (https://github.com/KonishchevDmitry)\n * Martyn Smith (https://github.com/martynsmith)\n * Andrei Zbikowski (https://github.com/b1naryth1ef)\n * Ronald van Rij (https://github.com/ronaldvanrij)\n * François Schmidts (https://github.com/jaesivsm)\n * Eric Plumb (https://github.com/professorplumb)\n * Damien Churchill (https://github.com/damoxc)\n * Aleksandr Sorokoumov (https://github.com/Gerrrr)\n * Clay McClure (https://github.com/claymation)\n * Bruno Rocha (https://github.com/rochacbruno)\n * Norberto Leite (https://github.com/nleite)\n * Bob Cribbs (https://github.com/bocribbz)\n * Jay Shirley (https://github.com/jshirley)\n * David Bordeynik (https://github.com/DavidBord)\n * Axel Haustant (https://github.com/noirbizarre)\n * David Czarnecki (https://github.com/czarneckid)\n * Vyacheslav Murashkin (https://github.com/a4tunado)\n * André Ericson https://github.com/aericson)\n * Mikhail Moshnogorsky (https://github.com/mikhailmoshnogorsky)\n * Diego Berrocal (https://github.com/cestdiego)\n * Matthew Ellison (https://github.com/seglberg)\n * Jimmy Shen (https://github.com/jimmyshen)\n * J. Fernando Sánchez (https://github.com/balkian)\n * Michael Chase (https://github.com/rxsegrxup)\n * Eremeev Danil (https://github.com/elephanter)\n * Catstyle Lee (https://github.com/Catstyle)\n * Kiryl Yermakou (https://github.com/rma4ok)\n * Matthieu Rigal (https://github.com/MRigal)\n * Charanpal Dhanjal (https://github.com/charanpald)\n * Emmanuel Leblond (https://github.com/touilleMan)\n * Breeze.Kay (https://github.com/9nix00)\n * Vicki Donchenko (https://github.com/kivistein)\n * Emile Caron (https://github.com/emilecaron)\n * Amit Lichtenberg (https://github.com/amitlicht)\n * Gang Li (https://github.com/iici-gli)\n * Lars Butler (https://github.com/larsbutler)\n * George Macon (https://github.com/gmacon)\n * Ashley Whetter (https://github.com/AWhetter)\n * Paul-Armand Verhaegen (https://github.com/paularmand)\n * Steven Rossiter (https://github.com/BeardedSteve)\n * Luo Peng (https://github.com/RussellLuo)\n * Bryan Bennett (https://github.com/bbenne10)\n * Gilb's Gilb's (https://github.com/gilbsgilbs)\n * Joshua Nedrud (https://github.com/Neurostack)\n * Shu Shen (https://github.com/shushen)\n * xiaost7 (https://github.com/xiaost7)\n * Victor Varvaryuk\n * Stanislav Kaledin (https://github.com/sallyruthstruik)\n * Dmitry Yantsen (https://github.com/mrTable)\n * Renjianxin (https://github.com/Davidrjx)\n * Erdenezul Batmunkh (https://github.com/erdenezul)\n * Andy Yankovsky (https://github.com/werat)\n * Bastien Gérard (https://github.com/bagerard)\n * Trevor Hall (https://github.com/tjhall13)\n * Gleb Voropaev (https://github.com/buggyspace)\n * Paulo Amaral (https://github.com/pauloAmaral)\n * Gaurav Dadhania (https://github.com/GVRV)\n * Yurii Andrieiev (https://github.com/yandrieiev)\n * Filip Kucharczyk (https://github.com/Pacu2)\n * Eric Timmons (https://github.com/daewok)\n * Matthew Simpson (https://github.com/mcsimps2)\n * Leonardo Domingues (https://github.com/leodmgs)\n * Agustin Barto (https://github.com/abarto)\n * Stankiewicz Mateusz (https://github.com/mas15)\n * Felix Schultheiß (https://github.com/felix-smashdocs)\n * Jan Stein (https://github.com/janste63)\n * Timothé Perez (https://github.com/AchilleAsh)\n * oleksandr-l5 (https://github.com/oleksandr-l5)\n * Ido Shraga (https://github.com/idoshr)\n * Terence Honles (https://github.com/terencehonles)\n * Sean Bermejo (https://github.com/seanbermejo)\n * Juan Gutierrez (https://github.com/juannyg)\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 4.216796875,
          "content": "Contributing to MongoEngine\n===========================\n\nMongoEngine has a large `community\n<https://raw.github.com/MongoEngine/mongoengine/master/AUTHORS>`_ and\ncontributions are always encouraged. Contributions can be as simple as\nminor tweaks to the documentation. Please read these guidelines before\nsending a pull request.\n\nBugfixes and New Features\n-------------------------\n\nBefore starting to write code, look for existing `tickets\n<https://github.com/MongoEngine/mongoengine/issues?state=open>`_ or `create one\n<https://github.com/MongoEngine/mongoengine/issues>`_ for your specific\nissue or feature request. That way you avoid working on something\nthat might not be of interest or that has already been addressed. If in doubt\npost to the `user group <http://groups.google.com/group/mongoengine-users>`\n\nSupported Interpreters\n----------------------\n\nMongoEngine supports CPython 3.5 and newer as well as Pypy3.\nLanguage features not supported by all interpreters can not be used.\n\nPython3 codebase\n----------------------\n\nSince 0.20, the codebase is exclusively Python 3.\n\nEarlier versions were exclusively Python2, and were relying on 2to3 to support Python3 installs.\nTravis runs the tests against the main Python 3.x versions.\n\n\nStyle Guide\n-----------\n\nMongoEngine's codebase is auto-formatted with `black <https://github.com/python/black>`_, imports are ordered with `isort <https://pycqa.github.io/isort/>`_\nand other tools like flake8 are also used. Those tools will run as part of the CI and will fail in case the code is not formatted properly.\n\nTo install all development tools, simply run the following commands:\n\n.. code-block:: console\n\n    $ python -m pip install -r requirements-dev.txt\n\n\nYou can install `pre-commit <https://pre-commit.com/>`_ into your git hooks,\nto automatically check and fix any formatting issue before creating a\ngit commit.\n\nTo enable ``pre-commit`` simply run:\n\n.. code-block:: console\n\n    $ pre-commit install\n\nSee the ``.pre-commit-config.yaml`` configuration file for more information\non how it works.\n\npre-commit will now run upon every commit and will reject anything that doesn't comply.\n\nYou can also run all the checks with ``pre-commit run -a``, this is what is used in the CI.\n\nTesting\n-------\n\nAll tests are run on `Travis <http://travis-ci.org/MongoEngine/mongoengine>`_\nand any pull requests are automatically tested. Any pull requests without\ntests will take longer to be integrated and might be refused.\n\nYou may also submit a simple failing test as a pull request if you don't know\nhow to fix it, it will be easier for other people to work on it and it may get\nfixed faster.\n\nGeneral Guidelines\n------------------\n\n- Avoid backward breaking changes if at all possible.\n- If you *have* to introduce a breaking change, make it very clear in your\n  pull request's description. Also, describe how users of this package\n  should adapt to the breaking change in docs/upgrade.rst.\n- Write inline documentation for new classes and methods.\n- Write tests and make sure they pass (make sure you have a mongod\n  running on the default port, then execute ``pytest tests/``\n  from the cmd line to run the test suite).\n- Ensure tests pass on all supported Python, PyMongo, and MongoDB versions.\n  You can test various Python and PyMongo versions locally by executing\n  ``tox``. For different MongoDB versions, you can rely on our automated\n  Travis tests.\n- Add enhancements or problematic bug fixes to docs/changelog.rst.\n- Add yourself to AUTHORS :)\n\nDocumentation\n-------------\n\nTo contribute to the `API documentation\n<http://docs.mongoengine.org/en/latest/apireference.html>`_\njust make your changes to the inline documentation of the appropriate\n`source code <https://github.com/MongoEngine/mongoengine>`_ or `rst file\n<https://github.com/MongoEngine/mongoengine/tree/master/docs>`_ in a\nbranch and submit a `pull request <https://help.github.com/articles/using-pull-requests>`_.\nYou might also use the github `Edit <https://github.com/blog/844-forking-with-the-edit-button>`_\nbutton.\n\nIf you want to test your documentation changes locally, you need to install\nthe ``sphinx`` and ``sphinx_rtd_theme`` packages. Once these are installed,\ngo to the ``docs`` directory, run ``make html`` and inspect the updated docs\nby running ``open _build/html/index.html``.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.103515625,
          "content": "FROM mongo:4.0\n\nCOPY ./entrypoint.sh entrypoint.sh\nRUN chmod u+x entrypoint.sh\nENTRYPOINT ./entrypoint.sh\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0302734375,
          "content": "Copyright (c) 2009 See AUTHORS\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.111328125,
          "content": "include MANIFEST.in\ninclude README.rst\ninclude LICENSE\ninclude AUTHORS\nrecursive-include docs *\nprune docs/_build\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 5.1640625,
          "content": "===========\nMongoEngine\n===========\n:Info: MongoEngine is an ORM-like layer on top of PyMongo.\n:Repository: https://github.com/MongoEngine/mongoengine\n:Author: Harry Marr (http://github.com/hmarr)\n:Maintainer: Bastien Gerard (http://github.com/bagerard)\n\n.. image:: https://travis-ci.org/MongoEngine/mongoengine.svg?branch=master\n  :target: https://travis-ci.org/MongoEngine/mongoengine\n\n.. image:: https://coveralls.io/repos/github/MongoEngine/mongoengine/badge.svg?branch=master\n  :target: https://coveralls.io/github/MongoEngine/mongoengine?branch=master\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n  :target: https://github.com/ambv/black\n\n.. image:: https://pepy.tech/badge/mongoengine/month\n  :target: https://pepy.tech/project/mongoengine\n\n.. image:: https://img.shields.io/pypi/v/mongoengine.svg\n  :target: https://pypi.python.org/pypi/mongoengine\n\n\n.. image:: https://readthedocs.org/projects/mongoengine-odm/badge/?version=latest\n  :target: https://readthedocs.org/projects/mongoengine-odm/builds/\n\nAbout\n=====\nMongoEngine is a Python Object-Document Mapper for working with MongoDB.\nDocumentation is available at https://mongoengine-odm.readthedocs.io - there\nis currently a `tutorial <https://mongoengine-odm.readthedocs.io/tutorial.html>`_,\na `user guide <https://mongoengine-odm.readthedocs.io/guide/index.html>`_, and\nan `API reference <https://mongoengine-odm.readthedocs.io/apireference.html>`_.\n\nSupported MongoDB Versions\n==========================\nMongoEngine is currently tested against MongoDB v3.6, v4.0, v4.4, v5.0, v6.0 and v7.0. Future versions\nshould be supported as well, but aren't actively tested at the moment. Make\nsure to open an issue or submit a pull request if you experience any problems\nwith a more recent MongoDB versions.\n\nInstallation\n============\nWe recommend the use of `virtualenv <https://virtualenv.pypa.io/>`_ and of\n`pip <https://pip.pypa.io/>`_. You can then use ``python -m pip install -U mongoengine``.\nYou may also have `setuptools <http://peak.telecommunity.com/DevCenter/setuptools>`_\nand thus you can use ``easy_install -U mongoengine``. Another option is\n`pipenv <https://docs.pipenv.org/>`_. You can then use ``pipenv install mongoengine``\nto both create the virtual environment and install the package. Otherwise, you can\ndownload the source from `GitHub <https://github.com/MongoEngine/mongoengine>`_ and\nrun ``python setup.py install``.\n\nThe support for Python2 was dropped with MongoEngine 0.20.0\n\nDependencies\n============\nAll of the dependencies can easily be installed via `python -m pip <https://pip.pypa.io/>`_.\nAt the very least, you'll need these two packages to use MongoEngine:\n\n- pymongo>=3.4\n\nIf you utilize a ``DateTimeField``, you might also use a more flexible date parser:\n\n- dateutil>=2.1.0\n\nIf you need to use an ``ImageField`` or ``ImageGridFsProxy``:\n\n- Pillow>=7.0.0\n\nIf you need to use signals:\n\n- blinker>=1.3\n\nExamples\n========\nSome simple examples of what MongoEngine code looks like:\n\n.. code :: python\n\n    from mongoengine import *\n    connect('mydb')\n\n    class BlogPost(Document):\n        title = StringField(required=True, max_length=200)\n        posted = DateTimeField(default=datetime.datetime.utcnow)\n        tags = ListField(StringField(max_length=50))\n        meta = {'allow_inheritance': True}\n\n    class TextPost(BlogPost):\n        content = StringField(required=True)\n\n    class LinkPost(BlogPost):\n        url = StringField(required=True)\n\n    # Create a text-based post\n    >>> post1 = TextPost(title='Using MongoEngine', content='See the tutorial')\n    >>> post1.tags = ['mongodb', 'mongoengine']\n    >>> post1.save()\n\n    # Create a link-based post\n    >>> post2 = LinkPost(title='MongoEngine Docs', url='hmarr.com/mongoengine')\n    >>> post2.tags = ['mongoengine', 'documentation']\n    >>> post2.save()\n\n    # Iterate over all posts using the BlogPost superclass\n    >>> for post in BlogPost.objects:\n    ...     print('===', post.title, '===')\n    ...     if isinstance(post, TextPost):\n    ...         print(post.content)\n    ...     elif isinstance(post, LinkPost):\n    ...         print('Link:', post.url)\n    ...\n\n    # Count all blog posts and its subtypes\n    >>> BlogPost.objects.count()\n    2\n    >>> TextPost.objects.count()\n    1\n    >>> LinkPost.objects.count()\n    1\n\n    # Count tagged posts\n    >>> BlogPost.objects(tags='mongoengine').count()\n    2\n    >>> BlogPost.objects(tags='mongodb').count()\n    1\n\nTests\n=====\nTo run the test suite, ensure you are running a local instance of MongoDB on\nthe standard port and have ``pytest`` installed. Then, run ``pytest tests/``.\n\nTo run the test suite on every supported Python and PyMongo version, you can\nuse ``tox``. You'll need to make sure you have each supported Python version\ninstalled in your environment and then:\n\n.. code-block:: shell\n\n    # Install tox\n    $ python -m pip install tox\n    # Run the test suites\n    $ tox\n\nCommunity\n=========\n- `MongoEngine Users mailing list\n  <http://groups.google.com/group/mongoengine-users>`_\n- `MongoEngine Developers mailing list\n  <http://groups.google.com/group/mongoengine-dev>`_\n\nContributing\n============\nWe welcome contributions! See the `Contribution guidelines <https://github.com/MongoEngine/mongoengine/blob/master/CONTRIBUTING.rst>`_\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.111328125,
          "content": "services:\n  mongoengine:\n    build:\n      context: .\n    image: mongoengine:latest\n    ports:\n      - 27017:27017\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 0.228515625,
          "content": "#!/bin/sh\n\nmongod --replSet mongoengine --fork --logpath=/var/log/mongodb.log\nmongo db --eval \"rs.initiate()\"\nmongod --shutdown\nmongod --replSet mongoengine --bind_ip 0.0.0.0 --setParameter maxTransactionLockRequestTimeoutMillis=1000\n"
        },
        {
          "name": "mongoengine",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.0380859375,
          "content": "pre-commit\nipdb\nipython\ntox\n-e .[test]\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.4501953125,
          "content": "[flake8]\nignore=E501,F403,F405,I201,I202,W504,W605,W503,B007\nexclude=build,dist,docs,venv,venv3,.tox,.eggs,tests\nmax-complexity=47\n\n[tool:pytest]\n# Limits the discovery to tests directory\n# avoids that it runs for instance the benchmark\ntestpaths = tests\n\n[isort]\nknown_first_party = mongoengine,tests\ndefault_section = THIRDPARTY\nmulti_line_output = 3\ninclude_trailing_comma = True\ncombine_as_imports = True\nline_length = 70\nensure_newline_before_comments = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.228515625,
          "content": "import os\n\nfrom setuptools import find_packages, setup\n\nDESCRIPTION = \"MongoEngine is a Python Object-Document Mapper for working with MongoDB.\"\n\ntry:\n    with open(\"README.rst\") as fin:\n        LONG_DESCRIPTION = fin.read()\nexcept Exception:\n    LONG_DESCRIPTION = None\n\n\ndef get_version(version_tuple):\n    \"\"\"Return the version tuple as a string, e.g. for (0, 10, 7),\n    return '0.10.7'.\n    \"\"\"\n    return \".\".join(map(str, version_tuple))\n\n\n# Dirty hack to get version number from monogengine/__init__.py - we can't\n# import it as it depends on PyMongo and PyMongo isn't installed until this\n# file is read\ninit = os.path.join(os.path.dirname(__file__), \"mongoengine\", \"__init__.py\")\nversion_line = list(filter(lambda line: line.startswith(\"VERSION\"), open(init)))[0]\n\nVERSION = get_version(eval(version_line.split(\"=\")[-1]))\n\nCLASSIFIERS = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Database\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\n\ninstall_require = [\"pymongo>=3.4,<5.0\"]\ntests_require = [\n    \"pytest\",\n    \"pytest-cov\",\n    \"coverage\",\n    \"blinker\",\n    \"Pillow>=7.0.0\",\n]\n\nsetup(\n    name=\"mongoengine\",\n    version=VERSION,\n    author=\"Harry Marr\",\n    author_email=\"harry.marr@gmail.com\",\n    maintainer=\"Bastien Gerard\",\n    maintainer_email=\"bast.gerard@gmail.com\",\n    url=\"http://mongoengine.org/\",\n    download_url=\"https://github.com/MongoEngine/mongoengine/tarball/master\",\n    license=\"MIT\",\n    include_package_data=True,\n    description=DESCRIPTION,\n    long_description=LONG_DESCRIPTION,\n    platforms=[\"any\"],\n    classifiers=CLASSIFIERS,\n    python_requires=\">=3.7\",\n    install_requires=install_require,\n    extras_require={\n        \"test\": tests_require,\n    },\n    packages=find_packages(exclude=[\"tests\", \"tests.*\"]),\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.5244140625,
          "content": "[tox]\nenvlist = pypy3-{mg34,mg36,mg39,mg311,mg312,mg4,mg432,mg441,mg462,mg473,mg480,mg49}\nskipsdist = True\n\n[testenv]\ncommands =\n    pytest tests/ {posargs}\ndeps =\n    -rrequirements-dev.txt\n    mg311: pymongo>=3.11,<3.12\n    mg312: pymongo>=3.12,<3.13\n    mg313: pymongo>=3.13,<3.14\n    mg4: pymongo>=4.0,<4.1\n    mg433: pymongo>=4.3,<4.4\n    mg441: pymongo>=4.4,<4.5\n    mg462: pymongo>=4.6,<4.7\n    mg473: pymongo>=4.7,<4.8\n    mg480: pymongo>=4.8,<4.9\n    mg49: pymongo>=4.9,<5.0\nsetenv =\n    PYTHON_EGG_CACHE = {envdir}/python-eggs\n"
        }
      ]
    }
  ]
}