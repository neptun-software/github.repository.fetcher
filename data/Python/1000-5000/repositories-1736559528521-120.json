{
  "metadata": {
    "timestamp": 1736559528521,
    "page": 120,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LyleMi/Learn-Web-Hacking",
      "stars": 4689,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0205078125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.4013671875,
          "content": "CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific\nworks (\"Commons\") that the public can reliably and without fear of later\nclaims of infringement build upon, modify, incorporate in other works, reuse\nand redistribute as freely as possible in any form whatsoever and for any\npurposes, including without limitation commercial purposes. These owners may\ncontribute to the Commons to promote the ideal of a free culture and the\nfurther production of creative, cultural and scientific works, or to gain\nreputation or greater distribution for their Work in part through the use and\nefforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation\nof additional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work\nand publicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited\nto, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display, communicate,\n  and translate a Work;\n\n  ii. moral rights retained by the original author(s) and/or performer(s);\n\n  iii. publicity and privacy rights pertaining to a person's image or likeness\n  depicted in a Work;\n\n  iv. rights protecting against unfair competition in regards to a Work,\n  subject to the limitations in paragraph 4(a), below;\n\n  v. rights protecting the extraction, dissemination, use and reuse of data in\n  a Work;\n\n  vi. database rights (such as those arising under Directive 96/9/EC of the\n  European Parliament and of the Council of 11 March 1996 on the legal\n  protection of databases, and under any national implementation thereof,\n  including any amended or successor version of such directive); and\n\n  vii. other similar, equivalent or corresponding rights throughout the world\n  based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free,\nnon transferable, non sublicensable, non exclusive, irrevocable and\nunconditional license to exercise Affirmer's Copyright and Related Rights in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\"). The License shall be deemed effective as\nof the date CC0 was applied by Affirmer to the Work. Should any part of the\nLicense for any reason be judged legally invalid or ineffective under\napplicable law, such partial invalidity or ineffectiveness shall not\ninvalidate the remainder of the License, and in such case Affirmer hereby\naffirms that he or she will not (i) exercise any of his or her remaining\nCopyright and Related Rights in the Work or (ii) assert any associated claims\nand causes of action with respect to the Work, in either case contrary to\nAffirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n  a. No trademark or patent rights held by Affirmer are waived, abandoned,\n  surrendered, licensed or otherwise affected by this document.\n\n  b. Affirmer offers the Work as-is and makes no representations or warranties\n  of any kind concerning the Work, express, implied, statutory or otherwise,\n  including without limitation warranties of title, merchantability, fitness\n  for a particular purpose, non infringement, or the absence of latent or\n  other defects, accuracy, or the present or absence of errors, whether or not\n  discoverable, all to the greatest extent permissible under applicable law.\n\n  c. Affirmer disclaims responsibility for clearing rights of other persons\n  that may apply to the Work or any use thereof, including without limitation\n  any person's Copyright and Related Rights in the Work. Further, Affirmer\n  disclaims responsibility for obtaining any necessary consents, permissions\n  or other rights required for any use of the Work.\n\n  d. Affirmer understands and acknowledges that Creative Commons is not a\n  party to this document and has no duty or obligation with respect to this\n  CC0 or use of the Work.\n\nFor more information, please see\n<http://creativecommons.org/publicdomain/zero/1.0/>\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.59375,
          "content": "# Minimal makefile for Sphinx documentation\n#\n\n# You can set these variables from the command line.\nSPHINXOPTS    =\nSPHINXBUILD   = python -msphinx\nSPHINXPROJ    = pdoc\nSOURCEDIR     = source\nBUILDDIR      = build\n\n# Put it first so that \"make\" without argument is like \"make help\".\nhelp:\n\t@$(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n\n.PHONY: help Makefile\n\n# Catch-all target: route all unknown targets to Sphinx using the new\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n%: Makefile\n\t@$(SPHINXBUILD) -M $@ \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 9.970703125,
          "content": "# Web Hacking Study Notes\n\n![](https://img.shields.io/github/stars/lylemi/learn-web-hacking.svg)\n![](https://img.shields.io/github/forks/lylemi/learn-web-hacking.svg)\n![](https://img.shields.io/github/issues/lylemi/learn-web-hacking.svg)\n![](https://img.shields.io/github/license/lylemi/learn-web-hacking.svg)\n\n[中文版 README](https://github.com/LyleMi/Learn-Web-Hacking/blob/master/README.md) \n\n[Link to notes](https://websec.readthedocs.io)\n\n# About\n---\nUpon diving into the vast ocean of knowledge about cybersecurity, I realized that many topics and concepts often are scattered and unorganized. Learning becomes unnecessarily difficult without a well-laid-out structure or guide. Thus after grasping the basics, attempted to gather concepts, record them and eventually lead to the creation of this note. The hope is that it can assist those who are planning to learn web hacking.\n\nBefore starting, the question of \"what is web hacking?\" needs to be answered. Frankly speaking, web hacking consists of a series of content, including topics such as websites, web applications, web services, and numerous more. In other words, web hacking focuses on the security of applications and the interactive level. The necessary knowledge of web hacking includes network protocols, properties of networking applications, their security risks, and the usage of various applications. These categories can be complicated, therefore try the following logic to disassemble and reorganize relevant contents for ease of understanding.\n\nTo better understand why the field of web security is the way it is now, and what direction each study is headed, it is necessary to understand the history of the development and evolution of web application and network attack and defense technologies. This is also the first part of the notes, focusing around the development and evolution of web technologies, and the basics of the security field.\n\nThe second part of this note introduces some of the basics of computer networks. Considering that there are many branches of databases, web servers, and the rapidly evolution of the field, only network protocols will be covered. The skipped part regarding network applications should be understood with the accompany of various programming languages, web application frameworks, network services and operating system features.\n\nWith some foundation, the focus shifts to some more detailed content on attack and defense, such as the study of vulnerability types, programming languages, characteristics of applications and their corresponding security issues. This is the third part of notes. A brief description is provided on information gathering, commonly seen web vulnerabitlites, languages and frameworks and techiniques on intranet penetration testing. Meanwhile there is also an importance in cloud technology as it becomes an important part of the web world. Whether it is using public cloud to build light services, private cloud. Technologies such as containers are becoming more and more important \n\nThe fourth part returns to the defensive perspective, describing the construction of a security team, threat intelligence and risk control perspectives, as well as some description of more detailed technical content such as honeypots and traceability.\n\nThe last portion focuses on the introduction and usage of applications. Included is a list of recommendation for applications and resources, and some contents that are currently unclassified.\n\nThe above is the overall summerization of the content, but order is not mandatory. The topic can be from anywhere and start from anywhere of interest. This complilation can be used both as a whole and as a handbook.\n\nSince the author is also studying, mistakes or incompleteness are inevitable in the process of organizing notes. Errors will fixed and information added in a timely fashion. If there exists any mistakes, readers are welcomed to criticize and correct them through [Issue](https://github.com/LyleMi/Learn-Web-Hacking/issues/new) or [PR](https://github.com/LyleMi/Learn-Web-Hacking/pulls). Help is much appreciated.\n\nA lot of sources were used as reference in the making of these notes, all of which are left with the corresponding links at the end of the article. Many thanks to the authors for sharing these articles. Online versions of this notes can be viewed [here](https://websec.readthedocs.io)\n\nIt is important to note that only this Readme is translated at the moment. Readers can use the translated [table of contents](#table-of-contents) as reference in finding specific topics and read the notes with the help of an translator.\n\n# table of contents\n---\n1. Prologue (序章)\n    1. Evolution of networking technology (Web技术演化)\n    2. Evolution of offensive and defensive networking technology (网络攻防技术演化)\n    3. Network Security perspective (安全观) \n    4. Laws and regulations (法律与法观）\n2. Computer networks and networking protocols (计算机网络与协议)\n    1. networking fundamentals (网络基础)\n    2. UDP protocol (UDP协议)\n    3. TCP protocol (TCP协议)\n    4. DHCP protocol (DHCP协义）\n    5. Routing algorithms (路由算法)\n    6. Domain name system (域名系统)\n    7. HTTP protocol (HTTP协议簇)\n    8. Simple Mail transfer protocol (邮件协议族)\n    9. SSL/TLS\n    10. IPsec\n    11. Wi-Fi\n3. information collection (信息收集)\n    1. Network architecture (网络整体架构)\n    2. Domain (域名信息)\n    3. Ports （端口信息）\n    4. Website (站点信息)\n    5. Search engine usage (搜索引擎利用)\n    6. Social engineering (社会工程学)\n    7. Reference Links (参考链接)\n4. Common vulnerability offensive and defensive techiniques (常见漏洞攻防）\n    1. SQL injection (SQL注入)\n    2. XSS\n    3. CSRF\n    4. SSRF\n    5. Command injection (命令注入)\n    6. directory traversal (目录穿越)\n    7. File Reading (文件读取)\n    8. File upload (文件上传)\n    9. File contained (文件包含)\n    10. XXE\n    11. Template injection (模版注入)\n    12. Xpath injection (Xpath注入)\n    13. Logic/buiness vulnerability (逻辑漏洞 / 业务漏洞()\n    14. hardware safety (配置安全)\n    15. middleware (中间件)\n    16. Web cache deception (Web Cache欺骗攻击)\n    17. HTTP request smuggling (HTTP 请求走私)\n5. Language and framework (语言与框架)\n    1. PHP\n    2. Python\n    3. Java\n    4. JavaScript\n    5. Golang\n    6. Ruby\n    7. ASP\n    8. PowerShell\n    9. Shell\n    10. Csharp\n6. intranet penetration (内网渗透)\n    1. windows intranet penetration (Windows内网渗透)\n    2. linus intranet penetration (Linux内网渗透)\n    3. Backdoor technology 后门技术\n    4. General techiniques (综合技巧)\n    5. reference links (参考链接)\n7. Cloud security (云安全)\n    1. Container properties (容器标准)\n    2. Docker\n    3. reference links (参考链接)\n8. Defence techiniques (防御技术)\n    1. Team building (团队建设)\n    2. Red/Blue teaming (红蓝对抗)\n    3. Security development (安全开发)\n    4. Security construction (安全建设)\n    5. Threat intelligence (威胁情报)\n    6. ATT&CK\n    7. Risk control (风险控制)\n    8. Defensive framework (防御框架)\n    9. Reinforcement inspection (加固检查)\n    10. Intrusion Detection (入侵检测)\n    11. Zero-trust security (零信任安全)\n    12. Honeypot technology (蜜罐技术)\n    13. RASP\n    14. Emergency Response (应急响应)\n    15. Traceability Analysis (溯源分析_\n9. Authentication mechanism (认证机制)\n    1. Multi-factor authentication (多因子认证)\n    2. SSO\n    3. JWT\n    4. OAuth\n    5. SAML\n    6. SCRAM\n    7. Windows\n    8. Kerberos\n    9. NT LAN Manager (NTLM 身份验证)\n10. Tools & Resources (工具与资源)\n    1. Recommanded Resources (推荐资源)\n    2. Relevant articles (相关论文)\n    3. information collection (信息收集)\n    4. Social engineering (社会工程学)\n    5. Fuzzing (模糊测试)\n    6. Vulnerability exploitation/testing (漏洞利用/测试)\n    7. local infiltration (近源渗透)\n    8. Web persistence (Web持久化)\n    9. Lateral movement (横向移动)\n    10. Cloud security (云安全)\n    11. Operating system persistence (操作系统持久化)\n    12. audit tools (审计工具)\n    13. defence (防御)\n    14. Security development (安全开发)\n    15. Operation and maintenance (运维)\n    16. Forensic (取证)\n    17. Others (其他)\n11. Handbook quicksearch (手册速查)\n    1. Blasting tools (爆破工具)\n    2. download tools (下载工具)\n    3. Flow related (流量相关)\n    4. sniffing tools (嗅探工具)\n    5. SQLMap Usage (SQLMap使用)\n12. Other (其他)\n    1. Code audit (代码审计)\n    2. WAF\n    3. Common Networking Devices (常见网络设备)\n    4. Fingerprints (指纹)\n    5. Unicode\n    6. JSON\n    7. Denial of Service Attacks (拒绝服务攻击)\n    8. Email Security (邮件安全)\n    9. APT\n    10. Supply Chain Security (供应链安全)\n    11. local infiltration (近源渗透)\n    12. Commonly used Jargons (常见术语)\n\n### local editing \n---\n```bash\ngit clone https://github.com/LyleMi/Learn-Web-Hacking.git\ncd Learn-Web-Hacking\npip install sphinx sphinx-rtd-theme\nmake html\n```\n### Contributions\n---\n\nQuestions and suggestions are welcomed through Issue or PR, much appreciated.\n\nThanks to all who [contributed](https://github.com/LyleMi/Learn-Web-Hacking/graphs/contributors).\n\n### License\n---\n\nPublished through license CC0 1.0, click [here](https://github.com/LyleMi/Learn-Web-Hacking/blob/master/LICENSE) to view\n\n### note\n---\n\nThe content of notes is collected and organized from open source information, and the technologies mentioned are for learning, authorized testing and other legal scenarios only. For public safety reasons, some of the content is not included. Readers are requested to comply with the legal provisions of the [Network Security Law of the People's Republic of China](http://www.npc.gov.cn/npc/xinwen/2016-11/07/content_2001605.htm), the Regulations of the People's Republic of China on Computer Software Protection, etc. and not to non-authorized targets for any kind of testing.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1650390625,
          "content": "# Web安全学习笔记\n\n![](https://img.shields.io/github/stars/lylemi/learn-web-hacking.svg)\n![](https://img.shields.io/github/forks/lylemi/learn-web-hacking.svg)\n![](https://img.shields.io/github/issues/lylemi/learn-web-hacking.svg)\n![](https://img.shields.io/github/license/lylemi/learn-web-hacking.svg)\n\n[README (English version)](https://github.com/LyleMi/Learn-Web-Hacking/blob/master/README.en.md)\n\n[笔记链接](https://websec.readthedocs.io)\n\n### 序\n---\n\n笔者在学习Web安全的过程中，深切地感受到相关的知识浩如烟海，而且很大一部分知识点都相对零散，如果没有相对清晰的脉络作为参考，会给学习带来一些不必要的负担。因此，在对Web安全有了浅薄的了解之后，尝试把一些知识、想法整理记录下来，最后形成了这份笔记，希望能够为正在入门的网络安全爱好者提供一定的帮助。\n\n在开始在前，需要明确的一个问题是，Web安全是什么。比较直白的一个定义是，Web安全是包括网站、网络应用、网络服务在内的一系列安全内容，或者说，Web安全关注的是应用层的安全，尤其是细化到与网络相关内容的安全。Web安全需要学习的内容主要包括网络协议本身、网络应用的特性与对应的安全问题、各种工具的使用。实际上这几块内容是相当琐碎且庞杂的，尝试以下面的逻辑对相关内容进行拆解和再组织。\n\n以史为鉴，可以知兴替，最先需要了解的应该是领域的发展史。要更好的理解为什么现在的Web安全领域是这样的，各个研究又是朝什么方向而发展，就需要对Web应用技术与网络攻防技术的发展与演进历史有所了解。这也是笔记的第一部分，围绕Web技术的发展与演化、安全领域的基本常识进行了说明。\n\n在对Web安全发展史有大概了解之后可以开始对计算机网络的基础知识进行学习，这是本文的第二部分，对计算机网络的部分基础知识做了介绍。考虑到网络数据库、Web服务器等技术分支较多、演进较快，本文仅仅对网络协议进行了介绍而略过了网络应用的部分，实际上应该对各种编程语言、Web应用框架、网络服务、操作系统特性有所了解。\n\n有一定基础之后可以关注一些更细化的攻防内容，比如某个漏洞类型的研究、某种语言、应用的特性与其对应的安全问题，这是本文的第三部分。这部分按照常见的渗透测试的顺序，对信息收集、常见的Web漏洞、常见语言与框架、内网渗透的技巧等进行了简单的讲述，开始学习渗透测试之后通常会接触到这部分内容。\n同时，由于云逐渐成为Web世界的重要部分。无论是使用公有云搭建轻型服务、私有云。容器等技术变得越来越重要。\n\n第四部分回到防御的视角，从安全团队的建设、威胁情报与风控等视角进行了描述，也对蜜罐、溯源等较为细节的技术内容作了一定说明。\n\n最后是更具体的应用，以工具的介绍与使用为主，文中的这一部分推荐了一些工具与资源列表，也归档了一部分暂时没有分类的内容。\n\n以上是整体的组织内容，实际上在学习的时候也可以从某一个点切入，螺旋式学习。既可以作为一个整体，也可以作为一本手册。\n\n笔者所学浅薄、精力有限，在整理笔记的过程中难免存在一些错误或是不完整的部分，正在逐步修正和补充。如果存在疏漏、错误，欢迎各位读者以[Issue](https://github.com/LyleMi/Learn-Web-Hacking/issues/new)或者[PR](https://github.com/LyleMi/Learn-Web-Hacking/pulls)的方式批评指正，感激不尽。\n\n在编写笔记的过程中参考、摘抄了很多资料，都在文末留下了相应的链接，十分感谢文章作者的分享。其中笔记的在线版本可以点击[这里](https://websec.readthedocs.io)查看。\n\n### 笔记大纲\n---\n\n1. 序章\n    1. Web技术演化\n    2. 网络攻防技术演化\n    3. 安全观\n2. 计算机网络与协议\n    1. 网络基础\n    2. UDP协议\n    3. TCP协议\n    4. DHCP协议\n    5. 路由算法\n    6. 域名系统\n    7. HTTP标准\n    8. 邮件协议族\n    9. SSL/TLS\n    10. IPsec\n    11. Wi-Fi\n3. 信息收集\n    1. 网络整体架构\n    2. 域名信息\n    3. 端口信息\n    4. 站点信息\n    5. 搜索引擎利用\n    6. 社会工程学\n    7. 参考链接\n4. 常见漏洞攻防\n    1. SQL注入\n    2. XSS\n    3. CSRF\n    4. SSRF\n    5. 命令注入\n    6. 目录穿越\n    7. 文件读取\n    8. 文件上传\n    9. 文件包含\n    10. XXE\n    11. 模版注入\n    12. Xpath注入\n    13. 逻辑漏洞 / 业务漏洞\n    14. 配置安全\n    15. 中间件\n    16. Web Cache欺骗攻击\n    17. HTTP 请求走私\n5. 语言与框架\n    1. PHP\n    2. Python\n    3. Java\n    4. JavaScript\n    5. Golang\n    6. Ruby\n    7. ASP\n    8. PowerShell\n    9. Shell\n    10. Csharp\n6. 内网渗透\n    1. Windows内网渗透\n    2. Linux内网渗透\n    3. 后门技术\n    4. 综合技巧\n    5. 参考链接\n7. 云安全\n    1. 容器标准\n    2. Docker\n    3. 参考链接\n8. 防御技术\n    1. 团队建设\n    2. 红蓝对抗\n    3. 安全开发\n    4. 安全建设\n    5. 威胁情报\n    6. ATT&CK\n    7. 风险控制\n    8. 防御框架\n    9. 加固检查\n    10. 入侵检测\n    11. 零信任安全\n    12. 蜜罐技术\n    13. RASP\n    14. 应急响应\n    15. 溯源分析\n9. 认证机制\n    1. 多因子认证\n    2. SSO\n    3. JWT\n    4. OAuth\n    5. SAML\n    6. SCRAM\n    7. Windows\n    8. Kerberos\n    9. NTLM 身份验证\n10. 工具与资源\n    1. 推荐资源\n    2. 相关论文\n    3. 信息收集\n    4. 社会工程学\n    5. 模糊测试\n    6. 漏洞利用/测试\n    7. 近源渗透\n    8. Web持久化\n    9. 横向移动\n    10. 云安全\n    11. 操作系统持久化\n    12. 审计工具\n    13. 防御\n    14. 安全开发\n    15. 运维\n    16. 取证\n    17. 其他\n11. 手册速查\n    1. 爆破工具\n    2. 下载工具\n    3. 流量相关\n    4. 嗅探工具\n    5. SQLMap使用\n12. 其他\n    1. 代码审计\n    2. WAF\n    3. 常见网络设备\n    4. 指纹\n    5. Unicode\n    6. JSON\n    7. 拒绝服务攻击\n    8. 邮件安全\n    9. APT\n    10. 供应链安全\n    11. 近源渗透\n    12. 常见术语\n\n### 本地编译\n---\n\n```bash\ngit clone https://github.com/LyleMi/Learn-Web-Hacking.git\ncd Learn-Web-Hacking\npip install sphinx sphinx-rtd-theme\nmake html\n```\n\n### 贡献\n---\n\n如果有任何的问题、意见或者建议欢迎以Issue或PR的形式提出，不胜感激。\n\n感谢所有的[贡献者](https://github.com/LyleMi/Learn-Web-Hacking/graphs/contributors)。\n\n### License\n---\n\n项目以CC0 1.0许可证发布，可以点击[这里](https://github.com/LyleMi/Learn-Web-Hacking/blob/master/LICENSE)浏览全文。\n\n### 注\n---\n\n笔记内容搜集整理自开源信息，提及的技术仅供学习、授权测试等合法场景中。出于公共安全考虑，未收录部分内容，请读者遵守《[中华人民共和国网络安全法](http://www.npc.gov.cn/npc/xinwen/2016-11/07/content_2001605.htm)》、《中华人民共和国计算机软件保护条例》等法律规定，勿对非授权目标进行任何形式的测试。\n"
        },
        {
          "name": "make.bat",
          "type": "blob",
          "size": 0.76171875,
          "content": "@ECHO OFF\r\n\r\npushd %~dp0\r\n\r\nREM Command file for Sphinx documentation\r\n\r\nif \"%SPHINXBUILD%\" == \"\" (\r\n\tset SPHINXBUILD=python -msphinx\r\n)\r\nset SOURCEDIR=source\r\nset BUILDDIR=build\r\nset SPHINXPROJ=pdoc\r\n\r\nif \"%1\" == \"\" goto help\r\n\r\nif errorlevel 9009 (\r\n\techo.\r\n\techo.The Sphinx module was not found. Make sure you have Sphinx installed,\r\n\techo.then set the SPHINXBUILD environment variable to point to the full\r\n\techo.path of the 'sphinx-build' executable. Alternatively you may add the\r\n\techo.Sphinx directory to PATH.\r\n\techo.\r\n\techo.If you don't have Sphinx installed, grab it from\r\n\techo.http://sphinx-doc.org/\r\n\texit /b 1\r\n)\r\n\r\n%SPHINXBUILD% -M %1 %SOURCEDIR% %BUILDDIR% %SPHINXOPTS%\r\ngoto end\r\n\r\n:help\r\n%SPHINXBUILD% -M help %SOURCEDIR% %BUILDDIR% %SPHINXOPTS%\r\n\r\n:end\r\npopd\r\n"
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}