{
  "metadata": {
    "timestamp": 1736560420764,
    "page": 985,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SublimeText-Markdown/MarkdownEditing",
      "stars": 3204,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0224609375,
          "content": "[run]\nomit = */tests/*\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4833984375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n# Markdown\n\n[*.md]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = false\n\n# JSON\n\n[*.json]\nindent_style = tab\nindent_size = 4\n\n[*.sublime-*]\nindent_style = tab\nindent_size = 4\n\n# XML\n\n[*.tmPreferences]\nindent_style = tab\nindent_size = 4\n\n# YAML\n\n[*.sublime-syntax]\nindent_style = space\nindent_size = 2\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.15234375,
          "content": "[flake8]\nexclude = .*/,tests/,plugin.py,**/__init__.py\nignore = C901,E203,E266,E501,W503\nmax-complexity = 25\nmax-line-length = 100\nselect = B,C,E,F,W,T4,B9\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.458984375,
          "content": "# Skip the following content from *.sublime-package files\n\n# Git & Github\n.github/            export-ignore\n.gitattributes      export-ignore\n.gitignore          export-ignore\n\n# Documentation\ndocs/\t\t\t\texport-ignore\nsamples/\t\t\texport-ignore\nCONTRIBUTING.md     export-ignore\nmcdocs.yml\t\t\texport-ignore\n\n# Unittests\ntests/              export-ignore\nmake.cmd \t\t\texport-ignore\n\n# Settings\n.editorconfig\t\texport-ignore\n.flake8\t\t\t\texport-ignore\npyproject.toml\t\texport-ignore"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1552734375,
          "content": "# python cache files\n__pycache__/\n.mypy_cache/\n.pytest_cache/\n.tox/\n.venv/\n*.pyc\n\n# other folders\n/site\n/_warehouse\n\n# files\n*.cache\nMarkdownEditing.taskpaper\n"
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.0029296875,
          "content": "3.8"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.6103515625,
          "content": "# Contributing\n\n## Where to Begin\n\nDevelopment is proceeding in development branches for compatible ST builds:\n\n| develop branch  | target branch | ST builds\n| ---             | ---           | ---\n| st3-develop     | ST3176        | 3176 - 4106\n| st4-develop     | master        | 4107...\n\n> **Note**\n>\n> Currently main difference between ST3 and ST4 branches\n> is syntax definition using `version: 2` in ST4.\n\nCommon improvements for ST3 and ST4 should be based on and merged into `st3-develop`.\nIt is frequently merged into `st4-develop`, if required.\n\nOnly changes, which require ST4, are based on and merged directly into `st4-develop`.\n\nNew releases will be created, if enough or critical fixes are available.\n\nRelease version number will be determined based on amount and kind of changes.\n\n## General Guidelines\n\n* Code formatting:\n    - __Indentation__: 4 spaces\n    - __Line endings__: `\\n`\n\n* If your contribution deserves a place in `README.md`, please do so. \n  Preferably in the same commit with your modifications.\n\n  Consider updating \n\n* We create __changelog__ files for Package Manager updates. \n  They are under `messages/` directory.\n\n    If your contribution deserves a place under one of \n    the \"Bug Fixes\", \"New Features\", \"Changes\" titles, \n    please do so. \n    Preferably in the same commit with your modifications.\n\n    Changelog is created in `messages/next.md`.\n    It will be renamed to match release version number\n    as part of the release workflow.\n\n* If you are defining a new __key binding__, \n  please define for all the 3 OSs in their own `.sublime-keymap` files. \n  You have to insert your edits into the exactly same place in the 3 files.\n\n* Setting keys are added to one of the `.sublime-settings` files,\n  using `mde.` prefix and a description comment.\n\n* For testing your changes, you can use the test files under `tests/`. \n  You can extend those files to add new tests and edge cases.\n\n## Publishing to Package Control\n\n> **Note**\n>\n> For push-access users, only!\n\nFor each target:\n\n1. check and update changelog.\n2. determine version number.\n3. rename changelog `messages/next.md` to `messages/<version>.md`\n4. add a corresponding entry in `messages.json`\n5. merge development branch into target branch (e.g.: `st3-develop` => `st3176`)\n6. create and push a tag in form `<build>-<version>` (e.g. `3176-2.3.4`)\n\nThe update process may take __up to an hour__ \ndepending on the crawl frequency by the Package Control.\n\n## Contributing to themes\n\nHere are the used scopes under 3 different markdown flavors.\nIf you are not sure about how the scopes are used, \ncheckout .sublime-syntax files or ask in issues.\n__Unique__ scopes are marked as bold.\n\n### ScopeName: text.html.markdown\n\n* constant.character.escape.markdown\n* constant.other.reference.link.markdown\n* invalid.illegal.whitespace.markdown\n* markup.bold.markdown\n* markup.bold_italic.markdown\n* markup.heading.1.markdown\n* markup.heading.2.markdown\n* markup.heading.markdown\n* markup.italic.markdown\n* markup.list.numbered.markdown\n* markup.list.unnumbered.markdown\n* markup.quote.markdown\n* markup.raw.block.markdown\n* markup.raw.inline.content.markdown\n* markup.raw.inline.markdown\n* markup.underline.link.image.markdown\n* markup.underline.link.markdown\n* meta.block-level.markdown\n* meta.disable-markdown\n* meta.dummy.line-break\n* meta.image.inline.markdown\n* meta.image.reference.markdown\n* meta.link.email.lt-gt.markdown\n* meta.link.inet.markdown\n* meta.link.inline.markdown\n* meta.link.reference.def.markdown\n* meta.link.reference.literal.markdown\n* meta.link.reference.markdown\n* meta.other.valid-ampersand.markdown\n* meta.other.valid-bracket.markdown\n* meta.paragraph.list.markdown\n* meta.paragraph.markdown\n* meta.separator.markdown\n* punctuation.definition.blockquote.markdown\n* punctuation.definition.bold.markdown\n* punctuation.definition.constant.begin.markdown\n* punctuation.definition.constant.end.markdown\n* punctuation.definition.constant.markdown\n* punctuation.definition.heading.markdown\n* punctuation.definition.italic.markdown\n* punctuation.definition.link.markdown\n* punctuation.definition.list_item.markdown\n* __punctuation.definition.list_item.number.markdown__\n* punctuation.definition.metadata.markdown\n* punctuation.definition.raw.markdown\n* punctuation.definition.string.begin.markdown\n* punctuation.definition.string.end.markdown\n* punctuation.definition.string.markdown\n* punctuation.separator.key-value.markdown\n\n### ScopeName: text.html.markdown.gfm\n\n* constant.character.escape.markdown\n* constant.other.reference.link.markdown\n* __entity.name.tag.other.html__\n* invalid.illegal.whitespace.markdown\n* markup.bold.markdown\n* markup.bold_italic.markdown\n* markup.heading.1.markdown\n* markup.heading.2.markdown\n* markup.heading.markdown\n* markup.italic.markdown\n* __markup.kbd.content.markdown__\n* __markup.kbd.markdown__\n* markup.list.numbered.markdown\n* markup.list.unnumbered.markdown\n* markup.quote.markdown\n* __markup.raw.block.fenced.markdown__\n* markup.raw.block.markdown\n* markup.raw.inline.content.markdown\n* markup.raw.inline.markdown\n* __markup.strikethrough.markdown__\n* markup.underline.link.image.markdown\n* markup.underline.link.markdown\n* meta.block-level.markdown\n* meta.disable-markdown\n* meta.dummy.line-break\n* meta.image.inline.markdown\n* meta.image.reference.markdown\n* meta.link.email.lt-gt.markdown\n* meta.link.inet.markdown\n* meta.link.inline.markdown\n* meta.link.reference.def.markdown\n* meta.link.reference.literal.markdown\n* meta.link.reference.markdown\n* meta.other.valid-ampersand.markdown\n* meta.other.valid-bracket.markdown\n* meta.paragraph.list.markdown\n* meta.paragraph.markdown\n* meta.separator.markdown\n* __meta.tag.other.html__\n* punctuation.definition.blockquote.markdown\n* punctuation.definition.bold.markdown\n* punctuation.definition.constant.begin.markdown\n* punctuation.definition.constant.end.markdown\n* punctuation.definition.constant.markdown\n* punctuation.definition.heading.markdown\n* punctuation.definition.italic.markdown\n* punctuation.definition.link.markdown\n* punctuation.definition.list_item.markdown\n* punctuation.definition.metadata.markdown\n* punctuation.definition.raw.markdown\n* __punctuation.definition.strikethrough.markdown__\n* punctuation.definition.string.begin.markdown\n* punctuation.definition.string.end.markdown\n* punctuation.definition.string.markdown\n* __punctuation.definition.tag.begin.html__\n* __punctuation.definition.tag.end.html__\n* punctuation.separator.key-value.markdown\n\n### ScopeName: text.html.markdown.multimarkdown\n\n* &lt;All scopes under text.html.markdown.gfm&gt;\n* __keyword.other.multimarkdown__\n* __punctuation.separator.key-value.multimarkdown__\n* __meta.header.multimarkdown__\n* __string.unquoted.multimarkdown__\n* __meta.content.multimarkdown__"
        },
        {
          "name": "Context.sublime-menu",
          "type": "blob",
          "size": 1.001953125,
          "content": "[\n\t{\n\t\t\"caption\": \"MarkdownEditing\",\n\t\t\"id\": \"markdownediting\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"caption\": \"-\",\n\t\t\t\t\"id\": \"folding\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Fold Section\",\n\t\t\t\t\"command\": \"mde_fold_section\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Unfold Section\",\n\t\t\t\t\"command\": \"mde_unfold_section\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"-\",\n\t\t\t\t\"id\": \"references\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Jump Reference\",\n\t\t\t\t\"command\": \"mde_reference_jump_context\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Convert inline link to reference\",\n\t\t\t\t\"command\": \"mde_convert_inline_link_to_reference\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"-\",\n\t\t\t\t\"id\": \"wiki\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Open wiki page\",\n\t\t\t\t\"command\": \"mde_open_page\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Open home wiki page\",\n\t\t\t\t\"command\": \"mde_open_home_page\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Open todays journal page\",\n\t\t\t\t\"command\": \"mde_open_journal\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"Make wiki page reference\",\n\t\t\t\t\"command\": \"mde_make_page_reference\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"caption\": \"List back links\",\n\t\t\t\t\"command\": \"mde_list_back_links\"\n\t\t\t}\n\t\t]\n\t}\n]\n"
        },
        {
          "name": "Default (Linux).sublime-keymap",
          "type": "blob",
          "size": 92.1708984375,
          "content": "[\n\t// Fix smart expand selection\n\t// see: https://github.com/sublimehq/sublime_text/issues/4125\n\t{ \"keys\": [\"ctrl+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"smart\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown - text.html.markdown text.html - text.html.markdown text.xml - text.html.markdown meta.disable-markdown\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// The following key bindings enforce indentation by 2 chars in YAML frontmatter\n\t// without regards to syntax specific or global indentation settings,\n\t// to avoid YAML parsing errors.\n\t//\n\n\t// insert newline and indent it by two chars\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": { \"contents\": \"\\n\" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\" }\n\t\t]\n\t},\n\t// indent by one char if line starts with odd amount of spaces\n\t{ \"keys\": [\"tab\"], \"command\": \"insert\", \"args\": { \"characters\": \" \" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*[ ]$\" }\n\t\t]\n\t},\n\t// indent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"tab\"], \"command\": \"insert\", \"args\": { \"characters\": \"  \" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\t// unindent by one char if line starts with odd amount of spaces\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"left_delete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*[ ]$\" }\n\t\t]\n\t},\n\t// unindent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\t// unindent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Astersisks\n\t//\n\n\t{ \"keys\": [\"*\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*$0*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"*\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*${0:$SELECTION}*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"*\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\" \"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Underscore\n\t//\n\n\t{ \"keys\": [\"_\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_$0_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"_\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_${0:$SELECTION}_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"_\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\" \"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\_\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Inline Code\n\t//\n\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`$0`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\\w`]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|\\\\.|,|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`${0:$SELECTION}`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.raw - markup.raw.code-fence\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.raw.begin.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"`$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Highlight\n\t//\n\n\t{ \"keys\": [\"=\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"==${0:$SELECTION}==\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left Right 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"==$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^==\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Strike Through\n\t//\n\n\t{ \"keys\": [\"~\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"~~${0:$SELECTION}~~\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left Right 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"~~$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^~~\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Text Formatting Bold\n\t//\n\n\t// auto-pair if not within a word\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"**$0**\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"__$0__\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform a word to bold if caret is at the beginning, in the middle of or at the end of a word\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform selection to bold\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"**${SELECTION/^\\\\*\\\\*|^__|\\\\*\\\\*$|__$//g}**\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|__$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^__\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"__${SELECTION/^\\\\*\\\\*|^__|\\\\*\\\\*$|__$//g}__\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|__$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^__\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unbold bold text\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unbold.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.bold - markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unbold Bold Italics.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.bold markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Text Formatting Italic\n\t//\n\n\t// auto-pair if not within a word\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*$0*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_$0_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform a word to bold if caret is at the beginning, in the middle of or at the end of a word\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform selection to italics\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*${SELECTION/(^[\\\\*_]*|[\\\\*_]*$)//g}*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^_\", \"match_all\": true }\n\t\t]\n\t},\n\t// Remove italics style from text\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_${SELECTION/(^[\\\\*_]*|[\\\\*_]*$)//g}_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unitalicize.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Headings\n\t//\n\n\t// If nothing is selected, pressing hash in front of heading label increases level by one\n\t{ \"keys\": [\"#\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#*\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t// If nothing is selected, pressing backspace within or directly after leading hashes decreases heading level\n\t{ \"keys\": [\"backspace\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#*\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t// If nothing is selected, pressing delete within or directly in front of leading hashes decreases heading level\n\t{ \"keys\": [\"delete\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#+\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_complete_underlined_headings\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\-+$|^\\\\=+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad0\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+0\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad1\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+1\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad2\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+2\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad3\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+3\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad4\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+4\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad5\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+5\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad6\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+6\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+alt+.\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+alt+,\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+alt+pageup\"], \"command\": \"mde_goto_previous_heading\", \"args\": {\"same_level\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_previous_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+alt+pagedown\"], \"command\": \"mde_goto_next_heading\", \"args\": {\"same_level\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_next_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+pageup\"], \"command\": \"mde_goto_previous_heading\", \"args\": {\"same_level\": false}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_previous_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+pagedown\"], \"command\": \"mde_goto_next_heading\", \"args\": {\"same_level\": false}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_next_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t//\n\t// Folding\n\t//\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad0\"], \"command\": \"mde_unfold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+0\"], \"command\": \"mde_unfold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad1\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+1\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad2\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+2\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad3\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+3\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad4\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+4\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad5\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+5\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad6\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+6\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad9\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+9\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+[\"], \"command\": \"mde_fold_section\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.fold_section\", \"operator\": \"not_equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+]\"], \"command\": \"mde_unfold_section\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.fold_section\", \"operator\": \"not_equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+tab\"], \"command\": \"mde_show_fold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.show_fold_all_sections\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t//\n\t// Lists\n\t//\n\n\t// Create new GFM Task\n\t{ \"keys\": [\"alt+t\"], \"command\": \"mde_insert_task_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Convert List Item to GFM Task\n\t{ \"keys\": [\"alt+t\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Convert List to Task.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.list_align_text\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+t\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Convert List to Task Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.list_align_text\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Add line to current list item\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1 $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1 $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Add line to current GFM task\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1     $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*][ ]\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1     $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*][ ]\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Extend lists (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Extend lists with GFM tasks (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Extend Numbered Lists (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Remove empty list item including GFM tasks\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s?$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Join content of next into current line after removing its leading blockquote, list and GFM task punctuation\n\t{ \"keys\": [\"delete\"], \"command\": \"mde_join_lines\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote, text.html.markdown markup.list\" },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+j\"], \"command\": \"mde_join_lines\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote, text.html.markdown markup.list\" }\n\t\t]\n\t},\n\t// Indent list item if caret is in front of bullets\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent list item, if caret is directly behind bullet only if followed by whitespace\n\t// Hitting \"tab\" directly after new list bullet should insert \\t otherwise\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.heading - meta.separator\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent list item if caret is behind bullets\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.heading - meta.separator\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent selected list items\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t// Unindent list item no matter of caret position if `shift_tab_unindent` is set\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is in front of bullets\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is behind bullets\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_match\", \"operand\": \"(?:-{2,}|={2,})\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is at eol\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\" }\n\t\t]\n\t},\n\t// Unindent selected list items\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t// Toggle GFM tasks\n\t{ \"keys\": [\"alt+x\"], \"command\": \"mde_toggle_task_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown & (markup.list | markup.quote)\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Quotes\n\t//\n\n\t// Extend blockquote (ignore headings, lists and tasks)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Terminate blockquote\n\t{ \"keys\": [\"ctrl+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\n\\n\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\n\\n\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true }\n\t\t]\n\t},\n\t// Terminate empty blockquote\n\t{ \"keys\": [\"ctrl+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Terminate Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>(?:\\\\s*[-+*](?:\\\\s+\\\\[[ xX]\\\\])?|\\\\d+[.)])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Terminate Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>(?:\\\\s*[-+*](?:\\\\s+\\\\[[ xX]\\\\])?|\\\\d+[.)])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>\\\\s$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level and trim whitespace after caret\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>\\\\s?$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Convert to or increase block quote level (selected text)\n\t{ \"keys\": [\">\"], \"command\": \"mde_indent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// Increase block quote level\n\t{ \"keys\": [\"ctrl+shift+.\"], \"command\": \"mde_indent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level\n\t{ \"keys\": [\"ctrl+shift+,\"], \"command\": \"mde_unindent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(> )+\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// References\n\t//\n\n\t// Surround with <> on URLs, regex copied from https://mathiasbynens.be/demo/url-regex, @diegoperini (502 chars)\n\t{ \"keys\": [\"<\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"<${0:$SELECTION}>\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_match\", \"operand\": \"(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!10(?:\\\\.\\\\d{1,3}){3})(?!127(?:\\\\.\\\\d{1,3}){3})(?!169\\\\.254(?:\\\\.\\\\d{1,3}){2})(?!192\\\\.168(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+-?)*[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+)(?:\\\\.(?:[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+-?)*[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+)*(?:\\\\.(?:[a-z\\\\x{00a1}-\\\\x{ffff}]{2,})))(?::\\\\d{2,5})?(?:/[^\\\\s]*)?\", \"match_all\": true }\n\t\t]\n\t},\n\t// modify [] pairing so that selection is removed after pairing, ready for [] or ()\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$SELECTION]$0\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// inline image insertion\n\t{ \"keys\": [\"super+shift+k\"], \"command\": \"mde_reference_new_inline_image\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_inline_image\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// run paste as link command on selected text\n\t{ \"keys\": [\"ctrl+alt+v\"], \"command\": \"mde_reference_new_inline_link\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_inline_link\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// create new footnote\n\t{ \"keys\": [\"alt+shift+6\"], \"command\": \"mde_reference_new_footnote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_footnote\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// create new reference\n\t{ \"keys\": [\"ctrl+alt+r\"], \"command\": \"mde_reference_new_reference\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_reference\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// extend numbered reference if auto completion panel is not visible\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operand\": false }\n\t\t]\n\t},\n\t// extend numbered reference if auto-completions are commited via tab only\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// organize references\n\t{ \"keys\": [\"ctrl+alt+s\"], \"command\": \"mde_reference_organize\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_organize\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// jump to reference\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_reference_jump\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_reference_jump\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.def.markdown entity.name.reference.link\", \"match_all\": true }\n\t\t]\n\t},\n\t// jump to footnote\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_magic_footnotes\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.footnote\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_magic_footnotes\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.def.footnote entity.name.reference.link\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// CriticMarkup\n\t//\n\n\t// insert new addition or mark selection for addition\n\t{ \"keys\": [\"alt+c\", \"alt+a\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Addition.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true }\n\t\t]\n\t},\n\t// commit addition\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard addition\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// insert comment or convert selection into comment\n\t{ \"keys\": [\"alt+c\", \"alt+c\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Comment.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true }\n\t\t]\n\t},\n\t// remove comment\n\t{ \"keys\": [\"alt+c\", \"alt+c\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for deletion\n\t{ \"keys\": [\"alt+c\", \"alt+d\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for deletion\n\t{ \"keys\": [\"alt+c\", \"alt+d\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Deletion.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// commit deletion\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard deletion\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for highlight\n\t{ \"keys\": [\"alt+c\", \"alt+h\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for highlighting\n\t{ \"keys\": [\"alt+c\", \"alt+h\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Highlight.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// remove highlight\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for substitution\n\t{ \"keys\": [\"alt+c\", \"alt+s\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for substitution\n\t{ \"keys\": [\"alt+c\", \"alt+s\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Substitution.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// commit substitution\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard substitution\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t//\n\t// Wiki\n\t//\n\n\t{ \"keys\": [\"ctrl+alt+h\"], \"command\": \"mde_open_home_page\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_home_page\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+alt+j\"], \"command\": \"mde_open_journal\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_journal\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_open_page\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"meta.link.reference.wiki.description.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_page\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_list_back_links\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - (meta.link | markup.underline.link | variable)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.list_back_links\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+alt+d\"], \"command\": \"mde_make_page_reference\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - (meta.link | markup.underline.link)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.make_page_reference\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t}\n]\n"
        },
        {
          "name": "Default (OSX).sublime-keymap",
          "type": "blob",
          "size": 92.5302734375,
          "content": "[\n\t// Fix smart expand selection\n\t// see: https://github.com/sublimehq/sublime_text/issues/4125\n\t{ \"keys\": [\"super+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"smart\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown - text.html.markdown text.html - text.html.markdown text.xml - text.html.markdown meta.disable-markdown\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// The following key bindings enforce indentation by 2 chars in YAML frontmatter\n\t// without regards to syntax specific or global indentation settings,\n\t// to avoid YAML parsing errors.\n\t//\n\n\t// insert newline and indent it by two chars\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": { \"contents\": \"\\n\" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\" }\n\t\t]\n\t},\n\t// indent by one char if line starts with odd amount of spaces\n\t{ \"keys\": [\"tab\"], \"command\": \"insert\", \"args\": { \"characters\": \" \" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*[ ]$\" }\n\t\t]\n\t},\n\t// indent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"tab\"], \"command\": \"insert\", \"args\": { \"characters\": \"  \" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\t// unindent by one char if line starts with odd amount of spaces\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"left_delete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*[ ]$\" }\n\t\t]\n\t},\n\t// unindent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\t// unindent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Astersisks\n\t//\n\n\t{ \"keys\": [\"*\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*$0*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"*\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*${0:$SELECTION}*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"*\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\" \"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Underscore\n\t//\n\n\t{ \"keys\": [\"_\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_$0_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"_\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_${0:$SELECTION}_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"_\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\" \"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\_\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Inline Code\n\t//\n\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`$0`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\\w`]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|\\\\.|,|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`${0:$SELECTION}`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.raw - markup.raw.code-fence\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.raw.begin.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"`$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Highlight\n\t//\n\n\t{ \"keys\": [\"=\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"==${0:$SELECTION}==\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left Right 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"==$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^==\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Strike Through\n\t//\n\n\t{ \"keys\": [\"~\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"~~${0:$SELECTION}~~\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left Right 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"~~$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^~~\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Text Formatting Bold\n\t//\n\n\t// auto-pair if not within a word\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"**$0**\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"__$0__\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform a word to bold if caret is at the beginning, in the middle of or at the end of a word\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform selection to bold\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"**${SELECTION/^\\\\*\\\\*|^__|\\\\*\\\\*$|__$//g}**\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|__$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^__\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"__${SELECTION/^\\\\*\\\\*|^__|\\\\*\\\\*$|__$//g}__\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|__$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^__\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unbold bold text\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unbold.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.bold - markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unbold Bold Italics.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.bold markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Text Formatting Italic\n\t//\n\n\t// auto-pair if not within a word\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*$0*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_$0_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform a word to bold if caret is at the beginning, in the middle of or at the end of a word\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform selection to italics\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*${SELECTION/(^[\\\\*_]*|[\\\\*_]*$)//g}*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^_\", \"match_all\": true }\n\t\t]\n\t},\n\t// Remove italics style from text\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_${SELECTION/(^[\\\\*_]*|[\\\\*_]*$)//g}_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unitalicize.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Headings\n\t//\n\n\t// If nothing is selected, pressing hash in front of heading label increases level by one\n\t{ \"keys\": [\"#\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#*\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t// If nothing is selected, pressing backspace within or directly after leading hashes decreases heading level\n\t{ \"keys\": [\"backspace\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#*\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t// If nothing is selected, pressing delete within or directly in front of leading hashes decreases heading level\n\t{ \"keys\": [\"delete\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#+\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_complete_underlined_headings\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\-+$|^\\\\=+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad0\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+0\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad1\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+1\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad2\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+2\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad3\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+3\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad4\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+4\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad5\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+5\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad6\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+6\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+alt+.\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+alt+,\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+ctrl+pageup\"], \"command\": \"mde_goto_previous_heading\", \"args\": {\"same_level\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_previous_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+ctrl+pagedown\"], \"command\": \"mde_goto_next_heading\", \"args\": {\"same_level\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_next_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+shift+pageup\"], \"command\": \"mde_goto_previous_heading\", \"args\": {\"same_level\": false}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_previous_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+shift+pagedown\"], \"command\": \"mde_goto_next_heading\", \"args\": {\"same_level\": false}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_next_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t//\n\t// Folding\n\t//\n\n\t{ \"keys\": [\"super+k\", \"super+keypad0\"], \"command\": \"mde_unfold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+0\"], \"command\": \"mde_unfold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad1\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+1\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad2\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+2\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad3\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+3\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad4\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+4\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad5\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+5\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad6\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+6\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+keypad9\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+k\", \"super+9\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+[\"], \"command\": \"mde_fold_section\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.fold_section\", \"operator\": \"not_equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+]\"], \"command\": \"mde_unfold_section\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.fold_section\", \"operator\": \"not_equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+tab\"], \"command\": \"mde_show_fold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.show_fold_all_sections\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t//\n\t// Lists\n\t//\n\n\t// Create new GFM Task\n\t{ \"keys\": [\"super+alt+t\"], \"command\": \"mde_insert_task_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Convert List Item to GFM Task\n\t{ \"keys\": [\"super+alt+t\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Convert List to Task.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.list_align_text\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+t\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Convert List to Task Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.list_align_text\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Add line to current list item\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1 $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1 $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Add line to current GFM task\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1     $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*][ ]\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1     $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*][ ]\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Extend lists (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Extend lists with GFM tasks (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Extend Numbered Lists (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Remove empty list item including GFM tasks\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s?$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Join content of next into current line after removing its leading blockquote, list and GFM task punctuation\n\t{ \"keys\": [\"delete\"], \"command\": \"mde_join_lines\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote, text.html.markdown markup.list\" },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+j\"], \"command\": \"mde_join_lines\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote, text.html.markdown markup.list\" }\n\t\t]\n\t},\n\t// Indent list item if caret is in front of bullets\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent list item, if caret is directly behind bullet only if followed by whitespace\n\t// Hitting \"tab\" directly after new list bullet should insert \\t otherwise\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.heading - meta.separator\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent list item if caret is behind bullets\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.heading - meta.separator\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent selected list items\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t// Unindent list item no matter of caret position if `shift_tab_unindent` is set\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is in front of bullets\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is behind bullets\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_match\", \"operand\": \"(?:-{2,}|={2,})\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is at eol\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\" }\n\t\t]\n\t},\n\t// Unindent selected list items\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t// Toggle GFM tasks\n\t{ \"keys\": [\"alt+x\"], \"command\": \"mde_toggle_task_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown & (markup.list | markup.quote)\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Quotes\n\t//\n\n\t// Extend blockquote (ignore headings, lists and tasks)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Terminate blockquote\n\t{ \"keys\": [\"super+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\n\\n\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\n\\n\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true }\n\t\t]\n\t},\n\t// Terminate empty blockquote\n\t{ \"keys\": [\"super+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Terminate Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>(?:\\\\s*[-+*](?:\\\\s+\\\\[[ xX]\\\\])?|\\\\d+[.)])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Terminate Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>(?:\\\\s*[-+*](?:\\\\s+\\\\[[ xX]\\\\])?|\\\\d+[.)])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>\\\\s$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level and trim whitespace after caret\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>\\\\s?$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Convert to or increase block quote level (selected text)\n\t{ \"keys\": [\">\"], \"command\": \"mde_indent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// Increase block quote level\n\t{ \"keys\": [\"super+shift+.\"], \"command\": \"mde_indent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level\n\t{ \"keys\": [\"super+shift+,\"], \"command\": \"mde_unindent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(> )+\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// References\n\t//\n\n\t// Surround with <> on URLs, regex copied from https://mathiasbynens.be/demo/url-regex, @diegoperini (502 chars)\n\t{ \"keys\": [\"<\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"<${0:$SELECTION}>\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_match\", \"operand\": \"(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!10(?:\\\\.\\\\d{1,3}){3})(?!127(?:\\\\.\\\\d{1,3}){3})(?!169\\\\.254(?:\\\\.\\\\d{1,3}){2})(?!192\\\\.168(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+-?)*[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+)(?:\\\\.(?:[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+-?)*[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+)*(?:\\\\.(?:[a-z\\\\x{00a1}-\\\\x{ffff}]{2,})))(?::\\\\d{2,5})?(?:/[^\\\\s]*)?\", \"match_all\": true }\n\t\t]\n\t},\n\t// modify [] pairing so that selection is removed after pairing, ready for [] or ()\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$SELECTION]$0\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// inline image insertion\n\t{ \"keys\": [\"super+shift+k\"], \"command\": \"mde_reference_new_inline_image\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_inline_image\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// run paste as link command on selected text\n\t{ \"keys\": [\"super+alt+v\"], \"command\": \"mde_reference_new_inline_link\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_inline_link\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// create new footnote\n\t{ \"keys\": [\"alt+shift+6\"], \"command\": \"mde_reference_new_footnote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_footnote\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// create new reference\n\t{ \"keys\": [\"super+alt+r\"], \"command\": \"mde_reference_new_reference\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_reference\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// extend numbered reference if auto completion panel is not visible\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operand\": false }\n\t\t]\n\t},\n\t// extend numbered reference if auto-completions are commited via tab only\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// organize references\n\t{ \"keys\": [\"super+ctrl+s\"], \"command\": \"mde_reference_organize\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_organize\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// jump to reference\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_reference_jump\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_reference_jump\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.def.markdown entity.name.reference.link\", \"match_all\": true }\n\t\t]\n\t},\n\t// jump to footnote\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_magic_footnotes\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.footnote\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_magic_footnotes\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.def.footnote entity.name.reference.link\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// CriticMarkup\n\t//\n\n\t// insert new addition or mark selection for addition\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+a\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Addition.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true }\n\t\t]\n\t},\n\t// commit addition\n\t{ \"keys\": [\"super+alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard addition\n\t{ \"keys\": [\"super+alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// insert comment or convert selection into comment\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+c\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Comment.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true }\n\t\t]\n\t},\n\t// remove comment\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+c\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for deletion\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+d\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for deletion\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+d\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Deletion.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// commit deletion\n\t{ \"keys\": [\"super+alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard deletion\n\t{ \"keys\": [\"super+alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for highlight\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+h\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for highlighting\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+h\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Highlight.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// remove highlight\n\t{ \"keys\": [\"super+alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for substitution\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+s\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for substitution\n\t{ \"keys\": [\"super+alt+c\", \"super+alt+s\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Substitution.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// commit substitution\n\t{ \"keys\": [\"super+alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard substitution\n\t{ \"keys\": [\"super+alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t//\n\t// Wiki\n\t//\n\n\t{ \"keys\": [\"super+alt+h\"], \"command\": \"mde_open_home_page\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_home_page\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+j\"], \"command\": \"mde_open_journal\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_journal\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_open_page\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"meta.link.reference.wiki.description.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_page\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_list_back_links\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - (meta.link | markup.underline.link | variable)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.list_back_links\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"super+alt+d\"], \"command\": \"mde_make_page_reference\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - (meta.link | markup.underline.link)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.make_page_reference\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t}\n]\n"
        },
        {
          "name": "Default (Windows).sublime-keymap",
          "type": "blob",
          "size": 92.1708984375,
          "content": "[\n\t// Fix smart expand selection\n\t// see: https://github.com/sublimehq/sublime_text/issues/4125\n\t{ \"keys\": [\"ctrl+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"smart\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown - text.html.markdown text.html - text.html.markdown text.xml - text.html.markdown meta.disable-markdown\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// The following key bindings enforce indentation by 2 chars in YAML frontmatter\n\t// without regards to syntax specific or global indentation settings,\n\t// to avoid YAML parsing errors.\n\t//\n\n\t// insert newline and indent it by two chars\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": { \"contents\": \"\\n\" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\" }\n\t\t]\n\t},\n\t// indent by one char if line starts with odd amount of spaces\n\t{ \"keys\": [\"tab\"], \"command\": \"insert\", \"args\": { \"characters\": \" \" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*[ ]$\" }\n\t\t]\n\t},\n\t// indent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"tab\"], \"command\": \"insert\", \"args\": { \"characters\": \"  \" }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\t// unindent by one char if line starts with odd amount of spaces\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"left_delete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*[ ]$\" }\n\t\t]\n\t},\n\t// unindent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\t// unindent by two chars if line starts with even amount of spaces\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operand\": \"text.html.markdown meta.frontmatter source.yaml\" },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"(?:[ ]{2})*$\" }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Astersisks\n\t//\n\n\t{ \"keys\": [\"*\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*$0*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"*\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*${0:$SELECTION}*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"*\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\" \"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\*\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Underscore\n\t//\n\n\t{ \"keys\": [\"_\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_$0_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"_\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_${0:$SELECTION}_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"_\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\" \"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Start List Item Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\_\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Inline Code\n\t//\n\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`$0`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\\w`]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|\\\\.|,|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"`${0:$SELECTION}`\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"`\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.raw - markup.raw.code-fence\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.raw.begin.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"`$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^`\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Highlight\n\t//\n\n\t{ \"keys\": [\"=\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"==${0:$SELECTION}==\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left Right 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"==$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^==\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Auto-Pairing Strike Through\n\t//\n\n\t{ \"keys\": [\"~\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"~~${0:$SELECTION}~~\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left Right 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"~~$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^~~\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Text Formatting Bold\n\t//\n\n\t// auto-pair if not within a word\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"**$0**\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"__$0__\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform a word to bold if caret is at the beginning, in the middle of or at the end of a word\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Bold (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform selection to bold\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"**${SELECTION/^\\\\*\\\\*|^__|\\\\*\\\\*$|__$//g}**\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|__$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^__\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"__${SELECTION/^\\\\*\\\\*|^__|\\\\*\\\\*$|__$//g}__\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.bold\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.bold_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|__$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^__\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unbold bold text\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unbold.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.bold - markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+b\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unbold Bold Italics.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.bold markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Text Formatting Italic\n\t//\n\n\t// auto-pair if not within a word\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*$0*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_$0_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform a word to bold if caret is at the beginning, in the middle of or at the end of a word\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Asterisk).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\w$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Italic (Underscore).sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\w\", \"match_all\": true }\n\t\t]\n\t},\n\t// Transform selection to italics\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"*${SELECTION/(^[\\\\*_]*|[\\\\*_]*$)//g}*\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^_\", \"match_all\": true }\n\t\t]\n\t},\n\t// Remove italics style from text\n\t{ \"keys\": [\"alt+i\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"_${SELECTION/(^[\\\\*_]*|[\\\\*_]*$)//g}_\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - markup.italic\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.italic_marker_asterisk\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"\\\\*$|_$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_contains\", \"operand\": \"^\\\\*|^_\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+i\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Unitalicize.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.italic - punctuation\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Headings\n\t//\n\n\t// If nothing is selected, pressing hash in front of heading label increases level by one\n\t{ \"keys\": [\"#\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#*\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t// If nothing is selected, pressing backspace within or directly after leading hashes decreases heading level\n\t{ \"keys\": [\"backspace\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#*\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t// If nothing is selected, pressing delete within or directly in front of leading hashes decreases heading level\n\t{ \"keys\": [\"delete\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.heading\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*#*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^#+\\\\s\\\\S\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Balance Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Add Line and Delete Trailing Hashes.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.auto_match_heading_hashes\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.match_heading_hashes\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*#+\\\\s+\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_complete_underlined_headings\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\-+$|^\\\\=+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad0\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+0\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad1\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+1\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad2\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+2\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad3\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+3\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad4\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+4\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad5\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+5\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+keypad6\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+k\", \"alt+6\"], \"command\": \"mde_change_headings_level\", \"args\": {\"to\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+alt+.\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+alt+,\"], \"command\": \"mde_change_headings_level\", \"args\": {\"by\": -1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.set_heading_level\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+alt+pageup\"], \"command\": \"mde_goto_previous_heading\", \"args\": {\"same_level\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_previous_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+alt+pagedown\"], \"command\": \"mde_goto_next_heading\", \"args\": {\"same_level\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_next_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+pageup\"], \"command\": \"mde_goto_previous_heading\", \"args\": {\"same_level\": false}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_previous_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+pagedown\"], \"command\": \"mde_goto_next_heading\", \"args\": {\"same_level\": false}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.goto_next_heading\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t//\n\t// Folding\n\t//\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad0\"], \"command\": \"mde_unfold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+0\"], \"command\": \"mde_unfold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad1\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+1\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 1}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad2\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+2\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 2}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad3\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+3\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 3}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad4\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+4\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 4}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad5\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+5\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 5}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad6\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+6\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 6}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+keypad9\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+9\"], \"command\": \"mde_fold_all_sections\", \"args\": {\"target_level\": 0}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+[\"], \"command\": \"mde_fold_section\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.fold_section\", \"operator\": \"not_equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+]\"], \"command\": \"mde_unfold_section\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.fold_section\", \"operator\": \"not_equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+tab\"], \"command\": \"mde_show_fold_all_sections\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.show_fold_all_sections\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t//\n\t// Lists\n\t//\n\n\t// Create new GFM Task\n\t{ \"keys\": [\"alt+t\"], \"command\": \"mde_insert_task_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Convert List Item to GFM Task\n\t{ \"keys\": [\"alt+t\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Convert List to Task.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.list_align_text\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+t\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Convert List to Task Tab.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd - meta.table\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"setting.mde.list_align_text\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Add line to current list item\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1 $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1 $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Add line to current GFM task\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1     $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*][ ]\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+).*/\\n$1     $3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*][ ]\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true }\n\t\t]\n\t},\n\t// Extend lists (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)).*/\\n$1$2$3/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Extend lists with GFM tasks (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^(?:\\\\s*((?:>\\\\s*)*)([-+*])(\\\\s+)\\\\[[ xX]\\\\](\\\\s+)).*/\\n$1$2$3[ ]$4/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^([\\\\s>]*([-+*])\\\\s+)\\\\[[ xX]\\\\](?:\\\\s+\\\\S|\\\\s*$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Extend Numbered Lists (also in block quotes)\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_number_list\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*\\\\d+[.)]\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Remove empty list item including GFM tasks\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty List Item.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.list_auto_bullets\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*([-+*]|\\\\d+[.)])(?:\\\\s+\\\\[[ xX]\\\\])?\\\\s?$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Join content of next into current line after removing its leading blockquote, list and GFM task punctuation\n\t{ \"keys\": [\"delete\"], \"command\": \"mde_join_lines\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote, text.html.markdown markup.list\" },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+shift+j\"], \"command\": \"mde_join_lines\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote, text.html.markdown markup.list\" }\n\t\t]\n\t},\n\t// Indent list item if caret is in front of bullets\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent list item, if caret is directly behind bullet only if followed by whitespace\n\t// Hitting \"tab\" directly after new list bullet should insert \\t otherwise\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.heading - meta.separator\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent list item if caret is behind bullets\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.heading - meta.separator\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s+$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Indent selected list items\n\t{ \"keys\": [\"tab\"], \"command\": \"mde_indent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t// Unindent list item no matter of caret position if `shift_tab_unindent` is set\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is in front of bullets\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*[-+*]\\\\s\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is behind bullets\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"not_regex_match\", \"operand\": \"(?:-{2,}|={2,})\", \"match_all\": true }\n\t\t]\n\t},\n\t// Unindent list item if caret is at eol\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^[\\\\s>]*[-+*]\\\\s\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\" }\n\t\t]\n\t},\n\t// Unindent selected list items\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"mde_unindent_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.list\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t// Toggle GFM tasks\n\t{ \"keys\": [\"alt+x\"], \"command\": \"mde_toggle_task_list_item\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown & (markup.list | markup.quote)\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// Quotes\n\t//\n\n\t// Extend blockquote (ignore headings, lists and tasks)\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${TM_CURRENT_LINE/^\\\\s*((?:>\\\\s*)+).*/\\n$1/}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(?:>\\\\s*)+(?![-+*>#\\\\s]|\\\\d+[.)])\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// Terminate blockquote\n\t{ \"keys\": [\"ctrl+enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\n\\n\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+keypad_enter\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\n\\n\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true }\n\t\t]\n\t},\n\t// Terminate empty blockquote\n\t{ \"keys\": [\"ctrl+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Terminate Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>(?:\\\\s*[-+*](?:\\\\s+\\\\[[ xX]\\\\])?|\\\\d+[.)])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Terminate Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>(?:\\\\s*[-+*](?:\\\\s+\\\\[[ xX]\\\\])?|\\\\d+[.)])?\\\\s*$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Left 2.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>\\\\s$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level and trim whitespace after caret\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Delete Empty Blockquote.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.quote\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\\\s>]*>\\\\s?$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^\\\\s*$\", \"match_all\": true }\n\t\t]\n\t},\n\t// Convert to or increase block quote level (selected text)\n\t{ \"keys\": [\">\"], \"command\": \"mde_indent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// Increase block quote level\n\t{ \"keys\": [\"ctrl+shift+.\"], \"command\": \"mde_indent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true }\n\t\t]\n\t},\n\t// Decrease block quote level\n\t{ \"keys\": [\"ctrl+shift+,\"], \"command\": \"mde_unindent_quote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*(> )+\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// References\n\t//\n\n\t// Surround with <> on URLs, regex copied from https://mathiasbynens.be/demo/url-regex, @diegoperini (502 chars)\n\t{ \"keys\": [\"<\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"<${0:$SELECTION}>\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_match\", \"operand\": \"(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!10(?:\\\\.\\\\d{1,3}){3})(?!127(?:\\\\.\\\\d{1,3}){3})(?!169\\\\.254(?:\\\\.\\\\d{1,3}){2})(?!192\\\\.168(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+-?)*[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+)(?:\\\\.(?:[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+-?)*[a-z\\\\x{00a1}-\\\\x{ffff}0-9]+)*(?:\\\\.(?:[a-z\\\\x{00a1}-\\\\x{ffff}]{2,})))(?::\\\\d{2,5})?(?:/[^\\\\s]*)?\", \"match_all\": true }\n\t\t]\n\t},\n\t// modify [] pairing so that selection is removed after pairing, ready for [] or ()\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$SELECTION]$0\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// inline image insertion\n\t{ \"keys\": [\"super+shift+k\"], \"command\": \"mde_reference_new_inline_image\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_inline_image\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// run paste as link command on selected text\n\t{ \"keys\": [\"ctrl+alt+v\"], \"command\": \"mde_reference_new_inline_link\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_inline_link\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// create new footnote\n\t{ \"keys\": [\"alt+shift+6\"], \"command\": \"mde_reference_new_footnote\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_footnote\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// create new reference\n\t{ \"keys\": [\"ctrl+alt+r\"], \"command\": \"mde_reference_new_reference\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_new_reference\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// extend numbered reference if auto completion panel is not visible\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operand\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operand\": false }\n\t\t]\n\t},\n\t// extend numbered reference if auto-completions are commited via tab only\n\t{ \"keys\": [\"enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"mde_add_numbered_reference_definition\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.raw\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\s*\\\\[.*\\\\d+\\\\]:\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\t// organize references\n\t{ \"keys\": [\"ctrl+alt+s\"], \"command\": \"mde_reference_organize\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.reference_organize\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t// jump to reference\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_reference_jump\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_reference_jump\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.def.markdown entity.name.reference.link\", \"match_all\": true }\n\t\t]\n\t},\n\t// jump to footnote\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_magic_footnotes\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.footnote\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_magic_footnotes\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown meta.link.reference.def.footnote entity.name.reference.link\", \"match_all\": true }\n\t\t]\n\t},\n\n\t//\n\t// CriticMarkup\n\t//\n\n\t// insert new addition or mark selection for addition\n\t{ \"keys\": [\"alt+c\", \"alt+a\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Addition.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true }\n\t\t]\n\t},\n\t// commit addition\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard addition\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Addition.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.addition\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// insert comment or convert selection into comment\n\t{ \"keys\": [\"alt+c\", \"alt+c\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Comment.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true }\n\t\t]\n\t},\n\t// remove comment\n\t{ \"keys\": [\"alt+c\", \"alt+c\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Comment.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for deletion\n\t{ \"keys\": [\"alt+c\", \"alt+d\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for deletion\n\t{ \"keys\": [\"alt+c\", \"alt+d\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Deletion.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// commit deletion\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard deletion\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Deletion.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.deletion\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for highlight\n\t{ \"keys\": [\"alt+c\", \"alt+h\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for highlighting\n\t{ \"keys\": [\"alt+c\", \"alt+h\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Highlight.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// remove highlight\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Highlight.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.highlight\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t// mark word for substitution\n\t{ \"keys\": [\"alt+c\", \"alt+s\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Transform Word - Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// mark selection for substitution\n\t{ \"keys\": [\"alt+c\", \"alt+s\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/MarkdownEditing/snippets/Critic Substitution.sublime-snippet\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - meta.frontmatter - meta.disable-markdown - markup.critic - meta.code-fence - markup.raw - markup.kbd\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t// commit substitution\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+keypad_enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Commit Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\t// discard substitution\n\t{ \"keys\": [\"alt+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/MarkdownEditing/macros/Discard Critic Substitution.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown markup.critic.substitution\", \"match_all\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false }\n\t\t]\n\t},\n\n\t//\n\t// Wiki\n\t//\n\n\t{ \"keys\": [\"ctrl+alt+h\"], \"command\": \"mde_open_home_page\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_home_page\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+alt+j\"], \"command\": \"mde_open_journal\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_journal\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"f12\"], \"command\": \"mde_open_page\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"meta.link.reference.wiki.description.markdown\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.open_page\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+f12\"], \"command\": \"mde_list_back_links\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - (meta.link | markup.underline.link | variable)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.list_back_links\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"ctrl+alt+d\"], \"command\": \"mde_make_page_reference\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown - (meta.link | markup.underline.link)\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.mde.keymap_disable.make_page_reference\", \"operator\": \"not_equal\", \"operand\": true }\n\t\t]\n\t}\n]\n"
        },
        {
          "name": "Default.sublime-commands",
          "type": "blob",
          "size": 6.841796875,
          "content": "[\n\t//\n\t// Settings\n\t//\n\n\t{\n\t\t\"caption\": \"Preferences: MarkdownEditing Settings\",\n\t\t\"command\": \"edit_settings\",\n\t\t\"args\": {\n\t\t\t\"base_file\": \"${packages}/MarkdownEditing/Preferences.sublime-settings\",\n\t\t\t\"default\": \"// Settings in here override those in \\\"Default/Preferences.sublime-settings\\\",\\n// and are overridden in turn by syntax-specific settings.\\n{\\n\\t$0\\n}\\n\"\n\t\t}\n\t},\n\t{\n\t\t\"caption\": \"Preferences: MarkdownEditing Settings - Distraction Free\",\n\t\t\"command\": \"edit_settings\",\n\t\t\"args\": {\n\t\t\t\"base_file\": \"${packages}/MarkdownEditing/Distraction Free.sublime-settings\",\n\t\t\t\"default\": \"// Settings in here override those in \\\"Default/Distraction Free.sublime-settings\\\",\\n// and are overridden in turn by syntax-specific settings.\\n{\\n\\t$0\\n}\\n\"\n\t\t}\n\t},\n\t{\n\t\t\"caption\": \"Preferences: MarkdownEditing Key Bindings\",\n\t\t\"command\": \"edit_settings\",\n\t\t\"args\": {\n\t\t\t\"base_file\": \"${packages}/MarkdownEditing/Default (${platform}).sublime-keymap\",\n\t\t\t\"default\": \"// Bindings in here override those in \\\"Default/Default.sublime-keymap\\\"\\n[\\n\\t$0\\n]\\n\"\n\t\t}\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Select Color scheme\",\n\t\t\"command\": \"mde_select_color_scheme\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Toggle Centered Line\",\n\t\t\"command\": \"mde_toggle_centered_line\"\n\t},\n\n\t//\n\t// Linting\n\t//\n\n\t{\n\t\t\"caption\": \"MarkdownEditing: Markdown Lint\",\n\t\t\"command\": \"mde_markdown_lint\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Run markdownlint\",\n\t\t\"command\": \"mde_markdown_lint_mdl\"\n\t},\n\n\t//\n\t// Headings\n\t//\n\n\t{\n\t\t\"caption\": \"MarkdownEditing: Add Closing Heading Hashes\",\n\t\t\"command\": \"mde_match_heading_hashes\",\n\t\t\"args\": { \"enabled\": true }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Remove Closing Heading Hashes\",\n\t\t\"command\": \"mde_match_heading_hashes\",\n\t\t\"args\": { \"enabled\": false }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fix Closing Heading Hashes\",\n\t\t\"command\": \"mde_match_heading_hashes\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fix Underlined Headings\",\n\t\t\"command\": \"mde_fix_underlined_headings\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Convert Underlined Headings to ATX\",\n\t\t\"command\": \"mde_convert_underlined_headings_to_atx\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Convert Heading to Text\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 0 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Set Headings Level 1\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 1 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Set Headings Level 2\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 2 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Set Headings Level 3\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 3 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Set Headings Level 4\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 4 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Set Headings Level 5\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 5 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Set Headings Level 6\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"to\": 6 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Increase Headings Level\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"by\": 1 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Decrease Headings Level\",\n\t\t\"command\": \"mde_change_headings_level\",\n\t\t\"args\": { \"by\": -1 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Goto Next Heading (same or higher level)\",\n\t\t\"command\": \"mde_goto_next_heading\",\n\t\t\"args\": { \"same_level\": true }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Goto Next Heading (any level)\",\n\t\t\"command\": \"mde_goto_next_heading\",\n\t\t\"args\": { \"same_level\": false }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Goto Previous Heading (same or higher level)\",\n\t\t\"command\": \"mde_goto_previous_heading\",\n\t\t\"args\": { \"same_level\": true }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Goto Previous Heading (any level)\",\n\t\t\"command\": \"mde_goto_previous_heading\",\n\t\t\"args\": { \"same_level\": false }\n\t},\n\n\t//\n\t// Folding\n\t//\n\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Current Section\",\n\t\t\"command\": \"mde_fold_section\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Unold Current Section\",\n\t\t\"command\": \"mde_unfold_section\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Level 1 Sections\",\n\t\t\"command\": \"mde_fold_all_sections\",\n\t\t\"args\": { \"target_level\": 1 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Level 2 Sections\",\n\t\t\"command\": \"mde_fold_all_sections\",\n\t\t\"args\": { \"target_level\": 2 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Level 3 Sections\",\n\t\t\"command\": \"mde_fold_all_sections\",\n\t\t\"args\": { \"target_level\": 3 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Level 4 Sections\",\n\t\t\"command\": \"mde_fold_all_sections\",\n\t\t\"args\": { \"target_level\": 4 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Level 5 Sections\",\n\t\t\"command\": \"mde_fold_all_sections\",\n\t\t\"args\": { \"target_level\": 5 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold Level 6 Sections\",\n\t\t\"command\": \"mde_fold_all_sections\",\n\t\t\"args\": { \"target_level\": 6 }\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Fold All Sections\",\n\t\t\"command\": \"mde_fold_all_sections\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Unfold All Sections\",\n\t\t\"command\": \"mde_unfold_all_sections\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Toggle Automatic Link URL Folding\",\n\t\t\"command\": \"mde_fold_links\"\n\t},\n\n\t//\n\t// Lists\n\t//\n\n\t{\n\t\t\"caption\": \"MarkdownEditing: Switch List Bullet Type\",\n\t\t\"command\": \"mde_switch_list_bullet_type\"\n\t},\n\n\t//\n\t// References\n\t//\n\n\t{\n\t\t\"caption\": \"MarkdownEditing: Magic Footnotes\",\n\t\t\"command\": \"mde_magic_footnotes\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Jump Reference\",\n\t\t\"command\": \"mde_reference_jump\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: New Reference\",\n\t\t\"command\": \"mde_reference_new_reference\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: New Inline Link\",\n\t\t\"command\": \"mde_reference_new_inline_link\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: New Inline Image\",\n\t\t\"command\": \"mde_reference_new_inline_image\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: New Image\",\n\t\t\"command\": \"mde_reference_new_image\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: New Footnote\",\n\t\t\"command\": \"mde_reference_new_footnote\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Delete Reference\",\n\t\t\"command\": \"mde_reference_delete_reference\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Convert all inline links to references\",\n\t\t\"command\": \"mde_convert_inline_links_to_references\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Convert inline link to reference\",\n\t\t\"command\": \"mde_convert_inline_link_to_reference\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Add Missing Link Labels\",\n\t\t\"command\": \"mde_gather_missing_link_markers\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Gather Missing Footnotes\",\n\t\t\"command\": \"mde_gather_missing_footnotes\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Organize References\",\n\t\t\"command\": \"mde_reference_organize\"\n\t},\n\n\t//\n\t// Wiki\n\t//\n\n\t{\n\t\t\"caption\": \"MarkdownEditing: Open Home Page\",\n\t\t\"command\": \"mde_open_home_page\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Open Page\",\n\t\t\"command\": \"mde_open_page\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: Open Journal\",\n\t\t\"command\": \"mde_open_journal\"\n\t},\n\t{\n\t\t\"caption\": \"MarkdownEditing: List Back Links\",\n\t\t\"command\": \"mde_list_back_links\"\n\t}\n]\n"
        },
        {
          "name": "Distraction Free.sublime-settings",
          "type": "blob",
          "size": 0.099609375,
          "content": "{\n\t// MarkdownEditing:\n\t// Always keep current line vertically centered.\n\t\"mde.keep_centered\": true\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\nCopyright (c) 2012 Brett Terpstra\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Main.sublime-menu",
          "type": "blob",
          "size": 1.6201171875,
          "content": "[\n\t{\n\t\t\"caption\": \"Preferences\",\n\t\t\"children\": [\n\t\t\t{\n\t\t\t\t\"caption\": \"Package Settings\",\n\t\t\t\t\"children\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"caption\": \"Markdown Editing\",\n\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"caption\": \"README\",\n\t\t\t\t\t\t\t\t\"command\": \"open_file\",\n\t\t\t\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\t\t\"file\": \"${packages}/MarkdownEditing/README.md\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"caption\": \"Select Color Scheme\",\n\t\t\t\t\t\t\t\t\"command\": \"mde_select_color_scheme\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"caption\": \"Settings\",\n\t\t\t\t\t\t\t\t\"command\": \"edit_settings\",\n\t\t\t\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\t\t\"base_file\": \"${packages}/MarkdownEditing/Preferences.sublime-settings\",\n\t\t\t\t\t\t\t\t\t\"default\": \"// Settings in here override those in \\\"Default/Preferences.sublime-settings\\\",\\n// and are overridden in turn by syntax-specific settings.\\n{\\n\\t$0\\n}\\n\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"caption\": \"Settings - Distraction Free\",\n\t\t\t\t\t\t\t\t\"command\": \"edit_settings\",\n\t\t\t\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\t\t\"base_file\": \"${packages}/MarkdownEditing/Distraction Free.sublime-settings\",\n\t\t\t\t\t\t\t\t\t\"default\": \"// Settings in here override those in \\\"Default/Distraction Free.sublime-settings\\\",\\n// and are overridden in turn by syntax-specific settings.\\n{\\n\\t$0\\n}\\n\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"caption\": \"Key Bindings\",\n\t\t\t\t\t\t\t\t\"command\": \"edit_settings\",\n\t\t\t\t\t\t\t\t\"args\": {\n\t\t\t\t\t\t\t\t\t\"base_file\": \"${packages}/MarkdownEditing/Default (${platform}).sublime-keymap\",\n\t\t\t\t\t\t\t\t\t\"default\": \"// Bindings in here override those in \\\"Default/Default.sublime-keymap\\\"\\n[\\n\\t$0\\n]\\n\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"id\": \"package-settings\",\n\t\t\t\t\"mnemonic\": \"P\"\n\t\t\t}\n\t\t],\n\t\t\"id\": \"preferences\",\n\t\t\"mnemonic\": \"n\"\n\t}\n]\n"
        },
        {
          "name": "Preferences.sublime-settings",
          "type": "blob",
          "size": 7.087890625,
          "content": "{\n\t// MarkdownEditing:\n\t// Always keep current line vertically centered.\n\t\"mde.keep_centered\": false,\n\n\t// MarkdownEditing:\n\t// set log level\n\t// valid values are: \"CRITICAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\"\n\t\"mde.logging.level\": \"ERROR\",\n\n\t// MarkdownEditing (Formatting):\n\t// If `true` asterisk is used to markup bold text, underscore otherwise.\n\t\"mde.bold_marker_asterisk\": true,\n\n\t// MarkdownEditing (Formatting):\n\t// If `true` asterisk is used to markup italic text, underscore otherwise.\n\t\"mde.italic_marker_asterisk\": false,\n\n\t// MarkdownEditing (Headings):\n\t// auto detect whether to add trailing #'s to headlines\n\t// If `true` `mde.match_heading_hashes` is set per view depending on\n\t// majority of first 10 headings containing trailing #'s or not.\n\t\"mde.detect_heading_style\": true,\n\n\t// MarkdownEditing (Headings):\n\t// add trailing #'s to headlines\n\t\"mde.match_heading_hashes\": false,\n\n\t// MarkdownEditing (Headings):\n\t// If `true`, trailing heading hashes are added or removed automatically,\n\t// depending on a view's `mde.match_heading_hashes` setting value.\n\t//\n\t// Headings are fixed:\n\t// a) when hitting enter at the end of a heading line\n\t// b) after loading or before saving a file if `mde.auto_detect_match_heading_hashes` is `true`.\n\t\"mde.auto_match_heading_hashes\": true,\n\n\t// MarkdownEditing (Lists):\n\t// Align list item text at indentation level.\n\t// Adds <Tab> after list items instead of a single <space>.\n\t\"mde.list_align_text\": false,\n\n\t// MarkdownEditing (Lists):\n\t// Automatically insert or remove list item bullets while writing.\n\t\"mde.list_auto_bullets\": true,\n\n\t// MarkdownEditing (Lists):\n\t// Automatically switches list bullet when indenting blank list item with <Tab>.\n\t\"mde.list_indent_auto_switch_bullet\": false,\n\n\t// MarkdownEditing (Lists):\n\t// List bullets to be used for automatically switching. In their order.\n\t\"mde.list_indent_bullets\": [\"*\", \"-\", \"+\"],\n\n\t// MarkdownEditing (Lists):\n\t// Auto increments ordered list number. Set to false if you want always \"1\".\n\t\"mde.auto_increment_ordered_list_number\": true,\n\n\t// MarkdownEditing (References):\n\t// The sorting method used by the Organize References command.\n\t// Should be one of\n\t//\n\t// \"reference_order\": List in order of appearance in document\n\t// \"alphabetical\": Alphabetical based on reference name, sorting numerals lexagraphically\n\t// \"numeric\": Alphabetical based on reference name, sorting numeral chunks numerically\n\t\"mde.ref_organize_sort\": \"reference_order\",\n\t\"mde.ref_organize_sort_reverse\": false,\n\n\t// MarkdownEditing (Linting):\n\t\"mde.lint\": {\n\t\t\"mdl\": {\n\t\t\t// By default it is mdl.bat on windows and mdl otherwise. Leave it blank to use the default value\n\t\t\t// If you are using a custom launcher, you may want to change this\n\t\t\t\"executable\": \"\",\n\t\t\t// Extra arguments passed to mdl. For all options, see here:\n\t\t\t// https://github.com/markdownlint/markdownlint/blob/master/lib/mdl/cli.rb\n\t\t\t// You can also specify a config file with '-c ~/.mdlrc'\n\t\t\t\"additional_arguments\": []\n\t\t},\n\t\t// disabled rules, e.g. \"md001\".\n\t\t\"disable\": [\"md013\"],\n\t\t// Options:\n\t\t//      atx,        ## title    only\n\t\t//      atx_closed, ## title ## only\n\t\t//      setext,     title       only\n\t\t//                  =====\n\t\t//      any,        consistent within the document\n\t\t\"md003\": \"any\",\n\t\t// Options:\n\t\t//      asterisk,   * only\n\t\t//      plus,       + only\n\t\t//      dash,       - only\n\t\t//      cyclic,     different symbols on different levels\n\t\t//                  and same symbol on same level\n\t\t//      single,     same symbol on different levels\n\t\t//      any,        same symbol on same level\n\t\t\"md004\": \"cyclic\",\n\t\t// Number of spaces per list indent. Set to 0 to use Sublime tab_size instead\n\t\t\"md007\": 0,\n\t\t// Maximum line length, Set to 0 to use Sublime wrap_width instead\n\t\t\"md013\": 0,\n\t\t// Disallowed trailing punctuation in headers\n\t\t\"md026\": \".,;:!\",\n\t\t// Options:\n\t\t//      one,        '1.' only\n\t\t//      ordered,    ascending number\n\t\t//      any,        consistent within one list\n\t\t\"md029\": \"any\",\n\t\t// Number of spaces after list markers depending on list type.\n\t\t// (ordered vs unordered, single-line vs multi-line)\n\t\t\"md030\": {\n\t\t\t\"ul_single\": 1,\n\t\t\t\"ol_single\": 1,\n\t\t\t// optionally, 3\n\t\t\t\"ul_multi\": 1,\n\t\t\t// optionally, 2\n\t\t\t\"ol_multi\": 1\n\t\t}\n\t},\n\n\t// MarkdownEditing (Folding):\n\t// Enable automatic folding of url parts of inline references or images\n\t\"mde.auto_fold_link.enabled\": true,\n\t// MarkdownEditing (Folding):\n\t// Selector for urls to automatically fold\n\t\"mde.auto_fold_link.selector\": \"( meta.image.inline.metadata.markdown | meta.image.reference.metadata.markdown | meta.link.inline.metadata.markdown | meta.link.reference.metadata.markdown ) - punctuation.definition.metadata\",\n\n\t// MarkdownEditing (Wiki):\n\t// wiki file extensions\n\t\"mde.wikilinks.markdown_extension\": \".md\",\n\t// MarkdownEditing (Wiki):\n\t// wiki home page\n\t\"mde.wikilinks.homepage\": \"HomePage\",\n\t// MarkdownEditing (Wiki):\n\t// wiki templates\n\t\"mde.wikilinks.templates\": {\n\t\t\"default_page\": \"templates/PageTemplate.md\"\n\t},\n\n\t// You can opt out some keybinds by setting the corresponding value from 'false' to 'true' (without single-quotes).\n\t// Super key references to a key next to left Alt key. It usually has a Windows logo or \"win\" or \"Command\" on it.\n\n\t// Set Heading Level\n\t// Default keys: (OSX/Linux/Win): alt+k, alt+0..9\n\t\"mde.keymap_disable.set_heading_level\": false,\n\t// Jump between link/image/footnote reference and definition\n\t// Default keys: (OSX)super+ctrl+shift+l    (Linux/Win)ctrl+alt+g\n\t\"mde.keymap_disable.reference_jump\": false,\n\t// Add a new link\n\t// Default keys: (OSX)super+alt+r   (Linux/Win)ctrl+super+r\n\t\"mde.keymap_disable.reference_new_reference\": false,\n\t// Add a new inline link\n\t// Default keys: (OSX)super+alt+v   (Linux/Win)ctrl+super+v\n\t\"mde.keymap_disable.reference_new_inline_link\": false,\n\t// Add a new inline image\n\t// Default keys: (OSX/Linux/Win)super+shift+k\n\t\"mde.keymap_disable.reference_new_inline_image\": false,\n\t// Add a new footnote\n\t// Default keys: (OSX/Linux/Win)alt+shift+6\n\t\"mde.keymap_disable.reference_new_footnote\": false,\n\t// Reorganize footnotes footnote\n\t// Default keys: (OSX)super+ctrl+s   (Linux/Win)alt+shift+s\n\t\"mde.keymap_disable.reference_organize\": true,\n\t// Fold current section\n\t// Default keys: (OSX/Linux/Win)shift+tab\n\t\"mde.keymap_disable.fold_section\": false,\n\t// Open a panel showing all functions related to folding\n\t// Default keys: (OSX/Linux/Win)ctrl+shift+tab\n\t\"mde.keymap_disable.show_fold_all_sections\": false,\n\t// Jump to the next heading (any level/same or higher level)\n\t// Default keys: (OSX)super+ctrl/shift+pagedown (Linux/Win)ctrl+shift(+alt)+pagedown\n\t\"mde.keymap_disable.goto_next_heading\": false,\n\t// Jump to the previous heading (any level/same or higher level)\n\t// Default keys: (OSX)super+ctrl/shift+pageup   (Linux/Win)ctrl+shift(+alt)+pageup\n\t\"mde.keymap_disable.goto_previous_heading\": false,\n\t// List pages the link to the current page\n\t\"mde.keymap_disable.list_back_links\": false,\n\t// Open the home page\n\t\"mde.keymap_disable.open_home_page\": true,\n\t// Open the journal\n\t\"mde.keymap_disable.open_journal\": true,\n\t// Open the page referenced\n\t\"mde.keymap_disable.open_page\": false,\n\t// Make page reference\n\t\"mde.keymap_disable.make_page_reference\": true\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.685546875,
          "content": "# MarkdownEditing\n\n**Markdown plugin for Sublime Text**\n\n![MarkdownEditing][preview]\n\nwith...\n\n*   useful Markdown editing features for Sublime Text \n*   color schemes optimized for writing\n*   robust syntax definitions for\n    -   Standard Markdown\n    -   Github flavored Markdown\n    -   MultiMarkdown\n\nPlease visit [User Guide][UserGuide] to learn more about the full set of features and how to use them.\n\n## Features\n\n### Folding and Navigation\n\n*   displays headings in _Goto Symbol..._\n*   displays headings in _Goto Symbol in Project..._\n*   fold current section\n*   fold by heading levels\n*   navigate between adjacent headings with `Find Next/Previous Heading` command.\n\n### Headings\n\n*   automatic detection and maintenance of open or closed [atx headings][AtxHeadings] style while typing\n*   change [headings levels][HeadingsLevels] via key bindings\n*   auto-complete [Setext-style headings][SeHeadings] underlines\n*   convert [Setext-style headings][SeHeadings] to ATX headings\n*   new documents are named automatically based on first header\n\n### Lists\n\n*   At the end of a list item, pressing <kbd>Enter</kbd> will automatically insert the new list item bullet.\n*   Pressing <kbd>Tab</kbd> on the blank list item will indent it and switch the list bullet to another one (Order is `*`, `-`, `+` in a cycle).\n*   Pressing <kbd>Shift</kbd> + <kbd>Tab</kbd> on the blank list item will unindent it in the same way as above.\n*   Sequential <kbd>Tab</kbd> s or <kbd>Shift</kbd> <kbd>Tab</kbd> s are supported.\n*   You can disable automatic bullet switching or choose which bullets to be used, in your settings file (`mde.list_indent_bullets`).\n*   If a list item contains a [GFM Task][], pressing \n    - <kbd>Enter</kbd> at the end of the line continues with a new blank task.\n    - <kbd>Alt+X</kbd> in the line toggles the check mark.\n\n### Blockquotes\n\n*   At the end of a blockquote line, pressing <kbd>Enter</kbd> will automatically extend blockquote.\n*   Selecting some text and pressing <kbd>&gt;</kbd> will convert it to blockquote. The first and the last line don't have to be fully selected; partial select works, too.\n\n### Critic Markup\n\n*   Syntax highlighting for inline critic markup\n    -   `{++ addition ++}`\n    -   `{>> comment <<}`\n    -   `{-- deletion --}`\n    -   `{== highlight==}{>> comment <<}`\n    -   `{~~ substitution ~> by ~~}`\n*   Reviewers can add critic via key bindings\n*   Authors can accept or reject critic via key bindings\n\n### Links and References\n\n*   Left bracket pairing is modified to eliminate the selection and leave the cursor at a point where you can insert a `[]` or `()` pair for a link.\n*   URL part of images, links and references is automatically folded if caret is not within brackets\n*   Convert inline links to references\n*   Jump between definitions and references\n*   Organize references\n*   Add or remove footnotes\n\n### Text Formatting\n\n*   Asterisks (<kbd>\\*</kbd>), backticks (<kbd>\\`</kbd>) and underscores (<kbd>\\_</kbd>) are auto-paired and wrap selected text\n*   <kbd>~</kbd> wraps selected text with `~~` (strike-through)\n*   <kbd>Backspace</kbd> deletes an empty pair\n*   <kbd>Space</kbd> or <kbd>Tab</kbd> deletes right element of empty pair of asterisks or underscores\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md).\n\n## Credits\n\nMarkdownEditing was originally created by [Brett Terpstra][] and has become a community project with the goal of consolidating the best features from the varied collection of Markdown packages for Sublime Text. \n\nRelated blog posts from Brett:\n\n*   http://brettterpstra.com/2012/05/17/markdown-editing-for-sublime-text-2-humble-beginnings\n*   http://brettterpstra.com/2013/11/23/markdownediting-for-sublime-text-updates\n\nDevelopment was headed by [Ali Ayas][] and [Felix Hao][] until early 2021.\n\nCurrent development is headed up by [DeathAxe][].\n\nThis plugin contains portions of code from [Knockdown][].\n\nFootnote commands were submitted by [J. Nicholas Geist][] and originated at [geekabouttown][].\n\n## License\n\nMarkdownEditing is released under the [MIT License][opensource].\n\n\n[preview]: docs/img/preview.png\n[Knockdown]: https://github.com/aziz/knockdown\n[geekabouttown]: http://geekabouttown.com/posts/sublime-text-2-markdown-footnote-goodness\n[opensource]: http://www.opensource.org/licenses/MIT\n[UserGuide]: https://sublimetext-markdown.github.io/MarkdownEditing\n[AtxHeadings]: docs/usage.md#atx-style\n[HeadingsLevels]: docs/usage.md#headings-levels\n[SeHeadings]: docs/usage.md#setext-style\n[GFM Task]: https://github.github.com/gfm/#task-list-items-extension-\n\n[Ali Ayas]: https://github.com/maliayas\n[Brett Terpstra]: http://brettterpstra.com\n[DeathAxe]: https://github.com/deathaxe\n[Felix Hao]: https://github.com/felixhao28\n[J. Nicholas Geist]: https://github.com/jngeist\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "make.cmd",
          "type": "blob",
          "size": 3.048828125,
          "content": ":: This script is used to\n:: 1. setup python .venv with requirements installed\n:: 2. run all development tasks within that .venv\n@echo off\nsetlocal\nchcp 65001 >nul\npushd %~dp0\n\nif /i \"%1\" == \"init\" goto INIT\nif /i \"%1\" == \"docs\" goto DOCS\nif /i \"%1\" == \"deploy-docs\" goto DEPLOY-DOCS\nif /i \"%1\" == \"serve\" goto SERVE\nif /i \"%1\" == \"lint\" goto LINT\nif /i \"%1\" == \"release\" goto RELEASE\nif /i \"%1\" == \"branch\" goto BRANCH\ngoto :usage\n\n:INIT\n    if not exist .venv python -m venv .venv\n    call :venv\n    call python -m pip install --upgrade pip\n    call pip install --upgrade -r docs\\requirements.txt\n    call pip install --upgrade -r tests\\requirements.txt\n    goto :eof\n\n:DOCS\n    call :venv\n    mkdocs build\n    goto :eof\n\n:DEPLOY-DOCS\n    call :venv\n    mkdocs gh-deploy\n    goto :eof\n\n:SERVE\n    call :venv\n    call explorer http://localhost:8000\n    mkdocs serve\n    goto :eof\n\n:LINT\n    call :venv\n    black .\n    flake8\n    goto :eof\n\n:BRANCH\n    if \"%2\"== \"\" goto :usage\n    git checkout -b %2\n    goto :eof\n\n:RELEASE\n    if \"%2\"== \"\" goto :usage\n\n    git checkout st3176 && git merge st3-develop --no-ff\n    if not errorlevel 0 (\n        echo Unable to merge st3-develop into st3176!\n        exit /b 1\n    )\n    git checkout master && git merge st4-develop --no-ff\n    if not errorlevel 0 (\n        echo Unable to merge st4-develop into master!\n        exit /b 1\n    )\n    echo Hit any key to push branches!\n    pause\n    call git push origin st3176\n    if not errorlevel 0 (\n        echo Failed to push st3176!\n        exit /b 1\n    )\n    call git push origin master\n    if not errorlevel 0 (\n        echo Failed to push master!\n        exit /b 1\n    )\n\n    for %%d in (\"%~dp0.\") do set package=%%~nxd\n\n    echo Createing assets for \"%package%\"...\n\n    :: create downloadable asset for ST4126+\n    set build=3176\n    set archive=%package%-%2-st%build%.sublime-package\n    set assets=\"%archive%#%archive%\"\n    call git tag -f %build%-%2 st%build%\n    call git archive --format zip -o \"%archive%\" %build%-%2\n\n    :: create downloadable asset for ST4134+\n    set build=4107\n    set archive=%package%-%2-st%build%.sublime-package\n    set assets=%assets% \"%archive%#%archive%\"\n    call git tag -f %build%-%2 master\n    call git archive --format zip -o \"%archive%\" %build%-%2\n\n    :: create the release\n    call git push --tags --force\n    gh release create --target master -t \"%package% %2\" \"%2\" %assets%\n    del /f /q *.sublime-package\n    git fetch\n    goto :eof\n\n:VENV\n    call .venv\\scripts\\activate.bat\n    if \"%VIRTUAL_ENV%\" neq \".venv\" exit /b 1\n    goto :eof\n\n:USAGE\n    echo USAGE:\n    echo.\n    echo   make ^[init^|docs^|gh-pages^|serve^|lint^|branch^|release^]\n    echo.\n    echo   init          -- setup .venv and install requirements.\n    echo   docs          -- build documentation\n    echo   deploy-docs   -- build documentation and publish on Github Pages\n    echo   serve         -- build documentation and serve via development server\n    echo   lint          -- run black, flake8 and pytest\n    echo   branch 3.0.0  -- prepare version branch\n    echo   release 3.0.0 -- make a release\n    goto :eof\n"
        },
        {
          "name": "messages.json",
          "type": "blob",
          "size": 1.533203125,
          "content": "{\n\t\"install\": \"messages/install.md\",\n\t\"2.0.0\": \"messages/2.0.0.txt\",\n\t\"2.0.1\": \"messages/2.0.1.md\",\n\t\"2.0.2\": \"messages/2.0.2.md\",\n\t\"2.0.3\": \"messages/2.0.3.md\",\n\t\"2.0.4\": \"messages/2.0.4.md\",\n\t\"2.0.5\": \"messages/2.0.5.md\",\n\t\"2.0.6\": \"messages/2.0.6.md\",\n\t\"2.0.7\": \"messages/2.0.7.md\",\n\t\"2.0.8\": \"messages/2.0.8.md\",\n\t\"2.0.9\": \"messages/2.0.9.md\",\n\t\"2.1.0\": \"messages/2.1.0.md\",\n\t\"2.1.1\": \"messages/2.1.1.md\",\n\t\"2.1.2\": \"messages/2.1.2.md\",\n\t\"2.1.3\": \"messages/2.1.3.md\",\n\t\"2.1.4\": \"messages/2.1.4.md\",\n\t\"2.1.5\": \"messages/2.1.5.md\",\n\t\"2.1.6\": \"messages/2.1.6.md\",\n\t\"2.1.7\": \"messages/2.1.7.md\",\n\t\"2.1.8\": \"messages/2.1.8.md\",\n\t\"2.1.9\": \"messages/2.1.9.md\",\n\t\"2.2.0\": \"messages/2.2.0.md\",\n\t\"2.2.1\": \"messages/2.2.1.md\",\n\t\"2.2.2\": \"messages/2.2.2.md\",\n\t\"2.2.3\": \"messages/2.2.3.md\",\n\t\"2.2.4\": \"messages/2.2.4.md\",\n\t\"2.2.10\": \"messages/2.2.10.md\",\n\t\"3.0.0\": \"messages/3.0.0.md\",\n\t\"3.0.1\": \"messages/3.0.1.md\",\n\t\"3.0.2\": \"messages/3.0.2.md\",\n\t\"3.0.3\": \"messages/3.0.3.md\",\n\t\"3.0.4\": \"messages/3.0.4.md\",\n\t\"3.0.5\": \"messages/3.0.5.md\",\n\t\"3.0.6\": \"messages/3.0.6.md\",\n\t\"3.0.7\": \"messages/3.0.7.md\",\n\t\"3.1.0\": \"messages/3.1.0.md\",\n\t\"3.1.1\": \"messages/3.1.1.md\",\n\t\"3.1.2\": \"messages/3.1.2.md\",\n\t\"3.1.3\": \"messages/3.1.3.md\",\n\t\"3.1.4\": \"messages/3.1.4.md\",\n\t\"3.1.5\": \"messages/3.1.5.md\",\n\t\"3.1.6\": \"messages/3.1.6.md\",\n\t\"3.1.7\": \"messages/3.1.7.md\",\n\t\"3.1.8\": \"messages/3.1.8.md\",\n\t\"3.1.9\": \"messages/3.1.9.md\",\n\t\"3.1.10\": \"messages/3.1.10.md\",\n\t\"3.1.11\": \"messages/3.1.11.md\",\n\t\"3.1.12\": \"messages/3.1.12.md\",\n\t\"3.1.13\": \"messages/3.1.13.md\",\n\t\"3.1.14\": \"messages/3.1.14.md\"\n}\n"
        },
        {
          "name": "messages",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 1.310546875,
          "content": "%YAML 1.2\n---\nsite_name: \"MarkdownEditing\"\nsite_description: MarkdownEditing User Manual\nsite_author: DeathAxe\nsite_url: \"https://sublimetext-markdown.github.io/MarkdownEditing\"\nrepo_url: \"https://github.com/SublimeText-Markdown/MarkdownEditing\"\ndocs_dir: \"docs\"\n\nnav:\n    - Home: \"index.md\"\n    - Installation: \"install.md\"\n    - Usage: \"usage.md\"\n    - Linting: \"linting.md\"\n    - Configuration: \"config.md\"\n    - Troubleshooting: \"troubleshooting.md\"\n\nextra:\n  collapse_toc: true\n\nextra_css:\n  - \"css/styles.css\"\n\ntheme:\n  name: cinder\n  features:\n    - navigation.tabs\n\nplugins:\n  - minify:\n      minify_html: true\n\nmarkdown_extensions:\n  - markdown.extensions.admonition:\n  - markdown.extensions.footnotes:\n  - pymdownx.superfences:\n      preserve_tabs: true\n  - pymdownx.highlight:\n      linenums_style: pymdownx-inline\n  - pymdownx.inlinehilite:\n  - pymdownx.escapeall:\n      hardbreak: True\n      nbsp: True\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.progressbar:\n  - pymdownx.arithmatex:\n  - pymdownx.magiclink:\n      repo_url_shortener: true\n      repo_url_shorthand: true\n      user: SublimeText-Markdown\n      repo: MarkdownEditing\n  - pymdownx.mark:\n  - pymdownx.tilde:\n  - pymdownx.striphtml:\n  - pymdownx.keys:\n      separator: \"\\uff0b\"\n  - pymdownx.details:\n  - pymdownx.tabbed:\n  - pymdownx.saneheaders:\n"
        },
        {
          "name": "plugin.py",
          "type": "blob",
          "size": 3.5693359375,
          "content": "\"\"\"Load and Unload all MarkdownEditing modules.\n\nThis module exports __all__ modules, which Sublime Text needs to know about.\n\"\"\"\nimport sublime\n\nif int(sublime.version()) < 3176:\n    print(__package__ + \" requires ST3 3176+\")\nelse:\n    import sys\n\n    # clear modules cache if package is reloaded (after update?)\n    prefix = __package__ + \".\"  # don't clear the base package\n    for module_name in [\n        module_name\n        for module_name in sys.modules\n        if module_name.startswith(prefix) and module_name != __name__\n    ]:\n        del sys.modules[module_name]\n    prefix = None\n\n    # import all published Commands and EventListeners\n    from .plugins.bootstrap import (\n        on_after_install,\n        on_before_uninstall,\n    )\n    from .plugins.color_schemes import (\n        MdeSelectColorSchemeCommand,\n    )\n    from .plugins.folding import (\n        MdeFoldAllSectionsCommand,\n        MdeFoldLinksCommand,\n        MdeFoldLinksListener,\n        MdeFoldSectionCommand,\n        MdeShowFoldAllSectionsCommand,\n        MdeUnfoldAllSectionsCommand,\n        MdeUnfoldSectionCommand,\n    )\n    from .plugins.footnotes import (\n        MdeGatherMissingFootnotesCommand,\n        MdeGotoFootnoteDefinitionCommand,\n        MdeGotoFootnoteReferenceCommand,\n        MdeInsertFootnoteCommand,\n        MdeMagicFootnotesCommand,\n        MdeSortFootnotesCommand,\n        MdeSwitchToFromFootnoteCommand,\n        MdeMarkFootnotesListener,\n    )\n    from .plugins.headings import (\n        MdeChangeHeadingsLevelCommand,\n        MdeCompleteUnderlinedHeadingsCommand,\n        MdeConvertUnderlinedHeadingsToAtxCommand,\n        MdeFixUnderlinedHeadingsCommand,\n        MdeGotoNextHeadingCommand,\n        MdeGotoPreviousHeadingCommand,\n        MdeMatchHeadingHashesCommand,\n        MdeMatchHeadingHashesDetector,\n        MdeUnsavedViewNameSetter,\n    )\n    from .plugins.lists import (\n        MdeIndentListItemCommand,\n        MdeUnindentListItemCommand,\n        MdeNumberListCommand,\n        MdeSwitchListBulletTypeCommand,\n        MdeInsertTaskListItemCommand,\n        MdeToggleTaskListItemCommand,\n        MdeJoinLines,\n    )\n    from .plugins.lint import (\n        MdeMarkdownLintCommand,\n        MdeMarkdownLintMdlCommand,\n    )\n    from .plugins.logging import (\n        load_logger,\n        unload_logger\n    )\n    from .plugins.quotes import (\n        MdeIndentQuote,\n        MdeUnindentQuote,\n    )\n    from .plugins.references import (\n        MdeConvertInlineLinksToReferencesCommand,\n        MdeConvertInlineLinkToReferenceCommand,\n        MdeGatherMissingLinkMarkersCommand,\n        MdeReferenceDeleteReferenceCommand,\n        MdeReferenceJumpCommand,\n        MdeReferenceJumpContextCommand,\n        MdeReferenceNewFootnoteCommand,\n        MdeReferenceNewImageCommand,\n        MdeReferenceNewInlineImageCommand,\n        MdeReferenceNewInlineLinkCommand,\n        MdeReferenceNewReferenceCommand,\n        MdeReferenceOrganizeCommand,\n        MdeAddNumberedReferenceDefinitionCommand,\n        MdeReferenceCompletionsProvider,\n    )\n    from .plugins.view import (\n        MdeReplaceSelectedCommand,\n        MdeToggleCenteredLineCommand,\n        MdeCenteredLineKeeper,\n    )\n    from .plugins.wiki_page import (\n        MdeListBackLinksCommand,\n        MdeMakePageReferenceCommand,\n        MdeOpenHomePageCommand,\n        MdeOpenJournalCommand,\n        MdeOpenPageCommand,\n        MdePrepareFromTemplateCommand,\n    )\n\n    def plugin_loaded():\n        def worker():\n            load_logger()\n            on_after_install()\n\n        sublime.set_timeout(worker, 10)\n\n    def plugin_unloaded():\n        unload_logger()\n        on_before_uninstall()\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.20703125,
          "content": "# Configuration for Black.\n\n[tool.black]\nline-length = 100\ntarget-version = ['py38']\nexclude = '''\n      \\.git\n    | \\.github\n    | \\.mypy_cache\n    | \\.pytest_cache\n    | \\.venv\n    | plugin\\.py\n    | tests\n'''\n"
        },
        {
          "name": "schemes",
          "type": "tree",
          "content": null
        },
        {
          "name": "snippets",
          "type": "tree",
          "content": null
        },
        {
          "name": "syntaxes",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "unittesting.json",
          "type": "blob",
          "size": 0.3017578125,
          "content": "{\n\t\"tests_dir\" : \"tests\",\n\t\"pattern\" : \"test*.py\",\n\t\"async\": false,\n\t\"deferred\": true,\n\t\"verbosity\": 1,\n\t\"capture_console\": false,\n\t\"failfast\": false,\n\t\"reload_package_on_testing\": false,\n\t\"show_reload_progress\": false,\n\t\"start_coverage_after_reload\": false,\n\t\"output\": null,\n\t\"generate_html_report\": false\n}\n"
        }
      ]
    }
  ]
}