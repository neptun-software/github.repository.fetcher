{
  "metadata": {
    "timestamp": 1736559536908,
    "page": 133,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "opencv/opencv-python",
      "stars": 4645,
      "defaultBranch": "4.x",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.84375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n#Ipython Notebook\n.ipynb_checkpoints\n\n#PyCharm\n/.idea\n\n# Build temporary files\n/contrib.enabled\n/cv_version.py\n/cv2/version.py\n_skbuild/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3701171875,
          "content": "[submodule \"opencv\"]\n\tpath = opencv\n\turl = https://github.com/opencv/opencv.git\n[submodule \"opencv_contrib\"]\n\tpath = opencv_contrib\n\turl = https://github.com/opencv/opencv_contrib.git\n[submodule \"multibuild\"]\n\tpath = multibuild\n\turl = https://github.com/multi-build/multibuild.git\n[submodule \"opencv_extra\"]\n\tpath = opencv_extra\n\turl = https://github.com/opencv/opencv_extra.git\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.205078125,
          "content": "## Contributing\n\nThank you for considering contributing to opencv-python.\n\n### 1. Where do I go from here?\n\nIf you've noticed a bug or have a question that doesn't belong on\n[Stack Overflow](http://stackoverflow.com/questions/tagged/opencv-python),\n[search the project issue tracker](https://github.com/opencv/opencv-python/issues?q=something) or\n[search OpenCV issue tracker](https://github.com/opencv/opencv/issues?q=is%3Aissue+is%3Aopen+label%3A%22category%3A+python+bindings%22)\nto see if someone else in the community has already created a ticket.\nIf not, go ahead and:\n- [make new one for opencv-python](https://github.com/opencv/opencv-python/issues/new) if you cannot load package or some functionality is not available!\n- [make new one for OpenCV](https://github.com/opencv/opencv-python/issues/new) if something went wrong with some function, class  or method in code!\n\n### 2. Fork & create a branch\n\nIf this is something you think you can fix, then\n[fork opencv-python](https://help.github.com/articles/fork-a-repo)\nand create a branch with a descriptive name.\n\n### 3. Make your changes\n\nMake required changes.\n\n### 4. Create a pull request\n\n[Make a Pull Request.](https://help.github.com/articles/creating-a-pull-request)\n"
        },
        {
          "name": "LICENSE-3RD-PARTY.txt",
          "type": "blob",
          "size": 148.7890625,
          "content": "OpenCV library is redistributed within opencv-python package.\nThis license applies to OpenCV binary in the directory cv2/.\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n------------------------------------------------------------------------------\nlibvpx is redistributed within all opencv-python Linux packages.\nThis license applies to libvpx binary in the directory cv2/.\n\nCopyright (c) 2010, The WebM Project authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\n  * Neither the name of Google, nor the WebM Project, nor the names\n    of its contributors may be used to endorse or promote products\n    derived from this software without specific prior written\n    permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nFFmpeg is redistributed within all opencv-python packages.\n\nLibbluray, libgnutls, libnettle, libhogweed, libintl, libmp3lame, libp11,\nlibrtmp, libsoxr and libtasn1 are redistributed within all opencv-python macOS packages.\n\nThis license applies to the above library binaries in the directory cv2/.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n------------------------------------------------------------------------------\nQt 5 is redistributed within non-headless opencv-python Linux and macOS packages.\nlibgmp is redistributed within opencv-python macOS packages.\nlibidn2 is redistributed within opencv-python macOS packages.\nlibunistring is redistributed within opencv-python macOS packages.\nThis license applies to the above binaries in the directory cv2/.\n\n                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n------------------------------------------------------------------------------\nbzip2 is redistributed within all opencv-python Linux packages.\nThis license applies to libbz2 binary in the directory cv2/.\n\nThis program, \"bzip2\", the associated library \"libbzip2\", and all\ndocumentation, are copyright (C) 1996-2010 Julian R Seward.  All\nrights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. The origin of this software must not be misrepresented; you must\n   not claim that you wrote the original software.  If you use this\n   software in a product, an acknowledgment in the product\n   documentation would be appreciated but is not required.\n\n3. Altered source versions must be plainly marked as such, and must\n   not be misrepresented as being the original software.\n\n4. The name of the author may not be used to endorse or promote\n   products derived from this software without specific prior written\n   permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS\nOR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nJulian Seward, jseward@bzip.org\nbzip2/libbzip2 version 1.0.6 of 6 September 2010\n\n------------------------------------------------------------------------------\nlibcrypto and libssl are redistributed within all opencv-python Linux and macOS packages.\nlibopencore-amrnb and libopencore-amrwb are redistributed within all opencv-python Linux and macOS packages.\nThis license applies to above binaries in the directory cv2/.\n\n  LICENSE ISSUES\n  ==============\n\n  The OpenSSL toolkit stays under a double license, i.e. both the conditions of\n  the OpenSSL License and the original SSLeay license apply to the toolkit.\n  See below for the actual license texts.\n\n  OpenSSL License\n  ---------------\n\n/* ====================================================================\n * Copyright (c) 1998-2019 The OpenSSL Project.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. All advertising materials mentioning features or use of this\n *    software must display the following acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)\"\n *\n * 4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to\n *    endorse or promote products derived from this software without\n *    prior written permission. For written permission, please contact\n *    openssl-core@openssl.org.\n *\n * 5. Products derived from this software may not be called \"OpenSSL\"\n *    nor may \"OpenSSL\" appear in their names without prior written\n *    permission of the OpenSSL Project.\n *\n * 6. Redistributions of any form whatsoever must retain the following\n *    acknowledgment:\n *    \"This product includes software developed by the OpenSSL Project\n *    for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n *\n * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY\n * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n * ====================================================================\n *\n * This product includes cryptographic software written by Eric Young\n * (eay@cryptsoft.com).  This product includes software written by Tim\n * Hudson (tjh@cryptsoft.com).\n *\n */\n\n Original SSLeay License\n -----------------------\n\n/* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\n * All rights reserved.\n *\n * This package is an SSL implementation written\n * by Eric Young (eay@cryptsoft.com).\n * The implementation was written so as to conform with Netscapes SSL.\n *\n * This library is free for commercial and non-commercial use as long as\n * the following conditions are adhered to.  The following conditions\n * apply to all code found in this distribution, be it the RC4, RSA,\n * lhash, DES, etc., code; not just the SSL code.  The SSL documentation\n * included with this distribution is covered by the same copyright terms\n * except that the holder is Tim Hudson (tjh@cryptsoft.com).\n *\n * Copyright remains Eric Young's, and as such any Copyright notices in\n * the code are not to be removed.\n * If this package is used in a product, Eric Young should be given attribution\n * as the author of the parts of the library used.\n * This can be in the form of a textual message at program startup or\n * in documentation (online or textual) provided with the package.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *    \"This product includes cryptographic software written by\n *     Eric Young (eay@cryptsoft.com)\"\n *    The word 'cryptographic' can be left out if the routines from the library\n *    being used are not cryptographic related :-).\n * 4. If you include any Windows specific code (or a derivative thereof) from\n *    the apps directory (application code) you must include an acknowledgement:\n *    \"This product includes software written by Tim Hudson (tjh@cryptsoft.com)\"\n *\n * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * The licence and distribution terms for any publicly available version or\n * derivative of this code cannot be changed.  i.e. this code cannot simply be\n * copied and put under another distribution licence\n * [including the GNU Public Licence.]\n */\n\n------------------------------------------------------------------------------\nlibfontconfig is redistributed within all opencv-python macOS packages.\nThis license applies to libfontconfig binary in the directory cv2/.\n\nCopyright © 2000,2001,2002,2003,2004,2006,2007 Keith Packard\nCopyright © 2005 Patrick Lam\nCopyright © 2009 Roozbeh Pournader\nCopyright © 2008,2009 Red Hat, Inc.\nCopyright © 2008 Danilo Šegan\nCopyright © 2012 Google, Inc.\n\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\nthe above copyright notice appear in all copies and that both that\ncopyright notice and this permission notice appear in supporting\ndocumentation, and that the name of the author(s) not be used in\nadvertising or publicity pertaining to distribution of the software without\nspecific, written prior permission.  The authors make no\nrepresentations about the suitability of this software for any purpose.  It\nis provided \"as is\" without express or implied warranty.\n\nTHE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\nINCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\nEVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\nDATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\n------------------------------------------------------------------------------\nlibfreetype is redistributed within opencv-python Linux and macOS packages.\nThis license applies to libfreetype binary in the directory cv2/.\n\n                    The FreeType Project LICENSE\n                    ----------------------------\n\n                            2006-Jan-27\n\n                    Copyright 1996-2002, 2006 by\n          David Turner, Robert Wilhelm, and Werner Lemberg\n\n\n\nIntroduction\n============\n\n  The FreeType  Project is distributed in  several archive packages;\n  some of them may contain, in addition to the FreeType font engine,\n  various tools and  contributions which rely on, or  relate to, the\n  FreeType Project.\n\n  This  license applies  to all  files found  in such  packages, and\n  which do not  fall under their own explicit  license.  The license\n  affects  thus  the  FreeType   font  engine,  the  test  programs,\n  documentation and makefiles, at the very least.\n\n  This  license   was  inspired  by  the  BSD,   Artistic,  and  IJG\n  (Independent JPEG  Group) licenses, which  all encourage inclusion\n  and  use of  free  software in  commercial  and freeware  products\n  alike.  As a consequence, its main points are that:\n\n    o We don't promise that this software works. However, we will be\n      interested in any kind of bug reports. (`as is' distribution)\n\n    o You can  use this software for whatever you  want, in parts or\n      full form, without having to pay us. (`royalty-free' usage)\n\n    o You may not pretend that  you wrote this software.  If you use\n      it, or  only parts of it,  in a program,  you must acknowledge\n      somewhere  in  your  documentation  that  you  have  used  the\n      FreeType code. (`credits')\n\n  We  specifically  permit  and  encourage  the  inclusion  of  this\n  software, with  or without modifications,  in commercial products.\n  We  disclaim  all warranties  covering  The  FreeType Project  and\n  assume no liability related to The FreeType Project.\n\n\n  Finally,  many  people  asked  us  for  a  preferred  form  for  a\n  credit/disclaimer to use in compliance with this license.  We thus\n  encourage you to use the following text:\n\n   \"\"\"\n    Portions of this software are copyright © <year> The FreeType\n    Project (www.freetype.org).  All rights reserved.\n   \"\"\"\n\n  Please replace <year> with the value from the FreeType version you\n  actually use.\n\n\nLegal Terms\n===========\n\n0. Definitions\n--------------\n\n  Throughout this license,  the terms `package', `FreeType Project',\n  and  `FreeType  archive' refer  to  the  set  of files  originally\n  distributed  by the  authors  (David Turner,  Robert Wilhelm,  and\n  Werner Lemberg) as the `FreeType Project', be they named as alpha,\n  beta or final release.\n\n  `You' refers to  the licensee, or person using  the project, where\n  `using' is a generic term including compiling the project's source\n  code as  well as linking it  to form a  `program' or `executable'.\n  This  program is  referred to  as  `a program  using the  FreeType\n  engine'.\n\n  This  license applies  to all  files distributed  in  the original\n  FreeType  Project,   including  all  source   code,  binaries  and\n  documentation,  unless  otherwise  stated   in  the  file  in  its\n  original, unmodified form as  distributed in the original archive.\n  If you are  unsure whether or not a particular  file is covered by\n  this license, you must contact us to verify this.\n\n  The FreeType  Project is copyright (C) 1996-2000  by David Turner,\n  Robert Wilhelm, and Werner Lemberg.  All rights reserved except as\n  specified below.\n\n1. No Warranty\n--------------\n\n  THE FREETYPE PROJECT  IS PROVIDED `AS IS' WITHOUT  WARRANTY OF ANY\n  KIND, EITHER  EXPRESS OR IMPLIED,  INCLUDING, BUT NOT  LIMITED TO,\n  WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR\n  PURPOSE.  IN NO EVENT WILL ANY OF THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE  FOR ANY DAMAGES CAUSED  BY THE USE OR  THE INABILITY TO\n  USE, OF THE FREETYPE PROJECT.\n\n2. Redistribution\n-----------------\n\n  This  license  grants  a  worldwide, royalty-free,  perpetual  and\n  irrevocable right  and license to use,  execute, perform, compile,\n  display,  copy,   create  derivative  works   of,  distribute  and\n  sublicense the  FreeType Project (in  both source and  object code\n  forms)  and  derivative works  thereof  for  any  purpose; and  to\n  authorize others  to exercise  some or all  of the  rights granted\n  herein, subject to the following conditions:\n\n    o Redistribution of  source code  must retain this  license file\n      (`FTL.TXT') unaltered; any  additions, deletions or changes to\n      the original  files must be clearly  indicated in accompanying\n      documentation.   The  copyright   notices  of  the  unaltered,\n      original  files must  be  preserved in  all  copies of  source\n      files.\n\n    o Redistribution in binary form must provide a  disclaimer  that\n      states  that  the software is based in part of the work of the\n      FreeType Team,  in  the  distribution  documentation.  We also\n      encourage you to put an URL to the FreeType web page  in  your\n      documentation, though this isn't mandatory.\n\n  These conditions  apply to any  software derived from or  based on\n  the FreeType Project,  not just the unmodified files.   If you use\n  our work, you  must acknowledge us.  However, no  fee need be paid\n  to us.\n\n3. Advertising\n--------------\n\n  Neither the  FreeType authors and  contributors nor you  shall use\n  the name of the  other for commercial, advertising, or promotional\n  purposes without specific prior written permission.\n\n  We suggest,  but do not require, that  you use one or  more of the\n  following phrases to refer  to this software in your documentation\n  or advertising  materials: `FreeType Project',  `FreeType Engine',\n  `FreeType library', or `FreeType Distribution'.\n\n  As  you have  not signed  this license,  you are  not  required to\n  accept  it.   However,  as  the FreeType  Project  is  copyrighted\n  material, only  this license, or  another one contracted  with the\n  authors, grants you  the right to use, distribute,  and modify it.\n  Therefore,  by  using,  distributing,  or modifying  the  FreeType\n  Project, you indicate that you understand and accept all the terms\n  of this license.\n\n4. Contacts\n-----------\n\n  There are two mailing lists related to FreeType:\n\n    o freetype@nongnu.org\n\n      Discusses general use and applications of FreeType, as well as\n      future and  wanted additions to the  library and distribution.\n      If  you are looking  for support,  start in  this list  if you\n      haven't found anything to help you in the documentation.\n\n    o freetype-devel@nongnu.org\n\n      Discusses bugs,  as well  as engine internals,  design issues,\n      specific licenses, porting, etc.\n\n  Our home page can be found at\n\n    https://www.freetype.org\n\n------------------------------------------------------------------------------\nlibpng is redistributed within all opencv-python Linux and macOS packages.\nThis license applies to libpng binary in the directory cv2/.\n\nPNG Reference Library License version 2\n---------------------------------------\n\n * Copyright (c) 1995-2019 The PNG Reference Library Authors.\n * Copyright (c) 2018-2019 Cosmin Truta.\n * Copyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson.\n * Copyright (c) 1996-1997 Andreas Dilger.\n * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n\nThe software is supplied \"as is\", without warranty of any kind,\nexpress or implied, including, without limitation, the warranties\nof merchantability, fitness for a particular purpose, title, and\nnon-infringement.  In no event shall the Copyright owners, or\nanyone distributing the software, be liable for any damages or\nother liability, whether in contract, tort or otherwise, arising\nfrom, out of, or in connection with the software, or the use or\nother dealings in the software, even if advised of the possibility\nof such damage.\n\nPermission is hereby granted to use, copy, modify, and distribute\nthis software, or portions hereof, for any purpose, without fee,\nsubject to the following restrictions:\n\n 1. The origin of this software must not be misrepresented; you\n    must not claim that you wrote the original software.  If you\n    use this software in a product, an acknowledgment in the product\n    documentation would be appreciated, but is not required.\n\n 2. Altered source versions must be plainly marked as such, and must\n    not be misrepresented as being the original software.\n\n 3. This Copyright notice may not be removed or altered from any\n    source or altered source distribution.\n\n\nPNG Reference Library License version 1 (for libpng 0.5 through 1.6.35)\n-----------------------------------------------------------------------\n\nlibpng versions 1.0.7, July 1, 2000, through 1.6.35, July 15, 2018 are\nCopyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson, are\nderived from libpng-1.0.6, and are distributed according to the same\ndisclaimer and license as libpng-1.0.6 with the following individuals\nadded to the list of Contributing Authors:\n\n    Simon-Pierre Cadieux\n    Eric S. Raymond\n    Mans Rullgard\n    Cosmin Truta\n    Gilles Vollant\n    James Yu\n    Mandar Sahastrabuddhe\n    Google Inc.\n    Vadim Barkov\n\nand with the following additions to the disclaimer:\n\n    There is no warranty against interference with your enjoyment of\n    the library or against infringement.  There is no warranty that our\n    efforts or the library will fulfill any of your particular purposes\n    or needs.  This library is provided with all faults, and the entire\n    risk of satisfactory quality, performance, accuracy, and effort is\n    with the user.\n\nSome files in the \"contrib\" directory and some configure-generated\nfiles that are distributed with libpng have other copyright owners, and\nare released under other open source licenses.\n\nlibpng versions 0.97, January 1998, through 1.0.6, March 20, 2000, are\nCopyright (c) 1998-2000 Glenn Randers-Pehrson, are derived from\nlibpng-0.96, and are distributed according to the same disclaimer and\nlicense as libpng-0.96, with the following individuals added to the\nlist of Contributing Authors:\n\n    Tom Lane\n    Glenn Randers-Pehrson\n    Willem van Schaik\n\nlibpng versions 0.89, June 1996, through 0.96, May 1997, are\nCopyright (c) 1996-1997 Andreas Dilger, are derived from libpng-0.88,\nand are distributed according to the same disclaimer and license as\nlibpng-0.88, with the following individuals added to the list of\nContributing Authors:\n\n    John Bowler\n    Kevin Bracey\n    Sam Bushell\n    Magnus Holmgren\n    Greg Roelofs\n    Tom Tanner\n\nSome files in the \"scripts\" directory have other copyright owners,\nbut are released under this license.\n\nlibpng versions 0.5, May 1995, through 0.88, January 1996, are\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n\nFor the purposes of this copyright and license, \"Contributing Authors\"\nis defined as the following set of individuals:\n\n    Andreas Dilger\n    Dave Martindale\n    Guy Eric Schalnat\n    Paul Schmidt\n    Tim Wegner\n\nThe PNG Reference Library is supplied \"AS IS\".  The Contributing\nAuthors and Group 42, Inc. disclaim all warranties, expressed or\nimplied, including, without limitation, the warranties of\nmerchantability and of fitness for any purpose.  The Contributing\nAuthors and Group 42, Inc. assume no liability for direct, indirect,\nincidental, special, exemplary, or consequential damages, which may\nresult from the use of the PNG Reference Library, even if advised of\nthe possibility of such damage.\n\nPermission is hereby granted to use, copy, modify, and distribute this\nsource code, or portions hereof, for any purpose, without fee, subject\nto the following restrictions:\n\n 1. The origin of this source code must not be misrepresented.\n\n 2. Altered versions must be plainly marked as such and must not\n    be misrepresented as being the original source.\n\n 3. This Copyright notice may not be removed or altered from any\n    source or altered source distribution.\n\nThe Contributing Authors and Group 42, Inc. specifically permit,\nwithout fee, and encourage the use of this source code as a component\nto supporting the PNG file format in commercial products.  If you use\nthis source code in a product, acknowledgment is not required but would\nbe appreciated.\n\n------------------------------------------------------------------------------\nlibz is redistributed within all opencv-python Linux packages.\nThis license applies to libz binary in the directory cv2/.\n\n  Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n\n------------------------------------------------------------------------------\nlibdav1d is redistributed within opencv-python macOS packages.\nThis license applies to libdav1d binary in the directory cv2/.\n\nCopyright © 2018-2019, VideoLAN and dav1d authors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibffi is redistributed within opencv-python macOS packages.\nThis license applies to libffi binary in the directory cv2/.\n\nlibffi - Copyright (c) 1996-2020  Anthony Green, Red Hat, Inc and others.\nSee source files for details.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n``Software''), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n------------------------------------------------------------------------------\nlibogg is redistributed within opencv-python macOS packages.\nThis license applies to libogg binary in the directory cv2/.\n\nCopyright (c) 2002, Xiph.org Foundation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION\nOR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibopenjp2 is redistributed within opencv-python macOS packages.\nThis license applies to libopenjp2 binary in the directory cv2/.\n\nThe copyright in this software is being made available under the 2-clauses\nBSD License, included below. This software may be subject to other third\nparty and contributor rights, including patent rights, and no such rights\nare granted under this license.\n\nCopyright (c) 2002-2014, Universite catholique de Louvain (UCL), Belgium\nCopyright (c) 2002-2014, Professor Benoit Macq\nCopyright (c) 2003-2014, Antonin Descampe\nCopyright (c) 2003-2009, Francois-Olivier Devaux\nCopyright (c) 2005, Herve Drolon, FreeImage Team\nCopyright (c) 2002-2003, Yannick Verschueren\nCopyright (c) 2001-2003, David Janssens\nCopyright (c) 2011-2012, Centre National d'Etudes Spatiales (CNES), France\nCopyright (c) 2012, CS Systemes d'Information, France\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS'\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibopus is redistributed within opencv-python macOS packages.\nThis license applies to libopus binary in the directory cv2/.\n\nCopyright 2001-2011 Xiph.Org, Skype Limited, Octasic,\n                    Jean-Marc Valin, Timothy B. Terriberry,\n                    CSIRO, Gregory Maxwell, Mark Borgerding,\n                    Erik de Castro Lopo\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of Internet Society, IETF or IETF Trust, nor the\nnames of specific contributors, may be used to endorse or promote\nproducts derived from this software without specific prior written\npermission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER\nOR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nOpus is subject to the royalty-free patent licenses which are\nspecified at:\n\nXiph.Org Foundation:\nhttps://datatracker.ietf.org/ipr/1524/\n\nMicrosoft Corporation:\nhttps://datatracker.ietf.org/ipr/1914/\n\nBroadcom Corporation:\nhttps://datatracker.ietf.org/ipr/1526/\n\n------------------------------------------------------------------------------\nlibrav1e is redistributed within opencv-python macOS packages.\nThis license applies to librav1e binary in the directory cv2/.\n\nBSD 2-Clause License\n\nCopyright (c) 2017-2020, the rav1e contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibsnappy is redistributed within opencv-python macOS packages.\nThis license applies to libsnappy binary in the directory cv2/.\n\nCopyright 2011, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibspeex is redistributed within opencv-python macOS packages.\nThis license applies to libspeex binary in the directory cv2/.\n\nCopyright 2002-2008   Xiph.org Foundation\nCopyright 2002-2008   Jean-Marc Valin\nCopyright 2005-2007 Analog Devices Inc.\nCopyright 2005-2008 Commonwealth Scientific and Industrial Research\n                        Organisation (CSIRO)\nCopyright 1993, 2002, 2006 David Rowe\nCopyright 2003    EpicGames\nCopyright 1992-1994 Jutta Degener, Carsten Bormann\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibsrt is redistributed within opencv-python macOS packages.\nThis license applies to libsrt binary in the directory cv2/.\n\n/*\n *\n * Copyright (c) 2001-2017 Cisco Systems, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n *   Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n *\n *   Redistributions in binary form must reproduce the above\n *   copyright notice, this list of conditions and the following\n *   disclaimer in the documentation and/or other materials provided\n *   with the distribution.\n *\n *   Neither the name of the Cisco Systems, Inc. nor the names of its\n *   contributors may be used to endorse or promote products derived\n *   from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n\n Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n------------------------------------------------------------------------------\nlibtheoradec and libtheoraenc are redistributed within opencv-python macOS packages.\nThis license applies to libtheoradec and libtheoraenc binaries in the directory cv2/.\n\n  Copyright (C) 2002-2009 Xiph.org Foundation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION\nOR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibwebp and libwebpmux are redistributed within all opencv-python packages.\nThis license applies to libwebp  and libwebpmux binaries in the directory cv2/.\n\nCopyright (c) 2010, Google Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\n  * Neither the name of Google nor the names of its contributors may\n    be used to endorse or promote products derived from this software\n    without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nlibvorbis and libvorbisenc are redistributed within opencv-python macOS packages.\nThis license applies to libvorbis and libvorbisenc binaries in the directory cv2/.\n\nCopyright (c) 2002-2020 Xiph.org Foundation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION\nOR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nLibxcb utility libraries are redistributed within opencv-python non-headless Linux packages.\nThis license applies to libxcb related binaries in the directory cv2/.\n\nCopyright (C) 2001-2006 Bart Massey, Jamey Sharp, and Josh Triplett.\nAll Rights Reserved.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall\nbe included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY\nKIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR\nPURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the names of the authors\nor their institutions shall not be used in advertising or\notherwise to promote the sale, use or other dealings in this\nSoftware without prior written authorization from the\nauthors.\n\n------------------------------------------------------------------------------\nLibxcb-image is redistributed within opencv-python non-headless Linux packages.\nThis license applies to libxcb-image binary in the directory cv2/.\n\nCopyright © 2007-2008 Bart Massey <bart@cs.pdx.edu>\nCopyright © 2008 Julien Danjou <julien@danjou.info>\nCopyright © 2008 Keith Packard <keithp@keithp.com>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the names of the authors or\ntheir institutions shall not be used in advertising or otherwise to\npromote the sale, use or other dealings in this Software without\nprior written authorization from the authors.\n\n------------------------------------------------------------------------------\nLibxcb-util is redistributed within opencv-python non-headless Linux packages.\nThis license applies to libxcb-util binary in the directory cv2/.\n\nCopyright © 2008 Bart Massey <bart@cs.pdx.edu>\nCopyright © 2008 Ian Osgood <iano@quirkster.com>\nCopyright © 2008 Jamey Sharp <jamey@minilop.net>\nCopyright © 2008 Josh Triplett <josh@freedesktop.org>\nCopyright © 2008-2009 Julien Danjou <julien@danjou.info>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the names of the authors or\ntheir institutions shall not be used in advertising or otherwise to\npromote the sale, use or other dealings in this Software without\nprior written authorization from the authors.\n\n------------------------------------------------------------------------------\nLibxcb-render-util is redistributed within opencv-python non-headless Linux packages.\nThis license applies to libxcb-render-util binary in the directory cv2/.\n\nCopyright © 2000 Keith Packard\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\nthe above copyright notice appear in all copies and that both that\ncopyright notice and this permission notice appear in supporting\ndocumentation, and that the name of Keith Packard not be used in\nadvertising or publicity pertaining to distribution of the software without\nspecific, written prior permission.  Keith Packard makes no\nrepresentations about the suitability of this software for any purpose.  It\nis provided \"as is\" without express or implied warranty.\n\nKEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,\nINCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO\nEVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR\nCONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,\nDATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\nCopyright © 2006 Jamey Sharp.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the names of the authors or their\ninstitutions shall not be used in advertising or otherwise to promote the\nsale, use or other dealings in this Software without prior written\nauthorization from the authors.\n\nCopyright © 2006 Ian Osgood\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the names of the authors or their\ninstitutions shall not be used in advertising or otherwise to promote the\nsale, use or other dealings in this Software without prior written\nauthorization from the authors.\n\n------------------------------------------------------------------------------\nLibxcb-icccm is redistributed within opencv-python non-headless Linux packages.\nThis license applies to Libxcb-icccm binary in the directory cv2/.\n\nCopyright © 2008-2011 Arnaud Fontaine <arnau@debian.org>\nCopyright © 2007-2008 Vincent Torri <vtorri@univ-evry.fr>\n\nPermission  is  hereby  granted,  free  of charge,  to  any  person\nobtaining  a copy  of  this software  and associated  documentation\nfiles   (the  \"Software\"),   to  deal   in  the   Software  without\nrestriction, including without limitation  the rights to use, copy,\nmodify, merge, publish,  distribute, sublicense, and/or sell copies\nof  the Software, and  to permit  persons to  whom the  Software is\nfurnished to do so, subject to the following conditions:\n\nThe  above copyright  notice and  this permission  notice  shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE  IS PROVIDED  \"AS IS\", WITHOUT  WARRANTY OF  ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT  NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY,   FITNESS    FOR   A   PARTICULAR    PURPOSE   AND\nNONINFRINGEMENT. IN  NO EVENT SHALL  THE AUTHORS BE LIABLE  FOR ANY\nCLAIM,  DAMAGES  OR  OTHER  LIABILITY,  WHETHER  IN  AN  ACTION  OF\nCONTRACT, TORT OR OTHERWISE, ARISING  FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as  contained in  this notice, the  names of the  authors or\ntheir institutions shall not be used in advertising or otherwise to\npromote the  sale, use or  other dealings in this  Software without\nprior written authorization from the authors.\n\n------------------------------------------------------------------------------\nlibXau is redistributed within opencv-python non-headless Linux packages.\nThis license applies to libXau binary in the directory cv2/.\n\nCopyright 1988, 1993, 1994, 1998  The Open Group\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\nthe above copyright notice appear in all copies and that both that\ncopyright notice and this permission notice appear in supporting\ndocumentation.\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nOPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the name of The Open Group shall not be\nused in advertising or otherwise to promote the sale, use or other dealings\nin this Software without prior written authorization from The Open Group.\n\n------------------------------------------------------------------------------\nVulkan headers are redistributed within all opencv-python packages.\nThis license applies to Vulkan headers in the directory 3rdparty/include/vulkan.\n\nCopyright (c) 2015-2018 The Khronos Group Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n------------------------------------------------------------------------------\nLibjpeg-turbo is redistributed within all opencv-python packages as build option.\n\nlibjpeg-turbo Licenses\n======================\n\nlibjpeg-turbo is covered by three compatible BSD-style open source licenses:\n\n- The IJG (Independent JPEG Group) License, which is listed in\n  [README.ijg](README.ijg)\n\n  This license applies to the libjpeg API library and associated programs\n  (any code inherited from libjpeg, and any modifications to that code.)\n\n- The Modified (3-clause) BSD License, which is listed below\n\n  This license covers the TurboJPEG API library and associated programs, as\n  well as the build system.\n\n- The [zlib License](https://opensource.org/licenses/Zlib)\n\n  This license is a subset of the other two, and it covers the libjpeg-turbo\n  SIMD extensions.\n\n\nComplying with the libjpeg-turbo Licenses\n=========================================\n\nThis section provides a roll-up of the libjpeg-turbo licensing terms, to the\nbest of our understanding.\n\n1.  If you are distributing a modified version of the libjpeg-turbo source,\n    then:\n\n    1.  You cannot alter or remove any existing copyright or license notices\n        from the source.\n\n        **Origin**\n        - Clause 1 of the IJG License\n        - Clause 1 of the Modified BSD License\n        - Clauses 1 and 3 of the zlib License\n\n    2.  You must add your own copyright notice to the header of each source\n        file you modified, so others can tell that you modified that file (if\n        there is not an existing copyright header in that file, then you can\n        simply add a notice stating that you modified the file.)\n\n        **Origin**\n        - Clause 1 of the IJG License\n        - Clause 2 of the zlib License\n\n    3.  You must include the IJG README file, and you must not alter any of the\n        copyright or license text in that file.\n\n        **Origin**\n        - Clause 1 of the IJG License\n\n2.  If you are distributing only libjpeg-turbo binaries without the source, or\n    if you are distributing an application that statically links with\n    libjpeg-turbo, then:\n\n    1.  Your product documentation must include a message stating:\n\n        This software is based in part on the work of the Independent JPEG\n        Group.\n\n        **Origin**\n        - Clause 2 of the IJG license\n\n    2.  If your binary distribution includes or uses the TurboJPEG API, then\n        your product documentation must include the text of the Modified BSD\n        License (see below.)\n\n        **Origin**\n        - Clause 2 of the Modified BSD License\n\n3.  You cannot use the name of the IJG or The libjpeg-turbo Project or the\n    contributors thereof in advertising, publicity, etc.\n\n    **Origin**\n    - IJG License\n    - Clause 3 of the Modified BSD License\n\n4.  The IJG and The libjpeg-turbo Project do not warrant libjpeg-turbo to be\n    free of defects, nor do we accept any liability for undesirable\n    consequences resulting from your use of the software.\n\n    **Origin**\n    - IJG License\n    - Modified BSD License\n    - zlib License\n\n\nThe Modified (3-clause) BSD License\n===================================\n\nCopyright (C)2009-2022 D. R. Commander.  All Rights Reserved.<br>\nCopyright (C)2015 Viktor Szathmáry.  All Rights Reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n- Neither the name of the libjpeg-turbo Project nor the names of its\n  contributors may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\",\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n\nWhy Three Licenses?\n===================\n\nThe zlib License could have been used instead of the Modified (3-clause) BSD\nLicense, and since the IJG License effectively subsumes the distribution\nconditions of the zlib License, this would have effectively placed\nlibjpeg-turbo binary distributions under the IJG License.  However, the IJG\nLicense specifically refers to the Independent JPEG Group and does not extend\nattribution and endorsement protections to other entities.  Thus, it was\ndesirable to choose a license that granted us the same protections for new code\nthat were granted to the IJG for code derived from their software.\n\n------------------------------------------------------------------------------\nLibspng is redistributed within all opencv-python packages as build option.\n\nBSD 2-Clause License\n\nCopyright (c) 2018-2022, Randy <randy408@protonmail.com>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nQUIRC library is redistributed within all opencv-python packages.\n\nquirc -- QR-code recognition library\nCopyright (C) 2010-2012 Daniel Beer <dlbeer@gmail.com>\n\nPermission to use, copy, modify, and/or distribute this software for\nany purpose with or without fee is hereby granted, provided that the\nabove copyright notice and this permission notice appear in all\ncopies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nAUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL\nDAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR\nPROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n\n------------------------------------------------------------------------------\nFlatbuffers library is redistributed within all opencv-python packages.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n------------------------------------------------------------------------------\nProtobuf library is redistributed within all opencv-python packages.\n\nCopyright 2008 Google Inc.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCode generated by the Protocol Buffer compiler is owned by the owner\nof the input file used when generating it.  This code is not\nstandalone and requires a support library to be linked with it.  This\nsupport library is itself covered by the above license.\n\n------------------------------------------------------------------------------\nOpenJPEG library is redistributed within all opencv-python packages.\n\n/*\n * The copyright in this software is being made available under the 2-clauses\n * BSD License, included below. This software may be subject to other third\n * party and contributor rights, including patent rights, and no such rights\n * are granted under this license.\n *\n * Copyright (c) 2002-2014, Universite catholique de Louvain (UCL), Belgium\n * Copyright (c) 2002-2014, Professor Benoit Macq\n * Copyright (c) 2003-2014, Antonin Descampe\n * Copyright (c) 2003-2009, Francois-Olivier Devaux\n * Copyright (c) 2005, Herve Drolon, FreeImage Team\n * Copyright (c) 2002-2003, Yannick Verschueren\n * Copyright (c) 2001-2003, David Janssens\n * Copyright (c) 2011-2012, Centre National d'Etudes Spatiales (CNES), France\n * Copyright (c) 2012, CS Systemes d'Information, France\n *\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS'\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\n------------------------------------------------------------------------------\nTIFF library is redistributed within all opencv-python packages.\n\nCopyright (c) 1988-1997 Sam Leffler\nCopyright (c) 1991-1997 Silicon Graphics, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and\nits documentation for any purpose is hereby granted without fee, provided\nthat (i) the above copyright notices and this permission notice appear in\nall copies of the software and related documentation, and (ii) the names of\nSam Leffler and Silicon Graphics may not be used in any advertising or\npublicity relating to the software without the specific, prior written\npermission of Sam Leffler and Silicon Graphics.\n\nTHE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\nEXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\nWARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\nIN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\nANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\nOR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\nWHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\nLIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\nOF THIS SOFTWARE.\n\n------------------------------------------------------------------------------\nOpenEXR library is redistributed within all opencv-python packages.\n\nCopyright (c) 2006, Industrial Light & Magic, a division of Lucasfilm\nEntertainment Company Ltd.  Portions contributed and copyright held by\nothers as indicated.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above\n      copyright notice, this list of conditions and the following\n      disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided with\n      the distribution.\n\n    * Neither the name of Industrial Light & Magic nor the names of\n      any other contributors to this software may be used to endorse or\n      promote products derived from this software without specific prior\n      written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------------------------------------------------------------------\nIntel(R) IPP ICV library statically linked within x86 and x86_64 opencv-python packages.\n\nIntel(R) Integrated Performance Primitives 2021 Update 10\n\nIntel Simplified Software License (Version October 2022)\n\nIntel(R) Integrated Performance Primitives (Intel(R) IPP) : Copyright (C) 1997 Intel Corporation\n\nUse and Redistribution. You may use and redistribute the software, which is\nprovided in binary form only, (the \"Software\"), without modification,\nprovided the following conditions are met:\n\n* Redistributions must reproduce the above copyright notice and these\n  terms of use in the Software and in the documentation and/or other materials\n  provided with the distribution.\n* Neither the name of Intel nor the names of its suppliers may be used to\n  endorse or promote products derived from this Software without specific\n  prior written permission.\n* No reverse engineering, decompilation, or disassembly of the Software is\n  permitted, nor any modification or alteration of the Software or its operation\n  at any time, including during execution.\n\nNo other licenses. Except as provided in the preceding section, Intel grants no\nlicenses or other rights by implication, estoppel or otherwise to, patent,\ncopyright, trademark, trade name, service mark or other intellectual property\nlicenses or rights of Intel.\n\nThird party software.  \"Third Party Software\" means the files (if any) listed\nin the \"third-party-software.txt\" or other similarly-named text file that may\nbe included with the Software. Third Party Software, even if included with the\ndistribution of the Software, may be governed by separate license terms, including\nwithout limitation, third party license terms, open source software notices and\nterms, and/or other Intel software license terms. These separate license terms\nsolely govern Your use of the Third Party Software.\n\nDISCLAIMER. THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT ARE\nDISCLAIMED. THIS SOFTWARE IS NOT INTENDED FOR USE IN SYSTEMS OR APPLICATIONS\nWHERE FAILURE OF THE SOFTWARE MAY CAUSE PERSONAL INJURY OR DEATH AND YOU AGREE\nTHAT YOU ARE FULLY RESPONSIBLE FOR ANY CLAIMS, COSTS, DAMAGES, EXPENSES, AND\nATTORNEYS' FEES ARISING OUT OF ANY SUCH USE, EVEN IF ANY CLAIM ALLEGES THAT\nINTEL WAS NEGLIGENT REGARDING THE DESIGN OR MANUFACTURE OF THE SOFTWARE.\n\nLIMITATION OF LIABILITY. IN NO EVENT WILL INTEL BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nNo support. Intel may make changes to the Software, at any time without notice,\nand is not obligated to support, update or provide training for the Software.\n\nTermination. Your right to use the Software is terminated in the event of your\nbreach of this license.\n\nFeedback. Should you provide Intel with comments, modifications, corrections,\nenhancements or other input (\"Feedback\") related to the Software, Intel will be\nfree to use, disclose, reproduce, license or otherwise distribute or exploit the\nFeedback in its sole discretion without any obligations or restrictions of any\nkind, including without limitation, intellectual property rights or licensing\nobligations.\n\nCompliance with laws. You agree to comply with all relevant laws and regulations\ngoverning your use, transfer, import or export (or prohibition thereof) of the\nSoftware.\n\nGoverning law. All disputes will be governed by the laws of the United States of\nAmerica and the State of Delaware without reference to conflict of law\nprinciples and subject to the exclusive jurisdiction of the state or federal\ncourts sitting in the State of Delaware, and each party agrees that it submits\nto the personal jurisdiction and venue of those courts and waives any\nobjections. THE UNITED NATIONS CONVENTION ON CONTRACTS FOR THE INTERNATIONAL\nSALE OF GOODS (1980) IS SPECIFICALLY EXCLUDED AND WILL NOT APPLY TO THE SOFTWARE.\n\n------------------------------------------------------------------------------\nOrbbec SDK distributed with arm64 MacOS packages.\n\nMIT License\n\nCopyright (c) 2023 OrbbecDeveloper\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) Olli-Pekka Heinisuo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.296875,
          "content": "include LICENSE-3RD-PARTY.txt\ninclude LICENSE.txt\ninclude README.md\ninclude find_version.py\ninclude setup.py\ninclude pyproject.toml\nrecursive-include cv2 *\nrecursive-include docker *\nrecursive-include opencv *\nrecursive-include opencv_contrib *\nrecursive-include patches *\nrecursive-include scripts *.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.4853515625,
          "content": "[![Downloads](https://static.pepy.tech/badge/opencv-python)](http://pepy.tech/project/opencv-python)\n\n### Keep OpenCV Free\n\nOpenCV is raising funds to keep the library free for everyone, and we need the support of the entire community to do it. [Donate to OpenCV on Github](https://github.com/sponsors/opencv) to show your support.\n\n- [OpenCV on Wheels](#opencv-on-wheels)\n  - [Installation and Usage](#installation-and-usage)\n- [Frequently Asked Questions](#frequently-asked-questions)\n- [Documentation for opencv-python](#documentation-for-opencv-python)\n  - [CI build process](#ci-build-process)\n  - [Manual builds](#manual-builds)\n    - [Manual debug builds](#manual-debug-builds)\n    - [Source distributions](#source-distributions)\n  - [Licensing](#licensing)\n  - [Versioning](#versioning)\n  - [Releases](#releases)\n  - [Development builds](#development-builds)\n  - [Manylinux wheels](#manylinux-wheels)\n  - [Supported Python versions](#supported-python-versions)\n  - [Backward compatibility](#backward-compatibility)\n\n## OpenCV on Wheels\n\nPre-built CPU-only OpenCV packages for Python.\n\nCheck the manual build section if you wish to compile the bindings from source to enable additional modules such as CUDA.\n\n### Installation and Usage\n\n1. If you have previous/other manually installed (= not installed via ``pip``) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.\n2. Make sure that your `pip` version is up-to-date (19.3 is the minimum supported version): `pip install --upgrade pip`. Check version with `pip -V`. For example Linux distributions ship usually with very old `pip` versions which cause a lot of unexpected problems especially with the `manylinux` format.\n3. Select the correct package for your environment:\n\n    There are four different packages (see options 1, 2, 3 and 4 below) and you should **SELECT ONLY ONE OF THEM**. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (`cv2`). If you installed multiple different packages in the same environment, uninstall them all with ``pip uninstall`` and reinstall only one package.\n\n    **a.** Packages for standard desktop environments (Windows, macOS, almost any GNU/Linux distribution)\n\n    - Option 1 - Main modules package: ``pip install opencv-python``\n    - Option 2 - Full package (contains both main modules and contrib/extra modules): ``pip install opencv-contrib-python`` (check contrib/extra modules listing from [OpenCV documentation](https://docs.opencv.org/master/))\n\n    **b.** Packages for server (headless) environments (such as Docker, cloud environments etc.), no GUI library dependencies\n\n    These packages are smaller than the two other packages above because they do not contain any GUI functionality (not compiled with Qt / other GUI components). This means that the packages avoid a heavy dependency chain to X11 libraries and you will have for example smaller Docker images as a result. You should always use these packages if you do not use `cv2.imshow` et al. or you are using some other package (such as PyQt) than OpenCV to create your GUI.\n\n    - Option 3 - Headless main modules package: ``pip install opencv-python-headless``\n    - Option 4 - Headless full package (contains both main modules and contrib/extra modules): ``pip install opencv-contrib-python-headless`` (check contrib/extra modules listing from [OpenCV documentation](https://docs.opencv.org/master/))\n\n4. Import the package:\n\n    ``import cv2``\n\n    All packages contain Haar cascade files. ``cv2.data.haarcascades`` can be used as a shortcut to the data folder. For example:\n\n    ``cv2.CascadeClassifier(cv2.data.haarcascades + \"haarcascade_frontalface_default.xml\")``\n\n5. Read [OpenCV documentation](https://docs.opencv.org/master/)\n\n6. Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.\n\nFrequently Asked Questions\n--------------------------\n\n**Q: Do I need to install also OpenCV separately?**\n\nA: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.\n\n**Q: Pip install fails with ``ModuleNotFoundError: No module named 'skbuild'``?**\n\nSince ``opencv-python`` version 4.3.0.\\*, ``manylinux1`` wheels were replaced by ``manylinux2014`` wheels. If your pip is too old, it will try to use the new source distribution introduced in 4.3.0.38 to manually build OpenCV because it does not know how to install ``manylinux2014`` wheels. However, source build will also fail because of too old ``pip`` because it does not understand build dependencies in ``pyproject.toml``. To use the new ``manylinux2014`` pre-built wheels (or to build from source), your ``pip`` version must be >= 19.3. Please upgrade ``pip`` with ``pip install --upgrade pip``.\n\n**Q: Import fails on Windows: ``ImportError: DLL load failed: The specified module could not be found.``?**\n\nA: If the import fails on Windows, make sure you have [Visual C++ redistributable 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145) installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, [Universal C Runtime](https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows) might be also required.\n\nWindows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also [Windows Media Feature Pack](https://support.microsoft.com/en-us/help/3145500/media-feature-pack-list-for-windows-n-editions).\n\nIf you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called \"Media Foundation\" in the Server Manager. Beware, some posts advise to install \"Windows Server Essentials Media Pack\", but this one requires the \"Windows Server Essentials Experience\" role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the \"Media Foundation\" should be a safer choice.\n\nIf the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see [this issue](https://github.com/opencv/opencv-python/issues/36) for a manual fix.\n\nIf you still encounter the error after you have checked all the previous solutions, download [Dependencies](https://github.com/lucasg/Dependencies) and open the ``cv2.pyd`` (located usually at ``C:\\Users\\username\\AppData\\Local\\Programs\\Python\\PythonXX\\Lib\\site-packages\\cv2``) file with it to debug missing DLL issues.\n\n**Q: I have some other import errors?**\n\nA: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).\n\n**Q: Function foo() or method bar() returns wrong result, throws exception or crashes interpreter. What should I do?**\n\nA: The repository contains only OpenCV-Python package build scripts, but not OpenCV itself. Python bindings for OpenCV are developed in official OpenCV repository and it's the best place to report issues. Also please check [OpenCV wiki](https://github.com/opencv/opencv/wiki) and [the official OpenCV forum](https://forum.opencv.org/) before file new bugs.\n\n**Q: Why the packages do not include non-free algorithms?**\n\nA: Non-free algorithms such as SURF are not included in these packages because they are patented / non-free and therefore cannot be distributed as built binaries. Note that SIFT is included in the builds due to patent expiration since OpenCV versions 4.3.0 and 3.4.10. See this issue for more info: https://github.com/skvark/opencv-python/issues/126\n\n**Q: Why the package and import are different (opencv-python vs. cv2)?**\n\nA: It's easier for users to understand ``opencv-python`` than ``cv2`` and it makes it easier to find the package with search engines. `cv2` (old interface in old OpenCV versions was named as `cv`) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the ``import cv2``.\n\n## Documentation for opencv-python\n\n[![Windows Build Status](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_windows.yml/badge.svg)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_windows.yml)\n[![(Linux Build status)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_linux.yml/badge.svg)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_linux.yml)\n[![(Mac OS Build status)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_macos.yml/badge.svg)](https://github.com/opencv/opencv-python/actions/workflows/build_wheels_macos.yml)\n\nThe aim of this repository is to provide means to package each new [OpenCV release](https://github.com/opencv/opencv/releases) for the most used Python versions and platforms.\n\n### CI build process\n\nThe project is structured like a normal Python package with a standard ``setup.py`` file.\nThe build process for a single entry in the build matrices is as follows (see for example `.github/workflows/build_wheels_linux.yml` file):\n\n0. In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against\n\n1. Checkout repository and submodules\n\n   -  OpenCV is included as submodule and the version is updated\n      manually by maintainers when a new OpenCV release has been made\n   -  Contrib modules are also included as a submodule\n\n2. Find OpenCV version from the sources\n\n3. Build OpenCV\n\n   -  tests are disabled, otherwise build time increases too much\n   -  there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)\n   -  Linux builds run in manylinux Docker containers (CentOS 5)\n   -  source distributions are separate entries in the build matrix\n\n4. Rearrange OpenCV's build result, add our custom files and generate wheel\n\n5. Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly\n\n6. Install the generated wheel\n7. Test that Python can import the library and run some sanity checks\n8. Use twine to upload the generated wheel to PyPI (only in release builds)\n\nSteps 1--4 are handled by ``pip wheel``.\n\nThe build can be customized with environment variables. In addition to any variables that OpenCV's build accepts, we recognize:\n\n- ``CI_BUILD``. Set to ``1`` to emulate the CI environment build behaviour. Used only in CI builds to force certain build flags on in ``setup.py``. Do not use this unless you know what you are doing.\n- ``ENABLE_CONTRIB`` and ``ENABLE_HEADLESS``. Set to ``1`` to build the contrib and/or headless version\n- ``ENABLE_JAVA``, Set to ``1`` to enable the Java client build.  This is disabled by default.\n- ``CMAKE_ARGS``. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.\n\nSee the next section for more info about manual builds outside the CI environment.\n\n### Manual builds\n\nIf some dependency is not enabled in the pre-built wheels, you can also run the build locally to create a custom wheel.\n\n1. Clone this repository: `git clone --recursive https://github.com/opencv/opencv-python.git`\n2. ``cd opencv-python``\n    - you can use `git` to checkout some other version of OpenCV in the `opencv` and `opencv_contrib` submodules if needed\n3. Add custom Cmake flags if needed, for example: `export CMAKE_ARGS=\"-DSOME_FLAG=ON -DSOME_OTHER_FLAG=OFF\"` (in Windows you need to set environment variables differently depending on Command Line or PowerShell)\n4. Select the package flavor which you wish to build with `ENABLE_CONTRIB` and `ENABLE_HEADLESS`: i.e. `export ENABLE_CONTRIB=1` if you wish to build `opencv-contrib-python`\n5. Run ``pip wheel . --verbose``. NOTE: make sure you have the latest ``pip`` version, the ``pip wheel`` command replaces the old ``python setup.py bdist_wheel`` command which does not support ``pyproject.toml``.\n    - this might take anything from 5 minutes to over 2 hours depending on your hardware\n6. Pip will print fresh wheel location at the end of build procedure. If you use old approach with `setup.py` file wheel package will be placed in `dist` folder. Package is ready and you can do with that whatever you wish.\n    - Optional: on Linux use some of the `manylinux` images as a build hosts if maximum portability is needed and run `auditwheel` for the wheel after build\n    - Optional: on macOS use ``delocate`` (same as ``auditwheel`` but for macOS) for better portability\n\n#### Manual debug builds\n\nIn order to build `opencv-python` in an unoptimized debug build, you need to side-step the normal process a bit.\n\n1. Install the packages `scikit-build` and `numpy` via pip.\n2. Run the command `python setup.py bdist_wheel --build-type=Debug`.\n3. Install the generated wheel file in the `dist/` folder with `pip install dist/wheelname.whl`.\n\nIf you would like the build produce all compiler commands, then the following combination of flags and environment variables has been tested to work on Linux:\n```\nexport CMAKE_ARGS='-DCMAKE_VERBOSE_MAKEFILE=ON'\nexport VERBOSE=1\n\npython3 setup.py bdist_wheel --build-type=Debug\n```\n\nSee this issue for more discussion: https://github.com/opencv/opencv-python/issues/424\n\n#### Source distributions\n\nSince OpenCV version 4.3.0, also source distributions are provided in PyPI. This means that if your system is not compatible with any of the wheels in PyPI, ``pip`` will attempt to build OpenCV from sources. If you need a OpenCV version which is not available in PyPI as a source distribution, please follow the manual build guidance above instead of this one.\n\nYou can also force ``pip`` to build the wheels from the source distribution. Some examples:\n\n- ``pip install --no-binary opencv-python opencv-python``\n- ``pip install --no-binary :all: opencv-python``\n\nIf you need contrib modules or headless version, just change the package name (step 4 in the previous section is not needed). However, any additional CMake flags can be provided via environment variables as described in step 3 of the manual build section. If none are provided, OpenCV's CMake scripts will attempt to find and enable any suitable dependencies. Headless distributions have hard coded CMake flags which disable all possible GUI dependencies.\n\nOn slow systems such as Raspberry Pi the full build may take several hours. On a 8-core Ryzen 7 3700X the build takes about 6 minutes.\n\n### Licensing\n\nOpencv-python package (scripts in this repository) is available under MIT license.\n\nOpenCV itself is available under [Apache 2](https://github.com/opencv/opencv/blob/master/LICENSE) license.\n\nThird party package licenses are at [LICENSE-3RD-PARTY.txt](https://github.com/opencv/opencv-python/blob/master/LICENSE-3RD-PARTY.txt).\n\nAll wheels ship with [FFmpeg](http://ffmpeg.org) licensed under the [LGPLv2.1](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html).\n\nNon-headless Linux wheels ship with [Qt 5](http://doc.qt.io/qt-5/lgpl.html) licensed under the [LGPLv3](http://www.gnu.org/licenses/lgpl-3.0.html).\n\nThe packages include also other binaries. Full list of licenses can be found from [LICENSE-3RD-PARTY.txt](https://github.com/opencv/opencv-python/blob/master/LICENSE-3RD-PARTY.txt).\n\n### Versioning\n\n``find_version.py`` script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string. It saves the version information to ``version.py`` file under ``cv2`` in addition to some other flags.\n\n### Releases\n\nA release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:\n\n``cv_major.cv_minor.cv_revision.package_revision`` e.g. ``3.1.0.0``\n\nThe master branch follows OpenCV master branch releases. 3.4 branch follows OpenCV 3.4 bugfix releases.\n\n### Development builds\n\nEvery commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:\n\n``cv_major.cv_minor.cv_revision+git_hash_of_this_repo`` e.g. ``3.1.0+14a8d39``\n\nThese artifacts can't be and will not be uploaded to PyPI.\n\n### Manylinux wheels\n\nLinux wheels are built using [manylinux2014](https://github.com/pypa/manylinux). These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.\n\nThe default ``manylinux2014`` images have been extended with some OpenCV dependencies. See [Docker folder](https://github.com/skvark/opencv-python/tree/master/docker) for more info.\n\n### Supported Python versions\n\nPython 3.x compatible pre-built wheels are provided for the officially supported Python versions (not in EOL):\n\n- 3.7\n- 3.8\n- 3.9\n- 3.10\n- 3.11\n- 3.12\n\n### Backward compatibility\n\nStarting from 4.2.0 and 3.4.9 builds the macOS Travis build environment was updated to XCode 9.4. The change effectively dropped support for older than 10.13 macOS versions.\n\nStarting from 4.3.0 and 3.4.10 builds the Linux build environment was updated from `manylinux1` to `manylinux2014`. This dropped support for old Linux distributions.\n\nStarting from version 4.7.0 the Mac OS GitHub Actions build environment was update to version 11. Mac OS 10.x support deprecated. See https://github.com/actions/runner-images/issues/5583\n\nStarting from version 4.9.0 the Mac OS GitHub Actions build environment was update to version 12. Mac OS 10.x support deprecated by Brew and most of used packages.\n"
        },
        {
          "name": "cv2",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "find_version.py",
          "type": "blob",
          "size": 2.599609375,
          "content": "import sys\nimport subprocess\nfrom datetime import date\n\nif __name__ == \"__main__\":\n    contrib = sys.argv[1]\n    headless = sys.argv[2]\n    rolling = sys.argv[3]\n    ci_build = sys.argv[4]\n\n    opencv_version = \"\"\n    # dig out the version from OpenCV sources\n    version_file_path = \"opencv/modules/core/include/opencv2/core/version.hpp\"\n\n    with open(version_file_path, \"r\") as f:\n        for line in f:\n            words = line.split()\n\n            if \"CV_VERSION_MAJOR\" in words:\n                opencv_version += words[2]\n                opencv_version += \".\"\n\n            if \"CV_VERSION_MINOR\" in words:\n                opencv_version += words[2]\n                opencv_version += \".\"\n\n            if \"CV_VERSION_REVISION\" in words:\n                opencv_version += words[2]\n                break\n\n    # used in local dev releases\n    git_hash = (\n        subprocess.check_output([\"git\", \"rev-parse\", \"--short\", \"HEAD\"])\n        .splitlines()[0]\n        .decode()\n    )\n    # this outputs the annotated tag if we are exactly on a tag, otherwise <tag>-<n>-g<shortened sha-1>\n    try:\n        tag = (\n            subprocess.check_output(\n                [\"git\", \"describe\", \"--tags\"], stderr=subprocess.STDOUT\n            )\n            .splitlines()[0]\n            .decode()\n            .split(\"-\")\n        )\n    except subprocess.CalledProcessError as e:\n        # no tags reachable (e.g. on a topic branch in a fork), see\n        # https://stackoverflow.com/questions/4916492/git-describe-fails-with-fatal-no-names-found-cannot-describe-anything\n        if e.output.rstrip() == b\"fatal: No names found, cannot describe anything.\":\n            tag = []\n        else:\n            print(e.output)\n            raise\n\n    if len(tag) == 1:\n        # tag identifies the build and should be a sequential revision number\n        version = tag[0]\n        opencv_version += \".{}\".format(version)\n    # rolling has converted into string using get_and_set_info() function in setup.py\n    elif rolling == \"True\":\n        # rolling version identifier, will be published in a dedicated rolling PyPI repository\n        version = date.today().strftime('%Y%m%d')\n        opencv_version += \".{}\".format(version)\n    else:\n        # local version identifier, not to be published on PyPI\n        version = git_hash\n        opencv_version += \"+{}\".format(version)\n\n    with open(\"cv2/version.py\", \"w\") as f:\n        f.write('opencv_version = \"{}\"\\n'.format(opencv_version))\n        f.write(\"contrib = {}\\n\".format(contrib))\n        f.write(\"headless = {}\\n\".format(headless))\n        f.write(\"rolling = {}\\n\".format(rolling))\n        f.write(\"ci_build = {}\".format(ci_build))\n"
        },
        {
          "name": "multibuild",
          "type": "commit",
          "content": null
        },
        {
          "name": "opencv",
          "type": "commit",
          "content": null
        },
        {
          "name": "opencv_contrib",
          "type": "commit",
          "content": null
        },
        {
          "name": "opencv_extra",
          "type": "commit",
          "content": null
        },
        {
          "name": "patch_auditwheel_whitelist.py",
          "type": "blob",
          "size": 0.5,
          "content": "from os.path import join, dirname, abspath\nimport json\n\nfrom auditwheel import policy\n\ndef add_whitelisted_libs():\n    policies = None\n\n    with open(join(dirname(abspath(policy.__file__)), \"manylinux-policy.json\")) as f:\n        policies = json.load(f)\n\n    for p in policies:\n        p[\"lib_whitelist\"].append(\"libxcb.so.1\")\n\n    with open(join(dirname(abspath(policy.__file__)), \"manylinux-policy.json\"), \"w\") as f:\n        f.write(json.dumps(policies))\n\nif __name__ == '__main__':\n    add_whitelisted_libs()\n"
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.66015625,
          "content": "[build-system]\nrequires = [\n  \"cmake>=3.1\",\n  \"numpy==1.13.3; python_version=='3.6' and platform_machine != 'aarch64' and platform_machine != 'arm64'\",\n  \"numpy==1.17.0; python_version=='3.7' and platform_machine != 'aarch64' and platform_machine != 'arm64'\",\n  \"numpy==1.17.5; python_version=='3.8' and platform_machine != 'aarch64' and platform_machine != 'arm64'\",\n  \"numpy==1.19.3; python_version<'3.9' and sys_platform == 'linux' and platform_machine == 'aarch64'\",\n  \"numpy==1.21.0; python_version<'3.9' and sys_platform == 'darwin' and platform_machine == 'arm64'\",\n  \"numpy>=2.0.0;  python_version>='3.9'\",\n  \"pip\",\n  \"scikit-build>=0.14.0\",\n  \"setuptools==59.2.0\",\n]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 20.2138671875,
          "content": "import io\nimport os\nimport os.path\nimport sys\nimport runpy\nimport subprocess\nimport re\nimport sysconfig\nimport platform\nfrom skbuild import cmaker, setup\n\n\ndef main():\n    os.chdir(os.path.dirname(os.path.abspath(__file__)))\n\n    CI_BUILD = os.environ.get(\"CI_BUILD\", \"False\")\n    is_CI_build = True if CI_BUILD == \"1\" else False\n    cmake_source_dir = \"opencv\"\n    minimum_supported_numpy = \"1.13.3\"\n    build_contrib = get_build_env_var_by_name(\"contrib\")\n    build_headless = get_build_env_var_by_name(\"headless\")\n    build_java = \"ON\" if get_build_env_var_by_name(\"java\") else \"OFF\"\n    build_rolling = get_build_env_var_by_name(\"rolling\")\n\n    install_requires = [\n        'numpy>=1.13.3; python_version<\"3.7\"',\n        'numpy>=1.17.0; python_version>=\"3.7\"', # https://github.com/numpy/numpy/pull/13725\n        'numpy>=1.17.3; python_version>=\"3.8\"',\n        'numpy>=1.19.3; python_version>=\"3.9\"',\n        'numpy>=1.21.2; python_version>=\"3.10\"',\n        'numpy>=1.19.3; python_version>=\"3.6\" and platform_system==\"Linux\" and platform_machine==\"aarch64\"',\n        'numpy>=1.21.0; python_version<=\"3.9\" and platform_system==\"Darwin\" and platform_machine==\"arm64\"',\n        'numpy>=1.21.4; python_version>=\"3.10\" and platform_system==\"Darwin\"',\n        \"numpy>=1.23.5; python_version>='3.11'\",\n        \"numpy>=1.26.0; python_version>='3.12'\"\n    ]\n\n    python_version = cmaker.CMaker.get_python_version()\n    python_lib_path = cmaker.CMaker.get_python_library(python_version) or \"\"\n    # HACK: For Scikit-build 0.17.3 and newer that returns None or empty sptring for PYTHON_LIBRARY in manylinux2014\n    # A small release related to PYTHON_LIBRARY handling changes in 0.17.2; scikit-build 0.17.3 returns an empty string from get_python_library if no Python library is present (like on manylinux), where 0.17.2 returned None, and previous versions returned a non-existent path. Note that adding REQUIRED to find_package(PythonLibs will fail, but it is incorrect (you must not link to libPython.so) and was really just injecting a non-existent path before.\n    # TODO: Remove the hack when the issue is handled correctly in main OpenCV CMake.\n    if python_lib_path == \"\":\n        python_lib_path = \"libpython%sm.a\" % python_version\n    python_lib_path = python_lib_path.replace(\"\\\\\", \"/\")\n\n    python_include_dir = cmaker.CMaker.get_python_include_dir(python_version).replace(\n        \"\\\\\", \"/\"\n    )\n\n    if os.path.exists(\".git\"):\n        import pip._internal.vcs.git as git\n\n        g = git.Git()  # NOTE: pip API's are internal, this has to be refactored\n\n        g.run_command([\"submodule\", \"sync\"])\n\n        if build_rolling:\n            g.run_command(\n                [\"submodule\", \"update\", \"--init\", \"--recursive\", \"--remote\", cmake_source_dir]\n            )\n\n            if build_contrib:\n                g.run_command(\n                    [\"submodule\", \"update\", \"--init\", \"--recursive\", \"--remote\", \"opencv_contrib\"]\n                )\n        else:\n            g.run_command(\n                [\"submodule\", \"update\", \"--init\", \"--recursive\", cmake_source_dir]\n            )\n\n            if build_contrib:\n                g.run_command(\n                    [\"submodule\", \"update\", \"--init\", \"--recursive\", \"opencv_contrib\"]\n                )\n\n    package_version, build_contrib, build_headless, build_rolling = get_and_set_info(\n        build_contrib, build_headless, build_rolling, is_CI_build\n    )\n\n    # https://stackoverflow.com/questions/1405913/python-32bit-or-64bit-mode\n    is64 = sys.maxsize > 2 ** 32\n\n    package_name = \"opencv-python\"\n\n    if build_contrib and not build_headless:\n        package_name = \"opencv-contrib-python\"\n\n    if build_contrib and build_headless:\n        package_name = \"opencv-contrib-python-headless\"\n\n    if build_headless and not build_contrib:\n        package_name = \"opencv-python-headless\"\n\n    if build_rolling:\n        package_name += \"-rolling\"\n\n    long_description = io.open(\"README.md\", encoding=\"utf-8\").read()\n\n    packages = [\"cv2\", \"cv2.data\"]\n\n    package_data = {\n        \"cv2\": [\"*%s\" % sysconfig.get_config_vars().get(\"SO\"), \"version.py\"]\n        + ([\"*.dll\"] if os.name == \"nt\" else [])\n        + [\"LICENSE.txt\", \"LICENSE-3RD-PARTY.txt\"],\n        \"cv2.data\": [\"*.xml\"],\n    }\n\n    # Files from CMake output to copy to package.\n    # Path regexes with forward slashes relative to CMake install dir.\n    rearrange_cmake_output_data = {\n        \"cv2\": (\n            [r\"bin/opencv_videoio_ffmpeg\\d{4}%s\\.dll\" % (\"_64\" if is64 else \"\")]\n            if os.name == \"nt\"\n            else []\n        )\n        +\n        # In Windows, in python/X.Y/<arch>/; in Linux, in just python/X.Y/.\n        # Naming conventions vary so widely between versions and OSes\n        # had to give up on checking them.\n        [\n            r\"python/cv2/python-%s/cv2.*\"\n            % (sys.version_info[0])\n        ]\n        +\n        [\n            r\"python/cv2/__init__.py\"\n        ]\n        +\n        [\n            r\"python/cv2/.*config.*.py\"\n        ]\n        +\n        [ r\"python/cv2/py.typed\" ] if sys.version_info >= (3, 6) else []\n        ,\n        \"cv2.data\": [  # OPENCV_OTHER_INSTALL_PATH\n            (\"etc\" if os.name == \"nt\" else \"share/opencv4\") + r\"/haarcascades/.*\\.xml\"\n        ],\n        \"cv2.gapi\": [\n            \"python/cv2\" + r\"/gapi/.*\\.py\"\n        ],\n        \"cv2.mat_wrapper\": [\n            \"python/cv2\" + r\"/mat_wrapper/.*\\.py\"\n        ],\n        \"cv2.misc\": [\n            \"python/cv2\" + r\"/misc/.*\\.py\"\n        ],\n        \"cv2.utils\": [\n            \"python/cv2\" + r\"/utils/.*\\.py\"\n        ],\n    }\n\n    if sys.version_info >= (3, 6):\n        rearrange_cmake_output_data[\"cv2.typing\"] = [\"python/cv2\" + r\"/typing/.*\\.py\"]\n\n    # Files in sourcetree outside package dir that should be copied to package.\n    # Raw paths relative to sourcetree root.\n    files_outside_package_dir = {\"cv2\": [\"LICENSE.txt\", \"LICENSE-3RD-PARTY.txt\"]}\n\n    ci_cmake_generator = (\n        [\"-G\", \"Visual Studio 14\" + (\" Win64\" if is64 else \"\")]\n        if os.name == \"nt\"\n        else [\"-G\", \"Unix Makefiles\"]\n    )\n\n    cmake_args = (\n        (ci_cmake_generator if is_CI_build else [])\n        + [\n            # skbuild inserts PYTHON_* vars. That doesn't satisfy opencv build scripts in case of Py3\n            \"-DPYTHON3_EXECUTABLE=%s\" % sys.executable,\n            \"-DPYTHON_DEFAULT_EXECUTABLE=%s\" % sys.executable,\n            \"-DPYTHON3_INCLUDE_DIR=%s\" % python_include_dir,\n            \"-DPYTHON3_LIBRARY=%s\" % python_lib_path,\n            \"-DBUILD_opencv_python3=ON\",\n            \"-DBUILD_opencv_python2=OFF\",\n            # Disable the Java build by default as it is not needed\n            \"-DBUILD_opencv_java=%s\" % build_java,\n            # Relative dir to install the built module to in the build tree.\n            # The default is generated from sysconfig, we'd rather have a constant for simplicity\n            \"-DOPENCV_PYTHON3_INSTALL_PATH=python\",\n            # Otherwise, opencv scripts would want to install `.pyd' right into site-packages,\n            # and skbuild bails out on seeing that\n            \"-DINSTALL_CREATE_DISTRIB=ON\",\n            # See opencv/CMakeLists.txt for options and defaults\n            \"-DBUILD_opencv_apps=OFF\",\n            \"-DBUILD_opencv_freetype=OFF\",\n            \"-DBUILD_SHARED_LIBS=OFF\",\n            \"-DBUILD_TESTS=OFF\",\n            \"-DBUILD_PERF_TESTS=OFF\",\n            \"-DBUILD_DOCS=OFF\",\n            \"-DPYTHON3_LIMITED_API=ON\",\n            \"-DBUILD_OPENEXR=ON\",\n        ]\n        + (\n            # CMake flags for windows/arm64 build\n            [\"-DCMAKE_GENERATOR_PLATFORM=ARM64\",\n             # Emulated cmake requires following flags to correctly detect\n             # target architecture for windows/arm64 build\n             \"-DOPENCV_WORKAROUND_CMAKE_20989=ON\",\n             \"-DCMAKE_SYSTEM_PROCESSOR=ARM64\"]\n            if platform.machine() == \"ARM64\" and sys.platform == \"win32\"\n            # If it is not defined 'linker flags: /machine:X86' on Windows x64\n            else [\"-DCMAKE_GENERATOR_PLATFORM=x64\"] if is64 and sys.platform == \"win32\"\n            else []\n          )\n        + (\n            [\"-DOPENCV_EXTRA_MODULES_PATH=\" + os.path.abspath(\"opencv_contrib/modules\")]\n            if build_contrib\n            else []\n        )\n    )\n\n    if build_headless:\n        # it seems that cocoa cannot be disabled so on macOS the package is not truly headless\n        cmake_args.append(\"-DWITH_WIN32UI=OFF\")\n        cmake_args.append(\"-DWITH_QT=OFF\")\n        cmake_args.append(\"-DWITH_GTK=OFF\")\n        if is_CI_build:\n            cmake_args.append(\n                \"-DWITH_MSMF=OFF\"\n            )  # see: https://github.com/skvark/opencv-python/issues/263\n\n    if sys.platform.startswith(\"linux\") and not is64 and \"bdist_wheel\" in sys.argv:\n        subprocess.check_call(\"patch -p0 < patches/patchOpenEXR\", shell=True)\n\n    # OS-specific components during CI builds\n    if is_CI_build:\n\n        if (\n            not build_headless\n            and \"bdist_wheel\" in sys.argv\n            and sys.platform.startswith(\"linux\")\n        ):\n            cmake_args.append(\"-DWITH_QT=5\")\n            subprocess.check_call(\"patch -p1 < patches/patchQtPlugins\", shell=True)\n\n            if sys.platform.startswith(\"linux\"):\n                rearrange_cmake_output_data[\"cv2.qt.plugins.platforms\"] = [\n                    (r\"lib/qt/plugins/platforms/libqxcb\\.so\")\n                ]\n\n                # add fonts for Qt5\n                fonts = []\n                for file in os.listdir(\"/usr/share/fonts/dejavu\"):\n                    if file.endswith(\".ttf\"):\n                        fonts.append(\n                            (r\"lib/qt/fonts/dejavu/%s\\.ttf\" % file.split(\".\")[0])\n                        )\n\n                rearrange_cmake_output_data[\"cv2.qt.fonts\"] = fonts\n\n            if sys.platform == \"darwin\":\n                rearrange_cmake_output_data[\"cv2.qt.plugins.platforms\"] = [\n                    (r\"lib/qt/plugins/platforms/libqcocoa\\.dylib\")\n                ]\n\n        if sys.platform.startswith(\"linux\"):\n            cmake_args.append(\"-DWITH_V4L=ON\")\n            cmake_args.append(\"-DWITH_LAPACK=ON\")\n            cmake_args.append(\"-DENABLE_PRECOMPILED_HEADERS=OFF\")\n\n    # works via side effect\n    RearrangeCMakeOutput(\n        rearrange_cmake_output_data, files_outside_package_dir, package_data.keys()\n    )\n\n    setup(\n        name=package_name,\n        version=package_version,\n        url=\"https://github.com/opencv/opencv-python\",\n        license=\"Apache 2.0\",\n        description=\"Wrapper package for OpenCV python bindings.\",\n        long_description=long_description,\n        long_description_content_type=\"text/markdown\",\n        packages=packages,\n        package_data=package_data,\n        maintainer=\"OpenCV Team\",\n        ext_modules=EmptyListWithLength(),\n        install_requires=install_requires,\n        python_requires=\">=3.6\",\n        classifiers=[\n            \"Development Status :: 5 - Production/Stable\",\n            \"Environment :: Console\",\n            \"Intended Audience :: Developers\",\n            \"Intended Audience :: Education\",\n            \"Intended Audience :: Information Technology\",\n            \"Intended Audience :: Science/Research\",\n            \"License :: OSI Approved :: Apache Software License\",\n            \"Operating System :: MacOS\",\n            \"Operating System :: Microsoft :: Windows\",\n            \"Operating System :: POSIX\",\n            \"Operating System :: Unix\",\n            \"Programming Language :: Python\",\n            \"Programming Language :: Python :: 3\",\n            \"Programming Language :: Python :: 3 :: Only\",\n            \"Programming Language :: Python :: 3.6\",\n            \"Programming Language :: Python :: 3.7\",\n            \"Programming Language :: Python :: 3.8\",\n            \"Programming Language :: Python :: 3.9\",\n            \"Programming Language :: Python :: 3.10\",\n            \"Programming Language :: Python :: 3.11\",\n            \"Programming Language :: Python :: 3.12\",\n            \"Programming Language :: C++\",\n            \"Programming Language :: Python :: Implementation :: CPython\",\n            \"Topic :: Scientific/Engineering\",\n            \"Topic :: Scientific/Engineering :: Image Recognition\",\n            \"Topic :: Software Development\",\n        ],\n        cmake_args=cmake_args,\n        cmake_source_dir=cmake_source_dir,\n    )\n\n    print(\"OpenCV is raising funds to keep the library free for everyone, and we need the support of the entire community to do it. Donate to OpenCV on GitHub:\\nhttps://github.com/sponsors/opencv\\n\")\n\nclass RearrangeCMakeOutput:\n    \"\"\"\n        Patch SKBuild logic to only take files related to the Python package\n        and construct a file hierarchy that SKBuild expects (see below)\n    \"\"\"\n\n    _setuptools_wrap = None\n\n    # Have to wrap a function reference, or it's converted\n    # into an instance method on attr assignment\n    import argparse\n\n    wraps = argparse.Namespace(_classify_installed_files=None)\n    del argparse\n\n    package_paths_re = None\n    packages = None\n    files_outside_package = None\n\n    def __init__(self, package_paths_re, files_outside_package, packages):\n        cls = self.__class__\n        assert not cls.wraps._classify_installed_files, \"Singleton object\"\n        import skbuild.setuptools_wrap\n\n        cls._setuptools_wrap = skbuild.setuptools_wrap\n        cls.wraps._classify_installed_files = (\n            cls._setuptools_wrap._classify_installed_files\n        )\n        cls._setuptools_wrap._classify_installed_files = (\n            self._classify_installed_files_override\n        )\n\n        cls.package_paths_re = package_paths_re\n        cls.files_outside_package = files_outside_package\n        cls.packages = packages\n\n    def __del__(self):\n        cls = self.__class__\n        cls._setuptools_wrap._classify_installed_files = (\n            cls.wraps._classify_installed_files\n        )\n        cls.wraps._classify_installed_files = None\n        cls._setuptools_wrap = None\n\n    def _classify_installed_files_override(\n        self,\n        install_paths,\n        package_data,\n        package_prefixes,\n        py_modules,\n        new_py_modules,\n        scripts,\n        new_scripts,\n        data_files,\n        cmake_source_dir,\n        cmake_install_reldir,\n    ):\n        \"\"\"\n            From all CMake output, we're only interested in a few files\n            and must place them into CMake install dir according\n            to Python conventions for SKBuild to find them:\n                package\\\n                    file\n                    subpackage\\\n                        etc.\n        \"\"\"\n\n        cls = self.__class__\n\n        # 'relpath'/'reldir' = relative to CMAKE_INSTALL_DIR/cmake_install_dir\n        # 'path'/'dir' = relative to sourcetree root\n        cmake_install_dir = os.path.join(\n            cls._setuptools_wrap.CMAKE_INSTALL_DIR(), cmake_install_reldir\n        )\n        install_relpaths = [\n            os.path.relpath(p, cmake_install_dir) for p in install_paths\n        ]\n        fslash_install_relpaths = [\n            p.replace(os.path.sep, \"/\") for p in install_relpaths\n        ]\n        relpaths_zip = list(zip(fslash_install_relpaths, install_relpaths))\n\n        final_install_relpaths = []\n\n        print(\"Copying files from CMake output\")\n\n        # add lines from the old __init__.py file to the config file\n        with open(os.path.join(os.path.dirname(os.path.abspath(__file__)), 'scripts', '__init__.py'), 'r') as custom_init:\n            custom_init_data = custom_init.read()\n\n        # OpenCV generates config with different name for case with PYTHON3_LIMITED_API=ON\n        config_py = os.path.join(cmake_install_dir, 'python', 'cv2', 'config-%s.%s.py'\n                                 % (sys.version_info[0], sys.version_info[1]))\n        if not os.path.exists(config_py):\n            config_py = os.path.join(cmake_install_dir, 'python', 'cv2', 'config-%s.py' % sys.version_info[0])\n\n        with open(config_py, 'w') as opencv_init_config:\n            opencv_init_config.write(custom_init_data)\n\n        if sys.version_info >= (3, 6):\n            for p in install_relpaths:\n                if p.endswith(\".pyi\"):\n                    target_rel_path = os.path.relpath(p, \"python/cv2\")\n                    cls._setuptools_wrap._copy_file(\n                        os.path.join(cmake_install_dir, p),\n                        os.path.join(cmake_install_dir, \"cv2\", target_rel_path),\n                        hide_listing=False,\n                    )\n                    final_install_relpaths.append(os.path.join(\"cv2\", target_rel_path))\n\n        del install_relpaths, fslash_install_relpaths\n\n        for package_name, relpaths_re in cls.package_paths_re.items():\n            package_dest_reldir = package_name.replace(\".\", os.path.sep)\n            for relpath_re in relpaths_re:\n                found = False\n                r = re.compile(relpath_re + \"$\")\n                for fslash_relpath, relpath in relpaths_zip:\n                    m = r.match(fslash_relpath)\n                    if not m:\n                        continue\n                    found = True\n                    new_install_relpath = os.path.join(\n                        package_dest_reldir, os.path.basename(relpath)\n                    )\n                    cls._setuptools_wrap._copy_file(\n                        os.path.join(cmake_install_dir, relpath),\n                        os.path.join(cmake_install_dir, new_install_relpath),\n                        hide_listing=False,\n                    )\n                    final_install_relpaths.append(new_install_relpath)\n                    del m, fslash_relpath, new_install_relpath\n                else:\n                    # gapi can be missed if ADE was not downloaded (network issue)\n                    if not found and \"gapi\" not in relpath_re:\n                        raise Exception(\"Not found: '%s'\" % relpath_re)\n                del r, found\n\n        del relpaths_zip\n\n        print(\"Copying files from non-default sourcetree locations\")\n\n        for package_name, paths in cls.files_outside_package.items():\n            package_dest_reldir = package_name.replace(\".\", os.path.sep)\n            for path in paths:\n                new_install_relpath = os.path.join(\n                    package_dest_reldir,\n                    # Don't yet have a need to copy\n                    # to subdirectories of package dir\n                    os.path.basename(path),\n                )\n                cls._setuptools_wrap._copy_file(\n                    path,\n                    os.path.join(cmake_install_dir, new_install_relpath),\n                    hide_listing=False,\n                )\n                final_install_relpaths.append(new_install_relpath)\n\n        final_install_paths = [\n            os.path.join(cmake_install_dir, p) for p in final_install_relpaths\n        ]\n\n        return (cls.wraps._classify_installed_files)(\n            final_install_paths,\n            package_data,\n            package_prefixes,\n            py_modules,\n            new_py_modules,\n            scripts,\n            new_scripts,\n            data_files,\n            # To get around a check that prepends source dir to paths and breaks package detection code.\n            cmake_source_dir=\"\",\n            _cmake_install_dir=cmake_install_reldir,\n        )\n\n\ndef get_and_set_info(contrib, headless, rolling, ci_build):\n    # cv2/version.py should be generated by running find_version.py\n    version = {}\n    here = os.path.abspath(os.path.dirname(__file__))\n    version_file = os.path.join(here, \"cv2\", \"version.py\")\n\n    # generate a fresh version.py always when Git repository exists\n    # (in sdists the version.py file already exists)\n    if os.path.exists(\".git\"):\n        old_args = sys.argv.copy()\n        sys.argv = [\"\", str(contrib), str(headless), str(rolling), str(ci_build)]\n        runpy.run_path(\"find_version.py\", run_name=\"__main__\")\n        sys.argv = old_args\n\n    with open(version_file) as fp:\n        exec(fp.read(), version)\n\n    return version[\"opencv_version\"], version[\"contrib\"], version[\"headless\"], version[\"rolling\"]\n\n\ndef get_build_env_var_by_name(flag_name):\n    flag_set = False\n\n    try:\n        flag_set = bool(int(os.getenv(\"ENABLE_\" + flag_name.upper(), None)))\n    except Exception:\n        pass\n\n    if not flag_set:\n        try:\n            flag_set = bool(int(open(flag_name + \".enabled\").read(1)))\n        except Exception:\n            pass\n\n    return flag_set\n\n\n# This creates a list which is empty but returns a length of 1.\n# Should make the wheel a binary distribution and platlib compliant.\nclass EmptyListWithLength(list):\n    def __len__(self):\n        return 1\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis_config.sh",
          "type": "blob",
          "size": 5.6484375,
          "content": "#!/bin/bash\n#Customize multibuild logic that is run after entering docker.\n#Sourced by docker_build_wrap.sh and docker_test_wrap.sh .\n#Runs in Docker, so only the vars passed to `docker run' exist.\n#See multibuild/README.rst\necho \"===  Loading config.sh  === \"\n\n# To see build progress\nfunction build_wheel {\n    build_bdist_wheel $@\n}\n\nfunction bdist_wheel_cmd {\n    # copied from multibuild's common_utils.sh\n    # add osx deployment target so it doesn't default to 10.6\n    local abs_wheelhouse=$1\n    # install all required packages in pyproject.toml, because bdist_wheel does not do it\n    python${PYTHON_VERSION} -m pip install toml && python${PYTHON_VERSION} -c 'import toml; c = toml.load(\"pyproject.toml\"); print(\"\\n\".join(c[\"build-system\"][\"requires\"]))' | python${PYTHON_VERSION} -m pip install -r /dev/stdin\n    CI_BUILD=1 python${PYTHON_VERSION} setup.py bdist_wheel --py-limited-api=cp37 -v\n    cp dist/*.whl $abs_wheelhouse\n    if [ -z \"$IS_OSX\" ]; then\n      # this path can be changed in the latest manylinux image\n      TOOLS_PATH=/opt/_internal/pipx/venvs/auditwheel\n      /opt/python/cp39-cp39/bin/python -m venv $TOOLS_PATH\n      source $TOOLS_PATH/bin/activate\n      python patch_auditwheel_whitelist.py\n      deactivate\n    fi\n    if [ -n \"$USE_CCACHE\" -a -z \"$BREW_BOOTSTRAP_MODE\" ]; then ccache -s; fi\n}\n\nif [ -n \"$IS_OSX\" ]; then\n  echo \"    > OSX environment \"\n  export MAKEFLAGS=\"-j$(sysctl -n hw.ncpu)\"\nelse\n  echo \"    > Linux environment \"\n  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/Qt5.15.16/lib\n  export MAKEFLAGS=\"-j$(grep -E '^processor[[:space:]]*:' /proc/cpuinfo | wc -l)\"\n  CURRENT_ARCH=$(uname -m)\n  if [[ $CURRENT_ARCH == 'aarch64' ]]; then\n    # To avoid network issues with pypi.org on OpenCV CN machines\n    export PIP_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple\n    echo \"Running for linux aarch64\"\n  fi\nfi\n\nif [ -n \"$IS_OSX\" ]; then\n\n    source travis_osx_brew_cache.sh\n\n    BREW_SLOW_BUILIDING_PACKAGES=$(printf '%s\\n' \\\n        \"cmake 15\" \\\n        \"ffmpeg 10\" \\\n    )\n\n    function generate_ffmpeg_formula {\n        local FF=\"ffmpeg\"\n        local LFF=\"ffmpeg\"\n        local FF_FORMULA; FF_FORMULA=$(brew formula \"${FF}\")\n        local LFF_FORMULA; LFF_FORMULA=\"$(dirname \"$FF_FORMULA\")/${LFF}.rb\"\n\n        local REGENERATE\n        if [ -f \"$LFF_FORMULA\" ]; then\n            local UPSTREAM_VERSION VERSION\n            _brew_parse_package_info \"$FF\" \" \" UPSTREAM_VERSION _ _\n            _brew_parse_package_info \"$LFF\" \" \" VERSION _ _   || REGENERATE=1\n            #`rebuild` clause is ignored on `brew bottle` and deleted\n            # from newly-generated formula on `brew bottle --merge` for some reason\n            # so can't compare rebuild numbers\n            if [ \"$UPSTREAM_VERSION\" != \"$VERSION\" ]; then\n                REGENERATE=1\n            fi\n        else\n            REGENERATE=1\n        fi\n        if [ -n \"$REGENERATE\" ]; then\n            echo \"Regenerating custom ffmpeg formula\"\n            # Bottle block syntax: https://docs.brew.sh/Bottles#bottle-dsl-domain-specific-language\n            perl -wpe 'BEGIN {our ($found_blank, $bottle_block);}\n                if (/(^class )(Ffmpeg)(\\s.*)/) {$_=$1.\"Opencv\".$3.\"\\n\"; next;}\n                if (!$found_blank && /^$/) {$_.=\"conflicts_with \\\"ffmpeg\\\"\\n\\n\"; $found_blank=1; next;}\n                if (!$bottle_block && /^\\s*bottle do$/) { $bottle_block=1; next; }\n                if ($bottle_block) { if (/^\\s*end\\s*$/) { $bottle_block=0} elsif (/^\\s*sha256\\s/) {$_=\"\"} next; }\nif (/^\\s*depends_on \"(x264|x265|xvid|frei0r|rubberband|libvidstab)\"$/) {$_=\"\"; next;}\n                if (/^\\s*--enable-(gpl|libx264|libx265|libxvid|frei0r|librubberband|libvidstab)$/) {$_=\"\"; next;}\n                ' <\"$FF_FORMULA\" >\"$LFF_FORMULA\"\n            diff -u \"$FF_FORMULA\" \"$LFF_FORMULA\" || test $? -le 1\n\n            (   cd \"$(dirname \"$LFF_FORMULA\")\"\n                # This is the official way to add a formula\n                # https://docs.brew.sh/Formula-Cookbook#commit\n                git add \"$(basename \"$LFF_FORMULA\")\"\n                git commit -m \"add/update custom ffmpeg ${VERSION}\"\n            )\n        fi\n    }\n\nfi\n\nfunction pre_build {\n  echo \"Starting pre-build\"\n  set -e -o pipefail\n\n  if [ -n \"$IS_OSX\" ]; then\n    brew install lapack\n  fi\n\n  if [ -n \"$IS_OSX\" ]; then\n    echo \"Running for OSX\"\n\n    local CACHE_STAGE;# (echo \"$TRAVIS_BUILD_STAGE_NAME\" | grep -qiF \"final\") || CACHE_STAGE=1\n    CACHE_STAGE=\n    export HOMEBREW_NO_AUTO_UPDATE=1\n\n    echo 'Installing FFmpeg'\n\n    brew update\n    generate_ffmpeg_formula\n    brew_add_local_bottles\n    brew install --build-bottle ffmpeg\n    # It needs when we use not the latest ffmpeg formula\n    brew link ffmpeg\n\n    if [ -n \"$CACHE_STAGE\" ]; then\n        brew_go_bootstrap_mode 0\n        return 0\n    fi\n\n    # Have to install macpython late to avoid conflict with Homebrew Python update\n    before_install\n\n  else\n    echo \"Running for linux\"\n  fi\n}\n\nfunction run_tests {\n    # Runs tests on installed distribution from an empty directory\n    echo \"Run tests...\"\n    echo $PWD\n\n    PYTHON=python$PYTHON_VERSION\n\n    echo \"Running for linux\"\n\n    if [ $PYTHON == \"python3.7\" ]; then\n      $PYTHON -m pip install -U numpy==1.19.4\n    fi\n    cd /io/tests\n    $PYTHON get_build_info.py\n\n    cd /io/opencv\n    export OPENCV_TEST_DATA_PATH=/io/opencv_extra/testdata\n\n    test_wheels\n    pylint_test\n}\n\nfunction test_wheels {\n\n    echo \"Starting OpenCV tests...\"\n\n    #Test package\n    $PYTHON modules/python/test/test.py -v --repo .\n}\n\nfunction pylint_test {\n\n    echo \"Starting Pylint tests...\"\n\n    $PYTHON -m pip install pylint==2.15.9\n    cd /io/tests\n    $PYTHON -m pylint /io/opencv/samples/python/squares.py\n}\n\nexport PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'\nset -x\n"
        },
        {
          "name": "travis_multibuild_customize.sh",
          "type": "blob",
          "size": 0.2724609375,
          "content": "#!/bin/bash\n# Customize multibuild logic that is run before entering Docker. Sourced from travis.yml .\nexport PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'\nset -x\nREPO_DIR=$(dirname \"${BASH_SOURCE[0]}\")\nDOCKER_IMAGE='quay.io/asenyaev/manylinux2014_$plat'\n"
        },
        {
          "name": "travis_osx_brew_cache.sh",
          "type": "blob",
          "size": 17.1162109375,
          "content": "# Library to cache downloaded and locally-built Homebrew bottles in Travis OSX build.\n\n\n#Should be in Travis' cache\nBREW_LOCAL_BOTTLE_METADATA=\"$HOME/local_bottle_metadata\"\n\n#FIXME: temporary fix to enable the build, should be replaced with the proper path to the cache dir\nmkdir -p $BREW_LOCAL_BOTTLE_METADATA\n\n# Starting reference point for elapsed build time; seconds since the epoch.\n#TRAVIS_TIMER_START_TIME is set at the start of a log fold, in nanoseconds since the epoch\nBREW_TIME_START=$(($TRAVIS_TIMER_START_TIME/10**9))\n\n# If after a package is built, elapsed time is more than this many seconds, fail the build but save Travis cache\n# The cutoff moment should leave enough time till Travis' job time limit to process the main project.\n#  Since we have moved deps into a separate stage, we don't need to leave time for the project any more\nBREW_TIME_LIMIT=$((42*60))\n# If a slow-building package is about to be built and the projected build end moment is beyond this many seconds,\n# skip that build, fail the Travis job and save Travis cache.\n# This cutoff should leave enough time for before_cache and cache save.\nBREW_TIME_HARD_LIMIT=$((43*60))\n\n\n# Auto cleanup can delete locally-built bottles\n# when the caching logic isn't prepared for that\nexport HOMEBREW_NO_INSTALL_CLEANUP=1\n\n# Don't query analytical info online on `brew info`,\n#  this takes several seconds and we don't need it\n# see https://docs.brew.sh/Manpage , \"info formula\" section\nexport HOMEBREW_NO_GITHUB_API=1\n\n#Packages already installed in the current session to avoid checking them again\n_BREW_ALREADY_INSTALLED='$'     #$ = illegal package name; a blank line would cause macos grep to swallow everything\n\n\n#Public functions\n\nfunction brew_install_and_cache_within_time_limit {\n    # Install the package and its dependencies one by one;\n    # use bottle if available, build and cache bottle if not.\n    # Terminate and exit with status 1 if this takes too long.\n    # Exit with status 2 on any other error.\n    _brew_install_and_cache_within_time_limit $@ \\\n    || if test $? -eq 1; then brew_go_bootstrap_mode; return 1; else return 2; fi\n}\n\nfunction brew_add_local_bottles {\n    # Should be called after `brew update` at startup.\n    # Adds metadata for cached locally-built bottles to local formulas\n    #  so that `brew` commands can find them.\n    # If the package was updated, removes the corresponding files\n    #  and the bottle's entry in the formula, if any.\n\n    # Bottle entry in formula:\n    #   bottle do\n    #     <...>\n    #     sha256 \"<sha256>\" => :<os_codename>\n    #     <...>\n    #   end\n\n    echo \"Cached bottles:\"\n    ls \"$(brew --cache)/downloads\" || true  #may not exist initially since it's \"$(brew --cache)\" that is in Travis cache\n    echo \"Saved .json's and links:\"\n    ls \"$BREW_LOCAL_BOTTLE_METADATA\"\n\n    for JSON in \"$BREW_LOCAL_BOTTLE_METADATA\"/*.json; do\n        [ -e \"$JSON\" ] || break    # OSX 10.11 bash has no nullglob\n        local PACKAGE JSON_VERSION JSON_REBUILD OS_CODENAME BOTTLE_HASH\n\n        _brew_parse_bottle_json \"$JSON\" PACKAGE JSON_VERSION JSON_REBUILD OS_CODENAME BOTTLE_HASH\n\n        echo \"Adding local bottle: $PACKAGE ${JSON_VERSION}_${JSON_REBUILD}\"\n\n        local FORMULA_VERSION FORMULA_REBUILD FORMULA_BOTTLE_HASH\n\n        _brew_parse_package_info \"$PACKAGE\" \"$OS_CODENAME\" FORMULA_VERSION FORMULA_REBUILD FORMULA_BOTTLE_HASH\n\n        local FORMULA_HAS_BOTTLE; [ -n \"$FORMULA_BOTTLE_HASH\" ] && FORMULA_HAS_BOTTLE=1 || true\n\n\n        local BOTTLE_LINK BOTTLE=\"\"; BOTTLE_LINK=\"${JSON}.bottle.lnk\";\n        local BOTTLE_EXISTS= BOTTLE_MISMATCH= VERSION_MISMATCH=\n\n\n        # Check that the bottle file exists and is still appropriate for the formula\n        if [[ \"$FORMULA_VERSION\" != \"$JSON_VERSION\" || \"$JSON_REBUILD\" != \"$FORMULA_REBUILD\" ]]; then\n            VERSION_MISMATCH=1;\n            echo \"The cached bottle is obsolete: formula ${FORMULA_VERSION}_${FORMULA_REBUILD}\"\n        fi\n        if [ -f \"$BOTTLE_LINK\" ]; then\n            BOTTLE=$(cat \"$BOTTLE_LINK\");\n            BOTTLE=$(cd \"$(dirname \"$BOTTLE\")\"; pwd)/$(basename \"$BOTTLE\")\n\n            if [ -e \"$BOTTLE\" ]; then\n                BOTTLE_EXISTS=1;\n\n                # The hash in `brew --cache $PACKAGE` entry is generated from download URL,\n                #  which itself is generated from base URL and version\n                # (see Homebrew/Library/Homebrew/download_strategy.rb:cached_location).\n                # So if version changes, hashes will always mismatch anyway\n                #  and we don't need a separate message about this.\n                # XXX: OSX doesn't have `realpath` so can't compare the entire paths\n                if [ -n \"$FORMULA_HAS_BOTTLE\" -a -z \"$VERSION_MISMATCH\" -a \\\n                    \"$(basename \"$(brew --cache \"$PACKAGE\")\")\" != \"$(basename \"$BOTTLE\")\" ]; then\n                        BOTTLE_MISMATCH=1;\n                        echo \"Cached bottle file doesn't correspond to formula's cache entry!\" \\\n                             \"This can happen if download URL has changed.\" >&2\n                fi\n            else\n                echo \"Cached bottle file is missing!\" >&2\n            fi\n        else\n            echo \"Link file is missing or of invalid type!\" >&2\n        fi\n\n        # Delete cached bottle and all metadata if invalid\n        if [[ -z \"$BOTTLE_EXISTS\" || -n \"$VERSION_MISMATCH\" || -n \"$BOTTLE_MISMATCH\" ]]; then\n            echo \"Deleting the cached bottle and all metadata\"\n\n            if [ \"$FORMULA_BOTTLE_HASH\" == \"$BOTTLE_HASH\" ]; then\n                echo \"A bottle block for the cached bottle was merged into the updated formula. Removing...\"\n                local FORMULA; FORMULA=$(brew formula \"$PACKAGE\")\n                perl -wpe 'BEGIN { our $IN_BLOCK=0; }\n                    if ( ($IN_BLOCK==0) && /^\\s*bottle\\s+do\\s*$/ ) { $IN_BLOCK=1; next; }\n                    if ( ($IN_BLOCK==1) && /^\\s*end\\s*$/ )         { $IN_BLOCK=-1; next; }\n                    if ( ($IN_BLOCK==1) && /^\\s*sha256\\s+\"(\\w+)\"\\s+=>\\s+:\\w+\\s*$/ )\n                                                 { if ( $1 eq \"'\"$BOTTLE_HASH\"'\" ) {$_=\"\";}; next; }\n                '  <\"$FORMULA\" >\"${FORMULA}.new\"\n                # Depending on diff version, 1 may mean differences found\n                # https://stackoverflow.com/questions/6971284/what-are-the-error-exit-values-for-diff\n                diff -u \"$FORMULA\" \"${FORMULA}.new\" || test $? -le 1\n                (   cd $(dirname \"$FORMULA\")\n                    FORMULA=$(basename \"$FORMULA\")\n                    mv -v \"${FORMULA}.new\" \"$FORMULA\"\n                    git commit -m \"Removed obsolete local bottle ${JSON_VERSION}_${JSON_REBUILD} :${OS_CODENAME}\" \"$FORMULA\"\n                )\n            fi\n\n            if [ -n \"$BOTTLE\" -a -n \"$BOTTLE_EXISTS\" ]; then rm \"$BOTTLE\"; fi\n            rm -f \"$BOTTLE_LINK\"\n            rm \"$JSON\"\n\n        #(Re)add metadata to the formula otherwise\n        else\n            if [ \"$FORMULA_BOTTLE_HASH\" == \"$BOTTLE_HASH\" ]; then\n                echo \"The cached bottle is already present in the formula\"\n            else\n                brew bottle --merge --write \"$JSON\"\n            fi\n        fi\n    done\n}\n\n\nfunction brew_cache_cleanup {\n    #Cleanup caching directories\n    # Is supposed to be called in before_cache\n\n    #Lefovers from some failure probably\n    rm -f \"$BREW_LOCAL_BOTTLE_METADATA\"/*.tar.gz\n\n    #`brew cleanup` may delete locally-built bottles that weren't needed this time\n    # so we're saving and restoring them\n    local BOTTLE_LINK BOTTLE\n    for BOTTLE_LINK in \"$BREW_LOCAL_BOTTLE_METADATA\"/*.lnk; do\n        [ -e \"$BOTTLE_LINK\" ] || break\n        BOTTLE=$(cat \"$BOTTLE_LINK\")\n        ln \"$BOTTLE\" \"$BREW_LOCAL_BOTTLE_METADATA/\"\n    done\n    brew cleanup\n    local BOTTLE_BASENAME\n    for BOTTLE_LINK in \"$BREW_LOCAL_BOTTLE_METADATA\"/*.lnk; do\n        [ -e \"$BOTTLE_LINK\" ] || break\n        BOTTLE=$(cat \"$BOTTLE_LINK\")\n        BOTTLE_BASENAME=$(basename \"$BOTTLE\")\n        if test ! -e \"$BOTTLE\"; then\n            echo \"Restoring: $BOTTLE_BASENAME\"\n            mv \"$BREW_LOCAL_BOTTLE_METADATA/$BOTTLE_BASENAME\" \"$BOTTLE\"\n        else\n            rm \"$BREW_LOCAL_BOTTLE_METADATA/$BOTTLE_BASENAME\"\n        fi\n    done\n}\n\n\nfunction brew_go_bootstrap_mode {\n# Can be overridden\n# Terminate the build but ensure saving the cache\n    local EXIT_CODE=${1:-1}\n\n    echo \"Going into cache bootstrap mode\"\n\n    BREW_BOOTSTRAP_MODE=1\n\n    #Can't just `exit` because that would terminate the build without saving the cache\n    #Have to replace further actions with no-ops\n\n    local MESSAGE=\"\"; if [ \"$EXIT_CODE\" -ne 0 ]; then\n        MESSAGE='Building dependencies took too long. Restart the build in Travis UI to continue from cache.';\n    fi\n\n    eval '\n    function '\"$cmd\"' { return 0; }\n    function repair_wheelhouse { return 0; }\n    function install_run {'\\\n        \"$(if [ -n \"$MESSAGE\" ]; then\n            echo \\\n        '        echo -e \"\\n'\"$MESSAGE\"'\\n\"'\n        fi)\"\\\n    '\n        # Travis runs user scripts via `eval` i.e. in the same shell process.\n        # So have to unset errexit in order to get to cache save stage\n        set +e; return '\"$EXIT_CODE\"'\n    }'\n}\n\n\n\n#Internal functions\n\nfunction _brew_install_and_cache_within_time_limit {\n    # This fn is run with || so errexit can't be enabled\n\n    local PACKAGE TIME_LIMIT TIME_HARD_LIMIT TIME_START MARKED_INSTALLED\n    PACKAGE=\"${1:?}\" || return 2\n    TIME_LIMIT=${2:-$BREW_TIME_LIMIT} || return 2\n    TIME_HARD_LIMIT=${3:-$BREW_TIME_HARD_LIMIT} || return 2\n    TIME_START=${4:-$BREW_TIME_START} || return 2\n\n    if grep -qxFf <(cat <<<\"$_BREW_ALREADY_INSTALLED\") <<<\"$PACKAGE\"; then\n        MARKED_INSTALLED=1\n    fi\n\n    if [ -n \"$MARKED_INSTALLED\" ] || (brew list --versions \"$PACKAGE\" >/dev/null && ! (brew outdated | grep -qxF \"$PACKAGE\")); then\n        echo \"Already installed and the latest version: $PACKAGE\"\n        if [ -z \"$MARKED_INSTALLED\" ]; then _brew_mark_installed \"$PACKAGE\"; fi\n        return 0\n    fi\n\n    local BUILD_FROM_SOURCE INCLUDE_BUILD KEG_ONLY\n\n    _brew_is_bottle_available \"$PACKAGE\" KEG_ONLY || BUILD_FROM_SOURCE=1\n    [ -n \"$BUILD_FROM_SOURCE\" ] && INCLUDE_BUILD=\"--include-build\" || true\n\n    # Whitespace is illegal in package names so converting all whitespace into single spaces due to no quotes is okay.\n    DEPS=`brew deps \"$PACKAGE\" $INCLUDE_BUILD` || return 2\n    DEPS=`grep -vxF <(cat <<<\"$_BREW_ALREADY_INSTALLED\") <<<\"$DEPS\"` || test $? -eq 1 || return 2\n    for dep in $DEPS; do\n        #TIME_LIMIT only has to be met if we'll be actually building the main project this iteration, i.e. after the \"root\" module installation\n        #While we don't know that yet, we can make better use of Travis-given time with a laxer limit\n        #We still can't overrun TIME_HARD_LIMIT as that wouldn't leave time to save the cache\n        _brew_install_and_cache_within_time_limit \"$dep\" $(((TIME_LIMIT+TIME_HARD_LIMIT)/2)) \"$TIME_HARD_LIMIT\" \"$TIME_START\" || return $?\n    done\n\n    _brew_check_slow_building_ahead \"$PACKAGE\" \"$TIME_START\" \"$TIME_HARD_LIMIT\" || return $?\n    _brew_install_and_cache \"$PACKAGE\" \"$([[ -z \"$BUILD_FROM_SOURCE\" ]] && echo 1 || echo 0)\" \"$KEG_ONLY\" || return 2\n    _brew_check_elapsed_build_time \"$TIME_START\" \"$TIME_LIMIT\" || return $?\n}\n\n\nfunction _brew_parse_bottle_json {\n    # Parse JSON file resulting from `brew bottle --json`\n    # and save data into specified variables\n\n    local JSON; JSON=\"${1:?}\"; shift\n\n    local JSON_DATA; JSON_DATA=$(python3 -c 'if True:\n    import sys,json; j=json.load(open(sys.argv[1],\"rb\")); [name]=j.keys(); [pdata]=j.values()\n    print(name)\n    print(pdata[\"formula\"][\"pkg_version\"])\n    print(pdata[\"bottle\"][\"rebuild\"])\n    [(tag_name, tag_dict)]=pdata[\"bottle\"][\"tags\"].items()\n    print(tag_name)\n    print(tag_dict[\"sha256\"])\n    ' \"$JSON\")\n\n    unset JSON\n\n    { local i v; for i in {1..5}; do\n        read -r v\n        eval \"${1:?}=\\\"$v\\\"\"\n        shift\n    done } <<< \"$JSON_DATA\"\n}\n\nfunction _brew_parse_package_info {\n    # Get and parse `brew info --json` about a package\n    # and save data into specified variables\n\n    local PACKAGE OS_CODENAME\n    PACKAGE=\"${1:?}\"; shift\n    OS_CODENAME=\"${1:?}\"; shift\n\n    local JSON_DATA; JSON_DATA=$(python3 -c 'if True:\n    import sys, json, subprocess; j=json.loads(subprocess.check_output((\"brew\",\"info\",\"--json=v1\",sys.argv[1])))\n    data=j[0]\n    revision=data[\"revision\"]\n    # in bottle''s json, revision is included into version; here, they are separate\n    print(data[\"versions\"][\"stable\"]+(\"_\"+str(revision) if revision else \"\"))\n    bottle_data=data[\"bottle\"].get(\"stable\",{\"rebuild\":\"\",\"files\":{}})\n    print(bottle_data[\"rebuild\"])\n    print(bottle_data[\"files\"].get(sys.argv[2],{\"sha256\":\"!?\"})[\"sha256\"])     #prevent losing trailing blank line to command substitution\n    ' \\\n    \"$PACKAGE\" \"$OS_CODENAME\"); JSON_DATA=\"${JSON_DATA%\\!\\?}\"  #!? can't occur in a hash\n\n    unset PACKAGE OS_CODENAME\n\n    { local i v; for i in {1..3}; do\n        read -r v\n        eval \"${1:?}=\\\"$v\\\"\"\n        shift\n    done } <<< \"$JSON_DATA\"\n}\n\n\n\nfunction _brew_is_bottle_available {\n\n    local PACKAGE;PACKAGE=\"${1:?}\"\n    local VAR_KEG_ONLY=\"$2\"\n\n    # `brew info` prints \"Error: Broken pipe\" if piped directly to `head` and the info is long\n    # 141 = 128 + SIGPIPE\n    local INFO;INFO=\"$((brew info \"$PACKAGE\" | cat || test $? -eq 141) | head -n 1)\"\n    if [ -n \"$VAR_KEG_ONLY\" ]; then\n        if grep -qwF '[keg-only]' <<<\"$INFO\"; then\n            eval \"${VAR_KEG_ONLY}=1\"\n        else\n            eval \"${VAR_KEG_ONLY}=0\"\n        fi\n    fi\n\n    if grep -qxEe '[[:space:]]*bottle :unneeded' $(brew formula \"$PACKAGE\"); then\n        echo \"Bottle disabled: $PACKAGE\"\n        return 0\n    fi\n\n    if grep -qwF '(bottled)' <<<\"$INFO\"; then\n        echo \"Bottle available: $INFO\"\n        return 0\n    else\n        echo \"Bottle not available: $INFO\"\n        return 1\n    fi\n}\n\nfunction _brew_install_and_cache {\n    # Install bottle or make and cache bottle.\n    # assumes that deps were already installed\n    # and not already the latest version\n\n    local PACKAGE USE_BOTTLE KEG_ONLY\n    PACKAGE=\"${1:?}\"\n    USE_BOTTLE=\"${2:?}\"\n    KEG_ONLY=\"${3:?}\"\n    local VERB\n\n    if brew list --versions \"$PACKAGE\"; then\n        # Install alongside the old version to avoid to have to update \"runtime dependents\"\n        # https://discourse.brew.sh/t/can-i-install-a-new-version-without-having-to-upgrade-runtime-dependents/4443\n        VERB=\"install --force\"\n        if [ \"$KEG_ONLY\" -eq 0 ]; then\n            brew unlink \"$PACKAGE\"\n        fi\n    else\n        VERB=install\n    fi\n\n    if [[ \"$USE_BOTTLE\" -gt 0 ]]; then\n        echo \"Installing bottle for: $PACKAGE\"\n        brew $VERB \"$PACKAGE\"\n    else\n        echo \"Building bottle for: $PACKAGE\"\n        brew $VERB --build-bottle \"$PACKAGE\"\n        exec 3>&1\n        local OUT=$(brew bottle --json \"$PACKAGE\" | tee /dev/fd/3)\n        exec 3>&-\n\n        ls \"$PACKAGE\"*\n        # doesn't seem to be a documented way to get file names\n        local BOTTLE; BOTTLE=$(grep -Ee '^./' <<<\"$OUT\")\n        #proper procedure as per https://discourse.brew.sh/t/how-are-bottle-and-postinstall-related-is-it-safe-to-run-bottle-after-postinstall/3410/4\n        brew uninstall --ignore-dependencies \"$PACKAGE\"\n        brew $VERB \"$BOTTLE\"\n\n        local JSON; JSON=$(sed -E 's/bottle(.[[:digit:]]+)?\\.tar\\.gz$/bottle.json/' <<<\"$BOTTLE\")\n\n        #`brew bottle --merge` doesn't return nonzero on nonexisting json file\n        test -f \"$JSON\" -a -f \"$BOTTLE\"\n\n        brew bottle --merge --write \"$JSON\"\n        local CACHED_BOTTLE; CACHED_BOTTLE=\"$(brew --cache \"$PACKAGE\")\"\n        mv \"$BOTTLE\" \"$CACHED_BOTTLE\";\n        local CACHED_JSON; CACHED_JSON=\"${BREW_LOCAL_BOTTLE_METADATA}/$(basename \"$JSON\")\"\n        mv \"$JSON\" \"$CACHED_JSON\"\n        #Symlinks aren't cached by Travis. Will just save paths in files then.\n        local BOTTLE_LINK; BOTTLE_LINK=\"${CACHED_JSON}.bottle.lnk\"\n        echo \"$CACHED_BOTTLE\" >\"$BOTTLE_LINK\"\n\n    fi\n\n    _brew_mark_installed \"$PACKAGE\"\n}\n\nfunction _brew_mark_installed {\n    _BREW_ALREADY_INSTALLED=\"$_BREW_ALREADY_INSTALLED\"$'\\n'\"${1:?}\"\n}\n\nfunction _brew_check_elapsed_build_time {\n    # If time limit has been reached,\n    # arrange for further build to be skipped and return 1\n\n    local TIME_START TIME_LIMIT ELAPSED_TIME\n    TIME_START=\"${1:?}\"\n    TIME_LIMIT=\"${2:?}\"\n\n    ELAPSED_TIME=$(($(date +%s) - $TIME_START))\n    echo \"Elapsed time: \"$(($ELAPSED_TIME/60))\"m (${ELAPSED_TIME}s)\"\n\n    if [[ \"$ELAPSED_TIME\" -gt $TIME_LIMIT ]]; then\n        brew_go_bootstrap_mode\n        return 1\n    fi\n    return 0\n}\n\nfunction _brew_check_slow_building_ahead {\n\n    #If the package's projected build completion is higher than hard limit,\n    # skip it and arrange for further build to be skipped and return 1\n\n    local PACKAGE TIME_START TIME_HARD_LIMIT\n    PACKAGE=\"${1:?}\"\n    TIME_START=\"${2:?}\"\n    TIME_HARD_LIMIT=\"${3:?}\"\n\n    local PROJECTED_BUILD_TIME\n    PROJECTED_BUILD_TIME=$(echo \"$BREW_SLOW_BUILIDING_PACKAGES\" | awk '$1==\"'\"$PACKAGE\"'\"{print $2}')\n    [ -z \"$PROJECTED_BUILD_TIME\" ] && return 0 || true\n\n    local PROJECTED_BUILD_END_ELAPSED_TIME\n    PROJECTED_BUILD_END_ELAPSED_TIME=$(( $(date +%s) - TIME_START + PROJECTED_BUILD_TIME * 60))\n\n    if [[ \"$PROJECTED_BUILD_END_ELAPSED_TIME\" -ge \"$TIME_HARD_LIMIT\" ]]; then\n        echo -e \"\\nProjected build end elapsed time for $PACKAGE: $((PROJECTED_BUILD_END_ELAPSED_TIME/60))m ($PROJECTED_BUILD_END_ELAPSED_TIMEs)\"\n        brew_go_bootstrap_mode\n        return 1\n    fi\n    return 0\n}\n"
        }
      ]
    }
  ]
}