{
  "metadata": {
    "timestamp": 1736559849203,
    "page": 598,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "trailofbits/manticore",
      "stars": 3707,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 1.1669921875,
          "content": "version: \"2\"\nchecks:\n  argument-count:\n    enabled: true\n    config:\n      threshold: 12\n  complex-logic:\n    enabled: true\n    config:\n      threshold: 4\n  file-lines:\n    enabled: true\n    config:\n      threshold: 9000\n  method-complexity:\n    enabled: false\n    config:\n      threshold: 40\n  method-count:\n    enabled: false\n    config:\n      threshold: 45\n  method-lines:\n    enabled: true\n    config:\n      threshold: 53\n  nested-control-flow:\n    enabled: true\n    config:\n      threshold: 10\n  return-statements:\n    enabled: true\n    config:\n      threshold: 5\n  similar-code:\n    enabled: true\n    config:\n      threshold: 210\n  identical-code:\n    enabled: true\n    config:\n      threshold: 65\nplugins:\n  pep8:\n    enabled: true\n    checks:\n      E712:\n        enabled: false\n      E701:\n        enabled: false\n      E203:\n        enabled: false\n      W503:\n        enabled: false\n  sonar-python:\n    enabled: false\n    config:\n      minimum_severity: critical\n  radon:\n    enabled: false\n    config:\n      python_version: 3\n      threshold: \"D\"\nexclude_patterns:\n  - \"docs/\"\n  - \"examples/\"\n  - \"scripts/\"\n  - \"tests/\"\n  - \"mcore_*/\"\n  - \".tox/\"\n  - \"manticore/ethereum/parsetab.py\"\n\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.4560546875,
          "content": "[run]\nsource = manticore\nomit =\n\t*__init__.py\n\n[report]\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Don't try to cover special syntax \"...\" in abstract class\n    @abstractmethod\n\n    # Ignore informational/debugging log statements\n    logger.info\n    logger.debug\n\n    # We don't bother testing code that's explicitly unimplemented\n    raise NotImplementedError\n    raise AssertionError\n    raise Aarch64InvalidInstruction\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\nvenvpy27/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n# macOS Finder files\n.DS_Store\n\n# PyCharm files\n.idea/\n\n# mypy cache\n.mypy_cache/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 42.1376953125,
          "content": "# Change Log\n\n## [Unreleased](https://github.com/trailofbits/manticore/compare/0.3.7...HEAD)\n\n## 0.3.7 - 2022-02\n\nThanks to our external contributors!\n - [sobolevn](https://github.com/trailofbits/manticore/pulls?q=is%3Apr+author%3Asobolevn)\n - [G-11-P](https://github.com/trailofbits/manticore/pulls?q=is%3Apr+author%3AG-11-P)\n\n### Ethereum\n* Use `crytic-compile` 0.2.2 [#2530](https://github.com/trailofbits/manticore/pull/2530)\n* Multi-transaction analysis now uses fixed attacker and owner contracts [#2464](https://github.com/trailofbits/manticore/pull/2464)\n\n### Native\n* **[Added API]** Retrieve list of unimplemented syscalls [#2491](https://github.com/trailofbits/manticore/pull/2491)\n* Add `FXSAVE`/`FXRSTOR` concrete support on x86 [#2511](https://github.com/trailofbits/manticore/pull/2511)\n* Add `last_executed_pc` property to CPU [#2475](https://github.com/trailofbits/manticore/pull/2475)\n* Support LD_LIBRARY_PATH [#2476](https://github.com/trailofbits/manticore/pull/2476)\n* Optional `will/did_read_memory` events [#2488](https://github.com/trailofbits/manticore/pull/2488) \n* Fixed base address handling on Linux [#2500](https://github.com/trailofbits/manticore/pull/2500)\n* Add `ENDBR`-style NOPs [#2533](https://github.com/trailofbits/manticore/pull/2533)\n* Support `epoll`-related syscalls [#2529](https://github.com/trailofbits/manticore/pull/2529)\n\n### Other\n* **[Added API]** Add fork policy for providing explicit values [#2514](https://github.com/trailofbits/manticore/pull/2514)\n* Fixed Constant Folding [#2524](https://github.com/trailofbits/manticore/pull/2524)\n* Add simplifications for subtraction [#2504](https://github.com/trailofbits/manticore/pull/2504)\n* Parent state ID, last PC now available in state descriptors [#2479](https://github.com/trailofbits/manticore/pull/2479), [#2471](https://github.com/trailofbits/manticore/pull/2471)\n* States now contain a reference to the current manticore instance [#2486](https://github.com/trailofbits/manticore/pull/2486)\n* `fast_fail` config to exit after first state exception [#2487](https://github.com/trailofbits/manticore/pull/2487)\n* Scaling bugfix for large solver queries [#2502](https://github.com/trailofbits/manticore/pull/2502)\n* Don't fork when only one solution is found for `Concretize` [#2527](https://github.com/trailofbits/manticore/pull/2527)\n\n## 0.3.6 - 2021-06-09\n\nThanks to our external contributors!\n - [timgates42](https://github.com/trailofbits/manticore/commits?author=timgates42)\n\n### Ethereum\n* **[Changed API]** Default to quick mode: disable detectors and gas [#2457](https://github.com/trailofbits/manticore/pull/2457)\n* Allow symbolic balances from the beginning of execution [#1818](https://github.com/trailofbits/manticore/pull/1818)\n* Disable EVM Events in Testcases [#2417](https://github.com/trailofbits/manticore/pull/2417)\n\n### Native\n* **[Added API]** Syscall-specific hooks [#2389](https://github.com/trailofbits/manticore/pull/2389)\n* Fix wildcard behavior in symbolic files [#2454](https://github.com/trailofbits/manticore/pull/2454)\n* Bugfixes for control transfer between Manticore & Unicorn [#1796](https://github.com/trailofbits/manticore/pull/1796)\n\n### Other\n* Run multiple SMT solvers in parallel, take the fastest response [#2420](https://github.com/trailofbits/manticore/pull/2420)\n* Add socket for TUI [#1620](https://github.com/trailofbits/manticore/pull/1620)\n* Memory usage improvements in expression system [#2394](https://github.com/trailofbits/manticore/pull/2394)\n* Support for Boolector [#2410](https://github.com/trailofbits/manticore/pull/2410)\n* Solver Statistics API [#2415](https://github.com/trailofbits/manticore/pull/2415)\n* Allow duplicated config options [#2397](https://github.com/trailofbits/manticore/pull/2397)\n\n\n## 0.3.5 - 2020-11-06\n\nThanks to our external contributors!\n - [wolfo](https://github.com/trailofbits/manticore/commits?author=wolfo)\n - [geohot](https://github.com/trailofbits/manticore/commits?author=geohot)\n - [romits800](https://github.com/trailofbits/manticore/commits?author=romits800)\n\n### Ethereum\n* Made EVM module ignore runtime gas calculations by default [#1816](https://github.com/trailofbits/manticore/pull/1816)\n* Updated gas calculations for calls to empty accounts [#1774](https://github.com/trailofbits/manticore/pull/1774)\n* Fixed account existence checks for `selfdestruct` and `call` [#1801](https://github.com/trailofbits/manticore/pull/1801)\n\n### Native\n* **[Added API]** new `strlen` models [#1725](https://github.com/trailofbits/manticore/pull/1725)\n* **[Added API]** State-specific hooks [#1777](https://github.com/trailofbits/manticore/pull/1777)\n* Improved system call argument handling [#1785](https://github.com/trailofbits/manticore/pull/1785)\n* Improved `stat` support for file descriptors [#1780](https://github.com/trailofbits/manticore/pull/1780)\n* Support symbolic-length reads from sockets [#1786](https://github.com/trailofbits/manticore/pull/1786)\n* Add stubs for `sendto` [#1791](https://github.com/trailofbits/manticore/pull/1791)\n\n### WASM\n* Fix type confusion when importing external functions [#1803](https://github.com/trailofbits/manticore/pull/1803)\n\n### Other\n* Made [Yices2](https://yices.csl.sri.com/) the default SMT Solver [#1820](https://github.com/trailofbits/manticore/pull/1820)\n* **[Added API]** Added an API for introspecting live states [#1775](https://github.com/trailofbits/manticore/pull/1775)\n* Changed default multiprocessing type to threading [#1779](https://github.com/trailofbits/manticore/pull/1779)\n* Improved array serialization performance [#1756](https://github.com/trailofbits/manticore/pull/1756)\n* Fix name collisions in SMT variables [#1792](https://github.com/trailofbits/manticore/pull/1792)\n\n\n## 0.3.4 - 2020-06-26\n\nThanks to our external contributors!\n - [jimpo](https://github.com/trailofbits/manticore/commits?author=jimpo)\n - [langston-barrett](https://github.com/trailofbits/manticore/commits?author=langston-barrett)\n\n### Ethereum\n* Support and test against EVM Istanbul [#1676](https://github.com/trailofbits/manticore/pull/1676)\n* **[Added API]** Added a `manticore-verifier` script for checking properties of smart contracts [#1717](https://github.com/trailofbits/manticore/pull/1717)\n* Fixed RETURNDATASIZE [#1612](https://github.com/trailofbits/manticore/pull/1612)\n* Added strategies for symbolic SHA3 replacement [#1609](https://github.com/trailofbits/manticore/pull/1609)\n* Fixed GAS instruction [#1633](https://github.com/trailofbits/manticore/pull/1633)\n* Improved balance-related exploration [#1615](https://github.com/trailofbits/manticore/pull/1615)\n* Add `__format__` to EVM accounts [#1613](https://github.com/trailofbits/manticore/pull/1613)\n* Discard basic blocks that unavoidably REVERT [#1630](https://github.com/trailofbits/manticore/pull/1630)\n* Extract printable bytes from return data [#1671](https://github.com/trailofbits/manticore/pull/1671)\n* Support CHAINID, EXTCODEHASH, and SELFBALANCE instructions [#1644](https://github.com/trailofbits/manticore/pull/1644)\n* **[Changed API]** Renamed several arguments in EVM API, including `gaslimit` --> `gas` [#1652](https://github.com/trailofbits/manticore/pull/1652)\n* Explore states that self-destruct [#1699](https://github.com/trailofbits/manticore/pull/1699)\n* Lazy solving for the Ethereum leak detector [#1727](https://github.com/trailofbits/manticore/pull/1727)\n\n### Native\n* Support for ARM modified-immediate encodings [#1638](https://github.com/trailofbits/manticore/pull/1638)\n* Support for `/proc/self/maps` [#1639](https://github.com/trailofbits/manticore/pull/1639)\n* Support for `llseek` [#1640](https://github.com/trailofbits/manticore/pull/1640)\n* Support for `arm_fadvise64_64` [#1648](https://github.com/trailofbits/manticore/pull/1648)\n* Allow symbolic sockets in `accept` [#1618](https://github.com/trailofbits/manticore/pull/1618)\n* Fixes to `open` [#1657](https://github.com/trailofbits/manticore/pull/1657)\n* Overhauled filesystem emulation [#1673](https://github.com/trailofbits/manticore/pull/1673)\n* Fixed system call argument concretization [#1697](https://github.com/trailofbits/manticore/pull/1697)\n* **[Added API]** Add a symbolic model for `strcpy` [#1681](https://github.com/trailofbits/manticore/pull/1681)\n\n### WASM\n* Delay branch condition concretization for better coverage [#1641](https://github.com/trailofbits/manticore/pull/1641)\n\n### Other\n* **[Added API]** Added a snapshot system [#1710](https://github.com/trailofbits/manticore/pull/1710)\n* Transparent compression for state files [#1624](https://github.com/trailofbits/manticore/pull/1624)\n* Unify around singleton interface for solver [#1649](https://github.com/trailofbits/manticore/pull/1649)\n* Use `__slots__` to reduce memory usage in expression system [#1635](https://github.com/trailofbits/manticore/pull/1635)\n* **[Removed API]** Removed `policy` argument from ManticoreBase, added `outputspace_url` to optionally separate working files from output files [#1651](https://github.com/trailofbits/manticore/pull/1651)\n* Disable broken `get_related` logic [#1674](https://github.com/trailofbits/manticore/pull/1674)\n* Disable flaky Z3 tactics [#1691](https://github.com/trailofbits/manticore/pull/1691)\n* Remove Keystone engine from dependencies [#1684](https://github.com/trailofbits/manticore/pull/1684)\n* Improved error messages [#1632](https://github.com/trailofbits/manticore/pull/1632), [#1704](https://github.com/trailofbits/manticore/pull/1704)\n* Made ConstraintSets hashable [#1703](https://github.com/trailofbits/manticore/pull/1703)\n* Added system to dynamically enable/disable plugins [#1696](https://github.com/trailofbits/manticore/pull/1696) [#1708](https://github.com/trailofbits/manticore/pull/1708)\n* Re-establish support for Yices and CVC4 [#1714](https://github.com/trailofbits/manticore/pull/1714)\n* Improved constant folding and constraint set slicing [#1706](https://github.com/trailofbits/manticore/pull/1706)\n\n\n## 0.3.3 - 2020-01-30\n\nThanks to our external contributors!\n\n - [catenacyber](https://github.com/trailofbits/manticore/commits?author=catenacyber)\n\n### Ethereum\n* **[added API]** Flag to only generate alive states when finalizing Manticore [#1554](https://github.com/trailofbits/manticore/pull/1554)\n* Fix gas check [#1587](https://github.com/trailofbits/manticore/pull/1587)\n\n### Native\n* **[added API]** Add post-instruction hooks [#1579](https://github.com/trailofbits/manticore/pull/1579)\n* Fix issue with re-using stdio file descriptors after they'd been closed [#1604](https://github.com/trailofbits/manticore/pull/1604)\n\n### WASM\n* **[added API]** getattr-style calls for WASM functions [#1578](https://github.com/trailofbits/manticore/pull/1578)\n* **[changed API]** Pass state to function calls instead of constraint sets [#1578](https://github.com/trailofbits/manticore/pull/1578)\n* **[added API]** Added read/write helper methods to memory instances [#1589](https://github.com/trailofbits/manticore/pull/1589)\n\n### Other\n* **[added API]** Added streamlined state serialization interface [#1596](https://github.com/trailofbits/manticore/pull/1596)\n* Fixed Z3 version parsing [#1551](https://github.com/trailofbits/manticore/pull/1551)\n* Unique names for ArrayVars [#1552](https://github.com/trailofbits/manticore/pull/1552)\n* Improve pickling and multiprocessing compatibility [#1583](https://github.com/trailofbits/manticore/pull/1583)\n* Fix SMTLib visitor bug that broke the example tests [#1577](https://github.com/trailofbits/manticore/pull/1577)\n* Optimize MinMax SMTLib operations [#1599](https://github.com/trailofbits/manticore/pull/1599)\n\n## 0.3.2 - 2019-11-11\n\nThanks to our external contributors!\n\n - [Srinivas11789](https://github.com/trailofbits/manticore/commits?author=Srinivas11789)\n - [catenacyber](https://github.com/trailofbits/manticore/commits?author=catenacyber)\n - [Boyan-MILANOV](https://github.com/trailofbits/manticore/commits?author=Boyan-MILANOV)\n\n### Ethereum\n* **[added API]** Use higher-level test generation to symbolically execute SHA3 [#1526](https://github.com/trailofbits/manticore/pull/1526)\n* **[added API]** Added fast unsound SHA3 strategy [#1549](https://github.com/trailofbits/manticore/pull/1549)\n* **[added API]** Added plugin for discarding states without changes to storage [#1507](https://github.com/trailofbits/manticore/pull/1507)\n* **[fixed API]** Fix `ADDMOD` and `MULMOD` [#1531](https://github.com/trailofbits/manticore/pull/1531)\n* Warn on missing bytecode [#1534](https://github.com/trailofbits/manticore/pull/1534)\n* Simplifiy PC upon modification [#1523](https://github.com/trailofbits/manticore/pull/1523)\n\n\n### Native\n* Better memory tests ([#1506](https://github.com/trailofbits/manticore/pull/1506), [1524](https://github.com/trailofbits/manticore/pull/1524))\n* Memory IO performance improvements [#1509](https://github.com/trailofbits/manticore/pull/1509)\n* **[added API]**  Expose ELF dynamic load addresses [#1515](https://github.com/trailofbits/manticore/pull/1515)\n* Optimize instruction decoding ([#1522](https://github.com/trailofbits/manticore/pull/1522), [#1527](https://github.com/trailofbits/manticore/pull/1527))\n* Add partial support for `recvfrom` syscall [#1514](https://github.com/trailofbits/manticore/pull/1514)\n* **[fixed API]** Add `will_write_memory` event to `write_bytes` [#1535](https://github.com/trailofbits/manticore/pull/1535)\n* Update supported Unicorn version [#1536](https://github.com/trailofbits/manticore/pull/1536)\n* Fix file pointer leak in ELF interpreter [#1538](https://github.com/trailofbits/manticore/pull/1538)\n* Deduplicate socket symbol names [#1542](https://github.com/trailofbits/manticore/pull/1542)\n* Improve environment variable parsing [#1545](https://github.com/trailofbits/manticore/pull/1545)\n* **[fixed API]** Reduce chance of orphaned `did_execute_instruction` event [#1529](https://github.com/trailofbits/manticore/pull/1529)\n\n### WASM\n* **[added API]** Added initial support for webassembly [#1495](https://github.com/trailofbits/manticore/pull/1495)\n\n### Other\n* Incorporate type checking (mypy) into CI [#1544](https://github.com/trailofbits/manticore/pull/1544)\n* Fixes to smtlib ([#1512](https://github.com/trailofbits/manticore/pull/1512), [#1511](https://github.com/trailofbits/manticore/pull/1511))\n* Remove runtime type checking from smtlib to improve performance [#1543](https://github.com/trailofbits/manticore/pull/1543)\n* Logging improvements ([#1518](https://github.com/trailofbits/manticore/pull/1518), [#1520](https://github.com/trailofbits/manticore/pull/1520))\n* Simplify unsigned division constant folding [#1530](https://github.com/trailofbits/manticore/pull/1530)\n* Improve signed division logic [#1540](https://github.com/trailofbits/manticore/pull/1540)\n* **[changed API]** Move to manticore-specific exception types [#1537](https://github.com/trailofbits/manticore/pull/1537)\n* **[changed API]** Save profiling data in the workspace instead of the current directory [#1539](https://github.com/trailofbits/manticore/pull/1539)\n\n\n## 0.3.1 - 2019-08-06\n\nThanks to our external contributors!\n\n - [arcz](https://github.com/trailofbits/manticore/commits?author=arcz)\n\n### Ethereum\n* Smart contracts are now compiled using [Crytic-Compile](https://github.com/crytic/crytic-compile) [#1406](https://github.com/trailofbits/manticore/pull/1406)\n* Added detector for strict comparisons to BALANCE [#1481](https://github.com/trailofbits/manticore/pull/1481)\n* Added bitshift instructions [#1498](https://github.com/trailofbits/manticore/pull/1498)\n* Added stub for STATICCALL (does not enforce static nature) [#1494](https://github.com/trailofbits/manticore/pull/1494)\n* Updated EVM Examples [#1486](https://github.com/trailofbits/manticore/pull/1486)\n\n### Native\n* Fixed `getdents` syscall [#1472](https://github.com/trailofbits/manticore/pull/1472)\n* Fixed state merging examples [#1482](https://github.com/trailofbits/manticore/pull/1482)\n* Support LSR.W on ARMV7 [#1363](https://github.com/trailofbits/manticore/pull/1363)\n* Fixed CrackMe Example [#1502](https://github.com/trailofbits/manticore/pull/1502)\n* Optimize CMPXCHG8B [#1501](https://github.com/trailofbits/manticore/pull/1501)\n* Added `fast_crash` configuration setting that causes Manticore to immediately produce a finding on memory unsafety [#1485](https://github.com/trailofbits/manticore/pull/1485)\n\n### Other\n* **[changed API]** Moved `issymbolic` into SMTLib to improve performance [#1456](https://github.com/trailofbits/manticore/pull/1456)\n* Refactored API Docs [#1469](https://github.com/trailofbits/manticore/pull/1469)\n* Fixed `FileNotFound` Error on state loading [#1480](https://github.com/trailofbits/manticore/pull/1480)\n\n## 0.3.0 - 2019-06-06\n\nThanks to our external contributors!\n\n - [catenacyber](https://github.com/trailofbits/manticore/commits?author=catenacyber)\n - [binaryflesh](https://github.com/trailofbits/manticore/commits?author=binaryflesh)\n \n### Major Changes\n##### Executor Refactor ([#1385](https://github.com/trailofbits/manticore/pull/1385))\nWe've completed a major refactor of the core executor that reorganizes Manticore's state machine to be more amenable toward use with the multiprocesssing module. This refactor introduces some small API changes:\n* One must explicitly call the `finalize` method to dump test cases from a run\n* The `will_start_run` event has been renamed to `will_run`\n* The `solver` module requires explicitly accessing the Z3Solver singleton. `from manticore.core.smtlib import solver` becomes:\n```python\nfrom manticore.core.smtlib.solver import Z3Solver\nsolver = Z3Solver.instance()\n```\n* `manticore.running_states` has been renamed to `manticore._busy_states`\nFor more information about changes to the state machine, see [the diagram in core/manticore.py](https://github.com/trailofbits/manticore/blob/451965f03a5e0d6766e499bf3246e4796b35638f/manticore/core/manticore.py#L132-L239)\n\n##### Blacken ([#1438](https://github.com/trailofbits/manticore/pull/1438))\nWe've run the [`black`](https://black.readthedocs.io/en/stable/index.html) autoformatter on the master branch of Manticore, and added a check for compliance to our CI. To ensure your code is properly formatted, run `black -t py36 -l 100 .` in your Manticore directory before committing. \n\n##### Support for statically-linked AArch64 binaries ([#1424](https://github.com/trailofbits/manticore/pull/1424))\nContractor [nkaretnikov](https://github.com/trailofbits/manticore/commits?author=nkaretnikov) spent several months adding support for AArch64 on Linux. As this is a brand new architecture, we've left in most of the debugging assertions, which may slow it down slightly. \nWe look forward to getting feedback on this architecture so we can eventually remove the debugging assertions. \n\n\n### Ethereum\n\n* Added Symbolic EVM Tests for the Frontier fork. Note that we don't support any other forks (i.e. Constantinople) yet. ([#1431](https://github.com/trailofbits/manticore/pull/1431), [#1441](https://github.com/trailofbits/manticore/pull/1441))\n* **[fixed API]** Fixed relative paths for .sol files ([#1393](https://github.com/trailofbits/manticore/pull/1393))\n* **[fixed API]** Support dynamic parameters in constructors ([#1414](https://github.com/trailofbits/manticore/pull/1414))\n* Fixed detector failure when PC is symbolic ([#1395](https://github.com/trailofbits/manticore/pull/1395))\n* Transfers from etherless contracts no longer report STOP ([#1392](https://github.com/trailofbits/manticore/pull/1392))\n\n### Native\n\n* Added stubs for missing system calls & downgraded most missing calls from exceptions to warnings ([#1384](https://github.com/trailofbits/manticore/pull/1384))\n* Fixed DECREE magic pages ([#1413](https://github.com/trailofbits/manticore/pull/1413))\n* Store x86 registers in a set instead of a list ([#1415](https://github.com/trailofbits/manticore/pull/1415))\n* Fix register boundary check for non-x86 architectures ([#1429](https://github.com/trailofbits/manticore/pull/1429))\n* Support `movhps` on x86 ([#1444](https://github.com/trailofbits/manticore/pull/1444))\n\n### Other\n\n* Only publish events when there is at least one subscriber ([#1388](https://github.com/trailofbits/manticore/pull/1388))\n* Added sandshrew example ([#1396](https://github.com/trailofbits/manticore/pull/1396))\n* Updated Unicorn to track latest master ([#1440](https://github.com/trailofbits/manticore/pull/1440))\n* **[fixed API]** Now respects coverage file argument ([#1442](https://github.com/trailofbits/manticore/pull/1442))\n\n\n## 0.2.5 - 2019-03-18\n\nThanks to our external contributors!\n\n - [werew](https://github.com/trailofbits/manticore/commits?author=werew)\n - [NicolaiSoeborg](https://github.com/trailofbits/manticore/commits?author=NicolaiSoeborg)\n - [Joool](https://github.com/trailofbits/manticore/commits?author=Joool)\n\n### Ethereum\n\n* **[added API]** `json_create_contract` - support creating EVM contracts from Truffle JSON artifacts ([#1376](https://github.com/trailofbits/manticore/pull/1376))\n* **[changed API]** Moved default gas value to config module ([#1346](https://github.com/trailofbits/manticore/pull/1346))\n* **[fixed API]** Fixed account creation with a code field ([#1371](https://github.com/trailofbits/manticore/pull/1371))\n* **[fixed API]** Fixed an incorrect attribute in `last_return` ([#1341](https://github.com/trailofbits/manticore/pull/1341))\n* **[refactor]** Inlined get_possible solutions function as it's only used once ([#1372](https://github.com/trailofbits/manticore/pull/1372))\n* Fixed `_check_jumpdest` when run with detectors - this bug could lead to not detecting an int overflow due to tainting made by another detector ([#1347](https://github.com/trailofbits/manticore/pull/1347))\n* Made findings print addresses in hex ([#1339](https://github.com/trailofbits/manticore/pull/1339))\n\n### Native\n\n* **[added API]** Added Unicorn preloading, for quickly performing concrete emulation until a target address is reached. ([#1356](https://github.com/trailofbits/manticore/pull/1356))\n* Fixed incorrect return value in `sys_lseek` ([#1355](https://github.com/trailofbits/manticore/pull/1355))\n* Added check for missing native packages ([#1367](https://github.com/trailofbits/manticore/pull/1367))\n\n### Other\n\n* **[added API]** Added context managers for the config module, allowing for temporary configurations ([#1345](https://github.com/trailofbits/manticore/pull/1345))\n* Updated Capstone to 4.0.1 ([#1312](https://github.com/trailofbits/manticore/pull/1312))\n* Embedded parsetab.py so users no longer need to generate it ([#1383](https://github.com/trailofbits/manticore/pull/1383))\n\n\n## 0.2.4 - 2019-01-10\n\n### Ethereum\n\n* **[added API]** Fixed VerboseTrace plugin ([#1305](https://github.com/trailofbits/manticore/pull/1305)) and added VerboseTraceStdout plugin  ([#1305](https://github.com/trailofbits/manticore/pull/1305)): those can be used to track EVM execution (`m.regiser_plugin(VerboseTraceStdout())`)\n* **[changed API]** Made gas calculation faithfulness configurable: this way, you can choose whether you respect or ignore gas calculations with `--evm.oog <opt>` (see `--help`); also, the gas calculations has been decoupled into its own methods ([#1279](https://github.com/trailofbits/manticore/pull/1279))\n* **[changed API]** Changed default gas to 3000000 when creating contract ([#1332](https://github.com/trailofbits/manticore/pull/1332))\n* **[changed API]** Launching manticore from cli will display all registered plugins ([#1301](https://github.com/trailofbits/manticore/pull/1301))\n* Fixed a bug where it wasn't possible to call contract's function when its name started with an underscore ([#1306](https://github.com/trailofbits/manticore/pull/1306))\n* Fixed `Transaction.is_human` usage and changed it to a property ([#1323](https://github.com/trailofbits/manticore/pull/1323))\n* Fixed `make_symbolic_address` not preconstraining the symbolic address to be within all already-known addresses ([#1318](https://github.com/trailofbits/manticore/pull/1318))\n* Fixed bug where a terminated state became a running one if `m.running_states` or `m.terminated_states` were generated ([#1326](https://github.com/trailofbits/manticore/pull/1326))\n\n### Native\n\n* **[added API]** Added symbol resolution feature, so it is possible to grab a symbol address by using `m.resolve(symbol)` ([#1302](https://github.com/trailofbits/manticore/pull/1302))\n* **[changed API]** The `stdin_size` CLI argument has been moved to config constant and so has to be passed using `--native.stdin_size` instead of `--stdin_size` ([#1337](https://github.com/trailofbits/manticore/pull/1337))\n* Speeded up Armv7 execution a bit ([#1313](https://github.com/trailofbits/manticore/pull/1313))\n* Fixed `sys_arch_prctl` syscall when wrong `code` value was passed and raise a NotImplementedError instead of asserting for not supported code values ([#1319](https://github.com/trailofbits/manticore/pull/1319))\n\n### Other\n\n* **[changed API]** Fixed missing CLI arguments that came from config constants - note that `timeout` has to be passed using `core.timeout` now ([#1337](https://github.com/trailofbits/manticore/pull/1337))\n* We now explicitly require Python>=3.6 when using CLI or when importing Manticore ([#1331](https://github.com/trailofbits/manticore/pull/1331))\n* `__main__` now fetches manticore version from installed modules ([#1310](https://github.com/trailofbits/manticore/pull/1310))\n* Refactored some of the codebase (events [#1314](https://github.com/trailofbits/manticore/pull/1314), solver [#1334](https://github.com/trailofbits/manticore/pull/1334), tests [#1308](https://github.com/trailofbits/manticore/pull/1308), py2->py3 [#1307](https://github.com/trailofbits/manticore/pull/1307), state/platform [#1320](https://github.com/trailofbits/manticore/pull/1320), evm stuff [#1329](https://github.com/trailofbits/manticore/pull/1329))\n* Some other fixes and minor changes\n\n\n## 0.2.3 - 2018-12-11\n\nThanks to our external contributors!\n\n- [NeatMonster](https://github.com/NeatMonster)\n- [evgeniuz](https://github.com/evgeniuz)\n- [stephan-tolksdorf](https://github.com/stephan-tolksdorf)\n- [yeti-detective](https://github.com/yeti-detective)\n- [PetarMI](https://github.com/PetarMI)\n- [hidde-jan](https://github.com/hidde-jan)\n- [catenacyber](https://github.com/catenacyber)\n\n### Added\n\n- Support for ARM THUMB instructions: ADR, ADDW, SUBW, CBZ, TBB, TBH, STMDA, STMDB\n- `State.solve_minmax()` API for querying a BitVec for its min/max values\n- New SMTLIB optimization for simplifying redundant concat/extract combinations; helps reduce expression complexity, and speed up queries\n- Ethereum: `--txpreconstrain` CLI flag. Enabling this avoids sending ether to nonpayable functions, primarily avoiding exploration of uninteresting revert states.\n- Research memory model (LazySMemory) allowing for symbolic memory indexing to be handled without concretization (opt in, currently for research only)\n\n### Changed\n\n- Linux/binary analysis has been moved to `manticore.native`, `manticore.core.cpu` has been moved to `manticore.native.cpu`. Please update your imports.\n- The binary analysis dependencies are now not installed by default. They can be installed with `pip install manticore[native]`. This is to prevent EVM users from installing binary dependencies.\n- The symbolic `stdin_size` is now a config variable (in `main` config group) with a default of 256 (it was like this before).\n- `ManticoreEVM.generate_testcase()` 'name' parameter is now optional\n- Manticore CLI run on a smart contract will now use all detectors by default (detectors can be listed with --list-detectors, excluded with --exclude <detectors> or --exclude-all)\n- Misusing the ManticoreEVM API, for example by using old keyword arguments that are not available since some versions (like ManticoreEVM(verbosity=5)) will now raise an exception instead of not applying the argument at all.\n\n### Fixed\n\n- Ethereum: Fixed CLI timeout support\n- Numerous EVM correctness fixes for Frontier fork\n- Fixed handling of default storage and memory in EVM (reading from previously unused cell will return a zero now)\n- ARM THUMB mode, Linux syscall emulation fixes\n- Creation of multiple contracts with symbolic arguments (ManticoreEVM.solidity_create_contract with args=None fired more than once failed before)\n\n### Removed\n\n- `Manticore.evm` static method\n\n## 0.2.2 - 2018-10-30\n\nThanks to our external contributors!\n\n- [charliecjung](https://github.com/charliecjung)\n- [redyoshi49q](https://github.com/redyoshi49q)\n- [yeti-detective](https://github.com/yeti-detective)\n- [Srinivas11789](https://github.com/srinivas11789)\n- [stephan-tolksdorf](https://github.com/stephan-tolksdorf)\n- [catenacyber](https://github.com/catenacyber)\n- [MJ10](https://github.com/MJ10)\n\n### Added\n\n- New API for generating a testcase only if a certain condition can be true in the state. Useful for conveniently\n  checking an invariant in a state, and  (`ManticoreEVM.generate_testcase(..., only_if=)`) generating a testcase if it\n  can be violated.\n- New `constrain=` optional parameter for `State.solve_one` and `State.solve_buffer`. After solving for a symbolic variable,\n  mutate the state by applying that solution as a constraint. Useful if concretizing a few symbolic variables, and later\n  concretizations should take into account previously solved for values.\n- `ManticoreEVM.human_transactions` top level API. Mirrors `ManticoreEVM.transactions`, but does not contain any internal\n  transactions.\n- Emit generated transaction data in human readable format (JSON)\n- Warning messages if number of passed arguments to a Solidity function is inconsistent with the number declared\n- CLI support for the ReentrancyAdvancedDetector\n- Colored CLI output\n- Configuration system. Allows configuration options to be specified in a config file. New configurations are available,\n  notably including solver parameters such as solver timeout, and memory limits.\n- Support for some unimplemented x86 XMM instructions\n- Customizable symbolic stdin input buffer size\n- Support for [Etheno](https://github.com/trailofbits/etheno)\n- `RaceConditionDetector` that can be used to detect transaction order dependencies bugs\n\n### Changed\n\n- Improve the DetectExternalCallAndLeak detector and reduce false positives\n- Numerous improvements and changes to the SolidityMetadata API\n- Ethereum contract addresses are no longer random, but are deterministically calculated according to the Yellow Paper\n- Manticore no longer supports contracts with symbolic addresses creating new contracts. This is a consequence of\n  supporting determinstic contrat address calculation. There are plans for reenabling this capability in a future release.\n\n### Deprecated\n\n- Several SolidityMetadata APIs: `.get_hash()`, `.functions`, `.hashes`\n\n### Fixed\n\n- Numerous fixes and enhancements to the Ethereum ABI implementation\n- Better handling of overloaded functions in SolidityMetadata, and other bug fixes\n- Fixes for the FilterFunctions plugin\n- Fixes for symbolic SHA3 handling\n- Many EVM correctness/consensus fixes\n- Numerous spelling errors\n\n## 0.2.1.1 - 2018-09-01\n\nIn this release, the codebase has been relicensed under the AGPLv3 license.\nPlease [contact us](opensource@trailofbits.com) if you're looking for an exception to these terms!\n\nThanks to our external contributors!\n\n- [s0b0lev](https://github.com/s0b0lev)\n- [redyoshi49q](https://github.com/redyoshi49q)\n\n### Added\n \n- Full suite of Ethereum detectors\n    - Selfdestruct (`--detect-selfdestruct`): Warns if a selfdestruct instruction is reachable by the user\n    - Ether Leak (`--detect-externalcall`): Warns if there is a call to the user, or a user controlled address, and ether can be sent.\n    - External Call (`--detect-externalcall`): Warns if there is a call to the user, or a user controlled address.\n    - Reentrancy (`--detect-reentrancy`): Warns if there is a change of storage state after a call to the user, or a user controlled address, with >2300 gas. This is an alternate implementation enabled in the CLI. The previous implementation is still available for API use (`DetectReentrancyAdvanced`).\n    - Delegatecall (`--detect-delegatecall`): Warns if there is a delegatecall to a user controlled address, or to a user controlled function.\n    - Environmental Instructions (`--detect-env`): Warns if certain instructions are used that can be potentially manipulated. Instructions: BLOCKHASH, COINBASE, TIMESTAMP, NUMBER, DIFFICULTY, GASLIMIT, ORIGIN, GASPRICE.\n- New Ethereum command line flags\n    - `--no-testcases`: Do not generate testcases for discovered states\n    - `--txnoether`: Do not make the transaction value symbolic in executed transactions\n- SMTLIB: Advanced functionality for expression migration. Expressions from arbitrary constraint sets can be mixed to create arbitrary constraints, expressions are transparently migrated from constraint set to another, avoiding SMT naming collisions.\n \n### Changed\n\n- Command line interface uses new reentrancy detector based on detection of user controlled call addresses\n \n### Fixed\n\n- Ethereum: Support for overloaded solidity functions\n- Ethereum: Significantly improved ability to create symbolic variables and constraints at the global level\n- Ethereum: Improved gas support\n- State serialization improvements and fixes\n\n## 0.2.0 - 2018-08-10\n\nIn this release, the codebase has been ported to Python 3.6, which is a breaking change for API clients. Beginning with 0.2.0, client programs of Manticore must be compatible with Python 3.6.\n\nThanks to our external contributors!\n\n- [ianklatzco](https://github.com/ianklatzco)\n- [devtty1er](https://github.com/devtty1er)\n- [catenacyber](https://github.com/catenacyber)\n\n### Added\n\n- Ethereum: More flexibility for Solidity compilation toolchains\n- Ethereum: Detectors for unused return value, reentrancy\n- Ethereum: Support for Solidity `bytesM` and `bytes` types\n- Ethereum: Beta API for preconstraining inputs (`ManticoreEVM.constrain`)\n- Improved performance for smtlib module\n- Ability to transparently operate on bytearray and symbolic buffer (ArrayProxy) types (e.g: concatenate, slice)\n\n### Changed\n\n- **Codebase has been entirely ported to Python 3.6+**\n- Ethereum: `ManticoreEVM.make_symbolic_value()` can be size adjustable\n- Ethereum: Ethereum ABI (`manticore.ethereum.ABI`) API refactor, including real Solidity prototype parser\n- Ethereum: Improved APIs for accessing transaction history\n- Ethereum: Significant internal refactor\n\n### Fixed\n\n- Linux: Bugs related to handling of closed files\n- Ethereum: Handling of symbolic callers/addresses\n- Ethereum: Handling of gas handling on CALL instructions\n- Various smtlib/expression fixes\n\n### Removed\n\n- Support for Python 2\n- EVM disassembler/assembler module (EVMAsm) has been removed and separately released as [pyevmasm](https://github.com/trailofbits/pyevmasm)\n- Experimental support for Binary Ninja IL emulation\n\n## 0.1.10 - 2018-06-22\n\nThanks to our external contributors!\n\n- [khorben](https://github.com/khorben)\n- [catenacyber](https://github.com/catenacyber)\n- [dwhjames](https://github.com/dwhjames)\n- [matiasb](https://github.com/matiasb)\n- [reaperhulk](https://github.com/reaperhulk)\n- [lazzarello](https://github.com/lazzarello)\n\n### Added\n\n- ARM: New instructions to better support Raspberry Pi binaries (UTXH, UQSUB8)\n- Linux: Can use `--env` and `LD_LIBRARY_PATH` to specify alternate ELF interpreter locations for dynamic binaries\n- Linux: Partial chroot(2) and fork(2) models\n- Initial support for NetBSD hosts\n- Ethereum: `--avoid-constant` cli argument to enable heuristics to avoid unnecessary exploration of constant functions\n\n### Changed\n\n- Ethereum detectors are now opt-in, via cli flags: `--detect-overflow`, `--detect-invalid`, `--detect-uninitialized-memory`, `--detect-uninitialized-storage`, `--detect-all`\n- Ethereum: Complete internal refactor.\n    - Model memory using smtlib arrays to better support symbolic indexing\n    - Numerous internal API improvements\n    - Better symbolic gas support\n    - More advanced overflow detection heuristics\n    - Account names, scripts can assign names to accounts or contracts\n    - Better ABI serializer/deserializer for canonical types, supports tuples/structs and recursive types\n    - State list iterations improvements, modifications to state persist\n    - Symbolic caller, address, value and data in transactions\n\n### Fixed\n\n- Linux: Generate concretized file content for symbolic files\n- Linux: Fixes in various syscall models (brk, stat*), and miscellaneous fixes\n- Ethereum: Inaccurate transaction history in some cases\n\n## 0.1.9 - 2018-05-04\n\nThanks to our external contributors!\n\n- [khorben](https://github.com/khorben)\n- [arunjohnkuruvilla](https://github.com/arunjohnkuruvilla)\n- [cclauss](https://github.com/cclauss)\n- [dwhjames](https://github.com/dwhjames)\n- [catenacyber](https://github.com/catenacyber)\n- [disconnect3d](https://github.com/disconnect3d)\n\n### Added\n\n- Ethereum: `--txnocoverage` cli argument to suppress coverage based analysis halting criteria\n- Ethereum: Support added for more Solidity features (imports, uint/int types, function types)\n\n### Fixed\n\n- Numerous Ethereum ABI fixes\n- Linux and x86/64 emulation fixes\n- Solver performance issue\n\n## 0.1.8 - 2018-03-30\n\nThanks to our external contributors!\n\n- [khorben](https://github.com/khorben)\n- [disconnect3d](https://github.com/disconnect3d)\n- [arunjohnkuruvilla](https://github.com/arunjohnkuruvilla)\n- [mroll](https://github.com/mroll)\n\n### Added\n\n- Ethereum: `--txaccount` cli argument to control caller of transaction\n- Ethereum: Per state execution trace files in workspace\n\n### Fixed\n\n- Linux: `--data` cli argument to specify concrete stdin\n- Numerous Ethereum fixes and stability improvements\n- Fixes for native cpu emulation\n\n## 0.1.7 - 2018-02-23\n\nThis release brings EVM, performance, Linux emulation, and API improvements, along with numerous bug fixes. Thanks again to our external contributors!\n\n- [jean](https://github.com/jean)\n- [disconnect3d](https://github.com/disconnect3d)\n- [arunjohnkuruvilla](https://github.com/arunjohnkuruvilla)\n- [alexanderholman](https://github.com/alexanderholman)\n- [Srinivas11789](https://github.com/Srinivas11789)\n\n### Added\n\n - [Documentation](https://github.com/trailofbits/manticore/blob/master/docs/syminput.rst) on symbolic input\n - \"[force](http://manticore.readthedocs.io/en/latest/api.html#manticore.core.cpu.abstractcpu.Cpu.write_bytes)\" keyword argument in `cpu.write_bytes/read_bytes` etc.\n - Linux syscalls: getrandom(), openat()\n\n### Fixed\n\n- Improved ARMv7 Thumb support\n- Numerous EVM bug fixes and improvements (transaction generation, SHA3 handling, instruction tracing, int overflow detection)\n- Improved x86/64 emulation performance\n\n## 0.1.6 - 2017-12-22\n\nThis release brings improved EVM support, performance improvements, and numerous bug fixes. Thanks to our external contributors!\n\n- [cole-lightfighter](https://github.com/cole-lightfighter)\n- [arunjohnkuruvilla](https://github.com/arunjohnkuruvilla)\n- [Srinivas11789](https://github.com/Srinivas11789)\n- [sidhant-gupta-004](https://github.com/sidhant-gupta-004)\n- [roachspray](https://github.com/roachspray)\n- [dbogs425](https://github.com/dbogs425)\n- [HighW4y2H3ll](https://github.com/HighW4y2H3ll)\n- [chowdaryd](https://github.com/chowdaryd)\n\n### Added\n\n- Ethereum support in the command line (Solidity files)\n- --version, --txlimit flags to command line\n- x86/64: Improved support for PCMPXSTRX instruction family\n- Ethereum EVM assembly/disassembly APIs\n\n### Changed\n\n- Workspace .txt file extension changed to .input\n- Ethereum EVM analysis APIs\n\n### Fixed\n\n- Deserializing Linux states with special files (/dev) opened\n- Redundant forking performance issue fixed\n- Various bugfixes in Decree, Linux, ARMv7 Thumb, Unicorn fallback emulation, Z3 Solver interface\n\n## 0.1.5 - 2017-10-19\n\nThanks to our external contributors to this release!\n\n- [johnfxgalea](https://github.com/johnfxgalea)\n\n### Deprecated\n\n- `Manticore('binary', ['arg1', 'arg2'])` style initialization. Use new class methods (see below).\n\n### Added\n\n- Platform-specific class methods for Manticore initialization\n  - e.g. `Manticore.linux('binary', ['arg1', 'arg2'])`\n- `Manticore.init` analysis initialization hook\n- Linux: Various new syscall support, including basic TCP socket support\n- Core: An updated plugin infrastructure\n- [Experimental] Support for symbolic execution of Ethereum Virtual Machine bytecode\n\n### Changed\n\n- `Manticore.verbosity`: logging preset levels interface is now a static method, replacing `m.verbosity` property\n- Logger output is slightly modified to be more Pythonic\n\n### Fixed\n\n- Numerous bugfixes and refactors\n- Linux: stderr file is generated in workspace\n\n### Removed\n\n- Requirement of external z3 binary installation (z3 installation occurs automatically now via pip)\n\n## 0.1.4 - 2017-08-18\n\n### Added\n\n- `Manticore.locked_context()` (safe parallel context access)\n- `State.generate_testcase()` (arbitrary testcase generation from hooks)\n- Documentation on [gotchas](http://manticore.readthedocs.io/en/latest/gotchas.html)\n- Command line interface support for symbolic files (`--file`) (thanks [251](https://github.com/251)!)\n- [Experimental] `State.context['branches']` (States track symbolic branches)\n- [Experimental] Support for emulation of [Binary Ninja](https://binary.ninja) IL\n\n### Changed\n\n- Taint parameters added to `State.new_symbolic_buffer()` and `State.symbolicate_buffer()` (thanks [ehennenfent](https://github.com/ehennenfent)!)\n- Improved support for ARM binaries\n- `Manticore.verbosity` logging preset levels\n\n### Fixed\n\n- Numerous bugfixes\n- Fixed workspace error message bug (thanks [chowdaryd](https://github.com/chowdaryd)!)\n- Fixed double workspace bug\n\n### Removed\n\n- [Experimental] `State.generate_inputs()` (superseded by `State.generate_testcase()`)\n\n## 0.1.3 - 2017-07-14\n\n### Added\n\n- Support for Redis as a storage backend, plus an API for user-defined serializers and storage backends\n- \"Events\" which work as global signals for communication across Manticore\n- Support for using Binary Ninja for visualization\n- Executor now provides a global shared context\n- State now provides a local context\n\n### Changed\n\n- Refactored Executor and everything it talks to significantly\n- Some older APIs may be broken or removed by the above refactor (`state.co` is no more, for instance)\n\n### Fixed\n\n- Numerous bugfixes and stability improvements in logging, Windows, x86, Linux\n\n## 0.1.2 - 2017-06-14\n\n### Added\n\n- Function modeling API (`state.invoke_model()`, `manticore.variadic`)\n- `strcmp` and `strlen` models\n- `state.solve_buffer()`\n- Additional `state` APIs\n- Support for ARMv7 Thumb mode\n\n### Changed\n\n- Parallel processing API (`m.run(procs)`)\n- `state.solve_n()`\n\n### Fixed\n\n- Numerous fixes in Linux, x86, ARM, SMT\n- pip installation no longer requires `--no-binary capstone`\n\n## 0.1.1 - 2017-05-05\n\n### Added\n- `State.constrain`\n\n### Changed\n- Command line verbosity: `--verbose` -> `-v` (up to `-vvvv`)\n\n### Fixed\n- Linux platform fixes: syscalls, ELF loading\n- x86 and ARM fixes\n\n## 0.1.0 - 2017-04-24\n\nInitial public release.\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.7470703125,
          "content": "# YAML 1.2\n---\nabstract: \"An effective way to maximize code coverage in software tests is through dynamic symbolic execution-a technique that uses constraint solving to systematically explore a program's state space. We introduce an open-source dynamic symbolic execution framework called Manticore for analyzing binaries and Ethereum smart contracts. Manticore's flexible architecture allows it to support both traditional and exotic execution environments, and its API allows users to customize their analysis. Here, we discuss Manticore's architecture and demonstrate the capabilities we have used to find bugs and verify the correctness of code for our commercial clients.\"\nauthors: \n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Mossberg\n    given-names: Mark\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Manzano\n    given-names: Felipe\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Hennenfent\n    given-names: Eric\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Groce\n    given-names: Alex\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Greico\n    given-names: Gustavo\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Feist\n    given-names: Josselin\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Brunson\n    given-names: Trent\n  -\n    affiliation: \"Trail of Bits\"\n    family-names: Dinaburg\n    given-names: Artem\ncff-version: \"1.1.0\"\ndate-released: 2019-11-11\ndoi: \"10.1109/ASE.2019.00133\"\nkeywords: \n  - \"symbolic execution\"\n  - \"binary analysis\"\n  - ethereum\nlicense: \"AGPL-3.0\"\nmessage: \"If you use this software in an academic work, please cite our paper.\"\nrepository-code: \"https://github.com/trailofbits/manticore\"\ntitle: \"Manticore: A User-Friendly Symbolic Execution Framework for Binaries and Smart Contracts\"\n...\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.0107421875,
          "content": "* @ekilmer\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.4423828125,
          "content": "# Contributing to Manticore\n\nFirst, thanks for your interest in contributing to Manticore! We welcome and\nappreciate all contributions, including bug reports, feature suggestions,\ntutorials/blog posts, and code improvements.\n\nIf you're unsure where to start, we recommend our [`easy`](https://github.com/trailofbits/manticore/issues?q=is%3Aissue+is%3Aopen+label%3Aeasy) and [`help wanted`](https://github.com/trailofbits/manticore/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)\nissue labels.\n\n## Bug reports and feature suggestions\n\nBug reports and feature suggestions can be submitted to our [issue\ntracker](https://github.com/trailofbits/manticore/issues). For bug reports,\nattaching the binary that caused the bug will help us in debugging and\nresolving the issue quickly. If you find a security\nvulnerability, do not open an issue; email opensource@trailofbits.com\ninstead.\n\n## Questions\n\nQuestions can be submitted to the [discussion page](https://github.com/trailofbits/manticore/discussions), but you may get a faster\nresponse if you ask in our [chat room](https://slack.empirehacking.nyc/)\n(in the #manticore channel).\n\n## Legal\nFor legal reasons, we require contributors to sign our [Contributor License Agreement](https://cla-assistant.io/trailofbits/manticore).\nThis will be automatically checked as part of our CI. \n\n## Code\n\nManticore uses the pull request contribution model. Please make an account on\nGithub, fork this repo, and submit code contributions via pull request. For\nmore documentation, look [here](https://guides.github.com/activities/forking/).\n\nSome pull request guidelines:\n\n- We use the [`black`](https://black.readthedocs.io/en/stable/index.html)\n  auto-formatter to enforce style conventions in Manticore. To ensure your code\n  is properly formatted, run `black .` in the Manticore directory before\n  committing. Although unlikely, if you are still having trouble with getting\n  your code to pass formatting, check that you have the same version of `black`\n  installed as what is used in the CI.\n- We use the [`mypy`](https://github.com/python/mypy) static typing tool to\n  catch inconsistencies in the code base. At the time of this writing, we\n  only check the [manticore](./manticore) directory for inconsistencies and do\n  not yet enforce new contributions to include type hints. However, we greatly\n  appreciate if you do include/add them in any code that you touch in your PR!\n  Though, remember the next guideline if you are adding many type-hints, and\n  ask for input on how to organize the addition of a massive amount of type\n  hints. Check the CI configuration for the exact version of `mypy`.\n- Minimize irrelevant changes (formatting, whitespace, etc) to code that would\n  otherwise not be touched by this patch. Save formatting or style corrections\n  for a separate pull request that does not make any semantic changes.\n- When possible, large changes should be split up into smaller focused pull\n  requests.\n- Fill out the pull request description with a summary of what your patch does,\n  key changes that have been made, and any further points of discussion, if\n  applicable.\n- Title your pull request with a brief description of what it's changing.\n  \"Fixes #123\" is a good comment to add to the description, but makes for an\n  unclear title on its own.\n\n### Development Environment\n\nInstructions for installing a development version of Manticore can be found in\nour [wiki](https://github.com/trailofbits/manticore/wiki/Hacking-on-Manticore#developer-installation).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.80859375,
          "content": "FROM ubuntu:20.04\n\nLABEL name=Manticore\nLABEL src=\"https://github.com/trailofbits/manticore\"\nLABEL creator=\"Trail of Bits\"\nLABEL dockerfile_maintenance=trailofbits\n\nENV LANG C.UTF-8\n\nRUN apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get -y install python3 python3-dev python3-pip git wget\n\n# Install solc 0.4.25 and validate it\nRUN wget https://github.com/ethereum/solidity/releases/download/v0.4.25/solc-static-linux \\\n && chmod +x solc-static-linux \\\n && mv solc-static-linux /usr/bin/solc\n\n# If this fails, the solc-static-linux binary has changed while it should not.\nRUN [ \"c9b268750506b88fe71371100050e9dd1e7edcf8f69da34d1cd09557ecb24580  /usr/bin/solc\" = \"$(sha256sum /usr/bin/solc)\" ]\n\nRUN python3 -m pip install -U pip\n\nADD . /manticore\nRUN cd manticore && python3 -m pip install .[native]\n\nCMD [\"/bin/bash\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.712890625,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.2041015625,
          "content": "# :warning: Project is in Maintenance Mode :warning:\n\nThis project is no longer internally developed and maintained. However, we are happy to review and accept small, well-written pull requests by the community. We will only consider bug fixes and minor enhancements.\n\nAny new or currently open issues and discussions shall be answered and supported by the community.\n\n# Manticore\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/trailofbits/manticore/master/docs/images/manticore.png\" width=\"256\" title=\"Manticore\">\n</p>\n<br />\n\n\n[![Build Status](https://img.shields.io/github/actions/workflow/status/trailofbits/manticore/ci.yml?branch=master)](https://github.com/trailofbits/manticore/actions?query=workflow%3ACI)\n[![Coverage Status](https://coveralls.io/repos/github/trailofbits/manticore/badge.svg)](https://coveralls.io/github/trailofbits/manticore)\n[![PyPI Version](https://badge.fury.io/py/manticore.svg)](https://badge.fury.io/py/manticore)\n[![Slack Status](https://slack.empirehacking.nyc/badge.svg)](https://slack.empirehacking.nyc)\n[![Documentation Status](https://readthedocs.org/projects/manticore/badge/?version=latest)](http://manticore.readthedocs.io/en/latest/?badge=latest)\n[![Example Status](https://img.shields.io/github/actions/workflow/status/trailofbits/manticore-examples/ci.yml?branch=master)](https://github.com/trailofbits/manticore-examples/actions?query=workflow%3ACI)\n[![LGTM Total Alerts](https://img.shields.io/lgtm/alerts/g/trailofbits/manticore.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/trailofbits/manticore/alerts/)\n\n\n\nManticore is a symbolic execution tool for the analysis of smart contracts and binaries.\n\n## Features\n\n- **Program Exploration**: Manticore can execute a program with symbolic inputs and explore all the possible states it can reach\n- **Input Generation**: Manticore can automatically produce concrete inputs that result in a given program state\n- **Error Discovery**: Manticore can detect crashes and other failure cases in binaries and smart contracts\n- **Instrumentation**: Manticore provides fine-grained control of state exploration via event callbacks and instruction hooks\n- **Programmatic Interface**: Manticore exposes programmatic access to its analysis engine via a Python API\n\nManticore can analyze the following types of programs:\n\n- Ethereum smart contracts (EVM bytecode)\n- Linux ELF binaries (x86, x86_64, aarch64, and ARMv7)\n- WASM Modules\n\n## Installation\n\n> Note: We recommend installing Manticore in a [virtual environment](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/#installing-virtualenv)\n to prevent conflicts with other projects or packages\n\nOption 1: Installing from PyPI:\n\n```bash\npip install manticore\n```\n\nOption 2: Installing from PyPI, with extra dependencies needed to execute native binaries:\n\n```bash\npip install \"manticore[native]\"\n```\n\nOption 3: Installing a nightly development build:\n\n```bash\npip install --pre \"manticore[native]\"\n```\n\nOption 4: Installing from the `master` branch:\n\n```bash\ngit clone https://github.com/trailofbits/manticore.git\ncd manticore\npip install -e \".[native]\"\n```\n\nOption 5: Install via Docker:\n\n```bash\ndocker pull trailofbits/manticore\n```\n\nOnce installed, the `manticore` CLI tool and Python API will be available.\n\nFor a development installation, see our [wiki](https://github.com/trailofbits/manticore/wiki/Hacking-on-Manticore).\n\n## Usage\n\n### CLI\n\nManticore has a command line interface which can perform a basic symbolic analysis of a binary or smart contract. \nAnalysis results will be placed into a workspace directory beginning with `mcore_`. For information about the workspace, see the [wiki](https://github.com/trailofbits/manticore/wiki/What's-in-the-workspace%3F).\n\n#### EVM\nManticore CLI automatically detects you are trying to test a contract if (for ex.)\n the contract has a `.sol` or a `.vy` extension. See a [demo](https://asciinema.org/a/154012).\n<details>\n  <summary>Click to expand:</summary>\n  \n```bash\n$ manticore examples/evm/umd_example.sol \n [9921] m.main:INFO: Registered plugins: DetectUninitializedMemory, DetectReentrancySimple, DetectExternalCallAndLeak, ...\n [9921] m.e.manticore:INFO: Starting symbolic create contract\n [9921] m.e.manticore:INFO: Starting symbolic transaction: 0\n [9921] m.e.manticore:INFO: 4 alive states, 6 terminated states\n [9921] m.e.manticore:INFO: Starting symbolic transaction: 1\n [9921] m.e.manticore:INFO: 16 alive states, 22 terminated states\n[13761] m.c.manticore:INFO: Generated testcase No. 0 - STOP(3 txs)\n[13754] m.c.manticore:INFO: Generated testcase No. 1 - STOP(3 txs)\n...\n[13743] m.c.manticore:INFO: Generated testcase No. 36 - THROW(3 txs)\n[13740] m.c.manticore:INFO: Generated testcase No. 37 - THROW(3 txs)\n[9921] m.c.manticore:INFO: Results in ~/manticore/mcore_gsncmlgx\n```\n</details>\n\n##### Manticore-verifier\n\nAn alternative CLI tool is provided that simplifies contract testing and \nallows writing properties methods in the same high-level language the contract uses.\nCheckout manticore-verifier [documentation](http://manticore.readthedocs.io/en/latest/verifier.html).\nSee a [demo](https://asciinema.org/a/xd0XYe6EqHCibae0RP6c7sJVE)\n\n#### Native\n<details>\n  <summary>Click to expand:</summary>\n  \n```bash\n$ manticore examples/linux/basic\n[9507] m.n.manticore:INFO: Loading program examples/linux/basic\n[9507] m.c.manticore:INFO: Generated testcase No. 0 - Program finished with exit status: 0\n[9507] m.c.manticore:INFO: Generated testcase No. 1 - Program finished with exit status: 0\n[9507] m.c.manticore:INFO: Results in ~/manticore/mcore_7u7hgfay\n[9507] m.n.manticore:INFO: Total time: 2.8029580116271973\n```\n</details>\n\n\n### API\n\nManticore provides a Python programming interface which can be used to implement powerful custom analyses.\n\n#### EVM\nFor Ethereum smart contracts, the API can be used for detailed verification of arbitrary contract properties. Users can set the starting conditions, \nexecute symbolic transactions, and then review discovered states to ensure invariants for a contract hold.\n<details>\n  <summary>Click to expand:</summary>\n  \n```python\nfrom manticore.ethereum import ManticoreEVM\ncontract_src=\"\"\"\ncontract Adder {\n    function incremented(uint value) public returns (uint){\n        if (value == 1)\n            revert();\n        return value + 1;\n    }\n}\n\"\"\"\nm = ManticoreEVM()\n\nuser_account = m.create_account(balance=10000000)\ncontract_account = m.solidity_create_contract(contract_src,\n                                              owner=user_account,\n                                              balance=0)\nvalue = m.make_symbolic_value()\n\ncontract_account.incremented(value)\n\nfor state in m.ready_states:\n    print(\"can value be 1? {}\".format(state.can_be_true(value == 1)))\n    print(\"can value be 200? {}\".format(state.can_be_true(value == 200)))\n```\n</details>\n\n#### Native\nIt is also possible to use the API to create custom analysis tools for Linux binaries. Tailoring the initial state helps avoid state explosion\nproblems that commonly occur when using the CLI. \n\n<details>\n  <summary>Click to expand:</summary>\n  \n```python\n# example Manticore script\nfrom manticore.native import Manticore\n\nm = Manticore.linux('./example')\n\n@m.hook(0x400ca0)\ndef hook(state):\n  cpu = state.cpu\n  print('eax', cpu.EAX)\n  print(cpu.read_int(cpu.ESP))\n\n  m.kill()  # tell Manticore to stop\n\nm.run()\n```\n</details>\n\n\n#### WASM\nManticore can also evaluate WebAssembly functions over symbolic inputs for property validation or general analysis. \n\n<details>\n  <summary>Click to expand:</summary>\n  \n```python\nfrom manticore.wasm import ManticoreWASM\n\nm = ManticoreWASM(\"collatz.wasm\")\n\ndef arg_gen(state):\n    # Generate a symbolic argument to pass to the collatz function.\n    # Possible values: 4, 6, 8\n    arg = state.new_symbolic_value(32, \"collatz_arg\")\n    state.constrain(arg > 3)\n    state.constrain(arg < 9)\n    state.constrain(arg % 2 == 0)\n    return [arg]\n\n\n# Run the collatz function with the given argument generator.\nm.collatz(arg_gen)\n\n# Manually collect return values\n# Prints 2, 3, 8\nfor idx, val_list in enumerate(m.collect_returns()):\n    print(\"State\", idx, \"::\", val_list[0])\n```\n</details>\n\n## Requirements\n* Manticore requires Python 3.7 or greater \n* Manticore officially supports the latest LTS version of Ubuntu provided by Github Actions\n  * Manticore has experimental support for EVM and WASM (but not native Linux binaries) on MacOS \n* We recommend running with increased stack size. This can be done by running `ulimit -s 100000` or by passing `--ulimit stack=100000000:100000000` to `docker run`\n\n### Compiling Smart Contracts\n* Ethereum smart contract analysis requires the [`solc`](https://github.com/ethereum/solidity) program in your `$PATH`.\n* Manticore uses [crytic-compile](https://github.com/crytic/crytic-compile) to build smart contracts. If you're having compilation issues, consider running \n`crytic-compile` on your code directly to make it easier to identify any issues. \n* We're still in the process of implementing full support for the EVM Istanbul instruction semantics, so certain opcodes may not be supported.\nIn a pinch, you can try compiling with Solidity 0.4.x to avoid generating those instructions. \n\n## Using a different solver (Yices, Z3, CVC4)\nManticore relies on an external solver supporting smtlib2. Currently Z3, Yices and CVC4 are supported and can be selected via command-line or configuration settings.\nIf Yices is available, Manticore will use it by default. If not, it will fall back to Z3 or CVC4. If you want to manually choose which solver to use, you can do so like this:\n```manticore --smt.solver Z3```\n### Installing CVC4\nFor more details go to https://cvc4.github.io/. Otherwise, just get the binary and use it.\n\n        sudo wget -O /usr/bin/cvc4 https://github.com/CVC4/CVC4/releases/download/1.7/cvc4-1.7-x86_64-linux-opt\n        sudo chmod +x /usr/bin/cvc4\n\n### Installing Yices\nYices is incredibly fast. More details here https://yices.csl.sri.com/\n\n        sudo add-apt-repository ppa:sri-csl/formal-methods\n        sudo apt-get update\n        sudo apt-get install yices2\n\n## Getting Help\n\nFeel free to stop by our #manticore slack channel in [Empire Hacking](https://slack.empirehacking.nyc/) for help using or extending Manticore.\n\nDocumentation is available in several places:\n\n  * The [wiki](https://github.com/trailofbits/manticore/wiki) contains information about getting started with Manticore and contributing\n\n  * The [API reference](http://manticore.readthedocs.io/en/latest/) has more thorough and in-depth documentation on our API\n    \n  * The [examples](examples) directory has some small examples that showcase API features\n\n  * The [manticore-examples](https://github.com/trailofbits/manticore-examples) repository has some more involved examples, including some real CTF problems\n\nIf you'd like to file a bug report or feature request, please use our [issues](https://github.com/trailofbits/manticore/issues/choose) page. \n\nFor questions and clarifications, please visit the [discussion](https://github.com/trailofbits/manticore/discussions) page.\n\n## License\n\nManticore is licensed and distributed under the AGPLv3 license. [Contact us](mailto:opensource@trailofbits.com) if you're looking for an exception to the terms.\n\n## Publications\n- [Manticore: A User-Friendly Symbolic Execution Framework for Binaries and Smart Contracts](https://arxiv.org/abs/1907.03890), Mark Mossberg, Felipe Manzano, Eric Hennenfent, Alex Groce, Gustavo Grieco, Josselin Feist, Trent Brunson, Artem Dinaburg - ASE 19\n\nIf you are using Manticore in academic work, consider applying to the [Crytic $10k Research Prize](https://blog.trailofbits.com/2019/11/13/announcing-the-crytic-10k-research-prize/).\n\n## Demo Video from ASE 2019\n[![Brief Manticore demo video](https://img.youtube.com/vi/o6pmBJZpKAc/1.jpg)](https://youtu.be/o6pmBJZpKAc)\n\n## Tool Integrations \n\n- [MATE: Merged Analysis To prevent Exploits](https://github.com/GaloisInc/MATE)\n  * [Mantiserve:](https://galoisinc.github.io/MATE/mantiserve.html) REST API interaction with Manticore to start, kill, and check Manticore instance\n  * [Dwarfcore:](https://galoisinc.github.io/MATE/dwarfcore.html) Plugins and detectors for use within Mantiserve engine during exploration \n  * [Under-constrained symbolic execution](https://github.com/GaloisInc/MATE/blob/main/doc/under-constrained-manticore.rst) Interface for symbolically exploring single functions with Manticore\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "lgtm.yml",
          "type": "blob",
          "size": 0.103515625,
          "content": "queries:\n  - exclude: py/clear-text-logging-sensitive-data\n\npath_classifiers:\n  examples:\n    - examples/\n"
        },
        {
          "name": "manticore",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.2060546875,
          "content": "[mypy]\npython_version = 3.7\nfiles = manticore, tests\nignore_missing_imports = True\n\n# Generated file\n[mypy-manticore.ethereum.parsetab]\nignore_errors = True\n\n[mypy-manticore.core.state_pb2]\nignore_errors = True\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.1259765625,
          "content": "[tool.black]\ntarget-version = ['py36']\nline-length = 100\nextend-exclude = '''\n(\n  venv\n  | server # Has its own formatting\n)\n'''\n"
        },
        {
          "name": "readthedocs.yml",
          "type": "blob",
          "size": 0.0498046875,
          "content": "build:\n    image: latest\n\npython:\n    version: 3.7\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.6015625,
          "content": "import os\nimport sys\nfrom setuptools import setup, find_packages\nfrom datetime import date\n\non_rtd = os.environ.get(\"READTHEDOCS\") == \"True\"\n\n\ndef rtd_dependent_deps():\n    # RTD tries to build z3, ooms, and fails to build.\n    if on_rtd:\n        return native_deps\n    else:\n        return [\"z3-solver\"]\n\n\n# If you update native_deps please update the `REQUIREMENTS_TO_IMPORTS` dict in `utils/install_helper.py`\n# (we need to know how to import a given native dependency so we can check if native dependencies are installed)\nnative_deps = [\n    \"capstone==5.0.0rc2\",\n    \"pyelftools\",\n    \"unicorn~=2.0\",\n]\n\nlint_deps = [\"black~=22.0\", \"mypy==0.790\"]\n\nauto_test_deps = [\"py-evm\"]\n\n# Development dependencies without keystone\ndev_noks = (\n    native_deps\n    + [\"coverage\", \"Sphinx\", \"pytest>=5.3.0\", \"pytest-xdist>=1.30.0\", \"pytest-cov>=2.8.1\", \"jinja2\"]\n    + lint_deps\n    + auto_test_deps\n)\n\nextra_require = {\n    \"native\": native_deps,\n    # noks - no keystone\n    \"dev-noks\": dev_noks,\n    \"dev\": native_deps + dev_noks + [\"keystone-engine\"],\n    \"redis\": [\"redis\"],\n    \"lint\": lint_deps,\n}\n\nthis_directory = os.path.abspath(os.path.dirname(__file__))\nwith open(os.path.join(this_directory, \"README.md\"), encoding=\"utf-8\") as f:\n    long_description = f.read()\n\n\n# https://stackoverflow.com/a/4792601 grumble grumble\nversion = \"0.3.7\"\nif \"--dev_release\" in sys.argv:\n    major, minor, point = tuple(int(t) for t in version.split(\".\"))\n    dev_extension = f\"dev{date.today().strftime('%y%m%d')}\"\n    version = f\"{major}.{minor}.{point + 1}.{dev_extension}\"\n    sys.argv.remove(\"--dev_release\")\n\nsetup(\n    name=\"manticore\",\n    description=\"Manticore is a symbolic execution tool for analysis of binaries and smart contracts.\",\n    long_description_content_type=\"text/markdown\",\n    long_description=long_description,\n    url=\"https://github.com/trailofbits/manticore\",\n    author=\"Trail of Bits\",\n    version=version,\n    packages=find_packages(exclude=[\"tests\", \"tests.*\"]),\n    python_requires=\">=3.7\",\n    install_requires=[\n        \"pyyaml\",\n        \"protobuf~=3.20\",\n        # evm dependencies\n        \"pysha3\",\n        \"prettytable\",\n        \"ply\",\n        \"rlp\",\n        \"intervaltree\",\n        \"crytic-compile>=0.2.2\",\n        \"wasm\",\n        \"dataclasses; python_version < '3.7'\",\n        \"pyevmasm>=0.2.3\",\n    ]\n    + rtd_dependent_deps(),\n    extras_require=extra_require,\n    entry_points={\n        \"console_scripts\": [\n            \"manticore = manticore.__main__:main\",\n            \"manticore-verifier = manticore.ethereum.verifier:main\",\n        ]\n    },\n    classifiers=[\"License :: OSI Approved :: GNU Affero General Public License v3\"],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.3857421875,
          "content": "[tox]\nenvlist = py3{6,7,8,9}\n\n[testenv]\ndeps = .[dev]\ncommands = pytest -n auto tests\n\n[testenv:pep8]\ndeps = flake8\ncommands =\n    flake8 .\n\n[pep8]\nignore = E265,E501\nmax-line-length = 100\nexclude = docs/,examples/,scripts/,tests/\n\n[flake8]\nignore = E265,E501,F403,F405,E266,E712,F841,E741,E722,E731\nmax-line-length = 100\nexclude = .tox,.*.egg,.git,docs/,examples/,scripts/,tests/,iterpickle.py\n"
        }
      ]
    }
  ]
}