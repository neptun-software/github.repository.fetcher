{
  "metadata": {
    "timestamp": 1736559838619,
    "page": 583,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fake-useragent/fake-useragent",
      "stars": 3744,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.326171875,
          "content": ".coverage\ncoverage.xml\n.tox\nenv*\nbuild\ndist\n.cache\n.ruff_cache\n.pytest_cache\n.eggs\n*.egg-info\n*.egg\n*.log\n*.pyo\n*.pyc\n*$py.class\n*.sublime-project\n*.sublime-workspace\n*.sqlite\n*.db\n__pycache__\n*.bak\n*.swp\n*.swo\n*~\nhtmlcov\npython-env\n\nua-converter/user-agents.json\nua-converter/browsers.jsonl\n\n# Personal workspace\n.personal_workspace\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.4375,
          "content": "fake-useragent contributors\n\nAuthor/maintainer:\n\n    Melroy van den Berg @melroy89 <melroy@melroy.org>\n\nOriginal author:\n\n    Victor Kovtun @hellysmile <hellysmile@gmail.com>\n\nContributors:\n\n    Alexey Shablevskiy @pcinkh <pcinkh@gmail.com>\n    Christian Clauss @cclauss\n    Jordan Vuong @Jordan9675\n    Mohamad Nour Chawich @mochawich\n    Simon Wenmouth @simon-wenmouth\n    Sebastian Correa @sebastian-correa\n\n    <Please alphabetize new entries>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.083984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) hellysmile@gmail.com\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.7060546875,
          "content": "[![Test & Deploy fake-useragent](https://github.com/fake-useragent/fake-useragent/actions/workflows/action.yml/badge.svg?branch=main)](https://github.com/fake-useragent/fake-useragent/actions/workflows/action.yml?query=branch%3Amain)\n[![Ruff linter](https://github.com/fake-useragent/fake-useragent/actions/workflows/ruff.yml/badge.svg?branch=main)](https://github.com/fake-useragent/fake-useragent/actions/workflows/ruff.yml?query=branch%3Amain)\n[![CodeQL](https://github.com/fake-useragent/fake-useragent/actions/workflows/codeql.yml/badge.svg?branch=main)](https://github.com/fake-useragent/fake-useragent/actions/workflows/codeql.yml?query=branch%3Amain)\n\n# fake-useragent\n\nUp-to-date simple useragent faker with real world database.\n\n## Features\n\n- Data is pre-downloaded & post-processed from [Intoli LLC](https://github.com/intoli/user-agents/tree/main/src) and the data is part of the package itself\n- The data consists of a wide range of browser agents and various browsers\n- Retrieves user-agent strings (both of type: `desktop`, `tablet` and/or `mobile` UAs)\n- Retrieve user-agent Python dictionary (aka object), with fields like `useragent`, `percent`, `type`, `device_brand`, `browser`, `browser_version`, `os`, `os_version` and `platform`\n- Supports Python 3.x\n\n### Installation\n\n```sh\npip install fake-useragent\n```\n\nOr if you have multiple Python / pip versions installed, use `pip3`:\n\n```sh\npip3 install fake-useragent\n```\n\n### Usage\n\nSimple usage examples below, see also next chapters in this readme for more advanced usages:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent()\n\n# Get a random browser user-agent string\nprint(ua.random)\n# Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0\n\n# Or get user-agent string from a specific browser\nprint(ua.chrome)\n# Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36\nprint(ua.google)\n# Mozilla/5.0 (iPhone; CPU iPhone OS 18_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/343.0.695551749 Mobile/15E148 Safari/604.1\nprint(ua['Chrome'])\n# Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36\nprint(ua.firefox)\n# Mozilla/5.0 (Android 14; Mobile; rv:133.0) Gecko/133.0 Firefox/133.0\nprint(ua.ff)\n# Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:132.0) Gecko/20100101 Firefox/132.0\nprint(ua.safari)\n# Mozilla/5.0 (iPhone; CPU iPhone OS 17_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Mobile/15E148 Safari/604.1 Ddg/17.6\nprint(ua.opera)\n# Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36 OPR/114.0.0.0\nprint(ua.edge)\n# Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36 Edg/125.0.0.0\n```\n\n#### Additional usage\n\nAdditional features that fake-useragent now offers since v1.2.0.\n\nIf you want to specify your own browser list, you can do that via the `browsers` argument (default is: `[\"Google\", \"Chrome\", \"Firefox\", \"Edge\", \"Opera\",\" Safari\", \"Android\", \"Yandex Browser\", \"Samsung Internet\", \"Opera Mobile\", \"Mobile Safari\", \"Firefox Mobile\", \"Firefox iOS\", \"Chrome Mobile\", \"Chrome Mobile iOS\", \"Mobile Safari UI/WKWebView\", \"Edge Mobile\", \"DuckDuckGo Mobile\", \"MiuiBrowser\", \"Whale\", \"Twitter\", \"Facebook\", \"Amazon Silk\"]`).  \nThis example will only return random user-agents from Edge and Chrome:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent(browsers=['Edge', 'Chrome'])\nua.random\n```\n\n_Note:_ Fakeuser-agent knowns about browsers: Chrome, Edge, Firefox, Safari, Opera, Android, Opera Mobile, Mobile Safari, Firefox Mobile, Firefox iOS, Chrome Mobile, Chrome Mobile iOS and more (see again full list above).  \n_Note #2:_ Since fakeuser-agent v2.0.0 the browser names are case-sensitive!\n\n---\n\nIf you want to specify your own operating systems, you can do that via the `os` argument (default is: `[\"Windows\", \"Linux\", \"Ubuntu\", \"Chrome OS\", \"Mac OS X\", \"Android\", \"iOS\"]`).  \nIn this example you will only get Linux user-agents back:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent(os='Linux')\nua.random\n```\n\n_Note:_ Since fakeuser-agent v2.0.0 the OS names are case-sensitive!\n\n---\n\nYou can also specify the type of platforms you want to use, you can do that via the `platforms` argument (default is `[\"desktop\", \"mobile\", \"tablet\"]`).\nThis example will only return random user-agents from a mobile device:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent(platforms='mobile')\nua.random\n```\n\nAnd a random user-agent from a desktop device:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent(platforms='desktop')\nua.random\n```\n\n---\n\nIf you want to return more recent user-agent strings, you can play with the `min_version` argument (default is: `0.0`, meaning all user agents will match).  \nIn this example you get only user agents that have a minimum version of 120.0:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent(min_version=120.0)\nua.random\n```\n\n---\n\nFor backwards compatibility, a minimum usage percentage can still be specified with the `min_percentage` argument. However, the current list of user agents does\nnot contain this statistic. Therefore all of the user-agents will match.\n\n---\n\n_Hint:_ Of-course you can **combine all those arguments** to you liking!\n\n#### User-agent Python Dictionary\n\nSince version 1.3.0 we now also offer you the following \"get\" properties which return the whole Python dictionary of the UA, instead of only the user-agent string:\n\n> **Warning**\n> Raw JSON objects (in a Python dictionaries) are returned \"as is\".\n> Meaning, this data structure could change in the future!\n>\n> Be aware that these \"get\" properties below might not return the same key/value pairs in the future.\n> Use `ua.random` or alike as mentioned above, if you want to use a stable interface.\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent()\n\n# Random user-agent dictionary (object)\nua.getRandom\n# {'percent': 0.8, 'useragent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.76', 'system': 'Edge 116.0 Win10', 'browser': 'edge', 'version': 116.0, 'os': 'win10'}\n\n# More get properties:\nua.getFirefox\n# {'percent': 0.3, 'useragent': 'Mozilla/5.0 (Windows NT 10.0; rv:109.0) Gecko/20100101 Firefox/118.0', 'system': 'Firefox 118.0 Win10', 'browser': 'firefox', 'version': 118.0, 'os': 'win10'}\nua.getChrome\nua.getSafari\nua.getEdge\n\n# And a method with an argument.\n# This is exactly the same as using: ua.getFirefox\nua.getBrowser('firefox')\n```\n\n### Notes\n\nYou can override the fallback string using the `fallback` parameter, in very rare cases something failed:\n\n```py\nfrom fake_useragent import UserAgent\n\nua = UserAgent(fallback='your favorite Browser')\n# in case if something went wrong, one more time it is REALLY!!! rare case\nua.random == 'your favorite Browser'\n```\n\nIf you will try to get unknown browser:\n\n```py\nfrom fake_useragent import UserAgent\nua = UserAgent()\nprint(ua.unknown)\n#Error occurred during getting browser: randm, but was suppressed with fallback.\n#Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0\n```\n\nIf you need to safe some attributes from overriding them in UserAgent by `__getattr__` method\nuse `safe_attrs` you can pass there attributes names.\nAt least this will prevent you from raising FakeUserAgentError when attribute not found.\n\nFor example, when using fake*useragent with `injections <https://github.com/tailhook/injections>`* you need to:\n\n```py\nfrom fake_useragent import UserAgent\n\nua = UserAgent(safe_attrs=('__injections__',))\n```\n\nPlease, do not use if you don't understand why you need this.\nThis is magic for rarely extreme case.\n\n### Experiencing issues?\n\nMake sure that you using latest version!\n\n```sh\npip install --upgrade fake-useragent\n```\n\nOr if that isn't working, try to install the latest package version like this (`2.0.3` is an example, check what the [latest version is on PyPi](https://pypi.org/project/fake-useragent/#history)):\n\n```sh\npip install fake-useragent==2.0.3\n```\n\nCheck version via the Python console:\n\n```py\nimport fake_useragent\n\nprint(fake_useragent.__version__)\n```\n\nAnd you are always welcome to post [issues](https://github.com/fake-useragent/fake-useragent/issues).\n\nPlease do not forget to mention the version that you are using.\n\n### For Developers\n\n#### User-agent Data\n\nThe user-agent data we retrieve from [user-agents.net](https://user-agents.net). Data is stored in [JSONlines](https://jsonlines.org/) format. File is located in the: `src/fake_useragent/data` directory.\n\nThe data JSON file is part of the Python package, see [pyproject.toml](pyproject.toml). Read more about [Data files support](https://setuptools.pypa.io/en/latest/userguide/datafiles.html).\n\n#### Python Virtual Environment\n\nWe encourage to use Python virtual environment before installing Pip packages, like so:\n\n```sh\npython -m virtualenv env\nsource env/bin/activate\n```\n\n#### Local Install\n\n```sh\npip install -e .\n```\n\n#### Tests\n\n```sh\npip install -r requirements.txt\ntox\n```\n\n#### Linting\n\nTo fix imports using ruff:\n\n```sh\npip install -r requirements.txt\nruff check --select=\"I\" --fix .\n```\n\nFix black code formatting errors:\n\n```sh\npip install -r requirements.txt\nblack .\n```\n\n_Note:_ When ruff v1.0 releases, we most likely move fully towards `ruff` instead of `black`.\n\n### Changelog\n\n- 2.0.2 & 2.0.3 December 10, 2024\n\n  -  Fix project dependencies toml file & sync docs\n\n- 2.0.1 December 7, 2024 (my birthday)\n\n  - Add requires-python to toml config\n\n- 2.0.0 December 4, 2024\n\n  - Switch to new data source (again again)\n  - Possible browser options: `\"Google\", \"Chrome\", \"Firefox\", \"Edge\", \"Opera\",\" Safari\", \"Android\", \"Yandex Browser\", \"Samsung Internet\", \"Opera Mobile\",\n\"Mobile Safari\", \"Firefox Mobile\", \"Firefox iOS\", \"Chrome Mobile\", \"Chrome Mobile iOS\", \"Mobile Safari UI/WKWebView\",\n\"Edge Mobile\", \"DuckDuckGo Mobile\", \"MiuiBrowser\", \"Whale\", \"Twitter\", \"Facebook\", \"Amazon Silk\"`\n  - Possible OS options: `\"Windows\", \"Linux\", \"Ubuntu\", \"Chrome OS\", \"Mac OS X\", \"Android\", \"iOS\"`\n  - Possible type options: `\"desktop\", \"mobile\", \"tablet\"`\n  - Update fake.py to handle the new data key/value objects\n  - Updated the README\n  - Renamed browsers.json to browsers.jsonl. And other refactors.\n\n- 1.5.1 March 16, 2024\n\n  - Remove trailing spaces in user agent strings\n\n- 1.5.0 March 8, 2024\n\n  - Migrated to new user-agent data source (thanks @BoudewijnZwart), backwards compatible API.\n  - Update all pip package dependencies to latest stable versions\n\n- 1.4.0 November 24, 2023\n\n  - Update all PIP packages\n  - Support Python 3.12 (thanks @vladkens)\n  - Fix package conflict in cache scraper\n  - Improve ruff CLI calls\n\n- 1.3.0 October 2, 2023\n\n  - Introducing new `ua.getRandom`, `ua.getFirefox`, `ua.getChrome`, `ua.getSafari`. And a generic method: `ua.getBrowser(..)` (eg. `getBrowser('firefox')`)\n    - These new properties above allows you to retrieve the whole raw Python dictionary, instead of only the UA string.\n    - These properties might return different key/values pairs in the future!\n  - Fix the `os` argument 'windows' to check for both `win10`and `win7` values (previously only checking on `win10`), thus returning more UAs\n  - Improved user-agent scraper (now also containing Safari browser again)\n  - Updated browsers.json data file\n\n- 1.2.1 August 2, 2023\n\n  - Small improvements in the `min_percentage` check\n  - Update all Pip package dependencies\n\n- 1.2.0 August 2, 2023\n\n  - Updated browser useragent data\n  - Allow filters on browser, OS and usage percentage\n  - Update the cache scraper to scape the new data source for user-agent strings\n  - Adapted the code to work with the new JSON data format\n  - Parameter `use_external_data=True` and `verify_ssl` are **removed**. If you use those parameters, just remove it in your code!\n\n- 1.1.3 March 20, 2023\n\n  - Update dependencies\n\n- 1.1.2 February 8, 2023\n\n  - Security fixes\n\n- 1.1.1 December 4, 2022\n\n  - Remove whitespaces from user agent strings, this is a patch release\n\n- 1.1.0 November 26, 2022\n\n  - Add `pkg_resource` as fallback mechanism in trying to retrieve the local JSON data file\n\n- 1.0.1 November 10, 2022\n\n  - Add `importlib-metadata` & `importlib-resources` as dependencies\n  - Check on specific Python version regarding the importlib resources (python v3.10 or higher) in order to have `files()` working\n  - `importlib_metadata` should now also work on Python version before 3.8\n  - Remove obsolete `MANIFEST.in` file\n\n- 1.0.0 November 17, 2022\n\n  - Make the JSON Lines data file part of the Python package, data is retrieved locally\n    - Extend the `myproject.toml` file with `package-data` support\n  - Remove centralized caching server implementation\n  - Make real unit-tests which should run reliable, fast, independent and without Internet connection\n\n- 0.1.14 November 5, 2022\n\n  - Improve code quality standards using modern Python >=3.7 syntax\n  - Migrated to `pyproject.toml` build system format + syntax check\n  - Add additional classifiers to the toml file\n  - Improved `tox.ini` file\n  - Improved GitHub Actions job using pip cache\n  - And various small fixes\n\n- 0.1.13 October 21, 2022\n\n  - Implement `browsers` argument, allowing you to override the browser names you want to use\n  - Fix browser listing of Internet Explorer and Edge\n  - Don't depend on w3schools.com anymore\n  - Clean-up data (temp) file format\n  - Update fallback cache server URL / use JSON Lines as file format\n  - Move to GitHub Actions instead of Travis\n  - Using [`black`](https://pypi.org/project/black/) Python formatter in favour of Flake\n\n- 0.1.12 March 31, 2022\n\n  - forked\n\n- 0.1.11 October 4, 2018\n\n  - moved `s3 + cloudfront` fallback to `heroku.com`, cuz someone from Florida did ~25M requests last month\n\n- 0.1.10 February 11, 2018\n\n  - Minor fix docs `cloudfront` url\n\n- 0.1.9 February 11, 2018\n\n  - fix `w3schools.com` renamed `IE/Edge` to `Edge/IE`\n  - moved `heroku.com` fallback to `s3 + cloudfront`\n  - stop testing Python3.3 and pypy\n\n- 0.1.8 November 2, 2017\n\n  - fix `useragentstring.com` `Can't connect to local MySQL server through socket`\n\n- 0.1.7 April 2, 2017\n\n  - fix broken README.rst\n\n- 0.1.6 April 2, 2017\n\n  - fixes bug `use_cache_server` do not affected anything\n  - `w3schools.com <https://www.w3schools.com/browsers/browsers_stats.asp>`\\_ moved to `https`\n  - `verify_ssl` options added, by default it is `True` (`urllib.urlopen` ssl context for Python 2.7.9- and 3.4.3- is not supported)\n\n- 0.1.5 February 28, 2017\n\n  - added `ua.edge` alias to Internet Explorer\n  - w3schools.com starts displaying `Edge` statistic\n  - Python 2.6 is not tested anymore\n  - `use_cache_server` option added\n  - Increased `fake_useragent.settings.HTTP_TIMEOUT` to 5 seconds\n\n- 0.1.4 December 14, 2016\n\n  - Added custom data file location support\n  - Added `fallback` browser support, in case of unavailable data sources\n  - Added alias `fake_useragent.FakeUserAgent` for `fake_useragent.UserAgent`\n  - Added alias `fake_useragent.UserAgentError` for `fake_useragent.FakeUserAgentError`\n  - Reduced `fake_useragent.settings.HTTP_TIMEOUT` to 3 seconds\n  - Started migration to new data file format\n  - Simplified a lot 4+ years out of date code\n  - Better thread/greenlet safety\n  - Added verbose logging\n  - Added `safe_attrs` for prevent overriding by `__getattr__`\n\n- 0.1.3 November 24, 2016\n\n  - Added hosted data file, when remote services is unavailable\n  - Raises `fake_useragent.errors.FakeUserAgentError` in case when there is not way to download data\n  - Raises `fake_useragent.errors.FakeUserAgentError` instead of `None` in case of unknown browser\n  - Added `gevent.sleep` support in `gevent` patched environment when trying to download data\n\n- X.X.X xxxxxxx xx, xxxx\n  - xxxxx ?????\n\n### Authors\n\nYou can visit [authors page](https://github.com/fake-useragent/fake-useragent/blob/main/AUTHORS).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.3017578125,
          "content": "[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"fake-useragent\"\nversion = \"2.0.3\"\nauthors = [\n    { name = \"Melroy van den Berg\", email = \"melroy@melroy.org\" },\n    { name = \"Victor Kovtun\", email = \"hellysmile@gmail.com\" },\n]\nrequires-python = \">=3.9\"\ndependencies = [\"importlib-resources >= 6.0; python_version < '3.10'\"]\ndescription = \"Up-to-date simple useragent faker with real world database\"\nkeywords = [\n    \"user\",\n    \"agent\",\n    \"user agent\",\n    \"useragent\",\n    \"fake\",\n    \"fake useragent\",\n    \"fake user agent\",\n]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Operating System :: POSIX\",\n    \"Operating System :: MacOS :: MacOS X\",\n    \"Operating System :: Microsoft :: Windows\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Operating System :: OS Independent\",\n    \"Topic :: Internet :: WWW/HTTP\",\n    \"Topic :: Software Development\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Topic :: Utilities\",\n]\n\n[project.readme]\nfile = \"README.md\"\ncontent-type = \"text/markdown\"\n\n[project.urls]\nHomepage = \"https://github.com/fake-useragent/fake-useragent\"\n\n[tool.ruff]\ntarget-version = \"py39\"\nline-length = 142\n\n[tool.ruff.lint]\nselect = [\n    \"B\",\n    \"C4\",\n    \"C9\",\n    \"E\",\n    \"F\",\n    \"I\",\n    \"PL\",\n    \"S\",\n    \"SIM\",\n    \"W\",\n    \"YTT\",\n    \"DOC\", # Ensure docstrings are consistent with signatures.\n    \"D\",   # Check compliance with Python docstring conventions.\n]\n\nignore = [\n    \"B904\",\n    \"C408\",\n    \"PLW2901\",\n    \"SIM105\",\n    \"SIM108\",\n    \"D107\",    # Allow no docstring in __init__, we document it in the class docstring.\n]\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"fake_useragent\"]\n\n[tool.ruff.lint.mccabe]\nmax-complexity = 13\n\n[tool.ruff.lint.per-file-ignores]\n\"src/fake_useragent/__init__.py\" = [\"F401\"]\n\"tests/**/*\" = [\"S\", \"SIM\", \"UP015\", \"D\", \"DOC\"]\n\"docs/**/*\" = [\"D\", \"DOC\"]\n\n[tool.ruff.lint.pylint]\nmax-args = 7\nmax-branches = 13\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"google\"\n\n[tool.setuptools]\nzip-safe = false\n\n[tool.setuptools.package-data]\n\"fake_useragent.data\" = [\"*.jsonl\"]\n\"fake_useragent\" = [\"py.typed\"]\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.19140625,
          "content": "[pytest]\naddopts = -s --strict-markers --keep-duplicates --cache-clear --verbose --maxfail=1 --no-cov-on-fail --cov=fake_useragent --cov-report=term --cov-report=xml --cov-report=html --fulltrace\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.58984375,
          "content": "attrs==24.2.0\nblack==24.10.0\nbuild==1.2.2.post1\ncachetools==5.5.0\nchardet==5.2.0\nclick==8.1.7\ncolorama==0.4.6\ncoverage==7.6.10\ndistlib==0.3.9\nexceptiongroup==1.2.2\nfastjsonschema==2.20.0\nfilelock==3.16.1\nimportlib-resources==6.4.5\niniconfig==2.0.0\nisort==5.13.2\nmypy-extensions==1.0.0\npackaging==24.2\npathspec==0.12.1\npep517==0.13.1\nplatformdirs==4.3.6\npluggy==1.5.0\npy==1.11.0\npyparsing==3.2.0\npyproject-api==1.6.1\npyproject_hooks==1.2.0\npytest==8.3.4\npytest-cov==6.0.0\nruff==0.8.6\nsix==1.17.0\ntomli==2.2.1\ntox==4.14.1\ntyping_extensions==4.12.2\nvalidate-pyproject==0.23\nvirtualenv==20.25.1\nzipp==3.21.0\n"
        },
        {
          "name": "requirements_converter.txt",
          "type": "blob",
          "size": 0.1083984375,
          "content": "-r requirements.txt\n-e .\nua-parser==1.0.0\nua-parser-builtins==0.18.0.post1\nua-parser-rs==0.1.2\nrequests==2.32.3"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.2685546875,
          "content": "[tox]\nenvlist =\n    py3{9,10,11,12}\n    pypy3\nisolated_build = True\nskip_missing_interpreters = True\n\n[testenv]\ndeps =\n    black\n    pytest\n    pytest-cov\n    validate-pyproject\ncommands =\n    black --check --diff .\n    validate-pyproject pyproject.toml\n    pytest {posargs}\n"
        },
        {
          "name": "ua-converter",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}