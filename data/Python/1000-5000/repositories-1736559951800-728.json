{
  "metadata": {
    "timestamp": 1736559951800,
    "page": 728,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "clovaai/stargan-v2",
      "stars": 3521,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1748046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 18.9521484375,
          "content": "Copyright (c) 2020-present, NAVER Corp. \nAll rights reserved.\n\n\nAttribution-NonCommercial 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n    wiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n    wiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  j. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  k. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  l. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the \"Licensor.\" The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 3.1171875,
          "content": "StarGAN v2\n\nCopyright (c) 2020-present NAVER Corp.\nAll rights reserved.\n\nThis work is licensed under the Creative Commons Attribution-NonCommercial\n4.0 International License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by-nc/4.0/ or send a letter to\nCreative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\n--------------------------------------------------------------------------------------\n\nThis project contains subcomponents with separate copyright notices and license terms. \nYour use of the source code for these subcomponents is subject to the terms and conditions of the following licenses.\n\n=====\n\n1adrianb/face-alignment\nhttps://github.com/1adrianb/face-alignment\n\n\nBSD 3-Clause License\n\nCopyright (c) 2017, Adrian Bulat\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n=====\n\nprotossw512/AdaptiveWingLoss\nhttps://github.com/protossw512/AdaptiveWingLoss\n\n\n[ICCV 2019] Adaptive Wing Loss for Robust Face Alignment via Heatmap Regression - Official Implementation\n\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n---\n\nauthor = {Wang, Xinyao and Bo, Liefeng and Fuxin, Li},\ntitle = {Adaptive Wing Loss for Robust Face Alignment via Heatmap Regression},\nbooktitle = {The IEEE International Conference on Computer Vision (ICCV)},\nmonth = {October},\nyear = {2019}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.388671875,
          "content": "\n## StarGAN v2 - Official PyTorch Implementation\n\n<p align=\"left\"><img width=\"95%\" src=\"assets/teaser.jpg\" /></p>\n\n> **StarGAN v2: Diverse Image Synthesis for Multiple Domains**<br>\n> [Yunjey Choi](https://github.com/yunjey)\\*, [Youngjung Uh](https://github.com/youngjung)\\*, [Jaejun Yoo](http://jaejunyoo.blogspot.com/search/label/kr)\\*, [Jung-Woo Ha](https://www.facebook.com/jungwoo.ha.921)<br>\n> In CVPR 2020. (* indicates equal contribution)<br>\n\n> Paper: https://arxiv.org/abs/1912.01865<br>\n> Video: https://youtu.be/0EVh5Ki4dIY<br>\n\n> **Abstract:** *A good image-to-image translation model should learn a mapping between different visual domains while satisfying the following properties: 1) diversity of generated images and 2) scalability over multiple domains. Existing methods address either of the issues, having limited diversity or multiple models for all domains. We propose StarGAN v2, a single framework that tackles both and shows significantly improved results over the baselines. Experiments on CelebA-HQ and a new animal faces dataset (AFHQ) validate our superiority in terms of visual quality, diversity, and scalability. To better assess image-to-image translation models, we release AFHQ, high-quality animal faces with large inter- and intra-domain variations. The code, pre-trained models, and dataset are available at clovaai/stargan-v2.*\n\n## Teaser video\nClick the figure to watch the teaser video. <br/>\n\n[![IMAGE ALT TEXT HERE](assets/youtube_video.jpg)](https://youtu.be/0EVh5Ki4dIY)\n\n## TensorFlow implementation\nThe TensorFlow implementation of StarGAN v2 by our team member junho can be found at [clovaai/stargan-v2-tensorflow](https://github.com/clovaai/stargan-v2-tensorflow).\n\n## Software installation\nClone this repository:\n\n```bash\ngit clone https://github.com/clovaai/stargan-v2.git\ncd stargan-v2/\n```\n\nInstall the dependencies:\n```bash\nconda create -n stargan-v2 python=3.6.7\nconda activate stargan-v2\nconda install -y pytorch=1.4.0 torchvision=0.5.0 cudatoolkit=10.0 -c pytorch\nconda install x264=='1!152.20180717' ffmpeg=4.0.2 -c conda-forge\npip install opencv-python==4.1.2.30 ffmpeg-python==0.2.0 scikit-image==0.16.2\npip install pillow==7.0.0 scipy==1.2.1 tqdm==4.43.0 munch==2.5.0\n```\n\n## Datasets and pre-trained networks\nWe provide a script to download datasets used in StarGAN v2 and the corresponding pre-trained networks. The datasets and network checkpoints will be downloaded and stored in the `data` and `expr/checkpoints` directories, respectively.\n\n<b>CelebA-HQ.</b> To download the [CelebA-HQ](https://drive.google.com/drive/folders/0B4qLcYyJmiz0TXY1NG02bzZVRGs) dataset and the pre-trained network, run the following commands:\n```bash\nbash download.sh celeba-hq-dataset\nbash download.sh pretrained-network-celeba-hq\nbash download.sh wing\n```\n\n<b>AFHQ.</b> To download the [AFHQ](https://github.com/clovaai/stargan-v2/blob/master/README.md#animal-faces-hq-dataset-afhq) dataset and the pre-trained network, run the following commands:\n```bash\nbash download.sh afhq-dataset\nbash download.sh pretrained-network-afhq\n```\n\n\n## Generating interpolation videos\nAfter downloading the pre-trained networks, you can synthesize output images reflecting diverse styles (e.g., hairstyle) of reference images. The following commands will save generated images and interpolation videos to the `expr/results` directory. \n\n\n<b>CelebA-HQ.</b> To generate images and interpolation videos, run the following command:\n```bash\npython main.py --mode sample --num_domains 2 --resume_iter 100000 --w_hpf 1 \\\n               --checkpoint_dir expr/checkpoints/celeba_hq \\\n               --result_dir expr/results/celeba_hq \\\n               --src_dir assets/representative/celeba_hq/src \\\n               --ref_dir assets/representative/celeba_hq/ref\n```\n\nTo transform a custom image, first crop the image manually so that the proportion of face occupied in the whole is similar to that of CelebA-HQ. Then, run the following command for additional fine rotation and cropping. All custom images in the `inp_dir` directory will be aligned and stored in the `out_dir` directory.\n\n```bash\npython main.py --mode align \\\n               --inp_dir assets/representative/custom/female \\\n               --out_dir assets/representative/celeba_hq/src/female\n```\n\n\n<p align=\"left\"><img width=\"99%\" src=\"assets/celebahq_interpolation.gif\" /></p>\n\n\n<b>AFHQ.</b> To generate images and interpolation videos, run the following command:\n```bash\npython main.py --mode sample --num_domains 3 --resume_iter 100000 --w_hpf 0 \\\n               --checkpoint_dir expr/checkpoints/afhq \\\n               --result_dir expr/results/afhq \\\n               --src_dir assets/representative/afhq/src \\\n               --ref_dir assets/representative/afhq/ref\n```\n\n<p align=\"left\"><img width=\"99%\" src=\"assets/afhq_interpolation.gif\" /></p>\n\n## Evaluation metrics\nTo evaluate StarGAN v2 using [Fr&eacute;chet Inception Distance (FID)](https://arxiv.org/abs/1706.08500) and [Learned Perceptual Image Patch Similarity (LPIPS)](https://arxiv.org/abs/1801.03924), run the following commands:\n\n\n```bash\n# celeba-hq\npython main.py --mode eval --num_domains 2 --w_hpf 1 \\\n               --resume_iter 100000 \\\n               --train_img_dir data/celeba_hq/train \\\n               --val_img_dir data/celeba_hq/val \\\n               --checkpoint_dir expr/checkpoints/celeba_hq \\\n               --eval_dir expr/eval/celeba_hq\n\n# afhq\npython main.py --mode eval --num_domains 3 --w_hpf 0 \\\n               --resume_iter 100000 \\\n               --train_img_dir data/afhq/train \\\n               --val_img_dir data/afhq/val \\\n               --checkpoint_dir expr/checkpoints/afhq \\\n               --eval_dir expr/eval/afhq\n```\n\nNote that the evaluation metrics are calculated using random latent vectors or reference images, both of which are selected by the [seed number](https://github.com/clovaai/stargan-v2/blob/master/main.py#L35). In the paper, we reported the average of values from 10 measurements using different seed numbers. The following table shows the calculated values for both latent-guided and reference-guided synthesis.\n\n| Dataset <img width=50/> | <img width=15/> FID (latent) <img width=15/>  | <img width=10/> LPIPS (latent) <img width=10/> | <img width=5/> FID (reference) <img width=5/> | LPIPS (reference) | <img width=10/> Elapsed time <img width=10/>  |\n| :---------- | :------------: | :----: | :-----: | :----: | :----------:|\n| `celeba-hq` | 13.73 &pm; 0.06 | 0.4515 &pm; 0.0006  | 23.84  &pm; 0.03 | 0.3880 &pm; 0.0001 | 49min 51s\n| `afhq` | 16.18 &pm; 0.15 | 0.4501 &pm; 0.0007 | 19.78 &pm; 0.01 | 0.4315 &pm; 0.0002 | 64min 49s\n\n\n\n## Training networks\nTo train StarGAN v2 from scratch, run the following commands. Generated images and network checkpoints will be stored in the `expr/samples` and `expr/checkpoints` directories, respectively. Training takes about three days on a single Tesla V100 GPU. Please see [here](https://github.com/clovaai/stargan-v2/blob/master/main.py#L86-L179) for training arguments and a description of them. \n\n```bash\n# celeba-hq\npython main.py --mode train --num_domains 2 --w_hpf 1 \\\n               --lambda_reg 1 --lambda_sty 1 --lambda_ds 1 --lambda_cyc 1 \\\n               --train_img_dir data/celeba_hq/train \\\n               --val_img_dir data/celeba_hq/val\n\n# afhq\npython main.py --mode train --num_domains 3 --w_hpf 0 \\\n               --lambda_reg 1 --lambda_sty 1 --lambda_ds 2 --lambda_cyc 1 \\\n               --train_img_dir data/afhq/train \\\n               --val_img_dir data/afhq/val\n```\n\n## Animal Faces-HQ dataset (AFHQ)\n\n<p align=\"left\"><img width=\"99%\" src=\"assets/afhq_dataset.jpg\" /></p>\n\nWe release a new dataset of animal faces, Animal Faces-HQ (AFHQ), consisting of 15,000 high-quality images at 512×512 resolution. The figure above shows example images of the AFHQ dataset. The dataset includes three domains of cat, dog, and wildlife, each providing about 5000 images. By having multiple (three) domains and diverse images of various breeds per each domain, AFHQ sets a challenging image-to-image translation problem. For each domain, we select 500 images as a test set and provide all remaining images as a training set. To download the dataset, run the following command:\n\n```bash\nbash download.sh afhq-dataset\n```\n\n\n**[Update: 2021.07.01]** We rebuild the original AFHQ dataset by using high-quality resize filtering (i.e., Lanczos resampling). Please see the [clean FID paper](https://arxiv.org/abs/2104.11222) that brings attention to the unfortunate software library situation for downsampling. We thank to [Alias-Free GAN](https://nvlabs.github.io/alias-free-gan/) authors for their suggestion and contribution to the updated AFHQ dataset. If you use the updated dataset, we recommend to cite not only our paper but also their paper.\n\nThe differences from the original dataset are as follows:\n* We resize the images using Lanczos resampling instead of nearest neighbor downsampling.\n* About 2% of the original images had been removed. So the set is now has 15803 images, whereas the original had 16130.\n* Images are saved as PNG format to avoid compression artifacts. This makes the files bigger than the original, but it's worth it.\n\n\nTo download the updated dataset, run the following command:\n\n```bash\nbash download.sh afhq-v2-dataset\n```\n\n<p align=\"left\"><img width=\"99%\" src=\"assets/afhqv2_teaser2.jpg\" /></p>\n\n\n\n## License\nThe source code, pre-trained models, and dataset are available under [Creative Commons BY-NC 4.0](https://github.com/clovaai/stargan-v2/blob/master/LICENSE) license by NAVER Corporation. You can **use, copy, tranform and build upon** the material for **non-commercial purposes** as long as you give **appropriate credit** by citing our paper, and indicate if changes were made. \n\nFor business inquiries, please contact clova-jobs@navercorp.com.<br/>\t\nFor technical and other inquires, please contact yunjey.choi@navercorp.com.\n\n\n## Citation\nIf you find this work useful for your research, please cite our paper:\n\n```\n@inproceedings{choi2020starganv2,\n  title={StarGAN v2: Diverse Image Synthesis for Multiple Domains},\n  author={Yunjey Choi and Youngjung Uh and Jaejun Yoo and Jung-Woo Ha},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2020}\n}\n```\n\n## Acknowledgements\nWe would like to thank the full-time and visiting Clova AI Research (now NAVER AI Lab) members for their valuable feedback and an early review: especially Seongjoon Oh, Junsuk Choe, Muhammad Ferjad Naeem, and Kyungjune Baek. We also thank Alias-Free GAN authors for their contribution to the updated AFHQ dataset.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "download.sh",
          "type": "blob",
          "size": 2.0986328125,
          "content": "\"\"\"\nStarGAN v2\nCopyright (c) 2020-present NAVER Corp.\n\nThis work is licensed under the Creative Commons Attribution-NonCommercial\n4.0 International License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by-nc/4.0/ or send a letter to\nCreative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\"\"\"\n\nFILE=$1\n\nif [ $FILE == \"pretrained-network-celeba-hq\" ]; then\n    URL=https://www.dropbox.com/s/96fmei6c93o8b8t/100000_nets_ema.ckpt?dl=0\n    mkdir -p ./expr/checkpoints/celeba_hq\n    OUT_FILE=./expr/checkpoints/celeba_hq/100000_nets_ema.ckpt\n    wget -N $URL -O $OUT_FILE\n\nelif  [ $FILE == \"pretrained-network-afhq\" ]; then\n    URL=https://www.dropbox.com/s/etwm810v25h42sn/100000_nets_ema.ckpt?dl=0\n    mkdir -p ./expr/checkpoints/afhq\n    OUT_FILE=./expr/checkpoints/afhq/100000_nets_ema.ckpt\n    wget -N $URL -O $OUT_FILE\n    \nelif  [ $FILE == \"wing\" ]; then\n    URL=https://www.dropbox.com/s/tjxpypwpt38926e/wing.ckpt?dl=0\n    mkdir -p ./expr/checkpoints/\n    OUT_FILE=./expr/checkpoints/wing.ckpt\n    wget -N $URL -O $OUT_FILE\n    URL=https://www.dropbox.com/s/91fth49gyb7xksk/celeba_lm_mean.npz?dl=0\n    OUT_FILE=./expr/checkpoints/celeba_lm_mean.npz\n    wget -N $URL -O $OUT_FILE\n\nelif  [ $FILE == \"celeba-hq-dataset\" ]; then\n    URL=https://www.dropbox.com/s/f7pvjij2xlpff59/celeba_hq.zip?dl=0\n    ZIP_FILE=./data/celeba_hq.zip\n    mkdir -p ./data\n    wget -N $URL -O $ZIP_FILE\n    unzip $ZIP_FILE -d ./data\n    rm $ZIP_FILE\n\nelif  [ $FILE == \"afhq-dataset\" ]; then\n    URL=https://www.dropbox.com/s/t9l9o3vsx2jai3z/afhq.zip?dl=0\n    ZIP_FILE=./data/afhq.zip\n    mkdir -p ./data\n    wget -N $URL -O $ZIP_FILE\n    unzip $ZIP_FILE -d ./data\n    rm $ZIP_FILE\n\nelif  [ $FILE == \"afhq-v2-dataset\" ]; then\n    #URL=https://www.dropbox.com/s/scckftx13grwmiv/afhq_v2.zip?dl=0\n    URL=https://www.dropbox.com/s/vkzjokiwof5h8w6/afhq_v2.zip?dl=0\n    ZIP_FILE=./data/afhq_v2.zip\n    mkdir -p ./data\n    wget -N $URL -O $ZIP_FILE\n    unzip $ZIP_FILE -d ./data\n    rm $ZIP_FILE\n\nelse\n    echo \"Available arguments are pretrained-network-celeba-hq, pretrained-network-afhq, celeba-hq-dataset, and afhq-dataset.\"\n    exit 1\n\nfi\n"
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 8.708984375,
          "content": "\"\"\"\nStarGAN v2\nCopyright (c) 2020-present NAVER Corp.\n\nThis work is licensed under the Creative Commons Attribution-NonCommercial\n4.0 International License. To view a copy of this license, visit\nhttp://creativecommons.org/licenses/by-nc/4.0/ or send a letter to\nCreative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n\"\"\"\n\nimport os\nimport argparse\n\nfrom munch import Munch\nfrom torch.backends import cudnn\nimport torch\n\nfrom core.data_loader import get_train_loader\nfrom core.data_loader import get_test_loader\nfrom core.solver import Solver\n\n\ndef str2bool(v):\n    return v.lower() in ('true')\n\n\ndef subdirs(dname):\n    return [d for d in os.listdir(dname)\n            if os.path.isdir(os.path.join(dname, d))]\n\n\ndef main(args):\n    print(args)\n    cudnn.benchmark = True\n    torch.manual_seed(args.seed)\n\n    solver = Solver(args)\n\n    if args.mode == 'train':\n        assert len(subdirs(args.train_img_dir)) == args.num_domains\n        assert len(subdirs(args.val_img_dir)) == args.num_domains\n        loaders = Munch(src=get_train_loader(root=args.train_img_dir,\n                                             which='source',\n                                             img_size=args.img_size,\n                                             batch_size=args.batch_size,\n                                             prob=args.randcrop_prob,\n                                             num_workers=args.num_workers),\n                        ref=get_train_loader(root=args.train_img_dir,\n                                             which='reference',\n                                             img_size=args.img_size,\n                                             batch_size=args.batch_size,\n                                             prob=args.randcrop_prob,\n                                             num_workers=args.num_workers),\n                        val=get_test_loader(root=args.val_img_dir,\n                                            img_size=args.img_size,\n                                            batch_size=args.val_batch_size,\n                                            shuffle=True,\n                                            num_workers=args.num_workers))\n        solver.train(loaders)\n    elif args.mode == 'sample':\n        assert len(subdirs(args.src_dir)) == args.num_domains\n        assert len(subdirs(args.ref_dir)) == args.num_domains\n        loaders = Munch(src=get_test_loader(root=args.src_dir,\n                                            img_size=args.img_size,\n                                            batch_size=args.val_batch_size,\n                                            shuffle=False,\n                                            num_workers=args.num_workers),\n                        ref=get_test_loader(root=args.ref_dir,\n                                            img_size=args.img_size,\n                                            batch_size=args.val_batch_size,\n                                            shuffle=False,\n                                            num_workers=args.num_workers))\n        solver.sample(loaders)\n    elif args.mode == 'eval':\n        solver.evaluate()\n    elif args.mode == 'align':\n        from core.wing import align_faces\n        align_faces(args, args.inp_dir, args.out_dir)\n    else:\n        raise NotImplementedError\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n\n    # model arguments\n    parser.add_argument('--img_size', type=int, default=256,\n                        help='Image resolution')\n    parser.add_argument('--num_domains', type=int, default=2,\n                        help='Number of domains')\n    parser.add_argument('--latent_dim', type=int, default=16,\n                        help='Latent vector dimension')\n    parser.add_argument('--hidden_dim', type=int, default=512,\n                        help='Hidden dimension of mapping network')\n    parser.add_argument('--style_dim', type=int, default=64,\n                        help='Style code dimension')\n\n    # weight for objective functions\n    parser.add_argument('--lambda_reg', type=float, default=1,\n                        help='Weight for R1 regularization')\n    parser.add_argument('--lambda_cyc', type=float, default=1,\n                        help='Weight for cyclic consistency loss')\n    parser.add_argument('--lambda_sty', type=float, default=1,\n                        help='Weight for style reconstruction loss')\n    parser.add_argument('--lambda_ds', type=float, default=1,\n                        help='Weight for diversity sensitive loss')\n    parser.add_argument('--ds_iter', type=int, default=100000,\n                        help='Number of iterations to optimize diversity sensitive loss')\n    parser.add_argument('--w_hpf', type=float, default=1,\n                        help='weight for high-pass filtering')\n\n    # training arguments\n    parser.add_argument('--randcrop_prob', type=float, default=0.5,\n                        help='Probabilty of using random-resized cropping')\n    parser.add_argument('--total_iters', type=int, default=100000,\n                        help='Number of total iterations')\n    parser.add_argument('--resume_iter', type=int, default=0,\n                        help='Iterations to resume training/testing')\n    parser.add_argument('--batch_size', type=int, default=8,\n                        help='Batch size for training')\n    parser.add_argument('--val_batch_size', type=int, default=32,\n                        help='Batch size for validation')\n    parser.add_argument('--lr', type=float, default=1e-4,\n                        help='Learning rate for D, E and G')\n    parser.add_argument('--f_lr', type=float, default=1e-6,\n                        help='Learning rate for F')\n    parser.add_argument('--beta1', type=float, default=0.0,\n                        help='Decay rate for 1st moment of Adam')\n    parser.add_argument('--beta2', type=float, default=0.99,\n                        help='Decay rate for 2nd moment of Adam')\n    parser.add_argument('--weight_decay', type=float, default=1e-4,\n                        help='Weight decay for optimizer')\n    parser.add_argument('--num_outs_per_domain', type=int, default=10,\n                        help='Number of generated images per domain during sampling')\n\n    # misc\n    parser.add_argument('--mode', type=str, required=True,\n                        choices=['train', 'sample', 'eval', 'align'],\n                        help='This argument is used in solver')\n    parser.add_argument('--num_workers', type=int, default=4,\n                        help='Number of workers used in DataLoader')\n    parser.add_argument('--seed', type=int, default=777,\n                        help='Seed for random number generator')\n\n    # directory for training\n    parser.add_argument('--train_img_dir', type=str, default='data/celeba_hq/train',\n                        help='Directory containing training images')\n    parser.add_argument('--val_img_dir', type=str, default='data/celeba_hq/val',\n                        help='Directory containing validation images')\n    parser.add_argument('--sample_dir', type=str, default='expr/samples',\n                        help='Directory for saving generated images')\n    parser.add_argument('--checkpoint_dir', type=str, default='expr/checkpoints',\n                        help='Directory for saving network checkpoints')\n\n    # directory for calculating metrics\n    parser.add_argument('--eval_dir', type=str, default='expr/eval',\n                        help='Directory for saving metrics, i.e., FID and LPIPS')\n\n    # directory for testing\n    parser.add_argument('--result_dir', type=str, default='expr/results',\n                        help='Directory for saving generated images and videos')\n    parser.add_argument('--src_dir', type=str, default='assets/representative/celeba_hq/src',\n                        help='Directory containing input source images')\n    parser.add_argument('--ref_dir', type=str, default='assets/representative/celeba_hq/ref',\n                        help='Directory containing input reference images')\n    parser.add_argument('--inp_dir', type=str, default='assets/representative/custom/female',\n                        help='input directory when aligning faces')\n    parser.add_argument('--out_dir', type=str, default='assets/representative/celeba_hq/src/female',\n                        help='output directory when aligning faces')\n\n    # face alignment\n    parser.add_argument('--wing_path', type=str, default='expr/checkpoints/wing.ckpt')\n    parser.add_argument('--lm_path', type=str, default='expr/checkpoints/celeba_lm_mean.npz')\n\n    # step size\n    parser.add_argument('--print_every', type=int, default=10)\n    parser.add_argument('--sample_every', type=int, default=5000)\n    parser.add_argument('--save_every', type=int, default=10000)\n    parser.add_argument('--eval_every', type=int, default=50000)\n\n    args = parser.parse_args()\n    main(args)\n"
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}