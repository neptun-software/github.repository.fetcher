{
  "metadata": {
    "timestamp": 1736559937974,
    "page": 707,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "miso-belica/sumy",
      "stars": 3544,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1826171875,
          "content": "# Python\n__pycache__/\n*.py[co]\n*.egg-info\n/build\n/dist\n\n# IDE files, .coverage, .pytest_cache, ...\n.*\n!/.github/\n!.gitignore\n\n# do not import jupyter notebooks for exploration\nnotebooks/\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.19921875,
          "content": "tasks:\n  - init: pip install . && python -c \"import nltk; nltk.download('punkt')\" && pip install -U numpy\n  - command: sumy lex-rank --length=10 --url=http://en.wikipedia.org/wiki/Automatic_summarization\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.8076171875,
          "content": "# Changelog\n\n## 0.11.0 (2022-10-23)\n- **FIX:** Greek stemmer bug fix by @NC0DER in https://github.com/miso-belica/sumy/pull/175\n* **FIX:** Avoid to add empty space between words and punctations. by @gianpd in https://github.com/miso-belica/sumy/pull/178\n* **DOC:** Fix a few typos by @timgates42 in https://github.com/miso-belica/sumy/pull/182\n* **FEATURE:** Add Arabic language support by @issam9 in https://github.com/miso-belica/sumy/pull/181\n\n## 0.10.0 (2022-04-21)\n- **FEATURE:** Add support for Ukrainian language in https://github.com/miso-belica/sumy/pull/168\n- **FEATURE:** Add support for the Greek Language by @NC0DER in https://github.com/miso-belica/sumy/pull/169\n- **FEATURE:** Return the summary size by custom callable object in https://github.com/miso-belica/sumy/pull/161\n- **FIX:** Compatibility for `from collections import Sequence` for Python 3.10\n- **FIX:** Fix SumBasicSummarizer with stemmer in https://github.com/miso-belica/sumy/pull/166\n\n## 0.9.0 (2021-10-21)\n- **INCOMPATIBILITY** Dropped official support for Python 2.7. It should still work if you install Python 2 compatible dependencies.\n- **FEATURE:** Add basic Korean support by @kimbyungnam in https://github.com/miso-belica/sumy/pull/129\n- **FEATURE:** Add support for the Hebrew language by @miso-belica in https://github.com/miso-belica/sumy/pull/151\n- **FIX:** Allow words with dashes/apostrophe returned from tokenizer by @miso-belica in https://github.com/miso-belica/sumy/pull/144\n- **FIX:** Ignore empty sentences from tokenizer by @miso-belica in https://github.com/miso-belica/sumy/pull/153\n- Basic documentation by @miso-belica in https://github.com/miso-belica/sumy/pull/133\n- Speedup of the TextRank algorithm by @miso-belica in https://github.com/miso-belica/sumy/pull/140\n- Fix missing license in sdist by @dopplershift in https://github.com/miso-belica/sumy/pull/157\n- added test and call for stemmer by @bdalal in https://github.com/miso-belica/sumy/pull/131\n- Fix simple typo: referene -> reference by @timgates42 in https://github.com/miso-belica/sumy/pull/143\n- Add codecov service to tests by @miso-belica in https://github.com/miso-belica/sumy/pull/136\n- Add gitpod config by @miso-belica in https://github.com/miso-belica/sumy/pull/138\n- Try to run Python 3.7 and 3.8 on TravisCI by @miso-belica in https://github.com/miso-belica/sumy/pull/130\n- Fix TravisCI for Python 3.4 by @miso-belica in https://github.com/miso-belica/sumy/pull/134\n\n## 0.8.1 (2019-05-19)\n- Open files for `PlaintextParser` in UTF-8 encoding [#123](https://github.com/miso-belica/sumy/pull/123)\n\n## 0.8.0 (2019-05-18)\n- Added support for Italian language [#114](https://github.com/miso-belica/sumy/pull/114)\n- Added support for ISO-639 language codes (`en`, `de`, `sk`, ...). [#106](https://github.com/miso-belica/sumy/pull/106)\n- `TextRankSummarizer` uses iterative algorithm. Previous algorithm is called `ReductionSummarizer`. [#100](https://github.com/miso-belica/sumy/pull/100)\n\n## 0.7.0 (2017-07-22)\n- Added support for Chinese. [#93](https://github.com/miso-belica/sumy/pull/93)\n\n## 0.6.0 (2017-03-05)\n- Dropped support for distutils when installing sumy.\n- Added support for Japanese. [#79](https://github.com/miso-belica/sumy/pull/79)\n- Fixed incorrect n-grams computation for more sentences. [#84](https://github.com/miso-belica/sumy/pull/84)\n- Fixed NLTK dependency for Python 3.3. NLTK 3.2 dropped support for Python 3.3 so sumy needs 3.1.\n\n## 0.5.1 (2016-11-17)\n- Fixed missing stopwords in SumBasic summarizer. [#74](https://github.com/miso-belica/sumy/pull/74)\n\n## 0.5.0 (2016-11-12)\n- Added \"--text\" CLI parameter to summarize text in Emacs and other tools. [#67](https://github.com/miso-belica/sumy/pull/67)\n- Fixed computation of cosine similarity in LexRank summarizator. [#63](https://github.com/miso-belica/sumy/pull/63)\n- Fixed resource searching in .egg packages. [#53](https://github.com/miso-belica/sumy/pull/53)\n\n## 0.4.1 (2016-03-06)\n- Added support for Portuguese and Spanish. [#49](https://github.com/miso-belica/sumy/pull/49) [#51](https://github.com/miso-belica/sumy/pull/51)\n- Better error message when NLTK tokenizers are missing.\n\n## 0.4.0 (2015-12-04)\n-   Dropped support for Python 2.6 and 3.2. Only 2.7/3.3+ are officially supported now. Time to move :)\n-   CLI: Better message for unknown format.\n-   LexRank: fixed power method computation.\n-   Added some extra abbreviations (english, german) into tokenizer for better output.\n-   SumBasic: Added new summarization method - SumBasic. Thanks to [Julian Griggs](https://github.com/JulianGriggs).\n-   KL: Added new summarization method - KL. Thanks to [Julian Griggs](https://github.com/JulianGriggs).\n-   Added dependency [requests](http://docs.python-requests.org/en/latest/) to fix issues with downloading pages.\n-   Better documentation of expected Plaintext document format.\n\n## 0.3.0 (2014-06-07)\n-   Added possibility to specify format of input document for URL & stdin. Thanks to [@Lucas-C](https://github.com/Lucas-C).\n-   Added possibility to specify custom file with stop-words in CLI. Thanks to [@Lucas-C](https://github.com/Lucas-C).\n-   Added support for French language (added stopwords & stemmer). Thanks to [@Lucas-C](https://github.com/Lucas-C).\n-   Function `sumy.utils.get_stop_words` raises `LookupError` instead of `ValueError` for unknown language.\n-   Exception `LookupError` is raised for unknown language of stemmer instead of falling silently to `null_stemmer`.\n\n## 0.2.1 (2014-01-23)\n-   Fixed installation of my own readability fork. Added `breadability` to the dependencies instead of it [#8](https://github.com/miso-belica/sumy/issues/8).\n    Thanks to [@pratikpoddar](https://github.com/pratikpoddar).\n\n## 0.2.0 (2014-01-18)\n-   Removed dependency on SciPy [#7](https://github.com/miso-belica/sumy/pull/7). Use `numpy.linalg.svd` implementation.\n    Thanks to [Shantanu](https://github.com/baali).\n\n## 0.1.0 (2013-10-20)\n-   First public release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6416015625,
          "content": "Hi,\n\nfirst of all, thank you you are considering to contribute to sumy. Because people started to send\nmore Pull request I would like to set some rules here to make it easier and faster to review PR\nwith your code. Nothing is written in stone but please try to respect them.\n\n1. If the change is not few lines of code **ask if the feature is needed**. I would like to avoid\n   situation when **week of work will be rejected** because the feature is something what should \n   be in sumy. On the other hand if it's **10 lines it's easier to send PR** with changes and discuss \n   the code in PR. If it would be rejected it's 10 still lines of code so not a big deal (I hope) :)\n2. If you add some new feature please **add tests** for it. Also if you fix a bug write test for it.\n   I don' believe fixes without tests. If you don't know how **ask me for help** in PR with code.\n3. When the PR changes something what should be known to end user please **add a line into CHANGELOG.md**.\n4. Please **respect the code style**. I don't want to set specific strict rules here because I think it's \n   possible to respect style from all the code around. For example you will not use `'` for strings \n   when you see that the code uses `\"` ...\n5. Make sure you have Python 3.6+ installed. Also, **Python 2.7/3.4** and maybe older versions work but since \n   they reached end-of-life you could have difficulties with the transitive dependencies that dropped the support \n   already. Then, install all the required dependencies and run the tests:\n\n```sh\n$ pip install .\n$ pip install pytest pytest-cov numpy jieba tinysegmenter\n$ pytest\n```\n\nAnd that's all. I am looking forward for your PR :)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.220703125,
          "content": "FROM python:3-alpine\n\nRUN apk update && apk add --no-cache libxml2-dev libxslt-dev build-base\n\nRUN pip install \"sumy[LSA]\" && \\\n    python -c \"import nltk; nltk.download('punkt')\" && \\\n    pip cache purge\n\nENTRYPOINT [\"sumy\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.0771484375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2013 Michal Belica\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1455078125,
          "content": "include README.md\ninclude LICENSE.md\ninclude CHANGELOG.md\nrecursive-include sumy/data *\nrecursive-exclude * __pycache__\nrecursive-exclude * *.py[co]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.59765625,
          "content": "# Automatic text summarizer\n\n\n[![image](https://github.com/miso-belica/sumy/actions/workflows/run-tests.yml/badge.svg)](https://github.com/miso-belica/sumy/actions/workflows/run-tests.yml)\n[![GitPod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/miso-belica/sumy) \n\nSimple library and command line utility for extracting summary from HTML\npages or plain texts. The package also contains simple evaluation\nframework for text summaries. Implemented summarization methods are described in the [documentation](docs/summarizators.md). I also maintain a list of [alternative implementations](docs/alternatives.md) of the summarizers in various programming languages.\n\n## Is my natural language supported?\nThere is a [good chance](docs/index.md#Tokenizer) it is. But if not it is [not too hard to add](docs/how-to-add-new-language.md) it.\n\n## Installation\n\nMake sure you have [Python](http://www.python.org/) 3.6+ and\n[pip](https://crate.io/packages/pip/)\n([Windows](http://docs.python-guide.org/en/latest/starting/install/win/),\n[Linux](http://docs.python-guide.org/en/latest/starting/install/linux/))\ninstalled. Run simply (preferred way):\n\n```sh\n$ [sudo] pip install sumy\n$ [sudo] pip install git+git://github.com/miso-belica/sumy.git  # for the fresh version\n```\n\n## Usage\n\nThanks to some good soul out there, the easiest way to try sumy is in your browser at https://huggingface.co/spaces/issam9/sumy_space\n\nSumy contains command line utility for quick summarization of documents.\n\n```sh\n$ sumy lex-rank --length=10 --url=https://en.wikipedia.org/wiki/Automatic_summarization # what's summarization?\n$ sumy lex-rank --language=uk --length=30 --url=https://uk.wikipedia.org/wiki/Україна\n$ sumy luhn --language=czech --url=https://www.zdrojak.cz/clanky/automaticke-zabezpeceni/\n$ sumy edmundson --language=czech --length=3% --url=https://cs.wikipedia.org/wiki/Bitva_u_Lipan\n$ sumy --help # for more info\n```\n\nVarious evaluation methods for some summarization method can be executed\nby commands below:\n\n```sh\n$ sumy_eval lex-rank reference_summary.txt --url=https://en.wikipedia.org/wiki/Automatic_summarization\n$ sumy_eval lsa reference_summary.txt --language=czech --url=https://www.zdrojak.cz/clanky/automaticke-zabezpeceni/\n$ sumy_eval edmundson reference_summary.txt --language=czech --url=https://cs.wikipedia.org/wiki/Bitva_u_Lipan\n$ sumy_eval --help # for more info\n```\n\nIf you don't want to bother by the installation, you can try it as a container.\n\n```sh\n$ docker run --rm misobelica/sumy lex-rank --length=10 --url=https://en.wikipedia.org/wiki/Automatic_summarization\n```\n\n## Python API\n\nOr you can use sumy like a library in your project. Create file `sumy_example.py` ([don't name it `sumy.py`](https://stackoverflow.com/questions/41334622/python-sumy-no-module-named-sumy-parsers-html)) with the code below to test it.\n\n```python\n# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\nfrom __future__ import division, print_function, unicode_literals\n\nfrom sumy.parsers.html import HtmlParser\nfrom sumy.parsers.plaintext import PlaintextParser\nfrom sumy.nlp.tokenizers import Tokenizer\nfrom sumy.summarizers.lsa import LsaSummarizer as Summarizer\nfrom sumy.nlp.stemmers import Stemmer\nfrom sumy.utils import get_stop_words\n\n\nLANGUAGE = \"english\"\nSENTENCES_COUNT = 10\n\n\nif __name__ == \"__main__\":\n    url = \"https://en.wikipedia.org/wiki/Automatic_summarization\"\n    parser = HtmlParser.from_url(url, Tokenizer(LANGUAGE))\n    # or for plain text files\n    # parser = PlaintextParser.from_file(\"document.txt\", Tokenizer(LANGUAGE))\n    # parser = PlaintextParser.from_string(\"Check this out.\", Tokenizer(LANGUAGE))\n    stemmer = Stemmer(LANGUAGE)\n\n    summarizer = Summarizer(stemmer)\n    summarizer.stop_words = get_stop_words(LANGUAGE)\n\n    for sentence in summarizer(parser.document, SENTENCES_COUNT):\n        print(sentence)\n```\n\n## Interesting projects using sumy\n\nI found some interesting projects while browsing the internet or sometimes people wrote me an e-mail with questions, and I was curious how they use the sumy :)\n\n* [Learning to generate questions from text](https://software.intel.com/en-us/articles/using-natural-language-processing-for-smart-question-generation) - https://github.com/adityasarvaiya/Automatic_Question_Generation\n* Summarize your video to any duration - https://github.com/aswanthkoleri/VideoMash and similar https://github.com/OpenGenus/vidsum\n* Tool for collectively summarizing large discussions - https://github.com/amyxzhang/wikum\n* AutoTL;DR bot for [Lemmy](https://en.wikipedia.org/wiki/Lemmy_(software)) uses sumy: https://github.com/RikudouSage/LemmyAutoTldrBot\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.6337890625,
          "content": "[tool.ruff]\n# Assume Python v3.7\ntarget-version = \"py37\"\nline-length = 120\n# Never enforce `E501` (line length violations).\nignore = [\"E501\"]\n\n# Exclude a variety of commonly ignored directories.\nexclude = [\n    \".bzr\",\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".hg\",\n    \".mypy_cache\",\n    \".nox\",\n    \".pants.d\",\n    \".ruff_cache\",\n    \".svn\",\n    \".tox\",\n    \".venv\",\n    \"__pypackages__\",\n    \"_build\",\n    \"buck-out\",\n    \"build\",\n    \"dist\",\n    \"node_modules\",\n    \"venv\",\n]\n\n# Ignore `E402` (import violations) in all `__init__.py` files, and in `_compat.py`.\n[tool.ruff.per-file-ignores]\n\"__init__.py\" = [\"F401\"]\n\"_compat.py\" = [\"F401\"]\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.3681640625,
          "content": "[bumpversion]\ncurrent_version = 0.11.0\ncommit = false\ntag = false\n\n[bumpversion:file:setup.py]\n\n[bumpversion:file:sumy/__init__.py]\n\n[bumpversion:file:tasks.py]\n\n[pep8]\nmax-line-length = 160\n\n[flake8]\nignore = S001,D100\nmax-line-length = 160\ninline-quotes = double\nmultiline-quotes = double\ndocstring-quotes = double\n\n[isort]\nmulti_line_output = 5\n\n[bdist_wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.8115234375,
          "content": "# -*- coding: utf-8 -*-\n\nimport sys\n\nfrom setuptools import find_packages, setup\n\nVERSION_SUFFIX = \"%d.%d\" % sys.version_info[:2]\n\n\nwith open(\"README.md\") as readme:\n    long_description = readme.read()\n\n\ndependencies = [\n    \"docopt-ng>=0.6.1\",\n    \"breadability>=0.1.20\",\n    \"requests>=2.7.0\",\n    \"pycountry>=18.2.23\",\n    \"nltk>=3.0.2,<3.2.0\" if VERSION_SUFFIX == \"3.3\" else \"nltk>=3.0.2\",  # NLTK 3.2 dropped support for Python 3.3\n]\nif VERSION_SUFFIX == \"3.4\":  # lxml 4.4.0 dropped support for Python 3.4\n    dependencies.append(\"lxml<4.4.0\")\n\n\n# https://blog.ionelmc.ro/presentations/packaging/\nsetup(\n    name=\"sumy\",\n    version=\"0.11.0\",\n    description=\"Module for automatic summarization of text documents and HTML pages.\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    author=\"Mišo Belica\",\n    author_email=\"miso.belica@gmail.com\",\n    url=\"https://github.com/miso-belica/sumy\",\n    license=\"Apache License, Version 2.0\",\n    keywords=[\n        \"data mining\",\n        \"automatic summarization\",\n        \"data reduction\",\n        \"web-data extraction\",\n        \"NLP\",\n        \"natural language processing\",\n        \"latent semantic analysis\",\n        \"LSA\",\n        \"TextRank\",\n        \"LexRank\",\n    ],\n    install_requires=dependencies,\n    tests_require=[\n        \"pytest>=3.0.0\",\n    ],\n    extras_require={\n        \"LSA\": [\"numpy\"],\n        \"LexRank\": [\"numpy\"],\n        \"Japanese\": [\"tinysegmenter\"],\n        \"Chinese\": [\"jieba\"],\n        \"Korean\": [\"konlpy\"],\n        \"Hebrew\": [\"hebrew_tokenizer\"],\n        \"Greek\": [\"greek-stemmer-pos\"],\n        \"Arabic\": [\"pyarabic\"],\n        \"Thai\": [\"pythainlp\"],\n    },\n    packages=find_packages(),\n    package_data={\"sumy\": [\n        \"data/stopwords/*.txt\",\n    ]},\n    entry_points={\n        \"console_scripts\": [\n            \"sumy = sumy.__main__:main\",\n            \"sumy-%s = sumy.__main__:main\" % VERSION_SUFFIX,\n            \"sumy_eval = sumy.evaluation.__main__:main\",\n            \"sumy_eval-%s = sumy.evaluation.__main__:main\" % VERSION_SUFFIX,\n        ],\n    },\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: Education\",\n        \"License :: OSI Approved :: Apache Software License\",\n\n        \"Natural Language :: Chinese (Simplified)\",\n        \"Natural Language :: Czech\",\n        \"Natural Language :: English\",\n        \"Natural Language :: French\",\n        \"Natural Language :: German\",\n        \"Natural Language :: Hebrew\",\n        \"Natural Language :: Italian\",\n        \"Natural Language :: Japanese\",\n        \"Natural Language :: Portuguese\",\n        \"Natural Language :: Slovak\",\n        \"Natural Language :: Spanish\",\n        \"Natural Language :: Swedish\",\n        \"Natural Language :: Ukrainian\",\n        \"Natural Language :: Greek\",\n        \"Natural Language :: Arabic\",\n        \"Natural Language :: Thai\",\n\n        \"Topic :: Education\",\n        \"Topic :: Internet\",\n        \"Topic :: Scientific/Engineering :: Information Analysis\",\n        \"Topic :: Text Processing :: Filters\",\n        \"Topic :: Text Processing :: Linguistic\",\n        \"Topic :: Text Processing :: Markup :: HTML\",\n\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 2\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.3\",\n        \"Programming Language :: Python :: 3.4\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n    ],\n)\n"
        },
        {
          "name": "sumy",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks.py",
          "type": "blob",
          "size": 0.75,
          "content": "# -*- coding: utf-8 -*-\n\nfrom invoke import task\n\n\n@task\ndef clean(context):\n    context.run(\"rm -rf dist build .coverage .pytest_cache .mypy_cache\")\n\n\n@task(clean, default=True)\ndef test(context):\n    context.run(\"pytest\")\n\n\n@task(test)\ndef install(context):\n    context.run(\"python setup.py develop\")\n\n\n@task(test)\ndef release(context):\n    context.run(\"python setup.py register sdist bdist_wheel\")\n    context.run(\"twine upload dist/*\")\n\n\n@task(test)\ndef bump(context, version=\"patch\"):\n    context.run(\"bumpversion %s\" % version)\n    context.run(\"git commit --amend\")\n\n@task\ndef docker(context):\n    context.run(\"docker build --no-cache --rm=true --tag misobelica/sumy:latest -t misobelica/sumy:0.11.0 .\")\n    context.run(\"docker push misobelica/sumy --all-tags\")\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}