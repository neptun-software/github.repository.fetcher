{
  "metadata": {
    "timestamp": 1736559788959,
    "page": 512,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "encode/databases",
      "stars": 3865,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1123046875,
          "content": ".vscode/\n.idea/\n*.pyc\ntest.db\n.coverage\n.pytest_cache/\n.mypy_cache/\n__pycache__/\n*.egg-info/\nhtmlcov/\nvenv/\n.idea/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.4765625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## 0.9.0 (February 23th, 2024)\n\n### Changed\n\n* Drop support for Python 3.7 and add support for Python 3.12 ([#583][#583])\n* Add support for SQLAlchemy 2+ ([#540][#540])\n* Allow SSL string parameters in PostgresSQL URL ([#575][#575]) and ([#576][#576])\n\n[#583]: https://github.com/encode/databases/pull/583\n[#540]: https://github.com/encode/databases/pull/540\n[#575]: https://github.com/encode/databases/pull/575\n[#576]: https://github.com/encode/databases/pull/576\n\n## 0.8.0 (August 28th, 2023)\n\n### Added\n\n* Allow SQLite query parameters and support cached databases ([#561][#561])\n* Support for unix socket for aiomysql and asyncmy ([#551][#551])\n\n[#551]: https://github.com/encode/databases/pull/551\n[#561]: https://github.com/encode/databases/pull/546\n\n### Changed\n\n* Change isolation connections and transactions during concurrent usage ([#546][#546])\n* Bump requests from 2.28.1 to 2.31.0 ([#562][#562])\n* Bump starlette from 0.20.4 to 0.27.0 ([#560][#560])\n* Bump up asyncmy version to fix `No module named 'asyncmy.connection'` ([#553][#553])\n* Bump wheel from 0.37.1 to 0.38.1 ([#524][#524])\n\n[#546]: https://github.com/encode/databases/pull/546\n[#562]: https://github.com/encode/databases/pull/562\n[#560]: https://github.com/encode/databases/pull/560\n[#553]: https://github.com/encode/databases/pull/553\n[#524]: https://github.com/encode/databases/pull/524\n\n### Fixed\n\n* Fix the type-hints using more standard mode ([#526][#526])\n\n[#526]: https://github.com/encode/databases/pull/526\n\n## 0.7.0 (Dec 18th, 2022)\n\n### Fixed\n\n* Fixed breaking changes in SQLAlchemy cursor; supports `>=1.4.42,<1.5` ([#513][#513])\n* Wrapped types in `typing.Optional` where applicable ([#510][#510])\n\n[#513]: https://github.com/encode/databases/pull/513\n[#510]: https://github.com/encode/databases/pull/510\n\n## 0.6.2 (Nov 7th, 2022)\n\n### Changed\n\n* Pinned SQLAlchemy `<=1.4.41` to avoid breaking changes ([#520][#520])\n\n[#520]: https://github.com/encode/databases/pull/520\n\n## 0.6.1 (Aug 9th, 2022)\n\n### Fixed\n\n* Improve typing for `Transaction` ([#493][#493])\n* Allow string indexing into Record ([#501][#501])\n\n[#493]: https://github.com/encode/databases/pull/493\n[#501]: https://github.com/encode/databases/pull/501\n\n## 0.6.0 (May 29th, 2022)\n\n* Dropped Python 3.6 support ([#458][#458])\n\n[#458]: https://github.com/encode/databases/pull/458\n\n### Added\n\n* Add \\_mapping property to the result set interface ([#447][#447])\n* Add contributing docs ([#453][#453])\n\n[#447]: https://github.com/encode/databases/pull/447\n[#453]: https://github.com/encode/databases/pull/453\n\n### Fixed\n\n* Fix query result named access ([#448][#448])\n* Fix connections getting into a bad state when a task is cancelled ([#457][#457])\n* Revert #328 parallel transactions ([#472][#472])\n* Change extra installations to specific drivers ([#436][#436])\n\n[#448]: https://github.com/encode/databases/pull/448\n[#457]: https://github.com/encode/databases/pull/457\n[#472]: https://github.com/encode/databases/pull/472\n[#436]: https://github.com/encode/databases/pull/436\n\n## 0.5.4 (January 14th, 2022)\n\n### Added\n\n* Support for Unix domain in connections ([#423][#423])\n* Added `asyncmy` MySQL driver ([#382][#382])\n\n[#423]: https://github.com/encode/databases/pull/423\n[#382]: https://github.com/encode/databases/pull/382\n\n### Fixed\n\n* Fix SQLite fetch queries with multiple parameters ([#435][#435])\n* Changed `Record` type to `Sequence` ([#408][#408])\n\n[#435]: https://github.com/encode/databases/pull/435\n[#408]: https://github.com/encode/databases/pull/408\n\n## 0.5.3 (October 10th, 2021)\n\n### Added\n\n* Support `dialect+driver` for default database drivers like `postgresql+asyncpg` ([#396][#396])\n\n[#396]: https://github.com/encode/databases/pull/396\n\n### Fixed\n\n* Documentation of low-level transaction ([#390][#390])\n\n[#390]: https://github.com/encode/databases/pull/390\n\n## 0.5.2 (September 10th, 2021)\n\n### Fixed\n\n* Reset counter for failed connections ([#385][#385])\n* Avoid dangling task-local connections after Database.disconnect() ([#211][#211])\n\n[#385]: https://github.com/encode/databases/pull/385\n[#211]: https://github.com/encode/databases/pull/211\n\n## 0.5.1 (September 2nd, 2021)\n\n### Added\n\n* Make database `connect` and `disconnect` calls idempotent ([#379][#379])\n\n[#379]: https://github.com/encode/databases/pull/379\n\n### Fixed\n\n* Fix `in_` and `notin_` queries in SQLAlchemy 1.4 ([#378][#378])\n\n[#378]: https://github.com/encode/databases/pull/378\n\n## 0.5.0 (August 26th, 2021)\n\n### Added\n\n* Support SQLAlchemy 1.4 ([#299][#299])\n\n[#299]: https://github.com/encode/databases/pull/299\n\n### Fixed\n\n* Fix concurrent transactions ([#328][#328])\n\n[#328]: https://github.com/encode/databases/pull/328\n\n## 0.4.3 (March 26th, 2021)\n\n### Fixed\n\n* Pin SQLAlchemy to <1.4 ([#314][#314])\n\n[#314]: https://github.com/encode/databases/pull/314\n\n## 0.4.2 (March 14th, 2021)\n\n### Fixed\n\n* Fix memory leak with asyncpg for SQLAlchemy generic functions ([#273][#273])\n\n[#273]: https://github.com/encode/databases/pull/273\n\n## 0.4.1 (November 16th, 2020)\n\n### Fixed\n\n* Remove package dependency on the synchronous DB drivers ([#256][#256])\n\n[#256]: https://github.com/encode/databases/pull/256\n\n## 0.4.0 (October 20th, 2020)\n\n### Added\n\n* Use backend native fetch_val() implementation when available ([#132][#132])\n* Replace psycopg2-binary with psycopg2 ([#204][#204])\n* Speed up PostgresConnection fetch() and iterate() ([#193][#193])\n* Access asyncpg Record field by key on raw query ([#207][#207])\n* Allow setting min_size and max_size in postgres DSN ([#210][#210])\n* Add option pool_recycle in postgres DSN ([#233][#233])\n* Allow extra transaction options ([#242][#242])\n\n[#132]: https://github.com/encode/databases/pull/132\n[#204]: https://github.com/encode/databases/pull/204\n[#193]: https://github.com/encode/databases/pull/193\n[#207]: https://github.com/encode/databases/pull/207\n[#210]: https://github.com/encode/databases/pull/210\n[#233]: https://github.com/encode/databases/pull/233\n[#242]: https://github.com/encode/databases/pull/242\n\n### Fixed\n\n* Fix type hinting for sqlite backend ([#227][#227])\n* Fix SQLAlchemy DDL statements ([#226][#226])\n* Make fetch_val call fetch_one for type conversion ([#246][#246])\n* Unquote username and password in DatabaseURL ([#248][#248])\n\n[#227]: https://github.com/encode/databases/pull/227\n[#226]: https://github.com/encode/databases/pull/226\n[#246]: https://github.com/encode/databases/pull/246\n[#248]: https://github.com/encode/databases/pull/248\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.482421875,
          "content": "Copyright Â© 2019, [Encode OSS Ltd](https://www.encode.io/).\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.8330078125,
          "content": "# Databases\n\n<p>\n<a href=\"https://github.com/encode/databases/actions\">\n    <img src=\"https://github.com/encode/databases/workflows/Test%20Suite/badge.svg\" alt=\"Test Suite\">\n</a>\n<a href=\"https://pypi.org/project/databases/\">\n    <img src=\"https://badge.fury.io/py/databases.svg\" alt=\"Package version\">\n</a>\n</p>\n\nDatabases gives you simple asyncio support for a range of databases.\n\nIt allows you to make queries using the powerful [SQLAlchemy Core][sqlalchemy-core]\nexpression language, and provides support for PostgreSQL, MySQL, and SQLite.\n\nDatabases is suitable for integrating against any async Web framework, such as [Starlette][starlette],\n[Sanic][sanic], [Responder][responder], [Quart][quart], [aiohttp][aiohttp], [Tornado][tornado], or [FastAPI][fastapi].\n\n**Documentation**: [https://www.encode.io/databases/](https://www.encode.io/databases/)\n\n**Requirements**: Python 3.8+\n\n---\n\n## Installation\n\n```shell\n$ pip install databases\n```\n\nDatabase drivers supported are:\n\n* [asyncpg][asyncpg]\n* [aiopg][aiopg]\n* [aiomysql][aiomysql]\n* [asyncmy][asyncmy]\n* [aiosqlite][aiosqlite]\n\nYou can install the required database drivers with:\n\n```shell\n$ pip install databases[asyncpg]\n$ pip install databases[aiopg]\n$ pip install databases[aiomysql]\n$ pip install databases[asyncmy]\n$ pip install databases[aiosqlite]\n```\n\nNote that if you are using any synchronous SQLAlchemy functions such as `engine.create_all()` or [alembic][alembic] migrations then you still have to install a synchronous DB driver: [psycopg2][psycopg2] for PostgreSQL and [pymysql][pymysql] for MySQL.\n\n---\n\n## Quickstart\n\nFor this example we'll create a very simple SQLite database to run some\nqueries against.\n\n```shell\n$ pip install databases[aiosqlite]\n$ pip install ipython\n```\n\nWe can now run a simple example from the console.\n\nNote that we want to use `ipython` here, because it supports using `await`\nexpressions directly from the console.\n\n```python\n# Create a database instance, and connect to it.\nfrom databases import Database\ndatabase = Database('sqlite+aiosqlite:///example.db')\nawait database.connect()\n\n# Create a table.\nquery = \"\"\"CREATE TABLE HighScores (id INTEGER PRIMARY KEY, name VARCHAR(100), score INTEGER)\"\"\"\nawait database.execute(query=query)\n\n# Insert some data.\nquery = \"INSERT INTO HighScores(name, score) VALUES (:name, :score)\"\nvalues = [\n    {\"name\": \"Daisy\", \"score\": 92},\n    {\"name\": \"Neil\", \"score\": 87},\n    {\"name\": \"Carol\", \"score\": 43},\n]\nawait database.execute_many(query=query, values=values)\n\n# Run a database query.\nquery = \"SELECT * FROM HighScores\"\nrows = await database.fetch_all(query=query)\nprint('High Scores:', rows)\n```\n\nCheck out the documentation on [making database queries](https://www.encode.io/databases/database_queries/)\nfor examples of how to start using databases together with SQLAlchemy core expressions.\n\n\n<p align=\"center\">&mdash; â­ï¸ &mdash;</p>\n<p align=\"center\"><i>Databases is <a href=\"https://github.com/encode/databases/blob/master/LICENSE.md\">BSD licensed</a> code. Designed & built in Brighton, England.</i></p>\n\n[sqlalchemy-core]: https://docs.sqlalchemy.org/en/latest/core/\n[sqlalchemy-core-tutorial]: https://docs.sqlalchemy.org/en/latest/core/tutorial.html\n[alembic]: https://alembic.sqlalchemy.org/en/latest/\n[psycopg2]: https://www.psycopg.org/\n[pymysql]: https://github.com/PyMySQL/PyMySQL\n[asyncpg]: https://github.com/MagicStack/asyncpg\n[aiopg]: https://github.com/aio-libs/aiopg\n[aiomysql]: https://github.com/aio-libs/aiomysql\n[asyncmy]: https://github.com/long2ice/asyncmy\n[aiosqlite]: https://github.com/omnilib/aiosqlite\n\n[starlette]: https://github.com/encode/starlette\n[sanic]: https://github.com/huge-success/sanic\n[responder]: https://github.com/kennethreitz/responder\n[quart]: https://gitlab.com/pgjones/quart\n[aiohttp]: https://github.com/aio-libs/aiohttp\n[tornado]: https://github.com/tornadoweb/tornado\n[fastapi]: https://github.com/tiangolo/fastapi\n"
        },
        {
          "name": "databases",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.5205078125,
          "content": "site_name: Databases\nsite_description: Async database support for Python.\n\ntheme:\n    name: 'material'\n\nrepo_name: encode/databases\nrepo_url: https://github.com/encode/databases\n# edit_uri: \"\"\n\nnav:\n    - Introduction: 'index.md'\n    - Database Queries: 'database_queries.md'\n    - Connections & Transactions: 'connections_and_transactions.md'\n    - Tests & Migrations: 'tests_and_migrations.md'\n    - Contributing: 'contributing.md'\n\nmarkdown_extensions:\n  - mkautodoc\n  - admonition\n  - pymdownx.highlight\n  - pymdownx.superfences\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.4853515625,
          "content": "-e .\n\n# Async database drivers\nasyncmy==0.2.9\naiomysql==0.2.0\naiopg==1.4.0\naiosqlite==0.20.0\nasyncpg==0.29.0\n\n# Sync database drivers for standard tooling around setup/teardown/migrations.\npsycopg==3.1.18\npymysql==1.1.0\n\n# Testing\nautoflake==1.4\nblack==22.6.0\nhttpx==0.24.1\nisort==5.10.1\nmypy==0.971\npytest==7.1.2\npytest-cov==3.0.0\nstarlette==0.36.2\nrequests==2.31.0\n\n# Documentation\nmkdocs==1.3.1\nmkdocs-material==8.3.9\nmkautodoc==0.1.0\n\n# Packaging\ntwine==4.0.1\nwheel==0.38.1\nsetuptools==69.0.3\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.3349609375,
          "content": "[mypy]\ndisallow_untyped_defs = True\nignore_missing_imports = True\nno_implicit_optional = True\ndisallow_any_generics = false\ndisallow_untyped_decorators = true\nimplicit_reexport = true\ndisallow_incomplete_defs = true\nexclude = databases/backends\n\n[tool:isort]\nprofile = black\ncombine_as_imports = True\n\n[coverage:run]\nsource = databases, tests\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.15234375,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport re\n\nfrom setuptools import setup\n\n\ndef get_version(package):\n    \"\"\"\n    Return package version as listed in `__version__` in `init.py`.\n    \"\"\"\n    with open(os.path.join(package, \"__init__.py\")) as f:\n        return re.search(\"__version__ = ['\\\"]([^'\\\"]+)['\\\"]\", f.read()).group(1)\n\n\ndef get_long_description():\n    \"\"\"\n    Return the README.\n    \"\"\"\n    with open(\"README.md\", encoding=\"utf8\") as f:\n        return f.read()\n\n\ndef get_packages(package):\n    \"\"\"\n    Return root package and all sub-packages.\n    \"\"\"\n    return [\n        dirpath\n        for dirpath, dirnames, filenames in os.walk(package)\n        if os.path.exists(os.path.join(dirpath, \"__init__.py\"))\n    ]\n\n\nsetup(\n    name=\"databases\",\n    version=get_version(\"databases\"),\n    python_requires=\">=3.8\",\n    url=\"https://github.com/encode/databases\",\n    license=\"BSD\",\n    description=\"Async database support for Python.\",\n    long_description=get_long_description(),\n    long_description_content_type=\"text/markdown\",\n    author=\"Tom Christie\",\n    author_email=\"tom@tomchristie.com\",\n    packages=get_packages(\"databases\"),\n    package_data={\"databases\": [\"py.typed\"]},\n    install_requires=[\"sqlalchemy>=2.0.7\"],\n    extras_require={\n        \"postgresql\": [\"asyncpg\"],\n        \"asyncpg\": [\"asyncpg\"],\n        \"aiopg\": [\"aiopg\"],\n        \"mysql\": [\"aiomysql\"],\n        \"aiomysql\": [\"aiomysql\"],\n        \"asyncmy\": [\"asyncmy\"],\n        \"sqlite\": [\"aiosqlite\"],\n        \"aiosqlite\": [\"aiosqlite\"],\n    },\n    classifiers=[\n        \"Development Status :: 3 - Alpha\",\n        \"Environment :: Web Environment\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: BSD License\",\n        \"Operating System :: OS Independent\",\n        \"Topic :: Internet :: WWW/HTTP\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3 :: Only\",\n    ],\n    zip_safe=False,\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}