{
  "metadata": {
    "timestamp": 1736559609053,
    "page": 247,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OmkarPathak/pygorithm",
      "stars": 4399,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6884765625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.pyc\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n.idea/\n"
        },
        {
          "name": "CONTIRBUTORS.md",
          "type": "blob",
          "size": 1.0634765625,
          "content": "# Contributors:\n\n - Mohamed '[MohamedKiouaz](https://github.com/MohamedKiouaz)' Kiouaz\n - Ashutosh '[ashu01](https://github.com/ashu01)' Gupta\n - Allston '[AllstonMickey](https://github.com/AllstonMickey)' Mickey\n - Dmytro '[dmytrostriletskyi](https://github.com/dmytrostriletskyi)' Striletskyi\n - Emett '[the-kid89](https://github.com/the-kid89)' Speer\n - Viktor '[vhag](https://github.com/vhag)' Hagstrom\n - Dion '[kingdion](https://github.com/kingdion)' Misic\n - Chandan '[crowchirp](https://github.com/crowchirp)' Rai\n - Jae Hyeon '[skystar-p](https://github.com/skystar-p)' Park\n - [dstark85](https://github.com/dstark85)\n - Songzhuozhuo '[souo](https://github.com/souo)'\n - Emil '[Skeen](https://github.com/Skeen)' Madsen\n - Ian '[IanDoarn](https://github.com/IanDoarn)' Doarn\n - Timothy '[Tjstretchalot](https://github.com/Tjstretchalot)' Moore\n - Sharad '[sharadbhat](https://github.com/sharadbhat)' Bhat\n - Alexey '[aesee](https://github.com/aesee)' Sarapulov\n - Anthony '[MrDupin](https://github.com/MrDupin)' Marakis\n - Ashey '[asheywalke](https://github.com/ashaywalke)' Walke\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2017 Omkar Pathak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1953125,
          "content": "include LICENSE\ninclude MANIFEST.in\ninclude README.rst\ninclude requirements.txt\n\nrecursive-include pygorithm *\n\nrecursive-exclude * __pycache__\nrecursive-exclude * *.py[co]\nrecursive-exclude * *.orig\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.48046875,
          "content": "\nPygorithm\n=========\n\n\n.. image:: https://img.shields.io/packagist/l/doctrine/orm.svg\n   :target: https://github.com/OmkarPathak/pygorithm/blob/master/LICENSE\n   :alt: Packagist\n\n.. image:: http://pepy.tech/badge/pygorithm\n   :target: http://pepy.tech/project/pygorithm\n   :alt: Downloads\n\n.. image:: https://readthedocs.org/projects/pygorithm/badge/?version=latest\n   :target: http://pygorithm.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/Python-3.6-brightgreen.svg\n   :target: https://github.com/OmkarPathak/pygorithm\n   :alt: Python 3.6\n   \n.. image:: https://img.shields.io/badge/Say%20Thanks-%F0%9F%A6%89-1EAEDB.svg \n   :target: https://saythanks.io/to/omkarpathak27@gmail.com\n   :alt: Say Thanks!\n   \n.. image:: https://img.shields.io/github/contributors/omkarpathak/pygorithm.svg\n   :target: https://github.com/OmkarPathak/pygorithm/graphs/contributors\n   :alt: Contributors\n\n| A Python module to learn all the major algorithms on the go!\n| Purely for educational purposes\n\n\n.. image:: https://images.gitads.io/pygorithm\n   :target: https://tracking.gitads.io/?campaign=gitads&repo=pygorithm&redirect=gitads.io\n\nFeatures\n~~~~~~~~\n\n* Super easy to use\n* A very easy to understand `Documentation <http://pygorithm.readthedocs.io/en/latest/>`_\n* Get the code right in your editor\n* Get time complexities on the go\n\nInstallation\n~~~~~~~~~~~~\n\n* Just fire the following command in your terminal:\n\n::\n\n   pip3 install pygorithm\n\n- | It's that easy. If you are using Python 2.7 use pip instead. Depending on your\n  | permissions, you might need to use ``pip install --user pygorithm`` to install.\n\n* Or you can download the source code from `here <https://github.com/OmkarPathak/pygorithm>`_, and then just install the package using\n\n::\n\n    python setup.py install\n\n\nQuick Start Guide\n~~~~~~~~~~~~~~~~~\n\n* To sort your list\n\n.. code:: python\n\n    >>> from pygorithm.sorting import bubble_sort\n    >>> my_list = [12, 4, 3, 5, 13, 1, 17, 19, 15]\n    >>> sorted_list = bubble_sort.sort(my_list)\n    >>> print(sorted_list)\n    >>> [1, 3, 4, 5, 12, 13, 15, 17, 19]\n\n\n* To get the code for function used\n\n.. code:: python\n\n    >>> from pygorithm.sorting import bubble_sort\n    >>> code = bubble_sort.get_code()\n    >>> print(code)\n\n\n* To get the time complexity of an algorithm\n\n.. code:: python\n\n    >>> from pygorithm.sorting import bubble_sort\n    >>> time_complexity = bubble_sort.time_complexities()\n    >>> print(time_complexity)\n\n* To see all the available functions in a module, you can just type ``help()`` with the module name as argument. For example,\n\n.. code:: python\n\n    >>> from pygorithm import sorting\n    >>> help(sorting)\n        Help on package pygorithm.sorting in pygorithm:\n\n        NAME\n            pygorithm.sorting - Collection of sorting methods\n\n        PACKAGE CONTENTS\n            bubble_sort\n            bucket_sort\n            counting_sort\n            heap_sort\n            insertion_sort\n            merge_sort\n            modules\n            quick_sort\n            selection_sort\n            shell_sort\n\n    \nTests\n~~~~~\n\n* Just type in the following command to run the tests\n::\n\n    python3 -m unittest\n\n* This will run all the tests defined in the files of the ``tests/`` directory\n\n\nDonation\n~~~~~~~~\n\nIf you have found my softwares to be of any use to you, do consider helping me pay my internet bills. This would encourage me to create many such softwares :)\n\n- `PayPal <https://paypal.me/omkarpathak27>`_\n- `â‚¹ (INR) <https://www.instamojo.com/@omkarpathak/>`_\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 0.4052734375,
          "content": "# TODO\n\n### Tree\n\n- [x] Binary Tree\n- [x] Binary Search Tree\n- [ ] Inorder to Preorder\n- [ ] Count Leaf Nodes\n\n### Graph\n\n- [x] Graph implementation\n- [x] Detect cycle in Graph\n- [x] Topological Sort\n- [ ] Prim's Algorithm\n- [x] Kruskal's Algorithm\n\n### Dynamic Programming\n\n- [x] Fibonacci\n- [x] Longest Increasing Subsequence\n\n### Heap\n\n- [x] Heap  implementation\n- [x] Heap Sort\n\n## Backtracking\n\n- [ ] N-Queens\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pygorithm",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0498046875,
          "content": "[bdist_wheel]\nuniversal = 1\n\n[wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.4677734375,
          "content": "from setuptools import setup, find_packages\n# To use a consistent encoding\n# from codecs import open\nfrom os import path\n\nhere = path.abspath(path.dirname(__file__))\n\n# Get the long description from the README file\n# with open('README.rst') as f:\n#     long_description = f.read()\n\nsetup(\n    name='pygorithm',\n    version='1.0.4',\n    description='A Python algorithms module for learning',\n    long_description=open('README.rst').read(),\n    # The project's main homepage.\n    url='https://github.com/OmkarPathak/pygorithm',\n    # Author details\n    author='Omkar Pathak',\n    author_email='omkarpathak27@gmail.com',\n    # Choose your license\n    license='MIT',\n    # See https://pypi.python.org/pypi?%3Aaction=list_classifiers\n    classifiers=[\n        # Indicate who your project is intended for\n        'Intended Audience :: Developers',\n        'Topic :: Software Development :: Libraries',\n\n        # Pick your license as you wish (should match \"license\" above)\n        'License :: OSI Approved :: MIT License',\n\n        # Specify the Python versions you support here. In particular, ensure\n        # that you indicate whether you support Python 2, Python 3 or both.\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ],\n    packages=find_packages()\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}