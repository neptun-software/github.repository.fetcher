{
  "metadata": {
    "timestamp": 1736559460889,
    "page": 18,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gboeing/osmnx",
      "stars": 4963,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.37109375,
          "content": ".temp\n.pytest_cache\n*.vrt\n.DS_Store\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# UV\n#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#uv.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control\n.pdm.toml\n.pdm-python\n.pdm-build/\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n\n# PyPI configuration file\n.pypirc\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.4033203125,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n        args: [--maxkb=50]\n      - id: check-ast\n      - id: check-case-conflict\n      - id: check-executables-have-shebangs\n      - id: check-json\n      - id: check-merge-conflict\n        args: [--assume-in-merge]\n      - id: check-shebang-scripts-are-executable\n      - id: check-toml\n      - id: check-xml\n      - id: check-yaml\n      - id: detect-private-key\n      - id: end-of-file-fixer\n      - id: fix-byte-order-marker\n      - id: mixed-line-ending\n      - id: no-commit-to-branch\n        args: [--branch, main]\n      - id: trailing-whitespace\n\n  - repo: https://github.com/adrienverge/yamllint\n    rev: v1.35.1\n    hooks:\n      - id: yamllint\n        args:\n          - --strict\n          - >\n            -d={extends: default, rules: {\n            document-start: disable,\n            line-length: {max: 110},\n            quoted-strings: {quote-type: single, required: only-when-needed},\n            truthy: {check-keys: false}}}\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff\n        args: [--fix]\n      - id: ruff-format\n\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.14.1\n    hooks:\n      - id: mypy\n        additional_dependencies:\n          - matplotlib\n          - pandas-stubs\n          - pytest\n          - types-requests\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 28.984375,
          "content": "# Changelog\n\n## 2.0.1 (2025-01-01)\n\n- fix error message when elevation module's optional dependencies are missing (#1250)\n- update \"walk\" network_type to filter out ways whose sidewalks are mapped separately (#1254)\n\n## 2.0.0 (2024-11-24)\n\nRead the v2 [migration guide](https://github.com/gboeing/osmnx/issues/1123)\n\n- add type annotations to all public and private functions throughout package (#1107)\n- remove all functionality previously deprecated in v1 (#1113 #1122 #1135 #1148)\n- add Python 3.13 support (#1223)\n- drop Python 3.8 support (#1106)\n- bump minimum required numpy version to 1.22 for typing support (#1133 #1198)\n- bump minimum required versions of geopandas to 1.0 and pandas to 1.4 for union_all support (#1179 #1198)\n- replace gdal optional dependency with rio-vrt optional dependency (#1203)\n- improve docstrings throughout package (#1116)\n- improve logging and warnings throughout package (#1125)\n- improve error messages throughout package (#1131)\n- improve internal file handling context management (#1226 #1227)\n- refactor features module for speed improvement and memory efficiency (#1157 #1205)\n- refactor save_graph_xml function and \\_osm_xml module for speed improvement and bug fixes (#1135)\n- make save_graph_xml function accept only an unsimplified MultiDiGraph as its input data (#1135)\n- replace save_graph_xml function's edge_tag_aggs tuple parameter with way_tag_aggs dict parameter (#1135)\n- add utils_geo.buffer_geometry helper function (#1214)\n- add OSM junction and railway tags to the default settings.useful_tags_node (#1144)\n- add node_attrs_include argument to simplification.simplify_graph function to flexibly relax strictness (#1145)\n- add edge_attr_aggs argument to simplify_graph function to specify aggregation behavior (#1155)\n- add node_attr_aggs argument to the consolidate_intersections function to specify aggregation behavior (#1155)\n- allow per-node tolerance values for intersection consolidation (#1160)\n- make consolidate_intersections function retain unique attribute values when consolidating nodes (#1144)\n- make which_result function parameters consistently able to accept a list throughout package (#1113)\n- handle implicit maxspeed values in add_edge_speeds function (#1153)\n- change add_node_elevations_google default batch_size to 512 to match Google's limit (#1115)\n- better virtual raster handling in elevation module (#1236)\n- use system's default start method when multiprocessing (#1237)\n- allow analysis of MultiDiGraph directional edge bearings and orientation (#1139)\n- allow graph union queries through the custom_filter argument (#1204)\n- fix graph projection creating useless lat and lon node attributes (#1144)\n- fix bug in \\_downloader.\\_save_to_cache function usage (#1107)\n- fix bug in handling requests ConnectionError when querying Overpass status endpoint (#1113)\n- fix minor bugs throughout to address inconsistencies revealed by type enforcement (#1107 #1114)\n- make optional function parameters keyword-only throughout package (#1134)\n- make dist function parameters required rather than optional throughout package (#1134)\n- make utils_geo.bbox_from_point function return a tuple of floats for consistency with rest of package (#1113)\n- make bounding box coordinate order consistently left, bottom, right, top (#1196)\n- rename truncate.truncate_graph_dist max_dist argument to dist for consistency with rest of package (#1134)\n- remove retain_all argument from all truncate module functions (#1148)\n- remove settings module's deprecated and now replaced settings (#1129 #1136)\n- rename osm_xml module to \\_osm_xml to make it private, as all its functions are private (#1113)\n- rename private \\_downloader module to \\_http (#1114)\n- remove unnecessary private \\_api module (#1114)\n\n## 1.9.4 (2024-07-24)\n\n- pin maximum dependency versions for remaining v1 releases\n- add warning to note that the order of bounding box coordinates will change in v2\n\n## 1.9.3 (2024-05-01)\n\n- update the official package reference paper (#1169)\n- rename network_types \"all\" -> \"all_public\" and \"all_private\" -> \"all\" for clarity (#1164)\n- deprecate the obsolete \"all_private\" network_type name (#1164)\n\n## 1.9.2 (2024-04-02)\n\n- deprecate and replace settings module's default_accept_language, default_referer, and default_user_agent settings (#1138)\n- deprecate and replace settings module's memory, nominatim_endpoint, overpass_endpoint, and timeout settings (#1138)\n- deprecate save_graph_xml function's renamed or obsolete parameters (#1138)\n- deprecate graph_from_xml tags and polygon function parameters (#1146)\n- deprecate simplify_graph function's endpoint_attrs argument and replace it with edge_attrs_differ (#1146)\n- deprecate utils_graph.get_digraph function and replace it with covert.to_digraph function (#1146)\n- deprecate utils_graph.get_undirected function and replace it with covert.to_undirected function (#1146)\n- deprecate utils_graph.graph_to_gdfs function and replace it with covert.graph_to_gdfs function (#1146)\n- deprecate utils_graph.graph_from_gdfs function and replace it with covert.graph_from_gdfs function (#1146)\n- deprecate utils_graph.remove_isolated_nodes function (#1156)\n- deprecate utils_graph.get_largest_component function and replace it with truncate.largest_component function (#1146)\n- deprecate utils_graph.route_to_gdf function and replace it with routing.route_to_gdf function (#1146)\n- deprecate speed module and move all of its functionality to the routing module (#1146)\n\n## 1.9.1 (2024-02-01)\n\n- fix deprecation warning in simplification.simplify_graph function (#1126)\n\n## 1.9.0 (2024-01-31)\n\n- add endpoint_attrs argument to simplification.simplify_graph function to flexibly relax strictness (#1117)\n- fix a bug in the features module's polygon handling (#1104)\n- update obsolete numpy random number generation (#1108)\n- make deprecation warnings FutureWarnings (#1124)\n- update warning messages to note that deprecated code will be removed in v2.0.0 (#1111)\n- deprecate strict argument in simplification.simplify_graph function in favor of new endpoint_attrs argument (#1117)\n- deprecate north, south, east, west arguments throughout package in favor of bbox tuple argument (#1112)\n- deprecate return_coords argument in graph.graph_from_address function (#1105)\n- deprecate return_hex argument in plot.get_colors function (#1109)\n- deprecate address, point, network_type, edge_color, and smooth_joints arguments in plot.plot_figure_ground function (#1121)\n\n## 1.8.1 (2023-12-31)\n\n- fix a bug arising from the save_graph_xml function (#1093)\n- warn user if their query area is significantly larger than max query area size (#1101)\n- refactor utils_geo module and deprecate quadrat_width and min_num function arguments (#1100)\n- under-the-hood code clean-up (#1092 #1099 #1103)\n\n## 1.8.0 (2023-11-30)\n\n- formally support Python 3.12 (#1082)\n- fix Windows-specific character encoding issue when reading XML files (#1084)\n- resolve pandas and gdal future warnings (#1089)\n- use spawn instead of fork for multiprocessing to resolve Python 3.12 deprecation warning (#1089)\n- rename add_node_elevations_google function's max_locations_per_batch parameter, with deprecation warning (#1088)\n- move add_node_elevations_google function's url_template parameter to settings module, with deprecation warning (#1088)\n\n## 1.7.1 (2023-10-29)\n\n- fix references to latitude and longitude parameters as lat and lon consistently across package (#1068 #1069)\n- fix handling of dict and set attribute types when reloading GraphML files (#1075 #1077)\n\n## 1.7.0 (2023-10-11)\n\n- improve automatic UTM handling in the projection module (#1059)\n- add a to_latlong parameter to the projection.project_graph function for API consistency (#1057)\n- workaround for pytest issue with printing to terminal window on Windows (#1064)\n- refactor the distance module and add a new routing module (#1063)\n- move shortest_path and k_shortest_paths functions to new routing module, with deprecation warning (#1063)\n- rename great_circle_vec and euclidean_dist_vec functions to great_circle and euclidean, with deprecation warning (#1063)\n- under-the-hood code clean-up (#1047)\n\n## 1.6.0 (2023-07-28)\n\n- fix DNS resolution in Dask clusters (#1039)\n- improve memory efficiency during features GeoDataFrame creation (#1043)\n- handle the settings.cache_only_mode option in the features module (#1043)\n- deprecate the buffer_dist and clean_periphery function parameters throughout package (#1044)\n- add more descriptive exceptions: ResponseStatusCodeError and GraphSimplificationError (#1041)\n- replace CacheOnlyModeInterrupt exception with CacheOnlyInterruptError exception (#1041)\n- replace EmptyOverpassResponse exception with InsufficientResponseError exception (#1041)\n- refactor elevation module (#1042 #1043)\n- refactor the \\_downloader module and add new \\_overpass and \\_nominatim modules (#1043)\n- under-the-hood code clean-up (#1036 #1037 #1038)\n\n## 1.5.1 (2023-07-08)\n\n- improve memory efficiency during graph creation (#1021 #1029)\n- improve log messaging (#1032)\n- add version number to XML generator attribute in save_graph_xml (#1031)\n- warn user if loading a .osm XML file generated by OSMnx itself (#1031)\n- add style keyword argument to citation function (#1034)\n\n## 1.5.0 (2023-06-28)\n\n- fix bug in save_graph_xml due to roundabout ways (#986 #999)\n- fix GeoPandas future warning (#1012)\n- make API key properly optional in elevation.add_node_elevations_google function (#999)\n- rename geometries module as features module and deprecate geometries module (#1007 #1011)\n- remove private \\_polygon_features module and move its data to features module (#994)\n- make the internal downloader module private (#1010)\n- deprecate interpolate parameter in distance.nearest_edges function (#1010)\n- move save_graph_xml function to io module with deprecation warning in osm_xml module (#1017)\n- migrate from setup.py, setup.cfg, and requirements.txt to pyproject.toml (#1002)\n- pin optional dependencies to minimum required versions (#995)\n- expand and reorganize the documentation (#993)\n\n## 1.4.0 (2023-06-11)\n\n- verify edge weight attribute values before solving shortest paths (#967)\n- provide consistent error when no data elements are returned from Overpass (#960)\n- add route_to_gdf function to utils_graph module to return a GeoDataFrame of the edges in a path (#957)\n- deprecate the get_route_edge_attributes function in favor of the new route_to_gdf function (#957)\n- deprecate folium module in favor of using geopandas.GeoDataFrame.explore directly (#957)\n- deprecate precision parameter in bearing, distance, elevation, and speed modules' functions (#981)\n- deprecate utils_geo.round_geometry_coords function (#981)\n- move plot_orientation function from bearing module to plot module (#956)\n- make matplotlib an optional dependency required only for the plot module (#976)\n- drop pyproj package dependency (#980)\n\n## 1.3.1.post0 (2023-05-26)\n\n- restore Python 3.8 compatibility (#965)\n\n## 1.3.1 (2023-05-24)\n\n- improve DNS resolution when using proxies or on networks blocking DNS-over-HTTPS (#924 #953)\n- improve processing of per-lane values when adding edge speeds (#944 #955)\n- improve file writing in save_graph_xml function (#917 #961)\n- ensure node coordinates are non-null and convertible to float in the add_edge_lengths function (#950)\n- ignore ways tagged highway=no or highway=razed in built-in filters (#938)\n- do not assume an edge with key=0 exists between each node pair when simplifying graph (#921)\n- drop dateutil package dependency (#919)\n\n## 1.3.0 (2023-01-01)\n\n- fully support Shapely 2.0 and drop support for Shapely 1.x (#900)\n- drop RTree package dependency (#900)\n- much faster nearest edges search using STRTree index (#900)\n- allow using alternative Google Maps compatible elevation APIs, such as Open Topo Data (#901 #903)\n- optionally track merged_edges as a new edge attribute in simplify_graph function (#892 #909)\n\n## 1.2.3 (2022-12-14)\n\n- fix bug that added unsimplified edge geometry attributes when projecting\n- hard code Google DNS IP address\n- resolve matplotlib deprecation warning\n- deprecate save_graph_shapefile function\n\n## 1.2.2 (2022-08-05)\n\n- fix compatibility with rasterio 1.3\n- fix API version when saving OSM XML\n- resolve shapely deprecation warning\n\n## 1.2.1 (2022-06-16)\n\n- fix rate limit checking and pausing on newest versions of Overpass API\n- allow add_edge_lengths function to be run on a subset of edges\n- resolve pandas deprecation warning\n\n## 1.2.0 (2022-05-23)\n\n- add ability to load GraphML string data to the load_graphml function\n- add \"reversed\" edge attribute to support node-order-dependent edge attributes\n- add new edge_color and edge_linewidth arguments to plot_footprints function\n- fix nearest_edges function selecting arbitrary edge when bounding boxes overlap\n- fix get_digraph function's parallel edge handling\n- fix pandas and geopandas version compatibility\n- fix log output appearing in Jupyter notebooks on Unix-like systems\n- remove old functions and arguments previously deprecated in v1.1\n- deprecate utils.config function in favor of using settings module directly\n\n## 1.1.2 (2021-11-17)\n\n- fix geocoding when no geojson is returned\n- fix graph simplification to properly handle travel_time edge attributes\n- fix streets per node not being calculated when clean_periphery=False\n- allow user-defined aggregation function when imputing missing edge speeds\n- allow user to configure requests package keyword arguments when connecting to APIs\n- faster graph projection by calculating UTM zone number with a computationally cheaper method\n- improve efficiency of quadrat-based geometry cutting\n- fall back on google dns resolution when necessary if using a proxy\n- move count_streets_per_node function to stats module\n- resolve shapely and geopandas deprecation warnings\n\n## 1.1.1 (2021-05-19)\n\n- fix overpass status endpoint checks with explicit IP address resolution\n- fix slot management on local overpass instances by optionally disabling rate limiting\n- parallelize shortest_path calculation for multiple origins/destinations\n\n## 1.1.0 (2021-05-01)\n\n- add graph-constrained spatial sampling function\n- add add_node_elevations_raster function to add node elevations from local raster file(s)\n- add add_node_elevations_google function and deprecate old add_node_elevations function\n- add faster streamlined nearest_nodes and nearest_edges functions to distance module\n- deprecate old get_nearest_node, get_nearest_nodes, get_nearest_edge, and get_nearest_edges\n- add utils_geo.interpolate_points function and deprecate redistribute_vertices in favor of it\n- add vectorized calculate_bearing function and deprecate get_bearing in favor of it\n- expose individual street network stats functions in stats module\n- deprecate the extended_stats function in stats module\n- add network orientation and entropy stats functions to bearing module\n- add plot_orientation function to bearing module to polar histograms of graph edge bearings\n- add route_linewidths parameter to plot_graph_routes function\n- handle relations of type \"boundary\" in geometries module\n- multi-index GeoDataFrames returned from geometries module by element type and osmid\n- ensure all nodes have integer IDs after graph intersection consolidation\n- vectorize add_edge_lengths, add_edge_grades, and add_edge_bearings functions\n- improve save_graph_xml speed\n- improve geocoder module error messages\n- improve handling of node geometry when converting graph to/from GeoDataFrames\n- fix network_type filters allowing ways tagged \"bus_guideway\"\n- fix handling of boolean type conversion in load_graphml\n- fix truncate_graph_dist retaining unreachable nodes\n- fix bug in consolidate_intersections when pygeos is installed\n- move add_edge_lengths function from utils_graph to distance module\n- remove descartes dependency in line with geopandas\n\n## 1.0.1 (2021-01-13)\n\n- fix network_type filters allowing ways tagged \"planned\"\n- fix \"drive\" network_type allowing some alleys\n- fix intersection consolidation for compatibility with v1.0 node ids/indexing\n- fix python 3.6 compatibility\n- deprecate folium polyline styling arguments\n\n## 1.0.0 (2021-01-01)\n\n- set use_cache=True by default\n- add ability to query a place by OSM ID in geocoder.geocode_to_gdf function\n- add optional setting for download/cache-only mode\n- replace md5 with sha1 for cache filename hashing\n- replace streets_per_node graph attribute with equivalent street_count node attribute\n- remove redundant osmid node attribute\n- make graph_to_gdfs multi-index the edges GeoDataFrame by u, v, key\n- refactor consolidate_intersections function for better speed and efficiency\n- refactor count_streets_per_node function for better speed and efficiency\n- refactor folium module for better speed and efficiency\n- refactor get_undirected functionality for better speed and efficiency\n- extract all private/internal .osm XML functionality into new osm_xml module\n- deprecate io.save_graph_xml with warning (function moved to osm_xml module)\n- remove internal \\_is_simplified function\n- remove deprecated pois module\n- remove deprecated footprints module\n- remove deprecated utils_graph.induce_subgraph function\n- remove deprecated node_type parameter from io.load_graphml function\n\n## 0.16.2 (2020-11-17)\n\n- improve graph_from_gdfs speed and efficiency\n- improve plot_route_folium speed and efficiency\n- fix remove_isolated_nodes function mutating the passed-in graph\n- fix gephi compatibility in save_graphml\n- add customizable node/edge attribute data type arguments to load_graphml\n- deprecate old node_type argument in load_graphml\n- expose bidirectional_network_types via config function\n\n## 0.16.1 (2020-10-05)\n\n- fix handling graphs with no intersections in consolidate_intersections\n- fix consolidate_intersections returning GeoSeries without CRS attribute\n- fix response caching to save only when status code is 200\n- fix elevation module's grade absolute value calculation when grade is null\n- move shortest path functions from utils_graph module to distance module\n\n## 0.16.0 (2020-09-07)\n\n- new geometries module for creating GeoDataFrames from tag/value queries\n- deprecate old pois and footprints modules (replaced by geometries module)\n- auto-select first Polygon/MultiPolygon when geocoding with which_result=None\n- new k*shortest_paths function to solve \\_k* shortest paths from origin to destination\n- new shortest_path convenience function\n- new get_digraph function to correctly convert MultiDiGraph to DiGraph\n- miscellaneous performance improvements and optimizations\n- deprecate induce_subgraph function\n- remove deprecated boundaries module (replaced by geocoder module in v0.15.0)\n- remove deprecated utils_geo.geocode function (replaced by geocoder.geocode function in v0.15.0)\n\n## 0.15.1 (2020-07-03)\n\n- fix geopandas future warnings\n\n## 0.15.0 (2020-06-30)\n\n- improve plotting defaults and streamline plot module speed and efficiency\n- improve color handling in plot module\n- improve route plotting\n- plot_graph_routes function now accepts multiple route colors\n- allow multiple elevation API providers\n- consolidate_intersections replaces update_edge_lengths param with reconnect_edges param\n- fix geopackage file saving after consolidating intersections\n- add new geocoder module and move utils_geo.geocode function into it\n- replace gdf_from_place/s functions with geocoder.geocode_to_gdf\n- deprecate boundaries module\n- remove deprecated timeout, memory, custom_settings, and max_query_area_size function params\n- remove deprecated plotting params and plot_shape function\n\n## 0.14.1 (2020-06-09)\n\n- fix simplification of graphs with long rural roads\n- reduce memory footprint of graph simplification\n- remove disconnected self-contained rings from graph by default when simplifying\n- improve speed and efficiency of project_graph, graph_to_gdfs, and graph_from_gdfs\n- improve attribute value conversion in load_graphml\n- expose precision parameter for adding bearings, elevations, speeds, and travel times\n- fix config function clobber behavior\n- fix graph periphery cleaning when clean_periphery=True but simplify=False\n- rename settings useful_tags_path to the more appropriate useful_tags_way\n- deprecate the timeout, memory, custom_settings, and max_query_area_size function params\n- the params above are now accessible via config function and settings module\n- deprecate old plot params and plot_shape function\n- remove previously deprecated infrastructure parameter in favor of custom_filter\n\n## 0.14.0 (2020-06-03)\n\n- better geometry subdividing for huge OSM queries\n- better handling of maxspeed list values for simplified graphs\n- downloader only retrieves url response from cache if no server remark\n- deprecate graph creation infrastructure parameter in favor of flexible custom_filter\n- remove deprecated functions: graph_from_file, clean_intersections, gdfs_to_graph\n\n## 0.13.0 (2020-05-25)\n\n- major refactor of entire package\n- clean up API and namespace\n- new consolidate_intersections function with topological option\n- new speed module to calculate graph edge speeds and travel times\n- generalize POIs module to query with a flexible tags dict\n- allow folium functions to accept FeatureGroup and kwargs\n- all graph saving functions now take a filepath argument instead of folder/filename\n- save shapefiles in single folder containing both nodes and edges\n- optionally return distance and/or geometry in nearest edge search\n- expose timeout and memory parameters in pois and footprints modules\n- define default crs via epsg code instead of proj4 string\n- update and simplify logging with timestamps\n- graph metadata: add creation date and version, remove name\n- replace inconsistent distance parameters with consistent dist parameters\n- deprecate old clean_intersections function in favor of new consolidate_intersections\n- deprecate old gdfs_to_graph function in favor of graph_from_gdfs\n- deprecate old graph_from_file function in favor of graph_from_xml\n- rename save_as_osm function -> save_graph_xml for consistency\n- rename save_load module -> io\n- remove old save_gdf_shapefile function\n- drop support for python 3.5 and lower\n\n## 0.12.1 (2020-05-01)\n\n- fix handling relations with missing type tag\n- fix save_graph_geopackage handling numeric attributes\n- fix load_graphml handling elevation and grade attributes\n- improve edge finding algorithms to return edge key\n- more informative graph_from_file data load error message\n- refactor url-in-cache checking\n- add timestamp helper function\n- documentation improvements\n\n## 0.12 (2020-04-10)\n\n- add ability to save graph as geopackage file\n- add truncate_by_edge implementation in truncate_graph_polygon\n- allow flexible overpass settings (e.g., to query by date)\n- better handling of invalid footprint geometries\n- geocode function now uses nominatim_request function\n- improve .osm xml output\n- improve one-way street handling\n- fix graph projection overwriting original lat/lng\n- fix redistribute_vertices function for MultiLineStrings\n\n## 0.11.4 (2020-01-31)\n\n- fix .osm xml output\n- fix for pandas 1.0\n\n## 0.11.3 (2020-01-09)\n\n- fix errant print statement\n\n## 0.11.2 (2020-01-07)\n\n- fix .osm xml output\n- fix geopandas future compatibility\n\n## 0.11.1 (2020-01-01)\n\n- fix get_nearest_edges search when not using a spatial index\n\n## 0.11 (2019-12-04)\n\n- drop formal python 2 support\n- refactor all modules for cleaner package organization\n- make stats betweenness centrality compatible with networkx>=2.4\n- allow configurable overpass and nominatim endpoints\n- allow gdf_from_places to take a which_result list argument\n- handle zero-division in street grade calculation\n- better footprint relation handling\n- improve network type queries for better filtering\n- fix pois_from_polygon returning points outside polygon\n\n## 0.10 (2019-05-08)\n\n- remove deprecated buildings module\n- filter steps ways out of bike queries\n- convert CRS-handling to proj4 strings\n- save graph to xml-formatted .osm file\n- minor refactoring\n\n## 0.9 (2019-01-28)\n\n- deprecate buildings module and replace with generalized footprints module\n- improve handling of multipolygon footprints\n- new function to find nearest edge(s), given coordinates\n- add \"search,\" \"reverse,\" and \"lookup\" nominatim queries\n- use unprojected graphs for figure-ground plotting functions\n- allow non-integer osmid values for custom data\n- improve get_route_edge_attributes function\n- improve color mapping by node/edge attribute value\n- make bidirectional network types explicit\n- networkx compatibility fixes to resolve warnings\n\n## 0.8.2 (2018-09-19)\n\n- add python 3.7 compatibility\n- add convenience function to plot several routes over the same map\n- optimize graph truncation to bounding box\n- give self-loops a null bearing when calculating edge bearings\n- make accept-language http header explicit and configurable\n- add citation function\n- refactor POI module\n\n## 0.8.1 (2018-05-17)\n\n- add Gephi compatibility argument for saving GraphML\n- handle square bracket encapsulated strings when loading GraphML\n\n## 0.8 (2018-05-05)\n\n- add ability to retrieve points of interest\n- improve performance for retrieving huge geographies' street networks\n- fix building footprint retrieval query syntax\n- minor bug fixes\n\n## 0.7.4 (2018-04-05)\n\n- add fast nearest-nodes search\n- allow custom network query filters\n- allow create_graph to return graph with no edges\n- improve figure_ground joint smoothing\n- fix handling of parallel edges when making multidigraph undirected\n- generalize same-geometry checker\n- improve detection of prior topology simplification\n- custom error types for finer-grained handling\n\n## 0.7.3 (2018-03-12)\n\n- turn off x- and y-axes to improve plotting appearance\n- make floating-point precision and rounding more sensible\n- improve OS path handling cross-platform\n- replace great-circle distance calculator with haversine\n- add access filter as configurable setting\n- improve performance of inducing subgraphs\n- fix utils.get_largest_component for networkx 2.2 compatibility\n- fix config settings namespacing\n\n## 0.7.2 (2018-02-15)\n\n- compatibility with networkx 2.1\n\n## 0.7.1 (2018-02-04)\n\n- fix documentation build\n- ignore ways marked access=no\n\n## 0.7 (2018-02-01)\n\n- ability to load a graph from a .osm file\n- change datum from NAD83 to WGS84\n- make roundabouts one-way\n- conformal plotting for unprojected graphs\n- fix folium web maps rendering\n\n## 0.6 (2017-10-02)\n\n- migrate to the networkx 2.0 API\n\n## 0.5.4 (2017-09-16)\n\n- add optional cleaned intersections count to basic stats\n- allow circuity to be calculated for projected or unprojected networks\n- various code clean-up and refactoring\n\n## 0.5.3 (2017-07-22)\n\n- add requirements files to distribution\n\n## 0.5.2 (2017-07-22)\n\n- add ability to download other infrastructures besides just roads/paths (e.g., rail lines, power lines, etc.)\n- calculate graph edges' bearings\n- add ability to get nearest node by great circle or euclidean distance\n- move examples/demo notebooks to new repo: osmnx-examples\n- fix docstrings\n- fix building footprint downloads that require multiple calls for large areas\n- fix missing MultiPolygon import in buildings module\n\n## 0.5.1 (2017-05-12)\n\n- functionality to clean-up and consolidate complex intersections\n- let save_gdf_shapefile save building footprint GeoDataFrames\n- set node color correctly in figure-ground diagrams\n\n## 0.5 (2017-04-25)\n\n- add elevation module to get node elevations and street grades\n- new color sequence creation and conversion functions in plot module\n- new function to get a path's edge attribute values\n- gracefully handle subpolygons that are invalid or have zero area\n- make truncate_graph_polygon work on projected graphs\n- plot_shape accepts a color or a list of colors\n- make all requests to Overpass API set custom user-agent and referer\n- rewrite algorithms to convert multidigraphs to multigraphs\n\n## 0.4.1 (2017-04-01)\n\n- fix load_graphml so we can save a graph again after loading it\n- fix load_graphml so edge oneway attribute is not always set to True\n- buildings module gets buildings stored in OSM as relations as well as ways\n- fix figure-ground diagram saving to make perfect square and smooth joints\n- add optional graph argument to plot_figure_ground\n- suppress jupyter notebook deprecation warnings\n\n## 0.4 (2017-03-01)\n\n- plot entire networks with folium\n- plot routes on top of networks with folium\n- vectorize all great circle calculations\n- new geocode function in utils\n- remove geopy dependency\n- refactor modules\n- simplify before truncating by distance when getting graph by point and network distance\n- project geometries, GeoDataFrames, and graphs to a passed-in CRS\n\n## 0.3.1 (2017-02-15)\n\n- clean up docstrings throughout\n- remove network code vestiges from buildings.py\n\n## 0.3 (2017-01-29)\n\n- add route plotting with folium\n- add downloading and visualization of building footprints\n- updates for compatibility with matplotlib 2.0\n\n## 0.2.2 (2017-01-20)\n\n- fixes for compatibility with networkx 2.0's new API\n- make png default image save format\n- figure-ground plots collect street network from a wider area\n\n## 0.2.1 (2017-01-11)\n\n- add license file to dist package\n\n## 0.2 (2017-01-10)\n\n- refactor modules\n- add graph to GDF and GDF to graph functions\n- add encoding argument to save_graph_shapefile\n- add unit tests and continuous integration\n\n## 0.1 (2016-12-19)\n\n- add street width attribute for ways from OSM\n\n## 0.1b2 (2016-11-29)\n\n- make simplification error messages explicit\n\n## 0.1b1 (2016-11-28)\n\n- process land use and area tags from OSM\n- make intersection error messages clear\n\n## 0.1a1 (2016-11-07)\n\n- first pre-release\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.8056640625,
          "content": "cff-version: 1.2.0\nmessage: \"If you use OSMnx, please cite the preferred-citation below.\"\ntitle: \"OSMnx\"\nabstract: \"OSMnx is a Python package to easily download, model, analyze, and visualize street networks and other geospatial features from OpenStreetMap.\"\nauthors:\n- family-names: \"Boeing\"\n  given-names: \"Geoff\"\n  orcid: \"https://orcid.org/0000-0003-1851-6411\"\n  website: \"https://geoffboeing.com\"\nurl: \"https://osmnx.readthedocs.org\"\nrepository-code: \"https://github.com/gboeing/osmnx\"\npreferred-citation:\n  type: report\n  title: \"Modeling and Analyzing Urban Networks and Amenities with OSMnx\"\n  authors:\n  - family-names: \"Boeing\"\n    given-names: \"Geoff\"\n    orcid: \"https://orcid.org/0000-0003-1851-6411\"\n    website: \"https://geoffboeing.com\"\n  year: 2024\n  url: \"https://geoffboeing.com/publications/osmnx-paper/\"\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.4453125,
          "content": "# Contributing guidelines\n\nThanks for using OSMnx and for considering contributing to it by opening an issue or pull request. Every piece of software is a work in progress. This project is the result of many hours of work contributed freely its contributors and the many people that build the projects on which it depends. Thank you for contributing!\n\n## If you have a \"how-to\" or usage question\n\nPlease ask your question on [StackOverflow](https://stackoverflow.com/search?q=osmnx), as we reserve the issue tracker for bug reports and new feature development. Any such questions asked in the issue tracker will be automatically closed.\n\n## If you have an installation problem\n\nEnsure you have followed the installation instructions in the [documentation](https://osmnx.readthedocs.io/). If you installed OSMnx via conda-forge, please open an issue at its [feedstock](https://github.com/conda-forge/osmnx-feedstock/issues).\n\n## If you found a bug\n\n- Read the error message, then review the [documentation](https://osmnx.readthedocs.io/) and OSMnx [Examples Gallery](https://github.com/gboeing/osmnx-examples), which cover key concepts, installation, and package usage.\n- Search through the open and closed [issues](https://github.com/gboeing/osmnx/issues) to see if the problem has already been reported.\n- If the problem is with a dependency of OSMnx, open an issue in that dependency's repo.\n- If the problem is with OSMnx itself and you can fix it simply, please open a pull request.\n- If the problem persists, please open an issue in the [issue tracker](https://github.com/gboeing/osmnx/issues), and _provide all the information requested in the template_, including a minimal working example so others can independently and completely reproduce the bug.\n\n## If you have a feature proposal\n\n- Post your proposal on the [issue tracker](https://github.com/gboeing/osmnx/issues), and _provide all the information requested in the template_, so we can review it together (some proposals may not be a good fit for the project).\n- Fork the repo, make your change, update the [changelog](./CHANGELOG.md), run the [tests](./tests), and submit a pull request.\n- Adhere to the project's code and docstring standards by running its [pre-commit](.pre-commit-config.yaml) hooks.\n- Respond to code review.\n\nThe OSMnx project follows three principles when adding new functionality: 1) it is useful for a broad set of users, 2) it generalizes well, and 3) it is not trivially easy for users to implement themselves.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0830078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016-2025 Geoff Boeing https://geoffboeing.com/\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.681640625,
          "content": "# OSMnx\n\n[![PyPI Version](https://badge.fury.io/py/osmnx.svg)](https://pypi.org/project/osmnx/)\n[![PyPI Downloads](https://static.pepy.tech/personalized-badge/osmnx?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=downloads)](https://pepy.tech/project/osmnx)\n[![Anaconda Downloads](https://anaconda.org/conda-forge/osmnx/badges/downloads.svg)](https://anaconda.org/conda-forge/osmnx)\n[![Documentation Status](https://readthedocs.org/projects/osmnx/badge/?version=latest)](https://osmnx.readthedocs.io/)\n[![Build Status](https://github.com/gboeing/osmnx/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/gboeing/osmnx/actions/workflows/ci.yml)\n[![Coverage Status](https://codecov.io/gh/gboeing/osmnx/branch/main/graph/badge.svg)](https://codecov.io/gh/gboeing/osmnx)\n\n**OSMnx** is a Python package to easily download, model, analyze, and visualize street networks and other geospatial features from OpenStreetMap. You can download and model walking, driving, or biking networks with a single line of code then analyze and visualize them. You can just as easily work with urban amenities/points of interest, building footprints, transit stops, elevation data, street orientations, speed/travel time, and routing.\n\nOSMnx 2.0 is released: read the [migration guide](https://github.com/gboeing/osmnx/issues/1123).\n\n## Citation\n\nIf you use OSMnx in your work, please cite the paper:\n\nBoeing, G. (2024). Modeling and Analyzing Urban Networks and Amenities with OSMnx. Working paper. <https://geoffboeing.com/publications/osmnx-paper/>\n\n## Getting Started\n\nFirst read the [Getting Started](https://osmnx.readthedocs.io/en/stable/getting-started.html) guide for an introduction to the package and FAQ.\n\nThen work through the [Examples Gallery](https://github.com/gboeing/osmnx-examples) for step-by-step tutorials and sample code.\n\n## Installation\n\nFollow the [Installation](https://osmnx.readthedocs.io/en/stable/installation.html) guide to install OSMnx.\n\n## Support\n\nIf you have any trouble, consult the [User Reference](https://osmnx.readthedocs.io/en/stable/user-reference.html). The OSMnx repository is hosted on [GitHub](https://github.com/gboeing/osmnx). If you have a \"how-to\" or usage question, please ask it on [StackOverflow](https://stackoverflow.com/search?q=osmnx), as we reserve the repository's issue tracker for bug tracking and feature development.\n\n## License\n\nOSMnx is open source and licensed under the MIT license. OpenStreetMap's open data [license](https://www.openstreetmap.org/copyright/) requires that derivative works provide proper attribution. Refer to the [Getting Started](https://osmnx.readthedocs.io/en/stable/getting-started.html) guide for usage limitations.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "environments",
          "type": "tree",
          "content": null
        },
        {
          "name": "osmnx",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.6103515625,
          "content": "[build-system]\nbuild-backend = \"hatchling.build\"\nrequires = [\"hatchling\"]\n\n[project]\nauthors = [{ name = \"Geoff Boeing\", email = \"boeing@usc.edu\" }]\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Intended Audience :: Developers\",\n  \"Intended Audience :: Science/Research\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Operating System :: OS Independent\",\n  \"Programming Language :: Python\",\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3 :: Only\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Programming Language :: Python :: 3.13\",\n  \"Topic :: Scientific/Engineering :: GIS\",\n  \"Topic :: Scientific/Engineering :: Information Analysis\",\n  \"Topic :: Scientific/Engineering :: Mathematics\",\n  \"Topic :: Scientific/Engineering :: Physics\",\n  \"Topic :: Scientific/Engineering :: Visualization\",\n]\ndependencies = [\n  \"geopandas>=1.0\",\n  \"networkx>=2.5\",\n  \"numpy>=1.22\",\n  \"pandas>=1.4\",\n  \"requests>=2.27\",\n  \"shapely>=2.0\",\n]\ndescription = \"Download, model, analyze, and visualize street networks and other geospatial features from OpenStreetMap\"\ndynamic = [\"version\"]\nkeywords = [\"GIS\", \"Networks\", \"OpenStreetMap\", \"Routing\"]\nlicense = { text = \"MIT License\" }\nmaintainers = [{ name = \"OSMnx contributors\" }]\nname = \"osmnx\"\nreadme = \"README.md\"\nrequires-python = \">=3.9\" # match classifiers above and mypy version below\n\n[project.optional-dependencies]\nentropy = [\"scipy>=1.5\"]\nneighbors = [\"scikit-learn>=0.23\", \"scipy>=1.5\"]\nraster = [\"rasterio>=1.3\", \"rio-vrt>=0.3\"]\nvisualization = [\"matplotlib>=3.5\"]\n\n[project.urls]\nDocumentation = \"https://osmnx.readthedocs.io\"\n\"Code Repository\" = \"https://github.com/gboeing/osmnx\"\n\"Examples Gallery\" = \"https://github.com/gboeing/osmnx-examples\"\n\n[tool.coverage.report]\nexclude_also = [\"@overload\", \"if TYPE_CHECKING:\"]\n\n[tool.hatch.build]\npackages = [\"osmnx\"]\n\n[tool.hatch.version]\npath = \"osmnx/_version.py\"\n\n[tool.mypy]\ncache_dir = \"~/.cache/pre-commit/mypy\"\nignore_missing_imports = true\npython_version = \"3.9\"\nstrict = true\nwarn_no_return = true\nwarn_unreachable = true\n\n[tool.ruff]\ncache-dir = \"~/.cache/pre-commit/ruff\"\nexclude = [\"build/*\"]\nline-length = 100\n\n[tool.ruff.lint]\nextend-ignore = [\"N803\", \"N806\", \"SLF001\"]\nextend-select = [\"ALL\"]\n\n[tool.ruff.lint.isort]\nforce-single-line = true\n\n[tool.ruff.lint.mccabe]\nmax-complexity = 14\n\n[tool.ruff.lint.pycodestyle]\nmax-line-length = 110 # line length + 10% since it isn't a hard upper bound\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"numpy\"\n\n[tool.ruff.lint.pylint]\nmax-args = 8\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}