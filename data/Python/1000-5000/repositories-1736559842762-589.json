{
  "metadata": {
    "timestamp": 1736559842762,
    "page": 589,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tox-dev/tox",
      "stars": 3728,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.046875,
          "content": ".tox*\n.*_cache\n*.egg-info\nDockerfile\nbuild\ndist\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.248046875,
          "content": "/.*_cache\n/build\n/dist\n/docs/_draft.rst\n/src/tox/version.py\n/toxfile.py\n/Dockerfile\n/.tox\n*.py[co]\n__pycache__\n*.swp\n*.egg-info\n/tests/demo_pkg_setuptools/build/lib/demo_pkg_setuptools/__init__.py\n/tests/demo_pkg_inline.lock\n/tests/demo_pkg_inline/.tox/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.6201171875,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n  - repo: https://github.com/python-jsonschema/check-jsonschema\n    rev: 0.30.0\n    hooks:\n      - id: check-github-workflows\n        args: [\"--verbose\"]\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      - id: codespell\n        additional_dependencies: [\"tomli>=2.1\"]\n  - repo: https://github.com/tox-dev/pyproject-fmt\n    rev: \"v2.5.0\"\n    hooks:\n      - id: pyproject-fmt\n  - repo: https://github.com/abravalheri/validate-pyproject\n    rev: \"v0.23\"\n    hooks:\n      - id: validate-pyproject\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: \"v0.8.3\"\n    hooks:\n      - id: ruff-format\n      - id: ruff\n        args: [\"--fix\", \"--unsafe-fixes\", \"--exit-non-zero-on-fix\"]\n  - repo: https://github.com/asottile/blacken-docs\n    rev: 1.19.1\n    hooks:\n      - id: blacken-docs\n        additional_dependencies: [black==24.10]\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.10.0\n    hooks:\n      - id: rst-backticks\n  - repo: https://github.com/rbubley/mirrors-prettier\n    rev: \"v3.4.2\"\n    hooks:\n      - id: prettier\n  - repo: local\n    hooks:\n      - id: changelogs-rst\n        name: changelog filenames\n        language: fail\n        entry: \"changelog files must be named ####.(feature|bugfix|doc|removal|misc).rst\"\n        exclude: ^docs/changelog/(\\d+\\.(feature|bugfix|doc|removal|misc).rst|template.jinja2)\n        files: ^docs/changelog/\n  - repo: meta\n    hooks:\n      - id: check-hooks-apply\n      - id: check-useless-excludes\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.1787109375,
          "content": "version: 2\nbuild:\n  os: ubuntu-lts-latest\n  tools:\n    python: \"3\"\n  commands:\n    - pip install uv\n    - uv venv\n    - uv pip install tox-uv tox@.\n    - .venv/bin/tox run -e docs --\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.154296875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making\nparticipation in our project and our community a harassment-free experience for everyone, regardless of age, body size,\ndisability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take\nappropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits,\nissues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any\ncontributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the\nproject or its community. Examples of representing a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed representative at an online or offline\nevent. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team. The\nproject team will review and investigate all complaints, and will respond in a way that it deems appropriate to the\ncircumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent\nrepercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at\n[https://www.contributor-covenant.org/version/1/4/code-of-conduct.html][version]\n\n[homepage]: https://www.contributor-covenant.org/\n[version]: https://www.contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5146484375,
          "content": "# tox\n\n[![PyPI](https://img.shields.io/pypi/v/tox)](https://pypi.org/project/tox/)\n[![Supported Python\nversions](https://img.shields.io/pypi/pyversions/tox.svg)](https://pypi.org/project/tox/)\n[![Downloads](https://static.pepy.tech/badge/tox/month)](https://pepy.tech/project/tox)\n[![Documentation\nstatus](https://readthedocs.org/projects/tox/badge/?version=latest)](https://tox.readthedocs.io/en/latest/?badge=latest)\n[![check](https://github.com/tox-dev/tox/actions/workflows/check.yaml/badge.svg)](https://github.com/tox-dev/tox/actions/workflows/check.yaml)\n\n`tox` aims to automate and standardize testing in Python. It is part of a larger vision of easing the packaging, testing\nand release process of Python software (alongside [pytest](https://docs.pytest.org/en/latest/) and\n[devpi](https://www.devpi.net)).\n\ntox is a generic virtual environment management and test command line tool you can use for:\n\n- checking your package builds and installs correctly under different environments (such as different Python\n  implementations, versions or installation dependencies),\n- running your tests in each of the environments with the test tool of choice,\n- acting as a frontend to continuous integration servers, greatly reducing boilerplate and merging CI and shell-based\n  testing.\n\nPlease read our [user guide](https://tox.wiki/en/latest/user_guide.html#basic-example) for an example and more detailed\nintroduction, or watch [this YouTube video](https://www.youtube.com/watch?v=SFqna5ilqig) that presents the problem space\nand how tox solves it.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ignore-words.txt",
          "type": "blob",
          "size": 0.013671875,
          "content": "releas\nmaster\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.513671875,
          "content": "[build-system]\nbuild-backend = \"hatchling.build\"\nrequires = [\n  \"hatch-vcs>=0.4\",\n  \"hatchling>=1.26.3\",\n]\n\n[project]\nname = \"tox\"\ndescription = \"tox is a generic virtualenv management and test command line tool\"\nreadme.content-type = \"text/markdown\"\nreadme.file = \"README.md\"\nkeywords = [\n  \"environments\",\n  \"isolated\",\n  \"testing\",\n  \"virtual\",\n]\nlicense = \"MIT\"\nmaintainers = [\n  { name = \"Anthony Sottile\", email = \"asottile@umich.edu\" },\n  { name = \"Bernát Gábor\", email = \"gaborjbernat@gmail.com\" },\n  { name = \"Jürgen Gmach\", email = \"juergen.gmach@googlemail.com\" },\n  { name = \"Oliver Bestwalter\", email = \"oliver@bestwalter.de\" },\n]\nauthors = [\n  { name = \"Bernát Gábor\", email = \"gaborjbernat@gmail.com\" },\n]\nrequires-python = \">=3.8\"\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Framework :: tox\",\n  \"Intended Audience :: Developers\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Operating System :: MacOS :: MacOS X\",\n  \"Operating System :: Microsoft :: Windows\",\n  \"Operating System :: POSIX\",\n  \"Programming Language :: Python :: 3 :: Only\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Programming Language :: Python :: 3.13\",\n  \"Topic :: Software Development :: Libraries\",\n  \"Topic :: Software Development :: Testing\",\n  \"Topic :: Utilities\",\n]\ndynamic = [\n  \"version\",\n]\ndependencies = [\n  \"cachetools>=5.5\",\n  \"chardet>=5.2\",\n  \"colorama>=0.4.6\",\n  \"filelock>=3.16.1\",\n  \"packaging>=24.2\",\n  \"platformdirs>=4.3.6\",\n  \"pluggy>=1.5\",\n  \"pyproject-api>=1.8\",\n  \"tomli>=2.1; python_version<'3.11'\",\n  \"typing-extensions>=4.12.2; python_version<'3.11'\",\n  \"virtualenv>=20.27.1\",\n]\noptional-dependencies.test = [\n  \"devpi-process>=1.0.2\",\n  \"pytest>=8.3.3\",\n  \"pytest-mock>=3.14\",\n]\nurls.Documentation = \"https://tox.wiki\"\nurls.Homepage = \"http://tox.readthedocs.org\"\nurls.\"Release Notes\" = \"https://tox.wiki/en/latest/changelog.html\"\nurls.Source = \"https://github.com/tox-dev/tox\"\nurls.Tracker = \"https://github.com/tox-dev/tox/issues\"\nscripts.tox = \"tox.run:run\"\n\n[dependency-groups]\ndev = [\n  { include-group = \"docs\" },\n  { include-group = \"test\" },\n  { include-group = \"type\" },\n]\ntest = [\n  \"build[virtualenv]>=1.2.2.post1\",\n  \"covdefaults>=2.3\",\n  \"detect-test-pollution>=1.2\",\n  \"devpi-process>=1.0.2\",\n  \"diff-cover>=9.2\",\n  \"distlib>=0.3.9\",\n  \"flaky>=3.8.1\",\n  \"hatch-vcs>=0.4\",\n  \"hatchling>=1.26.3\",\n  \"psutil>=6.1\",\n  \"pytest>=8.3.3\",\n  \"pytest-cov>=5\",\n  \"pytest-mock>=3.14\",\n  \"pytest-xdist>=3.6.1\",\n  \"re-assert>=1.1\",\n  \"setuptools>=75.1; python_version<='3.8'\",\n  \"setuptools>=75.6; python_version>'3.8'\",\n  \"time-machine>=2.15; implementation_name!='pypy'\",\n  \"wheel>=0.45\",\n]\ntype = [\n  \"mypy==1.13\",\n  \"types-cachetools>=5.5.0.20240820\",\n  \"types-chardet>=5.0.4.6\",\n  { include-group = \"test\" },\n]\ndocs = [\n  \"furo>=2024.8.6\",\n  \"sphinx>=8.1.3\",\n  \"sphinx-argparse-cli>=1.18.2\",\n  \"sphinx-autodoc-typehints>=2.5\",\n  \"sphinx-copybutton>=0.5.2\",\n  \"sphinx-inline-tabs>=2023.4.21\",\n  \"sphinxcontrib-towncrier>=0.2.1a0\",\n  \"towncrier>=24.8\",\n]\nfix = [\n  \"pre-commit-uv>=4.1.4\",\n]\npkg-meta = [\n  \"check-wheel-contents>=0.6\",\n  \"twine>=5.1.1\",\n  \"uv>=0.5.3\",\n]\nrelease = [\n  \"gitpython>=3.1.43\",\n  \"packaging>=24.2\",\n  \"towncrier>=24.8\",\n]\n\n[tool.hatch]\nbuild.dev-mode-dirs = [\n  \"src\",\n]\nbuild.hooks.vcs.version-file = \"src/tox/version.py\"\nbuild.targets.sdist.include = [\n  \"/src\",\n  \"/tests\",\n  \"/tox.toml\",\n]\nversion.source = \"vcs\"\n\n[tool.ruff]\ntarget-version = \"py38\"\nline-length = 120\nformat.preview = true\nformat.docstring-code-line-length = 100\nformat.docstring-code-format = true\nlint.select = [\n  \"ALL\",\n]\nlint.ignore = [\n  \"ANN401\",  # Dynamically typed expressions (typing.Any) are disallowed in `arg`\"\n  \"COM812\",  # conflicts with formatter\n  \"CPY\",     # No copyright header\n  \"D\",       # ignore documentation for now\n  \"D203\",    # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible\n  \"D212\",    # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible\n  \"DOC201\",  # no restructuredtext support yet\n  \"DOC402\",  # no restructuredtext support yet\n  \"DOC501\",  # broken with sphinx docs\n  \"INP001\",  # no implicit namespaces here\n  \"ISC001\",  # conflicts with formatter\n  \"LOG015\",  # we require use of the root logger for reporting\n  \"PLR0914\", ## Too many local variables\n  \"PLR0917\", ## Too many positional arguments\n  \"S104\",    # Possible binding to all interfaces\n  \"S404\",    # Using subprocess is alright.\n  \"S603\",    # Using subprocess is alright.\n]\nlint.per-file-ignores.\"tests/**/*.py\" = [\n  \"D\",       # don't care about documentation in tests\n  \"FBT\",     # don't care about booleans as positional arguments in tests\n  \"INP001\",  # no implicit namespace\n  \"PLR2004\", # Magic value used in comparison, consider replacing with a constant variable\n  \"S101\",    # asserts allowed in tests\n  \"S603\",    # `subprocess` call: check for execution of untrusted input\n]\nlint.isort = { known-first-party = [\n  \"tox\",\n  \"tests\",\n], required-imports = [\n  \"from __future__ import annotations\",\n] }\nlint.preview = true\n\n[tool.codespell]\nbuiltin = \"clear,usage,en-GB_to_en-US\"\nwrite-changes = true\nskip = \"*.svg\"\nignore-words = \"ignore-words.txt\"\ncount = true\n\n[tool.pyproject-fmt]\nmax_supported_python = \"3.13\"\n\n[tool.pytest.ini_options]\ntestpaths = [\n  \"tests\",\n]\naddopts = \"--tb=auto -ra --showlocals --no-success-flaky-report\"\n# Keep temporary directories only for failed or errored tests.\ntmp_path_retention_policy = \"failed\"\n\n[tool.coverage]\nhtml.show_contexts = true\nhtml.skip_covered = false\npaths.source = [\n  \"src\",\n  \".tox*/*/lib/python*/site-packages\",\n  \".tox*/pypy*/site-packages\",\n  \".tox*\\\\*\\\\Lib\\\\site-packages\",\n  \"*/src\",\n  \"*\\\\src\",\n]\nreport.fail_under = 88\nreport.omit = [\n  \"src/tox/config/cli/for_docs.py\",\n  \"tests/execute/local_subprocess/bad_process.py\",\n  \"tests/type_check/*\",\n]\nrun.parallel = true\nrun.plugins = [\n  \"covdefaults\",\n]\n\n[tool.towncrier]\nname = \"tox\"\nfilename = \"docs/changelog.rst\"\ndirectory = \"docs/changelog\"\ntitle_format = false\nissue_format = \":issue:`{issue}`\"\ntemplate = \"docs/changelog/template.jinja2\"\n# possible types, all default: feature, bugfix, doc, removal, misc\n\n[tool.mypy]\npython_version = \"3.11\"\nshow_error_codes = true\nstrict = true\noverrides = [\n  { module = [\n    \"colorama.*\",\n    \"coverage.*\",\n    \"distlib.*\",\n    \"flaky.*\",\n    \"importlib_metadata.*\",\n    \"pluggy.*\",\n    \"psutil.*\",\n    \"re_assert.*\",\n    \"virtualenv.*\",\n  ], ignore_missing_imports = true },\n]\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.toml",
          "type": "blob",
          "size": 3.2373046875,
          "content": "requires = [\"tox>=4.23.2\"]\nenv_list = [\"fix\", \"3.13\", \"3.12\", \"3.11\", \"3.10\", \"3.9\", \"3.8\", \"cov\", \"type\", \"docs\", \"pkg_meta\"]\nskip_missing_interpreters = true\n\n[env_run_base]\ndescription = \"run the tests with pytest under {env_name}\"\npackage = \"wheel\"\nwheel_build_env = \".pkg\"\ndependency_groups = [\"test\"]\npass_env = [\"PYTEST_*\", \"SSL_CERT_FILE\"]\nset_env.COVERAGE_FILE = { replace = \"env\", name = \"COVERAGE_FILE\", default = \"{work_dir}{/}.coverage.{env_name}\" }\nset_env.COVERAGE_FILECOVERAGE_PROCESS_START = \"{tox_root}{/}pyproject.toml\"\ncommands = [\n  [\n    \"pytest\",\n    { replace = \"posargs\", extend = true, default = [\n      \"--durations\",\n      \"15\",\n      \"-n\",\n      { replace = \"env\", name = \"PYTEST_XDIST_AUTO_NUM_WORKERS\", default = \"auto\" },\n      \"--junitxml\",\n      \"{work_dir}{/}junit.{env_name}.xml\",\n      \"--no-cov-on-fail\",\n      \"--cov\",\n      \"{env_site_packages_dir}{/}tox\",\n      \"--cov\",\n      \"{tox_root}{/}tests\",\n      \"--cov-config\",\n      \"{tox_root}{/}pyproject.toml\",\n      \"--cov-context\",\n      \"test\",\n      \"--cov-report\",\n      \"term-missing:skip-covered\",\n      \"--cov-report\",\n      \"html:{env_tmp_dir}{/}htmlcov\",\n      \"--cov-report\",\n      \"xml:{work_dir}{/}coverage.{env_name}.xml\",\n      \"tests\",\n      \"--run-integration\",\n    ] },\n  ],\n  [\n    \"diff-cover\",\n    \"--compare-branch\",\n    { replace = \"env\", name = \"DIFF_AGAINST\", default = \"origin/main\" },\n    \"{work_dir}{/}coverage.{env_name}.xml\",\n  ],\n]\n\n[env.fix]\ndescription = \"format the code base to adhere to our styles, and complain about what we cannot do automatically\"\nskip_install = true\ndependency_groups = [\"fix\"]\npass_env = [{ replace = \"ref\", of = [\"env_run_base\", \"pass_env\"], extend = true }, \"PROGRAMDATA\", \"DISABLE_PRE_COMMIT_UV_PATCH\"]\ncommands = [[\"pre-commit\", \"run\", \"--all-files\", \"--show-diff-on-failure\", { replace = \"posargs\", extend = true }]]\n\n[env.type]\ndescription = \"run type check on code base\"\ndependency_groups = [\"type\"]\ncommands = [[\"mypy\", \"src{/}tox\"], [\"mypy\", \"tests\"]]\n\n[env.docs]\ndescription = \"build documentation\"\ndependency_groups = [\"docs\"]\ncommands = [\n  [\n    \"sphinx-build\",\n    \"-d\",\n    \"{env_tmp_dir}{/}docs_tree\",\n    \"docs\",\n    \"{env:READTHEDOCS_OUTPUT:{work_dir}{/}docs_out}/html\",\n    \"--color\",\n    \"-b\",\n    \"html\",\n    { replace = \"posargs\", default = [], extend = true },\n    \"-W\",\n  ],\n  [\n    \"python\",\n    \"-c\",\n    'print(r\"documentation available under file://{work_dir}{/}docs_out{/}index.html\")',\n  ],\n]\n\n[env.pkg_meta]\ndescription = \"check that the long description is valid\"\nskip_install = true\ndependency_groups = [\"pkg_meta\"]\ncommands = [\n  [\n    \"uv\",\n    \"build\",\n    \"--sdist\",\n    \"--wheel\",\n    \"--out-dir\",\n    \"{env_tmp_dir}\",\n    \".\",\n  ],\n  [\n    \"twine\",\n    \"check\",\n    \"{env_tmp_dir}{/}*\",\n  ],\n  [\n    \"check-wheel-contents\",\n    \"--no-config\",\n    \"{env_tmp_dir}\",\n  ],\n]\n\n[env.release]\ndescription = \"do a release, required posargs of the version number\"\nskip_install = true\ndependency_groups = [\"release\"]\ncommands = [[\"python\", \"{tox_root}/tasks/release.py\", \"--version\", \"{posargs}\"]]\n\n[env.dev]\ndescription = \"dev environment with all deps at {envdir}\"\npackage = \"editable\"\ndependency_groups = [\"dev\"]\ncommands = [[\"python\", \"-m\", \"pip\", \"list\", \"--format=columns\"], [\"python\", \"-c\", 'print(r\"{env_python}\")']]\nuv_seed = true\n"
        }
      ]
    }
  ]
}