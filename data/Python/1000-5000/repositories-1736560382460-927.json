{
  "metadata": {
    "timestamp": 1736560382460,
    "page": 927,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hwchase17/langchain-hub",
      "stars": 3278,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.0634765625,
          "content": ".PHONY: file-check\n\nfile-check:\n\tpython ci_scripts/file-check.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0146484375,
          "content": "# LangChainHub\n\n| üåê This repo is getting replaced by our hosted LangChain Hub Product! Visit it at [https://smith.langchain.com/hub](https://smith.langchain.com/hub) üåê |\n| --- |\n\n## Introduction\n\nTaking inspiration from Hugging Face Hub, LangChainHub is collection of all artifacts useful for working with LangChain primitives such as prompts, chains and agents. \nThe goal of this repository is to be a central resource for sharing and discovering high quality prompts, chains and agents that combine together to form complex LLM applications.\n\nWe are starting off the hub with a collection of prompts, and we look forward to the LangChain community adding to this collection. We hope to expand to chains and agents shortly.\n\n## Contributing\n\nSince we are using GitHub to organize this Hub, adding artifacts can best be done in one of three ways:\n\n1. Create a fork and then open a PR against the repo.\n2. Create an issue on the repo with details of the artifact you would like to add.\n3. Add an artifact with the appropriate Google form:\n   - [Prompts](https://forms.gle/aAhZ6nEUybdzVbYq6)\n\nEach of the different types of artifacts (listed below) will have different instructions on how to upload them.\nPlease refer to the appropriate documentation to do so.\n\n## üìñ Prompts\n\nAt a high level, prompts are organized by use case inside the `prompts` directory.\nTo load a prompt in LangChain, you should use the following code snippet:\n\n```python\nfrom langchain.prompts import load_prompt\n\nprompt = load_prompt('lc://prompts/path/to/file.json')\n```\n\nIn addition to prompt files themselves, each sub-directory also contains a README explaining how best to use that prompt in the appropriate LangChain chain.\n\nFor more detailed information on how prompts are organized in the Hub, and how best to upload one, please see the documentation [here](./prompts/README.md).\n\n## üîó Chains\n\nAt a high level, chains are organized by use case inside the `chains` directory.\nTo load a chain in LangChain, you should use the following code snippet:\n\n```python\nfrom langchain.chains import load_chain\n\nchain = load_chain('lc://chains/path/to/file.json')\n```\n\nIn addition to chain files themselves, each sub-directory also contains a README explaining what that chain contains.\n\nFor more detailed information on how chains are organized in the Hub, and how best to upload one, please see the documentation [here](./chains/README.md).\n\n\n## ü§ñ Agents\n\nAt a high level, agents are organized by use case inside the `agents` directory.\nTo load an agent in LangChain, you should use the following code snippet:\n\n```python\nfrom langchain.agents import initialize_agent\n\nllm = ...\ntools = ...\n\nagent = initialize_agent(tools, llm, agent=\"lc://agents/self-ask-with-search/agent.json\")\n```\n\nIn addition to agent files themselves, each sub-directory also contains a README explaining what that agent contains.\n\nFor more detailed information on how agents are organized in the Hub, and how best to upload one, please see the documentation [here](./agents/README.md).\n\n\n\n## üë∑ Agent Executors\n\nComing soon!\n"
        },
        {
          "name": "agents",
          "type": "tree",
          "content": null
        },
        {
          "name": "chains",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "prompts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}