{
  "metadata": {
    "timestamp": 1736559591595,
    "page": 222,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gbeced/pyalgotrade",
      "stars": 4461,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.185546875,
          "content": "*pyc\nMANIFEST\ndoc/_build\n.idea\n.coverage\n.coverage.*\n.ipynb_checkpoints\n.ropeproject\n.tox\n.pytest_cache\n\n/venv\n/data\n/dist\n/build\n/PyAlgoTrade.egg-info\n/notebooks\n\n/testcases/credentials.py\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.9833984375,
          "content": "language: python\npython:\n  - \"2.7\"\n\nenv:\n  global:\n    # https://docs.travis-ci.com/user/environment-variables/#Defining-encrypted-variables-in-.travis.yml\n    # travis encrypt QUANDL_API_KEY=somevalue\n    - secure: \"YgngWTEKD6bUVgExTN8vWYCq7mrMKsVVqZaWIsepRziU++K1e9iBuQrSspQbyrdsKMqKMyMnsM3ru7M6+D0F+p/BC4gyWg6N+wn3RoqrWidyutejibsobDJnS3EsSfo4cJUFcoAOzzuXK+Du0yUZPNBxjJdF/NA1C8vDg0YAmzs=\"\n    - secure: \"GUuZEQSA9x96bIJiC/Ab/RxQ+Dv2eqwhRVaZYVlmuSDQXouDJdFAF9dEcUplwt3TCKg7CbOa3gr2c1rJ7bclk1ueUSXdwzlgEfEdcu7Xm+lf6LcfZESDtWUvPgRzvVqspp3hwx+SCpSl2TzXwgCRNOX8ybDC5ZvRZRQaagT6maA=\"\n    - secure: \"oAUaWICTHks6N/RNFZbF/NJE+1mB45DRZu1uvzKN5EhEp+Qys6LGHm1yZLI1sMAfwYrLro1oxNGpxD26hoMDjy2bDyBNZj59i2M7Eeo9juY3wR2sz0tKuvEdMdbuhMGyDgvXV6xlqO10hHeUUwbJOyxcQxmcp0c33B0Jse3m+pI=\"\n    - secure: \"OrR5+l3HzjKWQtVRUIHB1uLCFtRt1wNAQxJjoL6mufBMIigcpMnE2QzsoP9ywSgew8St4nFMGaL/xxR/RYTi59c6fVRh8zGg/JYMSYtr4UM8M2Gk0vSYmo3JO9OihOxn3JWbF4606vzEgqtjMT9qojo3Xx/d0Hp9br5s/wwe1oQ=\"\n    - secure: \"beFEPV9JWgX4wFx3mBeBwE7hBAK2h9gW5qpNolgYrevDQxHDQdfcNN5Rcda2/VGQiEKM+X4dixNttogfNu4yS21c5/DPUhsKNwV/ClZgYsmkowGwkXsaF6J/cYcE9+WvziCfDV3z3wTKMmyPMJlbeFDB+zik2idzkG3txUVo27g=\"\n\nsudo: required\n\nservices:\n  - docker\n\nbefore_install:\n  - docker pull gbecedillas/pyalgotrade:0.20-py27\n  - cp travis/Dockerfile .\n  - docker build -t pyalgotrade_testcases .\n  - sudo pip install coveralls\n\nscript:\n  - docker run --name testcases --env TWITTER_CONSUMER_KEY=$TWITTER_CONSUMER_KEY --env TWITTER_CONSUMER_SECRET=$TWITTER_CONSUMER_SECRET --env TWITTER_ACCESS_TOKEN=$TWITTER_ACCESS_TOKEN --env TWITTER_ACCESS_TOKEN_SECRET=$TWITTER_ACCESS_TOKEN_SECRET --env QUANDL_API_KEY=$QUANDL_API_KEY pyalgotrade_testcases /bin/bash -c \"cd /tmp/pyalgotrade; ./run_tests.sh\"\n\nafter_success:\n  - docker cp testcases:/tmp/pyalgotrade/.coverage .\n  # .coverage file has absolute paths in it, so we need to put the source in the right path for coveralls to find it.\n  - mkdir /tmp/pyalgotrade\n  - docker cp testcases:/tmp/pyalgotrade/pyalgotrade /tmp/pyalgotrade/pyalgotrade\n  - coveralls\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 17.5966796875,
          "content": "Version 0.20 (20/Aug/2018)\n. [NEW] Added support for Python 3.7.\n. [NEW] Added setShares method for back-testing broker. Thanks winkidney for implementing this.\n. [NEW] Added an option to support skipping errors while parsing CSV files.\n. [NEW] Added batchSize parameter to optimizer component. Thanks micmicmichael for implementing this.\n. [NEW] Added savePlot to the plotter to save the plot to a file. Thanks Kimble Young for implementing this.\n. [FIX] Fixed a bug in the Event class when unsubscribing and re-subscribing while emitting. Thanks pjz for reporting this.\n. [FIX] Fixed a race condition in the local optimizer that was sometimes getting blocked waiting for workers.\n. [FIX] Fixed a bug while generating nonces for Bitstamp. Thanks pjz for reporting this.\n. [FIX] Fixed callback for BaseStrategy.resampleBarFeed to match onBars prototype.\n. [FIX] Fixed extra columns parsing in csvfeed.GenericRowParser. Thanks Jones Chung for reporting this.\n. [BREAKING CHANGE] Removed support for downloading bars from Yahoo Finance.\n. [BREAKING CHANGE] Removed support for downloading bars from Google Finance.\n\nVersion 0.18 (17/Aug/2016)\n. [NEW] Returns analyzer now stores datetimes along with each sample. Thanks MatthiasKauer for implementing this.\n. [NEW] Quandl tool to build feed supports mapping column names.\n. [NEW] Bar feeds now support including extra columns besides OHLC values.\n. [NEW] Added buildFigureAndSubplots to the plotter to return the subplots along with the figure. Thanks Carlos Tse for implementing this.\n. [NEW] Returns strategy analyzer now supports passing the maxLen for the dataseries. Thanks physicsd00d for implementing this.\n. [FIX] Fixed zero division error in StochasticOscillator. Thanks Blake Jennings for reporting this.\n. [FIX] Fixed a rounding bug in the default fill strategy when calculating the volume left for a given instrument. Thanks Markus Trenkwalder for reporting this.\n. [FIX] Was not logging properly in backtesting broker when shares are not integers.\n. [FIX] Added exception handling to optimizer module. Thanks Sergey Cheparev for reporting this.\n. [FIX] Fixed a bug in VWAP calculation when using adjusted values.\n. [FIX] Added a way to change the dataseries.DEFAULT_MAX_LEN value.\n. [FIX] Added missing return in plotter.Series.getValues. Thanks physicsd00d for reporting this.\n. [FIX] optimizer.local was sometimes blocked waiting for child processes to finish.\n. [BREAKING CHANGE] Removed Xignite support (http://www.xignite.com/).\n. [BREAKING CHANGE] Removed deprecated code that issued warnings in previous versions.\n\nVersion 0.17 (10/May/2015)\n. [NEW] Hurst exponent technical indicator (pyalgotrade.technical.hurst.HurstExponent).\n. [NEW] Added support for slippage models (pyalgotrade.broker.slippage) including a VolumeShareSlippage model like the one in Zipline (https://github.com/quantopian/zipline).\n. [FIX] Automatically reconnect bitstamp feed if the connection gets closed.\n. [FIX] Close connections ASAP to avoid running out of file descriptors when GC gets delayed. Thanks Tibor Kiss for reporting and fixing this.\n. [FIX] Fail when placing Market-On-Close orders when backtesting with intraday data. Right now this is not supported.\n. [FIX] Bitstamp backtesting broker was allowing trades below $5.\n. [FIX] Updated default Bitstamp fee to 0.25%.\n. [FIX] Fixed a bug when resampling localized intraday datetimes.\n. [BREAKING CHANGE] Backtesting broker fill strategies moved to pyalgotrade.broker.fillstrategy module.\n\nVersion 0.16 (31/Aug/2014)\n. [NEW] Added support for live trading Bitcoin strategies through Bitstamp.\n. [NEW] Support for downloading and loading bars from Quandl (pyalgotrade.tools.quandl and pyalgotrade.barfeed.quandlfeed).\n. [NEW] Support for loading Bitcoin Charts historical trades CSV files (pyalgotrade.bitcoincharts.barfeed).\n. [NEW] Support for Google Finance CSV files (pyalgotrade.barfeed.googlefeed.Feed). Thanks Maciej Å»ok for implementing this.\n. [BREAKING CHANGE] pyalgotrade.bitstamp.client.Client was removed and the functionality is now included in pyalgotrade.bitstamp.barfeed.LiveTradeFeed.\n. [BREAKING CHANGE] Strategy.onOrderUpdated now gets called for all order events, including those generated using the position interface.\n. [FIX] Fixed a bug in pyalgotrade.tools.resample and pyalgotrade.dataseries.resampled.ResampledBarDataSeries when using grouping frequencies greater than 1 day.\n. [FIX] Bitstamp BacktestingBroker and PaperTradingBroker will now fail to place orders without enough cash or BTC.\n. [FIX] Fixed a rounding error in pyalgotrade.bitstamp.broker.PaperTradingBroker.\n. [FIX] Fixed a bug in BarFeed.getCurrentDateTime.\n. [FIX] Fixed a bug in pyalgotrade.technical.cross.cross_above and pyalgotrade.technical.cross.cross_below.\n. [REMOVED] Removed Google App Engine support.\n\nVersion 0.15 (30/Mar/2014)\n. [NEW] Xignite support (http://www.xignite.com/).\n. [NEW] Added support for papertrading Bitcoin strategies through Bitstamp.\n. [NEW] Partial fill support for orders.\n. [NEW] Added logging methods to the Strategy class.\n. [NEW] Average True Range (ATR) technical indicator (pyalgotrade.technical.atr.ATR).\n. [NEW] LeastSquaresRegression filter (pyalgotrade.technical.linreg.LeastSquaresRegression). Depends on SciPy.\n. [NEW] MACD technical indicator (pyalgotrade.technical.macd.MACD).\n. [NEW] pyalgotrade.tools.resample and pyalgotrade.dataseries.resampled.ResampledBarDataSeries now support any grouping frequency.\n. [NEW] pyalgotrade.barfeed.yahoofeed.Feed now supports weekly bars.\n. [NEW] Added marketOrder method to the Strategy class to place market orders.\n. [NEW] Added limitOrder method to the Strategy class to place limit orders.\n. [NEW] Added stopOrder method to the Strategy class to place stop orders.\n. [NEW] Added stopLimitOrder method to the Strategy class to place stop limit orders.\n. [BREAKING CHANGE] Support for auto-exit on session close was removed.\n. [BREAKING CHANGE] Removed some deprecated methods from DataSeries (appendValue, appendValueWithDatetime, getValue, getValues, getValuesAbsolute, getFirstValidPos and getLength).\n. [BREAKING CHANGE] Fail when resubmitting orders.\n. [BREAKING CHANGE] Fail when changing order properties that are set during initialization.\n. [BREAKING CHANGE] The last parameter to broker.backtesting.FillStrategy.fillStopLimitOrder was removed. FillStrategy will now handle all the details for order filling to allow better customization.\n. [BREAKING CHANGE] Changed the order of the stopPrice and limitPrice parameters in Strategy.enterLongStopLimit, Strategy.enterShortStopLimit and Position.exit.\n. [BREAKING CHANGE] Removed MtGox support.\n. [BREAKING CHANGE] pyalgotrade.technical.trend.Slope was moved into the pyalgotrade.technical.linreg package.\n. [CHANGE] setUseAdjustedValues should now be called on the strategy instead of the broker.\n. [CHANGE] Position.getUnrealizedNetProfit and Position.getUnrealizedReturn will automatically use the last available price if None is given.\n. [CHANGE] Daily bars from Yahoo and NinjaTrader CSV feeds are loaded with time set to 00:00:00.\n. [CHANGE] All classes now inherit from object.\n. [CHANGE] The backtesting broker ignores volumeLimit when using trade bars.\n. [CHANGE] The backtesting broker now emits the cancelation event when cancelation is requested, not in the next bar.\n. [FIX] Fixed a bug in pyalgotrade.technical.roc.RateOfChange when there was no change and the current value was 0.\n. [FIX] pyalgotrade.tools.resample and pyalgotrade.dataseries.resampled.ResampledBarDataSeries now set the datetime to that of the beggining of the bar.\n\nVersion 0.14 (12/Oct/2013)\n. [NEW] Event profiler inspired in QSTK (pyalgotrade.eventprofiler).\n. [NEW] Cumulative returns filter (pyalgotrade.technical.cumret.CumulativeReturn).\n. [NEW] Z-Score filter (pyalgotrade.technical.stats.ZScore).\n. [NEW] Added support for other types of time-series data in CSV format (pyalgotrade.feed.csvfeed.Feed).\n. [FIX] Fixed a bug with loggers when using the optimizer: https://github.com/gbeced/pyalgotrade/issues/10. \n. [FIX] Fixed a bug in the trades analyzer. Proportional commissions when switching from long to short or viceversa were not properly calculated. Thanks Sam Jackson for reporting this and providing a patch.\n. [FIX] Fixed a bug when using the optimizer and a broker with adjusted values.\n. [CHANGE] Google App Engine: Increased task granularity to improve performance.\n. [CHANGE] broker.backtesting.FillStrategy was changed to return a broker.backtesting.FillInfo instance.\n. [CHANGE] broker.backtesting.DefaultStrategy now takes bar volume into account to fill an order.\n. [CHANGE] pyalgotrade.barfeed.BarFeed was renamed to pyalgotrade.barfeed.BaseBarFeed and pyalgotrade.barfeed.BasicBarFeed was removed.\n. [CHANGE] Event handlers for pyalgotrade.barfeed.BaseBarFeed.getNewBarsEvent should expect two parameters: datetime and bars.\n\nVersion 0.13 (26/Aug/2013)\n. [NEW] Added support for handling realtime Twitter events (pyalgotrade.twitter.feed).\n. [NEW] Added support for backtesting and papertrading Bitcoin strategies through MtGox. Thanks Jeremi Joslin for helping with the testing.\n. [NEW] Bar feeds now support setting the maximum number of values to hold for the BarDataSeries in case you don't want them to grow too much.\n. [NEW] pyalgotrade.dataseries.SequenceDataSeries and DataSeries filters (everything inside the pyalgotrade.technical package) now support setting the maximum number of values to hold in case you don't want them to grow too much.\n. [NEW] StrategyPlotter now calls autofmt_xdate on the figure before plotting it. Thanks Thomas Jung for suggesting this.\n. [NEW] StrategyPlotter now supports only building the figure so you can customize it (StrategyPlotter.buildFigure).\n. [NEW] bar.Bar was optimized to use less memory. Thanks Tibor Kiss for suggesting this.\n. [NEW] Added tools to resample BarFeeds to different frequencies and using them (pyalgotrade.tools.resample and pyalgotrade.barfeed.csvfeed.GenericBarFeed).\n. [NEW] Added a BarDataSeries that can resample another BarDataSeries to a higher frequency (pyalgotrade.dataseries.resampled.ResampledBarDataSeries).\n. [NEW] High and Low technical indicators (pyalgotrade.technical.highlow.High and pyalgotrade.technical.highlow.Low).\n. [CHANGE] pyalgotrade.technical.roc.RateOfChange indicator was changed and now it doesn't multiply by 100 the results.\n. [CHANGE] The pyalgotrade.technical.trend package does not depend on SciPy any more.\n. [CHANGE] Strategy class was renamed to BacktestingStrategy (the old name is still supported in this version).\n. [CHANGE] Max. drawdown duration is now returned as a datetime.timedelta object.\n. [CHANGE] Sharpe Ratio analyzer was modified to better support intraday trading. The tradingPeriods parameter is not supported anymore.\n. [CHANGE] In order to resubmit the exit order for a position, the orignal exit order has to be canceled first using cancelExit.\n. [CHANGE] DataSeries and DataSeries filters (everything inside the pyalgotrade.technical package) were refactored to an event based model.\n. [CHANGE] BarValueDataSeries and BarDataSeries were moved from pyalgotrade.dataseries into pyalgotrade.bards.dataseries.\n. [CHANGE] pyalgotrade.technical.cross.CrossAbove and pyalgotrade.technical.cross.CrossBelow were refactored as functions (pyalgotrade.technical.cross.cross_above and pyalgotrade.technical.cross.cross_below). They are not DataSeries any more.\n. [CHANGE] pyalgotrade.technical.DataSeriesFilter was removed. DataSeries filters now have to be modeled using pyalgotrade.technical.EventWindow and pyalgotrade.technical.EventBasedFilter classes.\n. [CHANGE] pyalgotrade.dataseries.SequenceDataSeries constructor no longer accepts values and datetimes.\n. [CHANGE] pyalgotrade.dataseries.datetime_aligned was moved to pyalgotrade.dataseries.aligned.datetime_aligned.\n\nVersion 0.12 (20/Apr/2013)\n. [NEW] pyalgotrade.optimizer now has worker names associated with each worker. Thanks Matthieu Locas for implementing this.\n. [NEW] StrategyPlotter now allows plotting custom functions.\n. [NEW] Optimizations in different areas.\n. [NEW] Standard deviation technical indicator (pyalgotrade.technical.stats.StdDev).\n. [NEW] Bollinger Bands technical indicator (pyalgotrade.technical.bollinger.BollingerBands).\n. [FIX] Fixed a bug in EMA technical that could lead to max. recursion limit error.\n. [FIX] Fixed a bug in the Strategy class that had a big impact on execution time. Bookkeeping for active positions and orders was not handled properly.\n\nVersion 0.11 (17/Mar/2013)\n. [NEW] DataSeries now provide the datetime associated with each value (getDateTimes), making it easier to plot using matplotlib.\n. [NEW] Function to align two DataSeries with respect to time (pyalgotrade.dataseries.datetime_aligned).\n. [NEW] VWAP technical indicator (pyalgotrade.technical.vwap.VWAP).\n. [NEW] Line Break technical indicator (pyalgotrade.technical.linebreak.LineBreak).\n. [NEW] Methods to calculate unrealized returns and PnL in positions (getUnrealizedReturn and getUnrealizedNetProfit).\n. [FIX] An IndexError exception was raised in plotter.py when plotting many dataseries in the same subplot.\n\nVersion 0.10 (11/Jan/2013)\n. [NEW] Sharpe Ratio analysis (pyalgotrade.stratanalyzer.sharpe.SharpeRatio).\n. [NEW] Max. drawdown and max. drawdown duration analysis (pyalgotrade.stratanalyzer.drawdown.DrawDown). Thanks Sedov Anton for reporting a bug in the early implementation.\n. [NEW] Returns analysis (pyalgotrade.stratanalyzer.returns.Returns).\n. [NEW] Trades analysis (pyalgotrade.stratanalyzer.trades.Trades).\n. [NEW] Support for bar timezones (pyalgotrade.marketsession).\n. [NEW] Support for sequence like operations in DataSeries (__getitem__ and __len__. getValue and getValueAbsolute will soon get deprecated).\n. [NEW] Support for mapping like operations in bar feeds (__getitem__ and __contains__).\n. [NEW] Support for mapping like operations in bar.Bars (__getitem__ and __contains__).\n. [NEW] Google App Engine: Added support for re-executing strategies.\n. [CHANGE] broker.backtesting.Broker.getValue no longer needs the bars as a parameter. It will take those out of the feed.\n. [FIX] broker.backtesting.getActiveOrders was not returning all orders during event dispatching.\n. [FIX] Fixed returns calculations for short positions. Thanks John Fawcett for explaining this.\n. [FIX] Fixed a bug in the Strategy class and the backtesting broker when dealing with multiple instruments. Was not handling absence of bars appropriately. Thanks Fabian Braennstroem for reporting this.\n. [FIX] Additional DataSeries added to the portfolio subplot were not showing. Thanks Sedov Anton for reporting this.\n. [FIX] Additional subplots (those created using getOrCreateSubplot) are now ordered as created. Thanks Sedov Anton for reporting this and suggesting the fix.\n\nVersion 0.9 (1/Sep/2012)\n. [NEW] Added a method to the strategy class to get notified when an order gets updated (onOrderUpdated). This is only called if the order was placed using the broker interface directly.\n. [FIX] A KeyError exception was raised in the strategy class when placing orders using the broker interface directly. Thanks 'Femto Trader' for reporting this.\n\nVersion 0.8 (28/Aug/2012)\n. [NEW] StrategyPlotter now plots each instrument in a separate subplot. getMainSubplot was replaced by getIntrumentSubplot.\n. [NEW] Strategy.exitPosition allows setting the exit order as GTC or not, or matching the entry order (default).\n. [FIX] Was hitting an AssertionError in the strategy class when overwritting exit orders with new ones.\n. [FIX] Set exit-on-session-close orders as GTC.\n\nVersion 0.7 (22/Aug/2012)\n. [NEW] Backtesting broker allows customizing of order filling strategies.\n. [NEW] Added support Stop orders. Thanks Tibor Kiss for adding this.\n. [NEW] Added support StopLimit orders. Thanks Tibor Kiss for adding this.\n. [NEW] TA-Lib integration (pyalgotrade.talibext.indicator).\n. [NEW] Official support for NinjaTrader generated CSV files (pyalgotrade.barfeed.ninjatraderfeed.Feed). csvfeed.NinjaTraderRowParser was removed.\n. [CHANGE] pyalgotrade.barfeed.csvfeed.YahooFeed was moved to pyalgotrade.barfeed.yahoofeed.Feed. pyalgotrade.barfeed.csvfeed.YahooFeed still works but it will be removed soon.\n. [CHANGE] Major changes to the broker interface to support other broker types. These changes are not backwards compatible. Thanks Tibor Kiss for adding this.\n. [FIX] Was not honoring the GTC attribute when submiting exit orders from inside the position classes.\n. [FIX] Was not getting better prices (when available) for Limit orders. Thanks Tibor Kiss for reporting this.\n\nVersion 0.6 (26/Jun/2012)\n. [NEW] Initial support for NinjaTrader export format (csvfeed.NinjaTraderRowParser).\n. [NEW] pyalgotrade.optimizer.server.serve now returns the best results found.\n. [FIX] Fixes to the optimizer.local module when running on Windows.\n. [FIX] The marker style used by plotter.py was not supported in some matplotlib versions. Thanks Tibor Kiss for fixing this.\n. [FIX] Socket used to find a random port to listen on was not being closed (optimizer.local.find_port). Thanks Tibor Kiss for fixing this.\n\nVersion 0.5 (21/Jun/2012)\n. [NEW] StrategyPlotter supports plotting a range.\n. [NEW] Stochastic oscillator supports using adjusted values.\n. [NEW] Added support for optimizing strategies inside Google App Engine.\n. [NEW] Improved optimizer module to distribute strategy executions in chunks.\n\nVersion 0.4 (8/May/2012)\n. [NEW] Rate of change technical indicator.\n. [NEW] Stochastic oscillator technical indicator.\n. [FIX] Added error checking to yahoofinance.get_daily_csv.\n. [FIX] Normalized some method names in StrategyPlotter.\n\nVersion 0.3 (22/Apr/2012)\n. [NEW] Support for plotting strategies (StrategyPlotter).\n\nVersion 0.2 (14/Apr/2012)\n. [NEW] CrossAbove and CrossBelow technical indicators.\n. [NEW] Limit order support.\n. [FIX] Fixed a bug when a position was set to exit on session close but the entry was not filled.\n\nVersion 0.1 (27/Mar/2012)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.57421875,
          "content": "PyAlgoTrade\n\nCopyright 2011-2018 Gabriel Martin Becedillas Ruiz\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0361328125,
          "content": "global-exclude .DS_Store *.pyc *.pyo\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1708984375,
          "content": "PyAlgoTrade\n===========\n\n***\n**This project is deprecated and is no longer mantained. You may be interested in taking a look at [Basana](https://github.com/gbeced/basana).**\n***\n\n[![Build Status](https://travis-ci.org/gbeced/pyalgotrade.png?branch=master)](https://travis-ci.org/gbeced/pyalgotrade)\n[![Coverage Status](https://coveralls.io/repos/gbeced/pyalgotrade/badge.svg?branch=master)](https://coveralls.io/r/gbeced/pyalgotrade?branch=master)\n\n\nPyAlgoTrade is an **event driven algorithmic trading** Python library. Although the initial focus\nwas on **backtesting**, **paper trading** is now possible using:\n\n * [Bitstamp](https://www.bitstamp.net/) for Bitcoins\n\nand **live trading** is now possible using:\n\n * [Bitstamp](https://www.bitstamp.net/) for Bitcoins\n\nTo get started with PyAlgoTrade take a look at the [tutorial](http://gbeced.github.io/pyalgotrade/docs/v0.20/html/tutorial.html) and the [full documentation](http://gbeced.github.io/pyalgotrade/docs/v0.20/html/index.html).\n\nMain Features\n-------------\n\n * Event driven.\n * Supports Market, Limit, Stop and StopLimit orders.\n * Supports any type of time-series data in CSV format like Yahoo! Finance, Google Finance, Quandl and NinjaTrader.\n * Bitcoin trading support through [Bitstamp](https://www.bitstamp.net/).\n * Technical indicators and filters like SMA, WMA, EMA, RSI, Bollinger Bands, Hurst exponent and others.\n * Performance metrics like Sharpe ratio and drawdown analysis.\n * Handling Twitter events in realtime.\n * Event profiler.\n * TA-Lib integration.\n\nInstallation\n------------\n\nPyAlgoTrade is developed and tested using Python 2.7/3.7 and depends on:\n\n * [NumPy and SciPy](http://numpy.scipy.org/).\n * [pytz](http://pytz.sourceforge.net/).\n * [dateutil](https://dateutil.readthedocs.org/en/latest/).\n * [requests](http://docs.python-requests.org/en/latest/).\n * [matplotlib](http://matplotlib.sourceforge.net/) for plotting support.\n * [ws4py](https://github.com/Lawouach/WebSocket-for-Python) for Bitstamp support.\n * [tornado](http://www.tornadoweb.org/en/stable/) for Bitstamp support.\n * [tweepy](https://github.com/tweepy/tweepy) for Twitter support.\n\nYou can install PyAlgoTrade using pip like this:\n\n```\npip install pyalgotrade\n```\n"
        },
        {
          "name": "build_sdist.sh",
          "type": "blob",
          "size": 0.0712890625,
          "content": "export LC_ALL=en_US.UTF-8\nexport LANG=en_US.UTF-8\n\npython setup.py sdist\n"
        },
        {
          "name": "cleanup.sh",
          "type": "blob",
          "size": 0.1357421875,
          "content": "#!/bin/sh\n\nfind . -name *.pyc -delete\nfind . -name .coverage -delete\nfind . -name .noseids -delete\nfind . -name htmlcov -exec rm -rf {} \\;\n"
        },
        {
          "name": "coverage.cfg",
          "type": "blob",
          "size": 0.0927734375,
          "content": "[report]\nshow_missing = 1\nexclude_lines =\n    pragma: no cover\n    raise NotImplementedError()\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyalgotrade",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-checklist.txt",
          "type": "blob",
          "size": 1.55859375,
          "content": "Release checklist\n\n[ ] Run flake8 (flake8 --exclude=doc . | grep -v \"line too long\")\n[ ] Run testcases on Mac and Windows.\n[ ] Check that code coverage is >= 89 %.\n[ ] Update CHANGELOG.\n[ ] Update version in __init__.py.\n[ ] Update version in setup.py.\n[ ] Update version in docker/build.sh.\n[ ] Update version in docker/Dockerfile\n[ ] Update version in travis/Dockerfile\n[ ] Update version in .travis.yml.\n[ ] Update directories in setup.py.\n[ ] Update version doc/conf.py.\n[ ] Rebuild and review documentation.\n[ ] Run testcases using the installed lib (use docker testcases image as in Travis).\n[ ] Run tutorial examples from the Optimizing section using the installed lib (use 'docker run -ti testcases /bin/bash').\n[ ] Run samples/tutorial-5.py using the installed lib (use 'docker run -ti testcases /bin/bash').\n[ ] Run samples/tutorial_bitstamp_1.py using the installed lib. Check disconnection detection (use 'docker run -ti testcases /bin/bash').\n[ ] Run samples/tutorial_twitter_bitstamp.py using the installed lib.\n[ ] Run samples/eventstudy.py using the installed lib.\n\n[ ] Update the website (doc + package).\n[ ] Update README.md.\n[ ] Build package and upload to sourceforge.\n[ ] Update PyPi (both PKG-INFO and upload file using https://pypi.python.org/pypi?%3Aaction=submit_form).\n[ ] Install using 'sudo pip install pyalgotrade' and check that the right version was installed.\n[ ] Build and push Docker image.\n\n[ ] Commit and tag (git tag v0.x-rtm -m \"Version 0.x\").\n[ ] Push (git push; git push --tags).\n[ ] Push the website (git push).\n[ ] Announce on Google Groups and Twitter.\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.111328125,
          "content": "#!/usr/bin/env python\n\n# PyAlgoTrade\n#\n# Copyright 2011-2018 Gabriel Martin Becedillas Ruiz\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\ntry:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\n\n\nsetup(\n    name='PyAlgoTrade',\n    version='0.20',\n    description='Python Algorithmic Trading',\n    long_description='Python library for backtesting stock trading strategies.',\n    author='Gabriel Martin Becedillas Ruiz',\n    author_email='pyalgotrade@gmail.com',\n    url='http://gbeced.github.io/pyalgotrade/',\n    download_url='http://sourceforge.net/projects/pyalgotrade/files/0.20/PyAlgoTrade-0.20.tar.gz/download',\n    classifiers=[\n        \"Programming Language :: Python :: 2\",\n        \"Programming Language :: Python :: 3\",\n        \"Operating System :: OS Independent\",\n    ],\n    packages=[\n        'pyalgotrade',\n        'pyalgotrade.barfeed',\n        'pyalgotrade.bitcoincharts',\n        'pyalgotrade.bitstamp',\n        'pyalgotrade.broker',\n        'pyalgotrade.dataseries',\n        'pyalgotrade.feed',\n        'pyalgotrade.optimizer',\n        'pyalgotrade.stratanalyzer',\n        'pyalgotrade.strategy',\n        'pyalgotrade.talibext',\n        'pyalgotrade.technical',\n        'pyalgotrade.tools',\n        'pyalgotrade.twitter',\n        'pyalgotrade.utils',\n        'pyalgotrade.websocket',\n    ],\n    install_requires=[\n        \"matplotlib\",\n        \"numpy\",\n        \"python-dateutil\",\n        \"pytz\",\n        \"requests\",\n        \"retrying\",\n        \"scipy\",\n        \"six\",\n        \"tornado\",\n        \"tweepy\",\n        \"ws4py>=0.3.4\",\n    ],\n    extras_require={\n        \"TALib\":  [\"Cython\", \"TA-Lib\"],\n    },\n)\n"
        },
        {
          "name": "testcases",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.5576171875,
          "content": "[tox]\nenvlist = py27,py37\n\n[testenv]\n# Disabling hash randomization to get deterministic dict prints\nsetenv = PYTHONHASHSEED=0\npassenv = TWITTER_CONSUMER_KEY TWITTER_CONSUMER_SECRET TWITTER_ACCESS_TOKEN TWITTER_ACCESS_TOKEN_SECRET QUANDL_API_KEY\nextras =\n\tTALib\ndeps = \n\tpytest\n\tpytest-cov\n\tnumpy\n\ncommands =\n# We need to install statsmodels in a separate pip call after numpy is installed. Check https://github.com/tox-dev/tox/issues/42\n\tpip install --no-cache-dir statsmodels\n\tpy.test -v --cov=pyalgotrade --cov-config=coverage.cfg --cov-report=term-missing testcases/\n"
        },
        {
          "name": "travis",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}