{
  "metadata": {
    "timestamp": 1736559805023,
    "page": 533,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "elastic/elasticsearch-dsl-py",
      "stars": 3848,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.205078125,
          "content": ".*.swp\n*~\n*.py[co]\n.coverage\n*.egg-info\ndist\nbuild\n*.egg\ncoverage.xml\njunit.xml\ntest_elasticsearch_dsl/htmlcov\ndocs/_build\n.cache\nvenv\n.idea\n.pytest_cache\n\n# sample code for GitHub issues\nissues\n.direnv\n.envrc\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.1904296875,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n\npython:\n  install:\n    - method: pip\n      path: .\n      extra_requirements:\n        - develop\n\nsphinx:\n  fail_on_warning: true\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.1328125,
          "content": "For a list of all our amazing authors please see the contributors page:\nhttps://github.com/elastic/elasticsearch-py/graphs/contributors\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 2.720703125,
          "content": "Contribution Guide\n==================\n\nIf you have a bugfix or new feature that you would like to contribute to\nelasticsearch-dsl-py, please find or open an issue about it first. Talk about what\nyou would like to do. It may be that somebody is already working on it, or that\nthere are particular issues that you should know about before implementing the\nchange.\n\nIf you want to be rewarded for your contributions, sign up for the\n`Elastic Contributor Program <https://www.elastic.co/community/contributor>`_.\nEach time you make a valid contribution, you’ll earn points that increase your\nchances of winning prizes and being recognized as a top contributor.\n\nWe enjoy working with contributors to get their code accepted. There are many\napproaches to fixing a problem and it is important to find the best approach\nbefore writing too much code.\n\nThe process for contributing to any of the Elasticsearch repositories is similar.\n\n1. Please make sure you have signed the `Contributor License\n   Agreement <https://www.elastic.co/contributor-agreement/>`_. We are not\n   asking you to assign copyright to us, but to give us the right to distribute\n   your code without restriction. We ask this of all contributors in order to\n   assure our users of the origin and continuing existence of the code. You only\n   need to sign the CLA once.\n\n2. Many classes included in this library are offered in two versions, for\n   asynchronous and synchronous Python. When working with these classes, you only\n   need to make changes to the asynchronous code, located in *_async*\n   subdirectories in the source and tests trees. Once you've made your changes,\n   run the following command to automatically generate the corresponding\n   synchronous code:\n\n    .. code:: bash\n\n        $ nox -rs format\n   \n3. Run the test suite to ensure your changes do not break existing code:\n\n    .. code:: bash\n\n        $ nox -rs lint test\n\n4. Rebase your changes.\n   Update your local repository with the most recent code from the main\n   elasticsearch-dsl-py repository, and rebase your branch on top of the latest master\n   branch. We prefer your changes to be squashed into a single commit.\n\n5. Submit a pull request. Push your local changes to your forked copy of the\n   repository and submit a pull request. In the pull request, describe what your\n   changes do and mention the number of the issue where discussion has taken\n   place, eg “Closes #123″.  Please consider adding or modifying tests related to\n   your changes. Include any generated files in the *_sync* subdirectory in your\n   pull request.\n\nThen sit back and wait. There will probably be discussion about the pull\nrequest and, if any changes are needed, we would love to work with you to get\nyour pull request merged into elasticsearch-dsl-py.\n"
        },
        {
          "name": "Changelog.rst",
          "type": "blob",
          "size": 24.37890625,
          "content": ".. _changelog:\n\nChangelog\n=========\n\n8.17.1 (2025-01-08)\n-------------------\n\n* Added support for the ``point`` and ``shape`` fields (`#1963 <https://github.com/elastic/elasticsearch-dsl-py/pull/1963>`_)\n* Corrected typing hints for the ``FunctionScore`` query (`#1960 <https://github.com/elastic/elasticsearch-dsl-py/pull/1960>`_)\n\n8.17.0 (2024-12-13)\n-------------------\n\n* Added support for quantized dense vector options (`#1948 <https://github.com/elastic/elasticsearch-dsl-py/pull/1948>`_)\n* Added support for composable index templates (`#1943 <https://github.com/elastic/elasticsearch-dsl-py/pull/1943>`_)\n\n8.16.0 (2024-11-13)\n-------------------\n\n* Autogenerate parts of the library using documentation and types from the Elasticsearch specification\n    * query classes (`#1890 <https://github.com/elastic/elasticsearch-dsl-py/pull/1890>`_)\n    * aggregation classes (`#1918 <https://github.com/elastic/elasticsearch-dsl-py/pull/1918>`_)\n    * response classes (`#1929 <https://github.com/elastic/elasticsearch-dsl-py/pull/1929>`_ `#1932 <https://github.com/elastic/elasticsearch-dsl-py/pull/1932>`_)\n* Support pipe syntax to declare optional document fields (`#1937 <https://github.com/elastic/elasticsearch-dsl-py/pull/1937>`_)\n* Ignore document attributes typed with ``ClassVar`` (`#1936 <https://github.com/elastic/elasticsearch-dsl-py/pull/1936>`_)\n* Support Python 3.13 (`#1938 <https://github.com/elastic/elasticsearch-dsl-py/pull/1938>`_)\n\n\n8.15.4 (2024-10-07)\n-------------------\n\n* Fixed the use of dictionaries as values in ``Terms`` query (`#1920 <https://github.com/elastic/elasticsearch-dsl-py/issues/1920>`_)\n\n8.15.3 (2024-09-12)\n-------------------\n\n* Fixed regression introduced in ``Terms`` query class (`#1907 <https://github.com/elastic/elasticsearch-dsl-py/pull/1907>`_)\n* Removed unnecessary ``filter`` argument in ``AggBase.__getitem__`` (`#1903 <https://github.com/elastic/elasticsearch-dsl-py/pull/1903>`_)\n* Fixed deserialization of ``datetime.date`` fields (`#1914 <https://github.com/elastic/elasticsearch-dsl-py/pull/1914>`_)\n\n8.15.2 (2024-09-04)\n-------------------\n\n* Added support for any iterables to The ``Terms`` query (`#1887 <https://github.com/elastic/elasticsearch-dsl-py/pull/1887>`_)\n* Added back support for tuples and other iterables to ``Search.source()`` method (`#1895 <https://github.com/elastic/elasticsearch-dsl-py/pull/1895>`_)\n* Added recursive option to ``AttrDict.to_dict()`` (`#1892 <https://github.com/elastic/elasticsearch-dsl-py/pull/1892>`_)\n* Removed unused analyzer from search as you type example (`#1883 <https://github.com/elastic/elasticsearch-dsl-py/pull/1883>`_)\n\n8.15.1 (2024-08-19)\n-------------------\n\n* Added support for the ``semantic_text`` field and ``semantic`` query type (`#1881 <https://github.com/elastic/elasticsearch-dsl-py/pull/1881>`_)\n* Removed extra ``__orig_class__`` attribute in aggregation responses (`#1877 <https://github.com/elastic/elasticsearch-dsl-py/pull/1877>`_)\n\n8.15.0 (2024-08-09)\n-------------------\n\n* Added the option to use Python types to declare document fields (`#1845 <https://github.com/elastic/elasticsearch-dsl-py/pull/1845>`_)\n* Added type annotations (`#1533 <https://github.com/elastic/elasticsearch-dsl-py/pull/1533>`_)\n* Added support for bulk document operations with ``Document.bulk()`` (`#1864 <https://github.com/elastic/elasticsearch-dsl-py/pull/1864>`_)\n* Added the ``ConstantKeyword`` field to the top-level package (`#1843 <https://github.com/elastic/elasticsearch-dsl-py/pull/1843>`_)\n* Added ``async_connections`` to the top-level package (`#1865 <https://github.com/elastic/elasticsearch-dsl-py/pull/1865>`_)\n* Added index creation to the aggregations example (`#1862 <https://github.com/elastic/elasticsearch-dsl-py/pull/1862>`_)\n\n8.14.0 (2024-06-10)\n-------------------\n\n* Added ``text_expansion`` query clause (`#1837 <https://github.com/elastic/elasticsearch-dsl-py/pull/1837>`_)\n* Added ``Response.search_after()`` and ``Search.search_after()`` methods for efficient iteration (`#1829 <https://github.com/elastic/elasticsearch-dsl-py/pull/1829>`_)\n* Added point in time support and the ``iterate()`` method in the ``Search`` class (`#1833 <https://github.com/elastic/elasticsearch-dsl-py/pull/1833>`_)\n* Added support for slicing multiple times in ``Search`` class (`#1771 <https://github.com/elastic/elasticsearch-dsl-py/pull/1771>`_)\n  Added support for regular expressions in ``Completion.suggest()`` (`#1836 <https://github.com/elastic/elasticsearch-dsl-py/pull/1836>`_)\n* Fixed ``suggest()`` method of the ``Completion`` class to format requests correctly. (`#1836 <https://github.com/elastic/elasticsearch-dsl-py/pull/1836>`_)\n* Fixed ``Document.update()`` to accept fields set to ``None`` or empty (`#1820 <https://github.com/elastic/elasticsearch-dsl-py/pull/1820>`_)\n* Started work on type hints (Thanks Caio Fontes for leading this effort!)\n    * Added Type hints to ``function.py`` (`#1827 <https://github.com/elastic/elasticsearch-dsl-py/pull/1827>`_)\n    * Added Type hints to ``query.py`` (`#1821 <https://github.com/elastic/elasticsearch-dsl-py/pull/1821>`_)\n\n8.13.1 (2024-04-30)\n-------------------\n\n* Added support for ``knn`` as a query option (`#1770`_)\n* Made the ``dims`` attribute of the dense vector type optional (`#1776`_)\n* Added missing ``inner_hits`` option to ``search.knn()`` method (`#1777`_)\n* Added support for detecting document updates in ``InnerDoc`` attributes (`#1535`_)\n* Changed ``_expand__to_dot`` setting to resolve at runtime (`#1633`_)\n* Added explicit error message when unsupported ``minimum_should_match`` values are used (`#1774`_)\n* Added the ``EmptySearch`` class (`#1780`_)\n* Added several missing aggregations:\n   * ``AdjacencyMatrix`` (`#1553`_)\n   * ``CategorizeText`` (`#1588`_)\n   * ``GeohexGrid`` (`#1590`_)\n   * ``IPPrefix`` (`#1592`_)\n   * ``RandomSampler`` (`#1594`_)\n   * ``GeoLine`` (`#1628`_)\n   * ``MatrixStats`` (`#1630`_)\n   * ``TopMetrics`` (`#1706`_)\n* Added ``params`` option to the ``FacetedSearch`` object (`#1500`_)\n* Added support for passing a dictionary in the ``script`` option for a document update (`#1560`_)\n* Added ``keys()`` and ``items()`` methods to ``AttrDict`` class (`#1784`_)\n* Added a ``to_list()`` method to the ``AttrList`` class (`#1584`_)\n* Fixed various documentation issues and typos (`#1769`_, `#1615`_, `#1585`_, `#1318`_, `#1223`_)\n* Added a vector search example (`#1778`_)\n\n.. _#1770: https://github.com/elastic/elasticsearch-dsl-py/pull/1770\n.. _#1776: https://github.com/elastic/elasticsearch-dsl-py/pull/1776\n.. _#1777: https://github.com/elastic/elasticsearch-dsl-py/pull/1777\n.. _#1535: https://github.com/elastic/elasticsearch-dsl-py/pull/1535\n.. _#1633: https://github.com/elastic/elasticsearch-dsl-py/pull/1633\n.. _#1774: https://github.com/elastic/elasticsearch-dsl-py/pull/1774\n.. _#1780: https://github.com/elastic/elasticsearch-dsl-py/pull/1780\n.. _#1553: https://github.com/elastic/elasticsearch-dsl-py/pull/1553\n.. _#1588: https://github.com/elastic/elasticsearch-dsl-py/pull/1588\n.. _#1590: https://github.com/elastic/elasticsearch-dsl-py/pull/1590\n.. _#1592: https://github.com/elastic/elasticsearch-dsl-py/pull/1592\n.. _#1594: https://github.com/elastic/elasticsearch-dsl-py/pull/1594\n.. _#1628: https://github.com/elastic/elasticsearch-dsl-py/pull/1628\n.. _#1630: https://github.com/elastic/elasticsearch-dsl-py/pull/1630\n.. _#1706: https://github.com/elastic/elasticsearch-dsl-py/pull/1706\n.. _#1500: https://github.com/elastic/elasticsearch-dsl-py/pull/1500\n.. _#1560: https://github.com/elastic/elasticsearch-dsl-py/pull/1560\n.. _#1784: https://github.com/elastic/elasticsearch-dsl-py/pull/1784\n.. _#1584: https://github.com/elastic/elasticsearch-dsl-py/pull/1584\n.. _#1769: https://github.com/elastic/elasticsearch-dsl-py/pull/1769\n.. _#1615: https://github.com/elastic/elasticsearch-dsl-py/pull/1615\n.. _#1585: https://github.com/elastic/elasticsearch-dsl-py/pull/1585\n.. _#1318: https://github.com/elastic/elasticsearch-dsl-py/pull/1318\n.. _#1223: https://github.com/elastic/elasticsearch-dsl-py/pull/1223\n.. _#1778: https://github.com/elastic/elasticsearch-dsl-py/pull/1778\n\n8.13.0 (2024-04-03)\n-------------------\n\n* Added ``asyncio`` support (`#1714`_)\n* Dropped support for Python 3.7 (`#1717`_)\n* Stopped mixing body and parameters in ``UpdateByQuery`` (`#1702`_)\n\n.. _#1714: https://github.com/elastic/elasticsearch-dsl-py/pull/1714\n.. _#1717: https://github.com/elastic/elasticsearch-dsl-py/pull/1717\n.. _#1702: https://github.com/elastic/elasticsearch-dsl-py/pull/1702\n\n8.12.0 (2024-01-18)\n-------------------\n\n* Added ``Search.knn()`` method  (`#1691`_)\n* Added ``Search.rank()`` method (undocumented as it still is in technical preview) (`#1692`_)\n* Fixed importing collapse from dictionary (`#1689`_)\n\n.. _#1689: https://github.com/elastic/elasticsearch-dsl-py/pull/1689\n.. _#1691: https://github.com/elastic/elasticsearch-dsl-py/pull/1691\n.. _#1692: https://github.com/elastic/elasticsearch-dsl-py/pull/1692\n\n8.11.0 (2023-11-13)\n-------------------\n\n* Added support for Python 3.12 (`#1680`_)\n* Added ``Search.collapse()`` (`#1649`_, contributed by `@qcoumes`_)\n\n.. _@qcoumes: https://github.com/qcoumes\n.. _#1680: https://github.com/elastic/elasticsearch-dsl-py/pull/1680\n.. _#1649: https://github.com/elastic/elasticsearch-dsl-py/pull/1649\n\n8.9.0 (2023-09-07)\n------------------\n\n* Added Elasticsearch 8.x support (`#1664`_)\n* Dropped support for Python 2.7 and 3.5 (`#1606`_, contributed by `@hugovk`_)\n* Added support for Python 3.10 and 3.11 (`#1608`_, contributed by `@hugovk`_)\n* Added the ``MultiTerms`` aggregation (`#1543`_, contributed by `@Telomeraz`_)\n* Added the ``CombinedFields`` query (`#1557`_, contributed by `@Telomeraz`_)\n\n.. _@Telomeraz: https://github.com/Telomeraz\n.. _@hugovk: https://github.com/hugovk\n.. _#1664: https://github.com/elastic/elasticsearch-dsl-py/pull/1664\n.. _#1606: https://github.com/elastic/elasticsearch-dsl-py/pull/1606\n.. _#1608: https://github.com/elastic/elasticsearch-dsl-py/pull/1608\n.. _#1543: https://github.com/elastic/elasticsearch-dsl-py/pull/1543\n.. _#1557: https://github.com/elastic/elasticsearch-dsl-py/pull/1557\n\n\n7.4.1 (2023-03-01)\n------------------\n\n* Fixed ``DeprecationWarnings`` that would be emitted from deprecated\n  usages of the ``body`` parameter in the Python Elasticsearch client.\n\n\n7.4.0 (2021-07-15)\n------------------\n\n* Added the ``ConstantKeyword``, ``RankFeatures`` field types (`#1456`_, `#1465`_)\n* Added the ``ScriptScore`` query type (`#1464`_)\n* Added ``UpdateByQueryResponse.success()`` method (`#1463`_)\n* Added ``return_doc_meta`` parameter to ``Document.save()`` and ``Document.update()`` for\n  accessing the complete API response (`#1466`_)\n* Added support for ``calendar_interval`` and ``fixed_interval`` to ``DateHistogramFacet`` (`#1467`_)\n* Added ``Document.exists()`` method (`#1447`_, contributed by `@dem4ply`_)\n* Added support for the ``year`` interval to ``DateHistogramFacet`` (`#1502`_, contributed by `@nrsimha`_)\n* Fixed issue where ``to_dict()`` should be called recursively on ``Search.extras`` and ``**kwargs`` (`#1458`_)\n* Fixed inverse of an empty ``Bool`` query should be ``MatchNone`` (`#1459`_)\n* Fixed issue between ``retry_on_conflict`` and optimistic concurrency control within ``Document.update()`` (`#1461`_, contributed by `@armando1793`_)\n\n .. _@dem4ply: https://github.com/dem4ply\n .. _@nrsimha: https://github.com/nrsimha\n .. _@armando1793: https://github.com/armando1793\n .. _#1447: https://github.com/elastic/elasticsearch-dsl-py/pull/1447\n .. _#1456: https://github.com/elastic/elasticsearch-dsl-py/pull/1456\n .. _#1458: https://github.com/elastic/elasticsearch-dsl-py/pull/1458\n .. _#1459: https://github.com/elastic/elasticsearch-dsl-py/pull/1459\n .. _#1461: https://github.com/elastic/elasticsearch-dsl-py/pull/1461\n .. _#1463: https://github.com/elastic/elasticsearch-dsl-py/pull/1463\n .. _#1464: https://github.com/elastic/elasticsearch-dsl-py/pull/1464\n .. _#1465: https://github.com/elastic/elasticsearch-dsl-py/pull/1465\n .. _#1466: https://github.com/elastic/elasticsearch-dsl-py/pull/1466\n .. _#1467: https://github.com/elastic/elasticsearch-dsl-py/pull/1467\n .. _#1502: https://github.com/elastic/elasticsearch-dsl-py/pull/1502\n\n7.3.0 (2020-09-16)\n------------------\n\n* Added ``Intervals``, ``MatchBoolPrefix``, ``Shape``, and ``Wrapper`` queries (`#1392`_, `#1418`_)\n* Added ``Boxplot``, ``RareTerms``, ``VariableWidthHistogram``, ``MedianAbsoluteDeviation``,\n  ``TTest``, ``CumulativeCardinality``, ``Inference``, ``MovingPercentiles``,\n  and ``Normalize`` aggregations (`#1416`_, `#1418`_)\n* Added ``__all__``  and removed all star imports from ``elasticsearch_dsl`` namespace\n  to avoid leaking unintended names (`#1390`_)\n* Fixed an issue where ``Object`` and ``Nested`` could mutate the inner\n  ``doc_class`` mapping (`#1255`_, contributed by `@l1nd3r0th`_)\n* Fixed a typo in query ``SpanContaining``, previously was ``SpanContainining`` (`#1418`_)\n\n .. _@l1nd3r0th: https://github.com/l1nd3r0th\n .. _#1255: https://github.com/elastic/elasticsearch-dsl-py/pull/1255\n .. _#1390: https://github.com/elastic/elasticsearch-dsl-py/pull/1390\n .. _#1392: https://github.com/elastic/elasticsearch-dsl-py/pull/1392\n .. _#1416: https://github.com/elastic/elasticsearch-dsl-py/pull/1416\n .. _#1418: https://github.com/elastic/elasticsearch-dsl-py/pull/1418\n\n7.2.1 (2020-06-02)\n------------------\n\n* Fixed issue when slicing a Search that would result in a negative\n  ``size`` instead of a ``size`` of 0. (`#1360`_, contributed by `@bk-equityzen`_)\n\n .. _@bk-equityzen: https://github.com/bk-equityzen\n .. _#1360: https://github.com/elastic/elasticsearch-dsl-py/pull/1360\n\n7.2.0 (2020-05-04)\n------------------\n\n* Added support for ``geotile_grid`` aggregation (`#1350`_, contributed by `@owrcasstevens`_)\n* Added the ``DenseVector`` and ``SparseVector`` data types (`#1278`_)\n* Added the ``SearchAsYouType`` field (`#1295`_, contributed by `@dpasqualin`_)\n* Fixed name of ``DoubleRange`` (`#1272`_, contributed by `@braunsonm`_)\n\n .. _@braunsonm: https://github.com/braunsonm\n .. _@dpasqualin: https://github.com/dpasqualin\n .. _@owrcasstevens: https://github.com/owrcasstevens\n .. _#1272: https://github.com/elastic/elasticsearch-dsl-py/pull/1272\n .. _#1278: https://github.com/elastic/elasticsearch-dsl-py/issues/1278\n .. _#1295: https://github.com/elastic/elasticsearch-dsl-py/pull/1295\n .. _#1350: https://github.com/elastic/elasticsearch-dsl-py/pull/1350\n\n7.1.0 (2019-10-23)\n------------------\n\n* Optimistic concurrent control for Document.delete\n* Removing deprecated ``DocType``\n* Proper count caching for ES 7.x\n* Support for ``multiplexer`` token filter\n* Don't substitute for ``__`` in ``FacetedSearch``\n\n7.0.0 (2019-04-26)\n------------------\n\n* Compatibility with Elasticsearch 7.x\n* ``Document.save()`` now returns ``\"created\"`` or ``\"updated\"``\n* Dropped support for Python 2.6, 3.2, and 3.3\n* When using ``fields`` the values are no longer merged into the body of the\n  document and have to be accessed via ``.meta.fields`` only\n\n6.4.0 (2019-04-26)\n------------------\n\n* ``Index.document`` now correctly sets the ``Document``'s ``_index`` only when\n  using default index (``#1091``)\n* ``Document`` inheritance allows overriding ``Object`` and ``Nested`` field metadata like ``dynamic``\n* adding ``auto_date_histogram`` aggregation\n* Do not change data in place when (de)serializing\n\n6.3.1 (2018-12-05)\n------------------\n\n* ``Analyzer.simulate`` now supports built-in analyzers\n* proper (de)serialization of the ``Range`` wrapper\n* Added ``search_analyzer`` to ``Completion`` field\n\n6.3.0 (2018-11-21)\n------------------\n\n* Fixed logic around defining a different ``doc_type`` name.\n* Added ``retry_on_conflict`` parameter to ``Document.update``.\n* fields defined on an index are now used to (de)serialize the data even when\n  not defined on a ``Document``\n* Allow ``Index.analyzer`` to construct the analyzer\n* Detect conflict in analyzer definitions when calling ``Index.analyzer``\n* Detect conflicting mappings when creating an index\n* Add ``simulate`` method to ``analyzer`` object to test the analyzer using the\n  ``_analyze`` API.\n* Add ``script`` and ``script_id`` options to ``Document.update``\n* ``Facet`` can now use other metric than ``doc_count``\n* ``Range`` objects to help with storing and working with ``_range`` fields\n* Improved behavior of ``Index.save`` where it does a better job when index\n  already exists\n* Composite aggregations now correctly support multiple ``sources`` aggs\n* ``UpdateByQuery`` implemented by @emarcey\n\n6.2.1 (2018-07-03)\n------------------\n\n* allow users to redefine ``doc_type`` in ``Index`` (``#929``)\n* include ``DocType`` in ``elasticsearch_dsl`` module directly (``#930``)\n\n6.2.0 (2018-07-03)\n------------------\n\n**Backwards incompatible change** - ``DocType`` refactoring.\n\nIn ``6.2.0`` we refactored the ``DocType`` class and renamed it to\n``Document``. The primary motivation for this was the support for types being\ndropped from elasticsearch itself in ``7.x`` - we needed to somehow link the\n``Index`` and ``Document`` classes. To do this we split the options that were\npreviously defined in the ``class Meta`` between it and newly introduced\n``class Index``. The split is that all options that were tied to mappings (like\nsetting ``dynamic = MetaField('strict')``) remain in ``class Meta`` and all\noptions for index definition (like ``settings``, ``name``, or ``aliases``) got\nmoved to the new ``class Index``.\n\nYou can see some examples of the new functionality in the ``examples``\ndirectory. Documentation has been updated to reflect the new API.\n\n``DocType`` is now just an alias for ``Document`` which will be removed in\n``7.x``. It does, however, work in the new way which is not fully backwards\ncompatible.\n\n* ``Percolator`` field now expects ``Query`` objects as values\n* you can no longer access meta fields on a ``Document`` instance by specifying\n  ``._id`` or similar. Instead all access needs to happen via the ``.meta``\n  attribute.\n* Implemented ``NestedFacet`` for ``FacetedSearch``. This brought a need to\n  slightly change the semantics of ``Facet.get_values`` which now expects the\n  whole data dict for the aggregation, not just the ``buckets``. This is\n  a backwards incompatible change for custom aggregations that redefine that\n  method.\n* ``Document.update`` now supports ``refresh`` kwarg\n* ``DslBase._clone`` now produces a shallow copy, this means that modifying an\n  existing query can have effects on existing ``Search`` objects.\n* Empty ``Search`` no longer defaults to ``match_all`` query and instead leaves\n  the ``query`` key empty. This is backwards incompatible when using\n  ``suggest``.\n\n6.1.0 (2018-01-09)\n------------------\n\n* Removed ``String`` field.\n* Fixed issue with ``Object``/``Nested`` deserialization\n\n6.0.1 (2018-01-02)\n------------------\n\nFixing wheel package for Python 2.7 (#803)\n\n6.0.0 (2018-01-01)\n------------------\n\nBackwards incompatible release compatible with elasticsearch 6.0, changes\ninclude:\n\n * use ``doc`` as default ``DocType`` name, this change includes:\n   * ``DocType._doc_type.matches`` method is now used to determine which\n   ``DocType`` should be used for a hit instead of just checking ``_type``\n * ``Nested`` and ``Object`` field refactoring using newly introduced\n   ``InnerDoc`` class. To define a ``Nested``/``Object`` field just define the\n   ``InnerDoc`` subclass and then use it when defining the field::\n\n      class Comment(InnerDoc):\n          body = Text()\n          created_at = Date()\n\n      class Blog(DocType):\n          comments = Nested(Comment)\n\n * methods on ``connections`` singleton are now exposed on the ``connections``\n   module directly.\n * field values are now only deserialized when coming from elasticsearch (via\n   ``from_es`` method) and not when assigning values in python (either by\n   direct assignment or in ``__init__``).\n\n5.4.0 (2017-12-06)\n------------------\n * fix ``ip_range`` aggregation and rename the class to ``IPRange``.\n   ``Iprange`` is kept for bw compatibility\n * fix bug in loading an aggregation with meta data from dict\n * add support for ``normalizer`` parameter of ``Keyword`` fields\n * ``IndexTemplate`` can now be specified using the same API as ``Index``\n * ``Boolean`` field now accepts ``\"false\"`` as ``False``\n\n5.3.0 (2017-05-18)\n------------------\n * fix constant score query definition\n * ``DateHistogramFacet`` now works with ``datetime`` objects\n * respect ``__`` in field names when creating queries from dict\n\n5.2.0 (2017-03-26)\n------------------\n * make sure all response structers are pickleable (for caching)\n * adding ``exclude`` to ``Search``\n * fix metric aggregation deserialization\n * expose all index-level APIs on ``Index`` class\n * adding ``delete`` to ``Search`` which calls ``delete_by_query`` API\n\n5.1.0 (2017-01-08)\n------------------\n * Renamed ``Result`` and ``ResultMeta`` to ``Hit`` and ``HitMeta`` respectively\n * ``Response`` now stores ``Search`` which it gets as first arg to ``__init__``\n * aggregation results are now wrapped in classes and properly deserialized\n * ``Date`` fields now allow for numerical timestamps in the java format (in millis)\n * Added API documentation\n * replaced generated classes with manually created\n\n5.0.0 (2016-11-04)\n------------------\nVersion compatible with elasticsearch 5.0.\n\nBreaking changes:\n\n * ``String`` field type has been deprecated in favor of ``Text`` and ``Keyword``\n * ``fields`` method has been removed in favor of ``source`` filtering\n\n2.2.0 (2016-11-04)\n------------------\n * accessing missing string fields no longer returned ``''`` but returns\n   ``None`` instead.\n * fix issues with bool's ``|`` and ``&`` operators and ``minimum_should_match``\n\n2.1.0 (2016-06-29)\n------------------\n * ``inner_hits`` are now also wrapped in ``Response``\n * ``+`` operator is deprecated, ``.query()`` now uses ``&`` to combine queries\n * added ``mget`` method to ``DocType``\n * fixed validation for \"empty\" values like ``''`` and ``[]``\n\n2.0.0 (2016-02-18)\n------------------\nCompatibility with Elasticsearch 2.x:\n\n * Filters have been removed and additional queries have been added. Instead of\n   ``F`` objects you can now use ``Q``.\n * ``Search.filter`` is now just a shortcut to add queries in filter context\n * support for pipeline aggregations added\n\nBackwards incompatible changes:\n\n * list of analysis objects and classes was removed, any string used as\n   tokenizer, char or token filter or analyzer will be treated as a builtin\n * internal method ``Field.to_python`` has been renamed to ``deserialize`` and\n   an optional serialization mechanic for fields has been added.\n * Custom response class is now set by ``response_class`` method instead of a\n   kwarg to ``Search.execute``\n\nOther changes:\n\n * ``FacetedSearch`` now supports pagination via slicing\n\n0.0.10 (2016-01-24)\n-------------------\n * ``Search`` can now be iterated over to get back hits\n * ``Search`` now caches responses from Elasticsearch\n * ``DateHistogramFacet`` now defaults to returning empty intervals\n * ``Search`` no longer accepts positional parameters\n * Experimental ``MultiSearch`` API\n * added option to talk to ``_suggest`` endpoint (``execute_suggest``)\n\n0.0.9 (2015-10-26)\n------------------\n * ``FacetedSearch`` now uses its own ``Facet`` class instead of built in\n   aggregations\n\n0.0.8 (2015-08-28)\n------------------\n * ``0.0.5`` and ``0.0.6`` was released with broken .tar.gz on pypi, just a build fix\n\n0.0.5 (2015-08-27)\n------------------\n * added support for (index/search)_analyzer via #143, thanks @wkiser!\n * even keys accessed via ``['field']`` on ``AttrDict`` will be wrapped in\n   ``Attr[Dict|List]`` for consistency\n * Added a convenient option to specify a custom ``doc_class`` to wrap\n   inner/Nested documents\n * ``blank`` option has been removed\n * ``AttributeError`` is no longer raised when accessing an empty field.\n * added ``required`` flag to fields and validation hooks to fields and\n   (sub)documents\n * removed ``get`` method from ``AttrDict``. Use ``getattr(d, key, default)``\n   instead.\n * added ``FacetedSearch`` for easy declarative faceted navigation\n\n0.0.4 (2015-04-24)\n------------------\n\n * Metadata fields (such as id, parent, index, version etc) must be stored (and\n   retrieved) using the ``meta`` attribute (#58) on both ``Result`` and\n   ``DocType`` objects or using their underscored variants (``_id``,\n   ``_parent`` etc)\n * query on Search can now be directly assigned\n * ``suggest`` method added to ``Search``\n * ``Search.doc_type`` now accepts ``DocType`` subclasses directly\n * ``Properties.property`` method renamed to ``field`` for consistency\n * Date field now raises ``ValidationException`` on incorrect data\n\n0.0.3 (2015-01-23)\n------------------\n\nAdded persistence layer (``Mapping`` and ``DocType``), various fixes and\nimprovements.\n\n0.0.2 (2014-08-27)\n------------------\n\nFix for python 2\n\n0.0.1 (2014-08-27)\n------------------\n\nInitial release.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.9052734375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.091796875,
          "content": "include AUTHORS\ninclude LICENSE\ninclude README\ninclude CONTRIBUTING.rst\ninclude Changelog.rst\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 9.1455078125,
          "content": "Elasticsearch DSL\n=================\n\nElasticsearch DSL is a high-level library whose aim is to help with writing and\nrunning queries against Elasticsearch. It is built on top of the official\nlow-level client (`elasticsearch-py <https://github.com/elastic/elasticsearch-py>`_).\n\nIt provides a more convenient and idiomatic way to write and manipulate\nqueries. It stays close to the Elasticsearch JSON DSL, mirroring its\nterminology and structure. It exposes the whole range of the DSL from Python\neither directly using defined classes or a queryset-like expressions.\n\nIt also provides an optional wrapper for working with documents as Python\nobjects: defining mappings, retrieving and saving documents, wrapping the\ndocument data in user-defined classes.\n\nTo use the other Elasticsearch APIs (eg. cluster health) just use the\nunderlying client.\n\nInstallation\n------------\n\n::\n\n  pip install elasticsearch-dsl\n\nExamples\n--------\n\nPlease see the `examples\n<https://github.com/elastic/elasticsearch-dsl-py/tree/master/examples>`_\ndirectory to see some complex examples using ``elasticsearch-dsl``.\n\nCompatibility\n-------------\n\nThe library is compatible with all Elasticsearch versions since ``2.x`` but you\n**have to use a matching major version**:\n\nFor **Elasticsearch 8.0** and later, use the major version 8 (``8.x.y``) of the\nlibrary.\n\nFor **Elasticsearch 7.0** and later, use the major version 7 (``7.x.y``) of the\nlibrary.\n\nFor **Elasticsearch 6.0** and later, use the major version 6 (``6.x.y``) of the\nlibrary.\n\nFor **Elasticsearch 5.0** and later, use the major version 5 (``5.x.y``) of the\nlibrary.\n\nFor **Elasticsearch 2.0** and later, use the major version 2 (``2.x.y``) of the\nlibrary.\n\nThe recommended way to set your requirements in your `setup.py` or\n`requirements.txt` is::\n\n    # Elasticsearch 8.x\n    elasticsearch-dsl>=8.0.0,<9.0.0\n\n    # Elasticsearch 7.x\n    elasticsearch-dsl>=7.0.0,<8.0.0\n\n    # Elasticsearch 6.x\n    elasticsearch-dsl>=6.0.0,<7.0.0\n\n    # Elasticsearch 5.x\n    elasticsearch-dsl>=5.0.0,<6.0.0\n\n    # Elasticsearch 2.x\n    elasticsearch-dsl>=2.0.0,<3.0.0\n\n\nThe development is happening on ``main``, older branches only get bugfix releases\n\nSearch Example\n--------------\n\nLet's have a typical search request written directly as a ``dict``:\n\n.. code:: python\n\n    from elasticsearch import Elasticsearch\n    client = Elasticsearch(\"https://localhost:9200\")\n\n    response = client.search(\n        index=\"my-index\",\n        body={\n          \"query\": {\n            \"bool\": {\n              \"must\": [{\"match\": {\"title\": \"python\"}}],\n              \"must_not\": [{\"match\": {\"description\": \"beta\"}}],\n              \"filter\": [{\"term\": {\"category\": \"search\"}}]\n            }\n          },\n          \"aggs\" : {\n            \"per_tag\": {\n              \"terms\": {\"field\": \"tags\"},\n              \"aggs\": {\n                \"max_lines\": {\"max\": {\"field\": \"lines\"}}\n              }\n            }\n          }\n        }\n    )\n\n    for hit in response['hits']['hits']:\n        print(hit['_score'], hit['_source']['title'])\n\n    for tag in response['aggregations']['per_tag']['buckets']:\n        print(tag['key'], tag['max_lines']['value'])\n\n\n\nThe problem with this approach is that it is very verbose, prone to syntax\nmistakes like incorrect nesting, hard to modify (eg. adding another filter) and\ndefinitely not fun to write.\n\nLet's rewrite the example using the Python DSL:\n\n.. code:: python\n\n    from elasticsearch import Elasticsearch\n    from elasticsearch_dsl import Search\n\n    client = Elasticsearch(\"https://localhost:9200\")\n\n    s = Search(using=client, index=\"my-index\") \\\n        .filter(\"term\", category=\"search\") \\\n        .query(\"match\", title=\"python\")   \\\n        .exclude(\"match\", description=\"beta\")\n\n    s.aggs.bucket('per_tag', 'terms', field='tags') \\\n        .metric('max_lines', 'max', field='lines')\n\n    response = s.execute()\n\n    for hit in response:\n        print(hit.meta.score, hit.title)\n\n    for tag in response.aggregations.per_tag.buckets:\n        print(tag.key, tag.max_lines.value)\n\nAs you see, the library took care of:\n\n- creating appropriate ``Query`` objects by name (eq. \"match\")\n- composing queries into a compound ``bool`` query\n- putting the ``term`` query in a filter context of the ``bool`` query\n- providing a convenient access to response data\n- no curly or square brackets everywhere\n\n\nPersistence Example\n-------------------\n\nLet's have a simple Python class representing an article in a blogging system:\n\n.. code:: python\n\n    from datetime import datetime\n    from elasticsearch_dsl import Document, Date, Integer, Keyword, Text, connections\n\n    # Define a default Elasticsearch client\n    connections.create_connection(hosts=\"https://localhost:9200\")\n\n    class Article(Document):\n        title = Text(analyzer='snowball', fields={'raw': Keyword()})\n        body = Text(analyzer='snowball')\n        tags = Keyword()\n        published_from = Date()\n        lines = Integer()\n\n        class Index:\n            name = 'blog'\n            settings = {\n              \"number_of_shards\": 2,\n            }\n\n        def save(self, ** kwargs):\n            self.lines = len(self.body.split())\n            return super(Article, self).save(** kwargs)\n\n        def is_published(self):\n            return datetime.now() > self.published_from\n\n    # create the mappings in elasticsearch\n    Article.init()\n\n    # create and save and article\n    article = Article(meta={'id': 42}, title='Hello world!', tags=['test'])\n    article.body = ''' looong text '''\n    article.published_from = datetime.now()\n    article.save()\n\n    article = Article.get(id=42)\n    print(article.is_published())\n\n    # Display cluster health\n    print(connections.get_connection().cluster.health())\n\n\nIn this example you can see:\n\n- providing a default connection\n- defining fields with mapping configuration\n- setting index name\n- defining custom methods\n- overriding the built-in ``.save()`` method to hook into the persistence\n  life cycle\n- retrieving and saving the object into Elasticsearch\n- accessing the underlying client for other APIs\n\nYou can see more in the persistence chapter of the documentation.\n\nMigration from ``elasticsearch-py``\n-----------------------------------\n\nYou don't have to port your entire application to get the benefits of the\nPython DSL, you can start gradually by creating a ``Search`` object from your\nexisting ``dict``, modifying it using the API and serializing it back to a\n``dict``:\n\n.. code:: python\n\n    body = {...} # insert complicated query here\n\n    # Convert to Search object\n    s = Search.from_dict(body)\n\n    # Add some filters, aggregations, queries, ...\n    s.filter(\"term\", tags=\"python\")\n\n    # Convert back to dict to plug back into existing code\n    body = s.to_dict()\n\nDevelopment\n-----------\n\nActivate Virtual Environment (`virtualenvs <http://docs.python-guide.org/en/latest/dev/virtualenvs/>`_):\n\n.. code:: bash\n\n    $ virtualenv venv\n    $ source venv/bin/activate\n\nTo install all of the dependencies necessary for development, run:\n\n.. code:: bash\n\n    $ pip install -e '.[develop]'\n\nTo run all of the tests for ``elasticsearch-dsl-py``, run:\n\n.. code:: bash\n\n    $ python setup.py test\n\nAlternatively, it is possible to use the ``run_tests.py`` script in\n``test_elasticsearch_dsl``, which wraps `pytest\n<http://doc.pytest.org/en/latest/>`_, to run subsets of the test suite. Some\nexamples can be seen below:\n\n.. code:: bash\n\n    # Run all of the tests in `test_elasticsearch_dsl/test_analysis.py`\n    $ ./run_tests.py test_analysis.py\n\n    # Run only the `test_analyzer_serializes_as_name` test.\n    $ ./run_tests.py test_analysis.py::test_analyzer_serializes_as_name\n\n``pytest`` will skip tests from ``test_elasticsearch_dsl/test_integration``\nunless there is an instance of Elasticsearch on which a connection can occur.\nBy default, the test connection is attempted at ``localhost:9200``, based on\nthe defaults specified in the ``elasticsearch-py`` `Connection\n<https://github.com/elastic/elasticsearch-py/blob/master/elasticsearch\n/connection/base.py#L29>`_ class. **Because running the integration\ntests will cause destructive changes to the Elasticsearch cluster, only run\nthem when the associated cluster is empty.** As such, if the\nElasticsearch instance at ``localhost:9200`` does not meet these requirements,\nit is possible to specify a different test Elasticsearch server through the\n``TEST_ES_SERVER`` environment variable.\n\n.. code:: bash\n\n    $ TEST_ES_SERVER=my-test-server:9201 ./run_tests\n\nDocumentation\n-------------\n\nDocumentation is available at https://elasticsearch-dsl.readthedocs.io.\n\nContribution Guide\n------------------\n\nWant to hack on Elasticsearch DSL? Awesome! We have `Contribution-Guide <https://github.com/elastic/elasticsearch-dsl-py/blob/master/CONTRIBUTING.rst>`_.\n\nLicense\n-------\n\nCopyright 2013 Elasticsearch\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 0.005859375,
          "content": "README"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "elasticsearch_dsl",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "noxfile.py",
          "type": "blob",
          "size": 2.833984375,
          "content": "#  Licensed to Elasticsearch B.V. under one or more contributor\n#  license agreements. See the NOTICE file distributed with\n#  this work for additional information regarding copyright\n#  ownership. Elasticsearch B.V. licenses this file to you under\n#  the Apache License, Version 2.0 (the \"License\"); you may\n#  not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n# \thttp://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\n\nimport nox\n\nSOURCE_FILES = (\n    \"setup.py\",\n    \"noxfile.py\",\n    \"docs/\",\n    \"elasticsearch_dsl/\",\n    \"examples/\",\n    \"tests/\",\n    \"utils/\",\n)\n\n\n@nox.session(\n    python=[\n        \"3.8\",\n        \"3.9\",\n        \"3.10\",\n        \"3.11\",\n        \"3.12\",\n        \"3.13\",\n    ]\n)\ndef test(session):\n    session.install(\".[develop]\")\n\n    if session.posargs:\n        argv = session.posargs\n    else:\n        argv = (\n            \"-vvv\",\n            \"--cov=elasticsearch_dsl\",\n            \"--cov=tests.test_integration.test_examples\",\n            \"--cov-report=term-missing\",\n            \"--cov-branch\",\n            \"--cov-report=html\",\n            \"tests/\",\n        )\n    session.run(\"pytest\", *argv)\n\n\n@nox.session(python=\"3.13\")\ndef format(session):\n    session.install(\"black~=24.0\", \"isort\", \"unasync\", \"setuptools\", \".[develop]\")\n    session.run(\"python\", \"utils/run-unasync.py\")\n    session.run(\"python\", \"utils/generator.py\", env={\"PYTHONPATH\": \"./\"})\n    session.run(\"black\", \"--target-version=py38\", *SOURCE_FILES)\n    session.run(\"isort\", *SOURCE_FILES)\n    session.run(\"python\", \"utils/license-headers.py\", \"fix\", *SOURCE_FILES)\n\n    lint(session)\n\n\n@nox.session(python=\"3.13\")\ndef lint(session):\n    session.install(\"flake8\", \"black~=24.0\", \"isort\", \"unasync\", \"setuptools\")\n    session.run(\"black\", \"--check\", \"--target-version=py38\", *SOURCE_FILES)\n    session.run(\"isort\", \"--check\", *SOURCE_FILES)\n    session.run(\"python\", \"utils/run-unasync.py\", \"--check\")\n    session.run(\"flake8\", \"--ignore=E501,E741,W503,E704\", *SOURCE_FILES)\n    session.run(\"python\", \"utils/license-headers.py\", \"check\", *SOURCE_FILES)\n\n\n@nox.session(python=\"3.8\")\ndef type_check(session):\n    session.install(\".[develop]\")\n    session.run(\n        \"mypy\",\n        \"--strict\",\n        \"--implicit-reexport\",\n        \"--explicit-package-bases\",\n        \"elasticsearch_dsl\",\n        \"tests\",\n        \"examples\",\n    )\n    session.run(\n        \"pyright\",\n        \"examples\",\n    )\n\n\n@nox.session()\ndef docs(session):\n    session.install(\".[develop]\")\n\n    session.run(\"sphinx-build\", \"docs/\", \"docs/_build\", \"-b\", \"html\", \"-W\")\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.517578125,
          "content": "[build_sphinx]\nsource-dir = docs/\nbuild-dir = docs/_build\nall_files = 1\n\n[isort]\nprofile = black\n\n[tool:pytest]\nfilterwarnings =\n    error\n    ignore:Legacy index templates are deprecated in favor of composable templates.:elasticsearch.exceptions.ElasticsearchWarning\n    ignore:datetime.datetime.utcfromtimestamp\\(\\) is deprecated and scheduled for removal in a future version..*:DeprecationWarning\n    default:enable_cleanup_closed ignored.*:DeprecationWarning\nmarkers =\n    sync: mark a test as performing I/O without asyncio.\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.1103515625,
          "content": "#  Licensed to Elasticsearch B.V. under one or more contributor\n#  license agreements. See the NOTICE file distributed with\n#  this work for additional information regarding copyright\n#  ownership. Elasticsearch B.V. licenses this file to you under\n#  the Apache License, Version 2.0 (the \"License\"); you may\n#  not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n# \thttp://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\n\nfrom os.path import dirname, join\n\nfrom setuptools import find_packages, setup\n\nVERSION = (8, 17, 1)\n__version__ = VERSION\n__versionstr__ = \".\".join(map(str, VERSION))\n\nf = open(join(dirname(__file__), \"README\"))\nlong_description = f.read().strip()\nf.close()\n\ninstall_requires = [\n    \"python-dateutil\",\n    \"typing-extensions\",\n    \"elasticsearch>=8.0.0,<9.0.0\",\n    \"elastic-transport>=8.0.0,<9.0.0\",\n]\n\nasync_requires = [\n    \"elasticsearch[async]>=8.0.0,<9.0.0\",\n]\n\ndevelop_requires = [\n    \"elasticsearch[async]\",\n    \"unasync\",\n    \"jinja2\",\n    \"pytest\",\n    \"pytest-cov\",\n    \"pytest-mock\",\n    \"pytest-asyncio\",\n    \"pytz\",\n    \"coverage\",\n    # the following three are used by the vectors example and its tests\n    \"nltk\",\n    \"sentence_transformers\",\n    \"tqdm\",\n    # Override Read the Docs default (sphinx<2 and sphinx-rtd-theme<0.5)\n    \"sphinx>2\",\n    \"sphinx-rtd-theme>0.5\",\n    # typing support\n    \"mypy\",\n    \"pyright\",\n    \"types-python-dateutil\",\n    \"types-pytz\",\n    \"types-tqdm\",\n]\n\nsetup(\n    name=\"elasticsearch-dsl\",\n    description=\"Python client for Elasticsearch\",\n    license=\"Apache-2.0\",\n    url=\"https://github.com/elasticsearch/elasticsearch-dsl-py\",\n    long_description=long_description,\n    long_description_content_type=\"text/x-rst\",\n    version=__versionstr__,\n    author=\"Elastic Client Library Maintainers\",\n    author_email=\"client-libs@elastic.co\",\n    packages=find_packages(where=\".\", exclude=(\"tests*\",)),\n    python_requires=\">=3.8\",\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Intended Audience :: Developers\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n    ],\n    install_requires=install_requires,\n    extras_require={\"async\": async_requires, \"develop\": develop_requires},\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}