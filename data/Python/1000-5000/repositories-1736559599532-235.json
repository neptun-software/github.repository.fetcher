{
  "metadata": {
    "timestamp": 1736559599532,
    "page": 235,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thunlp/OpenPrompt",
      "stars": 4427,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2177734375,
          "content": ".vscode\ndata/\n**/__pycache__/\nlogs/*\nexperiments/logs\n!logs/.gitkeep\ndatasets/* \n!datasets/*.sh\n.vscode/\n*.egg-info/\neggs/\n.eggs/\n*.egg\n**.egg\nbuild/\n_build/\n**/build/\noutputs/\nlog.txt\nexamples/\nhyperopt/\ndocs/source/logs/*"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.9873046875,
          "content": "cff-version: \"1.0.0\"\nmessage: \"If you use this toolkit, please cite it using these metadata.\"\ntitle: \"openprompt\"\nrepository-code: \"https://github.com/thunlp/OpenPrompt\"\nauthors: \n  - family-names: Ding\n    given-names: Ning\n  - family-names: Hu\n    given-names: Shengding\n  - family-names: Zhao\n    given-names: Weilin\n  - family-names: Chen\n    given-names: Yulin\n  - family-names: Liu\n    given-names: Zhiyuan\n  - family-names: Zheng\n    given-names: Hai-Tao\n  - family-names: Sun\n    given-names: Maosong\npreferred-citation:\n  type: article\n  title: \"OpenPrompt: An Open-source Framework for Prompt-learning\"\n  authors:\n  - family-names: Ding\n    given-names: Ning\n  - family-names: Hu\n    given-names: Shengding\n  - family-names: Zhao\n    given-names: Weilin\n  - family-names: Chen\n    given-names: Yulin\n  - family-names: Liu\n    given-names: Zhiyuan\n  - family-names: Zheng\n    given-names: Hai-Tao\n  - family-names: Sun\n    given-names: Maosong\n  journal: \"arXiv preprint arXiv:2111.01998\"\n  year: 2021\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.8876953125,
          "content": "\n\n<div align=\"center\">\n\n<img src=\"https://z3.ax1x.com/2021/11/11/IwED0K.png\" width=\"350px\">\n\n**An Open-Source Framework for Prompt-learning.**\n\n------\n\n<p align=\"center\">\n  <a href=\"#Overview\">Overview</a> •\n  <a href=\"#installation\">Installation</a> •\n  <a href=\"#use-openprompt\">How To Use</a> •\n  <a href=\"https://thunlp.github.io/OpenPrompt/\">Docs</a> •\n  <a href=\"https://arxiv.org/abs/2111.01998\">Paper</a> •\n  <a href=\"#citation\">Citation</a> •\n  <a href=\"https://github.com/thunlp/OpenPrompt/tree/main/results/\">Performance</a> •\n</p>\n\n</div>\n\n![version](https://img.shields.io/badge/version-v1.0.1-blue)\n\n\n\n\n## What's New?\n\n \n\n- ❗️ April 2023: $\\color{red}{\\normalsize{\\textbf{Want to build your Chat AI?}}}$ **We are releasing [UltraChat](https://github.com/thunlp/UltraChat), use OpenPrompt and UltraChat to conduct supervised instruction tuning, see** [`./tutorial/9_UltraChat.py`](./tutorial/9_UltraChat.py).\n- Aug 2022: Thanks to contributor [zhiyongLiu1114](https://github.com/zhiyongLiu1114), OpenPrompt now supports [ERNIE 1.0](https://github.com/thunlp/OpenPrompt/tree/main/tutorial/7_ernie_paddlepaddle) in PaddlePaddle.\n- July 2022: OpenPrompt supports OPT now.\n- June 2022: OpenPrompt wins ACL 2022 Best Demo Paper Award.\n- Mar 2022: We add a [tutorial](https://github.com/thunlp/OpenPrompt/blob/main/tutorial/6.1_chinese_dataset_uer_t5.py) as the response to [issue 124](https://github.com/thunlp/OpenPrompt/issues/124), which uses a customized tokenizer_wrapper to perform tasks that are not in the default configuration of OpenPrompt (e.g., Bert tokenizer+T5 model）.\n- Feb 2022: Check out our sister repo [OpenDelta](https://github.com/thunlp/OpenDelta)!\n- Dec 2021: `pip install openprompt`\n- Dec 2021: [SuperGLUE performance](https://github.com/thunlp/OpenPrompt/tree/main/results) are added\n- Dec 2021: We support **generation paradigm for all tasks** by adding a new verbalizer:[GenerationVerbalizer](https://github.com/thunlp/OpenPrompt/blob/main/openprompt/prompts/generation_verbalizer.py) and a [tutorial: 4.1_all_tasks_are_generation.py](https://github.com/thunlp/OpenPrompt/blob/main/tutorial/4.1_all_tasks_are_generation.py)\n- Nov 2021: Now we have released a paper [OpenPrompt: An Open-source Framework for Prompt-learning](https://arxiv.org/abs/2111.01998).\n- Nov 2021 PrefixTuning supports t5 now.\n- Nov 2021: We made some major changes from the last version, where a flexible template language is newly introduced! Part of the docs is outdated and we will fix it soon.\n\n\n## Overview\n\n**Prompt-learning** is the latest paradigm to adapt pre-trained language models (PLMs) to downstream NLP tasks, which modifies the input text with a textual template and directly uses PLMs to conduct pre-trained tasks. This library provides a standard, flexible and extensible framework to deploy the prompt-learning pipeline. OpenPrompt supports loading PLMs directly from [huggingface transformers](https://github.com/huggingface/transformers). In the future, we will also support PLMs implemented by other libraries. For more resources about prompt-learning, please check our [paper list](https://github.com/thunlp/PromptPapers).\n\n\n\n<div align=\"center\">\n\n\n<img src=\"https://z3.ax1x.com/2021/11/03/IAdT3D.png\" width=\"85%\" align=\"center\"/>\n\n</div>\n\n\n\n## What Can You Do via OpenPrompt?\n\n\n\n![demo](docs/source/demo.gif)\n\n\n\n- Use the implementations of current prompt-learning approaches.* We have implemented various of prompting methods, including templating, verbalizing and optimization strategies under a unified standard. You can easily call and understand these methods.\n- *Design your own prompt-learning work.* With the extensibility of OpenPrompt, you can quickly practice your prompt-learning ideas.\n\n\n\n\n## Installation\n\n**Note: Please use Python 3.8+ for OpenPrompt**\n\n### Using Pip\n\nOur repo is tested on Python **3.8+** and PyTorch **1.8.1+**, install OpenPrompt using pip as follows:\n\n\n\n\n```shell\npip install openprompt\n```\n\nTo play with the latest features, you can also install OpenPrompt from the source.\n\n### Using Git\n\nClone the repository from github:\n\n```shell\ngit clone https://github.com/thunlp/OpenPrompt.git\ncd OpenPrompt\npip install -r requirements.txt\npython setup.py install\n```\n\nModify the code\n\n```\npython setup.py develop\n```\n\n\n\n## Use OpenPrompt\n\n### Base Concepts\n\nA  `PromptModel`  object contains a `PLM`, a (or multiple) `Template`  and a (or multiple) `Verbalizer`, where the `Template` class is defined to wrap the original input with templates, and the `Verbalizer` class is to construct a projection between labels and target words in the current vocabulary. And a `PromptModel`  object practically participates in training and inference.\n\n### Introduction by a Simple Example\n\nWith the modularity and flexibility of OpenPrompt, you can easily develop a prompt-learning pipeline.\n\n#### Step 1: Define a task\n\nThe first step is to determine the current NLP task, think about what’s your data looks like and what do you want from the data! That is, the essence of this step is to determine the `classes` and the `InputExample` of the task. For simplicity, we use Sentiment Analysis as an example. tutorial_task.\n\n```python\nfrom openprompt.data_utils import InputExample\nclasses = [ # There are two classes in Sentiment Analysis, one for negative and one for positive\n    \"negative\",\n    \"positive\"\n]\ndataset = [ # For simplicity, there's only two examples\n    # text_a is the input text of the data, some other datasets may have multiple input sentences in one example.\n    InputExample(\n        guid = 0,\n        text_a = \"Albert Einstein was one of the greatest intellects of his time.\",\n    ),\n    InputExample(\n        guid = 1,\n        text_a = \"The film was badly made.\",\n    ),\n]\n```\n\n\n\n#### Step 2: Define a Pre-trained Language Models (PLMs) as backbone.\n\nChoose a PLM to support your task. Different models have different attributes, we encourge you to use OpenPrompt to explore the potential of various PLMs. OpenPrompt is compatible with models on [huggingface](https://huggingface.co/transformers/).\n\n```python\nfrom openprompt.plms import load_plm\nplm, tokenizer, model_config, WrapperClass = load_plm(\"bert\", \"bert-base-cased\")\n```\n\n\n\n#### Step 3: Define a Template.\n\nA `Template` is a modifier of the original input text, which is also one of the most important modules in prompt-learning. \nWe have defined `text_a` in Step 1.\n\n```python\nfrom openprompt.prompts import ManualTemplate\npromptTemplate = ManualTemplate(\n    text = '{\"placeholder\":\"text_a\"} It was {\"mask\"}',\n    tokenizer = tokenizer,\n)\n```\n\n\n\n#### Step 4: Define a Verbalizer\n\nA `Verbalizer` is another important (but not necessary) in prompt-learning,which projects the original labels (we have defined them as `classes`, remember?) to a set of label words. Here is an example that we project the `negative` class to the word bad, and project the `positive` class to the words good, wonderful, great.\n\n```python\nfrom openprompt.prompts import ManualVerbalizer\npromptVerbalizer = ManualVerbalizer(\n    classes = classes,\n    label_words = {\n        \"negative\": [\"bad\"],\n        \"positive\": [\"good\", \"wonderful\", \"great\"],\n    },\n    tokenizer = tokenizer,\n)\n```\n\n\n\n#### Step 5: Combine them into a PromptModel\n\nGiven the task, now we have a `PLM`, a `Template` and a `Verbalizer`, we combine them into a `PromptModel`. Note that although the example naively combine the three modules, you can actually define some complicated interactions among them.\n\n```python\nfrom openprompt import PromptForClassification\npromptModel = PromptForClassification(\n    template = promptTemplate,\n    plm = plm,\n    verbalizer = promptVerbalizer,\n)\n```\n\n#### Step 6: Define a DataLoader\n\nA ``PromptDataLoader`` is basically a prompt version of pytorch Dataloader, which also includes a ``Tokenizer``, a ``Template`` and a ``TokenizerWrapper``.\n\n```python\nfrom openprompt import PromptDataLoader\ndata_loader = PromptDataLoader(\n    dataset = dataset,\n    tokenizer = tokenizer,\n    template = promptTemplate,\n    tokenizer_wrapper_class=WrapperClass,\n)\n```\n\n#### Step 7: Train and inference\n\nDone! We can conduct training and inference the same as other processes in Pytorch.\n\n\n```python\nimport torch\n\n# making zero-shot inference using pretrained MLM with prompt\npromptModel.eval()\nwith torch.no_grad():\n    for batch in data_loader:\n        logits = promptModel(batch)\n        preds = torch.argmax(logits, dim = -1)\n        print(classes[preds])\n# predictions would be 1, 0 for classes 'positive', 'negative'\n```\n\nPlease refer to our [tutorial scripts](https://github.com/thunlp/OpenPrompt/tree/main/tutorial), and [documentation](https://thunlp.github.io/OpenPrompt/) for more details.\n\n## Datasets\n\nWe provide a series of download scripts in the `dataset/` folder, feel free to use them to download benchmarks.\n\n## Performance Report\nThere are too many possible combinations powered by OpenPrompt. We are trying our best\nto test the performance of different methods as soon as possible. The performance will be constantly updated into the [Tables](https://github.com/thunlp/OpenPrompt/tree/main/results/).\nWe also encourage the users to find the best hyper-parameters for their own tasks and report the results by making pull request.\n\n## Known Issues\nMajor improvement/enhancement in future.\n\n- We made some major changes from the last version, so part of the docs is outdated. We will fix it soon.\n\n## Citation\nPlease cite our paper if you use OpenPrompt in your work\n\n```bibtex\n@article{ding2021openprompt,\n  title={OpenPrompt: An Open-source Framework for Prompt-learning},\n  author={Ding, Ning and Hu, Shengding and Zhao, Weilin and Chen, Yulin and Liu, Zhiyuan and Zheng, Hai-Tao and Sun, Maosong},\n  journal={arXiv preprint arXiv:2111.01998},\n  year={2021}\n}\n```\n## Contributors\n\n<!-- Copy-paste in your Readme.md file -->\n\n<a href=\"https://github.com/thunlp/OpenPrompt/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=thunlp/OpenPrompt\" />\n</a>\n\nWe thank all the contributors to this project, more contributors are welcome!\n\n\n"
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "experiments",
          "type": "tree",
          "content": null
        },
        {
          "name": "openprompt",
          "type": "tree",
          "content": null
        },
        {
          "name": "referenced_yamls",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.162109375,
          "content": "transformers>=4.19.0\nsentencepiece==0.1.96\n# scikit-learn>=0.24.2\ntqdm>=4.62.2\ntensorboardX\nnltk\nyacs\ndill\ndatasets\nrouge==1.0.0\npyarrow\nscipy\naccelerate\ntorchmetrics"
        },
        {
          "name": "results",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.2509765625,
          "content": "import setuptools\nimport os\nimport importlib\n\nrequires = \"\"\"\ntransformers>=4.10.0\nsentencepiece==0.1.96\n# scikit-learn>=0.24.2\ntqdm>=4.62.2\ntensorboardX\nnltk\nyacs\ndill\ndatasets\nrouge==1.0.0\npyarrow\nscipy\n\"\"\"\n\ndef get_requirements():\n    ret = [x for x in requires.split(\"\\n\") if len(x)>0]\n    print(\"requirements:\", ret)\n    return ret\n\n\n\n# path = os.path.dirname(os.path.abspath(__file__))\n# requires =  get_requirements(path)\n# print(\"requirements:\")\n# print(requires)\n\nwith open('README.md', 'r') as f:\n    setuptools.setup(\n        name = 'openprompt',\n        version = '1.0.1',\n        description = \"An open source framework for prompt-learning.\",\n        long_description=open(\"README.md\", \"r\", encoding=\"utf-8\").read(),\n        long_description_content_type=\"text/markdown\",\n        author = 'Ning Ding, Shengding Hu, Weilin Zhao, Yulin Chen',\n        author_email = 'dingn18@mails.tsinghua.edu.cn',\n        license=\"Apache\",\n        url=\"https://github.com/thunlp/OpenPrompt\",\n        keywords = ['PLM', 'prompt', 'AI', 'NLP'],\n        python_requires=\">=3.6.0\",\n        install_requires=get_requirements(),\n        packages=setuptools.find_packages(),\n        classifiers=[\n            \"Programming Language :: Python :: 3\",\n            \"Programming Language :: Python :: 3.8\",\n            \"Programming Language :: Python :: 3.9\",\n            \"Intended Audience :: Developers\",\n            \"Intended Audience :: Education\",\n            \"Intended Audience :: Science/Research\",\n            \"License :: OSI Approved :: Apache Software License\",\n            \"Operating System :: OS Independent\",\n        ]\n    )\n\nrequired_list = [\"torch\"]\nfor package in required_list:\n    try:\n        m = importlib.import_module(package)\n    except ModuleNotFoundError:\n        print(\"\\n\"+\"=\"*30+\"  WARNING  \"+\"=\"*30)\n        print(f\"{package} is not found on your environment, please install it manually.\")\n        print(\"We do not install it for you because the environment sometimes needs special care.\")\n\noptional_list = [\"sklearn\"]\nfor package in optional_list:\n    try:\n        m = importlib.import_module(package)\n    except ModuleNotFoundError:\n        print(\"\\n\"+\"=\"*30+\"  WARNING  \"+\"=\"*30)\n        print(f\"{package} is not found on your environment, please install it if the specific script needs.\")\n\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}