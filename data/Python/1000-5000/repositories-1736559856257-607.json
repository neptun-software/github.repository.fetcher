{
  "metadata": {
    "timestamp": 1736559856257,
    "page": 607,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jmcnamara/XlsxWriter",
      "stars": 3687,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.314453125,
          "content": "MANIFEST\ndist/*\n*.tar.gz\n*~\n*.bak\nTAGS\n.#*\n*#\n~*xlsx\n*.pyc\n.project\n.pydevproject\n.coverage\ncover/\n.settings/\nxlsxwriter/test/comparison/_test_*.xlsx\ndev/docs/build/\ndev/performance/*.xlsx\nexamples/*.xlsx\n.DS_Store\nbuild/\n.buildinfo\nobjects.inv\n__pycache__\n.pytest_cache/\n.tox/\n.idea\n.cache/\nXlsxWriter.egg-info/\n.vscode/\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 21.365234375,
          "content": "[MAIN]\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Clear in-memory caches upon conclusion of linting. Useful if running pylint\n# in a server-like mode.\nclear-cache-post-run=no\n\n# Load and enable all available extensions. Use --list-extensions to see a list\n# all available extensions.\n#enable-all-extensions=\n\n# In error mode, messages with a category besides ERROR or FATAL are\n# suppressed, and no reports are done by default. Error mode is compatible with\n# disabling specific errors.\n#errors-only=\n\n# Always return a 0 (non-error) status code, even if lint errors are found.\n# This is primarily useful in continuous integration scripts.\n#exit-zero=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-allow-list=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code. (This is an alternative name to extension-pkg-allow-list\n# for backward compatibility.)\nextension-pkg-whitelist=\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10\n\n# Interpret the stdin as a python script, whose filename needs to be passed as\n# the module_or_package argument.\n#from-stdin=\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=CVS\n\n# Add files or directories matching the regular expressions patterns to the\n# ignore-list. The regex matches against paths and can be in Posix or Windows\n# format. Because '\\\\' represents the directory delimiter on Windows systems,\n# it can't be used as an escape character.\nignore-paths=\n\n# Files or directories matching the regular expression patterns are skipped.\n# The regex matches against base names, not paths. The default value ignores\n# Emacs file locks\nignore-patterns=^\\.#\n\n# List of module names for which member attributes should not be checked and\n# will not be imported (useful for modules/projects where namespaces are\n# manipulated during runtime and thus existing member attributes cannot be\n# deduced by static analysis). It supports qualified module names, as well as\n# Unix pattern matching.\nignored-modules=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use, and will cap the count on Windows to\n# avoid hangs.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Resolve imports to .pyi stubs if available. May reduce no-member messages and\n# increase not-an-iterable messages.\nprefer-stubs=no\n\n# Minimum Python version to use for version dependent checks. Will default to\n# the version used to run pylint.\npy-version=3.11\n\n# Discover python modules and packages in the file system subtree.\nrecursive=no\n\n# Add paths to the list of the source roots. Supports globbing patterns. The\n# source root is an absolute path or a path relative to the current working\n# directory used to determine a package namespace for modules located under the\n# source root.\nsource-roots=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# In verbose mode, extra non-checker-related info will be displayed.\n#verbose=\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\n#class-attribute-rgx=\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type alias names. If left empty, type\n# alias names will be checked with the set naming style.\n#typealias-rgx=\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\n#variable-rgx=\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      asyncSetUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make,os._exit\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# List of regular expressions of class ancestor names to ignore when counting\n# public methods (see R0903)\nexclude-too-few-public-methods=\n\n# List of qualified class names to ignore when counting class parents (see\n# R0901)\nignored-parents=\n\n# Maximum number of arguments for function / method.\nmax-args=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=12\n\n# Maximum number of locals for function / method body.\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of positional arguments for function / method.\nmax-positional-arguments=5\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when caught.\novergeneral-exceptions=builtins.BaseException,builtins.Exception\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# Maximum number of lines in a module.\nmax-module-lines=1000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow explicit reexports by alias from a package __init__.\nallow-reexport-from-package=no\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=\n\n# Output a graph (.gv or any supported image format) of external dependencies\n# to the given file (report RP0402 must not be disabled).\next-import-graph=\n\n# Output a graph (.gv or any supported image format) of all (i.e. internal and\n# external) dependencies to the given file (report RP0402 must not be\n# disabled).\nimport-graph=\n\n# Output a graph (.gv or any supported image format) of internal dependencies\n# to the given file (report RP0402 must not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,\n# UNDEFINED.\nconfidence=HIGH,\n           CONTROL_FLOW,\n           INFERENCE,\n           INFERENCE_FAILURE,\n           UNDEFINED\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=missing-module-docstring,\n        protected-access,\n        similarities,\n        too-few-public-methods,\n        too-many-arguments,\n        too-many-branches,\n        too-many-instance-attributes,\n        too-many-lines,\n        too-many-locals,\n        too-many-positional-arguments,\n        too-many-public-methods,\n        too-many-statements,\n        unknown-option-value,\n        unrecognized-option,\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=\n\n\n[METHOD_ARGS]\n\n# List of qualified names (i.e., library.method) which require a timeout\n# parameter e.g. 'requests.api.get,requests.api.post'\ntimeout-methods=requests.api.delete,requests.api.get,requests.api.head,requests.api.options,requests.api.patch,requests.api.post,requests.api.put,requests.api.request\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n# Regular expression of note tags to take in consideration.\nnotes-rgx=\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n# Let 'consider-using-join' be raised when the separator to join on would be\n# non-empty (resulting in expected fixes of the type: ``\"- \" + \" -\n# \".join(items)``)\nsuggest-join-with-non-empty-separator=yes\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'fatal', 'error', 'warning', 'refactor',\n# 'convention', and 'info' which contain the number of messages in each\n# category, as well as 'statement' which is the total number of statements\n# analyzed. This score is used by the global evaluation report (RP0004).\nevaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\nmsg-template=\n\n# Set the output format. Available formats are: text, parseable, colorized,\n# json2 (improved json format), json (old json format) and msvs (visual\n# studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\n#output-format=\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[SIMILARITIES]\n\n# Comments are removed from the similarity computation\nignore-comments=yes\n\n# Docstrings are removed from the similarity computation\nignore-docstrings=yes\n\n# Imports are removed from the similarity computation\nignore-imports=yes\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. No available dictionaries : You need to install\n# both the python package and the system dependency for enchant to work.\nspelling-dict=\n\n# List of comma separated words that should be considered directives if they\n# appear at the beginning of a comment and should not be checked.\nspelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of symbolic message names to ignore for Mixin members.\nignored-checks-for-mixins=no-member,\n                          not-async-context-manager,\n                          not-context-manager,\n                          attribute-defined-outside-init\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local,argparse.Namespace\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# Regex pattern to define which classes are considered mixins.\nmixin-class-rgx=.*[Mm]ixin\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.5732421875,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: dev/docs/source/conf.py\n\n# We recommend specifying your dependencies to enable reproducible builds:\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n  install:\n  - requirements: dev/docs/requirements.txt\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.9375,
          "content": "# XlsxWriter: Bug Reports and Pull Requests\n\n\n## Reporting Bugs\n\nHere are some tips on reporting bugs in XlsxWriter.\n\n\n### Upgrade to the latest version of the module\n\nThe bug you are reporting may already be fixed in the latest version of the\nmodule. You can check which version of xlsxwriter that you are using as follows:\n\n    python -c \"import xlsxwriter; print(xlsxwriter.__version__)\"\n\n\nThe [Changes](https://github.com/jmcnamara/XlsxWriter/blob/master/Changes) file lists what has changed in the latest versions.\n\n\n### Read the documentation\n\nRead or search the [XlsxWriter documentation](https://xlsxwriter.readthedocs.io/) to see if the issue you are encountering is already explained.\n\n### Look at the example programs\n\nThere are [many example programs](https://github.com/jmcnamara/XlsxWriter/tree/master/examples) in the distribution. Try to identify an example program that corresponds to your query and adapt it to use as a bug report.\n\n\n### Pointers for submitting a bug report\n\n1. Describe the problem as clearly and as concisely as possible.\n2. Include a sample program. This is probably the most important step. It is generally easier to describe a problem in code than in written prose.\n3. The sample program should be as small as possible to demonstrate the problem. Don't copy and paste large non-relevant sections of your program.\n\n\n### Sample Bug Report\n\nA sample bug report is shown below. This format helps to analyze and respond to the bug report more quickly.\n\n> **Issue with SOMETHING**\n>\n>   I am using XlsxWriter to do SOMETHING but it appears to do SOMETHING ELSE.\n>\n>   I am using Python version X.Y.Z and XlsxWriter x.y.z.\n>\n>   Here is some code that demonstrates the problem::\n>\n>       import xlsxwriter\n>\n>       workbook = xlsxwriter.Workbook('hello.xlsx')\n>       worksheet = workbook.add_worksheet()\n>\n>       worksheet.write('A1', 'Hello world')\n>\n>       workbook.close()\n\n\nSee also how [How to create a Minimal, Complete, and Verifiable example](http://stackoverflow.com/help/mcve) from StackOverflow.\n\n\n### Use the XlsxWriter GitHub issue tracker\n\nSubmit the bug report using the [XlsxWriter issue tracker](https://github.com/jmcnamara/XlsxWriter/issues).\n\n\n## Pull Requests and Contributing to XlsxWriter\n\nAll patches and pull requests are welcome but must start with an issue tracker.\n\n\n### Getting Started\n\n1. Pull requests and new feature proposals must start with an [issue tracker](https://github.com/jmcnamara/XlsxWriter/issues). This serves as the focal point for the design discussion.\n2. Describe what you plan to do. If there are API changes or additions add some pseudo-code to demonstrate them.\n3. Fork the repository.\n4. Run all the tests to make sure the current code work on your system using `make test`.\n5. Create a feature branch for your new feature.\n\n\n### Writing Tests\n\nThis is the most important step. XlsxWriter has over 1000 tests and a 2:1 test to code ratio. Patches and pull requests for anything other than minor fixes or typos will not be merged without tests.\n\nUse the existing tests in `XlsxWriter/xlsxwriter/test/` as examples.\n\nIdeally, new features should be accompanied by tests that compare XlsxWriter output against actual Excel 2007 files. See the `XlsxWriter/xlsxwriter/test/comparison` test files for examples. If you don't have access to Excel 2007 I can help you create input files for test cases.\n\nTests should use the standard [unittest](http://docs.python.org/library/unittest.html) Python module.\n\n\n### Code Style\n\nFollow the general style of the surrounding code and format it to the [PEP8](http://www.python.org/dev/peps/pep-0008/) coding standards.\n\nTests should conform to `PEP8` but can ignore `E501` for long lines to allow the inclusion of Excel XML in tests.\n\nThere is a make target that will verify the source and test files using [flake8](https://flake8.pycqa.org):\n\n    make test_flake8\n\n\n### Running tests\n\nAs a minimum, tests should be run using Python 3.6+.\n\n    make test\n    # or\n    pytest\n\nWhen you push your changes they will also be tested using GitHub Actions.\n\n\n### Documentation\n\nIf your feature requires it then write some [RST](http://docutils.sourceforge.net/rst.html) documentation in [Sphinx](http://sphinx-doc.org) format or add to the existing documentation.\n\nThe docs, in `dev/docs/source` can be built in Html format using:\n\n    make docs\n\n\n### Example programs\n\nIf applicable add an example program to the `examples` directory.\n\n\n### Copyright and License\n\nCopyright remains with the original author. Do not include additional copyright claims or Licensing requirements. GitHub and the `git` repository will record your contribution an it will be acknowledged in the Changes file.\n\n\n### Submitting the Pull Request\n\nIf your change involves several incremental `git` commits then `rebase` or `squash` them onto another branch so that the Pull Request is a single commit or a small number of logical commits.\n\nPush your changes to GitHub and submit the Pull Request with a hash link to the to the Issue tracker that was opened above.\n"
        },
        {
          "name": "Changes",
          "type": "blob",
          "size": 44.1376953125,
          "content": "\n\nRelease 3.2.0 - February 17 2024\n--------------------------------\n\nThis is the 10th anniversary release of XlsxWriter. Version 0.0.1 was released\non February 17 2013. Since then there have been 167 releases, 25,000 lines of\ncode, 1600 test cases, 700 pages of documentation, 71,000 users on GitHub, 50\ncontributors, 1000 closed issues and 150 million yearly downloads. Thanks to\neveryone who has contributed code, given feedback or just used the library.\n\n* Add :func:`embed_image()` worksheet method to embed images in cells. This is\n  equivalent to Excel's menu item to insert an image using the option to \"Place\n  in Cell\". It scales images automatically to the dimensions of the cell.\n\n  This has been a frequently requested feature for people creating spreadsheets\n  with images for product items. See also :ref:`ex_embedded_images`.\n\n* Fix issue where a horizontal alignment format was ignored if indentation was\n  also set.\n\n  :issue:`1041`.\n\n\nRelease 3.1.9 - October 19 2023\n-------------------------------\n\n* Add fix for errant XML tag in chart leader lines for non-Pie charts.\n\n  :issue:`1019` and :feature:`1012`.\n\n\nRelease 3.1.8 - October 15 2023\n-------------------------------\n\n* Add support for formatting the data label in chart trendlines.\n\n  :feature:`750`.\n\n\nRelease 3.1.7 - October 9 2023\n------------------------------\n\n* Add the :func:`very_hidden()` method to hide a worksheet. This is similar to\n  the :func:`hide()` method except that the worksheet cannot be unhidden in the\n  the Excel user interface. The Excel worksheet \"xlSheetVeryHidden\" option can\n  only be unset programmatically via VBA.\n\n  :feature:`947`.\n\n* Added fixes for column formulas in tables that were overridden by table data\n  and which also didn't take future functions into account.\n\n  :issue:`1015`.\n\n\nRelease 3.1.6 - October 1 2023\n------------------------------\n\n* Added support for chart leader lines for chart types other than Pie and Doughnut.\n\n  :feature:`1012`.\n\n\nRelease 3.1.5 - September 24 2023\n---------------------------------\n\n* Added support for adding signed VBA macros to workbooks via the\n  :func:`add_signed_vba_project` method. See `Working with VBA Macros`_.\n\n  :feature:`1009`.\n\n  .. _Working with VBA Macros: https://xlsxwriter.readthedocs.io/working_with_macros.html\n\n\nRelease 3.1.4 - September 18 2023\n---------------------------------\n\n* Added support for enabling the Excel \"Show #N/A as an empty cell\" chart option\n  via the :func:`show_na_as_empty_cell` method.\n\n  :feature:`1008`.\n\n\nRelease 3.1.3 - September 8 2023\n--------------------------------\n\n* Added support for custom total formulas to worksheet tables.\n\n  :feature:`982`.\n\n\nRelease 3.1.2 - May 28 2023\n---------------------------\n\n* Added worksheet page break preview mode via :func:`set_pagebreak_view()`.\n\n\nRelease 3.1.1 - May 21 2023\n---------------------------\n\n* Add support for new Excel dynamic functions added in 2023.\n\n  :issue:`984`.\n\n* Added support for adding a color to the `invert_if_negative` chart option.\n\n  :feature:`854`.\n\n\nRelease 3.1.0 - April 13 2023\n-----------------------------\n\n* Minor fix for cell color issue.\n\n\nRelease 3.0.9 - March 10 2023\n-----------------------------\n\n* Add documentation and examples on :ref:`ewx_polars` to demonstrate new `Polars\n  <https://pola.rs/>`_ integration of XlsxWriter in `write_excel()`_.\n\n.. _write_excel(): https://docs.pola.rs/py-polars/html/reference/api/polars.DataFrame.write_excel.html\n\n* Add fix for rare issue with duplicate number formats.\n\n\nRelease 3.0.8 - February 3 2023\n-------------------------------\n\n* Fix for ``autofit()`` exception when user defined column width was ``None``.\n\n\nRelease 3.0.7 - January 14 2023\n-------------------------------\n\n* Improved :func:`autofit` algorithm to account for the additional width of\n  autofilter and table dropdowns.\n\n* Improved :func:`autofit` take user defined column widths into account.\n\n  Autofit will now only update the width for an existing column if it is greater\n  than the user defined value. This allows the user to pre-load a minimum column\n  width.\n\n  :feature:`936`.\n\n\nRelease 3.0.6 - January 5 2023\n------------------------------\n\n* Added simulated worksheet :func:`autofit` method.\n\n  :feature:`936`.\n\n\nRelease 3.0.5 - January 1 2023\n------------------------------\n\n* Added ``OverlappingRange`` exception which is raised during Worksheet\n  :func:`add_table()` or :func:`merge_range()` if the range overlaps an existing\n  worksheet table or merge range. This is a file corruption error in Excel. See\n  :ref:`exceptions`.\n\n  :issue:`848`\n\n\nRelease 3.0.4 - December 28 2022\n--------------------------------\n\n* Roll up release of several minor fixes.\n\n* Drop support for EOL Python 3.4 and 3.5.\n\n\nRelease 3.0.3 - February 27 2022\n--------------------------------\n\n* Added :func:`print_black_and_white` worksheet method to set \"Black and\n  White\" print options.\n\n  :feature:`862`.\n\n\nRelease 3.0.2 - October 31 2021\n-------------------------------\n\n* Added :func:`set_top_left_cell` worksheet method to position the first\n  visible cell in a worksheet.\n\n  :feature:`837`.\n\nRelease 3.0.1 - August 10 2021\n------------------------------\n\n* Add python_requires version to setup.py to help pip find the correct\n  matching version for Python 2 and 3.\n\n\nRelease 3.0.0 - August 10 2021\n------------------------------\n\n* This is the first Python 3 only version of XlsxWriter. It is approximately\n  10-15% faster than the Python2/3 version.\n\n  Python 2 users should use XlsxWriter version 2.0.0, see below.\n\nRelease 2.0.0 - August 9 2021\n-----------------------------\n\n* This is the last XlsxWriter release to support Python 2. From now bug fixes\n  and new features will only be available for Python 3. The deprecation notice\n  for Python 2 support in XlsxWriter has been in place since May 2020 and the\n  Python community support for Python 2 ended in January 2020. Downloads of\n  XlsxWriter for Python 2 is currently less than 6% of all downloads of the\n  library, and decreasing month by month.\n\n  Python 2 users should still be able to install versions of XlsxWriter up to\n  this release but not any releases afterwards.\n\n  :feature:`720`.\n\n\nRelease 1.4.5 - July 29 2021\n----------------------------\n\n * Added Description/Alt Text and Decorative accessibility options for charts,\n   textboxes and buttons. These options were already available for images.\n\n\nRelease 1.4.4 - July 4 2021\n---------------------------\n\n* Added some performance improvements. Performance for larger files should be\n  5-10% better.\n\n\nRelease 1.4.3 - May 12 2021\n---------------------------\n\n* Added support for background images in worksheets. See\n  :func:`set_background` and :ref:`ex_background`.\n\n\nRelease 1.4.2 - May 7 2021\n--------------------------\n\n* Added support for GIF image files (and in Excel 365, animated GIF files).\n\n\nRelease 1.4.1 - May 6 2021\n--------------------------\n\n* Added support for dynamic arrays and new Excel 365 functions like UNIQUE and\n  FILTER. See :func:`write_dynamic_array_formula`,\n  :ref:`formula_dynamic_arrays` and :ref:`ex_dynamic_arrays`.\n\n* Added constructor option \"use_future_functions\" to enable newer Excel\n  \"future\" functions in Formulas. See :ref:`formula_future`, and the\n  :func:`Workbook` constructor.\n\n\nRelease 1.4.0 - April 23 2021\n-----------------------------\n\n* Added fix for issue for where a y_axis font rotation of 0 was ignored.\n\n\nRelease 1.3.9 - April 15 2021\n-----------------------------\n\n* Added option to set row heights and column widths in pixels via the\n  :func:`set_row_pixels` and :func:`set_column_pixels` methods.\n\n\nRelease 1.3.8 - March 29 2021\n-----------------------------\n\n* Added ability to add accessibility options \"description\" and \"decorative\" to\n  images via :func:`insert_image`. :feature:`768`.\n\n* Added fix for datetime.timedelta values that exceed the Excel 1900 leap day\n  (timedeltas greater than 59 days, in hours). This is a backward incompatible\n  change. :issue:`731`.\n\n* Added the worksheet :func:`read_only_recommended` method to set the Excel\n  \"Read-only Recommended\" option that is available when saving a file.\n  :feature:`784`.\n\n* Fixed issue where temp files used in `constant_memory` mode weren't\n  closed/deleted if the workbook object was garbage collected. :issue:`764`.\n\n* Fixed issue where pattern formats without colors were given a default black\n  fill color. :issue:`790`.\n\n* Added option to set a chart crossing to 'min' as well as the existing 'max'\n  option. The 'min' option isn't available in the Excel interface but can be\n  enabled via VBA. :feature:`773`.\n\n\nRelease 1.3.7 - October 13 2020\n-------------------------------\n\n* Fixed issue where custom chart data labels didn't inherit the position of\n  the data labels in the series. :issue:`754`.\n\n* Added text alignment for textboxes. The existing options allowed the text\n  area to be aligned but didn't offer control over the text within that area.\n\n* Added Python 3.9 to the test matrix.\n\n\nRelease 1.3.6 - September 23 2020\n---------------------------------\n\n* Added the worksheet :func:`unprotect_range()` method to allow ranges within\n  a protected worksheet to be unprotected. :feature:`507`.\n\n* There are now over 1500 test cases in the test suite, including 900 tests\n  that compare the output from XlsxWriter, byte for byte, against test files\n  created in Excel. This is to ensure the maximum possible compatibility with\n  Excel.\n\n\nRelease 1.3.5 - September 21 2020\n---------------------------------\n\n* Fixed issue where relative url links in images didn't work. :issue:`751`.\n\n* Added ``use_zip64`` as a constructor option. :issue:`745`.\n\n\n* Added check, and warning, for worksheet tables with no data row. Either\n  with or without a header row. :issue:`715` and :issue:`679`.\n\n* Add a warning when the string length in :func:`write_rich_string()` exceeds\n  Excel's limit. :issue:`372`.\n\n\nRelease 1.3.4 - September 16 2020\n---------------------------------\n\n* Replaced internal MD5 digest used to check for duplicate images with a\n  SHA256 digest to avoid issues on operating systems such as Red Hat in FIPS\n  mode which don't support MD5 for security reasons. :issue:`749`.\n\n\nRelease 1.3.3 - August 13 2020\n------------------------------\n\n* Added :func:`ignore_errors()` worksheet method to to allow Excel worksheet\n  errors/warnings to be ignored in user defined ranges. See also\n  :ref:`ex_ignore_errors`. :feature:`678`.\n\n* Added warning when closing a file more than once via :func:`close()` to help\n  avoid errors where a file is closed within a loop or at the wrong scope\n  level.\n\n\nRelease 1.3.2 - August 6 2020\n-----------------------------\n\n* Added Border, Fill, Pattern and Gradient formatting to chart data labels and\n  chart custom data labels. See :ref:`chart_series_option_data_labels` and\n  :ref:`chart_series_option_custom_data_labels`.\n\n\nRelease 1.3.1 - August 3 2020\n-----------------------------\n\n* Fix for issue where array formulas weren't included in the output file for\n  certain ranges/conditions. :issue:`735`.\n\n\nRelease 1.3.0 - July 30 2020\n----------------------------\n\n* Added support for chart :ref:`custom data labels\n  <chart_series_option_custom_data_labels>`. :feature:`343`.\n\n\nRelease 1.2.9 - May 29 2020\n---------------------------\n\n* Added support for ``stacked`` and ``percent_stacked`` Line charts.\n\n\nRelease 1.2.8 - February 22 2020\n--------------------------------\n\n* Fix for issue where duplicate images with hyperlinks weren't handled\n  correctly. :issue:`686`.\n\n* Removed ``ReservedWorksheetName`` exception which was used with the reserved\n  worksheet name \"History\" since this name is allowed in some Excel variants.\n  :issue:`688`.\n\n* Fix for worksheet objects (charts, images and textboxes) that are inserted\n  with an offset that starts in a hidden cell. :issue:`676`.\n\n* Fix to allow handling of NoneType in :func:`add_write_handler`.\n  :issue:`677`.\n\n\nRelease 1.2.7 - December 23 2019\n--------------------------------\n\n* Fix for duplicate images being copied to an XlsxWriter file. Excel uses an\n  optimization where it only stores one copy of a repeated/duplicate image in\n  a workbook. XlsxWriter didn't do this which meant that the file size would\n  increase when then was a large number of repeated images. This release fixes\n  that issue and replicates Excel's behavior. :issue:`615`.\n\n* Added documentation on :ref:`num_format_categories` and\n  :ref:`num_format_locale`.\n\n* Added note to :func:`protect()` about how it is possible to encrypt an\n  XlsxWriter file using a third party, cross platform, open source tool called\n  `msoffice-crypt <https://github.com/herumi/msoffice>`_.\n\n\nRelease 1.2.6 - November 15 2019\n--------------------------------\n\n* Added option to remove style from worksheet tables. :feature:`670`.\n\n\nRelease 1.2.5 - November 10 2019\n--------------------------------\n\n* Added option to add hyperlinks to textboxes. See :ref:`textbox_hyperlink`.\n  :feature:`419`.\n\n\nRelease 1.2.4 - November 9 2019\n-------------------------------\n\n* Added option to link textbox text from a cell. See :ref:`textbox_textlink`.\n  :feature:`516`.\n\n* Added option to rotate text in a textbox. See\n  :ref:`textbox_formatting_rotation`. :feature:`638`.\n\n\nRelease 1.2.3 - November 7 2019\n-------------------------------\n\n* Increased allowable worksheet url length from 255 to 2079 characters, as\n  supported in more recent versions of Excel. A lower or user defined limit\n  can be set via the ``max_url_length`` property in the :func:`Workbook`\n  constructor.\n\n* Fixed several issues with hyperlinks in worksheet images.\n\n\nRelease 1.2.2 - October 16 2019\n-------------------------------\n\n* Fixed Python 3.8.0 warnings. :issue:`660`.\n\n\nRelease 1.2.1 - September 14 2019\n---------------------------------\n\n* Added the :func:`add_write_handler` method to allow user defined types to be\n  handled by the :func:`write` method. See :ref:`writing_user_types` for more\n  information. :feature:`631`.\n\n* Add support for East Asian vertical fonts in charts. :feature:`648`.\n\n\nRelease 1.2.0 - August 26 2019\n------------------------------\n\n* Refactored exception handling around the workbook file :func:`close()`\n  method to allow exceptions to be caught and handled. See\n  :ref:`ex_check_close`. Also refactored the code to clean up temp files in\n  the event of an exception. :issue`471` and :issue:`647`.\n\n* Added the option to allow chart fonts to be rotated to 270 degrees to give a\n  stacked orientation. See :ref:`chart_fonts`. :issue:`648`.\n\n\nRelease 1.1.9 - August 19 2019\n------------------------------\n\n* Another fix for issues where zipfile.py raises \"ZIP does not support\n  timestamps before 1980\" exception. :issue:`651`.\n\n\nRelease 1.1.8 - May 5 2019\n--------------------------\n\n* Added ability to combine Doughnut and Pie charts.\n\n* Added gauge chart example which is a combination of a Doughnut and a Pie\n  chart. See :ref:`ex_chart_gauge`.\n\n\nRelease 1.1.7 - April 20 2019\n-----------------------------\n\n* Added docs on :ref:`object_position`.\n\n* Added fix for sizing of cell comment boxes when they cross columns/rows that\n  have size changes that occur after the comment is written. :issue:`403` and\n  :issue:`312`.\n\n* Added fix for the sizing of worksheet objects (images, charts, textboxes)\n  when the underlying cell sizes have changed and the \"object_position\"\n  parameter has been set to 1 \"Move and size with cells\". An additional mode 4\n  has been added to simulate inserting the object in hidden rows.\n  :issue:`618`.\n\n* Added object positioning for charts and textboxes, it was already supported\n  for images. Note, the parameter is now called ``object_position``. The\n  previous parameter name ``positioning`` is deprecated but still supported\n  for images. :issue:`568`.\n\n\nRelease 1.1.6 - April 7 2019\n----------------------------\n\n* Fixed issue where images that started in hidden rows/columns weren't placed\n  correctly in the worksheet. :issue:`613`.\n\n* Fixed the mime-type reported by system ``file(1)``. The mime-type reported\n  by \"file --mime-type\"/magic was incorrect for XlsxWriter files since it\n  expected the ``[Content_types]`` to be the first file in the zip container.\n  :issue:`614`.\n\n\nRelease 1.1.5 - February 22 2019\n--------------------------------\n\n* This version removes support for end of life Pythons 2.5, 2.6, 3.1, 3.2 and\n  3.3. For older, unsupported versions of Python use version 1.1.4 of\n  XlsxWriter.\n\n\nRelease 1.1.4 - February 10 2019\n--------------------------------\n\n* Fix for issues where zipfile.py raises \"ZIP does not support timestamps\n  before 1980\" exception. :issue:`535`.\n\n\nRelease 1.1.3 - February 9 2019\n-------------------------------\n\n* Fix handling of ``'num_format': '0'`` in duplicate formats. :issue:`584`.\n\n\nRelease 1.1.2 - October 20 2018\n-------------------------------\n\n* Fix for issue where ``in_memory`` files weren't compressed. :issue:`573`.\n\n* Fix ``write()`` so that it handles array formulas as documented.\n  :issue:`418`.\n\n* Fix for issue with special characters in worksheet table functions.\n  :issue:`442`.\n\n* Added warnings for input issues in :func:`write_rich_string()` such as blank\n  strings, double formats or insufficient parameters. :issue:`425`.\n\n\nRelease 1.1.1 - September 22 2018\n---------------------------------\n\n* Added comment font name and size options. :issue:`201`.\n\n* Fix for issue when using text boxes in the same workbook as a chartsheet.\n  :issue:`420`.\n\n\nRelease 1.1.0 - September 2 2018\n--------------------------------\n\n* Added functionality to align chart category axis labels. See the\n  ``label_align`` property of the :func:`set_x_axis()` method.\n\n* Added worksheet :func:`hide_row_col_headers()` method to turn off worksheet\n  row and column headings. :issue:`480`.\n\n* Added the :func:`set_tab_ratio()` method to set the ratio between the\n  worksheet tabs and the horizontal slider. :issue:`481`.\n\n* Fixed issue with icon conditional formats when the values were zero.\n  :issue:`565`.\n\nRelease 1.0.9 - August 27 2018\n------------------------------\n\n* Fix for issue with formulas quoted as strings in conditional formats,\n  introduced in version 1.0.7. :issue:`564`.\n\n\nRelease 1.0.8 - August 27 2018\n------------------------------\n\n* Added named exceptions to XlsxWriter. See :ref:`exceptions`.\n\n* Removed the implicit :func:`close()` in the destructor since it wasn't\n  guaranteed to work correctly and raised a confusing exception when any other\n  exception was triggered. **Note that this is a backward incompatible\n  change.** The ``with`` context manager is a better way to close\n  automatically, see :func:`close()`.\n\n* Added border, fill, pattern and gradient formatting options to\n  :func:`set_legend()`. :issue:`545`.\n\n* Added ``top_right`` position to :func:`set_legend()`. :issue:`537`.\n\n\nRelease 1.0.7 - August 16 2018\n------------------------------\n\n* Fix for unicode type error in Python 3. :issue:`554`.\n\n\nRelease 1.0.6 - August 15 2018\n------------------------------\n\n* Added some performance improvements. :pull:`551`.\n\n\nRelease 1.0.5 - May 19 2018\n---------------------------\n\n* Added example of how to subclass the Workbook and Worksheet objects. See\n  :ref:`ex_inheritance1` and :ref:`ex_inheritance2`.\n\n* Added support for WMF and EMF image formats to the Worksheet\n  :func:`add_image` method.\n\n\nRelease 1.0.4 - April 14 2018\n-----------------------------\n\n* Set the xlsx internal file member datetimes to 1980-01-01 00:00:00 like\n  Excel so that apps can produce a consistent binary file once the workbook\n  :func:`set_properties` ``created`` date is set. :pull:`495`.\n\n* Fix for jpeg images that reported unknown height/width due to unusual SOF\n  markers. :issue:`506`.\n\n* Added support for blanks in list autofilter. :issue:`505`.\n\n\nRelease 1.0.3 - April 10 2018\n-----------------------------\n\n* Added Excel 2010 data bar features such as solid fills and control over the\n  display of negative values. See :ref:`working_with_conditional_formats` and\n  :ref:`ex_cond_format`. :feature:`502`.\n\n* Fixed :func:`set_column` parameter names to match docs and other methods.\n  Note, this is a backward incompatible change. :issue:`504`.\n\n* Fixed missing plotarea formatting in pie/doughnut charts.\n\n\nRelease 1.0.2 - October 14 2017\n-------------------------------\n\n* Fix for cases where the hyperlink style added in the previous release didn't\n  work. :feature:`455`.\n\n\nRelease 1.0.1 - October 14 2017\n-------------------------------\n\n* Changed default :func:`write_url` format to the Excel hyperlink style so\n  that it changes when the theme is changed and also so that it indicates that\n  the link has been clicked. :feature:`455`.\n\n\nRelease 1.0.0 - September 16 2017\n---------------------------------\n\n* Added icon sets to conditional formatting. See\n  :ref:`working_with_conditional_formats` and :ref:`ex_cond_format`.\n  :feature:`387`.\n\n\nRelease 0.9.9 - September 5 2017\n--------------------------------\n\n* Added ``stop_if_true`` parameter to conditional formatting. :feature:`386`.\n\n\nRelease 0.9.8 - July 1 2017\n---------------------------\n\n* Fixed issue where spurious deprecation warning was raised in ``-Werror``\n  mode. :issue:`451`.\n\n\nRelease 0.9.7 - June 25 2017\n----------------------------\n\n* Minor bug and doc fixes.\n\n\nRelease 0.9.6 - Dec 26 2016\n---------------------------\n\n* Fix for table with data but without a header. :issue:`405`.\n\n* Add a warning when the number of series in a chart exceeds Excel's limit of\n  1.   :issue:`399`.\n\n\nRelease 0.9.5 - Dec 24 2016\n---------------------------\n\n* Fix for missing `remove_timezone` option in Chart class. :pull:`404` from\n  Thomas Arnhold.\n\n\nRelease 0.9.4 - Dec 2 2016\n--------------------------\n\n* Added user definable removal of timezones in datetimes. See the\n  :func:`Workbook` constructor option ``remove_timezone`` and :ref:`Timezone\n  Handling in XlsxWriter <timezone_handling>`. :issue:`257`.\n\n* Fix duplicate header warning in :func:`add_table` when there is only one\n  user defined header. :issue:`380`.\n\n* Fix for `center_across` property in :func:`add_format`. :issue:`381`.\n\n\nRelease 0.9.3 - July 8 2016\n---------------------------\n\n* Added check to :func:`add_table` to prevent duplicate header names which\n  leads to a corrupt Excel file. :issue:`362`.\n\n\nRelease 0.9.2 - June 13 2016\n----------------------------\n\n* Added workbook :func:`set_size` method to set the workbook window size.\n\n\nRelease 0.9.1 - June 8 2016\n---------------------------\n\n* Added font support to chart :func:`set_table`.\n\n* Documented used of font rotation in chart :ref:`data labels\n  <chart_series_option_data_labels>`. :issue:`337`.\n\n\nRelease 0.9.0 - June 7 2016\n---------------------------\n\n* Added :ref:`trendline properties <chart_series_option_trendline>`:\n  ``intercept``, ``display_equation`` and ``display_r_squared``.\n  :feature:`357`.\n\n\nRelease 0.8.9 - June 1 2016\n---------------------------\n\n* Fix for :func:`insert_image` issue when handling images with zero dpi.\n  :issue:`356`.\n\n\nRelease 0.8.8 - May 31 2016\n---------------------------\n\n* Added workbook :func:`set_custom_property` method to set custom document\n  properties. :feature:`355`.\n\n\nRelease 0.8.7 - May 13 2016\n---------------------------\n\n* Fix for issue when inserting read-only images on Windows.\n  :issue:`352`.\n\n* Added :func:`get_worksheet_by_name()` method to allow the retrieval of a\n  worksheet from a workbook via its name.\n\n* Fixed issue where internal file creation and modification dates were in the\n  local timezone instead of UTC.\n\nRelease 0.8.6 - April 27 2016\n-----------------------------\n\n* Fix for ``external:`` urls where the target/anchor contains spaces.\n  :issue:`350`.\n\n\nRelease 0.8.5 - April 17 2016\n-----------------------------\n\n* Added additional documentation on :ref:`ewx_pandas` and\n  :ref:`pandas_examples`.\n\n* Added fix for :func:`set_center_across` format method.\n\n\nRelease 0.8.4 - January 16 2016\n-------------------------------\n\n* Fix for :func:`write_url` exception when the URL contains two ``#``\n  location/anchors. Note, URLs like this aren't strictly valid and cannot be\n  entered manually in Excel.\n  :issue:`330`.\n\n\nRelease 0.8.3 - January 14 2016\n-------------------------------\n\n* Added options to configure chart axis tick placement. See :func:`set_x_axis()`.\n\n\nRelease 0.8.2 - January 13 2016\n-------------------------------\n\n* Added transparency option to solid fill colors in chart areas\n  (:ref:`chart_formatting_fill`).\n  :feature:`298`.\n\n\nRelease 0.8.1 - January 12 2016\n-------------------------------\n\n* Added option to set chart tick interval.\n  :feature:`251`.\n\n\nRelease 0.8.0 - January 10 2016\n-------------------------------\n\n* Added additional documentation on :ref:`working_with_formulas`.\n\n\nRelease 0.7.9 - January 9 2016\n------------------------------\n\n* Added chart pattern fills, see :ref:`chart_formatting_pattern` and\n  :ref:`ex_chart_pattern`.\n  :feature:`268`.\n\n\nRelease 0.7.8 - January 6 2016\n------------------------------\n\n* Add checks for valid and non-duplicate worksheet table names.\n  :issue:`319`.\n\n\nRelease 0.7.7 - October 19 2015\n-------------------------------\n\n* Added support for table header formatting and a fix for wrapped lines in the\n  header.\n  :feature:`287`.\n\n\nRelease 0.7.6 - October 7 2015\n------------------------------\n\n* Fix for images with negative offsets.\n  :issue:`273`.\n\n\nRelease 0.7.5 - October 4 2015\n------------------------------\n\n* Allow hyperlinks longer than 255 characters when the link and anchor are\n  each less than or equal to 255 characters.\n\n* Added ``hyperlink_base`` document property.\n  :feature:`306`.\n\n\nRelease 0.7.4 - September 29 2015\n---------------------------------\n\n* Added option to allow data validation input messages with the 'any' validate\n  parameter.\n\n* Fixed url encoding of links to external files and directories.\n  :issue:`278`.\n\n\nRelease 0.7.3 - May 7 2015\n--------------------------\n\n* Added documentation on :ref:`ewx_pandas` and :ref:`pandas_examples`.\n\n* Added support for ``with`` context manager.\n  :PR`239`.\n\n\nRelease 0.7.2 - March 29 2015\n-----------------------------\n\n* Added support for textboxes in worksheets. See :func:`insert_textbox()` and\n  :ref:`working_with_textboxes` for more details.\n  :feature:`107`.\n\n\nRelease 0.7.1 - March 23 2015\n-----------------------------\n\n* Added gradient fills to chart objects such as the plot area of columns. See\n  :ref:`chart_formatting_gradient` and :ref:`ex_chart_gradient`.\n  :feature:`228`.\n\n\nRelease 0.7.0 - March 21 2015\n-----------------------------\n\n* Added support for display units in chart axes. See :func:`set_x_axis()`.\n  :feature:`185`.\n\n* Added ``nan_inf_to_errors`` :func:`Workbook` constructor option to allow\n  mapping of Python `nan/inf` value to Excel error formulas in ``write()`` and\n  ``write_number()``.\n  :feature:`150`.\n\n\nRelease 0.6.9 - March 19 2015\n-----------------------------\n\n* Added support for clustered category charts. See :ref:`ex_chart_clustered`\n  for details.\n  :feature:`180`.\n\n* Refactored the :ref:`format` and formatting documentation.\n\nRelease 0.6.8 - March 17 2015\n-----------------------------\n\n* Added option to combine two different chart types. See the\n  :ref:`chart_combined_charts` section and :ref:`ex_chart_combined` and\n  :ref:`ex_chart_pareto` for more details.\n  :feature:`72`.\n\n\nRelease 0.6.7 - March 1 2015\n----------------------------\n\n* Added option to add function value in worksheet :func:`add_table`.\n  :feature:`216`.\n\n* Fix for A1 row/col numbers below lower bound.\n  :issue:`212`.\n\n\nRelease 0.6.6 - January 16 2015\n-------------------------------\n\n* Fix for incorrect shebang line in `vba_extract.py` packaged in wheel.\n  :issue:`211`.\n\n* Added docs and example for diagonal cell border.\n  See :ref:`ex_diagonal_border`.\n\n\nRelease 0.6.5 - December 31 2014\n--------------------------------\n\n* Added worksheet quoting for chart names in lists.\n  :issue:`205`.\n\n* Added docs on how to find and set VBA codenames.\n  :issue:`202`.\n\n* Fix Python3 issue with unused charts.\n  :issue:`200`.\n\n* Enabled warning for missing category is scatter chart.\n  :issue:`197`.\n\n* Fix for upper chart style limit. Increased the chart style limit from\n  42 to the correct 48.\n  :issue:`192`.\n\n* Raise warning if a chart is inserted more than once.\n  :issue:`184`.\n\n\nRelease 0.6.4 - November 15 2014\n--------------------------------\n\n* Fix for issue where fonts applied to data labels raised exception.\n  :issue:`179`.\n\n* Added option to allow explicit text axis types for charts, similar to date\n  axes.\n  :feature:`178`.\n\n* Fix for issue where the bar/column chart gap and overlap weren't\n  applied to the secondary axis.\n  :issue:`177`.\n\n\nRelease 0.6.3 - November 6 2014\n-------------------------------\n\n* Added support for adding VBA macros to workbooks. See :ref:`macros`.\n  :feature:`126`.\n\n\nRelease 0.6.2 - November 1 2014\n-------------------------------\n\n* Added chart axis line and fill properties.\n  :feature:`88`.\n\n\nRelease 0.6.1 - October 29 2014\n-------------------------------\n\n* Added chart specific handling of data label positions since not all positions\n  are available for all chart types.\n  :issue:`170`.\n\n* Added number formatting\n  (:issue:`130`),\n  font handling, separator and legend key for data labels.\n  See :ref:`chart_series_option_data_labels`\n\n* Fix for non-quoted worksheet names containing spaces and non-alphanumeric\n  characters.\n  :issue:`167`.\n\n\nRelease 0.6.0 - October 15 2014\n-------------------------------\n\n* Added option to add images to headers and footers. See\n  :ref:`ex_headers_footers`.\n  :feature:`133`.\n\n* Fixed issue where non 96dpi images weren't scaled properly in Excel.\n  :issue:`164`.\n\n* Added option to not scale header/footer with page. See :func:`set_header`.\n  :feature:`134`.\n\n\nRelease 0.5.9 - October 11 2014\n-------------------------------\n\n* Removed ``egg_base`` requirement from ``setup.cfg`` which was preventing\n  installation on Windows.\n  :issue:`162`.\n\n* Fix for issue where X axis title formula was overwritten by the Y axis\n  title.\n  :issue:`161`.\n\n\nRelease 0.5.8 - September 28 2014\n---------------------------------\n\n* Added support for Doughnut charts.\n  :feature:`157`.\n\n* Added support for wheel packages.\n  :feature:`156`.\n\n* Made the exception handling in ``write()`` clearer for unsupported types so\n  that it raises a more accurate TypeError instead of a ValueError.\n  :issue:`153`.\n\n\nRelease 0.5.7 - August 13 2014\n------------------------------\n\n* Added support for :func:`insert_image` images from byte streams to allow\n  images from URLs and other sources.\n  :feature:`118`.\n\n* Added :func:`write_datetime` support for datetime.timedelta.\n  :feature:`128`.\n\n\nRelease 0.5.6 - July 22 2014\n----------------------------\n\n* Fix for spurious exception message when :func:`close()` isn't used.\n  :issue:`131`.\n\n* Fix for formula string values that look like numbers.\n  :issue:`122`.\n\n* Clarify :func:`print_area()` documentation for complete row/column ranges.\n  :issue:`139`.\n\n* Fix for unicode strings in data validation lists.\n  :issue:`135`.\n\n\nRelease 0.5.5 - May 6 2014\n--------------------------\n\n* Fix for incorrect chart offsets in :func:`insert_chart()` and\n  :func:`set_size()`.\n\nRelease 0.5.4 - May 4 2014\n--------------------------\n\n* Added image positioning option to :func:`insert_image` to control how\n  images are moved in relation to surrounding cells.\n  :feature:`117`.\n\n* Fix for chart ``error_bar`` exceptions.\n  :issue:`115`.\n\n* Added clearer reporting of nested exceptions in ``write()`` methods.\n  :pull:`108`.\n\n* Added support for ``inside_base`` data label position in charts.\n\nRelease 0.5.3 - February 20 2014\n--------------------------------\n\n* Added checks and warnings for data validation limits.\n  :issue:`89`.\n\n* Added option to add hyperlinks to images. Thanks to Paul Tax.\n\n* Added Python 3 Http server example. Thanks to Krystian Rosinski.\n\n* Added :func:`set_calc_mode` method to control automatic calculation of\n  formulas when worksheet is opened. Thanks to Chris Tompkinson.\n\n* Added :func:`use_zip64` method to allow ZIP64 extensions when writing\n  very large files.\n\n* Fix to handle '0' and other number like strings as number formats.\n  :issue:`103`.\n\n* Fix for missing images in ``in_memory`` mode.\n  :issue:`102`.\n\n\nRelease 0.5.2 - December 31 2013\n--------------------------------\n\n* Added date axis handling to charts. See :ref:`ex_chart_date_axis`.\n  :feature:`73`.\n\n* Added support for non-contiguous chart ranges.\n  :feature:`44`.\n\n* Fix for low byte and control characters in strings.\n  :issue:`86`.\n\n* Fix for chart titles with exclamation mark.\n  :issue:`83`.\n\n* Fix to remove duplicate :func:`set_column` entries.\n  :issue:`82`.\n\n\nRelease 0.5.1 - December 2 2013\n-------------------------------\n\n* Added interval unit option for category axes.\n  :feature:`69`.\n\n* Fix for axis name font rotation.\n\n* Fix for several minor issues with Pie chart legends.\n\n\nRelease 0.5.0 - November 17 2013\n--------------------------------\n\n* Added :ref:`Chartsheets <Chartsheet>` to allow single worksheet charts.\n  :feature:`10`.\n\n\nRelease 0.4.9 - November 17 2013\n--------------------------------\n\n* Added :ref:`chart object positioning and sizing <chart_layout>` to allow\n  positioning of plotarea, legend, title and axis names.\n  :feature:`66`.\n\n* Added :func:`set_title()` ``none`` option to turn off automatic titles.\n\n* Improved :func:`define_name()` name validation.\n\n* Fix to prevent modification of user parameters in\n  :func:`conditional_format()`.\n\n\nRelease 0.4.8 - November 13 2013\n--------------------------------\n\n* Added ``in_memory`` :func:`Workbook` constructor option to allow XlsxWriter\n  to work on Google App Engine.\n  :feature:`28`.\n\n\nRelease 0.4.7 - November 9 2013\n-------------------------------\n\n* Added fix for markers on non-marker scatter charts.\n  :issue:`62`.\n\n* Added custom error bar option. Thanks to input from Alex Birmingham.\n\n* Changed Html docs to Bootstrap theme.\n\n* Added :ref:`ex_merge_rich`.\n\n\nRelease 0.4.6 - October 23 2013\n-------------------------------\n\n* Added font formatting to chart legends.\n\n\nRelease 0.4.5 - October 21 2013\n-------------------------------\n\n* Added ``position_axis`` chart axis option.\n\n* Added optional list handling for chart names.\n\n\nRelease 0.4.4 - October 16 2013\n-------------------------------\n\n* Documented use of :ref:`cell utility <cell_utility>` functions.\n\n* Fix for tables added in non-sequential order. Closes\n  :issue:`51` reported by calfzhou.\n\n\nRelease 0.4.3 - September 12 2013\n---------------------------------\n\n* Fix for comments overlying columns with non-default width.\n  :issue:`45`.\n\n\nRelease 0.4.2 - August 30 2013\n------------------------------\n\n* Added a default blue underline hyperlink format for :func:`write_url()`.\n\n* Added :func:`Workbook` constructor options ``strings_to_formulas`` and\n  ``strings_to_urls`` to override default conversion of strings in write().\n\n\nRelease 0.4.1 - August 28 2013\n------------------------------\n\n* Fix for charts and images that cross rows and columns that are hidden or\n  formatted but which don't have size changes. :issue:`42` reported by\n  Kristian Stobbe.\n\n\nRelease 0.4.0 - August 26 2013\n------------------------------\n\n* Added more generic support for JPEG files. :issue:`40` reported by Simon\n  Breuss.\n\n* Fix for harmless Python 3 installation warning. :issue:`41` reported by James\n  Reeves.\n\n\nRelease 0.3.9 - August 24 2013\n------------------------------\n\n* Added fix for minor issue with :func:`insert_image` for images that extend\n  over several cells.\n\n* Added fix to ensure formula calculation on load regardless of Excel version.\n\n\nRelease 0.3.8 - August 23 2013\n------------------------------\n\n* Added handling for Decimal(), Fraction() and other float types to the\n  :func:`write()` function.\n\n* Added Python 2.5 and Jython support. Thanks to Jonas Diemer for the patch.\n\n\nRelease 0.3.7 - August 16 2013\n------------------------------\n\n* Added :func:`write_boolean()` function to write Excel boolean values.\n  :feature:`37`. Also added explicit handling of Python bool values to the\n  :func:`write()` function.\n\n* Changed :func:`Workbook` constructor option\n  ``strings_to_numbers`` default option to False so that there is no implicit\n  conversion of numbers in strings to numbers. The previous behavior can be\n  obtained by setting the constructor option to True.\n  **Note** This is a backward incompatibility.\n\n\nRelease 0.3.6 - July 26 2013\n-----------------------------\n\n* Simplified import based on a suggestion from John Yeung.\n  :feature:`26`.\n\n* Fix for NAN/INF converted to invalid numbers in write(). :issue:`30`.\n\n* Added :func:`Workbook` constructor option ``strings_to_numbers`` to\n  override default conversion of number strings to numbers in write().\n\n* Added :func:`Workbook` constructor option ``default_date_format`` to\n  allow a default date format string to be set.\n  :feature:`5`.\n\n\nRelease 0.3.5 - June 28 2013\n-----------------------------\n\n* Reverted back to using codecs for file encoding (versions <= 0.3.1) to avoid\n  numerous UTF-8 issues in Python2/3.\n\n\nRelease 0.3.4 - June 27 2013\n-----------------------------\n\n* Added Chart line smoothing option. Thanks to Dieter Vandenbussche.\n\n* Added Http Server example (:ref:`ex_http_server`). Thanks to\n  Alexander Afanasiev.\n\n* Fixed inaccurate column width calculation. Closes :issue:`27` Thanks to John Yeung.\n\n* Added chart axis font rotation.\n\n\nRelease 0.3.3 - June 10 2013\n-----------------------------\n\n* Minor packaging fixes.\n  :issue:`14` and :issue:`19`.\n\n\n* Fixed explicit UTF-8 file encoding for Python 3.\n  :pull:`15` from Alexandr Shadchin.\n\n* Fixed invalid string formatting resulted in misleading stack trace.\n  :pull:`21` from Andrei Korostelev.\n\n\nRelease 0.3.2 - May 1 2013\n-----------------------------\n\n* Speed optimizations. The module is now 10-15% faster on average.\n\n\nRelease 0.3.1 - April 27 2013\n-----------------------------\n\n* Added chart support. See the :ref:`chart_class`, :ref:`working_with_charts`\n  and :ref:`chart_examples`.\n\n\nRelease 0.3.0 - April 7 2013\n-----------------------------\n\n* Added worksheet sparklines. See :ref:`sparklines`, :ref:`ex_sparklines1` and\n  :ref:`ex_sparklines2`\n\n\nRelease 0.2.9 - April 7 2013\n-----------------------------\n\n* Added worksheet tables. See :ref:`tables` and :ref:`ex_tables`.\n\n* Tested with the new Python stable releases 2.7.4 and 3.3.1. All tests now\n  pass in the following versions:\n\n    * Python 2.6\n    * Python 2.7.2\n    * Python 2.7.3\n    * Python 2.7.4\n    * Python 3.1\n    * Python 3.2\n    * Python 3.3.0\n    * Python 3.3.1\n\n* There are now over 700 unit tests including more than 170 tests that\n  compare against the output of Excel.\n\n\nRelease 0.2.8 - April 4 2013\n-----------------------------\n\n* Added worksheet outlines and grouping. See :ref:`outlines`.\n\n\nRelease 0.2.7 - April 3 2013\n-----------------------------\n\n* Added :func:`set_default_row` method. See :ref:`ex_hide_row_col`.\n\n* Added hide_row_col.py, hide_sheet.py and text_indent.py examples.\n\n\nRelease 0.2.6 - April 1 2013\n-----------------------------\n\n* Added :func:`freeze_panes` and :func:`split_panes` methods.\n  See :ref:`ex_panes` .\n\n* Added :func:`set_selection` method to select worksheet cell or range of\n  cells.\n\n\nRelease 0.2.5 - April 1 2013\n-----------------------------\n\n* Added additional :func:`Workbook` parameters ``'tmpdir'`` and\n  ``'date_1904'``.\n\n\nRelease 0.2.4 - March 31 2013\n-----------------------------\n\n* Added :func:`Workbook` ``'constant_memory'`` constructor property to\n  minimize memory usage when writing large files. See :ref:`memory_perf`\n  for more details.\n\n* Fixed bug with handling of UTF-8 strings in worksheet names (and probably\n  some other places as well). Reported by Josh English.\n\n* Fixed bug where temporary directory used to create xlsx files wasn't\n  cleaned up after program close.\n\n\nRelease 0.2.3 - March 27 2013\n-----------------------------\n\n* Fixed bug that was killing performance for medium sized files. The module\n  is now 10x faster than previous versions. Reported by John Yeung.\n\n\nRelease 0.2.2 - March 27 2013\n-----------------------------\n\n* Added worksheet data validation options. See the :func:`data_validation`\n  method, :ref:`working_with_data_validation` and :ref:`ex_data_valid`.\n\n* There are now over 600 unit tests including more than 130 tests that\n  compare against the output of Excel.\n\n\nRelease 0.2.1 - March 25 2013\n-----------------------------\n\n* Added support for datetime.datetime, datetime.date and datetime.time\n  to the :func:`write_datetime` method. :issue:`3`.\n  Thanks to Eduardo (eazb) and Josh English for the prompt.\n\n\nRelease 0.2.0 - March 24 2013\n-----------------------------\n\n* Added conditional formatting. See the :func:`conditional_format` method,\n  :ref:`working_with_conditional_formats` and :ref:`ex_cond_format`.\n\n\nRelease 0.1.9 - March 19 2013\n-----------------------------\n\n* Added Python 2.6 support. All tests now pass in the following versions:\n\n    * Python 2.6\n    * Python 2.7.2\n    * Python 2.7.3\n    * Python 3.1\n    * Python 3.2\n    * Python 3.3.0\n\n\nRelease 0.1.8 - March 18 2013\n-----------------------------\n\n* Fixed Python 3 support.\n\n\nRelease 0.1.7 - March 18 2013\n-----------------------------\n\n* Added the option to write cell comments to a worksheet. See\n  :func:`write_comment` and :ref:`cell_comments`.\n\n\nRelease 0.1.6 - March 17 2013\n-----------------------------\n\n* Added :func:`insert_image` worksheet method to support inserting PNG and\n  JPEG images into a worksheet. See also the example program\n  :ref:`ex_insert_image`.\n\n* There are now over 500 unit tests including more than 100 tests that\n  compare against the output of Excel.\n\n\nRelease 0.1.5 - March 10 2013\n-----------------------------\n\n* Added the :func:`write_rich_string` worksheet method to allow writing of\n  text with multiple formats to a cell. Also added example program:\n  :ref:`ex_rich_strings`.\n\n* Added the :func:`hide` worksheet method to hide worksheets.\n\n* Added the :func:`set_first_sheet()` worksheet method.\n\n\nRelease 0.1.4 - March 8 2013\n----------------------------\n\n* Added the :func:`protect` worksheet method to allow protection of cells\n  from editing. Also added example program: :ref:`ex_protection`.\n\n\nRelease 0.1.3 - March 7 2013\n----------------------------\n\n* Added worksheet methods:\n\n    * :func:`set_zoom` for setting worksheet zoom levels.\n    * :func:`right_to_left` for middle eastern versions of Excel.\n    * :func:`hide_zero` for hiding zero values in cells.\n    * :func:`set_tab_color` for setting the worksheet tab color.\n\n\nRelease 0.1.2 - March 6 2013\n----------------------------\n\n* Added autofilters. See :ref:`working_with_autofilters` for more details.\n\n* Added the :func:`write_row` and :func:`write_column` worksheet methods.\n\n\nRelease 0.1.1 - March 3 2013\n----------------------------\n\n* Added the :func:`write_url` worksheet method for writing hyperlinks to\n  a worksheet.\n\n\nRelease 0.1.0 - February 28 2013\n--------------------------------\n\n* Added the :func:`set_properties` workbook method for setting document\n  properties.\n\n* Added several new examples programs with documentation. The examples now\n  include:\n\n    * array_formula.py\n    * cell_indentation.py\n    * datetimes.py\n    * defined_name.py\n    * demo.py\n    * doc_properties.py\n    * headers_footers.py\n    * hello_world.py\n    * merge1.py\n    * tutorial1.py\n    * tutorial2.py\n    * tutorial3.py\n    * unicode_polish_utf8.py\n    * unicode_shift_jis.py\n\nRelease 0.0.9 - February 27 2013\n--------------------------------\n\n* Added the :func:`define_name` method to create defined names and ranges\n  in a workbook or worksheet.\n\n* Added the :func:`worksheets` method as an accessor for the worksheets in a\n  workbook.\n\n\nRelease 0.0.8 - February 26 2013\n--------------------------------\n\n* Added the :func:`merge_range` method to merge worksheet cells.\n\n\nRelease 0.0.7 - February 25 2013\n--------------------------------\n\n* Added final page setup methods to complete the page setup section.\n\n    * :func:`print_area`\n    * :func:`fit_to_pages`\n    * :func:`set_start_page`\n    * :func:`set_print_scale`\n    * :func:`set_h_pagebreaks`\n    * :func:`set_v_pagebreaks`\n\n\nRelease 0.0.6 - February 22 2013\n--------------------------------\n\n* Added page setup method.\n\n    * :func:`print_row_col_headers`\n\n\nRelease 0.0.5 - February 21 2013\n--------------------------------\n\n* Added page setup methods.\n\n    * :func:`repeat_rows`\n    * :func:`repeat_columns`\n\n\nRelease 0.0.4 - February 20 2013\n--------------------------------\n\n* Added Python 3 support with help from John Evans. Tested with:\n\n    * Python-2.7.2\n    * Python-2.7.3\n    * Python-3.2\n    * Python-3.3.0\n\n* Added page setup methods.\n\n    * :func:`center_horizontally`\n    * :func:`center_vertically`\n    * :func:`set_header`\n    * :func:`set_footer`\n    * :func:`hide_gridlines`\n\n\nRelease 0.0.3 - February 19 2013\n--------------------------------\n\n* Added page setup method.\n\n    * :func:`set_margins`\n\n\nRelease 0.0.2 - February 18 2013\n--------------------------------\n\n* Added page setup methods.\n\n    * :func:`set_landscape`\n    * :func:`set_portrait`\n    * :func:`set_page_view`\n    * :func:`set_paper`\n    * :func:`print_across`\n\n\nRelease 0.0.1 - February 17 2013\n--------------------------------\n\n* First public release.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.3173828125,
          "content": "BSD 2-Clause License\n\nCopyright (c) 2013-2024, John McNamara <jmcnamara@cpan.org>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2001953125,
          "content": "include README.rst\ninclude Changes\ninclude LICENSE.txt\ninclude xlsxwriter/*.py\ninclude examples/*.py\ninclude examples/*.txt\ninclude examples/*.bin\ninclude docs/readme.html\nrecursive-include docs/_static *\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.5966796875,
          "content": "#\n# Simple Makefile for the XlsxWriter project.\n#\n# SPDX-License-Identifier: BSD-2-Clause\n# Copyright 2013-2024, John McNamara, jmcnamara@cpan.org\n#\n\n.PHONY: docs\n\ndocs doc:\n\t@make -C dev/docs html\n\t@open dev/docs/build/html/index.html\n\ndocs_external:\n\t@../build_readthedocs.sh\n\nlinkcheck:\n\t@make -C dev/docs linkcheck\n\nclean:\n\t@make -C dev/docs clean\n\ninstall:\n\t@python setup.py install\n\t@rm -rf build\n\ntest:\n\t@~/.pythonbrew/pythons/Python-3.12.7/bin/python3.12 -m unittest discover\n\n# Test with stable Python 3 releases.\ntestpythons:\n\t@echo \"Testing with Python 3.6.6:\"\n\t@~/.pythonbrew/pythons/Python-3.6.6/bin/py.test -q\n\t@echo \"Testing with Python 3.7.0:\"\n\t@~/.pythonbrew/pythons/Python-3.7.0/bin/py.test -q\n\t@echo \"Testing with Python 3.8.0:\"\n\t@~/.pythonbrew/pythons/Python-3.8.0/bin/py.test -q\n\t@echo \"Testing with Python 3.9.0:\"\n\t@~/.pythonbrew/pythons/Python-3.9.0/bin/py.test -q\n\t@echo \"Testing with Python 3.10.0:\"\n\t@~/.pythonbrew/pythons/Python-3.10.0/bin/py.test -q\n\t@echo \"Testing with Python 3.11.1:\"\n\t@~/.pythonbrew/pythons/Python-3.11.1/bin/py.test -q\n\t@echo \"Testing with Python 3.12.7:\"\n\t@~/.pythonbrew/pythons/Python-3.12.7/bin/py.test -q\n\t@echo \"Testing with Python 3.13.0:\"\n\t@~/.pythonbrew/pythons/Python-3.13.0/bin/py.test -q\n\ntest_flake8:\n\t@ls -1 xlsxwriter/*.py | egrep -v \"theme|__init__\" | xargs flake8 --show-source --max-line-length=88 --ignore=E203,W503\n\t@flake8 --ignore=E501 xlsxwriter/theme.py\n\t@find xlsxwriter/test -name \\*.py | xargs flake8 --ignore=E501,F841,W503\n\nlint:\n\t@ruff check xlsxwriter/*.py\n\t@ruff check xlsxwriter/test --ignore=E501,F841\n\t@ruff check examples\n\t@black --check xlsxwriter/ examples/\n\t@pylint xlsxwriter/*.py\n\t@pylint --rcfile=examples/.pylintrc examples/*.py\n\t@isort --check --diff --profile black xlsxwriter/ examples/\n\ntags:\n\t$(Q)rm -f TAGS\n\t$(Q)etags xlsxwriter/*.py\n\ntestwarnings:\n\t@python -Werror -c 'from xlsxwriter import Workbook'\n\nspellcheck:\n\t@for f in dev/docs/source/*.rst;           do aspell --lang=en_US --check $$f; done\n\t@for f in *.md;                            do aspell --lang=en_US --check $$f; done\n\t@for f in xlsxwriter/*.py;                 do aspell --lang=en_US --check $$f; done\n\t@for f in xlsxwriter/test/comparison/*.py; do aspell --lang=en_US --check $$f; done\n\t@for f in examples/*.py;                   do aspell --lang=en_US --check $$f; done\n\t@aspell --lang=en_US --check Changes\n\nreleasecheck:\n\t@dev/release/release_check.sh\n\nrelease: releasecheck\n\t@git push origin main\n\t@git push --tags\n\n\t@rm -rf dist/ build/ XlsxWriter.egg-info/\n\t@python3 setup.py sdist bdist_wheel\n\t@twine upload dist/*\n\t@rm -rf dist/ build/ XlsxWriter.egg-info/\n\n\t@../build_readthedocs.sh\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.669921875,
          "content": "XlsxWriter\n==========\n\n**XlsxWriter** is a Python module for writing files in the Excel 2007+ XLSX\nfile format.\n\nXlsxWriter can be used to write text, numbers, formulas and hyperlinks to\nmultiple worksheets and it supports features such as formatting and many more,\nincluding:\n\n* 100% compatible Excel XLSX files.\n* Full formatting.\n* Merged cells.\n* Defined names.\n* Charts.\n* Autofilters.\n* Data validation and drop down lists.\n* Conditional formatting.\n* Worksheet PNG/JPEG/GIF/BMP/WMF/EMF images.\n* Rich multi-format strings.\n* Cell comments.\n* Integration with Pandas and Polars.\n* Textboxes.\n* Support for adding Macros.\n* Memory optimization mode for writing large files.\n\nIt supports Python 3.4+ and PyPy3 and uses standard libraries only.\n\nHere is a simple example:\n\n.. code-block:: python\n\n   import xlsxwriter\n\n\n   # Create an new Excel file and add a worksheet.\n   workbook = xlsxwriter.Workbook('demo.xlsx')\n   worksheet = workbook.add_worksheet()\n\n   # Widen the first column to make the text clearer.\n   worksheet.set_column('A:A', 20)\n\n   # Add a bold format to use to highlight cells.\n   bold = workbook.add_format({'bold': True})\n\n   # Write some simple text.\n   worksheet.write('A1', 'Hello')\n\n   # Text with formatting.\n   worksheet.write('A2', 'World', bold)\n\n   # Write some numbers, with row/column notation.\n   worksheet.write(2, 0, 123)\n   worksheet.write(3, 0, 123.456)\n\n   # Insert an image.\n   worksheet.insert_image('B5', 'logo.png')\n\n   workbook.close()\n\n.. image:: https://raw.github.com/jmcnamara/XlsxWriter/master/dev/docs/source/_images/demo.png\n\nSee the full documentation at: https://xlsxwriter.readthedocs.io\n\nRelease notes: https://xlsxwriter.readthedocs.io/changes.html\n\n"
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0224609375,
          "content": "[wheel]\nuniversal = 0\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.62890625,
          "content": "import sys\nimport subprocess\nfrom warnings import warn\n\ntry:\n    from setuptools import setup, Command\nexcept ImportError:\n    from distutils.core import setup, Command\n\nif sys.version_info < (3, 6):\n    warn(\"The minimum Python version supported by XlsxWriter is 3.6\")\n    sys.exit()\n\n\nclass PyTest(Command):\n\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        errno = subprocess.call(['python',  '-m', 'unittest', 'discover'])\n        raise SystemExit(errno)\n\nsetup(\n    name='XlsxWriter',\n    version='3.2.0',\n    author='John McNamara',\n    author_email='jmcnamara@cpan.org',\n    url='https://github.com/jmcnamara/XlsxWriter',\n    packages=['xlsxwriter'],\n    scripts=['examples/vba_extract.py'],\n    cmdclass={'test': PyTest},\n    license='BSD-2-Clause',\n    description='A Python module for creating Excel XLSX files.',\n    long_description=open('README.rst').read(),\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'License :: OSI Approved :: BSD License',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3 :: Only',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: 3.13',\n    ],\n    python_requires='>=3.6',\n)\n"
        },
        {
          "name": "xlsxwriter",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}