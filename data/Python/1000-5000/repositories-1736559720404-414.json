{
  "metadata": {
    "timestamp": 1736559720404,
    "page": 414,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "codemayq/chinese-chatbot-corpus",
      "stars": 4045,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1884765625,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n*.log.*\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n.idea\nraw_chat_corpus/\n*.zip\nclean_chat_corpus/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "config.py",
          "type": "blob",
          "size": 1.20703125,
          "content": "import os\n\n\nclass Config(object):\n    encoding = \"utf-8\"\n\n    clean_chat_corpus_root = \"clean_chat_corpus\"\n    raw_chat_corpus_root = \"/Users/codingma/Downloads/raw_chat_corpus\"\n\n    raw_chatterbot_corpus_root = os.path.join(raw_chat_corpus_root, \"chatterbot-1k\", \"chinese\")\n    raw_douban_corpus_root = os.path.join(raw_chat_corpus_root, \"douban-multiturn-100w\")\n    raw_ptt_corpus_path_v1 = os.path.join(raw_chat_corpus_root, \"ptt-42w\", \"Gossiping-QA-Dataset.txt\")\n    raw_ptt_corpus_path_v2 = os.path.join(raw_chat_corpus_root, \"ptt-77w\", \"Gossiping-QA-Dataset-2_0.csv\")\n\n    raw_qingyun_corpus_path = os.path.join(raw_chat_corpus_root, \"qingyun-11w\", \"12万对话语料青云库.csv\")\n    raw_subtitle_corpus_path = os.path.join(raw_chat_corpus_root, \"subtitle-useless\", \"dgk_shooter_min.conv\")\n    raw_tieba_corpus_path = os.path.join(raw_chat_corpus_root, \"tieba-305w\", \"tieba.dialogues\")\n\n    raw_weibo_post_corpus_path = os.path.join(raw_chat_corpus_root, \"weibo-400w\", \"stc_weibo_train_post\")\n    raw_weibo_response_corpus_path = os.path.join(raw_chat_corpus_root, \"weibo-400w\", \"stc_weibo_train_response\")\n\n    raw_xiaohuangji_corpus_path = os.path.join(raw_chat_corpus_root, \"xiaohuangji-40w\", \"xiaohuangji50w_nofenci.conv\")\n"
        },
        {
          "name": "language",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 0.9521484375,
          "content": "import os\n\nfrom config import Config\nfrom process_pipelines.chatterbot import chatterbot_process_pipeline\nfrom process_pipelines.douban import douban_process_pipeline\nfrom process_pipelines.ptt import ptt_process_pipeline\nfrom process_pipelines.qingyun import qingyun_process_pipeline\nfrom process_pipelines.subtitle import subtitle_process_pipeline\nfrom process_pipelines.tieba import tieba_process_pipeline\nfrom process_pipelines.weibo import weibo_process_pipeline\nfrom process_pipelines.xiaohuangji import xiaohuangji_process_pipeline\n\n\ndef process_all_corpus():\n    if not os.path.exists(Config.clean_chat_corpus_root):\n        os.mkdir(Config.clean_chat_corpus_root)\n\n    douban_process_pipeline()\n    chatterbot_process_pipeline()\n    ptt_process_pipeline()\n    qingyun_process_pipeline()\n    subtitle_process_pipeline()\n    tieba_process_pipeline()\n    weibo_process_pipeline()\n    xiaohuangji_process_pipeline()\n\n\nif __name__ == '__main__':\n    process_all_corpus()\n"
        },
        {
          "name": "process_pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 4.9453125,
          "content": "# 说明\n该库是对目前市面上已有的开源中文聊天语料的搜集和系统化整理工作\n\n该库搜集了包含\n- chatterbot\n- 豆瓣多轮\n- PTT八卦语料\n- 青云语料\n- 电视剧对白语料\n- 贴吧论坛回帖语料\n- 微博语料\n- 小黄鸡语料\n\n共8个公开闲聊常用语料和短信，白鹭时代问答等语料。\n\n并对8个常见语料的数据进行了统一化规整和处理，达到直接可以粗略使用的目的。\n\n**使用该项目，即可对所有的聊天语料进行一次性的处理和统一下载，不需要到处自己去搜集下载和分别处理各种不同的格式。**\n\n# 环境\npython3\n# 处理过程\n将各个来源的语料按照其原格式进行提取，提取后进行繁体字转换，然后统一变成一轮一轮的对话。\n# 数据来源及说明\n语料名称 | 语料数量 | 语料来源说明 | 语料特点 | 语料样例 | 是否已分词\n---|---|---|---|---|---\nchatterbot | 560 | 开源项目 | 按类型分类，质量较高  | Q:你会开心的 A:幸福不是真正的可预测的情绪。 | 否\ndouban（豆瓣多轮） | 352W | 来自北航和微软的paper, 开源项目 | 噪音相对较少，原本是多轮（平均7.6轮）  | Q:烟台 十一 哪 好玩 A:哪 都 好玩 · · · · | 是\nptt（PTT八卦语料） | 77W（v1版本42W） | 开源项目，台湾PTT论坛八卦版 | 繁体，语料较生活化，有噪音  | Q:为什么乡民总是欺负国高中生呢QQ\tA:如果以为选好科系就会变成比尔盖兹那不如退学吧  | 否\nqingyun（青云语料） | 10W | 某聊天机器人交流群 | 相对不错，生活化  | Q:看来你很爱钱 \t A:噢是吗？那么你也差不多了 | 否\nsubtitle（电视剧对白语料） | 274W | 开源项目，来自爬取的电影和美剧的字幕 | 有一些噪音，对白不一定是严谨的对话，原本是多轮（平均5.3轮）  | Q:京戏里头的人都是不自由的\tA:他们让人拿笼子给套起来了了 | 否\ntieba（贴吧论坛回帖语料） | 232W | 偶然找到的 | 多轮，有噪音  | Q:前排，鲁迷们都起床了吧\tA:标题说助攻，但是看了那球，真是活生生的讽刺了 | 否\nweibo（微博语料） | 443W | 来自华为的paper | 仍有一些噪音  | Q:北京的小纯洁们，周日见。#硬汉摆拍清纯照# A:嗷嗷大湿的左手在干嘛，看着小纯洁撸么。 | 否\nxiaohuangji（小黄鸡语料） | 45W | 原人人网项目语料 | 有一些不雅对话，少量噪音 | Q:你谈过恋爱么\tA:谈过，哎，别提了，伤心..。 | 否\n\n语料名称 | 语料原始URL（即出处，尊重原始版权） \n---|---\nchatterbot | https://github.com/gunthercox/chatterbot-corpus/tree/master/chatterbot_corpus/data/chinese\ndouban（豆瓣多轮） | https://github.com/MarkWuNLP/MultiTurnResponseSelection \nptt（PTT八卦语料）| https://github.com/zake7749/Gossiping-Chinese-Corpus \nqingyun（青云语料） | 无 \nsubtitle（电视剧对白语料） | https://github.com/fateleak/dgk_lost_conv \ntieba（贴吧论坛回帖语料）  | https://pan.baidu.com/s/1mUknfwy1nhSM7XzH8xi7gQ 密码:i4si \nweibo（微博语料）  | 61.93.89.94/Noah_NRM_Data/ \nxiaohuangji（小黄鸡语料） | https://github.com/candlewill/Dialog_Corpus \n\n\n# 使用方法\n\n下载语料\n### 阿里云盘\nhttps://www.aliyundrive.com/s/qXBdAYtz5j5\n提取码: 81ao\n\n### Google Drive\nhttps://drive.google.com/file/d/1So-m83NdUHexfjJ912rQ4GItdLvnmJMD/view?usp=sharing\n\n将解压后的raw_chat_corpus文件夹放到当前目录下\n目录结构为\n```\nraw_chat_corpus\n-- language\n-- process_pipelines\n-- raw_chat_corpus\n---- chatterbot-1k\n---- douban-multiturn-100w\n---- ....\n-- main.py\n-- ...\n```\n\n然后修改 config.py 中的 raw_chat_corpus_root 变量 为自己的目录，再执行main.py 脚本即可\n```bash\npython main.py\n```\n或者\n```bash\npython3 main.py\n```\n# 生成结果\n每个来源的语料分别生成一个独立的*.tsv文件，都放在新生成的clean_chat_corpus文件夹下。\n\n生成结果格式为 tsv格式，每行是一个样本，先是query，再是answer\n```\nquery \\t answer\n```\n# 结果的使用\n这个就根据每个人不同的情况自主使用即可\n\n个人对于聊天机器人方向实践也不是很多，以下一篇之前写的知乎专栏供参考\n**《从产品完整性的角度浅谈chatbot》**\n\nhttps://zhuanlan.zhihu.com/p/34927757\n\n文章粗略讲解了如下一些方面，介绍了聊天机器人在实际产品化过程中可能遇到的问题和解决办法。\n\n1. chatbot自身人格的设置\n1. 产品上线需要考虑的敏感词处理\n1. 文本检索模型的使用\n1. 文本生成模型的使用\n1. 回答打分机制\n1. 万能回答的使用策略\n1. 多媒体消息的处理\n1. 产品模型部署的问题\n\n# 版权说明\n本项目为非商业项目，为纯搜集和汇总资料，如有侵权，请在issue下留言。\n\n```bibtex\n@Misc{chinese-chatbot-corpus,\n  title = {Chinese Chatbot Corpus},\n  author = {codemayq},\n  howpublished = {\\url{https://github.com/codemayq/chinese_chatbot_corpus}},\n  year = {2018}\n}\n```\n"
        },
        {
          "name": "util.py",
          "type": "blob",
          "size": 1.318359375,
          "content": "import codecs\n\nimport chardet\n\nfrom config import Config\n\n\ndef str_q2b(s):\n    res = \"\"\n    for u in s:\n        c = ord(u)\n        if c == 12288:\n            c = 32\n        elif 65281 <= c <= 65374:\n            c -= 65248\n        res += chr(c)\n    return res\n\n\ndef check_file_encoding(file_name):\n    f = open(file_name, 'rb')\n    data = f.read()\n    detect_result = chardet.detect(data)\n    print(detect_result)\n    return detect_result\n\n\ndef generate_single_pairs_from_multi_turn(utterances):\n    pairs = []\n    for index in range(len(utterances) - 1):\n        pairs.append((utterances[index], utterances[index + 1]))\n    return pairs\n\n\ndef check_format(file_name):\n    file = codecs.open(file_name, encoding=Config.encoding)\n    for index, line in enumerate(file):\n        pair = line.split(\"\\t\")\n        if not len(pair) == 2:\n            print(\"error\", file_name)\n            print(line, index, len(pair))\n            break\n\n    file.close()\n\n\ndef format_refine(file_name):\n    file = codecs.open(file_name, encoding=Config.encoding)\n    valid_lines = []\n    for index, line in enumerate(file):\n        pair = line.split(\"\\t\")\n        if len(pair) == 2:\n            valid_lines.append(line)\n    file.close()\n\n    file = codecs.open(file_name, \"w\", encoding=Config.encoding)\n    for line in valid_lines:\n        file.write(line)\n    file.close()\n"
        }
      ]
    }
  ]
}