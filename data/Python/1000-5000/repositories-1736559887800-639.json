{
  "metadata": {
    "timestamp": 1736559887800,
    "page": 639,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nadimkobeissi/mkbsd",
      "stars": 3648,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01953125,
          "content": ".DS_Store\ndownloads\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.4716796875,
          "content": "            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8134765625,
          "content": "```\n /$$      /$$ /$$   /$$ /$$$$$$$   /$$$$$$  /$$$$$$$ \n| $$$    /$$$| $$  /$$/| $$__  $$ /$$__  $$| $$__  $$\n| $$$$  /$$$$| $$ /$$/ | $$  \\ $$| $$  \\__/| $$  \\ $$\n| $$ $$/$$ $$| $$$$$/  | $$$$$$$ |  $$$$$$ | $$  | $$\n| $$  $$$| $$| $$  $$  | $$__  $$ \\____  $$| $$  | $$\n| $$\\  $ | $$| $$\\  $$ | $$  \\ $$ /$$  \\ $$| $$  | $$\n| $$ \\/  | $$| $$ \\  $$| $$$$$$$/|  $$$$$$/| $$$$$$$/\n|__/     |__/|__/  \\__/|_______/  \\______/ |_______/ \n```\n\n_Because selling out is bad_\n\n## How to use\n\nMKBSD comes in two variants! Node.js and Python.\n\n### Running in Node.js\n\n1. Ensure you have Node.js installed.\n2. Run `node mkbsd.js`\n3. Wait a little.\n4. All wallpapers are now in a newly created `downloads` subfolder.\n\n### Running in Python\n\n1. Ensure you have Python installed.\n2. Ensure you have the `aiohttp` Python package installed (`pip install aiohttp`).\n3. Run `python mkbsd.py`\n4. Wait a little.\n5. All wallpapers are now in a newly created `downloads` subfolder.\n\n## FAQ\n\n### Q: What's the story behind this?\n\nOn September 24th, 2024, well-known tech YouTuber MKBHD released Panels, a wallpaper app that:\n\n- Had insanely invasive, unjustified tracking including for location history and search history.\n- Charged artists a predatory 50% commission (even Apple takes only 30% for app purchases).\n- Forced you to watch two ads for every wallpaper that you wanted to download, and then only letting you download it in SD.\n- Gatekept all HD wallpapers behind a **fifty dollars a year subscription**.\n- Had many wallpapers that were essentially AI-generated slop or badly edited stock photos.\n\nEspecially given MKBHD's previous criticism of substandard companies and products, people justifiably got upset given that this looked like a pretty blatant grift and cash-grab that is exploitative of the fan base that's trusted his editorial integrity over the past fifteen years. However, on the same day, MKBHD wrote a post doubling down on the app.\n\n### Q: Aren't you stealing from artists by running this script?\n\nMKBSD accesses publicly available media through the Panels app's own API. It doesn't do anything shady or illegal. The real problem here is Panels and MKBHD's complete inability to provide a secure platform for the artists that they're ~~exploiting~~ working with. Any other app could have avoided the issues that make MKBSD possible had it been engineered competently.\n\n## License\n\n```\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.\n```\n"
        },
        {
          "name": "mkbsd.js",
          "type": "blob",
          "size": 2.35546875,
          "content": "// Copyright 2024 Nadim Kobeissi\n// Licensed under the WTFPL License\n\nconst fs = require(`fs`);\nconst path = require(`path`);\n\nasync function main() {\n\tconst url = 'https://storage.googleapis.com/panels-api/data/20240916/media-1a-i-p~s';\n\tconst delay = (ms) => {\n\t\treturn new Promise(resolve => setTimeout(resolve, ms));\n\t}\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`‚õî Failed to fetch JSON file: ${response.statusText}`);\n\t\t}\n\t\tconst jsonData = await response.json();\n\t\tconst data = jsonData.data;\n\t\tif (!data) {\n\t\t\tthrow new Error('‚õî JSON does not have a \"data\" property at its root.');\n\t\t}\n\t\tconst downloadDir = path.join(__dirname, 'downloads');\n\t\tif (!fs.existsSync(downloadDir)) {\n\t\t\tfs.mkdirSync(downloadDir);\n\t\t\tconsole.info(`üìÅ Created directory: ${downloadDir}`);\n\t\t}\n\t\tlet fileIndex = 1;\n\t\tfor (const key in data) {\n\t\t\tconst subproperty = data[key];\n\t\t\tif (subproperty && subproperty.dhd) {\n\t\t\t\tconst imageUrl = subproperty.dhd;\n\t\t\t\tconsole.info(`üîç Found image URL!`);\n\t\t\t\tawait delay(100);\n\t\t\t\tconst ext = path.extname(new URL(imageUrl).pathname) || '.jpg';\n\t\t\t\tconst filename = `${fileIndex}${ext}`;\n\t\t\t\tconst filePath = path.join(downloadDir, filename);\n\t\t\t\tawait downloadImage(imageUrl, filePath);\n\t\t\t\tconsole.info(`üñºÔ∏è Saved image to ${filePath}`);\n\t\t\t\tfileIndex++;\n\t\t\t\tawait delay(250);\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(`Error: ${error.message}`);\n\t}\n}\n\nasync function downloadImage(url, filePath) {\n\tconst response = await fetch(url);\n\tif (!response.ok) {\n\t\tthrow new Error(`Failed to download image: ${response.statusText}`);\n\t}\n\tconst arrayBuffer = await response.arrayBuffer();\n\tconst buffer = Buffer.from(arrayBuffer);\n\tawait fs.promises.writeFile(filePath, buffer);\n}\n\nfunction asciiArt() {\n\tconsole.info(`\n /$$      /$$ /$$   /$$ /$$$$$$$   /$$$$$$  /$$$$$$$\n| $$$    /$$$| $$  /$$/| $$__  $$ /$$__  $$| $$__  $$\n| $$$$  /$$$$| $$ /$$/ | $$  \\\\ $$| $$  \\\\__/| $$  \\\\ $$\n| $$ $$/$$ $$| $$$$$/  | $$$$$$$ |  $$$$$$ | $$  | $$\n| $$  $$$| $$| $$  $$  | $$__  $$ \\\\____  $$| $$  | $$\n| $$\\\\  $ | $$| $$\\\\  $$ | $$  \\\\ $$ /$$  \\\\ $$| $$  | $$\n| $$ \\\\/  | $$| $$ \\\\  $$| $$$$$$$/|  $$$$$$/| $$$$$$$/\n|__/     |__/|__/  \\\\__/|_______/  \\\\______/ |_______/`);\n\tconsole.info(``);\n\tconsole.info(`ü§ë Starting downloads from your favorite sellout grifter's wallpaper app...`);\n}\n\n(() => {\n\tasciiArt();\n\tsetTimeout(main, 5000);\n})();\n"
        },
        {
          "name": "mkbsd.py",
          "type": "blob",
          "size": 2.85546875,
          "content": "# Licensed under the WTFPL License\n\nimport os\nimport time\nimport aiohttp\nimport asyncio\nfrom urllib.parse import urlparse\nurl = 'https://storage.googleapis.com/panels-api/data/20240916/media-1a-i-p~s'\n\nasync def delay(ms):\n    await asyncio.sleep(ms / 1000)\n\nasync def download_image(session, image_url, file_path):\n    try:\n        async with session.get(image_url) as response:\n            if response.status != 200:\n                raise Exception(f\"Failed to download image: {response.status}\")\n            content = await response.read()\n            with open(file_path, 'wb') as f:\n                f.write(content)\n    except Exception as e:\n        print(f\"Error downloading image: {str(e)}\")\n\nasync def main():\n    try:\n        async with aiohttp.ClientSession() as session:\n            async with session.get(url) as response:\n                if response.status != 200:\n                    raise Exception(f\"‚õî Failed to fetch JSON file: {response.status}\")\n                json_data = await response.json()\n                data = json_data.get('data')\n                \n                if not data:\n                    raise Exception('‚õî JSON does not have a \"data\" property at its root.')\n\n                download_dir = os.path.join(os.getcwd(), 'downloads')\n                if not os.path.exists(download_dir):\n                    os.makedirs(download_dir)\n                    print(f\"üìÅ Created directory: {download_dir}\")\n\n                file_index = 1\n                for key, subproperty in data.items():\n                    if subproperty and subproperty.get('dhd'):\n                        image_url = subproperty['dhd']\n                        print(f\"üîç Found image URL!\")\n                        parsed_url = urlparse(image_url)\n                        ext = os.path.splitext(parsed_url.path)[-1] or '.jpg'\n                        filename = f\"{file_index}{ext}\"\n                        file_path = os.path.join(download_dir, filename)\n\n                        await download_image(session, image_url, file_path)\n                        print(f\"üñºÔ∏è Saved image to {file_path}\")\n\n                        file_index += 1\n                        await delay(250)\n\n    except Exception as e:\n        print(f\"Error: {str(e)}\")\n\ndef ascii_art():\n    print(\"\"\"\n /$$      /$$ /$$   /$$ /$$$$$$$   /$$$$$$  /$$$$$$$\n| $$$    /$$$| $$  /$$/| $$__  $$ /$$__  $$| $$__  $$\n| $$$$  /$$$$| $$ /$$/ | $$  \\\\ $$| $$  \\\\__/| $$  \\\\ $$\n| $$ $$/$$ $$| $$$$$/  | $$$$$$$ |  $$$$$$ | $$  | $$\n| $$  $$$| $$| $$  $$  | $$__  $$ \\\\____  $$| $$  | $$\n| $$\\\\  $ | $$| $$\\\\  $$ | $$  \\\\ $$ /$$  \\\\ $$| $$  | $$\n| $$ \\\\/  | $$| $$ \\\\  $$| $$$$$$$/|  $$$$$$/| $$$$$$$/\n|__/     |__/|__/  \\\\__/|_______/  \\\\______/ |_______/\"\"\")\n    print(\"\")\n    print(\"ü§ë Starting downloads from your favorite sellout grifter's wallpaper app...\")\n\nif __name__ == \"__main__\":\n    ascii_art()\n    time.sleep(5)\n    asyncio.run(main())\n"
        }
      ]
    }
  ]
}