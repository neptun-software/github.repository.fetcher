{
  "metadata": {
    "timestamp": 1736559612815,
    "page": 252,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "phodal/awesome-iot",
      "stars": 4387,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01953125,
          "content": ".idea\n.access-token\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Phodal Huang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 75.7822265625,
          "content": "Awesome IoT ![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)\n===\n\nA curated list of IoT. Everyone can contribute here!\n\nSimliar Projects\n\n* [Awesome Azure IoT](https://github.com/formulahendry/awesome-azure-iot) - A curated list of awesome Azure Internet of Things projects and resources.\n* [Awesome Android Things](https://github.com/amitshekhariitbhu/awesome-android-things) - A curated list of awesome Android Things tutorials, libraries and much more at one place\n* [Awesome OpenIoT](https://github.com/Agile-IoT/awesome-open-iot) - A curated list of awesome open source IoT frameworks, libraries and software.\n* [Awesome IoT](https://github.com/HQarroum/awesome-iot) - A curated list of awesome Internet of Things projects and resources.\n\nToC\n---\n\n- [Framework](#framework)\n- [Library](#library)\n    - [SDK](#sdk)\n    - [Arduino](#arduino)\n    - [Low Level](#low-level)\n- [App](#app)\n- [Storage](#storage)\n- [Security](#security)\n- [OS](#os)\n    - [Android Things](#android-things)\n- [Voice Controller](#voice-controller)\n- [Platform](#platform)\n- [IoT Clouds](#iot-clouds)\n- [IIoT Clouds](#iiot-clouds)\n- [APIs](#apis)\n- [Middleware](#middleware)\n- [Toolkits Include Non-OS](#toolkits-include-non-os)\n- [Data Visualization](#data-visualization)\n- [Real-time Data](#real-time-data)\n- [Hardware](#hardware)\n- [Home Automation](#home-automation)\n- [IDE](#ide)\n- [Robotics](#robotics)\n- [Others](#others)\n- [Language](#language)\n    - [Others](#others)\n- [Protocol Library](#protocol-library)\n    - [MQTT](#mqtt)\n    - [CoAP](#coap)\n    - [Spark](#spark)\n    - [WeMo](#wemo)\n    - [SMCP](#smcp)\n    - [Lora](#lora)\n    - [OpenThread](#openthread)\n    - [Others](#others)\n- [Fork](#fork)\n- [Hardware Com](#hardware-com)\n    - [NFC](#nfc)\n    - [Serial](#serial)\n    - [Others](#others)\n- [Software](#software)\n- [Tools](#tools)\n- [Voice](#voice)\n- [AI](#ai)\n- [Resources-Websites-Projects](#resources-websites-projects)\n    - [Course](#course)\n    - [WebSite](#website)\n    - [Blog](#blog)\n    - [Group](#group)\n    - [GitHub Org.](#github-org)\n    - [Free Book](#free-book)\n    - [Related Resources Projects](#related-resources-projects)\n    - [Tutorial](#tutorial)\n- [Edge](#edge)\n- [Analytics](#analytics)\n- [Others](#others)\n\n## Framework\n\n* **[.NET Core IoT ★ 1193 ⧗ 292](https://github.com/dotnet/iot)** - A set of libraries to interact with sensors, displays and input devices from .NET Core framework.\nThis libraries allows to work with the GPIO port for various boards like Raspberry Pi and Hummingboard and contains a growing set of community-maintained device bindings for IoT components.\n* **[AREG SDK ★ 15 ⧗ 0](https://github.com/aregtech/areg-sdk)** - AREG SDK is a developer-friendly, an interface-centric real-time asynchronous communication engine to enable distributed- and [mist-computing](https://csrc.nist.gov/publications/detail/sp/500-325/final), where connected Things interact and provide services, as if they act like thin distributed servers.\n* **[Cylon ★ 2339 ⧗ 0](https://github.com/hybridgroup/cylon)** - JavaScript framework for robotics, physical computing, and the Internet of Things.\n* [devify-server ★ 53 ⧗ 1](https://github.com/DevifyPlatform/devify-server) - s extremely light weight, and is very easy to use. It aims to help developers to create IoT application servers, faster.\n* [Epoc.js ★ 27 ⧗ 0](https://github.com/charliegerard/Epoc.js) - This framework provides an interface to access data from the Emotiv EPOC brain sensor using Node.js.\n* **[ESP-IDF ★ 2542 ⧗ 0](https://github.com/espressif/esp-idf)** - The official framework from Espressif to build Wi-Fi, BLE, and BT apps with ESP32.\n* [FogLight ★ 10 ⧗ 100](https://github.com/oci-pronghorn/FogLight) - is a lightweight runtime that enables makers of all ages and skill levels to create highly performant apps for embedded devices like Raspberry Pis.\n* [framboos ★ 75 ⧗ 3](https://github.com/jkransen/framboos) - is a small Java wrapper around the default GPIO driver on Linux boards like Raspberry Pi and BeagleBoard.\n* [Freedomotic ★ 208 ⧗ 4](https://github.com/freedomotic/freedomotic) - is an open source, flexible, secure Internet of Things (IoT) application framework, useful to build and manage modern smart spaces.\n* **[GoBot ★ 2062 ⧗ 1](https://github.com/hybridgroup/gobot)** - Golang framework for robotics, physical computing, and the Internet of Things.\n* [Grow IoT ★ 7 ⧗ 7](https://github.com/CommonGarden/Grow-IoT) - is a full javascript based IoT stack with a simple API and basic user interface.\n* [guh ★ 50 ⧗ 29](https://github.com/guh/guh) -  is an open source IoT (Internet of Things) server, which allows to control a lot of different devices from many different manufacturers.\n* **[heimcontrol.js ★ 1306 ⧗ 4](https://github.com/ni-c/heimcontrol.js)** - Home-Automation with node.js and Raspberry PI.\n* [IoT 433 MHz ★ 121 ⧗ 11](https://github.com/roccomuso/iot-433mhz) - IoT System to control 433 MHz RC power sockets, PIR, Door Sensors and much more.\n* [IoT Edge ★ 264 ⧗ 0](https://github.com/Azure/iot-edge) - The Azure IoT Gateway SDK was our first step to enabling edge analytics in IoT solutions.\n* [IoT SOL ★ 38 ⧗ 0](https://github.com/01org/Intel-iot-services-orchestration-layer) - The total solution that provides visual graphical programming for developing IoT applications.\n* [IoTCloud 2 ★ 14 ⧗ 50](https://github.com/iotcloud/iotcloud2) - An open source framework for IoT and Sensor Centric Applications.\n* **[johnny-five ★ 6024 ⧗ 0](https://github.com/rwaldron/johnny-five)** - JavaScript Robotics and IoT programming framework, developed at Bocoup, Firmata Protocol.\n* [Kura ★ 85 ⧗ 1](https://github.com/eclipse/kura) - an open-source framework for development of IoT applications\n* **[Lelylan ★ 647 ⧗ 1](https://github.com/lelylan/lelylan#development)** - OpenSSL Source Lightweight Microservices Architecture for the Internet of Things. For developers.\n* [Lightweight MQTT Machine Network ★ 21 ⧗ 1](http://lwmqn.github.io/) - LWMQN is a machine network framework with MQTT. See also: IPSO Alliance [Technical Archive](http://www.ipso-alliance.org/ipso-community/resources/technical-archive/).\n* [Liota ★ 162 ⧗ 2](https://github.com/vmware/liota) - is an open source offering for IoT solution developers and resides primarily on IoT gateways.\n* [OpenDevice ★ 23 ⧗ 8](https://github.com/OpenDevice/OpenDevice) - Open IoT (Internet Of Things) Platform and Framework.\n* [Pando Cloud ★ 75 ⧗ 2](https://github.com/PandoCloud/pando-cloud) - is the cloud part of Pando IoT solution. It's made of a bunch of tools, protocols and frameworks below: Pando Cloud, Pando Embedded Framework, Pando Protocol as so on.\n* [Pingo ★ 211 ⧗ 0](https://github.com/pingo-io/pingo-py) - Generic API for controlling boards with programmable IO pins.\n* [PolyMCU ★ 84 ⧗ 2](https://github.com/labapart/polymcu) - has been designed from the beginning to be as flexible as possible: host OS independent, support any toolchain, any RTOS, any micro-controller vendor SDK.\n* [rpi-gpio.js ★ 221 ⧗ 5](https://github.com/JamesBarwell/rpi-gpio.js) - Control Raspberry Pi GPIO pins with node.js.\n* [SensorBee ★ 54 ⧗ 33](https://github.com/sensorbee/sensorbee) - Lightweight stream processing engine for IoT\n* **[Serverless ★ 7951 ⧗ 0](https://github.com/serverless/serverless)** - Serverless is the application framework for building web, mobile and IoT applications exclusively on Amazon Web Services' Lambda and API Gateway.\n* [Simgrid ★ 46 ⧗ 53](https://github.com/simgrid/simgrid) -  is a scientific instrument to study the behavior of large-scale distributed systems such as Grids, Clouds, HPC or P2P systems.\n* **[Sming ★ 1800 ⧗ 0](https://github.com/SmingHub/Sming)** - Sming is an asynchronous C/C++ framework with superb performance and multiple network features. Sming is open source and is tailored towards embedded devices.\n* [Thingsboard IoT Gateway ★ 463 ⧗ 246](https://github.com/thingsboard/thingsboard-gateway) - open-source IoT Gateway - integrates devices connected to legacy and third-party systems with Thingsboard IoT Platform using OPC-UA and MQTT protocols.\n* [WTX](https://github.com/c410-f3r/wtx) - A framework for web-oriented applications\n\n## Library\n\n\n### SDK\n\n* [Armbian build SDK ★ 630](https://github.com/armbian/build) - for creating customized kernel and Debian based userspace for popular development boards.\n\n* [AWS IoT Arduino Yún SDK ★ 63 ⧗ 4](https://github.com/aws/aws-iot-device-sdk-arduino-yun) - SDK for connecting to AWS IoT from an Arduino Yún.\n* [Azure IoT Gateway SDK ★ 26 ⧗ 2](https://github.com/Azure/azure-iot-gateway-sdk) - contains the infrastructure and modules to create IoT gateway solutions.\n* [Cylon.js For Intel IoT ★ 29 ⧗ 40](https://github.com/hybridgroup/cylon-intel-iot) - is a JavaScript framework for robotics, physical computing, and the Internet of Things (IoT).\n* [Electron ★ 41 ⧗ 16](https://github.com/spark/electron) - The Electron is a tiny cellular development kit based around U-Blox's SARA U-series (3G) or G-series (2G) cellular modem module and a STM32F205 ARM Cortex M3 microcontroller.\n* **[ESP8266 Arduino Core ★ 2588 ⧗ 0](https://github.com/esp8266/Arduino)** - Arduino core for ESP8266 WiFi chip.\n* [EZ-Connect Lite SDK ★ 67 ⧗ 16](https://github.com/marvell-iot/aws_starter_sdk) - Marvell's Starter SDK for AWS IoT Service.\n* [Microsoft Azure IoT SDK ★ 203 ⧗ 1](https://github.com/Azure/azure-iot-sdks) - SDKs for a variety of languages and platforms that help connect devices to Microsoft Azure IoT services.\n\n### Arduino\n\n* **[ArduinoJson ★ 873 ⧗ 0](https://github.com/bblanchon/ArduinoJson)** - An elegant and efficient JSON library for embedded systems.\n* **[Ino ★ 874 ⧗ 1](https://github.com/amperka/ino)** - Ino is a command line toolkit for working with Arduino hardware.\n* [PJON ★ 427 ⧗ 4](https://github.com/gioblu/PJON) - Digital communication framework for Arduino and IOT.\n* [Windows Remote Arduino ★ 98 ⧗ 13](https://github.com/ms-iot/remote-wiring) - Remote \"Arduino Wiring\" interface for Windows 8.1, Windows Phone 8.1 and Windows 10. Used to control an Arduino from a Universal Windows Platform application.\n* [WiringPi ★ 455 ⧗ 11](https://github.com/WiringPi/WiringPi) - Gordon's Arduino wiring-like WiringPi Library for the Raspberry Pi.\n* [Theengs decoder](https://decoder.theengs.io) Lightweight parsing library compatible with multiple OS and platforms.\n\n### Low Level\n\n* [Amazon Echo Bridge ★ 452 ⧗ 1](https://github.com/armzilla/amazon-echo-ha-bridge) - Amazon Echo Bridge allows you to quickly emulate a Phillips Hue bridge, bringing the ability to seamlessly integrate an Amazon Echo into various home automation systems.\n* [aWOT ★ 69 ⧗ 8](https://github.com/lasselukkari/aWOT) - Web server library for Arduino, Teensy, ESP8266 and ESP32\n* [btstack ★ 151 ⧗ 1](https://github.com/bluekitchen/btstack) - Dual-mode Bluetooth stack, with small memory footprint.\n* [CocoaMQTT ★ 210 ⧗ 0](https://github.com/emqtt/CocoaMQTT) - MQTT for iOS and OS X written with Swift.\n* [Devices ★ 134 ⧗ 0](https://github.com/goiot/devices) - Suite of libraries for IoT devices (written in Go).\n* [fauxmoESP](https://bitbucket.org/xoseperez/fauxmoesp) - Belkin WeMo emulator library for ESP8266.\n* [inih ★ 312 ⧗ 3](https://github.com/benhoyt/inih) - is a simple .INI file parser written in C.\n* [IoT Helpers ★ 37 ⧗ 8](https://github.com/DotNetToscana/IoTHelpers) - A library that allows to easily interact with Windows 10 IoT Core features like GPIO, I2C and SPI devices.\n* [IoTit Flashing tool ★ 18 ⧗ 2](https://github.com/xshellinc/iotit) - is an open source command-line utility for flashing (initializing) IoT devices.\n* [krypton ★ 7 ⧗ 35](https://github.com/cesanta/krypton) - Embedded TLS/DTLS library, source and binary compatible OpenSSL subset\n* [Ladon ★ 114 ⧗ 2](https://github.com/ory-am/ladon) - is a library written in Go for access control policies, similar to Role Based Access Control or Access Control Lists.\n* [libtuv ★ 19 ⧗ 17](https://github.com/Samsung/libtuv) - Asynchronous I/O for IoT.js and embedded system.\n* **[libui ★ 8021 ⧗ 1](https://github.com/andlabs/libui)** - Simple and portable (but not inflexible) GUI library in C that uses the native GUI technologies of each platform it supports.\n* [LK ★ 312 ⧗ 0](https://github.com/littlekernel/lk) - The LK embedded kernel. An SMP-aware kernel designed for small systems.\n* [Magenta ★ 286 ⧗ 0](https://github.com/fuchsia-mirror/magenta) - Magenta is a new kernel that powers the Fuchsia OS.\n* [MATRIX OS ★ 29 ⧗ 12](https://github.com/matrix-io/matrix-os) -  is a platform for running applications on the MATRIX Creator.\n* [matrixssl ★ 36 ⧗ 0](https://github.com/matrixssl/matrixssl) - is an embedded SSL and TLS implementation designed for small footprint IoT devices requiring low overhead per connection.\n* [MCUBoot ★ 43 ⧗ 3](https://github.com/runtimeco/mcuboot) - is a secure bootloader for 32-bit MCUs.\n* **[nexmon ★ 885 ⧗ 2](https://github.com/seemoo-lab/nexmon)** -  is our C-based firmware patching framework for Broadcom/Cypress WiFi chips.\n* [Pelion Device Management Client ★ 19 ⧗ 41](https://github.com/ARMmbed/mbed-cloud-client) - a library that connects devices to Pelion Device Management service and to Mbed-enabled cloud services from our partners.\n* [pingo-py ★ 223 ⧗ 15](https://github.com/pingo-io/pingo-py) - provides a uniform API to program devices like the Raspberry Pi, BeagleBone Black, pcDuino etc. just like the Python DBAPI provides an uniform API for database programming in Python.\n* [polymcu ★ 57 ⧗ 3](https://github.com/labapart/polymcu) - an open framework for micro-controller software.\n* [Secure Device Grid ★ 4 ⧗ 20](https://github.com/trifork/secure-device-grid) - Secure device-to-device communication solution for IOT.\n* **[simbody ★ 540 ⧗ 0](https://github.com/simbody/simbody)** - High-performance C++ multibody dynamics/physics library for simulating articulated biomechanical and mechanical systems like vehicles, robots, and the human skeleton.\n* [SmartObject ★ 8 ⧗ 2](https://github.com/PeterEB/smartobject) - A Smart Object Class that helps you with creating IPSO Smart Objects in your JS apps. See also: IPSO Alliance [Technical Archive](http://www.ipso-alliance.org/ipso-community/resources/technical-archive/).\n* [Soletta ★ 96 ⧗ 2](https://github.com/solettaproject/soletta) - Soletta Project is a framework for making IoT devices. With Soletta Project's libraries developers can easily write software for devices that control actuators/sensors and communicate using standard technologies.\n* [SPIFFS ★ 174 ⧗ 0](https://github.com/pellepl/spiffs) - Wear-leveled SPI flash file system for embedded devices.\n* [SUSI ★ 13 ⧗ 150](https://github.com/webvariants/susi) - is an application framework to build interfaces for arbitrary systems.\n* [SwiftyGPIO ★ 407 ⧗ 1](https://github.com/uraimo/SwiftyGPIO) - a Swift library to interact with Linux GPIO/SPI on ARM.\n* [uIP ★ 246 ⧗ 3](https://github.com/adamdunkels/uip) - uIP is a very small implementation of the TCP/IP stack.\n* [WifiDog ★ 291 ⧗ 1](https://github.com/wifidog/wifidog-gateway) - a complete and embeddable captive portal solution for wireless community groups or individuals.\n* [Windows 10 IoT Core IoT Helpers ★ 25 ⧗ 0](https://github.com/Dot-and-Net/IoTHelpers) - his library allows to easily interact with GPIO, I2C and SPI devices in Windows 10 IoT Core.\n* [xfrp ★ 14 ⧗ 2](https://github.com/KunTengRom/xfrp) - frp client for openwrt&LEDE, frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.\n* [XiPKI ★ 34 ⧗ 10](https://github.com/xipki/xipki) - eXtensible sImple Public Key Infrastructure consists of CA and OCSP responder.\n* [xkcptun ★ 104 ⧗ 25](https://github.com/liudf0716/xkcptun) - xkcptun is kcp tunnel for OpenWRT&LEDE, implemented in c language\n\n## App\n\n* [Cordova BLE ★ 149 ⧗ 3](https://github.com/evothings/cordova-ble) - Bluetooth Low Energy plugin for Cordova\n* [Cordova MQTT Plugin ★ 24 ⧗ 11](https://github.com/arcoirislabs/cordova-plugin-mqtt) - MQTT Cordova Plugin for Apache Cordova\n* [IOT Espressif Android ★ 46 ⧗ 1](https://github.com/EspressifApp/IOT-Espressif-Android) - is used to control ESP8266 device by Android pad or phone.\n* [MQTTX ★ 12 ⧗ 0](https://github.com/emqx/MQTTX) - MQTTX is a cross-platform MQTT desktop client open sourced by EMQ, which supports macOS, Linux, and Windows. It allows users to quickly and easily test MQTT / MQTTS connections, publish and subscribe to MQTT messages.\n* [PhoneGap NFC ★ 312 ⧗ 2](https://github.com/chariotsolutions/phonegap-nfc) - PhoneGap NFC Plugin\n* [PWAify ★ 269 ⧗ 8](https://github.com/vladikoff/PWAify) - Experimental project to convert your PWA (Progressive Web App) into a cross-platform Electron app. Brings PWAs to your desktop.\n* [Summon ★ 7 ⧗ 52](https://github.com/lab11/summon) - A platform for mobile devices that provides a convenient and scalable mechanism for IoT device interactivity, enabled by web-based interfaces and driven by the devices themselves.\n* [Theengs App](https://app.theengs.io) Mobile BLE to MQTT and reader application compatible with over 90 Bluetooth sensors.\n\n## Storage\n\n* [hypergolix ★ 72 ⧗ 11](https://github.com/Muterra/py_hypergolix) - is programmable cloud sync -- like Dropbox, but you integrate it into your applications instead of using it from the filesystem.\n* [IoTDL ★ 9 ⧗ 8](https://github.com/dpjanes/iotdb-iotql) - an SQL-like language for the IoT.\n* [node-iotdb ★ 19 ⧗ 61](https://github.com/dpjanes/node-iotdb) - Easily control the Internet of Things using Semantics.\n* [HStreamDB ★ 172](https://github.com/hstreamdb/hstream) - The streaming database built for IoT data storage and real-time processing.\n\n## Security\n\n* [IoTSeeker](https://github.com/rapid7/IoTSeeker) This scanner will scan a network for specific types of IoT devices to detect if they are using the default, factory set credentials.\n\n* [nShield ★ 66 ⧗ 35](https://github.com/fnzv/nShield) - An Easy and Simple Anti-DDoS solution for VPS,Dedicated Servers and IoT devices based on iptables.\n* [Scanners-Box ★ 424 ⧗ 0](https://github.com/We5ter/Scanners-Box) - the toolbox of open source scanners.\n* [trezor-crypto ★ 94 ⧗ 1](https://github.com/trezor/trezor-crypto) - 📙 Heavily optimized cryptography algorithms for embedded devices.\n\n## OS\n\n* [Mynewt](https://github.com/apache/mynewt-core) is an open-source operating system for tiny embedded devices. Its goal is to make it easy to develop applications for microcontroller environments where power and cost are driving factors.\n\n* **[Amazon FreeRTOS ★ 842 ⧗ 0](https://github.com/aws/amazon-freertos)** - is an operating system for microcontrollers that makes small, low-power edge devices easy to program, deploy, secure, connect, and manage.\n* **[ARM mbed ★ 629 ⧗ 0](https://github.com/mbedmicro/mbed)** - The ARM® mbed™ IoT Device Platform provides the operating system, cloud services, tools and developer ecosystem to make the creation and deployment of commercial, standards-based IoT solutions possible at scale.\n* [Armbian](https://www.armbian.com) - Debian based Docker enabled lightweight Linux for popular development boards. Optimised for embedded usage.\n* [Brillo](https://developers.google.com/brillo/) - Brillo extends the Android platform to all your connected devices.\n* **[Contiki ★ 1813 ⧗ 0](https://github.com/contiki-os/contiki)** - The Open Source OS for the Internet of Things\n* [f9-kernel ★ 316 ⧗ 4](https://github.com/f9micro/f9-kernel) - An efficient and secure microkernel built for ARM Cortex-M cores, inspired by L4\n* [FlingOS ★ 176 ⧗ 0](https://github.com/FlingOS/FlingOS) - An educational operating system written in C#. A great stepping stone from high to low level development.\n* [Huawei LiteOS ★ 341 ⧗ 3](https://github.com/LITEOS/LiteOS_Kernel) - Huawei LiteOS Kernel.\n* [Hypriot ★ 253 ⧗ 62](https://github.com/hypriot/image-builder-rpi) - HypriotOS for the Raspberry Pi is a Debian-based Container OS optimized for Docker.\n* [JanOS ★ 138 ⧗ 0](https://github.com/jan-os/janos) - JanOS is an operating system designed to run on the chipset of mobile phones.\n* [Linino ★ 83 ⧗ 13](https://github.com/arduino/linino) - Linino is a GNU/Linux distribution based on OpenWRT and maintained by DogHunter.\n* [Lua-RTOS-ESP32 ★ 131 ⧗ 2](https://github.com/whitecatboard/Lua-RTOS-ESP32) - is a real-time operating system designed to run on embedded systems, with minimal requirements of FLASH and RAM memory.\n* [macchina.io ★ 144 ⧗ 0](https://github.com/macchina-io/macchina.io) - An open-source toolkit for building embedded IoT applications that connect sensors, devices and cloud services.\n* **[NodeOS ★ 3605 ⧗ 0](https://github.com/nodeos/nodeos)** - Lightweight operating system using Node.js as userspace.\n* [NuttX](http://nuttx.org/) - is a real-time operating system (RTOS) with an emphasis on standards compliance and small footprint. Scalable from 8-bit to 32-bit microcontroller environments, the primary governing standards in NuttX are Posix and ANSI standards.\n* [OpenWrt ★ 230 ⧗ 173](https://github.com/openwrt/openwrt) - OpenWrt is described as a Linux distribution for embedded devices.\n* [pikoRT ★ 164 ⧗ 5](https://github.com/Piko-RT/pikoRT) - A tiny Linux-like real-time kernel optimized for ARM Cortex-M chips.\n* [Raspbian](http://raspbian.org/) - Raspbian is a free operating system based on Debian optimized for the Raspberry Pi hardware.\n* **[RIOT ★ 748 ⧗ 1](https://github.com/RIOT-OS/RIOT)** - The friendly Operating System for the Internet of Things\n* [RMP ★ 19 ⧗ 8](https://github.com/EDI-Systems/M5P1_MuProkaron) - A single-file rapid development RTOS for IoT with integrated graphics.\n* [RT-Thread ★ 493 ⧗ 0](https://github.com/RT-Thread/rt-thread) - RT-Thread is an open source real-time operating system for embedded devices from China.\n* **[seL4 Microkernel ★ 1344 ⧗ 1](https://github.com/seL4/seL4)** - The world's first operating-system kernel with an end-to-end proof of implementation correctness and security enforcement is available as open source.\n* [Silk ★ 74 ⧗ 2](https://github.com/silklabs/silk) - is a free (as in free beer) firmware for a number of smartphones based on the open-source Android operating system with a nodejs layer on top of it that makes it possible to write programs and get access to hardware aspects using only simple JavaScript.\n* [Snappy Ubuntu Core](http://developer.ubuntu.com/en/snappy/) - Canonical, A new, transactionally updated Ubuntu for clouds and devices.\n* [TachyOS ★ 7 ⧗ 82](https://github.com/fritzprix/TachyOS) - is the RTOS based on microkernel architecture which includes only minimal components like thread / synchronization, memory management, inter-thread communication while supporting execution context / address space isolation(protection) and extensible modular interface.\n* [TinyAra ★ 35 ⧗ 1](https://github.com/Samsung/TinyAra) - is a lightweight RTOS-based platform to support low-end IoT devices.\n* **[TinyOS ★ 543 ⧗ 0](https://github.com/tinyos/tinyos-main)** - designed for low-power wireless devices, such as those used in sensor networks, ubiquitous computing, personal area networks, smart buildings, and smart meters.\n* [Tock OS ★ 243 ⧗ 1](https://github.com/helena-project/tock) -  is an operating system designed for running multiple concurrent, mutually distrustful applications on Cortex-M based embedded platforms.\n* [trochili ★ 75 ⧗ 6](https://github.com/liuxuming/trochili) - A small RTOS optimized for the embedded/iot devices. Support Cortex M3.\n* [Zephyr ★ 352 ⧗ 5](https://github.com/zephyrproject-rtos/zephyr) -  is a small, scalable real-time operating system for use on resource-constrained systems supporting multiple architectures.\n\n### Android Things\n\n* [Android Things user-space drivers ★ 140 ⧗ 2](https://github.com/androidthings/contrib-drivers) - Sample peripheral drivers for Android Things.\n\n## Voice Controller\n\n* [alexa-rubykit ★ 109 ⧗ 6](https://github.com/damianFC/alexa-rubykit) - implements a quick back-end service for deploying applications for Amazon's Echo (Alexa).\n* [AlexaPi ★ 17 ⧗ 1](https://github.com/sammachin/AlexaPi) - Turn a Raspberry Pi into an Alexa Client.\n* **[flask-ask ★ 946 ⧗ 0](https://github.com/johnwheeler/flask-ask)** - is a Flask extension that makes building Alexa skills for the Amazon Echo easier and much more fun.\n\n## Platform\n\n* [[thing-it-node] ★ 20 ⧗ 3](https://github.com/marcgille/thing-it-node/) - A device-independent IoT platform including support of complex event processing, storyboards, and a mobile app.\n* [ActorCloud ★ 32 ⧗ 0](https://github.com/actorcloud/ActorCloud) - ActorCloud is an IoT platform that provides one-stop platform services for enterprises with low-power IoT networks. It provides multiple protocol access, message flow management, data parsing and data processing capabilities for devices on a secure and reliable basis.\n* [Astarte ★ 19 ⧗ 0](https://github.com/astarte-platform/astarte) - Astarte is an Open Source IoT platform written in Elixir. It is a turnkey solution which packs in everything you need for connecting a device fleet to a set of remote applications. It performs data modeling, automated data reduction, real-time events, and provides you with any feature you might expect in a modern IoT platform. Right now, Linux and ESP32 devices are supported out of the box using the provided SDKs.\n* **[Blynk ★ 716 ⧗ 0](https://github.com/blynkkk/blynk-server)** - is a platform with iOS and Android apps to control Arduino, ESP8266, Raspberry Pi and the likes over the Internet.\n* [Clavin ★ 212 ⧗ 2](https://github.com/EricssonResearch/calvin-base) - Calvin is an application environment that lets things talk to things. It comprises of both a development framework for application developers, and a runtime environment that handles the running application.\n* [DeviceHive](https://github.com/devicehive) - IoT Data Platform. Wide range of connectivity options, device management, security and data processing.\n* [embARC Open Software Platform (OSP) ★ 23 ⧗ 9](https://github.com/foss-for-synopsys-dwc-arc-processors/embarc_osp) - is a software distribution aimed at facilitating the development of embedded systems based on ARCv2 Processors.\n* [flowchain-app ★ 22 ⧗ 50](https://github.com/flowchain/flowchain-app) - A Flowchain plugin that provides the flow-based programming (FBP) engine.\n* [GrovePi ★ 330 ⧗ 0](https://github.com/DexterInd/GrovePi) - is an open source platform for connecting Grove Sensors to the Raspberry Pi.\n* [HiveMQ ★ 329 ⧗ 0](https://github.com/hivemq/hivemq-community-edition) - is an open source MQTT platform and MQTT broker.\n* [Hologram](https://hologram.io/) - Open source, full stack platform with standalone devices and usb plug in. Offers a free developer tier.\n* **[IoT.js ★ 921 ⧗ 0](https://github.com/Samsung/iotjs)** - Platform for Internet of Things with JavaScript.\n* [IoTgo ★ 173 ⧗ 0](https://github.com/itead/IoTgo) - is an open source IoT platform, like WordPress, ZenCart and all other open source software, you can deploy your own IoTgo cloud service.\n* [Jasper](http://jasperproject.github.io/) - Jasper is an open source platform for developing always-on, voice-controlled applications.\n* [KERBEROS.IO Web ★ 176 ⧗ 16](https://github.com/kerberos-io/web) - a  GUI to configure the machinery and to view events that were detected by the machinery.\n* [Kitnic ★ 124 ⧗ 0](https://github.com/monostable/kitnic) - A registry for ready to build open hardware electronics projects.\n* [Lan ★ 105 ⧗ 0](https://github.com/phodal/lan) - Internet of Things Server Layer with CoAP, WebSocket, MQTT, HTTP f\n* [Mainflux ★ 33 ⧗ 3](https://github.com/Mainflux/mainflux) - Mainflux is an open source and patent-free IoT cloud platform based on microservices.\n* [Mobius ★ 46 ⧗ 2](https://github.com/IoTKETI/Mobius) -  is the open source IoT server platform based on the oneM2M standard.\n* [Mongoose IoT ★ 487 ⧗ 0](https://github.com/cesanta/iot) -  is a full-stack IoT platform including firmware and cloud components available for ESP8266.\n* [Nebula](http://nebula.readthedocs.io) -  A docker orchestrator designed to manage IoT devices\n* [Pagenodes ★ 99 ⧗ 0](https://github.com/monteslu/pagenodes) - Completely Browser Based IOT Platform, A Chrome Progressive Web App.\n* [Particle(Spark)](http://spark.github.io/) - Particle (formally Spark) is a complete, open source, full-stack solution for cloud-connected devices.\n* [PharoThings ★ 37 ⧗ 29](https://github.com/pharo-iot/PharoThings) - is a Live programming platform for IoT projects based on Pharo.\n* **[PlatformIO ★ 980 ⧗ 0](https://github.com/platformio/platformio)** - PlatformIO is a cross-platform code builder and the missing library manager.\n* [Siemens MindSphere](https://www.siemens.com/global/en/home/products/software/mindsphere.html) - Open, cloud-based IoT operating system (uses OPC UA as communication standard) from Siemens which is extensible with services.\n* [ThingEngine ★ 3 ⧗ 0](https://github.com/Stanford-Mobisocial-IoT-Lab/thingengine-core) - An open source platform for IoT rules that you can execute anywhere you want.\n* **[Thingsboard ★ 5102 ⧗ 1700](https://github.com/thingsboard/thingsboard)** - Open-source IoT Platform - Device management, data collection, processing and visualization.\n* **[Toit ★ 961 ⧗ 67](https://toit.io/)** - The Toit platform combines the functionality of serving your devices in a robust, resilient way, and letting you have control over your devices and your data, as well as ready-to-use over-the-air firmware and application updates on your network-connected embedded devices.\n* [United Manufacturing Hub ★ 9 ⧗ 0](https://github.com/united-manufacturing-hub/united-manufacturing-hub) - The Open-Source Manufacturing App Platform (combines various open source solutions and packages them in a Helm chart, for example nodered, VerneMQ and timescaleDB)\n* [Fuxa SCADA/HMI/Dashboard ★ 2115 ⧗ 632](https://github.com/frangoteam/FUXA) - FUXA is a web-based Process Visualization (SCADA/HMI/Dashboard) software. With FUXA you can create modern process visualizations/dashboards with individual designs for your machines/IOT application with real-time data display. Supports MQTT, OPC-UA, Modbus RTU/TCP, Siemens S7 Protocol, BACnet IP, Ethernet/IP (Allen Bradley), WebAPI\n\n## IoT Clouds\n\n* [Agile IoT Platform](https://www.aylanetworks.com/products/iot-platform) - Ayla Networks IoT Platform (with cloud services).\n* [AlibabaCloud](https://intl.aliyun.com/solutions/IoT) - \"A cloud computing solution\"\n* [ARM Pelion](https://www.pelion.com/) - \"Arm Pelion IoT Platform including Connectivity, Device and Data management service\"\n* [Artik Cloud](https://artik.cloud/) - Samsung cloud for the IoT.\n* [AWS IoT](https://aws.amazon.com/iot/) - Amazon cloud for the IoT.\n* [Azure IoT Hub](https://azure.microsoft.com/en-us/services/iot-hub/) - Microsoft cloud for the IoT.\n* [Bosch IoT Cloud](https://www.bosch-si.com/products/bosch-iot-suite/iot-cloud/bosch-iot-cloud-2.html) - Highly scalable cloud infrastructure based on Cloud Foundry.\n* [CloudPlugs IoT](https://cloudplugs.com/) - \"An end-to-end Fog Computing Platform for IoT.\"\n* [Exosite murano](https://exosite.com/platform/) - IoT platform by Exosite.\n* [Google Cloud IoT](https://cloud.google.com/solutions/iot/) - Google Cloud Platform IoT solutions.\n* [Huawei Cloud IoTDA](https://www.huaweicloud.com/product/iothub.html) - Huawei cloud for the IoT.\n* [IBM Watson](http://www.ibm.com/watson/) - IBM cloud for the IoT.\n* [Oracle IoT Cloud](https://cloud.oracle.com/iot) - ORACLE Cloud for the Internet of Things.\n* [Rightech IoT Cloud](https://app.rightech.io) - IoT platform.\n* [Salesforce IoT Cloud](http://www.salesforce.com/iot-cloud/) - Salesforce cloud for the Internet of Things.\n* [SAP HANA](https://www.sap.com/products/iot-platform-cloud.html) - SAP cloud for the Internet of Things.\n* [Siemens MindSphere](http://www.siemens.com/global/en/home/company/topic-areas/digitalization/mindsphere.html) - Open IoT ecosystem as PaaS.\n* [Xively IoT Cloud](https://www.xively.com/) - IoT platform.\n* [Yaler](https://yaler.net/) - \"Relay infrastructure for secure access to embedded systems\".\n* [Zatar](http://www.zatar.com/) - \"Zatar is the first ARMmbed standards-based IoT cloud service\".\n* [EMQX Cloud](https://www.emqx.com/en/cloud) - Fully managed MQTT service for IoT. Connect your IoT devices to any cloud without the burden of maintaining infrastructure.\n* [IoTSharp](https://github.com/IoTSharp/IoTSharp) - IoTSharp is an open-source IoT platform.\n\n## IIoT Clouds\n\n* [DataXChange](https://www.scytec.com/) - Cloud manufacturing.\n* [deviceWISE for Factory](http://www.telit.com/solutions/industries/smart-manufacturing/) - Telit IIoT cloud.\n* [Predix](https://www.predix.com/) - Industrial IoT cloud (by General Electric).\n* [Space-Time Insight IIoT](http://www.spacetimeinsight.com/solutions/internet-of-things/) - Industrial IoT cloud (formerly go-factory.com).\n* [Thingworx](https://www.thingworx.com/platforms/industrial-connectivity/) - Industrial IoT cloud.\n* [Voice of the Machine](http://www.parker.com/portal/site/PARKER/menuitem.17c8315d31f057bc86a6c3544256d1ca/?vgnextoid=244744e25684b510VgnVCM100000e6651dacRCRD&vgnextchannel=9f45216358d55510VgnVCM100000e6651dacRCRD&vgnextfmt=) - Industrial IoT cloud (by Parker Hannifin, based on Exosite).\n\n## APIs\n\n* [OGC SensorThings API ★ 21 ⧗ 15](https://github.com/opengeospatial/sensorthings) - The OGC SensorThings API is an OGC standard specification for providing an open and unified way to interconnect IoT devices, data, and applications over the Web\n* [Qeo Tinq ★ 6 ⧗ 392](https://github.com/brunodebus/tinq-core) - Tinq is completely based on the Qeo publish/subscribe framework produced by Technicolor as explained in the license section.\n* [OpenCage](https://opencagedata.com/) - provide a reverse geocoding API based on open data for high volume conversion of device coordinates (lat,lon) into useful location information (address, timezone, etc).\n\n## Middleware\n\n* [Kaa ★ 234 ⧗ 0](https://github.com/kaaproject/kaa) - Kaa open-source middleware platform for building, managing, and integrating connected products with the Internet of Everything.\n* **[Kuzzle ★ 502 ⧗ 0](https://github.com/kuzzleio/kuzzle)** - An open-source backend with advanced features like real-time pub/sub or geofencing and a multiprotocol interface that supports MQTT, LoRaWAN and more. [(Website)](https://kuzzle.io/solutions/technologies/iot-backend/)\n* [Meact ★ 6 ⧗ 43](https://github.com/bkupidura/meact) - task is to get metric from external stuff, write it to  and perform various action.\n* [OpenIoT ★ 205 ⧗ 0](https://github.com/OpenIotOrg/openiot) - The OpenIoT middleware infrastructure will support flexible configuration and deployment of algorithms for collection\n* [SiteWhere ★ 61 ⧗ 0](https://github.com/sitewhere/sitewhere) - SiteWhere open-source IoT platform for device connectivity & management, data persistence, processing, integration, and analytics -- both in cloud and on-premise.\n* [t6 ★ 21 ⧗ 4](https://github.com/mathcoll/t6) - Data-first IoT platform to connect physical Objects with time-series DB and perform Data Analysis.\n* **[ThingSpeak ★ 743 ⧗ 0](https://github.com/iobridge/ThingSpeak)** - ThingSpeak is an open source \"Internet of Things\" application and API to store and retrieve data from things using HTTP over the Internet or via a Local Area Network.\\\n* [Shifu ★ 312 ⧗ 0](https://github.com/Edgenesis/shifu) - Shifu is a Kubernetes native IoT development framework that supports multi-protocol device access.\n* [Zilla](https://github.com/aklivity/zilla) - A Multi-protocol event-native edge/service proxy that supports standard protocols such as HTTP, SSE, gRPC, MQTT and the native Kafka protocol.\n\n## Toolkits Include Non-OS\n\nLayered architecture of JTAG interface and TAP support\n\n* [IoT Toolkit ★ 39 ⧗ 41](https://github.com/connectIOT/iottoolkit) - Reference implementation of the smart object API\n* [iot-adk-addonkit ★ 8 ⧗ 1](https://github.com/ms-iot/iot-adk-addonkit) - Contains command line scripts for package creation and image creation process and samples for iot products based on RPi2/MBM.\n* [KinomaJS ★ 293 ⧗ 0](https://github.com/Kinoma/kinomajs) - A JavaScript runtime optimized for the applications that power IoT devices.\n* [macchina.io ★ 144 ⧗ 0](https://github.com/macchina-io/macchina.io) - An open-source toolkit for building embedded IoT applications that connect sensors, devices and cloud services.\n* [OpenOCD ★ 10 ⧗ 34](https://github.com/arduino/OpenOCD) - OpenOCD provides on-chip programming and debugging support with a layered architecture of JTAG interface and TAP support\n* [pyOCD ★ 112 ⧗ 0](https://github.com/mbedmicro/pyOCD) - Open source python library for programming and debugging ARM Cortex-M microcontrollers using CMSIS-DAP.\n* [Renode ★ 81 ⧗ 0](https://github.com/renode/renode) - a virtual development tool for multinode embedded networks.\n\n## Data Visualization\n\n* [Arbela ★ 12 ⧗ 2](https://github.com/walkingtree/arbela) - Rich, Extensible, Customizable, and Configurable Dashboard.\n* [Crouton ★ 75 ⧗ 0](https://github.com/edfungus/Crouton) - is a dashboard that lets you visualize and control your IOT devices with minimal setup.\n* **[D3.JS ★ 49188 ⧗ 0](https://github.com/mbostock/d3)** - A JavaScript visualization library for HTML and SVG\n* **[Dashing ★ 10067 ⧗ 0](https://github.com/Shopify/dashing)** - Dashing is a Sinatra based framework that lets you build beautiful dashboards.\n* [DevicePilot](https://www.devicepilot.com) - Operational analytics for connected devices (includes free-forever tier).\n* **[ECharts ★ 11457 ⧗ 0](https://github.com/ecomfe/echarts)** - Echarts is a commercial charting solution originally intended to address the report need of the Company's various business systems.\n* **[Freeboard ★ 3034 ⧗ 0](https://github.com/Freeboard/freeboard)** - A damn-sexy, open source real-time dashboard builder for IOT and other web mashups. A free open-source alternative to Geckoboard.\n* **[HighCharts ★ 4949 ⧗ 0](https://github.com/highslide-software/highcharts.com)** - Highcharts JS, the JavaScript charting framework\n* [iotdashboard ★ 7 ⧗ 14](https://github.com/electrocoder/iotdashboard) - Fast Django server for IOT Devices.\n* [Shelloid ★ 20 ⧗ 1](https://github.com/shelloid/shelloid) - is an open source IoT-ready real-time big data web application platform built using Node.js and Clojure.\n\n## Real-time Data\n\n* [Streamdal](https://github.com/streamdal/streamdal) - An IoT-ready, Wasm-powered workflow engine you embed directly into application code for ridiculously fast, real-time data transformations.\n\n## Hardware\n\n* [APixel ★ 8 ⧗ 31](https://github.com/AprilBrother/APixel) - APixel is a combination of a ESP8266 dev board with a WS2812B (Addressable RGB) LED all in one.\n* [Arduino](http://www.arduino.cc/) - open-source electronics platform based on easy-to-use hardware and software.\n* [Arduino ZERO](https://www.arduino.cc/en/Main/ArduinoBoardZero) - This board aims to provide a platform for innovative projects in smart IoT devices, wearable technology, high-tech automation, crazy robotics, and much more.\n* [BeagleBone](http://beagleboard.org/getting-started/) -  BeagleBone Black is a low-cost, community-supported development platform for developers and hobbyists.\n* [Bitsy Bits ★ 3 ⧗ 36](https://github.com/bitsybits/bitsybits-core) - is an IoT composite project. This means it has all parts to implement the full user experience.\n* [Carloop ★ 6 ⧗ 0](https://github.com/carloop/carloop-library) - Make apps for your car using signals from OBD-II, CAN and GPS. Publish data online using the Particle platform.\n* [Cheapduino](http://www.dfrobot.com/wiki/index.php/CheapDuino_(SKU:DFR0236)) - CheapDuino is the most cheapest Arduino compatible processor in the world.\n* [ESP8266 Smartwatch ★ 39 ⧗ 0](https://github.com/Jeija/esp8266-smartwatch) - ESP8266 DIY WiFi Smartwatch with MPU-9250, RTC, OLED, FT232, ...\n* [Intel Galileo](http://www.arduino.cc/en/ArduinoCertified/IntelGalileo) - Galileo is a microcontroller board based on the Intel® Quark SoC X1000 Application Processor, a 32-bit Intel Pentium-class system on a chip\n* [Microduino](https://www.microduino.cc/) - Microduino is about the size of a quarter and less than half the size of the original Arduino board.\n* [NodeMCU](http://www.nodemcu.com/) -  a firmware based on ESP8266 wifi-soc.\n* [Powerduino ★ 53 ⧗ 102](https://github.com/dekuNukem/Powerduino) - A fully programmable power strip with energy monitoring and wireless connectivity.\n* [PULPino ★ 201 ⧗ 0](https://github.com/pulp-platform/pulpino) - PULPino is an open-source microcontroller system, based on a small 32-bit RISC-V core developed at ETH Zurich.\n* [Raspberry Pi](https://www.raspberrypi.org/) - a tiny and affordable computer that you can use to learn programming through fun, practical projects\n* [SquareWear](http://rayshobby.net/sqrwear/) - An Open-Source Arduino-based Wearable Microcontroller\n* [Tessel](https://tessel.io/) - Tessel is a completely open source and community-driven IoT and robotics development. platform.\n* [Wemos](http://www.wemos.cc) - Very-cheap firmware based on ESP8266 wifi-soc.\n* [Widora ★ 15 ⧗ 21](https://github.com/widora/openwrt_widora) - Widora is open source WiFi development hardware prototype with sound card based on MT7688A running [OpenWrt](https://github.com/openwrt/openwrt).\n\n## Home Automation\n\n* [CK.HomeAutomation ★ 15 ⧗ 9](https://github.com/chkr1011/CK.HomeAutomation) - The first open source Home Automation SDK for Windows 10 IoT Core.\n* [Eclipse SmartHome](http://eclipse.org/smarthome/) - Smart Home adoption will only gain momentum if the different devices can be connected into over-arching use cases, but currently the market for Smart Home systems and IoT gadgets is heavily fragmented.\n* **[Floorplan for Home Assistant ★ 949 ⧗ 0](https://github.com/pkozul/ha-floorplan)** - the Home Assistant front end provides a great way of viewing and interacting with your entities.\n* **[heimcontrol.js ★ 1306 ⧗ 4](https://github.com/ni-c/heimcontrol.js)** -  Home-Automation with node.js and Raspberry PI\n* **[home-assistant ★ 3237 ⧗ 0](https://github.com/balloob/home-assistant)** - Open-source home automation platform running on Python 3\n* [home.pi ★ 145 ⧗ 1](https://github.com/denschu/home.pi) - Home Automation with AngularJS and MQTT on a Raspberry Pi\n* **[Homebridge ★ 3030 ⧗ 0](https://github.com/nfarina/homebridge)** - Homebridge is a lightweight NodeJS server you can run on your home network that emulates the iOS HomeKit API.\n* [Lumos ★ 70 ⧗ 1](https://github.com/jonathanrjpereira/Lumos) - aims to change that by pairing with WiFi and uses Machine Learning to adjust the light to match your sleep schedule.\n* **[Magic Mirror ★ 503 ⧗ 0](https://github.com/MicrosoftEdge/magic-mirror-demo)** - A ⚡Magic Mirror⚡ powered by a UWP Hosted Web App.\n* [Mozilla Smart Home ★ 4 ⧗ 8](https://github.com/mozilla/smarthome.iot) - offers a middle ground between \"in a box\" solutions like Apple Homekit and DIY solutions like Raspberry Pi\n* [MyController ★ 110 ⧗ 0](https://github.com/mycontroller-org/mycontroller) - is automation controller for home, office or any place.\n* [Ninja Blocks](https://ninjablocks.com/) - Smart home controller. A computer for the coffee table.\n* **[openHAB ★ 2536 ⧗ 0](https://github.com/openhab/openhab-distro)** - a vendor and technology agnostic open source automation software for your home.\n* [Pimatic ★ 362 ⧗ 0](https://github.com/pimatic/pimatic) - A home automation server and framework for the raspberry pi running on node.js.\n* [PrivateEyePi](http://projects.privateeyepi.com/) - Home Automation and Monitoring Projects for Raspberry Pi\n* [RaZberry](http://razberry.z-wave.me/) - RaZberry brings Z-Wave to the Raspberry PI platform.\n* **[Smart Mirror ★ 1181 ⧗ 0](https://github.com/evancohen/smart-mirror)** - The fairest of them all. A DIY voice controlled smart mirror with IoT integration.\n* [Sonoff-HomeAssistant ★ 336 ⧗ 1](https://github.com/KmanOz/Sonoff-HomeAssistant) - is alternative firmware for the brilliant & cheap ($ not quality) range of Sonoff range of ESP-8266 based WiFi controlled switches.\n* [Vör ★ 31 ⧗ 2](https://github.com/futurice/vor) - is open source software and hardware for turning your open office into an open, real-time map for finding people, open work places and current events.\n* [Node-RED](https://github.com/node-red/node-red) - Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.\n* [hkontroller](https://github.com/hkontrol/hkontroller) - Apple HomeKit Controller implemented in Go programming language.\n* [hkmobile](https://github.com/hkontrol/hkmobile) - Apple HomeKit Controller for Android.\n\n## IDE\n\n* [Angular 2 IoT ★ 10 ⧗ 4](https://github.com/urish/angular2-iot) - is an experimental technology that allows you to program physical hardware (buttons, LEDs, etc.) using Angular 2.\n* [DevIoT ★ 70 ⧗ 1](https://github.com/gepd/Deviot) - Sublime Text plugin for IoT development.\n* [Platformio Atom IDE ★ 108 ⧗ 2](https://github.com/platformio/platformio-atom-ide) - The next generation integrated development environment for IoT.\n* **[Stino ★ 1280 ⧗ 1](https://github.com/Robot-Will/Stino)** -  is a Sublime Text plugin that provides an Arduino-like environment for editing, compiling and uploading sketches.\n* [WyliodrinSTUDIO ★ 25 ⧗ 2](https://github.com/Wyliodrin/WyliodrinSTUDIO) - Wyliodrin STUDIO is a Chrome based IDE for software and hardware development for IoT and Embedded Linux systems.\n\n## Robotics\n\n* **[AirSim ★ 2606 ⧗ 1](https://github.com/Microsoft/AirSim)** -  is a simulator for drones (and soon other vehicles) built on Unreal Engine.\n* **[artoo ★ 1269 ⧗ 0](https://github.com/hybridgroup/artoo)** - Ruby framework for robotics and the Internet of Things.\n* **[hubot ★ 10481 ⧗ 0](https://github.com/github/hubot)** - A customizable life embetterment robot.\n\n## Others\n\nfor embedded systems (IoT in mind).\n\n* [AWS IoT Button logger to git ★ 4 ⧗ 2](https://github.com/kachkaev/aws-iot-button-logger-to-git/) - A beginner-friendly AWS Lambda function that logs events from IoT devices into a git repository of your choice. Written in TypeScript, tested with Jest, compiled with Parcel. Uses Azure Pipelines for CI/CD.\n* [Corto ★ 15 ⧗ 4](https://github.com/cortoproject/corto) - Corto is a tested, proven architecture for normalizing data from different technologies into one view regardless of location, format or datamodel.\n* [Emul8 ★ 50 ⧗ 71](https://github.com/emul8/emul8) - is an emulator of various embedded systems. With Emul8 you can develop embedded software entirely in a virtual environment that runs within your PC.\n* **[ESP8266 Deauther ★ 3806 ⧗ 0](https://github.com/spacehuhn/esp8266_deauther)** -  allows you to perform a deauth attack with an ESP8266 against selected networks.\n* [fluent-bit ★ 90 ⧗ 4](https://github.com/fluent/fluent-bit) - is a data collector for Linux, Embedded Linux, OSX and BSD family operating systems.\n* [Kamanja ★ 21 ⧗ 1](https://github.com/LigaData/Kamanja) -  is an open-source continuous decisioning engine that is hardened for enterprise reliability requirements, scalable to IoT level data volumes, and enables low latency use cases.\n* **[Node-RED ★ 2513 ⧗ 0](https://github.com/node-red/node-red)** - A visual tool for wiring the Internet of Things.\n* [OpenMQTTGateway](https://docs.openmqttgateway.com) - BLE, 433Mhz, LoRa to MQTT gateway with hundreds of devices supported. Integrate with Home-Assistant, OpenHAB, Jeedom, Domoticz, FHEM and many more.\n* [Parlay ★ 8 ⧗ 160](https://github.com/PromenadeSoftware/Parlay) -  is software that brings visibility and accessibility to embedded devices.\n* [redzilla ★ 13 ⧗ 37](https://github.com/muka/redzilla) -  is a service which allow to create easily instances of node-red.\n* [RemoteDebug ★ 17 ⧗ 11](https://github.com/JoaoLopesF/RemoteDebug) - A library to remote debug over telnet connection!\n* [rio ★ 68 ⧗ 0](https://github.com/SolidStateGroup/rio) - An open source library allowing you to create an internet connected LED wall\n* **[Sonoff-Tasmota ★ 4869 ⧗ 0](https://github.com/arendst/Sonoff-Tasmota)** - Provide ESP8266 based itead Sonoff with Web, MQTT and OTA firmware using Arduino IDE.\n* [tinyVP ★ 12 ⧗ 48](https://github.com/lyegoshin/tinyVP) - is a very small and lean hypervisor using MIPS R5 hardware VZ option\n* [vorto ★ 32 ⧗ 3](https://github.com/eclipse/vorto) - is a toolset that lets you describe devices using a simple language and share these descriptions, so-called Information Models, in a centralized Vorto Repository.\n\n## Language\n\n* [AtomVM ★ 390 ⧗ 0](https://github.com/bettio/AtomVM) - AtomVM is a tiny portable virtual machine that allows Erlang and Elixir code to run on microcontrollers with less than 500KB of RAM such as the ESP32.\n* [ELIoT ★ 76 ⧗ 48](https://github.com/c3d/elfe) - Extensible Language for Everyday (and the Internet of Things)\n* [eLua ★ 393 ⧗ 1](https://github.com/elua/elua) - Quickly prototype and develop embedded software applications with the power of Lua and run them on a wide range of microcontroller architectures.\n* [ESP Basic ★ 144 ⧗ 0](https://github.com/esp8266/Basic) - Basic Interpreter for the ESP8266\n* **[JerryScript ★ 1244 ⧗ 0](https://github.com/Samsung/jerryscript)** - A JavaScript engine for Internet of Things.\n* **[luvit ★ 2237 ⧗ 0](https://github.com/luvit/luvit)** - Node.JS for the Lua Inventor.\n* **[MicroPython ★ 3070 ⧗ 0](https://github.com/micropython/micropython)** - MicroPython is a lean and fast implementation of the Python 3 programming language that is optimised to run on a microcontroller.\n* [szl ★ 100 ⧗ 0](https://github.com/dimkr/szl) - is a tiny, embeddable scripting engine inspired by Tcl and shell.\n* **[Terra ★ 1248 ⧗ 0](https://github.com/zdevito/terra)** - is a low-level system programming language that is embedded in and meta-programmed by the Lua programming language.\n* **[Toitlang ★ 961 ⧗ 0](https://toitlang.org/)** - is a high-level language that’s made to have a syntax very close to Python. As it’s built from first principles for microcontrollers, it’s at least 20x faster than MicroPython. They’ve also built a slick IDE integration.\n* **[V7 ★ 576 ⧗ 0](https://github.com/cesanta/v7)** - V7 is a JavaScript engine written in C. It makes it possible to program Internet of Things (IoT) devices in JavaScript.\n* **[PikaScript ★ 660 ⧗ 36](https://github.com/pikasTech/pikaScript)** - PikaScript is a extremely lightweight python engine that can run with less than 4KB of RAM such as stm32g030c8 and stm32f103c8. It is zero dependency, zero configuration, easy to deploy and expand.\n### Others\n\n* [ESP8266-Wifi-Relay ★ 31 ⧗ 19](https://github.com/JanGoe/esp8266-wifi-relay) - ESP8266-ESP12e Wifi Doppel Relay IOT Unterputz Montage möglich / Schaltaktor.\n* [K3PO ★ 22 ⧗ 9](https://github.com/k3po/k3po) - is a network driver and language agnostic testing tool.\n* **[LittleD ★ 545 ⧗ 3](https://github.com/graemedouglas/LittleD)** - A relational database for embedded devices and sensors nodes.\n* **[mbed TLS ★ 601 ⧗ 0](https://github.com/ARMmbed/mbedtls)** - An open source, portable, easy to use, readable and flexible SSL library\n* [Mongoose Flashing Tool ★ 36 ⧗ 7](https://github.com/cesanta/mongoose-flashing-tool) - Mongoose Flashing Tool (also called MFT) is the Mongoose IoT Platform flashing tool.\n* **[UniK ★ 593 ⧗ 0](https://github.com/emc-advanced-dev/unik)** -  is a tool for compiling application sources into unikernels (lightweight bootable disk images) rather than binaries.\n\n## Protocol Library\n\n\n### MQTT\n\n* [Aphid ★ 58 ⧗ 4](https://github.com/IBM-Swift/Aphid) - A lightweight MQTT 3.1.1 client written in pure Swift 3.\n* [arduino-mqtt ★ 95 ⧗ 6](https://github.com/256dpi/arduino-mqtt) - MQTT library for Arduino based on the Eclipse Paho projects.\n* **[Eclipse Paho JavaScript client ★ 510 ⧗ 1](https://github.com/eclipse/paho.mqtt.javascript)** - The Paho JavaScript Client is an MQTT browser-based client library written in Javascript that uses WebSockets to connect to an MQTT Broker.\n* [Eclipse Paho MQTT C client ★ 142 ⧗ 3](https://github.com/eclipse/paho.mqtt.c) - This code builds libraries which enable applications to connect to an MQTT broker to publish messages, and to subscribe to topics and receive published messages.\n* **[EMQX ★ 10300 ⧗ 1800](https://github.com/emqx/emqx)** - An ultra-scalable open-source MQTT broker. Connect 100M+ IoT devices in one single cluster, move and process real-time IoT data with 1M msg/s throughput at 1ms latency.\n* [ESP8266 MQTT ★ 440 ⧗ 0](https://github.com/tuanpmt/esp_mqtt) - MQTT client library for ESP8266 Soc\n* [Espruna](https://bitbucket.org/xoseperez/espurna) - Firmware for ESP8266 based smart switches. Includes Web GUI, MQTT and AOT software updates.\n* [gLeam ★ 50 ⧗ 108](https://github.com/mikespook/gleam) - A operation cluster based on MQTT.\n* [HiveMQ](https://github.com/hivemq) - a MQTT broker and MQTT client in Java.\n* [Homie for ESP8266 ★ 115 ⧗ 1](https://github.com/marvinroger/homie-esp8266) - An Arduino for ESP8266 implementation of Homie, an MQTT convention for the IoT.\n* [Homie Server ★ 45 ⧗ 3](https://github.com/marvinroger/homie-server) - A Web server for Homie, an MQTT convention for the IoT.\n* [Java mqtt-client ★ 405 ⧗ 2](https://github.com/fusesource/mqtt-client) - A Java MQTT Client.\n* [LightMQTT ★ 32 ⧗ 11](https://github.com/PasiSalenius/LightMQTT) - is a lightweight MQTT client, written in Swift.\n* [m2mqtt ★ 69 ⧗ 11](https://github.com/ppatierno/m2mqtt) - MQTT Client Library for .Net and WinRT.\n* **[microTT ★ 673 ⧗ 1](https://github.com/uNetworking/uTT)** - is a lightweight and efficient MQTT broker designed to raise the bar for pub/sub performance.\n* [moquette ★ 2239 ⧗ 2](https://github.com/moquette-io/moquette) - Java MQTT lightweight broker.\n* **[mosca ★ 1097 ⧗ 0](https://github.com/mcollina/mosca)** - Mosca is a node.js mqtt broker.\n* [Mosquitto ★ 158 ⧗ 0](https://github.com/eclipse/mosquitto) - An Open Source MQTT v3.1/v3.1.1 Broker.\n* [MQTT Explorer](https://mqtt-explorer.com/) - Tool to visualize your MQTT topics in a topic hierarchy, a MQTT swiss-army knife.\n* [MQTT Kafka Bridge ★ 28 ⧗ 35](https://github.com/jacklund/mqttKafkaBridge) - Bridge which consumes MQTT messages and republishes them on Kafka on the same topic.\n* [MQTT-C ★ 52 ⧗ 2](https://github.com/LiamBindle/MQTT-C) - A portable MQTT C client for embedded systems and PCs alike.\n* **[MQTT.js ★ 1359 ⧗ 0](https://github.com/mqttjs/MQTT.js)** - The MQTT client for Node.js and the browser.\n* [neurite ★ 4 ⧗ 5](https://github.com/linkgo/neurite) - A serial to MQTT bridge, an easier way to build IoT product with esp8266 Arduino.\n* [paho.mqtt.wxapp ★ 196 ⧗ 0](https://github.com/tennessine/paho.mqtt.wxapp) - paho.mqtt.javascript可以让你在微信小程序里连接MQTT broker，实现在小程序里控制硬件，也可用于游戏。\n* **[PubSub Client ★ 684 ⧗ 0](https://github.com/knolleary/pubsubclient)** - A client library for the Arduino Ethernet Shield that provides support for MQTT.\n* [strong-pubsub ★ 97 ⧗ 1](https://github.com/strongloop/strong-pubsub) - PubSub for Node.js, Browser, Mobile and IoT\n* **[SurgeMQ ★ 776 ⧗ 1](https://github.com/surgemq/surgemq)** -  is a high performance MQTT broker and client library that aims to be fully compliant with MQTT 3.1 and 3.1.1 specs.\n* **[VerneMQ ★ 561 ⧗ 1](https://github.com/erlio/vernemq)** - A distributed MQTT message broker.\n* [WolfSSL MQTT ★ 155 ⧗ 14](https://github.com/wolfSSL/wolfMQTT) - A C MQTT library that works with WolfSSL.\n* [Waterstream](https://waterstream.io/) - MQTT broker leveraging Apache Kafka as its own storage and distribution engine.\n* [NanoMQ](https://github.com/nanomq/nanomq) - A light-weight and Blazing-fast MQTT Broker for IoT Edge platform.\n\n### CoAP\n\n* [Californium ★ 36 ⧗ 0](https://github.com/eclipse/californium) - Californium is a Java implementation of CoAP for the IoT backend and less constrained IoT devices.\n* [CoAP.NET ★ 47 ⧗ 4](https://github.com/smeshlink/CoAP.NET) - A C# implementation of the CoAP protocol.\n* [Copper ★ 46 ⧗ 14](https://github.com/mkovatsc/Copper) - A Firefox add-on to browse the Internet of Things.\n* [Go CoAP ★ 110 ⧗ 8](https://github.com/dustin/go-coap) - Implementation of CoAP in go.\n* [h5.coap ★ 36 ⧗ 26](https://github.com/morkai/h5.coap) - Implementation of the Constrained Application Protocol (CoAP) client for node.js.\n* [iCoAP ★ 28 ⧗ 21](https://github.com/stuffrabbit/iCoAP) - Objective-C Client Implementation of CoAP.\n* [java-coap ★ 3 ⧗ 0](https://github.com/open-coap/java-coap) - Complete CoAP implementation in java (it is a fork with lots of improvements).\n* [lobaro-coap ★ 74 ⧗ 4](https://github.com/Lobaro/lobaro-coap) - Complete CoAP Implementation in C.\n* [mbed CoAP ★ 23 ⧗ 11](https://github.com/ARMmbed/java-coap) - makes it easy to integrate a Java SE enabled device with coap based services like mbed Cloud.\n* [microcoap ★ 259 ⧗ 10](https://github.com/1248/microcoap) - A small CoAP implementation for microcontrollers.\n* [MQTT Client Framework ★ 312 ⧗ 1](https://github.com/ckrey/MQTT-Client-Framework) - iOS, OSX, tvOS native ObjectiveC MQTT Client Framework.\n* [Node CoAP ★ 176 ⧗ 11](https://github.com/mcollina/node-coap) - node-coap is a client and server library for CoAP modeled after the http module.\n* [Python CoAP ★ 36 ⧗ 5](https://github.com/openwsn-berkeley/coap) - A CoAP Python library.\n* [SwiftCoAP ★ 22 ⧗ 12](https://github.com/stuffrabbit/SwiftCoAP) - Swift Server/Client Implementation of CoAP.\n* [txThings ★ 48 ⧗ 3](https://github.com/siskin/txThings) - CoAP library for Twisted framework.\n\n### Spark\n\n* [spark-protocol ★ 81 ⧗ 14](https://github.com/spark/spark-protocol) - Node.JS module for hosting direct encrypted CoAP socket connections.\n* [spark-server ★ 371 ⧗ 13](https://github.com/spark/spark-server) - An API compatible open source server for interacting with devices speaking the spark-protocol\n\n### WeMo\n\n* [arduino-esp8266-alexa-multiple-wemo-switch ★ 213 ⧗ 0](https://github.com/kakopappa/arduino-esp8266-alexa-multiple-wemo-switch) - #Arduino Esp8266 Alexa Multiple Belkin wemo switch emulator.\n* [arduino-esp8266-alexa-wemo-switch ★ 213 ⧗ 5](https://github.com/kakopappa/arduino-esp8266-alexa-wemo-switch) - Amazon Alexa + WeMos switch made with Arduino D1 Mini.\n* [fauxmo ★ 430 ⧗ 0](https://github.com/makermusings/fauxmo) - Emulated Belkin WeMo devices that work with the Amazon Echo.\n* [homebridge-platform-wemo ★ 106 ⧗ 24](https://github.com/rudders/homebridge-platform-wemo) - Belkin WeMo Platform plugin for the awesome Homebridge project.\n* [ouimeaux ★ 319 ⧗ 0](https://github.com/iancmcc/ouimeaux) - Open source control for Belkin WeMo devices.\n* [wemo.js ★ 19 ⧗ 288](https://github.com/thatguydan/wemo.js) - This library aims to provide a simple interface to a Belkin WeMo Power Sockets.\n* [wemore ★ 26 ⧗ 10](https://github.com/dhleong/wemore) - A more awesome library for Belkin WeMo interactions.\n\n### SMCP\n\n* [SMCP ★ 55 ⧗ 0](https://github.com/darconeous/smcp) - is an experimental CoAP-based machine-to-machine (M2M) protocol that is in the early stages of development.\n\n### Lora\n\n* [LoRa Gateway Bridge ★ 78 ⧗ 0](https://github.com/brocaar/lora-gateway-bridge) - is a service which abstracts the packet_forwarder UDP protocol running on most LoRa gateways into JSON over MQTT.\n* [LoRa Server ★ 237 ⧗ 0](https://github.com/brocaar/loraserver) - LoRa Server is an open-source LoRaWAN network-server.\n* [LoRaPI ★ 28 ⧗ 31](https://github.com/hallard/LoRasPI) - Raspberry PI Lora Gateway/Node for RFM92/95/96/98/69HCW Modules.\n* [LowCostLoRaGw ★ 161 ⧗ 4](https://github.com/CongducPham/LowCostLoRaGw) - Low-cost LoRa IoT & gateway with SX1272/76, Raspberry and Arduino.\n\n### OSGP\n\n* [OSGP Platform ★ 35 ⧗ 7](https://github.com/OSGP/Platform) - is an open, generic, scalable and independent 'Internet of Things' platform, which enables various connected smart objects in the public space to be easily controlled and monitored.\n\n### OpenThread\n\n* **[OpenThread ★ 1139 ⧗ 2](https://github.com/openthread/openthread)** - OpenThread is an open-source implementation of the Thread networking protocol.\n* [OpenThread Border Router ★ 64 ⧗ 0](https://github.com/openthread/borderrouter) - An open source border router, built to work with OpenThread.\n\n### Others\n\n* [Anjay ★ 16 ⧗ 23](https://github.com/AVSystem/Anjay) - is a C library that aims to be the reference implementation of the OMA Lightweight Machine-to-Machine (LwM2M) device management protocol.\n* **[libimobiledevice ★ 2294 ⧗ 0](https://github.com/libimobiledevice/libimobiledevice)** - A library to communicate with services of Apple iOS devices using native protocols.\n* **[MeQ ★ 920 ⧗ 1](https://github.com/teamsaas/meq)** - is a real-time communication service for connecting online devices.\n* [OSS-7 ★ 44 ⧗ 37](https://github.com/MOSAIC-LoPoW/dash7-ap-open-source-stack) - is an open source implementation of the DASH7 Alliance protocol for ultra low power wireless sensor communication.\n\n## Fork\n\n* [AWS IoT Button ★ 5 ⧗ 4](https://github.com/ianmas-aws/iot-button-emulator) - Emulate the AWS IoT Button on a Raspberry Pi with a simple push button using this C++ sample.\n\n## Hardware Com\n\n\n### Bluetooth\n\n* [BluetoothLinux](https://github.com/PureSwift/BluetoothLinux)  is a Pure Swift Linux Bluetooth Stack.\n* [Theengs gateway](https://gateway.theengs.io) BLE to MQTT gateway compatible with over 90 Bluetooth sensors.\n* **[BluetoothSerial ★ 863 ⧗ 0](https://github.com/don/BluetoothSerial)** - Cordova (PhoneGap) Plugin for Serial Communication over Bluetooth\n* [React Native Bluetooth Serial ★ 299 ⧗ 2](https://github.com/rusel1989/react-native-bluetooth-serial) - React Native version of BluetoothSerial plugin. For both android and ios\n\n### NFC\n\n* [Adafruit_NFCShield_I2C ★ 110 ⧗ 13](https://github.com/adafruit/Adafruit_NFCShield_I2C) - I2C Driver for Adafruit's PN532-based NFC Shield\n* [Chrome App NFC Library ★ 117 ⧗ 4](https://github.com/GoogleChrome/chrome-nfc) - With this simple library, you can build a Chrome App that communicates over USB with NFC Readers.\n* [LibLogicalAccess ★ 53 ⧗ 17](https://github.com/islog/liblogicalaccess) - C++ RFID Library for Windows/Linux/Mac. For PC/SC, NFC, ISO compliant and proprietary hardware.\n* [libnfc ★ 119 ⧗ 4](https://github.com/nfc-tools/libnfc) - Platform independent Near Field Communication library.\n* [NFC Tools for Java ★ 183 ⧗ 26](https://github.com/grundid/nfctools) - NFCTools is a collection of libraries and tools for NFC in Java.\n* [Node NFC ★ 41 ⧗ 38](https://github.com/camme/node-nfc) - A first try at binding libnfc to node.\n* [RFIDIOt ★ 314 ⧗ 6](https://github.com/AdamLaurie/RFIDIOt) - python RFID / NFC library & tools.\n\n### Serial\n\n* [rxtx ★ 67 ⧗ 4](https://github.com/rxtx/rxtx) - a Java cross platform wrapper library for the serial port\n\n### Others\n\n* [Balena ★ 329 ⧗ 3](https://github.com/resin-os/balena) -  is a new container engine purpose-built for embedded and IoT use cases and compatible with Docker containers.\n* **[Drake ★ 500 ⧗ 0](https://github.com/RobotLocomotion/drake)** -  is a toolbox maintained by the Robot Locomotion Group at the MIT Computer Science and Artificial Intelligence Lab (CSAIL).\n* [IBM messaging](https://github.com/ibm-messaging) - Community around IBM Messaging products.\n* [IotWeb ★ 4 ⧗ 9](https://github.com/sensaura-public/iotweb) - A Embedded HTTP and WebSocket Server for UWP/.NET 4.5.\n* [Mender: Deployment Service ★ 8 ⧗ 14](https://github.com/mendersoftware/deployments) - Microservice for managing software deployments for IIoT devices within Mender ecosystem.\n* **[meshblu ★ 738 ⧗ 0](https://github.com/octoblu/meshblu)** - Machine-to-machine instant messaging platform for the internet of things.\n* [Python Enocean ★ 13 ⧗ 45](https://github.com/kipe/enocean) - A Python library for reading and controlling EnOcean devices.\n* [React Native ESP8266 Smartconfig ★ 75 ⧗ 5](https://github.com/tuanpmt/react-native-smartconfig) - a react-native module for ESP8266 ESPTOUCH Smart config.\n* **[Servo ★ 7821 ⧗ 0](https://github.com/servo/servo)** -  is a prototype web browser engine written in the Rust language.\n* [ShellHub ★ 702 ⧗ 70](https://github.com/shellhub-io/shellhub) - Centralized SSH for the the edge and cloud computing.\n* [The Things Stack ★ 887 ⧗ 4](https://github.com/TheThingsNetwork/lorawan-stack) - The Things Stack, an open source LoRaWAN network server created by The Things Industries. Creators of the global open crowdsourced Internet of Things data network The Things Network.\n* [The Things Network Arduino Library ★ 82 ⧗ 9](https://github.com/TheThingsNetwork/arduino-device-lib) - is an Arduino Library for Arduino devices like The Things Uno and Node to communicate via The Things Network.\n* [WAMP Protocol ★ 228 ⧗ 1](https://github.com/wamp-proto/wamp-proto) - The Web Application Messaging Protocol The Web Application Messaging Protocol.\n\n## Software\n\n* [Copper ★ 46 ⧗ 14](https://github.com/mkovatsc/Copper) - A Firefox add-on to browse the Internet of Things\n* **[Processing ★ 2644 ⧗ 0](https://github.com/processing/processing)** - Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\n\n## Tools\n\n* [Paho](http://www.eclipse.org/paho) - The Paho project provides open-source client implementations of MQTT and MQTT-SN messaging protocols aimed at new, existing, and emerging applications for Machine‑to‑Machine (M-2-M) and Internet of Things (IoT).\n* [Smart.js ★ 487 ⧗ 0](https://github.com/cesanta/smart.js) - Embedded Javascript engine for C/C++ with networking, file, database and device interfaces\n* **[Toit ★ 961 ⧗ 67](https://toit.io/)** - The Toit platform combines the functionality of serving your devices in a robust, resilient way, and letting you have control over your devices and your data, as well as ready-to-use over-the-air firmware and application updates on your network-connected embedded devices.\n* [ThingsOn MQTT Bench](https://github.com/volkanalkilic/ThingsOn.MQTT.Bench) - ThingsOn MQTT Bench is a simple Cross-platform .NET Core benchmark tool for MQTT brokers. It measures the maximum number of messages that can be sent to the broker in a specified amount of time.\n* [MQTT File Uploader](https://github.com/volkanalkilic/Mqtt-File-Uploader) - MQTT File Uploader is a simple Cross-platform .NET Core application that watches local directories for changes and uploads new or modified files to an MQTT broker.\n\n## Voice\n\n* [chelexa ★ 2 ⧗ 25](https://github.com/chelexa/chelexa) - Natural voice recognition IoT cloud chess solution via the Amazon Echo platform.\n* [Mycroft](https://mycroft.ai/) - Mycroft is the world’s first open source voice assistant.\n\n## Resources-Websites-Projects\n\n\n### Course\n\n* [Advanced Penetration Testing](https://www.cybrary.it/course/advanced-penetration-testing/) - Free\n* [An Introduction to Programming the Internet of Things (IOT) Specialization](https://www.coursera.org/specializations/iot) - Landing page of 6 courses (Introduction to the Internet of Things and Embedded Systems / The Arduino Platform and C Programming / Interfacing with the Arduino / The Raspberry Pi Platform and Python Programming for the Raspberry Pi / Interfacing with the Raspberry Pi / Programming for the Internet of Things Capstone).\n* [Architecting Smart IoT Devices](https://www.coursera.org/learn/iot-architecture) - Free\n* [Build an Intelligent System: From Embedded to Cloud (NOT FREE)](https://www.pluralsight.com/courses/building-intelligent-system-embedded-to-cloud) - None\n* [Cryptography](https://www.cybrary.it/course/cryptography/) - Free\n* [Cyber Security Graduate Certificate](http://online.stanford.edu/course/cyber-security-graduate-certificate) - Courses: Operating Systems and Systems Programming, Introduction to Computer Networking, Computer and Network Security, Bitcoin and Crypto Currencies, Introduction to Cryptography, Technology and National Security (Paid).\n* [Introduction to Architecting Smart IoT Devices](https://www.coursera.org/learn/iot-devices) - Free\n* [Low-Level Software Security: Attacks and Countermeassures](https://www.youtube.com/watch?v=ZLZkf8FVcsU) - None\n* [Penetration Testing and Ethical Hacking](https://www.cybrary.it/course/ethical-hacking/) - Free\n* [Secure Coding](https://www.cybrary.it/course/secure-coding/) - Free\n* [Serverless Reference Architecture: IoT Backend ★ 134 ⧗ 3](https://github.com/awslabs/lambda-refarch-iotbackend) - demonstrates how to use AWS Lambda in conjunction with Amazon Kinesis, Amazon DynamoDB, Amazon Simple Storage Service (Amazon S3), and Amazon CloudWatch to build a serverless system for ingesting and processing sensor data.\n* [Social Engineering and Manipulation](https://www.cybrary.it/course/social-engineering/) - Free\n* [Software Architecture for the Internet of Things](https://www.coursera.org/learn/iot-software-architecture) - Free\n* [Stanford Advanced Computer Security Certificate](http://computersecurity.stanford.edu/?q=certificate-overview) - Required courses: Using Cryptography Correctly, Writing Secure Code, Exploiting and Protecting Web Applications; Elective courses: Software Security Foundations, Mobile Security, Network Security, Emerging Threats & Defenses (Paid).\n* [Web Application Penetration Testing](https://www.cybrary.it/course/web-application-pen-testing/) - Free\n* [Web Connectivity and Security in Embedded Systems](https://www.coursera.org/learn/iot-connectivity-security) - Free\n* [IOT online courses](https://skillcombo.com/topic/internet-of-things/free/) - Free\n\n### WebSite\n\n* [Eclipse IoT](https://iot.eclipse.org) - Eclipse Foundation IoT top level project and working group.\n* [Hackaday](https://hackaday.io/projects) - Discover. Get inspired. Repeat. Hack things for the better.\n* [IBM IoT](http://www.ibm.com/developerworks/cn/iot) - IBM DeveloperWorks for IoT\n* [Infoq IoT Weekly](http://www.infoq.com/cn/adf) - Weekly IoT News, Open Source Project, Hardware\n* [Instructables - tech](http://www.instructables.com/tag/type-id/category-technology/) - Explore the Biggest How To and DIY community where people make and share inspiring, entertaining, and useful projects, recipes, and hacks.\n* [Makezine](https://makezine.com/) - DIY Projects and Ideas for Makers.\n* [Explore IoT](https://kandi.openweaver.com/explore/internet-of-things) - A search engine 🔎 tool to discover & find a curated list of popular & new IoT libraries across all languages, top authors, trending project kits, discussions, tutorials & learning resources.\n\n### Blog\n\n* [Arduino Create](https://create.arduino.cc) - None\n* [http://edi.wang/](http://edi.wang/) - ``ASP.NET``, ``Windows 10 IoT``\n* [IBM DeveloperWorks IoT](http://www.ibm.com/developerworks/cn/iot/) - None\n* [IBM IoT Blog](https://www.ibm.com/blogs/internet-of-things/) - None\n* [Industrial IoT blog](https://industrial-iot.com/) - \"Industrial IoT/Industrie 4.0 Viewpoints\".\n* [Intel IoT Blog](https://software.intel.com/zh-cn/iot/home) - None\n* [Microsoft IoT Blog](https://blogs.microsoft.com/iot/) - None\n* [唯笑志在-ServerSuperIO](http://www.cnblogs.com/lsjwq/) - None\n* [Bosch ConnectedWorld Blog](https://blog.bosch-si.com/) - IoT articles from the world of Bosch.\n* [IoT for All](https://www.iotforall.com/) - High-quality IoT content, resources, and news.\n\n### Group\n\n* [Guokr DIY](http://www.guokr.com/group/27/) - A Chinese DIY Group.\n\n### GitHub Org.\n\n* [Intel iot-devkit libraries](https://github.com/intel-iot-devkit) - Official github repo for Intel IoT developer kit libraries & samples\n* [Microsoft IoT](https://github.com/ms-iot/) - Microsoft IoT Team\n* [The Hybrid Group](https://github.com/hybridgroup) - the create of cylon.js\n\n### Free Book\n\n* **[Design IoT ★ 594 ⧗ 0](https://github.com/phodal/designiot)** - A Ebook to tech your create IoT System step by step.\n* [IoT-Firstep ★ 24 ⧗ 9](https://github.com/nladuo/IoT-Firstep) - A Ebook to tech your create IoT System.\n* [IPv6-WSN-Book](http://github.com/marcozennaro/IPv6-WSN-book) - an easy guide to Wireless Sensor Networks (WSN), IPv6 and the Internet of Things (IoT).\n* [Using the Web to Build the IoT](https://www.manning.com/books/using-the-web-to-build-the-iot) - A collection of six hand-picked chapters that introduce the key technologies and concepts for building the application layer of the IoT.\n\n### Related Resources Projects\n\n* [awesome-embedded-systems ★ 0 ⧗ 29](https://github.com/fkromer/awesome-embedded-systems) - The website [awesome-embedded-systems.org](http://awesome-embedded-systems.org) lists resources about embedded system, software and hardware development.\n* **[awesome-mqtt ★ 668 ⧗ 0](https://github.com/hobbyquaker/awesome-mqtt)** - Curated list of MQTT related stuff.\n\n### Tutorial\n\n* [micro-services-tutorial-iot ★ 20 ⧗ 13](https://github.com/nearform/micro-services-tutorial-iot) - An instructor led microservices workshop.\n* [Unpacking the Internet of Things](https://www.udemy.com/unpacking-the-internet-of-things/learn/v4/overview) - Shows use cases to help to identify possible potential for enterprise specific products.\n* [Arduino, RaspberryPi and MQTT](https://github.com/sofianinho/training/tree/master/iot) - Builds an end to end IoT application that ties together several aspects of the MQTT protocol.\n\n## Edge\n\n* **[AREG SDK ★ 15 ⧗ 0](https://github.com/aregtech/areg-sdk)** - AREG SDK is a developer-friendly, an interface-centric real-time asynchronous communication engine to enable distributed- and [mist-computing](https://csrc.nist.gov/publications/detail/sp/500-325/final), where connected Things interact and provide services, as if they act like thin distributed servers.\n* [Eden ★ 25 ⧗ 0](https://github.com/lf-edge/eden) - CLI for Edge Virtualization Engine (EVE)\n* [Project Flogo ★ 207 ⧗ 0](https://github.com/TIBCOSoftware/flogo) - is an Open Source Framework for IoT Edge Apps & Integration.\n\n## AI\n\n* **[ELL ★ 1859 ⧗ 0](https://github.com/Microsoft/ELL)** - allows you to build and deploy machine-learned pipelines onto embedded platforms, like Raspberry Pis, Arduinos, micro:bits, and other microcontrollers.\n* [libdeep](https://github.com/bashrc/libdeep) - A deep learning library for C/C++.\n* [Machinery ★ 174 ⧗ 0](https://github.com/kerberos-io/machinery) - is a low-budget video surveillance solution, that uses computer vision algorithms to detect changes, and that can trigger other devices.\n* [TensorFlow for Raspberry Pi ★ 317 ⧗ 0](https://github.com/samjabrahams/tensorflow-on-raspberry-pi) - step-by-step instructions for installing TensorFlow from source using Bazel (which is also compiled from-scratch), as well as pre-built TensorFlow binaries.\n\n## Analytics\n\n* [Bistro ★ 321 ⧗ 0](https://github.com/asavinov/bistro) - light-weight batch and stream analytics engine which radically changes the way data is processed. Bistro relies on a novel column-oriented data model and is intended for IoT applications and data processing at the edge.\n* **[NetData ★ 18973 ⧗ 0](https://github.com/firehol/netdata)** - is a system for distributed real-time performance and health monitoring.\n* **[Piwik ★ 5374 ⧗ 0](https://github.com/piwik/piwik)** - Piwik is the leading Free/Libre open analytics platform.\n* [Samsara ★ 64 ⧗ 1](https://github.com/samsara/samsara) - is a real-time analytics platform.\n\n## Digital Twins\n\n* [Eclipse Ditto](https://github.com/eclipse/ditto) is the open-source project of Eclipse IoT that provides a ready-to-use functionality to manage the state of Digital Twins.\n\n\n## Others\n\n* [connectthedots ★ 307 ⧗ 0](https://github.com/Azure/connectthedots) - Connect tiny devices to Microsoft Azure services to build IoT solutions\n* [django-th ★ 275 ⧗ 0](https://github.com/foxmask/django-th) - take the control of your data with this opensource clone of IFTTT, a bridge between your internet services.\n* [souliss ★ 137 ⧗ 8](https://github.com/souliss/souliss) - Arduino based Distributed Networking Framework for Smart Homes and IoT.\n\n# Contributing\n\nYour contributions are always welcome! Please submit a pull request or create an issue to add a new framework, library or software to the list. Do not submit a project that hasn’t been updated in the past 6 months or is not awesome.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 1.5693359375,
          "content": "# Contribution Guidelines\n\nPlease ensure your pull request adheres to the following guidelines:\n\n- Read [the awesome manifesto](https://github.com/sindresorhus/awesome/blob/master/awesome.md) and ensure your list complies.\n- Search previous suggestions before making a new one, as yours may be a duplicate.\n- Make sure your list is useful before submitting. That implies it having enough content and every item a good succinct description.\n- A link back to this list from yours, so users can discover more lists, would be appreciated.\n- Make an individual pull request for each suggestion.\n- Titles should be [capitalized](http://grammar.yourdictionary.com/capitalization/rules-for-capitalization-in-titles.html).\n- Use the following format: `[List Name](link)`\n- If you have a comment about the link, add it after a dash, start it with a capital letter, and end it with a full stop. Avoid starting your comment with an article like \"A\", \"The\".\n- Link additions should be added to the bottom of the relevant category.\n- New categories or improvements to the existing categorization are welcome.\n- Check your spelling and grammar.\n- Make sure your text editor is set to remove trailing whitespace.\n- The pull request and commit should have a useful title.\n\nLink format:\n\n```\n[Awesome resource name](resource link) - Performant REST client library by the famous John Doe.\n                                       ^ ^                                                    ^\n                                    dash capital letter, no article                           Full stop\n```\n\nThank you for your suggestions!\n"
        },
        {
          "name": "metadata.py",
          "type": "blob",
          "size": 6.265625,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# by Erik Osheim\n#\n# Reads README.md, and writes a README.md.new. If the format of\n# README.md changes, this script may need modifications.\n#\n# Currently it rewrites each section, doing the following:\n#  1. alphabetizing\n#  2. querying GitHub for stars and days since active\n#  3. formatting the link title to show this info\n#  4. bolding projects with lots of stars\n#\n# Once README.md has the stars/days info in the links, the\n# repo_regex will need slight modification.\n#\n# In order to use GH authentication, create a file in this directory\n# called .access-token, whose contents are: \"$user:$token\" where $user\n# is your github username, and $token is a Personal Access Token.\n\nimport base64\nimport datetime\nimport json\nimport os.path\nimport random\nimport re\nimport shutil\nimport sys\nimport urllib2\n\n# we use these regexes when \"parsing\" README.md\nempty_regex = re.compile(r\"^ *\\n$\")\nsection_regex = re.compile(r\"(^## (.+)\\n$)|(^### (.+)\\n$)\")\nrepo_regex = re.compile(r\"^\\* (?:\\*\\*)?\\[?([^*★]+[^ ★])(?: ★ ([^ ]+) ⧗ ([^ *]+))?\\]\\((.+?)\\)(?:\\*\\*)?(?: (?:-|—|–) (.+))?\\n$\")\nend_regex = re.compile(r\"^# .+\\n$\")\ngithub_regex = re.compile(r\"^https://github.com/(.+?)/(.+?)(?:/?)$\")\n\n# some paths\nreadme_path = 'README.md'\ntemp_path = 'README.md.new'\n\n# these will be updated if .access-token exists.\nuser = None\ntoken = None\n\n# use fake to avoid hitting github API\nfake = True\n\n# whether to query all projects, or just those lacking scores/days.\nfull_update = False\n\n# right now.\nnow = datetime.datetime.now()\n\n# ask github for the number of stargazers, and days since last\n# activity, for the given github project.\ndef query(owner, name):\n    if fake:\n        print '    {0}/{1}: ok'.format(owner, name)\n        return (random.randint(1, 1000), random.randint(1, 300))\n    else:\n        try:\n            req = urllib2.Request('https://api.github.com/repos/{0}/{1}'.format(owner, name))\n            if user is not None and token is not None:\n                b64 = base64.encodestring('{0}:{1}'.format(user, token)).replace('\\n', '')\n                req.add_header(\"Authorization\", \"Basic {0}\".format(b64))\n            u = urllib2.urlopen(req)\n            j = json.load(u)\n            t = datetime.datetime.strptime(j['updated_at'], \"%Y-%m-%dT%H:%M:%SZ\")\n            days = max(int((now - t).days), 0)\n            print '    {0}/{1}: ok'.format(owner, name)\n            return (int(j['stargazers_count']), days)\n        except urllib2.HTTPError, e:\n            print '    {0}/{1}: FAILED'.format(owner, name)\n            return (None, None)\n\ndef output_repo(outf, name, stars, days, link, rdesc):\n    popular = stars is not None and int(stars) >= 500\n    if stars is None and days is None:\n        title = name\n    else:\n        title = '%s ★ %s ⧗ %s' % (name, stars, days)\n    if popular:\n        outf.write('* **[{0}]({1})** - {2}\\n'.format(title, link, rdesc))\n    else:\n        outf.write('* [{0}]({1}) - {2}\\n'.format(title, link, rdesc))\n\ndef flush_section(outf, section, sdesc, repos):\n    print '  ' + section.strip()\n    outf.write(section)\n    outf.write('\\n')\n    if sdesc:\n        outf.write(sdesc)\n        outf.write('\\n')\n    repos.sort(key=lambda t: t[0].lower())\n    for name, stars, days, link, rdesc in repos:\n        if not full_update and stars is not None and days is not None:\n            output_repo(outf, name, stars, days, link, rdesc)\n            continue\n\n        m = github_regex.match(link)\n        if not m:\n            print '    {0}: not a repo'.format(link)\n            output_repo(outf, name, stars, days, link, rdesc)\n            continue\n\n        stars, days = query(m.group(1), m.group(2))\n        output_repo(outf, name, stars, days, link, rdesc)\n    outf.write('\\n')\n\ndef run():\n    if full_update:\n        print 'querying for all entries'\n    else:\n        print 'querying for new entries only'\n\n    if fake:\n        print 'running in fake mode -- no GH queries will be made'\n\n    if os.path.exists('.access-token'):\n        global user, token\n        user, token = open('.access-token').read().strip().split(':')\n        print 'using Personal Access Token {0}:{1}'.format(user, token)\n    else:\n        print 'no Personal Access Token found in .access-token'\n\n    inf = open(readme_path, 'r')\n    lines = list(inf)\n    inf.close()\n    print 'read {0}'.format(readme_path)\n\n    started = False\n    finished = False\n    section = None\n    sdesc = None\n    repos = []\n    outf = open(temp_path, 'w')\n\n    total_repos = 0\n\n    print 'writing {0}'.format(temp_path)\n    for line in lines:\n        if finished:\n            outf.write(line)\n        elif started:\n            if end_regex.match(line):\n                total_repos += len(repos)\n                flush_section(outf, section, sdesc, repos)\n                outf.write(line)\n                finished = True\n            elif empty_regex.match(line):\n                continue\n            elif section_regex.match(line):\n                total_repos += len(repos)\n                flush_section(outf, section, sdesc, repos)\n                section = line\n                sdesc = None\n                repos = []\n            else:\n                m = repo_regex.match(line)\n                if m:\n                    name, stars, days, link, rdesc = m.groups()\n                    repos.append((name, stars, days, link, rdesc))\n                elif sdesc is None:\n                    sdesc = line\n                else:\n                    raise Exception(\"cannot parse {0}\".format(line))\n        else:\n            if section_regex.match(line):\n                section = line\n                started = True\n            else:\n                outf.write(line)\n    outf.close()\n    print 'wrote {0} repos to {1}'.format(total_repos, temp_path)\n\n    print 'moving {0} to {1}'.format(temp_path, readme_path)\n    shutil.move(temp_path, readme_path)\n\nif __name__ == \"__main__\":\n    #global fake, full_update\n\n    from optparse import OptionParser\n\n    parser = OptionParser()\n    parser.add_option(\"-f\", \"--fake\", action=\"store_true\", dest=\"fake\",\n                      default=False, help=\"don't query github, use fake data\")\n    parser.add_option(\"-u\", \"--update\", action=\"store_true\", dest=\"update\",\n                      default=False, help=\"update all entries to newest data\")\n\n    opts, _ = parser.parse_args()\n    fake = opts.fake\n    full_update = opts.update\n    run()\n"
        },
        {
          "name": "toc.py",
          "type": "blob",
          "size": 13.333984375,
          "content": "#!/usr/bin/env python\n\n#\n# Sebastian Raschka 2014-2015\n#\n# Python script that inserts a table of contents\n# into markdown documents and creates the required\n# internal links.\n#\n# For more information about how internal links\n# in HTML and Markdown documents work, please see\n#\n# Creating a table of contents with internal links in\n# IPython Notebooks and Markdown documents:\n# http://sebastianraschka.com/Articles/2014_ipython_internal_links.html\n#\n# Updates for this script will be available at\n# https://github.com/rasbt/markdown-toclify\n#\n# for more information about the usage:\n# markdown-toclify.py --help\n#\n\nimport argparse\nimport re\n\n\n__version__ = '1.7.1'\n\nVALIDS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-&'\n\n\ndef read_lines(in_file):\n    \"\"\"Returns a list of lines from a input markdown file.\"\"\"\n\n    with open(in_file, 'r') as inf:\n        in_contents = inf.read().split('\\n')\n    return in_contents\n\n\ndef remove_lines(lines, remove=('[[back to top]', '<a class=\"mk-toclify\"')):\n    \"\"\"Removes existing [back to top] links and <a id> tags.\"\"\"\n\n    if not remove:\n        return lines[:]\n\n    out = []\n    for l in lines:\n        if l.startswith(remove):\n            continue\n        out.append(l)\n    return out\n\n\ndef dashify_headline(line):\n    \"\"\"\n    Takes a header line from a Markdown document and\n    returns a tuple of the\n        '#'-stripped version of the head line,\n        a string version for <a id=''></a> anchor tags,\n        and the level of the headline as integer.\n    E.g.,\n    >>> dashify_headline('### some header lvl3')\n    ('Some header lvl3', 'some-header-lvl3', 3)\n\n    \"\"\"\n    stripped_right = line.rstrip('#')\n    stripped_both = stripped_right.lstrip('#')\n    level = len(stripped_right) - len(stripped_both)\n    stripped_wspace = stripped_both.strip()\n\n    # character replacements\n    replaced_colon = stripped_wspace.replace('.', '')\n    replaced_slash = replaced_colon.replace('/', '')\n    rem_nonvalids = ''.join([c if c in VALIDS\n                             else '-' for c in replaced_slash])\n\n    lowered = rem_nonvalids.lower()\n    dashified = re.sub(r'(-)\\1+', r'\\1', lowered)  # remove duplicate dashes\n    dashified = dashified.strip('-')  # strip dashes from start and end\n\n    # exception '&' (double-dash in github)\n    dashified = dashified.replace('-&-', '--')\n\n    return [stripped_wspace, dashified, level]\n\n\ndef tag_and_collect(lines, id_tag=True, back_links=False, exclude_h=None):\n    \"\"\"\n    Gets headlines from the markdown document and creates anchor tags.\n\n    Keyword arguments:\n        lines: a list of sublists where every sublist\n            represents a line from a Markdown document.\n        id_tag: if true, creates inserts a the <a id> tags (not req. by GitHub)\n        back_links: if true, adds \"back to top\" links below each headline\n        exclude_h: header levels to exclude. E.g., [2, 3]\n            excludes level 2 and 3 headings.\n\n    Returns a tuple of 2 lists:\n        1st list:\n            A modified version of the input list where\n            <a id=\"some-header\"></a> anchor tags where inserted\n            above the header lines (if github is False).\n\n        2nd list:\n            A list of 3-value sublists, where the first value\n            represents the heading, the second value the string\n            that was inserted assigned to the IDs in the anchor tags,\n            and the third value is an integer that reprents the headline level.\n            E.g.,\n            [['some header lvl3', 'some-header-lvl3', 3], ...]\n\n    \"\"\"\n    out_contents = []\n    headlines = []\n    for l in lines:\n        saw_headline = False\n\n        orig_len = len(l)\n        l = l.lstrip()\n\n        if l.startswith(('# ', '## ', '### ', '#### ', '##### ', '###### ')):\n\n            # comply with new markdown standards\n\n            # not a headline if '#' not followed by whitespace '##no-header':\n            if not l.lstrip('#').startswith(' '):\n                continue\n            # not a headline if more than 6 '#':\n            if len(l) - len(l.lstrip('#')) > 6:\n                continue\n            # headers can be indented by at most 3 spaces:\n            if orig_len - len(l) > 3:\n                continue\n\n            # ignore empty headers\n            if not set(l) - {'#', ' '}:\n                continue\n\n            saw_headline = True\n            dashified = dashify_headline(l)\n\n            if not exclude_h or not dashified[-1] in exclude_h:\n                if id_tag:\n                    id_tag = '<a class=\"mk-toclify\" id=\"%s\"></a>'\\\n                              % (dashified[1])\n                    out_contents.append(id_tag)\n                headlines.append(dashified)\n\n        out_contents.append(l)\n        if back_links and saw_headline:\n            out_contents.append('[[back to top](#table-of-contents)]')\n    return out_contents, headlines\n\n\ndef positioning_headlines(headlines):\n    \"\"\"\n    Strips unnecessary whitespaces/tabs if first header is not left-aligned\n    \"\"\"\n    left_just = False\n    for row in headlines:\n        if row[-1] == 1:\n            left_just = True\n            break\n    if not left_just:\n        for row in headlines:\n            row[-1] -= 1\n    return headlines\n\n\ndef create_toc(headlines, hyperlink=True, top_link=False, no_toc_header=False):\n    \"\"\"\n    Creates the table of contents from the headline list\n    that was returned by the tag_and_collect function.\n\n    Keyword Arguments:\n        headlines: list of lists\n            e.g., ['Some header lvl3', 'some-header-lvl3', 3]\n        hyperlink: Creates hyperlinks in Markdown format if True,\n            e.g., '- [Some header lvl1](#some-header-lvl1)'\n        top_link: if True, add a id tag for linking the table\n            of contents itself (for the back-to-top-links)\n        no_toc_header: suppresses TOC header if True.\n\n    Returns  a list of headlines for a table of contents\n    in Markdown format,\n    e.g., ['        - [Some header lvl3](#some-header-lvl3)', ...]\n\n    \"\"\"\n    processed = []\n    if not no_toc_header:\n        if top_link:\n            processed.append('<a class=\"mk-toclify\" id=\"table-of-contents\"></a>\\n')\n        processed.append('# Table of Contents')\n\n    for line in headlines:\n        if hyperlink:\n            item = '%s- [%s](#%s)' % ((line[2]-1)*'    ', line[0], line[1])\n        else:\n            item = '%s- %s' % ((line[2]-1)*'    ', line[0])\n        processed.append(item)\n    processed.append('\\n')\n    return processed\n\n\ndef build_markdown(toc_headlines, body, spacer=0, placeholder=None):\n    \"\"\"\n    Returns a string with the Markdown output contents incl.\n    the table of contents.\n\n    Keyword arguments:\n        toc_headlines: lines for the table of contents\n            as created by the create_toc function.\n        body: contents of the Markdown file including\n            ID-anchor tags as returned by the\n            tag_and_collect function.\n        spacer: Adds vertical space after the table\n            of contents. Height in pixels.\n        placeholder: If a placeholder string is provided, the placeholder\n            will be replaced by the TOC instead of inserting the TOC at\n            the top of the document\n\n    \"\"\"\n    if spacer:\n        spacer_line = ['\\n<div style=\"height:%spx;\"></div>\\n' % (spacer)]\n        toc_markdown = \"\\n\".join(toc_headlines + spacer_line)\n    else:\n        toc_markdown = \"\\n\".join(toc_headlines)\n\n    body_markdown = \"\\n\".join(body).strip()\n\n    if placeholder:\n        markdown = body_markdown.replace(placeholder, toc_markdown)\n    else:\n        markdown = toc_markdown + body_markdown\n\n    return markdown\n\n\ndef output_markdown(markdown_cont, output_file):\n    \"\"\"\n    Writes to an output file if `outfile` is a valid path.\n\n    \"\"\"\n    if output_file:\n        with open(output_file, 'w') as out:\n            out.write(markdown_cont)\n\n\ndef markdown_toclify(input_file, output_file=None, github=False,\n                     back_to_top=False, nolink=False,\n                     no_toc_header=False, spacer=0, placeholder=None,\n                     exclude_h=None):\n    \"\"\" Function to add table of contents to markdown files.\n\n    Parameters\n    -----------\n      input_file: str\n        Path to the markdown input file.\n\n      output_file: str (defaul: None)\n        Path to the markdown output file.\n\n      github: bool (default: False)\n        Uses GitHub TOC syntax if True.\n\n      back_to_top: bool (default: False)\n        Inserts back-to-top links below headings if True.\n\n      nolink: bool (default: False)\n        Creates the table of contents without internal links if True.\n\n      no_toc_header: bool (default: False)\n        Suppresses the Table of Contents header if True\n\n      spacer: int (default: 0)\n        Inserts horizontal space (in pixels) after the table of contents.\n\n      placeholder: str (default: None)\n        Inserts the TOC at the placeholder string instead\n        of inserting the TOC at the top of the document.\n\n      exclude_h: list (default None)\n        Excludes header levels, e.g., if [2, 3], ignores header\n        levels 2 and 3 in the TOC.\n\n    Returns\n    -----------\n    cont: str\n      Markdown contents including the TOC.\n\n    \"\"\"\n    raw_contents = read_lines(input_file)\n    cleaned_contents = remove_lines(raw_contents, remove=('[[back to top]', '<a class=\"mk-toclify\"'))\n    processed_contents, raw_headlines = tag_and_collect(\n                                            cleaned_contents,\n                                            id_tag=not github,\n                                            back_links=back_to_top,\n                                            exclude_h=exclude_h,\n                                            )\n\n    leftjustified_headlines = positioning_headlines(raw_headlines)\n    processed_headlines = create_toc(leftjustified_headlines,\n                                     hyperlink=not nolink,\n                                     top_link=not nolink and not github,\n                                     no_toc_header=no_toc_header)\n\n    if nolink:\n        processed_contents = cleaned_contents\n\n    cont = build_markdown(toc_headlines=processed_headlines,\n                          body=processed_contents,\n                          spacer=spacer,\n                          placeholder=placeholder)\n\n    if output_file:\n        output_markdown(cont, output_file)\n    return cont\n\n\ndef commandline():\n\n    parser = argparse.ArgumentParser(\n            description='Python script that inserts a table of contents\\n'\\\n                    'into markdown documents and creates the required internal links.',\n            epilog=\"\"\"    Example:\n    markdown-toclify.py ~/Desktop/input.md -o ~/Desktop/output.md\n\n    For more information about how internal links in\n    HTML and Markdown documents work\n    please see:\n    \"Creating a table of contents with internal\n     links in IPython Notebooks and Markdown documents\"\n    (http://sebastianraschka.com/Articles/2014_ipython_internal_links.html)\n\n    Updates for this script will be available at\n    https://github.com/rasbt/markdown-toclify\n\n    \"\"\",\n            formatter_class=argparse.RawTextHelpFormatter\n    )\n\n    parser.add_argument('InputFile',\n                        metavar='input.md',\n                        help='path to the Markdown input file')\n    parser.add_argument('-o', '--output',\n                        metavar='output.md',\n                        default=None,\n                        help='path to the Markdown output file')\n    parser.add_argument('-b', '--back_to_top',\n                        action='store_true',\n                        help='add [back to top] links.')\n    parser.add_argument('-g', '--github',\n                        action='store_true',\n                        help='omits id-anchor tags (recommended for GitHub)')\n    parser.add_argument('-s', '--spacer',\n                        default=0,\n                        type=int,\n                        metavar='pixels',\n                        help='add horizontal space (in pixels) after the table of contents')\n    parser.add_argument('-n', '--nolink',\n                        action='store_true',\n                        help='create the table of contents without internal links')\n    parser.add_argument('-e', '--exclude_h',\n                        type=str,\n                        default='',\n                        help='exclude eading levels, e.g., \"2,3\" to exclude all level 2 and 3 headings')\n    parser.add_argument('--placeholder',\n                        type=str,\n                        help='inserts TOC at the placeholder string instead of inserting it on top of the document')\n    parser.add_argument('--no_toc_header',\n                        action='store_true',\n                        help='suppresses the Table of Contents header')\n    parser.add_argument('-v', '--version',\n                        action='version',\n                        version='%s' % __version__)\n\n    args = parser.parse_args()\n\n    if args.exclude_h:\n        exclude_h = [int(i) for i in args.exclude_h.split(',')]\n    else:\n        exclude_h = None\n\n    cont = markdown_toclify(input_file=args.InputFile,\n                            output_file=args.output,\n                            github=args.github,\n                            back_to_top=args.back_to_top,\n                            nolink=args.nolink,\n                            no_toc_header=args.no_toc_header,\n                            spacer=args.spacer,\n                            placeholder=args.placeholder,\n                            exclude_h=exclude_h)\n\n    if not args.output:\n        print(cont)\n\nif __name__ == '__main__':\n    commandline()"
        }
      ]
    }
  ]
}