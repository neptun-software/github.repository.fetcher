{
  "metadata": {
    "timestamp": 1736559766970,
    "page": 481,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ansible/molecule",
      "stars": 3915,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.4189453125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n\n\n\n# In contrast to the entries above this line which largely come from\n# untracked sources, the following have been inidividually rationalized\n# and should all have detailed explanations\n\n# Version created and populated by setuptools_scm\n/src/*/_version.py\n\n.DS_Store\n\nnode_modules/\n\n# There is a test for this, otherwise unknown\n# tests/b_functional/test_command.py test_w_gitignore\ntests/fixtures/resources/.extensions/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 3.4873046875,
          "content": "---\nci:\n  # format compatible with commitlint\n  autoupdate_commit_msg: \"chore: pre-commit autoupdate\"\n  autoupdate_schedule: monthly\n  autofix_commit_msg: \"chore: auto fixes from pre-commit.com hooks\"\ndefault_language_version:\n  python: python3.10 # minimal we support officially for consistent results\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-merge-conflict\n      - id: check-symlinks\n      - id: debug-statements\n      - id: detect-private-key\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n\n  - repo: https://github.com/asottile/add-trailing-comma.git\n    rev: v3.1.0\n    hooks:\n      - id: add-trailing-comma\n\n  - repo: https://github.com/Lucas-C/pre-commit-hooks.git\n    rev: v1.5.5\n    hooks:\n      - id: remove-tabs\n        exclude: >\n          (?x)^(\n            .config/pydoclint-baseline.txt\n          )$\n\n  - repo: https://github.com/pycontribs/mirrors-prettier\n    rev: v3.4.2\n    hooks:\n      - id: prettier\n        always_run: true\n        additional_dependencies:\n          - prettier\n          - prettier-plugin-toml\n          - prettier-plugin-sort-json\n\n  - repo: https://github.com/psf/black\n    rev: 24.10.0\n    hooks:\n      - id: black\n\n  - repo: https://github.com/pappasam/toml-sort\n    rev: v0.24.2\n    hooks:\n      - id: toml-sort-fix\n\n  - repo: https://github.com/tox-dev/tox-ini-fmt\n    rev: 1.4.1\n    hooks:\n      - id: tox-ini-fmt\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff\n        args:\n          - --exit-non-zero-on-fix\n\n  - repo: https://github.com/streetsidesoftware/cspell-cli\n    rev: v8.17.0\n    hooks:\n      - id: cspell\n        name: Spell check with cspell\n\n  - repo: https://github.com/jsh9/pydoclint\n    rev: \"0.5.14\"\n    hooks:\n      - id: pydoclint\n        # This allows automatic reduction of the baseline file when needed.\n        entry: sh -ec \"pydoclint . && pydoclint --generate-baseline=1 .\"\n        pass_filenames: false\n\n  - repo: https://github.com/pycqa/pylint.git\n    rev: v3.3.3\n    hooks:\n      - id: pylint\n        args:\n          - --output-format=colorized\n        additional_dependencies:\n          - ansible-compat>=24.6.1\n          - click\n          - click-help-colors\n          - enrich>=1.2.7\n          - filelock\n          - jsonschema\n          - pexpect\n          - pytest-mock\n          - pytest-testinfra\n          - wcmatch\n\n  - repo: https://github.com/pre-commit/mirrors-mypy.git\n    rev: v1.14.1\n    hooks:\n      - id: mypy\n        additional_dependencies:\n          - ansible-compat>=24.6.1\n          - click\n          - click-help-colors\n          - enrich\n          - pytest\n          - pytest-mock\n          - rich\n          - types-pyyaml\n          - types-filelock\n          - types-jsonschema\n          - types-pexpect\n          - types-setuptools\n          - wcmatch\n        # Override default pre-commit '--ignore-missing-imports'\n        args: [--strict]\n\n  - repo: https://github.com/jazzband/pip-tools\n    rev: 7.4.1\n    hooks:\n      - id: pip-compile\n        name: deps\n        alias: deps\n        stages: [manual]\n        entry: >-\n          pip-compile .config/requirements.in\n          --upgrade\n          --all-extras\n          --no-annotate\n          --strip-extras\n          --output-file=.config/constraints.txt pyproject.toml\n        files: ^.config\\/.*requirements.*$\n  - repo: https://github.com/ansible/ansible-lint\n    rev: v24.12.2\n    hooks:\n      - id: ansible-lint\n        stages: [manual]\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.404296875,
          "content": "---\nversion: 2\n\nmkdocs:\n  fail_on_warning: true\n  configuration: mkdocs.yml\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n  commands:\n    - pip install --user tox\n    - python3 -m tox -e docs -- --strict --site-dir=_readthedocs/html/\npython:\n  install:\n    - method: pip\n      path: tox\n    - method: pip\n      path: .\n      extra_requirements:\n        - docs\nsubmodules:\n  include: all\n  recursive: true\n"
        },
        {
          "name": ".sonarcloud.properties",
          "type": "blob",
          "size": 0.080078125,
          "content": "sonar.python.version=3.10, 3.11, 3.12, 3.13\nsonar.sources=src/\nsonar.tests=tests/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.091796875,
          "content": "The MIT License\n\nCopyright (c) 2015-2018 Cisco Systems, Inc.\nCopyright (c) 2018 Red Hat, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.7177734375,
          "content": "# About Ansible Molecule\n\n[![PyPI Package](https://img.shields.io/pypi/v/molecule)](https://pypi.org/project/molecule/)\n[![Documentation Status](https://readthedocs.org/projects/molecule/badge/?version=latest)](https://ansible.readthedocs.io/projects/molecule)\n[![image](https://github.com/ansible-community/molecule/workflows/tox/badge.svg)](https://github.com/ansible-community/molecule/actions)\n[![Python Black Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![Ansible Code of Conduct](https://img.shields.io/badge/Code%20of%20Conduct-silver.svg)](https://docs.ansible.com/ansible/latest/community/code_of_conduct.html)\n[![Discussions](https://img.shields.io/badge/Discussions-silver.svg)](https://forum.ansible.com/tag/molecule)\n[![Repository License](https://img.shields.io/badge/license-MIT-brightgreen.svg)](LICENSE)\n\nMolecule project is designed to aid in the development and testing of\n[Ansible](https://ansible.com) roles.\n\nMolecule provides support for testing with multiple instances, operating\nsystems and distributions, virtualization providers, test frameworks and\ntesting scenarios.\n\nMolecule encourages an approach that results in consistently developed\nroles that are well-written, easily understood and maintained.\n\nMolecule supports only the latest two major versions of Ansible (N/N-1),\nmeaning that if the latest version is 2.9.x, we will also test our code\nwith 2.8.x.\n\nOnce installed, the command line can be called using any of the methods\nbelow:\n\n```bash\nmolecule ...\npython3 -m molecule ...  # python module calling method\n```\n\n# Documentation\n\nRead the documentation and more at <https://ansible.readthedocs.io/projects/molecule/>.\n\n# Get Involved\n\nSee the [Talk to us](https://ansible.readthedocs.io/projects/molecule/contributing/#talk-to-us) section of the documentation to ask questions, find help, and join the conversation.\n\nFor complete details, see the\n[Ansible communication guide](https://docs.ansible.com/ansible/devel/community/communication.html).\n\nIf you want to get moving fast and make a quick patch:\n\n```bash\n$ git clone https://github.com/ansible-community/molecule && cd molecule\n$ python3 -m venv .venv && source .venv/bin/activate\n$ python3 -m pip install -U setuptools pip tox\n```\n\nAnd you're ready to make your changes!\n\n# Authors\n\nMolecule project was created by [Retr0h](https://github.com/retr0h) and\nit is now community-maintained as part of the\n[Ansible](https://ansible.com) by Red Hat project.\n\n# License\n\nThe\n[MIT](https://github.com/ansible-community/molecule/blob/main/LICENSE)\nLicense.\n\nThe logo is licensed under the [Creative Commons NoDerivatives 4.0\nLicense](https://creativecommons.org/licenses/by-nd/4.0/).\n\nIf you have some other use in mind, contact us.\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0498046875,
          "content": "comment: false\ncoverage:\n  status:\n    patch: true\n"
        },
        {
          "name": "collections",
          "type": "tree",
          "content": null
        },
        {
          "name": "cspell.config.yaml",
          "type": "blob",
          "size": 0.4111328125,
          "content": "dictionaryDefinitions:\n  - name: words\n    path: .config/dictionary.txt\n    addWords: true\ndictionaries:\n  - bash\n  - networking-terms\n  - python\n  - words\n  - \"!aws\"\n  - \"!backwards-compatibility\"\n  - \"!cryptocurrencies\"\n  - \"!cpp\"\nignorePaths:\n  - .config/requirements*\n  - \\.*\n  - cspell.config.yaml\n  - mkdocs.yml\n  - pyproject.toml\n  - tox.ini\n\nlanguageSettings:\n  - languageId: python\n    allowCompoundWords: false\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 3.6162109375,
          "content": "---\nsite_name: Ansible Molecule\nsite_url: https://ansible.readthedocs.io/projects/molecule/\nrepo_url: https://github.com/ansible/molecule\nedit_uri: blob/main/docs/\ncopyright: Copyright © 2024 Red Hat, Inc.\ndocs_dir: docs\nstrict: true\n\ntheme:\n  name: ansible\n  features:\n    - announce.dismiss\n    - content.action.edit\n    - content.action.view\n    - content.code.annotate\n    - content.code.copy\n    - content.tabs.link\n    - content.tooltips\n    - header.autohide\n    - navigation.expand\n    - navigation.footer\n    - navigation.indexes\n    - navigation.instant\n    - navigation.path\n    - navigation.prune\n    - navigation.sections\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.top\n    - navigation.tracking\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\n    - toc.integrate\nextra:\n  generator: false\n  social:\n    - icon: fontawesome/brands/python\n      link: https://pypi.org/project/molecule/\n      name: PyPI\n    - icon: fontawesome/solid/scroll\n      link: https://github.com/ansible/molecule/releases\n      name: Releases\n    - icon: simple/mastodon\n      link: https://fosstodon.org/@ansible\n      name: Mastodon\n    - icon: simple/matrix\n      link: https://matrix.to/#/#devtools:ansible.com\n      name: Matrix\n    - icon: fontawesome/brands/discourse\n      link: https://forum.ansible.com/c/project/7\n      name: Ansible forum\n    - icon: fontawesome/brands/github-alt\n      link: https://github.com/ansible/molecule\n\nnav:\n  - Home: index.md\n  - installation.md\n  - Using:\n      - getting-started.md\n      - usage.md\n      - next.md\n      - configuration.md\n      - ci.md\n  - Examples:\n      - examples/docker.md\n      - examples/podman.md\n      - examples/kubevirt.md\n  - Guides:\n      - guides/custom-image.md\n      - guides/docker-rootless.md\n      - guides/monolith.md\n      - guides/inside-a-container.md\n      - guides/parallel.md\n      - guides/podman-inside-docker.md\n      - guides/sharing.md\n      - guides/systemd-container.md\n  - faq.md\n  - contributing.md\n\nplugins:\n  - autorefs\n  - macros:\n      modules: [mkdocs-ansible:mkdocs_ansible]\n  - material/search:\n      separator: '[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])'\n  - material/social\n  - material/tags\n  - mkdocstrings:\n      enable_inventory: true\n      default_handler: python\n      handlers:\n        python:\n          paths: [src]\n          options:\n            # Sphinx is for historical reasons, but we could consider switching if needed\n            # https://mkdocstrings.github.io/griffe/docstrings/\n            docstring_style: sphinx\n            merge_init_into_class: yes\n            show_submodules: yes\n          import:\n            - url: https://docs.ansible.com/ansible/latest/objects.inv\n              domains: [py, std, \"std:doc\", \"std:label\"]\n            - url: https://pip.pypa.io/en/latest/objects.inv\n              domains: [py, std]\n\nmarkdown_extensions:\n  - markdown_include.include:\n      base_path: . # CWD (project root)\n      throwException: true\n  - admonition\n  - def_list\n  - footnotes\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets:\n      check_paths: true\n  - pymdownx.magiclink:\n      repo_url_shortener: true\n      repo_url_shorthand: true\n      social_url_shorthand: true\n      social_url_shortener: true\n      normalize_issue_symbols: true\n  - pymdownx.tabbed:\n      alternate_style: true\n  - toc:\n      # reduced to keep TOC nice under Changelog page\n      toc_depth: 2\n      permalink: true\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 15.66015625,
          "content": "[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\n  \"setuptools >= 65.3.0\", # required by pyproject+setuptools_scm integration and editable installs\n  \"setuptools_scm[toml] >= 7.0.5\" # required for \"no-local-version\" scheme\n]\n\n[project]\nauthors = [{\"email\" = \"info@ansible.com\", \"name\" = \"Ansible by Red Hat\"}]\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Environment :: Console\",\n  \"Intended Audience :: Developers\",\n  \"Intended Audience :: Information Technology\",\n  \"Intended Audience :: System Administrators\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Operating System :: MacOS\",\n  \"Operating System :: POSIX\",\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Programming Language :: Python :: 3.13\",\n  \"Programming Language :: Python\",\n  \"Topic :: System :: Systems Administration\",\n  \"Topic :: Software Development :: Bug Tracking\",\n  \"Topic :: Software Development :: Quality Assurance\",\n  \"Topic :: Software Development :: Testing\",\n  \"Topic :: Utilities\"\n]\ndescription = \"Molecule aids in the development and testing of Ansible roles\"\ndynamic = [\"version\", \"dependencies\", \"optional-dependencies\"]\nkeywords = [\"ansible\", \"roles\", \"testing\", \"molecule\"]\nlicense = {text = \"MIT\"}\nmaintainers = [{\"email\" = \"info@ansible.com\", \"name\" = \"Ansible by Red Hat\"}]\nname = \"molecule\"\nreadme = \"README.md\"\nrequires-python = \">=3.10\"\n\n[project.entry-points.\"molecule.driver\"]\ndefault = \"molecule.driver.delegated:Delegated\"\n\n[project.entry-points.\"molecule.verifier\"]\nansible = \"molecule.verifier.ansible:Ansible\"\ntestinfra = \"molecule.verifier.testinfra:Testinfra\"\n\n[project.scripts]\nmolecule = \"molecule.__main__:main\"\n\n[project.urls]\nchangelog = \"https://github.com/ansible-community/molecule/releases\"\ndocumentation = \"https://molecule.readthedocs.io/\"\nhomepage = \"https://github.com/ansible-community/molecule\"\nrepository = \"https://github.com/ansible-community/molecule\"\n\n[tool.black]\nline-length = 100\n\n[tool.coverage.report]\nexclude_also = [\"if TYPE_CHECKING:\", \"pragma: no cover\"]\nfail_under = 90\nignore_errors = true\nshow_missing = true\nskip_covered = true\nskip_empty = true\nsort = \"Cover\"\n\n[tool.coverage.run]\nbranch = false # https://github.com/nedbat/coveragepy/issues/605\nconcurrency = [\"multiprocessing\", \"thread\"]\nomit = [\"types.py\", \"_version.py\"]\nparallel = true\nsource_pkgs = [\"molecule\"]\n\n[tool.mypy]\ncache_dir = \"./.cache/.mypy\"\n# To ensure that calling `mypy .` produces desired results (vscode)\nexclude = [\"build\"]\nfiles = [\"src\", \"tests\"]\npython_version = \"3.10\"\nstrict = true\n\n[[tool.mypy.overrides]]\nignore_missing_imports = true\nmodule = [\n  \"click_help_colors\", # https://github.com/click-contrib/click-help-colors/issues/20\n  \"testinfra.*\" # https://github.com/pytest-dev/pytest-testinfra/issues/619\n]\n\n[tool.pydoclint]\nallow-init-docstring = true\narg-type-hints-in-docstring = false\nbaseline = \".config/pydoclint-baseline.txt\"\ncheck-return-types = false\ncheck-yield-types = false\nexclude = '\\.cache|\\.git|\\.tox|build|out|venv'\nquiet = true # no need to print out the files being checked\nshould-document-private-class-attributes = true\nshow-filenames-in-every-violation-message = true\nskip-checking-short-docstrings = false\nstyle = \"google\"\n\n[tool.pylint]\n\n[tool.pylint.format]\nmax-line-length = 100\n\n[tool.pylint.master]\ngood-names = \"i,j,k,ex,Run,_,f,fh\"\nignore = [\n  \"_version.py\" # built by setuptools_scm\n]\njobs = 0\nno-docstring-rgx = \"__.*__\"\n\n[tool.pylint.messages_control]\ndisable = [\n  \"unknown-option-value\",\n  # https://gist.github.com/cidrblock/ec3412bacfeb34dbc2d334c1d53bef83\n  \"C0103\", # invalid-name / ruff N815\n  \"C0105\", # typevar-name-incorrect-variance / ruff PLC0105\n  \"C0112\", # empty-docstring / ruff D419\n  \"C0113\", # unneeded-not / ruff SIM208\n  \"C0114\", # missing-module-docstring / ruff D100\n  \"C0115\", # missing-class-docstring / ruff D101\n  \"C0116\", # missing-function-docstring / ruff D103\n  \"C0121\", # singleton-comparison / ruff PLC0121\n  \"C0123\", # unidiomatic-typecheck / ruff E721\n  \"C0131\", # typevar-double-variance / ruff PLC0131\n  \"C0132\", # typevar-name-mismatch / ruff PLC0132\n  \"C0198\", # bad-docstring-quotes / ruff Q002\n  \"C0199\", # docstring-first-line-empty / ruff D210\n  \"C0201\", # consider-iterating-dictionary / ruff SIM118\n  \"C0202\", # bad-classmethod-argument / ruff PLC0202\n  \"C0205\", # single-string-used-for-slots / ruff PLC0205\n  \"C0208\", # use-sequence-for-iteration / ruff PLC0208\n  \"C0301\", # line-too-long / ruff E501\n  \"C0303\", # trailing-whitespace / ruff W291\n  \"C0304\", # missing-final-newline / ruff W292\n  \"C0321\", # multiple-statements / ruff PLC0321\n  \"C0410\", # multiple-imports / ruff E401\n  \"C0411\", # wrong-import-order / ruff I001\n  \"C0412\", # ungrouped-imports / ruff I001\n  \"C0413\", # wrong-import-position / ruff E402\n  \"C0414\", # useless-import-alias / ruff PLC0414\n  \"C0415\", # import-outside-toplevel / ruff PLC0415\n  \"C0501\", # consider-using-any-or-all / ruff PLC0501\n  \"C1901\", # compare-to-empty-string / ruff PLC1901\n  \"C2201\", # misplaced-comparison-constant / ruff SIM300\n  \"C2401\", # non-ascii-name / ruff PLC2401\n  \"C2403\", # non-ascii-module-import / ruff PLC2403\n  \"C2701\", # import-private-name / ruff PLC2701\n  \"C2801\", # unnecessary-dunder-call / ruff PLC2801\n  \"C3001\", # unnecessary-lambda-assignment / ruff E731\n  \"C3002\", # unnecessary-direct-lambda-call / ruff PLC3002\n  \"E0001\", # syntax-error / ruff E999\n  \"E0100\", # init-is-generator / ruff PLE0100\n  \"E0101\", # return-in-init / ruff PLE0101\n  \"E0102\", # function-redefined / ruff F811\n  \"E0103\", # not-in-loop / ruff PLE0103\n  \"E0104\", # return-outside-function / ruff F706\n  \"E0105\", # yield-outside-function / ruff F704\n  \"E0107\", # nonexistent-operator / ruff B002\n  \"E0112\", # too-many-star-expressions / ruff F622\n  \"E0115\", # nonlocal-and-global / ruff PLE0115\n  \"E0116\", # continue-in-finally / ruff PLE0116\n  \"E0117\", # nonlocal-without-binding / ruff PLE0117\n  \"E0118\", # used-prior-global-declaration / ruff PLE0118\n  \"E0211\", # no-method-argument / ruff N805\n  \"E0213\", # no-self-argument / ruff N805\n  \"E0237\", # assigning-non-slot / ruff PLE0237\n  \"E0241\", # duplicate-bases / ruff PLE0241\n  \"E0302\", # unexpected-special-method-signature / ruff PLE0302\n  \"E0303\", # invalid-length-returned / ruff PLE0303\n  \"E0304\", # invalid-bool-returned / ruff PLE0304\n  \"E0305\", # invalid-index-returned / ruff PLE0305\n  \"E0308\", # invalid-bytes-returned / ruff PLE0308\n  \"E0309\", # invalid-hash-returned / ruff PLE0309\n  \"E0402\", # relative-beyond-top-level / ruff TID252\n  \"E0602\", # undefined-variable / ruff F821\n  \"E0603\", # undefined-all-variable / ruff F822\n  \"E0604\", # invalid-all-object / ruff PLE0604\n  \"E0605\", # invalid-all-format / ruff PLE0605\n  \"E0643\", # potential-index-error / ruff PLE0643\n  \"E0704\", # misplaced-bare-raise / ruff PLE0704\n  \"E0711\", # notimplemented-raised / ruff F901\n  \"E1132\", # repeated-keyword / ruff PLE1132\n  \"E1142\", # await-outside-async / ruff PLE1142\n  \"E1205\", # logging-too-many-args / ruff PLE1205\n  \"E1206\", # logging-too-few-args / ruff PLE1206\n  \"E1300\", # bad-format-character / ruff PLE1300\n  \"E1301\", # truncated-format-string / ruff F501\n  \"E1302\", # mixed-format-string / ruff F506\n  \"E1303\", # format-needs-mapping / ruff F502\n  \"E1304\", # missing-format-string-key / ruff F524\n  \"E1305\", # too-many-format-args / ruff F522\n  \"E1306\", # too-few-format-args / ruff F524\n  \"E1307\", # bad-string-format-type / ruff PLE1307\n  \"E1310\", # bad-str-strip-call / ruff PLE1310\n  \"E1519\", # singledispatch-method / ruff PLE1519\n  \"E1520\", # singledispatchmethod-function / ruff PLE5120\n  \"E1700\", # yield-inside-async-function / ruff PLE1700\n  \"E2502\", # bidirectional-unicode / ruff PLE2502\n  \"E2510\", # invalid-character-backspace / ruff PLE2510\n  \"E2512\", # invalid-character-sub / ruff PLE2512\n  \"E2513\", # invalid-character-esc / ruff PLE2513\n  \"E2514\", # invalid-character-nul / ruff PLE2514\n  \"E2515\", # invalid-character-zero-width-space / ruff PLE2515\n  \"E4703\", # modified-iterating-set / ruff PLE4703\n  \"R0123\", # literal-comparison / ruff F632\n  \"R0124\", # comparison-with-itself / ruff PLR0124\n  \"R0133\", # comparison-of-constants / ruff PLR0133\n  \"R0202\", # no-classmethod-decorator / ruff PLR0202\n  \"R0203\", # no-staticmethod-decorator / ruff PLR0203\n  \"R0205\", # useless-object-inheritance / ruff UP004\n  \"R0206\", # property-with-parameters / ruff PLR0206\n  \"R0904\", # too-many-public-methods / ruff PLR0904\n  \"R0911\", # too-many-return-statements / ruff PLR0911\n  \"R0912\", # too-many-branches / ruff PLR0912\n  \"R0913\", # too-many-arguments / ruff PLR0913\n  \"R0914\", # too-many-locals / ruff PLR0914\n  \"R0915\", # too-many-statements / ruff PLR0915\n  \"R0916\", # too-many-boolean-expressions / ruff PLR0916\n  \"R0917\", # too-many-positional-expressions / ruff PLR0917\n  \"R1260\", # too-complex / ruff C901\n  \"R1701\", # consider-merging-isinstance / ruff PLR1701\n  \"R1702\", # too-many-nested-blocks / ruff PLR1702\n  \"R1703\", # simplifiable-if-statement / ruff SIM108\n  \"R1704\", # redefined-argument-from-local / ruff PLR1704\n  \"R1705\", # no-else-return / ruff RET505\n  \"R1706\", # consider-using-ternary / ruff PLR1706\n  \"R1707\", # trailing-comma-tuple / ruff COM818\n  \"R1710\", # inconsistent-return-statements / ruff PLR1710\n  \"R1711\", # useless-return / ruff PLR1711\n  \"R1714\", # consider-using-in / ruff PLR1714\n  \"R1715\", # consider-using-get / ruff SIM401\n  \"R1717\", # consider-using-dict-comprehension / ruff C402\n  \"R1718\", # consider-using-set-comprehension / ruff C401\n  \"R1719\", # simplifiable-if-expression / ruff PLR1719\n  \"R1720\", # no-else-raise / ruff RET506\n  \"R1721\", # unnecessary-comprehension / ruff C416\n  \"R1722\", # consider-using-sys-exit / ruff PLR1722\n  \"R1723\", # no-else-break / ruff RET508\n  \"R1724\", # no-else-continue / ruff RET507\n  \"R1725\", # super-with-arguments / ruff UP008\n  \"R1728\", # consider-using-generator / ruff C417\n  \"R1729\", # use-a-generator / ruff C419\n  \"R1730\", # consider-using-min-builtin / ruff PLR1730\n  \"R1731\", # consider-using-max-builtin / ruff PLR1730\n  \"R1732\", # consider-using-with / ruff SIM115\n  \"R1733\", # unnecessary-dict-index-lookup / ruff PLR1733\n  \"R1734\", # use-list-literal / ruff C405\n  \"R1735\", # use-dict-literal / ruff C406\n  \"R1736\", # unnecessary-list-index-lookup / ruff PLR1736\n  \"R2004\", # magic-value-comparison / ruff PLR2004\n  \"R2044\", # empty-comment / ruff PLR2044\n  \"R5501\", # else-if-used / ruff PLR5501\n  \"R6002\", # consider-using-alias / ruff UP006\n  \"R6003\", # consider-alternative-union-syntax / ruff UP007\n  \"R6104\", # consider-using-augmented-assign / ruff PLR6104\n  \"R6201\", # use-set-for-membership / ruff PLR6201\n  \"R6301\", # no-self-use / ruff PLR6301\n  \"W0102\", # dangerous-default-value / ruff B006\n  \"W0104\", # pointless-statement / ruff B018\n  \"W0106\", # expression-not-assigned / ruff B018\n  \"W0107\", # unnecessary-pass / ruff PIE790\n  \"W0108\", # unnecessary-lambda / ruff PLW0108\n  \"W0109\", # duplicate-key / ruff F601\n  \"W0120\", # useless-else-on-loop / ruff PLW0120\n  \"W0122\", # exec-used / ruff S102\n  \"W0123\", # eval-used / ruff PGH001\n  \"W0127\", # self-assigning-variable / ruff PLW0127\n  \"W0129\", # assert-on-string-literal / ruff PLW0129\n  \"W0130\", # duplicate-value / ruff B033\n  \"W0131\", # named-expr-without-context / ruff PLW0131\n  \"W0133\", # pointless-exception-statement / ruff PLW0133\n  \"W0150\", # lost-exception / ruff B012\n  \"W0160\", # consider-ternary-expression / ruff SIM108\n  \"W0177\", # nan-comparison / ruff PLW0117\n  \"W0199\", # assert-on-tuple / ruff F631\n  \"W0211\", # bad-staticmethod-argument / ruff PLW0211\n  \"W0212\", # protected-access / ruff SLF001\n  \"W0245\", # super-without-brackets / ruff PLW0245\n  \"W0301\", # unnecessary-semicolon / ruff E703\n  \"W0401\", # wildcard-import / ruff F403\n  \"W0404\", # reimported / ruff F811\n  \"W0406\", # import-self / ruff PLW0406\n  \"W0410\", # misplaced-future / ruff F404\n  \"W0511\", # fixme / ruff PLW0511\n  \"W0602\", # global-variable-not-assigned / ruff PLW0602\n  \"W0603\", # global-statement / ruff PLW0603\n  \"W0604\", # global-at-module-level / ruff PLW0604\n  \"W0611\", # unused-import / ruff F401\n  \"W0612\", # unused-variable / ruff F841\n  \"W0613\", # unused-argument / ruff ARG001\n  \"W0622\", # redefined-builtin / ruff A001\n  \"W0640\", # cell-var-from-loop / ruff B023\n  \"W0702\", # bare-except / ruff E722\n  \"W0705\", # duplicate-except / ruff B014\n  \"W0706\", # try-except-raise / ruff TRY302\n  \"W0707\", # raise-missing-from / ruff TRY200\n  \"W0711\", # binary-op-exception / ruff PLW0711\n  \"W0718\", # broad-exception-caught / ruff PLW0718\n  \"W0719\", # broad-exception-raised / ruff TRY002\n  \"W1113\", # keyword-arg-before-vararg / ruff B026\n  \"W1201\", # logging-not-lazy / ruff G\n  \"W1202\", # logging-format-interpolation / ruff G\n  \"W1203\", # logging-fstring-interpolation / ruff G\n  \"W1300\", # bad-format-string-key / ruff PLW1300\n  \"W1301\", # unused-format-string-key / ruff F504\n  \"W1302\", # bad-format-string / ruff PLW1302\n  \"W1303\", # missing-format-argument-key / ruff F524\n  \"W1304\", # unused-format-string-argument / ruff F507\n  \"W1305\", # format-combined-specification / ruff F525\n  \"W1308\", # duplicate-string-formatting-argument / ruff PLW1308\n  \"W1309\", # f-string-without-interpolation / ruff F541\n  \"W1310\", # format-string-without-interpolation / ruff F541\n  \"W1401\", # anomalous-backslash-in-string / ruff W605\n  \"W1404\", # implicit-str-concat / ruff ISC001\n  \"W1405\", # inconsistent-quotes / ruff Q000\n  \"W1406\", # redundant-u-string-prefix / ruff UP025\n  \"W1501\", # bad-open-mode / ruff PLW1501\n  \"W1508\", # invalid-envvar-default / ruff PLW1508\n  \"W1509\", # subprocess-popen-preexec-fn / ruff PLW1509\n  \"W1510\", # subprocess-run-check / ruff PLW1510\n  \"W1514\", # unspecified-encoding / ruff PLW1514\n  \"W1515\", # forgotten-debug-statement / ruff T100\n  \"W1518\", # method-cache-max-size-none / ruff B019\n  \"W1641\", # eq-without-hash / ruff PLW1641\n  \"W2101\", # useless-with-lock / ruff PLW2101\n  \"W2402\", # non-ascii-file-name / ruff N999\n  \"W2901\", # redefined-loop-name / ruff PLW2901\n  \"W3201\", # bad-dunder-name / ruff PLW3201\n  \"W3301\", # nested-min-max / ruff PLW3301\n  \"duplicate-code\",\n  \"too-few-public-methods\",\n  \"too-many-instance-attributes\"\n]\nenable = [\n  \"useless-suppression\"\n]\nfail-on = [\n  \"useless-suppression\"\n]\n\n[tool.pytest.ini_options]\naddopts = \"-ra --showlocals --durations=10\"\ncache_dir = \"./.cache/.pytest\"\nmarkers = [\n  \"serial: Run this test serially via filelock.\",\n  \"extensive: marks tests that we want to skip by default, as they are indirectly covered by other tests\"\n]\nnorecursedirs = [\"scenarios\"]\ntestpaths = \"tests\"\nverbosity_assertions = 2\n\n[tool.ruff]\nbuiltins = [\"__\"]\ncache-dir = \"./.cache/.ruff\"\nfix = true\nline-length = 100\ntarget-version = \"py310\"\n\n[tool.ruff.lint]\nexternal = [\n  \"DOC\" # pydoclint\n]\nselect = [\"ALL\"]\n\n[tool.ruff.lint.flake8-pytest-style]\nparametrize-values-type = \"tuple\"\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"molecule\"]\nlines-after-imports = 2 # Ensures consistency for cases when there's variable vs function/class definitions after imports\nlines-between-types = 1 # Separate import/from with 1 line\nrequired-imports = [\"from __future__ import annotations\"]\n\n[tool.ruff.lint.per-file-ignores]\n\"_version.py\" = [\"SIM108\"]\n\"tests/**\" = [\"SLF001\", \"S101\", \"S602\", \"T201\"]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"google\"\n\n[tool.setuptools.dynamic]\ndependencies = {file = [\".config/requirements.in\"]}\noptional-dependencies.docs = {file = [\".config/requirements-docs.txt\"]}\noptional-dependencies.test = {file = [\".config/requirements-test.txt\"]}\noptional-dependencies.testinfra = {file = [\".config/requirements-testinfra.txt\"]}\n\n[tool.setuptools_scm]\n# To prevent accidental pick of mobile version tags such 'v6'\ngit_describe_command = [\n  \"git\",\n  \"describe\",\n  \"--dirty\",\n  \"--long\",\n  \"--tags\",\n  \"--match\",\n  \"v*.*\"\n]\nlocal_scheme = \"no-local-version\"\nwrite_to = \"src/molecule/_version.py\"\n\n[tool.tomlsort]\nin_place = true\nsort_inline_tables = true\nsort_table_keys = true\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 3.0869140625,
          "content": "[tox]\nrequires =\n    tox>=4.23.2\n    tox-uv>=1.16\nenv_list =\n    py\n    deps\n    docs\n    lint\n    milestone\n    pkg\n    eco\nskip_missing_interpreters = true\n\n[testenv]\ndescription = Run pytest under {basepython}\npackage = editable\nextras =\n    test\npass_env =\n    CI\n    CONTAINER_*\n    DOCKER_*\n    GITHUB_*\n    HOME\n    PYTEST_*\n    SSH_AUTH_SOCK\n    TERM\n    USER\nset_env =\n    !milestone: PIP_CONSTRAINT = {toxinidir}/.config/constraints.txt\n    COVERAGE_COMBINED = {envdir}/.coverage\n    COVERAGE_FILE = {env:COVERAGE_FILE:{envdir}/.coverage.{envname}}\n    COVERAGE_PROCESS_START = {toxinidir}/pyproject.toml\n    FORCE_COLOR = 1\n    PRE_COMMIT_COLOR = always\n    TERM = xterm-256color\ncommands_pre =\n    sh -c \"rm -f {envdir}/.coverage* 2>/dev/null || true\"\ncommands =\n    python -c 'import pathlib; pathlib.Path(\"{env_site_packages_dir}/cov.pth\").write_text(\"import coverage; coverage.process_startup()\")'\n    coverage run -m pytest {posargs:-n auto}\n    coverage combine -q --data-file={env:COVERAGE_COMBINED}\n    coverage xml --data-file={env:COVERAGE_COMBINED} -o {envdir}/coverage.xml --fail-under=0\n    coverage lcov --data-file={env:COVERAGE_COMBINED} -o {toxinidir}/.cache/.coverage/lcov.info --fail-under=0\n    coverage report --data-file={env:COVERAGE_COMBINED}\nallowlist_externals =\n    git\n    rm\n    sh\n\n[testenv:deps]\ndescription = Bump all dependencies\nbase_python = python3.10\nskip_install = true\ndeps =\n    {[testenv:lint]deps}\nextras =\nset_env =\n    PIP_CONSTRAINT = /dev/null\ncommands_pre =\ncommands =\n    -pre-commit run --all-files --show-diff-on-failure --hook-stage manual deps\n    -pre-commit autoupdate\n    git diff --exit-code\nenv_dir = {toxworkdir}/lint\n\n[testenv:docs]\ndescription = Builds docs\npackage = editable\nskip_install = false\nextras =\n    docs\nset_env =\n    NO_COLOR = 1\n    TERM = dump\ncommands =\n    mkdocs build {posargs:}\n\n[testenv:lint]\ndescription = Enforce quality standards under {basepython}\nskip_install = true\ndeps =\n    pip\n    pre-commit>=4.0.1\n    pre-commit-uv>=4.1.4\nset_env =\n    PIP_CONSTRAINT = /dev/null\ncommands =\n    pre-commit run --show-diff-on-failure --all-files\n\n[testenv:milestone]\ndescription =\n    Run tests with ansible-core milestone branch and without dependencies constraints\ndeps =\n    ansible-core@ https://github.com/ansible/ansible/archive/milestone.tar.gz\nset_env =\n    {[testenv]set_env}\n    PIP_CONSTRAINT = /dev/null\n\n[testenv:pkg]\ndescription =\n    Do packaging/distribution\nskip_install = true\ndeps =\n    build>=0.9\n    twine >= 4.0.2  # pyup: ignore\nset_env =\ncommands =\n    rm -rfv {toxinidir}/dist/\n    python -m build --outdir {toxinidir}/dist/ {toxinidir}\n    sh -c \"python -m twine check --strict {toxinidir}/dist/*\"\n\n[testenv:eco]\ndescription = Smoketest of combining all known to be maintained plugins (ecosystem)\npackage = editable\npip_pre = true\ndeps =\n    molecule-plugins[azure,containers,docker,ec2,gce,podman,vagrant]>=23\n    pipdeptree>=2\n    tox-ansible>=1.5.1\nextras =\n    test\ncommands_pre =\ncommands =\n    pip check\n    pipdeptree --reverse -e pip,pbr,six,setuptools,toml,urllib3\n    molecule --version\n    molecule drivers\n    sh -c ./tools/smoketest.sh\n"
        }
      ]
    }
  ]
}