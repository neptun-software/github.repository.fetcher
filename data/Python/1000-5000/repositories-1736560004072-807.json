{
  "metadata": {
    "timestamp": 1736560004072,
    "page": 807,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bear/python-twitter",
      "stars": 3412,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5361328125,
          "content": "*.py[co]\n\n#small test code that contains my keys\nt.py\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\ninclude\nlib\nlocal\nvar\nsdist\ndevelop-eggs\n.installed.cfg\n.eggs\n.cache\n.vscode\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.codecov-token\n.tox\nhtmlcov\n.tox\nnosetests.xml\nhtmlcov\ncoverage.xml\n.hypothesis\n\n# PyCharm data\n.idea\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n\n#Environment\nenv\n.python-version\n\nviolations.flake8.txt\n\n# Built docs\ndoc/_build/**\n\n# Mypy cache\n**/.mypy_cache\n\n# VS Code\n**/.vscode\n"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 0.701171875,
          "content": "Originally two libraries by DeWitt Clinton and Mike Taylor which was then merged into python-twitter.\n\nNow it's a full-on open source project with many contributors over time:\n\n* Jodok Batlogg,\n* Kyle Bock,\n* Brad Choate,\n* Robert Clarke,\n* Jim Cortez,\n* Pierre-Jean Coudert,\n* Aish Raj Dahal,\n* Thomas Dyson,\n* Jim Easterbrook\n* Yoshinori Fukushima,\n* Hameedullah Khan,\n* Osama Khalid,\n* Omar Kilani,\n* Domen Ko≈æar,\n* Robert Laquey,\n* Jason Lemoine,\n* Pradeep Nayak,\n* Ian Ozsvald,\n* Nicolas Perriault,\n* Trevor Prater,\n* Glen Tregoning,\n* Lars Weiler,\n* Sebastian Wiesinger,\n* Jake Robinson,\n* Muthu Annamalai,\n* abloch,\n* cahlan,\n* dpslwk,\n* edleaf,\n* ecesena,\n* git-matrix,\n* sbywater,\n* thefinn93,\n* themylogin,\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 21.7080078125,
          "content": "2016-05-25\n  Going forward all changes will be tracked in docs/changelog.rst\n\n2015-12-28\n  Large number of changes related to making the code Python v3 compatible.\n  See the messy details at https://github.com/bear/python-twitter/pull/251\n\n  Pull Requests\n      #525 Adds support for 280 character limit for tweets by trevorprater\n      #267 initialize Api.__auth fixes #119 by rbpasker\n      #266 Add full_text and page options in GetDirectMessages function by mistersalmon\n      #264 Updates Media object with new methods, adds id param, adds tests by jeremylow\n      #262 Update get_access_token.py by lababidi\n      #261 Adding Collections by ryankicks\n      #260 Added UpdateBackgroundImage method and added profile_link_color argument to UpdateProfile by BrandonBielicki\n      #259 Added GetFriendIDsPaged by RockHoward\n      #254 Adding api methods for suggestions and suggestions/:slug by trentstollery\n      #253 Added who parameter to api.GetSearch by wilsonand1\n      #250 adds UpdateFriendship (shared Add/Edit friendship) by jheld\n      #249 Fixed Non-ASCII printable representation in Trend by der-Daniel\n      #246 Add __repr__ for status by era\n      #245 Python-3 Fix: decode bytestreams for json load by ligthyear\n      #243 Remove references to outdated API functionality: GetUserByEmail by Vector919\n      #239 Correct GetListsList docstring by tedmiston\n\n  Probably a whole lot that I missed - ugh!\n\n2017-11-11\n  Added support for 280 character limit\n\n2015-10-05\n  Added who to api.GetSearch\n\n2014-12-29\n  removed reference to simplejson\n\n2014-12-24\n  bump version to v2.3\n  bump version to v2.2\n  PEP8 standardization\n\n2014-07-10\n  bump version to v2.1\n\n2014-07-10\n  update copyright years\n  change setup.py to allow installing via wheel\n  renamed README.md to README.rst\n  added AUTHORS.rst\n\n2014-02-17\n  changed version to 1.3 and then to 1.3.1 because I forgot to include CHANGES\n  fix Issue 143 - GetStatusOembed() url parameter was being stomped on\n  fix debugHTTP in a brute force way but it works again\n  Add id_str to Status class\n  Added LookupFriendship() method for checking follow status\n    pull request from lucas\n  Fix bug of GetListMembers when specifying `owner_screen_name`\n    pull request from shichao-an\n\n2014-01-18\n  backfilling varioius lists endpoints\n  added a basic user stream call\n\n2014-01-17\n  changed to version 1.2\n  fixed python 3 issue in setup.py (print statements)\n  fixed error in CreateList(), changed count default for GetFollowers to 200 and added a GetFollowersPaged() method\n\nneed to backfill commit log entries!\n\n2013-10-06\n  changed version to 1.1\n  The following changes have been made since the 1.0.1 release\n\n  Remove from ParseTweet the Python 2.7 only dict comprehension item\n  Fix GetListTimeline condition to enable owner_screen_name based fetching\n  Many fixes for readability and PEP8\n  Cleaning up some of the package importing. Only importing the functions that are needed\n  Also added first build of the sphinx documentation. Copied some info from the readme to the index page\n  Added lines to setup.py to help the user troubleshoot install problems. #109\n  Removed the OAuth2 lines from the readme\n  Removed OAuth2 library requirements\n  Added GetListMembers()\n\n\n2013-06-07\n  changed version to 1.0.1\n  added README bit about Python version requirement\n\n2013-06-04\n  changed version to 1.0\n  removed doc directory until we can update docs for v1.1 API\n  added to package MANIFEST.in the testdata directory\n\n2013-05-28\n  bumped version to 1.0rc1\n  merged in api_v1.1 branch\n\n  The library is now only for Twitter API v1.1\n\n2013-03-03\n  bumped version to 0.8.7\n\n  removed GetPublicTimeline from the docs so as to stop confusing\n  new folks since it was the first example given ... d'oh!\n\n2013-02-10\n  bumped version to 0.8.6\n\n  update requirements.txt to remove distribute reference\n  github commit 3b9214a879e5fbd03036a7d4ae86babc03784846\n\n  Merge pull request #33 from iElectric/profile_image_url_https\n  github commit 67cbb8390701c945a48094795474ca485f092049\n  patch by iElectric on github\n\n  Change User.NewFromJsonDict so that it will pull from either\n  profile_image_url_https or profile_image_url to keep older code\n  working properly if they have stored older json data\n\n2013-02-07\n  bumped version to 0.8.5\n  lots of changes have been happening on Github and i've been\n  very remiss in documenting them here in the Changes file :(\n\n  this version is the last v1.0 API release and it's being made\n  to push to PyPI and other places\n\n  all work now will be on getting the v1.1 API supported\n\n2012-11-04\n  https://github.com/bear/python-twitter/issues/4\n  Api.UserLookUp() throws attribute error when corresponding screen_name is not found\n\n  https://github.com/bear/python-twitter/pull/5\n  Merge pull request #5 from thefinn93/master\n  Setup.py crashes because the README file is now named README.md\n\n  Update .gitignore to add the PyCharm data directory\n\n2012-10-16\n http://code.google.com/p/python-twitter/issues/detail?id=233\n Patch by dan@dans.im\n Add exclude_replies parameter to GetUserTimeline\n\n https://github.com/bear/python-twitter/issues/1\n Bug reported by michaelmior on github\n get_access_token.py attempts Web auth\n\n2011-12-03\n https://code.google.com/p/python-twitter/source/detail?r=263fe2a0db8be23347e92b81d6ab3c33b4ef292f\n Comment by qfuxiang to the above changeset\n The base url was wrong for the Followers API calls\n\n https://code.google.com/p/python-twitter/issues/detail?id=213\n Add include_entities parameter to GetStatus()\n Patch by gaelenh\n\n https://code.google.com/p/python-twitter/issues/detail?id=214\n Change PostUpdate() so that it takes the shortened link into\n account.  Small tweak to the patch provided to make the\n shortened-link length set by a API value instead of a constant.\n Patch by ceesjan.ytec\n\n https://code.google.com/p/python-twitter/issues/detail?id=216\n AttributeError handles the fact that win* doesn't implement\n os.getlogin()\n Patch by yaleman\n\n https://code.google.com/p/python-twitter/issues/detail?id=217\n As described at https://dev.twitter.com/docs/api/1/get/trends,\n GET trends (corresponding to Api.GetTrendsCurrent) is now\n deprecated in favor of GET trends/:woeid. GET trends also now\n requires authentication, while trends/:woeid doesn't.\n Patch and excellent description by jessica.mckellar\n\n https://code.google.com/p/python-twitter/issues/detail?id=218\n Currently, two Trends containing the same information\n (name, query, and timestamp) aren't considered equal because\n __eq__ isn't overridden, like it is for Status, User, and the\n other Twitter objects.\n Patch and excellent description by jessica.mckellar\n\n https://code.google.com/p/python-twitter/issues/detail?id=220\n https://code.google.com/p/python-twitter/issues/detail?id=211\n https://code.google.com/p/python-twitter/issues/detail?id=206\n All variations on a theme - basically Twitter is returning\n something different for an error payload.  Changed code to\n check for both 'error' and 'errors'.\n\n2011-05-08\n\n https://code.google.com/p/python-twitter/issues/detail?id=184\n A comment in this issue made me realize that the parameter sanity\n check for max_id was missing in GetMentions() - added\n\n First pass at working in some of the cursor support that has been\n in the Twitter API but we haven't made full use of - still working\n out the small issues.\n\n2011-04-16\n\n bumped version to 0.8.3\n released 0.8.2 to PyPI\n bumped version to 0.8.2\n\n Issue 193\n http://code.google.com/p/python-twitter/issues/detail?id=193\n Missing retweet_count field on Status object\n Patch (with minor tweaks) by from alissonp\n\n Issue 181\n http://code.google.com/p/python-twitter/issues/detail?id=181\n Add oauth2 to install_requires parameter list and also updated\n README to note that the oauth2 lib can be found in two locations\n\n Issue 182, Issue 137, Issue 93, Issue 190\n language value missing from User object\n Added 'lang' item and also some others that were needed:\n   verified, notifications, contributors_enabled and listed_count\n patches by wreinerat, apetresc, jpwigan and ghills\n\n2011-02-26\n\n Issue 166\n http://code.google.com/p/python-twitter/issues/detail?id=166\n Added a basic, but sadly needed, check when parsing the json\n returned by Twitter as Twitter has a habit of returning the\n failwhale HTML page for a json api call :(\n Patch (with minor tweaks) by adam.aviv\n\n Issue 187\n http://code.google.com/p/python-twitter/issues/detail?id=187\n Applied patch by edward.hades to fix issue where MaximumHitFrequency\n returns 0 when requests are maxed out\n\n Issue 184\n http://code.google.com/p/python-twitter/issues/detail?id=184\n Applied patch by jmstaley to put into the GetUserTimeline API\n parameter list the max_id value (it was being completely ignored)\n\n2011-02-20\n\n Added retweeted to Status class\n Fixed Status class to return Hashtags list in AsDict() call\n\n Issue 185\n http://code.google.com/p/python-twitter/issues/detail?id=185\n Added retweeted_status to Status class - patch by edward.hades\n\n Issue 183\n http://code.google.com/p/python-twitter/issues/detail?id=183\n Removed errant print statement - reported by ProgVal\n\n2010-12-21\n\n Setting version to 0.8.1\n\n Issue 179\n http://code.google.com/p/python-twitter/issues/detail?id=179\n Added MANIFEST.in to give setup.py sdist some clues as to what\n files to include in the tarball\n\n2010-11-14\n\n Setting version to 0.8 for a bit as having a branch for this is\n really overkill, i'll just take DeWitt advice and tag it when\n the release is out the door\n\n Issue 175\n http://code.google.com/p/python-twitter/issues/detail?id=175\n Added geo_enabled to User class - basic parts of patch provided\n by adam.aviv with other bits added by me to allow it to pass tests\n\n Issue 174\n http://code.google.com/p/python-twitter/issues/detail?id=174\n Added parts of adam.aviv's patch - the bits that add new field items\n to the Status class.\n\n Issue 159\n http://code.google.com/p/python-twitter/issues/detail?id=159\n Added patch form adam.aviv to make the term parameter for GetSearch()\n optional if geocode parameter is supplied\n\n2010-11-03\n\n Ran pydoc to generate docs\n\n2010-10-16\n\n Fixed bad date in previous CHANGES entry\n\n Fixed source of the python-oauth2 library we use: from brosner\n to simplegeo\n\n I made a pass thru the docstrings and updated many to be the\n text from the current Twitter API docs.  Also fixed numerous\n whitespace issues and did a s/[optional]/[Optional]/ change.\n\n Imported work by Colin Howe that he did to get the tests working.\n http://code.google.com/r/colinthehowe-python-twitter-tests/source/detail?r=6cff589aca9c955df8354fe4d8e302ec4a2eb31c\n http://code.google.com/r/colinthehowe-python-twitter-tests/source/detail?r=cab8e32d7a9c34c66d2e75eebc7a1ba6e1eac8ce\n http://code.google.com/r/colinthehowe-python-twitter-tests/source/detail?r=b434d9e5dd7b989ae24483477e3f00b1ad362cc5\n\n Issue 169\n http://code.google.com/p/python-twitter/issues/detail?id=169\n Patch by yaemog which adds missing Trends support.\n\n Issue 168\n http://code.google.com/p/python-twitter/issues/detail?id=168\n Only cache successful results as suggested by yaemog.\n\n Issue 111\n http://code.google.com/p/python-twitter/issues/detail?id=111\n Added a new GetUserRetweets() call as suggested by yash888\n Patch given was adjusted to reflect the current code requirements.\n\n Issue 110\n Added a VerifyCredentials() sample call to the README example\n\n Issue 105\n Added support for the page parameter to GetFriendsTimeline()\n as requested by jauderho.\n I also updated GetFriendsTimeline() to follow the current\n Twitter API documentation\n\n Somewhere in the patch frenzy of today an extra GetStatus()\n def was introduced!?! Luckily it was caught by the tests.\n wooo tests! \\m/\n\n Setting version to 0.8\n\n r0.8 branch created and trunk set to version 0.9-devel\n\n2010-09-26\n\n Issue 150\n http://code.google.com/p/python-twitter/issues/detail?id=150\n Patch by blhobbes which removes a double quoting issue that\n was happening for GetSearch()\n Reported by huubhuubbarbatruuk\n\n Issue 160\n http://code.google.com/p/python-twitter/issues/detail?id=160\n Patch by yaemog which adds support for include_rts and\n include_entities support to GetUserTimeline and GetPublicTimeline\n Small tweaks post-patch\n\n Applied docstring tweak suggested by dclinton in revision comment\n http://code.google.com/p/python-twitter/source/detail?r=a858412e38f7e3856fef924291ef039284d3a6e1\n Thanks for the catch!\n\n Issue 164\n http://code.google.com/p/python-twitter/issues/detail?id=164\n Patch by yaemog which adds GetRetweets support.\n Small tweaks and two typo fixes post-patch.\n\n Issue 165\n http://code.google.com/p/python-twitter/issues/detail?id=165\n Patch by yaemog which adds GetStatus support.\n Small tweaks post-patch\n\n Issue 163\n http://code.google.com/p/python-twitter/issues/detail?id=163\n Patch by yaemog which adds users/lookup support.\n Small tweaks to docstring only post-patch.\n\n Changed username/password parameter to Api class to be\n consumer_key/consumer_secret to better match the new\n oAuth only world that Twitter has demanded.\n\n Added debugHTTP to the parameter list to Api class to\n control if/when the urllib debug output is displayed.\n\n2010-08-25\n\n First pass at adding list support.\n Added a new List class and also added to the Api class\n new methods for working with lists:\n\n   CreateList(self, user, name, mode=None, description=None)\n   DestroyList(self, user, id)\n   CreateSubscription(self, owner, list)\n   DestroySubscription(self, owner, list)\n   GetSubscriptions(self, user, cursor=-1)\n   GetLists(self, user, cursor=-1)\n\n2010-08-24\n\n Fixed introduced bug in the Destroy* and Create* API calls\n where any of the routines were passing in an empty dict for\n POST data.  Before the oAuth change that was enough to tell\n _FetchUrl() to use POST instead of GET but now a non-empty\n dict is required.\n\n Issue 144\n http://code.google.com/p/python-twitter/issues/detail?id=144\n GetFriends() where it was failing with a 'unicode object has\n no attribute get'. This was caused when Twitter changed how\n they return the JSON data. It used to be a straight list but\n now there are some elements *and* then the list.\n\n2010-08-18\n\n Applied the json/simplejson part of the patch found\n in Issue 64 (http://code.google.com/p/python-twitter/issues/detail?id=64)\n Patch provided by Thomas Bohmbach\n\n Applied patch provided by liris.pp in Issue 147\n http://code.google.com/p/python-twitter/issues/detail?id=147\n Ensures that during a PostStatus we count the length using a unicode aware\n len() routine.  Tweaked patch slightly to take into account that the\n twitter.Api() instance may have been setup with None for input_encoding.\n\n2010-08-17\n\n Fixed error in the POST path for _FetchUrl() where by\n I show to the world that yes, I do make last minute\n changes and completely forget to test them :(\n Thanks to Peter Sanchez for finding and pointing to\n working code that showed the fix\n\n2010-08-15\n\n Added more help text (I hope it helps) to the README\n and also to get_access_token.py.\n\n Added doctext notes to twitter.Api() parameter list\n to explain more about oAuth.\n\n Added import exception handling for parse_qs() and\n parse_qsl() as it seems those funcitons moved between\n 2.5 and 2.6 so the oAuth update broke the lib under\n python2.5.  Thanks to Rich for the bug find (sorry\n it had to be found the hard way!)\n\n from changeset 184:60315000989c by DeWitt\n Update the generated twitter.py docs to match the trunk\n\n2010-08-14\n\n Fixed silly typo in _FetchUrl() when doing a POST\n Thanks to Peter Sanchez for the find and fix!\n\n Added some really basic text to the get_access_token.py\n startup output that explains why, for now, you need to\n visit Twitter and get an Application key/secret to use\n this library\n\n2010-08-12\n\n Updated code to use python-oauth2 library for authentication.\n Twitter has set a deadline, 2010-08-16 as of this change, for\n the switch from Basic to oAuth.\n\n The oAuth integration was inspired by the work done by\n Hameedullah Khan and others.\n\n The change to using python-oauth2 library was done purely to\n align python-twitter with an oauth library that was maintained\n and had tests to try and minimize grief moving forward.\n\n Slipped into GetFriendsTimeline() a new parameter, retweets, to\n allow the call to pull from the \"friends_timeline\" or the\n \"home_timeline\".\n\n Fixed some typos and white-space issues and also updated the\n README to point to the new Twitter Dev site.\n\n2010-08-02\n\n Updated copyright information.\n\n2010-06-13\n\n Applied changeset from nicdumz repo nicdumz-cleaner-python-twitter\n   r=07df3feee06c8d0f9961596e5fceae9e74493d25\n   datetime is required for MaximumHitFrequency\n\n Applied changeset from nicdumz repo nicdumz-cleaner-python-twitter\n   r=dd669dff32d101856ed6e50fe8bd938640b04d77\n   update source URLs in README\n\n Applied changeset from nicdumz repo nicdumz-cleaner-python-twitter\n   r=8f0796d7fdcea17f4162aeb22d3c36cb603088c7\n   adjust tests to reflect http://twitter.com -> https://twitter.com change\n\n Applied changeset from nicdumz repo nicdumz-cleaner-python-twitter\n   r=3c05b8ebe59eca226d9eaef2760cecca9d50944a\n   tests: add .info() method to objects returned by our Mockup handler\n   This is required to completely mimick urllib, and have successful\n   response.headers attribute accesses.\n\n Applied partial patch for Issue 113\n http://code.google.com/p/python-twitter/issues/detail?id=113\n\n   The partial bit means we changed the parameter from \"page\" to \"cursor\"\n   so the call would work.  What was left out was a more direct way\n   to return the cursor value *after* the call and also in the patch\n   they also changed the method to return an iterator.\n\n2010-05-17\n\n Issue 50 http://code.google.com/p/python-twitter/issues/detail?id=50\n Applied patch by wheaties.box that implements a new method to return\n the Rate Limit Status and also adds the new method MaximumHitFrequency\n\n Multiple typo, indent and whitespace tweaks\n\n Issue 60 http://code.google.com/p/python-twitter/issues/detail?id=60\n Pulled out new GetFavorites and GetMentions methods from the patch\n submitted by joegermuska\n\n Issue 62 http://code.google.com/p/python-twitter/issues/detail?id=62\n Applied patch from lukev123 that adds gzip compression to the GET\n requests sent to Twitter. The patch was modified to default gzip to\n False and to allow the twitter.API class instantiation to set the\n value to True.  This was done to not change current default\n behaviour radically.\n\n Issue 80 http://code.google.com/p/python-twitter/issues/detail?id=80\n Fixed PostUpdate() call example in the README\n\n2010-05-16\n\n Issue 19 http://code.google.com/p/python-twitter/issues/detail?id=19\n TinyURL example and the idea for this comes from a bug filed by\n acolorado with patch provided by ghills.\n\n Issue 37 http://code.google.com/p/python-twitter/issues/detail?id=37\n Added base_url to the twitter.API class init call to allow the user\n to override the default https://twitter.com base.  Since Twitter now\n supports https for all calls I (bear) changed the patch to default to\n https instead of http.\n Original issue by kotecha.ravi, patch by wiennat and with implementation\n tweaks by bear.\n\n Issue 45 http://code.google.com/p/python-twitter/issues/detail?id=45\n Two grammar fixes for relative_created_at property\n Patches by thomasdyson and chris.boardman07\n\n2010-01-24\n\n Applying patch submitted to fix Issue 70\n http://code.google.com/p/python-twitter/issues/detail?id=70\n\n The patch was originally submitted by user ghills, adapted by livibetter and\n adapted even further by JimMoefoe (read the comments for the full details :) )\n\n Applying patch submitted by markus.magnuson to add new method GetFriendIDs\n Issue 94 http://code.google.com/p/python-twitter/issues/detail?id=94\n\n2009-06-13\n\n Releasing 0.6 to help people avoid the Twitpocalypse.\n\n2009-05-03\n\n Support hashlib in addition to the older md5 library.\n\n2009-03-11\n\n Added page parameter to GetReplies, GetFriends, GetFollowers, and GetDirectMessages\n\n2009-03-03\n\n  Added count parameter to GetFriendsTimeline\n\n2009-03-01\n  Add PostUpdates, which automatically splits long text into multiple updates.\n\n2009-02-25\n\n  Add in_reply_to_status_id to api.PostUpdate\n\n2009-02-21\n\n  Wrap any error responses in a TwitterError\n  Add since_id to GetFriendsTimeline and GetUserTimeline\n\n2009-02-20\n\n  Added since and since_id to Api.GetReplies\n\n2008-07-10\n\n  Added new properties to User and Status classes.\n  Removed spurious self-import of the twitter module\n  Added a NOTICE file\n  Require simplejson 2.x or later\n  Added get/create/destroy favorite flags for status messages.\n  Bug fix for non-tty devices.\n\n2007-09-13\n\n  Unset the executable bit on README.\n\n2007-09-13\n\n  Released version 0.5.\n  Added back support for setuptools (conditionally)\n  Added support for X-Twitter-* HTTP headers\n  Fixed the tests to work across all timezones\n  Removed the 140 character limit from PostUpdate\n  Added support for per-user tmp cache directories\n\n2007-06-13\n\n  Released 0.4.\n  Fixed a unicode error that prevented tweet.py from working.\n  Added DestroyStatus\n  Added DestroyDirectMessage\n  Added CreateFriendship\n  Added DestoryFriendship\n\n2007-06-03\n\n  Fixed the bug that prevented unicode strings being posted\n  Username and password now set on twitter.Api, not individual method calls\n  Added SetCredentials and ClearCredentials\n  Added GetUser (\"users/show\" in the twitter web api)\n  Added GetFeatured\n  Added GetDirectMessages\n  Added GetStatus (\"statuses/show\" in the twitter web api)\n  Added GetReplies\n  Added optional since_id parameter on GetPublicTimeline\n  Added optional since parameter on GetUserTimeline\n  Added optional since and user parameters on GetFriendsTimeline\n  Added optional user parameter on GetFriends\n\n2007-04-27\n\n  Modified examples/twitter-to-xhtml.py to handle unicode\n  Dropped dependency on setuptools (too complicated/buggy)\n  Added unicode test cases\n  Fixed issue 2 \"Rename needs an unlink in front\"\n\n2007-04-02\n\n  Released 0.3.\n  Use gmtime not localtime to calculate relative_created_at.\n\n2007-03-26\n\n  Released 0.2\n  GetUserTimeline can accept userid or username.\n\n2007-03-21\n\n  Calculate relative_created_at on the fly\n\n2007-01-28\n\n  Released 0.1\n  Initial checkin of python-twitter\n\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.5908203125,
          "content": "   Copyright 2007-2014 The Python-Twitter Developers\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "GAE.rst",
          "type": "blob",
          "size": 2.3935546875,
          "content": "================================================\nHow to use python-twitter with Google App Engine\n================================================\n\n**********\nBackground\n**********\n\nGoogle App Engine uses virtual machines to do work and serve your application's content. In order to make a 'regular' external web request, the instance must use the built-in urlfetch library provided by Google in addition to the traditional python requests library. As a result, a few extra steps must be followed to use python-twitter on App Engine.\n\n\n*************\nPrerequisites\n*************\n\nFollow the `third party vendor library install instructions <https://cloud.google.com/appengine/docs/python/tools/using-libraries-python-27#vendoring>`_ to include the dependency libraries listed in ``requirements.txt``: ``requests``, ``requests_oauthlib`` and ``requests_toolbelt``, as well as ``python-twitter`` library. Typically you can just place the  module folders into the same place as your app.yaml file; it might look something like this:\n\n| myapp/\n| ‚îú‚îÄ‚îÄ twitter/\n| ‚îú‚îÄ‚îÄ requests_oauthlib/\n| ‚îú‚îÄ‚îÄ requests_toolbelt/\n| ‚îú‚îÄ‚îÄ main.py \n| ‚îî‚îÄ‚îÄ app.yaml\n\n\n********\napp.yaml\n********\n\nIn order to use HTTPS, you'll have to make sure the built-in SSL library is properly imported in your ``app.yaml`` file. Here's what that section of your ``app.yaml`` file might look like:\n\n| libraries:\n| - name: jinja2\n|  version: latest\n| - name: webapp2\n|  version: latest\n| - name: ssl\n|  version: latest\n\n\n****************************\nLimitations & Considerations\n****************************\n\nCaching\n^^^^^^^\nWhen using twitter-python on App Engine, caching is disabled. You'll have to add and manage App Engine's memcache logic on your own if you require any caching beyond what is probably already setup on App Engine by default.\n\nDatastore\n^^^^^^^^^\nIf you plan to store tweets or other information returned by the API in Datastore, you'll probably want to make your own NDP models to store the desired components of the response rather than shoving the whole response into an entity.\n\nSockets\n^^^^^^^^^\nWhen urllib3 is imported on App Engine it will throw a warning about sockets: ``AppEnginePlatformWarning: urllib3 is using URLFetch on Google App Engine sandbox...`` This is just a warning that you'd have to use the Sockets API if you intend to use the sockets feature of the library, which we don't use in python-twitter so it can be ignored.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1484375,
          "content": "include CHANGES\ninclude COPYING\ninclude LICENSE\ninclude NOTICE\ninclude *.rst\ninclude requirements.txt\nprune .DS_Store\ngraft doc examples testdata tests\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.5576171875,
          "content": "SUPPORTED_VERSIONS = 2.7.15 3.6.5 pypy-5.7.1 pypy3.5-6.0.0\n\nhelp:\n\t@echo \"  env         install all production dependencies\"\n\t@echo \"  dev         install all dev and production dependencies (virtualenv is assumed)\"\n\t@echo \"  docs        build documentation\"\n\t@echo \"  clean       remove unwanted stuff\"\n\t@echo \"  lint        check style with flake8\"\n\t@echo \"  test        run tests\"\n\t@echo \"  coverage    run tests with code coverage\"\n\nenv:\n\tpip install -Ur requirements.txt\n\npyenv:\n\tfor version in $(SUPPORTED_VERSIONS) ; do \\\n\t\tpyenv install -s $$version; \\\n\tdone\n\tpyenv local $(SUPPORTED_VERSIONS)\n\ndev: pyenv env\n\tpip install -Ur requirements.testing.txt\n\ninfo:\n\t@python --version\n\t@pyenv --version\n\t@pip --version\n\nclean:\n\trm -fr build\n\trm -fr dist\n\tfind . -name '*.pyc' -exec rm -f {} \\;\n\tfind . -name '*.pyo' -exec rm -f {} \\;\n\tfind . -name '*~' ! -name '*.un~' -exec rm -f {} \\;\n\ndocs:\n\t$(MAKE) -C doc html\n\nlint:\n\tpycodestyle --config={toxinidir}/setup.cfg twitter tests\n\ntest: lint\n\tpytest -s\n\t#python setup.py test\n\ntox: clean\n\ttox\n\ncoverage: clean\n\tcoverage run --source=twitter setup.py test --addopts \"--ignore=venv\"\n\tcoverage html\n\tcoverage report\n\nupdate-pyenv:\n\tcd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -\n\nci: update-pyenv pyenv dev tox\n\tCODECOV_TOKEN=`cat .codecov-token` codecov\n\nbuild: clean\n\tpython setup.py check\n\tpython setup.py sdist\n\tpython setup.py bdist_wheel\n\nupload: clean\n\tpyenv 2.7.15\n\tpython setup.py sdist upload\n\tpython setup.py bdist_wheel upload\n\tpyenv 3.6.5\n\tpython setup.py bdist_wheel upload\n\tpyenv local $(SUPPORTED_VERSIONS)\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1064453125,
          "content": "NOTICE\n\nThis code is made available under the Apache License and is copyright the Python-Twitter Developers.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.53125,
          "content": "Python Twitter\n\nA Python wrapper around the Twitter API.\n\nBy the `Python-Twitter Developers <python-twitter@googlegroups.com>`_\n\n============\nNOTICE\n============\nI've archived this repo to mark that I'm not going to be maintaining it. It's open-source so anyone using it can fork or take it over.\nThank you to all the people that contributed to it in the past \n\n============\nIntroduction\n============\n\nThis library provides a pure Python interface for the `Twitter API <https://dev.twitter.com/>`_. It works with Python versions from 2.7+ and Python 3.\n\n`Twitter <http://twitter.com>`_ provides a service that allows people to connect via the web, IM, and SMS. Twitter exposes a `web services API <https://developer.twitter.com/en/docs>`_ and this library is intended to make it even easier for Python programmers to use.\n\n==========\nInstalling\n==========\n\nYou can install python-twitter using::\n\n    $ pip install python-twitter\n\n\nIf you are using python-twitter on Google App Engine, see `more information <GAE.rst>`_ about including 3rd party vendor library dependencies in your App Engine project.\n\n\n================\nGetting the code\n================\n\nThe code is hosted at https://github.com/bear/python-twitter\n\nCheck out the latest development version anonymously with::\n\n    $ git clone git://github.com/bear/python-twitter.git\n    $ cd python-twitter\n\nTo install dependencies, run either::\n\n\t$ make dev\n\nor::\n\n    $ pip install -Ur requirements.testing.txt\n    $ pip install -Ur requirements.txt\n\nNote that ```make dev``` will install into your local ```pyenv``` all of the versions needed for test runs using ```tox```.\n\nTo install the minimal dependencies for production use (i.e., what is installed\nwith ``pip install python-twitter``) run::\n\n    $ make env\n\nor::\n\n    $ pip install -Ur requirements.txt\n\n=============\nRunning Tests\n=============\nThe test suite can be run against a single Python version or against a range of them depending on which Makefile target you select.\n\nNote that tests require ```pip install pytest``` and optionally ```pip install pytest-cov``` (these are included if you have installed dependencies from ```requirements.testing.txt```)\n\nTo run the unit tests with a single Python version::\n\n    $ make test\n\nto also run code coverage::\n\n    $ make coverage\n\nTo run the unit tests against a set of Python versions::\n\n    $ make tox\n\n=============\nDocumentation\n=============\n\nView the latest python-twitter documentation at\nhttps://python-twitter.readthedocs.io. You can view Twitter's API documentation at: https://dev.twitter.com/overview/documentation\n\n=====\nUsing\n=====\n\nThe library provides a Python wrapper around the Twitter API and the Twitter data model. To get started, check out the examples in the examples/ folder or read the documentation at https://python-twitter.readthedocs.io which contains information about getting your authentication keys from Twitter and using the library.\n\n------------------\nUsing with Django\n------------------\n\nAdditional template tags that expand tweet urls and urlize tweet text. See the django template tags available for use with python-twitter: https://github.com/radzhome/python-twitter-django-tags\n\n------\nModels\n------\n\nThe library utilizes models to represent various data structures returned by Twitter. Those models are:\n    * twitter.Category\n    * twitter.DirectMessage\n    * twitter.Hashtag\n    * twitter.List\n    * twitter.Media\n    * twitter.Status\n    * twitter.Trend\n    * twitter.Url\n    * twitter.User\n    * twitter.UserStatus\n\nTo read the documentation for any of these models, run::\n\n    $ pydoc twitter.[model]\n\n---\nAPI\n---\n\nThe API is exposed via the ``twitter.Api`` class.\n\nThe python-twitter requires the use of OAuth keys for nearly all operations. As of Twitter's API v1.1, authentication is required for most, if not all, endpoints. Therefore, you will need to register an app with Twitter in order to use this library. Please see the \"Getting Started\" guide on https://python-twitter.readthedocs.io for more information.\n\nTo generate an Access Token you have to pick what type of access your application requires and then do one of the following:\n\n- `Generate a token to access your own account <https://dev.twitter.com/oauth/overview/application-owner-access-tokens>`_\n- `Generate a pin-based token <https://dev.twitter.com/oauth/pin-based>`_\n- use the helper script `get_access_token.py <https://github.com/bear/python-twitter/blob/master/get_access_token.py>`_\n\nFor full details see the `Twitter OAuth Overview <https://dev.twitter.com/oauth/overview>`_\n\nTo create an instance of the ``twitter.Api`` with login credentials (Twitter now requires an OAuth Access Token for all API calls)::\n\n    >>> import twitter\n    >>> api = twitter.Api(consumer_key='consumer_key',\n                          consumer_secret='consumer_secret',\n                          access_token_key='access_token',\n                          access_token_secret='access_token_secret')\n\nTo see if your credentials are successful::\n\n    >>> print(api.VerifyCredentials())\n    {\"id\": 16133, \"location\": \"Philadelphia\", \"name\": \"bear\"}\n\n**NOTE**: much more than the small sample given here will print\n\nTo fetch a single user's public status messages, where ``user`` is a Twitter user's screen name::\n\n    >>> statuses = api.GetUserTimeline(screen_name=user)\n    >>> print([s.text for s in statuses])\n\nTo fetch a list of a user's friends::\n\n    >>> users = api.GetFriends()\n    >>> print([u.name for u in users])\n\nTo post a Twitter status message::\n\n    >>> status = api.PostUpdate('I love python-twitter!')\n    >>> print(status.text)\n    I love python-twitter!\n\nThere are many more API methods, to read the full API documentation either\ncheck out the documentation on `readthedocs\n<https://python-twitter.readthedocs.io>`_, build the documentation locally\nwith::\n\n    $ make docs\n\nor check out the inline documentation with::\n\n    $ pydoc twitter.Api\n\n------\nTodo\n------\n\nPatches, pull requests, and bug reports are `welcome <https://github.com/bear/python-twitter/issues/new>`_, just please keep the style consistent with the original source.\n\nIn particular, having more example scripts would be a huge help. If you have\na program that uses python-twitter and would like a link in the documentation,\nsubmit a pull request against ``twitter/doc/getting_started.rst`` and add your\nprogram at the bottom.\n\nThe twitter.Status and ``twitter.User`` classes are going to be hard to keep in sync with the API if the API changes. More of the code could probably be written with introspection.\n\nThe ``twitter.Status`` and ``twitter.User`` classes could perform more validation on the property setters.\n\n----------------\nMore Information\n----------------\n\nPlease visit `the google group <http://groups.google.com/group/python-twitter>`_ for more discussion.\n\n------------\nContributors\n------------\n\nOriginally two libraries by DeWitt Clinton and Mike Taylor which were then merged into python-twitter.\n\nNow it's a full-on open source project with many contributors over time. See AUTHORS.rst for the complete list.\n\n-------\nLicense\n-------\n\n| Copyright 2007-2016 The Python-Twitter Developers\n|\n| Licensed under the Apache License, Version 2.0 (the 'License');\n| you may not use this file except in compliance with the License.\n| You may obtain a copy of the License at\n|\n|     http://www.apache.org/licenses/LICENSE-2.0\n|\n| Unless required by applicable law or agreed to in writing, software\n| distributed under the License is distributed on an 'AS IS' BASIS,\n| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n| See the License for the specific language governing permissions and\n| limitations under the License.\n"
        },
        {
          "name": "coveragerc",
          "type": "blob",
          "size": 0.0224609375,
          "content": "[run]\nsource = twitter\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "get_access_token.py",
          "type": "blob",
          "size": 3.2109375,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# Copyright 2007-2018 The Python-Twitter Developers\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"Utility to get your access tokens.\"\"\"\n\nfrom __future__ import print_function\n\nfrom requests_oauthlib import OAuth1Session\nimport webbrowser\n\nimport sys\n\nif sys.version_info.major < 3:\n    input = raw_input\n\nREQUEST_TOKEN_URL = 'https://api.twitter.com/oauth/request_token'\nACCESS_TOKEN_URL = 'https://api.twitter.com/oauth/access_token'\nAUTHORIZATION_URL = 'https://api.twitter.com/oauth/authorize'\nSIGNIN_URL = 'https://api.twitter.com/oauth/authenticate'\n\n\ndef get_access_token(consumer_key, consumer_secret):\n    \"\"\"Get an access token for a given consumer key and secret.\n\n    Args:\n        consumer_key (str):\n            Your application consumer key.\n        consumer_secret (str):\n            Your application consumer secret.\n\n    Returns:\n        (None) Prints to command line.\n    \"\"\"\n    oauth_client = OAuth1Session(consumer_key, client_secret=consumer_secret, callback_uri='oob')\n\n    print('\\nRequesting temp token from Twitter...\\n')\n\n    resp = oauth_client.fetch_request_token(REQUEST_TOKEN_URL)\n\n    url = oauth_client.authorization_url(AUTHORIZATION_URL)\n\n    print('I will try to start a browser to visit the following Twitter page '\n          'if a browser will not start, copy the URL to your browser '\n          'and retrieve the pincode to be used '\n          'in the next step to obtaining an Authentication Token: \\n'\n          '\\n\\t{0}'.format(url))\n\n    webbrowser.open(url)\n    pincode = input('\\nEnter your pincode? ')\n\n    print('\\nGenerating and signing request for an access token...\\n')\n\n    oauth_client = OAuth1Session(consumer_key, client_secret=consumer_secret,\n                                 resource_owner_key=resp.get('oauth_token'),\n                                 resource_owner_secret=resp.get('oauth_token_secret'),\n                                 verifier=pincode)\n    try:\n        resp = oauth_client.fetch_access_token(ACCESS_TOKEN_URL)\n    except ValueError as e:\n        raise 'Invalid response from Twitter requesting temp token: {0}'.format(e)\n\n    print('''Your tokens/keys are as follows:\n        consumer_key         = {ck}\n        consumer_secret      = {cs}\n        access_token_key     = {atk}\n        access_token_secret  = {ats}'''.format(\n            ck=consumer_key,\n            cs=consumer_secret,\n            atk=resp.get('oauth_token'),\n            ats=resp.get('oauth_token_secret')))\n\n\ndef main():\n    \"\"\"Run script to get access token and secret for given app.\"\"\"\n    consumer_key = input('Enter your consumer key: ')\n    consumer_secret = input('Enter your consumer secret: ')\n    get_access_token(consumer_key, consumer_secret)\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.2314453125,
          "content": "[pytest]\nnorecursedirs=\n    venv\n    */python?.?/*\n    */site-packages/*\n    .tox/*\n\nwith-coverage = true\ncover-package = twitter\ncover-html = true\ncover-html-dir = htmlcov\ncover-erase = true\ncover-inclusive = true\ncover-branches = true\n"
        },
        {
          "name": "requirements.docs.txt",
          "type": "blob",
          "size": 0.0498046875,
          "content": "requests\nrequests-oauthlib\nsphinx\nsphinx_rtd_theme\n"
        },
        {
          "name": "requirements.testing.txt",
          "type": "blob",
          "size": 0.162109375,
          "content": "requests\nrequests-oauthlib\nresponses\n\npytest\npytest-cov\npytest-runner\nmccabe\nmock\nsix\ncoverage\ncoveralls\ncodecov\ncheck-manifest\ntox\ntox-pyenv\npycodestyle\n\nhypothesis\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.03515625,
          "content": "requests\nrequests-oauthlib\nfiletype\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.23828125,
          "content": "[aliases]\ntest = pytest\n\n[bdist_wheel]\nuniversal=1\n\n[check-manifest]\nignore =\n  .travis.yml\n  circle.yml\n  violations.flake8.txt\n\n[flake8]\nignore = E111,E124,E126,E221,E501\n\n[pycodestyle]\nignore = E111,E124,E126,E221,E501\nmax-line-length = 100\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.1845703125,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom __future__ import absolute_import, print_function\n\n#\n# Copyright 2007-2016 The Python-Twitter Developers\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport os\nimport re\nimport codecs\n\nfrom setuptools import setup, find_packages\n\n\ncwd = os.path.abspath(os.path.dirname(__file__))\n\ndef read(filename):\n    with codecs.open(os.path.join(cwd, filename), 'rb', 'utf-8') as h:\n        return h.read()\n\ndef convert_txt(txt):\n    lst_txt = txt.split('\\n')\n    for i in range(len(lst_txt)):\n        line = lst_txt[i]\n        match = re.match(r' +(\\S.+)', line)\n        if match is not None:\n            lst_txt[i] = '\\n| {}'.format(match.group(1))\n        else:\n            match_date = re.match(r'(\\d+-\\d+-\\d+)', line)\n            if match_date is not None:\n                lst_txt[i] = '\\n**{}**'.format(match_date.group(1))\n    return '\\n'.join(lst_txt)\n\nmetadata = read(os.path.join(cwd, 'twitter', '__init__.py'))\n\ndef extract_metaitem(meta):\n    # swiped from https://hynek.me 's attr package\n    meta_match = re.search(r\"\"\"^__{meta}__\\s+=\\s+['\\\"]([^'\\\"]*)['\\\"]\"\"\".format(meta=meta),\n                           metadata, re.MULTILINE)\n    if meta_match:\n        return meta_match.group(1)\n    raise RuntimeError('Unable to find __{meta}__ string.'.format(meta=meta))\n\nsetup(\n    name='python-twitter',\n    version=extract_metaitem('version'),\n    license=extract_metaitem('license'),\n    description=extract_metaitem('description'),\n    long_description=(read('README.rst') + '\\n\\n' +\n                      read('AUTHORS.rst') + '\\n\\n' +\n                      convert_txt(read('CHANGES'))),\n    long_description_content_type = 'text/x-rst',\n    author=extract_metaitem('author'),\n    author_email=extract_metaitem('email'),\n    maintainer=extract_metaitem('author'),\n    maintainer_email=extract_metaitem('email'),\n    url=extract_metaitem('url'),\n    download_url=extract_metaitem('download_url'),\n    packages=find_packages(exclude=('tests', 'docs')),\n    platforms=['Any'],\n    install_requires=['requests', 'requests-oauthlib', 'filetype'],\n    tests_require=['pytest'],\n    keywords='twitter api',\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: Apache Software License',\n        'Operating System :: OS Independent',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Communications :: Chat',\n        'Topic :: Internet',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.6',\n    ],\n)\n"
        },
        {
          "name": "test.py",
          "type": "blob",
          "size": 0.1484375,
          "content": "import unittest\n\nif __name__ == '__main__':\n    testsuite = unittest.TestLoader().discover('.')\n    unittest.TextTestRunner(verbosity=1).run(testsuite)\n"
        },
        {
          "name": "testdata",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.6728515625,
          "content": "[tox]\nenvlist = clean,py27,py37,pypy,pypy3,codestyle,coverage\nskip_missing_interpreters = True\n\n[testenv]\ndeps = -Ur{toxinidir}/requirements.txt\n       -Ur{toxinidir}/requirements.testing.txt\n\ncommands = coverage run --parallel-mode --source=twitter setup.py test --addopts \"--ignore=venv\"\n\nwhitelist_externals = /bin/bash\n                      make\nsetenv =\n    PYTHONWARNINGS=always::DeprecationWarning\n\n[testenv:clean]\ndeps = coverage\ncommands = coverage erase\n\n[testenv:coverage]\ndeps = coverage\ncommands = coverage combine\n           coverage html\n           coverage report\n\n\n[testenv:codestyle]\ndeps = pycodestyle\ncommands = pycodestyle --config={toxinidir}/setup.cfg twitter tests\n"
        },
        {
          "name": "twitter",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}