{
  "metadata": {
    "timestamp": 1736559551679,
    "page": 157,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "offu/WeRoBot",
      "stars": 4607,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.23828125,
          "content": "engines:\n  duplication:\n    enabled: true\n    config:\n      languages:\n      - python\n  fixme:\n    enabled: true\n  markdownlint:\n    enabled: true\n  pep8:\n    enabled: true\nratings:\n  paths:\n  - \"**.py\"\nexclude_paths:\n- docs/\n- travis/\n- tests/"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.181640625,
          "content": "[run]\nsource = werobot\n\n[report]\nexclude_lines =\n    pragma: no cover\n\n    def __repr__\n\n    raise AssertionError\n    raise NotImplementedError\n\n    if 0:\n    if __name__ == .__main__.:\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.126953125,
          "content": "root = true\n\n[*]\nindent_size = 4\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\n\n[*.{yml,ini}]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5361328125,
          "content": "*.py[cod]\n.python-version\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\n.eggs/\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n.cache/\ncover/\nhtmlcov/\n\n# Translations\n*.mo\n\n# Emacs\n.#*\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n.DS_Store\n.idea\n\n#Sphinx\ndocs/_\n\n#VirtualEnv\n.Python\ninclude/\nScripts/\npyvenv.cfg\n\nwerobot_session.db\n\n.coveralls.yml\n\nwerobot_session*\npip-selfcheck.json\nvenv\n\n*.sqlite3\n.pytest_cache\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".pipignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "WeRoBot\ndistribute"
        },
        {
          "name": ".scrutinizer.yml",
          "type": "blob",
          "size": 0.1552734375,
          "content": "checks:\n    python:\n        code_rating: true\n        duplicate_code: true\nfilter:\n    excluded_paths:\n        - tests/*\n        - travis/*\n        - example/*"
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.30859375,
          "content": "[style]\nbased_on_style = pep8\nalign_closing_bracket_with_visual_indent = true\nallow_multiline_dictionary_keys = false\nallow_split_before_dict_value = false\ndedent_closing_brackets = true\neach_dict_entry_on_separate_line = true\ncoalesce_brackets = false\nspaces_before_comment = 2\nsplit_before_logical_operator = true\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0244140625,
          "content": "Copyright (c) 2013 whtsky\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1767578125,
          "content": "include requirements.txt\ninclude README.rst\ninclude LICENSE\ninclude werobot/contrib/error.html\nrecursive-include tests *\nrecursive-exclude tests *.pyc\nrecursive-exclude tests *.pyo\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.4111328125,
          "content": "====================================\nWeRoBot\n====================================\n\n.. image:: https://github.com/offu/werobot/workflows/tests/badge.svg\n    :target: https://github.com/offu/werobot/actions\n.. image:: https://codecov.io/gh/offu/WeRoBot/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/offu/WeRoBot\n.. image:: https://img.shields.io/badge/QQ%20Group-283206829-brightgreen.svg?logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB3aWR0aD0iMTc5MiIgaGVpZ2h0PSIxNzkyIiB2aWV3Qm94PSIwIDAgMTc5MiAxNzkyIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPjxwYXRoIGQ9Ik0yNzAgODA2cS04LTE5LTgtNTIgMC0yMCAxMS00OXQyNC00NXEtMS0yMiA3LjUtNTN0MjIuNS00M3EwLTEzOSA5Mi41LTI4OC41dDIxNy41LTIwOS41cTEzOS02NiAzMjQtNjYgMTMzIDAgMjY2IDU1IDQ5IDIxIDkwIDQ4dDcxIDU2IDU1IDY4IDQyIDc0IDMyLjUgODQuNSAyNS41IDg5LjUgMjIgOThsMSA1cTU1IDgzIDU1IDE1MCAwIDE0LTkgNDB0LTkgMzhxMCAxIDEuNSAzLjV0My41IDUgMiAzLjVxNzcgMTE0IDEyMC41IDIxNC41dDQzLjUgMjA4LjVxMCA0My0xOS41IDEwMHQtNTUuNSA1N3EtOSAwLTE5LjUtNy41dC0xOS0xNy41LTE5LTI2LTE2LTI2LjUtMTMuNS0yNi05LTE3LjVxLTEtMS0zLTFsLTUgNHEtNTkgMTU0LTEzMiAyMjMgMjAgMjAgNjEuNSAzOC41dDY5IDQxLjUgMzUuNSA2NXEtMiA0LTQgMTZ0LTcgMThxLTY0IDk3LTMwMiA5Ny01MyAwLTExMC41LTl0LTk4LTIwLTEwNC41LTMwcS0xNS01LTIzLTctMTQtNC00Ni00LjV0LTQwLTEuNXEtNDEgNDUtMTI3LjUgNjV0LTE2OC41IDIwcS0zNSAwLTY5LTEuNXQtOTMtOS0xMDEtMjAuNS03NC41LTQwLTMyLjUtNjRxMC00MCAxMC01OS41dDQxLTQ4LjVxMTEtMiA0MC41LTEzdDQ5LjUtMTJxNCAwIDE0LTIgMi0yIDItNGwtMi0zcS00OC0xMS0xMDgtMTA1LjV0LTczLTE1Ni41bC01LTNxLTQgMC0xMiAyMC0xOCA0MS01NC41IDc0LjV0LTc3LjUgMzcuNWgtMXEtNCAwLTYtNC41dC01LTUuNXEtMjMtNTQtMjMtMTAwIDAtMjc1IDI1Mi00NjZ6IiBmaWxsPSIjZmZmIi8%2BPC9zdmc%2B\n    :target: https://jq.qq.com/?_wv=1027&k=449sXsV\n\nWeRoBot 是一个微信公众号开发框架，采用MIT协议发布。\n\n文档在这里： https://werobot.readthedocs.org/zh_CN/latest/\n\n安装\n========\n\n推荐使用 pip 进行安装 ::\n\n    pip install werobot\n\nHello World\n=============\n\n一个非常简单的 Hello World 微信公众号，会对收到的所有文本消息回复 Hello World ::\n\n    import werobot\n\n    robot = werobot.WeRoBot(token='tokenhere')\n\n    @robot.text\n    def hello_world():\n        return 'Hello World!'\n\n    robot.run()\n    \nCredits \n=======\nContributors\n-----------------\nThank you to all the people who have already contributed. \n|occontributorimage|\n\n.. |occontributorimage| image:: https://opencollective.com/werobot/contributors.svg?width=890&button=false\n    :target: https://opencollective.com/werobot\n    :alt: Repo Contributors\n"
        },
        {
          "name": "artwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "bors.toml",
          "type": "blob",
          "size": 0.14453125,
          "content": "status = [\n  \"continuous-integration/travis-ci/push\",\n  \"continuous-integration/appveyor/branch\",\n  \"ci/circleci\",\n]\n\n# 4 hours\ntimeout-sec = 14400\n"
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.0791015625,
          "content": "-r tox-requirements.txt\n-r docs-requirements.txt\nyapf==0.30.0\ntox==3.24.5\nDjango\n"
        },
        {
          "name": "docs-requirements.txt",
          "type": "blob",
          "size": 0.0439453125,
          "content": "-r tox-requirements.txt\nSphinx==4.4.0\nDjango\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.0400390625,
          "content": "[pytest]\ntestpaths = tests\naddopts = -rw\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.025390625,
          "content": "bottle\nrequests\nxmltodict\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0966796875,
          "content": "[aliases]\nrelease = sdist --formats=zip,gztar bdist_wheel\ntest=pytest\n\n[bdist_wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.078125,
          "content": "#!/usr/bin/env python\n# coding=utf-8\n\nimport io\nimport werobot\n\nfrom setuptools import setup, find_packages\nfrom setuptools.command.test import test as TestCommand\n\n\nclass PyTest(TestCommand):\n    user_options = [(\"pytest-args=\", \"a\", \"Arguments to pass to pytest\")]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = \"\"\n\n    def run_tests(self):\n        import shlex\n\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n\n        errno = pytest.main(shlex.split(self.pytest_args))\n        sys.exit(errno)\n\n\nwith io.open(\"README.rst\", encoding=\"utf8\") as f:\n    readme = f.read()\nreadme = readme.replace(\"latest\", \"v\" + werobot.__version__)\n\ninstall_requires = open(\"requirements.txt\").readlines()\nsetup(\n    name='WeRoBot',\n    version=werobot.__version__,\n    author=werobot.__author__,\n    author_email='whtsky@me.com',\n    url='https://github.com/offu/WeRoBot',\n    packages=find_packages(),\n    keywords=\"wechat weixin werobot\",\n    description='WeRoBot: writing WeChat Offical Account Robots with fun',\n    long_description=readme,\n    install_requires=install_requires,\n    include_package_data=True,\n    license='MIT License',\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: MacOS',\n        'Operating System :: POSIX',\n        'Operating System :: POSIX :: Linux',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: Implementation :: CPython',\n        'Intended Audience :: Developers',\n        'Topic :: Software Development :: Libraries',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Utilities',\n    ],\n    tests_require=['pytest'],\n    cmdclass={\"pytest\": PyTest},\n    extras_require={'crypto': [\"cryptography\"]},\n    package_data={'werobot': ['contrib/*.html']}\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox-requirements.txt",
          "type": "blob",
          "size": 0.1845703125,
          "content": "-r requirements.txt\ncoverage==5.3.1\ncryptography==36.0.2\npytest==7.0.1\nWebTest==2.0.35\nFlask\ntornado\nresponses==0.12.1\nmultipart==0.1\npytest-mock==3.5.1\nmongomock==4.0.0\nmockredispy==2.9.3\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.3154296875,
          "content": "[tox]\nenvlist = {py36,py37,py38,py39}--{dj22,dj30,dj31}\n\n[testenv]\ncommands = coverage run --source werobot -m py.test\ncommands_post = codecov\npassenv = DATABASE_MYSQL_USERNAME DATABASE_MYSQL_PASSWORD CODECOV_*\ndeps =\n  dj22: Django < 2.3\n  dj30: Django < 3.1\n  dj31: Django < 3.2\n  -rtox-requirements.txt\n  codecov>=1.4.0\n"
        },
        {
          "name": "werobot",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}