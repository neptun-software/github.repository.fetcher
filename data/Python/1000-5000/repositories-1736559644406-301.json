{
  "metadata": {
    "timestamp": 1736559644406,
    "page": 301,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Gozargah/Marzban",
      "stars": 4269,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1806640625,
          "content": "**/node_modules\n*.log\n*.md\n*.pyc\n*.pyd\n*.pyo\n.docker*\n.env*\n.git*\n.idea\n.venv\n.vscode\nDockerfile*\n__pycache__\ndb.sqlite3\ndb.sqlite3-journal\ndocker-compose*.yml\nv2ray-core\nvenv\nxray-core"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 3.6640625,
          "content": "UVICORN_HOST = \"0.0.0.0\"\nUVICORN_PORT = 8000\n# ALLOWED_ORIGINS=http://localhost,http://localhost:8000,http://example.com\n\n## We highly recommend add admin using `marzban cli` tool and do not use\n## the following variables which is somehow hard codded infrmation.\n# SUDO_USERNAME = \"admin\"\n# SUDO_PASSWORD = \"admin\"\n\n# UVICORN_UDS: \"/run/marzban.socket\"\n# UVICORN_SSL_CERTFILE = \"/var/lib/marzban/certs/example.com/fullchain.pem\"\n# UVICORN_SSL_KEYFILE = \"/var/lib/marzban/certs/example.com/key.pem\"\n# UVICORN_SSL_CA_TYPE = \"public\"\n\n# DASHBOARD_PATH = \"/dashboard/\"\n\n# XRAY_JSON = \"xray_config.json\"\n# XRAY_SUBSCRIPTION_URL_PREFIX = \"https://example.com\"\n# XRAY_SUBSCRIPTION_PATH = \"sub\"\n# XRAY_EXECUTABLE_PATH = \"/usr/local/bin/xray\"\n# XRAY_ASSETS_PATH = \"/usr/local/share/xray\"\n# XRAY_EXCLUDE_INBOUND_TAGS = \"INBOUND_X INBOUND_Y\"\n# XRAY_FALLBACKS_INBOUND_TAG = \"INBOUND_X\"\n\n\n# TELEGRAM_API_TOKEN = 123456789:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n# TELEGRAM_ADMIN_ID = 987654321, 123456789\n# TELEGRAM_LOGGER_CHANNEL_ID = -1234567890123\n# TELEGRAM_DEFAULT_VLESS_FLOW = \"xtls-rprx-vision\"\n# TELEGRAM_PROXY_URL = \"http://localhost:8080\"\n\n# DISCORD_WEBHOOK_URL = \"https://discord.com/api/webhooks/xxxxxxx\"\n\n# CUSTOM_TEMPLATES_DIRECTORY=\"/var/lib/marzban/templates/\"\n# CLASH_SUBSCRIPTION_TEMPLATE=\"clash/my-custom-template.yml\"\n# SUBSCRIPTION_PAGE_TEMPLATE=\"subscription/index.html\"\n# HOME_PAGE_TEMPLATE=\"home/index.html\"\n\n# V2RAY_SUBSCRIPTION_TEMPLATE=\"v2ray/default.json\"\n# V2RAY_SETTINGS_TEMPLATE=\"v2ray/settings.json\"\n\n# SINGBOX_SUBSCRIPTION_TEMPLATE=\"singbox/default.json\"\n# SINGBOX_SETTINGS_TEMPLATE=\"singbox/settings.json\"\n\n# MUX_TEMPLATE=\"mux/default.json\"\n\n## Enable JSON config for compatible clients to use mux, fragment, etc. Default False.\n# USE_CUSTOM_JSON_DEFAULT=True\n## Your preferred config type for different clients\n## If USE_CUSTOM_JSON_DEFAULT is set True, all following programs will use the JSON config\n# USE_CUSTOM_JSON_FOR_V2RAYN=False\n# USE_CUSTOM_JSON_FOR_V2RAYNG=True\n# USE_CUSTOM_JSON_FOR_STREISAND=False\n# USE_CUSTOM_JSON_FOR_HAPP=False\n\n## Set headers for subscription\n# SUB_PROFILE_TITLE = \"Susbcription\"\n# SUB_SUPPORT_URL = \"https://t.me/support\"\n# SUB_UPDATE_INTERVAL = \"12\"\n\n## External config to import into v2ray format subscription\n# EXTERNAL_CONFIG = \"config://...\"\n\n# SQLALCHEMY_DATABASE_URL = \"sqlite:///db.sqlite3\"\n# SQLALCHEMY_POOL_SIZE = 10\n# SQLIALCHEMY_MAX_OVERFLOW = 30\n\n## Custom text for STATUS_TEXT variable\n# ACTIVE_STATUS_TEXT = \"Active\"\n# EXPIRED_STATUS_TEXT = \"Expired\"\n# LIMITED_STATUS_TEXT = \"Limited\"\n# DISABLED_STATUS_TEXT = \"Disabled\"\n# ONHOLD_STATUS_TEXT = \"On-Hold\"\n\n### Use negative values to disable auto-delete by default\n# USERS_AUTODELETE_DAYS = -1\n# USER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS = false\n\n## Customize all notifications\n# NOTIFY_STATUS_CHANGE = True\n# NOTIFY_USER_CREATED = True\n# NOTIFY_USER_UPDATED = True\n# NOTIFY_USER_DELETED = True\n# NOTIFY_USER_DATA_USED_RESET = True\n# NOTIFY_USER_SUB_REVOKED = True\n# NOTIFY_IF_DATA_USAGE_PERCENT_REACHED = True\n# NOTIFY_IF_DAYS_LEFT_REACHED = True\n# NOTIFY_LOGIN = True\n\n## Whitelist of IPs/hosts to disable login notifications\n# LOGIN_NOTIFY_WHITE_LIST = '1.1.1.1,127.0.0.1'\n\n### for developers\n# DOCS=True\n# DEBUG=True\n\n# If You Want To Send Webhook To Multiple Server Add Multi Address\n# WEBHOOK_ADDRESS = \"http://127.0.0.1:9000/,http://127.0.0.1:9001/\"\n# WEBHOOK_SECRET = \"something-very-very-secret\"\n# NOTIFY_DAYS_LEFT=3,7\n# NOTIFY_REACHED_USAGE_PERCENT=80,90\n\n# VITE_BASE_API=\"https://example.com/api/\"\n# JWT_ACCESS_TOKEN_EXPIRE_MINUTES = 1440\n\n# JOB_CORE_HEALTH_CHECK_INTERVAL = 10\n# JOB_RECORD_NODE_USAGES_INTERVAL = 30\n# JOB_RECORD_USER_USAGES_INTERVAL = 10\n# JOB_REVIEW_USERS_INTERVAL = 10\n# JOB_SEND_NOTIFICATIONS_INTERVAL = 30"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.873046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n*.sqlite3\n*.sqlite3-journal\n*.db\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.venv\nvenv/\nvenv.bak/\n.vscode/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n.idea/\n\n.env\nv2ray-core\nxray-core\n\n# don't track custom/dev.json/yaml/yml configs, such as xray-custom.json or clash-dev.yaml\n*-custom.json\n*-custom.yaml\n*-custom.yml\n*-dev.json\n*-dev.yml\n*-dev.yaml\n*-debug.*\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.9091796875,
          "content": "# Contribute to Marzban\nThanks for considering contributing to Marzban!\n\n## Questions\n\nPlease don't ask your questions in issues. Instead, use one of the following ways to ask:\n- Ask on our telegram group: [@Gozargah_Marzban](https://t.me/gozargah_marzban)\n- Ask on our [GitHub Discussions](https://github.com/gozargah/marzban/discussions) for long term discussion or larger questions.\n\n\n## Reporting issues\n\nInclude the following information in your post:\n- Describe what you expected to happen.\n- Describe what actually happened. Include server logs or any error that browser shows.\n- If possible, post your xray json config file and what you have set in env (by censoring critical information).\n- Also tell the version of Marzban, Xray and docker (if you use docker) you are using.\n\n\n# Submitting a Pull Request\nIf there is not an open issue for what you want to submit, prefer opening one for discussion before working on a PR. You can work on any issue that doesn't have an open PR linked to it or a maintainer assigned to it. These show up in the sidebar. No need to ask if you can work on an issue that interests you.\n\n## Branches\nWhen starting development on this project, please make sure to create a new branch off the `dev` branch. This helps to keep the `master` branch stable and free of any development work that may not be complete or fully tested.\n\n## Project Structure\n```\n.\n├── app                      # Backend code (FastAPI - Python)\n│   └── dashboard            # Frontend code (React - Typescript)\n├── cli                      # CLI code (Typer - Python)\n└── xray_api                 # Client of Xray's gRPC API\n```\n\n## Backend\nBackend is built using FastAPI and uses SQLAlchemy as the ORM for database operations. All Pydantic models can be found in the `app/models` directory, while all database-related operations and models are in the `app/db` directory. The migration scripts for the database (Alembic) can be found in the `app/db/migrations` directory.\n\n### Python Code Formatting\nTo maintain consistency in the codebase, we require all code to be formatted using \n```bash\nautopep8 <file> --max-line-length 120\n```\n\n## Frontend\nFrontend is pre-built and served by FastAPI from the `app/dashboard/build` directory. To rebuild the frontend, first make sure you have the necessary dependencies installed by running `npm install` in the `app/dashboard` directory. Then, simply remove the `app/dashboard/build` directory and run the Python code again, and it will rebuild the frontend automatically.\n\n### Components Library\nFrontend uses `Chakra-UI` as the component library, so please adhere to the Chakra-UI approach when contributing. Strive to create components that are cohesive and serve a single purpose. Keep in mind that readability and maintainability are more important than brevity, so prioritize those factors when writing your code.\n\n## Marzban CLI\nMarzban CLI is built using [Typer](https://typer.tiangolo.com/), and its commands' code can be found in `cli`  directory. Its documentation is generated using [Typer CLI](https://typer.tiangolo.com/typer-cli/) which can be re-generated by navigating to project's root directory and running the following command (`typer-cli` package needs to be installed first):\n\n```bash\n$ PYTHONPATH=$(pwd) typer marzban-cli.py utils docs --name \"\" --output ./cli/README.md\n```\n\n## Debug Mode\nTo run the project in debug mode with auto-reload, you can set the environment variable `DEBUG` to `true`. then by running the `main.py`, the backend and frontend will run separately on different ports.\n\nNote that you must first install the necessary npm packages by running npm install inside the app/dashboard directory before running in debug mode.\n```bash\ncd app/dashboard\nnpm install\ncd ../..\n```\n\nIf you run the project with debug mode off and delete the `app/dashboard/build` directory, the frontend will be rebuilt automatically on the next run. However, no rebuild will occur while inside debug mode.\"\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0390625,
          "content": "ARG PYTHON_VERSION=3.12\n\nFROM python:$PYTHON_VERSION-slim AS build\n\nENV PYTHONUNBUFFERED=1\n\nWORKDIR /code\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends build-essential curl unzip gcc python3-dev libpq-dev \\\n    && curl -L https://github.com/Gozargah/Marzban-scripts/raw/master/install_latest_xray.sh | bash \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY ./requirements.txt /code/\nRUN python3 -m pip install --upgrade pip setuptools \\\n    && pip install --no-cache-dir --upgrade -r /code/requirements.txt\n\nFROM python:$PYTHON_VERSION-slim\n\nENV PYTHON_LIB_PATH=/usr/local/lib/python${PYTHON_VERSION%.*}/site-packages\nWORKDIR /code\n\nRUN rm -rf $PYTHON_LIB_PATH/*\n\nCOPY --from=build $PYTHON_LIB_PATH $PYTHON_LIB_PATH\nCOPY --from=build /usr/local/bin /usr/local/bin\nCOPY --from=build /usr/local/share/xray /usr/local/share/xray\n\nCOPY . /code\n\nRUN ln -s /code/marzban-cli.py /usr/bin/marzban-cli \\\n    && chmod +x /usr/bin/marzban-cli \\\n    && marzban-cli completion install --shell bash\n\nCMD [\"bash\", \"-c\", \"alembic upgrade head; python main.py\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.6865234375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 21 January 2023\n\n Copyright (C) 2023 Gozargah organization.\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README-fa.md",
          "type": "blob",
          "size": 31.3017578125,
          "content": "<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-dark.png\">\n      <img width=\"160\" height=\"160\" src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-light.png\">\n    </picture>\n  </a>\n</p>\n\n<h1 align=\"center\"/>مرزبان</h1>\n\n<p align=\"center\">\n     راه حل یکپارچه برای مدیریت پروتکل های مختلف. قدرت گرفته از <a href=\"https://github.com/XTLS/Xray-core\">Xray</a>\n</p>\n\n<br/>\n<p align=\"center\">\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/gozargah/marzban/build.yml?style=flat-square\" />\n    </a>\n    <a href=\"https://hub.docker.com/r/gozargah/marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/docker/pulls/gozargah/marzban?style=flat-square&logo=docker\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/license/gozargah/marzban?style=flat-square\" />\n    </a>\n    <a href=\"https://t.me/gozargah_marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/badge/telegram-group-blue?style=flat-square&logo=telegram\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/badge/twitter-commiunity-blue?style=flat-square&logo=twitter\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/stars/gozargah/marzban?style=social\" />\n    </a>\n</p>\n\n<p align=\"center\">\n\t<a href=\"./README.md\">\n\tEnglish\n\t</a>\n\t/\n\t<a href=\"./README-fa.md\">\n\tفارسی\n\t</a>\n  /\n  <a href=\"./README-zh-cn.md\">\n\t简体中文\n\t</a>\n   /\n  <a href=\"./README-ru.md\">\n Русский\n </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\" >\n    <img src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/preview.png\" alt=\"Elk screenshots\" width=\"600\" height=\"auto\">\n  </a>\n</p>\n\n\n## فهرست مطالب\n- [بررسی اجمالی](#بررسی-اجمالی)\n  - [چرا مرزبان؟](#چرا-مرزبان)\n    - [امکانات](#امکانات)\n- [راهنمای نصب](#راهنمای-نصب)\n- [تنظیمات](#تنظیمات)\n- [داکیومنت](#داکیومنت)\n- [استفاده از API](#استفاده-از-api)\n- [پشتیبان گیری از مرزبان](#پشتیبان-گیری-از-مرزبان)\n- [ربات تلگرام](#ربات-تلگرام)\n- [رابط خط فرمان (CLI) مرزبان](#رابط-خط-فرمان-cli-مرزبان)\n- [ارسال اعلان‌ها به آدرس وبهوک](#ارسال-اعلانها-به-آدرس-وبهوک)\n- [کمک مالی](#کمک-مالی)\n- [لایسنس](#لایسنس)\n- [مشارکت در توسعه](#مشارکت-در-توسعه)\n\n\n# بررسی اجمالی\n\nمرزبان یک نرم افزار (وب اپلیکیشن) مدیریت پروکسی است که امکان مدیریت چند صد حساب پروکسی را با قدرت و دسترسی بالا فراهم میکند. مرزبان از [Xray-core](https://github.com/XTLS/Xray-core) قدرت گرفته و با Python و React پیاده سازی شده است.\n\n## چرا مرزبان؟\n\nمرزبان دارای یک رابط کاربری ساده است که قابلیت های زیادی دارد. مرزبان امکان ایجاد چند نوع پروکسی برای کاربر ها را فراهم میکند بدون اینکه به تنظیمات پیچیده ای نیاز داشته باشید. به کمک رابط کاربری تحت وب مرزبان، شما میتوانید کاربران را مانیتور، ویرایش و در صورت نیاز، محدود کنید.\n\n### امکانات\n\n- **رابط کاربری تحت وب** آماده\n- به صورت **REST API** پیاده سازی شده\n- پشتیبانی از پروتکل های **Vmess**, **VLESS**, **Trojan** و **Shadowsocks**\n- امکان فعالسازی **چندین پروتکل** برای هر یوزر\n- امکان ساخت **چندین کاربر** بر روی یک inbound\n- پشتیبانی از **چندین inbound** بر روی **یک port** (به کمک fallbacks)\n- محدودیت بر اساس مصرف **ترافیک** و **تاریخ انقضا**\n- محدودیت **ترافیک دوره ای** (به عنوان مثال روزانه، هفتگی و غیره)\n- پشتیبانی از **Subscription link** سازگار با **V2ray** _(مثل نرم افزار های V2RayNG, SingBox, Nekoray و...)_ و **Clash**\n- ساخت **لینک اشتراک گذاری** و **QRcode** به صورت خودکار\n- مانیتورینگ منابع سرور و **مصرف ترافیک**\n- پشتیبانی از تنظیمات xray\n- پشتیبانی از **TLS**\n- **ربات تلگرام**\n- **رابط خط فرمان (CLI)** داخلی\n- قابلیت ایجاد **چندین مدیر** (تکمیل نشده است)\n\n# راهنمای نصب\n\nبا دستور زیر مرزبان را با دیتابیس SQLite نصب کنید:\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install\n```\n\nبا دستور زیر مرزبان را با دیتابیس MySQL نصب کنید:\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mysql\n```\n\nبا دستور زیر مرزبان را با دیتابیس MariaDB نصب کنید:\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mariadb\n```\n\nوقتی نصب تمام شد:\n\n- شما لاگ های مرزبان رو مشاهده میکنید که می‌توانید با بستن ترمینال یا فشار دادن `Ctrl+C` از آن خارج شوید\n- فایل های مرزبان در پوشه `/opt/marzban` قرار می‌گیرند\n- فایل تنظیمات در مسیر `/opt/marzban/.env` قرار می‌گیرد ([تنظیمات](#تنظیمات) را مشاهده کنید)\n- فایل های مهم (اطلاعات) مرزبان در مسیر `/usr/lib/marzban` قرار می‌گیرند\nبه دلایل امنیتی، داشبورد مرزبان از طریق آیپی قابل دسترسی نیست. بنابراین، باید برای دامنه خود [گواهی SSL](https://gozargah.github.io/marzban/fa/examples/issue-ssl-certificate) بگیرید و از طریق آدرس https://YOUR_DOMAIN:8000/dashboard/ وارد داشبورد مرزبان شوید (نام دامنه خود را جایگزین YOUR_DOMAIN کنید)\n- همچنین می‌توانید از فوروارد کردن پورت SSH برای دسترسی لوکال به داشبورد مرزبان بدون دامنه استفاده کنید. نام کاربری و آیپی سرور خود را جایگزین `user@serverip` کنید و دستور زیر را اجرا کنید:\n\n```bash\nssh -L 8000:localhost:8000 user@serverip\n```\n\nدر نهایت، می‌توانید لینک زیر را در مرورگر خود وارد کنید تا به داشبورد مرزبان دسترسی پیدا کنید:\n\nhttp://localhost:8000/dashboard/\n\nبه محض بستن ترمینال SSH، دسترسی شما به داشبورد قطع خواهد شد. بنابراین، این روش تنها برای تست  کردن توصیه می‌شود.\n\nدر مرحله بعد, باید یک ادمین سودو بسازید\n\n```bash\nmarzban cli admin create --sudo\n```\n\nتمام! حالا با این اطلاعات می‌توانید وارد مرزبان شوید\n\nبرای مشاهده راهنمای اسکریپت مرزبان دستور زیر را اجرا کنید\n\n```bash\nmarzban --help\n```\n\nاگر مشتاق هستید که مرزبان رو با پایتون و به صورت دستی اجرا کنید، مراحل زیر را مشاهده کنید\n<details markdown=\"1\">\n<summary><h3>نصب به صورت دستی (پیچیده)</h3></summary>\n\nلطفا xray را نصب کنید.\nشما میتواند به کمک [Xray-install](https://github.com/XTLS/Xray-install) این کار را انجام دهید.\n\n```bash\nbash -c \"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\" @ install\n```\n\nپروژه را clone کنید و dependency ها را نصب کنید. دقت کنید که نسخه پایتون شما Python>=3.8 باشد.\n\n```bash\ngit clone https://github.com/Gozargah/Marzban.git\ncd Marzban\nwget -qO- https://bootstrap.pypa.io/get-pip.py | python3 -\npython3 -m pip install -r requirements.txt\n```\n\nهمچنین میتواند از , [Python Virtualenv](https://pypi.org/project/virtualenv/) هم استفاده کنید.\n\nسپس کامند زیر را اجرا کنید تا دیتابیس تنظیم شود.\n\n```bash\nalembic upgrade head\n```\n\nاگر می خواهید از `marzban-cli` استفاده کنید، باید آن را به یک فایل در `$PATH` خود لینک و قابل اجرا (executable) کنید. سپس تکمیل خودکار (auto-completion) آن را نصب کنید:\n\n```bash\nsudo ln -s $(pwd)/marzban-cli.py /usr/bin/marzban-cli\nsudo chmod +x /usr/bin/marzban-cli\nmarzban-cli completion install\n```\n\nحالا یک کپی از `.env.example` با نام `.env` بسازید و با یک ادیتور آن را باز کنید و تنظیمات دلخواه خود را انجام دهید. یه عنوان مثال نام کاربری و رمز عبور را می توانید در این فایل تغییر دهید.\n\n```bash\ncp .env.example .env\nnano .env\n```\n\n> برای اطلاعات بیشتر بخش [تنظیمات](#تنظیمات) را مطالعه کنید.\n\nدر انتها, مرزبان را به کمک دستور زیر اجرا کنید.\n\n```bash\npython3 main.py\n```\n\nاجرا با استفاده از systemctl در لینوکس\n```\nsystemctl enable /var/lib/marzban/marzban.service\nsystemctl start marzban\n```\n\nاجرا با nginx\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location ~* /(dashboard|statics|sub|api|docs|redoc|openapi.json) {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\nor\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  marzban.example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location / {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\nبه صورت پیشفرض مرزبان در آدرس `http://localhost:8000/dashboard` اجرا میشود. شما میتوانید با تغییر `UVICORN_HOST` و `UVICORN_PORT`، هاست و پورت را تغییر دهید.\n</details>\n\n# تنظیمات\n\n> متغیر های زیر در فایل ‍`env` یا `.env` استفاده میشوند. شما می توانید با تعریف و تغییر آن ها، تنظیمات مرزبان را تغییر دهید.\n\n|                                                                                                                                                  توضیحات |                                                        متغیر                                                         |\n|---------------------------------------------------------------------------------------------------------------------------------------------------------:| :------------------------------------------------------------------------------------------------------------------: |\n|                                                                                                                                       نام کاربری مدیر کل |                                                    SUDO_USERNAME                                                     |\n|                                                                                                                                         رمز عبور مدیر کل |                                                    SUDO_PASSWORD                                                     |\n|                                           آدرس دیتابیس ([بر اساس مستندات SQLAlchemy](https://docs.sqlalchemy.org/en/20/core/engines.html#database-urls)) |                                               SQLALCHEMY_DATABASE_URL                                                |\n|                                                                                               آدرس هاستی که مرزبان روی آن اجرا میشود (پیشفرض: `0.0.0.0`) |                                                     UVICORN_HOST                                                     |\n|                                                                                                       پورتی که مرزبان روی آن اجرا میشود (پیشفرض: `8000`) |                                                     UVICORN_PORT                                                     |\n|                                                                                                                اجرای مرزبان بر روی یک Unix domain socket |                                                     UVICORN_UDS                                                      |\n|                                                                                                               آدرس گواهی SSL به جهت ایمن کردن پنل مرزبان |                                                 UVICORN_SSL_CERTFILE                                                 |\n|                                                                                                                                      آدرس کلید گواهی SSL |                                                 UVICORN_SSL_KEYFILE                                                  |\n|                                                          نوع گواهینامه مرجع SSL. از «خصوصی» برای آزمایش CA با امضای خود استفاده کنید (پیش‌فرض: `public`) |                                                 UVICORN_SSL_CA_TYPE                                                  |\n|                                                                                                 مسیر فایل json تنظیمات xray (پیشفرض: `xray_config.json`) |                                                      XRAY_JSON                                                       |\n|                                                                                                         مسیر باینری xray (پیشفرض: `/usr/local/bin/xray`) |                                                 XRAY_EXECUTABLE_PATH                                                 |\n|                                                                                                    مسیر asset های xray (پیشفرض: `/usr/local/share/xray`) |                                                   XRAY_ASSETS_PATH                                                   |\n|                                  پیشوند (یا هاست) آدرس های اشتراکی (زمانی کاربرد دارد که نیاز دارید دامنه subscription link ها با دامنه پنل متفاوت باشد) |                                             XRAY_SUBSCRIPTION_URL_PREFIX                                             |\n|                                                                                                         تگ inboundای که به عنوان fallback استفاده میشود. |                                              XRAY_FALLBACKS_INBOUND_TAG                                              |\n|                                                                                 تگ های inbound ای که لازم نیست در کانفیگ های ساخته شده وجود داشته باشند. |                                              XRAY_EXCLUDE_INBOUND_TAGS                                               |\n|                                                                                                                آدرس محل template های شخصی سازی شده کاربر |                                              CUSTOM_TEMPLATES_DIRECTORY                                              |\n|                                                                            تمپلیت مورد استفاده برای تولید کانفیگ های Clash (پیشفرض: `clash/default.yml`) |                                             CLASH_SUBSCRIPTION_TEMPLATE                                              |\n|                                                                                      تمپلیت صفحه اطلاعات اشتراک کاربر (پیشفرض `subscription/index.html`) |                                              SUBSCRIPTION_PAGE_TEMPLATE                                              |\n|                                                                                                              تمپلیت صفحه اول (پیشفرض: `home/index.html`) |                                                  HOME_PAGE_TEMPLATE                                                  |\n|                                                                                        توکن ربات تلگرام (دریافت از [@botfather](https://t.me/botfather)) |                                                  TELEGRAM_API_TOKEN                                                  |\n|                                                                           آیدی عددی ادمین در تلگرام (دریافت از [@userinfobot](https://t.me/userinfobot)) |                                                  TELEGRAM_ADMIN_ID                                                   |\n|                                                                                                                                اجرای ربات از طریق پروکسی |                                                  TELEGRAM_PROXY_URL                                                  |\n|                                                             مدت زمان انقضا توکن دسترسی به پنل مرزبان, `0` به معنای بدون تاریخ انقضا است (پیشفرض: `1440`) |                                           JWT_ACCESS_TOKEN_EXPIRE_MINUTES                                            |\n|                                                                                        فعال سازی داکیومنتیشن به آدرس `/docs` و `/redoc`(پیشفرض: `False`) |                                                         DOCS                                                         |\n|                                                                                                      فعالسازی حالت توسعه (development) (پیشفرض: `False`) |                                                        DEBUG                                                         |\n|                                  آدرس webhook که تغییرات حالت یک کاربر به آن ارسال می‌شوند. اگر این متغیر مقدار داشته باشد، ارسال پیام‌ها انجام می‌شوند. |                                                    WEBHOOK_ADDRESS                                                   |\n|                                                                           متغیری که به عنوان `x-webhook-secret` در header ارسال می‌شود. (پیشفرض: `None`) |                                                    WEBHOOK_SECRET                                                    |\n|                                                              تعداد دفعاتی که برای ارسال یک پیام، در صورت تشخیص خطا در ارسال تلاش دوباره شود (پیشفرض `3`) |                                          NUMBER_OF_RECURRENT_NOTIFICATIONS                                           |\n|                                                                    مدت زمان بین هر ارسال دوباره پیام در صورت تشخیص خطا در ارسال به ثانیه (پیشفرض: `180`) |                                           RECURRENT_NOTIFICATIONS_TIMEOUT                                            |\n|                                                                     هنگام رسیدن مصرف کاربر به چه درصدی پیام اخطار به آدرس وبهوک ارسال شود (پیشفرض: `80`) |                                             NOTIFY_REACHED_USAGE_PERCENT                                             |\n|                                                                           چند روز مانده به انتهای سرویس پیام اخطار به آدرس وبهوک ارسال شود (پیشفرض: `3`) |                                                   NOTIFY_DAYS_LEFT                                                   |\n حذف خودکار کاربران منقضی شده (و بطور اختیاری محدود شده) پس از گذشت این تعداد روز (مقادیر منفی این قابلیت را به طور پیشفرض غیرفعال می کنند. پیشفرض: `-1`) |                                                   USERS_AUTODELETE_DAYS                                                   |\n                                                                                                 تعیین اینکه کاربران محدودشده شامل حذف خودکار بشوند یا نه |                                                   USER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS                                 |\n|                                                           فعال کردن کانفیگ سفارشی JSON برای همه برنامه‌هایی که از آن پشتیبانی می‌کنند (پیش‌فرض: `False`) | USE_CUSTOM_JSON_DEFAULT |\n|                                                                                فعال کردن کانفیگ سفارشی JSON فقط برای برنامه‌ی V2rayNG (پیش‌فرض: `False`) | USE_CUSTOM_JSON_FOR_V2RAYNG |\n|                                                                              فعال کردن کانفیگ سفارشی JSON فقط برای برنامه‌ی Streisand (پیش‌فرض: `False`) | USE_CUSTOM_JSON_FOR_STREISAND |\n|                                                                                 فعال کردن کانفیگ سفارشی JSON فقط برای برنامه‌ی V2rayN (پیش‌فرض: `False`) | USE_CUSTOM_JSON_FOR_V2RAYN |\n\n\n# داکیومنت\n[داکیومنت مرزبان](https://gozargah.github.io/marzban) تمامی آموزش‌های ضروری برای شروع را فراهم می‌کند و در سه زبان فارسی، انگلیسی و روسی در دسترس است. این داکیومنت نیاز به تلاش زیادی دارد تا تمامی جنبه‌های پروژه را به طور کامل پوشش دهد. ما از کمک و همکاری شما برای بهبود آن استقبال و قدردانی می‌کنیم. می‌توانید در این صفحه [گیت‌هاب](https://github.com/Gozargah/gozargah.github.io) مشارکت کنید.\n\n# استفاده از API\nمرزبان به توسعه دهندگانAPI REST ارائه می دهد. برای مشاهده اسناد API در قالب Swagger UI یا ReDoc، متغیر `DOCS=True` را در تنظیمات خود ست کنید و در مرورگر به مسیر `/docs` و `/redoc` بروید.\n\n\n# پشتیبان گیری از مرزبان\nبهتر است همیشه از فایل های مرزبان خود نسخه پشتیبان تهیه کنید تا در صورت خرابی سیستم یا حذف تصادفی اطلاعات از دست نروند. مراحل تهیه نسخه پشتیبان از مرزبان به شرح زیر است:\n\n1. به طور پیش فرض، تمام فایل های مهم مرزبان در `/var/lib/marzban` ذخیره می شوند (در نسخه داکر). کل پوشه `/var/lib/marzban` را در یک مکان پشتیبان مورد نظر خود، مانند هارد دیسک خارجی یا فضای ذخیره سازی ابری کپی کنید.\n2. علاوه بر این، مطمئن شوید که از فایل env خود که حاوی متغیرهای تنظیمات شما است و همچنین فایل پیکربندی Xray خود نسخه پشتیبان تهیه کنید.\n\nخدمات پشتیبان‌گیری مرزبان به طور کارآمد تمام فایل‌های ضروری را فشرده کرده و آن‌ها را به ربات تلگرام مشخص شده شما ارسال می‌کند. این خدمات از پایگاه‌های داده SQLite، MySQL و MariaDB پشتیبانی می‌کند. یکی از ویژگی‌های اصلی آن، خودکار بودن است که به شما اجازه می‌دهد تا پشتیبان‌گیری‌ها را هر ساعت برنامه‌ریزی کنید. محدودیتی در مورد محدودیت‌های آپلود تلگرام برای ربات‌ها وجود ندارد؛ اگر فایل شما بزرگتر از میزان محدودیت تلگرام باشد، به دو یا چند بخش تقسیم شده و ارسال می‌شود. علاوه بر این، شما می‌توانید در هر زمان پشتیبان‌گیری فوری انجام دهید.\n\nنصب آخرین ورژن مرزبان کامند:\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install-script\n```\n\nراه‌اندازی سرویس پشتیبان گیری:\n```bash\nmarzban backup-service\n```\n\nپشتیبان گیری فوری:\n```bash\nmarzban backup\n```\n\nبا انجام این مراحل، می توانید اطمینان حاصل کنید که از تمام فایل ها و داده های مرزبان خود یک نسخه پشتیبان تهیه کرده اید. به خاطر داشته باشید که نسخه های پشتیبان خود را به طور مرتب به روز کنید تا آنها را به روز نگه دارید.\n\n\n# ربات تلگرام\nمرزبان دارای یک ربات تلگرام داخلی است که می تواند مدیریت سرور، ایجاد و حذف کاربر و ارسال نوتیفیکیشن را انجام دهد. این ربات را می توان با انجام چند مرحله ساده به راحتی فعال کرد\n\nبرای فعال کردن ربات تلگرام:\n\n1. در تنظیمات، متغیر`TELEGRAM_API_TOKEN` را به API TOKEN ربات تلگرام خود تنظیم کنید.\n2. همینطور، متغیر`TELEGRAM_ADMIN_ID` را به شناسه عددی حساب تلگرام خود تنظیم کنید. شما می‌توانید شناسه خود را از [@userinfobot](https://t.me/userinfobot) دریافت کنید.\n\n\n# رابط خط فرمان (CLI) مرزبان\nمرزبان دارای یک رابط خط فرمان (Command Line Interface / CLI) داخلی است که به مدیران اجازه می دهد با مرزبان ارتباط مستقیم داشته باشند.\n\nاگر از Docker برای مرزبان استفاده می کنید، بهتر است از دستور های `docker exec` یا `docker-compose exec` استفاده کنید تا به پوسته (shell) تعاملی کانتینر مرزبان دسترسی پیدا کنید.\n\nبرای مثال، به پوشه ی `docker-compose.yml` مرزبان بروید و دستور زیر را اجرا کنید:\n\n```bash\n$ sudo docker-compose exec -it marzban bash\n```\n\nرابط خط فرمان (CLI) مرزبان از طریق دستور `marzban-cli` هرکجا در دسترس خواهد بود!\n\nبرای کسب اطلاعات بیشتر می توانید [مستندات CLI مرزبان](./cli/README.md) را مطالعه کنید.\n\n\n# ارسال اعلان‌ها به آدرس وبهوک\nشما می‌توانید آدرسی را برای مرزبان فراهم کنید تا تغییرات کاربران را به صورت اعلان برای شما ارسال کند.\n\nاعلان‌ها به صورت یک درخواست POST به آدرسی که در `WEBHOOK_ADDRESS` فراهم شده به همراه مقدار تعیین شده در `WEBHOOK_SECRET` به عنوان `x-webhook-secret` در header درخواست ارسال می‌شوند.\n\nنمونه‌ای از درخواست ارسال شده توسط مرزبان:\n\n```\nHeaders:\nHost: 0.0.0.0:9000\nUser-Agent: python-requests/2.28.1\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nx-webhook-secret: something-very-very-secret\nContent-Length: 107\nContent-Type: application/json\n\n\n\nBody:\n{\"username\": \"marzban_test_user\", \"action\": \"user_updated\", \"enqueued_at\": 1680506457.636369, \"tries\": 0}\n```\n\nانواع مختلف actionهایی که مرزبان ارسال می‌کند: `user_created`, `user_updated`, `user_deleted`, `user_limited`, `user_expired`, `user_disabled`, `user_enabled`\n\n\n# کمک مالی\nاگر مرزبان را برای شما مفید بوده و می‌خواهید از توسعه آن حمایت کنید، می‌توانید در یکی از طریق یکی از شبکه های کریپتو زیر کمک مالی کنید:\n\n- شبکه TRON (TRX): `TX8kJoDcowQPBFTYHAJR36GyoUKP1Xwzkb`\n- شبکه ETH، BNB، MATIC: `0xFdc9ad32454FA4fc4733270FCc12ddBFb68b83F7`\n- شبکه بیت کوین: `bc1qpys2nefgsjjgae3g3gqy9crsv3h3rm96tlkz0v`\n- شبکه Dogecoin: `DJAocBAu8y6LwhDKUktLAyzV8xyoFeHH6R`\n- شبکه TON: `EQAVf-7hAXHlF-jmrKE44oBwN7HGQFVBLAtrOsev5K4qR4P8`\n\n\nاز حمایت شما متشکرم!\n\n\n# لایسنس\n\nتوسعه یافته شده در [ناشناس!] و منتشر شده تحت لایسنس [AGPL-3.0](./LICENSE).\n\n\n# مشارکت در توسعه\nاین ❤️‍🔥 تقدیم به همه‌ی کسایی که در توسعه مرزبان مشارکت می‌کنند! اگر می‌خواهید مشارکت داشته باشید، لطفاً [دستورالعمل‌های مشارکت](CONTRIBUTING.md) ما را بررسی کنید و در صورت تمایل Pull Request ارسال کنید یا یک Issue  باز کنید. همچنین از شما برای پیوستن به گروه [تلگرام](https://t.me/gozargah_marzban) ما برای حمایت یا کمک به راهنمایی استقبال می کنیم.\n\nلطفا اگر امکانش رو دارید، با بررسی [لیست کار ها](https://github.com/gozargah/marzban/issues) به ما در بهبود مرزبان کمک کنید. کمک های شما با آغوش باز پذیرفته میشه.\n\n<p align=\"center\">\nبا تشکر از همه همکارانی که به بهبود مرزبان کمک کردند:\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/Gozargah/Marzban/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Gozargah/Marzban\" />\n</a>\n</p>\n<p align=\"center\">\n  ساخته شده با <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://contrib.rocks\">contrib.rocks</a>\n</p>\n\n"
        },
        {
          "name": "README-ru.md",
          "type": "blob",
          "size": 30.853515625,
          "content": "<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-dark.png\">\n      <img width=\"160\" height=\"160\" src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-light.png\">\n    </picture>\n  </a>\n</p>\n\n<h1 align=\"center\"/>Marzban</h1>\n\n<p align=\"center\">\n    Унифицированное решение с графическим интерфейсом, устойчивое к цензуре, на базе <a href=\"https://github.com/XTLS/Xray-core\">Xray</a>\n</p>\n\n<br/>\n<p align=\"center\">\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/gozargah/marzban/build.yml?style=flat-square\" />\n    </a>\n    <a href=\"https://hub.docker.com/r/gozargah/marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/docker/pulls/gozargah/marzban?style=flat-square&logo=docker\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/license/gozargah/marzban?style=flat-square\" />\n    </a>\n    <a href=\"https://t.me/gozargah_marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/badge/telegram-group-blue?style=flat-square&logo=telegram\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/badge/twitter-commiunity-blue?style=flat-square&logo=twitter\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/stars/gozargah/marzban?style=social\" />\n    </a>\n</p>\n\n<p align=\"center\">\n <a href=\"./README.md\">\n English\n </a>\n /\n <a href=\"./README-fa.md\">\n فارسی\n </a>\n  /\n  <a href=\"./README-zh-cn.md\">\n 简体中文\n </a>\n   /\n  <a href=\"./README-ru.md\">\n Русский\n </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\" >\n    <img src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/preview.png\" alt=\"Marzban screenshots\" width=\"600\" height=\"auto\">\n  </a>\n</p>\n\n## Оглавление\n\n- [Введение](#введение)\n  - [Почему Marzban?](#почему-marzban)\n    - [Функции](#функции)\n- [Руководство по установке](#руководство-по-установке)\n- [Конфигурация](#конфигурация)\n- [документация](#документация)\n- [API](#api)\n- [Backup](#backup)\n- [Telegram Bot](#telegram-bot)\n- [Marzban CLI](#marzban-cli)\n- [Marzban Node](#marzban-node)\n- [Webhook уведомления](#webhook-уведомления)\n- [Поддержка](#поддержка)\n- [Лицензия](#лицензия)\n- [Участники](#участники)\n\n# Введение\n\nMarzban (Персидское слово \"Пограничник\" - произносится /mærz'ban/) — это инструмент управления прокси-серверами, который предоставляет простой и удобный пользовательский интерфейс для управления сотнями учетных записей прокси на базе [Xray-core](https://github.com/XTLS/Xray-core) и созданный с использованием Python и ReactJS.\n\n## Почему Marzban?\n\nMarzban удобен в использовании, многофункционален и надежен. Он позволяет создавать различные прокси для пользователей без сложной настройки. С помощью встроенного веб-интерфейса можно контролировать, изменять и ограничивать пользователей.\n\n### Функции\n\n- Готовый **Web UI**\n- **REST API** бэкэнд\n- Поддержка [**множества узлов**](#marzban-node) (для распределения инфраструктуры и масштабируемости)\n- Поддержка протоколов **Vmess**, **VLESS**, **Trojan** и **Shadowsocks**\n- Возможность активации **нескольких протоколов** для каждого пользователя\n- **Несколько пользователей** на одном inbound\n- **Несколько inbound** на **одном порту** (поддержка fallbacks)\n- Ограничения на основе **количества трафика** и **срока действия**\n- Ограничение трафика по **периодам** (например выдавать трафик на день, неделю и т. д.)\n- Поддержка **ссылок-подписок** совместимых с **V2ray** _(такие как V2RayNG, SingBox, Nekoray, и др.)_, **Clash** и **ClashMeta**\n- Автоматическая генерация **Ссылок** и **QRcode** \n- Мониторинг ресурсов сервера и **использования трафика**\n- Настраиваемые конфигурации xray\n- Поддержка **TLS** и **REALITY** \n- Встроенный **Telegram Bot**\n- Встроенный **Command Line Interface (CLI)**\n- **Несколько языков**\n- Поддержка **Нескольких администраторов** (WIP)\n\n# Руководство по установке\n\nУстановка Marzban с базой данных SQLite (по умолчанию):\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install\n```\n\nУстановка Marzban с базой данных MySQL:\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mysql\n```\n\nУстановка Marzban с базой данных MariaDB:\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mariadb\n```\n\nКогда установка будет завершена:\n- Вы увидите логи, которые можно остановить, нажав `Ctrl+C` или закрыв терминал.\n- Файлы Marzban будут размещены по адресу `/opt/marzban`.\n- Файл конфигурации будет размещен по адресу `/opt/marzban/.env` (см. [Конфигурация](#конфигурация)).\n- Файлы с данными будут размещены по адресу `/var/lib/marzban`.\n- По соображениям безопасности, панель управления Marzban недоступна через IP-адрес. Поэтому вам необходимо [получить SSL-сертификат](https://gozargah.github.io/marzban/ru/examples/issue-ssl-certificate) и получить доступ к панели управления Marzban, открыв веб-браузер и перейдя по адресу `https://YOUR_DOMAIN:8000/dashboard/` (замените YOUR_DOMAIN на ваш фактический домен).\n- Вы также можете использовать перенаправление портов SSH для локального доступа к панели управления Marzban без домена. Замените `user@serverip` на ваше фактическое имя пользователя SSH и IP-адрес сервера и выполните следующую команду:\n\n```bash\nssh -L 8000:localhost:8000 user@serverip\n```\n\nНаконец, введите следующую ссылку в ваш браузер, чтобы получить доступ к панели управления Marzban:\n\nhttp://localhost:8000/dashboard/\n\nВы потеряете доступ к панели управления, как только закроете терминал SSH. Поэтому этот метод рекомендуется использовать только для тестирования.\n\nДалее, Вам нужно создать главного администратора для входа в панель управления Marzban, выполнив следующую команду: \n\n```bash\nmarzban cli admin create --sudo\n```\n\nГотово! Теперь Вы можете войти, используя данные своей учетной записи.\n\nДля того, чтобы увидеть справочное сообщение от скрипта Marzban, выполните команду:\n\n```bash\nmarzban --help\n```\n\nЕсли Вы хотите запустить проект, используя его исходный код, обратитесь к разделу ниже\n<details markdown=\"1\">\n<summary><h3>Ручная установка</h3></summary>\n\nУстановите xray на Ваш сервер.\n\nВы можете сделать это, используя [Xray-install](https://github.com/XTLS/Xray-install):\n\n```bash\nbash -c \"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\" @ install\n```\n\nКлонируйте этот проект и установите зависимости (Вам нужен Python >= 3.8):\n\n```bash\ngit clone https://github.com/Gozargah/Marzban.git\ncd Marzban\nwget -qO- https://bootstrap.pypa.io/get-pip.py | python3 -\npython3 -m pip install -r requirements.txt\n```\n\nВ качестве альтернативы для создания виртуальной среды можно использовать [Python Virtualenv](https://pypi.org/project/virtualenv/).\n\nЗатем выполните следующую команду для запуска скрипта миграции базы данных:\n\n```bash\nalembic upgrade head\n```\n\nЕсли Вы хотите использовать `marzban-cli`, необходимо связать его с файлом в `$PATH`, сделать его исполняемым и установить:\n\n```bash\nsudo ln -s $(pwd)/marzban-cli.py /usr/bin/marzban-cli\nsudo chmod +x /usr/bin/marzban-cli\nmarzban-cli completion install\n```\n\nТеперь настало время настройки.\n\nСоздайте копию файла `.env.example`, посмотрите его и отредактируйте с помощью текстового редактора,например `nano`.\n\nВозможно, вам захочется изменить учетные данные администратора.\n\n```bash\ncp .env.example .env\nnano .env\n```\n\n> Проверьте раздел [Конфигурации](#конфигурация) для получения большей информации.\n\nВ завершение запустите приложение с помощью следующей команды:\n\n```bash\npython3 main.py\n```\n\nДля запуска с помощью linux systemctl (скопируйте файл marzban.service в `/var/lib/marzban/marzban.service`):\n\n```\nsystemctl enable /var/lib/marzban/marzban.service\nsystemctl start marzban\n```\n\nДля использования с nginx:\n\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location ~* /(dashboard|statics|sub|api|docs|redoc|openapi.json) {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n    # xray-core ws-path: /\n    # client ws-path: /marzban/me/2087\n    #\n    # All traffic is proxed through port 443, and send to the xray port(2087, 2088 etc.).\n    # The '/marzban' in location regex path can changed any characters by yourself.\n    #\n    # /${path}/${username}/${xray-port}\n    location ~* /marzban/.+/(.+)$ {\n        proxy_redirect off;\n        proxy_pass http://127.0.0.1:$1/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\nили:\n\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  marzban.example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location / {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\nПо умолчанию приложение будет запускаться на `http://localhost:8000/dashboard`. Вы можете настроить его, изменив переменные окружения `UVICORN_HOST` и `UVICORN_PORT`.\n</details>\n\n# Конфигурация\n\n> Ниже приведены настройки, которые можно задать с помощью переменных окружения поместив их в файл `.env`.\n\n| Перменная                                | Описание                                                                                                                       |\n| ---------------------------------------- |--------------------------------------------------------------------------------------------------------------------------------|\n| SUDO_USERNAME                            | Имя пользователя главного администратора                                                                                       |\n| SUDO_PASSWORD                            | Пароль главного администратора                                                                                                 |\n| SQLALCHEMY_DATABASE_URL                  | Путь к файлу БД ([SQLAlchemy's docs](https://docs.sqlalchemy.org/en/20/core/engines.html#database-urls))                       |\n| UVICORN_HOST                             | Привязка приложения к хосту (по умолчанию: `0.0.0.0`)                                                                          |\n| UVICORN_PORT                             | Привязка приложения к порту (по умолчанию: `8000`)                                                                             |\n| UVICORN_UDS                              | Привязка приложения к UNIX domain socket                                                                                       |\n| UVICORN_SSL_CERTFILE                     | Адрес файла сертификата SSL                                                                                                    |\n| UVICORN_SSL_KEYFILE                      | Адрес файла ключа SSL                                                                                                          |\n| UVICORN_SSL_CA_TYPE                      | Тип центра сертификации ключа SSL. Используйте `private` для тестирования самоподписанных CA (по умолчанию: `public`)          |\n| XRAY_JSON                                | Адрес файла JSON конфигурации Xray. (по умолчанию: `xray_config.json`)                                                         |\n| XRAY_EXECUTABLE_PATH                     | Путь к бинарникам Xray  (по умолчанию: `/usr/local/bin/xray`)                                                                  |\n| XRAY_ASSETS_PATH                         | Путь к папке с рессурсными файлами для Xray (файлы geoip.dat и geosite.dat) (по умолчанию: `/usr/local/share/xray`)            |\n| XRAY_SUBSCRIPTION_URL_PREFIX             | Префикс адреса подписки                                                                                                        |\n| XRAY_FALLBACKS_INBOUND_TAG               | Если вы используете входящее соединение с несколькими резервными вариантами, укажите здесь его тег                             |\n| XRAY_EXCLUDE_INBOUND_TAGS                | Теги входящих соединений, которые не требуют управления и не должны быть включены в список прокси                              |\n| CUSTOM_TEMPLATES_DIRECTORY               | Путь к папке с пользовательскими шаблонами (по умолчанию: `app/templates`)                                                     |\n| CLASH_SUBSCRIPTION_TEMPLATE              | Шаблон для создания конфигурации Clash (по умолчанию: `clash/default.yml`)                                                     |\n| SUBSCRIPTION_PAGE_TEMPLATE               | Шаблон для страницы подписки (по умолчанию: `subscription/index.html`)                                                         |\n| HOME_PAGE_TEMPLATE                       | Шаблон главной страницы (по умолчанию: `home/index.html`)                                                                      |\n| TELEGRAM_API_TOKEN                       | Токен Telegram-бота  (полученный от [@botfather](https://t.me/botfather))                                                      |\n| TELEGRAM_ADMIN_ID                        | Числовой идентификатор администратора в Telegram (полученный от [@userinfobot](https://t.me/userinfobot))                      |\n| TELEGRAM_PROXY_URL                       | URL прокси для запуска Telegram-бота (если серверы Telegram заблокированы на вашем сервере).                                   |\n| JWT_ACCESS_TOKEN_EXPIRE_MINUTES          | Время истечения срока действия доступного токена в минутах, `0` означает \"без истечения срока действия\" (по умолчанию: `1440`) |\n| DOCS                                     | Активация документации API по адресам `/docs` и `/redoc`. (по умолчанию: `False`)                                              |\n| DEBUG                                    | Активация режима разработки (development) (по умолчанию: `False`)                                                              |\n| WEBHOOK_ADDRESS                          | Адрес Webhook для отправки уведомлений. Уведомления Webhook будут отправляться, если это значение было установлено             |\n| WEBHOOK_SECRET                           | Webhook secret будет передаваться с каждым запросом в виде `x-webhook-secret` в заголовке (по умолчанию: `None`)               |\n| NUMBER_OF_RECURRENT_NOTIFICATIONS        | Сколько раз повторять попытку отправки уведомления при обнаружении ошибки  (по умолчанию: `3`)                                 |\n| RECURRENT_NOTIFICATIONS_TIMEOUT          | Тайм-аут между каждым повторным запросом при обнаружении ошибки в секундах (по умолчанию: `180`)                               |\n| NOTIFY_REACHED_USAGE_PERCENT             | При каком проценте использования отправлять предупреждение (по умолчанию: `80`)                                                |\n| NOTIFY_DAYS_LEFT                         | Когда отправлять предупреждение об истечении срока действия (по умолчанию: `3`)                                                |\n| USERS_AUTODELETE_DAYS                    | Delete expired (and optionally limited users) after this many days (Negative values disable this feature, default: `-1`)       |\n| USER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS | Weather to include limited accounts in the auto-delete feature (default: `False`)                                              |\n| USE_CUSTOM_JSON_DEFAULT                  | Enable custom JSON config for ALL supported clients (default: `False`)                                                         |\n| USE_CUSTOM_JSON_FOR_V2RAYNG              | Enable custom JSON config only for V2rayNG (default: `False`)                                                                  |\n| USE_CUSTOM_JSON_FOR_STREISAND            | Enable custom JSON config only for Streisand (default: `False`)                                                                |\n| USE_CUSTOM_JSON_FOR_V2RAYN               | Enable custom JSON config only for V2rayN (default: `False`)                                                                   |\n\n# документация\n\n[Документация Marzban](https://gozargah.github.io/marzban/ru/) предоставляет все необходимые руководства для начала работы и доступна на трех языках: фарси, английском и русском. Для полного охвата всех аспектов проекта требуется значительное количество усилий. Мы приветствуем и ценим ваш вклад в улучшение документации. Вы можете внести свой вклад в этот [репозиторий на GitHub](https://github.com/Gozargah/gozargah.github.io).\n\n# API\n\nMarzban предоставляет REST API, позволяющий разработчикам программно взаимодействовать с сервисами Marzban. Для просмотра документации по API в Swagger UI или ReDoc установите  переменную `DOCS=True` и перейдите по ссылкам `/docs` и `/redoc`.\n\n# Backup\n\nВсегда полезно регулярно создавать резервные копии файлов Marzban, чтобы предотвратить потерю данных в случае системных сбоев или случайного удаления. Ниже приведены шаги для создания резервной копии Marzban:\n\n1. По умолчанию все важные файлы Marzban сохраняются в папке `/var/lib/marzban` (в версиях Docker). Скопируйте весь каталог `/var/lib/marzban` в выбранное вами место резервного копирования, например на внешний жесткий диск или в облачное хранилище.\n2. Кроме того, не забудьте сделать резервную копию файла env, содержащего переменные конфигурации, а также файла конфигурации Xray. Если вы устанавливали Marzban с помощью marzban-scripts (рекомендуемый подход к установке), то env и другие конфигурации должны находиться в каталоге `/opt/marzban/`.\n\nВыполнив эти действия, вы сможете обеспечить резервное копирование всех файлов и данных Marzban, а также переменных конфигурации и конфигурации Xray на случай, если в будущем потребуется их восстановить. Не забывайте регулярно обновлять резервные копии, чтобы поддерживать их в актуальном состоянии.\n\n# Telegram Bot\n\nMarzban поставляется с встроенным ботом Telegram, который может управлять сервером, создавать и удалять пользователей, а также отправлять уведомления. Этот бот можно легко включить, выполнив несколько простых шагов, и он предоставляет удобный способ взаимодействия с Marzban без необходимости каждый раз заходить на сервер.\n\nЧтобы включить Telegram-бота, выполните следующие действия:\n\n1. установите `TELEGRAM_API_TOKEN` в качестве API-токена вашего бота.\n2. установите `TELEGRAM_ADMIN_ID` в качестве цифрового ID вашего Telegram-аккаунта, который вы можете получить от [@userinfobot](https://t.me/userinfobot)\n\nСервис резервного копирования Marzban эффективно архивирует все необходимые файлы и отправляет их вашему указанному Telegram-боту. Он поддерживает базы данных SQLite, MySQL и MariaDB. Одной из ключевых особенностей является автоматизация, позволяющая настроить расписание резервного копирования, например, каждый час. При этом ограничений на размер файлов для загрузки в Telegram через бота нет: если файл превышает лимит, он будет автоматически разделен и отправлен частями. Также можно запустить резервное копирование вручную в любой момент.\n\nУстановка последней версии Marzban:\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install-script\n```\n\nНастройка сервиса резервного копирования:\n\n```bash\nmarzban backup-service\n```\n\nМгновенное резервное копирование:\n\n```bash\nmarzban backup\n```\n\n# Marzban CLI\n\nMarzban поставляется с встроенным CLI под названием `marzban-cli`, который позволяет администраторам напрямую взаимодействовать с ним.\n\nЕсли вы установили Marzban с помощью скрипта установки, то доступ к командам cli можно получить, выполнив команду:\n\n```bash\nmarzban cli [OPTIONS] COMMAND [ARGS]...\n```\n\nДля получения дополнительной информации можно ознакомиться с [документацией по Marzban CLI](./cli/README.md).\n\n# Marzban Node\n\nПроект Marzban представляет [Marzban-node](https://github.com/gozargah/marzban-node), который помогает Вам в распределении инфраструктуры. С помощью Marzban-node можно распределить инфраструктуру по нескольким узлам, получив такие преимущества, как высокая доступность, масштабируемость и гибкость. Marzban-node позволяет пользователям подключаться к различным серверам, предоставляя им гибкость в выборе, а не ограничиваться только одним сервером.\nБолее подробная информация и инструкции по установке приведены в [официальной документации Marzban-node](https://github.com/gozargah/marzban-node).\n\n\n# Webhook уведомления\n\nВы можете задать адрес webhook, и Marzban будет отправлять уведомления на этот адрес.\n\nЗапросы будут отправляться в виде POST-запроса на адрес, указанный в `WEBHOOK_ADDRESS`, с `WEBHOOK_SECRET` в качестве `x-webhook-secret` в заголовках.\n\nПример запроса, отправленного Marzban:\n\n```\nHeaders:\nHost: 0.0.0.0:9000\nUser-Agent: python-requests/2.28.1\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nx-webhook-secret: something-very-very-secret\nContent-Length: 107\nContent-Type: application/json\n\n\n\nBody:\n{\"username\": \"marzban_test_user\", \"action\": \"user_updated\", \"enqueued_at\": 1680506457.636369, \"tries\": 0}\n```\n\nРазличные типы действий: `user_created`, `user_updated`, `user_deleted`, `user_limited`, `user_expired`, `user_disabled`, `user_enabled`\n\n# Поддержка\n\nЕсли вы нашли Marzban полезным и хотели бы поддержать его развитие, вы можете сделать пожертвование в одной из следующих криптовалютных сетей:\n\n- TRON network (TRC20): `TX8kJoDcowQPBFTYHAJR36GyoUKP1Xwzkb`\n- ETH, BNB, MATIC network (ERC20, BEP20): `0xFdc9ad32454FA4fc4733270FCc12ddBFb68b83F7`\n- Bitcoin network: `bc1qpys2nefgsjjgae3g3gqy9crsv3h3rm96tlkz0v`\n- Dogecoin network: `DJAocBAu8y6LwhDKUktLAyzV8xyoFeHH6R`\n- TON network: `EQAVf-7hAXHlF-jmrKE44oBwN7HGQFVBLAtrOsev5K4qR4P8`\n\nСпасибо за поддержку!\n\n# Лицензия\n\nСделано в [Unknown!] и опубликовано под [AGPL-3.0](./LICENSE).\n\n# Участники\n\nМы ❤️‍🔥 участников проекта! Если вы хотите внести свой вклад, пожалуйста, ознакомьтесь с нашим [Contributing Guidelines](CONTRIBUTING.md) и не стесняйтесь отправлять запросы на исправление ошибок или сообщить о проблеме. Мы также приглашаем вас присоединиться к нашей группе [Telegram](https://t.me/gozargah_marzban) для получения поддержки.\n\nПроверьте [open issues](https://github.com/gozargah/marzban/issues), чтобы помочь развитию этого проекта.\n\n<p align=\"center\">\nСпасибо всем участникам, благодаря которым Marzban становится лучше:\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/Gozargah/Marzban/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Gozargah/Marzban\" />\n</a>\n</p>\n<p align=\"center\">\n  Made with <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://contrib.rocks\">contrib.rocks</a>\n</p>\n"
        },
        {
          "name": "README-zh-cn.md",
          "type": "blob",
          "size": 19.3818359375,
          "content": "<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-dark.png\">\n      <img width=\"160\" height=\"160\" src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-light.png\">\n    </picture>\n  </a>\n</p>\n\n<h1 align=\"center\"/>Marzban</h1>\n\n<p align=\"center\">\n    Unified GUI Censorship Resistant Solution Powered by <a href=\"https://github.com/XTLS/Xray-core\">Xray</a>\n</p>\n\n<br/>\n<p align=\"center\">\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/gozargah/marzban/build.yml?style=flat-square\" />\n    </a>\n    <a href=\"https://hub.docker.com/r/gozargah/marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/docker/pulls/gozargah/marzban?style=flat-square&logo=docker\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/license/gozargah/marzban?style=flat-square\" />\n    </a>\n    <a href=\"https://t.me/gozargah_marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/badge/telegram-group-blue?style=flat-square&logo=telegram\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/badge/twitter-commiunity-blue?style=flat-square&logo=twitter\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/stars/gozargah/marzban?style=social\" />\n    </a>\n</p>\n\n<p align=\"center\">\n\t<a href=\"./README.md\">\n\tEnglish\n\t</a>\n\t/\n\t<a href=\"./README-fa.md\">\n\tفارسی\n\t</a>\n    /\n  <a href=\"./README-zh-cn.md\">\n\t简体中文\n\t</a>\n   /\n  <a href=\"./README-ru.md\">\n Русский\n </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\" >\n    <img src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/preview.png\" alt=\"Marzban screenshots\" width=\"600\" height=\"auto\">\n  </a>\n</p>\n\n\n## 目录\n- [概览](#概览)\n  - [为什么要使用 Marzban?](#为什么要使用-marzban)\n    - [特性](#特性)\n- [安装指南](#安装指南)\n- [配置](#配置)\n- [文档](#文档)\n- [如何使用 API](#如何使用-api)\n- [如何备份 Marzban](#如何备份-marzban)\n- [Telegram bot](#telegram-bot)\n- [捐赠](#捐赠)\n- [许可](#许可)\n- [贡献者](#贡献者)\n\n\n# 概览\n\nMarzban（Marzban一词源自波斯语，意为“边境警卫”，发音为 /mærz'ban/）是一个代理管理工具，提供简单易用的用户界面，可管理数百个代理账户，由 [Xray-core](https://github.com/XTLS/Xray-core) 提供支持，使用 Python 和 Reactjs 构建。\n\n\n\n## 为什么要使用 Marzban?\n\nMarzban 是一个用户友好、功能丰富且可靠的工具。它让您可以为用户创建不同的代理，无需进行任何复杂的配置。通过其内置的 Web 界面，您可以监视、修改和限制用户。\n\n### 特性\n\n- 内置 **Web 界面**\n- 完全支持 **REST API** 的后端\n- 支持 **Vmess**、**VLESS**、**Trojan** 和 **Shadowsocks** 协议\n- 单用户的**多协议**支持\n- 单入站的**多用户**支持\n- 单端口的**多入站**支持（使用 fallbacks）\n- **流量**和**过期日期**限制\n- 周期性的流量限制（例如每天、每周等）\n- 兼容 **V2ray** 的**订阅链接**（例如 V2RayNG、SingBox、Nekoray 等）和 **Clash**\n- 自动化的**分享链接**和**二维码**生成器\n- 系统监控和**流量统计**\n- 可自定义的 xray 配置\n- **TLS** 支持\n- 集成的 **Telegram Bot**\n- **多管理员**支持（WIP）\n\n\n# 安装指南\n运行以下命令以使用 SQLite 数据库安装 Marzban。\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install\n```\n\n运行以下命令以使用 MySQL 数据库安装 Marzban。\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mysql\n```\n\n运行以下命令以使用 MariaDB 数据库安装 Marzban。\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mariadb\n```\n\nOnce the installation is complete:\n\n- You will see the logs that you can stop watching them by closing the terminal or pressing `Ctrl+C`\n- The Marzban files will be located at `/opt/marzban`\n- The configuration file can be found at `/opt/marzban/.env` (refer to [configurations](#configuration) section to see variables)\n- The data files will be placed at `/usr/lib/marzban`\n- For security reasons, the Marzban dashboard is not accessible via IP address. Therefore, you must [obtain SSL certificate](https://gozargah.github.io/marzban/en/examples/issue-ssl-certificate) and access your Marzban dashboard by opening a web browser and navigating to `https://YOUR_DOMAIN:8000/dashboard/` (replace YOUR_DOMAIN with your actual domain)\n- You can also use SSH port forwarding to access the Marzban dashboard locally without a domain. Replace `user@serverip` with your actual SSH username and server IP and Run the command below:\n\n```bash\nssh -L 8000:localhost:8000 user@serverip\n```\n\nFinally, you can enter the following link in your browser to access your Marzban dashboard:\n\nhttp://localhost:8000/dashboard/\n\nYou will lose access to the dashboard as soon as you close the SSH terminal. Therefore, this method is recommended only for testing purposes.\n\nNext, you need to create a sudo admin for logging into the Marzban dashboard by the following command\n\n```bash\nmarzban cli admin create --sudo\n```\n\nThat's it! You can login to your dashboard using these credentials\n\nTo see the help message of the Marzban script, run the following command\n\n```bash\nmarzban --help\n```\n\nIf you are eager to run the project using the source code, check the section below\n<details markdown=\"1\">\n<summary><h3>手动安装（高级）</h3></summary>\n\n在您的机器上安装 xray\n\n您可以使用 [Xray-install](https://github.com/XTLS/Xray-install) 脚本进行安装：\n\n```bash\nbash -c \"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\" @ install\n```\n\n克隆项目并安装依赖项。\n\n您需要 Python>=3.8 版本。\n\n```bash\ngit clone https://github.com/Gozargah/Marzban.git\ncd Marzban\nwget -qO- https://bootstrap.pypa.io/get-pip.py | python3 -\npython3 -m pip install -r requirements.txt\n```\n\n另外，为了拥有一个隔离的环境，您可以使用 [Python Virtualenv](https://pypi.org/project/virtualenv/)。\n\n然后运行以下命令运行数据库迁移脚本：\n\n```bash\nalembic upgrade head\n```\n\n现在开始配置：\n\n复制 `.env.example` 文件，查看并使用文本编辑器（如`nano`）进行编辑。\n\n您可能想要修改管理员凭据。\n\n```bash\ncp .env.example .env\nnano .env\n```\n\n> 请查看[配置](#配置)部分以获取更多信息。\n\n最终，使用以下命令启动应用程序：\n\n```bash\npython3 main.py\n```\n\n也可使用 linux systemctl 启动：\n```\nsystemctl enable /var/lib/marzban/marzban.service\nsystemctl start marzban\n```\n\n配合 nginx 使用：\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location ~* /(dashboard|statics|sub|api|docs|redoc|openapi.json) {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n    # xray-core ws-path: /\n    # client ws-path: /marzban/me/2087\n    #\n    # 所有流量通过 443 端口进行代理，然后分发至真正的 xray 端口（2087、2088 等等）。\n    # 路径中的 “/marzban” 可以改为任意合法 URL 字符.\n    #\n    # /${path}/${username}/${xray-port}\n    location ~* /marzban/.+/(.+)$ {\n        proxy_redirect off;\n        proxy_pass http://127.0.0.1:$1/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n或\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  marzban.example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location / {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\n默认情况下，应用将在 `http://localhost:8000/dashboard` 上运行。您可以通过更改 `UVICORN_HOST` 和 `UVICORN_PORT` 环境变量来进行配置。\n</details>\n\n# 配置\n\n> 您可以使用环境变量或将其放置在 `env` 或 `.env` 文件中来设置以下设置。\n\n| 变量                                     | 描述                                                                                                                      |\n| ---------------------------------------- |-------------------------------------------------------------------------------------------------------------------------|\n| SUDO_USERNAME                            | 管理员用户名（默认: admin）                                                                                                       |\n| SUDO_PASSWORD                            | 管理员密码（默认: admin）                                                                                                        |\n| SQLALCHEMY_DATABASE_URL                  | 数据库文档（[SQLAlchemy's docs](https://docs.sqlalchemy.org/en/20/core/engines.html#database-urls)）                           |\n| UVICORN_HOST                             | 绑定应用程序到此主机（默认为 `0.0.0.0`）                                                                                               |\n| UVICORN_PORT                             | 绑定应用程序到此端口（默认为 `8000`）                                                                                                  |\n| UVICORN_UDS                              | 将应用程序绑定到一个 UNIX 域套接字                                                                                                    |\n| UVICORN_SSL_CERTFILE                     | SSL 证书文件路径                                                                                                              |\n| UVICORN_SSL_KEYFILE                      | SSL 密钥文件路径                                                                                                              |\n| UVICORN_SSL_CA_TYPE                      | 授权 SSL 证书的类型。使用“private”来测试自签名 CA（默认值：`public`）                                                                          |\n| XRAY_JSON                                | Xray 的 json 配置文件路径（默认: `xray_config.json`）                                                                              |\n| XRAY_EXECUTABLE_PATH                     | Xray 的执行程序路径: `/usr/local/bin/xray`）                                                                                    |\n| XRAY_ASSETS_PATH                         | Xray 的资源目录: `/usr/local/share/xray`）                                                                                    |\n| XRAY_SUBSCRIPTION_URL_PREFIX             | 订阅URL的前缀                                                                                                                |\n| XRAY_FALLBACKS_INBOUND_TAG               | 包含 fallbacks 的入站标记, 在您需要使用 fallbacks 配置此项                                                                               |\n| XRAY_EXCLUDE_INBOUND_TAGS                | 不需要此应用程序管理或在链接中包含的入站标记                                                                                                  |\n| CLASH_SUBSCRIPTION_TEMPLATE              | 将用于生成冲突配置的模板（默认值：`clash/default.yml`）                                                                                   |\n| SUBSCRIPTION_PAGE_TEMPLATE               | 用于生成订阅信息页面的模板（默认：`subscription/index.html`）                                                                             |\n| HOME_PAGE_TEMPLATE                       | 诱饵页面模板（默认：`home/index.html`）                                                                                            |\n| TELEGRAM_API_TOKEN                       | Telegram bot API 令牌（可以从 [@botfather](https://t.me/botfather) 获取）                                                        |\n| TELEGRAM_ADMIN_ID                        | 管理员的 Telegram ID（可以使用 [@userinfobot](https://t.me/userinfobot) 查找您的 ID）                                                 |\n| TELEGRAM_PROXY_URL                       | 在代理下运行 Telegram bot。                                                                                                    |\n| JWT_ACCESS_TOKEN_EXPIRE_MINUTES          | Access Tokens 的过期时间，以分钟为单位，`0` 表示无限期（默认为 `1440` 分钟）                                                                     |\n| DOCS                                     | API 文档是否应该在 `/docs` 和 `/redoc` 上提供（默认为 `False`                                                                          |\n| DEBUG                                    | Debug mode for development (default: `False`)                                                                           |\n| WEBHOOK_ADDRESS                          | Webhook address to send notifications to. Webhook notifications will be sent if this value was set.                     |\n| WEBHOOK_SECRET                           | Webhook secret will be sent with each request as `x-webhook-secret` in the header (default: `None`)                     |\n| NUMBER_OF_RECURRENT_NOTIFICATIONS        | How many times to retry if an error detected in sending a notification (default: `3`)                                   |\n| RECURRENT_NOTIFICATIONS_TIMEOUT          | Timeout between each retry if an error detected in sending a notification in seconds (default: `180`)                   |\n| NOTIFY_REACHED_USAGE_PERCENT             | At which percentage of usage to send the warning notification (default: `80`)                                           |\n| NOTIFY_DAYS_LEFT                         | When to send warning notifaction about expiration (default: `3`)                                                        |\n| USERS_AUTODELETE_DAYS                    | Delete expired (and optionally limited users) after this many days (Negative values disable this feature, default: `-1`) |\n| USER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS | Weather to include limited accounts in the auto-delete feature (default: `False`)                                       |\n| USE_CUSTOM_JSON_DEFAULT                  | Enable custom JSON config for ALL supported clients (default: `False`)                                                  |\n| USE_CUSTOM_JSON_FOR_V2RAYNG              | Enable custom JSON config only for V2rayNG (default: `False`)                                                           |\n| USE_CUSTOM_JSON_FOR_STREISAND            | Enable custom JSON config only for Streisand (default: `False`)                                                         |\n| USE_CUSTOM_JSON_FOR_V2RAYN               | Enable custom JSON config only for V2rayN (default: `False`)                                                            |\n\n\n# 文档\n[Marzban 文档](https://gozargah.github.io/marzban) 提供了所有必要的入门指南，支持三种语言：波斯语、英语和俄语。要全面覆盖项目的各个方面，这些文档需要大量的工作。我们欢迎并感谢您的贡献，以帮助我们改进文档。您可以在这个 [GitHub 仓库](https://github.com/Gozargah/gozargah.github.io) 中进行贡献。\n\n\n# 如何使用 API\nMarzban 提供了 REST API，使开发人员能够以编程方式与 Marzban 服务进行交互。要在 Swagger UI 或 ReDoc 中查看 API 文档，设置配置变量 `DOCS=True`，然后导航到 `/docs` 和 `/redoc`。\n\n\n# 如何备份 Marzban\n\n定期备份 Marzban 文件是预防系统故障或意外删除导致数据丢失的好习惯。以下是备份 Marzban 的步骤：\n\n1. 默认情况下，所有重要的 Marzban 文件都保存在 `/var/lib/marzban` ( Docker 版本)中。将整个 `/var/lib/marzban` 目录复制到您选择的备份位置，比如外部硬盘或云存储。\n2. 此外，请确保备份您的 `env` 文件，其中包含您的配置变量，以及您的 `Xray` 配置文件。\n\nMarzban 的备份服务会高效地压缩所有必要文件并将它们发送到您指定的 Telegram 机器人。它支持 SQLite、MySQL 和 MariaDB 数据库。其一个主要功能是自动化，允许您每小时安排一次备份。对于 Telegram 机器人的上传限制没有限制；如果文件超过限制，它会被拆分并以多个部分发送。此外，您可以在任何时间启动即时备份。\n\n安装最新版 Marzban 命令：\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install-script\n```\n\n设置备份服务：\n```bash\nmarzban backup-service\n```\n\n获取即时备份：\n```bash\nmarzban backup\n```\n\n按照这些步骤，您可以确保有备份所有 Marzban 文件和数据，以及您的配置变量和 Xray 配置，以备将来恢复使用。请记得定期更新备份，以保持它们的最新性。\n\n\n# Telegram bot\n\nMarzban 配备了一个集成的 Telegram bot，可以处理服务器管理、用户创建和删除，以及发送通知。通过几个简单的步骤，您可以轻松地启用这个机器人，并提供了一种方便的方式与 Marzban 交互，而不需要每次都登录到服务器上。\n\n启用 Telegram bot：\n\n1. 将 `TELEGRAM_API_TOKEN` 设置为您的 bot API Token。\n2. 将 `TELEGRAM_ADMIN_ID` 设置为您的 Telegram ID，您可以从 [@userinfobot](https://t.me/userinfobot) 中获取自己的 ID。\n\n\n# 捐赠\n\n如果您认为 Marzban 有用，并想支持其发展，可以在以下加密网络之一进行捐赠：\n\n- TRON(TRX) 网络：`TX8kJoDcowQPBFTYHAJR36GyoUKP1Xwzkb`\n- ETH、BNB、MATIC 网络：`0xFdc9ad32454FA4fc4733270FCc12ddBFb68b83F7`\n- 比特币网络：`bc1qpys2nefgsjjgae3g3gqy9crsv3h3rm96tlkz0v`\n- Dogecoin 网络：`DJAocBAu8y6LwhDKUktLAyzV8xyoFeHH6R`\n- TON 网络：`EQAVf-7hAXHlF-jmrKE44oBwN7HGQFVBLAtrOsev5K4qR4P8`\n\n\n感谢您的支持！\n\n# 许可\n\n制作于 [Unknown!] 并在 [AGPL-3.0](./LICENSE) 下发布。\n\n# 贡献者\n\n我们热爱贡献者！如果您想做出贡献，请查看我们的[贡献指南](CONTRIBUTING.md)并随时提交拉取请求或打开问题。我们也欢迎您加入我们的 [Telegram](https://t.me/gozargah_marzban) 群组，以获得支持或贡献指导。\n\n查看 [issues](https://github.com/gozargah/marzban/issues) 以帮助改进这个项目。\n\n\n\n<p align=\"center\">\n感谢所有为改善 Marzban 做出贡献的贡献者们：\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/Gozargah/Marzban/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Gozargah/Marzban\" />\n</a>\n</p>\n<p align=\"center\">\n  Made with <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://contrib.rocks\">contrib.rocks</a>\n</p>\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.9716796875,
          "content": "<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-dark.png\">\n      <img width=\"160\" height=\"160\" src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/logo-light.png\">\n    </picture>\n  </a>\n</p>\n\n<h1 align=\"center\"/>Marzban</h1>\n\n<p align=\"center\">\n    Unified GUI Censorship Resistant Solution Powered by <a href=\"https://github.com/XTLS/Xray-core\">Xray</a>\n</p>\n\n<br/>\n<p align=\"center\">\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/gozargah/marzban/build.yml?style=flat-square\" />\n    </a>\n    <a href=\"https://hub.docker.com/r/gozargah/marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/docker/pulls/gozargah/marzban?style=flat-square&logo=docker\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/license/gozargah/marzban?style=flat-square\" />\n    </a>\n    <a href=\"https://t.me/gozargah_marzban\" target=\"_blank\">\n        <img src=\"https://img.shields.io/badge/telegram-group-blue?style=flat-square&logo=telegram\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/badge/twitter-commiunity-blue?style=flat-square&logo=twitter\" />\n    </a>\n    <a href=\"#\">\n        <img src=\"https://img.shields.io/github/stars/gozargah/marzban?style=social\" />\n    </a>\n</p>\n\n<p align=\"center\">\n <a href=\"./README.md\">\n English\n </a>\n /\n <a href=\"./README-fa.md\">\n فارسی\n </a>\n  /\n  <a href=\"./README-zh-cn.md\">\n 简体中文\n </a>\n   /\n  <a href=\"./README-ru.md\">\n Русский\n </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/gozargah/marzban\" target=\"_blank\" rel=\"noopener noreferrer\" >\n    <img src=\"https://github.com/Gozargah/Marzban-docs/raw/master/screenshots/preview.png\" alt=\"Marzban screenshots\" width=\"600\" height=\"auto\">\n  </a>\n</p>\n\n## Table of Contents\n\n- [Overview](#overview)\n  - [Why using Marzban?](#why-using-marzban)\n    - [Features](#features)\n- [Installation guide](#installation-guide)\n- [Configuration](#configuration)\n- [Documentation](#documentation)\n- [API](#api)\n- [Backup](#backup)\n- [Telegram Bot](#telegram-bot)\n- [Marzban CLI](#marzban-cli)\n- [Marzban Node](#marzban-node)\n- [Webhook notifications](#webhook-notifications)\n- [Donation](#donation)\n- [License](#license)\n- [Contributors](#contributors)\n\n# Overview\n\nMarzban (the Persian word for \"border guard\" - pronounced /mærz'ban/) is a proxy management tool that provides a simple and easy-to-use user interface for managing hundreds of proxy accounts powered by [Xray-core](https://github.com/XTLS/Xray-core) and built using Python and Reactjs.\n\n## Why using Marzban?\n\nMarzban is user-friendly, feature-rich and reliable. It lets you to create different proxies for your users without any complicated configuration. Using its built-in web UI, you are able to monitor, modify and limit users.\n\n### Features\n\n- Built-in **Web UI**\n- Fully **REST API** backend\n- [**Multiple Nodes**](#marzban-node) support (for infrastructure distribution & scalability)\n- Supports protocols **Vmess**, **VLESS**, **Trojan** and **Shadowsocks**\n- **Multi-protocol** for a single user\n- **Multi-user** on a single inbound\n- **Multi-inbound** on a **single port** (fallbacks support)\n- **Traffic** and **expiry date** limitations\n- **Periodic** traffic limit (e.g. daily, weekly, etc.)\n- **Subscription link** compatible with **V2ray** _(such as V2RayNG, SingBox, Nekoray, etc.)_, **Clash** and **ClashMeta**\n- Automated **Share link** and **QRcode** generator\n- System monitoring and **traffic statistics**\n- Customizable xray configuration\n- **TLS** and **REALITY** support\n- Integrated **Telegram Bot**\n- Integrated **Command Line Interface (CLI)**\n- **Multi-language**\n- **Multi-admin** support (WIP)\n\n# Installation guide\n\nRun the following command to install Marzban with SQLite database:\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install\n```\n\nRun the following command to install Marzban with MySQL database:\n\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mysql\n```\n\nRun the following command to install Marzban with MariaDB database:\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install --database mariadb\n```\n\nOnce the installation is complete:\n\n- You will see the logs that you can stop watching them by closing the terminal or pressing `Ctrl+C`\n- The Marzban files will be located at `/opt/marzban`\n- The configuration file can be found at `/opt/marzban/.env` (refer to [configurations](#configuration) section to see variables)\n- The data files will be placed at `/var/lib/marzban`\n- For security reasons, the Marzban dashboard is not accessible via IP address. Therefore, you must [obtain SSL certificate](https://gozargah.github.io/marzban/en/examples/issue-ssl-certificate) and access your Marzban dashboard by opening a web browser and navigating to `https://YOUR_DOMAIN:8000/dashboard/` (replace YOUR_DOMAIN with your actual domain)\n- You can also use SSH port forwarding to access the Marzban dashboard locally without a domain. Replace `user@serverip` with your actual SSH username and server IP and Run the command below:\n\n```bash\nssh -L 8000:localhost:8000 user@serverip\n```\n\nFinally, you can enter the following link in your browser to access your Marzban dashboard:\n\nhttp://localhost:8000/dashboard/\n\nYou will lose access to the dashboard as soon as you close the SSH terminal. Therefore, this method is recommended only for testing purposes.\n\nNext, you need to create a sudo admin for logging into the Marzban dashboard by the following command\n\n```bash\nmarzban cli admin create --sudo\n```\n\nThat's it! You can login to your dashboard using these credentials\n\nTo see the help message of the Marzban script, run the following command\n\n```bash\nmarzban --help\n```\n\nIf you are eager to run the project using the source code, check the section below\n<details markdown=\"1\">\n<summary><h3>Manual install (advanced)</h3></summary>\n\nInstall xray on your machine\n\nYou can install it using [Xray-install](https://github.com/XTLS/Xray-install)\n\n```bash\nbash -c \"$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)\" @ install\n```\n\nClone this project and install the dependencies (you need Python >= 3.8)\n\n```bash\ngit clone https://github.com/Gozargah/Marzban.git\ncd Marzban\nwget -qO- https://bootstrap.pypa.io/get-pip.py | python3 -\npython3 -m pip install -r requirements.txt\n```\n\nAlternatively, to have an isolated environment you can use [Python Virtualenv](https://pypi.org/project/virtualenv/)\n\nThen run the following command to run the database migration scripts\n\n```bash\nalembic upgrade head\n```\n\nIf you want to use `marzban-cli`, you should link it to a file in your `$PATH`, make it executable, and install the auto-completion:\n\n```bash\nsudo ln -s $(pwd)/marzban-cli.py /usr/bin/marzban-cli\nsudo chmod +x /usr/bin/marzban-cli\nmarzban-cli completion install\n```\n\nNow it's time to configuration\n\nMake a copy of `.env.example` file, take a look and edit it using a text editor like `nano`.\n\nYou probably like to modify the admin credentials.\n\n```bash\ncp .env.example .env\nnano .env\n```\n\n> Check [configurations](#configuration) section for more information\n\nEventually, launch the application using command below\n\n```bash\npython3 main.py\n```\n\nTo launch with linux systemctl (copy marzban.service file to `/var/lib/marzban/marzban.service`)\n\n```\nsystemctl enable /var/lib/marzban/marzban.service\nsystemctl start marzban\n```\n\nTo use with nginx\n\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location ~* /(dashboard|statics|sub|api|docs|redoc|openapi.json) {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n    # xray-core ws-path: /\n    # client ws-path: /marzban/me/2087\n    #\n    # All traffic is proxed through port 443, and send to the xray port(2087, 2088 etc.).\n    # The '/marzban' in location regex path can changed any characters by yourself.\n    #\n    # /${path}/${username}/${xray-port}\n    location ~* /marzban/.+/(.+)$ {\n        proxy_redirect off;\n        proxy_pass http://127.0.0.1:$1/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $http_host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\nor\n\n```\nserver {\n    listen 443 ssl http2;\n    listen [::]:443 ssl http2;\n    server_name  marzban.example.com;\n\n    ssl_certificate      /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;\n\n    location / {\n        proxy_pass http://0.0.0.0:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}\n```\n\nBy default the app will be run on `http://localhost:8000/dashboard`. You can configure it using changing the `UVICORN_HOST` and `UVICORN_PORT` environment variables.\n</details>\n\n# Configuration\n\n> You can set settings below using environment variables or placing them in `.env` file.\n\n| Variable                                 | Description                                                                                                              |\n| ---------------------------------------- |--------------------------------------------------------------------------------------------------------------------------|\n| SUDO_USERNAME                            | Superuser's username                                                                                                     |\n| SUDO_PASSWORD                            | Superuser's password                                                                                                     |\n| SQLALCHEMY_DATABASE_URL                  | Database URL ([SQLAlchemy's docs](https://docs.sqlalchemy.org/en/20/core/engines.html#database-urls))                    |\n| UVICORN_HOST                             | Bind application to this host (default: `0.0.0.0`)                                                                       |\n| UVICORN_PORT                             | Bind application to this port (default: `8000`)                                                                          |\n| UVICORN_UDS                              | Bind application to a UNIX domain socket                                                                                 |\n| UVICORN_SSL_CERTFILE                     | SSL certificate file to have application on https                                                                        |\n| UVICORN_SSL_KEYFILE                      | SSL key file to have application on https                                                                                |\n| UVICORN_SSL_CA_TYPE                      | Type of authority SSL certificate. Use `private` for testing self-signed CA (default: `public`)                          |\n| XRAY_JSON                                | Path of Xray's json config file (default: `xray_config.json`)                                                            |\n| XRAY_EXECUTABLE_PATH                     | Path of Xray binary (default: `/usr/local/bin/xray`)                                                                     |\n| XRAY_ASSETS_PATH                         | Path of Xray assets (default: `/usr/local/share/xray`)                                                                   |\n| XRAY_SUBSCRIPTION_URL_PREFIX             | Prefix of subscription URLs                                                                                              |\n| XRAY_FALLBACKS_INBOUND_TAG               | Tag of the inbound that includes fallbacks, needed in the case you're using fallbacks                                    |\n| XRAY_EXCLUDE_INBOUND_TAGS                | Tags of the inbounds that shouldn't be managed and included in links by application                                      |\n| CUSTOM_TEMPLATES_DIRECTORY               | Customized templates directory (default: `app/templates`)                                                                |\n| CLASH_SUBSCRIPTION_TEMPLATE              | The template that will be used for generating clash configs (default: `clash/default.yml`)                               |\n| SUBSCRIPTION_PAGE_TEMPLATE               | The template used for generating subscription info page (default: `subscription/index.html`)                             |\n| HOME_PAGE_TEMPLATE                       | Decoy page template (default: `home/index.html`)                                                                         |\n| TELEGRAM_API_TOKEN                       | Telegram bot API token  (get token from [@botfather](https://t.me/botfather))                                            |\n| TELEGRAM_ADMIN_ID                        | Numeric Telegram ID of admin (use [@userinfobot](https://t.me/userinfobot) to found your ID)                             |\n| TELEGRAM_PROXY_URL                       | Run Telegram Bot over proxy                                                                                              |\n| JWT_ACCESS_TOKEN_EXPIRE_MINUTES          | Expire time for the Access Tokens in minutes, `0` considered as infinite (default: `1440`)                               |\n| DOCS                                     | Whether API documents should be available on `/docs` and `/redoc` or not (default: `False`)                              |\n| DEBUG                                    | Debug mode for development (default: `False`)                                                                            |\n| WEBHOOK_ADDRESS                          | Webhook address to send notifications to. Webhook notifications will be sent if this value was set.                      |\n| WEBHOOK_SECRET                           | Webhook secret will be sent with each request as `x-webhook-secret` in the header (default: `None`)                      |\n| NUMBER_OF_RECURRENT_NOTIFICATIONS        | How many times to retry if an error detected in sending a notification (default: `3`)                                    |\n| RECURRENT_NOTIFICATIONS_TIMEOUT          | Timeout between each retry if an error detected in sending a notification in seconds (default: `180`)                    |\n| NOTIFY_REACHED_USAGE_PERCENT             | At which percentage of usage to send the warning notification (default: `80`)                                            |\n| NOTIFY_DAYS_LEFT                         | When to send warning notifaction about expiration (default: `3`)                                                         |\n| USERS_AUTODELETE_DAYS                    | Delete expired (and optionally limited users) after this many days (Negative values disable this feature, default: `-1`) |\n| USER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS | Whether to include limited accounts in the auto-delete feature (default: `False`)                                        |\n| USE_CUSTOM_JSON_DEFAULT                  | Enable custom JSON config for ALL supported clients (default: `False`)                                                   |\n| USE_CUSTOM_JSON_FOR_V2RAYNG              | Enable custom JSON config only for V2rayNG (default: `False`)                                                            |\n| USE_CUSTOM_JSON_FOR_STREISAND            | Enable custom JSON config only for Streisand (default: `False`)                                                          |\n| USE_CUSTOM_JSON_FOR_V2RAYN               | Enable custom JSON config only for V2rayN (default: `False`)                                                             |\n\n\n# Documentation\n\nThe [Marzban Documentation](https://gozargah.github.io/marzban) provides all the essential guides to get you started, available in three languages: Farsi, English, and Russian. This documentation requires significant effort to cover all aspects of the project comprehensively. We welcome and appreciate your contributions to help us improve it. You can contribute on this [GitHub repository](https://github.com/Gozargah/gozargah.github.io).\n\n\n# API\n\nMarzban provides a REST API that enables developers to interact with Marzban services programmatically. To view the API documentation in Swagger UI or ReDoc, set the configuration variable `DOCS=True` and navigate to the `/docs` and `/redoc`.\n\n\n# Backup\n\nIt's always a good idea to backup your Marzban files regularly to prevent data loss in case of system failures or accidental deletion. Here are the steps to backup Marzban:\n\n1. By default, all Marzban important files are saved in `/var/lib/marzban` (Docker versions). Copy the entire `/var/lib/marzban` directory to a backup location of your choice, such as an external hard drive or cloud storage.\n2. Additionally, make sure to backup your env file, which contains your configuration variables, and also, your Xray config file. If you installed Marzban using marzban-scripts (recommended installation approach), the env and other configurations should be inside `/opt/marzban/` directory.\n\nMarzban's backup service efficiently zips all necessary files and sends them to your specified Telegram bot. It supports SQLite, MySQL, and MariaDB databases. One of its key features is automation, allowing you to schedule backups every hour. There are no limitations concerning Telegram's upload limits for bots; if a file exceeds the limit, it will be split and sent in multiple parts. Additionally, you can initiate an immediate backup at any time.\n\nInstall the Latest Version of Marzban Command:\n```bash\nsudo bash -c \"$(curl -sL https://github.com/Gozargah/Marzban-scripts/raw/master/marzban.sh)\" @ install-script\n```\n\nSetup the Backup Service:\n```bash\nmarzban backup-service\n```\n\nGet an Immediate Backup:\n```bash\nmarzban backup\n```\n\nBy following these steps, you can ensure that you have a backup of all your Marzban files and data, as well as your configuration variables and Xray configuration, in case you need to restore them in the future. Remember to update your backups regularly to keep them up-to-date.\n\n# Telegram Bot\n\nMarzban comes with an integrated Telegram bot that can handle server management, user creation and removal, and send notifications. This bot can be easily enabled by following a few simple steps, and it provides a convenient way to interact with Marzban without having to log in to the server every time.\n\nTo enable Telegram Bot:\n\n1. set `TELEGRAM_API_TOKEN` to your bot's API Token\n2. set `TELEGRAM_ADMIN_ID` to your Telegram account's numeric ID, you can get your ID from [@userinfobot](https://t.me/userinfobot)\n\n# Marzban CLI\n\nMarzban comes with an integrated CLI named `marzban-cli` which allows administrators to have direct interaction with it.\n\nIf you've installed Marzban using easy install script, you can access the cli commands by running\n\n```bash\nmarzban cli [OPTIONS] COMMAND [ARGS]...\n```\n\nFor more information, You can read [Marzban CLI's documentation](./cli/README.md).\n\n# Marzban Node\n\nThe Marzban project introduces the [Marzban-node](https://github.com/gozargah/marzban-node), which revolutionizes infrastructure distribution. With Marzban-node, you can distribute your infrastructure across multiple locations, unlocking benefits such as redundancy, high availability, scalability, flexibility. Marzban-node empowers users to connect to different servers, offering them the flexibility to choose and connect to multiple servers instead of being limited to only one server.\nFor more detailed information and installation instructions, please refer to the [Marzban-node official documentation](https://github.com/gozargah/marzban-node)\n\n# Webhook notifications\n\nYou can set a webhook address and Marzban will send the notifications to that address.\n\nthe requests will be sent as a post request to the adress provided by `WEBHOOK_ADDRESS` with `WEBHOOK_SECRET` as `x-webhook-secret` in the headers.\n\nExample request sent from Marzban:\n\n```\nHeaders:\nHost: 0.0.0.0:9000\nUser-Agent: python-requests/2.28.1\nAccept-Encoding: gzip, deflate\nAccept: */*\nConnection: keep-alive\nx-webhook-secret: something-very-very-secret\nContent-Length: 107\nContent-Type: application/json\n\n\n\nBody:\n{\"username\": \"marzban_test_user\", \"action\": \"user_updated\", \"enqueued_at\": 1680506457.636369, \"tries\": 0}\n```\n\nDifferent action typs are: `user_created`, `user_updated`, `user_deleted`, `user_limited`, `user_expired`, `user_disabled`, `user_enabled`\n\n# Donation\n\nIf you found Marzban useful and would like to support its development, you can make a donation in one of the following crypto networks:\n\n- TRON network (TRC20): `TX8kJoDcowQPBFTYHAJR36GyoUKP1Xwzkb`\n- ETH, BNB, MATIC network (ERC20, BEP20): `0xFdc9ad32454FA4fc4733270FCc12ddBFb68b83F7`\n- Bitcoin network: `bc1qpys2nefgsjjgae3g3gqy9crsv3h3rm96tlkz0v`\n- Dogecoin network: `DJAocBAu8y6LwhDKUktLAyzV8xyoFeHH6R`\n- TON network: `EQAVf-7hAXHlF-jmrKE44oBwN7HGQFVBLAtrOsev5K4qR4P8`\n\nThank you for your support!\n\n# License\n\nMade in [Unknown!] and Published under [AGPL-3.0](./LICENSE).\n\n# Contributors\n\nWe ❤️‍🔥 contributors! If you'd like to contribute, please check out our [Contributing Guidelines](CONTRIBUTING.md) and feel free to submit a pull request or open an issue. We also welcome you to join our [Telegram](https://t.me/gozargah_marzban) group for either support or contributing guidance.\n\nCheck [open issues](https://github.com/gozargah/marzban/issues) to help the progress of this project.\n\n<p align=\"center\">\nThanks to the all contributors who have helped improve Marzban:\n</p>\n<p align=\"center\">\n<a href=\"https://github.com/Gozargah/Marzban/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=Gozargah/Marzban\" />\n</a>\n</p>\n<p align=\"center\">\n  Made with <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://contrib.rocks\">contrib.rocks</a>\n</p>\n"
        },
        {
          "name": "alembic.ini",
          "type": "blob",
          "size": 3.0087890625,
          "content": "# A generic, single database configuration.\n\n[alembic]\n# path to migration scripts\nscript_location = app/db/migrations\n\n# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s\n# Uncomment the line below if you want the files to be prepended with date and time\n# see https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file\n# for all available tokens\n# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s\n\n# sys.path path, will be prepended to sys.path if present.\n# defaults to the current working directory.\nprepend_sys_path = .\n\n# timezone to use when rendering the date within the migration file\n# as well as the filename.\n# If specified, requires the python-dateutil library that can be\n# installed by adding `alembic[tz]` to the pip requirements\n# string value is passed to dateutil.tz.gettz()\n# leave blank for localtime\n# timezone =\n\n# max length of characters to apply to the\n# \"slug\" field\n# truncate_slug_length = 40\n\n# set to 'true' to run the environment during\n# the 'revision' command, regardless of autogenerate\n# revision_environment = false\n\n# set to 'true' to allow .pyc and .pyo files without\n# a source .py file to be detected as revisions in the\n# versions/ directory\n# sourceless = false\n\n# version location specification; This defaults\n# to app/db/migrations/versions.  When using multiple version\n# directories, initial revisions must be specified with --version-path.\n# The path separator used here should be the separator specified by \"version_path_separator\" below.\n# version_locations = %(here)s/bar:%(here)s/bat:app/db/migrations/versions\n\n# version path separator; As mentioned above, this is the character used to split\n# version_locations. The default within new alembic.ini files is \"os\", which uses os.pathsep.\n# If this key is omitted entirely, it falls back to the legacy behavior of splitting on spaces and/or commas.\n# Valid values for version_path_separator are:\n#\n# version_path_separator = :\n# version_path_separator = ;\n# version_path_separator = space\nversion_path_separator = os  # Use os.pathsep. Default configuration used for new projects.\n\n\n[post_write_hooks]\n# post_write_hooks defines scripts or Python functions that are run\n# on newly generated revision scripts.  See the documentation for further\n# detail and examples\n\n# format using \"black\" - use the console_scripts runner, against the \"black\" entrypoint\n# hooks = black\n# black.type = console_scripts\n# black.entrypoint = black\n# black.options = -l 79 REVISION_SCRIPT_FILENAME\n\n# Logging configuration\n[loggers]\nkeys = root,sqlalchemy,alembic\n\n[handlers]\nkeys = console\n\n[formatters]\nkeys = generic\n\n[logger_root]\nlevel = WARN\nhandlers = console\nqualname =\n\n[logger_sqlalchemy]\nlevel = WARN\nhandlers =\nqualname = sqlalchemy.engine\n\n[logger_alembic]\nlevel = INFO\nhandlers =\nqualname = alembic\n\n[handler_console]\nclass = StreamHandler\nargs = (sys.stderr,)\nlevel = NOTSET\nformatter = generic\n\n[formatter_generic]\nformat = %(levelname)-5.5s [%(name)s] %(message)s\ndatefmt = %H:%M:%S\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_dashboard.sh",
          "type": "blob",
          "size": 0.1494140625,
          "content": "cd `dirname $0`/app/dashboard\nVITE_BASE_API=/api/ npm run build --if-present -- --outDir build --assetsDir statics\ncp ./build/index.html ./build/404.html"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.py",
          "type": "blob",
          "size": 7.43359375,
          "content": "from decouple import config\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n\nSQLALCHEMY_DATABASE_URL = config(\"SQLALCHEMY_DATABASE_URL\", default=\"sqlite:///db.sqlite3\")\nSQLALCHEMY_POOL_SIZE = config(\"SQLALCHEMY_POOL_SIZE\", cast=int, default=10)\nSQLIALCHEMY_MAX_OVERFLOW = config(\"SQLIALCHEMY_MAX_OVERFLOW\", cast=int, default=30)\n\nUVICORN_HOST = config(\"UVICORN_HOST\", default=\"0.0.0.0\")\nUVICORN_PORT = config(\"UVICORN_PORT\", cast=int, default=8000)\nUVICORN_UDS = config(\"UVICORN_UDS\", default=None)\nUVICORN_SSL_CERTFILE = config(\"UVICORN_SSL_CERTFILE\", default=None)\nUVICORN_SSL_KEYFILE = config(\"UVICORN_SSL_KEYFILE\", default=None)\nUVICORN_SSL_CA_TYPE = config(\"UVICORN_SSL_CA_TYPE\", default=\"public\").lower()\nDASHBOARD_PATH = config(\"DASHBOARD_PATH\", default=\"/dashboard/\")\n\nDEBUG = config(\"DEBUG\", default=False, cast=bool)\nDOCS = config(\"DOCS\", default=False, cast=bool)\n\nALLOWED_ORIGINS = config(\"ALLOWED_ORIGINS\", default=\"*\").split(\",\")\n\nVITE_BASE_API = f\"http://127.0.0.1:{UVICORN_PORT}/api/\" \\\n    if DEBUG and config(\"VITE_BASE_API\", default=\"/api/\") == \"/api/\" \\\n    else config(\"VITE_BASE_API\", default=\"/api/\")\n\nXRAY_JSON = config(\"XRAY_JSON\", default=\"./xray_config.json\")\nXRAY_FALLBACKS_INBOUND_TAG = config(\"XRAY_FALLBACKS_INBOUND_TAG\", cast=str, default=\"\") or config(\n    \"XRAY_FALLBACK_INBOUND_TAG\", cast=str, default=\"\"\n)\nXRAY_EXECUTABLE_PATH = config(\"XRAY_EXECUTABLE_PATH\", default=\"/usr/local/bin/xray\")\nXRAY_ASSETS_PATH = config(\"XRAY_ASSETS_PATH\", default=\"/usr/local/share/xray\")\nXRAY_EXCLUDE_INBOUND_TAGS = config(\"XRAY_EXCLUDE_INBOUND_TAGS\", default='').split()\nXRAY_SUBSCRIPTION_URL_PREFIX = config(\"XRAY_SUBSCRIPTION_URL_PREFIX\", default=\"\").strip(\"/\")\nXRAY_SUBSCRIPTION_PATH = config(\"XRAY_SUBSCRIPTION_PATH\", default=\"sub\").strip(\"/\")\n\nTELEGRAM_API_TOKEN = config(\"TELEGRAM_API_TOKEN\", default=\"\")\nTELEGRAM_ADMIN_ID = config(\n    'TELEGRAM_ADMIN_ID',\n    default=\"\",\n    cast=lambda v: [int(i) for i in filter(str.isdigit, (s.strip() for s in v.split(',')))]\n)\nTELEGRAM_PROXY_URL = config(\"TELEGRAM_PROXY_URL\", default=\"\")\nTELEGRAM_LOGGER_CHANNEL_ID = config(\"TELEGRAM_LOGGER_CHANNEL_ID\", cast=int, default=0)\nTELEGRAM_DEFAULT_VLESS_FLOW = config(\"TELEGRAM_DEFAULT_VLESS_FLOW\", default=\"\")\n\nJWT_ACCESS_TOKEN_EXPIRE_MINUTES = config(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", cast=int, default=1440)\n\nCUSTOM_TEMPLATES_DIRECTORY = config(\"CUSTOM_TEMPLATES_DIRECTORY\", default=None)\nSUBSCRIPTION_PAGE_TEMPLATE = config(\"SUBSCRIPTION_PAGE_TEMPLATE\", default=\"subscription/index.html\")\nHOME_PAGE_TEMPLATE = config(\"HOME_PAGE_TEMPLATE\", default=\"home/index.html\")\n\nCLASH_SUBSCRIPTION_TEMPLATE = config(\"CLASH_SUBSCRIPTION_TEMPLATE\", default=\"clash/default.yml\")\nCLASH_SETTINGS_TEMPLATE = config(\"CLASH_SETTINGS_TEMPLATE\", default=\"clash/settings.yml\")\n\nSINGBOX_SUBSCRIPTION_TEMPLATE = config(\"SINGBOX_SUBSCRIPTION_TEMPLATE\", default=\"singbox/default.json\")\nSINGBOX_SETTINGS_TEMPLATE = config(\"SINGBOX_SETTINGS_TEMPLATE\", default=\"singbox/settings.json\")\n\nMUX_TEMPLATE = config(\"MUX_TEMPLATE\", default=\"mux/default.json\")\n\nV2RAY_SUBSCRIPTION_TEMPLATE = config(\"V2RAY_SUBSCRIPTION_TEMPLATE\", default=\"v2ray/default.json\")\nV2RAY_SETTINGS_TEMPLATE = config(\"V2RAY_SETTINGS_TEMPLATE\", default=\"v2ray/settings.json\")\n\nUSER_AGENT_TEMPLATE = config(\"USER_AGENT_TEMPLATE\", default=\"user_agent/default.json\")\nGRPC_USER_AGENT_TEMPLATE = config(\"GRPC_USER_AGENT_TEMPLATE\", default=\"user_agent/grpc.json\")\n\nEXTERNAL_CONFIG = config(\"EXTERNAL_CONFIG\", default=\"\", cast=str)\nLOGIN_NOTIFY_WHITE_LIST = [ip.strip() for ip in config(\"LOGIN_NOTIFY_WHITE_LIST\",\n                                                       default=\"\", cast=str).split(\",\") if ip.strip()]\n\nUSE_CUSTOM_JSON_DEFAULT = config(\"USE_CUSTOM_JSON_DEFAULT\", default=False, cast=bool)\nUSE_CUSTOM_JSON_FOR_V2RAYN = config(\"USE_CUSTOM_JSON_FOR_V2RAYN\", default=False, cast=bool)\nUSE_CUSTOM_JSON_FOR_V2RAYNG = config(\"USE_CUSTOM_JSON_FOR_V2RAYNG\", default=False, cast=bool)\nUSE_CUSTOM_JSON_FOR_STREISAND = config(\"USE_CUSTOM_JSON_FOR_STREISAND\", default=False, cast=bool)\nUSE_CUSTOM_JSON_FOR_HAPP = config(\"USE_CUSTOM_JSON_FOR_HAPP\", default=False, cast=bool)\n\nNOTIFY_STATUS_CHANGE = config(\"NOTIFY_STATUS_CHANGE\", default=True, cast=bool)\nNOTIFY_USER_CREATED = config(\"NOTIFY_USER_CREATED\", default=True, cast=bool)\nNOTIFY_USER_UPDATED = config(\"NOTIFY_USER_UPDATED\", default=True, cast=bool)\nNOTIFY_USER_DELETED = config(\"NOTIFY_USER_DELETED\", default=True, cast=bool)\nNOTIFY_USER_DATA_USED_RESET = config(\"NOTIFY_USER_DATA_USED_RESET\", default=True, cast=bool)\nNOTIFY_USER_SUB_REVOKED = config(\"NOTIFY_USER_SUB_REVOKED\", default=True, cast=bool)\nNOTIFY_IF_DATA_USAGE_PERCENT_REACHED = config(\"NOTIFY_IF_DATA_USAGE_PERCENT_REACHED\", default=True, cast=bool)\nNOTIFY_IF_DAYS_LEFT_REACHED = config(\"NOTIFY_IF_DAYS_LEFT_REACHED\", default=True, cast=bool)\nNOTIFY_LOGIN = config(\"NOTIFY_LOGIN\", default=True, cast=bool)\n\nACTIVE_STATUS_TEXT = config(\"ACTIVE_STATUS_TEXT\", default=\"Active\")\nEXPIRED_STATUS_TEXT = config(\"EXPIRED_STATUS_TEXT\", default=\"Expired\")\nLIMITED_STATUS_TEXT = config(\"LIMITED_STATUS_TEXT\", default=\"Limited\")\nDISABLED_STATUS_TEXT = config(\"DISABLED_STATUS_TEXT\", default=\"Disabled\")\nONHOLD_STATUS_TEXT = config(\"ONHOLD_STATUS_TEXT\", default=\"On-Hold\")\n\nUSERS_AUTODELETE_DAYS = config(\"USERS_AUTODELETE_DAYS\", default=-1, cast=int)\nUSER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS = config(\"USER_AUTODELETE_INCLUDE_LIMITED_ACCOUNTS\", default=False, cast=bool)\n\n\n# USERNAME: PASSWORD\nSUDOERS = {config(\"SUDO_USERNAME\"): config(\"SUDO_PASSWORD\")} \\\n    if config(\"SUDO_USERNAME\", default='') and config(\"SUDO_PASSWORD\", default='') \\\n    else {}\n\n\nWEBHOOK_ADDRESS = config(\n    'WEBHOOK_ADDRESS',\n    default=\"\",\n    cast=lambda v: [address.strip() for address in v.split(',')] if v else []\n)\nWEBHOOK_SECRET = config(\"WEBHOOK_SECRET\", default=None)\n\n# recurrent notifications\n\n# timeout between each retry of sending a notification in seconds\nRECURRENT_NOTIFICATIONS_TIMEOUT = config(\"RECURRENT_NOTIFICATIONS_TIMEOUT\", default=180, cast=int)\n# how many times to try after ok response not recevied after sending a notifications\nNUMBER_OF_RECURRENT_NOTIFICATIONS = config(\"NUMBER_OF_RECURRENT_NOTIFICATIONS\", default=3, cast=int)\n\n# sends a notification when the user uses this much of thier data\nNOTIFY_REACHED_USAGE_PERCENT = config(\n    \"NOTIFY_REACHED_USAGE_PERCENT\",\n    default=\"80\",\n    cast=lambda v: [int(p.strip()) for p in v.split(',')] if v else []\n)\n\n# sends a notification when there is n days left of their service\nNOTIFY_DAYS_LEFT = config(\n    \"NOTIFY_DAYS_LEFT\",\n    default=\"3\",\n    cast=lambda v: [int(d.strip()) for d in v.split(',')] if v else []\n)\n\nDISABLE_RECORDING_NODE_USAGE = config(\"DISABLE_RECORDING_NODE_USAGE\", cast=bool, default=False)\n\n# headers: profile-update-interval, support-url, profile-title\nSUB_UPDATE_INTERVAL = config(\"SUB_UPDATE_INTERVAL\", default=\"12\")\nSUB_SUPPORT_URL = config(\"SUB_SUPPORT_URL\", default=\"https://t.me/\")\nSUB_PROFILE_TITLE = config(\"SUB_PROFILE_TITLE\", default=\"Subscription\")\n\n# discord webhook log\nDISCORD_WEBHOOK_URL = config(\"DISCORD_WEBHOOK_URL\", default=\"\")\n\n\n# Interval jobs, all values are in seconds\nJOB_CORE_HEALTH_CHECK_INTERVAL = config(\"JOB_CORE_HEALTH_CHECK_INTERVAL\", cast=int, default=10)\nJOB_RECORD_NODE_USAGES_INTERVAL = config(\"JOB_RECORD_NODE_USAGES_INTERVAL\", cast=int, default=30)\nJOB_RECORD_USER_USAGES_INTERVAL = config(\"JOB_RECORD_USER_USAGES_INTERVAL\", cast=int, default=10)\nJOB_REVIEW_USERS_INTERVAL = config(\"JOB_REVIEW_USERS_INTERVAL\", cast=int, default=10)\nJOB_SEND_NOTIFICATIONS_INTERVAL = config(\"JOB_SEND_NOTIFICATIONS_INTERVAL\", cast=int, default=30)\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.1689453125,
          "content": "services:\n  marzban:\n    image: gozargah/marzban:latest\n    restart: always\n    env_file: .env\n    network_mode: host\n    volumes:\n      - /var/lib/marzban:/var/lib/marzban\n"
        },
        {
          "name": "install_service.sh",
          "type": "blob",
          "size": 0.5849609375,
          "content": "#!/bin/bash\n\nSERVICE_NAME=\"marzban\"\nSERVICE_DESCRIPTION=\"Marzban Service\"\nSERVICE_DOCUMENTATION=\"https://github.com/gozargah/marzban\"\nMAIN_PY_PATH=\"$PWD/main.py\"\nSERVICE_FILE=\"/etc/systemd/system/$SERVICE_NAME.service\"\n\n# Create the service file\ncat > $SERVICE_FILE <<EOF\n[Unit]\nDescription=$SERVICE_DESCRIPTION\nDocumentation=$SERVICE_DOCUMENTATION\nAfter=network.target nss-lookup.target\n\n[Service]\nExecStart=/usr/bin/env python3 $MAIN_PY_PATH\nRestart=on-failure\nWorkingDirectory=$PWD\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload\n\necho \"Service file created at: $SERVICE_FILE\"\n"
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 4.0224609375,
          "content": "import click\nimport logging\nimport os\nimport ssl\n\nimport uvicorn\nfrom cryptography import x509\nfrom cryptography.hazmat.backends import default_backend\n\nfrom app import app, logger\nfrom config import (DEBUG, UVICORN_HOST, UVICORN_PORT, UVICORN_SSL_CERTFILE,\n                    UVICORN_SSL_KEYFILE, UVICORN_SSL_CA_TYPE, UVICORN_UDS)\n\n\ndef validate_cert_and_key(cert_file_path, key_file_path, ca_type):\n    if ca_type == \"private\":\n        logger.warning(f\"\"\"\n{click.style('IMPORTANT!', blink=True, bold=True, fg=\"yellow\")} \nYou're running Marzban with: {click.style('UVICORN_SSL_CA_TYPE', italic=True, fg=\"magenta\")}: {click.style(f'{ca_type}', bold=True, fg=\"yellow\")}. \nSelf-signed CAs are useful in testing or internal use cases, they’re not suitable for secure public internet communications.\n        \"\"\")\n        return\n\n    if not os.path.isfile(cert_file_path):\n        raise ValueError(f\"SSL certificate file '{cert_file_path}' does not exist.\")\n    if not os.path.isfile(key_file_path):\n        raise ValueError(f\"SSL key file '{key_file_path}' does not exist.\")\n\n    try:\n        context = ssl.create_default_context()\n        context.load_cert_chain(certfile=cert_file_path, keyfile=key_file_path)\n    except ssl.SSLError as e:\n        raise ValueError(f\"SSL Error: {e}\")\n\n    try:\n        with open(cert_file_path, 'rb') as cert_file:\n            cert_data = cert_file.read()\n            cert = x509.load_pem_x509_certificate(cert_data, default_backend())\n\n        if cert.issuer == cert.subject:\n            raise ValueError(\"The certificate is self-signed and not issued by a trusted CA.\")\n\n    except Exception as e:\n        raise ValueError(f\"Certificate verification failed: {e}\")\n\n\nif __name__ == \"__main__\":\n    # Do NOT change workers count for now\n    # multi-workers support isn't implemented yet for APScheduler and XRay module\n\n    bind_args = {}\n    if UVICORN_SSL_CA_TYPE not in [\"public\", \"private\"]:\n        UVICORN_SSL_CA_TYPE = \"public\"\n\n    if UVICORN_SSL_CERTFILE and UVICORN_SSL_KEYFILE and UVICORN_SSL_CA_TYPE:\n        validate_cert_and_key(UVICORN_SSL_CERTFILE, UVICORN_SSL_KEYFILE, UVICORN_SSL_CA_TYPE)\n\n        bind_args['ssl_certfile'] = UVICORN_SSL_CERTFILE\n        bind_args['ssl_keyfile'] = UVICORN_SSL_KEYFILE\n\n        if UVICORN_UDS:\n            bind_args['uds'] = UVICORN_UDS\n        else:\n            bind_args['host'] = UVICORN_HOST\n            bind_args['port'] = UVICORN_PORT\n\n    else:\n        if UVICORN_UDS:\n            bind_args['uds'] = UVICORN_UDS\n        else:\n\n            logger.warning(f\"\"\"\n{click.style('IMPORTANT!', blink=True, bold=True, fg=\"yellow\")}\nYou're running Marzban without specifying {click.style('UVICORN_SSL_CERTFILE', italic=True, fg=\"magenta\")} and {click.style('UVICORN_SSL_KEYFILE', italic=True, fg=\"magenta\")}.\nThe application will only be accessible through localhost. This means that {click.style('Marzban and subscription URLs will not be accessible externally', bold=True)}.\n\nIf you need external access, please provide the SSL files to allow the server to bind to 0.0.0.0. Alternatively, you can run the server on localhost or a Unix socket and use a reverse proxy, such as Nginx or Caddy, to handle SSL termination and provide external access.\n\nIf you wish to continue without SSL, you can use SSH port forwarding to access the application from your machine. note that in this case, subscription functionality will not work. \n\nUse the following command:\n\n{click.style(f'ssh -L {UVICORN_PORT}:localhost:{UVICORN_PORT} user@server', italic=True, fg=\"cyan\")}\n\nThen, navigate to {click.style(f'http://127.0.0.1:{UVICORN_PORT}', bold=True)} on your computer.\n            \"\"\")\n\n            bind_args['host'] = '127.0.0.1'\n            bind_args['port'] = UVICORN_PORT\n\n    if DEBUG:\n        bind_args['uds'] = None\n        bind_args['host'] = '0.0.0.0'\n\n    try:\n        uvicorn.run(\n            \"main:app\",\n            **bind_args,\n            workers=1,\n            reload=DEBUG,\n            log_level=logging.DEBUG if DEBUG else logging.INFO\n        )\n    except FileNotFoundError:  # to prevent error on removing unix sock\n        pass\n"
        },
        {
          "name": "marzban-cli.py",
          "type": "blob",
          "size": 1.8623046875,
          "content": "#!/usr/bin/env python3\nimport os  # noqa\nimport readline  # noqa\nimport sys  # noqa\n\nsys.path.insert(0, os.getcwd())  # noqa\n\nimport typer\nfrom typer._completion_shared import Shells\n\nimport cli.admin\nimport cli.subscription\nimport cli.user\n\napp = typer.Typer(no_args_is_help=True, add_completion=False)\napp.add_typer(cli.admin.app, name=\"admin\")\napp.add_typer(cli.subscription.app, name=\"subscription\")\napp.add_typer(cli.user.app, name=\"user\")\n\n\n# Hidden completion app\napp_completion = typer.Typer(no_args_is_help=True, help=\"Generate and install completion scripts.\", hidden=True)\napp.add_typer(app_completion, name=\"completion\")\n\n\ndef get_default_shell() -> Shells:\n    shell = os.environ.get('SHELL')\n    if shell:\n        shell = shell.split('/')[-1]\n        if shell in Shells.__members__:\n            return getattr(Shells, shell)\n    return Shells.bash\n\n\n@app_completion.command(help=\"Show completion for the specified shell, to copy or customize it.\")\ndef show(ctx: typer.Context, shell: Shells = typer.Option(None,\n                                                          help=\"The shell to install completion for.\",\n                                                          case_sensitive=False)) -> None:\n    if shell is None:\n        shell = get_default_shell()\n    typer.completion.show_callback(ctx, None, shell)\n\n\n@app_completion.command(help=\"Install completion for the specified shell.\")\ndef install(ctx: typer.Context, shell: Shells = typer.Option(None,\n                                                             help=\"The shell to install completion for.\",\n                                                             case_sensitive=False)) -> None:\n    if shell is None:\n        shell = get_default_shell()\n    typer.completion.install_callback(ctx, None, shell)\n\n\nif __name__ == \"__main__\":\n    typer.completion.completion_init()\n    app(prog_name=os.environ.get('CLI_PROG_NAME'))\n"
        },
        {
          "name": "marzban.code-workspace",
          "type": "blob",
          "size": 0.2841796875,
          "content": "{\n\t\"folders\": [\n\t\t{\n\t\t\t\"path\": \".\"\n\t\t}\n\t],\n\t\"settings\": {\n\t\t\"[python]\": {\n\t\t\t\"editor.defaultFormatter\": \"ms-python.autopep8\",\n\t\t\t\"editor.formatOnSave\": true,\n\t\t},\n\t\t\"autopep8.args\": [ \"--max-line-length\", \"120\" ],\n\t\t\"editor.codeActionsOnSave\": {\n\t\t\t\"source.organizeImports\": \"never\"\n\t\t}\n\t}\n}"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.7197265625,
          "content": "APScheduler==3.9.1.post1\nDeprecated==1.2.13\nJinja2==3.1.4\nMarkupSafe==2.1.1\nPyJWT==2.8.0\nPyMySQL==1.1.1\nPyYAML==6.0.2\nSQLAlchemy==2.0.36\nalembic==1.14.0\nanyio==4.2.0\nbcrypt==4.0.1\ncertifi==2024.07.04\ncffi==1.17.1\nclick==8.1.7\ncommentjson==0.9.0\ncryptography==43.0.1\nfastapi==0.115.2\ngrpcio-tools==1.67.1\ngrpcio==1.67.1\nhttptools==0.6.4\njdatetime==4.1.1\npasslib==1.7.4\npsutil==5.9.4\npyOpenSSL==24.2.1\nPySocks==1.7.1\npyTelegramBotAPI==4.9.0\npydantic==2.10.4\npython-dateutil==2.8.2\npython-decouple==3.6\npython-dotenv==0.21.1\npython-multipart==0.0.7\nqrcode==7.4.2\nrequests==2.32.3\nrich==13.7.1\nrpyc==6.0.0\nrsa==4.9\nsniffio==1.3.0\nstarlette==0.40.0\ntyper==0.7.0\nurllib3==1.26.19\nuvicorn==0.27.0.post1\nwebsocket-client==1.7.0\nwebsockets==12.0\n"
        },
        {
          "name": "xray_api",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_config.json",
          "type": "blob",
          "size": 0.572265625,
          "content": "{\n  \"log\": {\n    \"loglevel\": \"warning\"\n  },\n  \"routing\": {\n    \"rules\": [\n      {\n        \"ip\": [\n          \"geoip:private\"\n        ],\n        \"outboundTag\": \"BLOCK\",\n        \"type\": \"field\"\n      }\n    ]\n  },\n  \"inbounds\": [\n    {\n      \"tag\": \"Shadowsocks TCP\",\n      \"listen\": \"0.0.0.0\",\n      \"port\": 1080,\n      \"protocol\": \"shadowsocks\",\n      \"settings\": {\n        \"clients\": [],\n        \"network\": \"tcp,udp\"\n      }\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"protocol\": \"freedom\",\n      \"tag\": \"DIRECT\"\n    },\n    {\n      \"protocol\": \"blackhole\",\n      \"tag\": \"BLOCK\"\n    }\n  ]\n}\n"
        }
      ]
    }
  ]
}