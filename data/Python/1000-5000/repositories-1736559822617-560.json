{
  "metadata": {
    "timestamp": 1736559822617,
    "page": 560,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Ulauncher/Ulauncher",
      "stars": 3799,
      "defaultBranch": "v6",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1318359375,
          "content": ".git\n.idea\n**/*.pyc\n**/*~\n**/*#\n.cache\n*.egg-info\npo\n**/node_modules\n.tmp\nindex.html\n*.key\n.vscode/\n.mypy_cache/\n.pytest_cache/\n.venv/\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1669921875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.py]\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3427734375,
          "content": ".idea\n*.pyc\n*~\n*#\n.DS_Store\n.cache\n*.egg-info\ndist\nbuild\n!preferences-src/build\n_build\n.build-checksum\npo\nnode_modules\n.tmp\n*.key\nlaunchpad.ssh.tar\n__pycache__\n.pytest_cache\n.pylintrc\n.mypy_cache\n.ruff_cache\n.vscode\n.tarignore\npackage-lock.json\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\ndata/preferences\n.venv\n/nix/result\n/nix/dev\nulauncher.1.gz\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.322265625,
          "content": "# Read the Docs configuration file for Sphinx projects\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n  jobs:\n    post_create_environment:\n      - python3 -m pip install -r docs/requirements.txt\n\nsphinx:\n  configuration: docs/conf.py\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.0625,
          "content": "Copyright (C) 2015 Aleksandr Gornostal <ulauncher.app@gmail.com>"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1533203125,
          "content": "## General communication guidelines\n\nUlauncher is a free, open source software project developed by a small team of volunteers and contributors.\n\nWe are here because we want Ulauncher to improve, and for that we have to:\n* Act respectful towards each other.\n* Give each other the benefit of the doubt.\n* Give and accept constructive feedback.\n* Avoid arguments.\n* Learn from past mistakes.\n* Focus on what is best, not just for us as individuals, but for the Ulauncher community.\n* Refrain from elevating the importance of ones own specific needs above all other concerns.\n* Leave aside anything that is unhelpful for the Ulauncher progress, such as politics or non-constructive rhetorics.\n\nWe will not tolerate harassment, personal attacks, derogatory comments, trolling, or uncivil behavior. Failure to comply will result in comments being hidden, moderated or removed. On very serious or repeat offenses users violating our terms will be blocked from the repository.\n\n### Asking for help or requesting changes\n\nThe maintainers and contributors want their time spent contributing to Ulauncher to be as productive and constructive as possible. Please respect this time when you are requesting help, improvements, or new features. Do your due diligence before you report issues or contact us asking for help. Read the actual error messages you are getting (if any), and don't ask us about things that are documented or previously covered. We have to prioritize tasks based on how helpful the reports were, and close issues that don't provide enough information.\n\n1. Our [Discussions](https://github.com/Ulauncher/Ulauncher/discussions) and [Issue tracker](https://github.com/Ulauncher/Ulauncher/issues) have many answers, in particular the [Troubleshooting](https://github.com/Ulauncher/Ulauncher/discussions/categories/troubleshooting) discussion category. Please use these before you ask for help. You can use the GitHub search box (located to the upper left on a desktop computer) to search all of these. Often you can find help or similar issues there rather than starting a new issue. If you can't find any information or references to your issue in our repository, then it's likely that the error is not directly with the Ulauncher code, but an issue with your system, or Ulauncher's dependencies on your system, but it may be good to create an issue or discussion anyway in case others have the same issue.\n2. Our [Developer resources](https://github.com/Ulauncher/Ulauncher/discussions/879) have more help to offer for extension developers, color theme developers and contributors.\n3. If you find an issue and want to show that you agree with a previous comment, use the :+1: reaction. Do not write a comment if you want to repeat something that has already been said or want to know when something will be implemented.\n4. We do listen to and appreciate constructive feedback, criticism and suggestions, but Ulauncher makes no money and all of our volunteers are limited to contributing in our spare time. Therefore you cannot expect or demand our time or attention. If you want an influence on the priority or direction of an issue or Uluncher in general, the only way is by actually volunteering your time to help out.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.0517578125,
          "content": "# Communication\n\nPlease read our General communication guidelines [here](CODE_OF_CONDUCT.md#General_communication_guidelines).\n\n## Code contributions\n\nThank you for your interest in contributing to Ulauncher! We very much appreciate it.\n\nIssues with the [contributor-friendly](https://github.com/Ulauncher/Ulauncher/labels/contributor-friendly) label are more straightforward to implement. Other issues may require in-depth knowledge of the Ulauncher architecture. Before you put the work in, you may want to ask about it in [Code Contributions](https://github.com/Ulauncher/Ulauncher/discussions/categories/code-contributions), to ensure that it's a feature or improvement we want.\n\nAlthough there are no releases for it yet as of writing this, all the active development is happening for Ulauncher [v6](https://github.com/Ulauncher/Ulauncher/milestone/7). So use the v6 (default) branch as the base branch and target for new pull requests, and check that your contributions haven't already been fixed there.\n\n### Set Up Development Environment\n\nFor the v6 branch you need the following to set up the local build environment:\n\n* Git\n* [Yarn](https://classic.yarnpkg.com/en/docs/install)\n* python3-setuptools (if you have pip, you have it already)\n* Application runtime dependencies (if you already installed Ulauncher you should have most of these, but **python-xlib is new for v6**)\n* Optionally install [pygobject-stubs](https://github.com/pygobject/pygobject-stubs). Note that pygobject-stubs can only be installed for Gtk3 OR Gtk4. The only way to switch is to reinstall. Ulauncher uses Gtk3, but Gtk4 is the default. Rather than requiring users to install it for Gtk3 we are currently ignoring the mypy errors for all the incompatible places.\n\n#### Distro specific instructions\n\n<details>\n  <summary>Ubuntu/Debian</summary>\n\n  Install the development dependencies:\n\n  ```sh\n  sudo apt update && sudo apt install git bash make sed yarnpkg python3-setuptools debhelper dh-python\n  ```\n\n  Install the Python testing packages (read about the `PIP_BREAK_SYSTEM_PACKAGES` flag [here](https://peps.python.org/pep-0668/)):\n\n  ```sh\n  PYGOBJECT_STUB_CONFIG=Gtk3,Gdk3,Soup2 PIP_BREAK_SYSTEM_PACKAGES=1 pip3 install -r requirements.txt\n  ```\n\n  If you don't have Ulauncher installed already, install the runtime dependencies as well (requires universe repo):\n\n  ```sh\n  sudo add-apt-repository universe\n  sudo apt install python3-{all,gi,gi-cairo,xlib} gobject-introspection \\\n    gir1.2-{glib-2.0,gtk-3.0,webkit2-4.0,gtklayershell-0.1}\n  ```\n\n</details>\n\n<details>\n  <summary>Arch</summary>\n\n  First, install your system updates:\n\n  ```sh\n  sudo pacman -Syu\n  ```\n\n  Install the development and testing dependencies:\n\n  ```sh\n  sudo pacman -Syu --needed git bash make sed yarn mypy ruff typos python-{build,black,pytest,pytest-mock,setuptools,lefthook}\n  ```\n\n  To get types from pygobject, you need [pygobject-stubs](https://github.com/pygobject/pygobject-stubs) for GTK3. There is a AUR package for this, but it's only for GTK4, so the pip install is recommended (read about the `PIP_BREAK_SYSTEM_PACKAGES` flag [here](https://peps.python.org/pep-0668/)):\n\n  ```sh\n  PYGOBJECT_STUB_CONFIG=Gtk3,Gdk3,Soup2 PIP_BREAK_SYSTEM_PACKAGES=1 pip install --no-cache-dir pygobject-stubs\n  ```\n\n  If you don't have Ulauncher installed already, install the runtime dependencies as well:\n\n  ```sh\n  sudo pacman -Syu --needed gtk3 webkit2gtk-4.1 gtk-layer-shell python-{cairo,gobject,xlib}\n  ```\n\n</details>\n\n<details>\n  <summary>Nix package manager / NixOS</summary>\n\n1. build your development interpreter with `make nix-build-dev`\n2. use the development interpreter (`./nix/dev/bin/python`) by either of:\n   * pointing your favorite IDE to use it, make sure it adds repository root to `PYTHONPATH`,\n   * using it directly from repository root (otherwise you will use the version of code built with environment),\n3. rebuild the interpreter when project dependencies change,\n\nAlternatively you can run the current code directly `make nix-run ARGS=\"<arg1> <arg2...>\"`, without any IDE completion.\n\nJetbrains IDEs will have trouble discovering GTK objects (`from gi.repository import ...` are underlined red).\nYou will need to instruct it to build stub files from binaries by:\n\n1. placing your cursor over red-underlined import,\n2. pressing `Alt+Enter` to invoke a dropdown menu with suggested fixes,\n3. selecting `Generate stubs for binary module gi.repository.Gtk`\n\n</details>\n\n#### Running the app from the local repository\n\n1. `git clone` the repository locally\n1. Open a terminal window and cd into the ulauncher repository root directory.\n1. Run `make run` to start the app, so you can test it. If you had Ulauncher running before, this command will also attempt to stop that instance first, because there can only be one Ulauncher instance running.\n1. When you are done testing or want to restart, press ctrl+c to stop the Ulauncher process. And you can then start it normally again (`systemctl --user start ulauncher` if uing systemd).\n\n### How to contribute\n\nUse the Ulauncher working branch (v6), and verify that the issue or feature hasn't already been resolved there.\n\n1. Follow the steps above to set up and test locally, but fork the Ulauncher repo and git clone from that fork instead (or change/add the remote to your fork).\n1. When you are ready to contribute code, create a new branch for your PR.\n1. Commit and push your changes. When possible, try to make your changes so that each commit changes just one thing, and please use [Conventional Commits](https://www.conventionalcommits.org/) for your commit messages.\n1. Create a pull request (provide the relevant information suggested by the template). Use the v6 branch as the base branch and target.\n\nCheck out our [Developer resources](https://github.com/Ulauncher/Ulauncher/discussions/879) for links for GTK/GOjbject documentation and similar.\n\nThere are some more helpful developer and maintainer commands provided by using our `make` targets. Run `make` to list them all.\n\nIf you have any questions, feel free to ask in our [Code Contributions](https://github.com/Ulauncher/Ulauncher/discussions/categories/code-contributions) Discussions.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.0947265625,
          "content": "FROM ubuntu:20.04\n# Run `make docker` to build this image\n\nLABEL maintainer=\"ulauncher.app@gmail.com\"\n\n# NOTE: Keep lines separate. One \"RUN\" per dependency/change\n# https://stackoverflow.com/a/47451019/633921\n\nENV LANG=C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt update --fix-missing\nRUN apt install -y tzdata\nRUN apt install -y keyboard-configuration\n\n# CLI dependencies for building and testing\nRUN apt install -y software-properties-common\nRUN apt install -y git\nRUN apt install -y vim\nRUN apt install -y curl\nRUN apt install -y wget\nRUN apt install -y xvfb\nRUN apt install -y help2man\nRUN apt install -y python3-venv\n\n# deb package build dependencies and helpers\nRUN apt install -y debhelper\nRUN apt install -y dh-python\nRUN apt install -y devscripts\nRUN apt install -y git-buildpackage\n\n# ubuntu launchpad upload dependencies\nRUN apt install -y dput\nRUN apt install -y python3-paramiko\n\n# App dependencies\nRUN apt install -y gobject-introspection\nRUN apt install -y python3-all\nRUN apt install -y python3-gi\nRUN apt install -y python3-gi-cairo\nRUN apt install -y gir1.2-glib-2.0\nRUN apt install -y gir1.2-gtk-3.0\nRUN apt install -y gir1.2-webkit2-4.0\n\n# Workaround only needed for 20.04 and older: https://github.com/pypa/setuptools/issues/2956\n# Replace with python3-setuptools after upgrading to 22.04\nRUN apt install -y python3\nRUN apt install -y python3-dev\nRUN apt install -y build-essential\nRUN apt install -y fdupes\nWORKDIR /root\nRUN git clone -b alvistack/v60.0.4 https://github.com/alvistack/pypa-setuptools.git\nWORKDIR /root/pypa-setuptools\nRUN find *.spec debian/rules -type f | xargs sed -i 's/export SETUPTOOLS_USE_DISTUTILS=stdlib && //g'\nRUN curl -skL https://raw.githubusercontent.com/pypa/distutils/69f8573354/_distutils_system_mod.py > /usr/lib/python3/dist-packages/_distutils_system_mod.py\nRUN git clean -xdf\nRUN tar zcvf ../python-setuptools_60.0.4.orig.tar.gz --exclude=.git .\nRUN debuild -uc -us\nWORKDIR /root\n\n# Nodejs/yarn (ubuntu 20.04 has too old nodejs version, but in 22.04 you just need to install yarnpkg)\nRUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash\nRUN apt install -y nodejs\nRUN npm install -g yarn\n\n# Clean up\nRUN apt update\nRUN apt autoremove -y\nRUN apt clean\n\nCOPY [ \"requirements.txt\", \"preferences-src/package.json\", \"preferences-src/yarn.lock\", \"./\" ]\nCOPY [ \"docs/requirements.txt\", \"./docs/\" ]\n\n# Update /etc/dput.cf to use sftp for upload to ppa.launchpad.net\nCOPY [ \"scripts/dput.cf\", \"/etc\" ]\n\nRUN apt install -y python3-pip\nRUN PYGOBJECT_STUB_CONFIG=Gtk3,Gdk3,Soup2 pip3 install -r requirements.txt\nRUN pip3 install -r docs/requirements.txt\n# Cache node_modules to make builds faster\nRUN yarnpkg\nRUN mv node_modules /var\n\n# Create container dir for the repo root dir to mount to\n# This is needed because dpkg-buildpackage is stupid and outputs are hard coded to be the parent dir\nRUN mkdir src\nRUN chmod 777 src\n\n# Create an unprivileged user to run as when testing and building locally (so generated files will not be owned by root on the host)\nRUN useradd ulauncher --shell /bin/bash --home-dir /home/ulauncher --create-home --uid 1000 --user-group --comment Ulauncher\n\nWORKDIR /src/ulauncher\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 32.1142578125,
          "content": "Copyright (C) 2015  Aleksandr Gornostal\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9072265625,
          "content": "[![Made in Ukraine](https://img.shields.io/badge/made_in-ukraine-ffd700.svg?labelColor=0057b7)](https://stand-with-ukraine.pp.ua)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n![Test Status](https://github.com/Ulauncher/Ulauncher/actions/workflows/tests.yml/badge.svg?branch=v6)\n\n#### ⚠️ This is the branch for the unreleased [v6](https://github.com/Ulauncher/Ulauncher/issues/869) release. If you want the v5 branch version, go [here](https://github.com/Ulauncher/Ulauncher/tree/v5).\nWe are currently working on Ulauncher v6, which is a huge rewrite. Until then we're only supporting the existing functionality in v5. No new features or improvements.\n\nWe are making pre-releases for Ulauncher 6, but the new extension API is not yet 100% set and further major changes may come.\n\n[Application Launcher for Linux 🐧](https://ulauncher.io)\n================================\n\nUlauncher is a fast application launcher for Linux. It's written in Python using GTK+, and features: App Search (fuzzy matching), Calculator, [Extensions](https://ext.ulauncher.io/), Shortcuts, File browser mode and [Custom Color Themes](https://docs.ulauncher.io/en/stable/themes/themes.html)\n\n| App Search | File Browser | Color Themes |\n---|---|---\n|![screenshot](https://i.imgur.com/8FpJLGG.png?1)|![screenshot](https://i.imgur.com/wJvXSmP.png?1)|![screenshot](https://i.imgur.com/2a4GCW7.png?1)|\n\nFor more info or download links see [ulauncher.io](https://ulauncher.io)\n\n\n### Run Ulauncher on startup\n\nIf your distribution uses [Systemd](https://www.freedesktop.org/wiki/Software/systemd/) and the packages includes [ulauncher.service](ulauncher.service), then you can run `ulauncher` on startup by running:\n\n```\nsystemctl --user enable --now ulauncher\n```\n\nIf not, then you can open Ulauncher and enable \"Launch at Login\" in the preferences.\n\n\n### Troubleshooting\n\nPlease read our [Troubleshooting](https://github.com/Ulauncher/Ulauncher/discussions/categories/troubleshooting) discussion category if you run into issues, and also check our other discussions and issues if you still need help after this.\n\n### Code Contributions\n\nPlease see our [Code Contributions](CONTRIBUTING.md) documentation.\n\n\n| Project | Contributor-friendly Issues |\n---|---\n| Ulauncher App | [![GitHub issues by-label](https://img.shields.io/github/issues/Ulauncher/Ulauncher/contributor-friendly.svg?color=3cf014&label=All%20contributor-friendly&style=for-the-badge)](https://github.com/Ulauncher/Ulauncher/labels/contributor-friendly) <br> [![GitHub issues by-label](https://img.shields.io/github/issues/Ulauncher/Ulauncher/Python.svg?color=5319e7&label=Python&style=for-the-badge)](https://github.com/Ulauncher/Ulauncher/labels/Python) <br> [![GitHub issues by-label](https://img.shields.io/github/issues/Ulauncher/Ulauncher/VueJS.svg?color=a553cc&label=VueJS&style=for-the-badge)](https://github.com/Ulauncher/Ulauncher/labels/VueJS) <br> [![GitHub issues by-label](https://img.shields.io/github/issues/Ulauncher/Ulauncher/Linux.svg?color=0e035e&label=Linux&style=for-the-badge)](https://github.com/Ulauncher/Ulauncher/labels/Linux)|\n| [Frontend for extensions website](https://github.com/Ulauncher/ext.ulauncher.io) <br> Uses ReactJS | [![GitHub issues by-label](https://img.shields.io/github/issues/Ulauncher/ext.ulauncher.io/contributor-friendly.svg?color=3cf014&label=contributor-friendly&style=for-the-badge)](https://github.com/Ulauncher/ext.ulauncher.io/labels/contributor-friendly)|\n| [API for extensions website](https://github.com/Ulauncher/ext-api.ulauncher.io) <br> Uses Python and bottle library | [![GitHub issues by-label](https://img.shields.io/github/issues/Ulauncher/ext-api.ulauncher.io/contributor-friendly.svg?color=3cf014&label=contributor-friendly&style=for-the-badge)](https://github.com/Ulauncher/ext-api.ulauncher.io/labels/contributor-friendly)|\n\n### License\n\nSee the [LICENSE](LICENSE) file for license rights and limitations (GNU GPL v3.0).\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.837890625,
          "content": "# This file has to exist for `pytest` to find the ulauncher module\n\nimport os\nimport sys\n\n# These paths shouldn't be written to, but if something goes wrong at least we won't overwrite user confs\nTEST_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), \"./.tmp/ulauncher_tests\"))\n\nmock_xdg_dirs = {\n    \"XDG_CONFIG_HOME\": f\"{TEST_ROOT}/.xdg-home-config\",\n    \"XDG_DATA_HOME\": f\"{TEST_ROOT}/.xdg-home-share\",\n    \"XDG_STATE_HOME\": f\"{TEST_ROOT}/.xdg-home-state\",\n}\n\nfor path in mock_xdg_dirs.values():\n    os.makedirs(path, exist_ok=True)\n\nos.environ.update(mock_xdg_dirs, ULAUNCHER_SYSTEM_DATA_DIR=f\"{os.path.dirname(__file__)}/data\")\n\n# prevent leaking pytest arguments to ulaunchers arg parser\n# this way is not recommended, but it works and avoids needing tons of fixtures\n# https://stackoverflow.com/q/18668947/633921\nsys.argv = [sys.argv[0]]\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.0634765625,
          "content": "{ pkgs ? import <nixpkgs> { }, ... }: pkgs.callPackage ./nix { }\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.513671875,
          "content": "{\n  \"nodes\": {\n    \"flake-parts\": {\n      \"inputs\": {\n        \"nixpkgs-lib\": \"nixpkgs-lib\"\n      },\n      \"locked\": {\n        \"lastModified\": 1706830856,\n        \"narHash\": \"sha256-a0NYyp+h9hlb7ddVz4LUn1vT/PLwqfrWYcHMvFB1xYg=\",\n        \"owner\": \"hercules-ci\",\n        \"repo\": \"flake-parts\",\n        \"rev\": \"b253292d9c0a5ead9bc98c4e9a26c6312e27d69f\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"flake-parts\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1707546158,\n        \"narHash\": \"sha256-nYYJTpzfPMDxI8mzhQsYjIUX+grorqjKEU9Np6Xwy/0=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"d934204a0f8d9198e1e4515dd6fec76a139c87f0\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs-lib\": {\n      \"locked\": {\n        \"dir\": \"lib\",\n        \"lastModified\": 1706550542,\n        \"narHash\": \"sha256-UcsnCG6wx++23yeER4Hg18CXWbgNpqNXcHIo5/1Y+hc=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"97b17f32362e475016f942bbdfda4a4a72a8a652\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"dir\": \"lib\",\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-parts\": \"flake-parts\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 0.67578125,
          "content": "{\n  inputs.nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n\n  outputs = inputs@{ self, flake-parts, ... }: flake-parts.lib.mkFlake { inherit inputs; } {\n    systems = [ \"x86_64-linux\" \"aarch64-linux\" \"aarch64-darwin\" \"x86_64-darwin\" ];\n    flake.overlays.default = final: prev: {\n      ulauncher6 = final.callPackage ./. { };\n    };\n    perSystem = { config, self', inputs', pkgs, system, ... }: {\n      _module.args.pkgs = import inputs.nixpkgs {\n        inherit system;\n        overlays = [ self.overlays.default ];\n      };\n      packages.default = pkgs.ulauncher6;\n      packages.ulauncher6 = pkgs.ulauncher6;\n      packages.development = pkgs.ulauncher6.passthru.env;\n    };\n  };\n}\n"
        },
        {
          "name": "io.ulauncher.Ulauncher.desktop",
          "type": "blob",
          "size": 0.3125,
          "content": "[Desktop Entry]\nType=Application\nVersion=1.5\nName=Ulauncher\nComment=Application launcher for Linux\nIcon=ulauncher\nGenericName=Launcher\nCategories=GNOME;GTK;Utility;\nDBusActivatable=true\nTerminal=false\nTryExec=ulauncher\nExec=gapplication launch io.ulauncher.Ulauncher\nSingleMainWindow=true\nX-GNOME-UsesNotifications=true\n"
        },
        {
          "name": "io.ulauncher.Ulauncher.service",
          "type": "blob",
          "size": 0.06640625,
          "content": "[D-BUS Service]\nName=io.ulauncher.Ulauncher\nExec=/usr/bin/ulauncher\n"
        },
        {
          "name": "lefthook.toml",
          "type": "blob",
          "size": 0.56640625,
          "content": "# NOTE: These scripts are intended to run very fast , not to become frustrating,\n# pytest was the clear bottleneck (and can't check only staged files), so it was not included.\n\nskip_lfs = true\n\n[pre-commit]\nparallel = true\n\n[pre-commit.commands.typos]\nglob = \"*\"\nrun = \"typos --force-exclude {staged_files}\"\n\n[pre-commit.commands.black]\nglob = \"*.py\"\nrun = \"black {staged_files}\"\nstage_fixed = true\n\n[pre-commit.commands.ruff]\nglob = \"*.py\"\nrun = \"ruff check --fix {staged_files}\"\nstage_fixed = true\n\n[pre-commit.commands.mypy]\nglob = \"ulauncher/*.py\"\nrun = \"mypy {staged_files}\"\n"
        },
        {
          "name": "makefile",
          "type": "blob",
          "size": 7.060546875,
          "content": ".ONESHELL:\nSHELL := bash\nINTERACTIVE := $(shell [ -t 0 ] && echo 1)\nDOCKER_IMAGE := ulauncher/build-image:6.0\nDOCKER_BIN = $(shell eval 'command -v podman || command -v docker')\nYARN_BIN = $(shell eval 'command -v yarn || command -v yarnpkg')\nROOT_DIR = $(dir $(realpath $(lastword $(MAKEFILE_LIST))))\nVERSION = $(shell eval 'python3 -c \"import ulauncher; print(ulauncher.version)\"')\nDPKG_ARGS := \"--post-clean --build=all --no-sign\"\nDEB_VERSION = $(subst -,~,$(VERSION))\nDEB_DISTRO = $(shell eval lsb_release -sc)\nDEB_PACKAGER_NAME := \"\" # Will default to the user full name if empty\nDEB_PACKAGER_EMAIL := ulauncher.app@gmail.com\n\n# cli font vars\nBOLD := \\\\e[1m\nGREEN := \\\\e[32m\nRED := \\\\e[31m\nRESET := \\\\e[0m\n\n# Bash scripting in Makefile guide:\n# 1. Either set `.ONESHELL:` (applies for all recipes) or write a single line\n#    (by escaping with backslash at the end of the line)\n# 2. Start every line with @ or it will print the line.\n#    (with `.ONESHELL:` or if you're escaping that applies ONLY to the first line)\n# 3. Use ${VAR} to use makefile variables and $$VAR for runtime/bash variables\n# 4. Instead of $(cmd) for subshells you need to run $(shell eval \"cmd\")\n# 5. You can't pass arguments. ie: `make run build` will run `make run`, then `make build`\n#    What you should do instead is to set override the vars `make run VAR=build`\n\n#=General Commands\n\n.PHONY: help version run docker\n\nhelp: # Shows this list of available actions (targets)\n\t@# Only includes targets with comments, but not if they have Commands with two ## chars\n\tsed -nr \\\n\t\t-e 's|^#=(.*)|\\n\\1:|p' \\\n\t\t-e 's|^([a-zA-Z-]*):([^#]*?\\s# (.*))| \\1\\x1b[35m - \\3\\x1b[0m|p' \\\n\t\t$(lastword $(MAKEFILE_LIST)) \\\n\t\t| expand -t20\n\nversion: # Print the Ulauncher version\n\t@echo ${VERSION}\n\nrun: prefs # Run ulauncher from source\n\t# If systemd unit running, stop it, else try killall. We want to make sure to be the main/daemon instance of Ulauncher\n\t@if [ -n $(shell eval \"command -v systemctl\") ] && [ \"inactive\" != $(shell eval \"systemctl --user is-active ulauncher\") ]; then\n\t\tsystemctl --user stop ulauncher\n\telse\n\t\tkillall -eq ulauncher || true\n\tfi\n\t./bin/ulauncher --dev\n\nrun-container: # Start a bash session in the Ulauncher Docker build container (Ubuntu)\n\t@set -euo pipefail\n\tSHELL_CMD=bash\n\tVOL_SUFFIX=\"\"\n\tif [ -z \"${DOCKER_BIN}\" ]; then\n\t\techo -e \"${BOLD}You need podman or docker to run this command${RESET}\"\n\t\texit 1\n\tfi\n\tif [[ \"${DOCKER_BIN}\" == $(shell eval \"command -v docker\") ]]; then\n\t\tSHELL_CMD=\"sudo -H -u ulauncher bash\"\n\t\tif [[ $$UID != 1000 ]]; then\n\t\t\tSHELL_CMD=\"usermod -u $$UID ulauncher; $$SHELL_CMD\"\n\t\tfi\n\t\tif [[ $(shell eval \"id -g\") != 1000 ]]; then\n\t\t\tSHELL_CMD=\"groupmod -g $(shell eval \"id -g\") ulauncher; $$SHELL_CMD\"\n\t\tfi\n\tfi\n\t# If SELinux is enabled, append \":z\" to get the right label\n\tif command -v selinuxenabled && selinuxenabled; then\n\t\tVOL_SUFFIX=\":z\"\n\tfi\n\t# port 3002 is used for developing Preferences UI\n\texec ${DOCKER_BIN} run \\\n\t\t--rm \\\n\t\t-it \\\n\t\t-v \"${PWD}:/src/ulauncher$$VOL_SUFFIX\" \\\n\t\t-v \"$$HOME/.bash_history:/home/ulauncher/.bash_history$$VOL_SUFFIX\" \\\n\t\t-p 3002:3002 \\\n\t\t--name ulauncher \\\n\t\t\"docker.io/${DOCKER_IMAGE}\" \\\n\t\tsh -c \"$$SHELL_CMD\";\n\n#=Lint Commands\n\n.PHONY: check black mypy ruff typos pytest test format\n\ncheck: black mypy ruff typos # Run all linters\n\ntest: check pytest # Run all linters and test\n\nblack: # Lint with black (formatting checker)\n\tblack --diff --check .\n\nmypy: # Lint with mypy (type checker)\n\tmypy ulauncher\n\nruff: # Lint with ruff\n\truff check .\n\ntypos: # Lint with typos (typo checker)\n\ttypos .\n\npytest: # Run unit tests\n\t@set -euo pipefail\n\tif [ -z $(shell eval \"command -v xvfb-run\") ]; then\n\t\tpytest -p no:cacheprovider tests\n\telse\n\t\techo -e \"xvfb-run detected. Running pytest in a virtual X server environment.\"\n\t\txvfb-run --auto-servernum -- pytest -p no:cacheprovider tests\n\tfi\n\nformat: # Auto format the code\n\tblack .\n\truff check . --fix\n\n#=Build Commands\n\n.PHONY: prefs docker docs sdist manpage deb nix-run nix-build-dev nix-build\n\ndocs: ## Build the API docs\n\t@set -euo pipefail\n\tcd docs\n\tsphinx-build -M html . ./_build\n\tif [ -n \"${INTERACTIVE}\" ]; then\n\t\tpython -m http.server -d _build/html\n\tfi\n\ndocker: # Build the docker image (only needed if you make changes to it)\n\tdocker build -t \"${DOCKER_IMAGE}\" .\n\nprefs: # Build the preferences web app\n\t@set -euo pipefail\n\tif [ ! -d \"preferences-src\" ]; then\n\t\techo -e \"${BOLD}${RED}preferences-src does not exist.${RESET}\"\n\t\texit 1\n\tfi\n\n\tif [ -z \"$(FORCE)\" ] && [ -d data/preferences ] && [ -z $(shell eval \"find preferences-src -newer data/preferences -print -quit\") ] ; then\n\t\techo -e \"${BOLD}Preferences build SKIPPED${RESET} - No changes since last build\"\n\t\texit 0\n\tfi\n\tcd preferences-src\n\t${YARN_BIN}\n\t${YARN_BIN} build\n\nsdist: manpage prefs # Build a source tarball\n\t@set -euo pipefail\n\t# See https://github.com/Ulauncher/Ulauncher/pull/1337 for why we're not using setuptools\n\t# copy gitignore to .tarignore, remove data/preferences and add others to ignore instead\n\tcat .gitignore | grep -v data/preferences | grep -v ulauncher.1.gz | cat <(echo -en \"preferences-src\\nscripts\\ntests\\ndebian\\ndocs\\n.github\\nconftest.py\\nDockerfile\\nCO*.md\\n.*ignore\\nmakefile\\nnix\\n.editorconfig\\nrequirements.txt\\n*.nix\\nflake.lock\\n\") - > .tarignore\n\tmkdir -p dist\n\t# create archive with .tarignore\n\ttar --transform 's|^\\.|ulauncher|' --exclude-vcs --exclude-ignore-recursive=.tarignore -zcf dist/ulauncher-${VERSION}.tar.gz .\n\trm .tarignore\n\techo -e \"Built source dist tarball to ${BOLD}${GREEN}./dist/ulauncher-${VERSION}.tar.gz${RESET}\"\n\ndeb: sdist # Build a deb package. Optionally override DEB_DISTRO arguments. Ex: $`make deb DEB_DISTRO=focal`\n\t@set -euo pipefail\n\texport NAME=${DEB_PACKAGER_NAME}\n\texport EMAIL=${DEB_PACKAGER_EMAIL}\n\tif [ -z $(shell eval \"command -v dpkg-buildpackage\") ]; then\n\t\techo -e \"${BOLD}${RED}You need dpkg-buildpackage to build the .deb${RESET}\"\n\t\texit 1\n\tfi\n\trm -rf dist/ulauncher_deb || true\n\ttar --strip-components=1 -xvf dist/ulauncher-${VERSION}.tar.gz --one-top-level=dist/ulauncher_deb\n\tcp -r debian dist/ulauncher_deb/\n\tcd dist/ulauncher_deb || exit\n\trm -f debian/changelog\n\tdch --create --no-multimaint --package ulauncher --newversion=\"${DEB_VERSION}\" --empty --distribution ${DEB_DISTRO}\n\techo ${DPKG_ARGS} | xargs dpkg-buildpackage\n\tcd -\n\trm -rf dist/ulauncher_deb\n\techo -e \"Package saved to ${BOLD}${GREEN}./dist/ulauncher_${DEB_VERSION}_all.deb${RESET}\"\n\nnix-run: # Build and run Ulauncher Nix package\n\texec nix run --show-trace --print-build-logs '.#default' -- $(ARGS)\n\nnix-build-dev: # Build Ulauncher Nix package for development\n\texec nix build --out-link nix/dev --show-trace --print-build-logs $(ARGS) '.#development'\n\nnix-build: # Build Ulauncher Nix package\n\texec nix build --out-link nix/result --show-trace --print-build-logs $(ARGS) '.#default'\n\nmanpage: # Generate manpage\n\t@if [ -z $(shell eval \"command -v help2man\") ]; then\n\t\techo -e \"${BOLD}${RED}You need help2man to (re)generate the manpage${RESET}\"\n\t\texit 1\n\tfi\n\thelp2man --section=1 --name=\"Feature rich application Launcher for Linux\" --no-info ./bin/ulauncher > ulauncher.1\n\techo -e \"Generated manpage to ${BOLD}${GREEN}./ulauncher.1${RESET}\"\n\tif [ -n \"${INTERACTIVE}\" ]; then\n\t\tman -l ulauncher.1\n\tfi\n"
        },
        {
          "name": "nix",
          "type": "tree",
          "content": null
        },
        {
          "name": "preferences-src",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.587890625,
          "content": "[build-system]\nrequires = [\"setuptools\", \"setuptools-scm\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"ulauncher\"\ndescription = \"Application launcher for Linux\"\nreadme = \"README.md\"\nrequires-python = \">=3.7\"\nlicense = {text = \"GPL-3\"}\nauthors = [\n  {name = \"Aleksandr Gornostal\"},\n  {name = \"Albin Larsson\"},\n  {name = \"Troy Curtis\"},\n]\nurls.Homepage = \"http://ulauncher.io/\"\nurls.Documentation = \"https://docs.ulauncher.io/\"\nurls.Repository = \"https://github.com/Ulauncher/Ulauncher.git\"\nurls.Issues = \"https://github.com/Ulauncher/Ulauncher/issues\"\nkeywords = [ \"linux\", \"desktop\", \"application\", \"launcher\", \"gtk\" ]\ndependencies = [ \"PyGObject\", \"pycairo\", \"python-xlib\" ]\ndynamic = [\"version\"]\n\n[tool.setuptools.dynamic]\nversion = {attr = \"ulauncher.version\"}\n\n[tool.black]\nline-length = 120\n\n[tool.mypy]\npython_version = \"3.8\"\nstrict = true\ndisable_error_code = \"import-untyped\"\nimplicit_reexport = true\ndisallow_untyped_calls = false\n\n[tool.pylint.MASTER]\nignore-patterns=\"ulauncher,docs,data,scripts,tests\"\n\n[tool.pylint.\"MESSAGES CONTROL\"]\ndisable=\"all\"\n\n[tool.typos.default]\nextend-ignore-re = [\n  # prevent correcting gir to git\n  \"gir1.2\",\n]\n\n[tool.typos.files]\nextend-exclude = [\"preferences-src/static\"]\n\n[tool.ruff]\nline-length = 120\ntarget-version = \"py37\" # py37 is the lowest supported option\nlint.ignore = [\n  \"A003\",     # Allow using same names as python internals for class methods that doesn't shadow global scope\n  \"RUF012\",   # Mostly false positives because we're deep cloning class vars when creating instances in our custom data class\n  \"TC001\", \"TC002\", \"TC003\", # Performance best practice that does nothing for our use\n  \"TD002\", \"TD003\" # Allow TODOs and FIXMEs without author and link\n]\nlint.select = [\n  \"A\",        # flake8-builtins\n  \"ARG\",      # flake8-unused-arguments\n  \"B\",        # flake8-bugbear\n  \"C4\",       # flake8-comprehensions\n  # \"DTZ\",    # flake8-datetimez (too focused on enforcing time zone argument, which we don't need)\n  \"E\",        # pycodestyle errors\n  \"EM\",       # flake8-errmsg\n  \"ERA\",      # eradicate (commented-out-code)\n  \"EXE\",      # flake8-executable\n  \"FA\",       # flake8-future-annotations\n  \"FLY\",      # flynt\n  \"F\",        # pyflakes\n  \"G\",        # flake8-logging-format\n  \"I\",        # isort\n  \"ICN\",      # flake8-import-conventions\n  \"INP\",      # flake8-no-pep420 (ban implicit namespace packages without __init__.py)\n  \"INT\",      # flake8-gettext\n  \"ISC\",      # flake8-implicit-str-concat\n  \"N\",        # pep8-naming\n  \"PGH\",      # pygrep-hooks\n  \"PIE\",      # flake8-pie\n  \"PL\",       # pylint (same as PLC+PLE+PLR+PLW)\n  \"PT\",       # flake8-pytest-style\n  # \"PTH\",    # flake8-use-pathlib (pathlib isn't always better imo)\n  \"PYI\",      # flake8-pyi\n  \"RET\",      # flake8-return\n  \"RSE\",      # flake8-raise\n  \"RUF\",      # Ruff-specific rules\n  \"SLF\",      # flake8-self\n  \"SIM\",      # flake8-simplify\n  \"T10\",      # flake8-debugger\n  \"T20\",      # flake8-print\n  \"TCH\",      # flake8-type-checking\n  \"TD\",       # flake8-todos\n  \"TID\",      # flake8-tidy-imports\n  \"TRY\",      # tryceratops\n  \"UP\",       # pyupgrade\n  \"W\",        # pycodestyle warnings\n  \"Q\",        # flake8-quotes\n]\n\n# Relax some linting rules for tests\n[tool.ruff.lint.per-file-ignores]\n\"tests/**/*.py\" = [\n  \"PLR2004\",    # Allow direct comparison with integers (magic-value)\n  \"SLF001\",     # Allow accessing private members (obj._hello)\n  \"T201\",       # Allow print statements\n]\n\n[tool.ruff.lint.pylint]\nmax-args = 10\n\n[tool.ruff.lint.flake8-pytest-style]\nfixture-parentheses = false\n\n[tool.ruff.lint.flake8-builtins]\nbuiltins-ignorelist = [\"id\"]\n\n[tool.pytest.ini_options]\nlog_cli = true\n\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0703125,
          "content": "black\nbuild\nlefthook\nmypy\nPyGObject-stubs\npytest\npytest-mock\nruff\ntypos\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.953125,
          "content": "#!/usr/bin/env python3\n\nfrom gzip import GzipFile\nfrom pathlib import Path\nfrom shutil import copyfileobj\n\nfrom setuptools import find_packages, setup\n\n\ndef gzip_file(source_file: str) -> str:\n    # This is actually must easier from the cli: python -m gzip --best ulauncher.1\n    output_file = f\"{source_file}.gz\"\n    dst_gzip = GzipFile(filename=output_file, mode=\"wb\", compresslevel=9)\n    with open(source_file, \"rb\") as src_file:\n        copyfileobj(src_file, dst_gzip)\n    dst_gzip.close()\n    return output_file\n\n\ndef data_files_from_path(target_path, source_path):\n    # Creates a list of valid entries for data_files weird custom format\n    # Recurses over the real_path and adds it's content to package_path\n    def _iter(directory):\n        for path in directory.iterdir():\n            resolved = path.resolve()\n            if resolved.is_dir():\n                yield from _iter(path)\n            if resolved.is_file():\n                yield path\n\n    start = Path.cwd() / source_path\n    for p in _iter(start.absolute()):\n        relative_file = p.relative_to(start)\n        yield f\"{target_path}/{relative_file.parent}\", [f\"{source_path}/{relative_file}\"]\n\n\nsetup(\n    packages=find_packages(exclude=[\"docs\", \"tests\", \"conftest.py\"]),\n    # These will be placed in /usr\n    data_files=[\n        (\"share/applications\", [\"io.ulauncher.Ulauncher.desktop\"]),\n        (\"share/dbus-1/services\", [\"io.ulauncher.Ulauncher.service\"]),\n        (\"share/man/man1\", [gzip_file(\"ulauncher.1\")]),\n        (\"lib/systemd/user\", [\"ulauncher.service\"]),\n        (\"share/licenses/ulauncher\", [\"LICENSE\"]),\n        # Recursively add data as share/ulauncher, then icons\n        *data_files_from_path(\"share/ulauncher\", \"data\"),\n        *data_files_from_path(\"share/icons/hicolor/scalable\", \"data/icons/system\"),\n    ],\n    # can also be specified in pyproject.toml as tool.setuptools.script-files,\n    # but it seems to be both \"discouraged\" and broken\n    scripts=[\"bin/ulauncher\", \"bin/ulauncher-toggle\"],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "ulauncher.1",
          "type": "blob",
          "size": 0.7822265625,
          "content": ".\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.\n.TH ULAUNCHER \"1\" \"December 2024\" \"Ulauncher 6.0.0-beta17\" \"User Commands\"\n.SH NAME\nUlauncher \\- Feature rich application Launcher for Linux\n.SH DESCRIPTION\nusage: ulauncher [\\-h] [\\-v] [\\-\\-version] [\\-\\-daemon] [\\-\\-dev]\n.PP\nUlauncher is a GTK application launcher with support for extensions, shortcuts\n(scripts), calculator, file browser and custom themes.\n.SS \"options:\"\n.TP\n\\fB\\-h\\fR, \\fB\\-\\-help\\fR\nShow this help message and exit\n.TP\n\\fB\\-v\\fR, \\fB\\-\\-verbose\\fR\nShow debug log messages\n.TP\n\\fB\\-\\-version\\fR\nShow version number and exit\n.TP\n\\fB\\-\\-daemon\\fR\nRun Ulauncher as a background process, without initially\nshowing the window\n.TP\n\\fB\\-\\-dev\\fR\nDeveloper mode (enables verbose logging and Preferences UI\ncontext menu)\n"
        },
        {
          "name": "ulauncher.service",
          "type": "blob",
          "size": 0.2607421875,
          "content": "[Unit]\nDescription=Ulauncher service\nDocumentation=https://ulauncher.io/\nAfter=graphical-session.target\n\n[Service]\nBusName=io.ulauncher.Ulauncher\nType=dbus\nRestart=always\nRestartSec=1\nExecStart=/usr/bin/ulauncher --daemon\n\n[Install]\nWantedBy=graphical-session.target\n"
        },
        {
          "name": "ulauncher",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}