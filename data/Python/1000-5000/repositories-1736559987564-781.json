{
  "metadata": {
    "timestamp": 1736559987564,
    "page": 781,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rlcode/reinforcement-learning",
      "stars": 3445,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": "*.project\n*.pydevproject\n.idea/\n.DS_Store\n__pycache__\n./Code 2. Cartpole/6. A3C/Cartpole_A3C.pgy"
        },
        {
          "name": "1-grid-world",
          "type": "tree",
          "content": null
        },
        {
          "name": "2-cartpole",
          "type": "tree",
          "content": null
        },
        {
          "name": "3-atari",
          "type": "tree",
          "content": null
        },
        {
          "name": "4-gym",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2017 RLCode\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.2001953125,
          "content": "<p align=\"center\"><img width=\"90%\" src=\"images/Reinforcement-Learning.png\"></p>\n\n--------------------------------------------------------------------------------\n\n> Minimal and clean examples of reinforcement learning algorithms presented by [RLCode](https://rlcode.github.io) team. [[한국어]](https://github.com/rlcode/reinforcement-learning-kr)\n>\n> Maintainers - [Woongwon](https://github.com/dnddnjs), [Youngmoo](https://github.com/zzing0907), [Hyeokreal](https://github.com/Hyeokreal), [Uiryeong](https://github.com/wooridle), [Keon](https://github.com/keon)\n\nFrom the basics to deep reinforcement learning, this repo provides easy-to-read code examples. One file for each algorithm.\nPlease feel free to create a [Pull Request](https://github.com/rlcode/reinforcement-learning/pulls), or open an [issue](https://github.com/rlcode/reinforcement-learning/issues)!\n\n## Dependencies\n1. Python 3.5\n2. Tensorflow 1.0.0\n3. Keras\n4. numpy\n5. pandas\n6. matplot\n7. pillow\n8. Skimage\n9. h5py\n\n### Install Requirements\n```\npip install -r requirements.txt\n```\n\n## Table of Contents\n\n**Grid World** - Mastering the basics of reinforcement learning in the simplified world called \"Grid World\"\n\n- [Policy Iteration](./1-grid-world/1-policy-iteration)\n- [Value Iteration](./1-grid-world/2-value-iteration)\n- [Monte Carlo](./1-grid-world/3-monte-carlo)\n- [SARSA](./1-grid-world/4-sarsa)\n- [Q-Learning](./1-grid-world/5-q-learning)\n- [Deep SARSA](./1-grid-world/6-deep-sarsa)\n- [REINFORCE](./1-grid-world/7-reinforce)\n\n**CartPole** - Applying deep reinforcement learning on basic Cartpole game.\n\n- [Deep Q Network](./2-cartpole/1-dqn)\n- [Double Deep Q Network](./2-cartpole/2-double-dqn)\n- [Policy Gradient](./2-cartpole/3-reinforce)\n- [Actor Critic (A2C)](./2-cartpole/4-actor-critic)\n- [Asynchronous Advantage Actor Critic (A3C)](./2-cartpole/5-a3c)\n\n**Atari** - Mastering Atari games with Deep Reinforcement Learning\n\n- **Breakout** - [DQN](./3-atari/1-breakout/breakout_dqn.py), [DDQN](./3-atari/1-breakout/breakout_ddqn.py) [Dueling DDQN](./3-atari/1-breakout/breakout_ddqn.py) [A3C](./3-atari/1-breakout/breakout_a3c.py)\n- **Pong** - [Policy Gradient](./3-atari/2-pong/pong_reinforce.py)\n\n**OpenAI GYM** - [WIP]\n\n- Mountain Car - [DQN](./4-gym/1-mountaincar)\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1328125,
          "content": "Keras==2.0.3\nnumpy==1.12.1\npandas==0.19.2\nmatplotlib==2.0.0\ntensorflow==1.0.0\nPillow==4.1.0\ngym==0.8.1\nh5py==2.7.0\nscikit-image==0.13.0\n"
        },
        {
          "name": "wiki",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}