{
  "metadata": {
    "timestamp": 1736559998357,
    "page": 797,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "polarsource/polar",
      "stars": 3425,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2587890625,
          "content": "# http://editorconfig.org\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\ninsert_final_newline = true\ncharset = utf-8\nend_of_line = lf\n\n[*.md]\nindent_size = 4\n\n[*.py]\nindent_size = 4\n\n[*.mustache]\ninsert_final_newline = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.828125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.env.*\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n!.env.template\n!.env.testing\n.env.devcontainer\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# Playground file\nplayground.py\n\n.DS_Store\n.pnpm-store\n\n# Secrets\n.secrets/\n\n.jwks.json\n*.mmdb\nsupervisord.pid\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.0966796875,
          "content": "cask \"docker\"\n\n# Python dependencies\nbrew \"pyenv\"\nbrew \"uv\"\n\n# TypeScript dependencies\nbrew \"pnpm\"\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.35546875,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at conduct@polar.sh.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n\n"
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 5.576171875,
          "content": "# Development\n\nPolar's stack consists of the following elements:\n\n* A backend written in Python, exposing a REST API and workers\n* A frontend written in JavaScript\n* A PostgreSQL database\n* A Redis database\n* An S3-compatible storage\n\n```mermaid\nflowchart TD\n    subgraph \"Backend\"\n        API[\"Rest API\"]\n        POSTGRESQL[\"PostgreSQL\"]\n        REDIS[\"Redis\"]\n        S3[\"S3 Storage\"]\n        WORKER[\"Worker\"]\n        WORKER_GITHUB[\"Worker GitHub\"]\n    end\n    subgraph \"Frontend\"\n        WEB[\"Web client\"]\n    end\n    GITHUB_WH[\"GitHub Webhooks\"]\n    STRIPE_WH[\"Stripe Webhooks\"]\n    USERS[\"Users\"]\n\n    WEB --> API\n    API --> POSTGRESQL\n    API --> REDIS\n    REDIS <--> WORKER\n    REDIS <--> WORKER_GITHUB\n    WORKER --> POSTGRESQL\n    WORKER_GITHUB --> POSTGRESQL\n    API --> S3\n    WEB --> S3\n\n    GITHUB_WH -.-> API\n    STRIPE_WH -.-> API\n    USERS -.-> API\n    USERS -.-> WEB\n```\n\n## Prerequisites\n\nPolar needs a [Python 3.12](https://www.python.org/downloads/) and [Node.js 18](https://nodejs.org/en/download/package-manager) installations.\n\n## Setup environment\n\n> [!TIP]\n> Want to get started quickly? Use GitHub Codespaces.\n>\n> [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/polarsource/polar?machine=standardLinux32gb)\n\n### Setup environment variables\n\nFor the Polar stack to run properly, it needs quite a bunch of settings defined as environment variables. To ease things, we provide a script to bootstrap them. It requires [uv](https://docs.astral.sh/uv/getting-started/installation/) to be installed on your system.\n\n```sh\n./dev/setup-environment\n```\nOnce done, the script will automatically create `server/.env` and `clients/apps/web/.env.local` files with the necessary environment variables.\n\n**Optional: setup GitHub App**\n\nIf you want to work with GitHub login and issue funding, you'll need to have a [GitHub App](https://docs.github.com/en/apps/creating-github-apps/about-creating-github-apps/about-creating-github-apps) for your development environment. Our script is able to help in this task by passing the following parameters:\n\n```sh\n./dev/setup-environment --setup-github-app --backend-external-url mydomain.ngrok.dev\n```\n\nNote that you'll need a valid external URL that'll route to your development server. For this task, we recommend to use [ngrok](https://ngrok.com/).\n\nYour browser will open a new page and you'll be prompted to **create a GitHub App**. You can just proceed, all the necessary configuration is already done automatically. The script will then add the necessary values to the environment files.\n\n> [!TIP]\n> If you run on **GitHub Codespaces**, you can just run it like this:\n> ```sh\n> ./dev/setup-environment --setup-github-app\n> ```\n> The script will automatically use your external GitHub Codespace URL.\n\n**Optional: setup Stripe**\n\nCurrently, this setup script doesn't support to create a [Stripe Sandbox](https://docs.stripe.com/sandboxes). If you want a ready-to-use Stripe Sandbox, contact us and we'll happily provide you one.\n\n### Setup backend\n\n> [!TIP]\n> If you run on **GitHub Codespaces**, you can **skip this step**. This is already done for you.\n\nSetting up the backend consists of basically three things:\n\n**1. Start the development containers**\n\nThis will start PostgreSQL, Redis and Minio (S3 storage) containers. You'll need to have [Docker](https://docs.docker.com/get-started/) installed.\n\n```sh\ncd server\n```\n\n```sh\ndocker compose up -d\n```\n\n**2. Install Python dependencies**\n\nWe use [uv](https://docs.astral.sh/uv/) to manage our Python dependencies. Make sure it's installed on your system.\n\n```sh\nuv sync\n```\n\n### Setup frontend\n\n> [!TIP]\n> If you run on **GitHub Codespaces**, you can **skip this step**. This is already done for you.\n\n**1. Install JavaScript dependencies**\n\nWe use [pnpm](https://pnpm.io/installation) to manage our JavaScript dependencies. Make sure it's installed on your system.\n\n```sh\ncd clients\n```\n\n```sh\npnpm install\n```\n\n## Start environment\n\n> [!TIP]\n> Use several terminal tabs to run things in parallel.\n\n### Start backend\n\nThe backend consists of an API server, a general-purpose worker and a worker dedicated to GitHub synchronization. You can run them like this:\n\n```sh\ncd server\n```\n\n**1. Apply the database migrations**\n\n```sh\nuv run task db_migrate\n```\n\n> [!NOTE]\n> You don't necessarily need to run it each time you start the server, but it's a good idea to regularly do it nonetheless.\n\n**2. Start server and workers**\n\n```sh\nuv run task api\n```\n\n```sh\nuv run task worker\n```\n\nBy default, the API server will be available at [http://127.0.0.1:8000](http://127.0.0.1:8000).\n\n> [!TIP]\n> The processes will restart automatically if you make changes to the code.\n\n### Start frontend\n\nThe frontend mainly consists of a web client server, plus other projects useful for testing or examples. You can run them like this:\n\n```sh\ncd clients\n```\n\n```sh\npnpm run dev\n```\n\nBy default, the web client will be available at [http://127.0.0.1:3000](http://127.0.0.1:3000).\n\n> [!TIP]\n> The processes will restart automatically if you make changes to the code.\n\n> [!NOTE]\n> On **GitHub Codespaces**, both API backend and web frontend will be routed on the 8080 port.\n\n## Work with emails\n\nWe have a mechanism to render emails into a file and preview it in the browser. If changes are made to the codebase, they are automatically refreshed.\n\nThis can be triggered with the following commands:\n\n### Order confirmation email\n\n```bash\nuv run task watch_email email_order_confirmation\n```\n\n### Subscription confirmation email\n\n```bash\nuv run task watch_email email_subscription_confirmation\n```\n\n> [!NOTE]\n> Other emails are not yet supported, but can be added if needed.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.51171875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n\n   Copyright 2023 Polar Software Inc\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.580078125,
          "content": "<p align=\"center\">\n\n  <a href=\"https://polar.sh\">\n      <img src=\"https://github.com/user-attachments/assets/89a588e5-0c58-429a-8bbe-20f70af41372\" />\n  </a>\n\n\n</p>\n\n<div align=\"center\">\n\n<a href=\"https://www.producthunt.com/posts/polar-5?embed=true&utm_source=badge-top-post-badge&utm_medium=badge&utm_souce=badge-polar&#0045;5\" target=\"_blank\"><img src=\"https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=484271&theme=dark&period=daily\" alt=\"Polar - An&#0032;open&#0032;source&#0032;monetization&#0032;platform&#0032;for&#0032;developers | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>  <a href=\"https://www.producthunt.com/posts/polar-5?embed=true&utm_source=badge-top-post-topic-badge&utm_medium=badge&utm_souce=badge-polar&#0045;5\" target=\"_blank\"><img src=\"https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=484271&theme=dark&period=monthly&topic_id=267\" alt=\"Polar - An&#0032;open&#0032;source&#0032;monetization&#0032;platform&#0032;for&#0032;developers | Product Hunt\" style=\"width: 250px; height: 54px;\" width=\"250\" height=\"54\" /></a>\n\n</div>\n\n<hr />\n<div align=\"center\">\n\n\n<a href=\"https://polar.sh\">Website</a>\n<span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n<a href=\"https://polar.sh/polarsource\">Blog</a>\n<span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n<a href=\"https://polar.sh/docs\">Docs</a>\n<span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n<a href=\"https://polar.sh/docs/api\">API Reference</a>\n\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/Pnhfz3UThd\">\n    <img src=\"https://img.shields.io/badge/chat-on%20discord-7289DA.svg\" alt=\"Discord Chat\" />\n  </a>\n\n  <a href=\"https://twitter.com/intent/follow?screen_name=polar_sh\">\n    <img src=\"https://img.shields.io/twitter/follow/polar_sh.svg?label=Follow%20@polar_sh\" alt=\"Follow @polar_sh\" />\n  </a>\n</p>\n</div>\n<hr />\n\n## Polar: Open source Lemon Squeezy & Paddle alternative\nFocus on building your passion, while we focus on the infrastructure to get you paid.\n\n- Sell SaaS and digital products in minutes\n- All-in-one funding & monetization platform for developers.\n- Sell access to GitHub repositories, Discord Support channels, File Downloads, License Keys & much more with Digital Products & Subscriptions.\n- Set up crowdfunding on your GitHub issues\n- We're the merchant of record handling the...\n  - ...boilerplate (billing, receipts, customer accounts etc)\n  - ...headaches (sales tax, VAT)\n\n## Pricing\n\n- 4% + 40¢\n- No fixed monthly costs\n- Additional fees may apply. [Read more](https://polar.sh/docs/fees)\n\n## Roadmap, Issues & Feature Requests\n**🎯 Upcoming milestones.** [Check out what we're building towards](https://github.com/polarsource/polar/issues/3242)\n\n**💬 Shape the future of Polar with us.** [Join our Discord](https://discord.gg/Pnhfz3UThd)\n\n**🐛 Found a bug?** [Submit it here](https://github.com/polarsource/polar/issues)\n\n**🔓 Found a security vulnerability?** We greatly appreciate responsible and private disclosures. See [Security](./SECURITY.md)\n\n### Polar API & SDK\n\nYou can integrate Polar on your docs, sites or services using our [Public API](https://docs.polar.sh/api/) and [Webhook API](https://docs.polar.sh/developers/webhooks).\n\nWe also maintain SDKs for the following languages:\n\n* JavaScript (Node.js and browsers): [polarsource/polar-js](https://github.com/polarsource/polar-js)\n* Python: [polarsource/polar-python](https://github.com/polarsource/polar-python)\n\n## Contributions\n\nOur [`DEVELOPMENT.md`](./DEVELOPMENT.md) file contains everything you need to know to configure your development environment.\n\n> [!TIP]\n> Want to get started quickly? Use GitHub Codespaces.\n>\n> [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/polarsource/polar?machine=standardLinux32gb)\n\n### Contributors\n<a href=\"https://github.com/polarsource/polar/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=polarsource/polar\" />\n</a>\n\n\n## Monorepo\n* **[server](./server/README.md)** – Python / FastAPI / Arq / SQLAlchemy (PostgreSQL) / Redis\n* **[clients](./clients/README.md)** – Turborepo\n  * [web](./clients/apps/web) (Dashboard) – NextJS (TypeScript)\n  * [polarkit](./clients/packages/polarkit) - Shared React components\n\n<sub>♥️🙏 To our `pyproject.toml` friends: [FastAPI](https://github.com/tiangolo/fastapi), [Pydantic](https://github.com/pydantic/pydantic), [Arq](https://github.com/samuelcolvin/arq), [SQLAlchemy](https://github.com/sqlalchemy/sqlalchemy), [Githubkit](https://github.com/yanyongyu/githubkit), [sse-starlette](https://github.com/sysid/sse-starlette), [Uvicorn](https://github.com/encode/uvicorn), [httpx-oauth](https://github.com/frankie567/httpx-oauth), [jinja](https://github.com/pallets/jinja), [blinker](https://github.com/pallets-eco/blinker), [pyjwt](https://github.com/jpadilla/pyjwt), [Sentry](https://github.com/getsentry/sentry) + more</sub><br />\n<sub>♥️🙏 To our `package.json` friends: [Next.js](https://github.com/vercel/next.js/), [TanStack Query](https://github.com/TanStack/query), [tailwindcss](https://github.com/tailwindlabs/tailwindcss), [zustand](https://github.com/pmndrs/zustand), [openapi-typescript-codegen](https://github.com/ferdikoomen/openapi-typescript-codegen), [axios](https://github.com/axios/axios), [radix-ui](https://github.com/radix-ui/primitives), [cmdk](https://github.com/pacocoursey/cmdk), [framer-motion](https://github.com/framer/motion) + more</sub><br />\n<sub>♥️🙏 To [IPinfo](https://ipinfo.io) that provides IP address data to help us geolocate customers during checkout.</sub>\n\n## License\nLicensed under [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.4052734375,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nIf you believe you have found a security vulnerability in Polar, we encourage you to responsibly disclose this and not open a public issue. Please report it using [GitHub Security Advisory](https://github.com/polarsource/polar/security/advisories/new) tool, to ensure confidentiality and security.\n\nWe'll review it as soon as possible and publish a fix accordingly.\n"
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.5537109375,
          "content": "{\n  \"nodes\": {\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1724224976,\n        \"narHash\": \"sha256-Z/ELQhrSd7bMzTO8r7NZgi9g5emh+aRKoCdaAv5fiO0=\",\n        \"owner\": \"nixos\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"c374d94f1536013ca8e92341b540eba4c22f9c62\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nixos\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 0.5537109375,
          "content": "{\n  description = \"Super simple starting point for Polar development flake\";\n\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs?ref=nixos-unstable\";\n  };\n\n  outputs = { self, nixpkgs, ... }@inputs:\n    let\n      system = \"aarch64-darwin\";\n      pkgs = import nixpkgs { inherit system; config.allowUnfree = true; };\n    in {\n      devShells.${system}.default = pkgs.mkShell {\n        nativeBuildInputs = with pkgs; [\n          nodejs_18\n          corepack\n\n          python312\n\n          # Webhooks\n          stripe-cli\n          ngrok\n        ];\n      };\n    };\n}\n"
        },
        {
          "name": "polar.code-workspace",
          "type": "blob",
          "size": 0.5673828125,
          "content": "{\n\t\"folders\": [\n\t\t{\n\t\t\t\"path\": \"clients\",\n\t\t\t\"name\": \"clients\"\n\t\t},\n\t\t{\n\t\t\t\"path\": \"server\",\n\t\t\t\"name\": \"server\"\n\t\t},\n\t\t{\n\t\t\t\"path\": \".\",\n\t\t\t\"name\": \"root\",\n\t\t}\n\t],\n\t\"settings\": {\n\t\t// Set the Python interpreter globally, so VS Code stops complaining about invalid interpreter on other folders\n\t\t// Also fix the Ruff extension\n\t\t\"python.defaultInterpreterPath\": \"${workspaceFolder:server}/.venv/bin/python\",\n    // Use our own version of mypy, to avoid cache conflicts between the extension version and our own version\n\t\t\"mypy-type-checker.importStrategy\": \"fromEnvironment\",\n\t}\n}\n"
        },
        {
          "name": "render.yaml",
          "type": "blob",
          "size": 16.189453125,
          "content": "version: \"1\"\n\nservices:\n  ################\n  ## PRODUCTION ##\n  ################\n\n  # API\n  - type: web\n    name: api\n    runtime: image\n    image:\n      url: ghcr.io/polarsource/polar:latest\n      creds:\n        fromRegistryCreds:\n          name: Registry Credentials (by fvoron)\n    plan: standard\n    preDeployCommand: \"uv run task pre_deploy\"\n    region: ohio\n    healthCheckPath: /healthz\n    autoDeploy: false # deploys are triggered by github actions\n    domains:\n      - api.polar.sh\n    envVars:\n      - key: WEB_CONCURRENCY\n        value: 2\n      - key: FORWARDED_ALLOW_IPS\n        value: '*'\n      - key: POLAR_ALLOWED_HOSTS\n        value: '[\"polar.sh\",\"docs.polar.sh\"]'\n      - key: POLAR_CORS_ORIGINS\n        value: '[\"https://dashboard.polar.sh\", \"https://github.com\" , \"https://polar.sh\", \"https://docs.polar.sh\", \"https://polar-polar-sh.vercel.app\"]'\n      - key: POLAR_POSTGRES_DATABASE\n        fromDatabase:\n          name: db\n          property: database\n      - key: POLAR_POSTGRES_HOST\n        fromDatabase:\n          name: db\n          property: host\n      - key: POLAR_POSTGRES_PORT\n        fromDatabase:\n          name: db\n          property: port\n      - key: POLAR_POSTGRES_PWD\n        fromDatabase:\n          name: db\n          property: password\n      - key: POLAR_POSTGRES_USER\n        fromDatabase:\n          name: db\n          property: user\n      - key: POLAR_REDIS_HOST\n        fromService:\n          type: redis\n          name: redis\n          property: host\n      - key: POLAR_REDIS_PORT\n        fromService:\n          type: redis\n          name: redis\n          property: port\n      - key: POLAR_REDIS_DB\n        value: 0\n      - fromGroup: aws-s3-production\n      - fromGroup: google-production\n      - fromGroup: github-production\n      - fromGroup: backend-production\n      - fromGroup: stripe-production\n      - fromGroup: logfire-server\n\n  # Workers\n  - type: web # Use a web service to allow health checks\n    name: worker\n    runtime: image\n    image:\n      url: ghcr.io/polarsource/polar:latest\n      creds:\n        fromRegistryCreds:\n          name: Registry Credentials (by fvoron)\n    plan: standard\n    dockerCommand: uv run supervisord -c supervisord.worker.conf\n    healthCheckPath: /main/healthz\n    region: ohio\n    numInstances: 1\n    autoDeploy: false # deploys are triggered by github actions\n    envVars:\n      - key: POLAR_POSTGRES_DATABASE\n        fromDatabase:\n          name: db\n          property: database\n      - key: POLAR_POSTGRES_HOST\n        fromDatabase:\n          name: db\n          property: host\n      - key: POLAR_POSTGRES_PORT\n        fromDatabase:\n          name: db\n          property: port\n      - key: POLAR_POSTGRES_PWD\n        fromDatabase:\n          name: db\n          property: password\n      - key: POLAR_POSTGRES_USER\n        fromDatabase:\n          name: db\n          property: user\n      - key: POLAR_REDIS_HOST\n        fromService:\n          type: redis\n          name: redis\n          property: host\n      - key: POLAR_REDIS_PORT\n        fromService:\n          type: redis\n          name: redis\n          property: port\n      - key: POLAR_REDIS_DB\n        value: 0\n      - fromGroup: google-production\n      - fromGroup: github-production\n      - fromGroup: backend-production\n      - fromGroup: stripe-production\n      - fromGroup: logfire-worker\n\n  - type: web # Use a web service to allow health checks\n    name: worker-github\n    runtime: image\n    image:\n      url: ghcr.io/polarsource/polar:latest\n      creds:\n        fromRegistryCreds:\n          name: Registry Credentials (by fvoron)\n    plan: standard\n    dockerCommand: uv run supervisord -c supervisord.worker_github.conf\n    healthCheckPath: /github/healthz\n    region: ohio\n    numInstances: 1\n    autoDeploy: false # deploys are triggered by github actions\n    envVars:\n      - key: POLAR_POSTGRES_DATABASE\n        fromDatabase:\n          name: db\n          property: database\n      - key: POLAR_POSTGRES_HOST\n        fromDatabase:\n          name: db\n          property: host\n      - key: POLAR_POSTGRES_PORT\n        fromDatabase:\n          name: db\n          property: port\n      - key: POLAR_POSTGRES_PWD\n        fromDatabase:\n          name: db\n          property: password\n      - key: POLAR_POSTGRES_USER\n        fromDatabase:\n          name: db\n          property: user\n      - key: POLAR_REDIS_HOST\n        fromService:\n          type: redis\n          name: redis\n          property: host\n      - key: POLAR_REDIS_PORT\n        fromService:\n          type: redis\n          name: redis\n          property: port\n      - key: POLAR_REDIS_DB\n        value: 0\n      - fromGroup: google-production\n      - fromGroup: github-production\n      - fromGroup: backend-production\n      - fromGroup: stripe-production\n\n  - type: redis\n    name: redis\n    plan: standard\n    region: ohio\n    maxmemoryPolicy: noeviction\n    ipAllowList: []\n\n  ################\n  ##  SANDBOX   ##\n  ################\n\n  # API\n  - type: web\n    name: api-sandbox\n    runtime: image\n    image:\n      url: ghcr.io/polarsource/polar:latest\n      creds:\n        fromRegistryCreds:\n          name: Registry Credentials (by fvoron)\n    plan: standard\n    preDeployCommand: \"uv run task pre_deploy\"\n    region: ohio\n    numInstances: 1\n    healthCheckPath: /healthz\n    autoDeploy: false # deploys are triggered by github actions\n    domains:\n      - sandbox-api.polar.sh\n    envVars:\n      - key: WEB_CONCURRENCY\n        value: 2\n      - key: FORWARDED_ALLOW_IPS\n        value: '*'\n      - key: POLAR_ALLOWED_HOSTS\n        value: '[\"sandbox.polar.sh\"]'\n      - key: POLAR_CORS_ORIGINS\n        value: '[\"https://sandbox.polar.sh\", \"https://github.com\"]'\n      - key: POLAR_POSTGRES_DATABASE\n        value: polar_sandbox\n      - key: POLAR_POSTGRES_HOST\n        fromDatabase:\n          name: db\n          property: host\n      - key: POLAR_POSTGRES_PORT\n        fromDatabase:\n          name: db\n          property: port\n      - key: POLAR_POSTGRES_PWD\n        fromDatabase:\n          name: db\n          property: password\n      - key: POLAR_POSTGRES_USER\n        fromDatabase:\n          name: db\n          property: user\n      - key: POLAR_REDIS_HOST\n        fromService:\n          type: redis\n          name: redis\n          property: host\n      - key: POLAR_REDIS_PORT\n        fromService:\n          type: redis\n          name: redis\n          property: port\n      - key: POLAR_REDIS_DB\n        value: 1\n      - fromGroup: aws-s3-sandbox\n      - fromGroup: google-sandbox\n      - fromGroup: github-sandbox\n      - fromGroup: backend-sandbox\n      - fromGroup: stripe-sandbox\n\n  # Workers\n  - type: web # Use a web service to allow health checks\n    name: worker-sandbox\n    runtime: image\n    image:\n      url: ghcr.io/polarsource/polar:latest\n      creds:\n        fromRegistryCreds:\n          name: Registry Credentials (by fvoron)\n    plan: standard\n    dockerCommand: uv run supervisord -c supervisord.worker.conf\n    healthCheckPath: /main/healthz\n    region: ohio\n    numInstances: 1\n    autoDeploy: false # deploys are triggered by github actions\n    envVars:\n      - key: POLAR_POSTGRES_DATABASE\n        value: polar_sandbox\n      - key: POLAR_POSTGRES_HOST\n        fromDatabase:\n          name: db\n          property: host\n      - key: POLAR_POSTGRES_PORT\n        fromDatabase:\n          name: db\n          property: port\n      - key: POLAR_POSTGRES_PWD\n        fromDatabase:\n          name: db\n          property: password\n      - key: POLAR_POSTGRES_USER\n        fromDatabase:\n          name: db\n          property: user\n      - key: POLAR_REDIS_HOST\n        fromService:\n          type: redis\n          name: redis\n          property: host\n      - key: POLAR_REDIS_PORT\n        fromService:\n          type: redis\n          name: redis\n          property: port\n      - key: POLAR_REDIS_DB\n        value: 1\n      - fromGroup: google-sandbox\n      - fromGroup: github-sandbox\n      - fromGroup: backend-sandbox\n      - fromGroup: stripe-sandbox\n\n  - type: web # Use a web service to allow health checks\n    name: worker-github-sandbox\n    runtime: image\n    image:\n      url: ghcr.io/polarsource/polar:latest\n      creds:\n        fromRegistryCreds:\n          name: Registry Credentials (by fvoron)\n    plan: standard\n    dockerCommand: uv run supervisord -c supervisord.worker_github.conf\n    healthCheckPath: /github/healthz\n    region: ohio\n    numInstances: 1\n    autoDeploy: false # deploys are triggered by github actions\n    envVars:\n      - key: POLAR_POSTGRES_DATABASE\n        value: polar_sandbox\n      - key: POLAR_POSTGRES_HOST\n        fromDatabase:\n          name: db\n          property: host\n      - key: POLAR_POSTGRES_PORT\n        fromDatabase:\n          name: db\n          property: port\n      - key: POLAR_POSTGRES_PWD\n        fromDatabase:\n          name: db\n          property: password\n      - key: POLAR_POSTGRES_USER\n        fromDatabase:\n          name: db\n          property: user\n      - key: POLAR_REDIS_HOST\n        fromService:\n          type: redis\n          name: redis\n          property: host\n      - key: POLAR_REDIS_PORT\n        fromService:\n          type: redis\n          name: redis\n          property: port\n      - key: POLAR_REDIS_DB\n        value: 1\n      - fromGroup: google-sandbox\n      - fromGroup: github-sandbox\n      - fromGroup: backend-sandbox\n      - fromGroup: stripe-sandbox\n\ndatabases:\n  - name: db\n    databaseName: polar_cpit\n    user: polar_cpit_user\n    plan: basic-1gb\n    diskSizeGB: 16\n    region: ohio\n    postgresMajorVersion: \"15\"\n    readReplicas:\n    - name: polar-replica\n\nenvVarGroups:\n  - name: google-production\n    envVars:\n      - key: POLAR_GOOGLE_CLIENT_ID\n        sync: false\n      - key: POLAR_GOOGLE_CLIENT_SECRET\n        sync: false\n\n  - name: backend-production\n    envVars:\n      - key: POLAR_USER_SESSION_COOKIE_DOMAIN\n        value: polar.sh\n      - key: POLAR_BASE_URL\n        value: https://api.polar.sh/v1\n      - key: POLAR_CURRENT_JWK_KID\n        sync: false\n      - key: POLAR_DEBUG\n        value: 0\n      - key: POLAR_DISCORD_BOT_TOKEN\n        sync: false\n      - key: POLAR_DISCORD_CLIENT_ID\n        sync: false\n      - key: POLAR_DISCORD_CLIENT_SECRET\n        sync: false\n      - key: POLAR_DISCORD_WEBHOOK_URL\n        sync: false\n      - key: POLAR_EMAIL_SENDER\n        value: resend\n      - key: POLAR_EMAIL_FROM_NAME\n        value: Polar\n      - key: POLAR_EMAIL_FROM_EMAIL_ADDRESS\n        value: noreply@notifications.polar.sh\n      - key: POLAR_ENV\n        value: production\n      - key: POLAR_FRONTEND_BASE_URL\n        value: https://polar.sh\n      - key: POLAR_CHECKOUT_BASE_URL\n        value: https://buy.polar.sh/{client_secret}\n      - key: POLAR_GITHUB_APP_NAMESPACE\n        value: polar-sh\n      - key: POLAR_GITHUB_BADGE_EMBED\n        value: 1\n      - key: POLAR_GITHUB_POLAR_USER_ACCESS_TOKEN\n        sync: false\n      - key: POLAR_JWKS\n        value: /etc/secrets/jwks.json\n      - key: POLAR_LOG_LEVEL\n        value: INFO\n      - key: POLAR_LOOPS_API_KEY\n        sync: false\n      - key: POLAR_POSTHOG_PROJECT_API_KEY\n        sync: false\n      - key: POLAR_RESEND_API_KEY\n        sync: false\n      - key: POLAR_SECRET\n        sync: false\n      - key: POLAR_SENTRY_DSN\n        sync: false\n      - key: POLAR_PLAIN_REQUEST_SIGNING_SECRET\n        sync: false\n      - key: POLAR_PLAIN_TOKEN\n        sync: false\n      - key: POLAR_TESTING\n        value: 0\n\n  - name: aws-s3-production\n    envVars:\n      - key: POLAR_AWS_ACCESS_KEY_ID\n        sync: false\n      - key: POLAR_AWS_REGION\n        value: us-east-2\n      - key: POLAR_AWS_SECRET_ACCESS_KEY\n        sync: false\n      - key: POLAR_AWS_SIGNATURE_VERSION\n        value: v4\n      - key: POLAR_S3_FILES_BUCKET_NAME\n        value: polar-production-files\n      - key: POLAR_S3_FILES_DOWNLOAD_SALT\n        sync: false\n      - key: POLAR_S3_FILES_DOWNLOAD_SECRET\n        sync: false\n      - key: POLAR_S3_FILES_PRESIGN_TTL\n        value: 600\n      - key: POLAR_S3_FILES_PUBLIC_BUCKET_NAME\n        value: polar-public-files\n\n  - name: github-production\n    envVars:\n      - key: POLAR_GITHUB_APP_IDENTIFIER\n        sync: false\n      - key: POLAR_GITHUB_APP_PRIVATE_KEY\n        sync: false\n      - key: POLAR_GITHUB_APP_WEBHOOK_SECRET\n        sync: false\n      - key: POLAR_GITHUB_CLIENT_ID\n        sync: false\n      - key: POLAR_GITHUB_CLIENT_SECRET\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_APP_IDENTIFIER\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_APP_NAMESPACE\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_APP_PRIVATE_KEY\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_CLIENT_ID\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_CLIENT_SECRET\n        sync: false\n\n  - name: stripe-production\n    envVars:\n      - key: POLAR_STRIPE_CONNECT_WEBHOOK_SECRET\n        sync: false\n      - key: POLAR_STRIPE_SECRET_KEY\n        sync: false\n      - key: POLAR_STRIPE_WEBHOOK_SECRET\n        sync: false\n\n  - name: google-sandbox\n    envVars:\n      - key: POLAR_GOOGLE_CLIENT_ID\n        sync: false\n      - key: POLAR_GOOGLE_CLIENT_SECRET\n        sync: false\n\n  - name: backend-sandbox\n    envVars:\n      - key: POLAR_USER_SESSION_COOKIE_KEY\n        value: polar_sandbox_session\n      - key: POLAR_USER_SESSION_COOKIE_DOMAIN\n        value: polar.sh\n      - key: POLAR_BASE_URL\n        value: https://sandbox-api.polar.sh/v1\n      - key: POLAR_CURRENT_JWK_KID\n        sync: false\n      - key: POLAR_DEBUG\n        value: 0\n      - key: POLAR_DISCORD_BOT_TOKEN\n        sync: false\n      - key: POLAR_DISCORD_CLIENT_ID\n        sync: false\n      - key: POLAR_DISCORD_CLIENT_SECRET\n        sync: false\n      - key: POLAR_DISCORD_WEBHOOK_URL\n        sync: false\n      - key: POLAR_EMAIL_SENDER\n        value: resend\n      - key: POLAR_EMAIL_FROM_NAME\n        value: \"[SANDBOX] Polar\"\n      - key: POLAR_EMAIL_FROM_EMAIL_ADDRESS\n        value: noreply@notifications.sandbox.polar.sh\n      - key: POLAR_ENV\n        value: sandbox\n      - key: POLAR_FRONTEND_BASE_URL\n        value: https://sandbox.polar.sh\n      - key: POLAR_CHECKOUT_BASE_URL\n        value: https://sandbox-api.polar.sh/v1/checkout-links/{client_secret}/redirect\n      - key: POLAR_GITHUB_APP_NAMESPACE\n        value: polar-sandbox\n      - key: POLAR_GITHUB_BADGE_EMBED\n        value: 1\n      - key: POLAR_GITHUB_POLAR_USER_ACCESS_TOKEN\n        sync: false\n      - key: POLAR_JWKS\n        value: /etc/secrets/jwks.json\n      - key: POLAR_LOG_LEVEL\n        value: INFO\n      - key: POLAR_LOOPS_API_KEY\n        sync: false\n      - key: POLAR_POSTHOG_PROJECT_API_KEY\n        sync: false\n      - key: POLAR_RESEND_API_KEY\n        sync: false\n      - key: POLAR_SECRET\n        sync: false\n      - key: POLAR_SENTRY_DSN\n        sync: false\n      - key: POLAR_TESTING\n        value: 0\n\n  - name: aws-s3-sandbox\n    envVars:\n      - key: POLAR_AWS_ACCESS_KEY_ID\n        sync: false\n      - key: POLAR_AWS_REGION\n        value: us-east-2\n      - key: POLAR_AWS_SECRET_ACCESS_KEY\n        sync: false\n      - key: POLAR_AWS_SIGNATURE_VERSION\n        value: v4\n      - key: POLAR_S3_FILES_BUCKET_NAME\n        value: polar-sandbox-files\n      - key: POLAR_S3_FILES_DOWNLOAD_SALT\n        sync: false\n      - key: POLAR_S3_FILES_DOWNLOAD_SECRET\n        sync: false\n      - key: POLAR_S3_FILES_PRESIGN_TTL\n        value: 600\n      - key: POLAR_S3_FILES_PUBLIC_BUCKET_NAME\n        value: polar-public-sandbox-files\n\n  - name: github-sandbox\n    envVars:\n      - key: POLAR_GITHUB_APP_IDENTIFIER\n        sync: false\n      - key: POLAR_GITHUB_APP_PRIVATE_KEY\n        sync: false\n      - key: POLAR_GITHUB_APP_WEBHOOK_SECRET\n        sync: false\n      - key: POLAR_GITHUB_CLIENT_ID\n        sync: false\n      - key: POLAR_GITHUB_CLIENT_SECRET\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_APP_IDENTIFIER\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_APP_NAMESPACE\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_APP_PRIVATE_KEY\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_CLIENT_ID\n        sync: false\n      - key: POLAR_GITHUB_REPOSITORY_BENEFITS_CLIENT_SECRET\n        sync: false\n\n  - name: stripe-sandbox\n    envVars:\n      - key: POLAR_STRIPE_CONNECT_WEBHOOK_SECRET\n        sync: false\n      - key: POLAR_STRIPE_SECRET_KEY\n        sync: false\n      - key: POLAR_STRIPE_WEBHOOK_SECRET\n        sync: false\n\n  - name: logfire-server\n    envVars:\n      - key: POLAR_LOGFIRE_TOKEN\n        sync: false\n\n  - name: logfire-worker\n    envVars:\n      - key: POLAR_LOGFIRE_TOKEN\n        sync: false\n"
        },
        {
          "name": "sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}