{
  "metadata": {
    "timestamp": 1736559840756,
    "page": 587,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shinnytech/tqsdk-python",
      "stars": 3730,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0439453125,
          "content": "*.script filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.46875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\n!tqsdk/lib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\nchromedriver\ngeckodriver\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndoc/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n.idea/\n.vscode/\n.reports/\n.DS_Store\n\n#node js dir\nnode_modules/\nweb/tests/e2e/reports/\n\n# local env files\n.env.local\n.env.*.local\n\n# Log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nselenium-debug.log\nchromedriver.log\ngeckodriver.log\n\n# Editor directories and files\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.4677734375,
          "content": "# 代码规范\n\n  + 要求遵循 PEP-8 但不强制要求单行 80 个字符以内，原因见 https://lkml.org/lkml/2020/5/29/1038\n  + 日志应输出到 stderr 或文件, 并允许通过配置/选项关闭或重定向\n  + 所有输入输出都应该通过接口完成，不应 print 屏幕，不应产生文档中没有提到的副作用\n  + 不应给用户惊喜，任何可能有副作用的操作都应由用户明确许可\n  + 尽量保持兼容性，不应随意 break 他人的代码\n\n# commit规范\n\n一个提交说明应当包含3个部分：标题（必写，包含模块和主题），正文（可选）和尾注（可选），三个部分间分别用一个空行分隔，如下所示:\n```\nmodule: subject\n\nbody\n\nfooter\n```\n\n## 标题\n标题的格式为 模块名称: 主题，末尾不加标点符号。其中，模块名称为py文件路径，主题应该是一句简要的话，说明本次提交做了什么。\n\n## 正文\n正文是可选部分。当提交涉及的内容比较复杂时，可以在正文部分详细描述本次提交“是什么”和“为什么”的问题。写正文时，请注意以下问题:\n  + 读者未必准确解决的问题是什么。**即使问题在 issue tracker 中已经写明，也应把问题再描述一遍**，并可以在尾注部分引用对应问题编号\n  + 如果你做了关键性的决策，比如选择了解决方案A而非B，请写下你做此选择的原因\n  + 如果判定提交代码的正确性，需要依赖某些信息（例如根据交易所的某业务规则变更公告修改算法，则这个公告内容就是关键信息），这些信息又没有写入代码注释中，那么应该在这里写明\n  + 如果本次提交会带来某些副作用（比如修正某BUG，但会使内存占用升高一倍），请务必明确写出\n\n## 尾注\n尾注是可选部分。在尾注部分，标记与此次 commit 相关的 issue id, 使用以下标志：\n  + fixes: #XXX 解决了 XXX 所提及的问题\n  + see also: #XXX 本次提交与 XXX 有关\n  \n## 提交说明示例\n\nhttps://github.com/golang/go/commit/be64a19d99918c843f8555aad580221207ea35bc\n```\ncmd/compile, cmd/link, runtime: make defers low-cost through inline code and extra funcdata\n\nGenerate inline code at defer time to save the args of defer calls to unique\n(autotmp) stack slots, and generate inline code at exit time to check which defer\ncalls were made and make the associated function/method/interface calls. We\nremember that a particular defer statement was reached by storing in the deferBits\nvariable (always stored on the stack). At exit time, we check the bits of the\ndeferBits variable to determine which defer function calls to make (in reverse\norder). These low-cost defers are only used for functions where no defers\nappear in loops. In addition, we don't do these low-cost defers if there are too\nmany defer statements or too many exits in a function (to limit code increase).\n\nWhen a function uses open-coded defers, we produce extra\nFUNCDATA_OpenCodedDeferInfo information that specifies the number of defers, and\nfor each defer, the stack slots where the closure and associated args have been\nstored. The funcdata also includes the location of the deferBits variable.\nTherefore, for panics, we can use this funcdata to determine exactly which defers\nare active, and call the appropriate functions/methods/closures with the correct\narguments for each active defer.\n\nIn order to unwind the stack correctly after a recover(), we need to add an extra\ncode segment to functions with open-coded defers that simply calls deferreturn()\nand returns. This segment is not reachable by the normal function, but is returned\nto by the runtime during recovery. We set the liveness information of this\ndeferreturn() to be the same as the liveness at the first function call during the\nlast defer exit code (so all return values and all stack slots needed by the defer\ncalls will be live).\n\nI needed to increase the stackguard constant from 880 to 896, because of a small\namount of new code in deferreturn().\n\nThe -N flag disables open-coded defers. '-d defer' prints out the kind of defer\nbeing used at each defer statement (heap-allocated, stack-allocated, or\nopen-coded).\n\nCost of defer statement  [ go test -run NONE -bench BenchmarkDefer$ runtime ]\n  With normal (stack-allocated) defers only:         35.4  ns/op\n  With open-coded defers:                             5.6  ns/op\n  Cost of function call alone (remove defer keyword): 4.4  ns/op\n\nText size increase (including funcdata) for go binary without/with open-coded defers:  0.09%\n\nThe average size increase (including funcdata) for only the functions that use\nopen-coded defers is 1.1%.\n\nThe cost of a panic followed by a recover got noticeably slower, since panic\nprocessing now requires a scan of the stack for open-coded defer frames. This scan\nis required, even if no frames are using open-coded defers:\n\nCost of panic and recover [ go test -run NONE -bench BenchmarkPanicRecover runtime ]\n  Without open-coded defers:        62.0 ns/op\n  With open-coded defers:           255  ns/op\n\nA CGO Go-to-C-to-Go benchmark got noticeably faster because of open-coded defers:\n\nCGO Go-to-C-to-Go benchmark [cd misc/cgo/test; go test -run NONE -bench BenchmarkCGoCallback ]\n  Without open-coded defers:        443 ns/op\n  With open-coded defers:           347 ns/op\n\nUpdates #14939 (defer performance)\nUpdates #34481 (design doc)\n\nChange-Id: I63b1a60d1ebf28126f55ee9fd7ecffe9cb23d1ff\nReviewed-on: https://go-review.googlesource.com/c/go/+/202340\nReviewed-by: Austin Clements <austin@google.com>\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0693359375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright ShinnyTech\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1953125,
          "content": "recursive-exclude * __pycache__\nrecursive-exclude tqsdk/test *\nrecursive-include tqsdk/web *\nexclude tqsdk/*.c tqsdk/tools/*.c\ninclude tqsdk/tools/dead_ins.lzma\ninclude tqsdk/expired_quotes.json.lzma\n"
        },
        {
          "name": "PKG-INFO",
          "type": "blob",
          "size": 5.671875,
          "content": "Metadata-Version: 2.1\nName: tqsdk\nVersion: 3.7.6\nSummary: TianQin SDK\nHome-page: https://www.shinnytech.com/tqsdk\nAuthor: TianQin\nAuthor-email: tianqincn@gmail.com\nLicense: UNKNOWN\nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 3\nClassifier: License :: OSI Approved :: Apache Software License\nClassifier: Operating System :: OS Independent\nRequires-Python: >=3.7\nDescription-Content-Type: text/markdown\nLicense-File: LICENSE\n\n<p align=\"center\">\n  <img src =\"https://raw.githubusercontent.com/shinnytech/tqsdk-python/master/doc/images/tqsdk_new_logo.png\"/>\n</p>\n<p align=\"center\">\n    <img src =\"https://img.shields.io/pypi/v/tqsdk?color=blueviolet\">\n    <img src =\"https://img.shields.io/badge/platform-windows|linux|macos-green.svg\"/>\n    <img src =\"https://img.shields.io/badge/python-3.7+-blue.svg\" />\n    <img src =\"https://img.shields.io/pypi/dm/tqsdk?color=yellowgreen\">\n    <img src =\"https://img.shields.io/github/license/shinnytech/tqsdk-python.svg?color=orange\"/>\n</p>\n\nTqSdk 天勤量化交易策略程序开发包\n====================================\nTqSdk 是一个由[信易科技](https://www.shinnytech.com)发起并贡献主要代码的开源 python 库. \n依托[快期多年积累成熟的交易及行情服务器体系](https://www.shinnytech.com/diff), TqSdk 支持用户使用极少的代码量构建各种类型的量化交易策略程序, \n并提供包含期货、期权、股票的 历史数据-实时数据-开发调试-策略回测-模拟交易-实盘交易-运行监控-风险管理 全套解决方案.\n\n``` {.sourceCode .python}\nfrom tqsdk import TqApi, TqAuth, TqAccount, TargetPosTask\n\napi = TqApi(TqAccount(\"H海通期货\", \"4003242\", \"123456\"), auth=TqAuth(\"快期账户\", \"账户密码\"))      # 创建 TqApi 实例, 指定交易账户\nq_1910 = api.get_quote(\"SHFE.rb1910\")                         # 订阅近月合约行情\nt_1910 = TargetPosTask(api, \"SHFE.rb1910\")                    # 创建近月合约调仓工具\nq_2001 = api.get_quote(\"SHFE.rb2001\")                         # 订阅远月合约行情\nt_2001 = TargetPosTask(api, \"SHFE.rb2001\")                    # 创建远月合约调仓工具\n\nwhile True:\n  api.wait_update()                                           # 等待数据更新\n  spread = q_1910[\"last_price\"] - q_2001[\"last_price\"]        # 计算近月合约-远月合约价差\n  print(\"当前价差:\", spread)\n  if spread > 250:\n    print(\"价差过高: 空近月，多远月\")                            \n    t_1910.set_target_volume(-1)                              # 要求把1910合约调整为空头1手\n    t_2001.set_target_volume(1)                               # 要求把2001合约调整为多头1手\n  elif spread < 200:\n    print(\"价差回复: 清空持仓\")                               # 要求把 1910 和 2001合约都调整为不持仓\n    t_1910.set_target_volume(0)\n    t_2001.set_target_volume(0)\n```\n\n要快速了解如何使用TqSdk, 可以访问我们的 [十分钟快速入门指南](https://doc.shinnytech.com/tqsdk/latest/quickstart.html).\n\n\nArchitecture\n---------------\n<img alt=\"系统架构图\" src=\"https://raw.githubusercontent.com/shinnytech/tqsdk-python/master/doc/arch.svg?sanitize=true\">\n\n* [行情网关 (Open Md Gateway)](https://github.com/shinnytech/open-md-gateway) 负责提供实时行情和历史数据\n* [交易中继网关 (Open Trade Gateway)](https://github.com/shinnytech/open-trade-gateway) 负责连接到期货公司交易系统\n* 这两个网关统一以 [Diff协议](https://doc.shinnytech.com/diff/latest) 对下方提供服务\n* TqSdk按照Diff协议连接到行情网关和交易中继网关, 实现行情和交易功能\n\n\nFeatures\n---------------\nTqSdk 提供的功能可以支持从简单到复杂的各类策略程序.\n\n* **公司级数据运维**，提供当前所有可交易合约从上市开始的 **全部Tick数据和K线数据**\n* 支持市场上90%的期货公司 **实盘交易**\n* 支持 **模拟交易**\n* 支持 **Tick级和K线级回测**, 支持 **复杂策略回测**\n* 提供近百个 **技术指标函数及源码**\n* 用户无须建立和维护数据库, 行情和交易数据全在 **内存数据库** , 无访问延迟\n* 优化支持 **pandas** 和 **numpy** 库\n* 无强制框架结构, 支持任意复杂度的策略, 在一个交易策略程序中使用多个品种的K线/实时行情并交易多个品种\n* 配合开发者支持工具，能够进行**交易信号打点**，支持**自定义指标画图**\n\nInstallation\n-------------------------------------------------\nTqSdk 仅支持 Python 3.7 及更高版本. 要安装 TqSdk, 可使用 pip:\n\n``` {.sourceCode .bash}\n$ pip install tqsdk\n```\n\n\nDocumentation\n-------------------------------------------------\n在线阅读HTML版本文档: https://doc.shinnytech.com/tqsdk/latest\n\n知乎账户【天勤量化】：https://www.zhihu.com/org/tian-qin-liang-hua/activities\n\n天勤AI助手：https://udify.app/chat/im02prcHNEOVbPAx  解释函数，编写demo策略，分析报错原因，它都可以做到！\n\n用户交流QQ群: **611806823** (目前只允许给我们点过STAR的同学加入, 加群时请提供github用户名)\n\n\t\nGui\n-------------------------------------------------\nTqSdk本身自带的web_gui功能，简单一行参数即可支持调用图形化界面，详情参考[web_gui](https://doc.shinnytech.com/pysdk/latest/usage/web_gui.html) \n<img alt=\"TqSdk web_gui\" src=\"https://raw.githubusercontent.com/shinnytech/tqsdk-python/master/doc/images/web_gui_backtest.png\">\n\nAbout us\n-------------------------------------------------\n[信易科技](https://www.shinnytech.com) 是专业的期货软件供应商和交易所授权行情服务商. 旗下的快期系列产品已为市场服务超过10年. TqSdk 是[公司开源计划](https://www.shinnytech.com/diff)的一部分. \n\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.2373046875,
          "content": "<p align=\"center\">\n  <img src =\"https://raw.githubusercontent.com/shinnytech/tqsdk-python/master/doc/images/tqsdk_new_logo.png\"/>\n</p>\n<p align=\"center\">\n    <img src =\"https://img.shields.io/pypi/v/tqsdk?color=blueviolet\">\n    <img src =\"https://img.shields.io/badge/platform-windows|linux|macos-green.svg\"/>\n    <img src =\"https://img.shields.io/badge/python-3.7+-blue.svg\" />\n    <img src =\"https://img.shields.io/pypi/dm/tqsdk?color=yellowgreen\">\n    <img src =\"https://img.shields.io/github/license/shinnytech/tqsdk-python.svg?color=orange\"/>\n</p>\n\nTqSdk 天勤量化交易策略程序开发包\n====================================\nTqSdk 是一个由[信易科技](https://www.shinnytech.com)发起并贡献主要代码的开源 python 库. \n依托[快期多年积累成熟的交易及行情服务器体系](https://www.shinnytech.com/diff), TqSdk 支持用户使用极少的代码量构建各种类型的量化交易策略程序, \n并提供包含期货、期权、股票的 历史数据-实时数据-开发调试-策略回测-模拟交易-实盘交易-运行监控-风险管理 全套解决方案.\n\n``` {.sourceCode .python}\nfrom tqsdk import TqApi, TqAuth, TqAccount, TargetPosTask\n\napi = TqApi(TqAccount(\"H海通期货\", \"4003242\", \"123456\"), auth=TqAuth(\"快期账户\", \"账户密码\"))      # 创建 TqApi 实例, 指定交易账户\nq_1910 = api.get_quote(\"SHFE.rb1910\")                         # 订阅近月合约行情\nt_1910 = TargetPosTask(api, \"SHFE.rb1910\")                    # 创建近月合约调仓工具\nq_2001 = api.get_quote(\"SHFE.rb2001\")                         # 订阅远月合约行情\nt_2001 = TargetPosTask(api, \"SHFE.rb2001\")                    # 创建远月合约调仓工具\n\nwhile True:\n  api.wait_update()                                           # 等待数据更新\n  spread = q_1910[\"last_price\"] - q_2001[\"last_price\"]        # 计算近月合约-远月合约价差\n  print(\"当前价差:\", spread)\n  if spread > 250:\n    print(\"价差过高: 空近月，多远月\")                            \n    t_1910.set_target_volume(-1)                              # 要求把1910合约调整为空头1手\n    t_2001.set_target_volume(1)                               # 要求把2001合约调整为多头1手\n  elif spread < 200:\n    print(\"价差回复: 清空持仓\")                               # 要求把 1910 和 2001合约都调整为不持仓\n    t_1910.set_target_volume(0)\n    t_2001.set_target_volume(0)\n```\n\n要快速了解如何使用TqSdk, 可以访问我们的 [十分钟快速入门指南](https://doc.shinnytech.com/tqsdk/latest/quickstart.html).\n\n\nArchitecture\n---------------\n<img alt=\"系统架构图\" src=\"https://raw.githubusercontent.com/shinnytech/tqsdk-python/master/doc/arch.svg?sanitize=true\">\n\n* [行情网关 (Open Md Gateway)](https://github.com/shinnytech/open-md-gateway) 负责提供实时行情和历史数据\n* [交易中继网关 (Open Trade Gateway)](https://github.com/shinnytech/open-trade-gateway) 负责连接到期货公司交易系统\n* 这两个网关统一以 [Diff协议](https://doc.shinnytech.com/diff/latest) 对下方提供服务\n* TqSdk按照Diff协议连接到行情网关和交易中继网关, 实现行情和交易功能\n\n\nFeatures\n---------------\nTqSdk 提供的功能可以支持从简单到复杂的各类策略程序.\n\n* **公司级数据运维**，提供当前所有可交易合约从上市开始的 **全部Tick数据和K线数据**\n* 支持市场上90%的期货公司 **实盘交易**\n* 支持 **模拟交易**\n* 支持 **Tick级和K线级回测**, 支持 **复杂策略回测**\n* 提供近百个 **技术指标函数及源码**\n* 用户无须建立和维护数据库, 行情和交易数据全在 **内存数据库** , 无访问延迟\n* 优化支持 **pandas** 和 **numpy** 库\n* 无强制框架结构, 支持任意复杂度的策略, 在一个交易策略程序中使用多个品种的K线/实时行情并交易多个品种\n* 配合开发者支持工具，能够进行**交易信号打点**，支持**自定义指标画图**\n\nInstallation\n-------------------------------------------------\nTqSdk 仅支持 Python 3.7 及更高版本. 要安装 TqSdk, 可使用 pip:\n\n``` {.sourceCode .bash}\n$ pip install tqsdk\n```\n\n\nDocumentation\n-------------------------------------------------\n在线阅读HTML版本文档: https://doc.shinnytech.com/tqsdk/latest\n\n知乎账户【天勤量化】：https://www.zhihu.com/org/tian-qin-liang-hua/activities\n\n天勤AI助手：https://udify.app/chat/im02prcHNEOVbPAx  解释函数，编写demo策略，分析报错原因，它都可以做到！\n\n用户交流QQ群: **611806823** (目前只允许给我们点过STAR的同学加入, 加群时请提供github用户名)\n\n\t\nGui\n-------------------------------------------------\nTqSdk本身自带的web_gui功能，简单一行参数即可支持调用图形化界面，详情参考[web_gui](https://doc.shinnytech.com/pysdk/latest/usage/web_gui.html) \n<img alt=\"TqSdk web_gui\" src=\"https://raw.githubusercontent.com/shinnytech/tqsdk-python/master/doc/images/web_gui_backtest.png\">\n\nAbout us\n-------------------------------------------------\n[信易科技](https://www.shinnytech.com) 是专业的期货软件供应商和交易所授权行情服务商. 旗下的快期系列产品已为市场服务超过10年. TqSdk 是[公司开源计划](https://www.shinnytech.com/diff)的一部分. \n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.171875,
          "content": "certifi\nwebsockets>=8.1\nrequests\nnumpy\npandas>=0.24.0\naiohttp\npysimplegui\nmatplotlib\nmplcursors\nsimplejson\nselenium\nscipy\npyjwt\nSphinx==2.3.1\nautodocsumm\nsphinx_rtd_theme\njieba"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.123046875,
          "content": "[options.entry_points]\npyinstaller40 = \n\thook-dirs = tqsdk.__pyinstaller:get_hook_dirs\n\n[egg_info]\ntag_build = \ntag_date = 0\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.015625,
          "content": "# -*- coding: utf-8 -*-\n__author__ = 'yangyang'\n\nimport setuptools\n\nwith open(\"README.md\", mode=\"r\", encoding='utf-8') as fh:\n    long_description = fh.read()\n\nsetuptools.setup(\n    name='tqsdk',\n    version=\"3.7.6\",\n    description='TianQin SDK',\n    author='TianQin',\n    author_email='tianqincn@gmail.com',\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    url='https://www.shinnytech.com/tqsdk',\n    packages=setuptools.find_packages(exclude=[\"tqsdk.test\", \"tqsdk.test.*\"]),\n    python_requires='>=3.7',\n    install_requires=[\"websockets>=8.1\", \"requests\", \"numpy\", \"pandas>=1.1.0\", \"scipy\", \"simplejson\", \"aiohttp\",\n                      \"certifi\", \"pyjwt\", \"psutil>=5.9.6\", \"shinny_structlog\", \"sgqlc\", \"filelock\", \"tqsdk_ctpse\", \"tqsdk_sm\",\n                      \"packaging\"],\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Operating System :: OS Independent\",\n    ],\n    include_package_data=True\n)\n"
        },
        {
          "name": "tqsdk",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}