{
  "metadata": {
    "timestamp": 1736559555395,
    "page": 163,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebookincubator/AITemplate",
      "stars": 4586,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.5087890625,
          "content": "---\nAccessModifierOffset: -1\nAlignAfterOpenBracket: AlwaysBreak\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nForEachMacros:   [ FOR_EACH_RANGE, FOR_EACH, ]\nIncludeCategories:\n  - Regex:           '^<.*\\.h(pp)?>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIndentCaseLabels: true\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 2000000\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 3.125,
          "content": "[flake8]\nselect = B,C,E,F,P,W,B9\nmax-line-length = 80\n# Main Explanation Docs: https://github.com/grantmcconnaughey/Flake8Rules\nignore =\n  # Black conflicts and overlaps.\n  # Found in https://github.com/psf/black/issues/429\n  # Line too long.\n  B950,\n  # Indentation is not a multiple of four.\n  E111,\n  # Expected an indented block (comment).\n  E115,\n  # Over-indented.\n  E117,\n  # Continuation line under-indented for hanging indent.\n  E121,\n  # Continuation line missing indentation or outdented.\n  E122,\n  # Closing bracket does not match indentation of opening bracket's line.\n  E123,\n  # Closing bracket does not match visual indentation.\n  E124,\n  # Continuation line with same indent as next logical line.\n  E125,\n  # Continuation line over-indented for hanging indent.\n  E126,\n  # Continuation line over-indented for visual indent.\n  E127,\n  # Continuation line under-indented for visual indent.\n  E128,\n  # Visually indented line with same indent as next logical line.\n  E129,\n  # Continuation line unaligned for hanging indent.\n  E131,\n  # Whitespace after '('.\n  E201,\n  # Whitespace before ')'.\n  E202,\n  # Whitespace before ':'.\n  E203,\n  # Multiple spaces before operator.\n  E221,\n  # Multiple spaces after operator.\n  E222,\n  # Missing whitespace around operator.\n  E225,\n  # Missing whitespace around arithmetic operator.\n  E226,\n  # Missing whitespace around bitwise or shift operator.\n  E227,\n  # Missing whitespace after ',', ';', or ':'.\n  E231,\n  # Multiple spaces after ','.\n  E241,\n  # Unexpected spaces around keyword / parameter equals.\n  E251,\n  # Missing whitespace around parameter equals.\n  E252,\n  # At least two spaces before inline comment.\n  E261,\n  # Inline comment should start with '# '.\n  E262,\n  # Block comment should start with '# '.\n  E265,\n  # Multiple spaces after keyword.\n  E271,\n  # Multiple spaces before keyword.\n  E272,\n  # Expected 1 blank line, found 0.\n  E301,\n  # Expected 2 blank lines, found 0.\n  E302,\n  # Too many blank lines (3).\n  E303,\n  # Expected 2 blank lines after end of function or class.\n  E305,\n  # Expected 1 blank line before a nested definition.\n  E306,\n  # Line too long (82 > 79 characters).\n  E501,\n  # The backslash is redundant between brackets.\n  E502,\n  # Multiple statements on one line (colon).\n  E701,\n  # Multiple statements on one line (semicolon).\n  E702,\n  # Statement ends with a semicolon.\n  E703,\n  # Multiple statements on one line (def).\n  E704,\n  # Trailing whitespace.\n  W291,\n  # No newline at end of file.\n  W292,\n  # Blank line contains whitespace.\n  W293,\n  # Blank line at end of file.\n  W391,\n  # Line break occurred after a binary operator.\n  W504,\n\n  # Too opinionated.\n  # zip() without strict= (strict isn't available in python < 3.10)\n  B905,\n  # Block comment should start with '# '.\n  E265,\n  # Too many leading '#' for block comment.\n  E266,\n  # Module level import not at top of file. (Use cases like demandimport https://fburl.com/demandimport require statements before imports)\n  E402,\n  # Do not use bare except, specify exception instead. (Duplicate of B001)\n  E722,\n  # (Duplicate of B003)\n  P207,\n  # (Duplicate of C403)\n  P208,\n  # Line break occurred before a binary operator.\n  W503\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8662109375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# tmp\ntmp/\n\ntags\n\n# macOS dir files\n.DS_Store\n\n# PyCharm files\n.idea\n\n# vscode\n.vscode\n\n# vim temp files\n*.swp\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.4619140625,
          "content": "[submodule \"3rdparty/cutlass\"]\n\tpath = 3rdparty/cutlass\n\turl = https://github.com/facebookincubator/cutlass-fork.git\n[submodule \"3rdparty/cub\"]\n\tpath = 3rdparty/cub\n\turl = https://github.com/NVIDIA/cub.git\n[submodule \"3rdparty/composable_kernel\"]\n\tpath = 3rdparty/composable_kernel\n\turl = https://github.com/ROCmSoftwarePlatform/composable_kernel.git\n\tbranch = develop\n[submodule \"3rdparty/picojson\"]\n\tpath = 3rdparty/picojson\n\turl = https://github.com/kazuho/picojson.git\n"
        },
        {
          "name": "3rdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.6337890625,
          "content": "cff-version: 1.2.0\ntitle: AITemplate\nmessage: >-\n  If you use this software, please cite using the\n  following metadata.\ntype: software\nauthors:\n  - given-names: Bing\n    family-names: Xu\n    affiliation: Meta\n    email: bingxu@meta.com\n  - given-names: Ying\n    family-names: Zhang\n    affiliation: Meta\n    email: yingz@meta.com\n  - given-names: Hao\n    family-names: Lu\n    affiliation: Meta\n    email: hlu@meta.com\n  - given-names: Yang\n    family-names: Chen\n    affiliation: Meta\n    email: yangche@meta.com\n  - given-names: Terry\n    family-names: Chen\n    affiliation: Meta\n    email: terrychen@meta.com\n  - given-names: Mike\n    family-names: Iovine\n    affiliation: Meta\n    email: mikeiovine@meta.com\n  - given-names: Mu-Chu\n    family-names: Lee\n    affiliation: Meta\n    email: mlee8@meta.com\n  - given-names: Zhijing\n    family-names: Li\n    affiliation: Meta\n    email: tissue030@meta.com\n\n\nrepository-code: 'https://github.com/facebookincubator/AITemplate'\nabstract: >-\n  AITemplate (AIT) is a unified inference framework with separate acceleration backends for both AMD and NVIDIA GPU hardware. It delivers close to hardware-native Tensor Core (NVIDIA GPU) and Matrix Core (AMD GPU) performance on a variety of widely used AI models such as convolutional neural networks, transformers, and diffusers.\nkeywords:\n  - 'neural network, cutlass, composable kernel, cuda, rocm'\nlicense: Apache 2.0\nlicense-url: https://github.com/facebookincubator/AITemplate/LICENSE\nversion: '0.1'\ndate-released: '2022-10-03'\nidentifiers:\n  - type: url\n    value: \"https://github.com/facebookincubator/AITemplate/tree/v0.1.0\"\n    description: The GitHub release URL of tag 0.1.0"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.4580078125,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\nThis Code of Conduct also applies outside the project spaces when there is a\nreasonable belief that an individual's behavior may have a negative impact on\nthe project or its community.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.41796875,
          "content": "# Contributing to AITemplate\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Our Development Process\n1. For major change, submit RFC to discuss the change.\n2. For feature extension, submit PR with tests and documentation.\n3. For bug fix, submit PR with tests and documentation.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `main`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Meta's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nMeta has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n\n## License\nBy contributing to AITemplate, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.05859375,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.29296875,
          "content": "# AITemplate\n\n[![License](https://img.shields.io/badge/License-Apache_2.0-brightgreen.svg)](https://github.com/facebookincubator/AITemplate/blob/main/LICENSE) |\n[![Documentation](https://github.com/facebookincubator/AITemplate/actions/workflows/docs.yaml/badge.svg)](https://facebookincubator.github.io/AITemplate) |\n[![CircleCI](https://circleci.com/gh/facebookincubator/AITemplate.svg?style=svg)](https://app.circleci.com/pipelines/github/facebookincubator/AITemplate)\n[![Deploy docs to Pages](https://github.com/facebookincubator/AITemplate/actions/workflows/pages.yaml/badge.svg)](https://github.com/facebookincubator/AITemplate/actions/workflows/pages.yaml)\n\n\nAITemplate (AIT) is a Python framework that transforms deep neural networks into CUDA (NVIDIA GPU) / HIP (AMD GPU) C++ code for lightning-fast inference serving. AITemplate highlights include:\n\n- High performance: close to roofline fp16 TensorCore (NVIDIA GPU) / MatrixCore (AMD GPU) performance on major models, including ResNet, MaskRCNN, BERT, VisionTransformer, Stable Diffusion, etc.\n\n- Unified, open, and flexible. Seamless fp16 deep neural network models for NVIDIA GPU or AMD GPU. Fully open source, Lego-style easily extendable high-performance primitives for new model support. Supports a significantly more comprehensive range of fusions than existing solutions for both GPU platforms.\n\n\n## More about AITemplate\n\n### Excellent Backward Capability\n\nAITemplate doesn't depend on third-party libraries or runtimes, such as cuBLAS, cuDNN, rocBLAS, MIOpen, TensorRT, MIGraphX, etc. Each model is compiled into a self-contained portable binary, which can be used on any software environment with the same hardware.\n\n### Horizontal Fusion\n\nAITemplate provides unique advanced horizontal fusion. AITemplate can fuse parallel GEMM, LayerNorm, and other operators with different input shapes into a single GPU kernel.\n\n### Vertical Fusion\n\nAITemplate provides strong vertical fusion. AITemplate can fuse a large range of operations into TensorCore/MatrixCore operations, such as elementwise operations, reductions, and layout permutations. AITemplate also provides back-to-back style TensorCore / MatrixCore operation fusion.\n\n### Memory Fusion\n\nAITemplate provides innovative memory fusions. AITemplate can fuse GEMM, LayerNorm, and other operators, followed by memory operations such as concatenation, split, and slice into a single operator.\n\n### Working w/wo PyTorch\n\nThe AITemplate-generated Python runtime can take PyTorch tensors as inputs and outputs without an extra copy. For environments without PyTorch, the AITemplate Python/C++ runtime is self-contained.\n\n### Extensions without suffering\n\nAITemplate provides a straightforward approach for making an extension in codegen. To add a new operator or a new fused kernel into AITemplate, most of the time one only needs to add two Python files: one for a graph node definition and another for the backend codegen. The CUDA/HIP kernel in a text header file can be directly utilized in the codegen.\n\n\n## FX2AIT\n\nFX2AIT is a Python-based tool that converts PyTorch models into AITemplate (AIT) engine for lightning-fast inference serving. Using FX2AIT's built-in AITLowerer, partial AIT acceleration can be achieved for models with unsupported operators in AITemplate.\n\nKey features of FX2AIT include:\n\n* Easy Conversion: FX2AIT requires only a PyTorch model and input for conversion, generating an \"AITModule\" output for inference serving.\n* Expanded Support: AITemplate does not support all PyTorch operators. FX2AIT's AITLowerer offers a solution for partial AIT conversion for models with unsupported operators. Check the `fx2ait/fx2ait/example/03_lowering_split` for more information.\n\nMore info can be found from https://github.com/facebookincubator/AITemplate/tree/main/fx2ait.\n\n\n## Installation\n\n**Hardware requirements:**\n\n  - **NVIDIA**: AIT is only tested on SM80+ GPUs (Ampere etc). Not all kernels work with old SM75/SM70 (T4/V100) GPUs.\n  - **AMD**:  AIT is only tested on CDNA2 (MI-210/250) GPUs. There may be compiler issues for old CDNA1 (MI-100) GPUs.\n\n### Clone the code\n\nWhen cloning the code, please use the following command to also clone the submodules:\n```\ngit clone --recursive https://github.com/facebookincubator/AITemplate\n```\n\n### Docker Image\n\nWe highly recommend using AITemplate with Docker to avoid accidentally using a wrong version of NVCC or HIPCC.\n\n- CUDA: `./docker/build.sh cuda`\n- ROCM: `DOCKER_BUILDKIT=1 ./docker/build.sh rocm`\n\nThis will build a docker image with tag `ait:latest`.\n\n### From Source\n\nThe following command will create a Python wheel for AITemplate. Please ensure you have correct CUDA/ROCm compiler installed.\n\n- CUDA: CUDA 11.6\n- ROCm: We tested on ROCm 5.2.3 with a customized build HIPCC with the command in docker/Dockerfile.rocm#L87-L96\n\n*Incorrect compiler will lead performance regression.*\n\n**Please check all submodules are cloned correctly before go to next step.**\n\n```\ncd python\npython setup.py bdist_wheel\npip install dist/*.whl --force-reinstall\n```\n\n## Getting Started\n\nCheck out the [AITemplate Documentation](https://facebookincubator.github.io/AITemplate) for API reference.\n\nThere are a few tutorials for onboarding:\n\n- 01: [How to inference a PyTorch model with AIT](https://facebookincubator.github.io/AITemplate/tutorial/how_to_infer_pt.html)\n- 02: [How to add an op to AIT codegen](https://facebookincubator.github.io/AITemplate/tutorial/how_to_add_op.html)\n- 03: [How to visualize AIT's optimization](https://facebookincubator.github.io/AITemplate/tutorial/how_to_visualize.html)\n\n\n## Examples & Performance\n\nAITemplate provides the following model templates & reference performance data on A100/MI-250:\n\n- [01_ResNet-50](examples/01_resnet-50/) with PyTorch Image Models (TIMM)\n- [02_MaskRCNN-FPN](examples/02_detectron2/) with Detectron2\n- [03_BERT](examples/03_bert/) with Hugging Face Transformer\n- [04_Vision Transformer](examples/04_vit/) with PyTorch Image Models (TIMM)\n- [05_Stable Diffusion](examples/05_stable_diffusion/) with Hugging Face Diffusers\n\n\n## Release\n\nAll current development updates can be seen in the AITemplate repository. Releases are not on a set schedule and will only be tagged for significant feature releases.\n\nMid-term plan:\n\n- Better dynamic shape support: Focus on the dynamic sequence in Transformers. Add symbolic shape support.\n- More automatic graph passes: Relief manual rewrite models to obtain the best performance.\n- Quantization: fp8/int8/int4.\n- Sparsity pruning for Gemm.\n- PT2 integration: Aten2AIT is under active development.\n\nLong-term plan:\n\n- Automatic ONNX, Open-XLA and other format model conversion.\n- Composable Kernel CPU extension on AVX2/AVX-512 for AMD Epyc CPU.\n\n\n## Contributing\n\nCheck our [contributing guide](CONTRIBUTING.md) to learn about how to contribute to the project.\n\n\n## The Team\n\nAITemplate is currently maintained by Meta engineers: [Ying Zhang](https://github.com/ipiszy), [Yang Chen](https://github.com/chenyang78), [Terry Chen](https://github.com/terrychenism), [Mu-Chu Lee](https://github.com/muchulee8), [Max Podkorytov](https://github.com/tenpercent), [Adnan Akhundov](https://github.com/aakhundov).\n\nAITemplate is co-created by Meta engineers: [Bing Xu](https://github.com/antinucleon), [Ying Zhang](https://github.com/ipiszy), [Hao Lu](https://github.com/hlu1), [Yang Chen](https://github.com/chenyang78), and [Terry Chen](https://github.com/terrychenism), with major contributions coming from other talented engineers. A non-exhaustive list to mention is Mike Iovine, Mu-Chu Lee, Scott Wolchok, Oleg Khabinov, Shirong Wu, Huamin Li, Hui Guo, Zhijing Li, Max Podkorytov. We also want to thank Andrew Tulloch, Yinghai Lu, Lu Fang for the valuable discussions.\n\nFX2AIT and Aten2AIT are co-created and maintained by Meta engineers: [Wei Wei](https://github.com/frank-wei), [Shirong Wu](https://github.com/wushirong) and [Zhijing Li](https://github.com/tissue3).\n\n\n## Acknowledgements\n\nAITemplate team works closely with NVIDIA [CUTLASS](https://github.com/NVIDIA/cutlass) Team (led by Andrew Kerr, Haicheng Wu) and AMD [Composable Kernel](https://github.com/ROCmSoftwarePlatform/composable_kernel) Team (led by Chao Liu, Jing Zhang). We co-designed many advanced GPU optimizations specialized for each platform, and nothing is possible without our close collaboration.\n\n\n## License\n\nAITemplate is licensed under the [Apache 2.0 License](https://github.com/facebookincubator/AITemplate/blob/main/LICENSE).\n"
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.9716796875,
          "content": "{ pkgs ? import <nixpkgs> {\n  config = {\n    allowUnfree = true;\n    cudaSupport = true;\n  };\n}}:\n\nlet \n  ait-deps = ps: with ps; [\n    pytorch-bin\n    pip\n    wheel\n    click\n    unidecode\n    inflect\n    librosa\n    jinja2\n    sympy\n    einops\n    parameterized\n    transformers\n    # (\n    #   buildPythonPackage rec {\n    #     pname = \"cuda_python\";\n    #     version = \"12.1.0\";\n    #     format = \"wheel\";\n    #     src = fetchPypi {\n    #       inherit pname version format;\n    #       sha256 = \"94506d730baade1744767e2c05d5ddd84d7fbe4c9b6f694a54a3f376f7ffa525\";\n    #       abi = \"cp39\";\n    #       python = \"cp39\";\n    #       platform = \"manylinux_2_17_x86_64.manylinux2014_x86_64\";\n    #     };\n    #     doCheck = false;\n    #   }\n    # )\n  ];  \nin\npkgs.mkShell {\n  buildInputs = [\n    pkgs.cmake\n    pkgs.cudatoolkit\n    (pkgs.python310.withPackages ait-deps)\n  ];\n\n  shellHook = ''\n    export CUDA_PATH=${pkgs.cudatoolkit}\n    echo \"You are now using a NIX environment\"\n  '';\n}\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fx2ait",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}