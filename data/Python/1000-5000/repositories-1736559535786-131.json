{
  "metadata": {
    "timestamp": 1736559535786,
    "page": 131,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AILab-CVC/VideoCrafter",
      "stars": 4648,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.064453125,
          "content": ".DS_Store\n*pyc\n.vscode\n__pycache__\n*.egg-info\n\ncheckpoints\nresults"
        },
        {
          "name": "License",
          "type": "blob",
          "size": 23.6181640625,
          "content": "This license applies to the source codes that are open sourced in connection with the VideoCrafter1.\r\n\r\nCopyright (C) 2023 THL A29 Limited, a Tencent company.  \r\n\r\nApache License\r\nVersion 2.0, January 2004\r\nhttp://www.apache.org/licenses/\r\n\r\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n1. Definitions.\r\n\r\n\"License\" shall mean the terms and conditions for use, reproduction,\r\nand distribution as defined by Sections 1 through 9 of this document.\r\n\r\n\"Licensor\" shall mean the copyright owner or entity authorized by\r\nthe copyright owner that is granting the License.\r\n\r\n\"Legal Entity\" shall mean the union of the acting entity and all\r\nother entities that control, are controlled by, or are under common\r\ncontrol with that entity. For the purposes of this definition,\r\n\"control\" means (i) the power, direct or indirect, to cause the\r\ndirection or management of such entity, whether by contract or\r\notherwise, or (ii) ownership of fifty percent (50%) or more of the\r\noutstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\r\nexercising permissions granted by this License.\r\n\r\n\"Source\" form shall mean the preferred form for making modifications,\r\nincluding but not limited to software source code, documentation\r\nsource, and configuration files.\r\n\r\n\"Object\" form shall mean any form resulting from mechanical\r\ntransformation or translation of a Source form, including but\r\nnot limited to compiled object code, generated documentation,\r\nand conversions to other media types.\r\n\r\n\"Work\" shall mean the work of authorship, whether in Source or\r\nObject form, made available under the License, as indicated by a\r\ncopyright notice that is included in or attached to the work\r\n(an example is provided in the Appendix below).\r\n\r\n\"Derivative Works\" shall mean any work, whether in Source or Object\r\nform, that is based on (or derived from) the Work and for which the\r\neditorial revisions, annotations, elaborations, or other modifications\r\nrepresent, as a whole, an original work of authorship. For the purposes\r\nof this License, Derivative Works shall not include works that remain\r\nseparable from, or merely link (or bind by name) to the interfaces of,\r\nthe Work and Derivative Works thereof.\r\n\r\n\"Contribution\" shall mean any work of authorship, including\r\nthe original version of the Work and any modifications or additions\r\nto that Work or Derivative Works thereof, that is intentionally\r\nsubmitted to Licensor for inclusion in the Work by the copyright owner\r\nor by an individual or Legal Entity authorized to submit on behalf of\r\nthe copyright owner. For the purposes of this definition, \"submitted\"\r\nmeans any form of electronic, verbal, or written communication sent\r\nto the Licensor or its representatives, including but not limited to\r\ncommunication on electronic mailing lists, source code control systems,\r\nand issue tracking systems that are managed by, or on behalf of, the\r\nLicensor for the purpose of discussing and improving the Work, but\r\nexcluding communication that is conspicuously marked or otherwise\r\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\r\non behalf of whom a Contribution has been received by Licensor and\r\nsubsequently incorporated within the Work.\r\n\r\n2. Grant of Copyright License. Subject to the terms and conditions of\r\nthis License, each Contributor hereby grants to You a perpetual,\r\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\ncopyright license to reproduce, prepare Derivative Works of,\r\npublicly display, publicly perform, sublicense, and distribute the\r\nWork and such Derivative Works in Source or Object form.\r\n\r\n3. Grant of Patent License. Subject to the terms and conditions of\r\nthis License, each Contributor hereby grants to You a perpetual,\r\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n(except as stated in this section) patent license to make, have made,\r\nuse, offer to sell, sell, import, and otherwise transfer the Work,\r\nwhere such license applies only to those patent claims licensable\r\nby such Contributor that are necessarily infringed by their\r\nContribution(s) alone or by combination of their Contribution(s)\r\nwith the Work to which such Contribution(s) was submitted. If You\r\ninstitute patent litigation against any entity (including a\r\ncross-claim or counterclaim in a lawsuit) alleging that the Work\r\nor a Contribution incorporated within the Work constitutes direct\r\nor contributory patent infringement, then any patent licenses\r\ngranted to You under this License for that Work shall terminate\r\nas of the date such litigation is filed.\r\n\r\n4. Redistribution. You may reproduce and distribute copies of the\r\nWork or Derivative Works thereof in any medium, with or without\r\nmodifications, and in Source or Object form, provided that You\r\nmeet the following conditions:\r\n\r\n(a) You must give any other recipients of the Work or\r\nDerivative Works a copy of this License; and\r\n\r\n(b) You must cause any modified files to carry prominent notices\r\nstating that You changed the files; and\r\n\r\n(c) You must retain, in the Source form of any Derivative Works\r\nthat You distribute, all copyright, patent, trademark, and\r\nattribution notices from the Source form of the Work,\r\nexcluding those notices that do not pertain to any part of\r\nthe Derivative Works; and\r\n\r\n(d) If the Work includes a \"NOTICE\" text file as part of its\r\ndistribution, then any Derivative Works that You distribute must\r\ninclude a readable copy of the attribution notices contained\r\nwithin such NOTICE file, excluding those notices that do not\r\npertain to any part of the Derivative Works, in at least one\r\nof the following places: within a NOTICE text file distributed\r\nas part of the Derivative Works; within the Source form or\r\ndocumentation, if provided along with the Derivative Works; or,\r\nwithin a display generated by the Derivative Works, if and\r\nwherever such third-party notices normally appear. The contents\r\nof the NOTICE file are for informational purposes only and\r\ndo not modify the License. You may add Your own attribution\r\nnotices within Derivative Works that You distribute, alongside\r\nor as an addendum to the NOTICE text from the Work, provided\r\nthat such additional attribution notices cannot be construed\r\nas modifying the License.\r\n\r\nYou may add Your own copyright statement to Your modifications and\r\nmay provide additional or different license terms and conditions\r\nfor use, reproduction, or distribution of Your modifications, or\r\nfor any such Derivative Works as a whole, provided Your use,\r\nreproduction, and distribution of the Work otherwise complies with\r\nthe conditions stated in this License.\r\n\r\n5. Submission of Contributions. Unless You explicitly state otherwise,\r\nany Contribution intentionally submitted for inclusion in the Work\r\nby You to the Licensor shall be under the terms and conditions of\r\nthis License, without any additional terms or conditions.\r\nNotwithstanding the above, nothing herein shall supersede or modify\r\nthe terms of any separate license agreement you may have executed\r\nwith Licensor regarding such Contributions.\r\n\r\n6. Trademarks. This License does not grant permission to use the trade\r\nnames, trademarks, service marks, or product names of the Licensor,\r\nexcept as required for reasonable and customary use in describing the\r\norigin of the Work and reproducing the content of the NOTICE file.\r\n\r\n7. Disclaimer of Warranty. Unless required by applicable law or\r\nagreed to in writing, Licensor provides the Work (and each\r\nContributor provides its Contributions) on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\nimplied, including, without limitation, any warranties or conditions\r\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\nPARTICULAR PURPOSE. You are solely responsible for determining the\r\nappropriateness of using or redistributing the Work and assume any\r\nrisks associated with Your exercise of permissions under this License.\r\n\r\n8. Limitation of Liability. In no event and under no legal theory,\r\nwhether in tort (including negligence), contract, or otherwise,\r\nunless required by applicable law (such as deliberate and grossly\r\nnegligent acts) or agreed to in writing, shall any Contributor be\r\nliable to You for damages, including any direct, indirect, special,\r\nincidental, or consequential damages of any character arising as a\r\nresult of this License or out of the use or inability to use the\r\nWork (including but not limited to damages for loss of goodwill,\r\nwork stoppage, computer failure or malfunction, or any and all\r\nother commercial damages or losses), even if such Contributor\r\nhas been advised of the possibility of such damages.\r\n\r\n9. Accepting Warranty or Additional Liability. While redistributing\r\nthe Work or Derivative Works thereof, You may choose to offer,\r\nand charge a fee for, acceptance of support, warranty, indemnity,\r\nor other liability obligations and/or rights consistent with this\r\nLicense. However, in accepting such obligations, You may act only\r\non Your own behalf and on Your sole responsibility, not on behalf\r\nof any other Contributor, and only if You agree to indemnify,\r\ndefend, and hold each Contributor harmless for any liability\r\nincurred by, or claims asserted against, such Contributor by reason\r\nof your accepting any such warranty or additional liability.\r\n\r\n10. This code is provided for research purposes only and is \r\nnot to be used for any commercial purposes. By using this code, \r\nyou agree that it will be used solely for academic research, scholarly work, \r\nand non-commercial activities. Any use of this code for commercial purposes, \r\nincluding but not limited to, selling, distributing, or incorporating it into \r\ncommercial products or services, is strictly prohibited. Violation of this \r\nclause may result in legal actions and penalties.\r\n\r\nEND OF TERMS AND CONDITIONS\r\n\r\nAPPENDIX: How to apply the Apache License to your work.\r\n\r\nTo apply the Apache License to your work, attach the following\r\nboilerplate notice, with the fields enclosed by brackets \"[]\"\r\nreplaced with your own identifying information. (Don't include\r\nthe brackets!)  The text should be enclosed in the appropriate\r\ncomment syntax for the file format. We also recommend that a\r\nfile or class name and description of purpose be included on the\r\nsame \"printed page\" as the copyright notice for easier\r\nidentification within third-party archives.\r\n\r\nCopyright [yyyy] [name of copyright owner]\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\n\r\nOther dependencies and licenses (if such optional components are used):\r\n\r\n\r\nComponents under BSD 3-Clause License:\r\n------------------------------------------------\r\n1. numpy\r\nCopyright (c) 2005-2022, NumPy Developers.\r\nAll rights reserved.\r\n\r\n2. pytorch\r\nCopyright (c) 2016-     Facebook, Inc            (Adam Paszke)\r\nCopyright (c) 2014-     Facebook, Inc            (Soumith Chintala)\r\nCopyright (c) 2011-2014 Idiap Research Institute (Ronan Collobert)\r\nCopyright (c) 2012-2014 Deepmind Technologies    (Koray Kavukcuoglu)\r\nCopyright (c) 2011-2012 NEC Laboratories America (Koray Kavukcuoglu)\r\nCopyright (c) 2011-2013 NYU                      (Clement Farabet)\r\nCopyright (c) 2006-2010 NEC Laboratories America (Ronan Collobert, Leon Bottou, Iain Melvin, Jason Weston)\r\nCopyright (c) 2006      Idiap Research Institute (Samy Bengio)\r\nCopyright (c) 2001-2004 Idiap Research Institute (Ronan Collobert, Samy Bengio, Johnny Mariethoz)\r\n\r\n3. torchvision\r\nCopyright (c) Soumith Chintala 2016, \r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are met:\r\n\r\n* Redistributions of source code must retain the above copyright notice, this\r\n  list of conditions and the following disclaimer.\r\n\r\n* Redistributions in binary form must reproduce the above copyright notice,\r\n  this list of conditions and the following disclaimer in the documentation\r\n  and/or other materials provided with the distribution.\r\n\r\n* Neither the name of the copyright holder nor the names of its\r\n  contributors may be used to endorse or promote products derived from\r\n  this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\r\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nComponent under Apache v2 License:\r\n-----------------------------------------------------\r\n1. timm\r\nCopyright 2019 Ross Wightman\r\n\r\nApache License\r\nVersion 2.0, January 2004\r\nhttp://www.apache.org/licenses/\r\n\r\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n1. Definitions.\r\n\r\n\"License\" shall mean the terms and conditions for use, reproduction,\r\nand distribution as defined by Sections 1 through 9 of this document.\r\n\r\n\"Licensor\" shall mean the copyright owner or entity authorized by\r\nthe copyright owner that is granting the License.\r\n\r\n\"Legal Entity\" shall mean the union of the acting entity and all\r\nother entities that control, are controlled by, or are under common\r\ncontrol with that entity. For the purposes of this definition,\r\n\"control\" means (i) the power, direct or indirect, to cause the\r\ndirection or management of such entity, whether by contract or\r\notherwise, or (ii) ownership of fifty percent (50%) or more of the\r\noutstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\r\nexercising permissions granted by this License.\r\n\r\n\"Source\" form shall mean the preferred form for making modifications,\r\nincluding but not limited to software source code, documentation\r\nsource, and configuration files.\r\n\r\n\"Object\" form shall mean any form resulting from mechanical\r\ntransformation or translation of a Source form, including but\r\nnot limited to compiled object code, generated documentation,\r\nand conversions to other media types.\r\n\r\n\"Work\" shall mean the work of authorship, whether in Source or\r\nObject form, made available under the License, as indicated by a\r\ncopyright notice that is included in or attached to the work\r\n(an example is provided in the Appendix below).\r\n\r\n\"Derivative Works\" shall mean any work, whether in Source or Object\r\nform, that is based on (or derived from) the Work and for which the\r\neditorial revisions, annotations, elaborations, or other modifications\r\nrepresent, as a whole, an original work of authorship. For the purposes\r\nof this License, Derivative Works shall not include works that remain\r\nseparable from, or merely link (or bind by name) to the interfaces of,\r\nthe Work and Derivative Works thereof.\r\n\r\n\"Contribution\" shall mean any work of authorship, including\r\nthe original version of the Work and any modifications or additions\r\nto that Work or Derivative Works thereof, that is intentionally\r\nsubmitted to Licensor for inclusion in the Work by the copyright owner\r\nor by an individual or Legal Entity authorized to submit on behalf of\r\nthe copyright owner. For the purposes of this definition, \"submitted\"\r\nmeans any form of electronic, verbal, or written communication sent\r\nto the Licensor or its representatives, including but not limited to\r\ncommunication on electronic mailing lists, source code control systems,\r\nand issue tracking systems that are managed by, or on behalf of, the\r\nLicensor for the purpose of discussing and improving the Work, but\r\nexcluding communication that is conspicuously marked or otherwise\r\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\r\non behalf of whom a Contribution has been received by Licensor and\r\nsubsequently incorporated within the Work.\r\n\r\n2. Grant of Copyright License. Subject to the terms and conditions of\r\nthis License, each Contributor hereby grants to You a perpetual,\r\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\ncopyright license to reproduce, prepare Derivative Works of,\r\npublicly display, publicly perform, sublicense, and distribute the\r\nWork and such Derivative Works in Source or Object form.\r\n\r\n3. Grant of Patent License. Subject to the terms and conditions of\r\nthis License, each Contributor hereby grants to You a perpetual,\r\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n(except as stated in this section) patent license to make, have made,\r\nuse, offer to sell, sell, import, and otherwise transfer the Work,\r\nwhere such license applies only to those patent claims licensable\r\nby such Contributor that are necessarily infringed by their\r\nContribution(s) alone or by combination of their Contribution(s)\r\nwith the Work to which such Contribution(s) was submitted. If You\r\ninstitute patent litigation against any entity (including a\r\ncross-claim or counterclaim in a lawsuit) alleging that the Work\r\nor a Contribution incorporated within the Work constitutes direct\r\nor contributory patent infringement, then any patent licenses\r\ngranted to You under this License for that Work shall terminate\r\nas of the date such litigation is filed.\r\n\r\n4. Redistribution. You may reproduce and distribute copies of the\r\nWork or Derivative Works thereof in any medium, with or without\r\nmodifications, and in Source or Object form, provided that You\r\nmeet the following conditions:\r\n\r\n(a) You must give any other recipients of the Work or\r\nDerivative Works a copy of this License; and\r\n\r\n(b) You must cause any modified files to carry prominent notices\r\nstating that You changed the files; and\r\n\r\n(c) You must retain, in the Source form of any Derivative Works\r\nthat You distribute, all copyright, patent, trademark, and\r\nattribution notices from the Source form of the Work,\r\nexcluding those notices that do not pertain to any part of\r\nthe Derivative Works; and\r\n\r\n(d) If the Work includes a \"NOTICE\" text file as part of its\r\ndistribution, then any Derivative Works that You distribute must\r\ninclude a readable copy of the attribution notices contained\r\nwithin such NOTICE file, excluding those notices that do not\r\npertain to any part of the Derivative Works, in at least one\r\nof the following places: within a NOTICE text file distributed\r\nas part of the Derivative Works; within the Source form or\r\ndocumentation, if provided along with the Derivative Works; or,\r\nwithin a display generated by the Derivative Works, if and\r\nwherever such third-party notices normally appear. The contents\r\nof the NOTICE file are for informational purposes only and\r\ndo not modify the License. You may add Your own attribution\r\nnotices within Derivative Works that You distribute, alongside\r\nor as an addendum to the NOTICE text from the Work, provided\r\nthat such additional attribution notices cannot be construed\r\nas modifying the License.\r\n\r\nYou may add Your own copyright statement to Your modifications and\r\nmay provide additional or different license terms and conditions\r\nfor use, reproduction, or distribution of Your modifications, or\r\nfor any such Derivative Works as a whole, provided Your use,\r\nreproduction, and distribution of the Work otherwise complies with\r\nthe conditions stated in this License.\r\n\r\n5. Submission of Contributions. Unless You explicitly state otherwise,\r\nany Contribution intentionally submitted for inclusion in the Work\r\nby You to the Licensor shall be under the terms and conditions of\r\nthis License, without any additional terms or conditions.\r\nNotwithstanding the above, nothing herein shall supersede or modify\r\nthe terms of any separate license agreement you may have executed\r\nwith Licensor regarding such Contributions.\r\n\r\n6. Trademarks. This License does not grant permission to use the trade\r\nnames, trademarks, service marks, or product names of the Licensor,\r\nexcept as required for reasonable and customary use in describing the\r\norigin of the Work and reproducing the content of the NOTICE file.\r\n\r\n7. Disclaimer of Warranty. Unless required by applicable law or\r\nagreed to in writing, Licensor provides the Work (and each\r\nContributor provides its Contributions) on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\nimplied, including, without limitation, any warranties or conditions\r\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\nPARTICULAR PURPOSE. You are solely responsible for determining the\r\nappropriateness of using or redistributing the Work and assume any\r\nrisks associated with Your exercise of permissions under this License.\r\n\r\n8. Limitation of Liability. In no event and under no legal theory,\r\nwhether in tort (including negligence), contract, or otherwise,\r\nunless required by applicable law (such as deliberate and grossly\r\nnegligent acts) or agreed to in writing, shall any Contributor be\r\nliable to You for damages, including any direct, indirect, special,\r\nincidental, or consequential damages of any character arising as a\r\nresult of this License or out of the use or inability to use the\r\nWork (including but not limited to damages for loss of goodwill,\r\nwork stoppage, computer failure or malfunction, or any and all\r\nother commercial damages or losses), even if such Contributor\r\nhas been advised of the possibility of such damages.\r\n\r\n9. Accepting Warranty or Additional Liability. While redistributing\r\nthe Work or Derivative Works thereof, You may choose to offer,\r\nand charge a fee for, acceptance of support, warranty, indemnity,\r\nor other liability obligations and/or rights consistent with this\r\nLicense. However, in accepting such obligations, You may act only\r\non Your own behalf and on Your sole responsibility, not on behalf\r\nof any other Contributor, and only if You agree to indemnify,\r\ndefend, and hold each Contributor harmless for any liability\r\nincurred by, or claims asserted against, such Contributor by reason\r\nof your accepting any such warranty or additional liability.\r\n\r\nEND OF TERMS AND CONDITIONS\r\n\r\nAPPENDIX: How to apply the Apache License to your work.\r\n\r\nTo apply the Apache License to your work, attach the following\r\nboilerplate notice, with the fields enclosed by brackets \"[]\"\r\nreplaced with your own identifying information. (Don't include\r\nthe brackets!)  The text should be enclosed in the appropriate\r\ncomment syntax for the file format. We also recommend that a\r\nfile or class name and description of purpose be included on the\r\nsame \"printed page\" as the copyright notice for easier\r\nidentification within third-party archives.\r\n\r\nCopyright [yyyy] [name of copyright owner]\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.626953125,
          "content": "\n## ___***VideoCrafter2: Overcoming Data Limitations for High-Quality Video Diffusion Models***___\n\n<a href='https://ailab-cvc.github.io/videocrafter2/'><img src='https://img.shields.io/badge/Project-Page-green'></a> \n<a href='https://arxiv.org/abs/2401.09047'><img src='https://img.shields.io/badge/Technique-Report-red'></a> \n[![Discord](https://dcbadge.vercel.app/api/server/rrayYqZ4tf?style=flat)](https://discord.gg/rrayYqZ4tf)\n<a href='https://huggingface.co/spaces/VideoCrafter/VideoCrafter'><img src='https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Model-blue'></a>\n[![GitHub](https://img.shields.io/github/stars/VideoCrafter/VideoCrafter?style=social)](https://github.com/VideoCrafter/VideoCrafter)\n\n### 🔥🔥 Our dedicated high-resolution I2V model is released at: :point_right:[DynamiCrafter](https://github.com/Doubiiu/DynamiCrafter)!!!\n\n[![](https://img.youtube.com/vi/0NfmIsNAg-g/0.jpg)](https://www.youtube.com/watch?v=0NfmIsNAg-g)\n\n### 🔥The VideoCrafter2 Large improvements over VideoCrafter1 with limited data. Better Motion, Better Concept Combination!!!\n\nPlease Join us and create your own film on [Discord/Floor33](https://discord.gg/rrayYqZ4tf).\n\n##### 🎥 Exquisite film, produced by VideoCrafter2, directed by Human\n [![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/TUsFkW0tK-s/0.jpg)](https://www.youtube.com/watch?v=TUsFkW0tK-s)\n \n## 🔆 Introduction\n\n🤗🤗🤗 VideoCrafter is an open-source video generation and editing toolbox for crafting video content.   \nIt currently includes the Text2Video and Image2Video models:\n\n### 1. Generic Text-to-video Generation\nClick the GIF to access the high-resolution video.\n\n<table class=\"center\">\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/d20ee09d-fc32-44a8-9e9a-f12f44b30411\"><img src=assets/t2v/tom.gif width=\"320\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/f1d9f434-28e8-44f6-a9b8-cffd67e4574d\"><img src=assets/t2v/child.gif width=\"320\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/bbcfef0e-d8fb-4850-adc0-d8f937c2fa36\"><img src=assets/t2v/woman.gif width=\"320\"></td>\n  <tr>\n  <td style=\"text-align:center;\" width=\"320\">\"Tom Cruise's face reflects focus, his eyes filled with purpose and drive.\"</td>\n  <td style=\"text-align:center;\" width=\"320\">\"A child excitedly swings on a rusty swing set, laughter filling the air.\"</td>\n  <td style=\"text-align:center;\" width=\"320\">\"A young woman with glasses is jogging in the park wearing a pink headband.\"</td>\n  <tr>\n</table >\n\n<table class=\"center\">\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/7edafc5a-750e-45f3-a46e-b593751a4b12\"><img src=assets/t2v/couple.gif width=\"320\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/37fe41c8-31fb-4e77-bcf9-fa159baa6d86\"><img src=assets/t2v/rabbit.gif width=\"320\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/09791a46-a243-41b8-a6bb-892cdd3a83a2\"><img src=assets/t2v/duck.gif width=\"320\"></td>\n  <tr>\n  <td style=\"text-align:center;\" width=\"320\">\"With the style of van gogh, A young couple dances under the moonlight by the lake.\"</td>\n  <td style=\"text-align:center;\" width=\"320\">\"A rabbit, low-poly game art style\"</td>\n  <td style=\"text-align:center;\" width=\"320\">\"Impressionist style, a yellow rubber duck floating on the wave on the sunset\"</td>\n  <tr>\n</table >\n\n### 2. Generic Image-to-video Generation\n\n<table class=\"center\">\n  <td><img src=assets/i2v/input/blackswan.png width=\"170\"></td>\n  <td><img src=assets/i2v/input/horse.png width=\"170\"></td>\n  <td><img src=assets/i2v/input/chair.png width=\"170\"></td>\n  <td><img src=assets/i2v/input/sunset.png width=\"170\"></td>\n  <tr>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/1a57edd9-3fd2-4ce9-8313-89aca95b6ec7\"><img src=assets/i2v/blackswan.gif width=\"170\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/d671419d-ae49-4889-807e-b841aef60e8a\"><img src=assets/i2v/horse.gif width=\"170\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/39d730d9-7b47-4132-bdae-4d18f3e651ee\"><img src=assets/i2v/chair.gif width=\"170\"></td>\n  <td><a href=\"https://github.com/AILab-CVC/VideoCrafter/assets/18735168/dc8dd0d5-a80d-4f31-94db-f9ea0b13172b\"><img src=assets/i2v/sunset.gif width=\"170\"></td>\n  <tr>\n  <td style=\"text-align:center;\" width=\"170\">\"a black swan swims on the pond\"</td>\n  <td style=\"text-align:center;\" width=\"170\">\"a girl is riding a horse fast on grassland\"</td>\n  <td style=\"text-align:center;\" width=\"170\">\"a boy sits on a chair facing the sea\"</td>\n  <td style=\"text-align:center;\" width=\"170\">\"two galleons moving in the wind at sunset\"</td>\n\n</table >\n\n:boom: **You are highly recommended to try our dedicated I2V model [DynamiCrafter](https://github.com/Doubiiu/DynamiCrafter): Higher resolution, Better Dynamics, More Coherence!!!**\n\n---\n\n## 📝 Changelog\n- __[2024.02.05]__: 🔥🔥 Release new I2V model with the resolution of 640x1024 of VideoCrafter1/DynamiCrafter. \n\n- __[2024.01.26]__: Release the 512x320 checkpoint of VideoCrafter2. \n\n- __[2024.01.18]__: Release the [VideoCrafter2](https://ailab-cvc.github.io/videocrafter2/) and [Tech Report](https://arxiv.org/abs/2401.09047)!\n\n- __[2023.10.30]__: Release [VideoCrafter1](https://arxiv.org/abs/2310.19512) Technical Report!\n\n- __[2023.10.13]__: Release the VideoCrafter1, High Quality Video Generation!\n\n- __[2023.08.14]__: Release a new version of VideoCrafter on [Discord/Floor33](https://discord.gg/uHaQuThT). Please join us to create your own film!\n\n- __[2023.04.18]__: Release a VideoControl model with most of the watermarks removed!\n\n- __[2023.04.05]__: Release pretrained Text-to-Video models, VideoLora models, and inference code.\n<br>\n\n\n## ⏳ Models\n\n|T2V-Models|Resolution|Checkpoints|\n|:---------|:---------|:--------|\n|VideoCrafter2|320x512|[Hugging Face](https://huggingface.co/VideoCrafter/VideoCrafter2/blob/main/model.ckpt)\n|VideoCrafter1|576x1024|[Hugging Face](https://huggingface.co/VideoCrafter/Text2Video-1024/blob/main/model.ckpt)\n|VideoCrafter1|320x512|[Hugging Face](https://huggingface.co/VideoCrafter/Text2Video-512/blob/main/model.ckpt)\n\n|I2V-Models|Resolution|Checkpoints|\n|:---------|:---------|:--------|\n|VideoCrafter1|640x1024|[Hugging Face](https://huggingface.co/Doubiiu/DynamiCrafter_1024/blob/main/model.ckpt)\n|VideoCrafter1|320x512|[Hugging Face](https://huggingface.co/VideoCrafter/Image2Video-512/blob/main/model.ckpt)\n\n\n\n## ⚙️ Setup\n\n### 1. Install Environment via Anaconda (Recommended)\n```bash\nconda create -n videocrafter python=3.8.5\nconda activate videocrafter\npip install -r requirements.txt\n```\n\n\n## 💫 Inference \n### 1. Text-to-Video\n\n1) Download pretrained T2V models via [Hugging Face](https://huggingface.co/VideoCrafter/VideoCrafter2/blob/main/model.ckpt), and put the `model.ckpt` in `checkpoints/base_512_v2/model.ckpt`.\n2) Input the following commands in terminal.\n```bash\n  sh scripts/run_text2video.sh\n```\n\n### 2. Image-to-Video\n\n1) Download pretrained I2V models via [Hugging Face](https://huggingface.co/VideoCrafter/Image2Video-512-v1.0/blob/main/model.ckpt), and put the `model.ckpt` in `checkpoints/i2v_512_v1/model.ckpt`.\n2) Input the following commands in terminal.\n```bash\n  sh scripts/run_image2video.sh\n```\n\n### 3. Local Gradio demo\n\n1. Download the pretrained T2V and I2V models and put them in the corresponding directory according to the previous guidelines.\n2. Input the following commands in terminal.\n```bash\n  python gradio_app.py\n```\n\n---\n## 📋 Techinical Report\n😉 VideoCrafter2 Tech report: [VideoCrafter2: Overcoming Data Limitations for High-Quality Video Diffusion Models](https://arxiv.org/abs/2401.09047)\n\n😉 VideoCrafter1 Tech report: [VideoCrafter1: Open Diffusion Models for High-Quality Video Generation](https://arxiv.org/abs/2310.19512)\n<br>\n\n## 😉 Citation\nThe technical report is currently unavailable as it is still in preparation. You can cite the paper of our image-to-video model and related base model.\n```\n@misc{chen2024videocrafter2,\n      title={VideoCrafter2: Overcoming Data Limitations for High-Quality Video Diffusion Models}, \n      author={Haoxin Chen and Yong Zhang and Xiaodong Cun and Menghan Xia and Xintao Wang and Chao Weng and Ying Shan},\n      year={2024},\n      eprint={2401.09047},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n\n@misc{chen2023videocrafter1,\n      title={VideoCrafter1: Open Diffusion Models for High-Quality Video Generation}, \n      author={Haoxin Chen and Menghan Xia and Yingqing He and Yong Zhang and Xiaodong Cun and Shaoshu Yang and Jinbo Xing and Yaofang Liu and Qifeng Chen and Xintao Wang and Chao Weng and Ying Shan},\n      year={2023},\n      eprint={2310.19512},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n\n@article{xing2023dynamicrafter,\n      title={DynamiCrafter: Animating Open-domain Images with Video Diffusion Priors}, \n      author={Jinbo Xing and Menghan Xia and Yong Zhang and Haoxin Chen and Xintao Wang and Tien-Tsin Wong and Ying Shan},\n      year={2023},\n      eprint={2310.12190},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n\n@article{he2022lvdm,\n      title={Latent Video Diffusion Models for High-Fidelity Long Video Generation}, \n      author={Yingqing He and Tianyu Yang and Yong Zhang and Ying Shan and Qifeng Chen},\n      year={2022},\n      eprint={2211.13221},\n      archivePrefix={arXiv},\n      primaryClass={cs.CV}\n}\n```\n\n\n## 🤗 Acknowledgements\nOur codebase builds on [Stable Diffusion](https://github.com/Stability-AI/stablediffusion). \nThanks the authors for sharing their awesome codebases! \n\n\n## 📢 Disclaimer\nWe develop this repository for RESEARCH purposes, so it can only be used for personal/research/non-commercial purposes.\n****\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cog.yaml",
          "type": "blob",
          "size": 0.6025390625,
          "content": "# Configuration for Cog ⚙️\n# Reference: https://github.com/replicate/cog/blob/main/docs/yaml.md\n\nbuild:\n  gpu: true\n  system_packages:\n    - \"libgl1-mesa-glx\"\n    - \"libglib2.0-0\"\n  python_version: \"3.11\"\n  python_packages:\n    - \"torch==2.0.1\"\n    - \"opencv-python==4.8.1.78\"\n    - \"torchvision==0.15.2\"\n    - \"pytorch_lightning==2.1.0\"\n    - \"einops==0.7.0\"\n    - \"imageio==2.31.6\"\n    - \"omegaconf==2.3.0\"\n    - \"transformers==4.35.0\"\n    - \"moviepy==1.0.3\"\n    - \"av==10.0.0\"\n    - \"decord==0.6.0\"\n    - \"kornia==0.7.0\"\n    - \"open-clip-torch==2.12.0\"\n    - \"xformers==0.0.21\"\npredict: \"predict.py:Predictor\"\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradio_app.py",
          "type": "blob",
          "size": 2.806640625,
          "content": "import os\nimport sys\nimport gradio as gr\nfrom scripts.gradio.t2v_test import Text2Video\nsys.path.insert(1, os.path.join(sys.path[0], 'lvdm'))\n\nt2v_examples = [\n    ['an elephant is walking under the sea, 4K, high definition',50, 12,1, 16],\n    ['an astronaut riding a horse in outer space',25,12,1,16],\n    ['a monkey is playing a piano',25,12,1,16],\n    ['A fire is burning on a candle',25,12,1,16],\n    ['a horse is drinking in the river',25,12,1,16],\n    ['Robot dancing in times square',25,12,1,16],                    \n]\n\n\ndef videocrafter_demo(result_dir='./tmp/'):\n    text2video = Text2Video(result_dir)\n    with gr.Blocks(analytics_enabled=False) as videocrafter_iface:\n        gr.Markdown(\"<div align='center'> <h2> VideoCrafter2: Overcoming Data Limitations for High-Quality Video Diffusion Models </span> </h2> \\\n                     <a style='font-size:18px;color: #000000' href='https://github.com/AILab-CVC/VideoCrafter'> Github </div>\")\n        \n        #######t2v#######\n        with gr.Tab(label=\"Text2Video\"):\n            with gr.Column():\n                with gr.Row().style(equal_height=False):\n                    with gr.Column():\n                        input_text = gr.Text(label='Prompts')\n                        with gr.Row():\n                            steps = gr.Slider(minimum=1, maximum=60, step=1, elem_id=f\"steps\", label=\"Sampling steps\", value=50)\n                            eta = gr.Slider(minimum=0.0, maximum=1.0, step=0.1, label='ETA', value=1.0, elem_id=\"eta\")\n                        with gr.Row():\n                            cfg_scale = gr.Slider(minimum=1.0, maximum=30.0, step=0.5, label='CFG Scale', value=12.0, elem_id=\"cfg_scale\")\n                            fps = gr.Slider(minimum=4, maximum=32, step=1, label='fps', value=16, elem_id=\"fps\")\n                        send_btn = gr.Button(\"Send\")\n                    with gr.Tab(label='result'):\n                        with gr.Row():\n                            output_video_1 =  gr.Video().style(width=512)\n                gr.Examples(examples=t2v_examples,\n                            inputs=[input_text,steps,cfg_scale,eta],\n                            outputs=[output_video_1],\n                            fn=text2video.get_prompt,\n                            cache_examples=False)\n                        #cache_examples=os.getenv('SYSTEM') == 'spaces')\n            send_btn.click(\n                fn=text2video.get_prompt, \n                inputs=[input_text,steps,cfg_scale,eta,fps],\n                outputs=[output_video_1],\n            )\n\n    return videocrafter_iface\n\nif __name__ == \"__main__\":\n    result_dir = os.path.join('./', 'results')\n    videocrafter_iface = videocrafter_demo(result_dir)\n    videocrafter_iface.queue(concurrency_count=1, max_size=10)\n    videocrafter_iface.launch()\n    # videocrafter_iface.launch(server_name='0.0.0.0', server_port=80)"
        },
        {
          "name": "lvdm",
          "type": "tree",
          "content": null
        },
        {
          "name": "predict.py",
          "type": "blob",
          "size": 5.4375,
          "content": "# Prediction interface for Cog ⚙️\n# https://github.com/replicate/cog/blob/main/docs/python.md\n\n\nimport os\nimport sys\nimport argparse\nimport random\nfrom omegaconf import OmegaConf\nfrom einops import rearrange, repeat\nimport torch\nimport torchvision\nfrom pytorch_lightning import seed_everything\nfrom cog import BasePredictor, Input, Path\n\nsys.path.insert(0, \"scripts/evaluation\")\nfrom funcs import (\n    batch_ddim_sampling,\n    load_model_checkpoint,\n    load_image_batch,\n    get_filelist,\n)\nfrom utils.utils import instantiate_from_config\n\n\nclass Predictor(BasePredictor):\n    def setup(self) -> None:\n        \"\"\"Load the model into memory to make running multiple predictions efficient\"\"\"\n\n        ckpt_path_base = \"checkpoints/base_1024_v1/model.ckpt\"\n        config_base = \"configs/inference_t2v_1024_v1.0.yaml\"\n        ckpt_path_i2v = \"checkpoints/i2v_512_v1/model.ckpt\"\n        config_i2v = \"configs/inference_i2v_512_v1.0.yaml\"\n\n        config_base = OmegaConf.load(config_base)\n        model_config_base = config_base.pop(\"model\", OmegaConf.create())\n        self.model_base = instantiate_from_config(model_config_base)\n        self.model_base = self.model_base.cuda()\n        self.model_base = load_model_checkpoint(self.model_base, ckpt_path_base)\n        self.model_base.eval()\n\n        config_i2v = OmegaConf.load(config_i2v)\n        model_config_i2v = config_i2v.pop(\"model\", OmegaConf.create())\n        self.model_i2v = instantiate_from_config(model_config_i2v)\n        self.model_i2v = self.model_i2v.cuda()\n        self.model_i2v = load_model_checkpoint(self.model_i2v, ckpt_path_i2v)\n        self.model_i2v.eval()\n\n    def predict(\n        self,\n        task: str = Input(\n            description=\"Choose the task.\",\n            choices=[\"text2video\", \"image2video\"],\n            default=\"text2video\",\n        ),\n        prompt: str = Input(\n            description=\"Prompt for video generation.\",\n            default=\"A tiger walks in the forest, photorealistic, 4k, high definition.\",\n        ),\n        image: Path = Input(\n            description=\"Input image for image2video task.\", default=None\n        ),\n        ddim_steps: int = Input(description=\"Number of denoising steps.\", default=50),\n        unconditional_guidance_scale: float = Input(\n            description=\"Classifier-free guidance scale.\", default=12.0\n        ),\n        seed: int = Input(\n            description=\"Random seed. Leave blank to randomize the seed\", default=None\n        ),\n        save_fps: int = Input(\n            description=\"Frame per second for the generated video.\", default=10\n        ),\n    ) -> Path:\n\n        width = 1024 if task == \"text2video\" else 512\n        height = 576 if task == \"text2video\" else 320\n        model = self.model_base if task == \"text2video\" else self.model_i2v\n\n        if task == \"image2video\":\n            assert image is not None, \"Please provide image for image2video generation.\"\n\n        if seed is None:\n            seed = int.from_bytes(os.urandom(2), \"big\")\n        print(f\"Using seed: {seed}\")\n        seed_everything(seed)\n\n        args = argparse.Namespace(\n            mode=\"base\" if task == \"text2video\" else \"i2v\",\n            savefps=save_fps,\n            n_samples=1,\n            ddim_steps=ddim_steps,\n            ddim_eta=1.0,\n            bs=1,\n            height=height,\n            width=width,\n            frames=-1,\n            fps=28 if task == \"text2video\" else 8,\n            unconditional_guidance_scale=unconditional_guidance_scale,\n            unconditional_guidance_scale_temporal=None,\n        )\n\n        ## latent noise shape\n        h, w = args.height // 8, args.width // 8\n        frames = model.temporal_length if args.frames < 0 else args.frames\n        channels = model.channels\n\n        batch_size = 1\n        noise_shape = [batch_size, channels, frames, h, w]\n        fps = torch.tensor([args.fps] * batch_size).to(model.device).long()\n        prompts = [prompt]\n        text_emb = model.get_learned_conditioning(prompts)\n\n        if args.mode == \"base\":\n            cond = {\"c_crossattn\": [text_emb], \"fps\": fps}\n        elif args.mode == \"i2v\":\n            cond_images = load_image_batch([str(image)], (args.height, args.width))\n            cond_images = cond_images.to(model.device)\n            img_emb = model.get_image_embeds(cond_images)\n            imtext_cond = torch.cat([text_emb, img_emb], dim=1)\n            cond = {\"c_crossattn\": [imtext_cond], \"fps\": fps}\n        else:\n            raise NotImplementedError\n\n        ## inference\n        batch_samples = batch_ddim_sampling(\n            model,\n            cond,\n            noise_shape,\n            args.n_samples,\n            args.ddim_steps,\n            args.ddim_eta,\n            args.unconditional_guidance_scale,\n        )\n\n        out_path = \"/tmp/output.mp4\"\n        vid_tensor = batch_samples[0]\n        video = vid_tensor.detach().cpu()\n        video = torch.clamp(video.float(), -1.0, 1.0)\n        video = video.permute(2, 0, 1, 3, 4)  # t,n,c,h,w\n\n        frame_grids = [\n            torchvision.utils.make_grid(framesheet, nrow=int(args.n_samples))\n            for framesheet in video\n        ]  # [3, 1*h, n*w]\n        grid = torch.stack(frame_grids, dim=0)  # stack in temporal dim [t, 3, n*h, w]\n        grid = (grid + 1.0) / 2.0\n        grid = (grid * 255).to(torch.uint8).permute(0, 2, 3, 1)\n        torchvision.io.write_video(\n            out_path,\n            grid,\n            fps=args.savefps,\n            video_codec=\"h264\",\n            options={\"crf\": \"10\"},\n        )\n        return Path(out_path)\n"
        },
        {
          "name": "prompts",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.2998046875,
          "content": "decord==0.6.0\neinops==0.3.0\nimageio==2.9.0\nnumpy==1.24.2\nomegaconf==2.1.1\nopencv_python\npandas==2.0.0\nPillow==9.5.0\npytorch_lightning==1.8.3\nPyYAML==6.0\nsetuptools==65.6.3\ntorch==2.0.0\ntorchvision\ntqdm==4.65.0\ntransformers==4.25.1\nmoviepy\nav\nxformers\ngradio\ntimm\nscikit-learn \nopen_clip_torch==2.22.0\nkornia"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}