{
  "metadata": {
    "timestamp": 1736559932334,
    "page": 701,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "spotify/chartify",
      "stars": 3556,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.28515625,
          "content": "# http://editorconfig.org\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\ncharset = utf-8\nend_of_line = lf\n\n[*.bat]\nindent_style = tab\nend_of_line = crlf\n\n[LICENSE]\ninsert_final_newline = false\n\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.115234375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n.DS_Store\n\n# Test outputs\ntests/outputs/**/*.png\ntests/outputs/**/*.html\ntests/outputs/**/*.svg\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.7021484375,
          "content": "# Read the Docs configuration file for Sphinx projects\n\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n\n# Required\n\nversion: 2\n\n\n# Set the OS, Python version and other tools you might need\n\nbuild:\n\n  os: ubuntu-22.04\n\n  tools:\n\n    python: \"3.11\"\n\n\n# Build documentation in the \"docs/\" directory with Sphinx\nsphinx:\n\n  configuration: docs/conf.py\n\n# Optionally build your docs in additional formats such as PDF and ePub\nformats:\n   - pdf\n   - epub\n\n\n# Optional but recommended, declare the Python requirements required\n\n# to build your documentation\n\n# See https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\n\npython:\n\n   install:\n\n   - requirements: requirements_dev.txt"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 0.22265625,
          "content": "=======\nCredits\n=======\n\nDevelopment Lead\n----------------\n\n* Chris Halpert <chalpert@spotify.com>\n\nContributors\n------------\n\n- Amar Patel <amar@spotify.com>\n- Lynn Root <lynn@spotify.com>\n- Skyler Johnson <skyler@spotify.com>\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 3.6826171875,
          "content": ".. highlight:: shell\n\n============\nContributing\n============\n\nContributions are welcome, and they are greatly appreciated! Every\nlittle bit helps, and credit will always be given.\n\nCode of Conduct\n---------------\n\nThis project adheres to the `Open Code of Conduct <https://github.com/spotify/code-of-conduct/blob/master/code-of-conduct.md>`_. By participating, you are expected to honor this code.\n\nYou can contribute in many ways:\n\nTypes of Contributions\n----------------------\n\nReport Bugs\n~~~~~~~~~~~\n\nReport bugs at https://github.com/spotify/chartify/issues.\n\nIf you are reporting a bug, please include:\n\n* Your operating system name and version.\n* Any details about your local setup that might be helpful in troubleshooting.\n* Detailed steps to reproduce the bug.\n\nFix Bugs\n~~~~~~~~\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\"\nand \"help wanted\" is open to whoever wants to implement it.\n\nImplement Features\n~~~~~~~~~~~~~~~~~~\n\nLook through the GitHub issues for features. Anything tagged with \"enhancement\"\nand \"help wanted\" is open to whoever wants to implement it.\n\nWrite Documentation\n~~~~~~~~~~~~~~~~~~~\n\nchartify could always use more documentation, whether as part of the\nofficial chartify docs, in docstrings, or even on the web in blog posts,\narticles, and such.\n\nSubmit Feedback\n~~~~~~~~~~~~~~~\n\nThe best way to send feedback is to file an issue at https://github.com/spotify/chartify/issues.\n\nIf you are proposing a feature:\n\n* Explain in detail how it would work.\n* Keep the scope as narrow as possible, to make it easier to implement.\n* Remember that this is a volunteer-driven project, and that contributions\n  are welcome :)\n\nGet Started!\n------------\n\nReady to contribute? Here's how to set up `chartify` for local development.\n\n1. Fork the `chartify` repo on GitHub.\n2. Clone your fork locally::\n\n    $ git clone git@github.com:your_name_here/chartify.git\n\n3. Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development::\n\n    $ mkvirtualenv chartify\n    $ cd chartify/\n    $ pip3 install -r requirements_dev.txt\n\n4. Create a branch for local development::\n\n    $ git checkout -b name-of-your-bugfix-or-feature\n\n   Now you can make your changes locally.\n\n5. When you're done making changes, format using make black, check that your changes pass flake8 and the tests, including testing other Python versions with tox::\n\n    $ make black\n    $ flake8 chartify tests\n    $ python setup.py test or py.test\n    $ tox\n\n   To get flake8 and tox, just pip install them into your virtualenv.\n\n6. Commit your changes and push your branch to GitHub::\n\n    $ git add .\n    $ git commit -m \"Your detailed description of your changes.\"\n    $ git push origin name-of-your-bugfix-or-feature\n\n7. Submit a pull request through the GitHub website.\n\nPull Request Guidelines\n-----------------------\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n1. The pull request should include tests.\n2. If the pull request adds functionality, the docs should be updated. Put\n   your new functionality into a function with a docstring, and add the\n   feature to the list in README.rst.\n3. The pull request should work for Python 3.9, 3.10 and 3.11. Check\n   https://github.com/spotify/chartify/actions\n   and make sure that the tests pass for all supported Python versions.\n\nTips\n----\n\nThe Makefile contains a bunch of useful commands for developers.\n\nNote: You must activate the virtualenv where you installed requirements_dev.txt\nfor these commands to work.\n\nTo run all python tests and generate code coverage:\n    $ make coverage\n\nTo generate documentation:\n    $ make docs\n\nUse `help` to see the list of available commands:\n    $ make help\n\n\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 4.931640625,
          "content": "History\n=======\n\n5.0.1 (2024-10-16)\n------------------\n\n* Bugfixes to render project description correctly on PyPi\n\n5.0.0 (2024-10-16)\n------------------\n\n* Drop support for Python 3.8\n* Add support for Python 3.11\n* Fixes bad cropping in png introduced by changes to chrome webdriver\n* Add support and recommendation to use make black for code formatting\n\n4.0.5 (2023-10-12)\n------------------\n\n* Relaxed scipy and pandas version requirements to allow verions 2.x\n\n4.0.4 (2023-08-23)\n------------------\n\n* Documentation build fix\n* Pin tornado requirement to reduce vulnerability\n\n4.0.3 (2023-04-21)\n------------------\n\n* Require jupyter_bokeh to enable html output\n\n4.0.2 (2023-03-30)\n------------------\n\n* Fix categorical_order_by check for scatter plot\n* Fix categorical_order_by check for _construct_source\n* Refactor category sorting in _construct_source\n* Add tests for categorical_order_by\n* Fix scatter plot tests that used line plots\n\n4.0.1 (2023-03-24)\n------------------\n\n* Updated version requirement of pillow to avoid bug\n\n4.0.0 (2023-03-23)\n------------------\n\n* Dropped support for python 3.6 and 3.7\n\n3.1.0 (2023-03-22)\n------------------\n\n* Added Boxplot Chart including example in examples notebook\n\n3.0.5 (2022-12-13)\n------------------\n\n* Fixed a few errors in example and tutorial notebooks\n* Fixed a typo in requirements.txt\n\n3.0.4 (2022-10-18)\n------------------\n\n* Updated package requirements\n* Got rid of future deprecation warnings\n* Bugfix related to legend for graphs with multiple groups and colors\n\n3.0.2 (2020-10-21)\n------------------\n\n* Support pyyaml 5.2+\n\n3.0.1 (2020-06-02)\n------------------\n\n* Reduce dependencies by switching from Jupyter to IPython.\n\n3.0.0 (2020-05-29)\n------------------\n\n* Updated Python to 3.6+ and Pandas to 1.0+ (Thanks @tomasaschan!)\n* Updated Bokeh to 2.0+\n* Removed colour dependency to fix setup errors.\n\n2.7.0 (2019-11-27)\n------------------\n\nBugfixes:\n\n* Updated default yaml loader to move off of\n  deprecated method (Thanks @vh920!)\n* Updated legend handling to adjust for deprecated methods\n  in recent versions of Bokeh (Thanks for reporting @jpkoc)\n* Updated license in setup.py (Thanks for reporting @jsignell)\n* Bump base Pillow dependency to avoid insecure version.\n* Update MANIFEST to include missing files (Thanks @toddrme2178!)\n\n2.6.1 (2019-08-15)\n------------------\n\nBugfixes:\n\n* Moved package requirements and fixed bug that occured with\n  latest version of Bokeh (Thanks @emschuch & @mollymzhu!)\n* Fixed bug in README while generating docs (Thanks @Bharat123rox!)\n\n2.6.0 (2019-03-08)\n------------------\n\nImprovements:\n\n* Allows users to plot colors on bar charts that aren't contained in the\n  categorical axis.\n\n\nBugfixes:\n\n* Fixed bug that caused float types to break when plotted with categorical\n  text plots (Thanks for finding @danela!)\n* Fixed broken readme links.\n\n2.5.0 (2019-02-17)\n------------------\n\nImprovements:\n\n* Added Radar Chart\n\n2.4.0 (2019-02-16)\n------------------\n\nImprovements:\n\n* Added second Y axis plotting.\n* Removed Bokeh loading notification on import (Thanks @canavandl!)\n* Added support for custom Bokeh resource loading (Thanks @canavandl!)\n* Added example for Chart.save() method (Thanks @david30907d!)\n\nBugfixes:\n\n* Updated documentation for saving and showing svgs.\n* Fixed bug that broke plots with no difference between min and max\n  points. (Thanks for finding @fabioconcina!)\n\n2.3.5 (2018-11-21)\n------------------\n\nImprovements:\n\n* Updated docstrings (Thanks @gregorybchris @ItsPugle!)\n* Added SVG output options to Chart.show() and Chart.save()\n  (Thanks for the suggestion @jdmendoza!)\n\nBugfixes:\n\n* Fixed bug that caused source label to overlap with xaxis labels.\n* Fixed bug that prevented x axis orientation changes\n  with datetime axes (Thanks for finding @simonwongwong!)\n* Fixed bug that caused subtitle to disappear\n  with `outside_top` legend location (Thanks for finding @simonwongwong!)\n* Line segment callout properties will work\n  correctly. (Thanks @gregorybchris!)\n\n2.3.4 (2018-11-13)\n------------------\n\n* Updated Bokeh version requirements to support 1.0\n\n2.3.3 (2018-10-24)\n------------------\n\n* Removed upper bound of Pillow dependency.\n\n2.3.2 (2018-10-18)\n------------------\n\n* Stacked bar and area order now matches default vertical legend order.\n* Added method for shifting color palettes.\n* Added scatter plots with a single categorical axis.\n* Fixed bug with text_stacked that occurred with multiple categorical levels.\n\n2.3.1 (2018-09-27)\n------------------\n\n* Fix scatter plot bug that can occur due to nested data types.\n\n2.3.0 (2018-09-26)\n------------------\n\n* Added hexbin plot type.\n* More control over grouped axis label orientation.\n* Added alpha control to scatter, line, and parallel plots.\n* Added control over marker style to scatter plot.\n* Added ability to create custom color palettes.\n* Changed default accent color.\n* Visual tweaks to lollipop plot.\n* Bar plots with a few number of series will have better widths.\n\n\n2.2.0 (2018-09-17)\n------------------\n\n* First release on PyPI.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5068359375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2822265625,
          "content": "include AUTHORS.rst\ninclude CONTRIBUTING.rst\ninclude HISTORY.md\ninclude LICENSE\ninclude README.md\n\ninclude Makefile\ninclude requirements*.txt\ninclude tox.ini\n\ngraft docs\ngraft examples\ngraft tests\n\nrecursive-include chartify *\n\nrecursive-exclude * __pycache__\nrecursive-exclude * *.py[co]\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.4306640625,
          "content": ".PHONY: clean clean-test clean-pyc clean-build docs help\n.DEFAULT_GOAL := help\ndefine BROWSER_PYSCRIPT\nimport os, webbrowser, sys\ntry:\n\tfrom urllib import pathname2url\nexcept:\n\tfrom urllib.request import pathname2url\n\nwebbrowser.open(\"file://\" + pathname2url(os.path.abspath(sys.argv[1])))\nendef\nexport BROWSER_PYSCRIPT\n\ndefine PRINT_HELP_PYSCRIPT\nimport re, sys\n\nfor line in sys.stdin:\n\tmatch = re.match(r'^([a-zA-Z_-]+):.*?## (.*)$$', line)\n\tif match:\n\t\ttarget, help = match.groups()\n\t\tprint(\"%-20s %s\" % (target, help))\nendef\nexport PRINT_HELP_PYSCRIPT\nBROWSER := python -c \"$$BROWSER_PYSCRIPT\"\n\nhelp:\n\t@python -c \"$$PRINT_HELP_PYSCRIPT\" < $(MAKEFILE_LIST)\n\nclean: clean-build clean-pyc clean-test ## remove all build, test, coverage and Python artifacts\n\n\nclean-build: ## remove build artifacts\n\trm -fr build/\n\trm -fr dist/\n\trm -fr .eggs/\n\tfind . -name '*.egg-info' -exec rm -fr {} +\n\tfind . -name '*.egg' -exec rm -f {} +\n\nclean-pyc: ## remove Python file artifacts\n\tfind . -name '*.pyc' -exec rm -f {} +\n\tfind . -name '*.pyo' -exec rm -f {} +\n\tfind . -name '*~' -exec rm -f {} +\n\tfind . -name '__pycache__' -exec rm -fr {} +\n\nclean-test: ## remove test and coverage artifacts\n\trm -fr .tox/\n\trm -f .coverage\n\trm -fr htmlcov/\n\nlint: ## check style with flake8\n\tflake8 chartify tests\n\ntest: ## run tests quickly with the default Python\n\tpytest\n\ncoverage: ## check code coverage quickly with the default Python\n\tcoverage run --source chartify -m pytest\n\t$(BROWSER) htmlcov/index.html\n\ndocs: ## generate Sphinx HTML documentation, including API docs\n\trm -f docs/chartify.rst\n\trm -f docs/modules.rst\n\tsphinx-apidoc -o docs/ chartify\n\t$(MAKE) -C docs clean\n\t$(MAKE) -C docs html\n\t$(BROWSER) docs/_build/html/index.html\n\n# servedocs: docs ## compile the docs watching for changes\n# \twatchmedo shell-command -p '*.rst' -c '$(MAKE) -C docs html' -R -D .\n\ndist: clean ## builds source and wheel packagels\n\tpython3 setup.py sdist bdist_wheel --universal\n\tls -l dist\n\ninstall: clean ## install the package to the active Python's site-packages\n\tpython3 setup.py install\n\nrelease-dev: clean ## package and upload a release\n\tpython3 setup.py sdist bdist_wheel --universal\n\ttwine upload --repository-url https://test.pypi.org/legacy/ dist/*\n\nrelease-prod: clean ## package and upload a release\n\tpython3 setup.py sdist bdist_wheel --universal\n\ttwine upload dist/*\n\ninstall-from-test-pypi:\n\tpip3 install --index-url https://test.pypi.org/simple/ chartify\n\nblack:\n\tblack chartify tests --line-length 119"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1416015625,
          "content": "Chartify\n========\n\n![Status](https://img.shields.io/badge/Status-Beta-blue.svg)\n![Latest release](https://img.shields.io/badge/Release-5.0.1-blue.svg \"Latest release: 5.0.1\")\n![python](https://img.shields.io/badge/Python-3.9-blue.svg \"Python 3.9\")\n![python](https://img.shields.io/badge/Python-3.10-blue.svg \"Python 3.10\")\n![python](https://img.shields.io/badge/Python-3.11-blue.svg \"Python 3.11\")\n![CI](https://github.com/spotify/chartify/workflows/Tox/badge.svg \"Tox\")\n\nChartify is a Python library that makes it easy for data scientists to create charts.\n\nWhy use Chartify?\n-----------------\n\n- Consistent input data format: Spend less time transforming data to get your charts to work. All plotting functions use a consistent tidy input data format.\n- Smart default styles: Create pretty charts with very little customization required.\n- Simple API: We've attempted to make the API as intuitive and easy to learn as possible.\n- Flexibility: Chartify is built on top of [Bokeh](http://bokeh.pydata.org/en/latest/), so if you do need more control you can always fall back on Bokeh's API.\n\nExamples\n--------\n\n![](https://raw.githubusercontent.com/spotify/chartify/master/docs/_static/chartify1.png)\n![](https://raw.githubusercontent.com/spotify/chartify/master/docs/_static/chartify2.png)\n![](https://raw.githubusercontent.com/spotify/chartify/master/docs/_static/chartify3.png)\n![](https://raw.githubusercontent.com/spotify/chartify/master/docs/_static/chartify4.png)\n![](https://raw.githubusercontent.com/spotify/chartify/master/docs/_static/chartify5.png)\n![](https://raw.githubusercontent.com/spotify/chartify/master/docs/_static/chartify6.png)\n\n[See this notebook for more examples!](</examples/Examples.ipynb>).\n\nInstallation\n------------\n\n1. Chartify can be installed via pip:\n\n`pip3 install chartify`\n\n2. Install chromedriver requirement (Optional. Needed for PNG output):\n    - Install google chrome.\n    - Download the appropriate version of chromedriver for your OS [here](https://sites.google.com/chromium.org/driver/).\n    - Copy the executable file to a directory within your PATH.\n\t- View directorys in your PATH variable: `echo $PATH`\n\t- Copy chromedriver to the appropriate directory, e.g.: `cp chromedriver /usr/local/bin`\n\nGetting started\n---------------\n\nThis [tutorial notebook](https://github.com/spotify/chartify/blob/master/examples/Chartify%20Tutorial.ipynb) is the best place to get started with a guided tour of the core concepts of Chartify.\n\nFrom there, check out the [example notebook](https://github.com/spotify/chartify/blob/master/examples/Examples.ipynb) for a list of all the available plots.\n\nDocs\n---------------\n\nDocumentation available on [chartify.readthedocs.io](https://chartify.readthedocs.io/en/latest/).\n\nGetting support\n---------------\n\nUse the [chartify tag on StackOverflow](https://stackoverflow.com/questions/tagged/chartify).\n\nCode of Conduct\n---------------\n\nThis project adheres to the [Open Code of Conduct](https://github.com/spotify/code-of-conduct/blob/master/code-of-conduct.md). By participating, you are expected to honor this code.\n\nContributing\n------------\n\n[See the contributing docs](https://github.com/spotify/chartify/blob/master/CONTRIBUTING.rst).\n"
        },
        {
          "name": "chartify",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.2978515625,
          "content": "pandas>=1.2.0\nPillow>=9.1.0\n# Avoid selenium bug:\n# https://github.com/SeleniumHQ/selenium/issues/5296\nselenium>=4.0.0\nbokeh>=3.4.2\nscipy>=1.6.0\nipykernel>=6.0\nipython>=7.17.0\npyyaml>=6.0.0\nJinja2>=3.1.0\njupyter-bokeh>=3.0.7\ntornado>=6.3.2 # not directly required, pinned by Snyk to avoid a vulnerability\n"
        },
        {
          "name": "requirements_dev.txt",
          "type": "blob",
          "size": 0.2578125,
          "content": "-r requirements.txt\n\n-e .\ntwine==4.0.0\nwatchdog==3.0.0\nflake8==4.0.1\ntox==4.4.7\ncoverage==7.2.2\nSphinx==6.1.3\ncommonmark==0.9.1\nrecommonmark==0.7.1\n\npytest==7.2.2\npytest-cov==4.0.0\ncoverage-badge==1.1.0\npytest-runner==6.0.0\nimportlib-metadata==6.1.0\nblack==23.1.0\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.1142578125,
          "content": "[bdist_wheel]\nuniversal = 1\n\n[flake8]\nexclude = docs\n\n[aliases]\ntest = pytest\n# Define setup.py command aliases here\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.40625,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# Copyright (c) 2017-2018 Spotify AB\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\"\"\"The setup script.\"\"\"\nimport codecs\nimport os\nimport re\nfrom codecs import open\nfrom setuptools import setup, find_packages\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\nwith open('README.md') as readme_file:\n    readme = readme_file.read()\n\nwith open('HISTORY.md') as history_file:\n    history = history_file.read()\n\n\n# requirements\ndef package_is_pinned(name):\n    \"\"\"quick check to make sure packages are pinned\"\"\"\n    for pin in ['>', '<', '==']:\n        if pin in name:\n            return True\n    return False\n\n\nwith open(os.path.join(here, 'requirements.txt'), encoding='utf-8') as f:\n    requirements = []\n    for line in f.readlines():\n        line = line.strip()\n        if line and line[0] != '#':\n            requirements.append(line)\n    if not all(map(package_is_pinned, requirements)):\n        raise RuntimeError(\"All Packages in requirements.txt must be pinned\")\n\nsetup_requirements = [\n\n]\n\ntest_requirements = [\n\n]\n\nPACKAGE_NAME = 'chartify'\n\nHERE = os.path.abspath(os.path.dirname(__file__))\n\n\ndef read(*filenames, **kwargs):\n    \"\"\"\n    Build an absolute path from ``*filenames``, and  return contents of\n    resulting file.  Defaults to UTF-8 encoding.\n    \"\"\"\n    encoding = kwargs.get('encoding', 'utf-8')\n    sep = kwargs.get('sep', '\\n')\n    buf = []\n    for fl in filenames:\n        with codecs.open(os.path.join(HERE, fl), 'rb', encoding) as f:\n            buf.append(f.read())\n    return sep.join(buf)\n\n\nMETA_FILE = read(os.path.join(PACKAGE_NAME, '__init__.py'))\n\n\ndef find_meta(meta):\n    \"\"\"Extract __*meta*__ from META_FILE.\"\"\"\n    re_str = r\"^__{meta}__ = ['\\\"]([^'\\\"]*)['\\\"]\".format(meta=meta)\n    meta_match = re.search(re_str, META_FILE, re.M)\n    if meta_match:\n        return meta_match.group(1)\n    raise RuntimeError('Unable to find __{meta}__ string.'.format(meta=meta))\n\n\nsetup(\n    name=PACKAGE_NAME,\n    version=find_meta('version'),\n    description=\"Python library to make plotting simpler for data scientists\",\n    long_description=readme + '\\n\\n' + history,\n    long_description_content_type='text/markdown',\n    author=find_meta('author'),\n    author_email=find_meta('email'),\n    url='https://github.com/spotify/chartify',\n    packages=find_packages(include=['chartify']),\n    include_package_data=True,\n    install_requires=requirements,\n    zip_safe=False,\n    keywords='chartify',\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Intended Audience :: Science/Research',\n        'Natural Language :: English',\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"License :: OSI Approved :: Apache Software License\"\n    ],\n    test_suite='tests',\n    tests_require=test_requirements,\n    setup_requires=setup_requirements,\n    python_requires='>=3.9,<4',\n    license=\"Apache 2\")\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.5869140625,
          "content": "[tox]\nenvlist = py39, py310, py311\nskipsdist = True\nusedevelop = True\n\n[gh-actions]\npython =\n    3.11: py311\n    3.10: py310\n    3.9: py39\n\n[testenv]\nsetenv =\n    PYTHONPATH = {toxinidir}\ndeps =\n    -r{toxinidir}/requirements_dev.txt\ncommands =\n    flake8 {posargs}\n    coverage erase\n    py.test {posargs}\n    coverage-badge -f -o docs/_static/coverage.svg\n\n[flake8]\nshow-source = true\nmax-line-length = 120\nignore=E203,W503\nexclude = .venv,.tox,.git,dist,docs,*.egg,build,scratch.py\n[pytest]\naddopts = -v --cov=chartify --cov-report=html --cov-report=xml --cov-report=term-missing\ntestpaths = tests\n"
        }
      ]
    }
  ]
}