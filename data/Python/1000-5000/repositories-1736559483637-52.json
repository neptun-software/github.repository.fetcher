{
  "metadata": {
    "timestamp": 1736559483637,
    "page": 52,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pypa/virtualenv",
      "stars": 4856,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.03515625,
          "content": ".tox\npip-wheel-metadata\nvenv*\n*.pyz\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.08984375,
          "content": "*.bat text eol=crlf\n*.ps1 text eol=lf\n*.fish text eol=lf\n*.csh text eol=lf\n*.sh text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2685546875,
          "content": "# packaging\n*.egg-info\nbuild\ndist\n*.egg\n.eggs\n\n# python\n*.py[codz]\n*$py.class\n\n# tools\n.tox\n.*_cache\n.DS_Store\n\n# IDE\n.idea\n.vscode\n\n/docs/_draft.rst\n/pip-wheel-metadata\n/src/virtualenv/version.py\n/src/virtualenv/out\n.python-version\n\n*wheel-store*\n\nDockerfile*\n.dockerignore\n"
        },
        {
          "name": ".markdownlint.yaml",
          "type": "blob",
          "size": 0.150390625,
          "content": "MD013:\n  code_blocks: false\n  headers: false\n  line_length: 120\n  tables: false\n\nMD046:\n  style: fenced\nno-emphasis-as-header: false\nfirst-line-h1: false\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.1435546875,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n  - repo: https://github.com/python-jsonschema/check-jsonschema\n    rev: 0.30.0\n    hooks:\n      - id: check-github-workflows\n        args: [\"--verbose\"]\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      - id: codespell\n        args: [\"--write-changes\"]\n  - repo: https://github.com/tox-dev/tox-ini-fmt\n    rev: \"1.4.1\"\n    hooks:\n      - id: tox-ini-fmt\n        args: [\"-p\", \"fix\"]\n  - repo: https://github.com/tox-dev/pyproject-fmt\n    rev: \"v2.5.0\"\n    hooks:\n      - id: pyproject-fmt\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: \"v0.8.5\"\n    hooks:\n      - id: ruff-format\n      - id: ruff\n        args: [\"--fix\", \"--unsafe-fixes\", \"--exit-non-zero-on-fix\"]\n  - repo: https://github.com/rbubley/mirrors-prettier\n    rev: \"v3.4.2\"\n    hooks:\n      - id: prettier\n        additional_dependencies:\n          - prettier@3.3.3\n          - \"@prettier/plugin-xml@3.4.1\"\n  - repo: meta\n    hooks:\n      - id: check-hooks-apply\n      - id: check-useless-excludes\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.2265625,
          "content": "version: 2\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3\"\npython:\n  install:\n    - method: pip\n      path: .\n      extra_requirements:\n        - docs\nsphinx:\n  builder: html\n  configuration: docs/conf.py\n  fail_on_warning: true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "Copyright (c) 2020-202x The virtualenv developers\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.576171875,
          "content": "# virtualenv\n\n[![PyPI](https://img.shields.io/pypi/v/virtualenv?style=flat-square)](https://pypi.org/project/virtualenv)\n[![PyPI - Implementation](https://img.shields.io/pypi/implementation/virtualenv?style=flat-square)](https://pypi.org/project/virtualenv)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/virtualenv?style=flat-square)](https://pypi.org/project/virtualenv)\n[![Documentation](https://readthedocs.org/projects/virtualenv/badge/?version=latest&style=flat-square)](http://virtualenv.pypa.io)\n[![Discord](https://img.shields.io/discord/803025117553754132)](https://discord.gg/pypa)\n[![Downloads](https://static.pepy.tech/badge/virtualenv/month)](https://pepy.tech/project/virtualenv)\n[![PyPI - License](https://img.shields.io/pypi/l/virtualenv?style=flat-square)](https://opensource.org/licenses/MIT)\n[![check](https://github.com/pypa/virtualenv/actions/workflows/check.yaml/badge.svg)](https://github.com/pypa/virtualenv/actions/workflows/check.yaml)\n\nA tool for creating isolated `virtual` python environments.\n\n- [Installation](https://virtualenv.pypa.io/en/latest/installation.html)\n- [Documentation](https://virtualenv.pypa.io)\n- [Changelog](https://virtualenv.pypa.io/en/latest/changelog.html)\n- [Issues](https://github.com/pypa/virtualenv/issues)\n- [PyPI](https://pypi.org/project/virtualenv)\n- [Github](https://github.com/pypa/virtualenv)\n\n## Code of Conduct\n\nEveryone interacting in the virtualenv project's codebases, issue trackers, chat rooms, and mailing lists is expected to\nfollow the [PSF Code of Conduct](https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 7.140625,
          "content": "[build-system]\nbuild-backend = \"hatchling.build\"\nrequires = [\n  \"hatch-vcs>=0.3\",\n  \"hatchling>=1.17.1\",\n]\n\n[project]\nname = \"virtualenv\"\ndescription = \"Virtual Python Environment builder\"\nreadme = \"README.md\"\nkeywords = [\n  \"environments\",\n  \"isolated\",\n  \"virtual\",\n]\nlicense = \"MIT\"\nmaintainers = [\n  { name = \"Bernat Gabor\", email = \"gaborjbernat@gmail.com\" },\n]\nrequires-python = \">=3.8\"\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Intended Audience :: Developers\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Operating System :: MacOS :: MacOS X\",\n  \"Operating System :: Microsoft :: Windows\",\n  \"Operating System :: POSIX\",\n  \"Programming Language :: Python :: 3 :: Only\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Programming Language :: Python :: 3.13\",\n  \"Programming Language :: Python :: Implementation :: CPython\",\n  \"Programming Language :: Python :: Implementation :: PyPy\",\n  \"Topic :: Software Development :: Libraries\",\n  \"Topic :: Software Development :: Testing\",\n  \"Topic :: Utilities\",\n]\ndynamic = [\n  \"version\",\n]\ndependencies = [\n  \"distlib>=0.3.7,<1\",\n  \"filelock>=3.12.2,<4\",\n  \"importlib-metadata>=6.6; python_version<'3.8'\",\n  \"platformdirs>=3.9.1,<5\",\n]\noptional-dependencies.docs = [\n  \"furo>=2023.7.26\",\n  \"proselint>=0.13\",\n  \"sphinx>=7.1.2,!=7.3\",\n  \"sphinx-argparse>=0.4\",\n  \"sphinxcontrib-towncrier>=0.2.1a0\",\n  \"towncrier>=23.6\",\n]\noptional-dependencies.test = [\n  \"covdefaults>=2.3\",\n  \"coverage>=7.2.7\",\n  \"coverage-enable-subprocess>=1\",\n  \"flaky>=3.7\",\n  \"packaging>=23.1\",\n  \"pytest>=7.4\",\n  \"pytest-env>=0.8.2\",\n  \"pytest-freezer>=0.4.8; platform_python_implementation=='PyPy' or (platform_python_implementation=='CPython' and sys_platform=='win32' and python_version>='3.13')\",\n  \"pytest-mock>=3.11.1\",\n  \"pytest-randomly>=3.12\",\n  \"pytest-timeout>=2.1\",\n  \"setuptools>=68\",\n  \"time-machine>=2.10; platform_python_implementation=='CPython'\",\n]\nurls.Documentation = \"https://virtualenv.pypa.io\"\nurls.Homepage = \"https://github.com/pypa/virtualenv\"\nurls.Source = \"https://github.com/pypa/virtualenv\"\nurls.Tracker = \"https://github.com/pypa/virtualenv/issues\"\nscripts.virtualenv = \"virtualenv.__main__:run_with_catch\"\nentry-points.\"virtualenv.activate\".bash = \"virtualenv.activation.bash:BashActivator\"\nentry-points.\"virtualenv.activate\".batch = \"virtualenv.activation.batch:BatchActivator\"\nentry-points.\"virtualenv.activate\".cshell = \"virtualenv.activation.cshell:CShellActivator\"\nentry-points.\"virtualenv.activate\".fish = \"virtualenv.activation.fish:FishActivator\"\nentry-points.\"virtualenv.activate\".nushell = \"virtualenv.activation.nushell:NushellActivator\"\nentry-points.\"virtualenv.activate\".powershell = \"virtualenv.activation.powershell:PowerShellActivator\"\nentry-points.\"virtualenv.activate\".python = \"virtualenv.activation.python:PythonActivator\"\nentry-points.\"virtualenv.create\".cpython3-mac-brew = \"virtualenv.create.via_global_ref.builtin.cpython.mac_os:CPython3macOsBrew\"\nentry-points.\"virtualenv.create\".cpython3-mac-framework = \"virtualenv.create.via_global_ref.builtin.cpython.mac_os:CPython3macOsFramework\"\nentry-points.\"virtualenv.create\".cpython3-posix = \"virtualenv.create.via_global_ref.builtin.cpython.cpython3:CPython3Posix\"\nentry-points.\"virtualenv.create\".cpython3-win = \"virtualenv.create.via_global_ref.builtin.cpython.cpython3:CPython3Windows\"\nentry-points.\"virtualenv.create\".pypy3-posix = \"virtualenv.create.via_global_ref.builtin.pypy.pypy3:PyPy3Posix\"\nentry-points.\"virtualenv.create\".pypy3-win = \"virtualenv.create.via_global_ref.builtin.pypy.pypy3:Pypy3Windows\"\nentry-points.\"virtualenv.create\".venv = \"virtualenv.create.via_global_ref.venv:Venv\"\nentry-points.\"virtualenv.discovery\".builtin = \"virtualenv.discovery.builtin:Builtin\"\nentry-points.\"virtualenv.seed\".app-data = \"virtualenv.seed.embed.via_app_data.via_app_data:FromAppData\"\nentry-points.\"virtualenv.seed\".pip = \"virtualenv.seed.embed.pip_invoke:PipInvoke\"\n\n[tool.hatch]\nbuild.hooks.vcs.version-file = \"src/virtualenv/version.py\"\nbuild.targets.sdist.include = [\n  \"/src\",\n  \"/tests\",\n  \"/tasks\",\n  \"/tox.ini\",\n]\nversion.source = \"vcs\"\n\n[tool.ruff]\nline-length = 120\nformat.preview = true\nformat.docstring-code-line-length = 100\nformat.docstring-code-format = true\nlint.select = [\n  \"ALL\",\n]\nlint.ignore = [\n  \"ANN\",     # no type checking added yet\n  \"COM812\",  # conflict with formatter\n  \"CPY\",     # No copyright header\n  \"D10\",     # no docstrings\n  \"D40\",     # no imperative mode for docstrings\n  \"D203\",    # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible\n  \"D212\",    # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible\n  \"DOC\",     # no restructuredtext support\n  \"INP001\",  # ignore implicit namespace packages\n  \"ISC001\",  # conflict with formatter\n  \"PLR0914\", # Too many local variables\n  \"PLR0917\", # Too many positional arguments\n  \"PLR6301\", #  Method could be a function, class method, or static method\n  \"PLW1510\", # no need for check for subprocess\n  \"PTH\",     # no pathlib, <=39 has problems on Windows with absolute/resolve, can revisit once we no longer need 39\n  \"S104\",    # Possible binding to all interfaces\n  \"S404\",    # Using subprocess is alright\n  \"S603\",    # subprocess calls are fine\n]\nlint.per-file-ignores.\"src/virtualenv/activation/python/activate_this.py\" = [\n  \"F821\", # ignore undefined template string placeholders\n]\nlint.per-file-ignores.\"tests/**/*.py\" = [\n  \"D\",       # don't care about documentation in tests\n  \"FBT\",     # don't care about booleans as positional arguments in tests\n  \"INP001\",  # no implicit namespace\n  \"PLC2701\", # Private import\n  \"PLR2004\", # Magic value used in comparison, consider replacing with a constant variable\n  \"S101\",    # asserts allowed in tests\n  \"S603\",    # `subprocess` call: check for execution of untrusted input\n]\nlint.isort = { known-first-party = [\n  \"virtualenv\",\n], required-imports = [\n  \"from __future__ import annotations\",\n] }\nlint.preview = true\n\n[tool.codespell]\nbuiltin = \"clear,usage,en-GB_to_en-US\"\ncount = true\n\n[tool.pyproject-fmt]\nmax_supported_python = \"3.13\"\n\n[tool.pytest.ini_options]\nmarkers = [\n  \"slow\",\n]\ntimeout = 600\naddopts = \"--showlocals --no-success-flaky-report\"\nenv = [\n  \"PYTHONIOENCODING=utf-8\",\n]\n\n[tool.coverage]\nhtml.show_contexts = true\nhtml.skip_covered = false\nreport.omit = [\n  # site.py is run before the coverage can be enabled, no way to measure coverage on this\n  \"**/src/virtualenv/create/via_global_ref/builtin/python2/site.py\",\n  \"**/src/virtualenv/create/via_global_ref/_virtualenv.py\",\n  \"**/src/virtualenv/activation/python/activate_this.py\",\n  \"**/src/virtualenv/seed/wheels/embed/pip-*.whl/pip/**\",\n]\npaths.source = [\n  \"src\",\n  \"**/site-packages\",\n]\nreport.fail_under = 76\nrun.source = [\n  \"${_COVERAGE_SRC}\",\n  \"tests\",\n]\nrun.dynamic_context = \"test_function\"\nrun.parallel = true\nrun.plugins = [\n  \"covdefaults\",\n]\nrun.relative_files = true\n\n[tool.towncrier]\nname = \"tox\"\nfilename = \"docs/changelog.rst\"\ndirectory = \"docs/changelog\"\ntitle_format = false\nissue_format = \":issue:`{issue}`\"\ntemplate = \"docs/changelog/template.jinja2\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 2.52734375,
          "content": "[tox]\nrequires =\n    tox>=4.2\nenv_list =\n    fix\n    pypy3\n    3.13\n    3.12\n    3.11\n    3.10\n    3.9\n    3.8\n    coverage\n    readme\n    docs\nskip_missing_interpreters = true\n\n[testenv]\ndescription = run tests with {basepython}\npackage = wheel\nwheel_build_env = .pkg\nextras =\n    test\npass_env =\n    CI_RUN\n    PYTEST_*\n    TERM\nset_env =\n    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}\n    COVERAGE_PROCESS_START = {toxinidir}/pyproject.toml\n    PYTHONWARNDEFAULTENCODING = 1\n    _COVERAGE_SRC = {envsitepackagesdir}/virtualenv\ncommands =\n    coverage erase\n    coverage run -m pytest {posargs:--junitxml \"{toxworkdir}/junit.{envname}.xml\" tests --int}\n    coverage combine\n    coverage report --skip-covered --show-missing\n    coverage xml -o \"{toxworkdir}/coverage.{envname}.xml\"\n    coverage html -d {envtmpdir}/htmlcov --show-contexts  --title virtualenv-{envname}-coverage\nuv_seed = true\n\n[testenv:fix]\ndescription = format the code base to adhere to our styles, and complain about what we cannot do automatically\nskip_install = true\ndeps =\n    pre-commit-uv>=4.1.1\ncommands =\n    pre-commit run --all-files --show-diff-on-failure\n\n[testenv:readme]\ndescription = check that the long description is valid\nskip_install = true\ndeps =\n    check-wheel-contents>=0.6\n    twine>=5.1.1\n    uv>=0.4.10\ncommands =\n    uv build --sdist --wheel --out-dir {envtmpdir} .\n    twine check {envtmpdir}{/}*\n    check-wheel-contents --no-config {envtmpdir}\n\n[testenv:docs]\ndescription = build documentation\nextras =\n    docs\ncommands =\n    sphinx-build -d \"{envtmpdir}/doctree\" docs \"{toxworkdir}/docs_out\" --color -b html {posargs:-W}\n    python -c 'import pathlib; print(\"documentation available under file://\\{0\\}\".format(pathlib.Path(r\"{toxworkdir}\") / \"docs_out\" / \"index.html\"))'\n\n[testenv:upgrade]\ndescription = upgrade pip/wheels/setuptools to latest\nskip_install = true\ndeps =\n    ruff>=0.6.5\npass_env =\n    UPGRADE_ADVISORY\nchange_dir = {toxinidir}/tasks\ncommands =\n    - python upgrade_wheels.py\nuv_seed = true\n\n[testenv:release]\ndescription = do a release, required posarg of the version number\ndeps =\n    gitpython>=3.1.43\n    packaging>=24.1\n    towncrier>=24.8\nchange_dir = {toxinidir}/tasks\ncommands =\n    python release.py --version {posargs}\n\n[testenv:dev]\ndescription = generate a DEV environment\npackage = editable\nextras =\n    docs\n    test\ncommands =\n    uv pip tree\n    python -c 'import sys; print(sys.executable)'\n\n[testenv:zipapp]\ndescription = generate a zipapp\nskip_install = true\ndeps =\n    packaging>=24.1\ncommands =\n    python tasks/make_zipapp.py\nuv_seed = true\n"
        }
      ]
    }
  ]
}