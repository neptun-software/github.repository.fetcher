{
  "metadata": {
    "timestamp": 1736559803482,
    "page": 531,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "NTMC-Community/MatchZoo",
      "stars": 3849,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.30859375,
          "content": "# .coveragerc to control coverage.py\n[report]\n# regrexes for lines to exclude from consideration\nexclude_lines = \n  if __name__ == .__main__.:\n  ValueError\n  TypeError\n  NotImplementedError\nomit = \n  matchzoo/__init__.py\n  matchzoo/version.py\n  matchzoo/models/parameter_readme_generator.py\n  matchzoo/*/__init__.py\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.3828125,
          "content": "[flake8]\nignore = \n    # D401 First line should be in imperative mood\n    D401,\n    # D202 No blank lines allowed after function docstring\n    D202,\n\n    # For doctests:\n    # D207 Docstring is under-indented\n    D207,\n    # D301 Use r\"\"\" if any backslashes in a docstring\n    D301,\n    # F401 'blah blah' imported but unused\n    F401,\n\n    # D100 Missing docstring in public module\n    D100,"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0283203125,
          "content": "tutorials/* linguist-vendored"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2958984375,
          "content": "*.pyc\n*.log\n*.swp\n*.bak\n*.weights\n*.trec\n*.ranklist\n*.DS_Store\n.vscode\n.coverage\n.ipynb_checkpoints/\npredict.*\nbuild/\ndist/\ndata/\nlog/*\n.ipynb_checkpoints/\nmatchzoo/log/*\nmatchzoo/querydecision/\nlog/*\n.idea/\n.pytest_cache/\nMatchZoo.egg-info/\nnotebooks/wikiqa/.ipynb_checkpoints/*\n.cache\n.tmpdir\nhtmlcov/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.74609375,
          "content": "language: python\n\ncache: pip\n\nsudo: true\n\nenv:\n  global:\n    - PYTHONPATH=$PYTHONPATH:$TRAVIS_BUILD_DIR/tests:$TRAVIS_BUILD_DIR/matchzoo\n\nmatrix:\n  allow_failures:\n    - os: osx\n  include:\n    - os: linux\n      dist: trusty\n      python: 3.6\n    - os: osx\n      osx_image: xcode10.2\n      language: shell\n\ninstall:\n  - pip3 install -U pip\n  - pip3 install -r requirements.txt\n  - python3 -m nltk.downloader punkt\n  - python3 -m nltk.downloader wordnet\n  - python3 -m nltk.downloader stopwords\n\nscript:\n  - stty cols 80\n  - export COLUMNS=80\n  - if [ \"$TRAVIS_EVENT_TYPE\" == \"pull_request\" ]; then make push; fi\n  - if [ \"$TRAVIS_EVENT_TYPE\" == \"push\" ]; then make push; fi\n  - if [ \"$TRAVIS_EVENT_TYPE\" == \"cron\" ]; then make cron; fi\n\n\nafter_success:\n  - codecov\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 1.666015625,
          "content": "# Watchers and contributors to MatchZoo repo directories/packages/files\n# Please see documentation of use of CODEOWNERS file at\n# https://help.github.com/articles/about-codeowners/ and\n# https://github.com/blog/2392-introducing-code-owners\n#\n# Anybody can add themselves or a team as additional watcher or contributor \n# to get notified about changes in a specific package.\n# See https://help.github.com/articles/about-teams how to setup teams.\n\n#  Define individuals or teams that are responsible for code in a repository.\n\n# global owner.\n*       @faneshion\n\n# third-party & project configuration\n.coveragerc             @bwanglzu\n.gitignore      \t    @faneshion\n.travis.yml     \t    @bwanglzu\nCONTRIBUTING.MD \t    @bwanglzu\nMakefile        \t    @uduse @bwanglzu\nREADME.md       \t    @faneshion @pl8787\nreadthedocs.yml \t    @wqh17101 @bwanglzu\nrequirements.txt        @faneshion @pl8787\nsetup.py                @faneshion @pl8787\n\n# artworks\n/artworks/              @faneshion\n\n# tutorials\n/tutorials/             @uduse @faneshion\n\n# docs\n/docs/                  @wqh17101 @bwanglzu\n\n# tests\n/tests/                 @faneshion @uduse @bwanglzu\n\n# matchzoo\n/matchzoo/engine/       @faneshion @bwanglzu @uduse @pl8787\n/matchzoo/auto/         @uduse @bwanglzu\n/matchzoo/models/       @faneshion @pl8787 @bwanglzu @uduse\n/matchzoo/preprocessor/ @uduse @faneshion @pl8787\n/matchzoo/tasks/        @uduse @bwanglzu\n/matchzoo/data_generator/   @faneshion @uduse @pl8787 \n/matchzoo/data_pack/    @faneshion @uduse \n/matchzoo/metrics/      @faneshion  @pl8787 @uduse\n/matchzoo/losses/       @faneshion @pl8787 @bwanglzu\n/matchzoo/layers/       @uduse @yangliuy\n/matchzoo/*             @faneshion @uduse @bwanglzu\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.8916015625,
          "content": "Contributing to Matchzoo\n----------\n\n> Note: Matchzoo is developed under Python 3.6.\n\nWelcome! Matchzoo is a community project that aims to work for a wide range of NLP and IR tasks such as Question Answering, Information Retrieval, Paraphrase identification etc. Your experience and what you can contribute are important to the project's success.\n\nDiscussion\n----------\n\nIf you've run into behavior in Matchzoo you don't understand, or you're having trouble working out a good way to apply it to your code, or you've found a bug or would like a feature it doesn't have, we want to hear from you!\n\nOur main forum for discussion is the project's [GitHub issue tracker](https://github.com/NTMC-Community/MatchZoo/issues).  This is the right place to start a discussion of any of the above or most any other topic concerning the project.\n\nFor less formal discussion we have a chat room on Wechat (mostly Chinese speakers). Matchzoo core developers are almost always present; feel free to find us there and we're happy to chat. Please add *CLJ_Keep* as your wechat friend, she will invite you to join the chat room.\n\nFirst Time Contributors\n-----------------------\n\nMatchzoo appreciates your contribution! If you are interested in helping improve Matchzoo, there are several ways to get started:\n\n* Work on [new models](https://github.com/NTMC-Community/awaresome-neural-models-for-semantic-match).\n* Work on [tutorials](https://github.com/NTMC-Community/MatchZoo/tree/master/tutorials).\n* Work on [documentation](https://github.com/NTMC-Community/MatchZoo/tree/master/docs).\n* Try to answer questions on [the issue tracker](https://github.com/NTMC-Community/MatchZoo/issues).\n\nSubmitting Changes\n------------------\n\nEven more excellent than a good bug report is a fix for a bug, or the implementation of a much-needed new model. \n\n(*)  We'd love to have your contributions.\n\n(*) If your new feature will be a lot of work, we recommend talking to us early -- see below.\n\nWe use the usual GitHub pull-request flow, which may be familiar to you if you've contributed to other projects on GitHub -- see blow. \n\nAnyone interested in Matchzoo may review your code.  One of the Matchzoo core developers will merge your pull request when they think it's ready.\nFor every pull request, we aim to promptly either merge it or say why it's not yet ready; if you go a few days without a reply, please feel\nfree to ping the thread by adding a new comment.\n\nFor a list of Matchzoo core developers, see [Readme](https://github.com/NTMC-Community/MatchZoo/blob/master/README.md).\n\nContributing Flow\n------------------\n\n1. Fork the latest version of [MatchZoo](https://github.com/NTMC-Community/MatchZoo) into your repo.\n2. Create an issue under [NTMC-Community/Matchzoo](https://github.com/NTMC-Community/MatchZoo/issues), write description about the bug/enhancement.\n3. Clone your forked MatchZoo into your machine, add your changes together with associated tests.\n4. Run `make test` with terminal, ensure all unit tests & integration tests passed on your computer.\n5. Push to your forked repo, then send the pull request to the official repo. In pull request, you need to create a link to the issue you created using `#[issue_id]`, and describe what has been changed.\n6. Wait [continuous integration](https://travis-ci.org/faneshion/MatchZoo/) passed.\n7. Wait [Codecov](https://codecov.io/gh/faneshion/MatchZoo) generate the coverage report.\n8. We'll assign reviewers to review your code.\n\n\nYour PR will be merged if:\n- Funcitonally benefit for the project.\n- Passed Countinuous Integration (all unit tests, integration tests and [PEP8](https://www.python.org/dev/peps/pep-0008/) check passed).\n- Test coverage didn't decreased, we use [pytest](https://docs.pytest.org/en/latest/).\n- With proper docstrings, see codebase as examples.\n- With type hints, see [typing](https://docs.python.org/3/library/typing.html). \n- All reviewers approved your changes.\n\n\n**Thanks and let's improve MatchZoo together!**"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.14453125,
          "content": "Copyright 2017 The MatchZoo Authors.  All rights reserved.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017, The MatchZoo Authors.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.5859375,
          "content": "# Usages:\n#\n# to install matchzoo dependencies:\n# $ make init\n#\n# to run all matchzoo tests, recommended for big PRs and new versions:\n# $\tmake test\n#\n# there are three kinds of tests:\n#\n# 1. \"quick\" tests\n# \t- run in seconds\n#   - include all unit tests without marks and all doctests\n#   - for rapid prototyping\n#   - CI run this for all PRs\n#\n# 2. \"slow\" tests\n#   - run in minutes\n#   - include all unit tests marked \"slow\"\n#   - CI run this for all PRs\n#\n# 3. \"cron\" tests\n#   - run in minutes\n#   - involves underministic behavoirs (e.g. network connection)\n#   - include all unit tests marked \"cron\"\n#   - CI run this on a daily basis\n#\n# to run quick tests, excluding time consuming tests and crons:\n# $ make quick\n#\n# to run slow tests, excluding normal tests and crons:\n# $ make slow\n#\n# to run crons:\n# $ make cron\n#\n# to run all tests:\n# $ make test\n#\n# to run CI push/PR tests:\n# $ make push\n#\n# to run docstring style check:\n# $ make flake\n\ninit:\n\tpip install -r requirements.txt\n\nTEST_ARGS = -v --full-trace -l --doctest-modules --doctest-continue-on-failure --cov matchzoo/ --cov-report term-missing --cov-report html --cov-config .coveragerc matchzoo/ tests/ -W ignore::DeprecationWarning --ignore=matchzoo/contrib\nFLAKE_ARGS = ./matchzoo --exclude=__init__.py,matchzoo/contrib\n\ntest:\n\tpytest $(TEST_ARGS)\n\tflake8 $(FLAKE_ARGS)\n\npush:\n\tpytest -m 'not cron' $(TEST_ARGS) ${ARGS}\n\tflake8 $(FLAKE_ARGS)\n\nquick:\n\tpytest -m 'not slow and not cron' $(TEST_ARGS) ${ARGS}\n\nslow:\n\tpytest -m 'slow and not cron' $(TEST_ARGS) ${ARGS}\n\ncron:\n\tpytest -m 'cron' $(TEST_ARGS) ${ARGS}\n\nflake:\n\tflake8 $(FLAKE_ARGS) ${ARGS}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.1982421875,
          "content": "<div align='center'>\n<img src=\"https://github.com/NTMC-Community/MatchZoo/blob/master/artworks/matchzoo-logo.png?raw=true\" width = \"400\"  alt=\"logo\" align=\"center\" />\n</div>\n\n# MatchZoo [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=MatchZoo:%20deep%20learning%20for%20semantic%20matching&url=https://github.com/NTMC-Community/MatchZoo)\n\n> Facilitating the design, comparison and sharing of deep text matching models.<br/>\n> MatchZoo 是一个通用的文本匹配工具包，它旨在方便大家快速的实现、比较、以及分享最新的深度文本匹配模型。\n\n[![Python 3.6](https://img.shields.io/badge/python-3.6%20%7C%203.7-blue.svg)](https://www.python.org/downloads/release/python-360/)\n[![Pypi Downloads](https://img.shields.io/pypi/dm/matchzoo.svg?label=pypi)](https://pypi.org/project/MatchZoo/)\n[![Documentation Status](https://readthedocs.org/projects/matchzoo/badge/?version=master)](https://matchzoo.readthedocs.io/en/master/?badge=master)\n[![Build Status](https://travis-ci.org/NTMC-Community/MatchZoo.svg?branch=master)](https://travis-ci.org/NTMC-Community/MatchZoo/)\n[![codecov](https://codecov.io/gh/NTMC-Community/MatchZoo/branch/master/graph/badge.svg)](https://codecov.io/gh/NTMC-Community/MatchZoo)\n[![License](https://img.shields.io/badge/License-Apache%202.0-yellowgreen.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Requirements Status](https://requires.io/github/NTMC-Community/MatchZoo/requirements.svg?branch=master)](https://requires.io/github/NTMC-Community/MatchZoo/requirements/?branch=master)\n---\n🔥**News: [MatchZoo-py](https://github.com/NTMC-Community/MatchZoo-py) (PyTorch version of MatchZoo) is ready now.**\n\nThe goal of MatchZoo is to provide a high-quality codebase for deep text matching research, such as document retrieval, question answering, conversational response ranking, and paraphrase identification. With the unified data processing pipeline, simplified model configuration and automatic hyper-parameters tunning features equipped, MatchZoo is flexible and easy to use.\n\n<table>\n  <tr>\n    <th width=30%, bgcolor=#999999 >Tasks</th> \n    <th width=20%, bgcolor=#999999>Text 1</th>\n    <th width=\"20%\", bgcolor=#999999>Text 2</th>\n    <th width=\"20%\", bgcolor=#999999>Objective</th>\n  </tr>\n  <tr>\n    <td align=\"center\", bgcolor=#eeeeee> Paraphrase Identification </td>\n    <td align=\"center\", bgcolor=#eeeeee> string 1 </td>\n    <td align=\"center\", bgcolor=#eeeeee> string 2 </td>\n    <td align=\"center\", bgcolor=#eeeeee> classification </td>\n  </tr>\n  <tr>\n    <td align=\"center\", bgcolor=#eeeeee> Textual Entailment </td>\n    <td align=\"center\", bgcolor=#eeeeee> text </td>\n    <td align=\"center\", bgcolor=#eeeeee> hypothesis </td>\n    <td align=\"center\", bgcolor=#eeeeee> classification </td>\n  </tr>\n  <tr>\n    <td align=\"center\", bgcolor=#eeeeee> Question Answer </td>\n    <td align=\"center\", bgcolor=#eeeeee> question </td>\n    <td align=\"center\", bgcolor=#eeeeee> answer </td>\n    <td align=\"center\", bgcolor=#eeeeee> classification/ranking </td>\n  </tr>\n  <tr>\n    <td align=\"center\", bgcolor=#eeeeee> Conversation </td>\n    <td align=\"center\", bgcolor=#eeeeee> dialog </td>\n    <td align=\"center\", bgcolor=#eeeeee> response </td>\n    <td align=\"center\", bgcolor=#eeeeee> classification/ranking </td>\n  </tr>\n  <tr>\n    <td align=\"center\", bgcolor=#eeeeee> Information Retrieval </td>\n    <td align=\"center\", bgcolor=#eeeeee> query </td>\n    <td align=\"center\", bgcolor=#eeeeee> document </td>\n    <td align=\"center\", bgcolor=#eeeeee> ranking </td>\n  </tr>\n</table>\n\n## Get Started in 60 Seconds\n\nTo train a [Deep Semantic Structured Model](https://www.microsoft.com/en-us/research/project/dssm/), import matchzoo and prepare input data.\n\n```python\nimport matchzoo as mz\n\ntrain_pack = mz.datasets.wiki_qa.load_data('train', task='ranking')\nvalid_pack = mz.datasets.wiki_qa.load_data('dev', task='ranking')\n```\n\nPreprocess your input data in three lines of code, keep track parameters to be passed into the model.\n\n```python\npreprocessor = mz.preprocessors.DSSMPreprocessor()\ntrain_processed = preprocessor.fit_transform(train_pack)\nvalid_processed = preprocessor.transform(valid_pack)\n```\n\nMake use of MatchZoo customized loss functions and evaluation metrics:\n\n```python\nranking_task = mz.tasks.Ranking(loss=mz.losses.RankCrossEntropyLoss(num_neg=4))\nranking_task.metrics = [\n    mz.metrics.NormalizedDiscountedCumulativeGain(k=3),\n    mz.metrics.MeanAveragePrecision()\n]\n```\n\nInitialize the model, fine-tune the hyper-parameters.\n\n```python\nmodel = mz.models.DSSM()\nmodel.params['input_shapes'] = preprocessor.context['input_shapes']\nmodel.params['task'] = ranking_task\nmodel.guess_and_fill_missing_params()\nmodel.build()\nmodel.compile()\n```\n\nGenerate pair-wise training data on-the-fly, evaluate model performance using customized callbacks on validation data.\n\n```python\ntrain_generator = mz.PairDataGenerator(train_processed, num_dup=1, num_neg=4, batch_size=64, shuffle=True)\nvalid_x, valid_y = valid_processed.unpack()\nevaluate = mz.callbacks.EvaluateAllMetrics(model, x=valid_x, y=valid_y, batch_size=len(valid_x))\nhistory = model.fit_generator(train_generator, epochs=20, callbacks=[evaluate], workers=5, use_multiprocessing=False)\n```\n\n## References\n[Tutorials](https://github.com/NTMC-Community/MatchZoo/tree/master/tutorials)\n\n[English Documentation](https://matchzoo.readthedocs.io/en/master/)\n\n[中文文档](https://matchzoo.readthedocs.io/zh/latest/)\n\nIf you're interested in the cutting-edge research progress, please take a look at [awaresome neural models for semantic match](https://github.com/NTMC-Community/awaresome-neural-models-for-semantic-match).\n\n## Install\n\nMatchZoo is dependent on [Keras](https://github.com/keras-team/keras) and [Tensorflow](https://github.com/tensorflow/tensorflow). Two ways to install MatchZoo:\n\n**Install MatchZoo from Pypi:**\n\n```python\npip install matchzoo\n```\n\n**Install MatchZoo from the Github source:**\n\n```\ngit clone https://github.com/NTMC-Community/MatchZoo.git\ncd MatchZoo\npython setup.py install\n```\n\n\n## Models\n\n1. [DRMM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/drmm.py): this model is an implementation of <a href=\"http://www.bigdatalab.ac.cn/~gjf/papers/2016/CIKM2016a_guo.pdf\">A Deep Relevance Matching Model for Ad-hoc Retrieval</a>.\n\n2. [MatchPyramid](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/match_pyramid.py): this model is an implementation of <a href=\"https://arxiv.org/abs/1602.06359\"> Text Matching as Image Recognition</a>\n\n3. [ARC-I](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/arci.py): this model is an implementation of <a href=\"https://arxiv.org/abs/1503.03244\">Convolutional Neural Network Architectures for Matching Natural Language Sentences</a>\n\n4. [DSSM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/dssm.py): this model is an implementation of <a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/cikm2013_DSSM_fullversion.pdf\">Learning Deep Structured Semantic Models for Web Search using Clickthrough Data</a>\n\n5. [CDSSM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/cdssm.py): this model is an implementation of <a href=\"https://www.microsoft.com/en-us/research/publication/learning-semantic-representations-using-convolutional-neural-networks-for-web-search/\">Learning Semantic Representations Using Convolutional Neural Networks for Web Search</a>\n\n6. [ARC-II](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/arcii.py): this model is an implementation of <a href=\"https://arxiv.org/abs/1503.03244\">Convolutional Neural Network Architectures for Matching Natural Language Sentences</a>\n\n7. [MV-LSTM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/mvlstm.py):this model is an implementation of <a href=\"https://arxiv.org/abs/1511.08277\">A Deep Architecture for Semantic Matching with Multiple Positional Sentence Representations</a>\n\n8. [aNMM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/anmm.py): this model is an implementation of <a href=\"http://maroo.cs.umass.edu/pub/web/getpdf.php?id=1240\">aNMM: Ranking Short Answer Texts with Attention-Based Neural Matching Model</a>\n\n9. [DUET](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/duet.py): this model is an implementation of <a href=\"https://dl.acm.org/citation.cfm?id=3052579\">Learning to Match Using Local and Distributed Representations of Text for Web Search</a>\n\n10. [K-NRM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/knrm.py): this model is an implementation of <a href=\"https://arxiv.org/abs/1706.06613\">End-to-End Neural Ad-hoc Ranking with Kernel Pooling</a>\n\n11. [CONV-KNRM](https://github.com/NTMC-Community/MatchZoo/tree/master/matchzoo/models/conv_knrm.py): this model is an implementation of <a href=\"http://www.cs.cmu.edu/~zhuyund/papers/WSDM_2018_Dai.pdf\">Convolutional neural networks for soft-matching n-grams in ad-hoc search</a>\n\n12. models under development: <a href=\"https://arxiv.org/abs/1604.04378\">Match-SRNN</a>, <a href=\"https://arxiv.org/abs/1710.05649\">DeepRank</a>, <a href=\"https://arxiv.org/abs/1702.03814\">BiMPM</a> .... \n\n\n## Citation\n\nIf you use MatchZoo in your research, please use the following BibTex entry.\n\n```\n@inproceedings{Guo:2019:MLP:3331184.3331403,\n author = {Guo, Jiafeng and Fan, Yixing and Ji, Xiang and Cheng, Xueqi},\n title = {MatchZoo: A Learning, Practicing, and Developing System for Neural Text Matching},\n booktitle = {Proceedings of the 42Nd International ACM SIGIR Conference on Research and Development in Information Retrieval},\n series = {SIGIR'19},\n year = {2019},\n isbn = {978-1-4503-6172-9},\n location = {Paris, France},\n pages = {1297--1300},\n numpages = {4},\n url = {http://doi.acm.org/10.1145/3331184.3331403},\n doi = {10.1145/3331184.3331403},\n acmid = {3331403},\n publisher = {ACM},\n address = {New York, NY, USA},\n keywords = {matchzoo, neural network, text matching},\n} \n```\n\n\n## Development Team\n\n ​ ​ ​ ​\n<table border=\"0\">\n  <tbody>\n    <tr align=\"center\">\n      <td>\n        ​ <a href=\"https://github.com/faneshion\"><img width=\"40\" height=\"40\" src=\"https://github.com/faneshion.png?s=40\" alt=\"faneshion\"></a><br>\n        ​ <a href=\"http://www.bigdatalab.ac.cn/~fanyixing/\">Fan Yixing</a> ​\n        <p>Core Dev<br>\n        ASST PROF, ICT</p>​\n      </td>\n      <td>\n         <a href=\"https://github.com/bwanglzu\"><img width=\"40\" height=\"40\" src=\"https://github.com/bwanglzu.png?s=40\" alt=\"bwanglzu\"></a><br>\n         <a href=\"https://github.com/bwanglzu\">Wang Bo</a> ​\n        <p>Core Dev<br> M.S. TU Delft</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/uduse\"><img width=\"40\" height=\"40\" src=\"https://github.com/uduse.png?s=36\" alt=\"uduse\"></a><br>\n         <a href=\"https://github.com/uduse\">Wang Zeyi</a>\n         <p>Core Dev<br> B.S. UC Davis</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/pl8787\"><img width=\"40\" height=\"40\" src=\"https://github.com/pl8787.png?s=40\" alt=\"pl8787\"></a><br>\n        ​ <a href=\"https://github.com/pl8787\">Pang Liang</a>\n        <p>Core Dev<br>\n        ASST PROF, ICT</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/yangliuy\"><img width=\"40\" height=\"40\" src=\"https://github.com/yangliuy.png?s=40\" alt=\"yangliuy\"></a><br>\n        ​ <a href=\"https://github.com/yangliuy\">Yang Liu</a>\n        <p>Core Dev<br>\n        PhD. UMASS</p>​\n      </td>\n    </tr>\n    <tr align=\"center\">\n      <td>\n        ​ <a href=\"https://github.com/wqh17101\"><img width=\"40\" height=\"40\" src=\"https://github.com/wqh17101.png?s=40\" alt=\"wqh17101\"></a><br>\n        ​ <a href=\"https://github.com/wqh17101\">Wang Qinghua</a> ​\n        <p>Documentation<br>\n        B.S. Shandong Univ.</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/ZizhenWang\"><img width=\"40\" height=\"40\" src=\"https://github.com/ZizhenWang.png?s=40\" alt=\"ZizhenWang\"></a><br>\n        ​ <a href=\"https://github.com/ZizhenWang\">Wang Zizhen</a> ​\n        <p>Dev<br>\n        M.S. UCAS</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/lixinsu\"><img width=\"40\" height=\"40\" src=\"https://github.com/lixinsu.png?s=40\" alt=\"lixinsu\"></a><br>\n        ​ <a href=\"https://github.com/lixinsu\">Su Lixin</a>\n        <p>Dev<br>\n        PhD. UCAS</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/zhouzhouyang520\"><img width=\"40\" height=\"40\" src=\"https://github.com/zhouzhouyang520.png?s=40\" alt=\"zhouzhouyang520\"></a><br>\n        ​ <a href=\"https://github.com/zhouzhouyang520\">Yang Zhou</a> ​\n        <p>Dev<br>\n        M.S. CQUT</p>​\n      </td>\n      <td>\n        ​ <a href=\"https://github.com/rgtjf\"><img width=\"40\" height=\"40\" src=\"https://github.com/rgtjf.png?s=36\" alt=\"rgtjf\"></a><br>\n        ​ <a href=\"https://github.com/rgtjf\">Tian Junfeng</a> ​\n        <p>Dev<br>\n        M.S. ECNU</p>​\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n## Contribution\n\nPlease make sure to read the [Contributing Guide](./CONTRIBUTING.md) before creating a pull request. If you have a MatchZoo-related paper/project/compnent/tool, send a pull request to [this awesome list](https://github.com/NTMC-Community/awaresome-neural-models-for-semantic-match)!\n\nThank you to all the people who already contributed to MatchZoo!\n\n[Jianpeng Hou](https://github.com/HouJP), [Lijuan Chen](https://github.com/githubclj), [Yukun Zheng](https://github.com/zhengyk11), [Niuguo Cheng](https://github.com/niuox), [Dai Zhuyun](https://github.com/AdeDZY), [Aneesh Joshi](https://github.com/aneesh-joshi), [Zeno Gantner](https://github.com/zenogantner), [Kai Huang](https://github.com/hkvision), [stanpcf](https://github.com/stanpcf), [ChangQF](https://github.com/ChangQF), [Mike Kellogg\n](https://github.com/wordreference)\n\n\n\n\n## Project Organizers\n\n- Jiafeng Guo\n  * Institute of Computing Technology, Chinese Academy of Sciences\n  * [Homepage](http://www.bigdatalab.ac.cn/~gjf/)\n- Yanyan Lan\n  * Institute of Computing Technology, Chinese Academy of Sciences\n  * [Homepage](http://www.bigdatalab.ac.cn/~lanyanyan/)\n- Xueqi Cheng\n  * Institute of Computing Technology, Chinese Academy of Sciences\n  * [Homepage](http://www.bigdatalab.ac.cn/~cxq/)\n\n\n## License\n\n[Apache-2.0](https://opensource.org/licenses/Apache-2.0)\n\nCopyright (c) 2015-present, Yixing Fan (faneshion)\n"
        },
        {
          "name": "artworks",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "matchzoo",
          "type": "tree",
          "content": null
        },
        {
          "name": "readthedocs.yml",
          "type": "blob",
          "size": 0.0458984375,
          "content": "build:\n  image: latest\n\npython:\n  version: 3.6\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.302734375,
          "content": "keras == 2.3.0\ntabulate >= 0.8.2\ntensorflow >= 2.0.0\nnltk >= 3.2.3\nnumpy >= 1.14\ntqdm >= 4.23.4\ndill >= 0.2.7.1\nhyperopt >= 0.1.1\npandas == 0.24.2\nnetworkx >= 2.1\nh5py >= 2.8.0\ncoverage >= 4.3.4\ncodecov >= 2.0.15\npytest >= 3.7.4\npytest-cov >= 2.4.0\nflake8 >= 3.6.0\nflake8_docstrings >= 1.3.0\npydocstyle == 2.1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.8193359375,
          "content": "import io\r\nimport os\r\n\r\nfrom setuptools import setup, find_packages\r\n\r\n\r\nhere = os.path.abspath(os.path.dirname(__file__))\r\n\r\n# Avoids IDE errors, but actual version is read from version.py\r\n__version__ = None\r\nexec(open('matchzoo/version.py').read())\r\n\r\nshort_description = 'Facilitating the design, comparison and sharing of deep text matching models.'\r\n\r\n# Get the long description from the README file\r\nwith io.open(os.path.join(here, 'README.md'), encoding='utf-8') as f:\r\n    long_description = f.read()\r\n\r\ninstall_requires = [\r\n    'keras >= 2.3.0',\r\n    'nltk >= 3.2.3',\r\n    'numpy >= 1.14',\r\n    'tqdm >= 4.19.4',\r\n    'dill >= 0.2.7.1',\r\n    'pandas >= 0.23.1',\r\n    'networkx >= 2.1',\r\n    'h5py >= 2.8.0',\r\n    'hyperopt >= 0.1.1'\r\n]\r\n\r\nextras_requires = {\r\n    'tests': [\r\n        'coverage >= 4.3.4',\r\n        'codecov >= 2.0.15',\r\n        'pytest >= 3.0.3',\r\n        'pytest-cov >= 2.4.0',\r\n        'flake8 >= 3.6.0',\r\n        'flake8_docstrings >= 1.0.2'],\r\n}\r\n\r\n\r\nsetup(\r\n    name=\"MatchZoo\",\r\n    version=__version__,\r\n    author=\"Yixing Fan, Bo Wang, Zeyi Wang, Liang Pang, Liu Yang, Qinghua Wang, etc.\",\r\n    author_email=\"fanyixing@ict.ac.cn\",\r\n    description=(short_description),\r\n    license=\"Apache 2.0\",\r\n    keywords=\"text matching models\",\r\n    url=\"https://github.com/NTMC-Community/MatchZoo\",\r\n    packages=find_packages(),\r\n    long_description=long_description,\r\n    long_description_content_type='text/markdown',\r\n    classifiers=[\r\n        \"Development Status :: 3 - Alpha\",\r\n        'Environment :: Console',\r\n        'Operating System :: POSIX :: Linux',\r\n        'Topic :: Scientific/Engineering :: Artificial Intelligence',\r\n        \"License :: OSI Approved :: Apache Software License\",\r\n        'Programming Language :: Python :: 3.6'\r\n    ],\r\n    install_requires=install_requires,\r\n    extras_require=extras_requires\r\n)\r\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorials",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}