{
  "metadata": {
    "timestamp": 1736560015723,
    "page": 826,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Avik-Jain/100-Days-of-ML-Code-Chinese-Version",
      "stars": 3384,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1748046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n"
        },
        {
          "name": "Code",
          "type": "tree",
          "content": null
        },
        {
          "name": "Info-graphs",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2018 Avik Jain\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Other Docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.5341796875,
          "content": "# 机器学习100天\n\n英文原版请移步[Avik-Jain](https://github.com/Avik-Jain/100-Days-Of-ML-Code)。\n\n[中文最新版](https://github.com/MachineLearning100/100-Days-Of-ML-Code)。常见问题解答见[FAQ](https://github.com/MLEveryday/100-Days-Of-ML-Code/blob/master/FAQ.MD)。\n\n# 目录\n- 有监督学习\n  - [数据预处理](#数据预处理--第1天)\n  - [简单线性回归](#简单线性回归--第2天)\n  - [多元线性回归](#多元线性回归--第3天)\n  - [逻辑回归](#逻辑回归--第4天)\n  - [k近邻法(k-NN)](#k近邻法k-nn--第7天)\n  - [支持向量机(SVM)](#支持向量机svm--第12天)\n  - [决策树](#决策树--第23天)\n  - [随机森林](#随机森林--第33天)\n- 无监督学习\n  - [K-均值聚类](#k-均值聚类--第43天)\n  - [层次聚类](#层次聚类--第54天)\n\n## 数据预处理 | 第1天\n[数据预处理实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%201_Data_Preprocessing.md)\n\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%201.jpg\">\n</p>\n\n## 简单线性回归 | 第2天\n[简单线性回归实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%202_Simple_Linear_Regression.md)\n\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%202.jpg\">\n</p>\n\n## 多元线性回归 | 第3天\n[多元线性回归实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%203_Multiple_Linear_Regression.md)\n\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%203.png\">\n</p>\n\n## 逻辑回归 | 第4天\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%204.jpg\">\n</p>\n\n## 逻辑回归 | 第5天\n今天我深入研究了逻辑回归到底是什么，以及它背后的数学是什么。学习了如何计算代价函数，以及如何使用梯度下降法来将代价函数降低到最小。<br>\n由于时间关系，我将隔天发布信息图。如果有人在机器学习领域有一定经验，并愿意帮我编写代码文档，也了解github的Markdown语法，请在领英联系我。\n\n## 逻辑回归 | 第6天\n[逻辑回归实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%206_Logistic_Regression.md)\n\n## K近邻法(k-NN) | 第7天\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%207.jpg\">\n</p>\n\n## 逻辑回归背后的数学 | 第8天\n为了使我对逻辑回归的见解更加清晰，我在网上搜索了一些资源或文章，然后我就发现了Saishruthi Swaminathan的<a href = \"https://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc\">这篇文章</a><br>\n\n它给出了逻辑回归的详细描述。请务必看一看。\n\n## 支持向量机(SVM) | 第9天\n直观了解SVM是什么以及如何使用它来解决分类问题。\n\n## 支持向量机和K近邻法 | 第10天\n了解更多关于SVM如何工作和实现knn算法的知识。\n\n## K近邻法(k-NN) | 第11天\n[K近邻法(k-NN)实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2011_K-NN.md)\n\n## 支持向量机(SVM) | 第12天\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%2012.jpg\">\n</p>\n\n## 支持向量机(SVM) | 第13天\n[SVM实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2013_SVM.md)\n\n## 支持向量机(SVM)的实现 | 第14天\n今天我在线性相关数据上实现了SVM。使用Scikit-Learn库。在scikit-learn中我们有SVC分类器，我们用它来完成这个任务。将在下一次实现时使用kernel-trick。Python代码见[此处](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2013_SVM.py),Jupyter notebook见[此处](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2013_SVM.ipynb)。\n\n## 朴素贝叶斯分类器(Naive Bayes Classifier)和黑盒机器学习(Black Box Machine Learning) | 第15天\n学习不同类型的朴素贝叶斯分类器同时开始<a href=\"https://bloomberg.github.io/foml/#home\">Bloomberg</a>的课程。课程列表中的第一个是黑河机器学习。它给出了预测函数，特征提取，学习算法，性能评估，交叉验证，样本偏差，非平稳性，过度拟合和超参数调整的整体观点。\n\n## 通过内核技巧实现支持向量机 | 第16天\n使用Scikit-Learn库实现了SVM算法以及内核函数，该函数将我们的数据点映射到更高维度以找到最佳超平面。\n\n## 在Coursera开始深度学习的专业课程 | 第17天\n在1天内完成第1周和第2周内容以及学习课程中的逻辑回归神经网络。\n\n## 继续Coursera上的深度学习专业课程 | 第18天\n完成课程1。用Python自己实现一个神经网络。\n\n## 学习问题和Yaser Abu-Mostafa教授 | 第19天\n开始Yaser Abu-Mostafa教授的Caltech机器学习课程-CS156中的课程1。这基本上是对即将到来的课程的一种介绍。他也介绍了感知算法。\n\n## 深度学习专业课程2 | 第20天\n完成改进深度神经网络第1周内容：参数调整，正则化和优化。\n\n## 网页搜罗 | 第21天\n观看了一些关于如何使用Beautiful Soup进行网络爬虫的教程，以便收集用于构建模型的数据。\n\n## 学习还可行吗? | 第22天\n完成Yaser Abu-Mostafa教授的Caltech机器学习课程-CS156中的课程2。学习Hoeffding不等式。\n\n## 决策树 | 第23天\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%2023%20-%20Chinese.jpg\">\n</p>\n\n## 统计学习理论的介绍 | 第24天\nBloomberg ML课程的第3课介绍了一些核心概念，如输入空间，动作空间，结果空间，预测函数，损失函数和假设空间。\n\n## 决策树 | 第25天\n[决策树实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2025_Decision_Tree.md)\n\n## 跳到复习线性代数 | 第26天\n发现YouTube一个神奇的频道[3Blue1Brown](https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw)，它有一个播放列表《线性代数的本质》。看完了4个视频，包括了向量，线性组合，跨度，基向量，线性变换和矩阵乘法。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=9450)。\n\n## 跳到复习线性代数 | 第27天\n继续观看了4个视频，内容包括三维变换、行列式、逆矩阵、列空间、零空间和非方矩阵。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=9450)。\n\n## 跳到复习线性代数 | 第28天\n继续观看了3个视频，内容包括点积和叉积。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=9450)。\n\n## 跳到复习线性代数 | 第29天\n观看了剩余的视频12到14，内容包括特征向量和特征值，以及抽象向量空间。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=9450)。\n\n## 微积分的本质 | 第30天\n完成上一播放列表后，YouTube推荐了新内容《微积分的本质》，今天看完了其中的3个视频，包括导数、链式法则、乘积法则和指数导数。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=13407)。\n\n## 微积分的本质 | 第31天\n观看了2个视频，内容包括隐分化与极限。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=13407)。\n\n## 微积分的本质 | 第32天\n观看了剩余的4个视频，内容包括积分与高阶导数。\n\nB站播放列表在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=13407)。\n\n## 随机森林 | 第33天\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%2033.png\">\n</p>\n\n## 随机森林 | 第34天\n[随机森林实现](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2034_Random_Forests.md)\n\n## 什么是神经网络？ | 深度学习，第1章 | 第 35天\nYoutube频道3Blue1Brown中有精彩的视频介绍神经网络。这个视频提供了很好的解释，并使用手写数字数据集演示基本概念。\n\nB站视频在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=26587)。\n\n## 梯度下降法，神经网络如何学习 | 深度学习，第2章 | 第36天\nYoutube频道3Blue1Brown关于神经网络的第2部分，这个视频用有趣的方式解释了梯度下降法。推荐必须观看169.\n\nB站视频在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=26587)。\n\n## 反向传播法究竟做什么？ | 深度学习，第3章 | 第37天\nYoutube频道3Blue1Brown关于神经网络的第3部分，这个视频主要介绍了偏导数和反向传播法。\n\nB站视频在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=26587)。\n\n## 反向传播法演算 | 深度学习，第4章 | 第38天\nYoutube频道3Blue1Brown关于神经网络的第3部分，这个视频主要介绍了偏导数和反向传播法。\n\nB站视频在[这里](https://space.bilibili.com/88461692/#/channel/detail?cid=26587)。\n\n## 第1部分 | 深度学习基础Python，TensorFlow和Keras | 第39天\n视频地址在[这里](https://www.youtube.com/watch?v=wQ8BIBpya2k&t=19s&index=2&list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN)。\n<br>中文文字版[notebook](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2039.ipynb)。\n\n## 第2部分 | 深度学习基础Python，TensorFlow和Keras | 第40天\n视频地址在[这里](https://www.youtube.com/watch?v=wQ8BIBpya2k&t=19s&index=2&list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN)。\n<br>中文文字版[notebook](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2040.ipynb)。\n\n## 第3部分 | 深度学习基础Python，TensorFlow和Keras | 第41天\n视频地址在[这里](https://www.youtube.com/watch?v=wQ8BIBpya2k&t=19s&index=2&list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN)。\n<br>中文文字版[notebook](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2041.ipynb)。\n\n## 第4部分 | 深度学习基础Python，TensorFlow和Keras | 第42天\n视频地址在[这里](https://www.youtube.com/watch?v=wQ8BIBpya2k&t=19s&index=2&list=PLQVvvaa0QuDfhTox0AjmQ6tvTgMBZBEXN)。\n<br>中文文字版[notebook](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Code/Day%2042.ipynb)。\n\n## K-均值聚类 | 第43天\n转到无监督学习，并研究了聚类。可在[作者网站](http://www.avikjain.me/)查询。发现一个奇妙的[动画](http://shabal.in/visuals/kmeans/6.html)有助于理解K-均值聚类。\n\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%2043.jpg\">\n</p>\n\n## K-均值聚类 | 第44天\n实现（待添加代码）\n\n## 深入研究 | NUMPY | 第45天\n得到JK VanderPlas写的书《Python数据科学手册（Python Data Science HandBook）》，Jupyter notebooks在[这里](https://github.com/jakevdp/PythonDataScienceHandbook)。\n<br>**[高清中文版pdf](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Other%20Docs/Python%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E6%89%8B%E5%86%8C.zip)**\n<br>第2章：NumPy介绍，包括数据类型、数组和数组计算。\n<br>代码如下：\n<br>[2 NumPy入门](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.00-Introduction-to-NumPy.ipynb)\n<br>[2.1 理解Python中的数据类型](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.01-Understanding-Data-Types.ipynb)\n<br>[2.2 NumPy数组基础](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.02-The-Basics-Of-NumPy-Arrays.ipynb)\n<br>[2.3 NumPy数组的计算：通用函数](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.03-Computation-on-arrays-ufuncs.ipynb)\n\n## 深入研究 | NUMPY | 第46天\n第2章： 聚合, 比较运算符和广播。\n<br>代码如下：\n<br>[2.4 聚合：最小值、最大值和其他值](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.04-Computation-on-arrays-aggregates.ipynb)\n<br>[2.5 数组的计算：广播](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.05-Computation-on-arrays-broadcasting.ipynb)\n<br>[2.6 比较、掩码和布尔运算](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.06-Boolean-Arrays-and-Masks.ipynb)\n\n## 深入研究 | NUMPY | 第47天\n第2章： 花哨的索引，数组排序，结构化数据。\n<br>代码如下：\n<br>[2.7 花哨的索引](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.07-Fancy-Indexing.ipynb)\n<br>[2.8 数组的排序](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.08-Sorting.ipynb)\n<br>[2.9 结构化数据：NumPy的结构化数组](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/02.09-<br>Structured-Data-NumPy.ipynb)\n\n## 深入研究 | PANDAS | 第48天\n第3章：Pandas数据处理\n<br>包含Pandas对象，数据取值与选择，数值运算方法，处理缺失值，层级索引，合并数据集。\n<br>代码如下：\n<br>[3 Pandas数据处理](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.00-Introduction-to-Pandas.ipynb)\n<br>[3.1 Pandas对象简介](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.01-Introducing-Pandas-Objects.ipynb)\n<br>[3.2 数据取值与选择](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.02-Data-Indexing-and-Selection.ipynb)\n<br>[3.3 Pandas数值运算方法](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.03-Operations-in-Pandas.ipynb)\n<br>[3.4 处理缺失值](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.04-Missing-Values.ipynb)\n<br>[3.5 层级索引](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.05-Hierarchical-Indexing.ipynb)\n<br>[3.6 合并数据集：ConCat和Append方法](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.06-Concat-And-Append.ipynb)\n\n## 深入研究 | PANDAS | 第49天\n第3章：完成剩余内容-合并与连接，累计与分组，数据透视表。\n<br>代码如下：\n<br>[3.7 合并数据集：合并与连接](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.07-Merge-and-Join.ipynb)\n<br>[3.8 累计与分组](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.08-Aggregation-and-Grouping.ipynb)\n<br>[3.9 数据透视表](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.09-Pivot-Tables.ipynb)\n\n## 深入研究 | PANDAS | 第50天\n第3章：向量化字符串操作，处理时间序列。\n<br>代码如下：\n<br>[3.10 向量化字符串操作](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.10-Working-With-Strings.ipynb)\n<br>[3.11 处理时间序列](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.11-Working-with-Time-Series.ipynb)\n<br>[3.12 高性能Pandas：eval()与query()](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/03.12-Performance-Eval-and-Query.ipynb)\n\n## 深入研究 | MATPLOTLIB | 第51天\n第4章：Matplotlib数据可视化\n<br>学习简易线形图, 简易散点图，密度图与等高线图.\n<br>代码如下：\n<br>[4 Matplotlib数据可视化](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.00-Introduction-To-Matplotlib.ipynb)\n<br>[4.1 简易线形图](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.01-Simple-Line-Plots.ipynb)\n<br>[4.2 简易散点图](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.02-Simple-Scatter-Plots.ipynb)\n<br>[4.3 可视化异常处理](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.03-Errorbars.ipynb)\n<br>[4.4 密度图与等高线图](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.04-Density-and-Contour-Plots.ipynb)\n\n## 深入研究 | MATPLOTLIB | 第52天\n第4章：Matplotlib数据可视化\n<br>学习直方图，配置图例，配置颜色条，多子图。\n<br>代码如下： \n<br>[4.5 直方图](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.05-Histograms-and-Binnings.ipynb)\n<br>[4.6 配置图例](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.06-Customizing-Legends.ipynb)\n<br>[4.7 配置颜色条](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.07-Customizing-Colorbars.ipynb)\n<br>[4.8 多子图](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.08-Multiple-Subplots.ipynb)\n<br>[4.9 文字与注释](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.09-Text-and-Annotation.ipynb)\n\n## 深入研究 | MATPLOTLIB | 第53天\n第4章：Matplotlib数据可视化\n<br>学习三维绘图。\n<br>[4.12 画三维图](https://github.com/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/04.12-Three-Dimensional-Plotting.ipynb)\n\n## 层次聚类 | 第54天\n[动画演示](https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Other%20Docs/%E5%B1%82%E6%AC%A1%E8%81%9A%E7%B1%BB.gif)\n\n<p align=\"center\">\n  <img src=\"https://github.com/MachineLearning100/100-Days-Of-ML-Code/blob/master/Info-graphs/Day%2054.jpg\">\n</p>\n"
        },
        {
          "name": "README.md.bak",
          "type": "blob",
          "size": 0.07421875,
          "content": "# 100 Days of ML Code\nChinese Translation for Machine Learning Infographics\n"
        }
      ]
    }
  ]
}