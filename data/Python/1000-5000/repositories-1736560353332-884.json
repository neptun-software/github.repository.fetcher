{
  "metadata": {
    "timestamp": 1736560353332,
    "page": 884,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Lxtharia/minegrub-theme",
      "stars": 3323,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": "# Ignoring the 00_header backup file\n00_header*\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2022 Lxtharia\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.802734375,
          "content": "**The Minecraft Grub Theme Trio:**\n\n| *> Minecraft Main Menu <* | [Minecraft World Selection Menu](https://github.com/Lxtharia/minegrub-world-sel-theme) | [Using both themes together](https://github.com/Lxtharia/double-minegrub-menu) |\n| --- | --- | --- |\n\n**Also check out these other projects:**\n| [Minecraft SDDM Theme](https://github.com/Davi-S/sddm-theme-minesddm) by Davi-S | [Minecraft Plymouth Theme](https://github.com/nikp123/minecraft-plymouth-theme) by nikp123 |\n| --- | --- |\n\n\nThere is also a [Spanish translation](https://github.com/FeRChImoNdE/minegrub-theme-es)!\n\n# Minegrub\n\nA Grub Theme in the style of Minecraft!\n\n\n![Minegrub Preview \"Screenshot\"](resources/preview_minegrub.png)\n\n# Installation\n\n> ### Note: grub vs grub2\n> - If you have a `/boot/grub2` folder instead of a `/boot/grub` folder , you need to adjust the file paths mentioned here and in the `minegrub-update.service` file\n> - Also if you're not sure, run `grub-mkconfig -V` to check if you have grub version 2 (you should have)\n\n## Manually\n\n- Clone this repository\n```\ngit clone https://github.com/Lxtharia/minegrub-theme.git\n```\n- (optional) Choose a background\n```\n./choose_background.sh  # or just copy a custom image to minegrub/background.png\n```\n  - If you want to use the update script, copy an arbitrary number of images you would like to use to `minegrub/backgrounds/`. You can find some options in `background_options/` but you can also use your own images.\n  - If you do not want to use the update script or if you always want to use the same background, you can use `./choose_background.sh` or just copy a custom image to `minegrub/background.png`\n\n- Copy the folder to your boot partition: (for your interest: `-ruv` = recursive, update, verbose)\n```\ncd ./minegrub-theme\nsudo cp -ruv ./minegrub /boot/grub/themes/\n```\n- Open `/etc/default/grub` with your text editor and change/uncomment this line:\n```\nGRUB_THEME=/boot/grub/themes/minegrub/theme.txt\n```\n- Update your live grub config by running\n    ```\n    sudo grub-mkconfig -o /boot/grub/grub.cfg\n    ```\n- You're good to go!\n- Check out the `Configuration` section if you want to auto-update the splash text, the background and the packages display after every boot\n\n## Using the installation script\n- Run the installation script as root and at your own risk (It's run as sudo after all)\n```\nsudo ./install_theme.sh\n```\n- This will help you to install the theme, the systemd service and enable the console background\n- It also lets you choose a background if you don't want to randomize it\n\n---\n\n## NixOS module (flake)\n\n<details><summary>This is a minimal example</summary>\n\n```nix\n# flake.nix\n{\n  inputs.minegrub-theme.url = \"github:Lxtharia/minegrub-theme\";\n  # ...\n\n  outputs = {nixpkgs, ...} @ inputs: {\n    nixosConfigurations.HOSTNAME = nixpkgs.lib.nixosSystem {\n      modules = [\n        ./configuration.nix\n        inputs.minegrub-theme.nixosModules.default\n      ];\n    };\n  }\n}\n\n# configuration.nix\n{ pkgs, ... }: {\n\n  boot.loader.grub = {\n    minegrub-theme = {\n      enable = true;\n      splash = \"100% Flakes!\";\n      background = \"background_options/1.8  - [Classic Minecraft].png\";\n      boot-options-count = 4;\n    };\n    # ...\n  };\n}\n```\n</details>\n\n# Configuration\n\n## Adjusting for a different amount of boot options:\n\n- If you have more or less than 4 boot options, the buttons will overlap with the bottom bar (the one saying \"Options\" and \"Console\")\n- To move that bar down and fix this, all you need to do is edit [this line](https://github.com/Lxtharia/minegrub-theme/blob/main/minegrub/theme.txt#L71) in the theme.txt: `/boot/grub/themes/minegrub/theme.txt`\n  - (You can also edit the file in the cloned repository so you don't overwrite it again when you update the theme at some point (via a `cp -r`))\n- The formula and some precalculated values (for 2,3,4,5... boot options) are in the `theme.txt`, so you should be able to easily change it to the correct value.\n\n## Updating splash text, background and \"x Packages Installed\" text after every boot!\n\nThe `update_theme.py` script chooses a random line from `assets/splashes.txt` and generates and replaces the `logo.png` which holds the splash text, as well as updates the amount of packages currently installed. It also randomly chooses a file from `backgrounds/` (ignoring hidden files beginning with a dot) as the background image.\n- Make sure `fastfetch` or `neofetch` is installed\n- Make sure Python 3 (or an equivalent) and the Pillow python package are installed\n  - Install Pillow either with the python-pillow package from the AUR or with\n    `sudo -H pip3 install pillow`\n  - It's important to use `sudo -H`, because it needs to be available for the root user\n- To add new splash texts simply edit `./minegrub/assets/splashes.txt` and add them to the file.\n- Put all backgrounds you want to randomly choose from in `./minegrub/backgrounds/`. Hidden files (i.e. filenames beginning with a dot) will be ignored. You can also add your own images.\n- If you want to get a specific splash and/or background for the next boot, run `python update_theme.py [BACKGROUND_FILE [SPLASH]]`, e.g. `python update_theme.py 'backgrounds/1.15 - [Buzzy Bees].png' 'Splashing!'`\n  - Empty string parameters will be replaced by a random choice, e.g. `python update_theme.py '' 'Splashing!'` for a random background and the splash `Splashing!`.\n\n### Update splash and \"Packages Installed\"...\n\n#### ...manually\n\n- Just run `python /boot/grub/themes/minegrub/update_theme.py` (from anywhere) after boot using whatever method works for you\n\n#### ...with init-d (SysVinit)\n\n- Just copy the `./minegrub-SysVinit.sh` under `/etc/init.d` as `minecraft-grub` then run `update-rc.d minecraft-grub defaults` as root privileges:\n```bash\nsudo cp -v \"./minegrub-SysVinit.sh\" \"/etc/init.d/minecraft-grub\"\nsudo chmod u+x \"/etc/init.d/minecraft-grub\" # Just to be sure the permissions are set correctly.\nsudo update-rc.d minecraft-grub defaults\n```\n\n#### ...with systemd\n\n- Edit `./minegrub-update.service` to use `/boot/grub2/` on line 5 if applicable\n- Copy `./minegrub-update.service` to `/etc/systemd/system`\n- Enable the service: `systemctl enable minegrub-update.service`\n- If it's not updating after rebooting (it won't update on the first reboot because it updates after you boot into your system), check `systemctl status minegrub-update.service` for any errors (for example if pillow isn't installed in the correct scope)\n\n## Setting the console background\n\nWhen in grub, pressing 'c' opens the grub console.\nIf you want that console to have a background you can specify `GRUB_BACKGROUND=<path>` in `/etc/defaults/grub`\n\n**Though this doesn't work if a theme is set**, so you first need to change a line in a grub file.\nThis can be done by running this pretty looking sed command:\n```bash\n# Create a backup of the file first\ncp /etc/grub.d/00_header ./00_header.bak\n# replace the elif in that line with an fi; if\nsed --in-place -E 's/(.*)elif(.*\"x\\$GRUB_BACKGROUND\" != x ] && [ -f \"\\$GRUB_BACKGROUND\" ].*)/\\1fi; if\\2/' /etc/grub.d/00_header\n```\nNow you can set \n```\nGRUB_BACKGROUND=\"/boot/grub/themes/minegrub/dirt.png\"\n```\nAnd don't forget to regenerate the `grub.cfg` :)\n\n\n# Notes:\n\n- the `GRUB_TIMEOUT_STYLE` in the defaults/grub file should be set to `menu`, so it immediately shows the menu (else you would need to press ESC and you dont want that)\n- I'm no Linux expert, that's why I explain it so thoroughly, for other newbies :>\n- i use arch btw\n- i hope u like it, cause i sure do lmao\n\n---\n\n### Thanks to\n\n- https://github.com/toboot for giving me this wonderful idea!\n- the internet for giving me wisdom lmao (Mainly http://wiki.rosalab.ru/en/index.php/Grub2_theme_tutorial)\n- The contributors for contributing and giving me some motivation to improve some little things here and there\n- [Vanilla Tweaks](https://vanillatweaks.net) for some of the backgrounds\n\n\nFont downloaded from https://www.fontspace.com/minecraft-font-f28180 and used for non commercial use.\n"
        },
        {
          "name": "background_options",
          "type": "tree",
          "content": null
        },
        {
          "name": "choose_background.sh",
          "type": "blob",
          "size": 0.7763671875,
          "content": "#!/bin/bash\n\nSCRIPT_DIR=\"$( cd -- \"$(dirname \"$0\")\" >/dev/null 2>&1 ; pwd -P )\"\n\ncd \"$SCRIPT_DIR/background_options/\" || exit 1\n\n# I hate bash arrays and for loops with ls\nSAVEIFS=$IFS\nIFS=$(echo -en \"\\n\\b\")\ndeclare -a backgrounds\nfor f in `ls -v *.png` ; do \n\tbackgrounds+=(\"$f\")\ndone\nIFS=$SAVEIFS\n\necho \"Choose which background you'd like!\":\n\nind=0\nfor f in \"${backgrounds[@]}\"; do \n\techo \"[$ind]: $f\"\n\tind=`expr $ind + 1`\ndone;\n\necho -n '>> ' \nread chosen_ind\n\n\nif ! [[ \"$chosen_ind\" =~ ^[0-9]+$ ]] ; then \n\techo \"Not changing background\" \n\texit 1\nfi\n\nchosen_backgound=${backgrounds[$chosen_ind]}\necho \"Chose option $chosen_ind:  $chosen_backgound\"\n\nif [[ \"$chosen_backgound\" == \"\" ]]; then\n\techo Not changing background.\nelse\n\tcp \"$chosen_backgound\" \"$SCRIPT_DIR/minegrub/background.png\"\nfi\n"
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.5537109375,
          "content": "{\n  \"nodes\": {\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1689850295,\n        \"narHash\": \"sha256-fUYf6WdQlhd2H+3aR8jST5dhFH1d0eE22aes8fNIfyk=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"5df4d78d54f7a34e9ea1f84a22b4fd9baebc68d0\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 3.5576171875,
          "content": "{\n  description = \"flake support minegrub theme nixos module\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n  };\n\n  outputs = { self, nixpkgs }:\n    let\n      inherit (nixpkgs.lib) genAttrs optional;\n      eachSystem = f: genAttrs\n        [\n          \"aarch64-darwin\"\n          \"aarch64-linux\"\n          \"x86_64-darwin\"\n          \"x86_64-linux\"\n        ]\n        (system: f nixpkgs.legacyPackages.${system});\n\n      minegrub =\n        { pkgs, splash ? \"\", background ? \"\", customSplash ? splash != \"\", boot-options-count, ... }:\n        pkgs.stdenv.mkDerivation {\n          name = \"minegrub-theme\";\n          src = \"${self}\";\n\n          buildInputs = with pkgs; optional customSplash\n            [\n              fastfetch\n              (python3.withPackages\n                (p: [ p.pillow ]))\n            ];\n\n          patchPhase = ''\n            sed -i '$d' minegrub/update_theme.py\n\n            top_value=$((170 + (${toString boot-options-count} - 2) * 72))\n            sed -i '/^+ image {/,/^}$/s/top = 40%+[0-9]\\+/top = 40%+'\"$top_value\"'/' minegrub/theme.txt\n          '';\n\n          buildPhase = optional customSplash ''\n            python minegrub/update_theme.py \"${background}\" \"${splash}\"\n          '';\n\n          installPhase = ''\n            cd minegrub\n            mkdir -p $out/grub/themes/minegrub\n            cp *.png $out/grub/themes/minegrub\n            cp *.pf2 $out/grub/themes/minegrub\n            cp theme.txt $out/grub/themes/minegrub\n          '';\n        };\n    in\n    {\n      nixosModules.default = { config, pkgs, ... }:\n        let\n          cfg = config.boot.loader.grub.minegrub-theme;\n          inherit (nixpkgs.lib) mkOption types mkIf;\n        in\n        {\n          options = {\n            boot.loader.grub.minegrub-theme = {\n              boot-options-count = mkOption {\n                default = 4;\n                example = 4;\n                type = types.number;\n                description = ''\n                  Number of boot options.\n                '';\n              };\n              splash = mkOption {\n                default = \"deleting garbage...\";\n                example = \"Infinite recursion\";\n                type = types.str;\n                description = ''\n                  Splash text on logo.\n                '';\n              };\n              background = mkOption {\n                default = \"background_options/1.8  - [Classic Minecraft].png\";\n                example = \"/path/to/background.png\";\n                type = types.str;\n                description = ''\n                  Path to background image.\n                '';\n              };\n              enable = mkOption {\n                default = false;\n                example = true;\n                type = types.bool;\n                description = ''\n                  Enable minegrub theme.\n                '';\n              };\n            };\n          };\n          config = mkIf cfg.enable {\n            boot.loader.grub =\n              let\n                minegrub-theme = minegrub {\n                  inherit pkgs;\n                  splash = cfg.splash;\n                  background = cfg.background;\n                  boot-options-count = cfg.boot-options-count;\n                };\n              in\n              {\n                theme = \"${minegrub-theme}/grub/themes/minegrub\";\n                splashImage = \"${minegrub-theme}/grub/themes/minegrub/background.png\";\n              };\n          };\n        };\n\n      packages = eachSystem\n        (pkgs: {\n          default = minegrub {\n            inherit pkgs;\n            # splash = \"custom splash text\";\n          };\n        });\n    };\n}\n"
        },
        {
          "name": "install_theme.sh",
          "type": "blob",
          "size": 2.8203125,
          "content": "#!/bin/bash\n\n# requires to be run as root, unless the user has access to the theme folder\nif [[ `id -u` -ne 0 ]] ; then\n\techo \"Must be run as root!\"\n\texit\nfi \n\n# this should be the directory of the clones repo\nSCRIPT_DIR=\"$( cd -- \"$(dirname \"$0\")\" >/dev/null 2>&1 ; pwd -P )\"\n# I accidentally deleted the above line once and it copied / into the theme folder, so lets prevent this\nif [[ -z $SCRIPT_DIR ]] ; then echo \"Something didn't work, exiting\"; exit; fi\n\n# check if the grub folder is called grub/ or grub2/\nif [ -d /boot/grub ]    ; then\n\tgrub_path=\"/boot/grub\"\nelif [ -d /boot/grub2 ] ; then\n\tgrub_path=\"/boot/grub2\"\nelse \n\techo \"Can't find a /boot/grub or /boot/grub2 folder. Exiting.\"\n\texit \nfi\ntheme_path=\"$grub_path/themes/minegrub\"\n\n## Prompts\n\n# Choosing a background, comment this out if it's annoying\nread -p \"[?] Do you want to choose a specific background? [y/N] \" -en 1 choose_bg \nif [[ \"$choose_bg\" =~ y|Y ]]; then\n    echo \"[INFO] Choosing a background from ./background_options/\"\n    $SCRIPT_DIR/choose_background.sh\nelse\n    echo \"[INFO] [Skipping] Choosing a background\"\nfi\n\necho\nread -p \"[?] Copy/Update the theme to '$theme_path'? [Y/n] \" -en 1 copy_theme\nif [[ \"$copy_theme\" =~ y|Y || -z \"$copy_theme\" ]]; then\n    echo \"[INFO] => Copying the theme files to boot partition:\"\n    # copy recursive, update, verbose\n    cd $SCRIPT_DIR && cp -ruv ./minegrub $grub_path/themes/ | awk '$0 !~ /skipped/ { print \"\\t\"$0 }'\nelse\n    echo \"[INFO] [Skipping] Copying the theme files to boot partition\"\nfi\n\n\necho \nread -p \"[?] Do you want to install a systemd service to automatically update the splash texts and backgrounds after every boot? [y/N] \" -en 1 skip_service_installation\nif [[ \"$skip_service_installation\" =~ y|Y ]]; then\n    echo -ne \"[INFO] Installing systemd service to update splash and package labels on boot\\n\\t\"\n    cp -uv $SCRIPT_DIR/minegrub-update.service /etc/systemd/system/\nelse\n    echo \"[INFO] [Skipping] Systemd service installation\"\nfi\n\n\necho\nread -p \"[?] Do you want a grub drop-in-config file to be edited so setting GRUB_BACKGROUND will set a background for the grub console? [y/N] \" -en 1 skip_patch\nif [[ \"$skip_patch\" =~ y|Y ]]; then\n    echo \"[INFO] Editing /etc/grub.d/00_header\"\n    # Backing up that file, just in case\n    cp --no-clobber /etc/grub.d/00_header ./00_header.bak\n    # sed'ing that one line\n    sed --in-place -E 's/(.*)elif(.*\"x\\$GRUB_BACKGROUND\" != x ] && [ -f \"\\$GRUB_BACKGROUND\" ].*)/\\1fi; if\\2/' /etc/grub.d/00_header\nelse\n    echo \"[INFO] [Skipping] Editing grub drop-in-config file\"\nfi\n\n\necho\necho \"======= Done! =======\"\necho \"[YEAH] Make sure to add/change this line in /etc/default/grub :\"\necho\necho -e \"    GRUB_THEME=$theme_path/theme.txt\"\necho\necho \"[YEAH] And optionally this line. This won't have any effect unless you have applied the patch\"\necho\necho -e \"    GRUB_BACKGROUND=$theme_path/dirt.png\"\necho\n\n"
        },
        {
          "name": "minegrub-SysVinit.sh",
          "type": "blob",
          "size": 0.716796875,
          "content": "#!/bin/bash\n\n### BEGIN INIT INFO\n# Provides:          minecraft-grub\n# Required-Start:\n# Required-Stop:\n# Default-Start:     2 3 4 5\n# Default-Stop:\n# Short-Description: Minecraft-Grub theme updater..\n#\n### END INIT INFO\n\nset -e\n\nPATH=\"/usr/bin:/bin:/sbin\"\nNAME=\"minecraft-grub\"\nDESC=\"Update the minecraft-grub theme.\"\n\nif [[ -d \"/boot/grub2\" ]] ; then\n\tTHEME_DIR=\"/boot/grub2/themes/minegrub\"\nelse\n\tTHEME_DIR=\"/boot/grub/themes/minegrub\"\nfi\n\ncase \"${1}\" in\n\t\"start\"|\"restart\"|\"reload\"|\"force-reload\")\n\t\tif command -v \"python3\" &> /dev/null ; then\n\t\t\tpython3 \"${THEME_DIR}/update_theme.py\" && exit 0 || exit 1\n\t\tfi\n\t;;\n\t\"stop\")\n\t\techo \"${0##*/}: done: nothing to do.\"\n\t\texit 0\n\t;;\n\t*)\n\t\techo \"Usage: ${0##*/} start\"\n\t\texit 3\n\t;;\nesac\n"
        },
        {
          "name": "minegrub-update.service",
          "type": "blob",
          "size": 0.2099609375,
          "content": "[Unit]\nDescription=minegrub theme splash update service\nAfter=hibernate.target\n\n[Service]\nExecStart=/usr/bin/python3 /boot/grub/themes/minegrub/update_theme.py\n\n[Install]\nWantedBy=multi-user.target hibernate.target\n"
        },
        {
          "name": "minegrub",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}