{
  "metadata": {
    "timestamp": 1736560399408,
    "page": 952,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ndleah/python-mini-project",
      "stars": 3249,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 12.00390625,
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0771484375,
          "content": "*.ipynb linguist-detectable=true\n*.ipynb linguist-language=python\n*.ipynb text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.212890625,
          "content": ".ipynb_checkpoints\n*/.ipynb_checkpoints/*\n.idea\n/.vs/PythonSettings.json\n/.vs/VSWorkspaceState.json\n/.vs/python-mini-project/v17\n/.vs/python-mini-project/FileContentIndex\n/.vs\n/Tic_Tac_Toe/tic_tac_toe -OOP.py\n/.vscode\n"
        },
        {
          "name": "Address Validator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Animalese_translator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Automated_Mailing",
          "type": "tree",
          "content": null
        },
        {
          "name": "Binary_Search_Tree",
          "type": "tree",
          "content": null
        },
        {
          "name": "Binary_tree",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 4.5458984375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nnduongthucanh@gmail.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n"
        },
        {
          "name": "Caesar_Cipher",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cat_command",
          "type": "tree",
          "content": null
        },
        {
          "name": "Caterpillar_Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Chess_Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Chinese_FlashCard",
          "type": "tree",
          "content": null
        },
        {
          "name": "Clip_Organizer",
          "type": "tree",
          "content": null
        },
        {
          "name": "Color_Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Connect-Four",
          "type": "tree",
          "content": null
        },
        {
          "name": "Converter",
          "type": "tree",
          "content": null
        },
        {
          "name": "Converting_Roman_to_Integer",
          "type": "tree",
          "content": null
        },
        {
          "name": "Convoys_GameofLife",
          "type": "tree",
          "content": null
        },
        {
          "name": "Crud_in_flask",
          "type": "tree",
          "content": null
        },
        {
          "name": "Currency_Converter",
          "type": "tree",
          "content": null
        },
        {
          "name": "Demerge_pdfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dice_Rolling_Stimulator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dictionary",
          "type": "tree",
          "content": null
        },
        {
          "name": "Diff_Utility",
          "type": "tree",
          "content": null
        },
        {
          "name": "Download Audio",
          "type": "tree",
          "content": null
        },
        {
          "name": "Egg_Catcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "Email Slicer",
          "type": "tree",
          "content": null
        },
        {
          "name": "Encode_Morse.py",
          "type": "tree",
          "content": null
        },
        {
          "name": "Execute Shell Command",
          "type": "tree",
          "content": null
        },
        {
          "name": "Exercise-Timer",
          "type": "tree",
          "content": null
        },
        {
          "name": "Expense_Tracker",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExtractPhoneNumberEmail",
          "type": "tree",
          "content": null
        },
        {
          "name": "Face_Recognition",
          "type": "tree",
          "content": null
        },
        {
          "name": "Fancy_Text_Generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Finance_Tracker",
          "type": "tree",
          "content": null
        },
        {
          "name": "Finding_Lanes",
          "type": "tree",
          "content": null
        },
        {
          "name": "Firebase_Authentication_Using_Flask",
          "type": "tree",
          "content": null
        },
        {
          "name": "GK_Maestro",
          "type": "tree",
          "content": null
        },
        {
          "name": "Geo_Plot_Using_Folium",
          "type": "tree",
          "content": null
        },
        {
          "name": "Google_Translate",
          "type": "tree",
          "content": null
        },
        {
          "name": "HangMan",
          "type": "tree",
          "content": null
        },
        {
          "name": "Hangman_Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Hashed_and_Salted_Pass",
          "type": "tree",
          "content": null
        },
        {
          "name": "IMG",
          "type": "tree",
          "content": null
        },
        {
          "name": "IP_Locator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Image_compressor",
          "type": "tree",
          "content": null
        },
        {
          "name": "Investment Calculator",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2021 Leah Nguyen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Lazy_Pong",
          "type": "tree",
          "content": null
        },
        {
          "name": "Madlibs",
          "type": "tree",
          "content": null
        },
        {
          "name": "Mail_Checker",
          "type": "tree",
          "content": null
        },
        {
          "name": "Matchmaker",
          "type": "tree",
          "content": null
        },
        {
          "name": "Math_Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Minesweeper_game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Morse_code_beep",
          "type": "tree",
          "content": null
        },
        {
          "name": "Motion_Detection",
          "type": "tree",
          "content": null
        },
        {
          "name": "Music-Player",
          "type": "tree",
          "content": null
        },
        {
          "name": "NASA_Image_Extraction",
          "type": "tree",
          "content": null
        },
        {
          "name": "Number Guessing Upper Boundary",
          "type": "tree",
          "content": null
        },
        {
          "name": "Number Guessing",
          "type": "tree",
          "content": null
        },
        {
          "name": "Object_Detection",
          "type": "tree",
          "content": null
        },
        {
          "name": "Othello-Reversi-Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Password Generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Password_Generator_2",
          "type": "tree",
          "content": null
        },
        {
          "name": "Password_Manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "Plotter",
          "type": "tree",
          "content": null
        },
        {
          "name": "Port Scanner",
          "type": "tree",
          "content": null
        },
        {
          "name": "PostgreSQL_Dumper",
          "type": "tree",
          "content": null
        },
        {
          "name": "Prefix_Trie",
          "type": "tree",
          "content": null
        },
        {
          "name": "QR Code Generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.03125,
          "content": "![Star Badge](https://img.shields.io/static/v1?label=%F0%9F%8C%9F&message=If%20Useful&style=style=flat&color=BC4E99)\n![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)\n[![View My Profile](https://img.shields.io/badge/View-My_Profile-green?logo=GitHub)](https://github.com/ndleah)\n[![View Repositories](https://img.shields.io/badge/View-My_Repositories-blue?logo=GitHub)](https://github.com/ndleah?tab=repositories)\n\n[![forthebadge](https://forthebadge.com/images/badges/powered-by-coffee.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/built-with-love.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/powered-by-black-magic.svg)](https://forthebadge.com)\n[![forthebadge](https://forthebadge.com/images/badges/made-with-python.svg)](https://forthebadge.com)\n\n# Python Mini Projects <img src=\"https://i.pinimg.com/originals/d8/5d/f0/d85df08df1212c0f8b219e779c5ebc46.gif\" align=\"right\" width=\"120\" />\n\n> A collection of easy Python small projects to help you improve your programming skills.\n\n![Issues](https://img.shields.io/github/issues/ndleah/python-mini-project?style=social&logo=github)\n![Pull Requests](https://img.shields.io/github/issues-pr/ndleah/python-mini-project?style=social&logo=github)\n![Forks](https://img.shields.io/github/forks/ndleah/python-mini-project?style=social&logo=github)\n![Stars](https://img.shields.io/github/stars/ndleah/python-mini-project?style=social&logo=github)\n[![License](https://img.shields.io/github/license/ndleah/python-mini-project?style=social&logo=github)](https://github.com/ndleah/python-mini-project/blob/main/LICENSE)\n\n<!-- omit in toc -->\n\n## Table Of Contents\n\n- [Aim Of The Project](#-aim-of-the-project)\n- [Contributing](#-contributing)\n- [README Template for scripts](#-readme-template-for-scripts)\n- [Projects](#-projects)\n- [Feedback](#-feedback)\n\n## ![image](IMG/aiming.svg) Aim Of The Project\n\nAs a Python newbie, I understand the problems that people face when they first begin studying and attempting to understand various Data Science concepts, particularly Python. This project is designed for folks who are just getting started with Python principles and exploring GitHub as \"contributors.\"\n\nMy goal is to build a common playground where everyone, from beginners to experts, can learn and share knowledge, and I hope you enjoy your stay here!\n\nLet's \"folk-ing\" create amazing things together! 👉\n\n## ![image](IMG/game-ps.svg) Contributing\n\n<details>\n<summary>\nStep 1: Star The Repo\n</summary>\n\nStar the repo by pressing the topmost-right button to start your wonderful journey\n\n![star repo](https://docs.github.com/assets/images/help/stars/starring-a-repository.png)\n\n</details>\n\n---\n\n<details>\n<summary>\nStep 2: Fork it\n</summary>\n\nOn the [GitHub page for this repository](https://github.com/ndleah/python-mini-project), click on the Button \"**Fork**\".\n\n![fork image](https://upload.wikimedia.org/wikipedia/commons/3/38/GitHub_Fork_Button.png)\n\n</details>\n\n---\n\n<details>\n<summary>\nStep 3: Clone it\n</summary>\n\n- **Method 1:** GitHub Desktop\n\n> ⚠️ **NOTE:** If you're not familiar with Git, using **GitHub Desktop Application** is a better start. If you choose this method, make sure to download it before continuing reading.\n>\n> ❗❗ Access link to download [**here**](https://desktop.github.com).\n\nLearn more about how to clone the remote respository on your local machine using **GitHub Desktop** [here](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/adding-and-cloning-repositories/cloning-and-forking-repositories-from-github-desktop#cloning-a-repository).\n\n- **Method 2:** Git\n\nClone the forked repository. Open git bash and type:\n\n```bash\ngit clone https://github.com/<your-github-username>/python-mini-project.git\n```\n\n> This makes a local copy of the repository in your machine.\n>\n> ⚠️ **Replace \\<your-github-username\\>!**\n\nLearn more about [forking](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) and [cloning a repo](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository).\n\n</details>\n\n---\n\n<details>\n<summary>\nStep 4: Create your feature branch \n</summary>\n\nAlways keep your local copy of the repository updated with the original repository.\nBefore making any changes and/or in an appropriate interval, follow the following steps:\n\n- **Method 1:** GitHub Desktop\n\nLearn more about how to create new branch [here](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/making-changes-in-a-branch/managing-branches#creating-a-branch) and how to fetch and pull origin from/to your local machine [here](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/keeping-your-local-repository-in-sync-with-github/syncing-your-branch).\n\nLearn more about how to fetch and pull origin from/to your local machine using **GitHub Desktop** [here](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/keeping-your-local-repository-in-sync-with-github/syncing-your-branch).\n\n- **Method 2:** Git\n\nRun the following commands **_carefully_** to update your local repository\n\n```sh\n# If you cloned a while ago, get the latest changes from upstream\ngit checkout <master>\ngit pull upstream <master>\n\n# Make a feature branch (Always check your current branch is up to date before creating a new branch from it to avoid merge conflicts)\ngit checkout -b <branch-name>\n\n#\n```\n\n</details>\n\n---\n\n<details>\n<summary>\nStep 5: Ready, Set, Go...\n</summary>\n\nOnce you have completed these steps, you are ready to start contributing to the project and creating **pull requests**.\n\n- Create a folder in\n  [projects directory](https://github.com/ndleah/python-mini-project) according to your project name.\n  > The folder name should follow the following format \"Your_Project_Name_Here\". For example: Dice_Stimulator\n- Write your code and add to the respective folder in the projects directory, locally.\n- Don't forget to add a `README.md` in your folder, according to the\n  [README_TEMPLATE.](https://github.com/Python-World/python-mini-projects/blob/master/README_TEMPLATE.md)\n\n* **Method 1:** GitHub Desktop\n\nLearn more how to pull request from your local machine using **GitHub Desktop** to the main repo [here](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/working-with-your-remote-repository-on-github-or-github-enterprise/viewing-a-pull-request-in-github-desktop).\n\n- **Method 2:** Git\n\nAdd the changes with `git add`, `git commit`:\n\n```bash\ngit add -A\ngit commit -m \"<your message>\"\n```\n\nPush the code _to your repository_.\n\n```bash\ngit push origin <branch-name>\n```\n\n</details>\n\n---\n\n<details>\n<summary>\nStep 6: Pull Request\n</summary>\n\nGo to the GitHub page of _your fork_, and **make a pull request**:\n\n![pull request image](https://i.ytimg.com/vi/rgbCcBNZcdQ/maxresdefault.jpg)\n\nRead more about pull requests on the [GitHub help pages](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request).\n\nNow wait, until _your Pull Request_ is approved! If there are any conflicts, you will get a notification.\n\n</details>\n\n<br>\n\n## ![image](IMG/bookmark.svg) README Template for scripts\n\nplease make sure to add a `README.md` file that follow the same construction as this template for consistency.\n\n[README Template](https://github.com/ndleah/python-mini-project/blob/master/README_TEMPLATE.md)\n\n## ![image](IMG/like.svg) Our Contributors\n\n<a href=\"https://github.com/ndleah/python-mini-project/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=ndleah/python-mini-project\" />\n</a>\n\n## ![image](IMG/muscle.svg) Feedback\n\nIf you have any feedback or ideas to improve this project, feel free to contact me via\n\n<a href=\"https://www.linkedin.com/in/ndleah/\">\n  <img align=\"left\" alt=\"Reeha's Linkdein\" width=\"22px\" src=\"https://cdn.jsdelivr.net/npm/simple-icons@v3/icons/linkedin.svg\" />\n\n</a>\n<a href=\"https://github.com/ndleah\">\n  <img align=\"left\" alt=\"Reeha's Github\" width=\"22px\" src=\"https://cdn.jsdelivr.net/npm/simple-icons@v3/icons/github.svg\" />\n</a>\n"
        },
        {
          "name": "README_TEMPLATE.md",
          "type": "blob",
          "size": 1.4052734375,
          "content": "<!--Please do not remove this part-->\n![Star Badge](https://img.shields.io/static/v1?label=%F0%9F%8C%9F&message=If%20Useful&style=style=flat&color=BC4E99)\n![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=103)\n\n# Script Title\n\n<p align=\"center\">\n<img src=\"assests/main.png\" width=40% height=40%>\n\n## 🛠️ Description\n\nThis open-source project contains mini python projects which you can create as a beginner. If you want, you can get the python files and edit them as you want. Feel free to contribute to this repository. You can,\n    1. Improve functionaly\n    2. Fix a bug\n    3. Or add a new cool feature\n\nTry to contribute as much as you can. Even a small contribution is enough.\n\n## ⚙️ Languages or Frameworks Used\n\nYou can see the modules required to be able to use the following scripts in the `requirement.txt` file and also you can see how to install them so that you can run the scripts successfully. Run the command given in the file on your terminal.\n\n## 🌟 How to run\n\nYou can type this command on your teminal to run the scripts.\n`python <the path of the python file>`\n\nif this doesn't work try,\n`python3 <the path of the python file>`\n\nTo stop it you can press CTRL + C\n\n## 📺 Demo\n\nSome demos of the scripts.\n\n<img src=\"assests/colorgame.png\" width=40% height=40%>\n\n## 🤖 Author\n\nThis script is by ndleah.\n\nDulneth Fernando -> https://github.com/DulnethFernando\nThis is my github profile."
        },
        {
          "name": "RSS_Manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "Regression using ANN",
          "type": "tree",
          "content": null
        },
        {
          "name": "Rock_Paper_Scissors_Spock",
          "type": "tree",
          "content": null
        },
        {
          "name": "Screenpet",
          "type": "tree",
          "content": null
        },
        {
          "name": "Shape_Recognition",
          "type": "tree",
          "content": null
        },
        {
          "name": "Simple_Http_Server",
          "type": "tree",
          "content": null
        },
        {
          "name": "Simple_Image_resize",
          "type": "tree",
          "content": null
        },
        {
          "name": "Simple_dice",
          "type": "tree",
          "content": null
        },
        {
          "name": "Slideshare to PDF",
          "type": "tree",
          "content": null
        },
        {
          "name": "Smart_Calculator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Snake_game",
          "type": "tree",
          "content": null
        },
        {
          "name": "Socket_example",
          "type": "tree",
          "content": null
        },
        {
          "name": "Speaking_Dictionary",
          "type": "tree",
          "content": null
        },
        {
          "name": "Speaking_Wikipedia",
          "type": "tree",
          "content": null
        },
        {
          "name": "Speech_To_Text",
          "type": "tree",
          "content": null
        },
        {
          "name": "Spinning Donut",
          "type": "tree",
          "content": null
        },
        {
          "name": "Sqlite-crud",
          "type": "tree",
          "content": null
        },
        {
          "name": "Stack_structure",
          "type": "tree",
          "content": null
        },
        {
          "name": "Star_Pyramid",
          "type": "tree",
          "content": null
        },
        {
          "name": "Sudoku_solver",
          "type": "tree",
          "content": null
        },
        {
          "name": "TEXTVENTURE",
          "type": "tree",
          "content": null
        },
        {
          "name": "TestTypingSpeed",
          "type": "tree",
          "content": null
        },
        {
          "name": "TextEncryptor",
          "type": "tree",
          "content": null
        },
        {
          "name": "TextToSpeech",
          "type": "tree",
          "content": null
        },
        {
          "name": "Text_Predication",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tic_Tac_Toe",
          "type": "tree",
          "content": null
        },
        {
          "name": "Todo_App",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tower-of_Hanoi",
          "type": "tree",
          "content": null
        },
        {
          "name": "Triangle Calculator",
          "type": "tree",
          "content": null
        },
        {
          "name": "Url_Shortener",
          "type": "tree",
          "content": null
        },
        {
          "name": "Web Scraping IPhone from Flipkart",
          "type": "tree",
          "content": null
        },
        {
          "name": "Web scraping for book names",
          "type": "tree",
          "content": null
        },
        {
          "name": "Weights_on_different_planets",
          "type": "tree",
          "content": null
        },
        {
          "name": "Whatsapp_Bot",
          "type": "tree",
          "content": null
        },
        {
          "name": "Windows_Shutdown",
          "type": "tree",
          "content": null
        },
        {
          "name": "Word_Jumble",
          "type": "tree",
          "content": null
        },
        {
          "name": "Wordle_Aid",
          "type": "tree",
          "content": null
        },
        {
          "name": "Youtube_video_download",
          "type": "tree",
          "content": null
        },
        {
          "name": "Zombie_Game",
          "type": "tree",
          "content": null
        },
        {
          "name": "assests",
          "type": "tree",
          "content": null
        },
        {
          "name": "csv_to_json",
          "type": "tree",
          "content": null
        },
        {
          "name": "desktopassistant",
          "type": "tree",
          "content": null
        },
        {
          "name": "digit-recognizer",
          "type": "tree",
          "content": null
        },
        {
          "name": "earth.py",
          "type": "blob",
          "size": 3.880859375,
          "content": "import numpy as np\nfrom netCDF4 import Dataset\ndownload required datset from net\n\ndef Etopo(lon_area, lat_area, resolution):\n  Input\n  resolution: resolution of topography for both of longitude and latitude [deg]\n  (Original resolution is 0.0167 deg)\n  lon_area and lat_area: the region of the map which you want like [100, 130], [20, 25]\n  \n  Output\n  Mesh type longitude, latitude, and topography data\n  \n  \n  Read NetCDF data\n  data = Dataset(\"ETOPO1_Ice_g_gdal.grd\", \"r\")\n\n  \n  Get data\n  lon_range = data.variables['x_range'][:]\n  lat_range = data.variables['y_range'][:]\n  topo_range = data.variables['z_range'][:]\n  spacing = data.variables['spacing'][:]\n  dimension = data.variables['dimension'][:]\n  z = data.variables['z'][:]\n  lon_num = dimension[0]\n  lat_num = dimension[1]\n  \n  Prepare array\n  lon_input = np.zeros(lon_num); lat_input = np.zeros(lat_num)\n  for i in range(lon_num):\n    lon_input[i] = lon_range[0] + i * spacing[0]\n  for i in range(lat_num):\n    lat_input[i] = lat_range[0] + i * spacing[1]\n\n  Create 2D array\n  lon, lat = np.meshgrid(lon_input, lat_input)\n  \n  Convert 2D array from 1D array for z value\n  topo = np.reshape(z, (lat_num, lon_num))\n  \n  Skip the data for resolution\n  if ((resolution < spacing[0]) | (resolution < spacing[1])):\n    print('Set the highest resolution')\n  else:\n    skip = int(resolution/spacing[0])\n    lon = lon[::skip,::skip]\n    lat = lat[::skip,::skip]\n    topo = topo[::skip,::skip]\n    \n  topo = topo[::-1]\n  \n  Select the range of map\n  range1 = np.where((lon>=lon_area[0]) & (lon<=lon_area[1]))\n  lon = lon[range1]; lat = lat[range1]; topo = topo[range1]\n  range2 = np.where((lat>=lat_area[0]) & (lat<=lat_area[1]))\n  lon = lon[range2]; lat = lat[range2]; topo = topo[range2]\n  \n  Convert 2D again\n  lon_num = len(np.unique(lon))\n  lat_num = len(np.unique(lat))\n  lon = np.reshape(lon, (lat_num, lon_num))\n  lat = np.reshape(lat, (lat_num, lon_num))\n  topo = np.reshape(topo, (lat_num, lon_num))\n  \n  return lon, lat, topo\ndef degree2radians(degree):\n  convert degrees to radians\n  return degree*np.pi/180\n  \ndef mapping_map_to_sphere(lon, lat, radius=1):\n  this function maps the points of coords (lon, lat) to points onto the sphere of radius radius\n  lon=np.array(lon, dtype=np.float64)\n  lat=np.array(lat, dtype=np.float64)\n  lon=degree2radians(lon)\n  lat=degree2radians(lat)\n  xs=radius*np.cos(lon)*np.cos(lat)\n  ys=radius*np.sin(lon)*np.cos(lat)\n  zs=radius*np.sin(lat)\n  return xs, ys, zs\nImport topography data\nSelect the area you want\nresolution = 0.8\nlon_area = [-180., 180.]\nlat_area = [-90., 90.]\nGet mesh-shape topography data\nlon_topo, lat_topo, topo = Etopo(lon_area, lat_area, resolution)\nxs, ys, zs = mapping_map_to_sphere(lon_topo, lat_topo)\nCtopo = [[0, 'rgb(0, 0, 70)'],[0.2, 'rgb(0,90,150)'], \n          [0.4, 'rgb(150,180,230)'], [0.5, 'rgb(210,230,250)'],\n          [0.50001, 'rgb(0,120,0)'], [0.57, 'rgb(220,180,130)'], \n          [0.65, 'rgb(120,100,0)'], [0.75, 'rgb(80,70,0)'], \n          [0.9, 'rgb(200,200,200)'], [1.0, 'rgb(255,255,255)']]\ncmin = -8000\ncmax = 8000\n\ntopo_sphere=dict(type='surface',\n  x=xs,\n  y=ys,\n  z=zs,\n  colorscale=Ctopo,\n  surfacecolor=topo,\n  cmin=cmin,\n  cmax=cmax)\nnoaxis=dict(showbackground=False,\n  showgrid=False,\n  showline=False,\n  showticklabels=False,\n  ticks='',\n  title='',\n  zeroline=False)\nimport plotly.graph_objs as go\n\ntitlecolor = 'white'\nbgcolor = 'dimgray'\n\nlayout = go.Layout(\n  autosize=False, width=1200, height=800,\n  title = 'EARTH AND NEARBY SPACE',\n  titlefont = dict(family='Courier New', color=titlecolor),\n  showlegend = False,\n  scene = dict(\n    xaxis = noaxis,\n    yaxis = noaxis,\n    zaxis = noaxis,\n    aspectmode='manual',\n    aspectratio=go.layout.scene.Aspectratio(\n      x=1, y=1, z=1)),\n  paper_bgcolor = bgcolor,\n  plot_bgcolor = bgcolor)\nfrom plotly.offline import plot\n\nplot_data=[topo_sphere]\nfig = go.Figure(data=plot_data, layout=layout)\nplot(fig, validate = False, filename='Earth.html',\n   auto_open=True)\n"
        },
        {
          "name": "highest_score.txt",
          "type": "blob",
          "size": 0.0009765625,
          "content": "1"
        },
        {
          "name": "image_comparator",
          "type": "tree",
          "content": null
        },
        {
          "name": "images_to_pdf_converter",
          "type": "tree",
          "content": null
        },
        {
          "name": "img_to_ascii",
          "type": "tree",
          "content": null
        },
        {
          "name": "infix_postfix_calculator",
          "type": "tree",
          "content": null
        },
        {
          "name": "linked_lists",
          "type": "tree",
          "content": null
        },
        {
          "name": "lorem_in_python",
          "type": "tree",
          "content": null
        },
        {
          "name": "minionGame",
          "type": "tree",
          "content": null
        },
        {
          "name": "mnist_digit_recognizer",
          "type": "tree",
          "content": null
        },
        {
          "name": "qr_with_logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.783203125,
          "content": "﻿beautifulsoup4==4.12.2\r\nUse command \"pip install bs4 or pip install beautifulsoup4\"\r\n\r\nblinker==1.7.0\r\nUse command \"pip install blinker\"\r\n\r\ncertifi==2023.11.17\r\nUse command \"pip install certifi\"\r\n\r\ncharset-normalizer==3.3.2\r\nUse command \"pip install charset-normalizer\"\r\n\r\nclick==8.1.7\r\nUse command \"pip install click\"\r\n\r\ncolorama==0.4.6\r\nUse command \"pip install colorama\"\r\n\r\nFlask==3.0.0\r\nUse command \"pip install Flask\"\r\n\r\nidna==3.6\r\nUse command \"pip install idna\"\r\n\r\nitsdangerous==2.1.2\r\nUse command \"pip install itsdangerous\"\r\n\r\nJinja2==3.1.2\r\nUse command \"pip install Jinja2\"\r\n\r\nMarkupSafe==2.1.3\r\nUse command \"pip install MarkupSafe\"\r\n\r\npyamaze==1.0.1\r\nUse command \"pip install pyamaze\"\r\n\r\nrequests==2.31.0\r\nUse command \"pip install requests\"\r\n\r\nsoupsieve==2.5\r\nUse command \"pip install soupsieve\"\r\n\r\nurllib3==2.1.0\r\nUse command \"pip install urllib3\"\r\n\r\nWerkzeug==3.0.1\r\nUse command \"pip install Werkzeug\""
        },
        {
          "name": "simple-chatbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "spam_bot",
          "type": "tree",
          "content": null
        },
        {
          "name": "string_manipulator",
          "type": "tree",
          "content": null
        },
        {
          "name": "web scraping- Find python jobs from a website",
          "type": "tree",
          "content": null
        },
        {
          "name": "website-builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "xls_to_xlsx",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}