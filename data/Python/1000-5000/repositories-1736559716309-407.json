{
  "metadata": {
    "timestamp": 1736559716309,
    "page": 407,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jazzband/djangorestframework-simplejwt",
      "stars": 4060,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.125,
          "content": "[run]\nomit =\n        rest_framework_simplejwt/token_blacklist/admin.py\n        rest_framework_simplejwt/token_blacklist/apps.py\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0244140625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n# *.mo Needs to come with the package\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n.idea/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.439453125,
          "content": "repos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: 'v4.5.0'\n  hooks:\n  - id: check-merge-conflict\n- repo: https://github.com/asottile/yesqa\n  rev: v1.5.0\n  hooks:\n  - id: yesqa\n- repo: https://github.com/pycqa/isort\n  rev: '5.12.0'\n  hooks:\n  - id: isort\n    args: [\"--profile\", \"black\"]\n- repo: https://github.com/psf/black\n  rev: '23.11.0'\n  hooks:\n  - id: black\n    language_version: python3 # Should be a command that runs python3.6+\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: 'v4.5.0'\n  hooks:\n  - id: end-of-file-fixer\n    exclude: >-\n      ^docs/[^/]*\\.svg$\n  - id: requirements-txt-fixer\n  - id: trailing-whitespace\n    types: [python]\n  - id: file-contents-sorter\n    files: |\n      CONTRIBUTORS.txt|\n      docs/spelling_wordlist.txt|\n      .gitignore|\n      .gitattributes\n  - id: check-case-conflict\n  - id: check-json\n  - id: check-xml\n  - id: check-executables-have-shebangs\n  - id: check-toml\n  - id: check-xml\n  - id: check-yaml\n  - id: debug-statements\n  - id: check-added-large-files\n  - id: check-symlinks\n  - id: debug-statements\n  - id: detect-aws-credentials\n    args: ['--allow-missing-credentials']\n  - id: detect-private-key\n    exclude: ^tests/\n- repo: https://github.com/asottile/pyupgrade\n  rev: 'v3.15.0'\n  hooks:\n  - id: pyupgrade\n    args: ['--py38-plus', '--keep-mock']\n\n- repo: https://github.com/Lucas-C/pre-commit-hooks-markup\n  rev: v1.0.1\n  hooks:\n  - id: rst-linter\n    files: >-\n      ^[^/]+[.]rst$\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.4111328125,
          "content": "version: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-20.04\n  tools:\n    python: \"3.12\"\n\npython:\n  install:\n  # Install dependencies from setup.py .\n    - method: setuptools\n      path: .\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n   configuration: docs/conf.py\n\n# If using Sphinx, optionally build your docs in additional formats such as PDF\nformats:\n   - pdf\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 16.8427734375,
          "content": "## 5.4.0\n* Changed string formatting in views by @Egor-oop in https://github.com/jazzband/djangorestframework-simplejwt/pull/750\n* Enhance BlacklistMixin with Generic Type for Accurate Type Inference by @Dresdn in https://github.com/jazzband/djangorestframework-simplejwt/pull/768\n* Improve type of `Token.for_user` to allow subclasses by @sterliakov in https://github.com/jazzband/djangorestframework-simplejwt/pull/776\n* Fix the `Null` value of the `OutstandingToken` of the `BlacklistMixin.blacklist` by @JaeHyuckSa in https://github.com/jazzband/djangorestframework-simplejwt/pull/806\n* Fix: Disable refresh token for inactive user. by @ajay09 in https://github.com/jazzband/djangorestframework-simplejwt/pull/814\n* Add option to allow inactive user authentication and token generation by @zxkeyy in https://github.com/jazzband/djangorestframework-simplejwt/pull/834\n* Drop Django <4.2, DRF <3.14, Python <3.9 by @Andrew-Chen-Wang in https://github.com/jazzband/djangorestframework-simplejwt/pull/839\n  * Note, many deprecated versions are only officially not supported but probably still work fine.\n* Add support for EdDSA and other algorithms in jwt.algorithms.requires_cryptography (#822) https://github.com/jazzband/djangorestframework-simplejwt/pull/823\n\n## 5.3.1\n\n## What's Changed\n* Remove EOL Python, Django and DRF version support by @KOliver94 in [#754](https://github.com/jazzband/djangorestframework-simplejwt/pull/754)\n* Declare support for type checking (closes #664) by @PedroPerpetua in [#760](https://github.com/jazzband/djangorestframework-simplejwt/pull/760)\n* Remove usages of deprecated datetime.utcnow() and datetime.utcfromtimestamp() in [#765](https://github.com/jazzband/djangorestframework-simplejwt/pull/765)\n\n#### Translation Updates:\n* Update Korean translations by @TGoddessana in https://github.com/jazzband/djangorestframework-simplejwt/pull/753\n\n## 5.3.0\n\n#### Notable Changes:\n* Added support for Python 3.11 by @joshuadavidthomas [#636](https://github.com/jazzband/djangorestframework-simplejwt/pull/636)\n* Added support for Django 4.2 by @johnthagen [#711](https://github.com/jazzband/djangorestframework-simplejwt/pull/711)\n* Added support for DRF 3.14 by @Andrew-Chen-Wang [#623](https://github.com/jazzband/djangorestframework-simplejwt/pull/623)\n* Added Inlang to facilitate community translations by @jannesblobel [#662](https://github.com/jazzband/djangorestframework-simplejwt/pull/662)\n* Revoke access token if user password is changed by @mahdirahimi1999 [#719](https://github.com/jazzband/djangorestframework-simplejwt/pull/719)\n* Added type hints by @abczzz13 [#683](https://github.com/jazzband/djangorestframework-simplejwt/pull/683)\n* Improved testing by @kiraware [#688](https://github.com/jazzband/djangorestframework-simplejwt/pull/688)\n* Removed support for Django 2.2 by @kiraware [#688](https://github.com/jazzband/djangorestframework-simplejwt/pull/688)\n\n#### Documentation:\n* Added write_only=True to TokenBlacklistSerializer's refresh field for better doc generation by @Yaser-Amiri [#699](https://github.com/jazzband/djangorestframework-simplejwt/pull/699)\n* Updated docs on serializer customization by @2ykwang [#668](https://github.com/jazzband/djangorestframework-simplejwt/pull/668)\n\n#### Translation Updates:\n* Updated translations for Persian (fa) language by @mahdirahimi1999 [#723](https://github.com/jazzband/djangorestframework-simplejwt/pull/723) and https://github.com/jazzband/djangorestframework-simplejwt/pull/708\n* Updated translations for Indonesian (id) language by @kiraware [#685](https://github.com/jazzband/djangorestframework-simplejwt/pull/685)\n* Added Arabic language translations by @iamjazzar [#690](https://github.com/jazzband/djangorestframework-simplejwt/pull/690)\n* Added Hebrew language translations by @elam91 [#679](https://github.com/jazzband/djangorestframework-simplejwt/pull/679)\n* Added Slovenian language translations by @banDeveloper [#645](https://github.com/jazzband/djangorestframework-simplejwt/pull/645)\n\n## Version 5.2.2\n\nMajor security release\n\n* Revert #605 [#629](https://github.com/jazzband/djangorestframework-simplejwt/pull/629)\n* Fix typo in blacklist_app.rst by @cbscsm [#593](https://github.com/jazzband/djangorestframework-simplejwt/pull/593)\n\n## Version 5.2.1\n\n* Add Swedish translations by @PasinduPrabhashitha [#579](https://github.com/jazzband/djangorestframework-simplejwt/pull/579)\n* Fixed issue #543 by @armenak-baburyan [#586](https://github.com/jazzband/djangorestframework-simplejwt/pull/586)\n* Fix uncaught exception with JWK by @jerr0328 [#600](https://github.com/jazzband/djangorestframework-simplejwt/pull/600)\n* Test on Django 4.1 by @2ykwang [#604](https://github.com/jazzband/djangorestframework-simplejwt/pull/604)\n\n## Version 5.2.0\n\n* Remove the JWTTokenUserAuthentication from the Experimental Features #546 by @byrpatrick [#547](https://github.com/jazzband/djangorestframework-simplejwt/pull/547)\n* Fix leeway type error by @2ykwang [#554](https://github.com/jazzband/djangorestframework-simplejwt/pull/554)\n* Add info on TokenBlacklistView to the docs by @inti7ary [#558](https://github.com/jazzband/djangorestframework-simplejwt/pull/558)\n* Update JWTStatelessUserAuthentication docs by @2ykwang [#561](https://github.com/jazzband/djangorestframework-simplejwt/pull/561)\n* Allow none jti claim token type claim by @denniskeends [#567](https://github.com/jazzband/djangorestframework-simplejwt/pull/567)\n* Allow customizing token JSON encoding by @vainu-arto [#568](https://github.com/jazzband/djangorestframework-simplejwt/pull/568)\n\n## Version 5.1.0\n\n* Add back support for PyJWT 1.7.1 ([#536](https://github.com/jazzband/djangorestframework-simplejwt/pull/536))\n* Make the token serializer configurable ([#521](https://github.com/jazzband/djangorestframework-simplejwt/pull/521))\n* Simplify using custom token classes in serializers ([#517](https://github.com/jazzband/djangorestframework-simplejwt/pull/517))\n* Fix default_app_config deprecation ([#415](https://github.com/jazzband/djangorestframework-simplejwt/pull/415))\n* Add missing integration instructions for drf-yasg ([#505](https://github.com/jazzband/djangorestframework-simplejwt/pull/505))\n* Add blacklist view to log out users ([#306](https://github.com/jazzband/djangorestframework-simplejwt/pull/306))\n* Set default verifying key to empty str ([#487](https://github.com/jazzband/djangorestframework-simplejwt/pull/487))\n* Add docs about TOKEN_USER_CLASS ([#455](https://github.com/jazzband/djangorestframework-simplejwt/pull/440))\n\nMeta:\n* Add auto locale updater ([#456](https://github.com/jazzband/djangorestframework-simplejwt/pull/456))\n\nTranslations:\n\n* Added Korean translations ([#501](https://github.com/jazzband/djangorestframework-simplejwt/pull/501))\n* Added Turkish translations ([#508](https://github.com/jazzband/djangorestframework-simplejwt/pull/508))\n\n## Version 5.0.0\n\n#### Breaking\n\n* Set BLACKLIST_AFTER_ROTATION by default to False ([#455](https://github.com/jazzband/djangorestframework-simplejwt/pull/455))\n\n#### Updates\n\n* Remove verify from jwt.decode to follow PyJWT v2.2.0 ([#472](https://github.com/jazzband/djangorestframework-simplejwt/pull/472))\n* Updated import list ([#459](https://github.com/jazzband/djangorestframework-simplejwt/pull/459))\n* Repair generation of OpenAPI with Spectacular ([#452](https://github.com/jazzband/djangorestframework-simplejwt/pull/452))\n* Add \"iat\" claim to token ([#192](https://github.com/jazzband/djangorestframework-simplejwt/pull/192))\n* Add blacklist view to log out users ([#306](https://github.com/jazzband/djangorestframework-simplejwt/pull/306)) \n\n## Version 4.8.0\n\n* Add integration instructions for drf-yasg ([#145](https://github.com/jazzband/djangorestframework-simplejwt/pull/145))\n* Verify Serializer Should Honour Blacklist ([#239](https://github.com/jazzband/djangorestframework-simplejwt/pull/239))\n* Added missing import in getting_started docs ([#431](https://github.com/jazzband/djangorestframework-simplejwt/pull/431))\n* Use import_string for token_backend ([#435](https://github.com/jazzband/djangorestframework-simplejwt/pull/435))\n* Add JWKS support ([#437](https://github.com/jazzband/djangorestframework-simplejwt/pull/435))\n* Use pathlib instead of open in setup.py ([#339](https://github.com/jazzband/djangorestframework-simplejwt/pull/339))\n* Optimize default_user_authentication_rule ([#441](https://github.com/jazzband/djangorestframework-simplejwt/pull/441))\n* Add Leeway option to decode ([#445](https://github.com/jazzband/djangorestframework-simplejwt/pull/445))\n\n## Version 4.7.2\n\n* Fix BrowsableAPIRenderer needing `media_type` ([#426](https://github.com/jazzband/django-rest-framework-simplejwt/pull/426))\n* Fix blacklist migrations for multiple databases ([#429](https://github.com/jazzband/django-rest-framework-simplejwt/pull/429))\n* Fix Django 3.2 `default_app_config` deprecation ([#415](https://github.com/jazzband/django-rest-framework-simplejwt/pull/415))\n* Fix docs specifying `INSTALLED_APPS` for SimpleJWT iff you want translations ([#420](https://github.com/jazzband/django-rest-framework-simplejwt/pull/420))\n* Fix drf-yasg API Schema generation for `TokenRefreshSerializer` ([#396](https://github.com/jazzband/django-rest-framework-simplejwt/pull/396))\n* Fix invalid syntax in docs for `INSTALLED_APPS` ([#416](https://github.com/jazzband/django-rest-framework-simplejwt/pull/416))\n\nTranslations:\n\n* Added Dutch translations ([#422](https://github.com/jazzband/django-rest-framework-simplejwt/pull/422))\n* Added Ukrainian translations ([#423](https://github.com/jazzband/django-rest-framework-simplejwt/pull/423))\n* Added Simplified Chinese translations ([#427](https://github.com/jazzband/django-rest-framework-simplejwt/pull/427))\n\n## Version 4.7.1\n\n* Fixed user-generated migration file bug in token_blacklist ([#411](https://github.com/jazzband/django-rest-framework-simplejwt/pull/411))\n\n## Version 4.7.0\n\n* Added support for Django 3.2 and drop Django 3.0 ([#404](https://github.com/jazzband/django-rest-framework-simplejwt/pull/404))\n* Added Italian translations ([#342](https://github.com/jazzband/django-rest-framework-simplejwt/pull/342))\n* Fixed DRF app registry bug, specifically `django.core.exceptions.AppRegistryNotReady`\n  ([#331](https://github.com/jazzband/django-rest-framework-simplejwt/pull/331))\n* Fixed support for PyJWT>=2.0.0 ([#376](https://github.com/jazzband/django-rest-framework-simplejwt/pull/376))\n* Migrated blacklist app models to use BigAutoField IDs for Django>=3.2. ([#404](https://github.com/jazzband/django-rest-framework-simplejwt/pull/404))\n\n## Version 4.6\n\n* Added support for PyJWT>=2.0.0 ([#329](https://github.com/jazzband/django-rest-framework-simplejwt/pull/329))\n* Restored Python 3.7 support ([#332](https://github.com/jazzband/django-rest-framework-simplejwt/pull/332))\n* Fixed Django 4.0 re_path deprecation ([#280](https://github.com/jazzband/django-rest-framework-simplejwt/pull/280))\n\nTranslations:\n* Added Indonesian translations ([#316](https://github.com/jazzband/django-rest-framework-simplejwt/pull/316))\n\n## Version 4.5\n\n* Added `AUTH_HEADER_NAME` to settings ([#309](https://github.com/jazzband/django-rest-framework-simplejwt/pull/309))\n* Added `USER_AUTHENTICATION_RULE` to settings ([#279](https://github.com/jazzband/django-rest-framework-simplejwt/pull/279))\n* Added `UPDATE_LAST_LOGIN` to settings ([#238](https://github.com/jazzband/django-rest-framework-simplejwt/pull/238))\n* Fixed packaging of locale folder for installation ([#117](https://github.com/jazzband/django-rest-framework-simplejwt/pull/117))\n* Allowed TokenUser to be configurable ([#172](https://github.com/jazzband/django-rest-framework-simplejwt/pull/172))\n* Dropped Python 3.7 and below (restored Python 3.7 but not 3.6 in next version) \n* Improved error message if cryptography isn't installed\n  when developer tries to use a certain algorithm that needs the package\n  ([#285](https://github.com/jazzband/django-rest-framework-simplejwt/pull/285))\n* Fixed Django 4.0 ugettext_lazy deprecation warnings ([#186](https://github.com/jazzband/django-rest-framework-simplejwt/pull/186))\n* Remove upper bound of Python version ([#225](https://github.com/jazzband/django-rest-framework-simplejwt/pull/225))\n* Added DRF 3.11 support ([#230](https://github.com/jazzband/django-rest-framework-simplejwt/pull/230))\n\nTranslations:\n* Added French translations ([#314](https://github.com/jazzband/django-rest-framework-simplejwt/pull/314))\n* Added Spanish translations ([#294](https://github.com/jazzband/django-rest-framework-simplejwt/pull/294))\n* Added Argentinian Spanish translations ([#244](https://github.com/jazzband/django-rest-framework-simplejwt/pull/244))\n* Added Persian translations ([#220](https://github.com/jazzband/django-rest-framework-simplejwt/pull/220))\n* Added German translations ([#198](https://github.com/jazzband/django-rest-framework-simplejwt/pull/198))\n* Added Czech translations ([#188](https://github.com/jazzband/django-rest-framework-simplejwt/pull/188))\n* Added Polish translations ([#166](https://github.com/jazzband/django-rest-framework-simplejwt/pull/166))\n* Fixed incorrect language encoding from de_CH to es_CL ([#299](https://github.com/jazzband/django-rest-framework-simplejwt/pull/299))\n\n## Version 4.4\n\n* Added official support for Python 3.8 and Django 3.0.\n* Added settings for expected audience and issuer claims.\n* Documentation updates.\n* Updated package/python version support (check the README to see what new\n  versions are supported and what old ones are no longer supported!)\n* Added Chilean Spanish language support.\n* Added Russian language support.\n\n## Version 4.3\n\n* Added `JTI_CLAIM` setting to allow storing token identifiers under a\n  different claim.\n\n## Version 4.2\n\n* We now return HTTP 401 for user not found or inactive.\n\n## Version 4.1.5\n\n* Restricted `setup.py` config to Python 3 only.\n\n## Version 4.1.4\n\n* Included translation files in release package.\n\n## Version 4.1.3\n\n* Updated `python-jose` version requirement.\n\n## Version 4.1.2\n\n* Fixed `KeyError` in `TokenObtainSerializer.validate`.\n\n## Version 4.1.1\n\n* Added request pass-through on `django.contrib.auth.authenticate` call in\n  `TokenObtainSerializer`.\n* Updated `TokenObtainSerializer` to use `fail` API from parent class.\n\n## Version 4.1\n\n* Added language support for Brazilian Portuguese.\n* Added support for automatic username lookup in `TokenUser`.\n\n## Version 4.0\n\n* Removed Python 2 support.\n* Fixed crash when empty AUTHORIZATION header is sent.\n* Fixed testing DB transaction issues.\n* Simplified/improved testing and dev setup.\n* Switched to using bumpversion for release process.\n\n## Version 3.3\n\n* Removed official support for Python 3.4.\n* Added support for Python 3.7.\n* Added support for Django 2.1.\n* Added support for DRF 3.9.\n\n## Version 3.2.3\n\n* Fixed issue with `WWW-Authenticate` header not being included in 401\n  responses.\n\n## Version 3.2.2\n\n* Added missing method `get` on `Token` base class.\n\n## Version 3.2.1\n\n* Simplified some blacklist app code.\n* Resolved possible race condition.\n\n## Version 3.2\n\n* Added ``TokenObtainSerializer.get_token`` method to facilitate customization\n  of token claims.\n* Added ``TokenVerifyView`` to allow verification of HMAC-signed tokens by API\n  users who have no access to the signing key.\n* Renamed ``AUTH_HEADER_TYPE`` setting to ``AUTH_HEADER_TYPES``.  This setting\n  now contains either a single valid auth header type or a list or tuple of\n  valid auth header types.  If authentication fails, and more than one string is\n  present in this tuple or list, the first item in the list will be used to\n  build the \"WWW-Authenticate\" header in the response.\n\n## Version 3.1\n\n* Moved handling of TokenError exceptions from inside of serializer `validate`\n  methods into token view `post` methods.\n\n## Version 3.0\n\n* Added support for refresh token rotation via ``ROTATE_REFRESH_TOKENS`` and\n  ``BLACKLIST_AFTER_ROTATION`` settings.  See README for details.\n* Added `BlacklistMixin.blacklist` method to make it easier to blacklist tokens\n  regardless of whether or not they are present in the outstanding token list.\n* In token blacklist app, changed `OutstandingToken.jti` field to char field to\n  better reflect JWT spec.\n* Renamed `AUTH_TOKEN_CLASS` setting to `AUTH_TOKEN_CLASSES`.  This setting now\n  specifies a list of token classes (or class paths) which are used to verify\n  tokens which are submitted for authorization.  This will hopefully help\n  anyone wishing to gradually migrate between using different token types.\n* Removed support for extensible JWT backends.  We're just going to use PyJWT\n  exclusively to simplify things.\n* Added support for more crypto algorithms.  All HMAC and RSA variants from\n  PyJWT now supported.\n* Renamed `SECRET_KEY` setting to `SIGNING_KEY`.\n* The renamed `SIGNING_KEY` setting now acts doubly as a symmetric\n  signing/verification key for HMAC algorithms and as a private key for RSA\n  algorithms.\n* Added `VERIFYING_KEY` setting for use with RSA algorithms.\n* Removed undocumented `TOKEN_BACKEND_CLASS` setting.\n\n## Version 2.1\n\n* Switched to using [PyJWT](https://github.com/jpadilla/pyjwt) as the\n  underlying library for signing and verifying tokens.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.3193359375,
          "content": "# Code of Conduct\n\nAs contributors and maintainers of the Jazzband projects, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in the Jazzband a harassment-free experience\nfor everyone, regardless of the level of experience, gender, gender identity and\nexpression, sexual orientation, disability, personal appearance, body size, race,\nethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery\n- Personal attacks\n- Trolling or insulting/derogatory comments\n- Public or private harassment\n- Publishing other's private information, such as physical or electronic addresses,\n  without explicit permission\n- Other unethical or unprofessional conduct\n\nThe Jazzband roadies have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are not\naligned to this Code of Conduct, or to ban temporarily or permanently any contributor\nfor other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, the roadies commit themselves to fairly and\nconsistently applying these principles to every aspect of managing the jazzband\nprojects. Roadies who do not follow or enforce the Code of Conduct may be permanently\nremoved from the Jazzband roadies.\n\nThis code of conduct applies both within project spaces and in public spaces when an\nindividual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by\ncontacting the roadies at `roadies@jazzband.co`. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and appropriate to\nthe circumstances. Roadies are obligated to maintain confidentiality with regard to the\nreporter of an incident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version\n1.3.0, available at [https://contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: https://contributor-covenant.org\n[version]: https://contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 0.330078125,
          "content": ".. image:: https://jazzband.co/static/img/jazzband.svg\n   :target: https://jazzband.co/\n   :alt: Jazzband\n\nThis is a `Jazzband <https://jazzband.co>`_ project. By contributing you agree to abide by the `Contributor Code of Conduct <https://jazzband.co/about/conduct>`_ and follow the `guidelines <https://jazzband.co/about/guidelines>`_.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0283203125,
          "content": "Copyright 2017 David Sanders\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.24609375,
          "content": "include README.rst\ninclude LICENSE.txt\ninclude rest_framework_simplejwt/py.typed\nrecursive-include rest_framework_simplejwt/locale *.mo\nrecursive-include rest_framework_simplejwt/locale *.po\nrecursive-exclude * __pycache__\nrecursive-exclude * *.py[co]\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.1826171875,
          "content": ".PHONY: clean\nclean: clean-build clean-pyc\n\n.PHONY: clean-build\nclean-build:\n\trm -fr build/\n\trm -fr dist/\n\trm -fr *.egg-info\n\n.PHONY: clean-pyc\nclean-pyc:\n\tfind . -name '*.pyc' -exec rm -f {} +\n\tfind . -name '*.pyo' -exec rm -f {} +\n\tfind . -name '*~' -exec rm -f {} +\n\n.PHONY: lint\nlint:\n\ttox -e lint\n\n.PHONY: lint-roll\nlint-roll:\n\tisort rest_framework_simplejwt tests\n\t$(MAKE) lint\n\n.PHONY: tests\ntest:\n\tpytest tests\n\n.PHONY: test-all\ntest-all:\n\ttox\n\n.PHONY: build-docs\nbuild-docs:\n\tsphinx-apidoc -o docs/ . \\\n\t\tsetup.py \\\n\t\t*confest* \\\n\t\ttests/* \\\n\t\trest_framework_simplejwt/token_blacklist/* \\\n\t\trest_framework_simplejwt/backends.py \\\n\t\trest_framework_simplejwt/exceptions.py \\\n\t\trest_framework_simplejwt/settings.py \\\n\t\trest_framework_simplejwt/state.py\n\t$(MAKE) -C docs clean\n\t$(MAKE) -C docs html\n\t$(MAKE) -C docs doctest\n\n.PHONY: docs\ndocs: build-docs\n\topen docs/_build/html/index.html\n\n.PHONY: linux-docs\nlinux-docs: build-docs\n\txdg-open docs/_build/html/index.html\n\n.PHONY: pushversion\npushversion:\n\tgit push upstream && git push upstream --tags\n\n.PHONY: publish\npublish:\n\tpython setup.py sdist bdist_wheel\n\ttwine upload dist/*\n\n.PHONY: dist\ndist: clean\n\tpython setup.py sdist bdist_wheel\n\tls -l dist\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.546875,
          "content": "Simple JWT\n==========\n\n.. image:: https://jazzband.co/static/img/badge.svg\n   :target: https://jazzband.co/\n   :alt: Jazzband\n.. image:: https://github.com/jazzband/djangorestframework-simplejwt/workflows/Test/badge.svg\n   :target: https://github.com/jazzband/djangorestframework-simplejwt/actions\n   :alt: GitHub Actions\n.. image:: https://codecov.io/gh/jazzband/djangorestframework-simplejwt/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/jazzband/djangorestframework-simplejwt\n.. image:: https://img.shields.io/pypi/v/djangorestframework-simplejwt.svg\n  :target: https://pypi.python.org/pypi/djangorestframework-simplejwt\n.. image:: https://img.shields.io/pypi/pyversions/djangorestframework-simplejwt.svg\n  :target: https://pypi.python.org/pypi/djangorestframework-simplejwt\n.. image:: https://img.shields.io/pypi/djversions/djangorestframework-simplejwt.svg\n  :target: https://pypi.python.org/pypi/djangorestframework-simplejwt\n.. image:: https://readthedocs.org/projects/django-rest-framework-simplejwt/badge/?version=latest\n  :target: https://django-rest-framework-simplejwt.readthedocs.io/en/latest/\n\nAbstract\n--------\n\nSimple JWT is a JSON Web Token authentication plugin for the `Django REST\nFramework <http://www.django-rest-framework.org/>`__.\n\nFor full documentation, visit `django-rest-framework-simplejwt.readthedocs.io\n<https://django-rest-framework-simplejwt.readthedocs.io/en/latest/>`__.\n\n\nTranslations\n------------\n\nContribute translations directly with PRs or via inlang https://inlang.com/editor/github.com/jazzband/djangorestframework-simplejwt\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.1591796875,
          "content": "coverage:\n  status:\n    project:\n      default:\n        informational: true\n    patch:\n      default:\n        informational: true\n    changes: false\n\ncomment: off\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "inlang.config.js",
          "type": "blob",
          "size": 1.0224609375,
          "content": "// filename: inlang.config.js\n\nexport async function defineConfig(env) {\n  // importing a plugin\n  const plugin = await env.$import(\n    \"https://cdn.jsdelivr.net/gh/jannesblobel/inlang-plugin-po@1/dist/index.js\"\n  );\n\n  // most plugins require additional config, read the plugins documentation\n  // for the required config and correct usage.\n  const pluginConfig = {\n    pathPattern:\n      \"./rest_framework_simplejwt/locale/{language}/LC_MESSAGES/django.po\",\n    referenceResourcePath: null,\n  };\n\n  return {\n    referenceLanguage: \"en\",\n    languages: [\n      \"en\",\n      \"cs\",\n      \"de\",\n      \"es\",\n      \"es_AR\",\n      \"es_CL\",\n      \"fa_IR\",\n      \"fr\",\n      \"id_ID\",\n      \"it_IT\",\n      \"ko_KR\",\n      \"nl_NL\",\n      \"pl_PL\",\n      \"pt_BR\",\n      \"ro\",\n      \"ru_RU\",\n      \"sl\",\n      \"sv\",\n      \"tr\",\n      \"uk_UA\",\n      \"zh_Hans\",\n    ],\n    readResources: (args) =>\n      plugin.readResources({ ...args, ...env, pluginConfig }),\n    writeResources: (args) =>\n      plugin.writeResources({ ...args, ...env, pluginConfig }),\n  };\n}\n"
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.1630859375,
          "content": "[pytest]\naddopts= -v --showlocals --durations 10\npython_paths= .\nxfail_strict=true\n\n[pytest-watch]\nrunner= pytest --failed-first --maxfail=1 --no-success-flaky-report\n"
        },
        {
          "name": "rest_framework_simplejwt",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.037109375,
          "content": "[metadata]\nlicense_file = LICENSE.txt\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.3408203125,
          "content": "#!/usr/bin/env python\nfrom pathlib import Path\n\nfrom setuptools import find_packages, setup\n\nextras_require = {\n    \"test\": [\n        \"cryptography\",\n        \"freezegun\",\n        \"pytest-cov\",\n        \"pytest-django\",\n        \"pytest-xdist\",\n        \"pytest\",\n        \"tox\",\n    ],\n    \"lint\": [\n        \"flake8\",\n        \"pep8\",\n        \"isort\",\n    ],\n    \"doc\": [\n        \"Sphinx>=1.6.5,<2\",\n        \"sphinx_rtd_theme>=0.1.9\",\n    ],\n    \"dev\": [\n        \"pytest-watch\",\n        \"wheel\",\n        \"twine\",\n        \"ipython\",\n    ],\n    \"python-jose\": [\n        \"python-jose==3.3.0\",\n    ],\n    \"crypto\": [\n        \"cryptography>=3.3.1\",\n    ],\n}\n\nextras_require[\"dev\"] = (\n    extras_require[\"dev\"]\n    + extras_require[\"test\"]\n    + extras_require[\"lint\"]\n    + extras_require[\"doc\"]\n    + extras_require[\"python-jose\"]\n)\n\n\nsetup(\n    name=\"djangorestframework_simplejwt\",\n    use_scm_version={\"version_scheme\": \"post-release\"},\n    setup_requires=[\"setuptools_scm\"],\n    url=\"https://github.com/jazzband/djangorestframework-simplejwt\",\n    license=\"MIT\",\n    description=\"A minimal JSON Web Token authentication plugin for Django REST Framework\",\n    long_description=Path(\"README.rst\").read_text(encoding=\"utf-8\"),\n    author=\"David Sanders\",\n    author_email=\"davesque@gmail.com\",\n    install_requires=[\n        \"django>=4.2\",\n        \"djangorestframework>=3.14\",\n        \"pyjwt>=1.7.1,<2.10.0\",\n    ],\n    python_requires=\">=3.9\",\n    extras_require=extras_require,\n    packages=find_packages(exclude=[\"tests\", \"tests.*\", \"licenses\", \"requirements\"]),\n    include_package_data=True,\n    zip_safe=False,\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Web Environment\",\n        \"Framework :: Django\",\n        \"Framework :: Django :: 4.2\",\n        \"Framework :: Django :: 5.0\",\n        \"Framework :: Django :: 5.1\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Topic :: Internet :: WWW/HTTP\",\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.8759765625,
          "content": "[tox]\nenvlist=\n    py{39,310,311,312}-dj42-drf{314,315}-pyjwt{171,2}-tests\n    py{310,311,312}-dj50-drf315-pyjwt{171,2}-tests\n    py{310,311,312,313}-dj51-drf315-pyjwt{171,2}-tests\n    docs\n\n[gh-actions]\npython=\n    3.9: py39\n    3.10: py310\n    3.11: py311\n    3.12: py312, docs\n    3.13: py313\n\n[gh-actions:env]\nDJANGO=\n    4.2: dj42\n    5.0: dj50\n    5.1: dj51\nDRF=\n    3.14: drf314\n    3.15: drf315\n\n[testenv]\ncommands = pytest {posargs:tests} --cov-append --cov-report=xml --cov=rest_framework_simplejwt\nextras=\n    test\n    python-jose\nsetenv=\n    PYTHONDONTWRITEBYTECODE=1\ndeps=\n    dj42: Django>=4.2,<4.3\n    dj50: Django>=5.0,<5.1\n    dj51: Django>=5.1,<5.2\n    drf314: djangorestframework>=3.14,<3.15\n    drf315: djangorestframework>=3.15,<3.16\n    pyjwt171: pyjwt>=1.7.1,<1.8\n    pyjwt2: pyjwt>=2,<2.10.0\nallowlist_externals=make\n\n[testenv:docs]\nextras = doc\ncommands = make build-docs\n"
        }
      ]
    }
  ]
}