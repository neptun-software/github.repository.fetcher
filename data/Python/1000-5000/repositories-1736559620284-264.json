{
  "metadata": {
    "timestamp": 1736559620284,
    "page": 264,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shidenggui/easyquotation",
      "stars": 4365,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bumpversion.cfg",
          "type": "blob",
          "size": 0.1279296875,
          "content": "[bumpversion]\ncurrent_version = 0.7.5\ncommit = True\nfiles = easyquotation/__init__.py setup.py\ntag = True\ntag_name = {new_version}\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0859375,
          "content": "[run]\nbranch = True\ninclude = easyquotation/*\nomit = tests/*\n\n[report]\nfail_under = -1 \n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8935546875,
          "content": "bak\n.mypy_cache\n.pyre\n.pytest_cache\nyjb_account.json\nhtt.json\ngft.json\ntest.py\nht_account.json\n.idea\n.vscode\n.ipynb_checkpoints\nUntitled.ipynb\nuntitled.txt\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\naccount.json\naccount.session\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# cache\ntmp/\n\nsecrets/\n\nvenv"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.646484375,
          "content": "fail_fast: true\nrepos:\n- repo: local\n  hooks:\n  - id: python_sort_imports\n    name: python_sort_imports\n    entry: pipenv run sort_imports\n    language: system\n    types: [python]\n  - id: python_format\n    name: python_format\n    entry: pipenv run format\n    language: system\n    types: [python]\n  - id: python_lint\n    name: python_lint\n    entry: pipenv run lint\n    language: system\n    types: [python]\n  - id: python_type_check\n    name: python_type_check\n    entry: pipenv run type_check\n    language: system\n    types: [python]\n  - id: python_test\n    name: python_test\n    entry: pipenv run test\n    language: system\n    types: [python]\n    verbose: true\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 16.65234375,
          "content": "[MASTER]\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the blacklist. The\n# regex matches against base names, not paths.\nignore-patterns=\\d{4}.+\\.py,\n                test,\n                apps.py,\n                __init__.py,\n                urls.py,\n                manage.py,\n                invalid-envvar-default\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint.\njobs=0\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Specify a configuration file.\n#rcfile=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=too-many-arguments,\n        too-many-instance-attributes,\n        arguments-differ,\n        len-as-condition,\n        missing-docstring,\n        invalid-envvar-default,\n        ungrouped-imports,\n        bad-continuation,\n        too-many-ancestors,\n        too-few-public-methods,\n        no-self-use,\n        #print-statement,\n        #parameter-unpacking,\n        #unpacking-in-except,\n        #old-raise-syntax,\n        #backtick,\n        #long-suffix,\n        #old-ne-operator,\n        #old-octal-literal,\n        #import-star-module-level,\n        #non-ascii-bytes-literal,\n        #raw-checker-failed,\n        #bad-inline-option,\n        #locally-disabled,\n        #locally-enabled,\n        #file-ignored,\n        #suppressed-message,\n        #useless-suppression,\n        #deprecated-pragma,\n        #apply-builtin,\n        #basestring-builtin,\n        #buffer-builtin,\n        #cmp-builtin,\n        #coerce-builtin,\n        #execfile-builtin,\n        #file-builtin,\n        #long-builtin,\n        #raw_input-builtin,\n        #reduce-builtin,\n        #standarderror-builtin,\n        #unicode-builtin,\n        #xrange-builtin,\n        #coerce-method,\n        #delslice-method,\n        #getslice-method,\n        #setslice-method,\n        #no-absolute-import,\n        #old-division,\n        #dict-iter-method,\n        #dict-view-method,\n        #next-method-called,\n        #metaclass-assignment,\n        #indexing-exception,\n        #raising-string,\n        #reload-builtin,\n        #oct-method,\n        #hex-method,\n        #nonzero-method,\n        #cmp-method,\n        #input-builtin,\n        #round-builtin,\n        #intern-builtin,\n        #unichr-builtin,\n        #map-builtin-not-iterating,\n        #zip-builtin-not-iterating,\n        #range-builtin-not-iterating,\n        #filter-builtin-not-iterating,\n        #using-cmp-argument,\n        #eq-without-hash,\n        #div-method,\n        #idiv-method,\n        #rdiv-method,\n        #exception-message-attribute,\n        #invalid-str-codec,\n        #sys-max-int,\n        #bad-python3-import,\n        #deprecated-string-function,\n        #deprecated-str-translate-call,\n        #deprecated-itertools-function,\n        #deprecated-types-field,\n        #next-method-defined,\n        #dict-items-not-iterating,\n        #dict-keys-not-iterating,\n        #dict-values-not-iterating\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[REPORTS]\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio).You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=optparse.Values,sys.exit\n\n\n[BASIC]\n\n# Naming style matching correct argument names\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style\n#argument-rgx=\n\n# Naming style matching correct attribute names\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Naming style matching correct class attribute names\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style\n#class-attribute-rgx=\n\n# Naming style matching correct class names\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-style\n#class-rgx=\n\n# Naming style matching correct constant names\nconst-naming-style=any\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=5\n\n# Naming style matching correct function names\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _,\n           db,\n           s,\n           r,\n           x,\n           y,\n           e,\n           f\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style\n#inlinevar-rgx=\n\n# Naming style matching correct method names\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style\n#method-rgx=\n\n# Naming style matching correct module names\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty\n\n# Naming style matching correct variable names\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style\n#variable-rgx=\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=79\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,\n               dict-separator\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n\n[SIMILARITIES]\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of locals for function / method body\nmax-locals=16\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[IMPORTS]\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,\n                   TERMIOS,\n                   Bastion,\n                   rexec\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.154296875,
          "content": "language: python\n\npython:\n  - \"3.6\"\n\nenv:\n  - PROJ=${PWD##*/}\n\ninstall:\n  - pip install pipenv\n  - pipenv install --dev --system\n\nscript:\n  - pipenv run test\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2018 shidenggui\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1318359375,
          "content": "init:\n\tpip install pipenv\n\tpipenv install --dev\n\tpipenv run pre-commit install\n\t@echo && echo use \"pipenv shell\" to access virtual env\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.6982421875,
          "content": "[[source]]\nurl = \"http://mirrors.aliyun.com/pypi/simple/\"\nverify_ssl = false\nname = \"pypi\"\n\n[packages]\nsix = \"*\"\nrequests = \"*\"\neasyutils = \"*\"\n\n[dev-packages]\npytest-cov = \"*\"\npre-commit = \"*\"\npytest = \"*\"\npylint = \"*\"\nmypy = \"*\"\nisort = \"*\"\nblack = \"==18.6b4\"\nipython = \"*\"\nbetter-exceptions = \"*\"\npylint-django = \"*\"\nbumpversion = \"*\"\n\n[requires]\npython_version = \"3.6\"\n\n[scripts]\nsort_imports = \"bash -c 'isort \\\"$@\\\"; git add -u' --\"\nformat = \"bash -c 'black -l 79 \\\"$@\\\"; git add -u' --\"\nlint = \"pylint\"\ntype_check = \"mypy\"\ntest = \"bash -c 'pytest --cov=easyquotation'\"\nbump = \"bash -c 'pipenv lock -r > requirements.txt; git add -u; git commit  -m \\\":star: update requirements.txt\\\"; bumpversion \\\"$@\\\"' --\"\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 27.94921875,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"faae4a929e55565ebfed9d8744b0f1765c8a4d6ed4a6e1538846a938830e5942\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {\n            \"python_version\": \"3.6\"\n        },\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"http://mirrors.aliyun.com/pypi/simple/\",\n                \"verify_ssl\": false\n            }\n        ]\n    },\n    \"default\": {\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:13e698f54293db9f89122b0581843a782ad0934a4fe0172d2a980ba77fc61bb7\",\n                \"sha256:9fa520c1bacfb634fa7af20a76bcbd3d5fb390481724c597da32c719a7dca4b0\"\n            ],\n            \"version\": \"==2018.4.16\"\n        },\n        \"chardet\": {\n            \"hashes\": [\n                \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\",\n                \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\"\n            ],\n            \"version\": \"==3.0.4\"\n        },\n        \"cssselect\": {\n            \"hashes\": [\n                \"sha256:066d8bc5229af09617e24b3ca4d52f1f9092d9e061931f4184cd572885c23204\",\n                \"sha256:3b5103e8789da9e936a68d993b70df732d06b8bb9a337a05ed4eb52c17ef7206\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version != '3.1.*' and python_version != '3.0.*' and python_version != '3.2.*' and python_version != '3.3.*'\",\n            \"version\": \"==1.0.3\"\n        },\n        \"easyutils\": {\n            \"hashes\": [\n                \"sha256:45b46748e20dd3c0e840fa9c1fa7d7f3dc295e58a81796d10329957c20b7f20a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.1.7\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:156a6814fb5ac1fc6850fb002e0852d56c0c8d2531923a51032d1b70760e186e\",\n                \"sha256:684a38a6f903c1d71d6d5fac066b58d7768af4de2b832e426ec79c30daa94a16\"\n            ],\n            \"version\": \"==2.7\"\n        },\n        \"lxml\": {\n            \"hashes\": [\n                \"sha256:0941f4313208c07734410414d8308812b044fd3fb98573454e3d3a0d2e201f3d\",\n                \"sha256:0b18890aa5730f9d847bc5469e8820f782d72af9985a15a7552109a86b01c113\",\n                \"sha256:21f427945f612ac75576632b1bb8c21233393c961f2da890d7be3927a4b6085f\",\n                \"sha256:24cf6f622a4d49851afcf63ac4f0f3419754d4e98a7a548ab48dd03c635d9bd3\",\n                \"sha256:2dc6705486b8abee1af9e2a3761e30a3cb19e8276f20ca7e137ee6611b93707c\",\n                \"sha256:2e43b2e5b7d2b9abe6e0301eef2c2c122ab45152b968910eae68bdee2c4cfae0\",\n                \"sha256:329a6d8b6d36f7d6f8b6c6a1db3b2c40f7e30a19d3caf62023c9d6a677c1b5e1\",\n                \"sha256:423cde55430a348bda6f1021faad7235c2a95a6bdb749e34824e5758f755817a\",\n                \"sha256:4651ea05939374cfb5fe87aab5271ed38c31ea47997e17ec3834b75b94bd9f15\",\n                \"sha256:4be3bbfb2968d7da6e5c2cd4104fc5ec1caf9c0794f6cae724da5a53b4d9f5a3\",\n                \"sha256:622f7e40faef13d232fb52003661f2764ce6cdef3edb0a59af7c1559e4cc36d1\",\n                \"sha256:664dfd4384d886b239ef0d7ee5cff2b463831079d250528b10e394a322f141f9\",\n                \"sha256:697c0f58ac637b11991a1bc92e07c34da4a72e2eda34d317d2c1c47e2f24c1b3\",\n                \"sha256:6ec908b4c8a4faa7fe1a0080768e2ce733f268b287dfefb723273fb34141475f\",\n                \"sha256:7ec3fe795582b75bb49bb1685ffc462dbe38d74312dac07ce386671a28b5316b\",\n                \"sha256:8c39babd923c431dcf1e5874c0f778d3a5c745a62c3a9b6bd755efd489ee8a1d\",\n                \"sha256:949ca5bc56d6cb73d956f4862ba06ad3c5d2808eac76304284f53ae0c8b2334a\",\n                \"sha256:9f0daddeefb0791a600e6195441910bdf01eac470be596b9467e6122b51239a6\",\n                \"sha256:a359893b01c30e949eae0e8a85671a593364c9f0b8162afe0cb97317af0953bf\",\n                \"sha256:ad5d5d8efed59e6b1d4c50c1eac59fb6ecec91b2073676af1e15fc4d43e9b6c5\",\n                \"sha256:bc1a36f95a6b3667c09b34995fc3a46a82e4cf0dc3e7ab281e4c77b15bd7af05\",\n                \"sha256:be37b3f55b6d7d923f43bf74c356fc1878eb36e28505f38e198cb432c19c7b1a\",\n                \"sha256:c45bca5e544eb75f7500ffd730df72922eb878a2f0213b0dc5a5f357ded3a85d\",\n                \"sha256:ccee7ebbb4735ebc341d347fca9ee09f2fa6c0580528c1414bc4e1d31372835c\",\n                \"sha256:dc62c0840b2fc7753550b40405532a3e125c0d3761f34af948873393aa688160\",\n                \"sha256:f7d9d5aa1c7e54167f1a3cba36b5c52c7c540f30952c9bd7d9302a1eda318424\"\n            ],\n            \"version\": \"==4.2.3\"\n        },\n        \"pyquery\": {\n            \"hashes\": [\n                \"sha256:07987c2ed2aed5cba29ff18af95e56e9eb04a2249f42ce47bddfb37f487229a3\",\n                \"sha256:4771db76bd14352eba006463656aef990a0147a0eeaf094725097acfa90442bf\"\n            ],\n            \"markers\": \"python_version != '3.3.*' and python_version >= '2.7' and python_version != '3.1.*' and python_version != '3.2.*' and python_version != '3.0.*'\",\n            \"version\": \"==1.4.0\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:63b52e3c866428a224f97cab011de738c36aec0185aa91cfacd418b5d58911d1\",\n                \"sha256:ec22d826a36ed72a7358ff3fe56cbd4ba69dd7a6718ffd450ff0e9df7a47ce6a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.19.1\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:70e8a77beed4562e7f14fe23a786b54f6296e34344c23bc42f07b15018ff98e9\",\n                \"sha256:832dc0e10feb1aa2c68dcc57dbb658f1c7e65b9b61af69048abc87a2db00a0eb\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.11.0\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:a68ac5e15e76e7e5dd2b8f94007233e01effe3e50e8daddf69acfd81cb686baf\",\n                \"sha256:b5725a0bd4ba422ab0e66e89e030c806576753ea3ee08554382c14e685d117b5\"\n            ],\n            \"markers\": \"python_version != '3.2.*' and python_version < '4' and python_version != '3.3.*' and python_version >= '2.6' and python_version != '3.0.*' and python_version != '3.1.*'\",\n            \"version\": \"==1.23\"\n        }\n    },\n    \"develop\": {\n        \"appdirs\": {\n            \"hashes\": [\n                \"sha256:9e5896d1372858f8dd3344faf4e5014d21849c756c8d5701f78f8a103b372d92\",\n                \"sha256:d8b24664561d0d34ddfaec54636d502d7cea6e29c3eaf68f3df6180863e2166e\"\n            ],\n            \"version\": \"==1.4.3\"\n        },\n        \"appnope\": {\n            \"hashes\": [\n                \"sha256:5b26757dc6f79a3b7dc9fab95359328d5747fcb2409d331ea66d0272b90ab2a0\",\n                \"sha256:8b995ffe925347a2138d7ac0fe77155e4311a0ea6d6da4f5128fe4b3cbe5ed71\"\n            ],\n            \"markers\": \"sys_platform == 'darwin'\",\n            \"version\": \"==0.1.0\"\n        },\n        \"aspy.yaml\": {\n            \"hashes\": [\n                \"sha256:04d26279513618f1024e1aba46471db870b3b33aef204c2d09bcf93bea9ba13f\",\n                \"sha256:0a77e23fafe7b242068ffc0252cee130d3e509040908fc678d9d1060e7494baa\"\n            ],\n            \"version\": \"==1.1.1\"\n        },\n        \"astroid\": {\n            \"hashes\": [\n                \"sha256:0a0c484279a5f08c9bcedd6fa9b42e378866a7dcc695206b92d59dc9f2d9760d\",\n                \"sha256:218e36cf8d98a42f16214e8670819ce307fa707d1dcf7f9af84c7aede1febc7f\"\n            ],\n            \"version\": \"==2.0.1\"\n        },\n        \"atomicwrites\": {\n            \"hashes\": [\n                \"sha256:240831ea22da9ab882b551b31d4225591e5e447a68c5e188db5b89ca1d487585\",\n                \"sha256:a24da68318b08ac9c9c45029f4a10371ab5b20e4226738e150e6e7c571630ae6\"\n            ],\n            \"version\": \"==1.1.5\"\n        },\n        \"attrs\": {\n            \"hashes\": [\n                \"sha256:4b90b09eeeb9b88c35bc642cbac057e45a5fd85367b985bd2809c62b7b939265\",\n                \"sha256:e0d0eb91441a3b53dab4d9b743eafc1ac44476296a2053b6ca3af0b139faf87b\"\n            ],\n            \"version\": \"==18.1.0\"\n        },\n        \"backcall\": {\n            \"hashes\": [\n                \"sha256:38ecd85be2c1e78f77fd91700c76e14667dc21e2713b63876c0eb901196e01e4\",\n                \"sha256:bbbf4b1e5cd2bdb08f915895b51081c041bac22394fdfcfdfbe9f14b77c08bf2\"\n            ],\n            \"version\": \"==0.1.0\"\n        },\n        \"better-exceptions\": {\n            \"hashes\": [\n                \"sha256:0a73efef96b48f867ea980227ac3b00d36a92754e6d316ad2ee472f136014580\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.2.1\"\n        },\n        \"black\": {\n            \"hashes\": [\n                \"sha256:22158b89c1a6b4eb333a1e65e791a3f8b998cf3b11ae094adb2570f31f769a44\",\n                \"sha256:4b475bbd528acce094c503a3d2dbc2d05a4075f6d0ef7d9e7514518e14cc5191\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==18.6b4\"\n        },\n        \"bumpversion\": {\n            \"hashes\": [\n                \"sha256:6744c873dd7aafc24453d8b6a1a0d6d109faf63cd0cd19cb78fd46e74932c77e\",\n                \"sha256:6753d9ff3552013e2130f7bc03c1007e24473b4835952679653fb132367bdd57\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.5.3\"\n        },\n        \"cached-property\": {\n            \"hashes\": [\n                \"sha256:630fdbf0f4ac7d371aa866016eba1c3ac43e9032246748d4994e67cb05f99bc4\",\n                \"sha256:f1f9028757dc40b4cb0fd2234bd7b61a302d7b84c683cb8c2c529238a24b8938\"\n            ],\n            \"version\": \"==1.4.3\"\n        },\n        \"cfgv\": {\n            \"hashes\": [\n                \"sha256:73f48a752bd7aab103c4b882d6596c6360b7aa63b34073dd2c35c7b4b8f93010\",\n                \"sha256:d1791caa9ff5c0c7bce80e7ecc1921752a2eb7c2463a08ed9b6c96b85a2f75aa\"\n            ],\n            \"version\": \"==1.1.0\"\n        },\n        \"click\": {\n            \"hashes\": [\n                \"sha256:29f99fc6125fbc931b758dc053b3114e55c77a6e4c6c3a2674a2dc986016381d\",\n                \"sha256:f15516df478d5a56180fbf80e68f206010e6d160fc39fa508b65e035fd75130b\"\n            ],\n            \"version\": \"==6.7\"\n        },\n        \"coverage\": {\n            \"hashes\": [\n                \"sha256:03481e81d558d30d230bc12999e3edffe392d244349a90f4ef9b88425fac74ba\",\n                \"sha256:0b136648de27201056c1869a6c0d4e23f464750fd9a9ba9750b8336a244429ed\",\n                \"sha256:10a46017fef60e16694a30627319f38a2b9b52e90182dddb6e37dcdab0f4bf95\",\n                \"sha256:198626739a79b09fa0a2f06e083ffd12eb55449b5f8bfdbeed1df4910b2ca640\",\n                \"sha256:23d341cdd4a0371820eb2b0bd6b88f5003a7438bbedb33688cd33b8eae59affd\",\n                \"sha256:28b2191e7283f4f3568962e373b47ef7f0392993bb6660d079c62bd50fe9d162\",\n                \"sha256:2a5b73210bad5279ddb558d9a2bfedc7f4bf6ad7f3c988641d83c40293deaec1\",\n                \"sha256:2eb564bbf7816a9d68dd3369a510be3327f1c618d2357fa6b1216994c2e3d508\",\n                \"sha256:337ded681dd2ef9ca04ef5d93cfc87e52e09db2594c296b4a0a3662cb1b41249\",\n                \"sha256:3a2184c6d797a125dca8367878d3b9a178b6fdd05fdc2d35d758c3006a1cd694\",\n                \"sha256:3c79a6f7b95751cdebcd9037e4d06f8d5a9b60e4ed0cd231342aa8ad7124882a\",\n                \"sha256:3d72c20bd105022d29b14a7d628462ebdc61de2f303322c0212a054352f3b287\",\n                \"sha256:3eb42bf89a6be7deb64116dd1cc4b08171734d721e7a7e57ad64cc4ef29ed2f1\",\n                \"sha256:4635a184d0bbe537aa185a34193898eee409332a8ccb27eea36f262566585000\",\n                \"sha256:56e448f051a201c5ebbaa86a5efd0ca90d327204d8b059ab25ad0f35fbfd79f1\",\n                \"sha256:5a13ea7911ff5e1796b6d5e4fbbf6952381a611209b736d48e675c2756f3f74e\",\n                \"sha256:69bf008a06b76619d3c3f3b1983f5145c75a305a0fea513aca094cae5c40a8f5\",\n                \"sha256:6bc583dc18d5979dc0f6cec26a8603129de0304d5ae1f17e57a12834e7235062\",\n                \"sha256:701cd6093d63e6b8ad7009d8a92425428bc4d6e7ab8d75efbb665c806c1d79ba\",\n                \"sha256:7608a3dd5d73cb06c531b8925e0ef8d3de31fed2544a7de6c63960a1e73ea4bc\",\n                \"sha256:76ecd006d1d8f739430ec50cc872889af1f9c1b6b8f48e29941814b09b0fd3cc\",\n                \"sha256:7aa36d2b844a3e4a4b356708d79fd2c260281a7390d678a10b91ca595ddc9e99\",\n                \"sha256:7d3f553904b0c5c016d1dad058a7554c7ac4c91a789fca496e7d8347ad040653\",\n                \"sha256:7e1fe19bd6dce69d9fd159d8e4a80a8f52101380d5d3a4d374b6d3eae0e5de9c\",\n                \"sha256:8c3cb8c35ec4d9506979b4cf90ee9918bc2e49f84189d9bf5c36c0c1119c6558\",\n                \"sha256:9d6dd10d49e01571bf6e147d3b505141ffc093a06756c60b053a859cb2128b1f\",\n                \"sha256:be6cfcd8053d13f5f5eeb284aa8a814220c3da1b0078fa859011c7fffd86dab9\",\n                \"sha256:c1bb572fab8208c400adaf06a8133ac0712179a334c09224fb11393e920abcdd\",\n                \"sha256:de4418dadaa1c01d497e539210cb6baa015965526ff5afc078c57ca69160108d\",\n                \"sha256:e05cb4d9aad6233d67e0541caa7e511fa4047ed7750ec2510d466e806e0255d6\",\n                \"sha256:f3f501f345f24383c0000395b26b726e46758b71393267aeae0bd36f8b3ade80\"\n            ],\n            \"markers\": \"python_version < '4' and python_version >= '2.6' and python_version != '3.2.*' and python_version != '3.0.*' and python_version != '3.1.*'\",\n            \"version\": \"==4.5.1\"\n        },\n        \"decorator\": {\n            \"hashes\": [\n                \"sha256:2c51dff8ef3c447388fe5e4453d24a2bf128d3a4c32af3fabef1f01c6851ab82\",\n                \"sha256:c39efa13fbdeb4506c476c9b3babf6a718da943dab7811c206005a4a956c080c\"\n            ],\n            \"version\": \"==4.3.0\"\n        },\n        \"identify\": {\n            \"hashes\": [\n                \"sha256:49845e70fc6b1ec3694ab930a2c558912d7de24548eebcd448f65567dc757c43\",\n                \"sha256:68daab16a3db364fa204591f97dc40bfffd1a7739f27788a4895b4d8fd3516e5\"\n            ],\n            \"version\": \"==1.1.4\"\n        },\n        \"ipython\": {\n            \"hashes\": [\n                \"sha256:a0c96853549b246991046f32d19db7140f5b1a644cc31f0dc1edc86713b7676f\",\n                \"sha256:eca537aa61592aca2fef4adea12af8e42f5c335004dfa80c78caf80e8b525e5c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==6.4.0\"\n        },\n        \"ipython-genutils\": {\n            \"hashes\": [\n                \"sha256:72dd37233799e619666c9f639a9da83c34013a73e8bbc79a7a6348d93c61fab8\",\n                \"sha256:eb2e116e75ecef9d4d228fdc66af54269afa26ab4463042e33785b887c628ba8\"\n            ],\n            \"version\": \"==0.2.0\"\n        },\n        \"isort\": {\n            \"hashes\": [\n                \"sha256:1153601da39a25b14ddc54955dbbacbb6b2d19135386699e2ad58517953b34af\",\n                \"sha256:b9c40e9750f3d77e6e4d441d8b0266cf555e7cdabdcff33c4fd06366ca761ef8\",\n                \"sha256:ec9ef8f4a9bc6f71eec99e1806bfa2de401650d996c59330782b89a5555c1497\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.3.4\"\n        },\n        \"jedi\": {\n            \"hashes\": [\n                \"sha256:b409ed0f6913a701ed474a614a3bb46e6953639033e31f769ca7581da5bd1ec1\",\n                \"sha256:c254b135fb39ad76e78d4d8f92765ebc9bf92cbc76f49e97ade1d5f5121e1f6f\"\n            ],\n            \"version\": \"==0.12.1\"\n        },\n        \"lazy-object-proxy\": {\n            \"hashes\": [\n                \"sha256:0ce34342b419bd8f018e6666bfef729aec3edf62345a53b537a4dcc115746a33\",\n                \"sha256:1b668120716eb7ee21d8a38815e5eb3bb8211117d9a90b0f8e21722c0758cc39\",\n                \"sha256:209615b0fe4624d79e50220ce3310ca1a9445fd8e6d3572a896e7f9146bbf019\",\n                \"sha256:27bf62cb2b1a2068d443ff7097ee33393f8483b570b475db8ebf7e1cba64f088\",\n                \"sha256:27ea6fd1c02dcc78172a82fc37fcc0992a94e4cecf53cb6d73f11749825bd98b\",\n                \"sha256:2c1b21b44ac9beb0fc848d3993924147ba45c4ebc24be19825e57aabbe74a99e\",\n                \"sha256:2df72ab12046a3496a92476020a1a0abf78b2a7db9ff4dc2036b8dd980203ae6\",\n                \"sha256:320ffd3de9699d3892048baee45ebfbbf9388a7d65d832d7e580243ade426d2b\",\n                \"sha256:50e3b9a464d5d08cc5227413db0d1c4707b6172e4d4d915c1c70e4de0bbff1f5\",\n                \"sha256:5276db7ff62bb7b52f77f1f51ed58850e315154249aceb42e7f4c611f0f847ff\",\n                \"sha256:61a6cf00dcb1a7f0c773ed4acc509cb636af2d6337a08f362413c76b2b47a8dd\",\n                \"sha256:6ae6c4cb59f199d8827c5a07546b2ab7e85d262acaccaacd49b62f53f7c456f7\",\n                \"sha256:7661d401d60d8bf15bb5da39e4dd72f5d764c5aff5a86ef52a042506e3e970ff\",\n                \"sha256:7bd527f36a605c914efca5d3d014170b2cb184723e423d26b1fb2fd9108e264d\",\n                \"sha256:7cb54db3535c8686ea12e9535eb087d32421184eacc6939ef15ef50f83a5e7e2\",\n                \"sha256:7f3a2d740291f7f2c111d86a1c4851b70fb000a6c8883a59660d95ad57b9df35\",\n                \"sha256:81304b7d8e9c824d058087dcb89144842c8e0dea6d281c031f59f0acf66963d4\",\n                \"sha256:933947e8b4fbe617a51528b09851685138b49d511af0b6c0da2539115d6d4514\",\n                \"sha256:94223d7f060301b3a8c09c9b3bc3294b56b2188e7d8179c762a1cda72c979252\",\n                \"sha256:ab3ca49afcb47058393b0122428358d2fbe0408cf99f1b58b295cfeb4ed39109\",\n                \"sha256:bd6292f565ca46dee4e737ebcc20742e3b5be2b01556dafe169f6c65d088875f\",\n                \"sha256:cb924aa3e4a3fb644d0c463cad5bc2572649a6a3f68a7f8e4fbe44aaa6d77e4c\",\n                \"sha256:d0fc7a286feac9077ec52a927fc9fe8fe2fabab95426722be4c953c9a8bede92\",\n                \"sha256:ddc34786490a6e4ec0a855d401034cbd1242ef186c20d79d2166d6a4bd449577\",\n                \"sha256:e34b155e36fa9da7e1b7c738ed7767fc9491a62ec6af70fe9da4a057759edc2d\",\n                \"sha256:e5b9e8f6bda48460b7b143c3821b21b452cb3a835e6bbd5dd33aa0c8d3f5137d\",\n                \"sha256:e81ebf6c5ee9684be8f2c87563880f93eedd56dd2b6146d8a725b50b7e5adb0f\",\n                \"sha256:eb91be369f945f10d3a49f5f9be8b3d0b93a4c2be8f8a5b83b0571b8123e0a7a\",\n                \"sha256:f460d1ceb0e4a5dcb2a652db0904224f367c9b3c1470d5a7683c0480e582468b\"\n            ],\n            \"version\": \"==1.3.1\"\n        },\n        \"mccabe\": {\n            \"hashes\": [\n                \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\",\n                \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"\n            ],\n            \"version\": \"==0.6.1\"\n        },\n        \"more-itertools\": {\n            \"hashes\": [\n                \"sha256:2b6b9893337bfd9166bee6a62c2b0c9fe7735dcf85948b387ec8cba30e85d8e8\",\n                \"sha256:6703844a52d3588f951883005efcf555e49566a48afd4db4e965d69b883980d3\",\n                \"sha256:a18d870ef2ffca2b8463c0070ad17b5978056f403fb64e3f15fe62a52db21cc0\"\n            ],\n            \"version\": \"==4.2.0\"\n        },\n        \"mypy\": {\n            \"hashes\": [\n                \"sha256:673ea75fb750289b7d1da1331c125dc62fc1c3a8db9129bb372ae7b7d5bf300a\",\n                \"sha256:c770605a579fdd4a014e9f0a34b6c7a36ce69b08100ff728e96e27445cef3b3c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.620\"\n        },\n        \"nodeenv\": {\n            \"hashes\": [\n                \"sha256:aa040ab5189bae17d272175609010be6c5b589ec4b8dbd832cc50c9e9cb7496f\"\n            ],\n            \"version\": \"==1.3.2\"\n        },\n        \"parso\": {\n            \"hashes\": [\n                \"sha256:35704a43a3c113cce4de228ddb39aab374b8004f4f2407d070b6a2ca784ce8a2\",\n                \"sha256:895c63e93b94ac1e1690f5fdd40b65f07c8171e3e53cbd7793b5b96c0e0a7f24\"\n            ],\n            \"version\": \"==0.3.1\"\n        },\n        \"pexpect\": {\n            \"hashes\": [\n                \"sha256:2a8e88259839571d1251d278476f3eec5db26deb73a70be5ed5dc5435e418aba\",\n                \"sha256:3fbd41d4caf27fa4a377bfd16fef87271099463e6fa73e92a52f92dfee5d425b\"\n            ],\n            \"markers\": \"sys_platform != 'win32'\",\n            \"version\": \"==4.6.0\"\n        },\n        \"pickleshare\": {\n            \"hashes\": [\n                \"sha256:84a9257227dfdd6fe1b4be1319096c20eb85ff1e82c7932f36efccfe1b09737b\",\n                \"sha256:c9a2541f25aeabc070f12f452e1f2a8eae2abd51e1cd19e8430402bdf4c1d8b5\"\n            ],\n            \"version\": \"==0.7.4\"\n        },\n        \"pluggy\": {\n            \"hashes\": [\n                \"sha256:7f8ae7f5bdf75671a718d2daf0a64b7885f74510bcd98b1a0bb420eb9a9d0cff\",\n                \"sha256:d345c8fe681115900d6da8d048ba67c25df42973bda370783cd58826442dcd7c\",\n                \"sha256:e160a7fcf25762bb60efc7e171d4497ff1d8d2d75a3d0df7a21b76821ecbf5c5\"\n            ],\n            \"markers\": \"python_version != '3.3.*' and python_version >= '2.7' and python_version != '3.2.*' and python_version != '3.0.*' and python_version != '3.1.*'\",\n            \"version\": \"==0.6.0\"\n        },\n        \"pre-commit\": {\n            \"hashes\": [\n                \"sha256:99cb6313a8ea7d88871aa2875a12d3c3a7636edf8ce4634b056328966682c8ce\",\n                \"sha256:c71e6cf84e812226f8dadbe346b5e6d6728fa65a364bbfe7624b219a18950540\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.10.4\"\n        },\n        \"prompt-toolkit\": {\n            \"hashes\": [\n                \"sha256:1df952620eccb399c53ebb359cc7d9a8d3a9538cb34c5a1344bdbeb29fbcc381\",\n                \"sha256:3f473ae040ddaa52b52f97f6b4a493cfa9f5920c255a12dc56a7d34397a398a4\",\n                \"sha256:858588f1983ca497f1cf4ffde01d978a3ea02b01c8a26a8bbc5cd2e66d816917\"\n            ],\n            \"version\": \"==1.0.15\"\n        },\n        \"ptyprocess\": {\n            \"hashes\": [\n                \"sha256:923f299cc5ad920c68f2bc0bc98b75b9f838b93b599941a6b63ddbc2476394c0\",\n                \"sha256:d7cc528d76e76342423ca640335bd3633420dc1366f258cb31d05e865ef5ca1f\"\n            ],\n            \"version\": \"==0.6.0\"\n        },\n        \"py\": {\n            \"hashes\": [\n                \"sha256:3fd59af7435864e1a243790d322d763925431213b6b8529c6ca71081ace3bbf7\",\n                \"sha256:e31fb2767eb657cbde86c454f02e99cb846d3cd9d61b318525140214fdc0e98e\"\n            ],\n            \"markers\": \"python_version != '3.3.*' and python_version >= '2.7' and python_version != '3.2.*' and python_version != '3.0.*' and python_version != '3.1.*'\",\n            \"version\": \"==1.5.4\"\n        },\n        \"pygments\": {\n            \"hashes\": [\n                \"sha256:78f3f434bcc5d6ee09020f92ba487f95ba50f1e3ef83ae96b9d5ffa1bab25c5d\",\n                \"sha256:dbae1046def0efb574852fab9e90209b23f556367b5a320c0bcb871c77c3e8cc\"\n            ],\n            \"version\": \"==2.2.0\"\n        },\n        \"pylint\": {\n            \"hashes\": [\n                \"sha256:2c90a24bee8fae22ac98061c896e61f45c5b73c2e0511a4bf53f99ba56e90434\",\n                \"sha256:454532779425098969b8f54ab0f056000b883909f69d05905ea114df886e3251\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.0.1\"\n        },\n        \"pylint-django\": {\n            \"hashes\": [\n                \"sha256:5c5a20c443b4e70fdc8c47e42cff8ce79c953954e918f8e559f6e1d05a971585\",\n                \"sha256:70f2b5397aa2468373fcf87d64a700b359050e905e56e2dbaf954e6edb04c593\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.0\"\n        },\n        \"pylint-plugin-utils\": {\n            \"hashes\": [\n                \"sha256:8ad25a82bcce390d1d6b7c006c123e0cb18051839c9df7b8bdb7823c53fe676e\"\n            ],\n            \"version\": \"==0.4\"\n        },\n        \"pytest\": {\n            \"hashes\": [\n                \"sha256:341ec10361b64a24accaec3c7ba5f7d5ee1ca4cebea30f76fad3dd12db9f0541\",\n                \"sha256:952c0389db115437f966c4c2079ae9d54714b9455190e56acebe14e8c38a7efa\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==3.6.4\"\n        },\n        \"pytest-cov\": {\n            \"hashes\": [\n                \"sha256:03aa752cf11db41d281ea1d807d954c4eda35cfa1b21d6971966cc041bbf6e2d\",\n                \"sha256:890fe5565400902b0c78b5357004aab1c814115894f4f21370e2433256a3eeec\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.5.1\"\n        },\n        \"pyyaml\": {\n            \"hashes\": [\n                \"sha256:3d7da3009c0f3e783b2c873687652d83b1bbfd5c88e9813fb7e5b03c0dd3108b\",\n                \"sha256:3ef3092145e9b70e3ddd2c7ad59bdd0252a94dfe3949721633e41344de00a6bf\",\n                \"sha256:40c71b8e076d0550b2e6380bada1f1cd1017b882f7e16f09a65be98e017f211a\",\n                \"sha256:558dd60b890ba8fd982e05941927a3911dc409a63dcb8b634feaa0cda69330d3\",\n                \"sha256:a7c28b45d9f99102fa092bb213aa12e0aaf9a6a1f5e395d36166639c1f96c3a1\",\n                \"sha256:aa7dd4a6a427aed7df6fb7f08a580d68d9b118d90310374716ae90b710280af1\",\n                \"sha256:bc558586e6045763782014934bfaf39d48b8ae85a2713117d16c39864085c613\",\n                \"sha256:d46d7982b62e0729ad0175a9bc7e10a566fc07b224d2c79fafb5e032727eaa04\",\n                \"sha256:d5eef459e30b09f5a098b9cea68bebfeb268697f78d647bd255a085371ac7f3f\",\n                \"sha256:e01d3203230e1786cd91ccfdc8f8454c8069c91bee3962ad93b87a4b2860f537\",\n                \"sha256:e170a9e6fcfd19021dd29845af83bb79236068bf5fd4df3327c1be18182b2531\"\n            ],\n            \"version\": \"==3.13\"\n        },\n        \"simplegeneric\": {\n            \"hashes\": [\n                \"sha256:dc972e06094b9af5b855b3df4a646395e43d1c9d0d39ed345b7393560d0b9173\"\n            ],\n            \"version\": \"==0.8.1\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:70e8a77beed4562e7f14fe23a786b54f6296e34344c23bc42f07b15018ff98e9\",\n                \"sha256:832dc0e10feb1aa2c68dcc57dbb658f1c7e65b9b61af69048abc87a2db00a0eb\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.11.0\"\n        },\n        \"toml\": {\n            \"hashes\": [\n                \"sha256:8e86bd6ce8cc11b9620cb637466453d94f5d57ad86f17e98a98d1f73e3baab2d\"\n            ],\n            \"version\": \"==0.9.4\"\n        },\n        \"traitlets\": {\n            \"hashes\": [\n                \"sha256:9c4bd2d267b7153df9152698efb1050a5d84982d3384a37b2c1f7723ba3e7835\",\n                \"sha256:c6cb5e6f57c5a9bdaa40fa71ce7b4af30298fbab9ece9815b5d995ab6217c7d9\"\n            ],\n            \"version\": \"==4.3.2\"\n        },\n        \"typed-ast\": {\n            \"hashes\": [\n                \"sha256:0948004fa228ae071054f5208840a1e88747a357ec1101c17217bfe99b299d58\",\n                \"sha256:10703d3cec8dcd9eef5a630a04056bbc898abc19bac5691612acba7d1325b66d\",\n                \"sha256:1f6c4bd0bdc0f14246fd41262df7dfc018d65bb05f6e16390b7ea26ca454a291\",\n                \"sha256:25d8feefe27eb0303b73545416b13d108c6067b846b543738a25ff304824ed9a\",\n                \"sha256:29464a177d56e4e055b5f7b629935af7f49c196be47528cc94e0a7bf83fbc2b9\",\n                \"sha256:2e214b72168ea0275efd6c884b114ab42e316de3ffa125b267e732ed2abda892\",\n                \"sha256:3e0d5e48e3a23e9a4d1a9f698e32a542a4a288c871d33ed8df1b092a40f3a0f9\",\n                \"sha256:519425deca5c2b2bdac49f77b2c5625781abbaf9a809d727d3a5596b30bb4ded\",\n                \"sha256:57fe287f0cdd9ceaf69e7b71a2e94a24b5d268b35df251a88fef5cc241bf73aa\",\n                \"sha256:668d0cec391d9aed1c6a388b0d5b97cd22e6073eaa5fbaa6d2946603b4871efe\",\n                \"sha256:68ba70684990f59497680ff90d18e756a47bf4863c604098f10de9716b2c0bdd\",\n                \"sha256:6de012d2b166fe7a4cdf505eee3aaa12192f7ba365beeefaca4ec10e31241a85\",\n                \"sha256:79b91ebe5a28d349b6d0d323023350133e927b4de5b651a8aa2db69c761420c6\",\n                \"sha256:8550177fa5d4c1f09b5e5f524411c44633c80ec69b24e0e98906dd761941ca46\",\n                \"sha256:898f818399cafcdb93cbbe15fc83a33d05f18e29fb498ddc09b0214cdfc7cd51\",\n                \"sha256:94b091dc0f19291adcb279a108f5d38de2430411068b219f41b343c03b28fb1f\",\n                \"sha256:a26863198902cda15ab4503991e8cf1ca874219e0118cbf07c126bce7c4db129\",\n                \"sha256:a8034021801bc0440f2e027c354b4eafd95891b573e12ff0418dec385c76785c\",\n                \"sha256:bc978ac17468fe868ee589c795d06777f75496b1ed576d308002c8a5756fb9ea\",\n                \"sha256:c05b41bc1deade9f90ddc5d988fe506208019ebba9f2578c622516fd201f5863\",\n                \"sha256:c9b060bd1e5a26ab6e8267fd46fc9e02b54eb15fffb16d112d4c7b1c12987559\",\n                \"sha256:edb04bdd45bfd76c8292c4d9654568efaedf76fe78eb246dde69bdb13b2dad87\",\n                \"sha256:f19f2a4f547505fe9072e15f6f4ae714af51b5a681a97f187971f50c283193b6\"\n            ],\n            \"markers\": \"python_version < '3.7' and implementation_name == 'cpython'\",\n            \"version\": \"==1.1.0\"\n        },\n        \"virtualenv\": {\n            \"hashes\": [\n                \"sha256:2ce32cd126117ce2c539f0134eb89de91a8413a29baac49cbab3eb50e2026669\",\n                \"sha256:ca07b4c0b54e14a91af9f34d0919790b016923d157afda5efdde55c96718f752\"\n            ],\n            \"markers\": \"python_version != '3.1.*' and python_version >= '2.7' and python_version != '3.2.*' and python_version != '3.0.*'\",\n            \"version\": \"==16.0.0\"\n        },\n        \"wcwidth\": {\n            \"hashes\": [\n                \"sha256:3df37372226d6e63e1b1e1eda15c594bca98a22d33a23832a90998faa96bc65e\",\n                \"sha256:f4ebe71925af7b40a864553f761ed559b43544f8f71746c2d756c7fe788ade7c\"\n            ],\n            \"version\": \"==0.1.7\"\n        },\n        \"wrapt\": {\n            \"hashes\": [\n                \"sha256:d4d560d479f2c21e1b5443bbd15fe7ec4b37fe7e53d335d3b9b0a7b1226fe3c6\"\n            ],\n            \"version\": \"==1.10.11\"\n        }\n    }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.25,
          "content": "# easyquotation\n\n[![Package](https://img.shields.io/pypi/v/easyquotation.svg)](https://pypi.python.org/pypi/easyquotation)\n[![Travis](https://img.shields.io/travis/shidenggui/easyquotation.svg)](https://travis-ci.org/shidenggui/easyquotation)\n[![License](https://img.shields.io/github/license/shidenggui/easyquotation.svg)](https://github.com/shidenggui/easyquotation/blob/master/LICENSE)\n\n\n快速获取新浪/腾讯的全市场行情, 网络正常的情况下只需要 `200+ms`\n\n### 前言\n* 获取新浪的免费实时行情\n* 获取腾讯财经的免费实时行情\n* 获取集思路的分级基金数据\n\n### 微信群以及公众号\n\n欢迎大家扫码关注公众号「食灯鬼」，一起交流。进群可通过菜单加我好友，备注量化。\n\n![公众号二维码](https://gitee.com/shidenggui/assets/raw/master/uPic/mp-qr.png)\n\n若二维码因 Github 网络无法打开，请点击[公众号二维码](https://gitee.com/shidenggui/assets/raw/master/uPic/mp-qr.png)直接打开图片。\n\n### Author\n\n**easyquotation** © [shidenggui](https://github.com/shidenggui), Released under the [MIT](./LICENSE) License.<br>\n\n> Blog [@shidenggui](https://shidenggui.com) · Weibo [@食灯鬼](https://www.weibo.com/u/1651274491) · Twitter [@shidenggui](https://twitter.com/shidenggui)\n>\n\n\n### 其他作品\n\n* [easytrader 股票程序化交易库](https://github.com/shidenggui/easytrader)\n* [easyquant 简单的量化框架](https://github.com/shidenggui/easyqutant)\n* [大数据网络小说推荐系统 - 推书君](https://www.tuishujun.com)\n* [中文独立个人博客导航 - bloghub.fun](https://bloghub.fun)\n\n### requirements\n\n> Python 3.6+\n \n> pip install -r requirements.txt\n\n### 安装\n\n```python\npip install easyquotation\n```\n\n也可以下载源码，然后安装\n\n```python\npython setup.py install\n```\n\n#### 升级\n\n```python\npip install easyquotation --upgrade\n```\n\n### 用法\n\n#### 引入:\n\n```python\nimport easyquotation\n```\n\n#### 选择行情\n\n```python\nquotation = easyquotation.use('sina') # 新浪 ['sina'] 腾讯 ['tencent', 'qq'] \n```\n\n#### 获取所有股票行情\n\n```python\nquotation.market_snapshot(prefix=True) # prefix 参数指定返回的行情字典中的股票代码 key 是否带 sz/sh 前缀\n```\n\n**return**\n\n```python\n {'sh000159': {'name': '国际实业', # 股票名\n  'buy': 8.87, # 竞买价\n  'sell': 8.88, # 竞卖价\n  'now': 8.88, # 现价\n  'open': 8.99, # 开盘价\n  'close': 8.96, # 昨日收盘价\n  'high': 9.15, # 今日最高价\n  'low': 8.83, # 今日最低价\n  'turnover': 22545048, # 交易股数\n  'volume': 202704887.74， # 交易金额\n  'ask1': 8.88, # 卖一价\n  'ask1_volume': 111900, # 卖一量\n  'ask2': 8.89,\n  'ask2_volume': 54700,\n  'bid1': 8.87, # 买一价\n  'bid1_volume': 21800, # 买一量\n  ...\n  'bid2': 8.86, \n  'bid2_volume': 78400,\n  'date': '2016-02-19',\n  'time': '14:30:00',\n  ...},\n  ......\n}\n```\n \n##### 单只股票\n\n```\nquotation.real('162411') # 支持直接指定前缀，如 'sh000001'\n```\n\n##### 多只股票\n\n```\nquotation.stocks(['000001', '162411']) \n```\n\n##### 同时获取指数和行情\n\n```\nquotation.stocks(['sh000001', 'sz000001'], prefix=True) \n```\n\n#### 更新股票代码\n\n```\neasyquotation.update_stock_codes()\n```\n\n\n#### 选择 [jsl](https://www.jisilu.cn)（集思路） 行情\n\n```\nquotation = easyquotation.use('jsl') # ['jsl']\n```\n\n##### 设置 cookie (可选)\n\n不设置的话获取相关数据有限制\n\n```\nquotation.set_cookie('从浏览器获取的集思录 Cookie')\n```\n\n##### 获取分级基金信息\n\n```\nquotation.funda() # 参数可选择利率、折价率、交易量、有无下折、是否永续来过滤\n\nquotation.fundb() # 参数如上\n```\n\n对应的分级 A 数据\n\n**return**\n\n```\n{ 150020:\n{'abrate': '5:5',\n'calc_info': None,\n'coupon_descr': '+3.0%',\n'coupon_descr_s': '+3.0%',\n'fund_descr': '每年第一个工作日定折，无下折，A不参与上折，净值<1元无定折',\n'funda_amount': 178823,\n'funda_amount_increase': '0',\n'funda_amount_increase_rt': '0.00%',\n'funda_base_est_dis_rt': '2.27%',\n'funda_base_est_dis_rt_t1': '2.27%',\n'funda_base_est_dis_rt_t2': '-0.34%',\n'funda_base_est_dis_rt_tip': '',\n'funda_base_fund_id': '163109',\n'funda_coupon': '5.75',\n'funda_coupon_next': '4.75',\n'funda_current_price': '0.783',\n'funda_discount_rt': '24.75%',\n'funda_id': '150022',\n'funda_increase_rt': '0.00%',\n'funda_index_id': '399001',\n'funda_index_increase_rt': '0.00%',\n'funda_index_name': '深证成指',\n'funda_left_year': '永续',\n'funda_lower_recalc_rt': '1.82%',\n'funda_name': '深成指A',\n'funda_nav_dt': '2015-09-14',\n'funda_profit_rt': '7.74%',\n'funda_profit_rt_next': '6.424%',\n'funda_value': '1.0405',\n'funda_volume': '0.00',\n'fundb_upper_recalc_rt': '244.35%',\n'fundb_upper_recalc_rt_info': '深成指A不参与上折',\n'last_time': '09:18:22',\n'left_recalc_year': '0.30411',\n'lower_recalc_profit_rt': '-',\n'next_recalc_dt': '<span style=\"font-style:italic\">2016-01-04</span>',\n'owned': 0,\n'status_cd': 'N'}>'}}\n```\n\n##### 分级基金套利接口\n\n```\nquotation.fundarb(jsl_username, jsl_password, avolume=100, bvolume=100, ptype='price')\n```\n\n```\njsl_username: 集思录用户名\njsl_password: 集思路登录密码\navolume: A成交额，单位百万\nbvolume: B成交额，单位百万\nptype: 溢价计算方式，price=现价，buy=买一，sell=卖一\n```\n\n**return** \n```\n{\n    \"165511\":{\n        'base_fund_id': '165511',                         # 母基金代码\n        'AB_price': '现价A/B : 1.008/1.329',\n        'a_profit_rt_next': '4.705',\n        'a_ratio': 4,\n        'abrate': '4:6',\n        'apply_fee': '0',\n        'apply_fee_tip': '0',\n        'apply_sell': '-0.59',\n        'asset_ratio': '95%',\n        'asset_ratio_last': '99%',\n        'asset_ratio_num': '95.00',\n        'b_est_val': '1.340',\n        'b_gangan': '1.502',\n        'b_ratio': 6,\n        'base_est_dis_rt': '-0.56%',\n        'base_est_val': '1.2073',\n        'base_fund_nm': '信诚500',\n        'base_lower_recalc_rt': '54.15%',\n        'base_nav': '1.1970',\n        'base_nav_dt': '2016-04-13',\n        'buy1A': '1.007',\n        'buy1B': '1.329',\n        'buy1_amountA': '0.201',\n        'buy1_amountB': '7.123',\n        'buy_redeem': '-0.51',\n        'calc_info': None,\n        'coupon': '0.00%',\n        'coupon_next': '4.700',\n        'est_dis_rt': '-0.55%',\n        'est_time': '2016-04-14 15:10:05',\n        'fundA_amount': '6667',\n        'fundA_amount_increase': '-51',\n        'fundA_amount_increase_rt': '-0.76%',\n        'fundA_amount_tip': '2016-04-14 A类总份额6667.000万份，份额增长-0.76%',\n        'fundA_id': '150028',\n        'fundA_last_dt': '2016-04-14',\n        'fundA_last_time': '14:57:02',\n        'fundA_nav': '1.0090',\n        'fundA_nav_dt': '2016-04-13',\n        'fundA_nm': '中证500A',\n        'fundA_stock_volume': '28.2446',\n        'fundA_stock_volume_tip': 'A类总份额6667.000万份, 成交28万份',\n        'fundA_turnover_rt': '0.42%',\n        'fundA_volume': '28.46',\n        'fundB_amount': 10000.5,\n        'fundB_amount_increase': '-76',\n        'fundB_amount_tip': '2016-04-14 B类总份额10000万份，份额增长-0.76%',\n        'fundB_id': '150029',\n        'fundB_last_dt': '2016-04-14',\n        'fundB_last_time': '15:00:27',\n        'fundB_nav': '1.3220',\n        'fundB_nav_dt': '2016-04-13',\n        'fundB_nm': '中证500B',\n        'fundB_stock_volume': '255.5280',\n        'fundB_stock_volume_tip': 'B类总份额10000万份, 成交256万份',\n        'fundB_turnover_rt': '2.56%',\n        'fundB_volume': '337.24',\n        'fund_company_nm': '信诚基金',\n        'funda_name_tip': '下期利率：4.70，修正收益率：4.71%',\n        'idx_incr_rt': '0.91%',\n        'increase_rtA': '-0.10%',\n        'increase_rtB': '1.06%',\n        'index_id': '399905',\n        'index_nm': '中证 500',\n        'is_est_val': 1,\n        'is_last_nav': 1,\n        'lower_recalc_rt': '54.15',\n        'maturity_dt': '-',\n        'merge_price': '1.2006',\n        'min_apply_amount': None,\n        'notes': 'http://www.xcfunds.com/funds_2012/165511/fundinfor.shtml\\r\\n',\n        'ownedA': 0,\n        'ownedM': 1,\n        'priceA': '1.008',\n        'priceB': '1.329',\n        'real_idx_increase_rt': '0.91',\n        'recalc_to': None,\n        'redeem_fee': '0.5%',\n        'redeem_fee_tip': '0.5%',\n        'sell1A': '1.008',\n        'sell1B': '1.330',\n        'sell1_amountA': '7.132',\n        'sell1_amountB': '16.820',\n        'status_cd': 'N'\n    }\n}\n```\n\n##### 指数ETF查询接口\n\n**TIP :** 尚未包含黄金ETF和货币ETF\n\n*[集思录ETF源网页](https://www.jisilu.cn/data/etf/#tlink_2)*\n\n```\nquotation.etfindex(index_id=\"\", min_volume=0, max_discount=None, min_discount=None)\n```\n\n**return**\n\n```\n{\n    \"510050\": {\n        \"fund_id\": \"510050\",                # 代码\n        \"fund_nm\": \"50ETF\",                 # 名称\n        \"price\": \"2.066\",                   # 现价\n        \"increase_rt\": \"0.34%\",             # 涨幅\n        \"volume\": \"71290.96\",               # 成交额(万元)\n        \"index_nm\": \"上证50\",                # 指数\n        \"pe\": \"9.038\",                      # 指数PE\n        \"pb\": \"1.151\",                      # 指数PB\n        \"index_increase_rt\": \"0.45%\",       # 指数涨幅\n        \"estimate_value\": \"2.0733\",         # 估值\n        \"fund_nav\": \"2.0730\",               # 净值\n        \"nav_dt\": \"2016-03-11\",             # 净值日期\n        \"discount_rt\": \"-0.34%\",            # 溢价率\n        \"creation_unit\": \"90\",              # 最小申赎单位(万份)\n        \"amount\": \"1315800\",                # 份额\n        \"unit_total\": \"271.84\",             # 规模(亿元)\n        \"index_id\": \"000016\",               # 指数代码\n        \"last_time\": \"15:00:00\",            # 价格最后时间(未确定)\n        \"last_est_time\": \"23:50:02\",        # 估值最后时间(未确定)\n    }\n}\n```\n\n\n##### 分数图\n\n\n*[腾讯分时图地址](http://data.gtimg.cn/flashdata/hushen/minute/sz000001.js)*\n\n```python\n\nquotation = easyquotation.use(\"timekline\")\ndata = quotation.real(['603828'], prefix=True)\n\n```\n\n**return**\n\n```\n{\n   'sh603828': {\n        'date': '170721',  #日期 \n        'time_data': {\n            '201707210930': ['0930', '19.42', '61'], # [时间, 当前价, 上一分钟到这一分钟之间的成交数量]\n            '201707210931': ['0931', '19.42','122'], \n            '201707210932': ['0932', '19.43', '123'], \n            '201707210933': ['0933', '19.48', '125'], \n            '201707210934': ['0934', '19.49', '133'], \n            '201707210935': ['0935', '19.48', '161'], \n            ...\n    }\n}\n```\n\n##### 港股日k线图\n*[腾讯日k线图](http://web.ifzq.gtimg.cn/appstock/app/hkfqkline/get?_var=kline_dayqfq&param=hk00700,day,,,350,qfq&r=0.7773272375526847)*\n\n```python\n\nimport easyquotation\nquotation  = easyquotation.use(\"daykline\")\ndata = quotation.real(['00001','00700'])\nprint(data)\n\n```\n*return*\n```\n{\n    '00001': [\n                ['2017-10-09', '352.00', '349.00', '353.00', '348.60', '13455864.00'], # [日期, 今开, 今收, 最高, 最低, 成交量 ]\n                ['2017-10-10', '350.80', '351.20', '352.60', '349.80', '10088970.00'],\n               ]\n    '00700':[\n        \n    ]           \n     }\n}\n```\n\n##### 腾讯港股时时行情 \n*[腾讯控股时时行情](http://sqt.gtimg.cn/utf8/q=r_hk00700)*\n```python\n\nimport easyquotation\nquotation = easyquotation.use(\"hkquote\")\ndata = quotation.real(['00001','00700'])\nprint(data)\n```\n\n```\n{\n    '00001': \n        {\n            'stock_code': '00001', # 股票代码\n            'lotSize': '\"100', # 每手数量\n            'name': '长和', # 股票名称\n            'price': '97.20', # 股票当前价格\n            'lastPrice': '97.75', # 股票昨天收盘价格\n            'openPrice': '97.75', # 股票今天开盘价格\n            'amount': '1641463.0', # 股票成交量 \n            'time': '2017/11/29 15:38:58', # 当前时间\n            'high': '98.05', # 当天最高价格\n            'low': '97.15' # 当天最低价格\n        }, \n    '00700': \n        {\n            'stock_code': '00700', \n            'lotSize': '\"100',\n            'name': '腾讯控股', \n            'price': '413.20', \n            'lastPrice': '419.20', \n            'openPrice': '422.20', \n            'amount': '21351010.0', \n            'time': '2017/11/29 15:39:01', \n            'high': '422.80',\n            'low': '412.40'\n        }\n}\n```\n\n### 开发指南\n\n#### 初始化环境\n\n进入项目目录后运行 \n\n```\nmake init\n```\n\n提交代码时通过所有 `hooks` 检查即可\n"
        },
        {
          "name": "easyquotation",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.0361328125,
          "content": "[mypy]\nignore_missing_imports = True\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0087890625,
          "content": "requests\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.9140625,
          "content": "# coding:utf8\nfrom os import path\n\nfrom setuptools import setup\n\n# read the contents of your README file\nthis_directory = path.abspath(path.dirname(__file__))\nwith open(path.join(this_directory, \"README.md\"), encoding=\"utf-8\") as f:\n    long_description = f.read()\n\nsetup(\n    name=\"easyquotation\",\n    version=\"0.7.5\",\n    description=\"A utility for Fetch China Stock Info\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    author=\"shidenggui\",\n    author_email=\"longlyshidenggui@gmail.com\",\n    license=\"BSD\",\n    url=\"https://github.com/shidenggui/easyquotation\",\n    keywords=\"China stock trade\",\n    install_requires=[\"requests\", \"six\", \"easyutils\"],\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Programming Language :: Python :: 3.5\",\n        \"License :: OSI Approved :: BSD License\",\n    ],\n    packages=[\"easyquotation\"],\n    package_data={\"\": [\"*.conf\"]},\n)\n"
        },
        {
          "name": "test-requirements.txt",
          "type": "blob",
          "size": 0.0390625,
          "content": "-r requirements.txt\n\npytest\npytest-cov\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}