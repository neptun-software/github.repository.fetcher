{
  "metadata": {
    "timestamp": 1736559506164,
    "page": 87,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aquasecurity/kube-hunter",
      "stars": 4776,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.02734375,
          "content": "*.png\ntests/\ndocs/\n.github/\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.1435546875,
          "content": "[flake8]\nignore = E203, E266, E501, W503, B903, T499, B020\nmax-line-length = 120\nmax-complexity = 18\nselect = B,C,E,F,W,B9,T4\nmypy_config=mypy.ini\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2919921875,
          "content": "*.pyc\n.venv\n*aqua*\nvenv/\n.vscode\n.coverage\n.idea\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n*.spec\n.eggs\npip-wheel-metadata\n\n# Directory Cache Files\n.DS_Store\nthumbs.db\n__pycache__\n.mypy_cache\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.2265625,
          "content": "---\nrepos:\n  - repo: https://github.com/psf/black\n    rev: stable\n    hooks:\n      - id: black\n  - repo: https://gitlab.com/pycqa/flake8\n    rev: 3.7.9\n    hooks:\n      - id: flake8\n        additional_dependencies: [flake8-bugbear]\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.068359375,
          "content": "---\nextends: default\n\nrules:\n  line-length: disable\n  truthy: disable\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.8740234375,
          "content": "## Contribution Guide\n\n## Welcome Aboard\n\nThank you for taking interest in contributing to kube-hunter!  \nThis guide will walk you through the development process of kube-hunter.  \n\n## Setting Up\n\nkube-hunter is written in Python 3 and supports versions 3.6 and above.  \nYou'll probably want to create a virtual environment for your local project.  \nOnce you got your project and IDE set up, you can `make dev-deps` and start contributing!  \nYou may also install a pre-commit hook to take care of linting - `pre-commit install`.  \n\n## Issues\n\n- Feel free to open issues for any reason as long as you make it clear if this issue is about a bug/feature/hunter/question/comment.\n- Please spend a small amount of time giving due diligence to the issue tracker. Your issue might be a duplicate. If it is, please add your comment to the existing issue.\n- Remember users might be searching for your issue in the future, so please give it a meaningful title to help others.\n- The issue should clearly explain the reason for opening, the proposal if you have any, and any relevant technical information. \n\n## Pull Requests\n\n1. Every Pull Request should have an associated Issue unless you are fixing a trivial documentation issue.\n1. Your PR is more likely to be accepted if it focuses on just one change.\n1. Describe what the PR does. There's no convention enforced, but please try to be concise and descriptive. Treat the PR description as a commit message. Titles that start with \"fix\"/\"add\"/\"improve\"/\"remove\" are good examples.\n1. Please add the associated Issue in the PR description.\n1. There's no need to add or tag reviewers.\n1. If a reviewer commented on your code or asked for changes, please remember to mark the discussion as resolved after you address it. PRs with unresolved issues should not be merged (even if the comment is unclear or requires no action from your side).\n1. Please include a comment with the results before and after your change.\n1. Your PR is more likely to be accepted if it includes tests (We have not historically been very strict about tests, but we would like to improve this!).\n\n## Hunters\n\nIf you are contributing a new Hunter:\n1. When you open an issue to present the Hunter, please specify which `Vulnerability` classes you plan to add.\n1. A maintainer will assign each `Vulnerability` a VID for you to include in your Hunter code.\n1. Please add a KB article to `/docs/kb/` explaining the vulnerability and suggesting remediation steps. Look at other articles for examples.\n1. Please adhere to the following types convention: Use `Hunter` class to report vulnerabilities, `ActiveHunter` if your Hunter might change the state of the cluster, and `Discovery` for scanning the cluster (all are descendants of `HunterBase`). Also, use the `Vulnerability` class to report findings, and `Service` to report a discovery to be used by a hunter (both are descendants of `Event`, refrain from using `Event` directly).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7197265625,
          "content": "FROM python:3.8-alpine as builder\n\nRUN apk add --no-cache \\\n    linux-headers \\\n    tcpdump \\\n    build-base \\\n    ebtables \\\n    make \\\n    git && \\\n    apk upgrade --no-cache\n\nWORKDIR /kube-hunter\nCOPY setup.py setup.cfg Makefile ./\nRUN make deps\n\nCOPY . .\nRUN make install\n\nFROM python:3.8-alpine\n\nRUN apk add --no-cache \\\n    tcpdump \\\n    ebtables && \\\n    apk upgrade --no-cache\n\nCOPY --from=builder /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages\nCOPY --from=builder /usr/local/bin/kube-hunter /usr/local/bin/kube-hunter\n\n# Add default plugins: https://github.com/aquasecurity/kube-hunter-plugins \nRUN pip install kube-hunter-arp-spoof>=0.0.3 kube-hunter-dns-spoof>=0.0.3\n\nENTRYPOINT [\"kube-hunter\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MITRE.png",
          "type": "blob",
          "size": 114.9765625,
          "content": null
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.21875,
          "content": ".SILENT: clean\n\nNAME            := kube-hunter\nSRC             := kube_hunter\nENTRYPOINT      := $(SRC)/__main__.py\nDIST            := dist\nCOMPILED        := $(DIST)/$(NAME)\nSTATIC_COMPILED := $(COMPILED).static\n\n\n.PHONY: deps\ndeps:\n\trequires=$(shell mktemp)\n\tpython setup.py -q dependencies > \\$requires\n\tpip install -r \\$requires\n\trm \\$requires\n\n.PHONY: dev-deps\ndev-deps:\n\tpip install -r requirements-dev.txt\n\n.PHONY: lint\nlint:\n\tblack .\n\tflake8\n\n.PHONY: lint-check\nlint-check:\n\tflake8\n\tblack --check --diff .\n\n.PHONY: test\ntest:\n\tpython -m pytest\n\n.PHONY: build\nbuild:\n\tpython setup.py sdist bdist_wheel\n\n.PHONY: pyinstaller\npyinstaller: deps\n\tpython setup.py pyinstaller\n\n.PHONY: staticx_deps\nstaticx_deps:\n\tcommand -v patchelf > /dev/null 2>&1 || (echo \"patchelf is not available. install it in order to use staticx\" && false)\n\n.PHONY: pyinstaller_static\npyinstaller_static: staticx_deps pyinstaller\n\tstaticx $(COMPILED) $(STATIC_COMPILED)\n\n.PHONY: install\ninstall:\n\tpip install .\n\n.PHONY: uninstall\nuninstall:\n\tpip uninstall $(NAME)\n\n.PHONY: publish\npublish:\n\ttwine upload dist/*\n\n.PHONY: clean\nclean:\n\trm -rf build/ dist/ *.egg-info/ .eggs/ .pytest_cache/ .mypy_cache .coverage *.spec\n\tfind . -type d -name __pycache__ -exec rm -rf '{}' +\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1396484375,
          "content": "kube-hunter\nCopyright 2018-2019 Aqua Security Software Ltd. \n\nThis product includes software developed by Aqua Security (https://aquasec.com).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.1015625,
          "content": "## Notice\nkube-hunter is not under active development anymore. If you're interested in scanning Kubernetes clusters for known vulnerabilities, we recommend using [Trivy](https://github.com/aquasecurity/trivy). Specifically, Trivy's Kubernetes [misconfiguration scanning](https://blog.aquasec.com/trivy-kubernetes-cis-benchmark-scanning) and [KBOM vulnerability scanning](https://blog.aquasec.com/scanning-kbom-for-vulnerabilities-with-trivy). Learn more in the [Trivy Docs](https://aquasecurity.github.io/trivy/).\n\n---\n\nkube-hunter hunts for security weaknesses in Kubernetes clusters. The tool was developed to increase awareness and visibility for security issues in Kubernetes environments. **You should NOT run kube-hunter on a Kubernetes cluster that you don't own!**\n\n**Run kube-hunter**: kube-hunter is available as a container (aquasec/kube-hunter), and we also offer a web site at [kube-hunter.aquasec.com](https://kube-hunter.aquasec.com) where you can register online to receive a token allowing you to see and share the results online. You can also run the Python code yourself as described below.\n\n**Explore vulnerabilities**: The kube-hunter knowledge base includes articles about discoverable vulnerabilities and issues. When kube-hunter reports an issue, it will show its VID (Vulnerability ID) so you can look it up in the KB at https://aquasecurity.github.io/kube-hunter/  \n_If you're interested in kube-hunter's integration with the Kubernetes ATT&CK Matrix [Continue Reading](#kuberentes-attck-matrix)_\n\n[kube-hunter demo video](https://youtu.be/s2-6rTkH8a8?t=57s)\n\n## Table of Contents\n\n- [Table of Contents](#table-of-contents)\n  - [Kubernetes ATT&CK Matrix](#kubernetes-attck-matrix)\n  - [Hunting](#hunting)\n    - [Where should I run kube-hunter?](#where-should-i-run-kube-hunter)\n    - [Scanning options](#scanning-options)\n    - [Authentication](#authentication)\n    - [Active Hunting](#active-hunting)\n    - [List of tests](#list-of-tests)\n    - [Nodes Mapping](#nodes-mapping)\n    - [Output](#output)\n    - [Dispatching](#dispatching)\n  - [Advanced Usage](#advanced-usage)\n    - [Azure Quick Scanning](#azure-quick-scanning)\n    - [Custom Hunting](#custom-hunting)\n  - [Deployment](#deployment)\n    - [On Machine](#on-machine)\n      - [Prerequisites](#prerequisites)\n        - [Install with pip](#install-with-pip)\n        - [Run from source](#run-from-source)\n    - [Container](#container)\n    - [Pod](#pod)\n  - [Contribution](#contribution)\n  - [License](#license)\n\n## Kubernetes ATT&CK Matrix\n\nkube-hunter now supports the new format of the Kubernetes ATT&CK matrix.\nWhile kube-hunter's vulnerabilities are a collection of creative techniques designed to mimic an attacker in the cluster (or outside it)\nThe Mitre's ATT&CK defines a more general standardised categories of techniques to do so.\n\nYou can think of kube-hunter vulnerabilities as small steps for an attacker, which follows the track of a more general technique he would aim for.\nMost of kube-hunter's hunters and vulnerabilities can closly fall under those techniques, That's why we moved to follow the Matrix standard.  \n \n_Some kube-hunter vulnerabities which we could not map to Mitre technique, are prefixed with the `General` keyword_ \n![kube-hunter](./MITRE.png)\n\n## Hunting\n### Where should I run kube-hunter?\n\nThere are three different ways to run kube-hunter, each providing a different approach to detecting weaknesses in your cluster:\n\nRun kube-hunter on any machine (including your laptop), select Remote scanning and give the IP address or domain name of your Kubernetes cluster. This will give you an attackers-eye-view of your Kubernetes setup.\n\nYou can run kube-hunter directly on a machine in the cluster, and select the option to probe all the local network interfaces.\n\nYou can also run kube-hunter in a pod within the cluster. This indicates how exposed your cluster would be if one of your application pods is compromised (through a software vulnerability, for example). (_`--pod` flag_)\n\n\n### Scanning options\n\nFirst check for these **[pre-requisites](#prerequisites)**.\n\nBy default, kube-hunter will open an interactive session, in which you will be able to select one of the following scan options. You can also specify the scan option manually from the command line. These are your options:\n\n1. **Remote scanning**\n\nTo specify remote machines for hunting, select option 1 or use the `--remote` option. Example:\n`kube-hunter --remote some.node.com`\n\n2. **Interface scanning**\n\nTo specify interface scanning, you can use the `--interface` option (this will scan all of the machine's network interfaces). Example:\n`kube-hunter --interface`\n\n3. **Network scanning**\n\nTo specify a specific CIDR to scan, use the `--cidr` option. Example:\n`kube-hunter --cidr 192.168.0.0/24`\n\n4. **Kubernetes node auto-discovery**\n\nSet `--k8s-auto-discover-nodes` flag to query Kubernetes for all nodes in the cluster, and then attempt to scan them all. By default, it will use [in-cluster config](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) to connect to the Kubernetes API. If you'd like to use an explicit kubeconfig file, set `--kubeconfig /location/of/kubeconfig/file`.\n\nAlso note, that this is always done when using `--pod` mode.\n\n### Authentication\nIn order to mimic an attacker in it's early stages, kube-hunter requires no authentication for the hunt. \n\n* **Impersonate** - You can provide kube-hunter with a specific service account token to use when hunting by manually passing the JWT Bearer token of the service-account secret with the `--service-account-token` flag. \n\n   Example:\n   ```bash\n   $ kube-hunter --active --service-account-token eyJhbGciOiJSUzI1Ni...\n   ```\n\n* When runing with `--pod` flag, kube-hunter uses the service account token [mounted inside the pod](https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/) to authenticate to services it finds during the hunt.\n  * if specified, `--service-account-token` flag takes priority when running as a pod\n\n\n### Active Hunting\n\nActive hunting is an option in which kube-hunter will exploit vulnerabilities it finds, to explore for further vulnerabilities.\nThe main difference between normal and active hunting is that a normal hunt will never change the state of the cluster, while active hunting can potentially do state-changing operations on the cluster, **which could be harmful**.\n\nBy default, kube-hunter does not do active hunting. To active hunt a cluster, use the `--active` flag. Example:\n`kube-hunter --remote some.domain.com --active`\n\n### List of tests\nYou can see the list of tests with the `--list` option: Example:\n`kube-hunter --list`\n\nTo see active hunting tests as well as passive:\n`kube-hunter --list --active`\n\n### Nodes Mapping \nTo see only a mapping of your nodes network, run with `--mapping` option. Example:\n`kube-hunter --cidr 192.168.0.0/24 --mapping`\nThis will output all the Kubernetes nodes kube-hunter has found.\n\n### Output\nTo control logging, you can specify a log level, using the `--log` option. Example:\n`kube-hunter --active --log WARNING`\nAvailable log levels are:\n\n* DEBUG\n* INFO (default)\n* WARNING\n\n### Dispatching\nBy default, the report will be dispatched to `stdout`, but you can specify different methods by using the `--dispatch` option. Example:\n`kube-hunter --report json --dispatch http`\nAvailable dispatch methods are:\n\n* stdout (default)\n* http (to configure, set the following environment variables:) \n    * KUBEHUNTER_HTTP_DISPATCH_URL (defaults to: https://localhost)\n    * KUBEHUNTER_HTTP_DISPATCH_METHOD (defaults to: POST)\n\n\n## Advanced Usage\n### Azure Quick Scanning \nWhen running **as a Pod in an Azure or AWS environment**, kube-hunter will fetch subnets from the Instance Metadata Service. Naturally this makes the discovery process take longer.\nTo hardlimit subnet scanning to a `/24` CIDR, use the `--quick` option. \n\n### Custom Hunting\nCustom hunting enables advanced users to have control over what hunters gets registered at the start of a hunt. \n**If you know what you are doing**, this can help if you want to adjust kube-hunter's hunting and discovery process for your needs.\n\nExample: \n```\nkube-hunter --custom <HunterName1> <HunterName2>\n``` \nEnabling Custom hunting removes all hunters from the hunting process, except the given whitelisted hunters.\n\nThe `--custom` flag reads a list of hunters class names, in order to view all of kube-hunter's class names, you can combine the flag `--raw-hunter-names` with the `--list` flag.  \n\nExample: \n```\nkube-hunter --active --list --raw-hunter-names\n```\n\n**Notice**: Due to kube-huner's architectural design, the following \"Core Hunters/Classes\" will always register (even when using custom hunting):\n* HostDiscovery \n  * _Generates ip addresses for the hunt by given configurations_\n  * _Automatically discovers subnets using cloud Metadata APIs_\n* FromPodHostDiscovery\n  * _Auto discover attack surface ip addresses for the hunt by using Pod based environment techniques_\n  * _Automatically discovers subnets using cloud Metadata APIs_\n* PortDiscovery\n  * _Port scanning given ip addresses for known kubernetes services ports_\n* Collector\n  * _Collects discovered vulnerabilities and open services for future report_\n* StartedInfo \n  * _Prints the start message_\n* SendFullReport \n  * _Dispatching the report based on given configurations_\n\n\n\n\n\n## Deployment\nThere are three methods for deploying kube-hunter:\n\n### On Machine\n\nYou can run kube-hunter directly on your machine.\n\n#### Prerequisites\n\nYou will need the following installed:\n* python 3.x\n* pip\n\n##### Install with pip\n\nInstall:\n~~~\npip install kube-hunter\n~~~\n\nRun:\n~~~\nkube-hunter\n~~~\n\n##### Run from source\nClone the repository:\n~~~\ngit clone https://github.com/aquasecurity/kube-hunter.git\n~~~\n\nInstall module dependencies. (You may prefer to do this within a [Virtual Environment](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/))\n~~~\ncd ./kube-hunter\npip install -r requirements.txt\n~~~\n\nRun:\n~~~\npython3 kube_hunter\n~~~\n\n_If you want to use pyinstaller/py2exe you need to first run the install_imports.py script._\n\n### Container\nAqua Security maintains a containerized version of kube-hunter at `aquasec/kube-hunter:aqua`. This container includes this source code, plus an additional (closed source) reporting plugin for uploading results into a report that can be viewed at [kube-hunter.aquasec.com](https://kube-hunter.aquasec.com). Please note, that running the `aquasec/kube-hunter` container and uploading reports data are subject to additional [terms and conditions](https://kube-hunter.aquasec.com/eula.html).\n\nThe Dockerfile in this repository allows you to build a containerized version without the reporting plugin.\n\nIf you run kube-hunter container with the host network, it will be able to probe all the interfaces on the host:\n\n`docker run -it --rm --network host aquasec/kube-hunter`\n\n_Note for Docker for Mac/Windows:_ Be aware that the \"host\" for Docker for Mac or Windows is the VM that Docker runs containers within. Therefore specifying `--network host` allows kube-hunter access to the network interfaces of that VM, rather than those of your machine.\nBy default, kube-hunter runs in interactive mode. You can also specify the scanning option with the parameters described above e.g.\n\n`docker run --rm aquasec/kube-hunter --cidr 192.168.0.0/24`\n\n### Pod\nThis option lets you discover what running a malicious container can do/discover on your cluster. This gives a perspective on what an attacker could do if they were able to compromise a pod, perhaps through a software vulnerability. This may reveal significantly more vulnerabilities.\n\nThe example `job.yaml` file defines a Job that will run kube-hunter in a pod, using default Kubernetes pod access settings. (You may wish to modify this definition, for example to run as a non-root user, or to run in a different namespace.)\n\n* Run the job with `kubectl create -f ./job.yaml`\n* Find the pod name with `kubectl describe job kube-hunter`\n* View the test results with `kubectl logs <pod name>`\n\n## Contribution \nTo read the contribution guidelines, <a href=\"https://github.com/aquasecurity/kube-hunter/blob/main/CONTRIBUTING.md\"> Click here </a>\n\n## License\nThis repository is available under the [Apache License 2.0](https://github.com/aquasecurity/kube-hunter/blob/main/LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5380859375,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version   | Supported          |\n| --------- | ------------------ |\n| 0.4.x | :white_check_mark: |\n| 0.3.x   | :white_check_mark: |\n\n## Reporting a Vulnerability\nWe encourage you to find vulnerabilities in kube-hunter.\nThe process is simple, just report a Bug issue. and we will take a look at this.\nIf you prefer to disclose privately, you can write to one of the security maintainers at:\n\n| Name        | Email              |\n| ----------- | ------------------ |\n| Daniel Sagi | daniel.sagi@aquasec.com |\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "job.yaml",
          "type": "blob",
          "size": 0.3154296875,
          "content": "---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: kube-hunter\nspec:\n  template:\n    metadata:\n      labels:\n        app: kube-hunter\n    spec:\n      containers:\n        - name: kube-hunter\n          image: aquasec/kube-hunter:0.6.8\n          command: [\"kube-hunter\"]\n          args: [\"--pod\"]\n      restartPolicy: Never\n"
        },
        {
          "name": "kube-hunter-screenshot.png",
          "type": "blob",
          "size": 229.9921875,
          "content": null
        },
        {
          "name": "kube-hunter.png",
          "type": "blob",
          "size": 24.73046875,
          "content": null
        },
        {
          "name": "kube-hunter.py",
          "type": "blob",
          "size": 0.0224609375,
          "content": "kube_hunter/__main__.py"
        },
        {
          "name": "kube_hunter",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.03515625,
          "content": "[mypy]\nignore_missing_imports = True"
        },
        {
          "name": "pyinstaller_hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.3662109375,
          "content": "[tool.black]\nline-length = 120\ntarget-version = ['py36']\ninclude = '\\.pyi?$'\nexclude = '''\n(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\venv\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  | \\.vscode\n  | \\.idea\n  | \\.Python\n  | develop-eggs\n  | downloads\n  | eggs\n  | lib\n  | lib64\n  | parts\n  | sdist\n  | var\n  | .*\\.egg-info\n  | \\.DS_Store\n)\n'''\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.1787109375,
          "content": "flake8\npytest >= 2.9.1\nrequests-mock >= 1.8\ncoverage < 5.0\npytest-cov\nsetuptools >= 30.3.0\nsetuptools_scm\ntwine\npyinstaller\nstaticx\nblack\npre-commit\nflake8-bugbear\nflake8-mypy\npluggy\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0048828125,
          "content": "-e .\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 2.53125,
          "content": "[metadata]\nname = kube-hunter\ndescription = Kubernetes security weaknesses hunter for humans\nlong_description = file: README.md\nlong_description_content_type = text/markdown\nauthor = Aqua Security\nauthor_email = support@aquasec.com\nurl = https://github.com/aquasecurity/kube-hunter\nkeywords =\n    aquasec\n    hunter\n    kubernetes\n    k8s\n    security\nlicense_file = LICENSE\nclassifiers =\n    Development Status :: 4 - Beta\n    Environment :: Console\n    License :: OSI Approved :: Apache Software License\n    Natural Language :: English\n    Operating System :: OS Independent\n    Programming Language :: Python :: 3.6\n    Programming Language :: Python :: 3.7\n    Programming Language :: Python :: 3.8\n    Programming Language :: Python :: 3.9\n    Programming Language :: Python :: 3 :: Only\n    Topic :: Security\n\n[options]\nzip_safe = False\npackages = find:\ninstall_requires =\n    netaddr\n    pyroute2\n    requests\n    PrettyTable\n    urllib3>=1.24.3\n    ruamel.yaml\n    future\n    packaging\n    dataclasses\n    pluggy\n    kubernetes==12.0.1\nsetup_requires =\n    setuptools>=30.3.0\n    setuptools_scm\ntest_requires =\n    pytest>=2.9.1\n    coverage<5.0\n    pytest-cov\n    requests-mock\npython_requires = >=3.6\n\n[options.entry_points]\nconsole_scripts =\n    kube-hunter = kube_hunter.__main__:main\n\n[aliases]\ntest=pytest\n\n# PyTest\n[tool:pytest]\nminversion                                        = 2.9.1\nnorecursedirs                                     = .venv .vscode\naddopts                                           = --cov=kube_hunter\ntestpaths                                         = tests\nconsole_output_style                              = progress\npython_classes                                    = Test*\npython_files                                      = test_*.py\npython_functions                                  = test_*\nfilterwarnings                                    = ignore::DeprecationWarning\n\n# Coverage\n[coverage:report]\n# show missing lines numbers\nshow_missing = True\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n    # Don't complain about missing debug-only code:\n    def __repr__\n    if self\\.debug\n    # Don't complain if tests don't hit defensive\n    # assertion code:\n    raise AssertionError\n    raise NotImplementedError\n    # Don't complain if non-runnable code isn't run:\n    if 0:\n    if __name__ == .__main__.:\n    # Don't complain about log messages not being tested\n    logger\\.\n    logging\\.\n\n# Files to exclude from consideration\nomit =\n    kube_hunter/__main__.py\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.64453125,
          "content": "from configparser import ConfigParser\nfrom pkg_resources import parse_requirements\nfrom subprocess import check_call\nfrom typing import Any, List\nfrom setuptools import setup, Command\n\n\nclass ListDependenciesCommand(Command):\n    \"\"\"A custom command to list dependencies\"\"\"\n\n    description = \"list package dependencies\"\n    user_options: List[Any] = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        cfg = ConfigParser()\n        cfg.read(\"setup.cfg\")\n        requirements = cfg[\"options\"][\"install_requires\"]\n        print(requirements)\n\n\nclass PyInstallerCommand(Command):\n    \"\"\"A custom command to run PyInstaller to build standalone executable.\"\"\"\n\n    description = \"run PyInstaller on kube-hunter entrypoint\"\n    user_options: List[Any] = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        cfg = ConfigParser()\n        cfg.read(\"setup.cfg\")\n        command = [\n            \"pyinstaller\",\n            \"--additional-hooks-dir\",\n            \"pyinstaller_hooks\",\n            \"--clean\",\n            \"--onefile\",\n            \"--name\",\n            \"kube-hunter\",\n        ]\n        setup_cfg = cfg[\"options\"][\"install_requires\"]\n        requirements = parse_requirements(setup_cfg)\n        for r in requirements:\n            command.extend([\"--hidden-import\", r.key])\n        command.append(\"kube_hunter/__main__.py\")\n        print(\" \".join(command))\n        check_call(command)\n\n\nsetup(\n    use_scm_version={\"fallback_version\": \"noversion\"},\n    cmdclass={\"dependencies\": ListDependenciesCommand, \"pyinstaller\": PyInstallerCommand},\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}