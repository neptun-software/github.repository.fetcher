{
  "metadata": {
    "timestamp": 1736559545727,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/muzic",
      "stars": 4623,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.029296875,
          "content": ".ipynb_checkpoints/\n.DS_Store\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1142578125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.794921875,
          "content": "<br/>\n<a href=\"https://github.com/microsoft/muzic\"><img src=\"img/logo_gradient.png\" height=\"70\"> </a>\n<br/>\n<br/>\n\n**Muzic** is a research project on AI music that empowers music understanding and generation with deep learning and artificial intelligence. \nMuzic is pronounced as [ˈmjuːzeik]. Besides the logo in image version (see above), Muzic also has a logo in video version (you can click here to watch <a href=\"https://ai-muzic.github.io/muzic_logo/\"><img src=\"img/muzic_video_logo.PNG\" title=\"Muzic Video Logo\" height=\"15\"/></a>). Muzic was started by [some researchers](https://www.microsoft.com/en-us/research/project/ai-music/) from [Microsoft Research Asia](https://www.microsoft.com/en-us/research/lab/microsoft-research-asia/) and also contributed by outside collaborators.  \n\n\n\n<!-- [![Muzic Video Logo](img/muzic_video_logo.PNG)](https://ai-muzic.github.io/muzic_logo/ \"Muzic Video Logo\") -->\n  \n\n \n\n<br/>\nWe summarize the scope of our Muzic project in the following figure:\n<br/><br/>\n<p align=\"center\">\n<a href=\"https://github.com/microsoft/muzic\">\n  <img src=\"img/concept_map_new.png\" height=\"350\"/>\n</a>\n</p>\n<br/>\n\n\nThe current work in [Muzic](https://www.microsoft.com/en-us/research/project/ai-music/) includes:\n* Music Understanding\n  + Symbolic Music Understanding: [MusicBERT](https://arxiv.org/abs/2106.05630)\n  + Automatic Lyrics Transcription: [PDAugment](https://arxiv.org/abs/2109.07940) \n  + Contrastive Language-Music Pre-training: [CLaMP](https://arxiv.org/abs/2304.11029)\n* Music Generation\n  + Song Writing \n    + Lyric-to-Melody and Melody-to-Lyric: [SongMASS](https://arxiv.org/abs/2012.05168)\n    + Lyric Generation: [DeepRapper](https://arxiv.org/abs/2107.01875)\n    + Lyric-to-Melody Generation: [TeleMelody](https://arxiv.org/abs/2109.09617), [ReLyMe](https://arxiv.org/abs/2207.05688), [Re-creation of Creations (ROC)](https://arxiv.org/abs/2208.05697)\n  + Music Form/Structure Generation\n    + Music Form Generation: [MeloForm](https://arxiv.org/abs/2208.14345)  \n    + Long/Short Structure Modeling: [Museformer](https://arxiv.org/abs/2210.10349)\n  + Multi-Track Generation \n    + Accompaniment Generation: [PopMAG](https://arxiv.org/abs/2008.07703)\n    + Any Track Music Generation: [GETMusic](https://arxiv.org/abs/2305.10841)\n  + Text-to-Music Generation: [MuseCoco](https://arxiv.org/abs/2306.00110)\n  + Singing Voice Synthesis: [HiFiSinger](https://arxiv.org/abs/2009.01776)\n* AI Agent\n  + [MusicAgent](https://arxiv.org/abs/2310.11954)  \n\n  You can find some music samples generated by our systems on this page: https://ai-muzic.github.io/.\n<br>\nFor more speech related research, you can find from this page: https://speechresearch.github.io/ and https://github.com/microsoft/NeuralSpeech.\n\n### We are hiring! \nWe are hiring both research FTEs and research interns on **Speech/Audio/Music/Video and LLMs**. Please get in touch with Xu Tan (tanxu2012@gmail.com) if you are interested. \n\n\n### What is New?\n+ [CLaMP](https://arxiv.org/abs/2304.11029) has won the Best Student Paper Award at ISMIR 2023! \n+ We release [MusicAgent](https://arxiv.org/abs/2310.11954), an AI agent for versatile music processing using large language models.\n+ We release [MuseCoco](https://arxiv.org/abs/2306.00110), a music composition copilot to generate symbolic music from text.\n+ We release [GETMusic](https://arxiv.org/abs/2305.10841), a versatile music copliot with a universal representation and diffusion framework to generate any music tracks.\n+ We release the first model for cross-modal symbolic MIR: [CLaMP](https://arxiv.org/abs/2304.11029).\n+ We release two new research work on music structure modeling: [MeloForm](https://arxiv.org/abs/2208.14345) and [Museformer](https://arxiv.org/abs/2210.10349).\n+ We give a tutorial on [AI Music Composition](https://www.microsoft.com/en-us/research/uploads/prod/2021/10/Tutorial-on-AI-Music-Composition-@ACM-MM-2021.pdf) at [ACM Multimedia 2021](https://2021.acmmm.org/).\n\n\n## Requirements\n\nThe operating system is Linux. We test on Ubuntu 16.04.6 LTS, CUDA 10, with Python 3.6.12. The requirements for running Muzic are listed in `requirements.txt`. To install the requirements, run:\n```bash\npip install -r requirements.txt\n```\nWe release the code of several research work: [MusicBERT](musicbert), [PDAugment](pdaugment), [CLaMP](clamp), [DeepRapper](deeprapper), [SongMASS](songmass), [TeleMelody](telemelody), [ReLyMe](relyme), [Re-creation of Creations (ROC)](roc), [MeloForm](meloform), [Museformer](museformer), [GETMusic](getmusic), [MuseCoco](musecoco), and [MusicAgent](musicagent). You can find the README in the corresponding folder for detailed instructions on how to use. \n\n\n\n## Reference\n\nIf you find the Muzic project useful in your work, you can cite the papers as follows:\n\n* [1] ***MusicBERT**: Symbolic Music Understanding with Large-Scale Pre-Training*, Mingliang Zeng, Xu Tan, Rui Wang, Zeqian Ju, Tao Qin, Tie-Yan Liu, **ACL 2021**.  \n* [2] ***PDAugment**: Data Augmentation by Pitch and Duration Adjustments for Automatic Lyrics Transcription*, Chen Zhang, Jiaxing Yu, Luchin Chang, Xu Tan, Jiawei Chen, Tao Qin, Kejun Zhang, **ISMIR 2022**.\n* [3] ***DeepRapper**: Neural Rap Generation with Rhyme and Rhythm Modeling*, Lanqing Xue, Kaitao Song, Duocai Wu, Xu Tan, Nevin L. Zhang, Tao Qin, Wei-Qiang Zhang, Tie-Yan Liu, **ACL 2021**. \n* [4] ***SongMASS**: Automatic Song Writing with Pre-training and Alignment Constraint*, Zhonghao Sheng, Kaitao Song, Xu Tan, Yi Ren, Wei Ye, Shikun Zhang, Tao Qin, **AAAI 2021**.\n* [5] ***TeleMelody**: Lyric-to-Melody Generation with a Template-Based Two-Stage Method*, Zeqian Ju, Peiling Lu, Xu Tan, Rui Wang, Chen Zhang, Songruoyao Wu, Kejun Zhang, Xiangyang Li, Tao Qin, Tie-Yan Liu, **EMNLP 2022**.\n* [6] ***ReLyMe**: Improving Lyric-to-Melody Generation by Incorporating Lyric-Melody Relationships*, Chen Zhang, LuChin Chang, Songruoyao Wu, Xu Tan, Tao Qin, Tie-Yan Liu, Kejun Zhang, **ACM Multimedia 2022**.\n* [7] ***Re-creation of Creations**: A New Paradigm for Lyric-to-Melody Generation*, Ang Lv, Xu Tan, Tao Qin, Tie-Yan Liu, Rui Yan, arXiv 2022. \n* [8] ***MeloForm**: Generating Melody with Musical Form based on Expert Systems and Neural Networks*, Peiling Lu, Xu Tan, Botao Yu, Tao Qin, Sheng Zhao, Tie-Yan Liu, **ISMIR 2022**. \n* [9] ***Museformer**: Transformer with Fine- and Coarse-Grained Attention for Music Generation*, Botao Yu, Peiling Lu, Rui Wang, Wei Hu, Xu Tan, Wei Ye, Shikun Zhang, Tao Qin, Tie-Yan Liu, **NeurIPS 2022**.\n* [10] ***PopMAG**: Pop Music Accompaniment Generation*, Yi Ren, Jinzheng He, Xu Tan, Tao Qin, Zhou Zhao, Tie-Yan Liu, **ACM Multimedia 2020**.\n* [11] ***HiFiSinger**: Towards High-Fidelity Neural Singing Voice Synthesis*, Jiawei Chen, Xu Tan, Jian Luan, Tao Qin, Tie-Yan Liu, arXiv 2020.\n* [12] ***CLaMP**: Contrastive Language-Music Pre-training for Cross-Modal Symbolic Music Information Retrieval*, Shangda Wu, Dingyao Yu, Xu Tan, Maosong Sun, **ISMIR 2023**, ***Best Student Paper Award***.\n* [13] ***GETMusic**: Generating Any Music Tracks with a Unified Representation and Diffusion Framework*, Ang Lv, Xu Tan, Peiling Lu, Wei Ye, Shikun Zhang, Jiang Bian, Rui Yan, arXiv 2023.\n* [14] ***MuseCoco**: Generating Symbolic Music from Text*, Peiling Lu, Xin Xu, Chenfei Kang, Botao Yu, Chengyi Xing, Xu Tan, Jiang Bian, arXiv 2023.\n* [15] ***MusicAgent**: An AI Agent for Music Understanding and Generation with Large Language Models*, Dingyao Yu, Kaitao Song, Peiling Lu, Tianyu He, Xu Tan, Wei Ye, Shikun Zhang, Jiang Bian, **EMNLP 2023 Demo**.\n\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Trademarks\n\nThis project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft \ntrademarks or logos is subject to and must follow \n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\nAny use of third-party trademarks or logos are subject to those third-party's policies.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.71484375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/en-us/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/en-us/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 1.2841796875,
          "content": "# TODO: The maintainer of this repo has not yet edited this file\r\n\r\n**REPO OWNER**: Do you want Customer Service & Support (CSS) support for this product/project?\r\n\r\n- **No CSS support:** Fill out this template with information about how to file issues and get help.\r\n- **Yes CSS support:** Fill out an intake form at [aka.ms/spot](https://aka.ms/spot). CSS will work with/help you to determine next steps. More details also available at [aka.ms/onboardsupport](https://aka.ms/onboardsupport).\r\n- **Not sure?** Fill out a SPOT intake as though the answer were \"Yes\". CSS will help you decide.\r\n\r\n*Then remove this first heading from this SUPPORT.MD file before publishing your repo.*\r\n\r\n# Support\r\n\r\n## How to file issues and get help  \r\n\r\nThis project uses GitHub Issues to track bugs and feature requests. Please search the existing \r\nissues before filing new issues to avoid duplicates.  For new issues, file your bug or \r\nfeature request as a new Issue.\r\n\r\nFor help and questions about using this project, please **REPO MAINTAINER: INSERT INSTRUCTIONS HERE \r\nFOR HOW TO ENGAGE REPO OWNERS OR COMMUNITY FOR HELP. COULD BE A STACK OVERFLOW TAG OR OTHER\r\nCHANNEL. WHERE WILL YOU HELP PEOPLE?**.\r\n\r\n## Microsoft Support Policy  \r\n\r\nSupport for this **PROJECT or PRODUCT** is limited to the resources listed above.\r\n"
        },
        {
          "name": "clamp",
          "type": "tree",
          "content": null
        },
        {
          "name": "deeprapper",
          "type": "tree",
          "content": null
        },
        {
          "name": "emogen",
          "type": "tree",
          "content": null
        },
        {
          "name": "getmusic",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "meloform",
          "type": "tree",
          "content": null
        },
        {
          "name": "musecoco",
          "type": "tree",
          "content": null
        },
        {
          "name": "museformer",
          "type": "tree",
          "content": null
        },
        {
          "name": "musicagent",
          "type": "tree",
          "content": null
        },
        {
          "name": "musicbert",
          "type": "tree",
          "content": null
        },
        {
          "name": "pdaugment",
          "type": "tree",
          "content": null
        },
        {
          "name": "relyme",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.314453125,
          "content": "scikit-learn==0.21.3\nmiditoolkit==0.1.14\nfastBPE\ndtw-python\nnltk\nkeras\ntqdm\nmatplotlib\npretty_midi\nPyYAML\npypianoroll\nfairseq==0.10.0\ntorch==1.7.1\ntransformers==3.5.1\npypinyin==0.39.1\njieba==0.42.1\ntensorboard==2.4.0\nscipy==1.3.1\nlibrosa\npyworld\nsoundfile\npyOpenSSL\nsecrets\npkuseg==0.0.25\nicecream==2.1.3\ntextrank4zh==0.3\n"
        },
        {
          "name": "roc",
          "type": "tree",
          "content": null
        },
        {
          "name": "songmass",
          "type": "tree",
          "content": null
        },
        {
          "name": "telemelody",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}