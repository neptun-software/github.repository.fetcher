{
  "metadata": {
    "timestamp": 1736559934377,
    "page": 703,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coala/coala",
      "stars": 3554,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coafile",
          "type": "blob",
          "size": 4.76171875,
          "content": "[Default]\nfiles = *.py, coalib/**/*.py, ./coala, tests/**/*.py, docs/conf.py\nignore =\n    tests/bearlib/languages/documentation/documentation_extraction_testdata/*.py,\n    tests/collecting/collectors_test_dir/bears/incorrect_bear.py,\n    coalib/misc/Asyncio.py,\n\nmax_line_length = 80\nuse_spaces = True\n\n[python]\n# Patches may conflict with autopep8 so putting them in own section so they\n# will be executed sequentially; also we need the LineLengthBear to double\n# check the line length because PEP8Bear sometimes isn't able to correct the\n# linelength.\nbears = SpaceConsistencyBear, QuotesBear, LineContinuationBear\nlanguage = Python\npreferred_quotation = '\n\ndefault_actions = **: ApplyPatchAction\n\n[flakes]\n# Do not set default_action to ApplyPatchAction as it may lead to some\n# required imports being removed that might result in coala behaving weirdly.\n\ndefault_actions = *: ShowPatchAction\n\nbears = PyUnusedCodeBear\nlanguage = Python\nremove_all_unused_imports = true\n\n[autopep8]\nbears = PEP8Bear, PycodestyleBear\npycodestyle_ignore = E121, E123, E126, E226, E704,\n                     W503, W504\n\ndefault_actions = PEP8Bear: ApplyPatchAction\n\n[linelength]  # Sometimes autopep8 makes too long lines, need to check after!\nbears = LineLengthBear\nignore_length_regex = ^.*https?://\n\n[DOCS]\nbears = SpaceConsistencyBear, LineLengthBear\n\nfiles = docs/**/*.rst,*.rst\nignore = docs/API/\nignore_length_regex = ^.*https?://\n\ndefault_actions = SpaceConsistencyBear: ApplyPatchAction\n\n[languagetool]\nenabled = False\n\nbears = LanguageToolBear\nfiles = docs/**/*.rst,*.rst\nignore = docs/API/\nlanguagetool_disable_rules =\n    EN_QUOTES,                          # `` for links in rst files\n    WHITESPACE_RULE,                    # Indents in code\n    UPPERCASE_SENTENCE_START,           # Sentences start with \"coala\"\n    COMMA_PARENTHESIS_WHITESPACE,       # Confuses .coafile\n    DOUBLE_PUNCTUATION,                 # Used in `.. note::`\n    SENTENCE_WHITESPACE,                # Thinks coalib.xyz should have space\n    THE_PUNCT,                          # Confused by symbols in code\n    EN_A_VS_AN,                         # Mistakes variable `a` to be an article\n    EN_UNPAIRED_BRACKETS,               # Confused with brackets in code\n    ENGLISH_WORD_REPEAT_BEGINNING_RULE, # Confuses itself in regex\n    CD_NN,                              # index -> indices\n    SENT_START_CONJUNCTIVE_LINKING_ADVERB_COMMA,\n    SENTENCE_FRAGMENT,                  # Thinks headings are sentences\n    ENGLISH_WORD_REPEAT_RULE,           # Found in code\n    POSSESIVE_APOSTROPHE                # Confused by directory name \"objects\"\n\n[commit]\nbears = GitCommitBear\nshortlog_trailing_period = False\nshortlog_regex = ([^:]*|[^:]+[^ ]: [A-Z0-9*].*)\n\n[Pylint]\nenabled = False\n\nbears = PyLintBear\n\npylint_cli_options = --ignore\\=CVS,cindex.py,tests\npylint_disable = missing-docstring, # Lots of functions don't need docstrings\n                 arguments-differ, # Some child classes need to change\n                                   # argument signature of a inherited function\n                 bad-builtin, # Pylint doesn't like most builtin functions\n                              # like filter, map etc. It prefers using for\n                              # loops for everything - although sometimes\n                              # map and other builtins are more intuitive.\n                 fixme, # Already done using KeywordBear\n                 locally-disabled, # Without this a pylint pragma is also\n                                   # considered an issue\n                 no-member, # Currently Pylint doesn't understand our enum()\n                            # making a lot of false positives here\n                 bad-continuation # Our indentation style guide is\n                                  # different from PEP\n\n[LineCounting]\nenabled = False\n\nbears = LineCountBear\nmax_lines_per_file = 1000\n\n[invalidlinks]\nenabled = False\nfiles = docs/**/*.rst\nignore = docs/API\nbears = InvalidLinkBear\n\n[css]\nbears = CSSLintBear\nfiles = docs/_static/**.css\n\n[rst]\nbears = reSTLintBear\nfiles = README.rst\n\n[rstcheck]\nbears = RSTcheckBear\nfiles = **.rst\nignore = docs/Developers/coala_settings.rst\n\n[text]\nbears = SpaceConsistencyBear\nfiles =\n    LICENSE, ISSUE_TEMPLATE, PULL_REQUEST_TEMPLATE.md, MANIFEST.in,\n    **.sh, .travis.yml, ./.circleci/config.yml, setup.cfg,\n    ./docs/_static/custom.css\nignore = node_modules/\n\n[jinja2]\nbears = Jinja2Bear\nfiles = **.jj2\n\n[TODOS]\nenabled = False\n\nbears = KeywordBear\nlanguage = python 3\n\nci_keywords, keywords = \\#TODO, \\# TODO, \\#FIXME, \\# FIXME\ncs_keywords =\n\n[urllib]\n# Encourage usage of requests library by blacklisting usage of urlopen()\nbears = KeywordBear\nlanguage = python 3\nkeywords = urlopen\n\n[yml]\nbears = YAMLLintBear\nfiles = **.yml, **.yaml\n\n[bash]\nbears = ShellCheckBear\nfiles = **.sh\nshell = bash\nshellcheck_ignore = SC2046, SC2154\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.138671875,
          "content": "comment: false\ncoverage:\n  status:\n    changes: false\n    patch: false\n    project:\n      default:\n        enabled: true\n        target: 100%\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.34765625,
          "content": "# top-most EditorConfig file\nroot = true\n\n[**]\ncharset = utf-8\nend_of_line = lf\nindent_size = 2\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 80\ntrim_trailing_whitespace = true\n\n# Set default indentation for python files\n[*.py]\nindent_size = 4\n\n# Override trailing whitespace for markdown files\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 9.0615234375,
          "content": "# moban hashes\n.moban.hashes\n\n# Extra rules from https://github.com/github/gitignore/\n# Python rules\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n# Node rules\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# next.js build output\n.next\n\n# nuxt.js build output\n.nuxt\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n\n# VirtualEnv rules\n# Virtualenv\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\n.Python\n[Bb]in\n[Ii]nclude\n[Ll]ib\n[Ll]ib64\n[Ll]ocal\n[Ss]cripts\npyvenv.cfg\n.venv\npip-selfcheck.json\n\n# Linux rules\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n# Windows rules\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# macOS rules\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# Emacs rules\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\ndist/\n\n# Flycheck\nflycheck_*.el\n\n# server auth directory\n/server/\n\n# projectiles files\n.projectile\n\n# directory configuration\n.dir-locals.el\n\n# network security\n/network-security.data\n\n\n# Vim rules\n# Swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n\n# Session\nSession.vim\nSessionx.vim\n\n# Temporary\n.netrwhist\n*~\n# Auto-generated tag files\ntags\n# Persistent undo\n[._]*.un~\n\n# JetBrains rules\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n# SublimeText rules\n# Cache files for Sublime Text\n*.tmlanguage.cache\n*.tmPreferences.cache\n*.stTheme.cache\n\n# Workspace files are user-specific\n*.sublime-workspace\n\n# Project files should be checked into the repository, unless a significant\n# proportion of contributors will probably not be using Sublime Text\n# *.sublime-project\n\n# SFTP configuration file\nsftp-config.json\n\n# Package control specific files\nPackage Control.last-run\nPackage Control.ca-list\nPackage Control.ca-bundle\nPackage Control.system-ca-bundle\nPackage Control.cache/\nPackage Control.ca-certs/\nPackage Control.merged-ca-bundle\nPackage Control.user-ca-bundle\noscrypto-ca-bundle.crt\nbh_unicode_properties.cache\n\n# Sublime-github package stores a github token in this file\n# https://packagecontrol.io/packages/sublime-github\nGitHub.sublime-settings\n\n# KDevelop4 rules\n*.kdev4\n.kdev4/\n\n# Kate rules\n# Swap Files #\n.*.kate-swp\n.swp.*\n\n# TextMate rules\n*.tmproj\n*.tmproject\ntmtags\n\n# VisualStudioCode rules\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n\n# Xcode rules\n# Xcode\n#\n# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore\n\n## User settings\nxcuserdata/\n\n## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)\n*.xcscmblueprint\n*.xccheckout\n\n## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)\nbuild/\nDerivedData/\n*.moved-aside\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\n\n## Gcc Patch\n/*.gcno\n\n# Eclipse rules\n.metadata\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n.recommenders\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# PyDev specific (Python IDE for Eclipse)\n*.pydevproject\n\n# CDT-specific (C/C++ Development Tooling)\n.cproject\n\n# CDT- autotools\n.autotools\n\n# Java annotation processor (APT)\n.factorypath\n\n# PDT-specific (PHP Development Tools)\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# Tern plugin\n.tern-project\n\n# TeXlipse plugin\n.texlipse\n\n# STS (Spring Tool Suite)\n.springBeans\n\n# Code Recommenders\n.recommenders/\n\n# Annotation Processing\n.apt_generated/\n\n# Scala IDE specific (Scala & Java development for Eclipse)\n.cache-main\n.scala_dependencies\n.worksheet\n\n# TortoiseGit rules\n# Project-level settings\n/.tgitconfig\n\n# Tags rules\n# Ignore tags created by etags, ctags, gtags (GNU global) and cscope\nTAGS\n.TAGS\n!TAGS/\ntags\n.tags\n!tags/\ngtags.files\nGTAGS\nGRTAGS\nGPATH\nGSYMS\ncscope.files\ncscope.out\ncscope.in.out\ncscope.po.out\n\n\n# man pages\ncoala.1\n\n# Pytest profile files\nprof/\n"
        },
        {
          "name": ".misc",
          "type": "tree",
          "content": null
        },
        {
          "name": ".moban.dt",
          "type": "tree",
          "content": null
        },
        {
          "name": ".moban.yaml",
          "type": "blob",
          "size": 2.8525390625,
          "content": "overrides: coala-ci-requirements.yaml\n\nname: coala\ncontact: coala.analyzer@gmail.com\ndescription: Linting and Fixing Code for All Languages\nbuild_version: 0.12.0.dev99999999999999\ncurrent_version: 0.12.0.dev\nversion: 0.12.0.dev\nrelease: 0.12.0.dev\nbranch: master\ncommand_line_interface: coala\npackage_module: coalib\nrtd_maintainer: L.S., F.N., M.K.\nci_directory: .misc\ndocs_dir: docs\ndocs_source_dir: ./\ndocs_toc: false\ntest_py36: true\nallow_generic_no_cover: true\ntest_timeout: 60\ntravis_sentinel: true\npython_versions:\n  - 3.6.9\n  - 3.5\n# 3.7 excluded due to https://github.com/coala/coala/issues/6028 and others\ntest_unsupported_python_versions:\n  - 2.7\n  - 3.3\n  - 3.4\n\nentry_points:\n  console_scripts:\n    - coala = coalib.coala:main\n    - coala-ci = coalib.coala_ci:main\n    - coala-json = coalib.coala_json:main\n    - coala-format = coalib.coala_format:main\n    - coala-delete-orig = coalib.coala_delete_orig:main\n\ndependencies:\n  - appdirs~=1.4\n  - cached-property~=1.4.3\n  - cli-helpers~=1.0.2\n  - git+https://gitlab.com/coala/coala-utils#egg=coala-utils-0.7.0\n  - colorlog>=2.7,<4.0\n  - git+https://gitlab.com/coala/package_manager#egg=dependency-management-0.5.0.dev0\n  - packaging>=16.8\n  - Pygments~=2.1\n  - PyPrint~=0.2.6\n  - requests~=2.12\n  - setuptools>=21.2.2\n  - unidiff~=0.5.2\n\ngitignore_extra_rulesets:\n  - node\n\nrequires:\n  - type: git\n    url: https://gitlab.com/coala/mobans\n    branch: master\n  - https://github.com/NAStools/homeassistant.git\n\nconfiguration:\n  template_dir:\n    - .moban.dt/\n    - mobans:templates/\n    - mobans:assets/\n    - homeassistant:homeassistant/util/\n  configuration: .moban.yaml\n  configuration_dir: 'mobans:'\ntargets:\n  - Fudgefile: Fudgefile.jj2\n  - .misc/Fudge.ps1: fudge/Fudge.ps1\n  - .misc/Modules/FudgeTools.psm1: fudge/Modules/FudgeTools.psm1\n  - .misc/FudgeCI.ps1: fudge/FudgeCI.ps1\n  - .misc/FudgeGenerateFake.ps1: fudge/FudgeGenerateFake.ps1\n  - .misc/PrepareAVVM.ps1: fudge/PrepareAVVM.ps1\n  - .misc/FudgePostInstall.ps1: fudge/FudgePostInstall.ps1\n  - .misc/store_env_in_registry.py: ci/store_env_in_registry.py\n  - .misc/constants.ps1: constants.ps1.jj2\n  - .misc/deps.python-packages.ps1: fudge/deps.python-packages.ps1\n  - .gitignore: core-gitignore.jj2\n  - .editorconfig: .editorconfig.jj2\n  - setup.py: core-setup.py.jj2\n  - setup.cfg: core-setup.cfg.jj2\n  - requirements.txt: requirements.txt.jj2\n  - test-requirements.txt: core-test-requirements.txt.jj2\n  - tests/conftest.py: conftest.py\n  - coalib/VERSION: VERSION.jj2\n  - runtime.txt: runtime.txt\n  - netlify.toml: docs/netlify.toml\n  - .travis.yml: ci/coala-travis.yml.jj2\n  - .misc/appveyor.yml: ci/appveyor.yml.jj2\n  - .misc/run_with_env.cmd: run_with_env.cmd\n  - .misc/check_unsupported.sh: ci/check_unsupported.sh.jj2\ncopy:\n  - .misc/check_setuptools.py: ci/check_setuptools.py\n  # homeassistant license MIT\n  - coalib/misc/Asyncio.py: async.py\nnocover_file_globs:\n  - coalib/misc/Asyncio.py\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.771484375,
          "content": "sudo: false\ndist: xenial\nlanguage: python\nnotifications:\n  email: false\npython:\n  - 3.5\n\nstages:\n  - name: sentinel\n    if: branch != master OR type = pull_request\n  - test\n  - moban\n  - name: unsupported\n    if: branch = master AND type = push\n\n.disable_global: &disable_global\n  addons: {}\n  cache: false\n  env: {}\n  before_install: []\n  install: []\n  before_script: []\n  script: []\n  after_success: []\n  after_failure: []\n  before_deploy: []\n  deploy: {}\n\n.moban: &moban\n  <<: *disable_global\n  python: 3.6\n  stage: moban\n  install: pip install moban~=0.5.0 gitfs2 pypifs\n  script:\n    - moban\n    - git diff --exit-code\n\njobs:\n  include:\n    - stage: sentinel\n      # All other jobs will be cancelled if the sentinel job fails\n      python: 3.6.9\n\n    - stage: test\n      # The sentinel job isnt active on master pushes, so the\n      # job is re-added to the bottom of the test matrix\n      python: 3.6.9\n      if: branch = master AND type = push\n\n    # OSX build removed due to long build startup delays\n    # Restore matrix job entry from d2d67fab to test OSX\n    - python: 2.7\n      <<: *disable_global\n      stage: unsupported\n      script: .misc/check_unsupported.sh\n    - python: 3.3\n      <<: *disable_global\n      stage: unsupported\n      script: .misc/check_unsupported.sh\n      dist: trusty\n    - python: 3.4\n      <<: *disable_global\n      stage: unsupported\n      script: .misc/check_unsupported.sh\n    - stage: moban\n      <<: *moban\n      if: branch = master AND type = push\n    - *moban\n  allow_failures:\n    - *moban\n\nstage: test\n\nenv:\n  global:\n    - PATH=\"$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin\"\n    - BEARS_ZIP_URL=https://codeload.github.com/coala/coala-bears/zip\n    - GRAVIS=\"https://raw.githubusercontent.com/DanySK/Gravis-CI/master/\"\n    - JDK=\"adopt@1.8.0-275\"\n\ncache:\n  pip: true\n  directories:\n    - node_modules\n    - docs/_build\n    - ~/nltk_data\n    - ~/.jabba\n\nbefore_install:\n  - curl \"${GRAVIS}.install-jdk-travis.sh\" --output ~/.install-jdk-travis.sh\n\n  - >\n    if [[ $TRAVIS_OS_NAME == osx ]]; then\n      brew install python3\n      sudo ln -sf $(which python3) $(which python)\n      sudo ln -sf $(which pip3) $(which pip 2>/dev/null || echo /usr/bin/pip)\n    fi\n\n  # See rationale in .ci/deps.python-packages.ps1 for pre-installing these\n  - pip install --prefer-binary cffi lxml\n  # Use pip 9, so that setuptools can be downgraded.\n  # https://github.com/coala/coala/issues/4708\n  # Apart from builds with python 2.7 and 3.5, it installs setuptools\n  # twice. So, it is required to uninstall one version manually.\n  - pip uninstall setuptools --yes\n  - pip uninstall setuptools --yes || true\n  - pip uninstall setuptools --yes || true\n  - pip uninstall pipenv --yes || true\n  - pip install pip==9.0.3 setuptools==21.2.2\n  - python .misc/check_setuptools.py\n\n  # https://github.com/coala/coala/issues/3183\n  # Travis automatically installs the `requirements.txt` in \"install\" stage\n  - cp requirements.txt requirements.orig\n  - cat test-requirements.txt docs-requirements.txt >> requirements.txt\n  - sed -i.bak '/^-r/d' requirements.txt\n\n  # OSX is not a real Travis 'python' image, so it does not install\n  # requirements.txt automatically.\n  - if [[ $TRAVIS_OS_NAME == osx ]]; then pip install -r requirements.txt; fi\n\n  # For bears in .coafile requiring npm dependencies\n  - npm install --no-save\n  - source ~/.install-jdk-travis.sh\n\nbefore_script:\n  # Restore the original requirements.txt\n  - mv requirements.orig requirements.txt\n  - python .misc/check_setuptools.py\n\nscript:\n  - py.test\n  - python setup.py bdist_wheel\n  - pip install ./dist/*.whl\n  - curl -fsSL -o coala-bears.zip $BEARS_ZIP_URL/master\n  - pip install coala-bears.zip[alldeps]\n  - coala --non-interactive\n  - python setup.py docs\n  - .ci/check_man.sh\n\nafter_success:\n  - codecov\n\nafter_failure:\n  - codecov\n\nbranches:\n  exclude:\n    - /^sils\\//\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 1.7919921875,
          "content": "How to contribute\n=================\n\nWelcome to *coala*! The following guidelines will give you a short overview\nover how we handle issues and PRs in this repository. *coala* is maintained\nby a growing community and newcomers are always welcome!\n\nWe appreciate all valuable contributions - bug reports, documentation and\ndesign enhancements issues as well as pull Requests to make *coala* more\nconvenient, functional and bug free.\n\nTo begin contributing have a look at the open issues labeled with\ndifficulty/newcomer - `newcomer issues <https://github.com/coala/coala/issues?q=is%3Aissue+is%3Aopen+label%3Adifficulty%2Fnewcomer>`__.\n\nFollow the instructions\n`here <https://coala.io/newcomers>`__\nand get involved to help us make a better software.\n\nFiling Issues\n-------------\n\nWhen filing an issue, please use this template:\n\n::\n\n    ### Overview Description\n\n    # Steps to Reproduce\n\n    1.\n    2.\n    3.\n\n    # Actual Results\n\n    # Expected Results\n\n    # Reproducibility\n\n    # Additional Information:\n\nPR Merge Criteria\n-----------------\n\nFor a PR to be merged, the following statements must hold true:\n\n-  All CI services pass. (CircleCI, AppVeyor, Scrutinizer, CodeCov)\n-  All commits must have been reviewed and approved by GitMate and a *coala*\n   maintainer who is not the author of the PR.\n-  Commits shall comply to the commit guidelines as outlined in the\n   docs.\n\nCommit guidelines can be found at the\n`Good Commits page <https://coala.io/commit>`__\n\nCorrecting PRs\n--------------\n\nRebasing PRs is preferred over merging master into the source branches again\nand again cluttering our history. If a reviewer has suggestions, the commit\nshall be amended so the history is not cluttered by “fixup commits”.\n\nFor further information/queries feel free to discuss with us on\n`gitter <https://gitter.im/coala/coala>`__.\n"
        },
        {
          "name": "Fudgefile",
          "type": "blob",
          "size": 1.0751953125,
          "content": "{\n    \"pack\": {\n        \"hg\": \".misc/nuspecs/hg.nuspec\",\n        \"nodejs\": \".misc/nuspecs/nodejs.nuspec\",\n        \"python\": \".misc/nuspecs/python.nuspec\"\n    },\n    \"packages\": [\n        {\n            \"name\": \"msys2\",\n            \"params\": \"/InstallDir:C:\\\\msys64 /NoUpdate\",\n            \"source\": \"\"\n        },\n        {\n            \"appveyor_id\": true,\n            \"name\": \"hg\",\n            \"source\": \"\",\n            \"version\": \"5.0\"\n        },\n        {\n            \"appveyor_id\": \"python\",\n            \"name\": \"python\",\n            \"source\": \"\",\n            \"version\": \"3.6.8\"\n        },\n        {\n            \"appveyor_id\": \"node\",\n            \"name\": \"nodejs\",\n            \"source\": \"\",\n            \"version\": \"11.13.0\"\n        },\n        {\n            \"name\": \"ShellCheck\",\n            \"source\": \"\"\n        }\n    ],\n    \"scripts\": {\n        \"post\": {\n            \"install\": \". $env:FudgeCI/FudgePostInstall.ps1; Invoke-PostInstall\"\n        },\n        \"pre\": {\n            \"install\": \". $env:FudgeCI/FudgeCI.ps1; Invoke-FudgeCI\"\n        }\n    },\n    \"source\": \"https://chocolatey.org/api/v2/\"\n}\n"
        },
        {
          "name": "ISSUE_TEMPLATE",
          "type": "blob",
          "size": 0.533203125,
          "content": "<!-- Hello! If you're filing a bug, please include every step so as to help us reproduce it on our machines. If you're unsure about how to file an issue, use the issue template. If you need any help regarding usage of coala, check out the documentation or hit us up on chat. You can ignore or delete this text, it is commented and won't appear when the issue is submitted or previewed.\n\nChat: https://coala.io/chat\nIssue Template: https://github.com/coala/coala/blob/master/CONTRIBUTING.rst#filing-issues\nDocumentation: https://docs.coala.io\n-->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1298828125,
          "content": "include README.rst\ninclude LICENSE\ninclude test-requirements.txt\ninclude requirements.txt\ninclude setup.cfg\nrecursive-include docs *\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.4765625,
          "content": "<!--\nThanks for your contribution!\n\nPlease take a quick look at those things down there. They're quite important.\nReally! We wrote them for you. Yes you! With utmost care. Read them.\n-->\n\n**For short term contributors:** we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\n\n### Checklist\n\n- [ ] I read the [commit guidelines](http://coala.io/commit) and I've followed\n      them.\n- [ ] I ran coala over my code locally. (*All commits have to pass\n      individually.* It is not sufficient to have \"fixup commits\" on your PR,\n      our bot will still report the issues for the previous commit.) You will\n      likely receive a lot of bot comments and build failures if coala does not\n      pass on every single commit!\n\nAfter you submit your pull request, **DO NOT click the 'Update Branch' button.**\nWhen asked for a rebase, consult [coala.io/rebase](https://coala.io/rebase)\ninstead.\n\nPlease consider helping us by reviewing other peoples pull requests as well:\n\n- pick up any PR at <https://coala.io/review>\n- review it (check <https://coala.io/reviewing> for more info)\n- if you are sure that it needs work, use `corobo mark wip <URL>` to get it out\n  of the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.2900390625,
          "content": ".. image:: https://cloud.githubusercontent.com/assets/5716520/24838296/a9cf5f04-1d45-11e7-855c-47b816ce1e09.png\n    :target: https://coala.io/\n\n=====\n\n:emphasis:`\"Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.\"` ― `John F. Woods <http://ruby.zigzo.com/2014/08/01/who-said-that-one-violent-psychopath-quote/>`_\n\n=====\n\n|Linux Build Status| |Windows Build status| |macOS Build Status|\n|codecov.io| |Documentation Status| |AGPL| |OpenHub|\n\n=====\n\n`coala <https://coala.io>`_ provides a unified interface for linting and fixing code with a single configuration file, regardless of the programming languages used. You can use coala from within your favorite editor, integrate it with your CI, get the results as JSON, or customize it to your needs with its flexible configuration syntax.\n\ncoala supports popular programming languages including **Python**, **C/C++**, **Java**, **JavaScript**, **CSS**, and `several others <http://coala.io/#!/languages>`_ out of the box.\n\n\n`Install coala <http://coala.io/#!/home#installation>`_ | `Get Involved <http://coala.io/#/getinvolved>`_ | `Chat <https://coala.io/chat>`_ | `Roadmap <https://projects.coala.io>`_ | `Blog <http://blog.coala.io>`_ | `Twitter <https://www.twitter.com/coala_io>`_\n\n\n.. |Linux Build Status| image:: https://img.shields.io/circleci/project/coala/coala/master.svg?label=linux%20build\n   :target: https://circleci.com/gh/coala/coala\n.. |Windows Build status| image:: https://img.shields.io/appveyor/ci/coala/coala/master.svg?label=windows%20build\n   :target: https://ci.appveyor.com/project/coala/coala/branch/master\n.. |macOS Build Status| image:: https://img.shields.io/travis/coala/coala/master.svg?label=macOS%20build\n   :target: https://travis-ci.org/coala/coala\n.. |codecov.io| image:: https://img.shields.io/codecov/c/github/coala/coala/master.svg?label=branch%20coverage\n   :target: https://codecov.io/github/coala/coala?branch=master\n.. |Documentation Status| image:: https://readthedocs.org/projects/coala/badge/?version=latest\n   :target: http://docs.coala.io/\n.. |AGPL| image:: https://img.shields.io/pypi/l/coala.svg\n   :target: https://www.gnu.org/licenses/agpl-3.0.html\n.. |OpenHub| image:: http://www.openhub.net/p/coala/widgets/project_thin_badge.gif\n   :target: https://www.openhub.net/p/coala\n\n"
        },
        {
          "name": "RELEASE_NOTES.rst",
          "type": "blob",
          "size": 41.0771484375,
          "content": "coala 0.10 - PolarBear\n======================\n\n::\n\n\n                       `++-    -o+`\n                -oo:  :yhho    ohhy:  :oo.\n                :hhhoohhh+      +hhhoohhy:\n            ``.--shhhhhy:        /yhhhhho--..`\n           +hhhhhhhhhhh+          ohhhhhhhhhhh/\n           `/+/////+hhhh/        +hhhy+///////`\n                    -yhhhs     hshhhy-\n       .os/           hhhhy-  -yhhhh           +ss.\n       .yhho           shhho``ohhhs          `ohhy`\n        -yhhs`          +hhhsshhh+          `shhy-\n      .::shhhs++/+yhy////shhhhhhs////yhy++++yhhho::-\n     /hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh/\n      -::shhhs++++yhy////shhhhhhs          +shhhs::.\n        -yhhs`          +hhhsshhh+          `shhy-\n       .yhho`          shhho``ohhhs           ohhy.\n       .ss+           hhhhy   -yhhhh           /so.\n                    -yhhhs      shhhy-\n           `///////+yhhh+        /hhhh+/////+/`\n           /hhhhhhhhhhho          +hhhhhhhhhhh+\n            `..--ohhhhhy/        :yhhhhhs--.``\n                :hhhoohhh+      +hhhoohhh:\n                -oo:  :yhho    ohhy:  :oo-\n                       `+o-    -++`\n\nFor this release we had 168 commits contributed by 66 unique contributors\nover 2.5 months.\n\nThe name of this release is PolarBear to reflect changes we have made to our\nrelease process. We have implemented a release freeze before all releases\nto serve as a testing period for all staged changes. This should also help\nus keep releases on schedule.\n\nThis release is an enhancement release which brings the usual slew of\nimprovements to documentation and API. We have started preparing the codebase\nfor the big changes that are outlined in the cEPs like section inheritance\nand the next generation core.\n\n**Known Bugs**\n\n- Results are cached even if a bear does not run. This can lead to empty\n  results where there should be errors. To temporarily deal with this\n  run coala with the ``--flush-cache`` option\n\n**General**\n\n- Test cases have been improved across the board so they catch more errors\n  before production.\n- Log output via json has been added which is accessible by using the\n  ``--log-json`` option.\n- coala domain has been changed from ``coala-analyzer.org`` to ``coala.io``.\n  Please file a bug if you find any broken links or instances of the old url.\n\n**Usability**\n\n- emacs has been added to list of editors that coala supports.\n- coala will now output a warning if you specify an editor that is not known.\n- The ``noqa`` keyword used by other linters as an ignore keyword is now\n  supported as a coala ignore keyword.\n- ``libclang-py3`` update to 3.4 is known to cause problems for some users.\n  Please uninstall and reinstall it if coala tells you there is a version\n  mismatch in ``libclang-py3``.\n- ``C#`` now has proper language support and should work with AnnotationBear\n  and all other bears which require language configuration.\n\n**Deprecations**\n\n- ``change_line`` method in ``Diff.py`` has been deprecated and has been\n  scheduled for removal.\n- ``format_str`` setting has been completely removed after being deprecated\n  last release. Use ``format`` instead to specify a formatting string.\n\n**Developers**\n\n- Travis has been enabled for developers to test their changes on their own CI.\n\n- Bears will now check for prerequisites using specified requirements\n  before running. Either override ``check_prequisites`` in the bear or write\n  a new requirement class if you wish to have a custom check.\n- When a language is not known by coala, an ``Unknown`` language will be\n  used.\n- ``@linter`` decorator now warns when using unsupported or anonymous capture\n  groups.\n- New ``dependency_management`` package has been created to contain package\n  manager and dependency classes used by coala. All of the old ``*Requirement``\n  classes have been moved here. Some new dependencies classes are\n  ``CabalRequirement`` and ``MavenRequirement``. Developers should add\n  requirement classes there now for the requirement types they wish to support.\n- ``DistributionRequirement`` can now check if a package is installed in many\n  popular linux distros.\n- Diffs are able to add a single line using the ``add_line`` method now.\n- ``Language`` class ignores leading and trailing spaces in language lookups.\n- ``Language`` class should auto-complete when using languages that have\n  been defined.\n\n**Docs**\n\n- A Code of Conduct has been added. This will guide conflict resolution if the\n  need ever arises.\n- API docs are now part of the coala repository.\n- Developer contribution documentation has received a major update\n\n**Bugfixes**\n\n- Fixed an issue where using linter bears on windows had thrown an exception.\n  `Issue 3323 <https://github.com/coala/coala/issues/3323>`_\n- coala ``-c`` (config file) option properly supports specifying directories.\n  Previously it has thrown an exception.\n  `Issue 3221 <https://github.com/coala/coala/issues/3221>`_\n- Documentation status github badge has been fixed.\n- Console interaction uses a unicode dot to represent spaces instead of the\n  bullet for better cross platform rendering.\n  `Issue 2751 <https://github.com/coala/coala/issues/2753>`_\n- ``Language`` class raises proper exception to fix ``hasattr`` behavior.\n  `Issue 3160 <https://github.com/coala/coala/issues/3160>`_\n- Ignore statements in multi-line comments should be supported properly now.\n  `Issue 3441 <https://github.com/coala/coala/issues/3441>`_\n\ncoala 0.9.1\n===========\n\nThis bugfix release addressed the following issues:\n\n- The installer has been fixed to only install on supported python versions.\n  `Issue #3310 <https://github.com/coala/coala/issues/3310>`_\n  `Issue #3383 <https://github.com/coala/coala/issues/3383>`_\n- The format_str option to specify a format string has been restored to\n  coala run in format mode. This is deprecated and was only restored to\n  provide plug-in developers a grace period to switch to the replacement\n  setting ``format``.\n  `Issue #3303 <https://github.com/coala/coala/issues/3303>`_\n- Setuptools was removed from our requirements list because having it only\n  only caused dependency problems for other packages installed on the system\n  `coala Bears Issue #751 <https://github.com/coala/coala-bears/issues/751>`_\n- PyPrint dependency was updated to a version which does not pull in\n  setuptools anymore.\n- API change: An auto-apply disable option was added to run_coala to fix\n  issue detection by unattended services that use coala when the coafile\n  contains a default_action\n  `Issue #3212 <https://github.com/coala/coala/issues/3212>`_\n- A few specific language class behaviors were changed. This should only\n  affect developers\n  `Pull #3175 <https://github.com/coala/coala/pull/3175>`_\n  `Pull #3167 <https://github.com/coala/coala/pull/3167>`_\n\ncoala 0.9.0 - GlobalBear\n========================\n\n::\n\n                       __\n                 o#'9MMHb':'-,o,\n              .oH\":HH$' \"' ' -*R&o,\n             dMMM*\"\"'`'      .oM\"HM?.\n           ,MMM'          \"HLbd< ?&H\\\n          .:MH .\"\\          ` MM  MM&b\n         . \"*H    -        &MMMMMMMMMH:\n         .    dboo        MMMMMMMMMMMM.\n         .   dMMMMMMb      *MMMMMMMMMP.\n         .    MMMMMMMP        *MMMMMP .\n              `#MMMMM           MM6P ,\n          '    `MMMP\"           HM*`,\n           '    :MM             .- ,\n            '.   `#?..  .       ..'\n               -.   .         .-\n                 ''-.oo,oo.-''\n\nFor this release only we had `58 different contributors\n<http://pastebin.com/raw/PpdZm7yL>`_ from all around the globe contributing way\nover 200 commits over 2.5 months to coala.\n\n**The name of this release is GlobalBear** to honour our `GlobalBear` class and\nleave a statement on how global the community grows: gone are the days when we\nvisit conferences and we have to explain the project to all the people. More\nand more people know the project before we meet them and this is great! This is\na huge step in our conquest to take over the world!\n\nThe `GlobalBear` class serves our users by providing project wide \"global\"\nanalysis. This release it will probably make its last appearance because it\nwill be deprecated in favour of a `more sophisticated concept\n<https://github.com/coala/cEPs/blob/master/cEP-0002.md>`_ in the near future.\n\nWe have also worked a lot towards building our dream of **letting users declare\ncode analysis configuration completely language independently**: to take a\nsneak peek at what we want to do, `check this out\n<https://github.com/coala/cEPs/blob/master/cEP-0005.md>`_. You will see that\nthe first aspects are already in our source code and that bears can already\nassociate results with them so future versions of coala will be able to tell\nthe user a plethora of facts around the type of issue pointed out.\n\n**For users**, we have added a lot of usability improvements as well as for\nexample the ability to merge patches within one line: if you previously had\nto run coala multiple times because of patch conflicts, this is likely not\nthe case anymore!\n\n**As a Bear writer** you now have access to our ``Language`` facilities: they\nwill give you facts about programming languages that you analyse so you can\nbuild truly language independent bears. Also, you now can use\nhttp://api.coala.io/ to get more information about our classes and functions\nyou work with.\n\nCommand Line Interface Changes:\n\n- ``coala-ci`` and ``coala-json`` have been deprecated. You can now use\n  ``coala --non-interactive`` and ``coala --json`` respectively.\n- Multiple patches within one line, even from different bears, can be\n  automatically merged by coala.\n- ``coala`` returns the exitcode 2 when not passing any ``--bears`` or\n  ``--files`` as well as when no section is enabled and nothing was done.\n- coala can now automatically add ``Ignore ...Bear`` comments to your source\n  code. Simply use the ``Add ignore comment`` action when offered.\n- Users can press enter to dismiss a result by default.\n- Result action descriptions have been compressed to make them easier readable.\n- The section name is now displayed when asking the user for missing settings.\n- ``coala --non-interactive`` shows results *and* patches by default now.\n- ``coala-dbus`` has been removed as it wasn't used by anyone.\n- A ``--no-color`` argument allows to run coala with uncoloured results.\n- Log messages are printed on stderr now.\n- ``coala --json`` doesn't output log messages in JSON anymore. This is a\n  technical issue. Log messages can easily be fetched from the stderr stream.\n- Some performance improvements could be achieved.\n- A lot more strings, like ``roger`` or ``no way`` are allowed for boolean\n  values. (https://github.com/coala/coala/commit/728b7b02da8ca8f91b91c67784872244c0820a77)\n\nBear API Changes:\n\n- ``LanguageDefinition`` has been deprecated. Use\n  ``coalib.bearlib.languages.Language`` instead. Consult\n  http://api.coala.io/en/latest/coalib.bearlib.languages.html#module-coalib.bearlib.languages.Language\n  for usage hints.\n- The deprecated ``Lint`` class has now been removed.\n- The ``CondaRequirement`` has been removed.\n- The ``multiple`` constructor for ``PackageRequirement`` classes has been\n  removed.\n- A ``deprecate_bear`` decorator is now available so bears can be renamed\n  seamlessly.\n- The ``Diff`` object has now dedicated functions to ``replace``, ``insert``\n  and ``remove`` ``SourceRange`` objects.\n\nBug Fixes:\n\n- A glob corner case has been fixed.\n  (https://github.com/coala/coala/issues/2664)\n- An issue where empty patches have been shown to the user has been fixed.\n  (https://github.com/coala/coala/issues/2832)\n- Wrong handling of periods when changing casing has been fixed.\n  (https://github.com/coala/coala/issues/2696)\n- A caching bug where results have not been shown to the user has been fixed.\n  (https://github.com/coala/coala/issues/2987)\n\nDocumentation:\n\n- API documentation is now available at http://api.coala.io/\n\nInternal Changes:\n\n- Deprecated parameters are stored in the function metadata.\n- Python builtin logging is now used.\n- Numerous changes to get started on https://coala.io/cep5 have been\n  implemented. The first aspects are already defined in\n  ``coalib.bearlib.aspects`` and bears can already append aspects to results.\n- ``coalang`` files now have an alias dictionary.\n\ncoala 0.8.1\n===========\n\nThis bugfix release addressed the following issues:\n\n- The cache will be correctly invalidated when changing section targets now.\n  (https://github.com/coala-analyzer/coala/issues/2708)\n- Dependencies are resolved before asking the user for needed values. This will\n  only affect custom bears that have dependencies that require settings.\n  (https://github.com/coala-analyzer/coala/issues/2709)\n- PyPrint was updated from 0.2.4 to 0.2.5.\n- PipRequirement uses ``sys.executable`` instead of hardcoded python. This will\n  only affect coala or bear developers.\n\ncoala 0.8.0 - grizzly\n=====================\n\n::\n\n                   -\n                 `Ns      :s-\n            .     mMd`     :Nd.\n           :h     /ss/`     +md.\n           dN`    :NMMMy`  .ymmy. -+`\n           dM+    dMMMMMm`.NMMMMN. +Mo\n        `  -sddy: yMMMMMM/+MMMMMMo  dMo\n       s/  +MMMMMy.dMMMMM-:MMMMMM+ -yhs`\n      .Ms  /MMMMMMo /hdh:  oMMMMh`+MMMMm.\n      -MN.  hMMMMMh  `/osssoos+-  dMMMMMs\n       oyhho.+mMMm:+dMMMMMMMMMm+  sMMMMMs\n       mMMMMMy``` dMMMMMMMMMMMMMh.`sMMMh`\n       yMMMMMMy  `MMMMMMMMMMMMMMMMy:..`\n       `yMMMMMd  yMMMMMMMMMMMMMMMMMMMMNh+`\n         .ohhs-+mMMMMMMMMMMMMMMMMMMMMMMMMd\n            .yMMMMMMMMMMMMMMMMMMMMMMMMMMMh\n            mMMMMMMMMMMMMMMMMMMMMMMMMMMMh`\n            yMMMMMMMMMMMMMMMNhssssyyyso-\n             /dMMMMMMMMMNy+.\n               ./syhys/-\n\n\nFor this release, we have had 46 developers from around the world contributing\nover 150 commits in the last 9 weeks.\n\nImproving the API available for bear writers is one of the areas we've focused\non for this release, with several new and exciting features. General performance\nhas also been improved heavily with some major changes under the hood. The\ndocumentation has also been worked on, with an emphasis on user-friendliness\nand design.\n\nThere have also been major internal changes in preparation for the complete\ndecentralization of bears, which would allow the installation of individual\nbears.\n\nBelow are some of the important changes introduced for this release:\n\n**New Features**\n\n- coala now supports syntax highlighting in results!\n\n- Questions are now printed in color; this will improve visibility when a lot\n  of text is written to the screen.\n\n- ``coala-json`` now supports ``--show-bears`` and ``--filter-by-language``\n\n- Added a ``--show-capabilities`` flag that displays the types of issues coala\n  can detect and fix for a particular language.\n\n- Display the line number when a line is missing; this could happen if a bear\n  that had run previously overwrites it.\n\n**For Bear Writers**\n\n- Bears now have a new ``REQUIREMENTS`` attribute which will be used to\n  automatically resolve bear dependencies. This includes:\n\n  + Native requirements\n    (from package managers such as ``apt-get``, ``dnf``, ``pacman``, ...)\n  + Conda requirements\n  + Python requirements through ``pip3``\n  + ``go`` requirements\n  + Ruby requirements through ``gem``\n  + NodeJS requirements through ``npm``\n  + RScript requirements\n  + Julia requirements\n\n- Language independent documentation parsing routines: these can be used to\n  make bears for linting documentation without having to worry about the\n  language.\n\n- ``coalang`` now supports C, C++, CSS, Java, Python3 and Vala.\n\n- A new bear creation tool has been released: with this tool, it's easier than\n  ever before to create external linter based bears for coala!\n\n- A new `ASCIINEMA_URL` attribute has been added to bears. This should\n  contain an URL to an asciinema video displaying the bear's capabilities in\n  action.\n\n- Bear results may now have a ``confidence`` parameter: this is supposed to\n  quantify the confidence, on a scale of 1 to 100, the bear has when flagging\n  results.\n\n- A ``deprecate_settings`` decorator has been created to deprecate old,\n  unsupported bear parameters. Please see\n  `here <https://github.com/coala-analyzer/coala/blob/fa8fe22562277762fd73ab3761ad1ec33263839a/coalib/bearlib/__init__.py#L15>`_\n  for an example usage.\n\n- ``Code Simplification`` has been added to the set of possible fixes that\n  bears can offer.\n\n**Bug Fixes**\n\n- Fixed an issue where errors were generated for lines containing only a\n  single tab character. `Issue #2180 <https://github.com/coala-analyzer/coala/issues/2180>`_\n\n- Fixed an issue with question where stray escape characters may be present.\n  `Issue #2546 <https://github.com/coala-analyzer/coala/issues/2546>`_\n\n- Group questions about missing values in a coafile by bears.\n  `Issue #2530 <https://github.com/coala-analyzer/coala/issues/2530>`_\n\n- An issue where an exception was raised wrongly when the same diff was\n  generated multiple times has been fixed.\n  `PR #2465 <https://github.com/coala-analyzer/coala/pull/2465>`_\n\n**Performance**\n\n- Caching is now enabled by default. This is a huge performance improvement\n  for HDD users - we've seen a 2x improvement when coala is run on coala.\n  To disable caching run coala with the ``--disable-caching`` flag.\n\n- An issue where coala takes over 2 seconds to print the help manual through\n  ``--help`` has been fixed.\n  `Issue #2344 <https://github.com/coala-analyzer/coala/issues/2344>`_\n\n- A small performance improvement from reusing already loaded file contents.\n\n**Documentation**\n\n- A complete overhaul to the README page with a focus on design and\n  readability.\n\n- A new `FAQ page <http://docs.coala.io/en/latest/Users/FAQ.html>`_ has\n  been created.\n\n- Various other documentation pages have been improved with new resources,\n  better explanations, and some corrections.\n\n- The whole documentation has been moved to a\n  `separate repository <https://github.com/coala-analyzer/documentation>`__.\n  Please file any documentation related issues over there.\n\n**Regressions**\n\n- Dropped Python 3.3 support\n\n**Internal Changes**\n\n- There has been a shift of several modules from coala to\n  `coala-utils <https://gitlab.com/coala/coala-utils/>`. This includes the whole\n  ``StringProcessing`` library, ``ContextManagers``, and some decorators.\n\ncoala 0 7 0 - baloo\n===================\n\n::\n\n              ,o8b,         .o88Oo._\n             P    d        d8P         .ooOO8bo._\n            d'    p        88                  '*Y8bo.\n           .Y    .\"         YA                      '*Y8b   __\n       db, d\" _ooQ.dPQ,     YA                        68o68**8Oo.\n     .8'  YI.Y\"   b   B      \"8D                       *\"'    \"Y8o\n    .Y    ;L 8,    Yq.8       Y8     'YB                       .8D\n    B .db_.L  q,   q \"q       '8               d8'             8D\n    8\"    qp   8,  8           8       d8888b          d      AY\n           8    \",dP           Y,     d888888         d'  _.oP\"\n           \"q    8;             q.    Y8888P'        d8\n            '8    b              \"q.  `Y88P'       d8\"\n             'D,  ,8                Y           ,o8P\n               'odY'                     oooo888P\"\n\n(Release logo by Fabian Neuschmidt)\n\nFor this release, 32 people from all over the world have contributed about 200\ncommits over almost two months.\n\nThe focus of this release is certainly on the usability of coala. Usability\ntesting has made us aware of some important difficulties, users have to face\nwhen trying out coala. We have implemented a lot of countermeasures to lower\nthis barrier.\n\nThe changelog below summarizes the most important user facing changes. Not\nlisted are especially lots of internal improvements and documentation fixes.\n\nNew Features:\n\n- `Shell Autocompletion <http://docs.coala.io/en/latest/Users/Tutorials/Shell_Autocompletion.html>`_\n- Patches are shown without prompting the user if small enough, otherwise\n  diffstats.\n- Bears have metadata and can be browsed. Browse the\n  `bear documentation <https://github.com/coala-analyzer/bear-docs>`_\n  repository for more information on all the bears.\n- Lots of usability improvements! coala will suggest using certain options if\n  no meaningful configuration was supplied.\n- The help was revamped completely and is way easier to read.\n- A ``--verbose`` alias is available for ``-L DEBUG``.\n- The ``default_actions`` setting accepts globs for bears now.\n- The ``--apply-patches`` argument was added to automatically apply all\n  patches.\n- coala supports experimental caching. This can lower the run time to a\n  fraction of the time needed to perform the full analysis. It will be enabled\n  by default in the next release. To use it, invoke coala with\n  ``--changed-files``.\n- Bear showing is divided into a new set of settings: ``--show-bears`` shows\n  all bears, ``--filter-by-language`` allows to filter them, ``--show-details``\n  and ``--show-description`` allow changing verbosity of the output.\n\nFeature Removals:\n\n- Tagging was removed.\n- ``linter`` does no longer show the executable of the bear by default.\n\nPerformance Improvements:\n\n- Globs will be internally cached now so they don't need to be retranslated\n  every time. This may show improvements of several seconds when working with\n  a large set of files.\n- coala supports experimental caching. See ``New Features`` for more\n  information.\n- coala does not delete ``*.orig`` files on startup anymore. This was a huge\n  performance hit especially on HDDs or big file trees. The cleanup can be\n  performed manually by running ``coala-delete-orig``. Instead coala will\n  keep track of ``*.orig`` files more smartly.\n\nBugfixes:\n\n- ``**.py`` can again be used instead ``**/*.py``.\n- If errors happen before the initialization of logging, tracebacks will be\n  shown.\n\nFor bear writers:\n\n- Bears can have a number of attributes now, including author information,\n  supported languages or categories. A requirements attribute will help\n  generating requirements definition files more easily in the future.\n- The ``linter`` wrapper provides a ``result_severity`` and a\n  ``result_message`` parameter now.\n- Bears can now delete and rename files.\n- The ``LanguageDefinition`` doesn't need a ``language_family`` anymore to\n  load language definitions.\n- Results can be created directly from the Bear class more conveniently\n  with ``self.new_result(...)``.\n\ncoala 0.6.0 - honeybadger\n=========================\n\n::\n\n     .o88Oo._                                .\".      \"     .\".\n    d8P         .ooOO8bo._                   dPo.    O#O   .oPb\n    88                  '*Y8bo.              88o.   .o#o.  .o88\n    YA                      '*Y8b   __       Y88o.   .8.  .o88Y\n     YA                        68o68**8Oo.    W8888O888888888W\n      \"8D                       *\"'    \"Y8o    w8888'88'8888w\n       Y8     'YB                       .8D     `o88:88:88o'\n       '8               d8'             8D       .O8`88'8O.\n        8       d8888b          d      AY        oO8I88I8Oo\n        Y,     d888888         d'  _.oP\"         oO8|88|Oo\n         q.    Y8888P'        d8                 oO8.88.8Oo\n          \"q.  `Y88P'       d8\"                  .oO.88.Oo.\n            Y           ,o8P                    .oO888888Oo.\n                  oooo888P\"                    .oO8      8Oo.\n                                               +oO8+    +8Oo+\n                                               'bo.      .od'\n\nThis release is shaped a lot by working on high quality bear writing tools. Our\ncodebase has matured further (improved tests, various internal improvements)\nand key features for writing and organizing bears were introduced.\n\nOver the last 1.5 months, 22 unique contributors have helped us at the coala\ncore project.\n\nThis time, the release logo is carefully hand crafted by Max Scholz!\n\nNew features:\n\n-  Smart globbing: use backslashes without an extra escape now if they don't\n   escape delimiters.\n-  Results now can have additional information appended.\n-  Bears expose information on which languages they support. You can query for\n   bears e.g. with ``coala --show-language-bears C++`` for C++.\n\nBugfixes:\n\n-  Linters suppress the output correctly now when checking for linter\n   availability. (https://github.com/coala-analyzer/coala/issues/1888)\n-  The result filter algorithms can handle file additions and deletions now.\n   (https://github.com/coala-analyzer/coala/issues/1866)\n-  Ignore statements without a stop statement are now accepted as well\n   (https://github.com/coala-analyzer/coala/issues/2003).\n\nFor bear writers:\n\n-  A tutorial for managing bear dependencies is available in our documentation\n   now.\n-  The Result object has a field ``additional_info`` which can be used to give\n   an elaborate description of the problem.\n-  A ``typechain()`` function is now available for easy conditional type\n   conversion. (https://github.com/coala-analyzer/coala/issues/1859)\n-  Bears have a ``name()`` shortcut now which provides the bear class name.\n-  A ``get_config_directory()`` function is available that returns the root\n   directory of the project guessed by coala or provided (overridden) by the\n   user.\n-  A new ``linter`` decorator makes it even easier to write new linter\n   wrappers. (https://github.com/coala-analyzer/coala/issues/1928)\n\nNotable internal/API changes:\n\n-  ``FunctionMetadata`` has a new ``merge`` function that can be used to merge\n   function signatures and documentation comments.\n\ncoala 0.5.0 - joey\n==================\n\n::\n\n     .o88Oo._\n    d8P         .ooOO8bo._\n    88                  '*Y8bo.\n    YA                      '*Y8b   __\n     YA                        68o68**8Oo.\n      \"8D                       *\"'    \"Y8o\n       Y8     'YB                       .8D\n       '8               d8'             8D\n        8       d8888b          d      AY\n        Y,     d888888         d'  _.oP\"\n        ,q.    Y8888P'        d8,\n        d \"q.  `Y88P'       d8\" b\n        Y,   Y           ,o8P  ,Y\n        8q.       oooo888P\"   .p8\n        8 \"qo._           _.op\" 8\n        8   '\"P8866ooo6688P\"'   8\n        8                       8\n        8                       8\n        8.                     .8\n        \"b                     d\"\n        'b                     d'\n         8                     8\n         q.                   .p\n          q.                 .p\n          \"qo._           _.op\"\n            '\"P8866ooo6688P\"'\n\nWith this release we declare coala proudly as beta. Most features are now\navailable and coala is ready for daily use.\n\nAll bears have been moved out of coala into the ``coala-bears`` package. If you\nwant to develop bears for coala, you can now install it without the bears just\nas before. If you want to use the coala official bears, make sure to install the\n``coala-bears`` package and if needed follow the instructions to install linters\nneeded by the bears for your language.\n\nAccording to ``git shortlog -s -n 5fad168..`` 56 people contributed to this\nrelease. We sadly cannot name all the new coalaians here but every single\none of them helped making coala as awesome and polished as it is today.\n\nNew features:\n\n-  ``--no-config`` allows to ignore existing coafiles in the current directory.\n   (https://github.com/coala-analyzer/coala/issues/1838)\n-  In-file ignore directives now support globs.\n   (https://github.com/coala-analyzer/coala/issues/1781)\n-  ``coala-json`` supports the ``--relpath`` argument so the JSON output can be\n   moved to other systems reasonably.\n   (https://github.com/coala-analyzer/coala/issues/1593)\n-  ``--bear-dirs`` are now searched recursively. They are also added to the\n   Python PATH so imports relative to a given bear directory work.\n   (https://github.com/coala-analyzer/coala/issues/1711,\n   https://github.com/coala-analyzer/coala/issues/1712)\n-  ``coala-format`` exposes the ``{severity_str}`` so you can get a human\n   readable severity in your self formatted result representation.\n   (https://github.com/coala-analyzer/coala/issues/1313)\n-  Spaces and tabs are highlighted in the CLI to make whitespace problems\n   obvious. (https://github.com/coala-analyzer/coala/issues/606)\n-  Actions that are not applicable multiple times are not shown after applying\n   them anymore. (https://github.com/coala-analyzer/coala/issues/1064)\n-  Documentation about how to add coala as a pre-commit hook has been added:\n   http://docs.coala.io/en/latest/Users/Git_Hooks.html\n-  Actions emit a success message now that is shown to the user and improves\n   usability and intuitivity of actions.\n-  A warning is emitted if a bear or file glob does not match any bears or\n   files.\n-  ``coala-json`` supports now a ``--text-logs`` argument so you can see your\n   logs in realtime, outside the JSON output if requested. You can output the\n   JSON output only into a file with the new ``-o`` argument.\n   (https://github.com/coala-analyzer/coala/issues/847,\n   https://github.com/coala-analyzer/coala/issues/846)\n-  ``coala-ci`` yields a beautiful output now, showing the issues\n   non-interactively. (https://github.com/coala-analyzer/coala/issues/1256)\n-  A ``coala-delete-orig`` script is now available to delete autogenerated\n   backup files which were created when a patch was applied. This is called\n   automatically on every coala run.\n   (https://github.com/coala-analyzer/coala/issues/1253)\n-  The ``--limit-files`` CLI argument was introduced which is especially useful\n   for writing performant editor plugins.\n\nExitcode changes:\n\n-  coala returns ``5`` if patches were applied successfully but no other results\n   were yielded, i.e. the code is correct after the execution of coala but was\n   not before.\n-  coala returns ``4`` now if executed with an unsupported python version.\n\nBugfixes:\n\n-  The ``appdirs`` module is now used for storing tagged data.\n   (https://github.com/coala-analyzer/coala/issues/1805)\n-  Package version conflicts are now handled with own error code ``13``.\n   (https://github.com/coala-analyzer/coala/issues/1748)\n-  Previously inputted values for actions are not stored any more if the action\n   fails.\n   (https://github.com/coala-analyzer/coala/issues/1825)\n-  coala doesn't crash any more on Windows when displaying a diff. Happened due\n   to the special chars used for whitespace-highlighting Windows terminals do\n   not support by default.\n   (https://github.com/coala-analyzer/coala/issues/1832)\n-  Escaped characters are written back to the ``.coafile`` correctly.\n   (https://github.com/coala-analyzer/coala/issues/921)\n-  ``coala-json`` doesn't show logs when invoked with ``-v`` or ``-h`` anymore\n   (https://github.com/coala-analyzer/coala/issues/1377)\n-  Keyboard interrupts are handled more cleanly.\n   (https://github.com/coala-analyzer/coala/issues/871)\n-  Tagging will only emit a warning if the data directory is not writable\n   instead of erroring out.\n   (https://github.com/coala-analyzer/coala/issues/1050)\n-  Unicode handling has been improved.\n   (https://github.com/coala-analyzer/coala/issues/1238)\n-  Cases where ``--find-config`` has not found the configuration correctly have\n   been resolved. (https://github.com/coala-analyzer/coala/issues/1246)\n-  Some cases, where result ignoring within files didn't work have been\n   resolved. (https://github.com/coala-analyzer/coala/issues/1232)\n\nFor bear writers:\n\n-  A new built-in type is available from ``Setting`` for using inside ``run()``\n   signature: ``url``.\n-  ``Lint`` based bears have a new argument which can be set to test whether a\n   command runs without errors. This can be used to check for example the\n   existence of a Java module.\n   (https://github.com/coala-analyzer/coala/issues/1803)\n-  The ``CorrectionBasedBear`` and ``Lint`` class have been merged into the new\n   and more powerful ``Lint`` class to make linter integration even easier. It\n   also supports you if you need to generate an actual configuration file for\n   your linter.\n-  ``LocalBearTestHelper`` as well as the ``verify_local_bear`` have been\n   revamped to make it even easier to test your bears and debug your tests.\n-  File dictionaries are now given as tuples and are thus not modifiable.\n-  A number of new tutorials about bear creation have been written.\n-  Bears can now be registered at coala and thus be distributed as own packages.\n\nNotable internal changes:\n\n-  API documentation is now available at\n   http://api.coala.io\n-  coala switched to PyTest. Our old own framework is no longer maintained.\n   (https://github.com/coala-analyzer/coala/issues/875)\n-  As always loads of refactorings to make the code more stable, readable and\n   beautiful!\n-  The main routines for the coala binaries have been refactored for less\n   redundancy. If you are using them to interface to coala directly, please\n   update your scripts accordingly.\n-  Loads of new integration tests have been written. We're keeping our 100% test\n   coverage promise even for all executables now.\n\ncoala 0.4.0 - eucalyptus\n========================\n\n::\n\n        88        .o88Oo._\n       8 |8      d8P         .ooOO8bo._\n      8  | 8     88                  '*Y8bo.\n      8\\ | /8    YA                      '*Y8b   __\n     8  \\|/ 8     YA                        68o68**8Oo.\n     8\\  Y  8      \"8D                       *\"'    \"Y8o\n     8 \\ | /8       Y8     'YB                       .8D\n    8   \\|/ /8     '8               d8'             8D\n    8\\   Y / 8       8       d8888b          d      AY\n    8 \\ / /  8       Y,     d888888         d'  _.oP\"\n    8  \\|/  8         q.    Y8888P'        d8\n    8   Y   8          \"q.  `Y88P'       d8\"\n     8  |  8             Y           ,o8P\n      8 | 8                    oooo888P\"\n\nNew features:\n\n-  Auto-apply can be enabled/disabled through the ``autoapply`` setting\n   in a coafile.\n-  Auto-applied actions print the actual file where something happened.\n-  A new bear was added, the GitCommitBear! It allows to check your\n   current commit message at HEAD from git!\n-  Filenames of results are now printed relatively to the execution\n   directory. (https://github.com/coala-analyzer/coala/issues/1124)\n\nBugfixes:\n\n-  coala-json outputted results for file-ranges that were excluded.\n   (https://github.com/coala-analyzer/coala/issues/1165)\n-  Auto-apply actions that failed are now marked as unprocessed so the\n   user can decide manually what he wants to do with them.\n   (https://github.com/coala-analyzer/coala/issues/1202)\n-  SpaceConsistencyBear: Fixed misleading message when newline at EOF is\n   missing. (https://github.com/coala-analyzer/coala/issues/1185)\n-  Results from global bears slipped through our processing facility.\n   Should not happen any more.\n\ncoala 0.3.0 - platypus\n======================\n\nWe are dropping Python 3.2 support (and so PyPy). Also we are removing\ntranslations, the default language is English.\n\nThis release contains these following feature changes:\n\n-  Auto-apply feature added! Results can directly be processed without\n   user interaction specifying the desired action!\n-  A missing coafile that is explicitly wanted through the ``--config``\n   flag throws an error instead of a warning. Only default coafile names\n   (ending with ``.coafile``) raise a warning.\n-  Various new bears integrating existing linter tools, e.g. for C/C++,\n   Python, Ruby, JSON and many more!\n-  Allow to ignore files inside the coafile.\n-  Results can now be stored and tagged with an identifier for accessing\n   them later.\n-  OpenEditorAction lets the user edit the real file instead of a\n   temporary one.\n-  All usable bears can now be shown with ``--show-all-bears``.\n-  Only ``#`` is supported for comments in the configuration file\n   syntax.\n-  Multiple actions can now be executed on the CLI.\n-  Patches can now be shown on the CLI.\n-  A ``coala-format`` binary was added that allows customized formatting\n   for results to ease integration in other systems.\n-  Printing utilities have moved into the PyPrint library.\n\nBear API changes:\n\n-  A bear can implement ``check_prerequisites`` to determine whether it\n   can execute in the current runtime.\n-  The PatchResult class was merged into the Result class.\n\nBear changes:\n\n-  SpaceConsistencyBear offers more verbose and precise information\n   about the problem.\n\ncoala 0.2.0 - wombat\n====================\n\n::\n\n     .o88Oo._\n    d8P         .ooOO8bo._\n    88                  '*Y8bo.\n                          '*Y8b   __\n     YA                        68o68**8Oo.     _.o888PY88o.o8\n      \"8D                       *\"'    \"Y8o.o88P*'         Y.\n       Y8     'YB                       .8D                 Y.\n       '8               d8'             8D             o     8\n        8       d8888b          d      AY   o               d'\n        Y,     d888888         d'  _.oP\"         d88b       8\n         q.    Y8888P'        d8       Y,       d8888       P\n          \"q.  `Y88P'       d8\"         q.      Y888P     .d'\n             Y           ,o8P            \"q      `\"'    ,oP\n                  oooo888P\"               `Y         .o8P\"\n                                              8ooo888P\"\n\nThis release features the following feature changes:\n\n-  ``--find-config`` flag: Searches for .coafile in all parent\n   directories.\n-  Add code clone detection bears and algorithms using CMCD approach.\n-  Console color gets properly disabled now for non-supporting platforms\n   (like Windows).\n-  coala results can be outputted to JSON format using the\n   ``coala-json`` command.\n-  Automatically add needed flags to open a new process for some\n   editors.\n-  Save backup before applying actions to files.\n-  Return nonzero when erroring or yielding results.\n-  Write newlines before beginning new sections in coafiles when\n   appropriate.\n-  The default\\_coafile can now be used for arbitrary system-wide\n   settings.\n-  coala can now be configured user-wide with a ~/.coarc configuration\n   file.\n-  Manually written documentation is now hosted at http://coala.rtfd.org/.\n-  Changed logging API in Bears (now: debug/warn/err).\n-  clang python bindings were added to the bearlib.\n-  Exitcodes were organized and documented.\n   (http://docs.coala.io/en/latest/Users/Exit_Codes.html)\n-  Handling of EOF/Keyboard Interrupt was improved.\n-  Console output is now colored.\n-  Bears can now easily convert settings to typed lists or dicts.\n-  Bears have no setUp/tearDown mechanism anymore.\n-  Colons cannot be used for key value separation in configuration files\n   anymore as that clashes with the new dictionary syntax. Use ``=``\n   instead.\n-  The ``--job-count`` argument was removed for technical reasons. It\n   will be re-added in the near future.\n-  A ``--show-bears`` parameter was added to get meta information of\n   bears.\n-  The coala versioning scheme was changed to comply PEP440.\n-  ``coala --version`` now gives the version number. A released ``dev``\n   version has the build date appended, 0 for local versions installed\n   from source.\n-  A ``coala-dbus`` binary will now be installed that spawns up a dbus\n   API for controlling coala. (Linux only.)\n-  The StringProcessing library is there to help bear writers deal with\n   regexes and similar things.\n-  A new glob syntax was introduced and documented.\n   (http://docs.coala.io/en/latest/Users/Glob_Patterns.html)\n-  The ``--apply-changes`` argument was removed as its concept does not\n   fit anymore.\n-  Bears can now return any iterable. This makes it possible to\n   ``yield`` results.\n\nNew bears:\n\n-  ClangCloneDetectionBear\n-  LanguageToolBear\n-  PyLintBear\n\nInfrastructural changes:\n\n-  Tests are executed with multiple processes.\n-  Branch coverage raised to glorious 100%.\n-  We switched from Travis CI to CircleCI as Linux CI.\n-  AppVeyor (Windows CI) was added.\n-  Travis CI was added for Mac OS X.\n-  Development releases are automatically done from master and available\n   via ``pip3 install coala --pre``.\n-  Rultor is now used exclusively to push on master. Manual pushes to\n   master are no longer allowed to avoid human errors. Rultor deploys\n   translation strings to Zanata and the PyPI package before pushing the\n   fast-forwarded master.\n\nInternal code changes:\n\n-  Uncountable bugfixes.\n-  Uncountable refactorings touching the core of coala. Code has never\n   been more beautiful.\n\nWe are very happy that 7 people contributed to this release, namely\nAbdeali Kothari, Mischa Krüger, Udayan Tandon, Fabian Neuschmidt, Ahmed\nKamal and Shivani Poddar (sorted by number of commits). Many thanks go\nto all of those!\n\ncoala's code base has grown sanely to now over 12000 NCLOC with almost\nhalf of them being tests.\n\nWe are happy to announce that Mischa Krüger is joining the maintainers\nteam of coala.\n\nFurthermore we are happy to announce basic Windows and Mac OS X support.\nThis would not have been possible without Mischa and Abdeali. coala is\nfully tested against Python 3.3 and 3.4 on Windows and 3.2, 3.3, 3.4 and\nPypy3 on Mac while not all builtin bears are tested. coala is also\ntested against Pypy3 and Python 3.5 beta (in addition to 3.3 and 3.4) on\nLinux.\n\ncoala 0.1.1 alpha\n=================\n\nThis patch release fixes a major usability issue where data entered into\nthe editor may be lost.\n\nFor more info, see release 0.1.0.\n\ncoala 0.1.0 alpha\n=================\n\nAttention: This release is old and experimental.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\ncoala 0.1 provides basic functionality. It is not feature complete but\nalready useful according to some people.\n\nFor information about the purpose of coala please look at the README\nprovided with each source distribution.\n\nNote that this is a prerelease, thus this release will be supported with\nonly important bugfixes for limited time (at least until 0.2.0 is\nreleased). Linux is the only supported platform.\n\nDocumentation for getting started with coala is provided here:\nhttps://github.com/coala-analyzer/coala/blob/v0.1.0-alpha/TUTORIAL.md\n\nIf you want to write static code analysis routines, please check out\nthis guide:\nhttps://github.com/coala-analyzer/coala/blob/v0.1.0-alpha/doc/getting\\_involved/WRITING\\_NATIVE\\_BEARS.md\n\nWe love bugs - if you find some, be sure to share them with us:\nhttps://github.com/coala-analyzer/coala/issues\n"
        },
        {
          "name": "coala",
          "type": "blob",
          "size": 0.9912109375,
          "content": "#!/usr/bin/env python3\n\n# This program is free software: you can redistribute it and/or modify it\n# under the terms of the GNU Affero General Public License as published by the\n# Free Software Foundation, either version 3 of the License, or (at your\n# option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License\n# for more details.\n#\n# You should have received a copy of the GNU Affero General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n# Start ignoring PEP8Bear*, PyImportSortBear and PycodestyleBear*, we need to\n# assert the version before importing things that could cause an ImportError\nimport sys\n\nfrom coalib import assert_supported_version\n\nassert_supported_version()\n\nfrom coalib.coala import main\n# Stop ignoring\n\nif __name__ == '__main__':\n    sys.exit(main())\n"
        },
        {
          "name": "coalib",
          "type": "tree",
          "content": null
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.3662109375,
          "content": "import os\nimport webbrowser\n\n\ndef pytest_unconfigure(config):\n    htmlcov_path = os.path.join('htmlcov', 'index.html')\n    if (hasattr(config.option, 'cov_report') and\n            'html' in config.option.cov_report and\n            os.path.isfile(htmlcov_path)):\n        try:\n            webbrowser.open_new_tab(htmlcov_path)\n        except webbrowser.Error:\n            pass\n"
        },
        {
          "name": "docs-requirements.txt",
          "type": "blob",
          "size": 0.1455078125,
          "content": "# all requirements are needed so that autodoc can find them\n-r requirements.txt\n-r test-requirements.txt\nsphinx>=1.6.2,<1.6.6\nsphinx-argparse~=0.2.1\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.138671875,
          "content": "[build]\n  publish = \"docs/_build/html\"\n  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.0654296875,
          "content": "{\n  \"name\": \"coala\",\n  \"dependencies\": {\n    \"csslint\": \"~1\"\n  }\n}\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.3056640625,
          "content": "appdirs~=1.4\ncached-property~=1.4.3\ncli-helpers~=1.0.2\ngit+https://gitlab.com/coala/coala-utils#egg=coala-utils-0.7.0\ncolorlog>=2.7,<4.0\ngit+https://gitlab.com/coala/package_manager#egg=dependency-management-0.5.0.dev0\npackaging>=16.8\nPygments~=2.1\nPyPrint~=0.2.6\nrequests~=2.12\nsetuptools>=21.2.2\nunidiff~=0.5.2\n"
        },
        {
          "name": "runtime.txt",
          "type": "blob",
          "size": 0.00390625,
          "content": "3.6\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.3955078125,
          "content": "[bdist_wheel]\npython-tag = py34.py35.py36\n\n[build_manpage]\noutput = coala.1\nparser = coalib.parsing.DefaultArgParser:default_arg_parser\n\n[tool:pytest]\nminversion = 3.6.4\n\ntestpaths =\n  coalib\n  tests\n\npython_files = *Test.py\npython_classes = *Test\n\naddopts =\n  -r a\n  -p no:logging\n  --color=yes\n  --doctest-glob=*.rst\n  --doctest-modules\n  --doctest-ignore-import-errors\n  --error-for-skips\n  --cov\n  --instafail\n  --profile\n  --reorder 'requirements.txt' 'test-requirements.txt' '*'\n  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py\n\ndoctest_optionflags =\n  ELLIPSIS\n  IGNORE_EXCEPTION_DETAIL\n\nenv =\n  PYTEST=1\n\nreqsfilenamepatterns =\n  requirements.txt\n  test-requirements.txt\n\nreqsignorevcs = True\n\ntimeout = 60\n\n[coverage:coverage_env_plugin]\nmarkers = True\n\n[coverage:run]\nbranch = True\ncover_pylib = False\n\nplugins =\n  coverage_env_plugin\n  coverage_config_reload_plugin\n\nsource =\n  coalib\n\nomit =\n  tests/*\n  .misc/store_env_in_registry.py\n  setup.py\n  coalib/misc/Asyncio.py\n\n[coverage:report]\nfail_under = 100\nshow_missing = True\nskip_covered = False\nsort = Miss\nexclude_lines =\n  pragma: no ?cover\n  pragma ${PLATFORM_SYSTEM}: no cover\n  pragma ${OS_NAME}: no cover\n  pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n  sys.exit\\(main\\(\\)\\)\n\npartial_branches =\n  pragma: no ?branch\n  pragma.* ${PLATFORM_SYSTEM}: no branch\n  pragma.* ${OS_NAME}: no branch\n[coverage:force_end_of_section]\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 13.857421875,
          "content": "#!/usr/bin/env python3\n\nimport datetime\nimport locale\nimport os\nimport platform\nimport sys\nfrom os import getenv\nfrom subprocess import call\n\nimport pip\nimport setuptools.command.build_py\nfrom setuptools import find_packages, setup\nfrom setuptools.command.test import test as TestCommand\n\nfrom coalib import assert_supported_version, get_version\nfrom coalib.misc.BuildManPage import BuildManPage\n\ntry:\n    lc = locale.getlocale()\n    pf = platform.system()\n    if pf != 'Windows' and lc == (None, None):\n        locale.setlocale(locale.LC_ALL, 'C.UTF-8')\nexcept (ValueError, UnicodeError, locale.Error):\n    locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')\n\nVERSION = '0.12.0.dev99999999999999'\nDESCRIPTION = (\n    'Linting and Fixing Code for All Languages'\n)\nDEPENDENCY_LINKS = []\n\nKEYWORDS = [\n    'code-analysis',\n    'lint',\n]\n\n\n# from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n\nCLASSIFIERS = [\n    'Development Status :: 4 - Beta',\n\n    'Environment :: Console',\n    'Environment :: MacOS X',\n    'Environment :: Win32 (MS Windows)',\n\n    'Intended Audience :: Science/Research',\n    'Intended Audience :: Developers',\n\n    'License :: OSI Approved :: GNU Affero General Public License '\n    'v3 or later (AGPLv3+)',\n    'Operating System :: OS Independent',\n\n    'Programming Language :: Python :: Implementation :: CPython',\n    'Programming Language :: Python :: 3.5',\n    'Programming Language :: Python :: 3.6',\n    'Programming Language :: Python :: 3 :: Only',\n\n    'Topic :: Scientific/Engineering :: Information Analysis',\n    'Topic :: Software Development :: Quality Assurance',\n    'Topic :: Text Processing :: Linguistic',\n\n]\n\nSETUP_COMMANDS = {}\n\nassert_supported_version()\n\n\nclass BuildPyCommand(setuptools.command.build_py.build_py):\n\n    def run(self):\n        if platform.system() != 'Windows':\n            self.run_command('build_manpage')\n        setuptools.command.build_py.build_py.run(self)\n\n\ndef set_python_path(path):\n    if 'PYTHONPATH' in os.environ:\n        user_paths = os.environ['PYTHONPATH'].split(os.pathsep)\n        user_paths.insert(0, path)\n        os.environ['PYTHONPATH'] = os.pathsep.join(user_paths)\n    else:\n        os.environ['PYTHONPATH'] = path\n\n\nclass PyTestCommand(TestCommand):\n    \"\"\"\n    From https://pytest.org/latest/goodpractices.html\n    \"\"\"\n    user_options = [('pytest-args=', 'a', 'Arguments to pass to py.test')]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = []\n\n    def finalize_options(self):\n        TestCommand.finalize_options(self)\n        self.test_args = []\n        self.test_suite = True\n\n    def run_tests(self):\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n        errno = pytest.main(self.pytest_args)\n        sys.exit(errno)\n\n\nSETUP_COMMANDS['test'] = PyTestCommand\n\n\nclass BuildDocsCommand(setuptools.command.build_py.build_py):\n\n    def initialize_options(self):\n        setup_dir = os.path.join(os.getcwd(), __dir__)\n        docs_dir = os.path.join(setup_dir, 'docs')\n        source_docs_dir = os.path.join(docs_dir,\n                                       './')\n\n        set_python_path(setup_dir)\n\n        self.apidoc_commands = list()\n\n        self.apidoc_commands.append((\n            'sphinx-apidoc', '-f', '-o', source_docs_dir,\n            '--no-toc',\n            os.path.join(setup_dir, 'coalib')\n        ))\n\n        self.make_command = (\n            'make', '-C',\n            docs_dir,\n            'html', 'SPHINXOPTS=-W',\n        )\n\n        # build_lib & optimize is set to these as a\n        # work around for \"AttributeError\"\n        self.build_lib = ''\n        self.optimize = 2\n\n    def run(self):\n        for command in self.apidoc_commands:\n            err_no = call(command)\n            if err_no:\n                sys.exit(err_no)\n        err_no = call(self.make_command)\n        sys.exit(err_no)\n\n\nSETUP_COMMANDS['docs'] = BuildDocsCommand\n\n# Generate API documentation only if we are running on readthedocs.io\non_rtd = getenv('READTHEDOCS', None) is not None\nif on_rtd:\n    call(BuildDocsCommand.apidoc_command)\n    if 'dev' in '0.12.0.dev99999999999999':\n        current_version = datetime.datetime.now().strftime('%Y%m%d%H%M%S')\n        call(['python3', '.misc/adjust_version_number.py', 'coalib/VERSION',\n              '-b {}'.format(current_version)])\n        VERSION = get_version()\n\n\n__dir__ = os.path.dirname(__file__)\n\n\nfrom distutils.version import LooseVersion  # noqa (late-import)\n\n\nclass PEP440Version(LooseVersion):\n    \"\"\"\n    Basic PEP440 version with a few features.\n\n    Uses the same version semantics as LooseVersion,\n    with the addition that a ``v`` prefix is allowed\n    in the version as required by PEP 440.\n\n    vstring may be a list, tuple or string.\n\n    v_prefix indicates whether output of the version\n    should include a v prefix.\n\n    v_prefix is auto-detected by default.\n    Set to False to remove if present, or True to add if missing.\n    \"\"\"\n\n    def __init__(self, vstring=None, v_prefix=None):\n        self._v_prefix = v_prefix\n\n        if isinstance(vstring, (list, tuple)):\n            type_ = type(vstring)\n            vstring = '.'.join(str(i) for i in vstring)\n        else:\n            type_ = list\n\n        vstring = vstring.strip()\n\n        if vstring.startswith('v'):\n            vstring = vstring[1:]\n            if vstring.startswith('!'):\n                raise ValueError('Invalid use of epoch')\n            if v_prefix is not False:\n                self._v_prefix = True\n\n        # Can not use super(..) on Python 2.7\n        LooseVersion.__init__(self, vstring)\n        if self._v_prefix:\n            self.vstring = 'v' + self.vstring\n        if len(self.version) > 1 and self.version[1] == '!':\n            self._epoch = self.version[0]\n            if not isinstance(self._epoch, int) or len(self.version) < 3:\n                raise ValueError('Invalid use of epoch')\n\n        # Normalise to lower case\n        self.version = [\n            x if isinstance(x, int) else x.lower() for x in self.version\n            if x not in ('-', '_')]\n\n        if self.version[-1] != '*' and not isinstance(self.version[-1], int):\n            self.version += (0, )\n\n        if type_ is tuple:\n            self.version = tuple(self.version)\n\n        self._final = None\n        self._previous = None\n\n    def __repr__(self):\n        return \"%s('%s')\" % (self.__class__.__name__, str(self))\n\n    @property\n    def is_dev(self):\n        return any(part == 'dev' for part in self.version)\n\n    @property\n    def has_epoch(self):\n        return any(part == '!' for part in self.version)\n\n    @property\n    def final(self):\n        \"\"\"\n        Provide only the final component of the version.\n\n        A new instance is return if this instance is not final.\n        \"\"\"\n        if self.has_epoch:\n            raise NotImplementedError\n\n        if self._final is not None:\n            return self._final\n\n        for i, part in enumerate(self.version):\n            if not isinstance(part, int):\n                final = self.version[:i]\n                break\n        else:\n            self._final = self\n            return self\n\n        self._final = PEP440Version(final, self._v_prefix)\n\n        return self._final\n\n    @property\n    def is_final(self):\n        return self.final == self\n\n    @property\n    def is_zero(self):\n        return all(part == 0 for part in self.version)\n\n    _zero_message = 'version prior to 0.0 can not exist'\n\n    def _estimate_previous(self):\n        \"\"\"\n        Return a new version calculated to be the previous version.\n\n        Currently only handles when the current instance is a final version.\n\n        To really get the previous for 1.0.0, we need to consult PyPi,\n        git tags, or some other source of all released versions,\n        to find the highest patch release in the prior minor release, or\n        highest minor releases if there were no patch releases in the\n        last minor release, etc.\n\n        As a result, currently this assumes that release x.(x-1).0 exists\n        in that instance.\n        \"\"\"\n        if self._previous:\n            return self._previous\n\n        assert self.is_final, '%r is not final' % self\n\n        if self.is_zero:\n            raise ValueError(self._zero_message)\n\n        previous = self._decrement(self.version)\n        self._previous = PEP440Version(previous, self._v_prefix)\n        return self._previous\n\n    @staticmethod\n    def _decrement(version):\n        pos = len(version) - 1\n\n        # Look for non-zero int part\n        while pos != 0 and not (isinstance(version[pos], int) and version[pos]):\n            pos -= 1\n\n        previous = []\n        if pos:\n            previous = version[:pos]\n\n        previous += (version[pos] - 1, )\n\n        if len(previous) == len(version):\n            return previous\n\n        remaining = version[pos + 1:-1]\n\n        previous += tuple(\n            0 if isinstance(i, int) else i for i in remaining)\n\n        previous += ('*', )\n\n        return previous\n\n\n# This is an unfortunately needed comment\n\ndef egg_name_to_requirement(name):\n    name = name.strip()\n    parts = name.split('-')\n\n    # The first part may be v or v0, which would be considered a version\n    # if processed in the following loop.\n    name_parts = [parts[0]]\n    # Pre-releases may contain a '-' and be alpha only, so we must\n    # parse from the second part to find the first version-like part.\n    for part in parts[1:]:\n        version = PEP440Version(part)\n        if isinstance(version.version[0], int):\n            break\n        name_parts.append(part)\n\n    version_parts = parts[len(name_parts):]\n\n    if not version_parts:\n        return name\n\n    name = '-'.join(name_parts)\n\n    version = PEP440Version('-'.join(version_parts))\n\n    # Assume that alpha, beta, pre, post & final releases\n    # are in PyPi so setuptools can find it.\n    if not version.is_dev:\n        return name + '==' + str(version)\n\n    # setuptools fails if a version is given with any specifier such as\n    # `==`, `=~`, `>`, if the version is not in PyPi.\n\n    # For development releases, which will not usually be PyPi,\n    # setuptools will typically fail.\n\n    # So we estimate a previous release that should exist in PyPi,\n    # by decrementing the lowest final version part, and use version\n    # specifier `>` so that the installed package from VCS will have a\n    # version acceptable to the requirement.\n\n    # With major and minor releases, the previous version must be guessed.\n    # If the version was `2.1.0`, the previous_version will be literally\n    # `2.0.*` as it assumes that a prior minor release occurred and used\n    # the same versioning convention.\n    previous_version = version.final._estimate_previous()\n\n    if previous_version.is_zero:\n        raise ValueError(\n            'Version %s could not be decremented' % version)\n\n    return name + '>' + str(previous_version)\n\n\ndef read_requirements(filename):\n    \"\"\"\n    Parse a requirements file.\n\n    Accepts vcs+ links, and places the URL into\n    `DEPENDENCY_LINKS`.\n\n    :return: list of str for each package\n    \"\"\"\n    data = []\n    filename = os.path.join(__dir__, filename)\n    with open(filename) as requirements:\n        required = requirements.read().splitlines()\n        for line in required:\n            if not line or line.startswith('#'):\n                continue\n\n            if '+' in line[:4]:\n                repo_link, egg_name = line.split('#egg=')\n                if not egg_name:\n                    raise ValueError('Unknown requirement: {0}'\n                                     .format(line))\n\n                DEPENDENCY_LINKS.append(line)\n\n                line = egg_name_to_requirement(egg_name)\n\n            data.append(line)\n\n    return data\n\n\nrequired = read_requirements('requirements.txt')\n\ntest_required = read_requirements('test-requirements.txt')\n\nfilename = os.path.join(__dir__, 'README.rst')\nwith open(filename) as readme:\n    long_description = readme.read()\n\nextras_require = None\nEXTRAS_REQUIRE = {}\ndata_files = None\nif __name__ == '__main__':\n    if platform.system() != 'Windows':\n        data_files = [('man/man1', ['coala.1'])]\n    else:\n        data_files = None\n\nif extras_require:\n    EXTRAS_REQUIRE = extras_require\nSETUP_COMMANDS.update({\n                    'build_manpage': BuildManPage,\n                    'build_py': BuildPyCommand,\n})\n\nif __name__ == '__main__':\n    pip_version = LooseVersion(pip.__version__)\n    if pip_version < LooseVersion('9.0.3'):\n        raise RuntimeError('Version of pip is less than 9.0.3. '\n                           'Consider upgrading pip to pip~=9.0.3')\n    setup(name='coala',\n          version=VERSION,\n          description=DESCRIPTION,\n          author='The coala developers',\n          author_email='coala.analyzer@gmail.com',\n          maintainer='Lasse Schuirmann, Fabian Neuschmidt, Mischa Kr\\xfcger'\n                     if not on_rtd else 'L.S., F.N., M.K.',\n          maintainer_email=('lasse.schuirmann@gmail.com, '\n                            'fabian@neuschmidt.de, '\n                            'makman@alice.de'),\n          url='http://coala.io/',\n          platforms='any',\n          packages=find_packages(exclude=('build.*', 'tests', 'tests.*')),\n          install_requires=required,\n          extras_require=EXTRAS_REQUIRE,\n          tests_require=test_required,\n          dependency_links=DEPENDENCY_LINKS,\n          package_data={'coalib': ['system_coafile', 'VERSION',\n                                   'bearlib/languages/documentation/*.coalang']\n                        },\n          license='AGPL-3.0',\n          keywords=KEYWORDS,\n          data_files=data_files,\n          long_description=long_description,\n          entry_points={\n              'console_scripts': [\n                  'coala = coalib.coala:main',\n                  'coala-ci = coalib.coala_ci:main',\n                  'coala-json = coalib.coala_json:main',\n                  'coala-format = coalib.coala_format:main',\n                  'coala-delete-orig = coalib.coala_delete_orig:main',\n              ],\n          },\n          classifiers=CLASSIFIERS,\n          cmdclass=SETUP_COMMANDS,\n          )\n"
        },
        {
          "name": "test-requirements.txt",
          "type": "blob",
          "size": 0.7421875,
          "content": "# Radon requires colorama<0.4, but many other tools listed here will\n# install a later version, so when pip tries to install radon it will\n# ignore the dependency version difference and only fail when the\n# bear is loaded.\ncolorama<0.4\nargcomplete~=1.8\ncoverage>=5.2.1\ncoverage-env-plugin~=0.1\ncoverage-config-reload-plugin~=0.2\ncodecov~=2.0.5\nfreezegun~=0.3.9\nmoban~=0.5.0 ; python_version > '3.0'\npytest~=3.6.4\npytest-cov>=2.4,<2.6\npytest-env~=0.6.0\npytest-error-for-skips~=1.0\npytest-instafail~=0.3.0\npytest-mock~=1.1\npytest-profiling~=1.7.0\npytest-reorder~=0.1.0\ngit+https://github.com/jayvdb/pytest-reqs@coala#egg=pytest-reqs\npytest-timeout~=1.3.0\npytest-travis-fold~=1.3.0\nrequests-mock~=1.2\nipdb~=0.11\npip<10\nsix>=1.11.0\nwheel~=0.29\ntestfixtures~=5.3.1\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}