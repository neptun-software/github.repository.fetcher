{
  "metadata": {
    "timestamp": 1736559983868,
    "page": 776,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Kozea/Radicale",
      "stars": 3454,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2119140625,
          "content": "*~\n.*.swp\n*.pyc\n__pycache__\n\n/MANIFEST\n/build\n/dist\n/*.egg-info\n/_site\n\ncoverage.xml\n.pytest_cache\n.cache\n.coverage\n.coverage.*\n.eggs\n.mypy_cache\n.project\n.pydevproject\n.settings\n.tox\n.vscode\n.sass-cache\nGemfile.lock\n"
        },
        {
          "name": ".mdl.style",
          "type": "blob",
          "size": 0.08203125,
          "content": "all\nrule 'MD026', :punctuation => '.,;:!'\nexclude_rule 'MD001'\nexclude_rule 'MD024'\n"
        },
        {
          "name": ".mdlrc",
          "type": "blob",
          "size": 0.052734375,
          "content": "style File.join(File.dirname(__FILE__), '.mdl.style')\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 23.962890625,
          "content": "# Changelog\n\n## 3.4.0\n* Add: option [auth] cache_logins/cache_successful_logins_expiry/cache_failed_logins for caching logins\n* Improve: [auth] log used hash method and result on debug for htpasswd authentication\n* Improve: [auth] htpasswd file now read and verified on start\n* Add: option [auth] htpasswd_cache to automatic re-read triggered on change (mtime or size) instead reading on each request\n* Improve: [auth] htpasswd: module 'bcrypt' is no longer mandatory in case digest method not used in file\n* Improve: [auth] successful/failed login logs now type and whether result was taken from cache\n* Improve: [auth] constant execution time for failed logins independent of external backend or by htpasswd used digest method\n* Drop: support for Python 3.8\n* Add: option [auth] ldap_user_attribute\n* Add: option [auth] ldap_groups_attribute as a more flexible replacement of removed ldap_load_groups\n\n## 3.3.3\n* Add: display mtime_ns precision of storage folder with condition warning if too less\n* Improve: disable fsync during storage verification\n* Improve: suppress duplicate log lines on startup\n* Contrib: logwatch config and script\n* Improve: log precondition result on PUT request\n\n## 3.3.2\n* Fix: debug logging in rights/from_file\n* Add: option [storage] use_cache_subfolder_for_item for storing 'item' cache outside collection-root\n* Fix: ignore empty RRULESET in item\n* Add: option [storage] filesystem_cache_folder for defining location of cache outside collection-root\n* Add: option [storage] use_cache_subfolder_for_history for storing 'history' cache outside collection-root\n* Add: option [storage] use_cache_subfolder_for_synctoken for storing 'sync-token' cache outside collection-root\n* Add: option [storage] folder_umask for configuration of umask (overwrite system-default)\n* Fix: also remove 'item' from cache on delete\n* Improve: avoid automatically invalid cache on upgrade in case no change on cache structure\n* Improve: log important module versions on startup\n* Improve: auth.ldap config shown on startup, terminate in case no password is supplied for bind user\n* Add: option [auth] uc_username for uppercase conversion (similar to existing lc_username)\n* Add: option [logging] storage_cache_action_on_debug for conditional logging\n* Fix: set PRODID on collection upload (instead of vobject is inserting default one)\n* Add: option [storage] use_mtime_and_size_for_item_cache for changing cache lookup from SHA256 to mtime_ns + size\n* Fix: buggy cache file content creation on collection upload\n\n## 3.3.1\n\n* Add: option [auth] type=dovecot\n* Enhancement: log content in case of multiple main components error\n* Fix: expand does not take timezones into account \n* Fix: expand does not support overridden recurring events\n* Fix: expand does not honor start and end times\n* Add: option [server] protocol + ciphersuite for optional restrictions on SSL socket\n* Enhancement: [storage] hook documentation, logging, error behavior (no longer throwing an exception)\n\n## 3.3.0\n\n* Adjustment: option [auth] htpasswd_encryption change default from \"md5\" to \"autodetect\"\n* Add: option [auth] type=ldap with (group) rights management via LDAP/LDAPS\n* Enhancement: permit_delete_collection can be now controlled also per collection by rights 'D' or 'd'\n* Add: option [rights] permit_overwrite_collection (default=True) which can be also controlled per collection by rights 'O' or 'o'\n* Fix: only expand VEVENT on REPORT request containing 'expand'\n* Adjustment: switch from setup.py to pyproject.toml (but keep files for legacy packaging)\n* Adjustment: 'rights' file is now read only during startup\n* Cleanup: Python 3.7 leftovers\n\n## 3.2.3\n* Add: support for Python 3.13\n* Fix: Using icalendar's tzinfo on created datetime to fix issue with icalendar\n* Fix: typos in code\n* Enhancement: Added free-busy report\n* Enhancement: Added 'max_freebusy_occurrences` setting to avoid potential DOS on reports\n* Enhancement: remove unexpected control codes from uploaded items\n* Enhancement: add 'strip_domain' setting for username handling\n* Enhancement: add option to toggle debug log of rights rule with doesn't match\n* Drop: remove unused requirement \"typeguard\"\n* Improve: Refactored some date parsing code\n\n## 3.2.2\n* Enhancement: add support for auth.type=denyall (will be default for security reasons in upcoming releases)\n* Enhancement: display warning in case only default config is active\n* Enhancement: display warning in case no user authentication is active\n* Enhancement: add option to skip broken item to avoid triggering exception (default: enabled)\n* Enhancement: add support for predefined collections for new users\n* Enhancement: add options to enable several parts in debug log like backtrace, request_header, request_content, response_content (default: disabled)\n* Enhancement: rights/from_file: display resulting permission of a match in debug log\n* Enhancement: add Apache config file example (see contrib directory)\n* Fix: \"verify-collection\" skips non-collection directories, logging improved\n\n## 3.2.1\n\n* Enhancement: add option for logging bad PUT request content\n* Enhancement: extend logging with step where bad PUT request failed\n* Fix: support for recurrence \"full day\"\n* Fix: list of web_files related to HTML pages\n* Test: update/adjustments for workflows (pytest>=7, typeguard<4.3)\n\n## 3.2.0\n\n* Enhancement: add hook support for event changes+deletion hooks (initial support: \"rabbitmq\")\n* Dependency: pika >= 1.1.0\n* Enhancement: add support for webcal subscriptions\n* Enhancement: major update of WebUI (design+features)\n* Adjust: change default loglevel to \"info\"\n* Enhancement: support \"expand-property\" on REPORT request\n* Drop: support for Python 3.7 (EOSL, can't be tested anymore)\n* Fix: allow quoted-printable encoding for vObjects\n\n## 3.1.9\n\n* Add: support for Python 3.11 + 3.12\n* Drop: support for Python 3.6\n* Fix: MOVE in case listen on non-standard ports or behind reverse proxy\n* Fix: stricter requirements of Python 3.11\n* Fix: HTML pages\n* Fix: Main Component is missing when only recurrence id exists\n* Fix: passlib don't support bcrypt>=4.1\n* Fix: web login now proper encodes passwords containing %XX (hexdigits)\n* Enhancement: user-selectable log formats\n* Enhancement: autodetect logging to systemd journal\n* Enhancement: test code\n* Enhancement: option for global permit to delete collection\n* Enhancement: auth type 'htpasswd' supports now 'htpasswd_encryption' sha256/sha512 and \"autodetect\" for smooth transition\n* Improve: Dockerfiles\n* Improve: server socket listen code + address format in log\n* Update: documentations + examples\n* Dependency: limit typegard version < 3\n* General: code cosmetics\n\n## 3.1.8\n\n* Fix setuptools requirement if installing wheel\n* Tests: Switch from `python setup.py test` to `tox`\n* Small changes to build system configuration and tests\n\n## 3.1.7\n\n* Fix random href fallback\n\n## 3.1.6\n\n* Ignore `Not a directory` error for optional config paths\n* Fix upload of whole address book/calendar with UIDs that collide on\n  case-insensitive filesystem\n* Remove runtime dependency on setuptools for Python>=3.9\n* Windows: Block ADS paths\n\n## 3.1.5\n\n* Ignore configuration file if access is denied\n* Use F_FULLFSYNC with PyPy on MacOS\n* Fallback if F_FULLFSYNC is not supported by the filesystem\n\n## 3.1.4\n\n* Fallback if RENAME_EXCHANGE is not supported by the filesystem\n* Assume POSIX compatibility if `sys.platform` is not `win32`\n\n## 3.1.3\n\n* Redirect '…/.well-known/caldav' and '…/.well-known/carddav' to base prefix\n* Warning instead of error when base prefix ends with '/'\n\n## 3.1.2\n\n* Verify that base prefix starts with '/' but doesn't end with '/'\n* Improve base prefix log message\n* Never send body for HEAD requests (again)\n\n## 3.1.1\n\n* Workaround for contact photo bug in InfCloud\n* Redirect GET and HEAD requests under `/.web` to sanitized path\n* Set `Content-Length` header for HEAD requests\n* Never send body for HEAD requests\n* Improve error messages for `from_file` rights backend\n* Don't sanitize WSGI script name\n\n## 3.1.0\n\n* Single `<D:propstat>` element in PROPPATCH response\n* Allow multiple `<D:set>` and `<D:remove>` elements\n* Improve log messages\n* Fix date filter\n* Improve sanitization of collection properties\n* Cancel mkcalendar request on error\n* Use **renameat2** on Linux for atomic overwriting of collections\n* Command Line Parser\n  * Disallow abbreviated arguments\n  * Support backend specific options and HTTP headers\n  * Optional argument for boolean options\n  * Load no config file for `--config` without argument\n* Allow float for server->timeout setting\n* Fix **is-not-defined** filter in **addressbook-query** report\n* Add python type hints\n* Add **multifilesystem_nolock** storage\n* Add support for Python 3.9 and 3.10\n* Drop support for Python 3.5\n* Fix compatibility with Evolution (Exceptions from recurrence rules)\n\n## 3.0.6\n\n* Allow web plugins to handle POST requests\n\n## 3.0.5\n\n* Start storage hook in own process group\n* Kill storage hook on error or exit\n* Try to kill child processes of storage hook\n* Internal Server: Exit immediately when signal is received\n  (do not wait for clients or storage hook to finish)\n\n## 3.0.4\n\n* Fix internal server on FreeBSD\n\n## 3.0.3\n\n* Fix internal server on OpenBSD\n\n## 3.0.2\n\n* Use 403 response for supported-report and valid-sync-token errors\n* Internal server: Handle missing IPv6 support\n\n## 3.0.1\n\n* Fix XML error messages\n\n## 3.0.0\n\nThis release is incompatible with previous releases.\nSee the upgrade checklist below.\n\n* Parallel write requests\n* Support PyPy\n* Protect against XML denial-of-service attacks\n* Check for duplicated UIDs in calendars/address books\n* Only add missing UIDs for uploaded whole calendars/address books\n* Switch from md5 to sha256 for UIDs and tokens\n* Code cleanup:\n  * All plugin interfaces were simplified and are incompatible with\n    old plugins\n  * Major refactor\n  * Never sanitize paths multiple times (check if they are sanitized)\n* Config\n  * Multiple configuration files separated by `:` (resp. `;`\n    on Windows)\n  * Optional configuration files by prepending file path with `?`\n  * Check validity of every configuration file and command line\n    arguments separately\n    * Report the source of invalid configuration parameters in\n      error messages\n  * Code cleanup:\n    * Store configuration as parsed values\n    * Use Schema that describes configuration and allow plugins to apply\n      their own schemas\n    * Mark internal settings with `_`\n* Internal server\n  * Bind to IPv4 and IPv6 address, when both are available for hostname\n  * Set default address to `localhost:5232`\n  * Remove settings for SSL ciphers and protocol versions (enforce safe\n    defaults instead)\n  * Remove settings for file locking because they are of little use\n  * Remove daemonization (should be handled by service managers)\n* Logging\n  * Replace complex Python logger configuration with simple\n    `logging.level` setting\n  * Write PID and `threadName` instead of cryptic id's in log messages\n  * Use `wsgi.errors` for logging (as required by the WSGI spec)\n  * Code cleanup:\n    * Don't pass logger object around (use `logging.getLogger()`\n      instead)\n* Auth\n  * Use `md5` as default for `htpasswd_encryption` setting\n  * Move setting `realm` from section `server` to `auth`\n* Rights\n  * Use permissions `RW` for non-leaf collections and `rw` for\n    address books/calendars\n  * New permission `i` that only allows access with HTTP method GET\n    (CalDAV/CardDAV is susceptible to expensive search requests)\n* Web\n  * Add upload dialog for calendars/address books from file\n  * Show startup loading message\n  * Show warning if JavaScript is disabled\n  * Pass HTML Validator\n* Storage\n  * Check for missing UIDs in items\n  * Check for child collections in address books and calendars\n  * Code cleanup:\n    * Split BaseCollection in BaseStorage and BaseCollection\n\n## Upgrade checklist\n\n* Config\n  * Some settings were removed\n  * The default of `auth.htpasswd_encryption` changed to `md5`\n  * The setting `server.realm` moved to `auth.realm`\n  * The setting `logging.debug` was replaced by `logging.level`\n  * The format of the `rights.file` configuration file changed:\n    * Permission `r` replaced by `Rr`\n    * Permission `w` replaced by `Ww`\n    * New permission `i` added as subset of `r`\n    * Replaced variable `%(login)s` by `{user}`\n    * Removed variable `%(path)s`\n    * `{` must be escaped as `{{` and `}` as `}}` in regexes\n* File system storage\n  * The storage format is compatible with Radicale 2.x.x\n  * Run `radicale --verify-storage` to check for errors\n* Custom plugins:\n  * `auth` and `web` plugins require minor adjustments\n  * `rights` plugins must be adapted to the new permission model\n  * `storage` plugins require major changes\n\n## 2.1.10 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Update required versions for dependencies\n* Get `RADICALE_CONFIG` from WSGI environ\n* Improve HTTP status codes\n* Fix race condition in storage lock creation\n* Raise default limits for content length and timeout\n* Log output from hook\n\n## 2.1.9 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Specify versions for dependencies\n* Move WSGI initialization into module\n* Check if `REPORT` method is actually supported\n* Include `rights` file in source distribution\n* Specify `md5` and `bcrypt` as extras\n* Improve logging messages\n* Windows: Fix crash when item path is a directory\n\n## 2.1.8 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Flush files before fsync'ing\n\n## 2.1.7 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Don't print warning when cache format changes\n* Add documentation for `BaseAuth`\n* Add `is_authenticated2(login, user, password)` to `BaseAuth`\n* Fix names of custom properties in PROPFIND requests with\n  `D:propname` or `D:allprop`\n* Return all properties in PROPFIND requests with `D:propname` or\n  `D:allprop`\n* Allow `D:displayname` property on all collections\n* Answer with `D:unauthenticated` for `D:current-user-principal` property\n  when not logged in\n* Remove non-existing `ICAL:calendar-color` and `C:calendar-timezone`\n  properties from PROPFIND requests with `D:propname` or `D:allprop`\n* Add `D:owner` property to calendar and address book objects\n* Remove `D:getetag` and `D:getlastmodified` properties from regular\n  collections\n\n## 2.1.6 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Fix content-type of VLIST\n* Specify correct COMPONENT in content-type of VCALENDAR\n* Cache COMPONENT of calendar objects (improves speed with some clients)\n* Stricter parsing of filters\n* Improve support for CardDAV filter\n* Fix some smaller bugs in CalDAV filter\n* Add X-WR-CALNAME and X-WR-CALDESC to calendars downloaded via HTTP/WebDAV\n* Use X-WR-CALNAME and X-WR-CALDESC from calendars published via WebDAV\n\n## 2.1.5 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Add `--verify-storage` command-line argument\n* Allow comments in the htpasswd file\n* Don't strip whitespaces from user names and passwords in the htpasswd file\n* Remove cookies from logging output\n* Allow uploads of whole collections with many components\n* Show warning message if server.timeout is used with Python < 3.5.2\n\n## 2.1.4 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Fix incorrect time range matching and calculation for some edge-cases with\n  rescheduled recurrences\n* Fix owner property\n\n## 2.1.3 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Enable timeout for SSL handshakes and move them out of the main thread\n* Create cache entries during upload of items\n* Stop built-in server on Windows when Ctrl+C is pressed\n* Prevent slow down when multiple requests hit a collection during cache warm-up\n\n## 2.1.2 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Remove workarounds for bugs in VObject < 0.9.5\n* Error checking of collection tags and associated components\n* Improve error checking of uploaded collections and components\n* Don't delete empty collection properties implicitly\n* Improve logging of VObject serialization\n\n## 2.1.1 - Wild Radish Again\n\nThis release is compatible with version 2.0.0.\n\n* Add missing UIDs instead of failing\n* Improve error checking of calendar and address book objects\n* Fix upload of whole address books\n\n## 2.1.0 - Wild Radish\n\nThis release is compatible with version 2.0.0.\n\n* Built-in web interface for creating and managing address books and calendars\n  * can be extended with web plugins\n* Much faster storage backend\n* Significant reduction in memory usage\n* Improved logging\n  * Include paths (of invalid items / requests) in log messages\n  * Include configuration values causing problems in log messages\n  * Log warning message for invalid requests by clients\n  * Log error message for invalid files in the storage backend\n  * No stack traces unless debugging is enabled\n* Time range filter also regards overwritten recurrences\n* Items that couldn't be filtered because of bugs in VObject are always\n  returned (and a warning message is logged)\n* Basic error checking of configuration files\n* File system locking isn't disabled implicitly anymore, instead a new\n  configuration option gets introduced\n* The permissions of the lock file are not changed anymore\n* Support for sync-token\n* Support for client-side SSL certificates\n* Rights plugins can decide if access to an item is granted explicitly\n  * Respond with 403 instead of 404 for principal collections of non-existing\n    users when `owner_only` plugin is used (information leakage)\n* Authentication plugins can provide the login and password from the\n  environment\n  * new `remote_user` plugin, that gets the login from the `REMOTE_USER`\n    environment variable (for WSGI server)\n  * new `http_x_remote_user` plugin, that gets the login from the\n    `X-Remote-User` HTTP header (for reverse proxies)\n\n## 2.0.0 - Little Big Radish\n\nThis feature is not compatible with the 1.x.x versions. Follow our\n[migration guide](https://radicale.org/2.1.html#documentation/migration-from-1xx-to-2xx)\nif you want to switch from 1.x.x to 2.0.0.\n\n* Support Python 3.3+ only, Python 2 is not supported anymore\n* Keep only one simple filesystem-based storage system\n* Remove built-in Git support\n* Remove built-in authentication modules\n* Keep the WSGI interface, use Python HTTP server by default\n* Use a real iCal parser, rely on the \"vobject\" external module\n* Add a solid calendar discovery\n* Respect the difference between \"files\" and \"folders\", don't rely on slashes\n* Remove the calendar creation with GET requests\n* Be stateless\n* Use a file locker\n* Add threading\n* Get atomic writes\n* Support new filters\n* Support read-only permissions\n* Allow External plugins for authentication, rights management, storage and\n  version control\n\n## 1.1.4 - Fifth Law of Nature\n\n* Use `shutil.move` for `--export-storage`\n\n## 1.1.3 - Fourth Law of Nature\n\n* Add a `--export-storage=FOLDER` command-line argument (by Unrud, see #606)\n\n## 1.1.2 - Third Law of Nature\n\n* **Security fix**: Add a random timer to avoid timing oracles and simple\n  bruteforce attacks when using the htpasswd authentication method.\n* Various minor fixes.\n\n## 1.1.1 - Second Law of Nature\n\n* Fix the owner_write rights rule\n\n## 1.1 - Law of Nature\n\nOne feature in this release is **not backward compatible**:\n\n* Use the first matching section for rights (inspired from daald)\n\nNow, the first section matching the path and current user in your custom rights\nfile is used. In the previous versions, the most permissive rights of all the\nmatching sections were applied. This new behaviour gives a simple way to make\nspecific rules at the top of the file independant from the generic ones.\n\nMany **improvements in this release are related to security**, you should\nupgrade Radicale as soon as possible:\n\n* Improve the regex used for well-known URIs (by Unrud)\n* Prevent regex injection in rights management (by Unrud)\n* Prevent crafted HTTP request from calling arbitrary functions (by Unrud)\n* Improve URI sanitation and conversion to filesystem path (by Unrud)\n* Decouple the daemon from its parent environment (by Unrud)\n\nSome bugs have been fixed and little enhancements have been added:\n\n* Assign new items to corret key (by Unrud)\n* Avoid race condition in PID file creation (by Unrud)\n* Improve the docker version (by cdpb)\n* Encode message and commiter for git commits\n* Test with Python 3.5\n\n## 1.0.1 - Sunflower Again\n\n* Update the version because of a **stupid** \"feature\"™ of PyPI\n\n## 1.0 - Sunflower\n\n* Enhanced performances (by Mathieu Dupuy)\n* Add MD5-APR1 and BCRYPT for htpasswd-based authentication (by Jan-Philip Gehrcke)\n* Use PAM service (by Stephen Paul Weber)\n* Don't discard PROPPATCH on empty collections (by Markus Unterwaditzer)\n* Write the path of the collection in the git message (by Matthew Monaco)\n* Tests launched on Travis\n\n## 0.10 - Lovely Endless Grass\n\n* Support well-known URLs (by Mathieu Dupuy)\n* Fix collection discovery (by Markus Unterwaditzer)\n* Reload logger config on SIGHUP (by Élie Bouttier)\n* Remove props files when deleting a collection (by Vincent Untz)\n* Support salted SHA1 passwords (by Marc Kleine-Budde)\n* Don't spam the logs about non-SSL IMAP connections to localhost (by Giel van Schijndel)\n\n## 0.9 - Rivers\n\n* Custom handlers for auth, storage and rights (by Sergey Fursov)\n* 1-file-per-event storage (by Jean-Marc Martins)\n* Git support for filesystem storages (by Jean-Marc Martins)\n* DB storage working with PostgreSQL, MariaDB and SQLite (by Jean-Marc Martins)\n* Clean rights manager based on regular expressions (by Sweil)\n* Support of contacts for Apple's clients\n* Support colors (by Jochen Sprickerhof)\n* Decode URLs in XML (by Jean-Marc Martins)\n* Fix PAM authentication (by Stepan Henek)\n* Use consistent etags (by 9m66p93w)\n* Use consistent sorting order (by Daniel Danner)\n* Return 401 on unauthorized DELETE requests (by Eduard Braun)\n* Move pid file creation in child process (by Mathieu Dupuy)\n* Allow requests without base_prefix (by jheidemann)\n\n## 0.8 - Rainbow\n\n* New authentication and rights management modules (by Matthias Jordan)\n* Experimental database storage\n* Command-line option for custom configuration file (by Mark Adams)\n* Root URL not at the root of a domain (by Clint Adams, Fabrice Bellet, Vincent Untz)\n* Improved support for iCal, CalDAVSync, CardDAVSync, CalDavZAP and CardDavMATE\n* Empty PROPFIND requests handled (by Christoph Polcin)\n* Colon allowed in passwords\n* Configurable realm message\n\n## 0.7.1 - Waterfalls\n\n* Many address books fixes\n* New IMAP ACL (by Daniel Aleksandersen)\n* PAM ACL fixed (by Daniel Aleksandersen)\n* Courier ACL fixed (by Benjamin Frank)\n* Always set display name to collections (by Oskari Timperi)\n* Various DELETE responses fixed\n\n## 0.7 - Eternal Sunshine\n\n* Repeating events\n* Collection deletion\n* Courier and PAM authentication methods\n* CardDAV support\n* Custom LDAP filters supported\n\n## 0.6.4 - Tulips\n\n* Fix the installation with Python 3.1\n\n## 0.6.3 - Red Roses\n\n* MOVE requests fixed\n* Faster REPORT answers\n* Executable script moved into the package\n\n## 0.6.2 - Seeds\n\n* iPhone and iPad support fixed\n* Backslashes replaced by slashes in PROPFIND answers on Windows\n* PyPI archive set as default download URL\n\n## 0.6.1 - Growing Up\n\n* Example files included in the tarball\n* htpasswd support fixed\n* Redirection loop bug fixed\n* Testing message on GET requests\n\n## 0.6 - Sapling\n\n* WSGI support\n* IPv6 support\n* Smart, verbose and configurable logs\n* Apple iCal 4 and iPhone support (by Łukasz Langa)\n* KDE KOrganizer support\n* LDAP auth backend (by Corentin Le Bail)\n* Public and private calendars (by René Neumann)\n* PID file\n* MOVE requests management\n* Journal entries support\n* Drop Python 2.5 support\n\n## 0.5 - Historical Artifacts\n\n* Calendar depth\n* MacOS and Windows support\n* HEAD requests management\n* htpasswd user from calendar path\n\n## 0.4 - Hot Days Back\n\n* Personal calendars\n* Last-Modified HTTP header\n* `no-ssl` and `foreground` options\n* Default configuration file\n\n## 0.3 - Dancing Flowers\n\n* Evolution support\n* Version management\n\n## 0.2 - Snowflakes\n\n* Sunbird pre-1.0 support\n* SSL connection\n* Htpasswd authentication\n* Daemon mode\n* User configuration\n* Twisted dependency removed\n* Python 3 support\n* Real URLs for PUT and DELETE\n* Concurrent modification reported to users\n* Many bugs fixed (by Roger Wenham)\n\n## 0.1 - Crazy Vegetables\n\n* First release\n* Lightning/Sunbird 0.9 compatibility\n* Easy installer\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 34.09765625,
          "content": "### GNU GENERAL PUBLIC LICENSE\n\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 Free Software Foundation, Inc.\n<https://fsf.org/>\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n### Preamble\n\nThe GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works. By contrast,\nthe GNU General Public License is intended to guarantee your freedom\nto share and change all versions of a program--to make sure it remains\nfree software for all its users. We, the Free Software Foundation, use\nthe GNU General Public License for most of our software; it applies\nalso to any other work released this way by its authors. You can apply\nit to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not\nprice. Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\nTo protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights. Therefore, you\nhave certain responsibilities if you distribute copies of the\nsoftware, or if you modify it: responsibilities to respect the freedom\nof others.\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received. You must make sure that they, too, receive\nor can get the source code. And you must show them these terms so they\nknow their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software. For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\nSome devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the\nmanufacturer can do so. This is fundamentally incompatible with the\naim of protecting users' freedom to change the software. The\nsystematic pattern of such abuse occurs in the area of products for\nindividuals to use, which is precisely where it is most unacceptable.\nTherefore, we have designed this version of the GPL to prohibit the\npractice for those products. If such problems arise substantially in\nother domains, we stand ready to extend this provision to those\ndomains in future versions of the GPL, as needed to protect the\nfreedom of users.\n\nFinally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish\nto avoid the special danger that patents applied to a free program\ncould make it effectively proprietary. To prevent this, the GPL\nassures that patents cannot be used to render the program non-free.\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n### TERMS AND CONDITIONS\n\n#### 0. Definitions.\n\n\"This License\" refers to version 3 of the GNU General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds\nof works, such as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this\nLicense. Each licensee is addressed as \"you\". \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of\nan exact copy. The resulting work is called a \"modified version\" of\nthe earlier work or a work \"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\n\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy. Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies. Mere interaction with a user\nthrough a computer network, with no transfer of a copy, is not\nconveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\" to\nthe extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License. If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n#### 1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work for\nmaking modifications to it. \"Object code\" means any non-source form of\na work.\n\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form. A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities. However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work. For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\nThe Corresponding Source need not include anything that users can\nregenerate automatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same\nwork.\n\n#### 2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met. This License explicitly affirms your unlimited\npermission to run the unmodified Program. The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work. This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\nYou may make, run and propagate covered works that you do not convey,\nwithout conditions so long as your license otherwise remains in force.\nYou may convey covered works to others for the sole purpose of having\nthem make modifications exclusively for you, or provide you with\nfacilities for running those works, provided that you comply with the\nterms of this License in conveying all material for which you do not\ncontrol copyright. Those thus making or running the covered works for\nyou must do so exclusively on your behalf, under your direction and\ncontrol, on terms that prohibit them from making any copies of your\ncopyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the\nconditions stated below. Sublicensing is not allowed; section 10 makes\nit unnecessary.\n\n#### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such\ncircumvention is effected by exercising rights under this License with\nrespect to the covered work, and you disclaim any intention to limit\noperation or modification of the work as a means of enforcing, against\nthe work's users, your or third parties' legal rights to forbid\ncircumvention of technological measures.\n\n#### 4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n#### 5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these\nconditions:\n\n-   a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n-   b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under\n    section 7. This requirement modifies the requirement in section 4\n    to \"keep intact all notices\".\n-   c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy. This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged. This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n-   d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit. Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n#### 6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of\nsections 4 and 5, provided that you also convey the machine-readable\nCorresponding Source under the terms of this License, in one of these\nways:\n\n-   a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n-   b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the Corresponding\n    Source from a network server at no charge.\n-   c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source. This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n-   d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge. You need not require recipients to copy the\n    Corresponding Source along with the object code. If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source. Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n-   e) Convey the object code using peer-to-peer transmission,\n    provided you inform other peers where the object code and\n    Corresponding Source of the work are being offered to the general\n    public at no charge under subsection 6d.\n\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal,\nfamily, or household purposes, or (2) anything designed or sold for\nincorporation into a dwelling. In determining whether a product is a\nconsumer product, doubtful cases shall be resolved in favor of\ncoverage. For a particular product received by a particular user,\n\"normally used\" refers to a typical or common use of that class of\nproduct, regardless of the status of the particular user or of the way\nin which the particular user actually uses, or expects or is expected\nto use, the product. A product is a consumer product regardless of\nwhether the product has substantial commercial, industrial or\nnon-consumer uses, unless such uses represent the only significant\nmode of use of the product.\n\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to\ninstall and execute modified versions of a covered work in that User\nProduct from a modified version of its Corresponding Source. The\ninformation must suffice to ensure that the continued functioning of\nthe modified object code is in no case prevented or interfered with\nsolely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information. But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or\nupdates for a work that has been modified or installed by the\nrecipient, or for the User Product in which it has been modified or\ninstalled. Access to a network may be denied when the modification\nitself materially and adversely affects the operation of the network\nor violates the rules and protocols for communication across the\nnetwork.\n\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n#### 7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law. If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit. (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.) You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders\nof that material) supplement the terms of this License with terms:\n\n-   a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n-   b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n-   c) Prohibiting misrepresentation of the origin of that material,\n    or requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n-   d) Limiting the use for publicity purposes of names of licensors\n    or authors of the material; or\n-   e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n-   f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions\n    of it) with contractual assumptions of liability to the recipient,\n    for any liability that these contractual assumptions directly\n    impose on those licensors and authors.\n\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10. If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term. If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions; the\nabove requirements apply either way.\n\n#### 8. Termination.\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License. Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\nHowever, if you cease all violation of this License, then your license\nfrom a particular copyright holder is reinstated (a) provisionally,\nunless and until the copyright holder explicitly and finally\nterminates your license, and (b) permanently, if the copyright holder\nfails to notify you of the violation by some reasonable means prior to\n60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License. If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n#### 9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run\na copy of the Program. Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance. However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work. These actions infringe copyright if you do\nnot accept this License. Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n#### 10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License. You are not responsible\nfor enforcing compliance by third parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations. If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License. For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n#### 11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based. The\nwork thus licensed is called the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims owned\nor controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version. For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement). To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients. \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within the\nscope of its coverage, prohibits the exercise of, or is conditioned on\nthe non-exercise of one or more of the rights that are specifically\ngranted under this License. You may not convey a covered work if you\nare a party to an arrangement with a third party that is in the\nbusiness of distributing software, under which you make payment to the\nthird party based on the extent of your activity of conveying the\nwork, and under which the third party grants, to any of the parties\nwho would receive the covered work from you, a discriminatory patent\nlicense (a) in connection with copies of the covered work conveyed by\nyou (or copies made from those copies), or (b) primarily for and in\nconnection with specific products or compilations that contain the\ncovered work, unless you entered into that arrangement, or that patent\nlicense was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n#### 12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License. If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under\nthis License and any other pertinent obligations, then as a\nconsequence you may not convey it at all. For example, if you agree to\nterms that obligate you to collect a royalty for further conveying\nfrom those to whom you convey the Program, the only way you could\nsatisfy both those terms and this License would be to refrain entirely\nfrom conveying the Program.\n\n#### 13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work. The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n#### 14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions\nof the GNU General Public License from time to time. Such new versions\nwill be similar in spirit to the present version, but may differ in\ndetail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program\nspecifies that a certain numbered version of the GNU General Public\nLicense \"or any later version\" applies to it, you have the option of\nfollowing the terms and conditions either of that numbered version or\nof any later version published by the Free Software Foundation. If the\nProgram does not specify a version number of the GNU General Public\nLicense, you may choose any version ever published by the Free\nSoftware Foundation.\n\nIf the Program specifies that a proxy can decide which future versions\nof the GNU General Public License can be used, that proxy's public\nstatement of acceptance of a version permanently authorizes you to\nchoose that version for the Program.\n\nLater license versions may give you additional or different\npermissions. However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n#### 15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT\nWARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND\nPERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR\nCORRECTION.\n\n#### 16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR\nCONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES\nARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT\nNOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR\nLOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM\nTO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER\nPARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n#### 17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\nEND OF TERMS AND CONDITIONS\n\n### How to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these\nterms.\n\nTo do so, attach the following notices to the program. It is safest to\nattach them to the start of each source file to most effectively state\nthe exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n        <one line to give the program's name and a brief idea of what it does.>\n        Copyright (C) <year>  <name of author>\n\n        This program is free software: you can redistribute it and/or modify\n        it under the terms of the GNU General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version.\n\n        This program is distributed in the hope that it will be useful,\n        but WITHOUT ANY WARRANTY; without even the implied warranty of\n        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n        GNU General Public License for more details.\n\n        You should have received a copy of the GNU General Public License\n        along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper\nmail.\n\nIf the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n        <program>  Copyright (C) <year>  <name of author>\n        This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n        This is free software, and you are welcome to redistribute it\n        under certain conditions; type `show c' for details.\n\nThe hypothetical commands \\`show w' and \\`show c' should show the\nappropriate parts of the General Public License. Of course, your\nprogram's commands might be different; for a GUI interface, you would\nuse an \"about box\".\n\nYou should also get your employer (if you work as a programmer) or\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary. For more information on this, and how to apply and follow\nthe GNU GPL, see <https://www.gnu.org/licenses/>.\n\nThe GNU General Public License does not permit incorporating your\nprogram into proprietary programs. If your program is a subroutine\nlibrary, you may consider it more useful to permit linking proprietary\napplications with the library. If this is what you want to do, use the\nGNU Lesser General Public License instead of this License. But first,\nplease read <https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "DOCUMENTATION.md",
          "type": "blob",
          "size": 58.6640625,
          "content": "# Documentation\n\n## Getting started\n\n#### About Radicale\n\nRadicale is a small but powerful CalDAV (calendars, to-do lists) and CardDAV\n(contacts) server, that:\n\n* Shares calendars and contact lists through CalDAV, CardDAV and HTTP.\n* Supports events, todos, journal entries and business cards.\n* Works out-of-the-box, no complicated setup or configuration required.\n* Can limit access by authentication.\n* Can secure connections with TLS.\n* Works with many\n  [CalDAV and CardDAV clients](#supported-clients).\n* Stores all data on the file system in a simple folder structure.\n* Can be extended with plugins.\n* Is GPLv3-licensed free software.\n\n#### Installation\n\nRadicale is really easy to install (for testing purposes) and works out-of-the-box.\n\n```bash\npython3 -m pip install --upgrade https://github.com/Kozea/Radicale/archive/master.tar.gz\npython3 -m radicale --logging-level info --storage-filesystem-folder=~/.var/lib/radicale/collections\n```\n\nWhen the server is launched, open <http://localhost:5232> in your browser!\nYou can login with any username and password.\n\nWant more? Check the [tutorials](#tutorials) and the\n[documentation](#documentation-1).\n\nInstead of downloading from PyPI look for packages provided by used [distribution](#linux-distribution-packages), they contain also startup scripts to run daemonized.\n\n#### What's New?\n\nRead the\n[changelog on GitHub.](https://github.com/Kozea/Radicale/blob/master/CHANGELOG.md)\n\n## Tutorials\n\n### Simple 5-minute setup\n\nYou want to try Radicale but only have 5 minutes free in your calendar? Let's\ngo right now and play a bit with Radicale!\n\nWhen everything works, you can get a [client](#supported-clients)\nand start creating calendars and address books. The server **only** binds to\nlocalhost (is **not** reachable over the network) and you can log in with any\nusername and password. If Radicale fits your needs, it may be time for\n[some basic configuration](#basic-configuration).\n\nFollow one of the chapters below depending on your operating system.\n\n#### Linux / \\*BSD\n\nFirst, make sure that **python** 3.9 or later and **pip** are installed. On most distributions it should be\nenough to install the package ``python3-pip``.\n\nThen open a console and type:\n\n```bash\n# Run the following command as root or\n# add the --user argument to only install for the current user\n$ python3 -m pip install --upgrade https://github.com/Kozea/Radicale/archive/master.tar.gz\n$ python3 -m radicale --storage-filesystem-folder=~/.var/lib/radicale/collections\n```\n\nVictory! Open <http://localhost:5232> in your browser!\nYou can log in with any username and password.\n\n#### Windows\n\nThe first step is to install Python. Go to\n[python.org](https://python.org) and download the latest version of Python 3.\nThen run the installer.\nOn the first window of the installer, check the \"Add Python to PATH\" box and\nclick on \"Install now\". Wait a couple of minutes, it's done!\n\nLaunch a command prompt and type:\n\n```powershell\npython -m pip install --upgrade https://github.com/Kozea/Radicale/archive/master.tar.gz\npython -m radicale --storage-filesystem-folder=~/radicale/collections\n```\n\nVictory! Open <http://localhost:5232> in your browser!\nYou can log in with any username and password.\n\n### Basic Configuration\n\nInstallation instructions can be found in the\n[simple 5-minute setup](#simple-5-minute-setup) tutorial.\n\nRadicale tries to load configuration files from `/etc/radicale/config` and\n`~/.config/radicale/config`.\nCustom paths can be specified with the `--config /path/to/config` command\nline argument or the `RADICALE_CONFIG` environment variable.\nMultiple configuration files can be separated by `:` (resp. `;` on Windows).\nPaths that start with `?` are optional.\n\nYou should create a new configuration file at the desired location.\n(If the use of a configuration file is inconvenient, all options can be\npassed via command line arguments.)\n\nAll configuration options are described in detail in the\n[Configuration](#configuration) section.\n\n#### Authentication\n\nIn its default configuration Radicale doesn't check usernames or passwords.\nIf the server is reachable over a network, you should change this.\n\nFirst a `users` file with all usernames and passwords must be created.\nIt can be stored in the same directory as the configuration file.\n\n##### The secure way\n\nThe `users` file can be created and managed with\n[htpasswd](https://httpd.apache.org/docs/current/programs/htpasswd.html):\n\n```bash\n# Create a new htpasswd file with the user \"user1\" using SHA-512 as hash method\n$ htpasswd -5 -c /path/to/users user1\nNew password:\nRe-type new password:\n# Add another user\n$ htpasswd -5 /path/to/users user2\nNew password:\nRe-type new password:\n```\n\nAuthentication can be enabled with the following configuration:\n\n```ini\n[auth]\ntype = htpasswd\nhtpasswd_filename = /path/to/users\nhtpasswd_encryption = autodetect\n```\n\n##### The simple but insecure way\n\nCreate the `users` file by hand with lines containing the username and\npassword separated by `:`. Example:\n\n```htpasswd\nuser1:password1\nuser2:password2\n```\n\nAuthentication can be enabled with the following configuration:\n\n```ini\n[auth]\ntype = htpasswd\nhtpasswd_filename = /path/to/users\n# encryption method used in the htpasswd file\nhtpasswd_encryption = plain\n```\n\n#### Addresses\n\nThe default configuration binds the server to localhost. It can't be reached\nfrom other computers. This can be changed with the following configuration\noptions (IPv4 and IPv6):\n\n```ini\n[server]\nhosts = 0.0.0.0:5232, [::]:5232\n```\n\n#### Storage\n\nData is stored in the folder `/var/lib/radicale/collections`. The path can\nbe changed with the following configuration:\n\n```ini\n[storage]\nfilesystem_folder = /path/to/storage\n```\n\n> **Security:** The storage folder should not be readable by unauthorized users.\n> Otherwise, they can read the calendar data and lock the storage.\n> You can find OS dependent instructions in the\n> [Running as a service](#running-as-a-service) section.\n\n#### Limits\n\nRadicale enforces limits on the maximum number of parallel connections,\nthe maximum file size (important for contacts with big photos) and the rate of\nincorrect authentication attempts. Connections are terminated after a timeout.\nThe default values should be fine for most scenarios.\n\n```ini\n[server]\nmax_connections = 20\n# 100 Megabyte\nmax_content_length = 100000000\n# 30 seconds\ntimeout = 30\n\n[auth]\n# Average delay after failed login attempts in seconds\ndelay = 1\n```\n\n### Running as a service\n\nThe method to run Radicale as a service depends on your host operating system.\nFollow one of the chapters below depending on your operating system and\nrequirements.\n\n#### Linux with systemd system-wide\n\nRecommendation: check support by [Linux Distribution Packages](#linux-distribution-packages) instead of manual setup / initial configuration.\n\nCreate the **radicale** user and group for the Radicale service. (Run\n`useradd --system --user-group --home-dir / --shell /sbin/nologin radicale` as root.)\nThe storage folder must be writable by **radicale**. (Run\n`mkdir -p /var/lib/radicale/collections && chown -R radicale:radicale /var/lib/radicale/collections`\nas root.)\n\n> **Security:** The storage should not be readable by others.\n> (Run `chmod -R o= /var/lib/radicale/collections` as root.)\n\nCreate the file `/etc/systemd/system/radicale.service`:\n\n```ini\n[Unit]\nDescription=A simple CalDAV (calendar) and CardDAV (contact) server\nAfter=network.target\nRequires=network.target\n\n[Service]\nExecStart=/usr/bin/env python3 -m radicale\nRestart=on-failure\nUser=radicale\n# Deny other users access to the calendar data\nUMask=0027\n# Optional security settings\nPrivateTmp=true\nProtectSystem=strict\nProtectHome=true\nPrivateDevices=true\nProtectKernelTunables=true\nProtectKernelModules=true\nProtectControlGroups=true\nNoNewPrivileges=true\nReadWritePaths=/var/lib/radicale/ /var/cache/radicale/\n\n[Install]\nWantedBy=multi-user.target\n```\n\nRadicale will load the configuration file from `/etc/radicale/config`.\n\nTo enable and manage the service run:\n\n```bash\n# Enable the service\n$ systemctl enable radicale\n# Start the service\n$ systemctl start radicale\n# Check the status of the service\n$ systemctl status radicale\n# View all log messages\n$ journalctl --unit radicale.service\n```\n\n#### Linux with systemd as a user\n\nCreate the file `~/.config/systemd/user/radicale.service`:\n\n```ini\n[Unit]\nDescription=A simple CalDAV (calendar) and CardDAV (contact) server\n\n[Service]\nExecStart=/usr/bin/env python3 -m radicale\nRestart=on-failure\n\n[Install]\nWantedBy=default.target\n```\n\nRadicale will load the configuration file from `~/.config/radicale/config`.\nYou should set the configuration option `filesystem_folder` in the `storage`\nsection to something like `~/.var/lib/radicale/collections`.\n\nTo enable and manage the service run:\n\n```bash\n# Enable the service\n$ systemctl --user enable radicale\n# Start the service\n$ systemctl --user start radicale\n# Check the status of the service\n$ systemctl --user status radicale\n# View all log messages\n$ journalctl --user --unit radicale.service\n```\n\n#### Windows with \"NSSM - the Non-Sucking Service Manager\"\n\nFirst install [NSSM](https://nssm.cc/) and start `nssm install` in a command\nprompt. Apply the following configuration:\n\n* Service name: `Radicale`\n* Application\n  * Path: `C:\\Path\\To\\Python\\python.exe`\n  * Arguments: `-m radicale --config C:\\Path\\To\\Config`\n* I/O redirection\n  * Error: `C:\\Path\\To\\Radicale.log`\n\n> **Security:** Be aware that the service runs in the local system account,\n> you might want to change this. Managing user accounts is beyond the scope of\n> this manual. Also, make sure that the storage folder and log file is not\n> readable by unauthorized users.\n\nThe log file might grow very big over time, you can configure file rotation\nin **NSSM** to prevent this.\n\nThe service is configured to start automatically when the computer starts.\nTo start the service manually open **Services** in **Computer Management** and\nstart the **Radicale** service.\n\n### Reverse Proxy\n\nWhen a reverse proxy is used, and Radicale should be made available at a path\nbelow the root (such as `/radicale/`), then this path must be provided via\nthe `X-Script-Name` header (without a trailing `/`). The proxy must remove\nthe location from the URL path that is forwarded to Radicale. If Radicale\nshould be made available at the root of the web server (in the nginx case\nusing `location /`), then the setting of the `X-Script-Name` header should be\nremoved from the example below.\n\nExample **nginx** configuration:\n\nSee for latest examples: https://github.com/Kozea/Radicale/tree/master/contrib/nginx/\n\n```nginx\nlocation /radicale/ { # The trailing / is important!\n    proxy_pass        http://localhost:5232/; # The / is important!\n    proxy_set_header  X-Script-Name /radicale;\n    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header  X-Forwarded-Host $host;\n    proxy_set_header  X-Forwarded-Port $server_port;\n    proxy_set_header  X-Forwarded-Proto $scheme;\n    proxy_set_header  Host $http_host;\n    proxy_pass_header Authorization;\n}\n```\n\nExample **Caddy** configuration:\n\n```\nhandle_path /radicale/* {\n    uri strip_prefix /radicale\n    reverse_proxy localhost:5232 {\n        header_up X-Script-Name /radicale\n    }\n}\n```\n\nExample **Apache** configuration:\n\nSee for latest examples: https://github.com/Kozea/Radicale/tree/master/contrib/apache/\n\n```apache\nRewriteEngine On\nRewriteRule ^/radicale$ /radicale/ [R,L]\n\n<Location \"/radicale/\">\n    ProxyPass        http://localhost:5232/ retry=0\n    ProxyPassReverse http://localhost:5232/\n    RequestHeader    set X-Script-Name /radicale\n    RequestHeader    set X-Forwarded-Port \"%{SERVER_PORT}s\"\n    RequestHeader    set X-Forwarded-Proto expr=%{REQUEST_SCHEME}\n</Location>\n```\n\nExample **Apache .htaccess** configuration:\n\n```apache\nDirectoryIndex disabled\nRewriteEngine On\nRewriteRule ^(.*)$ http://localhost:5232/$1 [P,L]\n\n# Set to directory of .htaccess file:\nRequestHeader set X-Script-Name /radicale\nRequestHeader set X-Forwarded-Port \"%{SERVER_PORT}s\"\nRequestHeader unset X-Forwarded-Proto\n<If \"%{HTTPS} =~ /on/\">\nRequestHeader set X-Forwarded-Proto \"https\"\n</If>\n```\n\nExample **lighttpd** configuration:\n\n```lighttpd\nserver.modules += ( \"mod_proxy\" , \"mod_setenv\", \"mod_rewrite\" )\n\n$HTTP[\"url\"] =~ \"^/radicale/\" {\n  proxy.server = ( \"\" => (( \"host\" => \"127.0.0.1\", \"port\" => \"5232\" )) )\n  proxy.header = ( \"map-urlpath\" => ( \"/radicale/\" => \"/\" ))\n\n  setenv.add-request-header = (\n    \"X-Script-Name\" => \"/radicale\",\n    \"Script-Name\" => \"/radicale\",\n  )\n  url.rewrite-once = ( \"^/radicale/radicale/(.*)\" => \"/radicale/$1\" )\n}\n```\n\nBe reminded that Radicale's default configuration enforces limits on the\nmaximum number of parallel connections, the maximum file size and the rate of\nincorrect authentication attempts. Connections are terminated after a timeout.\n\n#### Manage user accounts with the reverse proxy\n\nSet the configuration option `type` in the `auth` section to\n`http_x_remote_user`.\nRadicale uses the username provided in the `X-Remote-User` HTTP header and\ndisables HTTP authentication.\n\nExample **nginx** configuration:\n\n```nginx\nlocation /radicale/ {\n    proxy_pass           http://localhost:5232/;\n    proxy_set_header     X-Script-Name /radicale;\n    proxy_set_header     X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header     X-Remote-User $remote_user;\n    proxy_set_header     Host $http_host;\n    auth_basic           \"Radicale - Password Required\";\n    auth_basic_user_file /etc/nginx/htpasswd;\n}\n```\n\nExample **Caddy** configuration:\n\n```\nhandle_path /radicale/* {\n    uri strip_prefix /radicale\n    basicauth {\n        USER HASH\n    }\n    reverse_proxy localhost:5232 {\n        header_up X-Script-Name /radicale\n        header_up X-remote-user {http.auth.user.id}\n    }\n}\n```\n\nExample **Apache** configuration:\n\n```apache\nRewriteEngine On\nRewriteRule ^/radicale$ /radicale/ [R,L]\n\n<Location \"/radicale/\">\n    AuthType     Basic\n    AuthName     \"Radicale - Password Required\"\n    AuthUserFile \"/etc/radicale/htpasswd\"\n    Require      valid-user\n\n    ProxyPass        http://localhost:5232/ retry=0\n    ProxyPassReverse http://localhost:5232/\n    RequestHeader    set X-Script-Name /radicale\n    RequestHeader    set X-Remote-User expr=%{REMOTE_USER}\n</Location>\n```\n\nExample **Apache .htaccess** configuration:\n\n```apache\nDirectoryIndex disabled\nRewriteEngine On\nRewriteRule ^(.*)$ http://localhost:5232/$1 [P,L]\n\nAuthType     Basic\nAuthName     \"Radicale - Password Required\"\nAuthUserFile \"/etc/radicale/htpasswd\"\nRequire      valid-user\n\n# Set to directory of .htaccess file:\nRequestHeader set X-Script-Name /radicale\nRequestHeader set X-Remote-User expr=%{REMOTE_USER}\n```\n\n> **Security:** Untrusted clients should not be able to access the Radicale\n> server directly. Otherwise, they can authenticate as any user.\n\n#### Secure connection between Radicale and the reverse proxy\n\nSSL certificates can be used to encrypt and authenticate the connection between\nRadicale and the reverse proxy. First you have to generate a certificate for\nRadicale and a certificate for the reverse proxy. The following commands\ngenerate self-signed certificates. You will be asked to enter additional\ninformation about the certificate, the values don't matter and you can keep the\ndefaults.\n\n```bash\nopenssl req -x509 -newkey rsa:4096 -keyout server_key.pem -out server_cert.pem \\\n        -nodes -days 9999\nopenssl req -x509 -newkey rsa:4096 -keyout client_key.pem -out client_cert.pem \\\n        -nodes -days 9999\n```\n\nUse the following configuration for Radicale:\n\n```ini\n[server]\nssl = True\ncertificate = /path/to/server_cert.pem\nkey = /path/to/server_key.pem\ncertificate_authority = /path/to/client_cert.pem\n```\n\nIf you're using the Let's Encrypt's Certbot, the configuration should look similar to this:\n\n```ini\n[server]\nssl = True\ncertificate = /etc/letsencrypt/live/{Your Domain}/fullchain.pem\nkey = /etc/letsencrypt/live/{Your Domain}/privkey.pem\n```\n\nExample **nginx** configuration:\n\n```nginx\nlocation /radicale/ {\n    proxy_pass https://localhost:5232/;\n    ...\n    # Place the files somewhere nginx is allowed to access (e.g. /etc/nginx/...).\n    proxy_ssl_certificate         /path/to/client_cert.pem;\n    proxy_ssl_certificate_key     /path/to/client_key.pem;\n}\n```\n\n### WSGI Server\n\nRadicale is compatible with the WSGI specification.\n\nA configuration file can be set with the `RADICALE_CONFIG` environment\nvariable, otherwise no configuration file is loaded and the default\nconfiguration is used.\n\nExample **uWSGI** configuration:\n\n```ini\n[uwsgi]\nhttp-socket = 127.0.0.1:5232\nprocesses = 8\nplugin = python3\nmodule = radicale\nenv = RADICALE_CONFIG=/etc/radicale/config\n```\n\nExample **Gunicorn** configuration:\n\n```bash\ngunicorn --bind '127.0.0.1:5232' --env 'RADICALE_CONFIG=/etc/radicale/config' \\\n         --workers 8 radicale\n```\n\n#### Manage user accounts with the WSGI server\n\nSet the configuration option `type` in the `auth` section to `remote_user`.\nRadicale uses the username provided by the WSGI server and disables\nauthentication over HTTP.\n\n### Versioning with Git\n\nThis tutorial describes how to keep track of all changes to calendars and\naddress books with **git** (or any other version control system).\n\nThe repository must be initialized in the collection base directory\nof the user running `radicale` daemon.\n\n```bash\n## assuming \"radicale\" user is starting \"radicale\" service\n# change to user \"radicale\"\nsu -l -s /bin/bash radicale\n\n# change to collection base directory defined in [storage] -> filesystem_folder\n#  assumed here /var/lib/radicale/collections\ncd /var/lib/radicale/collections\n\n# initialize git repository\ngit init\n\n# set user and e-mail, here minimum example\ngit config user.name \"$USER\"\ngit config user.email \"$USER@$HOSTNAME\"\n\n# define ignore of cache/lock/tmp files\ncat <<'END' >.gitignore\n.Radicale.cache\n.Radicale.lock\n.Radicale.tmp-*\nEND\n```\n\nThe configuration option `hook` in the `storage` section must be set to\nthe following command:\n\n```bash\ngit add -A && (git diff --cached --quiet || git commit -m \"Changes by \\\"%(user)s\\\"\")\n```\n\nThe command gets executed after every change to the storage and commits\nthe changes into the **git** repository.\n\nLog of `git` can be investigated using\n\n```bash\nsu -l -s /bin/bash radicale\ncd /var/lib/radicale/collections\ngit log\n```\n\nIn case of problems, make sure you run radicale with ``--debug`` switch and\ninspect the log output. For more information, please visit\n[section on logging](#logging-overview).\n\nReason for problems can be\n - SELinux status -> check related audit log\n - problematic file/directory permissions\n - command is not fond or cannot be executed or argument problem\n\n## Documentation\n\n### Configuration\n\nRadicale can be configured with a configuration file or with\ncommand line arguments.\n\nAn example configuration file looks like:\n\n```ini\n[server]\n# Bind all addresses\nhosts = 0.0.0.0:5232, [::]:5232\n\n[auth]\ntype = htpasswd\nhtpasswd_filename = ~/.config/radicale/users\nhtpasswd_encryption = autodetect\n\n[storage]\nfilesystem_folder = ~/.var/lib/radicale/collections\n```\n\nRadicale tries to load configuration files from `/etc/radicale/config` and\n`~/.config/radicale/config`.\nCustom paths can be specified with the `--config /path/to/config` command\nline argument or the `RADICALE_CONFIG` environment variable.\nMultiple configuration files can be separated by `:` (resp. `;` on Windows).\nPaths that start with `?` are optional.\n\nThe same example configuration via command line arguments looks like:\n\n```bash\npython3 -m radicale --server-hosts 0.0.0.0:5232,[::]:5232 \\\n        --auth-type htpasswd --auth-htpasswd-filename ~/.config/radicale/users \\\n        --auth-htpasswd-encryption autodetect\n```\n\nAdd the argument `--config \"\"` to stop Radicale from loading the default\nconfiguration files. Run `python3 -m radicale --help` for more information.\n\nOne can also use command line options in startup scripts using following examples:\n\n```bash\n## simple variable containing multiple options\nRADICALE_OPTIONS=\"--logging-level=debug --config=/etc/radicale/config --logging-request-header-on-debug --logging-rights-rule-doesnt-match-on-debug\"\n/usr/bin/radicale $RADICALE_OPTIONS\n\n## variable as array method #1\nRADICALE_OPTIONS=(\"--logging-level=debug\" \"--config=/etc/radicale/config\" \"--logging-request-header-on-debug\" \"--logging-rights-rule-doesnt-match-on-debug\")\n/usr/bin/radicale ${RADICALE_OPTIONS[@]}\n\n## variable as array method #2\nRADICALE_OPTIONS=()\nRADICALE_OPTIONS+=(\"--logging-level=debug\")\nRADICALE_OPTIONS+=(\"--config=/etc/radicale/config\")\n/usr/bin/radicale ${RADICALE_OPTIONS[@]}\n```\n\nIn the following, all configuration categories and options are described.\n\n#### server\n\nThe configuration options in this category are only relevant in standalone\nmode. All options are ignored, when Radicale runs via WSGI.\n\n##### hosts\n\nA comma separated list of addresses that the server will bind to.\n\nDefault: `localhost:5232`\n\n##### max_connections\n\nThe maximum number of parallel connections. Set to `0` to disable the limit.\n\nDefault: `8`\n\n##### max_content_length\n\nThe maximum size of the request body. (bytes)\n\nDefault: `100000000`\n\n##### timeout\n\nSocket timeout. (seconds)\n\nDefault: `30`\n\n##### ssl\n\nEnable transport layer encryption.\n\nDefault: `False`\n\n##### certificate\n\nPath of the SSL certifcate.\n\nDefault: `/etc/ssl/radicale.cert.pem`\n\n##### key\n\nPath to the private key for SSL. Only effective if `ssl` is enabled.\n\nDefault: `/etc/ssl/radicale.key.pem`\n\n##### certificate_authority\n\nPath to the CA certificate for validating client certificates. This can be used\nto secure TCP traffic between Radicale and a reverse proxy. If you want to\nauthenticate users with client-side certificates, you also have to write an\nauthentication plugin that extracts the username from the certificate.\n\nDefault:\n\n##### protocol\n\nAccepted SSL protocol (maybe not all supported by underlying OpenSSL version)\nExample for secure configuration: ALL -SSLv3 -TLSv1 -TLSv1.1\nFormat: Apache SSLProtocol list (from \"mod_ssl\")\n\nDefault: (system default)\n\n##### ciphersuite\n\nAccepted SSL ciphersuite (maybe not all supported by underlying OpenSSL version)\nExample for secure configuration: DHE:ECDHE:-NULL:-SHA\nFormat: OpenSSL cipher list (see also \"man openssl-ciphers\")\n\nDefault: (system-default)\n\n#### encoding\n\n##### request\n\nEncoding for responding requests.\n\nDefault: `utf-8`\n\n##### stock\n\nEncoding for storing local collections\n\nDefault: `utf-8`\n\n#### auth\n\n##### type\n\nThe method to verify usernames and passwords.\n\nAvailable backends:\n\n`none`\n: Just allows all usernames and passwords.\n\n`htpasswd`\n: Use an\n  [Apache htpasswd file](https://httpd.apache.org/docs/current/programs/htpasswd.html)\n  to store usernames and passwords.\n\n`remote_user`\n: Takes the username from the `REMOTE_USER` environment variable and disables\n  HTTP authentication. This can be used to provide the username from a WSGI\n  server.\n\n`http_x_remote_user`\n: Takes the username from the `X-Remote-User` HTTP header and disables HTTP\n  authentication. This can be used to provide the username from a reverse\n  proxy.\n\n`ldap`\n: Use a LDAP or AD server to authenticate users.\n\n`dovecot`\n: Use a local Dovecot server to authenticate users.\n\nDefault: `none`\n\n##### cache_logins\n\nCache successful/failed logins until expiration time. Enable this to avoid\noverload of authentication backends.\n\nDefault: `false`\n\n##### cache_successful_logins_expiry\n\nExpiration time of caching successful logins in seconds\n\nDefault: `15`\n\n##### cache_failed_logins_expiry\n\nExpiration time of caching failed logins in seconds\n\nDefault: `90`\n\n##### htpasswd_filename\n\nPath to the htpasswd file.\n\nDefault: `/etc/radicale/users`\n\n##### htpasswd_encryption\n\nThe encryption method that is used in the htpasswd file. Use the\n[htpasswd](https://httpd.apache.org/docs/current/programs/htpasswd.html)\nor similar to generate this files.\n\nAvailable methods:\n\n`plain`\n: Passwords are stored in plaintext. This is obviously not secure!\n  The htpasswd file for this can be created by hand and looks like:\n\n  ```htpasswd\n  user1:password1\n  user2:password2\n  ```\n\n`bcrypt`\n: This uses a modified version of the Blowfish stream cipher. It's very secure.\n  The installation of **bcrypt** is required for this.\n\n`md5`\n: This uses an iterated MD5 digest of the password with a salt (nowadays insecure).\n\n`sha256`\n: This uses an iterated SHA-256 digest of the password with a salt.\n\n`sha512`\n: This uses an iterated SHA-512 digest of the password with a salt.\n\n`autodetect`\n: This selects autodetection of method per entry.\n\nDefault: `autodetect`\n\n##### htpasswd_cache\n\nEnable caching of htpasswd file based on size and mtime_ns\n\nDefault: `False`\n\n##### delay\n\nAverage delay after failed login attempts in seconds.\n\nDefault: `1`\n\n##### realm\n\nMessage displayed in the client when a password is needed.\n\nDefault: `Radicale - Password Required`\n\n##### ldap_uri\n\nThe URI to the ldap server\n\nDefault: `ldap://localhost`\n\n##### ldap_base\n\nLDAP base DN of the ldap server. This parameter must be provided if auth type is ldap.\n\nDefault:\n\n##### ldap_reader_dn\n\nThe DN of a ldap user with read access to get the user accounts. This parameter must be provided if auth type is ldap.\n\nDefault:\n\n##### ldap_secret\n\nThe password of the ldap_reader_dn. Either this parameter or `ldap_secret_file` must be provided if auth type is ldap.\n\nDefault:\n\n##### ldap_secret_file\n\nPath of the file containing the password of the ldap_reader_dn. Either this parameter or `ldap_secret` must be provided if auth type is ldap.\n\nDefault:\n\n##### ldap_filter\n\nThe search filter to find the user DN to authenticate by the username. User '{0}' as placeholder for the user name.\n\nDefault: `(cn={0})`\n\n##### ldap_user_attribute\n\nThe LDAP attribute whose value shall be used as the user name after successful authentication\n\nDefault: not set, i.e. the login name given is used directly.\n\n##### ldap_groups_attribute\n\nThe LDAP attribute to read the group memberships from in the authenticated user's LDAP entry.\n\nIf set, load the LDAP group memberships from the attribute given\nThese memberships can be used later on to define rights.\nThis also gives you access to the group calendars, if they exist.\n* The group calendar will be placed under collection_root_folder/GROUPS\n* The name of the calendar directory is the base64 encoded group name.\n* The group calendar folders will not be created automatically. This must be done manually. In the [LDAP-authentication section of Radicale's wiki](https://github.com/Kozea/Radicale/wiki/LDAP-authentication) you can find a script to create a group calendar.\n\nUse 'memberOf' if you want to load groups on Active Directory and alikes, 'groupMembership' on Novell eDirectory, ...\n\nDefault: unset\n\n##### ldap_use_ssl\n\nUse ssl on the ldap connection\n\nDefault: False\n\n##### ldap_ssl_verify_mode\n\nThe certificate verification mode. NONE, OPTIONAL or REQUIRED\n\nDefault: REQUIRED\n\n##### ldap_ssl_ca_file\n\nThe path to the CA file in pem format which is used to certificate the server certificate\n\nDefault:\n\n##### dovecot_socket\n\nThe path to the Dovecot client authentication socket (eg. /run/dovecot/auth-client on Fedora). Radicale must have read / write access to the socket.\n\nDefault:\n\n##### lc_username\n\nСonvert username to lowercase, must be true for case-insensitive auth\nproviders like ldap, kerberos\n\nDefault: `False`\n\nNote: cannot be enabled together with `uc_username`\n\n##### uc_username\n\nСonvert username to uppercase, must be true for case-insensitive auth\nproviders like ldap, kerberos\n\nDefault: `False`\n\nNote: cannot be enabled together with `lc_username`\n\n##### strip_domain\n\nStrip domain from username\n\nDefault: `False`\n\n#### rights\n\n##### type\n\nThe backend that is used to check the access rights of collections.\n\nThe recommended backend is `owner_only`. If access to calendars\nand address books outside the home directory of users (that's `/USERNAME/`)\nis granted, clients won't detect these collections and will not show them to\nthe user. Choosing any other method is only useful if you access calendars and\naddress books directly via URL.\n\nAvailable backends:\n\n`authenticated`\n: Authenticated users can read and write everything.\n\n`owner_only`\n: Authenticated users can read and write their own collections under the path\n  */USERNAME/*.\n\n`owner_write`\n: Authenticated users can read everything and write their own collections under\n  the path */USERNAME/*.\n\n`from_file`\n: Load the rules from a file.\n\nDefault: `owner_only`\n\n##### file\n\nFile for the rights backend `from_file`.  See the\n[Rights](#authentication-and-rights) section.\n\n##### permit_delete_collection\n\n(New since 3.1.9)\n\nGlobal control of permission to delete complete collection (default: True)\n\nIf False it can be permitted by permissions per section with: D\nIf True it can be forbidden by permissions per section with: d\n\n##### permit_overwrite_collection\n\n(New since 3.3.0)\n\nGlobal control of permission to overwrite complete collection (default: True)\n\nIf False it can be permitted by permissions per section with: O\nIf True it can be forbidden by permissions per section with: o\n\n#### storage\n\n##### type\n\nThe backend that is used to store data.\n\nAvailable backends:\n\n`multifilesystem`\n: Stores the data in the filesystem.\n\n`multifilesystem_nolock`\n: The `multifilesystem` backend without file-based locking.\n  Must only be used with a single process.\n\nDefault: `multifilesystem`\n\n##### filesystem_folder\n\nFolder for storing local collections, created if not present.\n\nDefault: `/var/lib/radicale/collections`\n\n##### filesystem_cache_folder\n\nFolder for storing cache of local collections, created if not present\n\nDefault: (filesystem_folder)\n\nNote: only used in case of use_cache_subfolder_* options are active\n\nNote: can be used on multi-instance setup to cache files on local node (see below)\n\n##### use_cache_subfolder_for_item\n\nUse subfolder `collection-cache` for cache file structure of 'item' instead of inside collection folders, created if not present\n\nDefault: `False`\n\nNote: can be used on multi-instance setup to cache 'item' on local node\n\n##### use_cache_subfolder_for_history\n\nUse subfolder `collection-cache` for cache file structure of 'history' instead of inside collection folders, created if not present\n\nDefault: `False`\n\nNote: use only on single-instance setup, will break consistency with client in multi-instance setup\n\n##### use_cache_subfolder_for_synctoken\n\nUse subfolder `collection-cache` for cache file structure of 'sync-token' instead of inside collection folders, created if not present\n\nDefault: `False`\n\nNote: use only on single-instance setup, will break consistency with client in multi-instance setup\n\n##### use_mtime_and_size_for_item_cache\n\nUse last modifiction time (nanoseconds) and size (bytes) for 'item' cache instead of SHA256 (improves speed)\n\nDefault: `False`\n\nNote: check used filesystem mtime precision before enabling\n\nNote: conversion is done on access, bulk conversion can be done offline using storage verification option `radicale --verify-storage`\n\n##### folder_umask\n\nUse configured umask for folder creation (not applicable for OS Windows)\n\nDefault: (system-default, usual `0022`)\n\nUseful value: `0077` (user:rw group:- other:-) or `0027` (user:rw group:r other:-) or `0007` (user:rw group:rw other:-) or `0022` (user:rw group:r other:r)\n\n##### max_sync_token_age\n\nDelete sync-token that are older than the specified time. (seconds)\n\nDefault: `2592000`\n\n##### skip_broken_item\n\nSkip broken item instead of triggering an exception\n\nDefault: `True`\n\n##### hook\n\nCommand that is run after changes to storage. Take a look at the\n[Versioning with Git](#versioning-with-git) tutorial for an example.\n\nDefault:\n\nSupported placeholders:\n - `%(user)`: logged-in user\n\nCommand will be executed with base directory defined in `filesystem_folder` (see above)\n\n##### predefined_collections\n\nCreate predefined user collections\n\n Example:\n\n     {\n       \"def-addressbook\": {\n          \"D:displayname\": \"Personal Address Book\",\n          \"tag\": \"VADDRESSBOOK\"\n       },\n       \"def-calendar\": {\n          \"C:supported-calendar-component-set\": \"VEVENT,VJOURNAL,VTODO\",\n          \"D:displayname\": \"Personal Calendar\",\n          \"tag\": \"VCALENDAR\"\n       }\n     }\n\nDefault:\n\n#### web\n\n##### type\n\nThe backend that provides the web interface of Radicale.\n\nAvailable backends:\n\n`none`\n: Just shows the message \"Radicale works!\".\n\n`internal`\n: Allows creation and management of address books and calendars.\n\nDefault: `internal`\n\n#### logging\n\n##### level\n\nSet the logging level.\n\nAvailable levels: **debug**, **info**, **warning**, **error**, **critical**\n\nDefault: `warning`\n\n##### mask_passwords\n\nDon't include passwords in logs.\n\nDefault: `True`\n\n##### bad_put_request_content\n\nLog bad PUT request content (for further diagnostics)\n\nDefault: `False`\n\n##### backtrace_on_debug\n\nLog backtrace on level=debug\n\nDefault: `False`\n\n##### request_header_on_debug\n\nLog request on level=debug\n\nDefault: `False`\n\n##### request_content_on_debug\n\nLog request on level=debug\n\nDefault: `False`\n\n##### response_content_on_debug\n\nLog response on level=debug\n\nDefault: `False`\n\n##### rights_rule_doesnt_match_on_debug\n\nLog rights rule which doesn't match on level=debug\n\nDefault: `False`\n\n##### storage_cache_actions_on_debug\n\nLog storage cache actions on level=debug\n\nDefault: `False`\n\n#### headers\n\nIn this section additional HTTP headers that are sent to clients can be\nspecified.\n\nAn example to relax the same-origin policy:\n\n```ini\nAccess-Control-Allow-Origin = *\n```\n\n#### hook\n##### type\n\nHook binding for event changes and deletion notifications.\n\nAvailable types:\n\n`none`\n: Disabled. Nothing will be notified.\n\n`rabbitmq`\n: Push the message to the rabbitmq server.\n\nDefault: `none`\n\n##### rabbitmq_endpoint\n\nEnd-point address for rabbitmq server.\nEx: amqp://user:password@localhost:5672/\n\nDefault:\n\n##### rabbitmq_topic\n\nRabbitMQ topic to publish message.\n\nDefault:\n\n##### rabbitmq_queue_type\n\nRabbitMQ queue type for the topic.\n\nDefault: classic\n\n#### reporting\n##### max_freebusy_occurrence\n\nWhen returning a free-busy report, a list of busy time occurrences are\ngenerated based on a given time frame. Large time frames could\ngenerate a lot of occurrences based on the time frame supplied. This\nsetting limits the lookup to prevent potential denial of service\nattacks on large time frames. If the limit is reached, an HTTP error\nis thrown instead of returning the results.\n\nDefault: 10000\n\n## Supported Clients\n\nRadicale has been tested with:\n\n* [Android](https://android.com/) with\n  [DAVx⁵](https://www.davx5.com/) (formerly DAVdroid),\n* [OneCalendar](https://www.onecalendar.nl/)\n* [GNOME Calendar](https://wiki.gnome.org/Apps/Calendar),\n  [Contacts](https://wiki.gnome.org/Apps/Contacts) and\n  [Evolution](https://wiki.gnome.org/Apps/Evolution)\n* [Mozilla Thunderbird](https://www.mozilla.org/thunderbird/) with\n  [CardBook](https://addons.mozilla.org/thunderbird/addon/cardbook/) and\n  [Lightning](https://www.mozilla.org/projects/calendar/)\n* [InfCloud](https://www.inf-it.com/open-source/clients/infcloud/),\n  [CalDavZAP](https://www.inf-it.com/open-source/clients/caldavzap/) and\n  [CardDavMATE](https://www.inf-it.com/open-source/clients/carddavmate/)\n\nMany clients do not support the creation of new calendars and address books.\nYou can use Radicale's web interface\n(e.g. <http://localhost:5232>) to create and manage address books and calendars.\n\nIn some clients you can just enter the URL of the Radicale server\n(e.g. `http://localhost:5232`) and your username. In others, you have to\nenter the URL of the collection directly\n(e.g. `http://localhost:5232/user/calendar`).\n\nSome clients (notably macOS's Calendar.app) may silently refuse to include\naccount credentials over unsecured HTTP, leading to unexpected authentication\nfailures. In these cases, you want to make sure the Radicale server is\n[accessible over HTTPS](#ssl).\n\n#### DAVx⁵\n\nEnter the URL of the Radicale server (e.g. `http://localhost:5232`) and your\nusername. DAVx⁵ will show all existing calendars and address books and you\ncan create new.\n\n#### OneCalendar\n\nWhen adding account, select CalDAV account type, then enter user name, password and the\nRadicale server (e.g. `https://yourdomain:5232`). OneCalendar will show all\nexisting calendars and (FIXME: address books), you need to select which ones\nyou want to see. OneCalendar supports many other server types too.\n\n#### GNOME Calendar, Contacts\n\nGNOME 46 added CalDAV and CardDAV support to _GNOME Online Accounts_.\n\nOpen GNOME Settings, navigate to _Online Accounts_ > _Connect an Account_ > _Calendar, Contacts and Files_. Enter the URL (e.g. `https://example.com/radicale`) and your credentials then click _Sign In_. In the pop-up dialog, turn off _Files_. After adding Radicale in _GNOME Online Accounts_, it should be available in GNOME Contacts and GNOME Calendar.\n\n#### Evolution\n\nIn **Evolution** add a new calendar and address book respectively with WebDAV.\nEnter the URL of the Radicale server (e.g. `http://localhost:5232`) and your\nusername. Clicking on the search button will list the existing calendars and\naddress books.\n\nAdding CalDAV and CardDAV accounts in Evolution will automatically make them available in GNOME Contacts and GNOME Calendar.\n\n#### Thunderbird\n\nAdd a new calendar on the network. Enter your username and the URL of the\nRadicale server (e.g. `http://localhost:5232`). After asking for your password,\nit will list the existing calendars.\n\n##### Adress books with CardBook add-on\n\nAdd a new address book on the network with CardDAV. Enter the URL of the\nRadicale server (e.g. `http://localhost:5232`) and your username and password.\nIt will list your existing address books.\n\n#### InfCloud, CalDavZAP and CardDavMATE\n\nYou can integrate InfCloud into Radicale's web interface with\n[RadicaleInfCloud](https://github.com/Unrud/RadicaleInfCloud). No additional\nconfiguration is required.\n\nSet the URL of the Radicale server in ``config.js``. If **InfCloud** is not\nhosted on the same server and port as Radicale, the browser will deny access to\nthe Radicale server, because of the\n[same-origin policy](https://en.wikipedia.org/wiki/Same-origin_policy).\nYou have to add additional HTTP header in the `headers` section of Radicale's\nconfiguration. The documentation of **InfCloud** has more details on this.\n\n#### Command line\n\nThis is not the recommended way of creating and managing your calendars and\naddress books. Use Radicale's web interface or a client with support for it\n(e.g. **DAVx⁵**).\n\nTo create a new calendar run something like:\n\n```bash\n$ curl -u user -X MKCOL 'http://localhost:5232/user/calendar' --data \\\n'<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<create xmlns=\"DAV:\" xmlns:C=\"urn:ietf:params:xml:ns:caldav\" xmlns:I=\"http://apple.com/ns/ical/\">\n  <set>\n    <prop>\n      <resourcetype>\n        <collection />\n        <C:calendar />\n      </resourcetype>\n      <C:supported-calendar-component-set>\n        <C:comp name=\"VEVENT\" />\n        <C:comp name=\"VJOURNAL\" />\n        <C:comp name=\"VTODO\" />\n      </C:supported-calendar-component-set>\n      <displayname>Calendar</displayname>\n      <C:calendar-description>Example calendar</C:calendar-description>\n      <I:calendar-color>#ff0000ff</I:calendar-color>\n    </prop>\n  </set>\n</create>'\n```\n\nTo create a new address book run something like:\n\n```bash\n$ curl -u user -X MKCOL 'http://localhost:5232/user/addressbook' --data \\\n'<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<create xmlns=\"DAV:\" xmlns:CR=\"urn:ietf:params:xml:ns:carddav\">\n  <set>\n    <prop>\n      <resourcetype>\n        <collection />\n        <CR:addressbook />\n      </resourcetype>\n      <displayname>Address book</displayname>\n      <CR:addressbook-description>Example address book</CR:addressbook-description>\n    </prop>\n  </set>\n</create>'\n```\n\nThe collection `/USERNAME` will be created automatically, when the user\nauthenticates to Radicale for the first time. Clients with automatic discovery\nof collections will only show calendars and address books that are direct\nchildren of the path `/USERNAME/`.\n\nDelete the collections by running something like:\n\n```bash\ncurl -u user -X DELETE 'http://localhost:5232/user/calendar'\n```\n\nNote: requires config/option `permit_delete_collection = True`\n\n### Authentication and Rights\n\nThis section describes the format of the rights file for the `from_file`\nauthentication backend. The configuration option `file` in the `rights`\nsection must point to the rights file.\n\nThe recommended rights method is `owner_only`. If access to calendars\nand address books outside the home directory of users (that's `/USERNAME/`)\nis granted, clients won't detect these collections and will not show them to\nthe user.\nThis is only useful if you access calendars and address books directly via URL.\n\nAn example rights file:\n\n```ini\n# Allow reading root collection for authenticated users\n[root]\nuser: .+\ncollection:\npermissions: R\n\n# Allow reading and writing principal collection (same as username)\n[principal]\nuser: .+\ncollection: {user}\npermissions: RW\n\n# Allow reading and writing calendars and address books that are direct\n# children of the principal collection\n[calendars]\nuser: .+\ncollection: {user}/[^/]+\npermissions: rw\n```\n\nThe titles of the sections are ignored (but must be unique). The keys `user`\nand `collection` contain regular expressions, that are matched against the\nusername and the path of the collection. Permissions from the first\nmatching section are used. If no section matches, access gets denied.\n\nThe username is empty for anonymous users. Therefore, the regex `.+` only\nmatches authenticated users and `.*` matches everyone (including anonymous\nusers).\n\nThe path of the collection is separated by `/` and has no leading or trailing\n`/`. Therefore, the path of the root collection is empty.\n\nIn the `collection` regex you can use `{user}` and get groups from the `user`\nregex with `{0}`, `{1}`, etc.\n\nIn consequence of the parameter substitution you have to write `{{` and `}}`\nif you want to use regular curly braces in the `user` and `collection` regexes.\n\nThe following `permissions` are recognized:\n\n* **R:** read collections (excluding address books and calendars)\n* **r:** read address book and calendar collections\n* **i:** subset of **r** that only allows direct access via HTTP method GET\n  (CalDAV/CardDAV is susceptible to expensive search requests)\n* **W:** write collections (excluding address books and calendars)\n* **w:** write address book and calendar collections\n* **D:** permit delete of collection in case permit_delete_collection=False\n* **d:** forbid delete of collection in case permit_delete_collection=True\n* **O:** permit overwrite of collection in case permit_overwrite_collection=False\n* **o:** forbid overwrite of collection in case permit_overwrite_collection=True\n\n### Storage\n\nThis document describes the layout and format of the file system storage\n(`multifilesystem` backend).\n\nIt's safe to access and manipulate the data by hand or with scripts.\nScripts can be invoked manually, periodically (e.g. with\n[cron](https://manpages.debian.org/unstable/cron/cron.8.en.html)) or after each\nchange to the storage with the configuration option `hook` in the `storage`\nsection (e.g. [Versioning with Git](#versioning-with-git)).\n\n#### Layout\n\nThe file system contains the following files and folders:\n\n* `.Radicale.lock`: The lock file for locking the storage.\n* `collection-root`: This folder contains all collections and items.\n\nA collection is represented by a folder. This folder may contain the file\n`.Radicale.props` with all WebDAV properties of the collection encoded\nas [JSON](https://en.wikipedia.org/wiki/JSON).\n\nAn item is represented by a file containing the iCalendar data.\n\nAll files and folders, whose names start with a dot but not `.Radicale.`\n(internal files) are ignored.\n\nIf you introduce syntax errors in any of the files, all requests that access\nthe faulty data will fail. The logging output should contain the names of the\nculprits.\n\nCaches and sync-tokens are stored in the `.Radicale.cache` folder inside of\ncollections.\nThis folder may be created or modified, while the storage is locked for shared\naccess.\nIn theory, it should be safe to delete the folder. Caches will be recreated\nautomatically and clients will be told that their sync-token isn't valid\nanymore.\n\nYou may encounter files or folders that start with `.Radicale.tmp-`.\nRadicale uses them for atomic creation and deletion of files and folders.\nThey should be deleted after requests are finished but it's possible that\nthey are left behind when Radicale or the computer crashes.\nIt's safe to delete them.\n\n#### Locking\n\nWhen the data is accessed by hand or by an externally invoked script,\nthe storage must be locked. The storage can be locked for exclusive or\nshared access. It prevents Radicale from reading or writing the file system.\nThe storage is locked with exclusive access while the `hook` runs.\n\n##### Linux shell scripts\n\nUse the\n[flock](https://manpages.debian.org/unstable/util-linux/flock.1.en.html)\nutility.\n\n```bash\n# Exclusive\n$ flock --exclusive /path/to/storage/.Radicale.lock COMMAND\n# Shared\n$ flock --shared /path/to/storage/.Radicale.lock COMMAND\n```\n\n##### Linux and MacOS\n\nUse the\n[flock](https://manpages.debian.org/unstable/manpages-dev/flock.2.en.html)\nsyscall. Python provides it in the\n[fcntl](https://docs.python.org/3/library/fcntl.html#fcntl.flock) module.\n\n##### Windows\n\nUse\n[LockFile](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365202%28v=vs.85%29.aspx)\nfor exclusive access or\n[LockFileEx](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365203%28v=vs.85%29.aspx)\nwhich also supports shared access. Setting `nNumberOfBytesToLockLow` to `1`\nand `nNumberOfBytesToLockHigh` to `0` works.\n\n#### Manually creating collections\n\nTo create a new collection, you have to create the corresponding folder in the\nfile system storage (e.g. `collection-root/user/calendar`).\nTo tell Radicale and clients that the collection is a calendar, you have to\ncreate the file ``.Radicale.props`` with the following content in the folder:\n\n```json\n{\"tag\": \"VCALENDAR\"}\n```\n\nThe calendar is now available at the URL path ``/user/calendar``.\nFor address books the file must contain:\n\n```json\n{\"tag\": \"VADDRESSBOOK\"}\n```\n\nCalendar and address book collections must not have any child collections.\nClients with automatic discovery of collections will only show calendars and\naddress books that are direct children of the path `/USERNAME/`.\n\nDelete collections by deleting the corresponding folders.\n\n### Logging overview\n\nRadicale logs to `stderr`. The verbosity of the log output can be controlled\nwith `--debug` command line argument or the `level` configuration option in\nthe [logging](#logging) section.\n\n### Architecture\n\nRadicale is a small piece of software, but understanding it is not as\neasy as it seems. But don't worry, reading this short section is enough to\nunderstand what a CalDAV/CardDAV server is, and how Radicale's code is\norganized.\n\n#### Protocol overview\n\nHere is a simple overview of the global architecture for reaching a calendar or\nan address book through network:\n\n| Part     | Layer                    | Protocol or Format                 |\n|----------|--------------------------|------------------------------------|\n| Server   | Calendar/Contact Storage | iCal/vCard                         |\n| ''       | Calendar/Contact Server  | CalDAV/CardDAV Server              |\n| Transfer | Network                  | CalDAV/CardDAV (HTTP + TLS)        |\n| Client   | Calendar/Contact Client  | CalDAV/CardDAV Client              |\n| ''       | GUI                      | Terminal, GTK, Web interface, etc. |\n\nRadicale is **only the server part** of this architecture.\n\nPlease note that:\n\n* CalDAV and CardDAV are superset protocols of WebDAV,\n* WebDAV is a superset protocol of HTTP.\n\nRadicale being a CalDAV/CardDAV server, it also can be seen as a special WebDAV\nand HTTP server.\n\nRadicale is **not the client part** of this architecture. It means that\nRadicale never draws calendars, address books, events and contacts on the\nscreen. It only stores them and give the possibility to share them online with\nother people.\n\nIf you want to see or edit your events and your contacts, you have to use\nanother software called a client, that can be a \"normal\" applications with\nicons and buttons, a terminal or another web application.\n\n#### Code Architecture\n\nThe ``radicale`` package offers the following modules.\n\n`__init__`\n: Contains the entry point for WSGI.\n\n`__main__`\n: Provides the entry point for the ``radicale`` executable and\n  includes the command line parser. It loads configuration files from\n  the default (or specified) paths and starts the internal server.\n\n`app`\n: This is the core part of Radicale, with the code for the CalDAV/CardDAV\n  server. The code managing the different HTTP requests according to the\n  CalDAV/CardDAV specification can be found here.\n\n`auth`\n: Used for authenticating users based on username and password, mapping\n  usernames to internal users and optionally retrieving credentials from\n  the environment.\n\n`config`\n: Contains the code for managing configuration and loading settings from files.\n\n`ìtem`\n: Internal representation of address book and calendar entries. Based on\n  [VObject](https://github.com/py-vobject/vobject/).\n\n`log`\n: The logger for Radicale based on the default Python logging module.\n\n`rights`\n: This module is used by Radicale to manage access rights to collections,\n  address books and calendars.\n\n`server`\n: The integrated HTTP server for standalone use.\n\n`storage`\n: This module contains the classes representing collections in Radicale and\n  the code for storing and loading them in the filesystem.\n\n`web`\n: This module contains the web interface.\n\n`utils`\n: Contains general helper functions.\n\n`httputils`\n: Contains helper functions for working with HTTP.\n\n`pathutils`\n: Helper functions for working with paths and the filesystem.\n\n`xmlutils`\n: Helper functions for working with the XML part of CalDAV/CardDAV requests\n  and responses. It's based on the ElementTree XML API.\n\n### Plugins\n\nRadicale can be extended by plugins for authentication, rights management and\nstorage. Plugins are **python** modules.\n\n#### Getting started\n\nTo get started we walk through the creation of a simple authentication\nplugin, that accepts login attempts with a static password.\n\nThe easiest way to develop and install **python** modules is\n[Distutils](https://docs.python.org/3/distutils/setupscript.html).\nFor a minimal setup create the file `setup.py` with the following content\nin an empty folder:\n\n```python\n#!/usr/bin/env python3\n\nfrom distutils.core import setup\n\nsetup(name=\"radicale_static_password_auth\",\n      packages=[\"radicale_static_password_auth\"])\n```\n\nIn the same folder create the sub-folder `radicale_static_password_auth`.\nThe folder must have the same name as specified in `packages` above.\n\nCreate the file `__init__.py` in the `radicale_static_password_auth` folder\nwith the following content:\n\n```python\nfrom radicale.auth import BaseAuth\nfrom radicale.log import logger\n\nPLUGIN_CONFIG_SCHEMA = {\"auth\": {\n    \"password\": {\"value\": \"\", \"type\": str}}}\n\n\nclass Auth(BaseAuth):\n    def __init__(self, configuration):\n        super().__init__(configuration.copy(PLUGIN_CONFIG_SCHEMA))\n\n    def login(self, login, password):\n        # Get password from configuration option\n        static_password = self.configuration.get(\"auth\", \"password\")\n        # Check authentication\n        logger.info(\"Login attempt by %r with password %r\",\n                    login, password)\n        if password == static_password:\n            return login\n        return \"\"\n```\n\nInstall the python module by running the following command in the same folder\nas `setup.py`:\n\n```bash\npython3 -m pip install .\n```\n\nTo make use this great creation in Radicale, set the configuration option\n`type` in the `auth` section to `radicale_static_password_auth`:\n\n```ini\n[auth]\ntype = radicale_static_password_auth\npassword = secret\n```\n\nYou can uninstall the module with:\n\n```bash\npython3 -m pip uninstall radicale_static_password_auth\n```\n\n#### Authentication plugins\n\nThis plugin type is used to check login credentials.\nThe module must contain a class `Auth` that extends\n`radicale.auth.BaseAuth`. Take a look at the file `radicale/auth/__init__.py`\nin Radicale's source code for more information.\n\n#### Rights management plugins\n\nThis plugin type is used to check if a user has access to a path.\nThe module must contain a class `Rights` that extends\n`radicale.rights.BaseRights`. Take a look at the file\n`radicale/rights/__init__.py` in Radicale's source code for more information.\n\n#### Web plugins\n\nThis plugin type is used to provide the web interface for Radicale.\nThe module must contain a class `Web` that extends\n`radicale.web.BaseWeb`. Take a look at the file `radicale/web/__init__.py` in\nRadicale's source code for more information.\n\n#### Storage plugins\n\nThis plugin is used to store collections and items.\nThe module must contain a class `Storage` that extends\n`radicale.storage.BaseStorage`. Take a look at the file\n`radicale/storage/__init__.py` in Radicale's source code for more information.\n\n## Contribute\n\n#### Report Bugs\n\nFound a bug? Want a new feature? Report a new issue on the\n[Radicale bug-tracker](https://github.com/Kozea/Radicale/issues).\n\n#### Hack\n\nInterested in hacking? Feel free to clone the\n[git repository on GitHub](https://github.com/Kozea/Radicale) if you want to\nadd new features, fix bugs or update the documentation.\n\n#### Documentation\n\nTo change or complement the documentation create a pull request to\n[DOCUMENTATION.md](https://github.com/Kozea/Radicale/blob/master/DOCUMENTATION.md).\n\n## Download\n\n#### PyPI\n\nRadicale is [available on PyPI](https://pypi.python.org/pypi/Radicale/). To\ninstall, just type as superuser:\n\n```bash\npython3 -m pip install --upgrade radicale\n```\n\n#### Git Repository\n\nIf you want the development version of Radicale, take a look at the\n[git repository on GitHub](https://github.com/Kozea/Radicale/), or install it\ndirectly with:\n\n```bash\npython3 -m pip install --upgrade https://github.com/Kozea/Radicale/archive/master.tar.gz\n```\n\nYou can also download the content of the repository as an\n[archive](https://github.com/Kozea/Radicale/tarball/master).\n\n#### Source Packages\n\nYou can find the source packages of all releases on\n[GitHub](https://github.com/Kozea/Radicale/releases).\n\n#### Linux Distribution Packages\n\nRadicale has been packaged for:\n\n* [ArchLinux](https://www.archlinux.org/packages/community/any/radicale/) by\n  David Runge\n* [Debian](http://packages.debian.org/radicale) by Jonas Smedegaard\n* [Gentoo](https://packages.gentoo.org/packages/www-apps/radicale)\n  by René Neumann, Maxim Koltsov and Manuel Rüger\n* [Fedora/EnterpriseLinux](https://src.fedoraproject.org/rpms/radicale) by Jorti\n  and Peter Bieringer\n* [Mageia](http://madb.mageia.org/package/show/application/0/name/radicale)\n  by Jani Välimaa\n* [OpenBSD](http://openports.se/productivity/radicale) by Sergey Bronnikov,\n  Stuart Henderson and Ian Darwin\n* [openSUSE](http://software.opensuse.org/package/Radicale?search_term=radicale)\n  by Ákos Szőts and Rueckert\n* [PyPM](http://code.activestate.com/pypm/radicale/)\n* [Slackware](http://schoepfer.info/slackware.xhtml#packages-network) by\n  Johannes Schöpfer\n* [Trisquel](http://packages.trisquel.info/search?searchon=names&keywords=radicale)\n* [Ubuntu](http://packages.ubuntu.com/radicale) by the MOTU and Jonas\n  Smedegaard\n\nRadicale is also\n[available on Cloudron](https://cloudron.io/button.html?app=org.radicale.cloudronapp2)\nand has a Dockerfile.\n\nIf you are interested in creating packages for other Linux distributions, read\nthe [\"Contribute\" section](#contribute).\n\n## About\n\n#### Main Goals\n\nRadicale is a complete calendar and contact storing and manipulating\nsolution. It can store multiple calendars and multiple address books.\n\nCalendar and contact manipulation is available from both local and distant\naccesses, possibly limited through authentication policies.\n\nIt aims to be a lightweight solution, easy to use, easy to install, easy to\nconfigure. As a consequence, it requires few software dependencies and is\npreconfigured to work out-of-the-box.\n\nRadicale is written in Python. It runs on most of the UNIX-like platforms\n(Linux, \\*BSD, macOS) and Windows. It is free and open-source software.\n\n#### What Radicale Will Never Be\n\nRadicale is a server, not a client. No interfaces will be created to work with\nthe server.\n\nCalDAV and CardDAV are not perfect protocols. We think that their main problem\nis their complexity, that is why we decided not to implement the whole standard\nbut just enough to understand some of its client-side implementations.\n\nCalDAV and CardDAV are the best open standards available, and they are quite\nwidely used by both clients and servers. We decided to use it, and we will not\nuse another one.\n\n#### Technical Choices\n\nImportant global development choices have been decided before writing\ncode. They are very useful to understand why the Radicale Project is different\nfrom other CalDAV and CardDAV servers, and why features are included or not in\nthe code.\n\n##### Oriented to Calendar and Contact User Agents\n\nCalendar and contact servers work with calendar and contact clients, using a\ndefined protocol. CalDAV and CardDAV are good protocols, covering lots of\nfeatures and use cases, but it is quite hard to implement fully.\n\nSome calendar servers have been created to follow the CalDAV and CardDAV RFCs\nas much as possible: [Davical](http://www.davical.org/),\n[Baïkal](http://sabre.io/baikal/) and\n[Darwin Calendar Server](http://trac.calendarserver.org/), for example, are\nmuch more respectful of CalDAV and CardDAV and can be used with many clients.\nThey are very good choices if you want to develop and test new CalDAV clients,\nor if you have a possibly heterogeneous list of user agents.\n\nEven if it tries it best to follow the RFCs, Radicale does not and **will not**\nblindly implement the CalDAV and CardDAV standards. It is mainly designed to\nsupport the CalDAV and CardDAV implementations of different clients.\n\n##### Simple\n\nRadicale is designed to be simple to install, simple to configure, simple to\nuse.\n\nThe installation is very easy, particularly with Linux: one dependency, no\nsuperuser rights needed, no configuration required, no database. Installing and\nlaunching the main script out-of-the-box, as a normal user, are often the only\nsteps to have a simple remote calendar and contact access.\n\nContrary to other servers that are often complicated, require high privileges\nor need a strong configuration, the Radicale Server can (sometimes, if not\noften) be launched in a couple of minutes, if you follow the\n[tutorial](#simple-5-minute-setup).\n\n##### Lazy\n\nThe CalDAV RFC defines what must be done, what can be done and what cannot be\ndone. Many violations of the protocol are totally defined and behaviors are\ngiven in such cases.\n\nRadicale often assumes that the clients are perfect and that protocol\nviolations do not exist. That is why most of the errors in client requests have\nundetermined consequences for the lazy server that can reply good answers, bad\nanswers, or even no answer.\n\n#### History\n\nRadicale has been started as a (free topic) stupid school project replacing\nanother (assigned topic) even more stupid school project.\n\nAt the beginning, it was just a proof-of-concept. The main goal was to write a\nsmall, dirty and simple CalDAV server working with Lightning, using no external\nlibraries. That's how we created a piece of code that's (quite) easy to\nunderstand, to use and to hack.\n\nThe [first lines](https://github.com/Kozea/Radicale/commit/b1591aea) have been\nadded to the SVN (!) repository as I was drinking (many) beers at the very end\nof 2008 (Python 2.6 and 3.0 were just released). It's now packaged for a\ngrowing number of Linux distributions.\n\nAnd that was fun going from here to there thanks to you!\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.9453125,
          "content": "# This file is intended to be used apart from the containing source code tree.\n\nFROM python:3-alpine AS builder\n\n# Version of Radicale (e.g. v3)\nARG VERSION=master\n\n# Optional dependencies (e.g. bcrypt or ldap)\nARG DEPENDENCIES=bcrypt\n\nRUN apk add --no-cache --virtual gcc libffi-dev musl-dev \\\n    && python -m venv /app/venv \\\n    && /app/venv/bin/pip install --no-cache-dir \"Radicale[${DEPENDENCIES}] @ https://github.com/Kozea/Radicale/archive/${VERSION}.tar.gz\"\n\n\nFROM python:3-alpine\n\nWORKDIR /app\n\nRUN addgroup -g 1000 radicale \\\n    && adduser radicale --home /var/lib/radicale --system --uid 1000 --disabled-password -G radicale \\\n    && apk add --no-cache ca-certificates openssl\n\nCOPY --chown=radicale:radicale --from=builder /app/venv /app\n\n# Persistent storage for data\nVOLUME /var/lib/radicale\n# TCP port of Radicale\nEXPOSE 5232\n# Run Radicale\nENTRYPOINT [ \"/app/bin/python\", \"/app/bin/radicale\"]\nCMD [\"--hosts\", \"0.0.0.0:5232,[::]:5232\"]\n\nUSER radicale\n"
        },
        {
          "name": "Dockerfile.dev",
          "type": "blob",
          "size": 0.7626953125,
          "content": "FROM python:3-alpine AS builder\n\n# Optional dependencies (e.g. bcrypt or ldap)\nARG DEPENDENCIES=bcrypt\n\nCOPY . /app\n\nWORKDIR /app\n\nRUN apk add --no-cache --virtual gcc libffi-dev musl-dev \\\n    && python -m venv /app/venv \\\n    && /app/venv/bin/pip install --no-cache-dir .[${DEPENDENCIES}]\n\nFROM python:3-alpine\n\nWORKDIR /app\n\nRUN addgroup -g 1000 radicale \\\n    && adduser radicale --home /var/lib/radicale --system --uid 1000 --disabled-password -G radicale \\\n    && apk add --no-cache ca-certificates openssl\n\nCOPY --chown=radicale:radicale --from=builder /app/venv /app\n\n# Persistent storage for data\nVOLUME /var/lib/radicale\n# TCP port of Radicale\nEXPOSE 5232\n# Run Radicale\nENTRYPOINT [ \"/app/bin/python\", \"/app/bin/radicale\"]\nCMD [\"--hosts\", \"0.0.0.0:5232\"]\n\nUSER radicale\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1005859375,
          "content": "include CHANGELOG.md COPYING.md DOCUMENTATION.md README.md\ninclude config rights\ninclude radicale.wsgi\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.3232421875,
          "content": "# Radicale\n\n[![Test](https://github.com/Kozea/Radicale/actions/workflows/test.yml/badge.svg?branch=master)](https://github.com/Kozea/Radicale/actions/workflows/test.yml)\n[![Coverage Status](https://coveralls.io/repos/github/Kozea/Radicale/badge.svg?branch=master)](https://coveralls.io/github/Kozea/Radicale?branch=master)\n\nRadicale is a small but powerful CalDAV (calendars, to-do lists) and CardDAV\n(contacts) server, that:\n\n* Shares calendars and contact lists through CalDAV, CardDAV and HTTP.\n* Supports events, todos, journal entries and business cards.\n* Works out-of-the-box, no complicated setup or configuration required.\n* Can limit access by authentication.\n* Can secure connections with TLS.\n* Works with many CalDAV and CardDAV clients\n* Stores all data on the file system in a simple folder structure.\n* Can be extended with plugins.\n* Is GPLv3-licensed free software.\n\nFor the complete documentation, please visit\n[Radicale master Documentation](https://radicale.org/master.html).\n\nAdditional hints can be found\n* [Radicale Wiki](https://github.com/Kozea/Radicale/wiki)\n* [Radicale Issues](https://github.com/Kozea/Radicale/issues)\n* [Radicale Discussions](https://github.com/Kozea/Radicale/discussions)\n\nBefore reporting an issue, please check\n* [Radicale Wiki / Reporting Issues](https://github.com/Kozea/Radicale/wiki/Reporting-Issues)\n"
        },
        {
          "name": "config",
          "type": "blob",
          "size": 7.3017578125,
          "content": "# -*- mode: conf -*-\n# vim:ft=cfg\n\n# Config file for Radicale - A simple calendar server\n#\n# Place it into /etc/radicale/config (global)\n# or ~/.config/radicale/config (user)\n#\n# The current values are the default ones\n\n\n[server]\n\n# CalDAV server hostnames separated by a comma\n# IPv4 syntax: address:port\n# IPv6 syntax: [address]:port\n# Hostname syntax (using \"getaddrinfo\" to resolve to IPv4/IPv6 adress(es)): hostname:port\n# For example: 0.0.0.0:9999, [::]:9999, localhost:9999\n#hosts = localhost:5232\n\n# Max parallel connections\n#max_connections = 8\n\n# Max size of request body (bytes)\n#max_content_length = 100000000\n\n# Socket timeout (seconds)\n#timeout = 30\n\n# SSL flag, enable HTTPS protocol\n#ssl = False\n\n# SSL certificate path\n#certificate = /etc/ssl/radicale.cert.pem\n\n# SSL private key\n#key = /etc/ssl/radicale.key.pem\n\n# CA certificate for validating clients. This can be used to secure\n# TCP traffic between Radicale and a reverse proxy\n#certificate_authority =\n\n# SSL protocol, secure configuration: ALL -SSLv3 -TLSv1 -TLSv1.1\n#protocol = (default)\n\n# SSL ciphersuite, secure configuration: DHE:ECDHE:-NULL:-SHA (see also \"man openssl-ciphers\")\n#ciphersuite = (default)\n\n\n[encoding]\n\n# Encoding for responding requests\n#request = utf-8\n\n# Encoding for storing local collections\n#stock = utf-8\n\n\n[auth]\n\n# Authentication method\n# Value: none | htpasswd | remote_user | http_x_remote_user | ldap | denyall\n#type = none\n\n# Cache logins for until expiration time\n#cache_logins = false\n\n# Expiration time for caching successful logins in seconds\n#cache_successful_logins_expiry = 15\n\n## Expiration time of caching failed logins in seconds\n#cache_failed_logins_expiry = 90\n\n# URI to the LDAP server\n#ldap_uri = ldap://localhost\n\n# The base DN where the user accounts have to be searched\n#ldap_base = ##BASE_DN##\n\n# The reader DN of the LDAP server\n#ldap_reader_dn = CN=ldapreader,CN=Users,##BASE_DN##\n\n# Password of the reader DN\n#ldap_secret = ldapreader-secret\n\n# Path of the file containing password of the reader DN\n#ldap_secret_file = /run/secrets/ldap_password\n\n# the attribute to read the group memberships from in the user's LDAP entry (default: not set)\n#ldap_groups_attribute = memberOf\n\n# The filter to find the DN of the user. This filter must contain a python-style placeholder for the login\n#ldap_filter = (&(objectClass=person)(uid={0}))\n\n# the attribute holding the value to be used as username after authentication\n#ldap_user_attribute = cn\n\n# Use ssl on the ldap connection\n#ldap_use_ssl = False\n\n# The certificate verification mode. NONE, OPTIONAL, default is REQUIRED\n#ldap_ssl_verify_mode = REQUIRED\n\n# The path to the CA file in pem format which is used to certificate the server certificate\n#ldap_ssl_ca_file =\n\n# Htpasswd filename\n#htpasswd_filename = /etc/radicale/users\n\n# Htpasswd encryption method\n# Value: plain | bcrypt | md5 | sha256 | sha512 | autodetect\n# bcrypt requires the installation of 'bcrypt' module.\n#htpasswd_encryption = autodetect\n\n# Enable caching of htpasswd file based on size and mtime_ns\n#htpasswd_cache = False\n\n# Incorrect authentication delay (seconds)\n#delay = 1\n\n# Message displayed in the client when a password is needed\n#realm = Radicale - Password Required\n\n# Convert username to lowercase, must be true for case-insensitive auth providers\n#lc_username = False\n\n# Strip domain name from username\n#strip_domain = False\n\n\n[rights]\n\n# Rights backend\n# Value: authenticated | owner_only | owner_write | from_file\n#type = owner_only\n\n# File for rights management from_file\n#file = /etc/radicale/rights\n\n# Permit delete of a collection (global)\n#permit_delete_collection = True\n\n# Permit overwrite of a collection (global)\n#permit_overwrite_collection = True\n\n\n[storage]\n\n# Storage backend\n# Value: multifilesystem | multifilesystem_nolock\n#type = multifilesystem\n\n# Folder for storing local collections, created if not present\n#filesystem_folder = /var/lib/radicale/collections\n\n# Folder for storing cache of local collections, created if not present\n# Note: only used in case of use_cache_subfolder_* options are active\n# Note: can be used on multi-instance setup to cache files on local node (see below)\n#filesystem_cache_folder = (filesystem_folder)\n\n# Use subfolder 'collection-cache' for 'item' cache file structure instead of inside collection folder\n# Note: can be used on multi-instance setup to cache 'item' on local node\n#use_cache_subfolder_for_item = False\n\n# Use subfolder 'collection-cache' for 'history' cache file structure instead of inside collection folder\n# Note: use only on single-instance setup, will break consistency with client in multi-instance setup\n#use_cache_subfolder_for_history = False\n\n# Use subfolder 'collection-cache' for 'sync-token' cache file structure instead of inside collection folder\n# Note: use only on single-instance setup, will break consistency with client in multi-instance setup\n#use_cache_subfolder_for_synctoken = False\n\n# Use last modifiction time (nanoseconds) and size (bytes) for 'item' cache instead of SHA256 (improves speed)\n# Note: check used filesystem mtime precision before enabling\n# Note: conversion is done on access, bulk conversion can be done offline using storage verification option: radicale --verify-storage\n#use_mtime_and_size_for_item_cache = False\n\n# Use configured umask for folder creation (not applicable for OS Windows)\n# Useful value: 0077 | 0027 | 0007 | 0022\n#folder_umask = (system default, usual 0022)\n\n# Delete sync token that are older (seconds)\n#max_sync_token_age = 2592000\n\n# Skip broken item instead of triggering an exception\n#skip_broken_item = True\n\n# Command that is run after changes to storage, default is emtpy\n#  Supported placeholders:\n#   %(user): logged-in user\n#  Command will be executed with base directory defined in filesystem_folder\n#  For \"git\" check DOCUMENTATION.md for bootstrap instructions\n# Example: git add -A && (git diff --cached --quiet || git commit -m \"Changes by \\\"%(user)s\\\"\")\n#hook =\n\n# Create predefined user collections\n#\n# json format:\n#\n#  {\n#    \"def-addressbook\": {\n#       \"D:displayname\": \"Personal Address Book\",\n#       \"tag\": \"VADDRESSBOOK\"\n#    },\n#    \"def-calendar\": {\n#       \"C:supported-calendar-component-set\": \"VEVENT,VJOURNAL,VTODO\",\n#       \"D:displayname\": \"Personal Calendar\",\n#       \"tag\": \"VCALENDAR\"\n#    }\n#  }\n#\n#predefined_collections =\n\n\n[web]\n\n# Web interface backend\n# Value: none | internal\n#type = internal\n\n\n[logging]\n\n# Threshold for the logger\n# Value: debug | info | warning | error | critical\n#level = info\n\n# Don't include passwords in logs\n#mask_passwords = True\n\n# Log bad PUT request content\n#bad_put_request_content = False\n\n# Log backtrace on level=debug\n#backtrace_on_debug = False\n\n# Log request header on level=debug\n#request_header_on_debug = False\n\n# Log request content on level=debug\n#request_content_on_debug = False\n\n# Log response content on level=debug\n#response_content_on_debug = False\n\n# Log rights rule which doesn't match on level=debug\n#rights_rule_doesnt_match_on_debug = False\n\n# Log storage cache actions on level=debug\n#storage_cache_actions_on_debug = False\n\n[headers]\n\n# Additional HTTP headers\n#Access-Control-Allow-Origin = *\n\n\n[hook]\n\n# Hook types\n# Value: none | rabbitmq\n#type = none\n#rabbitmq_endpoint =\n#rabbitmq_topic =\n#rabbitmq_queue_type = classic\n\n\n[reporting]\n\n# When returning a free-busy report, limit the number of returned\n# occurences per event to prevent DOS attacks.\n#max_freebusy_occurrence = 10000\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 5.107421875,
          "content": "[project]\nname = \"Radicale\"\n# When the version is updated, a new section in the CHANGELOG.md file must be\n# added too.\nreadme = \"README.md\"\nversion = \"3.4.0\"\nauthors = [{name = \"Guillaume Ayoub\", email = \"guillaume.ayoub@kozea.fr\"}, {name = \"Unrud\", email = \"unrud@outlook.com\"}, {name = \"Peter Bieringer\", email = \"pb@bieringer.de\"}]\nlicense = {text = \"GNU GPL v3\"}\ndescription = \"CalDAV and CardDAV Server\"\nkeywords = [\"calendar\", \"addressbook\", \"CalDAV\", \"CardDAV\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Console\",\n    \"Environment :: Web Environment\",\n    \"Intended Audience :: End Users/Desktop\",\n    \"Intended Audience :: Information Technology\",\n    \"License :: OSI Approved :: GNU General Public License (GPL)\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Office/Business :: Groupware\",\n]\nurls = {Homepage = \"https://radicale.org/\"}\nrequires-python = \">=3.9.0\"\ndependencies = [\n    \"defusedxml\",\n    \"passlib\",\n    \"vobject>=0.9.6\",\n    \"pika>=1.1.0\",\n]\n\n\n[project.optional-dependencies]\ntest = [\"pytest>=7\", \"waitress\", \"bcrypt\"]\nbcrypt = [\"bcrypt\"]\nldap = [\"ldap3\"]\n\n[project.scripts]\nradicale = \"radicale.__main__:run\"\n\n[build-system]\nrequires = [\"setuptools>=61.2\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.tox]\nmin_version = \"4.0\"\nenvlist = [\"py\", \"flake8\", \"isort\", \"mypy\"]\n\n[tool.tox.env.py]\nextras = [\"test\"]\ndeps = [\n    \"pytest\",\n    \"pytest-cov\"\n]\ncommands = [[\"pytest\", \"-r\", \"s\", \"--cov\", \"--cov-report=term\", \"--cov-report=xml\", \".\"]]\n\n[tool.tox.env.flake8]\ndeps = [\"flake8==7.1.0\"]\ncommands = [[\"flake8\", \".\"]]\nskip_install = true\n\n[tool.tox.env.isort]\ndeps = [\"isort==5.13.2\"]\ncommands = [[\"isort\", \"--check\", \"--diff\", \".\"]]\nskip_install = true\n\n[tool.tox.env.mypy]\ndeps = [\"mypy==1.11.0\"]\ncommands = [[\"mypy\", \".\"]]\nskip_install = true\n\n\n[tool.setuptools]\nplatforms = [\"Any\"]\ninclude-package-data = false\n\n[tool.setuptools.packages.find]\nexclude = [\"*.tests\"] # *.tests.*; tests.*; tests\nnamespaces = false\n\n[tool.setuptools.package-data]\nradicale = [\n    \"web/internal_data/css/icon.png\",\n    \"web/internal_data/css/loading.svg\",\n    \"web/internal_data/css/logo.svg\",\n    \"web/internal_data/css/main.css\",\n    \"web/internal_data/css/icons/delete.svg\",\n    \"web/internal_data/css/icons/download.svg\",\n    \"web/internal_data/css/icons/edit.svg\",\n    \"web/internal_data/css/icons/new.svg\",\n    \"web/internal_data/css/icons/upload.svg\",\n    \"web/internal_data/fn.js\",\n    \"web/internal_data/index.html\",\n    \"py.typed\",\n]\n\n[tool.isort]\nknown_standard_library = \"_dummy_thread,_thread,abc,aifc,argparse,array,ast,asynchat,asyncio,asyncore,atexit,audioop,base64,bdb,binascii,binhex,bisect,builtins,bz2,cProfile,calendar,cgi,cgitb,chunk,cmath,cmd,code,codecs,codeop,collections,colorsys,compileall,concurrent,configparser,contextlib,contextvars,copy,copyreg,crypt,csv,ctypes,curses,dataclasses,datetime,dbm,decimal,difflib,dis,distutils,doctest,dummy_threading,email,encodings,ensurepip,enum,errno,faulthandler,fcntl,filecmp,fileinput,fnmatch,formatter,fpectl,fractions,ftplib,functools,gc,getopt,getpass,gettext,glob,grp,gzip,hashlib,heapq,hmac,html,http,imaplib,imghdr,imp,importlib,inspect,io,ipaddress,itertools,json,keyword,lib2to3,linecache,locale,logging,lzma,macpath,mailbox,mailcap,marshal,math,mimetypes,mmap,modulefinder,msilib,msvcrt,multiprocessing,netrc,nis,nntplib,ntpath,numbers,operator,optparse,os,ossaudiodev,parser,pathlib,pdb,pickle,pickletools,pipes,pkgutil,platform,plistlib,poplib,posix,posixpath,pprint,profile,pstats,pty,pwd,py_compile,pyclbr,pydoc,queue,quopri,random,re,readline,reprlib,resource,rlcompleter,runpy,sched,secrets,select,selectors,shelve,shlex,shutil,signal,site,smtpd,smtplib,sndhdr,socket,socketserver,spwd,sqlite3,sre,sre_compile,sre_constants,sre_parse,ssl,stat,statistics,string,stringprep,struct,subprocess,sunau,symbol,symtable,sys,sysconfig,syslog,tabnanny,tarfile,telnetlib,tempfile,termios,test,textwrap,threading,time,timeit,tkinter,token,tokenize,trace,traceback,tracemalloc,tty,turtle,turtledemo,types,typing,unicodedata,unittest,urllib,uu,uuid,venv,warnings,wave,weakref,webbrowser,winreg,winsound,wsgiref,xdrlib,xml,xmlrpc,zipapp,zipfile,zipimport,zlib\"\nknown_third_party = \"defusedxml,passlib,pkg_resources,pytest,vobject\"\n\n[tool.mypy]\nignore_missing_imports = true\nshow_error_codes = true\nexclude = \"(^|/)build($|/)\"\n\n[tool.coverage.run]\nbranch = true\nsource = [\"radicale\"]\nomit = [\"tests/*\", \"*/tests/*\"]\n\n[tool.coverage.report]\n# Regexes for lines to exclude from consideration\nexclude_lines = [\n    # Have to re-enable the standard pragma\n    \"pragma: no cover\",\n    # Don't complain if tests don't hit defensive assertion code:\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n    # Don't complain if non-runnable code isn't run:\n    \"if __name__ == .__main__.:\",\n]\n"
        },
        {
          "name": "radicale.wsgi",
          "type": "blob",
          "size": 0.091796875,
          "content": "\"\"\"\nRadicale WSGI file (mod_wsgi and uWSGI compliant).\n\n\"\"\"\n\nfrom radicale import application\n"
        },
        {
          "name": "radicale",
          "type": "tree",
          "content": null
        },
        {
          "name": "rights",
          "type": "blob",
          "size": 3.1279296875,
          "content": "# -*- mode: conf -*-\n# vim:ft=cfg\n# Allow all rights for the Administrator\n#[root]\n#user: Administrator\n#collection: .*\n#permissions: RW\n\n# Allow reading principal collection (same as username)\n#[principal]\n#user: .+\n#collection: {user}\n#permissions: R\n\n# Allow reading and writing private collection (same as username)\n#[private]\n#user: .+\n#collection: {user}/private/\n#permissions: RW\n\n# Allow reading calendars and address books that are direct\n# children of the principal collection for other users\n#[calendarsReader]\n#user: .+\n#collection: {user}/[^/]+\n#permissions: r\n\n# Rights management file for Radicale - A simple calendar server\n#\n# The default path for this file is /etc/radicale/rights\n# The path can be specified in the rights section of the configuration file\n#\n# Section names are used for naming rules and must be unique.\n# The first rule matching both user and collection patterns will be used.\n\n\n# Example: owner_only plugin\n\n# Allow reading root collection for authenticated users\n#[root]\n#user: .+\n#collection:\n#permissions: R\n\n# Allow reading and writing principal collection (same as username)\n#[principal]\n#user: .+\n#collection: {user}\n#permissions: RW\n\n# Allow reading and writing calendars and address books that are direct\n# children of the principal collection\n#[calendars]\n#user: .+\n#collection: {user}/[^/]+\n#permissions: rw\n\n\n# Example: owner_write plugin\n# Only listed additional rules for the owner_only plugin example.\n\n# Allow reading principal collections of all users\n#[read-all-principals]\n#user: .+\n#collection: [^/]+\n#permissions: R\n\n# Allow reading all calendars and address books that are direct children of any\n# principal collection\n#[read-all-calendars]\n#user: .+\n#collection: [^/]+/[^/]+\n#permissions: r\n\n\n# Example: authenticated plugin\n\n# Allow reading and writing root and principal collections of all users\n#[root-and-principals]\n#user: .+\n#collection: [^/]*\n#permissions: RW\n\n# Allow reading and writing all calendars and address books that are direct\n# children of any principal collection\n#[calendars]\n#user: .+\n#collection: [^/]+/[^/]+\n#permissions: rw\n\n\n# Example: Allow user \"admin\" to read everything\n#[admin-read-all]\n#user: admin\n#collection: .*\n#permissions: Rr\n\n\n# Example: Allow everybody (including unauthenticated users) to read\n# the collection \"public\"\n\n# Allow reading collection \"public\" for authenticated users\n#[public-principal]\n#user: .+\n#collection: public\n#permissions: R\n\n# Allow reading all calendars and address books that are direct children of\n# the collection \"public\" for authenticated users\n#[public-calendars]\n#user: .+\n#collection: public/[^/]+\n#permissions: r\n\n# Allow access to public calendars and address books via HTTP GET for everyone\n#[public-calendars-restricted]\n#user: .*\n#collection: public/[^/]+\n#permissions: i\n\n# Example: Grant users of the form user@domain.tld read access to the\n# collection \"domain.tld\"\n\n# Allow reading the domain collection\n#[read-domain-principal]\n#user: .+@([^@]+)\n#collection: {0}\n#permissions: R\n\n# Allow reading all calendars and address books that are direct children of\n# the domain collection\n#[read-domain-calendars]\n#user: .+@([^@]+)\n#collection: {0}/[^/]+\n#permissions: r\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.2353515625,
          "content": "[flake8]\n# Only enable default tests (https://github.com/PyCQA/flake8/issues/790#issuecomment-812823398)\n# DNE: DOES-NOT-EXIST\nselect = E,F,W,C90,DNE000\nignore = E121,E123,E126,E226,E24,E704,W503,W504,DNE000,E501,E261\nextend-exclude = build\n"
        },
        {
          "name": "setup.cfg.legacy",
          "type": "blob",
          "size": 2.8876953125,
          "content": "[tool:pytest]\n\n[tox:tox]\nmin_version = 4.0\nenvlist = py, flake8, isort, mypy\n\n[testenv]\nextras =\n    test\ndeps =\n    pytest\n    pytest-cov\ncommands = pytest -r s --cov --cov-report=term --cov-report=xml .\n\n[testenv:flake8]\ndeps = flake8==7.1.0\ncommands = flake8 .\nskip_install = True\n\n[testenv:isort]\ndeps = isort==5.13.2\ncommands = isort --check --diff .\nskip_install = True\n\n[testenv:mypy]\ndeps = mypy==1.11.0\ncommands = mypy .\nskip_install = True\n\n[tool:isort]\nknown_standard_library = _dummy_thread,_thread,abc,aifc,argparse,array,ast,asynchat,asyncio,asyncore,atexit,audioop,base64,bdb,binascii,binhex,bisect,builtins,bz2,cProfile,calendar,cgi,cgitb,chunk,cmath,cmd,code,codecs,codeop,collections,colorsys,compileall,concurrent,configparser,contextlib,contextvars,copy,copyreg,crypt,csv,ctypes,curses,dataclasses,datetime,dbm,decimal,difflib,dis,distutils,doctest,dummy_threading,email,encodings,ensurepip,enum,errno,faulthandler,fcntl,filecmp,fileinput,fnmatch,formatter,fpectl,fractions,ftplib,functools,gc,getopt,getpass,gettext,glob,grp,gzip,hashlib,heapq,hmac,html,http,imaplib,imghdr,imp,importlib,inspect,io,ipaddress,itertools,json,keyword,lib2to3,linecache,locale,logging,lzma,macpath,mailbox,mailcap,marshal,math,mimetypes,mmap,modulefinder,msilib,msvcrt,multiprocessing,netrc,nis,nntplib,ntpath,numbers,operator,optparse,os,ossaudiodev,parser,pathlib,pdb,pickle,pickletools,pipes,pkgutil,platform,plistlib,poplib,posix,posixpath,pprint,profile,pstats,pty,pwd,py_compile,pyclbr,pydoc,queue,quopri,random,re,readline,reprlib,resource,rlcompleter,runpy,sched,secrets,select,selectors,shelve,shlex,shutil,signal,site,smtpd,smtplib,sndhdr,socket,socketserver,spwd,sqlite3,sre,sre_compile,sre_constants,sre_parse,ssl,stat,statistics,string,stringprep,struct,subprocess,sunau,symbol,symtable,sys,sysconfig,syslog,tabnanny,tarfile,telnetlib,tempfile,termios,test,textwrap,threading,time,timeit,tkinter,token,tokenize,trace,traceback,tracemalloc,tty,turtle,turtledemo,types,typing,unicodedata,unittest,urllib,uu,uuid,venv,warnings,wave,weakref,webbrowser,winreg,winsound,wsgiref,xdrlib,xml,xmlrpc,zipapp,zipfile,zipimport,zlib\nknown_third_party = defusedxml,passlib,pkg_resources,pytest,vobject\n\n[flake8]\n# Only enable default tests (https://github.com/PyCQA/flake8/issues/790#issuecomment-812823398)\n# DNE: DOES-NOT-EXIST\nselect = E,F,W,C90,DNE000\nignore = E121,E123,E126,E226,E24,E704,W503,W504,DNE000,E501\nextend-exclude = build\n\n[mypy]\nignore_missing_imports = True\nshow_error_codes = True\nexclude = (^|/)build($|/)\n\n[coverage:run]\nbranch = True\nsource = radicale\nomit = tests/*,*/tests/*\n\n[coverage:report]\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Don't complain if tests don't hit defensive assertion code:\n    raise AssertionError\n    raise NotImplementedError\n\n    # Don't complain if non-runnable code isn't run:\n    if __name__ == .__main__.:\n"
        },
        {
          "name": "setup.py.legacy",
          "type": "blob",
          "size": 3.4267578125,
          "content": "# This file is part of Radicale - CalDAV and CardDAV server\n# Copyright © 2009-2017 Guillaume Ayoub\n# Copyright © 2017-2018 Unrud <unrud@outlook.com>\n# Copyright © 2024-2024 Peter Bieringer <pb@bieringer.de>\n#\n# This library is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Radicale.  If not, see <http://www.gnu.org/licenses/>.\n\nfrom setuptools import find_packages, setup\n\n# When the version is updated, a new section in the CHANGELOG.md file must be\n# added too.\nVERSION = \"3.4.0\"\n\nwith open(\"README.md\", encoding=\"utf-8\") as f:\n    long_description = f.read()\nweb_files = [\"web/internal_data/css/icon.png\",\n             \"web/internal_data/css/loading.svg\",\n             \"web/internal_data/css/logo.svg\",\n             \"web/internal_data/css/main.css\",\n             \"web/internal_data/css/icons/delete.svg\",\n             \"web/internal_data/css/icons/download.svg\",\n             \"web/internal_data/css/icons/edit.svg\",\n             \"web/internal_data/css/icons/new.svg\",\n             \"web/internal_data/css/icons/upload.svg\",\n             \"web/internal_data/fn.js\",\n             \"web/internal_data/index.html\"]\n\ninstall_requires = [\"defusedxml\", \"passlib\", \"vobject>=0.9.6\",\n                    \"pika>=1.1.0\",\n                    ]\nbcrypt_requires = [\"bcrypt\"]\nldap_requires = [\"ldap3\"]\ntest_requires = [\"pytest>=7\", \"waitress\", *bcrypt_requires]\n\nsetup(\n    name=\"Radicale\",\n    version=VERSION,\n    description=\"CalDAV and CardDAV Server\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    author=\"Guillaume Ayoub\",\n    author_email=\"guillaume.ayoub@kozea.fr\",\n    url=\"https://radicale.org/\",\n    license=\"GNU GPL v3\",\n    platforms=\"Any\",\n    packages=find_packages(\n        exclude=[\"*.tests\", \"*.tests.*\", \"tests.*\", \"tests\"]),\n    package_data={\"radicale\": [*web_files, \"py.typed\"]},\n    entry_points={\"console_scripts\": [\"radicale = radicale.__main__:run\"]},\n    install_requires=install_requires,\n    extras_require={\"test\": test_requires, \"bcrypt\": bcrypt_requires, \"ldap\": ldap_requires},\n    keywords=[\"calendar\", \"addressbook\", \"CalDAV\", \"CardDAV\"],\n    python_requires=\">=3.9.0\",\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Console\",\n        \"Environment :: Web Environment\",\n        \"Intended Audience :: End Users/Desktop\",\n        \"Intended Audience :: Information Technology\",\n        \"License :: OSI Approved :: GNU General Public License (GPL)\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n        \"Topic :: Office/Business :: Groupware\"])\n"
        }
      ]
    }
  ]
}