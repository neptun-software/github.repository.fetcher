{
  "metadata": {
    "timestamp": 1736560004546,
    "page": 808,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Anorov/cloudflare-scrape",
      "stars": 3411,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.041015625,
          "content": "[run]\nsource = cfscrape\nomit =\n    *test*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.373046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# Tests / Coverage\nreport.xml\ncoverage.xml\n.coverage\n.tox/\n.testmondata\n\n# IDE\n.idea/\n\n# Prevent unintended commits\n.env\n\n# Temp files\n*.swp\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.7548828125,
          "content": "language: python\n\ndist: trusty\nsudo: false\n\nmatrix:\n    include:\n        - python: '2.7'\n        - python: '3.4'\n        - python: '3.5'\n        - python: '3.6'\n        - python: '3.7'\n          dist: xenial\n          sudo: true\n        - env: cfscrape_node='4.5'\n        - env: cfscrape_node='node'\n        - os: osx\n          language: node_js\n          node_js: node\n          cache:\n            directories:\n              - $HOME/Library/Caches/Homebrew\n              - /usr/local/Homebrew\n\ncache: pip\n\nbefore_install:\n   - |\n     if [ -n \"${cfscrape_node}\" ]; then\n       source ~/.nvm/nvm.sh\n       nvm install \"${cfscrape_node}\"\n       nvm use \"${cfscrape_node}\"\n     fi\n\ninstall:\n  - node -p process.versions\n  - make\n\nscript: make ci\n\nafter_success: make coverage\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Anorov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.025390625,
          "content": "include LICENSE README.md\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.001953125,
          "content": "pep8-rules := E501,W503,W504\n\ninit:\n\tpip install pipenv -U\n\tpipenv install --dev\n\nrequirements:\n\tpipenv lock -r > requirements.txt\n\tpipenv lock --dev -r > requirements-dev.txt\n\ntest:\n\t# This runs all of the tests, on both Python 2 and Python 3.\n\tpipenv run tox --parallel auto\n\nwatch:\n\t# This automatically selects and re-executes only tests affected by recent changes.\n\tpipenv run ptw -- --testmon\n\nretry:\n\t# This will retry failed tests on every file change.\n\tpipenv run py.test -n auto --forked --looponfail\n\nci:\n\tpipenv run py.test tests\n\nlint:\n\tpipenv run flake8 --ignore $(pep8-rules) cfscrape tests setup.py\n\nformat:\n\t# Automatic reformatting\n\tpipenv run autopep8 -aaa --ignore $(pep8-rules) --in-place --recursive cfscrape tests setup.py\n\ncoverage:\n\tpipenv run py.test --cov-config .coveragerc --verbose --cov-report term --cov-report xml --cov=cfscrape tests\n\tpipenv run coveralls\n\npublish:\n\tpip install 'twine>=1.5.0'\n\tpython setup.py sdist bdist_wheel\n\ttwine upload dist/*\n\trm -fr build dist .egg cfscrape.egg-info\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.568359375,
          "content": "[[source]]\nurl = \"https://pypi.org/simple/\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\nrequests = \"*\"\n\n[dev-packages]\npytest = \"*\"\n# more_itertools is added to resolve a CI related issue with Pipenv + pytest\nmore_itertools = { version = \">=4.0.0\", markers = \"python_version >= '2.7'\" }\n# mock is added to resolve a CI related issue with Pipenv + pytest\nmock = \"*\"\npytest-cov = \"*\"\npytest-xdist = \"*\"\npytest-forked = \"*\"\npytest-testmon = \"*\"\npytest-watch = \"*\"\npytest-timeout = \"*\"\nresponses = \"*\"\nsure = \"*\"\n\"flake8\" = \"*\"\n\"autopep8\" = \"*\"\ntox = \"*\"\ncoverage = \"*\"\ncoveralls = \"*\"\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 26.0595703125,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"a998a4d3507e5aa42cff1a7d37b30bb937d36690dbb22a27cc50ba1b25166e80\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {},\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.org/simple/\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:59b7658e26ca9c7339e00f8f4636cdfe59d34fa37b9b04f6f9e9926b3cece1a5\",\n                \"sha256:b26104d6835d1f5e49452a26eb2ff87fe7090b89dfcaee5ea2212697e1e1d7ae\"\n            ],\n            \"version\": \"==2019.3.9\"\n        },\n        \"chardet\": {\n            \"hashes\": [\n                \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\",\n                \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\"\n            ],\n            \"version\": \"==3.0.4\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:c357b3f628cf53ae2c4c05627ecc484553142ca23264e593d327bcde5e9c3407\",\n                \"sha256:ea8b7f6188e6fa117537c3df7da9fc686d485087abf6ac197f9c46432f7e4a3c\"\n            ],\n            \"version\": \"==2.8\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:502a824f31acdacb3a35b6690b5fbf0bc41d63a24a45c4004352b0242707598e\",\n                \"sha256:7bf2a778576d825600030a110f3c0e3e8edc51dfaafe1c146e39a2027784957b\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.21.0\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:2393a695cd12afedd0dcb26fe5d50d0cf248e5a66f75dbd89a3d4eb333a61af4\",\n                \"sha256:a637e5fae88995b256e3409dc4d52c2e2e0ba32c42a6365fee8bbd2238de3cfb\"\n            ],\n            \"version\": \"==1.24.3\"\n        }\n    },\n    \"develop\": {\n        \"apipkg\": {\n            \"hashes\": [\n                \"sha256:37228cda29411948b422fae072f57e31d3396d2ee1c9783775980ee9c9990af6\",\n                \"sha256:58587dd4dc3daefad0487f6d9ae32b4542b185e1c36db6993290e7c41ca2b47c\"\n            ],\n            \"version\": \"==1.5\"\n        },\n        \"argh\": {\n            \"hashes\": [\n                \"sha256:a9b3aaa1904eeb78e32394cd46c6f37ac0fb4af6dc488daa58971bdc7d7fcaf3\",\n                \"sha256:e9535b8c84dc9571a48999094fda7f33e63c3f1b74f3e5f3ac0105a58405bb65\"\n            ],\n            \"version\": \"==0.26.2\"\n        },\n        \"asn1crypto\": {\n            \"hashes\": [\n                \"sha256:2f1adbb7546ed199e3c90ef23ec95c5cf3585bac7d11fb7eb562a3fe89c64e87\",\n                \"sha256:9d5c20441baf0cb60a4ac34cc447c6c189024b6b4c6cd7877034f4965c464e49\"\n            ],\n            \"version\": \"==0.24.0\"\n        },\n        \"atomicwrites\": {\n            \"hashes\": [\n                \"sha256:03472c30eb2c5d1ba9227e4c2ca66ab8287fbfbbda3888aa93dc2e28fc6811b4\",\n                \"sha256:75a9445bac02d8d058d5e1fe689654ba5a6556a1dfd8ce6ec55a0ed79866cfa6\"\n            ],\n            \"version\": \"==1.3.0\"\n        },\n        \"attrs\": {\n            \"hashes\": [\n                \"sha256:69c0dbf2ed392de1cb5ec704444b08a5ef81680a61cb899dc08127123af36a79\",\n                \"sha256:f0b870f674851ecbfbbbd364d6b5cbdff9dcedbc7f3f5e18a6891057f21fe399\"\n            ],\n            \"version\": \"==19.1.0\"\n        },\n        \"autopep8\": {\n            \"hashes\": [\n                \"sha256:4d8eec30cc81bc5617dbf1218201d770dc35629363547f17577c61683ccfb3ee\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.4.4\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:59b7658e26ca9c7339e00f8f4636cdfe59d34fa37b9b04f6f9e9926b3cece1a5\",\n                \"sha256:b26104d6835d1f5e49452a26eb2ff87fe7090b89dfcaee5ea2212697e1e1d7ae\"\n            ],\n            \"version\": \"==2019.3.9\"\n        },\n        \"cffi\": {\n            \"hashes\": [\n                \"sha256:041c81822e9f84b1d9c401182e174996f0bae9991f33725d059b771744290774\",\n                \"sha256:046ef9a22f5d3eed06334d01b1e836977eeef500d9b78e9ef693f9380ad0b83d\",\n                \"sha256:066bc4c7895c91812eff46f4b1c285220947d4aa46fa0a2651ff85f2afae9c90\",\n                \"sha256:066c7ff148ae33040c01058662d6752fd73fbc8e64787229ea8498c7d7f4041b\",\n                \"sha256:2444d0c61f03dcd26dbf7600cf64354376ee579acad77aef459e34efcb438c63\",\n                \"sha256:300832850b8f7967e278870c5d51e3819b9aad8f0a2c8dbe39ab11f119237f45\",\n                \"sha256:34c77afe85b6b9e967bd8154e3855e847b70ca42043db6ad17f26899a3df1b25\",\n                \"sha256:46de5fa00f7ac09f020729148ff632819649b3e05a007d286242c4882f7b1dc3\",\n                \"sha256:4aa8ee7ba27c472d429b980c51e714a24f47ca296d53f4d7868075b175866f4b\",\n                \"sha256:4d0004eb4351e35ed950c14c11e734182591465a33e960a4ab5e8d4f04d72647\",\n                \"sha256:4e3d3f31a1e202b0f5a35ba3bc4eb41e2fc2b11c1eff38b362de710bcffb5016\",\n                \"sha256:50bec6d35e6b1aaeb17f7c4e2b9374ebf95a8975d57863546fa83e8d31bdb8c4\",\n                \"sha256:55cad9a6df1e2a1d62063f79d0881a414a906a6962bc160ac968cc03ed3efcfb\",\n                \"sha256:5662ad4e4e84f1eaa8efce5da695c5d2e229c563f9d5ce5b0113f71321bcf753\",\n                \"sha256:59b4dc008f98fc6ee2bb4fd7fc786a8d70000d058c2bbe2698275bc53a8d3fa7\",\n                \"sha256:73e1ffefe05e4ccd7bcea61af76f36077b914f92b76f95ccf00b0c1b9186f3f9\",\n                \"sha256:a1f0fd46eba2d71ce1589f7e50a9e2ffaeb739fb2c11e8192aa2b45d5f6cc41f\",\n                \"sha256:a2e85dc204556657661051ff4bab75a84e968669765c8a2cd425918699c3d0e8\",\n                \"sha256:a5457d47dfff24882a21492e5815f891c0ca35fefae8aa742c6c263dac16ef1f\",\n                \"sha256:a8dccd61d52a8dae4a825cdbb7735da530179fea472903eb871a5513b5abbfdc\",\n                \"sha256:ae61af521ed676cf16ae94f30fe202781a38d7178b6b4ab622e4eec8cefaff42\",\n                \"sha256:b012a5edb48288f77a63dba0840c92d0504aa215612da4541b7b42d849bc83a3\",\n                \"sha256:d2c5cfa536227f57f97c92ac30c8109688ace8fa4ac086d19d0af47d134e2909\",\n                \"sha256:d42b5796e20aacc9d15e66befb7a345454eef794fdb0737d1af593447c6c8f45\",\n                \"sha256:dee54f5d30d775f525894d67b1495625dd9322945e7fee00731952e0368ff42d\",\n                \"sha256:e070535507bd6aa07124258171be2ee8dfc19119c28ca94c9dfb7efd23564512\",\n                \"sha256:e1ff2748c84d97b065cc95429814cdba39bcbd77c9c85c89344b317dc0d9cbff\",\n                \"sha256:ed851c75d1e0e043cbf5ca9a8e1b13c4c90f3fbd863dacb01c0808e2b5204201\"\n            ],\n            \"version\": \"==1.12.3\"\n        },\n        \"chardet\": {\n            \"hashes\": [\n                \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\",\n                \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\"\n            ],\n            \"version\": \"==3.0.4\"\n        },\n        \"colorama\": {\n            \"hashes\": [\n                \"sha256:05eed71e2e327246ad6b38c540c4a3117230b19679b875190486ddd2d721422d\",\n                \"sha256:f8ac84de7840f5b9c4e3347b3c1eaa50f7e49c2b07596221daec5edaabbd7c48\"\n            ],\n            \"version\": \"==0.4.1\"\n        },\n        \"configparser\": {\n            \"hashes\": [\n                \"sha256:8be81d89d6e7b4c0d4e44bcc525845f6da25821de80cb5e06e7e0238a2899e32\",\n                \"sha256:da60d0014fd8c55eb48c1c5354352e363e2d30bbf7057e5e171a468390184c75\"\n            ],\n            \"markers\": \"python_version == '2.7'\",\n            \"version\": \"==3.7.4\"\n        },\n        \"cookies\": {\n            \"hashes\": [\n                \"sha256:15bee753002dff684987b8df8c235288eb8d45f8191ae056254812dfd42c81d3\",\n                \"sha256:d6b698788cae4cfa4e62ef8643a9ca332b79bd96cb314294b864ae8d7eb3ee8e\"\n            ],\n            \"markers\": \"python_version < '3.4'\",\n            \"version\": \"==2.2.1\"\n        },\n        \"coverage\": {\n            \"hashes\": [\n                \"sha256:3684fabf6b87a369017756b551cef29e505cb155ddb892a7a29277b978da88b9\",\n                \"sha256:39e088da9b284f1bd17c750ac672103779f7954ce6125fd4382134ac8d152d74\",\n                \"sha256:3c205bc11cc4fcc57b761c2da73b9b72a59f8d5ca89979afb0c1c6f9e53c7390\",\n                \"sha256:465ce53a8c0f3a7950dfb836438442f833cf6663d407f37d8c52fe7b6e56d7e8\",\n                \"sha256:48020e343fc40f72a442c8a1334284620f81295256a6b6ca6d8aa1350c763bbe\",\n                \"sha256:5296fc86ab612ec12394565c500b412a43b328b3907c0d14358950d06fd83baf\",\n                \"sha256:5f61bed2f7d9b6a9ab935150a6b23d7f84b8055524e7be7715b6513f3328138e\",\n                \"sha256:68a43a9f9f83693ce0414d17e019daee7ab3f7113a70c79a3dd4c2f704e4d741\",\n                \"sha256:6b8033d47fe22506856fe450470ccb1d8ba1ffb8463494a15cfc96392a288c09\",\n                \"sha256:7ad7536066b28863e5835e8cfeaa794b7fe352d99a8cded9f43d1161be8e9fbd\",\n                \"sha256:7bacb89ccf4bedb30b277e96e4cc68cd1369ca6841bde7b005191b54d3dd1034\",\n                \"sha256:839dc7c36501254e14331bcb98b27002aa415e4af7ea039d9009409b9d2d5420\",\n                \"sha256:8f9a95b66969cdea53ec992ecea5406c5bd99c9221f539bca1e8406b200ae98c\",\n                \"sha256:932c03d2d565f75961ba1d3cec41ddde00e162c5b46d03f7423edcb807734eab\",\n                \"sha256:988529edadc49039d205e0aa6ce049c5ccda4acb2d6c3c5c550c17e8c02c05ba\",\n                \"sha256:998d7e73548fe395eeb294495a04d38942edb66d1fa61eb70418871bc621227e\",\n                \"sha256:9de60893fb447d1e797f6bf08fdf0dbcda0c1e34c1b06c92bd3a363c0ea8c609\",\n                \"sha256:9e80d45d0c7fcee54e22771db7f1b0b126fb4a6c0a2e5afa72f66827207ff2f2\",\n                \"sha256:a545a3dfe5082dc8e8c3eb7f8a2cf4f2870902ff1860bd99b6198cfd1f9d1f49\",\n                \"sha256:a5d8f29e5ec661143621a8f4de51adfb300d7a476224156a39a392254f70687b\",\n                \"sha256:aca06bfba4759bbdb09bf52ebb15ae20268ee1f6747417837926fae990ebc41d\",\n                \"sha256:bb23b7a6fd666e551a3094ab896a57809e010059540ad20acbeec03a154224ce\",\n                \"sha256:bfd1d0ae7e292105f29d7deaa9d8f2916ed8553ab9d5f39ec65bcf5deadff3f9\",\n                \"sha256:c62ca0a38958f541a73cf86acdab020c2091631c137bd359c4f5bddde7b75fd4\",\n                \"sha256:c709d8bda72cf4cd348ccec2a4881f2c5848fd72903c185f363d361b2737f773\",\n                \"sha256:c968a6aa7e0b56ecbd28531ddf439c2ec103610d3e2bf3b75b813304f8cb7723\",\n                \"sha256:df785d8cb80539d0b55fd47183264b7002077859028dfe3070cf6359bf8b2d9c\",\n                \"sha256:f406628ca51e0ae90ae76ea8398677a921b36f0bd71aab2099dfed08abd0322f\",\n                \"sha256:f46087bbd95ebae244a0eda01a618aff11ec7a069b15a3ef8f6b520db523dcf1\",\n                \"sha256:f8019c5279eb32360ca03e9fac40a12667715546eed5c5eb59eb381f2f501260\",\n                \"sha256:fc5f4d209733750afd2714e9109816a29500718b32dd9a5db01c0cb3a019b96a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.5.3\"\n        },\n        \"coveralls\": {\n            \"hashes\": [\n                \"sha256:baa26648430d5c2225ab12d7e2067f75597a4b967034bba7e3d5ab7501d207a1\",\n                \"sha256:ff9b7823b15070f26f654837bb02a201d006baaf2083e0514ffd3b34a3ffed81\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.7.0\"\n        },\n        \"cryptography\": {\n            \"hashes\": [\n                \"sha256:066f815f1fe46020877c5983a7e747ae140f517f1b09030ec098503575265ce1\",\n                \"sha256:210210d9df0afba9e000636e97810117dc55b7157c903a55716bb73e3ae07705\",\n                \"sha256:26c821cbeb683facb966045e2064303029d572a87ee69ca5a1bf54bf55f93ca6\",\n                \"sha256:2afb83308dc5c5255149ff7d3fb9964f7c9ee3d59b603ec18ccf5b0a8852e2b1\",\n                \"sha256:2db34e5c45988f36f7a08a7ab2b69638994a8923853dec2d4af121f689c66dc8\",\n                \"sha256:409c4653e0f719fa78febcb71ac417076ae5e20160aec7270c91d009837b9151\",\n                \"sha256:45a4f4cf4f4e6a55c8128f8b76b4c057027b27d4c67e3fe157fa02f27e37830d\",\n                \"sha256:48eab46ef38faf1031e58dfcc9c3e71756a1108f4c9c966150b605d4a1a7f659\",\n                \"sha256:6b9e0ae298ab20d371fc26e2129fd683cfc0cfde4d157c6341722de645146537\",\n                \"sha256:6c4778afe50f413707f604828c1ad1ff81fadf6c110cb669579dea7e2e98a75e\",\n                \"sha256:8c33fb99025d353c9520141f8bc989c2134a1f76bac6369cea060812f5b5c2bb\",\n                \"sha256:9873a1760a274b620a135054b756f9f218fa61ca030e42df31b409f0fb738b6c\",\n                \"sha256:9b069768c627f3f5623b1cbd3248c5e7e92aec62f4c98827059eed7053138cc9\",\n                \"sha256:9e4ce27a507e4886efbd3c32d120db5089b906979a4debf1d5939ec01b9dd6c5\",\n                \"sha256:acb424eaca214cb08735f1a744eceb97d014de6530c1ea23beb86d9c6f13c2ad\",\n                \"sha256:c8181c7d77388fe26ab8418bb088b1a1ef5fde058c6926790c8a0a3d94075a4a\",\n                \"sha256:d4afbb0840f489b60f5a580a41a1b9c3622e08ecb5eec8614d4fb4cd914c4460\",\n                \"sha256:d9ed28030797c00f4bc43c86bf819266c76a5ea61d006cd4078a93ebf7da6bfd\",\n                \"sha256:e603aa7bb52e4e8ed4119a58a03b60323918467ef209e6ff9db3ac382e5cf2c6\"\n            ],\n            \"version\": \"==2.6.1\"\n        },\n        \"docopt\": {\n            \"hashes\": [\n                \"sha256:49b3a825280bd66b3aa83585ef59c4a8c82f2c8a522dbe754a8bc8d08c85c491\"\n            ],\n            \"version\": \"==0.6.2\"\n        },\n        \"entrypoints\": {\n            \"hashes\": [\n                \"sha256:589f874b313739ad35be6e0cd7efde2a4e9b6fea91edcc34e58ecbb8dbe56d19\",\n                \"sha256:c70dd71abe5a8c85e55e12c19bd91ccfeec11a6e99044204511f9ed547d48451\"\n            ],\n            \"version\": \"==0.3\"\n        },\n        \"enum34\": {\n            \"hashes\": [\n                \"sha256:2d81cbbe0e73112bdfe6ef8576f2238f2ba27dd0d55752a776c41d38b7da2850\",\n                \"sha256:644837f692e5f550741432dd3f223bbb9852018674981b1664e5dc339387588a\",\n                \"sha256:6bd0f6ad48ec2aa117d3d141940d484deccda84d4fcd884f5c3d93c23ecd8c79\",\n                \"sha256:8ad8c4783bf61ded74527bffb48ed9b54166685e4230386a9ed9b1279e2df5b1\"\n            ],\n            \"markers\": \"python_version < '3.4'\",\n            \"version\": \"==1.1.6\"\n        },\n        \"execnet\": {\n            \"hashes\": [\n                \"sha256:027ee5d961afa01e97b90d6ccc34b4ed976702bc58e7f092b3c513ea288cb6d2\",\n                \"sha256:752a3786f17416d491f833a29217dda3ea4a471fc5269c492eebcee8cc4772d3\"\n            ],\n            \"version\": \"==1.6.0\"\n        },\n        \"filelock\": {\n            \"hashes\": [\n                \"sha256:b8d5ca5ca1c815e1574aee746650ea7301de63d87935b3463d26368b76e31633\",\n                \"sha256:d610c1bb404daf85976d7a82eb2ada120f04671007266b708606565dd03b5be6\"\n            ],\n            \"version\": \"==3.0.10\"\n        },\n        \"flake8\": {\n            \"hashes\": [\n                \"sha256:859996073f341f2670741b51ec1e67a01da142831aa1fdc6242dbf88dffbe661\",\n                \"sha256:a796a115208f5c03b18f332f7c11729812c8c3ded6c46319c59b53efd3819da8\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==3.7.7\"\n        },\n        \"funcsigs\": {\n            \"hashes\": [\n                \"sha256:330cc27ccbf7f1e992e69fef78261dc7c6569012cf397db8d3de0234e6c937ca\",\n                \"sha256:a7bb0f2cf3a3fd1ab2732cb49eba4252c2af4240442415b4abce3b87022a8f50\"\n            ],\n            \"markers\": \"python_version < '3.3'\",\n            \"version\": \"==1.0.2\"\n        },\n        \"functools32\": {\n            \"hashes\": [\n                \"sha256:89d824aa6c358c421a234d7f9ee0bd75933a67c29588ce50aaa3acdf4d403fa0\",\n                \"sha256:f6253dfbe0538ad2e387bd8fdfd9293c925d63553f5813c4e587745416501e6d\"\n            ],\n            \"markers\": \"python_version < '3.2'\",\n            \"version\": \"==3.2.3.post2\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:c357b3f628cf53ae2c4c05627ecc484553142ca23264e593d327bcde5e9c3407\",\n                \"sha256:ea8b7f6188e6fa117537c3df7da9fc686d485087abf6ac197f9c46432f7e4a3c\"\n            ],\n            \"version\": \"==2.8\"\n        },\n        \"ipaddress\": {\n            \"hashes\": [\n                \"sha256:64b28eec5e78e7510698f6d4da08800a5c575caa4a286c93d651c5d3ff7b6794\",\n                \"sha256:b146c751ea45cad6188dd6cf2d9b757f6f4f8d6ffb96a023e6f2e26eea02a72c\"\n            ],\n            \"version\": \"==1.0.22\"\n        },\n        \"mccabe\": {\n            \"hashes\": [\n                \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\",\n                \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"\n            ],\n            \"version\": \"==0.6.1\"\n        },\n        \"mock\": {\n            \"hashes\": [\n                \"sha256:83657d894c90d5681d62155c82bda9c1187827525880eda8ff5df4ec813437c3\",\n                \"sha256:d157e52d4e5b938c550f39eb2fd15610db062441a9c2747d3dbfa9298211d0f8\"\n            ],\n            \"markers\": \"python_version < '3.3'\",\n            \"version\": \"==3.0.5\"\n        },\n        \"more-itertools\": {\n            \"hashes\": [\n                \"sha256:38a936c0a6d98a38bcc2d03fdaaedaba9f412879461dd2ceff8d37564d6522e4\",\n                \"sha256:c0a5785b1109a6bd7fac76d6837fd1feca158e54e521ccd2ae8bfe393cc9d4fc\",\n                \"sha256:fe7a7cae1ccb57d33952113ff4fa1bc5f879963600ed74918f1236e212ee50b9\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '2.7'\",\n            \"version\": \"==5.0.0\"\n        },\n        \"pathlib2\": {\n            \"hashes\": [\n                \"sha256:25199318e8cc3c25dcb45cbe084cc061051336d5a9ea2a12448d3d8cb748f742\",\n                \"sha256:5887121d7f7df3603bca2f710e7219f3eca0eb69e0b7cc6e0a022e155ac931a7\"\n            ],\n            \"markers\": \"python_version < '3.6'\",\n            \"version\": \"==2.3.3\"\n        },\n        \"pathtools\": {\n            \"hashes\": [\n                \"sha256:7c35c5421a39bb82e58018febd90e3b6e5db34c5443aaaf742b3f33d4655f1c0\"\n            ],\n            \"version\": \"==0.1.2\"\n        },\n        \"pluggy\": {\n            \"hashes\": [\n                \"sha256:25a1bc1d148c9a640211872b4ff859878d422bccb59c9965e04eed468a0aa180\",\n                \"sha256:964cedd2b27c492fbf0b7f58b3284a09cf7f99b0f715941fb24a439b3af1bd1a\"\n            ],\n            \"version\": \"==0.11.0\"\n        },\n        \"py\": {\n            \"hashes\": [\n                \"sha256:64f65755aee5b381cea27766a3a147c3f15b9b6b9ac88676de66ba2ae36793fa\",\n                \"sha256:dc639b046a6e2cff5bbe40194ad65936d6ba360b52b3c3fe1d08a82dd50b5e53\"\n            ],\n            \"version\": \"==1.8.0\"\n        },\n        \"pycodestyle\": {\n            \"hashes\": [\n                \"sha256:95a2219d12372f05704562a14ec30bc76b05a5b297b21a5dfe3f6fac3491ae56\",\n                \"sha256:e40a936c9a450ad81df37f549d676d127b1b66000a6c500caa2b085bc0ca976c\"\n            ],\n            \"version\": \"==2.5.0\"\n        },\n        \"pycparser\": {\n            \"hashes\": [\n                \"sha256:a988718abfad80b6b157acce7bf130a30876d27603738ac39f140993246b25b3\"\n            ],\n            \"version\": \"==2.19\"\n        },\n        \"pyflakes\": {\n            \"hashes\": [\n                \"sha256:17dbeb2e3f4d772725c777fabc446d5634d1038f234e77343108ce445ea69ce0\",\n                \"sha256:d976835886f8c5b31d47970ed689944a0262b5f3afa00a5a7b4dc81e5449f8a2\"\n            ],\n            \"version\": \"==2.1.1\"\n        },\n        \"pyopenssl\": {\n            \"hashes\": [\n                \"sha256:aeca66338f6de19d1aa46ed634c3b9ae519a64b458f8468aec688e7e3c20f200\",\n                \"sha256:c727930ad54b10fc157015014b666f2d8b41f70c0d03e83ab67624fd3dd5d1e6\"\n            ],\n            \"version\": \"==19.0.0\"\n        },\n        \"pytest\": {\n            \"hashes\": [\n                \"sha256:1a8aa4fa958f8f451ac5441f3ac130d9fc86ea38780dd2715e6d5c5882700b24\",\n                \"sha256:b8bf138592384bd4e87338cb0f256bf5f615398a649d4bd83915f0e4047a5ca6\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.5.0\"\n        },\n        \"pytest-cov\": {\n            \"hashes\": [\n                \"sha256:2b097cde81a302e1047331b48cadacf23577e431b61e9c6f49a1170bbe3d3da6\",\n                \"sha256:e00ea4fdde970725482f1f35630d12f074e121a23801aabf2ae154ec6bdd343a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.7.1\"\n        },\n        \"pytest-forked\": {\n            \"hashes\": [\n                \"sha256:5fe33fbd07d7b1302c95310803a5e5726a4ff7f19d5a542b7ce57c76fed8135f\",\n                \"sha256:d352aaced2ebd54d42a65825722cb433004b4446ab5d2044851d9cc7a00c9e38\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.0.2\"\n        },\n        \"pytest-testmon\": {\n            \"hashes\": [\n                \"sha256:df00594e55f8f8f826e0e345dc23863ebac066eb749f8229c515a0373669c5bb\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.9.16\"\n        },\n        \"pytest-timeout\": {\n            \"hashes\": [\n                \"sha256:4a30ba76837a32c7b7cd5c84ee9933fde4b9022b0cd20ea7d4a577c2a1649fb1\",\n                \"sha256:d49f618c6448c14168773b6cdda022764c63ea80d42274e3156787e8088d04c6\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.3.3\"\n        },\n        \"pytest-watch\": {\n            \"hashes\": [\n                \"sha256:06136f03d5b361718b8d0d234042f7b2f203910d8568f63df2f866b547b3d4b9\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.2.0\"\n        },\n        \"pytest-xdist\": {\n            \"hashes\": [\n                \"sha256:b0bb4b0293ee8657b9eb3ff334a3b6aac4db74fd4a86b81e1982c879237a47eb\",\n                \"sha256:f83a485293e81fd57c8a5a85a3f12473a532c5ca7dec518857cbb72766bb526c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.28.0\"\n        },\n        \"pyyaml\": {\n            \"hashes\": [\n                \"sha256:1adecc22f88d38052fb787d959f003811ca858b799590a5eaa70e63dca50308c\",\n                \"sha256:436bc774ecf7c103814098159fbb84c2715d25980175292c648f2da143909f95\",\n                \"sha256:460a5a4248763f6f37ea225d19d5c205677d8d525f6a83357ca622ed541830c2\",\n                \"sha256:5a22a9c84653debfbf198d02fe592c176ea548cccce47553f35f466e15cf2fd4\",\n                \"sha256:7a5d3f26b89d688db27822343dfa25c599627bc92093e788956372285c6298ad\",\n                \"sha256:9372b04a02080752d9e6f990179a4ab840227c6e2ce15b95e1278456664cf2ba\",\n                \"sha256:a5dcbebee834eaddf3fa7366316b880ff4062e4bcc9787b78c7fbb4a26ff2dd1\",\n                \"sha256:aee5bab92a176e7cd034e57f46e9df9a9862a71f8f37cad167c6fc74c65f5b4e\",\n                \"sha256:c51f642898c0bacd335fc119da60baae0824f2cde95b0330b56c0553439f0673\",\n                \"sha256:c68ea4d3ba1705da1e0d85da6684ac657912679a649e8868bd850d2c299cce13\",\n                \"sha256:e23d0cc5299223dcc37885dae624f382297717e459ea24053709675a976a3e19\"\n            ],\n            \"version\": \"==5.1\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:502a824f31acdacb3a35b6690b5fbf0bc41d63a24a45c4004352b0242707598e\",\n                \"sha256:7bf2a778576d825600030a110f3c0e3e8edc51dfaafe1c146e39a2027784957b\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.21.0\"\n        },\n        \"responses\": {\n            \"hashes\": [\n                \"sha256:502d9c0c8008439cfcdef7e251f507fcfdd503b56e8c0c87c3c3e3393953f790\",\n                \"sha256:97193c0183d63fba8cd3a041c75464e4b09ea0aff6328800d1546598567dde0b\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.10.6\"\n        },\n        \"scandir\": {\n            \"hashes\": [\n                \"sha256:2586c94e907d99617887daed6c1d102b5ca28f1085f90446554abf1faf73123e\",\n                \"sha256:2ae41f43797ca0c11591c0c35f2f5875fa99f8797cb1a1fd440497ec0ae4b022\",\n                \"sha256:2b8e3888b11abb2217a32af0766bc06b65cc4a928d8727828ee68af5a967fa6f\",\n                \"sha256:2c712840c2e2ee8dfaf36034080108d30060d759c7b73a01a52251cc8989f11f\",\n                \"sha256:4d4631f6062e658e9007ab3149a9b914f3548cb38bfb021c64f39a025ce578ae\",\n                \"sha256:67f15b6f83e6507fdc6fca22fedf6ef8b334b399ca27c6b568cbfaa82a364173\",\n                \"sha256:7d2d7a06a252764061a020407b997dd036f7bd6a175a5ba2b345f0a357f0b3f4\",\n                \"sha256:8c5922863e44ffc00c5c693190648daa6d15e7c1207ed02d6f46a8dcc2869d32\",\n                \"sha256:92c85ac42f41ffdc35b6da57ed991575bdbe69db895507af88b9f499b701c188\",\n                \"sha256:b24086f2375c4a094a6b51e78b4cf7ca16c721dcee2eddd7aa6494b42d6d519d\",\n                \"sha256:cb925555f43060a1745d0a321cca94bcea927c50114b623d73179189a4e100ac\"\n            ],\n            \"markers\": \"python_version < '3.5'\",\n            \"version\": \"==1.10.0\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:3350809f0555b11f552448330d0b52d5f24c91a322ea4a15ef22629740f3761c\",\n                \"sha256:d16a0141ec1a18405cd4ce8b4613101da75da0e9a7aec5bdd4fa804d0e0eba73\"\n            ],\n            \"version\": \"==1.12.0\"\n        },\n        \"sure\": {\n            \"hashes\": [\n                \"sha256:3c8d5271fb18e2c69e2613af1ad400d8df090f1456081635bd3171847303cdaa\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.4.11\"\n        },\n        \"toml\": {\n            \"hashes\": [\n                \"sha256:229f81c57791a41d65e399fc06bf0848bab550a9dfd5ed66df18ce5f05e73d5c\",\n                \"sha256:235682dd292d5899d361a811df37e04a8828a5b1da3115886b73cf81ebc9100e\"\n            ],\n            \"version\": \"==0.10.0\"\n        },\n        \"tox\": {\n            \"hashes\": [\n                \"sha256:5358eae59e3bdba5d9bd0794331854e36250e62fa3cf7d4059ae730bfe5ca432\",\n                \"sha256:b7f8eb013c1c5fd758b272d4af97eeba168e6ea3fb604004582fce5aef0771c2\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==3.11.0\"\n        },\n        \"typing\": {\n            \"hashes\": [\n                \"sha256:4027c5f6127a6267a435201981ba156de91ad0d1d98e9ddc2aa173453453492d\",\n                \"sha256:57dcf675a99b74d64dacf6fba08fb17cf7e3d5fdff53d4a30ea2a5e7e52543d4\",\n                \"sha256:a4c8473ce11a65999c8f59cb093e70686b6c84c98df58c1dae9b3b196089858a\"\n            ],\n            \"markers\": \"python_version < '3.5'\",\n            \"version\": \"==3.6.6\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:2393a695cd12afedd0dcb26fe5d50d0cf248e5a66f75dbd89a3d4eb333a61af4\",\n                \"sha256:a637e5fae88995b256e3409dc4d52c2e2e0ba32c42a6365fee8bbd2238de3cfb\"\n            ],\n            \"version\": \"==1.24.3\"\n        },\n        \"virtualenv\": {\n            \"hashes\": [\n                \"sha256:99acaf1e35c7ccf9763db9ba2accbca2f4254d61d1912c5ee364f9cc4a8942a0\",\n                \"sha256:fe51cdbf04e5d8152af06c075404745a7419de27495a83f0d72518ad50be3ce8\"\n            ],\n            \"version\": \"==16.6.0\"\n        },\n        \"watchdog\": {\n            \"hashes\": [\n                \"sha256:965f658d0732de3188211932aeb0bb457587f04f63ab4c1e33eab878e9de961d\"\n            ],\n            \"version\": \"==0.9.0\"\n        },\n        \"wcwidth\": {\n            \"hashes\": [\n                \"sha256:3df37372226d6e63e1b1e1eda15c594bca98a22d33a23832a90998faa96bc65e\",\n                \"sha256:f4ebe71925af7b40a864553f761ed559b43544f8f71746c2d756c7fe788ade7c\"\n            ],\n            \"version\": \"==0.1.7\"\n        }\n    }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.3857421875,
          "content": "cloudflare-scrape\n=================\n\nA simple Python module to bypass Cloudflare's anti-bot page (also known as \"I'm Under Attack Mode\", or IUAM), implemented with [Requests](https://github.com/kennethreitz/requests). Python versions 2.6 - 3.7 are supported. Cloudflare changes their techniques periodically, so I will update this repo frequently.\n\nThis can be useful if you wish to scrape or crawl a website protected with Cloudflare. Cloudflare's anti-bot page currently just checks if the client supports JavaScript, though they may add additional techniques in the future.\n\nDue to Cloudflare continually changing and hardening their protection page, cloudflare-scrape requires Node.js to solve JavaScript challenges. This allows the script to easily impersonate a regular web browser without explicitly deobfuscating and parsing Cloudflare's JavaScript.\n\nNote: This only works when regular Cloudflare anti-bots is enabled (the \"Checking your browser before accessing...\" loading page). If there is a reCAPTCHA challenge, you're out of luck. Thankfully, the JavaScript check page is much more common.\n\nFor reference, this is the default message Cloudflare uses for these sorts of pages:\n\n    Checking your browser before accessing website.com.\n\n    This process is automatic. Your browser will redirect to your requested content shortly.\n\n    Please allow up to 5 seconds...\n\nAny script using cloudflare-scrape will sleep for 5 seconds for the first visit to any site with Cloudflare anti-bots enabled, though no delay will occur after the first request.\n\nInstallation\n============\n\nSimply run `pip install cfscrape`. You can upgrade with `pip install -U cfscrape`. The PyPI package is at https://pypi.python.org/pypi/cfscrape/\n\nAlternatively, clone this repository and run `python setup.py install`.\n\nNode.js dependency\n============\n\n[Node.js](https://nodejs.org/) version 10 or above is required to interpret Cloudflare's obfuscated JavaScript challenge.\n\nYour machine may already have Node installed (check with `node -v`). If not, you can install it with `apt-get install nodejs` on Ubuntu >= 18.04 and Debian >= 9 and `brew install node` on macOS. Otherwise, you can get it from [Node's download page](https://nodejs.org/en/download/) or [their package manager installation page](https://nodejs.org/en/download/package-manager/).\n\n\nUpdates\n=======\n\nCloudflare regularly modifies their anti-bot protection page and improves their bot detection capabilities.\n\nIf you notice that the anti-bot page has changed, or if this module suddenly stops working, please create a GitHub issue so that I can update the code accordingly.\n\n* Many issues are a result of users not updating to the latest release of this project. Before filing an issue, please run the following command to update cloudflare-scrape to the latest version:\n\n```\npip install -U cfscrape\n```\n\nIf you are still encountering a problem, create a GitHub issue and please include:\n\n* The version number from `pip show cfscrape`.\n* The relevant code snippet that's experiencing an issue or raising an exception.\n* The full exception and traceback, if applicable.\n* The URL of the Cloudflare-protected page which the script does not work on.\n* A Pastebin or Gist containing the HTML source of the protected page.\n\n\nIf you've upgraded and are still experiencing problems, **[click here to create a GitHub issue and fill out the pertinent information](https://github.com/Anorov/cloudflare-scrape/issues/new?assignees=&labels=bug&template=bug-report-template.md&title=)**.\n\nUsage\n=====\n\nThe simplest way to use cloudflare-scrape is by calling `create_scraper()`.\n\n```python\nimport cfscrape\n\nscraper = cfscrape.create_scraper()  # returns a CloudflareScraper instance\n# Or: scraper = cfscrape.CloudflareScraper()  # CloudflareScraper inherits from requests.Session\nprint scraper.get(\"http://somesite.com\").content  # => \"<!DOCTYPE html><html><head>...\"\n```\n\nThat's it. Any requests made from this session object to websites protected by Cloudflare anti-bot will be handled automatically. Websites not using Cloudflare will be treated normally. You don't need to configure or call anything further, and you can effectively treat all websites as if they're not protected with anything.\n\nYou use cloudflare-scrape exactly the same way you use Requests. (`CloudflareScraper` works identically to a Requests `Session` object.) Just instead of calling `requests.get()` or `requests.post()`, you call `scraper.get()` or `scraper.post()`. Consult [Requests' documentation](http://docs.python-requests.org/en/latest/user/quickstart/) for more information.\n\n## Options\n\n### Existing session\n\nIf you already have an existing Requests session, you can pass it to `create_scraper()` to continue using that session.\n\n```python\nsession = requests.session()\nsession.headers = ...\nscraper = cfscrape.create_scraper(sess=session)\n```\n\nUnfortunately, not all of Requests' session attributes are easily transferable, so if you run into problems with this, you should replace your initial `sess = requests.session()` call with `sess = cfscrape.create_scraper()`.\n\n### Delays\n\nNormally, when a browser is faced with a Cloudflare IUAM challenge page, Cloudflare requires the browser to wait 5 seconds before submitting the challenge answer. If a website is under heavy load, sometimes this may fail. One solution is to increase the delay (perhaps to 10 or 15 seconds, depending on the website). If you would like to override this delay, pass the `delay` keyword argument to `create_scraper()` or `CloudflareScraper()`.\n\nThere is no need to override this delay unless cloudflare-scrape generates an error recommending you increase the delay.\n\n```python\nscraper = cfscrape.create_scraper(delay=10)\n```\n\n## Integration\n\nIt's easy to integrate cloudflare-scrape with other applications and tools. Cloudflare uses two cookies as tokens: one to verify you made it past their challenge page and one to track your session. To bypass the challenge page, simply include both of these cookies (with the appropriate user-agent) in all HTTP requests you make.\n\nTo retrieve just the cookies (as a dictionary), use `cfscrape.get_tokens()`. To retrieve them as a full `Cookie` HTTP header, use `cfscrape.get_cookie_string()`.\n\n`get_tokens` and `get_cookie_string` both accept Requests' usual keyword arguments (like `get_tokens(url, proxies={\"http\": \"socks5://localhost:9050\"})`). Please read [Requests' documentation on request arguments](http://docs.python-requests.org/en/master/api/#requests.Session.request) for more information.\n\n*User-Agent Handling*\n\nThe two integration functions return a tuple of `(cookie, user_agent_string)`. **You must use the same user-agent string for obtaining tokens and for making requests with those tokens, otherwise Cloudflare will flag you as a bot.** That means you have to pass the returned `user_agent_string` to whatever script, tool, or service you are passing the tokens to (e.g. curl, or a specialized scraping tool), and it must use that passed user-agent when it makes HTTP requests.\n\nIf your tool already has a particular user-agent configured, you can make cloudflare-scrape use it with `cfscrape.get_tokens(\"http://somesite.com/\", user_agent=\"User-Agent Here\")` (also works for `get_cookie_string`). Otherwise, a randomly selected user-agent will be used.\n\n--------------------------------------------------------------------------------\n\n### Integration examples\n\nRemember, you must always use the same user-agent when retrieving or using these cookies. These functions all return a tuple of `(cookie_dict, user_agent_string)`.\n\n**Retrieving a cookie dict through a proxy**\n\n`get_tokens` is a convenience function for returning a Python dict containing Cloudflare's session cookies. For demonstration, we will configure this request to use a proxy. (Please note that if you request Cloudflare clearance tokens through a proxy, you must always use the same proxy when those tokens are passed to the server. Cloudflare requires that the challenge-solving IP and the visitor IP stay the same.)\n\nIf you do not wish to use a proxy, just don't pass the `proxies` keyword argument. These convenience functions support all of Requests' normal keyword arguments, like `params`, `data`, and `headers`.\n\n```python\nimport cfscrape\n\nproxies = {\"http\": \"http://localhost:8080\", \"https\": \"http://localhost:8080\"}\ntokens, user_agent = cfscrape.get_tokens(\"http://somesite.com\", proxies=proxies)\nprint tokens\n# => {'cf_clearance': 'c8f913c707b818b47aa328d81cab57c349b1eee5-1426733163-3600', '__cfduid': 'dd8ec03dfdbcb8c2ea63e920f1335c1001426733158'}\n```\n\n**Retrieving a cookie string**\n\n`get_cookie_string` is a convenience function for returning the tokens as a string for use as a `Cookie` HTTP header value.\n\nThis is useful when crafting an HTTP request manually, or working with an external application or library that passes on raw cookie headers.\n\n```python\nimport cfscrape\nrequest = \"GET / HTTP/1.1\\r\\n\"\n\ncookie_value, user_agent = cfscrape.get_cookie_string(\"http://somesite.com\")\nrequest += \"Cookie: %s\\r\\nUser-Agent: %s\\r\\n\" % (cookie_value, user_agent)\n\nprint request\n\n# GET / HTTP/1.1\\r\\n\n# Cookie: cf_clearance=c8f913c707b818b47aa328d81cab57c349b1eee5-1426733163-3600; __cfduid=dd8ec03dfdbcb8c2ea63e920f1335c1001426733158\n# User-Agent: Some/User-Agent String\n```\n\n**curl example**\n\nHere is an example of integrating cloudflare-scrape with curl. As you can see, all you have to do is pass the cookies and user-agent to curl.\n\n```python\nimport subprocess\nimport cfscrape\n\n# With get_tokens() cookie dict:\n\n# tokens, user_agent = cfscrape.get_tokens(\"http://somesite.com\")\n# cookie_arg = \"cf_clearance=%s; __cfduid=%s\" % (tokens[\"cf_clearance\"], tokens[\"__cfduid\"])\n\n# With get_cookie_string() cookie header; recommended for curl and similar external applications:\n\ncookie_arg, user_agent = cfscrape.get_cookie_string(\"http://somesite.com\")\n\n# With a custom user-agent string you can optionally provide:\n\n# ua = \"Scraping Bot\"\n# cookie_arg, user_agent = cfscrape.get_cookie_string(\"http://somesite.com\", user_agent=ua)\n\nresult = subprocess.check_output([\"curl\", \"--cookie\", cookie_arg, \"-A\", user_agent, \"http://somesite.com\"])\n```\n\nTrimmed down version. Prints page contents of any site protected with Cloudflare, via curl. (Warning: `shell=True` can be dangerous to use with `subprocess` in real code.)\n\n```python\nurl = \"http://somesite.com\"\ncookie_arg, user_agent = cfscrape.get_cookie_string(url)\ncmd = \"curl --cookie {cookie_arg} -A {user_agent} {url}\"\nprint(subprocess.check_output(cmd.format(cookie_arg=cookie_arg, user_agent=user_agent, url=url), shell=True))\n```\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.9697265625,
          "content": "os: Visual Studio 2015\n\ncache:\n  - '%LOCALAPPDATA%\\pip\\Cache'\n\nenvironment:\n  matrix:\n    - PYTHON: 'C:/Python27'\n    - PYTHON: 'C:/Python27-x64'\n    - PYTHON: 'C:/Python34'\n    - PYTHON: 'C:/Python34-x64'\n    - PYTHON: 'C:/Python35'\n    - PYTHON: 'C:/Python35-x64'\n    - PYTHON: 'C:/Python36'\n    - PYTHON: 'C:/Python36-x64'\n    - PYTHON: 'C:/Python37'\n    - PYTHON: 'C:/Python37-x64'\n      cfscrape_node: '4.5'\n    - PYTHON: 'C:/Python37-x64'\n      cfscrape_node: 'node'\n\ninstall:\n  - ps: >-\n      If ($env:cfscrape_node -ne $null) {\n        If ($env:cfscrape_node -Match \"node\") {\n          Install-Product node \"\"\n        }\n        Else {\n          Install-Product node $env:cfscrape_node\n        }\n      }\n  - 'set PATH=%PYTHON%;%PYTHON%/Scripts;%PATH%'\n  - 'python --version'\n  - 'node -p process.versions'\n  - 'pip -V'\n  - 'pip install pipenv'\n  - 'pipenv install --dev'\n\n# Not a C# project, build stuff at the install step instead.\nbuild: false\n\ntest_script: 'pipenv run pytest tests'\n"
        },
        {
          "name": "cfscrape",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.0478515625,
          "content": "[pytest]\naddopts = -p no:warnings\ntimeout = 2000\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.9208984375,
          "content": "import os\nimport re\nfrom setuptools import setup\n\nbase_path = os.path.dirname(__file__)\n\n\ndef get_long_description():\n    readme_md = os.path.join(base_path, \"README.md\")\n    with open(readme_md) as f:\n        return f.read()\n\n\nwith open(os.path.join(base_path, \"cfscrape\", \"__init__.py\")) as f:\n    VERSION = re.compile(r'.*__version__ = \"(.*?)\"', re.S).match(f.read()).group(1)\n\nsetup(\n    name=\"cfscrape\",\n    packages=[\"cfscrape\"],\n    version=VERSION,\n    description='A simple Python module to bypass Cloudflare\\'s anti-bot page. See https://github.com/Anorov/cloudflare-scrape for more information.',\n    long_description=get_long_description(),\n    long_description_content_type=\"text/markdown\",\n    author=\"Anorov\",\n    author_email=\"anorov.vorona@gmail.com\",\n    url=\"https://github.com/Anorov/cloudflare-scrape\",\n    keywords=[\"cloudflare\", \"scraping\"],\n    include_package_data=True,\n    install_requires=[\"requests >= 2.23.0\"],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.1748046875,
          "content": "[tox]\nenvlist = py27, py33, py34, py35, py36, py37, pypy\nskip_missing_interpreters = true\n\n[testenv]\ndeps = pipenv\ncommands=\n    pipenv install --dev\n    pipenv run py.test tests\n"
        }
      ]
    }
  ]
}