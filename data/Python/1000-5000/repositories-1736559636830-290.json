{
  "metadata": {
    "timestamp": 1736559636830,
    "page": 290,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "audreyfeldroy/cookiecutter-pypackage",
      "stars": 4284,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3349609375,
          "content": "# http://editorconfig.org\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = true\ninsert_final_newline = true\ncharset = utf-8\nend_of_line = lf\n\n[*.bat]\nindent_style = tab\nend_of_line = crlf\n\n[LICENSE]\ninsert_final_newline = false\n\n[Makefile]\nindent_style = tab\n\n[*.{diff,patch}]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3251953125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# OSX useful to ignore\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nvenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# IntelliJ Idea family of suites\n.idea\n*.iml\n## File-based project format:\n*.ipr\n*.iws\n## mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# PyBuilder\ntarget/\n\n# Cookiecutter\noutput/\npython_boilerplate/\ncookiecutter-pypackage-env/\n\n# IDE settings\n.vscode/\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.5634765625,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# We recommend specifying your dependencies to enable reproducible builds:\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\n# python:\n#   install:\n#   - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 5.900390625,
          "content": "============\nContributing\n============\n\nContributions are welcome, and they are greatly appreciated! Every little bit\nhelps, and credit will always be given.\n\nYou can contribute in many ways:\n\nTypes of Contributions\n----------------------\n\nReport Bugs\n~~~~~~~~~~~\n\nReport bugs at https://github.com/audreyr/cookiecutter-pypackage/issues\n\nIf you are reporting a bug, please include:\n\n* Your operating system name and version.\n* Any details about your local setup that might be helpful in troubleshooting.\n* Detailed steps to reproduce the bug.\n\nFix Bugs\n~~~~~~~~\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\"\nand \"help wanted\" is open to whoever wants to implement a fix for it.\n\nImplement Features\n~~~~~~~~~~~~~~~~~~\n\nLook through the GitHub issues for features. Anything tagged with \"enhancement\"\nand \"help wanted\" is open to whoever wants to implement it.\n\nWrite Documentation\n~~~~~~~~~~~~~~~~~~~\n\nCookiecutter PyPackage could always use more documentation, whether as part of\nthe official docs, in docstrings, or even on the web in blog posts, articles,\nand such.\n\nSubmit Feedback\n~~~~~~~~~~~~~~~\n\nThe best way to send feedback is to file an issue at\nhttps://github.com/audreyr/cookiecutter-pypackage/issues.\n\nIf you are proposing a new feature:\n\n* Explain in detail how it would work.\n* Keep the scope as narrow as possible, to make it easier to implement.\n* Remember that this is a volunteer-driven project, and that contributions\n  are welcome :)\n\nGet Started!\n------------\n\nReady to contribute? Here's how to set up `cookiecutter-pypackage` for local\ndevelopment. Please note this documentation assumes you already have\n`virtualenv` and `Git` installed and ready to go.\n\n1. Fork the `cookiecutter-pypackage` repo on GitHub.\n\n::\n\n2. Clone your fork locally:\n\n   .. code-block:: bash\n\n    $ cd path_for_the_repo\n    $ git clone git@github.com:YOUR_NAME/cookiecutter-pypackage.git\n\n::\n\n3. Assuming you have virtualenv installed (If you have Python 3.6 this should\n   already be there), you can create a new environment for your local\n   development by typing:\n\n   .. code-block:: bash\n\n        $ virtualenv cookiecutter-pypackage-env\n        $ source cookiecutter-pypackage-env/bin/activate\n\n   This should change the shell to look something like:\n\n   .. code-block:: bash\n\n        (cookiecutter-pypackage-env) $\n\n::\n\n4. Create a branch for local development:\n\n   .. code-block:: bash\n\n        $ git checkout -b name-of-your-bugfix-or-feature\n\n   Now you can make your changes locally.\n\n::\n\n5. When you're done making changes, check that your changes pass flake8. Since,\n   this package contains mostly templates the flake should be run for tests\n   directory:\n\n   .. code-block:: bash\n\n        $ flake8 ./tests\n\n::\n\n6. The next step would be to run the test cases. `cookiecutter-pypackage` uses\n   pytest, you can run PyTest. Before you run pytest you should ensure all\n   dependencies are installed:\n\n   .. code-block:: bash\n\n        $ pip install -r requirements_dev.txt\n        $ pytest ./tests\n\n   If you get any errors while installing cryptography package (something like\n   `#include <openssl/aes.h>`). Please update your pip version and try again:\n\n   .. code-block:: bash\n\n        # Update pip\n        $ pip install -U pip\n\n::\n\n7. Before raising a pull request you should also run tox. This will run the\n   tests across different versions of Python:\n\n   .. code-block:: bash\n\n        $ tox\n\n   If you are missing flake8, pytest and/or tox, just `pip install` them into\n   your virtualenv.\n\n::\n\n8. If your contribution is a bug fix or new feature, you may want to add a test\n   to the existing test suite. See section Add a New Test below for details.\n\n::\n\n9. Commit your changes and push your branch to GitHub:\n\n   .. code-block:: bash\n\n        $ git add .\n        $ git commit -m \"Your detailed description of your changes.\"\n        $ git push origin name-of-your-bugfix-or-feature\n\n::\n\n10. Submit a pull request through the GitHub website.\n\n::\n\nPull Request Guidelines\n-----------------------\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n1. The pull request should include tests.\n\n2. If the pull request adds functionality, the docs should be updated. Put your\n   new functionality into a function with a docstring, and add the feature to\n   the list in README.rst.\n\n3. The pull request should work for Python 3.6 and 3.7, 3.8 and for PyPy. Check\n   https://travis-ci.org/audreyr/cookiecutter-pypackage/pull_requests and\n   make sure that the tests pass for all supported Python versions.\n\nAdd a New Test\n--------------\n\nWhen fixing a bug or adding features, it's good practice to add a test to\ndemonstrate your fix or new feature behaves as expected. These tests should\nfocus on one tiny bit of functionality and prove changes are correct.\n\nTo write and run your new test, follow these steps:\n\n1. Add the new test to `tests/test_bake_project.py`. Focus your test on the\n   specific bug or a small part of the new feature.\n\n::\n\n2. If you have already made changes to the code, stash your changes and confirm\n   all your changes were stashed:\n\n   .. code-block:: bash\n\n        $ git stash\n        $ git stash list\n\n::\n\n3. Run your test and confirm that your test fails. If your test does not fail,\n   rewrite the test until it fails on the original code:\n\n   .. code-block:: bash\n\n        $ pytest ./tests\n\n::\n\n4. (Optional) Run the tests with tox to ensure that the code changes work with\n   different Python versions:\n\n   .. code-block:: bash\n\n        $ tox\n\n::\n\n5. Proceed work on your bug fix or new feature or restore your changes. To\n   restore your stashed changes and confirm their restoration:\n\n   .. code-block:: bash\n\n        $ git stash pop\n        $ git stash list\n\n::\n\n6. Rerun your test and confirm that your test passes. If it passes,\n   congratulations!\n\n.. cookiecutter: https://github.com/audreyr/cookiecutter-pypackage\n.. virtualenv: https://virtualenv.pypa.io/en/stable/installation\n.. git: https://git-scm.com/book/en/v2/Getting-Started-Installing-Git\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5146484375,
          "content": "Copyright (c) Audrey Roy Greenfeld and individual contributors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n    * Neither the name of Audrey Roy Greenfeld nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.556640625,
          "content": "BAKE_OPTIONS=--no-input\n\nhelp:\n\t@echo \"bake \tGenerate project using defaults\"\n\t@echo \"help \tShow this help\"\n\t@echo \"test \tRun the tests\"\n\t@echo \"replay \tReplay last cookiecutter run and watch for changes\"\n\t@echo \"watch \tGenerate project using defaults and watch for changes\"\n\t\n\nbake:  # Generate project using defaults\n\tcookiecutter $(BAKE_OPTIONS) . --overwrite-if-exists\n\nwatch: bake\n\twatchmedo shell-command -p '*.*' -c 'make bake -e BAKE_OPTIONS=$(BAKE_OPTIONS)' -W -R -D \\{{cookiecutter.project_slug}}/\n\nreplay: BAKE_OPTIONS=--replay\nreplay: watch\n\t;\n\ntest:\n\tpytest"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.091796875,
          "content": "======================\nCookiecutter PyPackage\n======================\n\n.. image:: https://pyup.io/repos/github/audreyfeldroy/cookiecutter-pypackage/shield.svg\n    :target: https://pyup.io/repos/github/audreyfeldroy/cookiecutter-pypackage/\n    :alt: Updates\n\n.. image:: https://travis-ci.org/audreyfeldroy/cookiecutter-pypackage.svg?branch=master\n    :target: https://travis-ci.org/github/audreyfeldroy/cookiecutter-pypackage\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/cookiecutter-pypackage/badge/?version=latest\n    :target: https://cookiecutter-pypackage.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\nCookiecutter_ template for a Python package.\n\n* GitHub repo: https://github.com/audreyfeldroy/cookiecutter-pypackage/\n* Documentation: https://cookiecutter-pypackage.readthedocs.io/\n* Free software: BSD license\n* Discord: https://discord.gg/PWXJr3upUE\n\nFeatures\n--------\n\n* Testing setup with ``unittest`` and ``python setup.py test`` or ``pytest``\n* Travis-CI_: Ready for Travis Continuous Integration testing\n* Tox_ testing: Setup to easily test for Python 3.6, 3.7, 3.8\n* Sphinx_ docs: Documentation ready for generation with, for example, `Read the Docs`_\n* bump2version_: Pre-configured version bumping with a single command\n* Auto-release to PyPI_ when you push a new tag to master (optional)\n* Command line interface using Click (optional)\n\n.. _Cookiecutter: https://github.com/cookiecutter/cookiecutter\n\nBuild Status\n-------------\n\nLinux:\n\n.. image:: https://img.shields.io/travis/audreyfeldroy/cookiecutter-pypackage.svg\n    :target: https://travis-ci.org/audreyfeldroy/cookiecutter-pypackage\n    :alt: Linux build status on Travis CI\n\nWindows:\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/audreyr/cookiecutter-pypackage?branch=master&svg=true\n    :target: https://ci.appveyor.com/project/audreyr/cookiecutter-pypackage/branch/master\n    :alt: Windows build status on Appveyor\n\nQuickstart\n----------\n\nInstall the latest Cookiecutter if you haven't installed it yet (this requires\nCookiecutter 1.4.0 or higher)::\n\n    pip install -U cookiecutter\n\nGenerate a Python package project::\n\n    cookiecutter https://github.com/audreyfeldroy/cookiecutter-pypackage.git\n\nThen:\n\n* Create a repo and put it there.\n* Add the repo to your Travis-CI_ account.\n* Install the dev requirements into a virtualenv. (``pip install -r requirements_dev.txt``)\n* Register_ your project with PyPI.\n* Run the Travis CLI command ``travis encrypt --add deploy.password`` to encrypt your PyPI password in Travis config\n  and activate automated deployment on PyPI when you push a new tag to master branch.\n* Add the repo to your `Read the Docs`_ account + turn on the Read the Docs service hook.\n* Release your package by pushing a new tag to master.\n* Add a ``requirements.txt`` file that specifies the packages you will need for\n  your project and their versions. For more info see the `pip docs for requirements files`_.\n* Activate your project on `pyup.io`_.\n\n.. _`pip docs for requirements files`: https://pip.pypa.io/en/stable/user_guide/#requirements-files\n.. _Register: https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives\n\nFor more details, see the `cookiecutter-pypackage tutorial`_.\n\n.. _`cookiecutter-pypackage tutorial`: https://cookiecutter-pypackage.readthedocs.io/en/latest/tutorial.html\n\nNot Exactly What You Want?\n--------------------------\n\nDon't worry, you have options:\n\nSimilar Cookiecutter Templates\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* `Nekroze/cookiecutter-pypackage`_: A fork of this with a PyTest test runner,\n  strict flake8 checking with Travis/Tox, and some docs and ``setup.py`` differences.\n\n* `tony/cookiecutter-pypackage-pythonic`_: Fork with py2.7+3.3 optimizations.\n  Flask/Werkzeug-style test runner, ``_compat`` module and module/doc conventions.\n  See ``README.rst`` or the `github comparison view`_ for exhaustive list of\n  additions and modifications.\n\n* `ardydedase/cookiecutter-pypackage`_: A fork with separate requirements files rather than a requirements list in the ``setup.py`` file.\n\n* `lgiordani/cookiecutter-pypackage`_: A fork of Cookiecutter that uses Punch_ instead of bump2version_ and with separate requirements files.\n\n* `briggySmalls/cookiecutter-pypackage`_: A fork using Poetry_ for neat package management and deployment, with linting, formatting, no makefiles and more.\n\n* `veit/cookiecutter-namespace-template`_: A cookiecutter template for python modules with a namespace\n\n* `zillionare/cookiecutter-pypackage`_: A template containing Poetry_, Mkdocs_, Github CI and many more. It's a template and a package also (can be installed with `pip`)\n\n* `waynerv/cookiecutter-pypackage`_: A fork using Poetry_, Mkdocs_, Pre-commit_, Black_ and Mypy_. Run test, staging and release workflows with GitHub Actions, automatically generate release notes from CHANGELOG.\n\n* Also see the `network`_ and `family tree`_ for this repo. (If you find\n  anything that should be listed here, please add it and send a pull request!)\n\nFork This / Create Your Own\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you have differences in your preferred setup, I encourage you to fork this\nto create your own version. Or create your own; it doesn't strictly have to\nbe a fork.\n\n* Once you have your own version working, add it to the Similar Cookiecutter\n  Templates list above with a brief description.\n\n* It's up to you whether or not to rename your fork/own version. Do whatever\n  you think sounds good.\n\nOr Submit a Pull Request\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nI also accept pull requests on this, if they're small, atomic, and if they\nmake my own packaging experience better.\n\n\n.. _Travis-CI: http://travis-ci.org/\n.. _Tox: http://testrun.org/tox/\n.. _Sphinx: http://sphinx-doc.org/\n.. _Read the Docs: https://readthedocs.io/\n.. _`pyup.io`: https://pyup.io/\n.. _bump2version: https://github.com/c4urself/bump2version\n.. _Punch: https://github.com/lgiordani/punch\n.. _Poetry: https://python-poetry.org/\n.. _PyPi: https://pypi.python.org/pypi\n.. _Mkdocs: https://pypi.org/project/mkdocs/\n.. _Pre-commit: https://pre-commit.com/\n.. _Black: https://black.readthedocs.io/en/stable/\n.. _Mypy: https://mypy.readthedocs.io/en/stable/\n\n.. _`Nekroze/cookiecutter-pypackage`: https://github.com/Nekroze/cookiecutter-pypackage\n.. _`tony/cookiecutter-pypackage-pythonic`: https://github.com/tony/cookiecutter-pypackage-pythonic\n.. _`ardydedase/cookiecutter-pypackage`: https://github.com/ardydedase/cookiecutter-pypackage\n.. _`lgiordani/cookiecutter-pypackage`: https://github.com/lgiordani/cookiecutter-pypackage\n.. _`briggySmalls/cookiecutter-pypackage`: https://github.com/briggySmalls/cookiecutter-pypackage\n.. _`veit/cookiecutter-namespace-template`: https://github.com/veit/cookiecutter-namespace-template\n.. _`zillionare/cookiecutter-pypackage`: https://zillionare.github.io/cookiecutter-pypackage/\n.. _`waynerv/cookiecutter-pypackage`: https://waynerv.github.io/cookiecutter-pypackage/\n.. _github comparison view: https://github.com/tony/cookiecutter-pypackage-pythonic/compare/audreyr:master...master\n.. _`network`: https://github.com/audreyr/cookiecutter-pypackage/network\n.. _`family tree`: https://github.com/audreyr/cookiecutter-pypackage/network/members\n"
        },
        {
          "name": "cookiecutter.json",
          "type": "blob",
          "size": 0.859375,
          "content": "{\n  \"full_name\": \"Audrey Roy Greenfeld\",\n  \"email\": \"audreyr@example.com\",\n  \"github_username\": \"audreyr\",\n  \"project_name\": \"Python Boilerplate\",\n  \"project_slug\": \"{{ cookiecutter.project_name.lower().replace(' ', '_').replace('-', '_') }}\",\n  \"project_short_description\": \"Python Boilerplate contains all the boilerplate you need to create a Python package.\",\n  \"pypi_username\": \"{{ cookiecutter.github_username }}\",\n  \"version\": \"0.1.0\",\n  \"use_pytest\": \"n\",\n  \"use_pypi_deployment_with_travis\": \"y\",\n  \"add_pyup_badge\": \"n\",\n  \"command_line_interface\": [\"Typer\", \"Argparse\", \"No command-line interface\"],\n  \"create_author_file\": \"y\",\n  \"open_source_license\": [\"MIT license\", \"BSD license\", \"ISC license\", \"Apache Software License 2.0\", \"GNU General Public License v3\", \"Not open source\"],\n  \"__gh_slug\": \"{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}\"\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.02734375,
          "content": "[pytest]\ntestpaths = tests/\n"
        },
        {
          "name": "requirements_dev.txt",
          "type": "blob",
          "size": 0.111328125,
          "content": "pytest==8.1.1\ntox==4.14.2\ncookiecutter>=2.6.0\npytest-cookies==0.7.0\nalabaster==0.7.16\nwatchdog==4.0.0\nruff==0.3.5\n"
        },
        {
          "name": "ruff.toml",
          "type": "blob",
          "size": 0.044921875,
          "content": "exclude = [\n\t\"*cookiecutter.project_slug*\"\n\t]\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.201171875,
          "content": "[bumpversion]\ncurrent_version = 0.5.10\ncommit = True\ntag = True\n\n[metadata]\ndescription-file = README.rst\n\n[bumpversion:file:setup.py]\nsearch = version='{current_version}'\nreplace = version='{new_version}'\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.076171875,
          "content": "# !/usr/bin/env python\n\nfrom distutils.core import setup\nsetup(\n    name='cookiecutter-pypackage',\n    packages=[],\n    version='0.1.0',\n    description='Cookiecutter template for a Python package',\n    author='Audrey M. Roy Greenfeld',\n    license='BSD',\n    author_email='audrey@feldroy.com',\n    url='https://github.com/audreyfeldroy/cookiecutter-pypackage',\n    keywords=['cookiecutter', 'template', 'package', ],\n    python_requires='>=3.10',\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Natural Language :: English',\n        'License :: OSI Approved :: BSD License',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: Implementation :: CPython',\n        'Programming Language :: Python :: Implementation :: PyPy',\n        'Topic :: Software Development',\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "{{cookiecutter.project_slug}}",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}