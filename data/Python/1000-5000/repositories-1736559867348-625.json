{
  "metadata": {
    "timestamp": 1736559867348,
    "page": 625,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tlkh/asitop",
      "stars": 3669,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 6.00390625,
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.771484375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# idea\n.idea/\n"
        },
        {
          "name": ".whitesource",
          "type": "blob",
          "size": 0.2080078125,
          "content": "{\n  \"scanSettings\": {\n    \"baseBranches\": []\n  },\n  \"checkRunSettings\": {\n    \"vulnerableCheckRunConclusionLevel\": \"failure\",\n    \"displayMode\": \"diff\"\n  },\n  \"issueSettings\": {\n    \"minSeverityLevel\": \"LOW\"\n  }\n}"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2021 Timothy Liu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8662109375,
          "content": "# asitop\n\n![PyPI - Downloads](https://img.shields.io/pypi/dm/asitop)\n\nPerformance monitoring CLI tool for Apple Silicon\n\n![](images/asitop.png)\n\n```shell\npip install asitop\n```\n\n## What is `asitop`\n\nA Python-based `nvtop`-inspired command line tool for Apple Silicon (aka M1) Macs.\n\n* Utilization info:\n  * CPU (E-cluster and P-cluster), GPU\n  * Frequency and utilization\n  * ANE utilization (measured by power)\n* Memory info:\n  * RAM and swap, size and usage\n  * (Apple removed memory bandwidth from `powermetrics`)\n* Power info:\n  * CPU power, GPU power (Apple removed package power from `powermetrics`)\n  * Chart for CPU/GPU power\n  * Peak power, rolling average display\n\n`asitop` uses the built-in [`powermetrics`](https://www.unix.com/man-page/osx/1/powermetrics/) utility on macOS, which allows access to a variety of hardware performance counters. Note that it requires `sudo` to run due to `powermetrics` needing root access to run. `asitop` is lightweight and has minimal performance impact.\n\n**`asitop` only works on Apple Silicon Macs on macOS Monterey!**\n\n## Installation and Usage\n\n`asitop` is a Python-based command line tool. You need `pip` to download and install `asitop`. macOS already comes with Python, to install `pip`, you can follow an [online guide](https://phoenixnap.com/kb/install-pip-mac). After you install `asitop` via `pip`, you can use it via the Terminal.\n\n```shell\n# to enter password before start\n# this mode is recommended!\nsudo asitop\n\n# it will prompt password on start\nasitop\n\n# advanced options\nasitop [-h] [--interval INTERVAL] [--color COLOR] [--avg AVG]\noptional arguments:\n  -h, --help           show this help message and exit\n  --interval INTERVAL  Display interval and sampling interval for powermetrics (seconds)\n  --color COLOR        Choose display color (0~8)\n  --avg AVG            Interval for averaged values (seconds)\n```\n\n## How it works\n\n`powermetrics` is used to measure the following:\n\n* CPU/GPU utilization via active residency\n* CPU/GPU frequency\n* Package/CPU/GPU/ANE energy consumption\n* CPU/GPU/Media Total memory bandwidth via the DCS (DRAM Command Scheduler)\n\n[`psutil`](https://github.com/giampaolo/psutil) is used to measure the following:\n\n* memory and swap usage\n\n[`sysctl`](https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/sysctl.3.html) is used to measure the following:\n\n* CPU name\n* CPU core counts\n\n[`system_profiler`](https://ss64.com/osx/system_profiler.html) is used to measure the following:\n\n* GPU core count\n\nSome information is guesstimate and hardcoded as there doesn't seem to be a official source for it on the system:\n\n* CPU/GPU TDP\n* CPU/GPU maximum memory bandwidth\n* ANE max power\n* Media engine max bandwidth\n\n## Why\n\nBecause I didn't find something like this online. Also, just curious about stuff.\n\n## Disclaimers\n\nI did this randomly don't blame me if it fried your new MacBook or something.\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0263671875,
          "content": "theme: jekyll-theme-minimal"
        },
        {
          "name": "asitop",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.8486328125,
          "content": "from setuptools import setup, find_packages\n\nlong_description = 'Performance monitoring CLI tool for Apple Silicon'\n\nsetup(\n    name='asitop',\n    version='0.0.22',\n    author='Timothy Liu',\n    author_email='tlkh.xms@gmail.com',\n    url='https://github.com/tlkh/asitop',\n    description='Performance monitoring CLI tool for Apple Silicon',\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    license='MIT',\n    packages=find_packages(),\n    entry_points={\n            'console_scripts': [\n                'asitop = asitop.asitop:main'\n            ]\n    },\n    classifiers=(\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: MacOS\",\n    ),\n    keywords='asitop',\n    install_requires=[\n        \"dashing\",\n        \"psutil\",\n    ],\n    zip_safe=False\n)\n"
        }
      ]
    }
  ]
}