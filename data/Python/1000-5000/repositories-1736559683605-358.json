{
  "metadata": {
    "timestamp": 1736559683605,
    "page": 358,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openvinotoolkit/open_model_zoo",
      "stars": 4129,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.111328125,
          "content": "root = true\n\n[*]\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 1.064453125,
          "content": "[flake8]\nexclude=\n    # generic excludes\n    .git,__pycache__,\n    # generated files\n    demos/speech_recognition_deepspeech_demo/python/ctcdecode-numpy/ctcdecode_numpy/impl.py,\n    models/public/mozilla-deepspeech-0.8.2/mds_convert_utils/memmapped_file_system_pb2.py,\nselect=\n    # flake8-comprehensions issues\n    C4,\n    # indentation problems\n    E10,E11,\n    # closing bracket does not match indentation of opening brackets line\n    E123,\n    # whitespace before '('\n    E211,\n    # missing whitespace after ',', ';', or ':'\n    E231,\n    # missing whitespace after keyword\n    E275,\n    # expected 1 blank line, found 0\n    E301,\n    # blank lines found after function decorator\n    E304,\n    # the backslash is redundant between brackets\n    E502,\n    # statement style issues\n    E7,\n    # parse errors\n    E9,\n    # pyflakes checks\n    F4,F5,F6,F7,F8,F9,\n    # deprecation warnings\n    W6,\n\nignore=\n    # multiple statements on one line (colon/def)\n    # ignored because putting a statement after a colon is harmless and\n    # sometimes results in more compact code\n    E701,E704,\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.3173828125,
          "content": "* text=auto\n\n/demos/thirdparty/** -whitespace\n\n# In patches, a context line is prefixed by a space, and if it's empty,\n# that space becomes a trailing space. That's a valid use for trailing spaces,\n# so allow it.\n*.patch whitespace=-blank-at-eol\n\n.bandit -omz.package\n.editorconfig -omz.package\n.flake8 -omz.package\n.git* -omz.package\n.yamllint -omz.package\n/ci/** -omz.package\n/demos/build_demos.sh omz.package=l,m\n/demos/build_demos_msvc.bat omz.package=w\n/demos/tests/** -omz.package\n/tools/model_tools/tests/** -omz.package\n\n* omz.package.component=dev\n/LICENSE omz.package.component=tools\n/data/dataset_definitions.yml omz.package.component=tools\n/models/**/*.py omz.package.component=tools\n/models/**/*.yml omz.package.component=tools\n/tools/**/* omz.package.component=tools\n\n/ci/dependencies.yml omz.ci.job-for-change.ac omz.ci.job-for-change.demos omz.ci.job-for-change.models\n\n/demos/** omz.ci.job-for-change.demos\n\n/tools/accuracy_checker/** omz.ci.job-for-change.ac\n/tools/accuracy_checker/configs/*.yml -omz.ci.job-for-change.ac\n/tools/model_tools/** omz.ci.job-for-change.downloader\n\n*.md omz.ci.job-for-change.documentation -omz.ci.job-for-change.ac -omz.ci.job-for-change.demos -omz.ci.job-for-change.downloader\n\n/models/intel/device_support.md omz.ci.job-for-change.demos\n/models/public/device_support.md omz.ci.job-for-change.demos\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "*.pyc\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.111328125,
          "content": "[submodule \"demos/thirdparty/gflags\"]\n\tpath = demos/thirdparty/gflags\n\turl = https://github.com/gflags/gflags.git\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.990234375,
          "content": "yaml-files:\n  - '*.yaml'\n  - '*.yml'\n  - '.yamllint'\n\n# The tools/accuracy_checker/ ignores are there because those files\n# are all symlinks, and:\n# a) it's pointless to check symlinks if we check the real files too;\n# b) on Windows, Git turns links into regular files containing the target name,\n#    which yamllint complains about.\n\nignore: |\n  ci/bandit.yml\n  demos/thirdparty/\n  tools/accuracy_checker/dataset_definitions.yml\n  tools/accuracy_checker/configs/\n\nrules:\n  line-length: disable\n  braces: enable\n  brackets: enable\n  colons:\n    max-spaces-before: 0\n    max-spaces-after: -1\n  commas: enable\n  comments:\n    level: warning\n  comments-indentation:\n    level: warning\n  document-end: disable\n  document-start: disable\n  empty-lines: enable\n  empty-values: enable\n  hyphens: enable\n  indentation: enable\n  key-duplicates: enable\n  key-ordering: disable\n  new-line-at-end-of-file: enable\n  new-lines: disable\n  octal-values: enable\n  quoted-strings: disable\n  trailing-spaces: enable\n  truthy: disable\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.232421875,
          "content": "# See help here: https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-code-owners\n\n# Control 3d party dependencies\n**/*requirements*.*  @openvino-configuration-mgmt\n**/setup.py  @openvino-configuration-mgmt\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 13.0791015625,
          "content": "# How to Contribute Models to Open Model Zoo\n\n> [!NOTE]\n> Open Model Zoo is in maintenance mode as a source of models. Check out model tutorials in [Jupyter notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n\nWe appreciate your intention to contribute model to the OpenVINO&trade; Open Model Zoo (OMZ). OMZ is licensed under the Apache\\* License, Version 2.0. By contributing to the project, you agree to the license and copyright terms therein and release your contribution under these terms. Note that we accept models under permissive licenses, such as **MIT**, **Apache 2.0**, and **BSD-3-Clause**. Otherwise, it might take longer time to get your model approved.\n\nFrameworks supported by the Open Model Zoo:\n* TensorFlow\\*\n* PyTorch\\* (via conversion to ONNX\\*)\n\nOpen Model Zoo also supports models already in the ONNX format.\n\n## Pull Request Requirements\n\nTo contribute to OMZ, create a pull request (PR) in this repository using the `master` branch.\nPull requests are strictly formalized and are reviewed by the OMZ maintainers for consistence and legal compliance.\n\nEach PR contributing a model must contain:\n* [configuration file `model.yml`](#configuration-file)\n* [documentation of model in markdown format](#documentation)\n* [accuracy validation configuration file](#accuracy-validation)\n* (*optional*) [demo](#demo)\n\nFollow the rules in the sections below before submitting a pull request.\n\n### Model Name\n\nName your model in OMZ according to the following rules:\n- Use a name that is consistent with an original name, but complete match is not necessary\n- Use lowercase\n- Use `-`(preferable) or `_` as delimiters, for spaces are not allowed\n- Add a suffix according to framework identifier (see **`framework`** description in the [configuration file](#configuration-file) section for examples), if the model is a reimplementation of an existing model from another framework\n\nThis name will be used for downloading, converting, and other operations.\nAn example of model name is `resnet-50-pytorch`\n\n### Files Location\n\nPlace your files as shown in the table below:\n\nFile | Destination\n---|---\nconfiguration file | `models/public/<model_name>/model.yml`\ndocumentation file | `models/public/<model_name>/README.md`\nvalidation configuration file|`models/public/<model_name>/accuracy-check.yml`\ndemo|`demos/<demo_name>/<language>/`\n\n### Tests\n\nYour PR must pass next tests:\n* Model is downloadable by the `tools/model_tools/downloader.py` script. See [Configuration file](#configuration-file) for details.\n* Model is convertible by the `tools/model_tools/converter.py` script. See [Model conversion](#model-conversion) for details.\n* Model is usable by demo or sample and provides adequate results. See [Demo](#demo) for details.\n* Model passes accuracy validation. See [Accuracy validation](#accuracy-validation) for details.\n\n\n### PR Rejection\n\nYour PR may be rejected in some cases, for example:\n* If a license is inappropriate (such as GPL-like licenses).\n* If a dataset is inaccessible.\n* If the PR fails one of the tests above.\n\n## Configuration File\n\nThe model configuration file contains information about model: what it is, how to download it, and how to convert it to the IR format. This information must be specified in the `model.yml` file that must be located in the model subfolder.\n\nThe detailed descriptions of file entries provided below.\n\n**`description`**\n\nDescription of the model. Must match with the description from the model [documentation](#documentation). Use [this](./ci/documentation_updater/documentation_updater.py) script for easy update.\n\n**`task_type`**\n\n[Model task type](tools/model_tools/README.md#model-information-dumper-usage). If there is no task type of your model, add a new one to the list `KNOWN_TASK_TYPES` of the [`omz_tools._common`](tools/model_tools/src/omz_tools/_common.py) module.\n\n**`model_info`** (*optional*)\n\nDict for ModelAPI model wrappers. Used for [Python Model API](demos/README.md#python-model-api-installation) class creation.\n\n**`files`**\n\n> **NOTE**: Before filling this section, make sure that the model can be downloaded either via a direct HTTP(S) link or from Google Drive\\*.\n\nDownloadable files. Each file is described by:\n\n* `name` - sets a file name after downloading\n* `size` - sets a file size\n* `checksum`  - sets a file hash sum\n* `source` - sets a direct link to a file *OR* describes a file access parameters\n\n> **TIP**: You can obtain a hash sum using the `sha384sum <file_name>` command on Linux\\*.\n\nIf file is located on Google Drive\\*, the `source` section must contain:\n- `$type: google_drive`\n- `id` file ID on Google Drive\\*\n\n> **NOTE:** If file is on GitHub\\*, use the specific file version.\n\n**`postprocessing`** (*optional*)\n\nPost processing of the downloaded files.\n\nFor unpacking archive:\n- `$type: unpack_archive`\n- `file` — Archive file name\n- `format` — Archive format (zip | tar | gztar | bztar | xztar)\n\nFor replacement operation:\n- `$type: regex_replace`\n- `file` — Name of file to run replacement in\n- `pattern` — [Regular expression](https://docs.python.org/3/library/re.html)\n- `replacement` — Replacement string\n- `count` (*optional*)  — Exact number of replacements (if number of `pattern` occurrences less then this number, downloading will be aborted)\n\n**`input_info`**\n\nList of inputs containing the information about input name, shape and layout. For example:\n```\ninput_info:\n  - name: Placeholder\n    shape: [1, 224, 224, 3]\n    layout: NHWC\n```\n\n**`conversion_to_onnx_args`** (*only for PyTorch\\* models*)\n\nList of ONNX\\* conversion parameters, see `model_optimizer_args` for details.\n\n**`model_optimizer_args`**\n\nConversion parameters (learn more in the [Model conversion](#model-conversion) section). For example:\n```\n  - --mean_values=data[127.5]\n  - --scale_values=data[127.5]\n  - --reverse_input_channels\n  - --output=prob\n  - --input_model=$conv_dir/googlenet-v3.onnx\n```\n\n> **NOTE:** Do not specify `framework`, `data_type`, `model_name` and `output_dir`, since they are deduced automatically.\n\n> **NOTE:** `$dl_dir` used to substitute subdirectory of downloaded model and `$conv_dir` used to substitute subdirectory of converted model.\n\n**`framework`**\n\nFramework of the original model (see [here](tools/model_tools/README.md#model-information-dumper-usage) for details).\n\n**`license`**\n\nURL of the model license.\n\n### Example\n\nThis example shows how to download the classification model [efficientdet-d1-tf*](models/public/efficientdet-d1-tf/model.yml) pretrained in TensorFlow\\*.\n\n```\ndescription: >-\n  The \"efficientdet-d1-tf\" model is one of the EfficientDet <https://arxiv.org/abs/1911.09070>\n  models  designed to perform object detection. This model was pre-trained in TensorFlow*.\n  All the EfficientDet models have been pre-trained on the Common Objects in Context\n  (COCO) <https://cocodataset.org/#home> image database. For details about this family\n  of models, check out the Google AutoML repository <https://github.com/google/automl/tree/master/efficientdet>.\ntask_type: detection\nfiles:\n  - name: efficientdet-d1_frozen.pb\n    size: 28613804\n    checksum: f89a4fe6072e5dddc71c0532261e1cd89a69472d92a85445437e8b57129708adbad35cf09a8e7603a25b05ee0ebdf4cb\n    source: https://storage.openvinotoolkit.org/repositories/open_model_zoo/public/2023.0/efficientdet-d1-tf/efficientdet-d1_frozen.pb\ninput_info:\n  - name: image_arrays\n    shape: [1, 640, 640, 3]\n    layout: NHWC\nmodel_optimizer_args:\n  - --reverse_input_channels\n  - --input_model=$dl_dir/efficientdet-d1_frozen.pb\n  - --transformations_config=$mo_ext_dir/front/tf/automl_efficientdet.json\nframework: tf\nlicense: https://raw.githubusercontent.com/google/automl/master/LICENSE\n```\n\n## Model Conversion\n\nOpenVINO&trade; Runtime supports models in the Intermediate Representation (IR) format. A model from any supported framework can be converted to IR using the Model Optimizer tool included in the OpenVINO&trade; toolkit. Find more information about conversion in the [Model Optimizer Developer Guide](@ref openvino_docs_MO_DG_Deep_Learning_Model_Optimizer_DevGuide). After a successful conversion, you get a model in the IR format, with the `*.xml` file representing the net graph and the `*.bin` file containing the net parameters.\n\n> **NOTE**: Image preprocessing parameters (mean and scale) must be built into a converted model to simplify model usage.\n\n> **NOTE 2**: If a model input is a color image, color channel order should be `BGR`.\n\n## Demo\n\nA demo shows the main idea of how to infer a model using OpenVINO™. If your model solves one of the tasks supported by the Open Model Zoo, try to find an appropriate option from [demos](demos/README.md) or [samples](https://docs.openvino.ai/2023.0/_docs_IE_DG_Samples_Overview.html). Otherwise, you must provide your own demo (C++ or Python).\n\nThe demo's name should end with `_demo` suffix to follow the convention of the project.\n\nDemos are required to support the following args:\n\n* `-h, --help`        show this help message and exit\n* `-m <MODEL FILE>`   path to an .xml file with a trained model. If the demo uses several models an extended syntax can be used, like `--mdet`\n* `-i <INPUT>`        input to process. For vision tasks the input might be a path to single image or video file, a path to folder of images, or numeric camera id. For vision tasks the default value must be `0`. For speech/audio tasks input is path to WAV file. For NLP tasks input might be a path to text file or just quoted sentence of text.\n* `-d <DEVICE>`       specify a device to infer on (the list of available devices is shown below). Default is CPU\n* `-o <FILE PATTERN>` pattern for output file(s) to save\n\nAdd `README.md` file, which describes demo usage. Update [demos' README.md](demos/README.md) by adding your demo to the list.\n\n## Accuracy Validation\n\nAccuracy validation can be performed by the [Accuracy Checker](./tools/accuracy_checker/README.md) tool. This tool can use either IE to run a converted model, or an original framework to run an original model. Accuracy Checker supports lots of datasets, metrics and preprocessing options, which simplifies validation if a task is supported by the tool. You only need to create a configuration file that contains necessary parameters for accuracy validation (specify a dataset and annotation, pre- and post-processing parameters, accuracy metrics to compute and so on) of converted model. For details, refer to [Testing new models](./tools/accuracy_checker/README.md#testing-new-models).\n\nIf a model uses a dataset which is not supported by the Accuracy Checker, you also must provide the license and the link to it and mention it in the PR description.\n\nWhen the configuration file is ready, you must run the Accuracy Checker to obtain metric results. If they match your results, that means conversion was successful and the Accuracy Checker fully supports your model, metric and dataset. Otherwise, recheck the [conversion](#model-conversion) parameters or the validation configuration file.\n\n### Example\n\nThis example uses validation configuration file for [efficientdet-d1-tf](models/public/efficientdet-d1-tf/accuracy-check.yml)\\* from TensorFlow\\*:\n```\nmodels:\n  - name: efficientdet-d1-tf\n    launchers:\n      - framework: openvino\n        adapter: ssd\n    datasets:\n      - name: ms_coco_detection_90_class_without_background\n        preprocessing:\n          - type: resize\n            aspect_ratio_scale: fit_to_window\n            size: 640\n          - type: padding\n            size: 640\n            pad_type: right_bottom\n\n        postprocessing:\n          - type: faster_rcnn_postprocessing_resize\n            size: 640\n          - type: shift_labels\n            offset: 1\n\n        metrics:\n          - type: coco_precision\n            reference: 0.3754\n```\n\n\n## Documentation\n\nDocumentation is a very important part of model contribution as it helps to better understand the possible usage of the model. It must be located in a `README.md` file in the model subdirectory.\nThe documentation should contain:\n* description of a model\n\t* main purpose\n\t* features\n\t* references to a paper or/and a source\n* model specification\n\t* type\n\t* framework\n\t* GFLOPs (*if available*)\n\t* number of parameters (*if available*)\n* validation dataset description and/or a link\n* main accuracy values (also description of a metric)\n* detailed description of input and output for original and converted models\n* the model's licensing terms\n\nLearn the detailed structure and headers naming convention from any model documentation (for example, [densenet-121-tf](./models/public/densenet-121-tf/README.md)).\n\n## Legal Information\n\n[\\*] Other names and brands may be claimed as the property of others.\n\nOpenVINO is a trademark of Intel Corporation or its subsidiaries in the U.S. and/or other countries.\n\nCopyright &copy; 2018-2024 Intel Corporation\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n```\nhttp://www.apache.org/licenses/LICENSE-2.0\n```\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 0.80859375,
          "content": "#!groovy\n\nproperties([\n    parameters([\n        booleanParam(defaultValue: false,\n                     description: 'Cancel the rest of parallel stages if one of them fails and return status immediately',\n                     name: 'failFast'),\n        booleanParam(defaultValue: true,\n                     description: 'Whether to propagate commit status to GitHub',\n                     name: 'propagateStatus'),\n        string(defaultValue: '',\n               description: 'Pipeline shared library version (branch/tag/commit). Determined automatically if empty',\n               name: 'library_version'),\n        string(defaultValue: '',\n               description: 'Docker tag to take images with. Determined automatically if empty',\n               name: 'docker_tag')\n    ])\n])\n\nloadOpenVinoLibrary {\n    entrypoint(this)\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9931640625,
          "content": "# [OpenVINO™ Toolkit](https://docs.openvino.ai/2023.0/index.html) - Open Model Zoo repository\n\n> [!NOTE]\n> Open Model Zoo is in maintenance mode as a source of models. Check out model tutorials in [Jupyter notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n\nThis repository includes optimized deep learning models and a set of demos to expedite development of high-performance deep learning inference applications. Use these free pre-trained models instead of training your own models to speed-up the development and production deployment process.\n\nIntel is committed to the respect of human rights and avoiding complicity in human rights abuses, a policy reflected in the [Intel Global Human Rights Principles](https://www.intel.com/content/www/us/en/policy/policy-human-rights.html). Accordingly, by accessing the Intel material on this platform you agree that you will not use the material in a product or application that causes or contributes to a violation of an internationally recognized human right.\n\n## Repository Components:\n* [Intel Pre-Trained Models](models/intel/index.md)\n* [Public Pre-Trained Models](models/public/index.md)\n* [Model Downloader](tools/model_tools/README.md) and other automation tools\n* [Demos](demos/README.md) that demonstrate models usage with OpenVINO™ Toolkit\n* [Accuracy Checker](tools/accuracy_checker/README.md) tool for models accuracy validation\n\n## License\nOpen Model Zoo is licensed under [Apache License Version 2.0](LICENSE).\n\n## Telemetry\nOpenVINO™ collects software performance and usage data for the purpose of improving OpenVINO™ tools. This data is collected directly by OpenVINO™ or through the use of Google Analytics 4.\nYou can opt-out at any time by running the command:\n\n``` bash\nopt_in_out --opt_out\n```\n\n## Online Documentation\n* [OpenVINO™ Release Notes](https://software.intel.com/en-us/articles/OpenVINO-RelNotes)\n* [Pre-Trained Models](https://docs.openvino.ai/2023.0/model_zoo.html)\n* [Demos and Samples](https://docs.openvino.ai/2023.0/omz_demos.html)\n\n## Other Usage Examples\n* [Open Visual Cloud](https://www.intel.com/content/www/us/en/developer/articles/technical/open-visual-cloud.html)\n  * [Tutorial: Running AD Insertion on Public Cloud](https://github.com/OpenVisualCloud/Ad-Insertion-Sample/wiki/Tutorial:-Running-AD-Insertion-on-Public-Cloud)\n  * [GitHub Repo for Ad Insertion Sample](https://github.com/OpenVisualCloud/Ad-Insertion-Sample)\n* [OpenVINO for Smart City](https://github.com/incluit/OpenVino-For-SmartCity)\n* [OpenVINO Driver Behavior](https://github.com/incluit/OpenVino-Driver-Behaviour)\n* [OpenVINO Python\\* Notebooks](https://github.com/openvinotoolkit/openvino_notebooks/blob/main/README.md)\n\n## How to Contribute\nWe welcome community contributions to the Open Model Zoo repository. If you have an idea how to improve the product, please share it with us doing the following steps:\n\n* Make sure you can build the product and run all the demos with your patch.\n* In case of a larger feature, provide a relevant demo.\n* Submit a pull request at https://github.com/openvinotoolkit/open_model_zoo/pulls\n\nYou can find additional information about model contribution [here](CONTRIBUTING.md).\n\nWe will review your contribution and, if any additional fixes or modifications are needed, may give you feedback to guide you. When accepted, your pull request will be merged into the GitHub* repositories.\n\nOpen Model Zoo is licensed under Apache License, Version 2.0. By contributing to the project, you agree to the license and copyright terms therein and release your contribution under these terms.\n\n## Support\nPlease report questions, issues and suggestions using:\n* [\\#open_model_zoo](https://stackoverflow.com/search?q=%23open_model_zoo) tag on StackOverflow*\n* [GitHub* Issues](https://github.com/openvinotoolkit/open_model_zoo/issues)\n* [Forum](https://community.intel.com/t5/Intel-Distribution-of-OpenVINO/bd-p/distribution-openvino-toolkit)\n* [Gitter](https://gitter.im/open_model_zoo/community)\n\n---\n\\* Other names and brands may be claimed as the property of others.\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "licensing",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}