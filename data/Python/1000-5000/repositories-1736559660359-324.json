{
  "metadata": {
    "timestamp": 1736559660359,
    "page": 324,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pythonguis/pythonguis-examples",
      "stars": 4211,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.802734375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n.idea\n*~\n.DS_Store\nThumbs.db\nbuild/*\ndist\n\n# Database\n*.db\n*.sqlite\n\n# Misc\n*.autosave\n.vscode\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright 2017 Martin Fitzpatrick\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.103515625,
          "content": "# Python GUIs Examples\n\n**This repository contains 100s of GUI examples written in Python**. From complete working applications to reusable widgets snippets, these examples can\nbe _freely_ re-used, re-mixed and tweaked to build your own Python GUI applications.\n\nExamples are available for\n[PyQt6](https://github.com/pythonguis/15-minute-apps/tree/master/pyqt6),\n[PySide6](https://github.com/pythonguis/15-minute-apps/tree/master/pyside6),\n[PySide2](https://github.com/pythonguis/15-minute-apps/tree/master/pyside2)\nand [PyQt5](https://github.com/pythonguis/15-minute-apps/tree/master/pyqt5)\n\n> Many of these examples have more detailed write-ups on the [Python GUIs website](https://www.pythonguis.com/). If you're new to creating GUI apps check out the introductory [PyQt6 tutorial](https://www.pythonguis.com/pyqt6-tutorial/) or [PySide6 tutorial](https://www.pythonguis.com/pyside6-tutorial/).\n\n## The demo apps\n\nThe apps showcase various parts of the Qt framework, including advanced widgets,\nmultimedia, graphics views and decorationless windows. However, the most\ngenerally interesting/feature complete applications are Minesweeper, Solitaire\nand Paint.\n\n1. Web Browser (untabbed) - \"MooseAche\"\n1. Web Browser (tabbed) - \"Mozzarella Ashbadger\"\n1. Minesweeper - \"Moonsweeper\"\n1. Notepad - \"No2Pads\"\n1. Calculator - \"Calculon\" (QtDesigner)\n1. Word Processor - \"Megasolid Idiom\"\n1. Webcam/Snapshot - \"NSAViewer\"\n1. Media Player - \"Failamp\"\n1. Post-it Notes - \"Brown Note\" (QtDesigner)\n1. Paint - \"Piecasso\" (QtDesigner)\n1. Unzip - \"7Pez\" (QtDesigner)\n1. Translator - \"Translataarrr\" (QtDesigner)\n1. Weather - \"Raindar\" (QtDesigner)\n1. Currency converter - \"Doughnut\" (PyQtGraph)\n1. Solitaire - \"Ronery\" (QGraphicsScene)\n\n## The widgets\n\n\n![Graphical Equalizer](https://i.imgur.com/0F2ZgqE.gif)\n**Graphical Equalizer** Visualize audio frequency changes with configurable styles and decay.\n\n![Power Meter](https://i.imgur.com/0dpZIMV.gif)\n**Power Bar** Rotary control with amplitude display.\n\n![Palette](https://cdn.learnpyqt.com/media/images/Screenshot_2019-06-15_at_15.18.14.max-500x500.png)\n**Palette** Select colors from a configurable linear or grid palette.\n\n![Gradient Editor](https://cdn.learnpyqt.com/media/images/Screenshot_2019-06-15_at_18.32.52.max-500x500.png)\n**Linear Gradient Editor** Design custom linear gradients with multiple stops and colors.\n\n**Color Button** Simple button that displays and selects colors.\n\n**Paint** Draw pictures with a custom bitmap canvas, with color and pen control.\n\n**Password Edit** A password line editor with toggleable visibility action.\n\n![Toggle Widget](https://i.imgur.com/rHrkkG3.gif)\nReplace checkboxes with this handy toggle widget, with custom colors and optional animations.\n\n## The tutorials\n\nAs well as the complete apps & re-usable widgets we've got selection of code snippets taken from tutorials on the [Python GUIs](https://www.pythonguis.com) website. These guide you through building GUIs with PyQt, PySide and other libraries.\n\n## Getting started\n\nTo use each app you first need to install the requirements. In most cases\nthe only requirements are the GUI library and occasionally requests. To install\nexample specific requirements change to the folder of the example and run:\n\n    pip3 install -r requirements.txt\n\nOnce the requirements are installed, you can run the app. Every example in this repo comes with a main Python file called `main.py` to keep things simple.\n\n    python3 main.py\n\nThe application window should appear.\n\n## Want to build your own apps?\n\n> If you think these apps are neat and want to learn more about\ntake a look at my [PyQt6 tutorial](https://www.pythonguis.com/pyqt6-tutorial)\nwhich covers everything you need to know to start building your own applications with Python.\n\nYou can also find more write-ups and tips [on the same site](http://www.pythonguis.com/).\n\n## License\n\nAll code is **licensed under an MIT license**. This allows you to re-use the code freely, remixed in both commercial and non-commercial projects. The only requirement is to include the same license when distributing.\n\n## Other licenses\n\nIcons used in the applications are by [Yusuke Kamiyaman](http://p.yusukekamiyamane.com/).\n"
        },
        {
          "name": "pyqt5-pyqt6.sh",
          "type": "blob",
          "size": 0.390625,
          "content": "#!/bin/bash\n\n# Black the SOURCE files to limit subsequent reformatting.\nblack -l 128 $1\n\n# PyQt6 (built from PyQt5) --------------------------------------------------\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/PyQt5/PyQt6/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/exec_/exec/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/qt-5/qt-6/g'\n\nblack -l 128 $1\n"
        },
        {
          "name": "pyqt5-pyside2.sh",
          "type": "blob",
          "size": 0.5146484375,
          "content": "#!/bin/bash\n\n# Black the SOURCE files to limit subsequent reformatting (highlights possible issues).\nblack -l 128 $1\n\n# PySide2 (built from PyQt5) --------------------------------------------------\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/PyQt5/PySide2/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/pyqtSignal/Signal/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/pyqtProperty/Property/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/pyqtSlot/Slot/g'\n\nblack -l 128 $1\n"
        },
        {
          "name": "pyqt5",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyqt6-pyside6.sh",
          "type": "blob",
          "size": 0.515625,
          "content": "#!/bin/bash\n\n# Black the SOURCE files to limit subsequent reformatting (highlights possible issues).\nblack -l 128 $1\n\n# PyQt6 (built from PySide6) --------------------------------------------------\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/PyQt6/PySide6/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/pyqtSignal/Signal/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/pyqtProperty/Property/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/pyqtSlot/Slot/g'\n\n\nblack -l 128 $1\n"
        },
        {
          "name": "pyqt6",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyside2-pyside6.sh",
          "type": "blob",
          "size": 0.5146484375,
          "content": "#!/bin/bash\n\n# Black the SOURCE files to limit subsequent reformatting (highlights possible issues).\nblack -l 128 $1\n\n# PySide6 (built from PySide2) --------------------------------------------------\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/PySide2/PySide6/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/backend_qt5agg/backend_qtagg/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/exec_/exec/g'\nfind $1 -type f -name \"*.py\" -print0 | xargs -0 sed -i 's/qt-5/qt-6/g'\n\nblack -l 128 $1\n"
        },
        {
          "name": "pyside2",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyside6",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}