{
  "metadata": {
    "timestamp": 1736559578193,
    "page": 199,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "carltongibson/django-filter",
      "stars": 4504,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1220703125,
          "content": "*.pyc\n*.egg-info\nbuild/\ndist/\ndocs/_build\n.python-version\n.tox\n.coverage\n.coverage.*\n.xmlcoverage/\n.venv/\n.idea\n.env\n.vscode\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.3359375,
          "content": "# https://docs.readthedocs.io/en/stable/config-file/v2.html\n\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.10\"\n\npython:\n  install:\n    - requirements: requirements/docs.txt\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.3212890625,
          "content": "Authors\n=======\n\nThanks to the following people for contributing to django-filter.\n\nBen Firshman\nAlex Gaynor\nJannis Leidel\nMartin Mahner\nBrian Rosner\nAdam Vandenberg\nFlorian Apolloner\nAndrew Ball\nTino de Bruijn\nMaximillian Dornseif\nMarc Fargas\nVladimir Sidorenko\nTom Christie\nRemco Wendt\nAxel Haustant\nBrad Erickson\nDiogo Laginha"
        },
        {
          "name": "CHANGES.rst",
          "type": "blob",
          "size": 16.412109375,
          "content": "Version 25.1 (Unreleased)\n-------------------------\n\n* Removed the in-built API schema generation methods, which have been\n  deprecated since v23.2.\n\n  You should use `drf-spectacular <https://drf-spectacular.readthedocs.io/en/latest/>`_\n  for generating OpenAPI schemas with DRF.\n\n* Dropped support for EOL Python 3.8.\n\n* Added testing against Python 3.13.\n\nVersion 24.3 (2024-08-02)\n-------------------------\n\n* Adds official support for Django 5.1.\n\n* Allow using dictionaries for grouped choices on Django 5.0+.\n\n  Thanks to Sævar Öfjörð Magnússon.\n\n* Adds ``unknown_field_behavior`` FilterSet option to allowing warning and\n  ignore behaviours for unknown field types during FilterSet generation.\n\n  Thanks to Loes.\n\nVersion 24.2 (2024-03-27)\n-------------------------\n\n* Fixed a regression in v23.4 where callable choices were incorrectly evaluated\n  at filter instantiation, on Django versions prior to 5.0.\n\n  Thanks to Craig de Stigter for the report and reproduce.\n\nVersion 24.1 (2024-03-08)\n-------------------------\n\n* Updated supported Python and Django versions, and resolved upcoming Django\n  deprecations.\n\n  Required versions are now at least Python 3.8 and Django 4.2.\n\n  Thanks to Michael Manganiello.\n\n* Allowed passing a FilterSet class to the filterset_factory().\n\n  Thanks to Birger Schacht.\n\n* Set empty default value of filterset data to MultiValueDict.\n\n  Thanks to Shlomo Gordon.\n\n* Preserve list values passed to the data dict in CSV widgets.\n\n  Thanks to Bryan Brancotte.\n\n* Updates French and Ukrainian localisations.\n\n  Thanks to Weblate.\n\n\nVersion 23.5 (2023-12-05)\n-------------------------\n\n* Fixed OrderingFilter handling of empty values. (#1628)\n\n  Thanks to Matt Munns.\n\nVersion 23.4 (2023-11-20)\n-------------------------\n\n* Official support for Django 5.0 and Python 3.12.\n\n* Fix DeprecationWarning for pkgutil.find_loader.\n\n  Thanks to `wmorrell`.\n\n* Adopted Furo theme for docs.\n\nVersion 23.3 (2023-9-17)\n------------------------\n\n* Adds initial compatibility with Django 5.0, prior to Django 5.0a1.\n\n* Updates packaging to use pyproject.toml and Flit.\n\nVersion 23.2 (2023-4-30)\n------------------------\n\n* Deprecated the schema generation methods of the DRF related ``DjangoFilterBackend``.\n  These will be removed in version 25.1.\n\n  You should use `drf-spectacular <https://drf-spectacular.readthedocs.io/en/latest/>`_\n  for generating OpenAPI schemas with DRF.\n\n* In addition, stopped testing against the (very old now) ``coreapi`` schema generation.\n  These methods should continue to work if you're using them until v25.1, but\n  ``coreapi`` is no longer maintained, and is raising warnings against the current\n  versions of Python. To workaround this is not worth the effort at this point.\n\n* Updated Polish translations.\n\nVersion 23.1 (2023-3-26)\n------------------------\n\n* Declared support for Django 4.2.\n\n* Various updated and new translations. Thanks to all who contributed, and\n  Weblate for hosting.\n\n* Fixed QueryArrayWidget.value_from_datadict() to not mutate input data. (#1540)\n\nVersion 22.1 (2022-6-17)\n------------------------\n\n* Update supported Python and Django versions: minimal Python is now 3.7,\n  minimum Django is now 3.2.\n\n* Added testing for Python 3.10 and Django 4.1.\n\n* Removed outdated deprecated warnings for code removed in version 2.1.\n\n* Removed `filter_class` (use `filterset_class`) and `filter_fields`\n  (`filterset_fields`) that were deprecated in [version 2.0\n  (2018)](https://django-filter.readthedocs.io/en/main/guide/migration.html#view-attributes-renamed-867).\n\n* The code base is now formatted with Black.\n\nVersion 21.1 (2021-9-24)\n------------------------\n\nThis is a maintenance release updating CI testing for the latest\nnon-end-of-life versions of Python and Django, and updating package metadata\naccordingly.\n\nWith this release ``django-filter`` is switching to a two-part CalVer\nversioning scheme, such as ``21.1``. The first number is the year. The second\nis the release number within that year.\n\nOn an on-going basis, Django-Filter aims to support all current Django\nversions, the matching current Python versions, and the latest version of\nDjango REST Framework.\n\nPlease see:\n\n* `Status of supported Python branches <https://devguide.python.org/#status-of-python-branches>`_\n* `List of supported Django versions <https://www.djangoproject.com/download/#support-versions>`_\n\nSupport for Python and Django versions will be dropped when they reach\nend-of-life. Support for Python versions will dropped when they reach\nend-of-life, even when still supported by a current version of Django.\n\nOther breaking changes are rare. Where required, every effort will be made to\napply a \"Year plus two\" deprecation period. For example, a change initially\nintroduced in ``23.x`` would offer a fallback where feasible and finally be\nremoved in ``25.1``. Where fallbacks are not feasible, breaking changes without\ndeprecation will be called out in the release notes.\n\nBeyond that change, there are few changes. Some small bugfixes, improvements to\nlocalisation, and documentation tweaks. Thanks to all who were involved.\n\n\nVersion 2.4.0 (2020-9-27)\n--------------------------\n\n* SECURITY: Added a ``MaxValueValidator`` to the form field for\n  ``NumberFilter``. This prevents a potential DoS attack if numbers with very\n  large exponents were subsequently converted to integers.\n\n  The default limit value for the validator is ``1e50``.\n\n  The new ``NumberFilter.get_max_validator()`` allows customising the used\n  validator, and may return ``None`` to disable the validation entirely.\n\n* Added testing against Django 3.1 and Python 3.9.\n\n  In addition tests against Django main development branch are now required to\n  pass.\n\n\nVersion 2.3.0 (2020-6-5)\n------------------------\n\n* Fixed import of FieldDoesNotExist. (#1127)\n* Added testing against Django 3.0. (#1125)\n* Declared support for, and added testing against, Python 3.8. (#1138)\n* Fix filterset multiple inheritance bug (#1131)\n* Allowed customising default lookup expression. (#1129)\n* Drop Django 2.1 and below (#1180)\n* Fixed IsoDateTimeRangeFieldTests for Django 3.1\n* Require tests to pass against Django `master`.\n\n\nVersion 2.2 (2019-7-16)\n-----------------------\n\n* Added ``DjangoFilterBackend.get_schema_operation_parameters()`` for DRF 3.10+\n  OpenAPI schema generation. (#1086)\n* Added ``lookup_expr`` to ``MultipleChoiceFilter`` (#1054)\n* Dropped support for EOL Python 3.4\n\n\nVersion 2.1 (2019-1-20)\n-----------------------\n\n* Fixed a regression in ``FilterView`` introduced in 2.0. An empty ``QuerySet`` was\n  incorrectly used whenever the FilterSet was unbound (i.e. when there were\n  no GET parameters).  The correct, pre-2.0 behaviour is now restored.\n\n  A workaround was to set ``strict=False`` on the ``FilterSet``. This is no\n  longer necessary, so you may restore `strict` behaviour as desired.\n\n* Added ``IsoDateTimeFromToRangeFilter``. Allows From-To filtering using\n  ISO-8601 formatted dates.\n\n\nVersion 2.0 (2018-7-13)\n-----------------------\n\n2.0 introduced a number of small changes and tidy-ups.\nPlease see the migration guide:\n\nhttps://django-filter.readthedocs.io/en/main/guide/migration.html#migrating-to-2-0\n\n* Added testing for Python 3.7 (#944)\n* Improve exception message for invalid filter result (#943)\n* Test QueryDict against CSV filters (#937)\n* Add `renderer` argument to `render()` method of `BooleanWidget` (#923)\n* Fix lookups for reverse relationships (#915)\n* Refactor backend filterset instantiation (#865)\n* Improve view-related attribute name consistency (#867)\n* Fix distinct call for range filters (#855)\n* Fix empty value check for CSV range (#854)\n* Rework DateRangeFilter (#852)\n* Added testing for Django 2.1\n* Rework 'lookup types' handling into LookupChoiceFilter (#851)\n* Add linting and docs builds to CI (#850)\n* Use DRF BooleanFilter for NullBooleanField (#844)\n* Added Brazilian locale (#841)\n* List Django as a dependency in setup.py (#846)\n* Keep coverage reports files off version control. (#924)\n* Update migration docs (#866)\n* Added  be, cs and uk translations. Updated de and ru (#861)\n* Slovak translation (#886)\n* Added Django 2.0 support. (#836)\n* Fix warnings build (#829)\n* Add greek translation (#827)\n* Replaced super(ClassName, self) with super() (#821)\n* Fixed doc URL in utils.deprecate(). (#820)\n* Added danish translation to django-filter (#809)\n* Rework validation, add queryset filter method (#788)\n* Fix Schema warnings (#803)\n* Update {Range,LookupType}Widgets to use suffixes (#770)\n* Method signature improvements (#800)\n* Remove more deprecations (#801)\n* Drop python 2, Django<1.11 support (#797)\n* Remove 'Meta.together' option (#791)\n* [2.x] Remove some deprecations (#795)\n\n\nVersion 1.1 (2017-10-19)\n------------------------\n\n* Add Deprecations for 2.0 (#792)\n* Improve IsoDateTimeField test clarity (#790)\n* Fix form attr references in tests (#789)\n* Simplify tox config, drop python 3.3 & django 1.8 (#787)\n* Make get_filter_name a classmethod, allowing it to be overriden for each FilterClass (#775)\n* Support active timezone (#750)\n* Docs Typo: django_filters -> filters in docs (#773)\n* Add Polish translations for some messages (#771)\n* Remove support for Django 1.9 (EOL) (#752)\n* Use required attribute from field when getting schema fields (#766)\n* Prevent circular ImportError hiding for rest_framework sub-package (#741)\n* Deprecate 'extra' field attrs on Filter (#734)\n* Add SuffixedMultiWidget (#681)\n* Fix null filtering for *Choice filters (#680)\n* Use isort on imports (#761)\n* Use urlencode from django.utils.http (#760)\n* Remove OrderingFilter.help_text (#757)\n* Update DRF test dependency to 3.6 (#747)\n\n\nVersion 1.0.4 (2017-05-19)\n--------------------------\n\nQuick fix for verbose_field_name issue from 1.0.3 (#722)\n\n\nVersion 1.0.3 (2017-05-16)\n--------------------------\n\nImproves compatibility with Django REST Framework schema generation.\n\nSee the `1.0.3 Milestone`__ for full details.\n\n__ https://github.com/carltongibson/django-filter/milestone/13?closed=1\n\n\n\nVersion 1.0.2 (2017-03-20)\n--------------------------\n\nUpdates for compatibility with Django 1.11 and Django REST Framework 3.6.\n\nAdds CI testing against Python 3.6\n\nSee the `1.0.2 Milestone`__ for full details.\n\n__ https://github.com/carltongibson/django-filter/milestone/12?closed=1\n\n\nVersion 1.0.1 (2016-11-28)\n--------------------------\n\nSmall release to ease compatibility with DRF:\n\n* #568 Adds ``rest_framework`` to the ``django_filters`` namespace to allow single\n  ``import django_filters` usage.\n* A number of small updates to the docs\n\n\nVersion 1.0 (2016-11-17)\n------------------------\n\nThis release removes all the deprecated code from 0.14 and 0.15 for 1.0 #480.\n\nPlease see the `Migration Notes`__ for details of how to migrate.\nStick with 0.15.3 if you're not ready to update.\n\n__ https://github.com/carltongibson/django-filter/blob/1.0.0/docs/guide/migration.txt\n\nThe release includes a number of small fixes and documentation updates.\n\nSee the `1.0 Milestone`__ for full details.\n\n__ https://github.com/carltongibson/django-filter/milestone/8?closed=1\n\n\nVersion 0.15.3 (2016-10-17)\n---------------------------\n\nAdds compatibility for DRF (3.5+) get_schema_fields filter backend\nintrospection.\n\n* #492 Port get_schema_fields from DRF\n\n\nVersion 0.15.2 (2016-09-29)\n---------------------------\n\n* #507 Fix compatibility issue when not using the DTL\n\n\nVersion 0.15.1 (2016-09-28)\n---------------------------\n\nA couple of quick bug fixes:\n\n* #496 OrderingFilter not working with Select widget\n\n* #498 DRF Backend Templates not loading\n\n\n\nVersion 0.15.0 (2016-09-20)\n---------------------------\n\nThis is a preparatory release for a 1.0. Lots of clean-up, lots of changes,\nmostly backwards compatible.\n\nSpecial thanks to Ryan P Kilby (@rpkilby) for lots of hard work.\n\nMost changes should raise a Deprecation Warning.\n\n**Note**: if you're doing *Clever Things™* with the various filter options\n— ``filter_overrides`` etc — you may run into an `AttributeError` since these\nare now defined on the metaclass and not on the filter itself.\n(See the discussion on #459)\n\nSummary: Highly Recommended, but take a moment to ensure everything still works.\n\n* Added the DRF backend. #481\n\n* Deprecated `MethodFilter` in favour of `Filter.method` #382\n\n* Move filter options to metaclass #459\n\n* Added `get_filter_predicate` hook. (Allows e.g. filtering on annotated fields) #469\n\n* Rework Ordering options into a filter #472\n\n* Hardened all deprecations for 1.0. Please do see the `Migration Notes`__\n\n__ https://github.com/carltongibson/django-filter/blob/1.0.0/docs/guide/migration.txt\n\n\n\nVersion 0.14.0 (2016-08-14)\n---------------------------\n\n* Confirmed support for Django 1.10.\n\n* Add support for filtering on DurationField (new in Django 1.8).\n\n* Fix UUIDFilter import issue\n\n* Improve FieldLookupError message\n\n* Add filters_for_model to improve extensibility\n\n* Fix limit_choices_to behavior with callables\n\n* Fix distinct behavior for range filters\n\n* Various Minor Clean up issues.\n\n\nVersion 0.13.0 (2016-03-11)\n---------------------------\n\n* Add support for filtering by CSV #363\n\n* Add DateTimeFromToRangeFilter #376\n\n* Add Chinese translation #359\n\n* Lots of fixes.\n\n\nVersion 0.12.0 (2016-01-07)\n---------------------------\n\n* Raised minimum Django version to 1.8.x\n\n* FEATURE: Add support for custom ORM lookup types #221\n\n* FEATURE: Add JavaScript friendly BooleanWidget #270\n\n* FIXED: (More) Compatability with Django 1.8 and Django 1.9+\n\n* BREAKING CHANGE: custom filter names are now also be used for ordering #230\n\n    If you use ordering on a field you defined as custom filter with custom\n    name, you should now use the filter name as ordering key as well.\n\n    Eg. For a filter like :\n\n        class F(FilterSet):\n            account = CharFilter(name='username')\n            class Meta:\n                model = User\n                fields = ['account', 'status']\n                order_by = True\n\n     Before, ordering was like `?o=username`. Since 0.12.0 it's `o=account`.\n\n\nVersion 0.11.0 (2015-08-14)\n---------------------------\n\n* FEATURE: Added default filter method lookup for MethodFilter #222\n\n* FEATURE: Added support for yesterday in daterangefilter #234\n\n* FEATURE: Created Filter for NumericRange. #236\n\n* FEATURE: Added Date/time range filters #215\n\n* FEATURE: Added option to raise with `strict` #255\n\n* FEATURE: Added Form Field and Filter to parse ISO-8601 timestamps\n\n\nVersion 0.10.0 (2015-05-13)\n---------------------\n\n* FEATURE: Added ``conjoined`` parameter to ``MultipleChoiceFilter``\n\n* FEATURE: Added ``together`` meta option to validate fields as a group\n\n* FIXED: Added testing on Django 1.8\n\n* FIXED: ``get_model_field`` on Django 1.8\n\n\nVersion 0.9.2 (2015-01-23)\n--------------------------\n\n* FIXED: Compatibility with Django v1.8a1\n\nVersion 0.9.1 (2014-12-03)\n--------------------------\n\n* FIXED: Compatibility with Debug Toolbar's versions panel\n\nVersion 0.9 (2014-11-28)\n------------------------\n\n* FEATURE: Allow Min/Max-Only use of RangeFilter\n\n* FEATURE: Added TypedChoiceFilter\n\n* FIXED: Correct logic for short circuit on MultipleChoiceFilter\n\n    Added `always_filter` attribute and `is_noop()` test to apply short-circuiting.\n\n    Set `always_filter` to `False` on init to apply default `is_noop()` test.\n    Override `is_noop()` for more complex cases.\n\n* MISC: Version bumping with ``bumpversion``\n\n\nVersion 0.8 (2014-09-29)\n------------------------\n\n * FEATURE: Added exclusion filters support\n\n * FEATURE: Added `fields` dictionary shorthand syntax\n\n * FEATURE: Added `MethodFilter`.\n\n * FIXED: #115 \"filters.Filter.filter() fails if it receives [] or () as value\"\n\n * MISC: Various Documentation and Testing improvements\n\n\n\nVersion 0.7 (2013-08-10)\n------------------------\n\n * FEATURE: Added support for AutoField.\n\n * FEATURE: There is a \"distinct\" flag to ensure that only unique rows are\n   returned.\n\n * FEATURE: Support descending ordering (slighty backwards incompatible).\n\n * FEATURE: Support \"strict\" querysets, ie wrong filter data returns no results.\n\n * FIXED: Some translation strings were changed to be in line with admin.\n\n * FIXED: Support for Django 1.7.\n\nVersion 0.6 (2013-03-25)\n------------------------\n\n* raised minimum Django version to 1.4.x\n\n* added Python 3.2 and Python 3.3 support\n\n* added Django 1.5 support and initial 1.6 compatability\n\n* FEATURE: recognition of custom model field subclasses\n\n* FEATURE: allow optional display names for order_by values\n\n* FEATURE: addition of class-based FilterView\n\n* FEATURE: addition of count() method on FilterSet to prevent pagination\n  from loading entire queryset\n\n* FIXED: attempts to filter on reverse side of m2m, o2o or fk would\n  raise an error\n\n\nVersion 0.5.4 (2012-11-16)\n--------------------------\n\n* project brought back to life\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4521484375,
          "content": "Copyright (c) Alex Gaynor and individual contributors.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without \nmodification, are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this \n   list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice, \n   this list of conditions and the following disclaimer in the documentation \n   and/or other materials provided with the distribution.\n * The names of its contributors may not be used to endorse or promote products \n   derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR \nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON \nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.34765625,
          "content": "include AUTHORS\ninclude CHANGES.rst\ninclude LICENSE\ninclude README.rst\ninclude runshell.py\ninclude runtests.py\nrecursive-include docs *\nrecursive-include requirements *\nrecursive-include tests *\nrecursive-include django_filters/locale *\nrecursive-include django_filters/templates *.html\nprune docs/_build\nglobal-exclude __pycache__\nglobal-exclude *.py[co]\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1416015625,
          "content": ".PHONY: deps, test, clean\n\ndeps:\n\tpip install -r ./requirements/test.txt\n\ntest:\n\t./runtests.py\n\nclean:\n\trm -r build dist django_filter.egg-info\n\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.57421875,
          "content": "Django Filter\n=============\n\nDjango-filter is a reusable Django application allowing users to declaratively\nadd dynamic ``QuerySet`` filtering from URL parameters.\n\nFull documentation on `read the docs`_.\n\n.. image:: https://raw.githubusercontent.com/carltongibson/django-filter/python-coverage-comment-action-data/badge.svg\n    :target: https://github.com/carltongibson/django-filter/tree/python-coverage-comment-action-data\n\n.. image:: https://badge.fury.io/py/django-filter.svg\n    :target: http://badge.fury.io/py/django-filter\n\n\nVersioning and stability policy\n-------------------------------\n\nDjango-Filter is a mature and stable package. It uses a two-part CalVer\nversioning scheme, such as ``21.1``. The first number is the year. The second\nis the release number within that year.\n\nOn an on-going basis, Django-Filter aims to support all current Django\nversions, the matching current Python versions, and the latest version of\nDjango REST Framework.\n\nPlease see:\n\n* `Status of supported Python versions <https://devguide.python.org/versions/#supported-versions>`_\n* `List of supported Django versions <https://www.djangoproject.com/download/#supported-versions>`_\n\nSupport for Python and Django versions will be dropped when they reach\nend-of-life. Support for Python versions will be dropped when they reach\nend-of-life, even when still supported by a current version of Django.\n\nOther breaking changes are rare. Where required, every effort will be made to\napply a \"Year plus two\" deprecation period. For example, a change initially\nintroduced in ``23.x`` would offer a fallback where feasible and finally be\nremoved in ``25.1``. Where fallbacks are not feasible, breaking changes without\ndeprecation will be called out in the release notes.\n\n\nInstallation\n------------\n\nInstall using pip:\n\n.. code-block:: sh\n\n    pip install django-filter\n\nThen add ``'django_filters'`` to your ``INSTALLED_APPS``.\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_filters',\n    ]\n\n\nUsage\n-----\n\nDjango-filter can be used for generating interfaces similar to the Django\nadmin's ``list_filter`` interface.  It has an API very similar to Django's\n``ModelForms``.  For example, if you had a Product model you could have a\nfilterset for it with the code:\n\n.. code-block:: python\n\n    import django_filters\n\n    class ProductFilter(django_filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ['name', 'price', 'manufacturer']\n\n\nAnd then in your view you could do:\n\n.. code-block:: python\n\n    def product_list(request):\n        filter = ProductFilter(request.GET, queryset=Product.objects.all())\n        return render(request, 'my_app/template.html', {'filter': filter})\n\n\nUsage with Django REST Framework\n--------------------------------\n\nDjango-filter provides a custom ``FilterSet`` and filter backend for use with\nDjango REST Framework.\n\nTo use this adjust your import to use\n``django_filters.rest_framework.FilterSet``.\n\n.. code-block:: python\n\n    from django_filters import rest_framework as filters\n\n    class ProductFilter(filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ('category', 'in_stock')\n\n\nFor more details see the `DRF integration docs`_.\n\n\nSupport\n-------\n\nIf you need help you can start a `discussion`_. For commercial support, please\n`contact Carlton Gibson via his website <https://noumenal.es/>`_.\n\n.. _`discussion`: https://github.com/carltongibson/django-filter/discussions\n.. _`read the docs`: https://django-filter.readthedocs.io/en/main/\n.. _`DRF integration docs`: https://django-filter.readthedocs.io/en/stable/guide/rest_framework.html\n"
        },
        {
          "name": "django_filters",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.857421875,
          "content": "[build-system]\nrequires = [\"flit_core >=3.2,<4\"]\nbuild-backend = \"flit_core.buildapi\"\n\n[project]\nname = \"django-filter\"\nauthors = [{name = \"Alex Gaynor\", email = \"alex.gaynor@gmail.com\"}]\nmaintainers = [{name = \"Carlton Gibson\", email = \"carlton.gibson@noumenal.es\"}]\nlicense = {text = \"BSD\"}\ndescription = \"Django-filter is a reusable Django application for allowing users to filter querysets dynamically.\"\nreadme = \"README.rst\"\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Web Environment\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Framework :: Django\",\n    \"Framework :: Django :: 4.2\",\n    \"Framework :: Django :: 5.0\",\n    \"Framework :: Django :: 5.1\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n]\nrequires-python = \">=3.9\"\ndependencies = [\"Django>=4.2\"]\ndynamic = [\"version\"]\n\n[project.urls]\nHomepage = \"https://github.com/carltongibson/django-filter/tree/main\"\nDocumentation = \"https://django-filter.readthedocs.io/en/main/\"\nChangelog = \"https://github.com/carltongibson/django-filter/blob/main/CHANGES.rst\"\n\"Bug Tracker\" = \"https://github.com/carltongibson/django-filter/issues\"\n\"Source Code\" = \"https://github.com/carltongibson/django-filter\"\n\n[tool.setuptools]\nzip-safe = false\ninclude-package-data = true\nlicense-files = [\"LICENSE\"]\n\n[tool.setuptools.packages.find]\nexclude = [\"tests*\"]\nnamespaces = false\n\n[tool.isort]\nprofile = \"black\"\nskip = [\".tox\"]\nknown_third_party = [\"django\", \"pytz\", \"rest_framework\"]\nknown_first_party = [\"django_filters\"]\n\n[tool.flit.module]\nname = \"django_filters\"\n\n[tool.coverage.run]\nrelative_files = true\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "runshell.py",
          "type": "blob",
          "size": 0.380859375,
          "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nfrom django.core.management import execute_from_command_line\n\n\ndef runshell():\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"tests.settings\")\n    execute_from_command_line(sys.argv[:1] + [\"migrate\", \"--noinput\", \"-v\", \"0\"])\n    execute_from_command_line(sys.argv[:1] + [\"shell\"] + sys.argv[1:])\n\n\nif __name__ == \"__main__\":\n    runshell()\n"
        },
        {
          "name": "runtests.py",
          "type": "blob",
          "size": 0.3154296875,
          "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nfrom django.core.management import execute_from_command_line\n\n\ndef runtests():\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"tests.settings\")\n    argv = sys.argv[:1] + [\"test\"] + sys.argv[1:]\n    execute_from_command_line(argv)\n\n\nif __name__ == \"__main__\":\n    runtests()\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0498046875,
          "content": "[flake8]\nmax_line_length = 120\nmax_complexity = 10\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.2646484375,
          "content": "[tox]\nenvlist =\n       {py39, py310, py311, py312}-django42,\n       {py310, py311, py312}-django50,\n       {py310, py311, py312, py313}-django51,\n       {py310, py311, py312, py313}-latest,\n       isort,lint,docs,warnings,\nisolated_build = true\n\n\n[latest]\ndeps =\n    https://github.com/django/django/archive/main.tar.gz\n    https://github.com/encode/django-rest-framework/archive/master.tar.gz\n\n[testenv]\ncommands = coverage run --parallel-mode --source django_filters ./runtests.py --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner {posargs}\nsetenv =\n       PYTHONDONTWRITEBYTECODE=1\ndeps =\n    django42: Django>=4.2rc1,<5.0\n    django50: Django>=5.0b1,<5.1\n    django51: Django>=5.1a1,<5.2\n    !latest: djangorestframework\n    latest: {[latest]deps}\n    -r requirements/test-ci.txt\n\n[testenv:isort]\ncommands = isort --check-only --diff django_filters tests {posargs}\ndeps = isort\n\n[testenv:lint]\ncommands = flake8 django_filters tests {posargs}\ndeps = flake8\n\n[testenv:docs]\ncommands = sphinx-build -WE docs _docs\ndeps =\n    -rrequirements/docs.txt\n\n[testenv:warnings]\nignore_outcome = True\nunignore_outcomes = True\ncommands = python -Werror ./runtests.py --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner {posargs}\ndeps =\n    {[latest]deps}\n    -rrequirements/test-ci.txt\n"
        }
      ]
    }
  ]
}