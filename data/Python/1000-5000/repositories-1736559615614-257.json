{
  "metadata": {
    "timestamp": 1736559615614,
    "page": 257,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aiortc/aiortc",
      "stars": 4375,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.02734375,
          "content": "*.bin  binary\n*.ulaw binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1484375,
          "content": "*.egg-info\n*.pyc\n*.so\n.coverage\n.eggs\n.idea\n.mypy_cache\n.vscode\n/build\n/dist\n/docs/_build\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.22265625,
          "content": "version: 2\n\nbuild:\n  apt_packages:\n    - libopus-dev\n    - libvpx-dev\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\nformats:\n  - pdf\n\npython:\n  install:\n    - method: pip\n      path: .\n    - requirements: requirements/doc.txt\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1416015625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at jeremy.laine@m4x.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.466796875,
          "content": "Copyright (c) Jeremy Lain√©.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n    * Neither the name of aiortc nor the names of its contributors may\n      be used to endorse or promote products derived from this software without\n      specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3427734375,
          "content": "exclude .readthedocs.yaml\ninclude CODE_OF_CONDUCT.md\ninclude LICENSE\nrecursive-include docs *.py *.rst *.svg Makefile\nrecursive-include examples *.html *.js *.py *.rst *.wav\nrecursive-include requirements *.txt\nrecursive-include scripts *.json *.py\nrecursive-include src/_cffi_src *.py\nrecursive-include stubs *.pyi\nrecursive-include tests *.bin *.py\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.84375,
          "content": ".. image:: docs/_static/aiortc.svg\n   :width: 120px\n   :alt: aiortc\n\n.. image:: https://img.shields.io/pypi/l/aiortc.svg\n   :target: https://pypi.python.org/pypi/aiortc\n   :alt: License\n\n.. image:: https://img.shields.io/pypi/v/aiortc.svg\n   :target: https://pypi.python.org/pypi/aiortc\n   :alt: Version\n\n.. image:: https://img.shields.io/pypi/pyversions/aiortc.svg\n   :target: https://pypi.python.org/pypi/aiortc\n   :alt: Python versions\n\n.. image:: https://github.com/aiortc/aiortc/workflows/tests/badge.svg\n   :target: https://github.com/aiortc/aiortc/actions\n   :alt: Tests\n\n.. image:: https://img.shields.io/codecov/c/github/aiortc/aiortc.svg\n   :target: https://codecov.io/gh/aiortc/aiortc\n   :alt: Coverage\n\n.. image:: https://readthedocs.org/projects/aiortc/badge/?version=latest\n   :target: https://aiortc.readthedocs.io/\n   :alt: Documentation\n\nWhat is ``aiortc``?\n-------------------\n\n``aiortc`` is a library for `Web Real-Time Communication (WebRTC)`_ and\n`Object Real-Time Communication (ORTC)`_ in Python. It is built on top of\n``asyncio``, Python's standard asynchronous I/O framework.\n\nThe API closely follows its Javascript counterpart while using pythonic\nconstructs:\n\n- promises are replaced by coroutines\n- events are emitted using ``pyee.EventEmitter``\n\nTo learn more about ``aiortc`` please `read the documentation`_.\n\n.. _Web Real-Time Communication (WebRTC): https://webrtc.org/\n.. _Object Real-Time Communication (ORTC): https://ortc.org/\n.. _read the documentation: https://aiortc.readthedocs.io/en/latest/\n\nWhy should I use ``aiortc``?\n----------------------------\n\nThe main WebRTC and ORTC implementations are either built into web browsers,\nor come in the form of native code. While they are extensively battle tested,\ntheir internals are complex and they do not provide Python bindings.\nFurthermore they are tightly coupled to a media stack, making it hard to plug\nin audio or video processing algorithms.\n\nIn contrast, the ``aiortc`` implementation is fairly simple and readable. As\nsuch it is a good starting point for programmers wishing to understand how\nWebRTC works or tinker with its internals. It is also easy to create innovative\nproducts by leveraging the extensive modules available in the Python ecosystem.\nFor instance you can build a full server handling both signaling and data\nchannels or apply computer vision algorithms to video frames using OpenCV.\n\nFurthermore, a lot of effort has gone into writing an extensive test suite for\nthe ``aiortc`` code to ensure best-in-class code quality.\n\nImplementation status\n---------------------\n\n``aiortc`` allows you to exchange audio, video and data channels and\ninteroperability is regularly tested against both Chrome and Firefox. Here are\nsome of its features:\n\n- SDP generation / parsing\n- Interactive Connectivity Establishment, with half-trickle and mDNS support\n- DTLS key and certificate generation\n- DTLS handshake, encryption / decryption (for SCTP)\n- SRTP keying, encryption and decryption for RTP and RTCP\n- Pure Python SCTP implementation\n- Data Channels\n- Sending and receiving audio (Opus / PCMU / PCMA)\n- Sending and receiving video (VP8 / H.264)\n- Bundling audio / video / data channels\n- RTCP reports, including NACK / PLI to recover from packet loss\n\nInstalling\n----------\n\nThe easiest way to install ``aiortc`` is to run:\n\n.. code:: bash\n\n    pip install aiortc\n\nBuilding from source\n--------------------\n\nIf there are no wheels for your system or if you wish to build aiortc from\nsource you will need a couple of libraries installed on your system:\n\n- Opus for audio encoding / decoding\n- LibVPX for video encoding / decoding\n\nLinux\n.....\n\nOn Debian/Ubuntu run:\n\n.. code:: bash\n\n    apt install libopus-dev libvpx-dev\n\nOS X\n....\n\nOn OS X run:\n\n.. code:: bash\n\n    brew install opus libvpx\n\nLicense\n-------\n\n``aiortc`` is released under the `BSD license`_.\n\n.. _BSD license: https://aiortc.readthedocs.io/en/latest/license.html\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.9833984375,
          "content": "[build-system]\nrequires = [\"cffi>=1.0.0\", \"setuptools\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"aiortc\"\ndescription = \"An implementation of WebRTC and ORTC\"\nreadme = \"README.rst\"\nrequires-python = \">=3.8\"\nlicense = { text = \"BSD-3-Clause\" }\nauthors = [\n    { name = \"Jeremy Lain√©\", email = \"jeremy.laine@m4x.org\" },\n]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Web Environment\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n]\ndependencies = [\n    \"aioice>=0.9.0,<1.0.0\",\n    \"av>=9.0.0,<13.0.0\",\n    \"cffi>=1.0.0\",\n    \"cryptography>=42.0.0\",\n    'dataclasses; python_version < \"3.7\"',\n    \"google-crc32c>=1.1\",\n    \"pyee>=9.0.0\",\n    \"pylibsrtp>=0.10.0\",\n    \"pyopenssl>=24.0.0\",\n]\ndynamic = [\"version\"]\n\n[project.optional-dependencies]\ndev = [\n    \"aiohttp>=3.7.0\",\n    \"coverage[toml]>=7.2.2\",\n    \"numpy>=1.19.0\",\n]\n\n[project.urls]\nhomepage = \"https://github.com/aiortc/aiortc\"\nchangelog = \"https://aiortc.readthedocs.io/en/stable/changelog.html\"\ndocumentation = \"https://aiortc.readthedocs.io/\"\n\n[tool.coverage.report]\nexclude_lines = [\"pragma: no cover\"]\n\n[tool.coverage.run]\nsource = [\"aiortc\"]\n\n[tool.mypy]\ndisallow_untyped_calls = true\ndisallow_untyped_decorators = true\nignore_missing_imports = true\nmypy_path = \"stubs\"\nstrict_optional = false\nwarn_redundant_casts = true\nwarn_unused_ignores = true\n\n[tool.ruff.lint]\nselect = [\n    \"E\",  # pycodestyle\n    \"F\",  # Pyflakes\n    \"W\",  # pycodestyle\n    \"I\",  # isort\n]\n\n[tool.setuptools.dynamic]\nversion = {attr = \"aiortc.__version__\"}\n\n[tool.setuptools.packages.find]\nexclude = [\"_cffi_src\"]\nwhere = [\"src\"]\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.462890625,
          "content": "import setuptools\nfrom wheel.bdist_wheel import bdist_wheel\n\n\nclass bdist_wheel_abi3(bdist_wheel):\n    def get_tag(self):\n        python, abi, plat = super().get_tag()\n\n        if python.startswith(\"cp\"):\n            return \"cp38\", \"abi3\", plat\n\n        return python, abi, plat\n\n\nsetuptools.setup(\n    cffi_modules=[\n        \"src/_cffi_src/build_opus.py:ffibuilder\",\n        \"src/_cffi_src/build_vpx.py:ffibuilder\",\n    ],\n    cmdclass={\"bdist_wheel\": bdist_wheel_abi3},\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stubs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}