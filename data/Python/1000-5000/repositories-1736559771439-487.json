{
  "metadata": {
    "timestamp": 1736559771439,
    "page": 487,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kyegomez/swarms",
      "stars": 3901,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 4.6357421875,
          "content": ".git\n.gitignore\n.env\n__pycache__\n*.pyc\n*.pyo\n*.pyd\n.Python\nenv/\nvenv/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.log\n.pytest_cache/\n.mypy_cache/\n\n__pycache__/\n.venv/\n\n.env\n\nimage/\naudio/\nvideo/\nartifacts_three\ndataframe/\n.ruff_cache\n.pytest_cache\nstatic/generated\nruns\nFinancial-Analysis-Agent_state.json\nexperimental\nartifacts_five\nencryption\nerrors\nchroma\nagent_workspace\n.pt\nAccounting Assistant_state.json\nUnit Testing Agent_state.json\nsec_agent\nDevin_state.json\npoetry.lock\nhire_researchers\nagent_workspace\njson_logs\nMedical Image Diagnostic Agent_state.json\nflight agent_state.json\nD_state.json\nartifacts_six\nartifacts_seven\nswarms/__pycache__\nartifacts_once\ntranscript_generator.json\nvenv\n.DS_Store\nCargo.lock\n.DS_STORE\nartifacts_logs\nCargo.lock\nMedical Treatment Recommendation Agent_state.json\nswarms/agents/.DS_Store\nartifacts_two\nlogs\nT_state.json\n_build\nconversation.txt\nt1_state.json\nstderr_log.txt\nt2_state.json\n.vscode\n.DS_STORE\n# Byte-compiled / optimized / DLL files\nTranscript Generator_state.json\n__pycache__/\n*.py[cod]\n*$py.class\n.grit\nswarm-worker-01_state.json\nerror.txt\nDevin Worker 2_state.json\n# C extensions\n*.so\n.ruff_cache\n\n\nerrors.txt\n\nAutonomous-Agent-XYZ1B_state.json\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n.DS_Store\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n.vscode/settings.json\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\ndist/\n\n# Flycheck\nflycheck_*.el\n\n# server auth directory\n/server/\n\n# projectiles files\n.projectile\n\n# directory configuration\n.dir-locals.el\n\n# network security\n/network-security.data\n\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.703125,
          "content": "WORKSPACE_DIR=\"agent_workspace\"\nSWARMS_API_KEY=\"\"\nUSE_TELEMETRY=True\nOPENAI_API_KEY=\"sk-\"\nGOOGLE_API_KEY=\"\"\nAI21_API_KEY=\"your_api_key_here\"\nCOHERE_API_KEY=\"your_api_key_here\"\nALEPHALPHA_API_KEY=\"your_api_key_here\"\nHUGGINFACEHUB_API_KEY=\"your_api_key_here\"\nEVAL_PORT=8000\nMODEL_NAME=\"gpt-4\"\nUSE_GPU=True\nPLAYGROUND_DIR=\"examples\"\nLOG_LEVEL=\"INFO\"\nBOT_NAME=\"Orca\"\nHF_API_KEY=\"your_huggingface_api_key_here\"\nAGENTOPS_API_KEY=\"\"\nANTHROPIC_API_KEY=\"your_anthropic_api_key\"\nAZURE_OPENAI_ENDPOINT=\"your_azure_openai_endpoint\"\nAZURE_OPENAI_DEPLOYMENT=\"your_azure_openai_deployment\"\nOPENAI_API_VERSION=\"your_openai_api_version\"\nAZURE_OPENAI_API_KEY=\"your_azure_openai_api_key\"\nAZURE_OPENAI_AD_TOKEN=\"your_azure_openai_ad_token\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 6.9990234375,
          "content": "__pycache__/\n.venv/\n\n.env\n\nimage/\naudio/\nvideo/\nartifacts_three\ndataframe/\n.ruff_cache\n.pytest_cache\nstatic/generated\nruns\nFinancial-Analysis-Agent_state.json\nexperimental\nartifacts_five\nencryption\nerrors\nchroma\nagent_workspace\n.pt\nAccounting Assistant_state.json\nUnit Testing Agent_state.json\nsec_agent\nDevin_state.json\npoetry.lock\nhire_researchers\nagent_workspace\njson_logs\nMedical Image Diagnostic Agent_state.json\nflight agent_state.json\nD_state.json\nartifacts_six\nartifacts_seven\nswarms/__pycache__\nartifacts_once\ntranscript_generator.json\nvenv\n.DS_Store\nCargo.lock\n.DS_STORE\nartifacts_logs\nCargo.lock\nMedical Treatment Recommendation Agent_state.json\nswarms/agents/.DS_Store\nartifacts_two\nlogs\nT_state.json\n_build\nconversation.txt\nt1_state.json\nstderr_log.txt\nt2_state.json\n.vscode\n.DS_STORE\n# Byte-compiled / optimized / DLL files\nTranscript Generator_state.json\n__pycache__/\n*.py[cod]\n*$py.class\n.grit\nswarm-worker-01_state.json\nerror.txt\nDevin Worker 2_state.json\n# C extensions\n*.so\n.ruff_cache\n\n\nerrors.txt\n\nAutonomous-Agent-XYZ1B_state.json\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n.DS_Store\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n.vscode/settings.json\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\ndist/\n\n# Flycheck\nflycheck_*.el\n\n# server auth directory\n/server/\n\n# projectiles files\n.projectile\n\n# directory configuration\n.dir-locals.el\n\n# network security\n/network-security.data\n\n\n\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n.vscode/settings.json\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\ndist/\n\n# Flycheck\nflycheck_*.el\n\n# server auth directory\n/server/\n\n# projectiles files\n.projectile\n\n# directory configuration\n.dir-locals.el\n\n# network security\n/network-security.data\n\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.4658203125,
          "content": "repos:\n  - repo: https://github.com/ambv/black\n    rev: 22.3.0\n    hooks:\n    - id: black\n  - repo: https://github.com/charliermarsh/ruff-pre-commit\n    rev: 'v0.0.255'\n    hooks:\n      - id: ruff\n        args: [----unsafe-fixes]\n  - repo: https://github.com/nbQA-dev/nbQA\n    rev: 1.6.3\n    hooks:\n    - id: nbqa-black\n      additional_dependencies: [ipython==8.12, black]\n    - id: nbqa-ruff \n      args: [\"--ignore=I001\"]\n      additional_dependencies: [ipython==8.12, ruff]"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0908203125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nkye@apac.ai.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.34375,
          "content": "# Contribution Guidelines\n\n---\n\n## Table of Contents\n\n- [Project Overview](#project-overview)\n- [Getting Started](#getting-started)\n  - [Installation](#installation)\n  - [Project Structure](#project-structure)\n- [How to Contribute](#how-to-contribute)\n  - [Reporting Issues](#reporting-issues)\n  - [Submitting Pull Requests](#submitting-pull-requests)\n- [Coding Standards](#coding-standards)\n  - [Type Annotations](#type-annotations)\n  - [Docstrings and Documentation](#docstrings-and-documentation)\n  - [Testing](#testing)\n  - [Code Style](#code-style)\n- [Areas Needing Contributions](#areas-needing-contributions)\n  - [Writing Tests](#writing-tests)\n  - [Improving Documentation](#improving-documentation)\n  - [Creating Training Scripts](#creating-training-scripts)\n- [Community and Support](#community-and-support)\n- [License](#license)\n\n---\n\n## Project Overview\n\n**swarms** is a library focused on making it simple to orchestrate agents to automate real-world activities. The goal is to automate the world economy with these swarms of agents.\n\nWe need your help to:\n\n- **Write Tests**: Ensure the reliability and correctness of the codebase.\n- **Improve Documentation**: Maintain clear and comprehensive documentation.\n- **Add New Orchestration Methods**: Add multi-agent orchestration methods\n- **Removing Defunct Code**: Removing bad code\n\n\n\nYour contributions will help us push the boundaries of AI and make this library a valuable resource for the community.\n\n---\n\n## Getting Started\n\n### Installation\n\nYou can install swarms using `pip`:\n\n```bash\npip3 install swarms\n```\n\nAlternatively, you can clone the repository:\n\n```bash\ngit clone https://github.com/kyegomez/swarms\n```\n\n### Project Structure\n\n- **`swarms/`**: Contains all the source code for the library.\n- **`examples/`**: Includes example scripts and notebooks demonstrating how to use the library.\n- **`tests/`**: (To be created) Will contain unit tests for the library.\n- **`docs/`**: (To be maintained) Contains documentation files.\n\n---\n\n## How to Contribute\n\n### Reporting Issues\n\nIf you find any bugs, inconsistencies, or have suggestions for enhancements, please open an issue on GitHub:\n\n1. **Search Existing Issues**: Before opening a new issue, check if it has already been reported.\n2. **Open a New Issue**: If it hasn't been reported, create a new issue and provide detailed information.\n   - **Title**: A concise summary of the issue.\n   - **Description**: Detailed description, steps to reproduce, expected behavior, and any relevant logs or screenshots.\n3. **Label Appropriately**: Use labels to categorize the issue (e.g., bug, enhancement, documentation).\n\n### Submitting Pull Requests\n\nWe welcome pull requests (PRs) for bug fixes, improvements, and new features. Please follow these guidelines:\n\n1. **Fork the Repository**: Create a personal fork of the repository on GitHub.\n2. **Clone Your Fork**: Clone your forked repository to your local machine.\n\n   ```bash\n   git clone https://github.com/kyegomez/swarms.git\n   ```\n\n3. **Create a New Branch**: Use a descriptive branch name.\n\n   ```bash\n   git checkout -b feature/your-feature-name\n   ```\n\n4. **Make Your Changes**: Implement your code, ensuring it adheres to the coding standards.\n5. **Add Tests**: Write tests to cover your changes.\n6. **Commit Your Changes**: Write clear and concise commit messages.\n\n   ```bash\n   git commit -am \"Add feature X\"\n   ```\n\n7. **Push to Your Fork**:\n\n   ```bash\n   git push origin feature/your-feature-name\n   ```\n\n8. **Create a Pull Request**:\n\n   - Go to the original repository on GitHub.\n   - Click on \"New Pull Request\".\n   - Select your branch and create the PR.\n   - Provide a clear description of your changes and reference any related issues.\n\n9. **Respond to Feedback**: Be prepared to make changes based on code reviews.\n\n**Note**: It's recommended to create small and focused PRs for easier review and faster integration.\n\n---\n\n## Coding Standards\n\nTo maintain code quality and consistency, please adhere to the following standards.\n\n### Type Annotations\n\n- **Mandatory**: All functions and methods must have type annotations.\n- **Example**:\n\n  ```python\n  def add_numbers(a: int, b: int) -> int:\n      return a + b\n  ```\n\n- **Benefits**:\n  - Improves code readability.\n  - Helps with static type checking tools.\n\n### Docstrings and Documentation\n\n- **Docstrings**: Every public class, function, and method must have a docstring following the [Google Python Style Guide](http://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings) or [NumPy Docstring Standard](https://numpydoc.readthedocs.io/en/latest/format.html).\n- **Content**:\n  - **Description**: Briefly describe what the function or class does.\n  - **Args**: List and describe each parameter.\n  - **Returns**: Describe the return value(s).\n  - **Raises**: List any exceptions that are raised.\n\n- **Example**:\n\n  ```python\n  def calculate_mean(values: List[float]) -> float:\n      \"\"\"\n      Calculates the mean of a list of numbers.\n\n      Args:\n          values (List[float]): A list of numerical values.\n\n      Returns:\n          float: The mean of the input values.\n\n      Raises:\n          ValueError: If the input list is empty.\n      \"\"\"\n      if not values:\n          raise ValueError(\"The input list is empty.\")\n      return sum(values) / len(values)\n  ```\n\n- **Documentation**: Update or create documentation pages if your changes affect the public API.\n\n### Testing\n\n- **Required**: All new features and bug fixes must include appropriate unit tests.\n- **Framework**: Use `unittest`, `pytest`, or a similar testing framework.\n- **Test Location**: Place tests in the `tests/` directory, mirroring the structure of `swarms/`.\n- **Test Coverage**: Aim for high test coverage to ensure code reliability.\n- **Running Tests**: Provide instructions for running tests.\n\n  ```bash\n  pytest tests/\n  ```\n\n### Code Style\n\n- **PEP 8 Compliance**: Follow [PEP 8](https://www.python.org/dev/peps/pep-0008/) style guidelines.\n- **Linting Tools**: Use `flake8`, `black`, or `pylint` to check code style.\n- **Consistency**: Maintain consistency with the existing codebase.\n\n---\n\n## Areas Needing Contributions\n\nWe have several areas where contributions are particularly welcome.\n\n### Writing Tests\n\n- **Goal**: Increase test coverage to ensure the library's robustness.\n- **Tasks**:\n  - Write unit tests for existing code in `swarms/`.\n  - Identify edge cases and potential failure points.\n  - Ensure tests are repeatable and independent.\n\n### Improving Documentation\n\n- **Goal**: Maintain clear and comprehensive documentation for users and developers.\n- **Tasks**:\n  - Update docstrings to reflect any changes.\n  - Add examples and tutorials in the `examples/` directory.\n  - Improve or expand the content in the `docs/` directory.\n\n### Creating Multi-Agent Orchestration Methods\n\n- **Goal**: Provide new multi-agent orchestration methods\n\n---\n\n## Community and Support\n\n- **Communication**: Engage with the community by participating in discussions on issues and pull requests.\n- **Respect**: Maintain a respectful and inclusive environment.\n- **Feedback**: Be open to receiving and providing constructive feedback.\n\n---\n\n## License\n\nBy contributing to swarms, you agree that your contributions will be licensed under the [MIT License](LICENSE).\n\n---\n\nThank you for contributing to swarms! Your efforts help make this project better for everyone.\n\nIf you have any questions or need assistance, please feel free to open an issue or reach out to the maintainers."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.4208984375,
          "content": "# Use Python 3.11 slim-bullseye for smaller base image\nFROM python:3.11-slim-bullseye AS builder\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Set the working directory\nWORKDIR /build\n\n# Install only essential build dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    gcc \\\n    g++ \\\n    gfortran \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install swarms packages\nRUN pip install --no-cache-dir swarm-models swarms\n\n# Production stage\nFROM python:3.11-slim-bullseye\n\n# Set secure environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    WORKSPACE_DIR=\"agent_workspace\" \\\n    PATH=\"/app:${PATH}\" \\\n    PYTHONPATH=\"/app:${PYTHONPATH}\" \\\n    USER=swarms\n\n# Create non-root user\nRUN useradd -m -s /bin/bash -U $USER && \\\n    mkdir -p /app && \\\n    chown -R $USER:$USER /app\n\n# Set working directory\nWORKDIR /app\n\n# Copy only necessary files from builder\nCOPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages\nCOPY --from=builder /usr/local/bin /usr/local/bin\n\n# Copy application with correct permissions\nCOPY --chown=$USER:$USER . .\n\n# Switch to non-root user\nUSER $USER\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\\n    CMD python -c \"import swarms; print('Health check passed')\" || exit 1"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.759765625,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    Swarms provides multi-agent orchestration mechanisms to enable llm agents to collaborate and work together\n    Copyright (C) <2025>  <Kye Gomez Chairman of TGSC>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 95.4453125,
          "content": "<div align=\"center\">\n  <a href=\"https://swarms.world\">\n    <img src=\"https://github.com/kyegomez/swarms/blob/master/images/swarmslogobanner.png\" style=\"margin: 15px; max-width: 300px\" width=\"50%\" alt=\"Logo\">\n  </a>\n</div>\n<p align=\"center\">\n  <em>The Enterprise-Grade Production-Ready Multi-Agent Orchestration Framework </em>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/swarms/\" target=\"_blank\">\n        <img alt=\"Python\" src=\"https://img.shields.io/badge/python-3670A0?style=for-the-badge&logo=python&logoColor=ffdd54\" />\n        <img alt=\"Version\" src=\"https://img.shields.io/pypi/v/swarms?style=for-the-badge&color=3670A0\">\n    </a>\n</p>\n<p align=\"center\">\n<a href=\"https://twitter.com/swarms_corp/\">🐦 Twitter</a>\n<span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n<a href=\"https://discord.gg/agora-999382051935506503\">📢 Discord</a>\n<span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n<a href=\"https://swarms.world\">Swarms Platform</a>\n<span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n<a href=\"https://docs.swarms.world\">📙 Documentation</a>\n</p>\n\n\n\n\n[![Join our Discord](https://img.shields.io/badge/Discord-Join%20our%20server-5865F2?style=for-the-badge&logo=discord&logoColor=white)](https://discord.gg/agora-999382051935506503) [![Subscribe on YouTube](https://img.shields.io/badge/YouTube-Subscribe-red?style=for-the-badge&logo=youtube&logoColor=white)](https://www.youtube.com/@kyegomez3242) [![Connect on LinkedIn](https://img.shields.io/badge/LinkedIn-Connect-blue?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/kye-g-38759a207/) [![Follow on X.com](https://img.shields.io/badge/X.com-Follow-1DA1F2?style=for-the-badge&logo=x&logoColor=white)](https://x.com/kyegomezb)\n\n\n\n[![GitHub issues](https://img.shields.io/github/issues/kyegomez/swarms)](https://github.com/kyegomez/swarms/issues) [![GitHub forks](https://img.shields.io/github/forks/kyegomez/swarms)](https://github.com/kyegomez/swarms/network) [![GitHub stars](https://img.shields.io/github/stars/kyegomez/swarms)](https://github.com/kyegomez/swarms/stargazers) [![GitHub license](https://img.shields.io/github/license/kyegomez/swarms)](https://github.com/kyegomez/swarms/blob/main/LICENSE)[![GitHub star chart](https://img.shields.io/github/stars/kyegomez/swarms?style=social)](https://star-history.com/#kyegomez/swarms)[![Dependency Status](https://img.shields.io/librariesio/github/kyegomez/swarms)](https://libraries.io/github/kyegomez/swarms) [![Downloads](https://static.pepy.tech/badge/swarms/month)](https://pepy.tech/project/swarms)\n\n[![Share on Twitter](https://img.shields.io/twitter/url/https/twitter.com/cloudposse.svg?style=social&label=Share%20%40kyegomez/swarms)](https://twitter.com/intent/tweet?text=Check%20out%20this%20amazing%20AI%20project:%20&url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms) [![Share on Facebook](https://img.shields.io/badge/Share-%20facebook-blue)](https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms) [![Share on LinkedIn](https://img.shields.io/badge/Share-%20linkedin-blue)](https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms&title=&summary=&source=)\n\n[![Share on Reddit](https://img.shields.io/badge/-Share%20on%20Reddit-orange)](https://www.reddit.com/submit?url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms&title=Swarms%20-%20the%20future%20of%20AI) [![Share on Hacker News](https://img.shields.io/badge/-Share%20on%20Hacker%20News-orange)](https://news.ycombinator.com/submitlink?u=https%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms&t=Swarms%20-%20the%20future%20of%20AI) [![Share on Pinterest](https://img.shields.io/badge/-Share%20on%20Pinterest-red)](https://pinterest.com/pin/create/button/?url=https%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms&media=https%3A%2F%2Fexample.com%2Fimage.jpg&description=Swarms%20-%20the%20future%20of%20AI) [![Share on WhatsApp](https://img.shields.io/badge/-Share%20on%20WhatsApp-green)](https://api.whatsapp.com/send?text=Check%20out%20Swarms%20-%20the%20future%20of%20AI%20%23swarms%20%23AI%0A%0Ahttps%3A%2F%2Fgithub.com%2Fkyegomez%2Fswarms)\n\n\n## ✨ Features\n\n| Category | Features | Benefits |\n|----------|----------|-----------|\n| 🏢 Enterprise Architecture | • Production-Ready Infrastructure<br>• High Reliability Systems<br>• Modular Design<br>• Comprehensive Logging | • Reduced downtime<br>• Easier maintenance<br>• Better debugging<br>• Enhanced monitoring |\n| 🤖 Agent Orchestration | • Hierarchical Swarms<br>• Parallel Processing<br>• Sequential Workflows<br>• Graph-based Workflows<br>• Dynamic Agent Rearrangement | • Complex task handling<br>• Improved performance<br>• Flexible workflows<br>• Optimized execution |\n| 🔄 Integration Capabilities | • Multi-Model Support<br>• Custom Agent Creation<br>• Extensive Tool Library<br>• Multiple Memory Systems | • Provider flexibility<br>• Custom solutions<br>• Extended functionality<br>• Enhanced memory management |\n| 📈 Scalability | • Concurrent Processing<br>• Resource Management<br>• Load Balancing<br>• Horizontal Scaling | • Higher throughput<br>• Efficient resource use<br>• Better performance<br>• Easy scaling |\n| 🛠️ Developer Tools | • Simple API<br>• Extensive Documentation<br>• Active Community<br>• CLI Tools | • Faster development<br>• Easy learning curve<br>• Community support<br>• Quick deployment |\n| 🔐 Security Features | • Error Handling<br>• Rate Limiting<br>• Monitoring Integration<br>• Audit Logging | • Improved reliability<br>• API protection<br>• Better monitoring<br>• Enhanced tracking |\n| 📊 Advanced Features | • SpreadsheetSwarm<br>• Group Chat<br>• Agent Registry<br>• Mixture of Agents | • Mass agent management<br>• Collaborative AI<br>• Centralized control<br>• Complex solutions |\n| 🔌 Provider Support | • OpenAI<br>• Anthropic<br>• ChromaDB<br>• Custom Providers | • Provider flexibility<br>• Storage options<br>• Custom integration<br>• Vendor independence |\n| 💪 Production Features | • Automatic Retries<br>• Async Support<br>• Environment Management<br>• Type Safety | • Better reliability<br>• Improved performance<br>• Easy configuration<br>• Safer code |\n| 🎯 Use Case Support | • Task-Specific Agents<br>• Custom Workflows<br>• Industry Solutions<br>• Extensible Framework | • Quick deployment<br>• Flexible solutions<br>• Industry readiness<br>• Easy customization |\n\n\n----\n\n## Requirements\n- `python3.10` or above!\n- `$ pip install -U swarms` And, don't forget to install swarms!\n- `.env` file with API keys from your providers like `OPENAI_API_KEY`, `ANTHROPIC_API_KEY`\n-  Set an `.env` Variable with your desired workspace dir: `WORKSPACE_DIR=\"agent_workspace\"` or do it in your terminal with `export WORKSPACE_DIR=\"agent_workspace\"`\n-  Finally, `swarms onboarding` to get you started.\n\n## Guides and Walkthroughs\nRefer to our documentation for production grade implementation details.\n\n\n| Section              | Links                                                                                      |\n|----------------------|--------------------------------------------------------------------------------------------|\n| Installation    | [Installation](https://docs.swarms.world/en/latest/swarms/install/install/)                                                            |\n| Quickstart | [Get Started](https://docs.swarms.world/en/latest/swarms/install/quickstart/)                                                 |\n| Agent Internal Mechanisms | [Agent Architecture](https://docs.swarms.world/en/latest/swarms/framework/agents_explained/)                                                 |\n| Agent API | [Agent API](https://docs.swarms.world/en/latest/swarms/structs/agent/)                                                 |\n| Integrating External Agents Griptape, Autogen, etc | [Integrating External APIs](https://docs.swarms.world/en/latest/swarms/agents/external_party_agents/)                                                 |\n| Creating Agents from YAML | [Creating Agents from YAML](https://docs.swarms.world/en/latest/swarms/agents/create_agents_yaml/)                                                 |\n| Why You Need Swarms | [Why MultiAgent Collaboration is Necessary](https://docs.swarms.world/en/latest/swarms/concept/why/)                                                 |\n| Swarm Architectures Analysis | [Swarm Architectures](https://docs.swarms.world/en/latest/swarms/concept/swarm_architectures/)                                                 |\n| Choosing the Right Swarm for Your Business Problem¶ | [CLICK HERE](https://docs.swarms.world/en/latest/swarms/concept/swarm_architectures/)                                                 |\n| AgentRearrange Docs| [CLICK HERE](https://docs.swarms.world/en/latest/swarms/structs/agent_rearrange/)                                                 |\n\n\n## Install 💻\nInstall the following packages with copy and paste\n\n```bash\n$ pip3 install -U swarms swarm-models swarms-memory\n```\n\n\n## Onboarding\n\nNow that you have downloaded swarms with `pip3 install -U swarms`, we get access to the `CLI`. Get Onboarded with CLI Now with:\n\n```bash\nswarms onboarding\n```\n\nYou can also run this command for help:\n\n```bash\nswarms help\n```\n\nFor more documentation on the CLI [CLICK HERE](https://docs.swarms.world/en/latest/swarms/cli/main/)\n\n---\n\n# Usage Examples 🤖\nHere are some example scripts to get you started. For more comprehensive documentation, visit our [docs](https://docs.swarms.world/en/latest/).\n\n| Example Name | Description | Type of Examples | Link |\n| --- | --- | --- | --- |\n| Swarms Examples | A collection of simple examples to demonstrate Swarms capabilities. | Basic Usage | [https://github.com/The-Swarm-Corporation/swarms-examples?tab=readme-ov-file](https://github.com/The-Swarm-Corporation/swarms-examples?tab=readme-ov-file) |\n| Cookbook | A comprehensive guide with recipes for various use cases and scenarios. | Advanced Usage | [https://github.com/The-Swarm-Corporation/Cookbook](https://github.com/The-Swarm-Corporation/Cookbook) |\n\n\n\n\n---\n\n## `Agent` Class\nThe `Agent` class is a fundamental component of the Swarms framework, designed to execute tasks autonomously. It fuses llms, tools and long-term memory capabilities to create a full stack agent. The `Agent` class is highly customizable, allowing for fine-grained control over its behavior and interactions.\n\n\n### `run` Method\nThe `run` method is the primary entry point for executing tasks with an `Agent` instance. It accepts a task string as the main input task and processes it according to the agent's configuration. And, it can also accept an `img` parameter such as `img=\"image_filepath.png` to process images if you have a VLM attached such as `GPT4VisionAPI`\n\n\n\n## Simple Example\n\n```python\nfrom swarms import Agent\n\nagent = Agent(\n    agent_name=\"Stock-Analysis-Agent\",\n    model_name=\"gpt-4o-mini\",\n    max_loops=\"auto\",\n    interactive=True,\n    streaming_on=True,\n)\n\nagent.run(\"What is the current market trend for tech stocks?\")\n\n```\n\n### Settings and Customization\nThe `Agent` class offers a range of settings to tailor its behavior to specific needs. Some key settings include:\n\n| Setting | Description | Default Value |\n| --- | --- | --- |\n| `agent_name` | The name of the agent. | \"DefaultAgent\" |\n| `system_prompt` | The system prompt to use for the agent. | \"Default system prompt.\" |\n| `llm` | The language model to use for processing tasks. | `OpenAIChat` instance |\n| `max_loops` | The maximum number of loops to execute for a task. | 1 |\n| `autosave` | Enables or disables autosaving of the agent's state. | False |\n| `dashboard` | Enables or disables the dashboard for the agent. | False |\n| `verbose` | Controls the verbosity of the agent's output. | False |\n| `dynamic_temperature_enabled` | Enables or disables dynamic temperature adjustment for the language model. | False |\n| `saved_state_path` | The path to save the agent's state. | \"agent_state.json\" |\n| `user_name` | The username associated with the agent. | \"default_user\" |\n| `retry_attempts` | The number of retry attempts for failed tasks. | 1 |\n| `context_length` | The maximum length of the context to consider for tasks. | 200000 |\n| `return_step_meta` | Controls whether to return step metadata in the output. | False |\n| `output_type` | The type of output to return (e.g., \"json\", \"string\"). | \"string\" |\n\n\n```python\nimport os\nfrom swarms import Agent\n\nfrom swarms.prompts.finance_agent_sys_prompt import (\n    FINANCIAL_AGENT_SYS_PROMPT,\n)\n# Initialize the agent\nagent = Agent(\n    agent_name=\"Financial-Analysis-Agent\",\n    system_prompt=FINANCIAL_AGENT_SYS_PROMPT,\n    model_name=\"gpt-4o-mini\",\n    max_loops=1,\n    autosave=True,\n    dashboard=False,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"finance_agent.json\",\n    user_name=\"swarms_corp\",\n    retry_attempts=1,\n    context_length=200000,\n    return_step_meta=False,\n    output_type=\"string\",\n    streaming_on=False,\n)\n\n\nagent.run(\n    \"How can I establish a ROTH IRA to buy stocks and get a tax break? What are the criteria\"\n)\n\n```\n-----\n\n### Integrating RAG with Swarms for Enhanced Long-Term Memory\n`Agent` equipped with quasi-infinite long term memory using RAG (Relational Agent Graph) for advanced document understanding, analysis, and retrieval capabilities.\n\n**Mermaid Diagram for RAG Integration**\n```mermaid\ngraph TD\n    A[Initialize Agent with RAG] --> B[Receive Task]\n    B --> C[Query Long-Term Memory]\n    C --> D[Process Task with Context]\n    D --> E[Generate Response]\n    E --> F[Update Long-Term Memory]\n    F --> G[Return Output]\n```\n\n```python\nfrom swarms import Agent\nfrom swarms.prompts.finance_agent_sys_prompt import (\n    FINANCIAL_AGENT_SYS_PROMPT,\n)\nimport os\n\nfrom swarms_memory import ChromaDB\n\n# Initialize the ChromaDB client for long-term memory management\nchromadb = ChromaDB(\n    metric=\"cosine\",  # Metric for similarity measurement\n    output_dir=\"finance_agent_rag\",  # Directory for storing RAG data\n    # docs_folder=\"artifacts\",  # Uncomment and specify the folder containing your documents\n)\n\n# Initialize the agent with RAG capabilities\nagent = Agent(\n    agent_name=\"Financial-Analysis-Agent\",\n    system_prompt=FINANCIAL_AGENT_SYS_PROMPT,\n    agent_description=\"Agent creates a comprehensive financial analysis\",\n    model_name=\"gpt-4o-mini\",\n    max_loops=\"auto\",  # Auto-adjusts loops based on task complexity\n    autosave=True,  # Automatically saves agent state\n    dashboard=False,  # Disables dashboard for this example\n    verbose=True,  # Enables verbose mode for detailed output\n    streaming_on=True,  # Enables streaming for real-time processing\n    dynamic_temperature_enabled=True,  # Dynamically adjusts temperature for optimal performance\n    saved_state_path=\"finance_agent.json\",  # Path to save agent state\n    user_name=\"swarms_corp\",  # User name for the agent\n    retry_attempts=3,  # Number of retry attempts for failed tasks\n    context_length=200000,  # Maximum length of the context to consider\n    long_term_memory=chromadb,  # Integrates ChromaDB for long-term memory management\n    return_step_meta=False,\n    output_type=\"string\",\n)\n\n# Run the agent with a sample task\nagent.run(\n    \"What are the components of a startups stock incentive equity plan\"\n)\n```\n\n\n-------\n\n### Misc Agent Settings\nWe provide vast array of features to save agent states using json, yaml, toml, upload pdfs, batched jobs, and much more!\n\n\n**Method Table**\n\n| Method | Description |\n| --- | --- |\n| `to_dict()` | Converts the agent object to a dictionary. |\n| `to_toml()` | Converts the agent object to a TOML string. |\n| `model_dump_json()` | Dumps the model to a JSON file. |\n| `model_dump_yaml()` | Dumps the model to a YAML file. |\n| `ingest_docs()` | Ingests documents into the agent's knowledge base. |\n| `receive_message()` | Receives a message from a user and processes it. |\n| `send_agent_message()` | Sends a message from the agent to a user. |\n| `filtered_run()` | Runs the agent with a filtered system prompt. |\n| `bulk_run()` | Runs the agent with multiple system prompts. |\n| `add_memory()` | Adds a memory to the agent. |\n| `check_available_tokens()` | Checks the number of available tokens for the agent. |\n| `tokens_checks()` | Performs token checks for the agent. |\n| `print_dashboard()` | Prints the dashboard of the agent. |\n| `get_docs_from_doc_folders()` | Fetches all the documents from the doc folders. |\n| `activate_agentops()` | Activates agent operations. |\n| `check_end_session_agentops()` | Checks the end of the session for agent operations. |\n\n\n\n```python\n# # Convert the agent object to a dictionary\nprint(agent.to_dict())\nprint(agent.to_toml())\nprint(agent.model_dump_json())\nprint(agent.model_dump_yaml())\n\n# Ingest documents into the agent's knowledge base\n(\"your_pdf_path.pdf\")\n\n# Receive a message from a user and process it\nagent.receive_message(name=\"agent_name\", message=\"message\")\n\n# Send a message from the agent to a user\nagent.send_agent_message(agent_name=\"agent_name\", message=\"message\")\n\n# Ingest multiple documents into the agent's knowledge base\nagent.ingest_docs(\"your_pdf_path.pdf\", \"your_csv_path.csv\")\n\n# Run the agent with a filtered system prompt\nagent.filtered_run(\n    \"How can I establish a ROTH IRA to buy stocks and get a tax break? What are the criteria?\"\n)\n\n# Run the agent with multiple system prompts\nagent.bulk_run(\n    [\n        \"How can I establish a ROTH IRA to buy stocks and get a tax break? What are the criteria?\",\n        \"Another system prompt\",\n    ]\n)\n\n# Add a memory to the agent\nagent.add_memory(\"Add a memory to the agent\")\n\n# Check the number of available tokens for the agent\nagent.check_available_tokens()\n\n# Perform token checks for the agent\nagent.tokens_checks()\n\n# Print the dashboard of the agent\nagent.print_dashboard()\n\n# Fetch all the documents from the doc folders\nagent.get_docs_from_doc_folders()\n\n# Activate agent ops\nagent.activate_agentops()\nagent.check_end_session_agentops()\n\n# Dump the model to a JSON file\nagent.model_dump_json()\nprint(agent.to_toml())\n\n```\n\n\n\n### `Agent`with Pydantic BaseModel as Output Type\nThe following is an example of an agent that intakes a pydantic basemodel and outputs it at the same time:\n\n```python\nfrom pydantic import BaseModel, Field\nfrom swarms import Agent\n\n\n# Initialize the schema for the person's information\nclass Schema(BaseModel):\n    name: str = Field(..., title=\"Name of the person\")\n    agent: int = Field(..., title=\"Age of the person\")\n    is_student: bool = Field(..., title=\"Whether the person is a student\")\n    courses: list[str] = Field(\n        ..., title=\"List of courses the person is taking\"\n    )\n\n\n# Convert the schema to a JSON string\ntool_schema = Schema(\n    name=\"Tool Name\",\n    agent=1,\n    is_student=True,\n    courses=[\"Course1\", \"Course2\"],\n)\n\n# Define the task to generate a person's information\ntask = \"Generate a person's information based on the following schema:\"\n\n# Initialize the agent\nagent = Agent(\n    agent_name=\"Person Information Generator\",\n    system_prompt=(\n        \"Generate a person's information based on the following schema:\"\n    ),\n    # Set the tool schema to the JSON string -- this is the key difference\n    tool_schema=tool_schema,\n    model_name=\"gpt-4o\",\n    max_loops=3,\n    autosave=True,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    interactive=True,\n    # Set the output type to the tool schema which is a BaseModel\n    output_type=tool_schema,  # or dict, or str\n    metadata_output_type=\"json\",\n    # List of schemas that the agent can handle\n    list_base_models=[tool_schema],\n    function_calling_format_type=\"OpenAI\",\n    function_calling_type=\"json\",  # or soon yaml\n)\n\n# Run the agent to generate the person's information\ngenerated_data = agent.run(task)\n\n# Print the generated data\nprint(f\"Generated data: {generated_data}\")\n\n\n```\n\n### Multi Modal Autonomous Agent\nRun the agent with multiple modalities useful for various real-world tasks in manufacturing, logistics, and health.\n\n```python\nimport os\nfrom dotenv import load_dotenv\nfrom swarms import Agent\n\nfrom swarm_models import GPT4VisionAPI\n\n# Load the environment variables\nload_dotenv()\n\n\n# Initialize the language model\nllm = GPT4VisionAPI(\n    openai_api_key=os.environ.get(\"OPENAI_API_KEY\"),\n    max_tokens=500,\n)\n\n# Initialize the task\ntask = (\n    \"Analyze this image of an assembly line and identify any issues such as\"\n    \" misaligned parts, defects, or deviations from the standard assembly\"\n    \" process. IF there is anything unsafe in the image, explain why it is\"\n    \" unsafe and how it could be improved.\"\n)\nimg = \"assembly_line.jpg\"\n\n## Initialize the workflow\nagent = Agent(\n    agent_name = \"Multi-ModalAgent\",\n    llm=llm, \n    max_loops=\"auto\", \n    autosave=True, \n    dashboard=True, \n    multi_modal=True\n)\n\n# Run the workflow on a task\nagent.run(task, img)\n```\n----\n\n\n### Local Agent `ToolAgent`\nToolAgent is a fully local agent that can use tools through JSON function calling. It intakes any open source model from huggingface and is extremely modular and plug in and play. We need help adding general support to all models soon.\n\n\n```python\nfrom pydantic import BaseModel, Field\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\n\nfrom swarms import ToolAgent\nfrom swarms.tools.json_utils import base_model_to_json\n\n# Load the pre-trained model and tokenizer\nmodel = AutoModelForCausalLM.from_pretrained(\n    \"databricks/dolly-v2-12b\",\n    load_in_4bit=True,\n    device_map=\"auto\",\n)\ntokenizer = AutoTokenizer.from_pretrained(\"databricks/dolly-v2-12b\")\n\n\n# Initialize the schema for the person's information\nclass Schema(BaseModel):\n    name: str = Field(..., title=\"Name of the person\")\n    agent: int = Field(..., title=\"Age of the person\")\n    is_student: bool = Field(\n        ..., title=\"Whether the person is a student\"\n    )\n    courses: list[str] = Field(\n        ..., title=\"List of courses the person is taking\"\n    )\n\n\n# Convert the schema to a JSON string\ntool_schema = base_model_to_json(Schema)\n\n# Define the task to generate a person's information\ntask = (\n    \"Generate a person's information based on the following schema:\"\n)\n\n# Create an instance of the ToolAgent class\nagent = ToolAgent(\n    name=\"dolly-function-agent\",\n    description=\"An agent to create a child's data\",\n    model=model,\n    tokenizer=tokenizer,\n    json_schema=tool_schema,\n)\n\n# Run the agent to generate the person's information\ngenerated_data = agent.run(task)\n\n# Print the generated data\nprint(f\"Generated data: {generated_data}\")\n\n```\n\n\n## Understanding Swarms\n\nA swarm refers to a group of more than two agents working collaboratively to achieve a common goal. These agents can be software entities, such as llms that interact with each other to perform complex tasks. The concept of a swarm is inspired by natural systems like ant colonies or bird flocks, where simple individual behaviors lead to complex group dynamics and problem-solving capabilities.\n\n### How Swarm Architectures Facilitate Communication\n\nSwarm architectures are designed to establish and manage communication between agents within a swarm. These architectures define how agents interact, share information, and coordinate their actions to achieve the desired outcomes. Here are some key aspects of swarm architectures:\n\n1. **Hierarchical Communication**: In hierarchical swarms, communication flows from higher-level agents to lower-level agents. Higher-level agents act as coordinators, distributing tasks and aggregating results. This structure is efficient for tasks that require top-down control and decision-making.\n\n2. **Parallel Communication**: In parallel swarms, agents operate independently and communicate with each other as needed. This architecture is suitable for tasks that can be processed concurrently without dependencies, allowing for faster execution and scalability.\n\n3. **Sequential Communication**: Sequential swarms process tasks in a linear order, where each agent's output becomes the input for the next agent. This ensures that tasks with dependencies are handled in the correct sequence, maintaining the integrity of the workflow.\n\n\nSwarm architectures leverage these communication patterns to ensure that agents work together efficiently, adapting to the specific requirements of the task at hand. By defining clear communication protocols and interaction models, swarm architectures enable the seamless orchestration of multiple agents, leading to enhanced performance and problem-solving capabilities.\n\n\n| **Name**                      | **Description**                                                                                                                                                         | **Code Link**                                                                                      | **Use Cases**                                                                                     |\n|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n| Hierarchical Swarms           | A system where agents are organized in a hierarchy, with higher-level agents coordinating lower-level agents to achieve complex tasks.                                   | [Code Link](https://docs.swarms.world/en/latest/swarms/concept/swarm_architectures/#hierarchical-swarm) | Manufacturing process optimization, multi-level sales management, healthcare resource coordination |\n| Agent Rearrange               | A setup where agents rearrange themselves dynamically based on the task requirements and environmental conditions.                                                       | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/agent_rearrange/)                   | Adaptive manufacturing lines, dynamic sales territory realignment, flexible healthcare staffing  |\n| Concurrent Workflows          | Agents perform different tasks simultaneously, coordinating to complete a larger goal.                                                                                  | [Code Link](https://docs.swarms.world/en/latest/swarms/concept/swarm_architectures/#concurrent-workflows) | Concurrent production lines, parallel sales operations, simultaneous patient care processes       |\n| Sequential Coordination       | Agents perform tasks in a specific sequence, where the completion of one task triggers the start of the next.                                                           | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/sequential_workflow/)               | Step-by-step assembly lines, sequential sales processes, stepwise patient treatment workflows     |\n| Parallel Processing           | Agents work on different parts of a task simultaneously to speed up the overall process.                                                                                | [Code Link](https://docs.swarms.world/en/latest/swarms/concept/swarm_architectures/#parallel-processing) | Parallel data processing in manufacturing, simultaneous sales analytics, concurrent medical tests  |\n| Mixture of Agents             | A heterogeneous swarm where agents with different capabilities are combined to solve complex problems.                                                                  | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/moa/)                               | Financial forecasting, complex problem-solving requiring diverse skills                           |\n| Graph Workflow                | Agents collaborate in a directed acyclic graph (DAG) format to manage dependencies and parallel tasks.                                                                  | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/graph_workflow/)                    | AI-driven software development pipelines, complex project management                              |\n| Group Chat                    | Agents engage in a chat-like interaction to reach decisions collaboratively.                                                                                           | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/group_chat/)                        | Real-time collaborative decision-making, contract negotiations                                    |\n| Agent Registry                | A centralized registry where agents are stored, retrieved, and invoked dynamically.                                                                                     | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/agent_registry/)                    | Dynamic agent management, evolving recommendation engines                                         |\n| Spreadsheet Swarm             | Manages tasks at scale, tracking agent outputs in a structured format like CSV files.                                                                                   | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/spreadsheet_swarm/)                 | Large-scale marketing analytics, financial audits                                                 |\n| Forest Swarm                  | A swarm structure that organizes agents in a tree-like hierarchy for complex decision-making processes.                                                                 | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/forest_swarm/)                      | Multi-stage workflows, hierarchical reinforcement learning                                        |\n| Swarm Router                  | Routes and chooses the swarm architecture based on the task requirements and available agents.                                                                        | [Code Link](https://docs.swarms.world/en/latest/swarms/structs/swarm_router/)                       | Dynamic task routing, adaptive swarm architecture selection, optimized agent allocation            |\n\n\n\n### `SequentialWorkflow`\nSequential Workflow enables you to sequentially execute tasks with `Agent` and then pass the output into the next agent and onwards until you have specified your max loops.\n\n```mermaid\ngraph LR\n    A[Agent 1] --> B[Agent 2]\n    B --> C[Agent 3]\n    C --> D[Agent 4]\n    D --> E[Max Loops]\n    E --> F[End]\n```\n\n\n\n### Methods\n\n| Method | Description | Parameters | Return Value |\n|--------|-------------|------------|--------------|\n| `__init__` | Initialize the SequentialWorkflow | `agents`: List of Agent objects<br>`max_loops`: Maximum number of iterations<br>`verbose`: Boolean for verbose output | None |\n| `run` | Execute the workflow | `input_data`: Initial input for the first agent | Final output after all agents have processed |\n\n### Inputs\n\n| Input | Type | Description |\n|-------|------|-------------|\n| `agents` | List[Agent] | List of Agent objects to be executed sequentially |\n| `max_loops` | int | Maximum number of times the entire sequence will be repeated |\n| `verbose` | bool | If True, print detailed information during execution |\n\n### Output\n\nThe `run` method returns the final output after all agents have processed the input sequentially.\n\nIn this example, each `Agent` represents a task that is executed sequentially. The output of each agent is passed to the next agent in the sequence until the maximum number of loops is reached. This workflow is particularly useful for tasks that require a series of steps to be executed in a specific order, such as data processing pipelines or complex calculations that rely on the output of previous steps.\n\n\n```python\nimport os\nfrom swarms import Agent, SequentialWorkflow\nfrom swarm_models import OpenAIChat\n\n# model = Anthropic(anthropic_api_key=os.getenv(\"ANTHROPIC_API_KEY\"))\ncompany = \"Nvidia\"\n# Get the OpenAI API key from the environment variable\napi_key = os.getenv(\"GROQ_API_KEY\")\n\n# Model\nmodel = OpenAIChat(\n    openai_api_base=\"https://api.groq.com/openai/v1\",\n    openai_api_key=api_key,\n    model_name=\"llama-3.1-70b-versatile\",\n    temperature=0.1,\n)\n\n\n# Initialize the Managing Director agent\nmanaging_director = Agent(\n    agent_name=\"Managing-Director\",\n    system_prompt=f\"\"\"\n    As the Managing Director at Blackstone, your role is to oversee the entire investment analysis process for potential acquisitions. \n    Your responsibilities include:\n    1. Setting the overall strategy and direction for the analysis\n    2. Coordinating the efforts of the various team members and ensuring a comprehensive evaluation\n    3. Reviewing the findings and recommendations from each team member\n    4. Making the final decision on whether to proceed with the acquisition\n    \n    For the current potential acquisition of {company}, direct the tasks for the team to thoroughly analyze all aspects of the company, including its financials, industry position, technology, market potential, and regulatory compliance. Provide guidance and feedback as needed to ensure a rigorous and unbiased assessment.\n    \"\"\",\n    llm=model,\n    max_loops=1,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    stopping_token=\"<DONE>\",\n    state_save_file_type=\"json\",\n    saved_state_path=\"managing-director.json\",\n)\n\n# Initialize the Vice President of Finance\nvp_finance = Agent(\n    agent_name=\"VP-Finance\",\n    system_prompt=f\"\"\"\n    As the Vice President of Finance at Blackstone, your role is to lead the financial analysis of potential acquisitions. \n    For the current potential acquisition of {company}, your tasks include:\n    1. Conducting a thorough review of {company}' financial statements, including income statements, balance sheets, and cash flow statements\n    2. Analyzing key financial metrics such as revenue growth, profitability margins, liquidity ratios, and debt levels\n    3. Assessing the company's historical financial performance and projecting future performance based on assumptions and market conditions\n    4. Identifying any financial risks or red flags that could impact the acquisition decision\n    5. Providing a detailed report on your findings and recommendations to the Managing Director\n\n    Be sure to consider factors such as the sustainability of {company}' business model, the strength of its customer base, and its ability to generate consistent cash flows. Your analysis should be data-driven, objective, and aligned with Blackstone's investment criteria.\n    \"\"\",\n    llm=model,\n    max_loops=1,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    stopping_token=\"<DONE>\",\n    state_save_file_type=\"json\",\n    saved_state_path=\"vp-finance.json\",\n)\n\n# Initialize the Industry Analyst\nindustry_analyst = Agent(\n    agent_name=\"Industry-Analyst\",\n    system_prompt=f\"\"\"\n    As the Industry Analyst at Blackstone, your role is to provide in-depth research and analysis on the industries and markets relevant to potential acquisitions.\n    For the current potential acquisition of {company}, your tasks include:\n    1. Conducting a comprehensive analysis of the industrial robotics and automation solutions industry, including market size, growth rates, key trends, and future prospects\n    2. Identifying the major players in the industry and assessing their market share, competitive strengths and weaknesses, and strategic positioning \n    3. Evaluating {company}' competitive position within the industry, including its market share, differentiation, and competitive advantages\n    4. Analyzing the key drivers and restraints for the industry, such as technological advancements, labor costs, regulatory changes, and economic conditions\n    5. Identifying potential risks and opportunities for {company} based on the industry analysis, such as disruptive technologies, emerging markets, or shifts in customer preferences  \n    \n    Your analysis should provide a clear and objective assessment of the attractiveness and future potential of the industrial robotics industry, as well as {company}' positioning within it. Consider both short-term and long-term factors, and provide evidence-based insights to inform the investment decision.\n    \"\"\",\n    llm=model,\n    max_loops=1,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    stopping_token=\"<DONE>\",\n    state_save_file_type=\"json\",\n    saved_state_path=\"industry-analyst.json\",\n)\n\n# Initialize the Technology Expert\ntech_expert = Agent(\n    agent_name=\"Tech-Expert\",\n    system_prompt=f\"\"\"\n    As the Technology Expert at Blackstone, your role is to assess the technological capabilities, competitive advantages, and potential risks of companies being considered for acquisition.\n    For the current potential acquisition of {company}, your tasks include:\n    1. Conducting a deep dive into {company}' proprietary technologies, including its robotics platforms, automation software, and AI capabilities \n    2. Assessing the uniqueness, scalability, and defensibility of {company}' technology stack and intellectual property\n    3. Comparing {company}' technologies to those of its competitors and identifying any key differentiators or technology gaps\n    4. Evaluating {company}' research and development capabilities, including its innovation pipeline, engineering talent, and R&D investments\n    5. Identifying any potential technology risks or disruptive threats that could impact {company}' long-term competitiveness, such as emerging technologies or expiring patents\n    \n    Your analysis should provide a comprehensive assessment of {company}' technological strengths and weaknesses, as well as the sustainability of its competitive advantages. Consider both the current state of its technology and its future potential in light of industry trends and advancements.\n    \"\"\",\n    llm=model,\n    max_loops=1,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    stopping_token=\"<DONE>\",\n    state_save_file_type=\"json\",\n    saved_state_path=\"tech-expert.json\",\n)\n\n# Initialize the Market Researcher\nmarket_researcher = Agent(\n    agent_name=\"Market-Researcher\",\n    system_prompt=f\"\"\"\n    As the Market Researcher at Blackstone, your role is to analyze the target company's customer base, market share, and growth potential to assess the commercial viability and attractiveness of the potential acquisition.\n    For the current potential acquisition of {company}, your tasks include:\n    1. Analyzing {company}' current customer base, including customer segmentation, concentration risk, and retention rates\n    2. Assessing {company}' market share within its target markets and identifying key factors driving its market position\n    3. Conducting a detailed market sizing and segmentation analysis for the industrial robotics and automation markets, including identifying high-growth segments and emerging opportunities\n    4. Evaluating the demand drivers and sales cycles for {company}' products and services, and identifying any potential risks or limitations to adoption\n    5. Developing financial projections and estimates for {company}' revenue growth potential based on the market analysis and assumptions around market share and penetration\n    \n    Your analysis should provide a data-driven assessment of the market opportunity for {company} and the feasibility of achieving our investment return targets. Consider both bottom-up and top-down market perspectives, and identify any key sensitivities or assumptions in your projections.\n    \"\"\",\n    llm=model,\n    max_loops=1,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    stopping_token=\"<DONE>\",\n    state_save_file_type=\"json\",\n    saved_state_path=\"market-researcher.json\",\n)\n\n# Initialize the Regulatory Specialist\nregulatory_specialist = Agent(\n    agent_name=\"Regulatory-Specialist\",\n    system_prompt=f\"\"\"\n    As the Regulatory Specialist at Blackstone, your role is to identify and assess any regulatory risks, compliance requirements, and potential legal liabilities associated with potential acquisitions.\n    For the current potential acquisition of {company}, your tasks include:  \n    1. Identifying all relevant regulatory bodies and laws that govern the operations of {company}, including industry-specific regulations, labor laws, and environmental regulations\n    2. Reviewing {company}' current compliance policies, procedures, and track record to identify any potential gaps or areas of non-compliance\n    3. Assessing the potential impact of any pending or proposed changes to relevant regulations that could affect {company}' business or create additional compliance burdens\n    4. Evaluating the potential legal liabilities and risks associated with {company}' products, services, and operations, including product liability, intellectual property, and customer contracts\n    5. Providing recommendations on any regulatory or legal due diligence steps that should be taken as part of the acquisition process, as well as any post-acquisition integration considerations\n    \n    Your analysis should provide a comprehensive assessment of the regulatory and legal landscape surrounding {company}, and identify any material risks or potential deal-breakers. Consider both the current state and future outlook, and provide practical recommendations to mitigate identified risks.\n    \"\"\",\n    llm=model,\n    max_loops=1,\n    dashboard=False,\n    streaming_on=True,\n    verbose=True,\n    stopping_token=\"<DONE>\",\n    state_save_file_type=\"json\",\n    saved_state_path=\"regulatory-specialist.json\",\n)\n\n# Create a list of agents\nagents = [\n    managing_director,\n    vp_finance,\n    industry_analyst,\n    tech_expert,\n    market_researcher,\n    regulatory_specialist,\n]\n\n\nswarm = SequentialWorkflow(\n    name=\"blackstone-private-equity-advisors\",\n    agents=agents,\n)\n\nprint(\n    swarm.run(\n        \"Analyze nvidia if it's a good deal to invest in now 10B\"\n    )\n)\n\n```\n\n------\n\n## `AgentRearrange`\n\nThe `AgentRearrange` orchestration technique, inspired by Einops and einsum, allows you to define and map out the relationships between various agents. It provides a powerful tool for orchestrating complex workflows, enabling you to specify linear and sequential relationships such as `a -> a1 -> a2 -> a3`, or concurrent relationships where the first agent sends a message to 3 agents simultaneously: `a -> a1, a2, a3`. This level of customization allows for the creation of highly efficient and dynamic workflows, where agents can work in parallel or in sequence as needed. The `AgentRearrange` technique is a valuable addition to the swarms library, providing a new level of flexibility and control over the orchestration of agents. For more detailed information and examples, please refer to the [official documentation](https://docs.swarms.world/en/latest/swarms/structs/agent_rearrange/).\n\n[Check out my video on agent rearrange!](https://youtu.be/Rq8wWQ073mg)\n\n\n\n### Methods\n\n| Method | Description | Parameters | Return Value |\n|--------|-------------|------------|--------------|\n| `__init__` | Initialize the AgentRearrange | `agents`: List of Agent objects<br>`flow`: String describing the agent flow | None |\n| `run` | Execute the workflow | `input_data`: Initial input for the first agent | Final output after all agents have processed |\n\n### Inputs\n\n| Input | Type | Description |\n|-------|------|-------------|\n| `agents` | List[Agent] | List of Agent objects to be orchestrated |\n| `flow` | str | String describing the flow of agents (e.g., \"A -> B, C\") |\n\n### Output\n\nThe `run` method returns the final output after all agents have processed the input according to the specified flow.\n\n\n\n\n```python\n\nfrom datetime import datetime\n\nfrom swarms import Agent, AgentRearrange, create_file_in_folder\n\nchief_medical_officer = Agent(\n    agent_name=\"Chief Medical Officer\",\n    system_prompt=\"\"\"You are the Chief Medical Officer coordinating a team of medical specialists for viral disease diagnosis.\n    Your responsibilities include:\n    - Gathering initial patient symptoms and medical history\n    - Coordinating with specialists to form differential diagnoses\n    - Synthesizing different specialist opinions into a cohesive diagnosis\n    - Ensuring all relevant symptoms and test results are considered\n    - Making final diagnostic recommendations\n    - Suggesting treatment plans based on team input\n    - Identifying when additional specialists need to be consulted\n    \n    Guidelines:\n    1. Always start with a comprehensive patient history\n    2. Consider both common and rare viral conditions\n    3. Factor in patient demographics and risk factors\n    4. Document your reasoning process clearly\n    5. Highlight any critical or emergency symptoms\n    6. Note any limitations or uncertainties in the diagnosis\n    \n    Format all responses with clear sections for:\n    - Initial Assessment\n    - Differential Diagnoses\n    - Specialist Consultations Needed\n    - Recommended Next Steps\"\"\",\n    model_name=\"gpt-4o\",  # Models from litellm -> claude-2\n    max_loops=1,\n)\n\n# Viral Disease Specialist\nvirologist = Agent(\n    agent_name=\"Virologist\",\n    system_prompt=\"\"\"You are a specialist in viral diseases with expertise in:\n    - Respiratory viruses (Influenza, Coronavirus, RSV)\n    - Systemic viral infections (EBV, CMV, HIV)\n    - Childhood viral diseases (Measles, Mumps, Rubella)\n    - Emerging viral threats\n    \n    Your role involves:\n    1. Analyzing symptoms specific to viral infections\n    2. Distinguishing between different viral pathogens\n    3. Assessing viral infection patterns and progression\n    4. Recommending specific viral tests\n    5. Evaluating epidemiological factors\n    \n    For each case, consider:\n    - Incubation periods\n    - Transmission patterns\n    - Seasonal factors\n    - Geographic prevalence\n    - Patient immune status\n    - Current viral outbreaks\n    \n    Provide detailed analysis of:\n    - Characteristic viral symptoms\n    - Disease progression timeline\n    - Risk factors for severe disease\n    - Potential complications\"\"\",\n    model_name=\"gpt-4o\",\n    max_loops=1,\n)\n\n# Internal Medicine Specialist\ninternist = Agent(\n    agent_name=\"Internist\",\n    system_prompt=\"\"\"You are an Internal Medicine specialist responsible for:\n    - Comprehensive system-based evaluation\n    - Integration of symptoms across organ systems\n    - Identification of systemic manifestations\n    - Assessment of comorbidities\n    \n    For each case, analyze:\n    1. Vital signs and their implications\n    2. System-by-system review (cardiovascular, respiratory, etc.)\n    3. Impact of existing medical conditions\n    4. Medication interactions and contraindications\n    5. Risk stratification\n    \n    Consider these aspects:\n    - Age-related factors\n    - Chronic disease impact\n    - Medication history\n    - Social and environmental factors\n    \n    Document:\n    - Physical examination findings\n    - System-specific symptoms\n    - Relevant lab abnormalities\n    - Risk factors for complications\"\"\",\n    model_name=\"gpt-4o\",\n    max_loops=1,\n)\n\n# Diagnostic Synthesizer\nsynthesizer = Agent(\n    agent_name=\"Diagnostic Synthesizer\",\n    system_prompt=\"\"\"You are responsible for synthesizing all specialist inputs to create a final diagnostic assessment:\n    \n    Core responsibilities:\n    1. Integrate findings from all specialists\n    2. Identify patterns and correlations\n    3. Resolve conflicting opinions\n    4. Generate probability-ranked differential diagnoses\n    5. Recommend additional testing if needed\n    \n    Analysis framework:\n    - Weight evidence based on reliability and specificity\n    - Consider epidemiological factors\n    - Evaluate diagnostic certainty\n    - Account for test limitations\n    \n    Provide structured output including:\n    1. Primary diagnosis with confidence level\n    2. Supporting evidence summary\n    3. Alternative diagnoses to consider\n    4. Recommended confirmatory tests\n    5. Red flags or warning signs\n    6. Follow-up recommendations\n    \n    Documentation requirements:\n    - Clear reasoning chain\n    - Evidence quality assessment\n    - Confidence levels for each diagnosis\n    - Knowledge gaps identified\n    - Risk assessment\"\"\",\n    model_name=\"gpt-4o\",\n    max_loops=1,\n)\n\n# Create agent list\nagents = [chief_medical_officer, virologist, internist, synthesizer]\n\n# Define diagnostic flow\nflow = f\"\"\"{chief_medical_officer.agent_name} -> {virologist.agent_name} -> {internist.agent_name} -> {synthesizer.agent_name}\"\"\"\n\n# Create the swarm system\ndiagnosis_system = AgentRearrange(\n    name=\"Medical-nlp-diagnosis-swarm\",\n    description=\"natural language symptions to diagnosis report\",\n    agents=agents,\n    flow=flow,\n    max_loops=1,\n    output_type=\"all\",\n)\n\n\n# Example usage\nif __name__ == \"__main__\":\n    # Example patient case\n    patient_case = \"\"\"\n    Patient: 45-year-old female\n    Presenting symptoms: \n    - Fever (101.5°F) for 3 days\n    - Dry cough\n    - Fatigue\n    - Mild shortness of breath\n    Medical history:\n    - Controlled hypertension\n    - No recent travel\n    - Fully vaccinated for COVID-19\n    - No known sick contacts\n    \"\"\"\n\n    # Add timestamp to the patient case\n    case_info = f\"Timestamp: {datetime.now()}\\nPatient Information: {patient_case}\"\n\n    # Run the diagnostic process\n    diagnosis = diagnosis_system.run(case_info)\n\n    # Create a folder and file called reports\n    create_file_in_folder(\n        \"reports\", \"medical_analysis_agent_rearrange.md\", diagnosis\n    )\n\n\n```\n\n## `HierarhicalSwarm`\nComing soon...\n\n\n## `GraphSwarm`\n\n\nThe `GraphSwarm` is a workflow management system designed to orchestrate complex tasks by leveraging the power of graph theory. It enables the creation of a directed acyclic graph (DAG) to model dependencies between tasks and agents. This allows for efficient task assignment, execution, and monitoring.\n\nHere's a breakdown of how the `GraphSwarm` works:\n\n1. **Node Creation**: The `GraphSwarm` workflow is composed of nodes, which can be either agents or tasks. Agents are responsible for executing tasks, and tasks represent specific operations that need to be performed. In the example, two agents (`agent1` and `agent2`) and one task (`task1`) are created.\n2. **Edge Definition**: Edges are used to define the relationships between nodes. In this case, edges are created to connect `agent1` and `agent2` to `task1`, indicating that both agents are capable of executing `task1`.\n3. **Entry and End Points**: The `GraphSwarm` workflow requires the definition of entry points (where the workflow starts) and end points (where the workflow concludes). In this example, `agent1` and `agent2` are set as entry points, and `task1` is set as the end point.\n4. **Visualization**: The `GraphSwarm` provides a visualization feature to graphically represent the workflow. This allows for easy understanding and debugging of the workflow structure.\n5. **Execution**: The `GraphSwarm` workflow is executed by traversing the graph from the entry points to the end points. In this case, both `agent1` and `agent2` execute `task1` concurrently, and the results are collected.\n6. **Results**: The final results of the workflow execution are aggregated and returned. In this example, the result of executing `task1` is \"Task completed\".\n\nThe `GraphSwarm` offers several benefits, including:\n\n* **Concurrency**: Enables the execution of tasks concurrently, improving overall workflow efficiency.\n* **Flexibility**: Allows for dynamic task assignment based on agent availability and task requirements.\n* **Scalability**: Supports the addition of new agents and tasks as needed, making it suitable for large-scale workflows.\n* **Visualization**: Provides a graphical representation of the workflow, facilitating understanding and debugging.\n\nBy leveraging the `GraphSwarm`, complex workflows can be efficiently managed, and tasks can be executed in a coordinated and scalable manner.\n\n\n\n### Methods\n\n| Method | Description | Parameters | Return Value |\n|--------|-------------|------------|--------------|\n| `add_node` | Add a node to the graph | `node`: Node object | None |\n| `add_edge` | Add an edge to the graph | `edge`: Edge object | None |\n| `set_entry_points` | Set the entry points of the graph | `entry_points`: List of node IDs | None |\n| `set_end_points` | Set the end points of the graph | `end_points`: List of node IDs | None |\n| `visualize` | Generate a visual representation of the graph | None | String representation of the graph |\n| `run` | Execute the workflow | None | Dictionary of execution results |\n\n### Inputs\n\n| Input | Type | Description |\n|-------|------|-------------|\n| `Node` | Object | Represents a node in the graph (agent or task) |\n| `Edge` | Object | Represents an edge connecting two nodes |\n| `entry_points` | List[str] | List of node IDs where the workflow starts |\n| `end_points` | List[str] | List of node IDs where the workflow ends |\n\n### Output\n\nThe `run` method returns a dictionary containing the execution results of all nodes in the graph.\n\n\n\n```python\nimport os\n\nfrom dotenv import load_dotenv\n\n\nfrom swarms import Agent, Edge, GraphWorkflow, Node, NodeType\n\nfrom swarm_models import OpenAIChat\n\nload_dotenv()\n\napi_key = os.environ.get(\"OPENAI_API_KEY\")\n\nllm = OpenAIChat(\n    temperature=0.5, openai_api_key=api_key, max_tokens=4000\n)\nagent1 = Agent(llm=llm, max_loops=1, autosave=True, dashboard=True)\nagent2 = Agent(llm=llm, max_loops=1, autosave=True, dashboard=True)\n\ndef sample_task():\n    print(\"Running sample task\")\n    return \"Task completed\"\n\nwf_graph = GraphWorkflow()\nwf_graph.add_node(Node(id=\"agent1\", type=NodeType.AGENT, agent=agent1))\nwf_graph.add_node(Node(id=\"agent2\", type=NodeType.AGENT, agent=agent2))\nwf_graph.add_node(\n    Node(id=\"task1\", type=NodeType.TASK, callable=sample_task)\n)\nwf_graph.add_edge(Edge(source=\"agent1\", target=\"task1\"))\nwf_graph.add_edge(Edge(source=\"agent2\", target=\"task1\"))\n\nwf_graph.set_entry_points([\"agent1\", \"agent2\"])\nwf_graph.set_end_points([\"task1\"])\n\nprint(wf_graph.visualize())\n\n# Run the workflow\nresults = wf_graph.run()\nprint(\"Execution results:\", results)\n\n```\n\n## `MixtureOfAgents`\nThis is an implementation based on the paper: \"Mixture-of-Agents Enhances Large Language Model Capabilities\" by together.ai, available at [https://arxiv.org/abs/2406.04692](https://arxiv.org/abs/2406.04692). It achieves state-of-the-art (SOTA) results on AlpacaEval 2.0, MT-Bench, and FLASK, surpassing GPT-4 Omni. This architecture is particularly suitable for tasks that require parallelization followed by sequential processing in another loop.\n\n\n\n### Methods\n\n| Method | Description | Parameters | Return Value |\n|--------|-------------|------------|--------------|\n| `__init__` | Initialize the MixtureOfAgents | `name`: Name of the swarm<br>`agents`: List of Agent objects<br>`layers`: Number of processing layers<br>`final_agent`: Agent for final processing | None |\n| `run` | Execute the swarm | `task`: Input task for the swarm | Final output after all agents have processed |\n\n### Inputs\n\n| Input | Type | Description |\n|-------|------|-------------|\n| `name` | str | Name of the swarm |\n| `agents` | List[Agent] | List of Agent objects to be used in the swarm |\n| `layers` | int | Number of processing layers in the swarm |\n| `final_agent` | Agent | Agent responsible for final processing |\n\n### Output\n\nThe `run` method returns the final output after all agents have processed the input according to the specified layers and final agent.\n\n\n```python\n\nimport os\nfrom swarms import Agent, MixtureOfAgents\n\n# Agent 1: Financial Statement Analyzer\nagent1 = Agent(\n    agent_name=\"FinancialStatementAnalyzer\",\n    model_name=\"gpt-4o\",\n    system_prompt=\"\"\"You are a Financial Statement Analyzer specializing in 10-K SEC reports. Your primary focus is on analyzing the financial statements, including the balance sheet, income statement, and cash flow statement. \n\nKey responsibilities:\n1. Identify and explain significant changes in financial metrics year-over-year.\n2. Calculate and interpret key financial ratios (e.g., liquidity ratios, profitability ratios, leverage ratios).\n3. Analyze trends in revenue, expenses, and profitability.\n4. Highlight any red flags or areas of concern in the financial statements.\n5. Provide insights on the company's financial health and performance based on the data.\n\nWhen analyzing, consider industry standards and compare the company's performance to its peers when possible. Your analysis should be thorough, data-driven, and provide actionable insights for investors and stakeholders.\"\"\",\n    max_loops=1,\n    autosave=True,\n    dashboard=False,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"financial_statement_analyzer_state.json\",\n    user_name=\"swarms_corp\",\n    retry_attempts=1,\n    context_length=200000,\n    return_step_meta=False,\n)\n\n# Agent 2: Risk Assessment Specialist\nagent2 = Agent(\n    agent_name=\"RiskAssessmentSpecialist\",\n    model_name=\"gpt-4o\",\n    system_prompt=\"\"\"You are a Risk Assessment Specialist focusing on 10-K SEC reports. Your primary role is to identify, analyze, and evaluate potential risks disclosed in the report.\n\nKey responsibilities:\n1. Thoroughly review the \"Risk Factors\" section of the 10-K report.\n2. Identify and categorize different types of risks (e.g., operational, financial, legal, market, technological).\n3. Assess the potential impact and likelihood of each identified risk.\n4. Analyze the company's risk mitigation strategies and their effectiveness.\n5. Identify any emerging risks not explicitly mentioned but implied by the company's operations or market conditions.\n6. Compare the company's risk profile with industry peers when possible.\n\nYour analysis should provide a comprehensive overview of the company's risk landscape, helping stakeholders understand the potential challenges and uncertainties facing the business. Be sure to highlight any critical risks that could significantly impact the company's future performance or viability.\"\"\",\n    max_loops=1,\n    autosave=True,\n    dashboard=False,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"risk_assessment_specialist_state.json\",\n    user_name=\"swarms_corp\",\n    retry_attempts=1,\n    context_length=200000,\n    return_step_meta=False,\n)\n\n# Agent 3: Business Strategy Evaluator\nagent3 = Agent(\n    agent_name=\"BusinessStrategyEvaluator\",\n    model_name=\"gpt-4o\",\n    system_prompt=\"\"\"You are a Business Strategy Evaluator specializing in analyzing 10-K SEC reports. Your focus is on assessing the company's overall strategy, market position, and future outlook.\n\nKey responsibilities:\n1. Analyze the company's business description, market opportunities, and competitive landscape.\n2. Evaluate the company's products or services, including their market share and growth potential.\n3. Assess the effectiveness of the company's current business strategy and its alignment with market trends.\n4. Identify key performance indicators (KPIs) and evaluate the company's performance against these metrics.\n5. Analyze management's discussion and analysis (MD&A) section to understand their perspective on the business.\n6. Identify potential growth opportunities or areas for improvement in the company's strategy.\n7. Compare the company's strategic position with key competitors in the industry.\n\nYour analysis should provide insights into the company's strategic direction, its ability to create value, and its potential for future growth. Consider both short-term and long-term perspectives in your evaluation.\"\"\",\n    max_loops=1,\n    autosave=True,\n    dashboard=False,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"business_strategy_evaluator_state.json\",\n    user_name=\"swarms_corp\",\n    retry_attempts=1,\n    context_length=200000,\n    return_step_meta=False,\n)\n\n# Aggregator Agent\naggregator_agent = Agent(\n    agent_name=\"10KReportAggregator\",\n    model_name=\"gpt-4o\",\n    system_prompt=\"\"\"You are the 10-K Report Aggregator, responsible for synthesizing and summarizing the analyses provided by the Financial Statement Analyzer, Risk Assessment Specialist, and Business Strategy Evaluator. Your goal is to create a comprehensive, coherent, and insightful summary of the 10-K SEC report.\n\nKey responsibilities:\n1. Integrate the financial analysis, risk assessment, and business strategy evaluation into a unified report.\n2. Identify and highlight the most critical information and insights from each specialist's analysis.\n3. Reconcile any conflicting information or interpretations among the specialists' reports.\n4. Provide a balanced view of the company's overall performance, risks, and strategic position.\n5. Summarize key findings and their potential implications for investors and stakeholders.\n6. Identify any areas where further investigation or clarification may be needed.\n\nYour final report should be well-structured, easy to understand, and provide a holistic view of the company based on the 10-K SEC report. It should offer valuable insights for decision-making while acknowledging any limitations or uncertainties in the analysis.\"\"\",\n    max_loops=1,\n    autosave=True,\n    dashboard=False,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"10k_report_aggregator_state.json\",\n    user_name=\"swarms_corp\",\n    retry_attempts=1,\n    context_length=200000,\n    return_step_meta=False,\n)\n\n# Create the Mixture of Agents class\nmoa = MixtureOfAgents(\n    agents=[agent1, agent2, agent3],\n    aggregator_agent=aggregator_agent,\n    aggregator_system_prompt=\"\"\"As the 10-K Report Aggregator, your task is to synthesize the analyses provided by the Financial Statement Analyzer, Risk Assessment Specialist, and Business Strategy Evaluator into a comprehensive and coherent report. \n\nFollow these steps:\n1. Review and summarize the key points from each specialist's analysis.\n2. Identify common themes and insights across the analyses.\n3. Highlight any discrepancies or conflicting interpretations, if present.\n4. Provide a balanced and integrated view of the company's financial health, risks, and strategic position.\n5. Summarize the most critical findings and their potential impact on investors and stakeholders.\n6. Suggest areas for further investigation or monitoring, if applicable.\n\nYour final output should be a well-structured, insightful report that offers a holistic view of the company based on the 10-K SEC report analysis.\"\"\",\n    layers=3,\n)\n\n# Example usage\ncompany_name = \"NVIDIA\"\nout = moa.run(\n    f\"Analyze the latest 10-K SEC report for {company_name}. Provide a comprehensive summary of the company's financial performance, risk profile, and business strategy.\"\n)\nprint(out)\n\n```\n\n\n## SpreadSheetSwarm\nThe `SpreadSheetSwarm` is designed for concurrent management and oversight of thousands of agents, facilitating a one-to-many approach for efficient task processing and output analysis.\n\n### Key Features\n\n* **Concurrency**: Enables the simultaneous execution of multiple agents, significantly reducing processing time and increasing overall system efficiency.\n* **One-to-Many**: Allows a single task to be dynamically distributed among multiple agents, ensuring that each agent is utilized to its full potential.\n* **Scalability**: Supports the integration of thousands of agents, making it an ideal solution for large-scale task processing and data analysis.\n\n\n### Methods\n\n| Method | Description | Parameters | Return Value |\n|--------|-------------|------------|--------------|\n| `__init__` | Initialize the SpreadSheetSwarm | `name`: Name of the swarm<br>`description`: Description of the swarm<br>`agents`: List of Agent objects<br>`autosave_on`: Boolean to enable autosave<br>`save_file_path`: Path to save the spreadsheet<br>`run_all_agents`: Boolean to run all agents or not<br>`max_loops`: Maximum number of loops | None |\n| `run` | Execute the swarm | `task`: Input task for the swarm | Dictionary of agent outputs |\n\n### Inputs\n\n| Input | Type | Description |\n|-------|------|-------------|\n| `name` | str | Name of the swarm |\n| `description` | str | Description of the swarm's purpose |\n| `agents` | List[Agent] | List of Agent objects to be used in the swarm |\n| `autosave_on` | bool | Enable autosaving of results |\n| `save_file_path` | str | Path to save the spreadsheet results |\n| `run_all_agents` | bool | Whether to run all agents or select based on relevance |\n| `max_loops` | int | Maximum number of processing loops |\n\n### Output\n\nThe `run` method returns a dictionary containing the outputs of each agent that processed the task.\n\n\n[Learn more at the docs here:](https://docs.swarms.world/en/latest/swarms/structs/spreadsheet_swarm/)\n\n```python\nimport os\nfrom swarms import Agent, SpreadSheetSwarm\nfrom swarm_models import OpenAIChat\n\n# Define custom system prompts for each social media platform\nTWITTER_AGENT_SYS_PROMPT = \"\"\"\nYou are a Twitter marketing expert specializing in real estate. Your task is to create engaging, concise tweets to promote properties, analyze trends to maximize engagement, and use appropriate hashtags and timing to reach potential buyers.\n\"\"\"\n\nINSTAGRAM_AGENT_SYS_PROMPT = \"\"\"\nYou are an Instagram marketing expert focusing on real estate. Your task is to create visually appealing posts with engaging captions and hashtags to showcase properties, targeting specific demographics interested in real estate.\n\"\"\"\n\nFACEBOOK_AGENT_SYS_PROMPT = \"\"\"\nYou are a Facebook marketing expert for real estate. Your task is to craft posts optimized for engagement and reach on Facebook, including using images, links, and targeted messaging to attract potential property buyers.\n\"\"\"\n\nLINKEDIN_AGENT_SYS_PROMPT = \"\"\"\nYou are a LinkedIn marketing expert for the real estate industry. Your task is to create professional and informative posts, highlighting property features, market trends, and investment opportunities, tailored to professionals and investors.\n\"\"\"\n\nEMAIL_AGENT_SYS_PROMPT = \"\"\"\nYou are an Email marketing expert specializing in real estate. Your task is to write compelling email campaigns to promote properties, focusing on personalization, subject lines, and effective call-to-action strategies to drive conversions.\n\"\"\"\n\n# Initialize your agents for different social media platforms\nagents = [\n    Agent(\n        agent_name=\"Twitter-RealEstate-Agent\",\n        system_prompt=TWITTER_AGENT_SYS_PROMPT,\n        model_name=\"gpt-4o\",\n        max_loops=1,\n        dynamic_temperature_enabled=True,\n        saved_state_path=\"twitter_realestate_agent.json\",\n        user_name=\"realestate_swarms\",\n        retry_attempts=1,\n    ),\n    Agent(\n        agent_name=\"Instagram-RealEstate-Agent\",\n        system_prompt=INSTAGRAM_AGENT_SYS_PROMPT,\n        model_name=\"gpt-4o\",\n        max_loops=1,\n        dynamic_temperature_enabled=True,\n        saved_state_path=\"instagram_realestate_agent.json\",\n        user_name=\"realestate_swarms\",\n        retry_attempts=1,\n    ),\n    Agent(\n        agent_name=\"Facebook-RealEstate-Agent\",\n        system_prompt=FACEBOOK_AGENT_SYS_PROMPT,\n        model_name=\"gpt-4o\",\n        max_loops=1,\n        dynamic_temperature_enabled=True,\n        saved_state_path=\"facebook_realestate_agent.json\",\n        user_name=\"realestate_swarms\",\n        retry_attempts=1,\n    ),\n    Agent(\n        agent_name=\"LinkedIn-RealEstate-Agent\",\n        system_prompt=LINKEDIN_AGENT_SYS_PROMPT,\n        model_name=\"gpt-4o\",\n        max_loops=1,\n        dynamic_temperature_enabled=True,\n        saved_state_path=\"linkedin_realestate_agent.json\",\n        user_name=\"realestate_swarms\",\n        retry_attempts=1,\n    ),\n    Agent(\n        agent_name=\"Email-RealEstate-Agent\",\n        system_prompt=EMAIL_AGENT_SYS_PROMPT,\n        model_name=\"gpt-4o\",\n        max_loops=1,\n        dynamic_temperature_enabled=True,\n        saved_state_path=\"email_realestate_agent.json\",\n        user_name=\"realestate_swarms\",\n        retry_attempts=1,\n    ),\n]\n\n# Create a Swarm with the list of agents\nswarm = SpreadSheetSwarm(\n    name=\"Real-Estate-Marketing-Swarm\",\n    description=\"A swarm that processes real estate marketing tasks using multiple agents on different threads.\",\n    agents=agents,\n    autosave_on=True,\n    save_file_path=\"real_estate_marketing_spreadsheet.csv\",\n    run_all_agents=False,\n    max_loops=2,\n)\n\n# Run the swarm\nswarm.run(\n    task=\"\"\"\n    Create posts to promote luxury properties in North Texas, highlighting their features, location, and investment potential. Include relevant hashtags, images, and engaging captions.\n\n    \n    Property:\n    $10,399,000\n    1609 Meandering Way Dr, Roanoke, TX 76262\n    Link to the property: https://www.zillow.com/homedetails/1609-Meandering-Way-Dr-Roanoke-TX-76262/308879785_zpid/\n    \n    What's special\n    Unveiling a new custom estate in the prestigious gated Quail Hollow Estates! This impeccable residence, set on a sprawling acre surrounded by majestic trees, features a gourmet kitchen equipped with top-tier Subzero and Wolf appliances. European soft-close cabinets and drawers, paired with a double Cambria Quartzite island, perfect for family gatherings. The first-floor game room&media room add extra layers of entertainment. Step into the outdoor sanctuary, where a sparkling pool and spa, and sunken fire pit, beckon leisure. The lavish master suite features stunning marble accents, custom his&her closets, and a secure storm shelter.Throughout the home,indulge in the visual charm of designer lighting and wallpaper, elevating every space. The property is complete with a 6-car garage and a sports court, catering to the preferences of basketball or pickleball enthusiasts. This residence seamlessly combines luxury&recreational amenities, making it a must-see for the discerning buyer.\n    \n    Facts & features\n    Interior\n    Bedrooms & bathrooms\n    Bedrooms: 6\n    Bathrooms: 8\n    Full bathrooms: 7\n    1/2 bathrooms: 1\n    Primary bedroom\n    Bedroom\n    Features: Built-in Features, En Suite Bathroom, Walk-In Closet(s)\n    Cooling\n    Central Air, Ceiling Fan(s), Electric\n    Appliances\n    Included: Built-In Gas Range, Built-In Refrigerator, Double Oven, Dishwasher, Gas Cooktop, Disposal, Ice Maker, Microwave, Range, Refrigerator, Some Commercial Grade, Vented Exhaust Fan, Warming Drawer, Wine Cooler\n    Features\n    Wet Bar, Built-in Features, Dry Bar, Decorative/Designer Lighting Fixtures, Eat-in Kitchen, Elevator, High Speed Internet, Kitchen Island, Pantry, Smart Home, Cable TV, Walk-In Closet(s), Wired for Sound\n    Flooring: Hardwood\n    Has basement: No\n    Number of fireplaces: 3\n    Fireplace features: Living Room, Primary Bedroom\n    Interior area\n    Total interior livable area: 10,466 sqft\n    Total spaces: 12\n    Parking features: Additional Parking\n    Attached garage spaces: 6\n    Carport spaces: 6\n    Features\n    Levels: Two\n    Stories: 2\n    Patio & porch: Covered\n    Exterior features: Built-in Barbecue, Barbecue, Gas Grill, Lighting, Outdoor Grill, Outdoor Living Area, Private Yard, Sport Court, Fire Pit\n    Pool features: Heated, In Ground, Pool, Pool/Spa Combo\n    Fencing: Wrought Iron\n    Lot\n    Size: 1.05 Acres\n    Details\n    Additional structures: Outdoor Kitchen\n    Parcel number: 42232692\n    Special conditions: Standard\n    Construction\n    Type & style\n    Home type: SingleFamily\n    Architectural style: Contemporary/Modern,Detached\n    Property subtype: Single Family Residence\n    \"\"\"\n)\n\n```\n\n\n## `ForestSwarm`\nThe `ForestSwarm` architecture is designed for efficient task assignment by dynamically selecting the most suitable agent from a collection of trees. This is achieved through asynchronous task processing, where agents are chosen based on their relevance to the task at hand. The relevance is determined by calculating the similarity between the system prompts associated with each agent and the keywords present in the task itself. For a more in-depth understanding of how `ForestSwarm` works, please refer to the [official documentation](https://docs.swarms.world/en/latest/swarms/structs/forest_swarm/).\n\n\n\n### Methods\n\n| Method | Description | Parameters | Return Value |\n|--------|-------------|------------|--------------|\n| `__init__` | Initialize the ForestSwarm | `trees`: List of Tree objects | None |\n| `run` | Execute the ForestSwarm | `task`: Input task for the swarm | Output from the most relevant agent |\n\n### Inputs\n\n| Input | Type | Description |\n|-------|------|-------------|\n| `trees` | List[Tree] | List of Tree objects, each containing TreeAgent objects |\n| `task` | str | The task to be processed by the ForestSwarm |\n\n### Output\n\nThe `run` method returns the output from the most relevant agent selected based on the input task.\n\n\n```python\nfrom swarms import TreeAgent, Tree, ForestSwarm\n\n# Create agents with varying system prompts and dynamically generated distances/keywords\nagents_tree1 = [\n    TreeAgent(\n        system_prompt=\"\"\"You are an expert Stock Analysis Agent with deep knowledge of financial markets, technical analysis, and fundamental analysis. Your primary function is to analyze stock performance, market trends, and provide actionable insights. When analyzing stocks:\n\n1. Always start with a brief overview of the current market conditions.\n2. Use a combination of technical indicators (e.g., moving averages, RSI, MACD) and fundamental metrics (e.g., P/E ratio, EPS growth, debt-to-equity).\n3. Consider both short-term and long-term perspectives in your analysis.\n4. Provide clear buy, hold, or sell recommendations with supporting rationale.\n5. Highlight potential risks and opportunities specific to each stock or sector.\n6. Use bullet points for clarity when listing key points or metrics.\n7. If relevant, compare the stock to its peers or sector benchmarks.\n\nRemember to maintain objectivity and base your analysis on factual data. If asked about future performance, always include a disclaimer about market unpredictability. Your goal is to provide comprehensive, accurate, and actionable stock analysis to inform investment decisions.\"\"\",\n        agent_name=\"Stock Analysis Agent\",\n    ),\n    TreeAgent(\n        system_prompt=\"\"\"You are a highly skilled Financial Planning Agent, specializing in personal and corporate financial strategies. Your role is to provide comprehensive financial advice tailored to each client's unique situation. When creating financial plans:\n\n1. Begin by asking key questions about the client's financial goals, current situation, and risk tolerance.\n2. Develop a holistic view of the client's finances, including income, expenses, assets, and liabilities.\n3. Create detailed, step-by-step action plans to achieve financial goals.\n4. Provide specific recommendations for budgeting, saving, and investing.\n5. Consider tax implications and suggest tax-efficient strategies.\n6. Incorporate risk management and insurance planning into your recommendations.\n7. Use charts or tables to illustrate financial projections and scenarios.\n8. Regularly suggest reviewing and adjusting the plan as circumstances change.\n\nAlways prioritize the client's best interests and adhere to fiduciary standards. Explain complex financial concepts in simple terms, and be prepared to justify your recommendations with data and reasoning.\"\"\",\n        agent_name=\"Financial Planning Agent\",\n    ),\n    TreeAgent(\n        agent_name=\"Retirement Strategy Agent\",\n        system_prompt=\"\"\"You are a specialized Retirement Strategy Agent, focused on helping individuals and couples plan for a secure and comfortable retirement. Your expertise covers various aspects of retirement planning, including savings strategies, investment allocation, and income generation during retirement. When developing retirement strategies:\n\n1. Start by assessing the client's current age, desired retirement age, and expected lifespan.\n2. Calculate retirement savings goals based on desired lifestyle and projected expenses.\n3. Analyze current retirement accounts (e.g., 401(k), IRA) and suggest optimization strategies.\n4. Provide guidance on asset allocation and rebalancing as retirement approaches.\n5. Explain various retirement income sources (e.g., Social Security, pensions, annuities).\n6. Discuss healthcare costs and long-term care planning.\n7. Offer strategies for tax-efficient withdrawals during retirement.\n8. Consider estate planning and legacy goals in your recommendations.\n\nUse Monte Carlo simulations or other statistical tools to illustrate the probability of retirement success. Always emphasize the importance of starting early and the power of compound interest. Be prepared to adjust strategies based on changing market conditions or personal circumstances.\"\"\",\n    ),\n]\n\nagents_tree2 = [\n    TreeAgent(\n        system_prompt=\"\"\"You are a knowledgeable Tax Filing Agent, specializing in personal and business tax preparation and strategy. Your role is to ensure accurate tax filings while maximizing legitimate deductions and credits. When assisting with tax matters:\n\n1. Start by gathering all necessary financial information and documents.\n2. Stay up-to-date with the latest tax laws and regulations, including state-specific rules.\n3. Identify all applicable deductions and credits based on the client's situation.\n4. Provide step-by-step guidance for completing tax forms accurately.\n5. Explain tax implications of various financial decisions.\n6. Offer strategies for tax-efficient investing and income management.\n7. Assist with estimated tax payments for self-employed individuals or businesses.\n8. Advise on record-keeping practices for tax purposes.\n\nAlways prioritize compliance with tax laws while ethically minimizing tax liability. Be prepared to explain complex tax concepts in simple terms and provide rationale for your recommendations. If a situation is beyond your expertise, advise consulting a certified tax professional or IRS resources.\"\"\",\n        agent_name=\"Tax Filing Agent\",\n    ),\n    TreeAgent(\n        system_prompt=\"\"\"You are a sophisticated Investment Strategy Agent, adept at creating and managing investment portfolios to meet diverse financial goals. Your expertise covers various asset classes, market analysis, and risk management techniques. When developing investment strategies:\n\n1. Begin by assessing the client's investment goals, time horizon, and risk tolerance.\n2. Provide a comprehensive overview of different asset classes and their risk-return profiles.\n3. Create diversified portfolio recommendations based on modern portfolio theory.\n4. Explain the benefits and risks of various investment vehicles (e.g., stocks, bonds, ETFs, mutual funds).\n5. Incorporate both passive and active investment strategies as appropriate.\n6. Discuss the importance of regular portfolio rebalancing and provide a rebalancing strategy.\n7. Consider tax implications of investment decisions and suggest tax-efficient strategies.\n8. Provide ongoing market analysis and suggest portfolio adjustments as needed.\n\nUse historical data and forward-looking projections to illustrate potential outcomes. Always emphasize the importance of long-term investing and the risks of market timing. Be prepared to explain complex investment concepts in clear, accessible language.\"\"\",\n        agent_name=\"Investment Strategy Agent\",\n    ),\n    TreeAgent(\n        system_prompt=\"\"\"You are a specialized ROTH IRA Agent, focusing on the intricacies of Roth Individual Retirement Accounts. Your role is to provide expert guidance on Roth IRA rules, benefits, and strategies to maximize their value for retirement planning. When advising on Roth IRAs:\n\n1. Explain the fundamental differences between traditional and Roth IRAs.\n2. Clarify Roth IRA contribution limits and income eligibility requirements.\n3. Discuss the tax advantages of Roth IRAs, including tax-free growth and withdrawals.\n4. Provide guidance on Roth IRA conversion strategies and their tax implications.\n5. Explain the five-year rule and how it affects Roth IRA withdrawals.\n6. Offer strategies for maximizing Roth IRA contributions, such as the backdoor Roth IRA method.\n7. Discuss how Roth IRAs fit into overall retirement and estate planning strategies.\n8. Provide insights on investment choices within a Roth IRA to maximize tax-free growth.\n\nAlways stay current with IRS regulations regarding Roth IRAs. Be prepared to provide numerical examples to illustrate the long-term benefits of Roth IRAs. Emphasize the importance of considering individual financial situations when making Roth IRA decisions.\"\"\",\n        agent_name=\"ROTH IRA Agent\",\n    ),\n]\n\n# Create trees\ntree1 = Tree(tree_name=\"Financial Tree\", agents=agents_tree1)\ntree2 = Tree(tree_name=\"Investment Tree\", agents=agents_tree2)\n\n# Create the ForestSwarm\nmulti_agent_structure = ForestSwarm(trees=[tree1, tree2])\n\n# Run a task\ntask = \"What are the best platforms to do our taxes on\"\noutput = multi_agent_structure.run(task)\nprint(output)\n\n```\n\n\n\n\n## `SwarmRouter`\nThe `SwarmRouter` class is a flexible routing system designed to manage different types of swarms for task execution. It provides a unified interface to interact with various swarm types, including `AgentRearrange`, `MixtureOfAgents`, `SpreadSheetSwarm`, `SequentialWorkflow`, and `ConcurrentWorkflow`. We will be continuously adding more and more swarm architectures here as we progress with new architectures.\n\n#### Attributes:\n- `name` (str): Name of the SwarmRouter instance.\n- `description` (str): Description of the SwarmRouter instance.\n- `max_loops` (int): Maximum number of loops to perform.\n- `agents` (List[Agent]): List of Agent objects to be used in the swarm.\n- `swarm_type` (SwarmType): Type of swarm to be used.\n- `swarm` (Union[AgentRearrange, MixtureOfAgents, SpreadSheetSwarm, SequentialWorkflow, ConcurrentWorkflow]): Instantiated swarm object.\n- `logs` (List[SwarmLog]): List of log entries captured during operations.\n\n#### Methods:\n- `__init__(self, name: str, description: str, max_loops: int, agents: List[Agent], swarm_type: SwarmType, *args, **kwargs)`: Initialize the SwarmRouter.\n- `_create_swarm(self, *args, **kwargs)`: Create and return the specified swarm type.\n- `_log(self, level: str, message: str, task: str, metadata: Dict[str, Any])`: Create a log entry and add it to the logs list.\n- `run(self, task: str, *args, **kwargs)`: Run the specified task on the selected swarm.\n- `get_logs(self)`: Retrieve all logged entries.\n\n\n```python\nimport os\nfrom dotenv import load_dotenv\nfrom swarms import Agent\nfrom swarm_models import OpenAIChat\nfrom swarms.structs.swarm_router import SwarmRouter, SwarmType\n\nload_dotenv()\n\n# Get the OpenAI API key from the environment variable\napi_key = os.getenv(\"GROQ_API_KEY\")\n\n# Model\nmodel = OpenAIChat(\n    openai_api_base=\"https://api.groq.com/openai/v1\",\n    openai_api_key=api_key,\n    model_name=\"llama-3.1-70b-versatile\",\n    temperature=0.1,\n)\n# Define specialized system prompts for each agent\nDATA_EXTRACTOR_PROMPT = \"\"\"You are a highly specialized private equity agent focused on data extraction from various documents. Your expertise includes:\n1. Extracting key financial metrics (revenue, EBITDA, growth rates, etc.) from financial statements and reports\n2. Identifying and extracting important contract terms from legal documents\n3. Pulling out relevant market data from industry reports and analyses\n4. Extracting operational KPIs from management presentations and internal reports\n5. Identifying and extracting key personnel information from organizational charts and bios\nProvide accurate, structured data extracted from various document types to support investment analysis.\"\"\"\n\nSUMMARIZER_PROMPT = \"\"\"You are an expert private equity agent specializing in summarizing complex documents. Your core competencies include:\n1. Distilling lengthy financial reports into concise executive summaries\n2. Summarizing legal documents, highlighting key terms and potential risks\n3. Condensing industry reports to capture essential market trends and competitive dynamics\n4. Summarizing management presentations to highlight key strategic initiatives and projections\n5. Creating brief overviews of technical documents, emphasizing critical points for non-technical stakeholders\nDeliver clear, concise summaries that capture the essence of various documents while highlighting information crucial for investment decisions.\"\"\"\n\nFINANCIAL_ANALYST_PROMPT = \"\"\"You are a specialized private equity agent focused on financial analysis. Your key responsibilities include:\n1. Analyzing historical financial statements to identify trends and potential issues\n2. Evaluating the quality of earnings and potential adjustments to EBITDA\n3. Assessing working capital requirements and cash flow dynamics\n4. Analyzing capital structure and debt capacity\n5. Evaluating financial projections and underlying assumptions\nProvide thorough, insightful financial analysis to inform investment decisions and valuation.\"\"\"\n\nMARKET_ANALYST_PROMPT = \"\"\"You are a highly skilled private equity agent specializing in market analysis. Your expertise covers:\n1. Analyzing industry trends, growth drivers, and potential disruptors\n2. Evaluating competitive landscape and market positioning\n3. Assessing market size, segmentation, and growth potential\n4. Analyzing customer dynamics, including concentration and loyalty\n5. Identifying potential regulatory or macroeconomic impacts on the market\nDeliver comprehensive market analysis to assess the attractiveness and risks of potential investments.\"\"\"\n\nOPERATIONAL_ANALYST_PROMPT = \"\"\"You are an expert private equity agent focused on operational analysis. Your core competencies include:\n1. Evaluating operational efficiency and identifying improvement opportunities\n2. Analyzing supply chain and procurement processes\n3. Assessing sales and marketing effectiveness\n4. Evaluating IT systems and digital capabilities\n5. Identifying potential synergies in merger or add-on acquisition scenarios\nProvide detailed operational analysis to uncover value creation opportunities and potential risks.\"\"\"\n\n# Initialize specialized agents\ndata_extractor_agent = Agent(\n    agent_name=\"Data-Extractor\",\n    system_prompt=DATA_EXTRACTOR_PROMPT,\n    llm=model,\n    max_loops=1,\n    autosave=True,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"data_extractor_agent.json\",\n    user_name=\"pe_firm\",\n    retry_attempts=1,\n    context_length=200000,\n    output_type=\"string\",\n)\n\nsummarizer_agent = Agent(\n    agent_name=\"Document-Summarizer\",\n    system_prompt=SUMMARIZER_PROMPT,\n    llm=model,\n    max_loops=1,\n    autosave=True,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"summarizer_agent.json\",\n    user_name=\"pe_firm\",\n    retry_attempts=1,\n    context_length=200000,\n    output_type=\"string\",\n)\n\nfinancial_analyst_agent = Agent(\n    agent_name=\"Financial-Analyst\",\n    system_prompt=FINANCIAL_ANALYST_PROMPT,\n    llm=model,\n    max_loops=1,\n    autosave=True,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"financial_analyst_agent.json\",\n    user_name=\"pe_firm\",\n    retry_attempts=1,\n    context_length=200000,\n    output_type=\"string\",\n)\n\nmarket_analyst_agent = Agent(\n    agent_name=\"Market-Analyst\",\n    system_prompt=MARKET_ANALYST_PROMPT,\n    llm=model,\n    max_loops=1,\n    autosave=True,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"market_analyst_agent.json\",\n    user_name=\"pe_firm\",\n    retry_attempts=1,\n    context_length=200000,\n    output_type=\"string\",\n)\n\noperational_analyst_agent = Agent(\n    agent_name=\"Operational-Analyst\",\n    system_prompt=OPERATIONAL_ANALYST_PROMPT,\n    llm=model,\n    max_loops=1,\n    autosave=True,\n    verbose=True,\n    dynamic_temperature_enabled=True,\n    saved_state_path=\"operational_analyst_agent.json\",\n    user_name=\"pe_firm\",\n    retry_attempts=1,\n    context_length=200000,\n    output_type=\"string\",\n)\n\n# Initialize the SwarmRouter\nrouter = SwarmRouter(\n    name=\"pe-document-analysis-swarm\",\n    description=\"Analyze documents for private equity due diligence and investment decision-making\",\n    max_loops=1,\n    agents=[\n        data_extractor_agent,\n        summarizer_agent,\n        financial_analyst_agent,\n        market_analyst_agent,\n        operational_analyst_agent,\n    ],\n    swarm_type=\"ConcurrentWorkflow\",  # or \"SequentialWorkflow\" or \"ConcurrentWorkflow\" or\n)\n\n# Example usage\nif __name__ == \"__main__\":\n    # Run a comprehensive private equity document analysis task\n    result = router.run(\n        \"Where is the best place to find template term sheets for series A startups. Provide links and references\"\n    )\n    print(result)\n\n    # Retrieve and print logs\n    for log in router.get_logs():\n        print(f\"{log.timestamp} - {log.level}: {log.message}\")\n\n```\n\n### Changing Swarm Types\n\nYou can create multiple SwarmRouter instances with different swarm types:\n\n```python\nsequential_router = SwarmRouter(\n    name=\"SequentialRouter\",\n    agents=[\n        data_extractor_agent,\n        summarizer_agent,\n        financial_analyst_agent,\n        market_analyst_agent,\n        operational_analyst_agent,\n    ],\n    swarm_type=SwarmType.SequentialWorkflow\n)\n\nconcurrent_router = SwarmRouter(\n    name=\"ConcurrentRouter\",\n    agents=[\n        data_extractor_agent,\n        summarizer_agent,\n        financial_analyst_agent,\n        market_analyst_agent,\n        operational_analyst_agent,\n    ],\n    swarm_type=SwarmType.ConcurrentWorkflow\n)\n```\n\n### AgentRearrange\n\nUse Case: Optimizing agent order for complex multi-step tasks.\n\n```python\nrearrange_router = SwarmRouter(\n    name=\"TaskOptimizer\",\n    description=\"Optimize agent order for multi-step tasks\",\n    max_loops=3,\n    agents=[\n        data_extractor_agent,\n        summarizer_agent,\n        financial_analyst_agent,\n        market_analyst_agent,\n        operational_analyst_agent,\n    ],\n    swarm_type=SwarmType.AgentRearrange,\n    flow = f\"{data_extractor.name} -> {analyzer.name} -> {summarizer.name}\"\n)\n\nresult = rearrange_router.run(\"Analyze and summarize the quarterly financial report\")\n```\n\n### MixtureOfAgents\n\nUse Case: Combining diverse expert agents for comprehensive analysis.\n\n```python\nmixture_router = SwarmRouter(\n    name=\"ExpertPanel\",\n    description=\"Combine insights from various expert agents\",\n    max_loops=1,\n    agents=[\n        data_extractor_agent,\n        summarizer_agent,\n        financial_analyst_agent,\n        market_analyst_agent,\n        operational_analyst_agent,\n    ],\n    swarm_type=SwarmType.MixtureOfAgents\n)\n\nresult = mixture_router.run(\"Evaluate the potential acquisition of TechStartup Inc.\")\n```\n\n\n-------\n\n## GroupChat\n\nA production-grade multi-agent system enabling sophisticated group conversations between AI agents with customizable speaking patterns, parallel processing capabilities, and comprehensive conversation tracking.\n\n\n```python\n\nimport os\nfrom dotenv import load_dotenv\nfrom swarm_models import OpenAIChat\nfrom swarms import Agent, GroupChat, expertise_based\n\n\nif __name__ == \"__main__\":\n\n    load_dotenv()\n\n    # Get the OpenAI API key from the environment variable\n    api_key = os.getenv(\"OPENAI_API_KEY\")\n\n    # Create an instance of the OpenAIChat class\n    model = OpenAIChat(\n        openai_api_key=api_key,\n        model_name=\"gpt-4o-mini\",\n        temperature=0.1,\n    )\n\n    # Example agents\n    agent1 = Agent(\n        agent_name=\"Financial-Analysis-Agent\",\n        system_prompt=\"You are a financial analyst specializing in investment strategies.\",\n        llm=model,\n        max_loops=1,\n        autosave=False,\n        dashboard=False,\n        verbose=True,\n        dynamic_temperature_enabled=True,\n        user_name=\"swarms_corp\",\n        retry_attempts=1,\n        context_length=200000,\n        output_type=\"string\",\n        streaming_on=False,\n    )\n\n    agent2 = Agent(\n        agent_name=\"Tax-Adviser-Agent\",\n        system_prompt=\"You are a tax adviser who provides clear and concise guidance on tax-related queries.\",\n        llm=model,\n        max_loops=1,\n        autosave=False,\n        dashboard=False,\n        verbose=True,\n        dynamic_temperature_enabled=True,\n        user_name=\"swarms_corp\",\n        retry_attempts=1,\n        context_length=200000,\n        output_type=\"string\",\n        streaming_on=False,\n    )\n\n    agents = [agent1, agent2]\n\n    chat = GroupChat(\n        name=\"Investment Advisory\",\n        description=\"Financial and tax analysis group\",\n        agents=agents,\n        speaker_fn=expertise_based,\n    )\n\n    history = chat.run(\n        \"How to optimize tax strategy for investments?\"\n    )\n    print(history.model_dump_json(indent=2))\n\n```\n\n---\n\n## MultiAgentRouter\n\nThe MultiAgentRouter is a swarm architecture designed to dynamically assign tasks to the most suitable agent. It achieves this through a director or boss entity that utilizes function calls to identify and allocate tasks to the agent best equipped to handle them. [Check out the documentation](https://docs.swarms.world/en/latest/swarms/structs/multi_agent_router/)\n\n```python\nfrom swarms import Agent\nfrom swarms.structs.multi_agent_orchestrator import MultiAgentRouter\n\n# Example usage:\nif __name__ == \"__main__\":\n    # Define some example agents\n    agents = [\n        Agent(\n            agent_name=\"ResearchAgent\",\n            description=\"Specializes in researching topics and providing detailed, factual information\",\n            system_prompt=\"You are a research specialist. Provide detailed, well-researched information about any topic, citing sources when possible.\",\n            model_name=\"openai/gpt-4o\",\n        ),\n        Agent(\n            agent_name=\"CodeExpertAgent\",\n            description=\"Expert in writing, reviewing, and explaining code across multiple programming languages\",\n            system_prompt=\"You are a coding expert. Write, review, and explain code with a focus on best practices and clean code principles.\",\n            model_name=\"openai/gpt-4o\",\n        ),\n        Agent(\n            agent_name=\"WritingAgent\",\n            description=\"Skilled in creative and technical writing, content creation, and editing\",\n            system_prompt=\"You are a writing specialist. Create, edit, and improve written content while maintaining appropriate tone and style.\",\n            model_name=\"openai/gpt-4o\",\n        ),\n    ]\n\n    # Initialize routers with different configurations\n    router_execute = MultiAgentRouter(agents=agents, execute_task=True)\n\n    # Example task\n    task = \"Write a Python function to calculate fibonacci numbers\"\n\n    try:\n        # Process the task with execution\n        print(\"\\nWith task execution:\")\n        result_execute = router_execute.route_task(task)\n        print(result_execute)\n\n    except Exception as e:\n        print(f\"Error occurred: {str(e)}\")\n```\n\n\n----------\n\n## Onboarding Session\nGet onboarded now with the creator and lead maintainer of Swarms, Kye Gomez, who will show you how to get started with the installation, usage examples, and starting to build your custom use case! [CLICK HERE](https://cal.com/swarms/swarms-onboarding-session)\n\n\n---\n\n## Documentation\nDocumentation is located here at: [docs.swarms.world](https://docs.swarms.world)\n\n-----\n\n## Folder Structure\nThe swarms package has been meticlously crafted for extreme use-ability and understanding, the swarms package is split up into various modules such as `swarms.agents` that holds pre-built agents, `swarms.structs` that holds a vast array of structures like `Agent` and multi agent structures. The 3 most important are `structs`, `models`, and `agents`.\n\n```sh\n├── __init__.py\n├── agents\n├── artifacts\n├── memory\n├── schemas\n├── models -> swarm_models\n├── prompts\n├── structs\n├── telemetry\n├── tools\n├── utils\n└── workers\n```\n\n----\n\n## 🫶 Contributions:\n\nThe easiest way to contribute is to pick any issue with the `good first issue` tag 💪. Read the Contributing guidelines [here](/CONTRIBUTING.md). Bug Report? [File here](https://github.com/swarms/gateway/issues) | Feature Request? [File here](https://github.com/swarms/gateway/issues)\n\nSwarms is an open-source project, and contributions are VERY welcome. If you want to contribute, you can create new features, fix bugs, or improve the infrastructure. Please refer to the [CONTRIBUTING.md](https://github.com/kyegomez/swarms/blob/master/CONTRIBUTING.md) and our [contributing board](https://github.com/users/kyegomez/projects/1) to participate in Roadmap discussions!\n\n----\n\n\n\n## Accelerate Backlog\nAccelerate Bugs, Features, and Demos to implement by supporting us here:\n\n<a href=\"https://polar.sh/kyegomez\"><img src=\"https://polar.sh/embed/fund-our-backlog.svg?org=kyegomez\" /></a>\n\n## Community\n\nJoin our growing community around the world, for real-time support, ideas, and discussions on Swarms 😊 \n\n- View our official [Blog](https://docs.swarms.world)\n- Chat live with us on [Discord](https://discord.gg/jM3Z6M9uMq)\n- Follow us on [Twitter](https://twitter.com/kyegomez)\n- Connect with us on [LinkedIn](https://www.linkedin.com/company/the-swarm-corporation)\n- Visit us on [YouTube](https://www.youtube.com/channel/UC9yXyitkbU_WSy7bd_41SqQ)\n- [Join the Swarms community on Discord!](https://discord.gg/AJazBmhKnr)\n- Join our Swarms Community Gathering every Thursday at 1pm NYC Time to unlock the potential of autonomous agents in automating your daily tasks [Sign up here](https://lu.ma/5p2jnc2v)\n\n# License\n\nGNU AFFERO GENERAL PUBLIC LICENSE\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 3.78515625,
          "content": "# Security Policy\n===============\n\n| Security Feature              | Benefit                                  | Description                                                                 |\n|-------------------------------|------------------------------------------|-----------------------------------------------------------------------------|\n| Environment Variables         | Secure Configuration                     | Uses environment variables to manage sensitive configurations securely.     |\n| No Telemetry                  | Enhanced Privacy                         | Prioritizes user privacy by not collecting telemetry data.                  |\n| Data Encryption               | Data Protection                          | Encrypts sensitive data to protect it from unauthorized access.             |\n| Authentication                | Access Control                           | Ensures that only authorized users can access the system.                   |\n| Authorization                 | Fine-grained Access                      | Provides specific access rights to users based on roles and permissions.    |\n| Dependency Security           | Reduced Vulnerabilities                  | Securely manages dependencies to prevent vulnerabilities.                   |\n| Secure Installation           | Integrity Assurance                      | Ensures the integrity of the software through verified sources and checksums.|\n| Regular Updates               | Ongoing Protection                       | Keeps the system secure by regularly updating to patch vulnerabilities.     |\n| Logging and Monitoring        | Operational Oversight                    | Tracks system activity for security monitoring and anomaly detection.       |\n| Error Handling                | Robust Security                          | Manages errors securely to prevent leakage of sensitive information.        |\n| Data Storage Security         | Secure Data Handling                     | Stores data securely, ensuring confidentiality and integrity.               |\n| Data Transmission Security    | Secure Data Transfer                     | Protects data during transit from eavesdropping and tampering.              |\n| Access Control Mechanisms     | Restricted Access                        | Limits system access to authorized personnel only.                          |\n| Vulnerability Management      | Proactive Protection                     | Identifies and mitigates security vulnerabilities effectively.              |\n| Regulatory Compliance         | Legal Conformity                         | Ensures that the system adheres to relevant legal and regulatory standards. |\n| Security Audits               |\n\n\n# Reporting a Vulnerability\n-------------------------\n\n* * * * *\n\nIf you discover a security vulnerability in any of the above versions, please report it immediately to our security team by sending an email to kye@apac.ai. We take security vulnerabilities seriously and appreciate your efforts in disclosing them responsibly.\n\nPlease provide detailed information on the vulnerability, including steps to reproduce, potential impact, and any known mitigations. Our security team will acknowledge receipt of your report within 24 hours and will provide regular updates on the progress of the investigation.\n\nOnce the vulnerability has been thoroughly assessed, we will take the necessary steps to address it. This may include releasing a security patch, issuing a security advisory, or implementing other appropriate mitigations.\n\nWe aim to respond to all vulnerability reports in a timely manner and work towards resolving them as quickly as possible. We thank you for your contribution to the security of our software.\n\nPlease note that any vulnerability reports that are not related to the specified versions or do not provide sufficient information may be declined.\n\n"
        },
        {
          "name": "deepseek_example.py",
          "type": "blob",
          "size": 1.75,
          "content": "import os\n\nfrom dotenv import load_dotenv\nfrom openai import OpenAI\n\nfrom swarms import Agent\nfrom swarms.prompts.finance_agent_sys_prompt import (\n    FINANCIAL_AGENT_SYS_PROMPT,\n)\n\nload_dotenv()\n\n\nclass DeepSeekChat:\n    def __init__(\n        self,\n        api_key: str = os.getenv(\"DEEPSEEK_API_KEY\"),\n        system_prompt: str = None,\n    ):\n        self.api_key = api_key\n\n        self.client = OpenAI(\n            api_key=api_key, base_url=\"https://api.deepseek.com\"\n        )\n\n    def run(self, task: str):\n        response = self.client.chat.completions.create(\n            model=\"deepseek-chat\",\n            messages=[\n                {\n                    \"role\": \"system\",\n                    \"content\": \"You are a helpful assistant\",\n                },\n                {\"role\": \"user\", \"content\": task},\n            ],\n            stream=False,\n        )\n\n        print(response)\n\n        out = response.choices[0].message.content\n        print(out)\n\n        return out\n\n\nmodel = DeepSeekChat()\n\n# Initialize the agent\nagent = Agent(\n    agent_name=\"Financial-Analysis-Agent\",\n    agent_description=\"Personal finance advisor agent\",\n    system_prompt=FINANCIAL_AGENT_SYS_PROMPT,\n    max_loops=1,\n    llm=model,\n    dynamic_temperature_enabled=True,\n    user_name=\"swarms_corp\",\n    retry_attempts=3,\n    context_length=8192,\n    return_step_meta=False,\n    output_type=\"str\",  # \"json\", \"dict\", \"csv\" OR \"string\" \"yaml\" and\n    auto_generate_prompt=False,  # Auto generate prompt for the agent based on name, description, and system prompt, task\n    max_tokens=4000,  # max output tokens\n)\n\nprint(\n    agent.run(\n        \"Create a table of super high growth opportunities for AI. I have $40k to invest in ETFs, index funds, and more. Please create a table in markdown.\",\n    )\n)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.py",
          "type": "blob",
          "size": 1.287109375,
          "content": "import os\n\nfrom swarm_models import OpenAIChat\nfrom swarms import Agent\nfrom swarms.prompts.finance_agent_sys_prompt import (\n    FINANCIAL_AGENT_SYS_PROMPT,\n)\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Get the OpenAI API key from the environment variable\napi_key = os.getenv(\"GROQ_API_KEY\")\n\n# Model\nmodel = OpenAIChat(\n    openai_api_base=\"https://api.groq.com/openai/v1\",\n    openai_api_key=api_key,\n    model_name=\"llama-3.1-70b-versatile\",\n    temperature=0.1,\n)\n\n# Initialize the agent\nagent = Agent(\n    agent_name=\"Financial-Analysis-Agent\",\n    agent_description=\"Personal finance advisor agent\",\n    system_prompt=FINANCIAL_AGENT_SYS_PROMPT,\n    max_loops=1,\n    llm=model,\n    dynamic_temperature_enabled=True,\n    user_name=\"swarms_corp\",\n    retry_attempts=3,\n    context_length=8192,\n    return_step_meta=False,\n    output_type=\"str\",  # \"json\", \"dict\", \"csv\" OR \"string\" \"yaml\" and\n    auto_generate_prompt=False,  # Auto generate prompt for the agent based on name, description, and system prompt, task\n    max_tokens=4000,  # max output tokens\n    saved_state_path=\"agent_00.json\",\n    interactive=False,\n)\n\nagent.run(\n    \"Create a table of super high growth opportunities for AI. I have $40k to invest in ETFs, index funds, and more. Please create a table in markdown.\",\n    all_cores=True,\n)\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "new_features_examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.73828125,
          "content": "[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n\n[tool.poetry]\nname = \"swarms\"\nversion = \"6.8.8\"\ndescription = \"Swarms - TGSC\"\nlicense = \"MIT\"\nauthors = [\"Kye Gomez <kye@apac.ai>\"]\nhomepage = \"https://github.com/kyegomez/swarms\"\ndocumentation = \"https://docs.swarms.world\"\nreadme = \"README.md\"\nrepository = \"https://github.com/kyegomez/swarms\"\nkeywords = [\n    \"artificial intelligence\",\n    \"deep learning\",\n    \"optimizers\",\n    \"Prompt Engineering\",\n    \"swarms\",\n    \"agents\",\n    \"llms\",\n    \"transformers\",\n    \"multi-agent\",\n    \"swarms of agents\",\n    \"Enterprise-Grade Agents\",\n    \"Production-Grade Agents\",\n    \"Agents\",\n    \"Multi-Grade-Agents\",\n    \"Swarms\",\n    \"Transformers\",\n    \"LLMs\",\n    \"Prompt Engineering\",\n    \"Agents\",\n    \"Generative Agents\",\n    \"Generative AI\",\n    \"Agent Marketplace\",\n    \"Agent Store\",\n    \"quant\",\n    \"finance\",\n    \"algorithmic trading\",\n    \"portfolio optimization\",\n    \"risk management\",\n    \"financial modeling\",\n    \"machine learning for finance\",\n    \"natural language processing for finance\",\n]\nclassifiers = [\n    \"Development Status :: 4 - Beta\",\n    \"Intended Audience :: Developers\",\n    \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Programming Language :: Python :: 3.10\",\n]\n\n\n[tool.poetry.dependencies]\npython = \">=3.10,<4.0\"\n# torch = \">=2.1.1,<3.0\"\n# transformers = \">= 4.39.0, <5.0.0\"\nasyncio = \">=3.4.3,<4.0\"\ntoml = \"*\"\npypdf = \"5.1.0\"\nswarm-models = \"*\"\nloguru = \"*\"\npydantic = \"*\"\ntenacity = \"*\"\npsutil = \"*\"\npython-dotenv = \"*\"\nPyYAML = \"*\"\ndocstring_parser = \"0.16\" # TODO:\ntiktoken = \"*\"\nnetworkx = \"*\"\naiofiles = \"*\"\nclusterops = \"*\"\n# chromadb = \"*\"\nrich = \"*\"\npandas = \"*\"\n# sentence-transformers = \"*\"\n\n\n# [tool.poetry.extras]\n# # Extra for NLP-related functionalities\n# nlp = [\n#     \"torch>=2.1.1,<3.0\",\n#     \"transformers>=4.39.0,<5.0.0\",\n#     \"sentence-transformers\",\n#     \"swarm-models\",\n# ]\n\n# # Extra for database-related functionalities\n# db = [\"chromadb\"]\n\n# # All optional dependencies for convenience\n# all = [\n#     \"torch>=2.1.1,<3.0\",\n#     \"transformers>=4.39.0,<5.0.0\",\n#     \"sentence-transformers\",\n#     \"chromadb\",\n#     \"swarm-models\"\n# ]\n\n\n\n[tool.poetry.scripts]\nswarms = \"swarms.cli.main:main\"\n\n\n[tool.poetry.group.lint.dependencies]\nblack = \">=23.1,<25.0\"\nruff = \">=0.5.1,<0.8.7\"\ntypes-toml = \"^0.10.8.1\"\ntypes-pytz = \">=2023.3,<2025.0\"\ntypes-chardet = \"^5.0.4.6\"\nmypy-protobuf = \"^3.0.0\"\n\n\n[tool.poetry.group.test.dependencies]\npytest = \"^8.1.1\"\n\n[tool.ruff]\nline-length = 70\n\n[tool.black]\ntarget-version = [\"py38\"]\nline-length = 70\ninclude = '\\.pyi?$'\nexclude = '''\n/(\n    \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  | docs\n)/\n'''\n\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.3544921875,
          "content": "\ntorch>=2.1.1,<3.0\ntransformers>=4.39.0,<5.0.0\nasyncio>=3.4.3,<4.0\ntoml\npypdf==5.1.0\nratelimit==2.2.1\nloguru\npydantic==2.8.2\ntenacity\nrich\npsutil\npython-dotenv\nPyYAML\ndocstring_parser==0.16\nblack>=23.1,<25.0\nruff>=0.0.249,<0.4.5\ntypes-toml>=0.10.8.1\ntypes-pytz>=2023.3,<2025.0\ntypes-chardet>=5.0.4.6\nmypy-protobuf>=3.0.0\npytest>=8.1.1\nnetworkx\naiofiles\nclusterops"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "simple_example.py",
          "type": "blob",
          "size": 0.19921875,
          "content": "from swarms import Agent\n\nAgent(\n    agent_name=\"Stock-Analysis-Agent\",\n    model_name=\"gpt-4o-mini\",\n    max_loops=\"auto\",\n    interactive=True,\n    streaming_on=True,\n).run(\"What are 5 hft algorithms\")\n"
        },
        {
          "name": "swarms",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}