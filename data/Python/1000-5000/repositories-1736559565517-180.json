{
  "metadata": {
    "timestamp": 1736559565517,
    "page": 180,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jazzband/django-silk",
      "stars": 4555,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.033203125,
          "content": "[run]\nbranch = True\nsource = silk\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3291015625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbin/\nbuild/\ndevelop-eggs/\ndist/\neggs/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n.eggs\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.pytest_cache/\n.coverage\n.cache\nnosetests.xml\ncoverage.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n# Rope\n.ropeproject\n\n# Django stuff:\n*.log\n*.pot\n\n# Sphinx documentation\ndocs/_build/\n\n# Other\ndist\n.idea\n*db.sqlite*\n/django_silky/media\n*.prof\nproject/media/\nproject/tmp/\n.vscode/\n\n# Hardlinks\n/django_silky/silk\n\n# Pip\n/src\n\n# Sphinx\n_html\n\n# Tox\n.tox.ini.swp\n\n# Node\nnode_modules\n\n\n# Gulp\n.gulp-scss-cache\n.sass-cache\n\n*~\n.DS_Store\n\n### PyCharm ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n*.iml\n\n## Directory-based project format:\n.idea/\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Virtual env\n.venv*\n\npackage-lock.json\n*.db\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.6708984375,
          "content": "repos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: 'v5.0.0'\n  hooks:\n  - id: check-merge-conflict\n- repo: https://github.com/hadialqattan/pycln\n  rev: v2.4.0\n  hooks:\n  - id: pycln\n    args: ['--all']\n- repo: https://github.com/asottile/yesqa\n  rev: v1.5.0\n  hooks:\n  - id: yesqa\n- repo: https://github.com/pycqa/isort\n  rev: '5.13.2'\n  hooks:\n  - id: isort\n    args: ['--profile', 'black']\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: 'v5.0.0'\n  hooks:\n  - id: end-of-file-fixer\n    exclude: >-\n      ^docs/[^/]*\\.svg$\n  - id: requirements-txt-fixer\n  - id: trailing-whitespace\n    types: [python]\n  - id: file-contents-sorter\n    files: |\n      CONTRIBUTORS.txt|\n      docs/spelling_wordlist.txt|\n      .gitignore|\n      .gitattributes\n  - id: check-case-conflict\n  - id: check-json\n  - id: check-xml\n  - id: check-toml\n  - id: check-xml\n  - id: check-yaml\n  - id: debug-statements\n  - id: check-added-large-files\n  - id: check-symlinks\n  - id: debug-statements\n  - id: detect-aws-credentials\n    args: ['--allow-missing-credentials']\n  - id: detect-private-key\n    exclude: ^examples|(?:tests/ssl)/\n- repo: https://github.com/asottile/pyupgrade\n  rev: 'v3.19.1'\n  hooks:\n  - id: pyupgrade\n    args: ['--keep-mock']\n- repo: https://github.com/adamchainz/django-upgrade\n  rev: '1.22.2'\n  hooks:\n  - id: django-upgrade\n    args: [--target-version, '4.2']\n- repo: https://github.com/hhatto/autopep8\n  rev: 'v2.3.1'\n  hooks:\n  - id: autopep8\n- repo: https://github.com/PyCQA/flake8\n  rev: '7.1.1'\n  hooks:\n  - id: flake8\n    exclude: '^docs/'\n- repo: https://github.com/Lucas-C/pre-commit-hooks-markup\n  rev: v1.0.1\n  hooks:\n  - id: rst-linter\n    files: >-\n      ^[^/]+[.]rst$\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 55.98828125,
          "content": "# Change Log\n## Unreleased\n\n## [5.3.2](https://github.com/jazzband/django-silk/tree/5.3.2) (2024-12-05)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.3.1..5.3.2)\n\n**Fixes:**\n\n - Fix missing image from jQuery UI 1.13.2 (#757) @Tatsh\n\n**Maintenance and Cleanup:**\n\n - Adds updated documentation on middleware ordering (#758) @SoyJoseC\n - Updated python dependencies (#761, #760) @albertyw\n\n\n## [5.3.1](https://github.com/jazzband/django-silk/tree/5.3.1) (2024-11-08)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.3.0..5.3.1)\n\n**Fixes:**\n\n - Fix missing jQuery UI images (#754) @Tatsh\n - Fix swallowing exceptions when processing response in silk middleware (#753) @albertyw\n\n\n## [5.3.0](https://github.com/jazzband/django-silk/tree/5.3.0) (2024-10-25)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.2.0..5.3.0)\n\n**Note: this release removes support for Django 3.2 and Python 3.8**\n\n**Features/Enhancements:**\n\n - Support python 3.13 (#747)\n\n**Fixes:**\n\n - Upgrade jQuery-UI to 1.13.2 to fix XSS vulnerability (#742)\n\n**Maintenance and Cleanup:**\n\n - Remove Django 3.2 support (#736)\n - Drop support for python 3.8 (#749)\n - Update python dependencies (#748)\n\n\n## [5.2.0](https://github.com/jazzband/django-silk/tree/5.2.0) (2024-08-17)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.1.0..5.2.0)\n\n**Features/Enhancements:**\n\n - Support Django 5.1 (#734, #732) @albertyw\n\n**Fixes:**\n\n - Fix when Session, Authentication or Message middleware are not present (#667) @mgaligniana\n - Update 'tables_involved' property to include tables from UPDATE operation (#717) @emregeldegul\n - Fix double-escaping of the curl and Python example code (#709) @SpecLad\n - Correct units in profiling and requests pages (#725) @ka28kumar\n\n**Maintenance and Cleanup:**\n\n - Update python dependencies (#733) @albertyw\n - Refactor SQL query time calculation to use Django aggregation (#720) @beltagymohamed\n - Fix test failures on Windows (#707) @SpecLad\n - Update workflow actions (#700) @albertyw\n - Update test matrix to latest version of django, postgres, and mariadb #701) @albertyw\n\n\n## [5.1.0](https://github.com/jazzband/django-silk/tree/5.1.0) (2023-12-30)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.0.4..5.1.0)\n\n**Upgrading:**\n\nThis release includes [Fix deprecation warning for get_storage_class #669](https://github.com/jazzband/django-silk/pull/669)\nwhich deprecates `SILKY_STORAGE_CLASS`.  Users should instead use the Django\n`STORAGES` configuration.  See [README](https://github.com/albertyw/django-silk/blob/master/README.md#profiling)\nand [Django documentation](https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES)\nfor more information.\n\nAlso, for python 3.12, the `cProfile` stdlib library cannot be enabled multiple times concurrently.\nSilk will therefore skip profiling if another profile is already enabled.\n\n\n**Features/Enhancements:**\n\n - Allow option to delete profiles (#652) @viralj\n\n**Fixes:**\n\n - Gracefully error out when there are concurrent profilers (#692) @albertyw\n - Always disable cProfile as part of cleanup (#699) @albertyw\n - Fix when Session, Authentication or Message middlewares are not present (#667) @mgaligniana\n\n**Maintenance and Cleanup:**\n\n - Fix deprecation warning for get_storage_class (#669) @albertyw\n - Support Django 4.2 (#685) @albertyw\n - Support python 3.12 (#683) @albertyw\n - Support Django 5 (#686) @albertyw\n - Remove deprecated datetime.timezone.utc (#687) @albertyw\n - Derive version from importlib (#697) @robinchow\n\n**Dependencies:**\n\n - Update python dependencies (#693) @albertyw\n\n\n## [5.0.4](https://github.com/jazzband/django-silk/tree/5.0.4) (2023-09-17)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.0.3..5.0.4)\n\n**Features/Enhancements:**\n\n - Handle case-insensitive sensitive headers (#674) @shtimn\n - Add a \"pagetitle\" block to Silky templates (#661) @vsajip\n - Allow to generate more informative profile file name (#638) @k4rl85\n\n**Maintenance and Cleanup:**\n\n - Remove unsupported versions of Django and Python (#668) @albertyw\n - Outsource all inline scripts and styles (#635) @sgelis\n - Remove support for looking up headers on django &lt;3.2 (#643) @albertyw\n\n**Dependencies:**\n\n - Update python dependencies (#677) @albertyw\n\n\n## [5.0.3](https://github.com/jazzband/django-silk/tree/5.0.3) (2023-01-12)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.0.2..5.0.3)\n\n**Fixes:**\n\n - #46 Retain ordering, view style and limit (#614)\n - #157 prevent encoding errors in params (#617)\n - #594 Silk fails on constraint check queries (#618) (Fixes compatibility with Django 4.1)\n\n**Features/Enhancements:**\n\n - #132 Add action on sql query list (#611)\n - traceback only when needed (#387)\n\n**Dependencies:**\n\n - #625 Drop dependency to jinja2\n\n\n## [5.0.2](https://github.com/jazzband/django-silk/tree/5.0.2) (2022-10-12)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.0.1...5.0.2)\n\n**Fixes:**\n\n - Multipart forms and RawPostDataException (#592)\n - Decrease unnecessary database hits (#587) (#588)\n\n**Features/Enhancements:**\n\n - Remove unneeded pytz package (#603)\n - Use contextlib in test_profile_parser (#590)\n - Add support for storages, that don't implement full filesystem path (#596)\n\n\n## [5.0.1](https://github.com/jazzband/django-silk/tree/5.0.1) (2022-07-03)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/5.0.0...5.0.1)\n\n**Fixes:**\n\n - Add jquery UI 1.13.1 images and fix collectstatic (#576)\n\n\n## [5.0.0](https://github.com/jazzband/django-silk/tree/5.0.0) (2022-06-20)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.4.0...5.0.0)\n\n**Features/Enhancements:**\n\n- Drop support for Django 2.2 (EOL) (#567)\n- Added silk_request_garbage_collect command for out-of-band garbage collection. (#541)\n\n\n## [4.4.1](https://github.com/jazzband/django-silk/tree/4.4.1) (2022-07-03)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.4.0...4.4.1)\n\n**Fixes:**\n\n - Add jquery UI 1.13.1 images and fix collectstatic (#576)\n\n\n## [4.4.0](https://github.com/jazzband/django-silk/tree/4.4.0) (2022-06-20)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.3.0...4.4.0)\n\n**Features/Enhancements:**\n\n- Switch 'Apply' and 'Clear all filters' ordering\n- Make filters on Requests tab more visible\n- Add small margin for filter selects\n- Add 'Clear all filters' button\n- Add message when there are no requests to display\n- Making the error logging more accurate and explicit\n- Fixing #530 - Adding support for SILKY_EXPLAIN_FLAGS\n\n**Maintenance and Cleanup:**\n\n- Remove unused js compilation pipeline (#561)\n- Fix pre-commit-config\n\n**Dependencies:**\n\n- Update jquery to 3.6.0 and jquery-ui to 1.13.1 [#508]\n- [pre-commit.ci] pre-commit autoupdate (#560, #571)\n- Add django-upgrade to pre-commit hooks (#566)\n\n**Moved to 5.0.0**\n\n- Drop support for Django 2.2 (EOL) (#567)\n\n\n## [4.3.0](https://github.com/jazzband/django-silk/tree/4.3.0) (2022-03-01)\n:release-by: Albert Wang (@albertyw)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.2.0...4.3.0)\n\n**Fixes:**\n\n- Use correct db in a multi db setup (https://github.com/jazzband/django-silk/issues/522)\n\n**Dependencies:**\n\n- Drop support for Python 3.6\n- Add Python 3.10 compatibility\n- Add Django 4.0 to tox.ini\n- Update django version (#544)\n- Django main (#528)\n- Remove unneeded dependency Pygments\n\n**Maintenance and Cleanup:**\n\n- Jazzband: Created local 'CODE_OF_CONDUCT.md' from remote 'CODE_OF_CONDUCT.md'\n- fix installation instructions in README\n- Replace assertDictContainsSubset (#536)\n- Fix issue avoid-misusing-assert-true found at https://codereview.doctor (#550)\n- pre-commit autoupdate\n\n## [4.2.0](https://github.com/jazzband/django-silk/tree/4.2.0) (2021-23-10)\n:release-by: Asif Saif Uddin (@auvipy)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.1.0...4.2.0)\n- #427 Passed wsgi request to SILKY_PYTHON_PROFILER_FUNC\n- Added Django 3.1 & 3.2 to test matrix\n- Replace url with re_path for Django 4.0\n- Move CI to GitHub Actions. [\\#460](https://github.com/jazzband/django-silk/pull/432) ([jezdez](https://github.com/jezdez))\n- Do not crash when silk app is not included in urls\n- Add the SILKY_JSON_ENSURE_ASCII configuration item to support Chinese\n- Add row view for requests page (#440)\n- RequestModelFactory: fallback if request body too large, fix #162 (#451)\n- Add query execution plan to sql_detail (#452)\n- Add Python 3.9 compatibility (#404)\n- Replace re_path with path\n- Fix transaction error for mysql\n- parse query when count joins to match only Keyword\n- fix: DB connection to ClearDB when multiple databases\n- fix: DataCollector sql_queries model not found on filter(request=self.request)\n- Generate missing row.css from sass\n- Filter null values from most time overall summary\n- Ensure sorting between longest requests\n- Filter null values from most db time summary\n- Ensure sorting between most db time requests\n- Temporary fix for testing Django 2.2\n- Fix egg metadata error\n- Fixed a bug that the profile tab could not be opened when the source code contains japanese\n- fix incorrectly made decorator\n- Ensure sorting between most db queries requests\n- Add tests that access the actual DB (#493)\n- remove python 2 style codes from across the codebase\n- Fix broken test on Windows 10 (SQLite) (#504)\n- Remove Make Migrations (#503)\n- Add Python 3.10 compatibility (#527)\n\n\n## [4.1.0](https://github.com/jazzband/django-silk/tree/4.1.0) (2020-08-07)\n\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.0.1...4.1.0)\n\n\n**New features/Implemented enhancements:**\n\n- Make compatible with Django 3.1 [\\#432](https://github.com/jazzband/django-silk/pull/432) ([Tirzono](https://github.com/Tirzono))\n\n\n**Fixed bugs:**\n\n- Capture entire key name during cleansing in \\_mask\\_credentials [\\#414](https://github.com/jazzband/django-silk/pull/414) ([ThePumpingLemma](https://github.com/ThePumpingLemma))\n- Clear DB error when configuring silk to use a non-' default' database [\\#417](https://github.com/jazzband/django-silk/pull/417) ([eshxcmhk](https://github.com/eshxcmhk))\n- Fix force\\_text RemovedInDjango40Warning [\\#422](https://github.com/jazzband/django-silk/pull/422) ([justinmayhew](https://github.com/justinmayhew))\n\n\n**Closed issues:**\n\n- \\_mask\\_credentials uses UGC in a regex substitution [\\#410](https://github.com/jazzband/django-silk/issues/410) ([barm](https://github.com/barm))\n- Django Silk is not compatible with Django 3.1: EmptyResultSet is removed in Django 3.1 [\\#431](https://github.com/jazzband/django-silk/issues/431) ([Tirzono](https://github.com/Tirzono))\n\n\n**Merged pull requests:**\n\n- Wrap re.sub() in try-except [\\#412](https://github.com/jazzband/django-silk/pull/412) ([bambookchos](https://github.com/bambookchos))\n- Replace the call to re.findall with re.sub in \\_mask\\_credentials so matched values are not treated as regex patterns [\\#413](https://github.com/jazzband/django-silk/pull/413) ([ThePumpingLemma](https://github.com/ThePumpingLemma))\n- Capture entire key name during cleansing in \\_mask\\_credentials [\\#414](https://github.com/jazzband/django-silk/pull/414) ([ThePumpingLemma](https://github.com/ThePumpingLemma))\n- Clear DB error when configuring silk to use a non-' default' database [\\#417](https://github.com/jazzband/django-silk/pull/417) ([eshxcmhk](https://github.com/eshxcmhk))\n- Fix force\\_text RemovedInDjango40Warning [\\#422](https://github.com/jazzband/django-silk/pull/422) ([justinmayhew](https://github.com/justinmayhew))\n- Make compatible with Django 3.1 [\\#432](https://github.com/jazzband/django-silk/pull/432) ([Tirzono](https://github.com/Tirzono))\n- Update README.md django-silk is tested with Django 3.1 [\\#433](https://github.com/jazzband/django-silk/pull/433) ([Tirzono](https://github.com/Tirzono))\n\n\n## [4.0.1](https://github.com/jazzband/django-silk/tree/4.0.1) (2020-03-12)\n\n[Full Changelog](https://github.com/jazzband/django-silk/compare/4.0.0...4.0.1)\n\n\n**New features/Implemented enhancements:**\n\n- Restructured clear db HTML [\\#399](https://github.com/jazzband/django-silk/pull/399) ([nasirhjafri](https://github.com/nasirhjafri))\n- JS workflow cleanup [\\#397](https://github.com/jazzband/django-silk/pull/397) ([nasirhjafri](https://github.com/nasirhjafri))\n- Refactor QA setup [\\#393](https://github.com/jazzband/django-silk/pull/393) ([aleksihakli](https://github.com/aleksihakli))\n\n\n**Fixed bugs:**\n\n- docs: Fix simple typo, tracebackk -> traceback [\\#406](https://github.com/jazzband/django-silk/pull/406) ([timgates42](https://github.com/timgates42))\n- Clear DB page doesn't work with PostgreSQL and SQLite [\\#396](https://github.com/jazzband/django-silk/pull/396) ([nasirhjafri](https://github.com/nasirhjafri))\n\n\n**Closed issues:**\n\n- The \"Clear DB\" page doesn't work with PostgreSQL [\\#395](https://github.com/jazzband/django-silk/issues/395) ([Ikalou](https://github.com/Ikalou))\n\n\n**Merged pull requests:**\n\n- docs: Fix simple typo, tracebackk -> traceback [\\#406](https://github.com/jazzband/django-silk/pull/406) ([timgates42](https://github.com/timgates42))\n- Restructured clear db HTML [\\#399](https://github.com/jazzband/django-silk/pull/399) ([nasirhjafri](https://github.com/nasirhjafri))\n- JS workflow cleanup [\\#397](https://github.com/jazzband/django-silk/pull/397) ([nasirhjafri](https://github.com/nasirhjafri))\n- Clear DB page doesn't work with PostgreSQL and SQLite [\\#396](https://github.com/jazzband/django-silk/pull/396) ([nasirhjafri](https://github.com/nasirhjafri))\n- Refactor QA setup [\\#393](https://github.com/jazzband/django-silk/pull/393) ([aleksihakli](https://github.com/aleksihakli))\n\n\n## [4.0.0](https://github.com/jazzband/django-silk/tree/4.0.0) (2020-01-09)\n\n[Full Changelog](https://github.com/jazzband/django-silk/compare/3.0.4...4.0.0)\n\n**New features/Implemented enhancements:**\n\n- Ability to clean up all requests/queries [\\#368](https://github.com/jazzband/django-silk/pull/368) ([nasirhjafri](https://github.com/nasirhjafri))\n- Used bulk_create to save number of queries [\\#370](https://github.com/jazzband/django-silk/pull/370) ([nasirhjafri](https://github.com/nasirhjafri))\n- Dropped Python 2 and 3.4 support [\\#380](https://github.com/jazzband/django-silk/pull/380) ([munza](https://github.com/munza))\n- Added Python 3.8 support [\\#380](https://github.com/jazzband/django-silk/pull/380) ([nasirhjafri](https://github.com/nasirhjafri))\n- Removed django<2.2 support and added django 3.0 support [\\#385](https://github.com/jazzband/django-silk/pull/385) ([nasirhjafri](https://github.com/nasirhjafri))\n- Add function support for enabling profiling [\\#391](https://github.com/jazzband/django-silk/pull/391) ([tredzko](https://github.com/tredzko))\n\n**Fixed bugs:**\n\n- Mask authorization header [\\#376](https://github.com/jazzband/django-silk/pull/376) ([StefanMich](https://github.com/StefanMich))\n\n**Closed issues:**\n\n- Ability to clean up all requests/queries [\\#365](https://github.com/jazzband/django-silk/issues/365)\n- Use bulk_create to save number of queries [\\#369](https://github.com/jazzband/django-silk/issues/369)\n- Headers are not sanitized [\\#375](https://github.com/jazzband/django-silk/issues/375)\n- Django 3 support [\\#382](https://github.com/jazzband/django-silk/issues/382)\n- Support functional cProfile enable [\\#390](https://github.com/jazzband/django-silk/issues/390)\n\n\n**Merged pull requests:**\n\n- Mask authorization header [\\#376](https://github.com/jazzband/django-silk/pull/376) ([StefanMich](https://github.com/StefanMich))\n- Ability to clean up all requests/queries [\\#368](https://github.com/jazzband/django-silk/pull/368) ([nasirhjafri](https://github.com/nasirhjafri))\n- Used bulk_create to save number of queries [\\#370](https://github.com/jazzband/django-silk/pull/370) ([nasirhjafri](https://github.com/nasirhjafri))\n- Dropped Python 2 and 3.4 support [\\#380](https://github.com/jazzband/django-silk/pull/380) ([munza](https://github.com/munza))\n- Added Python 3.8 support [\\#380](https://github.com/jazzband/django-silk/pull/380) ([nasirhjafri](https://github.com/nasirhjafri))\n- Removed django<2.2 support and added django 3.0 support [\\#385](https://github.com/jazzband/django-silk/pull/385) ([nasirhjafri](https://github.com/nasirhjafri))\n- Add function support for enabling profiling [\\#391](https://github.com/jazzband/django-silk/pull/391) ([tredzko](https://github.com/tredzko))\n\n\n## [3.0.4](https://github.com/jazzband/django-silk/tree/3.0.4) (2019-08-12)\n\n[Full Changelog](https://github.com/jazzband/django-silk/compare/3.0.2...3.0.4)\n\n**Implemented enhancements:**\n\n- templates: limit select width to its container one [\\#351](https://github.com/jazzband/django-silk/pull/351) ([xrmx](https://github.com/xrmx))\n- Clean up RemovedInDjango30Warning with {% load staticfiles %} [\\#353](https://github.com/jazzband/django-silk/pull/353) ([devmonkey22](https://github.com/devmonkey22))\n- Simplify pattern masking and handle dicts [\\#355](https://github.com/jazzband/django-silk/pull/355) ([Chris7](https://github.com/Chris7))\n\n**Fixed bugs:**\n\n- Fix masking sensitive data in batch JSON request [\\#342](https://github.com/jazzband/django-silk/pull/342) ([nikolaik](https://github.com/nikolaik))\n- Fix project url on PyPi [\\#343](https://github.com/jazzband/django-silk/pull/343) ([luzfcb](https://github.com/luzfcb))\n\n**Closed issues:**\n\n- Clean up RemovedInDjango30Warning warning re `load staticfiles` in Django 2.1+ [\\#352](https://github.com/jazzband/django-silk/issues/352)\n\n**Merged pull requests:**\n\n- Fix masking sensitive data in batch JSON request [\\#342](https://github.com/jazzband/django-silk/pull/342) ([nikolaik](https://github.com/nikolaik))\n- Fix project url on PyPi [\\#343](https://github.com/jazzband/django-silk/pull/343) ([luzfcb](https://github.com/luzfcb))\n- templates: limit select width to its container one [\\#351](https://github.com/jazzband/django-silk/pull/351) ([xrmx](https://github.com/xrmx))\n- Clean up RemovedInDjango30Warning with {% load staticfiles %} [\\#353](https://github.com/jazzband/django-silk/pull/353) ([devmonkey22](https://github.com/devmonkey22))\n- Simplify pattern masking and handle dicts [\\#355](https://github.com/jazzband/django-silk/pull/355) ([Chris7](https://github.com/Chris7))\n\n\n## [3.0.2](https://github.com/jazzband/django-silk/tree/3.0.2) (2019-04-23)\n\n[Full Changelog](https://github.com/jazzband/django-silk/compare/3.0.1...3.0.2)\n\n**Implemented enhancements:**\n\n- Add testing support for django 2.2 [\\#340](https://github.com/jazzband/django-silk/pull/340) ([mbeacom](https://github.com/mbeacom))\n- SILKY\\_MIDDLEWARE\\_CLASS option [\\#334](https://github.com/jazzband/django-silk/pull/334) ([vartagg](https://github.com/vartagg))\n\n**Fixed bugs:**\n\n- Long url path causes Http 500 [\\#312](https://github.com/jazzband/django-silk/issues/312)\n\n**Closed issues:**\n\n- Permission checking is skipped due to order of silk\\_profile decorator [\\#336](https://github.com/jazzband/django-silk/issues/336)\n- Support gprof2dot 2017.09.19 [\\#332](https://github.com/jazzband/django-silk/issues/332)\n- Duplicate \\#310 [\\#328](https://github.com/jazzband/django-silk/issues/328)\n- Profiling management commands [\\#327](https://github.com/jazzband/django-silk/issues/327)\n- NoReverseMatch at /cart/detail/ Reverse for 'cart\\_add' with arguments not found. [\\#324](https://github.com/jazzband/django-silk/issues/324)\n- Request body sanitization [\\#305](https://github.com/jazzband/django-silk/issues/305)\n- How to profile middleware? [\\#303](https://github.com/jazzband/django-silk/issues/303)\n- Disabling Silk for specific URLs [\\#292](https://github.com/jazzband/django-silk/issues/292)\n- silk\\_clear\\_request\\_log fails on Postgres [\\#290](https://github.com/jazzband/django-silk/issues/290)\n- silk profile is not work, with dango-version 2.0.2 and django-silk version 2.0.0 [\\#277](https://github.com/jazzband/django-silk/issues/277)\n- DataError: value too long for type character varying\\(190\\) [\\#179](https://github.com/jazzband/django-silk/issues/179)\n\n**Merged pull requests:**\n\n- Update gprof2dot requirement [\\#333](https://github.com/jazzband/django-silk/pull/333) ([Regzon](https://github.com/Regzon))\n- Make Request.garbage\\_collect cheaper [\\#331](https://github.com/jazzband/django-silk/pull/331) ([xrmx](https://github.com/xrmx))\n- Sort view filters values [\\#330](https://github.com/jazzband/django-silk/pull/330) ([xrmx](https://github.com/xrmx))\n- Update Travis CI matrix [\\#326](https://github.com/jazzband/django-silk/pull/326) ([kevin-brown](https://github.com/kevin-brown))\n- Fix unit for max response body size in readme [\\#325](https://github.com/jazzband/django-silk/pull/325) ([st4lk](https://github.com/st4lk))\n- Mask sensitive data [\\#322](https://github.com/jazzband/django-silk/pull/322) ([egichuri](https://github.com/egichuri))\n- Disclose security issues [\\#321](https://github.com/jazzband/django-silk/pull/321) ([acu192](https://github.com/acu192))\n- If there is no DataCollector\\(\\).request then don't wrap sql queries [\\#320](https://github.com/jazzband/django-silk/pull/320) ([rwlogel](https://github.com/rwlogel))\n- Prevent path or view\\_name being longer than 190 characters [\\#314](https://github.com/jazzband/django-silk/pull/314) ([smaccona](https://github.com/smaccona))\n- Disable postgres USER triggers [\\#299](https://github.com/jazzband/django-silk/pull/299) ([gforcada](https://github.com/gforcada))\n- Fix \\#297 remove explicit byte string from migration 0003 [\\#298](https://github.com/jazzband/django-silk/pull/298) ([florianm](https://github.com/florianm))\n- Modernize middleware [\\#296](https://github.com/jazzband/django-silk/pull/296) ([gforcada](https://github.com/gforcada))\n- Added a simple view in request detail context allowing to get python profile [\\#295](https://github.com/jazzband/django-silk/pull/295) ([laurentb2](https://github.com/laurentb2))\n\n## [3.0.1](https://github.com/jazzband/django-silk/tree/3.0.1) (2018-07-03)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/3.0.0...3.0.1)\n\n**Closed issues:**\n\n- ProgrammingError raised from silk\\_clear\\_request\\_log [\\#293](https://github.com/jazzband/django-silk/issues/293)\n- Make a new release of django-silk [\\#282](https://github.com/jazzband/django-silk/issues/282)\n\n**Merged pull requests:**\n\n- \\#290 Fix silk\\_clear\\_request\\_log errors on Postgres [\\#291](https://github.com/jazzband/django-silk/pull/291) ([devmonkey22](https://github.com/devmonkey22))\n\n## [3.0.0](https://github.com/jazzband/django-silk/tree/3.0.0) (2018-05-15)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/2.0.0...3.0.0)\n\n**Implemented enhancements:**\n\n- Limiting request/response data don't available in pypi version  [\\#218](https://github.com/jazzband/django-silk/issues/218)\n\n**Fixed bugs:**\n\n- silk\\_clear\\_request\\_log taking longer than 30 minutes [\\#239](https://github.com/jazzband/django-silk/issues/239)\n\n**Closed issues:**\n\n- Meta profiling does not work with Django 2.0 and higher [\\#274](https://github.com/jazzband/django-silk/issues/274)\n- Force opening a new window for SQL queries is very annoying [\\#271](https://github.com/jazzband/django-silk/issues/271)\n- DB Deadlock when stress testing with silk [\\#265](https://github.com/jazzband/django-silk/issues/265)\n- proplem with propagating code to pypi  [\\#264](https://github.com/jazzband/django-silk/issues/264)\n- PSA: Cleanup silk\\_requests before updating to 1.1.0 [\\#261](https://github.com/jazzband/django-silk/issues/261)\n- Release 2.0.0 [\\#259](https://github.com/jazzband/django-silk/issues/259)\n\n**Merged pull requests:**\n\n- Remove gitter links [\\#285](https://github.com/jazzband/django-silk/pull/285) ([albertyw](https://github.com/albertyw))\n- Release 3.0.0 [\\#283](https://github.com/jazzband/django-silk/pull/283) ([albertyw](https://github.com/albertyw))\n- Fix garbage collection logic for small tables [\\#280](https://github.com/jazzband/django-silk/pull/280) ([albertyw](https://github.com/albertyw))\n- Fix view name [\\#278](https://github.com/jazzband/django-silk/pull/278) ([drppi44](https://github.com/drppi44))\n- Revert \"Opening sql queries in new tab is very useful\" [\\#276](https://github.com/jazzband/django-silk/pull/276) ([albertyw](https://github.com/albertyw))\n- Fix issue \\#274 [\\#275](https://github.com/jazzband/django-silk/pull/275) ([MKolman](https://github.com/MKolman))\n- Truncate tables when running silk\\_clear\\_request\\_log [\\#270](https://github.com/jazzband/django-silk/pull/270) ([albertyw](https://github.com/albertyw))\n- Makes example\\_app.models.Product.photo.upload\\_to a string instead of bytes [\\#268](https://github.com/jazzband/django-silk/pull/268) ([vbawa](https://github.com/vbawa))\n- Make garbage collection filter more efficient [\\#267](https://github.com/jazzband/django-silk/pull/267) ([albertyw](https://github.com/albertyw))\n-  Drop support for Django \\< 1.11 and remove workarounds [\\#266](https://github.com/jazzband/django-silk/pull/266) ([jdufresne](https://github.com/jdufresne))\n\n## [2.0.0](https://github.com/jazzband/django-silk/tree/2.0.0) (2018-01-16)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/1.1.0...2.0.0)\n\n**Fixed bugs:**\n\n- Links for Readme.md not working. [\\#250](https://github.com/jazzband/django-silk/issues/250)\n\n**Closed issues:**\n\n- pypi version [\\#252](https://github.com/jazzband/django-silk/issues/252)\n- Remove support for django 1.7 [\\#247](https://github.com/jazzband/django-silk/issues/247)\n- migrations/0005\\_increase\\_request\\_prof\\_file\\_length.py does not match code [\\#244](https://github.com/jazzband/django-silk/issues/244)\n- Excessive number of queries in class method profile [\\#240](https://github.com/jazzband/django-silk/issues/240)\n- Django 2.0 support [\\#229](https://github.com/jazzband/django-silk/issues/229)\n- Create new release of silk [\\#187](https://github.com/jazzband/django-silk/issues/187)\n\n**Merged pull requests:**\n\n- Release 2.0.0 [\\#260](https://github.com/jazzband/django-silk/pull/260) ([albertyw](https://github.com/albertyw))\n- function declaration fix [\\#254](https://github.com/jazzband/django-silk/pull/254) ([Yolley](https://github.com/Yolley))\n- Opening sql queries in new tab is very useful [\\#253](https://github.com/jazzband/django-silk/pull/253) ([lokeshatbigbasket](https://github.com/lokeshatbigbasket))\n- Use force\\_text in ResponseModelFactory to avoid b' prefix in django 2 [\\#251](https://github.com/jazzband/django-silk/pull/251) ([aadu](https://github.com/aadu))\n- Remove django support 1.7 [\\#249](https://github.com/jazzband/django-silk/pull/249) ([albertyw](https://github.com/albertyw))\n- Remove django 1.6 references [\\#248](https://github.com/jazzband/django-silk/pull/248) ([albertyw](https://github.com/albertyw))\n- Update development status and python support to package classifiers [\\#246](https://github.com/jazzband/django-silk/pull/246) ([albertyw](https://github.com/albertyw))\n- fix migration for request.prof\\_file field [\\#245](https://github.com/jazzband/django-silk/pull/245) ([dennybiasiolli](https://github.com/dennybiasiolli))\n- fix alternative github tags installation url [\\#243](https://github.com/jazzband/django-silk/pull/243) ([dennybiasiolli](https://github.com/dennybiasiolli))\n\n## [1.1.0](https://github.com/jazzband/django-silk/tree/1.1.0) (2017-12-27)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/1.0.0...1.1.0)\n\n**Implemented enhancements:**\n\n- RemovedInDjango20Warning: on\\_delete will be a required arg for OneToOneField in Django 2.0. [\\#183](https://github.com/jazzband/django-silk/issues/183)\n- README missing info about how to import decorator [\\#180](https://github.com/jazzband/django-silk/issues/180)\n- Use redis for backend [\\#163](https://github.com/jazzband/django-silk/issues/163)\n- Difficult to install on windows: Needs wheels. [\\#149](https://github.com/jazzband/django-silk/issues/149)\n- Organise cProfile output as a sortable, more organised table. [\\#33](https://github.com/jazzband/django-silk/issues/33)\n\n**Closed issues:**\n\n- Silk is incompatible with django-fullclean [\\#219](https://github.com/jazzband/django-silk/issues/219)\n- The dashboard shows views with no queries as most time taken in database [\\#217](https://github.com/jazzband/django-silk/issues/217)\n- No end\\_time for any captured request [\\#213](https://github.com/jazzband/django-silk/issues/213)\n- Bad alignment in profile table [\\#206](https://github.com/jazzband/django-silk/issues/206)\n- Visualization not visible [\\#205](https://github.com/jazzband/django-silk/issues/205)\n- Storage class as a setting [\\#202](https://github.com/jazzband/django-silk/issues/202)\n- Consider moving project to jazzband [\\#184](https://github.com/jazzband/django-silk/issues/184)\n- Request detail page never loads [\\#175](https://github.com/jazzband/django-silk/issues/175)\n- Number of queries and time showing as 0 [\\#174](https://github.com/jazzband/django-silk/issues/174)\n- NameError: name 'silk\\_profile' is not defined [\\#172](https://github.com/jazzband/django-silk/issues/172)\n- Query time-outs [\\#158](https://github.com/jazzband/django-silk/issues/158)\n\n**Merged pull requests:**\n\n- Release 1.1.0 [\\#242](https://github.com/jazzband/django-silk/pull/242) ([albertyw](https://github.com/albertyw))\n- Update package versions for test project [\\#241](https://github.com/jazzband/django-silk/pull/241) ([albertyw](https://github.com/albertyw))\n- Return immediately [\\#235](https://github.com/jazzband/django-silk/pull/235) ([Stranger6667](https://github.com/Stranger6667))\n- Fix missing db\\_time field [\\#234](https://github.com/jazzband/django-silk/pull/234) ([albertyw](https://github.com/albertyw))\n- Test django 2 in travis [\\#233](https://github.com/jazzband/django-silk/pull/233) ([albertyw](https://github.com/albertyw))\n- Lint silk directory and fix a python 3 blocker [\\#232](https://github.com/jazzband/django-silk/pull/232) ([albertyw](https://github.com/albertyw))\n- Fix flaky test by rounding off floats [\\#231](https://github.com/jazzband/django-silk/pull/231) ([albertyw](https://github.com/albertyw))\n- Fix github silk links to point to jazzband [\\#230](https://github.com/jazzband/django-silk/pull/230) ([albertyw](https://github.com/albertyw))\n- Update docs to clarify how to install the middleware [\\#228](https://github.com/jazzband/django-silk/pull/228) ([albertyw](https://github.com/albertyw))\n- Fix Django 2 deprecations [\\#227](https://github.com/jazzband/django-silk/pull/227) ([albertyw](https://github.com/albertyw))\n- Add extra documentation covering environment variables and running tests [\\#226](https://github.com/jazzband/django-silk/pull/226) ([richardnias](https://github.com/richardnias))\n- Filter out views that took no time in the database for the most time … [\\#225](https://github.com/jazzband/django-silk/pull/225) ([hvdklauw](https://github.com/hvdklauw))\n- Removed typo errors and fixed contractions [\\#222](https://github.com/jazzband/django-silk/pull/222) ([basifat](https://github.com/basifat))\n- gprof2dot had a breaking change in 2017.09.19 [\\#221](https://github.com/jazzband/django-silk/pull/221) ([richardnias](https://github.com/richardnias))\n- Allow prof\\_file to be blank, not null [\\#220](https://github.com/jazzband/django-silk/pull/220) ([richardnias](https://github.com/richardnias))\n- Changed the theme of gprof2dot output to be more inline with rest of silk design [\\#210](https://github.com/jazzband/django-silk/pull/210) ([danielbradburn](https://github.com/danielbradburn))\n- configurable storage class [\\#204](https://github.com/jazzband/django-silk/pull/204) ([smcoll](https://github.com/smcoll))\n- increase Request.prof\\_file max\\_length to 300 [\\#203](https://github.com/jazzband/django-silk/pull/203) ([smcoll](https://github.com/smcoll))\n- \\#33 organise cprofile output as a sortable table [\\#200](https://github.com/jazzband/django-silk/pull/200) ([danielbradburn](https://github.com/danielbradburn))\n- left align pre tag text [\\#199](https://github.com/jazzband/django-silk/pull/199) ([smcoll](https://github.com/smcoll))\n- add .venv\\* to .gitignore [\\#198](https://github.com/jazzband/django-silk/pull/198) ([danielbradburn](https://github.com/danielbradburn))\n- Add missing gprof2dot to setup.py [\\#197](https://github.com/jazzband/django-silk/pull/197) ([danielbradburn](https://github.com/danielbradburn))\n- README changes for visualisation and sql summary table sorting [\\#195](https://github.com/jazzband/django-silk/pull/195) ([danielbradburn](https://github.com/danielbradburn))\n- Added UI element to filter requests by http verb [\\#194](https://github.com/jazzband/django-silk/pull/194) ([danielbradburn](https://github.com/danielbradburn))\n- Sortable sql table [\\#193](https://github.com/jazzband/django-silk/pull/193) ([danielbradburn](https://github.com/danielbradburn))\n- Visualize profile result [\\#192](https://github.com/jazzband/django-silk/pull/192) ([danielbradburn](https://github.com/danielbradburn))\n- Added status code filter [\\#191](https://github.com/jazzband/django-silk/pull/191) ([danielbradburn](https://github.com/danielbradburn))\n- Set jazzband to limit the number of rows of request/response data [\\#190](https://github.com/jazzband/django-silk/pull/190) ([albertyw](https://github.com/albertyw))\n- Add python 3.6 to travis config [\\#189](https://github.com/jazzband/django-silk/pull/189) ([albertyw](https://github.com/albertyw))\n- Add explicit on\\_delete to foreign key and one to one relationships [\\#188](https://github.com/jazzband/django-silk/pull/188) ([albertyw](https://github.com/albertyw))\n- Replace django-silk organization with jazzband [\\#186](https://github.com/jazzband/django-silk/pull/186) ([albertyw](https://github.com/albertyw))\n- Jazzband migration [\\#185](https://github.com/jazzband/django-silk/pull/185) ([mtford90](https://github.com/mtford90))\n- Deprecation: update to warning [\\#177](https://github.com/jazzband/django-silk/pull/177) ([lammertw](https://github.com/lammertw))\n- Add text-align property to pyprofile class for readability [\\#176](https://github.com/jazzband/django-silk/pull/176) ([jeffreyckchau](https://github.com/jeffreyckchau))\n- Mention collectstatic [\\#173](https://github.com/jazzband/django-silk/pull/173) ([goetzk](https://github.com/goetzk))\n\n## [1.0.0](https://github.com/jazzband/django-silk/tree/1.0.0) (2017-03-25)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.7.3...1.0.0)\n\n**Fixed bugs:**\n\n- Silk shows 0 time for all requests? [\\#161](https://github.com/jazzband/django-silk/issues/161)\n- Failed to install index for silk.Request model: \\(1071, 'Specified key was too long; max key length is 767 bytes'\\) [\\#38](https://github.com/jazzband/django-silk/issues/38)\n- IntegrityError: duplicate key value violates unique constraint \"silk\\_response\\_request\\_id\\_key\" [\\#26](https://github.com/jazzband/django-silk/issues/26)\n\n**Closed issues:**\n\n- There is no reference to download a profile [\\#170](https://github.com/jazzband/django-silk/issues/170)\n- Build fails occasionally due to \"missing manage.py\" [\\#32](https://github.com/jazzband/django-silk/issues/32)\n\n**Merged pull requests:**\n\n- Fixes \\#170 [\\#171](https://github.com/jazzband/django-silk/pull/171) ([perdy](https://github.com/perdy))\n- Wheel support [\\#168](https://github.com/jazzband/django-silk/pull/168) ([auvipy](https://github.com/auvipy))\n- Improved MySQL support [\\#167](https://github.com/jazzband/django-silk/pull/167) ([smaccona](https://github.com/smaccona))\n- some style improvements [\\#166](https://github.com/jazzband/django-silk/pull/166) ([auvipy](https://github.com/auvipy))\n- Update travis matrix and requirments dependencies versions [\\#165](https://github.com/jazzband/django-silk/pull/165) ([auvipy](https://github.com/auvipy))\n- Fixes \\#161 [\\#164](https://github.com/jazzband/django-silk/pull/164) ([perdy](https://github.com/perdy))\n\n## [0.7.3](https://github.com/jazzband/django-silk/tree/0.7.3) (2017-02-13)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.7.2...0.7.3)\n\n**Fixed bugs:**\n\n- Profiling files get copied into MEDIA\\_ROOT [\\#151](https://github.com/jazzband/django-silk/issues/151)\n- Bad requirements for postgres based installations [\\#142](https://github.com/jazzband/django-silk/issues/142)\n\n**Closed issues:**\n\n- Middleware setting in Django 1.10 [\\#159](https://github.com/jazzband/django-silk/issues/159)\n- When installing silk asking for mysql library. But I'm using postgresql. [\\#150](https://github.com/jazzband/django-silk/issues/150)\n- No Silk profiling was performed for this request. Use the silk\\_profile decorator/context manager to do so. [\\#147](https://github.com/jazzband/django-silk/issues/147)\n- ProgrammingError on postgresql [\\#146](https://github.com/jazzband/django-silk/issues/146)\n- \\[Error\\]\\[Bug\\]adding silk middleware in MIDDLEWARE causes ImportError [\\#108](https://github.com/jazzband/django-silk/issues/108)\n\n**Merged pull requests:**\n\n- Update middleware setting for Django \\>= 1.10 [\\#160](https://github.com/jazzband/django-silk/pull/160) ([ukjin1192](https://github.com/ukjin1192))\n- Add favorite icons [\\#156](https://github.com/jazzband/django-silk/pull/156) ([phuong](https://github.com/phuong))\n- Bugfix for issue \\#153 [\\#155](https://github.com/jazzband/django-silk/pull/155) ([Drache91](https://github.com/Drache91))\n- Improve profile storage [\\#152](https://github.com/jazzband/django-silk/pull/152) ([r3m0t](https://github.com/r3m0t))\n\n## [0.7.2](https://github.com/jazzband/django-silk/tree/0.7.2) (2016-12-03)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.7.1...0.7.2)\n\n**Closed issues:**\n\n- Pypi version upload [\\#141](https://github.com/jazzband/django-silk/issues/141)\n\n**Merged pull requests:**\n\n- Allow using Django 1.10 MIDDLEWARE setting instead of MIDDLEWARE\\_CLASSES [\\#148](https://github.com/jazzband/django-silk/pull/148) ([lockie](https://github.com/lockie))\n- Travis config to test on the different django database backends. [\\#145](https://github.com/jazzband/django-silk/pull/145) ([mattjegan](https://github.com/mattjegan))\n- Updates exception handling to use Django DatabaseError class [\\#144](https://github.com/jazzband/django-silk/pull/144) ([hanleyhansen](https://github.com/hanleyhansen))\n- Fix for byte string incompatibility in ResponseModelFactory.body\\(\\) on py3 [\\#143](https://github.com/jazzband/django-silk/pull/143) ([aljp](https://github.com/aljp))\n\n## [0.7.1](https://github.com/jazzband/django-silk/tree/0.7.1) (2016-10-01)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.7.0...0.7.1)\n\n**Merged pull requests:**\n\n- Operational Error When Silk Is Used On Big SQL Queries [\\#140](https://github.com/jazzband/django-silk/pull/140) ([hanleyhansen](https://github.com/hanleyhansen))\n\n## [0.7.0](https://github.com/jazzband/django-silk/tree/0.7.0) (2016-09-21)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.6.2...0.7.0)\n\n**Implemented enhancements:**\n\n- Select a path to save profiling files [\\#131](https://github.com/jazzband/django-silk/issues/131)\n\n**Merged pull requests:**\n\n- Remove trailing slashes in MANIFEST.in [\\#139](https://github.com/jazzband/django-silk/pull/139) ([leifdenby](https://github.com/leifdenby))\n- Django 1.10 compatibility [\\#138](https://github.com/jazzband/django-silk/pull/138) ([shanx](https://github.com/shanx))\n- Swap imports to avoid emitting warnings [\\#136](https://github.com/jazzband/django-silk/pull/136) ([blag](https://github.com/blag))\n- Profiler files path configurable [\\#135](https://github.com/jazzband/django-silk/pull/135) ([javaguirre](https://github.com/javaguirre))\n- Fix ignored content body [\\#134](https://github.com/jazzband/django-silk/pull/134) ([aehlke](https://github.com/aehlke))\n- Namespaced loggers [\\#133](https://github.com/jazzband/django-silk/pull/133) ([aehlke](https://github.com/aehlke))\n\n## [0.6.2](https://github.com/jazzband/django-silk/tree/0.6.2) (2016-07-28)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.6.1...0.6.2)\n\n**Closed issues:**\n\n- SnakeViz integration [\\#83](https://github.com/jazzband/django-silk/issues/83)\n\n**Merged pull requests:**\n\n- don't crash when a route is 404 [\\#129](https://github.com/jazzband/django-silk/pull/129) ([chrono](https://github.com/chrono))\n\n## [0.6.1](https://github.com/jazzband/django-silk/tree/0.6.1) (2016-07-13)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.6.0...0.6.1)\n\n**Closed issues:**\n\n- Latest version of django-silk not installing because of missing dependency [\\#127](https://github.com/jazzband/django-silk/issues/127)\n- README.md missing in v0.6 [\\#125](https://github.com/jazzband/django-silk/issues/125)\n\n**Merged pull requests:**\n\n- use any readme [\\#128](https://github.com/jazzband/django-silk/pull/128) ([SzySteve](https://github.com/SzySteve))\n\n## [0.6.0](https://github.com/jazzband/django-silk/tree/0.6.0) (2016-07-12)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5.7...0.6.0)\n\n**Closed issues:**\n\n- Local Dev of Silk. Template Error. [\\#121](https://github.com/jazzband/django-silk/issues/121)\n- Using django six rather then maintaining one [\\#112](https://github.com/jazzband/django-silk/issues/112)\n- PyPi release [\\#106](https://github.com/jazzband/django-silk/issues/106)\n\n**Merged pull requests:**\n\n- update pillow requirement so installation succeeds [\\#124](https://github.com/jazzband/django-silk/pull/124) ([SzySteve](https://github.com/SzySteve))\n- Give users the ability to export .prof binary files for every request [\\#123](https://github.com/jazzband/django-silk/pull/123) ([hanleyhansen](https://github.com/hanleyhansen))\n- Make Silk Great Again and Upgrade Dev Project [\\#122](https://github.com/jazzband/django-silk/pull/122) ([hanleyhansen](https://github.com/hanleyhansen))\n- make file paths clickable that don't start with a slash [\\#120](https://github.com/jazzband/django-silk/pull/120) ([chrono](https://github.com/chrono))\n- clear data store in chunks [\\#119](https://github.com/jazzband/django-silk/pull/119) ([chrono](https://github.com/chrono))\n- remove claim to support django 1.6 [\\#118](https://github.com/jazzband/django-silk/pull/118) ([chrono](https://github.com/chrono))\n- removed six six utils and tests [\\#117](https://github.com/jazzband/django-silk/pull/117) ([auvipy](https://github.com/auvipy))\n- used django utils six instead of sils utls six in some module [\\#116](https://github.com/jazzband/django-silk/pull/116) ([auvipy](https://github.com/auvipy))\n- Lint fix and code cleaning [\\#114](https://github.com/jazzband/django-silk/pull/114) ([auvipy](https://github.com/auvipy))\n- small updates [\\#113](https://github.com/jazzband/django-silk/pull/113) ([auvipy](https://github.com/auvipy))\n- Render function instead of render\\_to\\_response [\\#111](https://github.com/jazzband/django-silk/pull/111) ([auvipy](https://github.com/auvipy))\n- remove south migrations as not needed in less then 1.7 [\\#110](https://github.com/jazzband/django-silk/pull/110) ([auvipy](https://github.com/auvipy))\n- versions upgrade and obsolete versions removal  [\\#109](https://github.com/jazzband/django-silk/pull/109) ([auvipy](https://github.com/auvipy))\n- Supporting django\\<1.8 [\\#107](https://github.com/jazzband/django-silk/pull/107) ([wm3ndez](https://github.com/wm3ndez))\n\n## [0.5.7](https://github.com/jazzband/django-silk/tree/0.5.7) (2016-03-16)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5.6...0.5.7)\n\n**Implemented enhancements:**\n\n- Unittesting [\\#87](https://github.com/jazzband/django-silk/issues/87)\n- Add Ascending/Descending sort order GET parameter in RequestsView [\\#84](https://github.com/jazzband/django-silk/issues/84)\n- Support binary response bodies [\\#1](https://github.com/jazzband/django-silk/issues/1)\n\n**Fixed bugs:**\n\n- TemplateSyntaxError at /silk/ Invalid filter: 'silk\\_date\\_time' [\\#82](https://github.com/jazzband/django-silk/issues/82)\n\n**Closed issues:**\n\n- base64 encoded responses break unit tests for Python3 [\\#98](https://github.com/jazzband/django-silk/issues/98)\n- Refactor Unit Tests to test new sort ordering structure. [\\#96](https://github.com/jazzband/django-silk/issues/96)\n- Running tests from the Travis config file fails because of difference in django-admin/manage.py [\\#91](https://github.com/jazzband/django-silk/issues/91)\n- Support for missing URL names in Django 1.8 and 1.9 [\\#89](https://github.com/jazzband/django-silk/issues/89)\n- UnicodeDecodeError in sql.py: leads to 500 internal error [\\#85](https://github.com/jazzband/django-silk/issues/85)\n\n**Merged pull requests:**\n\n- remove simplejson [\\#105](https://github.com/jazzband/django-silk/pull/105) ([digitaldavenyc](https://github.com/digitaldavenyc))\n- Fixing Depreciation, Saving and Performance Tweaks [\\#104](https://github.com/jazzband/django-silk/pull/104) ([Wrhector](https://github.com/Wrhector))\n- Django 1.9 compatibility for the csrf context processor [\\#100](https://github.com/jazzband/django-silk/pull/100) ([blag](https://github.com/blag))\n- URL patterns are just Python lists for Django 1.9+ [\\#99](https://github.com/jazzband/django-silk/pull/99) ([blag](https://github.com/blag))\n- Refactor Unit Tests to test new sort ordering structure. [\\#97](https://github.com/jazzband/django-silk/pull/97) ([trik](https://github.com/trik))\n- Add Ascending/Descending sort order GET parameter in RequestsView [\\#95](https://github.com/jazzband/django-silk/pull/95) ([trik](https://github.com/trik))\n- Response bodies are now stored b64 encoded \\(support for binary responses\\). [\\#94](https://github.com/jazzband/django-silk/pull/94) ([trik](https://github.com/trik))\n- Unittests for models [\\#93](https://github.com/jazzband/django-silk/pull/93) ([Alkalit](https://github.com/Alkalit))\n- Conditional migration tests [\\#92](https://github.com/jazzband/django-silk/pull/92) ([florisdenhengst](https://github.com/florisdenhengst))\n- Added support for missing URL names in Django 1.8-1.9. [\\#90](https://github.com/jazzband/django-silk/pull/90) ([florisdenhengst](https://github.com/florisdenhengst))\n- Avoid errors when doing migrate command [\\#86](https://github.com/jazzband/django-silk/pull/86) ([msaelices](https://github.com/msaelices))\n- Namespace templatetags so they don't clash with existing application templatetags [\\#81](https://github.com/jazzband/django-silk/pull/81) ([lmortimer](https://github.com/lmortimer))\n- Added the use of Lambdas in settings.py to the README. [\\#77](https://github.com/jazzband/django-silk/pull/77) ([bryson](https://github.com/bryson))\n\n## [0.5.6](https://github.com/jazzband/django-silk/tree/0.5.6) (2015-09-06)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5.5...0.5.6)\n\n**Closed issues:**\n\n- Post-processing static assets fails due to missing font files [\\#51](https://github.com/jazzband/django-silk/issues/51)\n\n**Merged pull requests:**\n\n- Fixed report handling timing not included in meta-timing [\\#76](https://github.com/jazzband/django-silk/pull/76) ([rodcloutier](https://github.com/rodcloutier))\n- Support UUID in request headers [\\#75](https://github.com/jazzband/django-silk/pull/75) ([rodcloutier](https://github.com/rodcloutier))\n- test on latest django versions in travis [\\#72](https://github.com/jazzband/django-silk/pull/72) ([nikolas](https://github.com/nikolas))\n\n## [0.5.5](https://github.com/jazzband/django-silk/tree/0.5.5) (2015-06-04)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5.3...0.5.5)\n\n**Fixed bugs:**\n\n- Pin six.py within silk to avoid version incompatibility. [\\#70](https://github.com/jazzband/django-silk/issues/70)\n\n**Closed issues:**\n\n- IntegrityError: NOT NULL constraint failed: silk\\_request.view\\_name [\\#71](https://github.com/jazzband/django-silk/issues/71)\n\n## [0.5.3](https://github.com/jazzband/django-silk/tree/0.5.3) (2015-06-04)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5.2...0.5.3)\n\n**Closed issues:**\n\n- null value in column \"view\\_name\" violates not-null constraint [\\#66](https://github.com/jazzband/django-silk/issues/66)\n- Migrations do not work with Django 1.5.9 [\\#64](https://github.com/jazzband/django-silk/issues/64)\n\n**Merged pull requests:**\n\n- It's not random, is it? [\\#69](https://github.com/jazzband/django-silk/pull/69) ([peterbe](https://github.com/peterbe))\n- Fix issue when view\\_name was Null [\\#67](https://github.com/jazzband/django-silk/pull/67) ([bartoszhernas](https://github.com/bartoszhernas))\n\n## [0.5.2](https://github.com/jazzband/django-silk/tree/0.5.2) (2015-04-15)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5.1...0.5.2)\n\n**Merged pull requests:**\n\n- Update model\\_factory.py [\\#62](https://github.com/jazzband/django-silk/pull/62) ([karabijavad](https://github.com/karabijavad))\n\n## [0.5.1](https://github.com/jazzband/django-silk/tree/0.5.1) (2015-04-08)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.5...0.5.1)\n\n**Implemented enhancements:**\n\n- UTC time in templates [\\#49](https://github.com/jazzband/django-silk/issues/49)\n\n**Fixed bugs:**\n\n- AttributeError: This StreamingHttpResponse instance has no `content` attribute [\\#50](https://github.com/jazzband/django-silk/issues/50)\n\n**Closed issues:**\n\n- Django 1.8 support [\\#55](https://github.com/jazzband/django-silk/issues/55)\n- Should not have to manually add a logger for silk [\\#53](https://github.com/jazzband/django-silk/issues/53)\n\n## [0.5](https://github.com/jazzband/django-silk/tree/0.5) (2015-04-08)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/v0.4...0.5)\n\n**Implemented enhancements:**\n\n- 'thread.\\_local' object has no attribute 'temp\\_identifier' \\(should log a warning stating that this is likely a middleware issue\\) [\\#52](https://github.com/jazzband/django-silk/issues/52)\n- Check to see if process\\_request of SilkyMiddleware has been called, and issue warnings on middleware placement if not [\\#42](https://github.com/jazzband/django-silk/issues/42)\n- Django 1.7 support [\\#29](https://github.com/jazzband/django-silk/issues/29)\n\n**Fixed bugs:**\n\n- Django 1.5 support broken [\\#60](https://github.com/jazzband/django-silk/issues/60)\n\n**Closed issues:**\n\n- Tests broken [\\#61](https://github.com/jazzband/django-silk/issues/61)\n- Deploying silk site-wide [\\#56](https://github.com/jazzband/django-silk/issues/56)\n- Migration error [\\#54](https://github.com/jazzband/django-silk/issues/54)\n- Silky doesn't work when django.middleware.gzip.GZipMiddleware is enabled [\\#43](https://github.com/jazzband/django-silk/issues/43)\n- static files not found problem [\\#41](https://github.com/jazzband/django-silk/issues/41)\n- No handlers could be found for logger \"silk\" [\\#35](https://github.com/jazzband/django-silk/issues/35)\n\n**Merged pull requests:**\n\n- Add configuration option for custom intercept logic. [\\#59](https://github.com/jazzband/django-silk/pull/59) ([kkaehler](https://github.com/kkaehler))\n- commit\\_on\\_success -\\> atomic, for 1.8, as commit\\_on\\_success was removed [\\#58](https://github.com/jazzband/django-silk/pull/58) ([karabijavad](https://github.com/karabijavad))\n- Update README.md [\\#57](https://github.com/jazzband/django-silk/pull/57) ([karabijavad](https://github.com/karabijavad))\n- Add a Gitter chat badge to README.md [\\#48](https://github.com/jazzband/django-silk/pull/48) ([gitter-badger](https://github.com/gitter-badger))\n- Tox integration added [\\#47](https://github.com/jazzband/django-silk/pull/47) ([brmc](https://github.com/brmc))\n- Edited ReadMe.md to avoid UnicodeDevodeError [\\#44](https://github.com/jazzband/django-silk/pull/44) ([brmc](https://github.com/brmc))\n- Added utf8 in curl query parameters [\\#39](https://github.com/jazzband/django-silk/pull/39) ([ilvar](https://github.com/ilvar))\n- Revert \"Fix errors in manifest file\" [\\#37](https://github.com/jazzband/django-silk/pull/37) ([mtford90](https://github.com/mtford90))\n- Fix IntegrityError caused by Request being saved 'None' raw\\_body [\\#36](https://github.com/jazzband/django-silk/pull/36) ([JannKleen](https://github.com/JannKleen))\n- Fix errors in manifest file [\\#34](https://github.com/jazzband/django-silk/pull/34) ([joaofrancese](https://github.com/joaofrancese))\n\n## [v0.4](https://github.com/jazzband/django-silk/tree/v0.4) (2014-08-17)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.3.2...v0.4)\n\n**Closed issues:**\n\n- Live demo link is broken [\\#30](https://github.com/jazzband/django-silk/issues/30)\n\n**Merged pull requests:**\n\n- Ability to not log every request, optimizations, db\\_index, and a management command [\\#31](https://github.com/jazzband/django-silk/pull/31) ([JoshData](https://github.com/JoshData))\n\n## [0.3.2](https://github.com/jazzband/django-silk/tree/0.3.2) (2014-07-22)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.3.1...0.3.2)\n\n**Fixed bugs:**\n\n- No data profiled [\\#25](https://github.com/jazzband/django-silk/issues/25)\n- Incorrect interface for execute\\_sql [\\#24](https://github.com/jazzband/django-silk/issues/24)\n\n**Closed issues:**\n\n- Don't pin versions in setup.py [\\#23](https://github.com/jazzband/django-silk/issues/23)\n- Ability to clear old runs [\\#14](https://github.com/jazzband/django-silk/issues/14)\n\n**Merged pull requests:**\n\n- Added tests for \\_should\\_intercept and fixed bug with requests not being ... [\\#28](https://github.com/jazzband/django-silk/pull/28) ([mackeian](https://github.com/mackeian))\n- Added missing requirement for running tests: mock [\\#27](https://github.com/jazzband/django-silk/pull/27) ([mackeian](https://github.com/mackeian))\n\n## [0.3.1](https://github.com/jazzband/django-silk/tree/0.3.1) (2014-07-05)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/0.3...0.3.1)\n\n**Implemented enhancements:**\n\n- Conform to charset flag in Content-Type header of request/response [\\#20](https://github.com/jazzband/django-silk/issues/20)\n- Enhance filtering  [\\#17](https://github.com/jazzband/django-silk/issues/17)\n\n**Fixed bugs:**\n\n- Conform to charset flag in Content-Type header of request/response [\\#20](https://github.com/jazzband/django-silk/issues/20)\n- HttpRequest body has UTF-8 Character  causes UnicodeDecodeError ? [\\#19](https://github.com/jazzband/django-silk/issues/19)\n\n**Closed issues:**\n\n- Problems with `six.moves.urllib` [\\#22](https://github.com/jazzband/django-silk/issues/22)\n- Incorrect string value: '\\xCE\\xBB, \\xCF\\x86...' for column 'raw\\_body' at row 1 [\\#21](https://github.com/jazzband/django-silk/issues/21)\n- Silk fails on binary staticfiles content [\\#16](https://github.com/jazzband/django-silk/issues/16)\n- Silk's static assets are served from the wrong path [\\#11](https://github.com/jazzband/django-silk/issues/11)\n\n## [0.3](https://github.com/jazzband/django-silk/tree/0.3) (2014-06-17)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/V0.2.2...0.3)\n\n## [V0.2.2](https://github.com/jazzband/django-silk/tree/V0.2.2) (2014-06-13)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/v0.2.2...V0.2.2)\n\n## [v0.2.2](https://github.com/jazzband/django-silk/tree/v0.2.2) (2014-06-13)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/v0.2...v0.2.2)\n\n**Closed issues:**\n\n- request: timestamp on list of requests [\\#15](https://github.com/jazzband/django-silk/issues/15)\n- AttributeError: 'thread.\\_local' object has no attribute 'temp\\_identifier' [\\#12](https://github.com/jazzband/django-silk/issues/12)\n\n## [v0.2](https://github.com/jazzband/django-silk/tree/v0.2) (2014-06-12)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/v0.1.1...v0.2)\n\n**Fixed bugs:**\n\n- Stacktrace inspector allows users to see any file on the filesystem [\\#10](https://github.com/jazzband/django-silk/issues/10)\n\n## [v0.1.1](https://github.com/jazzband/django-silk/tree/v0.1.1) (2014-06-07)\n[Full Changelog](https://github.com/jazzband/django-silk/compare/v0.1...v0.1.1)\n\n**Closed issues:**\n\n- Pip install direct from repo fails [\\#9](https://github.com/jazzband/django-silk/issues/9)\n- urls.py uses incorrect regex expressions [\\#7](https://github.com/jazzband/django-silk/issues/7)\n- requirements.txt must specify exact versions or version upper bounds [\\#6](https://github.com/jazzband/django-silk/issues/6)\n- Switch to PyPI for managing releases [\\#4](https://github.com/jazzband/django-silk/issues/4)\n\n**Merged pull requests:**\n\n- Ensure README file is properly closed by setup.py [\\#8](https://github.com/jazzband/django-silk/pull/8) ([svisser](https://github.com/svisser))\n- updated readme [\\#5](https://github.com/jazzband/django-silk/pull/5) ([rosscdh](https://github.com/rosscdh))\n\n## [v0.1](https://github.com/jazzband/django-silk/tree/v0.1) (2014-06-06)\n\n\n\\* *This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*⏎\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.3193359375,
          "content": "# Code of Conduct\n\nAs contributors and maintainers of the Jazzband projects, and in the interest of\nfostering an open and welcoming community, we pledge to respect all people who\ncontribute through reporting issues, posting feature requests, updating documentation,\nsubmitting pull requests or patches, and other activities.\n\nWe are committed to making participation in the Jazzband a harassment-free experience\nfor everyone, regardless of the level of experience, gender, gender identity and\nexpression, sexual orientation, disability, personal appearance, body size, race,\nethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery\n- Personal attacks\n- Trolling or insulting/derogatory comments\n- Public or private harassment\n- Publishing other's private information, such as physical or electronic addresses,\n  without explicit permission\n- Other unethical or unprofessional conduct\n\nThe Jazzband roadies have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are not\naligned to this Code of Conduct, or to ban temporarily or permanently any contributor\nfor other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\nBy adopting this Code of Conduct, the roadies commit themselves to fairly and\nconsistently applying these principles to every aspect of managing the jazzband\nprojects. Roadies who do not follow or enforce the Code of Conduct may be permanently\nremoved from the Jazzband roadies.\n\nThis code of conduct applies both within project spaces and in public spaces when an\nindividual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by\ncontacting the roadies at `roadies@jazzband.co`. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and appropriate to\nthe circumstances. Roadies are obligated to maintain confidentiality with regard to the\nreporter of an incident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version\n1.3.0, available at [https://contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: https://contributor-covenant.org\n[version]: https://contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.30078125,
          "content": "[![Jazzband](https://jazzband.co/static/img/jazzband.svg)](https://jazzband.co/)\n\nThis is a [Jazzband](https://jazzband.co/) project. By contributing you agree to abide by the [Contributor Code of Conduct](https://jazzband.co/about/conduct) and follow the [guidelines](https://jazzband.co/about/guidelines).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Michael Ford\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2705078125,
          "content": "include LICENSE\ninclude README*\nrecursive-include silk/templates *\nrecursive-include silk/static *\nrecursive-include silk/code_generation *.py\nrecursive-include silk/profiling *.py\nrecursive-include silk/utils *.py\nrecursive-include silk/views *.py\nrecursive-include silk *.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.1416015625,
          "content": "# Silk\n\n[![GitHub Actions](https://github.com/jazzband/django-silk/workflows/Test/badge.svg)](https://github.com/jazzband/django-silk/actions)\n[![GitHub Actions](https://codecov.io/gh/jazzband/django-silk/branch/master/graph/badge.svg)](https://codecov.io/gh/jazzband/django-silk)\n[![PyPI Download](https://img.shields.io/pypi/v/django-silk.svg)](https://pypi.python.org/pypi/django-silk)\n[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/django-silk.svg)](https://pypi.python.org/pypi/django-silk)\n[![Supported Django versions](https://img.shields.io/pypi/djversions/django-silk.svg)](https://pypi.python.org/pypi/django-silk)\n[![Jazzband](https://jazzband.co/static/img/badge.svg)](https://jazzband.co/)\n\nSilk is a live profiling and inspection tool for the Django framework. Silk intercepts and stores HTTP requests and database queries before presenting them in a user interface for further inspection:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/1.png\" width=\"720px\"/>\n\n## Contents\n\n* [Requirements](#requirements)\n* [Installation](#installation)\n* [Features](#features)\n* [Configuration](#configuration)\n  * [Authentication/Authorisation](#authenticationauthorisation)\n  * [Request/Response bodies](#requestresponse-bodies)\n  * [Meta-Profiling](#meta-profiling)\n  * [Recording a fraction of requests](#recording-a-fraction-of-requests)\n  * [Limiting request/response data](#limiting-requestresponse-data)\n  * [Clearing logged data](#clearing-logged-data)\n* [Contributing](#contributing)\n  * [Development Environment](#development-environment)\n\n## Requirements\n\nSilk has been tested with:\n\n* Django: 4.2, 5.0, 5.1\n* Python: 3.9, 3.10, 3.11, 3.12, 3.13\n\n## Installation\n\nVia pip into a `virtualenv`:\n\n```bash\npip install django-silk\n```\n\nIn `settings.py` add the following:\n\n```python\nMIDDLEWARE = [\n    ...\n    'silk.middleware.SilkyMiddleware',\n    ...\n]\n\nINSTALLED_APPS = (\n    ...\n    'silk'\n)\n```\n\n**Note:** The order of middleware is sensitive. If any middleware placed before `silk.middleware.SilkyMiddleware` returns a response without invoking its `get_response`, the `SilkyMiddleware` won’t run. To avoid this, ensure that middleware preceding `SilkyMiddleware` does not bypass or return a response without calling its `get_response`. For further details, check out the [Django documentation](https://docs.djangoproject.com/en/dev/topics/http/middleware/#middleware-order-and-layering).\n\n**Note:** If you are using `django.middleware.gzip.GZipMiddleware`, place that **before** `silk.middleware.SilkyMiddleware`, otherwise you will get an encoding error.\n\nIf you want to use custom middleware, for example you developed the subclass of `silk.middleware.SilkyMiddleware`, so you can use this combination of settings:\n\n```python\n# Specify the path where is the custom middleware placed\nSILKY_MIDDLEWARE_CLASS = 'path.to.your.middleware.MyCustomSilkyMiddleware'\n\n# Use this variable in list of middleware\nMIDDLEWARE = [\n    ...\n    SILKY_MIDDLEWARE_CLASS,\n    ...\n]\n```\n\nTo enable access to the user interface add the following to your `urls.py`:\n\n```python\nurlpatterns += [path('silk/', include('silk.urls', namespace='silk'))]\n```\n\nbefore running migrate:\n\n```bash\npython manage.py migrate\n\npython manage.py collectstatic\n```\n\n\nSilk will automatically begin interception of requests and you can proceed to add profiling\nif required. The UI can be reached at `/silk/`\n\n### Alternative Installation\n\nVia [github tags](https://github.com/jazzband/django-silk/releases):\n\n```bash\npip install https://github.com/jazzband/silk/archive/<version>.tar.gz\n```\n\nYou can install from master using the following, but please be aware that the version in master\nmay not be working for all versions specified in [requirements](#requirements)\n\n```bash\npip install -e git+https://github.com/jazzband/django-silk.git#egg=django-silk\n```\n\n## Features\n\nSilk primarily consists of:\n\n* Middleware for intercepting Requests/Responses\n* A wrapper around SQL execution for profiling of database queries\n* A context manager/decorator for profiling blocks of code and functions either manually or dynamically.\n* A user interface for inspection and visualisation of the above.\n\n### Request Inspection\n\nThe Silk middleware intercepts and stores requests and responses in the configured database.\nThese requests can then be filtered and inspecting using Silk's UI through the request overview:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/1.png\" width=\"720px\"/>\n\nIt records things like:\n\n* Time taken\n* Num. queries\n* Time spent on queries\n* Request/Response headers\n* Request/Response bodies\n\nand so on.\n\nFurther details on each request are also available by clicking the relevant request:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/2.png\" width=\"720px\"/>\n\n### SQL Inspection\n\nSilk also intercepts SQL queries that are generated by each request. We can get a summary on things like\nthe tables involved, number of joins and execution time (the table can be sorted by clicking on a column header):\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/3.png\" width=\"720px\"/>\n\nBefore diving into the stack trace to figure out where this request is coming from:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/5.png\" width=\"720px\"/>\n\n### Profiling\n\nTurn on the SILKY_PYTHON_PROFILER setting to use Python's built-in `cProfile` profiler. Each request will be separately profiled and the profiler's output will be available on the request's Profiling page in the Silk UI.  Note that as of Python 3.12, `cProfile` cannot run concurrently so [django-silk under Python 3.12 and later will not profile if another profile is running](https://github.com/jazzband/django-silk/pull/692) (even its own profiler in another thread).\n\n```python\nSILKY_PYTHON_PROFILER = True\n```\n\nIf you would like to also generate a binary `.prof` file set the following:\n\n```python\nSILKY_PYTHON_PROFILER_BINARY = True\n```\n\nWhen enabled, a graph visualisation generated using [gprof2dot](https://github.com/jrfonseca/gprof2dot) and [viz.js](https://github.com/almende/vis) is shown in the profile detail page:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/10.png\" width=\"720px\"/>\n\n\nA custom storage class can be used for the saved generated binary `.prof` files:\n\n```python\n# For Django >= 4.2 and Django-Silk >= 5.1.0:\n# See https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-STORAGES\nSTORAGES = {\n    'SILKY_STORAGE': {\n        'BACKEND': 'path.to.StorageClass',\n    },\n    # ...\n}\n\n# For Django < 4.2 or Django-Silk < 5.1.0\nSILKY_STORAGE_CLASS = 'path.to.StorageClass'\n```\n\nThe default storage class is `silk.storage.ProfilerResultStorage`, and when using that you can specify a path of your choosing. You must ensure the specified directory exists.\n\n```python\n# If this is not set, MEDIA_ROOT will be used.\nSILKY_PYTHON_PROFILER_RESULT_PATH = '/path/to/profiles/'\n```\n\nA download button will become available with a binary `.prof` file for every request. This file can be used for further analysis using [snakeviz](https://github.com/jiffyclub/snakeviz) or other cProfile tools\n\nTo retrieve which endpoint generates a specific profile file it is possible to add a stub of the request path in the file name with the following:\n\n```python\nSILKY_PYTHON_PROFILER_EXTENDED_FILE_NAME = True\n```\n\nSilk can also be used to profile specific blocks of code/functions. It provides a decorator and a context\nmanager for this purpose.\n\nFor example:\n\n```python\nfrom silk.profiling.profiler import silk_profile\n\n\n@silk_profile(name='View Blog Post')\ndef post(request, post_id):\n    p = Post.objects.get(pk=post_id)\n    return render(request, 'post.html', {\n        'post': p\n    })\n```\n\nWhenever a blog post is viewed we get an entry within the Silk UI:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/7.png\" width=\"720px\"/>\n\nSilk profiling not only provides execution time, but also collects SQL queries executed within the block in the same fashion as with requests:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/8.png\" width=\"720px\"/>\n\n#### Decorator\n\nThe silk decorator can be applied to both functions and methods\n\n```python\nfrom silk.profiling.profiler import silk_profile\n\n\n# Profile a view function\n@silk_profile(name='View Blog Post')\ndef post(request, post_id):\n    p = Post.objects.get(pk=post_id)\n    return render(request, 'post.html', {\n        'post': p\n    })\n\n\n# Profile a method in a view class\nclass MyView(View):\n    @silk_profile(name='View Blog Post')\n    def get(self, request):\n        p = Post.objects.get(pk=post_id)\n        return render(request, 'post.html', {\n            'post': p\n        })\n```\n\n#### Context Manager\n\nUsing a context manager means we can add additional context to the name which can be useful for\nnarrowing down slowness to particular database records.\n\n```python\ndef post(request, post_id):\n    with silk_profile(name='View Blog Post #%d' % self.pk):\n        p = Post.objects.get(pk=post_id)\n        return render(request, 'post.html', {\n            'post': p\n        })\n```\n\n#### Dynamic Profiling\n\nOne of Silk's more interesting features is dynamic profiling. If for example we wanted to profile a function in a dependency to which we only have read-only access (e.g. system python libraries owned by root) we can add the following to `settings.py` to apply a decorator at runtime:\n\n```python\nSILKY_DYNAMIC_PROFILING = [{\n    'module': 'path.to.module',\n    'function': 'MyClass.bar'\n}]\n```\n\nwhich is roughly equivalent to:\n\n```python\nclass MyClass:\n    @silk_profile()\n    def bar(self):\n        pass\n```\n\nThe below summarizes the possibilities:\n\n```python\n\n\"\"\"\nDynamic function decorator\n\"\"\"\n\nSILKY_DYNAMIC_PROFILING = [{\n    'module': 'path.to.module',\n    'function': 'foo'\n}]\n\n# ... is roughly equivalent to\n@silk_profile()\ndef foo():\n    pass\n\n\"\"\"\nDynamic method decorator\n\"\"\"\n\nSILKY_DYNAMIC_PROFILING = [{\n    'module': 'path.to.module',\n    'function': 'MyClass.bar'\n}]\n\n# ... is roughly equivalent to\nclass MyClass:\n\n    @silk_profile()\n    def bar(self):\n        pass\n\n\"\"\"\nDynamic code block profiling\n\"\"\"\n\nSILKY_DYNAMIC_PROFILING = [{\n    'module': 'path.to.module',\n    'function': 'foo',\n    # Line numbers are relative to the function as opposed to the file in which it resides\n    'start_line': 1,\n    'end_line': 2,\n    'name': 'Slow Foo'\n}]\n\n# ... is roughly equivalent to\ndef foo():\n    with silk_profile(name='Slow Foo'):\n        print (1)\n        print (2)\n    print(3)\n    print(4)\n```\n\nNote that dynamic profiling behaves in a similar fashion to that of the python mock framework in that\nwe modify the function in-place e.g:\n\n```python\n\"\"\" my.module \"\"\"\nfrom another.module import foo\n\n# ...do some stuff\nfoo()\n# ...do some other stuff\n```\n\n,we would profile `foo` by dynamically decorating `my.module.foo` as opposed to `another.module.foo`:\n\n```python\nSILKY_DYNAMIC_PROFILING = [{\n    'module': 'my.module',\n    'function': 'foo'\n}]\n```\n\nIf we were to apply the dynamic profile to the functions source module `another.module.foo` **after**\nit has already been imported, no profiling would be triggered.\n\n\n#### Custom Logic for Profiling\n\nSometimes you may want to dynamically control when the profiler runs. You can write your own logic for when to enable the profiler. To do this add the following to your `settings.py`:\n\nThis setting is mutually exclusive with SILKY_PYTHON_PROFILER and will be used over it if present. It will work with SILKY_DYNAMIC_PROFILING.\n\n```python\ndef my_custom_logic(request):\n    return 'profile_requests' in request.session\n\nSILKY_PYTHON_PROFILER_FUNC = my_custom_logic # profile only session has recording enabled.\n```\n\nYou can also use a `lambda`.\n\n```python\n# profile only session has recording enabled.\nSILKY_PYTHON_PROFILER_FUNC = lambda request: 'profile_requests' in request.session\n```\n\n### Code Generation\n\nSilk currently generates two bits of code per request:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/9.png\" width=\"720px\"/>\n\nBoth are intended for use in replaying the request. The curl command can be used to replay via command-line and the python code can be used within a Django unit test or simply as a standalone script.\n\n## Configuration\n\n### Authentication/Authorisation\n\nBy default anybody can access the Silk user interface by heading to `/silk/`. To enable your Django\nauth backend place the following in `settings.py`:\n\n```python\nSILKY_AUTHENTICATION = True  # User must login\nSILKY_AUTHORISATION = True  # User must have permissions\n```\n\nIf `SILKY_AUTHORISATION` is `True`, by default Silk will only authorise users with `is_staff` attribute set to `True`.\n\nYou can customise this using the following in `settings.py`:\n\n```python\ndef my_custom_perms(user):\n    return user.is_allowed_to_use_silk\n\nSILKY_PERMISSIONS = my_custom_perms\n```\n\nYou can also use a `lambda`.\n\n```python\nSILKY_PERMISSIONS = lambda user: user.is_superuser\n```\n\n### Request/Response bodies\n\nBy default, Silk will save down the request and response bodies for each request for future viewing\nno matter how large. If Silk is used in production under heavy volume with large bodies this can have\na huge impact on space/time performance. This behaviour can be configured with the following options:\n\n```python\nSILKY_MAX_REQUEST_BODY_SIZE = -1  # Silk takes anything <0 as no limit\nSILKY_MAX_RESPONSE_BODY_SIZE = 1024  # If response body>1024 bytes, ignore\n```\n\n### Meta-Profiling\n\nSometimes it is useful to be able to see what effect Silk is having on the request/response time. To do this add\nthe following to your `settings.py`:\n\n```python\nSILKY_META = True\n```\n\nSilk will then record how long it takes to save everything down to the database at the end of each\nrequest:\n\n<img src=\"https://raw.githubusercontent.com/jazzband/django-silk/master/screenshots/meta.png\"/>\n\nNote that in the above screenshot, this means that the request took 29ms (22ms from Django and 7ms from Silk)\n\n### Recording a Fraction of Requests\n\nOn high-load sites it may be helpful to only record a fraction of the requests that are made. To do this add the following to your `settings.py`:\n\nNote: This setting is mutually exclusive with SILKY_INTERCEPT_FUNC.\n\n```python\nSILKY_INTERCEPT_PERCENT = 50 # log only 50% of requests\n```\n\n#### Custom Logic for Recording Requests\n\nOn high-load sites it may also be helpful to write your own logic for when to intercept requests. To do this add the following to your `settings.py`:\n\nNote: This setting is mutually exclusive with SILKY_INTERCEPT_PERCENT.\n\n```python\ndef my_custom_logic(request):\n    return 'record_requests' in request.session\n\nSILKY_INTERCEPT_FUNC = my_custom_logic # log only session has recording enabled.\n```\n\nYou can also use a `lambda`.\n\n```python\n# log only session has recording enabled.\nSILKY_INTERCEPT_FUNC = lambda request: 'record_requests' in request.session\n```\n\n### Limiting request/response data\n\nTo make sure silky garbage collects old request/response data, a config var can be set to limit the number of request/response rows it stores.\n\n```python\nSILKY_MAX_RECORDED_REQUESTS = 10**4\n```\n\nThe garbage collection is only run on a percentage of requests to reduce overhead.  It can be adjusted with this config:\n\n```python\nSILKY_MAX_RECORDED_REQUESTS_CHECK_PERCENT = 10\n```\n\nIn case you want decouple silk's garbage collection from your webserver's request processing, set SILKY_MAX_RECORDED_REQUESTS_CHECK_PERCENT=0 and trigger it manually, e.g. in a cron job:\n\n```bash\npython manage.py silk_request_garbage_collect\n```\n\n### Enable query analysis\n\nTo enable query analysis when supported by the dbms a config var can be set in order to execute queries with the analyze features.\n\n```python\nSILKY_ANALYZE_QUERIES = True\n```\n\n**Warning:** This setting may cause the database to execute the same query twice, depending on the backend. For instance, `EXPLAIN ANALYZE` in Postgres will [actually execute the query](https://www.postgresql.org/docs/current/sql-explain.html), which may result in unexpected data updates. Set this to True with caution.\n\nTo pass additional params for profiling when supported by the dbms (e.g. VERBOSE, FORMAT JSON), you can do this in the following manner.\n\n```python\nSILKY_EXPLAIN_FLAGS = {'format':'JSON', 'costs': True}\n```\n\n\n### Masking sensitive data on request body\n\nBy default, Silk is filtering values that contains the following keys (they are case insensitive)\n\n```python\nSILKY_SENSITIVE_KEYS = {'username', 'api', 'token', 'key', 'secret', 'password', 'signature'}\n```\n\nBut sometimes, you might want to have your own sensitive keywords, then above configuration can be modified\n\n```python\nSILKY_SENSITIVE_KEYS = {'custom-password'}\n```\n\n\n### Clearing logged data\n\nA management command will wipe out all logged data:\n\n```bash\npython manage.py silk_clear_request_log\n```\n\n## Contributing\n\n[![Jazzband](https://jazzband.co/static/img/jazzband.svg)](https://jazzband.co/)\n\nThis is a [Jazzband](https://jazzband.co/) project. By contributing you agree to abide by the [Contributor Code of Conduct](https://jazzband.co/about/conduct) and follow the [guidelines](https://jazzband.co/about/guidelines).\n\n### Development Environment\n\nSilk features a project named `project` that can be used for `silk` development. It has the `silk` code symlinked so\nyou can work on the sample `project` and on the `silk` package at the same time.\n\nIn order to setup local development you should first install all the dependencies for the test `project`. From the\nroot of the `project` directory:\n\n```bash\npip install -r requirements.txt\n```\n\nYou will also need to install `silk`'s dependencies. From the root of the git repository:\n\n```bash\npip install -e .\n```\n\nAt this point your virtual environment should have everything it needs to run both the sample `project` and\n`silk` successfully.\n\nBefore running, you must set the `DB_ENGINE` and `DB_NAME` environment variables:\n\n```bash\nexport DB_ENGINE=sqlite3\nexport DB_NAME=db.sqlite3\n```\n\nFor other combinations, check [`tox.ini`](./tox.ini).\n\nNow from the root of the sample `project` apply the migrations\n\n```bash\npython manage.py migrate\n```\n\nNow from the root of the sample `project` directory start the django server\n\n```bash\npython manage.py runserver\n```\n\n#### Running the tests\n\n```bash\ncd project\npython manage.py test\n```\n\nHappy profiling!\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.js",
          "type": "blob",
          "size": 0.3212890625,
          "content": "let gulp = require('gulp'),\n    sass = require('gulp-sass');\n\n\ngulp.task('watch', function () {\n    gulp.watch('scss/**/*.scss', gulp.series('sass'));\n});\n\ngulp.task('sass', function () {\n    return gulp.src('scss/**/*.scss')\n        .pipe(sass().on('error', sass.logError))\n        .pipe(gulp.dest('silk/static/silk/css'));\n});\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.6181640625,
          "content": "{\n  \"name\": \"silk\",\n  \"version\": \"5.3.2\",\n  \"description\": \"https://github.com/jazzband/django-silk\",\n  \"main\": \"index.js\",\n  \"directories\": {\n    \"doc\": \"docs\",\n    \"test\": \"tests\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/jazzband/django-silk.git\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"bugs\": {\n    \"url\": \"https://github.com/jazzband/django-silk/issues\"\n  },\n  \"homepage\": \"https://github.com/jazzband/django-silk\",\n  \"devDependencies\": {\n    \"gulp\": \"^4.0.2\",\n    \"gulp-sass\": \"^4.0.2\"\n  },\n  \"dependencies\": {}\n}\n"
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.056640625,
          "content": "[tool.autopep8]\nignore = \"E501,E203,W503\"\nin-place = true\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.2138671875,
          "content": "[pytest]\naddopts = --cov silk --cov-config .coveragerc --cov-append --cov-report term --cov-report=xml\npython_files = test.py tests.py test_*.py tests_*.py *_tests.py *_test.py\nDJANGO_SETTINGS_MODULE = project.settings\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1484375,
          "content": "coverage==7.6.8\nfactory-boy==3.3.1\nfreezegun==1.5.1\nnetworkx==3.2.1\npillow==11.0.0\npydot==3.0.3\npygments==2.18.0\npytest-cov==6.0.0\npytest-django==4.9.0\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "scss",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.48828125,
          "content": "import os\n\nfrom setuptools import setup\n\n# allow setup.py to be run from any path\nos.chdir(os.path.normpath(os.path.join(os.path.abspath(__file__), os.pardir)))\n\nsetup(\n    name='django-silk',\n    use_scm_version=True,\n    packages=['silk'],\n    include_package_data=True,\n    license='MIT License',\n    description='Silky smooth profiling for the Django Framework',\n    long_description=open('README.md').read(),\n    long_description_content_type='text/markdown',\n    url='https://github.com/jazzband/django-silk',\n    author='Michael Ford',\n    author_email='mtford@gmail.com',\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Web Environment',\n        'Framework :: Django',\n        'Framework :: Django :: 4.2',\n        'Framework :: Django :: 5.0',\n        'Framework :: Django :: 5.1',\n        'Intended Audience :: Developers',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: 3.13',\n        'Topic :: Internet :: WWW/HTTP',\n        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',\n    ],\n    install_requires=[\n        'Django>=4.2',\n        'sqlparse',\n        'autopep8',\n        'gprof2dot>=2017.09.19',\n    ],\n    python_requires='>=3.9',\n    setup_requires=['setuptools_scm'],\n)\n"
        },
        {
          "name": "silk.sublime-project",
          "type": "blob",
          "size": 0.3232421875,
          "content": "{\n    \"folders\": [{\n        \"follow_symlinks\": true,\n        \"path\": \".\",\n        \"folder_exclude_patterns\": [\n            \".idea\",\n            \"bower_components\",\n            \"node_modules\"\n        ],\n        \"file_exclude_patterns\": [\n            \".gitmodules\",\n            \".gitignore\",\n            \"LICENSE\"\n        ]\n    }]\n}\n"
        },
        {
          "name": "silk",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.1181640625,
          "content": "[gh-actions]\npython =\n    3.9: py39\n    3.10: py310\n    3.11: py311\n    3.12: py312\n    3.13: py313\n\n[gh-actions:env]\nDJANGO =\n    4.2: dj42\n    5.0: dj50\n    5.1: dj51\n    main: djmain\n\n[tox]\nenvlist =\n    py{38,39,310,311,312,313}-dj42-{sqlite3,mysql,postgresql}\n    py{310,311,312,313}-dj{50,51,main}-{sqlite3,mysql,postgresql}\n\n[testenv]\nusedevelop = True\nignore_outcome =\n    djmain: True\nchangedir = {toxinidir}/project\ndeps =\n    -rrequirements.txt\n    mysql: mysqlclient\n    postgresql: psycopg2-binary\n    dj42: django>=4.2,<4.3\n    dj50: django>=5.0,<5.1\n    dj51: django>=5.1,<5.2\n    djmain: https://github.com/django/django/archive/main.tar.gz\n    py312: setuptools\n    py313: setuptools\nsetenv =\n    PYTHONPATH={toxinidir}:{toxinidir}\n    PYTHONDONTWRITEBYTECODE=1\n    sqlite3: DB_ENGINE=sqlite3\n    sqlite3: DB_NAME=\":memory:\"\n    mysql: DB_ENGINE=mysql\n    mysql: DB_NAME=mysql\n    mysql: DB_USER=root\n    mysql: DB_PASSWORD=mysql\n    mysql: DB_PORT=3306\n    postgresql: DB_ENGINE=postgresql\n    postgresql: DB_NAME=postgres\n    postgresql: DB_PASSWORD=postgres\ncommands = pytest\n\n[flake8]\nignore = \n    E501,\n    E203,\n    W503\n"
        },
        {
          "name": "web.psd",
          "type": "blob",
          "size": 2485.1142578125,
          "content": null
        }
      ]
    }
  ]
}