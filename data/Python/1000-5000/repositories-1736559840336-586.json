{
  "metadata": {
    "timestamp": 1736559840336,
    "page": 586,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dry-python/returns",
      "stars": 3730,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.291015625,
          "content": "# Check http://editorconfig.org for more information\n# This is the main config file for this project:\nroot = true\n\n[*]\ncharset = utf-8\ntrim_trailing_whitespace = true\nend_of_line = lf\nindent_style = space\ninsert_final_newline = true\nindent_size = 2\n\n[*.py]\nindent_size = 4\n\n[*.pyi]\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.876953125,
          "content": "#### joe made this: http://goel.io/joe\n#### python ####\n# Byte-compiled / optimized / DLL files\n.pytest_cache\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\npip-wheel-metadata/\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n#### macos ####\n# General\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n#### windows ####\n# Windows thumbnail cache files\nThumbs.db\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n#### linux ####\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n#### jetbrains ####\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff:\n.idea/\n\n## File-based project format:\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n### Custom ###\nex.py\nexperiments/\n.vscode/tags\n.pyre\n.pytype\nbuild/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.5146484375,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n      - id: check-yaml\n      - id: check-toml\n      - id: check-merge-conflict\n      - id: mixed-line-ending\n        args: [--fix=lf]\n      - id: check-case-conflict\n  - repo: https://github.com/python-jsonschema/check-jsonschema\n    rev: 0.30.0\n    hooks:\n      - id: check-dependabot\n      - id: check-readthedocs\n      - id: check-github-workflows\n  - repo: https://github.com/rhysd/actionlint\n    rev: v1.7.6\n    hooks:\n      - id: actionlint\n  - repo: https://github.com/woodruffw/zizmor-pre-commit\n    rev: v1.0.0\n    hooks:\n      - id: zizmor\n  - repo: https://github.com/shellcheck-py/shellcheck-py\n    rev: v0.10.0.1\n    hooks:\n      - id: shellcheck\n  - repo: https://github.com/tox-dev/pyproject-fmt\n    rev: v2.5.0\n    hooks:\n      - id: pyproject-fmt\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff\n        args: [\"--exit-non-zero-on-fix\"]\n      - id: ruff-format\n  - repo: https://github.com/sphinx-contrib/sphinx-lint\n    rev: v1.0.0\n    hooks:\n      - id: sphinx-lint\n        args: [--enable=default-role]\n        files: ^docs/\n\n  # Should be the last:\n  - repo: meta\n    hooks:\n      - id: check-useless-excludes\n\nci:\n  autofix_commit_msg: \"[pre-commit.ci] auto fixes from pre-commit.com hooks\"\n  autofix_prs: true\n  autoupdate_commit_msg: \"[pre-commit.ci] pre-commit autoupdate\"\n  autoupdate_schedule: weekly\n  submodules: false\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.66796875,
          "content": "# .readthedocs.yml\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-lts-latest\n  tools: {python: \"3.11\"}\n  jobs:\n    pre_create_environment:\n      - asdf plugin add poetry\n      - asdf install poetry latest\n      - asdf global poetry latest\n      - poetry config virtualenvs.create false\n      - poetry self add poetry-plugin-export\n      - poetry export --only main --only docs --extras check_laws --format=requirements.txt --output=requirements.txt\n\npython:\n  install:\n    - requirements: requirements.txt\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n  fail_on_warning: true\n\nformats: all\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 19.8642578125,
          "content": "# Version history\n\nWe follow Semantic Versions since the `1.0.0` release.\nVersions before `1.0.0` are `0Ver`-based:\nincremental in minor, bugfixes only are patches.\nSee [0Ver](https://0ver.org/).\n\n\n## 0.24.0\n\n### Features\n\n- Drop `python3.9` support\n- Add `python3.13` support\n- Add support for `mypy>=1.12`\n- Add picky exceptions to `future_safe` decorator like `safe` has\n- Improve inference of `ResultLike` objects when exception catching\n  decorator is applied with explicit exception types\n- Add picky exceptions to `impure_safe` decorator like `safe` has. Issue #1543\n- Add partition function to result module. Issue #1905\n- Add `default_error` parameter to `returns.converters.maybe_to_result`,\n  which provides a default error value for `Failure`\n\n\n## 0.23.0\n\n### Features\n\n- *Breaking*: Remove `success_type` and `failure_type` fields from `IOResult`,\n  `Maybe` and `Result` types\n\n### Misc\n\n- Now requires `mypy>=1.10`\n- Adds `[check-laws]` extra for installation\n\n\n## 0.22.0\n\n### Features\n\n- *Breaking*: Drops `python3.7` support\n- Now requires `mypy>=1.5`\n- Adds `trampolines` support\n\n\n## 0.21.0\n\n### Features\n\n- Now requires `mypy>=1.4`\n- Adds `[compatible-mypy]` extra for installation\n\n\n## 0.20.1\n\n### Bugfixes\n\n- Fixed HKT `to_str` example in documentation\n- Fixed backward deserialization compatibility for BaseContainer\n\n\n## 0.20.0\n\n### Features\n\n- Now requires `mypy>=1.2`\n\n### Bugfixes\n\n- Fixes a problem with `do-notation` and type aliases\n- Fixes custom pickle protocol to handle `None` values gracefully\n- Removes broken drylabs.io link in README\n- Revises pointfree documentation\n\n\n## 0.19.0 aka The Do Notation\n\n### Features\n\n- Adds `do` notation\n- Adds `attempt` decorator\n\n### Misc\n\n- Check ``__slots__`` correctness with `slotscheck`\n\n\n## 0.18.0\n\nNew Year Release! 🎄\n\n### Features\n\n- Now requires `typing_extensions>=4.0`\n- Now requires `mypy>=0.930`\n- Removes plugin for `@safe`, `@maybe`, `@future`, etc.\n  Because we now use `ParamSpec` type to properly type decorators\n\n### Bugfixes\n\n- Fixes `__slots__` not being set properly in containers and their base classes\n- Fixes patching of containers in pytest plugin not undone after each test\n\n\n## 0.17.0\n\n### Features\n\n- Enables Pattern Matching support for `Result` containers\n- Enables Pattern Matching support for `Maybe` container\n- Enables Pattern Matching support for `IOResult` container\n- Improves `hypothesis` plugin, now we detect\n  when type cannot be constructed and give a clear error message\n- Adds the option to pass what exceptions `@safe` will handle\n\n\n## 0.16.0\n\n### Features\n\n- Makes `_Nothing` a singleton\n- Refactor `flow` function to be faster\n\n### Bugfixes\n\n- Fixes that `assert_trace` was not catching containers\n  from `@safe`-wrapped functions\n\n### Misc\n\n- Fixes typos in documentation\n\n\n## 0.15.0 aka The initial HKT release\n\n### Features\n\n- Adds Higher Kinded Types partial support\n\n- **Breaking**: drops `python3.6` support\n- **Breaking**: makes our `mypy` plugin not optional, but required!\n- **Breaking**: changes all `RequiresContext`-based type arguments order,\n  previously we used to specify `_EnvType` as the first type argument,\n  now it is the last one. This is done to respect new HKT rules\n- **Breaking**: renames `.rescue` to `.lash`\n- **Breaking**: removes all old interfaces from `primitives/interfaces.py`,\n  use new typeclasses instead\n- **Breaking**: ``Maybe`` is fully reworked to be lawful\n- **Breaking**: removes `value_or` pointfree method,\n  because it is impossible to express with HKT\n- **Breaking**: removes `.value_or`, `.unwrap`, and `.failure` methods\n  from `FutureResult` and `RequiresContext`-based types,\n  because we do require these methods to raise an exception on failure,\n  but these methods were lazy and did not raise the required exception\n- **Breaking**: changes how `is_successful` is typed:\n  now we allow any `Unwrappable` interface instances there,\n  including custom ones\n- **Breaking**: changes `UnwrapFailedError` constructor,\n  now it does accept an `Unwrappable` instance instead of a `BaseContainer`\n- **Breaking**: removes `.fix` method from all containers,\n  also removes `fix` pointfree function\n- **Breaking**: Removes `coalesce` function,\n  because it is impossible to properly type it\n- **Breaking**: Removes all `Context*` based types with `.ask()` method,\n  use new `.ask()` methods on the `Reader`-based containers\n- **Breaking**: Now `Future` and `FutureResult` can be awaited multiple times\n- **Breaking**: Removes `.unify()` method from several containers,\n  use `unify()` pointfree function instead\n- **Breaking**: Removes ``.from_iterable`` method from all containers,\n  instead adds better `iterables` support,\n  we now have `returns.iterables` module with `Fold` helper\n- **Breaking**: Renames property `empty` to `no_args` of\n  all `RequiresContext`-based classes\n\n- Adds new public interfaces: see `returns.interfaces`\n- Adds `methods` package with several helpful things inside\n\n- Adds `FutureSuccess` and `FutureFailure` unit functions\n  to be similar to `Result` and `IOResult`\n- Adds `.swap` method to `Result`, `IOResult`, `FutureResult`,\n  and other result based containers\n- Adds `.modify_env` method to all `RequiresContext*` types\n- Adds `.rescue` to `Maybe`\n- Adds `.equals` methods to types that can be compared directly:\n  `Result`, `Maybe`, `IO`, `IOResult`\n- Adds missing `from_requires_context_future_result` to `RequiresContext`\n- Adds `.from_optional` and `.bind_optional` to `Maybe` container\n- Adds `__slots__` to `UnwrapFailedError` with `halted_container`\n- Changes `flatten` to work with `KindN` and any possible container\n- Adds a helper to test traces to our `pytest` plugin\n- Adds `cond` function to `pointfree` and `methods` packages\n- Adds `compose_result` HKT method and pointfree function\n- Adds `unify` HKT pointfree function\n- Adds `bimap` pointfree function\n- Adds `unwrap_or_failure` function to `methods` package\n\n- Adds `collect_trace` helper function for better development experience\n- Adds `hypothesis` integration and pre-defined \"monad laws as values\"\n\n- Adds `assert_equal` method to our `pytest` plugin\n\n### Bugfixes\n\n- **Breaking**: fixes serious typing issue and changes how `flow` works\n- **Breaking**: fixes serious typing issue and changes how `pipe` works,\n  now it has a hard limit of 20 parameters\n- Fixes that `RequiresContextFutureResult` was not supported by `pytest` plugin\n- Fixes incorrect `partial` behaviour in an edge case, #618\n- Fixes that `.apply` method of `IOResult` was working incorrectly,\n  it was returning `IOFailure(2)`\n  as a result of  `IOFailure(1).apply(IOFailure(2))`\n- Fixes bug that `safe(tap(...))` was revealing invalid types sometimes\n\n### Misc\n\n- Adds a lot of new typetests\n- Checks that now all math laws are checked for all types\n- Changes docs structure, adds new `Interfaces`, `HKT`, and `Methods` pages\n- Changed `__str__` method in `BaseContainer` class to `__repr__` method\n- Adds `Quickstart` guide\n\n\n## 0.14.0\n\n### Features\n\n- **Breaking**: renames mypy plugin from `decorator_plugin` to `returns_plugin`\n  because of a complete rewrite and lots of new features\n- **Breaking**: changes `@safe`, `@impure`, `impure_safe`, `@maybe` semantics:\n  they do not work with `async` functions anymore;\n  now you are forced to use `Future` and its helpers\n  to work with `async` functions\n- **Breaking**: renames `Maybe.new` to `Maybe.from_value`.\n  Because all our other containers support this protocol.\n  Only `Maybe` was different, sorry for that!\n- **Breaking**: renames `.from_success()` to `.from_value()`,\n  there's no need in two separate methods\n- **Breaking**: renames `.from_successful_io()` to `.from_io()`,\n  there's no need in two separate methods\n- **Breaking**: renames `.from_successful_context()` to `.from_context()`,\n  there's no need in two separate methods\n- **Breaking**: since we now support `.apply()` method,\n  there's no more need in `*_squash` converters, they are removed\n- **Breaking**: renamed `Instanceable` to `Applicative`\n- **Breaking**: changes `.from_io` and `.from_failed_io` of `IOResult`\n  to return `Any` instead of `NoReturn` unfilled type\n- **Breaking**: removes `.lift` and `.lift_*` methods from all containers,\n  use `map_`, `bind_result`, `bind_io`, and other pointfree helpers instead\n- **Breaking**: removes `@pipeline` function. It was a mistake:\n  it does not work with mixed container types,\n  it does not type failures properly,\n  it does not work with ``IO`` and ``Future``,\n  it enforces to write imperative code in a functional codebase.\n  Use ``flow`` instead\n\n- Adds typed `partial` and `curry` mypy plugins!\n- Adds typed `flow` plugin, now it can accept any number of arguments,\n  it now also has **excellent** type inference\n- Adds typed `pipe` plugin, now it can accept any number of arguments,\n  it now also has good type inference\n- Adds `managed` pipeline function that is useful\n  for working with stateful computations\n\n- Adds typed `map_`, `fix`, and `alt` pointfree functions\n- Adds typed `bind_result`, `bind_io`, `bind_ioresult`,\n  `bind_context`, `bind_context_result`, `bind_future`,\n  `bind_async`, and `bind_awaitable` pointfree functions\n- Adds typed `bind_async_future` and `bind_async_future_result`\n  pointfree functions\n- Adds typed `unify` pointfree function\n- Adds typed `apply` pointfree function\n- Adds typed `value_or` pointfree function\n\n- Adds `pytest` plugin with the ability to tests error handling\n\n- Adds `Future` container to easily work with `async` functions\n- Adds `FutureResult` container to easily work\n  with `async` function that might fail\n- Adds `RequiresContextFutureResult` container\n- Adds `ReaderFutureResult` alias for `RequiresContextFutureResult`\n- Adds `RequiresContextFutureResultE` and `ReaderFutureResultE` aliases\n- Adds `Future`, `FutureResult` and `RequiresContextFutureResult`\n  support for all existing pointfree functions\n\n- Adds `bind_io` method to `IOResult`\n- Adds `bind_io` method to `RequiresContextIOResult`\n- Adds `or_else` method to `Maybe`\n- Adds `.from_io` and `.from_failed_io` to `RequiresContextIOResult`\n\n- Syncs naming in `from_*` methods, now all parameters are named `inner_value`\n- Adds `not_` composition helper\n- Adds `flatten` support for `Future`,\n  `FutureResult` and `RequiresContextFutureResult`\n- Adds `__copy__` and `__deepcopy__` magic methods to `Immutable` class\n- Speeds up ``is_successful`` function\n- Makes all `Context` context helpers abstract,\n  so you cannot create new instances of this class,\n  also adds `__slots__` to these classes\n- Improves `RequiresContext*` types with `NoDeps` where it is logically true\n\n### Bugfixes\n\n- Fixes that `@safe` decorator was generating incorrect signatures\n  for functions with `Any`\n- Fixes that `.rescue()` of `RequiresContextResult` was returning `Any`\n- Fixes that `.rescue()` of `RequiresContextIOResult` was returning `Any`\n- Fixes that `RequiresContextResult` and `RequiresContextIOResult`\n  were not `final`\n- Fixes that `ImmutableStateError` was not a subclass of `AttributeError`\n- Fixes that `IOResult` was not showing `str` representation\n  of wrapped `inner_value`\n\n### Misc\n\n- Replaces `pytest-asyncio` with `anyio` plugin,\n  now we test compatibility with any IO stack: `asyncio`, `trio`, `curio`\n- Updates lots of dependencies\n- Adds lots of new tests\n- Updates lots of docs\n- Removes \"IO marker\" name from docs in favor for \"IO container\",\n  it is not special at all. Why would we call it differently?\n\n\n## 0.13.0\n\n### Features\n\n- **Breaking**: renames `join` to `flatten`, sorry!\n- **Breaking**: renames `box` to `bind` and moves it to `returns.pointfree`\n- **Breaking**: removes `Maybe.rescue` and `Maybe.fix` methods\n- **Breaking**: renames `io_squash` to `squash_io`\n  and moves it to `returns.converters`\n- **Breaking**: moves all interfaces from `returns.primitives.container` to\n  `returns.primitives.interfaces`\n\n- Adds `rescue` pointfree function\n- Adds `ResultE` alias for `Result[..., Exception]`\n\n- Adds `RequiresContext` container and `Context` helper class\n- Adds `RequiresContext` support for `bind` pointfree function\n- Adds `RequiresContext` support for `flatten` function\n\n- Adds `RequiresContextResult` container\n- Adds `RequiresContextResultE` alias\n- Adds `ReaderResult` and `ReaderResultE` aliases\n  for `RequiresContextResult[..., ..., Exception]`\n- Adds `RequiresContextResult` support for `bind` and `rescue`\n- Adds `RequiresContextResult` support for `flatten`\n\n- Adds `IOResult` helper to work better with `IO[Result[a, b]]`\n- Adds `IOResultE` alias for `IOResult[a, Exception]`\n- Adds `IOResult` support for `bind`\n- Adds `IOResult` support for `flatten`\n- Adds `IOResult` support for `@pipeline`\n- Adds `IOResult` support for `coalesce`\n- Adds `IOResult` support for `is_successful`\n\n- Adds `RequiresContextIOResult` container\n- Adds `RequiresContextIOResultE` alias\n- Adds `ReaderIOResult` and `ReaderIOResultE` aliases\n  for `RequiresContextIOResult[..., ..., Exception]`\n- Adds `RequiresContextIOResult` support for `bind` and `rescue`\n- Adds `RequiresContextIOResult` support for `flatten`\n\n- Adds `Result.lift`, `Maybe.lift`, `RequiresContext.lift`,\n  and `RequiresContextResult.lift` functions in addition to `IO.lift`\n\n- Adds `Immutable` primitive type\n- Adds `Unitable` protocol and `.from_success()` and `.from_failure()`\n  methods for all `Result` related classes\n- Adds `Instanceable` protocol and `.from_value()` method\n  for `IO` and `RequiresContext`\n\n- Adds `flow` function, which is similar to `pipe`\n- Adds `swap` converter for `Result` and `IOResult`\n- Adds `squash_context` function to squash `RequiresContext` similar to `IO`\n\n### Bugfixes\n\n- Now `Success` and `Failure` (both `io` and pure) return `Any` and not `NoReturn`\n- Fixes how `flatten` works, also adds more tests and docs about `Failure` case\n- Fixes `Unwrappable` type being parametrized with only one `TypeVar`\n- Changes `Success` and `Failure` to return `Any` instead of `NoReturn`\n\n### Misc\n\n- Updates `poetry` version in `travis`\n- Improves ``pipe`` docs with ``lambda`` and `Generic` problem\n- Improves docs in several places\n- Now examples in docs tries to be docstests where possible\n- Changes how tests are checked with `mypy` in CI\n\n\n## 0.12.0\n\n### Features\n\n- **Breaking**: now `@pipeline` requires a container type when created:\n  `@pipeline(Result)` or `@pipeline(Maybe)`\n- `Maybe` and `Result` now has `success_type` and `failure_type` aliases\n- Adds `Result.unify` utility method for better error type composition\n- We now support `dry-python/classes` as a first-class citizen\n- Adds `io_squash` to squash several `IO` containers into one container\n  with a tuple inside, currently works with `9` containers max at a time\n- Adds `untap` function which does convert return type to `None`\n\n### Bugfixes\n\n- Fixes that containers were not usable with `multiprocessing`\n- Changes the inheritance order, now `BaseContainer` is the first child\n- Fixes that `Nothing` had incorrect docstrings\n\n### Misc\n\n- Now `generated` package is protected\n- Updates `poetry` to `1.0`\n\n\n## 0.11.0\n\n### Features\n\n- **Breaking**: now `pipe()` does not require argument to be the first value,\n  instead it is required to use: `pipe(f1, f2, f3, f4)(value)`\n- **Breaking**: dropped everything from `returns/__init__.py`,\n  because we now have quite a lot of stuff\n- **Breaking**: dropped support of zero argument functions for `Nothing.fix`\n- **Breaking**: dropped support of zero argument functions for `Nothing.rescue`\n- `Maybe` now has `.failure()` to match the same API as `Result`\n- Adds `identity` function\n- Adds `tap` function\n- Now `pipe` allows to pipe 8 steps\n- Adds `coalesce_result` and `coalesce_maybe` converters\n\n### Bugfixes\n\n- Fixes that code inside `.fix` and `.rescue` of `Maybe` might be called twice\n\n### Misc\n\n- Now all methods have doctests\n- Updates docs about `Success` and `_Success`, `Failure` and `_Failure`\n- Updates docs about `@pipeline`\n- Typechecks async functions and decorators inside `typesafety/` tests\n\n\n## 0.10.0\n\n### Features\n\n- **Breaking**: `python>=3.7,<=3.7.2` are not supported anymore,\n  because of a bug inside `typing` module\n- **Breaking**: Now `bind` does not change the type of an error\n- **Breaking**: Now `rescue` does not change the type of a value\n- **Breaking**: Renames `map_failure` to `alt`\n- Adds `box()` function with the ability\n  to box function for direct container composition like:\n  `a -> Container[b]` to `Container[a] -> Container[b]`\n- Adds `IO.lift()` function to lift `a -> a` to `IO[a] -> IO[a]`\n- Adds `pipe()` function to `pipeline.py`\n- Adds `__hash__()` magic methods to all containers\n\n### Bugfixes\n\n- Changes `Any` to `NoReturn` in `Success` and `Failure`\n- Now all type parameters in `Result`, `Maybe`, and `IO` are covariant\n\n### Misc\n\n- Massive docs rewrite\n- Updates `mypy` version\n- Updates `wemake-python-styleguide` and introduces `nitpick`\n- Updates `pytest-plugin-mypy`, all tests now use `yml`\n\n\n## 0.9.0\n\n### Features\n\n- Provides a bunch of primitive interfaces to write your own containers\n- Adds `.map_failure()` method\n- Adds `flatten()` function to join nested containers\n\n### Bugfixes\n\n- Fixes type of `Maybe.fix` and `Maybe.rescue` to work with both `lambda: 1` and `lambda _: 1`\n\n### Misc\n\n- Improves `README`\n\n\n## 0.8.0\n\n### Features\n\n- Reintroduces the `Maybe` container, typed!\n- Introduces converters from one type to another\n- Adds `mypy` plugin to type decorators\n- Complete rewrite of `Result` types\n- Partial API change, now `Success` and `Failure` are not types, but functions\n- New internal types introduced: `FixableContainer` and `ValueUnwrapContainer`\n\n### Bugfixes\n\n- Fixes issue when you could return `IO` container from `Result.bind`\n- Fixes `@pipeline` return type\n\n### Misc\n\n- Reapplied all types to `.py` files\n- Improved docs about `IO` and `Container` concept\n- Adds docs about container composition\n- Moves from `Alpha` to `Beta`\n\n\n## 0.7.0\n\n### Features\n\n- Adds `IO` container\n- Adds `unsafe` module with unsafe functions\n- Changes how functions are located inside the project\n\n### Bugfixes\n\n- Fixes container type in `@pipeline`\n- Now `is_successful` is public\n- Now `raise_exception` is public\n\n### Misc\n\n- Changes how `str()` function works for container types\n- Total rename to \"container\" in the source code\n\n\n## Version 0.6.0\n\n### Features\n\n- `safe` and `pipeline` now supports `asyncio`\n- `is_successful` now returns `Literal` types if possible\n\n\n## Version 0.5.0\n\n### Features\n\n- Adds `compose` helper function\n- Adds public API to `import returns`\n- Adds `raise_exception` helper function\n- Adds full traceback to `.unwrap()`\n\n\n### Misc\n\n- Updates multiple dev-dependencies, including `mypy`\n- Now search in the docs is working again\n- Relicenses this project to `BSD`\n- Fixes copyright notice in the docs\n\n\n## Version 0.4.0 aka Goodbye, containers!\n\n### Features\n\n- Moves all types to `.pyi` files\n- Renames all classes according to new naming pattern\n- **HUGE** improvement of types\n- Renames `fmap` to `map`\n- Renames `do_notation` to `pipeline`, moves it to `functions.py`\n- Renames `ebind` to `rescue`\n- Renames `efmap` to `fix`\n- Renames `container` to `Container`\n- Removes `Maybe` container, since typing does not have `NonNullable` type\n\n\n## Version 0.3.1\n\n### Bugfixes\n\n- Adds `py.typed` file to be `PEP561` compatible\n\n\n## Version 0.3.0, Renamed to `returns`\n\nThe project is renamed to `returns` and moved to `dry-python` org.\n\n### Features\n\n- Adds `.pyi` files for all modules,\n  to enable `mypy` support for 3rd party users\n\n\n## Version 0.2.0\n\n### Features\n\n- Adds `Maybe` container\n- Adds immutability and `__slots__` to all containers\n- Adds methods to work with failures\n- Adds `safe` decorator to convert exceptions to `Result` container\n- Adds `is_successful()` function to detect if your result is a success\n- Adds `failure()` method to unwrap values from failed containers\n\n### Bugfixes\n\n- Changes the type of `.bind` method for `Success` container\n- Changes how equality works, so now `Failure(1) != Success(1)`\n- Changes how new instances created on unused methods\n\n### Misc\n\n- Improves docs\n\n\n## Version 0.1.1\n\n### Bugfixes\n\n- Changes how `PyPI` renders package's page\n\n### Misc\n\n- Improves `README` with new badges and installation steps\n\n\n## Version 0.1.0\n\nInitial release. Featuring only `Result` and `do_notation`.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.7353515625,
          "content": "# How to contribute\n\nDo you have questions or issues? Join our chat!\n\n[![Telegram chat](https://img.shields.io/badge/chat-join-blue?logo=telegram)](https://t.me/drypython)\n\n## Tutorials\n\nIf you want to start working on this project,\nyou will need to get familiar with these concepts:\n\n- http://learnyouahaskell.com/functors-applicative-functors-and-monoids\n- https://github.com/dbrattli/OSlash/wiki/Functors,-Applicatives,-And-Monads-In-Pictures\n- https://gcanti.github.io/fp-ts/ and https://dev.to/gcanti\n\nHere are some practical examples of what we are doing here:\n\n- https://medium.com/@rnesytov/using-Result-monad-in-python-b6eac698dff5\n- https://www.morozov.is/2018/09/08/monad-laws-in-ruby.html\n- https://beepb00p.xyz/mypy-error-handling.html\n\n\n## Dependencies\n\nWe use [`poetry`](https://github.com/python-poetry/poetry) to manage the dependencies.\n\nTo install them you would need to run the `install` command:\n\n```bash\npoetry install\n```\n\nTo activate your `virtualenv` run `poetry shell`.\n\n\n## Tests\n\nWe use `pytest` and `flake8` for quality control.\nWe also use `wemake_python_styleguide` to enforce code quality.\n\nTo run standard tests:\n\n```bash\npoetry run pytest returns docs/pages tests\n```\n\n**NOTE:** type-safety tests not included, see section on type tests below\n\nTo run linting:\n\n```bash\npoetry run flake8 .\n```\nKeep in mind: default virtual environment folder excluded by flake8 style checking is `.venv`.\nIf you want to customize this parameter, you should do this in `setup.cfg`.\n\nThese steps are mandatory during CI.\n\n### Type tests\n\nWe also use `pytest-mypy-plugins`. Tests cases are located inside `./typesafety`\nIf you create new types or typed functions, it is required to test their types.\n\nThe type-safety tests can be run with the following:\n\n```bash\npoetry run pytest typesafety\n```\n\n**NOTE:** This can take upwards of 20 minutes, only recommended to run if necessary.\n\nHere's [a helpful tutorial](https://sobolevn.me/2019/08/testing-mypy-types) if you are looking\nfor more information.\n\n\n## Type checks\n\nWe use `mypy` to run type checks on our code.\nTo use it:\n\n```bash\npoetry run mypy returns tests/**/*.py\n```\n\nThis step is mandatory during CI.\n\n\n## Submitting your code\n\nWe use [trunk based](https://trunkbaseddevelopment.com/)\ndevelopment (we also sometimes call it `wemake-git-flow`).\n\nWhat the point of this method?\n\n1. We use protected `master` branch,\n   so the only way to push your code is via pull request\n2. We use issue branches: to implement a new feature or to fix a bug\n   create a new branch named `issue-$TASKNUMBER`\n3. Then create a pull request to `master` branch\n4. We use `git tag`s to make releases, so we can track what has changed\n   since the latest release\n\nSo, this way we achieve an easy and scalable development process\nwhich frees us from merging hell and long-living branches.\n\nIn this method, the latest version of the app is always in the `master` branch.\n\n### Before submitting\n\nBefore submitting your code please do the following steps:\n\n1. Run `pytest` to make sure everything was working before\n2. Add any changes you want\n3. Add tests for the new changes\n4. Edit documentation if you have changed something significant\n5. Update `CHANGELOG.md` with a quick summary of your changes\n6. Run `pytest` again to make sure it is still working\n7. Run `mypy` to ensure that types are correct\n8. Run `flake8` to ensure that style is correct\n9. Run `slotscheck` to ensure that slots are correct\n\n\n## Other help\n\nYou can contribute by spreading a word about this library.\nIt would also be a huge contribution to write\na short article on how you are using this project.\nYou can also share your best practices with us.\n\nJoin in the conversation with us on our Telegram.\n[![Telegram chat](https://img.shields.io/badge/chat-join-blue?logo=telegram)](https://t.me/drypython)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2587890625,
          "content": "Copyright 2016-2021 dry-python organization\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n1. Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the\n  distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.7822265625,
          "content": "[![Returns logo](https://raw.githubusercontent.com/dry-python/brand/master/logo/returns_white-outline.png)](https://github.com/dry-python/returns)\n\n-----\n\n[![Build Status](https://github.com/dry-python/returns/workflows/test/badge.svg?branch=master&event=push)](https://github.com/dry-python/returns/actions?query=workflow%3Atest)\n[![codecov](https://codecov.io/gh/dry-python/returns/branch/master/graph/badge.svg)](https://codecov.io/gh/dry-python/returns)\n[![Documentation Status](https://readthedocs.org/projects/returns/badge/?version=latest)](https://returns.readthedocs.io/en/latest/?badge=latest)\n[![Python Version](https://img.shields.io/pypi/pyversions/returns.svg)](https://pypi.org/project/returns/)\n[![conda](https://img.shields.io/conda/v/conda-forge/returns?label=conda)](https://anaconda.org/conda-forge/returns)\n[![wemake-python-styleguide](https://img.shields.io/badge/style-wemake-000000.svg)](https://github.com/wemake-services/wemake-python-styleguide)\n[![Telegram chat](https://img.shields.io/badge/chat-join-blue?logo=telegram)](https://t.me/drypython)\n\n-----\n\nMake your functions return something meaningful, typed, and safe!\n\n\n## Features\n\n- Brings functional programming to Python land\n- Provides a bunch of primitives to write declarative business logic\n- Enforces better architecture\n- Fully typed with annotations and checked with `mypy`, [PEP561 compatible](https://www.python.org/dev/peps/pep-0561/)\n- Adds emulated [Higher Kinded Types](https://returns.readthedocs.io/en/latest/pages/hkt.html) support\n- Provides type-safe interfaces to create your own data-types with enforced laws\n- Has a bunch of helpers for better composition\n- Pythonic and pleasant to write and to read 🐍\n- Support functions and coroutines, framework agnostic\n- Easy to start: has lots of docs, tests, and tutorials\n\n[Quickstart](https://returns.readthedocs.io/en/latest/pages/quickstart.html) right now!\n\n\n## Installation\n\n```bash\npip install returns\n```\n\nYou can also install `returns` with the latest supported `mypy` version:\n\n```bash\npip install returns[compatible-mypy]\n```\n\nYou would also need to configure our [`mypy` plugin](https://returns.readthedocs.io/en/latest/pages/contrib/mypy_plugins.html):\n\n```ini\n# In setup.cfg or mypy.ini:\n[mypy]\nplugins =\n  returns.contrib.mypy.returns_plugin\n```\n\nor:\n\n```toml\n[tool.mypy]\nplugins = [\"returns.contrib.mypy.returns_plugin\"]\n```\n\nWe also recommend to use the same `mypy` settings [we use](https://github.com/wemake-services/wemake-python-styleguide/blob/master/styles/mypy.toml).\n\nMake sure you know how to get started, [check out our docs](https://returns.readthedocs.io/en/latest/)!\n[Try our demo](https://repl.it/@sobolevn/returns#ex.py).\n\n\n## Contents\n\n- [Maybe container](#maybe-container) that allows you to write `None`-free code\n- [RequiresContext container](#requirescontext-container) that allows you to use typed functional dependency injection\n- [Result container](#result-container) that lets you to get rid of exceptions\n- [IO container](#io-container) and [IOResult](#troublesome-io) that marks all impure operations and structures them\n- [Future container](#future-container) and [FutureResult](#async-code-without-exceptions) to work with `async` code\n- [Write your own container!](https://returns.readthedocs.io/en/latest/pages/create-your-own-container.html) You would still have all the features for your own types (including full existing code reuse and type-safety)\n- Use [`do-notation`](https://returns.readthedocs.io/en/latest/pages/do-notation.html) to make your code easier!\n\n\n## Maybe container\n\n`None` is called the [worst mistake in the history of Computer Science](https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare/).\n\nSo, what can we do to check for `None` in our programs?\nYou can use builtin [Optional](https://mypy.readthedocs.io/en/stable/kinds_of_types.html#optional-types-and-the-none-type) type\nand write a lot of `if some is not None:` conditions.\nBut, **having `null` checks here and there makes your code unreadable**.\n\n```python\nuser: Optional[User]\ndiscount_program: Optional['DiscountProgram'] = None\n\nif user is not None:\n     balance = user.get_balance()\n     if balance is not None:\n         credit = balance.credit_amount()\n         if credit is not None and credit > 0:\n             discount_program = choose_discount(credit)\n```\n\nOr you can use\n[Maybe](https://returns.readthedocs.io/en/latest/pages/maybe.html) container!\nIt consists of `Some` and `Nothing` types,\nrepresenting existing state and empty (instead of `None`) state respectively.\n\n```python\nfrom typing import Optional\nfrom returns.maybe import Maybe, maybe\n\n@maybe  # decorator to convert existing Optional[int] to Maybe[int]\ndef bad_function() -> Optional[int]:\n    ...\n\nmaybe_number: Maybe[float] = bad_function().bind_optional(\n    lambda number: number / 2,\n)\n# => Maybe will return Some[float] only if there's a non-None value\n#    Otherwise, will return Nothing\n```\n\nYou can be sure that `.bind_optional()` method won't be called for `Nothing`.\nForget about `None`-related errors forever!\n\nWe can also bind a `Optional`-returning function over a container.\nTo achieve this, we are going to use `.bind_optional` method.\n\nAnd here's how your initial refactored code will look:\n\n```python\nuser: Optional[User]\n\n# Type hint here is optional, it only helps the reader here:\ndiscount_program: Maybe['DiscountProgram'] = Maybe.from_optional(\n    user,\n).bind_optional(  # This won't be called if `user is None`\n    lambda real_user: real_user.get_balance(),\n).bind_optional(  # This won't be called if `real_user.get_balance()` is None\n    lambda balance: balance.credit_amount(),\n).bind_optional(  # And so on!\n    lambda credit: choose_discount(credit) if credit > 0 else None,\n)\n```\n\nMuch better, isn't it?\n\n\n## RequiresContext container\n\nMany developers do use some kind of dependency injection in Python.\nAnd usually it is based on the idea\nthat there's some kind of a container and assembly process.\n\nFunctional approach is much simpler!\n\nImagine that you have a `django` based game, where you award users with points for each guessed letter in a word (unguessed letters are marked as `'.'`):\n\n```python\nfrom django.http import HttpRequest, HttpResponse\nfrom words_app.logic import calculate_points\n\ndef view(request: HttpRequest) -> HttpResponse:\n    user_word: str = request.POST['word']  # just an example\n    points = calculate_points(user_word)\n    ...  # later you show the result to user somehow\n\n# Somewhere in your `words_app/logic.py`:\n\ndef calculate_points(word: str) -> int:\n    guessed_letters_count = len([letter for letter in word if letter != '.'])\n    return _award_points_for_letters(guessed_letters_count)\n\ndef _award_points_for_letters(guessed: int) -> int:\n    return 0 if guessed < 5 else guessed  # minimum 6 points possible!\n```\n\nAwesome! It works, users are happy, your logic is pure and awesome.\nBut, later you decide to make the game more fun:\nlet's make the minimal accountable letters threshold\nconfigurable for an extra challenge.\n\nYou can just do it directly:\n\n```python\ndef _award_points_for_letters(guessed: int, threshold: int) -> int:\n    return 0 if guessed < threshold else guessed\n```\n\nThe problem is that `_award_points_for_letters` is deeply nested.\nAnd then you have to pass `threshold` through the whole callstack,\nincluding `calculate_points` and all other functions that might be on the way.\nAll of them will have to accept `threshold` as a parameter!\nThis is not useful at all!\nLarge code bases will struggle a lot from this change.\n\nOk, you can directly use `django.settings` (or similar)\nin your `_award_points_for_letters` function.\nAnd **ruin your pure logic with framework specific details**. That's ugly!\n\nOr you can use `RequiresContext` container. Let's see how our code changes:\n\n```python\nfrom django.conf import settings\nfrom django.http import HttpRequest, HttpResponse\nfrom words_app.logic import calculate_points\n\ndef view(request: HttpRequest) -> HttpResponse:\n    user_word: str = request.POST['word']  # just an example\n    points = calculate_points(user_words)(settings)  # passing the dependencies\n    ...  # later you show the result to user somehow\n\n# Somewhere in your `words_app/logic.py`:\n\nfrom typing import Protocol\nfrom returns.context import RequiresContext\n\nclass _Deps(Protocol):  # we rely on abstractions, not direct values or types\n    WORD_THRESHOLD: int\n\ndef calculate_points(word: str) -> RequiresContext[int, _Deps]:\n    guessed_letters_count = len([letter for letter in word if letter != '.'])\n    return _award_points_for_letters(guessed_letters_count)\n\ndef _award_points_for_letters(guessed: int) -> RequiresContext[int, _Deps]:\n    return RequiresContext(\n        lambda deps: 0 if guessed < deps.WORD_THRESHOLD else guessed,\n    )\n```\n\nAnd now you can pass your dependencies in a really direct and explicit way.\nAnd have the type-safety to check what you pass to cover your back.\nCheck out [RequiresContext](https://returns.readthedocs.io/en/latest/pages/context.html) docs for more. There you will learn how to make `'.'` also configurable.\n\nWe also have [RequiresContextResult](https://returns.readthedocs.io/en/latest/pages/context.html#requirescontextresult-container)\nfor context-related operations that might fail. And also [RequiresContextIOResult](https://returns.readthedocs.io/en/latest/pages/context.html#requirescontextioresult-container) and [RequiresContextFutureResult](https://returns.readthedocs.io/en/latest/pages/context.html#requirescontextfutureresult-container).\n\n\n## Result container\n\nPlease, make sure that you are also aware of\n[Railway Oriented Programming](https://fsharpforfunandprofit.com/rop/).\n\n### Straight-forward approach\n\nConsider this code that you can find in **any** `python` project.\n\n```python\nimport requests\n\ndef fetch_user_profile(user_id: int) -> 'UserProfile':\n    \"\"\"Fetches UserProfile dict from foreign API.\"\"\"\n    response = requests.get('/api/users/{0}'.format(user_id))\n    response.raise_for_status()\n    return response.json()\n```\n\nSeems legit, does it not?\nIt also seems like a pretty straightforward code to test.\nAll you need is to mock `requests.get` to return the structure you need.\n\nBut, there are hidden problems in this tiny code sample\nthat are almost impossible to spot at the first glance.\n\n### Hidden problems\n\nLet's have a look at the exact same code,\nbut with the all hidden problems explained.\n\n```python\nimport requests\n\ndef fetch_user_profile(user_id: int) -> 'UserProfile':\n    \"\"\"Fetches UserProfile dict from foreign API.\"\"\"\n    response = requests.get('/api/users/{0}'.format(user_id))\n\n    # What if we try to find user that does not exist?\n    # Or network will go down? Or the server will return 500?\n    # In this case the next line will fail with an exception.\n    # We need to handle all possible errors in this function\n    # and do not return corrupt data to consumers.\n    response.raise_for_status()\n\n    # What if we have received invalid JSON?\n    # Next line will raise an exception!\n    return response.json()\n```\n\nNow, all (probably all?) problems are clear.\nHow can we be sure that this function will be safe\nto use inside our complex business logic?\n\nWe really cannot be sure!\nWe will have to create **lots** of `try` and `except` cases\njust to catch the expected exceptions. Our code will become complex and unreadable with all this mess!\n\nOr we can go with the top level `except Exception:` case\nto catch literally everything.\nAnd this way we would end up with catching unwanted ones.\nThis approach can hide serious problems from us for a long time.\n\n### Pipe example\n\n```python\nimport requests\nfrom returns.result import Result, safe\nfrom returns.pipeline import flow\nfrom returns.pointfree import bind\n\ndef fetch_user_profile(user_id: int) -> Result['UserProfile', Exception]:\n    \"\"\"Fetches `UserProfile` TypedDict from foreign API.\"\"\"\n    return flow(\n        user_id,\n        _make_request,\n        bind(_parse_json),\n    )\n\n@safe\ndef _make_request(user_id: int) -> requests.Response:\n    # TODO: we are not yet done with this example, read more about `IO`:\n    response = requests.get('/api/users/{0}'.format(user_id))\n    response.raise_for_status()\n    return response\n\n@safe\ndef _parse_json(response: requests.Response) -> 'UserProfile':\n    return response.json()\n```\n\nNow we have a clean and a safe and declarative way\nto express our business needs:\n\n- We start from making a request, that might fail at any moment,\n- Then parsing the response if the request was successful,\n- And then return the result.\n\nNow, instead of returning regular values\nwe return values wrapped inside a special container\nthanks to the\n[@safe](https://returns.readthedocs.io/en/latest/pages/result.html#safe)\ndecorator. It will return [Success[YourType] or Failure[Exception]](https://returns.readthedocs.io/en/latest/pages/result.html).\nAnd will never throw exception at us!\n\nWe also use [flow](https://returns.readthedocs.io/en/latest/pages/pipeline.html#flow)\nand [bind](https://returns.readthedocs.io/en/latest/pages/pointfree.html#bind)\nfunctions for handy and declarative composition.\n\nThis way we can be sure that our code won't break in\nrandom places due to some implicit exception.\nNow we control all parts and are prepared for the explicit errors.\n\nWe are not yet done with this example,\nlet's continue to improve it in the next chapter.\n\n\n## IO container\n\nLet's look at our example from another angle.\nAll its functions look like regular ones:\nit is impossible to tell whether they are [pure](https://en.wikipedia.org/wiki/Pure_function)\nor impure from the first sight.\n\nIt leads to a very important consequence:\n*we start to mix pure and impure code together*.\nWe should not do that!\n\nWhen these two concepts are mixed\nwe suffer really bad when testing or reusing it.\nAlmost everything should be pure by default.\nAnd we should explicitly mark impure parts of the program.\n\nThat's why we have created `IO` container\nto mark impure functions that never fail.\n\nThese impure functions use `random`, current datetime, environment, or console:\n\n```python\nimport random\nimport datetime as dt\n\nfrom returns.io import IO\n\ndef get_random_number() -> IO[int]:  # or use `@impure` decorator\n    return IO(random.randint(1, 10))  # isn't pure, because random\n\nnow: Callable[[], IO[dt.datetime]] = impure(dt.datetime.now)\n\n@impure\ndef return_and_show_next_number(previous: int) -> int:\n    next_number = previous + 1\n    print(next_number)  # isn't pure, because does IO\n    return next_number\n```\n\nNow we can clearly see which functions are pure and which ones are impure.\nThis helps us a lot in building large applications, unit testing you code,\nand composing business logic together.\n\n### Troublesome IO\n\nAs it was already said, we use `IO` when we handle functions that do not fail.\n\nWhat if our function can fail and is impure?\nLike `requests.get()` we had earlier in our example.\n\nThen we have to use a special `IOResult` type instead of a regular `Result`.\nLet's find the difference:\n\n- Our `_parse_json` function always returns\n  the same result (hopefully) for the same input:\n  you can either parse valid `json` or fail on invalid one.\n  That's why we return pure `Result`, there's no `IO` inside\n- Our `_make_request` function is impure and can fail.\n  Try to send two similar requests with and without internet connection.\n  The result will be different for the same input.\n  That's why we must use `IOResult` here: it can fail and has `IO`\n\nSo, in order to fulfill our requirement and separate pure code from impure one,\nwe have to refactor our example.\n\n### Explicit IO\n\nLet's make our [IO](https://returns.readthedocs.io/en/latest/pages/io.html)\nexplicit!\n\n```python\nimport requests\nfrom returns.io import IOResult, impure_safe\nfrom returns.result import safe\nfrom returns.pipeline import flow\nfrom returns.pointfree import bind_result\n\ndef fetch_user_profile(user_id: int) -> IOResult['UserProfile', Exception]:\n    \"\"\"Fetches `UserProfile` TypedDict from foreign API.\"\"\"\n    return flow(\n        user_id,\n        _make_request,\n        # before: def (Response) -> UserProfile\n        # after safe: def (Response) -> ResultE[UserProfile]\n        # after bind_result: def (IOResultE[Response]) -> IOResultE[UserProfile]\n        bind_result(_parse_json),\n    )\n\n@impure_safe\ndef _make_request(user_id: int) -> requests.Response:\n    response = requests.get('/api/users/{0}'.format(user_id))\n    response.raise_for_status()\n    return response\n\n@safe\ndef _parse_json(response: requests.Response) -> 'UserProfile':\n    return response.json()\n```\n\nAnd later we can use [unsafe_perform_io](https://returns.readthedocs.io/en/latest/pages/io.html#unsafe-perform-io)\nsomewhere at the top level of our program to get the pure (or \"real\") value.\n\nAs a result of this refactoring session, we know everything about our code:\n\n- Which parts can fail,\n- Which parts are impure,\n- How to compose them in a smart, readable, and typesafe manner.\n\n\n## Future container\n\nThere are several issues with `async` code in Python:\n\n1. You cannot call `async` function from a sync one\n2. Any unexpectedly thrown exception can ruin your whole event loop\n3. Ugly composition with lots of `await` statements\n\n`Future` and `FutureResult` containers solve these issues!\n\n### Mixing sync and async code\n\nThe main feature of [Future](https://returns.readthedocs.io/en/latest/pages/future.html)\nis that it allows to run async code\nwhile maintaining sync context. Let's see an example.\n\nLet's say we have two functions,\nthe `first` one returns a number and the `second` one increments it:\n\n```python\nasync def first() -> int:\n    return 1\n\ndef second():  # How can we call `first()` from here?\n    return first() + 1  # Boom! Don't do this. We illustrate a problem here.\n```\n\nIf we try to just run `first()`, we will just create an unawaited coroutine.\nIt won't return the value we want.\n\nBut, if we would try to run `await first()`,\nthen we would need to change `second` to be `async`.\nAnd sometimes it is not possible for various reasons.\n\nHowever, with `Future` we can \"pretend\" to call async code from sync code:\n\n```python\nfrom returns.future import Future\n\ndef second() -> Future[int]:\n    return Future(first()).map(lambda num: num + 1)\n```\n\nWithout touching our `first` async function\nor making `second` async we have achieved our goal.\nNow, our async value is incremented inside a sync function.\n\nHowever, `Future` still requires to be executed inside a proper eventloop:\n\n```python\nimport anyio  # or asyncio, or any other lib\n\n# We can then pass our `Future` to any library: asyncio, trio, curio.\n# And use any event loop: regular, uvloop, even a custom one, etc\nassert anyio.run(second().awaitable) == 2\n```\n\nAs you can see `Future` allows you\nto work with async functions from a sync context.\nAnd to mix these two realms together.\nUse raw `Future` for operations that cannot fail or raise exceptions.\nPretty much the same logic we had with our `IO` container.\n\n### Async code without exceptions\n\nWe have already covered how [`Result`](#result-container) works\nfor both pure and impure code.\nThe main idea is: we don't raise exceptions, we return them.\nIt is **especially** critical in async code,\nbecause a single exception can ruin\nall our coroutines running in a single eventloop.\n\nWe have a handy combination of `Future` and `Result` containers: `FutureResult`.\nAgain, this is exactly like `IOResult`, but for impure async code.\nUse it when your `Future` might have problems:\nlike HTTP requests or filesystem operations.\n\nYou can easily turn any wild throwing coroutine into a calm `FutureResult`:\n\n```python\nimport anyio\nfrom returns.future import future_safe\nfrom returns.io import IOFailure\n\n@future_safe\nasync def raising():\n    raise ValueError('Not so fast!')\n\nioresult = anyio.run(raising.awaitable)  # all `Future`s return IO containers\nassert ioresult == IOFailure(ValueError('Not so fast!'))  # True\n```\n\nUsing `FutureResult` will keep your code safe from exceptions.\nYou can always `await` or execute inside an eventloop any `FutureResult`\nto get sync `IOResult` instance to work with it in a sync manner.\n\n### Better async composition\n\nPreviously, you had to do quite a lot of `await`ing while writing `async` code:\n\n```python\nasync def fetch_user(user_id: int) -> 'User':\n    ...\n\nasync def get_user_permissions(user: 'User') -> 'Permissions':\n    ...\n\nasync def ensure_allowed(permissions: 'Permissions') -> bool:\n    ...\n\nasync def main(user_id: int) -> bool:\n    # Also, don't forget to handle all possible errors with `try / except`!\n    user = await fetch_user(user_id)  # We will await each time we use a coro!\n    permissions = await get_user_permissions(user)\n    return await ensure_allowed(permissions)\n```\n\nSome people are ok with it, but some people don't like this imperative style.\nThe problem is that there was no choice.\n\nBut now, you can do the same thing in functional style!\nWith the help of `Future` and `FutureResult` containers:\n\n```python\nimport anyio\nfrom returns.future import FutureResultE, future_safe\nfrom returns.io import IOSuccess, IOFailure\n\n@future_safe\nasync def fetch_user(user_id: int) -> 'User':\n    ...\n\n@future_safe\nasync def get_user_permissions(user: 'User') -> 'Permissions':\n    ...\n\n@future_safe\nasync def ensure_allowed(permissions: 'Permissions') -> bool:\n    ...\n\ndef main(user_id: int) -> FutureResultE[bool]:\n    # We can now turn `main` into a sync function, it does not `await` at all.\n    # We also don't care about exceptions anymore, they are already handled.\n    return fetch_user(user_id).bind(get_user_permissions).bind(ensure_allowed)\n\ncorrect_user_id: int  # has required permissions\nbanned_user_id: int  # does not have required permissions\nwrong_user_id: int  # does not exist\n\n# We can have correct business results:\nassert anyio.run(main(correct_user_id).awaitable) == IOSuccess(True)\nassert anyio.run(main(banned_user_id).awaitable) == IOSuccess(False)\n\n# Or we can have errors along the way:\nassert anyio.run(main(wrong_user_id).awaitable) == IOFailure(\n    UserDoesNotExistError(...),\n)\n```\n\nOr even something really fancy:\n\n```python\nfrom returns.pointfree import bind\nfrom returns.pipeline import flow\n\ndef main(user_id: int) -> FutureResultE[bool]:\n    return flow(\n        fetch_user(user_id),\n        bind(get_user_permissions),\n        bind(ensure_allowed),\n    )\n```\n\nLater we can also refactor our logical functions to be sync\nand to return `FutureResult`.\n\nLovely, isn't it?\n\n\n## More!\n\nWant more?\n[Go to the docs!](https://returns.readthedocs.io)\nOr read these articles:\n\n- [Python exceptions considered an anti-pattern](https://sobolevn.me/2019/02/python-exceptions-considered-an-antipattern)\n- [Enforcing Single Responsibility Principle in Python](https://sobolevn.me/2019/03/enforcing-srp)\n- [Typed functional Dependency Injection in Python](https://sobolevn.me/2020/02/typed-functional-dependency-injection)\n- [How Async Should Have Been](https://sobolevn.me/2020/06/how-async-should-have-been)\n- [Higher Kinded Types in Python](https://sobolevn.me/2020/10/higher-kinded-types-in-python)\n- [Make Tests a Part of Your App](https://sobolevn.me/2021/02/make-tests-a-part-of-your-app)\n\nDo you have an article to submit? Feel free to open a pull request!\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 136.6220703125,
          "content": "# This file is automatically @generated by Poetry 1.8.5 and should not be changed by hand.\n\n[[package]]\nname = \"alabaster\"\nversion = \"1.0.0\"\ndescription = \"A light, configurable Sphinx theme\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"alabaster-1.0.0-py3-none-any.whl\", hash = \"sha256:fc6786402dc3fcb2de3cabd5fe455a2db534b371124f1f21de8731783dec828b\"},\n    {file = \"alabaster-1.0.0.tar.gz\", hash = \"sha256:c00dca57bca26fa62a6d7d0a9fcce65f3e026e9bfe33e9c538fd3fbb2144fd9e\"},\n]\n\n[[package]]\nname = \"anyio\"\nversion = \"4.7.0\"\ndescription = \"High level compatibility layer for multiple asynchronous event loop implementations\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"anyio-4.7.0-py3-none-any.whl\", hash = \"sha256:ea60c3723ab42ba6fff7e8ccb0488c898ec538ff4df1f1d5e642c3601d07e352\"},\n    {file = \"anyio-4.7.0.tar.gz\", hash = \"sha256:2f834749c602966b7d456a7567cafcb309f96482b5081d14ac93ccd457f9dd48\"},\n]\n\n[package.dependencies]\nexceptiongroup = {version = \">=1.0.2\", markers = \"python_version < \\\"3.11\\\"\"}\nidna = \">=2.8\"\nsniffio = \">=1.1\"\ntyping_extensions = {version = \">=4.5\", markers = \"python_version < \\\"3.13\\\"\"}\n\n[package.extras]\ndoc = [\"Sphinx (>=7.4,<8.0)\", \"packaging\", \"sphinx-autodoc-typehints (>=1.2.0)\", \"sphinx_rtd_theme\"]\ntest = [\"anyio[trio]\", \"coverage[toml] (>=7)\", \"exceptiongroup (>=1.2.0)\", \"hypothesis (>=4.0)\", \"psutil (>=5.9)\", \"pytest (>=7.0)\", \"pytest-mock (>=3.6.1)\", \"trustme\", \"truststore (>=0.9.1)\", \"uvloop (>=0.21)\"]\ntrio = [\"trio (>=0.26.1)\"]\n\n[[package]]\nname = \"attrs\"\nversion = \"24.3.0\"\ndescription = \"Classes Without Boilerplate\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"attrs-24.3.0-py3-none-any.whl\", hash = \"sha256:ac96cd038792094f438ad1f6ff80837353805ac950cd2aa0e0625ef19850c308\"},\n    {file = \"attrs-24.3.0.tar.gz\", hash = \"sha256:8f5c07333d543103541ba7be0e2ce16eeee8130cb0b3f9238ab904ce1e85baff\"},\n]\n\n[package.extras]\nbenchmark = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-codspeed\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ncov = [\"cloudpickle\", \"coverage[toml] (>=5.3)\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ndev = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pre-commit-uv\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ndocs = [\"cogapp\", \"furo\", \"myst-parser\", \"sphinx\", \"sphinx-notfound-page\", \"sphinxcontrib-towncrier\", \"towncrier (<24.7)\"]\ntests = [\"cloudpickle\", \"hypothesis\", \"mypy (>=1.11.1)\", \"pympler\", \"pytest (>=4.3.0)\", \"pytest-mypy-plugins\", \"pytest-xdist[psutil]\"]\ntests-mypy = [\"mypy (>=1.11.1)\", \"pytest-mypy-plugins\"]\n\n[[package]]\nname = \"babel\"\nversion = \"2.16.0\"\ndescription = \"Internationalization utilities\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"babel-2.16.0-py3-none-any.whl\", hash = \"sha256:368b5b98b37c06b7daf6696391c3240c938b37767d4584413e8438c5c435fa8b\"},\n    {file = \"babel-2.16.0.tar.gz\", hash = \"sha256:d1f3554ca26605fe173f3de0c65f750f5a42f924499bf134de6423582298e316\"},\n]\n\n[package.extras]\ndev = [\"freezegun (>=1.0,<2.0)\", \"pytest (>=6.0)\", \"pytest-cov\"]\n\n[[package]]\nname = \"beautifulsoup4\"\nversion = \"4.12.3\"\ndescription = \"Screen-scraping library\"\noptional = false\npython-versions = \">=3.6.0\"\nfiles = [\n    {file = \"beautifulsoup4-4.12.3-py3-none-any.whl\", hash = \"sha256:b80878c9f40111313e55da8ba20bdba06d8fa3969fc68304167741bbf9e082ed\"},\n    {file = \"beautifulsoup4-4.12.3.tar.gz\", hash = \"sha256:74e3d1928edc070d21748185c46e3fb33490f22f52a3addee9aee0f4f7781051\"},\n]\n\n[package.dependencies]\nsoupsieve = \">1.2\"\n\n[package.extras]\ncchardet = [\"cchardet\"]\nchardet = [\"chardet\"]\ncharset-normalizer = [\"charset-normalizer\"]\nhtml5lib = [\"html5lib\"]\nlxml = [\"lxml\"]\n\n[[package]]\nname = \"certifi\"\nversion = \"2024.12.14\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"certifi-2024.12.14-py3-none-any.whl\", hash = \"sha256:1275f7a45be9464efc1173084eaa30f866fe2e47d389406136d332ed4967ec56\"},\n    {file = \"certifi-2024.12.14.tar.gz\", hash = \"sha256:b650d30f370c2b724812bee08008be0c4163b163ddaec3f2546c1caf65f191db\"},\n]\n\n[[package]]\nname = \"cffi\"\nversion = \"1.17.1\"\ndescription = \"Foreign Function Interface for Python calling C code.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:df8b1c11f177bc2313ec4b2d46baec87a5f3e71fc8b45dab2ee7cae86d9aba14\"},\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8f2cdc858323644ab277e9bb925ad72ae0e67f69e804f4898c070998d50b1a67\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:edae79245293e15384b51f88b00613ba9f7198016a5948b5dddf4917d4d26382\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:45398b671ac6d70e67da8e4224a065cec6a93541bb7aebe1b198a61b58c7b702\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ad9413ccdeda48c5afdae7e4fa2192157e991ff761e7ab8fdd8926f40b160cc3\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5da5719280082ac6bd9aa7becb3938dc9f9cbd57fac7d2871717b1feb0902ab6\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2bb1a08b8008b281856e5971307cc386a8e9c5b625ac297e853d36da6efe9c17\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:045d61c734659cc045141be4bae381a41d89b741f795af1dd018bfb532fd0df8\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:6883e737d7d9e4899a8a695e00ec36bd4e5e4f18fabe0aca0efe0a4b44cdb13e\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:6b8b4a92e1c65048ff98cfe1f735ef8f1ceb72e3d5f0c25fdb12087a23da22be\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win32.whl\", hash = \"sha256:c9c3d058ebabb74db66e431095118094d06abf53284d9c81f27300d0e0d8bc7c\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f048dcf80db46f0098ccac01132761580d28e28bc0f78ae0d58048063317e15\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:a45e3c6913c5b87b3ff120dcdc03f6131fa0065027d0ed7ee6190736a74cd401\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:30c5e0cb5ae493c04c8b42916e52ca38079f1b235c2f8ae5f4527b963c401caf\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f75c7ab1f9e4aca5414ed4d8e5c0e303a34f4421f8a0d47a4d019ceff0ab6af4\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a1ed2dd2972641495a3ec98445e09766f077aee98a1c896dcb4ad0d303628e41\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:46bf43160c1a35f7ec506d254e5c890f3c03648a4dbac12d624e4490a7046cd1\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a24ed04c8ffd54b0729c07cee15a81d964e6fee0e3d4d342a27b020d22959dc6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:610faea79c43e44c71e1ec53a554553fa22321b65fae24889706c0a84d4ad86d\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:a9b15d491f3ad5d692e11f6b71f7857e7835eb677955c00cc0aefcd0669adaf6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:de2ea4b5833625383e464549fec1bc395c1bdeeb5f25c4a3a82b5a8c756ec22f\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:fc48c783f9c87e60831201f2cce7f3b2e4846bf4d8728eabe54d60700b318a0b\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win32.whl\", hash = \"sha256:85a950a4ac9c359340d5963966e3e0a94a676bd6245a4b55bc43949eee26a655\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:caaf0640ef5f5517f49bc275eca1406b0ffa6aa184892812030f04c2abf589a0\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:805b4371bf7197c329fcb3ead37e710d1bca9da5d583f5073b799d5c5bd1eee4\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:733e99bc2df47476e3848417c5a4540522f234dfd4ef3ab7fafdf555b082ec0c\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1257bdabf294dceb59f5e70c64a3e2f462c30c7ad68092d01bbbfb1c16b1ba36\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da95af8214998d77a98cc14e3a3bd00aa191526343078b530ceb0bd710fb48a5\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d63afe322132c194cf832bfec0dc69a99fb9bb6bbd550f161a49e9e855cc78ff\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f79fc4fc25f1c8698ff97788206bb3c2598949bfe0fef03d299eb1b5356ada99\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b62ce867176a75d03a665bad002af8e6d54644fad99a3c70905c543130e39d93\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:386c8bf53c502fff58903061338ce4f4950cbdcb23e2902d86c0f722b786bbe3\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:4ceb10419a9adf4460ea14cfd6bc43d08701f0835e979bf821052f1805850fe8\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win32.whl\", hash = \"sha256:a08d7e755f8ed21095a310a693525137cfe756ce62d066e53f502a83dc550f65\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:51392eae71afec0d0c8fb1a53b204dbb3bcabcb3c9b807eedf3e1e6ccf2de903\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f3a2b4222ce6b60e2e8b337bb9596923045681d71e5a082783484d845390938e\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:0984a4925a435b1da406122d4d7968dd861c1385afe3b45ba82b750f229811e2\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d01b12eeeb4427d3110de311e1774046ad344f5b1a7403101878976ecd7a10f3\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:706510fe141c86a69c8ddc029c7910003a17353970cff3b904ff0686a5927683\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de55b766c7aa2e2a3092c51e0483d700341182f08e67c63630d5b6f200bb28e5\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c59d6e989d07460165cc5ad3c61f9fd8f1b4796eacbd81cee78957842b834af4\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd398dbc6773384a17fe0d3e7eeb8d1a21c2200473ee6806bb5e6a8e62bb73dd\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:3edc8d958eb099c634dace3c7e16560ae474aa3803a5df240542b305d14e14ed\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:72e72408cad3d5419375fc87d289076ee319835bdfa2caad331e377589aebba9\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win32.whl\", hash = \"sha256:e03eab0a8677fa80d646b5ddece1cbeaf556c313dcfac435ba11f107ba117b5d\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:f6a16c31041f09ead72d69f583767292f750d24913dadacf5756b966aacb3f1a\"},\n    {file = \"cffi-1.17.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:636062ea65bd0195bc012fea9321aca499c0504409f413dc88af450b57ffd03b\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c7eac2ef9b63c79431bc4b25f1cd649d7f061a28808cbc6c47b534bd789ef964\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e221cf152cff04059d011ee126477f0d9588303eb57e88923578ace7baad17f9\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:31000ec67d4221a71bd3f67df918b1f88f676f1c3b535a7eb473255fdc0b83fc\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6f17be4345073b0a7b8ea599688f692ac3ef23ce28e5df79c04de519dbc4912c\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0e2b1fac190ae3ebfe37b979cc1ce69c81f4e4fe5746bb401dca63a9062cdaf1\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win32.whl\", hash = \"sha256:7596d6620d3fa590f677e9ee430df2958d2d6d6de2feeae5b20e82c00b76fbf8\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:78122be759c3f8a014ce010908ae03364d00a1f81ab5c7f4a7a5120607ea56e1\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:b2ab587605f4ba0bf81dc0cb08a41bd1c0a5906bd59243d56bad7668a6fc6c16\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:28b16024becceed8c6dfbc75629e27788d8a3f9030691a1dbf9821a128b22c36\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1d599671f396c4723d016dbddb72fe8e0397082b0a77a4fab8028923bec050e8\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ca74b8dbe6e8e8263c0ffd60277de77dcee6c837a3d0881d8c1ead7268c9e576\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f7f5baafcc48261359e14bcd6d9bff6d4b28d9103847c9e136694cb0501aef87\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:98e3969bcff97cae1b2def8ba499ea3d6f31ddfdb7635374834cf89a1a08ecf0\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdf5ce3acdfd1661132f2a9c19cac174758dc2352bfe37d98aa7512c6b7178b3\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:9755e4345d1ec879e3849e62222a18c7174d65a6a92d5b346b1863912168b595\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:f1e22e8c4419538cb197e4dd60acc919d7696e5ef98ee4da4e01d3f8cfa4cc5a\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:c03e868a0b3bc35839ba98e74211ed2b05d2119be4e8a0f224fba9384f1fe02e\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win32.whl\", hash = \"sha256:e31ae45bc2e29f6b2abd0de1cc3b9d5205aa847cafaecb8af1476a609a2f6eb7\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:d016c76bdd850f3c626af19b0542c9677ba156e4ee4fccfdd7848803533ef662\"},\n    {file = \"cffi-1.17.1.tar.gz\", hash = \"sha256:1c39c6016c32bc48dd54561950ebd6836e1670f2ae46128f67cf49e789c52824\"},\n]\n\n[package.dependencies]\npycparser = \"*\"\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"3.4.1\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:91b36a978b5ae0ee86c394f5a54d6ef44db1de0815eb43de826d41d21e4af3de\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7461baadb4dc00fd9e0acbe254e3d7d2112e7f92ced2adc96e54ef6501c5f176\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e218488cd232553829be0664c2292d3af2eeeb94b32bea483cf79ac6a694e037\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:80ed5e856eb7f30115aaf94e4a08114ccc8813e6ed1b5efa74f9f82e8509858f\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b010a7a4fd316c3c484d482922d13044979e78d1861f0e0650423144c616a46a\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4532bff1b8421fd0a320463030c7520f56a79c9024a4e88f01c537316019005a\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:d973f03c0cb71c5ed99037b870f2be986c3c05e63622c017ea9816881d2dd247\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3a3bd0dcd373514dcec91c411ddb9632c0d7d92aed7093b8c3bbb6d69ca74408\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d9c3cdf5390dcd29aa8056d13e8e99526cda0305acc038b96b30352aff5ff2bb\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:2bdfe3ac2e1bbe5b59a1a63721eb3b95fc9b6817ae4a46debbb4e11f6232428d\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:eab677309cdb30d047996b36d34caeda1dc91149e4fdca0b1a039b3f79d9a807\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-win32.whl\", hash = \"sha256:c0429126cf75e16c4f0ad00ee0eae4242dc652290f940152ca8c75c3a4b6ee8f\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:9f0b8b1c6d84c8034a44893aba5e767bf9c7a211e313a9605d9c617d7083829f\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:8bfa33f4f2672964266e940dd22a195989ba31669bd84629f05fab3ef4e2d125\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:28bf57629c75e810b6ae989f03c0828d64d6b26a5e205535585f96093e405ed1\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f08ff5e948271dc7e18a35641d2f11a4cd8dfd5634f55228b691e62b37125eb3\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:234ac59ea147c59ee4da87a0c0f098e9c8d169f4dc2a159ef720f1a61bbe27cd\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fd4ec41f914fa74ad1b8304bbc634b3de73d2a0889bd32076342a573e0779e00\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:eea6ee1db730b3483adf394ea72f808b6e18cf3cb6454b4d86e04fa8c4327a12\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:c96836c97b1238e9c9e3fe90844c947d5afbf4f4c92762679acfe19927d81d77\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:4d86f7aff21ee58f26dcf5ae81a9addbd914115cdebcbb2217e4f0ed8982e146\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:09b5e6733cbd160dcc09589227187e242a30a49ca5cefa5a7edd3f9d19ed53fd\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:5777ee0881f9499ed0f71cc82cf873d9a0ca8af166dfa0af8ec4e675b7df48e6\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:237bdbe6159cff53b4f24f397d43c6336c6b0b42affbe857970cefbb620911c8\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-win32.whl\", hash = \"sha256:8417cb1f36cc0bc7eaba8ccb0e04d55f0ee52df06df3ad55259b9a323555fc8b\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:d7f50a1f8c450f3925cb367d011448c39239bb3eb4117c36a6d354794de4ce76\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:73d94b58ec7fecbc7366247d3b0b10a21681004153238750bb67bd9012414545\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dad3e487649f498dd991eeb901125411559b22e8d7ab25d3aeb1af367df5efd7\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c30197aa96e8eed02200a83fba2657b4c3acd0f0aa4bdc9f6c1af8e8962e0757\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2369eea1ee4a7610a860d88f268eb39b95cb588acd7235e02fd5a5601773d4fa\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc2722592d8998c870fa4e290c2eec2c1569b87fe58618e67d38b4665dfa680d\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffc9202a29ab3920fa812879e95a9e78b2465fd10be7fcbd042899695d75e616\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:804a4d582ba6e5b747c625bf1255e6b1507465494a40a2130978bda7b932c90b\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:0f55e69f030f7163dffe9fd0752b32f070566451afe180f99dbeeb81f511ad8d\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c4c3e6da02df6fa1410a7680bd3f63d4f710232d3139089536310d027950696a\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:5df196eb874dae23dcfb968c83d4f8fdccb333330fe1fc278ac5ceeb101003a9\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:e358e64305fe12299a08e08978f51fc21fac060dcfcddd95453eabe5b93ed0e1\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-win32.whl\", hash = \"sha256:9b23ca7ef998bc739bf6ffc077c2116917eabcc901f88da1b9856b210ef63f35\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:6ff8a4a60c227ad87030d76e99cd1698345d4491638dfa6673027c48b3cd395f\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:aabfa34badd18f1da5ec1bc2715cadc8dca465868a4e73a0173466b688f29dda\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:22e14b5d70560b8dd51ec22863f370d1e595ac3d024cb8ad7d308b4cd95f8313\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8436c508b408b82d87dc5f62496973a1805cd46727c34440b0d29d8a2f50a6c9\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2d074908e1aecee37a7635990b2c6d504cd4766c7bc9fc86d63f9c09af3fa11b\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:955f8851919303c92343d2f66165294848d57e9bba6cf6e3625485a70a038d11\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:44ecbf16649486d4aebafeaa7ec4c9fed8b88101f4dd612dcaf65d5e815f837f\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0924e81d3d5e70f8126529951dac65c1010cdf117bb75eb02dd12339b57749dd\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2967f74ad52c3b98de4c3b32e1a44e32975e008a9cd2a8cc8966d6a5218c5cb2\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c75cb2a3e389853835e84a2d8fb2b81a10645b503eca9bcb98df6b5a43eb8886\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:09b26ae6b1abf0d27570633b2b078a2a20419c99d66fb2823173d73f188ce601\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:fa88b843d6e211393a37219e6a1c1df99d35e8fd90446f1118f4216e307e48cd\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-win32.whl\", hash = \"sha256:eb8178fe3dba6450a3e024e95ac49ed3400e506fd4e9e5c32d30adda88cbd407\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:b1ac5992a838106edb89654e0aebfc24f5848ae2547d22c2c3f66454daa11971\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f30bf9fd9be89ecb2360c7d94a711f00c09b976258846efe40db3d05828e8089\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:97f68b8d6831127e4787ad15e6757232e14e12060bec17091b85eb1486b91d8d\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7974a0b5ecd505609e3b19742b60cee7aa2aa2fb3151bc917e6e2646d7667dcf\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fc54db6c8593ef7d4b2a331b58653356cf04f67c960f584edb7c3d8c97e8f39e\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:311f30128d7d333eebd7896965bfcfbd0065f1716ec92bd5638d7748eb6f936a\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:7d053096f67cd1241601111b698f5cad775f97ab25d81567d3f59219b5f1adbd\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:807f52c1f798eef6cf26beb819eeb8819b1622ddfeef9d0977a8502d4db6d534\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:dccbe65bd2f7f7ec22c4ff99ed56faa1e9f785482b9bbd7c717e26fd723a1d1e\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:2fb9bd477fdea8684f78791a6de97a953c51831ee2981f8e4f583ff3b9d9687e\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:01732659ba9b5b873fc117534143e4feefecf3b2078b0a6a2e925271bb6f4cfa\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-win32.whl\", hash = \"sha256:7a4f97a081603d2050bfaffdefa5b02a9ec823f8348a572e39032caa8404a487\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:7b1bef6280950ee6c177b326508f86cad7ad4dff12454483b51d8b7d673a2c5d\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:ecddf25bee22fe4fe3737a399d0d177d72bc22be6913acfab364b40bce1ba83c\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8c60ca7339acd497a55b0ea5d506b2a2612afb2826560416f6894e8b5770d4a9\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b7b2d86dd06bfc2ade3312a83a5c364c7ec2e3498f8734282c6c3d4b07b346b8\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dd78cfcda14a1ef52584dbb008f7ac81c1328c0f58184bf9a84c49c605002da6\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6e27f48bcd0957c6d4cb9d6fa6b61d192d0b13d5ef563e5f2ae35feafc0d179c\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:01ad647cdd609225c5350561d084b42ddf732f4eeefe6e678765636791e78b9a\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:619a609aa74ae43d90ed2e89bdd784765de0a25ca761b93e196d938b8fd1dbbd\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:89149166622f4db9b4b6a449256291dc87a99ee53151c74cbd82a53c8c2f6ccd\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7709f51f5f7c853f0fb938bcd3bc59cdfdc5203635ffd18bf354f6967ea0f824\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:345b0426edd4e18138d6528aed636de7a9ed169b4aaf9d61a8c19e39d26838ca\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:0907f11d019260cdc3f94fbdb23ff9125f6b5d1039b76003b5b0ac9d6a6c9d5b\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-win32.whl\", hash = \"sha256:ea0d8d539afa5eb2728aa1932a988a9a7af94f18582ffae4bc10b3fbdad0626e\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:329ce159e82018d646c7ac45b01a430369d526569ec08516081727a20e9e4af4\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b97e690a2118911e39b4042088092771b4ae3fc3aa86518f84b8cf6888dbdb41\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:78baa6d91634dfb69ec52a463534bc0df05dbd546209b79a3880a34487f4b84f\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1a2bc9f351a75ef49d664206d51f8e5ede9da246602dc2d2726837620ea034b2\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:75832c08354f595c760a804588b9357d34ec00ba1c940c15e31e96d902093770\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0af291f4fe114be0280cdd29d533696a77b5b49cfde5467176ecab32353395c4\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0167ddc8ab6508fe81860a57dd472b2ef4060e8d378f0cc555707126830f2537\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:2a75d49014d118e4198bcee5ee0a6f25856b29b12dbf7cd012791f8a6cc5c496\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:363e2f92b0f0174b2f8238240a1a30142e3db7b957a5dd5689b0e75fb717cc78\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ab36c8eb7e454e34e60eb55ca5d241a5d18b2c6244f6827a30e451c42410b5f7\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:4c0907b1928a36d5a998d72d64d8eaa7244989f7aaaf947500d3a800c83a3fd6\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:04432ad9479fa40ec0f387795ddad4437a2b50417c69fa275e212933519ff294\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-win32.whl\", hash = \"sha256:3bed14e9c89dcb10e8f3a29f9ccac4955aebe93c71ae803af79265c9ca5644c5\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:49402233c892a461407c512a19435d1ce275543138294f7ef013f0b63d5d3765\"},\n    {file = \"charset_normalizer-3.4.1-py3-none-any.whl\", hash = \"sha256:d98b1668f06378c6dbefec3b92299716b931cd4e6061f3c875a71ced1780ab85\"},\n    {file = \"charset_normalizer-3.4.1.tar.gz\", hash = \"sha256:44251f18cd68a75b56585dd00dae26183e102cd5e0f9f1466e6df5da2ed64ea3\"},\n]\n\n[[package]]\nname = \"click\"\nversion = \"8.1.8\"\ndescription = \"Composable command line interface toolkit\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"click-8.1.8-py3-none-any.whl\", hash = \"sha256:63c132bbbed01578a06712a2d1f497bb62d9c1c0d329b7903a866228027263b2\"},\n    {file = \"click-8.1.8.tar.gz\", hash = \"sha256:ed53c9d8990d83c2a27deae68e4ee337473f6330c040a31d4225c9574d16096a\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"codespell\"\nversion = \"2.3.0\"\ndescription = \"Codespell\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"codespell-2.3.0-py3-none-any.whl\", hash = \"sha256:a9c7cef2501c9cfede2110fd6d4e5e62296920efe9abfb84648df866e47f58d1\"},\n    {file = \"codespell-2.3.0.tar.gz\", hash = \"sha256:360c7d10f75e65f67bad720af7007e1060a5d395670ec11a7ed1fed9dd17471f\"},\n]\n\n[package.extras]\ndev = [\"Pygments\", \"build\", \"chardet\", \"pre-commit\", \"pytest\", \"pytest-cov\", \"pytest-dependency\", \"ruff\", \"tomli\", \"twine\"]\nhard-encoding-detection = [\"chardet\"]\ntoml = [\"tomli\"]\ntypes = [\"chardet (>=5.1.0)\", \"mypy\", \"pytest\", \"pytest-cov\", \"pytest-dependency\"]\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\n\n[[package]]\nname = \"covdefaults\"\nversion = \"2.3.0\"\ndescription = \"A coverage plugin to provide sensible default settings\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"covdefaults-2.3.0-py2.py3-none-any.whl\", hash = \"sha256:2832961f6ffcfe4b57c338bc3418a3526f495c26fb9c54565409c5532f7c41be\"},\n    {file = \"covdefaults-2.3.0.tar.gz\", hash = \"sha256:4e99f679f12d792bc62e5510fa3eb59546ed47bd569e36e4fddc4081c9c3ebf7\"},\n]\n\n[package.dependencies]\ncoverage = \">=6.0.2\"\n\n[[package]]\nname = \"coverage\"\nversion = \"7.6.10\"\ndescription = \"Code coverage measurement for Python\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"coverage-7.6.10-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:5c912978f7fbf47ef99cec50c4401340436d200d41d714c7a4766f377c5b7b78\"},\n    {file = \"coverage-7.6.10-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:a01ec4af7dfeb96ff0078ad9a48810bb0cc8abcb0115180c6013a6b26237626c\"},\n    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a3b204c11e2b2d883946fe1d97f89403aa1811df28ce0447439178cc7463448a\"},\n    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:32ee6d8491fcfc82652a37109f69dee9a830e9379166cb73c16d8dc5c2915165\"},\n    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:675cefc4c06e3b4c876b85bfb7c59c5e2218167bbd4da5075cbe3b5790a28988\"},\n    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f4f620668dbc6f5e909a0946a877310fb3d57aea8198bde792aae369ee1c23b5\"},\n    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:4eea95ef275de7abaef630c9b2c002ffbc01918b726a39f5a4353916ec72d2f3\"},\n    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e2f0280519e42b0a17550072861e0bc8a80a0870de260f9796157d3fca2733c5\"},\n    {file = \"coverage-7.6.10-cp310-cp310-win32.whl\", hash = \"sha256:bc67deb76bc3717f22e765ab3e07ee9c7a5e26b9019ca19a3b063d9f4b874244\"},\n    {file = \"coverage-7.6.10-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f460286cb94036455e703c66988851d970fdfd8acc2a1122ab7f4f904e4029e\"},\n    {file = \"coverage-7.6.10-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ea3c8f04b3e4af80e17bab607c386a830ffc2fb88a5484e1df756478cf70d1d3\"},\n    {file = \"coverage-7.6.10-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:507a20fc863cae1d5720797761b42d2d87a04b3e5aeb682ef3b7332e90598f43\"},\n    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d37a84878285b903c0fe21ac8794c6dab58150e9359f1aaebbeddd6412d53132\"},\n    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a534738b47b0de1995f85f582d983d94031dffb48ab86c95bdf88dc62212142f\"},\n    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0d7a2bf79378d8fb8afaa994f91bfd8215134f8631d27eba3e0e2c13546ce994\"},\n    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:6713ba4b4ebc330f3def51df1d5d38fad60b66720948112f114968feb52d3f99\"},\n    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ab32947f481f7e8c763fa2c92fd9f44eeb143e7610c4ca9ecd6a36adab4081bd\"},\n    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:7bbd8c8f1b115b892e34ba66a097b915d3871db7ce0e6b9901f462ff3a975377\"},\n    {file = \"coverage-7.6.10-cp311-cp311-win32.whl\", hash = \"sha256:299e91b274c5c9cdb64cbdf1b3e4a8fe538a7a86acdd08fae52301b28ba297f8\"},\n    {file = \"coverage-7.6.10-cp311-cp311-win_amd64.whl\", hash = \"sha256:489a01f94aa581dbd961f306e37d75d4ba16104bbfa2b0edb21d29b73be83609\"},\n    {file = \"coverage-7.6.10-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:27c6e64726b307782fa5cbe531e7647aee385a29b2107cd87ba7c0105a5d3853\"},\n    {file = \"coverage-7.6.10-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:c56e097019e72c373bae32d946ecf9858fda841e48d82df7e81c63ac25554078\"},\n    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c7827a5bc7bdb197b9e066cdf650b2887597ad124dd99777332776f7b7c7d0d0\"},\n    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:204a8238afe787323a8b47d8be4df89772d5c1e4651b9ffa808552bdf20e1d50\"},\n    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e67926f51821b8e9deb6426ff3164870976fe414d033ad90ea75e7ed0c2e5022\"},\n    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:e78b270eadb5702938c3dbe9367f878249b5ef9a2fcc5360ac7bff694310d17b\"},\n    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:714f942b9c15c3a7a5fe6876ce30af831c2ad4ce902410b7466b662358c852c0\"},\n    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:abb02e2f5a3187b2ac4cd46b8ced85a0858230b577ccb2c62c81482ca7d18852\"},\n    {file = \"coverage-7.6.10-cp312-cp312-win32.whl\", hash = \"sha256:55b201b97286cf61f5e76063f9e2a1d8d2972fc2fcfd2c1272530172fd28c359\"},\n    {file = \"coverage-7.6.10-cp312-cp312-win_amd64.whl\", hash = \"sha256:e4ae5ac5e0d1e4edfc9b4b57b4cbecd5bc266a6915c500f358817a8496739247\"},\n    {file = \"coverage-7.6.10-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:05fca8ba6a87aabdd2d30d0b6c838b50510b56cdcfc604d40760dae7153b73d9\"},\n    {file = \"coverage-7.6.10-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:9e80eba8801c386f72e0712a0453431259c45c3249f0009aff537a517b52942b\"},\n    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a372c89c939d57abe09e08c0578c1d212e7a678135d53aa16eec4430adc5e690\"},\n    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ec22b5e7fe7a0fa8509181c4aac1db48f3dd4d3a566131b313d1efc102892c18\"},\n    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:26bcf5c4df41cad1b19c84af71c22cbc9ea9a547fc973f1f2cc9a290002c8b3c\"},\n    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4e4630c26b6084c9b3cb53b15bd488f30ceb50b73c35c5ad7871b869cb7365fd\"},\n    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2396e8116db77789f819d2bc8a7e200232b7a282c66e0ae2d2cd84581a89757e\"},\n    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:79109c70cc0882e4d2d002fe69a24aa504dec0cc17169b3c7f41a1d341a73694\"},\n    {file = \"coverage-7.6.10-cp313-cp313-win32.whl\", hash = \"sha256:9e1747bab246d6ff2c4f28b4d186b205adced9f7bd9dc362051cc37c4a0c7bd6\"},\n    {file = \"coverage-7.6.10-cp313-cp313-win_amd64.whl\", hash = \"sha256:254f1a3b1eef5f7ed23ef265eaa89c65c8c5b6b257327c149db1ca9d4a35f25e\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:2ccf240eb719789cedbb9fd1338055de2761088202a9a0b73032857e53f612fe\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:0c807ca74d5a5e64427c8805de15b9ca140bba13572d6d74e262f46f50b13273\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2bcfa46d7709b5a7ffe089075799b902020b62e7ee56ebaed2f4bdac04c508d8\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4e0de1e902669dccbf80b0415fb6b43d27edca2fbd48c74da378923b05316098\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3f7b444c42bbc533aaae6b5a2166fd1a797cdb5eb58ee51a92bee1eb94a1e1cb\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:b330368cb99ef72fcd2dc3ed260adf67b31499584dc8a20225e85bfe6f6cfed0\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:9a7cfb50515f87f7ed30bc882f68812fd98bc2852957df69f3003d22a2aa0abf\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:6f93531882a5f68c28090f901b1d135de61b56331bba82028489bc51bdd818d2\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-win32.whl\", hash = \"sha256:89d76815a26197c858f53c7f6a656686ec392b25991f9e409bcef020cd532312\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-win_amd64.whl\", hash = \"sha256:54a5f0f43950a36312155dae55c505a76cd7f2b12d26abeebbe7a0b36dbc868d\"},\n    {file = \"coverage-7.6.10-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:656c82b8a0ead8bba147de9a89bda95064874c91a3ed43a00e687f23cc19d53a\"},\n    {file = \"coverage-7.6.10-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ccc2b70a7ed475c68ceb548bf69cec1e27305c1c2606a5eb7c3afff56a1b3b27\"},\n    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a5e37dc41d57ceba70956fa2fc5b63c26dba863c946ace9705f8eca99daecdc4\"},\n    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0aa9692b4fdd83a4647eeb7db46410ea1322b5ed94cd1715ef09d1d5922ba87f\"},\n    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aa744da1820678b475e4ba3dfd994c321c5b13381d1041fe9c608620e6676e25\"},\n    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:c0b1818063dc9e9d838c09e3a473c1422f517889436dd980f5d721899e66f315\"},\n    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:59af35558ba08b758aec4d56182b222976330ef8d2feacbb93964f576a7e7a90\"},\n    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7ed2f37cfce1ce101e6dffdfd1c99e729dd2ffc291d02d3e2d0af8b53d13840d\"},\n    {file = \"coverage-7.6.10-cp39-cp39-win32.whl\", hash = \"sha256:4bcc276261505d82f0ad426870c3b12cb177752834a633e737ec5ee79bbdff18\"},\n    {file = \"coverage-7.6.10-cp39-cp39-win_amd64.whl\", hash = \"sha256:457574f4599d2b00f7f637a0700a6422243b3565509457b2dbd3f50703e11f59\"},\n    {file = \"coverage-7.6.10-pp39.pp310-none-any.whl\", hash = \"sha256:fd34e7b3405f0cc7ab03d54a334c17a9e802897580d964bd8c2001f4b9fd488f\"},\n    {file = \"coverage-7.6.10.tar.gz\", hash = \"sha256:7fb105327c8f8f0682e29843e2ff96af9dcbe5bab8eeb4b398c6a33a16d80a23\"},\n]\n\n[package.dependencies]\ntomli = {version = \"*\", optional = true, markers = \"python_full_version <= \\\"3.11.0a6\\\" and extra == \\\"toml\\\"\"}\n\n[package.extras]\ntoml = [\"tomli\"]\n\n[[package]]\nname = \"decorator\"\nversion = \"5.1.1\"\ndescription = \"Decorators for Humans\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"decorator-5.1.1-py3-none-any.whl\", hash = \"sha256:b8c3f85900b9dc423225913c5aace94729fe1fa9763b38939a95226f02d37186\"},\n    {file = \"decorator-5.1.1.tar.gz\", hash = \"sha256:637996211036b6385ef91435e4fae22989472f9d571faba8927ba8253acbc330\"},\n]\n\n[[package]]\nname = \"docutils\"\nversion = \"0.21.2\"\ndescription = \"Docutils -- Python Documentation Utilities\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"docutils-0.21.2-py3-none-any.whl\", hash = \"sha256:dafca5b9e384f0e419294eb4d2ff9fa826435bf15f15b7bd45723e8ad76811b2\"},\n    {file = \"docutils-0.21.2.tar.gz\", hash = \"sha256:3a6b18732edf182daa3cd12775bbb338cf5691468f91eeeb109deff6ebfa986f\"},\n]\n\n[[package]]\nname = \"exceptiongroup\"\nversion = \"1.2.2\"\ndescription = \"Backport of PEP 654 (exception groups)\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"exceptiongroup-1.2.2-py3-none-any.whl\", hash = \"sha256:3111b9d131c238bec2f8f516e123e14ba243563fb135d3fe885990585aa7795b\"},\n    {file = \"exceptiongroup-1.2.2.tar.gz\", hash = \"sha256:47c2edf7c6738fafb49fd34290706d1a1a2f4d1c6df275526b62cbb4aa5393cc\"},\n]\n\n[package.extras]\ntest = [\"pytest (>=6)\"]\n\n[[package]]\nname = \"flake8\"\nversion = \"7.1.1\"\ndescription = \"the modular source code checker: pep8 pyflakes and co\"\noptional = false\npython-versions = \">=3.8.1\"\nfiles = [\n    {file = \"flake8-7.1.1-py2.py3-none-any.whl\", hash = \"sha256:597477df7860daa5aa0fdd84bf5208a043ab96b8e96ab708770ae0364dd03213\"},\n    {file = \"flake8-7.1.1.tar.gz\", hash = \"sha256:049d058491e228e03e67b390f311bbf88fce2dbaa8fa673e7aea87b7198b8d38\"},\n]\n\n[package.dependencies]\nmccabe = \">=0.7.0,<0.8.0\"\npycodestyle = \">=2.12.0,<2.13.0\"\npyflakes = \">=3.2.0,<3.3.0\"\n\n[[package]]\nname = \"furo\"\nversion = \"2024.8.6\"\ndescription = \"A clean customisable Sphinx documentation theme.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"furo-2024.8.6-py3-none-any.whl\", hash = \"sha256:6cd97c58b47813d3619e63e9081169880fbe331f0ca883c871ff1f3f11814f5c\"},\n    {file = \"furo-2024.8.6.tar.gz\", hash = \"sha256:b63e4cee8abfc3136d3bc03a3d45a76a850bada4d6374d24c1716b0e01394a01\"},\n]\n\n[package.dependencies]\nbeautifulsoup4 = \"*\"\npygments = \">=2.7\"\nsphinx = \">=6.0,<9.0\"\nsphinx-basic-ng = \">=1.0.0.beta2\"\n\n[[package]]\nname = \"h11\"\nversion = \"0.14.0\"\ndescription = \"A pure-Python, bring-your-own-I/O implementation of HTTP/1.1\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"h11-0.14.0-py3-none-any.whl\", hash = \"sha256:e3fe4ac4b851c468cc8363d500db52c2ead036020723024a109d37346efaa761\"},\n    {file = \"h11-0.14.0.tar.gz\", hash = \"sha256:8f19fbbe99e72420ff35c00b27a34cb9937e902a8b810e2c88300c6f0a3b699d\"},\n]\n\n[[package]]\nname = \"httpcore\"\nversion = \"1.0.7\"\ndescription = \"A minimal low-level HTTP client.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"httpcore-1.0.7-py3-none-any.whl\", hash = \"sha256:a3fff8f43dc260d5bd363d9f9cf1830fa3a458b332856f34282de498ed420edd\"},\n    {file = \"httpcore-1.0.7.tar.gz\", hash = \"sha256:8551cb62a169ec7162ac7be8d4817d561f60e08eaa485234898414bb5a8a0b4c\"},\n]\n\n[package.dependencies]\ncertifi = \"*\"\nh11 = \">=0.13,<0.15\"\n\n[package.extras]\nasyncio = [\"anyio (>=4.0,<5.0)\"]\nhttp2 = [\"h2 (>=3,<5)\"]\nsocks = [\"socksio (==1.*)\"]\ntrio = [\"trio (>=0.22.0,<1.0)\"]\n\n[[package]]\nname = \"httpx\"\nversion = \"0.28.1\"\ndescription = \"The next generation HTTP client.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"httpx-0.28.1-py3-none-any.whl\", hash = \"sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad\"},\n    {file = \"httpx-0.28.1.tar.gz\", hash = \"sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc\"},\n]\n\n[package.dependencies]\nanyio = \"*\"\ncertifi = \"*\"\nhttpcore = \"==1.*\"\nidna = \"*\"\n\n[package.extras]\nbrotli = [\"brotli\", \"brotlicffi\"]\ncli = [\"click (==8.*)\", \"pygments (==2.*)\", \"rich (>=10,<14)\"]\nhttp2 = [\"h2 (>=3,<5)\"]\nsocks = [\"socksio (==1.*)\"]\nzstd = [\"zstandard (>=0.18.0)\"]\n\n[[package]]\nname = \"hypothesis\"\nversion = \"6.123.13\"\ndescription = \"A library for property-based testing\"\noptional = true\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"hypothesis-6.123.13-py3-none-any.whl\", hash = \"sha256:57c3b797664f6b45ce322a2e7854ee1c49fca67c07803cfa6ce2a9b825629d34\"},\n    {file = \"hypothesis-6.123.13.tar.gz\", hash = \"sha256:4a680787b7f84d7df918d9c05203677931495e548bbc962aa1c9e4643add58f3\"},\n]\n\n[package.dependencies]\nattrs = \">=22.2.0\"\nexceptiongroup = {version = \">=1.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\nsortedcontainers = \">=2.1.0,<3.0.0\"\n\n[package.extras]\nall = [\"black (>=19.10b0)\", \"click (>=7.0)\", \"crosshair-tool (>=0.0.81)\", \"django (>=4.2)\", \"dpcontracts (>=0.4)\", \"hypothesis-crosshair (>=0.0.18)\", \"lark (>=0.10.1)\", \"libcst (>=0.3.16)\", \"numpy (>=1.19.3)\", \"pandas (>=1.1)\", \"pytest (>=4.6)\", \"python-dateutil (>=1.4)\", \"pytz (>=2014.1)\", \"redis (>=3.0.0)\", \"rich (>=9.0.0)\", \"tzdata (>=2024.2)\"]\ncli = [\"black (>=19.10b0)\", \"click (>=7.0)\", \"rich (>=9.0.0)\"]\ncodemods = [\"libcst (>=0.3.16)\"]\ncrosshair = [\"crosshair-tool (>=0.0.81)\", \"hypothesis-crosshair (>=0.0.18)\"]\ndateutil = [\"python-dateutil (>=1.4)\"]\ndjango = [\"django (>=4.2)\"]\ndpcontracts = [\"dpcontracts (>=0.4)\"]\nghostwriter = [\"black (>=19.10b0)\"]\nlark = [\"lark (>=0.10.1)\"]\nnumpy = [\"numpy (>=1.19.3)\"]\npandas = [\"pandas (>=1.1)\"]\npytest = [\"pytest (>=4.6)\"]\npytz = [\"pytz (>=2014.1)\"]\nredis = [\"redis (>=3.0.0)\"]\nzoneinfo = [\"tzdata (>=2024.2)\"]\n\n[[package]]\nname = \"idna\"\nversion = \"3.10\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\"},\n    {file = \"idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\"},\n]\n\n[package.extras]\nall = [\"flake8 (>=7.1.1)\", \"mypy (>=1.11.2)\", \"pytest (>=8.3.2)\", \"ruff (>=0.6.2)\"]\n\n[[package]]\nname = \"imagesize\"\nversion = \"1.4.1\"\ndescription = \"Getting image size from png/jpeg/jpeg2000/gif file\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"imagesize-1.4.1-py2.py3-none-any.whl\", hash = \"sha256:0d8d18d08f840c19d0ee7ca1fd82490fdc3729b7ac93f49870406ddde8ef8d8b\"},\n    {file = \"imagesize-1.4.1.tar.gz\", hash = \"sha256:69150444affb9cb0d5cc5a92b3676f0b2fb7cd9ae39e947a5e11a36b4497cd4a\"},\n]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"2.0.0\"\ndescription = \"brain-dead simple config-ini parsing\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"iniconfig-2.0.0-py3-none-any.whl\", hash = \"sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374\"},\n    {file = \"iniconfig-2.0.0.tar.gz\", hash = \"sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3\"},\n]\n\n[[package]]\nname = \"jinja2\"\nversion = \"3.1.5\"\ndescription = \"A very fast and expressive template engine.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"jinja2-3.1.5-py3-none-any.whl\", hash = \"sha256:aba0f4dc9ed8013c424088f68a5c226f7d6097ed89b246d7749c2ec4175c6adb\"},\n    {file = \"jinja2-3.1.5.tar.gz\", hash = \"sha256:8fefff8dc3034e27bb80d67c671eb8a9bc424c0ef4c0826edbff304cceff43bb\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=2.0\"\n\n[package.extras]\ni18n = [\"Babel (>=2.7)\"]\n\n[[package]]\nname = \"jsonschema\"\nversion = \"4.23.0\"\ndescription = \"An implementation of JSON Schema validation for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"jsonschema-4.23.0-py3-none-any.whl\", hash = \"sha256:fbadb6f8b144a8f8cf9f0b89ba94501d143e50411a1278633f56a7acf7fd5566\"},\n    {file = \"jsonschema-4.23.0.tar.gz\", hash = \"sha256:d71497fef26351a33265337fa77ffeb82423f3ea21283cd9467bb03999266bc4\"},\n]\n\n[package.dependencies]\nattrs = \">=22.2.0\"\njsonschema-specifications = \">=2023.03.6\"\nreferencing = \">=0.28.4\"\nrpds-py = \">=0.7.1\"\n\n[package.extras]\nformat = [\"fqdn\", \"idna\", \"isoduration\", \"jsonpointer (>1.13)\", \"rfc3339-validator\", \"rfc3987\", \"uri-template\", \"webcolors (>=1.11)\"]\nformat-nongpl = [\"fqdn\", \"idna\", \"isoduration\", \"jsonpointer (>1.13)\", \"rfc3339-validator\", \"rfc3986-validator (>0.1.0)\", \"uri-template\", \"webcolors (>=24.6.0)\"]\n\n[[package]]\nname = \"jsonschema-specifications\"\nversion = \"2024.10.1\"\ndescription = \"The JSON Schema meta-schemas and vocabularies, exposed as a Registry\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"jsonschema_specifications-2024.10.1-py3-none-any.whl\", hash = \"sha256:a09a0680616357d9a0ecf05c12ad234479f549239d0f5b55f3deea67475da9bf\"},\n    {file = \"jsonschema_specifications-2024.10.1.tar.gz\", hash = \"sha256:0f38b83639958ce1152d02a7f062902c41c8fd20d558b0c34344292d417ae272\"},\n]\n\n[package.dependencies]\nreferencing = \">=0.31.0\"\n\n[[package]]\nname = \"markdown-it-py\"\nversion = \"3.0.0\"\ndescription = \"Python port of markdown-it. Markdown parsing, done right!\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"markdown-it-py-3.0.0.tar.gz\", hash = \"sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb\"},\n    {file = \"markdown_it_py-3.0.0-py3-none-any.whl\", hash = \"sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1\"},\n]\n\n[package.dependencies]\nmdurl = \">=0.1,<1.0\"\n\n[package.extras]\nbenchmarking = [\"psutil\", \"pytest\", \"pytest-benchmark\"]\ncode-style = [\"pre-commit (>=3.0,<4.0)\"]\ncompare = [\"commonmark (>=0.9,<1.0)\", \"markdown (>=3.4,<4.0)\", \"mistletoe (>=1.0,<2.0)\", \"mistune (>=2.0,<3.0)\", \"panflute (>=2.3,<3.0)\"]\nlinkify = [\"linkify-it-py (>=1,<3)\"]\nplugins = [\"mdit-py-plugins\"]\nprofiling = [\"gprof2dot\"]\nrtd = [\"jupyter_sphinx\", \"mdit-py-plugins\", \"myst-parser\", \"pyyaml\", \"sphinx\", \"sphinx-copybutton\", \"sphinx-design\", \"sphinx_book_theme\"]\ntesting = [\"coverage\", \"pytest\", \"pytest-cov\", \"pytest-regressions\"]\n\n[[package]]\nname = \"markupsafe\"\nversion = \"3.0.2\"\ndescription = \"Safely add untrusted strings to HTML/XML markup.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:7e94c425039cde14257288fd61dcfb01963e658efbc0ff54f5306b06054700f8\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9e2d922824181480953426608b81967de705c3cef4d1af983af849d7bd619158\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:38a9ef736c01fccdd6600705b09dc574584b89bea478200c5fbf112a6b0d5579\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bbcb445fa71794da8f178f0f6d66789a28d7319071af7a496d4d507ed566270d\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:57cb5a3cf367aeb1d316576250f65edec5bb3be939e9247ae594b4bcbc317dfb\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:3809ede931876f5b2ec92eef964286840ed3540dadf803dd570c3b7e13141a3b\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:e07c3764494e3776c602c1e78e298937c3315ccc9043ead7e685b7f2b8d47b3c\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:b424c77b206d63d500bcb69fa55ed8d0e6a3774056bdc4839fc9298a7edca171\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-win32.whl\", hash = \"sha256:fcabf5ff6eea076f859677f5f0b6b5c1a51e70a376b0579e0eadef8db48c6b50\"},\n    {file = \"MarkupSafe-3.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:6af100e168aa82a50e186c82875a5893c5597a0c1ccdb0d8b40240b1f28b969a\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:9025b4018f3a1314059769c7bf15441064b2207cb3f065e6ea1e7359cb46db9d\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:93335ca3812df2f366e80509ae119189886b0f3c2b81325d39efdb84a1e2ae93\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2cb8438c3cbb25e220c2ab33bb226559e7afb3baec11c4f218ffa7308603c832\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a123e330ef0853c6e822384873bef7507557d8e4a082961e1defa947aa59ba84\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1e084f686b92e5b83186b07e8a17fc09e38fff551f3602b249881fec658d3eca\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:d8213e09c917a951de9d09ecee036d5c7d36cb6cb7dbaece4c71a60d79fb9798\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:5b02fb34468b6aaa40dfc198d813a641e3a63b98c2b05a16b9f80b7ec314185e\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:0bff5e0ae4ef2e1ae4fdf2dfd5b76c75e5c2fa4132d05fc1b0dabcd20c7e28c4\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-win32.whl\", hash = \"sha256:6c89876f41da747c8d3677a2b540fb32ef5715f97b66eeb0c6b66f5e3ef6f59d\"},\n    {file = \"MarkupSafe-3.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:70a87b411535ccad5ef2f1df5136506a10775d267e197e4cf531ced10537bd6b\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:9778bd8ab0a994ebf6f84c2b949e65736d5575320a17ae8984a77fab08db94cf\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:846ade7b71e3536c4e56b386c2a47adf5741d2d8b94ec9dc3e92e5e1ee1e2225\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1c99d261bd2d5f6b59325c92c73df481e05e57f19837bdca8413b9eac4bd8028\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e17c96c14e19278594aa4841ec148115f9c7615a47382ecb6b82bd8fea3ab0c8\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:88416bd1e65dcea10bc7569faacb2c20ce071dd1f87539ca2ab364bf6231393c\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:2181e67807fc2fa785d0592dc2d6206c019b9502410671cc905d132a92866557\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:52305740fe773d09cffb16f8ed0427942901f00adedac82ec8b67752f58a1b22\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ad10d3ded218f1039f11a75f8091880239651b52e9bb592ca27de44eed242a48\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-win32.whl\", hash = \"sha256:0f4ca02bea9a23221c0182836703cbf8930c5e9454bacce27e767509fa286a30\"},\n    {file = \"MarkupSafe-3.0.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:8e06879fc22a25ca47312fbe7c8264eb0b662f6db27cb2d3bbbc74b1df4b9b87\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ba9527cdd4c926ed0760bc301f6728ef34d841f405abf9d4f959c478421e4efd\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f8b3d067f2e40fe93e1ccdd6b2e1d16c43140e76f02fb1319a05cf2b79d99430\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:569511d3b58c8791ab4c2e1285575265991e6d8f8700c7be0e88f86cb0672094\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:15ab75ef81add55874e7ab7055e9c397312385bd9ced94920f2802310c930396\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f3818cb119498c0678015754eba762e0d61e5b52d34c8b13d770f0719f7b1d79\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:cdb82a876c47801bb54a690c5ae105a46b392ac6099881cdfb9f6e95e4014c6a\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:cabc348d87e913db6ab4aa100f01b08f481097838bdddf7c7a84b7575b7309ca\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:444dcda765c8a838eaae23112db52f1efaf750daddb2d9ca300bcae1039adc5c\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bcf3e58998965654fdaff38e58584d8937aa3096ab5354d493c77d1fdd66d7a1\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:e6a2a455bd412959b57a172ce6328d2dd1f01cb2135efda2e4576e8a23fa3b0f\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-macosx_10_13_universal2.whl\", hash = \"sha256:b5a6b3ada725cea8a5e634536b1b01c30bcdcd7f9c6fff4151548d5bf6b3a36c\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:a904af0a6162c73e3edcb969eeeb53a63ceeb5d8cf642fade7d39e7963a22ddb\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4aa4e5faecf353ed117801a068ebab7b7e09ffb6e1d5e412dc852e0da018126c\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c0ef13eaeee5b615fb07c9a7dadb38eac06a0608b41570d8ade51c56539e509d\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d16a81a06776313e817c951135cf7340a3e91e8c1ff2fac444cfd75fffa04afe\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:6381026f158fdb7c72a168278597a5e3a5222e83ea18f543112b2662a9b699c5\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:3d79d162e7be8f996986c064d1c7c817f6df3a77fe3d6859f6f9e7be4b8c213a\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:131a3c7689c85f5ad20f9f6fb1b866f402c445b220c19fe4308c0b147ccd2ad9\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-win32.whl\", hash = \"sha256:ba8062ed2cf21c07a9e295d5b8a2a5ce678b913b45fdf68c32d95d6c1291e0b6\"},\n    {file = \"MarkupSafe-3.0.2-cp313-cp313t-win_amd64.whl\", hash = \"sha256:e444a31f8db13eb18ada366ab3cf45fd4b31e4db1236a4448f68778c1d1a5a2f\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:eaa0a10b7f72326f1372a713e73c3f739b524b3af41feb43e4921cb529f5929a\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:48032821bbdf20f5799ff537c7ac3d1fba0ba032cfc06194faffa8cda8b560ff\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1a9d3f5f0901fdec14d8d2f66ef7d035f2157240a433441719ac9a3fba440b13\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:88b49a3b9ff31e19998750c38e030fc7bb937398b1f78cfa599aaef92d693144\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cfad01eed2c2e0c01fd0ecd2ef42c492f7f93902e39a42fc9ee1692961443a29\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:1225beacc926f536dc82e45f8a4d68502949dc67eea90eab715dea3a21c1b5f0\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:3169b1eefae027567d1ce6ee7cae382c57fe26e82775f460f0b2778beaad66c0\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:eb7972a85c54febfb25b5c4b4f3af4dcc731994c7da0d8a0b4a6eb0640e1d178\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-win32.whl\", hash = \"sha256:8c4e8c3ce11e1f92f6536ff07154f9d49677ebaaafc32db9db4620bc11ed480f\"},\n    {file = \"MarkupSafe-3.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:6e296a513ca3d94054c2c881cc913116e90fd030ad1c656b3869762b754f5f8a\"},\n    {file = \"markupsafe-3.0.2.tar.gz\", hash = \"sha256:ee55d3edf80167e48ea11a923c7386f4669df67d7994554387f84e7d8b0a2bf0\"},\n]\n\n[[package]]\nname = \"mccabe\"\nversion = \"0.7.0\"\ndescription = \"McCabe checker, plugin for flake8\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"mccabe-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\"},\n    {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},\n]\n\n[[package]]\nname = \"mdit-py-plugins\"\nversion = \"0.4.2\"\ndescription = \"Collection of plugins for markdown-it-py\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"mdit_py_plugins-0.4.2-py3-none-any.whl\", hash = \"sha256:0c673c3f889399a33b95e88d2f0d111b4447bdfea7f237dab2d488f459835636\"},\n    {file = \"mdit_py_plugins-0.4.2.tar.gz\", hash = \"sha256:5f2cd1fdb606ddf152d37ec30e46101a60512bc0e5fa1a7002c36647b09e26b5\"},\n]\n\n[package.dependencies]\nmarkdown-it-py = \">=1.0.0,<4.0.0\"\n\n[package.extras]\ncode-style = [\"pre-commit\"]\nrtd = [\"myst-parser\", \"sphinx-book-theme\"]\ntesting = [\"coverage\", \"pytest\", \"pytest-cov\", \"pytest-regressions\"]\n\n[[package]]\nname = \"mdurl\"\nversion = \"0.1.2\"\ndescription = \"Markdown URL utilities\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"mdurl-0.1.2-py3-none-any.whl\", hash = \"sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8\"},\n    {file = \"mdurl-0.1.2.tar.gz\", hash = \"sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba\"},\n]\n\n[[package]]\nname = \"mypy\"\nversion = \"1.14.1\"\ndescription = \"Optional static typing for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"mypy-1.14.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:52686e37cf13d559f668aa398dd7ddf1f92c5d613e4f8cb262be2fb4fedb0fcb\"},\n    {file = \"mypy-1.14.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:1fb545ca340537d4b45d3eecdb3def05e913299ca72c290326be19b3804b39c0\"},\n    {file = \"mypy-1.14.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:90716d8b2d1f4cd503309788e51366f07c56635a3309b0f6a32547eaaa36a64d\"},\n    {file = \"mypy-1.14.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:2ae753f5c9fef278bcf12e1a564351764f2a6da579d4a81347e1d5a15819997b\"},\n    {file = \"mypy-1.14.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e0fe0f5feaafcb04505bcf439e991c6d8f1bf8b15f12b05feeed96e9e7bf1427\"},\n    {file = \"mypy-1.14.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:7d54bd85b925e501c555a3227f3ec0cfc54ee8b6930bd6141ec872d1c572f81f\"},\n    {file = \"mypy-1.14.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:f995e511de847791c3b11ed90084a7a0aafdc074ab88c5a9711622fe4751138c\"},\n    {file = \"mypy-1.14.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d64169ec3b8461311f8ce2fd2eb5d33e2d0f2c7b49116259c51d0d96edee48d1\"},\n    {file = \"mypy-1.14.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:ba24549de7b89b6381b91fbc068d798192b1b5201987070319889e93038967a8\"},\n    {file = \"mypy-1.14.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:183cf0a45457d28ff9d758730cd0210419ac27d4d3f285beda038c9083363b1f\"},\n    {file = \"mypy-1.14.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:f2a0ecc86378f45347f586e4163d1769dd81c5a223d577fe351f26b179e148b1\"},\n    {file = \"mypy-1.14.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:ad3301ebebec9e8ee7135d8e3109ca76c23752bac1e717bc84cd3836b4bf3eae\"},\n    {file = \"mypy-1.14.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:30ff5ef8519bbc2e18b3b54521ec319513a26f1bba19a7582e7b1f58a6e69f14\"},\n    {file = \"mypy-1.14.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:cb9f255c18052343c70234907e2e532bc7e55a62565d64536dbc7706a20b78b9\"},\n    {file = \"mypy-1.14.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:8b4e3413e0bddea671012b063e27591b953d653209e7a4fa5e48759cda77ca11\"},\n    {file = \"mypy-1.14.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:553c293b1fbdebb6c3c4030589dab9fafb6dfa768995a453d8a5d3b23784af2e\"},\n    {file = \"mypy-1.14.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:fad79bfe3b65fe6a1efaed97b445c3d37f7be9fdc348bdb2d7cac75579607c89\"},\n    {file = \"mypy-1.14.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:8fa2220e54d2946e94ab6dbb3ba0a992795bd68b16dc852db33028df2b00191b\"},\n    {file = \"mypy-1.14.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:92c3ed5afb06c3a8e188cb5da4984cab9ec9a77ba956ee419c68a388b4595255\"},\n    {file = \"mypy-1.14.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:dbec574648b3e25f43d23577309b16534431db4ddc09fda50841f1e34e64ed34\"},\n    {file = \"mypy-1.14.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:8c6d94b16d62eb3e947281aa7347d78236688e21081f11de976376cf010eb31a\"},\n    {file = \"mypy-1.14.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:d4b19b03fdf54f3c5b2fa474c56b4c13c9dbfb9a2db4370ede7ec11a2c5927d9\"},\n    {file = \"mypy-1.14.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:0c911fde686394753fff899c409fd4e16e9b294c24bfd5e1ea4675deae1ac6fd\"},\n    {file = \"mypy-1.14.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:8b21525cb51671219f5307be85f7e646a153e5acc656e5cebf64bfa076c50107\"},\n    {file = \"mypy-1.14.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:7084fb8f1128c76cd9cf68fe5971b37072598e7c31b2f9f95586b65c741a9d31\"},\n    {file = \"mypy-1.14.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:8f845a00b4f420f693f870eaee5f3e2692fa84cc8514496114649cfa8fd5e2c6\"},\n    {file = \"mypy-1.14.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:44bf464499f0e3a2d14d58b54674dee25c031703b2ffc35064bd0df2e0fac319\"},\n    {file = \"mypy-1.14.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:c99f27732c0b7dc847adb21c9d47ce57eb48fa33a17bc6d7d5c5e9f9e7ae5bac\"},\n    {file = \"mypy-1.14.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:bce23c7377b43602baa0bd22ea3265c49b9ff0b76eb315d6c34721af4cdf1d9b\"},\n    {file = \"mypy-1.14.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:8edc07eeade7ebc771ff9cf6b211b9a7d93687ff892150cb5692e4f4272b0837\"},\n    {file = \"mypy-1.14.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:3888a1816d69f7ab92092f785a462944b3ca16d7c470d564165fe703b0970c35\"},\n    {file = \"mypy-1.14.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:46c756a444117c43ee984bd055db99e498bc613a70bbbc120272bd13ca579fbc\"},\n    {file = \"mypy-1.14.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:27fc248022907e72abfd8e22ab1f10e903915ff69961174784a3900a8cba9ad9\"},\n    {file = \"mypy-1.14.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:499d6a72fb7e5de92218db961f1a66d5f11783f9ae549d214617edab5d4dbdbb\"},\n    {file = \"mypy-1.14.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:57961db9795eb566dc1d1b4e9139ebc4c6b0cb6e7254ecde69d1552bf7613f60\"},\n    {file = \"mypy-1.14.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:07ba89fdcc9451f2ebb02853deb6aaaa3d2239a236669a63ab3801bbf923ef5c\"},\n    {file = \"mypy-1.14.1-py3-none-any.whl\", hash = \"sha256:b66a60cc4073aeb8ae00057f9c1f64d49e90f918fbcef9a977eb121da8b8f1d1\"},\n    {file = \"mypy-1.14.1.tar.gz\", hash = \"sha256:7ec88144fe9b510e8475ec2f5f251992690fcf89ccb4500b214b4226abcd32d6\"},\n]\n\n[package.dependencies]\nmypy_extensions = \">=1.0.0\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntyping_extensions = \">=4.6.0\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\nfaster-cache = [\"orjson\"]\ninstall-types = [\"pip\"]\nmypyc = [\"setuptools (>=50)\"]\nreports = [\"lxml\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"1.0.0\"\ndescription = \"Type system extensions for programs checked with the mypy type checker.\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"mypy_extensions-1.0.0-py3-none-any.whl\", hash = \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\"},\n    {file = \"mypy_extensions-1.0.0.tar.gz\", hash = \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"},\n]\n\n[[package]]\nname = \"myst-parser\"\nversion = \"4.0.0\"\ndescription = \"An extended [CommonMark](https://spec.commonmark.org/) compliant parser,\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"myst_parser-4.0.0-py3-none-any.whl\", hash = \"sha256:b9317997552424448c6096c2558872fdb6f81d3ecb3a40ce84a7518798f3f28d\"},\n    {file = \"myst_parser-4.0.0.tar.gz\", hash = \"sha256:851c9dfb44e36e56d15d05e72f02b80da21a9e0d07cba96baf5e2d476bb91531\"},\n]\n\n[package.dependencies]\ndocutils = \">=0.19,<0.22\"\njinja2 = \"*\"\nmarkdown-it-py = \">=3.0,<4.0\"\nmdit-py-plugins = \">=0.4.1,<1.0\"\npyyaml = \"*\"\nsphinx = \">=7,<9\"\n\n[package.extras]\ncode-style = [\"pre-commit (>=3.0,<4.0)\"]\nlinkify = [\"linkify-it-py (>=2.0,<3.0)\"]\nrtd = [\"ipython\", \"sphinx (>=7)\", \"sphinx-autodoc2 (>=0.5.0,<0.6.0)\", \"sphinx-book-theme (>=1.1,<2.0)\", \"sphinx-copybutton\", \"sphinx-design\", \"sphinx-pyscript\", \"sphinx-tippy (>=0.4.3)\", \"sphinx-togglebutton\", \"sphinxext-opengraph (>=0.9.0,<0.10.0)\", \"sphinxext-rediraffe (>=0.2.7,<0.3.0)\"]\ntesting = [\"beautifulsoup4\", \"coverage[toml]\", \"defusedxml\", \"pytest (>=8,<9)\", \"pytest-cov\", \"pytest-param-files (>=0.6.0,<0.7.0)\", \"pytest-regressions\", \"sphinx-pytest\"]\ntesting-docutils = [\"pygments\", \"pytest (>=8,<9)\", \"pytest-param-files (>=0.6.0,<0.7.0)\"]\n\n[[package]]\nname = \"outcome\"\nversion = \"1.3.0.post0\"\ndescription = \"Capture the outcome of Python function calls.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"outcome-1.3.0.post0-py2.py3-none-any.whl\", hash = \"sha256:e771c5ce06d1415e356078d3bdd68523f284b4ce5419828922b6871e65eda82b\"},\n    {file = \"outcome-1.3.0.post0.tar.gz\", hash = \"sha256:9dcf02e65f2971b80047b377468e72a268e15c0af3cf1238e6ff14f7f91143b8\"},\n]\n\n[package.dependencies]\nattrs = \">=19.2.0\"\n\n[[package]]\nname = \"packaging\"\nversion = \"24.2\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"packaging-24.2-py3-none-any.whl\", hash = \"sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759\"},\n    {file = \"packaging-24.2.tar.gz\", hash = \"sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\"},\n]\n\n[[package]]\nname = \"pluggy\"\nversion = \"1.5.0\"\ndescription = \"plugin and hook calling mechanisms for python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pluggy-1.5.0-py3-none-any.whl\", hash = \"sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\"},\n    {file = \"pluggy-1.5.0.tar.gz\", hash = \"sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1\"},\n]\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\ntesting = [\"pytest\", \"pytest-benchmark\"]\n\n[[package]]\nname = \"pycodestyle\"\nversion = \"2.12.1\"\ndescription = \"Python style guide checker\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pycodestyle-2.12.1-py2.py3-none-any.whl\", hash = \"sha256:46f0fb92069a7c28ab7bb558f05bfc0110dac69a0cd23c61ea0040283a9d78b3\"},\n    {file = \"pycodestyle-2.12.1.tar.gz\", hash = \"sha256:6838eae08bbce4f6accd5d5572075c63626a15ee3e6f842df996bf62f6d73521\"},\n]\n\n[[package]]\nname = \"pycparser\"\nversion = \"2.22\"\ndescription = \"C parser in Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pycparser-2.22-py3-none-any.whl\", hash = \"sha256:c3702b6d3dd8c7abc1afa565d7e63d53a1d0bd86cdc24edd75470f4de499cfcc\"},\n    {file = \"pycparser-2.22.tar.gz\", hash = \"sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6\"},\n]\n\n[[package]]\nname = \"pyflakes\"\nversion = \"3.2.0\"\ndescription = \"passive checker of Python programs\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pyflakes-3.2.0-py2.py3-none-any.whl\", hash = \"sha256:84b5be138a2dfbb40689ca07e2152deb896a65c3a3e24c251c5c62489568074a\"},\n    {file = \"pyflakes-3.2.0.tar.gz\", hash = \"sha256:1c61603ff154621fb2a9172037d84dca3500def8c8b630657d1701f026f8af3f\"},\n]\n\n[[package]]\nname = \"pygments\"\nversion = \"2.18.0\"\ndescription = \"Pygments is a syntax highlighting package written in Python.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pygments-2.18.0-py3-none-any.whl\", hash = \"sha256:b8e6aca0523f3ab76fee51799c488e38782ac06eafcf95e7ba832985c8e7b13a\"},\n    {file = \"pygments-2.18.0.tar.gz\", hash = \"sha256:786ff802f32e91311bff3889f6e9a86e81505fe99f2735bb6d60ae0c5004f199\"},\n]\n\n[package.extras]\nwindows-terminal = [\"colorama (>=0.4.6)\"]\n\n[[package]]\nname = \"pytest\"\nversion = \"8.3.4\"\ndescription = \"pytest: simple powerful testing with Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pytest-8.3.4-py3-none-any.whl\", hash = \"sha256:50e16d954148559c9a74109af1eaf0c945ba2d8f30f0a3d3335edde19788b6f6\"},\n    {file = \"pytest-8.3.4.tar.gz\", hash = \"sha256:965370d062bce11e73868e0335abac31b4d3de0e82f4007408d242b4f8610761\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nexceptiongroup = {version = \">=1.0.0rc8\", markers = \"python_version < \\\"3.11\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=1.5,<2\"\ntomli = {version = \">=1\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndev = [\"argcomplete\", \"attrs (>=19.2)\", \"hypothesis (>=3.56)\", \"mock\", \"pygments (>=2.7.2)\", \"requests\", \"setuptools\", \"xmlschema\"]\n\n[[package]]\nname = \"pytest-cov\"\nversion = \"6.0.0\"\ndescription = \"Pytest plugin for measuring coverage.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pytest-cov-6.0.0.tar.gz\", hash = \"sha256:fde0b595ca248bb8e2d76f020b465f3b107c9632e6a1d1705f17834c89dcadc0\"},\n    {file = \"pytest_cov-6.0.0-py3-none-any.whl\", hash = \"sha256:eee6f1b9e61008bd34975a4d5bab25801eb31898b032dd55addc93e96fcaaa35\"},\n]\n\n[package.dependencies]\ncoverage = {version = \">=7.5\", extras = [\"toml\"]}\npytest = \">=4.6\"\n\n[package.extras]\ntesting = [\"fields\", \"hunter\", \"process-tests\", \"pytest-xdist\", \"virtualenv\"]\n\n[[package]]\nname = \"pytest-mypy-plugins\"\nversion = \"3.2.0\"\ndescription = \"pytest plugin for writing tests for mypy plugins\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pytest_mypy_plugins-3.2.0-py3-none-any.whl\", hash = \"sha256:46e24e8d9eaeabcddd0a5dc5fb089c021903d5952e0c9d8af79383db99b9ffae\"},\n    {file = \"pytest_mypy_plugins-3.2.0.tar.gz\", hash = \"sha256:68bd95400c8f128327acd9a16c737dbec18b20fced3184ad97f391b07d4662f4\"},\n]\n\n[package.dependencies]\ndecorator = \"*\"\nJinja2 = \"*\"\njsonschema = \"*\"\nmypy = \">=1.3\"\npackaging = \"*\"\npytest = \">=7.0.0\"\npyyaml = \"*\"\nregex = \"*\"\ntomlkit = \">=0.11\"\n\n[[package]]\nname = \"pytest-randomly\"\nversion = \"3.16.0\"\ndescription = \"Pytest plugin to randomly order tests and control random.seed.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pytest_randomly-3.16.0-py3-none-any.whl\", hash = \"sha256:8633d332635a1a0983d3bba19342196807f6afb17c3eef78e02c2f85dade45d6\"},\n    {file = \"pytest_randomly-3.16.0.tar.gz\", hash = \"sha256:11bf4d23a26484de7860d82f726c0629837cf4064b79157bd18ec9d41d7feb26\"},\n]\n\n[package.dependencies]\npytest = \"*\"\n\n[[package]]\nname = \"pytest-shard\"\nversion = \"0.1.2\"\ndescription = \"\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"pytest-shard-0.1.2.tar.gz\", hash = \"sha256:b86a967fbfd1c8e50295095ccda031b7e890862ee06531d5142844f4c1d1cd67\"},\n    {file = \"pytest_shard-0.1.2-py3-none-any.whl\", hash = \"sha256:407a1df385cebe1feb9b4d2e7eeee8b044f8a24f0919421233159a17c59be2b9\"},\n]\n\n[package.dependencies]\npytest = \"*\"\n\n[[package]]\nname = \"pytest-subtests\"\nversion = \"0.14.1\"\ndescription = \"unittest subTest() support and subtests fixture\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pytest_subtests-0.14.1-py3-none-any.whl\", hash = \"sha256:e92a780d98b43118c28a16044ad9b841727bd7cb6a417073b38fd2d7ccdf052d\"},\n    {file = \"pytest_subtests-0.14.1.tar.gz\", hash = \"sha256:350c00adc36c3aff676a66135c81aed9e2182e15f6c3ec8721366918bbbf7580\"},\n]\n\n[package.dependencies]\nattrs = \">=19.2.0\"\npytest = \">=7.4\"\n\n[[package]]\nname = \"pyyaml\"\nversion = \"6.0.2\"\ndescription = \"YAML parser and emitter for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win32.whl\", hash = \"sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win32.whl\", hash = \"sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win32.whl\", hash = \"sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win32.whl\", hash = \"sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win32.whl\", hash = \"sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8\"},\n    {file = \"pyyaml-6.0.2.tar.gz\", hash = \"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\"},\n]\n\n[[package]]\nname = \"referencing\"\nversion = \"0.35.1\"\ndescription = \"JSON Referencing + Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"referencing-0.35.1-py3-none-any.whl\", hash = \"sha256:eda6d3234d62814d1c64e305c1331c9a3a6132da475ab6382eaa997b21ee75de\"},\n    {file = \"referencing-0.35.1.tar.gz\", hash = \"sha256:25b42124a6c8b632a425174f24087783efb348a6f1e0008e63cd4466fedf703c\"},\n]\n\n[package.dependencies]\nattrs = \">=22.2.0\"\nrpds-py = \">=0.7.0\"\n\n[[package]]\nname = \"regex\"\nversion = \"2024.11.6\"\ndescription = \"Alternative regular expression module, to replace re.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"regex-2024.11.6-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ff590880083d60acc0433f9c3f713c51f7ac6ebb9adf889c79a261ecf541aa91\"},\n    {file = \"regex-2024.11.6-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:658f90550f38270639e83ce492f27d2c8d2cd63805c65a13a14d36ca126753f0\"},\n    {file = \"regex-2024.11.6-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:164d8b7b3b4bcb2068b97428060b2a53be050085ef94eca7f240e7947f1b080e\"},\n    {file = \"regex-2024.11.6-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d3660c82f209655a06b587d55e723f0b813d3a7db2e32e5e7dc64ac2a9e86fde\"},\n    {file = \"regex-2024.11.6-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d22326fcdef5e08c154280b71163ced384b428343ae16a5ab2b3354aed12436e\"},\n    {file = \"regex-2024.11.6-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f1ac758ef6aebfc8943560194e9fd0fa18bcb34d89fd8bd2af18183afd8da3a2\"},\n    {file = \"regex-2024.11.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:997d6a487ff00807ba810e0f8332c18b4eb8d29463cfb7c820dc4b6e7562d0cf\"},\n    {file = \"regex-2024.11.6-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:02a02d2bb04fec86ad61f3ea7f49c015a0681bf76abb9857f945d26159d2968c\"},\n    {file = \"regex-2024.11.6-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:f02f93b92358ee3f78660e43b4b0091229260c5d5c408d17d60bf26b6c900e86\"},\n    {file = \"regex-2024.11.6-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:06eb1be98df10e81ebaded73fcd51989dcf534e3c753466e4b60c4697a003b67\"},\n    {file = \"regex-2024.11.6-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:040df6fe1a5504eb0f04f048e6d09cd7c7110fef851d7c567a6b6e09942feb7d\"},\n    {file = \"regex-2024.11.6-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fdabbfc59f2c6edba2a6622c647b716e34e8e3867e0ab975412c5c2f79b82da2\"},\n    {file = \"regex-2024.11.6-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:8447d2d39b5abe381419319f942de20b7ecd60ce86f16a23b0698f22e1b70008\"},\n    {file = \"regex-2024.11.6-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:da8f5fc57d1933de22a9e23eec290a0d8a5927a5370d24bda9a6abe50683fe62\"},\n    {file = \"regex-2024.11.6-cp310-cp310-win32.whl\", hash = \"sha256:b489578720afb782f6ccf2840920f3a32e31ba28a4b162e13900c3e6bd3f930e\"},\n    {file = \"regex-2024.11.6-cp310-cp310-win_amd64.whl\", hash = \"sha256:5071b2093e793357c9d8b2929dfc13ac5f0a6c650559503bb81189d0a3814519\"},\n    {file = \"regex-2024.11.6-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:5478c6962ad548b54a591778e93cd7c456a7a29f8eca9c49e4f9a806dcc5d638\"},\n    {file = \"regex-2024.11.6-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:2c89a8cc122b25ce6945f0423dc1352cb9593c68abd19223eebbd4e56612c5b7\"},\n    {file = \"regex-2024.11.6-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:94d87b689cdd831934fa3ce16cc15cd65748e6d689f5d2b8f4f4df2065c9fa20\"},\n    {file = \"regex-2024.11.6-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1062b39a0a2b75a9c694f7a08e7183a80c63c0d62b301418ffd9c35f55aaa114\"},\n    {file = \"regex-2024.11.6-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:167ed4852351d8a750da48712c3930b031f6efdaa0f22fa1933716bfcd6bf4a3\"},\n    {file = \"regex-2024.11.6-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2d548dafee61f06ebdb584080621f3e0c23fff312f0de1afc776e2a2ba99a74f\"},\n    {file = \"regex-2024.11.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f2a19f302cd1ce5dd01a9099aaa19cae6173306d1302a43b627f62e21cf18ac0\"},\n    {file = \"regex-2024.11.6-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:bec9931dfb61ddd8ef2ebc05646293812cb6b16b60cf7c9511a832b6f1854b55\"},\n    {file = \"regex-2024.11.6-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:9714398225f299aa85267fd222f7142fcb5c769e73d7733344efc46f2ef5cf89\"},\n    {file = \"regex-2024.11.6-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:202eb32e89f60fc147a41e55cb086db2a3f8cb82f9a9a88440dcfc5d37faae8d\"},\n    {file = \"regex-2024.11.6-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4181b814e56078e9b00427ca358ec44333765f5ca1b45597ec7446d3a1ef6e34\"},\n    {file = \"regex-2024.11.6-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:068376da5a7e4da51968ce4c122a7cd31afaaec4fccc7856c92f63876e57b51d\"},\n    {file = \"regex-2024.11.6-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:ac10f2c4184420d881a3475fb2c6f4d95d53a8d50209a2500723d831036f7c45\"},\n    {file = \"regex-2024.11.6-cp311-cp311-win32.whl\", hash = \"sha256:c36f9b6f5f8649bb251a5f3f66564438977b7ef8386a52460ae77e6070d309d9\"},\n    {file = \"regex-2024.11.6-cp311-cp311-win_amd64.whl\", hash = \"sha256:02e28184be537f0e75c1f9b2f8847dc51e08e6e171c6bde130b2687e0c33cf60\"},\n    {file = \"regex-2024.11.6-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:52fb28f528778f184f870b7cf8f225f5eef0a8f6e3778529bdd40c7b3920796a\"},\n    {file = \"regex-2024.11.6-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:fdd6028445d2460f33136c55eeb1f601ab06d74cb3347132e1c24250187500d9\"},\n    {file = \"regex-2024.11.6-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:805e6b60c54bf766b251e94526ebad60b7de0c70f70a4e6210ee2891acb70bf2\"},\n    {file = \"regex-2024.11.6-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b85c2530be953a890eaffde05485238f07029600e8f098cdf1848d414a8b45e4\"},\n    {file = \"regex-2024.11.6-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:bb26437975da7dc36b7efad18aa9dd4ea569d2357ae6b783bf1118dabd9ea577\"},\n    {file = \"regex-2024.11.6-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:abfa5080c374a76a251ba60683242bc17eeb2c9818d0d30117b4486be10c59d3\"},\n    {file = \"regex-2024.11.6-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b7fa6606c2881c1db9479b0eaa11ed5dfa11c8d60a474ff0e095099f39d98e\"},\n    {file = \"regex-2024.11.6-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0c32f75920cf99fe6b6c539c399a4a128452eaf1af27f39bce8909c9a3fd8cbe\"},\n    {file = \"regex-2024.11.6-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:982e6d21414e78e1f51cf595d7f321dcd14de1f2881c5dc6a6e23bbbbd68435e\"},\n    {file = \"regex-2024.11.6-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:a7c2155f790e2fb448faed6dd241386719802296ec588a8b9051c1f5c481bc29\"},\n    {file = \"regex-2024.11.6-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:149f5008d286636e48cd0b1dd65018548944e495b0265b45e1bffecce1ef7f39\"},\n    {file = \"regex-2024.11.6-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:e5364a4502efca094731680e80009632ad6624084aff9a23ce8c8c6820de3e51\"},\n    {file = \"regex-2024.11.6-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:0a86e7eeca091c09e021db8eb72d54751e527fa47b8d5787caf96d9831bd02ad\"},\n    {file = \"regex-2024.11.6-cp312-cp312-win32.whl\", hash = \"sha256:32f9a4c643baad4efa81d549c2aadefaeba12249b2adc5af541759237eee1c54\"},\n    {file = \"regex-2024.11.6-cp312-cp312-win_amd64.whl\", hash = \"sha256:a93c194e2df18f7d264092dc8539b8ffb86b45b899ab976aa15d48214138e81b\"},\n    {file = \"regex-2024.11.6-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:a6ba92c0bcdf96cbf43a12c717eae4bc98325ca3730f6b130ffa2e3c3c723d84\"},\n    {file = \"regex-2024.11.6-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:525eab0b789891ac3be914d36893bdf972d483fe66551f79d3e27146191a37d4\"},\n    {file = \"regex-2024.11.6-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:086a27a0b4ca227941700e0b31425e7a28ef1ae8e5e05a33826e17e47fbfdba0\"},\n    {file = \"regex-2024.11.6-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bde01f35767c4a7899b7eb6e823b125a64de314a8ee9791367c9a34d56af18d0\"},\n    {file = \"regex-2024.11.6-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b583904576650166b3d920d2bcce13971f6f9e9a396c673187f49811b2769dc7\"},\n    {file = \"regex-2024.11.6-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1c4de13f06a0d54fa0d5ab1b7138bfa0d883220965a29616e3ea61b35d5f5fc7\"},\n    {file = \"regex-2024.11.6-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3cde6e9f2580eb1665965ce9bf17ff4952f34f5b126beb509fee8f4e994f143c\"},\n    {file = \"regex-2024.11.6-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0d7f453dca13f40a02b79636a339c5b62b670141e63efd511d3f8f73fba162b3\"},\n    {file = \"regex-2024.11.6-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:59dfe1ed21aea057a65c6b586afd2a945de04fc7db3de0a6e3ed5397ad491b07\"},\n    {file = \"regex-2024.11.6-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:b97c1e0bd37c5cd7902e65f410779d39eeda155800b65fc4d04cc432efa9bc6e\"},\n    {file = \"regex-2024.11.6-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f9d1e379028e0fc2ae3654bac3cbbef81bf3fd571272a42d56c24007979bafb6\"},\n    {file = \"regex-2024.11.6-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:13291b39131e2d002a7940fb176e120bec5145f3aeb7621be6534e46251912c4\"},\n    {file = \"regex-2024.11.6-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4f51f88c126370dcec4908576c5a627220da6c09d0bff31cfa89f2523843316d\"},\n    {file = \"regex-2024.11.6-cp313-cp313-win32.whl\", hash = \"sha256:63b13cfd72e9601125027202cad74995ab26921d8cd935c25f09c630436348ff\"},\n    {file = \"regex-2024.11.6-cp313-cp313-win_amd64.whl\", hash = \"sha256:2b3361af3198667e99927da8b84c1b010752fa4b1115ee30beaa332cabc3ef1a\"},\n    {file = \"regex-2024.11.6-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:3a51ccc315653ba012774efca4f23d1d2a8a8f278a6072e29c7147eee7da446b\"},\n    {file = \"regex-2024.11.6-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ad182d02e40de7459b73155deb8996bbd8e96852267879396fb274e8700190e3\"},\n    {file = \"regex-2024.11.6-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:ba9b72e5643641b7d41fa1f6d5abda2c9a263ae835b917348fc3c928182ad467\"},\n    {file = \"regex-2024.11.6-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:40291b1b89ca6ad8d3f2b82782cc33807f1406cf68c8d440861da6304d8ffbbd\"},\n    {file = \"regex-2024.11.6-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cdf58d0e516ee426a48f7b2c03a332a4114420716d55769ff7108c37a09951bf\"},\n    {file = \"regex-2024.11.6-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a36fdf2af13c2b14738f6e973aba563623cb77d753bbbd8d414d18bfaa3105dd\"},\n    {file = \"regex-2024.11.6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d1cee317bfc014c2419a76bcc87f071405e3966da434e03e13beb45f8aced1a6\"},\n    {file = \"regex-2024.11.6-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:50153825ee016b91549962f970d6a4442fa106832e14c918acd1c8e479916c4f\"},\n    {file = \"regex-2024.11.6-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:ea1bfda2f7162605f6e8178223576856b3d791109f15ea99a9f95c16a7636fb5\"},\n    {file = \"regex-2024.11.6-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:df951c5f4a1b1910f1a99ff42c473ff60f8225baa1cdd3539fe2819d9543e9df\"},\n    {file = \"regex-2024.11.6-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:072623554418a9911446278f16ecb398fb3b540147a7828c06e2011fa531e773\"},\n    {file = \"regex-2024.11.6-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:f654882311409afb1d780b940234208a252322c24a93b442ca714d119e68086c\"},\n    {file = \"regex-2024.11.6-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:89d75e7293d2b3e674db7d4d9b1bee7f8f3d1609428e293771d1a962617150cc\"},\n    {file = \"regex-2024.11.6-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:f65557897fc977a44ab205ea871b690adaef6b9da6afda4790a2484b04293a5f\"},\n    {file = \"regex-2024.11.6-cp38-cp38-win32.whl\", hash = \"sha256:6f44ec28b1f858c98d3036ad5d7d0bfc568bdd7a74f9c24e25f41ef1ebfd81a4\"},\n    {file = \"regex-2024.11.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:bb8f74f2f10dbf13a0be8de623ba4f9491faf58c24064f32b65679b021ed0001\"},\n    {file = \"regex-2024.11.6-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:5704e174f8ccab2026bd2f1ab6c510345ae8eac818b613d7d73e785f1310f839\"},\n    {file = \"regex-2024.11.6-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:220902c3c5cc6af55d4fe19ead504de80eb91f786dc102fbd74894b1551f095e\"},\n    {file = \"regex-2024.11.6-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:5e7e351589da0850c125f1600a4c4ba3c722efefe16b297de54300f08d734fbf\"},\n    {file = \"regex-2024.11.6-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5056b185ca113c88e18223183aa1a50e66507769c9640a6ff75859619d73957b\"},\n    {file = \"regex-2024.11.6-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2e34b51b650b23ed3354b5a07aab37034d9f923db2a40519139af34f485f77d0\"},\n    {file = \"regex-2024.11.6-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5670bce7b200273eee1840ef307bfa07cda90b38ae56e9a6ebcc9f50da9c469b\"},\n    {file = \"regex-2024.11.6-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:08986dce1339bc932923e7d1232ce9881499a0e02925f7402fb7c982515419ef\"},\n    {file = \"regex-2024.11.6-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:93c0b12d3d3bc25af4ebbf38f9ee780a487e8bf6954c115b9f015822d3bb8e48\"},\n    {file = \"regex-2024.11.6-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:764e71f22ab3b305e7f4c21f1a97e1526a25ebdd22513e251cf376760213da13\"},\n    {file = \"regex-2024.11.6-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:f056bf21105c2515c32372bbc057f43eb02aae2fda61052e2f7622c801f0b4e2\"},\n    {file = \"regex-2024.11.6-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:69ab78f848845569401469da20df3e081e6b5a11cb086de3eed1d48f5ed57c95\"},\n    {file = \"regex-2024.11.6-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:86fddba590aad9208e2fa8b43b4c098bb0ec74f15718bb6a704e3c63e2cef3e9\"},\n    {file = \"regex-2024.11.6-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:684d7a212682996d21ca12ef3c17353c021fe9de6049e19ac8481ec35574a70f\"},\n    {file = \"regex-2024.11.6-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:a03e02f48cd1abbd9f3b7e3586d97c8f7a9721c436f51a5245b3b9483044480b\"},\n    {file = \"regex-2024.11.6-cp39-cp39-win32.whl\", hash = \"sha256:41758407fc32d5c3c5de163888068cfee69cb4c2be844e7ac517a52770f9af57\"},\n    {file = \"regex-2024.11.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:b2837718570f95dd41675328e111345f9b7095d821bac435aac173ac80b19983\"},\n    {file = \"regex-2024.11.6.tar.gz\", hash = \"sha256:7ab159b063c52a0333c884e4679f8d7a85112ee3078fe3d9004b2dd875585519\"},\n]\n\n[[package]]\nname = \"requests\"\nversion = \"2.32.3\"\ndescription = \"Python HTTP for Humans.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"requests-2.32.3-py3-none-any.whl\", hash = \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"},\n    {file = \"requests-2.32.3.tar.gz\", hash = \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\"},\n]\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset-normalizer = \">=2,<4\"\nidna = \">=2.5,<4\"\nurllib3 = \">=1.21.1,<3\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\"]\nuse-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]\n\n[[package]]\nname = \"rpds-py\"\nversion = \"0.22.3\"\ndescription = \"Python bindings to Rust's persistent data structures (rpds)\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"rpds_py-0.22.3-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:6c7b99ca52c2c1752b544e310101b98a659b720b21db00e65edca34483259967\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:be2eb3f2495ba669d2a985f9b426c1797b7d48d6963899276d22f23e33d47e37\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:70eb60b3ae9245ddea20f8a4190bd79c705a22f8028aaf8bbdebe4716c3fab24\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:4041711832360a9b75cfb11b25a6a97c8fb49c07b8bd43d0d02b45d0b499a4ff\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:64607d4cbf1b7e3c3c8a14948b99345eda0e161b852e122c6bb71aab6d1d798c\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:81e69b0a0e2537f26d73b4e43ad7bc8c8efb39621639b4434b76a3de50c6966e\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc27863442d388870c1809a87507727b799c8460573cfbb6dc0eeaef5a11b5ec\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:e79dd39f1e8c3504be0607e5fc6e86bb60fe3584bec8b782578c3b0fde8d932c\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:e0fa2d4ec53dc51cf7d3bb22e0aa0143966119f42a0c3e4998293a3dd2856b09\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:fda7cb070f442bf80b642cd56483b5548e43d366fe3f39b98e67cce780cded00\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:cff63a0272fcd259dcc3be1657b07c929c466b067ceb1c20060e8d10af56f5bf\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-win32.whl\", hash = \"sha256:9bd7228827ec7bb817089e2eb301d907c0d9827a9e558f22f762bb690b131652\"},\n    {file = \"rpds_py-0.22.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:9beeb01d8c190d7581a4d59522cd3d4b6887040dcfc744af99aa59fef3e041a8\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:d20cfb4e099748ea39e6f7b16c91ab057989712d31761d3300d43134e26e165f\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:68049202f67380ff9aa52f12e92b1c30115f32e6895cd7198fa2a7961621fc5a\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fb4f868f712b2dd4bcc538b0a0c1f63a2b1d584c925e69a224d759e7070a12d5\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:bc51abd01f08117283c5ebf64844a35144a0843ff7b2983e0648e4d3d9f10dbb\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:0f3cec041684de9a4684b1572fe28c7267410e02450f4561700ca5a3bc6695a2\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7ef9d9da710be50ff6809fed8f1963fecdfecc8b86656cadfca3bc24289414b0\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:59f4a79c19232a5774aee369a0c296712ad0e77f24e62cad53160312b1c1eaa1\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:1a60bce91f81ddaac922a40bbb571a12c1070cb20ebd6d49c48e0b101d87300d\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:e89391e6d60251560f0a8f4bd32137b077a80d9b7dbe6d5cab1cd80d2746f648\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:e3fb866d9932a3d7d0c82da76d816996d1667c44891bd861a0f97ba27e84fc74\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:1352ae4f7c717ae8cba93421a63373e582d19d55d2ee2cbb184344c82d2ae55a\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-win32.whl\", hash = \"sha256:b0b4136a252cadfa1adb705bb81524eee47d9f6aab4f2ee4fa1e9d3cd4581f64\"},\n    {file = \"rpds_py-0.22.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:8bd7c8cfc0b8247c8799080fbff54e0b9619e17cdfeb0478ba7295d43f635d7c\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:27e98004595899949bd7a7b34e91fa7c44d7a97c40fcaf1d874168bb652ec67e\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:1978d0021e943aae58b9b0b196fb4895a25cc53d3956b8e35e0b7682eefb6d56\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:655ca44a831ecb238d124e0402d98f6212ac527a0ba6c55ca26f616604e60a45\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:feea821ee2a9273771bae61194004ee2fc33f8ec7db08117ef9147d4bbcbca8e\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:22bebe05a9ffc70ebfa127efbc429bc26ec9e9b4ee4d15a740033efda515cf3d\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3af6e48651c4e0d2d166dc1b033b7042ea3f871504b6805ba5f4fe31581d8d38\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e67ba3c290821343c192f7eae1d8fd5999ca2dc99994114643e2f2d3e6138b15\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:02fbb9c288ae08bcb34fb41d516d5eeb0455ac35b5512d03181d755d80810059\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:f56a6b404f74ab372da986d240e2e002769a7d7102cc73eb238a4f72eec5284e\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:0a0461200769ab3b9ab7e513f6013b7a97fdeee41c29b9db343f3c5a8e2b9e61\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:8633e471c6207a039eff6aa116e35f69f3156b3989ea3e2d755f7bc41754a4a7\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-win32.whl\", hash = \"sha256:593eba61ba0c3baae5bc9be2f5232430453fb4432048de28399ca7376de9c627\"},\n    {file = \"rpds_py-0.22.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:d115bffdd417c6d806ea9069237a4ae02f513b778e3789a359bc5856e0404cc4\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:ea7433ce7e4bfc3a85654aeb6747babe3f66eaf9a1d0c1e7a4435bbdf27fea84\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:6dd9412824c4ce1aca56c47b0991e65bebb7ac3f4edccfd3f156150c96a7bf25\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:20070c65396f7373f5df4005862fa162db5d25d56150bddd0b3e8214e8ef45b4\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:0b09865a9abc0ddff4e50b5ef65467cd94176bf1e0004184eb915cbc10fc05c5\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3453e8d41fe5f17d1f8e9c383a7473cd46a63661628ec58e07777c2fff7196dc\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f5d36399a1b96e1a5fdc91e0522544580dbebeb1f77f27b2b0ab25559e103b8b\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:009de23c9c9ee54bf11303a966edf4d9087cd43a6003672e6aa7def643d06518\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:1aef18820ef3e4587ebe8b3bc9ba6e55892a6d7b93bac6d29d9f631a3b4befbd\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:f60bd8423be1d9d833f230fdbccf8f57af322d96bcad6599e5a771b151398eb2\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:62d9cfcf4948683a18a9aff0ab7e1474d407b7bab2ca03116109f8464698ab16\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9253fc214112405f0afa7db88739294295f0e08466987f1d70e29930262b4c8f\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-win32.whl\", hash = \"sha256:fb0ba113b4983beac1a2eb16faffd76cb41e176bf58c4afe3e14b9c681f702de\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:c58e2339def52ef6b71b8f36d13c3688ea23fa093353f3a4fee2556e62086ec9\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-macosx_10_12_x86_64.whl\", hash = \"sha256:f82a116a1d03628a8ace4859556fb39fd1424c933341a08ea3ed6de1edb0283b\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:3dfcbc95bd7992b16f3f7ba05af8a64ca694331bd24f9157b49dadeeb287493b\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:59259dc58e57b10e7e18ce02c311804c10c5a793e6568f8af4dead03264584d1\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:5725dd9cc02068996d4438d397e255dcb1df776b7ceea3b9cb972bdb11260a83\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:99b37292234e61325e7a5bb9689e55e48c3f5f603af88b1642666277a81f1fbd\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:27b1d3b3915a99208fee9ab092b8184c420f2905b7d7feb4aeb5e4a9c509b8a1\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f612463ac081803f243ff13cccc648578e2279295048f2a8d5eb430af2bae6e3\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:f73d3fef726b3243a811121de45193c0ca75f6407fe66f3f4e183c983573e130\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:3f21f0495edea7fdbaaa87e633a8689cd285f8f4af5c869f27bc8074638ad69c\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:1e9663daaf7a63ceccbbb8e3808fe90415b0757e2abddbfc2e06c857bf8c5e2b\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:a76e42402542b1fae59798fab64432b2d015ab9d0c8c47ba7addddbaf7952333\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-win32.whl\", hash = \"sha256:69803198097467ee7282750acb507fba35ca22cc3b85f16cf45fb01cb9097730\"},\n    {file = \"rpds_py-0.22.3-cp313-cp313t-win_amd64.whl\", hash = \"sha256:f5cf2a0c2bdadf3791b5c205d55a37a54025c6e18a71c71f82bb536cf9a454bf\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:378753b4a4de2a7b34063d6f95ae81bfa7b15f2c1a04a9518e8644e81807ebea\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3445e07bf2e8ecfeef6ef67ac83de670358abf2996916039b16a218e3d95e97e\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7b2513ba235829860b13faa931f3b6846548021846ac808455301c23a101689d\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:eaf16ae9ae519a0e237a0f528fd9f0197b9bb70f40263ee57ae53c2b8d48aeb3\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:583f6a1993ca3369e0f80ba99d796d8e6b1a3a2a442dd4e1a79e652116413091\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4617e1915a539a0d9a9567795023de41a87106522ff83fbfaf1f6baf8e85437e\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0c150c7a61ed4a4f4955a96626574e9baf1adf772c2fb61ef6a5027e52803543\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:2fa4331c200c2521512595253f5bb70858b90f750d39b8cbfd67465f8d1b596d\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:214b7a953d73b5e87f0ebece4a32a5bd83c60a3ecc9d4ec8f1dca968a2d91e99\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:f47ad3d5f3258bd7058d2d506852217865afefe6153a36eb4b6928758041d831\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:f276b245347e6e36526cbd4a266a417796fc531ddf391e43574cf6466c492520\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-win32.whl\", hash = \"sha256:bbb232860e3d03d544bc03ac57855cd82ddf19c7a07651a7c0fdb95e9efea8b9\"},\n    {file = \"rpds_py-0.22.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:cfbc454a2880389dbb9b5b398e50d439e2e58669160f27b60e5eca11f68ae17c\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:d48424e39c2611ee1b84ad0f44fb3b2b53d473e65de061e3f460fc0be5f1939d\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:24e8abb5878e250f2eb0d7859a8e561846f98910326d06c0d51381fed59357bd\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4b232061ca880db21fa14defe219840ad9b74b6158adb52ddf0e87bead9e8493\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:ac0a03221cdb5058ce0167ecc92a8c89e8d0decdc9e99a2ec23380793c4dcb96\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:eb0c341fa71df5a4595f9501df4ac5abfb5a09580081dffbd1ddd4654e6e9123\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:bf9db5488121b596dbfc6718c76092fda77b703c1f7533a226a5a9f65248f8ad\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0b8db6b5b2d4491ad5b6bdc2bc7c017eec108acbf4e6785f42a9eb0ba234f4c9\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:b3d504047aba448d70cf6fa22e06cb09f7cbd761939fdd47604f5e007675c24e\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:e61b02c3f7a1e0b75e20c3978f7135fd13cb6cf551bf4a6d29b999a88830a338\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:e35ba67d65d49080e8e5a1dd40101fccdd9798adb9b050ff670b7d74fa41c566\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:26fd7cac7dd51011a245f29a2cc6489c4608b5a8ce8d75661bb4a1066c52dfbe\"},\n    {file = \"rpds_py-0.22.3-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:177c7c0fce2855833819c98e43c262007f42ce86651ffbb84f37883308cb0e7d\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:bb47271f60660803ad11f4c61b42242b8c1312a31c98c578f79ef9387bbde21c\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:70fb28128acbfd264eda9bf47015537ba3fe86e40d046eb2963d75024be4d055\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:44d61b4b7d0c2c9ac019c314e52d7cbda0ae31078aabd0f22e583af3e0d79723\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:5f0e260eaf54380380ac3808aa4ebe2d8ca28b9087cf411649f96bad6900c728\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b25bc607423935079e05619d7de556c91fb6adeae9d5f80868dde3468657994b\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fb6116dfb8d1925cbdb52595560584db42a7f664617a1f7d7f6e32f138cdf37d\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a63cbdd98acef6570c62b92a1e43266f9e8b21e699c363c0fef13bd530799c11\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:2b8f60e1b739a74bab7e01fcbe3dddd4657ec685caa04681df9d562ef15b625f\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-musllinux_1_2_aarch64.whl\", hash = \"sha256:2e8b55d8517a2fda8d95cb45d62a5a8bbf9dd0ad39c5b25c8833efea07b880ca\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-musllinux_1_2_i686.whl\", hash = \"sha256:2de29005e11637e7a2361fa151f780ff8eb2543a0da1413bb951e9f14b699ef3\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-musllinux_1_2_x86_64.whl\", hash = \"sha256:666ecce376999bf619756a24ce15bb14c5bfaf04bf00abc7e663ce17c3f34fe7\"},\n    {file = \"rpds_py-0.22.3-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:5246b14ca64a8675e0a7161f7af68fe3e910e6b90542b4bfb5439ba752191df6\"},\n    {file = \"rpds_py-0.22.3.tar.gz\", hash = \"sha256:e32fee8ab45d3c2db6da19a5323bc3362237c8b653c70194414b892fd06a080d\"},\n]\n\n[[package]]\nname = \"ruff\"\nversion = \"0.9.0\"\ndescription = \"An extremely fast Python linter and code formatter, written in Rust.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"ruff-0.9.0-py3-none-linux_armv6l.whl\", hash = \"sha256:949b3513f931741e006cf267bf89611edff04e1f012013424022add3ce78f319\"},\n    {file = \"ruff-0.9.0-py3-none-macosx_10_12_x86_64.whl\", hash = \"sha256:99fbcb8c7fe94ae1e462ab2a1ef17cb20b25fb6438b9f198b1bcf5207a0a7916\"},\n    {file = \"ruff-0.9.0-py3-none-macosx_11_0_arm64.whl\", hash = \"sha256:0b022afd8eb0fcfce1e0adec84322abf4d6ce3cd285b3b99c4f17aae7decf749\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:336567ce92c9ca8ec62780d07b5fa11fbc881dc7bb40958f93a7d621e7ab4589\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:d338336c44bda602dc8e8766836ac0441e5b0dfeac3af1bd311a97ebaf087a75\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d9b3ececf523d733e90b540e7afcc0494189e8999847f8855747acd5a9a8c45f\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl\", hash = \"sha256:a11c0872a31232e473e2e0e2107f3d294dbadd2f83fb281c3eb1c22a24866924\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b5fd06220c17a9cc0dc7fc6552f2ac4db74e8e8bff9c401d160ac59d00566f54\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0457e775c74bf3976243f910805242b7dcd389e1d440deccbd1194ca17a5728c\"},\n    {file = \"ruff-0.9.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:05415599bbcb318f730ea1b46a39e4fbf71f6a63fdbfa1dda92efb55f19d7ecf\"},\n    {file = \"ruff-0.9.0-py3-none-musllinux_1_2_aarch64.whl\", hash = \"sha256:fbf9864b009e43cfc1c8bed1a6a4c529156913105780af4141ca4342148517f5\"},\n    {file = \"ruff-0.9.0-py3-none-musllinux_1_2_armv7l.whl\", hash = \"sha256:37b3da222b12e2bb2ce628e02586ab4846b1ed7f31f42a5a0683b213453b2d49\"},\n    {file = \"ruff-0.9.0-py3-none-musllinux_1_2_i686.whl\", hash = \"sha256:733c0fcf2eb0c90055100b4ed1af9c9d87305b901a8feb6a0451fa53ed88199d\"},\n    {file = \"ruff-0.9.0-py3-none-musllinux_1_2_x86_64.whl\", hash = \"sha256:8221a454bfe5ccdf8017512fd6bb60e6ec30f9ea252b8a80e5b73619f6c3cefd\"},\n    {file = \"ruff-0.9.0-py3-none-win32.whl\", hash = \"sha256:d345f2178afd192c7991ddee59155c58145e12ad81310b509bd2e25c5b0247b3\"},\n    {file = \"ruff-0.9.0-py3-none-win_amd64.whl\", hash = \"sha256:0cbc0905d94d21305872f7f8224e30f4bbcd532bc21b2225b2446d8fc7220d19\"},\n    {file = \"ruff-0.9.0-py3-none-win_arm64.whl\", hash = \"sha256:7b1148771c6ca88f820d761350a053a5794bc58e0867739ea93eb5e41ad978cd\"},\n    {file = \"ruff-0.9.0.tar.gz\", hash = \"sha256:143f68fa5560ecf10fc49878b73cee3eab98b777fcf43b0e62d43d42f5ef9d8b\"},\n]\n\n[[package]]\nname = \"slotscheck\"\nversion = \"0.19.1\"\ndescription = \"Ensure your __slots__ are working properly.\"\noptional = false\npython-versions = \">=3.8.1\"\nfiles = [\n    {file = \"slotscheck-0.19.1-py3-none-any.whl\", hash = \"sha256:bff9926f8d6408ea21b6c6bbaa4389cea1682962e73ee4f30084b6d2b89260ee\"},\n    {file = \"slotscheck-0.19.1.tar.gz\", hash = \"sha256:6146b7747f8db335a00a66b782f86011b74b995f61746dc5b36a9e77d5326013\"},\n]\n\n[package.dependencies]\nclick = \">=8.0,<9.0\"\ntomli = {version = \">=0.2.6,<3.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[[package]]\nname = \"sniffio\"\nversion = \"1.3.1\"\ndescription = \"Sniff out which async library your code is running under\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"sniffio-1.3.1-py3-none-any.whl\", hash = \"sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2\"},\n    {file = \"sniffio-1.3.1.tar.gz\", hash = \"sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc\"},\n]\n\n[[package]]\nname = \"snowballstemmer\"\nversion = \"2.2.0\"\ndescription = \"This package provides 29 stemmers for 28 languages generated from Snowball algorithms.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"snowballstemmer-2.2.0-py2.py3-none-any.whl\", hash = \"sha256:c8e1716e83cc398ae16824e5572ae04e0d9fc2c6b985fb0f900f5f0c96ecba1a\"},\n    {file = \"snowballstemmer-2.2.0.tar.gz\", hash = \"sha256:09b16deb8547d3412ad7b590689584cd0fe25ec8db3be37788be3810cbf19cb1\"},\n]\n\n[[package]]\nname = \"sortedcontainers\"\nversion = \"2.4.0\"\ndescription = \"Sorted Containers -- Sorted List, Sorted Dict, Sorted Set\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"sortedcontainers-2.4.0-py2.py3-none-any.whl\", hash = \"sha256:a163dcaede0f1c021485e957a39245190e74249897e2ae4b2aa38595db237ee0\"},\n    {file = \"sortedcontainers-2.4.0.tar.gz\", hash = \"sha256:25caa5a06cc30b6b83d11423433f65d1f9d76c4c6a0c90e3379eaa43b9bfdb88\"},\n]\n\n[[package]]\nname = \"soupsieve\"\nversion = \"2.6\"\ndescription = \"A modern CSS selector implementation for Beautiful Soup.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"soupsieve-2.6-py3-none-any.whl\", hash = \"sha256:e72c4ff06e4fb6e4b5a9f0f55fe6e81514581fca1515028625d0f299c602ccc9\"},\n    {file = \"soupsieve-2.6.tar.gz\", hash = \"sha256:e2e68417777af359ec65daac1057404a3c8a5455bb8abc36f1a9866ab1a51abb\"},\n]\n\n[[package]]\nname = \"sphinx\"\nversion = \"8.1.3\"\ndescription = \"Python documentation generator\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"sphinx-8.1.3-py3-none-any.whl\", hash = \"sha256:09719015511837b76bf6e03e42eb7595ac8c2e41eeb9c29c5b755c6b677992a2\"},\n    {file = \"sphinx-8.1.3.tar.gz\", hash = \"sha256:43c1911eecb0d3e161ad78611bc905d1ad0e523e4ddc202a58a821773dc4c927\"},\n]\n\n[package.dependencies]\nalabaster = \">=0.7.14\"\nbabel = \">=2.13\"\ncolorama = {version = \">=0.4.6\", markers = \"sys_platform == \\\"win32\\\"\"}\ndocutils = \">=0.20,<0.22\"\nimagesize = \">=1.3\"\nJinja2 = \">=3.1\"\npackaging = \">=23.0\"\nPygments = \">=2.17\"\nrequests = \">=2.30.0\"\nsnowballstemmer = \">=2.2\"\nsphinxcontrib-applehelp = \">=1.0.7\"\nsphinxcontrib-devhelp = \">=1.0.6\"\nsphinxcontrib-htmlhelp = \">=2.0.6\"\nsphinxcontrib-jsmath = \">=1.0.1\"\nsphinxcontrib-qthelp = \">=1.0.6\"\nsphinxcontrib-serializinghtml = \">=1.1.9\"\ntomli = {version = \">=2\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndocs = [\"sphinxcontrib-websupport\"]\nlint = [\"flake8 (>=6.0)\", \"mypy (==1.11.1)\", \"pyright (==1.1.384)\", \"pytest (>=6.0)\", \"ruff (==0.6.9)\", \"sphinx-lint (>=0.9)\", \"tomli (>=2)\", \"types-Pillow (==10.2.0.20240822)\", \"types-Pygments (==2.18.0.20240506)\", \"types-colorama (==0.4.15.20240311)\", \"types-defusedxml (==0.7.0.20240218)\", \"types-docutils (==0.21.0.20241005)\", \"types-requests (==2.32.0.20240914)\", \"types-urllib3 (==1.26.25.14)\"]\ntest = [\"cython (>=3.0)\", \"defusedxml (>=0.7.1)\", \"pytest (>=8.0)\", \"setuptools (>=70.0)\", \"typing_extensions (>=4.9)\"]\n\n[[package]]\nname = \"sphinx-autodoc-typehints\"\nversion = \"3.0.0\"\ndescription = \"Type hints (PEP 484) support for the Sphinx autodoc extension\"\noptional = false\npython-versions = \">=3.10\"\nfiles = [\n    {file = \"sphinx_autodoc_typehints-3.0.0-py3-none-any.whl\", hash = \"sha256:b82bf83e23ae3d5dc25881004a6d6614be6291ff8ff165b2d1e18799f0f6bd74\"},\n    {file = \"sphinx_autodoc_typehints-3.0.0.tar.gz\", hash = \"sha256:d5cdab471efb10fcff4ffe81a2ef713398bc891af9d942a4b763f5ed1d9bf550\"},\n]\n\n[package.dependencies]\nsphinx = \">=8.1.3\"\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\"]\ntesting = [\"covdefaults (>=2.3)\", \"coverage (>=7.6.10)\", \"defusedxml (>=0.7.1)\", \"diff-cover (>=9.2.1)\", \"pytest (>=8.3.4)\", \"pytest-cov (>=6)\", \"sphobjinv (>=2.3.1.2)\", \"typing-extensions (>=4.12.2)\"]\n\n[[package]]\nname = \"sphinx-basic-ng\"\nversion = \"1.0.0b2\"\ndescription = \"A modern skeleton for Sphinx themes.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"sphinx_basic_ng-1.0.0b2-py3-none-any.whl\", hash = \"sha256:eb09aedbabfb650607e9b4b68c9d240b90b1e1be221d6ad71d61c52e29f7932b\"},\n    {file = \"sphinx_basic_ng-1.0.0b2.tar.gz\", hash = \"sha256:9ec55a47c90c8c002b5960c57492ec3021f5193cb26cebc2dc4ea226848651c9\"},\n]\n\n[package.dependencies]\nsphinx = \">=4.0\"\n\n[package.extras]\ndocs = [\"furo\", \"ipython\", \"myst-parser\", \"sphinx-copybutton\", \"sphinx-inline-tabs\"]\n\n[[package]]\nname = \"sphinxcontrib-applehelp\"\nversion = \"2.0.0\"\ndescription = \"sphinxcontrib-applehelp is a Sphinx extension which outputs Apple help books\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"sphinxcontrib_applehelp-2.0.0-py3-none-any.whl\", hash = \"sha256:4cd3f0ec4ac5dd9c17ec65e9ab272c9b867ea77425228e68ecf08d6b28ddbdb5\"},\n    {file = \"sphinxcontrib_applehelp-2.0.0.tar.gz\", hash = \"sha256:2f29ef331735ce958efa4734873f084941970894c6090408b079c61b2e1c06d1\"},\n]\n\n[package.extras]\nlint = [\"mypy\", \"ruff (==0.5.5)\", \"types-docutils\"]\nstandalone = [\"Sphinx (>=5)\"]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"sphinxcontrib-devhelp\"\nversion = \"2.0.0\"\ndescription = \"sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp documents\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"sphinxcontrib_devhelp-2.0.0-py3-none-any.whl\", hash = \"sha256:aefb8b83854e4b0998877524d1029fd3e6879210422ee3780459e28a1f03a8a2\"},\n    {file = \"sphinxcontrib_devhelp-2.0.0.tar.gz\", hash = \"sha256:411f5d96d445d1d73bb5d52133377b4248ec79db5c793ce7dbe59e074b4dd1ad\"},\n]\n\n[package.extras]\nlint = [\"mypy\", \"ruff (==0.5.5)\", \"types-docutils\"]\nstandalone = [\"Sphinx (>=5)\"]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"sphinxcontrib-htmlhelp\"\nversion = \"2.1.0\"\ndescription = \"sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"sphinxcontrib_htmlhelp-2.1.0-py3-none-any.whl\", hash = \"sha256:166759820b47002d22914d64a075ce08f4c46818e17cfc9470a9786b759b19f8\"},\n    {file = \"sphinxcontrib_htmlhelp-2.1.0.tar.gz\", hash = \"sha256:c9e2916ace8aad64cc13a0d233ee22317f2b9025b9cf3295249fa985cc7082e9\"},\n]\n\n[package.extras]\nlint = [\"mypy\", \"ruff (==0.5.5)\", \"types-docutils\"]\nstandalone = [\"Sphinx (>=5)\"]\ntest = [\"html5lib\", \"pytest\"]\n\n[[package]]\nname = \"sphinxcontrib-jsmath\"\nversion = \"1.0.1\"\ndescription = \"A sphinx extension which renders display math in HTML via JavaScript\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"sphinxcontrib-jsmath-1.0.1.tar.gz\", hash = \"sha256:a9925e4a4587247ed2191a22df5f6970656cb8ca2bd6284309578f2153e0c4b8\"},\n    {file = \"sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl\", hash = \"sha256:2ec2eaebfb78f3f2078e73666b1415417a116cc848b72e5172e596c871103178\"},\n]\n\n[package.extras]\ntest = [\"flake8\", \"mypy\", \"pytest\"]\n\n[[package]]\nname = \"sphinxcontrib-mermaid\"\nversion = \"1.0.0\"\ndescription = \"Mermaid diagrams in yours Sphinx powered docs\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"sphinxcontrib_mermaid-1.0.0-py3-none-any.whl\", hash = \"sha256:60b72710ea02087f212028feb09711225fbc2e343a10d34822fe787510e1caa3\"},\n    {file = \"sphinxcontrib_mermaid-1.0.0.tar.gz\", hash = \"sha256:2e8ab67d3e1e2816663f9347d026a8dee4a858acdd4ad32dd1c808893db88146\"},\n]\n\n[package.dependencies]\npyyaml = \"*\"\nsphinx = \"*\"\n\n[package.extras]\ntest = [\"defusedxml\", \"myst-parser\", \"pytest\", \"ruff\", \"sphinx\"]\n\n[[package]]\nname = \"sphinxcontrib-qthelp\"\nversion = \"2.0.0\"\ndescription = \"sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp documents\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"sphinxcontrib_qthelp-2.0.0-py3-none-any.whl\", hash = \"sha256:b18a828cdba941ccd6ee8445dbe72ffa3ef8cbe7505d8cd1fa0d42d3f2d5f3eb\"},\n    {file = \"sphinxcontrib_qthelp-2.0.0.tar.gz\", hash = \"sha256:4fe7d0ac8fc171045be623aba3e2a8f613f8682731f9153bb2e40ece16b9bbab\"},\n]\n\n[package.extras]\nlint = [\"mypy\", \"ruff (==0.5.5)\", \"types-docutils\"]\nstandalone = [\"Sphinx (>=5)\"]\ntest = [\"defusedxml (>=0.7.1)\", \"pytest\"]\n\n[[package]]\nname = \"sphinxcontrib-serializinghtml\"\nversion = \"2.0.0\"\ndescription = \"sphinxcontrib-serializinghtml is a sphinx extension which outputs \\\"serialized\\\" HTML files (json and pickle)\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"sphinxcontrib_serializinghtml-2.0.0-py3-none-any.whl\", hash = \"sha256:6e2cb0eef194e10c27ec0023bfeb25badbbb5868244cf5bc5bdc04e4464bf331\"},\n    {file = \"sphinxcontrib_serializinghtml-2.0.0.tar.gz\", hash = \"sha256:e9d912827f872c029017a53f0ef2180b327c3f7fd23c87229f7a8e8b70031d4d\"},\n]\n\n[package.extras]\nlint = [\"mypy\", \"ruff (==0.5.5)\", \"types-docutils\"]\nstandalone = [\"Sphinx (>=5)\"]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"tomli\"\nversion = \"2.2.1\"\ndescription = \"A lil' TOML parser\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"tomli-2.2.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:678e4fa69e4575eb77d103de3df8a895e1591b48e740211bd1067378c69e8249\"},\n    {file = \"tomli-2.2.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:023aa114dd824ade0100497eb2318602af309e5a55595f76b626d6d9f3b7b0a6\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ece47d672db52ac607a3d9599a9d48dcb2f2f735c6c2d1f34130085bb12b112a\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6972ca9c9cc9f0acaa56a8ca1ff51e7af152a9f87fb64623e31d5c83700080ee\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c954d2250168d28797dd4e3ac5cf812a406cd5a92674ee4c8f123c889786aa8e\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8dd28b3e155b80f4d54beb40a441d366adcfe740969820caf156c019fb5c7ec4\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:e59e304978767a54663af13c07b3d1af22ddee3bb2fb0618ca1593e4f593a106\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:33580bccab0338d00994d7f16f4c4ec25b776af3ffaac1ed74e0b3fc95e885a8\"},\n    {file = \"tomli-2.2.1-cp311-cp311-win32.whl\", hash = \"sha256:465af0e0875402f1d226519c9904f37254b3045fc5084697cefb9bdde1ff99ff\"},\n    {file = \"tomli-2.2.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:2d0f2fdd22b02c6d81637a3c95f8cd77f995846af7414c5c4b8d0545afa1bc4b\"},\n    {file = \"tomli-2.2.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:4a8f6e44de52d5e6c657c9fe83b562f5f4256d8ebbfe4ff922c495620a7f6cea\"},\n    {file = \"tomli-2.2.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:8d57ca8095a641b8237d5b079147646153d22552f1c637fd3ba7f4b0b29167a8\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4e340144ad7ae1533cb897d406382b4b6fede8890a03738ff1683af800d54192\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:db2b95f9de79181805df90bedc5a5ab4c165e6ec3fe99f970d0e302f384ad222\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:40741994320b232529c802f8bc86da4e1aa9f413db394617b9a256ae0f9a7f77\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:400e720fe168c0f8521520190686ef8ef033fb19fc493da09779e592861b78c6\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:02abe224de6ae62c19f090f68da4e27b10af2b93213d36cf44e6e1c5abd19fdd\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b82ebccc8c8a36f2094e969560a1b836758481f3dc360ce9a3277c65f374285e\"},\n    {file = \"tomli-2.2.1-cp312-cp312-win32.whl\", hash = \"sha256:889f80ef92701b9dbb224e49ec87c645ce5df3fa2cc548664eb8a25e03127a98\"},\n    {file = \"tomli-2.2.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:7fc04e92e1d624a4a63c76474610238576942d6b8950a2d7f908a340494e67e4\"},\n    {file = \"tomli-2.2.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f4039b9cbc3048b2416cc57ab3bda989a6fcf9b36cf8937f01a6e731b64f80d7\"},\n    {file = \"tomli-2.2.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:286f0ca2ffeeb5b9bd4fcc8d6c330534323ec51b2f52da063b11c502da16f30c\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a92ef1a44547e894e2a17d24e7557a5e85a9e1d0048b0b5e7541f76c5032cb13\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9316dc65bed1684c9a98ee68759ceaed29d229e985297003e494aa825ebb0281\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e85e99945e688e32d5a35c1ff38ed0b3f41f43fad8df0bdf79f72b2ba7bc5272\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:ac065718db92ca818f8d6141b5f66369833d4a80a9d74435a268c52bdfa73140\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:d920f33822747519673ee656a4b6ac33e382eca9d331c87770faa3eef562aeb2\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a198f10c4d1b1375d7687bc25294306e551bf1abfa4eace6650070a5c1ae2744\"},\n    {file = \"tomli-2.2.1-cp313-cp313-win32.whl\", hash = \"sha256:d3f5614314d758649ab2ab3a62d4f2004c825922f9e370b29416484086b264ec\"},\n    {file = \"tomli-2.2.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:a38aa0308e754b0e3c67e344754dff64999ff9b513e691d0e786265c93583c69\"},\n    {file = \"tomli-2.2.1-py3-none-any.whl\", hash = \"sha256:cb55c73c5f4408779d0cf3eef9f762b9c9f147a77de7b258bef0a5628adc85cc\"},\n    {file = \"tomli-2.2.1.tar.gz\", hash = \"sha256:cd45e1dc79c835ce60f7404ec8119f2eb06d38b1deba146f07ced3bbc44505ff\"},\n]\n\n[[package]]\nname = \"tomlkit\"\nversion = \"0.13.2\"\ndescription = \"Style preserving TOML library\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"tomlkit-0.13.2-py3-none-any.whl\", hash = \"sha256:7a974427f6e119197f670fbbbeae7bef749a6c14e793db934baefc1b5f03efde\"},\n    {file = \"tomlkit-0.13.2.tar.gz\", hash = \"sha256:fff5fe59a87295b278abd31bec92c15d9bc4a06885ab12bcea52c71119392e79\"},\n]\n\n[[package]]\nname = \"trio\"\nversion = \"0.28.0\"\ndescription = \"A friendly Python library for async concurrency and I/O\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"trio-0.28.0-py3-none-any.whl\", hash = \"sha256:56d58977acc1635735a96581ec70513cc781b8b6decd299c487d3be2a721cd94\"},\n    {file = \"trio-0.28.0.tar.gz\", hash = \"sha256:4e547896fe9e8a5658e54e4c7c5fa1db748cbbbaa7c965e7d40505b928c73c05\"},\n]\n\n[package.dependencies]\nattrs = \">=23.2.0\"\ncffi = {version = \">=1.14\", markers = \"os_name == \\\"nt\\\" and implementation_name != \\\"pypy\\\"\"}\nexceptiongroup = {version = \"*\", markers = \"python_version < \\\"3.11\\\"\"}\nidna = \"*\"\noutcome = \"*\"\nsniffio = \">=1.3.0\"\nsortedcontainers = \"*\"\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.12.2\"\ndescription = \"Backported and Experimental Type Hints for Python 3.8+\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"typing_extensions-4.12.2-py3-none-any.whl\", hash = \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\"},\n    {file = \"typing_extensions-4.12.2.tar.gz\", hash = \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"},\n]\n\n[[package]]\nname = \"urllib3\"\nversion = \"2.3.0\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"urllib3-2.3.0-py3-none-any.whl\", hash = \"sha256:1cee9ad369867bfdbbb48b7dd50374c0967a0bb7710050facf0dd6911440e3df\"},\n    {file = \"urllib3-2.3.0.tar.gz\", hash = \"sha256:f8c5449b3cf0861679ce7e0503c7b44b5ec981bec0d1d3795a07f1ba96f0204d\"},\n]\n\n[package.extras]\nbrotli = [\"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\"]\nh2 = [\"h2 (>=4,<5)\"]\nsocks = [\"pysocks (>=1.5.6,!=1.5.7,<2.0)\"]\nzstd = [\"zstandard (>=0.18.0)\"]\n\n[[package]]\nname = \"wemake-python-styleguide\"\nversion = \"1.0.0\"\ndescription = \"The strictest and most opinionated python linter ever\"\noptional = false\npython-versions = \"<4.0,>=3.10\"\nfiles = [\n    {file = \"wemake_python_styleguide-1.0.0-py3-none-any.whl\", hash = \"sha256:c0cc3fe2a2aa8d7ca76f02bc27bfe344c76ed9652f94859c241b96f0fcefa9ac\"},\n    {file = \"wemake_python_styleguide-1.0.0.tar.gz\", hash = \"sha256:00e96dc73faf5471b21d4baa5041f457c19739cf14677832429be69e5f4f7964\"},\n]\n\n[package.dependencies]\nattrs = \"*\"\nflake8 = \">=7.1,<8.0\"\npygments = \">=2.4,<3.0\"\n\n[extras]\ncheck-laws = [\"hypothesis\", \"pytest\"]\ncompatible-mypy = [\"mypy\"]\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \"^3.10\"\ncontent-hash = \"65d68ff1841189d4dce2b535e0245dcb69028b555b8f57412f03135ef6af4d4a\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 5.5625,
          "content": "[build-system]\nbuild-backend = \"poetry.core.masonry.api\"\n\nrequires = [ \"poetry-core>=1.9\" ]\n\n[tool.poetry]\nname = \"returns\"\nversion = \"0.24.0\"\ndescription = \"Make your functions return something meaningful, typed, and safe!\"\nlicense = \"BSD-3-Clause\"\n\nauthors = [\n  \"sobolevn <mail@sobolevn.me>\",\n]\n\nreadme = \"README.md\"\n\nrepository = \"https://github.com/dry-python/returns\"\nhomepage = \"https://returns.readthedocs.io\"\n\nkeywords = [\n  \"functional programming\",\n  \"fp\",\n  \"monads\",\n  \"monad\",\n  \"monad transformers\",\n  \"composition\",\n  \"type-safety\",\n  \"mypy\",\n  \"railway-oriented-programming\",\n]\n\nclassifiers = [\n  \"Development Status :: 4 - Beta\",\n  \"Intended Audience :: Developers\",\n  \"Operating System :: OS Independent\",\n  \"Framework :: Hypothesis\",\n  \"Topic :: Software Development :: Libraries :: Python Modules\",\n  \"Topic :: Utilities\",\n  \"Typing :: Typed\",\n]\n\n[tool.poetry.urls]\n\"Funding\" = \"https://github.com/sponsors/dry-python\"\n\n[tool.poetry.plugins.pytest11]\nreturns = \"returns.contrib.pytest.plugin\"\n\n[tool.poetry.plugins.hypothesis]\n_ = \"returns.contrib.hypothesis._entrypoint:_setup_hook\"\n\n[tool.poetry.dependencies]\npython = \"^3.10\"\n\ntyping-extensions = \">=4.0,<5.0\"\npytest = { version = \"^8.0\", optional = true }\nhypothesis = { version = \"^6.122\", optional = true }\nmypy = { version = \">=1.12,<1.15\", optional = true }\n\n[tool.poetry.group.dev.dependencies]\nanyio = \"^4.3\"\ntrio = \"^0.28\"\nattrs = \"^24.2\"\nhttpx = \"^0.28\"\n\nwemake-python-styleguide = \"^1.0\"\ncodespell = \"^2.2\"\nslotscheck = \"^0.19\"\nruff = \">=0.8,<0.10\"\n\npytest-cov = \"^6.0\"\npytest-randomly = \"^3.12\"\npytest-mypy-plugins = \"^3.1\"\npytest-subtests = \"^0.14\"\npytest-shard = \"^0.1\"\ncovdefaults = \"^2.3\"\n\n[tool.poetry.group.docs]\noptional = true\n\n[tool.poetry.group.docs.dependencies]\n\nsphinx = \"^8.1\"\nsphinx-autodoc-typehints = \">=2.3,<4.0\"\nsphinxcontrib-mermaid = \"^1.0\"\nfuro = \"^2024.5\"\nmyst-parser = \"^4.0\"\ntomli = \"^2.0\"\n\n[tool.poetry.extras]\ncompatible-mypy = [ \"mypy\" ]\ncheck-laws = [ \"pytest\", \"hypothesis\" ]\n\n[tool.ruff]\n# Ruff config: https://docs.astral.sh/ruff/settings\ntarget-version = \"py310\"\nline-length = 80\nextend-exclude = [\n  # Intentionally bad code:\n  \"tests/**/__snapshots__/**\",\n  \"tests/fixtures/**\",\n]\n\npreview = true\nfix = true\nformat.quote-style = \"single\"\nformat.docstring-code-format = false\nlint.select = [\n  \"A\",    # flake8-builtins\n  \"B\",    # flake8-bugbear\n  \"C4\",   # flake8-comprehensions\n  \"C90\",  # maccabe\n  \"COM\",  # flake8-commas\n  \"D\",    # pydocstyle\n  \"DTZ\",  # flake8-datetimez\n  \"E\",    # pycodestyle\n  \"ERA\",  # flake8-eradicate\n  \"EXE\",  # flake8-executable\n  \"F\",    # pyflakes\n  \"FBT\",  # flake8-boolean-trap\n  \"FLY\",  # pyflint\n  \"FURB\", # refurb\n  \"G\",    # flake8-logging-format\n  \"I\",    # isort\n  \"ICN\",  # flake8-import-conventions\n  \"ISC\",  # flake8-implicit-str-concat\n  \"LOG\",  # flake8-logging\n  \"N\",    # pep8-naming\n  \"PERF\", # perflint\n  \"PIE\",  # flake8-pie\n  \"PL\",   # pylint\n  \"PT\",   # flake8-pytest-style\n  \"PTH\",  # flake8-use-pathlib\n  \"PYI\",  # flake8-pyi\n  \"Q\",    # flake8-quotes\n  \"RET\",  # flake8-return\n  \"RSE\",  # flake8-raise\n  \"RUF\",  # ruff\n  \"S\",    # flake8-bandit\n  \"SIM\",  # flake8-simpify\n  \"SLF\",  # flake8-self\n  \"SLOT\", # flake8-slots\n  \"T100\", # flake8-debugger\n  \"TRY\",  # tryceratops\n  \"UP\",   # pyupgrade\n  \"W\",    # pycodestyle\n  \"YTT\",  # flake8-2020\n]\nlint.ignore = [\n  \"A005\",   # allow to shadow stdlib and builtin module names\n  \"COM812\", # trailing comma, conflicts with `ruff format`\n  # Different doc rules that we don't really care about:\n  \"D100\",\n  \"D104\",\n  \"D106\",\n  \"D203\",\n  \"D212\",\n  \"D401\",\n  \"D404\",\n  \"D405\",\n  \"ISC001\",  # implicit string concat conflicts with `ruff format`\n  \"ISC003\",  # prefer explicit string concat over implicit concat\n  \"PLR09\",   # we have our own complexity rules\n  \"PLR2004\", # do not report magic numbers\n  \"PLR6301\", # do not require classmethod / staticmethod when self not used\n  \"TRY003\",  # long exception messages from `tryceratops`\n]\nlint.per-file-ignores.\"*.pyi\" = [ \"D103\" ]\nlint.per-file-ignores.\"returns/context/__init__.py\" = [ \"F401\", \"PLC0414\" ]\nlint.per-file-ignores.\"returns/contrib/mypy/*.py\" = [ \"S101\" ]\nlint.per-file-ignores.\"returns/contrib/mypy/_typeops/visitor.py\" = [ \"S101\" ]\nlint.per-file-ignores.\"returns/contrib/pytest/__init__.py\" = [ \"F401\", \"PLC0414\" ]\nlint.per-file-ignores.\"returns/interfaces/*.py\" = [ \"S101\" ]\nlint.per-file-ignores.\"returns/methods/__init__.py\" = [ \"F401\", \"PLC0414\" ]\nlint.per-file-ignores.\"returns/pipeline.py\" = [ \"F401\", \"PLC0414\" ]\nlint.per-file-ignores.\"returns/pointfree/__init__.py\" = [ \"F401\", \"PLC0414\" ]\nlint.per-file-ignores.\"returns/primitives/asserts.py\" = [ \"S101\" ]\nlint.per-file-ignores.\"tests/*.py\" = [\n  \"RUF029\", # allow async functions to not use `await`\n  \"S101\",   # asserts\n  \"S105\",   # hardcoded passwords\n  \"S404\",   # subprocess calls are for tests\n  \"S603\",   # do not require `shell=True`\n  \"S607\",   # partial executable paths\n]\nlint.per-file-ignores.\"tests/test_examples/*\" = [ \"D102\" ]\nlint.per-file-ignores.\"tests/test_examples/test_maybe/test_maybe_pattern_matching.py\" = [\n  \"D101\",\n  \"D103\",\n  \"F811\",\n]\nlint.per-file-ignores.\"tests/test_examples/test_result/test_result_pattern_matching.py\" = [ \"D103\" ]\nlint.per-file-ignores.\"tests/test_pattern_matching.py\" = [ \"S101\" ]\nlint.external = [ \"WPS\" ]\nlint.flake8-quotes.inline-quotes = \"single\"\nlint.mccabe.max-complexity = 6\nlint.pep8-naming.staticmethod-decorators = [ \"law_definition\", \"staticmethod\" ]\nlint.pydocstyle.convention = \"google\"\n\n[tool.slotscheck]\nstrict-imports = true\nrequire-subclass = true\nrequire-superclass = true\nexclude-modules = 'returns\\.contrib\\.'\nexclude-classes = 'returns\\.primitives\\.exceptions:UnwrapFailedError'\n"
        },
        {
          "name": "returns",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 4.7587890625,
          "content": "# All configuration for plugins and other utils is defined here.\n# Read more about `setup.cfg`:\n# https://docs.python.org/3/distutils/configfile.html\n\n\n[flake8]\nformat = wemake\nshow-source = true\ndoctests = true\nstatistics = false\n\n# wemake-python-styleguide\nmax-annotation-complexity = 5\nallowed-domain-names = some, result, do\n\nselect = WPS, E999\n\nextend-exclude =\n  .venv\n  build\n  # Bad code that I write to test things:\n  ex.py\n  experiments\n\nignore =\n  WPS113,\n  WPS201,\n  WPS202,\n  WPS214,\n  WPS215,\n  WPS235,\n  WPS320,\n  WPS412,\n  WPS433,\n  WPS436,\n  WPS440,\n  WPS450,\n  WPS612,\n\nper-file-ignores =\n  # We allow reexport:\n  returns/pointfree/__init__.py: F401, WPS201\n  returns/methods/__init__.py: F401, WPS201\n  returns/pipeline.py: F401\n  returns/context/__init__.py: F401, WPS201\n  # Disable some quality checks for the most heavy parts:\n  returns/io.py: WPS402\n  returns/iterables.py: WPS234\n  # Interfaces and asserts can have assert statements:\n  returns/interfaces/*.py: S101\n  returns/primitives/asserts.py: S101\n  # Some rules cannot be applied to context:\n  returns/context/*.py: WPS201, WPS204, WPS226, WPS326, WPS430\n  # We allow `futures` to do attribute access:\n  returns/future.py: WPS402\n  returns/_internal/futures/*.py: WPS204, WPS433, WPS437\n  # We allow a lot of durty hacks in our plugins:\n  returns/contrib/mypy/*.py: S101, WPS201\n  returns/contrib/pytest/__init__.py: F401\n  returns/contrib/pytest/plugin.py: WPS201, WPS402, WPS430, WPS437\n  returns/contrib/hypothesis/*.py: WPS437\n  # TODO: remove after mypy@0.800\n  returns/contrib/mypy/_typeops/visitor.py: S101, WPS232\n  # Allow class attributes literals for slots and setattr:\n  returns/primitives/container.py: WPS226\n  # There are multiple assert's in tests:\n  tests/*.py: S101, WPS204, WPS218, WPS226, WPS432, WPS436\n  # Some examples don't have any docs on purpose:\n  tests/test_examples/*: D102\n  # Pattern matching, flake8 and friends are not ready to deal with it\n  tests/test_examples/test_result/test_result_pattern_matching.py: D103, WPS110, WPS125, WPS421, WPS432\n  tests/test_examples/test_maybe/test_maybe_pattern_matching.py: D101, D103, F811, WPS306, WPS421\n  tests/test_examples/test_io/test_ioresult_container/test_ioresult_pattern_matching.py: WPS110, WPS421, WPS432\n  tests/test_pattern_matching.py: S101, WPS110, WPS218, WPS432\n  # Annotations:\n  *.pyi: D103, WPS112, WPS211, WPS428\n\n\n[isort]\n# isort configuration:\n# https://pycqa.github.io/isort/docs/configuration/profiles.html\nprofile = wemake\nline_length = 80\n\n\n[tool:pytest]\n# ignores some directories:\nnorecursedirs = *.egg .eggs dist build docs .tox .git __pycache__\n\n# Active the strict mode of xfail\nxfail_strict = true\n\n# Adds these options to each `pytest` run:\naddopts =\n  --strict-markers\n  --strict-config\n  --doctest-modules\n  --doctest-glob='*.rst'\n  # pytest-cov:\n  --cov=returns\n  --cov-report=term-missing:skip-covered\n  --cov-report=html\n  --cov-report=xml\n  --cov-branch\n  --cov-fail-under=100\n  # pytest-mypy-plugin:\n  --mypy-ini-file=setup.cfg\n\n# Ignores some warnings inside:\nfilterwarnings =\n  ignore:coroutine '\\w+' was never awaited:RuntimeWarning\n\n\n[coverage:run]\nomit =\n  # We test mypy plugins with `pytest-mypy-plugins`,\n  # which does not work with coverage:\n  returns/contrib/mypy/*\n  # pytest cannot measure self coverage:\n  returns/contrib/pytest/*.py\n  # Hypothesis is also excluded:\n  returns/contrib/hypothesis/*\n\nplugins =\n  covdefaults\n\n\n[mypy]\n# mypy configurations: http://bit.ly/2zEl9WI\n\n# Custom plugins:\nplugins =\n  mypy.plugins.proper_plugin,\n  returns.contrib.mypy.returns_plugin,\n\nenable_error_code =\n  truthy-bool,\n  truthy-iterable,\n  redundant-expr,\n  # We don't want \"Are you missing an await?\" errors,\n  # because we can't disable them for tests only.\n  # It is passed as a CLI arg in CI.\n  # unused-awaitable,\n  # ignore-without-code,\n  possibly-undefined,\n  redundant-self,\n\n# We run mypy on all python versions, but only 3.10+ supports pattern matching:\nexclude = .*test_.*pattern_matching\n\ndisable_error_code = empty-body, no-untyped-def\n\n# We cannot work without explicit `Any` types and plain generics:\ndisallow_any_explicit = false\ndisallow_any_generics = false\n\nfollow_imports = silent\nignore_missing_imports = true\nstrict = true\nwarn_unreachable = true\n\n# TODO: update our output assertions to match a new syntax\nforce_uppercase_builtins = true\nforce_union_syntax = true\n\n# TODO: Enable this later, it's disabled temporarily while we don't discover why\n# the explicit restriction on `typeshed.stdlib.unittest.mock`,\n# which is the next section, is not working properly when running\n# with `pytest`.\ndisallow_subclassing_any = False\n\n[mypy-typeshed.stdlib.unittest.mock]\ndisallow_subclassing_any = False\n\n\n[codespell]\n# codespell configuration: https://pypi.org/project/codespell\nignore-words-list = appliable,falsy\nskip = __pycache__,_build,.mypy_cache\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "typesafety",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}