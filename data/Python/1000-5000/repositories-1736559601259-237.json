{
  "metadata": {
    "timestamp": 1736559601259,
    "page": 237,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fonttools/fonttools",
      "stars": 4420,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.142578125,
          "content": "comment: false\n\ncoverage:\n  status:\n    project:\n      default:\n        informational: true\n    patch:\n      default:\n        informational: true\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.8876953125,
          "content": "[run]\n# measure 'branch' coverage in addition to 'statement' coverage\n# See: http://coverage.readthedocs.org/en/coverage-4.0.3/branch.html#branch\nbranch = True\n\n# list of directories or packages to measure\nsource = fontTools\n\n# these are treated as equivalent when combining data\n[paths]\nsource =\n    Lib/fontTools\n    .tox/*/lib/python*/site-packages/fontTools\n    .tox/pypy*/site-packages/fontTools\n\n[report]\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # keywords to use in inline comments to skip coverage\n    pragma: no cover\n\n    # don't complain if tests don't hit defensive assertion code\n    raise AssertionError\n    raise NotImplementedError\n\n    # don't complain if non-runnable code isn't run\n    if 0:\n    if __name__ == .__main__.:\n\n# ignore source code that can’t be found\nignore_errors = True\n\n# when running a summary report, show missing lines\nshow_missing = True\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.06640625,
          "content": "# First blackening of code\nd584daa8fdc71030f92ee665472d6c7cddd49283\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.3125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files you want to always be normalized and converted\n# to native line endings on checkout.\n*.py text\n\n# Font files are binary (so that autocrlf doesn't muck with them)\n*.lwfn binary\n*.pfa binary\n*.pfb binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.60546875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndist/\n.eggs/\n*.egg-info/\n*.egg\nMANIFEST\n.idea\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\ncoverage.xml\n*.cover\n.pytest_cache/\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# emacs backup files\n*~\n\n# OSX Finder\n.DS_Store\n\n# VSCode\n.vscode\n\n# Cython sources (e.g. cu2qu)\nLib/**/*.c\n\n# Ctags\ntags\n\n# Documentation\nDoc/source/_build\n"
        },
        {
          "name": ".pyup.yml",
          "type": "blob",
          "size": 0.1240234375,
          "content": "# autogenerated pyup.io config file \n# see https://pyup.io/docs/configuration/ for all available options\n\nschedule: every week\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.646484375,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n      python: \"3.10\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: Doc/source/conf.py\n  fail_on_warning: false\n\n# Optionally build your docs in additional formats such as PDF and ePub\nformats:\n  - htmlzip\n  - epub\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  install:\n    - requirements: Doc/docs-requirements.txt\n    - method: pip\n      path: .\n      extra_requirements:\n        - all\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2763671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <cosimo@anthrotype.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6826171875,
          "content": "## How to Contribute\n\nFontTools development is on-going in an active community of developers, that includes professional developers employed at major software corporations and at type foundries, as well as hobbyists.\n\nThe project is run on Github, in the typical free/libre/open-source software way. \nIf you are unfamiliar with that, check out [opensource.guide](https://opensource.guide) and [producingoss.com](http://producingoss.com).\n\nWe use Github's Issue Tracker to report, discuss and track bugs, map out future improvements, set priorities, and self-assign issues.\nIf you find a bug, have an idea for a new feature, then please [create a new issue](https://github.com/fonttools/fonttools/issues) and we'll be happy to work with you on it!\n\nIf you have a question or want to discuss usage from an end-user perspective, check out the [Discussions](https://github.com/fonttools/fonttools/discussions).\n\nIf you would like to speak to someone directly, you can also email the project lead, Behdad Esfahbod, privately at <behdad@behdad.org>\n\nIf you make a pull request, you (or the organization that owns your copyrights) should be listed in the [README](https://github.com/fonttools/fonttools#copyrights).\n\n(There is also a development [groups.google.com/d/forum/fonttools-dev](https://groups.google.com/d/forum/fonttools-dev) mailing list for Continuous Integration notifications.)\n\n## Code reviews\n\nAll submissions, including submissions by project members, go through a review process using GitHub Pull Requests.\nConsult [GitHub Help](https://help.github.com/articles/about-pull-requests/) for more information on making Pull Requests.\n\n## Code of Conduct\n\nThis project has a [CODE_OF_CONDUCT.md](CODE_OF_CONDUCT.md)\n"
        },
        {
          "name": "Doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "Icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2017 Just van Rossum\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "LICENSE.external",
          "type": "blob",
          "size": 18.2490234375,
          "content": "FontTools includes the following font projects for testing purposes, which are\nunder SIL Open Font License, Version 1.1:\n\nLobster\n  Copyright (c) 2010, Pablo Impallari (www.impallari.com|impallari@gmail.com),\n  with Reserved Font Name Lobster.\n  This Font Software is licensed under the SIL Open Font License, Version 1.1.\n\nNoto Fonts\n  This Font Software is licensed under the SIL Open Font License, Version 1.1.\n\nXITS font project\n  Copyright (c) 2001-2010 by the STI Pub Companies, consisting of the American\n  Institute of Physics, the American Chemical Society, the American\n  Mathematical Society, the American Physical Society, Elsevier, Inc., and The\n  Institute of Electrical and Electronic Engineers, Inc. (www.stixfonts.org),\n  with Reserved Font Name STIX Fonts, STIX Fonts (TM) is a  trademark of The\n  Institute of Electrical and Electronics Engineers, Inc.\n\n  Portions copyright (c) 1998-2003 by MicroPress, Inc.\n  (www.micropress-inc.com), with Reserved Font Name TM Math. To obtain\n  additional mathematical fonts, please contact MicroPress, Inc., 68-30 Harrow\n  Street, Forest Hills, NY 11375, USA, Phone: (718) 575-1816.\n\n  Portions copyright (c) 1990 by Elsevier, Inc.\n\n  This Font Software is licensed under the SIL Open Font License, Version 1.1.\n\nIosevka\n  Copyright (c) 2015-2020 Belleve Invis (belleve@typeof.net).\n  This Font Software is licensed under the SIL Open Font License, Version 1.1.\n\nThis license is copied below, and is also available with a FAQ at:\nhttp://scripts.sil.org/OFL\n\n-----------------------------------------------------------\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n-----------------------------------------------------------\n\nPREAMBLE\nThe goals of the Open Font License (OFL) are to stimulate worldwide\ndevelopment of collaborative font projects, to support the font\ncreation efforts of academic and linguistic communities, and to\nprovide a free and open framework in which fonts may be shared and\nimproved in partnership with others.\n\nThe OFL allows the licensed fonts to be used, studied, modified and\nredistributed freely as long as they are not sold by themselves. The\nfonts, including any derivative works, can be bundled, embedded,\nredistributed and/or sold with any software provided that any reserved\nnames are not used by derivative works. The fonts and derivatives,\nhowever, cannot be released under any other type of license. The\nrequirement for fonts to remain under this license does not apply to\nany document created using the fonts or their derivatives.\n\nDEFINITIONS\n\"Font Software\" refers to the set of files released by the Copyright\nHolder(s) under this license and clearly marked as such. This may\ninclude source files, build scripts and documentation.\n\n\"Reserved Font Name\" refers to any names specified as such after the\ncopyright statement(s).\n\n\"Original Version\" refers to the collection of Font Software\ncomponents as distributed by the Copyright Holder(s).\n\n\"Modified Version\" refers to any derivative made by adding to,\ndeleting, or substituting -- in part or in whole -- any of the\ncomponents of the Original Version, by changing formats or by porting\nthe Font Software to a new environment.\n\n\"Author\" refers to any designer, engineer, programmer, technical\nwriter or other person who contributed to the Font Software.\n\nPERMISSION & CONDITIONS\nPermission is hereby granted, free of charge, to any person obtaining\na copy of the Font Software, to use, study, copy, merge, embed,\nmodify, redistribute, and sell modified and unmodified copies of the\nFont Software, subject to the following conditions:\n\n1) Neither the Font Software nor any of its individual components, in\nOriginal or Modified Versions, may be sold by itself.\n\n2) Original or Modified Versions of the Font Software may be bundled,\nredistributed and/or sold with any software, provided that each copy\ncontains the above copyright notice and this license. These can be\nincluded either as stand-alone text files, human-readable headers or\nin the appropriate machine-readable metadata fields within text or\nbinary files as long as those fields can be easily viewed by the user.\n\n3) No Modified Version of the Font Software may use the Reserved Font\nName(s) unless explicit written permission is granted by the\ncorresponding Copyright Holder. This restriction only applies to the\nprimary font name as presented to the users.\n\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\nSoftware shall not be used to promote, endorse or advertise any\nModified Version, except to acknowledge the contribution(s) of the\nCopyright Holder(s) and the Author(s) or with their explicit written\npermission.\n\n5) The Font Software, modified or unmodified, in part or in whole,\nmust be distributed entirely under this license, and must not be\ndistributed under any other license. The requirement for fonts to\nremain under this license does not apply to any document created using\nthe Font Software.\n\nTERMINATION\nThis license becomes null and void if any of the above conditions are\nnot met.\n\nDISCLAIMER\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\nOTHER DEALINGS IN THE FONT SOFTWARE.\n\n=====\n\nFontTools includes Adobe AGL & AGLFN, which is under 3-clauses BSD license:\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nNeither the name of Adobe Systems Incorporated nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n=====\n\nFontTools includes cu2qu, which is Copyright 2016 Google Inc. All Rights Reserved.\nLicensed under the Apache License, Version 2.0, a copy of which is reproduced below:\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 1.0966796875,
          "content": "include README.rst\ninclude LICENSE\ninclude LICENSE.external\ninclude NEWS.rst\ninclude Makefile\ninclude fonttools\ninclude Snippets/*.py\ninclude Snippets/README.md\ninclude MetaTools/*.py\ninclude Lib/fontTools/ttLib/tables/table_API_readme.txt\n\ninclude *requirements.txt\ninclude tox.ini\ninclude mypy.ini\n\nrecursive-include Lib/fontTools py.typed\n\ninclude .appveyor.yml\ninclude .codecov.yml\ninclude .coveragerc\ninclude .travis.yml\nrecursive-include .travis *.sh\n\nrecursive-include Icons *.png *.pdf\n\ninclude Doc/Makefile\ninclude Doc/make.bat\ninclude Doc/docs-requirements.txt\ninclude Doc/README.md\ninclude Doc/source/assets/img/favicon.ico\nrecursive-include Doc/man/man1 *.1\nrecursive-include Doc/source *.py *.rst\n\nrecursive-include Tests *.py *.ttx *.otx *.fea *.feax\nrecursive-include Tests *.ttc *.ttf *.dfont *.woff *.woff2\nrecursive-include Tests *.otf *.ttx.*\nrecursive-include Tests *.glif *.plist\nrecursive-include Tests *.txt README\nrecursive-include Tests *.lwfn *.pfa *.pfb\nrecursive-include Tests *.xml *.designspace *.bin\nrecursive-include Tests *.afm\nrecursive-include Tests *.json\nrecursive-include Tests *.ufoz\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.34375,
          "content": "all:\n\t./setup.py build\n\ndist:\n\t./setup.py sdist bdist_wheel\n\ninstall:\n\tpip install --ignore-installed .\n\ninstall-user:\n\tpip install --ignore-installed --user .\n\nuninstall:\n\tpip uninstall --yes fonttools\n\ncheck: all\n\tpytest\n\nclean:\n\t./setup.py clean --all\n\ndocs:\n\tcd Doc && $(MAKE) html\n\n.PHONY: all dist install install-user uninstall check clean docs\n"
        },
        {
          "name": "MetaTools",
          "type": "tree",
          "content": null
        },
        {
          "name": "NEWS.rst",
          "type": "blob",
          "size": 146.1640625,
          "content": "4.55.3 (released 2024-12-10)\n----------------------------\n\n\n- [Docs] fill out ttLib table section [#3716]\n- [feaLib] More efficient inline format 4 lookups [#3726]\n\n4.55.2 (released 2024-12-05)\n----------------------------\n\n- [Docs] update Sphinx config (#3712)\n- [designspaceLib] Allow axisOrdering to be set to zero (#3715)\n- [feaLib] Don’t modify variable anchors in place (#3717)\n\n4.55.1 (released 2024-12-02)\n----------------------------\n\n- [ttGlyphSet] Support VARC CFF2 fonts (#3683)\n- [DecomposedTransform] Document and implement always skewY == 0 (#3697)\n- [varLib] \"Fix\" cython iup issue? (#3704)\n- Cython minor refactor (#3705)\n\n\n4.55.0 (released 2024-11-14)\n----------------------------\n\n\n- [cffLib.specializer] Adjust stack use calculation (#3689)\n- [varLib] Lets not add mac names if the rest of name doesn't have them (#3688)\n- [ttLib.reorderGlyphs] Update CFF table charstrings and charset (#3682)\n- [cffLib.specializer] Add cmdline to specialize a CFF2 font (#3675, #3679)\n- [CFF2] Lift uint16 VariationStore.length limitation (#3674)\n- [subset] consider variation selectors subsetting cmap14 (#3672)\n- [varLib.interpolatable] Support CFF2 fonts (#3670)\n- Set isfinal to true in XML parser for proper resource cleanup (#3669)\n- [removeOverlaps] Fix CFF CharString width (#3659)\n- [glyf] Add optimizeSize option (#3657)\n- Python 3.13 support (#3656)\n- [TupleVariation] Optimize for loading speed, not size (#3650, #3653)\n\n\n4.54.1 (released 2024-09-24)\n----------------------------\n\n- [unicodedata] Update to Unicode 16\n- [subset] Escape ``\\\\`` in doc string\n\n4.54.0 (released 2024-09-23)\n----------------------------\n\n- [Docs] Small docs cleanups by @n8willis (#3611)\n- [Docs] cleanup code blocks by @n8willis (#3627)\n- [Docs] fix Sphinx builds by @n8willis (#3625)\n- [merge] Minor fixes to documentation for merge by @drj11 (#3588)\n- [subset] Small tweaks to pyftsubset documentation by @RoelN (#3633)\n- [Tests] Do not require fonttools command to be available by @behdad (#3612)\n- [Tests] subset_test: add failing test to reproduce issue #3616 by @anthrotype (#3622)\n- [ttLib] NameRecordVisitor: include whole sequence of character variants' UI labels, not just the first by @anthrotype (#3617)\n- [varLib.avar] Reconstruct mappings from binary by @behdad (#3598)\n- [varLib.instancer] Fix visual artefacts with partial L2 instancing by @Hoolean (#3635)\n- [varLib.interpolatable] Support discrete axes in .designspace by @behdad (#3599)\n- [varLib.models] By default, assume OpenType-like normalized space by @behdad (#3601)\n\n4.53.1 (released 2024-07-05)\n----------------------------\n\n- [feaLib] Improve the sharing of inline chained lookups (#3559)\n- [otlLib] Correct the calculation of OS/2.usMaxContext with reversed chaining contextual single substitutions (#3569)\n- [misc.visitor] Visitors search the inheritance chain of objects they are visiting (#3581)\n\n4.53.0 (released 2024-05-31)\n----------------------------\n\n- [ttLib.removeOverlaps] Support CFF table to aid in downconverting CFF2 fonts (#3528)\n- [avar] Fix crash when accessing not-yet-existing attribute (#3550)\n- [docs] Add buildMathTable to otlLib.builder documentation (#3540)\n- [feaLib] Allow UTF-8 with BOM when reading features (#3495)\n- [SVGPathPen] Revert rounding coordinates to two decimal places by default (#3543)\n- [varLib.instancer] Refix output filename decision-making  (#3545, #3544, #3548)\n\n4.52.4 (released 2024-05-27)\n----------------------------\n\n- [varLib.cff] Restore and deprecate convertCFFtoCFF2 that was removed in 4.52.0\n  release as it is used by downstream projects (#3535).\n\n4.52.3 (released 2024-05-27)\n----------------------------\n\n- Fixed a small syntax error in the reStructuredText-formatted NEWS.rst file\n  which caused the upload to PyPI to fail for 4.52.2. No other code changes.\n\n4.52.2 (released 2024-05-27)\n----------------------------\n\n- [varLib.interpolatable] Ensure that scipy/numpy output is JSON-serializable\n  (#3522, #3526).\n- [housekeeping] Regenerate table lists, to fix pyinstaller packaging of the new\n  ``VARC`` table (#3531, #3529).\n- [cffLib] Make CFFToCFF2 and CFF2ToCFF more robust (#3521, #3525).\n\n4.52.1 (released 2024-05-24)\n----------------------------\n\n- Fixed a small syntax error in the reStructuredText-formatted NEWS.rst file\n  which caused the upload to PyPI to fail for 4.52.0. No other code changes.\n\n4.52.0 (released 2024-05-24)\n----------------------------\n\n- Added support for the new ``VARC`` (Variable Composite) table that is being\n  proposed to OpenType spec (#3395). For more info:\n  https://github.com/harfbuzz/boring-expansion-spec/blob/main/VARC.md\n- [ttLib.__main__] Fixed decompiling all tables (90fed08).\n- [feaLib] Don't reference the same lookup index multiple times within the same\n  feature record, it is only applied once anyway (#3520).\n- [cffLib] Moved methods to desubroutinize, remove hints and unused subroutines\n  from subset module to cffLib (#3517).\n- [varLib.instancer] Added support for partial-instancing CFF2 tables! Also, added\n  method to down-convert from CFF2 to CFF 1.0, and CLI entry points to convert\n  CFF<->CFF2 (#3506).\n- [subset] Prune unused user name IDs even with --name-IDs='*' (#3410).\n- [ttx] use GNU-style getopt to intermix options and positional arguments (#3509).\n- [feaLib.variableScalar] Fixed ``value_at_location()`` method (#3491)\n- [psCharStrings] Shorten output of ``encodeFloat`` (#3492).\n- [bezierTools] Fix infinite-recursion in ``calcCubicArcLength`` (#3502).\n- [avar2] Implement ``avar2`` support in ``TTFont.getGlyphSet()`` (#3473).\n\n4.51.0 (released 2024-04-05)\n----------------------------\n\n- [ttLib] Optimization on loading aux fields (#3464).\n- [ttFont] Add reorderGlyphs (#3468).\n\n4.50.0 (released 2024-03-15)\n----------------------------\n\n- [pens] Added decomposing filter pens that draw components as regular contours (#3460).\n- [instancer] Drop explicit no-op axes from TupleVariations (#3457).\n- [cu2qu/ufo] Return set of modified glyph names from fonts_to_quadratic (#3456).\n\n4.49.0 (released 2024-02-15)\n----------------------------\n\n- [otlLib] Add API for building ``MATH`` table (#3446)\n\n4.48.1 (released 2024-02-06)\n----------------------------\n\n- Fixed uploading wheels to PyPI, no code changes since v4.48.0.\n\n4.48.0 (released 2024-02-06)\n----------------------------\n\n- [varLib] Do not log when there are no OTL tables to be merged.\n- [setup.py] Do not restrict lxml<5 any more, tests pass just fine with lxml>=5.\n- [feaLib] Remove glyph and class names length restrictions in FEA (#3424).\n- [roundingPens] Added ``transformRoundFunc`` parameter to the rounding pens to allow\n  for custom rounding of the components' transforms (#3426).\n- [feaLib] Keep declaration order of ligature components within a ligature set, instead\n  of sorting by glyph name (#3429).\n- [feaLib] Fixed ordering of alternates in ``aalt`` lookups, following the declaration\n  order of feature references within the ``aalt`` feature block (#3430).\n- [varLib.instancer] Fixed a bug in the instancer's IUP optimization (#3432).\n- [sbix] Support sbix glyphs with new graphicType \"flip\" (#3433).\n- [svgPathPen] Added ``--glyphs`` option to dump the SVG paths for the named glyphs\n  in the font (0572f78).\n- [designspaceLib] Added \"description\" attribute to ``<mappings>`` and ``<mapping>``\n  elements, and allow multiple ``<mappings>`` elements to group ``<mapping>`` elements\n  that are logically related (#3435, #3437).\n- [otlLib] Correctly choose the most compact GSUB contextual lookup format (#3439).\n\n4.47.2 (released 2024-01-11)\n----------------------------\n\nMinor release to fix uploading wheels to PyPI.\n\n4.47.1 (released 2024-01-11)\n----------------------------\n\n- [merge] Improve help message and add standard command line options (#3408)\n- [otlLib] Pass ``ttFont`` to ``name.addName`` in ``buildStatTable`` (#3406)\n- [featureVars] Re-use ``FeatureVariationRecord``'s when possible (#3413)\n\n4.47.0 (released 2023-12-18)\n----------------------------\n\n- [varLib.models] New API for VariationModel: ``getMasterScalars`` and\n  ``interpolateFromValuesAndScalars``.\n- [varLib.interpolatable] Various bugfixes and rendering improvements. In particular,\n  add a Summary page in the front, and an Index and Table-of-Contents in the back.\n  Change the page size to Letter.\n- [Docs/designspaceLib] Defined a new ``public.fontInfo`` lib key, not used anywhere yet (#3358).\n\n4.46.0 (released 2023-12-02)\n----------------------------\n\n- [featureVars] Allow to register the same set of substitution rules to multiple features.\n  The ``addFeatureVariations`` function can now take a list of featureTags; similarly, the\n  lib key 'com.github.fonttools.varLib.featureVarsFeatureTag' can now take a\n  comma-separateed string of feature tags (e.g. \"salt,ss01\") instead of a single tag (#3360).\n- [featureVars] Don't overwrite GSUB FeatureVariations, but append new records to it\n  for features which are not already there. But raise ``VarLibError`` if the feature tag\n  already has feature variations associated with it (#3363).\n- [varLib] Added ``addGSUBFeatureVariations`` function to add GSUB Feature Variations\n  to an existing variable font from rules defined in a DesignSpace document (#3362).\n- [varLib.interpolatable] Various bugfixes and rendering improvements. In particular,\n  a new test for \"underweight\" glyphs. The new test reports quite a few false-positives\n  though. Please send feedback.\n\n4.45.1 (released 2023-11-23)\n----------------------------\n\n- [varLib.interpolatable] Various bugfixes and improvements, better reporting, reduced\n  false positives.\n- [ttGlyphSet] Added option to not recalculate glyf bounds (#3348).\n\n4.45.0 (released 2023-11-20)\n----------------------------\n\n- [varLib.interpolatable] Vastly improved algorithms. Also available now is ``--pdf``\n  and ``--html`` options to generate a PDF or HTML report of the interpolation issues.\n  The PDF/HTML report showcases the problematic masters, the interpolated broken\n  glyph, as well as the proposed fixed version.\n\n4.44.3 (released 2023-11-15)\n----------------------------\n\n- [subset] Only prune codepage ranges for OS/2.version >= 1, ignore otherwise (#3334).\n- [instancer] Ensure hhea vertical metrics stay in sync with OS/2 ones after instancing\n  MVAR table containing 'hasc', 'hdsc' or 'hlgp' tags (#3297).\n\n4.44.2 (released 2023-11-14)\n----------------------------\n\n- [glyf] Have ``Glyph.recalcBounds`` skip empty components (base glyph with no contours)\n  when computing the bounding box of composite glyphs. This simply restores the existing\n  behavior before some changes were introduced in fonttools 4.44.0 (#3333).\n\n4.44.1 (released 2023-11-14)\n----------------------------\n\n- [feaLib] Ensure variable mark anchors are deep-copied while building since they\n  get modified in-place and later reused (#3330).\n- [OS/2|subset] Added method to ``recalcCodePageRanges`` to OS/2 table class; added\n  ``--prune-codepage-ranges`` to `fonttools subset` command (#3328, #2607).\n\n4.44.0 (released 2023-11-03)\n----------------------------\n\n- [instancer] Recalc OS/2 AvgCharWidth after instancing if default changes (#3317).\n- [otlLib] Make ClassDefBuilder class order match varLib.merger's, i.e. large\n  classes first, then glyph lexicographic order (#3321, #3324).\n- [instancer] Allow not specifying any of min:default:max values and let be filled\n  up with fvar's values (#3322, #3323).\n- [instancer] When running --update-name-table ignore axes that have no STAT axis\n  values (#3318, #3319).\n- [Debg] When dumping to ttx, write the embedded JSON as multi-line string with\n  indentation (92cbfee0d).\n- [varStore] Handle > 65535 items per encoding by splitting VarData subtable (#3310).\n- [subset] Handle null-offsets in MarkLigPos subtables.\n- [subset] Keep East Asian spacing fatures vhal, halt, chws, vchw by default (#3305).\n- [instancer.solver] Fixed case where axisDef < lower and upper < axisMax (#3304).\n- [glyf] Speed up compilation, mostly around ``recalcBounds`` (#3301).\n- [varLib.interpolatable] Speed it up when working on variable fonts, plus various\n  micro-optimizations (#3300).\n- Require unicodedata2 >= 15.1.0 when installed with 'unicode' extra, contains UCD 15.1.\n\n4.43.1 (released 2023-10-06)\n----------------------------\n\n- [EBDT] Fixed TypeError exception in `_reverseBytes` method triggered when dumping\n  some bitmap fonts with `ttx -z bitwise` option (#3162).\n- [v/hhea] Fixed UnboundLocalError exception in ``recalc`` method when no vmtx or hmtx\n  tables are present (#3290).\n- [bezierTools] Fixed incorrectly typed cython local variable leading to TypeError when\n  calling ``calcQuadraticArcLength`` (#3288).\n- [feaLib/otlLib] Better error message when building Coverage table with missing glyph (#3286).\n\n4.43.0 (released 2023-09-29)\n----------------------------\n\n- [subset] Set up lxml ``XMLParser(resolve_entities=False)`` when parsing OT-SVG documents\n  to prevent XML External Entity (XXE) attacks (9f61271dc):\n  https://codeql.github.com/codeql-query-help/python/py-xxe/\n- [varLib.iup] Added workaround for a Cython bug in ``iup_delta_optimize`` that was\n  leading to IUP tolerance being incorrectly initialised, resulting in sub-optimal deltas\n  (60126435d, cython/cython#5732).\n- [varLib] Added new command-line entry point ``fonttools varLib.avar`` to add an\n  ``avar`` table to an existing VF from axes mappings in a .designspace file (0a3360e52).\n- [instancer] Fixed bug whereby no longer used variation regions were not correctly pruned\n  after VarData optimization (#3268).\n- Added support for Python 3.12 (#3283).\n\n4.42.1 (released 2023-08-20)\n----------------------------\n\n- [t1Lib] Fixed several Type 1 issues (#3238, #3240).\n- [otBase/packer] Allow sharing tables reached by different offset sizes (#3241, #3236).\n- [varLib/merger] Fix Cursive attachment merging error when all anchors are NULL (#3248, #3247).\n- [ttLib] Fixed warning when calling ``addMultilingualName`` and ``ttFont`` parameter was not\n  passed on to ``findMultilingualName`` (#3253).\n\n4.42.0 (released 2023-08-02)\n----------------------------\n\n- [varLib] Use sentinel value 0xFFFF to mark a glyph advance in hmtx/vmtx as non\n  participating, allowing sparse masters to contain glyphs for variation purposes other\n  than {H,V}VAR (#3235).\n- [varLib/cff] Treat empty glyphs in non-default masters as missing, thus not participating\n  in CFF2 delta computation, similarly to how varLib already treats them for gvar (#3234).\n- Added varLib.avarPlanner script to deduce 'correct' avar v1 axis mappings based on\n  glyph average weights (#3223).\n\n4.41.1 (released 2023-07-21)\n----------------------------\n\n- [subset] Fixed perf regression in v4.41.0 by making ``NameRecordVisitor`` only visit\n  tables that do contain nameID references (#3213, #3214).\n- [varLib.instancer] Support instancing fonts containing null ConditionSet offsets in\n  FeatureVariationRecords (#3211, #3212).\n- [statisticsPen] Report font glyph-average weight/width and font-wide slant.\n- [fontBuilder] Fixed head.created date incorrectly set to 0 instead of the current\n  timestamp, regression introduced in v4.40.0 (#3210).\n- [varLib.merger] Support sparse ``CursivePos`` masters (#3209).\n\n4.41.0 (released 2023-07-12)\n----------------------------\n\n- [fontBuilder] Fixed bug in setupOS2 with default panose attribute incorrectly being\n  set to a dict instead of a Panose object (#3201).\n- [name] Added method to ``removeUnusedNameRecords`` in the user range (#3185).\n- [varLib.instancer] Fixed issue with L4 instancing (moving default) (#3179).\n- [cffLib] Use latin1 so we can roundtrip non-ASCII in {Full,Font,Family}Name (#3202).\n- [designspaceLib] Mark <source name=\"...\"> as optional in docs (as it is in the code).\n- [glyf-1] Fixed drawPoints() bug whereby last cubic segment becomes quadratic (#3189, #3190).\n- [fontBuilder] Propagate the 'hidden' flag to the fvar Axis instance (#3184).\n- [fontBuilder] Update setupAvar() to also support avar 2, fixing ``_add_avar()`` call\n  site (#3183).\n- Added new ``voltLib.voltToFea`` submodule (originally Tiro Typeworks' \"Volto\") for\n  converting VOLT OpenType Layout sources to FEA format (#3164).\n\n4.40.0 (released 2023-06-12)\n----------------------------\n\n- Published native binary wheels to PyPI for all the python minor versions and platform\n  and architectures currently supported that would benefit from this. They will include\n  precompiled Cython-accelerated modules (e.g. cu2qu) without requiring to compile them\n  from source. The pure-python wheel and source distribution will continue to be\n  published as always (pip will automatically chose them when no binary wheel is\n  available for the given platform, e.g. pypy). Use ``pip install --no-binary=fonttools fonttools``\n  to expliclity request pip to install from the pure-python source.\n- [designspaceLib|varLib] Add initial support for specifying axis mappings and build\n  ``avar2`` table from those (#3123).\n- [feaLib] Support variable ligature caret position (#3130).\n- [varLib|glyf] Added option to --drop-implied-oncurves; test for impliable oncurve\n  points either before or after rounding (#3146, #3147, #3155, #3156).\n- [TTGlyphPointPen] Don't error with empty contours, simply ignore them (#3145).\n- [sfnt] Fixed str vs bytes remnant of py3 transition in code dealing with de/compiling\n  WOFF metadata (#3129).\n- [instancer-solver] Fixed bug when moving default instance with sparse masters (#3139, #3140).\n- [feaLib] Simplify variable scalars that don’t vary (#3132).\n- [pens] Added filter pen that explicitly emits closing line when lastPt != movePt (#3100).\n- [varStore] Improve optimize algorithm and better document the algorithm (#3124, #3127).\n  Added ``quantization`` option (#3126).\n- Added CI workflow config file for building native binary wheels (#3121).\n- [fontBuilder] Added glyphDataFormat=0 option; raise error when glyphs contain cubic\n  outlines but glyphDataFormat was not explicitly set to 1 (#3113, #3119).\n- [subset] Prune emptied GDEF.MarkGlyphSetsDef and remap indices; ensure GDEF is\n  subsetted before GSUB and GPOS (#3114, #3118).\n- [xmlReader] Fixed issue whereby DSIG table data was incorrectly parsed (#3115, #2614).\n- [varLib/merger] Fixed merging of SinglePos with pos=0 (#3111, #3112).\n- [feaLib] Demote \"Feature has not been defined\" error to a warning when building aalt\n  and referenced feature is empty (#3110).\n- [feaLib] Dedupe multiple substitutions with classes (#3105).\n\n4.39.4 (released 2023-05-10)\n----------------------------\n\n- [varLib.interpolatable] Allow for sparse masters (#3075)\n- [merge] Handle differing default/nominalWidthX in CFF (#3070)\n- [ttLib] Add missing main.py file to ttLib package (#3088)\n- [ttx] Fix missing composite instructions in XML (#3092)\n- [ttx] Fix split tables option to work on filenames containing '%' (#3096)\n- [featureVars] Process lookups for features other than rvrn last (#3099)\n- [feaLib] support multiple substitution with classes (#3103)\n\n4.39.3 (released 2023-03-28)\n----------------------------\n\n- [sbix] Fixed TypeError when compiling empty glyphs whose imageData is None, regression\n  was introduced in v4.39 (#3059).\n- [ttFont] Fixed AttributeError on python <= 3.10 when opening a TTFont from a tempfile\n  SpooledTemporaryFile, seekable method only added on python 3.11 (#3052).\n\n4.39.2 (released 2023-03-16)\n----------------------------\n\n- [varLib] Fixed regression introduced in 4.39.1 whereby an incomplete 'STAT' table\n  would be built even though a DesignSpace v5 did contain 'STAT' definitions (#3045, #3046).\n\n4.39.1 (released 2023-03-16)\n----------------------------\n\n- [avar2] Added experimental support for reading/writing avar version 2 as specified in\n  this draft proposal: https://github.com/harfbuzz/boring-expansion-spec/blob/main/avar2.md\n- [glifLib] Wrap underlying XML library exceptions with GlifLibError when parsing GLIFs,\n  and also print the name and path of the glyph that fails to be parsed (#3042).\n- [feaLib] Consult avar for normalizing user-space values in ConditionSets and in\n  VariableScalars (#3042, #3043).\n- [ttProgram] Handle string input to Program.fromAssembly() (#3038).\n- [otlLib] Added a config option to emit GPOS 7 lookups, currently disabled by default\n  because of a macOS bug (#3034).\n- [COLRv1] Added method to automatically compute ClipBoxes (#3027).\n- [ttFont] Fixed getGlyphID to raise KeyError on missing glyphs instead of returning\n  None. The regression was introduced in v4.27.0 (#3032).\n- [sbix] Fixed UnboundLocalError: cannot access local variable 'rawdata' (#3031).\n- [varLib] When building VF, do not overwrite a pre-existing ``STAT`` table that was built\n  with feaLib from FEA feature file. Also, added support for building multiple VFs\n  defined in Designspace v5 from ``fonttools varLib`` script (#3024).\n- [mtiLib] Only add ``Debg`` table with lookup names when ``FONTTOOLS_LOOKUP_DEBUGGING``\n  env variable is set (#3023).\n\n4.39.0 (released 2023-03-06)\n----------------------------\n\n- [mtiLib] Optionally add `Debg` debug info for MTI feature builds (#3018).\n- [ttx] Support reading input file from standard input using special `-` character,\n  similar to existing `-o -` option to write output to standard output (#3020).\n- [cython] Prevent ``cython.compiled`` raise AttributeError if cython not installed\n  properly (#3017).\n- [OS/2] Guard against ZeroDivisionError when calculating xAvgCharWidth in the unlikely\n  scenario no glyph has non-zero advance (#3015).\n- [subset] Recompute xAvgCharWidth independently of --no-prune-unicode-ranges,\n  previously the two options were involuntarily bundled together (#3012).\n- [fontBuilder] Add ``debug`` parameter to addOpenTypeFeatures method to add source\n  debugging information to the font in the ``Debg`` private table (#3008).\n- [name] Make NameRecord `__lt__` comparison not fail on Unicode encoding errors (#3006).\n- [featureVars] Fixed bug in ``overlayBox`` (#3003, #3005).\n- [glyf] Added experimental support for cubic bezier curves in TrueType glyf table, as\n  outlined in glyf v1 proposal (#2988):\n  https://github.com/harfbuzz/boring-expansion-spec/blob/main/glyf1-cubicOutlines.md\n- Added new qu2cu module and related qu2cuPen, the reverse of cu2qu for converting\n  TrueType quadratic splines to cubic bezier curves (#2993).\n- [glyf] Added experimental support for reading and writing Variable Composites/Components\n  as defined in glyf v1 spec proposal (#2958):\n  https://github.com/harfbuzz/boring-expansion-spec/blob/main/glyf1-varComposites.md.\n- [pens]: Added `addVarComponent` method to pen protocols' base classes, which pens can implement\n  to handle varcomponents (by default they get decomposed) (#2958).\n- [misc.transform] Added DecomposedTransform class which implements an affine transformation\n  with separate translate, rotation, scale, skew, and transformation-center components (#2598)\n- [sbix] Ensure Glyph.referenceGlyphName is set; fixes error after dumping and\n  re-compiling sbix table with 'dupe' glyphs (#2984).\n- [feaLib] Be cleverer when merging chained single substitutions into same lookup\n  when they are specified using the inline notation (#2150, #2974).\n- [instancer] Clamp user-inputted axis ranges to those of fvar (#2959).\n- [otBase/subset] Define ``__getstate__`` for BaseTable so that a copied/pickled 'lazy'\n  object gets its own OTTableReader to read from; incidentally fixes a bug while\n  subsetting COLRv1 table containing ClipBoxes on python 3.11 (#2965, #2968).\n- [sbix] Handle glyphs with \"dupe\" graphic type on compile correctly (#2963).\n- [glyf] ``endPointsOfContours`` field should be unsigned! Kudos to behdad for\n  spotting one of the oldest bugs in FT. Probably nobody has ever dared to make\n  glyphs with more than 32767 points... (#2957).\n- [feaLib] Fixed handling of ``ignore`` statements with unmarked glyphs to match\n  makeotf behavior, which assumes the first glyph is marked (#2950).\n- Reformatted code with ``black`` and enforce new code style via CI check (#2925).\n- [feaLib] Sort name table entries following OT spec prescribed order in the builder (#2927).\n- [cu2quPen] Add Cu2QuMultiPen that converts multiple outlines at a time in\n  interpolation compatible way; its methods take a list of tuples arguments\n  that would normally be passed to individual segment pens, and at the end it\n  dispatches the converted outlines to each pen (#2912).\n- [reverseContourPen/ttGlyphPen] Add outputImpliedClosingLine option (#2913, #2914,\n  #2921, #2922, #2995).\n- [gvar] Avoid expanding all glyphs unnecessarily upon compile (#2918).\n- [scaleUpem] Fixed bug whereby CFF2 vsindex was scaled; it should not (#2893, #2894).\n- [designspaceLib] Add DS.getAxisByTag and refactor getAxis (#2891).\n- [unicodedata] map Zmth<->math in ot_tag_{to,from}_script (#1737, #2889).\n- [woff2] Support encoding/decoding OVERLAP_SIMPLE glyf flags (#2576, #2884).\n- [instancer] Update OS/2 class and post.italicAngle when default moved (L4)\n- Dropped support for Python 3.7 which reached EOL, fontTools requires 3.8+.\n- [instancer] Fixed instantiateFeatureVariations logic when a rule range becomes\n  default-applicable (#2737, #2880).\n- [ttLib] Add main to ttFont and ttCollection that just decompile and re-compile the\n  input font (#2869).\n- [featureVars] Insert 'rvrn' lookup at the beginning of LookupList, to work around bug\n  in Apple implementation of 'rvrn' feature which the spec says it should be processed\n  early whereas on macOS 10.15 it follows lookup order (#2140, #2867).\n- [instancer/mutator] Remove 'DSIG' table if present.\n- [svgPathPen] Don't close path in endPath(), assume open unless closePath() (#2089, #2865).\n\n4.38.0 (released 2022-10-21)\n----------------------------\n\n- [varLib.instancer] Added support for L4 instancing, i.e. moving the default value of\n  an axis while keeping it variable. Thanks Behdad! (#2728, #2861).\n  It's now also possible to restrict an axis min/max values beyond the current default\n  value, e.g. a font wght has min=100, def=400, max=900 and you want a partial VF that\n  only varies between 500 and 700, you can now do that.\n  You can either specify two min/max values (wght=500:700), and the new default will be\n  set to either the minimum or maximum, depending on which one is closer to the current\n  default (e.g. 500 in this case). Or you can specify three values (e.g. wght=500:600:700)\n  to specify the new default value explicitly.\n- [otlLib/featureVars] Set a few Count values so one doesn't need to compile the font\n  to update them (#2860).\n- [varLib.models] Make extrapolation work for 2-master models as well where one master\n  is at the default location (#2843, #2846).\n  Add optional extrapolate=False to normalizeLocation() (#2847, #2849).\n- [varLib.cff] Fixed sub-optimal packing of CFF2 deltas by no longer rounding them to\n  integer (#2838).\n- [scaleUpem] Calculate numShorts in VarData after scale; handle CFF hintmasks (#2840).\n\n4.37.4 (released 2022-09-30)\n----------------------------\n\n- [subset] Keep nameIDs used by CPAL palette entry labels (#2837).\n- [varLib] Avoid negative hmtx values when creating font from variable CFF2 font (#2827).\n- [instancer] Don't prune stat.ElidedFallbackNameID (#2828).\n- [unicodedata] Update Scripts/Blocks to Unicode 15.0 (#2833).\n\n4.37.3 (released 2022-09-20)\n----------------------------\n\n- Fix arguments in calls to (glyf) glyph.draw() and drawPoints(), whereby offset wasn't\n  correctly passed down; this fix also exposed a second bug, where lsb and tsb were not\n  set (#2824, #2825, adobe-type-tools/afdko#1560).\n\n4.37.2 (released 2022-09-15)\n----------------------------\n\n- [subset] Keep CPAL table and don't attempt to prune unused color indices if OT-SVG\n  table is present even if COLR table was subsetted away; OT-SVG may be referencing the\n  CPAL table; for now we assume that's the case (#2814, #2815).\n- [varLib.instancer] Downgrade GPOS/GSUB version if there are no more FeatureVariations\n  after instancing (#2812).\n- [subset] Added ``--no-lazy`` to optionally load fonts eagerly (mostly to ease\n  debugging of table lazy loading, no practical effects) (#2807).\n- [varLib] Avoid building empty COLR.DeltaSetIndexMap with only identity mappings (#2803).\n- [feaLib] Allow multiple value record types (by promoting to the most general format)\n  within the same PairPos subtable; e.g. this allows variable and non variable kerning\n  rules to share the same subtable. This also fixes a bug whereby some kerning pairs\n  would become unreachable while shapiong because of premature subtable splitting (#2772, #2776).\n- [feaLib] Speed up ``VarScalar`` by caching models for recurring master locations (#2798).\n- [feaLib] Optionally cythonize ``feaLib.lexer``, speeds up parsing FEA a bit (#2799).\n- [designspaceLib] Avoid crash when handling unbounded rule conditions (#2797).\n- [post] Don't crash if ``post`` legacy format 1 is malformed/improperly used (#2786)\n- [gvar] Don't be \"lazy\" (load all glyph variations up front) when TTFont.lazy=False (#2771).\n- [TTFont] Added ``normalizeLocation`` method to normalize a location dict from the\n  font's defined axes space (also known as \"user space\") into the normalized (-1..+1)\n  space. It applies ``avar`` mapping if the font contains an ``avar`` table (#2789).\n- [TTVarGlyphSet] Support drawing glyph instances from CFF2 variable glyph set (#2784).\n- [fontBuilder] Do not error when building cmap if there are zero code points (#2785).\n- [varLib.plot] Added ability to plot a variation model and set of accompaning master\n  values corresponding to the model's master locations into a pyplot figure (#2767).\n- [Snippets] Added ``statShape.py`` script to draw statistical shape of a glyph as an\n  ellips (requires pycairo) (baecd88).\n- [TTVarGlyphSet] implement drawPoints natively, avoiding going through\n  SegmentToPointPen (#2778).\n- [TTVarGlyphSet] Fixed bug whereby drawing a composite glyph multiple times, its\n  components would shif; needed an extra copy (#2774).\n\n4.37.1 (released 2022-08-24)\n----------------------------\n\n- [subset] Fixed regression introduced with v4.37.0 while subsetting the VarStore of\n  ``HVAR`` and ``VVAR`` tables, whereby an ``AttributeError: subset_varidxes`` was\n  thrown because an apparently unused import statement (with the side-effect of\n  dynamically binding that ``subset_varidxes`` method to the VarStore class) had been\n  accidentally deleted in an unrelated PR (#2679, #2773).\n- [pens] Added ``cairoPen`` (#2678).\n- [gvar] Read ``gvar`` more lazily by not parsing all of the ``glyf`` table (#2771).\n- [ttGlyphSet] Make ``drawPoints(pointPen)`` method work for CFF fonts as well via\n  adapter pen (#2770).\n\n4.37.0 (released 2022-08-23)\n----------------------------\n\n- [varLib.models] Reverted PR #2717 which added support for \"narrow tents\" in v4.36.0,\n  as it introduced a regression (#2764, #2765). It will be restored in upcoming release\n  once we found a solution to the bug.\n- [cff.specializer] Fixed issue in charstring generalizer with the ``blend`` operator\n  (#2750, #1975).\n- [varLib.models] Added support for extrapolation (#2757).\n- [ttGlyphSet] Ensure the newly added ``_TTVarGlyphSet`` inherits from ``_TTGlyphSet``\n  to keep backward compatibility with existing API (#2762).\n- [kern] Allow compiling legacy kern tables with more than 64k entries (d21cfdede).\n- [visitor] Added new visitor API to traverse tree of objects and dispatch based\n  on the attribute type: cf. ``fontTools.misc.visitor`` and ``fontTools.ttLib.ttVisitor``. Added ``fontTools.ttLib.scaleUpem`` module that uses the latter to\n  change a font's units-per-em and scale all the related fields accordingly (#2718,\n  #2755).\n\n4.36.0 (released 2022-08-17)\n----------------------------\n\n- [varLib.models] Use a simpler model that generates narrower \"tents\" (regions, master\n  supports) whenever possible: specifically when any two axes that actively \"cooperate\"\n  (have masters at non-zero positions for both axes) have a complete set of intermediates.\n  The simpler algorithm produces fewer overlapping regions and behaves better with\n  respect to rounding at the peak positions than the generic solver, always matching\n  intermediate masters exactly, instead of maximally 0.5 units off. This may be useful\n  when 100% metrics compatibility is desired (#2218, #2717).\n- [feaLib] Remove warning when about ``GDEF`` not being built when explicitly not\n  requested; don't build one unconditonally even when not requested (#2744, also works\n  around #2747).\n- [ttFont] ``TTFont.getGlyphSet`` method now supports selecting a location that\n  represents an instance of a variable font (supports both user-scale and normalized\n  axes coordinates via the ``normalized=False`` parameter). Currently this only works\n  for TrueType-flavored variable fonts (#2738).\n\n4.35.0 (released 2022-08-15)\n----------------------------\n\n- [otData/otConverters] Added support for 'biased' PaintSweepGradient start/end angles\n  to match latest COLRv1 spec (#2743).\n- [varLib.instancer] Fixed bug in ``_instantiateFeatureVariations`` when at the same\n  time pinning one axis and restricting the range of a subsequent axis; the wrong axis\n  tag was being used in the latter step (as the records' axisIdx was updated in the\n  preceding step but looked up using the old axes order in the following step) (#2733,\n  #2734).\n- [mtiLib] Pad script tags with space when less than 4 char long (#1727).\n- [merge] Use ``'.'`` instead of ``'#'`` in duplicate glyph names (#2742).\n- [gvar] Added support for lazily loading glyph variations (#2741).\n- [varLib] In ``build_many``, we forgot to pass on ``colr_layer_reuse`` parameter to\n  the ``build`` method (#2730).\n- [svgPathPen] Add a main that prints SVG for input text (6df779fd).\n- [cffLib.width] Fixed off-by-one in optimized values; previous code didn't match the\n  code block above it (2963fa50).\n- [varLib.interpolatable] Support reading .designspace and .glyphs files (via optional\n  ``glyphsLib``).\n- Compile some modules with Cython when available and building/installing fonttools\n  from source: ``varLib.iup`` (35% faster), ``pens.momentsPen`` (makes\n  ``varLib.interpolatable`` 3x faster).\n- [feaLib] Allow features to be built for VF without also building a GDEF table (e.g.\n  only build GSUB); warn when GDEF would be needed but isn't requested (#2705, 2694).\n- [otBase] Fixed ``AttributeError`` when uharfbuzz < 0.23.0 and 'repack' method is\n  missing (32aa8eaf). Use new ``uharfbuzz.repack_with_tag`` when available (since\n  uharfbuzz>=0.30.0), enables table-specific optimizations to be performed during\n  repacking (#2724).\n- [statisticsPen] By default report all glyphs (4139d891). Avoid division-by-zero\n  (52b28f90).\n- [feaLib] Added missing required argument to FeatureLibError exception (#2693)\n- [varLib.merge] Fixed error during error reporting (#2689). Fixed undefined\n  ``NotANone`` variable (#2714).\n\n4.34.4 (released 2022-07-07)\n----------------------------\n\n- Fixed typo in varLib/merger.py that causes NameError merging COLR glyphs\n  containing more than 255 layers (#2685).\n\n4.34.3 (released 2022-07-07)\n----------------------------\n\n- [designspaceLib] Don't make up bad PS names when no STAT data (#2684)\n\n4.34.2 (released 2022-07-06)\n----------------------------\n\n- [varStore/subset] fixed KeyError exception to do with NO_VARIATION_INDEX while\n  subsetting varidxes in GPOS/GDEF (a08140d).\n\n4.34.1 (released 2022-07-06)\n----------------------------\n\n- [instancer] When optimizing HVAR/VVAR VarStore, use_NO_VARIATION_INDEX=False to avoid\n  including NO_VARIATION_INDEX in AdvWidthMap, RsbMap, LsbMap mappings, which would\n  push the VarIdx width to maximum (4bytes), which is not desirable. This also fixes\n  a hard crash when attempting to subset a varfont after it had been partially instanced\n  with use_NO_VARIATION_INDEX=True.\n\n4.34.0 (released 2022-07-06)\n----------------------------\n\n- [instancer] Set RIBBI bits in head and OS/2 table when cutting instances and the\n  subfamily nameID=2 contains strings like 'Italic' or 'Bold' (#2673).\n- [otTraverse] Addded module containing methods for traversing trees of otData tables\n  (#2660).\n- [otTables] Made DeltaSetIndexMap TTX dump less verbose by omitting no-op entries\n  (#2660).\n- [colorLib.builder] Added option to disable PaintColrLayers's reuse of layers from\n  LayerList (#2660).\n- [varLib] Added support for merging multiple master COLRv1 tables into a variable\n  COLR table (#2660, #2328). Base color glyphs of same name in different masters must have\n  identical paint graph structure (incl. number of layers, palette indices, number\n  of color line stops, corresponding paint formats at each level of the graph),\n  but can differ in the variable fields (e.g. PaintSolid.Alpha). PaintVar* tables\n  are produced when this happens and a VarStore/DeltaSetIndexMap is added to the\n  variable COLR table. It is possible for non-default masters to be 'sparse', i.e.\n  omit some of the color glyphs present in the default master.\n- [feaLib] Let the Parser set nameIDs 1 through 6 that were previously reserved (#2675).\n- [varLib.varStore] Support NO_VARIATION_INDEX in optimizer and instancer.\n- [feaLib] Show all missing glyphs at once at end of parsing (#2665).\n- [varLib.iup] Rewrite force-set conditions and limit DP loopback length (#2651).\n  For Noto Sans, IUP time drops from 23s down to 9s, with only a slight size increase\n  in the final font. This basically turns the algorithm from O(n^3) into O(n).\n- [featureVars] Report about missing glyphs in substitution rules (#2654).\n- [mutator/instancer] Added CLI flag to --no-recalc-timestamp (#2649).\n- [SVG] Allow individual SVG documents in SVG OT table to be compressed on uncompressed,\n  and remember that when roundtripping to/from ttx. The SVG.docList is now a list\n  of SVGDocument namedtuple-like dataclass containing an extra ``compressed`` field,\n  and no longer a bare 3-tuple (#2645).\n- [designspaceLib] Check for descriptor types with hasattr() to allow custom classes\n  that don't inherit the default descriptors (#2634).\n- [subset] Enable sharing across subtables of extension lookups for harfbuzz packing\n  (#2626). Updated how table packing falls back to fontTools from harfbuzz (#2668).\n- [subset] Updated default feature tags following current Harfbuzz (#2637).\n- [svgLib] Fixed regex for real number to support e.g. 1e-4 in addition to 1.0e-4.\n  Support parsing negative rx, ry on arc commands (#2596, #2611).\n- [subset] Fixed subsetting SinglePosFormat2 when ValueFormat=0 (#2603).\n\n4.33.3 (released 2022-04-26)\n----------------------------\n\n- [designspaceLib] Fixed typo in ``deepcopyExceptFonts`` method, preventing font\n  references to be transferred (#2600). Fixed another typo in the name of ``Range``\n  dataclass's ``__post_init__`` magic method (#2597).\n\n4.33.2 (released 2022-04-22)\n----------------------------\n\n- [otBase] Make logging less verbose when harfbuzz fails to serialize. Do not exit\n  at the first failure but continue attempting to fix offset overflow error using\n  the pure-python serializer even when the ``USE_HARFBUZZ_REPACKER`` option was\n  explicitly set to ``True``. This is normal with fonts with relatively large\n  tables, at least until hb.repack implements proper table splitting.\n\n4.33.1 (released 2022-04-22)\n----------------------------\n\n- [otlLib] Put back the ``FONTTOOLS_GPOS_COMPACT_MODE`` environment variable to fix\n  regression in ufo2ft (and thus fontmake) introduced with v4.33.0 (#2592, #2593).\n  This is deprecated and will be removed one ufo2ft gets updated to use the new\n  config setup.\n\n4.33.0 (released 2022-04-21)\n----------------------------\n\n- [OS/2 / merge] Automatically recalculate ``OS/2.xAvgCharWidth`` after merging\n  fonts with ``fontTools.merge`` (#2591, #2538).\n- [misc/config] Added ``fontTools.misc.configTools`` module, a generic configuration\n  system (#2416, #2439).\n  Added ``fontTools.config`` module, a fontTools-specific configuration\n  system using ``configTools`` above.\n  Attached a ``Config`` object to ``TTFont``.\n- [otlLib] Replaced environment variable for GPOS compression level with an\n  equivalent option using the new config system.\n- [designspaceLib] Incremented format version to 5.0 (#2436).\n  Added discrete axes, variable fonts, STAT information, either design- or\n  user-space location on instances.\n  Added ``fontTools.designspaceLib.split`` module to split a designspace\n  into sub-spaces that interpolate and that represent the variable fonts\n  listed in the document.\n  Made instance names optional and allow computing them from STAT data instead.\n  Added ``fontTools.designspaceLib.statNames`` module.\n  Allow instances to have the same location as a previously defined STAT label.\n  Deprecated some attributes:\n  ``SourceDescriptor``: ``copyLib``, ``copyInfo``, ``copyGroups``, ``copyFeatures``.\n  ``InstanceDescriptor``: ``kerning``, ``info``; ``glyphs``: use rules or sparse\n  sources.\n  For both, ``location``: use the more explicit designLocation.\n  Note: all are soft deprecations and existing code should keep working.\n  Updated documentation for Python methods and the XML format.\n- [varLib] Added ``build_many`` to build several variable fonts from a single\n  designspace document (#2436).\n  Added ``fontTools.varLib.stat`` module to build STAT tables from a designspace\n  document.\n- [otBase] Try to use the Harfbuzz Repacker for packing GSUB/GPOS tables when\n  ``uharfbuzz`` python bindings are available (#2552). Disable it by setting the\n  \"fontTools.ttLib.tables.otBase:USE_HARFBUZZ_REPACKER\" config option to ``False``.\n  If the option is set explicitly to ``True`` but ``uharfbuzz`` can't be imported\n  or fails to serialize for any reasons, an error will be raised (ImportError or\n  uharfbuzz errors).\n- [CFF/T2] Ensure that ``pen.closePath()`` gets called for CFF2 charstrings (#2577).\n  Handle implicit CFF2 closePath within ``T2OutlineExtractor`` (#2580).\n\n4.32.0 (released 2022-04-08)\n----------------------------\n\n- [otlLib] Disable GPOS7 optimization to work around bug in Apple CoreText.\n  Always force Chaining GPOS8 for now (#2540).\n- [glifLib] Added ``outputImpliedClosingLine=False`` parameter to ``Glyph.draw()``,\n  to control behaviour of ``PointToSegmentPen`` (6b4e2e7).\n- [varLib.interpolatable] Check for wrong contour starting point (#2571).\n- [cffLib] Remove leftover ``GlobalState`` class and fix calls to ``TopDictIndex()``\n  (#2569, #2570).\n- [instancer] Clear ``AxisValueArray`` if it is empty after instantiating (#2563).\n\n4.31.2 (released 2022-03-22)\n----------------------------\n\n- [varLib] fix instantiation of GPOS SinglePos values (#2555).\n\n4.31.1 (released 2022-03-18)\n----------------------------\n\n- [subset] fix subsetting OT-SVG when glyph id attribute is on the root ``<svg>``\n  element (#2553).\n\n4.31.0 (released 2022-03-18)\n----------------------------\n\n- [ttCollection] Fixed 'ResourceWarning: unclosed file' warning (#2549).\n- [varLib.merger] Handle merging SinglePos with valueformat=0 (#2550).\n- [ttFont] Update glyf's glyphOrder when calling TTFont.setGlyphOrder() (#2544).\n- [ttFont] Added ``ensureDecompiled`` method to load all tables irrespective\n  of the ``lazy`` attribute (#2551).\n- [otBase] Added ``iterSubTable`` method to iterate over BaseTable's children of\n  type BaseTable; useful for traversing a tree of otTables (#2551).\n\n4.30.0 (released 2022-03-10)\n----------------------------\n\n- [varLib] Added debug logger showing the glyph name for which ``gvar`` is built (#2542).\n- [varLib.errors] Fixed undefined names in ``FoundANone`` and ``UnsupportedFormat``\n  exceptions (ac4d5611).\n- [otlLib.builder] Added ``windowsNames`` and ``macNames`` (bool) parameters to the\n  ``buildStatTabe`` function, so that one can select whether to only add one or both\n  of the two sets (#2528).\n- [t1Lib] Added the ability to recreate PostScript stream (#2504).\n- [name] Added ``getFirstDebugName``, ``getBest{Family,SubFamily,Full}Name`` methods (#2526).\n\n4.29.1 (released 2022-02-01)\n----------------------------\n\n- [colorLib] Fixed rounding issue with radial gradient's start/end circles inside\n  one another (#2521).\n- [freetypePen] Handle rotate/skew transform when auto-computing width/height of the\n  buffer; raise PenError wen missing moveTo (#2517)\n\n4.29.0 (released 2022-01-24)\n----------------------------\n\n- [ufoLib] Fixed illegal characters and expanded reserved filenames (#2506).\n- [COLRv1] Don't emit useless PaintColrLayers of lenght=1 in LayerListBuilder (#2513).\n- [ttx] Removed legacy ``waitForKeyPress`` method on Windows (#2509).\n- [pens] Added FreeTypePen that uses ``freetype-py`` and the pen protocol for\n  rasterizating outline paths (#2494).\n- [unicodedata] Updated the script direction list to Unicode 14.0 (#2484).\n  Bumped unicodedata2 dependency to 14.0 (#2499).\n- [psLib] Fixed type of ``fontName`` in ``suckfont`` (#2496).\n\n4.28.5 (released 2021-12-19)\n----------------------------\n\n- [svgPathPen] Continuation of #2471: make sure all occurrences of ``str()`` are now\n  replaced with user-defined ``ntos`` callable.\n- [merge] Refactored code into submodules, plus several bugfixes and improvements:\n  fixed duplicate-glyph-resolution GSUB-lookup generation code; use tolerance in glyph\n  comparison for empty glyph's width; ignore space of default ignorable glyphs;\n  downgrade duplicates-resolution missing-GSUB from assert to warn; added --drop-tables\n  option (#2473, #2475, #2476).\n\n4.28.4 (released 2021-12-15)\n----------------------------\n\n- [merge] Merge GDEF marksets in Lookups properly (#2474).\n- [feaLib] Have ``fontTools feaLib`` script exit with error code when build fails (#2459)\n- [svgPathPen] Added ``ntos`` option to customize number formatting (e.g. rounding) (#2471).\n- [subset] Speed up subsetting of large CFF fonts (#2467).\n- [otTables] Speculatively promote lookups to extension to speed up compilation. If the\n  offset to lookup N is too big to fit in a ushort, the offset to lookup N+1 is going to\n  be too big as well, so we promote to extension all lookups from lookup N onwards (#2465).\n\n4.28.3 (released 2021-12-03)\n----------------------------\n\n- [subset] Fixed bug while subsetting ``COLR`` table, whereby incomplete layer records\n  pointing to missing glyphs were being retained leading to ``struct.error`` upon\n  compiling. Make it so that ``glyf`` glyph closure, which follows the ``COLR`` glyph\n  closure, does not influence the ``COLR`` table subsetting (#2461, #2462).\n- [docs] Fully document the ``cmap`` and ``glyf`` tables (#2454, #2457).\n- [colorLib.unbuilder] Fixed CLI by deleting no longer existing parameter (180bb1867).\n\n4.28.2 (released 2021-11-22)\n----------------------------\n\n- [otlLib] Remove duplicates when building coverage (#2433).\n- [docs] Add interrogate configuration (#2443).\n- [docs] Remove comment about missing “start” optional argument to ``calcChecksum`` (#2448).\n- [cu2qu/cli] Adapt to the latest ufoLib2.\n- [subset] Support subsetting SVG table and remove it from the list of  drop by default tables (#534).\n- [subset] add ``--pretty-svg`` option to pretty print SVG table contents (#2452).\n- [merge] Support merging ``CFF`` tables (CID-keyed ``CFF`` is still not supported) (#2447).\n- [merge] Support ``--output-file`` (#2447).\n- [docs] Split table docs into individual pages (#2444).\n- [feaLib] Forbid empty classes (#2446).\n- [docs] Improve documentation for ``fontTools.ttLib.ttFont`` (#2442).\n\n4.28.1 (released 2021-11-08)\n----------------------------\n\n- [subset] Fixed AttributeError while traversing a color glyph's Paint graph when there is no\n  LayerList, which is optional (#2441).\n\n4.28.0 (released 2021-11-05)\n----------------------------\n\n- Dropped support for EOL Python 3.6, require Python 3.7 (#2417).\n- [ufoLib/glifLib] Make filename-clash checks faster by using a set instead of a list (#2422).\n- [subset] Don't crash if optional ClipList and LayerList are ``None`` (empty) (#2424, 2439).\n- [OT-SVG] Removed support for old deprecated version 1 and embedded color palettes,\n  which were never officially part of the OpenType SVG spec. Upon compile, reuse offsets\n  to SVG documents that are identical (#2430).\n- [feaLib] Added support for Variable Feature File syntax. This is experimental and subject\n  to change until it is finalized in the Adobe FEA spec (#2432).\n- [unicodedata] Update Scripts/ScriptExtensions/Blocks to UnicodeData 14.0 (#2437).\n\n4.27.1 (released 2021-09-23)\n----------------------------\n\n- [otlLib] Fixed error when chained contextual lookup builder overflows (#2404, #2411).\n- [bezierTools] Fixed two floating-point bugs: one when computing `t` for a point\n  lying on an almost horizontal/vertical line; another when computing the intersection\n  point between a curve and a line (#2413).\n\n4.27.0 (released 2021-09-14)\n----------------------------\n\n- [ttLib/otTables] Cleaned up virtual GID handling: allow virtual GIDs in ``Coverage``\n  and ``ClassDef`` readers; removed unused ``allowVID`` argument from ``TTFont``\n  constructor, and ``requireReal`` argument in ``TTFont.getGlyphID`` method.\n  Make ``TTFont.setGlyphOrder`` clear reverse glyphOrder map, and assume ``glyphOrder``\n  internal attribute is never modified outside setGlyphOrder; added ``TTFont.getGlyphNameMany``\n  and ``getGlyphIDMany`` (#1536, #1654, #2334, #2398).\n- [py23] Dropped internal use of ``fontTools.py23`` module to fix deprecation warnings\n  in client code that imports from fontTools (#2234, #2399, #2400).\n- [subset] Fix subsetting COLRv1 clip boxes when font is loaded lazily (#2408).\n\n4.26.2 (released 2021-08-09)\n----------------------------\n\n- [otTables] Added missing ``CompositeMode.PLUS`` operator (#2390).\n\n4.26.1 (released 2021-08-03)\n----------------------------\n\n- [transform] Added ``transformVector`` and ``transformVectors`` methods to the\n  ``Transform`` class. Similar to ``transformPoint`` but ignore the translation\n  part (#2386).\n\n4.26.0 (released 2021-08-03)\n----------------------------\n\n- [xmlWriter] Default to ``\"\\n\"`` for ``newlinestr`` instead of platform-specific\n  ``os.linesep`` (#2384).\n- [otData] Define COLRv1 ClipList and ClipBox (#2379).\n- [removeOverlaps/instancer] Added --ignore-overlap-errors option to work around\n  Skia PathOps.Simplify bug (#2382, #2363, google/fonts#3365).\n- NOTE: This will be the last version to support Python 3.6. FontTools will require\n  Python 3.7 or above from the next release (#2350)\n\n4.25.2 (released 2021-07-26)\n----------------------------\n\n- [COLRv1] Various changes to sync with the latest CORLv1 draft spec. In particular:\n  define COLR.VarIndexMap, remove/inline ColorIndex struct, add VarIndexBase to ``PaintVar*`` tables (#2372);\n  add reduced-precicion specialized transform Paints;\n  define Angle as fraction of half circle encoded as F2Dot14;\n  use FWORD (int16) for all Paint center coordinates;\n  change PaintTransform to have an offset to Affine2x3;\n- [ttLib] when importing XML, only set sfntVersion if the font has no reader and is empty (#2376)\n\n4.25.1 (released 2021-07-16)\n----------------------------\n\n- [ttGlyphPen] Fixed bug in ``TTGlyphPointPen``, whereby open contours (i.e. starting\n  with segmentType \"move\") would throw ``NotImplementedError``. They are now treated\n  as if they are closed, like with the ``TTGlyphPen`` (#2364, #2366).\n\n4.25.0 (released 2021-07-05)\n----------------------------\n\n- [tfmLib] Added new library for parsing TeX Font Metric (TFM) files (#2354).\n- [TupleVariation] Make shared tuples order deterministic on python < 3.7 where\n  Counter (subclass of dict) doesn't remember insertion order (#2351, #2353).\n- [otData] Renamed COLRv1 structs to remove 'v1' suffix and match the updated draft\n  spec: 'LayerV1List' -> 'LayerList', 'BaseGlyphV1List' -> 'BaseGlyphList',\n  'BaseGlyphV1Record' -> 'BaseGlyphPaintRecord' (#2346).\n  Added 8 new ``PaintScale*`` tables: with/without centers, uniform vs non-uniform.\n  Added ``*AroundCenter`` variants to ``PaintRotate`` and ``PaintSkew``: the default\n  versions no longer have centerX/Y, but default to origin.\n  ``PaintRotate``, ``PaintSkew`` and ``PaintComposite`` formats were re-numbered.\n  NOTE: these are breaking changes; clients using the experimental COLRv1 API will\n  have to be updated (#2348).\n- [pointPens] Allow ``GuessSmoothPointPen`` to accept a tolerance. Fixed call to\n  ``math.atan2`` with x/y parameters inverted. Sync the code with fontPens (#2344).\n- [post] Fixed parsing ``post`` table format 2.0 when it contains extra garbage\n  at the end of the stringData array (#2314).\n- [subset] drop empty features unless 'size' with FeatureParams table (#2324).\n- [otlLib] Added ``otlLib.optimize`` module; added GPOS compaction algorithm.\n  The compaction can be run on existing fonts with ``fonttools otlLib.optimize``\n  or using the snippet ``compact_gpos.py``. There's experimental support for\n  compacting fonts at compilation time using an environment variable, but that\n  might be removed later (#2326).\n\n4.24.4 (released 2021-05-25)\n----------------------------\n\n- [subset/instancer] Fixed ``AttributeError`` when instantiating a VF that\n  contains GPOS ValueRecords with ``Device`` tables but without the respective\n  non-Device values (e.g. ``XAdvDevice`` without ``XAdvance``). When not\n  explicitly set, the latter are assumed to be 0 (#2323).\n\n4.24.3 (released 2021-05-20)\n----------------------------\n\n- [otTables] Fixed ``AttributeError`` in methods that split LigatureSubst,\n  MultipleSubst and AlternateSubst subtables when an offset overflow occurs.\n  The ``Format`` attribute was removed in v4.22.0 (#2319).\n\n4.24.2 (released 2021-05-20)\n----------------------------\n\n- [ttGlyphPen] Fixed typing annotation of TTGlyphPen glyphSet parameter (#2315).\n- Fixed two instances of DeprecationWarning: invalid escape sequence (#2311).\n\n4.24.1 (released 2021-05-20)\n----------------------------\n\n- [subset] Fixed AttributeError when SinglePos subtable has None Value (ValueFormat 0)\n  (#2312, #2313).\n\n4.24.0 (released 2021-05-17)\n----------------------------\n\n- [pens] Add ``ttGlyphPen.TTGlyphPointPen`` similar to ``TTGlyphPen`` (#2205).\n\n4.23.1 (released 2021-05-14)\n----------------------------\n\n- [subset] Fix ``KeyError`` after subsetting ``COLR`` table that initially contains\n  both v0 and v1 color glyphs when the subset only requested v1 glyphs; we were\n  not pruning the v0 portion of the table (#2308).\n- [colorLib] Set ``LayerV1List`` attribute to ``None`` when empty, it's optional\n  in CORLv1 (#2308).\n\n4.23.0 (released 2021-05-13)\n----------------------------\n\n- [designspaceLib] Allow to use ``\\\\UNC`` absolute paths on Windows (#2299, #2306).\n- [varLib.merger] Fixed bug where ``VarLibMergeError`` was raised with incorrect\n  parameters (#2300).\n- [feaLib] Allow substituting a glyph class with ``NULL`` to delete multiple glyphs\n  (#2303).\n- [glyf] Fixed ``NameError`` exception in ``getPhantomPoints`` (#2295, #2305).\n- [removeOverlaps] Retry pathops.simplify after rounding path coordinates to integers\n  if it fails the first time using floats, to work around a rare and hard to debug\n  Skia bug (#2288).\n- [varLib] Added support for building, reading, writing and optimizing 32-bit\n  ``ItemVariationStore`` as used in COLRv1 table (#2285).\n- [otBase/otConverters] Add array readers/writers for int types (#2285).\n- [feaLib] Allow more than one lookahead glyph/class in contextual positioning with\n  \"value at end\" (#2293, #2294).\n- [COLRv1] Default varIdx should be 0xFFFFFFFF (#2297, #2298).\n- [pens] Make RecordingPointPen actually pass on identifiers; replace asserts with\n  explicit ``PenError`` exception (#2284).\n- [mutator] Round lsb for CF2 fonts as well (#2286).\n\n4.22.1 (released 2021-04-26)\n----------------------------\n\n- [feaLib] Skip references to named lookups if the lookup block definition\n  is empty, similarly to makeotf. This also fixes an ``AttributeError`` while\n  generating ``aalt`` feature (#2276, #2277).\n- [subset] Fixed bug with ``--no-hinting`` implementation for Device tables (#2272,\n  #2275). The previous code was alwyas dropping Device tables if no-hinting was\n  requested, but some Device tables (DeltaFormat=0x8000) are also used to encode\n  variation indices and need to be retained.\n- [otBase] Fixed bug in getting the ValueRecordSize when decompiling ``MVAR``\n  table with ``lazy=True`` (#2273, #2274).\n- [varLib/glyf/gvar] Optimized and simplified ``GlyphCoordinates`` and\n  ``TupleVariation`` classes, use ``bytearray`` where possible, refactored\n  phantom-points calculations. We measured about 30% speedup in total time\n  of loading master ttfs, building gvar, and saving (#2261, #2266).\n- [subset] Fixed ``AssertionError`` while pruning unused CPAL palettes when\n  ``0xFFFF`` is present (#2257, #2259).\n\n4.22.0 (released 2021-04-01)\n----------------------------\n\n- [ttLib] Remove .Format from Coverage, ClassDef, SingleSubst, LigatureSubst,\n  AlternateSubst, MultipleSubst (#2238).\n  ATTENTION: This will change your TTX dumps!\n- [misc.arrayTools] move Vector to its own submodule, and rewrite as a tuple\n  subclass (#2201).\n- [docs] Added a terminology section for varLib (#2209).\n- [varLib] Move rounding to VariationModel, to avoid error accumulation from\n  multiple deltas (#2214)\n- [varLib] Explain merge errors in more human-friendly terms (#2223, #2226)\n- [otlLib] Correct some documentation (#2225)\n- [varLib/otlLib] Allow merging into VariationFont without first saving GPOS\n  PairPos2 (#2229)\n- [subset] Improve PairPosFormat2 subsetting (#2221)\n- [ttLib] TTFont.save: create file on disk as late as possible (#2253)\n- [cffLib] Add missing CFF2 dict operators LanguageGroup and ExpansionFactor\n  (#2249)\n  ATTENTION: This will change your TTX dumps!\n\n4.21.1 (released 2021-02-26)\n----------------------------\n\n- [pens] Reverted breaking change that turned ``AbstractPen`` and ``AbstractPointPen``\n  into abstract base classes (#2164, #2198).\n\n4.21.0 (released 2021-02-26)\n----------------------------\n\n- [feaLib] Indent anchor statements in ``asFea()`` to make them more legible and\n  diff-able (#2193).\n- [pens] Turn ``AbstractPen`` and ``AbstractPointPen`` into abstract base classes\n  (#2164).\n- [feaLib] Added support for parsing and building ``STAT`` table from AFDKO feature\n  files (#2039).\n- [instancer] Added option to update name table of generated instance using ``STAT``\n  table's axis values (#2189).\n- [bezierTools] Added functions to compute bezier point-at-time, as well as line-line,\n  curve-line and curve-curve intersections (#2192).\n\n4.20.0 (released 2021-02-15)\n----------------------------\n\n- [COLRv1] Added ``unbuildColrV1`` to deconstruct COLRv1 otTables to raw json-able\n  data structure; it does the reverse of ``buildColrV1`` (#2171).\n- [feaLib] Allow ``sub X by NULL`` sequence to delete a glyph (#2170).\n- [arrayTools] Fixed ``Vector`` division (#2173).\n- [COLRv1] Define new ``PaintSweepGradient`` (#2172).\n- [otTables] Moved ``Paint.Format`` enum class outside of ``Paint`` class definition,\n  now named ``PaintFormat``. It was clashing with paint instance ``Format`` attribute\n  and thus was breaking lazy load of COLR table which relies on magic ``__getattr__``\n  (#2175).\n- [COLRv1] Replace hand-coded builder functions with otData-driven dynamic\n  implementation (#2181).\n- [COLRv1] Define additional static (non-variable) Paint formats (#2181).\n- [subset] Added support for subsetting COLR v1 and CPAL tables (#2174, #2177).\n- [fontBuilder] Allow ``setupFvar`` to optionally take ``designspaceLib.AxisDescriptor``\n  objects. Added new ``setupAvar`` method. Support localised names for axes and\n  named instances (#2185).\n\n4.19.1 (released 2021-01-28)\n----------------------------\n\n- [woff2] An initial off-curve point with an overlap flag now stays an off-curve\n  point after compression.\n\n4.19.0 (released 2021-01-25)\n----------------------------\n\n- [codecs] Handle ``errors`` parameter different from 'strict' for the custom\n  extended mac encodings (#2137, #2132).\n- [featureVars] Raise better error message when a script is missing the required\n  default language system (#2154).\n- [COLRv1] Avoid abrupt change caused by rounding ``PaintRadialGradient.c0`` when\n  the start circle almost touches the end circle's perimeter (#2148).\n- [COLRv1] Support building unlimited lists of paints as 255-ary trees of\n  ``PaintColrLayers`` tables (#2153).\n- [subset] Prune redundant format-12 cmap subtables when all non-BMP characters\n  are dropped (#2146).\n- [basePen] Raise ``MissingComponentError`` instead of bare ``KeyError`` when a\n  referenced component is missing (#2145).\n\n4.18.2 (released 2020-12-16)\n----------------------------\n\n- [COLRv1] Implemented ``PaintTranslate`` paint format (#2129).\n- [varLib.cff] Fixed unbound local variable error (#1787).\n- [otlLib] Don't crash when creating OpenType class definitions if some glyphs\n  occur more than once (#2125).\n\n4.18.1 (released 2020-12-09)\n----------------------------\n\n- [colorLib] Speed optimization for ``LayerV1ListBuilder`` (#2119).\n- [mutator] Fixed missing tab in ``interpolate_cff2_metrics`` (0957dc7a).\n\n4.18.0 (released 2020-12-04)\n----------------------------\n\n- [COLRv1] Update to latest draft: added ``PaintRotate`` and ``PaintSkew`` (#2118).\n- [woff2] Support new ``brotlicffi`` bindings for PyPy (#2117).\n- [glifLib] Added ``expectContentsFile`` parameter to ``GlyphSet``, for use when\n  reading existing UFOs, to comply with the specification stating that a\n  ``contents.plist`` file must exist in a glyph set (#2114).\n- [subset] Allow ``LangSys`` tags in ``--layout-scripts`` option (#2112). For example:\n  ``--layout-scripts=arab.dflt,arab.URD,latn``; this will keep ``DefaultLangSys``\n  and ``URD`` language for ``arab`` script, and all languages for ``latn`` script.\n- [varLib.interpolatable] Allow UFOs to be checked; report open paths, non existant\n  glyphs; add a ``--json`` option to produce a machine-readable list of\n  incompatibilities\n- [pens] Added ``QuartzPen`` to create ``CGPath`` from glyph outlines on macOS.\n  Requires pyobjc (#2107).\n- [feaLib] You can export ``FONTTOOLS_LOOKUP_DEBUGGING=1`` to enable feature file\n  debugging info stored in ``Debg`` table (#2106).\n- [otlLib] Build more efficient format 1 and format 2 contextual lookups whenever\n  possible (#2101).\n\n4.17.1 (released 2020-11-16)\n----------------------------\n\n- [colorLib] Fixed regression in 4.17.0 when building COLR v0 table; when color\n  layers are stored in UFO lib plist, we can't distinguish tuples from lists so\n  we need to accept either types (e5439eb9, googlefonts/ufo2ft/issues#426).\n\n4.17.0 (released 2020-11-12)\n----------------------------\n\n- [colorLib/otData] Updated to latest draft ``COLR`` v1 spec (#2092).\n- [svgLib] Fixed parsing error when arc commands' boolean flags are not separated\n  by space or comma (#2094).\n- [varLib] Interpret empty non-default glyphs as 'missing', if the default glyph is\n  not empty (#2082).\n- [feaLib.builder] Only stash lookup location for ``Debg`` if ``Builder.buildLookups_``\n  has cooperated (#2065, #2067).\n- [varLib] Fixed bug in VarStore optimizer (#2073, #2083).\n- [varLib] Add designspace lib key for custom feavar feature tag (#2080).\n- Add HashPointPen adapted from psautohint. With this pen, a hash value of a glyph\n  can be computed, which can later be used to detect glyph changes (#2005).\n\n4.16.1 (released 2020-10-05)\n----------------------------\n\n- [varLib.instancer] Fixed ``TypeError`` exception when instantiating a VF with\n  a GSUB table 1.1 in which ``FeatureVariations`` attribute is present but set to\n  ``None`` -- indicating that optional ``FeatureVariations`` is missing (#2077).\n- [glifLib] Make ``x`` and ``y`` attributes of the ``point`` element required\n  even when validation is turned off, and raise a meaningful ``GlifLibError``\n  message when that happens (#2075).\n\n4.16.0 (released 2020-09-30)\n----------------------------\n\n- [removeOverlaps] Added new module and ``removeOverlaps`` function that merges\n  overlapping contours and components in TrueType glyphs. It requires the\n  `skia-pathops <https://github.com/fonttools/skia-pathops>`__ module.\n  Note that removing overlaps invalidates the TrueType hinting (#2068).\n- [varLib.instancer] Added ``--remove-overlaps`` command-line option.\n  The ``overlap`` option in ``instantiateVariableFont`` now takes an ``OverlapMode``\n  enum: 0: KEEP_AND_DONT_SET_FLAGS, 1: KEEP_AND_SET_FLAGS (default), and 2: REMOVE.\n  The latter is equivalent to calling ``removeOverlaps`` on the generated static\n  instance. The option continues to accept ``bool`` value for backward compatibility.\n\n\n4.15.0 (released 2020-09-21)\n----------------------------\n\n- [plistlib] Added typing annotations to plistlib module. Set up mypy static\n  typechecker to run automatically on CI (#2061).\n- [ttLib] Implement private ``Debg`` table, a reverse-DNS namespaced JSON dict.\n- [feaLib] Optionally add an entry into the ``Debg`` table with the original\n  lookup name (if any), feature name / script / language combination (if any),\n  and original source filename and line location. Annotate the ttx output for\n  a lookup with the information from the Debg table (#2052).\n- [sfnt] Disabled checksum checking by default in ``SFNTReader`` (#2058).\n- [Docs] Document ``mtiLib`` module (#2027).\n- [varLib.interpolatable] Added checks for contour node count and operation type\n  of each node (#2054).\n- [ttLib] Added API to register custom table packer/unpacker classes (#2055).\n\n4.14.0 (released 2020-08-19)\n----------------------------\n\n- [feaLib] Allow anonymous classes in LookupFlags definitions (#2037).\n- [Docs] Better document DesignSpace rules processing order (#2041).\n- [ttLib] Fixed 21-year old bug in ``maxp.maxComponentDepth`` calculation (#2044,\n  #2045).\n- [varLib.models] Fixed misspelled argument name in CLI entry point (81d0042a).\n- [subset] When subsetting GSUB v1.1, fixed TypeError by checking whether the\n  optional FeatureVariations table is present (e63ecc5b).\n- [Snippets] Added snippet to show how to decompose glyphs in a TTF (#2030).\n- [otlLib] Generate GSUB type 5 and GPOS type 7 contextual lookups where appropriate\n  (#2016).\n\n4.13.0 (released 2020-07-10)\n----------------------------\n\n- [feaLib/otlLib] Moved lookup subtable builders from feaLib to otlLib; refactored\n  some common code (#2004, #2007).\n- [docs] Document otlLib module (#2009).\n- [glifLib] Fixed bug with some UFO .glif filenames clashing on case-insensitive\n  filesystems (#2001, #2002).\n- [colorLib] Updated COLRv1 implementation following changes in the draft spec:\n  (#2008, googlefonts/colr-gradients-spec#24).\n\n4.12.1 (released 2020-06-16)\n----------------------------\n\n- [_n_a_m_e] Fixed error in ``addMultilingualName`` with one-character names.\n  Only attempt to recovered malformed UTF-16 data from a ``bytes`` string,\n  not from unicode ``str`` (#1997, #1998).\n\n4.12.0 (released 2020-06-09)\n----------------------------\n\n- [otlLib/varLib] Ensure that the ``AxisNameID`` in the ``STAT`` and ``fvar``\n  tables is grater than 255 as per OpenType spec (#1985, #1986).\n- [docs] Document more modules in ``fontTools.misc`` package: ``filenames``,\n  ``fixedTools``, ``intTools``, ``loggingTools``, ``macCreatorType``, ``macRes``,\n  ``plistlib`` (#1981).\n- [OS/2] Don't calculate whole sets of unicode codepoints, use faster and more memory\n  efficient ranges and bisect lookups (#1984).\n- [voltLib] Support writing back abstract syntax tree as VOLT data (#1983).\n- [voltLib] Accept DO_NOT_TOUCH_CMAP keyword (#1987).\n- [subset/merge] Fixed a namespace clash involving a private helper class (#1955).\n\n4.11.0 (released 2020-05-28)\n----------------------------\n\n- [feaLib] Introduced ``includeDir`` parameter on Parser and IncludingLexer to\n  explicitly specify the directory to search when ``include()`` statements are\n  encountered (#1973).\n- [ufoLib] Silently delete duplicate glyphs within the same kerning group when reading\n  groups (#1970).\n- [ttLib] Set version of COLR table when decompiling COLRv1 (commit 9d8a7e2).\n\n4.10.2 (released 2020-05-20)\n----------------------------\n\n- [sfnt] Fixed ``NameError: SimpleNamespace`` while reading TTC header. The regression\n  was introduced with 4.10.1 after removing ``py23`` star import.\n\n4.10.1 (released 2020-05-19)\n----------------------------\n\n- [sfnt] Make ``SFNTReader`` pickleable even when TTFont is loaded with lazy=True\n  option and thus keeps a reference to an external file (#1962, #1967).\n- [feaLib.ast] Restore backward compatibility (broken in 4.10 with #1905) for\n  ``ChainContextPosStatement`` and ``ChainContextSubstStatement`` classes.\n  Make them accept either list of lookups or list of lists of lookups (#1961).\n- [docs] Document some modules in ``fontTools.misc`` package: ``arrayTools``,\n  ``bezierTools`` ``cliTools`` and ``eexec`` (#1956).\n- [ttLib._n_a_m_e] Fixed ``findMultilingualName()`` when name record's ``string`` is\n  encoded as bytes sequence (#1963).\n\n4.10.0 (released 2020-05-15)\n----------------------------\n\n- [varLib] Allow feature variations to be active across the entire space (#1957).\n- [ufoLib] Added support for ``formatVersionMinor`` in UFO's ``fontinfo.plist`` and for\n  ``formatMinor`` attribute in GLIF file as discussed in unified-font-object/ufo-spec#78.\n  No changes in reading or writing UFOs until an upcoming (non-0) minor update of the\n  UFO specification is published (#1786).\n- [merge] Fixed merging fonts with different versions of ``OS/2`` table (#1865, #1952).\n- [subset] Fixed ``AttributeError`` while subsetting ``ContextSubst`` and ``ContextPos``\n  Format 3 subtable (#1879, #1944).\n- [ttLib.table._m_e_t_a] if data happens to be ascii, emit comment in TTX (#1938).\n- [feaLib] Support multiple lookups per glyph position (#1905).\n- [psCharStrings] Use inheritance to avoid repeated code in initializer (#1932).\n- [Doc] Improved documentation for the following modules: ``afmLib`` (#1933), ``agl``\n  (#1934), ``cffLib`` (#1935), ``cu2qu`` (#1937), ``encodings`` (#1940), ``feaLib``\n  (#1941), ``merge`` (#1949).\n- [Doc] Split off developer-centric info to new page, making front page of docs more\n  user-focused. List all utilities and sub-modules with brief descriptions.\n  Make README more concise and focused (#1914).\n- [otlLib] Add function to build STAT table from high-level description (#1926).\n- [ttLib._n_a_m_e] Add ``findMultilingualName()`` method (#1921).\n- [unicodedata] Update ``RTL_SCRIPTS`` for Unicode 13.0 (#1925).\n- [gvar] Sort ``gvar`` XML output by glyph name, not glyph order (#1907, #1908).\n- [Doc] Added help options to ``fonttools`` command line tool (#1913, #1920).\n  Ensure all fonttools CLI tools have help documentation (#1948).\n- [ufoLib] Only write fontinfo.plist when there actually is content (#1911).\n\n4.9.0 (released 2020-04-29)\n---------------------------\n\n- [subset] Fixed subsetting of FeatureVariations table. The subsetter no longer drops\n  FeatureVariationRecords that have empty substitutions as that will keep the search\n  going and thus change the logic. It will only drop empty records that occur at the\n  end of the FeatureVariationRecords array (#1881).\n- [subset] Remove FeatureVariations table and downgrade GSUB/GPOS to version 0x10000\n  when FeatureVariations contain no FeatureVariationRecords after subsetting (#1903).\n- [agl] Add support for legacy Adobe Glyph List of glyph names in ``fontTools.agl``\n  (#1895).\n- [feaLib] Ignore superfluous script statements (#1883).\n- [feaLib] Hide traceback by default on ``fonttools feaLib`` command line.\n  Use ``--traceback`` option to show (#1898).\n- [feaLib] Check lookup index in chaining sub/pos lookups and print better error\n  message (#1896, #1897).\n- [feaLib] Fix building chained alt substitutions (#1902).\n- [Doc] Included all fontTools modules in the sphinx-generated documentation, and\n  published it to ReadTheDocs for continuous documentation of the fontTools project\n  (#1333). Check it out at https://fonttools.readthedocs.io/. Thanks to Chris Simpkins!\n- [transform] The ``Transform`` class is now subclass of ``typing.NamedTuple``. No\n  change in functionality (#1904).\n\n\n4.8.1 (released 2020-04-17)\n---------------------------\n\n- [feaLib] Fixed ``AttributeError: 'NoneType' has no attribute 'getAlternateGlyphs'``\n  when ``aalt`` feature references a chain contextual substitution lookup\n  (googlefonts/fontmake#648, #1878).\n\n4.8.0 (released 2020-04-16)\n---------------------------\n\n- [feaLib] If Parser is initialized without a ``glyphNames`` parameter, it cannot\n  distinguish between a glyph name containing an hyphen, or a range of glyph names;\n  instead of raising an error, it now interprets them as literal glyph names, while\n  also outputting a logging warning to alert user about the ambiguity (#1768, #1870).\n- [feaLib] When serializing AST to string, emit spaces around hyphens that denote\n  ranges. Also, fixed an issue with CID ranges when round-tripping AST->string->AST\n  (#1872).\n- [Snippets/otf2ttf] In otf2ttf.py script update LSB in hmtx to match xMin (#1873).\n- [colorLib] Added experimental support for building ``COLR`` v1 tables as per\n  the `colr-gradients-spec <https://github.com/googlefonts/colr-gradients-spec/blob/main/colr-gradients-spec.md>`__\n  draft proposal. **NOTE**: both the API and the XML dump of ``COLR`` v1 are\n  susceptible to change while the proposal is being discussed and formalized (#1822).\n\n4.7.0 (released 2020-04-03)\n---------------------------\n\n- [cu2qu] Added ``fontTools.cu2qu`` package, imported from the original\n  `cu2qu <https://github.com/googlefonts/cu2qu>`__ project. The ``cu2qu.pens`` module\n  was moved to ``fontTools.pens.cu2quPen``. The optional cu2qu extension module\n  can be compiled by installing `Cython <https://cython.org/>`__ before installing\n  fonttools from source (i.e. git repo or sdist tarball). The wheel package that\n  is published on PyPI (i.e. the one ``pip`` downloads, unless ``--no-binary``\n  option is used), will continue to be pure-Python for now (#1868).\n\n4.6.0 (released 2020-03-24)\n---------------------------\n\n- [varLib] Added support for building variable ``BASE`` table version 1.1 (#1858).\n- [CPAL] Added ``fromRGBA`` method to ``Color`` class (#1861).\n\n\n4.5.0 (released 2020-03-20)\n---------------------------\n\n- [designspaceLib] Added ``add{Axis,Source,Instance,Rule}Descriptor`` methods to\n  ``DesignSpaceDocument`` class, to initialize new descriptor objects using keyword\n  arguments, and at the same time append them to the current document (#1860).\n- [unicodedata] Update to Unicode 13.0 (#1859).\n\n4.4.3 (released 2020-03-13)\n---------------------------\n\n- [varLib] Always build ``gvar`` table for TrueType-flavored Variable Fonts,\n  even if it contains no variation data. The table is required according to\n  the OpenType spec (#1855, #1857).\n\n4.4.2 (released 2020-03-12)\n---------------------------\n\n- [ttx] Annotate ``LookupFlag`` in XML dump with comment explaining what bits\n  are set and what they mean (#1850).\n- [feaLib] Added more descriptive message to ``IncludedFeaNotFound`` error (#1842).\n\n4.4.1 (released 2020-02-26)\n---------------------------\n\n- [woff2] Skip normalizing ``glyf`` and ``loca`` tables if these are missing from\n  a font (e.g. in NotoColorEmoji using ``CBDT/CBLC`` tables).\n- [timeTools] Use non-localized date parsing in ``timestampFromString``, to fix\n  error when non-English ``LC_TIME`` locale is set (#1838, #1839).\n- [fontBuilder] Make sure the CFF table generated by fontBuilder can be used by varLib\n  without having to compile and decompile the table first. This was breaking in\n  converting the CFF table to CFF2 due to some unset attributes (#1836).\n\n4.4.0 (released 2020-02-18)\n---------------------------\n\n- [colorLib] Added ``fontTools.colorLib.builder`` module, initially with ``buildCOLR``\n  and ``buildCPAL`` public functions. More color font formats will follow (#1827).\n- [fontBuilder] Added ``setupCOLR`` and ``setupCPAL`` methods (#1826).\n- [ttGlyphPen] Quantize ``GlyphComponent.transform`` floats to ``F2Dot14`` to fix\n  round-trip issue when computing bounding boxes of transformed components (#1830).\n- [glyf] If a component uses reference points (``firstPt`` and ``secondPt``) for\n  alignment (instead of X and Y offsets), compute the effective translation offset\n  *after* having applied any transform (#1831).\n- [glyf] When all glyphs have zero contours, compile ``glyf`` table data as a single\n  null byte in order to pass validation by OTS and Windows (#1829).\n- [feaLib] Parsing feature code now ensures that referenced glyph names are part of\n  the known glyph set, unless a glyph set was not provided.\n- [varLib] When filling in the default axis value for a missing location of a source or\n  instance, correctly map the value forward.\n- [varLib] The avar table can now contain mapping output values that are greater than\n  OR EQUAL to the preceeding value, as the avar specification allows this.\n- [varLib] The errors of the module are now ordered hierarchically below VarLibError.\n  See #1821.\n\n4.3.0 (released 2020-02-03)\n---------------------------\n\n- [EBLC/CBLC] Fixed incorrect padding length calculation for Format 3 IndexSubTable\n  (#1817, #1818).\n- [varLib] Fixed error when merging OTL tables and TTFonts were loaded as ``lazy=True``\n  (#1808, #1809).\n- [varLib] Allow to use master fonts containing ``CFF2`` table when building VF (#1816).\n- [ttLib] Make ``recalcBBoxes`` option work also with ``CFF2`` table (#1816).\n- [feaLib] Don't reset ``lookupflag`` in lookups defined inside feature blocks.\n  They will now inherit the current ``lookupflag`` of the feature. This is what\n  Adobe ``makeotf`` also does in this case (#1815).\n- [feaLib] Fixed bug with mixed single/multiple substitutions. If a single substitution\n  involved a glyph class, we were incorrectly using only the first glyph in the class\n  (#1814).\n\n4.2.5 (released 2020-01-29)\n---------------------------\n\n- [feaLib] Do not fail on duplicate multiple substitutions, only warn (#1811).\n- [subset] Optimize SinglePos subtables to Format 1 if all ValueRecords are the same\n  (#1802).\n\n4.2.4 (released 2020-01-09)\n---------------------------\n\n- [unicodedata] Update RTL_SCRIPTS for Unicode 11 and 12.\n\n4.2.3 (released 2020-01-07)\n---------------------------\n\n- [otTables] Fixed bug when splitting `MarkBasePos` subtables as offsets overflow.\n  The mark class values in the split subtable were not being updated, leading to\n  invalid mark-base attachments (#1797, googlefonts/noto-source#145).\n- [feaLib] Only log a warning instead of error when features contain duplicate\n  substitutions (#1767).\n- [glifLib] Strip XML comments when parsing with lxml (#1784, #1785).\n\n4.2.2 (released 2019-12-12)\n---------------------------\n\n- [subset] Fixed issue with subsetting FeatureVariations table when the index\n  of features changes as features get dropped. The feature index need to be\n  remapped to point to index of the remaining features (#1777, #1782).\n- [fontBuilder] Added `addFeatureVariations` method to `FontBuilder` class. This\n  is a shorthand for calling `featureVars.addFeatureVariations` on the builder's\n  TTFont object (#1781).\n- [glyf] Fixed the flags bug in glyph.drawPoints() like we did for glyph.draw()\n  (#1771, #1774).\n\n4.2.1 (released 2019-12-06)\n---------------------------\n\n- [glyf] Use the ``flagOnCurve`` bit mask in ``glyph.draw()``, so that we ignore\n  the ``overlap`` flag that may be set when instantiating variable fonts (#1771).\n\n4.2.0 (released 2019-11-28)\n---------------------------\n\n- [pens] Added the following pens:\n\n  * ``roundingPen.RoundingPen``: filter pen that rounds coordinates and components'\n    offsets to integer;\n  * ``roundingPen.RoundingPointPen``: like the above, but using PointPen protocol.\n  * ``filterPen.FilterPointPen``: base class for filter point pens;\n  * ``transformPen.TransformPointPen``: filter point pen to apply affine transform;\n  * ``recordingPen.RecordingPointPen``: records and replays point-pen commands.\n\n- [ttGlyphPen] Always round float coordinates and component offsets to integers\n  (#1763).\n- [ufoLib] When converting kerning groups from UFO2 to UFO3, avoid confusing\n  groups with the same name as one of the glyphs (#1761, #1762,\n  unified-font-object/ufo-spec#98).\n\n4.1.0 (released 2019-11-18)\n---------------------------\n\n- [instancer] Implemented restricting axis ranges (level 3 partial instancing).\n  You can now pass ``{axis_tag: (min, max)}`` tuples as input to the\n  ``instantiateVariableFont`` function. Note that changing the default axis\n  position is not supported yet. The command-line script also accepts axis ranges\n  in the form of colon-separated float values, e.g. ``wght=400:700`` (#1753, #1537).\n- [instancer] Never drop STAT ``DesignAxis`` records, but only prune out-of-range\n  ``AxisValue`` records.\n- [otBase/otTables] Enforce that VarStore.RegionAxisCount == fvar.axisCount, even\n  when regions list is empty to appease OTS < v8.0 (#1752).\n- [designspaceLib] Defined new ``processing`` attribute for ``<rules>`` element,\n  with values \"first\" or \"last\", plus other editorial changes to DesignSpace\n  specification. Bumped format version to 4.1 (#1750).\n- [varLib] Improved error message when masters' glyph orders do not match (#1758,\n  #1759).\n- [featureVars] Allow to specify custom feature tag in ``addFeatureVariations``;\n  allow said feature to already exist, in which case we append new lookup indices\n  to existing features. Implemented ``<rules>`` attribute ``processing`` according to\n  DesignSpace specification update in #1750. Depending on this flag, we generate\n  either an 'rvrn' (always processed first) or a 'rclt' feature (follows lookup order,\n  therefore last) (#1747, #1625, #1371).\n- [ttCollection] Added support for context manager auto-closing via ``with`` statement\n  like with ``TTFont`` (#1751).\n- [unicodedata] Require unicodedata2 >= 12.1.0.\n- [py2.py3] Removed yet more PY2 vestiges (#1743).\n- [_n_a_m_e] Fixed issue when comparing NameRecords with different string types (#1742).\n- [fixedTools] Changed ``fixedToFloat`` to not do any rounding but simply return\n  ``value / (1 << precisionBits)``. Added ``floatToFixedToStr`` and\n  ``strToFixedToFloat`` functions to be used when loading from or dumping to XML.\n  Fixed values (e.g. fvar axes and instance coordinates, avar mappings, etc.) are\n  are now stored as un-rounded decimal floats upon decompiling (#1740, #737).\n- [feaLib] Fixed handling of multiple ``LigatureCaret`` statements for the same glyph.\n  Only the first rule per glyph is used, additional ones are ignored (#1733).\n\n4.0.2 (released 2019-09-26)\n---------------------------\n\n- [voltLib] Added support for ``ALL`` and ``NONE`` in ``PROCESS_MARKS`` (#1732).\n- [Silf] Fixed issue in ``Silf`` table compilation and decompilation regarding str vs\n  bytes in python3 (#1728).\n- [merge] Handle duplicate glyph names better: instead of appending font index to\n  all glyph names, use similar code like we use in ``post`` and ``CFF`` tables (#1729).\n\n4.0.1 (released 2019-09-11)\n---------------------------\n\n- [otTables] Support fixing offset overflows in ``MultipleSubst`` lookup subtables\n  (#1706).\n- [subset] Prune empty strikes in ``EBDT`` and ``CBDT`` table data (#1698, #1633).\n- [pens] Fixed issue in ``PointToSegmentPen`` when last point of closed contour has\n  same coordinates as the starting point and was incorrectly dropped (#1720).\n- [Graphite] Fixed ``Sill`` table output to pass OTS (#1705).\n- [name] Added ``removeNames`` method to ``table__n_a_m_e`` class (#1719).\n- [ttLib] Added aliases for renamed entries ``ascender`` and ``descender`` in\n  ``hhea`` table (#1715).\n\n4.0.0 (released 2019-08-22)\n---------------------------\n\n- NOTE: The v4.x version series only supports Python 3.6 or greater. You can keep\n  using fonttools 3.x if you need support for Python 2.\n- [py23] Removed all the python2-only code since it is no longer reachable, thus\n  unused; only the Python3 symbols were kept, but these are no-op. The module is now\n  DEPRECATED and will removed in the future.\n- [ttLib] Fixed UnboundLocalError for empty loca/glyph tables (#1680). Also, allow\n  the glyf table to be incomplete when dumping to XML (#1681).\n- [varLib.models] Fixed KeyError while sorting masters and there are no on-axis for\n  a given axis (38a8eb0e).\n- [cffLib] Make sure glyph names are unique (#1699).\n- [feaLib] Fix feature parser to correctly handle octal numbers (#1700).\n\n3.44.0 (released 2019-08-02)\n----------------------------\n\n- NOTE: This is the last scheduled release to support Python 2.7. The upcoming fonttools\n  v4.x series is going to require Python 3.6 or greater.\n- [varLib] Added new ``varLib.instancer`` module for partially instantiating variable\n  fonts. This extends (and will eventually replace) ``varLib.mutator`` module, as\n  it allows to create not just full static instances from a variable font, but also\n  \"partial\" or \"less variable\" fonts where some of the axes are dropped or\n  instantiated at a particular value.\n  Also available from the command-line as `fonttools varLib.instancer --help`\n  (#1537, #1628).\n- [cffLib] Added support for ``FDSelect`` format 4 (#1677).\n- [subset] Added support for subsetting ``sbix`` (Apple bitmap color font) table.\n- [t1Lib] Fixed issue parsing ``eexec`` section in Type1 fonts when whitespace\n  characters are interspersed among the trailing zeros (#1676).\n- [cffLib.specializer] Fixed bug in ``programToCommands`` with CFF2 charstrings (#1669).\n\n3.43.2 (released 2019-07-10)\n----------------------------\n\n- [featureVars] Fixed region-merging code on python3 (#1659).\n- [varLib.cff] Fixed merging of sparse PrivateDict items (#1653).\n\n3.43.1 (released 2019-06-19)\n----------------------------\n\n- [subset] Fixed regression when passing ``--flavor=woff2`` option with an input font\n  that was already compressed as WOFF 1.0 (#1650).\n\n3.43.0 (released 2019-06-18)\n----------------------------\n\n- [woff2] Added support for compressing/decompressing WOFF2 fonts with non-transformed\n  ``glyf`` and ``loca`` tables, as well as with transformed ``hmtx`` table.\n  Removed ``Snippets/woff2_compress.py`` and ``Snippets/woff2_decompress.py`` scripts,\n  and replaced them with a new console entry point ``fonttools ttLib.woff2``\n  that provides two sub-commands ``compress`` and ``decompress``.\n- [varLib.cff] Fixed bug when merging CFF2 ``PrivateDicts``. The ``PrivateDict``\n  data from the first region font was incorrecty used for all subsequent fonts.\n  The bug would only affect variable CFF2 fonts with hinting (#1643, #1644).\n  Also, fixed a merging bug when VF masters have no blends or marking glyphs (#1632,\n  #1642).\n- [loggingTools] Removed unused backport of ``LastResortLogger`` class.\n- [subset] Gracefully handle partial MATH table (#1635).\n- [featureVars] Avoid duplicate references to ``rvrn`` feature record in\n  ``DefaultLangSys`` tables when calling ``addFeatureVariations`` on a font that\n  does not already have a ``GSUB`` table (aa8a5bc6).\n- [varLib] Fixed merging of class-based kerning. Before, the process could introduce\n  rogue kerning values and variations for random classes against class zero (everything\n  not otherwise classed).\n- [varLib] Fixed merging GPOS tables from master fonts with different number of\n  ``SinglePos`` subtables (#1621, #1641).\n- [unicodedata] Updated Blocks, Scripts and ScriptExtensions to Unicode 12.1.\n\n3.42.0 (released 2019-05-28)\n----------------------------\n\n- [OS/2] Fixed sign of ``fsType``: it should be ``uint16``, not ``int16`` (#1619).\n- [subset] Skip out-of-range class values in mark attachment (#1478).\n- [fontBuilder] Add an empty ``DSIG`` table with ``setupDummyDSIG`` method (#1621).\n- [varLib.merger] Fixed bug whereby ``GDEF.GlyphClassDef`` were being dropped\n  when generating instance via ``varLib.mutator`` (#1614).\n- [varLib] Added command-line options ``-v`` and ``-q`` to configure logging (#1613).\n- [subset] Update font extents in head table (#1612).\n- [subset] Make --retain-gids truncate empty glyphs after the last non-empty glyph\n  (#1611).\n- [requirements] Updated ``unicodedata2`` backport for Unicode 12.0.\n\n3.41.2 (released 2019-05-13)\n----------------------------\n\n- [cffLib] Fixed issue when importing a ``CFF2`` variable font from XML, whereby\n  the VarStore state was not propagated to PrivateDict (#1598).\n- [varLib] Don't drop ``post`` glyph names when building CFF2 variable font (#1609).\n\n\n3.41.1 (released 2019-05-13)\n----------------------------\n\n- [designspaceLib] Added ``loadSourceFonts`` method to load source fonts using\n  custom opener function (#1606).\n- [head] Round font bounding box coordinates to integers to fix compile error\n  if CFF font has float coordinates (#1604, #1605).\n- [feaLib] Don't write ``None`` in ``ast.ValueRecord.asFea()`` (#1599).\n- [subset] Fixed issue ``AssertionError`` when using ``--desubroutinize`` option\n  (#1590, #1594).\n- [graphite] Fixed bug in ``Silf`` table's ``decompile`` method unmasked by\n  previous typo fix (#1597). Decode languange code as UTF-8 in ``Sill`` table's\n  ``decompile`` method (#1600).\n\n3.41.0 (released 2019-04-29)\n----------------------------\n\n- [varLib/cffLib] Added support for building ``CFF2`` variable font from sparse\n  masters, or masters with more than one model (multiple ``VarStore.VarData``).\n  In ``cffLib.specializer``, added support for ``CFF2`` CharStrings with\n  ``blend`` operators (#1547, #1591).\n- [subset] Fixed subsetting ``HVAR`` and ``VVAR`` with ``--retain-gids`` option,\n  and when advances mapping is null while sidebearings mappings are non-null\n  (#1587, #1588).\n- Added ``otlLib.maxContextCalc`` module to compute ``OS/2.usMaxContext`` value.\n  Calculate it automatically when compiling features with feaLib. Added option\n  ``--recalc-max-context`` to ``subset`` module (#1582).\n- [otBase/otTables] Fixed ``AttributeError`` on missing OT table fields after\n  importing font from TTX (#1584).\n- [graphite] Fixed typo ``Silf`` table's ``decompile`` method (#1586).\n- [otlLib] Better compress ``GPOS`` SinglePos (LookupType 1) subtables (#1539).\n\n3.40.0 (released 2019-04-08)\n----------------------------\n\n- [subset] Fixed error while subsetting ``VVAR`` with ``--retain-gids``\n  option (#1552).\n- [designspaceLib] Use up-to-date default location in ``findDefault`` method\n  (#1554).\n- [voltLib] Allow passing file-like object to Parser.\n- [arrayTools/glyf] ``calcIntBounds`` (used to compute bounding boxes of glyf\n  table's glyphs) now uses ``otRound`` instead of ``round3`` (#1566).\n- [svgLib] Added support for converting more SVG shapes to path ``d`` strings\n  (ellipse, line, polyline), as well as support for ``transform`` attributes.\n  Only ``matrix`` transformations are currently supported (#1564, #1564).\n- [varLib] Added support for building ``VVAR`` table from ``vmtx`` and ``VORG``\n  tables (#1551).\n- [fontBuilder] Enable making CFF2 fonts with ``post`` table format 2 (#1557).\n- Fixed ``DeprecationWarning`` on invalid escape sequences (#1562).\n\n3.39.0 (released 2019-03-19)\n----------------------------\n\n- [ttLib/glyf] Raise more specific error when encountering recursive\n  component references (#1545, #1546).\n- [Doc/designspaceLib] Defined new ``public.skipExportGlyphs`` lib key (#1534,\n  unified-font-object/ufo-spec#84).\n- [varLib] Use ``vmtx`` to compute vertical phantom points; or ``hhea.ascent``\n  and ``head.unitsPerEM`` if ``vmtx`` is missing (#1528).\n- [gvar/cvar] Sort XML element's min/value/max attributes in TupleVariation\n  toXML to improve readability of TTX dump (#1527).\n- [varLib.plot] Added support for 2D plots with only 1 variation axis (#1522).\n- [designspaceLib] Use axes maps when normalizing locations in\n  DesignSpaceDocument (#1226, #1521), and when finding default source (#1535).\n- [mutator] Set ``OVERLAP_SIMPLE`` and ``OVERLAP_COMPOUND`` glyf flags by\n  default in ``instantiateVariableFont``. Added ``--no-overlap`` cli option\n  to disable this (#1518).\n- [subset] Fixed subsetting ``VVAR`` table (#1516, #1517).\n  Fixed subsetting an ``HVAR`` table that has an ``AdvanceWidthMap`` when the\n  option ``--retain-gids`` is used.\n- [feaLib] Added ``forceChained`` in MultipleSubstStatement (#1511).\n  Fixed double indentation of ``subtable`` statement (#1512).\n  Added support for ``subtable`` statement in more places than just PairPos\n  lookups (#1520).\n  Handle lookupflag 0 and lookupflag without a value (#1540).\n- [varLib] In ``load_designspace``, provide a default English name for the\n  ``ital`` axis tag.\n- Remove pyftinspect because it is unmaintained and bitrotted.\n\n3.38.0 (released 2019-02-18)\n----------------------------\n\n- [cffLib] Fixed RecursionError when unpickling or deepcopying TTFont with\n  CFF table (#1488, 649dc49).\n- [subset] Fixed AttributeError when using --desubroutinize option (#1490).\n  Also, fixed desubroutinizing bug when subrs contain hints (#1499).\n- [CPAL] Make Color a subclass of namedtuple (173a0f5).\n- [feaLib] Allow hyphen in glyph class names.\n- [feaLib] Added 'tables' option to __main__.py (#1497).\n- [feaLib] Add support for special-case contextual positioning formatting\n  (#1501).\n- [svgLib] Support converting SVG basic shapes (rect, circle, etc.) into\n  equivalent SVG paths (#1500, #1508).\n- [Snippets] Added name-viewer.ipynb Jupyter notebook.\n\n\n3.37.3 (released 2019-02-05)\n----------------------------\n\n- The previous release accidentally changed several files from Unix to DOS\n  line-endings. Fix that.\n\n3.37.2 (released 2019-02-05)\n----------------------------\n\n- [varLib] Temporarily revert the fix to ``load_masters()``, which caused a\n  crash in ``interpolate_layout()`` when ``deepcopy``-ing OTFs.\n\n3.37.1 (released 2019-02-05)\n----------------------------\n\n- [varLib] ``load_masters()`` now actually assigns the fonts it loads to the\n  source.font attributes.\n- [varLib] Fixed an MVAR table generation crash when sparse masters were\n  involved.\n- [voltLib] ``parse_coverage_()`` returns a tuple instead of an ast.Enum.\n- [feaLib] A MarkClassDefinition inside a block is no longer doubly indented\n  compared to the rest of the block.\n\n3.37.0 (released 2019-01-28)\n----------------------------\n\n- [svgLib] Added support for converting elliptical arcs to cubic bezier curves\n  (#1464).\n- [py23] Added backport for ``math.isfinite``.\n- [varLib] Apply HIDDEN flag to fvar axis if designspace axis has attribute\n  ``hidden=1``.\n- Fixed \"DeprecationWarning: invalid escape sequence\" in Python 3.7.\n- [voltLib] Fixed parsing glyph groups. Distinguish different PROCESS_MARKS.\n  Accept COMPONENT glyph type.\n- [feaLib] Distinguish missing value and explicit ``<NULL>`` for PairPos2\n  format A (#1459). Round-trip ``useExtension`` keyword. Implemented\n  ``ValueRecord.asFea`` method.\n- [subset] Insert empty widths into hdmx when retaining gids (#1458).\n\n3.36.0 (released 2019-01-17)\n----------------------------\n\n- [ttx] Added ``--no-recalc-timestamp`` option to keep the original font's\n  ``head.modified`` timestamp (#1455, #46).\n- [ttx/psCharStrings] Fixed issues while dumping and round-tripping CFF2 table\n  with ttx (#1451, #1452, #1456).\n- [voltLib] Fixed check for duplicate anchors (#1450). Don't try to read past\n  the ``END`` operator in .vtp file (#1453).\n- [varLib] Use sentinel value -0x8000 (-32768) to ignore post.underlineThickness\n  and post.underlinePosition when generating MVAR deltas (#1449,\n  googlei18n/ufo2ft#308).\n- [subset] Added ``--retain-gids`` option to subset font without modifying the\n  current glyph indices (#1443, #1447).\n- [ufoLib] Replace deprecated calls to ``getbytes`` and ``setbytes`` with new\n  equivalent ``readbytes`` and ``writebytes`` calls. ``fs`` >= 2.2 no required.\n- [varLib] Allow loading masters from TTX files as well (#1441).\n\n3.35.2 (released 2019-01-14)\n----------------------------\n\n- [hmtx/vmtx]: Allow to compile/decompile ``hmtx`` and ``vmtx`` tables even\n  without the corresponding (required) metrics header tables, ``hhea`` and\n  ``vhea`` (#1439).\n- [varLib] Added support for localized axes' ``labelname`` and named instances'\n  ``stylename`` (#1438).\n\n3.35.1 (released 2019-01-09)\n----------------------------\n\n- [_m_a_x_p] Include ``maxComponentElements`` in ``maxp`` table's recalculation.\n\n3.35.0 (released 2019-01-07)\n----------------------------\n\n- [psCharStrings] In ``encodeFloat`` function, use float's \"general format\" with\n  8 digits of precision (i.e. ``%8g``) instead of ``str()``. This works around\n  a macOS rendering issue when real numbers in CFF table are too long, and\n  also makes sure that floats are encoded with the same precision in python 2.7\n  and 3.x (#1430, googlei18n/ufo2ft#306).\n- [_n_a_m_e/fontBuilder] Make ``_n_a_m_e_table.addMultilingualName`` also add\n  Macintosh (platformID=1) names by default. Added options to ``FontBuilder``\n  ``setupNameTable`` method to optionally disable Macintosh or Windows names.\n  (#1359, #1431).\n- [varLib] Make ``build`` optionally accept a ``DesignSpaceDocument`` object,\n  instead of a designspace file path. The caller can now set the ``font``\n  attribute of designspace's sources to a TTFont object, thus allowing to\n  skip filenames manipulation altogether (#1416, #1425).\n- [sfnt] Allow SFNTReader objects to be deep-copied.\n- Require typing>=3.6.4 on py27 to fix issue with singledispatch (#1423).\n- [designspaceLib/t1Lib/macRes] Fixed some cases where pathlib.Path objects were\n  not accepted (#1421).\n- [varLib] Fixed merging of multiple PairPosFormat2 subtables (#1411).\n- [varLib] The default STAT table version is now set to 1.1, to improve\n  compatibility with legacy applications (#1413).\n\n3.34.2 (released 2018-12-17)\n----------------------------\n\n- [merge] Fixed AssertionError when none of the script tables in GPOS/GSUB have\n  a DefaultLangSys record (#1408, 135a4a1).\n\n3.34.1 (released 2018-12-17)\n----------------------------\n\n- [varLib] Work around macOS rendering issue for composites without gvar entry (#1381).\n\n3.34.0 (released 2018-12-14)\n----------------------------\n\n- [varLib] Support generation of CFF2 variable fonts. ``model.reorderMasters()``\n  now supports arbitrary mapping. Fix handling of overlapping ranges for feature\n  variations (#1400).\n- [cffLib, subset] Code clean-up and fixing related to CFF2 support.\n- [ttLib.tables.ttProgram] Use raw strings for regex patterns (#1389).\n- [fontbuilder] Initial support for building CFF2 fonts. Set CFF's\n  ``FontMatrix`` automatically from unitsPerEm.\n- [plistLib] Accept the more general ``collections.Mapping`` instead of the\n  specific ``dict`` class to support custom data classes that should serialize\n  to dictionaries.\n\n3.33.0 (released 2018-11-30)\n----------------------------\n- [subset] subsetter bug fix with variable fonts.\n- [varLib.featureVar] Improve FeatureVariations generation with many rules.\n- [varLib] Enable sparse masters when building variable fonts:\n  https://github.com/fonttools/fonttools/pull/1368#issuecomment-437257368\n- [varLib.mutator] Add IDEF for GETVARIATION opcode, for handling hints in an\n  instance.\n- [ttLib] Ignore the length of kern table subtable format 0\n\n3.32.0 (released 2018-11-01)\n----------------------------\n\n- [ufoLib] Make ``UFOWriter`` a subclass of ``UFOReader``, and use mixins\n  for shared methods (#1344).\n- [featureVars] Fixed normalization error when a condition's minimum/maximum\n  attributes are missing in designspace ``<rule>`` (#1366).\n- [setup.py] Added ``[plot]`` to extras, to optionally install ``matplotlib``,\n  needed to use the ``fonTools.varLib.plot`` module.\n- [varLib] Take total bounding box into account when resolving model (7ee81c8).\n  If multiple axes have the same range ratio, cut across both (62003f4).\n- [subset] Don't error if ``STAT`` has no ``AxisValue`` tables.\n- [fontBuilder] Added a new submodule which contains a ``FontBuilder`` wrapper\n  class around ``TTFont`` that makes it easier to create a working TTF or OTF\n  font from scratch with code. NOTE: the API is still experimental and may\n  change in future versions.\n\n3.31.0 (released 2018-10-21)\n----------------------------\n\n- [ufoLib] Merged the `ufoLib <https://github.com/unified-font-objects/ufoLib>`__\n  master branch into a new ``fontTools.ufoLib`` package (#1335, #1095).\n  Moved ``ufoLib.pointPen`` module to ``fontTools.pens.pointPen``.\n  Moved ``ufoLib.etree`` module to ``fontTools.misc.etree``.\n  Moved ``ufoLib.plistlib`` module to ``fontTools.misc.plistlib``.\n  To use the new ``fontTools.ufoLib`` module you need to install fonttools\n  with the ``[ufo]`` extra, or you can manually install the required additional\n  dependencies (cf. README.rst).\n- [morx] Support AAT action type to insert glyphs and clean up compilation\n  of AAT action tables (4a1871f, 2011ccf).\n- [subset] The ``--no-hinting`` on a CFF font now also drops the optional\n  hinting keys in Private dict: ``ForceBold``, ``LanguageGroup``, and\n  ``ExpansionFactor`` (#1322).\n- [subset] Include nameIDs referenced by STAT table (#1327).\n- [loggingTools] Added ``msg=None`` argument to\n  ``CapturingLogHandler.assertRegex`` (0245f2c).\n- [varLib.mutator] Implemented ``FeatureVariations`` instantiation (#1244).\n- [g_l_y_f] Added PointPen support to ``_TTGlyph`` objects (#1334).\n\n3.30.0 (released 2018-09-18)\n----------------------------\n\n- [feaLib] Skip building noop class PairPos subtables when Coverage is NULL\n  (#1318).\n- [ttx] Expose the previously reserved bit flag ``OVERLAP_SIMPLE`` of\n  glyf table's contour points in the TTX dump. This is used in some\n  implementations to specify a non-zero fill with overlapping contours (#1316).\n- [ttLib] Added support for decompiling/compiling ``TS1C`` tables containing\n  VTT sources for ``cvar`` variation table (#1310).\n- [varLib] Use ``fontTools.designspaceLib`` to read DesignSpaceDocument. The\n  ``fontTools.varLib.designspace`` module is now deprecated and will be removed\n  in future versions. The presence of an explicit ``axes`` element is now\n  required in order to build a variable font (#1224, #1313).\n- [varLib] Implemented building GSUB FeatureVariations table from the ``rules``\n  element of DesignSpace document (#1240, #713, #1314).\n- [subset] Added ``--no-layout-closure`` option to not expand the subset with\n  the glyphs produced by OpenType layout features. Instead, OpenType features\n  will be subset to only rules that are relevant to the otherwise-specified\n  glyph set (#43, #1121).\n\n3.29.1 (released 2018-09-10)\n----------------------------\n\n- [feaLib] Fixed issue whereby lookups from DFLT/dflt were not included in the\n  DFLT/non-dflt language systems (#1307).\n- [graphite] Fixed issue on big-endian architectures (e.g. ppc64) (#1311).\n- [subset] Added ``--layout-scripts`` option to add/exclude set of OpenType\n  layout scripts that will be preserved. By default all scripts are retained\n  (``'*'``) (#1303).\n\n3.29.0 (released 2018-07-26)\n----------------------------\n\n- [feaLib] In the OTL table builder, when the ``name`` table is excluded\n  from the list of tables to be build, skip compiling ``featureNames`` blocks,\n  as the records referenced in ``FeatureParams`` table don't exist (68951b7).\n- [otBase] Try ``ExtensionLookup`` if other offset-overflow methods fail\n  (05f95f0).\n- [feaLib] Added support for explicit ``subtable;`` break statements in\n  PairPos lookups; previously these were ignored (#1279, #1300, #1302).\n- [cffLib.specializer] Make sure the stack depth does not exceed maxstack - 1,\n  so that a subroutinizer can insert subroutine calls (#1301,\n  https://github.com/googlei18n/ufo2ft/issues/266).\n- [otTables] Added support for fixing offset overflow errors occurring inside\n  ``MarkBasePos`` subtables (#1297).\n- [subset] Write the default output file extension based on ``--flavor`` option,\n  or the value of ``TTFont.sfntVersion`` (d7ac0ad).\n- [unicodedata] Updated Blocks, Scripts and ScriptExtensions for Unicode 11\n  (452c85e).\n- [xmlWriter] Added context manager to XMLWriter class to autoclose file\n  descriptor on exit (#1290).\n- [psCharStrings] Optimize the charstring's bytecode by encoding as integers\n  all float values that have no decimal portion (8d7774a).\n- [ttFont] Fixed missing import of ``TTLibError`` exception (#1285).\n- [feaLib] Allow any languages other than ``dflt`` under ``DFLT`` script\n  (#1278, #1292).\n\n3.28.0 (released 2018-06-19)\n----------------------------\n\n- [featureVars] Added experimental module to build ``FeatureVariations``\n  tables. Still needs to be hooked up to ``varLib.build`` (#1240).\n- [fixedTools] Added ``otRound`` to round floats to nearest integer towards\n  positive Infinity. This is now used where we deal with visual data like X/Y\n  coordinates, advance widths/heights, variation deltas, and similar (#1274,\n  #1248).\n- [subset] Improved GSUB closure memoize algorithm.\n- [varLib.models] Fixed regression in model resolution (180124, #1269).\n- [feaLib.ast] Fixed error when converting ``SubtableStatement`` to string\n  (#1275).\n- [varLib.mutator] Set ``OS/2.usWeightClass`` and ``usWidthClass``, and\n  ``post.italicAngle`` based on the 'wght', 'wdth' and 'slnt' axis values\n  (#1276, #1264).\n- [py23/loggingTools] Don't automatically set ``logging.lastResort`` handler\n  on py27. Moved ``LastResortLogger`` to the ``loggingTools`` module (#1277).\n\n3.27.1 (released 2018-06-11)\n----------------------------\n\n- [ttGlyphPen] Issue a warning and skip building non-existing components\n  (https://github.com/googlei18n/fontmake/issues/411).\n- [tests] Fixed issue running ttx_test.py from a tagged commit.\n\n3.27.0 (released 2018-06-11)\n----------------------------\n\n- [designspaceLib] Added new ``conditionSet`` element to ``rule`` element in\n  designspace document. Bumped ``format`` attribute to ``4.0`` (previously,\n  it was formatted as an integer). Removed ``checkDefault``, ``checkAxes``\n  methods, and any kind of guessing about the axes when the ``<axes>`` element\n  is missing. The default master is expected at the intersection of all default\n  values for each axis (#1254, #1255, #1267).\n- [cffLib] Fixed issues when compiling CFF2 or converting from CFF when the\n  font has an FDArray (#1211, #1271).\n- [varLib] Avoid attempting to build ``cvar`` table when ``glyf`` table is not\n  present, as is the case for CFF2 fonts.\n- [subset] Handle None coverages in MarkGlyphSets; revert commit 02616ab that\n  sets empty Coverage tables in MarkGlyphSets to None, to make OTS happy.\n- [ttFont] Allow to build glyph order from ``maxp.numGlyphs`` when ``post`` or\n  ``cmap`` are missing.\n- [ttFont] Added ``__len__`` method to ``_TTGlyphSet``.\n- [glyf] Ensure ``GlyphCoordinates`` never overflow signed shorts (#1230).\n- [py23] Added alias for ``itertools.izip`` shadowing the built-in ``zip``.\n- [loggingTools] Memoize ``log`` property of ``LogMixin`` class (fbab12).\n- [ttx] Impoved test coverage (#1261).\n- [Snippets] Addded script to append a suffix to all family names in a font.\n- [varLib.plot] Make it work with matplotlib >= 2.1 (b38e2b).\n\n3.26.0 (released 2018-05-03)\n----------------------------\n\n- [designspace] Added a new optional ``layer`` attribute to the source element,\n  and a corresponding ``layerName`` attribute to the ``SourceDescriptor``\n  object (#1253).\n  Added ``conditionset`` element to the ``rule`` element to the spec, but not\n  implemented in designspace reader/writer yet (#1254).\n- [varLib.models] Refine modeling one last time (0ecf5c5).\n- [otBase] Fixed sharing of tables referred to by different offset sizes\n  (795f2f9).\n- [subset] Don't drop a GDEF that only has VarStore (fc819d6). Set to None\n  empty Coverage tables in MarkGlyphSets (02616ab).\n- [varLib]: Added ``--master-finder`` command-line option (#1249).\n- [varLib.mutator] Prune fvar nameIDs from instance's name table (#1245).\n- [otTables] Allow decompiling bad ClassDef tables with invalid format, with\n  warning (#1236).\n- [varLib] Make STAT v1.2 and reuse nameIDs from fvar table (#1242).\n- [varLib.plot] Show master locations. Set axis limits to -1, +1.\n- [subset] Handle HVAR direct mapping. Passthrough 'cvar'.\n  Added ``--font-number`` command-line option for collections.\n- [t1Lib] Allow a text encoding to be specified when parsing a Type 1 font\n  (#1234). Added ``kind`` argument to T1Font constructor (c5c161c).\n- [ttLib] Added context manager API to ``TTFont`` class, so it can be used in\n  ``with`` statements to auto-close the file when exiting the context (#1232).\n\n3.25.0 (released 2018-04-03)\n----------------------------\n\n- [varLib] Improved support-resolution algorithm. Previously, the on-axis\n  masters would always cut the space. They don't anymore. That's more\n  consistent, and fixes the main issue Erik showed at TYPO Labs 2017.\n  Any varfont built that had an unusual master configuration will change\n  when rebuilt (42bef17, a523a697,\n  https://github.com/googlei18n/fontmake/issues/264).\n- [varLib.models] Added a ``main()`` entry point, that takes positions and\n  prints model results.\n- [varLib.plot] Added new module to plot a designspace's\n  VariationModel. Requires ``matplotlib``.\n- [varLib.mutator] Added -o option to specify output file path (2ef60fa).\n- [otTables] Fixed IndexError while pruning of HVAR pre-write (6b6c34a).\n- [varLib.models] Convert delta array to floats if values overflows signed\n  short integer (0055f94).\n\n3.24.2 (released 2018-03-26)\n----------------------------\n\n- [otBase] Don't fail during ``ValueRecord`` copy if src has more items.\n  We drop hinting in the subsetter by simply changing ValueFormat, without\n  cleaning up the actual ValueRecords. This was causing assertion error if\n  a variable font was subsetted without hinting and then passed directly to\n  the mutator for instantiation without first it saving to disk.\n\n3.24.1 (released 2018-03-06)\n----------------------------\n\n- [varLib] Don't remap the same ``DeviceTable`` twice in VarStore optimizer\n  (#1206).\n- [varLib] Add ``--disable-iup`` option to ``fonttools varLib`` script,\n  and a ``optimize=True`` keyword argument to ``varLib.build`` function,\n  to optionally disable IUP optimization while building varfonts.\n- [ttCollection] Fixed issue while decompiling ttc with python3 (#1207).\n\n3.24.0 (released 2018-03-01)\n----------------------------\n\n- [ttGlyphPen] Decompose composite glyphs if any components' transform is too\n  large to fit a ``F2Dot14`` value, or clamp transform values that are\n  (almost) equal to +2.0 to make them fit and avoid decomposing (#1200,\n  #1204, #1205).\n- [ttx] Added new ``-g`` option to dump glyphs from the ``glyf`` table\n  splitted as individual ttx files (#153, #1035, #1132, #1202).\n- Copied ``ufoLib.filenames`` module to ``fontTools.misc.filenames``, used\n  for the ttx split-glyphs option (#1202).\n- [feaLib] Added support for ``cvParameters`` blocks in Character Variant\n  feautures ``cv01-cv99`` (#860, #1169).\n- [Snippets] Added ``checksum.py`` script to generate/check SHA1 hash of\n  ttx files (#1197).\n- [varLib.mutator] Fixed issue while instantiating some variable fonts\n  whereby the horizontal advance width computed from ``gvar`` phantom points\n  could turn up to be negative (#1198).\n- [varLib/subset] Fixed issue with subsetting GPOS variation data not\n  picking up ``ValueRecord`` ``Device`` objects (54fd71f).\n- [feaLib/voltLib] In all AST elements, the ``location`` is no longer a\n  required positional argument, but an optional kewyord argument (defaults\n  to ``None``). This will make it easier to construct feature AST from\n  code (#1201).\n\n\n3.23.0 (released 2018-02-26)\n----------------------------\n\n- [designspaceLib] Added an optional ``lib`` element to the designspace as a\n  whole, as well as to the instance elements, to store arbitrary data in a\n  property list dictionary, similar to the UFO's ``lib``. Added an optional\n  ``font`` attribute to the ``SourceDescriptor``, to allow operating on\n  in-memory font objects (#1175).\n- [cffLib] Fixed issue with lazy-loading of attributes when attempting to\n  set the CFF TopDict.Encoding (#1177, #1187).\n- [ttx] Fixed regression introduced in 3.22.0 that affected the split tables\n  ``-s`` option (#1188).\n- [feaLib] Added ``IncludedFeaNotFound`` custom exception subclass, raised\n  when an included feature file cannot be found (#1186).\n- [otTables] Changed ``VarIdxMap`` to use glyph names internally instead of\n  glyph indexes. The old ttx dumps of HVAR/VVAR tables that contain indexes\n  can still be imported (21cbab8, 38a0ffb).\n- [varLib] Implemented VarStore optimizer (#1184).\n- [subset] Implemented pruning of GDEF VarStore, HVAR and MVAR (#1179).\n- [sfnt] Restore backward compatiblity with ``numFonts`` attribute of\n  ``SFNTReader`` object (#1181).\n- [merge] Initial support for merging ``LangSysRecords`` (#1180).\n- [ttCollection] don't seek(0) when writing to possibly unseekable strems.\n- [subset] Keep all ``--name-IDs`` from 0 to 6 by default (#1170, #605, #114).\n- [cffLib] Added ``width`` module to calculate optimal CFF default and\n  nominal glyph widths.\n- [varLib] Don’t fail if STAT already in the master fonts (#1166).\n\n3.22.0 (released 2018-02-04)\n----------------------------\n\n- [subset] Support subsetting ``endchar`` acting as ``seac``-like components\n  in ``CFF`` (fixes #1162).\n- [feaLib] Allow to build from pre-parsed ``ast.FeatureFile`` object.\n  Added ``tables`` argument to only build some tables instead of all (#1159,\n  #1163).\n- [textTools] Replaced ``safeEval`` with ``ast.literal_eval`` (#1139).\n- [feaLib] Added option to the parser to not resolve ``include`` statements\n  (#1154).\n- [ttLib] Added new ``ttCollection`` module to read/write TrueType and\n  OpenType Collections. Exports a ``TTCollection`` class with a ``fonts``\n  attribute containing a list of ``TTFont`` instances, the methods ``save``\n  and ``saveXML``, plus some list-like methods. The ``importXML`` method is\n  not implemented yet (#17).\n- [unicodeadata] Added ``ot_tag_to_script`` function that converts from\n  OpenType script tag to Unicode script code.\n- Added new ``designspaceLib`` subpackage, originally from Erik Van Blokland's\n  ``designSpaceDocument``: https://github.com/LettError/designSpaceDocument\n  NOTE: this is not yet used internally by varLib, and the API may be subject\n  to changes (#911, #1110, LettError/designSpaceDocument#28).\n- Added new FontTools icon images (8ee7c32).\n- [unicodedata] Added ``script_horizontal_direction`` function that returns\n  either \"LTR\" or \"RTL\" given a unicode script code.\n- [otConverters] Don't write descriptive name string as XML comment if the\n  NameID value is 0 (== NULL) (#1151, #1152).\n- [unicodedata] Add ``ot_tags_from_script`` function to get the list of\n  OpenType script tags associated with unicode script code (#1150).\n- [feaLib] Don't error when \"enumerated\" kern pairs conflict with preceding\n  single pairs; emit warning and chose the first value (#1147, #1148).\n- [loggingTools] In ``CapturingLogHandler.assertRegex`` method, match the\n  fully formatted log message.\n- [sbix] Fixed TypeError when concatenating str and bytes (#1154).\n- [bezierTools] Implemented cusp support and removed ``approximate_fallback``\n  arg in ``calcQuadraticArcLength``. Added ``calcCubicArcLength`` (#1142).\n\n3.21.2 (released 2018-01-08)\n----------------------------\n\n- [varLib] Fixed merging PairPos Format1/2 with missing subtables (#1125).\n\n3.21.1 (released 2018-01-03)\n----------------------------\n\n- [feaLib] Allow mixed single/multiple substitutions (#612)\n- Added missing ``*.afm`` test assets to MAINFEST.in (#1137).\n- Fixed dumping ``SVG`` tables containing color palettes (#1124).\n\n3.21.0 (released 2017-12-18)\n----------------------------\n\n- [cmap] when compiling format6 subtable, don't assume gid0 is always called\n  '.notdef' (1e42224).\n- [ot] Allow decompiling fonts with bad Coverage format number (1aafae8).\n- Change FontTools licence to MIT (#1127).\n- [post] Prune extra names already in standard Mac set (df1e8c7).\n- [subset] Delete empty SubrsIndex after subsetting (#994, #1118).\n- [varLib] Don't share points in cvar by default, as it currently fails on\n  some browsers (#1113).\n- [afmLib] Make poor old afmLib work on python3.\n\n3.20.1 (released 2017-11-22)\n----------------------------\n\n- [unicodedata] Fixed issue with ``script`` and ``script_extension`` functions\n  returning inconsistent short vs long names. They both return the short four-\n  letter script codes now. Added ``script_name`` and ``script_code`` functions\n  to look up the long human-readable script name from the script code, and\n  viceversa (#1109, #1111).\n\n3.20.0 (released 2017-11-21)\n----------------------------\n\n- [unicodedata] Addded new module ``fontTools.unicodedata`` which exports the\n  same interface as the built-in ``unicodedata`` module, with the addition of\n  a few functions that are missing from the latter, such as ``script``,\n  ``script_extension`` and ``block``. Added a ``MetaTools/buildUCD.py`` script\n  to download and parse data files from the Unicode Character Database and\n  generate python modules containing lists of ranges and property values.\n- [feaLib] Added ``__str__`` method to all ``ast`` elements (delegates to the\n  ``asFea`` method).\n- [feaLib] ``Parser`` constructor now accepts a ``glyphNames`` iterable\n  instead of ``glyphMap`` dict. The latter still works but with a pending\n  deprecation warning (#1104).\n- [bezierTools] Added arc length calculation functions originally from\n  ``pens.perimeterPen`` module (#1101).\n- [varLib] Started generating STAT table (8af4309). Right now it just reflects\n  the axes, and even that with certain limitations:\n  * AxisOrdering is set to the order axes are defined,\n  * Name-table entries are not shared with fvar.\n- [py23] Added backports for ``redirect_stdout`` and ``redirect_stderr``\n  context managers (#1097).\n- [Graphite] Fixed some round-trip bugs (#1093).\n\n3.19.0 (released 2017-11-06)\n----------------------------\n\n- [varLib] Try set of used points instead of all points when testing whether to\n  share points between tuples (#1090).\n- [CFF2] Fixed issue with reading/writing PrivateDict BlueValues to TTX file.\n  Read the commit message 8b02b5a and issue #1030 for more details.\n  NOTE: this change invalidates all the TTX files containing CFF2 tables\n  that where dumped with previous verisons of fonttools.\n  CFF2 Subr items can have values on the stack after the last operator, thus\n  a ``CFF2Subr`` class was added to accommodate this (#1091).\n- [_k_e_r_n] Fixed compilation of AAT kern version=1.0 tables (#1089, #1094)\n- [ttLib] Added getBestCmap() convenience method to TTFont class and cmap table\n  class that returns a preferred Unicode cmap subtable given a list of options\n  (#1092).\n- [morx] Emit more meaningful subtable flags. Implement InsertionMorphAction\n\n3.18.0 (released 2017-10-30)\n----------------------------\n\n- [feaLib] Fixed writing back nested glyph classes (#1086).\n- [TupleVariation] Reactivated shared points logic, bugfixes (#1009).\n- [AAT] Implemented ``morx`` ligature subtables (#1082).\n- [reverseContourPen] Keep duplicate lineTo following a moveTo (#1080,\n  https://github.com/googlei18n/cu2qu/issues/51).\n- [varLib.mutator] Suport instantiation of GPOS, GDEF and MVAR (#1079).\n- [sstruct] Fixed issue with ``unicode_literals`` and ``struct`` module in\n  old versions of python 2.7 (#993).\n\n3.17.0 (released 2017-10-16)\n----------------------------\n\n- [svgPathPen] Added an ``SVGPathPen`` that translates segment pen commands\n  into SVG path descriptions. Copied from Tal Leming's ``ufo2svg.svgPathPen``\n  https://github.com/typesupply/ufo2svg/blob/d69f992/Lib/ufo2svg/svgPathPen.py\n- [reverseContourPen] Added ``ReverseContourPen``, a filter pen that draws\n  contours with the winding direction reversed, while keeping the starting\n  point (#1071).\n- [filterPen] Added ``ContourFilterPen`` to manipulate contours as a whole\n  rather than segment by segment.\n- [arrayTools] Added ``Vector`` class to apply math operations on an array\n  of numbers, and ``pairwise`` function to loop over pairs of items in an\n  iterable.\n- [varLib] Added support for building and interpolation of ``cvar`` table\n  (f874cf6, a25a401).\n\n3.16.0 (released 2017-10-03)\n----------------------------\n\n- [head] Try using ``SOURCE_DATE_EPOCH`` environment variable when setting\n  the ``head`` modified timestamp to ensure reproducible builds (#1063).\n  See https://reproducible-builds.org/specs/source-date-epoch/\n- [VTT] Decode VTT's ``TSI*`` tables text as UTF-8 (#1060).\n- Added support for Graphite font tables: Feat, Glat, Gloc, Silf and Sill.\n  Thanks @mhosken! (#1054).\n- [varLib] Default to using axis \"name\" attribute if \"labelname\" element\n  is missing (588f524).\n- [merge] Added support for merging Script records. Remove unused features\n  and lookups after merge (d802580, 556508b).\n- Added ``fontTools.svgLib`` package. Includes a parser for SVG Paths that\n  supports the Pen protocol (#1051). Also, added a snippet to convert SVG\n  outlines to UFO GLIF (#1053).\n- [AAT] Added support for ``ankr``, ``bsln``, ``mort``, ``morx``, ``gcid``,\n  and ``cidg``.\n- [subset] Implemented subsetting of ``prop``, ``opbd``, ``bsln``, ``lcar``.\n\n3.15.1 (released 2017-08-18)\n----------------------------\n\n- [otConverters] Implemented ``__add__`` and ``__radd__`` methods on\n  ``otConverters._LazyList`` that decompile a lazy list before adding\n  it to another list or ``_LazyList`` instance. Fixes an ``AttributeError``\n  in the ``subset`` module when attempting to sum ``_LazyList`` objects\n  (6ef48bd2, 1aef1683).\n- [AAT] Support the `opbd` table with optical bounds (a47f6588).\n- [AAT] Support `prop` table with glyph properties (d05617b4).\n\n\n3.15.0 (released 2017-08-17)\n----------------------------\n\n- [AAT] Added support for AAT lookups. The ``lcar`` table can be decompiled\n  and recompiled; futher work needed to handle ``morx`` table (#1025).\n- [subset] Keep (empty) DefaultLangSys for Script 'DFLT' (6eb807b5).\n- [subset] Support GSUB/GPOS.FeatureVariations (fe01d87b).\n- [varLib] In ``models.supportScalars``, ignore an axis when its peak value\n  is 0 (fixes #1020).\n- [varLib] Add default mappings to all axes in avar to fix rendering issue\n  in some rasterizers (19c4b377, 04eacf13).\n- [varLib] Flatten multiple tail PairPosFormat2 subtables before merging\n  (c55ef525).\n- [ttLib] Added support for recalculating font bounding box in ``CFF`` and\n  ``head`` tables, and min/max values in ``hhea`` and ``vhea`` tables (#970).\n\n3.14.0 (released 2017-07-31)\n----------------------------\n\n- [varLib.merger] Remove Extensions subtables before merging (f7c20cf8).\n- [varLib] Initialize the avar segment map with required default entries\n  (#1014).\n- [varLib] Implemented optimal IUP optmiziation (#1019).\n- [otData] Add ``AxisValueFormat4`` for STAT table v1.2 from OT v1.8.2\n  (#1015).\n- [name] Fixed BCP46 language tag for Mac langID=9: 'si' -> 'sl'.\n- [subset] Return value from ``_DehintingT2Decompiler.op_hintmask``\n  (c0d672ba).\n- [cffLib] Allow to get TopDict by index as well as by name (dca96c9c).\n- [cffLib] Removed global ``isCFF2`` state; use one set of classes for\n  both CFF and CFF2, maintaining backward compatibility existing code (#1007).\n- [cffLib] Deprecated maxstack operator, per OpenType spec update 1.8.1.\n- [cffLib] Added missing default (-100) for UnderlinePosition (#983).\n- [feaLib] Enable setting nameIDs greater than 255 (#1003).\n- [varLib] Recalculate ValueFormat when merging SinglePos (#996).\n- [varLib] Do not emit MVAR if there are no entries in the variation store\n  (#987).\n- [ttx] For ``-x`` option, pad with space if table tag length is < 4.\n\n3.13.1 (released 2017-05-30)\n----------------------------\n\n- [feaLib.builder] Removed duplicate lookups optimization. The original\n  lookup order and semantics of the feature file are preserved (#976).\n\n3.13.0 (released 2017-05-24)\n----------------------------\n\n- [varLib.mutator] Implement IUP optimization (#969).\n- [_g_l_y_f.GlyphCoordinates] Changed ``__bool__()`` semantics to match those\n  of other iterables (e46f949). Removed ``__abs__()`` (3db5be2).\n- [varLib.interpolate_layout] Added ``mapped`` keyword argument to\n  ``interpolate_layout`` to allow disabling avar mapping: if False (default),\n  the location is mapped using the map element of the axes in designspace file;\n  if True, it is assumed that location is in designspace's internal space and\n  no mapping is performed (#950, #975).\n- [varLib.interpolate_layout] Import designspace-loading logic from varLib.\n- [varLib] Fixed bug with recombining PairPosClass2 subtables (81498e5, #914).\n- [cffLib.specializer] When copying iterables, cast to list (462b7f86).\n\n3.12.1 (released 2017-05-18)\n----------------------------\n\n- [pens.t2CharStringPen] Fixed AttributeError when calling addComponent in\n  T2CharStringPen (#965).\n\n3.12.0 (released 2017-05-17)\n----------------------------\n\n- [cffLib.specializer] Added new ``specializer`` module to optimize CFF\n  charstrings, used by the T2CharStringPen (#948).\n- [varLib.mutator] Sort glyphs by component depth before calculating composite\n  glyphs' bounding boxes to ensure deltas are correctly caclulated (#945).\n- [_g_l_y_f] Fixed loss of precision in GlyphCoordinates by using 'd' (double)\n  instead of 'f' (float) as ``array.array`` typecode (#963, #964).\n\n3.11.0 (released 2017-05-03)\n----------------------------\n\n- [t2CharStringPen] Initial support for specialized Type2 path operators:\n  vmoveto, hmoveto, vlineto, hlineto, vvcurveto, hhcurveto, vhcurveto and\n  hvcurveto. This should produce more compact charstrings (#940, #403).\n- [Doc] Added Sphinx sources for the documentation. Thanks @gferreira (#935).\n- [fvar] Expose flags in XML (#932)\n- [name] Add helper function for building multi-lingual names (#921)\n- [varLib] Fixed kern merging when a PairPosFormat2 has ClassDef1 with glyphs\n  that are NOT present in the Coverage (1b5e1c4, #939).\n- [varLib] Fixed non-deterministic ClassDef order with PY3 (f056c12, #927).\n- [feLib] Throw an error when the same glyph is defined in multiple mark\n  classes within the same lookup (3e3ff00, #453).\n\n3.10.0 (released 2017-04-14)\n----------------------------\n\n- [varLib] Added support for building ``avar`` table, using the designspace\n  ``<map>`` elements.\n- [varLib] Removed unused ``build(..., axisMap)`` argument. Axis map should\n  be specified in designspace file now. We do not accept nonstandard axes\n  if ``<axes>`` element is not present.\n- [varLib] Removed \"custom\" axis from the ``standard_axis_map``. This was\n  added before when glyphsLib was always exporting the (unused) custom axis.\n- [varLib] Added partial support for building ``MVAR`` table; does not\n  implement ``gasp`` table variations yet.\n- [pens] Added FilterPen base class, for pens that control another pen;\n  factored out ``addComponent`` method from BasePen into a separate abstract\n  DecomposingPen class; added DecomposingRecordingPen, which records\n  components decomposed as regular contours.\n- [TSI1] Fixed computation of the textLength of VTT private tables (#913).\n- [loggingTools] Added ``LogMixin`` class providing a ``log`` property to\n  subclasses, which returns a ``logging.Logger`` named after the latter.\n- [loggingTools] Added ``assertRegex`` method to ``CapturingLogHandler``.\n- [py23] Added backport for python 3's ``types.SimpleNamespace`` class.\n- [EBLC] Fixed issue with python 3 ``zip`` iterator.\n\n3.9.2 (released 2017-04-08)\n---------------------------\n\n- [pens] Added pen to draw glyphs using WxPython ``GraphicsPath`` class:\n  https://wxpython.org/docs/api/wx.GraphicsPath-class.html\n- [varLib.merger] Fixed issue with recombining multiple PairPosFormat2\n  subtables (#888)\n- [varLib] Do not encode gvar deltas that are all zeroes, or if all values\n  are smaller than tolerance.\n- [ttLib] _TTGlyphSet glyphs now also have ``height`` and ``tsb`` (top\n  side bearing) attributes from the ``vmtx`` table, if present.\n- [glyf] In ``GlyphCoordintes`` class, added ``__bool__`` / ``__nonzero__``\n  methods, and ``array`` property to get raw array.\n- [ttx] Support reading TTX files with BOM (#896)\n- [CFF2] Fixed the reporting of the number of regions in the font.\n\n3.9.1 (released 2017-03-20)\n---------------------------\n\n- [varLib.merger] Fixed issue while recombining multiple PairPosFormat2\n  subtables if they were split because of offset overflows (9798c30).\n- [varLib.merger] Only merge multiple PairPosFormat1 subtables if there is\n  at least one of the fonts with a non-empty Format1 subtable (0f5a46b).\n- [varLib.merger] Fixed IndexError with empty ClassDef1 in PairPosFormat2\n  (aad0d46).\n- [varLib.merger] Avoid reusing Class2Record (mutable) objects (e6125b3).\n- [varLib.merger] Calculate ClassDef1 and ClassDef2's Format when merging\n  PairPosFormat2 (23511fd).\n- [macUtils] Added missing ttLib import (b05f203).\n\n3.9.0 (released 2017-03-13)\n---------------------------\n\n- [feaLib] Added (partial) support for parsing feature file comments ``# ...``\n  appearing in between statements (#879).\n- [feaLib] Cleaned up syntax tree for FeatureNames.\n- [ttLib] Added support for reading/writing ``CFF2`` table (thanks to\n  @readroberts at Adobe), and ``TTFA`` (ttfautohint) table.\n- [varLib] Fixed regression introduced with 3.8.0 in the calculation of\n  ``NumShorts``, i.e. the number of deltas in ItemVariationData's delta sets\n  that use a 16-bit representation (b2825ff).\n\n3.8.0 (released 2017-03-05)\n---------------------------\n\n- New pens: MomentsPen, StatisticsPen, RecordingPen, and TeePen.\n- [misc] Added new ``fontTools.misc.symfont`` module, for symbolic font\n  statistical analysis; requires ``sympy`` (http://www.sympy.org/en/index.html)\n- [varLib] Added experimental ``fontTools.varLib.interpolatable`` module for\n  finding wrong contour order between different masters\n- [varLib] designspace.load() now returns a dictionary, instead of a tuple,\n  and supports <axes> element (#864); the 'masters' item was renamed 'sources',\n  like the <sources> element in the designspace document\n- [ttLib] Fixed issue with recalculating ``head`` modified timestamp when\n  saving CFF fonts\n- [ttLib] In TupleVariation, round deltas before compiling (#861, fixed #592)\n- [feaLib] Ignore duplicate glyphs in classes used as MarkFilteringSet and\n  MarkAttachmentType (#863)\n- [merge] Changed the ``gasp`` table merge logic so that only the one from\n  the first font is retained, similar to other hinting tables (#862)\n- [Tests] Added tests for the ``varLib`` package, as well as test fonts\n  from the \"Annotated OpenType Specification\" (AOTS) to exercise ``ttLib``'s\n  table readers/writers (<https://github.com/adobe-type-tools/aots>)\n\n3.7.2 (released 2017-02-17)\n---------------------------\n\n- [subset] Keep advance widths when stripping \".notdef\" glyph outline in\n  CID-keyed CFF fonts (#845)\n- [feaLib] Zero values now produce the same results as makeotf (#633, #848)\n- [feaLib] More compact encoding for “Contextual positioning with in-line\n  single positioning rules” (#514)\n\n3.7.1 (released 2017-02-15)\n---------------------------\n\n- [subset] Fixed issue with ``--no-hinting`` option whereby advance widths in\n  Type 2 charstrings were also being stripped (#709, #343)\n- [feaLib] include statements now resolve relative paths like makeotf (#838)\n- [feaLib] table ``name`` now handles Unicode codepoints beyond the Basic\n  Multilingual Plane, also supports old-style MacOS platform encodings (#842)\n- [feaLib] correctly escape string literals when emitting feature syntax (#780)\n\n3.7.0 (released 2017-02-11)\n---------------------------\n\n- [ttx, mtiLib] Preserve ordering of glyph alternates in GSUB type 3 (#833).\n- [feaLib] Glyph names can have dashes, as per new AFDKO syntax v1.20 (#559).\n- [feaLib] feaLib.Parser now needs the font's glyph map for parsing.\n- [varLib] Fix regression where GPOS values were stored as 0.\n- [varLib] Allow merging of class-based kerning when ClassDefs are different\n\n3.6.3 (released 2017-02-06)\n---------------------------\n\n- [varLib] Fix building variation of PairPosFormat2 (b5c34ce).\n- Populate defaults even for otTables that have postRead (e45297b).\n- Fix compiling of MultipleSubstFormat1 with zero 'out' glyphs (b887860).\n\n3.6.2 (released 2017-01-30)\n---------------------------\n\n- [varLib.merger] Fixed \"TypeError: reduce() of empty sequence with no\n  initial value\" (3717dc6).\n\n3.6.1 (released 2017-01-28)\n---------------------------\n\n-  [py23] Fixed unhandled exception occurring at interpreter shutdown in\n   the \"last resort\" logging handler (972b3e6).\n-  [agl] Ensure all glyph names are of native 'str' type; avoid mixing\n   'str' and 'unicode' in TTFont.glyphOrder (d8c4058).\n-  Fixed inconsistent title levels in README.rst that caused PyPI to\n   incorrectly render the reStructuredText page.\n\n3.6.0 (released 2017-01-26)\n---------------------------\n\n-  [varLib] Refactored and improved the variation-font-building process.\n-  Assembly code in the fpgm, prep, and glyf tables is now indented in\n   XML output for improved readability. The ``instruction`` element is\n   written as a simple tag if empty (#819).\n-  [ttx] Fixed 'I/O operation on closed file' error when dumping\n   multiple TTXs to standard output with the '-o -' option.\n-  The unit test modules (``*_test.py``) have been moved outside of the\n   fontTools package to the Tests folder, thus they are no longer\n   installed (#811).\n\n3.5.0 (released 2017-01-14)\n---------------------------\n\n-  Font tables read from XML can now be written back to XML with no\n   loss.\n-  GSUB/GPOS LookupType is written out in XML as an element, not\n   comment. (#792)\n-  When parsing cmap table, do not store items mapped to glyph id 0.\n   (#790)\n-  [otlLib] Make ClassDef sorting deterministic. Fixes #766 (7d1ddb2)\n-  [mtiLib] Added unit tests (#787)\n-  [cvar] Implemented cvar table\n-  [gvar] Renamed GlyphVariation to TupleVariation to match OpenType\n   terminology.\n-  [otTables] Handle gracefully empty VarData.Item array when compiling\n   XML. (#797)\n-  [varLib] Re-enabled generation of ``HVAR`` table for fonts with\n   TrueType outlines; removed ``--build-HVAR`` command-line option.\n-  [feaLib] The parser can now be extended to support non-standard\n   statements in FEA code by using a customized Abstract Syntax Tree.\n   See, for example, ``feaLib.builder_test.test_extensions`` and\n   baseClass.feax (#794, fixes #773).\n-  [feaLib] Added ``feaLib`` command to the 'fonttools' command-line\n   tool; applies a feature file to a font. ``fonttools feaLib -h`` for\n   help.\n-  [pens] The ``T2CharStringPen`` now takes an optional\n   ``roundTolerance`` argument to control the rounding of coordinates\n   (#804, fixes #769).\n-  [ci] Measure test coverage on all supported python versions and OSes,\n   combine coverage data and upload to\n   https://codecov.io/gh/fonttools/fonttools (#786)\n-  [ci] Configured Travis and Appveyor for running tests on Python 3.6\n   (#785, 55c03bc)\n-  The manual pages installation directory can be customized through\n   ``FONTTOOLS_MANPATH`` environment variable (#799, fixes #84).\n-  [Snippets] Added otf2ttf.py, for converting fonts from CFF to\n   TrueType using the googlei18n/cu2qu module (#802)\n\n3.4.0 (released 2016-12-21)\n---------------------------\n\n-  [feaLib] Added support for generating FEA text from abstract syntax\n   tree (AST) objects (#776). Thanks @mhosken\n-  Added ``agl.toUnicode`` function to convert AGL-compliant glyph names\n   to Unicode strings (#774)\n-  Implemented MVAR table (b4d5381)\n\n3.3.1 (released 2016-12-15)\n---------------------------\n\n-  [setup] We no longer use versioneer.py to compute fonttools version\n   from git metadata, as this has caused issues for some users (#767).\n   Now we bump the version strings manually with a custom ``release``\n   command of setup.py script.\n\n3.3.0 (released 2016-12-06)\n---------------------------\n\n-  [ttLib] Implemented STAT table from OpenType 1.8 (#758)\n-  [cffLib] Fixed decompilation of CFF fonts containing non-standard\n   key/value pairs in FontDict (issue #740; PR #744)\n-  [py23] minor: in ``round3`` function, allow the second argument to be\n   ``None`` (#757)\n-  The standalone ``sstruct`` and ``xmlWriter`` modules, deprecated\n   since vesion 3.2.0, have been removed. They can be imported from the\n   ``fontTools.misc`` package.\n\n3.2.3 (released 2016-12-02)\n---------------------------\n\n-  [py23] optimized performance of round3 function; added backport for\n   py35 math.isclose() (9d8dacb)\n-  [subset] fixed issue with 'narrow' (UCS-2) Python 2 builds and\n   ``--text``/``--text-file`` options containing non-BMP chararcters\n   (16d0e5e)\n-  [varLib] fixed issuewhen normalizing location values (8fa2ee1, #749)\n-  [inspect] Made it compatible with both python2 and python3 (167ee60,\n   #748). Thanks @pnemade\n\n3.2.2 (released 2016-11-24)\n---------------------------\n\n-  [varLib] Do not emit null axes in fvar (1bebcec). Thanks @robmck-ms\n-  [varLib] Handle fonts without GPOS (7915a45)\n-  [merge] Ignore LangSys if None (a11bc56)\n-  [subset] Fix subsetting MathVariants (78d3cbe)\n-  [OS/2] Fix \"Private Use (plane 15)\" range (08a0d55). Thanks @mashabow\n\n3.2.1 (released 2016-11-03)\n---------------------------\n\n-  [OS/2] fix checking ``fsSelection`` bits matching ``head.macStyle``\n   bits\n-  [varLib] added ``--build-HVAR`` option to generate ``HVAR`` table for\n   fonts with TrueType outlines. For ``CFF2``, it is enabled by default.\n\n3.2.0 (released 2016-11-02)\n---------------------------\n\n-  [varLib] Improve support for OpenType 1.8 Variable Fonts:\n-  Implement GDEF's VariationStore\n-  Implement HVAR/VVAR tables\n-  Partial support for loading MutatorMath .designspace files with\n   varLib.designspace module\n-  Add varLib.models with Variation fonts interpolation models\n-  Implement GSUB/GPOS FeatureVariations\n-  Initial support for interpolating and merging OpenType Layout tables\n   (see ``varLib.interpolate_layout`` and ``varLib.merger`` modules)\n-  [API change] Change version to be an integer instead of a float in\n   XML output for GSUB, GPOS, GDEF, MATH, BASE, JSTF, HVAR, VVAR, feat,\n   hhea and vhea tables. Scripts that set the Version for those to 1.0\n   or other float values also need fixing. A warning is emitted when\n   code or XML needs fix.\n-  several bug fixes to the cffLib module, contributed by Adobe's\n   @readroberts\n-  The XML output for CFF table now has a 'major' and 'minor' elements\n   for specifying whether it's version 1.0 or 2.0 (support for CFF2 is\n   coming soon)\n-  [setup.py] remove undocumented/deprecated ``extra_path`` Distutils\n   argument. This means that we no longer create a \"FontTools\" subfolder\n   in site-packages containing the actual fontTools package, as well as\n   the standalone xmlWriter and sstruct modules. The latter modules are\n   also deprecated, and scheduled for removal in upcoming releases.\n   Please change your import statements to point to from fontTools.misc\n   import xmlWriter and from fontTools.misc import sstruct.\n-  [scripts] Add a 'fonttools' command-line tool that simply runs\n   ``fontTools.*`` sub-modules: e.g. ``fonttools ttx``,\n   ``fonttools subset``, etc.\n-  [hmtx/vmts] Read advance width/heights as unsigned short (uint16);\n   automatically round float values to integers.\n-  [ttLib/xmlWriter] add 'newlinestr=None' keyword argument to\n   ``TTFont.saveXML`` for overriding os-specific line endings (passed on\n   to ``XMLWriter`` instances).\n-  [versioning] Use versioneer instead of ``setuptools_scm`` to\n   dynamically load version info from a git checkout at import time.\n-  [feaLib] Support backslash-prefixed glyph names.\n\n3.1.2 (released 2016-09-27)\n---------------------------\n\n-  restore Makefile as an alternative way to build/check/install\n-  README.md: update instructions for installing package from source,\n   and for running test suite\n-  NEWS: Change log was out of sync with tagged release\n\n3.1.1 (released 2016-09-27)\n---------------------------\n\n-  Fix ``ttLibVersion`` attribute in TTX files still showing '3.0'\n   instead of '3.1'.\n-  Use ``setuptools_scm`` to manage package versions.\n\n3.1.0 (released 2016-09-26)\n---------------------------\n\n-  [feaLib] New library to parse and compile Adobe FDK OpenType Feature\n   files.\n-  [mtiLib] New library to parse and compile Monotype 'FontDame'\n   OpenType Layout Tables files.\n-  [voltLib] New library to parse Microsoft VOLT project files.\n-  [otlLib] New library to work with OpenType Layout tables.\n-  [varLib] New library to work with OpenType Font Variations.\n-  [pens] Add ttGlyphPen to draw to TrueType glyphs, and t2CharStringPen\n   to draw to Type 2 Charstrings (CFF); add areaPen and perimeterPen.\n-  [ttLib.tables] Implement 'meta' and 'trak' tables.\n-  [ttx] Add --flavor option for compiling to 'woff' or 'woff2'; add\n   ``--with-zopfli`` option to use Zopfli to compress WOFF 1.0 fonts.\n-  [subset] Support subsetting 'COLR'/'CPAL' and 'CBDT'/'CBLC' color\n   fonts tables, and 'gvar' table for variation fonts.\n-  [Snippets] Add ``symfont.py``, for symbolic font statistics analysis;\n   interpolatable.py, a preliminary script for detecting interpolation\n   errors; ``{merge,dump}_woff_metadata.py``.\n-  [classifyTools] Helpers to classify things into classes.\n-  [CI] Run tests on Windows, Linux and macOS using Appveyor and Travis\n   CI; check unit test coverage with Coverage.py/Coveralls; automatic\n   deployment to PyPI on tags.\n-  [loggingTools] Use Python built-in logging module to print messages.\n-  [py23] Make round() behave like Python 3 built-in round(); define\n   round2() and round3().\n\n3.0 (released 2015-09-01)\n-------------------------\n\n-  Add Snippet scripts for cmap subtable format conversion, printing\n   GSUB/GPOS features, building a GX font from two masters\n-  TTX WOFF2 support and a ``-f`` option to overwrite output file(s)\n-  Support GX tables: ``avar``, ``gvar``, ``fvar``, ``meta``\n-  Support ``feat`` and gzip-compressed SVG tables\n-  Upgrade Mac East Asian encodings to native implementation if\n   available\n-  Add Roman Croatian and Romanian encodings, codecs for mac-extended\n   East Asian encodings\n-  Implement optimal GLYF glyph outline packing; disabled by default\n\n2.5 (released 2014-09-24)\n-------------------------\n\n-  Add a Qt pen\n-  Add VDMX table converter\n-  Load all OpenType sub-structures lazily\n-  Add support for cmap format 13.\n-  Add pyftmerge tool\n-  Update to Unicode 6.3.0d3\n-  Add pyftinspect tool\n-  Add support for Google CBLC/CBDT color bitmaps, standard EBLC/EBDT\n   embedded bitmaps, and ``SVG`` table (thanks to Read Roberts at Adobe)\n-  Add support for loading, saving and ttx'ing WOFF file format\n-  Add support for Microsoft COLR/CPAL layered color glyphs\n-  Support PyPy\n-  Support Jython, by replacing numpy with array/lists modules and\n   removed it, pure-Python StringIO, not cStringIO\n-  Add pyftsubset and Subsetter object, supporting CFF and TTF\n-  Add to ttx args for -q for quiet mode, -z to choose a bitmap dump\n   format\n\n2.4 (released 2013-06-22)\n-------------------------\n\n-  Option to write to arbitrary files\n-  Better dump format for DSIG\n-  Better detection of OTF XML\n-  Fix issue with Apple's kern table format\n-  Fix mangling of TT glyph programs\n-  Fix issues related to mona.ttf\n-  Fix Windows Installer instructions\n-  Fix some modern MacOS issues\n-  Fix minor issues and typos\n\n2.3 (released 2009-11-08)\n-------------------------\n\n-  TrueType Collection (TTC) support\n-  Python 2.6 support\n-  Update Unicode data to 5.2.0\n-  Couple of bug fixes\n\n2.2 (released 2008-05-18)\n-------------------------\n\n-  ClearType support\n-  cmap format 1 support\n-  PFA font support\n-  Switched from Numeric to numpy\n-  Update Unicode data to 5.1.0\n-  Update AGLFN data to 1.6\n-  Many bug fixes\n\n2.1 (released 2008-01-28)\n-------------------------\n\n-  Many years worth of fixes and features\n\n2.0b2 (released 2002-??-??)\n---------------------------\n\n-  Be \"forgiving\" when interpreting the maxp table version field:\n   interpret any value as 1.0 if it's not 0.5. Fixes dumping of these\n   GPL fonts: http://www.freebsd.org/cgi/pds.cgi?ports/chinese/wangttf\n-  Fixed ttx -l: it turned out this part of the code didn't work with\n   Python 2.2.1 and earlier. My bad to do most of my testing with a\n   different version than I shipped TTX with :-(\n-  Fixed bug in ClassDef format 1 subtable (Andreas Seidel bumped into\n   this one).\n\n2.0b1 (released 2002-09-10)\n---------------------------\n\n-  Fixed embarrassing bug: the master checksum in the head table is now\n   calculated correctly even on little-endian platforms (such as Intel).\n-  Made the cmap format 4 compiler smarter: the binary data it creates\n   is now more or less as compact as possible. TTX now makes more\n   compact data than in any shipping font I've tested it with.\n-  Dump glyph names as a separate \"GlyphOrder\" pseudo table as opposed\n   to as part of the glyf table (obviously needed for CFF-OTF's).\n-  Added proper support for the CFF table.\n-  Don't barf on empty tables (questionable, but \"there are font out\n   there...\")\n-  When writing TT glyf data, align glyphs on 4-byte boundaries. This\n   seems to be the current recommendation by MS. Also: don't barf on\n   fonts which are already 4-byte aligned.\n-  Windows installer contributed bu Adam Twardoch! Yay!\n-  Changed the command line interface again, now by creating one new\n   tool replacing the old ones: ttx It dumps and compiles, depending on\n   input file types. The options have changed somewhat.\n-  The -d option is back (output dir)\n-  ttcompile's -i options is now called -m (as in \"merge\"), to avoid\n   clash with dump's -i.\n-  The -s option (\"split tables\") no longer creates a directory, but\n   instead outputs a small .ttx file containing references to the\n   individual table files. This is not a true link, it's a simple file\n   name, and the referenced file should be in the same directory so\n   ttcompile can find them.\n-  compile no longer accepts a directory as input argument. Instead it\n   can parse the new \"mini-ttx\" format as output by \"ttx -s\".\n-  all arguments are input files\n-  Renamed the command line programs and moved them to the Tools\n   subdirectory. They are now installed by the setup.py install script.\n-  Added OpenType support. BASE, GDEF, GPOS, GSUB and JSTF are (almost)\n   fully supported. The XML output is not yet final, as I'm still\n   considering to output certain subtables in a more human-friendly\n   manner.\n-  Fixed 'kern' table to correctly accept subtables it doesn't know\n   about, as well as interpreting Apple's definition of the 'kern' table\n   headers correctly.\n-  Fixed bug where glyphnames were not calculated from 'cmap' if it was\n   (one of the) first tables to be decompiled. More specifically: it\n   cmap was the first to ask for a glyphID -> glyphName mapping.\n-  Switched XML parsers: use expat instead of xmlproc. Should be faster.\n-  Removed my UnicodeString object: I now require Python 2.0 or up,\n   which has unicode support built in.\n-  Removed assert in glyf table: redundant data at the end of the table\n   is now ignored instead of raising an error. Should become a warning.\n-  Fixed bug in hmtx/vmtx code that only occured if all advances were\n   equal.\n-  Fixed subtle bug in TT instruction disassembler.\n-  Couple of fixes to the 'post' table.\n-  Updated OS/2 table to latest spec.\n\n1.0b1 (released 2001-08-10)\n---------------------------\n\n-  Reorganized the command line interface for ttDump.py and\n   ttCompile.py, they now behave more like \"normal\" command line tool,\n   in that they accept multiple input files for batch processing.\n-  ttDump.py and ttCompile.py don't silently override files anymore, but\n   ask before doing so. Can be overridden by -f.\n-  Added -d option to both ttDump.py and ttCompile.py.\n-  Installation is now done with distutils. (Needs work for environments\n   without compilers.)\n-  Updated installation instructions.\n-  Added some workarounds so as to handle certain buggy fonts more\n   gracefully.\n-  Updated Unicode table to Unicode 3.0 (Thanks Antoine!)\n-  Included a Python script by Adam Twardoch that adds some useful stuff\n   to the Windows registry.\n-  Moved the project to SourceForge.\n\n1.0a6 (released 2000-03-15)\n---------------------------\n\n-  Big reorganization: made ttLib a subpackage of the new fontTools\n   package, changed several module names. Called the entire suite\n   \"FontTools\"\n-  Added several submodules to fontTools, some new, some older.\n-  Added experimental CFF/GPOS/GSUB support to ttLib, read-only (but XML\n   dumping of GPOS/GSUB is for now disabled)\n-  Fixed hdmx endian bug\n-  Added -b option to ttCompile.py, it disables recalculation of\n   bounding boxes, as requested by Werner Lemberg.\n-  Renamed tt2xml.pt to ttDump.py and xml2tt.py to ttCompile.py\n-  Use \".ttx\" as file extension instead of \".xml\".\n-  TTX is now the name of the XML-based *format* for TT fonts, and not\n   just an application.\n\n1.0a5\n-----\n\nNever released\n\n-  More tables supported: hdmx, vhea, vmtx\n\n1.0a3 & 1.0a4\n-------------\n\nNever released\n\n-  fixed most portability issues\n-  retracted the \"Euro_or_currency\" change from 1.0a2: it was\n   nonsense!\n\n1.0a2 (released 1999-05-02)\n---------------------------\n\n-  binary release for MacOS\n-  genenates full FOND resources: including width table, PS font name\n   info and kern table if applicable.\n-  added cmap format 4 support. Extra: dumps Unicode char names as XML\n   comments!\n-  added cmap format 6 support\n-  now accepts true type files starting with \"true\" (instead of just\n   0x00010000 and \"OTTO\")\n-  'glyf' table support is now complete: I added support for composite\n   scale, xy-scale and two-by-two for the 'glyf' table. For now,\n   component offset scale behaviour defaults to Apple-style. This only\n   affects the (re)calculation of the glyph bounding box.\n-  changed \"Euro\" to \"Euro_or_currency\" in the Standard Apple Glyph\n   order list, since we cannot tell from the 'post' table which is\n   meant. I should probably doublecheck with a Unicode encoding if\n   available. (This does not affect the output!)\n\nFixed bugs: - 'hhea' table is now recalculated correctly - fixed wrong\nassumption about sfnt resource names\n\n1.0a1 (released 1999-04-27)\n---------------------------\n\n-  initial binary release for MacOS\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 11.7529296875,
          "content": "|CI Build Status| |Coverage Status| |PyPI| |Gitter Chat|\n\nWhat is this?\n~~~~~~~~~~~~~\n\n| fontTools is a library for manipulating fonts, written in Python. The\n  project includes the TTX tool, that can convert TrueType and OpenType\n  fonts to and from an XML text format, which is also called TTX. It\n  supports TrueType, OpenType, AFM and to an extent Type 1 and some\n  Mac-specific formats. The project has an `MIT open-source\n  licence <LICENSE>`__.\n| Among other things this means you can use it free of charge.\n\n`User documentation <https://fonttools.readthedocs.io/en/latest/>`_ and\n`developer documentation <https://fonttools.readthedocs.io/en/latest/developer.html>`_\nare available at `Read the Docs <https://fonttools.readthedocs.io/>`_.\n\nInstallation\n~~~~~~~~~~~~\n\nFontTools requires `Python <http://www.python.org/download/>`__ 3.8\nor later. We try to follow the same schedule of minimum Python version support as\nNumPy (see `NEP 29 <https://numpy.org/neps/nep-0029-deprecation_policy.html>`__).\n\nThe package is listed in the Python Package Index (PyPI), so you can\ninstall it with `pip <https://pip.pypa.io>`__:\n\n.. code:: sh\n\n    pip install fonttools\n\nIf you would like to contribute to its development, you can clone the\nrepository from GitHub, install the package in 'editable' mode and\nmodify the source code in place. We recommend creating a virtual\nenvironment, using `virtualenv <https://virtualenv.pypa.io>`__ or\nPython 3 `venv <https://docs.python.org/3/library/venv.html>`__ module.\n\n.. code:: sh\n\n    # download the source code to 'fonttools' folder\n    git clone https://github.com/fonttools/fonttools.git\n    cd fonttools\n\n    # create new virtual environment called e.g. 'fonttools-venv', or anything you like\n    python -m virtualenv fonttools-venv\n\n    # source the `activate` shell script to enter the environment (Unix-like); to exit, just type `deactivate`\n    . fonttools-venv/bin/activate\n\n    # to activate the virtual environment in Windows `cmd.exe`, do\n    fonttools-venv\\Scripts\\activate.bat\n\n    # install in 'editable' mode\n    pip install -e .\n\nOptional Requirements\n---------------------\n\nThe ``fontTools`` package currently has no (required) external dependencies\nbesides the modules included in the Python Standard Library.\nHowever, a few extra dependencies are required by some of its modules, which\nare needed to unlock optional features.\nThe ``fonttools`` PyPI distribution also supports so-called \"extras\", i.e. a\nset of keywords that describe a group of additional dependencies, which can be\nused when installing via pip, or when specifying a requirement.\nFor example:\n\n.. code:: sh\n\n    pip install fonttools[ufo,lxml,woff,unicode]\n\nThis command will install fonttools, as well as the optional dependencies that\nare required to unlock the extra features named \"ufo\", etc.\n\n- ``Lib/fontTools/misc/etree.py``\n\n  The module exports a ElementTree-like API for reading/writing XML files, and\n  allows to use as the backend either the built-in ``xml.etree`` module or\n  `lxml <https://lxml.de>`__. The latter is preferred whenever present,\n  as it is generally faster and more secure.\n\n  *Extra:* ``lxml``\n\n- ``Lib/fontTools/ufoLib``\n\n  Package for reading and writing UFO source files; it requires:\n\n  * `fs <https://pypi.org/pypi/fs>`__: (aka ``pyfilesystem2``) filesystem\n    abstraction layer.\n\n  * `enum34 <https://pypi.org/pypi/enum34>`__: backport for the built-in ``enum``\n    module (only required on Python < 3.4).\n\n  *Extra:* ``ufo``\n\n- ``Lib/fontTools/ttLib/woff2.py``\n\n  Module to compress/decompress WOFF 2.0 web fonts; it requires:\n\n  * `brotli <https://pypi.python.org/pypi/Brotli>`__: Python bindings of\n    the Brotli compression library.\n\n  *Extra:* ``woff``\n\n- ``Lib/fontTools/ttLib/sfnt.py``\n\n  To better compress WOFF 1.0 web fonts, the following module can be used\n  instead of the built-in ``zlib`` library:\n\n  * `zopfli <https://pypi.python.org/pypi/zopfli>`__: Python bindings of\n    the Zopfli compression library.\n\n  *Extra:* ``woff``\n\n- ``Lib/fontTools/unicode.py``\n\n  To display the Unicode character names when dumping the ``cmap`` table\n  with ``ttx`` we use the ``unicodedata`` module in the Standard Library.\n  The version included in there varies between different Python versions.\n  To use the latest available data, you can install:\n\n  * `unicodedata2 <https://pypi.python.org/pypi/unicodedata2>`__:\n    ``unicodedata`` backport for Python 3.x updated to the latest Unicode\n    version 15.0.\n\n  *Extra:* ``unicode``\n\n- ``Lib/fontTools/varLib/interpolatable.py``\n\n  Module for finding wrong contour/component order between different masters.\n  It requires one of the following packages in order to solve the so-called\n  \"minimum weight perfect matching problem in bipartite graphs\", or\n  the Assignment problem:\n\n  * `scipy <https://pypi.python.org/pypi/scipy>`__: the Scientific Library\n    for Python, which internally uses `NumPy <https://pypi.python.org/pypi/numpy>`__\n    arrays and hence is very fast;\n  * `munkres <https://pypi.python.org/pypi/munkres>`__: a pure-Python\n    module that implements the Hungarian or Kuhn-Munkres algorithm.\n\n  To plot the results to a PDF or HTML format, you also need to install:\n\n  * `pycairo <https://pypi.org/project/pycairo/>`__: Python bindings for the\n    Cairo graphics library. Note that wheels are currently only available for\n    Windows, for other platforms see pycairo's `installation instructions\n    <https://pycairo.readthedocs.io/en/latest/getting_started.html>`__.\n\n  *Extra:* ``interpolatable``\n\n- ``Lib/fontTools/varLib/plot.py``\n\n  Module for visualizing DesignSpaceDocument and resulting VariationModel.\n\n  * `matplotlib <https://pypi.org/pypi/matplotlib>`__: 2D plotting library.\n\n  *Extra:* ``plot``\n\n- ``Lib/fontTools/misc/symfont.py``\n\n  Advanced module for symbolic font statistics analysis; it requires:\n\n  * `sympy <https://pypi.python.org/pypi/sympy>`__: the Python library for\n    symbolic mathematics.\n\n  *Extra:* ``symfont``\n\n- ``Lib/fontTools/t1Lib.py``\n\n  To get the file creator and type of Macintosh PostScript Type 1 fonts\n  on Python 3 you need to install the following module, as the old ``MacOS``\n  module is no longer included in Mac Python:\n\n  * `xattr <https://pypi.python.org/pypi/xattr>`__: Python wrapper for\n    extended filesystem attributes (macOS platform only).\n\n  *Extra:* ``type1``\n\n- ``Lib/fontTools/ttLib/removeOverlaps.py``\n\n  Simplify TrueType glyphs by merging overlapping contours and components.\n\n  * `skia-pathops <https://pypi.python.org/pypy/skia-pathops>`__: Python\n    bindings for the Skia library's PathOps module, performing boolean\n    operations on paths (union, intersection, etc.).\n\n  *Extra:* ``pathops``\n\n- ``Lib/fontTools/pens/cocoaPen.py`` and ``Lib/fontTools/pens/quartzPen.py``\n\n  Pens for drawing glyphs with Cocoa ``NSBezierPath`` or ``CGPath`` require:\n\n  * `PyObjC <https://pypi.python.org/pypi/pyobjc>`__: the bridge between\n    Python and the Objective-C runtime (macOS platform only).\n\n- ``Lib/fontTools/pens/qtPen.py``\n\n  Pen for drawing glyphs with Qt's ``QPainterPath``, requires:\n\n  * `PyQt5 <https://pypi.python.org/pypi/PyQt5>`__: Python bindings for\n    the Qt cross platform UI and application toolkit.\n\n- ``Lib/fontTools/pens/reportLabPen.py``\n\n  Pen to drawing glyphs as PNG images, requires:\n\n  * `reportlab <https://pypi.python.org/pypi/reportlab>`__: Python toolkit\n    for generating PDFs and graphics.\n\n- ``Lib/fontTools/pens/freetypePen.py``\n\n  Pen to drawing glyphs with FreeType as raster images, requires:\n\n  * `freetype-py <https://pypi.python.org/pypi/freetype-py>`__: Python binding\n    for the FreeType library.\n    \n- ``Lib/fontTools/ttLib/tables/otBase.py``\n\n  Use the Harfbuzz library to serialize GPOS/GSUB using ``hb_repack`` method, requires:\n  \n  * `uharfbuzz <https://pypi.python.org/pypi/uharfbuzz>`__: Streamlined Cython\n    bindings for the harfbuzz shaping engine\n    \n  *Extra:* ``repacker``\n\nHow to make a new release\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1) Update ``NEWS.rst`` with all the changes since the last release. Write a\n   changelog entry for each PR, with one or two short sentences summarizing it,\n   as well as links to the PR and relevant issues addressed by the PR. Do not\n   put a new title, the next command will do it for you.\n2) Use semantic versioning to decide whether the new release will be a 'major',\n   'minor' or 'patch' release. It's usually one of the latter two, depending on\n   whether new backward compatible APIs were added, or simply some bugs were fixed.\n3) From inside a venv, first do ``pip install -r dev-requirements.txt``, then run\n   the ``python setup.py release`` command from the tip of the ``main`` branch.\n   By default this bumps the third or 'patch' digit only, unless you pass ``--major``\n   or ``--minor`` to bump respectively the first or second digit.\n   This bumps the package version string, extracts the changes since the latest\n   version from ``NEWS.rst``, and uses that text to create an annotated git tag\n   (or a signed git tag if you pass the ``--sign`` option and your git and Github\n   account are configured for `signing commits <https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/signing-commits>`__\n   using a GPG key).\n   It also commits an additional version bump which opens the main branch for\n   the subsequent developmental cycle\n4) Push both the tag and commit to the upstream repository, by running the command\n   ``git push --follow-tags``. Note: it may push other local tags as well, be\n   careful.\n5) Let the CI build the wheel and source distribution packages and verify both\n   get uploaded to the Python Package Index (PyPI).\n6) [Optional] Go to fonttools `Github Releases <https://github.com/fonttools/fonttools/releases>`__\n   page and create a new release, copy-pasting the content of the git tag\n   message. This way, the release notes are nicely formatted as markdown, and\n   users watching the repo will get an email notification. One day we shall\n   automate that too.\n\n\nAcknowledgements\n~~~~~~~~~~~~~~~~\n\nIn alphabetical order:\n\naschmitz, Olivier Berten, Samyak Bhuta, Erik van Blokland, Petr van Blokland,\nJelle Bosma, Sascha Brawer, Tom Byrer, Antonio Cavedoni, Frédéric Coiffier,\nVincent Connare, David Corbett, Simon Cozens, Dave Crossland, Simon Daniels,\nPeter Dekkers, Behdad Esfahbod, Behnam Esfahbod, Hannes Famira, Sam Fishman,\nMatt Fontaine, Takaaki Fuji, Rob Hagemans, Yannis Haralambous, Greg Hitchcock,\nJeremie Hornus, Khaled Hosny, John Hudson, Denis Moyogo Jacquerye, Jack Jansen,\nTom Kacvinsky, Jens Kutilek, Antoine Leca, Werner Lemberg, Tal Leming, Peter\nLofting, Cosimo Lupo, Olli Meier, Masaya Nakamura, Dave Opstad, Laurence Penney,\nRoozbeh Pournader, Garret Rieger, Read Roberts, Colin Rofls, Guido van Rossum,\nJust van Rossum, Andreas Seidel, Georg Seifert, Chris Simpkins, Miguel Sousa,\nAdam Twardoch, Adrien Tétar, Vitaly Volkov, Paul Wise.\n\nCopyrights\n~~~~~~~~~~\n\n| Copyright (c) 1999-2004 Just van Rossum, LettError\n  (just@letterror.com)\n| See `LICENSE <LICENSE>`__ for the full license.\n\nCopyright (c) 2000 BeOpen.com. All Rights Reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.\nAll Rights Reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam. All\nRights Reserved.\n\nHave fun!\n\n.. |CI Build Status| image:: https://github.com/fonttools/fonttools/workflows/Test/badge.svg\n   :target: https://github.com/fonttools/fonttools/actions?query=workflow%3ATest\n.. |Coverage Status| image:: https://codecov.io/gh/fonttools/fonttools/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/fonttools/fonttools\n.. |PyPI| image:: https://img.shields.io/pypi/v/fonttools.svg\n   :target: https://pypi.org/project/FontTools\n.. |Gitter Chat| image:: https://badges.gitter.im/fonttools-dev/Lobby.svg\n   :alt: Join the chat at https://gitter.im/fonttools-dev/Lobby\n   :target: https://gitter.im/fonttools-dev/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.76171875,
          "content": "# Security Policy\n\nIf you have discovered a security vulnerability in this project, please report it\nprivately. **Do not disclose it as a public issue.** This gives us time to work with you\nto fix the issue before public exposure, reducing the chance that the exploit will be\nused before a patch is released.\n\nYou may submit the report in the following ways:\n\n- send an email to cosimo@anthrotype.com, behdad@behdad.org and fonttools-admin@googlegroups.com; and/or\n- send us a [private vulnerability report](https://github.com/fonttools/fonttools/security/advisories/new)\n\nPlease provide the following information in your report:\n\n- A description of the vulnerability and its impact\n- How to reproduce the issue\n\nPlease allow us 90 days to work on a fix before public disclosure.\n"
        },
        {
          "name": "Snippets",
          "type": "tree",
          "content": null
        },
        {
          "name": "Tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.1796875,
          "content": "pytest>=3.0\ntox>=2.5\nbump2version>=0.5.6\nsphinx>=1.5.5\nmypy>=0.782\nreadme_renderer[md]>=43.0\n\n# Pin black as each version could change formatting, breaking CI randomly.\nblack==24.10.0\n"
        },
        {
          "name": "fonttools",
          "type": "blob",
          "size": 0.228515625,
          "content": "#!/usr/bin/env python3\nimport sys\nimport os.path\n\nlibdir = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'Lib')\nsys.path.insert(0, libdir)\n\nfrom fontTools.__main__ import main\n\nif __name__ == '__main__':\n\tsys.exit(main())\n"
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.53515625,
          "content": "[mypy]\npython_version = 3.7\nfiles = Lib/fontTools/misc/plistlib\nfollow_imports = silent\nignore_missing_imports = True\nwarn_redundant_casts = True\nwarn_unused_configs = True\nwarn_unused_ignores = True\n\n[mypy-fontTools.misc.plistlib]\ncheck_untyped_defs = True\ndisallow_any_generics = True\ndisallow_incomplete_defs = True\ndisallow_subclassing_any = True\ndisallow_untyped_decorators = True\ndisallow_untyped_calls = False\ndisallow_untyped_defs = True\nno_implicit_optional = True\nno_implicit_reexport = True\nstrict_equality = True\nwarn_return_any = True\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.0380859375,
          "content": "[tool.black]\ntarget-version = [\"py37\"]\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.8603515625,
          "content": "# we use the official Brotli module on CPython and the CFFI-based\n# extension 'brotlipy' on PyPy\nbrotli==1.1.0; platform_python_implementation != \"PyPy\"\nbrotlicffi==1.1.0.0; platform_python_implementation == \"PyPy\"\nunicodedata2==15.1.0; python_version <= '3.11'\nscipy==1.10.0; platform_python_implementation != \"PyPy\" and python_version <= '3.8'  # pyup: ignore\nscipy==1.14.1; platform_python_implementation != \"PyPy\" and python_version >= '3.9'\nmunkres==1.1.4; platform_python_implementation == \"PyPy\"\nzopfli==0.2.3.post1\nfs==2.4.16\nskia-pathops==0.8.0.post2; platform_python_implementation != \"PyPy\"\n# this is only required to run Tests/cu2qu/{ufo,cli}_test.py\nufoLib2==0.17.0\nufo2ft==3.3.1\npyobjc==10.3.2; sys_platform == \"darwin\"\nfreetype-py==2.5.1\nuharfbuzz==0.43.0\nglyphsLib==6.9.5 # this is only required to run Tests/varLib/interpolatable_test.py\nlxml==5.3.0\nsympy==1.13.3\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.314453125,
          "content": "[bumpversion]\ncurrent_version = 4.55.4.dev0\ncommit = True\ntag = False\ntag_name = {new_version}\nparse = (?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<release>[a-z]+)(?P<dev>\\d+))?\nserialize = \n\t{major}.{minor}.{patch}.{release}{dev}\n\t{major}.{minor}.{patch}\n\n[bumpversion:part:release]\noptional_value = final\nvalues = \n\tdev\n\tfinal\n\n[bumpversion:part:dev]\n\n[bumpversion:file:Lib/fontTools/__init__.py]\nsearch = __version__ = \"{current_version}\"\nreplace = __version__ = \"{new_version}\"\n\n[bumpversion:file:setup.py]\nsearch = version=\"{current_version}\"\nreplace = version=\"{new_version}\"\n\n[metadata]\nlicense_files = LICENSE\n\n[tool:pytest]\nminversion = 7.0.0\ntestpaths = \n\tTests\n\tfontTools\npython_files = \n\t*_test.py\npython_classes = \n\t*Test\naddopts = \n\t-r a\n\t--doctest-modules\n\t--doctest-ignore-import-errors\n\t--pyargs\ndoctest_optionflags = \n\tALLOW_UNICODE\n\tELLIPSIS\nfilterwarnings = \n\tignore:readPlist:DeprecationWarning:plistlib_test\n\tignore:writePlist:DeprecationWarning:plistlib_test\n\tignore:some_function:DeprecationWarning:fontTools.ufoLib.utils\n\tignore::DeprecationWarning:fontTools.varLib.designspace\nmarkers = \n\tslow: marks tests as slow (deselect with '-m \"not slow\"')\n\n[tool:interrogate]\nignore-semiprivate = true\nignore-private = true\nignore-nested-functions = true\nignore-regex = ^(from|to)XML$,^(de)?compile$\nignore-module = true\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 17.8427734375,
          "content": "#! /usr/bin/env python3\n\nfrom __future__ import print_function\nimport io\nimport sys\nimport os\nfrom os.path import isfile, join as pjoin\nfrom glob import glob\nfrom setuptools import setup, find_packages, Command, Extension\nfrom setuptools.command.build_ext import build_ext as _build_ext\nfrom setuptools.errors import SetupError\nfrom distutils import log\nfrom distutils.util import convert_path\nimport subprocess as sp\nimport contextlib\nimport re\n\n# Force distutils to use py_compile.compile() function with 'doraise' argument\n# set to True, in order to raise an exception on compilation errors\nimport py_compile\n\norig_py_compile = py_compile.compile\n\n\ndef doraise_py_compile(file, cfile=None, dfile=None, doraise=False):\n    orig_py_compile(file, cfile=cfile, dfile=dfile, doraise=True)\n\n\npy_compile.compile = doraise_py_compile\n\nsetup_requires = []\n\nif {\"bdist_wheel\"}.intersection(sys.argv):\n    setup_requires.append(\"wheel\")\n\nif {\"release\"}.intersection(sys.argv):\n    setup_requires.extend([\"bump2version\", \"readme_renderer\"])\n\ntry:\n    __import__(\"cython\")\nexcept ImportError:\n    has_cython = False\nelse:\n    has_cython = True\n\nenv_with_cython = os.environ.get(\"FONTTOOLS_WITH_CYTHON\")\nwith_cython = (\n    True\n    if env_with_cython in {\"1\", \"true\", \"yes\"}\n    else False if env_with_cython in {\"0\", \"false\", \"no\"} else None\n)\n# --with-cython/--without-cython options override environment variables\nopt_with_cython = {\"--with-cython\"}.intersection(sys.argv)\nopt_without_cython = {\"--without-cython\"}.intersection(sys.argv)\nif opt_with_cython and opt_without_cython:\n    sys.exit(\n        \"error: the options '--with-cython' and '--without-cython' are \"\n        \"mutually exclusive\"\n    )\nelif opt_with_cython:\n    sys.argv.remove(\"--with-cython\")\n    with_cython = True\nelif opt_without_cython:\n    sys.argv.remove(\"--without-cython\")\n    with_cython = False\n\nif with_cython and not has_cython:\n    setup_requires.append(\"cython\")\n\next_modules = []\nif with_cython is True or (with_cython is None and has_cython):\n    ext_modules.append(\n        Extension(\"fontTools.cu2qu.cu2qu\", [\"Lib/fontTools/cu2qu/cu2qu.py\"]),\n    )\n    ext_modules.append(\n        Extension(\"fontTools.qu2cu.qu2cu\", [\"Lib/fontTools/qu2cu/qu2cu.py\"]),\n    )\n    ext_modules.append(\n        Extension(\"fontTools.misc.bezierTools\", [\"Lib/fontTools/misc/bezierTools.py\"]),\n    )\n    ext_modules.append(\n        Extension(\"fontTools.pens.momentsPen\", [\"Lib/fontTools/pens/momentsPen.py\"]),\n    )\n    ext_modules.append(\n        Extension(\"fontTools.varLib.iup\", [\"Lib/fontTools/varLib/iup.py\"]),\n    )\n    ext_modules.append(\n        Extension(\"fontTools.feaLib.lexer\", [\"Lib/fontTools/feaLib/lexer.py\"]),\n    )\n\nextras_require = {\n    # for fontTools.ufoLib: to read/write UFO fonts\n    \"ufo\": [\n        \"fs >= 2.2.0, < 3\",\n    ],\n    # for fontTools.misc.etree and fontTools.misc.plistlib: use lxml to\n    # read/write XML files (faster/safer than built-in ElementTree)\n    \"lxml\": [\n        \"lxml >= 4.0\",\n    ],\n    # for fontTools.sfnt and fontTools.woff2: to compress/uncompress\n    # WOFF 1.0 and WOFF 2.0 webfonts.\n    \"woff\": [\n        \"brotli >= 1.0.1; platform_python_implementation == 'CPython'\",\n        \"brotlicffi >= 0.8.0; platform_python_implementation != 'CPython'\",\n        \"zopfli >= 0.1.4\",\n    ],\n    # for fontTools.unicode and fontTools.unicodedata: to use the latest version\n    # of the Unicode Character Database instead of the built-in unicodedata\n    # which varies between python versions and may be outdated.\n    \"unicode\": [\n        (\"unicodedata2 >= 15.1.0; python_version <= '3.12'\"),\n    ],\n    # for graphite type tables in ttLib/tables (Silf, Glat, Gloc)\n    \"graphite\": [\"lz4 >= 1.7.4.2\"],\n    # for fontTools.interpolatable: to solve the \"minimum weight perfect\n    # matching problem in bipartite graphs\" (aka Assignment problem)\n    \"interpolatable\": [\n        # use pure-python alternative on pypy\n        \"scipy; platform_python_implementation != 'PyPy'\",\n        \"munkres; platform_python_implementation == 'PyPy'\",\n        # to output PDF or HTML reports. NOTE: wheels are only available for\n        # windows currently, other platforms will need to build from source.\n        \"pycairo\",\n    ],\n    # for fontTools.varLib.plot, to visualize DesignSpaceDocument and resulting\n    # VariationModel\n    \"plot\": [\n        # TODO: figure out the minimum version of matplotlib that we need\n        \"matplotlib\",\n    ],\n    # for fontTools.misc.symfont, module for symbolic font statistics analysis\n    \"symfont\": [\n        \"sympy\",\n    ],\n    # To get file creator and type of Macintosh PostScript Type 1 fonts (macOS only)\n    \"type1\": [\n        \"xattr; sys_platform == 'darwin'\",\n    ],\n    # for fontTools.ttLib.removeOverlaps, to remove overlaps in TTF fonts\n    \"pathops\": [\n        \"skia-pathops >= 0.5.0\",\n    ],\n    # for packing GSUB/GPOS tables with Harfbuzz repacker\n    \"repacker\": [\n        \"uharfbuzz >= 0.23.0\",\n    ],\n}\n# use a special 'all' key as shorthand to includes all the extra dependencies\nextras_require[\"all\"] = sum(extras_require.values(), [])\n\n\n# Trove classifiers for PyPI\nclassifiers = {\n    \"classifiers\": [\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Console\",\n        \"Environment :: Other Environment\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: End Users/Desktop\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Natural Language :: English\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Programming Language :: Python :: 3\",\n        \"Topic :: Text Processing :: Fonts\",\n        \"Topic :: Multimedia :: Graphics\",\n        \"Topic :: Multimedia :: Graphics :: Graphics Conversion\",\n    ]\n}\n\n\n# concatenate README.rst and NEWS.rest into long_description so they are\n# displayed on the FontTols project page on PyPI\nwith io.open(\"README.rst\", \"r\", encoding=\"utf-8\") as readme:\n    long_description = readme.read()\nlong_description += \"\\nChangelog\\n~~~~~~~~~\\n\\n\"\nwith io.open(\"NEWS.rst\", \"r\", encoding=\"utf-8\") as changelog:\n    long_description += changelog.read()\n\n\n@contextlib.contextmanager\ndef capture_logger(name):\n    \"\"\"Context manager to capture a logger output with a StringIO stream.\"\"\"\n    import logging\n\n    logger = logging.getLogger(name)\n    try:\n        import StringIO\n\n        stream = StringIO.StringIO()\n    except ImportError:\n        stream = io.StringIO()\n    handler = logging.StreamHandler(stream)\n    logger.addHandler(handler)\n    try:\n        yield stream\n    finally:\n        logger.removeHandler(handler)\n\n\nclass release(Command):\n    \"\"\"\n    Tag a new release with a single command, using the 'bumpversion' tool\n    to update all the version strings in the source code.\n    The version scheme conforms to 'SemVer' and PEP 440 specifications.\n\n    Firstly, the pre-release '.devN' suffix is dropped to signal that this is\n    a stable release. If '--major' or '--minor' options are passed, the\n    the first or second 'semver' digit is also incremented. Major is usually\n    for backward-incompatible API changes, while minor is used when adding\n    new backward-compatible functionalities. No options imply 'patch' or bug-fix\n    release.\n\n    A new header is also added to the changelog file (\"NEWS.rst\"), containing\n    the new version string and the current 'YYYY-MM-DD' date.\n\n    All changes are committed, and an annotated git tag is generated. With the\n    --sign option, the tag is GPG-signed with the user's default key.\n\n    Finally, the 'patch' part of the version string is bumped again, and a\n    pre-release suffix '.dev0' is appended to mark the opening of a new\n    development cycle.\n\n    Links:\n    - http://semver.org/\n    - https://www.python.org/dev/peps/pep-0440/\n    - https://github.com/c4urself/bump2version\n    \"\"\"\n\n    description = \"update version strings for release\"\n\n    user_options = [\n        (\"major\", None, \"bump the first digit (incompatible API changes)\"),\n        (\"minor\", None, \"bump the second digit (new backward-compatible features)\"),\n        (\"sign\", \"s\", \"make a GPG-signed tag, using the default key\"),\n        (\"allow-dirty\", None, \"don't abort if working directory is dirty\"),\n    ]\n\n    changelog_name = \"NEWS.rst\"\n    version_RE = re.compile(r\"^[0-9]+\\.[0-9]+\")\n    date_fmt = \"%Y-%m-%d\"\n    header_fmt = \"%s (released %s)\"\n    commit_message = \"Release {new_version}\"\n    tag_name = \"{new_version}\"\n    version_files = [\n        \"setup.cfg\",\n        \"setup.py\",\n        \"Lib/fontTools/__init__.py\",\n    ]\n\n    def initialize_options(self):\n        self.minor = False\n        self.major = False\n        self.sign = False\n        self.allow_dirty = False\n\n    def finalize_options(self):\n        if all([self.major, self.minor]):\n            from distutils.errors import DistutilsOptionError\n\n            raise DistutilsOptionError(\"--major/--minor are mutually exclusive\")\n        self.part = \"major\" if self.major else \"minor\" if self.minor else None\n\n    def check_long_description_syntax(self):\n        import readme_renderer.rst\n\n        result = readme_renderer.rst.render(long_description, stream=sys.stderr)\n        if result is None:\n            raise SetupError(\n                \"`long_description` has syntax errors in markup\"\n                \" and would not be rendered on PyPI.\"\n            )\n\n    def run(self):\n        self.check_long_description_syntax()\n\n        if self.part is not None:\n            log.info(\"bumping '%s' version\" % self.part)\n            self.bumpversion(self.part, commit=False)\n            release_version = self.bumpversion(\n                \"release\", commit=False, allow_dirty=True\n            )\n        else:\n            log.info(\"stripping pre-release suffix\")\n            release_version = self.bumpversion(\"release\")\n        log.info(\"  version = %s\" % release_version)\n\n        changes = self.format_changelog(release_version)\n\n        self.git_commit(release_version)\n        self.git_tag(release_version, changes, self.sign)\n\n        log.info(\"bumping 'patch' version and pre-release suffix\")\n        next_dev_version = self.bumpversion(\"patch\", commit=True)\n        log.info(\"  version = %s\" % next_dev_version)\n\n    def git_commit(self, version):\n        \"\"\"Stage and commit all relevant version files, and format the commit\n        message with specified 'version' string.\n        \"\"\"\n        files = self.version_files + [self.changelog_name]\n\n        log.info(\"committing changes\")\n        for f in files:\n            log.info(\"  %s\" % f)\n        if self.dry_run:\n            return\n        sp.check_call([\"git\", \"add\"] + files)\n        msg = self.commit_message.format(new_version=version)\n        sp.check_call([\"git\", \"commit\", \"-m\", msg], stdout=sp.PIPE)\n\n    def git_tag(self, version, message, sign=False):\n        \"\"\"Create annotated git tag with given 'version' and 'message'.\n        Optionally 'sign' the tag with the user's GPG key.\n        \"\"\"\n        log.info(\n            \"creating %s git tag '%s'\" % (\"signed\" if sign else \"annotated\", version)\n        )\n        if self.dry_run:\n            return\n        # create an annotated (or signed) tag from the new version\n        tag_opt = \"-s\" if sign else \"-a\"\n        tag_name = self.tag_name.format(new_version=version)\n        proc = sp.Popen([\"git\", \"tag\", tag_opt, \"-F\", \"-\", tag_name], stdin=sp.PIPE)\n        # use the latest changes from the changelog file as the tag message\n        tag_message = \"%s\\n\\n%s\" % (tag_name, message)\n        proc.communicate(tag_message.encode(\"utf-8\"))\n        if proc.returncode != 0:\n            sys.exit(proc.returncode)\n\n    def bumpversion(self, part, commit=False, message=None, allow_dirty=None):\n        \"\"\"Run bumpversion.main() with the specified arguments, and return the\n        new computed version string (cf. 'bumpversion --help' for more info)\n        \"\"\"\n        import bumpversion.cli\n\n        args = (\n            ([\"--verbose\"] if self.verbose > 1 else [])\n            + ([\"--dry-run\"] if self.dry_run else [])\n            + ([\"--allow-dirty\"] if (allow_dirty or self.allow_dirty) else [])\n            + ([\"--commit\"] if commit else [\"--no-commit\"])\n            + ([\"--message\", message] if message is not None else [])\n            + [\"--list\", part]\n        )\n        log.debug(\"$ bumpversion %s\" % \" \".join(a.replace(\" \", \"\\\\ \") for a in args))\n\n        with capture_logger(\"bumpversion.list\") as out:\n            bumpversion.cli.main(args)\n\n        last_line = out.getvalue().splitlines()[-1]\n        new_version = last_line.replace(\"new_version=\", \"\")\n        return new_version\n\n    def format_changelog(self, version):\n        \"\"\"Write new header at beginning of changelog file with the specified\n        'version' and the current date.\n        Return the changelog content for the current release.\n        \"\"\"\n        from datetime import datetime\n\n        log.info(\"formatting changelog\")\n\n        changes = []\n        with io.open(self.changelog_name, \"r+\", encoding=\"utf-8\") as f:\n            for ln in f:\n                if self.version_RE.match(ln):\n                    break\n                else:\n                    changes.append(ln)\n            if not self.dry_run:\n                f.seek(0)\n                content = f.read()\n                date = datetime.today().strftime(self.date_fmt)\n                f.seek(0)\n                header = self.header_fmt % (version, date)\n                f.write(header + \"\\n\" + \"-\" * len(header) + \"\\n\\n\" + content)\n\n        return \"\".join(changes)\n\n\ndef find_data_files(manpath=\"share/man\"):\n    \"\"\"Find FontTools's data_files (just man pages at this point).\n\n    By default, we install man pages to \"share/man\" directory relative to the\n    base installation directory for data_files. The latter can be changed with\n    the --install-data option of 'setup.py install' sub-command.\n\n    E.g., if the data files installation directory is \"/usr\", the default man\n    page installation directory will be \"/usr/share/man\".\n\n    You can override this via the $FONTTOOLS_MANPATH environment variable.\n\n    E.g., on some BSD systems man pages are installed to 'man' instead of\n    'share/man'; you can export $FONTTOOLS_MANPATH variable just before\n    installing:\n\n    $ FONTTOOLS_MANPATH=\"man\" pip install -v .\n        [...]\n        running install_data\n        copying Doc/man/ttx.1 -> /usr/man/man1\n\n    When installing from PyPI, for this variable to have effect you need to\n    force pip to install from the source distribution instead of the wheel\n    package (otherwise setup.py is not run), by using the --no-binary option:\n\n    $ FONTTOOLS_MANPATH=\"man\" pip install --no-binary=fonttools fonttools\n\n    Note that you can only override the base man path, i.e. without the\n    section number (man1, man3, etc.). The latter is always implied to be 1,\n    for \"general commands\".\n    \"\"\"\n\n    # get base installation directory for man pages\n    manpagebase = os.environ.get(\"FONTTOOLS_MANPATH\", convert_path(manpath))\n    # all our man pages go to section 1\n    manpagedir = pjoin(manpagebase, \"man1\")\n\n    manpages = [f for f in glob(pjoin(\"Doc\", \"man\", \"man1\", \"*.1\")) if isfile(f)]\n\n    data_files = [(manpagedir, manpages)]\n    return data_files\n\n\nclass cython_build_ext(_build_ext):\n    \"\"\"Compile *.pyx source files to *.c using cythonize if Cython is\n    installed and there is a working C compiler, else fall back to pure python dist.\n    \"\"\"\n\n    def finalize_options(self):\n        from Cython.Build import cythonize\n\n        # optionally enable line tracing for test coverage support\n        linetrace = os.environ.get(\"CYTHON_TRACE\") == \"1\"\n\n        self.distribution.ext_modules[:] = cythonize(\n            self.distribution.ext_modules,\n            force=linetrace or self.force,\n            annotate=os.environ.get(\"CYTHON_ANNOTATE\") == \"1\",\n            quiet=not self.verbose,\n            compiler_directives={\n                \"linetrace\": linetrace,\n                \"language_level\": 3,\n                \"embedsignature\": True,\n            },\n        )\n\n        _build_ext.finalize_options(self)\n\n    def build_extensions(self):\n        try:\n            _build_ext.build_extensions(self)\n        except Exception as e:\n            if with_cython:\n                raise\n            from distutils.errors import DistutilsModuleError\n\n            # optional compilation failed: we delete 'ext_modules' and make sure\n            # the generated wheel is 'pure'\n            del self.distribution.ext_modules[:]\n            try:\n                bdist_wheel = self.get_finalized_command(\"bdist_wheel\")\n            except DistutilsModuleError:\n                # 'bdist_wheel' command not available as wheel is not installed\n                pass\n            else:\n                bdist_wheel.root_is_pure = True\n            log.error(\"error: building extensions failed: %s\" % e)\n\n\ncmdclass = {\"release\": release}\n\nif ext_modules:\n    cmdclass[\"build_ext\"] = cython_build_ext\n\n\nsetup_params = dict(\n    name=\"fonttools\",\n    version=\"4.55.4.dev0\",\n    description=\"Tools to manipulate font files\",\n    author=\"Just van Rossum\",\n    author_email=\"just@letterror.com\",\n    maintainer=\"Behdad Esfahbod\",\n    maintainer_email=\"behdad@behdad.org\",\n    url=\"http://github.com/fonttools/fonttools\",\n    license=\"MIT\",\n    platforms=[\"Any\"],\n    python_requires=\">=3.8\",\n    long_description=long_description,\n    package_dir={\"\": \"Lib\"},\n    packages=find_packages(\"Lib\"),\n    include_package_data=True,\n    data_files=find_data_files(),\n    ext_modules=ext_modules,\n    setup_requires=setup_requires,\n    extras_require=extras_require,\n    entry_points={\n        \"console_scripts\": [\n            \"fonttools = fontTools.__main__:main\",\n            \"ttx = fontTools.ttx:main\",\n            \"pyftsubset = fontTools.subset:main\",\n            \"pyftmerge = fontTools.merge:main\",\n        ]\n    },\n    cmdclass=cmdclass,\n    **classifiers,\n)\n\n\nif __name__ == \"__main__\":\n    setup(**setup_params)\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 2.7255859375,
          "content": "[tox]\nminversion = 3.0\nenvlist = lint, py3{8,9,10,11,12,13}-cov, htmlcov\nskip_missing_interpreters=true\n\n[testenv]\nsetenv =\n    cy: FONTTOOLS_WITH_CYTHON=1\n# use 'download = true' to have tox install the latest pip inside the virtualenv.\n# We need this to be able to install skia-pathops on Linux, which uses a\n# relatively recent 'manylinux2014' platform tag.\n# https://github.com/tox-dev/tox/issues/791#issuecomment-518713438\ndownload = true\n# building lxml from source takes too long on CI, force it to download pre-compiled\n# wheel or fail if none is found with --only-binary=lxml\ninstall_command = python -m pip install --only-binary=lxml {opts} {packages}\n# exclude pytest 8.0.{1,2} because our tests mysteriously fail with those\n# https://github.com/fonttools/fonttools/issues/3458\ndeps =\n    cov: coverage>=4.3\n    pytest>=7.0.0,!=8.0.1,!=8.0.2\n    pytest-randomly\n    # add -noextra to tox -e to skip installing extras and only test the core fonttools\n    !noextra: -rrequirements.txt\ncommands =\n    cy: python -c \"from fontTools.cu2qu.cu2qu import COMPILED; assert COMPILED\"\n    !cy: python -c \"from fontTools.cu2qu.cu2qu import COMPILED; assert not COMPILED\"\n    # test with or without coverage, passing extra positonal args to pytest\n    cov: coverage run --parallel-mode -m pytest {posargs}\n    !cov: pytest {posargs:Tests fontTools}\n\n[testenv:htmlcov]\ndeps =\n    coverage>=4.3\nskip_install = true\ncommands =\n    coverage combine\n    coverage html\n\n[testenv:lint]\ndeps =\n    -r dev-requirements.txt\nskip_install = true\ncommands =\n    black --check --diff .\n    mypy\n\n[testenv:codecov]\npassenv = *\ndeps =\n    coverage>=4.3\n    codecov\nskip_install = true\nignore_outcome = true\ncommands =\n    coverage combine\n    codecov --env TOXENV\n\n[testenv:package_readme]\ndescription = check that the long description is valid (need for PyPi)\ndeps = twine >= 1.12.1\n       pip >= 18.0.0\nskip_install = true\nextras =\ncommands = pip wheel -w {envtmpdir}/build --no-deps .\n           twine check {envtmpdir}/build/*\n\n[testenv:bdist]\ndeps =\n    setuptools\n    wheel\nskip_install = true\ninstall_command =\n    # make sure we use the latest setuptools and wheel\n    pip install --upgrade {opts} {packages}\nwhitelist_externals =\n    rm\ncommands =\n    # clean up build/ and dist/ folders\n    python -c 'import shutil; shutil.rmtree(\"dist\", ignore_errors=True)'\n    python setup.py clean --all\n    # build sdist\n    python setup.py sdist --dist-dir {toxinidir}/dist\n    # build wheel from sdist\n    pip wheel -v --no-deps --no-index --wheel-dir {toxinidir}/dist --find-links {toxinidir}/dist fonttools\n\n[testenv:pypi]\ndeps =\n    {[testenv:bdist]deps}\n    twine\nskip_install = true\npassenv = TWINE_USERNAME TWINE_PASSWORD\ncommands =\n    {[testenv:bdist]commands}\n    twine upload dist/*.whl dist/*.zip\n"
        }
      ]
    }
  ]
}