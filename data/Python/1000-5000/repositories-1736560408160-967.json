{
  "metadata": {
    "timestamp": 1736560408160,
    "page": 967,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "awesto/django-shop",
      "stars": 3229,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0634765625,
          "content": "[run]\nbranch = True\nsource = shop\n\n[report]\nshow_missing = True\n\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.091796875,
          "content": "*\n!email_auth/\n!example/\n!shop/\n!requirements/\n!setup.py\n!README.md\n!LICENSE.txt\n!MANIFEST.in\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4599609375,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = false\ntrim_trailing_whitespace = false\n\n# Set default charset\n[*.{js,py,rst,json,yml,html,txt,scss}]\ncharset = utf-8\n\n[*.{js,py,rst,yml,html,scss}]\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{py}]\nline_length=119\nindent_style = space\nindent_size = 4\n\n[*.{html,js,rst,scss}]\nindent_style = tab\nindent_size = 4\n\n[*.{rst}]\nline_length=100\n\n[*.{json,yml,css}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.322265625,
          "content": "*.pyc\n.project\n.pydevproject\n.settings\n.tox/\n.cache\n*.coverage\n*~\nprivate_settings.py\nbuild\ndocs/_build\ndocs/web_build\ndist\n*egg-info*\nhtmlcov\ntest-reports\nbin/\ninclude/\nlib/\ndistribute*\nshare/\n*.sqlite\ndatabase.db\n*.swp\n.DS_store\n*coverage.xml\n.idea\n.ropeproject\nOLD-out-of-date\n.tox\nnode_modules/\nworkdir/\ndjango-shop-workdir_*\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4970703125,
          "content": "dist: xenial\n\nlanguage: python\n\npython:\n  - 3.6\n  - 3.7\n  - 3.8\n\nenv:\n  - DJANGOVER=django21\n  - DJANGOVER=django22\n  - DJANGOVER=django30\n\ninstall:\n  - pip install tox\n\nscript:\n  - \"if [[ $TRAVIS_PYTHON_VERSION == '3.6' && $DJANGOVER ]]; then export TOX_ENV=py36-$DJANGOVER; fi\"\n  - \"if [[ $TRAVIS_PYTHON_VERSION == '3.7' && $DJANGOVER ]]; then export TOX_ENV=py37-$DJANGOVER; fi\"\n  - \"if [[ $TRAVIS_PYTHON_VERSION == '3.8' && $DJANGOVER ]]; then export TOX_ENV=py38-$DJANGOVER; fi\"\n  - tox -r -e \"$TOX_ENV\"\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.5166015625,
          "content": "Copyright (c) 2008, Christopher Glass\nCopyright (c) 2016, Jacob Rief\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\n      copyright notice, this list of conditions and the following\n      disclaimer in the documentation and/or other materials provided\n      with the distribution.\n    * Neither the name of the author nor the names of other\n      contributors may be used to endorse or promote products derived\n      from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2314453125,
          "content": "include LICENSE.txt\ninclude README.md\ninclude setup.py\ninclude package.json\nrecursive-include email_auth *.py\nrecursive-include shop *.py\nrecursive-include shop/static *\nrecursive-include shop/templates *\nrecursive-include shop/locale *\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.9482421875,
          "content": "# django-SHOP\n\n**Django-SHOP** aims to be a the easy, fun and fast e-commerce counterpart to\n[django-CMS](https://www.django-cms.org/).\n\n[![Build Status](https://travis-ci.org/awesto/django-shop.svg?branch=master)](https://travis-ci.org/awesto/django-shop?branch=master)\n[![PyPI version](https://img.shields.io/pypi/v/django-shop.svg)](https://pypi.python.org/pypi/django-shop)\n[![Python versions](https://img.shields.io/pypi/pyversions/django-shop.svg)](https://pypi.python.org/pypi/django-shop)\n[![Join the chat at https://gitter.im/awesto/django-shop](https://badges.gitter.im/awesto/django-shop.svg)](https://gitter.im/awesto/django-shop?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Software license](https://img.shields.io/pypi/l/django-shop.svg)](https://pypi.python.org/pypi/django-shop)\n[![Twitter Follow](https://img.shields.io/twitter/follow/djangoSHOP.svg?style=social&label=djangoSHOP)](https://twitter.com/djangoSHOP)\n\nHere you can find the [full documentation for django-SHOP](https://django-shop.readthedocs.io/en/latest/).\n\n## Build the database model out of the product's properties – not vice versa\n\nMost e-commerce systems are shipped with a predefined database model for products. But products can\nvary a lot, and it simply is impossible to create a model which fits for all of them. This is\nesspecially true for products with a hierarchy of variants. In many popular e-commerce platforms,\nyou either have far too many attributes per product, and/or the really required attributes are\nmissing.\n\nIn **django-SHOP** implementations, the product models reflect their pysical properties making it\npossible to create complete and deep hierarchies of variations, but without having to fiddle with\nunneeded properties. It furthermore avoids the need for an\n[Entity Attribute Value Model](https://en.wikipedia.org/wiki/Entity–attribute–value_model), which\nis considered a database anti-pattern, because it produces far too many table joins, when filtering\nby property.\n\n\n## Don't build pages using hard-coded templates – compose them\n\nWith the advent of frameworks, such as Angular, React, Vue and Aurelia, building web-applications\nshifted from a page-centric to a component-based approach.\n\nIn **django-SHOP**, you are in full control over the page's layout, since all components are\nencapsulated and independent from each other. This means that instead of adopting the Catalog, Cart,\nCheckout and Order pages, use the **django-CMS** plugin system to compose everything required for\nthose pages.\n\n\n## All Views are either HTML or RESTful services\n\nBrowser based navigation is important, but nowadays it's only one of many channels clients use to\ncommunicate with a web-server. Consider Single Page Applications or other native clients, where we\nuse RESTful APIs instead of pure HTTP.\n\nThis substantially reduces the payload having to be transferred. It furthermore gives the client a\nsmoother user experience, since only the content has to be updated, rather than having to do full\npage reloads.\n\n\n## Programmable cart modifiers\n\nDuring checkout, taxes have to be applied or attributed. Depending on the shipping destination, the\nproduct group and other factors, this computation can either be simple or quite demanding.\n**Django-SHOP** offers a pluggable interface to create modifiers which calculate the cart's totals,\ntaxes and other costs.\n\nThis same interface can be extended to compute the weight and shipping costs. It also can be used\nfor subtracting discounts or to add additional charges. \n\n\n## Programmable workflow for fulfilment and delivery\n\nFulfilling and shipping orders probably requires the most individual adaption for an e-commerce business. \n**Django-SHOP** offers a programmable interface for order by using a finite\nstate machine to adopt the workflow. Each order may have several states, but the only actions\nallowed are limited to explicitly defined state transitions.\n\n\n## It's modular\n\nWhenever possible, extra features should be added by third party libraries. This implies that\n**django-SHOP** aims to provide an API, which allows merchants to add every feature they desire.\n\nCurrently there are third party libraries for several Payment Service Providers, such as\n[PayPal](https://developer.paypal.com/docs/api/overview/), [Stripe](https://stripe.com/docs/api),\n[BS-PayOne](https://www.bspayone.com/DE/en) and [Viveum](https://www.viveum.com/?lang=en).\nAn open interface allows you to add any other provider.\n\nShipping Service Providers may be added as third party library as well. With\n[SendCloud](https://docs.sendcloud.sc/), ship your orders using one or more parcel services\navailable for your region.\n\n\n## Start by building your own demo\n\nInstead of providing an accessible online demo, **django-SHOP** can be set up in less than three\nminutes and preconfigured to your needs. Having access to the product models, you can immediatly\nstart to play arround with, rename, and modify them to reflect the properties of your products.\nThis is the easiest way to get a shop up and running out of the box with the flexibility of a\nwebsite that you could have built from scratch.\n\nIf you want to start with a fresh demo, please use the prepared\n[Cookiecutter template for django-SHOP](https://github.com/awesto/cookiecutter-django-shop)\nand follow the instructions. \n\n\n## Audience of django-SHOP users\n\nSpecifically, we aim at providing a clean, modular and Pythonic/Djangonic implementation of an\ne-commerce framework, that a moderately experienced Django developer should be able to pick up\nand run easily. Pure Django models are used to describe each product type, and so the Django admin\ncan be used to build a minimalistic editor for each of them.\n\n\n## Consultancy\n\nWe provide full consultancy support and are available for building complete e-commerce systems based\non **django-SHOP**. Please contact office@awesto.com for further questions.\n\n\n## Documentation\n\nRead the full documentation on Read-the-docs:\n\n[https://django-shop.readthedocs.io/en/latest/](https://django-shop.readthedocs.io/en/latest/)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "email_auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.072265625,
          "content": "[pytest]\nDJANGO_SETTINGS_MODULE=testshop.settings\naddopts=-s --tb native \n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.025390625,
          "content": "[bdist_wheel]\nuniversal=1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.732421875,
          "content": "#!/usr/bin/env python\nfrom setuptools import setup, find_packages\nimport shop\n\nwith open('README.md', 'r') as fh:\n    long_description = fh.read()\n\nREQUIREMENTS = [\n    'Django>=2.1,<3.1',\n    'django-filer>=1.7',\n    'django-ipware',\n    'django-fsm>=2.7',\n    'django-fsm-admin',\n    'djangorestframework>=3.9,<4',\n    'django-rest-auth',\n    'django-angular',\n    'Django-Select2',\n    'django-rest-auth',\n    'django-admin-sortable2',\n    'django-formtools',\n    'django_polymorphic',\n    'django-post_office',\n    'django-cms>=3.7',\n    'djangocms-cascade>=1.3,<2',\n]\n\nCLASSIFIERS = [\n    'Environment :: Web Environment',\n    'Framework :: Django',\n    'Intended Audience :: Developers',\n    'License :: OSI Approved :: BSD License',\n    'Operating System :: OS Independent',\n    'Programming Language :: Python',\n    'Programming Language :: Python :: 3.6',\n    'Programming Language :: Python :: 3.7',\n    'Programming Language :: Python :: 3.8',\n    'Framework :: Django',\n    'Framework :: Django :: 2.1',\n    'Framework :: Django :: 2.2',\n    'Framework :: Django :: 3.0',\n    'Topic :: Software Development :: Libraries :: Application Frameworks',\n    'Topic :: Internet :: WWW/HTTP :: Dynamic Content',\n]\n\nsetup(\n    author=\"Jacob Rief\",\n    author_email=\"jacob.rief@gmail.com\",\n    name=\"django-shop\",\n    version=shop.__version__,\n    description=\"A RESTful e-commerce framework based on Django\",\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    url='http://www.django-shop.org/',\n    license='BSD License',\n    platforms=['OS Independent'],\n    classifiers=CLASSIFIERS,\n    packages=find_packages(exclude=['tests', 'docs']),\n    include_package_data=True,\n    zip_safe=False,\n    install_requires=REQUIREMENTS,\n)\n"
        },
        {
          "name": "shop",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.4453125,
          "content": "[tox]\nenvlist = py{36,37,38}-django{21,22,30}\n\n[testenv]\nchangedir = tests\ncommands = \n    pip install --no-deps -r requirements.txt\n    python manage.py makemigrations testshop\n    py.test {posargs}\ndeps =\n    django21: Django>=2.1,<2.2\n    django22: Django>=2.2,<3.0\n    django30: Django>=3.0,<3.1\n    django{21,22}: djangocms-text-ckeditor\n    django30: https://github.com/jrief/djangocms-text-ckeditor/archive/patch-1.zip\nsetenv =\n    DJANGO_DEBUG = 1\n"
        }
      ]
    }
  ]
}