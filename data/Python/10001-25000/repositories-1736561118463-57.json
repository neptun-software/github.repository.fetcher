{
  "metadata": {
    "timestamp": 1736561118463,
    "page": 57,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yoheinakajima/babyagi",
      "stars": 20746,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.0556640625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n\n# Custom ignores\nfunztionz.db\nencryption_key.json\n"
        },
        {
          "name": ".replit",
          "type": "blob",
          "size": 0.3779296875,
          "content": "entrypoint = \"main.py\"\nmodules = [\"python-3.11\"]\n\n[nix]\nchannel = \"stable-24_05\"\n\n[unitTest]\nlanguage = \"python3\"\n\n[gitHubImport]\nrequiredFiles = [\".replit\", \"replit.nix\"]\n\n[deployment]\nrun = [\"python3\", \"main.py\"]\ndeploymentTarget = \"cloudrun\"\n\n[[ports]]\nlocalPort = 5000\nexternalPort = 5000\n\n[[ports]]\nlocalPort = 8000\nexternalPort = 8000\n\n[[ports]]\nlocalPort = 8080\nexternalPort = 80\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.0107421875,
          "content": "babyagi.org"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.5380859375,
          "content": "# Include the README and LICENSE\ninclude README.md\ninclude LICENSE\n\n# Include all package directories and their contents\nrecursive-include babyagi *\n\n# Include examples\nrecursive-include examples *\n\n# Exclude specific sensitive or unwanted files\nexclude encryption_key.json\nexclude funztionz.db\n\n# Exclude other unnecessary files\nglobal-exclude *.pyc\nglobal-exclude __pycache__/\n\n# Exclude .git and .gitignore\nglobal-exclude .git\nglobal-exclude .gitignore\n\n# Exclude .egg-info directory and files\nglobal-exclude *.egg-info\nglobal-exclude *.egg-info/*\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.560546875,
          "content": "# BabyAGI\n\n> [!NOTE]\n> The original BabyAGI from March 2023 introduced task planning as a method for developing autonomous agents. This project has been archived and moved to the [babyagi_archive](https://github.com/yoheinakajima/babyagi_archive) repo (September 2024 snapshot).\n\n> [!CAUTION]\n> This is a framework built by Yohei who has never held a job as a developer. The purpose of this repo is to share ideas and spark discussion and for experienced devs to play with. Not meant for production use. Use with cautioun.\n\n---\n\nThis newest BabyAGI is an experimental framework for a self-building autonomous agent. Earlier efforts to expand BabyAGI have made it clear that the optimal way to build a general autonomous agent is to build the simplest thing that can build itself.\n\nCheck out [this introductory X/Twitter thread](https://x.com/yoheinakajima/status/1840678823681282228) for a simple overview.\n\nThe core is a new function framework (**functionz**) for storing, managing, and executing functions from a database. It offers a graph-based structure for tracking imports, dependent functions, and authentication secrets, with automatic loading and comprehensive logging capabilities. Additionally, it comes with a dashboard for managing functions, running updates, and viewing logs.\n\n## Table of Contents\n\n- [Quick Start](#quick-start)\n- [Basic Usage](#basic-usage)\n- [Function Metadata](#function-metadata)\n- [Function Loading](#function-loading)\n- [Key Dependencies](#key-dependencies)\n- [Execution Environment](#execution-environment)\n  - [Log](#log)\n- [Dashboard](#dashboard)\n- [Pre-loaded Functions](#pre-loaded-functions)\n- [Future/Draft Features](#futuredraft-features)\n- [API Reference](#api-reference)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Quick Start\n\nTo quickly check out the dashboard and see how it works:\n\n1. **Install BabyAGI:**\n\n    ```bash\n    pip install babyagi\n    ```\n\n2. **Import BabyAGI and load the dashboard:**\n\n    ```python\n    import babyagi\n\n    if __name__ == \"__main__\":\n        app = babyagi.create_app('/dashboard')\n        app.run(host='0.0.0.0', port=8080)\n    ```\n\n3. **Navigate to the dashboard:**\n\n    Open your browser and go to `http://localhost:8080/dashboard` to access the BabyAGI dashboard.\n    \n## Basic Usage\n\nStart by importing `babyagi` and registering your functions. Here's how to register two functions, where one depends on the other:\n\n```python\nimport babyagi\n\n# Register a simple function\n@babyagi.register_function()\ndef world():\n    return \"world\"\n\n# Register a function that depends on 'world'\n@babyagi.register_function(dependencies=[\"world\"])\ndef hello_world():\n    x = world()\n    return f\"Hello {x}!\"\n\n# Execute the function\nprint(babyagi.hello_world())  # Output: Hello world!\n\nif __name__ == \"__main__\":\n    app = babyagi.create_app('/dashboard')\n    app.run(host='0.0.0.0', port=8080)\n```\n\n## Function Metadata\n\nFunctions can be registered with metadata to enhance their capabilities and manage their relationships. Here's a more comprehensive example of function metadata, showing logical usage of all fields:\n\n```python\nimport babyagi\n\n@babyagi.register_function(\n    imports=[\"math\"],\n    dependencies=[\"circle_area\"],\n    key_dependencies=[\"openai_api_key\"],\n    metadata={\n        \"description\": \"Calculates the volume of a cylinder using the circle_area function.\"\n    }\n)\ndef cylinder_volume(radius, height):\n    import math\n    area = circle_area(radius)\n    return area * height\n```\n\n**Available Metadata Fields:**\n\n- `imports`: List of external libraries the function depends on.\n- `dependencies`: List of other functions this function depends on.\n- `key_dependencies`: List of secret keys required by the function.\n- `metadata[\"description\"]`: A description of what the function does.\n\n## Function Loading\n\nIn addition to using `register_function`, you can use `load_function` to load plugins or draft packs of functions. BabyAGI comes with built-in function packs, or you can load your own packs by pointing to the file path.\n\nYou can find available function packs in `babyagi/functionz/packs`.\n\n**Loading Custom Function Packs:**\n\n```python\nimport babyagi\n\n# Load your custom function pack\nbabyagi.load_functions(\"path/to/your/custom_functions.py\")\n```\n\nThis approach makes function building and management easier by organizing related functions into packs.\n\n## Key Dependencies\n\nYou can store `key_dependencies` directly from your code or manage them via the dashboard.\n\n**Storing Key Dependencies from Code:**\n\n```python\nimport babyagi\n\n# Add a secret key\nbabyagi.add_key_wrapper('openai_api_key', 'your_openai_api_key')\n```\n\n**Adding Key Dependencies via Dashboard:**\n\nNavigate to the dashboard and use the **add_key_wrapper** feature to securely add your secret keys.\n\n## Execution Environment\n\nBabyAGI automatically loads essential function packs and manages their dependencies, ensuring a seamless execution environment. Additionally, it logs all activities, including the relationships between functions, to provide comprehensive tracking of function executions and dependencies.\n\n### Log\n\nBabyAGI implements a comprehensive logging system to track all function executions and their interactions. The logging mechanism ensures that every function call, including its inputs, outputs, execution time, and any errors, is recorded for monitoring and debugging purposes.\n\n**Key Logging Features:**\n\n- **Execution Tracking:** Logs when a function starts and finishes execution, including the function name, arguments, keyword arguments, and execution time.\n  \n- **Error Logging:** Captures and logs any errors that occur during function execution, providing detailed error messages for troubleshooting.\n\n- **Dependency Management:** Automatically resolves and logs dependencies between functions, ensuring that all required functions and libraries are loaded before execution.\n\n- **Trigger Logging:** Logs the execution of triggered functions, detailing which functions were triggered by others and their respective execution outcomes.\n\n- **Comprehensive Records:** Maintains a history of all function executions, enabling users to review past activities, understand function relationships, and analyze performance metrics.\n\n**How Triggers Work:**\n\nTriggers are mechanisms that allow certain functions to be automatically executed in response to specific events or actions within the system. For example, when a function is added or updated, a trigger can initiate the generation of a description for that function.\n\nTriggers enhance the autonomy of BabyAGI by enabling automated workflows and reducing the need for manual intervention. However, it's essential to manage triggers carefully to avoid unintended recursive executions or conflicts between dependent functions.\n\n## Dashboard\n\nThe BabyAGI dashboard offers a user-friendly interface for managing functions, monitoring executions, and handling configurations. Key features include:\n\n- **Function Management:** Register, deregister, and update functions directly from the dashboard.\n\n- **Dependency Visualization:** View and manage dependencies between functions to understand their relationships.\n\n- **Secret Key Management:** Add and manage secret keys securely through the dashboard interface.\n\n- **Logging and Monitoring:** Access comprehensive logs of function executions, including inputs, outputs, and execution times.\n\n- **Trigger Management:** Set up triggers to automate function executions based on specific events or conditions.\n\n**Accessing the Dashboard:**\n\nAfter running your application, navigate to `http://localhost:8080/dashboard` to access the BabyAGI dashboard.\n## Pre-loaded Functions Summary\n\nBabyAGI includes two pre-loaded function packs:\n\n1. **Default Functions (`packs/default_functions.py`):**\n   - **Function Execution:** Run, add, update, or retrieve functions and versions.\n   - **Key Management:** Add and retrieve secret keys.\n   - **Triggers:** Add triggers to execute functions based on others.\n   - **Logs:** Retrieve logs with optional filters.\n\n2. **AI Functions (`packs/ai_generator.py`):**\n   - **AI Description & Embeddings:** Auto-generate descriptions and embeddings for functions.\n   - **Function Selection:** Find or choose similar functions based on prompts.\n\n## Running a Self-Building Agent\n\nBabyAGI includes two experimental self-building agents, showcasing how the framework can help a self-building coding agent leverage existing functions to write new ones.\n\n### 1. `process_user_input` in the `code_writing_functions` pack\n\nThis function first determines whether to use an existing function or generate new ones. If new functions are needed, it breaks them down into smaller reusable components and combines them into a final function.\n\nTry this:\n\n~~~python\nimport babyagi\n\nbabyagi.add_key_wrapper('openai_api_key', os.environ['OPENAI_API_KEY'])\nbabyagi.load_functions(\"drafts/code_writing_functions\")\n\nbabyagi.process_user_input(\"Grab today's score from ESPN and email it to test@test.com\")\n~~~\n\nWhen you run this, you will see the functions being generated in the shell and new functions will be available in the dashboard once completed.\n\n### 2. `self_build` in the `self_build` pack\n\nThis function takes a user description and generates X distinct tasks that a user might ask an AI assistant. Each task is processed by `process_user_input`, creating new functions if no existing ones suffice.\n\nTry this:\n\n~~~python\nimport babyagi\n\nbabyagi.add_key_wrapper('openai_api_key', os.environ['OPENAI_API_KEY'])\nbabyagi.load_functions(\"drafts/code_writing_functions\")\nbabyagi.load_functions(\"drafts/self_build\")\n\nbabyagi.self_build(\"A sales person at an enterprise SaaS company.\", 3)\n~~~\n\nThis will generate 3 distinct tasks a salesperson might ask an AI assistant and create functions to handle those.\n\n*The functions will be generated and stored in the dashboard, but note that the generated code is minimal and may need improvement.\n\n![alt text](https://github.com/yoheinakajima/babyagi_staging/blob/main/self_build.png?raw=true)\n\n\n\n**Warning:** These draft features are experimental concepts and may not function as intended. They require significant improvements and should be used with caution.\n\n\n## Contributing\n\nContributions are greatly appreciatedly, but candidly I have not been great at managing PRs. Please be patient as things will move slow while I am working on this alone (on nights and weekends). I may start by building a small core crew before collaborating with a larger group.\n\nIf you are a dev, investor, friend of open-source and interesting supporting AI work I do, please fill [this form](https://forms.gle/UZLyT75HQULr8XNUA) (I have a few fun initiatives coming up!)\n\n## License\n\nBabyAGI is released under the MIT License. See the [LICENSE](LICENSE) file for more details.\n"
        },
        {
          "name": "babyagi",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 0.4091796875,
          "content": "import babyagi\nimport os\n\n\napp = babyagi.create_app('/dashboard')\n\n# Add OpenAI key to enable automated descriptions and embedding of functions.\nbabyagi.add_key_wrapper('openai_api_key',os.environ['OPENAI_API_KEY'])\n\n\n@app.route('/')\ndef home():\n    return f\"Welcome to the main app. Visit <a href=\\\"/dashboard\\\">/dashboard</a> for BabyAGI dashboard.\"\n\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', port=8080)\n"
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 15.2783203125,
          "content": "# This file is automatically @generated by Poetry 1.5.5 and should not be changed by hand.\n\n[[package]]\nname = \"antiorm\"\nversion = \"1.2.1\"\ndescription = \"A Pythonic Helper for DBAPI-2.0 SQL Access\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"antiorm-1.2.1.tar.gz\", hash = \"sha256:96eb1841ce5163db4cf1dc13f4499ec2d7cffc190cf724b78ffdd3e6b7c4ff93\"},\n]\n\n[[package]]\nname = \"blinker\"\nversion = \"1.8.2\"\ndescription = \"Fast, simple object-to-object and broadcast signaling\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"blinker-1.8.2-py3-none-any.whl\", hash = \"sha256:1779309f71bf239144b9399d06ae925637cf6634cf6bd131104184531bf67c01\"},\n    {file = \"blinker-1.8.2.tar.gz\", hash = \"sha256:8f77b09d3bf7c795e969e9486f39c2c5e9c39d4ee07424be2bc594ece9642d83\"},\n]\n\n[[package]]\nname = \"click\"\nversion = \"8.1.7\"\ndescription = \"Composable command line interface toolkit\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"click-8.1.7-py3-none-any.whl\", hash = \"sha256:ae74fb96c20a0277a1d615f1e4d73c8414f5a98db8b799a7931d1582f3390c28\"},\n    {file = \"click-8.1.7.tar.gz\", hash = \"sha256:ca9853ad459e787e2192211578cc907e7594e294c7ccc834310722b41b9ca6de\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\n\n[[package]]\nname = \"db\"\nversion = \"0.1.1\"\ndescription = \"Databases for Humans\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"db-0.1.1.tar.gz\", hash = \"sha256:980e772f15c1161d3b287ffec4f144e40961b0b3e6d5102809577870bf6c5808\"},\n]\n\n[package.dependencies]\nantiorm = \"*\"\n\n[[package]]\nname = \"flask\"\nversion = \"3.0.3\"\ndescription = \"A simple framework for building complex web applications.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"flask-3.0.3-py3-none-any.whl\", hash = \"sha256:34e815dfaa43340d1d15a5c3a02b8476004037eb4840b34910c6e21679d288f3\"},\n    {file = \"flask-3.0.3.tar.gz\", hash = \"sha256:ceb27b0af3823ea2737928a4d99d125a06175b8512c445cbd9a9ce200ef76842\"},\n]\n\n[package.dependencies]\nblinker = \">=1.6.2\"\nclick = \">=8.1.3\"\nitsdangerous = \">=2.1.2\"\nJinja2 = \">=3.1.2\"\nWerkzeug = \">=3.0.0\"\n\n[package.extras]\nasync = [\"asgiref (>=3.2)\"]\ndotenv = [\"python-dotenv\"]\n\n[[package]]\nname = \"itsdangerous\"\nversion = \"2.2.0\"\ndescription = \"Safely pass data to untrusted environments and back.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"itsdangerous-2.2.0-py3-none-any.whl\", hash = \"sha256:c6242fc49e35958c8b15141343aa660db5fc54d4f13a1db01a3f5891b98700ef\"},\n    {file = \"itsdangerous-2.2.0.tar.gz\", hash = \"sha256:e0050c0b7da1eea53ffaf149c0cfbb5c6e2e2b69c4bef22c81fa6eb73e5f6173\"},\n]\n\n[[package]]\nname = \"jinja2\"\nversion = \"3.1.4\"\ndescription = \"A very fast and expressive template engine.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"jinja2-3.1.4-py3-none-any.whl\", hash = \"sha256:bc5dd2abb727a5319567b7a813e6a2e7318c39f4f487cfe6c89c6f9c7d25197d\"},\n    {file = \"jinja2-3.1.4.tar.gz\", hash = \"sha256:4a3aee7acbbe7303aede8e9648d13b8bf88a429282aa6122a993f0ac800cb369\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=2.0\"\n\n[package.extras]\ni18n = [\"Babel (>=2.7)\"]\n\n[[package]]\nname = \"markupsafe\"\nversion = \"2.1.5\"\ndescription = \"Safely add untrusted strings to HTML/XML markup.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:a17a92de5231666cfbe003f0e4b9b3a7ae3afb1ec2845aadc2bacc93ff85febc\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:72b6be590cc35924b02c78ef34b467da4ba07e4e0f0454a2c5907f473fc50ce5\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e61659ba32cf2cf1481e575d0462554625196a1f2fc06a1c777d3f48e8865d46\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2174c595a0d73a3080ca3257b40096db99799265e1c27cc5a610743acd86d62f\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ae2ad8ae6ebee9d2d94b17fb62763125f3f374c25618198f40cbb8b525411900\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:075202fa5b72c86ad32dc7d0b56024ebdbcf2048c0ba09f1cde31bfdd57bcfff\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:598e3276b64aff0e7b3451b72e94fa3c238d452e7ddcd893c3ab324717456bad\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:fce659a462a1be54d2ffcacea5e3ba2d74daa74f30f5f143fe0c58636e355fdd\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-win32.whl\", hash = \"sha256:d9fad5155d72433c921b782e58892377c44bd6252b5af2f67f16b194987338a4\"},\n    {file = \"MarkupSafe-2.1.5-cp310-cp310-win_amd64.whl\", hash = \"sha256:bf50cd79a75d181c9181df03572cdce0fbb75cc353bc350712073108cba98de5\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:629ddd2ca402ae6dbedfceeba9c46d5f7b2a61d9749597d4307f943ef198fc1f\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:5b7b716f97b52c5a14bffdf688f971b2d5ef4029127f1ad7a513973cfd818df2\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6ec585f69cec0aa07d945b20805be741395e28ac1627333b1c5b0105962ffced\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b91c037585eba9095565a3556f611e3cbfaa42ca1e865f7b8015fe5c7336d5a5\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:7502934a33b54030eaf1194c21c692a534196063db72176b0c4028e140f8f32c\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:0e397ac966fdf721b2c528cf028494e86172b4feba51d65f81ffd65c63798f3f\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:c061bb86a71b42465156a3ee7bd58c8c2ceacdbeb95d05a99893e08b8467359a\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:3a57fdd7ce31c7ff06cdfbf31dafa96cc533c21e443d57f5b1ecc6cdc668ec7f\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-win32.whl\", hash = \"sha256:397081c1a0bfb5124355710fe79478cdbeb39626492b15d399526ae53422b906\"},\n    {file = \"MarkupSafe-2.1.5-cp311-cp311-win_amd64.whl\", hash = \"sha256:2b7c57a4dfc4f16f7142221afe5ba4e093e09e728ca65c51f5620c9aaeb9a617\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:8dec4936e9c3100156f8a2dc89c4b88d5c435175ff03413b443469c7c8c5f4d1\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:3c6b973f22eb18a789b1460b4b91bf04ae3f0c4234a0a6aa6b0a92f6f7b951d4\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ac07bad82163452a6884fe8fa0963fb98c2346ba78d779ec06bd7a6262132aee\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f5dfb42c4604dddc8e4305050aa6deb084540643ed5804d7455b5df8fe16f5e5\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ea3d8a3d18833cf4304cd2fc9cbb1efe188ca9b5efef2bdac7adc20594a0e46b\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:d050b3361367a06d752db6ead6e7edeb0009be66bc3bae0ee9d97fb326badc2a\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:bec0a414d016ac1a18862a519e54b2fd0fc8bbfd6890376898a6c0891dd82e9f\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:58c98fee265677f63a4385256a6d7683ab1832f3ddd1e66fe948d5880c21a169\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-win32.whl\", hash = \"sha256:8590b4ae07a35970728874632fed7bd57b26b0102df2d2b233b6d9d82f6c62ad\"},\n    {file = \"MarkupSafe-2.1.5-cp312-cp312-win_amd64.whl\", hash = \"sha256:823b65d8706e32ad2df51ed89496147a42a2a6e01c13cfb6ffb8b1e92bc910bb\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:c8b29db45f8fe46ad280a7294f5c3ec36dbac9491f2d1c17345be8e69cc5928f\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ec6a563cff360b50eed26f13adc43e61bc0c04d94b8be985e6fb24b81f6dcfdf\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a549b9c31bec33820e885335b451286e2969a2d9e24879f83fe904a5ce59d70a\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4f11aa001c540f62c6166c7726f71f7573b52c68c31f014c25cc7901deea0b52\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:7b2e5a267c855eea6b4283940daa6e88a285f5f2a67f2220203786dfa59b37e9\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:2d2d793e36e230fd32babe143b04cec8a8b3eb8a3122d2aceb4a371e6b09b8df\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:ce409136744f6521e39fd8e2a24c53fa18ad67aa5bc7c2cf83645cce5b5c4e50\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-win32.whl\", hash = \"sha256:4096e9de5c6fdf43fb4f04c26fb114f61ef0bf2e5604b6ee3019d51b69e8c371\"},\n    {file = \"MarkupSafe-2.1.5-cp37-cp37m-win_amd64.whl\", hash = \"sha256:4275d846e41ecefa46e2015117a9f491e57a71ddd59bbead77e904dc02b1bed2\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:656f7526c69fac7f600bd1f400991cc282b417d17539a1b228617081106feb4a\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:97cafb1f3cbcd3fd2b6fbfb99ae11cdb14deea0736fc2b0952ee177f2b813a46\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1f3fbcb7ef1f16e48246f704ab79d79da8a46891e2da03f8783a5b6fa41a9532\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fa9db3f79de01457b03d4f01b34cf91bc0048eb2c3846ff26f66687c2f6d16ab\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffee1f21e5ef0d712f9033568f8344d5da8cc2869dbd08d87c84656e6a2d2f68\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:5dedb4db619ba5a2787a94d877bc8ffc0566f92a01c0ef214865e54ecc9ee5e0\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:30b600cf0a7ac9234b2638fbc0fb6158ba5bdcdf46aeb631ead21248b9affbc4\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:8dd717634f5a044f860435c1d8c16a270ddf0ef8588d4887037c5028b859b0c3\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-win32.whl\", hash = \"sha256:daa4ee5a243f0f20d528d939d06670a298dd39b1ad5f8a72a4275124a7819eff\"},\n    {file = \"MarkupSafe-2.1.5-cp38-cp38-win_amd64.whl\", hash = \"sha256:619bc166c4f2de5caa5a633b8b7326fbe98e0ccbfacabd87268a2b15ff73a029\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:7a68b554d356a91cce1236aa7682dc01df0edba8d043fd1ce607c49dd3c1edcf\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:db0b55e0f3cc0be60c1f19efdde9a637c32740486004f20d1cff53c3c0ece4d2\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3e53af139f8579a6d5f7b76549125f0d94d7e630761a2111bc431fd820e163b8\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:17b950fccb810b3293638215058e432159d2b71005c74371d784862b7e4683f3\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4c31f53cdae6ecfa91a77820e8b151dba54ab528ba65dfd235c80b086d68a465\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:bff1b4290a66b490a2f4719358c0cdcd9bafb6b8f061e45c7a2460866bf50c2e\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:bc1667f8b83f48511b94671e0e441401371dfd0f0a795c7daa4a3cd1dde55bea\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:5049256f536511ee3f7e1b3f87d1d1209d327e818e6ae1365e8653d7e3abb6a6\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-win32.whl\", hash = \"sha256:00e046b6dd71aa03a41079792f8473dc494d564611a8f89bbbd7cb93295ebdcf\"},\n    {file = \"MarkupSafe-2.1.5-cp39-cp39-win_amd64.whl\", hash = \"sha256:fa173ec60341d6bb97a89f5ea19c85c5643c1e7dedebc22f5181eb73573142c5\"},\n    {file = \"MarkupSafe-2.1.5.tar.gz\", hash = \"sha256:d283d37a890ba4c1ae73ffadf8046435c76e7bc2247bbb63c00bd1a709c6544b\"},\n]\n\n[[package]]\nname = \"setuptools\"\nversion = \"75.1.0\"\ndescription = \"Easily download, build, install, upgrade, and uninstall Python packages\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"setuptools-75.1.0-py3-none-any.whl\", hash = \"sha256:35ab7fd3bcd95e6b7fd704e4a1539513edad446c097797f2985e0e4b960772f2\"},\n    {file = \"setuptools-75.1.0.tar.gz\", hash = \"sha256:d59a21b17a275fb872a9c3dae73963160ae079f1049ed956880cd7c09b120538\"},\n]\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\", \"ruff (>=0.5.2)\"]\ncore = [\"importlib-metadata (>=6)\", \"importlib-resources (>=5.10.2)\", \"jaraco.collections\", \"jaraco.functools\", \"jaraco.text (>=3.7)\", \"more-itertools\", \"more-itertools (>=8.8)\", \"packaging\", \"packaging (>=24)\", \"platformdirs (>=2.6.2)\", \"tomli (>=2.0.1)\", \"wheel (>=0.43.0)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"pyproject-hooks (!=1.1)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (>=1,<2)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\", \"towncrier (<24.7)\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"build[virtualenv] (>=1.0.3)\", \"filelock (>=3.4.0)\", \"ini2toml[lite] (>=0.14)\", \"jaraco.develop (>=7.21)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"jaraco.test\", \"packaging (>=23.2)\", \"pip (>=19.1)\", \"pyproject-hooks (!=1.1)\", \"pytest (>=6,!=8.1.*)\", \"pytest-home (>=0.5)\", \"pytest-perf\", \"pytest-subprocess\", \"pytest-timeout\", \"pytest-xdist (>=3)\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel (>=0.44.0)\"]\ntype = [\"importlib-metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (==1.11.*)\", \"pytest-mypy\"]\n\n[[package]]\nname = \"werkzeug\"\nversion = \"3.0.4\"\ndescription = \"The comprehensive WSGI web application library.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"werkzeug-3.0.4-py3-none-any.whl\", hash = \"sha256:02c9eb92b7d6c06f31a782811505d2157837cea66aaede3e217c7c27c039476c\"},\n    {file = \"werkzeug-3.0.4.tar.gz\", hash = \"sha256:34f2371506b250df4d4f84bfe7b0921e4762525762bbd936614909fe25cd7306\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=2.1.1\"\n\n[package.extras]\nwatchdog = [\"watchdog (>=2.3)\"]\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \">=3.10.0,<3.12\"\ncontent-hash = \"4844ed15a3b93c780b28d726ad6b05890ab66e7bd9d5bade0a5b5083ab72c81f\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.595703125,
          "content": "[tool.poetry]\nname = \"babyagi\"\nversion = \"0.0.8\"\ndescription = \"\"\nauthors = [\"Your Name <you@example.com>\"]\n\n[tool.poetry.dependencies]\npython = \">=3.10.0,<3.12\"\ndb = \"^0.1.1\"\nflask = \"^3.0.3\"\nwerkzeug = \"^3.0.4\"\nsetuptools = \"^75.1.0\"\n\n[tool.pyright]\n# https://github.com/microsoft/pyright/blob/main/docs/configuration.md\nuseLibraryCodeForTypes = true\nexclude = [\".cache\"]\n\n[tool.ruff]\n# https://beta.ruff.rs/docs/configuration/\nselect = ['E', 'W', 'F', 'I', 'B', 'C4', 'ARG', 'SIM']\nignore = ['W291', 'W292', 'W293']\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\""
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.072265625,
          "content": "Flask>=2.0.0\nsqlalchemy>=1.4,<2.0\ncryptography\nscikit-learn\nlitellm\nopenai"
        },
        {
          "name": "self_build.png",
          "type": "blob",
          "size": 496.1015625,
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.517578125,
          "content": "from setuptools import setup, find_packages\nimport os\n\n# Read the long description from README.md\nwith open(\"README.md\", \"r\", encoding=\"utf-8\") as fh:\n    long_description = fh.read()\n\n# Read requirements from requirements.txt\ndef parse_requirements(filename):\n    with open(filename, \"r\") as f:\n        lines = f.readlines()\n    # Remove comments and empty lines\n    return [line.strip() for line in lines if line.strip() and not line.startswith(\"#\")]\n\nsetup(\n    name=\"babyagi\",  # Ensure this is the desired package name\n    version=\"0.1.2\",  # Update this version appropriately\n    author=\"Yohei Nakajima\",\n    author_email=\"babyagi@untapped.vc\",\n    description=\"An experimental prototype framework for building self building autonomous agents.\",\n    long_description=  long_description,\n    long_description_content_type=\"text/markdown\",\n    url=\"https://github.com/yoheinakajima/babyagi\",  # Update if necessary\n    packages=find_packages(),\n    include_package_data=True,  # Include package data as specified in MANIFEST.in\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n    ],\n    python_requires='>=3.6',\n    install_requires=parse_requirements(\"requirements.txt\"),\n    entry_points={\n        'console_scripts': [\n            'babyagi=babyagi.main:main',  # Example entry point\n        ],\n    },\n    keywords=\"AGI, AI, Framework, Baby AGI\",\n    project_urls={  # Optional\n        \"Author\": \"https://x.com/yoheinakajima\",\n    },\n)\n"
        }
      ]
    }
  ]
}