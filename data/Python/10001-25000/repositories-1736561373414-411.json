{
  "metadata": {
    "timestamp": 1736561373414,
    "page": 411,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thumbor/thumbor",
      "stars": 10157,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.05859375,
          "content": "---\nengines:\n pylint:\n   enabled: true\n   python_version: 3\n"
        },
        {
          "name": ".commit-template",
          "type": "blob",
          "size": 1.29296875,
          "content": "# Title: [Commit Type] and Summary, imperative, start upper case, don't end with a period\n# Example: [FIX] Changed something or [FEAT] Adding X to PIL engine\n# Commit Types:\n# * FIX - Whenever you're fixing a bug or issue\n# * FEAT - When it's a new feature for thumbor users\n# * IMPR - When you're adding an improvement to existing feature or codebase\n# No more than 50 chars. #### 50 chars is here: #\n\n# Remember blank line between title and body.\n\n# Please explain whether this change is backwards compatible or not.\n# If not, please use the body below to explain why not.\n**Is backwards compatible**: yes/no\n\n# Body: Explain *what* and *why* (not *how*). Include github issue if any.\n# Wrap at 72 chars. ################################## which is here: #\n\n\n# At the end: Include Co-authored-by for all contributors. \n# Include at least one empty line before it. Format: \n# Co-authored-by: name <user@users.noreply.github.com>\n#\n# How to Write a Git Commit Message:\n# https://chris.beams.io/posts/git-commit/\n#\n# 1. Separate subject from body with a blank line\n# 2. Limit the subject line to 50 characters\n# 3. Capitalize the subject line\n# 4. Do not end the subject line with a period\n# 5. Use the imperative mood in the subject line\n# 6. Wrap the body at 72 characters\n# 7. Use the body to explain what and why vs. how\n"
        },
        {
          "name": ".continuousrc",
          "type": "blob",
          "size": 1.5078125,
          "content": "# Example .continuousrc file for use with http://continuous.io\n# This example file has been created for use with either a \n# Python or a Django project.\n\n# Put this in your project root. It will be used to configure the build \n# script for your project.\n\n#######################\n### Common settings ###\n#######################\n\n# The pip reqirements file relative to your project root directory.\n# (Optional, but most likely needed for all but the simplest projects)\n# Example: \"requirements.txt\"\nPIP_REQUIREMENTS=\"test_requeriments.txt\"\n\n# A space separated list of extra packages to be installed. \n# This will be passed to the system package manager, normally apt-get.\n# Example: \"subversion libjpeg-dev\"\nEXTRA_PACKAGES=\"curl libcurl3 libcurl3-dev\"\n\n################################\n### Python-specific settings ###\n################################\n\n# The command used to run this project's tests. If specified, this setting \n# will override MANAGE_COMMAND.\n# Example: \"./runmytests.py\"\n# (Will attempt to auto-detect if blank)\nTEST_COMMAND=\"make test\"\n\n################################\n### Django-specific settings ###\n################################\n\n# The path to the django manage.py command\n# (Will attempt to auto-detect if blank)\n# Example: \"./manage.py\"\nMANAGE_COMMAND=\"\"\n\n# Tells Django where to find the setting file to be used for this build\n# See: https://docs.djangoproject.com/en/dev/topics/settings/#designating-the-settings\n# (Will attempt to auto-detect if blank)\n# Example: \"myapp.settings_test\"\nDJANGO_SETTINGS_MODULE=\"\"\n\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.3095703125,
          "content": "[run]\nomit =\n    test_*.py\n    integration_tests/*\nbranch = True\nsource =\n    thumbor\n\n[report]\nexclude_lines =\n    pragma: no cover\n    def __repr__\n    raise NotImplementedError\n    if __name__ == .__main__.:\n    from urllib.parse import parse_qs\n    except ImportError:\n    from nose_focus import focus\n    @focus\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.16796875,
          "content": "[flake8]\nignore = W801,E501,W605,W504,W606,W503,E203,E266\nmax-line-length = 88\nmax-complexity = 20\nselect = B,C,E,F,W,T4\nexclude = ./.tox/*,./build/*,./docs/conf.py,./.env\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.525390625,
          "content": "*.pyc\n.DS_Store\n*.swp\ndist/\n*.egg-info\n.project\n.pydevprojectthumbor/tests/visual_test/img\n.coverage\ntests/visual_test/img/\n*.swo\n*.swm\n*.swn\ntests/visual_test/build\nbuild\n*.so\nnohup.out\n*.idea\n.vscode\n*.iml\nopencv\n\n# Debian packaging\n/debsetup.py\n/debian/files\n/debian/thumbor/\n/debian/thumbor.debhelper.log\n/debian/thumbor.postinst.debhelper\n/debian/thumbor.preinst.debhelper\n/debian/thumbor.postrm.debhelper\n/debian/thumbor.prerm.debhelper\n/debian/thumbor.substvars\n/debian/tmp/\n.ropeproject/\n.venv\ndocs/_build\ntest-results\n.coverage*\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3828125,
          "content": "repos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: v4.2.0\n  hooks:\n  - id: trailing-whitespace\n  - id: end-of-file-fixer\n  - id: check-yaml\n- repo: https://github.com/psf/black\n  rev: 24.1.0\n  hooks:\n  - id: black\n- repo: https://github.com/pycqa/flake8\n  rev: 4.0.1\n  hooks:\n    - id: flake8\n- repo: https://github.com/pycqa/pylint\n  rev: v2.13.7\n  hooks:\n    - id: pylint\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.5078125,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Build docs in PDF and ePub formats\nformats:\n  - pdf\n  - epub\n\n# Specify Python requirements\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": ".venv",
          "type": "blob",
          "size": 0.0078125,
          "content": "thumbor\n"
        },
        {
          "name": ".yamllint",
          "type": "blob",
          "size": 0.15234375,
          "content": "extends: default\n\nrules:\n  truthy: disable\n  comments-indentation: disable  # don't bother me with this rule\n  line-length:\n    max: 120\n    level: warning\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 0.134765625,
          "content": "Please look at our releases page for information on changelog as it is hard maintaining both: https://github.com/thumbor/thumbor/releases\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1064453125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nheynemann@gmail.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. \n<br />\nTranslations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.2705078125,
          "content": "So you want to contribute with thumbor? Awesome! Welcome aboard!\n\n## First things first\n\nWhat kind of contribution are you aiming for? Features, documentation and\nbug fixes are always welcome.\n\n**Please note**: we dropped feature-support for thumbor 6. That said, no\nnew features are going to be added on thumbor 6.x. If you still want to\ncontribute (a bug fix), please head at `fixes/6.7.x`.\n\n## Steps\n\nThere are a few things you'll need in order to properly start hacking on it.\n\n1. [Fork it](http://help.github.com/fork-a-repo/)\n2. Install dependencies and initialize environment\n3. Hack, in no particular order:\n   - Write enough code\n   - Write tests for that code\n   - Check that other tests pass\n   - Repeat until you're satisfied\n4. Submit a pull request\n\n## Install Dependencies\n\nYou'll need [redis-server](https://redis.io)\ninstalled (for queued detector unit tests).\n\nOther than that, we seriously advise you to use\n[virtualenv](http://pypi.python.org/pypi/virtualenv) since it will keep\nyour environment clean of thumbor's dependencies and you can choose when\nto \"turn them on\".\n\nThe project requires Python 3.9+, and in this version virtualenv is already installed by default, to create a virtual environment follow the next steps:\n\n\n1. Create a virtual environment, in the folder .venv, located in the user's home folder\n```\n$ python3 -m venv ~/.venv/<my_env_name>\n```\n\n2. Activate the virtual environment\n```\n$ source ~/.venv/<my_env_name>/bin/activate\n```\n\n3. Now you can install the dependencies in your virtual environment\n4. In case you want deactivate your virtual environment:\n```\n$ deactivate\n```\n\n## Initializing the Environment\n\nYou can install thumbor dev dependencies with:\n\n    $ make setup\n\n## Running the Tests\n\nRunning the tests is as easy as:\n\n    $ make test\n\nYou should see the results of running your tests after an instant.\n\nIf you are experiencing \"Too many open files\" errors while running the\ntests, try increasing the number of open files per process, by running\nthis command:\n\n    $ ulimit -S -n 2048\n\nRead\n<http://superuser.com/questions/433746/is-there-a-fix-for-the-too-many-open-files-in-system-error-on-os-x-10-7-1>\nfor more info on this.\n\n## Linting your code\n\nPlease ensure that your editor is configured to use\n[black](https://github.com/psf/black),\n[flake8](https://flake8.pycqa.org/en/latest/) and\n[pylint](https://www.pylint.org/).\n\nEven if that's the case, don't forget to run `make flake pylint` before\ncommitting and fixing any issues you find. That way you won't get a\nrequest for doing so in your PR.\n\n## Pull Requests\n\nAfter hacking and testing your contribution, it is time to make a pull\nrequest. Make sure that your code is already integrated with the `master`\nbranch of thumbor before asking for a pull request.\n\nTo add thumbor as a valid remote for your repository:\n\n    $ git remote add thumbor git://github.com/thumbor/thumbor.git\n\nTo merge thumbor's master with your fork:\n\n    $ git pull thumbor master\n\nIf there was anything to merge, just run your tests again. If they pass,\n[send a pull request](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request).\n\nThe latest version of this document can be found at [Hacking on thumbor](https://thumbor.readthedocs.io/en/latest/hacking_on_thumbor.html).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Globo.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.826171875,
          "content": "prune dist\r\nprune build\r\nrecursive-include thumbor *.py\r\nrecursive-include thumbor *.conf\r\nrecursive-include thumbor *.xml\r\nrecursive-include thumbor *.h\r\nrecursive-include thumbor *.jpg\r\nrecursive-include thumbor *.png\r\nrecursive-include thumbor *.gif\r\nrecursive-include thumbor *.svg\r\nrecursive-include thumbor *.webp\r\nrecursive-include thumbor 513px-Coffee_beans_-_ziarna_kawy\r\nrecursive-include thumbor *.c\r\nrecursive-exclude thumbor *.pyc\r\nrecursive-exclude thumbor *.so\r\n\r\ninclude LICENSE README.mkd CHANGELOG\r\nrecursive-include docs *\r\nprune docs/_build\r\n\r\ninclude redis.conf Makefile requirements thumbor.key\r\nrecursive-include tests *.py\r\nrecursive-include tests/fixtures *\r\nrecursive-exclude tests *.pyc\r\n\r\nrecursive-include integration_tests *.py\r\nrecursive-include integration_tests/imgs *\r\nrecursive-exclude integration_tests *.pyc\r\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.9404296875,
          "content": "PYTHON = python\n.PHONY: docs build perf\n\nOS := $(shell uname)\n\nrun: compile_ext\n\t@thumbor -l debug -d -c thumbor/thumbor.conf\n\nrun-prod: compile_ext\n\t@thumbor -l error -c thumbor/thumbor.conf\n\nsetup:\n\t@$(PYTHON) -m pip install -e .[tests]\n\t@echo  \"\\n\\nYou are strongly recommended to run 'pre-commit install'\\n\"\n\ncompile_ext build:\n\t@$(PYTHON) setup.py build_ext -i\n\ntest: build redis\n\t@$(MAKE) unit coverage\n\t@$(MAKE) integration_run\n\t@$(MAKE) flake\n\t@$(MAKE) kill_redis\n\nci_test: build\n\t@echo \"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\"\n\t@echo \"TORNADO IS `python -c 'import tornado; import inspect; print(inspect.getfile(tornado))'`\"\n\t@echo \"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\"\n\t@if [ \"$$LINT_TEST\" ]; then $(MAKE) flake; elif [ \"$$PERF_TEST\" ]; then $(MAKE) long-perf; elif [ -z \"$$INTEGRATION_TEST\" ]; then $(MAKE) unit coverage; else $(MAKE) integration_run; fi\n\nintegration_run integration int:\n\t@pytest -sv integration_tests/ -p no:tldr\n\npint pintegration:\n\t@pytest -sv integration_tests/ -p no:tldr -n `nproc`\n\ncoverage:\n\t@coverage report -m --fail-under=10\n\nunit:\n\t@pytest -n `nproc` --cov=thumbor tests/\n\nsequential-unit:\n\t@pytest -sv --junit-xml=test-results/unit/results.xml --cov=thumbor tests/\n\nkill_redis:\n\t@-redis-cli -p 6668 -a hey_you shutdown\n\t@-redis-cli -p 26379 -a hey_you shutdown\n\t@-rm /tmp/redis-sentinel.conf 2>/dev/null\n\nredis: kill_redis\n\t@cp redis-sentinel.conf /tmp/redis-sentinel.conf\n\t@redis-server redis.conf ; sleep 1\n\t@redis-server /tmp/redis-sentinel.conf --sentinel ; sleep 1\n\t@redis-cli -p 6668 -a hey_you info\n\nformat:\n\t@black .\n\nflake:\n\t@flake8 --config .flake8\n\npylint:\n\t@pylint --load-plugins=pylint.extensions.no_self_use thumbor tests\n\nsetup_docs:\n\t@$(PYTHON) -m pip install -r docs/requirements.txt\n\nbuild_docs:\n\t@cd docs && make html\n\ndocs:\n\t@sphinx-reload --host 0.0.0.0 --port 5555 docs/\n\nperf-start-daemon: perf-stop-daemon\n\t@start-stop-daemon -d `pwd`/perf --make-pidfile --background --start --pidfile /tmp/thumbor-perf.pid --exec `which thumbor` -- -l error -c ./thumbor.conf\n\t@sleep 2\n\n# if you change this, also change in run.sh\nperf-stop-daemon:\n\t@start-stop-daemon -q --stop --oknodo --remove-pidfile --pidfile /tmp/thumbor-perf.pid > /dev/null 2>&1\n\nperf: perf-start-daemon\n\t@cd perf && DURATION=10 bash run.sh\n\nlong-perf: perf-start-daemon\n\t@cd perf && bash run.sh\n\nsample_images:\n\tconvert -delay 100 -size 100x100 gradient:blue gradient:red -loop 0 integration_tests/imgs/animated.gif\n\tconvert -size 100x100 gradient:blue integration_tests/imgs/gradient.jpg\n\tconvert -size 100x100 gradient:blue integration_tests/imgs/gradient.gif\n\tconvert -size 100x100 gradient:blue integration_tests/imgs/gradient.webp\n\tconvert -size 100x100 gradient:gray -colorspace gray integration_tests/imgs/grayscale.jpg\n\tconvert -size 100x100 gradient:blue -depth 16 integration_tests/imgs/16bit.png\n\tconvert -size 100x100 gradient:blue -colorspace CMYK integration_tests/imgs/cmyk.jpg\n\tconvert -size 100x100 xc:none -fill gradient:blue -draw \"circle 50,50 50,1\" -depth 8 integration_tests/imgs/rgba.png\n\tconvert -size 100x100 xc:none -fill gradient:blue -draw \"circle 50,50 50,1\" -interlace PNG -depth 8 integration_tests/imgs/rgba-interlaced.png\n\tconvert -size 16383x16383 canvas:blue tests/fixtures/images/16383x16383.png\n\tconvert -size 16384x16384 canvas:blue tests/fixtures/images/16384x16384.png\n\tconvert -size 9643x10328 canvas:blue tests/fixtures/images/9643x10328.jpg\n\tconvert -size 1x1 canvas:white png24:tests/fixtures/images/1x1.png\n\tcp integration_tests/imgs/animated.gif tests/fixtures/images/animated.gif\n\tconvert -size 20x20 gradient:blue tests/fixtures/images/20x20.jpg\n\techo \"\" > tests/fixtures/images/image_invalid.jpg\n\tconvert -size 300x400 gradient:blue tests/fixtures/images/image.jpg\n\tconvert -delay 100 -size 100x100 gradient:blue tests/fixtures/images/animated-one-frame.gif\n\tcp integration_tests/imgs/grayscale.jpg tests/fixtures/images/grayscale.jpg\n\tcp integration_tests/imgs/cmyk.jpg tests/fixtures/images/cmyk.jpg\n\tconvert -size 100x100 gradient:blue -depth 8 tests/fixtures/images/gradient_8bit.tif\n\tconvert -size 100x100 gradient:blue tests/fixtures/images/gradient_lsb_16bperchannel.tif\n\tconvert -size 100x100 gradient:blue -define tiff:endian=msb tests/fixtures/images/gradient_msb_16bperchannel.tif\n\tcurl -s https://upload.wikimedia.org/wikipedia/en/4/4a/Commons-logo.svg -o tests/fixtures/images/Commons-logo.svg\n\tsed 's/width=\"1024\" height=\"1376\"/width=\"10in\" height=\"13in\"/g' tests/fixtures/images/Commons-logo.svg > tests/fixtures/images/Commons-logo-inches.svg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/3/3e/10_years_of_Wikipedia_by_Guillaume_Paumier.jpg -o tests/fixtures/images/10_years_of_Wikipedia_by_Guillaume_Paumier.jpg\n\tconvert tests/fixtures/images/10_years_of_Wikipedia_by_Guillaume_Paumier.jpg -orient LeftBottom tests/fixtures/images/10_years_of_Wikipedia_by_Guillaume_Paumier.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/6/6d/Christophe_Henner_-_June_2016.jpg -o tests/fixtures/images/Christophe_Henner_-_June_2016.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/3/31/Giunchedi%2C_Filippo_January_2015_01.jpg -o tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/2/2c/Rotating_earth_%28large%29.gif -o tests/fixtures/images/Rotating_earth_\\(large\\).gif\n\tconvert tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01.jpg -colorspace CMYK tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01-cmyk.jpg\n\tconvert tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01.jpg tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01.png\n\tconvert tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01.jpg -colorspace gray tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01-grayscale.jpg\n\tconvert tests/fixtures/images/image.jpg -define jpeg:q-table=tests/fixtures/images/qtables.xml tests/fixtures/images/invalid_quantization.jpg\n\tconvert tests/fixtures/images/image.jpg tests/fixtures/images/image.webp\n\tconvert logo: tests/fixtures/images/no_face.jpg\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/image.jpg%3Fts%3D1\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/image\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/image.jpg%23something\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/image%20space.jpg\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/15967251_212831_19242645_%D0%90%D0%B3%D0%B0%D1%82%D0%B0%D0%B2%D0%97%D0%BE%D0%BE%D0%BF%D0%B0%D1%80%D0%BA%D0%B5.jpg\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/15967251_212831_19242645_АгатавЗоопарке.jpg\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/maracujá.jpg\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/alabama1_ap620%C3%A9.jpg\n\tcp tests/fixtures/images/image.jpg tests/fixtures/images/alabama1_ap620é.jpg\n\tmkdir -p tests/fixtures/result_storages/v2/im/ag/\n\tcp tests/fixtures/images/image.jpg tests/fixtures/result_storages/v2/im/ag/image.jpg\n\tmkdir -p tests/fixtures/filters\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Katherine_Maher.jpg/800px-Katherine_Maher.jpg -o tests/fixtures/filters/source.jpg\n\tconvert tests/fixtures/filters/source.jpg -quality 10 tests/fixtures/filters/quality-10%.jpg\n\tconvert tests/fixtures/filters/source.jpg -rotate 180 tests/fixtures/filters/rotate.jpg\n\tconvert tests/fixtures/filters/source.jpg -blur 4x2 tests/fixtures/filters/blur.jpg\n\tconvert tests/fixtures/filters/source.jpg -blur 8x8 tests/fixtures/filters/blur2.jpg\n\tconvert tests/fixtures/filters/source.jpg -blur 150x150 tests/fixtures/filters/blur3.jpg\n\tconvert tests/fixtures/filters/source.jpg -brightness-contrast 20x0 tests/fixtures/filters/brightness.jpg\n\tconvert tests/fixtures/filters/source.jpg -brightness-contrast 0x20 tests/fixtures/filters/contrast.jpg\n\tconvert tests/fixtures/filters/source.jpg -gamma 1.1,1.02,1.04 tests/fixtures/filters/rgb.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/8/81/Wikimedia-logo.svg -o tests/fixtures/filters/watermark.svg\n\tconvert tests/fixtures/filters/watermark.svg -transparent white -resize 30x30 tests/fixtures/filters/watermark.png\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Guido-portrait-2014.jpg/800px-Guido-portrait-2014.jpg -o tests/fixtures/filters/800px-Guido-portrait-2014.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Christophe_Henner_-_June_2016.jpg/800px-Christophe_Henner_-_June_2016.jpg -o tests/fixtures/filters/800px-Christophe_Henner_-_June_2016.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Coffee_berries_1.jpg/800px-Coffee_berries_1.jpg -o tests/fixtures/filters/800px-Coffee_berries_1.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/A_small_cup_of_coffee.JPG/800px-A_small_cup_of_coffee.JPG -o tests/fixtures/filters/800px-A_small_cup_of_coffee.JPG\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Coffee_beans_-_ziarna_kawy.jpg/513px-Coffee_beans_-_ziarna_kawy.jpg -o tests/fixtures/filters/513px-Coffee_beans_-_ziarna_kawy.jpg\n\tcurl -s https://upload.wikimedia.org/wikipedia/commons/archive/4/47/20161122122708%21PNG_transparency_demonstration_1.png | convert - -resize 300x225 tests/fixtures/filters/PNG_transparency_demonstration_1.png\n\tconvert tests/fixtures/filters/PNG_transparency_demonstration_1.png -background blue -flatten tests/fixtures/filters/PNG_transparency_demonstration_1_blue.png\n\tconvert tests/fixtures/filters/PNG_transparency_demonstration_1.png -dither None -colors 256 tests/fixtures/images/paletted-transparent.png\n\tcp tests/fixtures/filters/source.jpg tests/fixtures/filters/800px-Katherine_Maher.jpg\n\tcp tests/fixtures/images/Giunchedi%2C_Filippo_January_2015_01.jpg tests/fixtures/filters/Giunchedi%2C_Filippo_January_2015_01.jpg\n\tcp tests/fixtures/filters/watermark.png tests/fixtures/images/watermark.png\n\t# the watermark filter's logic is too complicated to reproduce with IM, the watermark test images can't be generated here\n\t# similarly, the noise, colorize, redeye and fill filters generate output too unique to be reproduce with IM and can't be generated here\n\ntest-docker-build: test-docker-39-build test-docker310-build test-docker311-build test-docker312-build\n\ntest-docker-run: test-docker-39-run test-docker-310-run test-docker311-build test-docker312-build\n\ntest-docker-publish: test-docker-39-publish test-docker-310-publish test-docker311-build test-docker312-build\n\ntest-docker-39-build:\n\t@docker build -f TestDockerfile --build-arg PYTHON_VERSION=3.9 -t thumbor-test-39 .\n\ntest-docker-39-run:\n\t@docker run -v \"$$(pwd):/app\" thumbororg/thumbor-test:39 make compile_ext redis sequential-unit integration flake\n\ntest-docker-39-publish:\n\t@docker image tag thumbor-test-39:latest thumbororg/thumbor-test:39\n\t@docker push thumbororg/thumbor-test:39\n\ntest-docker-310-build:\n\t@docker build -f TestDockerfile --build-arg PYTHON_VERSION=3.10 -t thumbor-test-310 .\n\ntest-docker-310-run:\n\t@docker run -v \"$$(pwd):/app\" thumbororg/thumbor-test:310 make compile_ext redis sequential-unit integration flake\n\ntest-docker-310-publish:\n\t@docker image tag thumbor-test-310:latest thumbororg/thumbor-test:310\n\t@docker push thumbororg/thumbor-test:310\n\ntest-docker-311-build:\n\t@docker build -f TestDockerfile --build-arg PYTHON_VERSION=3.11 -t thumbor-test-311 .\n\ntest-docker-311-run:\n\t@docker run -v \"$$(pwd):/app\" thumbororg/thumbor-test:311 make compile_ext redis sequential-unit integration flake\n\ntest-docker-311-publish:\n\t@docker image tag thumbor-test-311:latest thumbororg/thumbor-test:311\n\t@docker push thumbororg/thumbor-test:311\n\ntest-docker-312-build:\n\t@docker build -f TestDockerfile --build-arg PYTHON_VERSION=3.12 -t thumbor-test-312 .\n\ntest-docker-312-run:\n\t@docker run -v \"$$(pwd):/app\" thumbororg/thumbor-test:312 make compile_ext redis sequential-unit integration flake\n\ntest-docker-312-publish:\n\t@docker image tag thumbor-test-312:latest thumbororg/thumbor-test:312\n\t@docker push thumbororg/thumbor-test:312\n\npublish:\n\t@python setup.py sdist\n\t@twine upload dist/*\n\t@rm -rf dist/\n"
        },
        {
          "name": "README.mkd",
          "type": "blob",
          "size": 7.28515625,
          "content": "<h4 align=\"center\">Join <a href=\"https://github.com/thumbor/thumbor-bootcamp\">thumbor-bootcamp</a> for a learning and contribution experience with ❤️ and 🤗 from the thumbor team</h4>\n\n<p align=\"center\">\n  <a href=\"http://www.thumbor.org\">\n    <img title=\"thumbor\" alt=\"thumbor\" src=\"https://github.com/thumbor/thumbor/blob/readme/docs/thumbor-logo.png?raw=true\" />\n  </a>\n</p>\n\n<h3 align=\"center\">\nCrop, resize, transform and much more, all on-demand and AI Powered\n</h3>\n\n<p align=\"center\">\n  <img src='https://github.com/thumbor/thumbor/workflows/build/badge.svg' />\n  <a href='https://coveralls.io/github/thumbor/thumbor?branch=master' target='_blank'>\n    <img src='https://coveralls.io/repos/thumbor/thumbor/badge.svg?branch=master&service=github'/>\n  </a>\n  <a href='https://codeclimate.com/github/thumbor/thumbor' target='_blank'>\n    <img src='https://codeclimate.com/github/thumbor/thumbor/badges/gpa.svg'/>\n  </a>\n  <a href='https://pypi.python.org/pypi/thumbor' target='_blank'>\n    <img src='https://img.shields.io/pypi/v/thumbor.svg'/>\n  </a>\n  <br />\n  <a href='https://github.com/thumbor/thumbor/pulls' target='_blank'>\n    <img src='https://img.shields.io/github/issues-pr-raw/thumbor/thumbor.svg'/>\n  </a>\n  <a href='https://github.com/thumbor/thumbor/issues' target='_blank'>\n    <img src='https://img.shields.io/github/issues-raw/thumbor/thumbor.svg'/>\n  </a>\n  <a href='https://pypi.python.org/pypi/thumbor' target='_blank'>\n    <img src='https://img.shields.io/pypi/dm/thumbor.svg'/>\n  </a>\n  <a href='https://www.bountysource.com/trackers/257692-globocom-thumbor?utm_source=257692&utm_medium=shield&utm_campaign=TRACKER_BADGE' target='_blank'>\n    <img src='https://www.bountysource.com/badge/tracker?tracker_id=257692'/>\n  </a>\n</p>\n\n<h4 align=\"center\">thumbor is trusted by hundreds of companies worldwide</h4>\n<p align=\"center\">\n  <img src=\"./docs/wikipedia.png\" alt=\"Wikipedia trusts thumbor\" title=\"Wikipedia trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/globocom.png?raw=true\" alt=\"Globo.com trusts thumbor\" title=\"Globo.com trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/vox.png?raw=true\" alt=\"Vox Media trusts thumbor\" title=\"Vox Media trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/forbes-logo.png?raw=true\" alt=\"Forbes trusts thumbor\" title=\"Forbes trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/squareup.png?raw=true\" alt=\"Square trusts thumbor\" title=\"Square trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/deliveroo.png?raw=true\" alt=\"Deliveroo trusts thumbor\" title=\"Deliveroo trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/canalplus.png?raw=true\" alt=\"Canal+ trusts thumbor\" title=\"Canal+ trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/terra.png?raw=true\" alt=\"Terra trusts thumbor\" title=\"Terra trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/nrc.png?raw=true\" alt=\"nrc trusts thumbor\" title=\"nrc trusts thumbor\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/webdev.png?raw=true\" alt=\"web.dev indicates thumbor for high-performance web sites\" title=\"web.dev indicates thumbor for high-performance web sites\" width=\"128\" height=\"128\" />&nbsp;\n  <img src=\"https://github.com/thumbor/thumbor/blob/readme/docs/aws.png?raw=true\" alt=\"aws indicates thumbor for serverless image handling\" title=\"aws indicates thumbor for serverless image handling\" width=\"128\" height=\"128\" />\n  <br />\n  and many more!\n</p>\n\nthumbor is a smart imaging service that enables on-demand [cropping, resizing, applying filters and optimizing](http://thumbor.readthedocs.io/en/latest/crop_and_resize_algorithms.html) images.\n\nCropping photos automatically can be a frustrating experience with severed heads involved. thumbor\nuses [AI for smart detection](http://thumbor.readthedocs.io/en/latest/detection_algorithms.html).\n\nthumbor is an HTTP server and you can create as many different images as you want just by varying path parameters:\n\n```\nhttp://<thumbor-server>/300x200/smart/thumbor.readthedocs.io/en/latest/_images/logo-thumbor.png\n```\n\nYou should see an image of the thumbor logo in 300x200.\n\nLearn more about all you can do in [thumbor's documentation](http://thumbor.readthedocs.io/en/latest/index.html \"thumbor docs\").\n\n## ⚙️ Installation\n\nDecide which installation option you want to use.\n\n### Option 1: pip\n\n```bash\n# thumbor with main dependencies only\npip install thumbor\n\n# thumbor with OpenCV dependency\npip install thumbor[opencv]\n\n# thumbor with all dependencies\npip install thumbor[all]\n```\n\n### Option 2: Binary\n\n```bash\nsudo add-apt-repository ppa:thumbor/ppa\nsudo aptitude update\nsudo aptitude install thumbor\n```\n\nFor more ways, please check out [Installation](https://thumbor.readthedocs.io/en/latest/installing.html).\n\n### Run\n\nRunning it is as easy as hit:\n\n```bash\nthumbor\n```\n\nAfter this, you can reach it on https://localhost:8888/unsafe/https://raw.githubusercontent.com/thumbor/thumbor/master/example.jpg\n\n### Troubles?\n\nIf you experience any troubles, try running:\n\n```bash\nthumbor-doctor\n```\n\nIf you have a `thumbor.conf` file, you can use that to help thumbor-doctor:\n\n```bash\nthumbor-doctor -c thumbor.conf\n```\n\nIf you still need help, please [raise an issue](https://github.com/thumbor/thumbor/issues). Remember to send your `thumbor-doctor` output in the issue:\n\n```bash\nthumbor-doctor --nocolor -c thumbor.conf\n```\n\n## 🎯 Features\n\n- supports all common images formats out of the box\n- [intelligent cropping and resizing](http://thumbor.readthedocs.io/en/latest/detection_algorithms.html)\n- blazing fast using caching\n- supports many storages (local storage, AWS S3, Rackspace, Ceph, ...)\n- AI-powered cropping based on face and feature detection (glasses, interesting points, ...)\n- integrated with many programming languages and frameworks <img src=\"https://www.python.org/favicon.ico\" width=\"16\" height=\"16\" /><img src=\"https://nodejs.org/static/images/favicons/favicon.png\" width=\"16\" height=\"16\" /><img src=\"https://rubygems.org/favicon.ico\" width=\"16\" height=\"16\" /> and many more...\n- [highly extensible](https://thumbor.readthedocs.io/en/latest/customizing.html)\n\n## 🌟 Awesome Goodies\n\n[awesome-thumbor](https://github.com/thumbor/awesome-thumbor) is a curated list of all things thumbor. There you can find filters, storages, engines, loaders, docker images, extensions in your favorite language and framework, and much more.\n\nAll of it with a clear indication of each project's quality. Have fun!\n\n## 👍 Contribute\n\nthumbor is an open-source project with many contributors. Join them\n[contributing code](https://github.com/thumbor/thumbor/blob/master/CONTRIBUTING.md) or\n[contributing documentation](https://github.com/thumbor/thumbor/blob/master/CONTRIBUTING.md).\n\nIf you use thumbor, please take 1 minute and answer [this survey](http://t.co/qPBLXJX0mi)? Only 2 questions!\n\nJoin the chat at https://gitter.im/thumbor/thumbor\n\n## 👀 Demo\n\nYou can see thumbor in action at http://thumborize.me/\n"
        },
        {
          "name": "TestDockerfile",
          "type": "blob",
          "size": 0.6484375,
          "content": "ARG PYTHON_VERSION\nFROM python:${PYTHON_VERSION}-slim\nWORKDIR /app\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends --no-install-suggests \\\n        python3-dev \\\n        libcurl4-openssl-dev \\\n        libgnutls28-dev \\\n        libjpeg-progs \\\n        libimage-exiftool-perl \\\n        gifsicle \\\n        scons \\\n        python3-all-dev \\\n        ffmpeg \\\n        make \\\n        zlib1g-dev \\\n        gcc \\\n        libssl-dev \\\n        libjpeg-dev \\\n        libwebp-dev \\\n        redis && \\\n    apt-get install -y --reinstall --no-install-recommends --no-install-suggests build-essential && \\\n    apt-get clean\n\nRUN pip install --upgrade pip\n"
        },
        {
          "name": "build.py",
          "type": "blob",
          "size": 1.998046875,
          "content": "# https://github.com/python-poetry/poetry/issues/11\n\nimport glob\nimport os\nfrom distutils.command.build_ext import build_ext\nfrom distutils.core import Extension\nfrom distutils.errors import (\n    CCompilerError,\n    DistutilsExecError,\n    DistutilsPlatformError,\n)\n\n\ndef filter_extension_module(name, lib_objs, lib_headers):\n    return Extension(\n        \"thumbor.ext.filters.%s\" % name,\n        [\"thumbor/ext/filters/%s.c\" % name] + lib_objs,\n        libraries=[\"m\"],\n        include_dirs=[\"thumbor/ext/filters/lib\"],\n        depends=[\"setup.py\"] + lib_objs + lib_headers,\n        extra_compile_args=[\n            \"-Wall\",\n            \"-Wextra\",\n            \"-Werror\",\n            \"-Wno-unused-parameter\",\n        ],\n    )\n\n\ndef gather_filter_extensions():\n    files = glob.glob(\"thumbor/ext/filters/_*.c\")\n    lib_objs = glob.glob(\"thumbor/ext/filters/lib/*.c\")\n    lib_headers = glob.glob(\"thumbor/ext/filters/lib/*.h\")\n\n    return [\n        filter_extension_module(f[0:-2].split(\"/\")[-1], lib_objs, lib_headers)\n        for f in files\n    ]\n\n\nclass BuildFailed(Exception):\n    pass\n\n\nclass ExtBuilder(build_ext):\n    # This class allows C extension building to fail.\n\n    def run(self):\n        try:\n            build_ext.run(self)\n        except (DistutilsPlatformError, FileNotFoundError):\n            pass\n\n    def build_extension(self, ext):\n        try:\n            build_ext.build_extension(self, ext)\n        except (\n            CCompilerError,\n            DistutilsExecError,\n            DistutilsPlatformError,\n            ValueError,\n        ):\n            pass\n\n\ndef build(setup_kwargs):\n    \"\"\"Needed for the poetry building interface.\"\"\"\n    if \"CFLAGS\" not in os.environ:\n        os.environ[\"CFLAGS\"] = \"\"\n\n    setup_kwargs.update(\n        dict(\n            ext_modules=gather_filter_extensions(),\n            cmdclass={\"build_ext\": ExtBuilder},\n            packages=[\"thumbor\"],\n            package_dir={\"thumbor\": \"thumbor\"},\n            include_package_data=True,\n            package_data={\"\": [\"*.xml\"]},\n        )\n    )\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.jpg",
          "type": "blob",
          "size": 212.5859375,
          "content": null
        },
        {
          "name": "integration_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 0.369140625,
          "content": "### Thumbor request URL\nThe request url for the issue you are having, you can swap the host name with a fake\n\n### Expected behaviour\nTell us what should happen\n\n### Actual behaviour\nTell us what happens instead\n\n### Operating system\nOSx, Ubuntu, etc\n\n### Your thumbor.conf\nYour config file (WARNING: replace your SECURITY_KEY key with a dummy key or your key will become public)"
        },
        {
          "name": "logo-thumbor.png",
          "type": "blob",
          "size": 7.1669921875,
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.2568359375,
          "content": "# Global options:\n\n[mypy]\npython_version = 3.10\nwarn_return_any = True\nwarn_unused_configs = True\nwarn_unused_ignores = True\ndisallow_untyped_defs = True\ndisallow_any_unimported = True\nno_implicit_optional = True\ncheck_untyped_defs = True\nshow_error_codes = True\n"
        },
        {
          "name": "perf",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 1.1162109375,
          "content": "[MASTER]\nignore=tests/snapshots\n\n[MESSAGES CONTROL]\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=\n      missing-function-docstring,\n      missing-module-docstring,\n      missing-class-docstring,\n      c-extension-no-member,\n      too-many-arguments,\n      assignment-from-none,\n      no-self-use,\n      too-few-public-methods,\n      attribute-defined-outside-init,\n      abstract-method,\n      too-many-instance-attributes,\n      broad-except,\n      too-many-locals,\n      too-many-public-methods,\n      fixme,\n      R0801,\n      deprecated-module,\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.322265625,
          "content": "[tool.black]\nline-length = 79\ntarget-version = ['py310']\ninclude = '\\.pyi?$'\n\n[build-system]\nrequires = [\"setuptools\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.cibuildwheel]\nbuild = \"cp3[89]* cp31[012]*\"\n\n[tool.cibuildwheel.macos]\narchs = \"x86_64 arm64 universal2\"\n\n[tool.cibuildwheel.linux]\narchs = \"auto aarch64\"\n"
        },
        {
          "name": "redis-sentinel.conf",
          "type": "blob",
          "size": 0.21875,
          "content": "daemonize yes\npidfile \"/tmp/redis-sentinel.pid\"\nport 26379\nrequirepass hey_you\n\nsentinel monitor masterinstance 127.0.0.1 6668 2\nsentinel down-after-milliseconds masterinstance 1000\nsentinel auth-pass masterinstance hey_you\n"
        },
        {
          "name": "redis.conf",
          "type": "blob",
          "size": 0.0654296875,
          "content": "daemonize yes\npidfile /tmp/redis.pid\nport 6668\nrequirepass hey_you\n"
        },
        {
          "name": "requirements",
          "type": "blob",
          "size": 0.2109375,
          "content": "libcurl4-openssl-dev\npython-numpy\npython-opencv\nlibopencv-dev\nlibjpeg-dev\nlibpng-dev\nlibx264-dev\nlibass-dev\nlibvpx1\nlibvpx-dev\nlibwebp-dev\nwebp\ngifsicle\nmemcached\nlibmemcache-dev\nlibmemcached-dev\npython-scipy\ncython\n"
        },
        {
          "name": "scaling.rst",
          "type": "blob",
          "size": 1.0986328125,
          "content": "Moving this here until a better place for this to live in.\n\nScaling Thumbor\n===============\n\n-  `Bernardo Heynemann <https://github.com/heynemann>`__ wrote an\n   article detailing this at `Scaling\n   Thumbor <http://heynemann.logdown.com/posts/152158-scaling-thumbor>`__;\n-  `Yipit <http://yipit.com>`__ has detailed how they scale thumbor at\n   their `engineering\n   blog <http://tech.yipit.com/2013/01/03/how-yipit-scales-thumbnailing-with-thumbor-and-cloudfront/>`__;\n-  `Square <http://squareup.com>`__ also posted at their engineering\n   blog about how they `generate dynamic images with\n   thumbor <https://developer.squareup.com/blog/dynamic-images-with-thumbor>`__;\n-  `99 Designs <http://99designs.com/>`__ also has some info on their\n   architecture using thumbor and amazon at their `engineering\n   blog <http://99designs.com/tech-blog/blog/2013/07/01/thumbnailing-with-thumbor/>`__.\n-  `heycar <https://hey.car/>`__ also has some info on their\n   architecture using thumbor on with CloudFront and Kubernetes at their `engineering\n   blog <https://medium.com/heycar/the-fast-and-the-payloadless-566b3aef890e/>`__.\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.26953125,
          "content": "[isort]\nmulti_line_output=3\ninclude_trailing_comma=True\nforce_grid_wrap=0\nuse_parentheses=True\nline_length=88\n\n[flake8]\nignore = W801,E501,W605,W504,W606,W503,E203,E266\nmax-line-length = 88\nmax-complexity = 20\nselect = B,C,E,F,W,T4\nexclude = ./.tox/*,./build/*,./docs/conf.py\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 5.52734375,
          "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# thumbor imaging service\n# https://github.com/thumbor/thumbor/wiki\n\n# Licensed under the MIT license:\n# http://www.opensource.org/licenses/mit-license\n# Copyright (c) 2011 globo.com thumbor@googlegroups.com\n\nimport glob\nimport logging\nimport os\n\nfrom setuptools import Extension, setup\n\nfrom pathlib import Path\n\ntry:\n    import wheel.bdist_wheel\nexcept ImportError:\n    wheel = None\n\nthis_directory = Path(__file__).parent\nlong_description = (this_directory / \"README.mkd\").read_text(encoding=\"utf-8\")\n\nwith open(\"thumbor/__init__.py\") as f:\n    ns = {}\n    exec(f.read(), ns)\n    version = ns[\"__version__\"]\n\nkwargs = {}\n\nTESTS_REQUIREMENTS = [\n    \"coverage==7.*,>=7.4.0\",\n    \"flake8==7.*,>=7.0.0\",\n    \"isort==5.*,>=5.13.2\",\n    \"pre-commit==3.*,>=3.6.0\",\n    \"preggy==1.*,>=1.4.4\",\n    \"pylint==3.*,>=3.0.3\",\n    \"pyssim==0.*,>=0.7\",\n    \"pytest==7.*,>=7.4.4\",\n    \"pytest-asyncio==0.*,>=0.23.3\",\n    \"pytest-cov==4.*,>=4.1.0\",\n    \"pytest-tldr==0.*,>=0.2.5\",\n    \"pytest-xdist==3.*,>=3.5.0\",\n    \"redis==5.*,>=5.0.1\",\n    \"remotecv==5.*,>=5.1.8\",\n    \"sentry-sdk==1.*,>=1.39.1\",\n    \"yanc==0.*,>=0.3.3\",\n]\n\nOPENCV_REQUIREMENTS = [\n    \"opencv-python-headless==4.*,>=4.9.0.80\",\n    \"numpy==1.*,>=1.26.3\",\n]\n\nEXTRA_LIBS_REQUIREMENTS = [\n    \"cairosvg==2.*,>=2.7.1\",\n    \"pycurl==7.*,>=7.45.2\",\n    \"pillow-avif-plugin==1.*,>=1.4.1\",\n    \"pillow-heif==0.*,>=0.14.0\",\n]\n\nALL_REQUIREMENTS = OPENCV_REQUIREMENTS + EXTRA_LIBS_REQUIREMENTS\n\nif wheel is not None:\n    # based on https://github.com/tornadoweb/tornado/blob/master/setup.py\n    class bdist_wheel_abi3(wheel.bdist_wheel.bdist_wheel):\n        def get_tag(self):\n            python, abi, plat = super().get_tag()\n\n            if python.startswith(\"cp\"):\n                return \"cp39\", \"abi3\", plat\n            return python, abi, plat\n\n    kwargs[\"cmdclass\"] = {\"bdist_wheel\": bdist_wheel_abi3}\n\n\ndef filter_extension_module(name, lib_objs, lib_headers):\n    return Extension(\n        f\"thumbor.ext.filters.{name}\",\n        [f\"thumbor/ext/filters/{name}.c\"] + lib_objs,\n        libraries=[\"m\"],\n        include_dirs=[\"thumbor/ext/filters/lib\"],\n        depends=[\"setup.py\"] + lib_objs + lib_headers,\n        extra_compile_args=[\n            \"-Wall\",\n            \"-Wextra\",\n            \"-Werror\",\n            \"-Wno-unused-parameter\",\n        ],\n        py_limited_api=True,\n        define_macros=[(\"Py_LIMITED_API\", \"0x03080000\")],\n    )\n\n\ndef gather_filter_extensions():\n    files = glob.glob(\"thumbor/ext/filters/_*.c\")\n    lib_objs = glob.glob(\"thumbor/ext/filters/lib/*.c\")\n    lib_headers = glob.glob(\"thumbor/ext/filters/lib/*.h\")\n\n    return [\n        filter_extension_module(f[0:-2].split(\"/\")[-1], lib_objs, lib_headers)\n        for f in files\n    ]\n\n\ndef run_setup(extension_modules=None):\n    if extension_modules is None:\n        extension_modules = []\n\n    if \"CFLAGS\" not in os.environ:\n        os.environ[\"CFLAGS\"] = \"\"\n\n    setup(\n        name=\"thumbor\",\n        version=version,\n        description=\"thumbor is an open-source photo thumbnail service by globo.com\",\n        long_description=long_description,\n        long_description_content_type=\"text/markdown\",\n        keywords=\"imaging face detection feature thumbnail imagemagick pil opencv\",\n        author=\"globo.com\",\n        author_email=\"thumbor@googlegroups.com\",\n        url=\"https://github.com/thumbor/thumbor/wiki\",\n        license=\"MIT\",\n        python_requires=\">=3.9\",\n        classifiers=[\n            \"Development Status :: 4 - Beta\",\n            \"Intended Audience :: Developers\",\n            \"License :: OSI Approved :: MIT License\",\n            \"Natural Language :: English\",\n            \"Operating System :: MacOS\",\n            \"Operating System :: POSIX :: Linux\",\n            \"Programming Language :: Python :: 3\",\n            \"Programming Language :: Python :: 3.9\",\n            \"Programming Language :: Python :: 3.10\",\n            \"Programming Language :: Python :: 3.11\",\n            \"Programming Language :: Python :: 3.12\",\n            \"Programming Language :: Python :: 3 :: Only\",\n            \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n            \"Topic :: Multimedia :: Graphics :: Presentation\",\n        ],\n        packages=[\"thumbor\"],\n        package_dir={\"thumbor\": \"thumbor\"},\n        include_package_data=True,\n        package_data={\"\": [\"*.xml\"]},\n        install_requires=[\n            \"colorama==0.*,>=0.4.6\",\n            \"derpconf==0.*,>=0.8.4\",\n            \"libthumbor==2.*,>=2.0.2\",\n            \"piexif==1.*,>=1.1.3\",\n            \"Pillow==10.*\",\n            \"pytz==2023.*,>=2023.3.post1\",\n            \"statsd==4.*,>=4.0.1\",\n            \"tornado==6.*,>=6.4\",\n            \"thumbor-plugins-gifv==0.*,>=0.1.5\",\n            \"webcolors==1.*,>=1.13.0\",\n            \"JpegIPTC==1.*,>=1.5\",\n        ],\n        extras_require={\n            \"all\": ALL_REQUIREMENTS,\n            \"opencv\": OPENCV_REQUIREMENTS,\n            \"tests\": ALL_REQUIREMENTS + TESTS_REQUIREMENTS,\n        },\n        entry_points={\n            \"console_scripts\": [\n                \"thumbor=thumbor.server:main\",\n                \"thumbor-url=thumbor.url_composer:main\",\n                \"thumbor-config=thumbor.config:generate_config\",\n                \"thumbor-doctor=thumbor.doctor:main\",\n            ],\n        },\n        ext_modules=extension_modules,\n        **kwargs,\n    )\n\n\ntry:\n    run_setup(gather_filter_extensions())\nexcept SystemExit as exit_error:\n    print(f\"\\n\\n{'*' * 66}\")\n    logging.exception(exit_error)\n    print(f\"\\n\\n{'*' * 66}\")\n    print(\n        \"Couldn't build one or more native extensions\"\n        \", skipping compilation.\\n\\n\"\n    )\n    run_setup()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "thumbor.key",
          "type": "blob",
          "size": 0.0205078125,
          "content": "my-security-key-file\n"
        },
        {
          "name": "thumbor",
          "type": "tree",
          "content": null
        },
        {
          "name": "unwanted_packages",
          "type": "blob",
          "size": 0.1552734375,
          "content": "ffmpeg\nx264\nlibx264-dev\nchromium-browser\ncouchdb\nelasticsearch\nfirebird-dev\nfirefox\ngroovy\nmemcached\nmercurial\nmysql-client\nmysql-server\npostgresql\nx11-common\n"
        }
      ]
    }
  ]
}