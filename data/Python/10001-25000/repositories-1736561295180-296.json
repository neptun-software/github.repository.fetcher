{
  "metadata": {
    "timestamp": 1736561295180,
    "page": 296,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Gallopsled/pwntools",
      "stars": 12266,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03125,
          "content": "pwnlib/data/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1826171875,
          "content": "*.o\n*.hi\n*.pyc\n*~\n*.swp\n.ropeproject\n*.pdf\n*/auto/*\n*/bin/*\ndocs/build\nbuild\nMANIFEST\ndist\nvenv\n.vscode\n.idea\n*.egg-info\n*.core\n.coverage\n.coverage.*\n.idea\n__pycache__\n!.github\n.DS_Store\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.0673828125,
          "content": "[settings]\nindent='    '\nnot_skip = __init__.py\nforce_single_line = 1"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.224609375,
          "content": "# https://docs.readthedocs.io/en/stable/config-file/v2.html\n\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3\"\n\nsphinx:\n  configuration: docs/source/conf.py\n\npython:\n  install:\n  - requirements: docs/requirements.txt\n"
        },
        {
          "name": ".sublime-settings",
          "type": "blob",
          "size": 0.1787109375,
          "content": "{\n    \"default_encoding\": \"UTF-8\",\n    \"ensure_newline_at_eof_on_save\": true,\n    \"tab_size\": 4,\n    \"translate_tabs_to_spaces\": true,\n    \"trim_trailing_white_space_on_save\": true\n}\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 61.4765625,
          "content": "# Changelog\n\nThis changelog only includes added major features and changes. Bugfixes and\nminor changes are omitted.\n\n## Release History\n\nThe table below shows which release corresponds to each branch, and what date the version was released.\n\n| Version          | Branch   | Release Date           |\n| ---------------- | -------- | ---------------------- |\n| [4.15.0](#4150-dev)  | `dev`    |\n| [4.14.0](#4140-beta)  | `beta`   |\n| [4.13.1](#4131-stable)  | `stable`    | Sep 29, 2024\n| [4.13.0](#4130)  |          | Aug 12, 2024\n| [4.12.0](#4120)  |          | Feb 22, 2024\n| [4.11.1](#4111)  |          | Nov 14, 2023\n| [4.11.0](#4110)  |          | Sep 15, 2023\n| [4.10.0](#4100)  |          | May 21, 2023\n| [4.9.0](#490)    |          | Dec 29, 2022\n| [4.8.0](#480)    |          | Apr 21, 2022\n| [4.7.1](#471)    |          | Apr 20, 2022\n| [4.7.0](#470)    |          | Nov 15, 2021\n| [4.6.0](#460)    |          | Jul 12, 2021\n| [4.5.1](#451)    |          | May 30, 2021\n| [4.5.0](#450)    |          | Apr 30, 2021\n| [4.4.0](#440)    |          | Mar 29, 2021\n| [4.3.1](#431)    |          | Nov 29, 2020\n| [4.3.0](#430)    |          | Oct 20, 2020\n| [4.2.0](#420)    |          | Jul 3, 2020\n| [4.1.7](#417)    |          | Jun 30, 2020\n| [4.1.5](#415)    |          | Jun 27, 2020\n| [4.1.4](#414)    |          | Jun 26, 2020\n| [4.1.3](#413)    |          | Jun 23, 2020\n| [4.1.2](#412)    |          | Jun 5, 2020\n| [4.1.1](#411)    |          | Jun 3, 2020\n| [4.1.0](#410)    |          | May 8, 2020\n| [4.0.1](#401)    |          | Jan 22, 2020\n| [4.0.0](#400)    |          | Jan 09, 2020\n| [3.13.0](#3130)  |          | Nov 5, 2019\n| [3.12.2](#3122)  |          | Jan 8, 2019\n| [3.12.1](#3121)  |          | Sept 17, 2018\n| [3.12.0](#3120)  |          | Feb 22, 2018\n| [3.11.0](#3110)  |          | Jan 3, 2018\n| [3.10.0](#3100)  |          | Oct 25, 2017\n| [3.9.2](#392)    |          | Oct 5, 2017\n| [3.9.1](#391)    |          | Sep 28, 2017\n| [3.9.0](#390)    |          | Sep 11, 2017\n| [3.8.0](#380)    |          | Jul 29, 2017\n| [3.7.1](#371)    |          | Jul 14, 2017\n| [3.7.0](#370)    |          | Jun 19, 2017\n| [3.6.1](#361)    |          | May 12, 2017\n| [3.6.0](#360)    |          | May 8, 2017\n| [3.5.1](#351)    |          | Apr 15, 2017\n| [3.5.0](#350)    |          | Mar 26, 2017\n| [3.4.1](#341)    |          | Feb 17, 2017\n| [3.4.0](#340)    |          | Feb 13, 2017\n| [3.3.4](#334)    |          | Jan 12, 2016\n| [3.3.3](#333)    |          | Jan 10, 2016\n| [3.3.2](#332)    |          | Jan 10, 2016\n| [3.3.1](#331)    |          | Jan 10, 2016\n| [3.3.0](#330)    |          | Dec 24, 2016\n| [3.2.1](#321)    |          | Dec 24, 2016\n| [3.2.0](#320)    |          | Nov 12, 2016\n| [3.1.1](#311)    |          | Oct 23, 2016\n| [3.1.0](#310)    |          | Oct 2, 2016\n| [3.0.4](#304)    |          | Sept 19, 2016\n| [3.0.3](#303)    |          | Sept 18, 2016\n| [3.0.2](#302)    |          | Sept 6, 2016\n| [3.0.1](#301)    |          | Aug 20, 2016\n| [3.0.0](#300)    |          | Aug 20, 2016\n| [2.2.0](#220)    |          | Jan 5, 2015\n\n## 4.15.0 (`dev`)\n\n- [#2471][2471] Properly close spawned kitty window\n- [#2358][2358] Cache output of `asm()`\n- [#2457][2457] Catch exception of non-ELF files in checksec.\n- [#2444][2444] Add `ELF.close()` to release resources\n- [#2413][2413] libcdb: improve the search speed of `search_by_symbol_offsets` in local libc-database\n- [#2470][2470] Fix waiting for gdb under WSL2\n- [#2479][2479] Support extracting libraries from Docker image in `pwn template`\n- [#2483][2483] Only print `checksec` output of `ELF.libc` when it was printed for the `ELF` already\n- [#2482][2482] Throw error when using `sni` and setting `server_hostname` manually in `remote`\n- [#2478][2478] libcdb-cli: add `--offline-only`, refactor unstrip and add fetch parser for download libc-database\n- [#2484][2484] Allow to disable caching\n- [#2291][2291] Fix attaching to a gdbserver with tuple `gdb.attach(('0.0.0.0',12345))`\n- [#2410][2410] Add `tube.upload_manually` to upload files in chunks\n- [#2502][2502] Fix loading ELF files without valid .dynamic section\n- [#2476][2476] Deprecate 'keepends' argument in favor of 'drop' in `tube.recvline*`\n- [#2364][2364] Deprecate direct commandline scripts invocation and exclude nonsense ones\n\n[2471]: https://github.com/Gallopsled/pwntools/pull/2471\n[2358]: https://github.com/Gallopsled/pwntools/pull/2358\n[2457]: https://github.com/Gallopsled/pwntools/pull/2457\n[2444]: https://github.com/Gallopsled/pwntools/pull/2444\n[2413]: https://github.com/Gallopsled/pwntools/pull/2413\n[2470]: https://github.com/Gallopsled/pwntools/pull/2470\n[2479]: https://github.com/Gallopsled/pwntools/pull/2479\n[2483]: https://github.com/Gallopsled/pwntools/pull/2483\n[2482]: https://github.com/Gallopsled/pwntools/pull/2482\n[2478]: https://github.com/Gallopsled/pwntools/pull/2478\n[2484]: https://github.com/Gallopsled/pwntools/pull/2484\n[2291]: https://github.com/Gallopsled/pwntools/pull/2291\n[2410]: https://github.com/Gallopsled/pwntools/pull/2410\n[2502]: https://github.com/Gallopsled/pwntools/pull/2502\n[2476]: https://github.com/Gallopsled/pwntools/pull/2476\n[2364]: https://github.com/Gallopsled/pwntools/pull/2364\n\n## 4.14.0 (`beta`)\n\n- [#2356][2356] Add local libc database provider for libcdb\n- [#2360][2360] Add offline parameter for `search_by_hash` series function\n- [#2388][2388] libcdb: add `offline_only` to `search_by_symbol_offsets`\n- [#2374][2374] libcdb.unstrip_libc: debug symbols are fetched only if not present\n- [#2327][2327] Add basic support to debug processes on Windows\n- [#2437][2437] Support asm/disasm on Windows\n- [#2330][2330] Change `context.newline` when setting `context.os` to `\"windows\"`\n- [#2322][2322] Add basic RISCV64 shellcraft support\n- [#2376][2376] Return buffered data on first EOF in tube.readline()\n- [#2371][2371] Add functions for retrieving process mappings\n- [#2398][2398] Add support for generating multiple shellcodes at a time in shellcraft\n- [#2389][2389] Fix passing bytes to `context.log_file` and `crc.BitPolynom`\n- [#2391][2391] Fix error message when passing invalid kwargs to `xor`\n- [#2387][2387] Convert apport_corefile() output from bytes-like object to string\n- [#2415][2415] Add shellcraft template for IPv6 socket\n- [#2405][2405] Add \"none\" ssh authentication method\n- [#2427][2427] Document behaviour of remote()'s sni argument as string.\n- [#2382][2382] added optional port, gdb_args and gdbserver_args parameters to gdb.debug()\n- [#2435][2435] Speed up gdbserver handshake in gdb.debug()\n- [#2436][2436] Add resolution_addr parameter to Ret2dlresolvePayload\n\n[2436]: https://github.com/Gallopsled/pwntools/pull/2436\n[2371]: https://github.com/Gallopsled/pwntools/pull/2371\n[2360]: https://github.com/Gallopsled/pwntools/pull/2360\n[2356]: https://github.com/Gallopsled/pwntools/pull/2356\n[2374]: https://github.com/Gallopsled/pwntools/pull/2374\n[2327]: https://github.com/Gallopsled/pwntools/pull/2327\n[2322]: https://github.com/Gallopsled/pwntools/pull/2322\n[2330]: https://github.com/Gallopsled/pwntools/pull/2330\n[2389]: https://github.com/Gallopsled/pwntools/pull/2389\n[2391]: https://github.com/Gallopsled/pwntools/pull/2391\n[2376]: https://github.com/Gallopsled/pwntools/pull/2376\n[2387]: https://github.com/Gallopsled/pwntools/pull/2387\n[2388]: https://github.com/Gallopsled/pwntools/pull/2388\n[2398]: https://github.com/Gallopsled/pwntools/pull/2398\n[2415]: https://github.com/Gallopsled/pwntools/pull/2415\n[2405]: https://github.com/Gallopsled/pwntools/pull/2405\n[2427]: https://github.com/Gallopsled/pwntools/pull/2405\n[2382]: https://github.com/Gallopsled/pwntools/pull/2382\n[2435]: https://github.com/Gallopsled/pwntools/pull/2435\n[2437]: https://github.com/Gallopsled/pwntools/pull/2437\n\n## 4.13.2\n\n- [#2497][2497] Fix remote.fromsocket() to handle AF_INET6 socket\n\n[2497]: https://github.com/Gallopsled/pwntools/pull/2497\n\n## 4.13.1 (`stable`)\n\n- [#2445][2445] Fix parsing the PLT on Windows\n- [#2466][2466] Fix PLT emulation with Unicorn 2.1.0\n- [#2466][2466] Switch to PyPi Simple API for update checks\n- [#2467][2467] Fix loading at all on Windows\n- [#2469][2469] GDB 15+ rpyc detection\n\n[2445]: https://github.com/Gallopsled/pwntools/pull/2445\n[2466]: https://github.com/Gallopsled/pwntools/pull/2466\n[2467]: https://github.com/Gallopsled/pwntools/pull/2467\n[2469]: https://github.com/Gallopsled/pwntools/pull/2469\n\n## 4.13.0\n\n- [#2242][2242] Term module revamp: activating special handling of terminal only when necessary\n- [#2277][2277] elf: Resolve more relocations into GOT entries\n- [#2281][2281] FIX: Getting right amount of data for search fix\n- [#2293][2293] Add x86 CET status to checksec output\n- [#1763][1763] Allow to add to the existing environment in `process` instead of replacing it\n- [#2307][2307] Fix `pwn libcdb file` crashing if \"/bin/sh\" string was not found\n- [#2309][2309] Detect challenge binary and libc in `pwn template`\n- [#2308][2308] Fix WinExec shellcraft to make sure it's 16 byte aligned\n- [#2279][2279] Make `pwn template` always set context.binary\n- [#2310][2310] Add support to start a process on Windows\n- [#2335][2335] Add lookup optimizations in DynELF \n- [#2334][2334] Speed up disasm commandline tool with colored output\n- [#2328][2328] Lookup using $PATHEXT file extensions in `which` on Windows\n- [#2189][2189] Explicitly define p64/u64 functions for IDE support\n- [#2339][2339] Fix: Allow setting attributes on gdb Breakpoints\n- [#2323][2323] Retry failed lookups after one week in libcdb\n- [#2325][2325] Match against local system libc first in libcdb\n- [#2336][2336] Add `ELF.stripped` and `ELF.debuginfo` properties\n- [#2161][2161] Add basic support for darwin shellcraft/asm/disasm/run_shellcode/run_assembly\n- [#2161][2161] Fix freebsd amd64 SyscallABI\n- [#2160][2161] Fix invalid shellcraft.mov on arm64\n- [#2284][2161] Fix invalid shellcraft.pushstr_array on arm64\n- [#2345][2345] Fix pwn constgrep when it matches a non-constant type\n- [#2338][2338] Fix: follow symlink for libs on ssh connection\n- [#2341][2341] Launch GDB correctly in iTerm on Mac\n- [#2268][2268] Add a `flatten` argument to `ssh.libs`\n- [#2347][2347] Fix/workaround Unicorn Engine 1GB limit that calls exit()\n- [#2233][2233] Fix gdb.debug: exe parameter now respected, allow empty argv\n- [#2373][2373] Fix displaying bright color variation in terminal output\n- [#2378][2378] Don't go though a shell in `gdb.debug`\n\n[2242]: https://github.com/Gallopsled/pwntools/pull/2242\n[2277]: https://github.com/Gallopsled/pwntools/pull/2277\n[2281]: https://github.com/Gallopsled/pwntools/pull/2281\n[2293]: https://github.com/Gallopsled/pwntools/pull/2293\n[1763]: https://github.com/Gallopsled/pwntools/pull/1763\n[2307]: https://github.com/Gallopsled/pwntools/pull/2307\n[2309]: https://github.com/Gallopsled/pwntools/pull/2309\n[2308]: https://github.com/Gallopsled/pwntools/pull/2308\n[2279]: https://github.com/Gallopsled/pwntools/pull/2279\n[2310]: https://github.com/Gallopsled/pwntools/pull/2310\n[2335]: https://github.com/Gallopsled/pwntools/pull/2335\n[2334]: https://github.com/Gallopsled/pwntools/pull/2334\n[2328]: https://github.com/Gallopsled/pwntools/pull/2328\n[2189]: https://github.com/Gallopsled/pwntools/pull/2189\n[2339]: https://github.com/Gallopsled/pwntools/pull/2339\n[2323]: https://github.com/Gallopsled/pwntools/pull/2323\n[2325]: https://github.com/Gallopsled/pwntools/pull/2325\n[2336]: https://github.com/Gallopsled/pwntools/pull/2336\n[2161]: https://github.com/Gallopsled/pwntools/pull/2161\n[2345]: https://github.com/Gallopsled/pwntools/pull/2345\n[2338]: https://github.com/Gallopsled/pwntools/pull/2338\n[2341]: https://github.com/Gallopsled/pwntools/pull/2341\n[2268]: https://github.com/Gallopsled/pwntools/pull/2268\n[2347]: https://github.com/Gallopsled/pwntools/pull/2347\n[2233]: https://github.com/Gallopsled/pwntools/pull/2233\n[2373]: https://github.com/Gallopsled/pwntools/pull/2373\n[2378]: https://github.com/Gallopsled/pwntools/pull/2378\n\n## 4.12.0\n\n- [#2202][2202] Fix `remote` and `listen` in sagemath\n- [#2117][2117] Add -p (--prefix) and -s (--separator) arguments to `hex` command\n- [#2221][2221] Add shellcraft.sleep template wrapping SYS_nanosleep\n- [#2219][2219] Fix passing arguments on the stack in shellcraft syscall template\n- [#2212][2212] Add `--libc libc.so` argument to `pwn template` command\n- [#2257][2257] Allow creation of custom templates for `pwn template` command\n- [#2225][2225] Allow empty argv in ssh.process()\n- [#2349][2349] Fix term.readline omitting a trailing \\n\n- [#2352][2352] add `RETURN_CONST` as an allowed `_const_code` in safeeval\n\n[2202]: https://github.com/Gallopsled/pwntools/pull/2202\n[2117]: https://github.com/Gallopsled/pwntools/pull/2117\n[2221]: https://github.com/Gallopsled/pwntools/pull/2221\n[2219]: https://github.com/Gallopsled/pwntools/pull/2219\n[2212]: https://github.com/Gallopsled/pwntools/pull/2212\n[2257]: https://github.com/Gallopsled/pwntools/pull/2257\n[2225]: https://github.com/Gallopsled/pwntools/pull/2225\n[2349]: https://github.com/Gallopsled/pwntools/pull/2349\n[2352]: https://github.com/Gallopsled/pwntools/pull/2352\n\n## 4.11.1\n\n- [#2271][2271] FIX: Generated shebang with path to python invalid if path contains spaces\n- [#2272][2272] Fix `tube.clean_and_log` not logging buffered data\n- [#2281][2281] FIX: Getting right amount of data for search fix\n- [#2287][2287] Fix `_countdown_handler` not invoking `timeout_change`\n- [#2294][2294] Fix atexit SEGV in aarch64 loader\n\n[2271]: https://github.com/Gallopsled/pwntools/pull/2271\n[2272]: https://github.com/Gallopsled/pwntools/pull/2272\n[2281]: https://github.com/Gallopsled/pwntools/pull/2281\n[2287]: https://github.com/Gallopsled/pwntools/pull/2287\n[2294]: https://github.com/Gallopsled/pwntools/pull/2294\n\n## 4.11.0\n\n- [#2185][2185] make fmtstr module able to create payload without $ notation \n- [#2103][2103] Add search for libc binary by leaked function addresses `libcdb.search_by_symbol_offsets()`\n- [#2177][2177] Support for RISC-V 64-bit architecture\n- [#2186][2186] Enhance `ELF.nx` and `ELF.execstack`\n- [#2129][2129] Handle `context.newline` correctly when typing in `tube.interactive()`\n- [#2214][2214] Fix bug at ssh.py:`download` and `download_file` with relative paths\n- [#2241][2241] Fix ssh.process not setting ssh_process.cwd attribute\n- [#2261][2261] Fix corefile module after pyelftools update\n\n[2185]: https://github.com/Gallopsled/pwntools/pull/2185\n[2103]: https://github.com/Gallopsled/pwntools/pull/2103\n[2177]: https://github.com/Gallopsled/pwntools/pull/2177\n[2186]: https://github.com/Gallopsled/pwntools/pull/2186\n[2129]: https://github.com/Gallopsled/pwntools/pull/2129\n[2214]: https://github.com/Gallopsled/pwntools/pull/2214\n[2241]: https://github.com/Gallopsled/pwntools/pull/2241\n[2261]: https://github.com/Gallopsled/pwntools/pull/2261\n\n## 4.10.0\n\nIn memoriam — [Zach Riggle][zach] — long time contributor and maintainer of Pwntools.\n\n- [#2062][2062] make pwn cyclic -l work with entry larger than 4 bytes\n- [#2092][2092] shellcraft: dup() is now called dupio() consistently across all supported arches\n- [#2093][2093] setresuid() in shellcraft uses current euid by default\n- [#2125][2125] Allow tube.recvregex to return capture groups\n- [#2144][2144] Removes `p2align 2` `asm()` headers from `x86-32`, `x86-64` and `mips` architectures to avoid inconsistent instruction length when patching binaries\n\n[2062]: https://github.com/Gallopsled/pwntools/pull/2062\n[2092]: https://github.com/Gallopsled/pwntools/pull/2092\n[2093]: https://github.com/Gallopsled/pwntools/pull/2093\n[2125]: https://github.com/Gallopsled/pwntools/pull/2125\n[2144]: https://github.com/Gallopsled/pwntools/pull/2144\n[zach]: https://github.com/zachriggle\n\n## 4.9.0\n\n- [#1975][1975] Add libcdb commandline tool\n- [#1979][1979] Add `js_escape()` and `js_unescape()` to `util.fiddling`\n- [#2011][2011] Fix tube's debug output of same byte compression\n- [#2023][2023] Support KDE Konsole in run_in_new_terminal function\n- [#2027][2027] Fix ELF.libc_start_main_return with glibc 2.34\n- [#2033][2033] Quote file and core path in generated GDB script\n- [#2035][2035] Change Buffer's parent class to object\n- [#2037][2037] Allow SSH tunnel to be treated like a TCP socket (with 'raw=True')\n- [#2123][2123] Fix ROP without a writeable cache directory\n- [#2124][2124] Fix `tube.recvpred()` timeout argument\n\n[1975]: https://github.com/Gallopsled/pwntools/pull/1975\n[1979]: https://github.com/Gallopsled/pwntools/pull/1979\n[2011]: https://github.com/Gallopsled/pwntools/pull/2011\n[2023]: https://github.com/Gallopsled/pwntools/pull/2023\n[2027]: https://github.com/Gallopsled/pwntools/pull/2027\n[2033]: https://github.com/Gallopsled/pwntools/pull/2033\n[2035]: https://github.com/Gallopsled/pwntools/pull/2035\n[2037]: https://github.com/Gallopsled/pwntools/pull/2037\n[2123]: https://github.com/Gallopsled/pwntools/pull/2123\n[2124]: https://github.com/Gallopsled/pwntools/pull/2124\n\n## 4.8.0\n\n- [#1922][1922] Fix logic in `wait_for_debugger`\n- [#1828][1828] libcdb: Load debug info and unstrip libc binary\n- [#1939][1939] Fix error in validating log levels\n- [#1981][1981] Fix `cyclic_find()` to make it work with large int values\n\n[1922]: https://github.com/Gallopsled/pwntools/pull/1922\n[1828]: https://github.com/Gallopsled/pwntools/pull/1828\n[1939]: https://github.com/Gallopsled/pwntools/pull/1939\n[1981]: https://github.com/Gallopsled/pwntools/pull/1981\n\n## 4.7.1\n\n- [#1784][1784] Use temporary cache directory when persistent cache cannot be used\n- [#1973][1973] ELF symbols can be looked up by bytes values\n- several bugfixes ([#2012][2012], [#2031][2031], [#1912][1912], [#1961][1961],\n[#2007][2007], [#2040][2040], [#2051][2051])\n\n[1784]: https://github.com/Gallopsled/pwntools/pull/1784\n[1912]: https://github.com/Gallopsled/pwntools/pull/1912\n[1961]: https://github.com/Gallopsled/pwntools/pull/1961\n[1973]: https://github.com/Gallopsled/pwntools/pull/1973\n[2007]: https://github.com/Gallopsled/pwntools/pull/2007\n[2012]: https://github.com/Gallopsled/pwntools/pull/2012\n[2031]: https://github.com/Gallopsled/pwntools/pull/2031\n[2040]: https://github.com/Gallopsled/pwntools/pull/2040\n[2051]: https://github.com/Gallopsled/pwntools/pull/2051\n\n## 4.7.0\n\n- [#1733][1733] Update libc headers -> more syscalls available!\n- [#1876][1876] add `self.message` and change `sys.exc_type` to `sys.exec_info()` in PwnlibException\n- [#1877][1877] encoders error message handles when `avoid` is bytes in python3\n- [#1891][1891] Keep ROP gadgets when setting registers via setattr/call\n- [#1892][1892] Silence SIGPIPE error for \"pwn phd\"\n- [#1893][1893] Fix bytes warning in \"pwn cyclic\"\n- [#1897][1897] Add basic support for RISC-V\n- [#1903][1903] Add zsh completion script\n- [#1904][1904] Add bash completion script\n- [#1906][1906] Defer import of several modules to save on startup time\n- [#1921][1921] Add basic support for the bare-metal ARM specific toolchain\n- [#1995][1995] Add `shellcraft.*.linux.cat2`, which uses alloc+read+write instead of sendfile\n\n[1733]: https://github.com/Gallopsled/pwntools/pull/1733\n[1876]: https://github.com/Gallopsled/pwntools/pull/1876\n[1877]: https://github.com/Gallopsled/pwntools/pull/1877\n[1891]: https://github.com/Gallopsled/pwntools/pull/1891\n[1892]: https://github.com/Gallopsled/pwntools/pull/1892\n[1893]: https://github.com/Gallopsled/pwntools/pull/1893\n[1897]: https://github.com/Gallopsled/pwntools/pull/1897\n[1903]: https://github.com/Gallopsled/pwntools/pull/1903\n[1904]: https://github.com/Gallopsled/pwntools/pull/1904\n[1906]: https://github.com/Gallopsled/pwntools/pull/1906\n[1921]: https://github.com/Gallopsled/pwntools/pull/1921\n[1995]: https://github.com/Gallopsled/pwntools/pull/1995\n\n## 4.6.0\n\n- [#1429][1429] Add a mechanism for ret2csu (originally #1138)\n- [#1566][1566] Add `ignore_config` argument to `pwnlib.tubes.ssh` and improve `allow_agent` implementation\n- [#1652][1652] Add `process.readmem` and `process.writemem`\n- [#1739][1739] Add/fix shellcraft.linux.kill() / shellcraft.linux.killparent()\n- [#1746][1746] Prefer Python3 over Python2 for spawning remote processes over SSH\n- [#1751][1751] Fix process() with executable relative to cwd\n- [#1753][1753] major change: less unconditional imports in pwnlib\n- [#1776][1776] mips: do not use $t0 temporary variable in dupio\n- [#1846][1846] support launching GDB in more different terminals\n\n[1429]: https://github.com/Gallopsled/pwntools/pull/1429\n[1566]: https://github.com/Gallopsled/pwntools/pull/1566\n[1652]: https://github.com/Gallopsled/pwntools/pull/1652\n[1739]: https://github.com/Gallopsled/pwntools/pull/1739\n[1746]: https://github.com/Gallopsled/pwntools/pull/1746\n[1751]: https://github.com/Gallopsled/pwntools/pull/1751\n[1753]: https://github.com/Gallopsled/pwntools/pull/1753\n[1776]: https://github.com/Gallopsled/pwntools/pull/1776\n[1846]: https://github.com/Gallopsled/pwntools/pull/1846\n\n## 4.5.1\n\n- [#1902][1902] Always specify -F and -P for tmux in `run_in_new_terminal`\n\n[1902]: https://github.com/Gallopsled/pwntools/pull/1902\n\n## 4.5.0\n\n- [#1261][1261] Misc `run_in_new_terminal` improvements (notably gdb terminated by default)\n- [#1695][1695] Allow using GDB Python API\n- [#1735][1735] Python 3.9 support in safeeval\n- [#1738][1738] Which function support custom search path\n  - process also looks now at `env['PATH']` to find the path for the executable\n- [#1742][1742] New `baremetal` os to debug binaries executed with qemu-system-$(arch)\n- [#1757][1757] update cache directories\n- [#1758][1758] Remove eval from cli\n- [#1780][1780] Re-add Python2 to the official Dockerfile\n- [#1941][1941] Disable all Android tests, `pwnlib.adb` is no longer supported in CI\n- [#1811][1811] Remove unnecessary `pwn.toplevel.__all__`\n- [#1827][1827] Support `$XDG_CONFIG_HOME` dir for `pwn.conf`\n- [#1841][1841] Add colored_traceback\n- [#1839][1839] run_in_new_terminal now creates a runner script if given a list or tuple\n- [#1833][1833] Add pwnlib.filesystem module\n- [#1852][1852] Fix `atexit` on Python 3\n- [#1883][1883] ROP gadget verifier accounts for 2 character registers\n\n[1261]: https://github.com/Gallopsled/pwntools/pull/1261\n[1695]: https://github.com/Gallopsled/pwntools/pull/1695\n[1735]: https://github.com/Gallopsled/pwntools/pull/1735\n[1738]: https://github.com/Gallopsled/pwntools/pull/1738\n[1742]: https://github.com/Gallopsled/pwntools/pull/1742\n[1757]: https://github.com/Gallopsled/pwntools/pull/1757\n[1758]: https://github.com/Gallopsled/pwntools/pull/1758\n[1780]: https://github.com/Gallopsled/pwntools/pull/1780\n[1941]: https://github.com/Gallopsled/pwntools/pull/1941\n[1811]: https://github.com/Gallopsled/pwntools/pull/1811\n[1827]: https://github.com/Gallopsled/pwntools/pull/1827\n[1841]: https://github.com/Gallopsled/pwntools/pull/1841\n[1839]: https://github.com/Gallopsled/pwntools/pull/1839\n[1833]:  https://github.com/Gallopsled/pwntools/pull/1833\n[1852]: https://github.com/Gallopsled/pwntools/pull/1852\n[1883]: https://github.com/Gallopsled/pwntools/pull/1883\n\n## 4.4.0\n\n- [#1541][1541] Use `context.newline` for tubes by default\n- [#1602][1602] Fix bytes handling in ssh tubes\n- [#1606][1606] Fix `asm()` and `disasm()` for MSP430, S390\n- [#1616][1616] Fix `cyclic` cli for 64 bit integers\n- [#1632][1632] Enable usage of Pwntools in jupyter\n- [#1633][1633] Open a shell if `pwn template` cannot download the remote file\n- [#1644][1644] Enable and support SNI for SSL-wrapped tubes\n- [#1651][1651] Make `pwn shellcraft` faster\n- [#1654][1654] Docker images (`pwntools/pwntools:stable` etc) now use Python3 by default, and includes assemblers for a few common architectures\n- [#1667][1667] Add i386 encoder `ascii_shellcode` (Fixed docs in #1693)\n- Fix syscall instruction lists for SROP on `i386` and `amd64`\n- Fix migration to another ROP\n- [#1673][1673] Add `base=` argument to `ROP.chain()` and `ROP.dump()`\n- [#1675][1675] Gdbserver now correctly accepts multiple libraries in `LD_PRELOAD` and `LD_LIBRARY_PATH`\n- [#1678][1678] ROPGadget multibr\n- [#1682][1682] ROPGadget multibr fix\n- [#1687][1687] Actually import `requests` when doing `from pwn import *`\n- [#1688][1688] Add `__setattr__` and `__call__` interfaces to `ROP` for setting registers\n- [#1692][1692] Remove python2 shebangs where appropriate\n- [#1703][1703] Update libcdb buildid offsets for amd64 and i386\n- [#1704][1704] Try https://libc.rip/ for libcdb lookup\n\n[1541]: https://github.com/Gallopsled/pwntools/pull/1541\n[1602]: https://github.com/Gallopsled/pwntools/pull/1602\n[1606]: https://github.com/Gallopsled/pwntools/pull/1606\n[1616]: https://github.com/Gallopsled/pwntools/pull/1616\n[1632]: https://github.com/Gallopsled/pwntools/pull/1632\n[1633]: https://github.com/Gallopsled/pwntools/pull/1633\n[1644]: https://github.com/Gallopsled/pwntools/pull/1644\n[1651]: https://github.com/Gallopsled/pwntools/pull/1651\n[1654]: https://github.com/Gallopsled/pwntools/pull/1654\n[1667]: https://github.com/Gallopsled/pwntools/pull/1667\n[1673]: https://github.com/Gallopsled/pwntools/pull/1673\n[1675]: https://github.com/Gallopsled/pwntools/pull/1675\n[1678]: https://github.com/Gallopsled/pwntools/pull/1678\n[1682]: https://github.com/Gallopsled/pwntools/pull/1679\n[1687]: https://github.com/Gallopsled/pwntools/pull/1687\n[1688]: https://github.com/Gallopsled/pwntools/pull/1688\n[1692]: https://github.com/Gallopsled/pwntools/pull/1692\n[1703]: https://github.com/Gallopsled/pwntools/pull/1703\n[1704]: https://github.com/Gallopsled/pwntools/pull/1704\n\n## 4.3.1\n\n- [#1732][1732] Fix shellcraft SSTI vulnerability (first major pwntools vuln!)\n\n[1732]: https://github.com/Gallopsled/pwntools/pull/1732\n\n## 4.3.0\n\n- [#1576][1576] Add `executable=` argument to `ELF.search`\n- [#1584][1584] Add `jmp_esp`/`jmp_rsp` attribute to `ROP`\n- [#1592][1592] Fix over-verbose logging of process() environment\n- [#1593][1593] Colorize output of `pwn template`\n- [#1601][1601] Add `pwn version` command line tool\n- [#1605][1605] Add to `fiddling.hexdump` a way to suppress the total at the end\n- [#1613][1613] Permit `--password` for `pwn template`\n- [#1616][1616] Fix `cyclic` cli for 64 bit integers\n- [#1564][1564] Fix `asm()` and `disasm()` for PowerPC64, MIPS64, Sparc64\n- [#1621][1621] Permit negative values in flat() and fit()\n\n[1576]: https://github.com/Gallopsled/pwntools/pull/1576\n[1584]: https://github.com/Gallopsled/pwntools/pull/1584\n[1592]: https://github.com/Gallopsled/pwntools/pull/1592\n[1593]: https://github.com/Gallopsled/pwntools/pull/1593\n[1601]: https://github.com/Gallopsled/pwntools/pull/1601\n[1605]: https://github.com/Gallopsled/pwntools/pull/1605\n[1613]: https://github.com/Gallopsled/pwntools/pull/1613\n[1616]: https://github.com/Gallopsled/pwntools/pull/1616\n[1564]: https://github.com/Gallopsled/pwntools/pull/1564\n[1621]: https://github.com/Gallopsled/pwntools/pull/1621\n\n## 4.2.1\n\n- [#1625][1625] GDB now properly loads executables with QEMU\n- [#1663][1663] Change lookup algorithm of `adb.which`\n- [#1699][1699] Fix broken linux shellcraft templates\n\n[1625]: https://github.com/Gallopsled/pwntools/pull/1625\n[1699]: https://github.com/Gallopsled/pwntools/pull/1699\n\n## 4.2.0\n\n- [#1436][1436] Add ret2dlresolve automation\n- [fecf9f] tubes.ssh.process() no longer requires python 2 installed on remote (still requires python, though)\n- Miscellanous improvements to DynElf and fmtstr leaker (see examples/fmtstr/exploit2.py)\n- [#1454][1454] Support for windows console colors\n\n[1436]: https://github.com/Gallopsled/pwntools/pull/1436\n[fecf9f]: http://github.com/Gallopsled/pwntools/commit/fecf9f\n[1454]: https://github.com/Gallopsled/pwntools/pull/1454\n\n## 4.1.7 (`stable`)\n\n- [#1615][1615] Fix aarch64 pushstr and pushstr_array\n\n[1615]: https://github.com/Gallopsled/pwntools/pull/1454\n\n## 4.1.5\n\n- [#1517][1517] flat(..., filler=) is fixed for `str` values and Python2 `bytes`\n\n[1517]: https://github.com/Gallopsled/pwntools/pull/1517\n\n## 4.1.4\n\n- [#1698][1609] Fix issues in `packing.flat` with mis-ordred fields\n\n[1609]: https://github.com/Gallopsled/pwntools/pull/1609\n\n## 4.1.3\n\n- [#1590][1590] Fix `gdb.attach()` for `remote`, `listen`, `ssh` tubes\n  - Also fix `run_in_new_terminal` for Py2 unicode strings\n- [#1595][1595] Fix ssh.process(timeout=)\n\n[1590]: https://github.com/Gallopsled/pwntools/pull/1590\n[1595]: https://github.com/Gallopsled/pwntools/pull/1595\n\n## 4.1.2\n\n- Pwntools requires `six` v.1.12.0 or higher\n\n## 4.1.1\n\n- Fix PLT resolution by locking unicorn <1.0.2rc4 (#1538)\n- Fix wrong ELF/context unpack handling (c4c11a37)\n- Fix updating of ELF.functions addresses after changing ELF.address #1512 (#1513)\n- Update Corefile warnings and replace asserts with normal checks (#1526)\n- several py2-py3 issues (#1451)\n- Fix cyclic command\n\n## 4.1.0\n\n- [#1316][1316] Fix connect shellcraft in python 3\n- [#1323][1323] Fix issues related with debugging\n- [#1001][1001] Enhance `unlock_bootloader` with better status messages\n- [#1389][1389] remove old dependencies\n- [#1241][1241] Launch QEMU with sysroot if specified\n- [#1218][1218] Support for FileStructure exploitation\n\n[1316]: https://github.com/Gallopsled/pwntools/pull/1316\n[1323]: https://github.com/Gallopsled/pwntools/pull/1323\n[1001]: https://github.com/Gallopsled/pwntools/pull/1001\n[1389]: https://github.com/Gallopsled/pwntools/pull/1389\n[1241]: https://github.com/Gallopsled/pwntools/pull/1241\n[1218]: https://github.com/Gallopsled/pwntools/pull/1218\n\n## 4.0.1\n\n- [#1412][1412] `recvline_pred()` and similar do not reorder data\n- Bypass unicorn-engine/unicorn#1100 and unicorn-engine/unicorn#1170 requiring unstable package\n\n[1412]: https://github.com/Gallopsled/pwntools/pull/1412\n\n## 4.0.0\n\n- **Python 3 support! <3**\n- [#1402][1402] Fix serialtube in python 3\n- [#1391][1391] Fix process.libs\n- [#1317][1317] Tubes with `context.encoding`\n- [#1216][1216] Improve format string generator\n- [#1285][1285] Add freebsd generic syscall templates\n- [76413f][76413f] Add pwnlib.adb.bootimg for 'ANDROID!' format boot.img images\n- [#1202][1202] Docker: Kill 14 layers in pwntools base images\n- [#1182][1182] shellcraft.dupio() for mips\n\n[1402]: https://github.com/Gallopsled/pwntools/pull/1402\n[1391]: https://github.com/Gallopsled/pwntools/pull/1391\n[1317]: https://github.com/Gallopsled/pwntools/pull/1317\n[1285]: https://github.com/Gallopsled/pwntools/pull/1285\n[1216]: https://github.com/Gallopsled/pwntools/pull/1216\n[1202]: https://github.com/Gallopsled/pwntools/pull/1202\n[1182]: https://github.com/Gallopsled/pwntools/pull/1182\n[76413f]: https://github.com/Gallopsled/pwntools/commit/76413f\n\n## 3.13.0\n\n- [#1204][1204] Reduce ROP cache filename length\n- [#1175][1175] Fix nested SSH connectors\n- [#1355][1355] Fix 'break' syscall\n- [#1277][1277] Fix timeout parameter passing in sendlineafter and other similar functions\n- [#1292][1292] Provide correct arch name to gdb for sparc64\n\n[1175]: https://github.com/Gallopsled/pwntools/pull/1175\n[1204]: https://github.com/Gallopsled/pwntools/pull/1204\n[1277]: https://github.com/Gallopsled/pwntools/pull/1277\n[1292]: https://github.com/Gallopsled/pwntools/pull/1292\n[1355]: https://github.com/Gallopsled/pwntools/pull/1355\n\n## 3.12.2\n\n- [#1242][1242] Use IntervalTree 2.xx, disallow use of 3.xx\n- [#1243][1243] Fix a typo that caused an exception when executing a binary with `process()` which returns `-ENOEXEC` and the system does not have `qemu-user` binaries installed.\n\n[1242]: https://github.com/Gallopsled/pwntools/pull/1242\n[1243]: https://github.com/Gallopsled/pwntools/pull/1243\n\n## 3.12.1\n\n- [#1198][1198] More compatibility fixes for pyelftools==0.25, and pin Sphinx<1.8.0 since it causes testing errors\n- [#1191][1191] Fix compatibility with pyelftools==0.25\n- [#1159][1159] Fix check for `/proc/.../status`\n- [#1162][1162] Fix broken package versions\n- [#1150][1150] Fix exception raised when a cache file is missing\n- [#1156][1156] Fix ROP gadget selection logic involving `int` and `syscall` instructions\n- [#1152][1152] Fix QEMU LD_PREFIX calculation (wrong parameter passed)\n- [#1155][1155] Use Ubuntu Trusty for all CI builds\n- [#1131][1131] Add \"libc-\" to libc prefixes in `process` tubes\n- [#1125][1125] Fix a typo\n- [#1121][1121] Fix tests which were broken by an upstream Sphinx change\n- [#1104][1104] Add `DynELF.dump()` for dumping remote ELF files\n- [#1101][1101] Set `context.os` via `context.binary`, useful for Android exploitation\n- [5fdc08][5fdc08] Work around broken `pidof` on Android\n- [63dfed][63dfed] Print warning when Corefile deletion fails instead of throwing an exception\n- [#1094][1094] Make hexdump output alignment more consistent\n- [#1096][1096] `flat()` and `fit()` are now the same function\n\n[1198]: https://github.com/Gallopsled/pwntools/pull/1198\n[1191]: https://github.com/Gallopsled/pwntools/pull/1191\n[1159]: https://github.com/Gallopsled/pwntools/pull/1159\n[1162]: https://github.com/Gallopsled/pwntools/pull/1162\n[1150]: https://github.com/Gallopsled/pwntools/pull/1150\n[1156]: https://github.com/Gallopsled/pwntools/pull/1156\n[1152]: https://github.com/Gallopsled/pwntools/pull/1152\n[1155]: https://github.com/Gallopsled/pwntools/pull/1155\n[1131]: https://github.com/Gallopsled/pwntools/pull/1131\n[1125]: https://github.com/Gallopsled/pwntools/pull/1125\n[1121]: https://github.com/Gallopsled/pwntools/pull/1121\n[1104]: https://github.com/Gallopsled/pwntools/pull/1104\n[1101]: https://github.com/Gallopsled/pwntools/pull/1101\n[1094]: https://github.com/Gallopsled/pwntools/pull/1094\n[1096]: https://github.com/Gallopsled/pwntools/pull/1096\n[5fdc08]: https://github.com/Gallopsled/pwntools/commit/5fdc08\n[63dfed]: https://github.com/Gallopsled/pwntools/commit/63dfed\n\n## 3.12.0\n\n- [#1083][1083] Better error messages for `gdb` when `LD_PRELOAD` is incorrect\n- [#1085][1085] Add support for extracting Android `BOOTLDR!` images\n- [#1075][1075] Add support for detecting GNU Screen for `run_in_new_terminal`\n- [#1074][1074] Add support for running `pwntools-gdb` wrapper script instead of `gdb`\n- [#1068][1068] Work around very old OpenSSL versions which don't have sha256 support *AND* don't exit with an error code when trying to use it\n- [#1067][1067] Add `pwnlib.tubes.server` module, which adds a reusable `server` listener\n- [#1063][1063] Add support for labels in `fit()`, allowing dynamic contents to be injected.  (This feature is really cool, check out the pull request!)\n\n[1083]: https://github.com/Gallopsled/pwntools/pull/1083\n[1085]: https://github.com/Gallopsled/pwntools/pull/1085\n[1075]: https://github.com/Gallopsled/pwntools/pull/1075\n[1074]: https://github.com/Gallopsled/pwntools/pull/1074\n[1068]: https://github.com/Gallopsled/pwntools/pull/1068\n[1067]: https://github.com/Gallopsled/pwntools/pull/1067\n[1063]: https://github.com/Gallopsled/pwntools/pull/1063\n\n## 3.11.0\n\n- [#1044][1044] Enhancements to ROP\n    + Much better support for 64-bit Intel (amd64) ROP\n    + ROP gadget selection is optimized to favor multi-pops instead of multiple single-pop gadgets\n    + Added support for blacklisting byte values in ROP gadget addresses\n- [#1049][1049] Enhancements to `cyclic`\n    + `context` now has two additional attributes, `cyclic_alphabet` and `cyclic_length`, which correspond to the arguments `alphabet` and `n` to `cyclic()` and `cyclic_find()` and related routines.\n    + The motivation for this change is to allow setting the `alphabet` globally, so that any padding / patterns generated internally to pwntools can be controlled.  The specific motivation is blacklisting values in ROP padding.\n- [#1052][1052] Enhancements for detecting `QEMU_LD_PREFIX` used by QEMU user-mode emulation for sysroots\n- [#1035][1035] Minor documentation changes\n- [#1032][1032] Enhancements to `pwn template`\n- [#1031][1031] More accurate `Coredump.fault_addr` on amd64\n- [#1084][1084] Fix broken tests due to `ftp.debian.org` going down\n\n[1044]: https://github.com/Gallopsled/pwntools/pull/1044\n[1049]: https://github.com/Gallopsled/pwntools/pull/1049\n[1052]: https://github.com/Gallopsled/pwntools/pull/1052\n[1035]: https://github.com/Gallopsled/pwntools/pull/1035\n[1032]: https://github.com/Gallopsled/pwntools/pull/1032\n[1031]: https://github.com/Gallopsled/pwntools/pull/1031\n[1084]: https://github.com/Gallopsled/pwntools/pull/1084\n\n## 3.10.0\n\n- [#1007][1007] Add support for setting a `gdbinit` file in the context\n- [#1055][1055] Fixes for `Corefile` stack parsing, speed up `ELF.string()`\n- [#1057][1057] Fix a variable name typo in `DynELF` logging which results in an exception being thrown\n- [#1058][1058] Fix an edge case in `ssh_process.exe`\n\n[1007]: https://github.com/Gallopsled/pwntools/pull/1007\n[1055]: https://github.com/Gallopsled/pwntools/pull/1055\n[1057]: https://github.com/Gallopsled/pwntools/pull/1057\n[1058]: https://github.com/Gallopsled/pwntools/pull/1058\n\n## 3.9.2\n\n- [#1043][1043] Do not attempt to populate the libraries used by statically-linked binaries\n\n[1043]: https://github.com/Gallopsled/pwntools/pull/1043\n\n## 3.9.1\n\n- [#1038][1038] Fix an issue with `process()` where glibc would buffer data internally, causing a hang on `select()`\n- [#1036][1036] Fix Travis CI logging verbosity\n- [#1029][1029] Fix some `unicode` issues when using the `readline` command history in `tube.interactive()`\n\n[1038]: https://github.com/Gallopsled/pwntools/pull/1038\n[1036]: https://github.com/Gallopsled/pwntools/pull/1036\n[1029]: https://github.com/Gallopsled/pwntools/pull/1029\n\n## 3.9.0\n\n- [#1003][1003] Make `concat_all` faster while also simplifying it's logic\n- [#1014][1014] Fix for overwritten env when parsing core file\n- [#1023][1023] Fixes to Travis CI\n\n[1003]: https://github.com/Gallopsled/pwntools/pull/1003\n[1014]: https://github.com/Gallopsled/pwntools/pull/1014\n[1023]: https://github.com/Gallopsled/pwntools/pull/1023\n\n## 3.8.0\n\n- [#981][981] Fixed RELRO detection logic\n- [#986][986] Enhancements to DynELF for controlling usage of LibcDB\n- A few documentation fixes\n- A few fixes for the Docker image\n\n[981]: https://github.com/Gallopsled/pwntools/pull/981\n[986]: https://github.com/Gallopsled/pwntools/pull/986\n\n## 3.7.1\n\n- [#998][998] Fix a bug where integer values could not be set in `.pwn.conf`.\n\n[998]: https://github.com/Gallopsled/pwntools/pull/998\n\n## 3.7.0\n\n- [#933][933] DynELF works better with different base addresses\n- [#952][952] A few small fixes were made to `pwn template`, and the CRC database was updated.\n- [5c72d62c][5c72d62c] Updated the CRC database\n\n[933]: https://github.com/Gallopsled/pwntools/pull/933\n[952]: https://github.com/Gallopsled/pwntools/pull/952\n[5c72d62c]: https://github.com/Gallopsled/pwntools/commit/5c72d62c\n\n## 3.6.1\n\n- [#979][979]+[1a4a1e1][1a4a1e1] Fixed [#974][974], a bug related to the terminal handling and numlock.\n- [#980][980] Fixed the `pwn template` command.\n\n[974]: https://github.com/Gallopsled/pwntools/issues/974\n[979]: https://github.com/Gallopsled/pwntools/pull/979\n[980]: https://github.com/Gallopsled/pwntools/pull/980\n[1a4a1e1]: https://github.com/Gallopsled/pwntools/commit/1a4a1e1\n\n## 3.6.0\n\n- [#895][895] Added a Dockerfile to simplify testing setup and allow testing on OSX\n- [#897][897] Fixed some incorrect AArch64 syscals\n- [#893][893] Added the `pwnlib.config` module\n    + Configuration options can now be set in `~/.pwn.conf`\n    + This replaces the old, **undocumented** mechanism for changing logging colors.  Only @br0ns and @ebeip90 were likely using this.\n    + More information is available in the documentation [here](http://docs.pwntools.com/en/dev/config.html).\n- [#899][899] Pwntools now uses Unicorn Engine to emulate PLT instructions to ensure correct mapping of PIE / RELRO binaries.\n- [#904][904] Enhancements to the accuracy of the `pwn checksec` command.\n- [#905][905] Added a `pwn debug` command-line utility which automates the process of `gdb.attach(process(...))` to spawn GDB\n    + More information is available in the documentation [here](http://docs.pwntools.com/en/dev/commandline.html#pwn-debug)\n- [#919][919] Added a `pwn template` command-line utility to simplify the process of bootstrapping a new exploit.\n    + More information is available in the documentation [here](http://docs.pwntools.com/en/dev/commandline.html#pwn-template).\n- [#948][948] Fix unnecessary warning for Core files\n- [#954][954] Fix list processing in `~/.pwn.conf`\n- [#967][967] Respect `TERM_PROGRAM` for `run_in_new_terminal`\n- [#970][970] Fix overly-aggressive corefile caching\n\n[947]: https://github.com/Gallopsled/pwntools/pull/947\n[948]: https://github.com/Gallopsled/pwntools/pull/948\n[954]: https://github.com/Gallopsled/pwntools/pull/954\n[960]: https://github.com/Gallopsled/pwntools/pull/960\n[967]: https://github.com/Gallopsled/pwntools/pull/967\n[968]: https://github.com/Gallopsled/pwntools/pull/968\n[970]: https://github.com/Gallopsled/pwntools/pull/970\n\n[895]: https://github.com/Gallopsled/pwntools/pull/895\n[897]: https://github.com/Gallopsled/pwntools/pull/897\n[893]: https://github.com/Gallopsled/pwntools/pull/893\n[899]: https://github.com/Gallopsled/pwntools/pull/899\n[904]: https://github.com/Gallopsled/pwntools/pull/904\n[905]: https://github.com/Gallopsled/pwntools/pull/905\n[919]: https://github.com/Gallopsled/pwntools/pull/919\n\n## 3.5.1\n\n- [#945][945] Speed up ssh via caching checksec results (fixes [#944][944])\n- [#950][950] Fixes a bug where setting `context.arch` does not have an effect on `adb.compile()` output architecture\n\n[944]: https://github.com/Gallopsled/pwntools/issues/944\n[945]: https://github.com/Gallopsled/pwntools/pull/945\n[950]: https://github.com/Gallopsled/pwntools/pull/950\n\n## 3.5.0\n\n- [b584ca3][b584ca3] Fixed an issue running `setup.py` on ARM\n- [#822][822] Enabled relative leaks with `MemLeak`\n    + This should be useful for e.g. heap-relative leaks\n- [#832][832] Changed all internal imports to use absolute imports (no functional changes)\n- [a12d0b6][a12d0b6] Move `STDOUT`, `PIPE`, `PTY` constants to globals\n    + `process(..., stdin=process.PTY)` --> `process(..., stdin=PTY)`\n- [#828][828] Use `PR_SET_PTRACER` for all `process()` and `ssh.process()` instances\n    + This simplifies debugging on systems with YAMA ptrace enabled\n- Various documentation enhancements\n    + In particular, the [gdb][gdb], [elf][elf], and [ssh][ssh] docs are much better\n- [#833][833] Performance enhancements for `adb` module\n- [d0267f3][d0267f3] `packing.fit()` now treats large offsets as cyclic patterns (e.g. `0x61616161` behaves the same as `\"aaaa\"`)\n- [#835][835] Added `ssh.checksec`\n    + Reports the kernel version and other relevant information on connection\n- [#857][857] Slightly shortened `execve` shellcode\n- [300f8e0][300f8e0] Slightly speed up processing of large ELF files\n- [#861][861] Adds support for extracting `IKCONFIG` configs from Linux kernel images, and extends `checksec` to report on any insecure configurations discovered\n- [#871][871] Moves all of the basic syscall templates to `shellcraft/common` and exposes them via symlinks.  Closed [#685][685]\n    + Should not have any visible effects from any documented APIs\n    + `shellcraft.arch.os.syscall_function()` still works the same\n    + We now have the ability to differentiate between the `connect` syscall, and a TCP `connect` helper\n- [#887][887] `sh_string` now returns a quoted empty string `''` rather than just an empty string\n- [#839][839] Exposes a huge amount of functionality via corefiles which was not previously availble.  See the [docs][corefile_docs] for examples.\n    + `process().corefile` will automatically instantiate a Corefile for the process\n    + QEMU-emulated processes are supported\n    + Native processes are supported, including extraction of coredumps from `apport` crash logs\n    + Native processes can be dumped *while running*, in a manner similar to `GDB`'s `gcore` script\n- [#875][857] Added [documentation][aarch64] (and tests) for AArch64 shellcode\n- [#882][882] The `ROP` class now respects `context.bytes` instead of using the hard-coded value of `4` (fixed [#879][879])\n- [#869][869] Added several fields to the `process` class (`uid`, `gid`, `suid`, `sgid`) which are recorded at execution time, based on the file permissions\n- [#868][868] Changed the way that `ssh.process()` works internally, and it now returns a more specialized class, `ssh_process`.\n    + Added `ssh_process.corefile` for fetching remote corefiles\n    + Added `ssh_process.ELF` for getting an ELF of the remote executable\n    + The `uid`, `gid`, and `suid`, and `sgid` which are recorded at execution time, based on the file permissions\n- [#865][865] Fixes `ELF.read` to support contiguous memory reads across non-contiguous file-backed segments\n- [#862][862] Adds a `symlink=` argument to `ssh.set_working_directory`, which will automatically symlink all of the files in the \"old\" working directory into the \"new\" working directory\n\n[ssh]: http://docs.pwntools.com/en/dev/tubes/ssh.html\n[gdb]: http://docs.pwntools.com/en/dev/gdb.html\n[elf]: http://docs.pwntools.com/en/dev/elf.html\n[corefile_docs]: http://docs.pwntools.com/en/dev/elf/corefile.html\n[aarch64]: http://docs.pwntools.com/en/dev/shellcraft/aarch64.html\n\n[685]: https://github.com/Gallopsled/pwntools/pull/685\n[822]: https://github.com/Gallopsled/pwntools/pull/822\n[828]: https://github.com/Gallopsled/pwntools/pull/828\n[832]: https://github.com/Gallopsled/pwntools/pull/832\n[833]: https://github.com/Gallopsled/pwntools/pull/833\n[835]: https://github.com/Gallopsled/pwntools/pull/835\n[839]: https://github.com/Gallopsled/pwntools/pull/839\n[857]: https://github.com/Gallopsled/pwntools/pull/857\n[861]: https://github.com/Gallopsled/pwntools/pull/861\n[862]: https://github.com/Gallopsled/pwntools/pull/862\n[865]: https://github.com/Gallopsled/pwntools/pull/865\n[868]: https://github.com/Gallopsled/pwntools/pull/868\n[869]: https://github.com/Gallopsled/pwntools/pull/869\n[871]: https://github.com/Gallopsled/pwntools/pull/871\n[875]: https://github.com/Gallopsled/pwntools/pull/857\n[879]: https://github.com/Gallopsled/pwntools/issues/879\n[882]: https://github.com/Gallopsled/pwntools/pull/882\n[887]: https://github.com/Gallopsled/pwntools/pull/887\n\n\n[b584ca3]: https://github.com/Gallopsled/pwntools/commit/b584ca3\n[a12d0b6]: https://github.com/Gallopsled/pwntools/commit/a12d0b6\n[d0267f3]: https://github.com/Gallopsled/pwntools/commit/d0267f3\n[300f8e0]: https://github.com/Gallopsled/pwntools/commit/300f8e0\n\n## 3.4.1\n\n- [#894][894] Fix a bug when using `gdb.debug()` over ssh.\n- [e021f57][e021f57] Fix a bug ([#891][891]) in `rop` when needing to insert padding to fix alignment\n\n[e021f57]: https://github.com/Gallopsled/pwntools/commit/e021f57\n[894]: https://github.com/Gallopsled/pwntools/pull/894\n[891]: https://github.com/Gallopsled/pwntools/issues/891\n\n## 3.4.0\n\n- [#800][800] Add `shell=` option to `ssh.process()`\n- [#806][806] Add `context.buffer_size` for fine-tuning `tube` performance\n    + Also adds `buffer_fill_size=` argument for all tubes\n- [b83a6c7][b83a6c7] Fix undocumented `process.leak` function\n- [546061e][546061e] Modify `coredump_filter` of all spawned processes, so that core dumps are more complete\n- [#809][809] Add several functions to `adb` (`unlink`, `mkdir`, `makedirs`, `isdir`, `exists`)\n- [#817][817] Make disconnection detection more robust\n\n[800]: https://github.com/Gallopsled/pwntools/pull/800\n[806]: https://github.com/Gallopsled/pwntools/pull/806\n[809]: https://github.com/Gallopsled/pwntools/pull/809\n[817]: https://github.com/Gallopsled/pwntools/pull/817\n[5d9792f]: https://github.com/Gallopsled/pwntools/commit/5d9792f\n[b83a6c7]: https://github.com/Gallopsled/pwntools/commit/b83a6c7\n[546061e]: https://github.com/Gallopsled/pwntools/commit/546061e\n\n## 3.3.4\n\n- [#850][850] and [#846][846] fix issues with `hexdump` and the `phd` command-line utility, when using pipes (e.g. `echo foo | phd`)\n- [#852][852] Fixes register ordering in `regsort`\n- [#853][853] Fixes the registers restored in `shellcraft.amd64.popad`\n\n[846]: https://github.com/gallopsled/pwntools/pull/846\n[850]: https://github.com/gallopsled/pwntools/pull/850\n[852]: https://github.com/gallopsled/pwntools/pull/852\n[853]: https://github.com/gallopsled/pwntools/pull/853\n\n## 3.3.3\n\n- [#843][843] fixed a bug in `amd64.mov`.\n\n[843]: https://github.com/gallopsled/pwntools/pull/843\n\n## 3.3.2\n\n- [#840][840] fixed a regression introduced by [#837][837].\n\n[840]: https://github.com/gallopsled/pwntools/pull/840\n\n## 3.3.1\n\n- [#833][833] Fixed a performance-impacting bug in the adb module.\n- [#837][837] Fixed a bug([#836][836]) causing `hexdump(cyclic=True)` to throw an exception.\n\n[833]: https://github.com/Gallopsled/pwntools/pull/833\n[837]: https://github.com/Gallopsled/pwntools/pull/837\n[836]: https://github.com/Gallopsled/pwntools/issues/836\n\n## 3.3.0\n\n- [b198ec8][b198ec8] Added `tube.stream()` function, which is like `tube.interact()` without a prompt or keyboard input.\n    + Effectively, this is similar to `cat file` and just prints data as fast as it is received.\n- [aec3fa6][aec3fa6] Disable update checks against GitHub\n    + These checks frequently broke due to GitHub query limits\n- [#757][757] Fixed `adb.wait_for_device()` re-use of the same connection\n- [f9133b1][f9133b1] Add a `STDERR` magic argument to make logging go to `stderr` instead of `stdout`\n    + Usage is e.g. `python foo.py STDERR` or `PWNLIB_STDERR=1 python foo.py`\n    + Also adds `context.log_console` to log to any file or terminal\n- [67e11a9][67e11a9] Add faster error checking to `cyclic()` when provided very large values\n- [5fda658][5fda658] Expose BitPolynom in `globals()`\n- [#765][765] Added `-d` option for hex-escaped output for `shellcraft` command-line tool\n- [#772][772] Fixed bash completion regressions\n- [30c34b7][30c34b7] Fix `ROP.call()` with `Function` objects from `ELF.functions`\n- [fa402ce][fa402ce] Add `adb.uptime` and `adb.boot_time`\n- [82312ba][82312ba] Add `cyclic_metasploit` and `cyclic_metasploit_find`\n\n[757]: https://github.com/Gallopsled/pwntools/pull/757\n[765]: https://github.com/Gallopsled/pwntools/pull/765\n[772]: https://github.com/Gallopsled/pwntools/pull/772\n[b198ec8]: https://github.com/Gallopsled/pwntools/commit/b198ec8\n[aec3fa6]: https://github.com/Gallopsled/pwntools/commit/aec3fa6\n[f9133b1]: https://github.com/Gallopsled/pwntools/commit/f9133b1\n[67e11a9]: https://github.com/Gallopsled/pwntools/commit/67e11a9\n[5fda658]: https://github.com/Gallopsled/pwntools/commit/5fda658\n[30c34b7]: https://github.com/Gallopsled/pwntools/commit/30c34b7\n[fa402ce]: https://github.com/Gallopsled/pwntools/commit/fa402ce\n[82312ba]: https://github.com/Gallopsled/pwntools/commit/82312ba\n\n## 3.2.1\n\nMultiple bug fixes.\n\n- [#783][783] Fix `adb.uninstall` typo\n- [#787][787] Added error handling for `ssh.process` argument `preexec_fn`\n- [#793][793] Fixed progress message in `remote()` when connections failed\n- [#802][802] Fixed partition listing in `adb.partitions`, which accidentally shelled out to the `adb` binary\n- [#804][804] Fix error message for 32-bit distributions\n- [#805][805] Fix exception in `Core.segments` when a segment has no name\n- [#811][811] Fixes and performance improvements for `adb.wait_for_device()`\n- [#813][813] Fixed a release script\n- [#814][814] Fixed exceptions thrown if the `$HOME` directory is not writable\n- [#815][815] Properly handle `None` in `MemLeak`\n\n[783]: https://github.com/Gallopsled/pwntools/pull/783\n[787]: https://github.com/Gallopsled/pwntools/pull/787\n[793]: https://github.com/Gallopsled/pwntools/pull/793\n[802]: https://github.com/Gallopsled/pwntools/pull/802\n[804]: https://github.com/Gallopsled/pwntools/pull/804\n[805]: https://github.com/Gallopsled/pwntools/pull/805\n[811]: https://github.com/Gallopsled/pwntools/pull/811\n[813]: https://github.com/Gallopsled/pwntools/pull/813\n[814]: https://github.com/Gallopsled/pwntools/pull/814\n[815]: https://github.com/Gallopsled/pwntools/pull/815\n\n## 3.2.0\n\n- [#695][695] Fixed a performance regression in `phd`.\n- [452605e][452605e] Fixed [#629][629] related to correct removal of temporary files.\n- [ea94ee4][ea94ee4] Disallows semi-colons in for the `run_in_terminal` function, since it did not work properly in all cases.\n- [6376d07][6376d07] Added the mips shellcode `pushstr_array`.\n- [#700][700] Added missing MIPS shellcode documentation to readthedocs, and enabled unit tests\n- [#701][701] Command line tools refactored to have a common `pwn` entry point.\n    + Added an option to *not* install the traditional `asm`, `disasm`, `checksec`, etc scripts\n    + All existing tools can be accessed from the `pwn` command (e.g. `pwn asm nop`).\n- [#704][704] The `process` object has a new, optional argument `alarm` for setting a `SIGALRM` timeout for processes.\n- [#705][705] Added the Android Emulator to the test suite and Travis CI.\n    + Android Emulator is now required for the full test suite\n    + Android Emulator tests are skipped if no Android-related changes are detected\n- [#711][711] `DynELF` has a new attribute, `heap`, which leaks the current `brk` address (heap base).  This is useful for finding heap allocations with dlmalloc-derived allocators like those used by Glibc.\n- [#717][717] `sh_string` was rewritten to emit more compact and compatible strings\n    + This was achieved by embedding single-quoted non-printable literals\n    + Much more testing was added\n    + Emitted strings are no longer copy-paste compatible, but work fine with e.g. `tubes` module and the default `subprocess` module\n- [#709][709] The `adb` module now directly talks to the `adb` server process via a new module, `adb.protocol`\n    + Removes the need to shell out to `adb`\n    + Avoids version-compatibility issues with `adb` server vs. client\n- [#703][703] Added new methods to `adb`\n    + `install` - Installs an APK\n    + `uninstall` - Uninstalls a package\n    + `packages` - Lists installed packages\n- [4893819][4893819] Modified `shellcraft.sh` on all platforms to provide `argv[0]` and set `argc==1`\n    + This is needed for systems which have Busybox or other minimal shell for `/bin/sh` which does not behave well with `argc==0` or `argv[0]==NULL`.\n- [1e414af][1e414af] Added `connect()` alias for `remote()`\n    + For example, `io=connect('google.com', 80)`\n    + This also works with `tcp(...)` and `udp(...)` aliases\n- [869ec42][869ec42] Added `ssh.read()` and `ssh.write()` aliases\n- [2af55c9][2af55c9] `AdbDevice` objects exposed via e.g. `adb.devices()` now offer scoped access to all `adb` module properties\n    + It is now possible to e.g. `map(lambda d: d.process(['id']).recvall(), adb.devices())`\n\n\n[629]: https://github.com/Gallopsled/pwntools/issues/629\n[695]: https://github.com/Gallopsled/pwntools/pull/695\n[700]: https://github.com/Gallopsled/pwntools/pull/700\n[701]: https://github.com/Gallopsled/pwntools/pull/701\n[704]: https://github.com/Gallopsled/pwntools/pull/704\n[711]: https://github.com/Gallopsled/pwntools/pull/711\n[717]: https://github.com/Gallopsled/pwntools/pull/717\n[709]: https://github.com/Gallopsled/pwntools/pull/709\n[705]: https://github.com/Gallopsled/pwntools/pull/705\n[703]: https://github.com/Gallopsled/pwntools/pull/703\n[452605e]: https://github.com/Gallopsled/pwntools/commit/452605e854f4870ef5ccfdf7fb110dfd75c50feb\n[ea94ee4]: https://github.com/Gallopsled/pwntools/commit/ea94ee4ca5a8060567cc9bd0dc33796a89ad0b95\n[6376d07]: https://github.com/Gallopsled/pwntools/commit/6376d072660fb2250f48bd22629bbd7e3c61c758\n[1e414af]: https://github.com/Gallopsled/pwntools/commit/1e414afbeb3a01242f4918f111febaa63b640eb7\n[869ec42]: https://github.com/Gallopsled/pwntools/commit/869ec42082b4b98958dfe85103da9b101dde7daa\n[4893819]: https://github.com/Gallopsled/pwntools/commit/4893819b4c23182da570e2f4ea4c14d73af2c0df\n[2af55c9]: https://github.com/Gallopsled/pwntools/commit/2af55c9bc382eca23f89bc0abc7a07c075521f94\n\n## 3.1.1\n\nFixed a bug in `MemLeak.struct` (PR: #768).\n\n## 3.1.0\n\nA number of smaller bugfixes and documentation tweaks.\n\n## 3.0.4\n\n- Fixed a bug that made 3.0.3 uninstallable (Issue: #751, PR: #752)\n\n## 3.0.3\n\n- Fixed some performance and usability problems with the update system (Issues:\n  #723, #724, #736. PRs: #729, #738, #747).\n- Fixed a bug related to internals in pyelftools (PRs: #730, #746).\n- Fixed an issue with travis (Issue: #741, PRs: #743, #744, #745).\n\n## 3.0.2\n\n- Cherry-pick #695, as this was a regression-fix.\n- Added a fix for the update checker, as it would suggest prereleases as updates to stable releases.\n- Various documentation fixes.\n\n## 3.0.1\n\nA small bugfix release. There were a lot of references to the `master`-branch, however after 3.0.0 we use the names `stable`, `beta` and `dev` for our branches.\n\n## 3.0.0\n\nThis was a large release (1305 commits since 2.2.0) with a lot of bugfixes and changes.  The Binjitsu project, a fork of Pwntools, was merged back into Pwntools.  As such, its features are now available here.\n\nAs always, the best source of information on specific features is the comprehensive docs at https://pwntools.readthedocs.org.\n\nThis list of changes is non-complete, but covers all of the significant changes which were appropriately documented.\n\n#### Android\n\nAndroid support via a new `adb` module, `context.device`, `context.adb_host`, and `context.adb_port`.\n\n#### Assembly and Shellcode\n\n- Assembly module enhancements for making ELF modules from assembly or pre-assembled shellcode.  See `asm.make_elf` and `asm.make_elf_from_assembly`.\n- `asm` and `shellcraft` command-line tools support flags for the new shellcode encoders\n- `asm` and `shellcraft` command-line tools support `--debug` flag for automatically launching GDB on the result\n- Added MIPS, PowerPC, and AArch64 support to the `shellcraft` module\n- Added Cyber Grand Challenge (CGC) support to the `shellcraft` module\n- Added syscall wrappers for every Linux syscall for all supported architectures to the `shellcraft` module\n    + e.g. `shellcraft.<arch>.gettimeofday`\n- (e.g. `shellcraft.i386.linux.`)\n- Added in-memory ELF loaders for most supported architectures\n    + Only supports statically-linked binaries\n    + `shellcraft.<arch>.linux.loader`\n\n#### Context Module\n\n- Added `context.aslr` which controls ASLR on launched processes.  This works with both `process()` and `ssh.process()`, and can be specified per-process with the `aslr=` keyword argument.\n- Added `context.binary` which automatically sets all `context` variables from an ELF file.\n- Added `context.device`, `context.adb`, `context.adb_port`, and `context.adb_host` for connecting to Android devices.\n- Added `context.kernel` setting for SigReturn-Oriented-Programming (SROP).\n- Added `context.log_file` setting for sending logs to a file.  This can be set with the `LOG_FILE` magic command-line option.\n- Added `context.noptrace` setting for disabling actions which require `ptrace` support.  This is useful for turning all `gdb.debug` and `gdb.attach` options into no-ops, and can be set via the `NOPTRACE` magic command-line option.\n- Added `context.proxy` which hooks all connections and sends them to a SOCKS4/SOCKS5.  This can be set via the `PROXY` magic command-line option.\n- Added `context.randomize` to control randomization of settings like XOR keys and register ordering (default off).\n- Added `context.terminal` for setting how to launch commands in a new terminal.\n\n#### DynELF and MemLeak Module\n\n- Added a `DynELF().libc` property which attempt to find the remote libc and download the ELF from LibcDB.\n- Added a `DynELF().stack` property which leaks the `__environ` pointer from libc, making it easy to leak stack addresses.\n- Added `MemLeak.String` and `MemLeak.NoNewlines` and other related helpers for handling special leakers which cannot e.g. handle newlines in the leaked addresses and which leak a C string (e.g. auto-append a `'\\x00'`).\n- Enhancements for leaking speed via `MemLeak.compare` to avoid leaking an entire field if we can tell from a partial leak that it does not match what we are searching for.\n\n#### Encoders Module\n\n- Added a `pwnlib.encoders` module for assembled-shellcode encoders/decoders\n- Includes position-independent basic XOR encoders\n- Includes position-independent delta encoders\n- Includes non-position-independent alphanumeric encoders for Intel\n- Includes position-independent alphanumeric encoders for ARM/Thumb\n\n#### ELF Module\n\n- Added a `Core` object which can parse core-files, in order to extract / search for memory contents, and extract register states (e.g. `Core('./corefile').eax`).\n\n#### Format Strings\n\n- Added a basic `fmtstr` module for assisting with Format String exploitation\n\n#### GDB Module\n\n- Added support for debugging Android devices when `context.os=='android'`\n- Added helpers for debugging shellcode snippets with `gdb.debug_assembly()` and `gdb.debug_shellcode()`\n\n#### ROP Module\n\n- Added support for SigReturn via `pwnlib.rop.srop`\n    + Occurs automatically when syscalls are invoked and a function cannot be found\n    + SigReturn frames can be constructed manually with `SigreturnFrame()` objects\n- Added functional doctests for ROP and SROP\n\n#### Tubes Process Module\n\n- `process()` has many new options, check out the documentation\n    + `aslr` controls ASLR\n    + `setuid` can disable the effect of setuid, allowing core dumps (useful for extracting crash state via the new `Core()` object)\n    + TTY echo and control characters can be enabled via `raw` argument\n- `stdout` and `stderr` are now PTYs by default\n    + `stdin` can be set to a PTY also via setting `stdin=process.PTY`\n\n#### Tubes SSH Module\n\n- Massive enhancements all over\n- `ssh` objects now have a `ssh.process()` method which avoids the need to handle shell expansion via the old `ssh.run()` method\n- Files are downloaded via SFTP if available\n- New `download` and `upload` methods auto-detect whether the target is a file or directory and acts accordingly\n- Added `listen()` method alias for `listen_remote()`\n- Added `remote()` method alias for `connect_remote()`\n\n#### Utilities\n\n- Added `fit()` method to combine the functionality of `flat()` with the functionality of `cyclic()`\n- Added `negative()` method to negate the value of an integer via two's complement, with respect to the current integer size (`context.bytes`).\n- Added `xor_key()` method to generate an XOR key which avoids undesirable bytes over a given input.\n- Added a multi-threaded `bruteforce()` implementation, `mbruteforce()`.\n- Added `dealarm_shell()` helper to remove the effects of `alarm()` after you've popped a shell.\n\n## 2.2.0\n\nThis was a large release with a lot of bugfixes and changes. Only the most significant\nare mentioned here.\n\n- Added shellcodes\n- Added phd\n- Re-added our expansion of itertools\n- Added replacements for some semi-broken python standard library modules\n- Re-implemented the rop module\n- Added a serial tube\n- Huge performance gains in the buffering for tubes\n- Re-added user agents\n- Begun using Travis CI with lots of test\n- Removed bundled binutils in favor of documenting how to build them yourselves\n- Added support for port forwarding though our SSH module\n- Added dependency for capstone and ropgadget\n- Added a lots of shellcodes\n- Stuff we forgot\n- Lots of documentation fixes\n- Lots of bugfixes\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.9287109375,
          "content": "# Contributing\n\nGithub has a great guide for contributing to open source projects:\n\n- [Contributing to a project](https://guides.github.com/activities/forking/)\n- [Fork the repository](https://guides.github.com/activities/forking/#fork)\n- [Clone your fork](https://guides.github.com/activities/forking/#clone)\n- [Making and pushing changes](https://guides.github.com/activities/forking/#making-changes)\n- [Making a Pull Request](https://guides.github.com/activities/forking/#making-a-pull-request)\n- [Huzzah!](https://guides.github.com/activities/forking/#huzzah)\n\n## pwntools Specifics\n\nIn general, we like to keep things documented.  You should add documentation to any new functionality, and update it for any changed functionality.  Our docstrings use the [Google Style Python Docstrings](https://sphinxcontrib-napoleon.readthedocs.org/en/latest/example_google.html#example-google).\n\nAfter you have documentation, you should add a [doctest](https://docs.python.org/2/library/doctest.html).\n\nFinally, it is probably a good idea to run the test suite locally before doing\nthe pull-request to make sure everything works, however this is not a\nrequirement.\n\nOnce you are ready to do a pull-request, you should figure out if your changes\nconstitutes a new feature or a bugfix in stable or beta. If it is a bugfix in\nstable or beta, you should do the pull-request against the branch in question,\nand otherwise your pull-request should be against the dev branch.\n\nOnce you do the pull-request Travis CI will run the test-suite on it. Once it\npasses one of the core developers will look at your pull request, possibly\ncomment on it and then hopefully merge it into the branch in question.\n\n## Automated Testing\n\nPull requests against Pwntools require at a minimum that no tests have been broken, and ideally each pull request will include new tests to ensure that all of the functionality works as intended.\n\nYou can find more information on testing in [TESTING.md](TESTING.md).\n"
        },
        {
          "name": "DOCKER.md",
          "type": "blob",
          "size": 2.298828125,
          "content": "# Using Pwntools with Docker\n\nSometimes it's annoying to set up Pwntools on your workstation, and you want something that Just Works (TM).\n\n[Docker](https://www.docker.com/) is here to the rescue! Using Docker means that you get a nice, standardized Linux environment and don't need to worry about pip or installing dependencies.\n\n## Quick Start\n\nFirst, install Docker for your OS, which you can find on their [Getting Started](https://www.docker.com/get-started) page.\n\nNext, download and run the Pwntools stable docker image.\n\n```sh\n$ docker run -it pwntools/pwntools:stable\n```\n\n## Recommended Settings\n\nIn order to get the most from your docker image, we need to enable debugging of processes (`--privileged`) and expose the network ports from the guest to the host (`--net=host`).\n\n```sh\n$ docker run -it \\\n    --privileged \\\n    --net=host \\\n    --hostname localhost \\\n    --ulimit core=-1:-1 \\\n    pwntools/pwntools:stable\n```\n\n## Sharing a Folder\n\nIt's really nice to be able to use your preferred native editor, and have the changes show up live inside your Docker image.  This is easy to add, thanks to Docker's bind mounts (`--mount type=bind`).  \n\nWith the command below, your `~/exploits` directory will magically show up inside the Docker image at `/home/pwntools/exploits` so that you can easily run them (from Docker) and edit them (from outside Docker).\n\n```sh\n$ mkdir $HOME/exploits\n\n$ vim $HOME/exploits/my_exploit.py\n\n$ docker run -it \\\n    --privileged \\\n    --net=host \\\n    --hostname localhost \\\n    --ulimit core=-1:-1 \\\n    --mount type=bind,source=\"$HOME/exploits\",target=/home/pwntools/exploits \\\n    pwntools/pwntools:stable\n    \n$ python3 exploits/my_exploit.py\n```\n\n### Windows User Bind Mounts\n\nIf you're a Windows user `$HOME` doesn't exist in the same way as on Linux, instead it is `%UserProfile%`.  The command from above would look like this, assuming your editor is Visual Studio Code and you have code.exe in your `%PATH%`.\n\n```sh\nC:\\Users\\user> mkdir Desktop\\exploits\n\nC:\\Users\\user> code Desktop\\exploits\\my_exploit.py\n\nC:\\Users\\user> docker run -it \\\n    --privileged \\\n    --net=host \\\n    --hostname localhost \\\n    --ulimit core=-1:-1 \\\n    --mount type=bind,source=\"%UserProfile%\\Desktop\\exploits\",target=/home/pwntools/exploits \\\n    pwntools/pwntools:stable\n    \n$ python3 exploits/my_exploit.py\n\n```\n\n\n\n\n\n"
        },
        {
          "name": "LICENSE-pwntools.txt",
          "type": "blob",
          "size": 1.6064453125,
          "content": "TL;DR version:\n   Everything in pwntools is open source. Most is under an MIT license, but a\n   few pieces are under GPL or a BSD 2-clause licence.\n\nThis license covers everything within this project, except for a few pieces\nof code that we either did not write ourselves or which we derived from code\nthat we did not write ourselves. These few pieces have their license specified\nin a header, or by a file called LICENSE.txt, which will explain exactly what\nit covers. The few relevant pieces of code are all contained inside these\ndirectories:\n\n- pwnlib/constants/\n- pwnlib/data/\n\n\nCopyright (c) 2015 Gallopsled et al.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2958984375,
          "content": "graft build\ngraft examples\ngraft extra\ngraft travis\ninclude *.md *.txt *.sh *.yml MANIFEST.in\nrecursive-include docs   *.rst *.png Makefile *.py *.txt\nrecursive-include pwnlib *.py *.asm *.rst *.md *.txt *.sh __doc__ *.mako\nrecursive-include pwn    *.py *.asm *.rst *.md *.txt *.sh\nglobal-exclude *.pyc\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.939453125,
          "content": "# pwntools - CTF toolkit\n![pwntools logo](https://github.com/Gallopsled/pwntools/blob/stable/docs/source/logo.png?raw=true)\n\n[![PyPI](https://img.shields.io/pypi/v/pwntools?style=flat)](https://pypi.python.org/pypi/pwntools/)\n[![Docs](https://readthedocs.org/projects/pwntools/badge/?version=stable)](https://docs.pwntools.com/)\n[![GitHub Workflow Status (dev)](https://img.shields.io/github/actions/workflow/status/Gallopsled/pwntools/ci.yml?branch=dev&logo=GitHub)](https://github.com/Gallopsled/pwntools/actions/workflows/ci.yml?query=branch%3Adev)\n[![Coveralls](https://img.shields.io/coveralls/github/Gallopsled/pwntools/dev?logo=coveralls)](https://coveralls.io/github/Gallopsled/pwntools?branch=dev)\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](http://choosealicense.com/licenses/mit/)\n[![Packaging status](https://img.shields.io/repology/repositories/python:pwntools)](https://repology.org/project/python:pwntools/versions)\n[![Discord](https://img.shields.io/discord/809590285687980052?label=Discord&style=plastic)](https://discord.gg/96VA2zvjCB)\n[![Twitter](https://img.shields.io/twitter/follow/Pwntools)](https://twitter.com/pwntools)\n\nPwntools is a CTF framework and exploit development library. Written in Python, it is designed for rapid prototyping and development, and intended to make exploit writing as simple as possible.\n\n```python\nfrom pwn import *\ncontext(arch = 'i386', os = 'linux')\n\nr = remote('exploitme.example.com', 31337)\n# EXPLOIT CODE GOES HERE\nr.send(asm(shellcraft.sh()))\nr.interactive()\n```\n\n# Documentation\n\nOur documentation is available at [docs.pwntools.com](https://docs.pwntools.com/)\n\nA series of tutorials is also [available online](https://github.com/Gallopsled/pwntools-tutorial#readme)\n\nTo get you started, we've provided some example solutions for past CTF challenges in our [write-ups repository](https://github.com/Gallopsled/pwntools-write-ups).\n\n# Installation\n\nPwntools is best supported on 64-bit Ubuntu LTS releases (18.04, 20.04, 22.04, and 24.04).  Most functionality should work on any Posix-like distribution (Debian, Arch, FreeBSD, OSX, etc.).  \n\nPython3 is suggested, but Pwntools still works with Python 2.7.  Most of the functionality of pwntools is self-contained and Python-only.  You should be able to get running quickly with\n\n```sh\nsudo apt-get update\nsudo apt-get install python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential\npython3 -m pip install --upgrade pip\npython3 -m pip install --upgrade pwntools\n```\n\n\nHowever, some of the features (assembling/disassembling foreign architectures) require non-Python dependencies.  For more information, see the [complete installation instructions here](https://docs.pwntools.com/en/stable/install.html).\n\n\n# Contribution\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n# Contact and Community\nIf you have any questions not worthy of a [bug report](https://github.com/Gallopsled/pwntools/issues), join the Discord server at https://discord.gg/96VA2zvjCB\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.69140625,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version       | Supported          |\n| ------------- | ------------------ |\n| latest dev    | :white_check_mark: |\n| latest beta   | :white_check_mark: |\n| latest stable | :white_check_mark: |\n| anything else | :x: |\n\n## Reporting a Vulnerability\n\nThe aim of pwntools is exploiting software vulnerabilities, which is an unusual position, but it nevertheless can have its own security issues.\nEspecially that an attacker (=re-victim) is usually not prepared to be attacked back (by the re-attacker).\n\nThe first question to ask yourself is: is this an actual vulnerability?\n- can it be triggered by a re-attacker (malicious honeypot pretending to be a vulnerable service)?\n- does it impact the attacker (=re-victim)?\n- is it serious?\n  * *availability: medium* means *at least* exhausting RAM or disk space of the attacker (=re-victim)\n  * *confidentiality: medium* means *at least* reading the filesystem of the attacker (=re-victim)\n  * *integrity: medium* means *at least* performing uncontrolled actions or data corruption on behalf of the attacker (=re-victim)\n  * if crucial for some sophisticated exploit chain, it is always serious\n  * `safe_eval` bypasses **are** serious.\n  * an example of what was **kind of** serious: [#1732](https://github.com/Gallopsled/pwntools/pull/1732)\n- can it be fixed without compromising on Pwntools' usability?\n\nIf at least one of the answers is no, then this is NOT a vulnerability, so just file a bug report or feature request, without the weird confidential disclosure dance.\n\nJust e-mail the maintainers.  Arusekk is the one that is currently the most excited to fix vulnerabilities.\nOr create a CTF task!  Prove a point the good old hacker way!\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 1.9326171875,
          "content": "# Testing\n\nPwntools makes extensive use of unit tests and integration tests to ensure everything is in working order, and no regressions occur.\n\n## Test Suite\n\nTo run the test suite, it is best to use Ubuntu 12.04 or 14.04, and run the following commands.  **Be aware** that this will add a user to the machine, and create a public key for SSH login!\n\n```sh\nbash travis/install.sh\nbash travis/ssh_setup.sh\npip install --upgrade --editable .\nPWNLIB_NOTERM=1 make -C docs doctest\n```\n\n## Testing in Docker\n\nA `Dockerfile` has been provided which has a clean testing environment with Ubuntu Xenial.  It is very similar to the online Travis CI testing environment, but uses a more modern version of Ubuntu.\n\nSee `travis/docker/README.md` for more information.\n\n## New Tests\n\nTo add a new test to an existing module, just add an inline doctest.  If the test needs access to an external module, add the import statement to the `testsetup` block in the corresponding file in `docs/source/<module>.rst`.\n\nTo add an entirely new module, create a new `module.rst` and add it to the list in `index.rst`.  The best way to see if your tests are actually being run is to add an intentionally-failing test like:\n\n```py\n>>> assert False\n```\n\n## Example Test Module\n\nThe module `pwnlib.testexample` exists to demonstrate how everything is tied together.  The only files which were modified to add this example module and run its tests automatically are:\n\n- `pwnlib/testexample.py`\n- `docs/source/testexample.rst`\n- `docs/source/index.rst`\n\n## Shellcode and ROP\n\nThese are both less easy to test, as they require actually executing code, or loading real binaries.  In order to make the process simpler, the `runner` library was created to wrap common tasks.  For an example of testing shellcode with these helpers, see [exit.asm](pwnlib/shellcraft/templates/i386/linux/exit.asm).\n\nAdditionally, for loading ELF files on-the-fly, the helpers `ELF.from_bytes` and `ELF.from_assembly` are available.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "pwn",
          "type": "tree",
          "content": null
        },
        {
          "name": "pwnlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.603515625,
          "content": "[build-system]\nrequires = [\"setuptools>=44.0\", \"wheel\", \"toml; python_version<'3.4'\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\ndynamic = [\"version\", \"scripts\"]\n\nname = \"pwntools\"\ndescription = \"Pwntools CTF framework and exploit development library.\"\nlicense = {text = \"Mostly MIT, some GPL/BSD, see LICENSE-pwntools.txt\"}\nreadme = \"README.md\"\nauthors = [{name = \"Gallopsled et al.\", email = \"pwntools-users@googlegroups.com\"}]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Console\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Science/Research\",\n    \"Intended Audience :: System Administrators\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Natural Language :: English\",\n    \"Operating System :: POSIX :: Linux\",\n    \"Programming Language :: Python :: 2.7\",\n    \"Programming Language :: Python :: 3\",\n    \"Topic :: Security\",\n    \"Topic :: Software Development :: Assemblers\",\n    \"Topic :: Software Development :: Debuggers\",\n    \"Topic :: Software Development :: Disassemblers\",\n    \"Topic :: Software Development :: Embedded Systems\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Topic :: System :: System Shells\",\n    \"Topic :: Utilities\",\n]\nkeywords = [\"pwntools\", \"exploit\", \"ctf\", \"capture\", \"the\", \"flag\", \"binary\", \"wargame\", \"overflow\", \"stack\", \"heap\", \"defcon\"]\n\nrequires-python = \">=2.7\"\ndependencies = [\n    \"paramiko>=1.15.2\",\n    \"mako>=1.0.0\",\n    \"pyelftools>=0.29, <0.30; python_version < '3'\",\n    \"pyelftools>=0.29; python_version >= '3'\",\n    \"capstone>=3.0.5rc2\",  # see Gallopsled/pwntools#971, Gallopsled/pwntools#1160\n    \"ropgadget>=5.3\",\n    \"pyserial>=2.7\",\n    \"requests>=2.0\",\n    \"pip>=6.0.8\",\n    \"pygments>=2.0\",\n    \"pysocks\",\n    \"python-dateutil\",\n    \"packaging\",\n    \"psutil>=3.3.0\",\n    \"intervaltree>=3.0\",\n    \"sortedcontainers\",\n    \"unicorn>=2.0.1\",\n    \"six>=1.12.0\",\n    \"rpyc\",\n    \"colored_traceback<0.4; python_version < '3'\",\n    \"colored_traceback; python_version >= '3'\",\n    \"pathlib2; python_version < '3.4'\",\n    \"unix-ar; python_version >= '3'\",\n    \"zstandard\",\n]\n\n[project.urls]\nhomepage = \"https://pwntools.com\"\ndownload = \"https://github.com/Gallopsled/pwntools/releases\"\n\n[tool.distutils.bdist_wheel]\nuniversal = 1\n\n[tool.setuptools]\ninclude-package-data = false\n\n[tool.setuptools.packages.find]\nnamespaces = false\n\n[tool.coverage.run]\nbranch = true\nparallel = true\nconcurrency = [\"thread\", \"multiprocessing\"]\nomit = [\n    \"*/constants/*\",\n]\nsource = [\n    \"pwn\",\n    \"pwnlib\",\n    \"~/.cache/.pwntools-cache-2.7/\",\n    \"~/.cache/.pwntools-cache-3.10/\",\n]\ndisable_warnings = [\"module-not-imported\"]\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.9033203125,
          "content": "#!/usr/bin/env python\nfrom __future__ import print_function\n\nimport glob\nimport os\nimport sys\nfrom distutils.command.install import INSTALL_SCHEMES\nfrom distutils.sysconfig import get_python_inc\nfrom distutils.util import convert_path\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n# Get all template files\ntemplates = []\nfor dirpath, dirnames, filenames in os.walk(convert_path('pwnlib/shellcraft/templates'), followlinks=True):\n    for f in filenames:\n        templates.append(os.path.relpath(os.path.join(dirpath, f), 'pwnlib'))\n\n# This makes pwntools-LICENSE.txt appear with the package folders\nfor scheme in INSTALL_SCHEMES.values():\n    scheme['data'] = scheme['purelib']\n\nconsole_scripts = ['pwn=pwnlib.commandline.main:main']\n\n# Find all of the ancillary console scripts\n# We have a magic flag --include-all-scripts\nflag = '--only-use-pwn-command'\nif flag in sys.argv:\n    sys.argv.remove(flag)\nelse:\n    flag = False\n\nDEPRECATED_SCRIPTS= [\n    'asm',\n    # 'checksec',\n    # 'constgrep',\n    'cyclic',\n    'debug',\n    'disablenx',\n    'disasm',\n    'elfdiff',\n    'elfpatch',\n    'errno',\n    'hex',\n    # 'libcdb',\n    # 'phd',\n    # 'pwnstrip',\n    'scramble',\n    # 'shellcraft',\n    'template',\n    'unhex',\n]\n\nfor filename in glob.glob('pwnlib/commandline/*'):\n    filename = os.path.basename(filename)\n    filename, ext = os.path.splitext(filename)\n\n    if ext != '.py' or filename in ('__init__', 'common', 'main', 'update', 'version'):\n        continue\n\n    if filename in DEPRECATED_SCRIPTS:\n        script = '%s=pwnlib.commandline.common:deprecated_main' % filename\n    else:\n        script = '%s=pwnlib.commandline.common:main' % filename\n    if not flag:\n        console_scripts.append(script)\n\ncompat = {}\nif sys.version_info < (3, 4):\n    import site\n\n    import toml\n    project = toml.load('pyproject.toml')['project']\n    compat['packages'] = find_packages()\n    compat['install_requires'] = project['dependencies']\n    compat['name'] = project['name']\n    # https://github.com/pypa/pip/issues/7953\n    site.ENABLE_USER_SITE = \"--user\" in sys.argv[1:]\n\n\n# Check that the user has installed the Python development headers\nPythonH = os.path.join(get_python_inc(), 'Python.h')\nif not os.path.exists(PythonH):\n    print(\"You must install the Python development headers!\", file=sys.stderr)\n    print(\"$ sudo apt-get install python-dev\", file=sys.stderr)\n    sys.exit(-1)\n\nsetup(\n    version              = '4.15.0dev',\n    data_files           = [('pwntools-doc',\n                             glob.glob('*.md') + glob.glob('*.txt')),\n                            ],\n    package_data         = {\n        'pwnlib': [\n            'data/crcsums.txt',\n            'data/useragents/useragents.txt',\n            'data/binutils/*',\n            'data/includes/*.h',\n            'data/includes/*/*.h',\n            'data/templates/*.mako',\n        ] + templates,\n    },\n    entry_points = {'console_scripts': console_scripts},\n    **compat\n)\n"
        },
        {
          "name": "travis",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}