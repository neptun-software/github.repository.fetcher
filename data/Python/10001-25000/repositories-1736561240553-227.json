{
  "metadata": {
    "timestamp": 1736561240553,
    "page": 227,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jaakkopasanen/AutoEq",
      "stars": 13664,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.54296875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n.idea\ninspect/\nmy_data/\nmy-data/\nmy_results/\nmy-results/\n**/images\n**/inspection\n**/pdf\n**/json\n**/data/ignore\nmeasurements/crinacle/*data*/\nmeasurements/crinacle/Raw measurements (Patreon)/\nmeasurements/*/phone_book*.json\nresults/crinacle/*/*/*.csv\nmeasurements/Rtings/crawl_graph_data_urls.json\nmeasurements/*/raw_data/\nchromedriver*\nwebapp/data/*\n!webapp/data/legal/\n!webapp/data/targets.json\n!webapp/data/targets.json\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0048828125,
          "content": "FROM ubuntu:22.04\nRUN apt update\nRUN apt install -y curl\nRUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash -\nRUN apt update\nRUN apt install -y nodejs\nRUN apt -y install nodejs libsndfile1 python3 python3-dev python3-pip python3-venv\nWORKDIR /app\nCOPY ./autoeq/*.py ./autoeq/\nCOPY ./webapp/ui/package.json ./webapp/ui/package.json\nCOPY ./webapp/ui/package-lock.json ./webapp/ui/package-lock.json\nCOPY ./webapp/ui/public ./webapp/ui/public\nCOPY ./webapp/ui/src ./webapp/ui/src\nCOPY ./webapp/ui/config ./webapp/ui/config\nCOPY ./webapp/ui/scripts ./webapp/ui/scripts\nCOPY ./webapp/main.py ./webapp/main.py\nCOPY ./webapp/requirements.txt ./webapp/requirements.txt\nCOPY ./pyproject.toml ./pyproject.toml\nCOPY ./README.md ./README.md\nRUN python3 -m pip install -U pip\nRUN python3 -m pip install -U .\nWORKDIR /app/webapp\nRUN python3 -m pip install -U -r ./requirements.txt\nWORKDIR /app/webapp/ui\nRUN npm ci\nRUN npm run build\nWORKDIR /app/webapp\nENV APP_ENV=production\nCMD python3 -m uvicorn main:app --host 0.0.0.0 --port 8000\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "MIT License\n\nCopyright (c) 2018-2022 Jaakko Pasanen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.9287109375,
          "content": "# AutoEq\nAutoEq is a tool for automatically equalizing headphones.\n\nGo to **[autoeq.app](https://autoeq.app)** to get started.\n\nThis Github repository now mainly serves developers. The contributions of this project are:\n* Web application for easily equalize and tweak headphone frequency responses without needing to install anything\n* Library for working with (headphone) frequency responses and optimizing parametric equalizers\n* [PyPi package](https://pypi.org/project/autoeq/) for installing the library on your projects\n* Collection of headphone [measurements](./measurements) as numerical data from\n[oratory1990](https://www.reddit.com/r/oratory1990/wiki/index/list_of_presets/),\n[crinacle](https://crinacle.com),\n[Innerfidelity](https://www.stereophile.com/content/innerfidelity-headphone-measurements),\n[Rtings](https://www.rtings.com/headphones/1-5/graph) and legacy\nheadphone.com measurements (which are not the same as what the company produces today).\n* Collection of different headphone frequency response [targets](./targets) as numerical data\n* Pre-computed equalizer settings in [results](./results), although these should not be used by normal users since\n**[autoeq.app](https://autoeq.app)** exists\n\n![Sennheiser HD 800](./results/oratory1990/over-ear/Sennheiser%20HD%20800/Sennheiser%20HD%20800.png)\n\n*Sennheiser HD 800 equalization results plotted*\n\n### Updates\n**2023-10-29** AutoEq version 4.0.0. Improved and unified naming conventions across the project. Cleaned up obsolete\nfiles and reorganized directory structure. Completely reworked database management tools.\n\n**2022-05-14** Web application. Reorganized measurements and results.\n\n**2022-10-30** Restructured the project and published in PyPi. Source code moved under [autoeq](./autoeq) directory and \ncommand line usage changed from `python autoeq.py` to `python -m autoeq` with underscores `_` replaced with hyphens `-`\nin the parameter names. \n\n**2022-09-18** Parametric eq optimizer reworked. The new optimizer supports shelf filters, has a powerful configuration\nsystem, run 10x faster, has limits for Fc, Q and gain value ranges and treats +10 kHz range as average value instead of\ntrying to fix it precisely.\n\n## Usage\nAutoEq produces settings for basically all types of equalizer apps but does not do the equalization itself. You'll need\na different app for that. Go to **[autoeq.app](https://autoeq.app)** and select your equalizer app of choice. Quick\ninstructions for importing the produced settings will be shown there.\n\n## Command Line Use\nIn addition to the web application, AutoEq can be used from command line (terminal). This is advanced use mainly\nintended for developers. The following instructions apply for command line and Python interface use.\n\n### Installing\n- Download and install Git: https://git-scm.com/downloads. When installing Git on Windows, use Windows SSL verification\ninstead of Open SSL or you might run into problems when installing project dependencies.\n- Download and install 64-bit **[Python 3](https://www.python.org/getit/)**. Make sure to check *Add Python 3.X to PATH*.\n- You may need to install [libsndfile](http://www.mega-nerd.com/libsndfile/) if you're having problems with `soundfile`\nwhen installing and/or running AutoEq.\n- On Linux you may need to install Python dev packages\n```shell\nsudo apt install python3-dev python3-pip python3-venv\n```\n- On Linux you may need to install [pip](https://pip.pypa.io/en/stable/installing/)\n- On Windows you may need to install\n[Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017, and 2019](https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads)\n- Open a terminal / command prompt. On Windows, search `cmd` in the start menu.\n- Clone AutoEq\n```shell\ngit clone https://github.com/jaakkopasanen/AutoEq.git\n```\n- Go to AutoEq location\n```shell\ncd AutoEq\n```\n- Create a python virtual environment\n```shell\npython -m venv venv\n```\n- Activate virtualenv\n```shell\n# On Windows\nvenv\\Scripts\\activate.bat\n# On Linux and Mac\n. venv/bin/activate\n```\n- Update pip\n```shell\npython -m pip install -U pip\n```\n- Install required packages\n```shell\npython -m pip install -U -e .\n```\n- Verify installation. If everything went well, you'll see the list of command line parameters AutoEq accepts.\n```shell\npython -m autoeq --help\n```\n\n```shell\npython -m autoeq --input-file=\"measurements/oratory1990/data/over-ear/Sennheiser HD 800.csv\" --output-dir=\"my_results\" --target=\"targets/harman_over-ear_2018_wo_bass.csv\" --max-gain=24 --parametric-eq --parametric-eq-config=4_PEAKING_WITH_LOW_SHELF,4_PEAKING_WITH_HIGH_SHELF --bass-boost=6 --convolution-eq --fs=48000 --bit-depth=32 --f-res=16\n```\n\nWhen coming back at a later time you'll only need to activate virtual environment again\n```shell\n# On Windows\ncd AutoEq\nvenv\\Scripts\\activate.bat\n# On Linux and Mac\ncd AutoEq\n. venv/bin/activate\n```\n\nTo learn more about virtual environments, read [Python' venv documentation](https://docs.python.org/3.9/library/venv.html).\n\n#### Updating\nAutoEq is in active development and gets new measurements, results and features all the time. You can get the latest\nversion from git\n```shell\ngit pull\n```\n\nDependencies may change from time to time, you can update to the latest with\n```shell\npython -m pip install -U -e .\n```\n\n#### Checking Installation\nThis prints out CLI parameters if installation was successful.\n```shell\npython -m autoeq --help\n```\n\n### Example\nEqualizing Sennheiser HD 650 and saving results to `my_results/`:\n```shell\npython -m autoeq --input-file=\"measurements/oratory1990/data/over-ear/Sennheiser HD 650.csv\" --output-dir=\"my_results\" --target=\"targets/harman_over-ear_2018.csv\" --convolution-eq --parametric-eq --ten-band-eq --fs=44100,48000\n```\n\n### Building\nAdd changelog entry before building and update version number in pyproject.toml!\n\nInstall `build` and `twine`\n```shell\npython -m pip install build twine\n```\n\nAdd updates to `autoeq/README.md` before building!\n\nBuild PyPi package on Windows\n```shell\ncopy /y README.md README.md.bak && copy /y autoeq\\README.md README.md && python -m build && copy /y README.md.bak README.md && del README.md.bak\n```\n\nBuild PyPi package on Linux / MacOS\n```shell\ncp README.md README.md.bak && cp autoeq/README.md README.md && python -m build && cp README.md.bak README.md && rm README.md.bak\n```\n\npublish\n```shell\npython -m twine upload dist/autoeq-<VERSION>*\n```\n\nRemember to add Git tag!\n\n## Contact\n[Issues](https://github.com/jaakkopasanen/AutoEq/issues) are the way to go if you are experiencing problems or have\nideas or feature requests. Issues are not the correct channel for headphone requests because this project sources the\nmeasurements from other databases and a headphone missing from AutoEq means it has not been measured by any of the\nsupported sources.\n\nYou can find me in [Reddit](https://www.reddit.com/user/jaakkopasanen),\n[Audio Science Review](https://www.audiosciencereview.com/forum/index.php?members/jaakkopasanen.17838/) and\n[Head-fi](https://www.head-fi.org/members/jaakkopasanen.491235/) if you just want to say hello.\n"
        },
        {
          "name": "autoeq",
          "type": "tree",
          "content": null
        },
        {
          "name": "dbtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "measurements",
          "type": "tree",
          "content": null
        },
        {
          "name": "peq.yaml",
          "type": "blob",
          "size": 0.9228515625,
          "content": "optimizer:\n  min_f: 20\n  max_f: 20000  # Only optimizing up to 10 kHz because of we only have 6 filters\n  max_time: null  # Letting optimizer finish since this is probably for a one-off custom optimization, not for API\n  min_change_rate: null  # Letting optimizer finish\n  min_std: null  # Letting optimizer finish\nfilter_defaults:\n  min_fc: 20\n  max_fc: 10000\n  min_q: 0.18248\n  max_q: 6\n  min_gain: -20\n  max_gain: 20\nfilters:\n  - type: PEAKING\n  - type: PEAKING\n  - type: PEAKING\n  - type: PEAKING\n  - type: PEAKING\n  - type: PEAKING\n  - type: PEAKING\n  - type: PEAKING\n  - type: LOW_SHELF\n    fc: 105  # Fixed center frequency at 105 Hz\n    q: 0.7  # Fixed quality of 0.7\n  - type: HIGH_SHELF\n    fc: 10000\n    min_fc: 5000  # Letting the optimizer adjust high shelf between 5 kHz and...\n    max_fc: 12000  # ...12 kHz\n    min_q: 0.4  # Shelf filters start to overshoot below 0.4\n    max_q: 0.7  # Shelf filters start to overshoot after 0.7\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.001953125,
          "content": "[build-system]\nrequires = [\n    \"hatchling\",\n]\nbuild-backend = \"hatchling.build\"\n\n[project]\nname = \"autoeq\"\nversion = \"4.1.2\"\nauthors = [\n  { name=\"Jaakko Pasanen\", email=\"jaakko.o.pasanen@gmail.com\" },\n]\ndescription = \"Automatic headphone equalizer config generator\"\nreadme = \"README.md\"\nrequires-python = \">=3.8,<3.12\"\nclassifiers = [\n    \"Programming Language :: Python :: 3\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n]\ndependencies = [\n    'Pillow~=10.0.1',\n    'matplotlib~=3.7.3',\n    'scipy~=1.10.1',\n    'numpy~=1.24.4',\n    'tabulate~=0.9.0',\n    'soundfile~=0.12.1',\n    'pyyaml~=6.0',\n    'tqdm~=4.66.1',\n]\n\n[project.urls]\n\"Homepage\" = \"https://github.com/jaakkopasanen/AutoEq\"\n\"Bug Tracker\" = \"https://github.com/jaakkopasanen/AutoEq/issues\"\n\n[tool.hatch.build]\ninclude = [\n    \"/autoeq\",\n    \"LICENCE\",\n    \"pyproject.toml\",\n]\nexclude = [\n    \"/.github\",\n    \"/targets\",\n    \"/measurements\",\n    \"/results\",\n    \"/tests\",\n    \".gitignore\",\n    \"/autoeq/README.md\"\n]\n"
        },
        {
          "name": "results",
          "type": "tree",
          "content": null
        },
        {
          "name": "targets",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "webapp",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}