{
  "metadata": {
    "timestamp": 1736561373862,
    "page": 412,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "budtmo/docker-android",
      "stars": 10153,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.16015625,
          "content": "# Git\n.git/\n\n# IDE\n**/*.idea\nbackup\n\n# Python\n**/*.egg-info\n**/*.pyc\n**/__pycache__\n**/venv\n\n# Unit Test\n**/.coverage\n**/coverage.xml\n**/xunit.xml\n**/coverage\ntmp/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1767578125,
          "content": "# IDE\n**/*.idea\nbackup\n\n# Python\n**/*.egg-info\n**/*.pyc\n**/__pycache__\n**/venv\n\n# Unit Test\n**/.coverage\n**/coverage.xml\n**/xunit.xml\n**/coverage\ntmp/\n\n# Dev-files\nn*.txt\ntest-*.sh\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 2.8466796875,
          "content": "## License Information\n\nCopyright 2023 budi utomo\n\nThis program is subject to the terms of the Apache License, Version 2.0 AND the following amendments on forks and data processing. Thus, this is a Custom Apache 2.0 License, NOT a dual-license model you may choose from.\n\n\nYou can obtain a copy of the license at http://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n\n## Forks\nAdditionally to Apache-2.0, when you fork this repo you are required to either remove our Google Form ID: 1FAIpQLSdrKWQdMh6Nt8v8NQdYvTIntohebAgqWCpXT3T9NofAoxcpkw or stop usage gathering completely.\n\n## Data processing agreement\nBy using this software you agree that the following non-PII (non personally identifiable information) data will be collected, processed and used by the maintainers for the purpose of improving the docker-android project.\n\n\nBy using this software you also grant us a nonexclusive, irrevocable, world-wide, perpetual royalty-free permission to use, modify and publish these data for all purposes, internally or publicly, including the right to sub-license said permission rights.\n\n\nWe collect, process and use the following data:\n\n* Date and time when Docker-Android started\n* User (it will collect the information about Release Version of Machine), e.g. Linux-5.4.0-146-generic-x86_64-with-glibc2.29_#163-Ubuntu_SMP_Fri_Mar_17_18:26:02_UTC_2023. This does not allow us to track individual users but does enable us to accurately measure user counts\n* City (the information come from https://ipinfo.io)\n* Region (the information come from https://ipinfo.io)\n* Country (the information come from https://ipinfo.io)\n* Release version of Docker-Android\n* Appium (Whether user use Appium or not - The possible value will be \"true\" or \"false\")\n* Appium Additional Arguments\n* Web-Log (Whether user use Web-Log feature or not - The possible value will be \"true\" or \"false\")\n* Web-Vnc (Whether user use Web-Vnc feature or not - The possible value will be \"true\" or \"false\")\n* Screen-Resolution\n* Device Type (Which docker image is used - The possible value will be \"emulator\" or \"geny_cloud\" or \"geny_aws\")\n* Emulator Device (Which device profile and skin is used if the user use device_type \"emulator\")\n* Emulator Android Version (Which Android version is used if the user use device_type \"emulator\"\n* Emulator No-Skin feature (Whether user use no-skin feature or not - The possible value will be \"true\" or \"false\")\n* Emulator Data Partition\n* Emulator Additional Arguments\n\n## End of License Information\n\nMore information about anonymized data collection can be seen [here](./documentations/USER_BEHAVIOR_ANALYTICS.md)\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.0322265625,
          "content": "Budi Utomo <budtmo.os@gmail.com>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5986328125,
          "content": "\n<p align=\"center\">\n  <img id=\"header\" src=\"./images/logo_docker-android.png\" />\n</p>\n\n[![Paypal Donate](https://img.shields.io/badge/paypal-donate-blue.svg)](http://paypal.me/budtmo) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com) [![codecov](https://codecov.io/gh/budtmo/docker-android/branch/master/graph/badge.svg)](https://codecov.io/gh/budtmo/docker-android) [![Join the chat at https://gitter.im/budtmo/docker-android](https://badges.gitter.im/budtmo/docker-android.svg)](https://gitter.im/budtmo/docker-android?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![GitHub release](https://img.shields.io/github/release/budtmo/docker-android.svg)](https://github.com/budtmo/docker-android/releases)\n\nDocker-Android is a docker image built to be used for everything related to Android. It can be used for Application development and testing (native, web and hybrid-app).\n\nAdvantages of using this project\n--------------------------------\n1. Emulator with different device profile and skins, such as Samsung Galaxy S6, LG Nexus 4, HTC Nexus One and more.\n2. Support vnc to be able to see what happen inside docker container\n3. Support log sharing feature where all logs can be accessed from web-UI\n4. Ability to control emulator from outside container by using adb connect\n5. Integrated with other cloud solutions, e.g. [Genymotion Cloud](https://www.genymotion.com/cloud/)\n6. It can be used to build Android project\n7. It can be used to run unit and UI-Test with different test-frameworks, e.g. Appium, Espresso, etc.\n\nList of Docker-Images\n---------------------\n|Android   |API   |Image with latest release version   |Image with specific release version|\n|:---|:---|:---|:---|\n|9.0|28|budtmo/docker-android:emulator_9.0|budtmo/docker-android:emulator_9.0_<release_version>|\n|10.0|29|budtmo/docker-android:emulator_10.0|budtmo/docker-android:emulator_10.0_<release_version>|\n|11.0|30|budtmo/docker-android:emulator_11.0|budtmo/docker-android:emulator_11.0_<release_version>|\n|12.0|32|budtmo/docker-android:emulator_12.0|budtmo/docker-android:emulator_12.0_<release_version>|\n|13.0|33|budtmo/docker-android:emulator_13.0|budtmo/docker-android:emulator_13.0_<release_version>|\n|14.0|34|budtmo/docker-android:emulator_14.0|budtmo/docker-android:emulator_14.0_<release_version>|\n|-|-|budtmo/docker-android:genymotion|budtmo/docker-android:genymotion_<release_version>|\n\nList of Devices\n---------------\n\nType   | Device Name\n-----  | -----\nPhone  | Samsung Galaxy S10\nPhone  | Samsung Galaxy S9\nPhone  | Samsung Galaxy S8\nPhone  | Samsung Galaxy S7 Edge\nPhone  | Samsung Galaxy S7\nPhone  | Samsung Galaxy S6\nPhone  | Nexus 4\nPhone  | Nexus 5\nPhone  | Nexus One\nPhone  | Nexus S\nTablet | Nexus 7\n\nRequirements\n------------\n\n1. Docker is installed on your system.\n\nQuick Start\n-----------\n\n1. If you use ***Ubuntu OS*** on your host machine, you can skip this step. For ***OSX*** and ***Windows OS*** user, you need to use Virtual Machine that support Virtualization with Ubuntu OS because the image can be run under ***Ubuntu OS only***.\n\n2. Your machine should support virtualization. To check if the virtualization is enabled is:\n    ```\n    sudo apt install cpu-checker\n    kvm-ok\n    ```\n\n3. Run Docker-Android container\n    ```\n    docker run -d -p 6080:6080 -e EMULATOR_DEVICE=\"Samsung Galaxy S10\" -e WEB_VNC=true --device /dev/kvm --name android-container budtmo/docker-android:emulator_11.0\n    ```\n\n4. Open ***http://localhost:6080*** to see inside running container.\n\n5. To check the status of the emulator\n    ```\n    docker exec -it android-container cat device_status\n    ```\n\nPersisting data\n-----------\n\nThe default behaviour is to destroy the emulated device on container restart. To persist data, you need to mount a volume at `/home/androidusr`:\n    ```\n    docker run -v data:/home/androidusr budtmo/docker-android:emulator_11.0\n    ```\n\nWSL2 Hardware acceleration (Windows 11 only)\n-----------\n\nCredit goes to [Guillaume - The Parallel Interface blog](https://www.paralint.com/2022/11/find-new-modified-and-unversioned-subversion-files-on-windows)\n\n[Microsoft - Advanced settings configuration in WSL](https://learn.microsoft.com/en-us/windows/wsl/wsl-config)\n\n\n1. Add yourself to the `kvm` usergroup.\n    ```\n    sudo usermod -a -G kvm ${USER}\n    ```\n\n2. Add necessary flags to `/etc/wsl2.conf` to their respective sections.\n    ```\n    [boot]\n    command = /bin/bash -c 'chown -v root:kvm /dev/kvm && chmod 660 /dev/kvm'\n\n    [wsl2]\n    nestedVirtualization=true\n    ```\n3. Restart WSL2 via CMD prompt or Powershell\n    ```\n    wsl --shutdown\n    ```\n\n\n`command = /bin/bash -c 'chown -v root:kvm /dev/kvm && chmod 660 /dev/kvm'` sets `/dev/kvm` to `kvm` usergroup rather than the default `root` usergroup on WSL2 startup.\n\n`nestedVirtualization` flag is only available to Windows 11.\n\nUse-Cases\n---------\n\n1. [Build Android project](./documentations/USE_CASE_BUILD_ANDROID_PROJECT.md)\n2. [UI-Test with Appium](./documentations/USE_CASE_APPIUM.md)\n3. [Control Android emulator on host machine](./documentations/USE_CASE_CONTROL_EMULATOR.md)\n4. [SMS Simulation](./documentations/USE_CASE_SMS.md)\n5. [Jenkins](./documentations/USE_CASE_JENKINS.md)\n6. [Deploying on cloud (Azure, AWS, GCP)](./documentations/USE_CASE_CLOUD.md)\n\nCustom-Configurations\n---------------------\n\nThis [document](./documentations/CUSTOM_CONFIGURATIONS.md) contains information about configurations that can be used to enable some features, e.g. log-sharing, etc.\n\nGenymotion\n----------\n\n<p align=\"center\">\n  <img id=\"geny\" src=\"./images/logo_genymotion_and_dockerandroid.png\" />\n</p>\n\nFor you who do not have ressources to maintain the simulator or to buy machines or need different device profiles, you can give a try by using [Genymotion SAAS](https://cloud.geny.io/). Docker-Android is [integrated with Genymotion](https://www.genymotion.com/blog/partner_tag/docker/) on different cloud services, e.g. Genymotion SAAS, AWS, GCP, Alibaba Cloud. Please follow [this document](./documentations/THIRD_PARTY_GENYMOTION.md) for more detail.\n\nEmulator Skins\n--------------\nThe Emulator skins are taken from [Android Studio IDE](https://developer.android.com/studio) and [Samsung Developer Website](https://developer.samsung.com/)\n\nUSERS\n-----\n\n<a href=\"https://lookerstudio.google.com/s/iGaemHJqQvg\">\n  <p align=\"center\">\n    <img src=\"./images/docker-android_users.png\" alt=\"docker-android-users\" width=\"800\" height=\"600\">\n  </p>\n</a>\n\nPRO VERSION\n-----------\n\nDue to high requests for help and to be able to actively maintain the projects, the creator has decided to create docker-android-pro. Docker-Android-Pro is a sponsor based project which mean that the docker image of pro-version can be pulled only by [active sponsor](https://github.com/sponsors/budtmo).\n\nThe differences between normal version and pro version are:\n\n|Feature   |Normal   |Pro   |Comment|\n|:---|:---|:---|:---|\n|user-behavior-analytics|Yes|No|-|\n|proxy|No|Yes|Set up company proxy on Android emulator on fly|\n|language|No|Yes|Set up language on Android emulator on fly|\n|root-privileged|No|Yes|Able to run command with security privileged|\n|headless-mode|No|Yes|Save resources by using headless mode|\n|Selenium 4.x integration|No|Yes|Running Appium UI-Tests againt one (Selenium Hub) endpoint for Android- and iOS emulator(s) / device(s)|\n|multiple Android-Simulators|No|Yes (soon)|Save resources by having multiple Android-Simulators on one docker-container|\n|Google Play Store|No|Yes (soon)|-|\n|Video Recording|No|Yes (soon)|Helpful for debugging|\n\nThis [document](./documentations/DOCKER-ANDROID-PRO.md) contains detail information about how to use docker-android-pro.\n\nLICENSE\n-------\nSee [License](LICENSE.md)\n"
        },
        {
          "name": "app.sh",
          "type": "blob",
          "size": 3.3408203125,
          "content": "#!/bin/bash\n\nfunction is_str_in_list(){\n    local given_str=${1}\n    local list_str=${@:2}\n\n    if [[ ! \" ${list_str[*]} \" =~ \" ${given_str} \" ]]; then\n        echo \"${given_str} is not supported!\"\n        exit 1\n    fi\n}\n\ntasks=(\"test\" \"build\" \"push\")\nif [ -z \"${1}\" ]; then\n    read -p \"Task ($(echo \"${tasks[@]}\" | tr ' ' '|')) : \" t\nelse\n    t=${1}\nfi\nis_str_in_list ${t} ${tasks[@]}\n\nprojects=(\"base\" \"emulator\" \"genymotion\" \"pro-emulator\" \"pro-emulator_headless\")\nif [ -z \"${2}\" ]; then\n    read -p \"Project ($(echo \"${projects[@]}\" | tr ' ' '|')) : \" p\nelse\n    p=${2}\nfi\nis_str_in_list ${p} ${projects[@]}\n\nif [ -z \"${3}\" ]; then\n    read -p \"Release Version (v2.0.0-p0|v2.0.0-p1|etc) : \" r_v\nelse\n    r_v=${3}\nfi\n\nFOLDER_PATH=\"\"\nIMAGE_NAME=\"\"\nTAG_NAME=\"\"\n\nif [[ \"${p}\" == \"pro\"* ]]; then\n    IFS='-' read -ra arr <<<\"${p}\"\n    FOLDER_PATH+=\"docker/${arr[0]}/${arr[1]}\"\n    IMAGE_NAME+=\"budtmo2/docker-android-${arr[0]}\"\n    TAG_NAME+=\"${arr[1]}\"\nelse\n    FOLDER_PATH+=\"docker/${p}\"\n    IMAGE_NAME+=\"budtmo/docker-android\"\n    TAG_NAME+=\"${p}\"\nfi\n\nif [[ \"${p}\" == *\"emulator\"* ]]; then\n    supported_android_version=(\"9.0\" \"10.0\" \"11.0\" \"12.0\" \"13.0\" \"14.0\")\n    declare -A api_levels=(\n        [\"9.0\"]=28\n        [\"10.0\"]=29\n        [\"11.0\"]=30\n        [\"12.0\"]=32\n        [\"13.0\"]=33\n        [\"14.0\"]=34\n    )\n\n    # To get the last index\n    keys=(\"${!api_levels[@]}\")\n    sorted_keys=($(printf '%s\\n' \"${keys[@]}\" | sort)) \n    last_key=${keys[-2]} # because 9.0 will be last\n\n    if [ -z \"${4}\" ]; then\n        read -p \"Android Version ($(echo \"${supported_android_version[@]}\" \\\n            | tr ' ' '|')) : \" a_v\n    else\n        a_v=${4}\n    fi\n    is_str_in_list ${a_v} ${supported_android_version[@]}\n    a_l=${api_levels[${a_v}]}\n    TAG_NAME+=\"_${a_v}\"\nfi\n\nIMAGE_NAME_LATEST=\"${IMAGE_NAME}:${TAG_NAME}\"\nTAG_NAME+=\"_${r_v}\"\nIMAGE_NAME_SPECIFIC_RELEASE=${IMAGE_NAME}:${TAG_NAME}\necho \"${IMAGE_NAME_SPECIFIC_RELEASE} or ${IMAGE_NAME_LATEST} \"\n\nfunction build() {\n    # autopep8 --recursive --exclude=.git,__pycache__,venv --max-line-length=120 --in-place .\n    cmd=\"docker build -t ${IMAGE_NAME_SPECIFIC_RELEASE} --build-arg DOCKER_ANDROID_VERSION=${r_v} \"\n    if [ -n \"${a_v}\" ]; then\n        cmd+=\"--build-arg EMULATOR_ANDROID_VERSION=${a_v} --build-arg EMULATOR_API_LEVEL=${a_l} \"\n    fi\n\n    cmd+=\"-f ${FOLDER_PATH} .\"\n    ${cmd}\n    docker tag ${IMAGE_NAME_SPECIFIC_RELEASE} ${IMAGE_NAME_LATEST}\n\n    if [ -n \"${a_v}\" ] && [ \"${a_v}\" = \"${last_key}\" ]; then\n        echo \"${a_v} is the last version in the list, will use it as default image tag\"\n        docker tag ${IMAGE_NAME_SPECIFIC_RELEASE} ${IMAGE_NAME}:latest\n    fi\n}\n\nfunction test() {\n    cli_path=\"/home/androidusr/docker-android/cli\"\n    results_path=\"test-results\"\n    tmp_folder=\"tmp\"\n\n    mkdir -p tmp\n    build\n    docker run -it --rm --name test --entrypoint /bin/bash \\\n    -v $PWD/${tmp_folder}:${cli_path}/${tmp_folder} ${IMAGE_NAME_SPECIFIC_RELEASE} \\\n    -c \"cd ${cli_path} && sudo rm -rf ${tmp_folder}/* && \\\n    nosetests -v && sudo mv .coverage ${tmp_folder} && \\\n    sudo cp -r ${results_path}/* ${tmp_folder} && sudo chown -R 1300:1301 ${tmp_folder} &&\n    sudo chmod a+x -R ${tmp_folder}\"\n}\n\nfunction push() {\n    build\n    docker push ${IMAGE_NAME_SPECIFIC_RELEASE}\n    docker push ${IMAGE_NAME_LATEST}\n    if [ -n \"${a_v}\" ] && [ \"${a_v}\" = \"${last_key}\" ]; then\n        docker push ${IMAGE_NAME}:latest\n    fi\n}\n\n${t}\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentations",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "mixins",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}