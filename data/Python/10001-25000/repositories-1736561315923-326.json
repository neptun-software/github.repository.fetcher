{
  "metadata": {
    "timestamp": 1736561315923,
    "page": 326,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ShishirPatil/gorilla",
      "stars": 11653,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.81640625,
          "content": "build\ndist\n*.egg-info\n**/__pycache__/\n*.log\n**/*.lic\n.vscode\n.idea\n.env\n.editorconfig\n.DS_Store\n**/*.pyc\ngoex/exec_engine/checkpoints/\ngoex/exec_engine/credentials/*\n!goex/exec_engine/credentials/credentials_utils.py\n!goex/exec_engine/credentials/supported.txt\ngoex/docker/*/requirements.txt\ngoex/docker/misc/images.json\n\n################## Berkley Function Call Leaderboard ##########################\n\n# Ignore inference results\nberkeley-function-call-leaderboard/result/\n\n# Ignore leaderboard score\nberkeley-function-call-leaderboard/score/\n\n# Ignore environment variables\nberkeley-function-call-leaderboard/.env\n!berkeley-function-call-leaderboard/.env.example\n\n# Ignore multi turn ground truth conversation log\nberkeley-function-call-leaderboard/utils/ground_truth_conversation/\n\n.direnv/\n.venv\n\n# Ignore the wandb cache:\n**/wandb/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.515625,
          "content": "# Gorilla: Large Language Model Connected with Massive APIs\n\n<div align=\"center\">\n  <img src=\"https://github.com/ShishirPatil/gorilla/blob/gh-pages/assets/img/logo.png\" width=\"50%\" height=\"50%\">\n</div>\n\n<div align=\"center\">\n  \n[![Arxiv](https://img.shields.io/badge/Gorilla_Paper-2305.15334-<COLOR>.svg?style=flat-square)](https://arxiv.org/abs/2305.15334) [![Discord](https://img.shields.io/discord/1111172801899012102?label=Discord&logo=discord&logoColor=green&style=flat-square)](https://discord.gg/grXXvj9Whz) [![Gorilla Website](https://img.shields.io/badge/Website-gorilla.cs.berkeley.edu-blue?style=flat-square)](https://gorilla.cs.berkeley.edu/) [![Gorilla Blog](https://img.shields.io/badge/Blog-gorilla.cs.berkeley.edu/blog.html-blue?style=flat-square)](https://gorilla.cs.berkeley.edu/blog.html) [![Hugging Face](https://img.shields.io/badge/🤗-gorilla--llm-yellow.svg?style=flat-square)](https://huggingface.co/gorilla-llm)\n\n</div>\n\n## Latest Updates\n> 📢 Check out our detailed [Berkeley Function Calling Leaderboard changelog](/berkeley-function-call-leaderboard/CHANGELOG.md) (Last updated: ![Last Updated](https://img.shields.io/github/last-commit/ShishirPatil/gorilla?path=berkeley-function-call-leaderboard/CHANGELOG.md)) for the latest dataset / model updates to the Berkeley Function Calling Leaderboard!\n\n\n- 🎯 [10/04/2024] Introducing the Agent Arena by Gorilla X LMSYS Chatbot Arena! Compare different agents in tasks like search, finance, RAG, and beyond. Explore which models and tools work best for specific tasks through our novel ranking system and community-driven prompt hub. [[Blog](https://gorilla.cs.berkeley.edu/blogs/14_agent_arena.html)] [[Arena](http://agent-arena.com)] [[Leaderboard](http://agent-arena.com/leaderboard)] [[Dataset](https://github.com/ShishirPatil/gorilla/tree/main/agent-arena#evaluation-directory)] [[Tweet](https://x.com/shishirpatil_/status/1841876885757977044)]\n\n- 📣 [09/21/2024] Announcing BFCL V3 - Evaluating multi-turn and multi-step function calling capabilities! New state-based evaluation system tests models on handling complex workflows, sequential functions, and service states. [[Blog](https://gorilla.cs.berkeley.edu/blogs/13_bfcl_v3_multi_turn.html)] [[Leaderboard](https://gorilla.cs.berkeley.edu/leaderboard.html)] [[Code](https://github.com/ShishirPatil/gorilla/tree/main/berkeley-function-call-leaderboard)] [[Tweet](https://x.com/shishirpatil_/status/1837205152132153803)]\n\n- 🚀 [08/20/2024] Released BFCL V2 • Live! The Berkeley Function-Calling Leaderboard now features enterprise-contributed data and real-world scenarios. [[Blog](https://gorilla.cs.berkeley.edu/blogs/12_bfcl_v2_live.html)] [[Live Leaderboard](https://gorilla.cs.berkeley.edu/leaderboard_live.html)] [[V2 Categories Leaderboard](https://gorilla.cs.berkeley.edu/leaderboard.html)] [[Tweet](https://x.com/shishirpatil_/status/1825577931697233999)]\n\n- ⚡️ [04/12/2024] Excited to release GoEx - a runtime for LLM-generated actions like code, API calls, and more. Featuring \"post-facto validation\" for assessing LLM actions after execution, \"undo\" and \"damage confinement\" abstractions to manage unintended actions & risks. This paves the way for fully autonomous LLM agents, enhancing interaction between apps & services with human-out-of-loop. [[Blog](https://gorilla.cs.berkeley.edu/blogs/10_gorilla_exec_engine.html)] [[Code](https://github.com/ShishirPatil/gorilla/tree/main/goex)] [[Paper](https://arxiv.org/abs/2404.06921)] [[Tweet](https://x.com/shishirpatil_/status/1778485140257452375)]\n\n- ⏰ [04/01/2024] Introducing cost and latency metrics into [Berkeley function calling leaderboard](https://gorilla.cs.berkeley.edu/leaderboard)!\n- :rocket: [03/15/2024] RAFT: Adapting Language Model to Domain Specific RAG is live! [[MSFT-Meta blog](https://techcommunity.microsoft.com/t5/ai-ai-platform-blog/bg-p/AIPlatformBlog)] [[Berkeley Blog](https://gorilla.cs.berkeley.edu/blogs/9_raft.html)]\n- :trophy: [02/26/2024] [Berkeley Function Calling Leaderboard](https://gorilla.cs.berkeley.edu/leaderboard) is live!\n- :dart: [02/25/2024] [OpenFunctions v2](https://gorilla.cs.berkeley.edu/blogs/7_open_functions_v2.html) sets new SoTA for open-source LLMs!\n- :fire: [11/16/2023] Excited to release [Gorilla OpenFunctions](https://gorilla.cs.berkeley.edu/blogs/4_open_functions.html)\n- 💻 [06/29/2023] Released [gorilla-cli](https://github.com/gorilla-llm/gorilla-cli), LLMs for your CLI!\n- 🟢 [06/06/2023] Released Commercially usable, Apache 2.0 licensed Gorilla models\n- :rocket: [05/30/2023] Provided the [CLI interface](inference/README.md) to chat with Gorilla!\n- :rocket: [05/28/2023] Released Torch Hub and TensorFlow Hub Models!\n- :rocket: [05/27/2023] Released the first Gorilla model! [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1DEBPsccVLF_aUnmD0FwPeHFrtdC0QIUP?usp=sharing) or [:hugs:](https://huggingface.co/gorilla-llm/gorilla-7b-hf-delta-v0)!\n- :fire: [05/27/2023] We released the APIZoo contribution guide for community API contributions!\n- :fire: [05/25/2023] We release the APIBench dataset and the evaluation code of Gorilla!\n\n\n## About\n\n**Gorilla enables LLMs to use tools by invoking APIs. Given a natural language query, Gorilla comes up with the semantically- and syntactically- correct API to invoke.** \n\nWith Gorilla, we are the first to demonstrate how to use LLMs to invoke 1,600+ (and growing) API calls accurately while reducing hallucination. This repository contains [inference code](/gorilla/inference) for running Gorilla finetuned models, [evaluation code](/gorilla/eval) for reproducing results from our paper, and [APIBench](/data) - the largest collection of APIs, curated and easy to be trained on!\n\nSince our initial release, we've served ~500k requests and witnessed incredible adoption by developers worldwide. The project has expanded to include tools, evaluations, leaderboard, end-to-end finetuning recipes, infrastructure components, and the Gorilla API Store:\n\n| Project | Type | Description (click to expand) |\n|---------|------|---------------------------|\n| [Gorilla Paper](https://arxiv.org/abs/2305.15334) | 🤖 Model<br>📝 Fine-tuning<br>📚 Dataset<br>📊 Evaluation<br>🔧 Infra | <details><summary>Large Language Model Connected with Massive APIs</summary>• Novel finetuning approach for API invocation<br>• Evaluation on 1,600+ APIs (APIBench)<br>• Retrieval-augmented training for test-time adaptation |\n| [Gorilla OpenFunctions-V2](openfunctions/) | 🤖 Model | <details><summary>Drop-in alternative for function calling, supporting multiple complex data types and parallel execution</summary>• Multiple & parallel function execution with OpenAI-compatible endpoints<br>• Native support for Python, Java, JavaScript, and REST APIs with expanded data types<br>• Function relevance detection to reduce hallucinations<br>• Enhanced RESTful API formatting capabilities<br>• State-of-the-art performance among open-source models</details> |\n| [Berkeley Function Calling Leaderboard (BFCL)](berkeley-function-call-leaderboard/) | 📊 Evaluation<br>🏆 Leaderboard<br>🔧 Function Calling Infra<br>📚 Dataset | <details><summary>Comprehensive evaluation of function-calling capabilities</summary>• V1: Expert-curated dataset for evaluating single-turn function calling<br>• V2: Enterprise-contributed data for real-world scenarios<br>• V3: Multi-turn & multi-step function calling evaluation<br>• Cost and latency metrics for all models<br>• Interactive API explorer for testing<br>• Community-driven benchmarking platform</details> |\n| [Agent Arena](agent-arena/) | 📊 Evaluation<br>🏆 Leaderboard | <details><summary>Compare LLM agents across models, tools, and frameworks</summary>• Head-to-head agent comparisons with ELO rating system<br>• Framework compatibility testing (LangChain, AutoGPT)<br>• Community-driven evaluation platform<br>• Real-world task performance metrics</details> |\n| [Gorilla Execution Engine (GoEx)](goex/) | 🔧 Infra | <details><summary>Runtime for executing LLM-generated actions with safety guarantees</summary>• Post-facto validation for verifying LLM actions after execution<br>• Undo capabilities and damage confinement for risk mitigation<br>• OAuth2 and API key authentication for multiple services<br>• Support for RESTful APIs, databases, and filesystem operations<br>• Docker-based sandboxed execution environment</details> |\n| [Retrieval-Augmented Fine-tuning (RAFT)](raft/) | 📝 Fine-tuning<br>🤖 Model | <details><summary>Fine-tuning LLMs for robust domain-specific retrieval</summary>• Novel fine-tuning recipe for domain-specific RAG<br>• Chain-of-thought answers with direct document quotes<br>• Training with oracle and distractor documents<br>• Improved performance on PubMed, HotpotQA, and Gorilla benchmarks<br>• Efficient adaptation of smaller models for domain QA</details> |\n| [Gorilla CLI](https://github.com/gorilla-llm/gorilla-cli) | 🤖 Model<br>🔧 Local CLI Infra | <details><summary>LLMs for your command-line interface</summary>• User-friendly CLI tool supporting ~1500 APIs (Kubernetes, AWS, GCP, etc.)<br>• Natural language command generation with multi-LLM fusion<br>• Privacy-focused with explicit execution approval<br>• Command history and interactive selection interface</details> |\n| [Gorilla API Zoo](apizoo/) | 📚 Dataset | <details><summary>A community-maintained repository of up-to-date API documentation</summary>• Centralized, searchable index of APIs across domains<br>• Structured documentation format with arguments, versioning, and examples<br>• Community-driven updates to keep pace with API changes<br>• Rich data source for model training and fine-tuning<br>• Enables retrieval-augmented training and inference<br>• Reduces hallucination through up-to-date documentation</details> |\n\n## Getting Started\n\n### Quick Start\nTry Gorilla in your browser:\n- 🚀 [Gorilla Colab Demo](https://colab.research.google.com/drive/1DEBPsccVLF_aUnmD0FwPeHFrtdC0QIUP?usp=sharing): Try the base Gorilla model\n- 🌐 [Gorilla Gradio Demo](https://huggingface.co/spaces/gorilla-llm/gorilla-demo/): Interactive web interface\n- 🔥 [OpenFunctions Colab Demo](https://colab.research.google.com/drive/16M5J2H9F8YQora_W2PDnp120slZH-Mqd?usp=sharing): Try the latest OpenFunctions model\n- 🎯 [OpenFunctions Website Demo](https://gorilla.cs.berkeley.edu/leaderboard.html#api-explorer): Experiment with function calling\n- 📊 [Berkeley Function Calling Leaderboard](https://gorilla.cs.berkeley.edu/leaderboard): Compare function calling capabilities\n\n### Installation Options\n\n1. **Gorilla CLI** - Fastest way to get started\n```bash\npip install gorilla-cli\ngorilla generate 100 random characters into a file called test.txt\n```\n[Learn more about Gorilla CLI →](https://github.com/gorilla-llm/gorilla-cli)\n\n2. **Run Gorilla Locally**\n```bash\ngit clone https://github.com/ShishirPatil/gorilla.git\ncd gorilla/inference\n```\n[Detailed local setup instructions →](/gorilla/inference/README.md)\n\n3. **Use OpenFunctions**\n```python\nimport openai\n\nopenai.api_key = \"EMPTY\"\nopenai.api_base = \"http://luigi.millennium.berkeley.edu:8000/v1\"\n\n# Define your functions\nfunctions = [{\n    \"name\": \"get_current_weather\",\n    \"description\": \"Get weather in a location\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\"type\": \"string\"},\n            \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]}\n        },\n        \"required\": [\"location\"]\n    }\n}]\n\n# Make API call\ncompletion = openai.ChatCompletion.create(\n    model=\"gorilla-openfunctions-v2\",\n    messages=[{\"role\": \"user\", \"content\": \"What's the weather in San Francisco?\"}],\n    functions=functions\n)\n```\n[OpenFunctions documentation →](/openfunctions/README.md)\n\n### 🔧 Other Quick Starts\n\n- 📊 **Evaluation & Benchmarking**\n  - [Berkeley Function Calling Leaderboard](/berkeley-function-call-leaderboard/README.md): Compare function calling capabilities\n  - [Agent Arena](/agent-arena/README.md): Evaluate agent workflows\n  - [Gorilla Paper Evaluation Scripts](/gorilla/eval/README.md): Run your own evaluations\n\n- 🛠️ **Development Tools**\n  - [GoEx](/goex/README.md): Safe execution of LLM-generated actions\n  - [RAFT](/raft/README.md): Fine-tune models for domain-specific tasks\n  - [API Store](/data/README.md): Contribute and use APIs\n\n\n## Frequently Asked Questions\n1. I would like to use Gorilla commercially. Is there going to be an Apache 2.0 licensed version?\n\nYes! We now have models that you can use commercially without any obligations.\n\n\n2. Can we use Gorilla with other tools like Langchain etc?\n\nAbsolutely! You've highlighted a great aspect of our tools. Gorilla is  an  end-to-end model, specifically tailored to serve correct API calls (tools) without requiring any additional coding. It's designed to work as part of a wider ecosystem and can be flexibly integrated within agentic frameworks and other tools.\n\nLangchain, is a versatile developer tool. Its \"agents\" can efficiently swap in any LLM, Gorilla included, making it a highly adaptable solution for various needs.\n\nThe beauty of these tools truly shines when they collaborate, complementing each other's strengths and capabilities to create an even more powerful and comprehensive solution. This is where your contribution can make a difference. We enthusiastically welcome any inputs to further refine and enhance these tools. \n\nCheck out our blog on [How to Use Gorilla: A Step-by-Step Walkthrough](https://gorilla.cs.berkeley.edu/blogs/5_how_to_gorilla.html) to see all the different ways you can integrate Gorilla in your projects.\n\n## Project Roadmap\nIn the immediate future, we plan to release the following:\n\n- [ ] Multimodal function-calling leaderboard\n- [ ] Agentic function-calling leaderboard\n- [ ] New batch of user contributed live function calling evals. \n- [ ] BFCL metrics to evaluate contamination\n- [ ] Openfunctions-v3 model to support more languages and multi-turn capability\n- [x] Agent Arena to compare LLM agents across models, tools, and frameworks [10/04/2024]\n- [x] Multi-turn and multi-step function calling evaluation [09/21/2024]\n- [x] User contributed Live Function Calling Leaderboard [08/20/2024]\n- [x] BFCL systems metrics including cost and latency [04/01/2024]\n- [x] Gorilla Execution Engine (GoEx) - Runtime for executing LLM-generated actions with safety guarantees [04/12/2024]\n- [x] Berkeley Function Calling leaderboard (BFCL) for evaluating tool-calling/function-calling models [02/26/2024]\n- [x] Openfunctions-v2 with more languages (Java, JS, Python), relevance detection [02/26/2024]\n- [x] API Zoo Index for easy access to all APIs [02/16/2024]\n- [x] Openfunctions-v1, Apache 2.0, with parallel and multiple function calling [11/16/2023]\n- [x] Openfunctions-v0, Apache 2.0 function calling model [11/16/2023]\n- [X] Release a commercially usable, Apache 2.0 licensed Gorilla model [06/05/2023] \n- [X] Release weights for all APIs from APIBench [05/28/2023]\n- [X] Run Gorilla LLM locally [05/28/2023]\n- [X] Release weights for HF model APIs [05/27/2023]\n- [X] Hosted Gorilla LLM chat for HF model APIs [05/27/2023]\n- [X] Opening up the APIZoo for contributions from community\n- [X] Dataset and Eval Code\n\n## License\n\nGorilla is Apache 2.0 licensed, making it suitable for both academic and commercial use.\n\n## Contact\n\n- 💬 Join our [Discord Community](https://discord.gg/grXXvj9Whz)\n- 🐦 Follow us on [X](https://x.com/shishirpatil_)\n\n## Citation\n\n```text\n@article{patil2023gorilla,\n  title={Gorilla: Large Language Model Connected with Massive APIs},\n  author={Shishir G. Patil and Tianjun Zhang and Xin Wang and Joseph E. Gonzalez},\n  year={2023},\n  journal={arXiv preprint arXiv:2305.15334},\n} \n```\n"
        },
        {
          "name": "agent-arena",
          "type": "tree",
          "content": null
        },
        {
          "name": "berkeley-function-call-leaderboard",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "goex",
          "type": "tree",
          "content": null
        },
        {
          "name": "gorilla",
          "type": "tree",
          "content": null
        },
        {
          "name": "openfunctions",
          "type": "tree",
          "content": null
        },
        {
          "name": "raft",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0771484375,
          "content": "openai\nanthropic\ntree_sitter\ntenacity==8.2.2\npydantic==1.10.7\nrank-bm25==0.2.2\n"
        }
      ]
    }
  ]
}