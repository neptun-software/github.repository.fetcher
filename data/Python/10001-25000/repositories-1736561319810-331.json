{
  "metadata": {
    "timestamp": 1736561319810,
    "page": 331,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alicevision/Meshroom",
      "stars": 11416,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 1.44140625,
          "content": "# [GraphEditor] Indentation fix\n87c0cef605e4ef2b359d7e678155e79b65b2e762\n# [qt6][qml] Clean-up code and harmonize comments\n5a0b1c0c9547b0d00f3f10fae6994d6d8ea0b45e\n# [nodes] Linting: Clean-up files\n4c0409f573c2694325b104c2686a1532f95cb9bc\n# Linting: Clean-up files\n41e885d9ff38cd55772722376d5ef80ff908c559\n# [Viewer] SequencePlayer: Clean-up: Harmonize syntax\n42157809b90f5f6b275aa8ff9d7310c384ea395a\n# [Viewer] Clean-up: Harmonize syntax for the Viewer2D\n9af65092b9e881c828430f54a73fb4522bc1e370\n# [nodes] Harmonize the use of trailing commas across all the nodes\n61a8dcd4e2878f80b2f320f2b1c3c9b41e999b82\n# [nodes] Clean-up: Harmonize nodes' descriptions\nf2d67706511954aa3e1c026ecc858beb8c08f938\n# [qml] Clean-up: Harmonize syntax across all files\ne463f0dce2455f47d5b066f9e9434ed94b2b282f\n# [GraphEditor] Clean-up: Harmonize syntax across all files\ne9d80611c7fe185623e5f276a41b7f2de23cb6fe\n# [ImageGallery] Clean-up: Harmonize syntax across all files\n2bdf061d2e49f3e1513a59922dc33e69f68552cf\n# [Controls] Clean-up: Harmonize syntax across all files\n2908aa94a3eda2de71f8c5e6cec8cd78280bbb09\n# [Charts] Clean-up: Harmonize syntax across all files\n856641bc9dc25271062dc94a66da4c08e00f88d1\n# [Utils] Clean-up: Harmonize syntax across all files\n8313e42d8c70e2494277e338ef8fd38824270231\n# [Viewer] Clean-up: Harmonize syntax across all files\n13b8266d14783a4c595c8b731c54fc9c61adfa92\n# [Viewer3D] Clean-up: Harmonize syntax across all files\n9d2974d2823fe5d6f400eb4658f67d0306b11ac8\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3740234375,
          "content": "# temporary files\n*~\n# vim\n.*.swp\n# emacs\n*.flc\n\\#*\\#\n.\\#*\n# xemacs\n# MacOS\n.DS_Store\n# Windows\nThumbs.db\n\n# python\n*.pyc\n*.pyo\n__pycache__\n\n# backup files\n*.json\n\n# datas or personal files\n/data\n/scripts\n/build\n/dist\n/dl\n\n# tests\n/.tests\n/.pytest_cache\n\n# IDEs folders\n*.qmlproject*\n/nbproject\n.idea\n.cache\n.nfs*\n\n*.qmlc\n*.jsc\n\n*.dll\n\n*.lib\n\ninstall/qml/AliceVision/qmldir\n\nrun.bat\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.4072265625,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Build HTML documentation with Sphinx\nsphinx:\n  builder: html\n  configuration: docs/source/conf.py\n\n# Python requirements\npython:\n  install:\n    - requirements: requirements.txt\n    - requirements: dev_requirements.txt\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 53.529296875,
          "content": "# Meshroom Changelog\n\nFor algorithmic changes related to the photogrammetric pipeline, \nplease refer to [AliceVision changelog](https://github.com/alicevision/AliceVision/blob/develop/CHANGES.md).\n\n## Meshroom 2023.3.0 (2023/12/07)\n\nBased on [AliceVision 3.2.0](https://github.com/alicevision/AliceVision/tree/v3.2.0).\n\n### Major Features\n\n- New node for semantic image segmentation [PR](https://github.com/alicevision/Meshroom/pull/2076)\n- Support pixel aspect ratio (no UI) [PR](https://github.com/alicevision/Meshroom/pull/2079)\n- Noise reduction in HDR merging [PR](https://github.com/alicevision/Meshroom/pull/2072)\n\n### Features\n\n- [ui] 2D viewer: image sequence player [PR](https://github.com/alicevision/Meshroom/pull/1989)\n- [bin] meshroom_batch: support multiple init nodes [PR](https://github.com/alicevision/Meshroom/pull/2137)\n- [nodes] StructureFromMotion: Automatic alignment of the 3D reconstruction [PR](https://github.com/alicevision/Meshroom/pull/2199)\n- New node for intrinsics and rig calibration using a multiview acquisition of a checkerboard [PR](https://github.com/alicevision/Meshroom/pull/2171)\n- New Nodal Camera Tracking pipeline [PR](https://github.com/alicevision/Meshroom/pull/2200)\n- Manage LCP in imageProcessing [PR](https://github.com/alicevision/Meshroom/pull/2042)\n- [Viewer3D] Add slider to display cameras based on their resection IDs [PR](https://github.com/alicevision/Meshroom/pull/2235)\n\n### Other Improvements\n\n- Start Development 2023.3 [PR](https://github.com/alicevision/Meshroom/pull/2085)\n- Node to split reconstructed and not reconstructed cameras [PR](https://github.com/alicevision/Meshroom/pull/1974)\n- [core] Execute command line from node folder [PR](https://github.com/alicevision/Meshroom/pull/2093)\n- [core] Add brackets option for GroupAttribute [PR](https://github.com/alicevision/Meshroom/pull/2094)\n- Update Qt version to 5.15.2 [PR](https://github.com/alicevision/Meshroom/pull/1882)\n- [pipelines] Panorama: Publish the panorama preview [PR](https://github.com/alicevision/Meshroom/pull/2106)\n- [nodes] HDR Fusion: Correctly detect the number of brackets when there are several intrinsics [PR](https://github.com/alicevision/Meshroom/pull/2104)\n- [nodes] ImageSegmentation: use ChoiceParam instead of ListAttribute for validClasses [PR](https://github.com/alicevision/Meshroom/pull/2109)\n- [Panorama] Enforce priors after estimation [PR](https://github.com/alicevision/Meshroom/pull/1926)\n- tolerant bracket size selection [PR](https://github.com/alicevision/Meshroom/pull/2113)\n- [nodes] HDR Fusion: Do not send `nbBrackets` parameter to the command line when the bracket detection is automatic [PR](https://github.com/alicevision/Meshroom/pull/2117)\n- [nodes] Remove limits on outliers for brackets detection [PR](https://github.com/alicevision/Meshroom/pull/2118)\n- [nodes] LdrToHdrSampling: Exclude outliers from size computation [PR](https://github.com/alicevision/Meshroom/pull/2119)\n- [nodes] HDR Fusion: Select group with largest bracket number in case of equality [PR](https://github.com/alicevision/Meshroom/pull/2121)\n- [nodes] new exportLevels option in PanoramaPostProcessing [PR](https://github.com/alicevision/Meshroom/pull/2133)\n- [ui] GraphEditor: Minor UI changes [PR](https://github.com/alicevision/Meshroom/pull/2125)\n- [pipelines] publish downscaled panorama levels [PR](https://github.com/alicevision/Meshroom/pull/2147)\n- [nodes] HDR Fusion: Use the same bracket detection as in AliceVision [PR](https://github.com/alicevision/Meshroom/pull/2154)\n- AttributeEditor: Flag attributes with invalid values [PR](https://github.com/alicevision/Meshroom/pull/2141)\n- [pipelines] Add colors for CameraTracking and Photog+CamTrack templates [PR](https://github.com/alicevision/Meshroom/pull/2114)\n- [pipelines] add ImageSegmentation node to tracking pipelines [PR](https://github.com/alicevision/Meshroom/pull/2164)\n- Camera exposure update [PR](https://github.com/alicevision/Meshroom/pull/2159)\n- PanoramaInit: remove fake dependency [PR](https://github.com/alicevision/Meshroom/pull/2110)\n- [nodes] Masking: Handle file extensions for masks and mask inversion for `ImageSegmentation` [PR](https://github.com/alicevision/Meshroom/pull/2165)\n- [nodes] KeyframeSelection: Add `minBlockSize` param for multi-threading [PR](https://github.com/alicevision/Meshroom/pull/2161)\n- [nodes] KeyframeSelection: Add support for masks [PR](https://github.com/alicevision/Meshroom/pull/2167)\n- KeyframeSelection: Flag `outputExtension` attribute when it is set to \"none\" for video inputs [PR](https://github.com/alicevision/Meshroom/pull/2163)\n- [blender] apply masks to scene preview [PR](https://github.com/alicevision/Meshroom/pull/2170)\n- Add automatic method for HDR calibration [PR](https://github.com/alicevision/Meshroom/pull/2169)\n- Multiple UI Improvements [PR](https://github.com/alicevision/Meshroom/pull/2173)\n- [ui] FloatImageViewer: adapt resolution to zoom [PR](https://github.com/alicevision/Meshroom/pull/2148)\n- [nodes] StructureFromMotion: Add new `logIntermediateSteps` parameter [PR](https://github.com/alicevision/Meshroom/pull/2182)\n- sfm bootstraping [PR](https://github.com/alicevision/Meshroom/pull/2011)\n- [nodes] PanoramaPostProcessing: Add attributes to change the outputs' names [PR](https://github.com/alicevision/Meshroom/pull/2193)\n- [nodes] Meshing: expose minVis param [PR](https://github.com/alicevision/Meshroom/pull/2196)\n- [ui] SequencePlayer: minor adjustments (fps, icon, play) [PR](https://github.com/alicevision/Meshroom/pull/2197)\n- [pipelines] Rename Nodal Tracking to Nodal Camera Tracking [PR](https://github.com/alicevision/Meshroom/pull/2207)\n- [nodes] DepthMap: increase size of blocks [PR](https://github.com/alicevision/Meshroom/pull/2203)\n- [ui] ImageGallery: Add \"Remove All Images\" menu to clear all images [PR](https://github.com/alicevision/Meshroom/pull/2221)\n- [bin] `meshroom_batch`: Add support for relative input and output paths [PR](https://github.com/alicevision/Meshroom/pull/2218)\n- [pipelines] CamTrack: Add new template without calibration and update some parameters [PR](https://github.com/alicevision/Meshroom/pull/2216)\n- Input color space setting [PR](https://github.com/alicevision/Meshroom/pull/2219)\n- Use new SfmDataEntity plugin instead of AlembicEntity [PR](https://github.com/alicevision/Meshroom/pull/2208)\n- [Viewer3D] Remove AlembicLoader file [PR](https://github.com/alicevision/Meshroom/pull/2228)\n- [pipelines] CamTrack: Update default params for keyframes SfM [PR](https://github.com/alicevision/Meshroom/pull/2227)\n- [pipelines] PhotogAndCamTrack: Disable automatic alignment in SfM [PR](https://github.com/alicevision/Meshroom/pull/2238)\n- Automatic reorientation [PR](https://github.com/alicevision/Meshroom/pull/2236)\n- Minor code clean-up and QML warning and error fixes [PR](https://github.com/alicevision/Meshroom/pull/2226)\n- Add ancestor images info in view [PR](https://github.com/alicevision/Meshroom/pull/2242)\n- [Viewer3D] Connect any change of the selected view ID to the SfmDataLoader [PR](https://github.com/alicevision/Meshroom/pull/2237)\n- New utility nodes to create camera rigs and merge two sfmData [PR](https://github.com/alicevision/Meshroom/pull/2214)\n- [pipelines] Add image segmentation to the Nodal Camera Tracking template [PR](https://github.com/alicevision/Meshroom/pull/2266)\n\n### Bugfixes\n\n- QML: Fix minor coercion error and warning [PR](https://github.com/alicevision/Meshroom/pull/2107)\n- [ScenePreview] fix: 1st chunk was computing all views [PR](https://github.com/alicevision/Meshroom/pull/2108)\n- [bin] meshroom_batch: Save the graph once it has been all set up and resolved [PR](https://github.com/alicevision/Meshroom/pull/2095)\n- [nodes] HDR Fusion: Fix bracket detection [PR](https://github.com/alicevision/Meshroom/pull/2143)\n- [core] Preserve edges by recreating all the nodes during UID evaluation [PR](https://github.com/alicevision/Meshroom/pull/2127)\n- [bin] `meshroom_batch`: Fix input parsing for Windows [PR](https://github.com/alicevision/Meshroom/pull/2188)\n- [nodes] ImageSegmentation: increase GPU requirements [PR](https://github.com/alicevision/Meshroom/pull/2195)\n- [ui] ImageGallery: Disable \"Visualize HDR\" button after clearing images [PR](https://github.com/alicevision/Meshroom/pull/2180)\n- [ui] Check for the existence of the `poses` key in SfM JSON files before accessing it [PR](https://github.com/alicevision/Meshroom/pull/2190)\n- [nodes] CameraInit: fix tooltip focal is in mm [PR](https://github.com/alicevision/Meshroom/pull/2202)\n- [ui] Viewer2D: various orientation fixes [PR](https://github.com/alicevision/Meshroom/pull/2212)\n- [ui] ImageGallery: Use commands to set SfM attributes through the Image Gallery [PR](https://github.com/alicevision/Meshroom/pull/2220)\n- [ui] Preserve last `CameraInit` index when updating the CameraInits list [PR](https://github.com/alicevision/Meshroom/pull/2145)\n- [ui] Don't load a node's output in the 3DViewer if it has no 3D output [PR](https://github.com/alicevision/Meshroom/pull/2230)\n- [pipelines] Photogrammetry Draft: Add a `PrepareDenseScene` node to the template [PR](https://github.com/alicevision/Meshroom/pull/2232)\n- [Viewer3D] Bind the display status of the resection groups to QtAliceVision [PR](https://github.com/alicevision/Meshroom/pull/2257)\n- [core] Only update the running chunk to `STOPPED` when stopping computations [PR](https://github.com/alicevision/Meshroom/pull/2258)\n\n### CI, Build and Documentation\n\n- Update build-ubuntu.sh [PR](https://github.com/alicevision/Meshroom/pull/1951)\n- Set `ALICEVISION_SEMANTIC_SEGMENTATION_MODEL` variable during the initialisation [PR](https://github.com/alicevision/Meshroom/pull/2090)\n- [build] Remove references to QmlAlembic in the build process [PR](https://github.com/alicevision/Meshroom/pull/2131)\n\n### Contributors\n\n[almarouk](https://github.com/almarouk), [cbentejac](https://github.com/cbentejac), [demoulinv](https://github.com/demoulinv), [fabiencastan](https://github.com/fabiencastan), [gregoire-dl](https://github.com/gregoire-dl), [mugulmd](https://github.com/mugulmd), [rakhnin](https://github.com/rakhnin), [servantftechnicolor](https://github.com/servantftechnicolor)\n\n\n## Meshroom 2023.2.0 (2023/06/26)\n\nBased on [AliceVision 3.1.0](https://github.com/alicevision/AliceVision/tree/v3.1.0).\n\n### Major Features\n\n- New Photometric Stereo nodes [PR](https://github.com/alicevision/Meshroom/pull/1853)\n- [nodes] New CheckerboardDetection node [PR](https://github.com/alicevision/Meshroom/pull/1869)\n- [nodes] Split360Images: support for SfMData file input and output [PR](https://github.com/alicevision/Meshroom/pull/1939)\n- [sfmTransform] add auto mode [PR](https://github.com/alicevision/Meshroom/pull/1954)\n- [nodes] DepthMap: New option for multi-resolution similarity estimation and optimizations [PR](https://github.com/alicevision/Meshroom/pull/1984)\n- [nodes] Distortion calibration [PR](https://github.com/alicevision/Meshroom/pull/1986)\n- Add a template for the HDR fusion [PR](https://github.com/alicevision/Meshroom/pull/2032)\n- [pipelines] new CameraTracking pipeline [PR](https://github.com/alicevision/Meshroom/pull/2033)\n- [pipelines] new photogrammetry and camera tracking pipeline [PR](https://github.com/alicevision/Meshroom/pull/2041)\n\n### Features\n\n- StructureFromMotion: Add new inputs parameters [PR](https://github.com/alicevision/Meshroom/pull/1980)\n- [panorama] option to build contact sheet [PR](https://github.com/alicevision/Meshroom/pull/1945)\n- Stitching color space [PR](https://github.com/alicevision/Meshroom/pull/1937)\n- Add compression option for exr and jpg images [PR](https://github.com/alicevision/Meshroom/pull/1972)\n- Add rec709 color space options [PR](https://github.com/alicevision/Meshroom/pull/1978)\n- [nodes] rewrite RenderAnimatedCamera [PR](https://github.com/alicevision/Meshroom/pull/2030)\n- [core] Detect and handle UID conflicts when loading a graph [PR](https://github.com/alicevision/Meshroom/pull/2059)\n\n### Other Improvements\n\n- Start Development Version 2023.2.0 [PR](https://github.com/alicevision/Meshroom/pull/1953)\n- [core] Correctly parse status in version names when it exists [PR](https://github.com/alicevision/Meshroom/pull/1966)\n- [tests] TemplatesVersion: Add message when compatibility assertion is raised [PR](https://github.com/alicevision/Meshroom/pull/1964)\n- [ui] add new patterns to load images in viewer2D [PR](https://github.com/alicevision/Meshroom/pull/1975)\n- [nodes] KeyframeSelection: Add support for SfMData files as inputs and outputs [PR](https://github.com/alicevision/Meshroom/pull/1967)\n- [panorama] Panorama preview size [PR](https://github.com/alicevision/Meshroom/pull/1944)\n- add trackbuilder node [PR](https://github.com/alicevision/Meshroom/pull/1987)\n- [submitters] propagate REZ_PROD_PACKAGES_PATH environment variable [PR](https://github.com/alicevision/Meshroom/pull/1992)\n- HDR images naming [PR](https://github.com/alicevision/Meshroom/pull/1999)\n- [nodes] StructureFromMotion: new nbOutliersThreshold attribute [PR](https://github.com/alicevision/Meshroom/pull/2014)\n- [ui] Reflect changes made in QtAliceVision refactorize PR [PR](https://github.com/alicevision/Meshroom/pull/1924)\n- Exposure and format adjustment [PR](https://github.com/alicevision/Meshroom/pull/1983)\n- [nodes] SfMTransform: add alignGround option [PR](https://github.com/alicevision/Meshroom/pull/2020)\n- [nodes] ScenePreview: use base image name for naming output [PR](https://github.com/alicevision/Meshroom/pull/2035)\n- [nodes] KeyframeSelection: Set a dynamic size for the node [PR](https://github.com/alicevision/Meshroom/pull/2039)\n- KeyframeSelection: Add new parameter value to disable the export of keyframes [PR](https://github.com/alicevision/Meshroom/pull/2036)\n- Viewer2D: Dynamically update the list of viewable outputs [PR](https://github.com/alicevision/Meshroom/pull/2044)\n- [ui] ImageGallery: Display the name of the active `CameraInit` group [PR](https://github.com/alicevision/Meshroom/pull/2046)\n- [nodes] StereoPhotometry: Fix some labels and descriptions [PR](https://github.com/alicevision/Meshroom/pull/2034)\n- [ui] Display an icon on nodes that have viewable outputs [PR](https://github.com/alicevision/Meshroom/pull/2047)\n- [ui] Display an icon on nodes that have viewable 3D outputs [PR](https://github.com/alicevision/Meshroom/pull/2052)\n- [pipelines] cameraTracking: change StructureFromMotion parameters [PR](https://github.com/alicevision/Meshroom/pull/2055)\n- [nodes] Harmonize and improve nodes descriptions  [PR](https://github.com/alicevision/Meshroom/pull/2063)\n- [blender] preview: use cycles render engine [PR](https://github.com/alicevision/Meshroom/pull/2064)\n- [blender] preview: occlusions in wireframe shading [PR](https://github.com/alicevision/Meshroom/pull/2071)\n\n### Bugfixes, Build and Documentation\n\n- [doc] RELEASING: Add example command to generate the release note [PR](https://github.com/alicevision/Meshroom/pull/1990)\n- [core] Stats: Retrieve and set the GPU name if it is found [PR](https://github.com/alicevision/Meshroom/pull/1996)\n- [bin] Fix all the scripts that had errors [PR](https://github.com/alicevision/Meshroom/pull/1995)\n- [ui] ImageGallery: Reset viewpoints and intrinsics when removing all the images [PR](https://github.com/alicevision/Meshroom/pull/2031)\n- [nodes] CameraInit: access intrinsic properties safely [PR](https://github.com/alicevision/Meshroom/pull/2040)\n- [blender] preview: handle background image not found [PR](https://github.com/alicevision/Meshroom/pull/2045)\n- Bump requests from 2.22.0 to 2.31.0 [PR](https://github.com/alicevision/Meshroom/pull/2018)\n- [blender] preview: clear loaded images to avoid memory leak [PR](https://github.com/alicevision/Meshroom/pull/2053)\n- Fix submit through simpleFarm [PR](https://github.com/alicevision/Meshroom/pull/2054)\n- [ui] thumbnails: fallback if thumbnailDir could not be created [PR](https://github.com/alicevision/Meshroom/pull/2057)\n- [core] fix transitive reduction when submitting graph [PR](https://github.com/alicevision/Meshroom/pull/2058)\n- [doc] Update readme for custom pipelines and nodes [PR](https://github.com/alicevision/Meshroom/pull/2009)\n- [core] Include the node's type in the UID computation [PR](https://github.com/alicevision/Meshroom/pull/2038)\n- [doc] INSTALL: Add info about the sphere detection model [PR](https://github.com/alicevision/Meshroom/pull/2067)\n- [blender] preview: use Freestyle for line art shading [PR](https://github.com/alicevision/Meshroom/pull/2074)\n- Set `ALICEVISION_SPHERE_DETECTION_MODEL` variable during the initialisation [PR](https://github.com/alicevision/Meshroom/pull/2083)\n\n### Contributors\n\n[almarouk](https://github.com/almarouk), [cbentejac](https://github.com/cbentejac), [demoulinv](https://github.com/demoulinv), [earlywill](https://github.com/earlywill), [erikjwaxx](https://github.com/erikjwaxx), [fabiencastan](https://github.com/fabiencastan), [Garoli](https://github.com/Garoli), [gregoire-dl](https://github.com/gregoire-dl), [ICIbrahim](https://github.com/ICIbrahim), [jmelou](https://github.com/jmelou), [mugulmd](https://github.com/mugulmd), [serguei-k](https://github.com/serguei-k), [servantftechnicolor](https://github.com/servantftechnicolor), [simogasp](https://github.com/simogasp)\n\n\n## Meshroom 2023.1.0 (2023/03/22)\n\nBased on [AliceVision 3.0.0](https://github.com/alicevision/AliceVision/tree/v3.0.0).\n\n### Release Notes Summary\n\n- Major improvements of the depth map quality, performances and scalability. The full resolution can now be computed on most of the standard GPUs.\n- FeatureExtraction is now using DSP-SIFT by default for the 3D Reconstruction pipeline.\n- Capacity to create panoramas with very high resolutions using a limited amount of memory.\n- Enhanced interpretation of RAW images, including new support for Adobe Digital Camera Profile and Lens Camera Profiles databases (if installed on your workstation).\n- Improved color management with OCIO support and more options to export in various colorspaces including ACEScg.\n- New graph templates enabling users to create custom pipelines.\n- Expose a new experimental pipeline for Camera Tracking.\n- Improved GraphEditor with copy-paste and multi-selection.\n- Improved ImageGallery with thumbnails cache and search options.\n- 2D Viewer is now using floating-point images by default.\n- And a very large amount of UI improvements and bug fixes.\n\n### Main Features\n\n- [nodes] DepthMap: depth map improvements [PR](https://github.com/alicevision/Meshroom/pull/1818)\n- Integration of AprilTag library according to issue #1179 and AliceVision pull request #950 [PR](https://github.com/alicevision/Meshroom/pull/1180)\n- [nodes] add gps option to SfMTransform [PR](https://github.com/alicevision/Meshroom/pull/1477)\n- [ui] add support for selecting multiple nodes at once [PR](https://github.com/alicevision/Meshroom/pull/1227)\n- Image Gallery: Add a menu to set the StructureFromMotion initial pair from the gallery [PR](https://github.com/alicevision/Meshroom/pull/1936)\n- Texturing Color Space [PR](https://github.com/alicevision/Meshroom/pull/1933)\n- Add support for Lens Camera Profiles (LCP) [PR](https://github.com/alicevision/Meshroom/pull/1771)\n- RAW advanced processing [PR](https://github.com/alicevision/Meshroom/pull/1918)\n- Add new file watcher behaviours [PR](https://github.com/alicevision/Meshroom/pull/1812)\n- Add internal attributes in \"Notes\" tab [PR](https://github.com/alicevision/Meshroom/pull/1744)\n- New nodes for large memory use in panoramas [PR](https://github.com/alicevision/Meshroom/pull/1819)\n- [ui] Thumbnail cache [PR](https://github.com/alicevision/Meshroom/pull/1861)\n- [nodes] new SfMTriangulation node [PR](https://github.com/alicevision/Meshroom/pull/1842)\n- Color management for RAW images [PR](https://github.com/alicevision/Meshroom/pull/1718)\n- [ui] image gallery search bar [PR](https://github.com/alicevision/Meshroom/pull/1816)\n- [ui] Viewer 2D: enable the HDR viewer by default [PR](https://github.com/alicevision/Meshroom/pull/1793)\n- [ui] Improve the manipulator of the panorama viewer [PR](https://github.com/alicevision/Meshroom/pull/1707)\n- Color space management [PR](https://github.com/alicevision/Meshroom/pull/1792)\n- Show generated images in 2D viewer when double-clicking on node [PR](https://github.com/alicevision/Meshroom/pull/1776)\n- [ui] Elapsed time indicators in log [PR](https://github.com/alicevision/Meshroom/pull/1787)\n- [nodes] SfMTransform: add auto_from_cameras_x_axis [PR](https://github.com/alicevision/Meshroom/pull/1390)\n- Graph Editor: Support copy/paste of selected nodes and scene import [PR](https://github.com/alicevision/Meshroom/pull/1758)\n- [Feature Matching] Add an option to remove matches without enough motion [PR](https://github.com/alicevision/Meshroom/pull/1740)\n- Output in ACES or ACEScg color space [PR](https://github.com/alicevision/Meshroom/pull/1681)\n- Use project files to define pipelines [PR](https://github.com/alicevision/Meshroom/pull/1727)\n- [nodes] StructureFromMotion: Add option computeStructureColor [PR](https://github.com/alicevision/Meshroom/pull/1635)\n- [core] add env var to load nodes from multiple folders [PR](https://github.com/alicevision/Meshroom/pull/1616)\n- Depth map refactoring [PR](https://github.com/alicevision/Meshroom/pull/680)\n- Draft Reconstruction pipeline [PR](https://github.com/alicevision/Meshroom/pull/1489)\n- [ui] Add filters to image gallery [PR](https://github.com/alicevision/Meshroom/pull/1500)\n- [nodes] New node \"RenderAnimatedCamera\" using blender API [PR](https://github.com/alicevision/Meshroom/pull/1432)\n- New node to import known poses for various file formats [PR](https://github.com/alicevision/Meshroom/pull/1475)\n- New ImageMasking and MeshMasking nodes [PR](https://github.com/alicevision/Meshroom/pull/1483)\n- Create Split360Images Node [PR](https://github.com/alicevision/Meshroom/pull/1464)\n- New lens distortion calibration node [PR](https://github.com/alicevision/Meshroom/pull/1403)\n- New experimental camera tracking pipeline [PR](https://github.com/alicevision/Meshroom/pull/1379)\n- [multiview] New pipeline \"Photogrammetry and Camera Tracking\" [PR](https://github.com/alicevision/Meshroom/pull/1429)\n- [nodes] KeyframeSelection: Rework the node and add parameters for new selection methods [PR](https://github.com/alicevision/Meshroom/pull/1880)\n\n\n### Other Improvements\n\n- [nodes] ImageProcessing: Add and hide the fringing correction in the LCP [PR](https://github.com/alicevision/Meshroom/pull/1930)\n- Update highlight mode description in imageProcessing node [PR](https://github.com/alicevision/Meshroom/pull/1928)\n- [ui] Prompt a warning dialog when attempting to submit an unsaved project [PR](https://github.com/alicevision/Meshroom/pull/1927)\n- [panorama] force pyramid levels count in compositing [PR](https://github.com/alicevision/Meshroom/pull/1919)\n- [ui] Add a new advanced menu action to load templates like regular projects [PR](https://github.com/alicevision/Meshroom/pull/1920)\n- [panorama] New option to disable compositing tiling [PR](https://github.com/alicevision/Meshroom/pull/1916)\n- [sfmtransform] Transformation parameter availability [PR](https://github.com/alicevision/Meshroom/pull/1876)\n- Apply DCP metadata in imageProcessing [PR](https://github.com/alicevision/Meshroom/pull/1879)\n- [ui] FeaturesViewer: track endpoints [PR](https://github.com/alicevision/Meshroom/pull/1838)\n- LdrToHdrMerge node: Add a checkbox enabling the manual setting of the reference bracket for HDR merging [PR](https://github.com/alicevision/Meshroom/pull/1849)\n- [ui] Display nodes computed in another Meshroom instance as \"Computed Externally\" [PR](https://github.com/alicevision/Meshroom/pull/1862)\n- [ui] Use the location of the most recently imported images as the base folder for the \"Import Images\" dialog [PR](https://github.com/alicevision/Meshroom/pull/1864)\n- [ui] GraphEditor: use maxZoom to fit on nodes [PR](https://github.com/alicevision/Meshroom/pull/1865)\n- [ui] Viewer2D: support all Exif orientation tags [PR](https://github.com/alicevision/Meshroom/pull/1857)\n- Use DCP by default if the database is set and create errors on missing DCP files [PR](https://github.com/alicevision/Meshroom/pull/1863)\n- [ui] Load 3D Depth Map: minor improvements [PR](https://github.com/alicevision/Meshroom/pull/1852)\n- [ui] Checkbox to enable/disable 8-bit viewer [PR](https://github.com/alicevision/Meshroom/pull/1858)\n- Add Ripple submitter [PR](https://github.com/alicevision/Meshroom/pull/1844)\n- [ui] ImageGallery: Increase the GridView's cache capacity [PR](https://github.com/alicevision/Meshroom/pull/1855)\n- [ui] Reorganize the \"File\" menu [PR](https://github.com/alicevision/Meshroom/pull/1856)\n- [nodes] rename: remove \"utils\" from executables names [PR](https://github.com/alicevision/Meshroom/pull/1848)\n- [ui] Integrate QtOIIO into QtAliceVision [PR](https://github.com/alicevision/Meshroom/pull/1831)\n- Add nl means denoising open cv in image processing node [PR](https://github.com/alicevision/Meshroom/pull/1719)\n- [core] Add cgroups support to meshroom [PR](https://github.com/alicevision/Meshroom/pull/1836)\n- Remove support for Python 2 [PR](https://github.com/alicevision/Meshroom/pull/1837)\n- [submitters] Add an option to update the job title on submitters [PR](https://github.com/alicevision/Meshroom/pull/1824)\n- [ui] GraphEditor: create new pipelines with the node menu [PR](https://github.com/alicevision/Meshroom/pull/1833)\n- [bin] meshroom_batch: allow passing list of values to param overrides [PR](https://github.com/alicevision/Meshroom/pull/1811)\n- [ui] ImageGallery: update the Viewer2D correctly when the GridView's current item changes [PR](https://github.com/alicevision/Meshroom/pull/1823)\n- [ui] keyboard shortcut: press tab to open node menu [PR](https://github.com/alicevision/Meshroom/pull/1813)\n- Update bounding box display to use the correct geometric frame [PR](https://github.com/alicevision/Meshroom/pull/1805)\n- [ui] Paste nodes at the center of the Graph Editor when it does not contain the mouse [PR](https://github.com/alicevision/Meshroom/pull/1788)\n- Use most recent project as base folder for file dialogs [PR](https://github.com/alicevision/Meshroom/pull/1778)\n- [ui] Restrain the \"copy/paste nodes\" shortcuts to the GraphEditor [PR](https://github.com/alicevision/Meshroom/pull/1782)\n- [core] Set the \"template\" flag to \"false\" when saving a project as a regular file [PR](https://github.com/alicevision/Meshroom/pull/1777)\n- [ui] Display computation time for \"running\" or \"finished\" nodes [PR](https://github.com/alicevision/Meshroom/pull/1764)\n- Removed duplicated call to findnodes [PR](https://github.com/alicevision/Meshroom/pull/1767)\n- Add dedicated \"minimal\" mode for templates [PR](https://github.com/alicevision/Meshroom/pull/1754)\n- [ui] Reduce confusion when qml loading fails [PR](https://github.com/alicevision/Meshroom/pull/1728)\n- [ui] Update intrinsics table when switching between groups [PR](https://github.com/alicevision/Meshroom/pull/1755)\n- [bin] batch: allow to set params inside groups [PR](https://github.com/alicevision/Meshroom/pull/1665)\n- [camerainit] update parameters to use focal in mm [PR](https://github.com/alicevision/Meshroom/pull/1652)\n- [bin] newNodeType: update [PR](https://github.com/alicevision/Meshroom/pull/1630)\n- [minor] renderfarm submission with rez [PR](https://github.com/alicevision/Meshroom/pull/1629)\n- [ui] widgets visibility options [PR](https://github.com/alicevision/Meshroom/pull/1545)\n- [bin] Avoid multi-threading in non-interactive computation [PR](https://github.com/alicevision/Meshroom/pull/1553)\n- [nodes] Mesh*: use file extension to choose the file format [PR](https://github.com/alicevision/Meshroom/pull/1524)\n- Upgrade Texturing node and add multiples mesh file types [PR](https://github.com/alicevision/Meshroom/pull/1508)\n- Optical center relative to the image center [PR](https://github.com/alicevision/Meshroom/pull/1509)\n- [core] Improve project files upgrade [PR](https://github.com/alicevision/Meshroom/pull/1503)\n- [ui] Add a clear images button  [PR](https://github.com/alicevision/Meshroom/pull/1467)\n- [ui] highlight the edge that will be deleted [PR](https://github.com/alicevision/Meshroom/pull/1434)\n- Update 2d viewer for new Track drawing mode of QtAliceVision  [PR](https://github.com/alicevision/Meshroom/pull/1435)\n- Add cli script to start Meshroom on Windows [PR](https://github.com/alicevision/Meshroom/pull/1169)\n- Allow replacing edges [PR](https://github.com/alicevision/Meshroom/pull/1355)\n- No cmd line range arguments if we have only a single chunk [PR](https://github.com/alicevision/Meshroom/pull/1426)\n- [nodes] ExportAnimatedCameras: new sfmDataFilter parameter [PR](https://github.com/alicevision/Meshroom/pull/1428)\n- Node highlight radius [PR](https://github.com/alicevision/Meshroom/pull/1357)\n\n### Bug Fixes, Build and Documentation\n\n- [ui] Fix conditions on which the prompt asking the user to save a project before submitting it to the render farm relies [PR](https://github.com/alicevision/Meshroom/pull/1942)\n- [ui] ImageGallery: Allow image drop if the active group is not computing [PR](https://github.com/alicevision/Meshroom/pull/1941)\n- [ui] Viewer2D: fix displayed metadata [PR](https://github.com/alicevision/Meshroom/pull/1915)\n- [setup] add all scripts in bin/ as executables [PR](https://github.com/alicevision/Meshroom/pull/1419)\n- Add a unit test to check the node versions of templates [PR](https://github.com/alicevision/Meshroom/pull/1799)\n- [nodes] Split360Images: update attributes to software version 2.0 [PR](https://github.com/alicevision/Meshroom/pull/1935)\n- [ci] upgrade github actions rules [PR](https://github.com/alicevision/Meshroom/pull/1834)\n- Update INSTALL.md [PR](https://github.com/alicevision/Meshroom/pull/1803)\n- [docs] Python documentation generation using Sphinx [PR](https://github.com/alicevision/Meshroom/pull/1794)\n- Documentation update : how to use Meshroom without building AliceVision [PR](https://github.com/alicevision/Meshroom/pull/1487)\n- [pipelines] Panorama: Fix inputs of the \"Publish\" nodes [PR](https://github.com/alicevision/Meshroom/pull/1922)\n- [nodes] ExportAnimatedCameras: fix output params labels [PR](https://github.com/alicevision/Meshroom/pull/1911)\n- [nodes] PanoramaWarping: remove obsolete image output attributes [PR](https://github.com/alicevision/Meshroom/pull/1914)\n- Fix the documentation related to Panorama nodes [PR](https://github.com/alicevision/Meshroom/pull/1917)\n- Fix missing Publish nodes in templates [PR](https://github.com/alicevision/Meshroom/pull/1903)\n- [ui] Intrinsics: Fix warnings and exceptions [PR](https://github.com/alicevision/Meshroom/pull/1898)\n- [ui] fix thumbnail cache bugs [PR](https://github.com/alicevision/Meshroom/pull/1893)\n- [ImageGallery] Match the filter selection with the gallery's display [PR](https://github.com/alicevision/Meshroom/pull/1899)\n- [ui] fix \"Sync Camera with Image Selection\" [PR](https://github.com/alicevision/Meshroom/pull/1888)\n- Fix exceptions raised when accessing attributes that either do not exist or are not associated to a graph [PR](https://github.com/alicevision/Meshroom/pull/1889)\n- fix(sec): upgrade psutil to 5.6.7 [PR](https://github.com/alicevision/Meshroom/pull/1843)\n- [ui] Fix all \"TypeError\" QML warnings [PR](https://github.com/alicevision/Meshroom/pull/1839)\n- [ui] Viewer2D: fix minor issues [PR](https://github.com/alicevision/Meshroom/pull/1829)\n- Fix crash when importing images with non-ascii characters in their filepath [PR](https://github.com/alicevision/Meshroom/pull/1809)\n- Fix and prevent mismatches between an attribute's type and its default value's type [PR](https://github.com/alicevision/Meshroom/pull/1784)\n- Fix various typos [PR](https://github.com/alicevision/Meshroom/pull/1768)\n- [ui] ImageGallery: fix some minor issues [PR](https://github.com/alicevision/Meshroom/pull/1766)\n- [core] fix logging of nodes loading [PR](https://github.com/alicevision/Meshroom/pull/1748)\n- Fix node duplication/removal behaviour [PR](https://github.com/alicevision/Meshroom/pull/1738)\n- [ui] Fix offset between the mouse's position and the tip of the edge when connecting two nodes [PR](https://github.com/alicevision/Meshroom/pull/1732)\n- Fix compatibility with Python 3 [PR](https://github.com/alicevision/Meshroom/pull/1734)\n- Fix stats [PR](https://github.com/alicevision/Meshroom/pull/1704)\n- [ui] ImageGallery: fix missing function changeCurrentIndex [PR](https://github.com/alicevision/Meshroom/pull/1679)\n- [UI] StatViewer: fix displayed unit [PR](https://github.com/alicevision/Meshroom/pull/1547)\n- [ui] fix uvCenterOffset [PR](https://github.com/alicevision/Meshroom/pull/1551)\n- Fix meshroom_batch [PR](https://github.com/alicevision/Meshroom/pull/1521)\n- Fix incompatibility with recent cx_Freeze [PR](https://github.com/alicevision/Meshroom/pull/1480)\n- [bin] meshroom_batch: fix typo in pipeline names [PR](https://github.com/alicevision/Meshroom/pull/1377)\n- Removing `io_counters` from the ProcStatatistics [PR](https://github.com/alicevision/Meshroom/pull/1374)\n- Fix NameError [PR](https://github.com/alicevision/Meshroom/pull/1312)\n- [ui] Image Gallery: Fix the display of the intrinsics table with temporary CameraInit nodes [PR](https://github.com/alicevision/Meshroom/pull/1934)\n- [ui] Correctly update the Viewer 2D when there are temporary CameraInit nodes [PR](https://github.com/alicevision/Meshroom/pull/1931)\n- [ui] Clear Images: Request a graph update after resetting the viewpoints and intrinsics [PR](https://github.com/alicevision/Meshroom/pull/1929)\n- [ui] Improve \"Clear Images\" action's behaviour and performance [PR](https://github.com/alicevision/Meshroom/pull/1897)\n- [Viewer] Load and unload the SfMStats components explicitly every time they are shown and hidden  [PR](https://github.com/alicevision/Meshroom/pull/1912)\n- [ui] Drag&Drop: Use a pool of threads for asynchronous intrinsics computations [PR](https://github.com/alicevision/Meshroom/pull/1896)\n- [nodes] CameraInit: upgrade version following the parameters changes [PR](https://github.com/alicevision/Meshroom/pull/1874)\n- [ui] app: temporary workaround for qInstallMessageHandler [PR](https://github.com/alicevision/Meshroom/pull/1873)\n- [ui] ImageGallery: fix the DB path in the \"Edit Sensor Database\" dialog [PR](https://github.com/alicevision/Meshroom/pull/1860)\n- [ui] Correctly determine if a graph is being computed locally and update nodes' statuses accordingly [PR](https://github.com/alicevision/Meshroom/pull/1832)\n- [nodes] CameraInit: all intrinsics parameters should invalidate [PR](https://github.com/alicevision/Meshroom/pull/1747)\n- [ci] add bug to the list of tag to skip the stale check [PR](https://github.com/alicevision/Meshroom/pull/1745)\n- Fix various typos in the source code [PR](https://github.com/alicevision/Meshroom/pull/1606)\n- Update ion startup [PR](https://github.com/alicevision/Meshroom/pull/1815)\n- New script to launch meshroom under ion environment [PR](https://github.com/alicevision/Meshroom/pull/1783)\n- [doc] fix the bibtex [PR](https://github.com/alicevision/Meshroom/pull/1537)\n- [doc] readme: add citation [PR](https://github.com/alicevision/Meshroom/pull/1520)\n\n### Contributors\n\nThanks to [Fabien Servant](https://github.com/servantftechnicolor), [Gregoire De Lillo](https://github.com/gregoire-dl), [Vincent Demoulin](https://github.com/demoulinv), [Thomas Zorroche](https://github.com/Thomas-Zorroche), [Povilas Kanapickas](https://github.com/p12tic), [Simone Gasparini](https://github.com/simogasp), [Candice Bentejac](https://github.com/cbentejac), [Loic Vital](https://github.com/mugulmd), [Charles Johnson](https://github.com/ChemicalXandco), [Jean Melou](https://github.com/jmelou), [Matthieu Hog](https://github.com/mh0g), [Simon Schuette](https://github.com/natowi), [Ludwig Chieng](https://github.com/ludchieng), [Vincent Scavinner](https://github.com/vscav), [Nils Landrodie](https://github.com/N0Ls), [Stella Tan](https://github.com/tanstella) for the major contributions.\n\nOther release contributors:\n[asoftbird](https://github.com/asoftbird), [DanielDelaporus](https://github.com/DanielDelaporus), [DataBeaver](https://github.com/DataBeaver), [elektrokokke](https://github.com/elektrokokke), [fabiencastan](https://github.com/fabiencastan), [Garoli](https://github.com/Garoli), [ghost](https://github.com/ghost), [hammady](https://github.com/hammady), [luzpaz](https://github.com/luzpaz), [MakersF](https://github.com/MakersF), [pen4](https://github.com/pen4), [remmel](https://github.com/remmel), [wolfgangp](https://github.com/wolfgangp)\n\n\n\n## Release 2021.1.0 (2021/02/26)\n\nBased on [AliceVision 2.4.0](https://github.com/alicevision/AliceVision/tree/v2.4.0).\n\n### Release Notes Summary\n\n - [panorama] PanoramaCompositing: new algorithm with tiles to deal with large panoramas [PR](https://github.com/alicevision/meshroom/pull/1173)\n - [feature] Improve robustness of sift features extraction on challenging images: update default values, add new filtering and add dsp-sift variation [PR](https://github.com/alicevision/meshroom/pull/1164)\n - [ui] Improve Graph Editor UX with better visualization of nodes connections, the ability to accumulate nodes to compute locally or the ability to compute multiple branches in parallel on renderfarm with a new locking system per node, etc. [PR](https://github.com/alicevision/meshroom/pull/612)\n - [nodes] Meshing: improve mesh quality with a new post-processing. Cells empty/full status are filtered by solid angle ratio to favor smoothness. [PR](https://github.com/alicevision/meshroom/pull/1274)\n - [nodes] MeshFiltering: smoothing & filtering on subset of the geometry [PR](https://github.com/alicevision/meshroom/pull/1272)\n - [ui] Viewer: fix gain/gamma behavior and use non-linear sliders [PR](https://github.com/alicevision/meshroom/pull/1092)\n\n### Other Improvements and Bug Fixes\n\n - [core] taskManager: downgrade status per chunk [PR](https://github.com/alicevision/meshroom/pull/1210)\n - [core] Improve graph dependencies: dependencies to an input parameter is not a real dependency [PR](https://github.com/alicevision/meshroom/pull/1182)\n - [nodes] Meshing: Add `addMaskHelperPoints` option [PR](https://github.com/alicevision/meshroom/pull/1273)\n - [nodes] Meshing: More control on graph cut post processing [PR](https://github.com/alicevision/meshroom/pull/1284)\n - [nodes] Meshing: new cells filtering by solid angle ratio [PR](https://github.com/alicevision/meshroom/pull/1274)\n - [nodes] Meshing: add seed and voteFilteringForWeaklySupportedSurfaces [PR](https://github.com/alicevision/meshroom/pull/1268)\n - [nodes] Add some mesh utilities nodes [PR](https://github.com/alicevision/meshroom/pull/1271)\n - [nodes] SfmTransform: new from_center_camera [PR](https://github.com/alicevision/meshroom/pull/1281)\n - [nodes] Panorama: new options to init with known poses [PR](https://github.com/alicevision/meshroom/pull/1230)\n - [nodes] FeatureMatching: add cross verification [PR](https://github.com/alicevision/meshroom/pull/1276)\n - [nodes] ExportAnimatedCamera: New option to export undistort maps in EXR format [PR](https://github.com/alicevision/meshroom/pull/1229)\n - [nodes] new wip node `LightingEstimation` to estimate spherical harmonics from normal map and albedo [PR](https://github.com/alicevision/meshroom/pull/390)\n - [nodes] CameraInit: add a boolean for white balance use [PR](https://github.com/alicevision/meshroom/pull/1162)\n - [ui] fix error on live reconstruction [PR](https://github.com/alicevision/meshroom/pull/1145)\n - [ui] init saveAs folder [PR](https://github.com/alicevision/meshroom/pull/1099)\n - [ui] add link to online documentation in 'Help' menu [PR](https://github.com/alicevision/meshroom/pull/1279)\n - [ui] New node menu categories [PR](https://github.com/alicevision/meshroom/pull/1278)\n\n\n## Release 2020.1.1 (2020/10/14)\n\nBased on [AliceVision 2.3.1](https://github.com/alicevision/AliceVision/tree/v2.3.1).\n\n - [core] Fix crashes on process statistics (windows-only) [PR](https://github.com/alicevision/meshroom/pull/1096)\n\n\n## Release 2020.1.0 (2020/10/09)\n\nBased on [AliceVision 2.3.0](https://github.com/alicevision/AliceVision/tree/v2.3.0).\n\n### Release Notes Summary\n\n - [nodes] New Panorama Stitching nodes with support for fisheye lenses [PR](https://github.com/alicevision/meshroom/pull/639) [PR](https://github.com/alicevision/meshroom/pull/808)\n - [nodes] HDR: Largely improved HDR calibration, including new LdrToHdrSampling for optimal sample selection [PR](https://github.com/alicevision/meshroom/pull/808) [PR](https://github.com/alicevision/meshroom/pull/1016) [PR](https://github.com/alicevision/meshroom/pull/990)\n - [ui] Viewer3D: Input bounding box (Meshing) & manual transformation (SfMTransform) thanks to a new 3D Gizmo [PR](https://github.com/alicevision/meshroom/pull/978)\n - [ui] Sync 3D camera with image selection [PR](https://github.com/alicevision/meshroom/pull/633) \n - [ui] New HDR (floating point) Image Viewer [PR](https://github.com/alicevision/meshroom/pull/795)\n - [ui] Ability to load depth maps into 2D and 3D Viewers [PR](https://github.com/alicevision/meshroom/pull/769) [PR](https://github.com/alicevision/meshroom/pull/657) \n - [ui] New features overlay in Viewer2D allows to display tracks and landmarks [PR](https://github.com/alicevision/meshroom/pull/873) [PR](https://github.com/alicevision/meshroom/pull/1001)\n - [ui] Add SfM statistics [PR](https://github.com/alicevision/meshroom/pull/873)\n - [ui] Visual interface for node resources usage [PR](https://github.com/alicevision/meshroom/pull/564)\n - [nodes] Coordinate system alignment to specific markers or between scenes [PR](https://github.com/alicevision/meshroom/pull/652)\n - [nodes] New Sketchfab upload node [PR](https://github.com/alicevision/meshroom/pull/712)\n - [ui] Dynamic Parameters: add a new 'enabled' property to node's attributes [PR](https://github.com/alicevision/meshroom/pull/1007) [PR](https://github.com/alicevision/meshroom/pull/1027)\n - [ui] Viewer: add Camera Response Function display [PR](https://github.com/alicevision/meshroom/pull/1020) [PR](https://github.com/alicevision/meshroom/pull/1041)\n - [ui] UI improvements in the Viewer2D and ImageGallery [PR](https://github.com/alicevision/meshroom/pull/823)\n - [bin] Improve Meshroom command line [PR](https://github.com/alicevision/meshroom/pull/759) [PR](https://github.com/alicevision/meshroom/pull/632)\n - [nodes] New ImageProcessing node [PR](https://github.com/alicevision/meshroom/pull/839) [PR](https://github.com/alicevision/meshroom/pull/970) [PR](https://github.com/alicevision/meshroom/pull/941)\n - [nodes] `FeatureMatching` Add `fundamental_with_distortion` option [PR](https://github.com/alicevision/meshroom/pull/931)\n - [multiview] Declare more recognized image file extensions [PR](https://github.com/alicevision/meshroom/pull/965)\n - [multiview] More generic metadata support [PR](https://github.com/alicevision/meshroom/pull/957)\n\n### Other Improvements and Bug Fixes\n\n - [nodes] CameraInit: New viewId generation and selection of allowed intrinsics [PR](https://github.com/alicevision/meshroom/pull/973)\n - [core] Avoid error during project load on border cases [PR](https://github.com/alicevision/meshroom/pull/991)\n - [core] Compatibility : Improve list of groups update [PR](https://github.com/alicevision/meshroom/pull/791)\n - [core] Invalidation hooks [PR](https://github.com/alicevision/meshroom/pull/732)\n - [core] Log manager for Python based nodes [PR](https://github.com/alicevision/meshroom/pull/631)\n - [core] new Node Update Hooks mechanism [PR](https://github.com/alicevision/meshroom/pull/733)\n - [core] Option to make chunks optional [PR](https://github.com/alicevision/meshroom/pull/778)\n - [nodes] Add methods in ImageMatching and features in StructureFromMotion and FeatureMatching [PR](https://github.com/alicevision/meshroom/pull/768)\n - [nodes] FeatureExtraction: add maxThreads argument [PR](https://github.com/alicevision/meshroom/pull/647) \n - [nodes] Fix python nodes being blocked by log [PR](https://github.com/alicevision/meshroom/pull/783)\n - [nodes] ImageProcessing: add new option to fix non finite pixels [PR](https://github.com/alicevision/meshroom/pull/1057)\n - [nodes] Meshing: simplify input depth map folders [PR](https://github.com/alicevision/meshroom/pull/951)\n - [nodes] PanoramaCompositing: add a new graphcut option to improve seams [PR](https://github.com/alicevision/meshroom/pull/1026)\n - [nodes] PanoramaCompositing: option to select the percentage of upscaled pixels [PR](https://github.com/alicevision/meshroom/pull/1049)\n - [nodes] PanoramaInit: add debug circle detection option [PR](https://github.com/alicevision/meshroom/pull/1069)\n - [nodes] PanoramaInit: New parameter to set an extra image rotation to each camera declared the input xml [PR](https://github.com/alicevision/meshroom/pull/1046)\n - [nodes] SfmTransfer: New option to transfer intrinsics parameters [PR](https://github.com/alicevision/meshroom/pull/1053)\n - [nodes] StructureFromMotion: Add features’s scale as an option [PR](https://github.com/alicevision/meshroom/pull/822) [PR](https://github.com/alicevision/meshroom/pull/817)\n - [nodes] Texturing: add options for retopoMesh & reorganise options [PR](https://github.com/alicevision/meshroom/pull/571)\n - [nodes] Texturing: put downscale to 2 by default [PR](https://github.com/alicevision/meshroom/pull/1048)\n - [sfm] Add option to include 'unknown' feature types in ConvertSfMFormat, needed to be used on dense point cloud from the Meshing node [PR](https://github.com/alicevision/meshroom/pull/584)\n - [ui] Automatically update layout when needed [PR](https://github.com/alicevision/meshroom/pull/989)\n - [ui] Avoid crash in 3D with large panoramas [PR](https://github.com/alicevision/meshroom/pull/1061)\n - [ui] Fix graph axes naming for ram statistics [PR](https://github.com/alicevision/meshroom/pull/1033)\n - [ui] NodeEditor: minor improvements with single tab group and status table [PR](https://github.com/alicevision/meshroom/pull/637)\n - [ui] Viewer3D: Display equirectangular images as environment maps [PR](https://github.com/alicevision/meshroom/pull/731) \n - [windows] Fix open recent broken on windows and remove unnecessary warnings [PR](https://github.com/alicevision/meshroom/pull/940)\n\n### Build, CI, Documentation\n\n - [build] Fix cxFreeze version for Python 2.7 compatibility [PR](https://github.com/alicevision/meshroom/pull/634)\n - [ci] Add github Actions [PR](https://github.com/alicevision/meshroom/pull/1051)\n - [ci] AppVeyor: Update build environment and save artifacts [PR](https://github.com/alicevision/meshroom/pull/875)\n - [ci] Travis: Update environment, remove Python 2.7 & add 3.8 [PR](https://github.com/alicevision/meshroom/pull/874)\n - [docker] Clean Dockerfiles [PR](https://github.com/alicevision/meshroom/pull/1054)\n - [docker] Move to PySide2 / Qt 5.14.1\n - [docker] Fix some packaging issues of the release 2019.2.0 [PR](https://github.com/alicevision/meshroom/pull/627)\n - [github] Add exemptLabels [PR](https://github.com/alicevision/meshroom/pull/801)\n - [github] Add issue templates [PR](https://github.com/alicevision/meshroom/pull/579)\n - [github] Add template for questions / help only  [PR](https://github.com/alicevision/meshroom/pull/629)\n - [github] Added automatic stale detection and closing for issues [PR](https://github.com/alicevision/meshroom/pull/598)\n - [python] Import ABC from collections.abc [PR](https://github.com/alicevision/meshroom/pull/983)\n\nFor more details see all PR merged: https://github.com/alicevision/meshroom/milestone/10\n\nSee [AliceVision 2.3.0 Release Notes](https://github.com/alicevision/AliceVision/blob/v2.3.0/CHANGES.md) for more details about algorithmic changes.\n\n\n## Release 2019.2.0 (2019/08/08)\n\nBased on [AliceVision 2.2.0](https://github.com/alicevision/AliceVision/tree/v2.2.0).\n\nRelease Notes Summary:\n\n - Visualisation: New visualization module of the features extraction. [PR](https://github.com/alicevision/meshroom/pull/539), [New QtAliceVision](https://github.com/alicevision/QtAliceVision)\n - Support for RAW image files.\n - Texturing: Largely improve the Texturing quality.\n - Texturing: Speed improvements.\n - Texturing: Add support for UDIM.\n - Meshing: Export the dense point cloud in Alembic.\n - Meshing: New option to export the full raw dense point cloud (with all 3D points candidates before cut and filtering).\n - Meshing: Adds an option to export color data per vertex and MeshFiltering correctly preserves colors.\n\nFull Release Notes:\n\n - Move to PySide2 / Qt 5.13\n - SfMDataIO: Change root nodes (XForms instead of untyped objects) of Alembic SfMData for better interoperability with other 3D graphics applications (in particular Blender and Houdini).\n - Improve performance of log display and node status update. [PR](https://github.com/alicevision/meshroom/pull/466) [PR](https://github.com/alicevision/meshroom/pull/548)\n - Viewer3D: Add support for vertex-colored meshes. [PR](https://github.com/alicevision/meshroom/pull/550)\n - New pipeline input for meshroom_photogrammetry command line and minor fixes to the input arguments. [PR](https://github.com/alicevision/meshroom/pull/567) [PR](https://github.com/alicevision/meshroom/pull/577)\n - New arguments to meshroom. [PR](https://github.com/alicevision/meshroom/pull/413)\n - HDR: New HDR module for the fusion of multiple LDR images.\n - PrepareDenseScene: Add experimental option to correct Exposure Values (EV) of input images to uniformize dataset exposures.\n - FeatureExtraction: Include CCTag in the release binaries both on Linux and Windows.\n - ConvertSfMFormat: Enable to use simple regular expressions in the image white list of the ConvertSfMFormat. This enables to filter out cameras based on their filename.\n\nFor more details see all PR merged: https://github.com/alicevision/meshroom/milestone/9\nSee [AliceVision 2.2.0 Release Notes](https://github.com/alicevision/AliceVision/blob/v2.2.0/CHANGES.md)\nfor more details about algorithmic changes.\n\n\n## Release 2019.1.0 (2019/02/27)\n\nBased on [AliceVision 2.1.0](https://github.com/alicevision/AliceVision/tree/v2.1.0).\n\nRelease Notes Summary:\n - 3D Viewer: Load and compare multiple assets with cache mechanism and improved navigation\n - Display camera intrinsic information extracted from metadata analysis\n - Easier access to a more complete sensor database with a more reliable camera model matching algorithm.\n - Attribute Editor: Hide advanced/experimental parameters by default to improve readability and simplify access to the most useful, high-level settings.  Advanced users can still enable them to have full access to internal thresholds.\n - Graph Editor: Improved set of contextual tools with `duplicate`/`remove`/`delete data` actions with `From Here` option.\n - Nodes: Homogenization of inputs / outputs parameters\n - Meshing: Better, faster and configurable estimation of the space to reconstruct based on the sparse point cloud (new option `estimateSpaceFromSfM`). Favors high-density areas and helps removing badly defined ones.\n - Draft Meshing (no CUDA required): the result of the sparse reconstruction can now be directly meshed to get a 3D model preview without computing the depth maps.\n - MeshFiltering: Now keeps all reconstructed parts by default.\n - StructureFromMotion: Add support for rig of cameras\n - Support for reconstruction with projected light patterns and texturing with another set of images\n\nFull Release Notes:\n - Viewer3D: New Trackball camera manipulator for improved navigation in the scene\n - Viewer3D: New library system to load multiple 3D objects of the same type simultaneously, simplifying results comparisons\n - Viewer3D: Add media loading overlay with BusyIndicator\n - Viewer3D: Points and cameras size are now configurable via dedicated sliders.\n - CameraInit: Add option to lock specific cameras intrinsics (if you have high-quality internal calibration information)\n - StructureFromMotion: Triangulate points if the input scene contains valid camera poses and intrinsics without landmarks\n - PrepareDenseScene: New `imagesFolders` option to override input images. This enables to use images with light patterns projected for SfM and MVS parts and do the Texturing with another set of images.\n - NodeLog: Cross-platform monospace display\n - Remove `CameraConnection` and `ExportUndistortedImages` nodes\n - Multi-machine parallelization of `PrepareDenseScene`\n - Meshing: Add option `estimateSpaceFromSfM` and observation angles check to better estimate the bounding box of the reconstruction and avoid useless reconstruction of the environment\n - Console: Filter non silenced, inoffensive warnings from QML + log Qt messages via Python logging\n - Command line (meshroom_photogrammetry): Add --pipeline parameter to use a pre-configured pipeline graph\n - Command line (meshroom_photogrammetry): Add possibility to provide pre-calibrated intrinsics.\n - Command line (meshroom_compute): Provide `meshroom_compute` executable in packaged release.\n - Image Gallery: Display Camera Intrinsics initialization status with detailed explanation, edit Sensor Database dialog, advanced menu to display view UIDs\n - StructureFromMotion: Expose advanced estimator parameters\n - FeatureMatching: Expose advanced estimator parameters\n - DepthMap: New option `exportIntermediateResults` disabled by default, so less data storage by default than before.\n - DepthMap: Use multiple GPUs by default if available and add `nbGPUs` param to limit it\n - Meshing: Add option `addLandmarksToTheDensePointCloud`\n - SfMTransform: New option to align on one specific camera\n - Graph Editor: Consistent read-only mode when computing, that can be unlocked in advanced settings\n - Graph Editor: Improved Node Menu: \"duplicate\"/\"remove\"/\"delete data\" with \"From Here\" accessible on the same entry via an additional button\n - Graph Editor: Confirmation popup before deleting node data\n - Graph Editor: Add \"Clear Pending Status\" action at Graph level\n - Graph Editor: Solo media in 3D viewer with Ctrl + double click on node/attribute\n - Param Editor: Fix several bugs related to attributes edition\n - Scene Compatibility: Improves detection of deeper compatibility issues, by adding an additional recursive (taking List/GroupAttributes children into account) exact description matching test when de-serializing a Node.\n\nSee [AliceVision 2.1.0 Release Notes](https://github.com/alicevision/AliceVision/blob/v2.1.0/CHANGES.md)\nfor more details about algorithmic changes.\n\n\n## Release 2018.1.0 (2018.08.09)\n\n First release of Meshroom.  \n Based on [AliceVision 2.0.0](https://github.com/alicevision/AliceVision/tree/v2.0.0).\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.912109375,
          "content": "cmake_minimum_required(VERSION 3.12)\nproject(meshroom LANGUAGES C CXX)\n\nif(NOT CMAKE_BUILD_TYPE)\n  set(CMAKE_BUILD_TYPE Release CACHE STRING \"Build type for Meshroom plugins\" FORCE)\nendif()\n\nset(ALICEVISION_ROOT \"$ENV{ALICEVISION_ROOT}\" CACHE STRING \"AliceVision root dir\")\nset(QT_DIR \"$ENV{QT_DIR}\" CACHE STRING \"Qt root directory\")\n\noption(MR_BUILD_QTALICEVISION \"Enable building of QtAliceVision plugin\" ON)\n\nif(CMAKE_BUILD_TYPE MATCHES Release)\n    message(STATUS \"Force CMAKE_INSTALL_DO_STRIP in Release\")\n    set(CMAKE_INSTALL_DO_STRIP ON)\nelse()\n    set(CMAKE_INSTALL_DO_STRIP OFF)\nendif()\n\nset(CMAKE_CORE_BUILD_FLAGS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_INSTALL_DO_STRIP=${CMAKE_INSTALL_DO_STRIP})\n\nset(ALEMBIC_CMAKE_FLAGS\n  -DAlembic_DIR:PATH=${ALICEVISION_ROOT}/lib/cmake/Alembic\n  -DImath_DIR=${ALICEVISION_ROOT}/lib/cmake/Imath\n)\n\n\ninclude(ExternalProject)\n# ==============================================================================\n# GNUInstallDirs CMake module\n# - Define GNU standard installation directories\n# - Provides install directory variables as defined by the GNU Coding Standards.\n# ==============================================================================\ninclude(GNUInstallDirs)\n\n# message(STATUS \"QT_CMAKE_FLAGS: ${QT_CMAKE_FLAGS}\")\n\nif(MR_BUILD_QTALICEVISION)\nset(QTALICEVISION_TARGET QtAliceVision)\nExternalProject_Add(${QTALICEVISION_TARGET}\n      GIT_REPOSITORY https://github.com/alicevision/QtAliceVision\n      GIT_TAG develop\n      PREFIX ${BUILD_DIR}\n      BUILD_IN_SOURCE 0\n      BUILD_ALWAYS 0\n      SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/QtAliceVision\n      BINARY_DIR ${BUILD_DIR}/QtAliceVision_build\n      INSTALL_DIR ${CMAKE_INSTALL_PREFIX}\n      CONFIGURE_COMMAND ${CMAKE_COMMAND} ${CMAKE_CORE_BUILD_FLAGS} ${ALEMBIC_CMAKE_FLAGS} -DCMAKE_PREFIX_PATH:PATH=${QT_DIR}$<SEMICOLON>${ALICEVISION_ROOT} -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR> <SOURCE_DIR>\n      )\nendif()\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1357421875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team privately at alicevision-team@googlegroups.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct/\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.5478515625,
          "content": "Contributing to Meshroom\n===========================\n\nMeshroom relies on a friendly and community-driven effort to create an open source photogrammetry solution.\nIn order to foster a friendly atmosphere where technical collaboration can flourish,\nwe recommend you to read the [code of conduct](CODE_OF_CONDUCT.md).\n\n\nContributing Workflow\n---------------------\n\nThe contributing workflow relies on [Github Pull Requests](https://help.github.com/articles/using-pull-requests/).\n\n1. If it is an important change, we recommend you to discuss it on the mailing-list\nbefore starting implementation. This ensure that the development is aligned with other\ndeveloppements already started and will be efficiently integrated.\n\n2. Create the corresponding issues.\n\n3. Create a branch and [draft a pull request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) \"My new feature\" so everyone can follow the development.\nExplain the implementation in the PR description with links to issues.\n\n4. Implement the new feature(s). Add unit test if needed.\nOne feature per PR is ideal for review, but linked features can be part of the same PR.\n\n5. When it is ready for review, [mark the pull request as ready for review](https://help.github.com/en/articles/changing-the-stage-of-a-pull-request).\n\n6. The reviewers will look over the code and ask for changes, explain problems they found,\ncongratulate the author, etc. using the github comments.\n\n7. After approval, one of the developers with commit approval to the official main repository\nwill merge your fixes into the \"develop\" branch.\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 1.1474609375,
          "content": "## Meshroom License\n\nMeshroom is licensed under the [MPL2 license](LICENSE-MPL2.md).\n\n## Third parties licenses\n\n * __AliceVision__  \n   [https://github.com/alicevision/AliceVision](https://github.com/alicevision/AliceVision)  \n   Copyright (c) 2018 AliceVision contributors.  \n   Distributed under the [MPL2 license](https://opensource.org/licenses/MPL-2.0).\n   See [COPYING](https://github.com/alicevision/AliceVision/blob/develop/COPYING.md) for full third parties licenses.\n\n * __Python__  \n   [https://www.python.org](https://www.python.org)  \n   Copyright (c) 2001-2018 Python Software Foundation.  \n   Distributed under the [PSFL V2 license](https://www.python.org/download/releases/2.7/license/).\n\n * __Qt/PySide6__\n   [https://www.qt.io](https://www.qt.io)  \n   Copyright (C) 2018 The Qt Company Ltd and other contributors.  \n   Distributed under the [LGPL V3 license](https://opensource.org/licenses/LGPL-3.0).\n\n * __QtAliceVision__  \n   [https://github.com/alicevision/QtAliceVision](https://github.com/alicevision/QtAliceVision)  \n   Copyright (c) 2018 AliceVision contributors.  \n   Distributed under the [MPL2 license](https://opensource.org/licenses/MPL-2.0).\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 3.1767578125,
          "content": "# Development\nThis guide will help you setup a development environment to launch and contribute to Meshroom.\n\n## Requirements\n### AliceVision\nMeshroom relies on the [AliceVision](https://github.com/alicevision/AliceVision) framework. AliceVision's binaries must\nbe in the path while running Meshroom.\nTo build AliceVision, follow this [guide](https://github.com/alicevision/AliceVision/blob/develop/INSTALL.md).\n\nMeshroom also relies on specific files provided with AliceVision.\n* sensor database: a text database of sensor width per camera model.\nProvided in AliceVision source tree: {ALICEVISION_REPOSITORY}/src/aliceVision/sensorDB/cameraSensors.db\n* voctree (optional): for larger datasets (>200 images), greatly improves image matching performances.\nIt can be downloaded [here](https://gitlab.com/alicevision/trainedVocabularyTreeData/raw/master/vlfeat_K80L3.SIFT.tree).\n* sphere detection model (optional): for the automated sphere detection in stereo photometry.\nIt can be downloaded [here](https://gitlab.com/alicevision/SphereDetectionModel/-/raw/main/sphereDetection_Mask-RCNN.onnx).\n* semantic segmentation model (optional): for the semantic segmentation of objects.\nIt can be downloaded [here](https://gitlab.com/alicevision/semanticSegmentationModel/-/raw/main/fcn_resnet50.onnx).\n\nEnvironment variables must be set for Meshroom to find those files:\n```\nALICEVISION_SENSOR_DB=/path/to/database\nALICEVISION_VOCTREE=/path/to/voctree\nALICEVISION_SPHERE_DETECTION_MODEL=/path/to/detection/model\nALICEVISION_SEMANTIC_SEGMENTATION_MODEL=/path/to/segmentation/model\nALICEVISION_ROOT=/path/to/AliceVision/install/directory\n```\n\n### Python Environment\n* Windows: Python 3 (>=3.5)\n* Linux: Python 3 (>=3.5)\n\n\nTo install all the requirements for runtime, development and packaging, simply run:\n```bash\npip install -r requirements.txt -r dev_requirements.txt\n```\n> Note: `dev_requirements` is only related to testing and packaging. It is not mandatory to run Meshroom.\n\n### Qt/PySide\n* PySide >= 5.15.2.1\nWarning: The plugin AssimpSceneParser is missing from pre-built binaries, so it needs to be added manually (see https://bugreports.qt.io/browse/QTBUG-88821).\nIt can either be taken from an older version, or directly downloaded from here:\n  * Linux: [libassimpsceneimport.so](https://drive.google.com/uc?export=download&id=1cTU7xrOsLI6ICgRSYz_t9E1lsrNF1kBB))\n  * Windows: [assimpsceneimport.dll](https://drive.google.com/uc?export=download&id=1X9X9d5W_lCwEHWwF748IdnN1YYipAQT_)\n\nand then copied into PySide's installation folder, in `plugins/sceneparsers`.\n\n\n### Qt Plugin\nAn additional Qt plugin can be built to extend Meshroom UI features. It can be found on a separate repository,\nthough it might get better integration in the future.\nNote that it is optional but highly recommended.\n\n#### [QtAliceVision](https://github.com/alicevision/QtAliceVision)\nIt uses AliceVision to load and visualize intermediate reconstruction files and OpenImageIO as backend to read RAW/EXR images.\nIt also adds support for Alembic file loading in Meshroom's 3D viewport, which allows to visualize sparse reconstruction results\n(point clouds and cameras).\n\n```\nQML2_IMPORT_PATH=/path/to/QtAliceVision/install/qml\nQT_PLUGIN_PATH=/path/to/QtAliceVision/install\n```\n\n\n"
        },
        {
          "name": "LICENSE-MPL2.md",
          "type": "blob",
          "size": 16.333984375,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1015625,
          "content": "# ![Meshroom - 3D Reconstruction Software](/docs/logo/banner-meshroom.png)\n\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2997/badge)](https://bestpractices.coreinfrastructure.org/projects/2997)\n\nMeshroom is a free, open-source 3D Reconstruction Software based on the [AliceVision](https://github.com/alicevision/AliceVision) Photogrammetric Computer Vision framework.\n\nLearn more details about the pipeline on [AliceVision website](http://alicevision.github.io).\n\nSee [results of the pipeline on sketchfab](http://sketchfab.com/AliceVision).\n\nContinuous integration: [![Build status](https://github.com/alicevision/Meshroom/actions/workflows/continuous-integration.yml/badge.svg?branch=develop)](https://github.com/alicevision/Meshroom/actions/workflows/continuous-integration.yml)\n\n\n## Photogrammetry\n\nPhotogrammetry is the science of making measurements from photographs.\nIt infers the geometry of a scene from a set of unordered photographs or videos.\nPhotography is the projection of a 3D scene onto a 2D plane, losing depth information.\nThe goal of photogrammetry is to reverse this process.\n\nSee the [presentation of the pipeline steps](http://alicevision.github.io/#photogrammetry).\n\n\n## Manual\n\nhttps://meshroom-manual.readthedocs.io\n\n\n## Tutorials\n\n* [Meshroom: Open Source 3D Reconstruction Software](https://www.youtube.com/watch?v=v_O6tYKQEBA) by [Mikros Image](http://www.mikrosimage.com)\n\n  Overall presentation of the Meshroom software.\n\n* [Meshroom: Initial Pipeline, CCTags, using a Turntable and Known Camera Positions](https://www.youtube.com/watch?v=XUKu1apUuVE) by [mpr-projects](https://github.com/mpr-projects)\n\n  Overview of the default Meshroom 2023.3 pipeline, including masking, cctags and known camera positions.\n\n* [Meshroom Tutorial on Sketchfab](https://sketchfab.com/blogs/community/tutorial-meshroom-for-beginners) by [Mikros Image](http://www.mikrosimage.com)\n\n  Detailed tutorial with a focus on the features of the 2019.1 release.\n\n* [Photogrammetry 2 – 3D scanning with just PHONE/CAMERA simpler, better than ever!](https://www.youtube.com/watch?v=1D0EhSi-vvc) by [Prusa 3D Printer](https://blog.prusaprinters.org)\n\n  Overall presentation of the photogrammetry practice with Meshroom.\n\n* [How to 3D Photoscan Easy and Free! by ](https://www.youtube.com/watch?v=k4NTf0hMjtY) by [CG Geek](https://www.youtube.com/channel/UCG8AxMVa6eutIGxrdnDxWpQ)\n\n  Overall presentation of the protogrammetry practice with Meshroom and detailed presentation how to do the retolopogy in Blender.\n\n* [Meshroom Survival Guide](https://www.youtube.com/watch?v=eiEaHLNJJ94) by [Moviola](https://moviola.com)\n\n  Presentation of the Meshroom software with a focus on using it for Match Moving.\n\n\n## Customization\n\n### Custom Pipelines\n\nYou can create custom pipelines in the user interface and save it as template: `File > Advanced > Save As Template`.\nYou can define the `MESHROOM_PIPELINE_TEMPLATES_PATH` environment variable to specific folders to make these pipelines available in Meshroom.\nIn a standard precompiled version of Meshroom, you can also directly add custom pipelines in `lib/meshroom/pipelines`.\n\n### Custom Nodes\n\nYou can create custom nodes in python and make them available in Meshroom using the `MESHROOM_NODES_PATH` environment variable.\n[Here is an example](meshroom/nodes/blender/ScenePreview.py) to launch a Blender rendering from Meshroom.\nIn a standard precompiled version of Meshroom, you can also directly add custom nodes in `lib/meshroom/nodes`.\nTo be recognized by Meshroom, a custom folder with nodes should be a Python module (an `__init__.py` file is needed).\n\n\n## License\n\nThe project is released under MPLv2, see [**COPYING.md**](COPYING.md).\n\n\n## Citation\n\nIf you use this project for a publication, please cite the [paper](https://hal.archives-ouvertes.fr/hal-03351139):\n  ```\n  @inproceedings{alicevision2021,\n    title={{A}liceVision {M}eshroom: An open-source {3D} reconstruction pipeline},\n    author={Carsten Griwodz and Simone Gasparini and Lilian Calvet and Pierre Gurdjos and Fabien Castan and Benoit Maujean and Gregoire De Lillo and Yann Lanthony},\n    booktitle={Proceedings of the 12th ACM Multimedia Systems Conference - {MMSys '21}},\n    doi = {10.1145/3458305.3478443},\n    publisher = {ACM Press},\n    year = {2021}\n  }\n  ```\n\n## Get the project\n\nYou can [download pre-compiled binaries for the latest release](https://github.com/alicevision/meshroom/releases).  \n\nIf you want to build it yourself, see [**INSTALL.md**](INSTALL.md) to setup the project and pre-requisites.\n\nGet the source code and install runtime requirements:\n```bash\ngit clone --recursive git://github.com/alicevision/meshroom\ncd meshroom\npip install -r requirements.txt\n```\n\n\n## Start Meshroom\n\nYou need to have [AliceVision](https://github.com/alicevision/AliceVision) installation in your PATH (and LD_LIBRARY_PATH on Linux/macOS).\n\n - __Launch the User Interface__\n\n```bash\n# Windows\nset PYTHONPATH=%CD% && python meshroom/ui\n# Linux/macOS\nPYTHONPATH=$PWD python meshroom/ui\n```\n\nOn Ubuntu, you may have conflicts between native drivers and mesa drivers. In that case, you need to force usage of native drivers by adding them to the LD_LIBRARY_PATH:\n`LD_LIBRARY_PATH=/usr/lib/nvidia-340 PYTHONPATH=$PWD python meshroom/ui`\nYou may need to adjust the folder `/usr/lib/nvidia-340` with the correct driver version.\n\n - __Launch a 3D reconstruction in command line__\n\n```bash\n# Windows: set PYTHONPATH=%CD% &&\n# Linux/macOS: PYTHONPATH=$PWD\npython bin/meshroom_batch --input INPUT_IMAGES_FOLDER --output OUTPUT_FOLDER\n```\n\n## Start Meshroom without building AliceVision\n\nTo use Meshroom (ui) without building AliceVision\n*   Download a [release](https://github.com/alicevision/meshroom/releases)\n*   Checkout corresponding Meshroom (ui) version/tag to avoid versions incompatibilities\n*   `LD_LIBRARY_PATH=~/foo/Meshroom-2023.2.0/aliceVision/lib/ PATH=$PATH:~/foo/Meshroom-2023.2.0/aliceVision/bin/ PYTHONPATH=$PWD python3 meshroom/ui`\n\n## Start and Debug Meshroom in an IDE\n\nPyCharm Community is free IDE which can be used. To start and debug a project with that IDE,\nright-click on `Meshroom/ui/__main__.py` > `Debug`, then `Edit Configuration`, in `Environment variables` : \n*   If you want to use aliceVision built by yourself add: `PATH=$PATH:/foo/build/Linux-x86_64/`\n*   If you want to use aliceVision release add: `LD_LIBRARY_PATH=/foo/Meshroom-2023.2.0/aliceVision/lib/;PATH=$PATH:/foo/Meshroom-2023.2.0/aliceVision/bin/` (Make sure that you are on the branch matching the right version)\n\n![image](https://user-images.githubusercontent.com/937836/127321375-3bf78e73-569d-414a-8649-de0307adf794.png)\n\n\n## FAQ\n\nSee the [Meshroom wiki](https://github.com/alicevision/meshroom/wiki) for more information.\n\n\n## Contact\n\nUse the public mailing-list to ask questions or request features. It is also a good place for informal discussions like sharing results, interesting related technologies or publications:\n> [alicevision@googlegroups.com](mailto:alicevision@googlegroups.com)\n> [http://groups.google.com/group/alicevision](http://groups.google.com/group/alicevision)\n\nYou can also contact the core team privately on: [alicevision-team@googlegroups.com](mailto:alicevision-team@googlegroups.com).\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 1.9736328125,
          "content": "\n### Versioning\n\nVersion = MAJOR (>=1 year), MINOR (>= 1 month), PATCH\n\nVersion Status = Develop / Release\n\n\n### Git\n\nBranches\n    develop: active development branch\n    master: latest release\n    vMAJOR.MINOR: release branch\n\nTags\n    vMAJOR.MINOR.PATCH: tag for each release\n\n\n### Release Process\n\n - Prepare the AliceVision release: https://github.com/alicevision/AliceVision\n - Update INSTALL.md and requirements.txt if needed\n - Source code\n   - Create branch from develop: \"rcMAJOR.MINOR\"\n   - Modify version in code, version status to RELEASE (meshroom/__init__.py)\n   - Update the version of all the templates so their version corresponds to the release\n   - Create Release note (using https://github.com/cbentejac/github-generate-release-note)\n     - ```\n\t   ./github-generate-release-note.py -o alicevision -r Meshroom -m \"Meshroom MAJOR.MINOR.PATCH\" --highlights majorFeature feature --label-include bugfix ci,scope:doc,scope:build -s updated-asc\n\t   ```\n   - PR to develop: \"Release MAJOR.MINOR\"\n - Build\n   - Build docker & push to dockerhub\n   - Build windows\n - Git\n   - Merge \"rcMAJOR.MINOR\" into \"develop\"\n   - Push \"develop\" into \"master\"\n   - Create branch: vMAJOR.MINOR\n   - Create tag: vMAJOR.MINOR.PATCH on Meshroom, qtAliceVision\n   - Create branch from develop: \"startMAJOR.MINOR\"\n - Upload binaries on fosshub\n - Fill up Github release note\n - Prepare \"develop\" for new developments\n   - Upgrade MINOR and reset version status to Develop\n   - PR to develop: \"Start Development MAJOR.MINOR\"\n - Communication\n   - Email on mailing-list: alicevision@googlegroups.com\n   - Message on linkedin: https://www.linkedin.com/groups/13573776\n   - Message on twitter: https://twitter.com/alicevision_org\n\n### Upgrade a Release with a PATCH version\n\n - Source code\n   - Create branch from rcMAJOR.MINOR: \"rcMAJOR.MINOR.PATCH\"\n   - Cherry-pick specific commits or rebase required PR\n   - Modify version in code\n   - Update release note\n - Build step\n - Uploads\n - Github release note\n - Email on mailing-list\n\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev_requirements.txt",
          "type": "blob",
          "size": 0.1904296875,
          "content": "# packaging\n\ncx_Freeze==5.1.1;python_version<\"3.5\"\n# Problem with cx_freeze-6.2, see https://github.com/marcelotduarte/cx_Freeze/issues/652\ncx_Freeze==6.1;python_version>=\"3.5\"\n\n# testing\npytest\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "meshroom",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0859375,
          "content": "# runtime\npsutil>=5.6.7\nPySide6==6.6.3.1\nmarkdown==2.6.11\nrequests==2.32.0\npyseq==0.6.1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.2275390625,
          "content": "import platform\n\nimport os\nimport setuptools  # for bdist\nfrom cx_Freeze import setup, Executable\nimport meshroom\n\ncurrentDir = os.path.dirname(os.path.abspath(__file__))\n\n\nclass PlatformExecutable(Executable):\n    \"\"\"\n    Extend cx_Freeze.Executable to handle platform variations.\n    \"\"\"\n\n    Windows = \"Windows\"\n    Linux = \"Linux\"\n    Darwin = \"Darwin\"\n\n    exeExtensions = {\n        Windows: \".exe\",\n        Linux: \"\",\n        Darwin: \".app\"\n    }\n\n    def __init__(self, script, initScript=None, base=None, targetName=None, icons=None, shortcutName=None,\n                 shortcutDir=None, copyright=None, trademarks=None):\n\n        # despite supposed to be optional, targetName is actually required on some configurations\n        if not targetName:\n            targetName = os.path.splitext(os.path.basename(script))[0]\n        # add platform extension to targetName\n        targetName += PlatformExecutable.exeExtensions[platform.system()]\n        # get icon for platform if defined\n        icon = icons.get(platform.system(), None) if icons else None\n        if platform.system() in (self.Linux, self.Darwin):\n            initScript = os.path.join(currentDir, \"setupInitScriptUnix.py\")\n        super(PlatformExecutable, self).__init__(script, initScript, base, targetName, icon, shortcutName,\n                                                 shortcutDir, copyright, trademarks)\n\n\nbuild_exe_options = {\n    # include dynamically loaded plugins\n    \"packages\": [\"meshroom.nodes\", \"meshroom.submitters\"],\n    \"includes\": [\n        \"idna.idnadata\",  # Dependency needed by SketchfabUpload node, but not detected by cx_Freeze\n    ],\n    \"include_files\": [\"CHANGES.md\", \"COPYING.md\", \"LICENSE-MPL2.md\", \"README.md\"]\n}\nif os.path.isdir(os.path.join(currentDir, \"tractor\")):\n    build_exe_options[\"packages\"].append(\"tractor\")\nif os.path.isdir(os.path.join(currentDir, \"simpleFarm\")):\n    build_exe_options[\"packages\"].append(\"simpleFarm\")\n\nif platform.system() == PlatformExecutable.Linux:\n    # include required system libs\n    # from https://github.com/Ultimaker/cura-build/blob/master/packaging/setup_linux.py.in\n    build_exe_options.update({\n        \"bin_path_includes\": [\n            \"/lib\",\n            \"/lib64\",\n            \"/usr/lib\",\n            \"/usr/lib64\",\n        ],\n        \"bin_includes\": [\n            \"libssl3\",\n            \"libssl\",\n            \"libcrypto\",\n        ],\n        \"bin_excludes\": [\n            \"linux-vdso.so\",\n            \"libpthread.so\",\n            \"libdl.so\",\n            \"librt.so\",\n            \"libstdc++.so\",\n            \"libm.so\",\n            \"libgcc_s.so\",\n            \"libc.so\",\n            \"ld-linux-x86-64.so\",\n            \"libz.so\",\n            \"libgcc_s.so\",\n            \"libglib-2\",\n            \"librt.so\",\n            \"libcap.so\",\n            \"libGL.so\",\n            \"libglapi.so\",\n            \"libXext.so\",\n            \"libXdamage.so\",\n            \"libXfixes.so\",\n            \"libX11-xcb.so\",\n            \"libX11.so\",\n            \"libxcb-glx.so\",\n            \"libxcb-dri2.so\",\n            \"libxcb.so\",\n            \"libXxf86vm.so\",\n            \"libdrm.so\",\n            \"libexpat.so\",\n            \"libXau.so\",\n            \"libglib-2.0.so\",\n            \"libgssapi_krb5.so\",\n            \"libgthread-2.0.so\",\n            \"libk5crypto.so\",\n            \"libkeyutils.so\",\n            \"libkrb5.so\",\n            \"libkrb5support.so\",\n            \"libresolv.so\",\n            \"libutil.so\",\n            \"libXrender.so\",\n            \"libcom_err.so\",\n            \"libgssapi_krb5.so\",\n        ]\n    })\n\nexecutables = [\n    # GUI\n    PlatformExecutable(\n        \"meshroom/ui/__main__.py\",\n        targetName=\"Meshroom\",\n        icons={PlatformExecutable.Windows: \"meshroom/ui/img/meshroom.ico\"}\n    ),\n    # Command line\n    PlatformExecutable(\"bin/meshroom_batch\"),\n    PlatformExecutable(\"bin/meshroom_compute\"),\n    PlatformExecutable(\"bin/meshroom_newNodeType\"),\n    PlatformExecutable(\"bin/meshroom_statistics\"),\n    PlatformExecutable(\"bin/meshroom_status\"),\n    PlatformExecutable(\"bin/meshroom_submit\"),\n]\n\nsetup(\n    name=\"Meshroom\",\n    description=\"Meshroom\",\n    install_requires=['psutil', 'pytest', 'PySide6', 'markdown'],\n    setup_requires=[\n        'cx_Freeze'\n    ],\n    version=meshroom.__version__,\n    options={\"build_exe\": build_exe_options},\n    executables=executables,\n)\n"
        },
        {
          "name": "setupInitScriptUnix.py",
          "type": "blob",
          "size": 1.537109375,
          "content": "# ------------------------------------------------------------------------------\n# ConsoleSetLibPath.py\n#   Initialization script for cx_Freeze which manipulates the path so that the\n# directory in which the executable is found is searched for extensions but\n# no other directory is searched. The environment variable LD_LIBRARY_PATH is\n# manipulated first, however, to ensure that shared libraries found in the\n# target directory are found. This requires a restart of the executable because\n# the environment variable LD_LIBRARY_PATH is only checked at startup.\n# ------------------------------------------------------------------------------\n\nimport os\nimport sys\nimport zipimport\n\nFILE_NAME = sys.executable\nDIR_NAME = os.path.dirname(sys.executable)\n\npaths = os.environ.get(\"LD_LIBRARY_PATH\", \"\").split(os.pathsep)\n\nif DIR_NAME not in paths:\n    paths.insert(0, DIR_NAME)\n    paths.insert(0, os.path.join(DIR_NAME, \"lib\"))\n    paths.insert(0, os.path.join(DIR_NAME, \"aliceVision\", \"lib\"))\n    paths.insert(0, os.path.join(DIR_NAME, \"aliceVision\", \"lib64\"))\n\n    os.environ[\"LD_LIBRARY_PATH\"] = os.pathsep.join(paths)\n    os.execv(sys.executable, sys.argv)\n\nsys.frozen = True\nsys.path = sys.path[:4]\n\n\ndef run(*args):\n    m = __import__(\"__main__\")\n    importer = zipimport.zipimporter(os.path.dirname(os.__file__))\n    if len(args) == 0:\n        name, ext = os.path.splitext(os.path.basename(os.path.normcase(FILE_NAME)))\n        moduleName = \"%s__main__\" % name\n    else:\n        moduleName = args[0]\n    code = importer.get_code(moduleName)\n    exec(code, m.__dict__)\n"
        },
        {
          "name": "start.bat",
          "type": "blob",
          "size": 0.49609375,
          "content": "REM Windows\nREM Add the aliceVision and qtPlugins folders with the binaries to this directory\n\nset MESHROOM_INSTALL_DIR=%CD%\nset PYTHONPATH=%CD%\n\nREM # Development options\nREM set MESHROOM_OUTPUT_QML_WARNINGS=1\nREM set MESHROOM_INSTANT_CODING=1\nREM set QT_PLUGIN_PATH=C:\\dev\\meshroom\\install\nREM set QML2_IMPORT_PATH=C:\\dev\\meshroom\\install\\qml\nREM set PATH=C:\\dev\\AliceVision\\install\\bin;C:\\dev\\vcpkg\\installed\\x64-windows\\bin;%PATH%\nREM set ALICEVISION_ROOT=C:\\dev\\AliceVision\\install\n\npython meshroom\\ui\n\n"
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 0.3974609375,
          "content": "#!/bin/bash\nexport MESHROOM_ROOT=\"$(dirname \"$(readlink -f \"${BASH_SOURCE[0]}\" )\" )\"\nexport PYTHONPATH=$MESHROOM_ROOT:$PYTHONPATH\n\n# using existing alicevision release\n#export LD_LIBRARY_PATH=/foo/Meshroom-2023.2.0/aliceVision/lib/\n#export PATH=$PATH:/foo/Meshroom-2023.2.0/aliceVision/bin/\n\n# using alicevision built source\n#export PATH=$PATH:/foo/build/Linux-x86_64/\n\npython3 \"$MESHROOM_ROOT/meshroom/ui\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}