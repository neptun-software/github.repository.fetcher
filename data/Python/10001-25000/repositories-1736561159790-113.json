{
  "metadata": {
    "timestamp": 1736561159790,
    "page": 113,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "phidatahq/phidata",
      "stars": 17610,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1669921875,
          "content": "root = true\n\n[*]\nindent_size = 2\nindent_style = space\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.py]\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5419921875,
          "content": "# See https://help.github.com/ignore-files/ for more about ignoring files.\n\n.DS_Store\n\n# Python cache\n.mypy_cache\n*__pycache__*\n*.egg-info\n*.pyc\n*.pytest_cache\n*.ruff_cache\n*.cache*\n*.config*\n\n# Machine specific\n.idea\n.vscode\n\n# Ignore .env files\n.env\n\n# Ignore .envrc files (used by direnv: https://direnv.net/)\n.envrc\n\n\n# ignore storage dir\n/storage\n.images\n\n# ignore wip dir\nwip\n\n# ignore dist dir\ndist\n\n# ignore virtualenvs\n.venv*\nvenv*\nphienv*\naienv*\n\n# ignore tmp dirs\nscratch\njunk\ntmp\nagents.db\ndata.db\n\n.ipynb_checkpoints\n\naudio_generations\n\n*.db\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.095703125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nhelp@phidata.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.3134765625,
          "content": "# Contributing to phidata\n\nPhidata is an open-source project and we welcome contributions.\n\n## üë©‚Äçüíª How to contribute\n\nPlease follow the [fork and pull request](https://docs.github.com/en/get-started/quickstart/contributing-to-projects) workflow:\n\n- Fork the repository.\n- Create a new branch for your feature.\n- Add your feature or improvement.\n- Send a pull request.\n- We appreciate your support & input!\n\n## Development setup\n\n1. Clone the repository.\n2. Create a virtual environment:\n   - For Unix, use `./scripts/create_venv.sh`.\n   - For Windows, use `.\\scripts\\create_venv.bat`.\n   - This setup will:\n     - Create a `phienv` virtual environment in the current directory.\n     - Install the required packages.\n     - Install the `phidata` package in editable mode.\n3. Activate the virtual environment:\n   - On Unix: `source phienv/bin/activate`\n   - On Windows: `phienv\\Scripts\\activate`\n\n## Formatting and validation\n\nEnsure your code meets our quality standards by running the appropriate formatting and validation script before submitting a pull request:\n\n- For Unix:\n  - `./scripts/format.sh`\n  - `./scripts/validate.sh`\n- For Windows:\n  - `.\\scripts\\format.bat`\n  - `.\\scripts\\validate.bat`\n\nThese scripts will perform code formatting with `ruff`, static type checks with `mypy`, and run unit tests with `pytest`.\n\n## Adding a new Vector Database\n\n1. Setup your local environment by following the [Development setup](#development-setup).\n2. Create a new directory under `phi/vectordb` for the new vector database.\n3. Create a Class for your VectorDb that implements the `VectorDb` interface\n   - Your Class will be in the `phi/vectordb/<your_db>/<your_db>.py` file.\n   - The `VectorDb` interface is defined in `phi/vectordb/base\n   - Import your `VectorDb` Class in `phi/vectordb/<your_db>/__init__.py`.\n   - Checkout the [`phi/vectordb/pgvector/pgvector`](https://github.com/phidatahq/phidata/blob/main/phi/vectordb/pgvector/pgvector.py) file for an example.\n4. Add a recipe for using your `VectorDb` under `cookbook/vectordb/<your_db>`.\n   - Checkout [`phidata/cookbook/vectordb/pgvector`](https://github.com/phidatahq/phidata/tree/main/cookbook/vectordb/pgvector) for an example.\n5. Important: Format and validate your code by running `./scripts/format.sh` and `./scripts/validate.sh`.\n6. Submit a pull request.\n\n## Adding a new Model Provider\n\n1. Setup your local environment by following the [Development setup](#development-setup).\n2. Create a new directory under `phi/model` for the new Model provider.\n3. If the Model provider supports the OpenAI API spec:\n   - Create a Class for your LLM provider that inherits the `OpenAILike` Class from `phi/model/openai/like.py`.\n   - Your Class will be in the `phi/model/<your_model>/<your_model>.py` file.\n   - Import your Class in the `phi/model/<your_model>/__init__.py` file.\n   - Checkout the [`phi/model/xai/xai.py`](https://github.com/phidatahq/phidata/blob/main/phi/llm/together/together.py) file for an example.\n4. If the Model provider does not support the OpenAI API spec:\n   - Reach out to us on [Discord](https://discord.gg/4MtYHHrgA8) or open an issue to discuss the best way to integrate your LLM provider.\n   - Checkout [`phi/model/anthropic/claude.py`](https://github.com/phidatahq/phidata/blob/main/phi/model/anthropic/claude.py) or [`phi/model/cohere/chat.py`](https://github.com/phidatahq/phidata/blob/main/phi/model/cohere/chat.py) for inspiration.\n5. Add a recipe for using your Model provider under `cookbook/providers/<your_model>`.\n   - Checkout [`phidata/cookbook/provider/claude`](https://github.com/phidatahq/phidata/tree/main/cookbook/providers/claude) for an example.\n6. Important: Format and validate your code by running `./scripts/format.sh` and `./scripts/validate.sh`.\n7. Submit a pull request.\n\n## Adding a new Tool.\n\n1. Setup your local environment by following the [Development setup](#development-setup).\n2. Create a new directory under `phi/tools` for the new Tool.\n3. Create a Class for your Tool that inherits the `Toolkit` Class from `phi/tools/toolkit/.py`.\n   - Your Class will be in `phi/tools/<your_tool>.py`.\n   - Make sure to register all functions in your class via a flag.\n   - Checkout the [`phi/tools/youtube_tools.py`](https://github.com/phidatahq/phidata/blob/main/phi/tools/youtube_tools.py) file for an example.\n   - If your tool requires an API key, checkout the [`phi/tools/serpapi_tools.py`](https://github.com/phidatahq/phidata/blob/main/phi/tools/serpapi_tools.py) as well.\n4. Add a recipe for using your Tool under `cookbook/tools/<your_tool>`.\n   - Checkout [`phidata/cookbook/tools/youtube_tools`](https://github.com/phidatahq/phidata/blob/main/cookbook/tools/youtube_tools.py) for an example.\n5. Important: Format and validate your code by running `./scripts/format.sh` and `./scripts/validate.sh`.\n6. Submit a pull request.\n\nMessage us on [Discord](https://discord.gg/4MtYHHrgA8) or post on [Discourse](https://community.phidata.com/) if you have any questions or need help with credits.\n\n## üìö Resources\n\n- <a href=\"https://docs.phidata.com/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">Documentation</a>\n- <a href=\"https://discord.gg/4MtYHHrgA8\" target=\"_blank\" rel=\"noopener noreferrer\">Discord</a>\n- <a href=\"https://community.phidata.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Discourse</a>\n\n## üìù License\n\nThis project is licensed under the terms of the [MPL-2.0 license](/LICENSE)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.361328125,
          "content": "Copyright (c) Phidata, Inc.\n\nMozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.2001953125,
          "content": "<h1 align=\"center\" id=\"top\">\n  phidata\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://docs.phidata.com\">\n    <img src=\"https://img.shields.io/badge/Read%20the%20Documentation-Click%20Here-green?style=for-the-badge&logo=read-the-docs\" alt=\"Read the Docs\">\n  </a>\n</p>\n\n<h3 align=\"center\">\nBuild multi-modal Agents with memory, knowledge, tools and reasoning.\n</h3>\n\n<img\n  src=\"https://github.com/user-attachments/assets/44739d09-2ec4-49b7-bea1-b275afccc592\"\n  style=\"border-radius: 8px;\"\n/>\n\n## What is phidata?\n\n**Phidata is a framework for building multi-modal agents**, use phidata to:\n\n- **Build multi-modal agents with memory, knowledge, tools and reasoning.**\n- **Build teams of agents that can work together to solve problems.**\n- **Chat with your agents using a beautiful Agent UI.**\n\n## Install\n\n```shell\npip install -U phidata\n```\n\n## Key Features\n\n- [Simple & Elegant](#simple--elegant)\n- [Powerful & Flexible](#powerful--flexible)\n- [Multi-Modal by default](#multi-modal-by-default)\n- [Multi-Agent orchestration](#multi-agent-orchestration)\n- [A beautiful Agent UI to chat with your agents](#a-beautiful-agent-ui-to-chat-with-your-agents)\n- [Agentic RAG built-in](#agentic-rag)\n- [Structured Outputs](#structured-outputs)\n- [Reasoning Agents](#reasoning-agents-experimental)\n- [Monitoring & Debugging built-in](#monitoring--debugging)\n- [Demo Agents](#demo-agents)\n\n## Simple & Elegant\n\nPhidata Agents are simple and elegant, resulting in minimal, beautiful code.\n\nFor example, you can create a web search agent in 10 lines of code, create a file `web_search.py`\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\nfrom phi.tools.duckduckgo import DuckDuckGo\n\nweb_agent = Agent(\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[DuckDuckGo()],\n    instructions=[\"Always include sources\"],\n    show_tool_calls=True,\n    markdown=True,\n)\nweb_agent.print_response(\"Tell me about OpenAI Sora?\", stream=True)\n```\n\nInstall libraries, export your `OPENAI_API_KEY` and run the Agent:\n\n```shell\npip install phidata openai duckduckgo-search\n\nexport OPENAI_API_KEY=sk-xxxx\n\npython web_search.py\n```\n\n## Powerful & Flexible\n\nPhidata agents can use multiple tools and follow instructions to achieve complex tasks.\n\nFor example, you can create a finance agent with tools to query financial data, create a file `finance_agent.py`\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\nfrom phi.tools.yfinance import YFinanceTools\n\nfinance_agent = Agent(\n    name=\"Finance Agent\",\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True, company_news=True)],\n    instructions=[\"Use tables to display data\"],\n    show_tool_calls=True,\n    markdown=True,\n)\nfinance_agent.print_response(\"Summarize analyst recommendations for NVDA\", stream=True)\n```\n\nInstall libraries and run the Agent:\n\n```shell\npip install yfinance\n\npython finance_agent.py\n```\n\n## Multi-Modal by default\n\nPhidata agents support text, images, audio and video.\n\nFor example, you can create an image agent that can understand images and make tool calls as needed, create a file `image_agent.py`\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\nfrom phi.tools.duckduckgo import DuckDuckGo\n\nagent = Agent(\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[DuckDuckGo()],\n    markdown=True,\n)\n\nagent.print_response(\n    \"Tell me about this image and give me the latest news about it.\",\n    images=[\"https://upload.wikimedia.org/wikipedia/commons/b/bf/Krakow_-_Kosciol_Mariacki.jpg\"],\n    stream=True,\n)\n```\n\nRun the Agent:\n\n```shell\npython image_agent.py\n```\n\n## Multi-Agent orchestration\n\nPhidata agents can work together as a team to achieve complex tasks, create a file `agent_team.py`\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\nfrom phi.tools.duckduckgo import DuckDuckGo\nfrom phi.tools.yfinance import YFinanceTools\n\nweb_agent = Agent(\n    name=\"Web Agent\",\n    role=\"Search the web for information\",\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[DuckDuckGo()],\n    instructions=[\"Always include sources\"],\n    show_tool_calls=True,\n    markdown=True,\n)\n\nfinance_agent = Agent(\n    name=\"Finance Agent\",\n    role=\"Get financial data\",\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True)],\n    instructions=[\"Use tables to display data\"],\n    show_tool_calls=True,\n    markdown=True,\n)\n\nagent_team = Agent(\n    team=[web_agent, finance_agent],\n    model=OpenAIChat(id=\"gpt-4o\"),\n    instructions=[\"Always include sources\", \"Use tables to display data\"],\n    show_tool_calls=True,\n    markdown=True,\n)\n\nagent_team.print_response(\"Summarize analyst recommendations and share the latest news for NVDA\", stream=True)\n```\n\nRun the Agent team:\n\n```shell\npython agent_team.py\n```\n\n## A beautiful Agent UI to chat with your agents\n\nPhidata provides a beautiful UI for interacting with your agents. Let's take it for a spin, create a file `playground.py`\n\n![agent_playground](https://github.com/user-attachments/assets/546ce6f5-47f0-4c0c-8f06-01d560befdbc)\n\n> [!NOTE]\n> Phidata does not store any data, all agent data is stored locally in a sqlite database.\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\nfrom phi.storage.agent.sqlite import SqlAgentStorage\nfrom phi.tools.duckduckgo import DuckDuckGo\nfrom phi.tools.yfinance import YFinanceTools\nfrom phi.playground import Playground, serve_playground_app\n\nweb_agent = Agent(\n    name=\"Web Agent\",\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[DuckDuckGo()],\n    instructions=[\"Always include sources\"],\n    storage=SqlAgentStorage(table_name=\"web_agent\", db_file=\"agents.db\"),\n    add_history_to_messages=True,\n    markdown=True,\n)\n\nfinance_agent = Agent(\n    name=\"Finance Agent\",\n    model=OpenAIChat(id=\"gpt-4o\"),\n    tools=[YFinanceTools(stock_price=True, analyst_recommendations=True, company_info=True, company_news=True)],\n    instructions=[\"Use tables to display data\"],\n    storage=SqlAgentStorage(table_name=\"finance_agent\", db_file=\"agents.db\"),\n    add_history_to_messages=True,\n    markdown=True,\n)\n\napp = Playground(agents=[finance_agent, web_agent]).get_app()\n\nif __name__ == \"__main__\":\n    serve_playground_app(\"playground:app\", reload=True)\n```\n\n\nAuthenticate with phidata by running the following command:\n\n```shell\nphi auth\n```\n\nor by exporting the `PHI_API_KEY` for your workspace from [phidata.app](https://www.phidata.app)\n\n```bash\nexport PHI_API_KEY=phi-***\n```\n\nInstall dependencies and run the Agent Playground:\n\n```\npip install 'fastapi[standard]' sqlalchemy\n\npython playground.py\n```\n\n- Open the link provided or navigate to `http://phidata.app/playground`\n- Select the `localhost:7777` endpoint and start chatting with your agents!\n\n<video\n  src=\"https://github.com/user-attachments/assets/3a2ff93c-3d2d-4f1a-9573-eee25542e5c4\"\n  style=\"border-radius: 8px;\"\n/>\n\n## Agentic RAG\n\nWe were the first to pioneer Agentic RAG using our Auto-RAG paradigm. With Agentic RAG (or auto-rag), the Agent can search its knowledge base (vector db) for the specific information it needs to achieve its task, instead of always inserting the \"context\" into the prompt.\n\nThis saves tokens and improves response quality. Create a file `rag_agent.py`\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\nfrom phi.embedder.openai import OpenAIEmbedder\nfrom phi.knowledge.pdf import PDFUrlKnowledgeBase\nfrom phi.vectordb.lancedb import LanceDb, SearchType\n\n# Create a knowledge base from a PDF\nknowledge_base = PDFUrlKnowledgeBase(\n    urls=[\"https://phi-public.s3.amazonaws.com/recipes/ThaiRecipes.pdf\"],\n    # Use LanceDB as the vector database\n    vector_db=LanceDb(\n        table_name=\"recipes\",\n        uri=\"tmp/lancedb\",\n        search_type=SearchType.vector,\n        embedder=OpenAIEmbedder(model=\"text-embedding-3-small\"),\n    ),\n)\n# Comment out after first run as the knowledge base is loaded\nknowledge_base.load()\n\nagent = Agent(\n    model=OpenAIChat(id=\"gpt-4o\"),\n    # Add the knowledge base to the agent\n    knowledge=knowledge_base,\n    show_tool_calls=True,\n    markdown=True,\n)\nagent.print_response(\"How do I make chicken and galangal in coconut milk soup\", stream=True)\n```\n\nInstall libraries and run the Agent:\n\n```shell\npip install lancedb tantivy pypdf sqlalchemy\n\npython rag_agent.py\n```\n\n## Structured Outputs\n\nAgents can return their output in a structured format as a Pydantic model.\n\nCreate a file `structured_output.py`\n\n```python\nfrom typing import List\nfrom pydantic import BaseModel, Field\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\n\n# Define a Pydantic model to enforce the structure of the output\nclass MovieScript(BaseModel):\n    setting: str = Field(..., description=\"Provide a nice setting for a blockbuster movie.\")\n    ending: str = Field(..., description=\"Ending of the movie. If not available, provide a happy ending.\")\n    genre: str = Field(..., description=\"Genre of the movie. If not available, select action, thriller or romantic comedy.\")\n    name: str = Field(..., description=\"Give a name to this movie\")\n    characters: List[str] = Field(..., description=\"Name of characters for this movie.\")\n    storyline: str = Field(..., description=\"3 sentence storyline for the movie. Make it exciting!\")\n\n# Agent that uses JSON mode\njson_mode_agent = Agent(\n    model=OpenAIChat(id=\"gpt-4o\"),\n    description=\"You write movie scripts.\",\n    response_model=MovieScript,\n)\n# Agent that uses structured outputs\nstructured_output_agent = Agent(\n    model=OpenAIChat(id=\"gpt-4o\"),\n    description=\"You write movie scripts.\",\n    response_model=MovieScript,\n    structured_outputs=True,\n)\n\njson_mode_agent.print_response(\"New York\")\nstructured_output_agent.print_response(\"New York\")\n```\n\n- Run the `structured_output.py` file\n\n```shell\npython structured_output.py\n```\n\n- The output is an object of the `MovieScript` class, here's how it looks:\n\n```shell\nMovieScript(\n‚îÇ   setting='A bustling and vibrant New York City',\n‚îÇ   ending='The protagonist saves the city and reconciles with their estranged family.',\n‚îÇ   genre='action',\n‚îÇ   name='City Pulse',\n‚îÇ   characters=['Alex Mercer', 'Nina Castillo', 'Detective Mike Johnson'],\n‚îÇ   storyline='In the heart of New York City, a former cop turned vigilante, Alex Mercer, teams up with a street-smart activist, Nina Castillo, to take down a corrupt political figure who threatens to destroy the city. As they navigate through the intricate web of power and deception, they uncover shocking truths that push them to the brink of their abilities. With time running out, they must race against the clock to save New York and confront their own demons.'\n)\n```\n\n## Reasoning Agents (experimental)\n\nReasoning helps agents work through a problem step-by-step, backtracking and correcting as needed. Create a file `reasoning_agent.py`.\n\n```python\nfrom phi.agent import Agent\nfrom phi.model.openai import OpenAIChat\n\ntask = (\n    \"Three missionaries and three cannibals need to cross a river. \"\n    \"They have a boat that can carry up to two people at a time. \"\n    \"If, at any time, the cannibals outnumber the missionaries on either side of the river, the cannibals will eat the missionaries. \"\n    \"How can all six people get across the river safely? Provide a step-by-step solution and show the solutions as an ascii diagram\"\n)\n\nreasoning_agent = Agent(model=OpenAIChat(id=\"gpt-4o\"), reasoning=True, markdown=True, structured_outputs=True)\nreasoning_agent.print_response(task, stream=True, show_full_reasoning=True)\n```\n\nRun the Reasoning Agent:\n\n```shell\npython reasoning_agent.py\n```\n\n> [!WARNING]\n> Reasoning is an experimental feature and will break ~20% of the time. **It is not a replacement for o1.**\n>\n> It is an experiment fueled by curiosity, combining COT and tool use. Set your expectations very low for this initial release. For example: It will not be able to count ‚Äòr‚Äôs in ‚Äòstrawberry‚Äô.\n\n## Demo Agents\n\nThe Agent Playground includes a few demo agents that you can test with. If you have recommendations for other demo agents, please let us know in our [community forum](https://community.phidata.com/).\n\n![demo_agents](https://github.com/user-attachments/assets/329aa15d-83aa-4c6c-88f0-2b0eda257198)\n\n## Monitoring & Debugging\n\n### Monitoring\n\nPhidata comes with built-in monitoring. You can set `monitoring=True` on any agent to track sessions or set `PHI_MONITORING=true` in your environment.\n\n> [!NOTE]\n> Run `phi auth` to authenticate your local account or export the `PHI_API_KEY`\n\n```python\nfrom phi.agent import Agent\n\nagent = Agent(markdown=True, monitoring=True)\nagent.print_response(\"Share a 2 sentence horror story\")\n```\n\nRun the agent and monitor the results on [phidata.app/sessions](https://www.phidata.app/sessions)\n\n```shell\n# You can also set the environment variable\n# export PHI_MONITORING=true\n\npython monitoring.py\n```\n\nView the agent session on [phidata.app/sessions](https://www.phidata.app/sessions)\n\n![Agent Session](https://github.com/user-attachments/assets/45f3e460-9538-4b1f-96ba-bd46af3c89a8)\n\n### Debugging\n\nPhidata also includes a built-in debugger that will show debug logs in the terminal. You can set `debug_mode=True` on any agent to track sessions or set `PHI_DEBUG=true` in your environment.\n\n```python\nfrom phi.agent import Agent\n\nagent = Agent(markdown=True, debug_mode=True)\nagent.print_response(\"Share a 2 sentence horror story\")\n```\n\n![debugging](https://github.com/user-attachments/assets/c933c787-4a28-4bff-a664-93b29360d9ea)\n\n## Getting help\n\n- Read the docs at <a href=\"https://docs.phidata.com\" target=\"_blank\" rel=\"noopener noreferrer\">docs.phidata.com</a>\n- Post your questions on the [community forum](https://community.phidata.com/)\n- Chat with us on <a href=\"https://discord.gg/4MtYHHrgA8\" target=\"_blank\" rel=\"noopener noreferrer\">discord</a>\n\n## More examples\n\n### Agent that can write and run python code\n\n<details>\n\n<summary>Show code</summary>\n\nThe `PythonAgent` can achieve tasks by writing and running python code.\n\n- Create a file `python_agent.py`\n\n```python\nfrom phi.agent.python import PythonAgent\nfrom phi.model.openai import OpenAIChat\nfrom phi.file.local.csv import CsvFile\n\npython_agent = PythonAgent(\n    model=OpenAIChat(id=\"gpt-4o\"),\n    files=[\n        CsvFile(\n            path=\"https://phidata-public.s3.amazonaws.com/demo_data/IMDB-Movie-Data.csv\",\n            description=\"Contains information about movies from IMDB.\",\n        )\n    ],\n    markdown=True,\n    pip_install=True,\n    show_tool_calls=True,\n)\n\npython_agent.print_response(\"What is the average rating of movies?\")\n```\n\n- Run the `python_agent.py`\n\n```shell\npython python_agent.py\n```\n\n</details>\n\n### Agent that can analyze data using SQL\n\n<details>\n\n<summary>Show code</summary>\n\nThe `DuckDbAgent` can perform data analysis using SQL.\n\n- Create a file `data_analyst.py`\n\n```python\nimport json\nfrom phi.model.openai import OpenAIChat\nfrom phi.agent.duckdb import DuckDbAgent\n\ndata_analyst = DuckDbAgent(\n    model=OpenAIChat(model=\"gpt-4o\"),\n    markdown=True,\n    semantic_model=json.dumps(\n        {\n            \"tables\": [\n                {\n                    \"name\": \"movies\",\n                    \"description\": \"Contains information about movies from IMDB.\",\n                    \"path\": \"https://phidata-public.s3.amazonaws.com/demo_data/IMDB-Movie-Data.csv\",\n                }\n            ]\n        },\n        indent=2,\n    ),\n)\n\ndata_analyst.print_response(\n    \"Show me a histogram of ratings. \"\n    \"Choose an appropriate bucket size but share how you chose it. \"\n    \"Show me the result as a pretty ascii diagram\",\n    stream=True,\n)\n```\n\n- Install duckdb and run the `data_analyst.py` file\n\n```shell\npip install duckdb\n\npython data_analyst.py\n```\n\n</details>\n\n### Check out the [cookbook](https://github.com/phidatahq/phidata/tree/main/cookbook) for more examples.\n\n## Contributions\n\nWe're an open-source project and welcome contributions, please read the [contributing guide](https://github.com/phidatahq/phidata/blob/main/CONTRIBUTING.md) for more information.\n\n## Request a feature\n\n- If you have a feature request, please open an issue or make a pull request.\n- If you have ideas on how we can improve, please create a discussion.\n\n## Telemetry\n\nPhidata logs which model an agent used so we can prioritize features for the most popular models.\n\nYou can disable this by setting `PHI_TELEMETRY=false` in your environment.\n\n<p align=\"left\">\n  <a href=\"#top\">‚¨ÜÔ∏è Back to Top</a>\n</p>\n"
        },
        {
          "name": "cookbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "evals",
          "type": "tree",
          "content": null
        },
        {
          "name": "phi",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.0146484375,
          "content": "[project]\nname = \"phidata\"\nversion = \"2.7.7\"\ndescription = \"Build multi-modal Agents with memory, knowledge and tools.\"\nrequires-python = \">=3.7\"\nreadme = \"README.md\"\nauthors = [\n  {name = \"Ashpreet Bedi\", email = \"ashpreet@phidata.com\"}\n]\n\ndependencies = [\n  \"docstring-parser\",\n  \"gitpython\",\n  \"httpx\",\n  \"pydantic\",\n  \"pydantic-settings\",\n  \"python-dotenv\",\n  \"pyyaml\",\n  \"rich\",\n  \"tomli\",\n  \"typer\",\n  \"typing-extensions\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"mypy\",\n    \"pytest\",\n    \"ruff\",\n    \"types-pyyaml\",\n    \"timeout-decorator\",\n]\ndocker = [\n    \"docker\"\n]\naws = [\n    \"docker\",\n    \"boto3\"\n]\nk8s = [\n    \"docker\",\n    \"kubernetes\"\n]\nserver = [\n    \"fastapi\",\n    \"uvicorn\",\n]\nall = [\n    \"mypy\",\n    \"pytest\",\n    \"ruff\",\n    \"types-pyyaml\",\n    \"docker\",\n    \"boto3\",\n    \"kubernetes\",\n    \"fastapi\",\n    \"uvicorn\",\n]\n\n[project.scripts]\nphi = \"phi.cli.entrypoint:phi_cli\"\n\n[project.urls]\nhomepage = \"https://phidata.com\"\ndocumentation = \"https://docs.phidata.com\"\n\n[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools.packages.find]\ninclude = [\"phi*\"]\n\n[tool.setuptools.package-data]\nphi = [\"py.typed\"]\n\n[tool.pytest.ini_options]\nlog_cli = true\ntestpaths = \"tests\"\n\n[tool.ruff]\nline-length = 120\nexclude = [\"phienv*\", \"aienv*\"]\n# Ignore `F401` (import violations) in all `__init__.py` files\n[tool.ruff.lint.per-file-ignores]\n\"__init__.py\" = [\"F401\"]\n\"phi/k8s/app/traefik/crds.py\" = [\"E501\"]\n\n[tool.mypy]\ncheck_untyped_defs = true\nno_implicit_optional = true\nwarn_unused_configs = true\nplugins = [\"pydantic.mypy\"]\nexclude = [\"phienv*\", \"aienv*\", \"scratch*\", \"wip*\", \"tmp*\", \"cookbook/assistants/examples/*\", \"phi/assistant/openai/*\"]\n\n[[tool.mypy.overrides]]\nmodule = [\n  \"altair.*\",\n  \"anthropic.*\",\n  \"apify_client.*\",\n  \"arxiv.*\",\n  \"atlassian.*\",\n  \"boto3.*\",\n  \"botocore.*\",\n  \"bs4.*\",\n  \"cassio.*\",\n  \"chonkie.*\",\n  \"chromadb.*\",\n  \"clickhouse_connect.*\",\n  \"clip.*\",\n  \"cohere.*\",\n  \"crawl4ai.*\",\n  \"docker.*\",\n  \"docx.*\",\n  \"duckdb.*\",\n  \"duckduckgo_search.*\",\n  \"exa_py.*\",\n  \"fastapi.*\",\n  \"firecrawl.*\",\n  \"github.*\",\n  \"google.*\",\n  \"googlesearch.*\",\n  \"groq.*\",\n  \"huggingface_hub.*\",\n  \"jira.*\",\n  \"kubernetes.*\",\n  \"lancedb.*\",\n  \"langchain.*\",\n  \"langchain_core.*\",\n  \"llama_index.*\",\n  \"mem0.*\",\n  \"mistralai.*\",\n  \"mlx_whisper.*\",\n  \"nest_asyncio.*\",\n  \"newspaper.*\",\n  \"numpy.*\",\n  \"ollama.*\",\n  \"openai.*\",\n  \"openbb.*\",\n  \"pandas.*\",\n  \"pgvector.*\",\n  \"PIL.*\",\n  \"pinecone.*\",\n  \"pinecone_text.*\",\n  \"psycopg.*\",\n  \"psycopg2.*\",\n  \"pyarrow.*\",\n  \"pycountry.*\",\n  \"pymongo.*\",\n  \"pypdf.*\",\n  \"pytz.*\",\n  \"qdrant_client.*\",\n  \"rapidocr_onnxruntime.*\",\n  \"replicate.*\",\n  \"requests.*\",\n  \"scrapegraph_py.*\",\n  \"sentence_transformers.*\",\n  \"serpapi.*\",\n  \"setuptools.*\",\n  \"simplejson.*\",\n  \"slack_sdk.*\",\n  \"spider.*\",\n  \"sqlalchemy.*\",\n  \"starlette.*\",\n  \"streamlit.*\",\n  \"tantivy.*\",\n  \"tavily.*\",\n  \"textract.*\",\n  \"timeout_decorator.*\",\n  \"torch.*\",\n  \"uvicorn.*\",\n  \"vertexai.*\",\n  \"voyageai.*\",\n  \"wikipedia.*\",\n  \"yfinance.*\",\n  \"youtube_transcript_api.*\",\n]\nignore_missing_imports = true\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.5771484375,
          "content": "#\n# This file is autogenerated by pip-compile with Python 3.9\n# by the following command:\n#\n#    ./scripts/upgrade.sh all\n#\nannotated-types==0.7.0\nanyio==4.6.2.post1\ncertifi==2024.8.30\nclick==8.1.7\ndocstring-parser==0.16\nexceptiongroup==1.2.2\ngitdb==4.0.11\ngitpython==3.1.43\nh11==0.14.0\nhttpcore==1.0.6\nhttpx==0.27.2\nidna==3.10\nmarkdown-it-py==3.0.0\nmdurl==0.1.2\npydantic==2.9.2\npydantic-core==2.23.4\npydantic-settings==2.5.2\npygments==2.18.0\npython-dotenv==1.0.1\npyyaml==6.0.2\nrich==13.9.2\nshellingham==1.5.4\nsmmap==5.0.1\nsniffio==1.3.1\ntomli==2.0.2\ntyper==0.12.5\ntyping-extensions==4.12.2\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.095703125,
          "content": "# A minimal setup.py file for supporting editable installs\n\nfrom setuptools import setup\n\nsetup()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}