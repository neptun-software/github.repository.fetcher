{
  "metadata": {
    "timestamp": 1736561077483,
    "page": 4,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Aider-AI/aider",
      "stars": 24638,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": ".BC.*\ntmp*\n*~\nOLD*\n*.pyc\n.DS_Store\n.env\n.venv\n.aider.*\nbuild\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.048828125,
          "content": "[flake8]\nignore = E203,W503\nmax-line-length = 100\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.212890625,
          "content": ".DS_Store\n.vscode/\naider.code-workspace\n*.pyc\n.aider*\naider_chat.egg-info/\nbuild\ndist/\nGemfile.lock\n_site\n.jekyll-cache/\n.jekyll-metadata\naider/__version__.py\naider/_version.py\n.venv/\n.#*\n.gitattributes\ntmp.benchmarks/"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.529296875,
          "content": "repos:\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n        args: [\"--profile\", \"black\"]\n  - repo: https://github.com/psf/black\n    rev: 23.3.0\n    hooks:\n      - id: black\n        args: [\"--line-length\", \"100\", \"--preview\"]\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.1.0\n    hooks:\n      - id: flake8\n        args: [\"--show-source\"]\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.2.6\n    hooks:\n      - id: codespell\n        additional_dependencies:\n          - tomli\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.009765625,
          "content": "aider.chat"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.6787109375,
          "content": "\n# Contributing to the Project\n\nWe welcome contributions in the form of bug reports, feature requests,\nand pull requests (PRs). This document describes how you can\ncontribute.\n\n## Bug Reports and Feature Requests\n\nPlease submit bug reports and feature requests as GitHub issues. This\nhelps us to keep track of them and discuss potential solutions or\nenhancements.\n\n## LLM Benchmark Results\n\nContributions of\n[LLM benchmark results](https://aider.chat/docs/leaderboards/)\nare welcome!\nSee the\n[benchmark README](https://github.com/Aider-AI/aider/blob/main/benchmark/README.md)\nfor information on running aider's code editing benchmarks.\nSubmit results by opening a PR with edits to the\n[benchmark results data files](https://github.com/Aider-AI/aider/blob/main/aider/website/_data/).\n\n\n## Pull Requests\n\nWe appreciate your pull requests. For small changes, feel free to\nsubmit a PR directly. If you are considering a large or significant\nchange, please discuss it in a GitHub issue before submitting the\nPR. This will save both you and the maintainers time, and it helps to\nensure that your contributions can be integrated smoothly.\n\n## Licensing\n\nBefore contributing a PR, please review our\n[Individual Contributor License Agreement](https://aider.chat/docs/legal/contributor-agreement.html).\nAll contributors will be asked to complete the agreement as part of the PR process.\n\n## Setting up a Development Environment\n\n### Clone the Repository\n\n```\ngit clone https://github.com/Aider-AI/aider.git\ncd aider\n```\n\n### Create a Virtual Environment\n\nIt is recommended to create a virtual environment outside of the repository to keep your development environment isolated.\n\n#### Using `venv` (Python 3.9 and later)\n\n```\npython -m venv /path/to/venv\n```\n\n### Activate the Virtual Environment\n\n#### On Windows\n\n```\n/path/to/venv/Scripts/activate\n```\n\n#### On Unix or macOS\n\n```\nsource /path/to/venv/bin/activate\n```\n\n### Install the Project in Editable Mode\n\nThis step allows you to make changes to the source code and have them take effect immediately without reinstalling the package.\n\n```\npip install -e .\n```\n\n### Install the Project Dependencies\n\n```\npip install -r requirements.txt\n```\n\nFor development, at least install the development dependencies:\n\n```\npip install -r requirements/requirements-dev.txt\n```\n\nConsider installing other optional dependencies from the `requirements/` directory, if your development work needs them. \n\nNote that these dependency files are generated by `./scripts/pip-compile.sh` and then committed. See [Managing Dependencies](#managing-dependencies).\n\n### Install Pre-commit Hooks (Optional)\n\nThe project uses pre-commit hooks for code formatting and linting. If you want to install and use these hooks, run:\n\n```\npre-commit install\n```\n\nThis will automatically run the pre-commit hooks when you commit changes to the repository.\n\nNow you should have a fully functional development environment for the Aider project. You can start making changes, running tests, and contributing to the project.\n\n### Handy Opinionated Setup Commands for MacOS / Linux\n\nHere's an example of following the setup instructions above, for your copy/paste pleasure if your system works the same. Start in the project directory.\n\n```\npython3 -m venv ../aider_venv \\\n && source ../aider_venv/bin/activate \\\n && pip3 install -e . \\\n && pip3 install -r requirements.txt \\\n && pip3 install -r requirements/requirements-dev.txt\n```\n\n### Running Tests\n\nJust run `pytest`.\n\n### Building the Docker Image\n\nThe project includes a `Dockerfile` for building a Docker image. You can build the image by running:\n\n```\ndocker build -t aider -f docker/Dockerfile .\n```\n\n### Building the Documentation\n\nThe project's documentation is built using Jekyll and hosted on GitHub Pages. To build the documentation locally, follow these steps:\n\n1. Install Ruby and Bundler (if not already installed).\n2. Navigate to the `aider/website` directory.\n3. Install the required gems:\n   ```\n   bundle install\n   ```\n4. Build the documentation:\n   ```\n   bundle exec jekyll build\n   ```\n5. Preview the website while editing (optional):\n   ```\n   bundle exec jekyll serve\n   ```\n\nThe built documentation will be available in the `aider/website/_site` directory.\n\n## Coding Standards\n\n### Python Compatibility\n\nAider supports Python versions 3.9, 3.10, 3.11, and 3.12. When contributing code, ensure compatibility with these supported Python versions.\n\n### Code Style\n\nThe project follows the [PEP 8](https://www.python.org/dev/peps/pep-0008/) style guide for Python code, with a maximum line length of 100 characters. Additionally, the project uses [isort](https://pycqa.github.io/isort/) and [Black](https://black.readthedocs.io/en/stable/) for sorting imports and code formatting, respectively. Please install the pre-commit hooks to automatically format your code before committing changes.\n\n### No Type Hints\n\nThe project does not use type hints.\n\n### Testing\n\nThe project uses [pytest](https://docs.pytest.org/en/latest/) for running unit tests. The test files are located in the `aider/tests` directory and follow the naming convention `test_*.py`.\n\n#### Running Tests\n\nTo run the entire test suite, use the following command from the project root directory:\n\n```\npytest\n```\n\nYou can also run specific test files or test cases by providing the file path or test name:\n\n```\npytest tests/basic/test_coder.py\npytest tests/basic/test_coder.py::TestCoder::test_specific_case\n```\n\n#### Continuous Integration\n\nThe project uses GitHub Actions for continuous integration. The testing workflows are defined in the following files:\n\n- `.github/workflows/ubuntu-tests.yml`: Runs tests on Ubuntu for Python versions 3.9 through 3.12.\n- `.github/workflows/windows-tests.yml`: Runs that on Windows\n\nThese workflows are triggered on push and pull request events to the `main` branch, ignoring changes to the `aider/website/**` and `README.md` files.\n\n#### Docker Build and Test\n\nThe `.github/workflows/docker-build-test.yml` workflow is used to build a Docker image for the project on every push or pull request event to the `main` branch. It checks out the code, sets up Docker, logs in to DockerHub, and then builds the Docker image without pushing it to the registry.\n\n#### Writing Tests\n\nWhen contributing new features or making changes to existing code, ensure that you write appropriate tests to maintain code coverage. Follow the existing patterns and naming conventions used in the `aider/tests` directory.\n\nIf you need to mock or create test data, consider adding it to the test files or creating separate fixtures or utility functions within the `aider/tests` directory.\n\n#### Test Requirements\n\nThe project uses `pytest` as the testing framework, which is installed as a development dependency. To install the development dependencies, run the following command:\n\n```\npip install -r requirements-dev.txt\n```\n\n### Managing Dependencies\n\nWhen introducing new dependencies, make sure to add them to the appropriate `requirements.in` file (e.g., `requirements.in` for main dependencies, `requirements-dev.in` for development dependencies). Then, run the following commands to update the corresponding `requirements.txt` file:\n\n```\npip install pip-tools\n./scripts/pip-compile.sh\n```\n\nYou can also pass one argument to `pip-compile.sh`, which will flow through to `pip-compile`. For example:\n\n```\n./scripts/pip-compile.sh --upgrade\n```\n\n### Pre-commit Hooks\n\nThe project uses [pre-commit](https://pre-commit.com/) hooks to automatically format code, lint, and run other checks before committing changes. After cloning the repository, run the following command to set up the pre-commit hooks:\n\n```\npre-commit install\n```\n\npre-commit will then run automatically on each `git commit` command. You can use the following command line to run pre-commit manually:\n\n```\npre-commit run --all-files\n```\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 49.7021484375,
          "content": "# Release history\n\n### Aider v0.71.0\n\n- Prompts to help DeepSeek work better when alternating between `/ask` and `/code`.\n- Streaming pretty LLM responses is smoother and faster for long replies.\n- Streaming automatically turns of for model that don't support it\n  - Can now switch to/from `/model o1` and a streaming model\n- Pretty output remains enabled even when editing files with triple-backtick fences\n- Bare `/ask`, `/code` and `/architect` commands now switch the chat mode.\n- Increased default size of the repomap.\n- Increased max chat history tokens limit from 4k to 8k.\n- Turn off fancy input and watch files if terminal is dumb.\n- Added support for custom voice format and input device settings.\n- Disabled Streamlit email prompt, by apaz-cli.\n- Docker container runs as non-root user.\n- Fixed lint command handling of nested spaced strings, by Aaron Weisberg.\n- Added token count feedback when adding command output to chat.\n- Improved error handling for large audio files with automatic format conversion.\n- Improved handling of git repo index errors, by Krazer.\n- Improved unicode handling in console output with ASCII fallback.\n- Added AssertionError to git error handling.\n- Fixed file export path in voice format conversion.\n- Added AttributeError to git error handling.\n- Improved markdown rendering performance with adaptive delay based on render time.\n- Fixed typo in model metadata variable name.\n- Aider wrote 60% of the code in this release.\n\n### Aider v0.70.0\n\n- Full support for o1 models.\n- Watch files now honors `--subtree-only`, and only watches that subtree.\n- Improved prompting for watch files, to work more reliably with more models.\n- New install methods via uv, including one-liners.\n- Support for openrouter/deepseek/deepseek-chat model.\n- Better error handling when interactive commands are attempted via `/load` or `--load`.\n- Display read-only files with abs path if its shorter than rel path.\n- Ask 10% of users to opt-in to analytics.\n- Bugfix for auto-suggest.\n- Gracefully handle unicode errors in git path names.\n- Aider wrote 74% of the code in this release.\n\n### Aider v0.69.1\n\n- Fix for gemini model names in model metadata.\n- Show hints about AI! and AI? when user makes AI comments.\n- Support for running without git installed.\n- Improved environment variable setup messages on Windows.\n\n### Aider v0.69.0\n\n- [Watch files](https://aider.chat/docs/usage/watch.html) improvements:\n  - Use `# ... AI?` comments to trigger aider and ask questions about your code.\n  - Now watches *all* files, not just certain source files.\n  - Use `# AI comments`, `// AI comments`, or `-- AI comments` to give aider instructions in any text file.\n- Full support for Gemini Flash 2.0 Exp:\n  - `aider --model flash` or `aider --model gemini/gemini-2.0-flash-exp`\n- [New `--multiline` flag and `/multiline-mode` command](https://aider.chat/docs/usage/commands.html#entering-multi-line-chat-messages) makes ENTER a soft newline and META-ENTER send the message, by @miradnanali.\n- `/copy-context <instructions>` now takes optional \"instructions\" when [copying code context to the clipboard](https://aider.chat/docs/usage/copypaste.html#copy-aiders-code-context-to-your-clipboard-paste-into-the-web-ui).\n- Improved clipboard error handling with helpful requirements install info.\n- Ask 5% of users if they want to opt-in to analytics.\n- `/voice` now lets you edit the transcribed text before sending.\n- Disabled auto-complete in Y/N prompts.\n- Aider wrote 68% of the code in this release.\n\n### Aider v0.68.0\n\n- [Aider works with LLM web chat UIs](https://aider.chat/docs/usage/copypaste.html).\n  - New `--copy-paste` mode.\n  - New `/copy-context` command.\n- [Set API keys and other environment variables for all providers from command line or yaml conf file](https://aider.chat/docs/config/aider_conf.html#storing-llm-keys).\n  - New `--api-key provider=key` setting.\n  - New `--set-env VAR=value` setting.\n- Added bash and zsh support to `--watch-files`.\n- Better error messages when missing dependencies for Gemini and Bedrock models.\n- Control-D now properly exits the program.\n- Don't count token costs when API provider returns a hard error.\n- Bugfix so watch files works with files that don't have tree-sitter support.\n- Bugfix so o1 models can be used as weak model.\n- Updated shell command prompt.\n- Added docstrings for all Coders.\n- Reorganized command line arguments with improved help messages and grouping.\n- Use the exact `sys.python` for self-upgrades.\n- Added experimental Gemini models.\n- Aider wrote 71% of the code in this release.\n\n### Aider v0.67.0\n\n- [Use aider in your IDE or editor](https://aider.chat/docs/usage/watch.html).\n  - Run `aider --watch-files` and it will watch for instructions you add to your source files.\n  - One-liner `# ...` or `// ...` comments that start or end with \"AI\" are instructions to aider.\n  - When aider sees \"AI!\" it reads and follows all the instructions in AI comments.\n- Support for new Amazon Bedrock Nova models.\n- When `/run` or `/test` have non-zero exit codes, pre-fill \"Fix that\" into the next message prompt.\n- `/diff` now invokes `git diff` to use your preferred diff tool.\n- Added Ctrl-Z support for process suspension.\n- Spinner now falls back to ASCII art if fancy symbols throw unicode errors.\n- `--read` now expands `~` home dirs.\n- Enabled exception capture in analytics.\n- [Aider wrote 61% of the code in this release.](https://aider.chat/HISTORY.html)\n\n### Aider v0.66.0\n\n- PDF support for Sonnet and Gemini models.\n- Added `--voice-input-device` to select audio input device for voice recording, by @preynal.\n- Added `--timeout` option to configure API call timeouts.\n- Set cwd to repo root when running shell commands.\n- Added Ctrl-Up/Down keyboard shortcuts for per-message history navigation.\n- Improved error handling for failed .gitignore file operations.\n- Improved error handling for input history file permissions.\n- Improved error handling for analytics file access.\n- Removed spurious warning about disabling pretty in VSCode.\n- Removed broken support for Dart.\n- Bugfix when scraping URLs found in chat messages.\n- Better handling of __version__ import errors.\n- Improved `/drop` command to support substring matching for non-glob patterns.\n- Aider wrote 82% of the code in this release.\n\n### Aider v0.65.1\n\n- Bugfix to `--alias`.\n\n### Aider v0.65.0\n\n- Added `--alias` config to define [custom model aliases](https://aider.chat/docs/config/model-aliases.html).\n- Added `--[no-]detect-urls` flag to disable detecting and offering to scrape URLs found in the chat.\n- Ollama models now default to an 8k context window.\n- Added [RepoMap support for Dart language](https://aider.chat/docs/languages.html) by @malkoG.\n- Ask 2.5% of users if they want to opt-in to [analytics](https://aider.chat/docs/more/analytics.html).\n- Skip suggesting files that share names with files already in chat.\n- `/editor` returns and prefill the file content into the prompt, so you can use `/editor` to compose messages that start with `/commands`, etc.\n- Enhanced error handling for analytics.\n- Improved handling of UnknownEditFormat exceptions with helpful documentation links.\n- Bumped dependencies to pick up grep-ast 0.4.0 for Dart language support.\n- Aider wrote 81% of the code in this release.\n\n### Aider v0.64.1\n\n- Disable streaming for o1 on OpenRouter.\n\n### Aider v0.64.0\n\n- Added [`/editor` command](https://aider.chat/docs/usage/commands.html) to open system editor for writing prompts, by @thehunmonkgroup.\n- Full support for `gpt-4o-2024-11-20`.\n- Stream o1 models by default.\n- `/run` and suggested shell commands are less mysterious and now confirm that they \"Added XX lines of output to the chat.\"\n- Ask 1% of users if they want to opt-in to [analytics](https://aider.chat/docs/more/analytics.html).\n- Added support for [optional multiline input tags](https://aider.chat/docs/usage/commands.html#entering-multi-line-chat-messages) with matching closing tags.\n- Improved [model settings configuration](https://aider.chat/docs/config/adv-model-settings.html#global-extra-params) with support for global `extra_params` for `litellm.completion()`.\n- Architect mode now asks to add files suggested by the LLM.\n- Fixed bug in fuzzy model name matching.\n- Added Timeout exception to handle API provider timeouts.\n- Added `--show-release-notes` to control release notes display on first run of new version.\n- Save empty dict to cache file on model metadata download failure, to delay retry.\n- Improved error handling and code formatting.\n- Aider wrote 74% of the code in this release.\n\n###  Aider v0.63.2\n\n- Fixed bug in fuzzy model name matching when litellm provider info is missing.\n- Modified model metadata file loading to allow override of resource file.\n- Allow recursive loading of dirs using `--read`.\n- Updated dependency versions to pick up litellm fix for ollama models.\n- Added exponential backoff retry when writing files to handle editor file locks.\n- Updated Qwen 2.5 Coder 32B model configuration.\n\n### Aider v0.63.1\n\n- Fixed bug in git ignored file handling.\n- Improved error handling for git operations.\n\n### Aider v0.63.0\n\n- Support for Qwen 2.5 Coder 32B.\n- `/web` command just adds the page to the chat, without triggering an LLM response.\n- Improved prompting for the user's preferred chat language.\n- Improved handling of LiteLLM exceptions.\n- Bugfix for double-counting tokens when reporting cache stats.\n- Bugfix for the LLM creating new files.\n- Other small bug fixes.\n- Aider wrote 55% of the code in this release.\n\n### Aider v0.62.0\n\n- Full support for Claude 3.5 Haiku\n  - Scored 75% on [aider's code editing leaderboard](https://aider.chat/docs/leaderboards/).\n  - Almost as good as Sonnet at much lower cost.\n  - Launch with `--haiku` to use it.\n- Easily apply file edits from ChatGPT, Claude or other web apps\n  - Chat with ChatGPT or Claude via their web app. \n  - Give it your source files and ask for the changes you want.\n  - Use the web app's \"copy response\" button to copy the entire reply from the LLM.\n  - Run `aider --apply-clipboard-edits file-to-edit.js`.\n  - Aider will edit your file with the LLM's changes.\n- Bugfix for creating new files.\n- Aider wrote 84% of the code in this release.  \n\n### Aider v0.61.0\n\n- Load and save aider slash-commands to files:\n  - `/save <fname>` command will make a file of `/add` and `/read-only` commands that recreate the current file context in the chat.\n  - `/load <fname>` will replay the commands in the file.\n  - You can use `/load` to run any arbitrary set of slash-commands, not just `/add` and `/read-only`.\n  - Use `--load <fname>` to run a list of commands on launch, before the interactive chat begins.\n- Anonymous, opt-in [analytics](https://aider.chat/docs/more/analytics.html) with no personal data sharing.\n- Aider follows litellm's `supports_vision` attribute to enable image support for models.\n- Bugfix for when diff mode flexibly handles the model using the wrong filename.\n- Displays filenames in sorted order for `/add` and `/read-only`.\n- New `--no-fancy-input` switch disables prompt toolkit input, now still available with `--no-pretty`.\n- Override browser config with `--no-browser` or `--no-gui`.\n- Offer to open documentation URLs when errors occur.\n- Properly support all o1 models, regardless of provider.\n- Improved layout of filenames above input prompt.\n- Better handle corrupted repomap tags cache.\n- Improved handling of API errors, especially when accessing the weak model.\n- Aider wrote 68% of the code in this release.\n\n### Aider v0.60.1\n\n- Enable image support for Sonnet 10/22.\n- Display filenames in sorted order.\n\n### Aider v0.60.0\n\n- Full support for Sonnet 10/22, the new SOTA model on aider's code editing benchmark.\n  - Aider uses Sonnet 10/22 by default.\n- Improved formatting of added and read-only files above chat prompt, by @jbellis.\n- Improved support for o1 models by more flexibly parsing their nonconforming code edit replies.\n- Corrected diff edit format prompt that only the first match is replaced.\n- Stronger whole edit format prompt asking for clean file names.\n- Now offers to add `.env` to the `.gitignore` file.\n- Ships with a small model metadata json file to handle models not yet updated in litellm.\n- Model settings for o1 models on azure.\n- Bugfix to properly include URLs in `/help` RAG results.\n- Aider wrote 49% of the code in this release.\n\n### Aider v0.59.1\n\n- Check for obsolete `yes: true` in yaml config, show helpful error.\n- Model settings for openrouter/anthropic/claude-3.5-sonnet:beta\n\n### Aider v0.59.0\n\n- Improvements to `/read-only`:\n  - Now supports shell-style auto-complete of the full file system.\n  - Still auto-completes the full paths of the repo files like `/add`.\n  - Now supports globs like `src/**/*.py`\n- Renamed `--yes` to `--yes-always`.\n  - Now uses `AIDER_YES_ALWAYS` env var and `yes-always:` yaml key.\n  - Existing YAML and .env files will need to be updated.\n  - Can still abbreviate to `--yes` on the command line.\n- Config file now uses standard YAML list syntax with `  - list entries`, one per line.  \n- `/settings` now includes the same announcement lines that would print at launch.\n- Sanity checks the `--editor-model` on launch now, same as main and weak models.\n- Added `--skip-sanity-check-repo` switch to speedup launch in large repos.\n- Bugfix so architect mode handles Control-C properly.\n- Repo-map is deterministic now, with improved caching logic.\n- Improved commit message prompt.\n- Aider wrote 77% of the code in this release.\n\n### Aider v0.58.1\n\n- Fixed bug where cache warming pings caused subsequent user messages to trigger a tight loop of LLM requests.\n\n### Aider v0.58.0\n\n- [Use a pair of Architect/Editor models for improved coding](https://aider.chat/2024/09/26/architect.html)\n  - Use a strong reasoning model like o1-preview as your Architect.\n  - Use a cheaper, faster model like gpt-4o as your Editor.\n- New `--o1-preview` and `--o1-mini` shortcuts.\n- Support for new Gemini 002 models.\n- Better support for Qwen 2.5 models.\n- Many confirmation questions can be skipped for the rest of the session with \"(D)on't ask again\" response.\n- Autocomplete for `/read-only` supports the entire filesystem.\n- New settings for completion menu colors.\n- New `/copy` command to copy the last LLM response to the clipboard.\n- Renamed `/clipboard` to `/paste`.\n- Will now follow HTTP redirects when scraping urls.\n- New `--voice-format` switch to send voice audio as wav/mp3/webm, by @mbailey.\n- ModelSettings takes `extra_params` dict to specify any extras to pass to `litellm.completion()`.\n- Support for cursor shapes when in vim mode.\n- Numerous bug fixes.\n- Aider wrote 53% of the code in this release.\n\n### Aider v0.57.1\n\n- Fixed dependency conflict between aider-chat[help] and [playwright].\n\n### Aider v0.57.0\n\n- Support for OpenAI o1 models:\n  - o1-preview now works well with diff edit format.\n  - o1-preview with diff now matches SOTA leaderboard result with whole edit format.\n  - `aider --model o1-mini`\n  - `aider --model o1-preview`\n- On Windows, `/run` correctly uses PowerShell or cmd.exe.\n- Support for new 08-2024 Cohere models, by @jalammar.\n- Can now recursively add directories with `/read-only`.\n- User input prompts now fall back to simple `input()` if `--no-pretty` or a Windows console is not available.\n- Improved sanity check of git repo on startup.\n- Improvements to prompt cache chunking strategy.\n- Removed \"No changes made to git tracked files\".\n- Numerous bug fixes for corner case crashes.\n- Updated all dependency versions.\n- Aider wrote 70% of the code in this release.\n\n### Aider v0.56.0\n\n- Enables prompt caching for Sonnet via OpenRouter by @fry69\n- Enables 8k output tokens for Sonnet via VertexAI and DeepSeek V2.5.\n- New `/report` command to open your browser with a pre-populated GitHub Issue.\n- New `--chat-language` switch to set the spoken language.\n- Now `--[no-]suggest-shell-commands` controls both prompting for and offering to execute shell commands.\n- Check key imports on launch, provide helpful error message if dependencies aren't available.\n- Renamed `--models` to `--list-models` by @fry69.\n- Numerous bug fixes for corner case crashes.\n- Aider wrote 56% of the code in this release.\n\n### Aider v0.55.0\n\n- Only print the pip command when self updating on Windows, without running it.\n- Converted many error messages to warning messages.\n- Added `--tool-warning-color` setting.\n- Blanket catch and handle git errors in any `/command`.\n- Catch and handle glob errors in `/add`, errors writing files.\n- Disabled built in linter for typescript.\n- Catch and handle terminals which don't support pretty output.\n- Catch and handle playwright and pandoc errors.\n- Catch `/voice` transcription exceptions, show the WAV file so the user can recover it.\n- Aider wrote 53% of the code in this release.\n\n### Aider v0.54.12\n\n- Switched to `vX.Y.Z.dev` version naming.\n\n### Aider v0.54.11\n\n- Improved printed pip command output on Windows.\n\n### Aider v0.54.10\n\n- Bugfix to test command in platform info.\n\n### Aider v0.54.9\n\n- Include important devops files in the repomap.\n- Print quoted pip install commands to the user.\n- Adopt setuptools_scm to provide dev versions with git hashes.\n- Share active test and lint commands with the LLM.\n- Catch and handle most errors creating new files, reading existing files.\n- Catch and handle most git errors.\n- Added --verbose debug output for shell commands.\n\n### Aider v0.54.8\n\n- Startup QOL improvements:\n  - Sanity check the git repo and exit gracefully on problems.\n  - Pause for confirmation after model sanity check to allow user to review warnings.\n- Bug fix for shell commands on Windows.\n- Do not fuzzy match filenames when LLM is creating a new file, by @ozapinq\n- Numerous corner case bug fixes submitted via new crash report -> GitHub Issue feature.\n- Crash reports now include python version, OS, etc.\n\n### Aider v0.54.7\n\n- Offer to submit a GitHub issue pre-filled with uncaught exception info.\n- Bugfix for infinite output.\n\n### Aider v0.54.6\n\n- New `/settings` command to show active settings.\n- Only show cache warming status update if `--verbose`.\n\n### Aider v0.54.5\n\n- Bugfix for shell commands on Windows.\n- Refuse to make git repo in $HOME, warn user.\n- Don't ask again in current session about a file the user has said not to add to the chat.\n- Added `--update` as an alias for `--upgrade`.\n\n### Aider v0.54.4\n\n- Bugfix to completions for `/model` command.\n- Bugfix: revert home dir special case.\n\n### Aider v0.54.3\n\n- Dependency `watchdog<5` for docker image.\n\n### Aider v0.54.2\n\n- When users launch aider in their home dir, help them find/create a repo in a subdir.\n- Added missing `pexpect` dependency.\n\n### Aider v0.54.0\n\n- Added model settings for `gemini/gemini-1.5-pro-exp-0827` and `gemini/gemini-1.5-flash-exp-0827`.\n- Shell and `/run` commands can now be interactive in environments where a pty is available.\n- Optionally share output of suggested shell commands back to the LLM.\n- New `--[no-]suggest-shell-commands` switch to configure shell commands.\n- Performance improvements for autocomplete in large/mono repos.\n- New `--upgrade` switch to install latest version of aider from pypi.\n- Bugfix to `--show-prompt`.\n- Disabled automatic reply to the LLM on `/undo` for all models.\n- Removed pager from `/web` output.\n- Aider wrote 64% of the code in this release.\n\n### Aider v0.53.0\n\n- [Keep your prompt cache from expiring](https://aider.chat/docs/usage/caching.html#preventing-cache-expiration) with `--cache-keepalive-pings`.\n  - Pings the API every 5min to keep the cache warm.\n- You can now bulk accept/reject a series of add url and run shell confirmations.\n- Improved matching of filenames from S/R blocks with files in chat.\n- Stronger prompting for Sonnet to make edits in code chat mode.\n- Stronger prompting for the LLM to specify full file paths.\n- Improved shell command prompting.\n- Weak model now uses `extra_headers`, to support Anthropic beta features.\n- New `--install-main-branch` to update to the latest dev version of aider.\n- Improved error messages on attempt to add not-git subdir to chat.\n- Show model metadata info on `--verbose`.\n- Improved warnings when LLMs env variables aren't set.\n- Bugfix to windows filenames which contain `\\_`.\n- Aider wrote 59% of the code in this release.\n\n### Aider v0.52.1\n\n- Bugfix for NameError when applying edits.\n\n### Aider v0.52.0\n\n- Aider now offers to run shell commands:\n  - Launch a browser to view updated html/css/js.\n  - Install new dependencies.\n  - Run DB migrations. \n  - Run the program to exercise changes.\n  - Run new test cases.\n- `/read` and `/drop` now expand `~` to the home dir.\n- Show the active chat mode at aider prompt.\n- New `/reset` command to `/drop` files and `/clear` chat history.\n- New `--map-multiplier-no-files` to control repo map size multiplier when no files are in the chat.\n  - Reduced default multiplier to 2.\n- Bugfixes and improvements to auto commit sequencing.\n- Improved formatting of token reports and confirmation dialogs.\n- Default OpenAI model is now `gpt-4o-2024-08-06`.\n- Bumped dependencies to pickup litellm bugfixes.\n- Aider wrote 68% of the code in this release.\n\n### Aider v0.51.0\n\n- Prompt caching for Anthropic models with `--cache-prompts`.\n  - Caches the system prompt, repo map and `/read-only` files.\n- Repo map recomputes less often in large/mono repos or when caching enabled.\n  - Use `--map-refresh <always|files|manual|auto>` to configure.\n- Improved cost estimate logic for caching.\n- Improved editing performance on Jupyter Notebook `.ipynb` files.\n- Show which config yaml file is loaded with `--verbose`.\n- Bumped dependency versions.\n- Bugfix: properly load `.aider.models.metadata.json` data.\n- Bugfix: Using `--msg /ask ...` caused an exception.\n- Bugfix: litellm tokenizer bug for images.\n- Aider wrote 56% of the code in this release.\n\n### Aider v0.50.1\n\n- Bugfix for provider API exceptions.\n\n### Aider v0.50.0\n\n- Infinite output for DeepSeek Coder, Mistral models in addition to Anthropic's models.\n- New `--deepseek` switch to use DeepSeek Coder.\n- DeepSeek Coder uses 8k token output.\n- New `--chat-mode <mode>` switch to launch in ask/help/code modes.\n- New `/code <message>` command request a code edit while in `ask` mode.\n- Web scraper is more robust if page never idles.\n- Improved token and cost reporting for infinite output.\n- Improvements and bug fixes for `/read` only files.\n- Switched from `setup.py` to `pyproject.toml`, by @branchvincent.\n- Bug fix to persist files added during `/ask`.\n- Bug fix for chat history size in `/tokens`.\n- Aider wrote 66% of the code in this release.\n\n### Aider v0.49.1\n\n- Bugfix to `/help`.\n\n### Aider v0.49.0\n\n- Add read-only files to the chat context with `/read` and `--read`,  including from outside the git repo.\n- `/diff` now shows diffs of all changes resulting from your request, including lint and test fixes.\n- New `/clipboard` command to paste images or text from the clipboard, replaces `/add-clipboard-image`.\n- Now shows the markdown scraped when you add a url with `/web`.\n- When [scripting aider](https://aider.chat/docs/scripting.html) messages can now contain in-chat `/` commands.\n- Aider in docker image now suggests the correct command to update to latest version.\n- Improved retries on API errors (was easy to test during Sonnet outage).\n- Added `--mini` for `gpt-4o-mini`.\n- Bugfix to keep session cost accurate when using `/ask` and `/help`.\n- Performance improvements for repo map calculation.\n- `/tokens` now shows the active model.\n- Enhanced commit message attribution options:\n  - New `--attribute-commit-message-author` to prefix commit messages with 'aider: ' if aider authored the changes, replaces `--attribute-commit-message`.\n  - New `--attribute-commit-message-committer` to prefix all commit messages with 'aider: '.\n- Aider wrote 61% of the code in this release.\n\n### Aider v0.48.1\n\n- Added `openai/gpt-4o-2024-08-06`.\n- Worked around litellm bug that removes OpenRouter app headers when using `extra_headers`.\n- Improved progress indication during repo map processing.\n- Corrected instructions for upgrading the docker container to latest aider version.\n- Removed obsolete 16k token limit on commit diffs, use per-model limits.\n\n### Aider v0.48.0\n\n- Performance improvements for large/mono repos.\n- Added `--subtree-only` to limit aider to current directory subtree.\n  - Should help with large/mono repo performance.\n- New `/add-clipboard-image` to add images to the chat from your clipboard.\n- Use `--map-tokens 1024` to use repo map with any model.\n- Support for Sonnet's 8k output window.\n  - [Aider already supported infinite output from Sonnet.](https://aider.chat/2024/07/01/sonnet-not-lazy.html)\n- Workaround litellm bug for retrying API server errors.\n- Upgraded dependencies, to pick up litellm bug fixes.\n- Aider wrote 44% of the code in this release.\n\n### Aider v0.47.1\n\n- Improvements to conventional commits prompting.\n\n### Aider v0.47.0\n\n- [Commit message](https://aider.chat/docs/git.html#commit-messages) improvements:\n  - Added Conventional Commits guidelines to commit message prompt.\n  - Added `--commit-prompt` to customize the commit message prompt.\n  - Added strong model as a fallback for commit messages (and chat summaries).\n- [Linting](https://aider.chat/docs/usage/lint-test.html) improvements:\n  - Ask before fixing lint errors.\n  - Improved performance of `--lint` on all dirty files in repo.\n  - Improved lint flow, now doing code edit auto-commit before linting.\n  - Bugfix to properly handle subprocess encodings (also for `/run`).\n- Improved [docker support](https://aider.chat/docs/install/docker.html):\n  - Resolved permission issues when using `docker run --user xxx`.\n  - New `paulgauthier/aider-full` docker image, which includes all extras.\n- Switching to code and ask mode no longer summarizes the chat history.\n- Added graph of aider's contribution to each release.\n- Generic auto-completions are provided for `/commands` without a completion override.\n- Fixed broken OCaml tags file.\n- Bugfix in `/run` add to chat approval logic.\n- Aider wrote 58% of the code in this release.\n\n### Aider v0.46.1\n\n- Downgraded stray numpy dependency back to 1.26.4.\n\n### Aider v0.46.0\n\n- New `/ask <question>` command to ask about your code, without making any edits.\n- New `/chat-mode <mode>` command to switch chat modes:\n  - ask: Ask questions about your code without making any changes.\n  - code: Ask for changes to your code (using the best edit format).\n  - help: Get help about using aider (usage, config, troubleshoot).\n- Add `file: CONVENTIONS.md` to `.aider.conf.yml` to always load a specific file.\n  - Or `file: [file1, file2, file3]` to always load multiple files.\n- Enhanced token usage and cost reporting. Now works when streaming too.\n- Filename auto-complete for `/add` and `/drop` is now case-insensitive.\n- Commit message improvements:\n  - Updated commit message prompt to use imperative tense.\n  - Fall back to main model if weak model is unable to generate a commit message.\n- Stop aider from asking to add the same url to the chat multiple times.\n- Updates and fixes to `--no-verify-ssl`:\n  - Fixed regression that broke it in v0.42.0.\n  - Disables SSL certificate verification when `/web` scrapes websites.\n- Improved error handling and reporting in `/web` scraping functionality\n- Fixed syntax error in Elm's tree-sitter scm file (by @cjoach).\n- Handle UnicodeEncodeError when streaming text to the terminal.\n- Updated dependencies to latest versions.\n- Aider wrote 45% of the code in this release.\n\n### Aider v0.45.1\n\n- Use 4o-mini as the weak model wherever 3.5-turbo was used.\n\n### Aider v0.45.0\n\n- GPT-4o mini scores similar to the original GPT 3.5, using whole edit format.\n- Aider is better at offering to add files to the chat on Windows.\n- Bugfix corner cases for `/undo` with new files or new repos.\n- Now shows last 4 characters of API keys in `--verbose` output.\n- Bugfix to precedence of multiple `.env` files.\n- Bugfix to gracefully handle HTTP errors when installing pandoc.\n- Aider wrote 42% of the code in this release.\n\n### Aider v0.44.0\n\n- Default pip install size reduced by 3-12x.\n- Added 3 package extras, which aider will offer to install when needed:\n  - `aider-chat[help]`\n  - `aider-chat[browser]`\n  - `aider-chat[playwright]`\n- Improved regex for detecting URLs in user chat messages.\n- Bugfix to globbing logic when absolute paths are included in `/add`.\n- Simplified output of `--models`.\n- The `--check-update` switch was renamed to `--just-check-updated`.\n- The `--skip-check-update` switch was renamed to `--[no-]check-update`.\n- Aider wrote 29% of the code in this release (157/547 lines).\n\n### Aider v0.43.4\n\n- Added scipy back to main requirements.txt.\n\n### Aider v0.43.3\n\n- Added build-essentials back to main Dockerfile.\n\n### Aider v0.43.2\n\n- Moved HuggingFace embeddings deps into [hf-embed] extra.\n- Added [dev] extra.\n\n### Aider v0.43.1\n\n- Replace the torch requirement with the CPU only version, because the GPU versions are huge.\n\n### Aider v0.43.0\n\n- Use `/help <question>` to [ask for help about using aider](https://aider.chat/docs/troubleshooting/support.html), customizing settings, troubleshooting, using LLMs, etc.\n- Allow multiple use of `/undo`.\n- All config/env/yml/json files now load from home, git root, cwd and named command line switch.\n- New `$HOME/.aider/caches` dir for app-wide expendable caches.\n- Default `--model-settings-file` is now `.aider.model.settings.yml`.\n- Default `--model-metadata-file` is now `.aider.model.metadata.json`.\n- Bugfix affecting launch with `--no-git`.\n- Aider wrote 9% of the 424 lines edited in this release.\n\n### Aider v0.42.0\n\n- Performance release:\n  - 5X faster launch!\n  - Faster auto-complete in large git repos (users report ~100X speedup)!\n\n### Aider v0.41.0\n\n- [Allow Claude 3.5 Sonnet to stream back >4k tokens!](https://aider.chat/2024/07/01/sonnet-not-lazy.html)\n  - It is the first model capable of writing such large coherent, useful code edits.\n  - Do large refactors or generate multiple files of new code in one go.\n- Aider now uses `claude-3-5-sonnet-20240620` by default if `ANTHROPIC_API_KEY` is set in the environment.\n- [Enabled image support](https://aider.chat/docs/usage/images-urls.html) for 3.5 Sonnet and for GPT-4o & 3.5 Sonnet via OpenRouter (by @yamitzky).\n- Added `--attribute-commit-message` to prefix aider's commit messages with \"aider:\".\n- Fixed regression in quality of one-line commit messages.\n- Automatically retry on Anthropic `overloaded_error`.\n- Bumped dependency versions.\n\n### Aider v0.40.6\n\n- Fixed `/undo` so it works regardless of `--attribute` settings.\n\n### Aider v0.40.5\n\n- Bump versions to pickup latest litellm to fix streaming issue with Gemini\n  - https://github.com/BerriAI/litellm/issues/4408\n\n### Aider v0.40.1\n\n- Improved context awareness of repomap.\n- Restored proper `--help` functionality.\n\n### Aider v0.40.0\n\n- Improved prompting to discourage Sonnet from wasting tokens emitting unchanging code (#705).\n- Improved error info for token limit errors.\n- Options to suppress adding \"(aider)\" to the [git author and committer names](https://aider.chat/docs/git.html#commit-attribution).\n- Use `--model-settings-file` to customize per-model settings, like use of repo-map (by @caseymcc).\n- Improved invocation of flake8 linter for python code.\n\n\n### Aider v0.39.0\n\n- Use `--sonnet` for Claude 3.5 Sonnet, which is the top model on [aider's LLM code editing leaderboard](https://aider.chat/docs/leaderboards/#claude-35-sonnet-takes-the-top-spot).\n- All `AIDER_xxx` environment variables can now be set in `.env` (by @jpshack-at-palomar).\n- Use `--llm-history-file` to log raw messages sent to the LLM (by @daniel-vainsencher).\n- Commit messages are no longer prefixed with \"aider:\". Instead the git author and committer names have \"(aider)\" added.\n\n### Aider v0.38.0\n\n- Use `--vim` for [vim keybindings](https://aider.chat/docs/usage/commands.html#vi) in the chat.\n- [Add LLM metadata](https://aider.chat/docs/llms/warnings.html#specifying-context-window-size-and-token-costs) via `.aider.models.json` file (by @caseymcc).\n- More detailed [error messages on token limit errors](https://aider.chat/docs/troubleshooting/token-limits.html).\n- Single line commit messages, without the recent chat messages.\n- Ensure `--commit --dry-run` does nothing.\n- Have playwright wait for idle network to better scrape js sites.\n- Documentation updates, moved into website/ subdir.\n- Moved tests/ into aider/tests/.\n\n### Aider v0.37.0\n\n- Repo map is now optimized based on text of chat history as well as files added to chat.\n- Improved prompts when no files have been added to chat to solicit LLM file suggestions.\n- Aider will notice if you paste a URL into the chat, and offer to scrape it.\n- Performance improvements the repo map, especially in large repos.\n- Aider will not offer to add bare filenames like `make` or `run` which may just be words.\n- Properly override `GIT_EDITOR` env for commits if it is already set.\n- Detect supported audio sample rates for `/voice`.\n- Other small bug fixes.\n\n### Aider v0.36.0\n\n- [Aider can now lint your code and fix any errors](https://aider.chat/2024/05/22/linting.html).\n  - Aider automatically lints and fixes after every LLM edit.\n  - You can manually lint-and-fix files with `/lint` in the chat or `--lint` on the command line.\n  - Aider includes built in basic linters for all supported tree-sitter languages.\n  - You can also configure aider to use your preferred linter with `--lint-cmd`.\n- Aider has additional support for running tests and fixing problems.\n  - Configure your testing command with `--test-cmd`.\n  - Run tests with `/test` or from the command line with `--test`.\n  - Aider will automatically attempt to fix any test failures.\n  \n\n### Aider v0.35.0\n\n- Aider now uses GPT-4o by default.\n  - GPT-4o tops the [aider LLM code editing leaderboard](https://aider.chat/docs/leaderboards/) at 72.9%, versus 68.4% for Opus.\n  - GPT-4o takes second on [aider's refactoring leaderboard](https://aider.chat/docs/leaderboards/#code-refactoring-leaderboard) with 62.9%, versus Opus at 72.3%.\n- Added `--restore-chat-history` to restore prior chat history on launch, so you can continue the last conversation.\n- Improved reflection feedback to LLMs using the diff edit format.\n- Improved retries on `httpx` errors.\n\n### Aider v0.34.0\n\n- Updated prompting to use more natural phrasing about files, the git repo, etc. Removed reliance on read-write/read-only terminology.\n- Refactored prompting to unify some phrasing across edit formats.\n- Enhanced the canned assistant responses used in prompts.\n- Added explicit model settings for `openrouter/anthropic/claude-3-opus`, `gpt-3.5-turbo`\n- Added `--show-prompts` debug switch.\n- Bugfix: catch and retry on all litellm exceptions.\n\n\n### Aider v0.33.0\n\n- Added native support for [Deepseek models](https://aider.chat/docs/llms.html#deepseek) using `DEEPSEEK_API_KEY` and `deepseek/deepseek-chat`, etc rather than as a generic OpenAI compatible API.\n\n### Aider v0.32.0\n\n- [Aider LLM code editing leaderboards](https://aider.chat/docs/leaderboards/) that rank popular models according to their ability to edit code.\n  - Leaderboards include GPT-3.5/4 Turbo, Opus, Sonnet, Gemini 1.5 Pro, Llama 3, Deepseek Coder & Command-R+.\n- Gemini 1.5 Pro now defaults to a new diff-style edit format (diff-fenced), enabling it to work better with larger code bases.\n- Support for Deepseek-V2, via more a flexible config of system messages in the diff edit format.\n- Improved retry handling on errors from model APIs.\n- Benchmark outputs results in YAML, compatible with leaderboard.\n\n### Aider v0.31.0\n\n- [Aider is now also AI pair programming in your browser!](https://aider.chat/2024/05/02/browser.html) Use the `--browser` switch to launch an experimental browser based version of aider.\n- Switch models during the chat with `/model <name>` and search the list of available models with `/models <query>`.\n\n### Aider v0.30.1\n\n- Adding missing `google-generativeai` dependency\n\n### Aider v0.30.0\n\n- Added [Gemini 1.5 Pro](https://aider.chat/docs/llms.html#free-models) as a recommended free model.\n- Allow repo map for \"whole\" edit format.\n- Added `--models <MODEL-NAME>` to search the available models.\n- Added `--no-show-model-warnings` to silence model warnings.\n\n### Aider v0.29.2\n\n- Improved [model warnings](https://aider.chat/docs/llms.html#model-warnings) for unknown or unfamiliar models\n\n### Aider v0.29.1\n\n- Added better support for groq/llama3-70b-8192\n\n### Aider v0.29.0\n\n- Added support for [directly connecting to Anthropic, Cohere, Gemini and many other LLM providers](https://aider.chat/docs/llms.html).\n- Added `--weak-model <model-name>` which allows you to specify which model to use for commit messages and chat history summarization.\n- New command line switches for working with popular models:\n  - `--4-turbo-vision`\n  - `--opus`\n  - `--sonnet`\n  - `--anthropic-api-key`\n- Improved \"whole\" and \"diff\" backends to better support [Cohere's free to use Command-R+ model](https://aider.chat/docs/llms.html#cohere).\n- Allow `/add` of images from anywhere in the filesystem.\n- Fixed crash when operating in a repo in a detached HEAD state.\n- Fix: Use the same default model in CLI and python scripting.\n\n### Aider v0.28.0\n\n- Added support for new `gpt-4-turbo-2024-04-09` and `gpt-4-turbo` models.\n  - Benchmarked at 61.7% on Exercism benchmark, comparable to `gpt-4-0613` and worse than the `gpt-4-preview-XXXX` models. See [recent Exercism benchmark results](https://aider.chat/2024/03/08/claude-3.html).\n  - Benchmarked at 34.1% on the refactoring/laziness benchmark, significantly worse than the `gpt-4-preview-XXXX` models. See [recent refactor bencmark results](https://aider.chat/2024/01/25/benchmarks-0125.html).\n  - Aider continues to default to `gpt-4-1106-preview` as it performs best on both benchmarks, and significantly better on the refactoring/laziness benchmark.\n\n### Aider v0.27.0\n\n- Improved repomap support for typescript, by @ryanfreckleton.\n- Bugfix: Only /undo the files which were part of the last commit, don't stomp other dirty files\n- Bugfix: Show clear error message when OpenAI API key is not set.\n- Bugfix: Catch error for obscure languages without tags.scm file.\n\n### Aider v0.26.1\n\n- Fixed bug affecting parsing of git config in some environments.\n\n### Aider v0.26.0\n\n- Use GPT-4 Turbo by default.\n- Added `-3` and `-4` switches to use GPT 3.5 or GPT-4 (non-Turbo).\n- Bug fix to avoid reflecting local git errors back to GPT.\n- Improved logic for opening git repo on launch.\n\n### Aider v0.25.0\n\n- Issue a warning if user adds too much code to the chat.\n  - https://aider.chat/docs/faq.html#how-can-i-add-all-the-files-to-the-chat\n- Vocally refuse to add files to the chat that match `.aiderignore`\n  - Prevents bug where subsequent git commit of those files will fail.\n- Added `--openai-organization-id` argument.\n- Show the user a FAQ link if edits fail to apply.\n- Made past articles part of https://aider.chat/blog/\n\n### Aider v0.24.1\n\n- Fixed bug with cost computations when --no-steam in effect\n\n### Aider v0.24.0\n\n- New `/web <url>` command which scrapes the url, turns it into fairly clean markdown and adds it to the chat.\n- Updated all OpenAI model names, pricing info\n- Default GPT 3.5 model is now `gpt-3.5-turbo-0125`.\n- Bugfix to the `!` alias for `/run`.\n\n### Aider v0.23.0\n\n- Added support for `--model gpt-4-0125-preview` and OpenAI's alias `--model gpt-4-turbo-preview`. The `--4turbo` switch remains an alias for `--model gpt-4-1106-preview` at this time.\n- New `/test` command that runs a command and adds the output to the chat on non-zero exit status.\n- Improved streaming of markdown to the terminal.\n- Added `/quit` as alias for `/exit`.\n- Added `--skip-check-update` to skip checking for the update on launch.\n- Added `--openrouter` as a shortcut for `--openai-api-base https://openrouter.ai/api/v1`\n- Fixed bug preventing use of env vars `OPENAI_API_BASE, OPENAI_API_TYPE, OPENAI_API_VERSION, OPENAI_API_DEPLOYMENT_ID`.\n\n### Aider v0.22.0\n\n- Improvements for unified diff editing format.\n- Added ! as an alias for /run.\n- Autocomplete for /add and /drop now properly quotes filenames with spaces.\n- The /undo command asks GPT not to just retry reverted edit.\n\n### Aider v0.21.1\n\n- Bugfix for unified diff editing format.\n- Added --4turbo and --4 aliases for --4-turbo.\n\n### Aider v0.21.0\n\n- Support for python 3.12.\n- Improvements to unified diff editing format.\n- New `--check-update` arg to check if updates are available and exit with status code.\n\n### Aider v0.20.0\n\n- Add images to the chat to automatically use GPT-4 Vision, by @joshuavial\n\n- Bugfixes:\n  - Improved unicode encoding for `/run` command output, by @ctoth\n  - Prevent false auto-commits on Windows, by @ctoth\n\n### Aider v0.19.1\n\n- Removed stray debug output.\n\n### Aider v0.19.0\n\n- [Significantly reduced \"lazy\" coding from GPT-4 Turbo due to new unified diff edit format](https://aider.chat/docs/unified-diffs.html)\n  - Score improves from 20% to 61% on new \"laziness benchmark\".\n  - Aider now uses unified diffs by default for `gpt-4-1106-preview`.\n- New `--4-turbo` command line switch as a shortcut for `--model gpt-4-1106-preview`.\n\n### Aider v0.18.1\n\n- Upgraded to new openai python client v1.3.7.\n\n### Aider v0.18.0\n\n- Improved prompting for both GPT-4 and GPT-4 Turbo.\n  - Far fewer edit errors from GPT-4 Turbo (`gpt-4-1106-preview`).\n  - Significantly better benchmark results from the June GPT-4 (`gpt-4-0613`). Performance leaps from 47%/64% up to 51%/71%.\n- Fixed bug where in-chat files were marked as both read-only and ready-write, sometimes confusing GPT.\n- Fixed bug to properly handle repos with submodules.\n\n### Aider v0.17.0\n\n- Support for OpenAI's new 11/06 models:\n  - gpt-4-1106-preview with 128k context window\n  - gpt-3.5-turbo-1106 with 16k context window\n- [Benchmarks for OpenAI's new 11/06 models](https://aider.chat/docs/benchmarks-1106.html)\n- Streamlined [API for scripting aider, added docs](https://aider.chat/docs/faq.html#can-i-script-aider)\n- Ask for more concise SEARCH/REPLACE blocks. [Benchmarked](https://aider.chat/docs/benchmarks.html) at 63.9%, no regression.\n- Improved repo-map support for elisp.\n- Fixed crash bug when `/add` used on file matching `.gitignore`\n- Fixed misc bugs to catch and handle unicode decoding errors.\n\n### Aider v0.16.3\n\n- Fixed repo-map support for C#.\n\n### Aider v0.16.2\n\n- Fixed docker image.\n\n### Aider v0.16.1\n\n- Updated tree-sitter dependencies to streamline the pip install process\n\n### Aider v0.16.0\n\n- [Improved repository map using tree-sitter](https://aider.chat/docs/repomap.html)\n- Switched from \"edit block\" to \"search/replace block\", which reduced malformed edit blocks. [Benchmarked](https://aider.chat/docs/benchmarks.html) at 66.2%, no regression.\n- Improved handling of malformed edit blocks targeting multiple edits to the same file. [Benchmarked](https://aider.chat/docs/benchmarks.html) at 65.4%, no regression.\n- Bugfix to properly handle malformed `/add` wildcards.\n\n\n### Aider v0.15.0\n\n- Added support for `.aiderignore` file, which instructs aider to ignore parts of the git repo.\n- New `--commit` cmd line arg, which just commits all pending changes with a sensible commit message generated by gpt-3.5.\n- Added universal ctags and multiple architectures to the [aider docker image](https://aider.chat/docs/install/docker.html)\n- `/run` and `/git` now accept full shell commands, like: `/run (cd subdir; ls)`\n- Restored missing `--encoding` cmd line switch.\n\n### Aider v0.14.2\n\n- Easily [run aider from a docker image](https://aider.chat/docs/install/docker.html)\n- Fixed bug with chat history summarization.\n- Fixed bug if `soundfile` package not available.\n\n### Aider v0.14.1\n\n- /add and /drop handle absolute filenames and quoted filenames\n- /add checks to be sure files are within the git repo (or root)\n- If needed, warn users that in-chat file paths are all relative to the git repo\n- Fixed /add bug in when aider launched in repo subdir\n- Show models supported by api/key if requested model isn't available\n\n### Aider v0.14.0\n\n- [Support for Claude2 and other LLMs via OpenRouter](https://aider.chat/docs/faq.html#accessing-other-llms-with-openrouter) by @joshuavial\n- Documentation for [running the aider benchmarking suite](https://github.com/Aider-AI/aider/tree/main/benchmark)\n- Aider now requires Python >= 3.9\n\n\n### Aider v0.13.0\n\n- [Only git commit dirty files that GPT tries to edit](https://aider.chat/docs/faq.html#how-did-v0130-change-git-usage)\n- Send chat history as prompt/context for Whisper voice transcription\n- Added `--voice-language` switch to constrain `/voice` to transcribe to a specific language\n- Late-bind importing `sounddevice`, as it was slowing down aider startup\n- Improved --foo/--no-foo switch handling for command line and yml config settings\n\n### Aider v0.12.0\n\n- [Voice-to-code](https://aider.chat/docs/usage/voice.html) support, which allows you to code with your voice.\n- Fixed bug where /diff was causing crash.\n- Improved prompting for gpt-4, refactor of editblock coder.\n- [Benchmarked](https://aider.chat/docs/benchmarks.html) at 63.2% for gpt-4/diff, no regression.\n\n### Aider v0.11.1\n\n- Added a progress bar when initially creating a repo map.\n- Fixed bad commit message when adding new file to empty repo.\n- Fixed corner case of pending chat history summarization when dirty committing.\n- Fixed corner case of undefined `text` when using `--no-pretty`.\n- Fixed /commit bug from repo refactor, added test coverage.\n- [Benchmarked](https://aider.chat/docs/benchmarks.html) at 53.4% for gpt-3.5/whole (no regression).\n\n### Aider v0.11.0\n\n- Automatically summarize chat history to avoid exhausting context window.\n- More detail on dollar costs when running with `--no-stream`\n- Stronger GPT-3.5 prompt against skipping/eliding code in replies (51.9% [benchmark](https://aider.chat/docs/benchmarks.html), no regression)\n- Defend against GPT-3.5 or non-OpenAI models suggesting filenames surrounded by asterisks.\n- Refactored GitRepo code out of the Coder class.\n\n### Aider v0.10.1\n\n- /add and /drop always use paths relative to the git root\n- Encourage GPT to use language like \"add files to the chat\" to ask users for permission to edit them.\n\n### Aider v0.10.0\n\n- Added `/git` command to run git from inside aider chats.\n- Use Meta-ENTER (Esc+ENTER in some environments) to enter multiline chat messages.\n- Create a `.gitignore` with `.aider*` to prevent users from accidentally adding aider files to git.\n- Check pypi for newer versions and notify user.\n- Updated keyboard interrupt logic so that 2 ^C in 2 seconds always forces aider to exit.\n- Provide GPT with detailed error if it makes a bad edit block, ask for a retry.\n- Force `--no-pretty` if aider detects it is running inside a VSCode terminal.\n- [Benchmarked](https://aider.chat/docs/benchmarks.html) at 64.7% for gpt-4/diff (no regression)\n\n\n### Aider v0.9.0\n\n- Support for the OpenAI models in [Azure](https://aider.chat/docs/faq.html#azure)\n- Added `--show-repo-map`\n- Improved output when retrying connections to the OpenAI API\n- Redacted api key from `--verbose` output\n- Bugfix: recognize and add files in subdirectories mentioned by user or GPT\n- [Benchmarked](https://aider.chat/docs/benchmarks.html) at 53.8% for gpt-3.5-turbo/whole (no regression)\n\n### Aider v0.8.3\n\n- Added `--dark-mode` and `--light-mode` to select colors optimized for terminal background\n- Install docs link to [NeoVim plugin](https://github.com/joshuavial/aider.nvim) by @joshuavial\n- Reorganized the `--help` output\n- Bugfix/improvement to whole edit format, may improve coding editing for GPT-3.5\n- Bugfix and tests around git filenames with unicode characters\n- Bugfix so that aider throws an exception when OpenAI returns InvalidRequest\n- Bugfix/improvement to /add and /drop to recurse selected directories\n- Bugfix for live diff output when using \"whole\" edit format\n\n### Aider v0.8.2\n\n- Disabled general availability of gpt-4 (it's rolling out, not 100% available yet)\n\n### Aider v0.8.1\n\n- Ask to create a git repo if none found, to better track GPT's code changes\n- Glob wildcards are now supported in `/add` and `/drop` commands\n- Pass `--encoding` into ctags, require it to return `utf-8`\n- More robust handling of filepaths, to avoid 8.3 windows filenames\n- Added [FAQ](https://aider.chat/docs/faq.html)\n- Marked GPT-4 as generally available\n- Bugfix for live diffs of whole coder with missing filenames\n- Bugfix for chats with multiple files\n- Bugfix in editblock coder prompt\n\n### Aider v0.8.0\n\n- [Benchmark comparing code editing in GPT-3.5 and GPT-4](https://aider.chat/docs/benchmarks.html)\n- Improved Windows support:\n  - Fixed bugs related to path separators in Windows\n  - Added a CI step to run all tests on Windows\n- Improved handling of Unicode encoding/decoding\n  - Explicitly read/write text files with utf-8 encoding by default (mainly benefits Windows)\n  - Added `--encoding` switch to specify another encoding\n  - Gracefully handle decoding errors\n- Added `--code-theme` switch to control the pygments styling of code blocks (by @kwmiebach)\n- Better status messages explaining the reason when ctags is disabled\n\n### Aider v0.7.2:\n\n- Fixed a bug to allow aider to edit files that contain triple backtick fences.\n\n### Aider v0.7.1:\n\n- Fixed a bug in the display of streaming diffs in GPT-3.5 chats\n\n### Aider v0.7.0:\n\n- Graceful handling of context window exhaustion, including helpful tips.\n- Added `--message` to give GPT that one instruction and then exit after it replies and any edits are performed.\n- Added `--no-stream` to disable streaming GPT responses.\n  - Non-streaming responses include token usage info.\n  - Enables display of cost info based on OpenAI advertised pricing.\n- Coding competence benchmarking tool against suite of programming tasks based on Execism's python repo.\n  - https://github.com/exercism/python\n- Major refactor in preparation for supporting new function calls api.\n- Initial implementation of a function based code editing backend for 3.5.\n  - Initial experiments show that using functions makes 3.5 less competent at coding.\n- Limit automatic retries when GPT returns a malformed edit response.\n\n### Aider v0.6.2\n\n* Support for `gpt-3.5-turbo-16k`, and all OpenAI chat models\n* Improved ability to correct when gpt-4 omits leading whitespace in code edits\n* Added `--openai-api-base` to support API proxies, etc.\n\n### Aider v0.5.0\n\n- Added support for `gpt-3.5-turbo` and `gpt-4-32k`.\n- Added `--map-tokens` to set a token budget for the repo map, along with a PageRank based algorithm for prioritizing which files and identifiers to include in the map.\n- Added in-chat command `/tokens` to report on context window token usage.\n- Added in-chat command `/clear` to clear the conversation history.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.57421875,
          "content": "# This needs to sync with aider/help_pats.py\n\nglobal-exclude .DS_Store\n\nrecursive-exclude aider/website/examples *\nrecursive-exclude aider/website/_posts *\n\nexclude aider/website/HISTORY.md\nexclude aider/website/docs/benchmarks*.md\nexclude aider/website/docs/ctags.md\nexclude aider/website/docs/unified-diffs.md\n\nexclude aider/website/install.ps1\nexclude aider/website/install.sh\n\nrecursive-exclude aider/website/docs/leaderboards *\nrecursive-exclude aider/website/assets *\nrecursive-exclude aider/website *.js\nrecursive-exclude aider/website *.html\nrecursive-exclude aider/website *.yml\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1357421875,
          "content": "\n<!-- Edit README.md, not index.md -->\n\n# Aider is AI pair programming in your terminal\n\nAider lets you pair program with LLMs,\nto edit code in your local git repository.\nStart a new project or work with an existing code base.\nAider works best with Claude 3.5 Sonnet, DeepSeek V3, o1 & GPT-4o and can [connect to almost any LLM](https://aider.chat/docs/llms.html).\n\n\n<!-- SCREENCAST START -->\n<p align=\"center\">\n  <img\n    src=\"https://aider.chat/assets/screencast.svg\"\n    alt=\"aider screencast\"\n  >\n</p>\n<!-- SCREENCAST END -->\n\n<!-- VIDEO START\n<p align=\"center\">\n  <video style=\"max-width: 100%; height: auto;\" autoplay loop muted playsinline>\n    <source src=\"/assets/shell-cmds-small.mp4\" type=\"video/mp4\">\n    Your browser does not support the video tag.\n  </video>\n</p>\nVIDEO END -->\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/Tv2uQnR88V\">\n    <img src=\"https://img.shields.io/badge/Join-Discord-blue.svg\"/>\n  </a>\n  <a href=\"https://aider.chat/docs/install.html\">\n    <img src=\"https://img.shields.io/badge/Read-Docs-green.svg\"/>\n  </a>\n</p>\n\n## Getting started\n<!--[[[cog\n# We can't \"include\" here.\n# Because this page is rendered by GitHub as the repo README\ncog.out(open(\"aider/website/_includes/get-started.md\").read())\n]]]-->\n\nIf you already have python 3.8-3.13 installed, you can get started quickly like this:\n\n```bash\npython -m pip install aider-install\naider-install\n\n# Change directory into your code base\ncd /to/your/project\n\n# Work with Claude 3.5 Sonnet on your code\naider --model sonnet --anthropic-api-key your-key-goes-here\n\n# Work with GPT-4o on your code\naider --model gpt-4o --openai-api-key your-key-goes-here\n```\n<!--[[[end]]]-->\n\nSee the\n[installation instructions](https://aider.chat/docs/install.html)\nand\n[usage documentation](https://aider.chat/docs/usage.html)\nfor more details.\n\n## Features\n\n- Run aider with the files you want to edit: `aider <file1> <file2> ...`\n- Ask for changes:\n  - Add new features or test cases.\n  - Describe a bug.\n  - Paste in an error message or or GitHub issue URL.\n  - Refactor code.\n  - Update docs.\n- Aider will edit your files to complete your request.\n- Aider [automatically git commits](https://aider.chat/docs/git.html) changes with a sensible commit message.\n- [Use aider inside your favorite editor or IDE](https://aider.chat/docs/usage/watch.html).\n- Aider works with [most popular languages](https://aider.chat/docs/languages.html): python, javascript, typescript, php, html, css, and more...\n- Aider can edit multiple files at once for complex requests.\n- Aider uses a [map of your entire git repo](https://aider.chat/docs/repomap.html), which helps it work well in larger codebases.\n- Edit files in your editor or IDE while chatting with aider,\nand it will always use the latest version.\nPair program with AI.\n- [Add images to the chat](https://aider.chat/docs/usage/images-urls.html) (GPT-4o, Claude 3.5 Sonnet, etc).\n- [Add URLs to the chat](https://aider.chat/docs/usage/images-urls.html) and aider will read their content.\n- [Code with your voice](https://aider.chat/docs/usage/voice.html).\n- Aider works best with Claude 3.5 Sonnet, DeepSeek V3, o1 & GPT-4o and can [connect to almost any LLM](https://aider.chat/docs/llms.html).\n\n\n## Top tier performance\n\n[Aider has one of the top scores on SWE Bench](https://aider.chat/2024/06/02/main-swe-bench.html).\nSWE Bench is a challenging software engineering benchmark where aider\nsolved *real* GitHub issues from popular open source\nprojects like django, scikitlearn, matplotlib, etc.\n\n## More info\n\n- [Documentation](https://aider.chat/)\n- [Installation](https://aider.chat/docs/install.html)\n- [Usage](https://aider.chat/docs/usage.html)\n- [Tutorial videos](https://aider.chat/docs/usage/tutorials.html)\n- [Connecting to LLMs](https://aider.chat/docs/llms.html)\n- [Configuration](https://aider.chat/docs/config.html)\n- [Troubleshooting](https://aider.chat/docs/troubleshooting.html)\n- [LLM Leaderboards](https://aider.chat/docs/leaderboards/)\n- [GitHub](https://github.com/Aider-AI/aider)\n- [Discord](https://discord.gg/Tv2uQnR88V)\n- [Blog](https://aider.chat/blog/)\n\n\n## Kind words from users\n\n- *The best free open source AI coding assistant.* -- [IndyDevDan](https://youtu.be/YALpX8oOn78)\n- *The best AI coding assistant so far.* -- [Matthew Berman](https://www.youtube.com/watch?v=df8afeb1FY8)\n- *Aider ... has easily quadrupled my coding productivity.* -- [SOLAR_FIELDS](https://news.ycombinator.com/item?id=36212100)\n- *It's a cool workflow... Aider's ergonomics are perfect for me.* -- [qup](https://news.ycombinator.com/item?id=38185326)\n- *It's really like having your senior developer live right in your Git repo - truly amazing!* -- [rappster](https://github.com/Aider-AI/aider/issues/124)\n- *What an amazing tool. It's incredible.* -- [valyagolev](https://github.com/Aider-AI/aider/issues/6#issue-1722897858)\n- *Aider is such an astounding thing!* -- [cgrothaus](https://github.com/Aider-AI/aider/issues/82#issuecomment-1631876700)\n- *It was WAY faster than I would be getting off the ground and making the first few working versions.* -- [Daniel Feldman](https://twitter.com/d_feldman/status/1662295077387923456)\n- *THANK YOU for Aider! It really feels like a glimpse into the future of coding.* -- [derwiki](https://news.ycombinator.com/item?id=38205643)\n- *It's just amazing.  It is freeing me to do things I felt were out my comfort zone before.* -- [Dougie](https://discord.com/channels/1131200896827654144/1174002618058678323/1174084556257775656)\n- *This project is stellar.* -- [funkytaco](https://github.com/Aider-AI/aider/issues/112#issuecomment-1637429008)\n- *Amazing project, definitely the best AI coding assistant I've used.* -- [joshuavial](https://github.com/Aider-AI/aider/issues/84)\n- *I absolutely love using Aider ... It makes software development feel so much lighter as an experience.* -- [principalideal0](https://discord.com/channels/1131200896827654144/1133421607499595858/1229689636012691468)\n- *I have been recovering from multiple shoulder surgeries ... and have used aider extensively. It has allowed me to continue productivity.* -- [codeninja](https://www.reddit.com/r/OpenAI/s/nmNwkHy1zG)\n- *I am an aider addict. I'm getting so much more work done, but in less time.* -- [dandandan](https://discord.com/channels/1131200896827654144/1131200896827654149/1135913253483069470)\n- *After wasting $100 on tokens trying to find something better, I'm back to Aider. It blows everything else out of the water hands down, there's no competition whatsoever.* -- [SystemSculpt](https://discord.com/channels/1131200896827654144/1131200896827654149/1178736602797846548)\n- *Aider is amazing, coupled with Sonnet 3.5 it’s quite mind blowing.* -- [Josh Dingus](https://discord.com/channels/1131200896827654144/1133060684540813372/1262374225298198548)\n- *Hands down, this is the best AI coding assistant tool so far.* -- [IndyDevDan](https://www.youtube.com/watch?v=MPYFPvxfGZs)\n- *[Aider] changed my daily coding workflows. It's mind-blowing how a single Python application can change your life.* -- [maledorak](https://discord.com/channels/1131200896827654144/1131200896827654149/1258453375620747264)\n- *Best agent for actual dev work in existing codebases.* -- [Nick Dobos](https://twitter.com/NickADobos/status/1690408967963652097?s=20)\n"
        },
        {
          "name": "aider",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.45703125,
          "content": "\n[project]\nname = \"aider-chat\"\ndescription = \"Aider is AI pair programming in your terminal\"\nreadme = \"README.md\"\nclassifiers = [\n    \"Development Status :: 4 - Beta\",\n    \"Environment :: Console\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python\",\n    \"Topic :: Software Development\",\n]\nrequires-python = \">=3.9,<3.13\"\ndynamic = [\"dependencies\", \"optional-dependencies\", \"version\"]\n\n[project.urls]\nHomepage = \"https://github.com/Aider-AI/aider\"\n\n[project.scripts]\naider = \"aider.main:main\"\n\n[tool.setuptools.dynamic]\ndependencies = { file = \"requirements.txt\" }\n\n[tool.setuptools.dynamic.optional-dependencies]\ndev = { file = \"requirements/requirements-dev.txt\" }\nhelp = { file = \"requirements/requirements-help.txt\" }\nbrowser = { file = \"requirements/requirements-browser.txt\" }\nplaywright = { file = \"requirements/requirements-playwright.txt\" }\n\n[tool.setuptools]\ninclude-package-data = true\n\n[tool.setuptools.packages.find]\ninclude = [\"aider\"]\n\n[build-system]\nrequires = [\"setuptools>=68\", \"setuptools_scm[toml]>=8\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools_scm]\nwrite_to = \"aider/_version.py\"\n\n[tool.codespell]\nskip = \"*.svg,Gemfile.lock\"\nwrite-changes = true\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.189453125,
          "content": "[pytest]\nnorecursedirs = tmp.* build benchmark _site OLD\naddopts = -p no:warnings\ntestpaths =\n    tests/basic\n    tests/help\n    tests/browser\n    tests/scrape\n\nenv =\n    AIDER_ANALYTICS=false\n\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 5.1923828125,
          "content": "#\n# This file is autogenerated by pip-compile with Python 3.12\n# by the following command:\n#\n#    pip-compile --allow-unsafe --output-file=requirements.txt requirements/requirements.in\n#\naiohappyeyeballs==2.4.4\n    # via aiohttp\naiohttp==3.11.10\n    # via litellm\naiosignal==1.3.1\n    # via aiohttp\nannotated-types==0.7.0\n    # via pydantic\nanyio==4.7.0\n    # via\n    #   httpx\n    #   openai\n    #   watchfiles\nattrs==24.2.0\n    # via\n    #   aiohttp\n    #   jsonschema\n    #   referencing\nbackoff==2.2.1\n    # via\n    #   -r requirements/requirements.in\n    #   posthog\nbeautifulsoup4==4.12.3\n    # via -r requirements/requirements.in\ncertifi==2024.8.30\n    # via\n    #   httpcore\n    #   httpx\n    #   requests\ncffi==1.17.1\n    # via\n    #   sounddevice\n    #   soundfile\ncharset-normalizer==3.4.0\n    # via requests\nclick==8.1.7\n    # via litellm\nconfigargparse==1.7\n    # via -r requirements/requirements.in\ndiff-match-patch==20241021\n    # via -r requirements/requirements.in\ndiskcache==5.6.3\n    # via -r requirements/requirements.in\ndistro==1.9.0\n    # via openai\nfilelock==3.16.1\n    # via huggingface-hub\nflake8==7.1.1\n    # via -r requirements/requirements.in\nfrozenlist==1.5.0\n    # via\n    #   aiohttp\n    #   aiosignal\nfsspec==2024.10.0\n    # via huggingface-hub\ngitdb==4.0.11\n    # via gitpython\ngitpython==3.1.43\n    # via -r requirements/requirements.in\ngrep-ast==0.4.1\n    # via -r requirements/requirements.in\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.7\n    # via httpx\nhttpx==0.27.2\n    # via\n    #   litellm\n    #   openai\nhuggingface-hub==0.26.5\n    # via tokenizers\nidna==3.10\n    # via\n    #   anyio\n    #   httpx\n    #   requests\n    #   yarl\nimportlib-metadata==7.2.1\n    # via\n    #   -r requirements/requirements.in\n    #   litellm\nimportlib-resources==6.4.5\n    # via -r requirements/requirements.in\njinja2==3.1.4\n    # via litellm\njiter==0.8.0\n    # via openai\njson5==0.10.0\n    # via -r requirements/requirements.in\njsonschema==4.23.0\n    # via\n    #   -r requirements/requirements.in\n    #   litellm\njsonschema-specifications==2024.10.1\n    # via jsonschema\nlitellm==1.53.9\n    # via -r requirements/requirements.in\nmarkdown-it-py==3.0.0\n    # via rich\nmarkupsafe==3.0.2\n    # via jinja2\nmccabe==0.7.0\n    # via flake8\nmdurl==0.1.2\n    # via markdown-it-py\nmixpanel==4.10.1\n    # via -r requirements/requirements.in\nmonotonic==1.6\n    # via posthog\nmultidict==6.1.0\n    # via\n    #   aiohttp\n    #   yarl\nnetworkx==3.2.1\n    # via -r requirements/requirements.in\nnumpy==1.26.4\n    # via\n    #   -r requirements/requirements.in\n    #   scipy\nopenai==1.57.0\n    # via litellm\npackaging==24.2\n    # via\n    #   -r requirements/requirements.in\n    #   huggingface-hub\npathspec==0.12.1\n    # via\n    #   -r requirements/requirements.in\n    #   grep-ast\npexpect==4.9.0\n    # via -r requirements/requirements.in\npillow==10.4.0\n    # via -r requirements/requirements.in\nposthog==3.7.4\n    # via -r requirements/requirements.in\nprompt-toolkit==3.0.48\n    # via -r requirements/requirements.in\npropcache==0.2.1\n    # via\n    #   aiohttp\n    #   yarl\npsutil==6.1.0\n    # via -r requirements/requirements.in\nptyprocess==0.7.0\n    # via pexpect\npycodestyle==2.12.1\n    # via flake8\npycparser==2.22\n    # via cffi\npydantic==2.10.3\n    # via\n    #   litellm\n    #   openai\npydantic-core==2.27.1\n    # via pydantic\npydub==0.25.1\n    # via -r requirements/requirements.in\npyflakes==3.2.0\n    # via flake8\npygments==2.18.0\n    # via rich\npypandoc==1.14\n    # via -r requirements/requirements.in\npyperclip==1.9.0\n    # via -r requirements/requirements.in\npython-dateutil==2.9.0.post0\n    # via posthog\npython-dotenv==1.0.1\n    # via litellm\npyyaml==6.0.2\n    # via\n    #   -r requirements/requirements.in\n    #   huggingface-hub\nreferencing==0.35.1\n    # via\n    #   jsonschema\n    #   jsonschema-specifications\nregex==2024.11.6\n    # via tiktoken\nrequests==2.32.3\n    # via\n    #   huggingface-hub\n    #   litellm\n    #   mixpanel\n    #   posthog\n    #   tiktoken\nrich==13.9.4\n    # via -r requirements/requirements.in\nrpds-py==0.22.3\n    # via\n    #   jsonschema\n    #   referencing\nscipy==1.13.1\n    # via -r requirements/requirements.in\nsix==1.17.0\n    # via\n    #   mixpanel\n    #   posthog\n    #   python-dateutil\nsmmap==5.0.1\n    # via gitdb\nsniffio==1.3.1\n    # via\n    #   anyio\n    #   httpx\n    #   openai\nsounddevice==0.5.1\n    # via -r requirements/requirements.in\nsoundfile==0.12.1\n    # via -r requirements/requirements.in\nsoupsieve==2.6\n    # via beautifulsoup4\ntiktoken==0.8.0\n    # via litellm\ntokenizers==0.19.1\n    # via\n    #   -r requirements/requirements.in\n    #   litellm\ntqdm==4.67.1\n    # via\n    #   huggingface-hub\n    #   openai\ntree-sitter==0.21.3\n    # via\n    #   -r requirements/requirements.in\n    #   tree-sitter-languages\ntree-sitter-languages==1.10.2\n    # via grep-ast\ntyping-extensions==4.12.2\n    # via\n    #   anyio\n    #   huggingface-hub\n    #   openai\n    #   pydantic\n    #   pydantic-core\nurllib3==2.2.3\n    # via\n    #   mixpanel\n    #   requests\nwatchfiles==1.0.0\n    # via -r requirements/requirements.in\nwcwidth==0.2.13\n    # via prompt-toolkit\nyarl==1.18.3\n    # via aiohttp\nzipp==3.21.0\n    # via importlib-metadata\n\n# The following packages are considered to be unsafe in a requirements file:\npip==24.3.1\n    # via -r requirements/requirements.in\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}