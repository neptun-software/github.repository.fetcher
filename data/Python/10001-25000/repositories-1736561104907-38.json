{
  "metadata": {
    "timestamp": 1736561104907,
    "page": 38,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tornadoweb/tornado",
      "stars": 21806,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.4619140625,
          "content": "# Test coverage configuration.\n# Usage:\n#   pip install coverage\n#   coverage erase  # clears previous data if any\n#   coverage run -m tornado.test.runtests\n#   coverage report  # prints to stdout\n#   coverage html  # creates ./htmlcov/*.html including annotated source\n[run]\nbranch = true\nsource = tornado\nomit = \n    tornado/platform/*\n    tornado/test/*\n    */_auto2to3*\n\n[report]\n# Ignore missing source files, i.e. fake template-generated \"files\"\nignore_errors = true\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.61328125,
          "content": "[flake8]\nexclude = .git,.tox,__pycache__,.eggs,build\nmax-line-length = 100\nignore =\n    # E265 block comment should start with '# '\n    E265,\n    # E266 too many leading '#' for block comment\n    E266,\n    # E402 module level import not at top of file\n    E402,\n    # E722 do not use bare except\n    E722,\n    # flake8 and black disagree about\n    # W503 line break before binary operator\n    # E203 whitespace before ':'\n    # E701/E704 multiple statements on one line\n    # https://black.readthedocs.io/en/latest/guides/using_black_with_other_tools.html#labels-why-pycodestyle-warnings\n    W503,E203,E701,E704\ndoctests = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1826171875,
          "content": "# Tests of static file handling assume unix-style line endings.\ntornado/test/static/*.txt text eol=lf\ntornado/test/static/dir/*.html text eol=lf\ntornado/test/templates/*.html text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1533203125,
          "content": "*.pyc\n*.pyo\n*.so\n*.class\n*~\nbuild/\n/dist/\nMANIFEST\n/tornado.egg-info/\n.tox/\n.vagrant\n/.coverage\n/htmlcov/\n/env/\n# Used in demo apps\nsecrets.cfg\n.mypy_cache/\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.1845703125,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\nsphinx:\n  configuration: docs/conf.py\n\nformats:\n  - pdf\n  - epub\n\npython:\n  install:\n    - requirements: requirements.txt\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.8037109375,
          "content": "recursive-include docs *\nprune docs/build\ninclude tornado/py.typed\ninclude tornado/speedups.c\ninclude tornado/test/README\ninclude tornado/test/csv_translations/fr_FR.csv\ninclude tornado/test/gettext_translations/fr_FR/LC_MESSAGES/tornado_test.mo\ninclude tornado/test/gettext_translations/fr_FR/LC_MESSAGES/tornado_test.po\ninclude tornado/test/options_test.cfg\ninclude tornado/test/static/robots.txt\ninclude tornado/test/static/sample.xml\ninclude tornado/test/static/sample.xml.gz\ninclude tornado/test/static/sample.xml.bz2\ninclude tornado/test/static/dir/index.html\ninclude tornado/test/static_foo.txt\ninclude tornado/test/templates/utf8.html\ninclude tornado/test/test.crt\ninclude tornado/test/test.key\ninclude LICENSE\ninclude README.rst\ninclude requirements.in\ninclude requirements.txt\ninclude runtests.sh\ninclude tox.ini\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.5615234375,
          "content": "Tornado Web Server\n==================\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/tornadoweb/tornado\n   :target: https://gitter.im/tornadoweb/tornado?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n`Tornado <http://www.tornadoweb.org>`_ is a Python web framework and\nasynchronous networking library, originally developed at `FriendFeed\n<http://friendfeed.com>`_.  By using non-blocking network I/O, Tornado\ncan scale to tens of thousands of open connections, making it ideal for\n`long polling <http://en.wikipedia.org/wiki/Push_technology#Long_Polling>`_,\n`WebSockets <http://en.wikipedia.org/wiki/WebSocket>`_, and other\napplications that require a long-lived connection to each user.\n\nHello, world\n------------\n\nHere is a simple \"Hello, world\" example web app for Tornado:\n\n.. code-block:: python\n\n    import asyncio\n    import tornado\n\n    class MainHandler(tornado.web.RequestHandler):\n        def get(self):\n            self.write(\"Hello, world\")\n\n    def make_app():\n        return tornado.web.Application([\n            (r\"/\", MainHandler),\n        ])\n\n    async def main():\n        app = make_app()\n        app.listen(8888)\n        await asyncio.Event().wait()\n\n    if __name__ == \"__main__\":\n        asyncio.run(main())\n\nThis example does not use any of Tornado's asynchronous features; for\nthat see this `simple chat room\n<https://github.com/tornadoweb/tornado/tree/stable/demos/chat>`_.\n\nDocumentation\n-------------\n\nDocumentation and links to additional resources are available at\nhttps://www.tornadoweb.org\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.515625,
          "content": "# Security Policy\n\n## Supported Versions\n\nIn general, due to limited maintainer bandwidth, only the latest version of\nTornado is supported with patch releases. Exceptions may be made depending\non the severity of the bug and the feasibility of backporting a fix to\nolder releases. \n\n## Reporting a Vulnerability\n\nTornado uses GitHub's security advisory functionality for private vulnerability\nreports. To make a private report, use the \"Report a vulnerability\" button on\nhttps://github.com/tornadoweb/tornado/security/advisories\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0361328125,
          "content": "comment: off\ncoverage:\n  status: off\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "maint",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.1083984375,
          "content": "[build-system]\nrequires = [\"setuptools\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.black]\ntarget-version = ['py39', 'py310', 'py311', 'py312', 'py313']\n\n[tool.cibuildwheel]\nbuild = \"cp39* cp310* cp311* cp312* cp313*\"\ntest-command = \"python -m tornado.test\"\n\n[tool.cibuildwheel.macos]\narchs = \"x86_64 universal2\"\n# The arm portion of a universal wheel is a cross-compile and cannot\n# be tested on an x86 host. This must be configured explicitly to silence\n# a warning.\ntest-skip = \"*_universal2:arm64\"\n\n[tool.cibuildwheel.windows]\n# TODO: figure out what's going on with these occasional log messages.\ntest-command = \"python -m tornado.test --fail-if-logs=false\"\n\n[tool.cibuildwheel.linux]\n# Build wheels for the native platform (i.e. x86) as well as an emulated\n# build for aarch64.\narchs = \"auto aarch64\"\n\n[[tool.cibuildwheel.overrides]]\n# The emulated arm build is quite slow, so only run a portion of the test\n# suite. websocket_test is the most platform-dependent part of the tests\n# because it uses the C speedups module.\nselect = \"*linux_aarch64\"\ntest-command = \"python -m tornado.test tornado.test.websocket_test\"\n"
        },
        {
          "name": "requirements.in",
          "type": "blob",
          "size": 0.07421875,
          "content": "black\nflake8\nmypy>=0.941\npip-tools\nsphinx\nsphinx_rtd_theme\ntypes-pycurl\ntox\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 2.29296875,
          "content": "#\n# This file is autogenerated by pip-compile with Python 3.11\n# by the following command:\n#\n#    pip-compile\n#\nalabaster==0.7.16\n    # via sphinx\nbabel==2.15.0\n    # via sphinx\nblack==24.4.2\n    # via -r requirements.in\nbuild==1.2.1\n    # via pip-tools\ncachetools==5.3.3\n    # via tox\ncertifi==2024.7.4\n    # via requests\nchardet==5.2.0\n    # via tox\ncharset-normalizer==3.3.2\n    # via requests\nclick==8.1.7\n    # via\n    #   black\n    #   pip-tools\ncolorama==0.4.6\n    # via tox\ndistlib==0.3.8\n    # via virtualenv\ndocutils==0.20.1\n    # via\n    #   sphinx\n    #   sphinx-rtd-theme\nfilelock==3.14.0\n    # via\n    #   tox\n    #   virtualenv\nflake8==7.0.0\n    # via -r requirements.in\nidna==3.7\n    # via requests\nimagesize==1.4.1\n    # via sphinx\njinja2==3.1.5\n    # via sphinx\nmarkupsafe==2.1.5\n    # via jinja2\nmccabe==0.7.0\n    # via flake8\nmypy==1.10.0\n    # via -r requirements.in\nmypy-extensions==1.0.0\n    # via\n    #   black\n    #   mypy\npackaging==24.1\n    # via\n    #   black\n    #   build\n    #   pyproject-api\n    #   sphinx\n    #   tox\npathspec==0.12.1\n    # via black\npip-tools==7.4.1\n    # via -r requirements.in\nplatformdirs==4.2.2\n    # via\n    #   black\n    #   tox\n    #   virtualenv\npluggy==1.5.0\n    # via tox\npycodestyle==2.11.1\n    # via flake8\npyflakes==3.2.0\n    # via flake8\npygments==2.18.0\n    # via sphinx\npyproject-api==1.6.1\n    # via tox\npyproject-hooks==1.1.0\n    # via\n    #   build\n    #   pip-tools\nrequests==2.32.3\n    # via sphinx\nsnowballstemmer==2.2.0\n    # via sphinx\nsphinx==7.3.7\n    # via\n    #   -r requirements.in\n    #   sphinx-rtd-theme\n    #   sphinxcontrib-jquery\nsphinx-rtd-theme==2.0.0\n    # via -r requirements.in\nsphinxcontrib-applehelp==1.0.8\n    # via sphinx\nsphinxcontrib-devhelp==1.0.6\n    # via sphinx\nsphinxcontrib-htmlhelp==2.0.5\n    # via sphinx\nsphinxcontrib-jquery==4.1\n    # via sphinx-rtd-theme\nsphinxcontrib-jsmath==1.0.1\n    # via sphinx\nsphinxcontrib-qthelp==1.0.7\n    # via sphinx\nsphinxcontrib-serializinghtml==1.1.10\n    # via sphinx\ntox==4.15.1\n    # via -r requirements.in\ntypes-pycurl==7.45.3.20240421\n    # via -r requirements.in\ntyping-extensions==4.12.2\n    # via mypy\nurllib3==2.2.2\n    # via requests\nvirtualenv==20.26.2\n    # via tox\nwheel==0.43.0\n    # via pip-tools\n\n# The following packages are considered to be unsafe in a requirements file:\n# pip\n# setuptools\n"
        },
        {
          "name": "runtests.sh",
          "type": "blob",
          "size": 0.4990234375,
          "content": "#!/bin/sh\n# Run the Tornado test suite.\n#\n# Also consider using tox, which uses virtualenv to run the test suite\n# under multiple versions of python.\n\ncd $(dirname $0)\n\n# \"python -m\" differs from \"python tornado/test/runtests.py\" in how it sets\n# up the default python path.  \"python -m\" uses the current directory,\n# while \"python file.py\" uses the directory containing \"file.py\" (which is\n# not what you want if file.py appears within a package you want to import\n# from)\npython -m tornado.test.runtests \"$@\"\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.3642578125,
          "content": "[metadata]\nlicense_file = LICENSE\n\n[mypy]\npython_version = 3.9\nno_implicit_optional = True\n\n[mypy-tornado.*,tornado.platform.*]\ndisallow_untyped_defs = True\n\n# It's generally too tedious to require type annotations in tests, but\n# we do want to type check them as much as type inference allows.\n[mypy-tornado.test.*]\ndisallow_untyped_defs = False\ncheck_untyped_defs = True\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.6142578125,
          "content": "#\n# Copyright 2009 Facebook\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n# not use this file except in compliance with the License. You may obtain\n# a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n# License for the specific language governing permissions and limitations\n# under the License.\n\n# type: ignore\n\nimport os\nimport platform\nimport setuptools\n\n\nkwargs = {}\n\nwith open(\"tornado/__init__.py\") as f:\n    ns = {}\n    exec(f.read(), ns)\n    version = ns[\"version\"]\n\nwith open(\"README.rst\") as f:\n    kwargs[\"long_description\"] = f.read()\n    kwargs[\"long_description_content_type\"] = \"text/x-rst\"\n\nif (\n    platform.python_implementation() == \"CPython\"\n    and os.environ.get(\"TORNADO_EXTENSION\") != \"0\"\n):\n    # This extension builds and works on pypy as well, although pypy's jit\n    # produces equivalent performance.\n    kwargs[\"ext_modules\"] = [\n        setuptools.Extension(\n            \"tornado.speedups\",\n            sources=[\"tornado/speedups.c\"],\n            # Unless the user has specified that the extension is mandatory,\n            # fall back to the pure-python implementation on any build failure.\n            optional=os.environ.get(\"TORNADO_EXTENSION\") != \"1\",\n            # Use the stable ABI so our wheels are compatible across python\n            # versions.\n            py_limited_api=True,\n            define_macros=[(\"Py_LIMITED_API\", \"0x03090000\")],\n        )\n    ]\n\n    kwargs[\"options\"] = {\"bdist_wheel\": {\"py_limited_api\": \"cp39\"}}\n\n\nsetuptools.setup(\n    name=\"tornado\",\n    version=version,\n    python_requires=\">= 3.9\",\n    packages=[\"tornado\", \"tornado.test\", \"tornado.platform\"],\n    package_data={\n        # data files need to be listed both here (which determines what gets\n        # installed) and in MANIFEST.in (which determines what gets included\n        # in the sdist tarball)\n        \"tornado\": [\"py.typed\"],\n        \"tornado.test\": [\n            \"README\",\n            \"csv_translations/fr_FR.csv\",\n            \"gettext_translations/fr_FR/LC_MESSAGES/tornado_test.mo\",\n            \"gettext_translations/fr_FR/LC_MESSAGES/tornado_test.po\",\n            \"options_test.cfg\",\n            \"options_test_types.cfg\",\n            \"options_test_types_str.cfg\",\n            \"static/robots.txt\",\n            \"static/sample.xml\",\n            \"static/sample.xml.gz\",\n            \"static/sample.xml.bz2\",\n            \"static/dir/index.html\",\n            \"static_foo.txt\",\n            \"templates/utf8.html\",\n            \"test.crt\",\n            \"test.key\",\n        ],\n    },\n    author=\"Facebook\",\n    author_email=\"python-tornado@googlegroups.com\",\n    url=\"http://www.tornadoweb.org/\",\n    project_urls={\n        \"Source\": \"https://github.com/tornadoweb/tornado\",\n    },\n    license=\"Apache-2.0\",\n    description=(\n        \"Tornado is a Python web framework and asynchronous networking library,\"\n        \" originally developed at FriendFeed.\"\n    ),\n    classifiers=[\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n    ],\n    **kwargs,\n)\n"
        },
        {
          "name": "tornado",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 5.13671875,
          "content": "# Tox (https://tox.readthedocs.io) is a tool for running tests\n# in multiple virtualenvs.  This configuration file will run the tornado\n# test suite on all supported python versions.  To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n#\n# This configuration requires tox 1.8 or higher.\n#\n# Installation tips:\n# When building pycurl on my macports-based setup, I need to either set the\n# environment variable ARCHFLAGS='-arch x86_64' or use\n# 'port install curl +universal' to get both 32- and 64-bit versions of\n# libcurl.\n[tox]\nenvlist =\n        # Basic configurations: Run the tests for each python version.\n        py39-full,py310-full,py311-full,py312-full,py313-full,pypy3-full\n\n        # Build and test the docs with sphinx.\n        docs\n\n        # Run the linters.\n        lint\n\n[testenv]\nbasepython =\n           # In theory, it doesn't matter which python version is used here.\n           # In practice, things like changes to the ast module can alter\n           # the outputs of the tools (especially where exactly the\n           # linter warning-suppression comments go), so we specify a\n           # python version for these builds.\n           # These versions must be synced with the versions in .github/workflows/test.yml\n           docs: python3.11\n           lint: python3.11\n\ndeps =\n     full: pycurl\n     full: twisted\n     full: pycares\n     docs: -r{toxinidir}/requirements.txt\n     lint: -r{toxinidir}/requirements.txt\n\nsetenv =\n       # Treat the extension as mandatory in testing (but not on pypy)\n       {py3,py39,py310,py311,py312,py313,py314}: TORNADO_EXTENSION=1\n       # CI workers are often overloaded and can cause our tests to exceed\n       # the default timeout of 5s.\n       ASYNC_TEST_TIMEOUT=25\n       # Treat warnings as errors by default. We have a whitelist of\n       # allowed warnings in runtests.py, but we want to be strict\n       # about any import-time warnings before that setup code is\n       # reached. Note that syntax warnings are only reported in\n       # -opt builds because regular builds reuse pycs created\n       # during sdist installation (and it doesn't seem to be\n       # possible to set environment variables during that phase of\n       # tox).\n       PYTHONWARNINGS=error:::tornado\n       # Warn if we try to open a file with an unspecified encoding.\n       # (New in python 3.10, becomes obsolete when utf8 becomes the\n       # default in 3.15)\n       PYTHONWARNDEFAULTENCODING=1\n\n# Allow shell commands in tests\nallowlist_externals = sh, env\n\n\n# Tox filters line-by-line based on the environment name.\ncommands =\n         # py3*: -b turns on an extra warning when calling\n         # str(bytes), and -bb makes it an error.\n         python -bb -m tornado.test {posargs:}\n         # Python's optimized mode disables the assert statement, so\n         # run the tests in this mode to ensure we haven't fallen into\n         # the trap of relying on an assertion's side effects or using\n         # them for things that should be runtime errors.\n         full: python -O -m tornado.test\n         # Note that httpclient_test is always run with both client\n         # implementations; this flag controls which client all the\n         # other tests use.\n         full: python -m tornado.test --httpclient=tornado.curl_httpclient.CurlAsyncHTTPClient\n         full: python -m tornado.test --resolver=tornado.platform.caresresolver.CaresResolver\n\n# python will import relative to the current working directory by default,\n# so cd into the tox working directory to avoid picking up the working\n# copy of the files (especially important for the speedups module).\nchangedir = {toxworkdir}\n\n[testenv:docs]\nchangedir = docs\n# For some reason the extension fails to load in this configuration,\n# but it's not really needed for docs anyway.\nsetenv = TORNADO_EXTENSION=0\ncommands =\n    # Build the docs\n    sphinx-build -q -E -n -W -b html . {envtmpdir}/html\n    # Ensure that everything is either documented or ignored in conf.py\n    sphinx-build -q -E -n -W -b coverage . {envtmpdir}/coverage\n    # Run the doctests\n    sphinx-build -q -E -n -W -b doctest . {envtmpdir}/doctest\n\n[testenv:lint]\ncommands =\n         flake8 {posargs:}\n         black --check --diff {posargs:tornado demos}\n         # Many syscalls are defined differently on linux and windows,\n         # so we have to typecheck both.\n         # Mypy currently uses the default encoding so we must unset the warning variable\n         # here (must be completely unset, not just set to zero/empty). Remove this\n         # (and the allowlist_externals for env) when mypy sets the encoding explicitly.\n         env -u PYTHONWARNDEFAULTENCODING mypy --platform linux {posargs:tornado}\n         env -u PYTHONWARNDEFAULTENCODING mypy --platform windows {posargs:tornado}\n         # We mainly lint on the oldest version of Python we support, since\n         # we're more likely to catch problems of accidentally depending on\n         # something new than of depending on something old and deprecated.\n         # But sometimes something we depend on gets removed so we should also\n         # test the newest version.\n         env -u PYTHONWARNDEFAULTENCODING mypy --platform linux --python-version 3.13 {posargs:tornado}\nchangedir = {toxinidir}\n"
        }
      ]
    }
  ]
}