{
  "metadata": {
    "timestamp": 1736561121134,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "matplotlib/matplotlib",
      "stars": 20572,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 2.9873046875,
          "content": "# With infos from\n# http://tjelvarolsson.com/blog/how-to-continuously-test-your-python-code-on-windows-using-appveyor/\n# https://packaging.python.org/en/latest/appveyor/\n---\n\n# Backslashes in quotes need to be escaped: \\ -> \"\\\\\"\nbranches:\n  except:\n    - /auto-backport-.*/\n    - /^v\\d+\\.\\d+\\.[\\dx]+-doc$/\n\nskip_commits:\n  message: /\\[ci doc\\]/\n  files:\n    - doc/\n    - galleries/\n\nclone_depth: 50\n\nimage: Visual Studio 2019\n\nenvironment:\n\n  global:\n    PYTHONFAULTHANDLER: 1\n    PYTHONIOENCODING: UTF-8\n    PYTEST_ARGS: -rfEsXR --numprocesses=auto --timeout=300 --durations=25\n                 --cov-report= --cov=lib --log-level=DEBUG\n\n  matrix:\n    - PYTHON_VERSION: \"3.11\"\n      TEST_ALL: \"yes\"\n\n# We always use a 64-bit machine, but can build x86 distributions\n# with the PYTHON_ARCH variable\nplatform:\n  - x64\n\n# all our python builds have to happen in tests_script...\nbuild: false\n\ncache:\n  - '%LOCALAPPDATA%\\pip\\Cache'\n  - '%USERPROFILE%\\.cache\\matplotlib'\n\ninit:\n  - ps:\n      Invoke-Webrequest\n      -URI https://micro.mamba.pm/api/micromamba/win-64/latest\n      -OutFile C:\\projects\\micromamba.tar.bz2\n  - ps: C:\\PROGRA~1\\7-Zip\\7z.exe x C:\\projects\\micromamba.tar.bz2 -aoa -oC:\\projects\\\n  - ps: C:\\PROGRA~1\\7-Zip\\7z.exe x C:\\projects\\micromamba.tar -ttar -aoa -oC:\\projects\\\n  - 'set PATH=C:\\projects\\Library\\bin;%PATH%'\n  - micromamba shell init --shell cmd.exe\n  - micromamba config set always_yes true\n  - micromamba config prepend channels conda-forge\n  - micromamba info\n\ninstall:\n  - micromamba env create -f environment.yml python=%PYTHON_VERSION% pywin32\n  - micromamba activate mpl-dev\n\ntest_script:\n  # Now build the thing..\n  - set LINK=/LIBPATH:%cd%\\lib\n  - pip install -v --no-build-isolation --config-settings=setup-args=\"--vsenv\" --editable .[dev]\n  # this should show no freetype dll...\n  - set \"DUMPBIN=%VS140COMNTOOLS%\\..\\..\\VC\\bin\\dumpbin.exe\"\n  - '\"%DUMPBIN%\" /DEPENDENTS lib\\matplotlib\\ft2font*.pyd | findstr freetype.*.dll && exit /b 1 || exit /b 0'\n\n  # this are optional dependencies so that we don't skip so many tests...\n  - if x%TEST_ALL% == xyes micromamba install -q ffmpeg inkscape\n  # miktex is available on conda, but seems to fail with permission errors.\n  # missing packages on conda-forge for imagemagick\n  # This install sometimes failed randomly :-(\n  # - choco install imagemagick\n\n  # Test import of tkagg backend\n  - python -c\n    \"import matplotlib as m; m.use('tkagg');\n    import matplotlib.pyplot as plt;\n    print(plt.get_backend())\"\n  # tests\n  - echo The following args are passed to pytest %PYTEST_ARGS%\n  - pytest %PYTEST_ARGS%\n\nartifacts:\n  - path: result_images\\*\n    name: result_images\n    type: Zip\n\non_finish:\n  - micromamba install codecov\n  - codecov -e PYTHON_VERSION PLATFORM -n \"%PYTHON_VERSION% Windows\"\n\non_failure:\n  # Generate a html for visual tests\n  - python tools/visualize_tests.py --no-browser\n  - echo zipping images after a failure...\n  - 7z a result_images.zip result_images\\ | grep -v \"Compressing\"\n  - appveyor PushArtifact result_images.zip\n\nmatrix:\n  fast_finish: true\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.271484375,
          "content": "[run]\nbranch = true\nsource =\n    matplotlib\n    mpl_toolkits\nomit = matplotlib/_version.py\n\n[report]\nexclude_lines =\n    pragma: no cover\n    raise NotImplemented\n    def __str__\n    def __repr__\n    if __name__ == .__main__.:\n    if TYPE_CHECKING:\n    if typing.TYPE_CHECKING:\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 3.72265625,
          "content": "[flake8]\nmax-line-length = 88\nselect =\n    # flake8 default\n    D, E, F, W,\nignore =\n    # flake8 default\n    E121,E123,E126,E226,E24,E704,W503,W504,\n    # Additional ignores:\n    E127, E131,\n    E266,\n    E305, E306,\n    E741,\n    F841,\n    # pydocstyle\n    D100, D101, D102, D103, D104, D105, D106,\n    D200, D202, D204, D205,\n    D301,\n    D400, D401, D403, D404\n    # ignored by pydocstyle numpy docstring convention\n    D107, D203, D212, D402, D413, D415, D416, D417,\n    # while D213 is ignored by the numpy docstring convention, it's left out above,\n    # because we want to enforce it.\n\nexclude =\n    .git\n    build\n    doc/gallery\n    doc/tutorials\n    # External files.\n    tools/gh_api.py\n    .tox\n    .eggs\n\nper-file-ignores =\n    lib/matplotlib/_cm.py: E202, E203, E302\n    lib/matplotlib/_mathtext.py: E221\n    lib/matplotlib/_mathtext_data.py: E203\n    lib/matplotlib/backends/backend_template.py: F401\n    lib/matplotlib/mathtext.py: E221\n    lib/matplotlib/pylab.py: F401, F403\n    lib/matplotlib/pyplot.py: F811\n    lib/matplotlib/tests/test_mathtext.py: E501\n    lib/matplotlib/transforms.py: E201, E202\n    lib/matplotlib/tri/_triinterpolate.py: E201, E221\n    lib/mpl_toolkits/axes_grid1/axes_size.py: E272\n    lib/mpl_toolkits/axisartist/angle_helper.py: E221\n    lib/mpl_toolkits/mplot3d/proj3d.py: E201\n\n    doc/conf.py: E402\n    galleries/users_explain/quick_start.py: E402\n    galleries/users_explain/artists/paths.py: E402\n    galleries/users_explain/artists/patheffects_guide.py: E402\n    galleries/users_explain/artists/transforms_tutorial.py: E402, E501\n    galleries/users_explain/colors/colormaps.py: E501\n    galleries/users_explain/colors/colors.py: E402\n    galleries/tutorials/artists.py: E402\n    galleries/users_explain/axes/constrainedlayout_guide.py: E402\n    galleries/users_explain/axes/legend_guide.py: E402\n    galleries/users_explain/axes/tight_layout_guide.py: E402\n    galleries/users_explain/animations/animations.py: E501\n    galleries/tutorials/images.py: E501\n    galleries/tutorials/pyplot.py: E402, E501\n    galleries/users_explain/text/annotations.py: E402, E501\n    galleries/users_explain/text/mathtext.py: E501\n    galleries/users_explain/text/text_intro.py: E402\n    galleries/users_explain/text/text_props.py: E501\n\n    galleries/examples/animation/frame_grabbing_sgskip.py: E402\n    galleries/examples/images_contours_and_fields/tricontour_demo.py: E201\n    galleries/examples/images_contours_and_fields/tripcolor_demo.py: E201\n    galleries/examples/images_contours_and_fields/triplot_demo.py: E201\n    galleries/examples/lines_bars_and_markers/marker_reference.py: E402\n    galleries/examples/misc/print_stdout_sgskip.py: E402\n    galleries/examples/misc/table_demo.py: E201\n    galleries/examples/style_sheets/bmh.py: E501\n    galleries/examples/subplots_axes_and_figures/demo_constrained_layout.py: E402\n    galleries/examples/text_labels_and_annotations/custom_legends.py: E402\n    galleries/examples/ticks/date_concise_formatter.py: E402\n    galleries/examples/ticks/date_formatters_locators.py: F401\n    galleries/examples/user_interfaces/embedding_in_gtk3_panzoom_sgskip.py: E402\n    galleries/examples/user_interfaces/embedding_in_gtk3_sgskip.py: E402\n    galleries/examples/user_interfaces/embedding_in_gtk4_panzoom_sgskip.py: E402\n    galleries/examples/user_interfaces/embedding_in_gtk4_sgskip.py: E402\n    galleries/examples/user_interfaces/gtk3_spreadsheet_sgskip.py: E402\n    galleries/examples/user_interfaces/gtk4_spreadsheet_sgskip.py: E402\n    galleries/examples/user_interfaces/mpl_with_glade3_sgskip.py: E402\n    galleries/examples/user_interfaces/pylab_with_gtk3_sgskip.py: E402\n    galleries/examples/user_interfaces/pylab_with_gtk4_sgskip.py: E402\n    galleries/examples/userdemo/pgf_preamble_sgskip.py: E402\nforce-check = True\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.4755859375,
          "content": "# style: end-of-file-fixer pre-commit hook\nc1a33a481b9c2df605bcb9bef9c19fe65c3dac21\n\n# style: trailing-whitespace pre-commit hook\n213061c0804530d04bbbd5c259f10dc8504e5b2b\n\n# style: check-docstring-first pre-commit hook\n046533797725293dfc2a6edb9f536b25f08aa636\n\n# chore: fix spelling errors\n686c9e5a413e31c46bb049407d5eca285bcab76d\n\n# chore: pyupgrade --py39-plus\n4d306402bb66d6d4c694d8e3e14b91054417070e\n\n# style: docstring parameter indentation\n68daa962de5634753205cba27f21d6edff7be7a2\n"
        },
        {
          "name": ".git_archival.txt",
          "type": "blob",
          "size": 0.1083984375,
          "content": "node: $Format:%H$\nnode-date: $Format:%cI$\ndescribe-name: $Format:%(describe:tags=true)$\nref-names: $Format:%D$\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.109375,
          "content": "* text=auto\n*.m diff=objc\n*.ppm binary\n*.svg binary\n*.svg linguist-language=true\n.git_archival.txt export-subst\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.953125,
          "content": "#########################################\n# OS-specific temporary and backup files\n.DS_Store\n\n#########################################\n# Editor temporary/working/backup files #\n.#*\n[#]*#\n*~\n*$\n*.bak\n*.kdev4\n.project\n.pydevproject\n*.swp\n.idea\n.vscode/\n\n# Compiled source #\n###################\n*.a\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.py[ocd]\n*.so\n\n# Python files #\n################\n# meson-python working directory\nbuild\n.mesonpy*\n\n# meson-python/build frontend dist directory\ndist\n# Egg metadata\n*.egg-info\n.eggs\n# wheel metadata\npip-wheel-metadata/*\n# tox testing tool\n.tox\n# build subproject files\nsubprojects/*/\n!subprojects/packagefiles/\n\n# OS generated files #\n######################\n.directory\n.gdb_history\n.DS_Store?\nehthumbs.db\nIcon?\nThumbs.db\n\n# Things specific to this project #\n###################################\ngalleries/tutorials/intermediate/CL01.png\ngalleries/tutorials/intermediate/CL02.png\n\n# Documentation generated files #\n#################################\n# sphinx build directory\ndoc/_build\ndoc/api/_as_gen\n# autogenerated by sphinx-gallery\ndoc/examples\ndoc/gallery\ndoc/modules\ndoc/plot_types\ndoc/pyplots/tex_demo.png\ndoc/tutorials\ndoc/users/explain\nlib/dateutil\ngalleries/examples/*/*.bmp\ngalleries/examples/*/*.eps\ngalleries/examples/*/*.pdf\ngalleries/examples/*/*.png\ngalleries/examples/*/*.svg\ngalleries/examples/*/*.svgz\nresult_images\ndoc/_static/constrained_layout*.png\ndoc/.mpl_skip_subdirs.yaml\ndoc/_tags\nsg_execution_times.rst\n\n# Nose/Pytest generated files #\n###############################\n.pytest_cache/\n.cache/\n.coverage\n.coverage.*\n*.py,cover\ncover/\n.noseids\n__pycache__\n\n# Conda files #\n###############\n__conda_version__.txt\nlib/png.lib\nlib/z.lib\n\n# Environments #\n################\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Jupyter files #\n#################\n\n.ipynb_checkpoints/\n\n# Vendored dependencies #\n#########################\nlib/matplotlib/backends/web_backend/node_modules/\nlib/matplotlib/backends/web_backend/package-lock.json\n\nLICENSE/LICENSE_QHULL\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 8.6416015625,
          "content": "Adam Ortiz <adam.ortiz@utoronto.ca>\n\nAdrien F. Vincent <vincent.adrien@gmail.com>\nAdrien F. Vincent <vincent.adrien@gmail.com> <adrien.vincent@u-psud.fr>\n\nAleksey Bilogur <aleksey.bilogur@gmail.com>\n\nAlexander Rudy <alex.rudy@gmail.com>\n\nAlon Hershenhorn <hershen@gmail.com>\n\nAlvaro Sanchez <sanchezgnzlz.alvaro@gmail.com>\n\nAndrew Dawson <ajdawson@acm.org> <dawson@atm.ox.ac.uk>\n\nanykraus <kraus@mpip-mainz.mpg.de> <anykraus@users.noreply.github.com>\n\nAriel Hernán Curiale <curiale@gmail.com>\n\nBen Cohen <bj.cohen19@gmail.com> <ben@cohen-family.org>\n\nBen Root <ben.v.root@gmail.com> Benjamin Root <ben.v.root@gmail.com>\n\nBenedikt Daurer <benedikt.daurer@icm.uu.se>\n\nBenjamin Congdon <bencongdon96@gmail.com>\nBenjamin Congdon <bencongdon96@gmail.com> bcongdon <bcongdo2@illinois.edu>\n\nBruno Zohreh <z.shams@bath.ac.uk>\n\nCarsten Schelp <carstenschelp@mp.nl>\n\nCasper van der Wel <caspervdw@gmail.com>\n\nChris Holdgraf <choldgraf@gmail.com>\n\nCho Yin Yong <choyiny@users.noreply.github.com>\n\nChris <chrissshe@gmail.com>\n\nChristoph Gohlke <cgohlke@uci.edu> cgohlke <cgohlke@uci.edu>\nChristoph Gohlke <cgohlke@uci.edu> C. Gohlke <cgohlke@uci.edu>\nChristoph Gohlke <cjgohlke@gmail.com>\n\nCimarron Mittelsteadt <cimarronm@gmail.com> Cimarron <cimarronm@gmail.com>\n\ncldssty <huey910@gmail.com>\n\nConner R. Phillips <conner.r.phillips@gmail.com> <conner.r.phillips.com>\n\nDan Hickstein <danhickstein@gmail.com>\n\nDaniel Hyams <dhyams@gmail.com>\nDaniel Hyams <dhyams@gmail.com> Daniel Hyams <dhyams@gitdev.(none)>\n\nDavid Kua <david@kua.io> <david.kua@mail.utoronto.ca>\n\nDevashish Deshpande <ashu.9412@gmail.com>\n\nDietmar Schwertberger <github@schwertberger.de>\n\nDora Fraeman Caswell <dorafraeman@gmail.com>\n\nendolith <endolith@gmail.com>\n\nEric Dill <thedizzle@gmail.com> <edill@bnl.gov>\n\nErik Bray <erik.m.bray@gmail.com> <embray@stsci.edu>\n\nEric Ma <ericmajinglong@gmail.com> <ericmjl@Erics-MacBook-Pro.local>\nEric Ma <ericmajinglong@gmail.com> <ericmjl@users.noreply.github.com>\n\nesvhd <weiliang.zhang@gmail.com>\n\nFilipe Fernandes <ocefpaf@gmail.com>\n\nFlorian Le Bourdais <florian.s.lebourdais@gmail.com>\n\nFrancesco Montesano <franz.bergesund@gmail.com> montefra <franz.bergesund@gmail.com>\n\nGauravjeet <gauravjeet.kala@mail.utoronto.ca>\n\nHajoon Choi <hajoon.choi@mail.utoronto.ca>\n\nhannah <story645@gmail.com>\n\nHans Moritz Günther <moritz.guenther@gmx.de>\n\nHarshal Prakash Patankar <pharshalp@gmail.com>\n\nHarshit Patni <patniharshit@gmail.com>\n\nImportanceOfBeingErnest <elch.rz@ruetz-online.de>\n\nJ. Goutin <JGoutin@users.noreply.github.com> JGoutin <ginnungagap@free.fr>\n\nJack Kelly <jack.kelly@imperial.ac.uk> <daniel.kelly10@imperial.ac.uk>\nJack Kelly <jack.kelly@imperial.ac.uk> <jack-list@xlk.org.uk>\n\nJaime Fernandez <jaime.frio@gmail.com>\n\nJake Vanderplas <jakevdp@gmail.com>\nJake Vanderplas <jakevdp@gmail.com> <jakevdp@yahoo.com>\nJake Vanderplas <jakevdp@gmail.com> <vanderplas@astro.washington.edu>\n\nJames R. Evans <jrevans1@earthlink.net>\n\nJeff Lutgen <jlutgen@gmail.com> <jlutgen@users.noreply.github.com>\n\nJeffrey Bingham <bingjeff@gmail.com>\n\nJens Hedegaard Nielsen <jenshnielsen@gmail.com>\nJens Hedegaard Nielsen <jenshnielsen@gmail.com> <jens.nielsen@ucl.ac.uk>\n\nJoel Frederico <458871+joelfrederico@users.noreply.github.com>\n\nJohn Hunter <jdh2358@gmail.com>\n\nJorrit Wronski <jowr@mek.dtu.dk>\n\nJoseph Fox-Rabinovitz <jfoxrabinovitz@gmail.com> Mad Physicist <madphysicist@users.noreply.github.com>\nJoseph Fox-Rabinovitz <jfoxrabinovitz@gmail.com> Joseph Fox-Rabinovitz <joseph.r.fox-rabinovitz@nasa.gov>\n\nJouni K. Seppänen <jks@iki.fi>\n\nJulien Lhermitte <ordirules@gmail.com>\n\nJulien Schueller <julien.schueller@gmail.com> <schueller@porsche-l64.phimeca.lan>\nJulien Schueller <julien.schueller@gmail.com> <schueller@bx-l64.phimeca.lan>\n\nKevin Davies <kdavies4@gmail.com> <daviesk24@yahoo.com>\n\nkikocorreoso <kikocorreoso@gmail.com> <kikocorreoso@users.noreply.github.com>\n\nKlara Gerlei <klarizsofi@gmail.com>\nKlara Gerlei <klarizsofi@gmail.com> klaragerlei <s1466507@sms.ed.ac.uk>\n\nKristen M. Thyng <kthyng@gmail.com>\n\nKyle Sunden <sunden@wisc.edu>\n\nLeeonadoh <leo.sunpeng.li@gmail.com>\n\nLennart Fricke <lennart@die-frickes.eu> <lennart.fricke@kabelmail.de>\n\nLevi Kilcher <levi.kilcher@nrel.gov>\n\nLeon Yin <hello.leonyin@gmail.com>\n\nLion Krischer <lion.krischer@gmail.com> <krischer@geophysik.uni-muenchen.de>\n\nManan Kevadiya <kevadiyamanan@gmail.com>\nManan Kevadiya <kevadiyamanan@gmail.com> <43081866+manan2501@users.noreply.github.com>\n\nManuel Nuno Melo <manuel.nuno.melo@gmail.com>\n\nMarco Gorelli <m.e.gorelli@gmail.com>\nMarco Gorelli <m.e.gorelli@gmail.com> <33491632+MarcoGorelli@users.noreply.github.com>\n\nMarek Rudnicki <marekrud@gmail.com>\n\nMartin Fitzpatrick <martin.fitzpatrick@gmail.com> <mfitzp@abl.es>\n\nMatt Newville <newville@cars.uchicago.edu>\n\nMatthew Emmett <memmett@gmail.com>\nMatthew Emmett <memmett@gmail.com> <memmett@unc.edu>\n\nMatthias Bussonnier <bussonniermatthias@gmail.com>\nMatthias Bussonnier <bussonniermatthias@gmail.com> <mbussonnier@ucmerced.edu>\n\nMatthias Lüthi <maluethi@protonmail.ch>\nMatthias Lüthi <maluethi@protonmail.ch> <matthias.luethi@lhep.unibe.ch>\n\nMatti Picus <matti.picus@gmail.com>\n\nMichael Droettboom <mdboom@gmail.com> <mdroe@stsci.edu>\nMichael Droettboom <mdboom@gmail.com> Michael Droettboom <mdboom@debian-vm>\n\nMichiel de Hoon <mjldehoon@yahoo.com>\nMichiel de Hoon <mjldehoon@yahoo.com> Michiel de Hoon <mdehoon@mad002s-MacBook-Air.local>\nMichiel de Hoon <mjldehoon@yahoo.com> Michiel de Hoon <mdehoon@michiel-de-hoons-computer.local>\nMichiel de Hoon <mjldehoon@yahoo.com> Michiel de Hoon <mdehoon@Michiels-MacBook-Pro.local>\nMichiel de Hoon <mjldehoon@yahoo.com> Michiel de Hoon <mdehoon@tkx294.genome.gsc.riken.jp>\n\nMinRK <benjaminrk@gmail.com>\nMinRK <benjaminrk@gmail.com> Min RK <minrk@kerbin.local>\n\nNelle Varoquaux <nelle.varoquaux@gmail.com>\n\nNic Eggert <nic.eggert@gmail.com> Nic Eggert <nic@eggert.pw>\nNic Eggert <nic.eggert@gmail.com> Nic Eggert <nse23@cornell.edu>\n\nNicolas P. Rougier <Nicolas.Rougier@inria.fr>\n\nOceanWolf <juichenieder-tigger@yahoo.co.uk>\n\nOlivier Castany <1868182+ocastany@users.noreply.github.com>\nOlivier Castany <1868182+ocastany@users.noreply.github.com> <Olivier@home>\nOlivier Castany <1868182+ocastany@users.noreply.github.com> <castany@clevo>\n\nOm Sitapara <omsitapara23@gmail.com>\n\nPatrick Chen <pat.chen@mail.utoronto.ca>\n\nPaul Ganssle <p.ganssle@gmail.com>\nPaul Ganssle <pg@example.com>\n\nPaul Hobson <pmhobson@gmail.com>\nPaul Hobson <pmhobson@gmail.com> vagrant <vagrant@precise32.(none)>\n\nPaul Ivanov <pivanov314@gmail.com>\nPaul Ivanov <pivanov314@gmail.com> <pi@berkeley.edu>\nPaul Ivanov <pivanov314@gmail.com> <pivanov5@bloomberg.net>\n\nPer Parker <wisalam@live.com>\n\nPeter Würtz <pwuertz@gmail.com>\nPeter Würtz <pwuertz@gmail.com> <pwuertz@googlemail.com>\n\nPhil Elson <pelson.pub@gmail.com>\nPhil Elson <pelson.pub@gmail.com> <philipelson@hotmail.com>\nPhil Elson <pelson.pub@gmail.com> <philipelson@gmail.com>\n\nproductivememberofsociety666 <productivememberofsociety666@sol.fr.am> none <none@example.net>\n\nRishikesh <rishikksh20@gmail.com>\n\nRyanPan <ryanbelt1993129@hotmail.com>\n\nSamesh Lakhotia <samesh.lakhotia@gmail.com>\nSamesh Lakhotia <43701530+sameshl@users.noreply.github.com> <samesh.lakhotia@gmail.com>'\n\nScott Lasley <selasley@me.com>\n\nSebastian Raschka <mail@sebastianraschka.com>\nSebastian Raschka <mail@sebastianraschka.com> <se.raschka@me.com>\n\nSidharth Bansal <bansal.sidharth2996@gmail.com>\nSidharth Bansal <20972099+SidharthBansal@users.noreply.github.com> <bansal.sidharth2996@gmail.com>\n\nSimon Cross <hodgestar+github@gmail.com> <hodgestar@gmail.com>\n\nSlav Basharov <slavbacharov@gmail.com>\n\nsohero <herosgq@gmail.com> sohero <ivip@tom.com>\n\nStefan van der Walt <stefanv@berkeley.edu> <stefan@sun.ac.za>\n\nswitham <github@mac-guyver.com> switham <switham_github@mac-guyver.com>\n\nTaehoon Lee <taehoonlee@snu.ac.kr>\n\nTed Drain <ted.drain@gmail.com>\n\nTaras Kuzyo <kuzyo.taras@gmail.com>\n\nTerence Honles <terence@honles.com>\n\nThomas A Caswell <tcaswell@gmail.com> Thomas A Caswell <tcaswell@bnl.gov>\nThomas A Caswell <tcaswell@gmail.com> Thomas A Caswell <tcaswell@uchicago.edu>\nThomas A Caswell <tcaswell@gmail.com> Thomas A Caswell <“tcaswell@gmail.com”>\nThomas A Caswell <tcaswell@gmail.com> Thomas A Caswell <tcaswell@localhost.localdomain>\n\nTill Stensitzki <mail.till@gmx.de>\n\nTrish Gillett-Kawamoto <trish.gillett@shopify.com> <discardthree@gmail.com>\n\nTuan Dung Tran <tuan.d.tran@hotmail.com>\n\nVíctor Zabalza <vzabalza@gmail.com>\n\nVidur Satija <vidursatija@gmail.com>\n\nWANG Aiyong <gepcelway@gmail.com>\n\nZhili (Jerry) Pan <sasori.pan.jerry@gmail.com>\n\nWerner F Bruhin <wernerfbd@gmx.ch>\n\nYunfei Yang <yangyunf@iits-b473-20053.(none)> Yunfei Yang <yangyunf@iits-b473-20057.(none)>\nYunfei Yang <yangyunf@iits-b473-20053.(none)> Yunfei Yang <yangyunf@iits-b473-20061.(none)>\n\nZac Hatfield-Dodds <zac.hatfield.dodds@gmail.com>\n"
        },
        {
          "name": ".matplotlib-repo",
          "type": "blob",
          "size": 0.16015625,
          "content": "The existence of this file signals that the code is a matplotlib source repo\nand not an installed version. We use this in __init__.py for gating version\ndetection.\n"
        },
        {
          "name": ".meeseeksdev.yml",
          "type": "blob",
          "size": 0.046875,
          "content": "---\nusers:\n  Carreau:\n    can:\n      - backport\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 4.244140625,
          "content": "---\nci:\n  autofix_prs: false\n  autoupdate_schedule: 'quarterly'\nexclude: |\n  (?x)^(\n    extern|\n    LICENSE|\n    lib/matplotlib/mpl-data|\n    doc/devel/gitwash|\n    doc/users/prev|\n    doc/api/prev|\n    lib/matplotlib/tests/tinypages\n    )\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-docstring-first\n        exclude: lib/matplotlib/typing.py  # docstring used for attribute flagged by check\n      - id: end-of-file-fixer\n        exclude_types: [svg]\n      - id: mixed-line-ending\n      - id: name-tests-test\n        args: [\"--pytest-test-first\"]\n      - id: no-commit-to-branch  # Default is master and main.\n      - id: trailing-whitespace\n        exclude_types: [svg]\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.14.1\n    hooks:\n      - id: mypy\n        additional_dependencies:\n          - pandas-stubs\n          - types-pillow\n          - types-python-dateutil\n          - types-psutil\n          - types-docutils\n          - types-PyYAML\n        args: [\"--config-file=pyproject.toml\", \"lib/matplotlib\"]\n        files: lib/matplotlib  # Only run when files in lib/matplotlib are changed.\n        pass_filenames: false\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.1.1\n    hooks:\n      - id: flake8\n        additional_dependencies:\n          - pydocstyle>5.1.0\n          - flake8-docstrings>1.4.0\n          - flake8-force\n        args: [\"--docstring-convention=all\"]\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      - id: codespell\n        files: ^.*\\.(py|c|cpp|h|m|md|rst|yml)$\n        args:\n          - \"--ignore-words\"\n          - \"ci/codespell-ignore-words.txt\"\n          - \"--skip\"\n          - \"doc/project/credits.rst\"\n  - repo: https://github.com/pycqa/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n        name: isort (python)\n        files: ^galleries/tutorials/|^galleries/examples/|^galleries/plot_types/\n  - repo: https://github.com/rstcheck/rstcheck\n    rev: v6.2.4\n    hooks:\n      - id: rstcheck\n        additional_dependencies:\n          - sphinx>=1.8.1\n          - tomli\n  - repo: https://github.com/adrienverge/yamllint\n    rev: v1.35.1\n    hooks:\n      - id: yamllint\n        args: [\"--strict\", \"--config-file=.yamllint.yml\"]\n  - repo: https://github.com/python-jsonschema/check-jsonschema\n    rev: 0.30.0\n    hooks:\n      # TODO: Re-enable this when https://github.com/microsoft/azure-pipelines-vscode/issues/567 is fixed.\n      # - id: check-azure-pipelines\n      - id: check-dependabot\n      - id: check-github-workflows\n      # NOTE: If any of the below schema files need to be changed, be sure to\n      # update the `ci/vendor_schemas.py` script.\n      - id: check-jsonschema\n        name: \"Validate AppVeyor config\"\n        files: ^\\.appveyor\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/appveyor.json\"]\n      - id: check-jsonschema\n        name: \"Validate CircleCI config\"\n        files: ^\\.circleci/config\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/circleciconfig.json\"]\n      - id: check-jsonschema\n        name: \"Validate GitHub funding file\"\n        files: ^\\.github/FUNDING\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/github-funding.json\"]\n      - id: check-jsonschema\n        name: \"Validate GitHub issue config\"\n        files: ^\\.github/ISSUE_TEMPLATE/config\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/github-issue-config.json\"]\n      - id: check-jsonschema\n        name: \"Validate GitHub issue templates\"\n        files: ^\\.github/ISSUE_TEMPLATE/.*\\.yml$\n        exclude: ^\\.github/ISSUE_TEMPLATE/config\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/github-issue-forms.json\"]\n      - id: check-jsonschema\n        name: \"Validate CodeCov config\"\n        files: ^\\.github/codecov\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/codecov.json\"]\n      - id: check-jsonschema\n        name: \"Validate GitHub labeler config\"\n        files: ^\\.github/labeler\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/pull-request-labeler-5.json\"]\n      - id: check-jsonschema\n        name: \"Validate Conda environment file\"\n        files: ^environment\\.yml$\n        args: [\"--verbose\", \"--schemafile\", \"ci/schemas/conda-environment.json\"]\n"
        },
        {
          "name": ".yamllint.yml",
          "type": "blob",
          "size": 0.1220703125,
          "content": "---\nextends: default\n\nrules:\n  line-length:\n    max: 120\n    allow-non-breakable-words: true\n  truthy:\n    check-keys: false\n"
        },
        {
          "name": "CITATION.bib",
          "type": "blob",
          "size": 0.5166015625,
          "content": "@Article{Hunter:2007,\n  Author    = {Hunter, J. D.},\n  Title     = {Matplotlib: A 2D graphics environment},\n  Journal   = {Computing in Science \\& Engineering},\n  Volume    = {9},\n  Number    = {3},\n  Pages     = {90--95},\n  abstract  = {Matplotlib is a 2D graphics package used for Python for\n  application development, interactive scripting, and publication-quality\n  image generation across user interfaces and operating systems.},\n  publisher = {IEEE COMPUTER SOC},\n  doi       = {10.1109/MCSE.2007.55},\n  year      = 2007\n}\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 1.0869140625,
          "content": "cff-version: 1.2.0\nmessage: 'If Matplotlib contributes to a project that leads to a scientific publication, please acknowledge this fact by citing J. D. Hunter, \"Matplotlib: A 2D Graphics Environment\", Computing in Science & Engineering, vol. 9, no. 3, pp. 90-95, 2007.'\ntitle: 'Matplotlib: Visualization with Python'\nauthors:\n  - name: The Matplotlib Development Team\n    website: https://matplotlib.org/\ntype: software\nurl: 'https://matplotlib.org/'\nrepository-code: 'https://github.com/matplotlib/matplotlib/'\npreferred-citation:\n  type: article\n  authors:\n    - family-names: Hunter\n      given-names: John D.\n  title: \"Matplotlib: A 2D graphics environment\"\n  year: 2007\n  date-published: 2007-06-18\n  journal: Computing in Science & Engineering\n  volume: 9\n  issue: 3\n  start: 90\n  end: 95\n  doi: 10.1109/MCSE.2007.55\n  publisher:\n    name: IEEE Computer Society\n    website: 'https://www.computer.org/'\n  abstract: Matplotlib is a 2D graphics package used for Python for application development, interactive scripting, and publication-quality image generation across user interfaces and operating systems.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1904296875,
          "content": "<!--placeholder page so Github knows we have a CoC-->\n\nOur Code of Conduct is at\nhttps://matplotlib.org/stable/project/code_of_conduct.html\n\nIt is rendered from `doc/project/code_of_conduct.rst`\n"
        },
        {
          "name": "INSTALL.rst",
          "type": "blob",
          "size": 0.025390625,
          "content": "See doc/install/index.rst\n"
        },
        {
          "name": "LICENSE",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.6591796875,
          "content": "[![PyPi](https://img.shields.io/pypi/v/matplotlib)](https://pypi.org/project/matplotlib/)\n[![Conda](https://img.shields.io/conda/vn/conda-forge/matplotlib)](https://anaconda.org/conda-forge/matplotlib)\n[![Downloads](https://img.shields.io/pypi/dm/matplotlib)](https://pypi.org/project/matplotlib)\n[![NUMFocus](https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https://numfocus.org)\n\n[![Discourse help forum](https://img.shields.io/badge/help_forum-discourse-blue.svg)](https://discourse.matplotlib.org)\n[![Gitter](https://badges.gitter.im/matplotlib/matplotlib.svg)](https://gitter.im/matplotlib/matplotlib)\n[![GitHub issues](https://img.shields.io/badge/issue_tracking-github-blue.svg)](https://github.com/matplotlib/matplotlib/issues)\n[![Contributing](https://img.shields.io/badge/PR-Welcome-%23FF8300.svg?)](https://matplotlib.org/stable/devel/index.html)\n\n[![GitHub actions status](https://github.com/matplotlib/matplotlib/workflows/Tests/badge.svg)](https://github.com/matplotlib/matplotlib/actions?query=workflow%3ATests)\n[![Azure pipelines status](https://dev.azure.com/matplotlib/matplotlib/_apis/build/status/matplotlib.matplotlib?branchName=main)](https://dev.azure.com/matplotlib/matplotlib/_build/latest?definitionId=1&branchName=main)\n[![AppVeyor status](https://ci.appveyor.com/api/projects/status/github/matplotlib/matplotlib?branch=main&svg=true)](https://ci.appveyor.com/project/matplotlib/matplotlib)\n[![Codecov status](https://codecov.io/github/matplotlib/matplotlib/badge.svg?branch=main&service=github)](https://app.codecov.io/gh/matplotlib/matplotlib)\n[![EffVer Versioning](https://img.shields.io/badge/version_scheme-EffVer-0097a7)](https://jacobtomlinson.dev/effver)\n\n![Matplotlib logotype](https://matplotlib.org/_static/logo2.svg)\n\nMatplotlib is a comprehensive library for creating static, animated, and\ninteractive visualizations in Python.\n\nCheck out our [home page](https://matplotlib.org/) for more information.\n\n![image](https://matplotlib.org/_static/readme_preview.png)\n\nMatplotlib produces publication-quality figures in a variety of hardcopy\nformats and interactive environments across platforms. Matplotlib can be\nused in Python scripts, Python/IPython shells, web application servers,\nand various graphical user interface toolkits.\n\n## Install\n\nSee the [install\ndocumentation](https://matplotlib.org/stable/users/installing/index.html),\nwhich is generated from `/doc/install/index.rst`\n\n## Contribute\n\nYou've discovered a bug or something else you want to change — excellent!\n\nYou've worked out a way to fix it — even better!\n\nYou want to tell us about it — best of all!\n\nStart at the [contributing\nguide](https://matplotlib.org/devdocs/devel/contribute.html)!\n\n## Contact\n\n[Discourse](https://discourse.matplotlib.org/) is the discussion forum\nfor general questions and discussions and our recommended starting\npoint.\n\nOur active mailing lists (which are mirrored on Discourse) are:\n\n-   [Users](https://mail.python.org/mailman/listinfo/matplotlib-users)\n    mailing list: <matplotlib-users@python.org>\n-   [Announcement](https://mail.python.org/mailman/listinfo/matplotlib-announce)\n    mailing list: <matplotlib-announce@python.org>\n-   [Development](https://mail.python.org/mailman/listinfo/matplotlib-devel)\n    mailing list: <matplotlib-devel@python.org>\n\n[Gitter](https://gitter.im/matplotlib/matplotlib) is for coordinating\ndevelopment and asking questions directly related to contributing to\nmatplotlib.\n\n## Citing Matplotlib\n\nIf Matplotlib contributes to a project that leads to publication, please\nacknowledge this by citing Matplotlib.\n\n[A ready-made citation\nentry](https://matplotlib.org/stable/users/project/citing.html) is\navailable.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.84765625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe following table lists versions and whether they are supported. Security\nvulnerability reports will be accepted and acted upon for all supported\nversions.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 3.10.x  | :white_check_mark: |\n| 3.9.x   | :white_check_mark: |\n| 3.8.x   | :x:                |\n| 3.7.x   | :x:                |\n| 3.6.x   | :x:                |\n| 3.5.x   | :x:                |\n| < 3.5   | :x:                |\n\n\n## Reporting a Vulnerability\n\n\nTo report a security vulnerability, please use the [Tidelift security\ncontact](https://tidelift.com/security).  Tidelift will coordinate the fix and\ndisclosure.\n\nIf you have found a security vulnerability, in order to keep it confidential,\nplease do not report an issue on GitHub.\n\nWe do not award bounties for security vulnerabilities.\n"
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 6.849609375,
          "content": "# Python package\n# Create and test a Python package on multiple Python versions.\n# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and\n# more:\n# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/python?view=azure-devops\n\n---\ntrigger:\n  branches:\n    exclude:\n      - v*-doc\npr:\n  branches:\n    exclude:\n      - v*-doc\n  paths:\n    exclude:\n      - doc/**/*\n      - galleries/**/*\n\nstages:\n\n  - stage: Check\n    jobs:\n      - job: Skip\n        pool:\n          vmImage: 'ubuntu-latest'\n        variables:\n          DECODE_PERCENTS: 'false'\n          RET: 'true'\n        steps:\n          - bash: |\n              git_log=`git log --max-count=1 --skip=1 --pretty=format:\"%B\" | tr \"\\n\" \" \"`\n              echo \"##vso[task.setvariable variable=log]$git_log\"\n          - bash: echo \"##vso[task.setvariable variable=RET]false\"\n            condition: >-\n              or(contains(variables.log, '[skip azp]'),\n                 contains(variables.log, '[azp skip]'),\n                 contains(variables.log, '[skip ci]'),\n                 contains(variables.log, '[ci skip]'),\n                 contains(variables.log, '[ci doc]'))\n          - bash: echo \"##vso[task.setvariable variable=start_main;isOutput=true]$RET\"\n            name: result\n\n  - stage: Main\n    condition: and(succeeded(), eq(dependencies.Check.outputs['Skip.result.start_main'], 'true'))\n    dependsOn: Check\n    jobs:\n      - job: Pytest\n        strategy:\n          matrix:\n            Windows_py310:\n              vmImage: 'windows-2019'  # keep one job pinned to the oldest image\n              python.version: '3.10'\n            Windows_py311:\n              vmImage: 'windows-latest'\n              python.version: '3.11'\n          maxParallel: 4\n        pool:\n          vmImage: '$(vmImage)'\n        steps:\n          - task: UsePythonVersion@0\n            inputs:\n              versionSpec: '$(python.version)'\n              architecture: 'x64'\n            displayName: 'Use Python $(python.version)'\n\n          - bash: |\n              choco install ninja\n            displayName: 'Install dependencies'\n\n          - bash: |\n              python -m pip install --upgrade pip\n              python -m pip install --upgrade -r requirements/dev/build-requirements.txt\n              python -m pip install -r requirements/testing/all.txt -r requirements/testing/extra.txt\n            displayName: 'Install dependencies with pip'\n\n          - bash: |\n              CONFIG='--config-settings=setup-args=--vsenv'\n              CONFIG=\"$CONFIG --config-settings=setup-args=-Dcpp_link_args=-PROFILE\"\n              CONFIG=\"$CONFIG --config-settings=setup-args=-Dbuildtype=debug\"\n\n              python -m pip install \\\n                --no-build-isolation $CONFIG \\\n                --verbose --editable .[dev]\n            displayName: \"Install self\"\n\n          - script: env\n            displayName: 'print env'\n\n          - script: pip list\n            displayName: 'print pip'\n\n          - bash: |\n              set -e\n              SESSION_ID=$(python -c \"import uuid; print(uuid.uuid4(), end='')\")\n              echo \"Coverage session ID: ${SESSION_ID}\"\n              VS=$(ls -d /c/Program\\ Files*/Microsoft\\ Visual\\ Studio/*/Enterprise)\n              echo \"Visual Studio: ${VS}\"\n              DIR=\"$VS/Common7/IDE/Extensions/Microsoft/CodeCoverage.Console\"\n              if [[ -d $DIR ]]; then\n                # This is for MSVC 2022 (on windows-latest).\n                TOOL=\"$DIR/Microsoft.CodeCoverage.Console.exe\"\n                for f in build/cp*/src/*.pyd; do\n                  echo $f\n                  echo \"==============================\"\n                  \"$TOOL\" instrument $f --session-id $SESSION_ID \\\n                    --log-level Verbose --log-file instrument.log\n                  cat instrument.log\n                  rm instrument.log\n                done\n                echo \"Starting $TOOL in server mode\"\n                \"$TOOL\" collect \\\n                    --session-id $SESSION_ID --server-mode \\\n                    --output-format cobertura --output extensions.xml \\\n                    --log-level Verbose --log-file extensions.log &\n                VS_VER=2022\n              else\n              DIR=\"$VS\"/Team\\ Tools/Dynamic\\ Code\\ Coverage\\ Tools/amd64\n              if [[ -d $DIR ]]; then\n                # This is for MSVC 2019 (on windows-2019).\n                VSINSTR=\"$VS\"/Team\\ Tools/Performance\\ Tools/vsinstr.exe\n                for f in build/cp*/src/*.pyd; do\n                  \"$VSINSTR\" $f -Verbose -Coverage\n                done\n                TOOL=\"$DIR/CodeCoverage.exe\"\n                cat > extensions.config << EOF\n              <CodeCoverage>\n                <CollectFromChildProcesses>true</CollectFromChildProcesses>\n                <ModulePaths>\n                  <Include>\n                    <ModulePath>.*\\\\.*\\.pyd</ModulePath>\n                  </Include>\n                </ModulePaths>\n              </CodeCoverage>\n              EOF\n                echo \"Starting $TOOL in server mode\"\n                \"$TOOL\" collect \\\n                  -config:extensions.config -session:$SESSION_ID \\\n                  -output:extensions.coverage -verbose &\n                echo \"Started $TOOL\"\n                VS_VER=2019\n              fi\n              fi\n              echo \"##vso[task.setvariable variable=VS_COVERAGE_TOOL]$TOOL\"\n\n              PYTHONFAULTHANDLER=1 pytest -rfEsXR -n 2 \\\n                  --maxfail=50 --timeout=300 --durations=25 \\\n                  --junitxml=junit/test-results.xml --cov-report=xml --cov=lib\n\n              if [[ $VS_VER == 2022 ]]; then\n                \"$TOOL\" shutdown $SESSION_ID\n                echo \"Coverage collection log\"\n                echo \"=======================\"\n                cat extensions.log\n              else\n                \"$TOOL\" shutdown -session:$SESSION_ID\n              fi\n            displayName: 'pytest'\n\n          - bash: |\n              if [[ -f extensions.coverage ]]; then\n                # For MSVC 2019.\n                \"$VS_COVERAGE_TOOL\" analyze -output:extensions.xml \\\n                  -include_skipped_functions -include_skipped_modules \\\n                  extensions.coverage\n                rm extensions.coverage\n              fi\n            displayName: 'Filter C coverage'\n            condition: succeededOrFailed()\n          - bash: |\n              bash <(curl -s https://codecov.io/bash) \\\n                -n \"$PYTHON_VERSION $AGENT_OS\" \\\n                -f 'coverage.xml' -f 'extensions.xml'\n            displayName: 'Upload to codecov.io'\n            condition: succeededOrFailed()\n\n          - task: PublishTestResults@2\n            inputs:\n              testResultsFiles: '**/test-results.xml'\n              testRunTitle: 'Python $(python.version)'\n            condition: succeededOrFailed()\n\n          - publish: $(System.DefaultWorkingDirectory)/result_images\n            artifact: $(Agent.JobName)-result_images\n            condition: failed()\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "environment.yml",
          "type": "blob",
          "size": 1.4609375,
          "content": "# To set up a development environment using conda run:\n#\n#   conda env create -f environment.yml\n#   conda activate mpl-dev\n#   pip install --verbose --no-build-isolation --editable \".[dev]\"\n#\n---\nname: mpl-dev\nchannels:\n  - conda-forge\ndependencies:\n  # runtime dependencies\n  - cairocffi\n  - contourpy>=1.0.1\n  - cycler>=0.10.0\n  - fonttools>=4.22.0\n  - importlib-resources>=3.2.0\n  - kiwisolver>=1.3.1\n  - pybind11>=2.13.2\n  - meson-python>=0.13.1\n  - numpy<2.1\n  - pillow>=9\n  - pkg-config\n  - pygobject\n  - pyparsing>=2.3.1\n  - pyqt\n  - python>=3.10\n  - python-dateutil>=2.1\n  - setuptools_scm\n  - wxpython\n  # building documentation\n  - colorspacious\n  - graphviz\n  - ipython\n  - ipywidgets\n  - numpydoc>=1.0\n  - packaging>=20\n  - pydata-sphinx-theme~=0.15.0\n  - pyyaml\n  - sphinx>=3.0.0,!=6.1.2\n  - sphinx-copybutton\n  - sphinx-gallery>=0.12.0\n  - joblib  # needed for sphinx-gallery[parallel]\n  - sphinx-design\n  - sphinx-tags>=0.4.0\n  - pystemmer\n  - pip\n  - pip:\n      - mpl-sphinx-theme~=3.8.0\n      - sphinxcontrib-svg2pdfconverter>=1.1.0\n      - sphinxcontrib-video>=0.2.1\n      - pikepdf\n  # testing\n  - black<24\n  - coverage\n  - flake8>=3.8\n  - flake8-docstrings>=1.4.0\n  - gtk4\n  - ipykernel\n  - nbconvert[execute]!=6.0.0,!=6.0.1,!=7.3.0,!=7.3.1\n  - nbformat!=5.0.0,!=5.0.1\n  - pandas!=0.25.0\n  - psutil\n  - pre-commit\n  - pydocstyle>=5.1.0\n  - pytest!=4.6.0,!=5.4.0,!=8.1.0\n  - pytest-cov\n  - pytest-rerunfailures\n  - pytest-timeout\n  - pytest-xdist\n  - tornado\n  - pytz\n  - tox\n"
        },
        {
          "name": "extern",
          "type": "tree",
          "content": null
        },
        {
          "name": "galleries",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 1.26953125,
          "content": "project(\n  'matplotlib',\n  'c', 'cpp',\n  version: run_command(find_program('python3'), '-m', 'setuptools_scm', check: true).stdout().strip(),\n  # qt_editor backend is MIT\n  # ResizeObserver at end of lib/matplotlib/backends/web_backend/js/mpl.js is CC0\n  # Carlogo, STIX and Computer Modern is OFL\n  # DejaVu is Bitstream Vera and Public Domain\n  license: 'PSF-2.0 AND MIT AND CC0-1.0 AND OFL-1.1 AND Bitstream-Vera AND Public-Domain',\n  license_files: [\n    'LICENSE/LICENSE',\n    'LICENSE/LICENSE_AMSFONTS',\n    'LICENSE/LICENSE_BAKOMA',\n    'LICENSE/LICENSE_CARLOGO',\n    'LICENSE/LICENSE_COLORBREWER',\n    'LICENSE/LICENSE_COURIERTEN',\n    'LICENSE/LICENSE_JSXTOOLS_RESIZE_OBSERVER',\n    'LICENSE/LICENSE_QT4_EDITOR',\n    'LICENSE/LICENSE_SOLARIZED',\n    'LICENSE/LICENSE_STIX',\n    'LICENSE/LICENSE_YORICK',\n  ],\n  meson_version: '>=1.1.0',\n  default_options: [\n    'b_lto=true',\n    'cpp_std=c++17',\n    'auto_features=disabled',  # Force FreeType to avoid extra dependencies.\n  ],\n)\n\ncc = meson.get_compiler('c')\ncpp = meson.get_compiler('cpp')\n\n# https://mesonbuild.com/Python-module.html\npy_mod = import('python')\npy3 = py_mod.find_installation(pure: false)\npy3_dep = py3.dependency()\n\npybind11_dep = dependency('pybind11', version: '>=2.13.2')\n\nsubdir('extern')\nsubdir('src')\nsubdir('lib')\n"
        },
        {
          "name": "meson.options",
          "type": "blob",
          "size": 1.5234375,
          "content": "# Options may be set by passing through `pip` or `build` via meson-python:\n# https://meson-python.readthedocs.io/en/stable/how-to-guides/config-settings.html\n\n# By default, Matplotlib downloads and builds its own copies of FreeType and of\n# Qhull. You may use the following options to instead link against a system\n# FreeType/Qhull. As an exception, Matplotlib defaults to the system version of\n# FreeType on AIX.\noption('system-freetype', type: 'boolean', value: false,\n       description: 'Build against system version of FreeType')\noption('system-qhull', type: 'boolean', value: false,\n       description: 'Build against system version of Qhull')\n\n# Some of Matplotlib's components are optional: the MacOSX backend (installed\n# by default on macOS; requires the Cocoa headers included with XCode). You\n# can control whether they are installed using the following options. Note that\n# the MacOSX backend is never built on Linux or Windows, regardless of the\n# config value.\noption('macosx', type: 'boolean', value: true,\n       description: 'Enable MacOSX backend (requires Cocoa)')\n\n# User-configurable options\n#\n# Default backend, one of: Agg, Cairo, GTK3Agg, GTK3Cairo, GTK4Agg, GTK4Cairo,\n# MacOSX, Pdf, Ps, QtAgg, QtCairo, SVG, TkAgg, WX, WXAgg.\n#\n# The Agg, Ps, Pdf and SVG backends do not require external dependencies.  Do\n# not choose MacOSX if you have disabled the relevant extension modules.  The\n# default is determined by fallback.\noption('rcParams-backend', type: 'string', value: 'auto',\n       description: 'Set default backend at runtime')\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 9.5048828125,
          "content": "[project]\nname = \"matplotlib\"\nauthors = [\n  {email = \"matplotlib-users@python.org\"},\n  {name = \"John D. Hunter, Michael Droettboom\"}\n]\ndescription = \"Python plotting package\"\nreadme = \"README.md\"\nlicense = { file = \"LICENSE/LICENSE\" }\ndynamic = [\"version\"]\nclassifiers=[\n    \"Development Status :: 5 - Production/Stable\",\n    \"Framework :: Matplotlib\",\n    \"Intended Audience :: Science/Research\",\n    \"Intended Audience :: Education\",\n    \"License :: OSI Approved :: Python Software Foundation License\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Topic :: Scientific/Engineering :: Visualization\",\n]\n\n# When updating the list of dependencies, add an api_changes/development\n# entry and also update the following places:\n# - lib/matplotlib/__init__.py (matplotlib._check_versions())\n# - requirements/testing/minver.txt\n# - doc/devel/dependencies.rst\n# - .github/workflows/tests.yml\n# - environment.yml\ndependencies = [\n    \"contourpy >= 1.0.1\",\n    \"cycler >= 0.10\",\n    \"fonttools >= 4.22.0\",\n    \"kiwisolver >= 1.3.1\",\n    \"numpy >= 1.23\",\n    \"packaging >= 20.0\",\n    \"pillow >= 9\",\n    \"pyparsing >= 2.3.1\",\n    \"python-dateutil >= 2.7\",\n]\nrequires-python = \">=3.10\"\n\n[project.optional-dependencies]\n# Should be a copy of the build dependencies below.\ndev = [\n    \"meson-python>=0.13.1,<0.17.0\",\n    \"pybind11>=2.13.2,!=2.13.3\",\n    \"setuptools_scm>=7\",\n    # Not required by us but setuptools_scm without a version, cso _if_\n    # installed, then setuptools_scm 8 requires at least this version.\n    # Unfortunately, we can't do a sort of minimum-if-installed dependency, so\n    # we need to keep this for now until setuptools_scm _fully_ drops\n    # setuptools.\n    \"setuptools>=64\",\n]\n\n[project.urls]\n\"Homepage\" = \"https://matplotlib.org\"\n\"Download\" = \"https://matplotlib.org/stable/install/index.html\"\n\"Documentation\" = \"https://matplotlib.org\"\n\"Source Code\" = \"https://github.com/matplotlib/matplotlib\"\n\"Bug Tracker\" = \"https://github.com/matplotlib/matplotlib/issues\"\n\"Forum\" = \"https://discourse.matplotlib.org/\"\n\"Donate\" = \"https://numfocus.org/donate-to-matplotlib\"\n\n[build-system]\nbuild-backend = \"mesonpy\"\n# Also keep in sync with optional dependencies above.\nrequires = [\n    \"meson-python>=0.13.1,<0.17.0\",\n    \"pybind11>=2.13.2,!=2.13.3\",\n    \"setuptools_scm>=7\",\n]\n\n[tool.meson-python.args]\ninstall = ['--tags=data,python-runtime,runtime']\n\n[tool.setuptools_scm]\nversion_scheme = \"release-branch-semver\"\nlocal_scheme = \"node-and-date\"\nparentdir_prefix_version = \"matplotlib-\"\nfallback_version = \"0.0+UNKNOWN\"\n\n[tool.isort]\nknown_pydata = \"numpy, matplotlib.pyplot\"\nknown_firstparty = \"matplotlib,mpl_toolkits\"\nsections = \"FUTURE,STDLIB,THIRDPARTY,PYDATA,FIRSTPARTY,LOCALFOLDER\"\nforce_sort_within_sections = true\n\n[tool.ruff]\nexclude = [\n    \".git\",\n    \"build\",\n    \"doc/gallery\",\n    \"doc/tutorials\",\n    \"tools/gh_api.py\",\n    \".tox\",\n    \".eggs\",\n]\nline-length = 88\ntarget-version = \"py310\"\n\n[tool.ruff.lint]\nignore = [\n    \"D100\",\n    \"D101\",\n    \"D102\",\n    \"D103\",\n    \"D104\",\n    \"D105\",\n    \"D106\",\n    \"D200\",\n    \"D202\",\n    \"D204\",\n    \"D205\",\n    \"D301\",\n    \"D400\",\n    \"D401\",\n    \"D403\",\n    \"D404\",\n    \"E741\",\n    \"F841\",\n]\npreview = true\nexplicit-preview-rules = true\nselect = [\n    \"D\",\n    \"E\",\n    \"F\",\n    \"W\",\n    # The following error codes require the preview mode to be enabled.\n    \"E201\",\n    \"E202\",\n    \"E203\",\n    \"E221\",\n    \"E251\",\n    \"E261\",\n    \"E272\",\n    \"E703\",\n]\n\n# The following error codes are not supported by ruff v0.2.0\n# They are planned and should be selected once implemented\n# even if they are deselected by default.\n# These are primarily whitespace/corrected by autoformatters (which we don't use).\n# See https://github.com/charliermarsh/ruff/issues/2402 for status on implementation\nexternal = [\n  \"E122\",\n  \"E302\",\n]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"numpy\"\n\n[tool.ruff.lint.per-file-ignores]\n\"doc/conf.py\" = [\"E402\"]\n\"galleries/examples/animation/frame_grabbing_sgskip.py\" = [\"E402\"]\n\"galleries/examples/images_contours_and_fields/tricontour_demo.py\" = [\"E201\"]\n\"galleries/examples/images_contours_and_fields/tripcolor_demo.py\" = [\"E201\"]\n\"galleries/examples/images_contours_and_fields/triplot_demo.py\" = [\"E201\"]\n\"galleries/examples/lines_bars_and_markers/marker_reference.py\" = [\"E402\"]\n\"galleries/examples/misc/print_stdout_sgskip.py\" = [\"E402\"]\n\"galleries/examples/misc/table_demo.py\" = [\"E201\"]\n\"galleries/examples/style_sheets/bmh.py\" = [\"E501\"]\n\"galleries/examples/subplots_axes_and_figures/demo_constrained_layout.py\" = [\"E402\"]\n\"galleries/examples/text_labels_and_annotations/custom_legends.py\" = [\"E402\"]\n\"galleries/examples/ticks/date_concise_formatter.py\" = [\"E402\"]\n\"galleries/examples/ticks/date_formatters_locators.py\" = [\"F401\"]\n\"galleries/examples/user_interfaces/embedding_in_gtk3_panzoom_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/embedding_in_gtk3_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/embedding_in_gtk4_panzoom_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/embedding_in_gtk4_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/gtk3_spreadsheet_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/gtk4_spreadsheet_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/mpl_with_glade3_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/pylab_with_gtk3_sgskip.py\" = [\"E402\"]\n\"galleries/examples/user_interfaces/pylab_with_gtk4_sgskip.py\" = [\"E402\"]\n\"galleries/examples/userdemo/pgf_preamble_sgskip.py\" = [\"E402\"]\n\n\"lib/matplotlib/_cm.py\" = [\"E202\", \"E203\"]\n\"lib/matplotlib/_mathtext.py\" = [\"E221\"]\n\"lib/matplotlib/_mathtext_data.py\" = [\"E203\"]\n\"lib/matplotlib/backends/backend_template.py\" = [\"F401\"]\n\"lib/matplotlib/pylab.py\" = [\"F401\", \"F403\"]\n\"lib/matplotlib/pyplot.py\" = [\"F811\"]\n\"lib/matplotlib/tests/test_mathtext.py\" = [\"E501\"]\n\"lib/matplotlib/transforms.py\" = [\"E201\"]\n\"lib/matplotlib/tri/_triinterpolate.py\" = [\"E201\", \"E221\"]\n\"lib/mpl_toolkits/axes_grid1/axes_size.py\" = [\"E272\"]\n\"lib/mpl_toolkits/axisartist/angle_helper.py\" = [\"E221\"]\n\"lib/mpl_toolkits/mplot3d/proj3d.py\" = [\"E201\"]\n\n\"galleries/users_explain/artists/paths.py\" = [\"E402\"]\n\"galleries/users_explain/artists/patheffects_guide.py\" = [\"E402\"]\n\"galleries/users_explain/artists/transforms_tutorial.py\" = [\"E402\", \"E501\"]\n\"galleries/users_explain/colors/colormaps.py\" = [\"E501\"]\n\"galleries/users_explain/colors/colors.py\" = [\"E402\"]\n\"galleries/tutorials/artists.py\" = [\"E402\"]\n\"galleries/users_explain/axes/constrainedlayout_guide.py\" = [\"E402\"]\n\"galleries/users_explain/axes/legend_guide.py\" = [\"E402\"]\n\"galleries/users_explain/axes/tight_layout_guide.py\" = [\"E402\"]\n\"galleries/users_explain/animations/animations.py\" = [\"E501\"]\n\"galleries/tutorials/images.py\" = [\"E501\"]\n\"galleries/tutorials/pyplot.py\" = [\"E402\", \"E501\"]\n\"galleries/users_explain/text/annotations.py\" = [\"E402\", \"E501\"]\n\"galleries/users_explain/text/mathtext.py\" = [\"E501\"]\n\"galleries/users_explain/text/text_intro.py\" = [\"E402\"]\n\"galleries/users_explain/text/text_props.py\" = [\"E501\"]\n\n[tool.mypy]\nignore_missing_imports = true\nenable_error_code = [\n  \"ignore-without-code\",\n  \"redundant-expr\",\n  \"truthy-bool\",\n]\nenable_incomplete_feature = [\n  \"Unpack\",\n]\nexclude = [\n  #stubtest\n  \".*/matplotlib/(sphinxext|backends|pylab|testing/jpl_units)\",\n  #mypy precommit\n  \"galleries/\",\n  \"doc/\",\n  \"lib/matplotlib/backends/\",\n  \"lib/matplotlib/sphinxext\",\n  \"lib/matplotlib/testing/jpl_units\",\n  \"lib/mpl_toolkits/\",\n  #removing tests causes errors in backends\n  \"lib/matplotlib/tests/\",\n  # tinypages is used for testing the sphinx ext,\n  # stubtest will import and run, opening a figure if not excluded\n  \".*/tinypages\",\n  # pylab's numpy wildcard imports cause re-def failures since numpy 2.2\n  \"lib/matplotlib/pylab.py\",\n]\nfiles = [\n  \"lib/matplotlib\",\n]\nfollow_imports = \"silent\"\nwarn_unreachable = true\n\n[tool.rstcheck]\nignore_directives = [\n    # matplotlib.sphinxext.mathmpl\n    \"mathmpl\",\n    # matplotlib.sphinxext.plot_directive\n    \"plot\",\n    # sphinxext.math_symbol_table\n    \"math_symbol_table\",\n    # sphinxext.redirect_from\n    \"redirect-from\",\n    # sphinx-design\n    \"card\",\n    \"dropdown\",\n    \"grid\",\n    \"tab-set\",\n    # sphinx-gallery\n    \"minigallery\",\n    \"image-sg\",\n    # sphinx.ext.autodoc\n    \"automodule\",\n    \"autoclass\",\n    \"autofunction\",\n    \"autodata\",\n    \"automethod\",\n    \"autoattribute\",\n    \"autoproperty\",\n    # sphinx.ext.autosummary\n    \"autosummary\",\n    # sphinx.ext.ifconfig\n    \"ifconfig\",\n    # sphinx.ext.inheritance_diagram\n    \"inheritance-diagram\",\n    # sphinx-tags\n    \"tags\",\n    # include directive is causing attribute errors\n    \"include\"\n]\nignore_roles = [\n    # matplotlib.sphinxext.mathmpl\n    \"mathmpl\",\n    \"math-stix\",\n    # matplotlib.sphinxext.roles\n    \"rc\",\n    # sphinxext.github\n    \"ghissue\",\n    \"ghpull\",\n    \"ghuser\",\n    # sphinx-design\n    \"octicon\",\n]\nignore_substitutions = [\n    \"Artist\",\n    \"Axes\",\n    \"Axis\",\n    \"Figure\",\n    \"release\"\n]\n\nignore_messages = [\n    \"Hyperlink target \\\".*\\\" is not referenced.\",\n    \"Duplicate implicit target name: \\\".*\\\".\",\n    \"Duplicate explicit target name: \\\".*\\\".\",\n    # sphinx.ext.intersphinx directives\n    \"No role entry for \\\"external+.*\\\".\",\n    \"Unknown interpreted text role \\\"external+.*\\\".\"\n]\n\n[tool.pytest.ini_options]\n# Because tests can be run from an installed copy, most of our Pytest\n# configuration is in the `pytest_configure` function in\n# `lib/matplotlib/testing/conftest.py`.\nminversion = \"7.0\"\ntestpaths = [\"lib\"]\naddopts = [\n    \"--import-mode=importlib\",\n]\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.8232421875,
          "content": "# Tox (http://tox.testrun.org/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist = py310, py311, py312, stubtest\n\n[testenv]\nchangedir = /tmp\nsetenv =\n    MPLCONFIGDIR={envtmpdir}/.matplotlib\n    PIP_USER = 0\n    PIP_ISOLATED = 1\n    SETUPTOOLS_SCM_PRETEND_VERSION_FOR_MATPLOTLIB = 0.0.0\n\nusedevelop = True\ncommands =\n    pytest --pyargs matplotlib.tests  {posargs}\ndeps =\n    pytest\n\n[testenv:pytz]\nchangedir = /tmp\ncommands =\n    pytest -m pytz {toxinidir}\ndeps =\n    pytest\n    pytz\n\n[testenv:stubtest]\nchangedir = {tox_root}\ncommands =\n    python tools/stubtest.py\nusedevelop = False\ndeps =\n    -r requirements/testing/mypy.txt\n    -r requirements/testing/all.txt\n"
        }
      ]
    }
  ]
}