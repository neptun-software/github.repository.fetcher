{
  "metadata": {
    "timestamp": 1736561150204,
    "page": 99,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyscript/pyscript",
      "stars": 18143,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0546875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n.DS_Store\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\ndocs/_env/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# IDE Files\n.vscode/\n.idea/\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\nnode_modules/\n\ncoverage/\n\n# junit xml for test results\ntest_results\n\n# @pyscript/core npm artifacts\ncore/test-results/*\ncore/core.*\ncore/dist\ncore/dist.zip\ncore/src/plugins.js\ncore/src/stdlib/pyscript.js\ncore/src/3rd-party/*\n!core/src/3rd-party/READMEmd\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.458984375,
          "content": "# This is the configuration for pre-commit, a local framework for managing pre-commit hooks\n#   Check out the docs at: https://pre-commit.com/\nci:\n    #skip: [eslint]\n    autoupdate_schedule: monthly\n\ndefault_stages: [pre-commit]\nrepos:\n    - repo: https://github.com/pre-commit/pre-commit-hooks\n      rev: v5.0.0\n      hooks:\n          - id: check-builtin-literals\n          - id: check-case-conflict\n          - id: check-docstring-first\n          - id: check-executables-have-shebangs\n          - id: check-json\n            exclude: tsconfig\\.json\n          - id: check-toml\n            exclude: bad\\.toml\n          - id: check-xml\n          - id: check-yaml\n          - id: detect-private-key\n          - id: end-of-file-fixer\n            exclude: core/dist|\\.min\\.js$\n          - id: trailing-whitespace\n\n    - repo: https://github.com/psf/black\n      rev: 24.10.0\n      hooks:\n          - id: black\n            args: [\"-l\", \"88\", \"--skip-string-normalization\"]\n\n    - repo: https://github.com/codespell-project/codespell\n      rev: v2.3.0\n      hooks:\n          - id: codespell # See 'pyproject.toml' for args\n            exclude: \\.js\\.map$\n            additional_dependencies:\n                - tomli\n\n    - repo: https://github.com/hoodmane/pyscript-prettier-precommit\n      rev: \"v3.0.0-alpha.6\"\n      hooks:\n          - id: prettier\n            exclude: core/test|core/dist|core/types|core/src/stdlib/pyscript.js|pyscript\\.sw/|core/src/3rd-party\n            args: [--tab-width, \"4\"]\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0400390625,
          "content": "ISSUE_TEMPLATE\n*.min.*\npackage-lock.json\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1533203125,
          "content": "# Code of Conduct\n\nThe Code of Conduct is available in the PyScript Governance repo.\nSee https://github.com/pyscript/governance/blob/main/CODE-OF-CONDUCT.md\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1455078125,
          "content": "# Contributing to PyScript\n\nPlease see our guide to contributing to PyScript\n[in our documentation](https://docs.pyscript.net/latest/contributing/).\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 3.619140625,
          "content": "# Governance Policy\n\nThis document provides the governance policy for the Project. Maintainers agree to this policy and to abide by all Project policies, including the [code of conduct](https://github.com/pyscript/governance/blob/main/CODE-OF-CONDUCT.md), [trademark policy](https://github.com/pyscript/governance/blob/main/TRADEMARKS.md), and [antitrust policy](https://github.com/pyscript/governance/blob/main/ANTITRUST.md) by adding their name to the [maintainers.md file](https://github.com/pyscript/pyscript/blob/main/MAINTAINERS.md).\n\n## 1. Roles.\n\nThis project may include the following roles. Additional roles may be adopted and documented by the Project.\n\n**1.1. Maintainers**. Maintainers are responsible for organizing activities around developing, maintaining, and updating the Project. Maintainers are also responsible for determining consensus. This Project may add or remove Maintainers with the approval of the current Maintainers.\n\n**1.2. Contributors**. Contributors are those that have made contributions to the Project.\n\n## 2. Decisions.\n\n**2.1. Consensus-Based Decision Making**. Projects make decisions through consensus of the Maintainers. While explicit agreement of all Maintainers is preferred, it is not required for consensus. Rather, the Maintainers will determine consensus based on their good faith consideration of a number of factors, including the dominant view of the Contributors and nature of support and objections. The Maintainers will document evidence of consensus in accordance with these requirements.\n\n**2.2. Appeal Process**. Decisions may be appealed by opening an issue and that appeal will be considered by the Maintainers in good faith, who will respond in writing within a reasonable time. If the Maintainers deny the appeal, the appeal my be brought before the Organization Steering Committee, who will also respond in writing in a reasonable time.\n\n## 3. How We Work.\n\n**3.1. Openness**. Participation is open to anyone who is directly and materially affected by the activity in question. There shall be no undue financial barriers to participation.\n\n**3.2. Balance**. The development process should balance the interests of Contributors and other stakeholders. Contributors from diverse interest categories shall be sought with the objective of achieving balance.\n\n**3.3. Coordination and Harmonization**. Good faith efforts shall be made to resolve potential conflicts or incompatibility between releases in this Project.\n\n**3.4. Consideration of Views and Objections**. Prompt consideration shall be given to the written views and objections of all Contributors.\n\n**3.5. Written procedures**. This governance document and other materials documenting this project's development process shall be available to any interested person.\n\n## 4. No Confidentiality.\n\nInformation disclosed in connection with any Project activity, including but not limited to meetings, contributions, and submissions, is not confidential, regardless of any markings or statements to the contrary.\n\n## 5. Trademarks.\n\nAny names, trademarks, logos, or goodwill developed by and associated with the Project (the \"Marks\") are controlled by the Organization. Maintainers may only use these Marks in accordance with the Organization's trademark policy. If a Maintainer resigns or is removed, any rights the Maintainer may have in the Marks revert to the Organization.\n\n## 6. Amendments.\n\nAmendments to this governance policy may be made by affirmative vote of 2/3 of all Maintainers, with approval by the Organization's Steering Committee.\n\n---\n\nPart of MVG-0.1-beta.\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1435546875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n\n   Copyright (c) 2022-present, PyScript Development Team\n\n   Originated at Anaconda, Inc. in 2022\n\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 1.6103515625,
          "content": "# Maintainers\n\nThis document lists the Maintainers of the Project. Maintainers may be added once approved by the existing maintainers as described in the [Governance document](https://github.com/pyscript/pyscript/blob/main/GOVERNANCE.md). By adding your name to this list you are agreeing to abide by the Project governance documents and to abide by all of the Organization's polices, including the [code of conduct](https://github.com/pyscript/governance/blob/main/CODE-OF-CONDUCT.md), [trademark policy](https://github.com/pyscript/governance/blob/main/TRADEMARKS.md), and [antitrust policy](https://github.com/pyscript/governance/blob/main/TRADEMARKS.md). If you are participating because of your affiliation with another organization (designated below), you represent that you have the authority to bind that organization to these policies.\n\n| **NAME**             | **Organization** |\n| -------------------- | ---------------- |\n| Fabio Pliger         | Anaconda, Inc    |\n| Antonio Cuni         | Anaconda, Inc    |\n| Philipp Rudiger      | Anaconda, Inc    |\n| Peter Wang           | Anaconda, Inc    |\n| Kevin Goldsmith      | Anaconda, Inc    |\n| Mariana Meireles     |                  |\n| Nicholas H.Tollervey | Anaconda, Inc    |\n| Madhur Tandon        | Anaconda, Inc    |\n| Ted Patrick          | Anaconda, Inc    |\n| Jeff Glass           |                  |\n| Paul Everitt         |                  |\n| Fabio Rosado         | Anaconda, Inc    |\n| Andrea Giammarchi    | Anaconda, Inc    |\n\n---\n\nPart of MVG-0.1-beta.\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.564453125,
          "content": "MIN_NODE_VER := 20\nMIN_NPM_VER  := 6\nMIN_PY3_VER  := 8\nNODE_VER     := $(shell node -v | cut -d. -f1 | sed 's/^v\\(.*\\)/\\1/')\nNPM_VER      := $(shell npm -v | cut -d. -f1)\nPY3_VER      := $(shell python3 -c \"import sys;t='{v[1]}'.format(v=list(sys.version_info[:2]));print(t)\")\nPY_OK        := $(shell python3 -c \"print(int($(PY3_VER) >= $(MIN_PY3_VER)))\")\n\nall:\n\t@echo \"\\nThere is no default Makefile target right now. Try:\\n\"\n\t@echo \"make setup - check your environment and install the dependencies.\"\n\t@echo \"make update - update dependencies.\"\n\t@echo \"make clean - clean up auto-generated assets.\"\n\t@echo \"make build - build PyScript.\"\n\t@echo \"make precommit-check - run the precommit checks (run eslint).\"\n\t@echo \"make test - run all automated tests in playwright.\"\n\t@echo \"make fmt - format the code.\"\n\t@echo \"make fmt-check - check the code formatting.\\n\"\n\n.PHONY: check-node\ncheck-node:\n\t@if [ $(NODE_VER) -lt $(MIN_NODE_VER) ]; then \\\n\t\techo \"\\033[0;31mBuild requires Node $(MIN_NODE_VER).x or higher: $(NODE_VER) detected.\\033[0m\"; \\\n\t\tfalse; \\\n\tfi\n\n.PHONY: check-npm\ncheck-npm:\n\t@if [ $(NPM_VER) -lt $(MIN_NPM_VER) ]; then \\\n\t\techo \"\\033[0;31mBuild requires Node $(MIN_NPM_VER).x or higher: $(NPM_VER) detected.\\033[0m\"; \\\n\t\tfalse; \\\n\tfi\n\n.PHONY: check-python\ncheck-python:\n\t@if [ $(PY_OK) -eq 0 ]; then \\\n\t\techo \"\\033[0;31mRequires Python 3.$(MIN_PY3_VER).x or higher: 3.$(PY3_VER) detected.\\033[0m\"; \\\n\t\tfalse; \\\n\tfi\n\n# Check the environment, install the dependencies.\nsetup: check-node check-npm check-python\n\tcd core && npm ci && cd ..\nifeq ($(VIRTUAL_ENV),)\n\techo \"\\n\\n\\033[0;31mCannot install Python dependencies. Your virtualenv is not activated.\\033[0m\"\n\tfalse\nelse\n\tpython -m pip install -r requirements.txt\nendif\n\n# Clean up generated assets.\nclean:\n\tfind . -name \\*.py[cod] -delete\n\trm -rf $(env) *.egg-info\n\trm -rf .pytest_cache .coverage coverage.xml\n\n# Build PyScript.\nbuild: precommit-check\n\tcd core && npx playwright install chromium && npm run build\n\n# Update the dependencies.\nupdate:\n\tpython -m pip install -r requirements.txt --upgrade\n\n# Run the precommit checks (run eslint).\nprecommit-check:\n\tpre-commit run --all-files\n\n# Run all automated tests in playwright.\ntest:\n\tcd core && npm run test:integration\n\n# Serve the repository with the correct headers.\nserve:\n\tnpx mini-coi .\n\n# Format the code.\nfmt: fmt-py\n\t@echo \"Format completed\"\n\n# Check the code formatting.\nfmt-check: fmt-py-check\n\t@echo \"Format check completed\"\n\n# Format Python code.\nfmt-py:\n\tblack -l 88 --skip-string-normalization .\n\n# Check the format of Python code.\nfmt-py-check:\n\tblack -l 88 --check .\n\n.PHONY: $(MAKECMDGOALS)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.314453125,
          "content": "# PyScript\n\n## PyScript is an open source platform for Python in the browser.\n\nUsing PyScript is as simple as:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <title>PyScript!</title>\n        <link\n            rel=\"stylesheet\"\n            href=\"https://pyscript.net/snapshots/2024.9.2/core.css\"\n        />\n        <script\n            type=\"module\"\n            src=\"https://pyscript.net/snapshots/2024.9.2/core.js\"\n        ></script>\n    </head>\n    <body>\n        <!-- Use MicroPython to evaluate some Python -->\n        <script type=\"mpy\" terminal>\n            print(\"Hello, world!\")\n        </script>\n    </body>\n</html>\n```\n\nPyScript enables the creation of rich Python applications in the browser using\n[Pyodide](https://pyodide.org/en/stable/) (a version of\n[CPython](https://python.org/)), [MicroPython](https://micropython.org/),\n[WASM](https://webassembly.org/), and modern web technologies. It means Python\nnow runs anywhere a browser runs: desktop, laptop, mobile, tablet, or any other\nbrowser enabled device.\n\nTo start building, read the\n[Beginning PyScript tutorial](https://docs.pyscript.net/latest/beginning-pyscript/).\n\nFor example applications, see [here](https://pyscript.com/@examples).\n\nOther useful resources:\n\n-   Our [Home Page](https://pyscript.net/) as an open source project.\n-   The [official technical docs](https://docs.pyscript.net/).\n-   A [YouTube channel](https://www.youtube.com/@PyScriptTV) with helpful videos\n    and community content.\n-   A free-to-use [online IDE](https://pyscript.com/) for trying PyScript.\n-   Our community [Discord Channel](https://discord.gg/BYB2kvyFwm), to keep in\n    touch .\n\nEvery Tuesday at 15:30 UTC there is the _PyScript Community Call_ on zoom,\nwhere we can talk about PyScript development in the open. Most of the\nmaintainers regularly participate in the call, and everybody is welcome to\njoin. This meeting is recorded and uploaded to our YouTube channel.\n\nEvery other Thursday at 16:00 UTC there is the _PyScript FUN_ call: the focus\nof this call is to share fun projects, goofy hacks or clever uses of PyScript.\nIt's a supportive, energetic and entertaining meeting. This meeting is also\nrecorded and uploaded to our YouTube channel.\n\nFor more details on how to join the calls and up to date schedule, consult the\nofficial calendar:\n\n-   [Google calendar](https://calendar.google.com/calendar/u/0/embed?src=d3afdd81f9c132a8c8f3290f5cc5966adebdf61017fca784eef0f6be9fd519e0@group.calendar.google.com&ctz=UTC) in UTC time;\n-   [iCal format](https://calendar.google.com/calendar/ical/d3afdd81f9c132a8c8f3290f5cc5966adebdf61017fca784eef0f6be9fd519e0%40group.calendar.google.com/public/basic.ics).\n\n## Contribute\n\nFor technical details of the code, please see the [README](core/README.md) in\nthe `core` directory.\n\nRead the [contributing guide](https://docs.pyscript.net/latest/contributing/)\nto learn about our development process, reporting bugs and improvements,\ncreating issues and asking questions.\n\nCheck out the [development process](https://docs.pyscript.net/latest/developers/)\ndocumentation for more information on how to setup your development environment.\n\n## Governance\n\nThe [PyScript organization governance](https://github.com/pyscript/governance)\nis documented in a separate repository.\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.0673828125,
          "content": "[tool.codespell]\nignore-words-list = \"afterall\"\nskip = \"*.js,*.json\"\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.07421875,
          "content": "black==24.10.0\npre-commit==3.7.1\npython-minifier==2.11.0\nsetuptools==72.1.0\n"
        }
      ]
    }
  ]
}