{
  "metadata": {
    "timestamp": 1736561345156,
    "page": 371,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rushter/MLAlgorithms",
      "stars": 10766,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0498046875,
          "content": "*.pyc\nbuild/\ndist/\nmla.egg-info/\n.cache\n*.swp\n.idea"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2421875,
          "content": "Artem Golubin <me@rushter.com>\nAnebi Agbo\nConvex Path\nJames Chevalier\nJiancheng\nKaiMin Lai\nNguyễn Tuấn\nNicolas Hug\nXiaochun Ma\nYiran Sheng\nbrady salz\njunwang007\nkeineahnung2345\nlucaskolstad\nvincent tang\nxq5he\nLanderTome\ntherickli\nAndrew Melnik\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.169921875,
          "content": "FROM python:3\n\nRUN mkdir -p /var/app\nWORKDIR /var/app\nCOPY . /var/app\n\n# install scipy & numpy\n# install required packages\nRUN pip install scipy numpy && \\\n    pip install .\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "MIT License\n\nCopyright (c) 2016-2020 Artem Golubin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.037109375,
          "content": "recursive-include mla/datasets/data *\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.826171875,
          "content": "# Machine learning algorithms\nA collection of minimal and clean implementations of machine learning algorithms.\n\n### Why?\nThis project is targeting people who want to learn internals of ml algorithms or implement them from scratch.  \nThe code is much easier to follow than the optimized libraries and easier to play with.  \nAll algorithms are implemented in Python, using numpy, scipy and autograd.  \n\n### Implemented:\n* [Deep learning (MLP, CNN, RNN, LSTM)](mla/neuralnet)\n* [Linear regression, logistic regression](mla/linear_models.py)\n* [Random Forests](mla/ensemble/random_forest.py)\n* [Support vector machine (SVM) with kernels (Linear, Poly, RBF)](mla/svm)\n* [K-Means](mla/kmeans.py)\n* [Gaussian Mixture Model](mla/gaussian_mixture.py)\n* [K-nearest neighbors](mla/knn.py)\n* [Naive bayes](mla/naive_bayes.py)\n* [Principal component analysis (PCA)](mla/pca.py)\n* [Factorization machines](mla/fm.py)\n* [Restricted Boltzmann machine (RBM)](mla/rbm.py)\n* [t-Distributed Stochastic Neighbor Embedding (t-SNE)](mla/tsne.py)\n* [Gradient Boosting trees (also known as GBDT, GBRT, GBM, XGBoost)](mla/ensemble/gbm.py)\n* [Reinforcement learning (Deep Q learning)](mla/rl)\n\n\n### Installation\n```sh\n        git clone https://github.com/rushter/MLAlgorithms\n        cd MLAlgorithms\n        pip install scipy numpy\n        python setup.py develop\n```\n### How to run examples without installation\n```sh\n        cd MLAlgorithms\n        python -m examples.linear_models\n```\n### How to run examples within Docker\n```sh\n        cd MLAlgorithms\n        docker build -t mlalgorithms .\n        docker run --rm -it mlalgorithms bash\n        python -m examples.linear_models\n```\n### Contributing\n\nYour contributions are always welcome!  \nFeel free to improve existing code, documentation or implement new algorithm.  \nPlease open an issue to propose your changes if they are big enough.  \n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mla",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1025390625,
          "content": "tqdm\nmatplotlib>=1.5.1\nnumpy>=1.11.1\nscikit-learn>=0.18\nscipy>=0.18.0\nseaborn>=0.7.1\nautograd>=1.1.7\ngym\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0947265625,
          "content": "[bdist_wheel]\nuniversal=1\n\n[metadata]\ndescription-file=README.md\n\n[flake8]\nmax-line-length = 120\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.1826171875,
          "content": "from setuptools import setup, find_packages\nfrom codecs import open\nfrom os import path\n\n__version__ = '0.0.1'\n\nhere = path.abspath(path.dirname(__file__))\n\n# Get the long description from the README file\nwith open(path.join(here, 'README.md'), encoding='utf-8') as f:\n    long_description = f.read()\n\n# get the dependencies and installs\nwith open(path.join(here, 'requirements.txt'), encoding='utf-8') as f:\n    all_reqs = f.read().split('\\n')\n\ninstall_requires = [x.strip() for x in all_reqs if 'git+' not in x]\ndependency_links = [x.strip().replace('git+', '') for x in all_reqs if x.startswith('git+')]\n\nsetup(\n    name='mla',\n    version=__version__,\n    description='A collection of minimal and clean implementations of machine learning algorithms.',\n    long_description=long_description,\n    url='https://github.com/rushter/mla',\n    download_url='https://github.com/rushter/mla/tarball/' + __version__,\n    license='MIT',\n    packages=find_packages(exclude=['docs', 'tests*']),\n    include_package_data=True,\n    author='Artem Golubin',\n    install_requires=install_requires,\n    setup_requires=['numpy>=1.10', 'scipy>=0.17'],\n    dependency_links=dependency_links,\n    author_email='gh@rushter.com'\n)\n"
        }
      ]
    }
  ]
}