{
  "metadata": {
    "timestamp": 1736561348361,
    "page": 376,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aws/chalice",
      "stars": 10727,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".changes",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0751953125,
          "content": "[run]\nbranch = True\n[report]\nexclude_lines =\n    raise NotImplementedError.*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.130859375,
          "content": "sample/\n.cache\nvenv\ndocs/build/\n.idea\n__pycache__/\n.coverage\nchalice.egg-info/\n.hypothesis/\n.pytest_cache/\n.mypy_cache/\n*.pyc\n.vscode\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 10.1123046875,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\ninit-hook=\"import sys, os; sys.path.append(os.path.join('tests', 'plugins'))\"\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=compat.py,regions.py\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=codelinter,testlinter\n\n# Use multiple processes to speed up Pylint.\njobs=1\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=W0613,I0021,I0020,C0111,R0902,R0903,W0231,W0611,R0913,W0703,I0011,R0904,R0205,R1705,R1710,C0415,R1725,W0707,R1732,W1512,C0209,W1514,C0412,C0411,R1735\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=e,i,j,k,n,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{0,50}$\n\n# Regular expression matching correct constant names\nconst-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{1,50}$\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{0,50}$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,40}|(__.*__))$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression matching correct method names\n# Allow for the ast visitor method names of visit_CamelCase.\n# Allow for do_HTTPMETHOD used in chalice local.\nmethod-rgx=([a-z_][a-z0-9_]{2,50}|visit_[a-zA-Z]+|do_[A-Z]+)$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=.*\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\ntypevar-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$\ntypealias-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=80\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \" \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=5\n\n# Ignore comments when computing similarities.\nignore-comments=no\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=no\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis\nignored-modules=six.moves,aws_cdk\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set).\nignored-classes=SQLObject\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E0201 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,acl_users,aq_parent,objects,DoesNotExist,md5,sha1,sha224,sha256,sha384,sha512\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_|dummy|ignore\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=30\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=6\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=0\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,string,TERMIOS,Bastion,rexec,UserDict\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Typing is a third party package in python 2, but built-in to the standard\n# library for Python 3. This causes linting issues when typing get grouped\n# with the third party package imports. Since chalice was originally written\n# just for Python 2, the code standard is to treat as a third party library\n# and thus mark it as so when linting.\nknown-third-party=typing\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=builtins.Exception\n"
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.00390625,
          "content": "3.7\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 25.7294921875,
          "content": "# CHANGELOG\n\n\n## 1.31.3\n\n\n* enhancement:Pip:Update pip to the latest version (<24.4)\n* enhancement:CLI:Remove distutils warning when packaging/deploying apps (#2123)\n\n## 1.31.2\n\n\n* enhancement:SQS:Add configuration option for MaximumConcurrency for SQS event source (#2104)\n\n## 1.31.1\n\n\n* enhancement:pip:Update pip version to allow 24.0 (#2092)\n* bugfix:tar:Validate tar extraction does not escape destination dir (#1990)\n\n## 1.31.0\n\n\n* feature:Python:Add support for Python 3.12 (#2086)\n* enhancement:Python:Drop support for Python 3.7 (#2095)\n\n## 1.30.0\n\n\n* feature:Python:Add support for Python 3.11 (#2053)\n* enhancement:Pip:Update version dependency on pip (#2080)\n\n## 1.29.0\n\n\n* feature:Python:Add support for Python 3.10 (#2037)\n* enhancement:Pip:Bump pip version range to latest version <23.2 (#2034)\n\n## 1.28.0\n\n\n* enhancement:Terraform:Update required terraform version to support 1.3 (#2014)\n* enhancement:Pip:Bump pip version range to latest version <22.3 (#2016)\n* feature:Config:Add support for `log_retention_in_days` (#943)\n\n## 1.27.3\n\n\n* bugfix:Versioning:Fix version string updates used in the release process (#1971)\n\n## 1.27.2\n\n\n* enhancement:Terraform:Update aws provider constraint to allow versions 4.x (#1951)\n* enhancement:event-source:Add attribute for message attributes in SNSEvent and generated test events (#1934)\n\n## 1.27.1\n\n\n* enhancement:Pip:Bump pip version range to latest version <22.2 (#1924)\n* enhancement:Websockets:Add support for WebSockets API Terraform packaging (#1670)\n\n## 1.27.0\n\n\n* bugfix:Local:Set a default timeout when creating the local LambdaContext instance (#1896)\n* feature:CDK:Add support for CDK v2 (#1742)\n\n## 1.26.6\n\n\n* bugfix:pip:Fix RuntimeError with pip v22.x (#1887)\n\n## 1.26.5\n\n\n* enhancement:Terraform:Remove template provider in favor of locals (#1869)\n* enhancement:Terraform:Bump Terraform version to suppose 1.1.x (#1868)\n\n## 1.26.4\n\n\n* bugfix:Terraform:Use updated keywords for providing provider version constraints (#1717)\n\n## 1.26.3\n\n\n* enhancement:Errors:Remove redundant error code in error message string (#1339)\n* enhancement:VPC:Associate VPC endpoint with Rest API (#1449)\n\n## 1.26.2\n\n\n* enhancement:Dependencies:Update pyyaml to 6.x (#1830)\n* bugfix:Websocket:Correctly configure websocket endpoint in the aws-cn partition (#1820)\n\n## 1.26.1\n\n\n* enhancement:Dependencies:Bump pip dependency to latest released version (#1817)\n* enhancement:Tests:Don't include tests package in .whl file (#1814)\n\n## 1.26.0\n\n\n* feature:Websockets:Add support for setting the Websocket protocol from the connect handler (#1768)\n* feature:SQS:Added MaximumBatchingWindowInSeconds to SQS event handler (#1778)\n\n## 1.25.0\n\n\n* feature:Python:Add support for Python 3.9 (#1787)\n\n## 1.24.2\n\n\n* enhancement:Dependencies:Bump attrs dependency to latest version (#1786)\n* bugfix:Auth:Fix ARN parsing when generating a builtin AuthResponse (#1775)\n* enhancement:CLI:Upgrade Click dependency to support v8.0.0 (#1729)\n\n## 1.24.1\n\n\n* bugfix:GovCloud:Fix partition error when updating API Gateway in GovCloud region (#1770)\n\n## 1.24.0\n\n\n* feature:Python2.7:Remove support for Python 2.7 (#1766)\n* enhancement:Terraform:Update Terraform packaging to support version 1.0 (#1757)\n* enhancement:Typing:Add missing WebsocketEvent type information (#1746)\n* enhancement:S3 events:Add source account to Lambda permissions when configuring S3 events (#1635)\n* enhancement:Packaging:Add support for Terraform v0.15 (#1725)\n\n## 1.23.0\n\n\n* enhancement:Deploy:Wait for function state to be active when deploying\n* feature:SQS:Add queue_arn parameter to enable CDK integration with SQS event handler (#1681)\n\n## 1.22.4\n\n\n* enhancement:Types:Add missing types to app.pyi stub file (#1701)\n* bugfix:Custom Domain:Fix custom domain generation when using the CDK (#1640)\n* bugfix:Packaging:Special cases pyrsistent packaging (#1696)\n\n## 1.22.3\n\n\n* enhancement:Terraform:Bump Terraform version to include 0.14\n* bugfix:Typing:Fix type definitions in app.pyi (#1676)\n* bugfix:Terraform:Use references instead of function names in Terraform packaging (#1558)\n\n## 1.22.2\n\n\n* enhancement:Blueprint:Add log property to blueprint\n* bugfix:Pipeline:Fix build command in pipeline generation (#1653)\n* enhancement:Dependencies:Change enum-compat dependency to enum34 with version restrictions (#1667)\n\n## 1.22.1\n\n\n* enhancement:Pip:Bump pip version range to latest version 21.x (#1630)\n* enhancement:IAM:Improve client call collection when generation policies (#692)\n\n## 1.22.0\n\n\n* feature:CDK:Add built-in support for the AWS CDK (#1622)\n\n## 1.21.9\n\n\n* enhancement:Dependencies:Bump attr version constraint (#1620)\n\n## 1.21.8\n\n\n* enhancement:Authorizers:Add support for custom headers in built-in authorizers (#1613)\n\n## 1.21.7\n\n\n* enhancement:Terraform:Map custom domain outputs in Terraform packaging (#1601)\n\n## 1.21.6\n\n\n* enhancement:Packaging:Increase upper bound for AWS provider in Terraform to 3.x (#1596)\n* enhancement:Packaging:Add support for manylinux2014 wheels (#1551)\n\n## 1.21.5\n\n\n* bugfix:Config:Fix config validation for env vars on py27 (#1573)\n* bugfix:Pip:Bump pip version contraint (#1590)\n* bugfix:REST:Add Allow header with list of allowed methods when returning 405 error (#1583)\n\n## 1.21.4\n\n\n* enhancement:Local:Allow custom Chalice class in local mode (#1502)\n* bugfix:Layers:Ensure single reference to managed layer (#1563)\n\n## 1.21.3\n\n\n* enhancement:Test:Add test client methods for generating sample kinesis events\n* enhancement:Config:Validate env var values are strings (#1543)\n\n## 1.21.2\n\n\n* bugfix:Terraform:Fix issue with wildcard partition names in s3 event handlers (#1508)\n* bugfix:Auth:Fix special case processing for root URL auth (#1271)\n* enhancement:Middleware:Add support for HTTP middleware catching exceptions (#1541)\n\n## 1.21.1\n\n\n* bugfix:Websockets:Fix custom domain name configuration for websockets (#1531)\n* bugfix:Local:Add support for multiple actions in builtin auth in local mode (#1527)\n* bugfix:Websocket:Fix websocket client configuration when using a custom domain (#1503)\n* bugfix:Local:Fix CORs handling in local mode (#761)\n\n## 1.21.0\n\n\n* bugfix:Blueprints:Fix regression when invoking Lambda functions from blueprints (#1535)\n* feature:Events:Add support for Kinesis and DynamoDB event handlers (#987)\n\n## 1.20.1\n\n\n* bugfix:Blueprints:Preserve docstring in blueprints (#1525)\n* enhancement:Binary:Support returning native python types when using `*/*` for binary types (#1501)\n\n## 1.20.0\n\n\n* enhancement:Blueprints:Add `current_app` property to Blueprints (#1094)\n* enhancement:CLI:Set `AWS_CHALICE_CLI_MODE` env var whenever a Chalice CLI command is run (#1200)\n* feature:Middleware:Add support for middleware (#1509)\n* feature:X-Ray:Add support for AWS X-Ray (#464)\n\n## 1.19.0\n\n\n* feature:Pipeline:Add a new v2 template for the deployment pipeline CloudFormation template (#1506)\n\n## 1.18.1\n\n\n* bugfix:Packaging:Add fallback to retrieve name/version from sdist (#1486)\n* bugfix:Analyzer:Handle symbols with multiple (shadowed) namespaces (#1494)\n\n## 1.18.0\n\n\n* feature:Packaging:Add support for automatic layer creation (#1485, #1001)\n\n## 1.17.0\n\n\n* feature:Testing:Add Chalice test client (#1468)\n* enhancement:regions:Add support for non `aws` partitions including aws-cn and aws-us-gov (#792).\n* bugfix:dependencies:Fix error when using old versions of click by requiring >=7\n* bugfix:local:Fix local mode builtin authorizer not stripping query string from URL (#1470)\n\n## 1.16.0\n\n\n* enhancement:local:Avoid error from cognito client credentials in local authorizer (#1447)\n* bugfix:package:Traverse symlinks to directories when packaging the vendor directory (#583).\n* feature:DomainName:Add support for custom domain names to REST/WebSocket APIs (#1194)\n* feature:auth:Add support for oauth scopes on routes (#1444).\n\n## 1.15.1\n\n\n* bugfix:packaging:Fix setup.py dependencies where the wheel package was not being installed (#1435)\n\n## 1.15.0\n\n\n* feature:blueprints:Mark blueprints as an accepted API (#1250)\n* feature:package:Add ability to generate and merge yaml CloudFormation templates (#1425)\n* enhancement:terraform:Allow generated terraform template to be used as a terraform module (#1300)\n* feature:logs:Add support for tailing logs (#4).\n\n## 1.14.1\n\n\n* enhancement:pip:Update pip version range to 20.1.\n\n## 1.14.0\n\n\n* bugfix:packaging:Fix pandas packaging regression (#1398)\n* feature:CLI:Add ``dev plan/appgraph`` commands (#1396)\n* enhancement:SQS:Validate queue name is used and not queue URL or ARN (#1388)\n\n## 1.13.1\n\n\n* enhancement:local:Add support for multiValueHeaders in local mode (#1381).\n* bugfix:local:Make ``current_request`` thread safe in local mode (#759)\n* enhancement:local:Add support for cognito in local mode (#1377).\n* bugfix:packaging:Fix terraform generation when injecting custom domains (#1237)\n* enhancement:packaging:Ensure repeatable zip file generation (#1114).\n* bugfix:CORS:Fix CORS request when returning compressed binary types (#1336)\n\n## 1.13.0\n\n\n* bugfix:logs:Fix error for ``chalice logs`` when a Lambda function\nhas not been invoked (#1252)\n* feature:CORS:Add global CORS configuration (#70)\n* bugfix:packaging:Fix packaging simplejson (#1304)\n* feature:python:Add support for Python 3.8 (#1315)\n* feature:authorizer:Add support for invocation role in custom authorizer (#1303)\n* bugfix:packaging:Fix packaging on case-sensitive filesystems (#1356)\n\n## 1.12.0\n\n\n* feature:CLI:Add ``generate-models`` command (#1245)\n* enhancement:websocket:Add ``close`` and ``info`` commands to websocket api (#1259)\n* enhancement:dependencies:Bump upper bound on PIP to ``<19.4`` (#1273, #1272)\n\n## 1.11.1\n\n\n* bugfix:blueprint:Fix mouting blueprints with root routes (#1230)\n* feature:rest-api:Add support for multi-value headers responses (#1205)\n\n## 1.11.0\n\n\n* feature:config:Add support for stage independent lambda configuration (#1162)\n* feature:event-source:Add support for subscribing to CloudWatch Events (#1126)\n* feature:event-source:Add a ``description`` argument to CloudWatch schedule events (#1155)\n* bugfix:rest-api:Fix deployment of API Gateway resource policies (#1220)\n\n## 1.10.0\n\n\n* feature:websocket:Add experimental support for websockets (#1017)\n* feature:rest-api:API Gateway Endpoint Type Configuration (#1160)\n* feature:rest-api:API Gateway Resource Policy Configuration (#1160)\n* feature:packaging:Add --merge-template option to package command (#1195)\n* feature:packaging:Add support for packaging via terraform (#1129)\n\n## 1.9.1\n\n\n* enhancement:rest-api:Make MultiDict mutable (#1158)\n\n## 1.9.0\n\n\n* enhancement:dependencies:Update PIP to support up to 19.1.x (#1104)\n* bugfix:rest-api:Fix handling of more complex Accept headers for binary\ncontent types (#1078)\n* enhancement:rest-api:Raise TypeError when trying to serialize an unserializable\ntype (#1100)\n* enhancement:policy:Update ``policies.json`` file (#1110)\n* feature:rest-api:Support repeating values in the query string (#1131)\n* feature:packaging:Add layer support to chalice package (#1130)\n* bugfix:rest-api:Fix bug with route ``name`` kwarg raising a ``TypeError`` (#1112)\n* enhancement:logging:Change exceptions to always be logged at the ERROR level (#969)\n* bugfix:CLI:Fix bug handling exceptions during ``chalice invoke`` on\nPython 3.7 (#1139)\n* bugfix:rest-api:Add support for API Gateway compression (#672)\n* enhancement:packaging:Add support for both relative and absolute paths for\n``--package-dir`` (#940)\n\n## 1.8.0\n\n\n* bugfix:packaging:Fall back to pure python version of yaml parser\nwhen unable to compile C bindings for PyYAML (#1074)\n* feature:packaging:Add support for Lambda layers. (#1001)\n\n## 1.7.0\n\n\n* bugfix:packaging:Fix packaging multiple local directories as dependencies (#1047)\n* feature:event-source:Add support for passing SNS ARNs to ``on_sns_message`` (#1048)\n* feature:blueprint:Add support for Blueprints (#1023)\n* feature:config:Add support for opting-in to experimental features (#1053)\n* feature:event-source:Provide Lambda context in event object (#856)\n\n## 1.6.2\n\n\n* enhancement:dependencies:Add support for pip 18.2 (#991)\n* enhancement:logging:Add more detailed debug logs to the packager. (#934)\n* feature:python:Add support for python3.7 (#992)\n* feature:rest-api:Support bytes for the application/json binary type (#988)\n* enhancement:rest-api:Use more compact JSON representation by default for dicts (#958)\n* enhancement:logging:Log internal exceptions as errors (#254)\n* feature:rest-api:Generate swagger documentation from docstrings (#574)\n\n## 1.6.1\n\n\n* bugfix:local:Fix local mode issue with unicode responses and Content-Length (#910)\n* enhancement:dev:Fix issue with ``requirements-dev.txt`` not setting up a working\ndev environment (#920)\n* enhancement:dependencies:Add support for pip 18 (#910)\n\n## 1.6.0\n\n\n* feature:CLI:Add ``chalice invoke`` command (#900)\n\n## 1.5.0\n\n\n* feature:policy:Add support for S3 upload_file/download_file in\npolicy generator (#889)\n\n## 1.4.0\n\n\n* enhancement:CI-CD:Add support for generating python 3.6 pipelines (#858)\n* feature:event-source:Add support for connecting lambda functions to S3 events (#855)\n* feature:event-source:Add support for connecting lambda functions to SNS message (#488)\n* enhancement:local:Make ``watchdog`` an optional dependency and add a built in\n``stat()`` based file poller (#867)\n* feature:event-source:Add support for connecting lambda functions to an SQS queue (#884)\n\n## 1.3.0\n\n\n* feature:config:Add support for Lambdas in a VPC (#413, #837, #673)\n* feature:packaging:Add support for packaging local directories (#653)\n* enhancement:local:Add support for automatically reloading the local\ndev server when files are modified (#316, #846, #706)\n* enhancement:logging:Add support for viewing cloudwatch logs of all\nlambda functions (#841, #849)\n\n## 1.2.3\n\n\n* enhancement:dependency:Add support for pip 10 (#808)\n* enhancement:policy:Update ``policies.json`` file (#817)\n\n## 1.2.2\n\n\n* bugfix:packaging:Fix package command not correctly setting environment variables (#795)\n\n## 1.2.1\n\n\n* enhancement:rest-api:Add CORS headers to error response (#715)\n* bugfix:local:Fix parsing empty query strings in local mode (#767)\n* bugfix:packaging:Fix regression in ``chalice package`` when using role arns (#793)\n\n## 1.2.0\n\nThis release features a rewrite of the core deployment\ncode used in Chalice.  This is a backwards compatible change\nfor users, but you may see changes to the autogenerated\nfiles Chalice creates.\nPlease read the `upgrade notes for 1.2.0\n<http://chalice.readthedocs.io/en/latest/upgrading.html#v1-2-0>`__\nfor more detailed information about upgrading to this release.\n\n\n\n* enhancement:rest-api:Print out full stack trace when an error occurs (#711)\n* enhancement:rest-api:Add ``image/jpeg`` as a default binary content type (#707)\n* feature:event-source:Add support for AWS Lambda only projects (#162, #640)\n* bugfix:policy:Fix inconsistent IAM role generation with pure lambdas (#685)\n* enhancement:deployment:Rewrite Chalice deployer to more easily support additional AWS resources (#604)\n* feature:packaging:Update the ``chalice package`` command to support\npure lambda functions and scheduled events. (#772)\n* bugfix:packaging:Fix packager edge case normalizing sdist names (#778)\n* bugfix:packaging:Fix SQLAlchemy packaging (#778)\n* bugfix:packaging:Fix packaging abi3, wheels this fixes cryptography 2.2.x packaging (#764)\n\n## 1.1.1\n\n\n* feature:CLI:Add ``--connection-timeout`` to the ``deploy`` command (#344)\n* bugfix:policy:Fix IAM role creation issue (#565)\n* bugfix:local:Fix `chalice local` handling of browser requests (#565)\n* enhancement:policy:Support async/await syntax in automatic policy generation (#565)\n* enhancement:packaging:Support additional PyPi package formats (.tar.bz2) (#720)\n\n## 1.1.0\n\n\n* enhancement:rest-api:Default to ``None`` in local mode when no query parameters\nare provided (#593)\n* enhancement:local:Add support for binding a custom address for local dev server (#596)\n* bugfix:rest-api:Fix local mode handling of routes with trailing slashes (#582)\n* bugfix:config:Scale ``lambda_timeout`` parameter correctly in local mode (#579)\n* feature:CI-CD:Add ``--codebuild-image`` to the ``generate-pipeline`` command (#609)\n* feature:CI-CD:Add ``--source`` and ``--buildspec-file`` to the\n``generate-pipeline`` command (#609)\n\n## 1.0.4\n\n\n* bugfix:packaging:Fix issue deploying some packages in Windows with utf-8 characters (#560)\n* feature:packaging:Add support for custom authorizers with ``chalice package`` (#580)\n\n## 1.0.3\n\n\n* bugfix:packaging:Fix issue with some packages with `-` or `.` in their distribution name (#555)\n* bugfix:rest-api:Fix issue where chalice local returned a 403 for successful OPTIONS requests (#554)\n* bugfix:local:Fix issue with chalice local mode causing http clients to hang on responses\nwith no body (#525)\n* enhancement:local:Add ``--stage`` parameter to ``chalice local`` (#545)\n* bugfix:policy:Fix issue with analyzer that followed recursive functions infinitely (#531)\n\n## 1.0.2\n\n\n* bugfix:rest-api:Fix issue where requestParameters were not being mapped\ncorrectly resulting in invalid generated javascript SDKs (#498)\n* bugfix:rest-api:Fix issue where ``api_gateway_stage`` was being\nignored when set in the ``config.json`` file (#495)\n* bugfix:rest-api:Fix bug where ``raw_body`` would raise an exception if no HTTP\nbody was provided (#503)\n* bugfix:CLI:Fix bug where exit codes were not properly being propagated during packaging (#500)\n* feature:local:Add support for Builtin Authorizers in local mode (#404)\n* bugfix:packaging:Fix environment variables being passed to subprocess while packaging (#501)\n* enhancement:rest-api:Allow view to require API keys as well as authorization (#473)\n\n## 1.0.1\n\n\n* bugfix:packaging:Only use alphanumeric characters for event names in SAM template (#450)\n* enhancement:config:Print useful error message when config.json is invalid (#458)\n* bugfix:rest-api:Fix api gateway stage being set incorrectly in non-default chalice stage\n(`#$70 <https://github.com/aws/chalice/issues/470>`__)\n\n## 1.0.0\n\n\n* enhancement:rest-api:Change default API Gateway stage name to ``api`` (#431)\n* enhancement:local:Add support for ``CORSConfig`` in ``chalice local`` (#436)\n* enhancement:logging:Propagate ``DEBUG`` log level when setting ``app.debug`` (#386)\n* feature:rest-api:Add support for wildcard routes and HTTP methods in ``AuthResponse`` (#403)\n* bugfix:policy:Fix bug when analyzing list comprehensions (#412)\n* enhancement:local:Update ``chalice local`` to use HTTP 1.1 (#448)\n\n## 1.0.0b2\n\nPlease read the `upgrade notes for 1.0.0b2\n<http://chalice.readthedocs.io/en/latest/upgrading.html#v1-0-0b2>`__\nfor more detailed information about upgrading to this release.\n\nNote: to install this beta version of chalice you must specify\n``pip install 'chalice>=1.0.0b2,<2.0.0'`` or\nuse the ``--pre`` flag for pip: ``pip install --pre chalice``.\n\n\n* enhancement:local:Set env vars from config in ``chalice local`` (#396)\n* bugfix:packaging:Fix edge case when building packages with optional c extensions (#421)\n* enhancement:policy:Remove legacy ``policy.json`` file support. Policy files must\nuse the stage name, e.g. ``policy-dev.json`` (#430)\n* bugfix:deployment:Fix issue where IAM role policies were updated twice on redeploys (#428)\n* enhancement:rest-api:Validate route path is not an empty string (#432)\n* enhancement:rest-api:Change route code to invoke view function with kwargs instead of\npositional args (#429)\n\n## 1.0.0b1\n\nPlease read the `upgrade notes for 1.0.0b1\n<http://chalice.readthedocs.io/en/latest/upgrading.html#v1-0-0b1>`__\nfor more detailed information about upgrading to this release.\n\nNote: to install this beta version of chalice you must specify\n``pip install 'chalice>=1.0.0b1,<2.0.0'`` or\nuse the ``--pre`` flag for pip: ``pip install --pre chalice``.\n\n\n\n* bugfix:rest-api:Fix unicode responses being quoted in python 2.7 (#262)\n* feature:event-source:Add support for scheduled events (#390)\n* feature:event-source:Add support for pure lambda functions (#390)\n* feature:packaging:Add support for wheel packaging. (#249)\n\n## 0.10.1\n\n\n* bugfix:deployment:Fix deployment issue for projects deployed with versions\nprior to 0.10.0 (#387)\n* bugfix:policy:Fix crash in analyzer when encountering genexprs and listcomps (#263)\n\n## 0.10.0\n\n\n* bugfix:deployment:Fix issue where provided ``iam_role_arn`` was not respected on\nredeployments of chalice applications and in the CloudFormation template\ngenerated by ``chalice package`` (#339)\n* bugfix:config:Fix ``autogen_policy`` in config being ignored (#367)\n* feature:rest-api:Add support for view functions that share the same view url but\ndiffer by HTTP method (#81)\n* enhancement:deployment:Improve deployment error messages for deployment packages that are\ntoo large (#246, #330, #380)\n* feature:rest-api:Add support for built-in authorizers (#356)\n\n## 0.9.0\n\n\n* feature:rest-api:Add support for ``IAM`` authorizer (#334)\n* feature:config:Add support for configuring ``lambda_timeout``, ``lambda_memory_size``,\nand ``tags`` in your AWS Lambda function (#347)\n* bugfix:packaging:Fix vendor directory contents not being importable locally (#350)\n* feature:rest-api:Add support for binary payloads (#348)\n\n## 0.8.2\n\n\n* bugfix:CLI:Fix issue where ``--api-gateway-stage`` was being\nignored  (#325)\n* feature:CLI:Add ``chalice delete`` command (#40)\n\n## 0.8.1\n\n\n* enhancement:deployment:Alway overwrite existing API Gateway Rest API on updates (#305)\n* enhancement:CORS:Added more granular support for CORS (#311)\n* bugfix:local:Fix duplicate content type header in local model (#311)\n* bugfix:rest-api:Fix content type validation when charset is provided (#306)\n* enhancement:rest-api:Add back custom authorizer support (#322)\n\n## 0.8.0\n\n\n* feature:python:Add support for python3! (#296)\n* bugfix:packaging:Fix swagger generation when using ``api_key_required=True`` (#279)\n* bugfix:CI-CD:Fix ``generate-pipeline`` to install requirements file before packaging (#295)\n\n## 0.7.0\n\n\n* feature:CLI:Add ``chalice package`` command.  This will\ncreate a SAM template and Lambda deployment package that\ncan be subsequently deployed by AWS CloudFormation. (#258)\n* feature:CLI:Add a ``--stage-name`` argument for creating chalice stages.\nA chalice stage is a completely separate set of AWS resources.\nAs a result, most configuration values can also be specified\nper chalice stage. (#264, #270)\n* feature:policy:Add support for ``iam_role_file``, which allows you to\nspecify the file location of an IAM policy to use for your app (#272)\n* feature:config:Add support for setting environment variables in your app (#273)\n* feature:CI-CD:Add a ``generate-pipeline`` command (#277)\n\n## 0.6.0\n\nCheck out the `upgrade notes for 0.6.0\n<http://chalice.readthedocs.io/en/latest/upgrading.html#v0-6-0>`__\nfor more detailed information about changes in this release.\n\n\n\n* feature:local:Add port parameter to local command (#220)\n* feature:packaging:Add support for binary vendored packages (#182, #106, #42)\n* feature:rest-api:Add support for customizing the returned HTTP response (#240, #218, #110, #30, #226)\n* enhancement:packaging:Always inject latest runtime to allow for chalice upgrades (#245)\n\n## 0.5.1\n\n\n* enhancement:local:Add support for serializing decimals in ``chalice local`` (#187)\n* enhancement:local:Add stdout handler for root logger when using ``chalice local`` (#186)\n* enhancement:local:Map query string parameters when using ``chalice local`` (#184)\n* enhancement:rest-api:Support Content-Type with a charset (#180)\n* bugfix:deployment:Fix not all resources being retrieved due to pagination (#188)\n* bugfix:deployment:Fix issue where root resource was not being correctly retrieved (#205)\n* bugfix:deployment:Handle case where local policy does not exist\n(`29 <https://github.com/awslabs/chalice/issues/29>`__)\n\n## 0.5.0\n\n\n* enhancement:logging:Add default application logger (#149)\n* enhancement:local:Return 405 when method is not supported when running\n``chalice local`` (#159)\n* enhancement:SDK:Add path params as requestParameters so they can be used\nin generated SDKs as well as cache keys (#163)\n* enhancement:rest-api:Map cognito user pool claims as part of request context (#165)\n* feature:CLI:Add ``chalice url`` command to print the deployed URL (#169)\n* enhancement:deployment:Bump up retry limit on initial function creation to 30 seconds (#172)\n* feature:local:Add support for ``DELETE`` and ``PATCH`` in ``chalice local`` (#167)\n* feature:CLI:Add ``chalice generate-sdk`` command (#178)\n\n## 0.4.0\n\n\n* bugfix:deployment:Fix issue where role name to arn lookup was failing due to lack of pagination (#139)\n* enhancement:rest-api:Raise errors when unknown kwargs are provided to ``app.route(...)`` (#144)\n* enhancement:config:Raise validation error when configuring CORS and an OPTIONS method (#142)\n* feature:rest-api:Add support for multi-file applications (#21)\n* feature:local:Add support for ``chalice local``, which runs a local HTTP server for testing (#22)\n\n## 0.3.0\n\n\n* bugfix:rest-api:Fix bug with case insensitive headers (#129)\n* feature:CORS:Add initial support for CORS (#133)\n* enhancement:deployment:Only add API gateway permissions if needed (#48)\n* bugfix:policy:Fix error when dict comprehension is encountered during policy generation (#131)\n* enhancement:CLI:Add ``--version`` and ``--debug`` options to the chalice CLI\n\n## 0.2.0\n\n\n* enhancement:rest-api:Add support for input content types besides ``application/json`` (#96)\n* enhancement:rest-api:Allow ``ChaliceViewErrors`` to propagate, so that API Gateway\ncan properly map HTTP status codes in non debug mode (#113)\n* enhancement:deployment:Add windows compatibility (#31)\n\n## 0.1.0\n\n\n* enhancement:packaging:Require ``virtualenv`` as a package dependency. (#33)\n* enhancement:CLI:Add ``--profile`` option when creating a new project (#28)\n* enhancement:rest-api:Add support for more error codes exceptions (#34)\n* enhancement:rest-api:Improve error validation when routes containing a\ntrailing ``/`` char (#65)\n* enhancement:rest-api:Validate duplicate route entries (#79)\n* enhancement:policy:Ignore lambda expressions in policy analyzer (#74)\n* enhancement:rest-api:Print original error traceback in debug mode (#50)\n* feature:rest-api:Add support for authenticate routes (#14)\n* feature:policy:Add ability to disable IAM role management (#61)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.rst",
          "type": "blob",
          "size": 0.337890625,
          "content": "===============\nCode of Conduct\n===============\n\n\nThis project has adopted the\n`Amazon Open Source Code of Conduct <https://aws.github.io/code-of-conduct>`__.\nFor more information see the\n`Code of Conduct FAQ <https://aws.github.io/code-of-conduct-faq>`__\nor contact opensource-codeofconduct@amazon.com with any additional\nquestions or comments.\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 6.3095703125,
          "content": "============\nContributing\n============\n\nWe work hard to provide a high-quality and useful framework, and we greatly value\nfeedback and contributions from our community. Whether it's a new feature,\ncorrection, or additional documentation, we welcome your pull requests. Please\nsubmit any `issues <https://github.com/aws/chalice/issues>`__\nor `pull requests <https://github.com/aws/chalice/pulls>`__ through GitHub.\n\nThis document contains guidelines for contributing code and filing issues.\n\nContributing Code\n=================\n\nThis list below are guidelines to use when submitting pull requests.\nThese are the same set of guidelines that the core contributors use\nwhen submitting changes, and we ask the same of all community\ncontributions as well:\n\n* Chalice is released under the\n  `Apache license <http://aws.amazon.com/apache2.0/>`__.\n  Any code you submit will be released under that license.\n* We maintain a high percentage of code coverage in our tests.  As\n  a general rule of thumb, code changes should not lower the overall\n  code coverage percentage for the project.  To help with this,\n  we use `codecov <https://codecov.io/gh/aws/chalice>`__, which will\n  comment on changes in code coverage for every pull request.\n  In practice, this means that every bug fix and feature addition should\n  include unit tests, and optionally functional and integration tests.\n* All PRs must run cleanly through ``make prcheck``.  This is described\n  in more detail in the sections below.\n* All new features must include documentation before they can be merged.\n\n\nFeature Development\n===================\n\nAny significant feature development for chalice should have a\ncorresponding github issue for discussion.  This gives several benefits:\n\n* Helps avoid wasted work by discussing the proposed API changes before\n  significant dev work is started.\n* Gives a single place to capture discussion about the rationale for\n  a feature.\n\nThis applies to:\n\n* Any feature that proposes modifying the public API for chalice\n* Additions to the chalice config file\n* Any new CLI commands\n\nIf you'd like to implement a significant feature for chalice,\nplease file an `issue <https://github.com/aws/chalice/issues>`__\nto start the design discussion.\n\nAll of the existing proposals are tagged with `proposals\n<https://github.com/aws/chalice/issues?q=is%3Aopen+is%3Aissue+label%3Aproposals>`__.\n\n\nDevelopment Environment Setup\n=============================\n\nFirst, create a virtual environment for chalice::\n\n    $ virtualenv venv\n    $ source venv/bin/activate\n\nKeep in mind that chalice is designed to work with AWS Lambda,\nso you should ensure your virtual environment is created with\npython2.7, python3.6, or python3.7, which are the versions of python currently supported by\nAWS Lambda.\n\nNext, you'll need to install chalice.  The easiest way to configure this\nis to  use::\n\n    $ pip install -e \".[event-file-poller]\"\n\n\nRun this command in the root directory of the chalice repo.\n\nNext, you have a few options.  There are various requirements files\ndepending on what you'd like to do.\n\nFor example, if you'd like to work on chalice, either fixing bugs or\nadding new features, install ``requirements-dev.txt``::\n\n\n    $ pip install -r requirements-dev.txt\n\n\nRunning Tests\n-------------\n\nChalice uses `pytest <https://docs.pytest.org/en/latest/>`__ to run tests.\nThe tests are categorized into 3 categories:\n\n* ``unit`` - Fast tests that don't make any IO calls (including file system\n  access).  Object dependencies are usually mocked out.\n* ``functional`` - These tests will test multiple components together,\n  typically through an interface that's close to what an end user would\n  be using.  For example, there are CLI functional tests that will invoke the\n  same functions that would correspond to a ``chalice deploy`` command.\n  In the functional tests, AWS calls are stubbed, but they'll go through the\n  `botocore stubber\n  <http://botocore.readthedocs.io/en/latest/reference/stubber.html>`__.\n* ``integration`` - These tests require an AWS account and will actually\n  create real AWS resources.  The integration tests in chalice usually\n  involve deploying a sample app and making assertions about the deployed\n  app by making HTTP/AWS requests to external endpoints.\n\nDuring development, you'll generally run the unit tests, and less\nfrequently you'll run the functional tests (the functional tests take\nan order of magnitude longer than the unit tests).  To run the unit tests,\nyou can run::\n\n    $ py.test tests/unit/\n\nTo run the functional tests you can run::\n\n    $ py.test tests/functional/\n\nThere's also a ``Makefile`` in the repo and you can run\n``make test`` to run both the unit and functional tests.\n\nCode Analysis\n-------------\n\nChalice uses several python linters to help ensure high\ncode quality.  This also helps to cut down on the noise\nfor pull request reviews because many issues are caught\nlocally during development.\n\nTo run all the linters, you can run ``make check``.\nThis will run:\n\n* `flake8 <http://flake8.pycqa.org/en/latest/>`__, a tool\n  for checking pep8 as well as common lint checks\n* `doc8 <https://pypi.python.org/pypi/doc8>`__, a style\n  checker for sphinx docs\n* `pydocstyle <https://github.com/PyCQA/pydocstyle>`__, a\n  docstring checker\n* `pylint <https://www.pylint.org/>`__, a much more\n  exhaustive linter that can catch additional issues\n  compared to ``flake8``.\n\nType Checking\n-------------\n\nChalice leverages the type hints introduced in python 3.5\nfrom `pep 484 <https://www.python.org/dev/peps/pep-0484/>`__\nand `pep 526 <https://www.python.org/dev/peps/pep-0526/>`__.\n`mypy <http://mypy-lang.org/>`__ is used to check types.\nAll chalice code must have type hints added or else the\nCI build will fail.  To check types you can run ``make typecheck``.\n\nChalice supports python2 as well as python3.  Because of\nthe requirement of supporting python2, function annotations\nare not allowed for specifying type hints, you must use\ntype comments as outlined in pep 484.\n\nKeep in mind that ``mypy`` only runs in python3, so you'll need\nto either use python3 when developing features or have mypy\nglobally installed.\n\nPRCheck\n-------\n\nBefore submitting a PR, ensure that ``make prcheck`` runs\nwithout any errors.  This command will run the linters,\nthe typecheckers and the unit and functional tests.\n``make prcheck`` is also run as part of the travis CI build.\nPull requests must pass ``make prcheck`` before they can be merged.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1865234375,
          "content": "include CONTRIBUTING.rst\ninclude CHANGELOG.md\ninclude LICENSE\ninclude NOTICE\ninclude README.rst\nrecursive-include chalice *.json\n\nrecursive-exclude * __pycache__\nrecursive-exclude * *.py[co]\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.8779296875,
          "content": "# Eventually I'll add:\n# py.test --cov chalice --cov-report term-missing --cov-fail-under 95 tests/\n# which will fail if tests are under 95%\nTESTS=tests/unit tests/functional tests/integration\n\ncheck:\n\t###### FLAKE8 #####\n\t# No unused imports, no undefined vars,\n\tflake8 --ignore=E731,W503,W504 --exclude chalice/__init__.py,chalice/compat.py,chalice/vendored/botocore/regions.py --max-complexity 10 chalice/\n\tflake8 --ignore=E731,W503,W504,F401 --max-complexity 10 chalice/compat.py\n\tflake8 tests/unit/ tests/functional/ tests/integration tests/aws\n\t#\n\t# Proper docstring conventions according to pep257\n\t#\n\t#\n\tpydocstyle --add-ignore=D100,D101,D102,D103,D104,D105,D107,D204,D301 --match='(?!(test_|regions)).*\\.py' chalice/\n\npylint:\n\t###### PYLINT ######\n\tpylint --rcfile .pylintrc chalice\n\t# Run our custom linter on test code.\n\tpylint --disable=I,E,W,R,C,F --enable C9999,C9998 tests/\n\ntest:\n\tpy.test -v $(TESTS)\n\ntypecheck:\n\tmypy --ignore-missing-imports --follow-imports=skip -p chalice --disallow-untyped-defs --strict-optional --warn-no-return\n\ncoverage:\n\tpy.test --cov chalice --cov-report term-missing $(TESTS)\n\ncoverage-unit:\n\tpy.test --cov chalice --cov-report term-missing tests/unit\n\nhtmlcov:\n\tpy.test --cov chalice --cov-report html $(TESTS)\n\trm -rf /tmp/htmlcov && mv htmlcov /tmp/\n\topen /tmp/htmlcov/index.html\n\ndoccheck:\n\t##### DOC8 ######\n\t# Correct rst formatting for documentation\n\t#\n\t# TODO: Remove doc8\n\t##\n\tdoc8 docs/source --ignore-path docs/source/topics/multifile.rst\n\t#\n\t#\n\t# Verify we have no broken external links\n\t# as well as no undefined internal references.\n\t$(MAKE) -C docs linkcheck\n\t# Verify we can build the docs.  The\n\t# treat warnings as errors flag is enabled\n\t# so any sphinx-build warnings will fail the build.\n\t$(MAKE) -C docs html\n\nprcheck: check pylint coverage doccheck typecheck\n\ninstall-dev-deps:\n\tpip install -r requirements-dev.txt --upgrade --upgrade-strategy eager -e .\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.0625,
          "content": "chalice\nCopyright 2015 James Saryerwinnie. All Rights Reserved.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.1181640625,
          "content": "===========\nAWS Chalice\n===========\n\n.. image:: https://badges.gitter.im/awslabs/chalice.svg\n   :target: https://gitter.im/awslabs/chalice?utm_source=badge&utm_medium=badge\n   :alt: Gitter\n.. image:: https://readthedocs.org/projects/chalice/badge/?version=latest\n   :target: http://aws.github.io/chalice/?badge=latest\n   :alt: Documentation Status\n\n\n.. image:: https://aws.github.io/chalice/_images/chalice-logo-whitespace.png\n   :target: https://aws.github.io/chalice/\n   :alt: Chalice Logo\n\n\nChalice is a framework for writing serverless apps in python. It allows\nyou to quickly create and deploy applications that use AWS Lambda.  It provides:\n\n* A command line tool for creating, deploying, and managing your app\n* A decorator based API for integrating with Amazon API Gateway, Amazon S3,\n  Amazon SNS, Amazon SQS, and other AWS services.\n* Automatic IAM policy generation\n\n\nYou can create Rest APIs:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name=\"helloworld\")\n\n    @app.route(\"/\")\n    def index():\n        return {\"hello\": \"world\"}\n\nTasks that run on a periodic basis:\n\n.. code-block:: python\n\n    from chalice import Chalice, Rate\n\n    app = Chalice(app_name=\"helloworld\")\n\n    # Automatically runs every 5 minutes\n    @app.schedule(Rate(5, unit=Rate.MINUTES))\n    def periodic_task(event):\n        return {\"hello\": \"world\"}\n\n\nYou can connect a lambda function to an S3 event:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name=\"helloworld\")\n\n    # Whenever an object is uploaded to 'mybucket'\n    # this lambda function will be invoked.\n\n    @app.on_s3_event(bucket='mybucket')\n    def handler(event):\n        print(\"Object uploaded for bucket: %s, key: %s\"\n              % (event.bucket, event.key))\n\nAs well as an SQS queue:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name=\"helloworld\")\n\n    # Invoke this lambda function whenever a message\n    # is sent to the ``my-queue-name`` SQS queue.\n\n    @app.on_sqs_message(queue='my-queue-name')\n    def handler(event):\n        for record in event:\n            print(\"Message body: %s\" % record.body)\n\n\nAnd several other AWS resources.\n\nOnce you've written your code, you just run ``chalice deploy``\nand Chalice takes care of deploying your app.\n\n::\n\n    $ chalice deploy\n    ...\n    https://endpoint/dev\n\n    $ curl https://endpoint/api\n    {\"hello\": \"world\"}\n\nUp and running in less than 30 seconds.\nGive this project a try and share your feedback with us here on Github.\n\nThe documentation is available\n`here <http://aws.github.io/chalice/>`__.\n\nQuickstart\n==========\n\n.. quick-start-begin\n\nIn this tutorial, you'll use the ``chalice`` command line utility\nto create and deploy a basic REST API.  This quickstart uses Python 3.7,\nbut AWS Chalice supports all versions of python supported by AWS Lambda,\nwhich includes Python 3.7 through python 3.12.\n\nYou can find the latest versions of python on the\n`Python download page <https://www.python.org/downloads/>`_.\n\nTo install Chalice, we'll first create and activate a virtual environment\nin python3.7::\n\n    $ python3 --version\n    Python 3.7.3\n    $ python3 -m venv venv37\n    $ . venv37/bin/activate\n\nNext we'll install Chalice using ``pip``::\n\n    $ python3 -m pip install chalice\n\nYou can verify you have chalice installed by running::\n\n    $ chalice --help\n    Usage: chalice [OPTIONS] COMMAND [ARGS]...\n    ...\n\n\nCredentials\n-----------\n\nBefore you can deploy an application, be sure you have\ncredentials configured.  If you have previously configured your\nmachine to run boto3 (the AWS SDK for Python) or the AWS CLI then\nyou can skip this section.\n\nIf this is your first time configuring credentials for AWS you\ncan follow these steps to quickly get started::\n\n    $ mkdir ~/.aws\n    $ cat >> ~/.aws/config\n    [default]\n    aws_access_key_id=YOUR_ACCESS_KEY_HERE\n    aws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n    region=YOUR_REGION (such as us-west-2, us-west-1, etc)\n\nIf you want more information on all the supported methods for\nconfiguring credentials, see the\n`boto3 docs\n<http://boto3.readthedocs.io/en/latest/guide/configuration.html>`__.\n\n\nCreating Your Project\n---------------------\n\nThe next thing we'll do is use the ``chalice`` command to create a new\nproject::\n\n    $ chalice new-project helloworld\n\nThis will create a ``helloworld`` directory.  Cd into this\ndirectory.  You'll see several files have been created for you::\n\n    $ cd helloworld\n    $ ls -la\n    drwxr-xr-x   .chalice\n    -rw-r--r--   app.py\n    -rw-r--r--   requirements.txt\n\nYou can ignore the ``.chalice`` directory for now, the two main files\nwe'll focus on is ``app.py`` and ``requirements.txt``.\n\nLet's take a look at the ``app.py`` file:\n\n.. code-block:: python\n\n    from chalice import Chalice\n\n    app = Chalice(app_name='helloworld')\n\n\n    @app.route('/')\n    def index():\n        return {'hello': 'world'}\n\n\nThe ``new-project`` command created a sample app that defines a\nsingle view, ``/``, that when called will return the JSON body\n``{\"hello\": \"world\"}``.\n\n\nDeploying\n---------\n\nLet's deploy this app.  Make sure you're in the ``helloworld``\ndirectory and run ``chalice deploy``::\n\n    $ chalice deploy\n    Creating deployment package.\n    Creating IAM role: helloworld-dev\n    Creating lambda function: helloworld-dev\n    Creating Rest API\n    Resources deployed:\n      - Lambda ARN: arn:aws:lambda:us-west-2:12345:function:helloworld-dev\n      - Rest API URL: https://abcd.execute-api.us-west-2.amazonaws.com/api/\n\nYou now have an API up and running using API Gateway and Lambda::\n\n    $ curl https://qxea58oupc.execute-api.us-west-2.amazonaws.com/api/\n    {\"hello\": \"world\"}\n\nTry making a change to the returned dictionary from the ``index()``\nfunction.  You can then redeploy your changes by running ``chalice deploy``.\n\n.. quick-start-end\n\nNext Steps\n----------\n\nYou've now created your first app using ``chalice``.  You can make\nmodifications to your ``app.py`` file and rerun ``chalice deploy`` to\nredeploy your changes.\n\nAt this point, there are several next steps you can take.\n\n* `Tutorials <https://aws.github.io/chalice/tutorials/index.html>`__\n  - Choose from among several guided tutorials that will\n  give you step-by-step examples of various features of Chalice.\n* `Topics <https://aws.github.io/chalice/topics/index.html>`__ - Deep\n  dive into documentation on specific areas of Chalice.\n  This contains more detailed documentation than the tutorials.\n* `API Reference <https://aws.github.io/chalice/api.html>`__ - Low level\n  reference documentation on all the classes and methods that are part of the\n  public API of Chalice.\n\nIf you're done experimenting with Chalice and you'd like to cleanup, you can\nuse the ``chalice delete`` command, and Chalice will delete all the resources\nit created when running the ``chalice deploy`` command.\n\n::\n\n    $ chalice delete\n    Deleting Rest API: abcd4kwyl4\n    Deleting function aws:arn:lambda:region:123456789:helloworld-dev\n    Deleting IAM Role helloworld-dev\n\n\nFeedback\n========\n\nWe'd also love to hear from you.  Please create any Github issues for\nadditional features you'd like to see over at\nhttps://github.com/aws/chalice/issues.  You can also chat with us\non gitter: https://gitter.im/awslabs/chalice\n"
        },
        {
          "name": "chalice",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-dev.in",
          "type": "blob",
          "size": 0.150390625,
          "content": "-r requirements-test.in\npylint<4.0.0\ndoc8<1.0.0\npydocstyle\nflake8\nSphinx==4.3.2\ndocutils\nmypy\nwheel\npygments\ntypes-six\ntypes-python-dateutil\ntypes-PyYAML\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 3.1748046875,
          "content": "#\n# This file is autogenerated by pip-compile with Python 3.8\n# by the following command:\n#\n#    pip-compile --output-file=requirements-dev.txt requirements-dev.in\n#\nalabaster==0.7.13\n    # via sphinx\nastroid==3.2.4\n    # via pylint\nattrs==24.2.0\n    # via hypothesis\nbabel==2.16.0\n    # via sphinx\nboto3==1.35.66\n    # via -r requirements-test.in\nbotocore==1.35.66\n    # via\n    #   boto3\n    #   s3transfer\ncertifi==2024.8.30\n    # via requests\ncharset-normalizer==3.4.0\n    # via requests\ncoverage[toml]==7.6.1\n    # via\n    #   -r requirements-test.in\n    #   pytest-cov\ndill==0.3.9\n    # via pylint\ndoc8==0.11.2\n    # via -r requirements-dev.in\ndocutils==0.17.1\n    # via\n    #   -r requirements-dev.in\n    #   doc8\n    #   restructuredtext-lint\n    #   sphinx\nexceptiongroup==1.2.2\n    # via\n    #   hypothesis\n    #   pytest\nflake8==7.1.1\n    # via -r requirements-dev.in\nhypothesis==6.113.0\n    # via -r requirements-test.in\nidna==3.10\n    # via requests\nimagesize==1.4.1\n    # via sphinx\niniconfig==2.0.0\n    # via pytest\nisort==5.13.2\n    # via pylint\njinja2==3.1.4\n    # via sphinx\njmespath==1.0.1\n    # via\n    #   boto3\n    #   botocore\nmarkupsafe==2.1.5\n    # via jinja2\nmccabe==0.7.0\n    # via\n    #   flake8\n    #   pylint\nmypy==1.13.0\n    # via -r requirements-dev.in\nmypy-extensions==1.0.0\n    # via mypy\npackaging==24.2\n    # via\n    #   pytest\n    #   sphinx\npbr==6.1.0\n    # via stevedore\nplatformdirs==4.3.6\n    # via pylint\npluggy==1.5.0\n    # via pytest\npycodestyle==2.12.1\n    # via flake8\npydocstyle==6.3.0\n    # via -r requirements-dev.in\npyflakes==3.2.0\n    # via flake8\npygments==2.18.0\n    # via\n    #   -r requirements-dev.in\n    #   doc8\n    #   sphinx\npylint==3.2.7\n    # via -r requirements-dev.in\npytest==8.3.3\n    # via\n    #   -r requirements-test.in\n    #   pytest-cov\npytest-cov==5.0.0\n    # via -r requirements-test.in\npython-dateutil==2.9.0.post0\n    # via botocore\npytz==2024.2\n    # via babel\nrequests==2.32.3\n    # via\n    #   -r requirements-test.in\n    #   sphinx\nrestructuredtext-lint==1.4.0\n    # via doc8\ns3transfer==0.10.4\n    # via boto3\nsix==1.16.0\n    # via python-dateutil\nsnowballstemmer==2.2.0\n    # via\n    #   pydocstyle\n    #   sphinx\nsortedcontainers==2.4.0\n    # via hypothesis\nsphinx==4.3.2\n    # via -r requirements-dev.in\nsphinxcontrib-applehelp==1.0.4\n    # via sphinx\nsphinxcontrib-devhelp==1.0.2\n    # via sphinx\nsphinxcontrib-htmlhelp==2.0.1\n    # via sphinx\nsphinxcontrib-jsmath==1.0.1\n    # via sphinx\nsphinxcontrib-qthelp==1.0.3\n    # via sphinx\nsphinxcontrib-serializinghtml==1.1.5\n    # via sphinx\nstevedore==5.3.0\n    # via doc8\ntomli==2.1.0\n    # via\n    #   coverage\n    #   mypy\n    #   pylint\n    #   pytest\ntomlkit==0.13.2\n    # via pylint\ntypes-python-dateutil==2.9.0.20241003\n    # via -r requirements-dev.in\ntypes-pyyaml==6.0.12.20240917\n    # via -r requirements-dev.in\ntypes-six==1.16.21.20241105\n    # via -r requirements-dev.in\ntyping-extensions==4.12.2\n    # via\n    #   astroid\n    #   mypy\n    #   pylint\nurllib3==1.26.20\n    # via\n    #   botocore\n    #   requests\nwebsocket-client==1.8.0\n    # via -r requirements-test.in\nwheel==0.45.0\n    # via -r requirements-dev.in\n\n# The following packages are considered to be unsafe in a requirements file:\n# setuptools\n"
        },
        {
          "name": "requirements-test.in",
          "type": "blob",
          "size": 0.080078125,
          "content": "pytest\nboto3<2.0.0\nhypothesis\ncoverage\nwebsocket-client<2.0.0\npytest-cov\nrequests\n"
        },
        {
          "name": "requirements-test.txt",
          "type": "blob",
          "size": 1.458984375,
          "content": "#\n# This file is autogenerated by pip-compile with Python 3.7\n# by the following command:\n#\n#    pip-compile --output-file=requirements-test.txt --resolver=backtracking requirements-test.in\n#\nattrs==23.1.0\n    # via hypothesis\nboto3==1.33.13\n    # via -r requirements-test.in\nbotocore==1.33.13\n    # via\n    #   boto3\n    #   s3transfer\ncertifi==2023.11.17\n    # via requests\ncharset-normalizer==3.3.2\n    # via requests\ncoverage[toml]==7.2.7\n    # via\n    #   -r requirements-test.in\n    #   pytest-cov\nexceptiongroup==1.2.0\n    # via\n    #   hypothesis\n    #   pytest\nhypothesis==6.79.4\n    # via -r requirements-test.in\nidna==3.6\n    # via requests\nimportlib-metadata==6.7.0\n    # via\n    #   attrs\n    #   pluggy\n    #   pytest\niniconfig==2.0.0\n    # via pytest\njmespath==1.0.1\n    # via\n    #   boto3\n    #   botocore\npackaging==23.2\n    # via pytest\npluggy==1.2.0\n    # via pytest\npytest==7.4.3\n    # via\n    #   -r requirements-test.in\n    #   pytest-cov\npytest-cov==4.1.0\n    # via -r requirements-test.in\npython-dateutil==2.8.2\n    # via botocore\nrequests==2.31.0\n    # via -r requirements-test.in\ns3transfer==0.8.2\n    # via boto3\nsix==1.16.0\n    # via python-dateutil\nsortedcontainers==2.4.0\n    # via hypothesis\ntomli==2.0.1\n    # via\n    #   coverage\n    #   pytest\ntyping-extensions==4.7.1\n    # via importlib-metadata\nurllib3==1.26.18\n    # via\n    #   botocore\n    #   requests\nwebsocket-client==1.6.1\n    # via -r requirements-test.in\nzipp==3.15.0\n    # via importlib-metadata\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.1015625,
          "content": "[mypy]\n\n[mypy-chalice.vendored.*]\nignore_errors = true\n\n[mypy-chalice.templates.*]\nignore_errors = true\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.341796875,
          "content": "#!/usr/bin/env python\nimport os\nfrom setuptools import setup, find_packages\n\n\nwith open('README.rst') as readme_file:\n    README = readme_file.read()\n\n\ndef recursive_include(relative_dir):\n    all_paths = []\n    root_prefix = os.path.join(\n        os.path.dirname(os.path.abspath(__file__)), 'chalice')\n    full_path = os.path.join(root_prefix, relative_dir)\n    for rootdir, _, filenames in os.walk(full_path):\n        for filename in filenames:\n            abs_filename = os.path.join(rootdir, filename)\n            all_paths.append(abs_filename[len(root_prefix) + 1:])\n    return all_paths\n\n\ninstall_requires = [\n    'click>=7,<9.0',\n    'botocore>=1.14.0,<2.0.0',\n    'typing-extensions>=4.0.0,<5.0.0;python_version<\"3.8\"',\n    'six>=1.10.0,<2.0.0',\n    'pip>=9,<24.4',\n    'jmespath>=0.9.3,<2.0.0',\n    'pyyaml>=5.3.1,<7.0.0',\n    'inquirer>=3.0.0,<4.0.0',\n    'wheel',\n    'setuptools'\n]\n\nsetup(\n    name='chalice',\n    version='1.31.3',\n    description=\"Microframework\",\n    long_description=README,\n    author=\"James Saryerwinnie\",\n    author_email='js@jamesls.com',\n    url='https://github.com/aws/chalice',\n    packages=find_packages(exclude=['tests', 'tests.*']),\n    install_requires=install_requires,\n    extras_require={\n        'event-file-poller': ['watchdog==2.3.1'],\n        'cdk': [\n            'aws_cdk.aws_iam>=1.85.0,<2.0',\n            'aws_cdk.aws-s3-assets>=1.85.0,<2.0',\n            'aws_cdk.cloudformation-include>=1.85.0,<2.0',\n            'aws_cdk.core>=1.85.0,<2.0',\n        ],\n        'cdkv2': [\"aws-cdk-lib>2.0,<3.0\"]\n    },\n    license=\"Apache License 2.0\",\n    package_data={'chalice': [\n        '*.json', '*.pyi', 'py.typed'] + recursive_include('templates')},\n    include_package_data=True,\n    zip_safe=False,\n    keywords='chalice',\n    entry_points={\n        'console_scripts': [\n            'chalice = chalice.cli:main',\n        ]\n    },\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: Apache Software License',\n        'Natural Language :: English',\n        \"Programming Language :: Python :: 3\",\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}