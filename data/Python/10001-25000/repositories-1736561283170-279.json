{
  "metadata": {
    "timestamp": 1736561283170,
    "page": 279,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyodide/pyodide",
      "stars": 12539,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.099609375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Mozilla\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: TopLevel\nAlwaysBreakAfterReturnType: TopLevel\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass:      true\n  AfterControlStatement: false\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     true\n  AfterUnion:      true\n  AfterExternBlock: true\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Mozilla\nBreakBeforeInheritanceComma: true\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 2\nContinuationIndentWidth: 2\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeCategories:\n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: true\nIndentPPDirectives: None\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.732421875,
          "content": "comment: false\n\ncoverage:\n  status:\n    project:\n      default:\n        # Commits pushed to main should not make the overall\n        # project coverage decrease by more than 1%:\n        target: auto\n        threshold: 1%\n    patch:\n      default:\n        # Be tolerant on slight code coverage diff on PRs to limit\n        # noisy red coverage status on github PRs.\n        # Note: The coverage stats are still uploaded\n        # to codecov so that PR reviewers can see uncovered lines\n        target: auto\n        threshold: 1%\n\ncodecov:\n  notify:\n    # Prevent coverage status to upload multiple times for parallel and long\n    # running CI pipelines. This configuration is particularly useful on PRs\n    # to avoid confusion.\n    after_n_builds: 1\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0625,
          "content": "emsdk/emsdk/\ncpython/installs/\ncpython/build/\npackages/*/build/\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2685546875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_size = 2\nindent_style = space\ntrim_trailing_whitespace = true\n\n[**.py]\nindent_size = 4\n\n[tools/*]\nindent_size = 4\n\n[Makefile]\nindent_style = tab\n\n[**.patch]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5009765625,
          "content": "*.a\n*.o\n*.pyc\n*.gen.*\nsrc/js/generated\n*.out.*\n\n*.egg-info/\n\n__pycache__\n\n.docker_home\n.hypothesis\n.idea\n.mozilla\n.mypy_cache/\n.pytest_cache/\n.vscode\n.venv*\ntsconfig.tsbuildinfo\n\nbuild\nccache\ncpython/downloads\ncpython/installs\ncpython/build.log\ndist*/\ndocs/_build/\nemsdk/emsdk\ngeckodriver.log\nnode_modules\npackages/.artifacts\npackages/.build\npackages/.libs\npackages/*/build.log*\npackages/build-logs\ndist/\npyodide-build/**/build.log\nxbuildenv/\npytest-pyodide\ntools/symlinks\nxbuildenv/\n.pyodide-xbuildenv*\nDS_Store\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.095703125,
          "content": "[submodule \"pyodide-build\"]\n\tpath = pyodide-build\n\turl = https://github.com/pyodide/pyodide-build\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.3642578125,
          "content": "github:\n  prebuilds:\n    master: true\n    pullRequests: true\n    pullRequestsFromForks: true\n    addCheck: false\n    addComment: false\n    addBadge: false\n    addLabel: false\ntasks:\n  - name: Setup the environment\n    init: |\n      PYTHON_VERSION=3.11.3\n      pyenv install $PYTHON_VERSION\n      pyenv global $PYTHON_VERSION\n      python -m pip install -r requirements.txt\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.6396484375,
          "content": "exclude: (^.*patches|.*\\.cgi$|^packages/micropip/src/micropip/externals|^benchmark/benchmarks$)\ndefault_language_version:\n  python: \"3.12\"\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: \"v5.0.0\"\n    hooks:\n      - id: check-added-large-files\n      - id: check-case-conflict\n      - id: check-merge-conflict\n      - id: check-symlinks\n      - id: check-yaml\n        exclude: .clang-format\n      - id: debug-statements\n      - id: end-of-file-fixer\n      - id: mixed-line-ending\n      - id: trailing-whitespace\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: \"v0.8.6\"\n    hooks:\n      - id: ruff\n        args: [--fix]\n      - id: ruff-format\n\n  - repo: https://github.com/pre-commit/mirrors-clang-format\n    rev: \"v19.1.6\"\n    hooks:\n      - id: clang-format\n        types_or: [c++, c, cuda]\n\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: \"v1.10.0\"\n    hooks:\n      - id: python-use-type-annotations\n        exclude: docs/sphinx_pyodide/tests/test_directives\\.py\n      - id: rst-backticks\n      - id: rst-directive-colons\n      - id: rst-inline-touching-normal\n\n  - repo: https://github.com/shellcheck-py/shellcheck-py\n    rev: \"v0.10.0.1\"\n    hooks:\n      - id: shellcheck\n        exclude: ^src/templates/python$\n\n  - repo: https://github.com/codespell-project/codespell\n    rev: \"v2.3.0\"\n    hooks:\n      - id: codespell\n        args:\n          [\n            \"--ignore-words-list\",\n            \"ags,aray,asend,ba,crate,falsy,feld,inflight,lits,nd,slowy,te,oint,conveniant,atmost\",\n          ]\n        exclude: ^(benchmark/benchmarks/pystone_benchmarks/pystone\\.py|src/js/package-lock\\.json|packages/matplotlib/extras/fontlist\\.json)$\n\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: \"v1.14.1\"\n    hooks:\n      - id: mypy\n        files: ^(packages/.*/src|src|pyodide-build/pyodide_build)\n        exclude: (setup.py|.*test.*)\n        args: []\n        additional_dependencies: &mypy-deps\n          - packaging\n          - types-docutils\n          - types-pyyaml\n          - types-setuptools\n          - types-requests\n          - numpy\n          - build\n          - pytest\n          - pydantic>=2.0\n          - unearth\n          - resolvelib\n          - rich\n          - auditwheel_emscripten\n          - pyodide-lock==0.1.0a5\n          - micropip\n      - id: mypy\n        name: mypy-tests\n        args: [--ignore-missing-imports]\n        files: ^(packages/|docs|/conftest.py|src/tests)\n        exclude: (^packages/.*/setup.py|/src)\n        additional_dependencies: *mypy-deps\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: \"v4.0.0-alpha.8\"\n    hooks:\n      - id: prettier\n\nci:\n  autoupdate_schedule: \"quarterly\"\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.1708984375,
          "content": "*.gen.*\n_build\nbuild\n.artifacts\n.docker_home\n.mypy_cache\nemsdk\ncpython\n.vscode\n.pytest_cache\n.clang-format\npackages/libf2c/extras/make.inc\nsrc/js/generated_struct_info32.json\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.396484375,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nsphinx:\n  configuration: docs/conf.py\n  fail_on_warning: true\n\nformats:\n  - htmlzip\n  # we can't build epub / pdf\n\npython:\n  install:\n    - requirements: docs/requirements-doc.txt\n\nbuild:\n  os: ubuntu-20.04\n  tools:\n    python: \"3.12\"\n    nodejs: \"20\"\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 5.044921875,
          "content": "# Code of Conduct\n\n## Conduct\n\nWe are committed to providing a friendly, safe and welcoming environment for all, regardless of level of experience, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality, or other similar characteristic.\n\n- Please be kind and courteous. There’s no need to be mean or rude.\n- Please avoid using usernames that are overtly sexual or otherwise might detract from a friendly, safe, and welcoming environment for all.\n- Respect that people have differences of opinion and that every design or implementation choice carries trade-offs. There is seldom a single right answer.\n- We borrow the Recurse Center’s [“social rules”](https://www.recurse.com/manual#sub-sec-social-rules): no feigning surprise, no well-actually’s, no backseat driving, and no subtle -isms.\n- Please keep unstructured critique to a minimum. If you have solid ideas you want to experiment with, make a fork and see how it works. All feedback should be constructive in nature. If you need more detailed guidance around giving feedback, consult [Digital Ocean’s Code of Conduct](https://github.com/digitalocean/engineering-code-of-conduct#giving-and-receiving-feedback)\n- It is unacceptable to insult, demean, or harass anyone. We interpret the term “harassment” as defined in the [Citizen Code of Conduct](https://github.com/stumpsyn/policies/blob/master/citizen_code_of_conduct.md#4-unacceptable-behavior); if you are not sure about what harassment entails, please read their definition. In particular, we don’t tolerate behavior that excludes people in socially marginalized groups.\n- Private harassment is also unacceptable. No matter who you are, please contact any of the Pyodide core team members immediately if you are being harassed or made uncomfortable by a community member. Whether you are a regular contributor or a newcomer, we care about making this community a safe place for you and we’ve got your back.\n- Likewise spamming, trolling, flaming, baiting or other attention-stealing behavior is not welcome.\n\n## Moderation\n\nThese are the policies for upholding our community’s standards of conduct. If you feel that a thread needs moderation, please contact the Pyodide core team.\n\n1. Remarks that violate the Pyodide standards of conduct are not allowed. This includes hateful, hurtful, oppressive, or exclusionary remarks. (Cursing is allowed, but never targeting another community member, and never in a hateful manner.)\n2. Remarks that moderators find inappropriate are not allowed, even if they do not break a rule explicitly listed in the code of conduct.\n3. Moderators will first respond to such remarks with a warning.\n4. If the warning is unheeded, the offending community member will be temporarily banned.\n5. If the community member comes back and continues to make trouble, they will be permanently banned.\n6. Moderators may choose at their discretion to un-ban the community member if they offer the offended party a genuine apology.\n7. If a moderator bans someone and you think it was unjustified, please take it up with that moderator, or with a different moderator, in private. Complaints about bans in-channel are not allowed.\n8. Moderators are held to a higher standard than other community members. If a moderator creates an inappropriate situation, they should expect less leeway than others.\n9. In the Pyodide community we strive to go the extra mile to look out for each other. Don’t just aim to be technically unimpeachable, try to be your best self. In particular, avoid flirting with offensive or sensitive issues, particularly if they’re off-topic; this all too often leads to unnecessary fights, hurt feelings, and damaged trust; worse, it can drive people away from the community entirely.\n10. If someone takes issue with something you said or did, resist the urge to be defensive. Just stop doing what it was they complained about and apologize. Even if you feel you were misinterpreted or unfairly accused, chances are good there was something you could have communicated better — remember that it’s your responsibility to make your fellow Pyodide community members comfortable. Everyone wants to get along and we are all here first and foremost because we want to talk about science and cool technology. You will find that people will be eager to assume good intent and forgive as long as you earn their trust.\n11. The enforcement policies listed above apply to all official Pyodide venues. If you wish to use this code of conduct for your own project, consider making a copy with your own moderation policy so as to avoid confusion.\n\nAdapted from the the [Rust Code of Conduct](https://www.rust-lang.org/en-US/conduct.html), with further reference from [Digital Ocean Code of Conduct](https://github.com/digitalocean/engineering-code-of-conduct#giving-and-receiving-feedback), the [Recurse Center](https://www.recurse.com/code-of-conduct), the [Citizen Code of Conduct](http://citizencodeofconduct.org/), and the [Contributor Covenant](https://www.contributor-covenant.org/version/1/4/code-of-conduct.html).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 5.2529296875,
          "content": "FROM node:20.11-bookworm-slim AS node-image\nFROM python:3.12.7-slim-bookworm\n\n# Requirements for building packages\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n        bzip2 ccache f2c g++ gfortran git make \\\n        patch pkg-config swig unzip wget xz-utils \\\n        autoconf autotools-dev automake texinfo dejagnu \\\n        build-essential libtool libltdl-dev \\\n        gnupg2 libdbus-glib-1-2 sudo sqlite3 \\\n        ninja-build jq xxd \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Normally, it is a bad idea to install rustup and cargo in\n# system directories (it should not be shared between users),\n# but this docker image is only for building packages, so I hope it is ok.\nRUN wget -q -O - https://sh.rustup.rs | \\\n    RUSTUP_HOME=/usr CARGO_HOME=/usr sh -s -- -y --profile minimal --no-modify-path\n\n# install autoconf 2.71, required by upstream libffi\nRUN wget https://mirrors.ocf.berkeley.edu/gnu/autoconf/autoconf-2.71.tar.xz \\\n    && tar -xf autoconf-2.71.tar.xz \\\n    && cd autoconf-2.71 \\\n    && ./configure \\\n    && make install \\\n    && cp /usr/local/bin/autoconf /usr/bin/autoconf \\\n    && rm -rf autoconf-2.71\n\nADD requirements.txt docs/requirements-doc.txt /\n\nWORKDIR /\nRUN pip3 --no-cache-dir install -r requirements.txt \\\n    && pip3 --no-cache-dir install -r requirements-doc.txt \\\n    && rm -rf requirements.txt requirements-doc.txt\n\nRUN cd / \\\n    && git clone --recursive https://github.com/WebAssembly/wabt \\\n    && cd wabt \\\n    && git submodule update --init \\\n    && make install-gcc-release-no-tests \\\n    && cd ~  \\\n    && rm -rf /wabt\n\nCOPY --from=node-image /usr/local/bin/node /usr/local/bin/\nCOPY --from=node-image /usr/local/lib/node_modules /usr/local/lib/node_modules\nRUN ln -s ../lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm \\\n    && ln -s ../lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx\n\nRUN npm install -g \\\n  jsdoc \\\n  prettier \\\n  rollup \\\n  rollup-plugin-terser\n\n# Get Chrome and Firefox (borrowed from https://github.com/SeleniumHQ/docker-selenium)\n\nARG CHROME_VERSION=\"latest\"\nARG FIREFOX_VERSION=\"latest\"\n# Note: geckodriver version needs to be updated manually\nARG GECKODRIVER_VERSION=\"0.34.0\"\n\n#============================================\n# Firefox & geckodriver\n#============================================\n# can specify Firefox version by FIREFOX_VERSION;\n#  e.g. latest\n#       95\n#       96\n#\n# can specify Firefox geckodriver version by GECKODRIVER_VERSION;\n#============================================\n\nRUN if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ] || [ $FIREFOX_VERSION = \"esr-latest\" ]; \\\n  then FIREFOX_DOWNLOAD_URL=\"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\"; \\\n  else FIREFOX_VERSION_FULL=\"${FIREFOX_VERSION}.0\" && FIREFOX_DOWNLOAD_URL=\"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION_FULL/linux-x86_64/en-US/firefox-$FIREFOX_VERSION_FULL.tar.bz2\"; \\\n  fi \\\n  && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n  && rm /tmp/firefox.tar.bz2 \\\n  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/local/bin/firefox \\\n  && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz \\\n  && rm -rf /opt/geckodriver \\\n  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \\\n  && rm /tmp/geckodriver.tar.gz \\\n  && mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION \\\n  && chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION \\\n  && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/local/bin/geckodriver \\\n  && echo \"Using Firefox version: $(firefox --version)\" \\\n  && echo \"Using GeckoDriver version: \"$GECKODRIVER_VERSION\n\n\n#============================================\n# Google Chrome & Chrome webdriver\n#============================================\n# can specify Chrome version by CHROME_VERSION;\n#  e.g. latest\n#       96\n#       97\n#============================================\n\nRUN if [ $CHROME_VERSION = \"latest\" ]; \\\n  then CHROME_VERSION_FULL=$(wget --no-verbose -O - \"https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_STABLE\"); \\\n  else CHROME_VERSION_FULL=$(wget --no-verbose -O - \"https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_${CHROME_VERSION}\"); \\\n  fi \\\n  && CHROME_DOWNLOAD_URL=\"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb.\" \\\n  && CHROMEDRIVER_DOWNLOAD_URL=\"https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION_FULL}/linux64/chromedriver-linux64.zip\" \\\n  && wget --no-verbose -O /tmp/google-chrome.deb ${CHROME_DOWNLOAD_URL} \\\n  && apt-get update \\\n  && apt install -qqy /tmp/google-chrome.deb \\\n  && rm -f /tmp/google-chrome.deb \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && wget --no-verbose -O /tmp/chromedriver-linux64.zip ${CHROMEDRIVER_DOWNLOAD_URL} \\\n  && unzip /tmp/chromedriver-linux64.zip -d /opt/ \\\n  && rm /tmp/chromedriver-linux64.zip \\\n  && ln -fs /opt/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver \\\n  && echo \"Using Chrome version: $(google-chrome --version)\" \\\n  && echo \"Using Chrome Driver version: $(chromedriver --version)\"\n\nCMD [\"/bin/sh\"]\nWORKDIR /src\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 11.6494140625,
          "content": "PYODIDE_ROOT=$(abspath .)\n\ninclude Makefile.envs\n\n.PHONY=check\n\nCC=emcc\nCXX=em++\n\n\nall: \\\n\tall-but-packages \\\n\tdist/pyodide-lock.json \\\n\tdist/console.html \\\n\tdist/pyodide.d.ts \\\n\tdist/snapshot.bin \\\n\n\nall-but-packages: \\\n\tcheck \\\n\tcheck-emcc \\\n\t$(CPYTHONINSTALL)/.installed-pyodide \\\n\tdist/pyodide.asm.js \\\n\tdist/pyodide.js \\\n\t \\\n\tdist/package.json \\\n\tdist/python \\\n\tdist/python_stdlib.zip \\\n\tdist/test.html \\\n\tdist/module_test.html \\\n\n\nsrc/core/pyodide_pre.o: src/js/generated/_pyodide.out.js src/core/pre.js src/core/stack_switching/stack_switching.out.js\n# Our goal here is to inject src/js/generated/_pyodide.out.js into an archive\n# file so that when linked, Emscripten will include it. We use the same pathway\n# that EM_JS uses, but EM_JS is itself unsuitable. Why? Because the C\n# preprocessor / compiler modified strings and there is no \"raw\" strings\n# feature. In particular, it seems to choke on regex in the JavaScript code. Our\n# bundle includes vendored npm packages which we have no control over, so it is\n# not simple to rewrite the code to restrict it to syntax that is legal inside\n# of EM_JS.\n#\n# To get around this problem, we use an array initializer instead of a string\n# initializer. We write a string file and then convert it to a .c file with xxd\n# as suggested here:\n# https://unix.stackexchange.com/questions/176111/how-to-dump-a-binary-file-as-a-c-c-string-literal\n# We use `xxd -i -` which converts the input to a comma separated list of\n# hexadecimal pairs which can go into an array initializer.\n#\n# EM_JS works by injecting a string variable into a special section called em_js\n# called __em_js__<function_name>. The contents of this variable are of the form\n# \"argspec<::>body\". The argspec is used to generate the JavaScript function\n# declaration:\n# https://github.com/emscripten-core/emscripten/blob/085fe968d43c7d3674376f29667d6e5f42b24966/emscripten.py?plain=1#L603\n#\n# The body has to start with a function block, but it is possible to inject\n# extra stuff after the block ends. We make a 0-argument function called\n# pyodide_js_init. Immediately after that we inject pre.js and then a call to\n# the init function.\n\t# First the data file\n\trm -f tmp.dat\n\techo '()<::>{' >> tmp.dat                       # zero argument argspec and start body\n\tcat src/js/generated/_pyodide.out.js >> tmp.dat # All of _pyodide.out.js is body\n\techo '}' >> tmp.dat                             # Close function body\n\tcat src/core/stack_switching/stack_switching.out.js >> tmp.dat\n\tcat src/core/pre.js >> tmp.dat                  # Execute pre.js too\n\techo \"pyodide_js_init();\" >> tmp.dat            # Then execute the function.\n\n\t# Now generate the C file. Define a string __em_js__pyodide_js_init with\n\t# contents from tmp.dat\n\trm -f src/core/pyodide_pre.gen.c\n\techo '__attribute__((used)) __attribute__((section(\"em_js\"), aligned(1)))' >> src/core/pyodide_pre.gen.c\n\techo 'char __em_js__pyodide_js_init[] = {'  >> src/core/pyodide_pre.gen.c\n\tcat tmp.dat  | xxd -i - >> src/core/pyodide_pre.gen.c\n\t# Add a null byte to terminate the string\n\techo ', 0};' >> src/core/pyodide_pre.gen.c\n\techo \"#include <emscripten.h>\" >> src/core/pyodide_pre.gen.c\n\techo \"void pyodide_js_init(void) EM_IMPORT(pyodide_js_init);\" >> src/core/pyodide_pre.gen.c\n\techo \"EMSCRIPTEN_KEEPALIVE void pyodide_export(void) { pyodide_js_init(); }\" >> src/core/pyodide_pre.gen.c\n\n\trm tmp.dat\n\temcc -c src/core/pyodide_pre.gen.c -o src/core/pyodide_pre.o\n\nsrc/core/libpyodide.a: \\\n\tsrc/core/docstring.o \\\n\tsrc/core/error_handling.o \\\n\tsrc/core/hiwire.o \\\n\tsrc/core/_pyodide_core.o \\\n\tsrc/core/js2python.o \\\n\tsrc/core/jsproxy.o \\\n\tsrc/core/jsproxy_call.o \\\n\tsrc/core/jsbind.o \\\n\tsrc/core/pyproxy.o \\\n\tsrc/core/python2js_buffer.o \\\n\tsrc/core/jslib.o \\\n\tsrc/core/jsbind.o \\\n\tsrc/core/jslib_asm.o \\\n\tsrc/core/python2js.o \\\n\tsrc/core/pyodide_pre.o \\\n\tsrc/core/pyversion.o \\\n\tsrc/core/stack_switching/pystate.o \\\n\tsrc/core/stack_switching/suspenders.o\n\temar rcs src/core/libpyodide.a $(filter %.o,$^)\n\n\n$(CPYTHONINSTALL)/include/pyodide/.installed: src/core/*.h\n\tmkdir -p $(@D)\n\tcp $? $(@D)\n\ttouch $@\n\n$(CPYTHONINSTALL)/lib/libpyodide.a: src/core/libpyodide.a\n\tmkdir -p $(@D)\n\tcp $< $@\n\n$(CPYTHONINSTALL)/.installed-pyodide: $(CPYTHONINSTALL)/include/pyodide/.installed $(CPYTHONINSTALL)/lib/libpyodide.a\n\ttouch $@\n\n\ndist/pyodide.asm.js: \\\n\tsrc/core/main.o  \\\n\t$(wildcard src/py/lib/*.py) \\\n\t$(CPYTHONLIB) \\\n\t$(CPYTHONINSTALL)/.installed-pyodide\n\t@date +\"[%F %T] Building pyodide.asm.js...\"\n\t[ -d dist ] || mkdir dist\n   # TODO(ryanking13): Link libgl to a side module not to the main module.\n   # For unknown reason, a side module cannot see symbols when libGL is linked to it.\n\tembuilder build libgl\n\t$(CXX) -o dist/pyodide.asm.js -lpyodide src/core/main.o $(MAIN_MODULE_LDFLAGS)\n\n\tif [[ -n $${PYODIDE_SOURCEMAP+x} ]] || [[ -n $${PYODIDE_SYMBOLS+x} ]] || [[ -n $${PYODIDE_DEBUG_JS+x} ]]; then \\\n\t\tcd dist && npx prettier -w pyodide.asm.js ; \\\n\tfi\n\n   # Strip out C++ symbols which all start __Z.\n   # There are 4821 of these and they have VERY VERY long names.\n   # To show some stats on the symbols you can use the following:\n   # cat dist/pyodide.asm.js | grep -ohE 'var _{0,5}.' | sort | uniq -c | sort -nr | head -n 20\n\tsed -i -E 's/var __Z[^;]*;//g' dist/pyodide.asm.js\n\tsed -i '1i \"use strict\";' dist/pyodide.asm.js\n\t# Remove last 4 lines of pyodide.asm.js, see issue #2282\n\t# Hopefully we will remove this after emscripten fixes it, upstream issue\n\t# emscripten-core/emscripten#16518\n\t# Sed nonsense from https://stackoverflow.com/a/13383331\n\tsed -i -n -e :a -e '1,4!{P;N;D;};N;ba' dist/pyodide.asm.js\n\techo \"globalThis._createPyodideModule = _createPyodideModule;\" >> dist/pyodide.asm.js\n\t@date +\"[%F %T] done building pyodide.asm.js.\"\n\n\nenv:\n\tenv\n\n\nnode_modules/.installed : src/js/package.json src/js/package-lock.json\n\tcd src/js && npm ci\n\tln -sfn src/js/node_modules/ node_modules\n\ttouch $@\n\nsrc/js/generated/_pyodide.out.js:            \\\n\t\tsrc/js/*.ts                          \\\n\t\tsrc/js/common/*                      \\\n\t\tsrc/js/vendor/*                      \\\n\t\tsrc/js/generated/pyproxy.ts          \\\n\t\tsrc/js/generated/python2js_buffer.js \\\n\t\tsrc/js/generated/js2python.js        \\\n\t\tnode_modules/.installed\n\tcd src/js && npm run build-inner && cd -\n\ndist/pyodide.js:                             \\\n\t\tsrc/js/pyodide.ts                    \\\n\t\tsrc/js/compat.ts                     \\\n\t\tsrc/js/emscripten-settings.ts        \\\n\t\tsrc/js/version.ts\n\tcd src/js && npm run build\n\nsrc/core/stack_switching/stack_switching.out.js : src/core/stack_switching/*.mjs\n\tnode src/core/stack_switching/esbuild.config.mjs\n\ndist/package.json : src/js/package.json\n\tcp $< $@\n\n.PHONY: npm-link\nnpm-link: dist/package.json\n\tcd src/test-js && npm ci && npm link ../../dist\n\ndist/pyodide.d.ts dist/pyodide/ffi.d.ts: src/js/*.ts src/js/generated/pyproxy.ts node_modules/.installed\n\tnpx dts-bundle-generator src/js/{pyodide,ffi}.ts --export-referenced-types false --project src/js/tsconfig.json\n\tmv src/js/{pyodide,ffi}.d.ts dist\n\tpython3 tools/fixup-type-definitions.py dist/pyodide.d.ts\n\tpython3 tools/fixup-type-definitions.py dist/ffi.d.ts\n\n\ndefine preprocess-js\n\nsrc/js/generated/$1: src/core/$1 src/core/pyproxy.c src/core/*.h\n\t# We can't input a js/ts file directly because CC will be unhappy about the file\n\t# extension. Instead cat it and have CC read from stdin.\n\t# -E : Only apply prepreocessor\n\t# -C : Leave comments alone (this allows them to be preserved in typescript\n\t#      definition files, rollup will strip them out)\n\t# -P : Don't put in macro debug info\n\t# -imacros pyproxy.c : include all of the macros definitions from pyproxy.c\n\t#\n\t# First we use sed to delete the segments of the file between\n\t# \"// pyodide-skip\" and \"// end-pyodide-skip\". This allows us to give\n\t# typescript type declarations for the macros which we need for intellisense\n\t# and documentation generation. The result of processing the type\n\t# declarations with the macro processor is a type error, so we snip them\n\t# out.\n\trm -f $$@\n\tmkdir -p src/js/generated\n\techo \"// This file is generated by applying the C preprocessor to src/core/$1\" >> $$@\n\techo \"// Do not edit it directly!\" >> $$@\n\tcat src/core/$1 | \\\n\t\tsed '/^\\/\\/\\s*pyodide-skip/,/^\\/\\/\\s*end-pyodide-skip/d' | \\\n\t\t$(CC) -E -C -P -imacros src/core/pyproxy.c $(MAIN_MODULE_CFLAGS) - | \\\n\t\tsed 's/^#pragma clang.*//g' \\\n\t\t>> $$@\nendef\n\n\n$(eval $(call preprocess-js,pyproxy.ts))\n$(eval $(call preprocess-js,python2js_buffer.js))\n$(eval $(call preprocess-js,js2python.js))\n\n.PHONY: pyodide_build\npyodide_build:\n\t@echo \"Ensuring pyodide-build is installed\"\n\tpip install -e ./pyodide-build\n\t@which pyodide >/dev/null\n\n\n# Recursive wildcard\nrwildcard=$(wildcard $1) $(foreach d,$1,$(call rwildcard,$(addsuffix /$(notdir $d),$(wildcard $(dir $d)*))))\n\ndist/python_stdlib.zip: $(call rwildcard,src/py/*) $(CPYTHONLIB)\n\tmake pyodide_build\n\tpyodide create-zipfile $(CPYTHONLIB) src/py --exclude \"$(PYZIP_EXCLUDE_FILES)\" --stub \"$(PYZIP_JS_STUBS)\" --compression-level \"$(PYODIDE_ZIP_COMPRESSION_LEVEL)\" --output $@\n\ndist/test.html: src/templates/test.html\n\tcp $< $@\n\ndist/makesnap.mjs: src/templates/makesnap.mjs\n\tcp $< $@\n\ndist/snapshot.bin: all-but-packages dist/pyodide-lock.json dist/makesnap.mjs\n\tcd dist && node --experimental-wasm-stack-switching makesnap.mjs\n\n\ndist/module_test.html: src/templates/module_test.html\n\tcp $< $@\n\ndist/python: src/templates/python\n\tcp $< $@\n\n.PHONY: dist/console.html\ndist/console.html: src/templates/console.html\n\tcp $< $@\n\tsed -i -e 's#{{ PYODIDE_BASE_URL }}#$(PYODIDE_BASE_URL)#g' $@\n\n\n# Prepare the dist directory for the release by removing unneeded files\n.PHONY: clean-dist-dir\nclean-dist-dir:\n\t# Remove snapshot files\n\trm dist/makesnap.mjs\n\trm dist/snapshot.bin\n\trm dist/module_test.html dist/test.html\n\n\t# TODO: Source maps aren't useful outside of debug builds I don't think. But\n\t# removing them adds \"missing sourcemap\" warnings to JS console. We should\n\t# not generate them in the first place?\n\t# rm dist/*.map\n\n\n.PHONY: lint\nlint:\n\tpre-commit run -a --show-diff-on-failure\n\nbenchmark: all\n\t$(HOSTPYTHON) benchmark/benchmark.py all --output dist/benchmarks.json\n\t$(HOSTPYTHON) benchmark/plot_benchmark.py dist/benchmarks.json dist/benchmarks.png\n\n\nclean:\n\trm -fr dist/*\n\trm -fr node_modules\n\tfind src -name '*.o' -delete\n\tfind src -name '*.gen.*' -delete\n\tfind src -name '*.out.*' -delete\n\trm -fr src/js/generated\n\tmake -C packages clean\n\techo \"The Emsdk, CPython are not cleaned. cd into those directories to do so.\"\n\nclean-python: clean\n\tmake -C cpython clean\n\nclean-all: clean\n\tmake -C emsdk clean\n\tmake -C cpython clean-all\n\nsrc/core/jslib_asm.o: src/core/jslib_asm.s\n\t$(CC) -o $@ -c $< $(MAIN_MODULE_CFLAGS)\n\n\n%.o: %.c $(CPYTHONLIB) $(wildcard src/core/*.h src/core/*.js)\n\t$(CC) -o $@ -c $< $(MAIN_MODULE_CFLAGS) -Isrc/core/\n\n\n$(CPYTHONLIB): emsdk/emsdk/.complete\n\t@date +\"[%F %T] Building cpython...\"\n\tmake -C $(CPYTHONROOT)\n\t@date +\"[%F %T] done building cpython...\"\n\n\ndist/pyodide-lock.json: FORCE\n\tmake pyodide_build\n\t@date +\"[%F %T] Building packages...\"\n\tmake -C packages\n\t@date +\"[%F %T] done building packages...\"\n\n\nemsdk/emsdk/.complete:\n\t@date +\"[%F %T] Building emsdk...\"\n\tmake -C emsdk\n\t@date +\"[%F %T] done building emsdk.\"\n\n\nrust:\n\techo -e '\\033[0;31m[WARNING] The target `make rust` is only for development and we do not guarantee that it will work or be maintained.\\033[0m'\n\twget -q -O - https://sh.rustup.rs | sh -s -- -y\n\tsource $(HOME)/.cargo/env && rustup toolchain install $(RUST_TOOLCHAIN) && rustup default $(RUST_TOOLCHAIN)\n\tsource $(HOME)/.cargo/env && rustup target add wasm32-unknown-emscripten --toolchain $(RUST_TOOLCHAIN)\n\nFORCE:\n\n\ncheck:\n\t@./tools/dependency-check.sh\n\n\ncheck-emcc: emsdk/emsdk/.complete\n\t@python3 tools/check_ccache.py\n\n\ndebug :\n\tEXTRA_CFLAGS+=\" -D DEBUG_F\" \\\n\tmake\n\n.PHONY: py-compile\npy-compile:\n\tpyodide py-compile --compression-level \"$(PYODIDE_ZIP_COMPRESSION_LEVEL)\" --exclude \"$(PYCOMPILE_EXCLUDE_FILES)\" dist/\n"
        },
        {
          "name": "Makefile.envs",
          "type": "blob",
          "size": 6.935546875,
          "content": "export PYVERSION ?= 3.12.7\nexport PYODIDE_EMSCRIPTEN_VERSION ?= 3.1.58\nexport PYODIDE_VERSION ?= 0.28.0.dev0\nexport PYODIDE_ABI_VERSION ?= 2024_0\n\nexport PYTHON_ARCHIVE_SHA256=73ac8fe780227bf371add8373c3079f42a0dc62deff8d612cd15a618082ab623\n\n# URL to the prebuilt packages\nexport PYODIDE_PREBUILT_PACKAGES_BASE=https://github.com/pyodide/pyodide-recipes/releases/download/20250107\nexport PYODIDE_PREBUILT_PACKAGES_URL=$(PYODIDE_PREBUILT_PACKAGES_BASE)/packages.tar.bz2\nexport PYODIDE_PREBUILT_PACKAGES_LOCKFILE=$(PYODIDE_PREBUILT_PACKAGES_BASE)/pyodide-lock.json\nexport ENABLE_PREBUILT_PACKAGES ?= 0\n\nifdef CPYTHON_DEBUG\n\texport CPYTHON_ABI_FLAGS=d\nendif\n\nexport PLATFORM_TRIPLET=wasm32-emscripten\nexport SYSCONFIG_NAME=_sysconfigdata_$(CPYTHON_ABI_FLAGS)_emscripten_$(PLATFORM_TRIPLET)\n\n# BASH_ENV tells bash to run pyodide_env.sh on startup, which sets various\n# environment variables. The next line instructs make to use bash to run each\n# command.\nexport BASH_ENV := $(PYODIDE_ROOT)/pyodide_env.sh\nSHELL := /usr/bin/env bash\n\nversion_tmp_1 := $(subst ., ,$(PYVERSION:v%=%))\n# Handle alpha, beta, and release candidate versions\nversion_tmp_2 := $(subst a, ,$(version_tmp_1))\nversion_tmp_3 := $(subst b, ,$(version_tmp_2))\nversion_tuple := $(subst r, ,$(version_tmp_3))\n\nexport PYMAJOR=$(word 1,$(version_tuple))\nexport PYMINOR=$(word 2,$(version_tuple))\nexport PYMICRO=$(word 3,$(version_tuple))\nexport PYSTABLEVERSION=$(PYMAJOR).$(PYMINOR).$(PYMICRO)\n\nexport HOSTPYTHONROOT=$(shell python${PYMAJOR}.${PYMINOR} -c \"import sys; print(sys.prefix)\")\nexport HOSTPYTHON=$(HOSTPYTHONROOT)/bin/python$(PYMAJOR).$(PYMINOR)\n\nexport PYTHON_ARCHIVE_URL=https://www.python.org/ftp/python/$(PYSTABLEVERSION)/Python-$(PYVERSION).tgz\n\nexport CPYTHONROOT=$(PYODIDE_ROOT)/cpython\nexport CPYTHONINSTALL=$(CPYTHONROOT)/installs/python-$(PYVERSION)\nexport CPYTHONLIB=$(CPYTHONINSTALL)/lib/python$(PYMAJOR).$(PYMINOR)\nexport SYSCONFIGDATA_DIR=$(CPYTHONINSTALL)/sysconfigdata/\nexport CPYTHONBUILD=$(CPYTHONROOT)/build/Python-$(PYVERSION)/\n\nexport TARGETINSTALLDIR=$(PYODIDE_ROOT)/cpython/installs/python-$(PYVERSION)\n\nexport PYTHONINCLUDE=$(PYODIDE_ROOT)/cpython/installs/python-$(PYVERSION)/include/python$(PYMAJOR).$(PYMINOR)$(CPYTHON_ABI_FLAGS)\n\n# Use env variable if defined, otherwise fallback to './'\nexport PYODIDE_BASE_URL?=./\n\n# The compression level used for zip files and wheels. When distributing via a\n# CDN it's more efficient to keep this value to 0, and let the CDN perform the\n# Brotli compression.\nexport PYODIDE_ZIP_COMPRESSION_LEVEL?=6\n\nexport PIP_CONSTRAINT=$(PYODIDE_ROOT)/tools/constraints.txt\n\n# List of modules to exclude from the zipped standard library\nexport PYZIP_EXCLUDE_FILES=\\\n\tensurepip/ \\\n\tvenv/ \\\n\tlib2to3/ \\\n\t_osx_support.py \\\n\t_aix_support.py \\\n\tcurses/ \\\n\tdbm/ \\\n\tidlelib/ \\\n\ttkinter/ \\\n\tturtle.py \\\n\tturtledemo/ \\\n\ttest/ \\\n\tsqlite3/ \\\n\tssl.py \\\n\tlzma.py \\\n\t_pydecimal.py \\\n\tpydoc_data/\n\n# List of modules that we replace with a stub in the zipped standard library\nexport PYZIP_JS_STUBS=\\\n\twebbrowser.py\n\nexport PYCOMPILE_EXCLUDE_FILES=\\\n\tRobotRaconteur- \\\n\tastropy- \\\n\topencv_python- \\\n\ttest-\n\nexport DBGFLAGS_NODEBUG=-g0\nexport DBGFLAGS_WASMDEBUG=-g2\nexport DBGFLAGS_SOURCEMAPDEBUG=-g3\nexport DBG_LDFLAGS_SOURCEMAPDEBUG=-gseparate-dwarf\n\nexport DBGFLAGS=$(DBGFLAGS_NODEBUG)\n\nifdef PYODIDE_DEBUG\n\texport PYODIDE_SYMBOLS=1\n\texport PYODIDE_DEBUG_JS=1\n\texport PYODIDE_ASSERTIONS=1\nendif\n\nifdef PYODIDE_SOURCEMAP\n\t# Debug with source maps (less useful than WASMDEBUG but easier if it helps)\n\texport DBGFLAGS=$(DBGFLAGS_SOURCEMAPDEBUG)\n\texport DBG_LDFLAGS=$(DBG_LDFLAGS_SOURCEMAPDEBUG)\nelse\n\tifdef PYODIDE_SYMBOLS\n\t\t# Include debug symbols but no source maps (most useful)\n\t\texport DBGFLAGS=$(DBGFLAGS_WASMDEBUG)\n\tendif\nendif\n\nifdef PYODIDE_ASSERTIONS\n\tEXTRA_CFLAGS+= -DDEBUG_F\nendif\n\n\nexport OPTFLAGS=-O2\nexport CFLAGS_BASE=\\\n\t$(OPTFLAGS) \\\n\t$(DBGFLAGS) \\\n\t-fPIC \\\n\t$(EXTRA_CFLAGS)\n\n\nexport LDFLAGS_BASE=\\\n\t$(OPTFLAGS) \\\n\t$(DBGFLAGS) \\\n\t$(DBG_LDFLAGS) \\\n\t-L$(CPYTHONROOT)/installs/python-$(PYVERSION)/lib/ \\\n\t-s WASM_BIGINT \\\n\t$(EXTRA_LDFLAGS)\n\nexport CXXFLAGS_BASE=\n\nexport MAIN_MODULE_LDFLAGS= $(LDFLAGS_BASE) \\\n\t-s MAIN_MODULE=1 \\\n\t-s MODULARIZE=1 \\\n\t-s LZ4=1 \\\n\t-s EXPORT_NAME=\"'_createPyodideModule'\" \\\n\t-s EXPORT_EXCEPTION_HANDLING_HELPERS \\\n\t-s EXCEPTION_CATCHING_ALLOWED=['we only want to allow exception handling in side modules'] \\\n\t-sEXPORTED_RUNTIME_METHODS='wasmTable,ERRNO_CODES' \\\n\t-s USE_ZLIB \\\n\t-s USE_BZIP2 \\\n\t-s FORCE_FILESYSTEM=1 \\\n\t-s INITIAL_MEMORY=20971520 \\\n\t-s ALLOW_MEMORY_GROWTH=1 \\\n\t-s MAXIMUM_MEMORY=4GB \\\n\t-s EXPORT_ALL=1 \\\n\t-s FS_DEBUG=1 \\\n\t-s STACK_SIZE=5MB \\\n\t-s AUTO_JS_LIBRARIES=0 \\\n\t-s AUTO_NATIVE_LIBRARIES=0 \\\n\t-s NODEJS_CATCH_EXIT=0 \\\n\t-s NODEJS_CATCH_REJECTION=0 \\\n\t-s EXPORTED_FUNCTIONS='$(EXPORTS)'\\\n\t\\\n\t-lpython$(PYMAJOR).$(PYMINOR)$(CPYTHON_ABI_FLAGS) \\\n\t-lffi \\\n\t-lstdc++ \\\n\t-lidbfs.js \\\n\t-lnodefs.js \\\n\t-lproxyfs.js \\\n\t-lworkerfs.js \\\n\t-lwebsocket.js \\\n\t-leventloop.js \\\n\t-lhiwire \\\n\t\\\n\t-lGL \\\n\t-legl.js \\\n\t-lwebgl.js \\\n\t-lhtml5.js \\\n\t-lhtml5_webgl.js \\\n\t-lsdl.js \\\n\t-sGL_WORKAROUND_SAFARI_GETCONTEXT_BUG=0\n\nEXPORTS=_main \\\n   ,_free \\\n   \\\n   ,_hiwire_new \\\n   ,_hiwire_intern \\\n   ,_hiwire_num_refs \\\n   ,_hiwire_get \\\n   ,_hiwire_incref \\\n   ,_hiwire_decref \\\n   ,_hiwire_pop \\\n   ,__hiwire_get \\\n   ,__hiwire_set \\\n   ,__hiwire_immortal_get \\\n   ,__hiwire_immortal_add \\\n   ,_jslib_init \\\n   ,_init_pyodide_proxy \\\n   \\\n   ,_PyBuffer_Release \\\n   ,_Py_DecRef \\\n   ,_PyDict_New \\\n   ,_PyDict_SetItem \\\n   ,__PyErr_CheckSignals \\\n   ,_PyErr_CheckSignals \\\n   ,_PyErr_Clear \\\n   ,_PyErr_Occurred \\\n   ,_PyErr_Print \\\n   ,_PyErr_SetRaisedException \\\n   ,_PyErr_SetString \\\n   ,_PyEval_SaveThread \\\n   ,_PyEval_RestoreThread \\\n   ,_PyFloat_FromDouble \\\n   ,_PyGILState_Check \\\n   ,_Py_IncRef \\\n   ,_PyList_New \\\n   ,_PyList_SetItem \\\n   ,__PyLong_FromByteArray \\\n   ,_PyLong_FromDouble \\\n   ,_PyMem_Free \\\n   ,_PyObject_GetAIter \\\n   ,_PyObject_GetIter \\\n   ,_PyObject_Size \\\n   ,_PyRun_SimpleString \\\n   ,_PySet_Add \\\n   ,_PySet_New \\\n   ,__PyTraceback_Add \\\n   ,_PyUnicode_Data \\\n   ,_PyUnicode_New \\\n\n\nifeq ($(DISABLE_DYLINK), 1)\n\texport MAIN_MODULE_LDFLAGS= $(LDFLAGS_BASE) \\\n\t\t-s MODULARIZE=1 \\\n\t\t-s EXPORT_NAME=\"'_createPyodideModule'\" \\\n\t\t-sEXPORTED_RUNTIME_METHODS='wasmTable,ERRNO_CODES,FS,ENV,stringToNewUTF8,addFunction' \\\n\t\t-s LZ4=1 \\\n\t\t-s USE_ZLIB \\\n\t\t-s USE_BZIP2 \\\n\t\t-s FORCE_FILESYSTEM=1 \\\n\t\t-s INITIAL_MEMORY=20971520 \\\n\t\t-s ALLOW_MEMORY_GROWTH=1 \\\n\t\t-s MAXIMUM_MEMORY=4GB \\\n\t\t-s STACK_SIZE=5MB \\\n\t\t-s ALLOW_TABLE_GROWTH \\\n\t\t-s FS_DEBUG=1 \\\n\t\t-sWASM_BIGINT \\\n\t\t-sEXPORTED_FUNCTIONS='$(EXPORTS)'\\\n\t\t-lpython$(PYMAJOR).$(PYMINOR)$(CPYTHON_ABI_FLAGS) \\\n\t\t-lffi \\\n\t\t-lhiwire \\\n\t\t-lidbfs.js \\\n\t\t-lnodefs.js \\\n\nendif\n\nexport MAIN_MODULE_CFLAGS= $(CFLAGS_BASE) \\\n\t-Wall \\\n\t-Wno-warn-absolute-paths \\\n\t-Werror=unused-variable \\\n\t-Werror=sometimes-uninitialized \\\n\t-Werror=int-conversion \\\n\t-Werror=incompatible-pointer-types \\\n\t-Werror=unused-result \\\n\t-mreference-types \\\n\t-I$(PYTHONINCLUDE) \\\n\t-I$(PYTHONINCLUDE)/.. \\\n\t-s EXCEPTION_CATCHING_ALLOWED=['we only want to allow exception handling in side modules']\n\n.output_vars:\n\tset\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9912109375,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/pyodide/pyodide\">\n  <img src=\"./docs/_static/img/pyodide-logo-readme.png\" alt=\"Pyodide\">\n  </a>\n</div>\n\n[![NPM Latest Release](https://img.shields.io/npm/v/pyodide)](https://www.npmjs.com/package/pyodide)\n[![PyPI Latest Release](https://img.shields.io/pypi/v/pyodide-py.svg)](https://pypi.org/project/pyodide-py/)\n[![Build Status](https://circleci.com/gh/pyodide/pyodide.png)](https://circleci.com/gh/pyodide/pyodide)\n[![Documentation Status](https://readthedocs.org/projects/pyodide/badge/?version=stable)](https://pyodide.readthedocs.io/?badge=stable)\n\nPyodide is a Python distribution for the browser and Node.js based on WebAssembly.\n\n## What is Pyodide?\n\nPyodide is a port of CPython to WebAssembly/[Emscripten](https://emscripten.org/).\n\nPyodide makes it possible to install and run Python packages in the browser with\n[micropip](https://micropip.pyodide.org/). Any pure\nPython package with a wheel available on PyPi is supported. Many packages with C\nextensions have also been ported for use with Pyodide. These include many\ngeneral-purpose packages such as regex, PyYAML, lxml and scientific Python\npackages including NumPy, pandas, SciPy, Matplotlib, and scikit-learn.\n\nPyodide comes with a robust Javascript ⟺ Python foreign function interface so\nthat you can freely mix these two languages in your code with minimal friction.\nThis includes full support for error handling, async/await, and much more.\n\nWhen used inside a browser, Python has full access to the Web APIs.\n\n## Try Pyodide (no installation needed)\n\nTry Pyodide in a\n[REPL](https://pyodide.org/en/stable/console.html) directly in\nyour browser. For further information, see the\n[documentation](https://pyodide.org/en/stable/).\n\n## Getting Started\n\nPyodide offers three different ways to get started depending on your needs and\ntechnical resources. These include:\n\n- Use a hosted distribution of Pyodide: see the [Getting\n  Started](https://pyodide.org/en/stable/usage/quickstart.html) documentation.\n- Download a version of Pyodide from the [releases\n  page](https://github.com/pyodide/pyodide/releases/) and serve it\n  with a web server.\n- [Build Pyodide from source](https://pyodide.org/en/stable/development/building-from-sources.html)\n  - Build natively with `make`: primarily for Linux users who want to\n    experiment or contribute back to the project.\n  - [Use a Docker image](https://pyodide.org/en/stable/development/building-from-sources.html#using-docker):\n    recommended for Windows and macOS users and for Linux users who prefer a\n    Debian-based Docker image with the dependencies already installed.\n\n## History\n\nPyodide was created in 2018 by [Michael Droettboom](https://github.com/mdboom)\nat Mozilla as part of the [Iodide\nproject](https://github.com/iodide-project/iodide). Iodide is an experimental\nweb-based notebook environment for literate scientific computing and\ncommunication.\n\nIodide is no longer maintained. If you want to use Pyodide in an interactive\nclient-side notebook, see [Pyodide notebook\nenvironments](https://pyodide.org/en/stable/project/related-projects.html#notebook-environments-ides-repls).\n\n## Contributing\n\nPlease view the [contributing\nguide](https://pyodide.org/en/stable/development/contributing.html) for tips\non filing issues, making changes, and submitting pull requests. Pyodide is an\nindependent and community-driven open-source project. The decision-making\nprocess is outlined in the [Project\ngovernance](https://pyodide.org/en/stable/project/governance.html).\n\n## Communication\n\n- Blog: [blog.pyodide.org](https://blog.pyodide.org/)\n- Mailing list: [mail.python.org/mailman3/lists/pyodide.python.org/](https://mail.python.org/mailman3/lists/pyodide.python.org/)\n- Twitter: [twitter.com/pyodide](https://twitter.com/pyodide)\n- Stack Overflow: [stackoverflow.com/questions/tagged/pyodide](https://stackoverflow.com/questions/tagged/pyodide)\n- Discord: [Pyodide Discord](https://dsc.gg/pyodide)\n\n## License\n\nPyodide uses the [Mozilla Public License Version\n2.0](https://choosealicense.com/licenses/mpl-2.0/).\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.03515625,
          "content": "github_checks:\n  annotations: false\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 12.001953125,
          "content": "\"\"\"\nVarious common utilities for testing.\n\"\"\"\n\nimport contextlib\nimport os\nimport pathlib\nimport re\nimport sys\nfrom collections.abc import Sequence\n\nimport pytest\n\nROOT_PATH = pathlib.Path(__file__).parents[0].resolve()\nDIST_PATH = ROOT_PATH / \"dist\"\n\nsys.path.append(str(ROOT_PATH / \"src\" / \"py\"))\n\n# importing this fixture has a side effect of making the safari webdriver reused during the session\nfrom pytest_pyodide import get_global_config\nfrom pytest_pyodide.runner import use_global_safari_service  # noqa: F401\nfrom pytest_pyodide.utils import package_is_built as _package_is_built\n\nos.environ[\"IN_PYTEST\"] = \"1\"\n\n\ndef set_configs():\n    pytest_pyodide_config = get_global_config()\n\n    pytest_pyodide_config.set_flags(\n        \"chrome\",\n        pytest_pyodide_config.get_flags(\"chrome\")\n        + [\n            # Note: in Chrome > 128 (or so?) WebAssemblyExperimentalJSPI no\n            # longer implies type reflection. If we passed\n            # `--enable-experimental-webassembly-features`\n            # here it would enable type reflection. We'd like to make sure that\n            # everything works in the configuration where JSPI exists but type\n            # reflection does not, so we don't pass it.\n            \"--enable-features=WebAssemblyExperimentalJSPI\",\n        ],\n    )\n\n    pytest_pyodide_config.set_flags(\n        \"node\",\n        pytest_pyodide_config.get_flags(\"node\")\n        + [\"--experimental-wasm-stack-switching\"],\n    )\n\n    # There are a bunch of global objects that occasionally enter the hiwire cache\n    # but never leave. The refcount checks get angry about them if they aren't preloaded.\n    # We need to go through and touch them all once to keep everything okay.\n    pytest_pyodide_config.set_initialize_script(\"\"\"\n        pyodide.globals.get;\n        pyodide.runPython(\"import pyodide_js._api.config; del pyodide_js\");\n        pyodide._api.importlib.invalidate_caches;\n        pyodide._api.package_loader.get_install_dir;\n        pyodide._api.package_loader.unpack_buffer;\n        pyodide._api.package_loader.get_dynlibs;\n        pyodide._api.pyodide_code.eval_code;\n        pyodide._api.pyodide_code.eval_code_async;\n        pyodide._api.pyodide_code.relaxed_call\n        pyodide._api.pyodide_code.find_imports;\n        pyodide._api.pyodide_ffi.register_js_module;\n        pyodide._api.pyodide_ffi.unregister_js_module;\n        pyodide.pyimport(\"pyodide.ffi.wrappers\").destroy();\n        pyodide.pyimport(\"pyodide.http\").destroy();\n        pyodide.pyimport(\"pyodide_js._api\");\n    \"\"\")\n\n    pytest_pyodide_config.set_load_pyodide_script(\n        \"chrome\",\n        \"\"\"\n        let pyodide = await loadPyodide({\n            fullStdLib: false,\n            jsglobals : self,\n            enableRunUntilComplete: true,\n        });\n        \"\"\",\n    )\n\n    pytest_pyodide_config.set_load_pyodide_script(\n        \"node\",\n        \"\"\"\n        const {readFileSync} = require(\"fs\");\n        let snap = readFileSync(\"snapshot.bin\");\n        snap = new Uint8Array(snap.buffer);\n        let pyodide = await loadPyodide({\n            fullStdLib: false,\n            jsglobals: self,\n            _loadSnapshot: snap,\n            enableRunUntilComplete: true,\n        });\n        \"\"\",\n    )\n\n\nset_configs()\n\nonly_node = pytest.mark.xfail_browsers(\n    chrome=\"node only\", firefox=\"node only\", safari=\"node only\"\n)\nonly_chrome = pytest.mark.xfail_browsers(\n    node=\"chrome only\", firefox=\"chrome only\", safari=\"chrome only\"\n)\n\nrequires_jspi = pytest.mark.xfail_browsers(\n    firefox=\"requires jspi\", safari=\"requires jspi\"\n)\n\n\ndef pytest_addoption(parser):\n    group = parser.getgroup(\"general\")\n    group.addoption(\n        \"--run-xfail\",\n        action=\"store_true\",\n        help=\"If provided, tests marked as xfail will be run\",\n    )\n    group.addoption(\n        \"--skip-passed\",\n        action=\"store_true\",\n        help=(\n            \"If provided, tests that passed on the last run will be skipped. \"\n            \"CAUTION: this will skip tests even if tests are modified\"\n        ),\n    )\n\n\ndef maybe_skip_test(item, delayed=False):\n    \"\"\"If necessary skip test at the fixture level, to avoid\n    loading the selenium_standalone fixture which takes a long time.\n    \"\"\"\n    browsers = \"|\".join([\"firefox\", \"chrome\", \"node\", \"safari\"])\n    is_common_test = str(item.fspath).endswith(\"test_packages_common.py\")\n\n    skip_msg = None\n    # Testing a package. Skip the test if the package is not built.\n    match = re.match(\n        r\".*/packages/(?P<name>[\\w\\-]+)/test_[\\w\\-]+\\.py\", str(item.parent.fspath)\n    )\n    if match and not is_common_test:\n        package_name = match.group(\"name\")\n        if not package_is_built(package_name) and re.match(\n            rf\"test_[\\w\\-\\.]+\\[({browsers})[^\\]]*\\]\", item.name\n        ):\n            skip_msg = f\"package '{package_name}' is not built.\"\n\n    # Common package import test. Skip it if the package is not built.\n    if skip_msg is None and is_common_test and item.name.startswith(\"test_import\"):\n        if not pytest.pyodide_runtimes:  # type:ignore[attr-defined]\n            skip_msg = \"Not running browser tests\"\n\n        else:\n            match = re.match(\n                rf\"test_import\\[({browsers})-(?P<name>[\\w\\-\\.]+)\\]\", item.name\n            )\n            if match:\n                package_name = match.group(\"name\")\n                if not package_is_built(package_name):\n                    # selenium_standalone as it takes a long time to initialize\n                    skip_msg = f\"package '{package_name}' is not built.\"\n            else:\n                raise AssertionError(\n                    f\"Couldn't parse package name from {item.name}. This should not happen!\"\n                )  # If the test is going to be skipped remove the\n\n    # TODO: also use this hook to skip doctests we cannot run (or run them\n    # inside the selenium wrapper)\n\n    if skip_msg is not None:\n        if delayed:\n            item.add_marker(pytest.mark.skip(reason=skip_msg))\n        else:\n            pytest.skip(skip_msg)\n\n\ndef pytest_configure(config):\n    \"\"\"Monkey patch the function cwd_relative_nodeid\n\n    returns the description of a test for the short summary table. Monkey patch\n    it to reduce the verbosity of the test names in the table.  This leaves\n    enough room to see the information about the test failure in the summary.\n    \"\"\"\n    global CONFIG  # noqa: PLW0602\n\n    old_cwd_relative_nodeid = config.cwd_relative_nodeid\n\n    def cwd_relative_nodeid(*args):\n        result = old_cwd_relative_nodeid(*args)\n        result = result.replace(\"src/tests/\", \"\")\n        result = result.replace(\"packages/\", \"\")\n        result = result.replace(\"::test_\", \"::\")\n        return result\n\n    config.cwd_relative_nodeid = cwd_relative_nodeid\n\n    pytest.pyodide_dist_dir = config.getoption(\"--dist-dir\")  # type:ignore[attr-defined]\n\n\ndef pytest_collection_modifyitems(config, items):\n    \"\"\"Called after collect is completed.\n    Parameters\n    ----------\n    config : pytest config\n    items : list of collected items\n    \"\"\"\n    prev_test_result = {}\n    if config.getoption(\"--skip-passed\"):\n        cache = config.cache\n        prev_test_result = cache.get(\"cache/lasttestresult\", {})\n\n    for item in items:\n        if prev_test_result.get(item.nodeid) in (\"passed\", \"warnings\", \"skip_passed\"):\n            item.add_marker(pytest.mark.skip(reason=\"previously passed\"))\n            continue\n\n        maybe_skip_test(item, delayed=True)\n\n\n# Save test results to a cache\n# Code adapted from: https://github.com/pytest-dev/pytest/blob/main/src/_pytest/pastebin.py\n@pytest.hookimpl(trylast=True)\ndef pytest_terminal_summary(terminalreporter):\n    tr = terminalreporter\n    cache = tr.config.cache\n    assert cache\n\n    test_result = {}\n    for status in tr.stats:\n        if status in (\"warnings\", \"deselected\"):\n            continue\n\n        for test in tr.stats[status]:\n            if test.when != \"call\":  # discard results from setup/teardown\n                continue\n\n            try:\n                if test.longrepr and test.longrepr[2] in \"previously passed\":\n                    test_result[test.nodeid] = \"skip_passed\"\n                else:\n                    test_result[test.nodeid] = test.outcome\n            except Exception:\n                pass\n\n    cache.set(\"cache/lasttestresult\", test_result)\n\n\n@pytest.hookimpl(wrapper=True)\ndef pytest_runtest_call(item):\n    \"\"\"We want to run extra verification at the start and end of each test to\n    check that we haven't leaked memory. According to pytest issue #5044, it's\n    not possible to \"Fail\" a test from a fixture (no matter what you do, pytest\n    sets the test status to \"Error\"). The approach suggested there is hook\n    pytest_runtest_call as we do here. To get access to the selenium fixture, we\n    imitate the definition of pytest_pyfunc_call:\n    https://github.com/pytest-dev/pytest/blob/6.2.2/src/_pytest/python.py#L177\n\n    Pytest issue #5044:\n    https://github.com/pytest-dev/pytest/issues/5044\n    \"\"\"\n    browser = None\n    for fixture in item._fixtureinfo.argnames:\n        if fixture.startswith(\"selenium\"):\n            browser = item.funcargs[fixture]\n            break\n\n    if not browser or not browser.pyodide_loaded:\n        result = yield\n        return result\n\n    trace_pyproxies = pytest.mark.skip_pyproxy_check.mark not in item.own_markers\n    trace_hiwire_refs = (\n        trace_pyproxies and pytest.mark.skip_refcount_check.mark not in item.own_markers\n    )\n    yield from extra_checks_test_wrapper(\n        browser, trace_hiwire_refs, trace_pyproxies, item\n    )\n\n\ndef extra_checks_test_wrapper(browser, trace_hiwire_refs, trace_pyproxies, item):\n    \"\"\"Extra conditions for test to pass:\n    1. No explicit request for test to fail\n    2. No leaked JsRefs\n    3. No leaked PyProxys\n    \"\"\"\n    browser.clear_force_test_fail()\n    init_num_keys = browser.get_num_hiwire_keys()\n    if trace_pyproxies:\n        browser.enable_pyproxy_tracing()\n        init_num_proxies = browser.get_num_proxies()\n    err = False\n    try:\n        result = yield\n    except Exception:\n        err = True\n        raise\n    finally:\n        # Suppress any errors if an error was raised so we keep the original error\n        with contextlib.suppress(Exception) if err else contextlib.nullcontext():\n            browser.disable_pyproxy_tracing()\n            browser.restore_state()\n            # The method_call_singleton holds onto the last called JS method,\n            # clear it so we don't fail refcount check\n            browser.run_js(\"pyodide._module._clear_method_call_singleton();\")\n\n    if browser.force_test_fail:\n        raise Exception(\"Test failure explicitly requested but no error was raised.\")\n    if trace_pyproxies and trace_hiwire_refs:\n        delta_proxies = browser.get_num_proxies() - init_num_proxies\n        delta_keys = browser.get_num_hiwire_keys() - init_num_keys\n        if delta_proxies > 0:\n            pxs = browser.run_js(\n                \"\"\"\n                return Array.from(pyodide._module.pyproxy_alloc_map.entries(), ([x, s]) => [x.type, x.toString(), \"Traceback at creation:\" + s.replace(\"Error\", \"\")])\n                \"\"\"\n            )\n            capman = item.config.pluginmanager.getplugin(\"capturemanager\")\n            with capman.item_capture(\"call\", item):\n                print(\"\\n\" + \"!\" * 40)\n                print(\"leaked proxies:\")\n                for row in pxs:\n                    print(*row)\n\n        assert (delta_proxies, delta_keys) == (0, 0) or delta_keys < 0\n    if trace_hiwire_refs:\n        delta_keys = browser.get_num_hiwire_keys() - init_num_keys\n        assert delta_keys <= 0\n    return result\n\n\ndef package_is_built(package_name):\n    return _package_is_built(package_name, pytest.pyodide_dist_dir)  # type:ignore[attr-defined]\n\n\ndef strip_assertions_stderr(messages: Sequence[str]) -> list[str]:\n    \"\"\"Strip additional messages on stderr included when ASSERTIONS=1\"\"\"\n    res = []\n    for msg in messages:\n        if msg.strip() in [\n            \"sigaction: signal type not supported: this is a no-op.\",\n            \"Calling stub instead of siginterrupt()\",\n            \"warning: no blob constructor, cannot create blobs with mimetypes\",\n            \"warning: no BlobBuilder\",\n        ]:\n            continue\n        res.append(msg)\n    return res\n"
        },
        {
          "name": "cpython",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "emsdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "environment.yml",
          "type": "blob",
          "size": 0.5654296875,
          "content": "name: pyodide-env\nchannels:\n  - conda-forge\ndependencies:\n  - python=3.12\n  - nodejs>=18,<22.5 # Node.js 22.5 has some issues with installing packages https://github.com/nodejs/node/issues/53902\n  - ccache\n  - f2c\n  - swig\n  - make\n  - cmake\n  # pkg-config in conda-forge has a bug that it overwrites PKG_CONFIG_LIBDIR set by user.\n  # there was a fix (https://github.com/conda-forge/pkg-config-feedstock/pull/31), but it is not released.\n  # - pkg-config\n  - texinfo\n  - autoconf\n  - automake\n  - libtool\n  - wget\n  - patch # only needed on MacOS\n  - sed # only needed on MacOS\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyodide-build",
          "type": "commit",
          "content": null
        },
        {
          "name": "pyodide-cross-build-environments.json",
          "type": "blob",
          "size": 5.59375,
          "content": "{\n  \"releases\": {\n    \"0.27.0\": {\n      \"version\": \"0.27.0\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.27.0/xbuildenv-0.27.0.tar.bz2\",\n      \"sha256\": \"24d7d70e8a307048f9a6893fc4b9be3281c0b302de47dfc51e26000a02e08fe2\",\n      \"python_version\": \"3.12.7\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.27.0a2\": {\n      \"version\": \"0.27.0a2\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.27.0a2/xbuildenv-0.27.0a2.tar.bz2\",\n      \"sha256\": \"b44daf2952df5ec8687eb00eee732045d5b2ad7879f88a612bca80add5b6ba86\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.26.4\": {\n      \"version\": \"0.26.4\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.4/xbuildenv-0.26.4.tar.bz2\",\n      \"sha256\": \"ba0943309768b1f562a98538b4082b8b1a0b9fd77234d0f95a7f06f20a813dee\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.26.3\": {\n      \"version\": \"0.26.3\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.3/xbuildenv-0.26.3.tar.bz2\",\n      \"sha256\": \"538b00bb7b329f96e6f981464bc7875109b9779f8d121e2140235c375f530675\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.26.2\": {\n      \"version\": \"0.26.2\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.2/xbuildenv-0.26.2.tar.bz2\",\n      \"sha256\": \"ae576996328d51f7ccf14a953cf6e68fa65a2d4d5c01ed9208afe1a62fa82762\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.26.1\": {\n      \"version\": \"0.26.1\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.1/xbuildenv-0.26.1.tar.bz2\",\n      \"sha256\": \"2f2c1a1ce8201eb305ea9032ab37475dbc268759b72c58b6e77d49153e09dc2c\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.26.0\": {\n      \"version\": \"0.26.0\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0/xbuildenv-0.26.0.tar.bz2\",\n      \"sha256\": \"0b3f52155fdf54e1802aaed0496aab05e012c3a8347ed2f913620d6c251059a0\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0\"\n    },\n    \"0.26.0a6\": {\n      \"version\": \"0.26.0a6\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0a6/xbuildenv-0.26.0a6.tar.bz2\",\n      \"sha256\": \"f214f5d1373e9a018afe8516178a16d37f7ac617326d29636f482bcda925f575\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0a6\",\n      \"max_pyodide_build_version\": \"0.26.0a6\"\n    },\n    \"0.26.0a5\": {\n      \"version\": \"0.26.0a5\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0a5/xbuildenv-0.26.0a5.tar.bz2\",\n      \"sha256\": \"3c6dd142f1b7ac6801a7562e1697befde087aa768c393de3f4d06450aafae32f\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.58\",\n      \"min_pyodide_build_version\": \"0.26.0a5\",\n      \"max_pyodide_build_version\": \"0.26.0a5\"\n    },\n    \"0.26.0a4\": {\n      \"version\": \"0.26.0a4\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0a4/xbuildenv-0.26.0a4.tar.bz2\",\n      \"sha256\": \"6b411ce90fe5537dbe60c46196b745705b791597a8d5783d8e74d641af00e131\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.52\",\n      \"min_pyodide_build_version\": \"0.26.0a4\",\n      \"max_pyodide_build_version\": \"0.26.0a4\"\n    },\n    \"0.26.0a3\": {\n      \"version\": \"0.26.0a3\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0a3/xbuildenv-0.26.0a3.tar.bz2\",\n      \"sha256\": \"8ab4c8a5ab54985f65334a7edefa1c469d601a898810f4e01341e57dc02a4436\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.52\",\n      \"min_pyodide_build_version\": \"0.26.0a3\",\n      \"max_pyodide_build_version\": \"0.26.0a3\"\n    },\n    \"0.26.0a2\": {\n      \"version\": \"0.26.0a2\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0a2/xbuildenv-0.26.0a2.tar.bz2\",\n      \"sha256\": \"233b386868f253377365d6330d182241889d851b85ed514fa6d6f8cb91db2d88\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.52\",\n      \"min_pyodide_build_version\": \"0.26.0a2\",\n      \"max_pyodide_build_version\": \"0.26.0a2\"\n    },\n    \"0.26.0a1\": {\n      \"version\": \"0.26.0a1\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.26.0a1/xbuildenv-0.26.0a1.tar.bz2\",\n      \"sha256\": \"697aca6f6e8918acf8d56c462991fca3058523c45a4344127b904b18765c7cc8\",\n      \"python_version\": \"3.12.1\",\n      \"emscripten_version\": \"3.1.52\",\n      \"min_pyodide_build_version\": \"0.26.0a1\",\n      \"max_pyodide_build_version\": \"0.26.0a1\"\n    },\n    \"0.25.1\": {\n      \"version\": \"0.25.1\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.25.0/xbuildenv-0.25.1.tar.bz2\",\n      \"sha256\": \"7cf639a2063174f00b47064971b0864d05d4bafce89dc12e5df9a497ff871c2d\",\n      \"python_version\": \"3.11.3\",\n      \"emscripten_version\": \"3.1.46\",\n      \"min_pyodide_build_version\": \"0.25.1\",\n      \"max_pyodide_build_version\": \"0.25.1\"\n    },\n    \"0.25.0\": {\n      \"version\": \"0.25.0\",\n      \"url\": \"https://github.com/pyodide/pyodide/releases/download/0.25.0/xbuildenv-0.25.0.tar.bz2\",\n      \"sha256\": \"65cd70e483c295fe1dd13b4b3069ef5f37adbbc703e4fbb91f9a64b6625239ae\",\n      \"python_version\": \"3.11.3\",\n      \"emscripten_version\": \"3.1.46\",\n      \"min_pyodide_build_version\": \"0.25.0\",\n      \"max_pyodide_build_version\": \"0.25.0\"\n    }\n  }\n}\n"
        },
        {
          "name": "pyodide_env.sh",
          "type": "blob",
          "size": 0.7783203125,
          "content": "#!/usr/bin/env bash\n\n# get the absolute path of the root folder\n# shellcheck disable=SC2164\nROOT=$(cd -- \"$(dirname \"${BASH_SOURCE[0]}\")\" >/dev/null 2>&1 ; pwd -P)\n\n# emsdk_env.sh is fairly noisy, and suppress error message if the file doesn't\n# exist yet (i.e. before building emsdk)\n# shellcheck source=/dev/null\nsource \"$ROOT/emsdk/emsdk/emsdk_env.sh\" 2> /dev/null || true\nexport PATH=\"$ROOT/node_modules/.bin/:$ROOT/emsdk/emsdk/ccache/git-emscripten_64bit/bin:$PATH:$ROOT/packages/.artifacts/bin/\"\nEMCC_PATH=$(which emcc.py || echo \".\")\nEM_DIR=$(dirname \"$EMCC_PATH\")\nexport EM_DIR\n\n# Following two variables are set by emsdk activated otherwise\nexport _EMCC_CCACHE=1\n# mtime of this file is checked by ccache, we set it to avoid cache misses.\nexport EM_CONFIG=\"$ROOT/emsdk/emsdk/.emscripten\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.626953125,
          "content": "[tool.mypy]\npython_version = \"3.12\"\nmypy_path = [\"src/py\", \"pyodide-build\"]\nshow_error_codes = true\nwarn_unreachable = true\nenable_error_code = [\"ignore-without-code\", \"redundant-expr\", \"truthy-bool\"]\nplugins = [\"pydantic.mypy\"]\n\n# Strict checks\nwarn_unused_configs = true\ncheck_untyped_defs = true\ndisallow_any_generics = true\ndisallow_subclassing_any = false\ndisallow_untyped_calls = false\ndisallow_untyped_defs = false\ndisallow_incomplete_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_return_any = false\nno_implicit_reexport = true\nstrict_equality = true\n\n[[tool.mypy.overrides]]\nmodule = [\n  \"_pyodide_core\",\n  \"docutils.parsers.rst\",\n  \"js\",\n  \"loky\",\n  \"matplotlib.*\",\n  \"PIL.*\",\n  \"pyodide_js\",\n  \"pyodide_js._api\",\n  \"pytest_pyodide\",\n  \"pytest_pyodide.runner\",\n  \"pytest_pyodide.utils\",\n  \"ruamel.yaml\",\n  \"termcolor\",\n  \"test\",\n  \"tomli\",\n  \"tomllib\",\n  \"typer\",\n  \"virtualenv\",\n  \"auditwheel_emscripten.*\"\n]\nignore_missing_imports = true\n\n\n[tool.ruff]\nlint.select = [\n  \"B0\",     # bugbear (all B0* checks enabled by default)\n  \"B904\",   # bugbear (Within an except clause, raise exceptions with raise ... from err)\n  \"B905\",   # bugbear (zip() without an explicit strict= parameter set.)\n  \"C4\",     # flake8-comprehensions\n  \"C9\",     # mccabe complexity\n  \"E\",      # pycodestyles\n  \"F\",      # pyflakes\n  \"I\",      # isort\n  \"PERF\",   # Perflint\n  \"PGH\",    # pygrep-hooks\n  \"PL\",     # Pylint\n  \"UP\",     # pyupgrade\n  \"W\",      # pycodestyles\n]\nlint.ignore = [\"E402\", \"E501\", \"E731\", \"E741\", \"PLW2901\", \"UP031\"]\nlint.flake8-comprehensions.allow-dict-calls-with-keyword-arguments = true\n# line-length = 219  # E501: Recommended goal is 88 to match black\ntarget-version = \"py312\"\n\n[tool.ruff.lint.per-file-ignores]\n\"src/py/_pyodide/_base.py\" = [\n  \"PGH001\",  # No builtin `eval()` allowed\n]\n\"src/tests/test_*\" = [\n  \"PLR0915\",  # Too many statements (x > 50)\n]\n\"src/tests/test_jsproxy.py\" = [\n  \"PGH001\",  # No builtin `eval()` allowed\n]\n\"src/tests/test_typeconversions.py\" = [\n  \"PGH001\",  # No builtin `eval()` allowed\n]\n\"tools/*\" = [\n  \"B008\",  # Do not perform function call `typer.Optional` in argument defaults\n]\n\"packages/*\" = [\n  \"C4\",      # flake8-comprehensions\n  \"PERF\",    # Perflint\n  \"PLC2401\", # Unicode argument names are valid\n  \"PLR\",     # Pylint refactoring\n  \"PLW\",     # Pylint warnings\n]\n\"packages/rasterio/test_rasterio.py\" = [\n  \"E721\",  # Use `is` and `is not` for type comparisons, or `isinstance()`\n]\n\n[tool.ruff.lint.flake8-bugbear]\nextend-immutable-calls = [\"typer.Argument\", \"typer.Option\"]\n\n[tool.ruff.lint.isort]\nknown-first-party = [\n  \"pyodide\",\n  \"pyodide_js\",\n  \"micropip\",\n  \"pyodide_build\",\n  \"_pyodide\",\n  \"js\",\n]\nknown-third-party = [\n  \"build\",\n  \"pyodide_lock\",\n]\n\n[tool.ruff.lint.mccabe]\nmax-complexity = 31  # C901: Recommended goal is 10\n\n[tool.ruff.lint.pylint]\nallow-magic-value-types = [\"bytes\", \"float\", \"int\", \"str\"]\nmax-args = 9         # Default is 5\nmax-branches = 16    # Default is 12\n\n[tool.pytest.ini_options]\nnorecursedirs = [\n    \".artifacts\",\n    \"build\",\n    \"cpython\",\n    \"emsdk\",\n]\naddopts = '''\n--doctest-modules\n--ignore-glob=\"**/dist/\"\n--ignore-glob=\"src/py/_pyodide/jsbind.py\"\n--ignore-glob=\"packages/**/extras/\"\n--tb=short\n--dist-dir=dist'''\ntestpaths = [\n    \"src\",\n    \"pyodide-build\",\n    \"packages\",\n]\nasyncio_mode = \"strict\"\nmarkers = [\n    \"requires_dynamic_linking\",\n]\n\n[tool._pyodide]\n\n[tool.pyodide.build]\nrust_toolchain = \"nightly-2024-12-01\"\n\n[tool.codespell]\nignore-words = 'tools/codespell_ignore_words.txt'\nskip = 'benchmark/benchmarks/pystone_benchmarks/pystone.py,src/js/package-lock.json,tools/codespell_ignore_words.txt'\n"
        },
        {
          "name": "repository-structure.md",
          "type": "blob",
          "size": 1.3134765625,
          "content": "The Pyodide runtime consists of the following components, sorted in terms of\ninitialization-time (or import-time) dependencies.\n\n1. CPython\n2. The py/\\_pyodide package which is a Python package with pure Python code\n   available in the inner stage of the Pyodide bootstrap process.\n3. The core/pyodide code, implemented in a mix of C and JavaScript, which embeds\n   the CPython interpreter in an emscripten application. This relies on\n   py/pyodide and js/pyodide at runtime. The final stage of initialization is to\n   import py/pyodide.\n4. The py/pyodide package which has Python code that is needed for the outer\n   stage of the Pyodide bootstrap process. py/pyodide relies on core/pyodide at\n   import time and relies on js/pyodide at runtime.\n5. The js/pyodide package which defines the JavaScript public API, sets up the\n   process of loading the core/pyodide emscripten application + CPython\n   interpreter, and then completes the bootstrap by injecting the js/pyodide\n   API into the Python `sys.modules`.\n6. The packages directory, which contains a large number of CPython packages\n   built to run in Pyodide.\n\nOne of our long-term organizational goals is to carefully organize core/pyodide,\npy/\\_pyodide, py/pyodide, and js/pyodide to clarify which functionality is not part of\nruntime dependencies that define Pyodide's core behavior.\n"
        },
        {
          "name": "requirements-deploy.txt",
          "type": "blob",
          "size": 0.044921875,
          "content": "# used to deploy files to s3\nboto3\nmoto\ntyper\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.296875,
          "content": "\n# lint\npre-commit\n# testing\nbuild~=1.2.0\nsphinx-click\nhypothesis\nmypy==1.11.0\n# (FIXME: 2024/01/28) The latest pytest-asyncio 0.23.3 is not compatible with pytest 8.0.0\npytest<8.0.0\npytest-asyncio\npytest-cov\npytest-httpserver\npytest-benchmark\npytest-pyodide==0.58.3\nsetuptools; python_version >= '3.12'\n"
        },
        {
          "name": "run_docker",
          "type": "blob",
          "size": 4.048828125,
          "content": "#!/usr/bin/env bash\n\nPYODIDE_IMAGE_REPO=\"pyodide\"\nPYODIDE_IMAGE_TAG=\"20241028-chrome130-firefox131\"\nDEFAULT_PYODIDE_DOCKER_IMAGE=\"${PYODIDE_IMAGE_REPO}/pyodide-env:${PYODIDE_IMAGE_TAG}\"\nDEFAULT_PYODIDE_SYSTEM_PORT=\"none\"\nDOCKER_COMMAND=\"/bin/bash\"\nDOCKER_INTERACTIVE=\"--interactive\"\n\n\nUSER_HOME=\"/src/.docker_home\"\nUSER_NAME=\"$(id -u -n)\"\nUSER_ID=\"$(id -u)\"\nUSER_GID=\"$(id -g)\"\nUSER_COMMENT_FIELD=\"${USER_NAME} pyodide user alias\"\nUSER_INTERPRETER=\"/sbin/nologin\"\nUSER_FLAG=(\"--user\" \"$USER_ID:$USER_GID\")\nHEALTHCHECK_MESSAGE=\"Done initialization\"\n\nset -eo pipefail\n\n# If docker does not exist, podman is used instead.\nif ! command -v docker &> /dev/null; then\n    USER_FLAG=()\n    docker() {\n      podman \"$@\"\n    }\nfi\n\n\nfunction usage() {\n  cat > /dev/stdout <<EOF\nUsage: run_docker [OPTIONS] [COMMAND] [ARG...]\n\nRuns COMMAND in a new Pyodide docker container. If no COMMAND is provided, starts a bash\nshell in the container.\n\nOptions:\n  -h, --help                  Show this information and exit.\n  -p, --port <port>           System port to which to forward.\n                              This is ignored if the env var PYODIDE_SYSTEM_PORT is set.\n                              If set to 'none', docker instance will not bind to any port.\n  --non-interactive           Run docker without the --interactive flag.\n                              Useful for running in headless mode on CI server.\n  --root                      Run as root user inside the container\n\nPrerequisites:\n  Docker has to be set up on your system.\nEOF\n}\n\nfunction error() {\n  usage\n  exit 255\n}\n\nwhile [[ $# -gt 0 ]]\ndo\n  key=\"$1\"\n  case $key in\n      -h|--help)\n        usage\n        exit 0\n      ;;\n      -p|--port)\n        if [ \"$#\" -lt 2 ]; then\n          >&2 echo \"port cannot be empty\"\n          error\n        fi\n        if [[ -n ${PYODIDE_SYSTEM_PORT} ]]; then\n          echo \"WARNING: will use the env var PYODIDE_SYSTEM_PORT=${PYODIDE_SYSTEM_PORT} instead of the provided port\"\n        else\n          PYODIDE_SYSTEM_PORT=$2\n        fi\n        shift 2\n      ;;\n      --non-interactive)\n        DOCKER_INTERACTIVE=\"--interactive=false\"\n        shift\n      ;;\n      --root)\n        USER_FLAG=()\n        shift\n      ;;\n      -*)\n        >&2 echo \"Unknown option $1\"\n        error\n      ;;\n      *)\n        DOCKER_COMMAND=\"$*\"\n        break\n      ;;\n  esac\ndone\n\nPYODIDE_DOCKER_PORT=${PYODIDE_DOCKER_PORT:-\"8000\"}\nPYODIDE_SYSTEM_PORT=${PYODIDE_SYSTEM_PORT:-${DEFAULT_PYODIDE_SYSTEM_PORT}}\nPYODIDE_DOCKER_IMAGE=${PYODIDE_DOCKER_IMAGE:-${DEFAULT_PYODIDE_DOCKER_IMAGE}}\n\n# in case the port is not a number, do not bind the port\ncase $PYODIDE_SYSTEM_PORT in\n  none)\n  PORT_CONFIGURATION_LINE=()\n  ;;\n  ''|*[!0-9]*) # contains a non-digit character, therefore it is not a number\n  echo \"WARNING: Invalid port argument '$PYODIDE_SYSTEM_PORT'. Port binding disabled.\"\n  PORT_CONFIGURATION_LINE=()\n  ;;\n  *)\n  PORT_CONFIGURATION_LINE=(\"-p\" \"$PYODIDE_SYSTEM_PORT:$PYODIDE_DOCKER_PORT\")\n  ;;\nesac\n\nmkdir -p .docker_home\n\n# Start a detached container as root, add the host uname and uid to /etc/passwd,\n# then run forever\ncat << EOF >.docker_home/entrypoint.sh\ngroupadd --gid '$USER_GID' '$USER_NAME';\nuseradd\\\n  --home '$USER_HOME'\\\n  --uid '$USER_ID'\\\n  --gid '$USER_GID'\\\n  --comment '$USER_COMMENT_FIELD'\\\n  --shell '$USER_INTERPRETER'\\\n  --groups sudo\\\n  $USER_NAME\\\n;\necho 'export PATH=\\$PATH:$USER_HOME/.local/bin' >> /etc/profile;\necho '%sudo ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers ;\necho '$HEALTHCHECK_MESSAGE';\ntail -f /dev/null\nEOF\n\nCONTAINER=$(\\\n  docker run \\\n    \"${PORT_CONFIGURATION_LINE[@]}\" \\\n    -d --rm \\\n    -v \"$PWD\":/src \\\n    --user root \\\n    --shm-size 2g \\\n    \"${PYODIDE_DOCKER_IMAGE}\" \\\n    /bin/bash .docker_home/entrypoint.sh \\\n)\n\nuntil docker logs \"$CONTAINER\" 2>&1 | grep -q \"$HEALTHCHECK_MESSAGE\"; do\n  echo \"Waiting for initialization to finish...\"\n  sleep 0.2\ndone\n\nEXIT_STATUS=0\n# Execute the provided command as the host user with HOME=/src\ndocker exec \\\n  \"$DOCKER_INTERACTIVE\" --tty \\\n  \"${USER_FLAG[@]}\" \\\n  \"$CONTAINER\" \\\n  /bin/bash -lc \"${DOCKER_COMMAND}\" || EXIT_STATUS=$?\n\ndocker kill \"$CONTAINER\" > /dev/null\nexit $EXIT_STATUS\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}