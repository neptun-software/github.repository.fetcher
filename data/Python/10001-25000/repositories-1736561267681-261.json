{
  "metadata": {
    "timestamp": 1736561267681,
    "page": 261,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openai/tiktoken",
      "stars": 12966,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3935546875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# Environments\n.env\n.venv\n\n# Tools\n.mypy_cache\n.coverage\n.hypothesis\nhtmlcov\n\n# General\n.DS_Store\n\nCargo.lock\ntarget/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.765625,
          "content": "# Changelog\n\nThis is the changelog for the open source version of tiktoken.\n\n## [v0.8.0]\n\n- Support for `o1-` and `chatgpt-4o-` models\n- Build wheels for Python 3.13\n- Add possessive quantifiers to limit backtracking in regular expressions, thanks to @l0rinc!\n- Provide a better error message and type for invalid token decode\n- Permit tuples in type hints\n- Better error message for passing invalid input to `get_encoding`\n- Better error messages during plugin loading\n- Add a `__version__` attribute\n- Update versions of `pyo3`, `regex`, `fancy-regex`\n- Drop support for Python 3.8\n\n## [v0.7.0]\n\n- Support for `gpt-4o`\n- Performance improvements\n\n## [v0.6.0]\n\n- Optimise regular expressions for a 20% performance improvement, thanks to @paplorinc!\n- Add `text-embedding-3-*` models to `encoding_for_model`\n- Check content hash for downloaded files\n- Allow pickling `Encoding` objects. Registered `Encoding` will be pickled by reference\n- Workaround PyO3 bug for frozenset conversion\n\nThank you to @paplorinc, @mdwelsh, @Praneet460!\n\n## [v0.5.2]\n\n- Build wheels for Python 3.12\n- Update version of PyO3 to allow multiple imports\n- Avoid permission errors when using default cache logic\n\n## [v0.5.1]\n\n- Add `encoding_name_for_model`, undo some renames to variables that are implementation details\n\n## [v0.5.0]\n\n- Add `tiktoken._educational` submodule to better document how byte pair encoding works\n- Ensure `encoding_for_model` knows about several new models\n- Add `decode_with_offets`\n- Better error for failures with the plugin mechanism\n- Make more tests public\n- Update versions of dependencies\n\n## [v0.4.0]\n\n- Add `decode_batch` and `decode_bytes_batch`\n- Improve error messages and handling\n\n## [v0.3.3]\n\n- `tiktoken` will now make a best effort attempt to replace surrogate pairs with the corresponding\n  Unicode character and will replace lone surrogates with the Unicode replacement character.\n\n## [v0.3.2]\n\n- Add encoding for GPT-4\n\n## [v0.3.1]\n\n- Build aarch64 wheels\n- Make `blobfile` an optional dependency\n\nThank you to @messense for the environment variable that makes cargo not OOM under emulation!\n\n## [v0.3.0]\n\n- Improve performance by 5-20%; thank you to @nistath!\n- Add `gpt-3.5-turbo` models to `encoding_for_model`\n- Add prefix matching to `encoding_for_model` to better support future model versions\n- Fix a bug in the README instructions on extending tiktoken\n- Update the set of available encodings\n- Add packaging metadata\n\n## [v0.2.0]\n\n- Add `tiktoken.encoding_for_model` to get the encoding for a specific model\n- Improve portability of caching logic\n\nThank you to @fritzo, @arvid220u, @khanhvu207, @henriktorget for various small corrections\n\n## [v0.1.2]\n\n- Avoid use of `blobfile` for public files\n- Add support for Python 3.8\n- Add py.typed\n- Improve the public tests\n\n## [v0.1.1]\n\n- Initial release\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.3447265625,
          "content": "[package]\nname = \"tiktoken\"\nversion = \"0.8.0\"\nedition = \"2021\"\nrust-version = \"1.57.0\"\n\n[lib]\nname = \"_tiktoken\"\ncrate-type = [\"cdylib\"]\n\n[dependencies]\npyo3 = { version = \"0.22.2\", default-features = false, features = [\"extension-module\", \"macros\"] }\n\n# tiktoken dependencies\nfancy-regex = \"0.13.0\"\nregex = \"1.10.3\"\nrustc-hash = \"1.1.0\"\nbstr = \"1.5.0\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "MIT License\n\nCopyright (c) 2022 OpenAI, Shantanu Jain\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.166015625,
          "content": "include *.svg\ninclude *.toml\ninclude *.md\ninclude Makefile\nglobal-include py.typed\nrecursive-include scripts *.py\nrecursive-include tests *.py\nrecursive-include src *.rs\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.658203125,
          "content": "# ‚è≥ tiktoken\n\ntiktoken is a fast [BPE](https://en.wikipedia.org/wiki/Byte_pair_encoding) tokeniser for use with\nOpenAI's models.\n\n```python\nimport tiktoken\nenc = tiktoken.get_encoding(\"o200k_base\")\nassert enc.decode(enc.encode(\"hello world\")) == \"hello world\"\n\n# To get the tokeniser corresponding to a specific model in the OpenAI API:\nenc = tiktoken.encoding_for_model(\"gpt-4o\")\n```\n\nThe open source version of `tiktoken` can be installed from PyPI:\n```\npip install tiktoken\n```\n\nThe tokeniser API is documented in `tiktoken/core.py`.\n\nExample code using `tiktoken` can be found in the\n[OpenAI Cookbook](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb).\n\n\n## Performance\n\n`tiktoken` is between 3-6x faster than a comparable open source tokeniser:\n\n![image](https://raw.githubusercontent.com/openai/tiktoken/main/perf.svg)\n\nPerformance measured on 1GB of text using the GPT-2 tokeniser, using `GPT2TokenizerFast` from\n`tokenizers==0.13.2`, `transformers==4.24.0` and `tiktoken==0.2.0`.\n\n\n## Getting help\n\nPlease post questions in the [issue tracker](https://github.com/openai/tiktoken/issues).\n\nIf you work at OpenAI, make sure to check the internal documentation or feel free to contact\n@shantanu.\n\n## What is BPE anyway?\n\nLanguage models don't see text like you and I, instead they see a sequence of numbers (known as tokens).\nByte pair encoding (BPE) is a way of converting text into tokens. It has a couple desirable\nproperties:\n1) It's reversible and lossless, so you can convert tokens back into the original text\n2) It works on arbitrary text, even text that is not in the tokeniser's training data\n3) It compresses the text: the token sequence is shorter than the bytes corresponding to the\n   original text. On average, in practice, each token corresponds to about 4 bytes.\n4) It attempts to let the model see common subwords. For instance, \"ing\" is a common subword in\n   English, so BPE encodings will often split \"encoding\" into tokens like \"encod\" and \"ing\"\n   (instead of e.g. \"enc\" and \"oding\"). Because the model will then see the \"ing\" token again and\n   again in different contexts, it helps models generalise and better understand grammar.\n\n`tiktoken` contains an educational submodule that is friendlier if you want to learn more about\nthe details of BPE, including code that helps visualise the BPE procedure:\n```python\nfrom tiktoken._educational import *\n\n# Train a BPE tokeniser on a small amount of text\nenc = train_simple_encoding()\n\n# Visualise how the GPT-4 encoder encodes text\nenc = SimpleBytePairEncoding.from_tiktoken(\"cl100k_base\")\nenc.encode(\"hello world aaaaaaaaaaaa\")\n```\n\n\n## Extending tiktoken\n\nYou may wish to extend `tiktoken` to support new encodings. There are two ways to do this.\n\n\n**Create your `Encoding` object exactly the way you want and simply pass it around.**\n\n```python\ncl100k_base = tiktoken.get_encoding(\"cl100k_base\")\n\n# In production, load the arguments directly instead of accessing private attributes\n# See openai_public.py for examples of arguments for specific encodings\nenc = tiktoken.Encoding(\n    # If you're changing the set of special tokens, make sure to use a different name\n    # It should be clear from the name what behaviour to expect.\n    name=\"cl100k_im\",\n    pat_str=cl100k_base._pat_str,\n    mergeable_ranks=cl100k_base._mergeable_ranks,\n    special_tokens={\n        **cl100k_base._special_tokens,\n        \"<|im_start|>\": 100264,\n        \"<|im_end|>\": 100265,\n    }\n)\n```\n\n**Use the `tiktoken_ext` plugin mechanism to register your `Encoding` objects with `tiktoken`.**\n\nThis is only useful if you need `tiktoken.get_encoding` to find your encoding, otherwise prefer\noption 1.\n\nTo do this, you'll need to create a namespace package under `tiktoken_ext`.\n\nLayout your project like this, making sure to omit the `tiktoken_ext/__init__.py` file:\n```\nmy_tiktoken_extension\n‚îú‚îÄ‚îÄ tiktoken_ext\n‚îÇ¬†¬† ‚îî‚îÄ‚îÄ my_encodings.py\n‚îî‚îÄ‚îÄ setup.py\n```\n\n`my_encodings.py` should be a module that contains a variable named `ENCODING_CONSTRUCTORS`.\nThis is a dictionary from an encoding name to a function that takes no arguments and returns\narguments that can be passed to `tiktoken.Encoding` to construct that encoding. For an example, see\n`tiktoken_ext/openai_public.py`. For precise details, see `tiktoken/registry.py`.\n\nYour `setup.py` should look something like this:\n```python\nfrom setuptools import setup, find_namespace_packages\n\nsetup(\n    name=\"my_tiktoken_extension\",\n    packages=find_namespace_packages(include=['tiktoken_ext*']),\n    install_requires=[\"tiktoken\"],\n    ...\n)\n```\n\nThen simply `pip install ./my_tiktoken_extension` and you should be able to use your\ncustom encodings! Make sure **not** to use an editable install.\n\n"
        },
        {
          "name": "perf.svg",
          "type": "blob",
          "size": 15.4736328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"569.334pt\" height=\"328.0869pt\" viewBox=\"0 0 569.334 328.0869\">\n<rect width=\"100%\" height=\"100%\" fill=\"white\"/>\n<g enable-background=\"new\">\n<g>\n<clipPath id=\"cp0\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 0 0 L 569.334 0 L 569.334 328.0869 L 0 328.0869 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp0)\">\n<path stroke-width=\".5\" stroke-linecap=\"butt\" stroke-miterlimit=\"4\" stroke-linejoin=\"miter\" fill=\"none\" stroke=\"#b8b8b8\" d=\"M 79 219.5869 L 569 219.5869 \"/>\n<path stroke-width=\".5\" stroke-linecap=\"butt\" stroke-miterlimit=\"4\" stroke-linejoin=\"miter\" fill=\"none\" stroke=\"#b8b8b8\" d=\"M 79 150.5869 L 569 150.5869 \"/>\n<path stroke-width=\".5\" stroke-linecap=\"butt\" stroke-miterlimit=\"4\" stroke-linejoin=\"miter\" fill=\"none\" stroke=\"#b8b8b8\" d=\"M 79 82.58685 L 569 82.58685 \"/>\n<path stroke-width=\".5\" stroke-linecap=\"butt\" stroke-miterlimit=\"4\" stroke-linejoin=\"miter\" fill=\"none\" stroke=\"#b8b8b8\" d=\"M 79 13.58685 L 569 13.58685 \"/>\n</g>\n<clipPath id=\"cp1\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 0 39.64996 L -.0000120107 314.4229 L 20.496 314.4229 L 20.49601 39.64996 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp1)\">\n<clipPath id=\"cp2\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 0 0 L 569.334 0 L 569.334 328.0869 L 0 328.0869 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp2)\">\n<text xml:space=\"preserve\" transform=\"matrix(0 -1 1 0 11.10803 182.06452)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.888 13.560001 17.340003 24.228003 30.900004 37.788003 44.460004 51.576005 58.248006\">Throughput</tspan></text>\n</g>\n</g>\n<clipPath id=\"cp3\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 26.168 31.81796 L 67.843997 31.81796 L 67.843997 47.48196 L 26.168 47.48196 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp3)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 27.668 292.71299)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001 10.008001 20.460003 28.680005 32.676004\">0 MB/s</tspan></text>\n</g>\n<clipPath id=\"cp4\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 19.496 100.5112 L 67.844 100.5112 L 67.844 116.1752 L 19.496 116.1752 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp4)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 20.996 224.01972)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001 13.344002 16.680003 27.132004 35.352006 39.348005\">10 MB/s</tspan></text>\n</g>\n<clipPath id=\"cp5\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 19.496 169.2044 L 67.844 169.2044 L 67.844 184.86841 L 19.496 184.86841 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp5)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 20.996 155.3265)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001 13.344002 16.680003 27.132004 35.352006 39.348005\">20 MB/s</tspan></text>\n</g>\n<clipPath id=\"cp6\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 19.496 237.8976 L 67.844 237.8976 L 67.844 253.5616 L 19.496 253.5616 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp6)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 20.996 86.633319)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001 13.344002 16.680003 27.132004 35.352006 39.348005\">30 MB/s</tspan></text>\n</g>\n<clipPath id=\"cp7\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 19.496 306.5909 L 67.844 306.5909 L 67.844 322.2549 L 19.496 322.2549 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp7)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 20.996 17.940125)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001 13.344002 16.680003 27.132004 35.352006 39.348005\">40 MB/s</tspan></text>\n</g>\n<clipPath id=\"cp8\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 0 0 L 569.334 0 L 569.334 328.0869 L 0 328.0869 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp8)\">\n<path stroke-width=\"1\" stroke-linecap=\"square\" stroke-miterlimit=\"4\" stroke-linejoin=\"miter\" fill=\"none\" stroke=\"#000000\" d=\"M 78.5 288.5869 L 568.5 288.5869 \"/>\n</g>\n<clipPath id=\"cp9\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 78.83396 0 L 568.834 0 L 568.834 20.496 L 78.83396 20.496 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp9)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 288.266 325.53096)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.888 13.560001 17.340003 23.784003 30.228003 37.344 40.68 47.124 54.012 60.684003 67.356\">Thread count</tspan></text>\n</g>\n<clipPath id=\"cp10\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 108.998 19.496 L 118.67 19.496 L 118.67 35.16 L 108.998 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp10)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 110.498 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0\">1</tspan></text>\n</g>\n<clipPath id=\"cp11\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 178.998 19.496 L 188.67 19.496 L 188.67 35.16 L 178.998 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp11)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 180.498 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0\">2</tspan></text>\n</g>\n<clipPath id=\"cp12\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 248.998 19.496 L 258.67 19.496 L 258.67 35.16 L 248.998 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp12)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 250.498 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0\">4</tspan></text>\n</g>\n<clipPath id=\"cp13\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 318.998 19.496 L 328.66999 19.496 L 328.66999 35.16 L 318.998 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp13)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 320.498 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0\">8</tspan></text>\n</g>\n<clipPath id=\"cp14\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 385.662 19.496 L 402.00599 19.496 L 402.00599 35.16 L 385.662 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp14)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 387.162 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001\">16</tspan></text>\n</g>\n<clipPath id=\"cp15\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 455.662 19.496 L 472.00599 19.496 L 472.00599 35.16 L 455.662 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp15)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 457.162 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001\">32</tspan></text>\n</g>\n<clipPath id=\"cp16\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 525.662 19.496 L 542.006 19.496 L 542.006 35.16 L 525.662 35.16 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp16)\">\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 527.162 305.03495)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001\">64</tspan></text>\n</g>\n<clipPath id=\"cp17\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 115 40 L 143 40 L 143 52 L 115 52 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp17)\">\n<g>\n<clipPath id=\"cp18\">\n<path transform=\"matrix(1,0,0,1,115,276.0869)\" d=\"M 0 0 L 28 0 L 28 12 L 0 12 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp18)\">\n<clipPath id=\"cp19\">\n<path transform=\"matrix(1,0,0,1,115,276.0869)\" d=\"M 0 0 L 28 0 L 28 12 L 0 12 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp19)\">\n<path transform=\"matrix(1,0,0,1,115,276.0869)\" d=\"M 0 0 L 28 0 L 28 12 L 0 12 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp20\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 185 40 L 213 40 L 213 61 L 185 61 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp20)\">\n<g>\n<clipPath id=\"cp21\">\n<path transform=\"matrix(1,0,0,1,185,267.0869)\" d=\"M 0 0 L 28 0 L 28 21 L 0 21 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp21)\">\n<clipPath id=\"cp22\">\n<path transform=\"matrix(1,0,0,1,185,267.0869)\" d=\"M 0 0 L 28 0 L 28 21 L 0 21 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp22)\">\n<path transform=\"matrix(1,0,0,1,185,267.0869)\" d=\"M 0 0 L 28 0 L 28 21 L 0 21 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp23\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 255 40 L 283 40 L 283 74 L 255 74 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp23)\">\n<g>\n<clipPath id=\"cp24\">\n<path transform=\"matrix(1,0,0,1,255,254.08692)\" d=\"M 0 0 L 28 0 L 28 34 L 0 34 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp24)\">\n<clipPath id=\"cp25\">\n<path transform=\"matrix(1,0,0,1,255,254.08692)\" d=\"M 0 0 L 28 0 L 28 34 L 0 34 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp25)\">\n<path transform=\"matrix(1,0,0,1,255,254.08692)\" d=\"M 0 0 L 28 0 L 28 34 L 0 34 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp26\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 325 40 L 353 40 L 353 80 L 325 80 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp26)\">\n<g>\n<clipPath id=\"cp27\">\n<path transform=\"matrix(1,0,0,1,325,248.08692)\" d=\"M 0 0 L 28 0 L 28 40 L 0 40 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp27)\">\n<clipPath id=\"cp28\">\n<path transform=\"matrix(1,0,0,1,325,248.08692)\" d=\"M 0 0 L 28 0 L 28 40 L 0 40 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp28)\">\n<path transform=\"matrix(1,0,0,1,325,248.08692)\" d=\"M 0 0 L 28 0 L 28 40 L 0 40 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp29\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 395 40 L 423 40 L 423 83 L 395 83 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp29)\">\n<g>\n<clipPath id=\"cp30\">\n<path transform=\"matrix(1,0,0,1,395,245.08692)\" d=\"M 0 0 L 28 0 L 28 43 L 0 43 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp30)\">\n<clipPath id=\"cp31\">\n<path transform=\"matrix(1,0,0,1,395,245.08692)\" d=\"M 0 0 L 28 0 L 28 43 L 0 43 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp31)\">\n<path transform=\"matrix(1,0,0,1,395,245.08692)\" d=\"M 0 0 L 28 0 L 28 43 L 0 43 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp32\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 465 40 L 493 40 L 493 85 L 465 85 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp32)\">\n<g>\n<clipPath id=\"cp33\">\n<path transform=\"matrix(1,0,0,1,465,243.08692)\" d=\"M 0 0 L 28 0 L 28 45 L 0 45 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp33)\">\n<clipPath id=\"cp34\">\n<path transform=\"matrix(1,0,0,1,465,243.08692)\" d=\"M 0 0 L 28 0 L 28 45 L 0 45 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp34)\">\n<path transform=\"matrix(1,0,0,1,465,243.08692)\" d=\"M 0 0 L 28 0 L 28 45 L 0 45 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp35\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 535 40 L 563 40 L 563 88 L 535 88 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp35)\">\n<g>\n<clipPath id=\"cp36\">\n<path transform=\"matrix(1,0,0,1,535,240.08692)\" d=\"M 0 0 L 28 0 L 28 48 L 0 48 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp36)\">\n<clipPath id=\"cp37\">\n<path transform=\"matrix(1,0,0,1,535,240.08692)\" d=\"M 0 0 L 28 0 L 28 48 L 0 48 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp37)\">\n<path transform=\"matrix(1,0,0,1,535,240.08692)\" d=\"M 0 0 L 28 0 L 28 48 L 0 48 Z \" fill=\"#61d836\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp38\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 84 40 L 112 40 L 112 84 L 84 84 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp38)\">\n<g>\n<clipPath id=\"cp39\">\n<path transform=\"matrix(1,0,0,1,84,244.08692)\" d=\"M 0 0 L 28 0 L 28 44 L 0 44 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp39)\">\n<clipPath id=\"cp40\">\n<path transform=\"matrix(1,0,0,1,84,244.08692)\" d=\"M 0 0 L 28 0 L 28 44 L 0 44 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp40)\">\n<path transform=\"matrix(1,0,0,1,84,244.08692)\" d=\"M 0 0 L 28 0 L 28 44 L 0 44 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp41\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 154 40 L 182 40 L 182 123 L 154 123 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp41)\">\n<g>\n<clipPath id=\"cp42\">\n<path transform=\"matrix(1,0,0,1,154,205.08692)\" d=\"M 0 0 L 28 0 L 28 83 L 0 83 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp42)\">\n<clipPath id=\"cp43\">\n<path transform=\"matrix(1,0,0,1,154,205.08692)\" d=\"M 0 0 L 28 0 L 28 83 L 0 83 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp43)\">\n<path transform=\"matrix(1,0,0,1,154,205.08692)\" d=\"M 0 0 L 28 0 L 28 83 L 0 83 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp44\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 224 40 L 252 40 L 252 189 L 224 189 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp44)\">\n<g>\n<clipPath id=\"cp45\">\n<path transform=\"matrix(1,0,0,1,224,139.08692)\" d=\"M 0 0 L 28 0 L 28 149 L 0 149 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp45)\">\n<clipPath id=\"cp46\">\n<path transform=\"matrix(1,0,0,1,224,139.08692)\" d=\"M 0 0 L 28 0 L 28 149 L 0 149 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp46)\">\n<path transform=\"matrix(1,0,0,1,224,139.08692)\" d=\"M 0 0 L 28 0 L 28 149 L 0 149 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp47\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 294 40 L 322 40 L 322 258 L 294 258 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp47)\">\n<g>\n<clipPath id=\"cp48\">\n<path transform=\"matrix(1,0,0,1,294,70.086917)\" d=\"M 0 0 L 28 0 L 28 218 L 0 218 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp48)\">\n<clipPath id=\"cp49\">\n<path transform=\"matrix(1,0,0,1,294,70.086917)\" d=\"M 0 0 L 28 0 L 28 218 L 0 218 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp49)\">\n<path transform=\"matrix(1,0,0,1,294,70.086917)\" d=\"M 0 0 L 28 0 L 28 218 L 0 218 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp50\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 364 40 L 392 40 L 392 303 L 364 303 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp50)\">\n<g>\n<clipPath id=\"cp51\">\n<path transform=\"matrix(1,0,0,1,364,25.086915)\" d=\"M 0 0 L 28 0 L 28 263 L 0 263 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp51)\">\n<clipPath id=\"cp52\">\n<path transform=\"matrix(1,0,0,1,364,25.086915)\" d=\"M 0 0 L 28 0 L 28 263 L 0 263 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp52)\">\n<path transform=\"matrix(1,0,0,1,364,25.086915)\" d=\"M 0 0 L 28 0 L 28 263 L 0 263 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp53\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 434 40 L 462 40 L 462 203 L 434 203 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp53)\">\n<g>\n<clipPath id=\"cp54\">\n<path transform=\"matrix(1,0,0,1,434,125.086917)\" d=\"M 0 0 L 28 0 L 28 163 L 0 163 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp54)\">\n<clipPath id=\"cp55\">\n<path transform=\"matrix(1,0,0,1,434,125.086917)\" d=\"M 0 0 L 28 0 L 28 163 L 0 163 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp55)\">\n<path transform=\"matrix(1,0,0,1,434,125.086917)\" d=\"M 0 0 L 28 0 L 28 163 L 0 163 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp56\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 504 40 L 532 40 L 532 195 L 504 195 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp56)\">\n<g>\n<clipPath id=\"cp57\">\n<path transform=\"matrix(1,0,0,1,504,133.08692)\" d=\"M 0 0 L 28 0 L 28 155 L 0 155 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp57)\">\n<clipPath id=\"cp58\">\n<path transform=\"matrix(1,0,0,1,504,133.08692)\" d=\"M 0 0 L 28 0 L 28 155 L 0 155 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp58)\">\n<path transform=\"matrix(1,0,0,1,504,133.08692)\" d=\"M 0 0 L 28 0 L 28 155 L 0 155 Z \" fill=\"#00a2ff\"/>\n</g>\n</g>\n</g>\n</g>\n<clipPath id=\"cp59\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 0 0 L 569.334 0 L 569.334 328.0869 L 0 328.0869 Z \"/>\n</clipPath>\n<g clip-path=\"url(#cp59)\">\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 459 291 L 471 291 L 471 280 L 459 280 Z \" fill=\"#00a2ff\"/>\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 477.8753 46.772127)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 3.7800003 6.4440004 12.672001 16.452002 23.340003 29.568003 36.012\">tiktoken</tspan></text>\n<path transform=\"matrix(1,0,0,-1,0,328.0869)\" d=\"M 459 278 L 471 278 L 471 266 L 459 266 Z \" fill=\"#61d836\"/>\n<text xml:space=\"preserve\" transform=\"matrix(1 0 -0 1 477.8753 60.436128)\" font-size=\"12\" font-family=\"HelveticaNeue\"><tspan y=\"0\" x=\"0 6.672001 13.344002 20.232003 27.120003 29.784003 36.456 43.344 46.896005 53.340005 59.784006\">huggingface</tspan></text>\n</g>\n</g>\n</g>\n</svg>\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.5390625,
          "content": "[project]\nname = \"tiktoken\"\nversion = \"0.8.0\"\ndescription = \"tiktoken is a fast BPE tokeniser for use with OpenAI's models\"\nreadme = \"README.md\"\nlicense = {file = \"LICENSE\"}\nauthors = [{name = \"Shantanu Jain\"}, {email = \"shantanu@openai.com\"}]\ndependencies = [\"regex>=2022.1.18\", \"requests>=2.26.0\"]\noptional-dependencies = {blobfile = [\"blobfile>=2\"]}\nrequires-python = \">=3.9\"\n\n[project.urls]\nhomepage = \"https://github.com/openai/tiktoken\"\nrepository = \"https://github.com/openai/tiktoken\"\nchangelog = \"https://github.com/openai/tiktoken/blob/main/CHANGELOG.md\"\n\n[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\"setuptools>=62.4\", \"wheel\", \"setuptools-rust>=1.5.2\"]\n\n[tool.cibuildwheel]\nbuild-frontend = \"build\"\nbuild-verbosity = 1\n\nlinux.before-all = \"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\"\nlinux.environment = { PATH = \"$PATH:$HOME/.cargo/bin\" }\nmacos.before-all = \"rustup target add aarch64-apple-darwin x86_64-apple-darwin\"\n\nskip = [\n  \"*-manylinux_i686\",\n  \"*-musllinux_i686\",\n  \"*-win32\",\n  \"*-musllinux_aarch64\",\n]\nmacos.archs = [\"x86_64\", \"arm64\"]\n# When cross-compiling on Intel, it is not possible to test arm64 wheels.\n# Warnings will be silenced with following CIBW_TEST_SKIP\ntest-skip = \"*-macosx_arm64\"\n\nbefore-test = \"pip install pytest hypothesis\"\ntest-command = \"pytest {project}/tests --import-mode=append\"\n\n[[tool.cibuildwheel.overrides]]\nselect = \"*linux_aarch64\"\ntest-command = \"\"\"python -c 'import tiktoken; enc = tiktoken.get_encoding(\"gpt2\"); assert enc.encode(\"hello world\") == [31373, 995]'\"\"\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.5263671875,
          "content": "from setuptools import setup\nfrom setuptools_rust import Binding, RustExtension\n\nsetup(\n    name=\"tiktoken\",\n    rust_extensions=[\n        RustExtension(\n            \"tiktoken._tiktoken\",\n            binding=Binding.PyO3,\n            # Between our use of editable installs and wanting to use Rust for performance sensitive\n            # code, it makes sense to just always use --release\n            debug=False,\n        )\n    ],\n    package_data={\"tiktoken\": [\"py.typed\"]},\n    packages=[\"tiktoken\", \"tiktoken_ext\"],\n    zip_safe=False,\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tiktoken",
          "type": "tree",
          "content": null
        },
        {
          "name": "tiktoken_ext",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}