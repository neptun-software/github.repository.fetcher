{
  "metadata": {
    "timestamp": 1736561314716,
    "page": 323,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "laramies/theHarvester",
      "stars": 11735,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.142578125,
          "content": ".github/*\n.gitattributes\n.git-blame-ignore-revs\n.idea/\n.pytest_cache\n.mypy_cache\ntests/*\nREADME/\nbin/\ntheHarvester-logo.png\ntheHarvester-logo.webp"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.07421875,
          "content": "# #1492 run `black .` and `isort .`\nc13843ec0d513ac7f9c35b7bd0501fa46e356415"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.666015625,
          "content": "# Set the default behavior, which is to have git automatically determine\n# whether a file is a text or binary, unless otherwise specified.\n\n* text=auto\n\n# Basic .gitattributes for a python repo.\n\n# Source files\n# ============\n*.pxd       text diff=python\n*.py        text diff=python\n*.py3       text diff=python\n*.pyw       text diff=python\n*.pyx       text diff=python\n\n# Binary files\n# ============\n*.db        binary\n*.p         binary\n*.pkl       binary\n*.pyc       binary\n*.pyd       binary\n*.pyo       binary\n\n# Note: .db, .p, and .pkl files are associated with the python modules\n# ``pickle``, ``dbm.*``, # ``shelve``, ``marshal``, ``anydbm``, & ``bsddb``\n# (among others).\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1728515625,
          "content": "*.idea\n*.pyc\n*.sqlite\n*.html\n*.htm\n*.vscode\n*.xml\n*.json\ndebug_results.txt\nvenv\n.mypy_cache\n.pytest_cache\nbuild/\ndist/\ntheHarvester.egg-info\napi-keys.yaml\n.DS_Store\n.venv\n.pyre\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.349609375,
          "content": "FROM python:3.13-slim-bookworm\nLABEL maintainer=\"@jay_townsend1 & @NotoriousRebel1\"\nRUN apt update && apt install -y pipx git curl gcc && rm -rf /var/lib/apt/lists/*\nRUN pipx install --python python3.13 git+https://github.com/laramies/theHarvester.git\nRUN pipx ensurepath\nENTRYPOINT [\"/root/.local/bin/restfulHarvest\", \"-H\", \"0.0.0.0\", \"-p\", \"80\"]\nEXPOSE 80\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.1201171875,
          "content": "![theHarvester](https://github.com/laramies/theHarvester/blob/master/theHarvester-logo.webp)\n\n![TheHarvester CI](https://github.com/laramies/theHarvester/workflows/TheHarvester%20Python%20CI/badge.svg) ![TheHarvester Docker Image CI](https://github.com/laramies/theHarvester/workflows/TheHarvester%20Docker%20Image%20CI/badge.svg)\n[![Rawsec's CyberSecurity Inventory](https://inventory.raw.pm/img/badges/Rawsec-inventoried-FF5050_flat_without_logo.svg)](https://inventory.raw.pm/)\n\nWhat is this?\n-------------\ntheHarvester is a simple to use, yet powerful tool designed to be used during the reconnaissance stage of a red<br>\nteam assessment or penetration test. It performs open source intelligence (OSINT) gathering to help determine<br>\na domain's external threat landscape. The tool gathers names, emails, IPs, subdomains, and URLs by using<br>\nmultiple public resources that include:<br>\n\nPassive modules:\n----------------\n* anubis: Anubis-DB - https://github.com/jonluca/anubis\n\n* bevigil: CloudSEK BeVigil scans mobile application for OSINT assets (Requires an API key, see below.) - https://bevigil.com/osint-api\n\n* baidu: Baidu search engine - www.baidu.com\n\n* binaryedge: List of known subdomains (Requires an API key, see below.) - https://www.binaryedge.io\n\n* bing: Microsoft search engine - https://www.bing.com\n\n* bingapi: Microsoft search engine, through the API (Requires an API key, see below.)\n\n* brave: Brave search engine - https://search.brave.com/\n\n* bufferoverun: (Requires an API key, see below.) https://tls.bufferover.run\n\n* censys: [Censys search engine](https://search.censys.io/) will use certificates searches to enumerate subdomains and gather emails<br>\n  (Requires an API key, see below.) https://censys.io\n\n* certspotter: Cert Spotter monitors Certificate Transparency logs - https://sslmate.com/certspotter/\n\n* criminalip: Specialized Cyber Threat Intelligence (CTI) search engine (Requires an API key, see below.) - https://www.criminalip.io\n\n* crtsh: Comodo Certificate search - https://crt.sh\n\n* dnsdumpster: DNSdumpster search engine - https://dnsdumpster.com\n\n* duckduckgo: DuckDuckGo search engine - https://duckduckgo.com\n\n* fullhunt: Next-generation attack surface security platform (Requires an API key, see below.) - https://fullhunt.io\n\n* github-code: GitHub code search engine (Requires a GitHub Personal Access Token, see below.) - www.github.com\n\n* hackertarget: Online vulnerability scanners and network intelligence to help organizations - https://hackertarget.com\n\n* hunter: Hunter search engine (Requires an API key, see below.) - https://hunter.io\n\n* hunterhow: Internet search engines for security researchers (Requires an API key, see below.) - https://hunter.how\n\n* intelx: Intelx search engine (Requires an API key, see below.) - http://intelx.io\n\n* netlas: A Shodan or Censys competitor (Requires an API key, see below.) - https://app.netlas.io\n\n* onyphe: Cyber defense search engine (Requires an API key, see below.) - https://www.onyphe.io/\n\n* otx: AlienVault open threat exchange - https://otx.alienvault.com\n\n* pentestTools: Cloud-based toolkit for offensive security testing, focused on web applications and network penetration<br>\n  testing (Requires an API key, see below.) - https://pentest-tools.com/\n\n* projecDiscovery: We actively collect and maintain internet-wide assets data, to enhance research and analyse changes around<br>\n  DNS for better insights (Requires an API key, see below.) - https://chaos.projectdiscovery.io\n\n* rapiddns: DNS query tool which make querying subdomains or sites of a same IP easy! https://rapiddns.io\n\n* rocketreach: Access real-time verified personal/professional emails, phone numbers, and social media links (Requires an API key,<br>\n  see below.) - https://rocketreach.co\n\n* securityTrails: Security Trails search engine, the world's largest repository of historical DNS data (Requires an API key, see<br>\n  below.) - https://securitytrails.com\n\n* -s, --shodan: Shodan search engine will search for ports and banners from discovered hosts (Requires an API key, see below.)<br>\n  https://shodan.io\n\n* sitedossier: Find available information on a site - http://www.sitedossier.com\n\n* subdomaincenter: A subdomain finder tool used to find subdomains of a given domain - https://www.subdomain.center/\n\n* subdomainfinderc99: A subdomain finder is a tool used to find the subdomains of a given domain - https://subdomainfinder.c99.nl\n\n* threatminer: Data mining for threat intelligence - https://www.threatminer.org/\n\n* tomba: Tomba search engine (Requires an API key, see below.) - https://tomba.io\n\n* urlscan: A sandbox for the web that is a URL and website scanner - https://urlscan.io\n\n* vhost: Bing virtual hosts search\n\n* virustotal: Domain search (Requires an API key, see below.) - https://www.virustotal.com\n\n* yahoo: Yahoo search engine\n\n* zoomeye: China's version of Shodan (Requires an API key, see below.) - https://www.zoomeye.org\n\n\nActive modules:\n---------------\n* DNS brute force: dictionary brute force enumeration\n* Screenshots: Take screenshots of subdomains that were found\n\nModules that require an API key:\n--------------------------------\nDocumentation to setup API keys can be found at - https://github.com/laramies/theHarvester/wiki/Installation#api-keys\n\n* bevigil - Free upto 50 queries. Pricing can be found here: https://bevigil.com/pricing/osint\n* binaryedge - $10/month\n* bing\n* bufferoverun - uses the free API\n* censys - API keys are required and can be retrieved from your [Censys account](https://search.censys.io/account/api).\n* criminalip\n* fullhunt\n* github\n* hunter - limited to 10 on the free plan, so you will need to do -l 10 switch\n* hunterhow\n* intelx\n* netlas - $\n* onyphe -$\n* pentestTools - $\n* projecDiscovery - invite only for now\n* rocketreach - $\n* securityTrails\n* shodan - $\n* tomba - Free up to 50 search.\n* zoomeye\n\nInstall and dependencies:\n-------------------------\n* Python 3.11+\n* https://github.com/laramies/theHarvester/wiki/Installation\n\n\nComments, bugs, and requests:\n-----------------------------\n* [![Twitter Follow](https://img.shields.io/twitter/follow/laramies.svg?style=social&label=Follow)](https://twitter.com/laramies) Christian Martorella @laramies\n  cmartorella@edge-security.com\n* [![Twitter Follow](https://img.shields.io/twitter/follow/NotoriousRebel1.svg?style=social&label=Follow)](https://twitter.com/NotoriousRebel1) Matthew Brown @NotoriousRebel1\n* [![Twitter Follow](https://img.shields.io/twitter/follow/jay_townsend1.svg?style=social&label=Follow)](https://twitter.com/jay_townsend1) Jay \"L1ghtn1ng\" Townsend @jay_townsend1\n\n\nMain contributors:\n------------------\n* [![Twitter Follow](https://img.shields.io/twitter/follow/NotoriousRebel1.svg?style=social&label=Follow)](https://twitter.com/NotoriousRebel1) Matthew Brown @NotoriousRebel1\n* [![Twitter Follow](https://img.shields.io/twitter/follow/jay_townsend1.svg?style=social&label=Follow)](https://twitter.com/jay_townsend1) Jay \"L1ghtn1ng\" Townsend @jay_townsend1\n* [![Twitter Follow](https://img.shields.io/twitter/follow/discoverscripts.svg?style=social&label=Follow)](https://twitter.com/discoverscripts) Lee Baird @discoverscripts\n\n\nThanks:\n-------\n* John Matherly - Shodan project\n* Ahmed Aboul Ela - subdomain names dictionaries (big and small)\n"
        },
        {
          "name": "README",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.41015625,
          "content": "version: \"3.9\"\nservices:\n  theharvester.svc.local:\n    container_name: theHarvester\n    volumes:\n      - ./api-keys.yaml:/root/.theHarvester/api-keys.yaml\n      - ./api-keys.yaml:/etc/theHarvester/api-keys.yaml\n      - ./proxies.yaml:/etc/theHarvester/proxies.yaml\n      - ./proxies.yaml:/root/.theHarvester/proxies.yaml\n    build: .\n    ports:\n      - \"8080:80\"\n\nnetworks:\n  default:\n    name: app_theHarvester_network\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.8876953125,
          "content": "[project]\nname = \"theHarvester\"\ndescription = \"theHarvester is a very simple, yet effective tool designed to be used in the early stages of a penetration test\"\nreadme = \"README.md\"\nauthors = [\n    { name = \"Christian Martorella\", email = \"cmartorella@edge-security.com\" },\n    { name = \"Jay Townsend\", email = \"jay@cybermon.uk\" },\n    { name = \"Matthew Brown\", email = \"36310667+NotoriousRebel@users.noreply.github.com\" },\n]\nrequires-python = \">=3.11\"\nurls.Homepage = \"https://github.com/laramies/theHarvester\"\nclassifiers = [\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n    \"Operating System :: OS Independent\",\n]\ndynamic = [\"dependencies\", \"optional-dependencies\", \"version\"]\n\n[project.scripts]\ntheHarvester = \"theHarvester.theHarvester:main\"\nrestfulHarvest = \"theHarvester.restfulHarvest:main\"\n\n[tool.setuptools.dynamic]\nversion = { attr = \"theHarvester.lib.version.VERSION\" }\ndependencies = { file = \"requirements/base.txt\" }\noptional-dependencies.dev = { file = \"requirements/dev.txt\" }\n\n[tool.setuptools.packages.find]\ninclude = [\"theHarvester*\"]\n\n[tool.setuptools.package-data]\n\"*\" = [\"*.txt\", \"*.yaml\"]\n\n[tool.pytest.ini_options]\nminversion = \"8.3.3\"\nasyncio_mode = \"auto\"\nasyncio_default_fixture_loop_scope = \"function\"\naddopts = \"--no-header\"\ntestpaths = [\n    \"tests\",\n    \"tests/discovery/\",\n]\n\n[build-system]\nrequires = [\"setuptools>=68\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.mypy]\npython_version = \"3.11\"\nwarn_unused_configs = true\nignore_missing_imports = true\nshow_traceback = true\nshow_error_codes = true\nnamespace_packages = true\n\n# astral.sh tools setup\n[tool.uv]\npython-preference = \"managed\"\n\n[tool.uv.pip]\npython-version = \"3.11\"\n\n[tool.ruff]\n# Exclude a variety of commonly ignored directories.\nexclude = [\n    \"tests\",\n    \".eggs\",\n    \".git\",\n    \".git-rewrite\",\n    \".mypy_cache\",\n    \".pyenv\",\n    \".pytest_cache\",\n    \".pytype\",\n    \".ruff_cache\",\n    \".github\",\n    \".venv\",\n    \".vscode\",\n    \".idea\",\n    \"__pypackages__\",\n    \"build\",\n    \"dist\",\n    \"site-packages\",\n    \"venv\",\n]\n\nline-length = 130\ntarget-version = \"py311\"\nshow-fixes = true\n\n[tool.ruff.lint]\nselect = [\"E4\",\n    \"E7\",\n    \"E9\",\n    \"F\",\n    \"I\",\n    \"UP\",\n    \"TCH\",\n    \"FA\",\n    \"RUF\",\n    \"PT\",\n    ]\nignore = [\"S311\", \"RUF021\", \"RUF029\", \"F841\"]\n\n# Allow fix for all enabled rules (when `--fix`) is provided.\nfixable = [\"ALL\"]\nunfixable = []\n\n# Allow unused variables when underscore-prefixed.\ndummy-variable-rgx = \"^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$\"\n\n[tool.ruff.format]\n# Like Black, use double quotes for strings.\nquote-style = \"single\"\nindent-style = \"space\"\n\n# Like Black, respect magic trailing commas.\nskip-magic-trailing-comma = false\n\n# Like Black, automatically detect the appropriate line ending.\nline-ending = \"auto\"\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0244140625,
          "content": "-r requirements/base.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "restfulHarvest.py",
          "type": "blob",
          "size": 0.1044921875,
          "content": "#!/usr/bin/env python3\nfrom theHarvester.restfulHarvest import main\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "theHarvester-logo.png",
          "type": "blob",
          "size": 19.0859375,
          "content": null
        },
        {
          "name": "theHarvester-logo.webp",
          "type": "blob",
          "size": 7.591796875,
          "content": null
        },
        {
          "name": "theHarvester.py",
          "type": "blob",
          "size": 0.31640625,
          "content": "#!/usr/bin/env python3\n# Note: This script runs theHarvester\nimport sys\n\nfrom theHarvester.theHarvester import main\n\nif sys.version_info.major < 3 or sys.version_info.minor < 11:\n    print('\\033[93m[!] Make sure you have Python 3.11+ installed, quitting.\\n\\n \\033[0m')\n    sys.exit(1)\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "theHarvester",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}