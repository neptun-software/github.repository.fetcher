{
  "metadata": {
    "timestamp": 1736561132262,
    "page": 75,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "magenta/magenta",
      "stars": 19275,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.095703125,
          "content": "*.pyc\n*.egg\n.eggs/\n.ipynb_checkpoints/\n*.swp\n*.egg-info/\n.cache/\nbuild/\n*.DS_Store\n.vscode\n.idea/\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.1787109375,
          "content": "[settings]\nline_length=1000\nforce_single_line=True\nforce_sort_within_sections=True\ndefault_section=THIRDPARTY\nsections=FUTURE,STDLIB,LOCALFOLDER,THIRDPARTY\nno_lines_before=THIRDPARTY\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 14.7724609375,
          "content": "# This Pylint rcfile contains a best-effort configuration to uphold the\n# best-practices and style described in the Google Python style guide:\n#   https://google.github.io/styleguide/pyguide.html\n#\n# Its canonical open-source location is:\n#   https://google.github.io/styleguide/pylintrc\n\n[MASTER]\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=third_party\n\n# Files or directories matching the regex patterns are skipped. The regex\n# matches against base names, not paths.\nignore-patterns=\n\n# Pickle collected data for later comparisons.\npersistent=no\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=4\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=abstract-method,\n        apply-builtin,\n        arguments-differ,\n        attribute-defined-outside-init,\n        backtick,\n        bad-option-value,\n        basestring-builtin,\n        buffer-builtin,\n        c-extension-no-member,\n        consider-using-enumerate,\n        consider-using-f-string,  # added\n        consider-using-generator,  # added\n        consider-using-in,  # added\n        consider-using-max-builtin,  # added\n        consider-using-min-builtin,  # added\n        consider-using-with,  # added\n        cmp-builtin,\n        cmp-method,\n        coerce-builtin,\n        coerce-method,\n        delslice-method,\n        div-method,\n        duplicate-code,\n        eq-without-hash,\n        execfile-builtin,\n        file-builtin,\n        filter-builtin-not-iterating,\n        fixme,\n        getslice-method,\n        global-statement,\n        hex-method,\n        idiv-method,\n        implicit-str-concat-in-sequence,\n        import-error,\n        import-self,\n        import-star-module-level,\n        inconsistent-return-statements,\n        input-builtin,\n        intern-builtin,\n        invalid-str-codec,\n        locally-disabled,\n        long-builtin,\n        long-suffix,\n        map-builtin-not-iterating,\n        misplaced-comparison-constant,\n        missing-function-docstring,\n        metaclass-assignment,\n        next-method-called,\n        next-method-defined,\n        no-absolute-import,\n        no-else-break,\n        no-else-continue,\n        no-else-raise,\n        no-else-return,\n        no-init,  # added\n        no-member,\n        no-name-in-module,\n        no-self-use,\n        nonzero-method,\n        not-context-manager,  # added\n        oct-method,\n        old-division,\n        old-ne-operator,\n        old-octal-literal,\n        old-raise-syntax,\n        parameter-unpacking,\n        print-statement,\n        raise-missing-from,  # added\n        raising-string,\n        range-builtin-not-iterating,\n        raw_input-builtin,\n        rdiv-method,\n        reduce-builtin,\n        relative-import,\n        reload-builtin,\n        round-builtin,\n        setslice-method,\n        signature-differs,\n        standarderror-builtin,\n        super-with-arguments,  # added\n        suppressed-message,\n        sys-max-int,\n        too-few-public-methods,\n        too-many-ancestors,\n        too-many-arguments,\n        too-many-boolean-expressions,\n        too-many-branches,\n        too-many-instance-attributes,\n        too-many-locals,\n        too-many-nested-blocks,\n        too-many-public-methods,\n        too-many-return-statements,\n        too-many-statements,\n        trailing-newlines,\n        unbalanced-tuple-unpacking,  # added\n        unichr-builtin,\n        unicode-builtin,\n        unnecessary-dunder-call,  # added\n        unnecessary-lambda-assignment,  # added\n        unnecessary-pass,\n        unpacking-in-except,\n        unsubscriptable-object,  # added\n        use-dict-literal,  # added\n        useless-else-on-loop,\n        useless-object-inheritance,\n        useless-suppression,\n        using-cmp-argument,\n        wrong-import-order,\n        xrange-builtin,\n        zip-builtin-not-iterating,\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\". This option is deprecated\n# and it will be removed in Pylint 2.0.\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=main,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty,cached_property.cached_property,cached_property.threaded_cached_property,cached_property.cached_property_with_ttl,cached_property.threaded_cached_property_with_ttl\n\n# Regular expression matching correct function names\nfunction-rgx=^(?:(?P<exempt>setUp|tearDown|setUpModule|tearDownModule)|(?P<camel_case>_?[A-Z][a-zA-Z0-9]*)|(?P<snake_case>_?[a-z][a-z0-9_]*))$\n\n# Regular expression matching correct variable names\nvariable-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct constant names\nconst-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$\n\n# Regular expression matching correct attribute names\nattr-rgx=^_{0,2}[a-z][a-z0-9_]*$\n\n# Regular expression matching correct argument names\nargument-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=^_?[A-Z][a-zA-Z0-9]*$\n\n# Regular expression matching correct module names\nmodule-rgx=^(_?[a-z][a-z0-9_]*|__init__)$\n\n# Regular expression matching correct method names\nmethod-rgx=(?x)^(?:(?P<exempt>_[a-z0-9_]+__|runTest|setUp|tearDown|setUpTestCase|tearDownTestCase|setupSelf|tearDownClass|setUpClass|(test|assert)_*[A-Z0-9][a-zA-Z0-9_]*|next)|(?P<camel_case>_{0,2}[A-Z][a-zA-Z0-9_]*)|(?P<snake_case>_{0,2}[a-z][a-z0-9_]*))$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=(__.*__|main|test.*|.*test|.*Test)$\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=10\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager,contextlib2.contextmanager\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=80\n\n# TODO(https://github.com/PyCQA/pylint/issues/3352): Direct pylint to exempt\n# lines made too long by directives to pytype.\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=(?x)(\n  ^\\s*(\\#\\ )?<?https?://\\S+>?$|\n  ^\\s*(from\\s+\\S+\\s+)?import\\s+.+$)\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=yes\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=\n\n# Maximum number of lines in a module\nmax-module-lines=99999\n\n# String used as indentation unit.  The internal Google style guide mandates 2\n# spaces.  Google's externaly-published style guide says 4, consistent with\n# PEP 8.  Here, we use 2 spaces, for conformity with many open-sourced Google\n# projects (like TensorFlow).\nindent-string='  '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=TODO\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=yes\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=^\\*{0,2}(_$|unused_|dummy_)\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six,six.moves,past.builtins,future.builtins,functools\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging,absl.logging,tensorflow.io.logging\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,\n                   TERMIOS,\n                   Bastion,\n                   rexec,\n                   sets\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant, absl\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls,\n                            class_\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=StandardError,\n                       Exception,\n                       BaseException\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.32421875,
          "content": "# This is the list of Magenta authors for copyright purposes.\n#\n# This does not necessarily list everyone who has contributed code, since in\n# some cases, their employer may be the copyright holder.  To see the full list\n# of contributors, see the revision history in source control.\nGoogle LLC\nSzymon Sidor <szymon.sidor@gmail.com>"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.142578125,
          "content": "Copyright 2016 The Magenta Team.  All rights reserved.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015, The TensorFlow Authors.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5029296875,
          "content": "# Status\n\nThis repository is currently inactive and serves only as a supplement some of our papers. We have transitioned to using individual repositories for new projects. For our current work, see the [Magenta website](https://g.co/magenta) and [Magenta GitHub Organization](https://github.com/magenta).\n\n# Magenta\n\n<img src=\"magenta-logo-bg.png\" height=\"75\">\n\n[![Build Status](https://github.com/magenta/magenta/workflows/build/badge.svg)](https://github.com/magenta/magenta/actions?query=workflow%3Abuild)\n [![PyPI version](https://badge.fury.io/py/magenta.svg)](https://badge.fury.io/py/magenta)\n\n**Magenta** is a research project exploring the role of machine learning\nin the process of creating art and music.  Primarily this\ninvolves developing new deep learning and reinforcement learning\nalgorithms for generating songs, images, drawings, and other materials. But it's also\nan exploration in building smart tools and interfaces that allow\nartists and musicians to extend (not replace!) their processes using\nthese models.  Magenta was started by some researchers and engineers\nfrom the [Google Brain team](https://research.google.com/teams/brain/),\nbut many others have contributed significantly to the project. We use\n[TensorFlow](https://www.tensorflow.org) and release our models and\ntools in open source on this GitHub.  If you’d like to learn more\nabout Magenta, check out our [blog](https://magenta.tensorflow.org),\nwhere we post technical details.  You can also join our [discussion\ngroup](https://groups.google.com/a/tensorflow.org/forum/#!forum/magenta-discuss).\n\nThis is the home for our Python TensorFlow library. To use our models in the browser with [TensorFlow.js](https://js.tensorflow.org/), head to the [Magenta.js](https://github.com/tensorflow/magenta-js) repository.\n\n## Getting Started\n\nTake a look at our [colab notebooks](https://magenta.tensorflow.org/demos/colab/) for various models, including one on [getting started](https://colab.research.google.com/notebooks/magenta/hello_magenta/hello_magenta.ipynb).\n[Magenta.js](https://github.com/tensorflow/magenta-js) is also a good resource for models and [demos](https://magenta.tensorflow.org/demos/web/) that run in the browser.\nThis and more, including [blog posts](https://magenta.tensorflow.org/blog) and [Ableton Live plugins](https://magenta.tensorflow.org/demos/native/), can be found at [https://magenta.tensorflow.org](https://magenta.tensorflow.org).\n\n## Magenta Repo\n\n* [Installation](#installation)\n* [Using Magenta](#using-magenta)\n* [Development Environment (Advanced)](#development-environment)\n\n## Installation\n\nMagenta maintains a [pip package](https://pypi.python.org/pypi/magenta) for easy\ninstallation. We recommend using Anaconda to install it, but it can work in any\nstandard Python environment. We support Python 3 (>= 3.5). These instructions\nwill assume you are using Anaconda.\n\n### Automated Install (w/ Anaconda)\n\nIf you are running Mac OS X or Ubuntu, you can try using our automated\ninstallation script. Just paste the following command into your terminal.\n\n```bash\ncurl https://raw.githubusercontent.com/tensorflow/magenta/main/magenta/tools/magenta-install.sh > /tmp/magenta-install.sh\nbash /tmp/magenta-install.sh\n```\n\nAfter the script completes, open a new terminal window so the environment\nvariable changes take effect.\n\nThe Magenta libraries are now available for use within Python programs and\nJupyter notebooks, and the Magenta scripts are installed in your path!\n\nNote that you will need to run `source activate magenta` to use Magenta every\ntime you open a new terminal window.\n\n### Manual Install (w/o Anaconda)\n\nIf the automated script fails for any reason, or you'd prefer to install by\nhand, do the following steps.\n\nInstall the Magenta pip package:\n\n```bash\npip install magenta\n```\n\n**NOTE**: In order to install the `rtmidi` package that we depend on, you may need to install headers for some sound libraries. On Ubuntu Linux, this command should install the necessary packages:\n\n```bash\nsudo apt-get install build-essential libasound2-dev libjack-dev portaudio19-dev\n```\nOn Fedora Linux, use\n```bash\nsudo dnf group install \"C Development Tools and Libraries\"\nsudo dnf install SAASound-devel jack-audio-connection-kit-devel portaudio-devel\n```\n\n\nThe Magenta libraries are now available for use within Python programs and\nJupyter notebooks, and the Magenta scripts are installed in your path!\n\n## Using Magenta\n\nYou can now train our various models and use them to generate music, audio, and images. You can\nfind instructions for each of the models by exploring the [models directory](magenta/models).\n\n## Development Environment\nIf you want to develop on Magenta, you'll need to set up the full Development Environment.\n\nFirst, clone this repository:\n\n```bash\ngit clone https://github.com/tensorflow/magenta.git\n```\n\nNext, install the dependencies by changing to the base directory and executing the setup command:\n\n```bash\npip install -e .\n```\n\nYou can now edit the files and run scripts by calling Python as usual. For example, this is how you would run the `melody_rnn_generate` script from the base directory:\n\n```bash\npython magenta/models/melody_rnn/melody_rnn_generate --config=...\n```\n\nYou can also install the (potentially modified) package with:\n\n```bash\npip install .\n```\n\nBefore creating a pull request, please also test your changes with:\n\n```bash\npip install pytest-pylint\npytest\n```\n\n## PIP Release\n\nTo build a new version for pip, bump the version and then run:\n\n```bash\npython setup.py test\npython setup.py bdist_wheel --universal\ntwine upload dist/magenta-N.N.N-py2.py3-none-any.whl\n```\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.876953125,
          "content": "# Copyright 2024 The Magenta Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Parse flags when using pytest, which imports tests instead of running.\"\"\"\n\nimport sys\n\nfrom absl import flags\nimport pytest\n\n\n@pytest.fixture(scope='session', autouse=True)\ndef parse_flags():\n  # Only pass the first item, because pytest flags shouldn't be parsed as absl\n  # flags.\n  flags.FLAGS(sys.argv[:1])\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "magenta-logo-bg.png",
          "type": "blob",
          "size": 67.494140625,
          "content": null
        },
        {
          "name": "magenta",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0205078125,
          "content": "[aliases]\ntest=pytest"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 6.2919921875,
          "content": "# Copyright 2024 The Magenta Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"A setuptools based setup module for magenta.\"\"\"\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n# Bit of a hack to parse the version string stored in version.py without\n# executing __init__.py, which will end up requiring a bunch of dependencies to\n# execute (e.g., tensorflow, pretty_midi, etc.).\n# Makes the __version__ variable available.\nwith open('magenta/version.py') as in_file:\n  exec(in_file.read())  # pylint: disable=exec-used\n\nREQUIRED_PACKAGES = [\n    'absl-py == 1.2.0',\n    'dm-sonnet == 2.0.0',\n    'imageio == 2.20.0',\n    'librosa == 0.7.2',\n    'matplotlib == 3.5.2',\n    'mido == 1.2.6',\n    'mir_eval == 0.7',\n    'note-seq == 0.0.3',\n    'numba == 0.49.1',\n    'numpy == 1.21.6',\n    'Pillow == 9.2.0',\n    'pretty_midi == 0.2.9',\n    'pygtrie == 2.5.0',\n    'python-rtmidi == 1.1.2',\n    'scikit-image == 0.19.3',\n    'scipy == 1.7.3',\n    'six == 1.16.0',\n    'sk-video == 1.1.10',\n    'sox == 1.4.1',\n    'tensorflow == 2.9.1',\n    'tensorflow-datasets == 4.6.0',\n    'tensorflow-probability == 0.17.0',\n    'tf_slim == 1.1.0',\n    'wheel == 0.37.1',\n]\n\nEXTRAS_REQUIRE = {\n    'beam': [\n        'apache-beam[gcp] == 2.40.0',\n    ],\n    'onsets_frames_realtime': [\n        'pyaudio == 0.2.12',\n        'colorama == 0.4.5',\n        'tflite == 2.4.0',\n    ],\n    'test': [\n        'pylint == 2.14.5',\n        'pytest == 7.1.2',\n    ]\n}\n\n# pylint:disable=line-too-long\nCONSOLE_SCRIPTS = [\n    'magenta.interfaces.midi.magenta_midi',\n    'magenta.interfaces.midi.midi_clock',\n    'magenta.models.arbitrary_image_stylization.arbitrary_image_stylization_evaluate',\n    'magenta.models.arbitrary_image_stylization.arbitrary_image_stylization_train',\n    'magenta.models.arbitrary_image_stylization.arbitrary_image_stylization_with_weights',\n    'magenta.models.arbitrary_image_stylization.arbitrary_image_stylization_distill_mobilenet',\n    'magenta.models.drums_rnn.drums_rnn_create_dataset',\n    'magenta.models.drums_rnn.drums_rnn_generate',\n    'magenta.models.drums_rnn.drums_rnn_train',\n    'magenta.models.image_stylization.image_stylization_create_dataset',\n    'magenta.models.image_stylization.image_stylization_evaluate',\n    'magenta.models.image_stylization.image_stylization_finetune',\n    'magenta.models.image_stylization.image_stylization_train',\n    'magenta.models.image_stylization.image_stylization_transform',\n    'magenta.models.improv_rnn.improv_rnn_create_dataset',\n    'magenta.models.improv_rnn.improv_rnn_generate',\n    'magenta.models.improv_rnn.improv_rnn_train',\n    'magenta.models.gansynth.gansynth_train',\n    'magenta.models.gansynth.gansynth_generate',\n    'magenta.models.melody_rnn.melody_rnn_create_dataset',\n    'magenta.models.melody_rnn.melody_rnn_generate',\n    'magenta.models.melody_rnn.melody_rnn_train',\n    'magenta.models.music_vae.music_vae_generate',\n    'magenta.models.music_vae.music_vae_train',\n    'magenta.models.nsynth.wavenet.nsynth_generate',\n    'magenta.models.nsynth.wavenet.nsynth_save_embeddings',\n    'magenta.models.onsets_frames_transcription.onsets_frames_transcription_create_dataset',\n    'magenta.models.onsets_frames_transcription.onsets_frames_transcription_create_dataset_maps',\n    'magenta.models.onsets_frames_transcription.onsets_frames_transcription_create_tfrecords',\n    'magenta.models.onsets_frames_transcription.onsets_frames_transcription_infer',\n    'magenta.models.onsets_frames_transcription.onsets_frames_transcription_train',\n    'magenta.models.onsets_frames_transcription.onsets_frames_transcription_transcribe',\n    'magenta.models.onsets_frames_transcription.realtime.onsets_frames_transcription_realtime',\n    'magenta.models.performance_rnn.performance_rnn_create_dataset',\n    'magenta.models.performance_rnn.performance_rnn_generate',\n    'magenta.models.performance_rnn.performance_rnn_train',\n    'magenta.models.pianoroll_rnn_nade.pianoroll_rnn_nade_create_dataset',\n    'magenta.models.pianoroll_rnn_nade.pianoroll_rnn_nade_generate',\n    'magenta.models.pianoroll_rnn_nade.pianoroll_rnn_nade_train',\n    'magenta.models.polyphony_rnn.polyphony_rnn_create_dataset',\n    'magenta.models.polyphony_rnn.polyphony_rnn_generate',\n    'magenta.models.polyphony_rnn.polyphony_rnn_train',\n    'magenta.models.rl_tuner.rl_tuner_train',\n    'magenta.models.sketch_rnn.sketch_rnn_train',\n    'magenta.scripts.convert_dir_to_note_sequences',\n    'magenta.tensor2tensor.t2t_datagen',\n    'magenta.tensor2tensor.t2t_decoder',\n    'magenta.tensor2tensor.t2t_trainer',\n]\n# pylint:enable=line-too-long\n\nsetup(\n    name='magenta',\n    version=__version__,  # pylint: disable=undefined-variable\n    description='Use machine learning to create art and music',\n    long_description='',\n    url='https://magenta.tensorflow.org/',\n    author='Google Inc.',\n    author_email='magenta-discuss@gmail.com',\n    license='Apache 2',\n    # PyPI package information.\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Intended Audience :: Developers',\n        'Intended Audience :: Education',\n        'Intended Audience :: Science/Research',\n        'License :: OSI Approved :: Apache Software License',\n        'Programming Language :: Python :: 3',\n        'Topic :: Scientific/Engineering :: Mathematics',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Software Development :: Libraries',\n    ],\n    keywords='tensorflow machine learning magenta music art',\n\n    packages=find_packages(),\n    install_requires=REQUIRED_PACKAGES,\n    extras_require=EXTRAS_REQUIRE,\n    entry_points={\n        'console_scripts': ['%s = %s:console_entry_point' % (n, p) for n, p in\n                            ((s.split('.')[-1], s) for s in CONSOLE_SCRIPTS)],\n    },\n\n    include_package_data=True,\n    package_data={\n        'magenta': ['models/image_stylization/evaluation_images/*.jpg'],\n    },\n)\n"
        }
      ]
    }
  ]
}