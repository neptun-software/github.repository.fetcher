{
  "metadata": {
    "timestamp": 1736561086014,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openai/openai-python",
      "stars": 23953,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.109375,
          "content": ".prism.log\n.vscode\n_dev\n\n__pycache__\n.mypy_cache\n\ndist\n\n.venv\n.idea\n\n.env\n.envrc\ncodegen.log\nBrewfile.lock.json\n"
        },
        {
          "name": ".inline-snapshot",
          "type": "tree",
          "content": null
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.0068359375,
          "content": "3.9.18\n"
        },
        {
          "name": ".release-please-manifest.json",
          "type": "blob",
          "size": 0.0185546875,
          "content": "{\n  \".\": \"1.59.6\"\n}"
        },
        {
          "name": ".stats.yml",
          "type": "blob",
          "size": 0.173828125,
          "content": "configured_endpoints: 69\nopenapi_spec_url: https://storage.googleapis.com/stainless-sdk-openapi-specs/openai-b5b0e2c794b012919701c3fd43286af10fa25d33ceb8a881bec2636028f446e0.yml\n"
        },
        {
          "name": "Brewfile",
          "type": "blob",
          "size": 0.01171875,
          "content": "brew \"rye\"\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 107.06640625,
          "content": "# Changelog\n\n## 1.59.6 (2025-01-09)\n\nFull Changelog: [v1.59.5...v1.59.6](https://github.com/openai/openai-python/compare/v1.59.5...v1.59.6)\n\n### Bug Fixes\n\n* correctly handle deserialising `cls` fields ([#2002](https://github.com/openai/openai-python/issues/2002)) ([089c820](https://github.com/openai/openai-python/commit/089c820c8a5d20e9db6a171f0a4f11b481fe8465))\n\n\n### Chores\n\n* **internal:** spec update ([#2000](https://github.com/openai/openai-python/issues/2000)) ([36548f8](https://github.com/openai/openai-python/commit/36548f871763fdd7b5ce44903d186bc916331549))\n\n## 1.59.5 (2025-01-08)\n\nFull Changelog: [v1.59.4...v1.59.5](https://github.com/openai/openai-python/compare/v1.59.4...v1.59.5)\n\n### Bug Fixes\n\n* **client:** only call .close() when needed ([#1992](https://github.com/openai/openai-python/issues/1992)) ([bdfd699](https://github.com/openai/openai-python/commit/bdfd699b99522e83f7610b5f98e36fe43ddf8338))\n\n\n### Documentation\n\n* fix typos ([#1995](https://github.com/openai/openai-python/issues/1995)) ([be694a0](https://github.com/openai/openai-python/commit/be694a097d6cf2668f08ecf94c882773b2ee1f84))\n* fix typos ([#1996](https://github.com/openai/openai-python/issues/1996)) ([714aed9](https://github.com/openai/openai-python/commit/714aed9d7eb74a19f6e502fb6d4fe83399f82851))\n* more typo fixes ([#1998](https://github.com/openai/openai-python/issues/1998)) ([7bd92f0](https://github.com/openai/openai-python/commit/7bd92f06a75f11f6afc2d1223d2426e186cc74cb))\n* **readme:** moved period to inside parentheses ([#1980](https://github.com/openai/openai-python/issues/1980)) ([e7fae94](https://github.com/openai/openai-python/commit/e7fae948f2ba8db23461e4374308417570196847))\n\n## 1.59.4 (2025-01-07)\n\nFull Changelog: [v1.59.3...v1.59.4](https://github.com/openai/openai-python/compare/v1.59.3...v1.59.4)\n\n### Chores\n\n* add missing isclass check ([#1988](https://github.com/openai/openai-python/issues/1988)) ([61d9072](https://github.com/openai/openai-python/commit/61d9072fbace58d64910ec7378c3686ac555972e))\n* add missing isclass check for structured outputs ([bcbf013](https://github.com/openai/openai-python/commit/bcbf013e8d825b8b5f88172313dfb6e0313ca34c))\n* **internal:** bump httpx dependency ([#1990](https://github.com/openai/openai-python/issues/1990)) ([288c2c3](https://github.com/openai/openai-python/commit/288c2c30dc405cbaa89924f9243442300e95e100))\n\n\n### Documentation\n\n* **realtime:** fix event reference link ([9b6885d](https://github.com/openai/openai-python/commit/9b6885d50f8d65ba5009642046727d291e0f14fa))\n\n## 1.59.3 (2025-01-03)\n\nFull Changelog: [v1.59.2...v1.59.3](https://github.com/openai/openai-python/compare/v1.59.2...v1.59.3)\n\n### Chores\n\n* **api:** bump spec version ([#1985](https://github.com/openai/openai-python/issues/1985)) ([c6f1b35](https://github.com/openai/openai-python/commit/c6f1b357fcf669065f4ed6819d47a528b0787128))\n\n## 1.59.2 (2025-01-03)\n\nFull Changelog: [v1.59.1...v1.59.2](https://github.com/openai/openai-python/compare/v1.59.1...v1.59.2)\n\n### Chores\n\n* **ci:** fix publish workflow ([0be1f5d](https://github.com/openai/openai-python/commit/0be1f5de0daf807cece564abf061c8bb188bb9aa))\n* **internal:** empty commit ([fe8dc2e](https://github.com/openai/openai-python/commit/fe8dc2e97fc430ea2433ed28cfaa79425af223ec))\n\n## 1.59.1 (2025-01-02)\n\nFull Changelog: [v1.59.0...v1.59.1](https://github.com/openai/openai-python/compare/v1.59.0...v1.59.1)\n\n### Chores\n\n* bump license year ([#1981](https://github.com/openai/openai-python/issues/1981)) ([f29011a](https://github.com/openai/openai-python/commit/f29011a6426d3fa4844ecd723ee20561ee60c665))\n\n## 1.59.0 (2024-12-21)\n\nFull Changelog: [v1.58.1...v1.59.0](https://github.com/openai/openai-python/compare/v1.58.1...v1.59.0)\n\n### Features\n\n* **azure:** support for the Realtime API ([#1963](https://github.com/openai/openai-python/issues/1963)) ([9fda141](https://github.com/openai/openai-python/commit/9fda14172abdb66fe240aa7b4dc7cfae4faf1d73))\n\n\n### Chores\n\n* **realtime:** update docstrings ([#1964](https://github.com/openai/openai-python/issues/1964)) ([3dee863](https://github.com/openai/openai-python/commit/3dee863554d28272103e90a6a199ac196e92ff05))\n\n## 1.58.1 (2024-12-17)\n\nFull Changelog: [v1.58.0...v1.58.1](https://github.com/openai/openai-python/compare/v1.58.0...v1.58.1)\n\n### Documentation\n\n* **readme:** fix example script link ([23ba877](https://github.com/openai/openai-python/commit/23ba8778fd55e0f54f36685e9c5950b452d8e10c))\n\n## 1.58.0 (2024-12-17)\n\nFull Changelog: [v1.57.4...v1.58.0](https://github.com/openai/openai-python/compare/v1.57.4...v1.58.0)\n\n### Features\n\n* add Realtime API support ([#1958](https://github.com/openai/openai-python/issues/1958)) ([97d73cf](https://github.com/openai/openai-python/commit/97d73cf89935ca6098bb889a92f0ec2cdff16989))\n* **api:** new o1 and GPT-4o models + preference fine-tuning ([#1956](https://github.com/openai/openai-python/issues/1956)) ([ec22ffb](https://github.com/openai/openai-python/commit/ec22ffb129c524525caa33b088405d27c271e631))\n\n\n### Bug Fixes\n\n* add reasoning_effort to all methods ([8829c32](https://github.com/openai/openai-python/commit/8829c3202dbe790ca3646476c802ec55ed47d864))\n* **assistants:** correctly send `include` query param ([9a4c69c](https://github.com/openai/openai-python/commit/9a4c69c383bc6719b6521a485f2c7e62a9c036a9))\n* **cli/migrate:** change grit binaries prefix ([#1951](https://github.com/openai/openai-python/issues/1951)) ([1c396c9](https://github.com/openai/openai-python/commit/1c396c95b040fb3d1a2523b09eaad4ff62d96846))\n\n\n### Chores\n\n* **internal:** fix some typos ([#1955](https://github.com/openai/openai-python/issues/1955)) ([628dead](https://github.com/openai/openai-python/commit/628dead660c00435bf46e09081c7b90b7bbe4a8a))\n\n\n### Documentation\n\n* add examples + guidance on Realtime API support ([1cb00f8](https://github.com/openai/openai-python/commit/1cb00f8fed78052aacbb9e0fac997b6ba0d44d2a))\n* **readme:** example snippet for client context manager ([#1953](https://github.com/openai/openai-python/issues/1953)) ([ad80255](https://github.com/openai/openai-python/commit/ad802551d8aaf4e6eff711118676ec4e64392638))\n\n## 1.57.4 (2024-12-13)\n\nFull Changelog: [v1.57.3...v1.57.4](https://github.com/openai/openai-python/compare/v1.57.3...v1.57.4)\n\n### Chores\n\n* **internal:** remove some duplicated imports ([#1946](https://github.com/openai/openai-python/issues/1946)) ([f94fddd](https://github.com/openai/openai-python/commit/f94fddd377015764b3c82919fdf956f619447b77))\n* **internal:** updated imports ([#1948](https://github.com/openai/openai-python/issues/1948)) ([13971fc](https://github.com/openai/openai-python/commit/13971fc450106746c0ae02ab931e68b770ee105e))\n\n## 1.57.3 (2024-12-12)\n\nFull Changelog: [v1.57.2...v1.57.3](https://github.com/openai/openai-python/compare/v1.57.2...v1.57.3)\n\n### Chores\n\n* **internal:** add support for TypeAliasType ([#1942](https://github.com/openai/openai-python/issues/1942)) ([d3442ff](https://github.com/openai/openai-python/commit/d3442ff28f2394200e14122f683d1f94686e8231))\n* **internal:** bump pyright ([#1939](https://github.com/openai/openai-python/issues/1939)) ([190d1a8](https://github.com/openai/openai-python/commit/190d1a805dee7c37fb8f9dcb93b1715caa06cf95))\n\n## 1.57.2 (2024-12-10)\n\nFull Changelog: [v1.57.1...v1.57.2](https://github.com/openai/openai-python/compare/v1.57.1...v1.57.2)\n\n### Bug Fixes\n\n* **azure:** handle trailing slash in `azure_endpoint` ([#1935](https://github.com/openai/openai-python/issues/1935)) ([69b73c5](https://github.com/openai/openai-python/commit/69b73c553b1982277c2f1b9d110ed951ddca689e))\n\n\n### Documentation\n\n* **readme:** fix http client proxies example ([#1932](https://github.com/openai/openai-python/issues/1932)) ([7a83e0f](https://github.com/openai/openai-python/commit/7a83e0fe4cc29e484ae417448b002c997745e4a3))\n\n## 1.57.1 (2024-12-09)\n\nFull Changelog: [v1.57.0...v1.57.1](https://github.com/openai/openai-python/compare/v1.57.0...v1.57.1)\n\n### Chores\n\n* **internal:** bump pydantic dependency ([#1929](https://github.com/openai/openai-python/issues/1929)) ([5227c95](https://github.com/openai/openai-python/commit/5227c95eff9c7b1395e6d8f14b94652a91ed2ee2))\n\n## 1.57.0 (2024-12-05)\n\nFull Changelog: [v1.56.2...v1.57.0](https://github.com/openai/openai-python/compare/v1.56.2...v1.57.0)\n\n### Features\n\n* **api:** updates ([#1924](https://github.com/openai/openai-python/issues/1924)) ([82ba614](https://github.com/openai/openai-python/commit/82ba6144682b0a6b3a22d4f764231c0c6afdcf6e))\n\n\n### Chores\n\n* bump openapi url ([#1922](https://github.com/openai/openai-python/issues/1922)) ([a472a8f](https://github.com/openai/openai-python/commit/a472a8fd0ba36b6897dcd02b6005fcf23f98f056))\n\n## 1.56.2 (2024-12-04)\n\nFull Changelog: [v1.56.1...v1.56.2](https://github.com/openai/openai-python/compare/v1.56.1...v1.56.2)\n\n### Chores\n\n* make the `Omit` type public ([#1919](https://github.com/openai/openai-python/issues/1919)) ([4fb8a1c](https://github.com/openai/openai-python/commit/4fb8a1cf1f8df37ce8c027bbaaac85a648bae02a))\n\n## 1.56.1 (2024-12-03)\n\nFull Changelog: [v1.56.0...v1.56.1](https://github.com/openai/openai-python/compare/v1.56.0...v1.56.1)\n\n### Bug Fixes\n\n* **cli:** remove usage of httpx proxies ([0e9fc3d](https://github.com/openai/openai-python/commit/0e9fc3dfbc7dec5b8c8f84dea9d87aad9f3d9cf6))\n\n\n### Chores\n\n* **internal:** bump pyright ([#1917](https://github.com/openai/openai-python/issues/1917)) ([0e87346](https://github.com/openai/openai-python/commit/0e8734637666ab22bc27fe4ec2cf7c39fddb5d08))\n\n## 1.56.0 (2024-12-02)\n\nFull Changelog: [v1.55.3...v1.56.0](https://github.com/openai/openai-python/compare/v1.55.3...v1.56.0)\n\n### Features\n\n* **client:** make ChatCompletionStreamState public ([#1898](https://github.com/openai/openai-python/issues/1898)) ([dc7f6cb](https://github.com/openai/openai-python/commit/dc7f6cb2618686ff04bfdca228913cda3d320884))\n\n## 1.55.3 (2024-11-28)\n\nFull Changelog: [v1.55.2...v1.55.3](https://github.com/openai/openai-python/compare/v1.55.2...v1.55.3)\n\n### Bug Fixes\n\n* **client:** compat with new httpx 0.28.0 release ([#1904](https://github.com/openai/openai-python/issues/1904)) ([72b6c63](https://github.com/openai/openai-python/commit/72b6c636c526885ef873580a07eff1c18e76bc10))\n\n## 1.55.2 (2024-11-27)\n\nFull Changelog: [v1.55.1...v1.55.2](https://github.com/openai/openai-python/compare/v1.55.1...v1.55.2)\n\n### Chores\n\n* **internal:** exclude mypy from running on tests ([#1899](https://github.com/openai/openai-python/issues/1899)) ([e2496f1](https://github.com/openai/openai-python/commit/e2496f1d274126bdaa46a8256b3dd384b4ae244b))\n\n\n### Documentation\n\n* **assistants:** correct on_text_delta example ([#1896](https://github.com/openai/openai-python/issues/1896)) ([460b663](https://github.com/openai/openai-python/commit/460b663567ed1031467a8d69eb13fd3b3da38827))\n\n## 1.55.1 (2024-11-25)\n\nFull Changelog: [v1.55.0...v1.55.1](https://github.com/openai/openai-python/compare/v1.55.0...v1.55.1)\n\n### Bug Fixes\n\n* **pydantic-v1:** avoid runtime error for assistants streaming ([#1885](https://github.com/openai/openai-python/issues/1885)) ([197c94b](https://github.com/openai/openai-python/commit/197c94b9e2620da8902aeed6959d2f871bb70461))\n\n\n### Chores\n\n* remove now unused `cached-property` dep ([#1867](https://github.com/openai/openai-python/issues/1867)) ([df5fac1](https://github.com/openai/openai-python/commit/df5fac1e557f79ed8d0935c48ca7f3f0bf77fa98))\n* remove now unused `cached-property` dep ([#1891](https://github.com/openai/openai-python/issues/1891)) ([feebaae](https://github.com/openai/openai-python/commit/feebaae85d76960cb8f1c58dd9b5180136c47962))\n\n\n### Documentation\n\n* add info log level to readme ([#1887](https://github.com/openai/openai-python/issues/1887)) ([358255d](https://github.com/openai/openai-python/commit/358255d15ed220f8c80a3c0861b98e61e909a7ae))\n\n## 1.55.0 (2024-11-20)\n\nFull Changelog: [v1.54.5...v1.55.0](https://github.com/openai/openai-python/compare/v1.54.5...v1.55.0)\n\n### Features\n\n* **api:** add gpt-4o-2024-11-20 model ([#1877](https://github.com/openai/openai-python/issues/1877)) ([ff64c2a](https://github.com/openai/openai-python/commit/ff64c2a0733854ed8cc1d7dd959a8287b2ec8120))\n\n## 1.54.5 (2024-11-19)\n\nFull Changelog: [v1.54.4...v1.54.5](https://github.com/openai/openai-python/compare/v1.54.4...v1.54.5)\n\n### Bug Fixes\n\n* **asyncify:** avoid hanging process under certain conditions ([#1853](https://github.com/openai/openai-python/issues/1853)) ([3d23437](https://github.com/openai/openai-python/commit/3d234377e7c9cd19db5186688612eb18e68cec8f))\n\n\n### Chores\n\n* **internal:** minor test changes ([#1874](https://github.com/openai/openai-python/issues/1874)) ([189339d](https://github.com/openai/openai-python/commit/189339d2a09d23ea1883286972f366e19b397f91))\n* **internal:** spec update ([#1873](https://github.com/openai/openai-python/issues/1873)) ([24c81f7](https://github.com/openai/openai-python/commit/24c81f729ae09ba3cec5542e5cc955c8b05b0f88))\n* **tests:** limit array example length ([#1870](https://github.com/openai/openai-python/issues/1870)) ([1e550df](https://github.com/openai/openai-python/commit/1e550df708fc3b5d903b7adfa2180058a216b676))\n\n## 1.54.4 (2024-11-12)\n\nFull Changelog: [v1.54.3...v1.54.4](https://github.com/openai/openai-python/compare/v1.54.3...v1.54.4)\n\n### Bug Fixes\n\n* don't use dicts as iterables in transform ([#1865](https://github.com/openai/openai-python/issues/1865)) ([76a51b1](https://github.com/openai/openai-python/commit/76a51b11efae50659a562197b1e18c6343964b56))\n\n\n### Documentation\n\n* bump models in example snippets to gpt-4o ([#1861](https://github.com/openai/openai-python/issues/1861)) ([adafe08](https://github.com/openai/openai-python/commit/adafe0859178d406fa93b38f3547f3d262651331))\n* move comments in example snippets ([#1860](https://github.com/openai/openai-python/issues/1860)) ([362cf74](https://github.com/openai/openai-python/commit/362cf74d6c34506f98f6c4fb2304357be21f7691))\n* **readme:** add missing asyncio import ([#1858](https://github.com/openai/openai-python/issues/1858)) ([dec9d0c](https://github.com/openai/openai-python/commit/dec9d0c97b702b6bcf9c71f5bdd6172bb5718354))\n\n## 1.54.3 (2024-11-06)\n\nFull Changelog: [v1.54.2...v1.54.3](https://github.com/openai/openai-python/compare/v1.54.2...v1.54.3)\n\n### Bug Fixes\n\n* **logs:** redact sensitive headers ([#1850](https://github.com/openai/openai-python/issues/1850)) ([466608f](https://github.com/openai/openai-python/commit/466608fa56b7a9939c08a4c78be2f6fe4a05111b))\n\n## 1.54.2 (2024-11-06)\n\nFull Changelog: [v1.54.1...v1.54.2](https://github.com/openai/openai-python/compare/v1.54.1...v1.54.2)\n\n### Chores\n\n* **tests:** adjust retry timeout values ([#1851](https://github.com/openai/openai-python/issues/1851)) ([cc8009c](https://github.com/openai/openai-python/commit/cc8009c9de56fe80f2689f69e7b891ff4ed297a3))\n\n## 1.54.1 (2024-11-05)\n\nFull Changelog: [v1.54.0...v1.54.1](https://github.com/openai/openai-python/compare/v1.54.0...v1.54.1)\n\n### Bug Fixes\n\n* add new prediction param to all methods ([6aa424d](https://github.com/openai/openai-python/commit/6aa424d076098312801febd938bd4b5e8baf4851))\n\n## 1.54.0 (2024-11-04)\n\nFull Changelog: [v1.53.1...v1.54.0](https://github.com/openai/openai-python/compare/v1.53.1...v1.54.0)\n\n### Features\n\n* **api:** add support for predicted outputs ([#1847](https://github.com/openai/openai-python/issues/1847)) ([42a4103](https://github.com/openai/openai-python/commit/42a410379a1b5f72424cc2e96dc6ddff22fd00be))\n* **project:** drop support for Python 3.7 ([#1845](https://github.com/openai/openai-python/issues/1845)) ([0ed5b1a](https://github.com/openai/openai-python/commit/0ed5b1a9302ccf2f40c3c751cd777740a4749cda))\n\n## 1.53.1 (2024-11-04)\n\nFull Changelog: [v1.53.0...v1.53.1](https://github.com/openai/openai-python/compare/v1.53.0...v1.53.1)\n\n### Bug Fixes\n\n* don't use dicts as iterables in transform ([#1842](https://github.com/openai/openai-python/issues/1842)) ([258f265](https://github.com/openai/openai-python/commit/258f26535744ab3b2f0746991fd29eae72ebd667))\n* support json safe serialization for basemodel subclasses ([#1844](https://github.com/openai/openai-python/issues/1844)) ([2b80c90](https://github.com/openai/openai-python/commit/2b80c90c21d3b2468dfa3bf40c08c5b0e0eebffa))\n\n\n### Chores\n\n* **internal:** bump mypy ([#1839](https://github.com/openai/openai-python/issues/1839)) ([d92f959](https://github.com/openai/openai-python/commit/d92f959aa6f49be56574b4d1d1ac5ac48689dd46))\n\n## 1.53.0 (2024-10-30)\n\nFull Changelog: [v1.52.2...v1.53.0](https://github.com/openai/openai-python/compare/v1.52.2...v1.53.0)\n\n### Features\n\n* **api:** add new, expressive voices for Realtime and Audio in Chat Completions ([7cf0a49](https://github.com/openai/openai-python/commit/7cf0a4958e4c985bef4d18bb919fa3948f389a82))\n\n\n### Chores\n\n* **internal:** bump pytest to v8 & pydantic ([#1829](https://github.com/openai/openai-python/issues/1829)) ([0e67a8a](https://github.com/openai/openai-python/commit/0e67a8af5daf9da029d2bd4bdf341cc8a494254a))\n\n## 1.52.2 (2024-10-23)\n\nFull Changelog: [v1.52.1...v1.52.2](https://github.com/openai/openai-python/compare/v1.52.1...v1.52.2)\n\n### Chores\n\n* **internal:** update spec version ([#1816](https://github.com/openai/openai-python/issues/1816)) ([c23282a](https://github.com/openai/openai-python/commit/c23282a328c48af90a88673ff5f6cc7a866f8758))\n\n## 1.52.1 (2024-10-22)\n\nFull Changelog: [v1.52.0...v1.52.1](https://github.com/openai/openai-python/compare/v1.52.0...v1.52.1)\n\n### Bug Fixes\n\n* **client/async:** correctly retry in all cases ([#1803](https://github.com/openai/openai-python/issues/1803)) ([9fe3f3f](https://github.com/openai/openai-python/commit/9fe3f3f925e06769b7ef6abbf1314a5e82749b4a))\n\n\n### Chores\n\n* **internal:** bump ruff dependency ([#1801](https://github.com/openai/openai-python/issues/1801)) ([859c672](https://github.com/openai/openai-python/commit/859c6725865f1b3285698f68693f9491d511f7ea))\n* **internal:** remove unused black config ([#1807](https://github.com/openai/openai-python/issues/1807)) ([112dab0](https://github.com/openai/openai-python/commit/112dab0290342654265db612c37d327d652251bb))\n* **internal:** update spec version ([#1810](https://github.com/openai/openai-python/issues/1810)) ([aa25b7b](https://github.com/openai/openai-python/commit/aa25b7b88823836b418a63da59491f5f3842773c))\n* **internal:** update test syntax ([#1798](https://github.com/openai/openai-python/issues/1798)) ([d3098dd](https://github.com/openai/openai-python/commit/d3098dd0b9fbe627c21a8ad39c119d125b7cdb54))\n* **tests:** add more retry tests ([#1806](https://github.com/openai/openai-python/issues/1806)) ([5525a1b](https://github.com/openai/openai-python/commit/5525a1ba536058ecc13411e1f98e88f7ec4bf8b9))\n\n## 1.52.0 (2024-10-17)\n\nFull Changelog: [v1.51.2...v1.52.0](https://github.com/openai/openai-python/compare/v1.51.2...v1.52.0)\n\n### Features\n\n* **api:** add gpt-4o-audio-preview model for chat completions ([#1796](https://github.com/openai/openai-python/issues/1796)) ([fbf1e0c](https://github.com/openai/openai-python/commit/fbf1e0c25c4d163f06b61a43d1a94ce001033a7b))\n\n## 1.51.2 (2024-10-08)\n\nFull Changelog: [v1.51.1...v1.51.2](https://github.com/openai/openai-python/compare/v1.51.1...v1.51.2)\n\n### Chores\n\n* add repr to PageInfo class ([#1780](https://github.com/openai/openai-python/issues/1780)) ([63118ee](https://github.com/openai/openai-python/commit/63118ee3c2481d217682e8a31337bdcc16893127))\n\n## 1.51.1 (2024-10-07)\n\nFull Changelog: [v1.51.0...v1.51.1](https://github.com/openai/openai-python/compare/v1.51.0...v1.51.1)\n\n### Bug Fixes\n\n* **client:** avoid OverflowError with very large retry counts ([#1779](https://github.com/openai/openai-python/issues/1779)) ([fb1dacf](https://github.com/openai/openai-python/commit/fb1dacfa4d9447d123c38ab3d3d433d900d32ec5))\n\n\n### Chores\n\n* **internal:** add support for parsing bool response content ([#1774](https://github.com/openai/openai-python/issues/1774)) ([aa2e25f](https://github.com/openai/openai-python/commit/aa2e25f9a4a632357051397ea34d269eafba026d))\n\n\n### Documentation\n\n* fix typo in fenced code block language ([#1769](https://github.com/openai/openai-python/issues/1769)) ([57bbc15](https://github.com/openai/openai-python/commit/57bbc155210cc439a36f4e5cbd082e94c3349d78))\n* improve and reference contributing documentation ([#1767](https://github.com/openai/openai-python/issues/1767)) ([a985a8b](https://github.com/openai/openai-python/commit/a985a8b8ab8d0b364bd3c26b6423a7c49ae7b1ce))\n\n## 1.51.0 (2024-10-01)\n\nFull Changelog: [v1.50.2...v1.51.0](https://github.com/openai/openai-python/compare/v1.50.2...v1.51.0)\n\n### Features\n\n* **api:** support storing chat completions, enabling evals and model distillation in the dashboard ([2840c6d](https://github.com/openai/openai-python/commit/2840c6df94afb44cfd80efabe0405898331ee267))\n\n\n### Chores\n\n* **docs:** fix maxium typo ([#1762](https://github.com/openai/openai-python/issues/1762)) ([de94553](https://github.com/openai/openai-python/commit/de94553f93d71fc6c8187c8d3fbe924a71cc46dd))\n* **internal:** remove ds store ([47a3968](https://github.com/openai/openai-python/commit/47a3968f9b318eb02d5602f5b10e7d9e69c3ae84))\n\n\n### Documentation\n\n* **helpers:** fix method name typo ([#1764](https://github.com/openai/openai-python/issues/1764)) ([e1bcfe8](https://github.com/openai/openai-python/commit/e1bcfe86554017ac63055060153c4fd72e65c0cf))\n\n## 1.50.2 (2024-09-27)\n\nFull Changelog: [v1.50.1...v1.50.2](https://github.com/openai/openai-python/compare/v1.50.1...v1.50.2)\n\n### Bug Fixes\n\n* **audio:** correct types for transcriptions / translations ([#1755](https://github.com/openai/openai-python/issues/1755)) ([76c1f3f](https://github.com/openai/openai-python/commit/76c1f3f318b68003aae124c02efc4547a398a864))\n\n## 1.50.1 (2024-09-27)\n\nFull Changelog: [v1.50.0...v1.50.1](https://github.com/openai/openai-python/compare/v1.50.0...v1.50.1)\n\n### Documentation\n\n* **helpers:** fix chat completion anchor ([#1753](https://github.com/openai/openai-python/issues/1753)) ([956d4e8](https://github.com/openai/openai-python/commit/956d4e8e32507fbce399f4619e06daa9d37a0532))\n\n## 1.50.0 (2024-09-26)\n\nFull Changelog: [v1.49.0...v1.50.0](https://github.com/openai/openai-python/compare/v1.49.0...v1.50.0)\n\n### Features\n\n* **structured outputs:** add support for accessing raw responses ([#1748](https://github.com/openai/openai-python/issues/1748)) ([0189e28](https://github.com/openai/openai-python/commit/0189e28b0b062a28b16343da0460a4f0f4e17a9a))\n\n\n### Chores\n\n* **pydantic v1:** exclude specific properties when rich printing ([#1751](https://github.com/openai/openai-python/issues/1751)) ([af535ce](https://github.com/openai/openai-python/commit/af535ce6a523eca39438f117a3e55f16064567a9))\n\n## 1.49.0 (2024-09-26)\n\nFull Changelog: [v1.48.0...v1.49.0](https://github.com/openai/openai-python/compare/v1.48.0...v1.49.0)\n\n### Features\n\n* **api:** add omni-moderation model ([#1750](https://github.com/openai/openai-python/issues/1750)) ([05b50da](https://github.com/openai/openai-python/commit/05b50da5428d5c7b5ea09626bcd88f8423762bf8))\n\n\n### Chores\n\n* **internal:** update test snapshots ([#1749](https://github.com/openai/openai-python/issues/1749)) ([42f054e](https://github.com/openai/openai-python/commit/42f054ee7afa8ce8316c2ecd90608a0f7e13bfdd))\n\n## 1.48.0 (2024-09-25)\n\nFull Changelog: [v1.47.1...v1.48.0](https://github.com/openai/openai-python/compare/v1.47.1...v1.48.0)\n\n### Features\n\n* **client:** allow overriding retry count header ([#1745](https://github.com/openai/openai-python/issues/1745)) ([9f07d4d](https://github.com/openai/openai-python/commit/9f07d4dbd6f24108a1f5e0309037318858f5a229))\n\n\n### Bug Fixes\n\n* **audio:** correct response_format translations type ([#1743](https://github.com/openai/openai-python/issues/1743)) ([b912108](https://github.com/openai/openai-python/commit/b9121089c696bc943323e2e75d4706401d809aaa))\n\n\n### Chores\n\n* **internal:** use `typing_extensions.overload` instead of `typing` ([#1740](https://github.com/openai/openai-python/issues/1740)) ([2522bd5](https://github.com/openai/openai-python/commit/2522bd59f7b5e903e4fc856a4c5dbdbe66bba37f))\n\n## 1.47.1 (2024-09-23)\n\nFull Changelog: [v1.47.0...v1.47.1](https://github.com/openai/openai-python/compare/v1.47.0...v1.47.1)\n\n### Bug Fixes\n\n* **pydantic v1:** avoid warnings error ([1e8e7d1](https://github.com/openai/openai-python/commit/1e8e7d1f01a4ab4153085bc20484a19613d993b3))\n\n## 1.47.0 (2024-09-20)\n\nFull Changelog: [v1.46.1...v1.47.0](https://github.com/openai/openai-python/compare/v1.46.1...v1.47.0)\n\n### Features\n\n* **client:** send retry count header ([21b0c00](https://github.com/openai/openai-python/commit/21b0c0043406d81971f87455e5a48b17935dc346))\n\n\n### Chores\n\n* **types:** improve type name for embedding models ([#1730](https://github.com/openai/openai-python/issues/1730)) ([4b4eb2b](https://github.com/openai/openai-python/commit/4b4eb2b37877728d2124ad5651ceebf615c0ab28))\n\n## 1.46.1 (2024-09-19)\n\nFull Changelog: [v1.46.0...v1.46.1](https://github.com/openai/openai-python/compare/v1.46.0...v1.46.1)\n\n### Bug Fixes\n\n* **client:** handle domains with underscores ([#1726](https://github.com/openai/openai-python/issues/1726)) ([cd194df](https://github.com/openai/openai-python/commit/cd194dfdc418a84589bd903357cba349e9ad3e78))\n\n\n### Chores\n\n* **streaming:** silence pydantic model_dump warnings ([#1722](https://github.com/openai/openai-python/issues/1722)) ([30f84b9](https://github.com/openai/openai-python/commit/30f84b96081ac37f60e40a75d765dbbf563b61b3))\n\n## 1.46.0 (2024-09-17)\n\nFull Changelog: [v1.45.1...v1.46.0](https://github.com/openai/openai-python/compare/v1.45.1...v1.46.0)\n\n### Features\n\n* **client:** add ._request_id property to object responses ([#1707](https://github.com/openai/openai-python/issues/1707)) ([8b3da05](https://github.com/openai/openai-python/commit/8b3da05a35b33245aec98693a0540ace6218a61b))\n\n\n### Documentation\n\n* **readme:** add examples for chat with image content ([#1703](https://github.com/openai/openai-python/issues/1703)) ([192b8f2](https://github.com/openai/openai-python/commit/192b8f2b6a49f462e48c1442858931875524ab49))\n\n## 1.45.1 (2024-09-16)\n\nFull Changelog: [v1.45.0...v1.45.1](https://github.com/openai/openai-python/compare/v1.45.0...v1.45.1)\n\n### Chores\n\n* **internal:** bump pyright / mypy version ([#1717](https://github.com/openai/openai-python/issues/1717)) ([351af85](https://github.com/openai/openai-python/commit/351af85c5b813391910301a5049edddc8c9e70dd))\n* **internal:** bump ruff ([#1714](https://github.com/openai/openai-python/issues/1714)) ([aceaf64](https://github.com/openai/openai-python/commit/aceaf641eedd092ed42e4aaf031e8cfbf37e4212))\n* **internal:** update spec link ([#1716](https://github.com/openai/openai-python/issues/1716)) ([ca58c7f](https://github.com/openai/openai-python/commit/ca58c7f83a7cede0367dec2500127573c9b00d1f))\n\n\n### Documentation\n\n* update CONTRIBUTING.md ([#1710](https://github.com/openai/openai-python/issues/1710)) ([4d45eb5](https://github.com/openai/openai-python/commit/4d45eb5eb794bcc5076c022be09e06fae103abcc))\n\n## 1.45.0 (2024-09-12)\n\nFull Changelog: [v1.44.1...v1.45.0](https://github.com/openai/openai-python/compare/v1.44.1...v1.45.0)\n\n### Features\n\n* **api:** add o1 models ([#1708](https://github.com/openai/openai-python/issues/1708)) ([06bd42e](https://github.com/openai/openai-python/commit/06bd42e77121a6abd4826a79ce1848812d956576))\n* **errors:** include completion in LengthFinishReasonError ([#1701](https://github.com/openai/openai-python/issues/1701)) ([b0e3256](https://github.com/openai/openai-python/commit/b0e32562aff9aceafec994d3b047f7c2a9f11524))\n\n\n### Bug Fixes\n\n* **types:** correctly mark stream discriminator as optional ([#1706](https://github.com/openai/openai-python/issues/1706)) ([80f02f9](https://github.com/openai/openai-python/commit/80f02f9e5f83fac9cd2f4172b733a92ad01399b2))\n\n## 1.44.1 (2024-09-09)\n\nFull Changelog: [v1.44.0...v1.44.1](https://github.com/openai/openai-python/compare/v1.44.0...v1.44.1)\n\n### Chores\n\n* add docstrings to raw response properties ([#1696](https://github.com/openai/openai-python/issues/1696)) ([1d2a19b](https://github.com/openai/openai-python/commit/1d2a19b0e8acab54c35ef2171d33321943488fdc))\n\n\n### Documentation\n\n* **readme:** add section on determining installed version ([#1697](https://github.com/openai/openai-python/issues/1697)) ([0255735](https://github.com/openai/openai-python/commit/0255735930d9c657c78e85e7f03fd1eb98a1e378))\n* **readme:** improve custom `base_url` example ([#1694](https://github.com/openai/openai-python/issues/1694)) ([05eec8a](https://github.com/openai/openai-python/commit/05eec8a0b7fcdc8651021f2e685214a353b861d1))\n\n## 1.44.0 (2024-09-06)\n\nFull Changelog: [v1.43.1...v1.44.0](https://github.com/openai/openai-python/compare/v1.43.1...v1.44.0)\n\n### Features\n\n* **vector store:** improve chunking strategy type names ([#1690](https://github.com/openai/openai-python/issues/1690)) ([e82cd85](https://github.com/openai/openai-python/commit/e82cd85ac4962e36cb3b139c503069b56918688f))\n\n## 1.43.1 (2024-09-05)\n\nFull Changelog: [v1.43.0...v1.43.1](https://github.com/openai/openai-python/compare/v1.43.0...v1.43.1)\n\n### Chores\n\n* pyproject.toml formatting changes ([#1687](https://github.com/openai/openai-python/issues/1687)) ([3387ede](https://github.com/openai/openai-python/commit/3387ede0b896788bf1197378b01941c75bd6e179))\n\n## 1.43.0 (2024-08-29)\n\nFull Changelog: [v1.42.0...v1.43.0](https://github.com/openai/openai-python/compare/v1.42.0...v1.43.0)\n\n### Features\n\n* **api:** add file search result details to run steps ([#1681](https://github.com/openai/openai-python/issues/1681)) ([f5449c0](https://github.com/openai/openai-python/commit/f5449c07580ac9707f0387f86f4772fbf0a874b6))\n\n## 1.42.0 (2024-08-20)\n\nFull Changelog: [v1.41.1...v1.42.0](https://github.com/openai/openai-python/compare/v1.41.1...v1.42.0)\n\n### Features\n\n* **parsing:** add support for pydantic dataclasses ([#1655](https://github.com/openai/openai-python/issues/1655)) ([101bee9](https://github.com/openai/openai-python/commit/101bee9844f725d2174796c3d09a58d3aa079fad))\n\n\n### Chores\n\n* **ci:** also run pydantic v1 tests ([#1666](https://github.com/openai/openai-python/issues/1666)) ([af2a1ca](https://github.com/openai/openai-python/commit/af2a1ca408a406098c6c79837aa3561b822e08ec))\n\n## 1.41.1 (2024-08-19)\n\nFull Changelog: [v1.41.0...v1.41.1](https://github.com/openai/openai-python/compare/v1.41.0...v1.41.1)\n\n### Bug Fixes\n\n* **json schema:** remove `None` defaults ([#1663](https://github.com/openai/openai-python/issues/1663)) ([30215c1](https://github.com/openai/openai-python/commit/30215c15df613cf9c36cafd717af79158c9db3e5))\n\n\n### Chores\n\n* **client:** fix parsing union responses when non-json is returned ([#1665](https://github.com/openai/openai-python/issues/1665)) ([822c37d](https://github.com/openai/openai-python/commit/822c37de49eb2ffe8c05122f7520ba87bd76e30b))\n\n## 1.41.0 (2024-08-16)\n\nFull Changelog: [v1.40.8...v1.41.0](https://github.com/openai/openai-python/compare/v1.40.8...v1.41.0)\n\n### Features\n\n* **client:** add uploads.upload_file helper ([aae079d](https://github.com/openai/openai-python/commit/aae079daa3c1763ab0e46bad766ae5261b475806))\n\n## 1.40.8 (2024-08-15)\n\nFull Changelog: [v1.40.7...v1.40.8](https://github.com/openai/openai-python/compare/v1.40.7...v1.40.8)\n\n### Chores\n\n* **types:** define FilePurpose enum ([#1653](https://github.com/openai/openai-python/issues/1653)) ([3c2eeae](https://github.com/openai/openai-python/commit/3c2eeae32adf5d4ab6bc622be6f9a95a1a298dd3))\n\n## 1.40.7 (2024-08-15)\n\nFull Changelog: [v1.40.6...v1.40.7](https://github.com/openai/openai-python/compare/v1.40.6...v1.40.7)\n\n### Bug Fixes\n\n* **cli/migrate:** change grit binaries download source ([#1649](https://github.com/openai/openai-python/issues/1649)) ([85e8935](https://github.com/openai/openai-python/commit/85e8935d9a123b92964d39a98334a975a06ab845))\n\n\n### Chores\n\n* **docs:** fix typo in example snippet ([4e83b57](https://github.com/openai/openai-python/commit/4e83b57ffbb64e1c98c19968557dc68a0b65d0b3))\n* **internal:** use different 32bit detection method ([#1652](https://github.com/openai/openai-python/issues/1652)) ([5831af6](https://github.com/openai/openai-python/commit/5831af65048af2a5df9e3ea4a48b8fff2e66dd8c))\n\n## 1.40.6 (2024-08-12)\n\nFull Changelog: [v1.40.5...v1.40.6](https://github.com/openai/openai-python/compare/v1.40.5...v1.40.6)\n\n### Chores\n\n* **examples:** minor formatting changes ([#1644](https://github.com/openai/openai-python/issues/1644)) ([e08acf1](https://github.com/openai/openai-python/commit/e08acf1c6edd1501ed70c4634cd884ab1658af0d))\n* **internal:** update some imports ([#1642](https://github.com/openai/openai-python/issues/1642)) ([fce1ea7](https://github.com/openai/openai-python/commit/fce1ea72a89ba2737bc77775fe04f3a21ecb28e7))\n* sync openapi url ([#1646](https://github.com/openai/openai-python/issues/1646)) ([8ae3801](https://github.com/openai/openai-python/commit/8ae380123ada0bfaca9961e222a0e9c8b585e2d4))\n* **tests:** fix pydantic v1 tests ([2623630](https://github.com/openai/openai-python/commit/26236303f0f6de5df887e8ee3e41d5bc39a3abb1))\n\n## 1.40.5 (2024-08-12)\n\nFull Changelog: [v1.40.4...v1.40.5](https://github.com/openai/openai-python/compare/v1.40.4...v1.40.5)\n\n### Documentation\n\n* **helpers:** make async client usage more clear ([34e1edf](https://github.com/openai/openai-python/commit/34e1edf29d6008df7196aaebc45172fa536c6410)), closes [#1639](https://github.com/openai/openai-python/issues/1639)\n\n## 1.40.4 (2024-08-12)\n\nFull Changelog: [v1.40.3...v1.40.4](https://github.com/openai/openai-python/compare/v1.40.3...v1.40.4)\n\n### Bug Fixes\n\n* **json schema:** unravel `$ref`s alongside additional keys ([c7a3d29](https://github.com/openai/openai-python/commit/c7a3d2986acaf3b31844b39608d03265ad87bb04))\n* **json schema:** unwrap `allOf`s with one entry ([53d964d](https://github.com/openai/openai-python/commit/53d964defebdf385d7d832ec7f13111b4af13c27))\n\n## 1.40.3 (2024-08-10)\n\nFull Changelog: [v1.40.2...v1.40.3](https://github.com/openai/openai-python/compare/v1.40.2...v1.40.3)\n\n### Chores\n\n* **ci:** bump prism mock server version ([#1630](https://github.com/openai/openai-python/issues/1630)) ([214d8fd](https://github.com/openai/openai-python/commit/214d8fd8d7d43c06c7dfe02680847a6a60988120))\n* **ci:** codeowners file ([#1627](https://github.com/openai/openai-python/issues/1627)) ([c059a20](https://github.com/openai/openai-python/commit/c059a20c8cd2124178641c9d8688e276b1cf1d59))\n* **internal:** ensure package is importable in lint cmd ([#1631](https://github.com/openai/openai-python/issues/1631)) ([779e6d0](https://github.com/openai/openai-python/commit/779e6d081eb55c158f2aa1962190079eb7f1335e))\n\n## 1.40.2 (2024-08-08)\n\nFull Changelog: [v1.40.1...v1.40.2](https://github.com/openai/openai-python/compare/v1.40.1...v1.40.2)\n\n### Bug Fixes\n\n* **client:** raise helpful error message for response_format misuse ([18191da](https://github.com/openai/openai-python/commit/18191dac8e1437a0f708525d474b7ecfe459d966))\n* **json schema:** support recursive BaseModels in Pydantic v1 ([#1623](https://github.com/openai/openai-python/issues/1623)) ([43e10c0](https://github.com/openai/openai-python/commit/43e10c0f251a42f1e6497f360c6c23d3058b3da3))\n\n\n### Chores\n\n* **internal:** format some docstrings ([d34a081](https://github.com/openai/openai-python/commit/d34a081c30f869646145919b2256ded115241eb5))\n* **internal:** updates ([#1624](https://github.com/openai/openai-python/issues/1624)) ([598e7a2](https://github.com/openai/openai-python/commit/598e7a23768e7addbe1319ada2e87caee3cf0d14))\n\n## 1.40.1 (2024-08-07)\n\nFull Changelog: [v1.40.0...v1.40.1](https://github.com/openai/openai-python/compare/v1.40.0...v1.40.1)\n\n### Chores\n\n* **internal:** update OpenAPI spec url ([#1608](https://github.com/openai/openai-python/issues/1608)) ([5392753](https://github.com/openai/openai-python/commit/53927531fc101e96b9e3f5d44f34b298055f496a))\n* **internal:** update test snapshots ([a11d1cb](https://github.com/openai/openai-python/commit/a11d1cb5d04aac0bf69dc10a3a21fa95575c0aa0))\n\n## 1.40.0 (2024-08-06)\n\nFull Changelog: [v1.39.0...v1.40.0](https://github.com/openai/openai-python/compare/v1.39.0...v1.40.0)\n\n### Features\n\n* **api:** add structured outputs support ([e8dba7d](https://github.com/openai/openai-python/commit/e8dba7d0e08a7d0de5952be716e0efe9ae373759))\n\n\n### Chores\n\n* **internal:** bump ruff version ([#1604](https://github.com/openai/openai-python/issues/1604)) ([3e19a87](https://github.com/openai/openai-python/commit/3e19a87255d8e92716689656afaa3f16297773b6))\n* **internal:** update pydantic compat helper function ([#1607](https://github.com/openai/openai-python/issues/1607)) ([973c18b](https://github.com/openai/openai-python/commit/973c18b259a0e4a8134223f50a5f660b86650949))\n\n## 1.39.0 (2024-08-05)\n\nFull Changelog: [v1.38.0...v1.39.0](https://github.com/openai/openai-python/compare/v1.38.0...v1.39.0)\n\n### Features\n\n* **client:** add `retries_taken` to raw response class ([#1601](https://github.com/openai/openai-python/issues/1601)) ([777822b](https://github.com/openai/openai-python/commit/777822b39b7f9ebd6272d0af8fc04f9d657bd886))\n\n\n### Bug Fixes\n\n* **assistants:** add parallel_tool_calls param to runs.stream ([113e82a](https://github.com/openai/openai-python/commit/113e82a82c7390660ad3324fa8f9842f83b27571))\n\n\n### Chores\n\n* **internal:** bump pyright ([#1599](https://github.com/openai/openai-python/issues/1599)) ([27f0f10](https://github.com/openai/openai-python/commit/27f0f107e39d16adc0d5a50ffe4c687e0e3c42e5))\n* **internal:** test updates ([#1602](https://github.com/openai/openai-python/issues/1602)) ([af22d80](https://github.com/openai/openai-python/commit/af22d8079cf44cde5f03a206e78b900f8413dc43))\n* **internal:** use `TypeAlias` marker for type assignments ([#1597](https://github.com/openai/openai-python/issues/1597)) ([5907ea0](https://github.com/openai/openai-python/commit/5907ea04d6f5e0ffd17c38ad6a644a720ece8abe))\n\n## 1.38.0 (2024-08-02)\n\nFull Changelog: [v1.37.2...v1.38.0](https://github.com/openai/openai-python/compare/v1.37.2...v1.38.0)\n\n### Features\n\n* extract out `ImageModel`, `AudioModel`, `SpeechModel` ([#1586](https://github.com/openai/openai-python/issues/1586)) ([b800316](https://github.com/openai/openai-python/commit/b800316aee6c8b2aeb609ca4c41972adccd2fa7a))\n* make enums not nominal ([#1588](https://github.com/openai/openai-python/issues/1588)) ([ab4519b](https://github.com/openai/openai-python/commit/ab4519bc45f5512c8c5165641c217385d999809c))\n\n## 1.37.2 (2024-08-01)\n\nFull Changelog: [v1.37.1...v1.37.2](https://github.com/openai/openai-python/compare/v1.37.1...v1.37.2)\n\n### Chores\n\n* **internal:** add type construction helper ([#1584](https://github.com/openai/openai-python/issues/1584)) ([cbb186a](https://github.com/openai/openai-python/commit/cbb186a534b520fa5b11a9b371b175e3f6a6482b))\n* **runs/create_and_poll:** add parallel_tool_calls request param ([04b3e6c](https://github.com/openai/openai-python/commit/04b3e6c39ee5a7088e0e4dfa4c06f3dcce901a57))\n\n## 1.37.1 (2024-07-25)\n\nFull Changelog: [v1.37.0...v1.37.1](https://github.com/openai/openai-python/compare/v1.37.0...v1.37.1)\n\n### Chores\n\n* **tests:** update prism version ([#1572](https://github.com/openai/openai-python/issues/1572)) ([af82593](https://github.com/openai/openai-python/commit/af8259393673af1ef6ec711da6297eb4ad55b66e))\n\n## 1.37.0 (2024-07-22)\n\nFull Changelog: [v1.36.1...v1.37.0](https://github.com/openai/openai-python/compare/v1.36.1...v1.37.0)\n\n### Features\n\n* **api:** add uploads endpoints ([#1568](https://github.com/openai/openai-python/issues/1568)) ([d877b6d](https://github.com/openai/openai-python/commit/d877b6dabb9b3e8da6ff2f46de1120af54de398d))\n\n\n### Bug Fixes\n\n* **cli/audio:** handle non-json response format ([#1557](https://github.com/openai/openai-python/issues/1557)) ([bb7431f](https://github.com/openai/openai-python/commit/bb7431f602602d4c74d75809c6934a7fd192972d))\n\n\n### Documentation\n\n* **readme:** fix example snippet imports ([#1569](https://github.com/openai/openai-python/issues/1569)) ([0c90af6](https://github.com/openai/openai-python/commit/0c90af6412b3314c2257b9b8eb7fabd767f32ef6))\n\n## 1.36.1 (2024-07-20)\n\nFull Changelog: [v1.36.0...v1.36.1](https://github.com/openai/openai-python/compare/v1.36.0...v1.36.1)\n\n### Bug Fixes\n\n* **types:** add gpt-4o-mini to more assistants methods ([39a8a37](https://github.com/openai/openai-python/commit/39a8a372eb3f2d75fd4310d42294d05175a59fd8))\n\n## 1.36.0 (2024-07-19)\n\nFull Changelog: [v1.35.15...v1.36.0](https://github.com/openai/openai-python/compare/v1.35.15...v1.36.0)\n\n### Features\n\n* **api:** add new gpt-4o-mini models ([#1561](https://github.com/openai/openai-python/issues/1561)) ([5672ad4](https://github.com/openai/openai-python/commit/5672ad40aaa3498f6143baa48fc22bb1a3475bea))\n\n## 1.35.15 (2024-07-18)\n\nFull Changelog: [v1.35.14...v1.35.15](https://github.com/openai/openai-python/compare/v1.35.14...v1.35.15)\n\n### Chores\n\n* **docs:** document how to do per-request http client customization ([#1560](https://github.com/openai/openai-python/issues/1560)) ([24c0768](https://github.com/openai/openai-python/commit/24c076873c5cb2abe0d3e285b99aa110451b0f19))\n* **internal:** update formatting ([#1553](https://github.com/openai/openai-python/issues/1553)) ([e1389bc](https://github.com/openai/openai-python/commit/e1389bcc26f3aac63fc6bc9bb151c9a330d95b4e))\n\n## 1.35.14 (2024-07-15)\n\nFull Changelog: [v1.35.13...v1.35.14](https://github.com/openai/openai-python/compare/v1.35.13...v1.35.14)\n\n### Chores\n\n* **docs:** minor update to formatting of API link in README ([#1550](https://github.com/openai/openai-python/issues/1550)) ([a6e59c6](https://github.com/openai/openai-python/commit/a6e59c6bbff9e1132aa323c0ecb3be7f0692ae42))\n* **internal:** minor formatting changes ([ee1c62e](https://github.com/openai/openai-python/commit/ee1c62ede01872e76156d886af4aab5f8eb1cc64))\n* **internal:** minor options / compat functions updates ([#1549](https://github.com/openai/openai-python/issues/1549)) ([a0701b5](https://github.com/openai/openai-python/commit/a0701b5dbeda4ac2d8a4b093aee4bdad9d674ee2))\n\n## 1.35.13 (2024-07-10)\n\nFull Changelog: [v1.35.12...v1.35.13](https://github.com/openai/openai-python/compare/v1.35.12...v1.35.13)\n\n### Bug Fixes\n\n* **threads/runs/create_and_run_stream:** correct tool_resources param ([8effd08](https://github.com/openai/openai-python/commit/8effd08be3ab1cf509bdbfd9f174f9186fdbf71f))\n\n\n### Chores\n\n* **internal:** add helper function ([#1538](https://github.com/openai/openai-python/issues/1538)) ([81655a0](https://github.com/openai/openai-python/commit/81655a012e28c0240e71cf74b77ad1f9ac630906))\n\n## 1.35.12 (2024-07-09)\n\nFull Changelog: [v1.35.11...v1.35.12](https://github.com/openai/openai-python/compare/v1.35.11...v1.35.12)\n\n### Bug Fixes\n\n* **azure:** refresh auth token during retries ([#1533](https://github.com/openai/openai-python/issues/1533)) ([287926e](https://github.com/openai/openai-python/commit/287926e4c0920b930af2b9d3d8b46a24e78e2979))\n* **tests:** fresh_env() now resets new environment values ([64da888](https://github.com/openai/openai-python/commit/64da888ca4d13f0b4b6d9e22ec93a897b2d6bb24))\n\n## 1.35.11 (2024-07-09)\n\nFull Changelog: [v1.35.10...v1.35.11](https://github.com/openai/openai-python/compare/v1.35.10...v1.35.11)\n\n### Chores\n\n* **internal:** minor request options handling changes ([#1534](https://github.com/openai/openai-python/issues/1534)) ([8b0e493](https://github.com/openai/openai-python/commit/8b0e49302b3fcc32cf02393bf28354c577188904))\n\n## 1.35.10 (2024-07-03)\n\nFull Changelog: [v1.35.9...v1.35.10](https://github.com/openai/openai-python/compare/v1.35.9...v1.35.10)\n\n### Chores\n\n* **ci:** update rye to v0.35.0 ([#1523](https://github.com/openai/openai-python/issues/1523)) ([dd118c4](https://github.com/openai/openai-python/commit/dd118c422019df00b153104b7bddf892c2ec7417))\n\n## 1.35.9 (2024-07-02)\n\nFull Changelog: [v1.35.8...v1.35.9](https://github.com/openai/openai-python/compare/v1.35.8...v1.35.9)\n\n### Bug Fixes\n\n* **client:** always respect content-type multipart/form-data if provided ([#1519](https://github.com/openai/openai-python/issues/1519)) ([6da55e1](https://github.com/openai/openai-python/commit/6da55e10c4ba8c78687baedc68d5599ea120d05c))\n\n\n### Chores\n\n* minor change to tests ([#1521](https://github.com/openai/openai-python/issues/1521)) ([a679c0b](https://github.com/openai/openai-python/commit/a679c0bd1e041434440174daa7a64289746856d1))\n\n## 1.35.8 (2024-07-02)\n\nFull Changelog: [v1.35.7...v1.35.8](https://github.com/openai/openai-python/compare/v1.35.7...v1.35.8)\n\n### Chores\n\n* gitignore test server logs ([#1509](https://github.com/openai/openai-python/issues/1509)) ([936d840](https://github.com/openai/openai-python/commit/936d84094a28ad0a2b4a20e2b3bbf1674048223e))\n* **internal:** add helper method for constructing `BaseModel`s ([#1517](https://github.com/openai/openai-python/issues/1517)) ([e5ddbf5](https://github.com/openai/openai-python/commit/e5ddbf554ce4b6be4b59114a36e69f02ca724acf))\n* **internal:** add reflection helper function ([#1508](https://github.com/openai/openai-python/issues/1508)) ([6044e1b](https://github.com/openai/openai-python/commit/6044e1bbfa9e46a01faf5a9edf198f86fa4c6dd0))\n* **internal:** add rich as a dev dependency ([#1514](https://github.com/openai/openai-python/issues/1514)) ([8a2b4e4](https://github.com/openai/openai-python/commit/8a2b4e4c1233dca916531ebc65d65a8d35fa7b7b))\n\n## 1.35.7 (2024-06-27)\n\nFull Changelog: [v1.35.6...v1.35.7](https://github.com/openai/openai-python/compare/v1.35.6...v1.35.7)\n\n### Bug Fixes\n\n* **build:** include more files in sdist builds ([#1504](https://github.com/openai/openai-python/issues/1504)) ([730c1b5](https://github.com/openai/openai-python/commit/730c1b53b1a61e218a85aa2d1cf3ba4775618755))\n\n## 1.35.6 (2024-06-27)\n\nFull Changelog: [v1.35.5...v1.35.6](https://github.com/openai/openai-python/compare/v1.35.5...v1.35.6)\n\n### Documentation\n\n* **readme:** improve some wording ([#1392](https://github.com/openai/openai-python/issues/1392)) ([a58a052](https://github.com/openai/openai-python/commit/a58a05215b560ebcf3ff3eb1dd997259720a48f3))\n\n## 1.35.5 (2024-06-26)\n\nFull Changelog: [v1.35.4...v1.35.5](https://github.com/openai/openai-python/compare/v1.35.4...v1.35.5)\n\n### Bug Fixes\n\n* **cli/migrate:** avoid reliance on Python 3.12 argument ([be7a06b](https://github.com/openai/openai-python/commit/be7a06b3875e3ecb9229d67a41e290ca218f092d))\n\n## 1.35.4 (2024-06-26)\n\nFull Changelog: [v1.35.3...v1.35.4](https://github.com/openai/openai-python/compare/v1.35.3...v1.35.4)\n\n### Bug Fixes\n\n* **docs:** fix link to advanced python httpx docs ([#1499](https://github.com/openai/openai-python/issues/1499)) ([cf45cd5](https://github.com/openai/openai-python/commit/cf45cd5942cecec569072146673ddfc0e0ec108e))\n* temporarily patch upstream version to fix broken release flow ([#1500](https://github.com/openai/openai-python/issues/1500)) ([4f10470](https://github.com/openai/openai-python/commit/4f10470f5f74fc258a78fa6d897d8ab5b70dcf52))\n\n\n### Chores\n\n* **doc:** clarify service tier default value ([#1496](https://github.com/openai/openai-python/issues/1496)) ([ba39667](https://github.com/openai/openai-python/commit/ba39667c4faa8e10457347be41334ca9639186d4))\n\n## 1.35.3 (2024-06-20)\n\nFull Changelog: [v1.35.2...v1.35.3](https://github.com/openai/openai-python/compare/v1.35.2...v1.35.3)\n\n### Bug Fixes\n\n* **tests:** add explicit type annotation ([9345f10](https://github.com/openai/openai-python/commit/9345f104889056b2ef6646d65375925a0a3bae03))\n\n## 1.35.2 (2024-06-20)\n\nFull Changelog: [v1.35.1...v1.35.2](https://github.com/openai/openai-python/compare/v1.35.1...v1.35.2)\n\n### Bug Fixes\n\n* **api:** add missing parallel_tool_calls arguments ([4041e4f](https://github.com/openai/openai-python/commit/4041e4f6ea1e2316179a82031001308be23a2524))\n\n## 1.35.1 (2024-06-19)\n\nFull Changelog: [v1.35.0...v1.35.1](https://github.com/openai/openai-python/compare/v1.35.0...v1.35.1)\n\n### Bug Fixes\n\n* **client/async:** avoid blocking io call for platform headers ([#1488](https://github.com/openai/openai-python/issues/1488)) ([ae64c05](https://github.com/openai/openai-python/commit/ae64c05cbae76a58b592d913bee6ac1ef9611d4c))\n\n## 1.35.0 (2024-06-18)\n\nFull Changelog: [v1.34.0...v1.35.0](https://github.com/openai/openai-python/compare/v1.34.0...v1.35.0)\n\n### Features\n\n* **api:** add service tier argument for chat completions ([#1486](https://github.com/openai/openai-python/issues/1486)) ([b4b4e66](https://github.com/openai/openai-python/commit/b4b4e660b8bb7ae937787fcab9b40feaeba7f711))\n\n## 1.34.0 (2024-06-12)\n\nFull Changelog: [v1.33.0...v1.34.0](https://github.com/openai/openai-python/compare/v1.33.0...v1.34.0)\n\n### Features\n\n* **api:** updates ([#1481](https://github.com/openai/openai-python/issues/1481)) ([b83db36](https://github.com/openai/openai-python/commit/b83db362f0c9a5a4d55588b954fb1df1a68c98e3))\n\n## 1.33.0 (2024-06-07)\n\nFull Changelog: [v1.32.1...v1.33.0](https://github.com/openai/openai-python/compare/v1.32.1...v1.33.0)\n\n### Features\n\n* **api:** adding chunking_strategy to polling helpers ([#1478](https://github.com/openai/openai-python/issues/1478)) ([83be2a1](https://github.com/openai/openai-python/commit/83be2a13e0384d3de52190d86ccb1b5d7a197d84))\n\n## 1.32.1 (2024-06-07)\n\nFull Changelog: [v1.32.0...v1.32.1](https://github.com/openai/openai-python/compare/v1.32.0...v1.32.1)\n\n### Bug Fixes\n\n* remove erroneous thread create argument ([#1476](https://github.com/openai/openai-python/issues/1476)) ([43175c4](https://github.com/openai/openai-python/commit/43175c40e607d626a77a151691778c35a0e60eec))\n\n## 1.32.0 (2024-06-06)\n\nFull Changelog: [v1.31.2...v1.32.0](https://github.com/openai/openai-python/compare/v1.31.2...v1.32.0)\n\n### Features\n\n* **api:** updates ([#1474](https://github.com/openai/openai-python/issues/1474)) ([87ddff0](https://github.com/openai/openai-python/commit/87ddff0e6e64650691a8e32f7477b7a00e06ed23))\n\n## 1.31.2 (2024-06-06)\n\nFull Changelog: [v1.31.1...v1.31.2](https://github.com/openai/openai-python/compare/v1.31.1...v1.31.2)\n\n### Chores\n\n* **internal:** minor refactor of tests ([#1471](https://github.com/openai/openai-python/issues/1471)) ([b7f2298](https://github.com/openai/openai-python/commit/b7f229866f249d16e995db361b923bb4c0b7f1d4))\n\n## 1.31.1 (2024-06-05)\n\nFull Changelog: [v1.31.0...v1.31.1](https://github.com/openai/openai-python/compare/v1.31.0...v1.31.1)\n\n### Chores\n\n* **internal:** minor change to tests ([#1466](https://github.com/openai/openai-python/issues/1466)) ([cb33e71](https://github.com/openai/openai-python/commit/cb33e7152f25fb16cf4c39a6e4714169c62d6af8))\n\n## 1.31.0 (2024-06-03)\n\nFull Changelog: [v1.30.5...v1.31.0](https://github.com/openai/openai-python/compare/v1.30.5...v1.31.0)\n\n### Features\n\n* **api:** updates ([#1461](https://github.com/openai/openai-python/issues/1461)) ([0d7cc5e](https://github.com/openai/openai-python/commit/0d7cc5e48c565fe10ee6e8ca4d050175eb543bcb))\n\n\n### Chores\n\n* fix lint ([1886dd4](https://github.com/openai/openai-python/commit/1886dd4c98d7a7b3a679bff739cb38badf5ae96c))\n\n## 1.30.5 (2024-05-29)\n\nFull Changelog: [v1.30.4...v1.30.5](https://github.com/openai/openai-python/compare/v1.30.4...v1.30.5)\n\n### Chores\n\n* **internal:** fix lint issue ([35a1e80](https://github.com/openai/openai-python/commit/35a1e806891c34d5cc13ac8341751e5b15b52319))\n\n## 1.30.4 (2024-05-28)\n\nFull Changelog: [v1.30.3...v1.30.4](https://github.com/openai/openai-python/compare/v1.30.3...v1.30.4)\n\n### Chores\n\n* add missing __all__ definitions ([7fba60f](https://github.com/openai/openai-python/commit/7fba60f2e8adc26e83080aaf3e436eb9891e1253))\n* **internal:** fix lint issue ([f423cd0](https://github.com/openai/openai-python/commit/f423cd05d33b3e734eda7c0c008faac14ae96bb7))\n\n## 1.30.3 (2024-05-24)\n\nFull Changelog: [v1.30.2...v1.30.3](https://github.com/openai/openai-python/compare/v1.30.2...v1.30.3)\n\n### Chores\n\n* **ci:** update rye install location ([#1440](https://github.com/openai/openai-python/issues/1440)) ([8a0e5bf](https://github.com/openai/openai-python/commit/8a0e5bf4c03d9c714799fad43be68ac9c2b1f37a))\n* **internal:** bump pyright ([#1442](https://github.com/openai/openai-python/issues/1442)) ([64a151e](https://github.com/openai/openai-python/commit/64a151eae705d55484f870df461434c0a6961e2b))\n* **internal:** fix lint issue ([#1444](https://github.com/openai/openai-python/issues/1444)) ([b0eb458](https://github.com/openai/openai-python/commit/b0eb4582e050b0a25af3d80d2cb584bfc7cd11ab))\n\n\n### Documentation\n\n* **contributing:** update references to rye-up.com ([dcc34a2](https://github.com/openai/openai-python/commit/dcc34a26d1a6a0debf440724fad658c77547048c))\n\n## 1.30.2 (2024-05-23)\n\nFull Changelog: [v1.30.1...v1.30.2](https://github.com/openai/openai-python/compare/v1.30.1...v1.30.2)\n\n### Chores\n\n* **ci:** update rye install location ([#1436](https://github.com/openai/openai-python/issues/1436)) ([f7cc4e7](https://github.com/openai/openai-python/commit/f7cc4e7d5d0964a4a5d53e602379770c2576e1aa))\n\n## 1.30.1 (2024-05-14)\n\nFull Changelog: [v1.30.0...v1.30.1](https://github.com/openai/openai-python/compare/v1.30.0...v1.30.1)\n\n### Chores\n\n* **internal:** add slightly better logging to scripts ([#1422](https://github.com/openai/openai-python/issues/1422)) ([43dffab](https://github.com/openai/openai-python/commit/43dffabb3bed4edf8a6e523cbb289f733a5f9b24))\n\n## 1.30.0 (2024-05-14)\n\nFull Changelog: [v1.29.0...v1.30.0](https://github.com/openai/openai-python/compare/v1.29.0...v1.30.0)\n\n### Features\n\n* **api:** add incomplete state ([#1420](https://github.com/openai/openai-python/issues/1420)) ([6484984](https://github.com/openai/openai-python/commit/648498412d1c7740e6b67ed4d0a55b89ff29d3b1))\n\n## 1.29.0 (2024-05-13)\n\nFull Changelog: [v1.28.2...v1.29.0](https://github.com/openai/openai-python/compare/v1.28.2...v1.29.0)\n\n### Features\n\n* **api:** add gpt-4o model ([#1417](https://github.com/openai/openai-python/issues/1417)) ([4f09f8c](https://github.com/openai/openai-python/commit/4f09f8c6cc4450f5e61f158f1bd54c513063a1a8))\n\n## 1.28.2 (2024-05-13)\n\nFull Changelog: [v1.28.1...v1.28.2](https://github.com/openai/openai-python/compare/v1.28.1...v1.28.2)\n\n### Bug Fixes\n\n* **client:** accidental blocking sleep in async code ([#1415](https://github.com/openai/openai-python/issues/1415)) ([0ac6ecb](https://github.com/openai/openai-python/commit/0ac6ecb8d4e52f895bc3ae1f589f22ddaaef6204))\n\n\n### Chores\n\n* **internal:** bump pydantic dependency ([#1413](https://github.com/openai/openai-python/issues/1413)) ([ed73d1d](https://github.com/openai/openai-python/commit/ed73d1db540714e29a1ba30e3aa6429aae8b1dd8))\n\n## 1.28.1 (2024-05-11)\n\nFull Changelog: [v1.28.0...v1.28.1](https://github.com/openai/openai-python/compare/v1.28.0...v1.28.1)\n\n### Chores\n\n* **docs:** add SECURITY.md ([#1408](https://github.com/openai/openai-python/issues/1408)) ([119970a](https://github.com/openai/openai-python/commit/119970a31b67e88c623d50855290ccf3847c10eb))\n\n## 1.28.0 (2024-05-09)\n\nFull Changelog: [v1.27.0...v1.28.0](https://github.com/openai/openai-python/compare/v1.27.0...v1.28.0)\n\n### Features\n\n* **api:** add message image content ([#1405](https://github.com/openai/openai-python/issues/1405)) ([a115de6](https://github.com/openai/openai-python/commit/a115de60ce1ca503a7659bb9a19c18699d4d9bcb))\n\n## 1.27.0 (2024-05-08)\n\nFull Changelog: [v1.26.0...v1.27.0](https://github.com/openai/openai-python/compare/v1.26.0...v1.27.0)\n\n### Features\n\n* **api:** adding file purposes ([#1401](https://github.com/openai/openai-python/issues/1401)) ([2e9d0bd](https://github.com/openai/openai-python/commit/2e9d0bd0e4bf677ed9b21c6448e804313e026441))\n\n## 1.26.0 (2024-05-06)\n\nFull Changelog: [v1.25.2...v1.26.0](https://github.com/openai/openai-python/compare/v1.25.2...v1.26.0)\n\n### Features\n\n* **api:** add usage metadata when streaming ([#1395](https://github.com/openai/openai-python/issues/1395)) ([3cb064b](https://github.com/openai/openai-python/commit/3cb064b10d661dbcc74b6bc1ed7d8e635ab2876a))\n\n## 1.25.2 (2024-05-05)\n\nFull Changelog: [v1.25.1...v1.25.2](https://github.com/openai/openai-python/compare/v1.25.1...v1.25.2)\n\n### Documentation\n\n* **readme:** fix misleading timeout example value ([#1393](https://github.com/openai/openai-python/issues/1393)) ([3eba8e7](https://github.com/openai/openai-python/commit/3eba8e7573ec1bf4231a304c8eabc8a8d077f46d))\n\n## 1.25.1 (2024-05-02)\n\nFull Changelog: [v1.25.0...v1.25.1](https://github.com/openai/openai-python/compare/v1.25.0...v1.25.1)\n\n### Chores\n\n* **internal:** bump prism version ([#1390](https://github.com/openai/openai-python/issues/1390)) ([a5830fc](https://github.com/openai/openai-python/commit/a5830fc1c5ffd21e2010490905084ad5614212a3))\n\n## 1.25.0 (2024-05-01)\n\nFull Changelog: [v1.24.1...v1.25.0](https://github.com/openai/openai-python/compare/v1.24.1...v1.25.0)\n\n### Features\n\n* **api:** delete messages ([#1388](https://github.com/openai/openai-python/issues/1388)) ([d0597cd](https://github.com/openai/openai-python/commit/d0597cdc1813cddffacbaa50565e86d2420d1873))\n\n## 1.24.1 (2024-04-30)\n\nFull Changelog: [v1.24.0...v1.24.1](https://github.com/openai/openai-python/compare/v1.24.0...v1.24.1)\n\n### Chores\n\n* **internal:** add link to openapi spec ([#1385](https://github.com/openai/openai-python/issues/1385)) ([b315d04](https://github.com/openai/openai-python/commit/b315d04e9624ec3a841d7c51813bb553640c23ce))\n\n## 1.24.0 (2024-04-29)\n\nFull Changelog: [v1.23.6...v1.24.0](https://github.com/openai/openai-python/compare/v1.23.6...v1.24.0)\n\n### Features\n\n* **api:** add required tool_choice ([#1382](https://github.com/openai/openai-python/issues/1382)) ([c558f65](https://github.com/openai/openai-python/commit/c558f651df39f61425cd4109318f78ed94cbf163))\n\n\n### Chores\n\n* **client:** log response headers in debug mode ([#1383](https://github.com/openai/openai-python/issues/1383)) ([f31a426](https://github.com/openai/openai-python/commit/f31a4261adc4ebd92582cee264e41eb6a6dafc57))\n* **internal:** minor reformatting ([#1377](https://github.com/openai/openai-python/issues/1377)) ([7003dbb](https://github.com/openai/openai-python/commit/7003dbb863b6e16381070b8b86ac24aa070a3799))\n* **internal:** reformat imports ([#1375](https://github.com/openai/openai-python/issues/1375)) ([2ad0c3b](https://github.com/openai/openai-python/commit/2ad0c3b8e0b746ed20db3c84a9c6a369aa10bf5d))\n\n## 1.23.6 (2024-04-25)\n\nFull Changelog: [v1.23.5...v1.23.6](https://github.com/openai/openai-python/compare/v1.23.5...v1.23.6)\n\n### Chores\n\n* **internal:** update test helper function ([#1371](https://github.com/openai/openai-python/issues/1371)) ([6607c4a](https://github.com/openai/openai-python/commit/6607c4a491fd1912f9222d6fe464ccef6e865eac))\n\n## 1.23.5 (2024-04-24)\n\nFull Changelog: [v1.23.4...v1.23.5](https://github.com/openai/openai-python/compare/v1.23.4...v1.23.5)\n\n### Chores\n\n* **internal:** use actions/checkout@v4 for codeflow ([#1368](https://github.com/openai/openai-python/issues/1368)) ([d1edf8b](https://github.com/openai/openai-python/commit/d1edf8beb806ebaefdcc2cb6e39f99e1811a2668))\n\n## 1.23.4 (2024-04-24)\n\nFull Changelog: [v1.23.3...v1.23.4](https://github.com/openai/openai-python/compare/v1.23.3...v1.23.4)\n\n### Bug Fixes\n\n* **api:** change timestamps to unix integers ([#1367](https://github.com/openai/openai-python/issues/1367)) ([fbc0e15](https://github.com/openai/openai-python/commit/fbc0e15f422971bd15499d4ea5f42a1c885c7004))\n* **docs:** doc improvements ([#1364](https://github.com/openai/openai-python/issues/1364)) ([8c3a005](https://github.com/openai/openai-python/commit/8c3a005247ea045b9a95e7459eba2a90067daf71))\n\n\n### Chores\n\n* **tests:** rename test file ([#1366](https://github.com/openai/openai-python/issues/1366)) ([4204e63](https://github.com/openai/openai-python/commit/4204e63e27584c68ad27825261225603d7a87008))\n\n## 1.23.3 (2024-04-23)\n\nFull Changelog: [v1.23.2...v1.23.3](https://github.com/openai/openai-python/compare/v1.23.2...v1.23.3)\n\n### Chores\n\n* **internal:** restructure imports ([#1359](https://github.com/openai/openai-python/issues/1359)) ([4e5eb37](https://github.com/openai/openai-python/commit/4e5eb374ea0545a6117db657bb05f6417bc62d18))\n\n## 1.23.2 (2024-04-19)\n\nFull Changelog: [v1.23.1...v1.23.2](https://github.com/openai/openai-python/compare/v1.23.1...v1.23.2)\n\n### Bug Fixes\n\n* **api:** correct types for message attachment tools ([#1348](https://github.com/openai/openai-python/issues/1348)) ([78a6261](https://github.com/openai/openai-python/commit/78a6261eaad7839284903287d4f647d9cb4ced0b))\n\n## 1.23.1 (2024-04-18)\n\nFull Changelog: [v1.23.0...v1.23.1](https://github.com/openai/openai-python/compare/v1.23.0...v1.23.1)\n\n### Bug Fixes\n\n* **api:** correct types for attachments ([#1342](https://github.com/openai/openai-python/issues/1342)) ([542d30c](https://github.com/openai/openai-python/commit/542d30c6dad4e139bf3eb443936d42b7b42dad54))\n\n## 1.23.0 (2024-04-18)\n\nFull Changelog: [v1.22.0...v1.23.0](https://github.com/openai/openai-python/compare/v1.22.0...v1.23.0)\n\n### Features\n\n* **api:** add request id property to response classes ([#1341](https://github.com/openai/openai-python/issues/1341)) ([444d680](https://github.com/openai/openai-python/commit/444d680cbb3745adbc27788213ae3312567136a8))\n\n\n### Documentation\n\n* **helpers:** fix example snippets ([#1339](https://github.com/openai/openai-python/issues/1339)) ([8929088](https://github.com/openai/openai-python/commit/8929088b206a04b4c5b85fb69b0b983fb56f9b03))\n\n## 1.22.0 (2024-04-18)\n\nFull Changelog: [v1.21.2...v1.22.0](https://github.com/openai/openai-python/compare/v1.21.2...v1.22.0)\n\n### Features\n\n* **api:** batch list endpoint ([#1338](https://github.com/openai/openai-python/issues/1338)) ([a776f38](https://github.com/openai/openai-python/commit/a776f387e3159f9a8f4dcaa7d0d3b78c2a884f91))\n\n\n### Chores\n\n* **internal:** ban usage of lru_cache ([#1331](https://github.com/openai/openai-python/issues/1331)) ([8f9223b](https://github.com/openai/openai-python/commit/8f9223bfe13200c685fc97c25ada3015a69c6df7))\n* **internal:** bump pyright to 1.1.359 ([#1337](https://github.com/openai/openai-python/issues/1337)) ([feec0dd](https://github.com/openai/openai-python/commit/feec0dd1dd243941a279c3224c5ca1d727d76676))\n\n## 1.21.2 (2024-04-17)\n\nFull Changelog: [v1.21.1...v1.21.2](https://github.com/openai/openai-python/compare/v1.21.1...v1.21.2)\n\n### Chores\n\n* **internal:** add lru_cache helper function ([#1329](https://github.com/openai/openai-python/issues/1329)) ([cbeebfc](https://github.com/openai/openai-python/commit/cbeebfcca8bf1a3feb4462a79e10099bda5bed84))\n\n## 1.21.1 (2024-04-17)\n\nFull Changelog: [v1.21.0...v1.21.1](https://github.com/openai/openai-python/compare/v1.21.0...v1.21.1)\n\n### Chores\n\n* **api:** docs and response_format response property ([#1327](https://github.com/openai/openai-python/issues/1327)) ([7a6d142](https://github.com/openai/openai-python/commit/7a6d142f013994c4eb9a4f55888464c885f8baf0))\n\n## 1.21.0 (2024-04-17)\n\nFull Changelog: [v1.20.0...v1.21.0](https://github.com/openai/openai-python/compare/v1.20.0...v1.21.0)\n\n### Features\n\n* **api:** add vector stores ([#1325](https://github.com/openai/openai-python/issues/1325)) ([038a3c5](https://github.com/openai/openai-python/commit/038a3c50db7b6a88f54ff1cd1ff6cbaef2caf87f))\n\n## 1.20.0 (2024-04-16)\n\nFull Changelog: [v1.19.0...v1.20.0](https://github.com/openai/openai-python/compare/v1.19.0...v1.20.0)\n\n### Features\n\n* **client:** add header OpenAI-Project ([#1320](https://github.com/openai/openai-python/issues/1320)) ([0c489f1](https://github.com/openai/openai-python/commit/0c489f16a7d9e5ac753da87273b223893edefa69))\n* extract chat models to a named enum ([#1322](https://github.com/openai/openai-python/issues/1322)) ([1ccd9b6](https://github.com/openai/openai-python/commit/1ccd9b67322736a4714e58c953d59585322c527d))\n\n## 1.19.0 (2024-04-15)\n\nFull Changelog: [v1.18.0...v1.19.0](https://github.com/openai/openai-python/compare/v1.18.0...v1.19.0)\n\n### Features\n\n* **errors:** add request_id property ([#1317](https://github.com/openai/openai-python/issues/1317)) ([f9eb77d](https://github.com/openai/openai-python/commit/f9eb77dca422b9456f4e3b31c7474046235eec1d))\n\n## 1.18.0 (2024-04-15)\n\nFull Changelog: [v1.17.1...v1.18.0](https://github.com/openai/openai-python/compare/v1.17.1...v1.18.0)\n\n### Features\n\n* **api:** add batch API ([#1316](https://github.com/openai/openai-python/issues/1316)) ([3e6f19e](https://github.com/openai/openai-python/commit/3e6f19e6e7489bf1c94944a5f8f9b1d4535cdc43))\n* **api:** updates ([#1314](https://github.com/openai/openai-python/issues/1314)) ([8281dc9](https://github.com/openai/openai-python/commit/8281dc956178f5de345645660081f7d0c15a57a6))\n\n## 1.17.1 (2024-04-12)\n\nFull Changelog: [v1.17.0...v1.17.1](https://github.com/openai/openai-python/compare/v1.17.0...v1.17.1)\n\n### Chores\n\n* fix typo ([#1304](https://github.com/openai/openai-python/issues/1304)) ([1129082](https://github.com/openai/openai-python/commit/1129082955f98d76c0927781ef9e7d0beeda2ec4))\n* **internal:** formatting ([#1311](https://github.com/openai/openai-python/issues/1311)) ([8fd411b](https://github.com/openai/openai-python/commit/8fd411b48b6b1eafaab2dac26201525c1ee0b942))\n\n## 1.17.0 (2024-04-10)\n\nFull Changelog: [v1.16.2...v1.17.0](https://github.com/openai/openai-python/compare/v1.16.2...v1.17.0)\n\n### Features\n\n* **api:** add additional messages when creating thread run ([#1298](https://github.com/openai/openai-python/issues/1298)) ([70eb081](https://github.com/openai/openai-python/commit/70eb081804b14cc8c151ebd85458545a50a074fd))\n* **client:** add DefaultHttpxClient and DefaultAsyncHttpxClient ([#1302](https://github.com/openai/openai-python/issues/1302)) ([69cdfc3](https://github.com/openai/openai-python/commit/69cdfc319fff7ebf28cdd13cc6c1761b7d97811d))\n* **models:** add to_dict & to_json helper methods ([#1305](https://github.com/openai/openai-python/issues/1305)) ([40a881d](https://github.com/openai/openai-python/commit/40a881d10442af8b445ce030f8ab338710e1c4c8))\n\n## 1.16.2 (2024-04-04)\n\nFull Changelog: [v1.16.1...v1.16.2](https://github.com/openai/openai-python/compare/v1.16.1...v1.16.2)\n\n### Bug Fixes\n\n* **client:** correct logic for line decoding in streaming ([#1293](https://github.com/openai/openai-python/issues/1293)) ([687caef](https://github.com/openai/openai-python/commit/687caefa4acf615bf404f16817bfd9a6f285ee5c))\n\n## 1.16.1 (2024-04-02)\n\nFull Changelog: [v1.16.0...v1.16.1](https://github.com/openai/openai-python/compare/v1.16.0...v1.16.1)\n\n### Chores\n\n* **internal:** defer model build for import latency ([#1291](https://github.com/openai/openai-python/issues/1291)) ([bc6866e](https://github.com/openai/openai-python/commit/bc6866eb2335d01532190d0906cad7bf9af28621))\n\n## 1.16.0 (2024-04-01)\n\nFull Changelog: [v1.15.0...v1.16.0](https://github.com/openai/openai-python/compare/v1.15.0...v1.16.0)\n\n### Features\n\n* **api:** add support for filtering messages by run_id ([#1288](https://github.com/openai/openai-python/issues/1288)) ([58d6b77](https://github.com/openai/openai-python/commit/58d6b773218ef1dd8dc6208124a16078e4ac11c1))\n* **api:** run polling helpers ([#1289](https://github.com/openai/openai-python/issues/1289)) ([6b427f3](https://github.com/openai/openai-python/commit/6b427f38610847bce3ce5334177f07917bd7c187))\n\n\n### Chores\n\n* **client:** validate that max_retries is not None ([#1286](https://github.com/openai/openai-python/issues/1286)) ([aa5920a](https://github.com/openai/openai-python/commit/aa5920af6131c49a44352524154ee4a1684e76b2))\n\n\n### Refactors\n\n* rename createAndStream to stream ([6b427f3](https://github.com/openai/openai-python/commit/6b427f38610847bce3ce5334177f07917bd7c187))\n\n## 1.15.0 (2024-03-31)\n\nFull Changelog: [v1.14.3...v1.15.0](https://github.com/openai/openai-python/compare/v1.14.3...v1.15.0)\n\n### Features\n\n* **api:** adding temperature parameter ([#1282](https://github.com/openai/openai-python/issues/1282)) ([0e68fd3](https://github.com/openai/openai-python/commit/0e68fd3690155785d1fb0ee9a8604f51e6701b1d))\n* **client:** increase default HTTP max_connections to 1000 and max_keepalive_connections to 100 ([#1281](https://github.com/openai/openai-python/issues/1281)) ([340d139](https://github.com/openai/openai-python/commit/340d1391e3071a265ed12c0a8d70d4d73a860bd8))\n* **package:** export default constants ([#1275](https://github.com/openai/openai-python/issues/1275)) ([fdc126e](https://github.com/openai/openai-python/commit/fdc126e428320f1bed5eabd3eed229f08ab9effa))\n\n\n### Bug Fixes\n\n* **project:** use absolute github links on PyPi ([#1280](https://github.com/openai/openai-python/issues/1280)) ([94cd528](https://github.com/openai/openai-python/commit/94cd52837650e5b7e115119d69e6b1c7ba1f6bf1))\n\n\n### Chores\n\n* **internal:** bump dependencies ([#1273](https://github.com/openai/openai-python/issues/1273)) ([18dcd65](https://github.com/openai/openai-python/commit/18dcd654d9f54628b5fe21a499d1fef500e15f7f))\n\n\n### Documentation\n\n* **readme:** change undocumented params wording ([#1284](https://github.com/openai/openai-python/issues/1284)) ([7498ef1](https://github.com/openai/openai-python/commit/7498ef1e9568200086ba3efb99ea100feb05e3f0))\n\n## 1.14.3 (2024-03-25)\n\nFull Changelog: [v1.14.2...v1.14.3](https://github.com/openai/openai-python/compare/v1.14.2...v1.14.3)\n\n### Bug Fixes\n\n* revert regression with 3.7 support ([#1269](https://github.com/openai/openai-python/issues/1269)) ([37aed56](https://github.com/openai/openai-python/commit/37aed564143dc7281f1eaa6ab64ec5ca334cf25e))\n\n\n### Chores\n\n* **internal:** construct error properties instead of using the raw response ([#1257](https://github.com/openai/openai-python/issues/1257)) ([11dce5c](https://github.com/openai/openai-python/commit/11dce5c66395722b245f5d5461ce379ca7b939e4))\n* **internal:** formatting change ([#1258](https://github.com/openai/openai-python/issues/1258)) ([b907dd7](https://github.com/openai/openai-python/commit/b907dd7dcae895e4209559da061d0991a8d640a6))\n* **internal:** loosen input type for util function ([#1250](https://github.com/openai/openai-python/issues/1250)) ([fc8b4c3](https://github.com/openai/openai-python/commit/fc8b4c37dc91dfcc0535c19236092992171784a0))\n\n\n### Documentation\n\n* **contributing:** fix typo ([#1264](https://github.com/openai/openai-python/issues/1264)) ([835cb9b](https://github.com/openai/openai-python/commit/835cb9b2f92e2aa3329545b4677865dcd4fd00f0))\n* **readme:** consistent use of sentence case in headings ([#1255](https://github.com/openai/openai-python/issues/1255)) ([519f371](https://github.com/openai/openai-python/commit/519f371af779b5fa353292ff5a2d3332afe0987e))\n* **readme:** document how to make undocumented requests ([#1256](https://github.com/openai/openai-python/issues/1256)) ([5887858](https://github.com/openai/openai-python/commit/5887858a7b649dfde5b733ef01e5cffcf953b2a7))\n\n## 1.14.2 (2024-03-19)\n\nFull Changelog: [v1.14.1...v1.14.2](https://github.com/openai/openai-python/compare/v1.14.1...v1.14.2)\n\n### Performance Improvements\n\n* cache TypeAdapters ([#1114](https://github.com/openai/openai-python/issues/1114)) ([41b6fee](https://github.com/openai/openai-python/commit/41b6feec70d3f203e36ba9a92205389bafce930c))\n* cache TypeAdapters ([#1243](https://github.com/openai/openai-python/issues/1243)) ([2005076](https://github.com/openai/openai-python/commit/2005076f500bef6e0a6cc8f935b9cc9fef65ab5b))\n\n\n### Chores\n\n* **internal:** update generated pragma comment ([#1247](https://github.com/openai/openai-python/issues/1247)) ([3eeb9b3](https://github.com/openai/openai-python/commit/3eeb9b3a71e01c2593be443a97a353371466d01a))\n\n\n### Documentation\n\n* assistant improvements ([#1249](https://github.com/openai/openai-python/issues/1249)) ([e7a3176](https://github.com/openai/openai-python/commit/e7a3176b7606822bd5ad8f7fece87de6aad1e5b6))\n* fix typo in CONTRIBUTING.md ([#1245](https://github.com/openai/openai-python/issues/1245)) ([adef57a](https://github.com/openai/openai-python/commit/adef57ae5c71734873ba49bccd92fa7f28068d28))\n\n## 1.14.1 (2024-03-15)\n\nFull Changelog: [v1.14.0...v1.14.1](https://github.com/openai/openai-python/compare/v1.14.0...v1.14.1)\n\n### Documentation\n\n* **readme:** assistant streaming ([#1238](https://github.com/openai/openai-python/issues/1238)) ([0fc30a2](https://github.com/openai/openai-python/commit/0fc30a23030b4ff60f27cd2f472517926ed0f300))\n\n## 1.14.0 (2024-03-13)\n\nFull Changelog: [v1.13.4...v1.14.0](https://github.com/openai/openai-python/compare/v1.13.4...v1.14.0)\n\n### Features\n\n* **assistants:** add support for streaming ([#1233](https://github.com/openai/openai-python/issues/1233)) ([17635dc](https://github.com/openai/openai-python/commit/17635dccbeddf153f8201dbca18b44e16a1799b2))\n\n## 1.13.4 (2024-03-13)\n\nFull Changelog: [v1.13.3...v1.13.4](https://github.com/openai/openai-python/compare/v1.13.3...v1.13.4)\n\n### Bug Fixes\n\n* **streaming:** improve error messages ([#1218](https://github.com/openai/openai-python/issues/1218)) ([4f5ff29](https://github.com/openai/openai-python/commit/4f5ff298601b5a8bfbf0a9d0c0d1329d1502a205))\n\n\n### Chores\n\n* **api:** update docs ([#1212](https://github.com/openai/openai-python/issues/1212)) ([71236e0](https://github.com/openai/openai-python/commit/71236e0de4012a249af4c1ffd95973a8ba4fa61f))\n* **client:** improve error message for invalid http_client argument ([#1216](https://github.com/openai/openai-python/issues/1216)) ([d0c928a](https://github.com/openai/openai-python/commit/d0c928abbd99020fe828350f3adfd10c638a2eed))\n* **docs:** mention install from git repo ([#1203](https://github.com/openai/openai-python/issues/1203)) ([3ab6f44](https://github.com/openai/openai-python/commit/3ab6f447ffd8d2394e58416e401e545a99ec85af))\n* export NOT_GIVEN sentinel value ([#1223](https://github.com/openai/openai-python/issues/1223)) ([8a4f76f](https://github.com/openai/openai-python/commit/8a4f76f992c66f20cd6aa070c8dc4839e4cf9f3c))\n* **internal:** add core support for deserializing into number response ([#1219](https://github.com/openai/openai-python/issues/1219)) ([004bc92](https://github.com/openai/openai-python/commit/004bc924ea579852b9266ca11aea93463cf75104))\n* **internal:** bump pyright ([#1221](https://github.com/openai/openai-python/issues/1221)) ([3c2e815](https://github.com/openai/openai-python/commit/3c2e815311ace4ff81ccd446b23ff50a4e099485))\n* **internal:** improve deserialisation of discriminated unions ([#1227](https://github.com/openai/openai-python/issues/1227)) ([4767259](https://github.com/openai/openai-python/commit/4767259d25ac135550b37b15e4c0497e5ff0330d))\n* **internal:** minor core client restructuring ([#1199](https://github.com/openai/openai-python/issues/1199)) ([4314cdc](https://github.com/openai/openai-python/commit/4314cdcd522537e6cbbd87206d5bb236f672ce05))\n* **internal:** split up transforms into sync / async ([#1210](https://github.com/openai/openai-python/issues/1210)) ([7853a83](https://github.com/openai/openai-python/commit/7853a8358864957cc183581bdf7c03810a7b2756))\n* **internal:** support more input types ([#1211](https://github.com/openai/openai-python/issues/1211)) ([d0e4baa](https://github.com/openai/openai-python/commit/d0e4baa40d32c2da0ce5ceef8e0c7193b98f2b5a))\n* **internal:** support parsing Annotated types ([#1222](https://github.com/openai/openai-python/issues/1222)) ([8598f81](https://github.com/openai/openai-python/commit/8598f81841eeab0ab00eb21fdec7e8756ffde909))\n* **types:** include discriminators in unions ([#1228](https://github.com/openai/openai-python/issues/1228)) ([3ba0dcc](https://github.com/openai/openai-python/commit/3ba0dcc19a2af0ef869c77da2805278f71ee96c2))\n\n\n### Documentation\n\n* **contributing:** improve wording ([#1201](https://github.com/openai/openai-python/issues/1201)) ([95a1e0e](https://github.com/openai/openai-python/commit/95a1e0ea8e5446c413606847ebf9e35afbc62bf9))\n\n## 1.13.3 (2024-02-28)\n\nFull Changelog: [v1.13.2...v1.13.3](https://github.com/openai/openai-python/compare/v1.13.2...v1.13.3)\n\n### Features\n\n* **api:** add wav and pcm to response_format ([#1189](https://github.com/openai/openai-python/issues/1189)) ([dbd20fc](https://github.com/openai/openai-python/commit/dbd20fc42e93358261f71b9aa0e5f955053c3825))\n\n\n### Chores\n\n* **client:** use anyio.sleep instead of asyncio.sleep ([#1198](https://github.com/openai/openai-python/issues/1198)) ([b6d025b](https://github.com/openai/openai-python/commit/b6d025b54f091e79f5d4a0a8923f29574fd66027))\n* **internal:** bump pyright ([#1193](https://github.com/openai/openai-python/issues/1193)) ([9202e04](https://github.com/openai/openai-python/commit/9202e04d07a7c47232f39196346c734869b8f55a))\n* **types:** extract run status to a named type ([#1178](https://github.com/openai/openai-python/issues/1178)) ([249ecbd](https://github.com/openai/openai-python/commit/249ecbdeb6566a385ec46dfd5000b4eaa03965f0))\n\n\n### Documentation\n\n* add note in azure_deployment docstring ([#1188](https://github.com/openai/openai-python/issues/1188)) ([96fa995](https://github.com/openai/openai-python/commit/96fa99572dd76ee708f2bae04d11b659cdd698b2))\n* **examples:** add pyaudio streaming example ([#1194](https://github.com/openai/openai-python/issues/1194)) ([3683c5e](https://github.com/openai/openai-python/commit/3683c5e3c7f07e4b789a0c4cc417b2c59539cae2))\n\n## 1.13.2 (2024-02-20)\n\nFull Changelog: [v1.13.1...v1.13.2](https://github.com/openai/openai-python/compare/v1.13.1...v1.13.2)\n\n### Bug Fixes\n\n* **ci:** revert \"move github release logic to github app\" ([#1170](https://github.com/openai/openai-python/issues/1170)) ([f1adc2e](https://github.com/openai/openai-python/commit/f1adc2e6f2f29acb4404e84137a9d3109714c585))\n\n## 1.13.1 (2024-02-20)\n\nFull Changelog: [v1.13.0...v1.13.1](https://github.com/openai/openai-python/compare/v1.13.0...v1.13.1)\n\n### Chores\n\n* **internal:** bump rye to v0.24.0 ([#1168](https://github.com/openai/openai-python/issues/1168)) ([84c4256](https://github.com/openai/openai-python/commit/84c4256316f2a79068ecadb852e5e69b6b104a1f))\n\n## 1.13.0 (2024-02-19)\n\nFull Changelog: [v1.12.0...v1.13.0](https://github.com/openai/openai-python/compare/v1.12.0...v1.13.0)\n\n### Features\n\n* **api:** updates ([#1146](https://github.com/openai/openai-python/issues/1146)) ([79b7675](https://github.com/openai/openai-python/commit/79b7675e51fb7d269a6ea281a568bc7812ba2ace))\n\n\n### Bug Fixes\n\n* **api:** remove non-GA instance_id param ([#1164](https://github.com/openai/openai-python/issues/1164)) ([1abe139](https://github.com/openai/openai-python/commit/1abe139b1a5f5cc41263738fc12856056dce5697))\n\n\n### Chores\n\n* **ci:** move github release logic to github app ([#1155](https://github.com/openai/openai-python/issues/1155)) ([67cfac2](https://github.com/openai/openai-python/commit/67cfac2564dfb718da0465e34b90ac6928fa962a))\n* **client:** use correct accept headers for binary data ([#1161](https://github.com/openai/openai-python/issues/1161)) ([e536437](https://github.com/openai/openai-python/commit/e536437ae0b2cb0ddf2d74618722005d37403f32))\n* **internal:** refactor release environment script ([#1158](https://github.com/openai/openai-python/issues/1158)) ([7fe8ec3](https://github.com/openai/openai-python/commit/7fe8ec3bf04ecf85e3bd5adf0d9992c051f87b81))\n\n## 1.12.0 (2024-02-08)\n\nFull Changelog: [v1.11.1...v1.12.0](https://github.com/openai/openai-python/compare/v1.11.1...v1.12.0)\n\n### Features\n\n* **api:** add `timestamp_granularities`, add `gpt-3.5-turbo-0125` model ([#1125](https://github.com/openai/openai-python/issues/1125)) ([1ecf8f6](https://github.com/openai/openai-python/commit/1ecf8f6b12323ed09fb6a2815c85b9533ee52a50))\n* **cli/images:** add support for `--model` arg ([#1132](https://github.com/openai/openai-python/issues/1132)) ([0d53866](https://github.com/openai/openai-python/commit/0d5386615cda7cd50d5db90de2119b84dba29519))\n\n\n### Bug Fixes\n\n* remove double brackets from timestamp_granularities param ([#1140](https://github.com/openai/openai-python/issues/1140)) ([3db0222](https://github.com/openai/openai-python/commit/3db022216a81fa86470b53ec1246669bc7b17897))\n* **types:** loosen most List params types to Iterable ([#1129](https://github.com/openai/openai-python/issues/1129)) ([bdb31a3](https://github.com/openai/openai-python/commit/bdb31a3b1db6ede4e02b3c951c4fd23f70260038))\n\n\n### Chores\n\n* **internal:** add lint command ([#1128](https://github.com/openai/openai-python/issues/1128)) ([4c021c0](https://github.com/openai/openai-python/commit/4c021c0ab0151c2ec092d860c9b60e22e658cd03))\n* **internal:** support serialising iterable types ([#1127](https://github.com/openai/openai-python/issues/1127)) ([98d4e59](https://github.com/openai/openai-python/commit/98d4e59afcf2d65d4e660d91eb9462240ef5cd63))\n\n\n### Documentation\n\n* add CONTRIBUTING.md ([#1138](https://github.com/openai/openai-python/issues/1138)) ([79c8f0e](https://github.com/openai/openai-python/commit/79c8f0e8bf5470e2e31e781e8d279331e89ddfbe))\n\n## 1.11.1 (2024-02-04)\n\nFull Changelog: [v1.11.0...v1.11.1](https://github.com/openai/openai-python/compare/v1.11.0...v1.11.1)\n\n### Bug Fixes\n\n* prevent crash when platform.architecture() is not allowed ([#1120](https://github.com/openai/openai-python/issues/1120)) ([9490554](https://github.com/openai/openai-python/commit/949055488488e93597cbc6c2cdd81f14f203e53b))\n\n## 1.11.0 (2024-02-03)\n\nFull Changelog: [v1.10.0...v1.11.0](https://github.com/openai/openai-python/compare/v1.10.0...v1.11.0)\n\n### Features\n\n* **client:** support parsing custom response types ([#1111](https://github.com/openai/openai-python/issues/1111)) ([da00fc3](https://github.com/openai/openai-python/commit/da00fc3f8e0ff13c6c3ca970e4bb86846304bd06))\n\n\n### Chores\n\n* **interal:** make link to api.md relative ([#1117](https://github.com/openai/openai-python/issues/1117)) ([4a10879](https://github.com/openai/openai-python/commit/4a108797e46293357601ce933e21b557a5dc6954))\n* **internal:** cast type in mocked test ([#1112](https://github.com/openai/openai-python/issues/1112)) ([99b21e1](https://github.com/openai/openai-python/commit/99b21e1fc681eb10e01d479cc043ad3c89272b1c))\n* **internal:** enable ruff type checking misuse lint rule ([#1106](https://github.com/openai/openai-python/issues/1106)) ([fa63e60](https://github.com/openai/openai-python/commit/fa63e605c82ec78f4fc27469c434b421a08fb909))\n* **internal:** support multipart data with overlapping keys ([#1104](https://github.com/openai/openai-python/issues/1104)) ([455bc9f](https://github.com/openai/openai-python/commit/455bc9f1fd018a32cd604eb4b400e05aa8d71822))\n* **internal:** support pre-release versioning ([#1113](https://github.com/openai/openai-python/issues/1113)) ([dea5b08](https://github.com/openai/openai-python/commit/dea5b08c28d47b331fd44f6920cf9fe322b68e51))\n\n## 1.10.0 (2024-01-25)\n\nFull Changelog: [v1.9.0...v1.10.0](https://github.com/openai/openai-python/compare/v1.9.0...v1.10.0)\n\n### Features\n\n* **api:** add text embeddings dimensions param ([#1103](https://github.com/openai/openai-python/issues/1103)) ([94abfa0](https://github.com/openai/openai-python/commit/94abfa0f988c199ea95a9c870c4ae9808823186d))\n* **azure:** proactively add audio/speech to deployment endpoints ([#1099](https://github.com/openai/openai-python/issues/1099)) ([fdf8742](https://github.com/openai/openai-python/commit/fdf87429b45ceb47ae6fd068ab70cc07bcb8da44))\n* **client:** enable follow redirects by default ([#1100](https://github.com/openai/openai-python/issues/1100)) ([d325b7c](https://github.com/openai/openai-python/commit/d325b7ca594c2abaada536249b5633b106943333))\n\n\n### Chores\n\n* **internal:** add internal helpers ([#1092](https://github.com/openai/openai-python/issues/1092)) ([629bde5](https://github.com/openai/openai-python/commit/629bde5800d84735e22d924db23109a141f48644))\n\n\n### Refactors\n\n* remove unnecessary builtin import ([#1094](https://github.com/openai/openai-python/issues/1094)) ([504b7d4](https://github.com/openai/openai-python/commit/504b7d4a0b4715bd49a1a076a8d4868e51fb3351))\n\n## 1.9.0 (2024-01-21)\n\nFull Changelog: [v1.8.0...v1.9.0](https://github.com/openai/openai-python/compare/v1.8.0...v1.9.0)\n\n### Features\n\n* **api:** add usage to runs and run steps ([#1090](https://github.com/openai/openai-python/issues/1090)) ([6c116df](https://github.com/openai/openai-python/commit/6c116dfbb0065d15050450df70e0e98fc8c80349))\n\n\n### Chores\n\n* **internal:** fix typing util function ([#1083](https://github.com/openai/openai-python/issues/1083)) ([3e60db6](https://github.com/openai/openai-python/commit/3e60db69f5d9187c4eb38451967259f534a36a82))\n* **internal:** remove redundant client test ([#1085](https://github.com/openai/openai-python/issues/1085)) ([947974f](https://github.com/openai/openai-python/commit/947974f5af726e252b7b12c863743e50f41b79d3))\n* **internal:** share client instances between all tests ([#1088](https://github.com/openai/openai-python/issues/1088)) ([05cd753](https://github.com/openai/openai-python/commit/05cd7531d40774d05c52b14dee54d137ac1452a3))\n* **internal:** speculative retry-after-ms support ([#1086](https://github.com/openai/openai-python/issues/1086)) ([36a7576](https://github.com/openai/openai-python/commit/36a7576a913be8509a3cf6f262543083b485136e))\n* lazy load raw resource class properties ([#1087](https://github.com/openai/openai-python/issues/1087)) ([d307127](https://github.com/openai/openai-python/commit/d30712744be07461e86763705c03c3495eadfc35))\n\n## 1.8.0 (2024-01-16)\n\nFull Changelog: [v1.7.2...v1.8.0](https://github.com/openai/openai-python/compare/v1.7.2...v1.8.0)\n\n### Features\n\n* **client:** add support for streaming raw responses ([#1072](https://github.com/openai/openai-python/issues/1072)) ([0e93c3b](https://github.com/openai/openai-python/commit/0e93c3b5bc9cfa041e91962fd82c0d9358125024))\n\n\n### Bug Fixes\n\n* **client:** ensure path params are non-empty ([#1075](https://github.com/openai/openai-python/issues/1075)) ([9a25149](https://github.com/openai/openai-python/commit/9a2514997c2ddccbec9df8be3773e83271f1dab8))\n* **proxy:** prevent recursion errors when debugging pycharm ([#1076](https://github.com/openai/openai-python/issues/1076)) ([3d78798](https://github.com/openai/openai-python/commit/3d787987cf7625b5b502cb0b63a37d55956eaf1d))\n\n\n### Chores\n\n* add write_to_file binary helper method ([#1077](https://github.com/openai/openai-python/issues/1077)) ([c622c6a](https://github.com/openai/openai-python/commit/c622c6aaf2ae7dc62bd6cdfc053204c5dc3293ac))\n\n## 1.7.2 (2024-01-12)\n\nFull Changelog: [v1.7.1...v1.7.2](https://github.com/openai/openai-python/compare/v1.7.1...v1.7.2)\n\n### Documentation\n\n* **readme:** improve api reference ([#1065](https://github.com/openai/openai-python/issues/1065)) ([745b9e0](https://github.com/openai/openai-python/commit/745b9e08ae0abb8bf4cd87ed40fa450d9ad81ede))\n\n\n### Refactors\n\n* **api:** remove deprecated endpoints ([#1067](https://github.com/openai/openai-python/issues/1067)) ([199ddcd](https://github.com/openai/openai-python/commit/199ddcdca00c136e4e0c3ff16521eff22acf2a1a))\n\n## 1.7.1 (2024-01-10)\n\nFull Changelog: [v1.7.0...v1.7.1](https://github.com/openai/openai-python/compare/v1.7.0...v1.7.1)\n\n### Chores\n\n* **client:** improve debug logging for failed requests ([#1060](https://github.com/openai/openai-python/issues/1060)) ([cf9a651](https://github.com/openai/openai-python/commit/cf9a6517b4aa0f24bcbe143c54ea908d43dfda92))\n\n## 1.7.0 (2024-01-08)\n\nFull Changelog: [v1.6.1...v1.7.0](https://github.com/openai/openai-python/compare/v1.6.1...v1.7.0)\n\n### Features\n\n* add `None` default value to nullable response properties ([#1043](https://github.com/openai/openai-python/issues/1043)) ([d94b4d3](https://github.com/openai/openai-python/commit/d94b4d3d0adcd1a49a1c25cc9730cef013a3e9c9))\n\n\n### Bug Fixes\n\n* **client:** correctly use custom http client auth ([#1028](https://github.com/openai/openai-python/issues/1028)) ([3d7d93e](https://github.com/openai/openai-python/commit/3d7d93e951eb7fe09cd9d94d10a62a020398c7f9))\n\n\n### Chores\n\n* add .keep files for examples and custom code directories ([#1057](https://github.com/openai/openai-python/issues/1057)) ([7524097](https://github.com/openai/openai-python/commit/7524097a47af0fdc8b560186ef3b111b59430741))\n* **internal:** bump license ([#1037](https://github.com/openai/openai-python/issues/1037)) ([d828527](https://github.com/openai/openai-python/commit/d828527540ebd97679075f48744818f06311b0cb))\n* **internal:** loosen type var restrictions ([#1049](https://github.com/openai/openai-python/issues/1049)) ([e00876b](https://github.com/openai/openai-python/commit/e00876b20b93038450eb317899d8775c7661b8eb))\n* **internal:** replace isort with ruff ([#1042](https://github.com/openai/openai-python/issues/1042)) ([f1fbc9c](https://github.com/openai/openai-python/commit/f1fbc9c0d62e7d89ab32c8bdfa39cd94b560690b))\n* **internal:** update formatting ([#1041](https://github.com/openai/openai-python/issues/1041)) ([2e9ecee](https://github.com/openai/openai-python/commit/2e9ecee9bdfa8ec33b1b1527d5187483b700fad3))\n* **src:** fix typos ([#988](https://github.com/openai/openai-python/issues/988)) ([6a8b806](https://github.com/openai/openai-python/commit/6a8b80624636f9a0e5ada151b2509710a6f74808))\n* use property declarations for resource members ([#1047](https://github.com/openai/openai-python/issues/1047)) ([131f6bc](https://github.com/openai/openai-python/commit/131f6bc6b0ccf79119096057079e10906b3d4678))\n\n\n### Documentation\n\n* fix docstring typos ([#1022](https://github.com/openai/openai-python/issues/1022)) ([ad3fd2c](https://github.com/openai/openai-python/commit/ad3fd2cd19bf91f94473e368554dff39a8f9ad16))\n* improve audio example to show how to stream to a file ([#1017](https://github.com/openai/openai-python/issues/1017)) ([d45ed7f](https://github.com/openai/openai-python/commit/d45ed7f0513b167555ae875f1877fa205c5790d2))\n\n## 1.6.1 (2023-12-22)\n\nFull Changelog: [v1.6.0...v1.6.1](https://github.com/openai/openai-python/compare/v1.6.0...v1.6.1)\n\n### Chores\n\n* **internal:** add bin script ([#1001](https://github.com/openai/openai-python/issues/1001)) ([99ffbda](https://github.com/openai/openai-python/commit/99ffbda279bf4c159511fb96b1d5bb688af25437))\n* **internal:** use ruff instead of black for formatting ([#1008](https://github.com/openai/openai-python/issues/1008)) ([ceaf9a0](https://github.com/openai/openai-python/commit/ceaf9a06fbd1a846756bb72cce50a69c8cc20bd3))\n\n## 1.6.0 (2023-12-19)\n\nFull Changelog: [v1.5.0...v1.6.0](https://github.com/openai/openai-python/compare/v1.5.0...v1.6.0)\n\n### Features\n\n* **api:** add additional instructions for runs ([#995](https://github.com/openai/openai-python/issues/995)) ([7bf9b75](https://github.com/openai/openai-python/commit/7bf9b75067905449e83e828c12eb384022cff6ca))\n\n\n### Chores\n\n* **cli:** fix typo in completions ([#985](https://github.com/openai/openai-python/issues/985)) ([d1e9e8f](https://github.com/openai/openai-python/commit/d1e9e8f24df366bb7b796c55a98247c025d229f5))\n* **cli:** fix typo in completions ([#986](https://github.com/openai/openai-python/issues/986)) ([626bc34](https://github.com/openai/openai-python/commit/626bc34d82a7057bac99f8b556f9e5f60c261ee7))\n* **internal:** fix binary response tests ([#983](https://github.com/openai/openai-python/issues/983)) ([cfb7e30](https://github.com/openai/openai-python/commit/cfb7e308393f2e912e959dd10d68096dd5b3ab9c))\n* **internal:** fix typos ([#993](https://github.com/openai/openai-python/issues/993)) ([3b338a4](https://github.com/openai/openai-python/commit/3b338a401b206618774291ff8137deb0cc5f6b4c))\n* **internal:** minor utils restructuring ([#992](https://github.com/openai/openai-python/issues/992)) ([5ba576a](https://github.com/openai/openai-python/commit/5ba576ae38d2c4c4d32a21933e0d68e0bc2f0d49))\n* **package:** bump minimum typing-extensions to 4.7 ([#994](https://github.com/openai/openai-python/issues/994)) ([0c2da84](https://github.com/openai/openai-python/commit/0c2da84badf416f8b2213983f68bd2b6f9e52f2b))\n* **streaming:** update constructor to use direct client names ([#991](https://github.com/openai/openai-python/issues/991)) ([6c3427d](https://github.com/openai/openai-python/commit/6c3427dac8c414658516aeb4caf5d5fd8b11097b))\n\n\n### Documentation\n\n* upgrade models in examples to latest version ([#989](https://github.com/openai/openai-python/issues/989)) ([cedd574](https://github.com/openai/openai-python/commit/cedd574e5611f3e71e92b523a72ba87bcfe546f1))\n\n## 1.5.0 (2023-12-17)\n\nFull Changelog: [v1.4.0...v1.5.0](https://github.com/openai/openai-python/compare/v1.4.0...v1.5.0)\n\n### Features\n\n* **api:** add token logprobs to chat completions ([#980](https://github.com/openai/openai-python/issues/980)) ([f50e962](https://github.com/openai/openai-python/commit/f50e962b930bd682a4299143b2995337e8571273))\n\n\n### Chores\n\n* **ci:** run release workflow once per day ([#978](https://github.com/openai/openai-python/issues/978)) ([215476a](https://github.com/openai/openai-python/commit/215476a0b99e0c92ab3e44ddd25de207af32d160))\n\n## 1.4.0 (2023-12-15)\n\nFull Changelog: [v1.3.9...v1.4.0](https://github.com/openai/openai-python/compare/v1.3.9...v1.4.0)\n\n### Features\n\n* **api:** add optional `name` argument + improve docs ([#972](https://github.com/openai/openai-python/issues/972)) ([7972010](https://github.com/openai/openai-python/commit/7972010615820099f662c02821cfbd59e7d6ea44))\n\n## 1.3.9 (2023-12-12)\n\nFull Changelog: [v1.3.8...v1.3.9](https://github.com/openai/openai-python/compare/v1.3.8...v1.3.9)\n\n### Documentation\n\n* improve README timeout comment ([#964](https://github.com/openai/openai-python/issues/964)) ([3c3ed5e](https://github.com/openai/openai-python/commit/3c3ed5edd938a9333e8d2fa47cb4b44178eef89a))\n* small Improvement in the async chat response code ([#959](https://github.com/openai/openai-python/issues/959)) ([fb9d0a3](https://github.com/openai/openai-python/commit/fb9d0a358fa232043d9d5c149b6a888d50127c7b))\n* small streaming readme improvements ([#962](https://github.com/openai/openai-python/issues/962)) ([f3be2e5](https://github.com/openai/openai-python/commit/f3be2e5cc24988471e6cedb3e34bdfd3123edc63))\n\n\n### Refactors\n\n* **client:** simplify cleanup ([#966](https://github.com/openai/openai-python/issues/966)) ([5c138f4](https://github.com/openai/openai-python/commit/5c138f4a7947e5b4aae8779fae78ca51269b355a))\n* simplify internal error handling ([#968](https://github.com/openai/openai-python/issues/968)) ([d187f6b](https://github.com/openai/openai-python/commit/d187f6b6e4e646cca39c6ca35c618aa5c1bfbd61))\n\n## 1.3.8 (2023-12-08)\n\nFull Changelog: [v1.3.7...v1.3.8](https://github.com/openai/openai-python/compare/v1.3.7...v1.3.8)\n\n### Bug Fixes\n\n* avoid leaking memory when Client.with_options is used ([#956](https://github.com/openai/openai-python/issues/956)) ([e37ecca](https://github.com/openai/openai-python/commit/e37ecca04040ce946822a7e40f5604532a59ee85))\n* **errors:** properly assign APIError.body ([#949](https://github.com/openai/openai-python/issues/949)) ([c70e194](https://github.com/openai/openai-python/commit/c70e194f0a253409ec851607ae5219e3b5a8c442))\n* **pagination:** use correct type hint for .object ([#943](https://github.com/openai/openai-python/issues/943)) ([23fe7ee](https://github.com/openai/openai-python/commit/23fe7ee48a71539b0d1e95ceff349264aae4090e))\n\n\n### Chores\n\n* **internal:** enable more lint rules ([#945](https://github.com/openai/openai-python/issues/945)) ([2c8add6](https://github.com/openai/openai-python/commit/2c8add64a261dea731bd162bb0cca222518d5440))\n* **internal:** reformat imports ([#939](https://github.com/openai/openai-python/issues/939)) ([ec65124](https://github.com/openai/openai-python/commit/ec651249de2f4e4cf959f816e1b52f03d3b1017a))\n* **internal:** reformat imports ([#944](https://github.com/openai/openai-python/issues/944)) ([5290639](https://github.com/openai/openai-python/commit/52906391c9b6633656ec7934e6bbac553ec667cd))\n* **internal:** update formatting ([#941](https://github.com/openai/openai-python/issues/941)) ([8e5a156](https://github.com/openai/openai-python/commit/8e5a156d555fe68731ba0604a7455cc03cb451ce))\n* **package:** lift anyio v4 restriction ([#927](https://github.com/openai/openai-python/issues/927)) ([be0438a](https://github.com/openai/openai-python/commit/be0438a2e399bb0e0a94907229d02fc61ab479c0))\n\n\n### Documentation\n\n* fix typo in example ([#950](https://github.com/openai/openai-python/issues/950)) ([54f0ce0](https://github.com/openai/openai-python/commit/54f0ce0000abe32e97ae400f2975c028b8a84273))\n\n## 1.3.7 (2023-12-01)\n\nFull Changelog: [v1.3.6...v1.3.7](https://github.com/openai/openai-python/compare/v1.3.6...v1.3.7)\n\n### Bug Fixes\n\n* **client:** correct base_url setter implementation ([#919](https://github.com/openai/openai-python/issues/919)) ([135d9cf](https://github.com/openai/openai-python/commit/135d9cf2820f1524764bf536a9322830bdcd5875))\n* **client:** don't cause crashes when inspecting the module ([#897](https://github.com/openai/openai-python/issues/897)) ([db029a5](https://github.com/openai/openai-python/commit/db029a596c90b1af4ef0bfb1cdf31f54b2f5755d))\n* **client:** ensure retried requests are closed ([#902](https://github.com/openai/openai-python/issues/902)) ([e025e6b](https://github.com/openai/openai-python/commit/e025e6bee44ea145d948869ef0c79bac0c376b9f))\n\n\n### Chores\n\n* **internal:** add tests for proxy change ([#899](https://github.com/openai/openai-python/issues/899)) ([71a13d0](https://github.com/openai/openai-python/commit/71a13d0c70d105b2b97720c72a1003b942cda2ae))\n* **internal:** remove unused type var ([#915](https://github.com/openai/openai-python/issues/915)) ([4233bcd](https://github.com/openai/openai-python/commit/4233bcdae5f467f10454fcc008a6e728fa846830))\n* **internal:** replace string concatenation with f-strings ([#908](https://github.com/openai/openai-python/issues/908)) ([663a8f6](https://github.com/openai/openai-python/commit/663a8f6dead5aa523d1e8779e75af1dabb1690c4))\n* **internal:** replace string concatenation with f-strings ([#909](https://github.com/openai/openai-python/issues/909)) ([caab767](https://github.com/openai/openai-python/commit/caab767156375114078cf8d85031863361326b5f))\n\n\n### Documentation\n\n* fix typo in readme ([#904](https://github.com/openai/openai-python/issues/904)) ([472cd44](https://github.com/openai/openai-python/commit/472cd44e45a45b0b4f12583a5402e8aeb121d7a2))\n* **readme:** update example snippets ([#907](https://github.com/openai/openai-python/issues/907)) ([bbb648e](https://github.com/openai/openai-python/commit/bbb648ef81eb11f81b457e2cbf33a832f4d29a76))\n\n## 1.3.6 (2023-11-28)\n\nFull Changelog: [v1.3.5...v1.3.6](https://github.com/openai/openai-python/compare/v1.3.5...v1.3.6)\n\n### Bug Fixes\n\n* **client:** add support for streaming binary responses ([#866](https://github.com/openai/openai-python/issues/866)) ([2470d25](https://github.com/openai/openai-python/commit/2470d251b751e92e8950bc9e3026965e9925ac1c))\n\n\n### Chores\n\n* **deps:** bump mypy to v1.7.1 ([#891](https://github.com/openai/openai-python/issues/891)) ([11fcb2a](https://github.com/openai/openai-python/commit/11fcb2a3cd4205b307c13c65ad47d9e315b0084d))\n* **internal:** send more detailed x-stainless headers ([#877](https://github.com/openai/openai-python/issues/877)) ([69e0549](https://github.com/openai/openai-python/commit/69e054947d587ff2548b101ece690d21d3c38f74))\n* revert binary streaming change ([#875](https://github.com/openai/openai-python/issues/875)) ([0a06d6a](https://github.com/openai/openai-python/commit/0a06d6a078c5ee898dae75bab4988e1a1936bfbf))\n\n\n### Documentation\n\n* **readme:** minor updates ([#894](https://github.com/openai/openai-python/issues/894)) ([5458457](https://github.com/openai/openai-python/commit/54584572df4c2a086172d812c6acb84e3405328b))\n* **readme:** update examples ([#893](https://github.com/openai/openai-python/issues/893)) ([124da87](https://github.com/openai/openai-python/commit/124da8720c44d40c083d29179f46a265761c1f4f))\n* update readme code snippet ([#890](https://github.com/openai/openai-python/issues/890)) ([c522f21](https://github.com/openai/openai-python/commit/c522f21e2a685454185d57e462e74a28499460f9))\n\n## 1.3.5 (2023-11-21)\n\nFull Changelog: [v1.3.4...v1.3.5](https://github.com/openai/openai-python/compare/v1.3.4...v1.3.5)\n\n### Bug Fixes\n\n* **azure:** ensure custom options can be passed to copy ([#858](https://github.com/openai/openai-python/issues/858)) ([05ca0d6](https://github.com/openai/openai-python/commit/05ca0d68e84d40f975614d27cb52c0f382104377))\n\n\n### Chores\n\n* **package:** add license classifier ([#826](https://github.com/openai/openai-python/issues/826)) ([bec004d](https://github.com/openai/openai-python/commit/bec004d030b277e05bdd51f66fae1e881291c30b))\n* **package:** add license classifier metadata ([#860](https://github.com/openai/openai-python/issues/860)) ([80dffb1](https://github.com/openai/openai-python/commit/80dffb17ff0a10b0b9ea704c4247521e48b68408))\n\n## 1.3.4 (2023-11-21)\n\nFull Changelog: [v1.3.3...v1.3.4](https://github.com/openai/openai-python/compare/v1.3.3...v1.3.4)\n\n### Bug Fixes\n\n* **client:** attempt to parse unknown json content types ([#854](https://github.com/openai/openai-python/issues/854)) ([ba50466](https://github.com/openai/openai-python/commit/ba5046611029a67714d5120b9cc6a3c7fecce10c))\n\n\n### Chores\n\n* **examples:** fix static types in assistants example ([#852](https://github.com/openai/openai-python/issues/852)) ([5b47b2c](https://github.com/openai/openai-python/commit/5b47b2c542b9b4fb143af121022e2d5ad0890ef4))\n\n## 1.3.3 (2023-11-17)\n\nFull Changelog: [v1.3.2...v1.3.3](https://github.com/openai/openai-python/compare/v1.3.2...v1.3.3)\n\n### Chores\n\n* **internal:** update type hint for helper function ([#846](https://github.com/openai/openai-python/issues/846)) ([9a5966c](https://github.com/openai/openai-python/commit/9a5966c70fce620a183de580938556730564a405))\n\n## 1.3.2 (2023-11-16)\n\nFull Changelog: [v1.3.1...v1.3.2](https://github.com/openai/openai-python/compare/v1.3.1...v1.3.2)\n\n### Documentation\n\n* **readme:** minor updates ([#841](https://github.com/openai/openai-python/issues/841)) ([7273ad1](https://github.com/openai/openai-python/commit/7273ad1510043d3e264969c72403a1a237401910))\n\n## 1.3.1 (2023-11-16)\n\nFull Changelog: [v1.3.0...v1.3.1](https://github.com/openai/openai-python/compare/v1.3.0...v1.3.1)\n\n### Chores\n\n* **internal:** add publish script ([#838](https://github.com/openai/openai-python/issues/838)) ([3ea41bc](https://github.com/openai/openai-python/commit/3ea41bcede374c4e5c92d85108281637c3382e12))\n\n## 1.3.0 (2023-11-15)\n\nFull Changelog: [v1.2.4...v1.3.0](https://github.com/openai/openai-python/compare/v1.2.4...v1.3.0)\n\n### Features\n\n* **api:** add gpt-3.5-turbo-1106 ([#813](https://github.com/openai/openai-python/issues/813)) ([9bb3c4e](https://github.com/openai/openai-python/commit/9bb3c4ed88c890db2605a793aa39fffa1d84e8ef))\n* **client:** support reading the base url from an env variable ([#829](https://github.com/openai/openai-python/issues/829)) ([ca5fdc6](https://github.com/openai/openai-python/commit/ca5fdc6ca006a3550cc5eeea70dd3d96b9ba305a))\n\n\n### Bug Fixes\n\n* **breaking!:** correct broken type names in moderation categories  ([#811](https://github.com/openai/openai-python/issues/811)) ([0bc211f](https://github.com/openai/openai-python/commit/0bc211fd46f4fcc1f7687bdfdce26894b679cb4f))\n\n\n### Chores\n\n* fix typo in docs and add request header for function calls ([#807](https://github.com/openai/openai-python/issues/807)) ([cbef703](https://github.com/openai/openai-python/commit/cbef7030c7b21a0c766fe83c62657cea1cd8d31c))\n* **internal:** fix devcontainer interpeter path ([#810](https://github.com/openai/openai-python/issues/810)) ([0acc07d](https://github.com/openai/openai-python/commit/0acc07dd8281ba881f91689b8a5e4254e8743fbc))\n\n\n### Documentation\n\n* add azure env vars ([#814](https://github.com/openai/openai-python/issues/814)) ([bd8e32a](https://github.com/openai/openai-python/commit/bd8e32a380218d0c9ff43643ccc1a25b3c35120d))\n* fix code comment typo ([#790](https://github.com/openai/openai-python/issues/790)) ([8407a27](https://github.com/openai/openai-python/commit/8407a27e848ae611eb087c8d10632447d7c55498))\n* **readme:** fix broken azure_ad notebook link ([#781](https://github.com/openai/openai-python/issues/781)) ([3b92cdf](https://github.com/openai/openai-python/commit/3b92cdfa5490b50a72811bec2f6e54e070847961))\n\n## 1.2.4 (2023-11-13)\n\nFull Changelog: [v1.2.3...v1.2.4](https://github.com/openai/openai-python/compare/v1.2.3...v1.2.4)\n\n### Bug Fixes\n\n* **client:** retry if SSLWantReadError occurs in the async client ([#804](https://github.com/openai/openai-python/issues/804)) ([be82288](https://github.com/openai/openai-python/commit/be82288f3c88c10c9ac20ba3b8cb53b5c7a4e2f9))\n\n## 1.2.3 (2023-11-10)\n\nFull Changelog: [v1.2.2...v1.2.3](https://github.com/openai/openai-python/compare/v1.2.2...v1.2.3)\n\n### Bug Fixes\n\n* **cli/audio:** file format detection failing for whisper ([#733](https://github.com/openai/openai-python/issues/733)) ([01079d6](https://github.com/openai/openai-python/commit/01079d6dca13e0ec158dff81e0706d8a9d6c02ef))\n* **client:** correctly flush the stream response body ([#771](https://github.com/openai/openai-python/issues/771)) ([0d52731](https://github.com/openai/openai-python/commit/0d5273165c96286f8456ae04b9eb0de5144e52f8))\n* **client:** serialise pydantic v1 default fields correctly in params ([#776](https://github.com/openai/openai-python/issues/776)) ([d4c49ad](https://github.com/openai/openai-python/commit/d4c49ad2be9c0d926eece5fd33f6836279ea21e2))\n* **models:** mark unknown fields as set in pydantic v1 ([#772](https://github.com/openai/openai-python/issues/772)) ([ae032a1](https://github.com/openai/openai-python/commit/ae032a1ba4efa72284a572bfaf0305af50142835))\n* prevent IndexError in fine-tunes CLI ([#768](https://github.com/openai/openai-python/issues/768)) ([42f1633](https://github.com/openai/openai-python/commit/42f16332cf0f96f243f9797d6406283865254355))\n\n\n### Documentation\n\n* reword package description ([#764](https://github.com/openai/openai-python/issues/764)) ([9ff10df](https://github.com/openai/openai-python/commit/9ff10df30ca2d44978eb5f982ccf039c9f1bf1bf))\n\n## 1.2.2 (2023-11-09)\n\nFull Changelog: [v1.2.1...v1.2.2](https://github.com/openai/openai-python/compare/v1.2.1...v1.2.2)\n\n### Bug Fixes\n\n* **client:** correctly assign error properties ([#759](https://github.com/openai/openai-python/issues/759)) ([ef264d2](https://github.com/openai/openai-python/commit/ef264d2293b77784f69039291ca2a17a454851cb))\n\n\n### Documentation\n\n* **readme:** link to migration guide ([#761](https://github.com/openai/openai-python/issues/761)) ([ddde839](https://github.com/openai/openai-python/commit/ddde8392be19e7ad77280374806667ecaef612da))\n\n## 1.2.1 (2023-11-09)\n\nFull Changelog: [v1.2.0...v1.2.1](https://github.com/openai/openai-python/compare/v1.2.0...v1.2.1)\n\n### Documentation\n\n* **readme:** fix nested params example ([#756](https://github.com/openai/openai-python/issues/756)) ([ffbe5ec](https://github.com/openai/openai-python/commit/ffbe5eca0f8790ebcdb27ffe845da178a3ef4c45))\n\n\n### Refactors\n\n* **client:** deprecate files.retrieve_content in favour of files.content ([#753](https://github.com/openai/openai-python/issues/753)) ([eea5bc1](https://github.com/openai/openai-python/commit/eea5bc173466f63a6e84bd2d741b4873ca056b4c))\n\n## 1.2.0 (2023-11-08)\n\nFull Changelog: [v1.1.2...v1.2.0](https://github.com/openai/openai-python/compare/v1.1.2...v1.2.0)\n\n### Features\n\n* **api:** unify function types ([#741](https://github.com/openai/openai-python/issues/741)) ([ed16c4d](https://github.com/openai/openai-python/commit/ed16c4d2fec6cf4e33235d82b05ed9a777752204))\n* **client:** support passing chunk size for binary responses ([#747](https://github.com/openai/openai-python/issues/747)) ([c0c89b7](https://github.com/openai/openai-python/commit/c0c89b77a69ef098900e3a194894efcf72085d36))\n\n\n### Bug Fixes\n\n* **api:** update embedding response object type ([#739](https://github.com/openai/openai-python/issues/739)) ([29182c4](https://github.com/openai/openai-python/commit/29182c4818e2c56f46e961dba33e31dc30c25519))\n* **client:** show a helpful error message if the v0 API is used ([#743](https://github.com/openai/openai-python/issues/743)) ([920567c](https://github.com/openai/openai-python/commit/920567cb04df48a7f6cd2a3402a0b1f172c6290e))\n\n\n### Chores\n\n* **internal:** improve github devcontainer setup ([#737](https://github.com/openai/openai-python/issues/737)) ([0ac1abb](https://github.com/openai/openai-python/commit/0ac1abb07ec687a4f7b1150be10054dbd6e7cfbc))\n\n\n### Refactors\n\n* **api:** rename FunctionObject to FunctionDefinition ([#746](https://github.com/openai/openai-python/issues/746)) ([1afd138](https://github.com/openai/openai-python/commit/1afd13856c0e586ecbde8b24fe4f4bad9beeefdf))\n\n## 1.1.2 (2023-11-08)\n\nFull Changelog: [v1.1.1...v1.1.2](https://github.com/openai/openai-python/compare/v1.1.1...v1.1.2)\n\n### Bug Fixes\n\n* **api:** accidentally required params, add new models & other fixes ([#729](https://github.com/openai/openai-python/issues/729)) ([03c3e03](https://github.com/openai/openai-python/commit/03c3e03fc758cf4e59b81edf73a2618d80b560b7))\n* asssitant_deleted -&gt; assistant_deleted ([#711](https://github.com/openai/openai-python/issues/711)) ([287b51e](https://github.com/openai/openai-python/commit/287b51e4f7cede9667c118007de1275eb04772c6))\n\n\n### Chores\n\n* **docs:** fix github links ([#719](https://github.com/openai/openai-python/issues/719)) ([0cda8ca](https://github.com/openai/openai-python/commit/0cda8cab718d53d7dc0604d9fac52838c9391565))\n* **internal:** fix some typos ([#718](https://github.com/openai/openai-python/issues/718)) ([894ad87](https://github.com/openai/openai-python/commit/894ad874aaa5d74530f561896ff31f68693418da))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.484375,
          "content": "## Setting up the environment\n\n### With Rye\n\nWe use [Rye](https://rye.astral.sh/) to manage dependencies because it will automatically provision a Python environment with the expected Python version. To set it up, run:\n\n```sh\n$ ./scripts/bootstrap\n```\n\nOr [install Rye manually](https://rye.astral.sh/guide/installation/) and run:\n\n```sh\n$ rye sync --all-features\n```\n\nYou can then run scripts using `rye run python script.py` or by activating the virtual environment:\n\n```sh\n$ rye shell\n# or manually activate - https://docs.python.org/3/library/venv.html#how-venvs-work\n$ source .venv/bin/activate\n\n# now you can omit the `rye run` prefix\n$ python script.py\n```\n\n### Without Rye\n\nAlternatively if you don't want to install `Rye`, you can stick with the standard `pip` setup by ensuring you have the Python version specified in `.python-version`, create a virtual environment however you desire and then install dependencies using this command:\n\n```sh\n$ pip install -r requirements-dev.lock\n```\n\n## Modifying/Adding code\n\nMost of the SDK is generated code. Modifications to code will be persisted between generations, but may\nresult in merge conflicts between manual patches and changes from the generator. The generator will never\nmodify the contents of the `src/openai/lib/` and `examples/` directories.\n\n## Adding and running examples\n\nAll files in the `examples/` directory are not modified by the generator and can be freely edited or added to.\n\n```py\n# add an example to examples/<your-example>.py\n\n#!/usr/bin/env -S rye run python\n…\n```\n\n```sh\n$ chmod +x examples/<your-example>.py\n# run the example against your api\n$ ./examples/<your-example>.py\n```\n\n## Using the repository from source\n\nIf you’d like to use the repository from source, you can either install from git or link to a cloned repository:\n\nTo install via git:\n\n```sh\n$ pip install git+ssh://git@github.com/openai/openai-python.git\n```\n\nAlternatively, you can build from source and install the wheel file:\n\nBuilding this package will create two files in the `dist/` directory, a `.tar.gz` containing the source files and a `.whl` that can be used to install the package efficiently.\n\nTo create a distributable version of the library, all you have to do is run this command:\n\n```sh\n$ rye build\n# or\n$ python -m build\n```\n\nThen to install:\n\n```sh\n$ pip install ./path-to-wheel-file.whl\n```\n\n## Running tests\n\nMost tests require you to [set up a mock server](https://github.com/stoplightio/prism) against the OpenAPI spec to run the tests.\n\n```sh\n# you will need npm installed\n$ npx prism mock path/to/your/openapi.yml\n```\n\n```sh\n$ ./scripts/test\n```\n\n## Linting and formatting\n\nThis repository uses [ruff](https://github.com/astral-sh/ruff) and\n[black](https://github.com/psf/black) to format the code in the repository.\n\nTo lint:\n\n```sh\n$ ./scripts/lint\n```\n\nTo format and fix all ruff issues automatically:\n\n```sh\n$ ./scripts/format\n```\n\n## Publishing and releases\n\nChanges made to this repository via the automated release PR pipeline should publish to PyPI automatically. If\nthe changes aren't made through the automated pipeline, you may want to make releases manually.\n\n### Publish with a GitHub workflow\n\nYou can release to package managers by using [the `Publish PyPI` GitHub action](https://www.github.com/openai/openai-python/actions/workflows/publish-pypi.yml). This requires a setup organization or repository secret to be set up.\n\n### Publish manually\n\nIf you need to manually release a package, you can run the `bin/publish-pypi` script with a `PYPI_TOKEN` set on\nthe environment.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2025 OpenAI\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.7978515625,
          "content": "# OpenAI Python API library\n\n[![PyPI version](https://img.shields.io/pypi/v/openai.svg)](https://pypi.org/project/openai/)\n\nThe OpenAI Python library provides convenient access to the OpenAI REST API from any Python 3.8+\napplication. The library includes type definitions for all request params and response fields,\nand offers both synchronous and asynchronous clients powered by [httpx](https://github.com/encode/httpx).\n\nIt is generated from our [OpenAPI specification](https://github.com/openai/openai-openapi) with [Stainless](https://stainlessapi.com/).\n\n## Documentation\n\nThe REST API documentation can be found on [platform.openai.com](https://platform.openai.com/docs). The full API of this library can be found in [api.md](api.md).\n\n## Installation\n\n> [!IMPORTANT]\n> The SDK was rewritten in v1, which was released November 6th 2023. See the [v1 migration guide](https://github.com/openai/openai-python/discussions/742), which includes scripts to automatically update your code.\n\n```sh\n# install from PyPI\npip install openai\n```\n\n## Usage\n\nThe full API of this library can be found in [api.md](api.md).\n\n```python\nimport os\nfrom openai import OpenAI\n\nclient = OpenAI(\n    api_key=os.environ.get(\"OPENAI_API_KEY\"),  # This is the default and can be omitted\n)\n\nchat_completion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"Say this is a test\",\n        }\n    ],\n    model=\"gpt-4o\",\n)\n```\n\nWhile you can provide an `api_key` keyword argument,\nwe recommend using [python-dotenv](https://pypi.org/project/python-dotenv/)\nto add `OPENAI_API_KEY=\"My API Key\"` to your `.env` file\nso that your API Key is not stored in source control.\n\n### Vision\n\nWith a hosted image:\n\n```python\nresponse = client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\"type\": \"text\", \"text\": prompt},\n                {\n                    \"type\": \"image_url\",\n                    \"image_url\": {\"url\": f\"{img_url}\"},\n                },\n            ],\n        }\n    ],\n)\n```\n\nWith the image as a base64 encoded string:\n\n```python\nresponse = client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": [\n                {\"type\": \"text\", \"text\": prompt},\n                {\n                    \"type\": \"image_url\",\n                    \"image_url\": {\"url\": f\"data:{img_type};base64,{img_b64_str}\"},\n                },\n            ],\n        }\n    ],\n)\n```\n\n### Polling Helpers\n\nWhen interacting with the API some actions such as starting a Run and adding files to vector stores are asynchronous and take time to complete. The SDK includes\nhelper functions which will poll the status until it reaches a terminal state and then return the resulting object.\nIf an API method results in an action that could benefit from polling there will be a corresponding version of the\nmethod ending in '\\_and_poll'.\n\nFor instance to create a Run and poll until it reaches a terminal state you can run:\n\n```python\nrun = client.beta.threads.runs.create_and_poll(\n    thread_id=thread.id,\n    assistant_id=assistant.id,\n)\n```\n\nMore information on the lifecycle of a Run can be found in the [Run Lifecycle Documentation](https://platform.openai.com/docs/assistants/how-it-works/run-lifecycle)\n\n### Bulk Upload Helpers\n\nWhen creating and interacting with vector stores, you can use polling helpers to monitor the status of operations.\nFor convenience, we also provide a bulk upload helper to allow you to simultaneously upload several files at once.\n\n```python\nsample_files = [Path(\"sample-paper.pdf\"), ...]\n\nbatch = await client.vector_stores.file_batches.upload_and_poll(\n    store.id,\n    files=sample_files,\n)\n```\n\n### Streaming Helpers\n\nThe SDK also includes helpers to process streams and handle incoming events.\n\n```python\nwith client.beta.threads.runs.stream(\n    thread_id=thread.id,\n    assistant_id=assistant.id,\n    instructions=\"Please address the user as Jane Doe. The user has a premium account.\",\n) as stream:\n    for event in stream:\n        # Print the text from text delta events\n        if event.type == \"thread.message.delta\" and event.data.delta.content:\n            print(event.data.delta.content[0].text)\n```\n\nMore information on streaming helpers can be found in the dedicated documentation: [helpers.md](helpers.md)\n\n## Async usage\n\nSimply import `AsyncOpenAI` instead of `OpenAI` and use `await` with each API call:\n\n```python\nimport os\nimport asyncio\nfrom openai import AsyncOpenAI\n\nclient = AsyncOpenAI(\n    api_key=os.environ.get(\"OPENAI_API_KEY\"),  # This is the default and can be omitted\n)\n\n\nasync def main() -> None:\n    chat_completion = await client.chat.completions.create(\n        messages=[\n            {\n                \"role\": \"user\",\n                \"content\": \"Say this is a test\",\n            }\n        ],\n        model=\"gpt-4o\",\n    )\n\n\nasyncio.run(main())\n```\n\nFunctionality between the synchronous and asynchronous clients is otherwise identical.\n\n## Streaming responses\n\nWe provide support for streaming responses using Server Side Events (SSE).\n\n```python\nfrom openai import OpenAI\n\nclient = OpenAI()\n\nstream = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"Say this is a test\",\n        }\n    ],\n    model=\"gpt-4o\",\n    stream=True,\n)\nfor chunk in stream:\n    print(chunk.choices[0].delta.content or \"\", end=\"\")\n```\n\nThe async client uses the exact same interface.\n\n```python\nimport asyncio\nfrom openai import AsyncOpenAI\n\nclient = AsyncOpenAI()\n\n\nasync def main():\n    stream = await client.chat.completions.create(\n        model=\"gpt-4\",\n        messages=[{\"role\": \"user\", \"content\": \"Say this is a test\"}],\n        stream=True,\n    )\n    async for chunk in stream:\n        print(chunk.choices[0].delta.content or \"\", end=\"\")\n\n\nasyncio.run(main())\n```\n\n## Module-level client\n\n> [!IMPORTANT]\n> We highly recommend instantiating client instances instead of relying on the global client.\n\nWe also expose a global client instance that is accessible in a similar fashion to versions prior to v1.\n\n```py\nimport openai\n\n# optional; defaults to `os.environ['OPENAI_API_KEY']`\nopenai.api_key = '...'\n\n# all client options can be configured just like the `OpenAI` instantiation counterpart\nopenai.base_url = \"https://...\"\nopenai.default_headers = {\"x-foo\": \"true\"}\n\ncompletion = openai.chat.completions.create(\n    model=\"gpt-4o\",\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"How do I output all files in a directory using Python?\",\n        },\n    ],\n)\nprint(completion.choices[0].message.content)\n```\n\nThe API is the exact same as the standard client instance-based API.\n\nThis is intended to be used within REPLs or notebooks for faster iteration, **not** in application code.\n\nWe recommend that you always instantiate a client (e.g., with `client = OpenAI()`) in application code because:\n\n- It can be difficult to reason about where client options are configured\n- It's not possible to change certain client options without potentially causing race conditions\n- It's harder to mock for testing purposes\n- It's not possible to control cleanup of network connections\n\n## Realtime API beta\n\nThe Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as [function calling](https://platform.openai.com/docs/guides/function-calling) through a WebSocket connection.\n\nUnder the hood the SDK uses the [`websockets`](https://websockets.readthedocs.io/en/stable/) library to manage connections.\n\nThe Realtime API works through a combination of client-sent events and server-sent events. Clients can send events to do things like update session configuration or send text and audio inputs. Server events confirm when audio responses have completed, or when a text response from the model has been received. A full event reference can be found [here](https://platform.openai.com/docs/api-reference/realtime-client-events) and a guide can be found [here](https://platform.openai.com/docs/guides/realtime).\n\nBasic text based example:\n\n```py\nimport asyncio\nfrom openai import AsyncOpenAI\n\nasync def main():\n    client = AsyncOpenAI()\n\n    async with client.beta.realtime.connect(model=\"gpt-4o-realtime-preview-2024-10-01\") as connection:\n        await connection.session.update(session={'modalities': ['text']})\n\n        await connection.conversation.item.create(\n            item={\n                \"type\": \"message\",\n                \"role\": \"user\",\n                \"content\": [{\"type\": \"input_text\", \"text\": \"Say hello!\"}],\n            }\n        )\n        await connection.response.create()\n\n        async for event in connection:\n            if event.type == 'response.text.delta':\n                print(event.delta, flush=True, end=\"\")\n\n            elif event.type == 'response.text.done':\n                print()\n\n            elif event.type == \"response.done\":\n                break\n\nasyncio.run(main())\n```\n\nHowever the real magic of the Realtime API is handling audio inputs / outputs, see this example [TUI script](https://github.com/openai/openai-python/blob/main/examples/realtime/push_to_talk_app.py) for a fully fledged example.\n\n### Realtime error handling\n\nWhenever an error occurs, the Realtime API will send an [`error` event](https://platform.openai.com/docs/guides/realtime/realtime-api-beta#handling-errors) and the connection will stay open and remain usable. This means you need to handle it yourself, as *no errors are raised directly* by the SDK when an `error` event comes in.\n\n```py\nclient = AsyncOpenAI()\n\nasync with client.beta.realtime.connect(model=\"gpt-4o-realtime-preview-2024-10-01\") as connection:\n    ...\n    async for event in connection:\n        if event.type == 'error':\n            print(event.error.type)\n            print(event.error.code)\n            print(event.error.event_id)\n            print(event.error.message)\n```\n\n## Using types\n\nNested request parameters are [TypedDicts](https://docs.python.org/3/library/typing.html#typing.TypedDict). Responses are [Pydantic models](https://docs.pydantic.dev) which also provide helper methods for things like:\n\n- Serializing back into JSON, `model.to_json()`\n- Converting to a dictionary, `model.to_dict()`\n\nTyped requests and responses provide autocomplete and documentation within your editor. If you would like to see type errors in VS Code to help catch bugs earlier, set `python.analysis.typeCheckingMode` to `basic`.\n\n## Pagination\n\nList methods in the OpenAI API are paginated.\n\nThis library provides auto-paginating iterators with each list response, so you do not have to request successive pages manually:\n\n```python\nfrom openai import OpenAI\n\nclient = OpenAI()\n\nall_jobs = []\n# Automatically fetches more pages as needed.\nfor job in client.fine_tuning.jobs.list(\n    limit=20,\n):\n    # Do something with job here\n    all_jobs.append(job)\nprint(all_jobs)\n```\n\nOr, asynchronously:\n\n```python\nimport asyncio\nfrom openai import AsyncOpenAI\n\nclient = AsyncOpenAI()\n\n\nasync def main() -> None:\n    all_jobs = []\n    # Iterate through items across all pages, issuing requests as needed.\n    async for job in client.fine_tuning.jobs.list(\n        limit=20,\n    ):\n        all_jobs.append(job)\n    print(all_jobs)\n\n\nasyncio.run(main())\n```\n\nAlternatively, you can use the `.has_next_page()`, `.next_page_info()`, or `.get_next_page()` methods for more granular control working with pages:\n\n```python\nfirst_page = await client.fine_tuning.jobs.list(\n    limit=20,\n)\nif first_page.has_next_page():\n    print(f\"will fetch next page using these details: {first_page.next_page_info()}\")\n    next_page = await first_page.get_next_page()\n    print(f\"number of items we just fetched: {len(next_page.data)}\")\n\n# Remove `await` for non-async usage.\n```\n\nOr just work directly with the returned data:\n\n```python\nfirst_page = await client.fine_tuning.jobs.list(\n    limit=20,\n)\n\nprint(f\"next page cursor: {first_page.after}\")  # => \"next page cursor: ...\"\nfor job in first_page.data:\n    print(job.id)\n\n# Remove `await` for non-async usage.\n```\n\n## Nested params\n\nNested parameters are dictionaries, typed using `TypedDict`, for example:\n\n```python\nfrom openai import OpenAI\n\nclient = OpenAI()\n\ncompletion = client.chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"Can you generate an example json object describing a fruit?\",\n        }\n    ],\n    model=\"gpt-4o\",\n    response_format={\"type\": \"json_object\"},\n)\n```\n\n## File uploads\n\nRequest parameters that correspond to file uploads can be passed as `bytes`, a [`PathLike`](https://docs.python.org/3/library/os.html#os.PathLike) instance or a tuple of `(filename, contents, media type)`.\n\n```python\nfrom pathlib import Path\nfrom openai import OpenAI\n\nclient = OpenAI()\n\nclient.files.create(\n    file=Path(\"input.jsonl\"),\n    purpose=\"fine-tune\",\n)\n```\n\nThe async client uses the exact same interface. If you pass a [`PathLike`](https://docs.python.org/3/library/os.html#os.PathLike) instance, the file contents will be read asynchronously automatically.\n\n## Handling errors\n\nWhen the library is unable to connect to the API (for example, due to network connection problems or a timeout), a subclass of `openai.APIConnectionError` is raised.\n\nWhen the API returns a non-success status code (that is, 4xx or 5xx\nresponse), a subclass of `openai.APIStatusError` is raised, containing `status_code` and `response` properties.\n\nAll errors inherit from `openai.APIError`.\n\n```python\nimport openai\nfrom openai import OpenAI\n\nclient = OpenAI()\n\ntry:\n    client.fine_tuning.jobs.create(\n        model=\"gpt-4o\",\n        training_file=\"file-abc123\",\n    )\nexcept openai.APIConnectionError as e:\n    print(\"The server could not be reached\")\n    print(e.__cause__)  # an underlying Exception, likely raised within httpx.\nexcept openai.RateLimitError as e:\n    print(\"A 429 status code was received; we should back off a bit.\")\nexcept openai.APIStatusError as e:\n    print(\"Another non-200-range status code was received\")\n    print(e.status_code)\n    print(e.response)\n```\n\nError codes are as follows:\n\n| Status Code | Error Type                 |\n| ----------- | -------------------------- |\n| 400         | `BadRequestError`          |\n| 401         | `AuthenticationError`      |\n| 403         | `PermissionDeniedError`    |\n| 404         | `NotFoundError`            |\n| 422         | `UnprocessableEntityError` |\n| 429         | `RateLimitError`           |\n| >=500       | `InternalServerError`      |\n| N/A         | `APIConnectionError`       |\n\n## Request IDs\n\n> For more information on debugging requests, see [these docs](https://platform.openai.com/docs/api-reference/debugging-requests)\n\nAll object responses in the SDK provide a `_request_id` property which is added from the `x-request-id` response header so that you can quickly log failing requests and report them back to OpenAI.\n\n```python\ncompletion = await client.chat.completions.create(\n    messages=[{\"role\": \"user\", \"content\": \"Say this is a test\"}], model=\"gpt-4\"\n)\nprint(completion._request_id)  # req_123\n```\n\nNote that unlike other properties that use an `_` prefix, the `_request_id` property\n*is* public. Unless documented otherwise, *all* other `_` prefix properties,\nmethods and modules are *private*.\n\n\n### Retries\n\nCertain errors are automatically retried 2 times by default, with a short exponential backoff.\nConnection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict,\n429 Rate Limit, and >=500 Internal errors are all retried by default.\n\nYou can use the `max_retries` option to configure or disable retry settings:\n\n```python\nfrom openai import OpenAI\n\n# Configure the default for all requests:\nclient = OpenAI(\n    # default is 2\n    max_retries=0,\n)\n\n# Or, configure per-request:\nclient.with_options(max_retries=5).chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"How can I get the name of the current day in JavaScript?\",\n        }\n    ],\n    model=\"gpt-4o\",\n)\n```\n\n### Timeouts\n\nBy default requests time out after 10 minutes. You can configure this with a `timeout` option,\nwhich accepts a float or an [`httpx.Timeout`](https://www.python-httpx.org/advanced/#fine-tuning-the-configuration) object:\n\n```python\nfrom openai import OpenAI\n\n# Configure the default for all requests:\nclient = OpenAI(\n    # 20 seconds (default is 10 minutes)\n    timeout=20.0,\n)\n\n# More granular control:\nclient = OpenAI(\n    timeout=httpx.Timeout(60.0, read=5.0, write=10.0, connect=2.0),\n)\n\n# Override per-request:\nclient.with_options(timeout=5.0).chat.completions.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"How can I list all files in a directory using Python?\",\n        }\n    ],\n    model=\"gpt-4o\",\n)\n```\n\nOn timeout, an `APITimeoutError` is thrown.\n\nNote that requests that time out are [retried twice by default](#retries).\n\n## Advanced\n\n### Logging\n\nWe use the standard library [`logging`](https://docs.python.org/3/library/logging.html) module.\n\nYou can enable logging by setting the environment variable `OPENAI_LOG` to `info`.\n\n```shell\n$ export OPENAI_LOG=info\n```\n\nOr to `debug` for more verbose logging.\n\n### How to tell whether `None` means `null` or missing\n\nIn an API response, a field may be explicitly `null`, or missing entirely; in either case, its value is `None` in this library. You can differentiate the two cases with `.model_fields_set`:\n\n```py\nif response.my_field is None:\n  if 'my_field' not in response.model_fields_set:\n    print('Got json like {}, without a \"my_field\" key present at all.')\n  else:\n    print('Got json like {\"my_field\": null}.')\n```\n\n### Accessing raw response data (e.g. headers)\n\nThe \"raw\" Response object can be accessed by prefixing `.with_raw_response.` to any HTTP method call, e.g.,\n\n```py\nfrom openai import OpenAI\n\nclient = OpenAI()\nresponse = client.chat.completions.with_raw_response.create(\n    messages=[{\n        \"role\": \"user\",\n        \"content\": \"Say this is a test\",\n    }],\n    model=\"gpt-4o\",\n)\nprint(response.headers.get('X-My-Header'))\n\ncompletion = response.parse()  # get the object that `chat.completions.create()` would have returned\nprint(completion)\n```\n\nThese methods return a [`LegacyAPIResponse`](https://github.com/openai/openai-python/tree/main/src/openai/_legacy_response.py) object. This is a legacy class as we're changing it slightly in the next major version.\n\nFor the sync client this will mostly be the same with the exception\nof `content` & `text` will be methods instead of properties. In the\nasync client, all methods will be async.\n\nA migration script will be provided & the migration in general should\nbe smooth.\n\n#### `.with_streaming_response`\n\nThe above interface eagerly reads the full response body when you make the request, which may not always be what you want.\n\nTo stream the response body, use `.with_streaming_response` instead, which requires a context manager and only reads the response body once you call `.read()`, `.text()`, `.json()`, `.iter_bytes()`, `.iter_text()`, `.iter_lines()` or `.parse()`. In the async client, these are async methods.\n\nAs such, `.with_streaming_response` methods return a different [`APIResponse`](https://github.com/openai/openai-python/tree/main/src/openai/_response.py) object, and the async client returns an [`AsyncAPIResponse`](https://github.com/openai/openai-python/tree/main/src/openai/_response.py) object.\n\n```python\nwith client.chat.completions.with_streaming_response.create(\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"Say this is a test\",\n        }\n    ],\n    model=\"gpt-4o\",\n) as response:\n    print(response.headers.get(\"X-My-Header\"))\n\n    for line in response.iter_lines():\n        print(line)\n```\n\nThe context manager is required so that the response will reliably be closed.\n\n### Making custom/undocumented requests\n\nThis library is typed for convenient access to the documented API.\n\nIf you need to access undocumented endpoints, params, or response properties, the library can still be used.\n\n#### Undocumented endpoints\n\nTo make requests to undocumented endpoints, you can make requests using `client.get`, `client.post`, and other\nhttp verbs. Options on the client will be respected (such as retries) when making this request.\n\n```py\nimport httpx\n\nresponse = client.post(\n    \"/foo\",\n    cast_to=httpx.Response,\n    body={\"my_param\": True},\n)\n\nprint(response.headers.get(\"x-foo\"))\n```\n\n#### Undocumented request params\n\nIf you want to explicitly send an extra param, you can do so with the `extra_query`, `extra_body`, and `extra_headers` request\noptions.\n\n#### Undocumented response properties\n\nTo access undocumented response properties, you can access the extra fields like `response.unknown_prop`. You\ncan also get all the extra fields on the Pydantic model as a dict with\n[`response.model_extra`](https://docs.pydantic.dev/latest/api/base_model/#pydantic.BaseModel.model_extra).\n\n### Configuring the HTTP client\n\nYou can directly override the [httpx client](https://www.python-httpx.org/api/#client) to customize it for your use case, including:\n\n- Support for [proxies](https://www.python-httpx.org/advanced/proxies/)\n- Custom [transports](https://www.python-httpx.org/advanced/transports/)\n- Additional [advanced](https://www.python-httpx.org/advanced/clients/) functionality\n\n```python\nimport httpx\nfrom openai import OpenAI, DefaultHttpxClient\n\nclient = OpenAI(\n    # Or use the `OPENAI_BASE_URL` env var\n    base_url=\"http://my.test.server.example.com:8083/v1\",\n    http_client=DefaultHttpxClient(\n        proxy=\"http://my.test.proxy.example.com\",\n        transport=httpx.HTTPTransport(local_address=\"0.0.0.0\"),\n    ),\n)\n```\n\nYou can also customize the client on a per-request basis by using `with_options()`:\n\n```python\nclient.with_options(http_client=DefaultHttpxClient(...))\n```\n\n### Managing HTTP resources\n\nBy default the library closes underlying HTTP connections whenever the client is [garbage collected](https://docs.python.org/3/reference/datamodel.html#object.__del__). You can manually close the client using the `.close()` method if desired, or with a context manager that closes when exiting.\n\n```py\nfrom openai import OpenAI\n\nwith OpenAI() as client:\n  # make requests here\n  ...\n\n# HTTP client is now closed\n```\n\n## Microsoft Azure OpenAI\n\nTo use this library with [Azure OpenAI](https://learn.microsoft.com/azure/ai-services/openai/overview), use the `AzureOpenAI`\nclass instead of the `OpenAI` class.\n\n> [!IMPORTANT]\n> The Azure API shape differs from the core API shape which means that the static types for responses / params\n> won't always be correct.\n\n```py\nfrom openai import AzureOpenAI\n\n# gets the API Key from environment variable AZURE_OPENAI_API_KEY\nclient = AzureOpenAI(\n    # https://learn.microsoft.com/azure/ai-services/openai/reference#rest-api-versioning\n    api_version=\"2023-07-01-preview\",\n    # https://learn.microsoft.com/azure/cognitive-services/openai/how-to/create-resource?pivots=web-portal#create-a-resource\n    azure_endpoint=\"https://example-endpoint.openai.azure.com\",\n)\n\ncompletion = client.chat.completions.create(\n    model=\"deployment-name\",  # e.g. gpt-35-instant\n    messages=[\n        {\n            \"role\": \"user\",\n            \"content\": \"How do I output all files in a directory using Python?\",\n        },\n    ],\n)\nprint(completion.to_json())\n```\n\nIn addition to the options provided in the base `OpenAI` client, the following options are provided:\n\n- `azure_endpoint` (or the `AZURE_OPENAI_ENDPOINT` environment variable)\n- `azure_deployment`\n- `api_version` (or the `OPENAI_API_VERSION` environment variable)\n- `azure_ad_token` (or the `AZURE_OPENAI_AD_TOKEN` environment variable)\n- `azure_ad_token_provider`\n\nAn example of using the client with Microsoft Entra ID (formerly known as Azure Active Directory) can be found [here](https://github.com/openai/openai-python/blob/main/examples/azure_ad.py).\n\n## Versioning\n\nThis package generally follows [SemVer](https://semver.org/spec/v2.0.0.html) conventions, though certain backwards-incompatible changes may be released as minor versions:\n\n1. Changes that only affect static types, without breaking runtime behavior.\n2. Changes to library internals which are technically public but not intended or documented for external use. _(Please open a GitHub issue to let us know if you are relying on such internals.)_\n3. Changes that we do not expect to impact the vast majority of users in practice.\n\nWe take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.\n\nWe are keen for your feedback; please open an [issue](https://www.github.com/openai/openai-python/issues) with questions, bugs, or suggestions.\n\n### Determining the installed version\n\nIf you've upgraded to the latest version but aren't seeing any new features you were expecting then your python environment is likely still using an older version.\n\nYou can determine the version that is being used at runtime with:\n\n```py\nimport openai\nprint(openai.__version__)\n```\n\n## Requirements\n\nPython 3.8 or higher.\n\n## Contributing\n\nSee [the contributing documentation](./CONTRIBUTING.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.30078125,
          "content": "# Security Policy\n\n## Reporting Security Issues\n\nThis SDK is generated by [Stainless Software Inc](http://stainlessapi.com). Stainless takes security seriously, and encourages you to report any security vulnerability promptly so that appropriate action can be taken.\n\nTo report a security issue, please contact the Stainless team at security@stainlessapi.com.\n\n## Responsible Disclosure\n\nWe appreciate the efforts of security researchers and individuals who help us maintain the security of\nSDKs we generate. If you believe you have found a security vulnerability, please adhere to responsible\ndisclosure practices by allowing us a reasonable amount of time to investigate and address the issue\nbefore making any information public.\n\n## Reporting Non-SDK Related Security Issues\n\nIf you encounter security issues that are not directly related to SDKs but pertain to the services\nor products provided by OpenAI please follow the respective company's security reporting guidelines.\n\n### OpenAI Terms and Policies\n\nOur Security Policy can be found at [Security Policy URL](https://openai.com/policies/coordinated-vulnerability-disclosure-policy).\n\nPlease contact disclosure@openai.com for any questions or concerns regarding security of our services.\n\n---\n\nThank you for helping us keep the SDKs and systems they interact with secure.\n"
        },
        {
          "name": "api.md",
          "type": "blob",
          "size": 28.751953125,
          "content": "# Shared Types\n\n```python\nfrom openai.types import (\n    ErrorObject,\n    FunctionDefinition,\n    FunctionParameters,\n    ResponseFormatJSONObject,\n    ResponseFormatJSONSchema,\n    ResponseFormatText,\n)\n```\n\n# Completions\n\nTypes:\n\n```python\nfrom openai.types import Completion, CompletionChoice, CompletionUsage\n```\n\nMethods:\n\n- <code title=\"post /completions\">client.completions.<a href=\"./src/openai/resources/completions.py\">create</a>(\\*\\*<a href=\"src/openai/types/completion_create_params.py\">params</a>) -> <a href=\"./src/openai/types/completion.py\">Completion</a></code>\n\n# Chat\n\nTypes:\n\n```python\nfrom openai.types import ChatModel\n```\n\n## Completions\n\nTypes:\n\n```python\nfrom openai.types.chat import (\n    ChatCompletion,\n    ChatCompletionAssistantMessageParam,\n    ChatCompletionAudio,\n    ChatCompletionAudioParam,\n    ChatCompletionChunk,\n    ChatCompletionContentPart,\n    ChatCompletionContentPartImage,\n    ChatCompletionContentPartInputAudio,\n    ChatCompletionContentPartRefusal,\n    ChatCompletionContentPartText,\n    ChatCompletionDeveloperMessageParam,\n    ChatCompletionFunctionCallOption,\n    ChatCompletionFunctionMessageParam,\n    ChatCompletionMessage,\n    ChatCompletionMessageParam,\n    ChatCompletionMessageToolCall,\n    ChatCompletionModality,\n    ChatCompletionNamedToolChoice,\n    ChatCompletionPredictionContent,\n    ChatCompletionReasoningEffort,\n    ChatCompletionRole,\n    ChatCompletionStreamOptions,\n    ChatCompletionSystemMessageParam,\n    ChatCompletionTokenLogprob,\n    ChatCompletionTool,\n    ChatCompletionToolChoiceOption,\n    ChatCompletionToolMessageParam,\n    ChatCompletionUserMessageParam,\n)\n```\n\nMethods:\n\n- <code title=\"post /chat/completions\">client.chat.completions.<a href=\"./src/openai/resources/chat/completions.py\">create</a>(\\*\\*<a href=\"src/openai/types/chat/completion_create_params.py\">params</a>) -> <a href=\"./src/openai/types/chat/chat_completion.py\">ChatCompletion</a></code>\n\n# Embeddings\n\nTypes:\n\n```python\nfrom openai.types import CreateEmbeddingResponse, Embedding, EmbeddingModel\n```\n\nMethods:\n\n- <code title=\"post /embeddings\">client.embeddings.<a href=\"./src/openai/resources/embeddings.py\">create</a>(\\*\\*<a href=\"src/openai/types/embedding_create_params.py\">params</a>) -> <a href=\"./src/openai/types/create_embedding_response.py\">CreateEmbeddingResponse</a></code>\n\n# Files\n\nTypes:\n\n```python\nfrom openai.types import FileContent, FileDeleted, FileObject, FilePurpose\n```\n\nMethods:\n\n- <code title=\"post /files\">client.files.<a href=\"./src/openai/resources/files.py\">create</a>(\\*\\*<a href=\"src/openai/types/file_create_params.py\">params</a>) -> <a href=\"./src/openai/types/file_object.py\">FileObject</a></code>\n- <code title=\"get /files/{file_id}\">client.files.<a href=\"./src/openai/resources/files.py\">retrieve</a>(file_id) -> <a href=\"./src/openai/types/file_object.py\">FileObject</a></code>\n- <code title=\"get /files\">client.files.<a href=\"./src/openai/resources/files.py\">list</a>(\\*\\*<a href=\"src/openai/types/file_list_params.py\">params</a>) -> <a href=\"./src/openai/types/file_object.py\">SyncCursorPage[FileObject]</a></code>\n- <code title=\"delete /files/{file_id}\">client.files.<a href=\"./src/openai/resources/files.py\">delete</a>(file_id) -> <a href=\"./src/openai/types/file_deleted.py\">FileDeleted</a></code>\n- <code title=\"get /files/{file_id}/content\">client.files.<a href=\"./src/openai/resources/files.py\">content</a>(file_id) -> HttpxBinaryResponseContent</code>\n- <code title=\"get /files/{file_id}/content\">client.files.<a href=\"./src/openai/resources/files.py\">retrieve_content</a>(file_id) -> str</code>\n- <code>client.files.<a href=\"./src/openai/resources/files.py\">wait_for_processing</a>(\\*args) -> FileObject</code>\n\n# Images\n\nTypes:\n\n```python\nfrom openai.types import Image, ImageModel, ImagesResponse\n```\n\nMethods:\n\n- <code title=\"post /images/variations\">client.images.<a href=\"./src/openai/resources/images.py\">create_variation</a>(\\*\\*<a href=\"src/openai/types/image_create_variation_params.py\">params</a>) -> <a href=\"./src/openai/types/images_response.py\">ImagesResponse</a></code>\n- <code title=\"post /images/edits\">client.images.<a href=\"./src/openai/resources/images.py\">edit</a>(\\*\\*<a href=\"src/openai/types/image_edit_params.py\">params</a>) -> <a href=\"./src/openai/types/images_response.py\">ImagesResponse</a></code>\n- <code title=\"post /images/generations\">client.images.<a href=\"./src/openai/resources/images.py\">generate</a>(\\*\\*<a href=\"src/openai/types/image_generate_params.py\">params</a>) -> <a href=\"./src/openai/types/images_response.py\">ImagesResponse</a></code>\n\n# Audio\n\nTypes:\n\n```python\nfrom openai.types import AudioModel, AudioResponseFormat\n```\n\n## Transcriptions\n\nTypes:\n\n```python\nfrom openai.types.audio import (\n    Transcription,\n    TranscriptionSegment,\n    TranscriptionVerbose,\n    TranscriptionWord,\n    TranscriptionCreateResponse,\n)\n```\n\nMethods:\n\n- <code title=\"post /audio/transcriptions\">client.audio.transcriptions.<a href=\"./src/openai/resources/audio/transcriptions.py\">create</a>(\\*\\*<a href=\"src/openai/types/audio/transcription_create_params.py\">params</a>) -> <a href=\"./src/openai/types/audio/transcription_create_response.py\">TranscriptionCreateResponse</a></code>\n\n## Translations\n\nTypes:\n\n```python\nfrom openai.types.audio import Translation, TranslationVerbose, TranslationCreateResponse\n```\n\nMethods:\n\n- <code title=\"post /audio/translations\">client.audio.translations.<a href=\"./src/openai/resources/audio/translations.py\">create</a>(\\*\\*<a href=\"src/openai/types/audio/translation_create_params.py\">params</a>) -> <a href=\"./src/openai/types/audio/translation_create_response.py\">TranslationCreateResponse</a></code>\n\n## Speech\n\nTypes:\n\n```python\nfrom openai.types.audio import SpeechModel\n```\n\nMethods:\n\n- <code title=\"post /audio/speech\">client.audio.speech.<a href=\"./src/openai/resources/audio/speech.py\">create</a>(\\*\\*<a href=\"src/openai/types/audio/speech_create_params.py\">params</a>) -> HttpxBinaryResponseContent</code>\n\n# Moderations\n\nTypes:\n\n```python\nfrom openai.types import (\n    Moderation,\n    ModerationImageURLInput,\n    ModerationModel,\n    ModerationMultiModalInput,\n    ModerationTextInput,\n    ModerationCreateResponse,\n)\n```\n\nMethods:\n\n- <code title=\"post /moderations\">client.moderations.<a href=\"./src/openai/resources/moderations.py\">create</a>(\\*\\*<a href=\"src/openai/types/moderation_create_params.py\">params</a>) -> <a href=\"./src/openai/types/moderation_create_response.py\">ModerationCreateResponse</a></code>\n\n# Models\n\nTypes:\n\n```python\nfrom openai.types import Model, ModelDeleted\n```\n\nMethods:\n\n- <code title=\"get /models/{model}\">client.models.<a href=\"./src/openai/resources/models.py\">retrieve</a>(model) -> <a href=\"./src/openai/types/model.py\">Model</a></code>\n- <code title=\"get /models\">client.models.<a href=\"./src/openai/resources/models.py\">list</a>() -> <a href=\"./src/openai/types/model.py\">SyncPage[Model]</a></code>\n- <code title=\"delete /models/{model}\">client.models.<a href=\"./src/openai/resources/models.py\">delete</a>(model) -> <a href=\"./src/openai/types/model_deleted.py\">ModelDeleted</a></code>\n\n# FineTuning\n\n## Jobs\n\nTypes:\n\n```python\nfrom openai.types.fine_tuning import (\n    FineTuningJob,\n    FineTuningJobEvent,\n    FineTuningJobIntegration,\n    FineTuningJobWandbIntegration,\n    FineTuningJobWandbIntegrationObject,\n)\n```\n\nMethods:\n\n- <code title=\"post /fine_tuning/jobs\">client.fine_tuning.jobs.<a href=\"./src/openai/resources/fine_tuning/jobs/jobs.py\">create</a>(\\*\\*<a href=\"src/openai/types/fine_tuning/job_create_params.py\">params</a>) -> <a href=\"./src/openai/types/fine_tuning/fine_tuning_job.py\">FineTuningJob</a></code>\n- <code title=\"get /fine_tuning/jobs/{fine_tuning_job_id}\">client.fine_tuning.jobs.<a href=\"./src/openai/resources/fine_tuning/jobs/jobs.py\">retrieve</a>(fine_tuning_job_id) -> <a href=\"./src/openai/types/fine_tuning/fine_tuning_job.py\">FineTuningJob</a></code>\n- <code title=\"get /fine_tuning/jobs\">client.fine_tuning.jobs.<a href=\"./src/openai/resources/fine_tuning/jobs/jobs.py\">list</a>(\\*\\*<a href=\"src/openai/types/fine_tuning/job_list_params.py\">params</a>) -> <a href=\"./src/openai/types/fine_tuning/fine_tuning_job.py\">SyncCursorPage[FineTuningJob]</a></code>\n- <code title=\"post /fine_tuning/jobs/{fine_tuning_job_id}/cancel\">client.fine_tuning.jobs.<a href=\"./src/openai/resources/fine_tuning/jobs/jobs.py\">cancel</a>(fine_tuning_job_id) -> <a href=\"./src/openai/types/fine_tuning/fine_tuning_job.py\">FineTuningJob</a></code>\n- <code title=\"get /fine_tuning/jobs/{fine_tuning_job_id}/events\">client.fine_tuning.jobs.<a href=\"./src/openai/resources/fine_tuning/jobs/jobs.py\">list_events</a>(fine_tuning_job_id, \\*\\*<a href=\"src/openai/types/fine_tuning/job_list_events_params.py\">params</a>) -> <a href=\"./src/openai/types/fine_tuning/fine_tuning_job_event.py\">SyncCursorPage[FineTuningJobEvent]</a></code>\n\n### Checkpoints\n\nTypes:\n\n```python\nfrom openai.types.fine_tuning.jobs import FineTuningJobCheckpoint\n```\n\nMethods:\n\n- <code title=\"get /fine_tuning/jobs/{fine_tuning_job_id}/checkpoints\">client.fine_tuning.jobs.checkpoints.<a href=\"./src/openai/resources/fine_tuning/jobs/checkpoints.py\">list</a>(fine_tuning_job_id, \\*\\*<a href=\"src/openai/types/fine_tuning/jobs/checkpoint_list_params.py\">params</a>) -> <a href=\"./src/openai/types/fine_tuning/jobs/fine_tuning_job_checkpoint.py\">SyncCursorPage[FineTuningJobCheckpoint]</a></code>\n\n# Beta\n\n## Realtime\n\nTypes:\n\n```python\nfrom openai.types.beta.realtime import (\n    ConversationCreatedEvent,\n    ConversationItem,\n    ConversationItemContent,\n    ConversationItemCreateEvent,\n    ConversationItemCreatedEvent,\n    ConversationItemDeleteEvent,\n    ConversationItemDeletedEvent,\n    ConversationItemInputAudioTranscriptionCompletedEvent,\n    ConversationItemInputAudioTranscriptionFailedEvent,\n    ConversationItemTruncateEvent,\n    ConversationItemTruncatedEvent,\n    ErrorEvent,\n    InputAudioBufferAppendEvent,\n    InputAudioBufferClearEvent,\n    InputAudioBufferClearedEvent,\n    InputAudioBufferCommitEvent,\n    InputAudioBufferCommittedEvent,\n    InputAudioBufferSpeechStartedEvent,\n    InputAudioBufferSpeechStoppedEvent,\n    RateLimitsUpdatedEvent,\n    RealtimeClientEvent,\n    RealtimeResponse,\n    RealtimeResponseStatus,\n    RealtimeResponseUsage,\n    RealtimeServerEvent,\n    ResponseAudioDeltaEvent,\n    ResponseAudioDoneEvent,\n    ResponseAudioTranscriptDeltaEvent,\n    ResponseAudioTranscriptDoneEvent,\n    ResponseCancelEvent,\n    ResponseContentPartAddedEvent,\n    ResponseContentPartDoneEvent,\n    ResponseCreateEvent,\n    ResponseCreatedEvent,\n    ResponseDoneEvent,\n    ResponseFunctionCallArgumentsDeltaEvent,\n    ResponseFunctionCallArgumentsDoneEvent,\n    ResponseOutputItemAddedEvent,\n    ResponseOutputItemDoneEvent,\n    ResponseTextDeltaEvent,\n    ResponseTextDoneEvent,\n    SessionCreatedEvent,\n    SessionUpdateEvent,\n    SessionUpdatedEvent,\n)\n```\n\n### Sessions\n\nTypes:\n\n```python\nfrom openai.types.beta.realtime import Session, SessionCreateResponse\n```\n\nMethods:\n\n- <code title=\"post /realtime/sessions\">client.beta.realtime.sessions.<a href=\"./src/openai/resources/beta/realtime/sessions.py\">create</a>(\\*\\*<a href=\"src/openai/types/beta/realtime/session_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/realtime/session_create_response.py\">SessionCreateResponse</a></code>\n\n## VectorStores\n\nTypes:\n\n```python\nfrom openai.types.beta import (\n    AutoFileChunkingStrategyParam,\n    FileChunkingStrategy,\n    FileChunkingStrategyParam,\n    OtherFileChunkingStrategyObject,\n    StaticFileChunkingStrategy,\n    StaticFileChunkingStrategyObject,\n    StaticFileChunkingStrategyParam,\n    VectorStore,\n    VectorStoreDeleted,\n)\n```\n\nMethods:\n\n- <code title=\"post /vector_stores\">client.beta.vector_stores.<a href=\"./src/openai/resources/beta/vector_stores/vector_stores.py\">create</a>(\\*\\*<a href=\"src/openai/types/beta/vector_store_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_store.py\">VectorStore</a></code>\n- <code title=\"get /vector_stores/{vector_store_id}\">client.beta.vector_stores.<a href=\"./src/openai/resources/beta/vector_stores/vector_stores.py\">retrieve</a>(vector_store_id) -> <a href=\"./src/openai/types/beta/vector_store.py\">VectorStore</a></code>\n- <code title=\"post /vector_stores/{vector_store_id}\">client.beta.vector_stores.<a href=\"./src/openai/resources/beta/vector_stores/vector_stores.py\">update</a>(vector_store_id, \\*\\*<a href=\"src/openai/types/beta/vector_store_update_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_store.py\">VectorStore</a></code>\n- <code title=\"get /vector_stores\">client.beta.vector_stores.<a href=\"./src/openai/resources/beta/vector_stores/vector_stores.py\">list</a>(\\*\\*<a href=\"src/openai/types/beta/vector_store_list_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_store.py\">SyncCursorPage[VectorStore]</a></code>\n- <code title=\"delete /vector_stores/{vector_store_id}\">client.beta.vector_stores.<a href=\"./src/openai/resources/beta/vector_stores/vector_stores.py\">delete</a>(vector_store_id) -> <a href=\"./src/openai/types/beta/vector_store_deleted.py\">VectorStoreDeleted</a></code>\n\n### Files\n\nTypes:\n\n```python\nfrom openai.types.beta.vector_stores import VectorStoreFile, VectorStoreFileDeleted\n```\n\nMethods:\n\n- <code title=\"post /vector_stores/{vector_store_id}/files\">client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">create</a>(vector_store_id, \\*\\*<a href=\"src/openai/types/beta/vector_stores/file_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file.py\">VectorStoreFile</a></code>\n- <code title=\"get /vector_stores/{vector_store_id}/files/{file_id}\">client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">retrieve</a>(file_id, \\*, vector_store_id) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file.py\">VectorStoreFile</a></code>\n- <code title=\"get /vector_stores/{vector_store_id}/files\">client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">list</a>(vector_store_id, \\*\\*<a href=\"src/openai/types/beta/vector_stores/file_list_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file.py\">SyncCursorPage[VectorStoreFile]</a></code>\n- <code title=\"delete /vector_stores/{vector_store_id}/files/{file_id}\">client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">delete</a>(file_id, \\*, vector_store_id) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file_deleted.py\">VectorStoreFileDeleted</a></code>\n- <code>client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">create_and_poll</a>(\\*args) -> VectorStoreFile</code>\n- <code>client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">poll</a>(\\*args) -> VectorStoreFile</code>\n- <code>client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">upload</a>(\\*args) -> VectorStoreFile</code>\n- <code>client.beta.vector_stores.files.<a href=\"./src/openai/resources/beta/vector_stores/files.py\">upload_and_poll</a>(\\*args) -> VectorStoreFile</code>\n\n### FileBatches\n\nTypes:\n\n```python\nfrom openai.types.beta.vector_stores import VectorStoreFileBatch\n```\n\nMethods:\n\n- <code title=\"post /vector_stores/{vector_store_id}/file_batches\">client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">create</a>(vector_store_id, \\*\\*<a href=\"src/openai/types/beta/vector_stores/file_batch_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file_batch.py\">VectorStoreFileBatch</a></code>\n- <code title=\"get /vector_stores/{vector_store_id}/file_batches/{batch_id}\">client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">retrieve</a>(batch_id, \\*, vector_store_id) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file_batch.py\">VectorStoreFileBatch</a></code>\n- <code title=\"post /vector_stores/{vector_store_id}/file_batches/{batch_id}/cancel\">client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">cancel</a>(batch_id, \\*, vector_store_id) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file_batch.py\">VectorStoreFileBatch</a></code>\n- <code title=\"get /vector_stores/{vector_store_id}/file_batches/{batch_id}/files\">client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">list_files</a>(batch_id, \\*, vector_store_id, \\*\\*<a href=\"src/openai/types/beta/vector_stores/file_batch_list_files_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/vector_stores/vector_store_file.py\">SyncCursorPage[VectorStoreFile]</a></code>\n- <code>client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">create_and_poll</a>(\\*args) -> VectorStoreFileBatch</code>\n- <code>client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">poll</a>(\\*args) -> VectorStoreFileBatch</code>\n- <code>client.beta.vector_stores.file_batches.<a href=\"./src/openai/resources/beta/vector_stores/file_batches.py\">upload_and_poll</a>(\\*args) -> VectorStoreFileBatch</code>\n\n## Assistants\n\nTypes:\n\n```python\nfrom openai.types.beta import (\n    Assistant,\n    AssistantDeleted,\n    AssistantStreamEvent,\n    AssistantTool,\n    CodeInterpreterTool,\n    FileSearchTool,\n    FunctionTool,\n    MessageStreamEvent,\n    RunStepStreamEvent,\n    RunStreamEvent,\n    ThreadStreamEvent,\n)\n```\n\nMethods:\n\n- <code title=\"post /assistants\">client.beta.assistants.<a href=\"./src/openai/resources/beta/assistants.py\">create</a>(\\*\\*<a href=\"src/openai/types/beta/assistant_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/assistant.py\">Assistant</a></code>\n- <code title=\"get /assistants/{assistant_id}\">client.beta.assistants.<a href=\"./src/openai/resources/beta/assistants.py\">retrieve</a>(assistant_id) -> <a href=\"./src/openai/types/beta/assistant.py\">Assistant</a></code>\n- <code title=\"post /assistants/{assistant_id}\">client.beta.assistants.<a href=\"./src/openai/resources/beta/assistants.py\">update</a>(assistant_id, \\*\\*<a href=\"src/openai/types/beta/assistant_update_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/assistant.py\">Assistant</a></code>\n- <code title=\"get /assistants\">client.beta.assistants.<a href=\"./src/openai/resources/beta/assistants.py\">list</a>(\\*\\*<a href=\"src/openai/types/beta/assistant_list_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/assistant.py\">SyncCursorPage[Assistant]</a></code>\n- <code title=\"delete /assistants/{assistant_id}\">client.beta.assistants.<a href=\"./src/openai/resources/beta/assistants.py\">delete</a>(assistant_id) -> <a href=\"./src/openai/types/beta/assistant_deleted.py\">AssistantDeleted</a></code>\n\n## Threads\n\nTypes:\n\n```python\nfrom openai.types.beta import (\n    AssistantResponseFormatOption,\n    AssistantToolChoice,\n    AssistantToolChoiceFunction,\n    AssistantToolChoiceOption,\n    Thread,\n    ThreadDeleted,\n)\n```\n\nMethods:\n\n- <code title=\"post /threads\">client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">create</a>(\\*\\*<a href=\"src/openai/types/beta/thread_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/thread.py\">Thread</a></code>\n- <code title=\"get /threads/{thread_id}\">client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">retrieve</a>(thread_id) -> <a href=\"./src/openai/types/beta/thread.py\">Thread</a></code>\n- <code title=\"post /threads/{thread_id}\">client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">update</a>(thread_id, \\*\\*<a href=\"src/openai/types/beta/thread_update_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/thread.py\">Thread</a></code>\n- <code title=\"delete /threads/{thread_id}\">client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">delete</a>(thread_id) -> <a href=\"./src/openai/types/beta/thread_deleted.py\">ThreadDeleted</a></code>\n- <code title=\"post /threads/runs\">client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">create_and_run</a>(\\*\\*<a href=\"src/openai/types/beta/thread_create_and_run_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/run.py\">Run</a></code>\n- <code>client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">create_and_run_poll</a>(\\*args) -> Run</code>\n- <code>client.beta.threads.<a href=\"./src/openai/resources/beta/threads/threads.py\">create_and_run_stream</a>(\\*args) -> AssistantStreamManager[AssistantEventHandler] | AssistantStreamManager[AssistantEventHandlerT]</code>\n\n### Runs\n\nTypes:\n\n```python\nfrom openai.types.beta.threads import RequiredActionFunctionToolCall, Run, RunStatus\n```\n\nMethods:\n\n- <code title=\"post /threads/{thread_id}/runs\">client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">create</a>(thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/run_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/run.py\">Run</a></code>\n- <code title=\"get /threads/{thread_id}/runs/{run_id}\">client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">retrieve</a>(run_id, \\*, thread_id) -> <a href=\"./src/openai/types/beta/threads/run.py\">Run</a></code>\n- <code title=\"post /threads/{thread_id}/runs/{run_id}\">client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">update</a>(run_id, \\*, thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/run_update_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/run.py\">Run</a></code>\n- <code title=\"get /threads/{thread_id}/runs\">client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">list</a>(thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/run_list_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/run.py\">SyncCursorPage[Run]</a></code>\n- <code title=\"post /threads/{thread_id}/runs/{run_id}/cancel\">client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">cancel</a>(run_id, \\*, thread_id) -> <a href=\"./src/openai/types/beta/threads/run.py\">Run</a></code>\n- <code title=\"post /threads/{thread_id}/runs/{run_id}/submit_tool_outputs\">client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">submit_tool_outputs</a>(run_id, \\*, thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/run_submit_tool_outputs_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/run.py\">Run</a></code>\n- <code>client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">create_and_poll</a>(\\*args) -> Run</code>\n- <code>client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">create_and_stream</a>(\\*args) -> AssistantStreamManager[AssistantEventHandler] | AssistantStreamManager[AssistantEventHandlerT]</code>\n- <code>client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">poll</a>(\\*args) -> Run</code>\n- <code>client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">stream</a>(\\*args) -> AssistantStreamManager[AssistantEventHandler] | AssistantStreamManager[AssistantEventHandlerT]</code>\n- <code>client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">submit_tool_outputs_and_poll</a>(\\*args) -> Run</code>\n- <code>client.beta.threads.runs.<a href=\"./src/openai/resources/beta/threads/runs/runs.py\">submit_tool_outputs_stream</a>(\\*args) -> AssistantStreamManager[AssistantEventHandler] | AssistantStreamManager[AssistantEventHandlerT]</code>\n\n#### Steps\n\nTypes:\n\n```python\nfrom openai.types.beta.threads.runs import (\n    CodeInterpreterLogs,\n    CodeInterpreterOutputImage,\n    CodeInterpreterToolCall,\n    CodeInterpreterToolCallDelta,\n    FileSearchToolCall,\n    FileSearchToolCallDelta,\n    FunctionToolCall,\n    FunctionToolCallDelta,\n    MessageCreationStepDetails,\n    RunStep,\n    RunStepDelta,\n    RunStepDeltaEvent,\n    RunStepDeltaMessageDelta,\n    RunStepInclude,\n    ToolCall,\n    ToolCallDelta,\n    ToolCallDeltaObject,\n    ToolCallsStepDetails,\n)\n```\n\nMethods:\n\n- <code title=\"get /threads/{thread_id}/runs/{run_id}/steps/{step_id}\">client.beta.threads.runs.steps.<a href=\"./src/openai/resources/beta/threads/runs/steps.py\">retrieve</a>(step_id, \\*, thread_id, run_id, \\*\\*<a href=\"src/openai/types/beta/threads/runs/step_retrieve_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/runs/run_step.py\">RunStep</a></code>\n- <code title=\"get /threads/{thread_id}/runs/{run_id}/steps\">client.beta.threads.runs.steps.<a href=\"./src/openai/resources/beta/threads/runs/steps.py\">list</a>(run_id, \\*, thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/runs/step_list_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/runs/run_step.py\">SyncCursorPage[RunStep]</a></code>\n\n### Messages\n\nTypes:\n\n```python\nfrom openai.types.beta.threads import (\n    Annotation,\n    AnnotationDelta,\n    FileCitationAnnotation,\n    FileCitationDeltaAnnotation,\n    FilePathAnnotation,\n    FilePathDeltaAnnotation,\n    ImageFile,\n    ImageFileContentBlock,\n    ImageFileDelta,\n    ImageFileDeltaBlock,\n    ImageURL,\n    ImageURLContentBlock,\n    ImageURLDelta,\n    ImageURLDeltaBlock,\n    Message,\n    MessageContent,\n    MessageContentDelta,\n    MessageContentPartParam,\n    MessageDeleted,\n    MessageDelta,\n    MessageDeltaEvent,\n    RefusalContentBlock,\n    RefusalDeltaBlock,\n    Text,\n    TextContentBlock,\n    TextContentBlockParam,\n    TextDelta,\n    TextDeltaBlock,\n)\n```\n\nMethods:\n\n- <code title=\"post /threads/{thread_id}/messages\">client.beta.threads.messages.<a href=\"./src/openai/resources/beta/threads/messages.py\">create</a>(thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/message_create_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/message.py\">Message</a></code>\n- <code title=\"get /threads/{thread_id}/messages/{message_id}\">client.beta.threads.messages.<a href=\"./src/openai/resources/beta/threads/messages.py\">retrieve</a>(message_id, \\*, thread_id) -> <a href=\"./src/openai/types/beta/threads/message.py\">Message</a></code>\n- <code title=\"post /threads/{thread_id}/messages/{message_id}\">client.beta.threads.messages.<a href=\"./src/openai/resources/beta/threads/messages.py\">update</a>(message_id, \\*, thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/message_update_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/message.py\">Message</a></code>\n- <code title=\"get /threads/{thread_id}/messages\">client.beta.threads.messages.<a href=\"./src/openai/resources/beta/threads/messages.py\">list</a>(thread_id, \\*\\*<a href=\"src/openai/types/beta/threads/message_list_params.py\">params</a>) -> <a href=\"./src/openai/types/beta/threads/message.py\">SyncCursorPage[Message]</a></code>\n- <code title=\"delete /threads/{thread_id}/messages/{message_id}\">client.beta.threads.messages.<a href=\"./src/openai/resources/beta/threads/messages.py\">delete</a>(message_id, \\*, thread_id) -> <a href=\"./src/openai/types/beta/threads/message_deleted.py\">MessageDeleted</a></code>\n\n# Batches\n\nTypes:\n\n```python\nfrom openai.types import Batch, BatchError, BatchRequestCounts\n```\n\nMethods:\n\n- <code title=\"post /batches\">client.batches.<a href=\"./src/openai/resources/batches.py\">create</a>(\\*\\*<a href=\"src/openai/types/batch_create_params.py\">params</a>) -> <a href=\"./src/openai/types/batch.py\">Batch</a></code>\n- <code title=\"get /batches/{batch_id}\">client.batches.<a href=\"./src/openai/resources/batches.py\">retrieve</a>(batch_id) -> <a href=\"./src/openai/types/batch.py\">Batch</a></code>\n- <code title=\"get /batches\">client.batches.<a href=\"./src/openai/resources/batches.py\">list</a>(\\*\\*<a href=\"src/openai/types/batch_list_params.py\">params</a>) -> <a href=\"./src/openai/types/batch.py\">SyncCursorPage[Batch]</a></code>\n- <code title=\"post /batches/{batch_id}/cancel\">client.batches.<a href=\"./src/openai/resources/batches.py\">cancel</a>(batch_id) -> <a href=\"./src/openai/types/batch.py\">Batch</a></code>\n\n# Uploads\n\nTypes:\n\n```python\nfrom openai.types import Upload\n```\n\nMethods:\n\n- <code title=\"post /uploads\">client.uploads.<a href=\"./src/openai/resources/uploads/uploads.py\">create</a>(\\*\\*<a href=\"src/openai/types/upload_create_params.py\">params</a>) -> <a href=\"./src/openai/types/upload.py\">Upload</a></code>\n- <code title=\"post /uploads/{upload_id}/cancel\">client.uploads.<a href=\"./src/openai/resources/uploads/uploads.py\">cancel</a>(upload_id) -> <a href=\"./src/openai/types/upload.py\">Upload</a></code>\n- <code title=\"post /uploads/{upload_id}/complete\">client.uploads.<a href=\"./src/openai/resources/uploads/uploads.py\">complete</a>(upload_id, \\*\\*<a href=\"src/openai/types/upload_complete_params.py\">params</a>) -> <a href=\"./src/openai/types/upload.py\">Upload</a></code>\n\n## Parts\n\nTypes:\n\n```python\nfrom openai.types.uploads import UploadPart\n```\n\nMethods:\n\n- <code title=\"post /uploads/{upload_id}/parts\">client.uploads.parts.<a href=\"./src/openai/resources/uploads/parts.py\">create</a>(upload_id, \\*\\*<a href=\"src/openai/types/uploads/part_create_params.py\">params</a>) -> <a href=\"./src/openai/types/uploads/upload_part.py\">UploadPart</a></code>\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "helpers.md",
          "type": "blob",
          "size": 17.0927734375,
          "content": "# Structured Outputs Parsing Helpers\n\nThe OpenAI API supports extracting JSON from the model with the `response_format` request param, for more details on the API, see [this guide](https://platform.openai.com/docs/guides/structured-outputs).\n\nThe SDK provides a `client.beta.chat.completions.parse()` method which is a wrapper over the `client.chat.completions.create()` that\nprovides richer integrations with Python specific types & returns a `ParsedChatCompletion` object, which is a subclass of the standard `ChatCompletion` class.\n\n## Auto-parsing response content with Pydantic models\n\nYou can pass a pydantic model to the `.parse()` method and the SDK will automatically convert the model\ninto a JSON schema, send it to the API and parse the response content back into the given model.\n\n```py\nfrom typing import List\nfrom pydantic import BaseModel\nfrom openai import OpenAI\n\nclass Step(BaseModel):\n    explanation: str\n    output: str\n\nclass MathResponse(BaseModel):\n    steps: List[Step]\n    final_answer: str\n\nclient = OpenAI()\ncompletion = client.beta.chat.completions.parse(\n    model=\"gpt-4o-2024-08-06\",\n    messages=[\n        {\"role\": \"system\", \"content\": \"You are a helpful math tutor.\"},\n        {\"role\": \"user\", \"content\": \"solve 8x + 31 = 2\"},\n    ],\n    response_format=MathResponse,\n)\n\nmessage = completion.choices[0].message\nif message.parsed:\n    print(message.parsed.steps)\n    print(\"answer: \", message.parsed.final_answer)\nelse:\n    print(message.refusal)\n```\n\n## Auto-parsing function tool calls\n\nThe `.parse()` method will also automatically parse `function` tool calls if:\n- You use the `openai.pydantic_function_tool()` helper method\n- You mark your tool schema with `\"strict\": True`\n\nFor example:\n\n```py\nfrom enum import Enum\nfrom typing import List, Union\nfrom pydantic import BaseModel\nimport openai\n\nclass Table(str, Enum):\n    orders = \"orders\"\n    customers = \"customers\"\n    products = \"products\"\n\nclass Column(str, Enum):\n    id = \"id\"\n    status = \"status\"\n    expected_delivery_date = \"expected_delivery_date\"\n    delivered_at = \"delivered_at\"\n    shipped_at = \"shipped_at\"\n    ordered_at = \"ordered_at\"\n    canceled_at = \"canceled_at\"\n\nclass Operator(str, Enum):\n    eq = \"=\"\n    gt = \">\"\n    lt = \"<\"\n    le = \"<=\"\n    ge = \">=\"\n    ne = \"!=\"\n\nclass OrderBy(str, Enum):\n    asc = \"asc\"\n    desc = \"desc\"\n\nclass DynamicValue(BaseModel):\n    column_name: str\n\nclass Condition(BaseModel):\n    column: str\n    operator: Operator\n    value: Union[str, int, DynamicValue]\n\nclass Query(BaseModel):\n    table_name: Table\n    columns: List[Column]\n    conditions: List[Condition]\n    order_by: OrderBy\n\nclient = openai.OpenAI()\ncompletion = client.beta.chat.completions.parse(\n    model=\"gpt-4o-2024-08-06\",\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"You are a helpful assistant. The current date is August 6, 2024. You help users query for the data they are looking for by calling the query function.\",\n        },\n        {\n            \"role\": \"user\",\n            \"content\": \"look up all my orders in may of last year that were fulfilled but not delivered on time\",\n        },\n    ],\n    tools=[\n        openai.pydantic_function_tool(Query),\n    ],\n)\n\ntool_call = (completion.choices[0].message.tool_calls or [])[0]\nprint(tool_call.function)\nassert isinstance(tool_call.function.parsed_arguments, Query)\nprint(tool_call.function.parsed_arguments.table_name)\n```\n\n### Differences from `.create()`\n\nThe `beta.chat.completions.parse()` method imposes some additional restrictions on it's usage that `chat.completions.create()` does not. \n\n- If the completion completes with `finish_reason` set to `length` or `content_filter`, the `LengthFinishReasonError` / `ContentFilterFinishReasonError` errors will be raised.\n- Only strict function tools can be passed, e.g. `{'type': 'function', 'function': {..., 'strict': True}}`\n\n# Streaming Helpers\n\nOpenAI supports streaming responses when interacting with the [Chat Completion](#chat-completions-api) & [Assistant](#assistant-streaming-api) APIs.\n\n## Chat Completions API\n\nThe SDK provides a `.beta.chat.completions.stream()` method that wraps the `.chat.completions.create(stream=True)` stream providing a more granular event API & automatic accumulation of each delta.\n\nIt also supports all aforementioned [parsing helpers](#parsing-helpers).\n\nUnlike `.create(stream=True)`, the `.stream()` method requires usage within a context manager to prevent accidental leakage of the response:\n\n```py\nfrom openai import AsyncOpenAI\n\nclient = AsyncOpenAI()\n\nasync with client.beta.chat.completions.stream(\n    model='gpt-4o-2024-08-06',\n    messages=[...],\n) as stream:\n    async for event in stream:\n        if event.type == 'content.delta':\n            print(event.content, flush=True, end='')\n```\n\nWhen the context manager is entered, a `ChatCompletionStream` / `AsyncChatCompletionStream` instance is returned which, like `.create(stream=True)` is an iterator in the sync client and an async iterator in the async client. The full list of events that are yielded by the iterator are outlined [below](#chat-completions-events).\n\nWhen the context manager exits, the response will be closed, however the `stream` instance is still available outside\nthe context manager.\n\n### Chat Completions Events\n\nThese events allow you to track the progress of the chat completion generation, access partial results, and handle different aspects of the stream separately.\n\nBelow is a list of the different event types you may encounter:\n\n#### ChunkEvent\n\nEmitted for every chunk received from the API.\n\n- `type`: `\"chunk\"`\n- `chunk`: The raw `ChatCompletionChunk` object received from the API\n- `snapshot`: The current accumulated state of the chat completion\n\n#### ContentDeltaEvent\n\nEmitted for every chunk containing new content.\n\n- `type`: `\"content.delta\"`\n- `delta`: The new content string received in this chunk\n- `snapshot`: The accumulated content so far\n- `parsed`: The partially parsed content (if applicable)\n\n#### ContentDoneEvent\n\nEmitted when the content generation is complete. May be fired multiple times if there are multiple choices.\n\n- `type`: `\"content.done\"`\n- `content`: The full generated content\n- `parsed`: The fully parsed content (if applicable)\n\n#### RefusalDeltaEvent\n\nEmitted when a chunk contains part of a content refusal.\n\n- `type`: `\"refusal.delta\"`\n- `delta`: The new refusal content string received in this chunk\n- `snapshot`: The accumulated refusal content string so far\n\n#### RefusalDoneEvent\n\nEmitted when the refusal content is complete.\n\n- `type`: `\"refusal.done\"`\n- `refusal`: The full refusal content\n\n#### FunctionToolCallArgumentsDeltaEvent\n\nEmitted when a chunk contains part of a function tool call's arguments.\n\n- `type`: `\"tool_calls.function.arguments.delta\"`\n- `name`: The name of the function being called\n- `index`: The index of the tool call\n- `arguments`: The accumulated raw JSON string of arguments\n- `parsed_arguments`: The partially parsed arguments object\n- `arguments_delta`: The new JSON string fragment received in this chunk\n\n#### FunctionToolCallArgumentsDoneEvent\n\nEmitted when a function tool call's arguments are complete.\n\n- `type`: `\"tool_calls.function.arguments.done\"`\n- `name`: The name of the function being called\n- `index`: The index of the tool call\n- `arguments`: The full raw JSON string of arguments\n- `parsed_arguments`: The fully parsed arguments object. If you used `openai.pydantic_function_tool()` this will be an instance of the given model.\n\n#### LogprobsContentDeltaEvent\n\nEmitted when a chunk contains new content [log probabilities](https://cookbook.openai.com/examples/using_logprobs).\n\n- `type`: `\"logprobs.content.delta\"`\n- `content`: A list of the new log probabilities received in this chunk\n- `snapshot`: A list of the accumulated log probabilities so far\n\n#### LogprobsContentDoneEvent\n\nEmitted when all content [log probabilities](https://cookbook.openai.com/examples/using_logprobs) have been received.\n\n- `type`: `\"logprobs.content.done\"`\n- `content`: The full list of token log probabilities for the content\n\n#### LogprobsRefusalDeltaEvent\n\nEmitted when a chunk contains new refusal [log probabilities](https://cookbook.openai.com/examples/using_logprobs).\n\n- `type`: `\"logprobs.refusal.delta\"`\n- `refusal`: A list of the new log probabilities received in this chunk\n- `snapshot`: A list of the accumulated log probabilities so far\n\n#### LogprobsRefusalDoneEvent\n\nEmitted when all refusal [log probabilities](https://cookbook.openai.com/examples/using_logprobs) have been received.\n\n- `type`: `\"logprobs.refusal.done\"`\n- `refusal`: The full list of token log probabilities for the refusal\n\n### Chat Completions stream methods\n\nA handful of helper methods are provided on the stream class for additional convenience,\n\n**`.get_final_completion()`**\n\nReturns the accumulated `ParsedChatCompletion` object\n\n```py\nasync with client.beta.chat.completions.stream(...) as stream:\n    ...\n\ncompletion = await stream.get_final_completion()\nprint(completion.choices[0].message)\n```\n\n**`.until_done()`**\n\nIf you want to wait for the stream to complete, you can use the `.until_done()` method.\n\n```py\nasync with client.beta.chat.completions.stream(...) as stream:\n    await stream.until_done()\n    # stream is now finished\n```\n\n## Assistant Streaming API\n\nOpenAI supports streaming responses from Assistants. The SDK provides convenience wrappers around the API\nso you can subscribe to the types of events you are interested in as well as receive accumulated responses.\n\nMore information can be found in the documentation: [Assistant Streaming](https://platform.openai.com/docs/assistants/overview?lang=python)\n\n#### An example of creating a run and subscribing to some events\n\nYou can subscribe to events by creating an event handler class and overloading the relevant event handlers.\n\n```python\nfrom typing_extensions import override\nfrom openai import AssistantEventHandler, OpenAI\nfrom openai.types.beta.threads import Text, TextDelta\nfrom openai.types.beta.threads.runs import ToolCall, ToolCallDelta\n\nclient = openai.OpenAI()\n\n# First, we create a EventHandler class to define\n# how we want to handle the events in the response stream.\n\nclass EventHandler(AssistantEventHandler):\n  @override\n  def on_text_created(self, text: Text) -> None:\n    print(f\"\\nassistant > \", end=\"\", flush=True)\n\n  @override\n  def on_text_delta(self, delta: TextDelta, snapshot: Text):\n    print(delta.value, end=\"\", flush=True)\n\n  @override\n  def on_tool_call_created(self, tool_call: ToolCall):\n    print(f\"\\nassistant > {tool_call.type}\\n\", flush=True)\n\n  @override\n  def on_tool_call_delta(self, delta: ToolCallDelta, snapshot: ToolCall):\n    if delta.type == \"code_interpreter\" and delta.code_interpreter:\n      if delta.code_interpreter.input:\n        print(delta.code_interpreter.input, end=\"\", flush=True)\n      if delta.code_interpreter.outputs:\n        print(f\"\\n\\noutput >\", flush=True)\n        for output in delta.code_interpreter.outputs:\n          if output.type == \"logs\":\n            print(f\"\\n{output.logs}\", flush=True)\n\n# Then, we use the `stream` SDK helper\n# with the `EventHandler` class to create the Run\n# and stream the response.\n\nwith client.beta.threads.runs.stream(\n  thread_id=\"thread_id\",\n  assistant_id=\"assistant_id\",\n  event_handler=EventHandler(),\n) as stream:\n  stream.until_done()\n```\n\n#### An example of iterating over events\n\nYou can also iterate over all the streamed events.\n\n```python\nwith client.beta.threads.runs.stream(\n  thread_id=thread.id,\n  assistant_id=assistant.id\n) as stream:\n    for event in stream:\n        # Print the text from text delta events\n        if event.event == \"thread.message.delta\" and event.data.delta.content:\n            print(event.data.delta.content[0].text)\n```\n\n#### An example of iterating over text\n\nYou can also iterate over just the text deltas received\n\n```python\nwith client.beta.threads.runs.stream(\n  thread_id=thread.id,\n  assistant_id=assistant.id\n) as stream:\n    for text in stream.text_deltas:\n        print(text)\n```\n\n### Creating Streams\n\nThere are three helper methods for creating streams:\n\n```python\nclient.beta.threads.runs.stream()\n```\n\nThis method can be used to start and stream the response to an existing run with an associated thread\nthat is already populated with messages.\n\n```python\nclient.beta.threads.create_and_run_stream()\n```\n\nThis method can be used to add a message to a thread, start a run and then stream the response.\n\n```python\nclient.beta.threads.runs.submit_tool_outputs_stream()\n```\n\nThis method can be used to submit a tool output to a run waiting on the output and start a stream.\n\n### Assistant Events\n\nThe assistant API provides events you can subscribe to for the following events.\n\n```python\ndef on_event(self, event: AssistantStreamEvent)\n```\n\nThis allows you to subscribe to all the possible raw events sent by the OpenAI streaming API.\nIn many cases it will be more convenient to subscribe to a more specific set of events for your use case.\n\nMore information on the types of events can be found here: [Events](https://platform.openai.com/docs/api-reference/assistants-streaming/events)\n\n```python\ndef on_run_step_created(self, run_step: RunStep)\ndef on_run_step_delta(self, delta: RunStepDelta, snapshot: RunStep)\ndef on_run_step_done(self, run_step: RunStep)\n```\n\nThese events allow you to subscribe to the creation, delta and completion of a RunStep.\n\nFor more information on how Runs and RunSteps work see the documentation [Runs and RunSteps](https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps)\n\n```python\ndef on_message_created(self, message: Message)\ndef on_message_delta(self, delta: MessageDelta, snapshot: Message)\ndef on_message_done(self, message: Message)\n```\n\nThis allows you to subscribe to Message creation, delta and completion events. Messages can contain\ndifferent types of content that can be sent from a model (and events are available for specific content types).\nFor convenience, the delta event includes both the incremental update and an accumulated snapshot of the content.\n\nMore information on messages can be found\non in the documentation page [Message](https://platform.openai.com/docs/api-reference/messages/object).\n\n```python\ndef on_text_created(self, text: Text)\ndef on_text_delta(self, delta: TextDelta, snapshot: Text)\ndef on_text_done(self, text: Text)\n```\n\nThese events allow you to subscribe to the creation, delta and completion of a Text content (a specific type of message).\nFor convenience, the delta event includes both the incremental update and an accumulated snapshot of the content.\n\n```python\ndef on_image_file_done(self, image_file: ImageFile)\n```\n\nImage files are not sent incrementally so an event is provided for when a image file is available.\n\n```python\ndef on_tool_call_created(self, tool_call: ToolCall)\ndef on_tool_call_delta(self, delta: ToolCallDelta, snapshot: ToolCall)\ndef on_tool_call_done(self, tool_call: ToolCall)\n```\n\nThese events allow you to subscribe to events for the creation, delta and completion of a ToolCall.\n\nMore information on tools can be found here [Tools](https://platform.openai.com/docs/assistants/tools)\n\n```python\ndef on_end(self)\n```\n\nThe last event send when a stream ends.\n\n```python\ndef on_timeout(self)\n```\n\nThis event is triggered if the request times out.\n\n```python\ndef on_exception(self, exception: Exception)\n```\n\nThis event is triggered if an exception occurs during streaming.\n\n### Assistant Methods\n\nThe assistant streaming object also provides a few methods for convenience:\n\n```python\ndef current_event() -> AssistantStreamEvent | None\ndef current_run() -> Run | None\ndef current_message_snapshot() -> Message | None\ndef current_run_step_snapshot() -> RunStep | None\n```\n\nThese methods are provided to allow you to access additional context from within event handlers. In many cases\nthe handlers should include all the information you need for processing, but if additional context is required it\ncan be accessed.\n\nNote: There is not always a relevant context in certain situations (these will be `None` in those cases).\n\n```python\ndef get_final_run(self) -> Run\ndef get_final_run_steps(self) -> List[RunStep]\ndef get_final_messages(self) -> List[Message]\n```\n\nThese methods are provided for convenience to collect information at the end of a stream. Calling these events\nwill trigger consumption of the stream until completion and then return the relevant accumulated objects.\n\n# Polling Helpers\n\nWhen interacting with the API some actions such as starting a Run and adding files to vector stores are asynchronous and take time to complete.\nThe SDK includes helper functions which will poll the status until it reaches a terminal state and then return the resulting object.\nIf an API method results in an action which could benefit from polling there will be a corresponding version of the\nmethod ending in `_and_poll`.\n\nAll methods also allow you to set the polling frequency, how often the API is checked for an update, via a function argument (`poll_interval_ms`).\n\nThe polling methods are:\n\n```python\nclient.beta.threads.create_and_run_poll(...)\nclient.beta.threads.runs.create_and_poll(...)\nclient.beta.threads.runs.submit_tool_outputs_and_poll(...)\nclient.beta.vector_stores.files.upload_and_poll(...)\nclient.beta.vector_stores.files.create_and_poll(...)\nclient.beta.vector_stores.file_batches.create_and_poll(...)\nclient.beta.vector_stores.file_batches.upload_and_poll(...)\n```\n"
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 1.572265625,
          "content": "[mypy]\npretty = True\nshow_error_codes = True\n\n# Exclude _files.py and _logs.py because mypy isn't smart enough to apply\n# the correct type narrowing and as this is an internal module\n# it's fine to just use Pyright.\n#\n# We also exclude our `tests` as mypy doesn't always infer\n# types correctly and Pyright will still catch any type errors.\n\n# realtime examples use inline `uv` script dependencies\n# which means it can't be type checked\nexclude = ^(src/openai/_files\\.py|_dev/.*\\.py|tests/.*|src/openai/_utils/_logs\\.py|examples/realtime/audio_util\\.py|examples/realtime/push_to_talk_app\\.py)$\n\nstrict_equality = True\nimplicit_reexport = True\ncheck_untyped_defs = True\nno_implicit_optional = True\n\nwarn_return_any = True\nwarn_unreachable = True\nwarn_unused_configs = True\n\n# Turn these options off as it could cause conflicts\n# with the Pyright options.\nwarn_unused_ignores = False\nwarn_redundant_casts = False\n\ndisallow_any_generics = True\ndisallow_untyped_defs = True\ndisallow_untyped_calls = True\ndisallow_subclassing_any = True\ndisallow_incomplete_defs = True\ndisallow_untyped_decorators = True\ncache_fine_grained = True\n\n# By default, mypy reports an error if you assign a value to the result\n# of a function call that doesn't return anything. We do this in our test\n# cases:\n# ```\n# result = ...\n# assert result is None\n# ```\n# Changing this codegen to make mypy happy would increase complexity\n# and would not be worth it.\ndisable_error_code = func-returns-value\n\n# https://github.com/python/mypy/issues/12162\n[mypy.overrides]\nmodule = \"black.files.*\"\nignore_errors = true\nignore_missing_imports = true\n"
        },
        {
          "name": "noxfile.py",
          "type": "blob",
          "size": 0.2880859375,
          "content": "import nox\n\n\n@nox.session(reuse_venv=True, name=\"test-pydantic-v1\")\ndef test_pydantic_v1(session: nox.Session) -> None:\n    session.install(\"-r\", \"requirements-dev.lock\")\n    session.install(\"pydantic<2\")\n\n    session.run(\"pytest\", \"--showlocals\", \"--ignore=tests/functional\", *session.posargs)\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 5.095703125,
          "content": "[project]\nname = \"openai\"\nversion = \"1.59.6\"\ndescription = \"The official Python library for the openai API\"\ndynamic = [\"readme\"]\nlicense = \"Apache-2.0\"\nauthors = [\n{ name = \"OpenAI\", email = \"support@openai.com\" },\n]\ndependencies = [\n    \"httpx>=0.23.0, <1\",\n    \"pydantic>=1.9.0, <3\",\n    \"typing-extensions>=4.11, <5\",\n    \"anyio>=3.5.0, <5\",\n    \"distro>=1.7.0, <2\",\n    \"sniffio\",\n    \"tqdm > 4\",\n    \"jiter>=0.4.0, <1\",\n]\nrequires-python = \">= 3.8\"\nclassifiers = [\n  \"Typing :: Typed\",\n  \"Intended Audience :: Developers\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Operating System :: OS Independent\",\n  \"Operating System :: POSIX\",\n  \"Operating System :: MacOS\",\n  \"Operating System :: POSIX :: Linux\",\n  \"Operating System :: Microsoft :: Windows\",\n  \"Topic :: Software Development :: Libraries :: Python Modules\",\n  \"License :: OSI Approved :: Apache Software License\"\n]\n\n[project.urls]\nHomepage = \"https://github.com/openai/openai-python\"\nRepository = \"https://github.com/openai/openai-python\"\n\n[project.scripts]\nopenai = \"openai.cli:main\"\n\n[project.optional-dependencies]\nrealtime = [\"websockets >= 13, < 15\"]\ndatalib = [\"numpy >= 1\", \"pandas >= 1.2.3\", \"pandas-stubs >= 1.1.0.11\"]\n\n[tool.rye]\nmanaged = true\n# version pins are in requirements-dev.lock\ndev-dependencies = [\n    \"pyright>=1.1.359\",\n    \"mypy\",\n    \"respx\",\n    \"pytest\",\n    \"pytest-asyncio\",\n    \"ruff\",\n    \"time-machine\",\n    \"nox\",\n    \"dirty-equals>=0.6.0\",\n    \"importlib-metadata>=6.7.0\",\n    \"rich>=13.7.1\",\n    \"inline-snapshot >=0.7.0\",\n    \"azure-identity >=1.14.1\",\n    \"types-tqdm > 4\",\n    \"types-pyaudio > 0\",\n    \"trio >=0.22.2\",\n    \"nest_asyncio==1.6.0\",\n]\n\n[tool.rye.scripts]\nformat = { chain = [\n  \"format:ruff\",\n  \"format:docs\",\n  \"fix:ruff\",\n  # run formatting again to fix any inconsistencies when imports are stripped\n  \"format:ruff\",\n]}\n\"format:docs\" = \"python scripts/utils/ruffen-docs.py README.md api.md\"\n\"format:ruff\" = \"ruff format\"\n\n\"lint\" = { chain = [\n  \"check:ruff\",\n  \"typecheck\",\n  \"check:importable\",\n]}\n\"check:ruff\" = \"ruff check .\"\n\"fix:ruff\" = \"ruff check --fix .\"\n\n\"check:importable\" = \"python -c 'import openai'\"\n\ntypecheck = { chain = [\n  \"typecheck:pyright\",\n  \"typecheck:mypy\"\n]}\n\"typecheck:pyright\" = \"pyright\"\n\"typecheck:verify-types\" = \"pyright --verifytypes openai --ignoreexternal\"\n\"typecheck:mypy\" = \"mypy .\"\n\n[build-system]\nrequires = [\"hatchling\", \"hatch-fancy-pypi-readme\"]\nbuild-backend = \"hatchling.build\"\n\n[tool.hatch.build]\ninclude = [\n  \"src/*\"\n]\n\n[tool.hatch.build.targets.wheel]\npackages = [\"src/openai\"]\n\n[tool.hatch.build.targets.sdist]\n# Basically everything except hidden files/directories (such as .github, .devcontainers, .python-version, etc)\ninclude = [\n  \"/*.toml\",\n  \"/*.json\",\n  \"/*.lock\",\n  \"/*.md\",\n  \"/mypy.ini\",\n  \"/noxfile.py\",\n  \"bin/*\",\n  \"examples/*\",\n  \"src/*\",\n  \"tests/*\",\n]\n\n[tool.hatch.metadata.hooks.fancy-pypi-readme]\ncontent-type = \"text/markdown\"\n\n[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]\npath = \"README.md\"\n\n[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]\n# replace relative links with absolute links\npattern = '\\[(.+?)\\]\\(((?!https?://)\\S+?)\\)'\nreplacement = '[\\1](https://github.com/openai/openai-python/tree/main/\\g<2>)'\n\n[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\naddopts = \"--tb=short\"\nxfail_strict = true\nasyncio_mode = \"auto\"\nfilterwarnings = [\n  \"error\"\n]\n\n[tool.pyright]\n# this enables practically every flag given by pyright.\n# there are a couple of flags that are still disabled by\n# default in strict mode as they are experimental and niche.\ntypeCheckingMode = \"strict\"\npythonVersion = \"3.8\"\n\nexclude = [\n    \"_dev\",\n    \".venv\",\n    \".nox\",\n\n    # uses inline `uv` script dependencies\n    # which means it can't be type checked\n    \"examples/realtime/audio_util.py\",\n    \"examples/realtime/push_to_talk_app.py\"\n]\n\nreportImplicitOverride = true\n\nreportImportCycles = false\nreportPrivateUsage = false\n\n\n[tool.ruff]\nline-length = 120\noutput-format = \"grouped\"\ntarget-version = \"py37\"\n\n[tool.ruff.format]\ndocstring-code-format = true\n\n[tool.ruff.lint]\nselect = [\n  # isort\n  \"I\",\n  # bugbear rules\n  \"B\",\n  # remove unused imports\n  \"F401\",\n  # bare except statements\n  \"E722\",\n  # unused arguments\n  \"ARG\",\n  # print statements\n  \"T201\",\n  \"T203\",\n  # misuse of typing.TYPE_CHECKING\n  \"TCH004\",\n  # import rules\n  \"TID251\",\n]\nignore = [\n  # mutable defaults\n  \"B006\",\n]\nunfixable = [\n  # disable auto fix for print statements\n  \"T201\",\n  \"T203\",\n]\n\n[tool.ruff.lint.flake8-tidy-imports.banned-api]\n\"functools.lru_cache\".msg = \"This function does not retain type information for the wrapped function's arguments; The `lru_cache` function from `_utils` should be used instead\"\n\n[tool.ruff.lint.isort]\nlength-sort = true\nlength-sort-straight = true\ncombine-as-imports = true\nextra-standard-library = [\"typing_extensions\"]\nknown-first-party = [\"openai\", \"tests\"]\n\n[tool.ruff.lint.per-file-ignores]\n\"bin/**.py\" = [\"T201\", \"T203\"]\n\"scripts/**.py\" = [\"T201\", \"T203\"]\n\"tests/**.py\" = [\"T201\", \"T203\"]\n\"examples/**.py\" = [\"T201\", \"T203\"]\n"
        },
        {
          "name": "release-please-config.json",
          "type": "blob",
          "size": 1.291015625,
          "content": "{\n  \"packages\": {\n    \".\": {}\n  },\n  \"$schema\": \"https://raw.githubusercontent.com/stainless-api/release-please/main/schemas/config.json\",\n  \"include-v-in-tag\": true,\n  \"include-component-in-tag\": false,\n  \"versioning\": \"prerelease\",\n  \"prerelease\": true,\n  \"bump-minor-pre-major\": true,\n  \"bump-patch-for-minor-pre-major\": false,\n  \"pull-request-header\": \"Automated Release PR\",\n  \"pull-request-title-pattern\": \"release: ${version}\",\n  \"changelog-sections\": [\n    {\n      \"type\": \"feat\",\n      \"section\": \"Features\"\n    },\n    {\n      \"type\": \"fix\",\n      \"section\": \"Bug Fixes\"\n    },\n    {\n      \"type\": \"perf\",\n      \"section\": \"Performance Improvements\"\n    },\n    {\n      \"type\": \"revert\",\n      \"section\": \"Reverts\"\n    },\n    {\n      \"type\": \"chore\",\n      \"section\": \"Chores\"\n    },\n    {\n      \"type\": \"docs\",\n      \"section\": \"Documentation\"\n    },\n    {\n      \"type\": \"style\",\n      \"section\": \"Styles\"\n    },\n    {\n      \"type\": \"refactor\",\n      \"section\": \"Refactors\"\n    },\n    {\n      \"type\": \"test\",\n      \"section\": \"Tests\",\n      \"hidden\": true\n    },\n    {\n      \"type\": \"build\",\n      \"section\": \"Build System\"\n    },\n    {\n      \"type\": \"ci\",\n      \"section\": \"Continuous Integration\",\n      \"hidden\": true\n    }\n  ],\n  \"release-type\": \"python\",\n  \"extra-files\": [\n    \"src/openai/_version.py\"\n  ]\n}"
        },
        {
          "name": "requirements-dev.lock",
          "type": "blob",
          "size": 3.447265625,
          "content": "# generated by rye\n# use `rye lock` or `rye sync` to update this lockfile\n#\n# last locked with the following flags:\n#   pre: false\n#   features: []\n#   all-features: true\n#   with-sources: false\n#   generate-hashes: false\n\n-e file:.\nannotated-types==0.6.0\n    # via pydantic\nanyio==4.1.0\n    # via httpx\n    # via openai\nargcomplete==3.1.2\n    # via nox\nasttokens==2.4.1\n    # via inline-snapshot\nattrs==24.2.0\n    # via outcome\n    # via trio\nazure-core==1.31.0\n    # via azure-identity\nazure-identity==1.19.0\nblack==24.10.0\n    # via inline-snapshot\ncertifi==2023.7.22\n    # via httpcore\n    # via httpx\n    # via requests\ncffi==1.16.0\n    # via cryptography\ncharset-normalizer==3.3.2\n    # via requests\nclick==8.1.7\n    # via black\n    # via inline-snapshot\ncolorlog==6.7.0\n    # via nox\ncryptography==42.0.7\n    # via azure-identity\n    # via msal\n    # via pyjwt\ndirty-equals==0.6.0\ndistlib==0.3.7\n    # via virtualenv\ndistro==1.8.0\n    # via openai\nexceptiongroup==1.2.2\n    # via anyio\n    # via pytest\n    # via trio\nexecuting==2.1.0\n    # via inline-snapshot\nfilelock==3.12.4\n    # via virtualenv\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.2\n    # via httpx\nhttpx==0.28.1\n    # via openai\n    # via respx\nidna==3.4\n    # via anyio\n    # via httpx\n    # via requests\n    # via trio\nimportlib-metadata==7.0.0\niniconfig==2.0.0\n    # via pytest\ninline-snapshot==0.10.2\njiter==0.5.0\n    # via openai\nmarkdown-it-py==3.0.0\n    # via rich\nmdurl==0.1.2\n    # via markdown-it-py\nmsal==1.31.0\n    # via azure-identity\n    # via msal-extensions\nmsal-extensions==1.2.0\n    # via azure-identity\nmypy==1.13.0\nmypy-extensions==1.0.0\n    # via black\n    # via mypy\nnest-asyncio==1.6.0\nnodeenv==1.8.0\n    # via pyright\nnox==2023.4.22\nnumpy==1.26.3\n    # via openai\n    # via pandas\n    # via pandas-stubs\noutcome==1.3.0.post0\n    # via trio\npackaging==23.2\n    # via black\n    # via nox\n    # via pytest\npandas==2.1.4\n    # via openai\npandas-stubs==2.1.4.231227\n    # via openai\npathspec==0.12.1\n    # via black\nplatformdirs==3.11.0\n    # via black\n    # via virtualenv\npluggy==1.5.0\n    # via pytest\nportalocker==2.10.1\n    # via msal-extensions\npycparser==2.22\n    # via cffi\npydantic==2.10.3\n    # via openai\npydantic-core==2.27.1\n    # via pydantic\npygments==2.18.0\n    # via rich\npyjwt==2.8.0\n    # via msal\npyright==1.1.390\npytest==8.3.3\n    # via pytest-asyncio\npytest-asyncio==0.24.0\npython-dateutil==2.8.2\n    # via pandas\n    # via time-machine\npytz==2023.3.post1\n    # via dirty-equals\n    # via pandas\nrequests==2.31.0\n    # via azure-core\n    # via msal\nrespx==0.22.0\nrich==13.7.1\n    # via inline-snapshot\nruff==0.6.9\nsetuptools==68.2.2\n    # via nodeenv\nsix==1.16.0\n    # via asttokens\n    # via azure-core\n    # via python-dateutil\nsniffio==1.3.0\n    # via anyio\n    # via openai\n    # via trio\nsortedcontainers==2.4.0\n    # via trio\ntime-machine==2.9.0\ntoml==0.10.2\n    # via inline-snapshot\ntomli==2.0.2\n    # via black\n    # via mypy\n    # via pytest\ntqdm==4.66.5\n    # via openai\ntrio==0.27.0\ntypes-pyaudio==0.2.16.20240516\ntypes-pytz==2024.2.0.20241003\n    # via pandas-stubs\ntypes-toml==0.10.8.20240310\n    # via inline-snapshot\ntypes-tqdm==4.66.0.20240417\ntyping-extensions==4.12.2\n    # via azure-core\n    # via azure-identity\n    # via black\n    # via mypy\n    # via openai\n    # via pydantic\n    # via pydantic-core\n    # via pyright\ntzdata==2024.1\n    # via pandas\nurllib3==2.2.1\n    # via requests\nvirtualenv==20.24.5\n    # via nox\nwebsockets==14.1\n    # via openai\nzipp==3.17.0\n    # via importlib-metadata\n"
        },
        {
          "name": "requirements.lock",
          "type": "blob",
          "size": 1.1982421875,
          "content": "# generated by rye\n# use `rye lock` or `rye sync` to update this lockfile\n#\n# last locked with the following flags:\n#   pre: false\n#   features: []\n#   all-features: true\n#   with-sources: false\n#   generate-hashes: false\n\n-e file:.\nannotated-types==0.6.0\n    # via pydantic\nanyio==4.1.0\n    # via httpx\n    # via openai\ncertifi==2023.7.22\n    # via httpcore\n    # via httpx\ndistro==1.8.0\n    # via openai\nexceptiongroup==1.2.2\n    # via anyio\nh11==0.14.0\n    # via httpcore\nhttpcore==1.0.2\n    # via httpx\nhttpx==0.28.1\n    # via openai\nidna==3.4\n    # via anyio\n    # via httpx\njiter==0.6.1\n    # via openai\nnumpy==2.0.2\n    # via openai\n    # via pandas\n    # via pandas-stubs\npandas==2.2.3\n    # via openai\npandas-stubs==2.2.2.240807\n    # via openai\npydantic==2.10.3\n    # via openai\npydantic-core==2.27.1\n    # via pydantic\npython-dateutil==2.9.0.post0\n    # via pandas\npytz==2024.1\n    # via pandas\nsix==1.16.0\n    # via python-dateutil\nsniffio==1.3.0\n    # via anyio\n    # via openai\ntqdm==4.66.5\n    # via openai\ntypes-pytz==2024.2.0.20241003\n    # via pandas-stubs\ntyping-extensions==4.12.2\n    # via openai\n    # via pydantic\n    # via pydantic-core\ntzdata==2024.1\n    # via pandas\nwebsockets==14.1\n    # via openai\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}