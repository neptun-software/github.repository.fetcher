{
  "metadata": {
    "timestamp": 1736561225380,
    "page": 206,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iterative/dvc",
      "stars": 14069,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dvc",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dvcignore",
          "type": "blob",
          "size": 0.0205078125,
          "content": "/tests\n/dvc\n/.github\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.619140625,
          "content": "# The following commits will be ignored by the GitHub blame view.\n# You can configure `git blame` to use this file as the default ignore file:\n#     git config blame.ignoreRevsFile .git-blame-ignore-revs\n# or, you can also manually ignore commits from this file by doing:\n#     git blame --ignore-revs-file .git-blame-ignore-revs <filepath>\n# see the `blame.markIgnoredLines` and `blame.markUnblamableLines` options as well.\n# Refer to: https://git-scm.com/docs/git-blame#Documentation/git-blame.txt---ignore-revs-fileltfilegt\n\n# update black to 2023 stable style and change line-length to 88\na86470ccbc693d6f0a4f8066cbd1357e5191c4ff\n"
        },
        {
          "name": ".git_archival.txt",
          "type": "blob",
          "size": 0.1083984375,
          "content": "node: $Format:%H$\nnode-date: $Format:%cI$\ndescribe-name: $Format:%(describe:tags=true)$\nref-names: $Format:%D$\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03125,
          "content": ".git_archival.txt  export-subst\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.41015625,
          "content": "__pycache__/\nneatlynx.conf\n.idea\n/cache\n*.pyc\n\n.env*/\n.venv\nenv/\nvenv/\n.python-version\n\n.dvc.conf.lock\n.DS_Store\nbuild/\ndist/\n\n*.egg-info/\n.eggs\n\nhooks/*.pyc\n\n*.rpm\n*.deb\n\ninnosetup/config.ini\n\n*.exe\n\n.coverage\n.coverage.*\ncoverage.xml\n\n*.sw?\n\npip-wheel-metadata/\n.vscode/\n\nazurite\nenv.sh\ntests/remotes_env\nscripts/ci/gcp-creds.json\n.gcp-creds.json\n\n*~\n/dvc/_version.py\n\n.mypy_cache/\n.pytest_cache/\n.nox/\n.tox/\nhtmlcov/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.232421875,
          "content": "Paweł Redzyński <pawelredzynski@gmail.com>\nDmitry Petrov <dmitry.petrov@nevesomo.com>\nEarl Hathaway <github@earlh.com>\nNabanita Dash <dashnabanita@gmail.com>\nKurian Benoy <kurian.bkk@gmail.com>\nSritanu Chakraborty <sritanu25@gmail.com>\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.8408203125,
          "content": "default_language_version:\n  python: python3\n\nci:\n  skip: [mypy, dvc-pre-commit]\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-case-conflict\n      - id: check-executables-have-shebangs\n      - id: check-json\n      - id: check-merge-conflict\n        exclude: \"tests/func/utils/test_strict_yaml.py\"\n        args: ['--assume-in-merge']\n      - id: check-toml\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: mixed-line-ending\n      - id: sort-simple-yaml\n      - id: trailing-whitespace\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: 'v0.9.0'\n    hooks:\n      - id: ruff\n        args: [--fix, --exit-non-zero-on-fix]\n      - id: ruff-format\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      - id: codespell\n        additional_dependencies: [\"tomli\"]\n  - repo: local\n    hooks:\n    - id: mypy\n      name: mypy\n      entry: mypy\n      files: ^dvc/\n      language: system\n      types: [python]\n      require_serial: true\n  - hooks:\n      - args:\n          - git-hook\n          - pre-commit\n        entry: dvc\n        id: dvc-pre-commit\n        language: system\n        name: DVC pre-commit\n        stages:\n          - pre-commit\n        verbose: true\n        require_serial: true\n      - args:\n          - git-hook\n          - pre-push\n        entry: dvc\n        id: dvc-pre-push\n        language: system\n        name: DVC pre-push\n        stages:\n          - pre-push\n        require_serial: true\n      - always_run: true\n        args:\n          - git-hook\n          - post-checkout\n        entry: dvc\n        id: dvc-post-checkout\n        language: system\n        minimum_pre_commit_version: 2.2.0\n        name: DVC post-checkout\n        stages:\n          - post-checkout\n        require_serial: true\n    repo: local\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.6240234375,
          "content": "- args:\n  - git-hook\n  - pre-commit\n  entry: dvc\n  id: dvc-pre-commit\n  language: python\n  language_version: python3\n  name: DVC pre-commit\n  require_serial: true\n  stages:\n  - pre-commit\n  verbose: true\n- args:\n  - git-hook\n  - pre-push\n  entry: dvc\n  id: dvc-pre-push\n  language: python\n  language_version: python3\n  name: DVC pre-push\n  require_serial: true\n  stages:\n  - pre-push\n- always_run: true\n  args:\n  - git-hook\n  - post-checkout\n  entry: dvc\n  id: dvc-post-checkout\n  language: python\n  language_version: python3\n  minimum_pre_commit_version: 3.2.0\n  name: DVC post-checkout\n  require_serial: true\n  stages:\n  - post-checkout\n"
        },
        {
          "name": ".zenodo.json",
          "type": "blob",
          "size": 0.314453125,
          "content": "{\n  \"title\": \"DVC: Data Version Control - Git for Data & Models\",\n  \"keywords\": [\n    \"data-science\", \"data-version-control\", \"machine-learning\", \"git\",\n    \"developer-tools\", \"reproducibility\", \"collaboration\", \"ai\", \"python\"],\n  \"contributors\": [\n    {\"name\": \"DVC team\", \"type\": \"Other\", \"affiliation\": \"Iterative\"}]\n}\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.765625,
          "content": "cff-version: 1.2.0\ntitle: 'DVC: Data Version Control - Git for Data & Models\"'\nmessage: >-\n  If you use this software as part of a publication and wish\n  to cite it, please use the metadata from this file.\ntype: software\nauthors:\n  - name: The DVC team and contributors\n    website: 'https://github.com/iterative'\nrepository-code: 'https://github.com/iterative/dvc'\nurl: 'https://dvc.org'\nabstract: >-\n  DVC is a tool for data science that takes advantage of existing software engineering toolset.\n  It helps machine learning teams manage large datasets, make projects reproducible, and collaborate better.\nkeywords:\n  - ai\n  - collaboration\n  - data-science\n  - data-version-control\n  - developer-tools\n  - git\n  - machine-learning\n  - python\n  - reproducibility\nlicense: Apache-2.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2685546875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at info@dvc.org. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.0927734375,
          "content": "### See our contribution guide at [dvc.org](https://dvc.org/doc/user-guide/contributing/core).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.083984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017-2021 Iterative, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 13.115234375,
          "content": "🚀 Check out our new product `DataChain <https://github.com/iterative/datachain>`_ (and give it a ⭐!) if you need to version and process a large number of files. Contact us at support@iterative.ai to discuss commercial solutions and support for AI reproducibility and data management scenarios.\n\n--------------------------\n\n`Website <https://dvc.org>`_\n• `Docs <https://dvc.org/doc>`_\n• `Blog <http://blog.dataversioncontrol.com>`_\n• `Tutorial <https://dvc.org/doc/get-started>`_\n• `Related Technologies <https://dvc.org/doc/user-guide/related-technologies>`_\n• `How DVC works`_\n• `VS Code Extension`_\n• `Installation`_\n• `Contributing`_\n• `Community and Support`_\n\n|CI| |Python Version| |Coverage| |VS Code| |DOI|\n\n|PyPI| |PyPI Downloads| |Packages| |Brew| |Conda| |Choco| |Snap|\n\n|\n\n**Data Version Control** or **DVC** is a command line tool and `VS Code Extension`_ to help you develop reproducible machine learning projects:\n\n#. **Version** your data and models.\n   Store them in your cloud storage but keep their version info in your Git repo.\n\n#. **Iterate** fast with lightweight pipelines.\n   When you make changes, only run the steps impacted by those changes.\n\n#. **Track** experiments in your local Git repo (no servers needed).\n\n#. **Compare** any data, code, parameters, model, or performance plots.\n\n#. **Share** experiments and automatically reproduce anyone's experiment.\n\nQuick start\n===========\n\n    Please read our `Command Reference <https://dvc.org/doc/command-reference>`_ for a complete list.\n\nA common CLI workflow includes:\n\n\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n| Task                              | Terminal                                                                                           |\n+===================================+====================================================================================================+\n| Track data                        | | ``$ git add train.py params.yaml``                                                               |\n|                                   | | ``$ dvc add images/``                                                                            |\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n| Connect code and data             | | ``$ dvc stage add -n featurize -d images/ -o features/ python featurize.py``                     |\n|                                   | | ``$ dvc stage add -n train -d features/ -d train.py -o model.p -M metrics.json python train.py`` |\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n| Make changes and experiment       | | ``$ dvc exp run -n exp-baseline``                                                                |\n|                                   | | ``$ vi train.py``                                                                                |\n|                                   | | ``$ dvc exp run -n exp-code-change``                                                             |\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n| Compare and select experiments    | | ``$ dvc exp show``                                                                               |\n|                                   | | ``$ dvc exp apply exp-baseline``                                                                 |\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n| Share code                        | | ``$ git add .``                                                                                  |\n|                                   | | ``$ git commit -m 'The baseline model'``                                                         |\n|                                   | | ``$ git push``                                                                                   |\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n| Share data and ML models          | | ``$ dvc remote add myremote -d s3://mybucket/image_cnn``                                         |\n|                                   | | ``$ dvc push``                                                                                   |\n+-----------------------------------+----------------------------------------------------------------------------------------------------+\n\nHow DVC works\n=============\n\n    We encourage you to read our `Get Started\n    <https://dvc.org/doc/get-started>`_ docs to better understand what DVC\n    does and how it can fit your scenarios.\n\nThe closest *analogies* to describe the main DVC features are these:\n\n#. **Git for data**: Store and share data artifacts (like Git-LFS but without a server) and models, connecting them with a Git repository. Data management meets GitOps!\n#. **Makefiles** for ML: Describes how data or model artifacts are built from other data and code in a standard format. Now you can version your data pipelines with Git.\n#. Local **experiment tracking**: Turn your machine into an ML experiment management platform, and collaborate with others using existing Git hosting (Github, Gitlab, etc.).\n\nGit is employed as usual to store and version code (including DVC meta-files as placeholders for data).\nDVC `stores data and model files <https://dvc.org/doc/start/data-management>`_ seamlessly in a cache outside of Git, while preserving almost the same user experience as if they were in the repo.\nTo share and back up the *data cache*, DVC supports multiple remote storage platforms - any cloud (S3, Azure, Google Cloud, etc.) or on-premise network storage (via SSH, for example).\n\n|Flowchart|\n\n`DVC pipelines <https://dvc.org/doc/start/data-management/data-pipelines>`_ (computational graphs) connect code and data together.\nThey specify all steps required to produce a model: input dependencies including code, data, commands to run; and output information to be saved.\n\nLast but not least, `DVC Experiment Versioning <https://dvc.org/doc/start/experiments>`_ lets you prepare and run a large number of experiments.\nTheir results can be filtered and compared based on hyperparameters and metrics, and visualized with multiple plots.\n\n.. _`VS Code Extension`:\n\nVS Code Extension\n=================\n\n|VS Code|\n\nTo use DVC as a GUI right from your VS Code IDE, install the `DVC Extension <https://marketplace.visualstudio.com/items?itemName=Iterative.dvc>`_ from the Marketplace.\nIt currently features experiment tracking and data management, and more features (data pipeline support, etc.) are coming soon!\n\n|VS Code Extension Overview|\n\n    Note: You'll have to install core DVC on your system separately (as detailed\n    below). The Extension will guide you if needed.\n\nInstallation\n============\n\nThere are several ways to install DVC: in VS Code; using ``snap``, ``choco``, ``brew``, ``conda``, ``pip``; or with an OS-specific package.\nFull instructions are `available here <https://dvc.org/doc/get-started/install>`_.\n\nSnapcraft (Linux)\n-----------------\n\n|Snap|\n\n.. code-block:: bash\n\n   snap install dvc --classic\n\nThis corresponds to the latest tagged release.\nAdd ``--beta`` for the latest tagged release candidate, or ``--edge`` for the latest ``main`` version.\n\nChocolatey (Windows)\n--------------------\n\n|Choco|\n\n.. code-block:: bash\n\n   choco install dvc\n\nBrew (mac OS)\n-------------\n\n|Brew|\n\n.. code-block:: bash\n\n   brew install dvc\n\nAnaconda (Any platform)\n-----------------------\n\n|Conda|\n\n.. code-block:: bash\n\n   conda install -c conda-forge mamba # installs much faster than conda\n   mamba install -c conda-forge dvc\n\nDepending on the remote storage type you plan to use to keep and share your data, you might need to install optional dependencies: `dvc-s3`, `dvc-azure`, `dvc-gdrive`, `dvc-gs`, `dvc-oss`, `dvc-ssh`.\n\nPyPI (Python)\n-------------\n\n|PyPI|\n\n.. code-block:: bash\n\n   pip install dvc\n\nDepending on the remote storage type you plan to use to keep and share your data, you might need to specify one of the optional dependencies: ``s3``, ``gs``, ``azure``, ``oss``, ``ssh``. Or ``all`` to include them all.\nThe command should look like this: ``pip install 'dvc[s3]'`` (in this case AWS S3 dependencies such as ``boto3`` will be installed automatically).\n\nTo install the development version, run:\n\n.. code-block:: bash\n\n   pip install git+git://github.com/iterative/dvc\n\nPackage (Platform-specific)\n---------------------------\n\n|Packages|\n\nSelf-contained packages for Linux, Windows, and Mac are available.\nThe latest version of the packages can be found on the GitHub `releases page <https://github.com/iterative/dvc/releases>`_.\n\nUbuntu / Debian (deb)\n^^^^^^^^^^^^^^^^^^^^^\n.. code-block:: bash\n\n   sudo wget https://dvc.org/deb/dvc.list -O /etc/apt/sources.list.d/dvc.list\n   wget -qO - https://dvc.org/deb/iterative.asc | sudo apt-key add -\n   sudo apt update\n   sudo apt install dvc\n\nFedora / CentOS (rpm)\n^^^^^^^^^^^^^^^^^^^^^\n.. code-block:: bash\n\n   sudo wget https://dvc.org/rpm/dvc.repo -O /etc/yum.repos.d/dvc.repo\n   sudo rpm --import https://dvc.org/rpm/iterative.asc\n   sudo yum update\n   sudo yum install dvc\n\nContributing\n============\n\n|Maintainability|\n\nContributions are welcome!\nPlease see our `Contributing Guide <https://dvc.org/doc/user-guide/contributing/core>`_ for more details.\nThanks to all our contributors!\n\n|Contribs|\n\nCommunity and Support\n=====================\n\n* `Twitter <https://twitter.com/DVCorg>`_\n* `Forum <https://discuss.dvc.org/>`_\n* `Discord Chat <https://dvc.org/chat>`_\n* `Email <mailto:support@dvc.org>`_\n* `Mailing List <https://sweedom.us10.list-manage.com/subscribe/post?u=a08bf93caae4063c4e6a351f6&id=24c0ecc49a>`_\n\nCopyright\n=========\n\nThis project is distributed under the Apache license version 2.0 (see the LICENSE file in the project root).\n\nBy submitting a pull request to this project, you agree to license your contribution under the Apache license version 2.0 to this project.\n\nCitation\n========\n\n|DOI|\n\nIterative, *DVC: Data Version Control - Git for Data & Models* (2020)\n`DOI:10.5281/zenodo.012345 <https://doi.org/10.5281/zenodo.3677553>`_.\n\nBarrak, A., Eghan, E.E. and Adams, B. `On the Co-evolution of ML Pipelines and Source Code - Empirical Study of DVC Projects <https://mcis.cs.queensu.ca/publications/2021/saner.pdf>`_ , in Proceedings of the 28th IEEE International Conference on Software Analysis, Evolution, and Reengineering, SANER 2021. Hawaii, USA.\n\n\n.. |Banner| image:: https://dvc.org/img/logo-github-readme.png\n   :target: https://dvc.org\n   :alt: DVC logo\n\n.. |VS Code Extension Overview| image:: https://raw.githubusercontent.com/iterative/vscode-dvc/main/extension/docs/overview.gif\n   :alt: DVC Extension for VS Code\n\n.. |CI| image:: https://github.com/iterative/dvc/workflows/Tests/badge.svg?branch=main\n   :target: https://github.com/iterative/dvc/actions\n   :alt: GHA Tests\n\n.. |Maintainability| image:: https://codeclimate.com/github/iterative/dvc/badges/gpa.svg\n   :target: https://codeclimate.com/github/iterative/dvc\n   :alt: Code Climate\n\n.. |Python Version| image:: https://img.shields.io/pypi/pyversions/dvc\n   :target: https://pypi.org/project/dvc\n   :alt: Python Version\n\n.. |Coverage| image:: https://codecov.io/gh/iterative/dvc/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/iterative/dvc\n   :alt: Codecov\n\n.. |Snap| image:: https://img.shields.io/badge/snap-install-82BEA0.svg?logo=snapcraft\n   :target: https://snapcraft.io/dvc\n   :alt: Snapcraft\n\n.. |Choco| image:: https://img.shields.io/chocolatey/v/dvc?label=choco\n   :target: https://chocolatey.org/packages/dvc\n   :alt: Chocolatey\n\n.. |Brew| image:: https://img.shields.io/homebrew/v/dvc?label=brew\n   :target: https://formulae.brew.sh/formula/dvc\n   :alt: Homebrew\n\n.. |Conda| image:: https://img.shields.io/conda/v/conda-forge/dvc.svg?label=conda&logo=conda-forge\n   :target: https://anaconda.org/conda-forge/dvc\n   :alt: Conda-forge\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/dvc.svg?label=pip&logo=PyPI&logoColor=white\n   :target: https://pypi.org/project/dvc\n   :alt: PyPI\n\n.. |PyPI Downloads| image:: https://img.shields.io/pypi/dm/dvc.svg?color=blue&label=Downloads&logo=pypi&logoColor=gold\n   :target: https://pypi.org/project/dvc\n   :alt: PyPI Downloads\n\n.. |Packages| image:: https://img.shields.io/badge/deb|pkg|rpm|exe-blue\n   :target: https://dvc.org/doc/install\n   :alt: deb|pkg|rpm|exe\n\n.. |DOI| image:: https://img.shields.io/badge/DOI-10.5281/zenodo.3677553-blue.svg\n   :target: https://doi.org/10.5281/zenodo.3677553\n   :alt: DOI\n\n.. |Flowchart| image:: https://dvc.org/img/flow.gif\n   :target: https://dvc.org/img/flow.gif\n   :alt: how_dvc_works\n\n.. |Contribs| image:: https://contrib.rocks/image?repo=iterative/dvc\n   :target: https://github.com/iterative/dvc/graphs/contributors\n   :alt: Contributors\n\n.. |VS Code| image:: https://img.shields.io/visual-studio-marketplace/v/Iterative.dvc?color=blue&label=VSCode&logo=visualstudiocode&logoColor=blue\n   :target: https://marketplace.visualstudio.com/items?itemName=Iterative.dvc\n   :alt: VS Code Extension\n"
        },
        {
          "name": "dvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 8.27734375,
          "content": "[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\"setuptools>=61\", \"setuptools_scm[toml]>=7\"]\n\n[project]\nname = \"dvc\"\ndescription = \"Git for data scientists - manage your code and data together\"\nreadme = \"README.rst\"\nkeywords = [\n    \"ai\",\n    \"collaboration\",\n    \"data-science\",\n    \"data-version-control\",\n    \"developer-tools\",\n    \"git\",\n    \"machine-learning\",\n    \"reproducibility\",\n]\nlicense = { text = \"Apache License 2.0\" }\nmaintainers = [{ name = \"Iterative\", email = \"support@dvc.org\" }]\nauthors = [{ name = \"Dmitry Petrov\", email = \"dmitry@dvc.org\" }]\nrequires-python = \">=3.9\"\nclassifiers = [\n    \"Development Status :: 4 - Beta\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n]\ndynamic = [\"version\"]\n\ndependencies = [\n    \"attrs>=22.2.0\",\n    \"celery\",\n    \"colorama>=0.3.9\",\n    \"configobj>=5.0.9\",\n    \"distro>=1.3\",\n    \"dpath<3,>=2.1.0\",\n    \"dulwich\",\n    \"dvc-data>=3.16.2,<3.17\",\n    \"dvc-http>=2.29.0\",\n    \"dvc-objects\",\n    \"dvc-render>=1.0.1,<2\",\n    \"dvc-studio-client>=0.21,<1\",\n    \"dvc-task>=0.3.0,<1\",\n    \"flatten_dict<1,>=0.4.1\",\n    \"flufl.lock>=8.1.0,<9\",\n    \"fsspec>=2024.2.0\",\n    \"funcy>=1.14\",\n    \"grandalf<1,>=0.7\",\n    \"gto>=1.6.0,<2\",\n    \"hydra-core>=1.1\",\n    \"iterative-telemetry>=0.0.7\",\n    \"kombu\",\n    \"networkx>=2.5\",\n    \"omegaconf\",\n    \"packaging>=19\",\n    \"pathspec>=0.10.3\",\n    \"platformdirs<5,>=3.1.1\",\n    \"psutil>=5.8\",\n    \"pydot>=1.2.4\",\n    \"pygtrie>=2.3.2\",\n    \"pyparsing>=2.4.7\",\n    \"requests>=2.22\",\n    \"rich>=12\",\n    \"ruamel.yaml>=0.17.11\",\n    \"scmrepo>=3.3.8,<4\",\n    \"shortuuid>=0.5\",\n    \"shtab<2,>=1.3.4\",\n    \"tabulate>=0.8.7\",\n    \"tomlkit>=0.11.1\",\n    \"tqdm<5,>=4.63.1\",\n    \"voluptuous>=0.11.7\",\n    \"zc.lockfile>=1.2.1\",\n]\n\n[project.optional-dependencies]\nall = [\"dvc[azure,gdrive,gs,hdfs,oss,s3,ssh,webdav,webhdfs]\"]\nazure = [\"dvc-azure>=3.1.0,<4\"]\ndev = [\"dvc[azure,gdrive,gs,hdfs,lint,oss,s3,ssh,tests,webdav,webhdfs]\"]\ngdrive = [\"dvc-gdrive>=3,<4\"]\ngs = [\"dvc-gs>=3,<4\"]\nhdfs = [\"dvc-hdfs>=3,<4\"]\nlint = [\n    \"mypy==1.14.1\",\n    \"pandas-stubs\",\n    \"types-colorama\",\n    \"types-psutil\",\n    \"types-pyinstaller\",\n    \"types-requests\",\n    \"types-tabulate\",\n    \"types-toml\",\n    \"types-tqdm\",\n    \"typing-extensions\",\n]\noss = [\"dvc-oss>=3,<4\"]\ns3 = [\"dvc-s3>=3.2.0,<4\"]\nssh = [\"dvc-ssh>=4,<5\"]\nssh_gssapi = [\"dvc-ssh[gssapi]>=4,<5\"]\ntesting = [\n  \"pytest-benchmark[histogram]>=5,<6\",\n  \"pytest-test-utils\",\n  \"uv\",\n]\ntests = [\n    \"dvc[testing]\",\n    \"beautifulsoup4>=4.4\",\n    \"dvc-ssh\",\n    \"filelock\",\n    \"pytest>=7,<9\",\n    \"pytest-rerunfailures\",\n    \"pytest-cov>=4.1.0\",\n    \"pytest-docker>=1,<4\",\n    \"pytest-mock\",\n    \"pytest-test-utils\",\n    \"pytest-timeout>=2\",\n    \"pytest-xdist>=3.2\",\n    'pywin32>=225; sys_platform == \"win32\"', # optional test dependency\n    'tzdata; sys_platform == \"win32\"',  # for testing with celery\n    \"sqlalchemy>=1,<3\", # optional dependency for `import-db`\n    \"pandas>=1\", # optional dependency for `import-db`\n]\nwebdav = [\"dvc-webdav>=3,<4\"]\nwebhdfs = [\"dvc-webhdfs>=3.1,<4\"]\nwebhdfs_kerberos = [\"dvc-webhdfs[kerberos]>=3.1,<4\"]\n\n[project.urls]\nDocumentation = \"https://dvc.org/doc\"\nIssues = \"https://github.com/iterative/dvc/issues\"\nSource = \"https://github.com/iterative/dvc\"\n\n[project.scripts]\ndvc = \"dvc.cli:main\"\n\n[project.entry-points.\"fsspec.specs\"]\ndvc = \"dvc.api:DVCFileSystem\"\n\n[project.entry-points.\"universal_pathlib.implementations\"]\ndvc = \"dvc.fs.dvc_path:DVCPath\"\n# universal_pathlib does not support fsspec url chaining yet.\n# see https://github.com/fsspec/universal_pathlib/issues/28.\n\"dvc+http\" = \"dvc.fs.dvc_path:DVCPath\"\n\"dvc+https\" = \"dvc.fs.dvc_path:DVCPath\"\n\"dvc+ssh\" = \"dvc.fs.dvc_path:DVCPath\"\n\n[project.entry-points.\"pyinstaller40\"]\nhook-dirs = \"dvc.__pyinstaller:get_hook_dirs\"\ntests = \"dvc.__pyinstaller:get_PyInstaller_tests\"\n\n[tool.setuptools]\nlicense-files = [\"LICENSE\"]\n\n[tool.setuptools.packages.find]\nexclude = [\"tests\", \"tests.*\"]\nnamespaces = false\n\n[tool.setuptools_scm]\nwrite_to = \"dvc/_version.py\"\n\n[tool.pytest.ini_options]\naddopts = \"-ra --cov-config pyproject.toml\"\nfilterwarnings = [\n    \"error::ResourceWarning\",\n    \"error::pytest.PytestUnraisableExceptionWarning\",\n    \"error::pytest_mock.PytestMockWarning\",\n    # https://github.com/boto/botocore/issues/2744\n    \"ignore:'urllib3.contrib.pyopenssl' module is deprecated:DeprecationWarning\",\n    # google.cloud: https://github.com/googleapis/python-storage/issues/1000\n    # google.logging: https://github.com/googleapis/python-logging/issues/730\n    # Also happens with `zc.lockfile`.\n    \"ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning\",\n    # see https://github.com/networkx/networkx/issues/5723.\n    \"ignore:nx.nx_pydot.* depends on the pydot package, which has.*known issues and is not actively maintained:DeprecationWarning\",\n    # TODO: investigate where we are not closing sqlite3.Connection\n    \"ignore:unclosed database.*sqlite3.Connection:ResourceWarning\",\n]\nlog_level = \"debug\"\nmarkers = [\n    \"needs_internet: Might need network access for the tests\",\n    \"studio: Tests verifying contract between DVC and Studio\",\n    \"vscode: Tests verifying contract between DVC and VSCode plugin\",\n]\ntestpaths = [\"tests\"]\nxfail_strict = true\n\n[tool.coverage.run]\nbranch = true\nsource = [\"dvc\", \"tests\"]\n\n[tool.coverage.paths]\nsource = [\"dvc\"]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"if __name__ == .__main__.:\",\n    \"if TYPE_CHECKING:\",\n    \"if typing.TYPE_CHECKING:\",\n    \"@overload\",\n    \"pragma: no cover\",\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n]\nshow_missing = true\n\n[tool.mypy]\ncheck_untyped_defs = true\nfiles = [\"dvc\"]\nno_implicit_optional = true\npretty = true\nshow_column_numbers = true\nshow_error_codes = true\nshow_error_context = true\nshow_traceback = true\nstrict_equality = true\nextra_checks = true\nwarn_no_return = true\nwarn_redundant_casts = true\nwarn_unreachable = true\nwarn_unused_configs = true\n\n[[tool.mypy.overrides]]\nignore_missing_imports = true\nmodule = [\n    \"agate.*\",\n    \"celery.*\",\n    \"configobj.*\",\n    \"dpath.*\",\n    \"distro\",\n    \"dvc_http\",\n    \"dvc_render.*\",\n    \"dvc_ssh\",\n    \"dvc_studio_client.*\",\n    \"flatten_dict\",\n    \"fsspec.*\",\n    \"funcy.*\",  # https://github.com/Suor/funcy/issues/106,\n    \"grandalf.*\",\n    \"ipdb\",\n    \"iterative_telemetry\",\n    \"kombu.*\",\n    \"networkx.*\",  # https://github.com/networkx/networkx/issues/3988\n    \"pygtrie.*\",\n    \"pyinstrument\",\n    \"pyparsing\",\n    \"pytest_benchmark.*\",\n    \"pytest_docker.plugin\",\n    \"ruamel.*\",\n    \"ruamel.yaml.*\",\n    \"shortuuid\",\n    \"shtab\",\n    \"upath\",\n    \"virtualenv\",\n    \"viztracer\",\n    \"voluptuous\",\n    \"yappi\",\n    \"zc.*\",\n]\n\n[tool.codespell]\nignore-words-list = \"ba,datas,fo,uptodate,cachable,falsy\"\nskip = \"CODE_OF_CONDUCT.md\"\n\n[tool.ruff]\noutput-format = \"full\"\nshow-fixes = true\n\n[tool.ruff.lint]\nignore = [\n    \"N818\", \"S101\", \"A005\", \"PT007\", \"RET502\", \"RET503\", \"SIM105\", \"SIM108\", \"SIM117\",\n    \"TRY003\", \"TRY300\", \"PERF203\", \"PLR2004\", \"PLW2901\", \"LOG007\",\n]\nselect = [\n    \"F\", \"E\", \"W\", \"C90\", \"I\", \"N\", \"UP\", \"YTT\", \"ASYNC\", \"S\", \"BLE\", \"B\", \"A\", \"C4\", \"DTZ\", \"T10\",\n    \"EXE\", \"ISC\", \"ICN\", \"LOG\", \"G\", \"INP\", \"PIE\", \"T20\", \"PYI\", \"PT\", \"Q\", \"RSE\", \"RET\",\n    \"SLOT\", \"SIM\", \"TID\", \"TC\", \"ARG\", \"PGH\", \"PLC\", \"PLE\", \"PLR\", \"PLW\", \"TRY\",\n    \"FLY\", \"PERF\", \"FURB\", \"RUF\", \"RUF027\", \"RUF029\", \"RUF036\",\n]\npreview = true\nexplicit-preview-rules = true\n\n[tool.ruff.lint.flake8-pytest-style]\nparametrize-names-type = \"csv\"\nraises-extend-require-match-for = [\"dvc.exceptions.DvcException\", \"dvc.scm.SCMError\", \"scmrepo.exceptions.SCMError\"]\n\n[tool.ruff.lint.flake8-tidy-imports]\n[tool.ruff.lint.flake8-tidy-imports.banned-api]\n\"funcy.cached_property\" = {msg = \"use `from dvc.utils.objects import cached_property` instead.\"}\n\n[tool.ruff.lint.flake8-type-checking]\nstrict = true\n\n[tool.ruff.lint.flake8-unused-arguments]\nignore-variadic-names = true\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"dvc\", \"dvc_*\", \"tests\"]\n\n[tool.ruff.lint.pep8-naming]\nextend-ignore-names = [\"M\", \"SCM\"]\n\n[tool.ruff.lint.pylint]\nmax-args = 10\n\n[tool.ruff.lint.per-file-ignores]\n\"dvc/commands/**\" = [\"N806\"]\n\"dvc/testing/**\" = [\"ARG002\"]\n\"dvc/testing/benchmarks/**\" = [\"ARG001\"]\n\"tests/**\" = [\"S\", \"ARG001\", \"ARG002\", \"TRY002\", \"TRY301\", \"PERF\"]\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}