{
  "metadata": {
    "timestamp": 1736561124993,
    "page": 64,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "unslothai/unsloth",
      "stars": 20269,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2099609375,
          "content": "# 🦥 Contributing to Unsloth\n\nThank you for not only using Unsloth but also for being interested in helping out! We value all contributions, whether they come in the form of code, ideas, support for others or just by simply spreading the word of Unsloth! 💕\n\n- **[Support the Community](https://github.com/unslothai/unsloth/issues)**: Answer questions, review pull requests, or assist others in discussions.\n- **Fix Bugs**: Identify and resolve issues with the existing codebase.  \n- **Submit Ideas**: Request new features or share enhancements you'd like to see.  \n- **Develop Features**: Implement new functionality or improve existing tools which can be done via PRs.\n- **[Improve Documentation](https://docs.unsloth.ai/)**: Help by creating guides, FAQs, or enhancing clarity.\n\nOne of the best ways to support us is by spreading the word about Unsloth! Share how it’s powering your amazing projects in blog posts or social media, and inspire others to explore its potential. Even a simple star on our repo goes a long way in showing your support and helping the community grow. 🌟\n\n## Submitting Issues  \nIf you find a bug or have a feature idea, we’d love to hear from you! Here’s how to make your submission stand out:  \n\n### Reporting Bugs  \n1. **Search First**: Check if the issue has already been reported using GitHub’s search bar under Issues.  \n2. **Details Matter**: Is this on Google Colab, Kaggle, or on another platform service? Are you using Unsloth's official notebook? Include your OS, Python version, and other relevant details. For bugs, a concise code snippet that reproduces the issue is incredibly helpful.  \n3. **Be Thorough**: Attach screenshots, traceback logs, or any additional information that might speed up resolution.\n\n## Spread the Word\nYour support extends beyond code:  \n- Spread the word by writing about Unsloth in blogs or social media.  \n- Share how Unsloth powers your projects.  \n- Star our repository to show your appreciation.  \n\nFinally, please be mindful of our [Code of Conduct](https://github.com/unslothai/unsloth/tree/main/unsloth/CODE_OF_CONDUCT.md) to ensure a welcoming and inclusive environment for everyone.  \n\nThank you so much for reading and we hope you have lots of fun using Unsloth! 🦥\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1142578125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2024-] [Unsloth AI, Daniel Han-Chen & Michael Han-Chen]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 30.9345703125,
          "content": "<div align=\"center\">\n\n  <a href=\"https://unsloth.ai\"><picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/unslothai/unsloth/main/images/unsloth%20logo%20white%20text.png\">\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/unslothai/unsloth/main/images/unsloth%20logo%20black%20text.png\">\n    <img alt=\"unsloth logo\" src=\"https://raw.githubusercontent.com/unslothai/unsloth/main/images/unsloth%20logo%20black%20text.png\" height=\"110\" style=\"max-width: 100%;\">\n  </picture></a>\n  \n<a href=\"https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3.1_(8B)-Alpaca.ipynb\"><img src=\"https://raw.githubusercontent.com/unslothai/unsloth/main/images/start free finetune button.png\" height=\"48\"></a>\n<a href=\"https://discord.gg/unsloth\"><img src=\"https://raw.githubusercontent.com/unslothai/unsloth/main/images/Discord button.png\" height=\"48\"></a>\n<a href=\"https://docs.unsloth.ai\"><img src=\"https://raw.githubusercontent.com/unslothai/unsloth/refs/heads/main/images/Documentation%20Button.png\" height=\"48\"></a>\n\n### Finetune Llama 3.2, Mistral, Phi-3.5, Qwen 2.5 & Gemma 2-5x faster with 80% less memory!\n\n![](https://i.ibb.co/sJ7RhGG/image-41.png)\n\n</div>\n\n## ✨ Finetune for Free\n\nAll notebooks are **beginner friendly**! Add your dataset, click \"Run All\", and you'll get a 2x faster finetuned model which can be exported to GGUF, Ollama, vLLM or uploaded to Hugging Face.\n\n| Unsloth supports | Free Notebooks | Performance | Memory use |\n|-----------|---------|--------|----------|\n| **Llama 3.2 (3B)**      | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3.2_(1B_and_3B)-Conversational.ipynb)               | 2x faster | 60% less |\n| **Phi-4** | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Phi_4-Conversational.ipynb)               | 2x faster | 50% less |\n| **Llama 3.2 Vision (11B)**      | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3.2_(11B)-Vision.ipynb)               | 2x faster | 40% less |\n| **Llama 3.1 (8B)**      | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3.1_(8B)-Alpaca.ipynb)               | 2x faster | 60% less |\n| **Gemma 2 (9B)**      | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Gemma2_(9B)-Alpaca.ipynb)               | 2x faster | 63% less |\n| **Qwen 2.5 (7B)**      | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Qwen2.5_(7B)-Alpaca.ipynb)               | 2x faster | 63% less |\n| **Mistral v0.3 (7B)**    | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Mistral_v0.3_(7B)-Conversational.ipynb)               | 2.2x faster | 73% less |\n| **Ollama**     | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3_(8B)-Ollama.ipynb)               | 1.9x faster | 43% less |\n| **ORPO**     | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3_(8B)-ORPO.ipynb)               | 1.9x faster | 43% less |\n| **DPO Zephyr**     | [▶️ Start for free](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Zephyr_(7B)-DPO.ipynb)               | 1.9x faster | 43% less |\n\n- See [all our notebooks](https://docs.unsloth.ai/get-started/unsloth-notebooks) and [all our models](https://docs.unsloth.ai/get-started/all-our-models)\n- **Kaggle Notebooks** for [Llama 3.2 Kaggle notebook](https://www.kaggle.com/danielhanchen/kaggle-llama-3-2-1b-3b-unsloth-notebook), [Llama 3.1 (8B)](https://www.kaggle.com/danielhanchen/kaggle-llama-3-1-8b-unsloth-notebook), [Gemma 2 (9B)](https://www.kaggle.com/code/danielhanchen/kaggle-gemma-7b-unsloth-notebook/), [Mistral (7B)](https://www.kaggle.com/code/danielhanchen/kaggle-mistral-7b-unsloth-notebook)\n- Run notebooks for [Llama 3.2 conversational](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Llama3.2_(1B_and_3B)-Conversational.ipynb), [Llama 3.1 conversational](https://colab.research.google.com/drive/15OyFkGoCImV9dSsewU1wa2JuKB4-mDE_?usp=sharing) and [Mistral v0.3 ChatML](https://colab.research.google.com/drive/15F1xyn8497_dUbxZP4zWmPZ3PJx1Oymv?usp=sharing)\n- This [text completion notebook](https://colab.research.google.com/drive/1ef-tab5bhkvWmBOObepl1WgJvfvSzn5Q?usp=sharing) is for continued pretraining / raw text\n- This [continued pretraining notebook](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Mistral_v0.3_(7B)-CPT.ipynb) is for learning another language\n- Click [here](https://docs.unsloth.ai/) for detailed documentation for Unsloth.\n\n## 🦥 Unsloth.ai News\n- 📣 NEW! [Phi-4](https://unsloth.ai/blog/phi4) by Microsoft is now supported. We also [fixed bugs](https://unsloth.ai/blog/phi4) in Phi-4 and [uploaded GGUFs, 4-bit](https://huggingface.co/collections/unsloth/phi-4-all-versions-677eecf93784e61afe762afa). Try the [Phi-4 Colab notebook](https://colab.research.google.com/github/unslothai/notebooks/blob/main/nb/Phi_4-Conversational.ipynb)\n- 📣 NEW! [Llama 3.3 (70B)](https://huggingface.co/collections/unsloth/llama-33-all-versions-67535d7d994794b9d7cf5e9f), Meta's latest model is supported.\n- 📣 NEW! We worked with Apple to add [Cut Cross Entropy](https://arxiv.org/abs/2411.09009). Unsloth now supports 89K context for Meta's Llama 3.3 (70B) on a 80GB GPU - 13x longer than HF+FA2. For Llama 3.1 (8B), Unsloth enables 342K context, surpassing its native 128K support.\n- 📣 NEW! Introducing Unsloth [Dynamic 4-bit Quantization](https://unsloth.ai/blog/dynamic-4bit)! We dynamically opt not to quantize certain parameters and this greatly increases accuracy while only using <10% more VRAM than BnB 4-bit. See our collection on [Hugging Face here.](https://huggingface.co/collections/unsloth/unsloth-4-bit-dynamic-quants-67503bb873f89e15276c44e7)\n- 📣 NEW! [Vision models](https://unsloth.ai/blog/vision) now supported! [Llama 3.2 Vision (11B)](https://colab.research.google.com/drive/1j0N4XTY1zXXy7mPAhOC1_gMYZ2F2EBlk?usp=sharing), [Qwen 2.5 VL (7B)](https://colab.research.google.com/drive/1whHb54GNZMrNxIsi2wm2EY_-Pvo2QyKh?usp=sharing) and [Pixtral (12B) 2409](https://colab.research.google.com/drive/1K9ZrdwvZRE96qGkCq_e88FgV3MLnymQq?usp=sharing)\n- 📣 NEW! Qwen-2.5 including [Coder](https://colab.research.google.com/drive/18sN803sU23XuJV9Q8On2xgqHSer6-UZF?usp=sharing) models are now supported with bugfixes. 14b fits in a Colab GPU! [Qwen 2.5 conversational notebook](https://colab.research.google.com/drive/1qN1CEalC70EO1wGKhNxs1go1W9So61R5?usp=sharing)\n- 📣 NEW! We found and helped fix a [gradient accumulation bug](https://unsloth.ai/blog/gradient)! Please update Unsloth and transformers.\n<details>\n  <summary>Click for more news</summary>\n  \n- 📣 Try out [Chat interface](https://colab.research.google.com/drive/1i-8ESvtLRGNkkUQQr_-z_rcSAIo9c3lM?usp=sharing)!\n- 📣 NEW! [Mistral Small 22b notebook](https://colab.research.google.com/drive/1oCEHcED15DzL8xXGU1VTx5ZfOJM8WY01?usp=sharing) finetuning fits in under 16GB of VRAM!\n- 📣 NEW! [Llama 3.1 8b, 70b](https://colab.research.google.com/drive/1Ys44kVvmeZtnICzWz0xgpRnrIOjZAuxp?usp=sharing) & [Mistral Nemo-12b](https://colab.research.google.com/drive/17d3U-CAIwzmbDRqbZ9NnpHxCkmXB6LZ0?usp=sharing) both Base and Instruct are now supported\n- 📣 NEW! `pip install unsloth` now works! Head over to [pypi](https://pypi.org/project/unsloth/) to check it out! This allows non git pull installs. Use `pip install unsloth[colab-new]` for non dependency installs.\n- 📣 NEW! Continued Pretraining [notebook](https://colab.research.google.com/drive/1tEd1FrOXWMnCU9UIvdYhs61tkxdMuKZu?usp=sharing) for other languages like Korean!\n- 📣 [2x faster inference](https://colab.research.google.com/drive/1aqlNQi7MMJbynFDyOQteD2t0yVfjb9Zh?usp=sharing) added for all our models\n- 📣 We cut memory usage by a [further 30%](https://unsloth.ai/blog/long-context) and now support [4x longer context windows](https://unsloth.ai/blog/long-context)!\n</details>\n\n## 🔗 Links and Resources\n| Type                            | Links                               |\n| ------------------------------- | --------------------------------------- |\n| 📚 **Documentation & Wiki**              | [Read Our Docs](https://docs.unsloth.ai) |\n| <img height=\"14\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6f/Logo_of_Twitter.svg\" />&nbsp; **Twitter (aka X)**              |  [Follow us on X](https://twitter.com/unslothai)|\n| 💾 **Installation**               | [unsloth/README.md](https://github.com/unslothai/unsloth/tree/main#-installation-instructions)|\n| 🥇 **Benchmarking**                   | [Performance Tables](https://github.com/unslothai/unsloth/tree/main#-performance-benchmarking)\n| 🌐 **Released Models**            | [Unsloth Releases](https://docs.unsloth.ai/get-started/all-our-models)|\n| ✍️ **Blog**                    | [Read our Blogs](https://unsloth.ai/blog)|\n| <img height=\"14\" src=\"https://redditinc.com/hs-fs/hubfs/Reddit%20Inc/Brand/Reddit_Logo.png\" />&nbsp; **Reddit**                    | [Join our Reddit page](https://reddit.com/r/unsloth)|\n\n## ⭐ Key Features\n- All kernels written in [OpenAI's Triton](https://openai.com/research/triton) language. **Manual backprop engine**.\n- **0% loss in accuracy** - no approximation methods - all exact.\n- No change of hardware. Supports NVIDIA GPUs since 2018+. Minimum CUDA Capability 7.0 (V100, T4, Titan V, RTX 20, 30, 40x, A100, H100, L40 etc) [Check your GPU!](https://developer.nvidia.com/cuda-gpus) GTX 1070, 1080 works, but is slow.\n- Works on **Linux** and **Windows** via WSL.\n- Supports 4bit and 16bit QLoRA / LoRA finetuning via [bitsandbytes](https://github.com/TimDettmers/bitsandbytes).\n- Open source trains 5x faster - see [Unsloth Pro](https://unsloth.ai/) for up to **30x faster training**!\n- If you trained a model with 🦥Unsloth, you can use this cool sticker! &nbsp; <img src=\"https://raw.githubusercontent.com/unslothai/unsloth/main/images/made with unsloth.png\" height=\"50\" align=\"center\" />\n\n\n## 🥇 Performance Benchmarking\n- For the full list of **reproducible** benchmarking tables, [go to our website](https://unsloth.ai/blog/mistral-benchmark#Benchmark%20tables)\n\n| 1 A100 40GB  | 🤗Hugging Face | Flash Attention | 🦥Unsloth Open Source | 🦥[Unsloth Pro](https://unsloth.ai/pricing) |\n|--------------|--------------|-----------------|---------------------|-----------------|\n| Alpaca       | 1x           | 1.04x           | 1.98x               | **15.64x**      |\n| LAION Chip2  | 1x           | 0.92x           | 1.61x               | **20.73x**      |\n| OASST        | 1x           | 1.19x           | 2.17x               | **14.83x**      |\n| Slim Orca    | 1x           | 1.18x           | 2.22x               | **14.82x**      |\n\n- Benchmarking table below was conducted by [🤗Hugging Face](https://huggingface.co/blog/unsloth-trl).\n\n| Free Colab T4 | Dataset | 🤗Hugging Face | Pytorch 2.1.1 | 🦥Unsloth | 🦥 VRAM reduction |\n| --- | --- | --- | --- | --- | --- |\n| Llama-2 7b | OASST | 1x | 1.19x | 1.95x | -43.3% |\n| Mistral 7b | Alpaca | 1x | 1.07x | 1.56x | -13.7% |\n| Tiny Llama 1.1b | Alpaca | 1x | 2.06x | 3.87x | -73.8% |\n| DPO with Zephyr | Ultra Chat | 1x | 1.09x | 1.55x | -18.6% |\n\n![](https://i.ibb.co/sJ7RhGG/image-41.png)\n\n## 💾 Installation Instructions\n\nFor stable releases, use `pip install unsloth`. We recommend `pip install \"unsloth[colab-new] @ git+https://github.com/unslothai/unsloth.git\"` for most installations though.\n\n### Conda Installation\n`⚠️Only use Conda if you have it. If not, use Pip`. Select either `pytorch-cuda=11.8,12.1` for CUDA 11.8 or CUDA 12.1. We support `python=3.10,3.11,3.12`.\n```bash\nconda create --name unsloth_env \\\n    python=3.11 \\\n    pytorch-cuda=12.1 \\\n    pytorch cudatoolkit xformers -c pytorch -c nvidia -c xformers \\\n    -y\nconda activate unsloth_env\n\npip install \"unsloth[colab-new] @ git+https://github.com/unslothai/unsloth.git\"\npip install --no-deps trl peft accelerate bitsandbytes\n```\n\n<details>\n  <summary>If you're looking to install Conda in a Linux environment, <a href=\"https://docs.anaconda.com/miniconda/\">read here</a>, or run the below 🔽</summary>\n  \n  ```bash\n  mkdir -p ~/miniconda3\n  wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\n  bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\n  rm -rf ~/miniconda3/miniconda.sh\n  ~/miniconda3/bin/conda init bash\n  ~/miniconda3/bin/conda init zsh\n  ```\n</details>\n\n### Pip Installation\n`⚠️Do **NOT** use this if you have Conda.` Pip is a bit more complex since there are dependency issues. The pip command is different for `torch 2.2,2.3,2.4,2.5` and CUDA versions.\n\nFor other torch versions, we support `torch211`, `torch212`, `torch220`, `torch230`, `torch240` and for CUDA versions, we support `cu118` and `cu121` and `cu124`. For Ampere devices (A100, H100, RTX3090) and above, use `cu118-ampere` or `cu121-ampere` or `cu124-ampere`.\n\nFor example, if you have `torch 2.4` and `CUDA 12.1`, use:\n```bash\npip install --upgrade pip\npip install \"unsloth[cu121-torch240] @ git+https://github.com/unslothai/unsloth.git\"\n```\n\nAnother example, if you have `torch 2.5` and `CUDA 12.4`, use:\n```bash\npip install --upgrade pip\npip install \"unsloth[cu124-torch250] @ git+https://github.com/unslothai/unsloth.git\"\n```\n\nAnd other examples:\n```bash\npip install \"unsloth[cu121-ampere-torch240] @ git+https://github.com/unslothai/unsloth.git\"\npip install \"unsloth[cu118-ampere-torch240] @ git+https://github.com/unslothai/unsloth.git\"\npip install \"unsloth[cu121-torch240] @ git+https://github.com/unslothai/unsloth.git\"\npip install \"unsloth[cu118-torch240] @ git+https://github.com/unslothai/unsloth.git\"\n\npip install \"unsloth[cu121-torch230] @ git+https://github.com/unslothai/unsloth.git\"\npip install \"unsloth[cu121-ampere-torch230] @ git+https://github.com/unslothai/unsloth.git\"\n\npip install \"unsloth[cu121-torch250] @ git+https://github.com/unslothai/unsloth.git\"\npip install \"unsloth[cu124-ampere-torch250] @ git+https://github.com/unslothai/unsloth.git\"\n```\n\nOr, run the below in a terminal to get the **optimal** pip installation command:\n```bash\nwget -qO- https://raw.githubusercontent.com/unslothai/unsloth/main/unsloth/_auto_install.py | python -\n```\n\nOr, run the below manually in a Python REPL:\n```python\ntry: import torch\nexcept: raise ImportError('Install torch via `pip install torch`')\nfrom packaging.version import Version as V\nv = V(torch.__version__)\ncuda = str(torch.version.cuda)\nis_ampere = torch.cuda.get_device_capability()[0] >= 8\nif cuda != \"12.1\" and cuda != \"11.8\" and cuda != \"12.4\": raise RuntimeError(f\"CUDA = {cuda} not supported!\")\nif   v <= V('2.1.0'): raise RuntimeError(f\"Torch = {v} too old!\")\nelif v <= V('2.1.1'): x = 'cu{}{}-torch211'\nelif v <= V('2.1.2'): x = 'cu{}{}-torch212'\nelif v  < V('2.3.0'): x = 'cu{}{}-torch220'\nelif v  < V('2.4.0'): x = 'cu{}{}-torch230'\nelif v  < V('2.5.0'): x = 'cu{}{}-torch240'\nelif v  < V('2.6.0'): x = 'cu{}{}-torch250'\nelse: raise RuntimeError(f\"Torch = {v} too new!\")\nx = x.format(cuda.replace(\".\", \"\"), \"-ampere\" if is_ampere else \"\")\nprint(f'pip install --upgrade pip && pip install \"unsloth[{x}] @ git+https://github.com/unslothai/unsloth.git\"')\n```\n\n### Windows Installation\n\nTo run Unsloth directly on Windows:\n- Install Triton from this Windows fork and follow the instructions: https://github.com/woct0rdho/triton-windows\n- In the SFTTrainer, set `dataset_num_proc=1` to avoid a crashing issue:\n```python\ntrainer = SFTTrainer(\n    dataset_num_proc=1,\n    ...\n)\n```\n\nFor **advanced installation instructions** or if you see weird errors during installations:\n\n1. Install `torch` and `triton`. Go to https://pytorch.org to install it. For example `pip install torch torchvision torchaudio triton`\n2. Confirm if CUDA is installated correctly. Try `nvcc`. If that fails, you need to install `cudatoolkit` or CUDA drivers.\n3. Install `xformers` manually. You can try installing `vllm` and seeing if `vllm` succeeds. Check if `xformers` succeeded with `python -m xformers.info` Go to https://github.com/facebookresearch/xformers. Another option is to install `flash-attn` for Ampere GPUs.\n4.  Finally, install `bitsandbytes` and check it with `python -m bitsandbytes`\n\n## 📜 [Documentation](https://docs.unsloth.ai)\n- Go to our official [Documentation](https://docs.unsloth.ai) for saving to GGUF, checkpointing, evaluation and more!\n- We support Huggingface's TRL, Trainer, Seq2SeqTrainer or even Pytorch code!\n- We're in 🤗Hugging Face's official docs! Check out the [SFT docs](https://huggingface.co/docs/trl/main/en/sft_trainer#accelerate-fine-tuning-2x-using-unsloth) and [DPO docs](https://huggingface.co/docs/trl/main/en/dpo_trainer#accelerate-dpo-fine-tuning-using-unsloth)!\n- If you want to download models from the ModelScope community, please use an environment variable: `UNSLOTH_USE_MODELSCOPE=1`, and install the modelscope library by: `pip install modelscope -U`.\n\n> unsloth_cli.py also supports `UNSLOTH_USE_MODELSCOPE=1` to download models and datasets. please remember to use the model and dataset id in the ModelScope community.\n\n```python\nfrom unsloth import FastLanguageModel \nfrom unsloth import is_bfloat16_supported\nimport torch\nfrom trl import SFTTrainer\nfrom transformers import TrainingArguments\nfrom datasets import load_dataset\nmax_seq_length = 2048 # Supports RoPE Scaling interally, so choose any!\n# Get LAION dataset\nurl = \"https://huggingface.co/datasets/laion/OIG/resolve/main/unified_chip2.jsonl\"\ndataset = load_dataset(\"json\", data_files = {\"train\" : url}, split = \"train\")\n\n# 4bit pre quantized models we support for 4x faster downloading + no OOMs.\nfourbit_models = [\n    \"unsloth/mistral-7b-v0.3-bnb-4bit\",      # New Mistral v3 2x faster!\n    \"unsloth/mistral-7b-instruct-v0.3-bnb-4bit\",\n    \"unsloth/llama-3-8b-bnb-4bit\",           # Llama-3 15 trillion tokens model 2x faster!\n    \"unsloth/llama-3-8b-Instruct-bnb-4bit\",\n    \"unsloth/llama-3-70b-bnb-4bit\",\n    \"unsloth/Phi-3-mini-4k-instruct\",        # Phi-3 2x faster!\n    \"unsloth/Phi-3-medium-4k-instruct\",\n    \"unsloth/mistral-7b-bnb-4bit\",\n    \"unsloth/gemma-7b-bnb-4bit\",             # Gemma 2.2x faster!\n] # More models at https://huggingface.co/unsloth\n\nmodel, tokenizer = FastLanguageModel.from_pretrained(\n    model_name = \"unsloth/llama-3-8b-bnb-4bit\",\n    max_seq_length = max_seq_length,\n    dtype = None,\n    load_in_4bit = True,\n)\n\n# Do model patching and add fast LoRA weights\nmodel = FastLanguageModel.get_peft_model(\n    model,\n    r = 16,\n    target_modules = [\"q_proj\", \"k_proj\", \"v_proj\", \"o_proj\",\n                      \"gate_proj\", \"up_proj\", \"down_proj\",],\n    lora_alpha = 16,\n    lora_dropout = 0, # Supports any, but = 0 is optimized\n    bias = \"none\",    # Supports any, but = \"none\" is optimized\n    # [NEW] \"unsloth\" uses 30% less VRAM, fits 2x larger batch sizes!\n    use_gradient_checkpointing = \"unsloth\", # True or \"unsloth\" for very long context\n    random_state = 3407,\n    max_seq_length = max_seq_length,\n    use_rslora = False,  # We support rank stabilized LoRA\n    loftq_config = None, # And LoftQ\n)\n\ntrainer = SFTTrainer(\n    model = model,\n    train_dataset = dataset,\n    dataset_text_field = \"text\",\n    max_seq_length = max_seq_length,\n    tokenizer = tokenizer,\n    args = TrainingArguments(\n        per_device_train_batch_size = 2,\n        gradient_accumulation_steps = 4,\n        warmup_steps = 10,\n        max_steps = 60,\n        fp16 = not is_bfloat16_supported(),\n        bf16 = is_bfloat16_supported(),\n        logging_steps = 1,\n        output_dir = \"outputs\",\n        optim = \"adamw_8bit\",\n        seed = 3407,\n    ),\n)\ntrainer.train()\n\n# Go to https://github.com/unslothai/unsloth/wiki for advanced tips like\n# (1) Saving to GGUF / merging to 16bit for vLLM\n# (2) Continued training from a saved LoRA adapter\n# (3) Adding an evaluation loop / OOMs\n# (4) Customized chat templates\n```\n\n<a name=\"DPO\"></a>\n## DPO Support\nDPO (Direct Preference Optimization), PPO, Reward Modelling all seem to work as per 3rd party independent testing from [Llama-Factory](https://github.com/hiyouga/LLaMA-Factory). We have a preliminary Google Colab notebook for reproducing Zephyr on Tesla T4 here: [notebook](https://colab.research.google.com/drive/15vttTpzzVXv_tJwEk-hIcQ0S9FcEWvwP?usp=sharing).\n\nWe're in 🤗Hugging Face's official docs! We're on the [SFT docs](https://huggingface.co/docs/trl/main/en/sft_trainer#accelerate-fine-tuning-2x-using-unsloth) and the [DPO docs](https://huggingface.co/docs/trl/main/en/dpo_trainer#accelerate-dpo-fine-tuning-using-unsloth)!\n\n```python\nimport os\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\" # Optional set GPU device ID\n\nfrom unsloth import FastLanguageModel, PatchDPOTrainer\nfrom unsloth import is_bfloat16_supported\nPatchDPOTrainer()\nimport torch\nfrom transformers import TrainingArguments\nfrom trl import DPOTrainer\n\nmodel, tokenizer = FastLanguageModel.from_pretrained(\n    model_name = \"unsloth/zephyr-sft-bnb-4bit\",\n    max_seq_length = max_seq_length,\n    dtype = None,\n    load_in_4bit = True,\n)\n\n# Do model patching and add fast LoRA weights\nmodel = FastLanguageModel.get_peft_model(\n    model,\n    r = 64,\n    target_modules = [\"q_proj\", \"k_proj\", \"v_proj\", \"o_proj\",\n                      \"gate_proj\", \"up_proj\", \"down_proj\",],\n    lora_alpha = 64,\n    lora_dropout = 0, # Supports any, but = 0 is optimized\n    bias = \"none\",    # Supports any, but = \"none\" is optimized\n    # [NEW] \"unsloth\" uses 30% less VRAM, fits 2x larger batch sizes!\n    use_gradient_checkpointing = \"unsloth\", # True or \"unsloth\" for very long context\n    random_state = 3407,\n    max_seq_length = max_seq_length,\n)\n\ndpo_trainer = DPOTrainer(\n    model = model,\n    ref_model = None,\n    args = TrainingArguments(\n        per_device_train_batch_size = 4,\n        gradient_accumulation_steps = 8,\n        warmup_ratio = 0.1,\n        num_train_epochs = 3,\n        fp16 = not is_bfloat16_supported(),\n        bf16 = is_bfloat16_supported(),\n        logging_steps = 1,\n        optim = \"adamw_8bit\",\n        seed = 42,\n        output_dir = \"outputs\",\n    ),\n    beta = 0.1,\n    train_dataset = YOUR_DATASET_HERE,\n    # eval_dataset = YOUR_DATASET_HERE,\n    tokenizer = tokenizer,\n    max_length = 1024,\n    max_prompt_length = 512,\n)\ndpo_trainer.train()\n```\n\n## 🥇 Detailed Benchmarking Tables\n- Click \"Code\" for fully reproducible examples\n- \"Unsloth Equal\" is a preview of our PRO version, with code stripped out. All settings and the loss curve remains identical.\n- For the full list of benchmarking tables, [go to our website](https://unsloth.ai/blog/mistral-benchmark#Benchmark%20tables)\n  \n| 1 A100 40GB | 🤗Hugging Face | Flash Attention 2 | 🦥Unsloth Open | Unsloth Equal | Unsloth Pro | Unsloth Max |\n|--------------|-------------|-------------|-----------------|--------------|---------------|-------------|\n| Alpaca       | 1x          | 1.04x       | 1.98x           | 2.48x        | 5.32x         | **15.64x**      |\n| code | [Code](https://colab.research.google.com/drive/1u4dBeM-0vGNVmmO6X7cScAut-Hyt4KDF?usp=sharing) |    [Code](https://colab.research.google.com/drive/1fgTOxpMbVjloQBvZyz4lF4BacKSZOB2A?usp=sharing) |    [Code](https://colab.research.google.com/drive/1YIPY_18xm-K0iJDgvNkRoJsgkPMPAO3G?usp=sharing) |    [Code](https://colab.research.google.com/drive/1ANW8EFL3LVyTD7Gq4TkheC1Z7Rxw-rHp?usp=sharing) | | |\n| seconds| 1040 | 1001 | 525 | 419 | 196 | 67  |\n| memory MB| 18235 | 15365 | 9631 | 8525 | | |\n| % saved| | 15.74 | 47.18 | 53.25 | | | |\n\n### Llama-Factory 3rd party benchmarking\n- [Link to performance table.](https://github.com/hiyouga/LLaMA-Factory/wiki/Performance-Comparison) TGS: tokens per GPU per second. Model: LLaMA2-7B. GPU: NVIDIA A100 * 1. Batch size: 4. Gradient accumulation: 2. LoRA rank: 8. Max length: 1024.\n\n| Method | Bits | TGS | GRAM | Speed |\n| --- | --- | --- | --- | --- |\n| HF | 16 | 2392 | 18GB | 100% |\n| HF+FA2 | 16 | 2954 | 17GB | 123% |\n| Unsloth+FA2 | 16 | 4007 | 16GB | **168%** |\n| HF | 4 | 2415 | 9GB | 101% |\n| Unsloth+FA2 | 4 | 3726 | 7GB | **160%** |\n\n### Performance comparisons between popular models\n<details>\n  <summary>Click for specific model benchmarking tables (Mistral 7b, CodeLlama 34b etc.)</summary>\n  \n### Mistral 7b\n| 1 A100 40GB | Hugging Face | Flash Attention 2 | Unsloth Open | Unsloth Equal | Unsloth Pro | Unsloth Max |\n|--------------|-------------|-------------|-----------------|--------------|---------------|-------------|\n| Mistral 7B Slim Orca  | 1x | 1.15x        | 2.15x        | 2.53x            | 4.61x         | **13.69x**         |\n| code | [Code](https://colab.research.google.com/drive/1mePk3KzwTD81hr5mcNcs_AX3Kbg_Ha0x?usp=sharing) | [Code](https://colab.research.google.com/drive/1dgHxjvTmX6hb0bPcLp26RXSE6_n9DKj7?usp=sharing) | [Code](https://colab.research.google.com/drive/1SKrKGV-BZoU4kv5q3g0jtE_OhRgPtrrQ?usp=sharing) | [Code](https://colab.research.google.com/drive/18yOiyX0T81mTwZqOALFSCX_tSAqju6aD?usp=sharing) | |\n| seconds      | 1813        | 1571        | 842             | 718          | 393           | 132         |\n| memory MB    | 32853       | 19385       | 12465           | 10271        |          |        |\n| % saved| | 40.99      | 62.06       | 68.74           |         |          |\n\n### CodeLlama 34b\n| 1 A100 40GB | Hugging Face | Flash Attention 2 | Unsloth Open | Unsloth Equal | Unsloth Pro | Unsloth Max |\n|--------------|-------------|-------------|-----------------|--------------|---------------|-------------|\n| Code Llama 34B   | OOM ❌         | 0.99x        | 1.87x           | 2.61x        | 4.27x      | 12.82x      |\n| code | [▶️ Code](https://colab.research.google.com/drive/1ykfz3BqrtC_AUFegCzUQjjfUNlxp6Otc?usp=sharing) | [Code](https://colab.research.google.com/drive/12ZypxQh7OC6kBXvWZI-5d05I4m-B_hoR?usp=sharing) | [Code](https://colab.research.google.com/drive/1gdHyAx8XJsz2yNV-DHvbHjR1iCef5Qmh?usp=sharing) | [Code](https://colab.research.google.com/drive/1fm7wqx9MJ0kRrwKOfmLkK1Rmw-pySahB?usp=sharing) | |\n| seconds      | 1953  | 1982  | 1043  | 748   | 458   | 152   |\n| memory MB    | 40000 | 33217 | 27413 | 22161 |       | |\n| % saved|    | 16.96| 31.47 | 44.60 |       | | |\n\n### 1 Tesla T4\n\n| 1 T4 16GB  | Hugging Face | Flash Attention | Unsloth Open    | Unsloth Pro Equal | Unsloth Pro   | Unsloth Max |\n|--------------|-------------|-----------------|-----------------|---------------|---------------|-------------|\n| Alpaca       | 1x          | 1.09x           | 1.69x           | 1.79x         | 2.93x          | **8.3x**        |\n| code | [▶️ Code](https://colab.research.google.com/drive/1XpLIV4s8Bj5uryB-X2gqM88oRGHEGdaB?usp=sharing) |    [Code](https://colab.research.google.com/drive/1LyXu6CjuymQg6ddHX8g1dpUvrMa1nn4L?usp=sharing) |    [Code](https://colab.research.google.com/drive/1gsv4LpY7C32otl1rgRo5wXTk4HIitXoM?usp=sharing) |    [Code](https://colab.research.google.com/drive/1VtULwRQwhEnVdNryjm27zXfdSM1tNfFK?usp=sharing) | | |\n| seconds       | 1599        | 1468        | 942             | 894          | 545           | 193         |\n| memory MB       | 7199        | 7059        | 6459            | 5443         |               |             |\n| % saved        |         | 1.94        | 10.28           | 24.39        |               | |\n\n### 2 Tesla T4s via DDP\n\n | 2 T4 DDP | Hugging Face | Flash Attention | Unsloth Open | Unsloth Equal | Unsloth Pro | Unsloth Max |\n|--------------|----------|-------------|-----------------|--------------|---------------|-------------|\n| Alpaca       | 1x       | 0.99x       | 4.95x           | 4.44x        | 7.28x         | **20.61x**      |\n| code | [▶️ Code](https://www.kaggle.com/danielhanchen/hf-original-alpaca-t4-ddp) |   [Code](https://www.kaggle.com/danielhanchen/hf-sdpa-alpaca-t4-ddp) |   [Code](https://www.kaggle.com/danielhanchen/unsloth-alpaca-t4-ddp) | | |\n| seconds       | 9882     | 9946        | 1996            | 2227         | 1357          | 480         |\n| memory MB| 9176 | 9128 | 6904 | 6782 |  | |\n| % saved |     | 0.52 | 24.76 | 26.09 |  | | |\n</details>\n\n### Performance comparisons on 1 Tesla T4 GPU:\n<details>\n  <summary>Click for Time taken for 1 epoch</summary>\n\nOne Tesla T4 on Google Colab\n`bsz = 2, ga = 4, max_grad_norm = 0.3, num_train_epochs = 1, seed = 3047, lr = 2e-4, wd = 0.01, optim = \"adamw_8bit\", schedule = \"linear\", schedule_steps = 10`\n\n| System | GPU | Alpaca (52K) | LAION OIG (210K) | Open Assistant (10K) | SlimOrca (518K) |\n| --- | --- | --- | --- | --- | --- |\n| Huggingface | 1 T4 | 23h 15m | 56h 28m | 8h 38m | 391h 41m |\n| Unsloth Open | 1 T4 | 13h 7m (1.8x) | 31h 47m (1.8x) | 4h 27m (1.9x) | 240h 4m (1.6x) |\n| Unsloth Pro | 1 T4 | 3h 6m (7.5x) | 5h 17m (10.7x) | 1h 7m (7.7x) | 59h 53m (6.5x) |\n| Unsloth Max | 1 T4 | 2h 39m (8.8x) | 4h 31m (12.5x) | 0h 58m (8.9x) | 51h 30m (7.6x) |\n\n**Peak Memory Usage**\n\n| System | GPU | Alpaca (52K) | LAION OIG (210K) | Open Assistant (10K) | SlimOrca (518K) |\n| --- | --- | --- | --- | --- | --- |\n| Huggingface | 1 T4 | 7.3GB | 5.9GB | 14.0GB | 13.3GB |\n| Unsloth Open | 1 T4 | 6.8GB | 5.7GB | 7.8GB | 7.7GB |\n| Unsloth Pro | 1 T4 | 6.4GB | 6.4GB | 6.4GB | 6.4GB |\n| Unsloth Max | 1 T4 | 11.4GB | 12.4GB | 11.9GB | 14.4GB |\n</details>\n\n<details>\n  <summary>Click for Performance Comparisons on 2 Tesla T4 GPUs via DDP:</summary>\n**Time taken for 1 epoch**\n\nTwo Tesla T4s on Kaggle\n`bsz = 2, ga = 4, max_grad_norm = 0.3, num_train_epochs = 1, seed = 3047, lr = 2e-4, wd = 0.01, optim = \"adamw_8bit\", schedule = \"linear\", schedule_steps = 10`\n\n| System | GPU | Alpaca (52K) | LAION OIG (210K) | Open Assistant (10K) | SlimOrca (518K) * |\n| --- | --- | --- | --- | --- | --- |\n| Huggingface | 2 T4 | 84h 47m | 163h 48m | 30h 51m | 1301h 24m * |\n| Unsloth Pro | 2 T4 | 3h 20m (25.4x) | 5h 43m (28.7x) | 1h 12m (25.7x) | 71h 40m (18.1x) * |\n| Unsloth Max | 2 T4 | 3h 4m (27.6x) | 5h 14m (31.3x) | 1h 6m (28.1x) | 54h 20m (23.9x) * |\n\n**Peak Memory Usage on a Multi GPU System (2 GPUs)**\n\n| System | GPU | Alpaca (52K) | LAION OIG (210K) | Open Assistant (10K) | SlimOrca (518K) * |\n| --- | --- | --- | --- | --- | --- |\n| Huggingface | 2 T4 | 8.4GB \\| 6GB | 7.2GB \\| 5.3GB | 14.3GB \\| 6.6GB | 10.9GB \\| 5.9GB * |\n| Unsloth Pro | 2 T4 | 7.7GB \\| 4.9GB | 7.5GB \\| 4.9GB | 8.5GB \\| 4.9GB | 6.2GB \\| 4.7GB * |\n| Unsloth Max | 2 T4 | 10.5GB \\| 5GB | 10.6GB \\| 5GB | 10.6GB \\| 5GB | 10.5GB \\| 5GB * |\n\n* Slim Orca `bsz=1` for all benchmarks since `bsz=2` OOMs. We can handle `bsz=2`, but we benchmark it with `bsz=1` for consistency.\n</details>\n\n![](https://i.ibb.co/sJ7RhGG/image-41.png)\n<br>\n\n### Citation\n\nYou can cite the Unsloth repo as follows:\n```bibtex\n@software{unsloth,\n  author = {Daniel Han, Michael Han and Unsloth team},\n  title = {Unsloth},\n  url = {http://github.com/unslothai/unsloth},\n  year = {2023}\n}\n```\n\n### Thank You to\n- [Erik](https://github.com/erikwijmans) for his help adding [Apple's ML Cross Entropy](https://github.com/apple/ml-cross-entropy) in Unsloth\n- [HuyNguyen-hust](https://github.com/HuyNguyen-hust) for making [RoPE Embeddings 28% faster](https://github.com/unslothai/unsloth/pull/238)\n- [RandomInternetPreson](https://github.com/RandomInternetPreson) for confirming WSL support\n- [152334H](https://github.com/152334H) for experimental DPO support\n- [atgctg](https://github.com/atgctg) for syntax highlighting\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 19.923828125,
          "content": "[build-system]\nrequires = [\"setuptools\", \"setuptools-scm\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"unsloth\"\ndynamic = [\"version\"]\ndescription = \"2-5X faster LLM finetuning\"\nreadme = \"README.md\"\nrequires-python = \">=3.9\"\nlicense = {file = \"LICENSE\"}\nkeywords = [\"ai\", \"llm\",]\nauthors = [\n    {email = \"info@unsloth.ai\"},\n    {name = \"Unsloth AI team\"},\n]\nmaintainers = [\n    {name = \"Daniel Han\", email = \"danielhanchen@gmail.com\"},\n    {name = \"Michael Han\", email = \"info@unsloth.ai\"},\n]\nclassifiers = [\n    \"Programming Language :: Python\",\n]\n\n[tool.setuptools.dynamic]\nversion = {attr = \"unsloth.models._utils.__version__\"}\n\n[tool.setuptools]\ninclude-package-data = false\n\n[tool.setuptools.packages.find]\nexclude = [\"images*\"]\n\n[project.optional-dependencies]\ntriton = [\n    \"triton @ https://github.com/woct0rdho/triton-windows/releases/download/v3.1.0-windows.post5/triton-3.1.0-cp39-cp39-win_amd64.whl ; python_version=='3.9' and platform_system == 'Windows'\",\n    \"triton @ https://github.com/woct0rdho/triton-windows/releases/download/v3.1.0-windows.post5/triton-3.1.0-cp310-cp310-win_amd64.whl ; python_version=='3.10' and platform_system == 'Windows'\",\n    \"triton @ https://github.com/woct0rdho/triton-windows/releases/download/v3.1.0-windows.post5/triton-3.1.0-cp311-cp311-win_amd64.whl ; python_version=='3.11' and platform_system == 'Windows'\",\n    \"triton @ https://github.com/woct0rdho/triton-windows/releases/download/v3.1.0-windows.post5/triton-3.1.0-cp312-cp312-win_amd64.whl ; python_version=='3.12' and platform_system == 'Windows'\",\n]\nhuggingface = [\n    \"unsloth_zoo>=2025.1.2\",\n    \"packaging\",\n    \"tyro\",\n    \"transformers>=4.46.1,!=4.47.0\",\n    \"datasets>=2.16.0\",\n    \"sentencepiece>=0.2.0\",\n    \"tqdm\",\n    \"psutil\",\n    \"wheel>=0.42.0\",\n    \"numpy\",\n    \"accelerate>=0.34.1\",\n    \"trl>=0.7.9,!=0.9.0,!=0.9.1,!=0.9.2,!=0.9.3\",\n    \"peft>=0.7.1,!=0.11.0\",\n    \"protobuf<4.0.0\",\n    \"huggingface_hub\",\n    \"hf_transfer\",\n    \"unsloth[triton]\",\n]\ncu118only = [\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.22.post7%2Bcu118-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.22.post7%2Bcu118-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.22.post7%2Bcu118-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu121only = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.22.post7-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.22.post7-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.22.post7-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu118onlytorch211 = [\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.23%2Bcu118-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.23%2Bcu118-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.23%2Bcu118-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu121onlytorch211 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.23-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.23-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.23-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu118onlytorch212 = [\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.23.post1%2Bcu118-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.23.post1%2Bcu118-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.23.post1%2Bcu118-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu121onlytorch212 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.23.post1-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.23.post1-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.23.post1-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu118onlytorch220 = [\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.24%2Bcu118-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.24%2Bcu118-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.24%2Bcu118-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu121onlytorch220 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.24-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.24-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.24-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n]\ncu118onlytorch230 = [\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27%2Bcu118-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27%2Bcu118-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27%2Bcu118-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27%2Bcu118-cp312-cp312-manylinux2014_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n]\ncu121onlytorch230 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.27-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.27-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.27-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.27-cp312-cp312-manylinux2014_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n]\ncu118onlytorch240 = [\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27.post2%2Bcu118-cp39-cp39-manylinux2014_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27.post2%2Bcu118-cp310-cp310-manylinux2014_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27.post2%2Bcu118-cp311-cp311-manylinux2014_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu118/xformers-0.0.27.post2%2Bcu118-cp312-cp312-manylinux2014_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n]\ncu121onlytorch240 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post1-cp39-cp39-manylinux_2_28_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post1-cp310-cp310-manylinux_2_28_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post1-cp311-cp311-manylinux_2_28_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post1-cp312-cp312-manylinux_2_28_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n]\ncu124onlytorch240 = [\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp39-cp39-manylinux_2_28_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp310-cp310-manylinux_2_28_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp311-cp311-manylinux_2_28_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp312-cp312-manylinux_2_28_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp39-cp39-win_amd64.whl ; python_version=='3.9' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp310-cp310-win_amd64.whl ; python_version=='3.10' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp311-cp311-win_amd64.whl ; python_version=='3.11' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post1-cp312-cp312-win_amd64.whl ; python_version=='3.12' and platform_system == 'Windows'\",\n]\ncu121onlytorch250 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post2-cp39-cp39-manylinux_2_28_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post2-cp310-cp310-manylinux_2_28_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post2-cp311-cp311-manylinux_2_28_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.28.post2-cp312-cp312-manylinux_2_28_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n]\ncu124onlytorch250 = [\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp39-cp39-manylinux_2_28_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp310-cp310-manylinux_2_28_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp311-cp311-manylinux_2_28_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp312-cp312-manylinux_2_28_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp39-cp39-win_amd64.whl ; python_version=='3.9' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp310-cp310-win_amd64.whl ; python_version=='3.10' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp311-cp311-win_amd64.whl ; python_version=='3.11' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.28.post2-cp312-cp312-win_amd64.whl ; python_version=='3.12' and platform_system == 'Windows'\",\n]\ncu121onlytorch251 = [\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.29.post1-cp39-cp39-manylinux_2_28_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.29.post1-cp310-cp310-manylinux_2_28_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.29.post1-cp311-cp311-manylinux_2_28_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu121/xformers-0.0.29.post1-cp312-cp312-manylinux_2_28_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n]\ncu124onlytorch251 = [\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp39-cp39-manylinux_2_28_x86_64.whl ; python_version=='3.9' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp310-cp310-manylinux_2_28_x86_64.whl ; python_version=='3.10' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp311-cp311-manylinux_2_28_x86_64.whl ; python_version=='3.11' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp312-cp312-manylinux_2_28_x86_64.whl ; python_version=='3.12' and platform_system == 'Linux'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp39-cp39-win_amd64.whl ; python_version=='3.9' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp310-cp310-win_amd64.whl ; python_version=='3.10' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp311-cp311-win_amd64.whl ; python_version=='3.11' and platform_system == 'Windows'\",\n    \"xformers @ https://download.pytorch.org/whl/cu124/xformers-0.0.29.post1-cp312-cp312-win_amd64.whl ; python_version=='3.12' and platform_system == 'Windows'\",\n]\ncu118 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118only]\",\n]\ncu121 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121only]\",\n]\ncu118-torch211 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch211]\",\n]\ncu121-torch211 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch211]\",\n]\ncu118-torch212 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch212]\",\n]\ncu121-torch212 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch212]\",\n]\ncu118-torch220 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch220]\",\n]\ncu121-torch220 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch220]\",\n]\ncu118-torch230 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch230]\",\n]\ncu121-torch230 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch230]\",\n]\ncu118-torch240 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch240]\",\n]\ncu121-torch240 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch240]\",\n]\ncu121-torch250 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch250]\",\n]\ncu124-torch240 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu124onlytorch240]\",\n]\ncu124-torch250 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu124onlytorch250]\",\n]\ncu121-torch251 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch251]\",\n]\ncu124-torch251 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu124onlytorch251]\",\n]\nkaggle = [\n    \"unsloth[huggingface]\",\n]\nkaggle-new = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n]\nconda = [\n    \"unsloth[huggingface]\",\n]\ncolab-torch211 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch211]\",\n]\ncolab-ampere-torch211 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch211]\",\n    \"packaging\",\n    \"ninja\",\n    \"flash-attn>=2.6.3\",\n]\ncolab-torch220 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch220]\",\n]\ncolab-ampere-torch220 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch220]\",\n    \"packaging\",\n    \"ninja\",\n    \"flash-attn>=2.6.3\",\n]\ncolab-new = [\n    \"unsloth_zoo>=2025.1.2\",\n    \"packaging\",\n    \"tyro\",\n    \"transformers>=4.46.1,!=4.47.0\",\n    \"datasets>=2.16.0\",\n    \"sentencepiece>=0.2.0\",\n    \"tqdm\",\n    \"psutil\",\n    \"wheel>=0.42.0\",\n    \"numpy\",\n    \"protobuf<4.0.0\",\n    \"huggingface_hub\",\n    \"hf_transfer\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[triton]\",\n]\ncolab-no-deps = [\n    \"accelerate>=0.34.1\",\n    \"trl>=0.7.9,!=0.9.0,!=0.9.1,!=0.9.2,!=0.9.3\",\n    \"peft>=0.7.1\",\n    \"xformers\",\n    \"bitsandbytes>=0.46.1\",\n    \"protobuf<4.0.0\",\n]\ncolab = [\n    \"unsloth[cu121]\",\n]\nflashattention = [\n    \"packaging ; platform_system == 'Linux'\",\n    \"ninja ; platform_system == 'Linux'\",\n    \"flash-attn>=2.6.3 ; platform_system == 'Linux'\",\n]\ncolab-ampere = [\n    \"unsloth[colab-ampere-torch220]\",\n    \"unsloth[flashattention]\",\n]\ncu118-ampere = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118only]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121only]\",\n    \"unsloth[flashattention]\",\n]\ncu118-ampere-torch211 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch211]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere-torch211 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch211]\",\n    \"unsloth[flashattention]\",\n]\ncu118-ampere-torch220 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch220]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere-torch220 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch220]\",\n    \"unsloth[flashattention]\",\n]\ncu118-ampere-torch230 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch230]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere-torch230 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch230]\",\n    \"unsloth[flashattention]\",\n]\ncu118-ampere-torch240 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu118onlytorch240]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere-torch240 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch240]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere-torch250 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch250]\",\n    \"unsloth[flashattention]\",\n]\ncu124-ampere-torch240 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu124onlytorch240]\",\n    \"unsloth[flashattention]\",\n]\ncu124-ampere-torch250 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu124onlytorch250]\",\n    \"unsloth[flashattention]\",\n]\ncu121-ampere-torch251 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu121onlytorch251]\",\n    \"unsloth[flashattention]\",\n]\ncu124-ampere-torch251 = [\n    \"unsloth[huggingface]\",\n    \"bitsandbytes>=0.43.3\",\n    \"unsloth[cu124onlytorch251]\",\n    \"unsloth[flashattention]\",\n]\n\n[project.urls]\nhomepage = \"http://www.unsloth.ai\"\ndocumentation = \"https://github.com/unslothai/unsloth\"\nrepository = \"https://github.com/unslothai/unsloth\"\n"
        },
        {
          "name": "unsloth-cli.py",
          "type": "blob",
          "size": 11.8857421875,
          "content": "#!/usr/bin/env python3\r\n\r\n\"\"\"\r\n🦥 Starter Script for Fine-Tuning FastLanguageModel with Unsloth\r\n\r\nThis script is designed as a starting point for fine-tuning your models using unsloth.\r\nIt includes configurable options for model loading, PEFT parameters, training arguments, \r\nand model saving/pushing functionalities.\r\n\r\nYou will likely want to customize this script to suit your specific use case \r\nand requirements.\r\n\r\nHere are a few suggestions for customization:\r\n    - Modify the dataset loading and preprocessing steps to match your data.\r\n    - Customize the model saving and pushing configurations.\r\n\r\nUsage: (most of the options have valid default values this is an extended example for demonstration purposes)\r\n    python unsloth-cli.py --model_name \"unsloth/llama-3-8b\" --max_seq_length 8192 --dtype None --load_in_4bit \\\r\n    --r 64 --lora_alpha 32 --lora_dropout 0.1 --bias \"none\" --use_gradient_checkpointing \"unsloth\" \\\r\n    --random_state 3407 --use_rslora --per_device_train_batch_size 4 --gradient_accumulation_steps 8 \\\r\n    --warmup_steps 5 --max_steps 400 --learning_rate 2e-6 --logging_steps 1 --optim \"adamw_8bit\" \\\r\n    --weight_decay 0.005 --lr_scheduler_type \"linear\" --seed 3407 --output_dir \"outputs\" \\\r\n    --report_to \"tensorboard\" --save_model --save_path \"model\" --quantization_method \"f16\" \\\r\n    --push_model --hub_path \"hf/model\" --hub_token \"your_hf_token\"\r\n\r\nTo see a full list of configurable options, use:\r\n    python unsloth-cli.py --help\r\n\r\nHappy fine-tuning!\r\n\"\"\"\r\n\r\nimport argparse\r\nimport os\r\n\r\n\r\ndef run(args):\r\n    import torch\r\n    from unsloth import FastLanguageModel\r\n    from datasets import load_dataset\r\n    from transformers.utils import strtobool\r\n    from trl import SFTTrainer\r\n    from transformers import TrainingArguments\r\n    from unsloth import is_bfloat16_supported\r\n    import logging\r\n    logging.getLogger('hf-to-gguf').setLevel(logging.WARNING)\r\n\r\n    # Load model and tokenizer\r\n    model, tokenizer = FastLanguageModel.from_pretrained(\r\n        model_name=args.model_name,\r\n        max_seq_length=args.max_seq_length,\r\n        dtype=args.dtype,\r\n        load_in_4bit=args.load_in_4bit,\r\n    )\r\n\r\n    # Configure PEFT model\r\n    model = FastLanguageModel.get_peft_model(\r\n        model,\r\n        r=args.r,\r\n        target_modules=[\"q_proj\", \"k_proj\", \"v_proj\", \"o_proj\",\r\n                        \"gate_proj\", \"up_proj\", \"down_proj\"],\r\n        lora_alpha=args.lora_alpha,\r\n        lora_dropout=args.lora_dropout,\r\n        bias=args.bias,\r\n        use_gradient_checkpointing=args.use_gradient_checkpointing,\r\n        random_state=args.random_state,\r\n        use_rslora=args.use_rslora,\r\n        loftq_config=args.loftq_config,\r\n    )\r\n\r\n    alpaca_prompt = \"\"\"Below is an instruction that describes a task, paired with an input that provides further context. Write a response that appropriately completes the request.\r\n\r\n    ### Instruction:\r\n    {}\r\n\r\n    ### Input:\r\n    {}\r\n\r\n    ### Response:\r\n    {}\"\"\"\r\n\r\n    EOS_TOKEN = tokenizer.eos_token  # Must add EOS_TOKEN\r\n    def formatting_prompts_func(examples):\r\n        instructions = examples[\"instruction\"]\r\n        inputs       = examples[\"input\"]\r\n        outputs      = examples[\"output\"]\r\n        texts = []\r\n        for instruction, input, output in zip(instructions, inputs, outputs):\r\n            text = alpaca_prompt.format(instruction, input, output) + EOS_TOKEN\r\n            texts.append(text)\r\n        return {\"text\": texts}\r\n\r\n    use_modelscope = strtobool(os.environ.get('UNSLOTH_USE_MODELSCOPE', 'False'))\r\n    if use_modelscope:\r\n        from modelscope import MsDataset\r\n        dataset = MsDataset.load(args.dataset, split=\"train\")\r\n    else:\r\n        # Load and format dataset\r\n        dataset = load_dataset(args.dataset, split=\"train\")\r\n    dataset = dataset.map(formatting_prompts_func, batched=True)\r\n    print(\"Data is formatted and ready!\")\r\n\r\n    # Configure training arguments\r\n    training_args = TrainingArguments(\r\n        per_device_train_batch_size=args.per_device_train_batch_size,\r\n        gradient_accumulation_steps=args.gradient_accumulation_steps,\r\n        warmup_steps=args.warmup_steps,\r\n        max_steps=args.max_steps,\r\n        learning_rate=args.learning_rate,\r\n        fp16=not is_bfloat16_supported(),\r\n        bf16=is_bfloat16_supported(),\r\n        logging_steps=args.logging_steps,\r\n        optim=args.optim,\r\n        weight_decay=args.weight_decay,\r\n        lr_scheduler_type=args.lr_scheduler_type,\r\n        seed=args.seed,\r\n        output_dir=args.output_dir,\r\n        report_to=args.report_to,\r\n    )\r\n\r\n    # Initialize trainer\r\n    trainer = SFTTrainer(\r\n        model=model,\r\n        tokenizer=tokenizer,\r\n        train_dataset=dataset,\r\n        dataset_text_field=\"text\",\r\n        max_seq_length=args.max_seq_length,\r\n        dataset_num_proc=2,\r\n        packing=False,\r\n        args=training_args,\r\n    )\r\n\r\n    # Train model\r\n    trainer_stats = trainer.train()\r\n\r\n    # Save model\r\n    if args.save_model:\r\n        # if args.quantization_method is a list, we will save the model for each quantization method\r\n        if args.save_gguf:\r\n            if isinstance(args.quantization, list):\r\n                for quantization_method in args.quantization:\r\n                    print(f\"Saving model with quantization method: {quantization_method}\")\r\n                    model.save_pretrained_gguf(\r\n                        args.save_path,\r\n                        tokenizer,\r\n                        quantization_method=quantization_method,\r\n                    )\r\n                    if args.push_model:\r\n                        model.push_to_hub_gguf(\r\n                            hub_path=args.hub_path,\r\n                            hub_token=args.hub_token,\r\n                            quantization_method=quantization_method,\r\n                        )\r\n            else:\r\n                print(f\"Saving model with quantization method: {args.quantization}\")\r\n                model.save_pretrained_gguf(args.save_path, tokenizer, quantization_method=args.quantization)\r\n                if args.push_model:\r\n                    model.push_to_hub_gguf(\r\n                        hub_path=args.hub_path,\r\n                        hub_token=args.hub_token,\r\n                        quantization_method=quantization_method,\r\n                    )\r\n        else:\r\n            model.save_pretrained_merged(args.save_path, tokenizer, args.save_method)\r\n            if args.push_model:\r\n                model.push_to_hub_merged(args.save_path, tokenizer, args.hub_token)\r\n    else:\r\n        print(\"Warning: The model is not saved!\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    # Define argument parser\r\n    parser = argparse.ArgumentParser(description=\"🦥 Fine-tune your llm faster using unsloth!\")\r\n\r\n    model_group = parser.add_argument_group(\"🤖 Model Options\")\r\n    model_group.add_argument('--model_name', type=str, default=\"unsloth/llama-3-8b\", help=\"Model name to load\")\r\n    model_group.add_argument('--max_seq_length', type=int, default=2048, help=\"Maximum sequence length, default is 2048. We auto support RoPE Scaling internally!\")\r\n    model_group.add_argument('--dtype', type=str, default=None, help=\"Data type for model (None for auto detection)\")\r\n    model_group.add_argument('--load_in_4bit', action='store_true', help=\"Use 4bit quantization to reduce memory usage\")\r\n    model_group.add_argument('--dataset', type=str, default=\"yahma/alpaca-cleaned\", help=\"Huggingface dataset to use for training\")\r\n\r\n    lora_group = parser.add_argument_group(\"🧠 LoRA Options\", \"These options are used to configure the LoRA model.\")\r\n    lora_group.add_argument('--r', type=int, default=16, help=\"Rank for Lora model, default is 16.  (common values: 8, 16, 32, 64, 128)\")\r\n    lora_group.add_argument('--lora_alpha', type=int, default=16, help=\"LoRA alpha parameter, default is 16. (common values: 8, 16, 32, 64, 128)\")\r\n    lora_group.add_argument('--lora_dropout', type=float, default=0, help=\"LoRA dropout rate, default is 0.0 which is optimized.\")\r\n    lora_group.add_argument('--bias', type=str, default=\"none\", help=\"Bias setting for LoRA\")\r\n    lora_group.add_argument('--use_gradient_checkpointing', type=str, default=\"unsloth\", help=\"Use gradient checkpointing\")\r\n    lora_group.add_argument('--random_state', type=int, default=3407, help=\"Random state for reproducibility, default is 3407.\")\r\n    lora_group.add_argument('--use_rslora', action='store_true', help=\"Use rank stabilized LoRA\")\r\n    lora_group.add_argument('--loftq_config', type=str, default=None, help=\"Configuration for LoftQ\")\r\n\r\n   \r\n    training_group = parser.add_argument_group(\"🎓 Training Options\")\r\n    training_group.add_argument('--per_device_train_batch_size', type=int, default=2, help=\"Batch size per device during training, default is 2.\")\r\n    training_group.add_argument('--gradient_accumulation_steps', type=int, default=4, help=\"Number of gradient accumulation steps, default is 4.\")\r\n    training_group.add_argument('--warmup_steps', type=int, default=5, help=\"Number of warmup steps, default is 5.\")\r\n    training_group.add_argument('--max_steps', type=int, default=400, help=\"Maximum number of training steps.\")\r\n    training_group.add_argument('--learning_rate', type=float, default=2e-4, help=\"Learning rate, default is 2e-4.\")\r\n    training_group.add_argument('--optim', type=str, default=\"adamw_8bit\", help=\"Optimizer type.\")\r\n    training_group.add_argument('--weight_decay', type=float, default=0.01, help=\"Weight decay, default is 0.01.\")\r\n    training_group.add_argument('--lr_scheduler_type', type=str, default=\"linear\", help=\"Learning rate scheduler type, default is 'linear'.\")\r\n    training_group.add_argument('--seed', type=int, default=3407, help=\"Seed for reproducibility, default is 3407.\")\r\n    \r\n\r\n    # Report/Logging arguments\r\n    report_group = parser.add_argument_group(\"📊 Report Options\")\r\n    report_group.add_argument('--report_to', type=str, default=\"tensorboard\",\r\n        choices=[\"azure_ml\", \"clearml\", \"codecarbon\", \"comet_ml\", \"dagshub\", \"dvclive\", \"flyte\", \"mlflow\", \"neptune\", \"tensorboard\", \"wandb\", \"all\", \"none\"],\r\n        help=\"The list of integrations to report the results and logs to. Supported platforms are: \\n\\t\\t 'azure_ml', 'clearml', 'codecarbon', 'comet_ml', 'dagshub', 'dvclive', 'flyte', 'mlflow', 'neptune', 'tensorboard', and 'wandb'. Use 'all' to report to all integrations installed, 'none' for no integrations.\")\r\n    report_group.add_argument('--logging_steps', type=int, default=1, help=\"Logging steps, default is 1\")\r\n\r\n    # Saving and pushing arguments\r\n    save_group = parser.add_argument_group('💾 Save Model Options')\r\n    save_group.add_argument('--output_dir', type=str, default=\"outputs\", help=\"Output directory\")\r\n    save_group.add_argument('--save_model', action='store_true', help=\"Save the model after training\")\r\n    save_group.add_argument('--save_method', type=str, default=\"merged_16bit\", choices=[\"merged_16bit\", \"merged_4bit\", \"lora\"], help=\"Save method for the model, default is 'merged_16bit'\")\r\n    save_group.add_argument('--save_gguf', action='store_true', help=\"Convert the model to GGUF after training\")\r\n    save_group.add_argument('--save_path', type=str, default=\"model\", help=\"Path to save the model\")\r\n    save_group.add_argument('--quantization', type=str, default=\"q8_0\", nargs=\"+\",\r\n        help=\"Quantization method for saving the model. common values ('f16', 'q4_k_m', 'q8_0'), Check our wiki for all quantization methods https://github.com/unslothai/unsloth/wiki#saving-to-gguf \")\r\n\r\n    push_group = parser.add_argument_group('🚀 Push Model Options')\r\n    push_group.add_argument('--push_model', action='store_true', help=\"Push the model to Hugging Face hub after training\")\r\n    push_group.add_argument('--push_gguf', action='store_true', help=\"Push the model as GGUF to Hugging Face hub after training\")\r\n    push_group.add_argument('--hub_path', type=str, default=\"hf/model\", help=\"Path on Hugging Face hub to push the model\")\r\n    push_group.add_argument('--hub_token', type=str, help=\"Token for pushing the model to Hugging Face hub\")\r\n\r\n    args = parser.parse_args()\r\n    run(args)\r\n"
        },
        {
          "name": "unsloth",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}