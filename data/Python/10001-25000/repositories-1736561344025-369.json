{
  "metadata": {
    "timestamp": 1736561344025,
    "page": 369,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "databrickslabs/dolly",
      "stars": 10818,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.125,
          "content": "[report]\nexclude_lines =\n    pragma: no cover\n    if TYPE_CHECKING:\n    raise NotImplementedError\n    if __name__ == \"__main__\":"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0869140625,
          "content": ".dbx/\nvenv/\n.venv/\n.idea/\n.python-version\n__pycache__/\nhtmlcov/\n.pytest_cache/\n.coverage\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.142578125,
          "content": "We happily welcome contributions to Dolly. We use GitHub Issues to track community reported issues and GitHub Pull Requests for accepting changes."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.080078125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2023 Databricks, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.181640625,
          "content": "Dolly\r\n\r\nCopyright (2023) Databricks, Inc.\r\n\r\nThis Software includes software developed at Databricks (https://www.databricks.com/) and its use is subject to the included LICENSE file.\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.1083984375,
          "content": "# Dolly\n\nDatabricks’ [Dolly](https://huggingface.co/databricks/dolly-v2-12b) is an instruction-following large language model trained on the Databricks machine learning platform\nthat is licensed for commercial use. Based on `pythia-12b`, Dolly is trained on ~15k instruction/response fine tuning records\n[`databricks-dolly-15k`](https://huggingface.co/datasets/databricks/databricks-dolly-15k) generated\nby Databricks employees in capability domains from the InstructGPT paper, including brainstorming, classification, closed QA, generation,\ninformation extraction, open QA and summarization. `dolly-v2-12b` is not a state-of-the-art model, but does exhibit surprisingly\nhigh quality instruction following behavior not characteristic of the foundation model on which it is based.\n\nDatabricks is committed to ensuring that every organization and individual benefits from the transformative power of artificial intelligence. The Dolly model family represents our first steps along this journey, and we’re excited to share this technology with the world.\n\nThe model is available on Hugging Face as [databricks/dolly-v2-12b](https://huggingface.co/databricks/dolly-v2-12b).\n\n## Model Overview\n\n`dolly-v2-12b` is a 12 billion parameter causal language model created by [Databricks](https://databricks.com/) that is derived from\n[EleutherAI’s](https://www.eleuther.ai/) [Pythia-12b](https://huggingface.co/EleutherAI/pythia-12b) and fine-tuned\non a [~15K record instruction corpus](https://github.com/databrickslabs/dolly/tree/master/data) generated by Databricks employees and released under a permissive license (CC-BY-SA)\n\n\n## Known Limitations\n\n### Performance Limitations\n**`dolly-v2-12b` is not a state-of-the-art generative language model** and, though quantitative benchmarking is ongoing, is not designed to perform\ncompetitively with more modern model architectures or models subject to larger pretraining corpuses.\n\nThe Dolly model family is under active development, and so any list of shortcomings is unlikely to be exhaustive, but we include known limitations and misfires here as a means to document and share our preliminary findings with the community.\nIn particular, `dolly-v2-12b` struggles with: syntactically complex prompts, programming problems, mathematical operations, factual errors,\ndates and times, open-ended question answering, hallucination, enumerating lists of specific length, stylistic mimicry, having a sense of humor, etc.\nMoreover, we find that `dolly-v2-12b` does not have some capabilities, such as well-formatted letter writing, present in the original model.\n\n### Dataset Limitations\nLike all language models, `dolly-v2-12b` reflects the content and limitations of its training corpuses.\n\n- **The Pile**: GPT-J’s pre-training corpus contains content mostly collected from the public internet, and like most web-scale datasets,\nit contains content many users would find objectionable. As such, the model is likely to reflect these shortcomings, potentially overtly\nin the case it is explicitly asked to produce objectionable content, and sometimes subtly, as in the case of biased or harmful implicit\nassociations.\n\n- **`databricks-dolly-15k`**: The training data on which `dolly-v2-12b` is instruction tuned represents natural language instructions generated\nby Databricks employees during a period spanning March and April 2023 and includes passages from Wikipedia as references passages\nfor instruction categories like closed QA and summarization. To our knowledge it does not contain obscenity, intellectual property or\npersonally identifying information about non-public figures, but it may contain typos and factual errors.\nThe dataset may also reflect biases found in Wikipedia. Finally, the dataset likely reflects\nthe interests and semantic choices of Databricks employees, a demographic which is not representative of the global population at large.\n\nDatabricks is committed to ongoing research and development efforts to develop helpful, honest and harmless AI technologies that\nmaximize the potential of all individuals and organizations.\n\n## Getting Started with Response Generation\n\nIf you'd like to simply test the model without training, the model is available on Hugging Face as [databricks/dolly-v2-12b](https://huggingface.co/databricks/dolly-v2-12b).\n\nTo use the model with the `transformers` library on a machine with A100 GPUs:\n\n```\nfrom transformers import pipeline\nimport torch\n\ninstruct_pipeline = pipeline(model=\"databricks/dolly-v2-12b\", torch_dtype=torch.bfloat16, trust_remote_code=True, device_map=\"auto\")\n```\n\nYou can then use the pipeline to answer instructions:\n\n```\ninstruct_pipeline(\"Explain to me the difference between nuclear fission and fusion.\")\n```\n\n### Generating on Other Instances\n\nA100 instance types are not available in all cloud regions, or can be hard to provision. Inference is possible on other GPU instance types.\n\n#### A10 GPUs\n\nThe 6.9B and 2.8B param models should work as-is.\n\nTo generate using the 12B param model on A10s (ex: `g5.4xlarge`, 1 x A10 24GB), it's necessary to load and run generating using 8-bit weights, which impacts the results slightly:\n\n- Also install `bitsandbytes`\n- Add `model_kwargs={'load_in_8bit': True}` to the `pipeline()` command shown above\n\n#### V100 GPUs\n\nWhen using V100s (ex: `p3.2xlarge`, 1 x V100 16GB, `NC6s_v3`), in all cases, set `torch_dtype=torch.float16` in `pipeline()` instead.\n\nOtherwise, follow the steps above. The 12B param model may not function well in 8-bit on V100s.\n\n## Getting Started with Training\n\n- Add the `dolly` repo to Databricks (under Repos click Add Repo, enter `https://github.com/databrickslabs/dolly.git`, then click Create Repo).\n- Start a `13.x ML (includes Apache Spark 3.4.0, GPU, Scala 2.12)` or later single-node cluster with node type having 8 A100 GPUs (e.g. `Standard_ND96asr_v4` or `p4d.24xlarge`). Note that these instance types may not be available in all regions, or may be difficult to provision. In Databricks, note that you must select the GPU runtime first, and unselect \"Use Photon\", for these instance types to appear (where supported).\n- Open the `train_dolly` notebook in the Repo (which is the `train_dolly.py` file in the Github `dolly` repo), attach to your GPU cluster, and run all cells.  When training finishes, the notebook will save the model under `/dbfs/dolly_training`.\n\n### Training on Other Instances\n\nA100 instance types are not available in all cloud regions, or can be hard to provision. Training is possible on other GPU instance types, \nfor smaller Dolly model sizes, and with small modifications to reduce memory usage. These modifications are not optimal, but are simple to make. \n\nSelect your GPU family type from the `gpu_family` widget, enter the number of GPUs available in the `num_gpus` widget, and then run the rest of the code. \nA number of different options will be set for you to train the model for one of the following GPU types:\n- A100 (default)\n- A10 \n- V100\n\nDetails of the different configurations are below.\n\n#### A100 GPUs\n\nA100 GPUs are preferred for training all model sizes, and are the only GPUs that can train the 12B param model in a reasonable amount of time.\nAs such, this is the default configuration, as set in the `a100_config.json` deepspeed config file.\n\n#### A10 GPUs\n\nTraining the 12B param model is not recommended on A10s.\n\nTo train the 6.9B param model on A10 instances (ex: `g5.24xlarge`, 4 x A10 24GB; `Standard_NV72ads_A10_v5`, 2 x A10),\nsimply select `a10` from the `gpu_family` widget and enter the number of GPUs available in the `num_gpus` widget, then run the rest of the code. \nThis will use the `a10_config.json` deepspeed config file, which makes the following changes:\n\n- `per-device-train-batch-size` and `per-device-eval-batch-size` are set to 3 in the `train_dolly.py` invocation of `deepspeed`\n- Within the `\"zero_optimization\"` section of the deepspeed config, we have added:\n  ```\n  \"offload_optimizer\": {\n    \"device\": \"cpu\",\n    \"pin_memory\": true\n  },\n  ```\n\n#### V100 GPUs\n\nTo run on V100 instances with 32GB of GPU memory (ex: `p3dn.24xlarge` or `Standard_ND40rs_v2`), \nsimply select `v100` from the `gpu_family` widget and enter the number of GPUs available in the `num_gpus` widget, and then run the rest of the code. \nThis will use the `v100_config.json` deepspeed config file, which makes the following changes:\n\n- It makes the changes described above for A10s\n- It enables fp16 floating point format\n- It sets the `per-device-train-batch-size` and `per-device-eval-batch-size` to 3\n  \nYou may be able to slightly increase the batch size with 32GB instances, compared to what works above for 24GB A10s.\n\n## Running Unit Tests Locally\n\n```\npyenv local 3.8.13\npython -m venv .venv\n. .venv/bin/activate\npip install -r requirements_dev.txt\n./run_pytest.sh\n```\n\n## Citation\n\n```\n@online{DatabricksBlog2023DollyV2,\n    author    = {Mike Conover and Matt Hayes and Ankit Mathur and Jianwei Xie and Jun Wan and Sam Shah and Ali Ghodsi and Patrick Wendell and Matei Zaharia and Reynold Xin},\n    title     = {Free Dolly: Introducing the World's First Truly Open Instruction-Tuned LLM},\n    year      = {2023},\n    url       = {https://www.databricks.com/blog/2023/04/12/dolly-first-open-commercially-viable-instruction-tuned-llm},\n    urldate   = {2023-06-30}\n}\n```\n"
        },
        {
          "name": "__init__.py",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.04296875,
          "content": "[pytest]\ntestpaths =\n  test\nlog_level = INFO"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1435546875,
          "content": "accelerate>=0.16.0,<1\nclick>=8.0.4,<9\ndatasets>=2.10.0,<3\ndeepspeed>=0.8.3,<0.9\ntransformers[torch]>=4.28.1,<5\nlangchain>=0.0.139\ntorch>=1.13.1,<2\n"
        },
        {
          "name": "requirements_dev.txt",
          "type": "blob",
          "size": 0.0703125,
          "content": "-r requirements.txt\npytest-cov==3.0.0\npytest==7.1.2\ntorchvision==0.14.1\n"
        },
        {
          "name": "run_pytest.sh",
          "type": "blob",
          "size": 0.1083984375,
          "content": "#!/bin/bash\n\nset -e\n\npython -m pytest \\\n--cov=dolly \\\n--cov-report=html \\\n--cov-report=term \\\n--cov-branch \\\n$@"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "train_dolly.py",
          "type": "blob",
          "size": 7.7333984375,
          "content": "# Databricks notebook source\n# MAGIC %md\n# MAGIC ## Train Dolly\n# MAGIC\n# MAGIC This fine-tunes EleutherAI Pythia models\n# MAGIC (e.g. [pythia-2.8b](https://huggingface.co/EleutherAI/pythia-2.8b),\n# MAGIC [pythia-6.9b](https://huggingface.co/EleutherAI/pythia-6.9b), or\n# MAGIC [pythia-12b](https://huggingface.co/EleutherAI/pythia-12b)) on\n# MAGIC the [databricks-dolly-15k](https://github.com/databrickslabs/dolly/tree/master/data) dataset.\n# MAGIC\n# MAGIC ```\n# MAGIC   Licensed under the Apache License, Version 2.0 (the \"License\");\n# MAGIC   you may not use this file except in compliance with the License.\n# MAGIC   You may obtain a copy of the License at\n# MAGIC\n# MAGIC       http://www.apache.org/licenses/LICENSE-2.0\n# MAGIC\n# MAGIC   Unless required by applicable law or agreed to in writing, software\n# MAGIC   distributed under the License is distributed on an \"AS IS\" BASIS,\n# MAGIC   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# MAGIC   See the License for the specific language governing permissions and\n# MAGIC   limitations under the License.\n# MAGIC ```\n# MAGIC\n# MAGIC The EleutherAI Pythia models are [Apache 2.0 licensed](https://huggingface.co/EleutherAI/gpt-j-6B) and\n# MAGIC the [databricks-dolly-15k](https://github.com/databrickslabs/dolly/tree/master/data) is licensed under the terms\n# MAGIC of [Creative Commons Attribution-ShareAlike 3.0 Unported License](https://creativecommons.org/licenses/by-sa/3.0/legalcode),\n# MAGIC which means it can be used for either academic or commercial purposes.\n\n# COMMAND ----------\n\n# MAGIC %md\n# MAGIC Install these additional NVIDIA libraries for Databricks Runtime 13.x+ ML:\n\n# COMMAND ----------\n\n# MAGIC !wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/libcusparse-dev-11-7_11.7.3.50-1_amd64.deb -O /tmp/libcusparse-dev-11-7_11.7.3.50-1_amd64.deb && \\\n# MAGIC   wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/libcublas-dev-11-7_11.10.1.25-1_amd64.deb -O /tmp/libcublas-dev-11-7_11.10.1.25-1_amd64.deb && \\\n# MAGIC   wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/libcusolver-dev-11-7_11.4.0.1-1_amd64.deb -O /tmp/libcusolver-dev-11-7_11.4.0.1-1_amd64.deb && \\\n# MAGIC   wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/libcurand-dev-11-7_10.2.10.91-1_amd64.deb -O /tmp/libcurand-dev-11-7_10.2.10.91-1_amd64.deb && \\\n# MAGIC   dpkg -i /tmp/libcusparse-dev-11-7_11.7.3.50-1_amd64.deb && \\\n# MAGIC   dpkg -i /tmp/libcublas-dev-11-7_11.10.1.25-1_amd64.deb && \\\n# MAGIC   dpkg -i /tmp/libcusolver-dev-11-7_11.4.0.1-1_amd64.deb && \\\n# MAGIC   dpkg -i /tmp/libcurand-dev-11-7_10.2.10.91-1_amd64.deb\n\n# COMMAND ----------\n\n# MAGIC %pip install -r requirements.txt\n\n# COMMAND ----------\n\n# MAGIC %load_ext autoreload\n# MAGIC %autoreload 2\n\n# COMMAND ----------\n\nimport logging\n\nlogging.basicConfig(\n    format=\"%(asctime)s %(levelname)s [%(name)s] %(message)s\", level=logging.INFO, datefmt=\"%Y-%m-%d %H:%M:%S\"\n)\nlogging.getLogger(\"py4j\").setLevel(logging.WARNING)\nlogging.getLogger(\"sh.command\").setLevel(logging.ERROR)\n\n# COMMAND ----------\n\nimport os\nimport re\nfrom datetime import datetime\nfrom training.consts import DEFAULT_INPUT_MODEL, SUGGESTED_INPUT_MODELS\nfrom training.trainer import load_training_dataset, load_tokenizer\n\ndbutils.widgets.combobox(\"input_model\", DEFAULT_INPUT_MODEL, SUGGESTED_INPUT_MODELS, \"input_model\")\ndbutils.widgets.text(\"num_gpus\", \"\", \"num_gpus\")\ndbutils.widgets.text(\"local_training_root\", \"\", \"local_training_root\")\ndbutils.widgets.text(\"dbfs_output_root\", \"\", \"dbfs_output_root\")\ndbutils.widgets.text(\"experiment_id\", \"\", \"experiment_id\")\ndbutils.widgets.combobox(\"gpu_family\", \"a100\", [\"v100\", \"a10\", \"a100\"])\n\n# COMMAND ----------\n\ntimestamp = datetime.now().strftime(\"%Y-%m-%dT%H:%M:%S\")\nmodel_name = \"dolly\"\n\nexperiment_id = dbutils.widgets.get(\"experiment_id\")\ninput_model = dbutils.widgets.get(\"input_model\")\n\nif experiment_id:\n    experiment_id = re.sub(r\"\\s+\", \"_\", experiment_id.strip())\n    model_name = f\"{model_name}__{experiment_id}\"\n\ncheckpoint_dir_name = f\"{model_name}__{timestamp}\"\n\ndolly_training_dir_name = \"dolly_training\"\n\n# Use the local training root path if it was provided.  Otherwise try to find a sensible default.\nlocal_training_root = dbutils.widgets.get(\"local_training_root\")\nif not local_training_root:\n    # Use preferred path when working in a Databricks cluster if it exists.\n    if os.path.exists(\"/local_disk0\"):\n        local_training_root = os.path.join(\"/local_disk0\", dolly_training_dir_name)\n    # Otherwise use the home directory.\n    else:\n        local_training_root = os.path.join(os.path.expanduser('~'), dolly_training_dir_name)\n\ndbfs_output_root = dbutils.widgets.get(\"dbfs_output_root\")\nif not dbfs_output_root:\n    dbfs_output_root = f\"/dbfs/{dolly_training_dir_name}\"\n\nos.makedirs(local_training_root, exist_ok=True)\nos.makedirs(dbfs_output_root, exist_ok=True)\n\nlocal_output_dir = os.path.join(local_training_root, checkpoint_dir_name)\ndbfs_output_dir = os.path.join(dbfs_output_root, checkpoint_dir_name)\ntensorboard_display_dir = f\"{local_output_dir}/runs\"\n\nprint(f\"Local Output Dir: {local_output_dir}\")\nprint(f\"DBFS Output Dir: {dbfs_output_dir}\")\nprint(f\"Tensorboard Display Dir: {tensorboard_display_dir}\")\n\n# pick an appropriate config file\ngpu_family = dbutils.widgets.get(\"gpu_family\")\nconfig_file_name = f\"{gpu_family}_config.json\"\ndeepspeed_config = os.path.join(os.getcwd(), \"config\", config_file_name)\nprint(f\"Deepspeed config file: {deepspeed_config}\")\n\n# configure the batch_size\nbatch_size = 3\nif gpu_family == \"a10\":\n    batch_size = 4\nelif gpu_family == \"a100\":\n    batch_size = 6\n\n# configure num_gpus, if specified\nnum_gpus_flag = \"\"\nnum_gpus = dbutils.widgets.get(\"num_gpus\")\nif num_gpus:\n    num_gpus = int(num_gpus)\n    num_gpus_flag = f\"--num_gpus={num_gpus}\"\n\nif gpu_family == \"v100\":\n    bf16_flag = \"--bf16 false\"\nelse:\n    bf16_flag = \"--bf16 true\"\n\nos.environ[\"TOKENIZERS_PARALLELISM\"] = \"false\"\n\n# COMMAND ----------\n\n# MAGIC %load_ext tensorboard\n# MAGIC %tensorboard --logdir '{tensorboard_display_dir}'\n\n# COMMAND ----------\n\n!deepspeed {num_gpus_flag} \\\n    --module training.trainer \\\n    --input-model {input_model} \\\n    --deepspeed {deepspeed_config} \\\n    --epochs 2 \\\n    --local-output-dir {local_output_dir} \\\n    --dbfs-output-dir {dbfs_output_dir} \\\n    --per-device-train-batch-size {batch_size} \\\n    --per-device-eval-batch-size {batch_size} \\\n    --logging-steps 10 \\\n    --save-steps 200 \\\n    --save-total-limit 20 \\\n    --eval-steps 50 \\\n    --warmup-steps 50 \\\n    --test-size 200 \\\n    --lr 5e-6 \\\n    {bf16_flag}\n\n# COMMAND ----------\n\nfrom training.generate import generate_response, load_model_tokenizer_for_generate\n\nmodel, tokenizer = load_model_tokenizer_for_generate(dbfs_output_dir)\n\n# COMMAND ----------\n\n# Examples from https://www.databricks.com/blog/2023/03/24/hello-dolly-democratizing-magic-chatgpt-open-models.html\ninstructions = [\n    \"Write a love letter to Edgar Allan Poe.\",\n    \"Write a tweet announcing Dolly, a large language model from Databricks.\",\n    \"I'm selling my Nikon D-750, write a short blurb for my ad.\",\n    \"Explain to me the difference between nuclear fission and fusion.\",\n    \"Give me a list of 5 science fiction books I should read next.\",\n]\n\n# set some additional pipeline args\npipeline_kwargs = {'torch_dtype': \"auto\"}\nif gpu_family == \"v100\":\n    pipeline_kwargs['torch_dtype'] = \"float16\"\nelif gpu_family == \"a10\" or gpu_family == \"a100\":\n    pipeline_kwargs['torch_dtype'] = \"bfloat16\"\n\n# Use the model to generate responses for each of the instructions above.\nfor instruction in instructions:\n    response = generate_response(instruction, model=model, tokenizer=tokenizer, **pipeline_kwargs)\n    if response:\n        print(f\"Instruction: {instruction}\\n\\n{response}\\n\\n-----------\\n\")\n\n# COMMAND ----------\n\n\n"
        },
        {
          "name": "training",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}