{
  "metadata": {
    "timestamp": 1736561330978,
    "page": 349,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Lightning-AI/litgpt",
      "stars": 11115,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2724609375,
          "content": ".ipynb_checkpoints/\n__pycache__\n.idea\n.DS_Store\n*.egg-info\nbuild\ndist\n.venv\n.vscode\n\n# data\ndata\ndatasets\n!litgpt/data\n!tests/data\ncheckpoints\nout\nwandb\nevents.out.tfevents*\n\n# test artifacts from tests/test_readme.py\n**/custom_finetuning_dataset.json\nclient.py\n**/custom_texts/\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.326171875,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, you can cite it as shown below.\"\ntitle: \"LitGPT\"\nabstract: \"20+ high-performance LLMs with recipes to pretrain, finetune and deploy at scale.\"\ndate-released: 2023-03-22\nauthors:\n  - name: \"The Lightning AI team\"\nlicense: \"Apache-2.0\"\nurl: \"https://github.com/Lightning-AI/litgpt\""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.078125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2023] Lightning AI\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 27.2802734375,
          "content": "<div align=\"center\">\n\n\n# ⚡ LitGPT\n\n**20+ high-performance LLMs with recipes to pretrain, finetune, and deploy at scale.**\n\n<pre>\n✅ From scratch implementations     ✅ No abstractions    ✅ Beginner friendly   \n✅ Flash attention                  ✅ FSDP               ✅ LoRA, QLoRA, Adapter\n✅ Reduce GPU memory (fp4/8/16/32)  ✅ 1-1000+ GPUs/TPUs  ✅ 20+ LLMs            \n</pre>\n\n\n---\n\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pytorch-lightning)\n![cpu-tests](https://github.com/lightning-AI/lit-stablelm/actions/workflows/cpu-tests.yml/badge.svg) [![license](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/Lightning-AI/lit-stablelm/blob/master/LICENSE) [![Discord](https://img.shields.io/discord/1077906959069626439)](https://discord.gg/VptPCZkGNa)\n\n<p align=\"center\">\n  <a href=\"#quick-start\">Quick start</a> •\n  <a href=\"#choose-from-20-llms\">Models</a> •\n  <a href=\"#finetune-an-llm\">Finetune</a> • \n  <a href=\"#deploy-an-llm\">Deploy</a> •    \n  <a href=\"#all-workflows\">All workflows</a> • \n  <a href=\"#state-of-the-art-features\">Features</a> •\n  <a href=\"#training-recipes\">Recipes (YAML)</a> •\n  <a href=\"https://lightning.ai/\">Lightning AI</a> •\n    <a href=\"#tutorials\">Tutorials</a>\n</p>\n\n&nbsp;\n  \n<a target=\"_blank\" href=\"https://lightning.ai/lightning-ai/studios/litgpt-quick-start\">\n  <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/app-2/get-started-badge.svg\" height=\"36px\" alt=\"Get started\"/>\n</a>\n\n&nbsp;\n\n</div>\n\n# Use, finetune, pretrain, and deploy LLMs Lightning fast ⚡⚡\nEvery LLM is implemented from scratch with **no abstractions** and **full control**, making them blazing fast, minimal, and performant at enterprise scale.\n\n✅ **Enterprise ready -** Apache 2.0 for unlimited enterprise use.    \n✅ **Developer friendly -** Easy debugging with no abstraction layers and single file implementations.    \n✅ **Optimized performance -** Models designed to maximize performance, reduce costs, and speed up training.    \n✅ **Proven recipes -** Highly-optimized training/finetuning recipes tested at enterprise scale.    \n\n&nbsp;\n\n# Quick start\nInstall LitGPT\n```\npip install 'litgpt[all]'\n```\n\nLoad and use any of the [20+ LLMs](#choose-from-20-llms):   \n```python\nfrom litgpt import LLM\n\nllm = LLM.load(\"microsoft/phi-2\")\ntext = llm.generate(\"Fix the spelling: Every fall, the familly goes to the mountains.\")\nprint(text)\n# Corrected Sentence: Every fall, the family goes to the mountains.       \n```\n\n&nbsp;\n\n✅ Optimized for fast inference    \n✅ Quantization    \n✅ Runs on low-memory GPUs    \n✅ No layers of internal abstractions    \n✅ Optimized for production scale   \n\n<details>\n  <summary>Advanced install options</summary>\n\nInstall from source:\n\n```bash\ngit clone https://github.com/Lightning-AI/litgpt\ncd litgpt\npip install -e '.[all]'\n```\n</details>\n\n[Explore the full Python API docs](tutorials/python-api.md).\n\n&nbsp;\n\n---\n# Choose from 20+ LLMs\nEvery model is written from scratch to maximize performance and remove layers of abstraction:   \n\n| Model | Model size | Author | Reference |\n|----|----|----|----|\n| Llama 3, 3.1, 3.2 | 1B, 3B, 8B, 70B, 405B | Meta AI | [Meta AI 2024](https://github.com/meta-llama/llama3)                                           |\n| Code Llama | 7B, 13B, 34B, 70B | Meta AI | [Rozière et al. 2023](https://arxiv.org/abs/2308.12950)                                       |\n| Mixtral MoE | 8x7B, 8x22B | Mistral AI | [Mistral AI 2023](https://mistral.ai/news/mixtral-of-experts/)                                  |\n| Mistral | 7B, 123B | Mistral AI | [Mistral AI 2023](https://mistral.ai/news/announcing-mistral-7b/)                                      |\n| CodeGemma | 7B | Google | [Google Team, Google Deepmind](https://ai.google.dev/gemma/docs/codegemma)                                     |\n| Gemma 2 | 2B, 9B, 27B | Google | [Google Team, Google Deepmind](https://storage.googleapis.com/deepmind-media/gemma/gemma-2-report.pdf)  |\n| Phi 3 & 3.5   | 3.8B | Microsoft | [Abdin et al. 2024](https://arxiv.org/abs/2404.14219)                                                 |\n| ... | ... | ... | ...   |\n\n<details>\n  <summary>See full list of 20+ LLMs</summary>\n\n&nbsp;\n\n#### All models\n\n| Model | Model size | Author | Reference |\n|----|----|----|----|\n| CodeGemma | 7B | Google | [Google Team, Google Deepmind](https://ai.google.dev/gemma/docs/codegemma)                                                                 |\n| Code Llama | 7B, 13B, 34B, 70B | Meta AI | [Rozière et al. 2023](https://arxiv.org/abs/2308.12950)                                                                   |\n| Falcon | 7B, 40B, 180B | TII UAE | [TII 2023](https://falconllm.tii.ae)                                                                                              |\n| Falcon 3 | 1B, 3B, 7B, 10B | TII UAE | [TII 2024](https://huggingface.co/blog/falcon3)                                                                                              |\n| FreeWilly2 (Stable Beluga 2) | 70B | Stability AI | [Stability AI 2023](https://stability.ai/blog/stable-beluga-large-instruction-fine-tuned-models)                 |\n| Function Calling Llama 2 | 7B | Trelis | [Trelis et al. 2023](https://huggingface.co/Trelis/Llama-2-7b-chat-hf-function-calling-v2)                                  |\n| Gemma | 2B, 7B | Google | [Google Team, Google Deepmind](https://storage.googleapis.com/deepmind-media/gemma/gemma-report.pdf)                                       |\n| Gemma 2 | 9B, 27B | Google | [Google Team, Google Deepmind](https://storage.googleapis.com/deepmind-media/gemma/gemma-2-report.pdf)                                  |\n| Llama 2 | 7B, 13B, 70B | Meta AI | [Touvron et al. 2023](https://arxiv.org/abs/2307.09288)                                                                           |\n| Llama 3.1 | 8B, 70B | Meta AI | [Meta AI 2024](https://github.com/meta-llama/llama3)                                                                                 |\n| Llama 3.2 | 1B, 3B | Meta AI | [Meta AI 2024](https://ai.meta.com/blog/llama-3-2-connect-2024-vision-edge-mobile-devices/)                                           |\n| Llama 3.3 | 70B | Meta AI | [Meta AI 2024](https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct)                                                                                 |\n| Mathstral | 7B | Mistral AI | [Mistral AI 2024](https://mistral.ai/news/mathstral/)                                                                                  |\n| MicroLlama | 300M | Ken Wang | [MicroLlama repo](https://github.com/keeeeenw/MicroLlama)                                                                             |\n| Mixtral MoE | 8x7B | Mistral AI | [Mistral AI 2023](https://mistral.ai/news/mixtral-of-experts/)                                                                     |\n| Mistral | 7B, 123B | Mistral AI | [Mistral AI 2023](https://mistral.ai/news/announcing-mistral-7b/)                                                                  |\n| Mixtral MoE | 8x22B | Mistral AI | [Mistral AI 2024](https://mistral.ai/news/mixtral-8x22b/)                                                                         |\n| OLMo | 1B, 7B | Allen Institute for AI (AI2) | [Groeneveld et al. 2024](https://aclanthology.org/2024.acl-long.841/)    |\n| OpenLLaMA | 3B, 7B, 13B | OpenLM Research | [Geng & Liu 2023](https://github.com/openlm-research/open_llama)                                                         |\n| Phi 1.5 & 2 | 1.3B, 2.7B | Microsoft Research  | [Li et al. 2023](https://arxiv.org/abs/2309.05463)                                                                  |\n| Phi 3 | 3.8B | Microsoft Research | [Abdin et al. 2024](https://arxiv.org/abs/2404.14219)                                                                            |\n| Phi 4 | 14B | Microsoft Research | [Abdin et al. 2024](https://arxiv.org/abs/2412.08905)                                                                            |\n| Platypus | 7B, 13B, 70B |  Lee et al. | [Lee, Hunter, and Ruiz 2023](https://arxiv.org/abs/2308.07317)                                                               |\n| Pythia | {14,31,70,160,410}M, {1,1.4,2.8,6.9,12}B | EleutherAI | [Biderman et al. 2023](https://arxiv.org/abs/2304.01373)                                            |\n| Qwen2.5 | 0.5B, 1.5B, 3B, 7B, 14B, 32B, 72B | Alibaba Group | [Qwen Team 2024](https://qwenlm.github.io/blog/qwen2.5/)                                               |\n| Qwen2.5 Coder | 0.5B, 1.5B, 3B, 7B, 14B, 32B | Alibaba Group | [Hui, Binyuan et al. 2024](https://arxiv.org/abs/2409.12186)                                          |\n| Qwen2.5 Math | 1.5B, 7B, 72B | Alibaba Group | [An, Yang et al. 2024](https://arxiv.org/abs/2409.12122)                                          |\n| QwQ | 32B | Alibaba Group | [Qwen Team 2024](https://qwenlm.github.io/blog/qwq-32b-preview/)                                                                         |\n| SmolLM2 | 135M, 360M, 1.7B | Hugging Face | [Hugging Face 2024](https://github.com/huggingface/smollm)                                                               |\n| Salamandra | 2B, 7B | Barcelona Supercomputing Centre | [BSC-LTC 2024](https://github.com/BSC-LTC/salamandra)                                                                         |\n| StableCode | 3B | Stability AI | [Stability AI 2023](https://stability.ai/blog/stablecode-llm-generative-ai-coding)                                                  |\n| StableLM  | 3B, 7B | Stability AI | [Stability AI 2023](https://github.com/Stability-AI/StableLM)                                                                    |\n| StableLM Zephyr | 3B | Stability AI | [Stability AI 2023](https://stability.ai/blog/stablecode-llm-generative-ai-coding)                                             |\n| TinyLlama | 1.1B | Zhang et al. | [Zhang et al. 2023](https://github.com/jzhang38/TinyLlama)                                                                         |\n\n\n**Tip**: You can list all available models by running the `litgpt download list` command.\n\n\n</details>\n\n&nbsp;\n\n---\n\n# Workflows\n\n<p align=\"center\">\n  <a href=\"#finetune-an-llm\">Finetune</a> • \n  <a href=\"#pretrain-an-llm\">Pretrain</a> • \n  <a href=\"#continue-pretraining-an-llm\">Continued pretraining</a> •    \n    <a href=\"#evaluate-an-llm\">Evaluate</a> •\n    <a href=\"#deploy-an-llm\">Deploy</a> •\n    <a href=\"#test-an-llm\">Test</a>\n</p>\n\n&nbsp;\n\nUse the command line interface to run advanced workflows such as pretraining or finetuning on your own data.   \n\n\n## All workflows   \nAfter installing LitGPT, select the model and workflow to run (finetune, pretrain, evaluate, deploy, etc...):\n\n```bash\n# ligpt [action] [model]\nlitgpt  serve     meta-llama/Llama-3.2-3B-Instruct\nlitgpt  finetune  meta-llama/Llama-3.2-3B-Instruct\nlitgpt  pretrain  meta-llama/Llama-3.2-3B-Instruct\nlitgpt  chat      meta-llama/Llama-3.2-3B-Instruct\nlitgpt  evaluate  meta-llama/Llama-3.2-3B-Instruct\n```\n\n&nbsp;\n\n---- \n\n## Finetune an LLM\n\n<div align=\"center\">\n<a target=\"_blank\" href=\"https://lightning.ai/lightning-ai/studios/litgpt-finetune\">\n  <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/app-2/run-on-studio.svg\" height=\"36px\" alt=\"Run on Studios\"/>\n</a>\n</div>\n\n&nbsp;\n\nFinetuning is the process of taking a pretrained AI model and further training it on a smaller, specialized dataset tailored to a specific task or application.\n\n\n&nbsp;\n\n```bash\n# 0) setup your dataset\ncurl -L https://huggingface.co/datasets/ksaw008/finance_alpaca/resolve/main/finance_alpaca.json -o my_custom_dataset.json\n\n# 1) Finetune a model (auto downloads weights)\nlitgpt finetune microsoft/phi-2 \\\n  --data JSON \\\n  --data.json_path my_custom_dataset.json \\\n  --data.val_split_fraction 0.1 \\\n  --out_dir out/custom-model\n\n# 2) Test the model\nlitgpt chat out/custom-model/final\n\n# 3) Deploy the model\nlitgpt serve out/custom-model/final\n```\n\n[Read the full finetuning docs](tutorials/finetune.md)\n\n&nbsp;\n\n---- \n\n## Deploy an LLM\n\n<div align=\"center\">\n<a target=\"_blank\" href=\"https://lightning.ai/lightning-ai/studios/litgpt-serve\">\n  <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/app-2/deploy-on-studios.svg\" height=\"36px\" alt=\"Deploy on Studios\"/>\n</a>\n</div>\n\n&nbsp;\n\nDeploy a pretrained or finetune LLM to use it in real-world applications. Deploy, automatically sets up a web server that can be accessed by a website or app.   \n\n```bash\n# deploy an out-of-the-box LLM\nlitgpt serve microsoft/phi-2\n\n# deploy your own trained model\nlitgpt serve path/to/microsoft/phi-2/checkpoint\n```\n\n<details>\n  <summary>Show code to query server:</summary>\n\n&nbsp;\n\nTest the server in a separate terminal and integrate the model API into your AI product:\n```python\n# 3) Use the server (in a separate Python session)\nimport requests, json\nresponse = requests.post(\n    \"http://127.0.0.1:8000/predict\",\n    json={\"prompt\": \"Fix typos in the following sentence: Exampel input\"}\n)\nprint(response.json()[\"output\"])\n```\n</details>\n\n[Read the full deploy docs](tutorials/deploy.md).\n\n&nbsp;\n\n----\n\n## Evaluate an LLM\nEvaluate an LLM to test its performance on various tasks to see how well it understands and generates text. Simply put, we can evaluate things like how well would it do in college-level chemistry, coding, etc... (MMLU, Truthful QA, etc...)\n\n```bash\nlitgpt evaluate microsoft/phi-2 --tasks 'truthfulqa_mc2,mmlu'\n```\n\n[Read the full evaluation docs](tutorials/evaluation.md).\n\n&nbsp;\n\n---- \n\n##  Test an LLM\n\n<div align=\"center\">\n<a target=\"_blank\" href=\"https://lightning.ai/lightning-ai/studios/litgpt-chat\">\n  <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/app-2/run-on-studio.svg\" height=\"36px\" alt=\"Run on Studios\"/>\n</a>\n</div>\n\n&nbsp;\n    \nTest how well the model works via an interactive chat. Use the `chat` command to chat, extract embeddings, etc...\n\nHere's an example showing how to use the Phi-2 LLM:\n```bash\nlitgpt chat microsoft/phi-2\n\n>> Prompt: What do Llamas eat?\n```\n\n<details>\n  <summary>Full code:</summary>\n\n&nbsp;\n\n```bash\n# 1) List all supported LLMs\nlitgpt download list\n\n# 2) Use a model (auto downloads weights)\nlitgpt chat microsoft/phi-2\n\n>> Prompt: What do Llamas eat?\n```\n\nThe download of certain models requires an additional access token. You can read more about this in the [download](tutorials/download_model_weights.md#specific-models-and-access-tokens) documentation. \n\n</details>\n\n[Read the full chat docs](tutorials/inference.md).\n\n&nbsp;\n\n----\n\n## Pretrain an LLM\n\n<div align=\"center\">\n<a target=\"_blank\" href=\"https://lightning.ai/lightning-ai/studios/litgpt-pretrain\">\n  <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/app-2/run-on-studio.svg\" height=\"36px\" alt=\"Run on Studios\"/>\n</a>\n</div>\n\n&nbsp;\n\nPretraining is the process of teaching an AI model by exposing it to a large amount of data before it is fine-tuned for specific tasks.\n\n<details>\n  <summary>Show code:</summary>\n\n&nbsp;\n\n```bash\nmkdir -p custom_texts\ncurl https://www.gutenberg.org/cache/epub/24440/pg24440.txt --output custom_texts/book1.txt\ncurl https://www.gutenberg.org/cache/epub/26393/pg26393.txt --output custom_texts/book2.txt\n\n# 1) Download a tokenizer\nlitgpt download EleutherAI/pythia-160m \\\n  --tokenizer_only True\n\n# 2) Pretrain the model\nlitgpt pretrain EleutherAI/pythia-160m \\\n  --tokenizer_dir EleutherAI/pythia-160m \\\n  --data TextFiles \\\n  --data.train_data_path \"custom_texts/\" \\\n  --train.max_tokens 10_000_000 \\\n  --out_dir out/custom-model\n\n# 3) Test the model\nlitgpt chat out/custom-model/final\n```\n</details>\n\n[Read the full pretraining docs](tutorials/pretrain.md)\n\n&nbsp;\n\n---- \n\n## Continue pretraining an LLM\n\n<div align=\"center\">\n<a target=\"_blank\" href=\"https://lightning.ai/lightning-ai/studios/litgpt-continue-pretraining\">\n  <img src=\"https://pl-bolts-doc-images.s3.us-east-2.amazonaws.com/app-2/run-on-studio.svg\" height=\"36px\" alt=\"Run on Studios\"/>\n</a>\n</div>\n\n&nbsp;\n\nContinued pretraining is another way of finetuning that specializes an already pretrained model by training on custom data:\n\n<details>\n  <summary>Show code:</summary>\n\n&nbsp;\n\n```bash\nmkdir -p custom_texts\ncurl https://www.gutenberg.org/cache/epub/24440/pg24440.txt --output custom_texts/book1.txt\ncurl https://www.gutenberg.org/cache/epub/26393/pg26393.txt --output custom_texts/book2.txt\n\n# 1) Continue pretraining a model (auto downloads weights)\nlitgpt pretrain EleutherAI/pythia-160m \\\n  --tokenizer_dir EleutherAI/pythia-160m \\\n  --initial_checkpoint_dir EleutherAI/pythia-160m \\\n  --data TextFiles \\\n  --data.train_data_path \"custom_texts/\" \\\n  --train.max_tokens 10_000_000 \\\n  --out_dir out/custom-model\n\n# 2) Test the model\nlitgpt chat out/custom-model/final\n```\n\n</details>\n\n[Read the full continued pretraining docs](tutorials/pretrain.md#continued-pretraining-on-custom-data)\n\n&nbsp;\n\n---- \n\n# State-of-the-art features\n\n✅ &nbsp;State-of-the-art optimizations: Flash Attention v2, multi-GPU support via fully-sharded data parallelism, [optional CPU offloading](tutorials/oom.md#do-sharding-across-multiple-gpus), and [TPU and XLA support](extensions/xla).\n\n✅ &nbsp;[Pretrain](tutorials/pretrain.md), [finetune](tutorials/finetune.md), and [deploy](tutorials/inference.md)\n\n✅ &nbsp;Reduce compute requirements with low-precision settings: FP16, BF16, and FP16/FP32 mixed.\n\n✅ &nbsp;Lower memory requirements with [quantization](tutorials/quantize.md): 4-bit floats, 8-bit integers, and double quantization.\n\n✅ &nbsp;[Configuration files](config_hub) for great out-of-the-box performance.\n\n✅ &nbsp;Parameter-efficient finetuning: [LoRA](tutorials/finetune_lora.md), [QLoRA](tutorials/finetune_lora.md), [Adapter](tutorials/finetune_adapter.md), and [Adapter v2](tutorials/finetune_adapter.md).\n\n✅ &nbsp;[Exporting](tutorials/convert_lit_models.md) to other popular model weight formats.\n\n✅ &nbsp;Many popular datasets for [pretraining](tutorials/pretrain.md) and [finetuning](tutorials/prepare_dataset.md), and [support for custom datasets](tutorials/prepare_dataset.md#preparing-custom-datasets-for-instruction-finetuning).\n\n✅ &nbsp;Readable and easy-to-modify code to experiment with the latest research ideas.\n\n&nbsp;\n\n---\n\n# Training recipes\n\nLitGPT comes with validated recipes (YAML configs) to train models under different conditions.  We've generated these recipes based on the parameters we found to perform the best for different training conditions.\n\nBrowse all training recipes [here](config_hub).\n\n### Example\n\n```bash\nlitgpt finetune \\\n  --config https://raw.githubusercontent.com/Lightning-AI/litgpt/main/config_hub/finetune/llama-2-7b/lora.yaml\n```\n<details>\n  <summary>✅ Use configs to customize training</summary>\n  \nConfigs let you customize training for all granular parameters like:\n\n```yaml\n# The path to the base model's checkpoint directory to load for finetuning. (type: <class 'Path'>, default: checkpoints/stabilityai/stablelm-base-alpha-3b)\ncheckpoint_dir: checkpoints/meta-llama/Llama-2-7b-hf\n\n# Directory in which to save checkpoints and logs. (type: <class 'Path'>, default: out/lora)\nout_dir: out/finetune/qlora-llama2-7b\n\n# The precision to use for finetuning. Possible choices: \"bf16-true\", \"bf16-mixed\", \"32-true\". (type: Optional[str], default: null)\nprecision: bf16-true\n\n...\n```\n</details>\n\n<details>\n  <summary>✅ Example: LoRA finetuning config</summary>\n\n&nbsp;\n\n```yaml\n# The path to the base model's checkpoint directory to load for finetuning. (type: <class 'Path'>, default: checkpoints/stabilityai/stablelm-base-alpha-3b)\ncheckpoint_dir: checkpoints/meta-llama/Llama-2-7b-hf\n\n# Directory in which to save checkpoints and logs. (type: <class 'Path'>, default: out/lora)\nout_dir: out/finetune/qlora-llama2-7b\n\n# The precision to use for finetuning. Possible choices: \"bf16-true\", \"bf16-mixed\", \"32-true\". (type: Optional[str], default: null)\nprecision: bf16-true\n\n# If set, quantize the model with this algorithm. See ``tutorials/quantize.md`` for more information. (type: Optional[Literal['nf4', 'nf4-dq', 'fp4', 'fp4-dq', 'int8-training']], default: null)\nquantize: bnb.nf4\n\n# How many devices/GPUs to use. (type: Union[int, str], default: 1)\ndevices: 1\n\n# How many nodes to use. (type: int, default: 1)\nnum_nodes: 1\n\n# The LoRA rank. (type: int, default: 8)\nlora_r: 32\n\n# The LoRA alpha. (type: int, default: 16)\nlora_alpha: 16\n\n# The LoRA dropout value. (type: float, default: 0.05)\nlora_dropout: 0.05\n\n# Whether to apply LoRA to the query weights in attention. (type: bool, default: True)\nlora_query: true\n\n# Whether to apply LoRA to the key weights in attention. (type: bool, default: False)\nlora_key: false\n\n# Whether to apply LoRA to the value weights in attention. (type: bool, default: True)\nlora_value: true\n\n# Whether to apply LoRA to the output projection in the attention block. (type: bool, default: False)\nlora_projection: false\n\n# Whether to apply LoRA to the weights of the MLP in the attention block. (type: bool, default: False)\nlora_mlp: false\n\n# Whether to apply LoRA to output head in GPT. (type: bool, default: False)\nlora_head: false\n\n# Data-related arguments. If not provided, the default is ``litgpt.data.Alpaca``.\ndata:\n  class_path: litgpt.data.Alpaca2k\n  init_args:\n    mask_prompt: false\n    val_split_fraction: 0.05\n    prompt_style: alpaca\n    ignore_index: -100\n    seed: 42\n    num_workers: 4\n    download_dir: data/alpaca2k\n\n# Training-related arguments. See ``litgpt.args.TrainArgs`` for details\ntrain:\n\n  # Number of optimizer steps between saving checkpoints (type: Optional[int], default: 1000)\n  save_interval: 200\n\n  # Number of iterations between logging calls (type: int, default: 1)\n  log_interval: 1\n\n  # Number of samples between optimizer steps across data-parallel ranks (type: int, default: 128)\n  global_batch_size: 8\n\n  # Number of samples per data-parallel rank (type: int, default: 4)\n  micro_batch_size: 2\n\n  # Number of iterations with learning rate warmup active (type: int, default: 100)\n  lr_warmup_steps: 10\n\n  # Number of epochs to train on (type: Optional[int], default: 5)\n  epochs: 4\n\n  # Total number of tokens to train on (type: Optional[int], default: null)\n  max_tokens:\n\n  # Limits the number of optimizer steps to run (type: Optional[int], default: null)\n  max_steps:\n\n  # Limits the length of samples (type: Optional[int], default: null)\n  max_seq_length: 512\n\n  # Whether to tie the embedding weights with the language modeling head weights (type: Optional[bool], default: null)\n  tie_embeddings:\n\n  #   (type: float, default: 0.0003)\n  learning_rate: 0.0002\n\n  #   (type: float, default: 0.02)\n  weight_decay: 0.0\n\n  #   (type: float, default: 0.9)\n  beta1: 0.9\n\n  #   (type: float, default: 0.95)\n  beta2: 0.95\n\n  #   (type: Optional[float], default: null)\n  max_norm:\n\n  #   (type: float, default: 6e-05)\n  min_lr: 6.0e-05\n\n# Evaluation-related arguments. See ``litgpt.args.EvalArgs`` for details\neval:\n\n  # Number of optimizer steps between evaluation calls (type: int, default: 100)\n  interval: 100\n\n  # Number of tokens to generate (type: Optional[int], default: 100)\n  max_new_tokens: 100\n\n  # Number of iterations (type: int, default: 100)\n  max_iters: 100\n\n# The name of the logger to send metrics to. (type: Literal['wandb', 'tensorboard', 'csv'], default: csv)\nlogger_name: csv\n\n# The random seed to use for reproducibility. (type: int, default: 1337)\nseed: 1337\n```\n</details>\n\n<details>\n  <summary>✅ Override any parameter in the CLI:</summary>\n\n```bash\nlitgpt finetune \\\n  --config https://raw.githubusercontent.com/Lightning-AI/litgpt/main/config_hub/finetune/llama-2-7b/lora.yaml \\\n  --lora_r 4\n```\n</details>\n\n&nbsp;\n\n----\n\n# Project highlights\n\nLitGPT powers many great AI projects, initiatives, challenges and of course enterprises. Please submit a pull request to be considered for a feature.   \n\n<details>\n  <summary>📊 SAMBA: Simple Hybrid State Space Models for Efficient Unlimited Context Language Modeling</summary>\n\nThe [Samba](https://github.com/microsoft/Samba) project by researchers at Microsoft is built on top of the LitGPT code base and combines state space models with sliding window attention, which outperforms pure state space models.\n\n</details>\n\n<details>\n  <summary>🏆 NeurIPS 2023 Large Language Model Efficiency Challenge: 1 LLM + 1 GPU + 1 Day</summary>\n\nThe LitGPT repository was the official starter kit for the [NeurIPS 2023 LLM Efficiency Challenge](https://llm-efficiency-challenge.github.io), which is a competition focused on finetuning an existing non-instruction tuned LLM for 24 hours on a single GPU.\n\n</details>\n\n<details>\n  <summary>🦙 TinyLlama: An Open-Source Small Language Model</summary>\n\n\nLitGPT powered the [TinyLlama project](https://github.com/jzhang38/TinyLlama) and [TinyLlama: An Open-Source Small Language Model](https://arxiv.org/abs/2401.02385) research paper.\n\n</details>\n\n<details>\n  <summary>🍪 MicroLlama: MicroLlama-300M</summary>\n\n[MicroLlama](https://github.com/keeeeenw/MicroLlama) is a 300M Llama model pretrained on 50B tokens powered by TinyLlama and LitGPT.\n</details>\n\n<details>\n  <summary>🔬 Pre-training Small Base LMs with Fewer Tokens</summary>\n\nThe research paper [\"Pre-training Small Base LMs with Fewer Tokens\"](https://arxiv.org/abs/2404.08634), which utilizes LitGPT, develops smaller base language models by inheriting a few transformer blocks from larger models and training on a tiny fraction of the data used by the larger models. It demonstrates that these smaller models can perform comparably to larger models despite using significantly less training data and resources.\n\n</details>\n\n&nbsp;\n\n----\n\n# Community\n\nWe welcome all individual contributors, regardless of their level of experience or hardware. Your contributions are valuable, and we are excited to see what you can accomplish in this collaborative and supportive environment.\n\n- [Request a feature](https://github.com/Lightning-AI/litgpt/issues)    \n- [Submit your first contribution](https://lightning.ai/pages/community/tutorial/how-to-contribute-to-litgpt/)    \n- [Join our Discord](https://discord.gg/VptPCZkGNa)    \n\n&nbsp;\n\n# Tutorials   \n\n🚀 [Get started](tutorials/0_to_litgpt.md)    \n⚡️  [Finetuning, incl. LoRA, QLoRA, and Adapters](tutorials/finetune.md)    \n🤖 [Pretraining](tutorials/pretrain.md)    \n💬 [Model evaluation](tutorials/evaluation.md)    \n📘 [Supported and custom datasets](tutorials/prepare_dataset.md)    \n🧹 [Quantization](tutorials/quantize.md)    \n🤯 [Tips for dealing with out-of-memory (OOM) errors](tutorials/oom.md)   \n🧑🏽‍💻 [Using cloud TPUs](extensions/xla)\n\n&nbsp;\n\n----\n\n### Acknowledgments\n\nThis implementation extends on [Lit-LLaMA](https://github.com/lightning-AI/lit-llama) and [nanoGPT](https://github.com/karpathy/nanoGPT), and it's **powered by [Lightning Fabric](https://lightning.ai/docs/fabric/stable/) ⚡**.\n\n- [@karpathy](https://github.com/karpathy) for [nanoGPT](https://github.com/karpathy/nanoGPT)\n- [@EleutherAI](https://github.com/EleutherAI) for [GPT-NeoX](https://github.com/EleutherAI/gpt-neox) and the [Evaluation Harness](https://github.com/EleutherAI/lm-evaluation-harness)\n- [@TimDettmers](https://github.com/TimDettmers) for [bitsandbytes](https://github.com/TimDettmers/bitsandbytes)\n- [@Microsoft](https://github.com/microsoft) for [LoRA](https://github.com/microsoft/LoRA)\n- [@tridao](https://github.com/tridao) for [Flash Attention 2](https://github.com/Dao-AILab/flash-attention)\n\n### License\n\nLitGPT is released under the [Apache 2.0](https://github.com/Lightning-AI/litgpt/blob/main/LICENSE) license.\n\n### Citation\n\nIf you use LitGPT in your research, please cite the following work:\n\n```bibtex\n@misc{litgpt-2023,\n  author       = {Lightning AI},\n  title        = {LitGPT},\n  howpublished = {\\url{https://github.com/Lightning-AI/litgpt}},\n  year         = {2023},\n}\n```\n\n&nbsp;\n"
        },
        {
          "name": "config_hub",
          "type": "tree",
          "content": null
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "litgpt",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.49609375,
          "content": "[project]\nname = \"litgpt\"\nversion = \"0.5.6.dev1\"\ndescription = \"Hackable implementation of state-of-the-art open-source LLMs\"\nauthors = [\n    { name = \"Lightning AI\", email = \"contact@lightning.ai\" },\n]\nreadme = \"README.md\"\nlicense = { file = \"LICENSE\" }\n\ndependencies = [\n    \"torch>=2.5.0,<2.6.0\",\n    \"numpy<2.0\",\n    \"lightning>=2.5.0,<2.6.0\",\n    \"jsonargparse[signatures]>=4.30.1,<=4.32.1\",    # 4.33 does not seem to be compatible with Python 3.9\n    \"huggingface_hub>=0.23.5\",          # download models\n    \"safetensors>=0.4.3\",               # download models\n    \"tokenizers>=0.15.2\",               # tokenization in most models\n    \"tqdm>=4.66.0\",                     # convert_hf_checkpoint\n    \"lightning-thunder @ git+https://github.com/Lightning-AI/lightning-thunder/ ; python_version >= '3.10' and sys_platform == 'linux'\",\n]\n\n[project.urls]\nhomepage = \"https://github.com/lightning-AI/litgpt\"\ndocumentation = \"https://github.com/lightning-AI/litgpt/tutorials\"\n\n[project.scripts]\nlitgpt = \"litgpt.__main__:main\"\n\n[project.optional-dependencies]\ntest = [\n    \"pytest>=8.1.1\",\n    \"pytest-rerunfailures>=14.0\",\n    \"pytest-timeout>=2.3.1\",\n    \"pytest-dependency>=0.6.0\",\n    \"transformers>=4.38.0\",  # numerical comparisons\n    \"einops>=0.7.0\",\n    \"protobuf>=4.23.4\",\n]\nall = [\n    \"bitsandbytes >=0.44.0,<0.44.2; sys_platform == 'linux' or sys_platform == 'win32'\", # quantization\n    \"bitsandbytes >=0.42.0,<0.43.0 ; sys_platform == 'darwin'\", # quantization\n    \"sentencepiece>=0.2.0\",      # llama-based models\n    \"requests>=2.31.0\",          # litgpt.data\n    \"litdata==0.2.17\",           # litgpt.data\n    \"litserve<=0.2.4\",           # litgpt.deploy\n    \"zstandard>=0.22.0\",         # litgpt.data.prepare_slimpajama.py\n    \"pandas>=1.9.0\",             # litgpt.data.prepare_starcoder.py\n    \"pyarrow>=15.0.2\",           # litgpt.data.prepare_starcoder.py\n    \"tensorboard>=2.14.0\",       # litgpt.pretrain\n    \"torchmetrics>=1.3.1\",       # litgpt.pretrain\n    \"datasets>=2.18.0\",          # litgpt.evaluate\n    \"transformers>=4.38.0\",      # litgpt.evaluate\n    \"lm-eval>=0.4.2\",            # litgpt.evaluate\n    \"huggingface_hub[hf_transfer]>=0.21.0\",  # download\n    \"uvloop>=0.2.0 ; sys_platform != 'win32'\"  # litdata, only on non-Windows\n]\n\n[build-system]\nrequires = [\n    \"setuptools>=68.2.2\",\n    \"wheel>=0.41.2\",\n]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools.packages.find]\ninclude = [\n    \"litgpt\",\n    \"litgpt.*\",\n]\nexclude = []\n\n[tool.setuptools.package-data]\nlitgpt = [\n    \"LICENSE\",\n    \"README.md\",\n]\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorials",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}