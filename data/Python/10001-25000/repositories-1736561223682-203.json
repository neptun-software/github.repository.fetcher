{
  "metadata": {
    "timestamp": 1736561223682,
    "page": 203,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "SWE-agent/SWE-agent",
      "stars": 14134,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 2.5615234375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# Mac files\n*.DS_Store\n\n# Custom\nkeys.cfg\n\n# iPython Notebooks\n*.ipynb\n\n# Evaluation folders\nresults/\ntestbed/\ntemp/\n\n# Ignore all YAML files in data/\ndata/*/ic-*\ndata/*/single-issues\n\n# Fine tuning data\nfine_tune/*.ipynb\nfine_tune/subtasks/*.jsonl\ntemp*.jsonl\n\n# Inspector\ninspector/*.json\n\n# Ignore all files in the private folder\nprivate/\n\n### Website\n\n# dependencies\nwebsite/frontend/node_modules\nwebsite/frontend/package-lock.json\nwebsite/frontend/.pnp\n*.pnp.js\n\n# testing\nwebsite/frontend/coverage\n\n# production\nwebsite/frontend/build\n\n# misc\n*.env.local\n*.env.development.local\n*.env.test.local\n*.env.production.local\n.api_key\n*npm-debug.log*\n*yarn-debug.log*\n*yarn-error.log*\n\n\n# demo yamls (for editing)\n*.demo.yaml\n\n# trajectory files\ntrajectories/**\n!trajectories/demonstrations/**\n\n.vscode/**\n\n# PyCharm\n.idea/\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# Trailing whitespace & black\n51699eb03c3c4f36d4b5ef2725f7bd5223874da7\n70ba97190a781705203ba838bfe0fb8be7cfa32f\n83988093c08ab5f1cb999f97fc3745f3d3af306f\n# Code quality: Convert to make use of PEP 585 and PEP 604\n29a4c6dfb6cceff5e657c707ce809bc78f33b778\n# Sort imports\nf873761e6760a844c1788cb5f4e42de401ab2c38\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7099609375,
          "content": "keys.yaml\n.swe-agent-human-history\n.vscode/**\ncov.xml\ntrajectories/**\n!trajectories/demonstrations/**\ndata/**\n*.env\n!tools/*\n\n# -------- automatically generated files --------\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\n/lib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# Mac files\n*.DS_Store\n\n# Custom\nkeys*.cfg\n\n# iPython Notebooks\n*.ipynb\n\n# Evaluation folders\nresults/\ntestbed/\ntemp/\n\n# Ignore all YAML files in data/\ndata/*/ic-*\ndata/*/single-issues\n\n# Fine tuning data\nfine_tune/*.ipynb\nfine_tune/subtasks/*.jsonl\ntemp*.jsonl\n\n# Inspector\ninspector/*.json\n\n# Ignore all files in the private folder\nprivate/\n\n### Website\n\n# dependencies\nwebsite/frontend/node_modules\nwebsite/frontend/package-lock.json\nwebsite/frontend/.pnp\n*.pnp.js\n\n# testing\nwebsite/frontend/coverage\n\n# production\nwebsite/frontend/build\n\n# misc\n*.env.local\n*.env.development.local\n*.env.test.local\n*.env.production.local\n.api_key\n*npm-debug.log*\n*yarn-debug.log*\n*yarn-error.log*\n\n\n# demo yamls (for editing)\n*.demo.yaml\n\n# PyCharm\n.idea/\n\n# Disasm / Decomp output\n*.decomp.json\n*.disas.json\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.9912109375,
          "content": "ci:\n  autoupdate_commit_msg: \"chore: update pre-commit hooks\"\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: \"v5.0.0\"\n    hooks:\n      - id: check-added-large-files\n      - id: check-case-conflict\n      - id: check-merge-conflict\n      - id: check-symlinks\n      - id: mixed-line-ending\n      - id: detect-private-key\n      - id: check-ast\n      - id: trailing-whitespace\n\n  - repo: https://github.com/crate-ci/typos\n    rev: typos-dict-v0.11.37\n    hooks:\n      - id: typos\n        files: \\.(py|md|rst|yaml|toml)\n        exclude: pyproject.toml\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.2\n    hooks:\n      # Run the linter.\n      - id: ruff\n        args: [\"--fix\"]\n      # Run the formatter.\n      - id: ruff-format\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: \"v4.0.0-alpha.8\" # Use the sha or tag you want to point at\n    hooks:\n      - id: prettier\n        types_or: [\"javascript\", \"css\"]\n\nexclude: \"^tests/test_data/|^tools/.*/.*.py\""
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.0244140625,
          "content": "# Contribution guidelines\n\n<!-- Please don't use relative links in this page, as it is included by github in various places -->\n<!-- INCLUSION START -->\n\nThe easiest way to contribute is to give us feedback.\n\n* **Something isn't working?** Open a [bug report](https://github.com/SWE-agent/SWE-agent/issues/new?template=bug_report.yml).\n  Rule of thumb: If you're running something and you get some error messages, this is the issue type for you.\n* **You have a concrete question?** Open a [question issue](https://github.com/SWE-agent/SWE-agent/issues/new?template=question.yml).\n* **You are missing something?** Open a [feature request issue](https://github.com/SWE-agent/SWE-agent/issues/new?template=feature_request.yml)\n* **Open-ended discussion?** Talk on [discord](https://discord.gg/AVEFbBn2rH). Note that all actionable items should be an issue though.\n\n<!-- INCLUSION END -->\n\nYou want to do contribute to the development? Great! Please see the [development guidelines](https://swe-agent.com/latest/dev/contribute/) for guidelines and tips."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5634765625,
          "content": "FROM python:3.9\n\n# Set the working directory\nWORKDIR /app\n\n# Install nodejs\nRUN apt update && \\\n    apt install -y nodejs npm && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Docker CLI using the official Docker installation script\nRUN curl -fsSL https://get.docker.com -o get-docker.sh && \\\n    sh get-docker.sh\n\n# Copy the application code\n# Do this last to take advantage of the docker layer mechanism\nCOPY . /app\n\n# Install Python dependencies\nRUN pip install -e '.'\n\n# Install react dependencies ahead of time\nRUN cd sweagent/frontend && npm install\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1201171875,
          "content": "MIT License\n\nCopyright (c) 2024 John Yang, Carlos E. Jimenez, Alexander Wettig, Shunyu Yao, Karthik Narasimhan, Ofir Press\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.005859375,
          "content": "<p align=\"center\">\n  <a href=\"https://swe-agent.com/latest/\">\n    <img src=\"assets/swe-agent-banner.png\" alt=\"swe-agent.com\" style=\"height: 12em\" />\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://swe-agent.com/latest/\"><strong>Documentation</strong></a>&nbsp; | &nbsp;\n  <a href=\"https://discord.gg/AVEFbBn2rH\"><strong>Discord</strong></a>&nbsp; | &nbsp;\n  <a href=\"https://arxiv.org/abs/2405.15793\"><strong>Paper</strong></a>\n</p>\n\n\nSWE-agent lets your language model of choice (e.g. GPT-4o or Claude Sonnet 3.5) autonomously use tools to:\n\n* [fix issues in real GitHub repositories](https://swe-agent.com/latest/usage/hello_world),\n* perform tasks on the web,\n* find cybersecurity vulnerabilities (by solving Capture The Flag challenges), or\n* [any custom task](https://swe-agent.com/latest/usage/coding_challenges).\n\nIt does so by using configurable [agent-computer interfaces](https://arxiv.org/abs/2405.15793) (ACIs) to interact with isolated computer environments.\n\nSWE-agent is built and maintained by researchers from Princeton University and Stanford University.\n\n## 🚀 Get started!\n\n👉 Try SWE-agent in your browser: [![Open in GitHub Codespaces](https://img.shields.io/badge/Open_in_GitHub_Codespaces-gray?logo=github)](https://codespaces.new/SWE-agent/SWE-agent) ([more information](https://swe-agent.com/latest/installation/codespaces/))\n\nRead our [documentation][docs] to learn more:\n\n* [Installation](https://swe-agent.com/latest/installation/)\n* [Command line usage](https://swe-agent.com/latest/usage/cl_tutorial/)\n* [Benchmarking on SWE-bench](https://swe-agent.com/latest/usage/benchmarking/)\n* [Frequently Asked Questions](https://swe-agent.com/latest/faq/)\n\n[docs]: https://swe-agent.com\n\n## SWE-agent for offensive cybersecurity (EnIGMA) <a name=\"enigma\"></a>\n\n<img src=\"https://github.com/user-attachments/assets/84599168-11a7-4776-8a49-33dbf0758bb2\" height=\"80px\"></img>\n\n[SWE-agent: EnIGMA][enigma] is a mode for solving offensive cybersecurity (capture the flag) challenges.\nEnIGMA achieves state-of-the-art results on multiple cybersecurity benchmarks (see [leaderboard](https://enigma-agent.com/#results)).\nThe EnIGMA project introduced multiple features that are available in all modes of SWE-agent, such as the [debugger and server connection tools](https://swe-agent.com/0.7/background/iat/) and a [summarizer](https://swe-agent.com/0.7/config/summarizers/) to handle long outputs. Please use [SWE-agent 0.7](https://github.com/SWE-agent/SWE-agent/tree/v0.7) while we update EnIGMA for 1.0.\n\n[enigma]: https://enigma-agent.com\n[SWE-bench]: https://github.com/SWE-bench/SWE-bench\n[nyu-ctf]: https://arxiv.org/abs/2406.05590\n\n## About\nSWE-agent is an academic project started at Princeton University by John Yang*, Carlos E. Jimenez*, Alexander Wettig, Kilian Lieret, Shunyu Yao, Karthik Narasimhan, and Ofir Press.\nContact person: [John Yang](https://john-b-yang.github.io/), [Carlos E. Jimenez](http://www.carlosejimenez.com/), and [Kilian Lieret](https://www.lieret.net/) (Email: johnby@stanford.edu, carlosej@princeton.edu, kl5675@princeton.edu).\n\n## Contributions <a name=\"contributions\"></a>\n\n- If you'd like to ask questions, learn about upcoming features, and participate in future development, join our [Discord community](https://discord.gg/AVEFbBn2rH)!\n- If you'd like to contribute to the codebase, we welcome [issues](https://github.com/SWE-agent/SWE-agent/issues) and [pull requests](https://github.com/SWE-agent/SWE-agent/pulls)!\n\n## Citation <a name=\"citation\"></a>\n\nIf you found this work helpful, please consider citing it using the following:\n```bibtex\n@inproceedings{yang2024sweagent,\n  title={{SWE}-agent: Agent-Computer Interfaces Enable Automated Software Engineering},\n  author={John Yang and Carlos E Jimenez and Alexander Wettig and Kilian Lieret and Shunyu Yao and Karthik R Narasimhan and Ofir Press},\n  booktitle={The Thirty-eighth Annual Conference on Neural Information Processing Systems},\n  year={2024},\n  url={https://arxiv.org/abs/2405.15793}\n}\n```\n\nIf you used the summarizer, interactive commands or the offensive cybersecurity capabilities in SWE-agent, please also consider citing:\n```bibtex\n@misc{abramovich2024enigmaenhancedinteractivegenerative,\n      title={EnIGMA: Enhanced Interactive Generative Model Agent for CTF Challenges},\n      author={Talor Abramovich and Meet Udeshi and Minghao Shao and Kilian Lieret and Haoran Xi and Kimberly Milner and Sofija Jancheska and John Yang and Carlos E. Jimenez and Farshad Khorrami and Prashanth Krishnamurthy and Brendan Dolan-Gavitt and Muhammad Shafique and Karthik Narasimhan and Ramesh Karri and Ofir Press},\n      year={2024},\n      eprint={2409.16165},\n      archivePrefix={arXiv},\n      primaryClass={cs.AI},\n      url={https://arxiv.org/abs/2409.16165},\n}\n```\n\n## 🪪 License <a name=\"license\"></a>\nMIT. Check `LICENSE`.\n\n<div align=\"center\">\n\n[![Pytest](https://github.com/SWE-agent/SWE-agent/actions/workflows/pytest.yaml/badge.svg)](https://github.com/SWE-agent/SWE-agent/actions/workflows/pytest.yaml)\n[![Release to dockerhub (nightly)](https://github.com/SWE-agent/SWE-agent/actions/workflows/release-dockerhub-nightly.yaml/badge.svg)](https://github.com/SWE-agent/SWE-agent/actions/workflows/release-dockerhub-nightly.yaml)\n[![Release to dockerhub (release)](https://github.com/SWE-agent/SWE-agent/actions/workflows/release-dockerhub-release.yaml/badge.svg)](https://github.com/SWE-agent/SWE-agent/actions/workflows/release-dockerhub-release.yaml)\n[![build-docs](https://github.com/SWE-agent/SWE-agent/actions/workflows/build-docs.yaml/badge.svg)](https://github.com/SWE-agent/SWE-agent/actions/workflows/build-docs.yaml)\n[![codecov](https://codecov.io/gh/SWE-agent/SWE-agent/graph/badge.svg?token=18XAVDK365)](https://codecov.io/gh/SWE-agent/SWE-agent)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/SWE-agent/SWE-agent/main.svg)](https://results.pre-commit.ci/latest/github/SWE-agent/SWE-agent/main)\n[![Markdown links](https://github.com/SWE-agent/SWE-agent/actions/workflows/check-links.yaml/badge.svg)](https://github.com/SWE-agent/SWE-agent/actions/workflows/check-links.yaml)\n\n</div>\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2119140625,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease contact Kilian Lieret (kl5675@princeton.edu), John Yang (johnby@stanford.edu), Carlos E. Jimenez (carlosej@princeton.edu), and Ofir Press (ofirp@princeton.edu).\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.3896484375,
          "content": "# Configuration for codecov\ncoverage:\n  status:\n    project:\n      default:\n        # If we get < 50% coverage, codecov is gonna mark it a failure\n        target: 50%\n        threshold: null\n    patch:\n      default:\n        # Codecov won't mark it as a failure if a patch is not covered well\n        informational: true\ngithub_checks:\n  # Don't mark lines that aren't covered\n  annotations: false\n\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 4.7939453125,
          "content": "site_name: SWE-agent documentation\nsite_url: https://swe-agent.com\ntheme:\n  name: material\n  icon:\n    repo: fontawesome/brands/github\n    annotation: material/chevron-right-circle\n  custom_dir: docs/overrides\n  logo: assets/swe-agent.svg\n  favicon: assets/favicon.ico\n  palette:\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n    - scheme: default\n      # primary: black  # override in custom.css\n      accent: deep orange\n      media: \"(prefers-color-scheme: light)\"\n      toggle:\n        icon: material/weather-night\n        name: Switch to dark mode\n    - scheme: slate\n      # primary: black  # override in custom.css\n      accent: deep orange\n      media: \"(prefers-color-scheme: dark)\"\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n  features:\n    - navigation.indexes\n    - navigation.top\n    - content.action.edit\n    - navigation.footer\n    - content.code.copy\n    - content.footnote.tooltips\n    - header.autohide\n    - announce.dismiss\n    - content.code.annotate\n    - navigation.tabs\n    - navigation.tabs.sticky\nmarkdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.superfences\n  - pymdownx.magiclink\n  - footnotes\n  - attr_list\n  - md_in_html\n  - pymdownx.snippets:\n      check_paths: true\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\nnav:\n  - Getting Started:\n    - index.md\n    - \"Installation\":\n      - \"installation/index.md\"\n      - \"From source\": \"installation/source.md\"\n      - \"In browser\": \"installation/codespaces.md\"\n      - \"Models and keys\": \"installation/keys.md\"\n      - \"1.0 migration\": \"installation/migration.md\"\n      - \"Troubleshooting\": \"installation/tips.md\"\n      - \"Changelog\": \"installation/changelog.md\"\n    - \"Tutorials\":\n      - \"Hello world\": \"usage/hello_world.md\"\n      - \"Command line basics\": \"usage/cl_tutorial.md\"\n      - \"Solving coding challenges\": \"usage/coding_challenges.md\"\n      - \"Trajectory inspector\": \"usage/inspector.md\"\n      - \"Batch mode\": \"usage/batch_mode.md\"\n      - \"Benchmarking\": \"usage/benchmarking.md\"\n    - \"FAQ\": \"faq.md\"\n  - User Guides:\n    - \"usage/index.md\"\n    - Project overview:\n      - \"index\": \"background/index.md\"\n      - \"Architecture\": \"background/architecture.md\"\n      - \"Agent tools\": \"background/aci.md\"\n    - \"Output files\": \"usage/trajectories.md\"\n    - Configuration:\n      - \"index\": \"config/index.md\"\n      - \"Config files\": \"config/config.md\"\n      - \"Templates\": \"config/templates.md\"\n      - \"Demonstrations\": \"config/demonstrations.md\"\n    - Development:\n      - \"Contribution guide\": \"dev/contribute.md\"\n      - \"Formatting conflicts\": \"dev/formatting_conflicts.md\"\n  - API Reference:\n    - \"reference/index.md\"\n    - Run config:\n      - \"Run single\": \"reference/run_single_config.md\"\n      - \"Run batch\": \"reference/run_batch_config.md\"\n    - Instance config:\n      - \"Problem statements\": \"reference/problem_statements.md\"\n      - \"Repository\": \"reference/repo.md\"\n      - \"Batch instances\": \"reference/batch_instances.md\"\n    - Agent config:\n      - \"Agent config\": \"reference/agent_config.md\"\n      - \"Model config\": \"reference/model_config.md\"\n      - \"Templates\": \"reference/template_config.md\"\n      - \"Tools\": \"reference/tools_config.md\"\n      - \"History processors\": \"reference/history_processor_config.md\"\n    - \"Environment config\": \"reference/env_config.md\"\n    - \"Tool bundle config\": \"reference/bundle_config.md\"\n    - Classes:\n      - \"Agent class\": \"reference/agent.md\"\n      - \"Environment class\": \"reference/env.md\"\n      - \"Exceptions\": \"reference/exceptions.md\"\nplugins:\n  - glightbox\n  - search\n  - include-markdown\n  - mike:\n      canonical_version: latest\n      version_selector: true\n  - mkdocstrings:\n      default_handler: python\n      handlers:\n        python:\n          paths: [sweagent]\n          options:\n            merge_init_into_class: true\n            summary: false\n            show_root_heading: true\n            heading_level: 2\n            docstring_style: google\n            show_if_no_docstring: true\n            show_signature: true\n            show_signature_annotations: true\n            signature_crossrefs: true\n            separate_signature: true\n            show_symbol_type_heading: true\n            show_symbol_type_toc: true\n            extensions:\n              - griffe_pydantic:\n                  schema: false\n            filters:\n              - \"!^_\"\n              - \"!^model_config\"\n              - \"!^model_post_init\"\nrepo_url: https://github.com/SWE-agent/SWE-agent\nrepo_name: SWE-agent/SWE-agent\nedit_uri: edit/main/docs/\nextra_css:\n  - assets/custom.css\n  - assets/mkdocstrings.css\n  - assets/image_theme.css\nextra:\n  version:\n    provider: mike\n"
        },
        {
          "name": "mlc_config.json",
          "type": "blob",
          "size": 0.193359375,
          "content": "{\n  \"ignorePatterns\": [\n    {\n      \"pattern\": \"https://github.com/?.*\"\n    },\n    {\n      \"pattern\": \"https://platform.openai.com/docs/.*\"\n    },\n    {\n      \"pattern\": \".*localhost.*\"\n    }\n  ]\n}\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.177734375,
          "content": "# Guide (user-friendly):\n# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/\n# Specification (technical, formal):\n# https://packaging.python.org/en/latest/specifications/pyproject-toml/\n\n\n# Choosing a build backend:\n[build-system]\nrequires = [\"setuptools\"]  # REQUIRED if [build-system] table is used\nbuild-backend = \"setuptools.build_meta\"  # If not defined, then legacy behavior can happen.\n\n\n[project]\nname = \"sweagent\"\ndynamic = [\"version\"]\ndescription = \"The official SWE-agent package - an open source Agent Computer Interface for running language models as software engineers.\"\nreadme = \"README.md\"\nrequires-python = \">=3.10\"\nlicense = {file = \"LICENSE\"}\nkeywords = [\"nlp\", \"agents\", \"code\"]\nauthors = [\n    {name = \"Carlos E. Jimenez\", email = \"carlosej@princeton.edu\" },\n    {name = \"John Yang\", email = \"byjohnyang@gmail.com\" },\n    {name = \"Kilian Lieret\", email = \"kilian.lieret@posteo.de\" },\n]\n\n# Classifiers help users find your project by categorizing it.\nclassifiers = [\n  # How mature is this project? Common values are\n  #   3 - Alpha, 4 - Beta, 5 - Production/Stable\n  \"Operating System :: OS Independent\",\n  # Indicate who your project is intended for\n  \"Intended Audience :: Developers\",\n  # Pick your license as you wish\n  \"License :: OSI Approved :: MIT License\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3 :: Only\",\n]\n\ndependencies = [\n    \"datasets\",\n    \"numpy\",\n    \"pandas\",\n    \"rich\",\n    \"ruamel.yaml\",\n    \"tenacity\",\n    \"unidiff\",\n    \"simple-parsing\",\n    \"rich-argparse\",\n    \"flask\",\n    \"flask-cors\",\n    \"flask-socketio\",\n    \"pydantic\",\n    \"python-dotenv\",\n    \"pydantic_settings\",\n    \"litellm\",\n    \"GitPython\",\n    \"ghapi\",\n    \"swe-rex\"\n]\n\n[project.scripts]\nsweagent = \"sweagent.run.run:main\"\n\n[project.optional-dependencies]\ndev = [\n    \"mike\",\n    \"mkdocs-material\",\n    \"mkdocs-glightbox\",\n    \"mkdocs-include-markdown-plugin\",\n    \"mkdocstrings[python]>=0.18\",\n    \"pytest\",\n    \"pytest-cov\",\n    \"pipx\",\n    \"pre-commit\",\n    \"pytest-xdist\",\n    \"griffe-pydantic\",\n]\n\n[tool.setuptools]\ninclude-package-data = true\n\n[tool.setuptools.dynamic]\nversion = {attr = \"sweagent.__version__\"}\n\n[tool.setuptools.packages.find]\nwhere = [\".\"]\nnamespaces = false\n\n[project.urls]\n\"Homepage\" = \"https://swe-agent.com\"\n\"Bug Reports\" = \"http://github.com/SWE-agent/SWE-agent/issues\"\n\"Documentation\" = \"https://swe-agent.com/latest/\"\n\"Source\" = \"http://github.com/SWE-agent/SWE-agent\"\n\n\n[tool.pytest.ini_options]\nmarkers = [\n    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n    \"ctf: marks EnIGMA tests for using SWE-agent on capture the flag (CTF) challenges\",\n]\ntestpaths = [\n    \"tests\"\n]\nxfail_strict = true\nasyncio_default_fixture_loop_scope = \"function\"\n\n[tool.ruff]\n# Exclude a variety of commonly ignored directories.\nexclude = [\n    \".bzr\",\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".git-rewrite\",\n    \".hg\",\n    \".ipynb_checkpoints\",\n    \".mypy_cache\",\n    \".nox\",\n    \".pants.d\",\n    \".pyenv\",\n    \".pytest_cache\",\n    \".pytype\",\n    \".ruff_cache\",\n    \".svn\",\n    \".tox\",\n    \".venv\",\n    \".vscode\",\n    \"__pypackages__\",\n    \"_build\",\n    \"buck-out\",\n    \"build\",\n    \"dist\",\n    \"node_modules\",\n    \"site-packages\",\n    \"venv\",\n    # ---- project specific ----\n    \"tests/test_data\",\n    # Exclude commands so they don't get the __future__ imports\n    \"config/commands\",\n]\n\nline-length = 120\nindent-width = 4\n\ntarget-version = \"py310\"\n\n[tool.ruff.lint]\n# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.\n# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or\n# McCabe complexity (`C901`) by default.\n# I001: Isort, I002: required import\nselect = [\n    # Error (E)\n    \"E\",\n    # Error (PLE)\n    \"PLE\",\n    # pycodestyle\n    \"E713\",  # not in\n    \"E714\",  # is not\n    \"E711\",  # comparison with None\n    # pyflakes\n    \"F821\",\n    \"F822\",\n    \"F401\",  # unused-import\n    \"F841\",  # unused var\n    \"F541\",  # f-string without args\n    \"F901\",  # raise NotImplemented should be raise NotImplementedError\n    # isort\n    \"I001\",  # isort\n    \"I002\",  # required import\n    # pyupgrade and related\n    \"UP\",    # pyupgrade\n    \"C401\",  # flake8-comprehensions: unnecessary-generator-set\n    \"C402\",  # flake8-comprehensions: unnecessary-generator-dict\n    \"C403\",  # flake8-comprehensions: unnecessary-list-comprehension-set\n    \"C404\",  # flake8-comprehensions: unnecessary-list-comprehension-dict\n    \"C405\",  # flake8-comprehensions: unnecessary-literal-set\n    \"F632\",  # pyflakes: is-literal\n    \"W605\",  # pycodestyle: invalid-escape-sequence\n    # bugbear\n    \"B006\",  # mutable default\n    \"B007\",  # unused loop var\n    \"B009\",  # getattr with constant\n    # flake8-errmsg\n    \"EM\",\n    # flake8-future-annotations\n    \"FA102\",\n    # flake8-return\n    \"RET\",\n    # RUF\n    \"RUF019\",  # unneded key in dict check\n    # pytest\n    \"PT\",\n    # flake8-simplify (SIM)\n    \"SIM201\",\n    # flake8-use-pathlib\n    \"PTH100\",\n    \"PTH110\",\n    \"PTH111\",\n    \"PTH112\",\n    \"PTH113\",\n    \"PTH114\",\n    \"PTH117\",\n    \"PTH118\",\n    \"PTH119\",\n    \"PTH120\",\n    \"PTH121\",\n    \"PTH122\",\n    \"PTH202\",\n    \"PTH203\",\n    \"PTH204\",\n    \"PTH205\",\n]\nignore = [\n    # flake8-return\n    \"RET505\",  # can't autofix\n    \"RET506\",  # can't autofix\n    \"RET507\",  # can't autofix\n    # error (E)\n    \"E501\",    # line too long\n    \"E402\",    # import not on top of file\n    \"E722\",    # bare except\n    \"E741\",    # ambiguous symbol\n    # pytest\n    \"PT011\",\n    \"PT018\",\n]\n\n# Allow fix for all enabled rules (when `--fix`) is provided.\nfixable = [\"ALL\"]\nunfixable = []\n\n# Allow unused variables when underscore-prefixed.\ndummy-variable-rgx = \"^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$\"\n\n[tool.ruff.format]\n# Like Black, use double quotes for strings.\nquote-style = \"double\"\n\n# Like Black, indent with spaces, rather than tabs.\nindent-style = \"space\"\n\n# Like Black, respect magic trailing commas.\nskip-magic-trailing-comma = false\n\n# Like Black, automatically detect the appropriate line ending.\nline-ending = \"auto\"\n\n[tool.typos.default.extend-identifiers]\n# *sigh* this just isn't worth the cost of fixing\nACI = \"ACI\"\n\n[tool.typos.default.extend-words]\n# Don't correct the surname \"Teh\"\naci = \"aci\"\n\n[tool.ruff.lint.isort]\n# required-imports = [\"from __future__ import annotations\"]\n"
        },
        {
          "name": "release_dockerhub.sh",
          "type": "blob",
          "size": 2.1689453125,
          "content": "#!/usr/bin/env bash\n\n# This script builds the official docker images and pushes them to dockerhub\n# after checking with the user.\n\n# NOTE: To clear the buildx cache, run the following command:\n# docker buildx prune --all or more specifically docker buildx rm <context_name>\n\n# bash strict mode\nset -euo pipefail\n\n# Check if exactly one argument is supplied\nif [ \"$#\" -ne 2 ]; then\n    echo \"Usage: $0 <user> <version>\" >&2\n    exit 1\nfi\n\nUSER=${1}\nVERSION_STR=${2}\n\nif [[ -z \"$USER\" ]]; then\n    echo \"User name cannot be empty\" >&2\n    exit 3\nfi\nif [[ \"$USER\" != \"sweagent\" ]]; then\n    echo \"Careful here! Even if the username isn't sweagent, swe-eval will still be built on top of the sweagent/swe-agent image.\" >&2\n    read -p \"Do you want to proceed? (yes) \" response\n    if [[ \"${response}\" != \"yes\" ]]; then\n        echo \"Exiting...\" >&2\n        exit 4\n    fi\nfi\n\n\n# The argument should be in the form of x.x.x where each x can be one or more digits\nif [[ $VERSION_STR =~ ^[0-9]+\\.[0-9]+\\.[0-9]+$ ]] || [ \"$VERSION_STR\" = \"latest\" ]; then\n    echo \"Validated version number\"\nelse\n    echo \"Argument must be 'latest' or in the form x.x.x, where x is one or more numbers.\" >&2\n    exit 2\nfi\n\n\nDOCKER_CONTEXT_NAME=\"sweagent-multiplatform\"\ndocker buildx use \"$DOCKER_CONTEXT_NAME\" ||  docker buildx create --use --name \"$DOCKER_CONTEXT_NAME\"\n\non_error() {\n    echo \"====> ERROR!!! IMPORTANT: Make sure that you've already pushed something to dockerhub or pushed the tag to github!\" >&2\n}\ntrap on_error ERR\n\necho \"------------------------------------------\"\necho \"Building swe-agent\"\necho \"------------------------------------------\"\ndocker buildx build  --platform=linux/amd64,linux/arm64  -t ${USER}/swe-agent:${VERSION_STR} -f docker/swe.Dockerfile --push .\necho \"🔥 swe-agent pushed to dockerhub\"\necho \"------------------------------------------\"\necho \"Building swe-agent-run\"\necho \"------------------------------------------\"\ndocker buildx build  --platform=linux/amd64,linux/arm64 -t ${USER}/swe-agent-run:${VERSION_STR} --push .\necho \"🔥 swe-agent-run pushed to dockerhub\"\necho \"------------------------------------------\"\necho \"Building of all images done\"\necho \"------------------------------------------\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "start_web_ui.sh",
          "type": "blob",
          "size": 1.2919921875,
          "content": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nthis_dir=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n\nfunction cleanup {\n    echo \"Stopping react server\"\n    npx --prefix \"${this_dir}/sweagent/frontend\" pm2 delete swe-agent\n    echo \"Stopping Flask server\"\n    kill \"$flask_pid\" 2>/dev/null\n    echo \"Cleanup complete\"\n}\n\nfunction print_log {\n    echo \"Something went wrong. Here's web_api.log:\"\n    echo \"----------\"\n    cat web_api.log\n    echo \"----------\"\n}\n\ntrap print_log ERR\npython sweagent/api/server.py > web_api.log 2>&1 &\nflask_pid=$!\n\ncd \"${this_dir}/sweagent/frontend\"\nnpm install\ntrap cleanup EXIT\nnpx pm2 start --name swe-agent npm -- start\n\necho \"* If you are running on your own machine, then a browser window \"\necho \"  should have already opened. If not, wait a few more seconds, then \"\necho \"  open your browser at http://localhost:3000\"\necho \"* If you are running in github codespaces, please click the popup \"\necho \"  that offers to forward port 3000 (not 8000!).\"\necho \"  Missed it? Find more information at \"\necho \"  https://swe-agent.com/latest/installation/codespaces#running-the-web-ui\"\necho \"* Something went wrong? Please check \"\necho \"  web_api.log for error messages!\"\necho \"* See here for more information: https://swe-agent.com/latest/usage/web_ui/\"\n\ncd ../../\n\nwait\nexit $?\n"
        },
        {
          "name": "sweagent",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "trajectories",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}