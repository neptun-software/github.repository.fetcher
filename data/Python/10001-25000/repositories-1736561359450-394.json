{
  "metadata": {
    "timestamp": 1736561359450,
    "page": 394,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "statsmodels/statsmodels",
      "stars": 10339,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.09375,
          "content": "---\nengines:\n pylint:\n   enabled: true\n   python_version: 3\nexclude_paths:\n  - '**/_version.py'\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.048828125,
          "content": "* text=auto\n\nstatsmodels/_version.py export-subst\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3515625,
          "content": "*.py[oc]\n# setup.py working directory\nbuild\n# setup.py dist directory\ndist\n#docs build and others\n#generated  #not yet? generated for dataset not rebuild\ndocs/source/generated\ndocs/source/dev/generated\ndocs/source/examples/generated\ndocs/source/datasets/generated\ndocs/source/examples/index.rst\ndocs/source/examples/notebooks/generated\ndocs/source/datasets/statsmodels.datasets.*\ndocs/source/savefig\ndocs/gettingstarted_0.png\nexamples/executed\n\n#setuptools-scm generated version file\nstatsmodels/_version.py\n# Generated c source and built extensions\n# and Byte-compiled / optimized / DLL files\n*.c\n*.so\n*.py[cod]\n__pycache__/\n\n\n# repository directories for bzr-git\n.bzr\n.git\nmarks.git\nmarks.bzr\n\n# virtualenv stuff\n.venv\n\n# Editor temporary/working/backup files\n*$\n.*.sw[nop]\n.sw[nop]\n*~\n[#]*#\n.#*\n*.bak\n*.tmp\n/.idea\n*.tgz\n*.rej\n*.org\n.project\n*.diff\n.settings/\n*.svn/\n*.log.py\n# Egg metadata\n*.egg-info\n# The shelf plugin uses this dir\n.shelf\n# Mac droppings\n.DS_Store\nhelp\n\n# Coverage report output\n.coverage\ncoverage_html_report/\n\n# Idea IDE\n.idea/\n\n# VS Code\n.vscode/\n.vs/\n\n# Project specific\nstatsmodels/version.py\nstatsmodels.egg-info/\niterate.dat\nhash_dict.pickle\nrehab.table\nsalary.table\n.ipynb_checkpoints\nstatsmodels/tsa/statespace/_statespace.pyx\nstatsmodels/tsa/innovations/_arma_innovations.pyx\nstatsmodels/tsa/regime_switching/_hamilton_filter.pyx\nstatsmodels/tsa/regime_switching/_kim_smoother.pyx\nstatsmodels/tsa/statespace/_initialization.pyx\nstatsmodels/tsa/statespace/_representation.pyx\nstatsmodels/tsa/statespace/_kalman_filter.pyx\nstatsmodels/tsa/statespace/_kalman_smoother.pyx\nstatsmodels/tsa/statespace/_simulation_smoother.pyx\nstatsmodels/tsa/statespace/_cfa_simulation_smoother.pyx\nstatsmodels/tsa/statespace/_tools.pyx\nstatsmodels/tsa/statespace/_filters/_conventional.pyx\nstatsmodels/tsa/statespace/_filters/_inversions.pyx\nstatsmodels/tsa/statespace/_filters/_univariate.pyx\nstatsmodels/tsa/statespace/_filters/_univariate_diffuse.pyx\nstatsmodels/tsa/statespace/_smoothers/_conventional.pyx\nstatsmodels/tsa/statespace/_smoothers/_univariate.pyx\nstatsmodels/tsa/statespace/_smoothers/_univariate_diffuse.pyx\nstatsmodels/tsa/statespace/_smoothers/_alternative.pyx\nstatsmodels/tsa/statespace/_smoothers/_classical.pyx\n\n#pytest\n.cache\n.pytest_cache\n\n# Temporary copies for packaging\nstatsmodels/setup.cfg\nstatsmodels/LICENSE.txt\n\n# Dataset downloads\nstatsmodels/datasets/tests/*.zip"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 7,
          "content": "Alexander W Blocker <ablocker@gmail.com>  Alexander W Blocker <ablocker@gmail.com> \nAlex Griffing <argriffi@ncsu.edu> alex <argriffi@ncsu.edu>\nAlexis Roche <alexis.roche@gmail.com>  Alexis Roche <alexis.roche@gmail.com> \nAna Martinez Pardo <anamartinezpardo@gmail.com>  Ana Martinez Pardo <anamartinezpardo@gmail.com> \nAna Martinez Pardo <anamartinezpardo@gmail.com>  Ana Martinez Pardo <anamartinezpardo@gmailcom> \nanov <novikova.go.zoom@gmail.com>  anov <novikova.go.zoom@gmail.com> \navishaylivne <avishay.livne@gmail.com>  avishaylivne <avishay.livne@gmail.com> \nBart Baker <bartbkr@gmail.com>  Bart Baker <bartbkr@gmail.com> \nBart Baker <bartbkr@gmail.com>  bartbkr <bartbkr@gmail.com> \nBart Baker <bartbkr@gmail.com>  bartbkr@gmail.com <bart@bart-Inspiron-1525.(none)> \nBen Duffield <bduffield@palantir.com> benduffield <bduffield@palantir.com>\nBenjamin Thyreau <benjamin@neron>  benjamin.thyreau <> \nbrian.hawthorne <>  brian.hawthorne <> \nBruno Rodrigues <rodrigues.bruno@aquitania.org>  Bruno Rodrigues <rodrigues.bruno@aquitania.org> \nCarl Vogel <carljv@gmail.com>  Carl Vogel <carljv@gmail.com> \nChad Fulton <chad@chadfulton.com>  Chad Fulton <chad@chadfulton.com> \nChris Jordan-Squire <cjordan1@uw.edu>  Chris Jordan-Squire <cjordan1@uw.edu> \nChristian Prinoth <christian@prinoth.name>  Christian Prinoth <christian@prinoth.name> \nChristopher Burns  cburns <> \nChristopher Burns <cburns@localhost.localdomain>  Chris <cburns@localhost.localdomain> \nChristopher Burns <cburns@berkeley.edu>  Christopher Burns <cburns@berkeley.edu> \nCindee Madison <cindee@berkeley.edu>  Cindee Madison <cindeem@8d8.local> \nDaniel B. Smith <neuromathdan@gmail.com>  Daniel B. Smith <neuromathdan@gmail.com> \ndavclark <>  davclark <> \ndengemann <denis.engemann@gmail.com>  dengemann <denis.engemann@gmail.com> \nDieter Vandenbussche <dvandenbussche@axioma.com>  Dieter Vandenbussche <dvandenbussche@axioma.com> \nDougal Sutherland <dougal@gmail.com>  Dougal Sutherland <dougal@gmail.com> \nEnrico Giampieri <enrico.giampieri@unibo.it>  Enrico Giampieri <enrico.giampieri@unibo.it> \nEric Chiang <eric.chiang.m@gmail.com> ericchiang <eric.chiang.m@gmail.com>\nevelynmitchell <efm-github@linsomniac.com>  evelynmitchell <efm-github@linsomniac.com> \nEvgeni Burovski <evgeni@burovski.me> Zhenya <evgeni@burovski.me>\nFernando Perez <Fernando.Perez@berkeley.edu>  fdo.perez <> \nFernando Perez <Fernando.Perez@berkeley.edu>  Fernando Perez <Fernando.Perez@berkeley.edu> \nGael Varoquaux <gael.varoquaux@normalesup.org>  Gael Varoquaux <gael.varoquaux@normalesup.org> \nGeorge Panterov <econgpanterov@gmail.com>  George Panterov <econgpanterov@gmail.com> \nGrayson <graysonbadgley@gmail.com>  Grayson <graysonbadgley@gmail.com> \nJan Schulz <jasc@gmx.net>  Jan Schulz <jasc@gmx.net> \nJarrod Millman <jarrod.millman@gmail.com>  jarrod.millman <> \nJarrod Millman <jarrod.millman@gmail.com>  Jarrod Millman <millman@berkeley.edu> \nJeff Reback <jeff@reback.net> jreback <jeff@reback.net>\nJonathan Taylor <jtaylo@miller.stanford.edu>  jonathan.taylor <> \nJonathan Taylor <jtaylo@miller.stanford.edu>  Jonathan Taylor <jonathan.taylor@stanford.edu> \nJonathan Taylor <jtaylo@miller.stanford.edu>  Jonathan Taylor <jtaylo@dell-desktop> \nJonathan Taylor <jtaylo@miller.stanford.edu>  Jonathan Taylor <jtaylo@grf> \nJonathan Taylor <jtaylo@miller.stanford.edu>  Jonathan Taylor <jtaylo@kff> \nJonathan Taylor <jtaylo@miller.stanford.edu>  jtaylo <jtaylo@ubuntu.dms.umontreal.ca> \nJosef Perktold <josef.pktd@gmail.com>  Josef Perktold <josef.pktd@gmail.com> \nJustin Grana <jg3705a@student.american.edu>  Justin Grana <jg3705a@student.american.edu> \nlangmore <ianlangmore@gmail.com>  langmore <ianlangmore@gmail.com> \nMatthew Brett <matthew.brett@gmail.com>   matthew.brett <> \nMatthew Brett <matthew.brett@gmail.com>   Matthew Brett <> \nMatthew Brett <matthew.brett@gmail.com>  Matthew Brett <matthew.brett@gmail.com> \nMatthew Brett <matthew.brett@gmail.com>   Matthew Brett <mb312@millroad> \nMatthieu Brucher <matthieu.brucher@gmail.com>  Matthieu Brucher <matthieu.brucher@gmail.com> \nmichael.castelle <>  michael.castelle <> \nMike Crowe <m.j.a.crowe@gmail.com>  Mike Crowe <m.j.a.crowe@gmail.com> \nMike Crowe <m.j.a.crowe@gmail.com>  Mike Crowe <m.j.a.crowe@googlemail.com> \nMike Crowe <m.j.a.crowe@gmail.com>  Mike <m.j.a.crowe@googlemail.com> \nNathaniel J. Smith <njs@pobox.com>  Nathaniel J. Smith <njs@pobox.com> \notterb <itoi@live.com>  otterb <itoi@live.com> \nPadarn Wilson <padarn@wilsonp.anu.edu.au>  padarn <padarn@wilsonp.anu.edu.au> \nPadarn Wilson <padarn@gmail.com> Padarn <padarn@Padarns-MacBook-Air.local>\nParis Sprint Account <paris@grf>  Paris Sprint Account <paris@grf> \nPaul Hobson <pmhobson@gmail.com>  Paul Hobson <pmhobson@gmail.com> \nPeter Prettenhofer <peter.prettenhofer@gmail.com>  Peter Prettenhofer <peter.prettenhofer@gmail.com> \nPietro Battiston <me@pietrobattiston.it>  Pietro Battiston <me@pietrobattiston.it> \nRalf Gommers <ralf.gommers@googlemail.com>  Ralf Gommers <ralf.gommers@googlemail.com> \nRichard T. Guy <richardtguy84@gmail.com>  Richard T. Guy <richardtguy84@gmail.com> \nRobert Cimrman <cimrman3@ntc.zcu.cz>  Robert Cimrman <cimrman3@ntc.zcu.cz> \nRoger Lew <rogerlew@gmail.com>  Roger Lew <rogerlew@gmail.com> \nscottpiraino <scottpiraino@gmail.com>  scottpiraino <scottpiraino@gmail.com> \nsebastien.meriaux <>  sebastien.meriaux <> \nSkipper Seabold <jsseabold@gmail.com>  jsseabold <> \nSkipper Seabold <jsseabold@gmail.com>  jsseabold <jsseabold@gmail.com> \nSkipper Seabold <jsseabold@gmail.com>  Skipper Seabold <jsseabold@gmail.com> \nskipper seabold <skipper@linux-laptop>  skipper seabold <skipper@linux-laptop> \nSkipper Seabold <jsseabold@gmail.com>  skipper <skipper@linux-desktop> \nSkipper Seabold <jsseabold@gmail.com>  skipper <skipper@linux-econ2> \nSteve Genoud <sgenoud@ethz.ch>  Steve Genoud <sgenoud@ethz.ch> \nThomas Haslwanter <thomas.haslwanter@fh-linz.at>  Thomas Haslwanter <thomas.haslwanter@fh-linz.at> \nThomas Kluyver <takowl@gmail.com>  Thomas Kluyver <takowl@gmail.com> \ntim.leslie <>  tim.leslie <> \ntimmie <timmichelsen@gmx-topmail.de>  timmie <timmichelsen@gmx-topmail.de> \nTom Augspurger <thomas-augspurger@uiowa.edu>  TomAugspurger <thomas-augspurger@uiowa.edu> \nTom Augspurger <thomas-augspurger@uiowa.edu> Tom Augspurger <tom.augspurger88@gmail.com>\nTom Waite <twaite@berkeley.edu>  Tom Waite <twaite@berkeley.edu> \nTom Waite <twaite@berkeley.edu>  twaite <twaite@TOM-DUAL> \nTrent Hauck <trent.hauck@gmail.com>  Trent Hauck <trent.hauck@gmail.com> \nTrent Hauck <trent.hauck@gmail.com>  tshauck <trent.hauck@gmail.com> \ntylerhartley <tyleha@gmail.com>  tylerhartley <tyleha@gmail.com> \nVincent Arel-Bundock <varel@umich.edu>  Vincent Arel-Bundock <varel@umich.edu> \nVincent Davis <vincent@vincentdavis.net>  Vincent Davis <vincent@vincentdavis.net> \nVirgileFritsch <virgile.fritsch@gmail.com>  VirgileFritsch <virgile.fritsch@gmail.com> \nWes McKinney <wesmckinn@gmail.com>  Wes McKinney <wesmckinn@gmail.com> \nWes McKinney <wesmckinn@gmail.com>  Wes McKinney <wesm@wesm-desktop> \nYaroslav Halchenko <debian@onerussian.com>  Yaroslav Halchenko <debian@onerussian.com> \nzed <arn.zart+github@gmail.com>  zed <arn.zart+github@gmail.com> \n"
        },
        {
          "name": ".pep8speaks.yml",
          "type": "blob",
          "size": 0.15234375,
          "content": "scanner:\n    diff_only: True\n    linter: flake8\n\nflake8:\n    max-line-length: 79\n    ignore:  # Errors and warnings to ignore\n        - W503\n        - W504\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 0.240234375,
          "content": "Release Notes\n=============\n\nThe list of changes for each statsmodels release can be found [here](https://www.statsmodels.org/devel/release/index.html). Full details are available in the [commit logs](https://github.com/statsmodels/statsmodels).\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.8984375,
          "content": "cff-version: 1.2.0\ntitle: statsmodels\nmessage: >-\n  Please use following citation to cite statsmodels in\n  scientific publications\ntype: software\nauthors:\n  - given-names: Seabold\n    family-names: Skipper\n  - given-names: Perktold\n    family-names: Josef\nrepository-code: 'https://github.com/statsmodels/statsmodels'\nurl: 'https://www.statsmodels.org/'\nkeywords:\n  - python\n  - data-science\n  - statistics\n  - prediction\n  - econometrics\n  - forecasting\n  - data-analysis\n  - regression-models\n  - hypothesis-testing\n  - generalized-linear-models\n  - timeseries-analysis\n  - robust-estimation\n  - count-model\nlicense: BSD-3-Clause\npreferred-citation:\n  type: article\n  authors:\n    - given-names: Seabold\n      family-names: Skipper\n    - given-names: Perktold\n      family-names: Josef\n  title: \"statsmodels: Econometric and statistical modeling with python\"\n  journal: \"9th Python in Science Conference\"\n  year: 2010\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 4.73046875,
          "content": "Contributing guidelines\n=======================\n\nThis page explains how you can contribute to the development of `statsmodels`\nby submitting patches, statistical tests, new models, or examples.\n\n`statsmodels` is developed on `Github <https://github.com/statsmodels/statsmodels>`_\nusing the `Git <https://git-scm.com/>`_ version control system.\n\nSubmitting a Bug Report\n~~~~~~~~~~~~~~~~~~~~~~~\n\n- Include a short, self-contained code snippet that reproduces the problem\n- Specify the statsmodels version used. You can do this with ``sm.version.full_version``\n- If the issue looks to involve other dependencies, also include the output of ``sm.show_versions()``\n\nMaking Changes to the Code\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor a pull request to be accepted, you must meet the below requirements. This greatly helps in keeping the job of maintaining and releasing the software a shared effort.\n\n- **One branch. One feature.** Branches are cheap and github makes it easy to merge and delete branches with a few clicks. Avoid the temptation to lump in a bunch of unrelated changes when working on a feature, if possible. This helps us keep track of what has changed when preparing a release.\n- Commit messages should be clear and concise. This means a subject line of less than 80 characters, and, if necessary, a blank line followed by a commit message body. We have an `informal commit format standard <https://www.statsmodels.org/devel/dev/maintainer_notes.html#commit-comments>`_ that we try to adhere to. You can see what this looks like in practice by ``git log --oneline -n 10``. If your commit references or closes a specific issue, you can close it by mentioning it in the `commit message <https://help.github.com/articles/closing-issues-via-commit-messages>`_.  (*For maintainers*: These suggestions go for Merge commit comments too. These are partially the record for release notes.)\n- Code submissions must always include tests. See our `notes on testing <https://www.statsmodels.org/devel/dev/test_notes.html>`_.\n- Each function, class, method, and attribute needs to be documented using docstrings. We conform to the `numpy docstring standard <https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard>`_.\n- If you are adding new functionality, you need to add it to the documentation by editing (or creating) the appropriate file in ``docs/source``.\n- Make sure your documentation changes parse correctly. Change into the top-level ``docs/`` directory and type::\n\n   make clean\n   make html\n\n  Check that the build output does not have *any* warnings due to your changes.\n- Finally, please add your changes to the release notes. Open the ``docs/source/release/versionX.X.rst`` file that has the version number of the next release and add your changes to the appropriate section.\n\nLinting\n~~~~~~~\n\nDue to the way we have the CI builds set up, the linter will not do anything unless the environmental variable $LINT is set to a truthy value.\n\n- On MacOS/Linux\n\n    LINT=true ./lint.sh\n\n- Dependencies: flake8, git\n\nHow to Submit a Pull Request\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSo you want to submit a patch to `statsmodels` but are not too familiar with github? Here are the steps you need to take.\n\n1. `Fork <https://help.github.com/articles/fork-a-repo>`_ the `statsmodels repository <https://github.com/statsmodels/statsmodels>`_ on Github.\n2. `Create a new feature branch <https://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging>`_. Each branch must be self-contained, with a single new feature or bugfix.\n3. Make sure the test suite passes. This includes testing on Python 3. The easiest way to do this is to make a pull request and let the bot check for you. This can be slow, and if you are unsure about the fix or enhancement, it is best to run pytest locally.\n4. Document your changes by editing the appropriate file in ``docs/source/``. If it is a big, new feature add a note and an example to the latest ``docs/source/release/versionX.X.rst`` file. See older versions for examples. If it's a minor change, it will be included automatically in our release notes.\n5. Add an example. If it is a big, new feature please submit an example notebook by following `these instructions <https://www.statsmodels.org/devel/dev/examples.html>`_.\n6. `Submit a pull request <https://help.github.com/articles/using-pull-requests>`_\n\nMailing List\n~~~~~~~~~~~~\n\nConversations about development take place on the `statsmodels mailing list <https://groups.google.com/group/pystatsmodels?hl=en>`__.\n\nLearn More\n~~~~~~~~~~\n\nThe ``statsmodels`` documentation's `developer page <https://www.statsmodels.org/stable/dev/index.html>`_\noffers much more detailed information about the process.\n\nLicense\n~~~~~~~\n\nstatsmodels is released under the\n`Modified (3-clause) BSD license <https://www.opensource.org/licenses/BSD-3-Clause>`_.\n"
        },
        {
          "name": "COPYRIGHTS.txt",
          "type": "blob",
          "size": 11.45703125,
          "content": "\nThe license of statsmodels can be found in LICENSE.txt\n\nstatsmodels contains code or derivative code from several other\npackages. Some modules also note the author of individual contributions, or\nauthor of code that formed the basis for the derived or translated code.\nThe copyright statements for the datasets are attached to the individual\ndatasets, most datasets are in public domain, and we do not claim any copyright\non any of them.\n\nIn the following, we collect copyright statements of code from other packages,\nall of which are either a version of BSD or MIT licensed:\n\nnumpy\nscipy\npandas\nmatplotlib\nscikit-learn\nqsturng-py http://code.google.com/p/qsturng-py/\n\n\nnumpy (statsmodels.compatnp contains copy of entire model)\n----------------------------------------------------------\nCopyright (c) 2005-2009, NumPy Developers.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n       copyright notice, this list of conditions and the following\n       disclaimer in the documentation and/or other materials provided\n       with the distribution.\n\n    * Neither the name of the NumPy Developers nor the names of any\n       contributors may be used to endorse or promote products derived\n       from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n---------------------------------------------------------------------\n\nscipy\n-----\nCopyright (c) 2001, 2002 Enthought, Inc.\nAll rights reserved.\n\nCopyright (c) 2003-2009 SciPy Developers.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  a. Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n  b. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n  c. Neither the name of the Enthought nor the names of its contributors\n     may be used to endorse or promote products derived from this software\n     without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n---------------------------------------------------------------------------\n\n\npandas\n------\n\nCopyright (c) 2008-2009 AQR Capital Management, LLC\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\n       copyright notice, this list of conditions and the following\n       disclaimer in the documentation and/or other materials provided\n       with the distribution.\n\n    * Neither the name of the copyright holder nor the names of any\n       contributors may be used to endorse or promote products derived\n       from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n----------------------------------------------------------------------\n\n\nmatplotlib (copied from license.py)\n-----------------------------------\n\n\nLICENSE AGREEMENT FOR MATPLOTLIB %(version)s\n--------------------------------------\n\n1. This LICENSE AGREEMENT is between John D. Hunter (\"JDH\"), and the\nIndividual or Organization (\"Licensee\") accessing and otherwise using\nmatplotlib software in source or binary form and its associated\ndocumentation.\n\n2. Subject to the terms and conditions of this License Agreement, JDH\nhereby grants Licensee a nonexclusive, royalty-free, world-wide license\nto reproduce, analyze, test, perform and/or display publicly, prepare\nderivative works, distribute, and otherwise use matplotlib %(version)s\nalone or in any derivative version, provided, however, that JDH's\nLicense Agreement and JDH's notice of copyright, i.e., \"Copyright (c)\n2002-%(year)d John D. Hunter; All Rights Reserved\" are retained in\nmatplotlib %(version)s alone or in any derivative version prepared by\nLicensee.\n\n3. In the event Licensee prepares a derivative work that is based on or\nincorporates matplotlib %(version)s or any part thereof, and wants to\nmake the derivative work available to others as provided herein, then\nLicensee hereby agrees to include in any such work a brief summary of\nthe changes made to matplotlib %(version)s.\n\n4. JDH is making matplotlib %(version)s available to Licensee on an \"AS\nIS\" basis. JDH MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR\nIMPLIED. BY WAY OF EXAMPLE, BUT NOT LIMITATION, JDH MAKES NO AND\nDISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS\nFOR ANY PARTICULAR PURPOSE OR THAT THE USE OF MATPLOTLIB %(version)s\nWILL NOT INFRINGE ANY THIRD PARTY RIGHTS.\n\n5. JDH SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF MATPLOTLIB\n%(version)s FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR\nLOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING\nMATPLOTLIB %(version)s, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF\nTHE POSSIBILITY THEREOF.\n\n6. This License Agreement will automatically terminate upon a material\nbreach of its terms and conditions.\n\n7. Nothing in this License Agreement shall be deemed to create any\nrelationship of agency, partnership, or joint venture between JDH and\nLicensee. This License Agreement does not grant permission to use JDH\ntrademarks or trade name in a trademark sense to endorse or promote\nproducts or services of Licensee, or any third party.\n\n8. By copying, installing or otherwise using matplotlib %(version)s,\nLicensee agrees to be bound by the terms and conditions of this License\nAgreement.\n--------------------------------------------------------------------------\n\nscikits-learn\n-------------\n\nNew BSD License\n\nCopyright (c) 2007 - 2010 Scikit-Learn Developers.\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  a. Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n  b. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n  c. Neither the name of the Scikit-learn Developers  nor the names of\n     its contributors may be used to endorse or promote products\n     derived from this software without specific prior written\n     permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n---------------------------------------------------------------------------\n\nqsturng-py (code included in statsmodels.stats.libqsturng)\n--------------------------------------------------------------\nCopyright (c) 2011, Roger Lew [see LICENSE.txt]\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above\n    copyright notice, this list of conditions and the following\n    disclaimer in the documentation and/or other materials provided\n    with the distribution.\n  * Neither the name of the organizations affiliated with the\n    contributors or the names of its contributors themselves may be\n    used to endorse or promote products derived from this software\n    without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\nFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\nANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n----------------------------------------------------------\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 2.5751953125,
          "content": "Dependencies\n------------\n\npython >= 3.9\n\n    www.python.org\n\nnumpy >= 1.22\n\n    www.numpy.org\n\nscipy >= 1.7\n\n    www.scipy.org\n\npandas >= 1.3\n\n    pandas.pydata.org\n\npatsy >= 0.5.5\n\n    patsy.readthedocs.org\n\ncython >= 0.29.33 and < 4.0.0\n\n    https://cython.org/\n\n    Cython is required if you are building the source from github. However,\n    if you have are building from source distribution archive then the \n    generated C files are included and Cython is not necessary. Earlier\n    versions may be ok for earlier versions of Python.\n\nOptional Dependencies\n---------------------\n\nX-12-ARIMA or X-13ARIMA-SEATS\n\n    https://www.census.gov/srd/www/x13as/\n\n    If available, time-series analysis can be conducted using either \n    X-12-ARIMA or the newer X-13ARIMA-SEATS. You should place the \n    appropriate executable on your PATH or set the X12PATH or X13PATH \n    environmental variable to take advantage.\n\nmatplotlib >= 3\n\n    https://matplotlib.org/\n\n    Matplotlib is needed for plotting functionality and running many of the \n    examples.\n\nsphinx >= 1.3\n\n    http://sphinx.pocoo.org/\n\n    Sphinx is used to build the documentation.\n\npytest >= 6\n\n    http://readthedocs.org/docs/pytest/en/latest/\n\n    Pytest is needed to run the tests.\n\nIPython >= 6\n\n    Needed to build the docs.\n\n\nInstalling\n----------\n\nTo get the latest release using pip\n\n    python -m pip install statsmodels --upgrade-strategy only-if-needed\n\nThe additional parameter pip --upgrade-strategy only-if-needed will ensure\nthat dependencies, e.g. NumPy or pandas, are not upgraded unless required.\n\nUbuntu/Debian\n-------------\n\nOn Ubuntu you can get dependencies through:\n\n    sudo apt-get install python python-dev python-setuptools python-numpy python-scipy\n    python -m pip install cython pandas\n\nAlternatively, you can install from the NeuroDebian repository:\n\n    http://neuro.debian.net\n\n\nInstalling from Source\n----------------------\n\nDownload and extract the source distribution from PyPI or github\n\n    https://pypi.python.org/pypi/statsmodels\n    https://github.com/statsmodels/statsmodels/tags\n\nOr clone the bleeding edge code from our repository on github at\n\n    git clone git://github.com/statsmodels/statsmodels.git\n\nIn the statsmodels directory do (with proper permissions)\n\n    python -m pip install .\n\nYou will need a C compiler installed.\n\nInstalling from Source on Windows\n---------------------------------\n\nSee https://www.statsmodels.org/devel/install.html#windows.\n\n\nDocumentation\n-------------\n\nYou may find more information about the project and installation in our \ndocumentation\n\nhttps://www.statsmodels.org/devel/install.html\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.59765625,
          "content": "Copyright (C) 2006, Jonathan E. Taylor\nAll rights reserved.\n\nCopyright (c) 2006-2008 Scipy Developers.\nAll rights reserved.\n\nCopyright (c) 2009-2018 statsmodels Developers.\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  a. Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n  b. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n  c. Neither the name of statsmodels nor the names of its contributors\n     may be used to endorse or promote products derived from this software\n     without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL STATSMODELS OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.7568359375,
          "content": "global-include *.csv *.py *.txt *.pyx *.pyx.in *.pxd *.pxi *.c *.h *.pkl\ninclude statsmodels/_version.py\ninclude MANIFEST.in\ninclude README.rst\n\nrecursive-exclude build *\nrecursive-exclude dist *\nrecursive-exclude tools *\n\ngraft statsmodels/datasets\ngraft statsmodels/sandbox/regression/data\ngraft statsmodels/sandbox/tests\ngraft statsmodels/sandbox/tsa/examples\nrecursive-include docs/source *\nexclude docs/source/generated/*\nrecursive-include docs/sphinxext *\nrecursive-include docs/themes *\nrecursive-exclude docs/build *\nrecursive-exclude docs/build/htmlhelp *\ninclude statsmodels/statsmodelsdoc.chm\ninclude docs/make.bat\ninclude docs/Makefile\n\nrecursive-include examples *\n\nprune */__pycache__\n\nglobal-exclude *~ *.swp  *.pyc *.pyo *.bak\ninclude statsmodels/_version.py\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 6.4970703125,
          "content": ".. image:: docs/source/images/statsmodels-logo-v2-horizontal.svg\n  :alt: Statsmodels logo\n\n|PyPI Version| |Conda Version| |License| |Azure CI Build Status|\n|Codecov Coverage| |Coveralls Coverage| |PyPI downloads| |Conda downloads|\n\nAbout statsmodels\n=================\n\nstatsmodels is a Python package that provides a complement to scipy for\nstatistical computations including descriptive statistics and estimation\nand inference for statistical models.\n\n\nDocumentation\n=============\n\nThe documentation for the latest release is at\n\nhttps://www.statsmodels.org/stable/\n\nThe documentation for the development version is at\n\nhttps://www.statsmodels.org/dev/\n\nRecent improvements are highlighted in the release notes\n\nhttps://www.statsmodels.org/stable/release/\n\nBackups of documentation are available at https://statsmodels.github.io/stable/\nand https://statsmodels.github.io/dev/.\n\n\nMain Features\n=============\n\n* Linear regression models:\n\n  - Ordinary least squares\n  - Generalized least squares\n  - Weighted least squares\n  - Least squares with autoregressive errors\n  - Quantile regression\n  - Recursive least squares\n\n* Mixed Linear Model with mixed effects and variance components\n* GLM: Generalized linear models with support for all of the one-parameter\n  exponential family distributions\n* Bayesian Mixed GLM for Binomial and Poisson\n* GEE: Generalized Estimating Equations for one-way clustered or longitudinal data\n* Discrete models:\n\n  - Logit and Probit\n  - Multinomial logit (MNLogit)\n  - Poisson and Generalized Poisson regression\n  - Negative Binomial regression\n  - Zero-Inflated Count models\n\n* RLM: Robust linear models with support for several M-estimators.\n* Time Series Analysis: models for time series analysis\n\n  - Complete StateSpace modeling framework\n\n    - Seasonal ARIMA and ARIMAX models\n    - VARMA and VARMAX models\n    - Dynamic Factor models\n    - Unobserved Component models\n\n  - Markov switching models (MSAR), also known as Hidden Markov Models (HMM)\n  - Univariate time series analysis: AR, ARIMA\n  - Vector autoregressive models, VAR and structural VAR\n  - Vector error correction model, VECM\n  - exponential smoothing, Holt-Winters\n  - Hypothesis tests for time series: unit root, cointegration and others\n  - Descriptive statistics and process models for time series analysis\n\n* Survival analysis:\n\n  - Proportional hazards regression (Cox models)\n  - Survivor function estimation (Kaplan-Meier)\n  - Cumulative incidence function estimation\n\n* Multivariate:\n\n  - Principal Component Analysis with missing data\n  - Factor Analysis with rotation\n  - MANOVA\n  - Canonical Correlation\n\n* Nonparametric statistics: Univariate and multivariate kernel density estimators\n* Datasets: Datasets used for examples and in testing\n* Statistics: a wide range of statistical tests\n\n  - diagnostics and specification tests\n  - goodness-of-fit and normality tests\n  - functions for multiple testing\n  - various additional statistical tests\n\n* Imputation with MICE, regression on order statistic and Gaussian imputation\n* Mediation analysis\n* Graphics includes plot functions for visual analysis of data and model results\n\n* I/O\n\n  - Tools for reading Stata .dta files, but pandas has a more recent version\n  - Table output to ascii, latex, and html\n\n* Miscellaneous models\n* Sandbox: statsmodels contains a sandbox folder with code in various stages of\n  development and testing which is not considered \"production ready\".  This covers\n  among others\n\n  - Generalized method of moments (GMM) estimators\n  - Kernel regression\n  - Various extensions to scipy.stats.distributions\n  - Panel data models\n  - Information theoretic measures\n\nHow to get it\n=============\nThe main branch on GitHub is the most up to date code\n\nhttps://www.github.com/statsmodels/statsmodels\n\nSource download of release tags are available on GitHub\n\nhttps://github.com/statsmodels/statsmodels/tags\n\nBinaries and source distributions are available from PyPi\n\nhttps://pypi.org/project/statsmodels/\n\nBinaries can be installed in Anaconda\n\nconda install statsmodels\n\n\nGetting the latest code\n=======================\n\nInstalling the most recent nightly wheel\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe most recent nightly wheel can be installed using pip.\n\n.. code:: bash\n\n   python -m pip install -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple statsmodels --upgrade --use-deprecated=legacy-resolver\n\nInstalling from sources\n~~~~~~~~~~~~~~~~~~~~~~~\n\nSee INSTALL.txt for requirements or see the documentation\n\nhttps://statsmodels.github.io/dev/install.html\n\nContributing\n============\nContributions in any form are welcome, including:\n\n* Documentation improvements\n* Additional tests\n* New features to existing models\n* New models\n\nhttps://www.statsmodels.org/stable/dev/test_notes\n\nfor instructions on installing statsmodels in *editable* mode.\n\nLicense\n=======\n\nModified BSD (3-clause)\n\nDiscussion and Development\n==========================\n\nDiscussions take place on the mailing list\n\nhttps://groups.google.com/group/pystatsmodels\n\nand in the issue tracker. We are very interested in feedback\nabout usability and suggestions for improvements.\n\nBug Reports\n===========\n\nBug reports can be submitted to the issue tracker at\n\nhttps://github.com/statsmodels/statsmodels/issues\n\n.. |Azure CI Build Status| image:: https://dev.azure.com/statsmodels/statsmodels-testing/_apis/build/status/statsmodels.statsmodels?branchName=main\n   :target: https://dev.azure.com/statsmodels/statsmodels-testing/_build/latest?definitionId=1&branchName=main\n.. |Codecov Coverage| image:: https://codecov.io/gh/statsmodels/statsmodels/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/statsmodels/statsmodels\n.. |Coveralls Coverage| image:: https://coveralls.io/repos/github/statsmodels/statsmodels/badge.svg?branch=main\n   :target: https://coveralls.io/github/statsmodels/statsmodels?branch=main\n.. |PyPI downloads| image:: https://img.shields.io/pypi/dm/statsmodels?label=PyPI%20Downloads\n   :alt: PyPI - Downloads\n   :target: https://pypi.org/project/statsmodels/\n.. |Conda downloads| image:: https://img.shields.io/conda/dn/conda-forge/statsmodels.svg?label=Conda%20downloads\n   :target: https://anaconda.org/conda-forge/statsmodels/\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/statsmodels.svg\n   :target: https://pypi.org/project/statsmodels/\n.. |Conda Version| image:: https://anaconda.org/conda-forge/statsmodels/badges/version.svg\n   :target: https://anaconda.org/conda-forge/statsmodels/\n.. |License| image:: https://img.shields.io/pypi/l/statsmodels.svg\n   :target: https://github.com/statsmodels/statsmodels/blob/main/LICENSE.txt\n"
        },
        {
          "name": "README_l1.txt",
          "type": "blob",
          "size": 1.2490234375,
          "content": "What the l1 addition is\n=======================\nA slight modification that allows l1 regularized LikelihoodModel.\n\nRegularization is handled by a fit_regularized method.\n\nMain Files\n==========\n\nl1_demo/demo.py\n    $ python demo.py --get_l1_slsqp_results logit\n    does a quick demo of the regularization using logistic regression.\n\nl1_demo/sklearn_compare.py\n    $ python sklearn_compare.py\n    Plots a comparison of regularization paths.  Modify the source to use\n    different datasets.\n\nstatsmodels/base/l1_cvxopt.py\n    fit_l1_cvxopt_cp()\n        Fit likelihood model using l1 regularization.  Use the CVXOPT package.\n    Lots of small functions supporting fit_l1_cvxopt_cp\n\nstatsmodels/base/l1_slsqp.py\n    fit_l1_slsqp()\n        Fit likelihood model using l1 regularization.  Use scipy.optimize\n    Lots of small functions supporting fit_l1_slsqp\n\nstatsmodels/base/l1_solvers_common.py\n    Common methods used by l1 solvers\n\nstatsmodels/base/model.py\n    Likelihoodmodel.fit()\n        3 lines modified to allow for importing and calling of l1 fitting functions\n\nstatsmodels/discrete/discrete_model.py\n    L1MultinomialResults class\n        Child of MultinomialResults\n    MultinomialModel.fit()\n        3 lines re-directing l1 fit results to the L1MultinomialResults class\n"
        },
        {
          "name": "archive",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipelines.yml",
          "type": "blob",
          "size": 0.830078125,
          "content": "# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#passing-parameters\n\ntrigger:\n- main\nschedules:\n- cron: \"0 6 * * 1\"   # Each Monday at 06:00 UTC\n  displayName: Weekly scheduled run\n  branches:\n    include: [main, maintenance/0.13.x]\n  always: true\n\nvariables:\n  MKL_NUM_THREADS: 1\n  NUMEXPR_NUM_THREADS: 1\n  OMP_NUM_THREADS: 1\n  VML_NUM_THREADS: 1\n  OPENBLAS_NUM_THREADS: 1\n  PYTHONHASHSEED: 0 # Ensure tests are correctly gathered by xdist\n  USE_MATPLOTLIB: true\n\njobs:\n\n- template: tools/ci/azure/azure_template_posix.yml\n  parameters:\n    name: Linux\n    vmImage: ubuntu-latest\n\n- template: tools/ci/azure/azure_template_posix.yml\n  parameters:\n    name: macOS\n    vmImage: macOS-latest\n\n- template: tools/ci/azure/azure_template_windows.yml\n  parameters:\n    name: Windows\n    vmImage: windows-latest\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.208984375,
          "content": "codecov:\n  branch: main\n  notify:\n    require_ci_to_pass: no\n    after_n_builds: 1\n\ncomment: off\n\ncoverage:\n  status:\n    project:\n      default:\n        target: '82'\n    patch:\n      default:\n        target: '50'\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "github_deploy_key_statsmodels_statsmodels_github_io.enc",
          "type": "blob",
          "size": 4.34765625,
          "content": "gAAAAABbD1iyJdxfE21E38fK3bOZGE3-OwARYc7w9byx-2lWPszONeqmgD84evz73OmjkWMUYS4OmSQjVLOcgZKpS472dt7JGq_wYeo4lCX93ho02TWhtOnbbQpA8vdJ9aoy002WBOMHOi9AuosnH9mw52Qo6p1jNpBSqjeStSnVWEhEzIJynginRn7FODuocGf1kCJ91qc1sEPgT-7kxwuYPIqOkcSNRBZnap5E6L3kopI2fW9lL9rlCs9X4MDYygrua9PCVZRxMRvTSOW_Lx_5-6kbQgzP3HqrX1q_mKmnr2ZMGKrKwzv4OhY4YIJra-xZf2W-8dBbZbIhB76xwGCinOhY1EFI5oXvNngiILhBX-E_AfpQq8I5_dXsGhRD-Axxrzm5NCb-0-slouCUTo-R0IpO_eQTzpajkBkRXyxrzrr05xITeOfsDmzJHwYhKFTbChhriJqc2YnDLz_tjC9ApaekC8soPRXOOJmpmvtxFa_vQPFh9xQpNZvXU4zfVfYXRnTb1u97hxSBBX0vQqyix53qudMniCo2N45ILqsO4duTgmUHU09JxhgBw30Apa20Ry0qQ0suGwP9doSz3H43nHocjfANp4qM_XZhCC6SrgZDxZKEGBYcL3J8xUf4aykWUc29n6qKAOBv8p6IdPsAfjqkG45fHtyLmVBAkjVbQWZ-0YaJqafmrppU_L8s4_yEs-J5dTpficNwKFN9suKbR2d4ycxpvgxCL-t14lMA3-wKSyI6AvJ3kRkgj8OcXQXV3rQGo4F56-P0XBerghDtQyqTAZhl85eiFVg3VqnOTZL8UpqNsKlSWL47ed3LUsE3yNZE9Z3LdTZLZ2FFlCfRiJwnFu93nwcEY8Vej8aaJxjpCkluS6XIF_kbD001DYcuVKBf3LxSyApRouv8v2Tb2iVII_sbxWuRDtBeIiI27_Slv1LDOmu8NF0v-FB3C0uvWye08GvD5m4iPEtcY02hnBwkuwY8KbnixLd14NfdKErNaO9btSKwxu_yogtH2cLu_QHqy4SGo81q9QECnPtIQr16N0Pkeuo9Rx2z9nNKOYAaLRy9JSq4iE-AdfkwkQUuMcvkvPCwIXgKuq4ewroHWOUQND9LHWhpgMFT-3sELCw7Cx_y7wbfFJ8XtPVQDBhbd6jlOyu_D3t_Tty-FuKp2Cwhqv9bFn8jk8EbHc7jTvFEGDGckMJom3NY30BVucfe14PvideLHIMAT4a5zsS8skZ2F2mJEjGqmFfL8m4avrtb1BanPPur7XGeQKVhGumZ_yk4EwkQrCdTepCdFGG1A4078R7_pnqQ_yKyMUUwDbSUqVLBvRLhSGR9eLxQKFJQiQTzB-8CShGmkIoYqsOgd1WYVlC7SdOerTYZwaJ-1tPQ2tzy7anLh91IJJck-IlmlQbC_FP-c7Oj7oajRWFoDh6jT2lLhSu0UcnSTPAIvD8WJIfYeIFMqhO58_p78IRIc0eQccOPQZryQLB08x0iBOsv9fk4412jCLDZj-KnbEyG983MrQOYnMsJxgOfNb9Y9tPKads5PIpQGtoVMQshS89JJWxkyA_9HRJh40SIIT7nVcaLaZHYX-0dqiT7Q5CRFaSVat-AQSMercYkpr2gBvXEu6qyXKw6-I6LFfaaHvOuZwc6u_eUi5hjZ-bT79kfmBWBK-8AMLn9bqZzZgwAYg6_42WWzvXzUf03bqUjPg10M-xr_2BVhVPpgOa6p8RPzXweiJ1-NZ7G1nCLlv1nxq5BclwRmeLqRart0XvWHgB_ygKg972l3HXi0gUyVD0d7_Lfi2M7VK7rbR-bWlVdh65ZdGsztaDGiG07p4yh6wNKV1OpwZJgHVwYxIX1R2s7gIYcoVQD77KhwVKgfCjJ9ADJSIagrW_gOqa_Or5vxxu08scurGyqbpjOZ7wYAsdA_fU51SKS21zzlCiZqW8vVDtz6I03Dsbr30UxaRRihjuB_vybB8tUdkhSUAp8tD7n6GSLSMZs-88gSCaY3Epb7H-c9Xxi-q67jP36Hkjvgz3_gwbMi3ZReSh_pJSkj1qjq94mc4zVKP7e5DeKf279bl8z6-YkldExcX4jRnS72uTf6H8sjyEVvnIRpGts6BUZe8prwG2tVa2oXHKxK-gB7fWXFmJz0w6gfg1cRHVnh9chfIJHqkqJeV91RTrZbJdKNeUWNxe7CIGkaUxjoa0jXBVmbmXS2V3Cd-9TonLWffWbujUrFgc2Zi5eqmFHWdbfy-1KSOFcUF0ceT9X7fJvIOb6MVWZKu_JZ35_6vm_Fpeck1aZfJ1i6I-PXukxeOvq113StgfhbGFM2oUP502wKB_jlOppHO0cPzQ4cK_2gYaZ5auQL2n4LezEaJ1YrYZys-bQFAStJ6hFJqMbQQSqzI7pPsyLTthsQphuSAGuN9dbMLChx9W9VxeHJuWWVC3D64w9ETIX8GsW-Rv3qpnbx7ii_hCQJHRAjP6lFOBx4HkC7vv2Ya_KklegKzASqdJ1o9L1Q9DJDymKBcI-74OqcTJsFupB1qWbC3pRUoAsA2ohnt1GLPGw28uQrNl3gjiYPVenl8JlXK63cr94ydl3BdU8yjl_AMak7jTEq0AtxsdYwEK3FaweMf-0lETrEEN1kBaUp_rtTQv5cto4nBhaXTM5NEiQw-1KKZ3xLcyberJJUcxB9sXCeFvi0i2Edz2u20-yH0gJz4I9Fi5ky1wJDg7X9NJjRDIVE1IDq7TtEmJQPv0yhP4gkR_AWID5avxkEYiOd2YvMMqJWKDhsr3LFLo5qsgauMcylMjJVzI6nzJQsjdh6bJISrXdgJFnK9yNmW2C_WFsPwVjSueKUDKPPz5KzQ3zHlifZgZaEM2dDhMXMPF0m-FmZP4YRGmdc0jr4b15GzvErPcuLVifR4N5yiOlyRNW237ykFuo5TwDz5G-CJIS0AQSXA2AaQJcPuua8NiVZlaGEkaS0uJq1Y0Fxp3aShD-IQF6OOeG1DIJuc8joGB2nDCGndAK7N189DLSVQfYmqH8p5kIq-PybusN705xXASTJJWmmR2BiN1Y6WCnNUnxpEjnA7x555hBXq1lE5_72_uCJ6zx4eKVHKovVt_NE3bcjHmy2xfhjfK_ljQ4KwhmehfaqwcCApLZ_BoYxmdgvZereUhi7ttGylOmEFvRVyJfoH_Dp4sMFfWpSZUb8N3h1v83_ajAxTaH9BCP40UwOUr_DcM9tg-heAvemUVqa-CdbTvGYUK3WujzKnrXvkQNodjaGChR4f8swwjqV7rsbw1KTGFCbgq1xxhk_fs2-v0kc3btcPoPXejyRtJ0WONTzX9Eo8tBii-9xuT9VwKS9OzYlpiRHFFfKeQNWHD0zjgBTa9TTaFmFRXnzpWCv6pF64NuyLlB5KB1zKERJf9gMeeE8Lz8vxkMuQt_uKIco-ElGcwETn-bzyFpTJ8aPhgUo7WK1Ckz923qGnjurLQ_YPVrYOiq8ULbdWiraro6KNi1v-BrEaXuTCIoLI1S_PS7pS-NlN7YXII31pqSJ-mXCbV6iyIyim8rftVbGOK1DexnoOBqCTzsOF2A7A10Ma3qQX-Ded91MjjxWr34RYahME8mwlUYUsRamTgTV-ygPF6FOCMh_-B-HkzKTKKhtGtfM_hWp7nLoMQw2lIHdYumcB649HmiUcMoaxWsVyQdyhwLpEqcTtwh2dRbAS3Ttez4nL45sgaf8R5hHg-4S9Zj5YBVOfo1YyxcWpvZFkKzlM9doQxwbvM7_QmqXW1Eh-QtL8zqQrYm9D3VLx6A-bloH3VAOamExSwe5raEOrD2TaeQ2-kbSopFPWKoBe0ZE8VyIBZIoCzXFrAfp2gpPfOMA-KPHHAv-CVa3BqSZInZt9yzdGo-JPTE46lR6FoR4YD0AGwuoGai8ko94VEQqHaESmKkrKBtpH7AucEXSF0i5J71QvtWAxAOr5MbxjyIEqHqbXsAZg_D0m-eNW8IgiGy22EA2TbHahytLtVmL3im2iN0rNNQ0A5-PfojcsxAE15OyX5hILGXPSju6LIvztcFJxmBsQUmBObVoO6_KH4CkBS2lfgudtvkXpfJNnGFyb3l-aLEkTrfLtJuJlOQWGJLeDgV5MV41nH-qNUj7v3xWVJFiSrNBETlAlaIn0klbWGTjii-1s42LS9ReQv-fulXgbiiyzOQOPUYHwDQVINO4hxk5nId5Wzpd1jpczeC-6P5pQwlPV9lo98MTr6CydXARMYaplD0Y2Dg_3ekiWi5rHb364sO0q57RmmHMhN0rpohLzvUQOekvihXUycZ7aN7Rf1l2L09UjSp1hUH4cdiPbZxrL4wx3ZLs32KJsoxFOllZe9azBeBaH9841aywnJfylU_luMHhNy4XR3xx43NZnVRq9HvlQa34gu0JGNkZwCBp2ojewjfRGegA7F8M53mKA85Al5-Ts2RM-tdvqmM1JK8qw=="
        },
        {
          "name": "lint.sh",
          "type": "blob",
          "size": 17.7177734375,
          "content": "#!/bin/bash\n\necho \"inside $0\"\n\nRET=0\n\nif [ \"$LINT\" == true ]; then\n    echo \"Running ruff check\"\n    ruff check statsmodels\n\n    echo \"Running flake8 linting\"\n    echo \"Linting all files with limited rules\"\n    flake8 statsmodels\n    if [ $? -ne \"0\" ]; then\n        echo \"Changed files failed linting using the required set of rules.\"\n        echo \"Additions and changes must conform to Python code style rules.\"\n        RET=1\n    fi\n\n    # Run with --isolated to ignore config files, the files included here\n    # pass _all_ flake8 checks\n    echo \"Linting known clean files with strict rules\"\n    # Default flake8 rules plus the additional rules from setup.cfg\n    flake8 --isolated  \\\n        --max-line-length 88 \\\n        --ignore=E121,E123,E126,E226,E24,E704,W503,W504,E741,E203 \\\n        examples \\\n        setup.py \\\n        statsmodels/__init__.py \\\n        statsmodels/api.py \\\n        statsmodels/base/__init__.py \\\n        statsmodels/base/distributed_estimation.py \\\n        statsmodels/base/elastic_net.py \\\n        statsmodels/base/tests/__init__.py \\\n        statsmodels/base/tests/test_data.py \\\n        statsmodels/base/tests/test_distributed_estimation.py \\\n        statsmodels/base/tests/test_optimize.py \\\n        statsmodels/base/tests/test_shrink_pickle.py \\\n        statsmodels/base/tests/test_transform.py \\\n        statsmodels/compat \\\n        statsmodels/compat/tests \\\n        statsmodels/conftest.py \\\n        statsmodels/datasets/__init__.py \\\n        statsmodels/datasets/anes96/__init__.py \\\n        statsmodels/datasets/cancer/__init__.py \\\n        statsmodels/datasets/ccard/__init__.py \\\n        statsmodels/datasets/china_smoking/__init__.py \\\n        statsmodels/datasets/co2/__init__.py \\\n        statsmodels/datasets/committee/__init__.py \\\n        statsmodels/datasets/copper/__init__.py \\\n        statsmodels/datasets/cpunish/__init__.py \\\n        statsmodels/datasets/danish_data \\\n        statsmodels/datasets/elec_equip \\\n        statsmodels/datasets/elnino/__init__.py \\\n        statsmodels/datasets/engel/__init__.py \\\n        statsmodels/datasets/fair/__init__.py \\\n        statsmodels/datasets/fertility/__init__.py \\\n        statsmodels/datasets/grunfeld/__init__.py \\\n        statsmodels/datasets/heart/__init__.py \\\n        statsmodels/datasets/interest_inflation/__init__.py \\\n        statsmodels/datasets/longley/__init__.py \\\n        statsmodels/datasets/macrodata/__init__.py \\\n        statsmodels/datasets/modechoice/__init__.py \\\n        statsmodels/datasets/nile/__init__.py \\\n        statsmodels/datasets/randhie/__init__.py \\\n        statsmodels/datasets/scotland/__init__.py \\\n        statsmodels/datasets/spector/__init__.py \\\n        statsmodels/datasets/stackloss/__init__.py \\\n        statsmodels/datasets/star98/__init__.py \\\n        statsmodels/datasets/statecrime/__init__.py \\\n        statsmodels/datasets/strikes/__init__.py \\\n        statsmodels/datasets/sunspots/__init__.py \\\n        statsmodels/datasets/tests \\\n        statsmodels/discrete/__init__.py \\\n        statsmodels/discrete/diagnostic.py \\\n        statsmodels/discrete/tests/__init__.py \\\n        statsmodels/discrete/tests/results \\\n        statsmodels/discrete/tests/test_constrained.py \\\n        statsmodels/discrete/tests/test_truncated_model.py \\\n        statsmodels/discrete/truncated_model.py \\\n        statsmodels/distributions/__init__.py \\\n        statsmodels/distributions/bernstein.py \\\n        statsmodels/distributions/empirical_distribution.py \\\n        statsmodels/distributions/copula/__init__.py \\\n        statsmodels/distributions/copula/api.py \\\n        statsmodels/distributions/copula/archimedean.py \\\n        statsmodels/distributions/copula/copulas.py \\\n        statsmodels/distributions/copula/depfunc_ev.py \\\n        statsmodels/distributions/copula/elliptical.py \\\n        statsmodels/distributions/copula/extreme_value.py \\\n        statsmodels/distributions/copula/other_copulas.py \\\n        statsmodels/distributions/copula/tests/test_model.py \\\n        statsmodels/distributions/copula/transforms.py \\\n        statsmodels/distributions/tests/__init__.py \\\n        statsmodels/distributions/tests/test_bernstein.py \\\n        statsmodels/distributions/tests/test_discrete.py \\\n        statsmodels/distributions/tests/test_ecdf.py \\\n        statsmodels/distributions/tests/test_tools.py \\\n        statsmodels/duration/__init__.py \\\n        statsmodels/duration/_kernel_estimates.py \\\n        statsmodels/duration/api.py \\\n        statsmodels/duration/tests/__init__.py \\\n        statsmodels/duration/tests/results \\\n        statsmodels/duration/tests/test_survfunc.py \\\n        statsmodels/emplike/__init__.py \\\n        statsmodels/emplike/api.py \\\n        statsmodels/emplike/tests \\\n        statsmodels/emplike/tests/results \\\n        statsmodels/examples/ex_ordered_model.py \\\n        statsmodels/examples/tests \\\n        statsmodels/examples/tsa/ex_var_reorder.py \\\n        statsmodels/formula \\\n        statsmodels/formula/tests \\\n        statsmodels/gam \\\n        statsmodels/gam/gam_cross_validation \\\n        statsmodels/gam/tests \\\n        statsmodels/gam/tests/results \\\n        statsmodels/genmod/__init__.py \\\n        statsmodels/genmod/_tweedie_compound_poisson.py \\\n        statsmodels/genmod/api.py \\\n        statsmodels/genmod/bayes_mixed_glm.py \\\n        statsmodels/genmod/families \\\n        statsmodels/genmod/families/tests \\\n        statsmodels/genmod/generalized_estimating_equations.py \\\n        statsmodels/genmod/qif.py \\\n        statsmodels/genmod/tests/__init__.py \\\n        statsmodels/genmod/tests/results \\\n        statsmodels/genmod/tests/test_gee.py \\\n        statsmodels/genmod/tests/test_qif.py \\\n        statsmodels/graphics/__init__.py \\\n        statsmodels/graphics/api.py \\\n        statsmodels/graphics/functional.py \\\n        statsmodels/graphics/tests/__init__.py \\\n        statsmodels/graphics/tests/test_agreement.py \\\n        statsmodels/graphics/tests/test_boxplots.py \\\n        statsmodels/graphics/tests/test_correlation.py \\\n        statsmodels/graphics/tests/test_functional.py \\\n        statsmodels/graphics/tests/test_gofplots.py \\\n        statsmodels/graphics/tests/test_tsaplots.py \\\n        statsmodels/graphics/tsaplots.py \\\n        statsmodels/imputation/__init__.py \\\n        statsmodels/imputation/tests/__init__.py \\\n        statsmodels/interface \\\n        statsmodels/iolib/__init__.py \\\n        statsmodels/iolib/api.py \\\n        statsmodels/iolib/openfile.py \\\n        statsmodels/iolib/smpickle.py \\\n        statsmodels/iolib/summary2.py \\\n        statsmodels/iolib/table.py \\\n        statsmodels/iolib/tableformatting.py \\\n        statsmodels/iolib/tests/__init__.py \\\n        statsmodels/iolib/tests/results \\\n        statsmodels/iolib/tests/test_pickle.py \\\n        statsmodels/iolib/tests/test_summary2.py \\\n        statsmodels/miscmodels/__init__.py \\\n        statsmodels/miscmodels/tests/__init__.py \\\n        statsmodels/miscmodels/tests/results \\\n        statsmodels/multivariate/__init__.py \\\n        statsmodels/multivariate/api.py \\\n        statsmodels/multivariate/factor_rotation/_analytic_rotation.py \\\n        statsmodels/multivariate/factor_rotation/tests/__init__.py \\\n        statsmodels/multivariate/pca.py \\\n        statsmodels/multivariate/tests/__init__.py \\\n        statsmodels/multivariate/tests/results \\\n        statsmodels/nonparametric/__init__.py \\\n        statsmodels/nonparametric/api.py \\\n        statsmodels/nonparametric/kde.py \\\n        statsmodels/nonparametric/kernels_asymmetric.py \\\n        statsmodels/nonparametric/tests/__init__.py \\\n        statsmodels/nonparametric/tests/results \\\n        statsmodels/nonparametric/tests/test_asymmetric.py \\\n        statsmodels/othermod \\\n        statsmodels/othermod/tests \\\n        statsmodels/othermod/tests/results \\\n        statsmodels/regression/__init__.py \\\n        statsmodels/regression/_prediction.py \\\n        statsmodels/regression/_tools.py \\\n        statsmodels/regression/dimred.py \\\n        statsmodels/regression/mixed_linear_model.py \\\n        statsmodels/regression/process_regression.py \\\n        statsmodels/regression/recursive_ls.py \\\n        statsmodels/regression/rolling.py \\\n        statsmodels/regression/tests/__init__.py \\\n        statsmodels/regression/tests/results \\\n        statsmodels/regression/tests/test_dimred.py \\\n        statsmodels/regression/tests/test_lme.py \\\n        statsmodels/regression/tests/test_processreg.py \\\n        statsmodels/regression/tests/test_quantile_regression.py \\\n        statsmodels/regression/tests/test_rolling.py \\\n        statsmodels/regression/tests/test_tools.py \\\n        statsmodels/robust \\\n        statsmodels/robust/tests \\\n        statsmodels/robust/tests/results \\\n        statsmodels/sandbox/__init__.py \\\n        statsmodels/sandbox/archive/__init__.py \\\n        statsmodels/sandbox/distributions/__init__.py \\\n        statsmodels/sandbox/distributions/examples/__init__.py \\\n        statsmodels/sandbox/distributions/tests/__init__.py \\\n        statsmodels/sandbox/distributions/tests/test_gof_new.py \\\n        statsmodels/sandbox/distributions/try_pot.py \\\n        statsmodels/sandbox/mcevaluate/__init__.py \\\n        statsmodels/sandbox/nonparametric/__init__.py \\\n        statsmodels/sandbox/nonparametric/tests/__init__.py \\\n        statsmodels/sandbox/panel/__init__.py \\\n        statsmodels/sandbox/panel/correlation_structures.py \\\n        statsmodels/sandbox/panel/tests/__init__.py \\\n        statsmodels/sandbox/regression/tests/__init__.py \\\n        statsmodels/sandbox/regression/tests/results_gmm_griliches.py \\\n        statsmodels/sandbox/regression/tests/results_gmm_griliches_iter.py \\\n        statsmodels/sandbox/regression/tests/results_gmm_poisson.py \\\n        statsmodels/sandbox/regression/tests/results_ivreg2_griliches.py \\\n        statsmodels/sandbox/stats/__init__.py \\\n        statsmodels/sandbox/stats/diagnostic.py \\\n        statsmodels/sandbox/stats/tests \\\n        statsmodels/sandbox/tests/__init__.py \\\n        statsmodels/sandbox/tools/__init__.py \\\n        statsmodels/src \\\n        statsmodels/stats/__init__.py \\\n        statsmodels/stats/_delta_method.py \\\n        statsmodels/stats/_knockoff.py \\\n        statsmodels/stats/_lilliefors.py \\\n        statsmodels/stats/_lilliefors_critical_values.py \\\n        statsmodels/stats/api.py \\\n        statsmodels/stats/base.py \\\n        statsmodels/stats/contingency_tables.py \\\n        statsmodels/stats/correlation_tools.py \\\n        statsmodels/stats/diagnostic.py \\\n        statsmodels/stats/diagnostic_gen.py \\\n        statsmodels/stats/dist_dependence_measures.py \\\n        statsmodels/stats/effect_size.py \\\n        statsmodels/stats/knockoff_regeffects.py \\\n        statsmodels/stats/libqsturng/__init__.py \\\n        statsmodels/stats/libqsturng/tests/__init__.py \\\n        statsmodels/stats/meta_analysis.py \\\n        statsmodels/stats/moment_helpers.py \\\n        statsmodels/stats/multicomp.py \\\n        statsmodels/stats/multivariate.py \\\n        statsmodels/stats/nonparametric.py \\\n        statsmodels/stats/oaxaca.py \\\n        statsmodels/stats/oneway.py \\\n        statsmodels/stats/rates.py \\\n        statsmodels/stats/regularized_covariance.py \\\n        statsmodels/stats/robust_compare.py \\\n        statsmodels/stats/stattools.py \\\n        statsmodels/stats/tabledist.py \\\n        statsmodels/stats/tests/__init__.py \\\n        statsmodels/stats/tests/results \\\n        statsmodels/stats/tests/test_anova_rm.py \\\n        statsmodels/stats/tests/test_base.py \\\n        statsmodels/stats/tests/test_correlation.py \\\n        statsmodels/stats/tests/test_deltacov.py \\\n        statsmodels/stats/tests/test_descriptivestats.py \\\n        statsmodels/stats/tests/test_diagnostic.py \\\n        statsmodels/stats/tests/test_dist_dependant_measures.py \\\n        statsmodels/stats/tests/test_effectsize.py \\\n        statsmodels/stats/tests/test_knockoff.py \\\n        statsmodels/stats/tests/test_lilliefors.py \\\n        statsmodels/stats/tests/test_meta.py \\\n        statsmodels/stats/tests/test_moment_helpers.py \\\n        statsmodels/stats/tests/test_multi.py \\\n        statsmodels/stats/tests/test_oaxaca.py \\\n        statsmodels/stats/tests/test_oneway.py \\\n        statsmodels/stats/tests/test_outliers_influence.py \\\n        statsmodels/stats/tests/test_qsturng.py \\\n        statsmodels/stats/tests/test_rates_poisson.py \\\n        statsmodels/stats/tests/test_regularized_covariance.py \\\n        statsmodels/stats/tests/test_robust_compare.py \\\n        statsmodels/stats/tests/test_sandwich.py \\\n        statsmodels/stats/tests/test_tabledist.py \\\n        statsmodels/tests \\\n        statsmodels/tools/__init__.py \\\n        statsmodels/tools/decorators.py \\\n        statsmodels/tools/docstring.py \\\n        statsmodels/tools/eval_measures.py \\\n        statsmodels/tools/grouputils.py \\\n        statsmodels/tools/linalg.py \\\n        statsmodels/tools/parallel.py \\\n        statsmodels/tools/rng_qrng.py \\\n        statsmodels/tools/rootfinding.py \\\n        statsmodels/tools/sequences.py \\\n        statsmodels/tools/sm_exceptions.py \\\n        statsmodels/tools/testing.py \\\n        statsmodels/tools/tests/__init__.py \\\n        statsmodels/tools/tests/test_data.py \\\n        statsmodels/tools/tests/test_decorators.py \\\n        statsmodels/tools/tests/test_docstring.py \\\n        statsmodels/tools/tests/test_eval_measures.py \\\n        statsmodels/tools/tests/test_linalg.py \\\n        statsmodels/tools/tests/test_testing.py \\\n        statsmodels/tools/tests/test_transform_model.py \\\n        statsmodels/tools/tests/test_web.py \\\n        statsmodels/tools/transform_model.py \\\n        statsmodels/tools/typing.py \\\n        statsmodels/tools/validation \\\n        statsmodels/tools/validation/tests \\\n        statsmodels/tools/web.py \\\n        statsmodels/tsa/__init__.py \\\n        statsmodels/tsa/_bds.py \\\n        statsmodels/tsa/adfvalues.py \\\n        statsmodels/tsa/api.py \\\n        statsmodels/tsa/ar_model.py \\\n        statsmodels/tsa/ardl \\\n        statsmodels/tsa/ardl/_pss_critical_values \\\n        statsmodels/tsa/ardl/tests \\\n        statsmodels/tsa/arima \\\n        statsmodels/tsa/arima/datasets \\\n        statsmodels/tsa/arima/datasets/brockwell_davis_2002 \\\n        statsmodels/tsa/arima/datasets/brockwell_davis_2002/data \\\n        statsmodels/tsa/arima/estimators \\\n        statsmodels/tsa/arima/estimators/tests \\\n        statsmodels/tsa/arima/tests \\\n        statsmodels/tsa/arima_model.py \\\n        statsmodels/tsa/arma_mle.py \\\n        statsmodels/tsa/base/__init__.py \\\n        statsmodels/tsa/base/prediction.py \\\n        statsmodels/tsa/base/tests/__init__.py \\\n        statsmodels/tsa/base/tests/test_datetools.py \\\n        statsmodels/tsa/base/tests/test_prediction.py \\\n        statsmodels/tsa/deterministic.py \\\n        statsmodels/tsa/exponential_smoothing \\\n        statsmodels/tsa/filters/__init__.py \\\n        statsmodels/tsa/filters/api.py \\\n        statsmodels/tsa/filters/bk_filter.py \\\n        statsmodels/tsa/filters/hp_filter.py \\\n        statsmodels/tsa/filters/tests \\\n        statsmodels/tsa/filters/tests/results \\\n        statsmodels/tsa/forecasting \\\n        statsmodels/tsa/forecasting/tests \\\n        statsmodels/tsa/holtwinters \\\n        statsmodels/tsa/holtwinters/tests \\\n        statsmodels/tsa/holtwinters/tests/results \\\n        statsmodels/tsa/innovations \\\n        statsmodels/tsa/innovations/tests \\\n        statsmodels/tsa/interp/__init__.py \\\n        statsmodels/tsa/interp/tests/__init__.py \\\n        statsmodels/tsa/regime_switching \\\n        statsmodels/tsa/regime_switching/tests \\\n        statsmodels/tsa/regime_switching/tests/results \\\n        statsmodels/tsa/seasonal \\\n        statsmodels/tsa/statespace \\\n        statsmodels/tsa/statespace/_filters \\\n        statsmodels/tsa/statespace/_smoothers \\\n        statsmodels/tsa/statespace/tests \\\n        statsmodels/tsa/statespace/tests/results \\\n        statsmodels/tsa/statespace/tests/results/frbny_nowcast \\\n        statsmodels/tsa/statespace/tests/results/frbny_nowcast/Nowcasting \\\n        statsmodels/tsa/statespace/tests/results/frbny_nowcast/Nowcasting/data \\\n        statsmodels/tsa/statespace/tests/results/frbny_nowcast/Nowcasting/data/US \\\n        statsmodels/tsa/statespace/tests/results/frbny_nowcast/Nowcasting/functions \\\n        statsmodels/tsa/stl \\\n        statsmodels/tsa/stl/tests \\\n        statsmodels/tsa/tests/__init__.py \\\n        statsmodels/tsa/tests/results \\\n        statsmodels/tsa/tests/test_ar.py \\\n        statsmodels/tsa/tests/test_bds.py \\\n        statsmodels/tsa/tests/test_deterministic.py \\\n        statsmodels/tsa/tests/test_seasonal.py \\\n        statsmodels/tsa/tests/test_tsa_tools.py \\\n        statsmodels/tsa/tests/test_x13.py \\\n        statsmodels/tsa/vector_ar/__init__.py \\\n        statsmodels/tsa/vector_ar/api.py \\\n        statsmodels/tsa/vector_ar/hypothesis_test_results.py \\\n        statsmodels/tsa/vector_ar/tests/JMulTi_results \\\n        statsmodels/tsa/vector_ar/tests/Matlab_results \\\n        statsmodels/tsa/vector_ar/tests/__init__.py \\\n        statsmodels/tsa/vector_ar/tests/results \\\n        statsmodels/tsa/x13.py \\\n        tools\n    if [ $? -ne \"0\" ]; then\n        echo \"Previously passing files failed linting.\"\n        RET=1\n    fi\n\n    # Tests any new python files\n    if [ -f $(git rev-parse --git-dir)/shallow ]; then\n        # Unshallow only when required, i.e., on CI\n        echo \"Repository is shallow\"\n        git fetch --unshallow --quiet\n    fi\n    git config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\n    git fetch origin --quiet\n    NEW_FILES=$(git diff origin/main --name-status -u -- \"*.py\" | grep ^A | cut -c 3- | paste -sd \" \" -)\n    if [ -n \"$NEW_FILES\" ]; then\n        echo \"Linting newly added files with strict rules\"\n        echo \"New files: $NEW_FILES\"\n        flake8 --isolated --max-line-length 88 --ignore=E121,E123,E126,E226,E24,E704,W503,W504,E741,E203 $(eval echo $NEW_FILES)\n        if [ $? -ne \"0\" ]; then\n            echo \"New files failed linting.\"\n            RET=1\n        fi\n    else\n        echo \"No new files to lint\"\n    fi\nfi\n\nexit \"$RET\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.3935546875,
          "content": "[build-system]\n# These are strictly build requirements. Runtime requirements are listed in\n# INSTALL_REQUIRES in setup.py\nrequires = [\n    \"setuptools>=69.0.2\",\n    \"cython>=3.0.10,<4\",  # Sync with CYTHON_MIN_VER in setup\n    \"numpy>=2.0.0,<3\",\n    \"scipy>=1.13,<2\",\n    \"setuptools_scm[toml]>=8,<9\"\n]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools_scm]\nwrite_to = \"statsmodels/_version.py\"\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.2890625,
          "content": "# build\ncython>=3.0.10,<4\nsetuptools_scm[toml]~=8.0\n\n# run\nmatplotlib>=3\ncolorama\njoblib\n# Remove due to failures on azure CI\n# cvxopt; os_name != \"win32\"\n\n# test\npytest>=7.3.0,<8\npytest-randomly\npytest-xdist\npytest-cov\n\n# Pin on Win32\npywinpty; os_name == \"nt\"\n\n# code quality\nflake8\nisort\nruff\n"
        },
        {
          "name": "requirements-doc.txt",
          "type": "blob",
          "size": 0.34765625,
          "content": "# Requirements for doc build, in addition to requirements.txt\nsphinx\n# Avoid warnings which break Sphinx by pinning pandas\npandas>=2.2.2,!=2.1.0\nsphinx-immaterial\njupyter\nnotebook\nnbsphinx\nnbconvert\npyyaml\npandas-datareader\nsimplegeneric\nseaborn\nnumpydoc\ntheano-pymc; os_name != \"nt\"\npymc3; os_name != \"nt\"\narviz; os_name != \"nt\"\njinja2==3.0.3\npickleshare\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.326171875,
          "content": "# Workaround for scipy build requirements\nnumpy>=1.22.3,<3  # released March 2022\nscipy>=1.8,!=1.9.2  # released Feb 2022, 1.9.2 blocked due to bug\npandas>=1.4,!=2.1.0  # released Feb 2022, 2.1.0 blocked due to bug\npatsy>=0.5.6  # released December 2023\npackaging>=21.3  # released Nov 2021\nformulaic>=1.1.0  # released December 2024\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 12.06640625,
          "content": "[metadata]\nlicense_files =\n    LICENSE.txt\n\n[tool:pytest]\nminversion = 6\ntestpaths = statsmodels\nxfail_strict = true\naddopts = --strict\n# Filter warnings generated by dependencies\nfilterwarnings =\n    ignore:pandas.core.common.is_categorical_dtype:DeprecationWarning:patsy\n    ignore:Using or importing the ABCs:DeprecationWarning:patsy\n    ignore:Using a non-tuple sequence:FutureWarning:mkl_fft\n    ignore:Using a non-tuple:FutureWarning:scipy.signal\n    ignore:Using a non-tuple:FutureWarning:scipy.stats.stats\n    ignore:the matrix subclass is not the recommended:PendingDeprecationWarning:\n    ignore:Method .ptp is deprecated:FutureWarning:numpy.core.fromnumeric\n    ignore::DeprecationWarning:nbconvert.exporters.exporter_locator\n    ignore:Using or importing the ABCs:DeprecationWarning:jinja2.utils\n    ignore:Converting `np.integer`:DeprecationWarning:scipy.stats.morestats\n    ignore:\\nstatsmodels.tsa.arima_model.ARMA:FutureWarning\n    ignore:The --strict option is deprecated:pytest.PytestDeprecationWarning:\n    error:genfromdta:FutureWarning\n    error:StataReader:FutureWarning\n    error:Care should be used:UserWarning\n    error::statsmodels.tools.sm_exceptions.HypothesisTestWarning\n    error::statsmodels.tools.sm_exceptions.SpecificationWarning\n    error:load will return datasets:FutureWarning\n    error:the 'lags' keyword is deprecated:FutureWarning\n    error:nobs is deprecated in favor of lags:DeprecationWarning\n    error:The default pvalmethod will change:FutureWarning\n    error:Using an implicitly registered:FutureWarning\n    error:An unsupported index:statsmodels.tools.sm_exceptions.ValueWarning\n    error:No supported index is:statsmodels.tools.sm_exceptions.ValueWarning\n    error:Anscombe residuals:FutureWarning\n    error:Calling Family:DeprecationWarning\n    error:SIR.fit_regularized did not:UserWarning\n    error:the 'sigma' keyword:FutureWarning\n    error:tight_layout:UserWarning\n    error:statsmodels.tsa.AR has been deprecated:FutureWarning\n    error:Using deprecated variance components:UserWarning\n    error:recarray support has been deprecated:FutureWarning\n    error:The value returned will change to a:FutureWarning\n    error:The default value of lags:FutureWarning\n    error:non-integer arg n is deprecated:DeprecationWarning\n    error:The default number of lags:FutureWarning:\n    error:fft=True will become the default:FutureWarning\n    error:The parameter names will change:FutureWarning\n    error:Only PeriodIndexes, DatetimeIndexes:UserWarning\n    error:the 'unbiased'' keyword is deprecated:FutureWarning\n    error:unbiased is deprecated in factor of adjusted:FutureWarning\n    error:categorical is deprecated:FutureWarning\n    error:After 0.13 initialization:FutureWarning\n    error:The bic value:FutureWarning\n    error:Setting initial values:FutureWarning\n    error:Setting use_boxcox:FutureWarning\n    error:``Describe`` has been deprecated:DeprecationWarning\n    error:Promotion of numbers and bools to strings:FutureWarning\n    error:old_names will be removed after the 0.14 release:FutureWarning\n    error:Dropping of nuisance columns in::\n    error:The `inplace` parameter in pandas::\n    error:The default method:FutureWarning:\n    error:trend 'nc' has been renamed to 'n':FutureWarning:\n    error:Keyword arguments have been passed:FutureWarning:\n    error:The behavior of wald_test:FutureWarning\n    error:cols is deprecated and will be removed after:FutureWarning\n    error:Passing None to catch any warning has been deprecated::\n    error:pandas.Int64Index is deprecated::\n    error:divide by zero encountered in _binom_pdf:RuntimeWarning\n    error:verbose is deprecated:FutureWarning\n    error:linear keyword is deprecated:DeprecationWarning:\n    error:The identity link alias is deprecated:FutureWarning:\n    error:The log link alias is deprecated:FutureWarning:\n    error:The probit link alias is deprecated:FutureWarning:\n    error:Parsing dates in:UserWarning\n    error:A value is trying to be set on a copy::\n    error:Conversion of an array with ndim:DeprecationWarning:\n    error:Series.__getitem__ treating keys:FutureWarning:\n    error:'Y' is deprecated, please use 'YE' instead:FutureWarning\n    error:'A' is deprecated, please use 'YE' instead:FutureWarning\n    error:'H' is deprecated and will:FutureWarning\n    error:'M' is deprecated, please use:FutureWarning\n    error:'Q' is deprecated, please use 'QE' instead:FutureWarning\n    error:'Q-DEC' is deprecated, please use 'QE-DEC' instead:FutureWarning\n    error:'Q-JAN' is deprecated, please use 'QE-JAN' instead:FutureWarning\n    error:'BQ-MAR' is deprecated, please use 'BQE-MAR' instead:FutureWarning\n    error:'AS-MAR' is deprecated and will be removed in a future version:FutureWarning\n    error:Downcasting object dtype arrays on:FutureWarning\n    error:The previous implementation of stack is deprecated:FutureWarning\n    error:Series.__setitem__ treating keys as positions is deprecated:FutureWarning\n    error:The provided callable:FutureWarning\n    error:divide by zero encountered in log1p:RuntimeWarning\n    error:Starting with pandas version 3.0 all:FutureWarning\n    error:EvalEnvironment is deprecated:FutureWarning\n    error:Using dict data structures:DeprecationWarning\n\nmarkers =\n    example: mark a test that runs example code\n    matplotlib: mark a test that requires matplotlib\n    slow: mark a test as slow\n    smoke: mark a test as a smoketest\n    low_precision: mark a test as low precision\n    todo: mark a test as incomplete\njunit_family = xunit2\n\n[flake8]\nexclude = .git,build,docs,archive\nmax-line-length = 88\nignore=\n    W503,\n    # W503: line break before binary operator\n    W504,\n    # W504: line break after binary operator\n    E741,\n    # E741: ambiguous variable name 'l'\n    E203\n    # E203: Whitespace before ':'\nselect=\n    E101,\n    # E101: indentation contains mixed spaces and tabs\n    E124,\n    # E124: closing bracket does not match visual indentation\n    F811,\n    # F811: redefinition of unused 'pytest' from line 10\n    F812,\n    # F812: list comprehension redefines 'x' from line 199\n    F822,\n    # F822: undefined name name in __all__\n    F823,\n    # F823: local variable name ... referenced before assignment\n    E129,\n    # E129: visually indented line with same indent as next logical line\n    E131,\n    # E131: continuation line unaligned for hanging indent\n    E125,\n    # E125: continuation line with same indent as next logical line\n    E111,\n    # E111: Indentation is not a multiple of four\n    E114,\n    # E114: Indentation is not a multiple of four (comment)\n    E117,\n    # E117: over-indented\n    E227,\n    # E227: missing whitespace around bitwise or shift operator\n    E228,\n    # E228: missing whitespace around modulo operator\n    E211,\n    # E211: whitespace before '['\n    E112,\n    # E112: expected an indented block\n    E113,\n    # E113: unexpected indentation\n    E223,\n    # E223: tab before operator\n    E224,\n    # E224: tab after operator\n    E242,\n    # E242: tab after ','\n    E304,\n    # E304: blank lines found after function decorator\n    F831,\n    # F831: duplicate argument name in function definition\n    E306,\n    # E306: expected 1 blank line before a nested definition, found 0\n\n    W,\n    # W191: indentation contains tabs\n    # W291: trailing whitespace\n    # W292: no newline at end of file\n    # W293: blank line contains whitespace\n    # W391: blank line at end of file\n    # W601: .has_key() is deprecated, use 'in'\n    # W602: deprecated form of raising exception\n    # W603: '<>' is deprecated, use '!='\n    # W604: backticks are deprecated, use 'repr()'\n    # W605: invalid escape sequence 'x'\n    # W606: 'async' and 'await' are reserved keywords starting with Python 3.7\n\n    E70,\n    # E701: multiple statements on one line (colon)\n    # E702: multiple statements on one line (semicolon)\n    # E703: statement ends with a semicolon\n    # E704: multiple statements on one line (def)\n\n    E71,\n    # E711: comparison to None should be 'if cond is None:'\n    # E712: comparison to True should be 'if cond is True:' or 'if cond:'\n    # E713: test for membership should be 'not in'\n\n    E721,\n    # E721: do not compare types, use 'isinstance()'\n\n    E74,\n    # E741 ambiguous variable name 'l', 'O', or 'I'\n    # E742: do not define classes named 'l', 'O', or 'I'\n    # E743: do not define functions named 'l', 'O', or 'I'\n\n    F4,\n    # F401: 'foo.bar' imported but unused\n    # F402: import 'assert_equal' from line 7 shadowed by loop variable\n    # F403: 'from .data import *' used; unable to detect undefined names\n    # F404: future import(s) name after other statements\n    # F405: name may be undefined, or defined from star imports: module\n    # F406: 'from module import *' only allowed at module level\n    # F407: an undefined __future__ feature name was imported\n\n    F6,\n    # F601: dictionary key name repeated with different values\n    # F602: dictionary key variable name repeated with different values\n    # F621: too many expressions in an assignment with star-unpacking\n    # F622: two or more starred expressions in an assignment (a, *b, *c = d)\n    # F631: assertion test is a tuple, which are always True\n    # F632: use ==/!= to compare str, bytes, and int literals\n\n    F7,\n    # F701: a break statement outside of a while or for loop\n    # F702: a continue statement outside of a while or for loop\n    # F703: a continue statement in a finally block in a loop\n    # F704: a yield or yield from statement outside of a function\n    # F705: a return statement with arguments inside a generator\n    # F706: a return statement outside of a function/method\n    # F707: an except: block as not the last exception handler\n    # F721: doctest syntax error\n    # F722: syntax error in forward type annotation\n\n    F81,\n    # F811: redefinition of unused 'pytest' from line 10\n    # F812: list comprehension redefines 'x' from line 199\n\n    F82,\n    # F821: undefined name 'foo'\n    # F822: undefined name name in __all__\n    # F823: local variable name ... referenced before assignment\n\n    F9,\n    # F901: raise NotImplemented should be raise NotImplementedError\n\n    E27,\n    # E271: multiple spaces after keyword\n    # E272: multiple spaces before keyword\n    # E273: tab after keyword\n    # E274: tab before keyword\n    # E275: missing whitespace after keyword\n\n    E4,\n    # E401: multiple imports on one line\n    # E402: module level import not at top of file\n\n    E9,\n    # E901: SyntaxError or IndentationError\n    # E902: IOError\n    # E999: Syntax Error\n\n\n[coverage:run]\nsource = statsmodels\nbranch = True\nplugins = Cython.Coverage\nomit =\n    # print_version is untestable\n    */print_version.py\n    # skip compatibility code\n    */compat/*\n    # Unused file\n    */results/gee_generate_tests.py\n    # Results for tests\n    */tests/results/*\n    # Simulation checks\n    */tests/*_simulation_check.py\n    # Misc non-test files in test directories\n    */tests/_*\n    */tests/e*\n    */tests/c*\n    */tests/d*\n    */tests/g*\n    */tests/m*\n    */tests/p*\n    */tests/r*\n    */tests/s*\n    */_version.py\n\n[coverage:report]\nshow_missing = True\nignore_errors = False\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Do not complain about missing debug-only code:\n    def __repr__\n    if self\\.debug\n    if pdf_output:\n\n    # Do not complain if tests do not hit defensive assertion code:\n    raise AssertionError\n    raise NotImplementedError\n    except NotImplementedError\n    except ImportError\n    except (HTTPError, URLError, SSLError, timeout)\n    except IGNORED_EXCEPTIONS\n\n    # Ignore pass\n    pass\n\n    # Do not complain if non-runnable code is not run:\n    if 0:\n    if __name__ == .__main__.:\n\n[coverage:html]\ndirectory = coverage_html_report\n\n[isort]\nsections=FUTURE,COMPAT,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER\nknown_first_party=statsmodels\nknown_third_party=Cython,numpy,matplotlib,pandas,patsy,pytest,cvxopt,cython\nmulti_line_output=3\ninclude_trailing_comma=True\nuse_parentheses=True\nline_length=79\nknown_compat=statsmodels.compat.*,setuptools,setuptools.*\nforce_grid_wrap=0\ncombine_as_imports=True\nforce_sort_within_sections=True\nforce_to_top=True\n\n\n[tool.ruff.lint]\ntyping-modules = [\"statsmodels.compat.python\", \"compat.python\"]\n\n[tool.ruff]\ntyping-modules = [\"statsmodels.compat.python\", \"compat.python\"]\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 12.294921875,
          "content": "\"\"\"\nTo build with coverage of Cython files\nexport SM_CYTHON_COVERAGE=1\npython -m pip install -e .\npytest --cov=statsmodels statsmodels\ncoverage html\n\"\"\"\n\nfrom setuptools import Command, Extension, find_packages, setup\nfrom setuptools.dist import Distribution\n\nfrom collections import defaultdict\nimport fnmatch\nimport inspect\nimport os\nfrom os.path import dirname, join as pjoin, relpath\nfrom pathlib import Path\nimport shutil\nimport sys\n\nimport numpy as np\nfrom packaging.version import parse\n\ntry:\n    # SM_FORCE_C is a testing shim to force setup to use C source files\n    FORCE_C = int(os.environ.get(\"SM_FORCE_C\", 0))\n    if FORCE_C:\n        raise ImportError(\"Force import error for testing\")\n    from Cython import Tempita, __version__ as cython_version\n    from Cython.Build import cythonize\n    from Cython.Distutils import build_ext\n\n    HAS_CYTHON = True\n    CYTHON_3 = parse(cython_version) >= parse(\"3.0\")\nexcept ImportError:\n    from setuptools.command.build_ext import build_ext  # noqa: F401\n\n    HAS_CYTHON = CYTHON_3 = False\n\nSETUP_DIR = Path(__file__).parent.resolve()\n\n###############################################################################\n# Key Values that Change Each Release\n###############################################################################\n# These are strictly installation requirements. Builds requirements are\n# managed in pyproject.toml\nINSTALL_REQUIRES = []\nwith open(\"requirements.txt\", encoding=\"utf-8\") as req:\n    for line in req.readlines():\n        INSTALL_REQUIRES.append(line.split(\"#\")[0].strip())\n\nDEVELOP_REQUIRES = []\nwith open(\"requirements-dev.txt\", encoding=\"utf-8\") as req:\n    for line in req.readlines():\n        DEVELOP_REQUIRES.append(line.split(\"#\")[0].strip())\n\nCYTHON_MIN_VER = \"3.0.10\"  # released January 2023\n\nEXTRAS_REQUIRE = {\n    \"build\": [\"cython>=\" + CYTHON_MIN_VER],\n    \"develop\": [\"cython>=\" + CYTHON_MIN_VER] + DEVELOP_REQUIRES,\n    \"docs\": [\n        \"sphinx\",\n        \"nbconvert\",\n        \"jupyter_client\",\n        \"ipykernel\",\n        \"matplotlib\",\n        \"nbformat\",\n        \"numpydoc\",\n        \"pandas-datareader\",\n    ],\n}\n\n###############################################################################\n# Values that rarely change\n###############################################################################\nDISTNAME = \"statsmodels\"\nDESCRIPTION = \"Statistical computations and models for Python\"\nREADME = SETUP_DIR.joinpath(\"README.rst\").read_text()\nLONG_DESCRIPTION = README\nMAINTAINER = \"statsmodels Developers\"\nMAINTAINER_EMAIL = \"pystatsmodels@googlegroups.com\"\nURL = \"https://www.statsmodels.org/\"\nLICENSE = \"BSD License\"\nDOWNLOAD_URL = \"\"\nPROJECT_URLS = {\n    \"Bug Tracker\": \"https://github.com/statsmodels/statsmodels/issues\",\n    \"Documentation\": \"https://www.statsmodels.org/stable/index.html\",\n    \"Source Code\": \"https://github.com/statsmodels/statsmodels\",\n}\n\nCLASSIFIERS = [\n    \"Development Status :: 4 - Beta\",\n    \"Environment :: Console\",\n    \"Programming Language :: Cython\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Operating System :: OS Independent\",\n    \"Intended Audience :: End Users/Desktop\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Science/Research\",\n    \"Natural Language :: English\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Topic :: Office/Business :: Financial\",\n    \"Topic :: Scientific/Engineering\",\n]\n\nFILES_TO_INCLUDE_IN_PACKAGE = [\"LICENSE.txt\", \"setup.cfg\"]\n\nFILES_COPIED_TO_PACKAGE = []\nfor filename in FILES_TO_INCLUDE_IN_PACKAGE:\n    if os.path.exists(filename):\n        dest = os.path.join(\"statsmodels\", filename)\n        shutil.copy2(filename, dest)\n        FILES_COPIED_TO_PACKAGE.append(dest)\n\nSTATESPACE_RESULTS = \"statsmodels.tsa.statespace.tests.results\"\n\nADDITIONAL_PACKAGE_DATA = {\n    \"statsmodels\": FILES_TO_INCLUDE_IN_PACKAGE,\n    \"statsmodels.datasets.tests\": [\"*.zip\"],\n    \"statsmodels.iolib.tests.results\": [\"*.dta\"],\n    \"statsmodels.stats.tests.results\": [\"*.json\"],\n    \"statsmodels.tsa.stl.tests.results\": [\"*.csv\"],\n    \"statsmodels.tsa.vector_ar.tests.results\": [\"*.npz\", \"*.dat\"],\n    \"statsmodels.stats.tests\": [\"*.txt\"],\n    \"statsmodels.stats.libqsturng\": [\"*.r\", \"*.txt\", \"*.dat\"],\n    \"statsmodels.stats.libqsturng.tests\": [\"*.csv\", \"*.dat\"],\n    \"statsmodels.sandbox.regression.tests\": [\"*.dta\", \"*.csv\"],\n    STATESPACE_RESULTS: [\"*.pkl\", \"*.csv\"],\n    STATESPACE_RESULTS + \".frbny_nowcast\": [\"test*.mat\"],\n    STATESPACE_RESULTS + \".frbny_nowcast.Nowcasting.data.US\": [\"*.csv\"],\n}\n\n##############################################################################\n# Extension Building\n##############################################################################\nCYTHON_COVERAGE = os.environ.get(\"SM_CYTHON_COVERAGE\", False)\nCYTHON_COVERAGE = CYTHON_COVERAGE in (\"1\", \"true\", '\"true\"')\nCYTHON_TRACE_NOGIL = str(int(CYTHON_COVERAGE))\nif CYTHON_COVERAGE:\n    print(\"Building with coverage for Cython code\")\nCOMPILER_DIRECTIVES = {\"linetrace\": CYTHON_COVERAGE}\nDEFINE_MACROS = [\n    (\"CYTHON_TRACE_NOGIL\", CYTHON_TRACE_NOGIL),\n    (\"NPY_NO_DEPRECATED_API\", \"NPY_1_7_API_VERSION\"),\n]\n\n\nexts = dict(\n    _stl={\"source\": \"statsmodels/tsa/stl/_stl.pyx\"},\n    _exponential_smoothers={\n        \"source\": \"statsmodels/tsa/holtwinters/_exponential_smoothers.pyx\"\n    },  # noqa: E501\n    _ets_smooth={\n        \"source\": \"statsmodels/tsa/exponential_smoothing/_ets_smooth.pyx\"\n    },  # noqa: E501\n    _innovations={\"source\": \"statsmodels/tsa/_innovations.pyx\"},\n    _hamilton_filter={\n        \"source\": \"statsmodels/tsa/regime_switching/_hamilton_filter.pyx.in\"\n    },  # noqa: E501\n    _kim_smoother={\n        \"source\": \"statsmodels/tsa/regime_switching/_kim_smoother.pyx.in\"\n    },  # noqa: E501\n    _arma_innovations={\n        \"source\": \"statsmodels/tsa/innovations/_arma_innovations.pyx.in\"\n    },  # noqa: E501\n    linbin={\"source\": \"statsmodels/nonparametric/linbin.pyx\"},\n    _qn={\"source\": \"statsmodels/robust/_qn.pyx\"},\n    _smoothers_lowess={\n        \"source\": \"statsmodels/nonparametric/_smoothers_lowess.pyx\"\n    },  # noqa: E501\n)\n\nstatespace_exts = [\n    \"statsmodels/tsa/statespace/_initialization.pyx.in\",\n    \"statsmodels/tsa/statespace/_representation.pyx.in\",\n    \"statsmodels/tsa/statespace/_kalman_filter.pyx.in\",\n    \"statsmodels/tsa/statespace/_filters/_conventional.pyx.in\",\n    \"statsmodels/tsa/statespace/_filters/_inversions.pyx.in\",\n    \"statsmodels/tsa/statespace/_filters/_univariate.pyx.in\",\n    \"statsmodels/tsa/statespace/_filters/_univariate_diffuse.pyx.in\",\n    \"statsmodels/tsa/statespace/_kalman_smoother.pyx.in\",\n    \"statsmodels/tsa/statespace/_smoothers/_alternative.pyx.in\",\n    \"statsmodels/tsa/statespace/_smoothers/_classical.pyx.in\",\n    \"statsmodels/tsa/statespace/_smoothers/_conventional.pyx.in\",\n    \"statsmodels/tsa/statespace/_smoothers/_univariate.pyx.in\",\n    \"statsmodels/tsa/statespace/_smoothers/_univariate_diffuse.pyx.in\",\n    \"statsmodels/tsa/statespace/_simulation_smoother.pyx.in\",\n    \"statsmodels/tsa/statespace/_cfa_simulation_smoother.pyx.in\",\n    \"statsmodels/tsa/statespace/_tools.pyx.in\",\n]\n\n\nclass CleanCommand(Command):\n    user_options = []\n\n    def initialize_options(self) -> None:\n        pass\n\n    def finalize_options(self) -> None:\n        pass\n\n    def run(self) -> None:\n        msg = \"\"\"\n\npython setup.py clean is not supported.\n\nUse one of:\n\n* `git clean -xdf` to clean all untracked files\n* `git clean -Xdf` to clean untracked files ignored by .gitignore\n\"\"\"\n        print(msg)\n        sys.exit(1)\n\n\ncmdclass = {\"clean\": CleanCommand}\n\n\ndef check_source(source_name):\n    \"\"\"Chooses C or pyx source files, and raises if C is needed but missing\"\"\"\n    source_ext = \".pyx\"\n    if not HAS_CYTHON:\n        source_name = source_name.replace(\".pyx.in\", \".c\")\n        source_name = source_name.replace(\".pyx\", \".c\")\n        source_ext = \".c\"\n        if not os.path.exists(source_name):\n            msg = (\n                \"C source not found.  You must have Cython installed to \"\n                \"build if the C source files have not been generated.\"\n            )\n            raise OSError(msg)\n    return source_name, source_ext\n\n\ndef process_tempita(source_name):\n    \"\"\"Runs pyx.in files through tempita is needed\"\"\"\n    if source_name.endswith(\"pyx.in\"):\n        with open(source_name, encoding=\"utf-8\") as templated:\n            pyx_template = templated.read()\n        pyx = Tempita.sub(pyx_template)\n        pyx_filename = source_name[:-3]\n        with open(pyx_filename, \"w\", encoding=\"utf-8\") as pyx_file:\n            pyx_file.write(pyx)\n        file_stats = os.stat(source_name)\n        try:\n            os.utime(\n                pyx_filename,\n                ns=(file_stats.st_atime_ns, file_stats.st_mtime_ns),\n            )\n        except AttributeError:\n            os.utime(pyx_filename, (file_stats.st_atime, file_stats.st_mtime))\n        source_name = pyx_filename\n    return source_name\n\n\nNUMPY_INCLUDES = sorted(\n    {np.get_include(), pjoin(dirname(inspect.getfile(np.core)), \"include\")}\n)\nNUMPY_MATH_LIBS = {\n    \"include_dirs\": [np.get_include()],\n    \"library_dirs\": [os.path.join(np.get_include(), \"..\", \"lib\")],\n    \"libraries\": [\"npymath\"],\n}\n\n\nextensions = []\nfor config in exts.values():\n    source, ext = check_source(config[\"source\"])\n    source = process_tempita(source)\n    name = source.replace(\"/\", \".\").replace(ext, \"\")\n    include_dirs = config.get(\"include_dirs\", [])\n    depends = config.get(\"depends\", [])\n    libraries = config.get(\"libraries\", [])\n    library_dirs = config.get(\"library_dirs\", [])\n    uses_numpy_libraries = config.get(\"numpy_libraries\", False)\n\n    include_dirs = sorted(set(include_dirs + NUMPY_MATH_LIBS[\"include_dirs\"]))\n    libraries = sorted(set(libraries + NUMPY_MATH_LIBS[\"libraries\"]))\n    library_dirs = sorted(set(library_dirs + NUMPY_MATH_LIBS[\"library_dirs\"]))\n\n    ext = Extension(\n        name,\n        [source],\n        include_dirs=include_dirs,\n        depends=depends,\n        libraries=libraries,\n        library_dirs=library_dirs,\n        define_macros=DEFINE_MACROS,\n    )\n    extensions.append(ext)\n\nfor source in statespace_exts:\n    source, ext = check_source(source)\n    source = process_tempita(source)\n    name = source.replace(\"/\", \".\").replace(ext, \"\")\n\n    ext = Extension(\n        name,\n        [source],\n        include_dirs=[\"statsmodels/src\"] + NUMPY_MATH_LIBS[\"include_dirs\"],\n        depends=[],\n        libraries=NUMPY_MATH_LIBS[\"libraries\"],\n        library_dirs=NUMPY_MATH_LIBS[\"library_dirs\"],\n        define_macros=DEFINE_MACROS,\n    )\n    extensions.append(ext)\n\nCOMPILER_DIRECTIVES[\"cpow\"] = True\nextensions = cythonize(\n    extensions,\n    compiler_directives=COMPILER_DIRECTIVES,\n    language_level=3,\n    force=CYTHON_COVERAGE,\n)\n\n##############################################################################\n# Construct package data\n##############################################################################\npackage_data = defaultdict(list)\nfiletypes = [\"*.csv\", \"*.txt\", \"*.dta\"]\nfor root, _, filenames in os.walk(\n    pjoin(os.getcwd(), \"statsmodels\", \"datasets\")\n):  # noqa: E501\n    matches = []\n    for filetype in filetypes:\n        for filename in fnmatch.filter(filenames, filetype):\n            matches.append(filename)\n    if matches:\n        package_data[\".\".join(relpath(root).split(os.path.sep))] = filetypes\nfor root, _, _ in os.walk(pjoin(os.getcwd(), \"statsmodels\")):\n    if root.endswith(\"results\"):\n        package_data[\".\".join(relpath(root).split(os.path.sep))] = filetypes\n\nfor path, filetypes in ADDITIONAL_PACKAGE_DATA.items():\n    package_data[path].extend(filetypes)\n\nif os.path.exists(\"MANIFEST\"):\n    os.unlink(\"MANIFEST\")\n\n\nclass BinaryDistribution(Distribution):\n    def is_pure(self):\n        return False\n\n\nsetup(\n    name=DISTNAME,\n    maintainer=MAINTAINER,\n    ext_modules=extensions,\n    maintainer_email=MAINTAINER_EMAIL,\n    description=DESCRIPTION,\n    license=LICENSE,\n    url=URL,\n    download_url=DOWNLOAD_URL,\n    project_urls=PROJECT_URLS,\n    long_description=LONG_DESCRIPTION,\n    classifiers=CLASSIFIERS,\n    platforms=\"any\",\n    cmdclass=cmdclass,\n    packages=find_packages(),\n    package_data=package_data,\n    distclass=BinaryDistribution,\n    include_package_data=False,  # True will install all files in repo\n    install_requires=INSTALL_REQUIRES,\n    extras_require=EXTRAS_REQUIRE,\n    zip_safe=False,\n    python_requires=\">=3.9\",\n)\n\n# Clean-up copied files\nfor copy in FILES_COPIED_TO_PACKAGE:\n    os.unlink(copy)\n"
        },
        {
          "name": "statsmodels",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}