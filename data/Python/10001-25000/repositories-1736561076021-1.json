{
  "metadata": {
    "timestamp": 1736561076021,
    "page": 1,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pypa/pipenv",
      "stars": 24961,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".deepsource.toml",
          "type": "blob",
          "size": 0.2216796875,
          "content": "version = 1\n\ntest_patterns = [\"tests/**\"]\n\nexclude_patterns = [\n    \"examples/**\",\n    \"pipenv/vendor/**\",\n    \"pipenv/patched/**\"\n]\n\n[[analyzers]]\nname = \"python\"\nenabled = true\n\n  [analyzers.meta]\n  runtime_version = \"3.x.x\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.373046875,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.toml]\nindent_size = 2\n\n[*.yaml]\nindent_size = 2\n\n# Makefiles always use tabs for indentation\n[Makefile]\nindent_style = tab\n\n# Batch files use tabs for indentation\n[*.bat]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1640625,
          "content": "# Defaults people to autocrlf if they dont have it set\n*.py text working-tree-encoding=utf-8 eol=lf\n* text=auto\n# binaries\n*.png\n*.jpg\n*.tar.gz\n*.zip\n*.whl\n*.exe\n*.gif\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.419921875,
          "content": "# File created using '.gitignore Generator' for Visual Studio Code: https://bit.ly/vscode-gig\n\n# Created by https://www.gitignore.io/api/python,macos\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# PyCharm\n.idea/\n\n# VSCode\n.vscode\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\n/build/\ndevelop-eggs/\n/dist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# PyCharm project settings\n.idea\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# Temporarily generating these with pytype locally for type safety\ntypeshed/\npytype.cfg\n\n### Python Patch ###\n.venv/\n\n\n# End of https://www.gitignore.io/api/python,macos\n\n# Custom rules (everything added below won't be overriden by 'Generate .gitignore File' if you use 'Update' option)\n.vs/slnx.sqlite\n\n# mypy/typing section\ntypeshed/\n.dmypy.json\nmypyhtml/\nXDG_CACHE_HOME/\nsnap/\nprime/\nstage/\npip-wheel-metadata/\n.vim/\n\n# Vendoring Files that generate but we don't want\npipenv/vendor/Misc/NEWS.d/next/Library/2021-05-14-16-06-02.bpo-44095.v_pLwY.rst\npipenv/vendor/markupsafe/_speedups.c\n\n# ignore all vim files\n.sw[p,o]\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.005859375,
          "content": "[submodule \"tests/test_artifacts/git/pinax\"]\n\tpath = tests/test_artifacts/git/pinax\n\turl = https://github.com/pinax/pinax.git\n[submodule \"tests/test_artifacts/git/requests\"]\n\tpath = tests/test_artifacts/git/requests\n\turl = https://github.com/psf/requests.git\n[submodule \"tests/test_artifacts/git/six\"]\n\tpath = tests/test_artifacts/git/six\n\turl = https://github.com/benjaminp/six.git\n[submodule \"tests/test_artifacts/git/dateutil\"]\n\tpath = tests/test_artifacts/git/dateutil\n\turl = https://github.com/dateutil/dateutil\n[submodule \"tests/test_artifacts/git/pyinstaller\"]\n\tpath = tests/test_artifacts/git/pyinstaller\n\turl = https://github.com/pyinstaller/pyinstaller.git\n[submodule \"tests/test_artifacts/git/jinja2\"]\n\tpath = tests/test_artifacts/git/jinja2\n\turl = https://github.com/pallets/jinja.git\n[submodule \"tests/test_artifacts/git/flask\"]\n\tpath = tests/test_artifacts/git/flask\n\turl = https://github.com/pallets/flask.git\n[submodule \"tests/pypi\"]\n\tpath = tests/pypi\n\turl = https://github.com/sarugaku/pipenv-test-artifacts.git\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.0263671875,
          "content": "[settings]\nprofile = black\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.470703125,
          "content": "exclude: '^(pipenv/patched/|pipenv/vendor/|tests/|pipenv/pipenv.1)'\n\nrepos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: v4.6.0\n  hooks:\n  - id: check-builtin-literals\n  - id: check-added-large-files\n  - id: check-case-conflict\n  - id: check-ast\n  - id: check-toml\n  - id: check-yaml\n  - id: debug-statements\n  - id: end-of-file-fixer\n    exclude: WHEEL\n  - id: forbid-new-submodules\n  - id: trailing-whitespace\n    exclude: .patch\n\n- repo: https://github.com/astral-sh/ruff-pre-commit\n  rev: v0.9.0\n  hooks:\n  - id: ruff\n    args: [--fix, --exit-non-zero-on-fix]\n\n- repo: https://github.com/psf/black\n  rev: 24.8.0\n  hooks:\n  - id: black\n\n- repo: https://github.com/pre-commit/pygrep-hooks\n  rev: v1.10.0\n  hooks:\n  - id: python-no-log-warn\n  - id: python-no-eval\n  - id: rst-backticks\n    files: .*\\.rst$\n    types: [file]\n\n- repo: local\n  hooks:\n  - id: news-fragment-filenames\n    name: NEWS fragment\n    language: fail\n    entry: NEWS fragment files must be named *.(feature|behavior|bugfix|vendor|doc|trivial|removal|process).rst\n    exclude: ^news/(towncrier_template.rst|.*\\.(feature|behavior|bugfix|vendor|doc|trivial|removal|process).rst)\n    files: ^news/\n\n- repo: https://github.com/mgedmin/check-manifest\n  rev: '0.49'\n  hooks:\n  - id: check-manifest\n    stages: [manual]\n\n- repo: https://github.com/tox-dev/pyproject-fmt\n  rev: \"2.2.4\"\n  hooks:\n  - id: pyproject-fmt\n\n- repo: https://github.com/abravalheri/validate-pyproject\n  rev: v0.19\n  hooks:\n  - id: validate-pyproject\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.5595703125,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# We recommend specifying your dependencies to enable reproducible builds:\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 128.611328125,
          "content": "2024.2.0 (2024-11-05)\n=====================\nPipenv 2024.2.0 (2024-11-05)\n============================\n\n\nBug Fixes\n---------\n\n- Fix regression where ``--skip-lock --dev`` was incorrectly searching Lockfile categories (\"default\", \"develop\") instead of Pipfile categories (\"packages\", \"dev-packages\"), causing packages to not be found.  `#6304 <https://github.com/pypa/pipenv/issues/6304>`_\n- Fix issue where pipenv install would unintentionally upgrade packages that had wildcard (*) specifiers in the Pipfile, even when locked versions existed and no upgrade was requested.  `#6306 <https://github.com/pypa/pipenv/issues/6306>`_\n- Fix issue where modules could not be found  `#6307 <https://github.com/pypa/pipenv/issues/6307>`_\n\nVendored Libraries\n------------------\n\n- Vendor in ``pip==24.3.1``.  `#6292 <https://github.com/pypa/pipenv/issues/6292>`_\n- Vendoring\n  ---------\n  * Update vendored dependencies:\n    - importlib-metadata from 8.4.0 to 8.5.0\n    - packaging from 24.0 to 24.1\n    - tomli from 2.0.1 to 2.0.2\n    - tomlkit from 0.12.4 to 0.13.2\n    - zipp from 3.18.1 to 3.20.2  `#6293 <https://github.com/pypa/pipenv/issues/6293>`_\n2024.3.1 (2024-10-30)\n=====================\n\nBug Fixes\n---------\n\n- Fix the readthedocs.org build that has been failing and not updating our official docs at https://pipenv.pypa.io/en/latest/  `#6291 <https://github.com/pypa/pipenv/issues/6291>`_\n- Fix regression of ``2024.3.0`` when using the ``--system`` flag without ``--deploy`` flag.  `#6295 <https://github.com/pypa/pipenv/issues/6295>`_\n- - **Bugfix:** Fixed Regression with the ``pipenv update`` routine to allow for package upgrades without requiring an existing lockfile. This change improves the flexibility of the update process by determining which packages require updating and handling cases where the lockfile is absent or partially defined.\n  - **Tests Added:** Comprehensive integration tests for the updated functionality, covering scenarios like updating packages without a lockfile, detecting modified entries, handling VCS changes, and verifying the correct application of extras during installation.  `#6299 <https://github.com/pypa/pipenv/issues/6299>`_\n\n2024.3.0 (2024-10-29)\n=====================\n\nBug Fixes\n---------\n\n- Fix dependency resolution edge cases and versioning constraints handling:\n  * Allow JSON format options for ``--reverse`` dependency graph output matching pipdeptree\n  * Improve installation and upgrade routines to better handle dependencies\n  * Add ability to specify json output as pipdeptree does\n  * Add more consistent handling of VCS dependencies and references\n  * Fix synchronization of development and default dependencies during updates\n  * Ensure proper propagation of version constraints during updates\n  * Fix handling of ``~=`` and other version specifiers during updates\n\n  Key Changes:\n  * Improved reverse dependency analysis to catch conflicts earlier in resolution\n  * Better handling of VCS package lock data, preserving refs and subdirectories\n  * Fixed issue where VCS references could be lost in lock file when installed via commit hash\n  * Better handling of pipfile categories during installation and updates\n  * Corrected logic for development dependency resolution and constraint propagation\n  * Improved validation and preservation of version specifiers during updates\n\n  This improves stability when working with complex dependency trees and version constraints.  `#6281 <https://github.com/pypa/pipenv/issues/6281>`_\n- Fixes issue with --skip-lock not providing pip the proper package specifier when version was a string (issue did not impact dict with version key).  `#6288 <https://github.com/pypa/pipenv/issues/6288>`_\n\n2024.2.0 (2024-10-22)\n=====================\n\nBug Fixes\n---------\n\n- Features & Bug Fixes\n  -------------------\n  - Refactored and simplified install routines, improving maintainability and reliability (#6276)\n    - Split install logic into smaller, focused functions.\n    - Eliminated Pipfile caching for now to prevent bugs and reduce complexity.\n    - Fixed edge cases with package category selection.\n    - Improved handling of VCS dependencies during updates, fixing when ref is a revision and not a branch.\n\n  - Enhanced VCS URL handling with better environment variable support (#6276)\n    - More reliable expansion of environment variables in Git URLs.\n    - Better handling of authentication components in VCS URLs.\n    - Improved error messaging for missing environment variables.\n    - Fixed issue where Git reference could be dropped during relock.  `#6276 <https://github.com/pypa/pipenv/issues/6276>`_\n\nVendored Libraries\n------------------\n\n- Update pipdeptree to version 2.23.4  `#6275 <https://github.com/pypa/pipenv/issues/6275>`_\n\n2024.1.0 (2024-09-29)\n=====================\n\nFeatures & Improvements\n-----------------------\n\n- Upgrade from ``pip==24.0`` to ``pip==24.1.2``.  `#6253 <https://github.com/pypa/pipenv/issues/6253>`_\n\nBug Fixes\n---------\n\n- Fixes regression in lock file generation that caused environment variable references (e.g., ${GIT_PASSWORD}) in VCS URLs to be stripped out. This restores the ability to use credential placeholders in version control system URLs.  `#6256 <https://github.com/pypa/pipenv/issues/6256>`_\n\n2024.0.3 (2024-09-22)\n=====================\n\nBug Fixes\n---------\n\n- Disable ``ResourceWarning`` warning for temporary files that are cleaned on program exit.  `#6151 <https://github.com/pypa/pipenv/issues/6151>`_\n- Fixed package sorting when installing a package with extras.  `#6171 <https://github.com/pypa/pipenv/issues/6171>`_\n- Fixed ``pipenv uninstall --all`` failing when the virtual environment no longer exists.  `#6185 <https://github.com/pypa/pipenv/issues/6185>`_\n- Fix issue where installing a vcs dependency using pipenv CLI yielded the wrong Pipfile entry such that it could not lock.  `#6242 <https://github.com/pypa/pipenv/issues/6242>`_\n- Fix report that pipenv requires ``packaging>=22`` on some systems by setting it as a dependency.  `#6243 <https://github.com/pypa/pipenv/issues/6243>`_\n\n2024.0.2 (2024-09-13)\n=====================\n\nFeatures & Improvements\n-----------------------\n\n- Initial support for python3.13  `#6240 <https://github.com/pypa/pipenv/issues/6240>`_\n\nBug Fixes\n---------\n\n- Fix bump version in CI/CD pipeline  `#6177 <https://github.com/pypa/pipenv/issues/6177>`_\n- Swap old_version and new_version in pipenv update --outdated output.  `#6179 <https://github.com/pypa/pipenv/issues/6179>`_\n- Update shell detection to only check the end of the command used.  `#6197 <https://github.com/pypa/pipenv/issues/6197>`_\n- Fix loading dot env twice #6198  `#6202 <https://github.com/pypa/pipenv/issues/6202>`_\n- Solve issue with quiet lock not writing the lock file #6207.  `#6207 <https://github.com/pypa/pipenv/issues/6207>`_\n- Fix regression introduced with the \"smarter uninstall\" PR.  Uninstall ``--all`` should not clear the Pipfile entries.  `#6209 <https://github.com/pypa/pipenv/issues/6209>`_\n- Fixed regression where all local file installations were incorrectly treated as editable. Ensure that local file installations are explicitly marked as editable in both Pipfile and Pipfile.lock entries if editable installation is desired.  `#6222 <https://github.com/pypa/pipenv/issues/6222>`_\n- Corrected behavior of ``pipenv install --skip-lock`` after behavioral install refactor introduced regression.  No Pipfile.lock is generated with this fix and installation of vcs no longer fails with revision missing error.  `#6225 <https://github.com/pypa/pipenv/issues/6225>`_\n- Fix for Windows on ARM missing distlib binaries in pyproject.toml  `#6240 <https://github.com/pypa/pipenv/issues/6240>`_\n\nVendored Libraries\n------------------\n\n- Clean up usage of click styling from exceptions, shell and virtualenv  `#6178 <https://github.com/pypa/pipenv/issues/6178>`_\n- Remove click.echo from pipenv/cli  `#6182 <https://github.com/pypa/pipenv/issues/6182>`_\n- Remove click.echo from exceptions.py  `#6216 <https://github.com/pypa/pipenv/issues/6216>`_\n- Update importlib-metadata to 8.4.0  `#6235 <https://github.com/pypa/pipenv/issues/6235>`_\n\n2024.0.1 (2024-06-11)\n=====================\n\nNo significant changes.\n\n\n2024.0.0 (2024-06-06)\n=====================\n\nFeatures & Improvements\n-----------------------\n\n- Supply any ``--extra-pip-args`` also in the resolver steps.  `#6006 <https://github.com/pypa/pipenv/issues/6006>`_\n- The ``uninstall`` command now does the inverse of ``upgrade`` which means it no longer invokes a full ``lock`` cycle which was problematic for projects with many dependencies.  `#6029 <https://github.com/pypa/pipenv/issues/6029>`_\n- The ``pipenv requirements`` subcommand now supports the ``--from-pipfile`` flag. When this flag is used, the requirements file will only include the packages explicitly listed in the Pipfile, excluding any sub-packages.  `#6156 <https://github.com/pypa/pipenv/issues/6156>`_\n\nBehavior Changes\n----------------\n\n- ``pipenv==2024.0.0`` denotes the first major release of our semver strategy.\n  As much requested, the ``install`` no longer does a complete lock operation.  Instead ``install`` follows the same code path as pipenv update (which is upgrade + sync).\n  This is what most new users expect the behavior to be; it is a behavioral change, a necessary one to make the tool more usable.\n  Remember that complete lock resolution can be invoked with ``pipenv lock`` just as before.  `#6098 <https://github.com/pypa/pipenv/issues/6098>`_\n\nBug Fixes\n---------\n\n- Fix a bug that passes pipenv check command if Pipfile.lock not exist  `#6126 <https://github.com/pypa/pipenv/issues/6126>`_\n- Fix a bug that vcs subdependencies were locked without their subdirectory fragment if they had one  `#6136 <https://github.com/pypa/pipenv/issues/6136>`_\n- ``pipenv`` converts off ``pkg_resources`` API usages.  This necessitated also vendoring in:\n  * latest ``pipdeptree==2.18.1`` which also converted off ``pkg_resources``\n  * ``importlib-metadata==7.1.0`` to continue supporting python 3.8 and 3.9\n  * ``packaging==24.0`` since the packaging we were utilizing in pip's _vendor was insufficient for this conversion.  `#6139 <https://github.com/pypa/pipenv/issues/6139>`_\n- Pipenv only supports absolute python version. If the user specifies a Python version with inequality signs like >=3.12, <3.12 in the [requires] field, the code has been modified to explicitly express in an error log that absolute versioning must be used.  `#6164 <https://github.com/pypa/pipenv/issues/6164>`_\n\nVendored Libraries\n------------------\n\n- Vendor in ``pip==24.0``  `#6117 <https://github.com/pypa/pipenv/issues/6117>`_\n- Spring 2024 Vendoring includes:\n  * ``click-didyoumean==0.3.1``\n  * ``expect==4.9.0``\n  * ``pipdeptree==2.16.2``\n  * ``python-dotenv==1.0.1``\n  * ``ruamel.yaml==0.18.6``\n  * ``shellingham==1.5.4``\n  * ``tomlkit==0.12.4``  `#6118 <https://github.com/pypa/pipenv/issues/6118>`_\n\n\n2023.12.1 (2024-02-04)\n======================\n\nBug Fixes\n---------\n\n- Remove debug print statements that should not have made it into the last release.  `#6079 <https://github.com/pypa/pipenv/issues/6079>`_\n2023.12.0 (2024-02-01)\n======================\nPipenv 2023.12.0 (2024-02-01)\n=============================\n\n\nBug Fixes\n---------\n\n- Removal of pydantic from pythonfinder and pipenv; reduced complexity of pythonfinder pathlib usage (avoid posix conversions).  `#6065 <https://github.com/pypa/pipenv/issues/6065>`_\n- Adjusted logic which assumed any file, path or VCS install should be considered editable.  Instead relies on the user specified editable flag to mark requirement as editable install.  `#6069 <https://github.com/pypa/pipenv/issues/6069>`_\n- Remove logic that treats ``CI`` variable to use ``do_run_nt`` shell logic, as the original reasons for that patch were no longer valid.  `#6072 <https://github.com/pypa/pipenv/issues/6072>`_\n2023.11.17 (2024-01-21)\n=======================\nPipenv 2023.11.17 (2024-01-21)\n==============================\n\n\nBug Fixes\n---------\n\n- Add markers to Pipfile when parsing requirements.txt  `#6008 <https://github.com/pypa/pipenv/issues/6008>`_\n- Fix KeyError when using a source without a name in Pipfile  `#6021 <https://github.com/pypa/pipenv/issues/6021>`_\n- Fix a bug with locking projects that contains packages with non canonical names from private indexes  `#6056 <https://github.com/pypa/pipenv/issues/6056>`_\n\nVendored Libraries\n------------------\n\n- Update vendored tomlkit to ``0.12.3``  `#6024 <https://github.com/pypa/pipenv/issues/6024>`_\n- Bump version of pipdeptree to 0.13.2  `#6055 <https://github.com/pypa/pipenv/issues/6055>`_\n2023.11.15 (2023-11-15)\n=======================\nPipenv 2023.11.15 (2023-11-15)\n==============================\n\n\nBug Fixes\n---------\n\n- Fix regression with path installs on most recent release ``2023.11.14``  `#6017 <https://github.com/pypa/pipenv/issues/6017>`_\n\n\n2023.11.14 (2023-11-14)\n=======================\n\nBehavior Changes\n----------------\n\n- pipenv now ignores existing venv dir when ``PIPENV_VENV_IN_PROJECT`` is false.  `#6009 <https://github.com/pypa/pipenv/issues/6009>`_\n\nBug Fixes\n---------\n\n- Assume the vcs and direct URL installs need to be reinstalled.  `#5936 <https://github.com/pypa/pipenv/issues/5936>`_\n- Pass through pipfile index urls when creating https session so that keyring fully works  `#5994 <https://github.com/pypa/pipenv/issues/5994>`_\n- Fix Using dependencies from a URL fails on Windows.  `#6011 <https://github.com/pypa/pipenv/issues/6011>`_\n\n\n2023.10.24 (2023-10-24)\n=======================\n\nFeatures & Improvements\n-----------------------\n\n- Officially support python 3.12  `#5987 <https://github.com/pypa/pipenv/issues/5987>`_\n\nBug Fixes\n---------\n\n- Additional safety check in _fold_markers logic that affected some lock resolutions in prior release.  `#5988 <https://github.com/pypa/pipenv/issues/5988>`_\n\nVendored Libraries\n------------------\n\n- Update vendored versions of:\n    * click==8.1.7\n    * markupsafe==2.1.3\n    * pydantic==1.10.13\n    * pythonfinder==2.0.6\n    * ruamel.yaml==0.17.39\n    * shellingham==1.5.3\n    * tomlkit==0.12.1  `#5986 <https://github.com/pypa/pipenv/issues/5986>`_\n- Update vendored pip to ``23.3.1``  `#5991 <https://github.com/pypa/pipenv/issues/5991>`_\n\n\n2023.10.20 (2023-10-20)\n=======================\n\nFeatures & Improvements\n-----------------------\n\n- Add quiet option to pipenv shell, hiding \"Launching subshell in virtual environment...\"  `#5966 <https://github.com/pypa/pipenv/issues/5966>`_\n- Vendor in pip==23.3 which includes updates to certifi, urllib3, and  adds truststore among other improvements.  `#5979 <https://github.com/pypa/pipenv/issues/5979>`_\n\nBehavior Changes\n----------------\n\n- Change ``--py`` to use ``print`` preventing insertion of newline characters  `#5969 <https://github.com/pypa/pipenv/issues/5969>`_\n\nVendored Libraries\n------------------\n\n- Drop pep517 - as it is no longer used.  `#5970 <https://github.com/pypa/pipenv/issues/5970>`_\n\nRemovals and Deprecations\n-------------------------\n\n- Drop support for Python 3.7  `#5879 <https://github.com/pypa/pipenv/issues/5879>`_\n\n\n2023.10.3 (2023-10-03)\n======================\n\nBug Fixes\n---------\n\n- Eveb better handling of vcs branch references that contain special characters.  `#5934 <https://github.com/pypa/pipenv/issues/5934>`_\n- Bump certifi from 2023.5.7 to 2023.7.22 in /examples to address a security vulnerability  `#5941 <https://github.com/pypa/pipenv/issues/5941>`_\n\n\n2023.9.8 (2023-09-08)\n=====================\n\nBug Fixes\n---------\n\n- ignore_compatibility was supposed to default to False (except for hash collection)  `#5926 <https://github.com/pypa/pipenv/issues/5926>`_\n\n\n2023.9.7 (2023-09-07)\n=====================\n\nFeatures & Improvements\n-----------------------\n\n- Updates build to use exclusively ``pyproject.toml``\n  ---------------------------------------------------\n\n  Modernizes the build process by consolidating all of ``setuptools`` metadata within ``pyproject.toml`` and removing deprecated ``setup.cfg`` and ``setup.py``.  `#5837 <https://github.com/pypa/pipenv/issues/5837>`_\n\nBug Fixes\n---------\n\n- Restore the ignore compatibility finder pip patch to resolve issues collecting hashes from google artifact registry (and possibly others).  `#5887 <https://github.com/pypa/pipenv/issues/5887>`_\n- Handle case better where setup.py name is referencing a variable that is a string while encouraging folks to migrate their projects to pyproject.toml  `#5905 <https://github.com/pypa/pipenv/issues/5905>`_\n- Better handling of local file install edge cases; handle local file extras.  `#5919 <https://github.com/pypa/pipenv/issues/5919>`_\n- Include the Pipfile markers in the install phase when using ``--skip-lock``.  `#5920 <https://github.com/pypa/pipenv/issues/5920>`_\n- Fallback to default vcs ref when no ref is supplied.\n  More proactively determine package name from the pip line where possible, fallback to the existing file scanning logics when unable to determine name.  `#5921 <https://github.com/pypa/pipenv/issues/5921>`_\n\n\n# 2023.9.1 (2023-09-01)\n\n## Features & Improvements\n\n- Top level Pipfile sys_platform markers should be transitive; adds top level platform_machine entries that are also transitive.   Marker entries continue to operate the same as before.  [#5892](https://github.com/pypa/pipenv/issues/5892)\n\n## Bug Fixes\n\n- Apply patch for install_search_all_sources = True functionality.  [#5895](https://github.com/pypa/pipenv/issues/5895)\n- Relative paths improvements for editable installs.  [#5896](https://github.com/pypa/pipenv/issues/5896)\n- Set log level in resolver to WARN when verbose is not passed.  [#5897](https://github.com/pypa/pipenv/issues/5897)\n- Handle more variations in private index html to improve hash collection.  [#5898](https://github.com/pypa/pipenv/issues/5898)\n\n# 2023.8.28 (2023-08-28)\n\n## Bug Fixes\n\n- Revert change that caused the credentials in source url issue.  [#5878](https://github.com/pypa/pipenv/issues/5878)\n- Do not treat named requirements as file installs just becacuse a match path exists; better handling of editable keyword for local file installs.\n  Handle additional edge cases in the setup.py ast parser logic for trying to determine local install package name.  [#5885](https://github.com/pypa/pipenv/issues/5885)\n\n# 2023.8.26 (2023-08-26)\n\n## Bug Fixes\n\n- Additional property caching to avoid duplication of sources in the resolver.  [#5863](https://github.com/pypa/pipenv/issues/5863)\n- Fix recent regressions with local/editable file installs.  [#5870](https://github.com/pypa/pipenv/issues/5870)\n- Fixes the vcs subdirectory fragments regression; fixes sys_platform markers regression.  [#5871](https://github.com/pypa/pipenv/issues/5871)\n- Fix regression that caused printing non-printable ascii characters  when help was called.  [#5872](https://github.com/pypa/pipenv/issues/5872)\n\n# 2023.8.25 (2023-08-25)\n\n## Bug Fixes\n\n- Fix regression of hash collection when downloading package from private indexes when the hash is not found in the index href url fragment.  [#5866](https://github.com/pypa/pipenv/issues/5866)\n\n# 2023.8.23 (2023-08-22)\n\n## Bug Fixes\n\n- More gracefully handle @ symbols in vcs URLs to address recent regression with vcs URLs.  [#5849](https://github.com/pypa/pipenv/issues/5849)\n\n# 2023.8.22 (2023-08-22)\n\n## Bug Fixes\n\n- Fix regression with `ssh://` vcs URLs introduced in `2023.8.21` whereby ssh vcs URLs are expected to have at least one `@` symbol.  [#5846](https://github.com/pypa/pipenv/issues/5846)\n\n# 2023.8.21 (2023-08-21)\n\n## Bug Fixes\n\n- Add back some relevant caching to increase performance after the major refactor released with `2023.8.19`  [#5841](https://github.com/pypa/pipenv/issues/5841)\n- Fix some edge cases around vcs dependencies without a ref, and older Pipfile/lockfile formats.  [#5843](https://github.com/pypa/pipenv/issues/5843)\n\n## Vendored Libraries\n\n- Remove unused command line interface for vendored packages.  [#5840](https://github.com/pypa/pipenv/issues/5840)\n\n# 2023.8.20 (2023-08-20)\n\n## Bug Fixes\n\n- Fix the expected output of the `version` command.  [#5838](https://github.com/pypa/pipenv/issues/5838)\n\n# 2023.8.19 (2023-08-19)\n\n## Features & Improvements\n\n- The `--categories` option now works with requirements.txt file.  [#5722](https://github.com/pypa/pipenv/issues/5722)\n\n## Bug Fixes\n\n- Drop requirementslib for managing pip lines and InstallRequirements, bring remaining requirementslib functionality into pipenv.\n  Fixes numerous reports about extras installs with vcs and file installs; format pip lines correctly to not generate deprecation warnings.  [#5793](https://github.com/pypa/pipenv/issues/5793)\n\n## Vendored Libraries\n\n- Update pip 23.2 -> 23.2.1  [#5822](https://github.com/pypa/pipenv/issues/5822)\n\n## Improved Documentation\n\n- Added documentation on how to move or rename a project directory  [#5129](https://github.com/pypa/pipenv/issues/5129)\n\n## Removals and Deprecations\n\n- The `--skip-lock` flag which was deprecated, has now been removed to unblock modernizing the pipenv resolver code.  [#5805](https://github.com/pypa/pipenv/issues/5805)\n\n# 2023.7.23 (2023-07-23)\n\n## Features & Improvements\n\n- Upgrades `pip==23.2` which includes everything from the pip changelog.  Drops the \"install_compatatability_finder\" pip internals patch.  [#5808](https://github.com/pypa/pipenv/issues/5808)\n\n## Bug Fixes\n\n- Fix issue parsing some Pipfiles with separate packages.\\<pkg> sections (tomlkit OutOfOrderTableProxy)  [#5794](https://github.com/pypa/pipenv/issues/5794)\n- Fix all ruff linter warnings  [#5807](https://github.com/pypa/pipenv/issues/5807)\n- Restore running Resolver in sub-process using the project python by default; maintains ability to run directly by setting `PIPENV_RESOLVER_PARENT_PYTHON` environment variable to 1 (useful for internal debugging).  [#5809](https://github.com/pypa/pipenv/issues/5809)\n- Fix error when a Windows path begins with a '' with `pythonfinder==2.0.5`.  [#5812](https://github.com/pypa/pipenv/issues/5812)\n\n## Vendored Libraries\n\n- Remove usage of click.secho in some modules.  [#5804](https://github.com/pypa/pipenv/issues/5804)\n\n2023.7.11 (2023-07-11)\n\n## Bug Fixes\n\n- Invoke the resolver in the same process as pipenv rather than utilizing subprocess.  [#5787](https://github.com/pypa/pipenv/issues/5787)\n- Fix regression markers being included as None/null in requirements command.  [#5788](https://github.com/pypa/pipenv/issues/5788)\n\n# 2023.7.9 (2023-07-09)\n\n## Bug Fixes\n\n- Drop the --keep-outdated flag and --selective-upgrade flags that have been deprecated in favor of update/upgrade commands.  [#5730](https://github.com/pypa/pipenv/issues/5730)\n- Fix regressions in the `requirements` command related to standard index extras and handling of local file requirements.  [#5784](https://github.com/pypa/pipenv/issues/5784)\n\n# 2023.7.4 (2023-07-04)\n\n## Bug Fixes\n\n- Fixes regression on Pipfile requirements syntax. Ensure default operator is provided to requirement lib to avoid crash.  [#5765](https://github.com/pypa/pipenv/issues/5765)\n- Ensure hashes included in a generated requirements file are after any markers.  [#5777](https://github.com/pypa/pipenv/issues/5777)\n\n# 2023.7.3 (2023-07-02)\n\n## Bug Fixes\n\n- Fix regression with `--system` flag usage.  [#5773](https://github.com/pypa/pipenv/issues/5773)\n\n# 2023.7.1 (2023-07-01)\n\n## Bug Fixes\n\n- Patch `_get_requests_session` method to consider `PIP_CLIENT_CERT` value when present.  [#5746](https://github.com/pypa/pipenv/issues/5746)\n- Fix regression in `requirements` command that was causing package installs after upgrade to `requirementslib==3.0.0`.  [#5755](https://github.com/pypa/pipenv/issues/5755)\n- Fix `error: invalid command 'egg_info'` edge case with requirementslib 3.0.0.  It exposed pipenv resolver sometimes was using a different python than expected.  [#5760](https://github.com/pypa/pipenv/issues/5760)\n- Fix issue in requirementslib 3.0.0 where dependencies defined in pyproject.toml were not being included in the lock file.  [#5766](https://github.com/pypa/pipenv/issues/5766)\n\n## Removals and Deprecations\n\n- Bump dparse to 0.6.3  [#5750](https://github.com/pypa/pipenv/issues/5750)\n\n# 2023.6.26 (2023-06-26)\n\n## Improved Documentation\n\n- Add missing environment variable descriptions back to documentation  [#missing_env_var_desc](https://github.com/pypa/pipenv/issues/missing_env_var_desc)\n\n# 2023.6.18 (2023-06-18)\n\n## Bug Fixes\n\n- Fixes resolver to only consider the default index for packages when a secondary index is not specified.  This brings the code into alignment with stated assumptions about index restricted packages behavior of `pipenv`.  [#5737](https://github.com/pypa/pipenv/issues/5737)\n\n## Removals and Deprecations\n\n- Deprecation of `--skip-lock` flag as it bypasses the security benefits of pipenv.  Plus it lacks proper deterministic support of installation from multiple package indexes.  [#5737](https://github.com/pypa/pipenv/issues/5737)\n\n# 2023.6.12 (2023-06-11)\n\n## Bug Fixes\n\n- Remove the `sys.path` modifications and as a result fixes keyring support.  [#5719](https://github.com/pypa/pipenv/issues/5719)\n\n# 2023.6.11 (2023-06-11)\n\n## Vendored Libraries\n\n- Upgrades to `pipdeptree==2.8.0` which fixes edge cases of the `pipenv graph` command.  [#5720](https://github.com/pypa/pipenv/issues/5720)\n\n# 2023.6.2 (2023-06-02)\n\n## Features & Improvements\n\n- Resolver performance: package sources following PEP 503 will leverage package hashes from the URL fragment, without downloading the package.  [#5701](https://github.com/pypa/pipenv/issues/5701)\n\n## Bug Fixes\n\n- Improve regex for python versions to handle hidden paths; handle relative paths to python better as well.  [#4588](https://github.com/pypa/pipenv/issues/4588)\n- Update `pythonfinder==2.0.4` with fix for \"RecursionError: maximum recursion depth exceeded\".  [#5709](https://github.com/pypa/pipenv/issues/5709)\n\n## Vendored Libraries\n\n- Drop old vendored toml library. Use stdlib tomllib or tomli instead.  [#5678](https://github.com/pypa/pipenv/issues/5678)\n- Drop vendored library cerberus. This isn't actually used by pipenv.  [#5699](https://github.com/pypa/pipenv/issues/5699)\n\n# 2023.5.19 (2023-05-19)\n\n## Bug Fixes\n\n- Consider `--index` argument in `update` and `upgrade` commands.  [#5692](https://github.com/pypa/pipenv/issues/5692)\n\n## Vendored Libraries\n\n- Upgrade `pythonfinder==2.0.0` which also brings in `pydantic==1.10.7`.  [#5677](https://github.com/pypa/pipenv/issues/5677)\n\n# 2023.4.29 (2023-04-29)\n\n## Vendored Libraries\n\n- Vendor in `pip==23.1.2` latest.  [#5671](https://github.com/pypa/pipenv/issues/5671)\n- Vendor in `requirementslib==2.3.0` which drops usage of `vistir`.  [#5672](https://github.com/pypa/pipenv/issues/5672)\n\n# 2023.4.20 (2023-04-20)\n\n## Features & Improvements\n\n- Checks environment variable `PIP_TRUSTED_HOSTS` when evaluating an\n  index specified at the command line when adding to `Pipfile`.\n\n  For example, this command line\n\n  ```\n  PIP_TRUSTED_HOSTS=internal.mycompany.com pipenv install pypkg --index=https://internal.mycompany.com/pypi/simple\n  ```\n\n  will add the following to the `Pipfile`:\n\n  ```\n  [[source]]\n  url = 'https://internal.mycompany.com/pypi/simple'\n  verify_ssl = false\n  name = 'Internalmycompany'\n\n  [packages]\n  pypkg = {version=\"*\", index=\"Internalmycompany\"}\n  ```\n\n  This allows users with private indexes to add them to `Pipfile`\n  initially from command line with correct permissions using environment\n  variable `PIP_TRUSTED_HOSTS`.  [#5572](https://github.com/pypa/pipenv/issues/5572)\n\n- Vendor in the updates, upgrades and fixes provided by `pip==23.1`.  [#5655](https://github.com/pypa/pipenv/issues/5655)\n\n- Replace flake8 and isort with [ruff](https://beta.ruff.rs).  [#ruff](https://github.com/pypa/pipenv/issues/ruff)\n\n## Bug Fixes\n\n- Fix regression with `--skip-lock` option with `install` command.  [#5653](https://github.com/pypa/pipenv/issues/5653)\n\n## Vendored Libraries\n\n- Vendor in latest `python-dotenv==1.0.0`  [#5656](https://github.com/pypa/pipenv/issues/5656)\n- Vendor in latest available dependencies:  `attrs==23.1.0` `click-didyoumean==0.3.0` `click==8.1.3` `markupsafe==2.1.2` `pipdeptree==2.7.0` `shellingham==1.5.0.post1` `tomlkit==0.11.7`  [#5657](https://github.com/pypa/pipenv/issues/5657)\n- Vendor in latest `requirementslib==2.2.5` which includes updates for pip 23.1  [#5659](https://github.com/pypa/pipenv/issues/5659)\n\n## Improved Documentation\n\n- Made documentation clear about tilde-equals operator for package versions.  [#5594](https://github.com/pypa/pipenv/issues/5594)\n\n# 2023.3.20 (2023-03-19)\n\nNo significant changes.\n\n# 2023.3.18 (2023-03-19)\n\n## Bug Fixes\n\n- Fix import error in virtualenv utility for creating new environments caused by `2023.3.18` release.  [#5636](https://github.com/pypa/pipenv/issues/5636)\n\n# 2023.3.18 (2023-03-18)\n\n## Features & Improvements\n\n- Provide a more powerful solution than `--keep-outdated` and `--selective-upgrade` which are deprecated for removal.\n  Introducing the `pipenv upgrade` command which takes the same package specifiers as `pipenv install` and\n  updates the `Pipfile` and `Pipfile.lock` with a valid lock resolution that only effects the specified packages and their dependencies.\n  Additionally, the `pipenv update` command has been updated to use the `pipenv upgrade` routine when packages are provided, which will install sync the new lock file as well.  [#5617](https://github.com/pypa/pipenv/issues/5617)\n\n## Vendored Libraries\n\n- Bump vistir to 0.8.0, requirementslib to 2.2.4.  [#5635](https://github.com/pypa/pipenv/issues/5635)\n\n# 2023.2.18 (2023-02-18)\n\n## Features & Improvements\n\n- `pipenv` now reads the system `pip.conf` or `pip.ini` file in order to determine pre-defined indexes to use for package resolution and installation.  [#5297](https://github.com/pypa/pipenv/issues/5297)\n- Behavior change for `pipenv check` now checks the default packages group of the lockfile.\n  Specifying `--categories` to override which categories to check against.\n  Pass `--use-installed` to get the prior behavior of checking the packages actually installed into the environment.  [#5600](https://github.com/pypa/pipenv/issues/5600)\n\n## Bug Fixes\n\n- Fix regression with detection of `CI` env variable being set to something other than a truthy value.  [#5554](https://github.com/pypa/pipenv/issues/5554)\n- Fix `--categories` argument inconsistency between requirements command and install/sync by allowing comma separated values or spaces.  [#5570](https://github.com/pypa/pipenv/issues/5570)\n- Use Nushell overlays when running `pipenv shell`.  [#5603](https://github.com/pypa/pipenv/issues/5603)\n\n## Vendored Libraries\n\n- Vendor in the `pip==23.0` release.  [#5586](https://github.com/pypa/pipenv/issues/5586)\n- Vendor in `pip==23.0.1` minor pt release.  Updates `pythonfinder==1.3.2`.  [#5614](https://github.com/pypa/pipenv/issues/5614)\n\n## Improved Documentation\n\n- Make some improvements to the contributing guide.  [#5611](https://github.com/pypa/pipenv/issues/5611)\n\n# 2023.2.4 (2023-02-04)\n\n## Bug Fixes\n\n- Fix overwriting of output in verbose mode  [#5530](https://github.com/pypa/pipenv/issues/5530)\n- Fix for resolution error when direct url includes an extras.  [#5536](https://github.com/pypa/pipenv/issues/5536)\n\n## Removals and Deprecations\n\n- Remove pytest-pypi package since it's not used anymore  [#5556](https://github.com/pypa/pipenv/issues/5556)\n- Remove deprecated --three flag from the CLI.  [#5576](https://github.com/pypa/pipenv/issues/5576)\n\n# 2022.12.19 (2022-12-19)\n\n## Bug Fixes\n\n- Fix for `requirementslib` hanging during install of remote wheels files.  [#5546](https://github.com/pypa/pipenv/issues/5546)\n\n# 2022.12.17 (2022-12-17)\n\n## Bug Fixes\n\n- virtualenv creation no longer uses `--creator=venv` by default; introduced two environment variables:\n  `PIPENV_VIRTUALENV_CREATOR` -- May be specified to instruct virtualenv which `--creator=` to use.\n  `PIPENV_VIRTUALENV_COPIES` -- When specified as truthy, instructs virtualenv to not use symlinks.  [#5477](https://github.com/pypa/pipenv/issues/5477)\n- Fix regression where `path` is not propagated to the `Pipfile.lock`.  [#5479](https://github.com/pypa/pipenv/issues/5479)\n- Solve issue where null markers were getting added to lock file when extras were provided.  [#5486](https://github.com/pypa/pipenv/issues/5486)\n- Fix: `update --outdated` raises NonExistentKey with outdated dev packages  [#5540](https://github.com/pypa/pipenv/issues/5540)\n\n## Vendored Libraries\n\n- Vendor in `pip==22.3.1` which is currently the latest version of `pip`.  [#5520](https://github.com/pypa/pipenv/issues/5520)\n- - Bump version of requirementslib to 2.2.1\n  - Bump version of vistir to 0.7.5\n  - Bump version of colorama to 0.4.6  [#5522](https://github.com/pypa/pipenv/issues/5522)\n- Bump plette version to 0.4.4  [#5539](https://github.com/pypa/pipenv/issues/5539)\n\n# 2022.11.30 (2022-11-30)\n\n## Bug Fixes\n\n- Fix regression: pipenv does not sync indexes to lockfile.  [#5508](https://github.com/pypa/pipenv/issues/5508)\n\n# 2022.11.25 (2022-11-24)\n\n## Bug Fixes\n\n- Solving issue where `pipenv check` command has been broken in the published wheel distribution.  [#5493](https://github.com/pypa/pipenv/issues/5493)\n\n# 2022.11.24 (2022-11-24)\n\n## Bug Fixes\n\n- Stop building universal wheels since Python 2 is no longer supported.  [#5496](https://github.com/pypa/pipenv/issues/5496)\n\n# 2022.11.23 (2022-11-23)\n\n## Features & Improvements\n\n- Find nushell activate scripts.  [#5470](https://github.com/pypa/pipenv/issues/5470)\n\n## Vendored Libraries\n\n- - Drop unused code from cerberus\n  - Drop unused module wheel  [#5467](https://github.com/pypa/pipenv/issues/5467)\n- - Replace yaspin spinner with rich spinner.\n  - Bump vistir version to 0.7.4  [#5468](https://github.com/pypa/pipenv/issues/5468)\n- Bump version of requirementslib to 2.2.0\n  Drop yaspin which is no longer used.\n  Bump vistir to version 0.7.4\n  Remove parse.\n  Remove termcolor.\n  Remove idna.  [#5481](https://github.com/pypa/pipenv/issues/5481)\n\n# 2022.11.11 (2022-11-11)\n\n## Bug Fixes\n\n- Fix regression of lock generation that caused the keep-outdated behavior to be default.  [#5456](https://github.com/pypa/pipenv/issues/5456)\n\n# 2022.11.5 (2022-11-05)\n\n## Bug Fixes\n\n- Rollback the change in version of `colorama` due to regressions in core functionality.  [#5459](https://github.com/pypa/pipenv/issues/5459)\n\n# 2022.11.4 (2022-11-04)\n\n## Features & Improvements\n\n- Allow pipenv settings to be explicitly disabled more easily by assigning to the environment variable a falsy value.  [#5451](https://github.com/pypa/pipenv/issues/5451)\n\n## Bug Fixes\n\n- Provide an install iteration per index when `install_search_all_sources` is `false` (default behavior).\n  This fixes regression where install phase was using unexpected index after updating `pip==22.3`  [#5444](https://github.com/pypa/pipenv/issues/5444)\n\n## Vendored Libraries\n\n- Drop tomli, which is not used anymore.\n  Bump attrs version see #5449.\n  Drop distlib, colorama and platformdirs - use the ones from pip.\\_vendor.  [#5450](https://github.com/pypa/pipenv/issues/5450)\n\n# 2022.10.25 (2022-10-25)\n\n## Features & Improvements\n\n- Add support to export requirements file for a specified set of categories.  [#5431](https://github.com/pypa/pipenv/issues/5431)\n\n## Vendored Libraries\n\n- Remove appdirs.py in favor of platformdirs.  [#5420](https://github.com/pypa/pipenv/issues/5420)\n\n## Removals and Deprecations\n\n- Remove usage of vistir.cmdparse in favor of pipenv.cmdparse  [#5419](https://github.com/pypa/pipenv/issues/5419)\n\n# 2022.10.12 (2022-10-12)\n\n## Improved Documentation\n\n- Update pipenv docs for with example for callabale package functions in Pipfile scripts  [#5396](https://github.com/pypa/pipenv/issues/5396)\n\n# 2022.10.11 (2022-10-11)\n\n## Bug Fixes\n\n- Revert decision to change the default isolation level because it caused problems with existing workflows; solution is to recommend users that have issues requiring pre-requisites to pass --extra-pip-args=\"--no-build-isolation\" in their install or sync commands.  [#5399](https://github.com/pypa/pipenv/issues/5399)\n\n# 2022.10.10 (2022-10-10)\n\n## Features & Improvements\n\n- Add ability for callable scripts in Pipfile under \\[scripts\\]. Callables can now be added like: `<pathed.module>:<func>` and can also take arguments. For example: `func = {call = \"package.module:func('arg1', 'arg2')\"}` then this can be activated in the shell with `pipenv run func`  [#5294](https://github.com/pypa/pipenv/issues/5294)\n\n## Bug Fixes\n\n- Fixes regression from `2022.10.9` where `Pipfile` with `pipenv` section began generating new hash,\n  and also fix regression where lock phase did not update the hash value.  [#5394](https://github.com/pypa/pipenv/issues/5394)\n\n# 2022.10.9 (2022-10-09)\n\n## Behavior Changes\n\n- New pipfiles show python_full_version under \\[requires\\] if specified. Previously creating a new pipenv project would only specify in the Pipfile the major and minor version, i.e. \"python_version = 3.7\". Now if you create a new project with a fully named python version it will record both in the Pipfile. So: \"python_version = 3.7\" and \"python_full_version = 3.7.2\"  [#5345](https://github.com/pypa/pipenv/issues/5345)\n\n## Relates to dev process changes\n\n- Silence majority of pytest.mark warnings by registering custom marks. Can view a list of custom marks by running `pipenv run pytest --markers`\n\n# 2022.10.4 (2022-10-04)\n\n## Bug Fixes\n\n- Use `--creator=venv` when creating virtual environments to avoid issue with sysconfig `posix_prefix` on some systems.  [#5075](https://github.com/pypa/pipenv/issues/5075)\n- Prefer to use the lockfile sources if available during the install phase.  [#5380](https://github.com/pypa/pipenv/issues/5380)\n\n## Vendored Libraries\n\n- Drop vendored six - we no longer depend on this library, as we migrated from pipfile to plette.  [#5187](https://github.com/pypa/pipenv/issues/5187)\n\n# 2022.9.24 (2022-09-24)\n\n## Bug Fixes\n\n- Update `requirementslib==2.0.3` to always evaluate the requirement markers fresh (without lru_cache) to fix marker determinism issue.  [#4660](https://github.com/pypa/pipenv/issues/4660)\n\n# 2022.9.21 (2022-09-21)\n\n## Bug Fixes\n\n- Fix regression to `install --skip-lock` with update to `plette`.  [#5368](https://github.com/pypa/pipenv/issues/5368)\n\n# 2022.9.20 (2022-09-20)\n\n## Behavior Changes\n\n- Remove usage of pipfile module in favour of Plette.\n  pipfile is not actively maintained anymore. Plette is actively maintained,\n  and has stricter checking of the Pipefile and Pipefile.lock. As a result,\n  Pipefile with unnamed package indices will fail to lock. If a Pipefile\n  was hand crafeted, and the source is anonymous an error will be thrown.\n  The solution is simple, add a name to your index, e.g, replace:\n\n  ```\n  [[source]]\n  url = \"https://pypi.acme.com/simple\"\n  verify_ssl = true\n  ```\n\n  With:\n\n  ```\n  [[source]]\n  url = \"https://pypi.acme.com/simple\"\n  verify_ssl = true\n  name = acmes_private_index  `#5339 <https://github.com/pypa/pipenv/issues/5339>`_\n  ```\n\n## Bug Fixes\n\n- Modernize `pipenv` path patch with `importlib.util` to eliminate import of `pkg_resources`  [#5349](https://github.com/pypa/pipenv/issues/5349)\n\n## Vendored Libraries\n\n- Remove iso8601 from vendored packages since it was not used.  [#5346](https://github.com/pypa/pipenv/issues/5346)\n\n# 2022.9.8 (2022-09-08)\n\n## Features & Improvements\n\n- It is now possible to supply additional arguments to `pip` install by supplying `--extra-pip-args=\"<arg1> <arg2>\"`\n  See the updated documentation `Supplying additional arguments to pip` for more details.  [#5283](https://github.com/pypa/pipenv/issues/5283)\n\n## Bug Fixes\n\n- Make editable detection better because not everyone specifies editable entry in the Pipfile for local editable installs.  [#4784](https://github.com/pypa/pipenv/issues/4784)\n- Add error handling for when the installed package setup.py does not contain valid markers.  [#5329](https://github.com/pypa/pipenv/issues/5329)\n- Load the dot env earlier so that `PIPENV_CUSTOM_VENV_NAME` is more useful across projects.  [#5334](https://github.com/pypa/pipenv/issues/5334)\n\n## Vendored Libraries\n\n- Bump version of shellingham to support nushell.  [#5336](https://github.com/pypa/pipenv/issues/5336)\n- Bump plette to version v0.3.0  [#5337](https://github.com/pypa/pipenv/issues/5337)\n- Bump version of pipdeptree  [#5343](https://github.com/pypa/pipenv/issues/5343)\n\n## Removals and Deprecations\n\n- Add deprecation warning to the --three flag. Pipenv now uses python3 by default.  [#5328](https://github.com/pypa/pipenv/issues/5328)\n\n## Relates to dev process changes\n\n- Convert the test runner to use `pypiserver` as a standalone process for all tests that referencce internal `pypi` artifacts.\n  General refactoring of some test cases to create more variety in packages selected--preferring lighter weight packages--in existing test cases.\n\n# 2022.9.4 (2022-09-04)\n\n## Bug Fixes\n\n- Fix the issue from `2022.9.2` where tarball URL packages were being skipped on batch_install.  [#5306](https://github.com/pypa/pipenv/issues/5306)\n\n# 2022.9.2 (2022-09-02)\n\n## Bug Fixes\n\n- Fix issue where unnamed constraints were provided but which are not allowed by `pip` resolver.  [#5273](https://github.com/pypa/pipenv/issues/5273)\n\n# 2022.8.31 (2022-08-31)\n\n## Features & Improvements\n\n- Performance optimization to `batch_install` results in a faster and less CPU intensive `pipenv sync` or `pipenv install`  experience.  [#5301](https://github.com/pypa/pipenv/issues/5301)\n\n## Bug Fixes\n\n- `pipenv` now uses a  `NamedTemporaryFile` for rsolver constraints and drops internal env var `PIPENV_PACKAGES`.  [#4925](https://github.com/pypa/pipenv/issues/4925)\n\n## Removals and Deprecations\n\n- Remove no longer used method `which_pip`.  [#5314](https://github.com/pypa/pipenv/issues/5314)\n- Drop progress bar file due to recent performance optimization to combine `batch_install` requirements in at most two invocations of `pip install`.\n  To see progress of install pass `--verbose` flag and `pip` progress will be output in realtime.  [#5315](https://github.com/pypa/pipenv/issues/5315)\n\n# 2022.8.30 (2022-08-30)\n\n## Bug Fixes\n\n- Fix an issue when using `pipenv install --system` on systems that having the `python` executable pointing to Python 2 and a Python 3 executable being `python3`.  [#5296](https://github.com/pypa/pipenv/issues/5296)\n- Sorting `constraints` before resolving, which fixes `pipenv lock` generates nondeterminism environment markers.  [#5299](https://github.com/pypa/pipenv/issues/5299)\n- Fix #5273, use our own method for checking if a package is a valid constraint.  [#5309](https://github.com/pypa/pipenv/issues/5309)\n\n## Vendored Libraries\n\n- Vendor in `requirementslib==2.0.1` which fixes issue with local install not marked editable, and vendor in `vistir==0.6.1` which drops python2 support.\n  Drops `orderedmultidict` from vendoring.  [#5308](https://github.com/pypa/pipenv/issues/5308)\n\n# 2022.8.24 (2022-08-24)\n\n## Bug Fixes\n\n- Remove eager and unnecessary importing of `setuptools` and `pkg_resources` to avoid conflict upgrading `setuptools`.\n  Roll back `sysconfig` patch of `pip` because it was problematic for some `--system` commands.  [#5228](https://github.com/pypa/pipenv/issues/5228)\n\n## Vendored Libraries\n\n- Vendor in `requirementslib==2.0.0` and drop `pip-shims` entirely.  [#5228](https://github.com/pypa/pipenv/issues/5228)\n- Vendor in `pythonfinder==1.3.1`  [#5292](https://github.com/pypa/pipenv/issues/5292)\n\n# 2022.8.19 (2022-08-19)\n\n## Bug Fixes\n\n- Fix issue where resolver is provided with `install_requires` constraints from `setup.py` that depend on editable dependencies and could not resolve them.  [#5271](https://github.com/pypa/pipenv/issues/5271)\n- Fix for `pipenv lock` fails for packages with extras as of `2022.8.13`.  [#5274](https://github.com/pypa/pipenv/issues/5274)\n- Revert the exclusion of `BAD_PACKAGES` from `batch_install` in order for `pipenv` to install specific versions of `setuptools`.\n  To prevent issue upgrading `setuptools` this patches `_USE_SYSCONFIG_DEFAULT` to use `sysconfig` for `3.7` and above whereas `pip` default behavior was `3.10` and above.  [#5275](https://github.com/pypa/pipenv/issues/5275)\n\n# 2022.8.17 (2022-08-17)\n\n## Bug Fixes\n\n- Fix \"The Python interpreter can't be found\" error when running `pipenv install --system` with a python3 but no python.  [#5261](https://github.com/pypa/pipenv/issues/5261)\n- Revise pip import patch to include only `pipenv` from site-packages and removed `--ignore-installed` argument from pip install in order to fix regressions with `--use-site-packages`.  [#5265](https://github.com/pypa/pipenv/issues/5265)\n\n# 2022.8.15 (2022-08-15)\n\n## Bug Fixes\n\n- `pip_install` method was using a different way of finding the python executable than other `pipenv` commands, which caused an issue with skipping package installation if it was already installed in site-packages.  [#5254](https://github.com/pypa/pipenv/issues/5254)\n\n# 2022.8.14 (2022-08-14)\n\n## Bug Fixes\n\n- Removed `packaging` library from `BAD_PACKAGES` constant to allow it to be installed, which fixes regression from `pipenv==2022.8.13`.  [#5247](https://github.com/pypa/pipenv/issues/5247)\n\n# 2022.8.13 (2022-08-13)\n\n## Bug Fixes\n\n- If environment variable `CI` or `TF_BUILD` is set but does not evaluate to `False` it is now treated as `True`.  [#5128](https://github.com/pypa/pipenv/issues/5128)\n- Fix auto-complete crashing on 'install' and 'uninstall' keywords  [#5214](https://github.com/pypa/pipenv/issues/5214)\n- Address remaining `pipenv` commands that were still referencing the user or system installed `pip` to use the vendored `pip` internal to `pipenv`.  [#5229](https://github.com/pypa/pipenv/issues/5229)\n- Use `packages` as constraints when locking `dev-packages` in Pipfile.\n  Use `packages` as constraints when installing new `dev-packages`.  [#5234](https://github.com/pypa/pipenv/issues/5234)\n\n## Vendored Libraries\n\n- Vendor in minor `pip` update `22.2.2`  [#5230](https://github.com/pypa/pipenv/issues/5230)\n\n## Improved Documentation\n\n- Add documentation for environment variables the configure pipenv.  [#5235](https://github.com/pypa/pipenv/issues/5235)\n\n## Removals and Deprecations\n\n- The deprecated way of generating requirements `install -r` or `lock -r` has been removed in favor of the `pipenv requirements` command.  [#5200](https://github.com/pypa/pipenv/issues/5200)\n\n# 2022.8.5 (2022-08-05)\n\n## Features & Improvements\n\n- support PIPENV_CUSTOM_VENV_NAME to be the venv name if specified, update relevant docs.  [#4974](https://github.com/pypa/pipenv/issues/4974)\n\n## Bug Fixes\n\n- Remove usages of `pip_shims` from the non vendored `pipenv` code, but retain initialization for `requirementslib` still has usages.  [#5204](https://github.com/pypa/pipenv/issues/5204)\n- Fix case sensitivity of color name `red` in exception when getting hashes from pypi in `_get_hashes_from_pypi`.  [#5206](https://github.com/pypa/pipenv/issues/5206)\n- Write output from `subprocess_run` directly to `stdout` instead of creating temporary file.\n  Remove deprecated `distutils.sysconfig`, use `sysconfig`.  [#5210](https://github.com/pypa/pipenv/issues/5210)\n\n## Vendored Libraries\n\n- - Rename patched `notpip` to `pip` in order to be clear that its a patched version of pip.\n  - Remove the part of \\_post_pip_import.patch that overrode the standalone pip to be the user installed pip, now we fully rely on our vendored and patched `pip`, even for all types of installs.\n  - Vendor in the next newest version of `pip==22.2`\n  - Modify patch for `pipdeptree` to not use `pip-shims`  [#5188](https://github.com/pypa/pipenv/issues/5188)\n  - Remove vendored `urllib3` in favor of using it from vendored version in `pip._vendor`  [#5215](https://github.com/pypa/pipenv/issues/5215)\n\n## Removals and Deprecations\n\n- Remove tests that have been for a while been marked skipped and are no longer relevant.  [#5165](https://github.com/pypa/pipenv/issues/5165)\n\n# 2022.7.24 (2022-07-24)\n\n## Bug Fixes\n\n- Re-enabled three installs tests again on the Windows CI as recent refactor work has fixed them.  [#5064](https://github.com/pypa/pipenv/issues/5064)\n- Support ANSI `NO_COLOR` environment variable and deprecate `PIPENV_COLORBLIND` variable, which will be removed after this release.  [#5158](https://github.com/pypa/pipenv/issues/5158)\n- Fixed edge case where a non-editable file, url or vcs would overwrite the value `no_deps` for all other requirements in the loop causing a retry condition.  [#5164](https://github.com/pypa/pipenv/issues/5164)\n- Vendor in latest `requirementslib` for fix to lock when using editable VCS module with specific `@` git reference.  [#5179](https://github.com/pypa/pipenv/issues/5179)\n\n## Vendored Libraries\n\n- Remove crayons and replace with click.secho and click.styles per <https://github.com/pypa/pipenv/issues/3741>  [#3741](https://github.com/pypa/pipenv/issues/3741)\n- Vendor in latest version of `pip==22.1.2` which upgrades `pipenv` from `pip==22.0.4`.\n  Vendor in latest version of `requirementslib==1.6.7` which includes a fix for tracebacks on encountering Annotated variables.\n  Vendor in latest version of `pip-shims==0.7.3` such that imports could be rewritten to utilize `packaging` from vendor'd `pip`.\n  Drop the `packaging` requirement from the `vendor` directory in `pipenv`.  [#5147](https://github.com/pypa/pipenv/issues/5147)\n- Remove unused vendored dependency `normailze-charset`.  [#5161](https://github.com/pypa/pipenv/issues/5161)\n- Remove obsolete package `funcsigs`.  [#5168](https://github.com/pypa/pipenv/issues/5168)\n- Bump vendored dependency `pyparsing==3.0.9`.  [#5170](https://github.com/pypa/pipenv/issues/5170)\n\n# 2022.7.4 (2022-07-04)\n\n## Behavior Changes\n\n- Adjust `pipenv requirements` to add markers and add an `--exclude-markers` option to allow the exclusion of markers.  [#5092](https://github.com/pypa/pipenv/issues/5092)\n\n## Bug Fixes\n\n- Stopped expanding environment variables when using `pipenv requirements`  [#5134](https://github.com/pypa/pipenv/issues/5134)\n\n## Vendored Libraries\n\n- Depend on `requests` and `certifi` from vendored `pip` and remove them as explicit vendor dependencies.  [#5000](https://github.com/pypa/pipenv/issues/5000)\n- Vendor in the latest version of `requirementslib==1.6.5` which includes bug fixes for beta python versions, projects with an at sign (@) in the path, and a `setuptools` deprecation warning.  [#5132](https://github.com/pypa/pipenv/issues/5132)\n\n## Relates to dev process changes\n\n- Switch from using type comments to type annotations.\n\n# 2022.5.3.dev0 (2022-06-07)\n\n## Bug Fixes\n\n- Adjust pipenv to work with the newly added `venv` install scheme in Python.\n  First check if `venv` is among the available install schemes, and use it if it is. Otherwise fall back to the `nt` or `posix_prefix` install schemes as before. This should produce no change for environments where the install schemes were not redefined.  [#5096](https://github.com/pypa/pipenv/issues/5096)\n\n# 2022.5.2 (2022-05-02)\n\n## Bug Fixes\n\n- Fixes issue of `pipenv lock -r` command printing to stdout instead of stderr.  [#5091](https://github.com/pypa/pipenv/issues/5091)\n\n# 2022.4.30 (2022-04-30)\n\n## Bug Fixes\n\n- Fixes issue of `requirements` command problem by modifying to print `-e` and path of the editable package.  [#5070](https://github.com/pypa/pipenv/issues/5070)\n- Revert specifier of `setuptools` requirement in `setup.py` back to what it was in order to fix `FileNotFoundError: [Errno 2]` issue report.  [#5075](https://github.com/pypa/pipenv/issues/5075)\n- Fixes issue of requirements command where git requirements cause the command to fail, solved by using existing convert_deps_to_pip function.  [#5076](https://github.com/pypa/pipenv/issues/5076)\n\n## Vendored Libraries\n\n- Vendor in `requirementslib==1.6.4` to Fix `SetuptoolsDeprecationWarning` `setuptools.config.read_configuration` became deprecated.  [#5081](https://github.com/pypa/pipenv/issues/5081)\n\n## Removals and Deprecations\n\n- Remove more usage of misc functions of vistir. Many of this function are available in the STL or in another dependency of pipenv.  [#5078](https://github.com/pypa/pipenv/issues/5078)\n\n# 2022.4.21 (2022-04-21)\n\n## Removals and Deprecations\n\n- Updated setup.py to remove support for python 3.6 from built `pipenv` packages' Metadata.  [#5065](https://github.com/pypa/pipenv/issues/5065)\n\n# 2022.4.20 (2022-04-20)\n\n## Features & Improvements\n\n- Added new Pipenv option `install_search_all_sources` that allows installation of packages from an\n  existing `Pipfile.lock` to search all defined indexes for the constrained package version and hash signatures.  [#5041](https://github.com/pypa/pipenv/issues/5041)\n\n## Bug Fixes\n\n- allow the user to disable the `no_input` flag, so the use of e.g Google Artifact Registry is possible.  [#4706](https://github.com/pypa/pipenv/issues/4706)\n- Fixes case where packages could fail to install and the exit code was successful.  [#5031](https://github.com/pypa/pipenv/issues/5031)\n\n## Vendored Libraries\n\n- Updated vendor version of `pip` from `21.2.2` to `22.0.4` which fixes a number of bugs including\n  several reports of pipenv locking for an infinite amount of time when using certain package constraints.\n  This also drops support for python 3.6 as it is EOL and support was removed in pip 22.x  [#4995](https://github.com/pypa/pipenv/issues/4995)\n\n## Removals and Deprecations\n\n- Removed the vendor dependency `more-itertools` as it was originally added for `zipp`, which since stopped using it.  [#5044](https://github.com/pypa/pipenv/issues/5044)\n- Removed all usages of `pipenv.vendor.vistir.compat.fs_str`, since this function was used for PY2-PY3 compatibility and is no longer needed.  [#5062](https://github.com/pypa/pipenv/issues/5062)\n\n## Relates to dev process changes\n\n- Added pytest-cov and basic configuration to the project for generating html testing coverage reports.\n- Make all CI jobs run only after the lint stage. Also added a makefile target for vendoring the packages.\n\n# 2022.4.8 (2022-04-08)\n\n## Features & Improvements\n\n- Implements a `pipenv requirements` command which generates a requirements.txt compatible output without locking.  [#4959](https://github.com/pypa/pipenv/issues/4959)\n- Internal to pipenv, the utils.py was split into a utils module with unused code removed.  [#4992](https://github.com/pypa/pipenv/issues/4992)\n\n## Bug Fixes\n\n- Pipenv will now ignore `.venv` in the project when `PIPENV_VENV_IN_PROJECT` variable is False.\n  Unset variable maintains the existing behavior of preferring to use the project's `.venv` should it exist.  [#2763](https://github.com/pypa/pipenv/issues/2763)\n- Fix an edge case of hash collection in index restricted packages whereby the hashes for some packages would\n  be missing from the `Pipfile.lock` following package index restrictions added in `pipenv==2022.3.23`.  [#5023](https://github.com/pypa/pipenv/issues/5023)\n\n## Improved Documentation\n\n- Pipenv CLI documentation generation has been fixed.  It had broke when `click` was vendored into the project in\n  `2021.11.9` because by default `sphinx-click` could no longer determine the CLI inherited from click.  [#4778](https://github.com/pypa/pipenv/issues/4778)\n- Improve documentation around extra indexes and index restricted packages.  [#5022](https://github.com/pypa/pipenv/issues/5022)\n\n## Removals and Deprecations\n\n- Removes the optional `install` argument `--extra-index-url` as it was not compatible with index restricted packages.\n  Using the `--index` argument is the correct way to specify a package should be pulled from the non-default index.  [#5022](https://github.com/pypa/pipenv/issues/5022)\n\n## Relates to dev process changes\n\n- Added code linting using pre-commit-hooks, black, flake8, isort, pygrep-hooks, news-fragments and check-manifest.\n  Very similar to pip's configuration; adds a towncrier new's type `process` for change to Development processes.\n\n# 2022.3.28 (2022-03-27)\n\n## Bug Fixes\n\n- Environment variables were not being loaded when the `--quiet` flag was set  [#5010](https://github.com/pypa/pipenv/issues/5010)\n- It would appear that `requirementslib` was not fully specifying the subdirectory to `build_pep517` and\n  and when a new version of `setuptools` was released, the test `test_lock_nested_vcs_direct_url`\n  broke indicating the Pipfile.lock no longer contained the extra dependencies that should have been resolved.\n  This regression affected `pipenv>=2021.11.9` but has been fixed by a patch to `requirementslib`.  [#5019](https://github.com/pypa/pipenv/issues/5019)\n\n## Vendored Libraries\n\n- Vendor in pip==21.2.4 (from 21.2.2) in order to bring in requested bug fix for python3.6.  Note: support for 3.6 will be dropped in a subsequent release.  [#5008](https://github.com/pypa/pipenv/issues/5008)\n\n# 2022.3.24 (2022-03-23)\n\n## Features & Improvements\n\n- It is now possible to silence the `Loading .env environment variables` message on `pipenv run`\n  with the `--quiet` flag or the `PIPENV_QUIET` environment variable.  [#4027](https://github.com/pypa/pipenv/issues/4027)\n\n## Bug Fixes\n\n- Fixes issue with new index safety restriction, whereby an unnamed extra sources index\n  caused and error to be thrown during install.  [#5002](https://github.com/pypa/pipenv/issues/5002)\n- The text `Loading .env environment variables...` has been switched back to stderr as to not\n  break requirements.txt generation.  Also it only prints now when a `.env` file is actually present.  [#5003](https://github.com/pypa/pipenv/issues/5003)\n\n# 2022.3.23 (2022-03-22)\n\n## Features & Improvements\n\n- Use environment variable `PIPENV_SKIP_LOCK` to control the behaviour of lock skipping.  [#4797](https://github.com/pypa/pipenv/issues/4797)\n- New CLI command `verify`, checks the Pipfile.lock is up-to-date  [#4893](https://github.com/pypa/pipenv/issues/4893)\n\n## Behavior Changes\n\n- Pattern expansion for arguments was disabled on Windows.  [#4935](https://github.com/pypa/pipenv/issues/4935)\n\n## Bug Fixes\n\n- Python versions on Windows can now be installed automatically through pyenv-win  [#4525](https://github.com/pypa/pipenv/issues/4525)\n- Patched our vendored Pip to fix: Pipenv Lock (Or Install) Does Not Respect Index Specified For A Package.  [#4637](https://github.com/pypa/pipenv/issues/4637)\n- If `PIP_TARGET` is set to environment variables,  Refer specified directory for calculate delta, instead default directory  [#4775](https://github.com/pypa/pipenv/issues/4775)\n- Remove remaining mention of python2 and --two flag from codebase.  [#4938](https://github.com/pypa/pipenv/issues/4938)\n- Use `CI` environment value, over mere existence of name  [#4944](https://github.com/pypa/pipenv/issues/4944)\n- Environment variables from dot env files are now properly expanded when included in scripts.  [#4975](https://github.com/pypa/pipenv/issues/4975)\n\n## Vendored Libraries\n\n- Updated vendor version of `pythonfinder` from `1.2.9` to `1.2.10` which fixes a bug with WSL\n  (Windows Subsystem for Linux) when a path can not be read and Permission Denied error is encountered.  [#4976](https://github.com/pypa/pipenv/issues/4976)\n\n## Removals and Deprecations\n\n- Removes long broken argument `--code` from `install` and `--unused` from `check`.\n  Check command no longer takes in arguments to ignore.\n  Removed the vendored dependencies:  `pipreqs` and `yarg`  [#4998](https://github.com/pypa/pipenv/issues/4998)\n\n# 2022.1.8 (2022-01-08)\n\n## Bug Fixes\n\n- Remove the extra parentheses around the venv prompt.  [#4877](https://github.com/pypa/pipenv/issues/4877)\n- Fix a bug of installation fails when extra index url is given.  [#4881](https://github.com/pypa/pipenv/issues/4881)\n- Fix regression where lockfiles would only include the hashes for releases for the platform generating the lockfile  [#4885](https://github.com/pypa/pipenv/issues/4885)\n- Fix the index parsing to reject illegal requirements.txt.  [#4899](https://github.com/pypa/pipenv/issues/4899)\n\n# 2021.11.23 (2021-11-23)\n\n## Bug Fixes\n\n- Update `charset-normalizer` from `2.0.3` to `2.0.7`, this fixes an import error on Python 3.6.  [#4865](https://github.com/pypa/pipenv/issues/4865)\n- Fix a bug of deleting a virtualenv that is not managed by Pipenv.  [#4867](https://github.com/pypa/pipenv/issues/4867)\n- Fix a bug that source is not added to `Pipfile` when index url is given with `pipenv install`.  [#4873](https://github.com/pypa/pipenv/issues/4873)\n\n# 2021.11.15 (2021-11-15)\n\n## Bug Fixes\n\n- Return an empty dict when `PIPENV_DONT_LOAD_ENV` is set.  [#4851](https://github.com/pypa/pipenv/issues/4851)\n- Don't use `sys.executable` when inside an activated venv.  [#4852](https://github.com/pypa/pipenv/issues/4852)\n\n## Vendored Libraries\n\n- Drop the vendored `jinja2` dependency as it is not needed any more.  [#4858](https://github.com/pypa/pipenv/issues/4858)\n- Update `click` from `8.0.1` to `8.0.3`, to fix a problem with bash completion.  [#4860](https://github.com/pypa/pipenv/issues/4860)\n- Drop unused vendor `chardet`.  [#4862](https://github.com/pypa/pipenv/issues/4862)\n\n## Improved Documentation\n\n- Fix the documentation to reflect the fact that special characters must be percent-encoded in the URL.  [#4856](https://github.com/pypa/pipenv/issues/4856)\n\n# 2021.11.9 (2021-11-09)\n\n## Features & Improvements\n\n- Replace `click-completion` with `click`'s own completion implementation.  [#4786](https://github.com/pypa/pipenv/issues/4786)\n\n## Bug Fixes\n\n- Fix a bug that `pipenv run` doesn't set environment variables correctly.  [#4831](https://github.com/pypa/pipenv/issues/4831)\n- Fix a bug that certifi can't be loaded within `notpip`'s vendor library. This makes several objects of `pip` fail to be imported.  [#4833](https://github.com/pypa/pipenv/issues/4833)\n- Fix a bug that `3.10.0` can be found be python finder.  [#4837](https://github.com/pypa/pipenv/issues/4837)\n\n## Vendored Libraries\n\n- Update `pythonfinder` from `1.2.8` to `1.2.9`.  [#4837](https://github.com/pypa/pipenv/issues/4837)\n\n# 2021.11.5.post0 (2021-11-05)\n\n## Bug Fixes\n\n- Fix a regression that `pipenv shell` fails to start a subshell.  [#4828](https://github.com/pypa/pipenv/issues/4828)\n- Fix a regression that `pip_shims` object isn't imported correctly.  [#4829](https://github.com/pypa/pipenv/issues/4829)\n\n# 2021.11.5 (2021-11-05)\n\n## Features & Improvements\n\n- Avoid sharing states but create project objects on demand. So that most integration test cases are able to switch to a in-process execution method.  [#4757](https://github.com/pypa/pipenv/issues/4757)\n- Shell-quote `pip` commands when logging.  [#4760](https://github.com/pypa/pipenv/issues/4760)\n\n## Bug Fixes\n\n- Ignore empty .venv in rood dir and create project name base virtual environment  [#4790](https://github.com/pypa/pipenv/issues/4790)\n\n## Vendored Libraries\n\n- Update vendored dependencies\n  \\- `attrs` from `20.3.0` to `21.2.0`\n  \\- `cerberus` from `1.3.2` to `1.3.4`\n  \\- `certifi` from `2020.11.8` to `2021.5.30`\n  \\- `chardet` from `3.0.4` to `4.0.0`\n  \\- `click` from `7.1.2` to `8.0.1`\n  \\- `distlib` from `0.3.1` to `0.3.2`\n  \\- `idna` from `2.10` to `3.2`\n  \\- `importlib-metadata` from `2.0.0` to `4.6.1`\n  \\- `importlib-resources` from `3.3.0` to `5.2.0`\n  \\- `jinja2` from `2.11.2` to `3.0.1`\n  \\- `markupsafe` from `1.1.1` to `2.0.1`\n  \\- `more-itertools` from `5.0.0` to `8.8.0`\n  \\- `packaging` from `20.8` to `21.0`\n  \\- `pep517` from `0.9.1` to `0.11.0`\n  \\- `pipdeptree` from `1.0.0` to `2.0.0`\n  \\- `ptyprocess` from `0.6.0` to `0.7.0`\n  \\- `python-dateutil` from `2.8.1` to `2.8.2`\n  \\- `python-dotenv` from `0.15.0` to `0.19.0`\n  \\- `pythonfinder` from `1.2.5` to `1.2.8`\n  \\- `requests` from `2.25.0` to `2.26.0`\n  \\- `shellingham` from `1.3.2` to `1.4.0`\n  \\- `six` from `1.15.0` to `1.16.0`\n  \\- `tomlkit` from `0.7.0` to `0.7.2`\n  \\- `urllib3` from `1.26.1` to `1.26.6`\n  \\- `zipp` from `1.2.0` to `3.5.0`\n\n  Add new vendored dependencies\n  \\- `charset-normalizer 2.0.3`\n  \\- `termcolor 1.1.0`\n  \\- `tomli 1.1.0`\n  \\- `wheel 0.36.2`  [#4747](https://github.com/pypa/pipenv/issues/4747)\n\n- Drop the dependencies for Python 2.7 compatibility purpose.  [#4751](https://github.com/pypa/pipenv/issues/4751)\n\n- Switch the dependency resolver from `pip-tools` to `pip`.\n\n  Update vendor libraries:\n  \\- Update `requirementslib` from `1.5.16` to `1.6.1`\n  \\- Update `pip-shims` from `0.5.6` to `0.6.0`\n  \\- New vendor `platformdirs 2.4.0`  [#4759](https://github.com/pypa/pipenv/issues/4759)\n\n## Improved Documentation\n\n- remove prefixes on install commands for easy copy/pasting  [#4792](https://github.com/pypa/pipenv/issues/4792)\n- Officially drop support for Python 2.7 and Python 3.5.  [#4261](https://github.com/pypa/pipenv/issues/4261)\n\n# 2021.5.29 (2021-05-29)\n\n## Bug Fixes\n\n- Fix a bug where passing --skip-lock when PIPFILE has no \\[SOURCE\\] section throws the error: \"tomlkit.exceptions.NonExistentKey: 'Key \"source\" does not exist.'\"  [#4141](https://github.com/pypa/pipenv/issues/4141)\n- Fix bug where environment wouldn't activate in paths containing & and \\$ symbols  [#4538](https://github.com/pypa/pipenv/issues/4538)\n- Fix a bug that `importlib-metadata` from the project's dependencies conflicts with that from `pipenv`'s.  [#4549](https://github.com/pypa/pipenv/issues/4549)\n- Fix a bug where `pep508checker.py` did not expect double-digit Python minor versions (e.g. \"3.10\").  [#4602](https://github.com/pypa/pipenv/issues/4602)\n- Fix bug where environment wouldn't activate in paths containing () and \\[\\] symbols  [#4615](https://github.com/pypa/pipenv/issues/4615)\n- Fix bug preventing use of pipenv lock --pre  [#4642](https://github.com/pypa/pipenv/issues/4642)\n\n## Vendored Libraries\n\n- Update `packaging` from `20.4` to `20.8`.  [#4591](https://github.com/pypa/pipenv/issues/4591)\n\n# 2020.11.15 (2020-11-15)\n\n## Features & Improvements\n\n- Support expanding environment variables in requirement URLs.  [#3516](https://github.com/pypa/pipenv/issues/3516)\n- Show warning message when a dependency is skipped in locking due to the mismatch of its markers.  [#4346](https://github.com/pypa/pipenv/issues/4346)\n\n## Bug Fixes\n\n- Fix a bug that executable scripts with leading backslash can't be executed via `pipenv run`.  [#4368](https://github.com/pypa/pipenv/issues/4368)\n- Fix a bug that VCS dependencies always satisfy even if the ref has changed.  [#4387](https://github.com/pypa/pipenv/issues/4387)\n- Restrict the acceptable hash type to SHA256 only.  [#4517](https://github.com/pypa/pipenv/issues/4517)\n- Fix the output of `pipenv scripts` under Windows platform.  [#4523](https://github.com/pypa/pipenv/issues/4523)\n- Fix a bug that the resolver takes wrong section to validate constraints.  [#4527](https://github.com/pypa/pipenv/issues/4527)\n\n## Vendored Libraries\n\n- Update vendored dependencies:\n  : - `colorama` from `0.4.3` to `0.4.4`\n    - `python-dotenv` from `0.10.3` to `0.15.0`\n    - `first` from `2.0.1` to `2.0.2`\n    - `iso8601` from `0.1.12` to `0.1.13`\n    - `parse` from `1.15.0` to `1.18.0`\n    - `pipdeptree` from `0.13.2` to `1.0.0`\n    - `requests` from `2.23.0` to `2.25.0`\n    - `idna` from `2.9` to `2.10`\n    - `urllib3` from `1.25.9` to `1.26.1`\n    - `certifi` from `2020.4.5.1` to `2020.11.8`\n    - `requirementslib` from `1.5.15` to `1.5.16`\n    - `attrs` from `19.3.0` to `20.3.0`\n    - `distlib` from `0.3.0` to `0.3.1`\n    - `packaging` from `20.3` to `20.4`\n    - `six` from `1.14.0` to `1.15.0`\n    - `semver` from `2.9.0` to `2.13.0`\n    - `toml` from `0.10.1` to `0.10.2`\n    - `cached-property` from `1.5.1` to `1.5.2`\n    - `yaspin` from `0.14.3` to `1.2.0`\n    - `resolvelib` from `0.3.0` to `0.5.2`\n    - `pep517` from `0.8.2` to `0.9.1`\n    - `zipp` from `0.6.0` to `1.2.0`\n    - `importlib-metadata` from `1.6.0` to `2.0.0`\n    - `importlib-resources` from `1.5.0` to `3.3.0`  [#4533](https://github.com/pypa/pipenv/issues/4533)\n\n## Improved Documentation\n\n- Fix suggested pyenv setup to avoid using shimmed interpreter  [#4534](https://github.com/pypa/pipenv/issues/4534)\n\n# 2020.11.4 (2020-11-04)\n\n## Features & Improvements\n\n- Add a new command `pipenv scripts` to display shortcuts from Pipfile.  [#3686](https://github.com/pypa/pipenv/issues/3686)\n- Retrieve package file hash from URL to accelerate the locking process.  [#3827](https://github.com/pypa/pipenv/issues/3827)\n- Add the missing `--system` option to `pipenv sync`.  [#4441](https://github.com/pypa/pipenv/issues/4441)\n- Add a new option pair `--header/--no-header` to `pipenv lock` command,\n  which adds a header to the generated requirements.txt  [#4443](https://github.com/pypa/pipenv/issues/4443)\n\n## Bug Fixes\n\n- Fix a bug that percent encoded characters will be unquoted incorrectly in the file URL.  [#4089](https://github.com/pypa/pipenv/issues/4089)\n- Fix a bug where setting PIPENV_PYTHON to file path breaks environment name  [#4225](https://github.com/pypa/pipenv/issues/4225)\n- Fix a bug that paths are not normalized before comparison.  [#4330](https://github.com/pypa/pipenv/issues/4330)\n- Handle Python major and minor versions correctly in Pipfile creation.  [#4379](https://github.com/pypa/pipenv/issues/4379)\n- Fix a bug that non-wheel file requirements can be resolved successfully.  [#4386](https://github.com/pypa/pipenv/issues/4386)\n- Fix a bug that `pexept.exceptions.TIMEOUT` is not caught correctly because of the wrong import path.  [#4424](https://github.com/pypa/pipenv/issues/4424)\n- Fix a bug that compound TOML table is not parsed correctly.  [#4433](https://github.com/pypa/pipenv/issues/4433)\n- Fix a bug that invalid Python paths from Windows registry break `pipenv install`.  [#4436](https://github.com/pypa/pipenv/issues/4436)\n- Fix a bug that function calls in `setup.py` can't be parsed rightly.  [#4446](https://github.com/pypa/pipenv/issues/4446)\n- Fix a bug that dist-info inside `venv` directory will be mistaken as the editable package's metadata.  [#4480](https://github.com/pypa/pipenv/issues/4480)\n- Make the order of hashes in resolution result stable.  [#4513](https://github.com/pypa/pipenv/issues/4513)\n\n## Vendored Libraries\n\n- Update `tomlkit` from `0.5.11` to `0.7.0`.  [#4433](https://github.com/pypa/pipenv/issues/4433)\n- Update `requirementslib` from `1.5.13` to `1.5.14`.  [#4480](https://github.com/pypa/pipenv/issues/4480)\n\n## Improved Documentation\n\n- Discourage homebrew installation in installation guides.  [#4013](https://github.com/pypa/pipenv/issues/4013)\n\n# 2020.8.13 (2020-08-13)\n\n## Bug Fixes\n\n- Fixed behaviour of `pipenv uninstall --all-dev`.\n  From now on it does not uninstall regular packages.  [#3722](https://github.com/pypa/pipenv/issues/3722)\n- Fix a bug that incorrect Python path will be used when `--system` flag is on.  [#4315](https://github.com/pypa/pipenv/issues/4315)\n- Fix falsely flagging a Homebrew installed Python as a virtual environment  [#4316](https://github.com/pypa/pipenv/issues/4316)\n- Fix a bug that `pipenv uninstall` throws an exception that does not exist.  [#4321](https://github.com/pypa/pipenv/issues/4321)\n- Fix a bug that Pipenv can't locate the correct file of special directives in `setup.cfg` of an editable package.  [#4335](https://github.com/pypa/pipenv/issues/4335)\n- Fix a bug that `setup.py` can't be parsed correctly when the assignment is type-annotated.  [#4342](https://github.com/pypa/pipenv/issues/4342)\n- Fix a bug that `pipenv graph` throws an exception that PipenvCmdError(cmd_string, c.out, c.err, return_code).  [#4388](https://github.com/pypa/pipenv/issues/4388)\n- Do not copy the whole directory tree of local file package.  [#4403](https://github.com/pypa/pipenv/issues/4403)\n- Correctly detect whether Pipenv in run under an activated virtualenv.  [#4412](https://github.com/pypa/pipenv/issues/4412)\n\n## Vendored Libraries\n\n- Update `requirementslib` to `1.5.12`.  [#4385](https://github.com/pypa/pipenv/issues/4385)\n- - Update `requirements` to `1.5.13`.\n  - Update `pip-shims` to `0.5.3`.  [#4421](https://github.com/pypa/pipenv/issues/4421)\n\n# 2020.6.2 (2020-06-02)\n\n## Features & Improvements\n\n- Pipenv will now detect existing `venv` and `virtualenv` based virtual environments more robustly.  [#4276](https://github.com/pypa/pipenv/issues/4276)\n\n## Bug Fixes\n\n- `+` signs in URL authentication fragments will no longer be incorrectly replaced with space ( \\`\\` \\`\\` ) characters.  [#4271](https://github.com/pypa/pipenv/issues/4271)\n- Fixed a regression which caused Pipenv to fail when running under `/`.  [#4273](https://github.com/pypa/pipenv/issues/4273)\n- `setup.py` files with `version` variables read from `os.environ` are now able to be parsed successfully.  [#4274](https://github.com/pypa/pipenv/issues/4274)\n- Fixed a bug which caused Pipenv to fail to install packages in a virtual environment if those packages were already present in the system global environment.  [#4276](https://github.com/pypa/pipenv/issues/4276)\n- Fix a bug that caused non-specific versions to be pinned in `Pipfile.lock`.  [#4278](https://github.com/pypa/pipenv/issues/4278)\n- Corrected a missing exception import and invalid function call invocations in `pipenv.cli.command`.  [#4286](https://github.com/pypa/pipenv/issues/4286)\n- Fixed an issue with resolving packages with names defined by function calls in `setup.py`.  [#4292](https://github.com/pypa/pipenv/issues/4292)\n- Fixed a regression with installing the current directory, or `.`, inside a `venv` based virtual environment.  [#4295](https://github.com/pypa/pipenv/issues/4295)\n- Fixed a bug with the discovery of python paths on Windows which could prevent installation of environments during `pipenv install`.  [#4296](https://github.com/pypa/pipenv/issues/4296)\n- Fixed an issue in the `requirementslib` AST parser which prevented parsing of `setup.py` files for dependency metadata.  [#4298](https://github.com/pypa/pipenv/issues/4298)\n- Fix a bug where Pipenv doesn't realize the session is interactive  [#4305](https://github.com/pypa/pipenv/issues/4305)\n\n## Vendored Libraries\n\n- Updated requirementslib to version `1.5.11`.  [#4292](https://github.com/pypa/pipenv/issues/4292)\n- Updated vendored dependencies:\n  : - **pythonfinder**: `1.2.2` => `1.2.4`\n    - **requirementslib**: `1.5.9` => `1.5.10`  [#4302](https://github.com/pypa/pipenv/issues/4302)\n\n# 2020.5.28 (2020-05-28)\n\n## Features & Improvements\n\n- `pipenv install` and `pipenv sync` will no longer attempt to install satisfied dependencies during installation.  [#3057](https://github.com/pypa/pipenv/issues/3057),\n  [#3506](https://github.com/pypa/pipenv/issues/3506)\n\n- Added support for resolution of direct-url dependencies in `setup.py` files to respect `PEP-508` style URL dependencies.  [#3148](https://github.com/pypa/pipenv/issues/3148)\n\n- Added full support for resolution of all dependency types including direct URLs, zip archives, tarballs, etc.\n\n  - Improved error handling and formatting.\n  - Introduced improved cross platform stream wrappers for better `stdout` and `stderr` consistency.  [#3298](https://github.com/pypa/pipenv/issues/3298)\n\n- For consistency with other commands and the `--dev` option\n  description, `pipenv lock --requirements --dev` now emits\n  both default and development dependencies.\n  The new `--dev-only` option requests the previous\n  behaviour (e.g. to generate a `dev-requirements.txt` file).  [#3316](https://github.com/pypa/pipenv/issues/3316)\n\n- Pipenv will now successfully recursively lock VCS sub-dependencies.  [#3328](https://github.com/pypa/pipenv/issues/3328)\n\n- Added support for `--verbose` output to `pipenv run`.  [#3348](https://github.com/pypa/pipenv/issues/3348)\n\n- Pipenv will now discover and resolve the intrinsic dependencies of **all** VCS dependencies, whether they are editable or not, to prevent resolution conflicts.  [#3368](https://github.com/pypa/pipenv/issues/3368)\n\n- Added a new environment variable, `PIPENV_RESOLVE_VCS`, to toggle dependency resolution off for non-editable VCS, file, and URL based dependencies.  [#3577](https://github.com/pypa/pipenv/issues/3577)\n\n- Added the ability for Windows users to enable emojis by setting `PIPENV_HIDE_EMOJIS=0`.  [#3595](https://github.com/pypa/pipenv/issues/3595)\n\n- Allow overriding PIPENV_INSTALL_TIMEOUT environment variable (in seconds).  [#3652](https://github.com/pypa/pipenv/issues/3652)\n\n- Allow overriding PIP_EXISTS_ACTION environment variable (value is passed to pip install).\n  Possible values here: <https://pip.pypa.io/en/stable/reference/pip/#exists-action-option>\n  Useful when you need to `PIP_EXISTS_ACTION=i` (ignore existing packages) - great for CI environments, where you need really fast setup.  [#3738](https://github.com/pypa/pipenv/issues/3738)\n\n- Pipenv will no longer forcibly override `PIP_NO_DEPS` on all vcs and file dependencies as resolution happens on these in a pre-lock step.  [#3763](https://github.com/pypa/pipenv/issues/3763)\n\n- Improved verbose logging output during `pipenv lock` will now stream output to the console while maintaining a spinner.  [#3810](https://github.com/pypa/pipenv/issues/3810)\n\n- Added support for automatic python installs via `asdf` and associated `PIPENV_DONT_USE_ASDF` environment variable.  [#4018](https://github.com/pypa/pipenv/issues/4018)\n\n- Pyenv/asdf can now be used whether or not they are available on PATH. Setting PYENV_ROOT/ASDF_DIR in a Pipenv's .env allows Pipenv to install an interpreter without any shell customizations, so long as pyenv/asdf is installed.  [#4245](https://github.com/pypa/pipenv/issues/4245)\n\n- Added `--key` command line parameter for including personal PyUp.io API tokens when running `pipenv check`.  [#4257](https://github.com/pypa/pipenv/issues/4257)\n\n## Behavior Changes\n\n- Make conservative checks of known exceptions when subprocess returns output, so user won't see the whole traceback - just the error.  [#2553](https://github.com/pypa/pipenv/issues/2553)\n- Do not touch Pipfile early and rely on it so that one can do `pipenv sync` without a Pipfile.  [#3386](https://github.com/pypa/pipenv/issues/3386)\n- Re-enable `--help` option for `pipenv run` command.  [#3844](https://github.com/pypa/pipenv/issues/3844)\n- Make sure `pipenv lock -r --pypi-mirror {MIRROR_URL}` will respect the pypi-mirror in requirements output.  [#4199](https://github.com/pypa/pipenv/issues/4199)\n\n## Bug Fixes\n\n- Raise `PipenvUsageError` when \\[\\[source\\]\\] does not contain url field.  [#2373](https://github.com/pypa/pipenv/issues/2373)\n\n- Fixed a bug which caused editable package resolution to sometimes fail with an unhelpful setuptools-related error message.  [#2722](https://github.com/pypa/pipenv/issues/2722)\n\n- Fixed an issue which caused errors due to reliance on the system utilities `which` and `where` which may not always exist on some systems.\n  \\- Fixed a bug which caused periodic failures in python discovery when executables named `python` were not present on the target `$PATH`.  [#2783](https://github.com/pypa/pipenv/issues/2783)\n\n- Dependency resolution now writes hashes for local and remote files to the lockfile.  [#3053](https://github.com/pypa/pipenv/issues/3053)\n\n- Fixed a bug which prevented `pipenv graph` from correctly showing all dependencies when running from within `pipenv shell`.  [#3071](https://github.com/pypa/pipenv/issues/3071)\n\n- Fixed resolution of direct-url dependencies in `setup.py` files to respect `PEP-508` style URL dependencies.  [#3148](https://github.com/pypa/pipenv/issues/3148)\n\n- Fixed a bug which caused failures in warning reporting when running pipenv inside a virtualenv under some circumstances.\n\n  - Fixed a bug with package discovery when running `pipenv clean`.  [#3298](https://github.com/pypa/pipenv/issues/3298)\n\n- Quote command arguments with carets (`^`) on Windows to work around unintended shell escapes.  [#3307](https://github.com/pypa/pipenv/issues/3307)\n\n- Handle alternate names for UTF-8 encoding.  [#3313](https://github.com/pypa/pipenv/issues/3313)\n\n- Abort pipenv before adding the non-exist package to Pipfile.  [#3318](https://github.com/pypa/pipenv/issues/3318)\n\n- Don't normalize the package name user passes in.  [#3324](https://github.com/pypa/pipenv/issues/3324)\n\n- Fix a bug where custom virtualenv can not be activated with pipenv shell  [#3339](https://github.com/pypa/pipenv/issues/3339)\n\n- Fix a bug that `--site-packages` flag is not recognized.  [#3351](https://github.com/pypa/pipenv/issues/3351)\n\n- Fix a bug where pipenv --clear is not working  [#3353](https://github.com/pypa/pipenv/issues/3353)\n\n- Fix unhashable type error during `$ pipenv install --selective-upgrade`  [#3384](https://github.com/pypa/pipenv/issues/3384)\n\n- Dependencies with direct `PEP508` compliant VCS URLs specified in their `install_requires` will now be successfully locked during the resolution process.  [#3396](https://github.com/pypa/pipenv/issues/3396)\n\n- Fixed a keyerror which could occur when locking VCS dependencies in some cases.  [#3404](https://github.com/pypa/pipenv/issues/3404)\n\n- Fixed a bug that `ValidationError` is thrown when some fields are missing in source section.  [#3427](https://github.com/pypa/pipenv/issues/3427)\n\n- Updated the index names in lock file when source name in Pipfile is changed.  [#3449](https://github.com/pypa/pipenv/issues/3449)\n\n- Fixed an issue which caused `pipenv install --help` to show duplicate entries for `--pre`.  [#3479](https://github.com/pypa/pipenv/issues/3479)\n\n- Fix bug causing `[SSL: CERTIFICATE_VERIFY_FAILED]` when Pipfile `[[source]]` has verify_ssl=false and url with custom port.  [#3502](https://github.com/pypa/pipenv/issues/3502)\n\n- Fix `sync --sequential` ignoring `pip install` errors and logs.  [#3537](https://github.com/pypa/pipenv/issues/3537)\n\n- Fix the issue that lock file can't be created when `PIPENV_PIPFILE` is not under working directory.  [#3584](https://github.com/pypa/pipenv/issues/3584)\n\n- Pipenv will no longer inadvertently set `editable=True` on all vcs dependencies.  [#3647](https://github.com/pypa/pipenv/issues/3647)\n\n- The `--keep-outdated` argument to `pipenv install` and `pipenv lock` will now drop specifier constraints when encountering editable dependencies.\n  \\- In addition, `--keep-outdated` will retain specifiers that would otherwise be dropped from any entries that have not been updated.  [#3656](https://github.com/pypa/pipenv/issues/3656)\n\n- Fixed a bug which sometimes caused pipenv to fail to respect the `--site-packages` flag when passed with `pipenv install`.  [#3718](https://github.com/pypa/pipenv/issues/3718)\n\n- Normalize the package names to lowercase when comparing used and in-Pipfile packages.  [#3745](https://github.com/pypa/pipenv/issues/3745)\n\n- `pipenv update --outdated` will now correctly handle comparisons between pre/post-releases and normal releases.  [#3766](https://github.com/pypa/pipenv/issues/3766)\n\n- Fixed a `KeyError` which could occur when pinning outdated VCS dependencies via `pipenv lock --keep-outdated`.  [#3768](https://github.com/pypa/pipenv/issues/3768)\n\n- Resolved an issue which caused resolution to fail when encountering poorly formatted `python_version` markers in `setup.py` and `setup.cfg` files.  [#3786](https://github.com/pypa/pipenv/issues/3786)\n\n- Fix a bug that installation errors are displayed as a list.  [#3794](https://github.com/pypa/pipenv/issues/3794)\n\n- Update `pythonfinder` to fix a problem that `python.exe` will be mistakenly chosen for\n  virtualenv creation under WSL.  [#3807](https://github.com/pypa/pipenv/issues/3807)\n\n- Fixed several bugs which could prevent editable VCS dependencies from being installed into target environments, even when reporting successful installation.  [#3809](https://github.com/pypa/pipenv/issues/3809)\n\n- `pipenv check --system` should find the correct Python interpreter when `python` does not exist on the system.  [#3819](https://github.com/pypa/pipenv/issues/3819)\n\n- Resolve the symlinks when the path is absolute.  [#3842](https://github.com/pypa/pipenv/issues/3842)\n\n- Pass `--pre` and `--clear` options to `pipenv update --outdated`.  [#3879](https://github.com/pypa/pipenv/issues/3879)\n\n- Fixed a bug which prevented resolution of direct URL dependencies which have PEP508 style direct url VCS sub-dependencies with subdirectories.  [#3976](https://github.com/pypa/pipenv/issues/3976)\n\n- Honor PIPENV_SPINNER environment variable  [#4045](https://github.com/pypa/pipenv/issues/4045)\n\n- Fixed an issue with `pipenv check` failing due to an invalid API key from `pyup.io`.  [#4188](https://github.com/pypa/pipenv/issues/4188)\n\n- Fixed a bug which caused versions from VCS dependencies to be included in `Pipfile.lock` inadvertently.  [#4217](https://github.com/pypa/pipenv/issues/4217)\n\n- Fixed a bug which caused pipenv to search non-existent virtual environments for `pip` when installing using `--system`.  [#4220](https://github.com/pypa/pipenv/issues/4220)\n\n- `Requires-Python` values specifying constraint versions of python starting from `1.x` will now be parsed successfully.  [#4226](https://github.com/pypa/pipenv/issues/4226)\n\n- Fix a bug of `pipenv update --outdated` that can't print output correctly.  [#4229](https://github.com/pypa/pipenv/issues/4229)\n\n- Fixed a bug which caused pipenv to prefer source distributions over wheels from `PyPI` during the dependency resolution phase.\n  Fixed an issue which prevented proper build isolation using `pep517` based builders during dependency resolution.  [#4231](https://github.com/pypa/pipenv/issues/4231)\n\n- Don't fallback to system Python when no matching Python version is found.  [#4232](https://github.com/pypa/pipenv/issues/4232)\n\n## Vendored Libraries\n\n- Updated vendored dependencies:\n\n  > - **attrs**: `18.2.0` => `19.1.0`\n  > - **certifi**: `2018.10.15` => `2019.3.9`\n  > - **cached_property**: `1.4.3` => `1.5.1`\n  > - **cerberus**: `1.2.0` => `1.3.1`\n  > - **click-completion**: `0.5.0` => `0.5.1`\n  > - **colorama**: `0.3.9` => `0.4.1`\n  > - **distlib**: `0.2.8` => `0.2.9`\n  > - **idna**: `2.7` => `2.8`\n  > - **jinja2**: `2.10.0` => `2.10.1`\n  > - **markupsafe**: `1.0` => `1.1.1`\n  > - **orderedmultidict**: `(new)` => `1.0`\n  > - **packaging**: `18.0` => `19.0`\n  > - **parse**: `1.9.0` => `1.12.0`\n  > - **pathlib2**: `2.3.2` => `2.3.3`\n  > - **pep517**: `(new)` => `0.5.0`\n  > - **pexpect**: `4.6.0` => `4.7.0`\n  > - **pipdeptree**: `0.13.0` => `0.13.2`\n  > - **pyparsing**: `2.2.2` => `2.3.1`\n  > - **python-dotenv**: `0.9.1` => `0.10.2`\n  > - **pythonfinder**: `1.1.10` => `1.2.1`\n  > - **pytoml**: `(new)` => `0.1.20`\n  > - **requests**: `2.20.1` => `2.21.0`\n  > - **requirementslib**: `1.3.3` => `1.5.0`\n  > - **scandir**: `1.9.0` => `1.10.0`\n  > - **shellingham**: `1.2.7` => `1.3.1`\n  > - **six**: `1.11.0` => `1.12.0`\n  > - **tomlkit**: `0.5.2` => `0.5.3`\n  > - **urllib3**: `1.24` => `1.25.2`\n  > - **vistir**: `0.3.0` => `0.4.1`\n  > - **yaspin**: `0.14.0` => `0.14.3`\n\n  - Removed vendored dependency **cursor**.  [#3298](https://github.com/pypa/pipenv/issues/3298)\n\n- Updated `pip_shims` to support `--outdated` with new pip versions.  [#3766](https://github.com/pypa/pipenv/issues/3766)\n\n- Update vendored dependencies and invocations\n\n  - Update vendored and patched dependencies\n  - Update patches on `piptools`, `pip`, `pip-shims`, `tomlkit`\n  - Fix invocations of dependencies\n  - Fix custom `InstallCommand` instantiation\n  - Update `PackageFinder` usage\n  - Fix `Bool` stringify attempts from `tomlkit`\n\n  Updated vendored dependencies:\n  : - **attrs**: `` `18.2.0 `` => `` `19.1.0 ``\n    - **certifi**: `` `2018.10.15 `` => `` `2019.3.9 ``\n    - **cached_property**: `` `1.4.3 `` => `` `1.5.1 ``\n    - **cerberus**: `` `1.2.0 `` => `` `1.3.1 ``\n    - **click**: `` `7.0.0 `` => `` `7.1.1 ``\n    - **click-completion**: `` `0.5.0 `` => `` `0.5.1 ``\n    - **colorama**: `` `0.3.9 `` => `` `0.4.3 ``\n    - **contextlib2**: `` `(new) `` => `` `0.6.0.post1 ``\n    - **distlib**: `` `0.2.8 `` => `` `0.2.9 ``\n    - **funcsigs**: `` `(new) `` => `` `1.0.2 ``\n    - **importlib_metadata** `` `1.3.0 `` => `` `1.5.1 ``\n    - **importlib-resources**:  `` `(new) `` => `` `1.4.0 ``\n    - **idna**: `` `2.7 `` => `` `2.9 ``\n    - **jinja2**: `` `2.10.0 `` => `` `2.11.1 ``\n    - **markupsafe**: `` `1.0 `` => `` `1.1.1 ``\n    - **more-itertools**: `` `(new) `` => `` `5.0.0 ``\n    - **orderedmultidict**: `` `(new) `` => `` `1.0 ``\n    - **packaging**: `` `18.0 `` => `` `19.0 ``\n    - **parse**: `` `1.9.0 `` => `` `1.15.0 ``\n    - **pathlib2**: `` `2.3.2 `` => `` `2.3.3 ``\n    - **pep517**: `` `(new) `` => `` `0.5.0 ``\n    - **pexpect**: `` `4.6.0 `` => `` `4.8.0 ``\n    - **pip-shims**: `` `0.2.0 `` => `` `0.5.1 ``\n    - **pipdeptree**: `` `0.13.0 `` => `` `0.13.2 ``\n    - **pyparsing**: `` `2.2.2 `` => `` `2.4.6 ``\n    - **python-dotenv**: `` `0.9.1 `` => `` `0.10.2 ``\n    - **pythonfinder**: `` `1.1.10 `` => `` `1.2.2 ``\n    - **pytoml**: `` `(new) `` => `` `0.1.20 ``\n    - **requests**: `` `2.20.1 `` => `` `2.23.0 ``\n    - **requirementslib**: `` `1.3.3 `` => `` `1.5.4 ``\n    - **scandir**: `` `1.9.0 `` => `` `1.10.0 ``\n    - **shellingham**: `` `1.2.7 `` => `` `1.3.2 ``\n    - **six**: `` `1.11.0 `` => `` `1.14.0 ``\n    - **tomlkit**: `` `0.5.2 `` => `` `0.5.11 ``\n    - **urllib3**: `` `1.24 `` => `` `1.25.8 ``\n    - **vistir**: `` `0.3.0 `` => `` `0.5.0 ``\n    - **yaspin**: `` `0.14.0 `` => `` `0.14.3 ``\n    - **zipp**: `` `0.6.0 ``\n\n  - Removed vendored dependency **cursor**.  [#4169](https://github.com/pypa/pipenv/issues/4169)\n\n- Add and update vendored dependencies to accommodate `safety` vendoring:\n  \\- **safety** `(none)` => `1.8.7`\n  \\- **dparse** `(none)` => `0.5.0`\n  \\- **pyyaml** `(none)` => `5.3.1`\n  \\- **urllib3** `1.25.8` => `1.25.9`\n  \\- **certifi** `2019.11.28` => `2020.4.5.1`\n  \\- **pyparsing** `2.4.6` => `2.4.7`\n  \\- **resolvelib** `0.2.2` => `0.3.0`\n  \\- **importlib-metadata** `1.5.1` => `1.6.0`\n  \\- **pip-shims** `0.5.1` => `0.5.2`\n  \\- **requirementslib** `1.5.5` => `1.5.6`  [#4188](https://github.com/pypa/pipenv/issues/4188)\n\n- Updated vendored `pip` => `20.0.2` and `pip-tools` => `5.0.0`.  [#4215](https://github.com/pypa/pipenv/issues/4215)\n\n- Updated vendored dependencies to latest versions for security and bug fixes:\n\n  - **requirementslib** `1.5.8` => `1.5.9`\n  - **vistir** `0.5.0` => `0.5.1`\n  - **jinja2** `2.11.1` => `2.11.2`\n  - **click** `7.1.1` => `7.1.2`\n  - **dateutil** `(none)` => `2.8.1`\n  - **backports.functools_lru_cache** `1.5.0` => `1.6.1`\n  - **enum34** `1.1.6` => `1.1.10`\n  - **toml** `0.10.0` => `0.10.1`\n  - **importlib_resources** `1.4.0` => `1.5.0`  [#4226](https://github.com/pypa/pipenv/issues/4226)\n\n- Changed attrs import path in vendored dependencies to always import from `pipenv.vendor`.  [#4267](https://github.com/pypa/pipenv/issues/4267)\n\n## Improved Documentation\n\n- Added documentation about variable expansion in `Pipfile` entries.  [#2317](https://github.com/pypa/pipenv/issues/2317)\n- Consolidate all contributing docs in the rst file  [#3120](https://github.com/pypa/pipenv/issues/3120)\n- Update the out-dated manual page.  [#3246](https://github.com/pypa/pipenv/issues/3246)\n- Move CLI docs to its own page.  [#3346](https://github.com/pypa/pipenv/issues/3346)\n- Replace (non-existent) video on docs index.rst with equivalent gif.  [#3499](https://github.com/pypa/pipenv/issues/3499)\n- Clarify wording in Basic Usage example on using double quotes to escape shell redirection  [#3522](https://github.com/pypa/pipenv/issues/3522)\n- Ensure docs show navigation on small-screen devices  [#3527](https://github.com/pypa/pipenv/issues/3527)\n- Added a link to the TOML Spec under General Recommendations & Version Control to clarify how Pipfiles should be written.  [#3629](https://github.com/pypa/pipenv/issues/3629)\n- Updated the documentation with the new `pytest` entrypoint.  [#3759](https://github.com/pypa/pipenv/issues/3759)\n- Fix link to GIF in README.md demonstrating Pipenv's usage, and add descriptive alt text.  [#3911](https://github.com/pypa/pipenv/issues/3911)\n- Added a line describing potential issues in fancy extension.  [#3912](https://github.com/pypa/pipenv/issues/3912)\n- Documental description of how Pipfile works and association with Pipenv.  [#3913](https://github.com/pypa/pipenv/issues/3913)\n- Clarify the proper value of `python_version` and `python_full_version`.  [#3914](https://github.com/pypa/pipenv/issues/3914)\n- Write description for --deploy extension and few extensions differences.  [#3915](https://github.com/pypa/pipenv/issues/3915)\n- More documentation for `.env` files  [#4100](https://github.com/pypa/pipenv/issues/4100)\n- Updated documentation to point to working links.  [#4137](https://github.com/pypa/pipenv/issues/4137)\n- Replace docs.pipenv.org with pipenv.pypa.io  [#4167](https://github.com/pypa/pipenv/issues/4167)\n- Added functionality to check spelling in documentation and cleaned up existing typographical issues.  [#4209](https://github.com/pypa/pipenv/issues/4209)\n\n# 2018.11.26 (2018-11-26)\n\n## Bug Fixes\n\n- Environment variables are expanded correctly before running scripts on POSIX.  [#3178](https://github.com/pypa/pipenv/issues/3178)\n- Pipenv will no longer disable user-mode installation when the `--system` flag is passed in.  [#3222](https://github.com/pypa/pipenv/issues/3222)\n- Fixed an issue with attempting to render unicode output in non-unicode locales.  [#3223](https://github.com/pypa/pipenv/issues/3223)\n- Fixed a bug which could cause failures to occur when parsing python entries from global pyenv version files.  [#3224](https://github.com/pypa/pipenv/issues/3224)\n- Fixed an issue which prevented the parsing of named extras sections from certain `setup.py` files.  [#3230](https://github.com/pypa/pipenv/issues/3230)\n- Correctly detect the virtualenv location inside an activated virtualenv.  [#3231](https://github.com/pypa/pipenv/issues/3231)\n- Fixed a bug which caused spinner frames to be written to standard output during locking operations which could cause redirection pipes to fail.  [#3239](https://github.com/pypa/pipenv/issues/3239)\n- Fixed a bug that editable packages can't be uninstalled correctly.  [#3240](https://github.com/pypa/pipenv/issues/3240)\n- Corrected an issue with installation timeouts which caused dependency resolution to fail for longer duration resolution steps.  [#3244](https://github.com/pypa/pipenv/issues/3244)\n- Adding normal pep 508 compatible markers is now fully functional when using VCS dependencies.  [#3249](https://github.com/pypa/pipenv/issues/3249)\n- Updated `requirementslib` and `pythonfinder` for multiple bug fixes.  [#3254](https://github.com/pypa/pipenv/issues/3254)\n- Pipenv will now ignore hashes when installing with `--skip-lock`.  [#3255](https://github.com/pypa/pipenv/issues/3255)\n- Fixed an issue where pipenv could crash when multiple pipenv processes attempted to create the same directory.  [#3257](https://github.com/pypa/pipenv/issues/3257)\n- Fixed an issue which sometimes prevented successful creation of a project Pipfile.  [#3260](https://github.com/pypa/pipenv/issues/3260)\n- `pipenv install` will now unset the `PYTHONHOME` environment variable when not combined with `--system`.  [#3261](https://github.com/pypa/pipenv/issues/3261)\n- Pipenv will ensure that warnings do not interfere with the resolution process by suppressing warnings' usage of standard output and writing to standard error instead.  [#3273](https://github.com/pypa/pipenv/issues/3273)\n- Fixed an issue which prevented variables from the environment, such as `PIPENV_DEV` or `PIPENV_SYSTEM`, from being parsed and implemented correctly.  [#3278](https://github.com/pypa/pipenv/issues/3278)\n- Clear pythonfinder cache after Python install.  [#3287](https://github.com/pypa/pipenv/issues/3287)\n- Fixed a race condition in hash resolution for dependencies for certain dependencies with missing cache entries or fresh Pipenv installs.  [#3289](https://github.com/pypa/pipenv/issues/3289)\n- Pipenv will now respect top-level pins over VCS dependency locks.  [#3296](https://github.com/pypa/pipenv/issues/3296)\n\n## Vendored Libraries\n\n- Update vendored dependencies to resolve resolution output parsing and python finding:\n  : - `pythonfinder 1.1.9 -> 1.1.10`\n    - `requirementslib 1.3.1 -> 1.3.3`\n    - `vistir 0.2.3 -> 0.2.5`  [#3280](https://github.com/pypa/pipenv/issues/3280)\n\n# 2018.11.14 (2018-11-14)\n\n## Features & Improvements\n\n- Improved exceptions and error handling on failures.  [#1977](https://github.com/pypa/pipenv/issues/1977)\n- Added persistent settings for all CLI flags via `PIPENV_{FLAG_NAME}` environment variables by enabling `auto_envvar_prefix=PIPENV` in click (implements PEEP-0002).  [#2200](https://github.com/pypa/pipenv/issues/2200)\n- Added improved messaging about available but skipped updates due to dependency conflicts when running `pipenv update --outdated`.  [#2411](https://github.com/pypa/pipenv/issues/2411)\n- Added environment variable `PIPENV_PYUP_API_KEY` to add ability\n  to override the bundled PyUP.io API key.  [#2825](https://github.com/pypa/pipenv/issues/2825)\n- Added additional output to `pipenv update --outdated` to indicate that the operation succeeded and all packages were already up to date.  [#2828](https://github.com/pypa/pipenv/issues/2828)\n- Updated `crayons` patch to enable colors on native powershell but swap native blue for magenta.  [#3020](https://github.com/pypa/pipenv/issues/3020)\n- Added support for `--bare` to `pipenv clean`, and fixed `pipenv sync --bare` to actually reduce output.  [#3041](https://github.com/pypa/pipenv/issues/3041)\n- Added windows-compatible spinner via upgraded `vistir` dependency.  [#3089](https://github.com/pypa/pipenv/issues/3089)\n- - Added support for python installations managed by `asdf`.  [#3096](https://github.com/pypa/pipenv/issues/3096)\n- Improved runtime performance of no-op commands such as `pipenv --venv` by around 2/3.  [#3158](https://github.com/pypa/pipenv/issues/3158)\n- Do not show error but success for running `pipenv uninstall --all` in a fresh virtual environment.  [#3170](https://github.com/pypa/pipenv/issues/3170)\n- Improved asynchronous installation and error handling via queued subprocess parallelization.  [#3217](https://github.com/pypa/pipenv/issues/3217)\n\n## Bug Fixes\n\n- Remote non-PyPI artifacts and local wheels and artifacts will now include their own hashes rather than including hashes from `PyPI`.  [#2394](https://github.com/pypa/pipenv/issues/2394)\n- Non-ascii characters will now be handled correctly when parsed by pipenv's `ToML` parsers.  [#2737](https://github.com/pypa/pipenv/issues/2737)\n- Updated `pipenv uninstall` to respect the `--skip-lock` argument.  [#2848](https://github.com/pypa/pipenv/issues/2848)\n- Fixed a bug which caused uninstallation to sometimes fail to successfully remove packages from `Pipfiles` with comments on preceding or following lines.  [#2885](https://github.com/pypa/pipenv/issues/2885),\n  [#3099](https://github.com/pypa/pipenv/issues/3099)\n- Pipenv will no longer fail when encountering python versions on Windows that have been uninstalled.  [#2983](https://github.com/pypa/pipenv/issues/2983)\n- Fixed unnecessary extras are added when translating markers  [#3026](https://github.com/pypa/pipenv/issues/3026)\n- Fixed a virtualenv creation issue which could cause new virtualenvs to inadvertently attempt to read and write to global site packages.  [#3047](https://github.com/pypa/pipenv/issues/3047)\n- Fixed an issue with virtualenv path derivation which could cause errors, particularly for users on WSL bash.  [#3055](https://github.com/pypa/pipenv/issues/3055)\n- Fixed a bug which caused `Unexpected EOF` errors to be thrown when `pip` was waiting for input from users who had put login credentials in environment variables.  [#3088](https://github.com/pypa/pipenv/issues/3088)\n- Fixed a bug in `requirementslib` which prevented successful installation from mercurial repositories.  [#3090](https://github.com/pypa/pipenv/issues/3090)\n- Fixed random resource warnings when using pyenv or any other subprocess calls.  [#3094](https://github.com/pypa/pipenv/issues/3094)\n- - Fixed a bug which sometimes prevented cloning and parsing `mercurial` requirements.  [#3096](https://github.com/pypa/pipenv/issues/3096)\n- Fixed an issue in `delegator.py` related to subprocess calls when using `PopenSpawn` to stream output, which sometimes threw unexpected `EOF` errors.  [#3102](https://github.com/pypa/pipenv/issues/3102),\n  [#3114](https://github.com/pypa/pipenv/issues/3114),\n  [#3117](https://github.com/pypa/pipenv/issues/3117)\n- Fix the path casing issue that makes `pipenv clean` fail on Windows  [#3104](https://github.com/pypa/pipenv/issues/3104)\n- Pipenv will avoid leaving build artifacts in the current working directory.  [#3106](https://github.com/pypa/pipenv/issues/3106)\n- Fixed issues with broken subprocess calls leaking resource handles and causing random and sporadic failures.  [#3109](https://github.com/pypa/pipenv/issues/3109)\n- Fixed an issue which caused `pipenv clean` to sometimes clean packages from the base `site-packages` folder or fail entirely.  [#3113](https://github.com/pypa/pipenv/issues/3113)\n- Updated `pythonfinder` to correct an issue with unnesting of nested paths when searching for python versions.  [#3121](https://github.com/pypa/pipenv/issues/3121)\n- Added additional logic for ignoring and replacing non-ascii characters when formatting console output on non-UTF-8 systems.  [#3131](https://github.com/pypa/pipenv/issues/3131)\n- Fix virtual environment discovery when `PIPENV_VENV_IN_PROJECT` is set, but the in-project `.venv` is a file.  [#3134](https://github.com/pypa/pipenv/issues/3134)\n- Hashes for remote and local non-PyPI artifacts will now be included in `Pipfile.lock` during resolution.  [#3145](https://github.com/pypa/pipenv/issues/3145)\n- Fix project path hashing logic in purpose to prevent collisions of virtual environments.  [#3151](https://github.com/pypa/pipenv/issues/3151)\n- Fix package installation when the virtual environment path contains parentheses.  [#3158](https://github.com/pypa/pipenv/issues/3158)\n- Azure Pipelines YAML files are updated to use the latest syntax and product name.  [#3164](https://github.com/pypa/pipenv/issues/3164)\n- Fixed new spinner success message to write only one success message during resolution.  [#3183](https://github.com/pypa/pipenv/issues/3183)\n- Pipenv will now correctly respect the `--pre` option when used with `pipenv install`.  [#3185](https://github.com/pypa/pipenv/issues/3185)\n- Fix a bug where exception is raised when run pipenv graph in a project without created virtualenv  [#3201](https://github.com/pypa/pipenv/issues/3201)\n- When sources are missing names, names will now be derived from the supplied URL.  [#3216](https://github.com/pypa/pipenv/issues/3216)\n\n## Vendored Libraries\n\n- Updated `pythonfinder` to correct an issue with unnesting of nested paths when searching for python versions.  [#3061](https://github.com/pypa/pipenv/issues/3061),\n  [#3121](https://github.com/pypa/pipenv/issues/3121)\n- Updated vendored dependencies:\n  : - `certifi 2018.08.24 => 2018.10.15`\n    - `urllib3 1.23 => 1.24`\n    - `requests 2.19.1 => 2.20.0`\n    - ``` shellingham ``1.2.6 => 1.2.7 ```\n    - `tomlkit 0.4.4. => 0.4.6`\n    - `vistir 0.1.6 => 0.1.8`\n    - `pythonfinder 0.1.2 => 0.1.3`\n    - `requirementslib 1.1.9 => 1.1.10`\n    - `backports.functools_lru_cache 1.5.0 (new)`\n    - `cursor 1.2.0 (new)`  [#3089](https://github.com/pypa/pipenv/issues/3089)\n- Updated vendored dependencies:\n  : - `requests 2.19.1 => 2.20.1`\n    - `tomlkit 0.4.46 => 0.5.2`\n    - `vistir 0.1.6 => 0.2.4`\n    - `pythonfinder 1.1.2 => 1.1.8`\n    - `requirementslib 1.1.10 => 1.3.0`  [#3096](https://github.com/pypa/pipenv/issues/3096)\n- Switch to `tomlkit` for parsing and writing. Drop `prettytoml` and `contoml` from vendors.  [#3191](https://github.com/pypa/pipenv/issues/3191)\n- Updated `requirementslib` to aid in resolution of local and remote archives.  [#3196](https://github.com/pypa/pipenv/issues/3196)\n\n## Improved Documentation\n\n- Expanded development and testing documentation for contributors to get started.  [#3074](https://github.com/pypa/pipenv/issues/3074)\n\n# 2018.10.13 (2018-10-13)\n\n## Bug Fixes\n\n- Fixed a bug in `pipenv clean` which caused global packages to sometimes be inadvertently targeted for cleanup.  [#2849](https://github.com/pypa/pipenv/issues/2849)\n- Fix broken backport imports for vendored vistir.  [#2950](https://github.com/pypa/pipenv/issues/2950),\n  [#2955](https://github.com/pypa/pipenv/issues/2955),\n  [#2961](https://github.com/pypa/pipenv/issues/2961)\n- Fixed a bug with importing local vendored dependencies when running `pipenv graph`.  [#2952](https://github.com/pypa/pipenv/issues/2952)\n- Fixed a bug which caused executable discovery to fail when running inside a virtualenv.  [#2957](https://github.com/pypa/pipenv/issues/2957)\n- Fix parsing of outline tables.  [#2971](https://github.com/pypa/pipenv/issues/2971)\n- Fixed a bug which caused `verify_ssl` to fail to drop through to `pip install` correctly as `trusted-host`.  [#2979](https://github.com/pypa/pipenv/issues/2979)\n- Fixed a bug which caused canonicalized package names to fail to resolve against PyPI.  [#2989](https://github.com/pypa/pipenv/issues/2989)\n- Enhanced CI detection to detect Azure Devops builds.  [#2993](https://github.com/pypa/pipenv/issues/2993)\n- Fixed a bug which prevented installing pinned versions which used redirection symbols from the command line.  [#2998](https://github.com/pypa/pipenv/issues/2998)\n- Fixed a bug which prevented installing the local directory in non-editable mode.  [#3005](https://github.com/pypa/pipenv/issues/3005)\n\n## Vendored Libraries\n\n- Updated `requirementslib` to version `1.1.9`.  [#2989](https://github.com/pypa/pipenv/issues/2989)\n- Upgraded `pythonfinder => 1.1.1` and `vistir => 0.1.7`.  [#3007](https://github.com/pypa/pipenv/issues/3007)\n\n# 2018.10.9 (2018-10-09)\n\n## Features & Improvements\n\n- Added environment variables `PIPENV_VERBOSE` and `PIPENV_QUIET` to control\n  output verbosity without needing to pass options.  [#2527](https://github.com/pypa/pipenv/issues/2527)\n\n- Updated test-PyPI add-on to better support json-API access (forward compatibility).\n  Improved testing process for new contributors.  [#2568](https://github.com/pypa/pipenv/issues/2568)\n\n- Greatly enhanced python discovery functionality:\n\n  - Added pep514 (windows launcher/finder) support for python discovery.\n  - Introduced architecture discovery for python installations which support different architectures.  [#2582](https://github.com/pypa/pipenv/issues/2582)\n\n- Added support for `pipenv shell` on msys and cygwin/mingw/git bash for Windows.  [#2641](https://github.com/pypa/pipenv/issues/2641)\n\n- Enhanced resolution of editable and VCS dependencies.  [#2643](https://github.com/pypa/pipenv/issues/2643)\n\n- Deduplicate and refactor CLI to use stateful arguments and object passing.  See [this issue](https://github.com/pallets/click/issues/108) for reference.  [#2814](https://github.com/pypa/pipenv/issues/2814)\n\n## Behavior Changes\n\n- Virtual environment activation for `run` is revised to improve interpolation\n  with other Python discovery tools.  [#2503](https://github.com/pypa/pipenv/issues/2503)\n- Improve terminal coloring to display better in Powershell.  [#2511](https://github.com/pypa/pipenv/issues/2511)\n- Invoke `virtualenv` directly for virtual environment creation, instead of depending on `pew`.  [#2518](https://github.com/pypa/pipenv/issues/2518)\n- `pipenv --help` will now include short help descriptions.  [#2542](https://github.com/pypa/pipenv/issues/2542)\n- Add `COMSPEC` to fallback option (along with `SHELL` and `PYENV_SHELL`)\n  if shell detection fails, improving robustness on Windows.  [#2651](https://github.com/pypa/pipenv/issues/2651)\n- Fallback to shell mode if `run` fails with Windows error 193 to handle non-executable commands. This should improve usability on Windows, where some users run non-executable files without specifying a command, relying on Windows file association to choose the current command.  [#2718](https://github.com/pypa/pipenv/issues/2718)\n\n## Bug Fixes\n\n- Fixed a bug which prevented installation of editable requirements using `ssh://` style URLs  [#1393](https://github.com/pypa/pipenv/issues/1393)\n- VCS Refs for locked local editable dependencies will now update appropriately to the latest hash when running `pipenv update`.  [#1690](https://github.com/pypa/pipenv/issues/1690)\n- `.tar.gz` and `.zip` artifacts will now have dependencies installed even when they are missing from the Lockfile.  [#2173](https://github.com/pypa/pipenv/issues/2173)\n- The command line parser will now handle multiple `-e/--editable` dependencies properly via click's option parser to help mitigate future parsing issues.  [#2279](https://github.com/pypa/pipenv/issues/2279)\n- Fixed the ability of pipenv to parse `dependency_links` from `setup.py` when `PIP_PROCESS_DEPENDENCY_LINKS` is enabled.  [#2434](https://github.com/pypa/pipenv/issues/2434)\n- Fixed a bug which could cause `-i/--index` arguments to sometimes be incorrectly picked up in packages.  This is now handled in the command line parser.  [#2494](https://github.com/pypa/pipenv/issues/2494)\n- Fixed non-deterministic resolution issues related to changes to the internal package finder in `pip 10`.  [#2499](https://github.com/pypa/pipenv/issues/2499),\n  [#2529](https://github.com/pypa/pipenv/issues/2529),\n  [#2589](https://github.com/pypa/pipenv/issues/2589),\n  [#2666](https://github.com/pypa/pipenv/issues/2666),\n  [#2767](https://github.com/pypa/pipenv/issues/2767),\n  [#2785](https://github.com/pypa/pipenv/issues/2785),\n  [#2795](https://github.com/pypa/pipenv/issues/2795),\n  [#2801](https://github.com/pypa/pipenv/issues/2801),\n  [#2824](https://github.com/pypa/pipenv/issues/2824),\n  [#2862](https://github.com/pypa/pipenv/issues/2862),\n  [#2879](https://github.com/pypa/pipenv/issues/2879),\n  [#2894](https://github.com/pypa/pipenv/issues/2894),\n  [#2933](https://github.com/pypa/pipenv/issues/2933)\n- Fix subshell invocation on Windows for Python 2.  [#2515](https://github.com/pypa/pipenv/issues/2515)\n- Fixed a bug which sometimes caused pipenv to throw a `TypeError` or to run into encoding issues when writing a Lockfile on python 2.  [#2561](https://github.com/pypa/pipenv/issues/2561)\n- Improve quoting logic for `pipenv run` so it works better with Windows\n  built-in commands.  [#2563](https://github.com/pypa/pipenv/issues/2563)\n- Fixed a bug related to parsing VCS requirements with both extras and subdirectory fragments.\n  Corrected an issue in the `requirementslib` parser which led to some markers being discarded rather than evaluated.  [#2564](https://github.com/pypa/pipenv/issues/2564)\n- Fixed multiple issues with finding the correct system python locations.  [#2582](https://github.com/pypa/pipenv/issues/2582)\n- Catch JSON decoding error to prevent exception when the lock file is of\n  invalid format.  [#2607](https://github.com/pypa/pipenv/issues/2607)\n- Fixed a rare bug which could sometimes cause errors when installing packages with custom sources.  [#2610](https://github.com/pypa/pipenv/issues/2610)\n- Update requirementslib to fix a bug which could raise an `UnboundLocalError` when parsing malformed VCS URIs.  [#2617](https://github.com/pypa/pipenv/issues/2617)\n- Fixed an issue which prevented passing multiple `--ignore` parameters to `pipenv check`.  [#2632](https://github.com/pypa/pipenv/issues/2632)\n- Fixed a bug which caused attempted hashing of `ssh://` style URIs which could cause failures during installation of private ssh repositories.\n  \\- Corrected path conversion issues which caused certain editable VCS paths to be converted to `ssh://` URIs improperly.  [#2639](https://github.com/pypa/pipenv/issues/2639)\n- Fixed a bug which caused paths to be formatted incorrectly when using `pipenv shell` in bash for windows.  [#2641](https://github.com/pypa/pipenv/issues/2641)\n- Dependency links to private repositories defined via `ssh://` schemes will now install correctly and skip hashing as long as `PIP_PROCESS_DEPENDENCY_LINKS=1`.  [#2643](https://github.com/pypa/pipenv/issues/2643)\n- Fixed a bug which sometimes caused pipenv to parse the `trusted_host` argument to pip incorrectly when parsing source URLs which specify `verify_ssl = false`.  [#2656](https://github.com/pypa/pipenv/issues/2656)\n- Prevent crashing when a virtual environment in `WORKON_HOME` is faulty.  [#2676](https://github.com/pypa/pipenv/issues/2676)\n- Fixed virtualenv creation failure when a .venv file is present in the project root.  [#2680](https://github.com/pypa/pipenv/issues/2680)\n- Fixed a bug which could cause the `-e/--editable` argument on a dependency to be accidentally parsed as a dependency itself.  [#2714](https://github.com/pypa/pipenv/issues/2714)\n- Correctly pass `verbose` and `debug` flags to the resolver subprocess so it generates appropriate output. This also resolves a bug introduced by the fix to #2527.  [#2732](https://github.com/pypa/pipenv/issues/2732)\n- All markers are now included in `pipenv lock --requirements` output.  [#2748](https://github.com/pypa/pipenv/issues/2748)\n- Fixed a bug in marker resolution which could cause duplicate and non-deterministic markers.  [#2760](https://github.com/pypa/pipenv/issues/2760)\n- Fixed a bug in the dependency resolver which caused regular issues when handling `setup.py` based dependency resolution.  [#2766](https://github.com/pypa/pipenv/issues/2766)\n- Updated vendored dependencies:\n  : - `pip-tools` (updated and patched to latest w/ `pip 18.0` compatibility)\n    - `pip 10.0.1 => 18.0`\n    - `click 6.7 => 7.0`\n    - `toml 0.9.4 => 0.10.0`\n    - `pyparsing 2.2.0 => 2.2.2`\n    - `delegator 0.1.0 => 0.1.1`\n    - `attrs 18.1.0 => 18.2.0`\n    - `distlib 0.2.7 => 0.2.8`\n    - `packaging 17.1.0 => 18.0`\n    - `passa 0.2.0 => 0.3.1`\n    - `pip_shims 0.1.2 => 0.3.1`\n    - `plette 0.1.1 => 0.2.2`\n    - `pythonfinder 1.0.2 => 1.1.0`\n    - `pytoml 0.1.18 => 0.1.19`\n    - `requirementslib 1.1.16 => 1.1.17`\n    - `shellingham 1.2.4 => 1.2.6`\n    - `tomlkit 0.4.2 => 0.4.4`\n    - `vistir 0.1.4 => 0.1.6`\n  [#2802](https://github.com/pypa/pipenv/issues/2802),\n  [#2867](https://github.com/pypa/pipenv/issues/2867),\n  [#2880](https://github.com/pypa/pipenv/issues/2880)\n- Fixed a bug where `pipenv` crashes when the `WORKON_HOME` directory does not exist.  [#2877](https://github.com/pypa/pipenv/issues/2877)\n- Fixed pip is not loaded from pipenv's patched one but the system one  [#2912](https://github.com/pypa/pipenv/issues/2912)\n- Fixed various bugs related to `pip 18.1` release which prevented locking, installation, and syncing, and dumping to a `requirements.txt` file.  [#2924](https://github.com/pypa/pipenv/issues/2924)\n\n## Vendored Libraries\n\n- Pew is no longer vendored. Entry point `pewtwo`, packages `pipenv.pew` and\n  `pipenv.patched.pew` are removed.  [#2521](https://github.com/pypa/pipenv/issues/2521)\n- Update `pythonfinder` to major release `1.0.0` for integration.  [#2582](https://github.com/pypa/pipenv/issues/2582)\n- Update requirementslib to fix a bug which could raise an `UnboundLocalError` when parsing malformed VCS URIs.  [#2617](https://github.com/pypa/pipenv/issues/2617)\n- - Vendored new libraries `vistir` and `pip-shims`, `tomlkit`, `modutil`, and `plette`.\n  - Update vendored libraries:\n    \\- `scandir` to `1.9.0`\n    \\- `click-completion` to `0.4.1`\n    \\- `semver` to `2.8.1`\n    \\- `shellingham` to `1.2.4`\n    \\- `pytoml` to `0.1.18`\n    \\- `certifi` to `2018.8.24`\n    \\- `ptyprocess` to `0.6.0`\n    \\- `requirementslib` to `1.1.5`\n    \\- `pythonfinder` to `1.0.2`\n    \\- `pipdeptree` to `0.13.0`\n    \\- `python-dotenv` to `0.9.1`  [#2639](https://github.com/pypa/pipenv/issues/2639)\n- Updated vendored dependencies:\n  : - `pip-tools` (updated and patched to latest w/ `pip 18.0` compatibility)\n    - `pip 10.0.1 => 18.0`\n    - `click 6.7 => 7.0`\n    - `toml 0.9.4 => 0.10.0`\n    - `pyparsing 2.2.0 => 2.2.2`\n    - `delegator 0.1.0 => 0.1.1`\n    - `attrs 18.1.0 => 18.2.0`\n    - `distlib 0.2.7 => 0.2.8`\n    - `packaging 17.1.0 => 18.0`\n    - `passa 0.2.0 => 0.3.1`\n    - `pip_shims 0.1.2 => 0.3.1`\n    - `plette 0.1.1 => 0.2.2`\n    - `pythonfinder 1.0.2 => 1.1.0`\n    - `pytoml 0.1.18 => 0.1.19`\n    - `requirementslib 1.1.16 => 1.1.17`\n    - `shellingham 1.2.4 => 1.2.6`\n    - `tomlkit 0.4.2 => 0.4.4`\n    - `vistir 0.1.4 => 0.1.6`\n  [#2902](https://github.com/pypa/pipenv/issues/2902),\n  [#2935](https://github.com/pypa/pipenv/issues/2935)\n\n## Improved Documentation\n\n- Simplified the test configuration process.  [#2568](https://github.com/pypa/pipenv/issues/2568)\n- Updated documentation to use working fortune cookie add-on.  [#2644](https://github.com/pypa/pipenv/issues/2644)\n- Added additional information about troubleshooting `pipenv shell` by using the the `$PIPENV_SHELL` environment variable.  [#2671](https://github.com/pypa/pipenv/issues/2671)\n- Added a link to `PEP-440` version specifiers in the documentation for additional detail.  [#2674](https://github.com/pypa/pipenv/issues/2674)\n- Added simple example to README.md for installing from git.  [#2685](https://github.com/pypa/pipenv/issues/2685)\n- Stopped recommending `--system` for Docker contexts.  [#2762](https://github.com/pypa/pipenv/issues/2762)\n- Fixed the example url for doing \"pipenv install -e\n  some-repository-url#egg=something\", it was missing the \"egg=\" in the fragment\n  identifier.  [#2792](https://github.com/pypa/pipenv/issues/2792)\n- Fixed link to the \"be cordial\" essay in the contribution documentation.  [#2793](https://github.com/pypa/pipenv/issues/2793)\n- Clarify `pipenv install` documentation  [#2844](https://github.com/pypa/pipenv/issues/2844)\n- Replace reference to uservoice with PEEP-000  [#2909](https://github.com/pypa/pipenv/issues/2909)\n\n# 2018.7.1 (2018-07-01)\n\n## Features & Improvements\n\n- All calls to `pipenv shell` are now implemented from the ground up using [shellingham](https://github.com/sarugaku/shellingham), a custom library which was purpose built to handle edge cases and shell detection.  [#2371](https://github.com/pypa/pipenv/issues/2371)\n- Added support for python 3.7 via a few small compatibility / bug fixes.  [#2427](https://github.com/pypa/pipenv/issues/2427),\n  [#2434](https://github.com/pypa/pipenv/issues/2434),\n  [#2436](https://github.com/pypa/pipenv/issues/2436)\n- Added new flag `pipenv --support` to replace the diagnostic command `python -m pipenv.help`.  [#2477](https://github.com/pypa/pipenv/issues/2477),\n  [#2478](https://github.com/pypa/pipenv/issues/2478)\n- Improved import times and CLI run times with minor tweaks.  [#2485](https://github.com/pypa/pipenv/issues/2485)\n\n## Bug Fixes\n\n- Fixed an ongoing bug which sometimes resolved incompatible versions into the project Lockfile.  [#1901](https://github.com/pypa/pipenv/issues/1901)\n- Fixed a bug which caused errors when creating virtualenvs which contained leading dash characters.  [#2415](https://github.com/pypa/pipenv/issues/2415)\n- Fixed a logic error which caused `--deploy --system` to overwrite editable vcs packages in the Pipfile before installing, which caused any installation to fail by default.  [#2417](https://github.com/pypa/pipenv/issues/2417)\n- Updated requirementslib to fix an issue with properly quoting markers in VCS requirements.  [#2419](https://github.com/pypa/pipenv/issues/2419)\n- Installed new vendored jinja2 templates for `click-completion` which were causing template errors for users with completion enabled.  [#2422](https://github.com/pypa/pipenv/issues/2422)\n- Added support for python 3.7 via a few small compatibility / bug fixes.  [#2427](https://github.com/pypa/pipenv/issues/2427)\n- Fixed an issue reading package names from `setup.py` files in projects which imported utilities such as `versioneer`.  [#2433](https://github.com/pypa/pipenv/issues/2433)\n- Pipenv will now ensure that its internal package names registry files are written with unicode strings.  [#2450](https://github.com/pypa/pipenv/issues/2450)\n- Fixed a bug causing requirements input as relative paths to be output as absolute paths or URIs.\n  Fixed a bug affecting normalization of `git+git@host` URLs.  [#2453](https://github.com/pypa/pipenv/issues/2453)\n- Pipenv will now always use `pathlib2` for `Path` based filesystem interactions by default on `python<3.5`.  [#2454](https://github.com/pypa/pipenv/issues/2454)\n- Fixed a bug which prevented passing proxy PyPI indexes set with `--pypi-mirror` from being passed to pip during virtualenv creation, which could cause the creation to freeze in some cases.  [#2462](https://github.com/pypa/pipenv/issues/2462)\n- Using the `python -m pipenv.help` command will now use proper encoding for the host filesystem to avoid encoding issues.  [#2466](https://github.com/pypa/pipenv/issues/2466)\n- The new `jinja2` templates for `click_completion` will now be included in pipenv source distributions.  [#2479](https://github.com/pypa/pipenv/issues/2479)\n- Resolved a long-standing issue with re-using previously generated `InstallRequirement` objects for resolution which could cause `PKG-INFO` file information to be deleted, raising a `TypeError`.  [#2480](https://github.com/pypa/pipenv/issues/2480)\n- Resolved an issue parsing usernames from private PyPI URIs in `Pipfiles` by updating `requirementslib`.  [#2484](https://github.com/pypa/pipenv/issues/2484)\n\n## Vendored Libraries\n\n- All calls to `pipenv shell` are now implemented from the ground up using [shellingham](https://github.com/sarugaku/shellingham), a custom library which was purpose built to handle edge cases and shell detection.  [#2371](https://github.com/pypa/pipenv/issues/2371)\n- Updated requirementslib to fix an issue with properly quoting markers in VCS requirements.  [#2419](https://github.com/pypa/pipenv/issues/2419)\n- Installed new vendored jinja2 templates for `click-completion` which were causing template errors for users with completion enabled.  [#2422](https://github.com/pypa/pipenv/issues/2422)\n- Add patch to `prettytoml` to support Python 3.7.  [#2426](https://github.com/pypa/pipenv/issues/2426)\n- Patched `prettytoml.AbstractTable._enumerate_items` to handle `StopIteration` errors in preparation of release of python 3.7.  [#2427](https://github.com/pypa/pipenv/issues/2427)\n- Fixed an issue reading package names from `setup.py` files in projects which imported utilities such as `versioneer`.  [#2433](https://github.com/pypa/pipenv/issues/2433)\n- Updated `requirementslib` to version `1.0.9`  [#2453](https://github.com/pypa/pipenv/issues/2453)\n- Unraveled a lot of old, unnecessary patches to `pip-tools` which were causing non-deterministic resolution errors.  [#2480](https://github.com/pypa/pipenv/issues/2480)\n- Resolved an issue parsing usernames from private PyPI URIs in `Pipfiles` by updating `requirementslib`.  [#2484](https://github.com/pypa/pipenv/issues/2484)\n\n## Improved Documentation\n\n- Added instructions for installing using Fedora's official repositories.  [#2404](https://github.com/pypa/pipenv/issues/2404)\n\n# 2018.6.25 (2018-06-25)\n\n## Features & Improvements\n\n- Pipenv-created virtualenvs will now be associated with a `.project` folder\n  (features can be implemented on top of this later or users may choose to use\n  `pipenv-pipes` to take full advantage of this.)  [#1861](https://github.com/pypa/pipenv/issues/1861)\n- Virtualenv names will now appear in prompts for most Windows users.  [#2167](https://github.com/pypa/pipenv/issues/2167)\n- Added support for cmder shell paths with spaces.  [#2168](https://github.com/pypa/pipenv/issues/2168)\n- Added nested JSON output to the `pipenv graph` command.  [#2199](https://github.com/pypa/pipenv/issues/2199)\n- Dropped vendored pip 9 and vendored, patched, and migrated to pip 10. Updated\n  patched piptools version.  [#2255](https://github.com/pypa/pipenv/issues/2255)\n- PyPI mirror URLs can now be set to override instances of PyPI URLs by passing\n  the `--pypi-mirror` argument from the command line or setting the\n  `PIPENV_PYPI_MIRROR` environment variable.  [#2281](https://github.com/pypa/pipenv/issues/2281)\n- Virtualenv activation lines will now avoid being written to some shell\n  history files.  [#2287](https://github.com/pypa/pipenv/issues/2287)\n- Pipenv will now only search for `requirements.txt` files when creating new\n  projects, and during that time only if the user doesn't specify packages to\n  pass in.  [#2309](https://github.com/pypa/pipenv/issues/2309)\n- Added support for mounted drives via UNC paths.  [#2331](https://github.com/pypa/pipenv/issues/2331)\n- Added support for Windows Subsystem for Linux bash shell detection.  [#2363](https://github.com/pypa/pipenv/issues/2363)\n- Pipenv will now generate hashes much more quickly by resolving them in a\n  single pass during locking.  [#2384](https://github.com/pypa/pipenv/issues/2384)\n- `pipenv run` will now avoid spawning additional `COMSPEC` instances to\n  run commands in when possible.  [#2385](https://github.com/pypa/pipenv/issues/2385)\n- Massive internal improvements to requirements parsing codebase, resolver, and\n  error messaging.  [#2388](https://github.com/pypa/pipenv/issues/2388)\n- `pipenv check` now may take multiple of the additional argument\n  `--ignore` which takes a parameter `cve_id` for the purpose of ignoring\n  specific CVEs.  [#2408](https://github.com/pypa/pipenv/issues/2408)\n\n## Behavior Changes\n\n- Pipenv will now parse & capitalize `platform_python_implementation` markers\n  .. warning:: This could cause an issue if you have an out of date `Pipfile`\n  which lower-cases the comparison value (e.g. `cpython` instead of\n  `CPython`).  [#2123](https://github.com/pypa/pipenv/issues/2123)\n- Pipenv will now only search for `requirements.txt` files when creating new\n  projects, and during that time only if the user doesn't specify packages to\n  pass in.  [#2309](https://github.com/pypa/pipenv/issues/2309)\n\n## Bug Fixes\n\n- Massive internal improvements to requirements parsing codebase, resolver, and\n  error messaging.  [#1962](https://github.com/pypa/pipenv/issues/1962),\n  [#2186](https://github.com/pypa/pipenv/issues/2186),\n  [#2263](https://github.com/pypa/pipenv/issues/2263),\n  [#2312](https://github.com/pypa/pipenv/issues/2312)\n- Pipenv will now parse & capitalize `platform_python_implementation`\n  markers.  [#2123](https://github.com/pypa/pipenv/issues/2123)\n- Fixed a bug with parsing and grouping old-style `setup.py` extras during\n  resolution  [#2142](https://github.com/pypa/pipenv/issues/2142)\n- Fixed a bug causing pipenv graph to throw unhelpful exceptions when running\n  against empty or non-existent environments.  [#2161](https://github.com/pypa/pipenv/issues/2161)\n- Fixed a bug which caused `--system` to incorrectly abort when users were in\n  a virtualenv.  [#2181](https://github.com/pypa/pipenv/issues/2181)\n- Removed vendored `cacert.pem` which could cause issues for some users with\n  custom certificate settings.  [#2193](https://github.com/pypa/pipenv/issues/2193)\n- Fixed a regression which led to direct invocations of `virtualenv`, rather\n  than calling it by module.  [#2198](https://github.com/pypa/pipenv/issues/2198)\n- Locking will now pin the correct VCS ref during `pipenv update` runs.\n  Running `pipenv update` with a new vcs ref specified in the `Pipfile`\n  will now properly obtain, resolve, and install the specified dependency at\n  the specified ref.  [#2209](https://github.com/pypa/pipenv/issues/2209)\n- `pipenv clean` will now correctly ignore comments from `pip freeze` when\n  cleaning the environment.  [#2262](https://github.com/pypa/pipenv/issues/2262)\n- Resolution bugs causing packages for incompatible python versions to be\n  locked have been fixed.  [#2267](https://github.com/pypa/pipenv/issues/2267)\n- Fixed a bug causing pipenv graph to fail to display sometimes.  [#2268](https://github.com/pypa/pipenv/issues/2268)\n- Updated `requirementslib` to fix a bug in Pipfile parsing affecting\n  relative path conversions.  [#2269](https://github.com/pypa/pipenv/issues/2269)\n- Windows executable discovery now leverages `os.pathext`.  [#2298](https://github.com/pypa/pipenv/issues/2298)\n- Fixed a bug which caused `--deploy --system` to inadvertently create a\n  virtualenv before failing.  [#2301](https://github.com/pypa/pipenv/issues/2301)\n- Fixed an issue which led to a failure to unquote special characters in file\n  and wheel paths.  [#2302](https://github.com/pypa/pipenv/issues/2302)\n- VCS dependencies are now manually obtained only if they do not match the\n  requested ref.  [#2304](https://github.com/pypa/pipenv/issues/2304)\n- Added error handling functionality to properly cope with single-digit\n  `Requires-Python` metadata with no specifiers.  [#2377](https://github.com/pypa/pipenv/issues/2377)\n- `pipenv update` will now always run the resolver and lock before ensuring\n  dependencies are in sync with project Lockfile.  [#2379](https://github.com/pypa/pipenv/issues/2379)\n- Resolved a bug in our patched resolvers which could cause nondeterministic\n  resolution failures in certain conditions. Running `pipenv install` with no\n  arguments in a project with only a `Pipfile` will now correctly lock first\n  for dependency resolution before installing.  [#2384](https://github.com/pypa/pipenv/issues/2384)\n- Patched `python-dotenv` to ensure that environment variables always get\n  encoded to the filesystem encoding.  [#2386](https://github.com/pypa/pipenv/issues/2386)\n\n## Improved Documentation\n\n- Update documentation wording to clarify Pipenv's overall role in the packaging ecosystem.  [#2194](https://github.com/pypa/pipenv/issues/2194)\n- Added contribution documentation and guidelines.  [#2205](https://github.com/pypa/pipenv/issues/2205)\n- Added instructions for supervisord compatibility.  [#2215](https://github.com/pypa/pipenv/issues/2215)\n- Fixed broken links to development philosophy and contribution documentation.  [#2248](https://github.com/pypa/pipenv/issues/2248)\n\n## Vendored Libraries\n\n- Removed vendored `cacert.pem` which could cause issues for some users with\n  custom certificate settings.  [#2193](https://github.com/pypa/pipenv/issues/2193)\n\n- Dropped vendored pip 9 and vendored, patched, and migrated to pip 10. Updated\n  patched piptools version.  [#2255](https://github.com/pypa/pipenv/issues/2255)\n\n- Updated `requirementslib` to fix a bug in Pipfile parsing affecting\n  relative path conversions.  [#2269](https://github.com/pypa/pipenv/issues/2269)\n\n- Added custom shell detection library `shellingham`, a port of our changes\n  to `pew`.  [#2363](https://github.com/pypa/pipenv/issues/2363)\n\n- Patched `python-dotenv` to ensure that environment variables always get\n  encoded to the filesystem encoding.  [#2386](https://github.com/pypa/pipenv/issues/2386)\n\n- Updated vendored libraries. The following vendored libraries were updated:\n\n  - distlib from version `0.2.6` to `0.2.7`.\n  - jinja2 from version `2.9.5` to `2.10`.\n  - pathlib2 from version `2.1.0` to `2.3.2`.\n  - parse from version `2.8.0` to `2.8.4`.\n  - pexpect from version `2.5.2` to `2.6.0`.\n  - requests from version `2.18.4` to `2.19.1`.\n  - idna from version `2.6` to `2.7`.\n  - certifi from version `2018.1.16` to `2018.4.16`.\n  - packaging from version `16.8` to `17.1`.\n  - six from version `1.10.0` to `1.11.0`.\n  - requirementslib from version `0.2.0` to `1.0.1`.\n\n  In addition, scandir was vendored and patched to avoid importing host system binaries when falling back to pathlib2.  [#2368](https://github.com/pypa/pipenv/issues/2368)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1201171875,
          "content": "Contributing to Pipenv\n======================\n\nPlease see: [docs](https://pipenv.pypa.io/en/latest/dev/contributing.html).\n"
        },
        {
          "name": "HISTORY.txt",
          "type": "blob",
          "size": 34.9501953125,
          "content": "2018.7.1:\n - All calls to `pipenv shell` are now implemented from the ground up using `shellingham`,\n   a custom library which was purpose built to handle edge cases and shell detection.\n - Added support for python 3.7 via a few small compatibility / bugfixes.\n - Added new flag `pipenv --support` to replace the diagnostic command `python -m\n   pipenv.help`.\n - Improved import times and CLI runtimes with minor tweaks.\n - Fixed an ongoing bug which sometimes resolved incompatible versions into lockfiles.\n - Fixed a bug which caused errors when creating virtualenvs which contained leading dash\n   characters.\n - Fixed a logic error which caused `--deploy --system` to overwrite editable vcs packages\n   in the pipfile before installing, which caused any installation to fail by default.\n - Installed new vendored jinja2 templates for `click-completion` which were causing\n   template errors for users with completion enabled.\n - Pipenv will now ensure that its internal package names registry files are written with\n   unicode strings.\n - Fixed a bug causing requirements input as relative paths to be output as absolute paths\n   or URIs.\n - Fixed a bug affecting normalization of `git+git@host` uris.\n - Pipenv will now always use `pathlib2` for `Path` based filesystem interactions by\n   default on `python<3.5`.\n - Fixed a bug which prevented passing proxy PyPI indexes set with `--pypi-mirror` from\n   being passed to pip during virtualenv creation, which could cause the creation to\n   freeze in some cases.\n - Using the `python -m pipenv.help` command will now use proper encoding for the host\n   filesystem to avoid encoding issues.\n - The new `jinja2` templates for `click_completion` will now be included in pipenv source\n   distributions.\n - Resolved a long-standing issue with re-using previously generated `InstallRequirement`\n   objects for resolution which could cause `PKG-INFO` file information to be deleted,\n   raising a `TypeError`.\n - Resolved an issue parsing usernames from private PyPI URIs in `Pipfiles` by updating\n   `requirementslib`.\n - Updated requirementslib to fix an issue with properly quoting markers in VCS requirements.\n - Add patch to `prettytoml` to support Python 3.7.\n - Patched `prettytoml.AbstractTable._enumerate_items` to handle `StopIteration` errors in\n   preparation of release of python 3.7.\n - Fixed an issue reading package names from `setup.py` files in projects which imported\n   utilities such as `versioneer`.\n - Updated `requirementslib` to version `1.0.9`\n - Unraveled a lot of old, unnecessary patches to `pip-tools` which were causing\n   non-deterministic resolution errors.\n2018.6.25:\n - Added error handling functionality to properly cope with single-digit `Requires-Python`\n   metadata with no specifiers.\n - Pipenv will now generate hashes much more quickly by resolving them in a single pass\n   during locking.\n - `pipenv run` will now avoid spawning additional `COMSPEC` instances to run commands in\n   when possible.\n - `pipenv check` now may take multiple of the additional argument `--ignore` which takes\n   a parameter `cve_id` for the purpose of ignoring specific CVEs.\n - Patched `python-dotenv` to ensure that environment variables always get encoded to the\n   filesystem encoding.\n - Virtualenv names will now appear in prompts for most Windows users.\n - Resolver runtime and caching has been improved.\n - Improved virtualenv discovery when using `pipenv --venv`.\n - Improved error messages when failing to activate virtualenvs.\n - Dependency resolver reliability has been improved.\n - Added nested JSON output to the `pipenv graph` command.\n - Added support for mounted drives via UNC paths.\n - Added support for Windows Subsystem for Linux bash shell detection.\n - Added custom shell detection library `shellingham`, a port of our changes to `pew`.\n - Requirements are only auto-imported in new projects created without passing any packages\n   to install and without an initial Pipfile.\n - Added support for cmder shell paths with spaces.\n - Dropped vendored pip 9 and vendor, patch, and migrate to pip 10.\n - Virtualenv activation lines will now avoid being written to some shell history files.\n - Pipenv-created virtualenvs will now be associated with a `.project` folder (features can\n   be implemented on top of this later or users may choose to use `pipenv-pipes` to take\n   full advantage of this.)\n - Lock and update VCS dependencies properly by checking them out and cloning them\n   manually before installing and generating a lockfile to guarantee dependencies are\n   locked.\n - PyPI mirror URLs can now be set to override instances of PyPI urls by passing the\n   `--pypi-mirror` argument from the command line or setting the `PIPENV_PYPI_MIRROR`\n   environment variable.\n - Locking will now pin the correct VCS ref during `pipenv update` runs.\n - Running `pipenv update` with a new vcs ref specified in the `Pipfile` will now properly\n   obtain, resolve, and install the specified dependency at the specified ref.\n - Pipenv will now parse & capitalize`platform_python_implementation` markers -- **note** this\n   could cause an issue if you have an out of date Pipfile which lowercases the comparison\n   value (e.g. `cpython` instead of `CPython`).\n - Massive internal improvements to requirements parsing codebase, resolver, and error\n   messaging.\n - Fixed a regression which led to direct invocations of `virtualenv`, rather than calling\n   it by module.\n - Resolution bugs causing packages for incompatible python versions to be locked\n   have been fixed.\n - VCS dependencies are now manually obtained only if they do not match the requested ref.\n - Windows executable discovery now leverages `os.pathext`.\n - Pipenv will now correctly unquote special characters in wheel URIs.\n - Fixed a bug with parsing and grouping old-style setup.py extras during resolution.\n - Fixed a bug which caused `--system` to incorrectly abort when users were in a virtualenv.\n - Pipenv clean will now ignore comments when cleaning the environment.\n - Fixed a bug which caused `--deploy --system` to inadvertently create a virtualenv\n   before failing.\n - Errors when running `pipenv graph` running against empty or non-existent environments.\n   will now contain helpful information.\n - Removed vendored `cacert.pem` which could cause issues for some users with custom\n   certificate settings.\n - Updated requirementslib to fix a bug in pipfile parsing affecting relative path conversions on Windows.\n - Fixed a bug causing pipenv graph to fail to display sometimes.\n2018.05.12:\n - Switch to calver for versioning.\n11.10.4:\n - Bugfix release (_mkstmp_inner backport breaks python3.4/3.5 compat)\n11.10.3:\n - Bugfix release (break dependency on pathlib2).\n11.10.2:\n - Backport NamedTemporaryFile for python 2.\n - Implement atomic lockfile writing / rewriting.\n - Allow non-interactive pyenv installations for CI.\n - Bugfix regression which restricted pipfiles to two sources.\n - Update default python 2.7 version to 2.7.15.\n - Fix bug preventing usage within premade virtualenvs.\n - Add PIPENV_MAX_RETRIES environment variable to allow retrying installs.\n - Fix regression with `pipenv sync` which caused it to lock if out of sync.\n - Update colorblind mode to respect progress bars.\n - Use `\\n` to generate new lockfiles and pipfiles, default to current newlines.\n - Fix bug with environment variable expansion writing back to Pipfiles when\n   running `pipenv install <package>`\n - Accurately parse extras from egg fragments.\n - Allow `editable=False` in pipfile.\n - Fix `keep-outdated` argument for installation (previously unenforced).\n - Update vendoring scripts to include licenses for vendored pip.\n11.10.1:\n - Fix broken resolution when using multiple sources in pipfiles and passing\n   `--skip-lock`.\n - Include all sources in `pipenv lock -r` output as `--extra-index-url` args.\n - Translate index aliases to index urls from pipfile or lockfile.\n - Fix virtualenv detection for .venv folders in project directories.\n - Add LICENSE files for all vendored dependencies.\n - Port automated tooling from pip for re-vendoring and downloading licenses\n    (thanks @hroncok @uranusjr and @ncoghlan for your help sorting this out).\n - Remove GPL'ed code.\n - Make imports lazy to improve initial load time.\n - Extra path searching for python at runtime.\n - Shellquote paths to requirement files in case of spaces on windows.\n - Update PyPI urls.\n - Require `--python` values to exist when passing a path.\n - Bugfix for environment variable expansion in 'unlocked' pipfiles.\n - Bugfix for `--deploy` flag.\n - Bugfix for windows virtualenv drive letter case normalization.\n - Bugfix for python version number parsing.\n - Improved error messaging.\n11.10.0:\n - Resolve editable packages on the local filesystem.\n - Ensure lock hash does not change based on injected env vars.\n - Fix bug in detecting .venv at project root when in subdirectories.\n - Parse quoting in [scripts] section correctly + clearer run errors.\n - Fix bug resolving & locking markers correctly.\n - Fix locking failure for packages not available on the default PyPI.\n - Upgrade python-dotenv to support \"export\" syntax.\n - Resolve dependencies of wheel files.\n - Bugfix for allow_global with new resolver fixes.\n - Locally cache hashes for performance gains.\n - Lock prereleases correctly.\n - Add requests.pem back to package.\n - Auto-toggle PIPENV_VENV_IN_PROJECT when .venv is present.\n - Fix bug with pipfile casing.\n - Enable environment variable interpolation in pipfiles.\n11.9.0:\n - Vastly improve markers capabilities.\n - Support for environment variables in Pipfiles.\n - Cache the Pipfile internally (for large Pipfiles).\n - Remove pipenv --update.\n - Export PYTHONDONTWRITEBYTECODE, to attempt to increase compatibility.\n11.8.2:\n - Cleanup TOML.\n - Improve documentation.\n - Pass clear flag to resolver.\n - Improved private git URL handling.\n11.8.1:\n - Removed (unused) Safety DB (licensing concerns).\n11.8.0:\n - Fix a major bug in locking resolution.\n11.7.4:\n - Don't use JSON results — problematic.\n11.7.3:\n - Increase compatibility with strange Python installations (concurrency.futures).\n11.7.2:\n - Bugfixes.\n11.7.1:\n - Windows bugfix.\n11.7.0:\n - Improvements to lockfile generation with private indexes.\n11.6.9:\n - Bugfixes.\n11.6.8:\n - Fix a Windows bug.\n11.6.7:\n - Fix a Windows bug.\n11.6.5:\n - Fix graph resolution.\n - May be some incompatibilities with private indexes and hashing. If so, it's worth it to fix graph resolution for now. Priorities. One thing at a time.\n11.6.4:\n - Fix a bug.\n11.6.3:\n - Depend on certifi.\n11.6.2:\n - Properly vendor certifi.\n - Better support for --extra-index-url for private PyPI servers.\n - Bug fixes.\n11.6.1:\n - Remove concurrent.futures, as it's not being used any longer, and is problematic.\n11.6.0:\n - Vendor all of pip9, in preparation for the release of pip10.\n11.5.3:\n- Attempt to grab markers from -e – provided setup.py files.\n- Revert \"rely on the underlying pipenv sync architecture to pick up dependencies\".\n11.5.2:\n - Fix bug with markers (e.g. responses package).\n11.5.1:\n - Restore bare 'pipenv update' functionality.\n11.5.0:\n - Properly resolve hashes for private indexes.\n - Some subtle changes to the way resolution works — shouldn't affect you, but warrented a version bump.\n11.4.0:\n - Stability.\n - Don't install dependencies straight-away with pipenv–install — rely on the underlying pipenv sync architecture to pick up dependencies.\n - Warn (abort) if requested update package is not in Pipfile.\n - Don't configure the Pipfile for keep_outdated when update is used.\n11.3.3:\n - Sorry for all the bugs.\n11.3.2:\n - Bugfix, of the craziest, hardest to reproduce nature.\n11.3.1:\n - Fix shell --fancy.\n11.3.0:\n - Default to using the Python Pipenv was installed with for new virtualenvs.\n - Report Python version of specified interpreter when creating virtualenv.\n - Disable JSON API usage, for now. It appears to cause some minor bugs related to markers (working on it).\n11.2.2:\n - Potential bugfix related to subprocess invocations and environment variables.\n11.2.1:\n - Actually use the Warehouse JSON API.\n11.2.0:\n - Reduce the number of \"bad packages\", internally (e.g. don't exclude `six` anymore).\n11.1.11:\n - Help improvements.\n11.1.10:\n - Help improvements.\n11.1.9:\n - $ python -m pipenv.help\n11.1.8:\n - Resolver improvements.\n11.1.7:\n - Packaging fix.\n11.1.6:\n - Support for 'py' interpreter (on Windows).\n - Bugfixes.\n11.1.5:\n - Vendor pew.\n - Be specific about which version of psutil we want.\n - Patch pip and pip-tools (further) like crazy, for hard-to-believe reasons, and the benefit of all.\n11.1.4:\n - Resolve multiple extras when provided.\n - Improve completion time.\n - Remove vendored version of psutil (windows).\n - Bugfixes.\n11.1.3:\n - Bugfix.\n11.1.2:\n - No longer include hashes in `lock -r`.\n - Enable pew execution via python -m.\n11.1.1:\n - Undo previous change.\n11.1.0:\n - Default to the version of Python that Pipenv was installed with.\n11.0.9:\n - PPA release.\n11.0.8:\n - PPA release.\n11.0.7:\n - PPA release.\n11.0.6:\n - PPA release.\n11.0.5:\n - PPA release.\n11.0.4:\n - PPA release.\n11.0.3:\n - PPA release.\n11.0.2:\n - Hash order is deterministic now.\n - Bugfix.\n11.0.1:\n - Bugfix.\n11.0.0:\n - Massive resolver improvements!\n - Resolver now runs within virtual environments.\n - Resolver now uses PyPI JSON metadata to provide additional dependency information.\n - Environment information removed from `Pipfile.lock`.\n - Clean up temporary files used during dependency resolution.\n10.1.2:\n - Bugfix.\n10.1.1:\n - Assume `PIPENV_VENV_IN_PROJECT` if `./.venv/` already exists.\n - Use and generate hashes for PyPI mirrors and custom indexes.\n10.1.0:\n - Default dependencies now take precedence over Develop dependencies when\n   creating a Pipfile.lock.\n - Introducing `pipenv lock --keep-outdated`, which can also be passed to\n   `install` and `uninstall`.\n - Introducing `pipenv install --selective-upgrade <package>`, which only\n   updates the given package in your Pipfile.lock.\n - New Pipfile configuration option for [pipenv] section: `keep_outdated`.\n10.0.1:\n - Add extra indexes from pip config files in Pipfile generation.\n - Fix bug with `pipenv clean`.\n - Install from Pipfile.lock after each successful `pipenv install`.\n - Temporary file cleanup.\n10.0.0:\n - Introduce `pipenv sync` command.\n - Introduce `pipenv clean` command.\n - Deprecate `pipenv update` command.\n - Fully remove `check --style` functionality.\n - Better `lock -r` functionality.\n - Up-to-date security checks for `pipenv check`.\n9.1.0:\n - Add --system flag to $ pipenv check.\n - Removal of package name suggestions.\n - Support for [scripts] in Pipfile.\n - Comment out invalid (to pip's hash checking mode) packages from `$ pipenv lock -r`.\n - Updated patched version of dotenv.\n - Do not allow `$ pipenv install --system packagename `to be used.\n - Deprecate the usage of `$ pipenv check --style`.\n - Show pip install logs with --verbose.\n - Allow -v as shorthand for --verbose for all commands.\n - Prevent duplicate virtualenv creation on windows due to drive casing.\n - Discard comments in output of `pip freeze` when running `pipenv update`.\n - Ignore existing `requirements.txt` files when pipenv is called with the `--requirements` flag.\n - Support `allow_global` during dependency resolution.\n - Add virtualenv activation support for `sh` (see #1388).\n - Improve startup times via lazy loading of imports.\n - Improve parsing of extras, markers, and path requirements.\n - Fix regression with VCS url parsing being treated as a normal path.\n - Resolve an issue causing local paths with the same name as a PyPI package to prevent proper dependency resolution.\n9.0.3:\n - v9.0.1.\n9.0.2:\n - A mistake.\n9.0.1:\n - Fixed issue with specifiers being treated as paths on Windows.\n - Fixed regression causing development packages to always be installed.\n9.0.0:\n - Fixed bug where packages beginning with vcs names (e.g. git) weren't installed correctly.\n - Fixed url parsing for <vcs>+<vcs>:// style urls.\n - Pipenv can now install relative file paths.\n - Better messaging around failed installs.\n - More resilient network io when retrieving data from PyPI.\n - Fixed bug with bad dependency pinning via pip-tools.\n - Prompt user to destroy and recreate virtualenvironment if they are in a currently activated environment.\n - Added enhancement for pip-tools to resolve dependencies with specific versions of python\n - Fixed bug where newlines were not escaped in .env files when loaded\n - Sequentially install all local and vcs dependencies to avoid write race conditions.\n - Fixed accidental exclusion of files from some VCS installs.\n8.3.2:\n - Moved automated update check to once every 24 hours.\n - Better default for PYENV_ROOT.\n - Correctly support all pip --index specifiers.\n - Fix bug where pre-releases of Python were chosen over finals.\n8.3.1:\n - Fixed issues with calling block too many times on single subprocess.\n - Updated vendored delegator.py.\n - Changed --dev flag for the uninstall command to --all-dev to better represent what it does.\n8.3.0:\n - Add support for installation from remote requirements file.\n - Add --reverse to pipenv graph, displaying inverted dependency graph.\n - VCS dependencies now install sequentially to avoid write lock conflicts.\n - Allow PIPENV_IGNORE_VIRTUALENVS to work with pipenv shell on Windows.\n - Enforce newline termination of Pipfile.\n - More robust requirements.txt conversion experience.\n - Respect allow_prereleases in all locking scenarios.\n - Separated default and development dependency output when using lock -r and lock -r -d respectively.\n - Print whole help message with pipenv --help.\n8.2.7:\n - Add update --sequential.\n - Fix unicode decode error on windows.\n - Fix bug with non-editable installs.\n - Update vendored setuptools.\n - Improvements to check --unused.\n - Fix install for local sdist packages.\n - Updating the patched pip-tools with the wheel dependency bugfix.\n - Fix git remote address modified changing underscore to a hyphen.\n - Fix py2toml with dashes (dev-packages)\n - Fix for --dry-run, reporting backwards.\n - Fix installing with all release specifiers.\n - Removed unused vendor libraries.\n8.2.6:\n - Fix for some git remotes.\n - Increased the default number of max rounds for pip-tools, made it user-configurable.\n - Fix self-updating.\n8.2.5:\n - Fixed bad attribute call on date checks.\n8.2.4:\n - Enhanced sha messaging — lockfile short shas are now displayed.\n - Improve Windows unicode output.\n - General UX and other improvements.\n8.2.3:\n - Don't show activation instructions when --deploy is used.\n8.2.2:\n - Improve system pip detection.\n8.2.1:\n - Enhanced pip resolver — hopefully that won't blow up in our faces.\n - Fixed file links.\n8.2.0:\n - Made things nicer.\n8.1.9:\n - Fix logging bug.\n8.1.8:\n - Fix dependencies with markers attached. That wasn't easy.\n - Vendor (patch) pip-tools.\n - Honor PIP_SRC if it is provided.\n8.1.7:\n - Update Python 2.x default to 2.7.14.\n - Deploy mode aborts if Python version doesn't match.\n8.1.6:\n - Abort when Python installation appears to fail.\n8.1.5:\n - Update pexcept to fix shellquote issues in subprocesses.\n8.1.4:\n - Tell users in compatibility mode how to exit the shell.\n - Updated patched pip's vendored pkg-resources.\n8.1.3:\n - Further improve patched pip, for crazy setup.py files.\n8.1.2:\n - chdir option for project, for really stubborn people.\n8.1.1:\n - Better exception handling when a corrupt virtualenv is being used.\n8.1.0:\n - Better path handling.\n8.0.9:\n - Bug when -r is passed in a subdirectory.\n8.0.8:\n - Add verbose mode to Pip.\n8.0.7:\n - Fix --skip-lock when verify_ssl = false.\n - Always quote pip path.\n - Fix --update.\n8.0.6:\n - Fix indexes.\n8.0.5:\n - $ pipenv open :module\n8.0.4:\n - $ pipenv install --deploy.\n8.0.3:\n - Improvements to dependency resolution against various versions of Python.\n - Fix issue with nested directories all containing Pipfiles.\n - Fix issue with --py when run outside of a project.\n - Refactoring of virtualenv detection.\n - Improvements to crayons library.\n - PIPENV_DOTENV_LOCATION.\n8.0.1:\n - Fix weird edge case with ramuel.ordereddict.\n8.0.0:\n - new [pipenv] settings, allows for allows_prereleases=True, automatically set when using install --pre.\n7.9.10:\n - Use urllib3 directly, for exceptions handling.\n7.9.9:\n - Fix argument parsing.\n7.9.8:\n - Fix argument parsing.\n7.9.7:\n - Fix help printout screen (and update it).\n - Use urllib3's warning suppression directly.\n7.9.6:\n - Did you mean?\n7.9.5:\n - More usage examples in help output.\n7.9.4:\n - Support for editable extras.\n7.9.3:\n - Use foreground color instead of white.\n7.9.2:\n - UX cleanup.\n7.9.1:\n - Bug fix with indexes.\n7.9.0:\n - Bug fix with indexes.\n7.8.9:\n - Fix for Heroku.\n7.8.8:\n - Make --fancy default for windows users.\n7.8.7:\n - Make resolver use client python for setup.py egg_info (very fancy).\n - Fix a nasty windows bug.\n - add --completion.\n - add --man.\n7.8.6:\n - Don't import code automatically, only use -c ..\n7.8.5:\n - Edge case.\n7.8.4:\n - Flake8 checking with check --style!\n7.8.3:\n - $ pipenv check --unused.\n7.8.2:\n - Fallback to toml parser for absurdly large files.\n7.8.1:\n - Catch all exceptions in pipreqs.\n7.8.0:\n - Packaging fix.\n7.7.9:\n - Ignore bad packages with -c.\n7.7.8:\n - Minor bug fix.\n7.7.7:\n - $ pipenv install -c .\n7.7.6:\n - Fix a very very minor UX bug.\n7.7.5:\n - No longer eat editables, as pip-tools does it for us now.\n7.7.4:\n - Install VCS deps into the virtualenv's src directory, not into the current directory.\n7.7.3:\n - Fix --three on Windows.\n7.7.2:\n - Bug fixes.\n7.7.1:\n - Bug fixes.\n - Improvements to --index support for requirements imports.\n7.7.0:\n - Improved update caching mechanism.\n - Only prompt for spelling correction in interactive sessions.\n - Cleanup -e.\n7.6.9:\n - Change --two, and --three to use --python 2 and --python 3 under the hood.\n - This restores --two / --three usage on windows.\n7.6.8:\n - `pipenv install -r requirements.txt --dev` now works.\n7.6.7:\n - New less-fancy progress bars (for linux users, specifically).\n - Support --python 3.\n7.6.6:\n - Packaging problem.\n7.6.5:\n - Patched vendored 'safety' package to remove yaml dependency — should work on all Pythons now.\n7.6.4:\n - Extensive integration test suite.\n - Don't suggest autocorrections as often.\n - Cleanups.\n - Don't depend on setuptools anymore.\n7.6.3:\n - Cleanups.\n7.6.2:\n - Support for install/lock --pre.\n7.6.1:\n - Fix a nasty bug.\n7.6.0:\n - PEP 508 marker support for packages!\n - Better verbose mode for install.\n - Fix a nasty bug.\n7.5.1:\n - Skip the resolver for pinned versions (this comes up a lot).\n - Maximum subprocesses (configurable) is now 8.\n7.5.0:\n - Deprecate shell -c mode.\n - Make a new shell --fancy mode (old default mode).\n - Introduce PIPENV_SHELL_FANCY.\n - Introduce `pipenv --envs`.\n7.4.9:\n - Improvements to PIPENV_DEFAULT_PYTHON_VERSION.\n - Improvements to auto-suggestions.\n - Fix nasty bug with failing dependencies.\n7.4.8:\n - PIPENV_DEFAULT_PYTHON_VERSION\n7.4.7:\n - install --sequential, for boring people.\n - PIPENV_DONT_LOAD_ENV.\n - Fix for prettytoml.\n - Don't add -e reqs to lockfile, as they're already present.\n7.4.6:\n - Specify a specific index for a specific dependency.\n7.4.5:\n - Support for custom indexes!\n - Random bugfixes.\n7.4.4:\n - PIPENV_PIPFILE environment variable support.\n - --site-packages flag, for the crazy at heart.\n - Installation concurrency on Windows.\n - make `graph --json` consistent with `graph`.\n - Much better support for suggesting package names.\n - Updated to pipfile spec 4, support for path= for relative package names.\n - Import sources from requirements files.\n - Cleanup stderr/stdout.\n - 'pipenv check' only reports safety now for Python 3.\n7.4.3:\n - Download/install things concurrently.\n7.4.2:\n - Fix a nasty pyenv bug.\n7.4.1:\n - `graph --json`.\n7.4.0:\n - `pipenv --where` fix.\n - Other general improvements.\n7.3.9:\n - Packaging fix.\n7.3.8:\n - Packaging fix.\n7.3.7:\n - Automatic support for .env files!\n - Fuzzy finding of popular package names, for typos. Auto-suggested corrections for popular packages.\n - Bug fixes.\n7.3.6:\n - Fix VCS dependency resolution.\n7.3.5:\n - Fix packaging.\n7.3.4:\n - An error occurred.\n7.3.3:\n - Pipenv check now includes security vulnerability disclosures!\n7.3.2:\n - Vastly improved support for VCS dependencies.\n7.3.1:\n - Advanced pyenv minor version support.\n - Added support for \"full_python_version\".\n - Added support for specifying minor versions of Python with `--python`.\n - Removed \"considering this to be project home\" messaging from `pipenv install`.\n7.3.0:\n - Added support for grabbing dependencies from -e requirements into dependency graph.\n7.2.9:\n - Bug fixes.\n7.2.8:\n - Vast improvements to python finding abilities (multiple pythons with the same name are now detected).\n7.2.7:\n - Automatically convert outline TOML tables to inline tables (losing comments in the process).\n - Bug fixes.\n7.2.6:\n - Fix pip execution from within existing virtualenvs.\n7.2.5:\n - Always tell patched pip what version of Python we're using.\n7.2.4:\n - Improve compatibility with --system.\n - Improve automatic --system use within shell spawning (disallowing it).\n7.2.3:\n - Courtesy notice when running in a virtualenv.\n7.2.2:\n - Improvements to pyenv detection.\n - Refactorings, and general improvements\n7.2.1:\n - Bug fix.\n7.2.0:\n - Automatically install Pythons, if they aren't available and pyenv is setup!\n - Fixes for when a requirements.txt file contains an !.\n - Support for relative package paths (that wasn't easy either).\n - Bug fixes.\n7.1.1:\n - Fixes for windows (full compatibility restored — sorry!).\n - Catch if graph is being run outside of a project directory.\n - Catch if self-updater doesn't get a clean response from PyPI.\n - Support Miniconda's `python --version` format\n7.1.0:\n - Inline TOML tables for things like requests[security]!\n - Attempt to preserve comments in Pipfiles.\n7.0.6:\n - NO_SPIN is now automatic when CI is set.\n - Additionally, vendor pip (a patched version) for doing advanced dependency resolution.\n7.0.5:\n - Depend on latest version of pip.\n7.0.4:\n - Bug fix.\n7.0.3:\n - Windows fixes.\n7.0.2:\n - Tell pip we're using the required Python version, with trickery, for dependency resolution.\n - Dev dependencies are now read from a lockfile before default dependencies, so\n   any mismatches will prefer default to develop.\n - Add support for extras_require in Pipfile for vcs urls.\n - Warn if 'which' is not found on the system.\n - Warn if Pew or Virtualenv isn't in the PATH.\n - More consistent stderr output.\n7.0.1:\n - [requires] python_version is now set for new projects, automatically\n   if a version of Python was specified.\n - That wasn't easy.\n7.0.0:\n - New path handling for --python, versions like '3.6' are now supported.\n - [requires] python_version is automatically honored.\n6.2.9:\n - Bug fix.\n6.2.8:\n - Bug fix.\n6.2.7:\n - pip run --system is now default.\n6.2.6:\n - Snakes, all the way down (and easter eggs for holidays!)\n - Much improved CLI output.\n - Introduction of PIPENV_HIDE_EMOJIS environment variable.\n - Guide users to set LANG and LC_ALL.\n6.2.5:\n - Bug fix for 2.7.\n6.2.4:\n - UX Improvements.\n - Install un-installable dependencies, anyway.\n6.2.3:\n - Bug fixes and improvements.\n - Add refs to lockfile for VCS dependencies.\n - Don't re-capitalize URLs.\n - Specify a requirements file to import from, with install --requirements / -r\n - Install dependencies for VCS installs.\n6.2.2:\n - Bug fix.\n - Support for passwords in git URLs.\n6.2.1:\n - Quick fix.\n6.2.0:\n - Support for arbitrary files (e.g. pipenv install URL)!\n - $ pipenv graph!\n - $ pipenv run --system ipython.\n - Skip virtualenv creation when --system is passed to install.\n - Removal of lock --legacy.\n - Improvements to locking mechanism integrity.\n - Introduction of $ pipenv --jumbotron.\n - Internal refactoring/code reduction.\n6.1.6:\n - Fix for Windows.\n6.1.5:\n - Grab hashes for un-grabbable hashes.\n6.1.4:\n - New update via $ pipenv --update, instead.\n6.1.3:\n - Skip validation of Pipfiles, massive speedup for far-away users.\n - Other speed-ups.\n6.1.1:\n - Bug fix.\n6.1.0:\n - Self–updating! Very fancy. $ pipenv update.\n - Verbose mode for update, install.\n6.0.3:\n - Major bug fix.\n - Fix for Daniel Ryan's weird corner case.\n6.0.2:\n - Fix Python 2 regression.\n6.0.1:\n - Minor (major) bug fix.\n6.0.0:\n - New locking functionality — support for multiple hashes per release!\n - Hashes are now default, everywhere, once again! We figured it out :)\n - Pipenv talks to the PyPI (Warehouse) API now for grabbing hashes.\n - --hashes flag removed.\n - Upgraded to Pipfile spec 2.\n - New --legacy mode for lock.\n5.4.3:\n - Fix for windows.\n5.4.2:\n - Compatibility improvement with `run`.\n5.4.1:\n - Fix for packaging.\n - $PIPENV_SKIP_VALIDATION.\n5.4.0:\n - Automatically load PATH from virtualenv, before running `pipenv shell`.\n - Addition of `pipenv lock --verbose`.\n - Vendor 'background' library.\n5.3.5:\n - Addition of update --dry-run.\n - Removal of install --lock option.\n5.3.4:\n - Fix pip index passing.\n5.3.3:\n - Automatic notification of version updates.\n5.3.2:\n - Automatic locking after install/uninstall (because it's fast now!)\n5.3.1:\n - Improvements for windows.\n5.3.0:\n - Mega fast pipenv lock!\n - Drop of Python 2.6.\n5.2.0:\n - Introduce install --skip-lock.\n - Bugfixes.\n5.1.3:\n - Updated delegator.py to 0.0.13\n5.1.2:\n - Add missing cacerts.pem file to MANIFEST.in\n - Improve error message when running `pipenv shell` multiple times.\n - Fixed translation for editable installs from requirements.txt to Pipfile.\n5.1.1:\n - Bug fix\n5.1.0:\n - Add PIPENV_TIMEOUT environment variable for custom timeouts.\n - Remove PIPENV_DEFAULT_THREE.\n5.0.0:\n - Automatically utilize virtualenvs when they are activated.\n - PIPENV_DEFAULT_THREE.\n4.1.4:\n - Fix regression in `pipenv lock -r` functionality.\n4.1.3:\n - Fix support for `pipenv install -e .`\n4.1.2:\n - Lazy load requirements for speed improvements.\n - Better messaging on failed installs.\n - More accurate logging for installation progress.\n4.1.1:\n - Remove old references\n4.1.0:\n - Properly handle extras on requirements with versions.\n - Accept the -e (editable) flag in pipenv install.\n - Progress Bars!\n - Minor optimizations to the install process.\n4.0.1:\n - Pin Sphinx requirement at a Python 2.6 compatible version.\n4.0.0:\n - Make --no-hashes default, introduce --hashes.\n - Fix for key error when uninstalling [dev-]packages\n3.6.2:\n - Fix bug introduced into `pipenv install` in 3.6.1.\n3.6.1:\n - pipenv install now works if only a requirements.txt is present.\n - `pipenv uninstall` now uninstalls from dev-packages as intended.\n3.6.0:\n - Make --two/--three handling more consistent.\n - Update vendored delegator.py.\n - Fix erroneous error messages in certain command combinations.\n - Better version number handling for post releases.\n - Bug fixes for some Windows environments (specifically Appveyor).\n3.5.6:\n - Fix broken help prompt.\n3.5.5:\n - Automatically cleanup virtualenv on keyboard interrupt.\n - General improvements.\n3.5.4:\n - Bug fixes.\n - Message formatting cleanup.\n3.5.3:\n - Add six to vendored libraries.\n - Support for --ignore-hashes added to install command.\n - Support for --no-hashes for lock command.\n3.5.2:\n - Vendor all the things!\n - get-pipenv.py.\n3.5.1:\n - Basic Windows support!\n3.5.0\n - Fully support multiple sources in Pipfile.\n - Support multiple project directories with same name.\n - Better support for non-standard project directory names.\n - Support for VCS dependencies.\n3.4.2\n - Attempt installing from all sources in Pipfile.\n - Fix bug with accidental deletion of Pipfile contents.\n - Update dependencies to work correctly with pipsi.\n3.4.1\n - --no-interactive mode now activates automatically when needed.\n3.4.0\n - --no-interactive mode added.\n - Properly handle non-standard versioning schemes including Epochs.\n - Handle percent-encoded filenames.\n - Fixed Bug with Pipfile initializations.\n - Streamlined file locations for projects.\n - Improved package name resolution.\n - Testing!\n3.3.6:\n - $ pipenv --venv option.\n - $ pipenv --rm option.\n3.3.5:\n- Disable spinner by setting PIPENV_NOSPIN=1 environment variable.\n3.3.4:\n - Fix PIPENV_VENV_IN_PROJECT mode.\n - Fix PIPENV_SHELL_COMPAT mode.\n3.3.3:\n - Spinners!\n - Shell compatibility mode ($ pipenv shell -c).\n - Classic virtualenv location (within project) mode.\n - Removal of $ pipenv install --requirements.\n - Addition of $ pipenv lock -r.\n3.3.2:\n - User-configurable max-depth for Pipfile searching.\n - Bugfix.\n3.3.1:\n - Bugfix for install.\n3.3.0:\n - Use pew to manage virtual environments.\n - Improved dashed version parsing.\n3.2.14:\n - Give --python precedence over --three/--two.\n - Improvements for lockfile output for specific problematic packages.\n - Bug fixes.\n3.2.13:\n - Improved stderr output for --requirements.\n - Bug fixes.\n3.2.12:\n - Disable colors by setting PIPENV_COLORBLIND=1 environment variable.\n3.2.11:\n - Properly use pinned versions from Pipfile in Pipfile.lock\n3.2.10:\n - Fix bugs.\n3.2.9:\n - Remove temporary requirements.txt after installation.\n - Add support for --python option, for specifying any version of Python.\n - Read source Pipfile.lock.\n3.2.8:\n - Lock before installing all dependencies, if lockfile isn't present.\n3.2.7:\n - Cache proper names for great speed increases.\n3.2.6:\n - Bug fixes.\n3.2.5:\n - Significant speed improvements for pipenv run and pipenv shell.\n - Shell completion via click-completion.\n - Perform package name normalization as best effort attempt.\n3.2.4:\n - $ pipenv uninstall --all\n - Don't uninstall setuptools, wheel, pip, or six.\n - Improvements to Pipfile re-ordering when writing.\n - Fix proper casing mechanism.\n - Prevent invalid shebangs with Homebrew Python.\n - Fix parsing issues with https://pypi.org/simple.\n - Depend on 'pipfile' package.\n3.2.3:\n - $ pip uninstall --dev\n - Minor refactoring.\n - Improved error messaging for missing SHELL environment variables.\n3.2.2:\n - Better support for fish terminal.\n3.2.1:\n - Ensure proper casing of all Pipfile-specified packages.\n3.2.0:\n - Improved proper casing handling for mis-named packages.\n - Support for $ pipenv install django-debug-toolbar.\n - Minor cleanups.\n - Fix for Python 3.\n3.1.9:\n - Bug fix.\n3.1.8:\n - Bug fix.\n3.1.7:\n - Actual Python 3 fix.\n3.1.6:\n - Python 3 fix.\n3.1.5:\n - Proper name resolver!\n3.1.4:\n - $ pip install --requirements.\n3.1.3:\n - Python 3 fix.\n3.1.2:\n - Python 3 fix.\n3.1.1:\n - Improved pip output (integrate with tool better).\n - Pass exit code of $ pipenv run commands.\n3.1.0:\n - Check hashes upon installation!\n3.0.1:\n - Oops, version jump.\n - Fix for $ pip uninstall --lock.\n3.0.0:\n - Speed of locking improved.\n - Lock now uses downloads instead of installation functionality.\n - Lock fix.\n - Removed $ pipenv install -r functionality.\n - Removal of $ pipenv lock --dev.\n - Addition of $ pipenv install/uninstall --lock.\n - Preliminary (non-enforced) hash functionality.\n0.2.9:\n - Enhanced–enhanced PEP 508 checking capabilities!\n0.2.8:\n - Enhanced PEP 508 checking capabilities!\n0.2.7:\n - Better workflow options for --three / --two.\n0.2.6:\n - Fix for bash shell invocation.\n - Better support for comments in requirements.txt files.\n - Support for Pipfile's [[source]].\n - Pretty colors for help.\n - Refactors.\n0.2.5:\n - Enhanced terminal resizing.\n - Cleanups from PRs: typos.\n - Better --where output when no Pipfile is present.\n - Fix for Python 3.\n - Rely directly on pexpect.\n0.2.4:\n - Fix for bash shell.\n0.2.3:\n - Support for Fish and Csh shells.\n0.2.1:\n - Trove classifiers.\n0.2.0:\n - Added support for $ pipenv --three / --two, for initializing virtualenvs with a specific Python version.\n - Added support for VCS-backed installs, including editables.\n - TODO: Still need to support non-git-backed VCS installations in Pipfiles.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.068359375,
          "content": "The MIT License (MIT)\n\nCopyright 2020-2022 Python Packaging Authority\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 1.001953125,
          "content": "include LICENSE README.md CONTRIBUTING.md CHANGELOG.md NOTICES HISTORY.txt\ninclude Makefile pyproject.toml get-pipenv.py *.yml\ninclude examples/Pipfil*\ninclude *.md\n\nrecursive-include pipenv LICENSE LICENSE* *LICENSE* *COPYING* t32.exe t64.exe w32.exe w64.exe cacert.pem\nrecursive-include pipenv *.cfg\nrecursive-include pipenv/vendor *.c\nrecursive-include pipenv *.md *.APACHE *.BSD\nrecursive-include pipenv Makefile\nrecursive-include pipenv/vendor vendor.txt\nrecursive-include pipenv *.json\nrecursive-include pipenv *.rst\n\ninclude pipenv/patched/pip/_vendor/vendor.txt\ninclude  pipenv/patched/patched.txt\ninclude pipenv/vendor/Makefile\ninclude pipenv/pipenv.1\n\n\nrecursive-include docs Makefile *.rst *.py *.bat\nrecursive-include docs/_templates *.html\nrecursive-include docs/_static *.js *.css *.png\nrecursive-exclude tests/test_artifacts *.pyd *.so *.pyc *.egg-info PKG-INFO\n\nprune .azure-pipelines\nprune .github\nprune pipenv/vendor/importlib_metadata/tests\nprune pipenv/vendor/importlib_resources/tests\n\nexclude examples/*\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.2509765625,
          "content": "SHELL := bash\nget_venv_dir:=$(shell mktemp -d 2>/dev/null || mktemp -d -t 'tmpvenv')\nvenv_dir := $(get_venv_dir)/pipenv_venv\nvenv_file := $(CURDIR)/.test_venv\nget_venv_path =$(file < $(venv_file))\n# This is how we will build tag-specific wheels, e.g. py36 or py37\nPY_VERSIONS:= 3.8 3.9 3.10 3.11\nBACKSLASH = '\\\\'\n# This is how we will build generic wheels, e.g. py2 or py3\nINSTALL_TARGETS := $(addprefix install-py,$(PY_VERSIONS))\nCLEAN_TARGETS := $(addprefix clean-py,$(PY_VERSIONS))\nDATE_STRING := $(shell date +%Y.%m.%d)\nTHIS_MONTH_DATE := $(shell date +%Y.%m.01)\nNEXT_MONTH_DATE := $(shell date -d \"+1 month\" +%Y.%m.01)\nPATCHED_PIP_VERSION := $(shell awk '/__version__/{gsub(/\"/,\"\",$$3); print $$3}' pipenv/patched/pip/__init__.py)\nGITDIR_STAMPFILE := $(CURDIR)/.git-checkout-dir\ncreate_git_tmpdir = $(shell mktemp -dt pipenv-vendor-XXXXXXXX 2>/dev/null || mktemp -d 2>/dev/null)\nwrite_git_tmpdir = $(file > $(GITDIR_STAMPFILE),$(create_git_tmpdir))\nget_checkout_dir = $(file < $(GITDIR_STAMPFILE))\nget_checkout_subdir = $(addprefix $(get_checkout_dir), $(1))\npip-checkout-dir = $(get_checkout_dir)/patch-pip\nPY ?= python\n\nformat:\n\tblack pipenv/*.py\n\n.PHONY: install\ninstall:\n\tpip install -e .\n\ninstall.stamp: install\n\t@touch install.stamp\n\n.PHONY: install-py%\ninstall-py%: install.stamp\n\t@echo building for $(addprefix python, $(subst install-py,,$@))\n\tPIPENV_PYTHON=$(subst install-py,,$@) pipenv install --dev\n\ninstall-virtualenvs.stamp: ${INSTALL_TARGETS}\n\t@touch install-virtualenvs.stamp\n\n.PHONY: ramdisk\nramdisk: SIZE ?= 4g\nramdisk:\n\tsudo mkdir -p /mnt/ramdisk\n\tsudo mount -t tmpfs -o size=$(SIZE) tmpfs /mnt/ramdisk\n\tsudo chown -R ${USER}:${USER} /mnt/ramdisk\n\n.PHONY: ramdisk-virtualenv\nramdisk-virtualenv: ramdisk\n\t[ ! -e \"/mnt/ramdisk/.venv/bin/activate\" ] && \\\n\t\t$(PY) -m venv /mnt/ramdisk/.venv\n\techo \"/mnt/ramdisk/.venv\" > $(venv_file)\n\n.PHONY: virtualenv\nvirtualenv:\n\t[ ! -e $(venv_dir) ] && rm -rvf $(venv_file) && python -m venv $(venv_dir)\n\t@echo $(venv_dir) > $(venv_file)\n\n.PHONY: test-install\ntest-install:\ntest-install: $(if $(RAMDISK), ramdisk-virtualenv virtualenv)\n\t. $(get_venv_path)/bin/activate && \\\n\t\tpython -m pip install --upgrade pip -e .[tests,dev] && \\\n\t\tpipenv install --dev\n\n.PHONY: submodules\nsubmodules:\n\tgit submodule sync\n\tgit submodule update --init --recursive\n\n# Run the tests within ramdisk by setting RAMDISK=1\n# e.g make tests RAMDISK=1\n.PHONY: tests\ntests: parallel ?= -n auto\ntests: suite ?=\ntests: submodules test-install\n\tsource $(get_venv_path)/bin/activate && \\\n\t\tpipenv run pytest -ra $(parallel) -vvv --full-trace --tb=long $(suite)\n\n.PHONY: vendor\nvendor: virtualenv\n\t. $(get_venv_path)/bin/activate && \\\n\t\tpython -m pip install invoke && \\\n\t\tpython -m pip install -e .[dev] && \\\n\t\tpython -m invoke vendoring.update\n\n.PHONY: test-specific\ntest-specific: submodules virtualenv test-install\n\t. $(get_venv_path)/bin/activate && pipenv run pytest -ra -k '$(tests)'\n\n.PHONY: retest\nretest: parallel ?= -n auto\nretest: virtualenv submodules test-install\n\t. $(get_venv_path)/bin/activate && pipenv run pytest $(parallel) -ra -k 'test_check_unused or test_install_editable_git_tag or test_get_vcs_refs or test_skip_requirements_when_pipfile or test_editable_vcs_install or test_basic_vcs_install or test_git_vcs_install or test_ssh_vcs_install or test_vcs_can_use_markers' -vvv --full-trace --tb=long\n\n.PHONY: build\nbuild: install-virtualenvs.stamp install.stamp\n\tPIPENV_PYTHON=3.8 pipenv run python -m build\n\n.PHONY: update-version\nupdate-version:\n\t@sed -i \"s/^__version__ = .\\+$\\/__version__ = \\\"$(DATE_STRING)\\\"/g\" ./pipenv/__version__.py\n\n.PHONY: update-prerelease-version\nupdate-prerelease-version:\n\t@sed -i \"s/^__version__ = .\\+$\\/__version__ = \\\"$(THIS_MONTH_DATE).a1\\\"/g\" ./pipenv/__version__.py\n\n.PHONY: pre-bump\npre-bump:\n\t@sed -i \"s/^__version__ = .\\+$\\/__version__ = \\\"$(NEXT_MONTH_DATE).dev0\\\"/g\" ./pipenv/__version__.py\n\n.PHONY: lint\nlint:\n\truff .\n\nman:\n\t$(MAKE) -C docs $@\n\n.PHONY: check\ncheck: build.stamp\n\tpipenv run twine check dist/* && pipenv run check-manifest .\n\n.PHONY: upload-test\nupload-test: build\n\ttwine upload --repository=testpypi dist/*\n\n.PHONY: clean-py%\nclean-py%:\n\t@echo \"cleaning environment for $@...\"\n\tPIPENV_PYTHON=\"$(subst clean-py,,$@)\" pipenv --rm\n\n.PHONY: cleanbuild\ncleanbuild:\n\t@echo \"cleaning up existing builds...\"\n\t@rm -rf build/ dist/\n\t@rm -rf build.stamp\n\n.PHONY: clean\nclean:\n\trm -rf install.stamp build.stamp install-virtualenvs.stamp .git-checkout-dir\n\n.PHONY: gitclean\ngitclean:\n\t@echo \"Cleaning up git trees...\"\n\t@rm -rf $(file < .git-checkout-dir)\n\t@echo \"Cleaning up git checkout stamp\"\n\t@rm -rf .git-checkout-dir\n\n.git-checkout-dir:\n\t@echo \"Creating git repo temp file\"\n\t@echo \"Creating git checkout stamp file at .git-checkout-dir\"\n\t@echo $(file > $(CURDIR)/.git-checkout-dir,$(shell mktemp -dt pipenv-vendor-XXXXXXXX 2>/dev/null || mktemp -d 2>/dev/null))\n\n.PHONY: clone-pip\nclone-pip: .git-checkout-dir\n\t[ -e $(pip-checkout-dir) ] && echo \"Pip already exists, moving on!\" || git clone https://github.com/pypa/pip.git $(pip-checkout-dir) -b $(PATCHED_PIP_VERSION)\n\n.PHONY: patch-pip\npatch-pip: clone-pip\n\t@find $(CURDIR)/tasks/vendoring/patches/patched/ -regex \".*/pip[0-9]+.patch\" -exec cp {} $(pip-checkout-dir) \\;\n\t@sed -i -r 's:([a-b]\\/)pipenv/patched/:\\1src/:g' $(pip-checkout-dir)/*.patch\n\t@find $(CURDIR)/tasks/vendoring/patches/patched/ -regex \".*/_post-pip-[^/\\.]*.patch\" -exec cp {} $(pip-checkout-dir)/ \\;\n\t@sed -i -r 's:([a-b]\\/)pipenv/patched/not:\\1src/:g' $(pip-checkout-dir)/_post-*.patch\n\t@cd $(pip-checkout-dir)/ && git apply --ignore-whitespace --verbose pip*.patch\n\t@echo \"Head to $(pip-checkout-dir) to update the pip patches to the latest version\"\n\n.PHONY: patches\npatches: patch-pip\n\n.PHONY: reimport-pip-patch\nreimport-pip-patch:\n\t@sed -i -r 's:([a-b]\\/)src/:\\1pipenv/patched/not:g' $(pip-checkout-dir)/_post-*.patch\n\t@sed -i -r 's:([a-b]\\/)src/:\\1pipenv/patched/:g' $(pip-checkout-dir)/pip*.patch\n\t@find $(pip-checkout-dir) -maxdepth 1 -regex \".*/pip[0-9]+.patch\" -exec cp {} $(CURDIR)/tasks/vendoring/patches/patched/ \\;\n\t@find $(pip-checkout-dir) -maxdepth 1 -regex \".*/_post-pip-[^/\\.]*.patch\" -exec cp {} $(CURDIR)/tasks/vendoring/patches/patched/ \\;\n\n\n.PHONY: pypi-server\npypi-server: SERVER ?= gunicorn\npypi-server:\n\tpipenv run pypi-server run --server $(SERVER) -v --host=0.0.0.0 --port=8080 --hash-algo=sha256 --disable-fallback ./tests/pypi/ ./tests/fixtures\n"
        },
        {
          "name": "NOTICES",
          "type": "blob",
          "size": 0.21484375,
          "content": "The contents of the vendor and patched directories are subject to different licenses\nthan the rest of this project.\n\nTheir respective licenses can be looked up at pypi.python.org or in their\ncorresponding LICENSE files.\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 1.0361328125,
          "content": "[[source]]\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[dev-packages]\npipenv = {path = \".\", editable = true, extras = [\"tests\", \"dev\"]}\nsphinx = \"*\"\nsphinx-click = \"==4.*\"\nsphinxcontrib-spelling = \"==7.*\"\nclick = \"==8.0.3\"\nstdeb = {version=\"*\", sys_platform = \"== 'linux'\"}\nzipp = {version = \"==3.6.0\", markers = \"python_version < '3.10'\"}\npre-commit = \"==2.*\"\natomicwrites = {version = \"*\", sys_platform = \"== 'win32'\"}\npytest-cov = \"==4.*\"\ntyping-extensions = \"==4.*\"\nwaitress = {version = \"*\", sys_platform = \"== 'win32'\"}\ngunicorn = {version = \"*\", sys_platform = \"== 'linux'\"}\nparse = \"*\"\nimportlib-metadata = \"*\"\ncolorama= {version = \"*\", sys_platform = \"== 'win32'\"}\nmyst-parser = {extras = [\"linkify\"], version = \"*\"}\ninvoke = \"*\"\nexceptiongroup = \"==1.1.0\"\ntomli = \"*\"\npyyaml = \"==6.0.1\"\nbuild = \"*\"\ntwine = \"*\"\nsemver = \"*\"\npypiserver = {ref = \"pipenv-313\", git = \"https://github.com/matteius/pypiserver.git\"}\n\n[packages]\npytz = \"*\"\n\n[scripts]\ntests = \"bash ./run-tests.sh\"\ntest = \"pytest -vvs\"\n\n[pipenv]\nallow_prereleases = true\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 59.5029296875,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"2ec5439e5085c244b5ba09d4b14499978736d6631395ebbceb4ee026c1aa4223\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {},\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.org/simple\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"pytz\": {\n            \"hashes\": [\n                \"sha256:2aa355083c50a0f93fa581709deac0c9ad65cca8a9e9beac660adcbd493c798a\",\n                \"sha256:31c7c1817eb7fae7ca4b8c7ee50c72f93aa2dd863de768e1ef4245d426aa0725\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2024.2\"\n        }\n    },\n    \"develop\": {\n        \"alabaster\": {\n            \"hashes\": [\n                \"sha256:c00dca57bca26fa62a6d7d0a9fcce65f3e026e9bfe33e9c538fd3fbb2144fd9e\",\n                \"sha256:fc6786402dc3fcb2de3cabd5fe455a2db534b371124f1f21de8731783dec828b\"\n            ],\n            \"markers\": \"python_version >= '3.10'\",\n            \"version\": \"==1.0.0\"\n        },\n        \"arpeggio\": {\n            \"hashes\": [\n                \"sha256:c790b2b06e226d2dd468e4fbfb5b7f506cec66416031fde1441cf1de2a0ba700\",\n                \"sha256:f7c8ae4f4056a89e020c24c7202ac8df3e2bc84e416746f20b0da35bb1de0250\"\n            ],\n            \"version\": \"==2.0.2\"\n        },\n        \"atomicwrites\": {\n            \"hashes\": [\n                \"sha256:81b2c9071a49367a7f770170e5eec8cb66567cfbbc8c73d20ce5ca4a8d71cf11\"\n            ],\n            \"version\": \"==1.4.1\"\n        },\n        \"attrs\": {\n            \"hashes\": [\n                \"sha256:5cfb1b9148b5b086569baec03f20d7b6bf3bcacc9a42bebf87ffaaca362f6346\",\n                \"sha256:81921eb96de3191c8258c199618104dd27ac608d9366f5e35d011eae1867ede2\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==24.2.0\"\n        },\n        \"babel\": {\n            \"hashes\": [\n                \"sha256:368b5b98b37c06b7daf6696391c3240c938b37767d4584413e8438c5c435fa8b\",\n                \"sha256:d1f3554ca26605fe173f3de0c65f750f5a42f924499bf134de6423582298e316\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.16.0\"\n        },\n        \"backports.tarfile\": {\n            \"hashes\": [\n                \"sha256:77e284d754527b01fb1e6fa8a1afe577858ebe4e9dad8919e34c862cb399bc34\",\n                \"sha256:d75e02c268746e1b8144c278978b6e98e85de6ad16f8e4b0844a154557eca991\"\n            ],\n            \"markers\": \"python_version < '3.12'\",\n            \"version\": \"==1.2.0\"\n        },\n        \"beautifulsoup4\": {\n            \"hashes\": [\n                \"sha256:7e05ad0b6c26108d9990e2235e8a9b4e2c03ead6f391ceb60347f8ebea6b80ba\",\n                \"sha256:c684ddec071aa120819889aa9e8940f85c3f3cdaa08e23b9fa26510387897bd5\"\n            ],\n            \"version\": \"==4.13.0b2\"\n        },\n        \"black\": {\n            \"hashes\": [\n                \"sha256:064101748afa12ad2291c2b91c960be28b817c0c7eaa35bec09cc63aa56493c5\",\n                \"sha256:0945e13506be58bf7db93ee5853243eb368ace1c08a24c65ce108986eac65915\",\n                \"sha256:11c410f71b876f961d1de77b9699ad19f939094c3a677323f43d7a29855fe326\",\n                \"sha256:1c7b8d606e728a41ea1ccbd7264677e494e87cf630e399262ced92d4a8dac940\",\n                \"sha256:1d06691f1eb8de91cd1b322f21e3bfc9efe0c7ca1f0e1eb1db44ea367dff656b\",\n                \"sha256:3238f2aacf827d18d26db07524e44741233ae09a584273aa059066d644ca7b30\",\n                \"sha256:32daa9783106c28815d05b724238e30718f34155653d4d6e125dc7daec8e260c\",\n                \"sha256:35d1381d7a22cc5b2be2f72c7dfdae4072a3336060635718cc7e1ede24221d6c\",\n                \"sha256:3a150542a204124ed00683f0db1f5cf1c2aaaa9cc3495b7a3b5976fb136090ab\",\n                \"sha256:48f9d345675bb7fbc3dd85821b12487e1b9a75242028adad0333ce36ed2a6d27\",\n                \"sha256:50cb33cac881766a5cd9913e10ff75b1e8eb71babf4c7104f2e9c52da1fb7de2\",\n                \"sha256:562bd3a70495facf56814293149e51aa1be9931567474993c7942ff7d3533961\",\n                \"sha256:67de8d0c209eb5b330cce2469503de11bca4085880d62f1628bd9972cc3366b9\",\n                \"sha256:6b39abdfb402002b8a7d030ccc85cf5afff64ee90fa4c5aebc531e3ad0175ddb\",\n                \"sha256:6f3c333ea1dd6771b2d3777482429864f8e258899f6ff05826c3a4fcc5ce3f70\",\n                \"sha256:714290490c18fb0126baa0fca0a54ee795f7502b44177e1ce7624ba1c00f2331\",\n                \"sha256:7c3eb7cea23904399866c55826b31c1f55bbcd3890ce22ff70466b907b6775c2\",\n                \"sha256:92c543f6854c28a3c7f39f4d9b7694f9a6eb9d3c5e2ece488c327b6e7ea9b266\",\n                \"sha256:a6f6886c9869d4daae2d1715ce34a19bbc4b95006d20ed785ca00fa03cba312d\",\n                \"sha256:a8a968125d0a6a404842fa1bf0b349a568634f856aa08ffaff40ae0dfa52e7c6\",\n                \"sha256:c7ab5790333c448903c4b721b59c0d80b11fe5e9803d8703e84dcb8da56fec1b\",\n                \"sha256:e114420bf26b90d4b9daa597351337762b63039752bdf72bf361364c1aa05925\",\n                \"sha256:e198cf27888ad6f4ff331ca1c48ffc038848ea9f031a3b40ba36aced7e22f2c8\",\n                \"sha256:ec751418022185b0c1bb7d7736e6933d40bbb14c14a0abcf9123d1b159f98dd4\",\n                \"sha256:f0bd2f4a58d6666500542b26354978218a9babcdc972722f4bf90779524515f3\"\n            ],\n            \"version\": \"==23.3.0\"\n        },\n        \"build\": {\n            \"hashes\": [\n                \"sha256:119b2fb462adef986483438377a13b2f42064a2a3a4161f24a0cca698a07ac8c\",\n                \"sha256:277ccc71619d98afdd841a0e96ac9fe1593b823af481d3b0cea748e8894e0613\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==1.2.2\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:922820b53db7a7257ffbda3f597266d435245903d80737e34f8a45ff3e3230d8\",\n                \"sha256:bec941d2aa8195e248a60b31ff9f0558284cf01a52591ceda73ea9afffd69fd9\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2024.8.30\"\n        },\n        \"cfgv\": {\n            \"hashes\": [\n                \"sha256:b7265b1f29fd3316bfcd2b330d63d024f2bfd8bcb8b0272f8e19a504856c48f9\",\n                \"sha256:e52591d4c5f5dead8e0f673fb16db7949d2cfb3f7da4582893288f0ded8fe560\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==3.4.0\"\n        },\n        \"charset-normalizer\": {\n            \"hashes\": [\n                \"sha256:06435b539f889b1f6f4ac1758871aae42dc3a8c0e24ac9e60c2384973ad73027\",\n                \"sha256:06a81e93cd441c56a9b65d8e1d043daeb97a3d0856d177d5c90ba85acb3db087\",\n                \"sha256:0a55554a2fa0d408816b3b5cedf0045f4b8e1a6065aec45849de2d6f3f8e9786\",\n                \"sha256:0b2b64d2bb6d3fb9112bafa732def486049e63de9618b5843bcdd081d8144cd8\",\n                \"sha256:10955842570876604d404661fbccbc9c7e684caf432c09c715ec38fbae45ae09\",\n                \"sha256:122c7fa62b130ed55f8f285bfd56d5f4b4a5b503609d181f9ad85e55c89f4185\",\n                \"sha256:1ceae2f17a9c33cb48e3263960dc5fc8005351ee19db217e9b1bb15d28c02574\",\n                \"sha256:1d3193f4a680c64b4b6a9115943538edb896edc190f0b222e73761716519268e\",\n                \"sha256:1f79682fbe303db92bc2b1136016a38a42e835d932bab5b3b1bfcfbf0640e519\",\n                \"sha256:2127566c664442652f024c837091890cb1942c30937add288223dc895793f898\",\n                \"sha256:22afcb9f253dac0696b5a4be4a1c0f8762f8239e21b99680099abd9b2b1b2269\",\n                \"sha256:25baf083bf6f6b341f4121c2f3c548875ee6f5339300e08be3f2b2ba1721cdd3\",\n                \"sha256:2e81c7b9c8979ce92ed306c249d46894776a909505d8f5a4ba55b14206e3222f\",\n                \"sha256:3287761bc4ee9e33561a7e058c72ac0938c4f57fe49a09eae428fd88aafe7bb6\",\n                \"sha256:34d1c8da1e78d2e001f363791c98a272bb734000fcef47a491c1e3b0505657a8\",\n                \"sha256:37e55c8e51c236f95b033f6fb391d7d7970ba5fe7ff453dad675e88cf303377a\",\n                \"sha256:3d47fa203a7bd9c5b6cee4736ee84ca03b8ef23193c0d1ca99b5089f72645c73\",\n                \"sha256:3e4d1f6587322d2788836a99c69062fbb091331ec940e02d12d179c1d53e25fc\",\n                \"sha256:42cb296636fcc8b0644486d15c12376cb9fa75443e00fb25de0b8602e64c1714\",\n                \"sha256:45485e01ff4d3630ec0d9617310448a8702f70e9c01906b0d0118bdf9d124cf2\",\n                \"sha256:4a78b2b446bd7c934f5dcedc588903fb2f5eec172f3d29e52a9096a43722adfc\",\n                \"sha256:4ab2fe47fae9e0f9dee8c04187ce5d09f48eabe611be8259444906793ab7cbce\",\n                \"sha256:4d0d1650369165a14e14e1e47b372cfcb31d6ab44e6e33cb2d4e57265290044d\",\n                \"sha256:549a3a73da901d5bc3ce8d24e0600d1fa85524c10287f6004fbab87672bf3e1e\",\n                \"sha256:55086ee1064215781fff39a1af09518bc9255b50d6333f2e4c74ca09fac6a8f6\",\n                \"sha256:572c3763a264ba47b3cf708a44ce965d98555f618ca42c926a9c1616d8f34269\",\n                \"sha256:573f6eac48f4769d667c4442081b1794f52919e7edada77495aaed9236d13a96\",\n                \"sha256:5b4c145409bef602a690e7cfad0a15a55c13320ff7a3ad7ca59c13bb8ba4d45d\",\n                \"sha256:6463effa3186ea09411d50efc7d85360b38d5f09b870c48e4600f63af490e56a\",\n                \"sha256:65f6f63034100ead094b8744b3b97965785388f308a64cf8d7c34f2f2e5be0c4\",\n                \"sha256:663946639d296df6a2bb2aa51b60a2454ca1cb29835324c640dafb5ff2131a77\",\n                \"sha256:6897af51655e3691ff853668779c7bad41579facacf5fd7253b0133308cf000d\",\n                \"sha256:68d1f8a9e9e37c1223b656399be5d6b448dea850bed7d0f87a8311f1ff3dabb0\",\n                \"sha256:6ac7ffc7ad6d040517be39eb591cac5ff87416c2537df6ba3cba3bae290c0fed\",\n                \"sha256:6b3251890fff30ee142c44144871185dbe13b11bab478a88887a639655be1068\",\n                \"sha256:6c4caeef8fa63d06bd437cd4bdcf3ffefe6738fb1b25951440d80dc7df8c03ac\",\n                \"sha256:6ef1d82a3af9d3eecdba2321dc1b3c238245d890843e040e41e470ffa64c3e25\",\n                \"sha256:753f10e867343b4511128c6ed8c82f7bec3bd026875576dfd88483c5c73b2fd8\",\n                \"sha256:7cd13a2e3ddeed6913a65e66e94b51d80a041145a026c27e6bb76c31a853c6ab\",\n                \"sha256:7ed9e526742851e8d5cc9e6cf41427dfc6068d4f5a3bb03659444b4cabf6bc26\",\n                \"sha256:7f04c839ed0b6b98b1a7501a002144b76c18fb1c1850c8b98d458ac269e26ed2\",\n                \"sha256:802fe99cca7457642125a8a88a084cef28ff0cf9407060f7b93dca5aa25480db\",\n                \"sha256:80402cd6ee291dcb72644d6eac93785fe2c8b9cb30893c1af5b8fdd753b9d40f\",\n                \"sha256:8465322196c8b4d7ab6d1e049e4c5cb460d0394da4a27d23cc242fbf0034b6b5\",\n                \"sha256:86216b5cee4b06df986d214f664305142d9c76df9b6512be2738aa72a2048f99\",\n                \"sha256:87d1351268731db79e0f8e745d92493ee2841c974128ef629dc518b937d9194c\",\n                \"sha256:8bdb58ff7ba23002a4c5808d608e4e6c687175724f54a5dade5fa8c67b604e4d\",\n                \"sha256:8c622a5fe39a48f78944a87d4fb8a53ee07344641b0562c540d840748571b811\",\n                \"sha256:8d756e44e94489e49571086ef83b2bb8ce311e730092d2c34ca8f7d925cb20aa\",\n                \"sha256:8f4a014bc36d3c57402e2977dada34f9c12300af536839dc38c0beab8878f38a\",\n                \"sha256:9063e24fdb1e498ab71cb7419e24622516c4a04476b17a2dab57e8baa30d6e03\",\n                \"sha256:90d558489962fd4918143277a773316e56c72da56ec7aa3dc3dbbe20fdfed15b\",\n                \"sha256:923c0c831b7cfcb071580d3f46c4baf50f174be571576556269530f4bbd79d04\",\n                \"sha256:95f2a5796329323b8f0512e09dbb7a1860c46a39da62ecb2324f116fa8fdc85c\",\n                \"sha256:96b02a3dc4381e5494fad39be677abcb5e6634bf7b4fa83a6dd3112607547001\",\n                \"sha256:9f96df6923e21816da7e0ad3fd47dd8f94b2a5ce594e00677c0013018b813458\",\n                \"sha256:a10af20b82360ab00827f916a6058451b723b4e65030c5a18577c8b2de5b3389\",\n                \"sha256:a50aebfa173e157099939b17f18600f72f84eed3049e743b68ad15bd69b6bf99\",\n                \"sha256:a981a536974bbc7a512cf44ed14938cf01030a99e9b3a06dd59578882f06f985\",\n                \"sha256:a9a8e9031d613fd2009c182b69c7b2c1ef8239a0efb1df3f7c8da66d5dd3d537\",\n                \"sha256:ae5f4161f18c61806f411a13b0310bea87f987c7d2ecdbdaad0e94eb2e404238\",\n                \"sha256:aed38f6e4fb3f5d6bf81bfa990a07806be9d83cf7bacef998ab1a9bd660a581f\",\n                \"sha256:b01b88d45a6fcb69667cd6d2f7a9aeb4bf53760d7fc536bf679ec94fe9f3ff3d\",\n                \"sha256:b261ccdec7821281dade748d088bb6e9b69e6d15b30652b74cbbac25e280b796\",\n                \"sha256:b2b0a0c0517616b6869869f8c581d4eb2dd83a4d79e0ebcb7d373ef9956aeb0a\",\n                \"sha256:b4a23f61ce87adf89be746c8a8974fe1c823c891d8f86eb218bb957c924bb143\",\n                \"sha256:bd8f7df7d12c2db9fab40bdd87a7c09b1530128315d047a086fa3ae3435cb3a8\",\n                \"sha256:beb58fe5cdb101e3a055192ac291b7a21e3b7ef4f67fa1d74e331a7f2124341c\",\n                \"sha256:c002b4ffc0be611f0d9da932eb0f704fe2602a9a949d1f738e4c34c75b0863d5\",\n                \"sha256:c083af607d2515612056a31f0a8d9e0fcb5876b7bfc0abad3ecd275bc4ebc2d5\",\n                \"sha256:c180f51afb394e165eafe4ac2936a14bee3eb10debc9d9e4db8958fe36afe711\",\n                \"sha256:c235ebd9baae02f1b77bcea61bce332cb4331dc3617d254df3323aa01ab47bd4\",\n                \"sha256:cd70574b12bb8a4d2aaa0094515df2463cb429d8536cfb6c7ce983246983e5a6\",\n                \"sha256:d0eccceffcb53201b5bfebb52600a5fb483a20b61da9dbc885f8b103cbe7598c\",\n                \"sha256:d965bba47ddeec8cd560687584e88cf699fd28f192ceb452d1d7ee807c5597b7\",\n                \"sha256:db364eca23f876da6f9e16c9da0df51aa4f104a972735574842618b8c6d999d4\",\n                \"sha256:ddbb2551d7e0102e7252db79ba445cdab71b26640817ab1e3e3648dad515003b\",\n                \"sha256:deb6be0ac38ece9ba87dea880e438f25ca3eddfac8b002a2ec3d9183a454e8ae\",\n                \"sha256:e06ed3eb3218bc64786f7db41917d4e686cc4856944f53d5bdf83a6884432e12\",\n                \"sha256:e27ad930a842b4c5eb8ac0016b0a54f5aebbe679340c26101df33424142c143c\",\n                \"sha256:e537484df0d8f426ce2afb2d0f8e1c3d0b114b83f8850e5f2fbea0e797bd82ae\",\n                \"sha256:eb00ed941194665c332bf8e078baf037d6c35d7c4f3102ea2d4f16ca94a26dc8\",\n                \"sha256:eb6904c354526e758fda7167b33005998fb68c46fbc10e013ca97f21ca5c8887\",\n                \"sha256:eb8821e09e916165e160797a6c17edda0679379a4be5c716c260e836e122f54b\",\n                \"sha256:efcb3f6676480691518c177e3b465bcddf57cea040302f9f4e6e191af91174d4\",\n                \"sha256:f27273b60488abe721a075bcca6d7f3964f9f6f067c8c4c605743023d7d3944f\",\n                \"sha256:f30c3cb33b24454a82faecaf01b19c18562b1e89558fb6c56de4d9118a032fd5\",\n                \"sha256:fb69256e180cb6c8a894fee62b3afebae785babc1ee98b81cdf68bbca1987f33\",\n                \"sha256:fd1abc0d89e30cc4e02e4064dc67fcc51bd941eb395c502aac3ec19fab46b519\",\n                \"sha256:ff8fa367d09b717b2a17a052544193ad76cd49979c805768879cb63d9ca50561\"\n            ],\n            \"markers\": \"python_full_version >= '3.7.0'\",\n            \"version\": \"==3.3.2\"\n        },\n        \"click\": {\n            \"hashes\": [\n                \"sha256:353f466495adaeb40b6b5f592f9f91cb22372351c84caeb068132442a4518ef3\",\n                \"sha256:410e932b050f5eed773c4cda94de75971c89cdb3155a72a0831139a79e5ecb5b\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==8.0.3\"\n        },\n        \"colorama\": {\n            \"hashes\": [\n                \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\",\n                \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6' and sys_platform == 'win32'\",\n            \"version\": \"==0.4.6\"\n        },\n        \"coverage\": {\n            \"extras\": [\n                \"toml\"\n            ],\n            \"hashes\": [\n                \"sha256:06a737c882bd26d0d6ee7269b20b12f14a8704807a01056c80bb881a4b2ce6ca\",\n                \"sha256:07e2ca0ad381b91350c0ed49d52699b625aab2b44b65e1b4e02fa9df0e92ad2d\",\n                \"sha256:0c0420b573964c760df9e9e86d1a9a622d0d27f417e1a949a8a66dd7bcee7bc6\",\n                \"sha256:0dbde0f4aa9a16fa4d754356a8f2e36296ff4d83994b2c9d8398aa32f222f989\",\n                \"sha256:1125ca0e5fd475cbbba3bb67ae20bd2c23a98fac4e32412883f9bcbaa81c314c\",\n                \"sha256:13b0a73a0896988f053e4fbb7de6d93388e6dd292b0d87ee51d106f2c11b465b\",\n                \"sha256:166811d20dfea725e2e4baa71fffd6c968a958577848d2131f39b60043400223\",\n                \"sha256:170d444ab405852903b7d04ea9ae9b98f98ab6d7e63e1115e82620807519797f\",\n                \"sha256:1f4aa8219db826ce6be7099d559f8ec311549bfc4046f7f9fe9b5cea5c581c56\",\n                \"sha256:225667980479a17db1048cb2bf8bfb39b8e5be8f164b8f6628b64f78a72cf9d3\",\n                \"sha256:260933720fdcd75340e7dbe9060655aff3af1f0c5d20f46b57f262ab6c86a5e8\",\n                \"sha256:2bdb062ea438f22d99cba0d7829c2ef0af1d768d1e4a4f528087224c90b132cb\",\n                \"sha256:2c09f4ce52cb99dd7505cd0fc8e0e37c77b87f46bc9c1eb03fe3bc9991085388\",\n                \"sha256:3115a95daa9bdba70aea750db7b96b37259a81a709223c8448fa97727d546fe0\",\n                \"sha256:3e0cadcf6733c09154b461f1ca72d5416635e5e4ec4e536192180d34ec160f8a\",\n                \"sha256:3f1156e3e8f2872197af3840d8ad307a9dd18e615dc64d9ee41696f287c57ad8\",\n                \"sha256:4421712dbfc5562150f7554f13dde997a2e932a6b5f352edcce948a815efee6f\",\n                \"sha256:44df346d5215a8c0e360307d46ffaabe0f5d3502c8a1cefd700b34baf31d411a\",\n                \"sha256:502753043567491d3ff6d08629270127e0c31d4184c4c8d98f92c26f65019962\",\n                \"sha256:547f45fa1a93154bd82050a7f3cddbc1a7a4dd2a9bf5cb7d06f4ae29fe94eaf8\",\n                \"sha256:5621a9175cf9d0b0c84c2ef2b12e9f5f5071357c4d2ea6ca1cf01814f45d2391\",\n                \"sha256:609b06f178fe8e9f89ef676532760ec0b4deea15e9969bf754b37f7c40326dbc\",\n                \"sha256:645786266c8f18a931b65bfcefdbf6952dd0dea98feee39bd188607a9d307ed2\",\n                \"sha256:6878ef48d4227aace338d88c48738a4258213cd7b74fd9a3d4d7582bb1d8a155\",\n                \"sha256:6a89ecca80709d4076b95f89f308544ec8f7b4727e8a547913a35f16717856cb\",\n                \"sha256:6db04803b6c7291985a761004e9060b2bca08da6d04f26a7f2294b8623a0c1a0\",\n                \"sha256:6e2cd258d7d927d09493c8df1ce9174ad01b381d4729a9d8d4e38670ca24774c\",\n                \"sha256:6e81d7a3e58882450ec4186ca59a3f20a5d4440f25b1cff6f0902ad890e6748a\",\n                \"sha256:702855feff378050ae4f741045e19a32d57d19f3e0676d589df0575008ea5004\",\n                \"sha256:78b260de9790fd81e69401c2dc8b17da47c8038176a79092a89cb2b7d945d060\",\n                \"sha256:7bb65125fcbef8d989fa1dd0e8a060999497629ca5b0efbca209588a73356232\",\n                \"sha256:7dea0889685db8550f839fa202744652e87c60015029ce3f60e006f8c4462c93\",\n                \"sha256:8284cf8c0dd272a247bc154eb6c95548722dce90d098c17a883ed36e67cdb129\",\n                \"sha256:877abb17e6339d96bf08e7a622d05095e72b71f8afd8a9fefc82cf30ed944163\",\n                \"sha256:8929543a7192c13d177b770008bc4e8119f2e1f881d563fc6b6305d2d0ebe9de\",\n                \"sha256:8ae539519c4c040c5ffd0632784e21b2f03fc1340752af711f33e5be83a9d6c6\",\n                \"sha256:8f59d57baca39b32db42b83b2a7ba6f47ad9c394ec2076b084c3f029b7afca23\",\n                \"sha256:9054a0754de38d9dbd01a46621636689124d666bad1936d76c0341f7d71bf569\",\n                \"sha256:953510dfb7b12ab69d20135a0662397f077c59b1e6379a768e97c59d852ee51d\",\n                \"sha256:95cae0efeb032af8458fc27d191f85d1717b1d4e49f7cb226cf526ff28179778\",\n                \"sha256:9bc572be474cafb617672c43fe989d6e48d3c83af02ce8de73fff1c6bb3c198d\",\n                \"sha256:9c56863d44bd1c4fe2abb8a4d6f5371d197f1ac0ebdee542f07f35895fc07f36\",\n                \"sha256:9e0b2df163b8ed01d515807af24f63de04bebcecbd6c3bfeff88385789fdf75a\",\n                \"sha256:a09ece4a69cf399510c8ab25e0950d9cf2b42f7b3cb0374f95d2e2ff594478a6\",\n                \"sha256:a1ac0ae2b8bd743b88ed0502544847c3053d7171a3cff9228af618a068ed9c34\",\n                \"sha256:a318d68e92e80af8b00fa99609796fdbcdfef3629c77c6283566c6f02c6d6704\",\n                \"sha256:a4acd025ecc06185ba2b801f2de85546e0b8ac787cf9d3b06e7e2a69f925b106\",\n                \"sha256:a6d3adcf24b624a7b778533480e32434a39ad8fa30c315208f6d3e5542aeb6e9\",\n                \"sha256:a78d169acd38300060b28d600344a803628c3fd585c912cacc9ea8790fe96862\",\n                \"sha256:a95324a9de9650a729239daea117df21f4b9868ce32e63f8b650ebe6cef5595b\",\n                \"sha256:abd5fd0db5f4dc9289408aaf34908072f805ff7792632250dcb36dc591d24255\",\n                \"sha256:b06079abebbc0e89e6163b8e8f0e16270124c154dc6e4a47b413dd538859af16\",\n                \"sha256:b43c03669dc4618ec25270b06ecd3ee4fa94c7f9b3c14bae6571ca00ef98b0d3\",\n                \"sha256:b48f312cca9621272ae49008c7f613337c53fadca647d6384cc129d2996d1133\",\n                \"sha256:b5d7b556859dd85f3a541db6a4e0167b86e7273e1cdc973e5b175166bb634fdb\",\n                \"sha256:b9f222de8cded79c49bf184bdbc06630d4c58eec9459b939b4a690c82ed05657\",\n                \"sha256:c3c02d12f837d9683e5ab2f3d9844dc57655b92c74e286c262e0fc54213c216d\",\n                \"sha256:c44fee9975f04b33331cb8eb272827111efc8930cfd582e0320613263ca849ca\",\n                \"sha256:cf4b19715bccd7ee27b6b120e7e9dd56037b9c0681dcc1adc9ba9db3d417fa36\",\n                \"sha256:d0c212c49b6c10e6951362f7c6df3329f04c2b1c28499563d4035d964ab8e08c\",\n                \"sha256:d3296782ca4eab572a1a4eca686d8bfb00226300dcefdf43faa25b5242ab8a3e\",\n                \"sha256:d85f5e9a5f8b73e2350097c3756ef7e785f55bd71205defa0bfdaf96c31616ff\",\n                \"sha256:da511e6ad4f7323ee5702e6633085fb76c2f893aaf8ce4c51a0ba4fc07580ea7\",\n                \"sha256:e05882b70b87a18d937ca6768ff33cc3f72847cbc4de4491c8e73880766718e5\",\n                \"sha256:e61c0abb4c85b095a784ef23fdd4aede7a2628478e7baba7c5e3deba61070a02\",\n                \"sha256:e6a08c0be454c3b3beb105c0596ebdc2371fab6bb90c0c0297f4e58fd7e1012c\",\n                \"sha256:e9a6e0eb86070e8ccaedfbd9d38fec54864f3125ab95419970575b42af7541df\",\n                \"sha256:ed37bd3c3b063412f7620464a9ac1314d33100329f39799255fb8d3027da50d3\",\n                \"sha256:f1adfc8ac319e1a348af294106bc6a8458a0f1633cc62a1446aebc30c5fa186a\",\n                \"sha256:f5796e664fe802da4f57a168c85359a8fbf3eab5e55cd4e4569fbacecc903959\",\n                \"sha256:fc5a77d0c516700ebad189b587de289a20a78324bc54baee03dd486f0855d234\",\n                \"sha256:fd21f6ae3f08b41004dfb433fa895d858f3f5979e7762d052b12aef444e29afc\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==7.6.1\"\n        },\n        \"distlib\": {\n            \"hashes\": [\n                \"sha256:034db59a0b96f8ca18035f36290806a9a6e6bd9d1ff91e45a7f172eb17e51784\",\n                \"sha256:1530ea13e350031b6312d8580ddb6b27a104275a31106523b8f123787f494f64\"\n            ],\n            \"version\": \"==0.3.8\"\n        },\n        \"docutils\": {\n            \"hashes\": [\n                \"sha256:3a6b18732edf182daa3cd12775bbb338cf5691468f91eeeb109deff6ebfa986f\",\n                \"sha256:dafca5b9e384f0e419294eb4d2ff9fa826435bf15f15b7bd45723e8ad76811b2\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==0.21.2\"\n        },\n        \"exceptiongroup\": {\n            \"hashes\": [\n                \"sha256:327cbda3da756e2de031a3107b81ab7b3770a602c4d16ca618298c526f4bec1e\",\n                \"sha256:bcb67d800a4497e1b404c2dd44fca47d3b7a5e5433dbab67f96c1a685cdfdf23\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==1.1.0\"\n        },\n        \"execnet\": {\n            \"hashes\": [\n                \"sha256:26dee51f1b80cebd6d0ca8e74dd8745419761d3bef34163928cbebbdc4749fdc\",\n                \"sha256:5189b52c6121c24feae288166ab41b32549c7e2348652736540b9e6e7d4e72e3\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.1.1\"\n        },\n        \"filelock\": {\n            \"hashes\": [\n                \"sha256:2082e5703d51fbf98ea75855d9d5527e33d8ff23099bec374a134febee6946b0\",\n                \"sha256:c249fbfcd5db47e5e2d6d62198e565475ee65e4831e2561c8e313fa7eb961435\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==3.16.1\"\n        },\n        \"flake8\": {\n            \"hashes\": [\n                \"sha256:07528381786f2a6237b061f6e96610a4167b226cb926e2aa2b6b1d78057c576b\",\n                \"sha256:bf8fd333346d844f616e8d47905ef3a3384edae6b4e9beb0c5101e25e3110907\"\n            ],\n            \"version\": \"==3.9.2\"\n        },\n        \"flaky\": {\n            \"hashes\": [\n                \"sha256:194ccf4f0d3a22b2de7130f4b62e45e977ac1b5ccad74d4d48f3005dcc38815e\",\n                \"sha256:47204a81ec905f3d5acfbd61daeabcada8f9d4031616d9bcb0618461729699f5\"\n            ],\n            \"version\": \"==3.8.1\"\n        },\n        \"gunicorn\": {\n            \"hashes\": [\n                \"sha256:ec400d38950de4dfd418cff8328b2c8faed0edb0d517d3394e457c317908ca4d\",\n                \"sha256:f014447a0101dc57e294f6c18ca6b40227a4c90e9bdb586042628030cba004ec\"\n            ],\n            \"markers\": \"python_version >= '3.7' and sys_platform == 'linux'\",\n            \"version\": \"==23.0.0\"\n        },\n        \"identify\": {\n            \"hashes\": [\n                \"sha256:53863bcac7caf8d2ed85bd20312ea5dcfc22226800f6d6881f232d861db5a8f0\",\n                \"sha256:91478c5fb7c3aac5ff7bf9b4344f803843dc586832d5f110d672b19aa1984c98\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.6.1\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\",\n                \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==3.10\"\n        },\n        \"imagesize\": {\n            \"hashes\": [\n                \"sha256:0d8d18d08f840c19d0ee7ca1fd82490fdc3729b7ac93f49870406ddde8ef8d8b\",\n                \"sha256:69150444affb9cb0d5cc5a92b3676f0b2fb7cd9ae39e947a5e11a36b4497cd4a\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==1.4.1\"\n        },\n        \"importlib-metadata\": {\n            \"hashes\": [\n                \"sha256:45e54197d28b7a7f1559e60b95e7c567032b602131fbd588f1497f47880aa68b\",\n                \"sha256:71522656f0abace1d072b9e5481a48f07c138e00f079c38c8f883823f9c26bd7\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==8.5.0\"\n        },\n        \"importlib-resources\": {\n            \"hashes\": [\n                \"sha256:980862a1d16c9e147a59603677fa2aa5fd82b87f223b6cb870695bcfce830065\",\n                \"sha256:ac29d5f956f01d5e4bb63102a5a19957f1b9175e45649977264a1416783bb717\"\n            ],\n            \"markers\": \"python_version > '3.8' and python_version < '3.12'\",\n            \"version\": \"==6.4.5\"\n        },\n        \"iniconfig\": {\n            \"hashes\": [\n                \"sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3\",\n                \"sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"invoke\": {\n            \"hashes\": [\n                \"sha256:6ea924cc53d4f78e3d98bc436b08069a03077e6f85ad1ddaa8a116d7dad15820\",\n                \"sha256:ee6cbb101af1a859c7fe84f2a264c059020b0cb7fe3535f9424300ab568f6bd5\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2.2.0\"\n        },\n        \"jaraco.classes\": {\n            \"hashes\": [\n                \"sha256:47a024b51d0239c0dd8c8540c6c7f484be3b8fcf0b2d85c13825780d3b3f3acd\",\n                \"sha256:f662826b6bed8cace05e7ff873ce0f9283b5c924470fe664fff1c2f00f581790\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==3.4.0\"\n        },\n        \"jaraco.context\": {\n            \"hashes\": [\n                \"sha256:9bae4ea555cf0b14938dc0aee7c9f32ed303aa20a3b73e7dc80111628792d1b3\",\n                \"sha256:f797fc481b490edb305122c9181830a3a5b76d84ef6d1aef2fb9b47ab956f9e4\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==6.0.1\"\n        },\n        \"jaraco.functools\": {\n            \"hashes\": [\n                \"sha256:3460c74cd0d32bf82b9576bbb3527c4364d5b27a21f5158a62aed6c4b42e23f5\",\n                \"sha256:c9d16a3ed4ccb5a889ad8e0b7a343401ee5b2a71cee6ed192d3f68bc351e94e3\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==4.0.2\"\n        },\n        \"jinja2\": {\n            \"hashes\": [\n                \"sha256:4a3aee7acbbe7303aede8e9648d13b8bf88a429282aa6122a993f0ac800cb369\",\n                \"sha256:bc5dd2abb727a5319567b7a813e6a2e7318c39f4f487cfe6c89c6f9c7d25197d\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==3.1.4\"\n        },\n        \"keyring\": {\n            \"hashes\": [\n                \"sha256:5426f817cf7f6f007ba5ec722b1bcad95a75b27d780343772ad76b17cb47b0bf\",\n                \"sha256:b07ebc55f3e8ed86ac81dd31ef14e81ace9dd9c3d4b5d77a6e9a2016d0d71a1b\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==25.4.1\"\n        },\n        \"linkify-it-py\": {\n            \"hashes\": [\n                \"sha256:68cda27e162e9215c17d786649d1da0021a451bdc436ef9e0fa0ba5234b9b048\",\n                \"sha256:6bcbc417b0ac14323382aef5c5192c0075bf8a9d6b41820a2b66371eac6b6d79\"\n            ],\n            \"version\": \"==2.0.3\"\n        },\n        \"markdown-it-py\": {\n            \"hashes\": [\n                \"sha256:355216845c60bd96232cd8d8c40e8f9765cc86f46880e43a8fd22dc1a1a8cab1\",\n                \"sha256:e3f60a94fa066dc52ec76661e37c851cb232d92f9886b15cb560aaada2df8feb\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==3.0.0\"\n        },\n        \"markupsafe\": {\n            \"hashes\": [\n                \"sha256:00e046b6dd71aa03a41079792f8473dc494d564611a8f89bbbd7cb93295ebdcf\",\n                \"sha256:075202fa5b72c86ad32dc7d0b56024ebdbcf2048c0ba09f1cde31bfdd57bcfff\",\n                \"sha256:0e397ac966fdf721b2c528cf028494e86172b4feba51d65f81ffd65c63798f3f\",\n                \"sha256:17b950fccb810b3293638215058e432159d2b71005c74371d784862b7e4683f3\",\n                \"sha256:1f3fbcb7ef1f16e48246f704ab79d79da8a46891e2da03f8783a5b6fa41a9532\",\n                \"sha256:2174c595a0d73a3080ca3257b40096db99799265e1c27cc5a610743acd86d62f\",\n                \"sha256:2b7c57a4dfc4f16f7142221afe5ba4e093e09e728ca65c51f5620c9aaeb9a617\",\n                \"sha256:2d2d793e36e230fd32babe143b04cec8a8b3eb8a3122d2aceb4a371e6b09b8df\",\n                \"sha256:30b600cf0a7ac9234b2638fbc0fb6158ba5bdcdf46aeb631ead21248b9affbc4\",\n                \"sha256:397081c1a0bfb5124355710fe79478cdbeb39626492b15d399526ae53422b906\",\n                \"sha256:3a57fdd7ce31c7ff06cdfbf31dafa96cc533c21e443d57f5b1ecc6cdc668ec7f\",\n                \"sha256:3c6b973f22eb18a789b1460b4b91bf04ae3f0c4234a0a6aa6b0a92f6f7b951d4\",\n                \"sha256:3e53af139f8579a6d5f7b76549125f0d94d7e630761a2111bc431fd820e163b8\",\n                \"sha256:4096e9de5c6fdf43fb4f04c26fb114f61ef0bf2e5604b6ee3019d51b69e8c371\",\n                \"sha256:4275d846e41ecefa46e2015117a9f491e57a71ddd59bbead77e904dc02b1bed2\",\n                \"sha256:4c31f53cdae6ecfa91a77820e8b151dba54ab528ba65dfd235c80b086d68a465\",\n                \"sha256:4f11aa001c540f62c6166c7726f71f7573b52c68c31f014c25cc7901deea0b52\",\n                \"sha256:5049256f536511ee3f7e1b3f87d1d1209d327e818e6ae1365e8653d7e3abb6a6\",\n                \"sha256:58c98fee265677f63a4385256a6d7683ab1832f3ddd1e66fe948d5880c21a169\",\n                \"sha256:598e3276b64aff0e7b3451b72e94fa3c238d452e7ddcd893c3ab324717456bad\",\n                \"sha256:5b7b716f97b52c5a14bffdf688f971b2d5ef4029127f1ad7a513973cfd818df2\",\n                \"sha256:5dedb4db619ba5a2787a94d877bc8ffc0566f92a01c0ef214865e54ecc9ee5e0\",\n                \"sha256:619bc166c4f2de5caa5a633b8b7326fbe98e0ccbfacabd87268a2b15ff73a029\",\n                \"sha256:629ddd2ca402ae6dbedfceeba9c46d5f7b2a61d9749597d4307f943ef198fc1f\",\n                \"sha256:656f7526c69fac7f600bd1f400991cc282b417d17539a1b228617081106feb4a\",\n                \"sha256:6ec585f69cec0aa07d945b20805be741395e28ac1627333b1c5b0105962ffced\",\n                \"sha256:72b6be590cc35924b02c78ef34b467da4ba07e4e0f0454a2c5907f473fc50ce5\",\n                \"sha256:7502934a33b54030eaf1194c21c692a534196063db72176b0c4028e140f8f32c\",\n                \"sha256:7a68b554d356a91cce1236aa7682dc01df0edba8d043fd1ce607c49dd3c1edcf\",\n                \"sha256:7b2e5a267c855eea6b4283940daa6e88a285f5f2a67f2220203786dfa59b37e9\",\n                \"sha256:823b65d8706e32ad2df51ed89496147a42a2a6e01c13cfb6ffb8b1e92bc910bb\",\n                \"sha256:8590b4ae07a35970728874632fed7bd57b26b0102df2d2b233b6d9d82f6c62ad\",\n                \"sha256:8dd717634f5a044f860435c1d8c16a270ddf0ef8588d4887037c5028b859b0c3\",\n                \"sha256:8dec4936e9c3100156f8a2dc89c4b88d5c435175ff03413b443469c7c8c5f4d1\",\n                \"sha256:97cafb1f3cbcd3fd2b6fbfb99ae11cdb14deea0736fc2b0952ee177f2b813a46\",\n                \"sha256:a17a92de5231666cfbe003f0e4b9b3a7ae3afb1ec2845aadc2bacc93ff85febc\",\n                \"sha256:a549b9c31bec33820e885335b451286e2969a2d9e24879f83fe904a5ce59d70a\",\n                \"sha256:ac07bad82163452a6884fe8fa0963fb98c2346ba78d779ec06bd7a6262132aee\",\n                \"sha256:ae2ad8ae6ebee9d2d94b17fb62763125f3f374c25618198f40cbb8b525411900\",\n                \"sha256:b91c037585eba9095565a3556f611e3cbfaa42ca1e865f7b8015fe5c7336d5a5\",\n                \"sha256:bc1667f8b83f48511b94671e0e441401371dfd0f0a795c7daa4a3cd1dde55bea\",\n                \"sha256:bec0a414d016ac1a18862a519e54b2fd0fc8bbfd6890376898a6c0891dd82e9f\",\n                \"sha256:bf50cd79a75d181c9181df03572cdce0fbb75cc353bc350712073108cba98de5\",\n                \"sha256:bff1b4290a66b490a2f4719358c0cdcd9bafb6b8f061e45c7a2460866bf50c2e\",\n                \"sha256:c061bb86a71b42465156a3ee7bd58c8c2ceacdbeb95d05a99893e08b8467359a\",\n                \"sha256:c8b29db45f8fe46ad280a7294f5c3ec36dbac9491f2d1c17345be8e69cc5928f\",\n                \"sha256:ce409136744f6521e39fd8e2a24c53fa18ad67aa5bc7c2cf83645cce5b5c4e50\",\n                \"sha256:d050b3361367a06d752db6ead6e7edeb0009be66bc3bae0ee9d97fb326badc2a\",\n                \"sha256:d283d37a890ba4c1ae73ffadf8046435c76e7bc2247bbb63c00bd1a709c6544b\",\n                \"sha256:d9fad5155d72433c921b782e58892377c44bd6252b5af2f67f16b194987338a4\",\n                \"sha256:daa4ee5a243f0f20d528d939d06670a298dd39b1ad5f8a72a4275124a7819eff\",\n                \"sha256:db0b55e0f3cc0be60c1f19efdde9a637c32740486004f20d1cff53c3c0ece4d2\",\n                \"sha256:e61659ba32cf2cf1481e575d0462554625196a1f2fc06a1c777d3f48e8865d46\",\n                \"sha256:ea3d8a3d18833cf4304cd2fc9cbb1efe188ca9b5efef2bdac7adc20594a0e46b\",\n                \"sha256:ec6a563cff360b50eed26f13adc43e61bc0c04d94b8be985e6fb24b81f6dcfdf\",\n                \"sha256:f5dfb42c4604dddc8e4305050aa6deb084540643ed5804d7455b5df8fe16f5e5\",\n                \"sha256:fa173ec60341d6bb97a89f5ea19c85c5643c1e7dedebc22f5181eb73573142c5\",\n                \"sha256:fa9db3f79de01457b03d4f01b34cf91bc0048eb2c3846ff26f66687c2f6d16ab\",\n                \"sha256:fce659a462a1be54d2ffcacea5e3ba2d74daa74f30f5f143fe0c58636e355fdd\",\n                \"sha256:ffee1f21e5ef0d712f9033568f8344d5da8cc2869dbd08d87c84656e6a2d2f68\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.1.5\"\n        },\n        \"mccabe\": {\n            \"hashes\": [\n                \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\",\n                \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"\n            ],\n            \"version\": \"==0.6.1\"\n        },\n        \"mdit-py-plugins\": {\n            \"hashes\": [\n                \"sha256:0c673c3f889399a33b95e88d2f0d111b4447bdfea7f237dab2d488f459835636\",\n                \"sha256:5f2cd1fdb606ddf152d37ec30e46101a60512bc0e5fa1a7002c36647b09e26b5\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==0.4.2\"\n        },\n        \"mdurl\": {\n            \"hashes\": [\n                \"sha256:84008a41e51615a49fc9966191ff91509e3c40b939176e643fd50a5c2196b8f8\",\n                \"sha256:bb413d29f5eea38f31dd4754dd7377d4465116fb207585f97bf925588687c1ba\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==0.1.2\"\n        },\n        \"mock\": {\n            \"hashes\": [\n                \"sha256:18c694e5ae8a208cdb3d2c20a993ca1a7b0efa258c247a1e565150f477f83744\",\n                \"sha256:5e96aad5ccda4718e0a229ed94b2024df75cc2d55575ba5762d31f5767b8767d\"\n            ],\n            \"version\": \"==5.1.0\"\n        },\n        \"more-itertools\": {\n            \"hashes\": [\n                \"sha256:037b0d3203ce90cca8ab1defbbdac29d5f993fc20131f3664dc8d6acfa872aef\",\n                \"sha256:5482bfef7849c25dc3c6dd53a6173ae4795da2a41a80faea6700d9f5846c5da6\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==10.5.0\"\n        },\n        \"mypy-extensions\": {\n            \"hashes\": [\n                \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\",\n                \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"\n            ],\n            \"markers\": \"python_version >= '3.5'\",\n            \"version\": \"==1.0.0\"\n        },\n        \"myst-parser\": {\n            \"extras\": [\n                \"linkify\"\n            ],\n            \"hashes\": [\n                \"sha256:851c9dfb44e36e56d15d05e72f02b80da21a9e0d07cba96baf5e2d476bb91531\",\n                \"sha256:b9317997552424448c6096c2558872fdb6f81d3ecb3a40ce84a7518798f3f28d\"\n            ],\n            \"markers\": \"python_version >= '3.10'\",\n            \"version\": \"==4.0.0\"\n        },\n        \"nh3\": {\n            \"hashes\": [\n                \"sha256:0411beb0589eacb6734f28d5497ca2ed379eafab8ad8c84b31bb5c34072b7164\",\n                \"sha256:14c5a72e9fe82aea5fe3072116ad4661af5cf8e8ff8fc5ad3450f123e4925e86\",\n                \"sha256:19aaba96e0f795bd0a6c56291495ff59364f4300d4a39b29a0abc9cb3774a84b\",\n                \"sha256:34c03fa78e328c691f982b7c03d4423bdfd7da69cd707fe572f544cf74ac23ad\",\n                \"sha256:36c95d4b70530b320b365659bb5034341316e6a9b30f0b25fa9c9eff4c27a204\",\n                \"sha256:3a157ab149e591bb638a55c8c6bcb8cdb559c8b12c13a8affaba6cedfe51713a\",\n                \"sha256:42c64511469005058cd17cc1537578eac40ae9f7200bedcfd1fc1a05f4f8c200\",\n                \"sha256:5f36b271dae35c465ef5e9090e1fdaba4a60a56f0bb0ba03e0932a66f28b9189\",\n                \"sha256:6955369e4d9f48f41e3f238a9e60f9410645db7e07435e62c6a9ea6135a4907f\",\n                \"sha256:7b7c2a3c9eb1a827d42539aa64091640bd275b81e097cd1d8d82ef91ffa2e811\",\n                \"sha256:8ce0f819d2f1933953fca255db2471ad58184a60508f03e6285e5114b6254844\",\n                \"sha256:94a166927e53972a9698af9542ace4e38b9de50c34352b962f4d9a7d4c927af4\",\n                \"sha256:a7f1b5b2c15866f2db413a3649a8fe4fd7b428ae58be2c0f6bca5eefd53ca2be\",\n                \"sha256:c8b3a1cebcba9b3669ed1a84cc65bf005728d2f0bc1ed2a6594a992e817f3a50\",\n                \"sha256:de3ceed6e661954871d6cd78b410213bdcb136f79aafe22aa7182e028b8c7307\",\n                \"sha256:f0eca9ca8628dbb4e916ae2491d72957fdd35f7a5d326b7032a345f111ac07fe\"\n            ],\n            \"version\": \"==0.2.18\"\n        },\n        \"nodeenv\": {\n            \"hashes\": [\n                \"sha256:6ec12890a2dab7946721edbfbcd91f3319c6ccc9aec47be7c7e6b7011ee6645f\",\n                \"sha256:ba11c9782d29c27c70ffbdda2d7415098754709be8a7056d79a737cd901155c9\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6'\",\n            \"version\": \"==1.9.1\"\n        },\n        \"packaging\": {\n            \"hashes\": [\n                \"sha256:026ed72c8ed3fcce5bf8950572258698927fd1dbda10a5e981cdf0ac37f4f002\",\n                \"sha256:5b8f2217dbdbd2f7f384c41c628544e6d52f2d0f53c6d0c3ea61aa5d1d7ff124\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==24.1\"\n        },\n        \"parse\": {\n            \"hashes\": [\n                \"sha256:967095588cb802add9177d0c0b6133b5ba33b1ea9007ca800e526f42a85af558\",\n                \"sha256:b41d604d16503c79d81af5165155c0b20f6c8d6c559efa66b4b695c3e5a0a0ce\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.20.2\"\n        },\n        \"parver\": {\n            \"hashes\": [\n                \"sha256:2281b187276c8e8e3c15634f62287b2fb6fe0efe3010f739a6bd1e45fa2bf2b2\",\n                \"sha256:b9fde1e6bb9ce9f07e08e9c4bea8d8825c5e78e18a0052d02e02bf9517eb4777\"\n            ],\n            \"version\": \"==0.5\"\n        },\n        \"pathspec\": {\n            \"hashes\": [\n                \"sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08\",\n                \"sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==0.12.1\"\n        },\n        \"pip\": {\n            \"hashes\": [\n                \"sha256:2cd581cf58ab7fcfca4ce8efa6dcacd0de5bf8d0a3eb9ec927e07405f4d9e2a2\",\n                \"sha256:5b5e490b5e9cb275c879595064adce9ebd31b854e3e803740b72f9ccf34a45b8\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==24.2\"\n        },\n        \"pipenv\": {\n            \"editable\": true,\n            \"extras\": [\n                \"dev\",\n                \"tests\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"path\": \".\"\n        },\n        \"pkginfo\": {\n            \"hashes\": [\n                \"sha256:5df73835398d10db79f8eecd5cd86b1f6d29317589ea70796994d49399af6297\",\n                \"sha256:889a6da2ed7ffc58ab5b900d888ddce90bce912f2d2de1dc1c26f4cb9fe65097\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==1.10.0\"\n        },\n        \"platformdirs\": {\n            \"hashes\": [\n                \"sha256:357fb2acbc885b0419afd3ce3ed34564c13c9b95c89360cd9563f73aa5e2b907\",\n                \"sha256:73e575e1408ab8103900836b97580d5307456908a03e92031bab39e4554cc3fb\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==4.3.6\"\n        },\n        \"pluggy\": {\n            \"hashes\": [\n                \"sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1\",\n                \"sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==1.5.0\"\n        },\n        \"pre-commit\": {\n            \"hashes\": [\n                \"sha256:31ef31af7e474a8d8995027fefdfcf509b5c913ff31f2015b4ec4beb26a6f658\",\n                \"sha256:e2f91727039fc39a92f58a588a25b87f936de6567eed4f0e673e0507edc75bad\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.21.0\"\n        },\n        \"pycodestyle\": {\n            \"hashes\": [\n                \"sha256:514f76d918fcc0b55c6680472f0a37970994e07bbb80725808c17089be302068\",\n                \"sha256:c389c1d06bf7904078ca03399a4816f974a1d590090fecea0c63ec26ebaf1cef\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.7.0\"\n        },\n        \"pyenchant\": {\n            \"hashes\": [\n                \"sha256:0314d162b7af83adc500f5aff850c91466129363ca8c4d79a8b8d99253346204\",\n                \"sha256:377a2aaafcb41f871c573c5b74e502dcc6ddba72a62deae7d36dc601a9fcad3d\",\n                \"sha256:960cbbf4ac99cf9c662308aa9a017ef23017dbea4c8c1e8329978ee4600b3f55\",\n                \"sha256:ee514d7adf8d0fe39d3a14088f5915953e7fb3bda35092e696fc38f78aabb8b8\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==3.3.0rc1\"\n        },\n        \"pyflakes\": {\n            \"hashes\": [\n                \"sha256:7893783d01b8a89811dd72d7dfd4d84ff098e5eed95cfa8905b22bbffe52efc3\",\n                \"sha256:f5bc8ecabc05bb9d291eb5203d6810b49040f6ff446a756326104746cc00c1db\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.3.1\"\n        },\n        \"pygments\": {\n            \"hashes\": [\n                \"sha256:786ff802f32e91311bff3889f6e9a86e81505fe99f2735bb6d60ae0c5004f199\",\n                \"sha256:b8e6aca0523f3ab76fee51799c488e38782ac06eafcf95e7ba832985c8e7b13a\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.18.0\"\n        },\n        \"pypiserver\": {\n            \"git\": \"https://github.com/matteius/pypiserver.git\",\n            \"markers\": \"python_version >= '3.6'\",\n            \"ref\": \"02f1ef9383f6e91d51a0f011c34a5df4816897a0\"\n        },\n        \"pyproject-hooks\": {\n            \"hashes\": [\n                \"sha256:4b37730834edbd6bd37f26ece6b44802fb1c1ee2ece0e54ddff8bfc06db86965\",\n                \"sha256:7ceeefe9aec63a1064c18d939bdc3adf2d8aa1988a510afec15151578b232aa2\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==1.1.0\"\n        },\n        \"pytest\": {\n            \"hashes\": [\n                \"sha256:70b98107bd648308a7952b06e6ca9a50bc660be218d53c257cc1fc94fda10181\",\n                \"sha256:a6853c7375b2663155079443d2e45de913a911a11d669df02a50814944db57b2\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==8.3.3\"\n        },\n        \"pytest-cov\": {\n            \"hashes\": [\n                \"sha256:3904b13dfbfec47f003b8e77fd5b589cd11904a21ddf1ab38a64f204d6a10ef6\",\n                \"sha256:6ba70b9e97e69fcc3fb45bfeab2d0a138fb65c4d0d6a41ef33983ad114be8c3a\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==4.1.0\"\n        },\n        \"pytest-timeout\": {\n            \"hashes\": [\n                \"sha256:12397729125c6ecbdaca01035b9e5239d4db97352320af155b3f5de1ba5165d9\",\n                \"sha256:68188cb703edfc6a18fad98dc25a3c61e9f24d644b0b70f33af545219fc7813e\"\n            ],\n            \"version\": \"==2.3.1\"\n        },\n        \"pytest-xdist\": {\n            \"hashes\": [\n                \"sha256:9ed4adfb68a016610848639bb7e02c9352d5d9f03d04809919e2dafc3be4cca7\",\n                \"sha256:ead156a4db231eec769737f57668ef58a2084a34b2e55c4a8fa20d861107300d\"\n            ],\n            \"version\": \"==3.6.1\"\n        },\n        \"pywin32-ctypes\": {\n            \"hashes\": [\n                \"sha256:8a1513379d709975552d202d942d9837758905c8d01eb82b8bcc30918929e7b8\",\n                \"sha256:d162dc04946d704503b2edc4d55f3dba5c1d539ead017afa00142c38b9885755\"\n            ],\n            \"markers\": \"sys_platform == 'win32'\",\n            \"version\": \"==0.2.3\"\n        },\n        \"pyyaml\": {\n            \"hashes\": [\n                \"sha256:04ac92ad1925b2cff1db0cfebffb6ffc43457495c9b3c39d3fcae417d7125dc5\",\n                \"sha256:062582fca9fabdd2c8b54a3ef1c978d786e0f6b3a1510e0ac93ef59e0ddae2bc\",\n                \"sha256:0d3304d8c0adc42be59c5f8a4d9e3d7379e6955ad754aa9d6ab7a398b59dd1df\",\n                \"sha256:1635fd110e8d85d55237ab316b5b011de701ea0f29d07611174a1b42f1444741\",\n                \"sha256:184c5108a2aca3c5b3d3bf9395d50893a7ab82a38004c8f61c258d4428e80206\",\n                \"sha256:18aeb1bf9a78867dc38b259769503436b7c72f7a1f1f4c93ff9a17de54319b27\",\n                \"sha256:1d4c7e777c441b20e32f52bd377e0c409713e8bb1386e1099c2415f26e479595\",\n                \"sha256:1e2722cc9fbb45d9b87631ac70924c11d3a401b2d7f410cc0e3bbf249f2dca62\",\n                \"sha256:1fe35611261b29bd1de0070f0b2f47cb6ff71fa6595c077e42bd0c419fa27b98\",\n                \"sha256:28c119d996beec18c05208a8bd78cbe4007878c6dd15091efb73a30e90539696\",\n                \"sha256:326c013efe8048858a6d312ddd31d56e468118ad4cdeda36c719bf5bb6192290\",\n                \"sha256:40df9b996c2b73138957fe23a16a4f0ba614f4c0efce1e9406a184b6d07fa3a9\",\n                \"sha256:42f8152b8dbc4fe7d96729ec2b99c7097d656dc1213a3229ca5383f973a5ed6d\",\n                \"sha256:49a183be227561de579b4a36efbb21b3eab9651dd81b1858589f796549873dd6\",\n                \"sha256:4fb147e7a67ef577a588a0e2c17b6db51dda102c71de36f8549b6816a96e1867\",\n                \"sha256:50550eb667afee136e9a77d6dc71ae76a44df8b3e51e41b77f6de2932bfe0f47\",\n                \"sha256:510c9deebc5c0225e8c96813043e62b680ba2f9c50a08d3724c7f28a747d1486\",\n                \"sha256:5773183b6446b2c99bb77e77595dd486303b4faab2b086e7b17bc6bef28865f6\",\n                \"sha256:596106435fa6ad000c2991a98fa58eeb8656ef2325d7e158344fb33864ed87e3\",\n                \"sha256:6965a7bc3cf88e5a1c3bd2e0b5c22f8d677dc88a455344035f03399034eb3007\",\n                \"sha256:69b023b2b4daa7548bcfbd4aa3da05b3a74b772db9e23b982788168117739938\",\n                \"sha256:6c22bec3fbe2524cde73d7ada88f6566758a8f7227bfbf93a408a9d86bcc12a0\",\n                \"sha256:704219a11b772aea0d8ecd7058d0082713c3562b4e271b849ad7dc4a5c90c13c\",\n                \"sha256:7e07cbde391ba96ab58e532ff4803f79c4129397514e1413a7dc761ccd755735\",\n                \"sha256:81e0b275a9ecc9c0c0c07b4b90ba548307583c125f54d5b6946cfee6360c733d\",\n                \"sha256:855fb52b0dc35af121542a76b9a84f8d1cd886ea97c84703eaa6d88e37a2ad28\",\n                \"sha256:8d4e9c88387b0f5c7d5f281e55304de64cf7f9c0021a3525bd3b1c542da3b0e4\",\n                \"sha256:9046c58c4395dff28dd494285c82ba00b546adfc7ef001486fbf0324bc174fba\",\n                \"sha256:9eb6caa9a297fc2c2fb8862bc5370d0303ddba53ba97e71f08023b6cd73d16a8\",\n                \"sha256:a08c6f0fe150303c1c6b71ebcd7213c2858041a7e01975da3a99aed1e7a378ef\",\n                \"sha256:a0cd17c15d3bb3fa06978b4e8958dcdc6e0174ccea823003a106c7d4d7899ac5\",\n                \"sha256:afd7e57eddb1a54f0f1a974bc4391af8bcce0b444685d936840f125cf046d5bd\",\n                \"sha256:b1275ad35a5d18c62a7220633c913e1b42d44b46ee12554e5fd39c70a243d6a3\",\n                \"sha256:b786eecbdf8499b9ca1d697215862083bd6d2a99965554781d0d8d1ad31e13a0\",\n                \"sha256:ba336e390cd8e4d1739f42dfe9bb83a3cc2e80f567d8805e11b46f4a943f5515\",\n                \"sha256:baa90d3f661d43131ca170712d903e6295d1f7a0f595074f151c0aed377c9b9c\",\n                \"sha256:bc1bf2925a1ecd43da378f4db9e4f799775d6367bdb94671027b73b393a7c42c\",\n                \"sha256:bd4af7373a854424dabd882decdc5579653d7868b8fb26dc7d0e99f823aa5924\",\n                \"sha256:bf07ee2fef7014951eeb99f56f39c9bb4af143d8aa3c21b1677805985307da34\",\n                \"sha256:bfdf460b1736c775f2ba9f6a92bca30bc2095067b8a9d77876d1fad6cc3b4a43\",\n                \"sha256:c8098ddcc2a85b61647b2590f825f3db38891662cfc2fc776415143f599bb859\",\n                \"sha256:d2b04aac4d386b172d5b9692e2d2da8de7bfb6c387fa4f801fbf6fb2e6ba4673\",\n                \"sha256:d483d2cdf104e7c9fa60c544d92981f12ad66a457afae824d146093b8c294c54\",\n                \"sha256:d858aa552c999bc8a8d57426ed01e40bef403cd8ccdd0fc5f6f04a00414cac2a\",\n                \"sha256:e7d73685e87afe9f3b36c799222440d6cf362062f78be1013661b00c5c6f678b\",\n                \"sha256:f003ed9ad21d6a4713f0a9b5a7a0a79e08dd0f221aff4525a2be4c346ee60aab\",\n                \"sha256:f22ac1c3cac4dbc50079e965eba2c1058622631e526bd9afd45fedd49ba781fa\",\n                \"sha256:faca3bdcf85b2fc05d06ff3fbc1f83e1391b3e724afa3feba7d13eeab355484c\",\n                \"sha256:fca0e3a251908a499833aa292323f32437106001d436eca0e6e7833256674585\",\n                \"sha256:fd1592b3fdf65fff2ad0004b5e363300ef59ced41c2e6b3a99d4089fa8c5435d\",\n                \"sha256:fd66fc5d0da6d9815ba2cebeb4205f95818ff4b79c3ebe268e75d961704af52f\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==6.0.1\"\n        },\n        \"readme-renderer\": {\n            \"hashes\": [\n                \"sha256:2fbca89b81a08526aadf1357a8c2ae889ec05fb03f5da67f9769c9a592166151\",\n                \"sha256:8712034eabbfa6805cacf1402b4eeb2a73028f72d1166d6f5cb7f9c047c5d1e1\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==44.0\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\",\n                \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.32.3\"\n        },\n        \"requests-toolbelt\": {\n            \"hashes\": [\n                \"sha256:7681a0a3d047012b5bdc0ee37d7f8f07ebe76ab08caeccfc3921ce23c88d5bc6\",\n                \"sha256:cccfdd665f0a24fcf4726e690f65639d272bb0637b9b92dfd91a5568ccf6bd06\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==1.0.0\"\n        },\n        \"rfc3986\": {\n            \"hashes\": [\n                \"sha256:50b1502b60e289cb37883f3dfd34532b8873c7de9f49bb546641ce9cbd256ebd\",\n                \"sha256:97aacf9dbd4bfd829baad6e6309fa6573aaf1be3f6fa735c8ab05e46cecb261c\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"rich\": {\n            \"hashes\": [\n                \"sha256:1760a3c0848469b97b558fc61c85233e3dafb69c7a071b4d60c38099d3cd4c06\",\n                \"sha256:8260cda28e3db6bf04d2d1ef4dbc03ba80a824c88b0e7668a0f23126a424844a\"\n            ],\n            \"markers\": \"python_full_version >= '3.7.0'\",\n            \"version\": \"==13.8.1\"\n        },\n        \"semver\": {\n            \"hashes\": [\n                \"sha256:6253adb39c70f6e51afed2fa7152bcd414c411286088fb4b9effb133885ab4cc\",\n                \"sha256:b1ea4686fe70b981f85359eda33199d60c53964284e0cfb4977d243e37cf4bf4\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==3.0.2\"\n        },\n        \"setuptools\": {\n            \"hashes\": [\n                \"sha256:35ab7fd3bcd95e6b7fd704e4a1539513edad446c097797f2985e0e4b960772f2\",\n                \"sha256:d59a21b17a275fb872a9c3dae73963160ae079f1049ed956880cd7c09b120538\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==75.1.0\"\n        },\n        \"snowballstemmer\": {\n            \"hashes\": [\n                \"sha256:09b16deb8547d3412ad7b590689584cd0fe25ec8db3be37788be3810cbf19cb1\",\n                \"sha256:c8e1716e83cc398ae16824e5572ae04e0d9fc2c6b985fb0f900f5f0c96ecba1a\"\n            ],\n            \"version\": \"==2.2.0\"\n        },\n        \"soupsieve\": {\n            \"hashes\": [\n                \"sha256:e2e68417777af359ec65daac1057404a3c8a5455bb8abc36f1a9866ab1a51abb\",\n                \"sha256:e72c4ff06e4fb6e4b5a9f0f55fe6e81514581fca1515028625d0f299c602ccc9\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.6\"\n        },\n        \"sphinx\": {\n            \"hashes\": [\n                \"sha256:0cce1ddcc4fd3532cf1dd283bc7d886758362c5c1de6598696579ce96d8ffa5b\",\n                \"sha256:56173572ae6c1b9a38911786e206a110c9749116745873feae4f9ce88e59391d\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.10'\",\n            \"version\": \"==8.0.2\"\n        },\n        \"sphinx-click\": {\n            \"hashes\": [\n                \"sha256:2821c10a68fc9ee6ce7c92fad26540d8d8c8f45e6d7258f0e4fb7529ae8fab49\",\n                \"sha256:cc67692bd28f482c7f01531c61b64e9d2f069bfcf3d24cbbb51d4a84a749fa48\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==4.4.0\"\n        },\n        \"sphinxcontrib-applehelp\": {\n            \"hashes\": [\n                \"sha256:2f29ef331735ce958efa4734873f084941970894c6090408b079c61b2e1c06d1\",\n                \"sha256:4cd3f0ec4ac5dd9c17ec65e9ab272c9b867ea77425228e68ecf08d6b28ddbdb5\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-devhelp\": {\n            \"hashes\": [\n                \"sha256:411f5d96d445d1d73bb5d52133377b4248ec79db5c793ce7dbe59e074b4dd1ad\",\n                \"sha256:aefb8b83854e4b0998877524d1029fd3e6879210422ee3780459e28a1f03a8a2\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-htmlhelp\": {\n            \"hashes\": [\n                \"sha256:166759820b47002d22914d64a075ce08f4c46818e17cfc9470a9786b759b19f8\",\n                \"sha256:c9e2916ace8aad64cc13a0d233ee22317f2b9025b9cf3295249fa985cc7082e9\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.1.0\"\n        },\n        \"sphinxcontrib-jsmath\": {\n            \"hashes\": [\n                \"sha256:2ec2eaebfb78f3f2078e73666b1415417a116cc848b72e5172e596c871103178\",\n                \"sha256:a9925e4a4587247ed2191a22df5f6970656cb8ca2bd6284309578f2153e0c4b8\"\n            ],\n            \"markers\": \"python_version >= '3.5'\",\n            \"version\": \"==1.0.1\"\n        },\n        \"sphinxcontrib-qthelp\": {\n            \"hashes\": [\n                \"sha256:4fe7d0ac8fc171045be623aba3e2a8f613f8682731f9153bb2e40ece16b9bbab\",\n                \"sha256:b18a828cdba941ccd6ee8445dbe72ffa3ef8cbe7505d8cd1fa0d42d3f2d5f3eb\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-serializinghtml\": {\n            \"hashes\": [\n                \"sha256:6e2cb0eef194e10c27ec0023bfeb25badbbb5868244cf5bc5bdc04e4464bf331\",\n                \"sha256:e9d912827f872c029017a53f0ef2180b327c3f7fd23c87229f7a8e8b70031d4d\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-spelling\": {\n            \"hashes\": [\n                \"sha256:56561c3f6a155b0946914e4de988729859315729dc181b5e4dc8a68fe78de35a\",\n                \"sha256:95a0defef8ffec6526f9e83b20cc24b08c9179298729d87976891840e3aa3064\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==7.7.0\"\n        },\n        \"stdeb\": {\n            \"hashes\": [\n                \"sha256:08c22c9c03b28a140fe3ec5064b53a5288279f22e596ca06b0be698d50c93cf2\"\n            ],\n            \"version\": \"==0.10.0\"\n        },\n        \"tomli\": {\n            \"hashes\": [\n                \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\",\n                \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.0.1\"\n        },\n        \"towncrier\": {\n            \"hashes\": [\n                \"sha256:013423ee7eed102b2f393c287d22d95f66f1a3ea10a4baa82d298001a7f18af3\",\n                \"sha256:9343209592b839209cdf28c339ba45792fbfe9775b5f9c177462fd693e127d8d\"\n            ],\n            \"version\": \"==24.8.0\"\n        },\n        \"twine\": {\n            \"hashes\": [\n                \"sha256:215dbe7b4b94c2c50a7315c0275d2258399280fbb7d04182c7e55e24b5f93997\",\n                \"sha256:9aa0825139c02b3434d913545c7b847a21c835e11597f5255842d457da2322db\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==5.1.1\"\n        },\n        \"typing-extensions\": {\n            \"hashes\": [\n                \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\",\n                \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==4.12.2\"\n        },\n        \"uc-micro-py\": {\n            \"hashes\": [\n                \"sha256:d321b92cff673ec58027c04015fcaa8bb1e005478643ff4a500882eaab88c48a\",\n                \"sha256:db1dffff340817673d7b466ec86114a9dc0e9d4d9b5ba229d9d60e5c12600cd5\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==1.0.3\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:ca899ca043dcb1bafa3e262d73aa25c465bfb49e0bd9dd5d59f1d0acba2f8fac\",\n                \"sha256:e7d814a81dad81e6caf2ec9fdedb284ecc9c73076b62654547cc64ccdcae26e9\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.2.3\"\n        },\n        \"virtualenv\": {\n            \"hashes\": [\n                \"sha256:4f3ac17b81fba3ce3bd6f4ead2749a72da5929c01774948e243db9ba41df4ff6\",\n                \"sha256:ce489cac131aa58f4b25e321d6d186171f78e6cb13fafbf32a840cee67733ff4\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==20.26.5\"\n        },\n        \"waitress\": {\n            \"hashes\": [\n                \"sha256:005da479b04134cdd9dd602d1ee7c49d79de0537610d653674cc6cbde222b8a1\",\n                \"sha256:2a06f242f4ba0cc563444ca3d1998959447477363a2d7e9b8b4d75d35cfd1669\"\n            ],\n            \"markers\": \"python_full_version >= '3.8.0' and sys_platform == 'win32'\",\n            \"version\": \"==3.0.0\"\n        },\n        \"zipp\": {\n            \"hashes\": [\n                \"sha256:71c644c5369f4a6e07636f0aa966270449561fcea2e3d6747b8d23efaa9d7832\",\n                \"sha256:9fe5ea21568a0a70e50f273397638d39b03353731e6cbbb3fd8502a33fec40bc\"\n            ],\n            \"markers\": \"python_version < '3.10'\",\n            \"version\": \"==3.6.0\"\n        }\n    }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.78125,
          "content": "Pipenv: Python Development Workflow for Humans\n==============================================\n\n[![image](https://img.shields.io/pypi/v/pipenv.svg)](https://python.org/pypi/pipenv)\n[![image](https://img.shields.io/pypi/l/pipenv.svg)](https://python.org/pypi/pipenv)\n[![CI](https://github.com/pypa/pipenv/actions/workflows/ci.yaml/badge.svg)](https://github.com/pypa/pipenv/actions/workflows/ci.yaml)\n[![image](https://img.shields.io/pypi/pyversions/pipenv.svg)](https://python.org/pypi/pipenv)\n\n------------------------------------------------------------------------\n\n**Pipenv** is a Python virtualenv management tool that supports a multitude of systems and nicely bridges the gaps between pip, python (using system python, pyenv or asdf) and virtualenv.\n*Linux, macOS, and Windows are all first-class citizens in pipenv.*\n\nPipenv automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your `Pipfile` as you install/uninstall packages. It also generates a project `Pipfile.lock`, which is used to produce deterministic builds.\n\nPipenv is primarily meant to provide users and developers of applications with an easy method to arrive at a consistent working project environment.\n\nThe problems that Pipenv seeks to solve are multi-faceted:\n\n- You no longer need to use `pip` and `virtualenv` separately: they work together.\n- Managing a `requirements.txt` file with package hashes can be problematic.  Pipenv uses `Pipfile` and `Pipfile.lock` to separate abstract dependency declarations from the last tested combination.\n- Hashes are documented in the lock file which are verified during install. Security considerations are put first.\n- Strongly encourage the use of the latest versions of dependencies to minimize security risks [arising from outdated components](https://www.owasp.org/index.php/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities).\n- Gives you insight into your dependency graph (e.g. `$ pipenv graph`).\n- Streamline development workflow by supporting local customizations with `.env` files.\n\nTable Of Contents\n------------------\n\n- [Pipenv](#pipenv-python-development-workflow-for-humans)\n\n- [Installation](#installation)\n\n- [Features](#features)\n\n- [Basic Concepts](#basic-concepts)\n\n- [Other Commands](#other-commands)\n\n- [Shell Completion](#shell-completion)\n\n- [Usage](#usage)\n\n    - [Usage Examples](#usage-examples)\n\n    - [Commands](#commands)\n\n    - [Locate the Project](#locate-the-project)\n\n    - [Locate the virtualenv](#locate-the-virtualenv)\n\n    - [Locate the Python Interpreter](#locate-the-python-interpreter)\n\n    - [Install Packages](#install-packages)\n\n    - [Installing from git](#installing-from-git)\n\n    - [Install a dev dependency](#install-a-dev-dependency)\n\n    - [Show a dependency graph](#show-a-dependency-graph)\n\n    - [Generate a lockfile](#generate-a-lockfile)\n\n    - [Install all dev dependencies](#install-all-dev-dependencies)\n\n    - [Uninstall everything](#uninstall-everything)\n\n    - [Use the shell](#use-the-shell)\n\n- [Documentation](#documentation)\n\nInstallation\n------------\n\n**Pipenv can be installed with Python 3.7 and above.**\n\nFor most users, we recommend installing Pipenv using `pip`:\n\n    pip install --user pipenv\n\nOr, if you\\'re using FreeBSD:\n\n    pkg install py39-pipenv\n\nOr, if you\\'re using Gentoo:\n\n    sudo emerge pipenv\n\nOr, if you\\'re using Void Linux:\n\n    sudo xbps-install -S python3-pipenv\n\nAlternatively, some users prefer to use [Pipx](https://pypi.org/p/pipx):\n\n    pipx install pipenv\n\nOr, some users prefer to use Python pip module\n\n    python -m pip install pipenv\n\nRefer to the [documentation](https://pipenv.pypa.io/en/latest/#install-pipenv-today) for latest instructions.\n\n✨🍰✨\n\nFeatures\n----------\n\n-   Enables truly *deterministic builds*, while easily specifying *only\n    what you want*.\n-   Generates and checks file hashes for locked dependencies.\n-   Automatically install required Pythons, if `pyenv` or `asdf` is available.\n-   Automatically finds your project home, recursively, by looking for a\n    `Pipfile`.\n-   Automatically generates a `Pipfile`, if one doesn\\'t exist.\n-   Automatically creates a virtualenv in a standard location.\n-   Automatically adds/removes packages to a `Pipfile` when they are installed/uninstalled.\n-   Automatically loads `.env` files, if they exist.\n\nFor command reference, see [Commands](https://pipenv.pypa.io/en/latest/commands/).\n\n### Basic Concepts\n\n-   A virtualenv will automatically be created, when one doesn\\'t exist.\n-   When no parameters are passed to `install`, all packages\n    `[packages]` specified will be installed.\n-   Otherwise, whatever virtualenv defaults to will be the default.\n\n\n### Shell Completion\n\nTo enable completion in fish, add this to your configuration `~/.config/fish/completions/pipenv.fish`:\n\n    eval (env _PIPENV_COMPLETE=fish_source pipenv)\n\nThere is also a [fish plugin](https://github.com/fisherman/pipenv), which will automatically\nactivate your subshells for you!\n\nAlternatively, with zsh, add this to your configuration `~/.zshrc`:\n\n    eval \"$(_PIPENV_COMPLETE=zsh_source pipenv)\"\n\nAlternatively, with bash, add this to your configuration `~/.bashrc` or `~/.bash_profile`:\n\n    eval \"$(_PIPENV_COMPLETE=bash_source pipenv)\"\n\nMagic shell completions are now enabled!\n\nUsage\n-------\n\n    $ pipenv --help\n    Usage: pipenv [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      --where                         Output project home information.\n      --venv                          Output virtualenv information.\n      --py                            Output Python interpreter information.\n      --envs                          Output Environment Variable options.\n      --rm                            Remove the virtualenv.\n      --bare                          Minimal output.\n      --man                           Display manpage.\n      --support                       Output diagnostic information for use in\n                                      GitHub issues.\n      --site-packages / --no-site-packages\n                                      Enable site-packages for the virtualenv.\n                                      [env var: PIPENV_SITE_PACKAGES]\n      --python TEXT                   Specify which version of Python virtualenv\n                                      should use.\n      --clear                         Clears caches (pipenv, pip).  [env var:\n                                      PIPENV_CLEAR]\n      -q, --quiet                     Quiet mode.\n      -v, --verbose                   Verbose mode.\n      --pypi-mirror TEXT              Specify a PyPI mirror.\n      --version                       Show the version and exit.\n      -h, --help                      Show this message and exit.\n\n\n   ### Usage Examples:\n\n      Create a new project using Python 3.7, specifically:\n      $ pipenv --python 3.7\n\n      Remove project virtualenv (inferred from current directory):\n      $ pipenv --rm\n\n      Install all dependencies for a project (including dev):\n      $ pipenv install --dev\n\n      Create a lockfile containing pre-releases:\n      $ pipenv lock --pre\n\n      Show a graph of your installed dependencies:\n      $ pipenv graph\n\n      Check your installed dependencies for security vulnerabilities:\n      $ pipenv check\n\n      Install a local setup.py into your virtual environment/Pipfile:\n      $ pipenv install -e .\n\n      Use a lower-level pip command:\n      $ pipenv run pip freeze\n\n   ### Commands:\n\n      check         Checks for PyUp Safety security vulnerabilities and against\n                    PEP 508 markers provided in Pipfile.\n      clean         Uninstalls all packages not specified in Pipfile.lock.\n      graph         Displays currently-installed dependency graph information.\n      install       Installs provided packages and adds them to Pipfile, or (if no\n                    packages are given), installs all packages from Pipfile.\n      lock          Generates Pipfile.lock.\n      open          View a given module in your editor.\n      requirements  Generate a requirements.txt from Pipfile.lock.\n      run           Spawns a command installed into the virtualenv.\n      scripts       Lists scripts in current environment config.\n      shell         Spawns a shell within the virtualenv.\n      sync          Installs all packages specified in Pipfile.lock.\n      uninstall     Uninstalls a provided package and removes it from Pipfile.\n      update        Runs lock, then sync.\n      upgrade       Update the lock of the specified dependency / sub-dependency,\n                    but does not actually install the packages.\n      verify        Verify the hash in Pipfile.lock is up-to-date.\n\n\n### Locate the project:\n\n    $ pipenv --where\n    /Users/kennethreitz/Library/Mobile Documents/com~apple~CloudDocs/repos/kr/pipenv/test\n\n### Locate the virtualenv:\n\n    $ pipenv --venv\n    /Users/kennethreitz/.local/share/virtualenvs/test-Skyy4vre\n\n### Locate the Python interpreter:\n\n    $ pipenv --py\n    /Users/kennethreitz/.local/share/virtualenvs/test-Skyy4vre/bin/python\n\n### Install packages:\n\n    $ pipenv install\n    Creating a virtualenv for this project...\n    ...\n    No package provided, installing all dependencies.\n    Virtualenv location: /Users/kennethreitz/.local/share/virtualenvs/test-EJkjoYts\n    Installing dependencies from Pipfile.lock...\n    ...\n\n    To activate this project's virtualenv, run the following:\n    $ pipenv shell\n\n### Installing from git:\n\nYou can install packages with pipenv from git and other version control systems using URLs formatted according to the following rule:\n\n    <vcs_type>+<scheme>://<location>/<user_or_organization>/<repository>@<branch_or_tag>#<package_name>\n\nThe only optional section is the `@<branch_or_tag>` section.  When using git over SSH, you may use the shorthand vcs and scheme alias `git+git@<location>:<user_or_organization>/<repository>@<branch_or_tag>#<package_name>`. Note that this is translated to `git+ssh://git@<location>` when parsed.\n\nValid values for `<vcs_type>` include `git`, `bzr`, `svn`, and `hg`.  Valid values for `<scheme>` include `http,`, `https`, `ssh`, and `file`.  In specific cases you also have access to other schemes: `svn` may be combined with `svn` as a scheme, and `bzr` can be combined with `sftp` and `lp`.\n\nNote that it is **strongly recommended** that you install any version-controlled dependencies in editable mode, using `pipenv install -e`, in order to ensure that dependency resolution can be performed with an up to date copy of the repository each time it is performed, and that it includes all known dependencies.\n\nBelow is an example usage which installs the git repository located at `https://github.com/requests/requests.git` from tag `v2.19.1` as package name `requests`:\n\n    $ pipenv install -e git+https://github.com/requests/requests.git@v2.19#egg=requests\n    Creating a Pipfile for this project...\n    Installing -e git+https://github.com/requests/requests.git@v2.19.1#egg=requests...\n    [...snipped...]\n    Adding -e git+https://github.com/requests/requests.git@v2.19.1#egg=requests to Pipfile's [packages]...\n    [...]\n\nYou can read more about [pip's implementation of vcs support here](https://pip.pypa.io/en/stable/topics/vcs-support/).\n\n### Install a dev dependency:\n\n    $ pipenv install pytest --dev\n    Installing pytest...\n    ...\n    Adding pytest to Pipfile's [dev-packages]...\n\n### Show a dependency graph:\n\n    $ pipenv graph\n    requests==2.18.4\n      - certifi [required: >=2017.4.17, installed: 2017.7.27.1]\n      - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]\n      - idna [required: >=2.5,<2.7, installed: 2.6]\n      - urllib3 [required: <1.23,>=1.21.1, installed: 1.22]\n\n### Generate a lockfile:\n\n    $ pipenv lock\n    Assuring all dependencies from Pipfile are installed...\n    Locking [dev-packages] dependencies...\n    Locking [packages] dependencies...\n    Note: your project now has only default [packages] installed.\n    To install [dev-packages], run: $ pipenv install --dev\n\n### Install all dev dependencies:\n\n    $ pipenv install --dev\n    Pipfile found at /Users/kennethreitz/repos/kr/pip2/test/Pipfile. Considering this to be the project home.\n    Pipfile.lock out of date, updating...\n    Assuring all dependencies from Pipfile are installed...\n    Locking [dev-packages] dependencies...\n    Locking [packages] dependencies...\n\n### Uninstall everything:\n\n    $ pipenv uninstall --all\n    No package provided, un-installing all dependencies.\n    Found 25 installed package(s), purging...\n    ...\n    Environment now purged and fresh!\n\n### Use the shell:\n\n    $ pipenv shell\n    Loading .env environment variables...\n    Launching subshell in virtual environment. Type 'exit' or 'Ctrl+D' to return.\n    $ ▯\n\n\n### PURPOSE AND ADVANTAGES OF PIPENV\n\nTo understand the problems that Pipenv solves, it's useful to show how Python package management has evolved.\n\nTake yourself back to the first Python iteration. We had Python, but there was no clean way to install packages.\n\nThen came Easy Install, a package that installs other Python packages with relative ease. But it came with a catch: it wasn't easy to uninstall packages that were no longer needed.\n\nEnter pip, which most Python users are familiar with. pip lets us install and uninstall packages. We could specify versions, run pip freeze > requirements.txt to output a list of installed packages to a text file, and use that same text file to install everything an app needed with pip install -r requirements.txt.\n\nBut pip didn't include a way to isolate packages from each other. We might work on apps that use different versions of the same libraries, so we needed a way to enable that.\n\n\nPipenv aims to solve several problems.\nFirst, the problem of needing the pip library for package installation, plus a library for creating a virtual environment, plus a library for managing virtual environments, plus all the commands associated with those libraries. That's a lot to manage. Pipenv ships with package management and virtual environment support, so you can use one tool to install, uninstall, track, and document your dependencies and to create, use, and organize your virtual environments. When you start a project with it, Pipenv will automatically create a virtual environment for that project if you aren't already using one.\n\nPipenv accomplishes this dependency management by abandoning the requirements.txt norm and trading it for a new document called a Pipfile. When you install a library with Pipenv, a Pipfile for your project is automatically updated with the details of that installation, including version information and possibly the Git repository location, file path, and other information.\n\nSecond, Pipenv wants to make it easier to manage complex interdependencies.\n\nUsing Pipenv, which gives you Pipfile, lets you avoid these problems by managing dependencies for different environments for you. This command will install the main project dependencies:\n\n pipenv install\n\nAdding the --dev tag will install the dev/testing requirements:\n\n pipenv install --dev\nTo generate a Pipfile.lock file, run:\n\npipenv lock\n\nYou can also run Python scripts with Pipenv. To run a top-level Python script called hello.py, run:\n\npipenv run python hello.py\n\nAnd you will see your expected result in the console.\n\nTo start a shell, run:\n\npipenv shell\n\nIf you would like to convert a project that currently uses a requirements.txt file to use Pipenv, install Pipenv and run:\n\npipenv install requirements.txt\n\nThis will create a Pipfile and install the specified requirements.\n\n\nDocumentation\n---------------\n\nDocumentation resides over at [pipenv.pypa.io](https://pipenv.pypa.io/en/latest/).\n\n## Star History\n\n<a href=\"https://star-history.com/#pypa/pipenv&Date\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=pypa/pipenv&type=Date&theme=dark\" />\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=pypa/pipenv&type=Date\" />\n    <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=pypa/pipenv&type=Date\" />\n  </picture>\n</a>\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 0.4228515625,
          "content": "# Releasing Pipenv\nThe following steps are to be done when making a new release:\n\n1.) Update the version number in __version__.py\n2.) Run invoke release.generate-changelog\n3.) Commit and push this to main\n4.) Tag the main branch with v2022.6.28 assuming we did it today\n5.) Push tag and verify pypi build works and happens\n6.) Edit the release notes in github and click auto-generate the release notes button.\n7.) Celebrate (edited)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1884765625,
          "content": "## Security contact information\n\nTo report a security vulnerability, please use the\n[Tidelift security contact](https://tidelift.com/security).\nTidelift will coordinate the fix and disclosure.\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "get-pipenv.py",
          "type": "blob",
          "size": 2213.86328125,
          "content": "#!/usr/bin/env python\n#\n# Hi There!\n#\n# You may be wondering what this giant blob of binary data here is, you might\n# even be worried that we're up to something nefarious (good for you for being\n# paranoid!). This is a base85 encoding of a zip file, this zip file contains\n# an entire copy of pip (version 24.2).\n#\n# Pip is a thing that installs packages, pip itself is a package that someone\n# might want to install, especially if they're looking to run this get-pip.py\n# script. Pip has a lot of code to deal with the security of installing\n# packages, various edge cases on various platforms, and other such sort of\n# \"tribal knowledge\" that has been encoded in its code base. Because of this\n# we basically include an entire copy of pip inside this blob. We do this\n# because the alternatives are attempt to implement a \"minipip\" that probably\n# doesn't do things correctly and has weird edge cases, or compress pip itself\n# down into a single file.\n#\n# If you're wondering how this is created, it is generated using\n# `scripts/generate.py` in https://github.com/pypa/get-pip.\n\nimport sys\n\nthis_python = sys.version_info[:2]\nmin_version = (3, 8)\nif this_python < min_version:\n    message_parts = [\n        \"This script does not work on Python {}.{}.\".format(*this_python),\n        \"The minimum supported Python version is {}.{}.\".format(*min_version),\n        \"Please use https://bootstrap.pypa.io/pip/{}.{}/get-pip.py instead.\".format(\n            *this_python\n        ),\n    ]\n    print(\"ERROR: \" + \" \".join(message_parts))\n    sys.exit(1)\n\n\nimport os.path\nimport pkgutil\nimport shutil\nimport tempfile\nimport argparse\nimport importlib\nfrom base64 import b85decode\n\n\ndef include_setuptools(args):\n    \"\"\"\n    Install setuptools only if absent, not excluded and when using Python <3.12.\n    \"\"\"\n    cli = not args.no_setuptools\n    env = not os.environ.get(\"PIP_NO_SETUPTOOLS\")\n    absent = not importlib.util.find_spec(\"setuptools\")\n    python_lt_3_12 = this_python < (3, 12)\n    return cli and env and absent and python_lt_3_12\n\n\ndef include_wheel(args):\n    \"\"\"\n    Install wheel only if absent, not excluded and when using Python <3.12.\n    \"\"\"\n    cli = not args.no_wheel\n    env = not os.environ.get(\"PIP_NO_WHEEL\")\n    absent = not importlib.util.find_spec(\"wheel\")\n    python_lt_3_12 = this_python < (3, 12)\n    return cli and env and absent and python_lt_3_12\n\n\ndef determine_pip_install_arguments():\n    pre_parser = argparse.ArgumentParser()\n    pre_parser.add_argument(\"--no-setuptools\", action=\"store_true\")\n    pre_parser.add_argument(\"--no-wheel\", action=\"store_true\")\n    pre, args = pre_parser.parse_known_args()\n\n    args.append(\"pip\")\n\n    if include_setuptools(pre):\n        args.append(\"setuptools\")\n\n    if include_wheel(pre):\n        args.append(\"wheel\")\n\n    args.append(\"pipenv\")\n    return [\"install\", \"--upgrade\", \"--force-reinstall\"] + args\n\n\ndef monkeypatch_for_cert(tmpdir):\n    \"\"\"Patches `pip install` to provide default certificate with the lowest priority.\n\n    This ensures that the bundled certificates are used unless the user specifies a\n    custom cert via any of pip's option passing mechanisms (config, env-var, CLI).\n\n    A monkeypatch is the easiest way to achieve this, without messing too much with\n    the rest of pip's internals.\n    \"\"\"\n    from pip._internal.commands.install import InstallCommand\n\n    # We want to be using the internal certificates.\n    cert_path = os.path.join(tmpdir, \"cacert.pem\")\n    with open(cert_path, \"wb\") as cert:\n        cert.write(pkgutil.get_data(\"pip._vendor.certifi\", \"cacert.pem\"))\n\n    install_parse_args = InstallCommand.parse_args\n\n    def cert_parse_args(self, args):\n        if not self.parser.get_default_values().cert:\n            # There are no user provided cert -- force use of bundled cert\n            self.parser.defaults[\"cert\"] = cert_path  # calculated above\n        return install_parse_args(self, args)\n\n    InstallCommand.parse_args = cert_parse_args\n\n\ndef bootstrap(tmpdir):\n    monkeypatch_for_cert(tmpdir)\n\n    # Execute the included pip and use it to install the latest pip and\n    # any user-requested packages from PyPI.\n    from pip._internal.cli.main import main as pip_entry_point\n\n    args = determine_pip_install_arguments()\n    sys.exit(pip_entry_point(args))\n\n\ndef main():\n    tmpdir = None\n    try:\n        # Create a temporary working directory\n        tmpdir = tempfile.mkdtemp()\n\n        # Unpack the zipfile into the temporary directory\n        pip_zip = os.path.join(tmpdir, \"pip.zip\")\n        with open(pip_zip, \"wb\") as fp:\n            fp.write(b85decode(DATA.replace(b\"\\n\", b\"\")))\n\n        # Add the zipfile to sys.path so that we can import it\n        sys.path.insert(0, pip_zip)\n\n        # Run the bootstrap\n        bootstrap(tmpdir=tmpdir)\n    finally:\n        # Clean up our temporary working directory\n        if tmpdir:\n            shutil.rmtree(tmpdir, ignore_errors=True)\n\n\nDATA = b\"\"\"\nP)h>@6aWAK2mofX{8+Vkj=%N*003hF000jF003}la4%n9X>MtBUtcb8c|B0UYQr!Lz56RfE?c3qp%k_\nSHrQn_7~2lJl@i=UNd$>)BxNOkKc^)X0-?v#)8n-qN6<M@=zzu)S>cmJxA2{mV(^18RrQA~d8sORfnv\n9}yTTaLU<;$CaPPU3^2R?b=Lb<f9y9wZ2He2ID^SqVK(3-FetQzg?ZW~i=PP*o`G6RP8AkL$p^XfaAe\n?4Ml<oxLIY1qQ!~sESrlexcMesdSebdnOJv6AE2HAojLa&;nbgm=qr<1MY=+d0L%bJcvCKUI$e}1y7v\n&(FkNHW7#t2;Ysmb4g@=M*z4YgW~neM-nzD~vjExPg~sHs&8tO9KQH000080A{lMSa0{Q*SrA$09FG4\n01p5F0B~t=FJE76VQFq(UoLQYT~bSL+b|5i`&SU@!Oq~iIS)&L9d|8u8wNv=>6nNu38Ea&`}HFgyJ@G\nB9{e8sD4K$g2|O2c-|@;t@dR%;`5Qu6f^i+#IYx8|79X$VF3?d#n|xfMkA8wQAoLVDffU76;J#O)CYU\ntTKs|(rtOUt}xq0efX64y=-}wYe4gv+Rewsv@!47DzwFn{pMIm#X%sAFClIW>99{f@Za2e3a^UYte1H\n%y3G<XNkQ|9}&5xy4m@b>HUTlK2Lp_T}m3nsgC)$#bX09kug6MU#nM~&r24-0~c2yu2!TgU+z6-O~;x\n-O@YkJ|0dA=sY-F^F})aITrzTyS?O7N5T~%P_vE*{#XPt(tDzVC+>eZ42i!91eGvPx8>ysJFuZiRYzl\nCqu4no3L)R_c2M{&P)haML0zYtRpKw0?HZ~t=E9}0<93*a^reKp2wsiXosq<ZDnF1d&EGAaqKtH_neS\nPAHxCm8ml!jzxyu~m0X`+&pMkth|PEP|9MZ~c>Fv#$q{3!PIV@d3Fa6TvSqmUyJeY&DcVg-E}?LbjUB\n1cn%!C6%kRp-;$05^P^$8se4pYUP)h>@6aWAK2mofX{8&kI@w?Rm00625000#L003}la4%n9aA|NYa&\n>NQWpZC%E^v8$RKZT$KoGtAD+Y6@Eg2U<4^`Aul~7Q*kTeO0ilWuV9+Rc^uGwAFScre`j2$Ns(fW|Ac\nW2(bdGpp`7)~~rH68&sGV^5%eytp2rf$I$P^&tDKZ^D=NXS)DphfKg^^>wjSF}!pV96<kDiP>k%L;Rl\n4wR?Y1iYbW*H|QE>3jIf<PAk<Qh)HUqO__u)>GP(l7ZCQcW_>M>}!N!7zD@g@#q(H)t=BgWi%13YU$N\nVmCCn}tugxz4l~bZRpUDJS?kyIdbSHLF=eD680xf+!7og$h(lpb1$A3n^FTnUH&q$TelEXHuf=@w<K}\n8US-=>g^8`M}K@j9v3~Yq+HrlS^5x_C{w#E^tdu=QRK#xV=SPfwsrVmExsLP0<FczMGL>{sUSQShx9k\n7)y%<bsx4!*zvn^BJ}l|xvxjwG9Gl#jYye!@43^;3o1AkE59^G)4}Q1>c5zd&U1u~C-JzmA_@Vxmg)D\n)|bLpVvLV$1_gegdA{=cUb)@<^f!?@@sM!7)`e83<8bYP4FBFl%yY$tyT?t2}vUD<))vt#Y!qoK<`a_\nH*MQ!GB*uJn@2f<$*0q^pqqJrUaD1E$&4J2wjG=}lYV`vbdL7DMB`GbvL1qSW%&{uL<X~~nOID3<`<K\nNm`|rmGSN0N8vcdgTO>rx^Uq4@9L!XG)xpk@qS)E`zGu>p{aY7SAvK(L8|=q|0)(qEiyW3k0!34nTp$\n7FIleZUmR{O>^xexp%*qeBaL9(EF@)ruaP-CqTT3%eush)5)ZkvXbkAwe=JrsNyMfl;AJiT49i_|!qQ\niuJZ~KfbA<iHf*_$Mf6x@2MG^0hQ$$x~6SpIEUAsAZ-7*p>;u)l-|69_M)=G#MNq8Jk8gjVDjAyP6Ie\nf=cOUY~IM_G=dgo$*ro75z@siJ34)S7rRVfGj<s5&7}bHq_i-P)h>@6aWAK2mofX{8-J$z%{@C0015V\n000aC003}la4&FqE_8WtWn?9eu};M>3`O^T#obt*`VR~YY;QnfHmzwbC3ciJh5S8E87&>(bBYv517Wk\nANp~bsMyYmG$}2ukNeuDHNG^#ptMd*~JcpmA56q`#0W5TpB>IYnZ>tlx>JJR-$h|q#9KFT3l$ThGovM\n`Z`h1@k{0zqrjTIlGh#re*%w%#go%(3HWDhs}=jz2OtQ*5LjXNW#DIpx4DusYoy!{s5eCbN6)&t+Mou\nmghxP_Ew!2Ru`@Lf_lF*R=M@&`~$0|XQR000O8X0rTPQz>BIHvs?u0RjL382|tPaA|NaUukZ1WpZv|Y\n%gD5X>MtBUtcb8d38~-PQyS9-R~=`vb0jUEJ#2l7?~<q*s2O$6DP5BxjWeoRsJ3)r62}wxu>V6=jZ2^\n^8h*(N*&NpGAry!bPI1qDW?#fYiCKJ;y)-UvT=S?igML|#N0V|1C&T-+?m&U1H&i^Cxkl0h>f8(GeSt\ny!hmM@*7^>0ZxDICF`IKwbq{?g1(QI~>zLfakj-+)%@|R<n`imIL!EOCnl4aU2kvC|v&LcG>LAL;BRs\n)tPPl>FXUnWR2liI0)q792lR#k<<WI|Ni6O@Z>YOA;1gV*d3TSV!hA@Fx4{=_Su|>vITZ+Yw)Vl?|m_\n=wBx}<;xHCT095Jc!zi|neZBkjkNuk%oqsf5b9u1I7=sqXI{AN)1o^8a@Yk4bqd+1TI9oO!O1FHsnE<\nn%)>1#R3HP)h>@6aWAK2mofX{8&GLd6$3;006Wo000^Q003}la4%nJZggdGZeeUMVs&Y3WM5@&b}n#v\n)mmF~<F*xk*RMdh4<TEUxjc0=QQN&}6Hm9cXV;rHqtP%F39VUEBm<DL6_5XW&p7}{fTX-hr!UciC4vV\nB=klEk0DGSIsw>Kzt*c`p>gvF&mUWWnY+nmj$hu71qOMrpiK6<%WM0UY?QjM>E<Dd$EQ&)@i<Xu3r%y\nPhA8ToTHEDZW7CZAOi<bAlPd!!3AKH77HjBNe4=k(8l4rQGWSZbg<XrIlO_8;Vrad*he|sa+jPKIy?g\nmEt_b9R<`009`y#8VR`X3jU--qm?<s#jcJY?@cqmW%SxL8_->;s3#o36ok$Sh<ZD|od~Oq-&KlOwP4T\nErO_ZLu%R3ir1l-;}BWp;EL=eB?r+Ej9g*>TzIfUL?uBD0z~wRN`<_))_g$;$2iAKZqM=Wf4ozvjS#j\ne%<gY(Svhy48MNDC*CFvI2ybZs)tVS{y}E9{J`fJ9eA7OX`9-7a=uTyvQ7AaC&k7ZnB&#8MJZzqqTWR\n7_ph!#tk2W;#<fKd{Fkl}{P~q+w`)Y5aoJlTOUp7DhR;uJ`JqYjLiEsr=Qprm*4E+_GJFkhle?nIC4|\nS`#oltk;4{M<$oYfThyw)Rv0vg^jlQM9#RAO)FIOh$Vo>`XjrmDZr3U~{uvjd>7YrPdca5JenQTSKcJ\nv*v=&uUa8$$X9#<m*u8=}L3trAu6wi6ZeQ<xnvP$y+ytk{n6QgR%{m9jDgLnhaP?~4aDjTQ&(iZ)4n$\n;*96nP6D|vaYxy#Sc=%NB~;lm-|A33=O<_o5G^QD?%m=4>0vT57r?uR>&rB`Rs~{Jh#$wW0{GfX{AdA\n&_^l>WZHb1x{nL<tb)ean!wjp6(*Jhoa>XGps!LBvgP-@1@mEev$h63!D#TEvg=cO3z>mG@T_Z9UV?G\np#oAlWvQ7v9b9su8JE9$tvmmB7w*??rs+_Ioq?AntD2FPUSF#0&<8&)RU~&c1a2ZPL#MFw_*oaQwvhG\nC2wTnRW_!_=_J4pqx;7~P=+z-H=D7KOla8uQ-W)K$=4eSSl|6eFg?&}VU(QVp54#PRJK5)Q^(ok!zf(\nO(oat^xwiX&jrm|dW`($?acr4mee4<<}2G!eaLIR$HZihD|pad4HdBn%cd_G=mMWzMrY=lVVSig^k8m\n|Vg|lElr)>w}H}d6JL{60CPRsHFk~R2T|42NjB%sv|SxN`{ZJ1Gk-&*7zQy-R2q+*{*BZ9tg1rGQiT$\nRwDO<udE#J2S1}}yDB}VMTux520k#3!K`3X@O}%60t{Ftc-jKAb|-7}yKleN26|5hlHgl$NXz0^poCa\nu^&V{r{*o?!VA<PLrY+hTGzghD(#5kNVHprZaZYt##W$uR8%mb^-?4AMW;K-FdqI4NOLJoP1w>p&1;b\n`&F|mzl+0wRTY>~G*5bvt`zQRa66d2vNXoQfwBX1Gh)t4<Anc^DIX|G5f#8@K04491VI0OWQEU1z*zX\n$)IX>iVN8wUs>bC9sLVg6W4O2ILD6NU3Bg;MsQ)C_Xl%%A$qPd%j7LiW&pP4JN{t#WoqD^v)6>&6l^u\n`&(XOy?+-ilBrvl3L8!dNNZ)`pUd=i?WZkc;yu4_|?aYcW;vQ<&R*Ivfg2cB}&44bt5{H0s5klsH#FH\nwR%y%r=l3b;v1Sm=o@?fr!Fer2uDL9L&_isoatz297jX@o{A}`XCC6WOfkP0%87KkvdJYiw3J`a_uCP\nfDQ#!T$k!x23L!W)tvvTjp!Qum#K*Mk5TAh+vr~a$%H_GQrkM&H%*-&d#jq8yW|(11<rnOAC)@e}`9@\n{Twzk7R0$51^Jc}CuE!GAA9Xvvbt-);$WrHdL_|lAeLBQZ_CO#8e=M(+dKloNd^Ep&_NN4$3mrXN;KY\n$;k@3I`3A7~GESY1a{JrSlp+9dend4pK)TrF2-j83%<2JZo!yn?a_Np9tJ?LPX8H$W8kFZ;$7Zr{X|h\n~1^}V>W;>bX?$&DFJ>=9kD<ChBIWUrr@q}LiK{Z1q{JnBo}p~-54o1LT02~gxbq^GP4#1^w?>Meol0U\n3O~tMo8@*wPX&MoscP}o4<<BrMt!s~^@Vs^&T39|E6sEKM&~NHSZl4U-_r&48n#rk%gk4RS<+EeQ1*a\nI<WCG1%vfp4bI#72*_G*~z5HbA>@<j_GX)MqY^ZHyqzQ+q3Px!R>4^X{0Q>+AWR-^uyvQJ_={6Lm@)^\n{<P&o`+-ad;_64O0B&!=-7RGGAS7Ew^QIm8X>K6c}8M&Q(oa}gTEdn{#8KrE!M?1zvUaaV3Fa2E*dR)\nFKi`Ft;+Ggx}$c=P~1dURM}nO!0tbO(Z+rLNw{=efFk{qp7qtjgCv-TZKMd3p8m!}|S)i<|W@Mic{!r\nvVKne>f%5&LVZ0Ck~O(V58O@C=t$@*mbb36jVbEMJ$`LXiY;Rc@tO_s-fMd2{||QZwE5VSY4B+<0Sq#\n#R5sZWW%bexDax}8S=3~m(2UdJ4<+ud#}xCji+(<q;d2>Eu{mTVIqIX5<F>K_D6&pJQdu$g6y$=$T$s\ndx9$Y!j4XPWbi{gRGqw*gHQ@}h5sk-GD6pb~sS%_2br2JS3lGvCwFeqDdX60Np7C{4H-5j|G&bD5*L4\n0y&&58oUwE*8cFVIn`^Zj?Jb{N5(5{*TTWVPc%cvtO+)<AYufl$xy&c4Z?4)+A>|3mXa(ELlNY48bI{\nNVe$<pj-eZ4#3ki+j&$Ub>M!m$>YmKH1A`kiHiQ*43y-)7dhX|M$wzbh0!*8wWuO$+?!7}kF-)oSMbZ\nk=4=^~Bzkn$82y90B{|JZ?WBo<WHOe5LjrV}0-gqxzuFGODkqO@(>E{>8t9YRMlU?`1_>o)|~urDR3w\nfMFX7y>|;Q9$EoAX~ZSAkX2?Mg}F>EmDHAks;8)rup7^T<B1)3cAHj(JkVBx<1Gf04bO^wk*SqtioNn\n;d`QI|p7}~*i=jsQW_%c4$662WKYGLuv!wSF%olmU4rtu*$xFJ(S)oEP`K-Y6nq7yP2(22^_H<5Alm@\nBi*V7orKH<D`o)rw1C?rK1IKs!3%*9D)u1wD8+J|Ri(6nNE@6l-Uv|2sd?4G8L%6u;SZM;9rT-y$(Xh\n487(F`dtA1MmEQrMMnJReer5of(?G6PxMpNJWn$O`6S<n6`3|G8eW*EJm{3Eh#hkMH08ZG1FpEfpFs4\n_REV`&=F$$`@T?0BD^{4Xez%S<^}U1Ccr$NK%=ogGP0~(ZBxF@Dq=FthX}-RiAgPMh88c@ft(#W%thN\nl!9(3MjZQV3v}UlOYdmu_(oZL)W|+>Vf;*QAKdmw**zRBHE?s^C=J{(Iz_`j!?5n8{tm*mMRwrOdgVi\nJ^}Nt{ZD0f*x$pmpk)=6~`ybJficjO?GWYQ6geO-0#f@u4OGWpMr)@K8Z@nlgKH(`<)Q9qvqN<}#I_A\n(Xl)~PeC)N4V45xc&&mwgV7MV+&DQ8Ges6&J|9y&`!)Vf)u&elX-QDSXb@Ar6>f8_7@k(YkJz8mf>->\nhGK{N6=Bn%kTideQM{bsD_<EMt9R{47h0BeouDZ<=5x7IkTkUU74liW8l_R^`b&juNq&D^+Jgjgmrc>\n@p2Uiv&~g^nPuUq|cm#MUlt;JmMM)-juL|@Vx}Zj=Y&Y7EKO4eaKe}XkvY%1lZ!yTUH2u=qF|-&u+%?\nLs!>HCrY%0w!koE!(tenagnyc#)}G2U?AOmz1>b*MrwW%qC%%x<lii}(|S2tA)@IK&5B?ao@5RTw>Id\n;J%I}+j3Jscf>l{mcPN(u1bihp_PpW|(nUn)g~VfP*%|rX*0QzuwxW~Z!~};w!&;L@ND9pHYwPSJG)u\n@j^?ibQ+iF9eH386hbDS{saG_)8a~yy&GEufTLpFY+wX>^%<vH@FZrSkw$V;v-u9FWpFE8J`e0O!ZPF\n}Cy-$46J_ilbLoDcLT<mTUK{JnQET%SK;(RlLcfLjx|%8mY&WE#UL{4~C@`fz}TA2v`jTkSpf65qZa(\n*jI6XlYjZdrIKgWaT`C<LK6RdzbZ9Grr&R#{)rs<M$G}o2YK+oIRrL93>^X;Y0k6Xa24WKKze~-*E;w\nA^)Qt^|%UT5Q-K4H_C6(_K)3?i?om&#@dTRQ_{LTUkgzSKUn-1P)h>@6aWAK2mofX{8&Jz&khR=004m\n~000&M003}la4%nJZggdGZeeUMV_{=xWiD`e-CAvr+r|<8u3xcLV1z1UUSc?ID?mjZ=N!B6OAtHohr@\nwbi7RP+6v=RxCo4t&d!LzIl1q`gT$-j0Dj2f3FSGML&n#~`oj#N6of5BQF1Kp0ayyw$r;~}^mqlg8PM\nTe&SIy%`Q{>I>tk`aKzHJ^0Guc$dUX;?(4&jHt!=sz9#}dn%@u&H5F22!gI~T9C!S~zJ>LQof#FNowo\nZPBBEvmSb>l;aD#a3=jL*c#L&V|mcs>({?JIUo<^+#@1WkB>UinY~QOL8sqBG+q~>7Nvn3z=cUU@%sn\n){2>J_r1(-u_yhoQ!0C|GsRm+cJ7N*WhPE_rPem7tE?gL4Uha#Wq0h#bbiyUe}&(7EIkk-&06MaY%z-\n-TeU9}aMY?5&yJm<f{ADvv&oIlQ*)jQWNEcQ9+23A<eN;$OH?J6jl0BKWnb}Fl(34EWHy<+{r=^*FW)\n48fA{uH^5*I5ORS$3mBxmcTn_#?N!3Oq<c?r=ZKHI--g9MaH5d50o{5Klr5}rlzz073y|Q(c3yDFw%9\nJoW`RLJOQEV_oB*@#UV@%#oI}FaGv*NVgmnKR<6~ZJp>S&hls~VnVR4FS7wU}izoloatx|q)9Lgl8eR\n3gn<YhF2HdX+og2T<%zk4&ucHH;KZdHr-Yi+Ac%s<+D62#T1jGii+Am~16^3Mp0)O|IdhJpWLXRdK6R\nW#F?EzNxpE#>l3qL@KQmY%OvdGhtE-;(zaUkjWR~J+@XwVM!|%zj-Qd&UL$3@vyhHNfH^AZRQ~bu*I5\nxQ{<juR%Ttoz_YmBH*2TBzJinFh3&`)a9o&}94FQWvPSJxw~>yHyDiK9b~-=c7haaQdG<yKZjEQ26td\nt5V#X=^kQZHd+(Yzl75OnXk!I)z)FZ9f*T#yKYMK35=v<}ZpzW?>r_~&NJ`*35ILI6X3b9qWf(I!fb3\nxIMq1xaHr_`0VBphxo4zOsEe{P$d0lAOFLZxUQS?q`JUxA^uq-PBV^>#;D`xZQ68c~e^Mr7u^cvHzOr\n}&PX%+v0)wXDF+s;Eia!gx=h54dtlgx>!#1@F@ZE0O{~A@Q*%X~_Sx-KIBg6~`?_yU>PBPv+vY+v#wo\nGez(0t3Iu3$|}vs;7C)inxHtgoSh>)4OdTF!lN`o+rG@#S)Hn|=m=Ma_VOdVk|f;g9KU=iB1^P(4hX>\n$)<vnDC+RGExKd=qRG1Y0X`J`1YMrH=y*3+Fffd1tJ|L5-5(SRRY~d_k9$}iiJsm>`7lYJP#^sSzzEZ\nThs&nj^pZJAy3YV~$T66GPu^h!7L7-PU)AlH+G{*sfowcP|TwH7+QN4<>_@X?P@&eW4LK{;nbMdD~e|\na+Wu&e25QD=jk4hAXZ%vLY-V7DKqblb6e>7=AM1UZgQwuQ^v6p^22nQ&3ZYHLFd-Y1OS>r7SwJ)_ojM\nS4M^MlQ6Jm|<ih_tld*Olci`l&2l)4E)9xR%T$pmY9p6|Ij^lwGo*@=4ZNU7K<0fLEX}}o?VPL+Fsru\nzEE^2wTBMUS&+&EiA!RvCBBd@f{3S}g8wbUqT4EZb|%5)C}W<Zt{#~JagRx;|CXE<j!ix%F_v@TDawF\nahDBL#|A82zB;}GD`)bW43-Q@o33_x`K<)XvPNF7%T{+RN7LTsyUd*dUi^tu=<HeKi;mP9qx|7ydbtW\n|^H;6pcT{SE;^A1@i4thFx*_BVOLcqj96~dMT3DK1?uuaMFqz1x*u8xioZ)S;&Fgy0>_7kF)?kW(N${\nY^ogGov*r*NHw$VT)v3yF7C9Q;M}b2ffN)T(RFXUy0i+d;}N1z}!eTSC{TR%rMn6AXD9t@bTIq)!ME+\ndR)viXR>frCkLj2DvOWkdaxD8lm&1urK#z#{H8@FRQAkn)KqCi+VVw%d~-$1Ue60q-l&8q;!h_u?TIe\nG@;D9a2|x7$S?6;1>!?-4P^%ECLpQ|#Uu+Nqp43+bLI{~97w*(@54aAC6Jsi;NcnfQ;i3@?=;PEi^7;\nU;_q1peSNh=uyd_*=yp?s9r6)C`wZR3e-^6-*z>>OUV&H~sqOZ!eTlK0{s@`94j0S(C<sI`Kw!k^TY~\nVkmKfm+RwSsw%=w%PJRYcwqk+jh!0q@v&|Fp&H<YXEGDu5AW~VKxeLIK}P~_Q>ETR}IV-v*;j&0itax\nOd^9Xc&D2&btpYnt?iR$lK{7^42m@zlZ7BDWH7it<B8mdmI=(XX#MFQp7v=laK5#o{vF#v;D(;T2-#w\nD<{a9C=yeQ*@-Ok-CG+q_YNuHINE>zKFkw<CrEPBDkd`mKS>)OJ_Jn5nWjaQiEbqe@Vk6kD;vXdUvXn\nUSZHfU7=nR&R8i7s}!-C2HN+1o%2O%={UH3OUM4ff*f{wy>sy80EpSBk6mg!f}4uT*?+vJ>Q?~Y-1W;\n;P>$cR=X)<E!}-R9d(hzqpXbAFE9%om6Yi*?9sgqpO@2RVx5EX5J%Z8-^OAS=jvcF&{j_kV*e{2dS5d\ng2vypQJ=*(Z3x!-&Pl=m#%!kO$22y;^2ZFTGq(8sy-(%nQw-PyC=N_VX`dY3jNNvS~RwdzecaC4#rJ}\n&0t#2=RDfY{&wcW)J^YE^He!7P2IFSlsyD0ah4E*`k_jQ<d?D5lf#&1s=rzq^-~qf$WuC2}taQN&gnE\ndu2iw(bMexcMldz>=f$S<l78PbmLz#q8cHCn21Y+t`TuQ8F8<_cQS|CrPekK||~M)eBjzcNfa8@5e;v\ns<AAo0UjD`+=M;0QT|i)DcMtw>9hauX}*oCpHuE^kP<q9?vW6Z`I&HD($zzUvrTuZr$c!v3T|toUZU;\nz59rTk9d^4cfh7Xyc8cXf6n8r3D)qWjoENqI9L4vL^KElcNx+Z(wdV0W!W%<$oW$CT?PdQ?yYC8guf6\nPDa>tk7y|{dxe0Xtr`6_w#^x2Ecz5%ycu>wLkCVPHmlDgaBc1d8(0kZ5f#=1Va^S#X54BC_Qmy|IACd\nSfjmsk}=<_pt_dKe-s`^_OwblWlAJ@gm3yZN9<wl6T~vW4$roAqvK(!KLYd`n4hhN702c!ONeQ#0s=b\nHRl;eJ#-IG)L*iu6K#<Q<efrz)mYcOxNZKy$Tpl8fOlMD<fT~Pd4HUGt`CUw6>dvf1VCg>1g4*Y+fr-\n;W%HB4zkKY{O4+tc4gGZks`P9oD0%)P^O{>W_G5yjEj1{(6ABDXT;Gm)42cn9`HjY%R#nbcs<A}+;K=\njh#E5Tm<z}EgnIqPEGrI9`fVlGYEvVa5p8%tnuPx60VG#+s;}&<N~XrW5jtmJU8!9@ZmzF4MNNHxgSC\neF3%5i0m9f9Y8<ul#OcIy8n_Hwo!+mxii{9=#P4>UCH}(~1z~R|Drrv3ewO@5+Al<#r{9QB>WGNTQ!H\nrxn?2&p8*_|BJyR8c;!heUaUP8ceG8XKOJ3!J{C}iq?p}BTzS5>di+=O*2nj86_zZ*klY>AQ9Vs5*`T\nni+DE`!01>%*DGL7IMs7%8yGOYEGgl3Dmd)-xX30V%%i&QF4<Umr-K<**e9)xA955A+qj>_3LcCvYv#\nozIF{&yfQ!>XaY39rHjX{%!g>iBCfK|3c#DGBYP4)28n2_TP*}ky`H+`lPfCIn?K(N|O{AIxB!fT;Y!\nTRb(#Od7W>HMF)9C>WeS^Ay(@u#r>e!FU4bbLa~tM9Z>7HLsrj<I!oEKbo?onYG3QR=qF4SpKJX;(B+\n%7)CTZNv*K1&hf32+4|}f755)fk*s8Yxjy2YYzkmD9+XcS_?9{G)tTjB-zhTZtcHQ-Mw*;WN`0|Udo;\n;>tKpxxDZRIJA)=%h92<T>}=bSV+<d#17F&2HMZ=Hqc4<v>LdO#Pvy&IV3c-}B>IVStS#12j3U#4#qu\n%o0ui4v=NEBH3Uor8d^YUg$Qy8E0vFj01i&<~nhZ6$Jb5U>RZoN*2MbecTBrn@seyJTR3@ujn|ED<y7\nE-d?WY~ezf|5oa>HToA&O9KQH000080A{lMShx=DdDIX90Jb&&03HAU0B~t=FJEbHbY*gGVQepBZ*FF\n3XLWL6bZKvHE^v9xTWxRK$PxaoU$MvF5D6zUO<NQ_0cz_zJ2~SVJFt`76^6j0#g)Z|A_*>KM>X8v-e+\nca$z77NeL+9e2x5ucot^i$9S1@1W09}Yn{5@>X_1RfoX0nEBlB7)S#QhH=(5;IQOjzR=0#TA>}I0_k;\nfZ365>#ayDF_~nTs?RO9muXX(m;OMYnObrB$Ekw}_Q0mT6qeMBJtITErU2f%q(USagOjfUvnvbGss~U\nn(H6WW2`aLrA+O482O@ye2G!O7ojcio2ppL?YF)N&)6Z+^uB=)YsCWW@*HU2aKF3<Fpb>I(k(Vn^6!1\nqfxpki>fwT%D7Upvd^+&8E4XdE0q1Dc4|ZbM7=BNVDtDe-%Z6)x~!+-1PqL?GdUHfslxX&dG}#g;_G=\nyD8<=SeAt$Nt>Khu8AfT2O?VZ`FH6bGl!ZJ7*+O`dJFcptn)aW+fjE9Fwpnsk)IZ46B2Hv79ZiPL+16\n>+91)jgl2&T(x)8!D<JvC&<>c(>{Flr9%b_|q4sUK`eTpaG?cN=mR4wgtnX7FjBVaVe=j~=Rx`^*Io$\npyhV(v*S?7kK+#N`^0)^VPUeopfQ8;lUf0eugqLe<q|H2U%U?9IvB=!e70<Fmte$5<B-c4?jlB3)TRh\n0K)HZ|K}$bbR(HqV<>2$=kE@i{m5Ocq=Of831;$mRSkydLceQA3x(jC5n}=n2K~28XH$K9O)%<rdEsl\n<K^+iJlKL7zym!WiLT31F4I-I<P~pE&wn^Pod-8raUExR)#XmrawC386Ul2XPd*&a1C`cNzrXsFR`oW\n{7UDR+O{*ej+xNhNw0R)&TfKqh_5S32WEl14<n-7si#{D*@KV@U<t%qWe<H($DJUr6`KRNHi<6_{==|\nd7_yW{2)uE<iYQ7QO_A_B`KjS>-BON{Zba;Al6rG+Q9!2M8r~hmKx*&Yu1aLIUSQW9nQOj`@k*A3wXa\nt0IcK+dbCf>!nYbhWBb}9wi<QEawH5|^i#?wONMYV~u^xu-a3_*Y^Oyo*L%?pM*rvGNFapK@_^n1oUg\na>*Tf0o8Ol6olk3u0R(Z{jKe+gNW@v8|R;jHScaqGI1WAumR-7{Z)?!TRn%(<H29nZ-+}d_+2V5KMR_\n)S6eRI<9I(&UYLf;HAc?1MBLKvjqvZ$g`a&E4c#WvI3S3ekk5hA#hZ=_U|K2eUd5!0J(wOBQT~zKKaB\ned|AvaIzbqKl{JMGUfLic$<0Mzt3sFpM&srUv+rlQ6G<TzZwB}37!Z<zf*BkGM;{we;0Q=Yp$I$>tKh\nw?)^VxCuGoq@gc$6BU`gsPwPA(#gww-IU<cX6$=_QDljc(ur`XYV(PNK-Nta=vDzmg6gZ`;_Ju&QqRz\n{wuh&afOnRygouE>K;TRs{_YIMz3y$3A2YH%!62p7H%|5c><m_AKK$NNph3Tj2KNE9X}gycOeRC+KbK\nWKDmG2&nD5;_>?dZ!^|hNL{{m;RXyAcMXycaMSSks-g75GpyyaqypDGHn(xdVS{|(&Khj2Mzr~Ba_R!\n$1t&cp`#tX7`E&o&<Op$Ip1|pvmx0{J4?xT&BRrg)r;;r@_ty?=jgOcnA!ROy<285SYLk|7xfd^OuFP\nGi``fjYBhLY6}N~y3f3k#yszMW$eiNk5*9!S0ofq~qAz};W>QIp^kJPUp^?HO1lC%?`?Syx-=DxMBO$\n5bKa~h<zDUU)8CC#qv&(c0#52X`s=BBohh3em_OjFzi4cIbK(=`Te}@fP%Z)Fwrv)yuaR#re*nnbSE<\nF}-ZVHp4qpu5`L?2w&WRI{%Q&vFk7AkfN?8q8(A!D^8ZfZf$Q5#`^4sep;8Q3C;>sZqdV1%qf@Jg4+J\ndBVvCG5SCnWc3UAqUS^Q>-pB;?N9;7f4()<dhLbgISZ!vOii-idE#2y%c?Dy|~(z9F7{ulTq^yX4*g`\n%*d0|ZpOTQW1>SR;?F!^zSjqPtC-%m3=T?=CPo!VZtZagLaix_7DxaH8R+}{Ll6?j<GK%zVIsn6|FDV\n6F(NN=*ABXqNpGkBr2R&`4=wA#S^Lpn&>}o<k#BkXLi`|?F@>@_N>F4e>MCA-CTeuCgvU4FM57>F7I`\nN`I>A=6Uf|&ZhQiNObh7Wof^^~Dqs-KA@JkD3wfRmm^|Qie*Fy&pt>GRX{E;z0?e*B9_YYrr=%z@J7t\n5q&!;`dA$X&G7L}Fn}8n6qP9aU(mYrT|14;VC?gp&f=%&$e4b-;}w<B4l%IcG+WV)^#tz;I59z%^wp)\n}|)}JgSRGCdghI>KcF0CU=I+3yyx;^>RpMce_q+)>75*b7@hf^{#Cz7`j~wDWR<DuHHKy1NL_&b@m3U\nRl20X_gJ5(9}~ieJV9$Db+zlb5gn;DH;7m*dm@+BVK<&!{bA9js9dg#6GVzH>~0335rQoX5yCgB<(q9\n6xO&AJJ;+19pP@vSqJl_Z3ZVu&5#)RjIdY<uS)OqppaJIb*gay@!CLcxV3S;{ojt)<21dq23n14f`k=\nw1;H^Y_wf>eHDBZ{vx=27LZm4{qx{kX>`bR(MR#<pCd8SNTdakgmCrK0)19E&J+M<Tp3gl2Y!YIWCQI\n!gY)i%=wi?9U?^&gNMZ^~@f0T!GU2#d=#Q4=&lJmy+6)*hMYOjZ7}wy!zfFN+Pre-i3))Pve9yF8vS8\n}>!Wm5UFe-@WDiL*NKo?Gg4=%XCHpA9i!^*l-%*4<#+0=$|2DElblWTF19CYP^D*Uktj9=Ix5$PDN>(\nN{<=6m$R51j{E8QQr5AlEv1KL(@_e;C1Q<%Z_~G7i#50q2Br_Tj#Xriwk_0&j~M-!#c`7K7LNwjLF{9\nX9wToDe>X&5`Mh4Rk%0xaLG13>#MS2rINLZo_5|Xn-ZtN-e8UR&k=8$7-@e|}{7=*nLZqWilKU7lpPB\nJKZO{J)+CQMi{nYvq#b)a;?<=_}z<cc#eQoWe*nM-*O<KKG+{KzG4KN9NtDj$G&`<CNd3A>DK=-;$e7\nH)J`Rhd}-lI$eFvM%_!Ba4~-rj^k4^+=pd~oW=O}yjOW>X@CidVI+SY3h!iSa#$O-Y{c8HUe~x{cpq+\nVqpi>}mhu1R>biBMJ2-UTb6DR+Z#r|6l{8s~wyLa^A3?H9u**R6F>#(pYJ)K=3%B8_i*wuZnT-OO@(`\ntPtNSREsOEoE^a)GcrgvDzKKYmS0eDC|`8#{m9sMrtq1alZN^v*q2I_bjhda!eX4ac{APcNlHe2nf5X\n&`r#zLC}nPC8{7pGQsY&Bt)oMH#CYW&V3M!%OEx9~BKt`g{ro=rTLp)?F}h;ODv_Y}<qD(~$8ZBh^vz\nI1yk}}3P*yVFhrQ<dLjNz`SLrQOPgKPgN1D#e3#a2Utbu!!JY5YGL46;*mrq<Jab09;q@`ORX@3vKgh\n4AHqsNJacY-3PS;neTRG<0cmDJ!{)s)wS6Wy<QNE(*>qpYAXRlRG8Z`1LXV!yKY4E#{E8}?N?k3@QVx\npQQJq*PeLG}spw<yLoGjC0iBLUCD42__YfRNyKHoc^&8a?M-nuCykL>H~QQwI?2Yr?R&p(W_o=>7KMq\nfZN#fl?KAXF?dt!=uM82^_v6#o3@0@-Ok+uNlN1ji?2GJ39mKbzPf5|`4(4yn7u~sI2Tv&bBVmow^_C\nr^s!nu`<=ea&uPiG^hExip0h}{tp0sN4xB~^TxRDU6h=T0Thx32ldcdUmO=SX4H`}RL-WB_+djQbFrw\nwWZYZNUS?SwlnyIi>ZncdvW9<E{vCZFfS66sBX$y-h(gxMsGz<%Zulo7XpnLMVx)zUb=AD(pQNwpWjX\nc?Bz5G_a6yv7P_pO@Pz&f?Z^n0%KLzjhVzLlfi+fFvj$kAEjR#*dpTXX7XDNEfPFm2YhlvC6pNP2s`C\nTnBOVO%1rCgV=dH0fG1<E6`?h6lPey7I4FJ6+0I*R$Ws>bg*J9K3P75;1oQ?+$N|@ZT5^Jr1U#%Z@$#\nqdV=o+AeKPG467Y^x0;z(8{Lf<R?AtXOjT%!K`&43+=c`--kAJT|z~PYRd)&JL&sWGauASp+}t-#&fy\nf@anN)7N>{X+O;++UE=Axy`-R4(KVYT@YS+P@nl<zCBE0Pxn$Cynij+EF5XSa|E-Ixy)6ozrALL1uQ)\nVSw$*jFmU){l=nJ;^)|#f8ws#DSngh<Jn+^Anix}G7n9yGIQU+`kr|bM_L<{-TvS51W=1GVmRu3y6;j\n?eYZxFeklh-!2PTW*27RJ1D;$RZ{F;DSU9!dItpqHq*a4Dr&*LA68uU_3Ch1y=zkkzYlSH`c(w0wo!d\n@I$fKY#z1KRqW29-90b&WS;nD)RX%FcTB1xeB}QQ1>8~>lnTa!CN_3=k5>lXRf(4kOvQN$J6zvvi;|?\n>95~^J)8LOIsZR-(&mRRNWLPMa;JH2?U+=*JT)%N8+~dV*?`OIdbMDNgJw1%r|yn9*xc;26ua@I3&lf\nfYCX1T|FXZF?Z3z1%}*uvXZA#8ynM$)IB7pu94&@?!ymTZn(yOHu|*E6oebp>Eu?KrnsROC0w{UkKoR\nt<ydHM7IxsMXbugGiLX91PhAw5zX9s022JCZ+flXtTqM&A|CtTf&w2|^Vo|*b?aL~-Ry7o+`5!+Src9\nDOz<7vvH_f^gulA+q(SH*yoV?zxh^(-(F3Wrson853IdPs;9ZI^MxAYk9{2cf}07*3LPL)DvbV~_)lE\nz_dJ@~c137It)QD6Qp{rbpYG{~XR;cd0~3ZA5F@0^-+Sf1PP9#XrQj<yy~pkp9)OY4@0`!fH>|))7N@\nD9o3}KM9kzMklo&ykhQ6#B}Yd9gL_st4Q<(q&8U?iEF5#?yOb`9H<4twn#&Jl&-|96%-l<8uN@W03Z{\ns(gZP^_R_#HyUw~Qvdl@JuXmk-ITSxZaJSt0#1<Y3H2ZY5Qkg-X9a($ZdrVcC#XFsj&^nsw3c=ZzJZ^\nLi_U@45s2cI<rpTeNsH3pd>}%lQ(ELVO5t0irCnB=#88z^m5|{6ePfus!U2)rtu<K?6ShB5kDFM1x+n\njmZ$^>T6pH;KA0hVgTcZya70v^-ZSF`V(K5Wm_TJ6u*4ixbE)xw=eDP?s)EVh3=U`j*Nwc(7iOOVd~+\nVI2br-QIFfJf7+-RTBa^8T$t_W)YeNi{o5+z9FTgFUEp?~Ta>^e~?LHxop9tL&uE9G~Q!yU2s&a$Qe2\n5Ad8`cpSgg^WLDyEFYAj9<&~SM=uuM-A|W&doO`p_&mIQ)!FLYydy7vYV*R6OnkAYqBJ)UhsxlmG7g$\nY&~SulBl4h~D}lX35uL))$(#o7&l;!w$mr0_5!;c}e}hA#gDGk}Q>@YO9|LTbK7O%idk^zYqoH%f;>x\n$Z6H<LmZv8(kTXUO&l>(Z)V<*U6Ve-8d-85u7zd`gnM)dYxoc-~+7iSaK4nCSO{@%<{xA64Resy*5dh\nr!eyMO!DZ4B6^&aA5j14RT+TUnJN{h>+t&UKn2!TxgZV)^katKl`aA=LxzmJAVf<IUWt|91`!Usu7sJ\n|g1j-Y5#~pI$tS@4NFk-&7BiVDw*5O9KQH000080A{lMSP)*zh&mkr02^Zf02=@R0B~t=FJEbHbY*gG\nVQepDcw=R7bZKvHb1ras-97Dc<H&LU^%P@lQcIpmT<&aNxs>S2IxY8Bb^D=6+Ou6c1p<K~2@3>h3?MC\n!#i~@E!Ku7P-XU+|CrN+I3<e*hsPk2&9MySA0y8~5Jw5$BW6$#@pCY*`lRQ(RQZg3hqR6ZHBCkrZ3Zw\ngQF8!mU>qVl(GLNfNigzEcuEqNg*P<-eqRd6IT;)Y6W<|afVYV(8Nj4Xc34V&ZRkHGfBr9c+h3OqMKg\nw6K2utY;f(if0Pb(RfIC3tgQiBVpFp>fJd6=eRmZVY{xaC3~scNbbgf{UAo>gij6kwjlBFjq=%azPxk\nyG=ff8=@I(UHbB%ClKAUxkH|h4ZYGpUO0unkQ)<g{iE6&F3&T^K%uJ3#V;i+o`oWBGeO@cA4j?GBk=7\nVUmr+94Ne+u1C;kCBu>%m+KW0PPe@N<HaO6dowxv?)?3?Bk?MU%8@uPk#u=65^ob#;=lMH9f=RLfcWi\nW249XCBGLW<NRStPkwgn0CaCh%kXW4Y&yo4UP=JP)&_@=RQdMcW1Jp7s?yHr7Bvlly<c_9DQ#&pA4r?\n%L&hPk0z#sKqgbImj+6Qmo_fh@20bKsMlB!fb@TIJ2e94b-7HS34k?rn=8~vp$!#FHM)AO59$yY$wBA\nHf5iCz6*VEi9EP$hDv?taccar~r^OPRq;k!55dP7Lq(b6LKnXM-Tf!lev?;nC62i=!9fDhg+_JdKgVU\nL3`8CW1r-_i`Feg9tDisAB=R4aN9tF$Jb#q7|~NiVQwrMapO~D7=5W3CBO){&Fzp&*5kP;K8mK;!eX&\n@jlOhA`E|3$XW6!z&!<%i2>sQ0fmu>k8W_eMmXy2h+b$0I<~AsPe0=ihDJ#80|u!d5Z(xn@dg%16cI3\nsU}__JHRN~rM@(}f6g_~|m7P}_7gz~o)&K?>sNs=Il%5uh<4EKWvY4g$<B6Bdv%HYrQ2es5y&ZJs{g7\n>VLR+t=KQ$csf69|=fC&0(l_uo?_#uA`rfHbnpIjG}9O7z6X{eOANLG`g$cup$z<T;1rmh!KOkvHD@r\n1-yJ_#?~^;HtWsH#jN3&eb>VVq{%69r>f;_4_sUWwRth6S4C1@KLRA~HuQi7KG*nTjNzQ6_@SQX&-7D\nvK5(pCK<N(Fl9UjN~-HF3YtUg5g2Cyeb$40=JY(fvi@(n1ld_UI^F@2)fD=*tD>2GYQ0xWTQ<KW+F@#\nD4Hxvt5_1WFpd+Jc}8rH01l{z5|zQ{&@DuEmts5?j|&h(A}plA5OfXlJZTX^4Q8kZ(^$e-000>R<N@>\nm9$u%?B@Fxr!efQ7SbPKV7zAj}RmD9>po11vE5Pj27}by*Ppc#a{<`zcN*Sirlcx>C&uEvz)=bJEsCi\nMzbT+cTKC8dp1A`umms%~{c!UpdtM?cd8Q|jGzJ!fq9@}ot$VQRe;GT!JC@t!Snm9%};J&7Pds{cri{\nU_Ow{;rha=|uR9@re$^U3BNq+t>6_f3oh6aK6v%nLEeR0aGJ0>_}eQj-YR9iBZTv5bA&0i;=@MH3wHt\nAdSHqIwHUlvKEc!n2*c;YhEG0|>>n8S58b16<wcgxJBi4~|+Rwv>o%*Eis@QYD&T)P9WZf1#Pvu$_-A\n24mt!^M#91jZCwR*<2@vlbWwJ@33qy$x>*%x9blr?Du99%Tdt8es6(6hCq!BAI_T!mU%Gr?QWZS|FWU\nxK|n$`2z;Zlx5r}Bob&c;Z|Lq=u<HtdfsKg0fa#8%?MB*Z&{)uY!wtMvQ#<ZS3y)tETUgdsYfWq2R{!\nd4smZQe>R-JrE%|j@`@6TbT?yUV{)X1gw%+jT`azSVAj1Q#p?3?zegg&nayD*{+s1A!16-^3*nya$9y\n`I!8hg0Yoqb@1DVZq3TT9gU&YoE(5}c8lce7zQTQJ?y_;zDqY;QilJr+04)0(N^mDhsgIj{j0ln{Die\nyE}(3GysmHzm&talu-TR1~Q?%>yIWf`v@wLzr3rN84?#eAB}<cBx}eHV3S+-DzO9|6I--^|pxG>*@aS\nFeeU~Z~y1NfO^8~Z_lVS+W+-0|FNUP@MoEvF;ae($^G>||NF0h`S-7%H$!-O&<vZ#_TMt+zj;Bu8`yI\nPEu|;+PpmsBo{)>@-^%Ttx8sEisIh%pTFn_lfL?AXw4E6AN`~E_`#K-Au1%0#YVTZ8yP8X&GWZ890}&\nDlzn+DwR~7$S4Thb09!#Xe=V?LylzB#La9L=Q2<9hFvNKDvTb|~E?!%e)mTcgS1+(>Z(BU*HD{!I6by\nV<#{mU~7j#UMDa=ZM?Z)JvFhLFa6MNcPkd%7;G4vst%Vq6vMLe-sJpzji;;Qht=qR9Uwqw*W{taSWE4\nZ2=(J=A5GV65|TAv3XBueiHk=F1dKba6*M+E}f@`CHzN!1XPG?9Im%f5L(8{H_m&_QH~}8(a8exBJ+1\n_j+7Cb`L%qnFwqh`DreE$7*e?zA^k}-Wl+t_9h~DC^j6h8))#uZHxPiA&4$jcY}E30Grq=(ksNpe+bh\ngZc`JZw*C)US2R+L<Hn`Pt>CCHMw*#)+G5FK40^7`ouxQ<C~Ln7bJ(0gZJ>JAT?ZtUs-*S(?G!Lp2do\n7Q5l-_5u#1RR$;xk$rM6><Fy57v;$m_ke)Gj|#SA1i!i;4Z!kj_suVj?Wl8Ct0_Z<9&&aNP${k#n9EX\nMN~R`>eZ7#8E(p~|zrBktWnFyuEBZ(TN?c}?mAuWxwP+y4jriR<-FN6B|dZI=_n2p0%<ZYbPH`b#Cec\na!VWSEtvf9@;kE#dqJ1&)>iP;JGn1mCQ3hN$MrB;kRf#V)!@#7p?#_lcmB?<RW}v3yx%liR`2J5d-#=\nfE^K4ad-C`p1#k^*Lju2G@H9S(lIiOhb-(94m=~BLsF6HT99ypkzl#w3gbK_heu&?bTVrht}%QPSKLk\n(B*%0jfgDBE3i=%q;EQ3xU_i996VBS3=~BSJ3BdR4InS{Wj#pt3E;anqCSmg_v2?p_Yb2E6_zk1I4Z2\nSyF#)lIj2lckz<4fDX%|Bb{a$3rc0p7@QsGBCvgF`J@g?WCOKO<n&cMtI@e$brp(8&yAzc%=n#w4w6f\nZpzE1TOL<UrAJYD}0G(hahYM4H@7g8Lu~<O~c}Q<jl7VLL=L^T-$2bf>s=SRA>Sws-6-pt1Jw*|xTrV\n1k8fifIKj=$L0t9zl%9m=zE<-KB(1y-7;0!g9*&At~|<<rGOTOdeAom6XzNar?d{&=dC%PtJhEAb=xM\n|JwA`a!bZuTa8{t7+*ijm(wJpne3d_(}+yv3>Ocy;z)R$*1>#GI3!Ak$R0%Bu$Zfx<M9`_!|vjN-Xer\n$DK-pmOY6O<dqT%8$cniHo+#V|PrZ^xQ0-fzh74}-0cKAS3D|JVC?J>=fKW3KXricdm9Aawq%alA$_q\n@Bv;038iMcW6IVTcDRe@T!(AvQnS+SG`zeF~&T;BkPeb3wEGzFa+ul3+EenJhAC<4PtRI72Bk71kC8x\nAB@Xca4JT?S2H5(B@9M;HT7p&9zbu&@VERlsHt#3K>+GK@>~cL8gthbUHL52=j=rYJdE)PIbW6TnUtQ\nPUmaqL2?sUMaFGUnRxCL%md#`{3T>)ul;P;?j|URPRc6wD+=n%!_;Q9y55k$I*LpeSLvIbu*sPvveZ$\n2$pK@Xgl6}obz`QKAx!q@VdDnEytRz>5=zjlE_s~=YVViBIrlCg9vQXu?Hhjy&zxQ8Eo(BC^e~FwMPY\n-K9pwB1rDtSGz7h;Z_U@1a?rqjcVi7ri@7<bTSMTs!r8E>s}bllFu5-Sjq+bi>{@sZkNbu<GiqSd8K~\nn=*!hh_J*e(Ae5OiLI%`)Gu;a%4ej#Ow@)9-lK1r$D<9?IuB4dw+(D|6bY_P0EGT43KoVE<I0m((~5T\npjupZl;oi=tYULl<C8uZGuW%opwRSsT<@N)9~fc2o`1GMYHH$hO;aOg5`)X?o)2#sb>D<WbORDoyB15\n4%N1)-Ip#gp;&MbzXZO<vxm`R4r>m%$7<xo=fSPf35O?qOGwyfB->YRlOoa9o$D+lMS`E1G9^B+I>_3\nM4;Tl4kN|EgUP1|*HkPhvZf99v7AGrZH(NMf`J8|(hE7CpMZBnn2boRW!4aMbU0ymxNjq%+n>Rw>6T1\n^xi!O}rDmpC03++~OZ$D7NTx+b(7;9b(R@L0;SGJZULk0Fg`X|YLcgNVXR>8G#d~SZ=8Z*lOCg8`%WP\n_Nx5u4isx6n?)TmR|75!GrLkM(JPoR-#9rkeilWxE}TP){nojp=v-wKlm-5C|yyNGQ3Xw~&>DY0(>So\n#?P8vlvL+4je=ud1mINwJ~Rjn|F3ac|eLQWgN1=~&`Qk(nLQxw`RKegd~D9-~b$X4~l}l?!S6F#uOJD\nw0(#!)r4O1`47)27#VrPAY^;oB}jFm18_%RVo$O-0rlRl3Am3f3b{i0n=TsQ0>>zEQ)`T3&w4HZ(okD\n4W}CnM94l$!+;A~2Q$t&-fTcB4qQx!TfrFTW(K!6pWptFdENZ*FEzs2Z)`x>)w+SiB_r{}4V5pu<F!T\n`?kQmD4W@P}027`UQf9X%s@lU9Lo7uAo1cxmq5^BEqR`H)O4D_3cpv3df+YpWI~&VK`-7q;aNAh7T_M\nh<C69k~Om$b(S39FcGRFu3EGAc&I~#E%w8w^#8c>-O0qlwUdeDBF$|W226pP(8vtg_LsE5E*^3-|Sl6\n;1SDE-X$XG_4%E)=$cr3z1I(;RZ!HIg`4hdp1D)EexOjJw5PGhwDdkLMQlm__1GlW*F~4>;tl_6J6J|\nLmOvk@krV=1oA8S6C?yq-1t`Twr*^%n4lRI;_w0ZHMvAHfW|f%ru6(HbhH6>gH|WKYQZgxsH@wW>GJ*\nu*<Bu49osGDZSSwsnRl80dZ|}VM@xuyv{L_gL*3$7)6~?sUx~cSP8q+a@l2(aQOb1PF~!2c0h^~+}zf\n{!WAAm(MFIqbe!h<!TY*5{W_Sitd|IlK9~xoJh+$ZlQdjT<4}M=mVREuvZ$2_5+_QP##jaUEQs((MP|\n;bIKD5mav|A*#g^+%SeXd{Fn@vRm7XTR>NID6n#bz_2Uw{9yMari>VplB1}wu}pp01UvcBzbUt`_z9E\nD5P`do$61s}T8A9lHPACuDODRDTK6azPc1D8<v)gE7(qq|p%`z(LV#`8R<V97!%#`QRQ2vKXniXDqn^\nuJ1>n2)KQQ!qhz0W(b3psr`LB!V3Re&5WQQ-o(1)?$$6j~HW@429SML|lCe0K7`6vX>>yA47tmDrJd7\nT2LSoFwCE=k_;t;o{VCLcEPFDSV}CPCh?+l`s4evD+_~<Xn_Jq@HNmTmf&rn9P-5}*8JZC0He2g_Yzl\nz4ulf(Y*|7l8i+`~Lp5YNOl~P1YQ*0-W1TNqrQur3%vFxgS3;>iP>yTI2(}00D9r^D)0RIUCpZYXI+z\nRVdOPf(mtb+sNhOrl46z5`9DQX|Dl?cA=b!588l{CB;0Vn|PBQ8xh2<<9JV_RD%JKoYj`Ef=EWo8VM>\n`x3<IisJv&UOAaZqZG)I&|pOszQ*+3`e-zo<7BZRCDgg~4XtR%msB6;dF3f}&}xNQITSG=IHber-b$)\nnJqmSR0RCrGzJ|5rx0;AWD+axf0jJ;uK{~BwiBa1t*T-jH5H2Pp&Oi=;!y1rRBofhIqn^Ar)}xd;_rC\ns!Az51$z}|T1b_rur*;Z1M?D{hI=sTk6ik7jXM0HtH+(WP@-@!+&(w?W{gB6{q~29f3R$B!0HV3^on=\naqY*@E?UkiGaM>AgAaD+=**`{WNhoEKRm-U?)L!D+urI(E+EP4>PH@F{m66ak(yz8)zK;~D2PZZ=u<F\n8%0gwQH4C_-RI>D%;d}A~Q!IUvYIG7WSU7}Ikhrm5b5ZNfOu@nLzfSt9-85|D6^;EfX^0BmmVekHvyS\nZz-7895NPOB@{NT!ZNHC9epVPui0Dd}l^9>X;kYQTg|HcrouM7v5#@XSE3>%(+THdH5@J{IZU4NbrJN\ni@Z1?D6NH_tO@dtX;aUaumI&G&O<xh=&Byb&^jIE0eM&mAfsuAO_SVo+9YZ^vfMHeZ!N(b9WjVTH|7D\n3dzQL_IP}kqn9*6Z0}6clmc?dI$t*V&KGY?Vifi?m{7FibJYORAZAEH!g@Ly2l$$x#q*e@d5Ba9i)fK\nNz#9jStpr+xF_<TDtSxU-)S<|_TjOz&PI{Yal-#u|<O7MkaJeEa<cq=i3_II6i#}Z0p_faXFe8jceAb\ncVX97S;8loLhl{uyX*c#x>e73fBXJd~d32_8}Xj#aL`etZ%o|j-M1=x635VxnysL|_Mlio<^0c?MjOv\n&_0lL+$_L$e032^*^PPk2hLUaH<PNlH5-0%tnE4zg5Uh*x<GM2eCEtZ1<E_?UN{n(a9mUX|!^>vht{!\ne5_$|KalddJ?=jy?RsY8nXr`&1|ZpVcN%d&N)ql$MTSDA1~i_B^Mac#)iVSI?|P5;}$d}WoC+;y2Tja\nmM_Qx3$sQ*pw1LIkl1I?$6j@H7mFlV&nRCd#trWst9i<(Cd-b(d^~(_rbXsar<p@SKT!c=(rHEXBwC_\nSp#TBMKSjUz3JYX07-)e<d8<_t_ke&ob<M(;R4@U&RH01vJKe}|n9I^01og>2K{4fxh#T5LUh~cPu=s\ntm1<8P%cCy(XZ?>M#8NWd<HL<|1ZK;f!oH^?388^b?D3g!c;p^8XuHFDKsbxxCv_*2Bv<*d)$a4fLhP\nE7)KxswY)iuA`p=-`}>XlZaQt=^IQs*r69U-WPRR%HA5+^6<siAP^H0v%6%l9wz5QRP)#g(+h*bd?hF\nWVRdL7TknSenpZf3>Aq-HwaN!0o)28aZFQrh0=ylA?Mnl2Y=yf7GA-E+?1FmU%6pmS|LQ31p)<vh7-$\nCHwV`CA)qzxtfTJ)3fhRznxr(S0Ct3nRlnxXKw_&6UdbC{PpFBcl7&m@~<DyFDLIN@2{`iMSFezcH#@\nIJ8503RZNbROCz(iBLSWR?s{(I0;<gcUwlCE_n2V4i2M{T(OYn#>9Su;+ZB?MAph(_G7<&rftk}t%RA\nQ&Ed8gHEZrO-<72w|g%7wp={3}5%6;e2O)1{(VY=7?KLtS@k<}EYa}cZLVo59pTL6tqvTt*;tQ0q*e$\n4>1`~*PecoR#H%2$Vup*L+y*IScoo|pAK3v5tvkU&*xg$6^`J72D}WUPVx+V~rhr`SGF2N?zjy4}adb\ntYjNMEMeklBhguxzX*nJH2T8-MZ6tFQP7=<-+`xtr2j9jN?mBfTdv@93LMwh)r*FN3{sQ{LNQj^GC5f\n^q-EVbN@h4eDUS4e*K$6|LFzxEpUPU!vSZ9{?l~vo!H@wC=>uwWkFsH=to_^gsb4uolUguytYO58YTr\ngm6Z%1u83Ii5iir$|7r{X3TAkUuRcn$k-z|GK?~7ACINxrSa4D)P^m!XU~w#6>7km|gt_MiF&x}j<Zs\nQzQUi}E?+u+Cq)ysfVbV+-7|)gfjVvRny5O0&kPiqg)u0vg=M#{4_d+jK_eB2(GtWG?Jh;g)jm|KKTd\n|Q_&&>`P)cT<6v_pr9>QUPKw6U_lA*2t&jb$5b+IE_|YnQci4?V?v7i(}&GhNnvXi?vaI@M<eq6n0$m\nYe3Z*q9+36-8j`1Y@J>*g2w!)rx0$VcPq={6@YdhicG0{#m2-`??w#9d*u#=oBaVV_e<cI0j1M`dQVz\n&ap9!Hb?eGw<!-IV<-PO<Ndn-<{F)dvyI&A-+Y?lll8v+)uqG66nw^<YH#sN^W{tzIMQeH)lVvGGL8<\nz-FY%t+h+mH76bLL1z`7V>YiJtbfH^Aqpy*1u-sJy+!@C=8jy>q-2GFZk?3%Wy<3G2(QRC)RE7||n!G\n;!`1U%O{NZ|X`Tq3n+dl^HPTzwO`6`%PUVgZwu|4mHBea+Gu5b^iu-&jxYvr?Sp>oh=n87fpI@y=Upb\nDx|wBeZbj-W}>3fj|kS>i&Ql;})qH%8#Se>QGKy1{q=Sb;J-Dr@B2<IQxTB8C${n;UBp(+Up$`lOn^&\nrt8`iADPzPh?W}*n5x^i4;{ufsh-cD2Eh=I!{!v9t;Oas|=G<K`M~*4o@n6_0@0h0`j-S-Ce!FW4*w4\ncP-I^H<T@8bgykXTreH~aPhKyJFTWuEDESrJ@=hyqg9KF>(1dX%-isC_M^7zJ}<g*%aUNMNicSZw7ZJ\n3Ew@m(^;gx|Id%m=eXkPLr9HWU_LbDNV6|o7K}Be~7V9Y{*-;hKdy~rE(l6~BPGy=%a{G1J3p&PScrU\nF_NQKw1?<j=ZQ}flgUxDZ!u9`=#bk+d`Ll2BU0w!qxVHUoCR)o$7Yt$(^mZ*EQ<)^@G_b5IH6+Lbbv@\nR+m+)JyFgXZHg0WygWlcL{$bbi+<V%VF{JVlHjzf+i`i#TyovpL$cLA~aIUh{xYSKP}r*p|rW=E_szd\n^b4z_AGcexw@j*0j0*p#fPi&KbX53n4D(<6Xr3P(=1cyP#6}!HO^~-xF|7tW{T-0D>$2EWRAhJ1ao~3\n@%Kp<=Z}g`B^S~GRT0^_U_y6Dbb`lRzG}n?-7TB^Xyq8#aYzXlSXKbbViLeO4l{H#rm%`eeDMXf;}lD\nX`C3#Pjv*=SK;vr^!N<Ua5=f`9M87aB>mz#_0A6{QV-ZOxGWiI7Xpzd~!3outMeCL+OPv#qlkY50El(\n)4Bu-1-EPST0RW=l6^L}e?k5s}=BN5btgLlQ>1_rTa{ZNRvitN8iW#$of;|(@$)veCxdY%<>-M|~;5z\n)YFxkC8IhdxJq@=xOjz<ji2==MsG@~dt|u)f%fdUb&kwR4P{R9%m|g}Od<+POt+;uMYljtq#_{-kPTR\n<*T2#R9SV2fZ{`LF&7Z{R{YXFN|dudY^IPIMr;9^YwqVb<P$d9YHMyWE!n<7I-JkSb2vhH2~Dx0|p5S\nHDkZ}#H-5L__wWkYEvb2qWj+TC~ohz!wUL#2rP0tNU(Jml`Osb{%Ie5KXB^Q;5)f?4Yu~5i2$T(pmD!\n}A)Ld=ddC?sZ2~FPZaMgHrORDmWwG}6mBfGbv&PC?@M+#Y{C4KXf;6{xTz@~g{02sA2B83r0FN)}JCk\n9UL`^6Y8o$nqf$r1t`MIIK<#gb2MKa1rvf2Joc?R>5g@0ncbli9(CUaKpziU0K6X}-{9q`>|b;I<lOy\n_Zyj|=KKCXaaEH7d=c{N1}B`fNabc)8FQB$&3oec?(#QgF6MUbx)>X;`{ev?~U2hmO^z0lNqv`96Y^l\njaK@t7ys11=otvfd_Ofm$0lo1{>N)OUk@WrM-4TS1uZd3Z(Z#682uKHJBm(_L$mu40|+^K>PX$EJcik\ng&X)6?{oI(420LRg!UQ2&Q$usOxI4f;4xJ7(Q-7;HkR1ioi?Jr$DX_!x-FYitCpMGd_>!xd+w<anuNW\ntpdO;Jq}w)ij6vRe*uvuWQq|cKj2P)OWcyqjQ!UHI<>c(c<tvT^AmQrkEp~9;p~mc@ae}Gd+;8PPjMl\nijNJ8n5+_N`#YygbyQjhDRFzooV?ezbnMLp*#AYo_fFtxq{i5zhJ|6$NkZoWS!LT?=p)AX>qDc_a)mT\npe%fUA~scoW#3Up&%wNKu|sL4V2x)CE@T_5rpNK9oP20mI?Z{{m1;0|XQR000O8X0rTPCjg_T=l}o!Q\n~>}06#xJLaA|NaUukZ1WpZv|Y%gtLX>KlXc|DN9YQr!LhVOm~k<$vDeHm;EY{#9(cG<0z;wDNWaBLwd\n8+rS=DXkDlNaEMWKS-IuR;D}x&0NIblhpR`%|<21<eckqfH_irh%#z>-yAN72Q@h!;SIh@#vMGq17&L\n+)M%RKXCj4~ET|~I*uzi+O6s92SxZ9DPKZsxrfBua3Tl)RoDl>E6wF;E+vLc++nSFm5&NF56wsqZO1c\nL{gvpGx4Phjkmb3559C+mzm^hH?f*PKmUSIqTaI3?`gL>gll^vyu`lV8+$8554sZ+g~bNZ9WjB-U0v_\n<lLxEZu_|4>T<1QY-O00;nPviw+K)qGvx2><|h8~^|s0001RX>c!JX>N37a&BR4FK~Hqa&Ky7V{|TXd\nDU6pZ`?QzexJWW=RRZ%%s371ipvf#J?vt;xB%U~U|V1xf?%Mr<ry^|%O}Z6jiUeik(6Xh^P}5+yrMv2\no1{pJ{P;<chfZnBB>iaQw&<;FX6}(G6Mi#;nbleySgD#ulvb+NcqP{IgQ#rZHNuJ5p_A<{eEqQ<7VNz\n=cESGBp&oB$Gg+g>;#p_|Z#J^66??m8^S>|H%}u_VG5F{8tvWQ|*Gx1<xDT{QC%a<vEZR!xSW+@>MwQ\nvIWYO{RiSNL>LW}?QQj3FV?HI^i`^+0z{XTt)O~}>?4c-^xb1Awc19S50t~Hi74aZOKv{riIUz64Q;a\n;mxkh-6G*@QKW6Zusd15RBM$<KL#`(&nof-5^=H#!brR*9Nzq}epE2OCvyjMa0s{j|cJ$=UKP+bY$#%\nxYnK-7*QzKqze~P;kLeGiSW57=$;EzDg?&3kC*rR^vXvBa<xyrQ9!k;7?-H4V{Z?({a0>_bqxYs*O>-\nF2$w-UrVd>uyUrrCHR?mq%cyuFFq;RUe;f*Y+S0qBFNAUO6G^bfO9_!%OPuQ9o4McyX;gdTd;@BrxG8\nsEw0*D_-nZr<x}*I0?Qs}A?!x+DheBYaqIL3(jmGxH~(CX?eKsb@VH>9JS78?3km4Jlz#+&Ht0J&&L~\n%-nbQy+T@te_dk+pVyB91?5UXV)iWy1Wa}9=}x{T9G-DOMmZ)`0v0WUQ=(hFFsV)yUv847^iQcxZLi~\nXirF&at!9RzP9Gkb2@E6c>^u92m*&A?12N?A)$6{CSPG2qF2RZ^ERRlA_v=PPqAywOZZ<u?tGPys@TY\nDhb%egtv))vHF$#$Lpg7EvPD9NOYs9t6SzsA9{4T<&(@cPjQM{g_4uSotED*{i;(Fln@EBX+zT0F5hH\n4{C406uj0i625chz&Kc$Cmtlg=Wr#-*&>k+k%mq7^}e`la`Kg$gmK7-bjS$B!fPlnOfrUjl9|4v;I>%\nEOtjBZtCmnK78=`~0!OqT2LS3i2VG=y|FlHOd~vd#7Kql*0&PTPz_e0!D!)855&eXUojMzkBtVliSTX\naoR`XGX>grTH)TFNf*y~o=qcsqC!&{P{3Pf|<@RPxl?s%Pj3HAGxRZ1AL#=A~%jgfD$WbOyMhko#Du2\n^<tq7@Pgj9rBWxdJQjm=@0!%z?hGiY!WA2rLO|3gHFpGS!LpD0K@c04Q%LlXceHdU>1WINR%0;#k)?O\njw7ZUm*0Fc?|=eSMxj{rKzYkhTsvzy<!3La-Pw*rTdmSm5FYgQ6_k!kFN+1Y9K}G1slHP2J(C8jipxg\nZR17%5WXjHSVqvg6{y;(c1aD7`(1Nbe}FF~cP-DYgHCU11keaMCrDl{TeXDGOSeG5$V;Fhy<o2)i{6O\npI%Pl{YTy@K54;CNEX!WAm%V6d5vL>#R>rfeK>As7aM7EHniNE}<l6@DLIW_hwcHVi!ZHN4^Qs>k4e{\na$aK&4JS!NYZ!Flc{J|+a5LAJAlD1lS}`vG`%c6;s68{sc6&KB6Wx&~yU>`T`VW9soC8q+D#eNVp;TK\np^x<O0JuosYPrbgb~W(MUIhF!t)6KVy%E)=O2U5|4sfvyZwLzLFu{q<}F>U-N;}V1{Fv|G#7f-e4e6Z\nh(YQ0ORY+*K?{^RViOApfeBL&f`=(9Hr_p|L*kr^1h=9j+=;F=S68CuT1q8yNo~;x*|dgHVC`$s+i+%\nktNHq-#O$<)ItMdil7NAR*D&g8yL?vFoN<Ic+x9uUdK293~+bD0T64?LW>%d0LK9!i`fKh09XxX2xAF\nx5QreYW2{F8{9E*lj4^kT8QllRBMk(mZNeik2w>X0Z*02Vg*WgEta4C9K5De((fk$LTicn{^>rmp*&7\n(gH2Dgpch~kBP-f|UTTbgQOC&T)aCQmF7g}PXms_!f<Nz#+>iXv9_U85V4@XPvz*4_0N_Dt~gmbih4M\n#md>Fe7!Z+@8CGwm?!uCp9`eZ=Jw#7n+F@YCjnV|`IeII3Wy%(E%DEdOhov|W)>9;)C++)kVna7csGK\n9tZ?t6s(;cjS1du&2|4cU#5{)VRF>Hc2a?ou07aJQc>}gxB7qSlw%U=WV#@i#|Yupy)V3E}@w}g-(tf\nBkIYfy<+biUy7UewC{-gw2H+9B(h=LP0Io|B{2jlN30!8xZZ|o3;iM6$V>znIJ}oJHHgIS+{EWwgXN8\n|$=hL69^upjtvf*BHb*945Bq~Vp+wyqG#!gkz>UfVhzGbM4n0f;K?lOfjMco7?o{jP{&X%ApGDcbr4b\nzc*~5bfyotSG{(=c(iToiyOy6OJ`==2+E>XTONs~<X0xR|q_0rq*KVBEN#p~=bJ!~9}5Ex{WPT^L9qc\n>k|Hm;gCn`|=h^+NIc?pcK4;&CvPWb0-bQ7=c{L;asQ^kId0IECuj4zz{TQhW;lmj_h+O<B)I`AN4!H\n(>)&)BB+_ReouEK<*)+dpP9du=YnvhN!#SCtz^gWXEvut~I^(4vi;A-$$W)*vXhD77582$#fW5x8p?n\nKn@N8V-mZTNG|ppx)a?281@95ec~$tDyC|2(0Yk#Il}bK%fPuGlk0Gz8_}1z6|o9fadgP%jME(+wSm=\nO-1y5iFSTYV;TipXjFIv95-~{Sr{~dc+<2xF>^Pj`iv?~}yUy<H#XyRvQKnq*a-Uqx(1C1Arx{7)0fx\nBS^VhfTPFd+h0rn__H$`XlkTTq(%hq}H`!pZjb@7?YW%PqCg3i<C@6O?$=P}A<jmd=iw;afnJ7T${M8\n2=sm+0wl`fHY&%N>M}?=Iy5;nPBj57z<u@>rg(P0uSu7dLnj>q$2qpI7wfga;^qN6>v3Ycx1<W*FZ^a\n8$_(S+s+oAqF78uxWq|?1i`1GnIHYot<q3`w96xvF0l(H4jW+hp<_;Wz)m)`8&qb%U(kH;(ThP8;#Q{\nA5=PU@qQf)wFJw`UoUt#gghiAjc0ga@K*)%Ju(vJ2lx=K;G%PVOc6e!QTPv5Ew0-r>P0-#Ov__0QEcO\n7Zb|ndl%u0e0xScVBDOD_+bBq`LPV{VI5Yfez@iV3t7SOJxXB&ovvS<WV>uICgL3V;6W_{4+5z1RTc6\nxpT9q&+BpG649gbeL0)oQkF|q>M2&Z2mDo<z82yW##E#g2u>ktPZJ<q}vbRDC#+(~3O!CxA;dyX^F$b\n)RS_6ddKXdEX{^M;%zo`>fkS<~SU3Xl)^v|m$K{yE(kmE4l+3$$kD2M6)t(?2+jGhs1x6&YM4EuYW+2\nT)4`1QY-O00;nPviw-|B5gCs3IG7n9{>O(0001RX>c!JX>N37a&BR4FLPyVW?yf0bYx+4Wn^DtXk}w-\nE^v9J8EbFb$nm>=#g;~KR7(?%5uk-oUN3c=UT{GY#J&WGVGwI_DQ!$~+1;gOHSmA$%sxmiMJLWxA8c_\nsGdu5>__h^Nlagwt`IarXeXhEu&_dM8A8e@F)cnRjeo><F-)pg6^JeWIMXOsXRZmK&w559EAJtwhDk-\n*jB`s>I6jOxvT-YNEq4zD&^)FvE`-Gg)x~4ZZOUO%J=!Cp$H5U!77Z#)CZJOV)rW6t`Ep90?mfkU`0L\nl~kXdiz7!^lIZvS0GM#|TJXY|=tBO4Q8b{#%N!eFSt%<!#q`NTv$fvPVEQyVoA@626ZG=8a|&l#ueKW\ncR>8T{Ezr^zd(Zb9?3wAIG!ev%JE`9{IgJePs^kkhe@zG@M6RGo6>LqFt?X*4%L^nk{SeEUGA3ty0C1\nHPC3@N>=sWaN&>N!zq)jDVUn0(lEUf@)pRbvC-c1_QIabA$6L=&4t*4Z+eVRuiw6W_vzwsa1cZ8TLGs\n%lktMU2W7rtN&~{3D5#O85;E5tu5zH1JOOI2H=;=v%g3*;c+DVuG~4>yY59c~z*VldZH})KQfydpn`6\nY~V%IR45XssapdP2Y<*MkNuu+|4dCBEsk$*Zr|BYmQa!BzHSWMHnq<fY9ZMj%r@Po5tJ`1EE<QsDq=X\npc7EYAUI0S-ZOlwWBehMbz0@h#i0h|+RNj(^7gE2Ahl&2RP^5<`aHLGJ~4O1v~L5f9E?LQ2(!o}NCBd\nz59mVfQ6pgPt9NWV(}$!SkFzj6x8Dp8_*6R|5YJeDw1AFP5t)iq0$^p$&O`@s5D;w%|U1hj~g1LJe-Z\nFz~<9rUZi#y<r~m^yKv9_~hB~>FMRO=d07_tCMG+NvtL1HB$I&8QyIm;t5xz5kS0a(J-teH+v##j7*n\n*6cH6cqk;gIe(L!g%Y7hC8sK>GQ|Bge^f^jM^w*P<)yYY;MB|y1jNw?Fp>tiJ39U+uGQpj=&hr?;xB~\ny9;DP8rgFfGi#=+wU!BXo7E0e{q04~Awehp^*`Y;D*90q+FAduRk2Rb5`a*wL71uc!L**#YpwP`SWKw\ngbl>rcONkE>hh7l`*bK)_E=3v`79OxS_q=A7JI01mngsDw|DSXKv@>^N{DTGqsKJSN1%1&EqOovx1m9\nxbs(^+1R8CenhCSjSUTUEHIEe6jn2wUFlCU7SlPK-!PA?wI@j8{3<2%fqXV$oYL+^MdPoZ+uu{E(WVu\ng6O^pfrEmP9V4Y^e$r$|8x5wMp~dhPB07y`L?avZ6J!_T1oA1Zd6^zyw%ALU(_dN%ij;ca`z;v6s5MM\nI_;G;)sW!!e#P1h95?I&!c_*dGyqF&jgUnF%-3fa5^*|pJ3Azgk1Hy0U9W)mh?8hJ>5-5F$8?S~(T1!\nUDed<FSKY(oV!zi2r`JEJDxByZF(X4apuZ99|{s55{dNbb${XsHE<RybTwB-$RnrIlv3b71I2Y1;RON\nUWB@D9!!rt#6`S7RBk2Zu((<i_dpfY8{M<al(+Smb%+pNXlGPY~C8)tJpdi`Rpjsou@T5GJEO&GW*Pd\nqiGWHq4BroWq$s2imr=#GAy0;f(;jOQPr<*7I-pTc3&Mq#xVadOKXTrMF;FXfVLEP!545=uwQBA(NW+\nbU(ds+Rwy3F9XJqT_+4Jm)~RQt=M@UegbXSwx<kP!PJ6xn$n9+8tD`^RDe>~WGzPI=mz2w+JbT_BFrn\n0w`5P0LqkB}WdQ*Vfj+2rXuO^%;UJAq=3fJu!RSp<cO^4ILAE1G5Uzhxgi&Qmre?sLZ8o4SBs(dz0iK\nY-JHyl(0kvpFd|gYzm!sHQ1<sldO~-PA69mF4@cIGrVG!AjL#}+4-L_S>enClrUMUBjRCXyld}c7SQB\nb_f;wZt+W)+QfXG-ir8$GXbtgcn)SXH`{9Fh<6)3>Q3@&{%8h+O!h=flvHm}Awlf>*q7*0jz14l7+lz\nH~}Ys0h%Gxf%=z@OL<{nO0K*S|j>YYV43sg26U=Rf^t~%trK(GhGAV>i<-je?gl~SOr$q;U%{6E`AwC\ndfP?*-mWE-wD-`0w%SsIrq*OO+ugIBeHitZH~_o;(j+%CQm@8|!cA@=ci_``u`R((s_5$zX0LepK#t9\nXG!$7FPuXKszc=*7BR_yl#tV$m=;{XKy}r7F0>||A)eUr0*Y<6HgaFs>X<)_G4<mfokK#UH8c}#=8vW\ncZ84f#GP>Q|xfxJMq!v!^D28L4wrUP&%dIy6Eu3J_ln!yJa%j>VkeSqZ$$1z&yYAqRS+&iHCa3BqS{v\nVbv1?k$-guLvUNBDDG*u_fhEC*KR4R|}`zT@N0x?^bc32%OW-BFc0Ojg3MX>8oyu7^SAMu>Wt6*2M@g\neNoQ6abL|=_z1Q0SeYfF0s1U0#ll@2ccVX1%bLZ>D%+Ug)W+|G3Z(2tptr%MGKoC0_tv8;PyIDnHu;9\n^-Fb-@qv}HsR;C#uUIK04QEHVTRRt@+2zE`)V$$1`QCKs`KX9s+%^>442#`}DUK29nPi!Hn|fyDctPL\n`hGbhPN2p_82&_N2EzfGS-$`)ih!e%CUp}U0Oi_!++VCUthH0bjaKVLoSIj0=qxc$J3<N<{_e()#NWj\nE?n-9CTEL^jtw!jZQ?D!ts%JH1J|HBJEE#-~K&1TM)vW4?S%l>;zrl35r%lEXoWo7n?LaxFZ-_KL3Tj\nLtUIgejaI06>S3za(EhKsmtb_X}eba;O<c?W-ymP;+l0Zqq4X8hf}8%yaHky&V>1I>np$il~wT0`No$\n+Ool{xw-03UA3v+gVvoQv8>PFJt4<%QQT-u~<zBK{$ks`N5#zhXgI-5ZAAy`(+xYRv#I*+sbRP=7rVE\nU#vK8%Mz|`?5pog5f-S1x>gV4$H#F;hQaEBv<L9(`KznzBn-RjWD<)(BjBPkBnK@C8sEr(`6eE-y!0x\nb!I@F>4BbQi<Du($B4Mi|+;*lVyXn?(^j0{;AZ1jdYsx6xtc-2n`>2r>r@zD7!@+O4n9&$W75qXmLuI\n)*<oSbT*b}k!e?|VRqGWQx9QGUZkppCl9r%x988iB{i~{4c)zt>q%%z|3#~3VslWO`;d+*#Gy~kihng\nf^(OH5Vo8neS1CsVVr=<9FDgIoUwvggne+U0FVMwx32LjEyP_K-@Uat5I34IPY3{*+A+gV&?91}x7rb\ns%{VoH4*;n2|zjCfGD)a~`&s=+LDs)cIl7ihrn}PnH|~CJp*-T*}*)&^!%>c*D2c7V}E7|8!8p_UNXC\n?a!d_2pq^-u+5IK+mx6jiH22BKftPtn+A?sRU#eewm8gg&=2X3*3cLc{ISh0GH^uzGxqNn=O6O37iYh\no=PzG>!0{U>iOOy--BuCF33mdnqzcJfZPqejGd4KtkGEx`2y(6;Qk$CIs?0e#R7P|FT(y0>-1NCC3rk\nJhugQIzllCX04tt!~vcumi8nKIm-=O{r4v==b7?B8kGYe((wR3<z%>7yai+2kCra7&{@#8zaY0~$1-g\nSrZAqhipqT5l6yc$VklHHEV2HLhbGD$5&OkgtCl4f5c9FL<F!6xxxx%eMYO9KQH000080A{lMSXrd>p\ni~S102eL*03HAU0B~t=FJEbHbY*gGVQepVXk}$=Ut)D>Y-D9}E^v9>8f$Od#_{|8iVcMzJcMH7AdmKd\n3(z`tV8Dq3$w@yL0<j|Z?ile%noCN)1o`isnSF9eo|LxfhZ3-L+})X-_sq^RilR4Neh{+nc;9qv2mfw\n|vMS1Y&mIm!RFdtw=Ez>vvgcKGCEgEZCyt`-Wx9%@XtgSjZPWFvYW8~oGOvwHTizecYbVSvc^LY#S`p\nIz)Z#vR=2b5`ep`uzy)I>+us3aAHZ`vj_I7A1u~IN?*{0dOsEek99r8PlyQYX!8bmp-o4U+-RsJfnnj\nZn<Xy{&a5-^{`r<YjL>U#h!epaIi(?5KY${NTAYSWy9JPqJKQH0NNWNxYWkPBi`1{)FB%d!%R`k!h!v\n^X!+%p9(x=y}0=ZZILVJjq@h2_#{A(PyO5tN`(L<?Yaqh2T&%1?WAk%KFY=dkw$OEG4`np63=fEhw1S\nP07Z_U^JvDY(@L!v#+0yBNIj0qwUNgGjo3cT_yHBKg}UiGjpgq@gD!d0C|ejXy`a|z+}Iv_8|jW)&(r\njV00PeSjyb27hoox0QGhWJ8*f(cI7<R3RH@IX#1wAWJVksG)I0XGH)`k1g|sR?d2I<!)@C&xsaX{R#o\nPPmqEcoTcp_lzJ>R1K~y=!qgg>Ku%UAfkC7(pn+(S00Pb_U5`L~$C}z>It%+GFxW;Q5i!+KBS+-uSGO\n^zSj$M;=0@ijS&6{Hj5{<hke#b9={p|8@S$gy7`qI69^ywuGL<z2b_1zC|u3kL<`}GSz_74>Bm5@W#1\n1^eZ?=Z@}o0`Xsihpx6H>=gE5IdITP2F=aG)rSFHw>J5%`U%Tx1hDniopZ%`C9=(IF_}*Xx<-yZTJtD\nqMcPub0=9<-U-HQW^kn|0^YQ|<3|RF-#UoC0bzGir0hkyPa$12m!GH4%x3hr1Iy`Zq9XQX2=>My)x>h\nWHf+d4Gk|B2^~D<a{bt5x5}K@q&~CUP^vP<<@0Hr!Fbix=u`#tTyA|Zx=xD$fSNSeAe3Uz+29#c7a)c\n#n4}30w6vz-NFyJbi6G6JXXB;f%C^}J{m;;v<TubOBucYv|Dy8Pmu7nAXX*-OMGUAk!KbjyxT;G)~<<\n^g7!iqtl;&{~wUYvk!o7~eVnZP0?ly*il>v`%8`EyiWurdWh0bf*`C9H0GdetE^MESNGG{y_|lInv)D\nOuZq@DlYKq?v<HOEO{)6HFYBye?Q%S0{}jb~J5?*mdg2ZF=HUHba+F#N3?c4;Py};&b>QXiIGgKfd^p\nef8C6%w{9sG{OyNf0fo{)}A0v{sJ-2WvkUhGUPPA&ty=p>Aa)`@Q4=${-Uvu{Sbf?PoG=dd%d)|mj9o\n)y;5BeF{s9R%4Vj9e22T<Y({}93>7*U%)|?*9x+%*$VdXxWUb5(Ye1;4AfY2RRm%`z3FA@@M~asR;m<\nIzVSdlcO4Ye&v19I)n?dqsg$dk+iA*FFiJoi%S32S+FjEGl{5d-}K}-?$B$J)`1l5ShhIzpt21(Z6=I\n7_v47SMcnxRkGw+&H6yLyX;x}xHtSN=|Ha;(3PgQ5#93}&&eNi7`6SwL1dY+Bz5=Eowivp{Ed3nf1k|\nB#g74GRG?Lgp=j$fJlYbLxE^;`b2wq1ziqu~=Rp8Qy0`A`UrJFG)b^dK~lpXt1mrk7>k9W4By_y@?M!\nRWgQ~wkmrV(^gl`78VG(o<v7KRKG#@c_?v%!c%U#nv$oS7^O^0ki{qDeI4NtV&k2tw2MP}4YU8)J<$=\nc$ZR^^owT_ZrocqxkgXAdT*~uhbT{p7%JawWrZ}+P41%SS$0IhiOs*Fd140iG`B6ayI)Lz0V6noM{%$\nB%s)W&UaRX~wYI``SiKk%^EtvUPTw1LbiBT;ClyY~<nwp57RjJ+$vAde}2Y}dUvFejLRpLP0<TM|f3I\n!D#MT(#YSV^W4>&`=phD*!ce(SZ9d5H9ZP_EfW+kgbm_Bj~&>=Aujf$buiq%c0z;zJ9j2Bw6kF-91f9\ns6y(*GJv&35x<`d+?~=6nQZ3RcwkIJk101^T+!*Xao4dNCHM3I_i-0Xc_Q-j3cHYGA}?q8GEo}LHdgx\nEUrISvK}$##HxvzldNf}7}7H!Z$OhIiG;I8G7C_U`JItFp2OBo9DQF(iKWB$8qcL}HfcleyOYBa?gg~\nz)$u$TIucOdDd=i>SmhoN?IJxtp=85;o5%ip^cZ)5dc7nl_Kl-HdX|13ttk{@LMbH`no#_YtkE{&CZ;\nsmI8eS}iNQV$D_7nNN%i{|Uwp<adT^r9kWi68Qsmi+j(w^s#?be8N`u7T4m}lQ=woV71y6If#Sx8C^$\n0hrF96GL)a<@$Zozk#rtNvfKP=mV7}wdnN$m+Z$>?I$bO2P8R}Fxjc1YIjT(&d^I|#&R+^AJE2VMyYE\nlirc>&qR_F<?c8z6il={fSwMMT9q+8oX<9#ZH7HqkeP!qU(Sjh!CE$>C^H9?`rU^u{9{})nS<$;P{7V\n-@wn{glrfXkItW&MHo=jQp%htE>l2hBhg|jL@QNC!WAv9T#3;}zkK#ro%PE8K$|N=5%s-e*+qH~wlhv\nVvXzCvwQ<Np;@M>~HohdVwuDWJZR^<H&gj6}tnIpyLh%Wz2ERgZa?|RKpVlE?2l}6}0aAPK>AXa-6LO\n_@r)#HQ<`w^;HobSpz$7?K<p0Ox#Q!8JkZFy2vGHA57hCO`Bw*9Jb#nGfT$Go88p5$b3f<cutHuMfS;\n5-;(n^JBa`4jI1!9=Axz0rd^F*)qbwhp6%S(mtQsF}d*Y2VWjAx*nt(^1gD49yYJnN9qu{Qr>ItksMK\n<2djWu8%>nY(zICmOfi&IeBOXw`0~+MZuOwVmy}NzH?!ITu@F)O3oNE*uMHe5QI-B8rLsQ+Z5fu_y<1\ni#C<RBQl^%sjNK_N?JD>nE|k!6k0vhc*84-%#APcKMo(;Ao)#}kDPcr&YY9QkIHqu@&l(QMOAwS2MH%\n>ePTX$0v<sXLiR>I2I!ZjtYg0naHz+?lQiz=z$RV7AUE#`wY`g6B!qND9|oky=H6eII3lMYXYWApiJo\n_Y<7rTJbX20>*jjcA5mCa~bo+4u+w;%A{AxQX_{?+OGo6s;=anqZ!BS)MAU+i39vF_-k42u4|LEFwr>\n$A*Iwq`?$81r-Vud`8ZmQ;bVLnrsDXKg&&Zj6_Wc#XEuCpC|=fplU>{x`t8q=cCJSKQqlk@tM9@~_>K\nJ^DAht3;Nm+Xcr^}WvYl$S~teJzd^osMQyx{d?ILfNk`ac2<Bcgz+`y5K^^-PD8EEnnlu9#xAW^a%k_\nhpCYjUJW%GfeO`Wdr~xMb$bQJOfw_+Vqk1Xj{3x0_GMtS`8H}nkzktR4PmGJK_$wW#{Wbuwxb?e{Nw~\nF@NgMNFUfAzUdXOKx|Q7$r`~3MFMNFUZ7*In_G75o4+K<!zSI@R$^T+2fo#nCej#WYsE@?vItCRsCY#\n;dg&N(G%OTH&D0GvZka4e$@1KA|g%1lqxewD$?Bp8i;@wRG|I9&Lab)l8WIC~L3m?QYb%@NHs#4uY^(\nC2*L1Y87h*XBPJ#2)77mV9JrRxL<>Q5~wx1=!UyBr<P+~+~D*Z)#_CfUMKNt$CkN^0l?1_sTu0azel@\nqjitF8DVI!QGB`ny0~W{!tUuyxmUPXa0j|CWCgD>6EhmN2;{PYQFg|BW$0_Tza;6OY5%fRe>wRdd`2d\nB^`1;&88RZO5{za?67Da>Z;)dgX7&EG^FpI$G4{*Vx-8x(EZ(V$>{c*0PF|e@w)f!zeEpzat_H*ohcu\nL_1FcZGcK#HZvl}&F1lveAJkP{CtBX&_cQ{GQBd1;0c$1tPY?r00Pi;jna(csFSI(6W@edGl8l}COoc\nWrlP=g#E%u0YRI2aDZSb3vDFOCgd`q8A#@^Ryu~Yndt`-Bp2Crjqfho-Gb*&wo00tL}_Cult2e82*<!\nuXxN4j5p!m)N7Nk+grfP$rg<1xL#U-VKFjf34Mxpi8{N7rgG6leM)n|@j<Mkc1dn+vMJrZ)?L6`%E(P\n{Zg`=zKX&ME@R<X2Zv6yf7cHaGN5hU!eubQ5PBN<Gk}pV)ZXjO9KQH000080A{lMSk8CqG-v<-0E7Sl\n0384T0B~t=FJEbHbY*gGVQepBY-ulFUukY>bYEXCaCs$+F%APE3<P^#u_8qtlzhMk=3<?(5%`MyK1gY\n2Mw4@X-N&GE(a9)oL1JPjNEO~NWIWgAy^~d_7(*<0HY$wCO2KvO$|>iZ(gW|0EHu%7XCZET^+k1FFb_\nx{J_GAMy4PEIr5{jB0|XQR000O8X0rTPeWIq7DF^@n(HZ~%BLDyZaA|NaUukZ1WpZv|Y%gPMX)j@QbZ\n=vCZE$R5bZKvHE^v9BS>1EnHWGi=Ux8yEOipFC$)m37Os4hRWtyu!NjmqS(NHi2S-4OH3xKxt-**=u1\nVB=5a(b}@V83^N*oCt!`yifpP4tm!(uo%)6`{QrwK#PR(_FNKw@TBdVSDm;A-i42I}&zxyK<3b*<!&@\nosgP{PIpu)HvCrpo4TmQL5dUMnn^80qlnw7kCeA|PhUFTKKYGz?PW>c!*Tl9uqFAxm0ptj4&~BjVJSe\nJvf?cqg0-@4czFVDl~F<t5+tLVRng8Yu{fP*yAOJ~-_@SiAlNZ+t8)xaOw&Ep)H8Tuy4te??HgUO_L)\no3o>;3Fiv_I4Zf1EwZht1fi<Yex1U}%>yH?8!c@V&z9E6N~PQ-zrDFoCYs(*AEq3>Z=l^73X@*VkAv^\nUyQGQtm}N3R^I!gVEjSz}nKI#v<;18-PqH~>NR@cyBC_s8e^>X-ZfJbbwOe3y|{XvhkPZRxDCO5;Z|-\nOKi>_)%&_P9e`!a*VTb#8fgPsFO^g)0{rI6a<&x;ygpms{h`9{Pj~-5OCGiGr!=Wte91|ei0I4zm6z3\nG3RZmx`yk#*t}V70|gL3gz^cI6}2tQNr+^SS@%++!D}aSWBJ^YH<m3s*R0dzeY<DpJ1K>nBgK-#6_@A\nhnH0~h?2sU6Tmv<fCy8xOx!i#ho9)6yAW)7NRV_WS)li8WrR5eVF@4QROjlzQB#E^#m;fR4TajjAe?}\n6pMv~;nBbfVTqNg{*C(D=-S0*<?ojC>_t2u2*O%<4Rb7W0-6LW=n0lI|w6#;9A43cLfgD#LBXGoqm#Z\n|Ew8PbRvp!O1B?jDwv@u)hA7gO?m>$V48u+=yF3RzTvbZv}vIa9)_)ar%nW1ihYouuI5{L_+6qIiZvv\nt_zA$d5L*iC5;-Nj(C^0{UG6$h=6-HZ|tAGo!&fYIGnrIn^IO=)tn4t!Ozo*BClEgZ{;H=mAiq#5*de\nUg4JHkG+Y1Zh};awz;f7%bpbzZs39$p>YJ7dP;=>nIZFN>%hW;&(!hw`3`04BLnQT`04UzFl9*&@E0J\nz{z9}*>F91r{dyo*!Z-HWE64EDNyJDzJT*J6jn@*|+zk-mJmK)I8IA?&vv*)r{7v#2(Wzx<d`I;WjmJ\nyP-=D0)Rh2uPmL$X9@s*SM1b2(8SP}dYz-T>cMDme|5fv&45l*qTw6{ZPLvQT_8&~7V!+wcSM*guLy1\nMey9}f>7?>>F1{(bl1VQQ1VMZTY_L;U1$qJmml8ul%fPpa^0;<{-oV5e$C`&7X<;AIyeEK-}53FGY|0\n##^UpmvGqP3Q2;MXvx)4b&bu8*T_<+Bf=4xry!s+mY7F2UE`O>d)3$vH5Xp6h6l_Nme9W;-Mm=OEo_)\n$+I=peYKXFeem|#m-!%gJ7bhP4}G}r1bEx^dRE|<K_Gq`iTe^4i{n+q5&@axjuZNFMxOXH^ER8}3huj\nd1>+}hsSFp3`k43CXe+I3D`z=fOPBsOv6nMtKCus5UgZ#2vRVttnQ_!^H&Sx9gDxUswA=lJ#6RzLOZ*\nPx@D-a-_<=^kuNYlM+|m*<&;bs56;MVTQt*fq0O^+G$0ETh!)!Z72s`F^>eZNK1wm#FS-S&J0;5ZZb{\nzxX-K=lIrJ~5ok=I9PvH$G3xsRUI48|b8H(L@i2e@xmZ?^`iZ*Q|%kZ}qD%s@$|E;Oh*9I@VEjY|7H?\n4-;D<=SVjG2ZE*He`9rYNiyGmqlD$#<4ukFylc^23CIWNs7Kx2^6T(x+$OLX$az>p<1&RdJZSf496v+\nRmI&TjOMB2&bo2~POmI?8>CXEF8)8^A3yQ9@%{Si!90zTjnmhG5VSMbaU4J2fItp(9MFvXRE*R2)nXn\ny!_8jbRNK*AZWB8rS@}P~+kA5lw@@qvuaa48FWfX3cNgXv;&n83<C}SVF>{{t%?hVpbBn{Kf1=sEYcJ\nb{dCEv;!{JTiUl35}PHiN`!J<+W;e5A4Ftu0;P-?&6DT}E%xH+G!AS3B%&`)7=2V)v?k0uG2uKc?KFb\ndPW1Lc^>x9~8-eagdn;xmv=k`XbnKC;@*t1J8Fu$mZeobq)ZaPIVDuI)X3B5(cU$LL|<?e;n{SZ&hT-\nJwK^4KXIHzYY^>(Q4lIVcaszP0DJCC|3B!>W48{d8<+*k}eFDn1wF$`~#}ua~wntokH77J_}c-fO6ZU\nL$i*)$G_nDtOykraf>vbFr4Y~BNs<Z7Guwc7r`soup*{w9wQE}ntB^bFsZlq*BTh&)68}%Hounk4FUm\nGvZuZQ*O|V^a2xkVCZX`H7IO-vSUq>Ue-eQM=nGfO-lv9XL~3#98hM$Px3?Y(%OnES(jyz*6!*#Dv2*\n4sEGe*1SFYHKv_#(lI=0|gjd^=Wy@DS3!HmGEWxg)``ekX(yN4{HN)+m{$fL7`TKmJqJvvDr75>c!e#\nQLjs%;+a_z&{|#ZB-Ot+A1DjtcLmb~%q_E^+;1b^qJ^`{;}jt&k^tyvqHaS8d26>nZck1ru=}ZcpGa6\no1-wDxUA7D-I;$HuxY>xiF|S*5+KqaF^;<3?O$fjgS`{Oh)hvCYsAO_0k~}K03cb9&=7fSj5>-#DmBX\nzcjf_6KWrF+@oa}F6bc)gL9nXGEMo6h7~uTK>nu#jg>PiX4>^&gJ|&5_VCVVu27J{_!JZ`oHhI4xTyb\n&Ldg|I`WkT>8_x+)8zA{FP)h>@6aWAK2mofX{8;C=ki3Qp003bi001EX003}la4%nJZggdGZeeUMV{B\n<JVqtS-Ut@1=ZDDR?E^v9xS^sa_x)J}~e+8kSs|`2;_G>V2NSd_IczI5cIPHd_AZUrUxyqs*DaG-M{_\np!7sqdE4ZonQU6pc(C?~ZrJ&)rc$5L^i>**m@4i8N+WBCMS<dNnc;xx`;x<SLam2!hc_?J{k0mgvn!r\nJLT*Fw*H-)uTGgGhwW(f7|NK9_rWJh)AwP^mVj0dRMPu<@8696w>;+{E$INHFK+MK4o`Vu5>DrDO(m<\nB1fJwQ(4HLWg2S}8WnA;HAZ?33nO1AthHjoGMeCxo~@NC&830#FiKRlG}^`5DP>O(!b;B89J=K4C9f8\niE_mlhe^W2>^b`kYBGW9SJ$XyqyO}9_%3=YpZLZ~76iIG>kxBMmo1MtP<`i3-i@dPVE0(rmJ{~bVHxC\nbY4^#Jg|8Vnhe)sgqub$?&*Zg|^z+1CVi(eOapBC+*kMoD+)8*~W;v-+&E&2Pqr^WSjG#OGtzC_a7t}\nFgZ#HDpS%ksyKG1~Z%Yb7?Rwz-P#Rn{7xr`S}2KnBy+@IvN$ZN9>Csf>Da_eMS|UD&HaCGoW~<<y|UI\n2nlz*D8?+>0IvWAlS<2E6+r}<$9kETimZLk50Al%IL2$eavGVx?4Zx<ufbuBIDJ;JIQaSY*aDZ$ed?J\nZ>B6I*C*;<(&==1HMWrPSk<Am#BZ1YHqz#>JY@1gZgB3*fzCxaSq=R>*G-~VBH=WQQ4Uv%4FzpAV1CH\n)S(&^LiA<mCqg|va48w~wmWDU;qY>u_0M6NreGbaN3BHU*WJ#Q%Sq)yW)~y>GbDoNw<a{z3jT|6W0XH\n5vqmv64HHF0<E*R7XOCTkUDTJhv*v{_-Y)Clse8E;)Cm?w*5+I`^i{+Ye>`>*LkF8AB@E7DeX7GCfk>\n*hTQdT=u?(&(i^S`o%PNmm{9$RGC$t0{9Pe#ogWP~IF>*-H-q7;a^@~t~vV$W;<cE&YjZIPK<<6ftoS\n&GZqI`~$_=y>v-eIsSQ2VKH-g<7*$F>O5QE)#Lgw;<pijAzbHT@sQuqyM_Y0Kdp6zshOPd8{MOyHu4U\nX4OkG-M4f<tS{=U^|^P1zQC;H#)iRJ6?&H0tuB(7Hpa>X!*b2?t+M5Bwn3`S>ZKTT1HAM!j9oiEj6|k\n#hX`bNua6D7dLxsO^(@v_X*u+iABgX`6%Ny`v`Kpdmryw0N}v&dP$ZS|H3h~iF-`6acjBuoea9W+Zg9\n0IOTM0}>!h}ZE%yvehZHXzag|zqZ#IOsI#YCj+rvaRa3nJzNwZ)JrzXH-l>r!xCBZIhln7Arx+p840d\n_&q_-jc~fPVr=f37oTDKG@`P!&9@0|}*L!(t60_lLX!`K***b8~uxgM!Z3Z*UBd!AQ2315Es4rq*sk0\ngYe0L67`?#srvTMp~KXjWifZ0?$dst*|)TW?ZhEvLMymu?$+42l5Zw3}vj@;1^YjpK-jtI3psHG&VFs\nq1IgJe7-~VxPv0nR~0Q}27kUcA|pKYauWG06P^~kl{6Q`@V^o5cq`N&h9r!S3FslT=nOceQ3;sTM<Xq\n*%|kLL9rCpT$|M6k+~SiVSaNKIKKxmow^*)<4d0<i?6U2a$)WO<*BG$1N7)hqe`iZm$gYCrUfPCegdX\nkQ7pMS=4t<-Vj2>m3_%xDZzh+9d9Te^7>lt5y4%CxW@nEv6kS`)aNd)8IjSZ$mL;t}Lvu^>}B)DL-@9\n&eLmCl&s;HD~kp{7rGc)#%6I1QDi8`^*?wfp)H7O}5w0Vxlg74R1h9Ec|WD|Jux5B(i<@%}^|Up@T>p\n?Y4c^XZxVUzlWY|Lq><r?jlY?+;b;RKwEM^^9E|DE%>Am{KEm$FPU;5^o2{*a<}yJljc2<swx#Jsvhk\nZEx60Mxp?0TPGBm0vuD~NUpYFXHjNw?y+rB{es~vODdYmm3x?V<@AREsEM1QiwnJ!t`Px$ZO~_bY1)S\nCo2#b}#{k;^p;LjwT;n4VKW*h-<zc0TiRaV?nIg-75DIrlR?f97A`nax8B+-WtC`@B4G&>u&GZLKH*`\nNIuyfbYBy3mEams~dx*kf!?zZT2m8|QzFO7<4Y%Qqmh2<z#U=8%A0HKviRNnMN?POe*k}U;%My^$(5P\nwCfPWnGeetVT~y&Pgw-5!l6uNMg1$?R4JgH=Hl&vskjbnMf1am)V`#n0F$$##WB7Dnf(T$AD3l$C@Pr\n7H}}o`}`Gzs9K9Q#FQ{7O(2U&PVg!wLnxGt^gZR1gKD}L{e-!u4?DX(kPK4WvDs3ym~?#q!?_|r~#&N\nDhf?)?mpGHl@-nyozK+wcFBRRY#ee6lei0$Oqc4SJok4X$>H296FcR!X}8;FEH1BJ6wr{0W$`RjB8Wr\no3vU$9In%z@rfa+2mb$7BU%Su-+C5`aN>&CKj%TmoBesazaiuK|McsC&oN$MH1jLD%MC-kWd;97&3uk\nq8>Bl5HuSb3_l*~u116SYSj?oT8I?-lU(N+VEPdczY>)xVuON?5ZSy#E<rNJqYT{1#i62l$lSF{)yye\n1IIUK}i!Dfu?$Yl)H+uJ!s>)p%G9S9BBhCpUkpF}}S0boq}*ezUl|y1lvP?{6-bPY*Yb1C21!+X)p0A\n$u=OdSpI&f+gZ`t&>FWDU;XxaIxzIuu{MUdt*b^yXtW)(B*~y)C4!$pc@;XP;An>@99Kk)1$g@q|<SJ\no*nWnAOs;?P@{()A$^-Oo5@J66{1wEaaekYVT)DSLWhKE6x2Dg>9npvV7Zzzl@m3)X^RUGsl2?=X+ou\nrh_)UPGi)>`CVTl7+Lo7?08W3RK?xId^~sDT*qgHbmOfaZM|QOQetyp%o)(Mw;sc*A_~X;n{lne6o5x\n3({8<^D(xzLio`q2kN)SR}I})n!sqBR^EjZ0RaA*vLwGB%_uc!Ipps9^mUS+xb0sP1klu>azbI@Hw;}\n&;`7xW^b{fo*i`J(c%s}ed<vb?*#qu%U5Xu6RuPT*3iQ^^UG1eyQv<j~d0`&(<he<&?efq<Aqz|ul+Y\nm7m^wmOMD^YCc7ySYJctPy`}fW5767TJn=H|rb#K=lz64z}d(S|lraRbivV=YagTxP$BNpOyh#GX{SS\n23f&YHn&_v#|2xT-_76WkIP4X`EEJCTX?3`*&XCIe4Ws~9d~=Bcyb6lbba3I2<8AT=2pUrC1KoLL6vz\n3$B5GLim<6j;|>o{k-$@*4~ELCqr&xFU6r7+0+8U)V8hSOiLEac<4VCv*ek+2fjacPY}j-Wa75CFm7b\nsa({#<>`2aLNA~|YzXgB?@SOd#WTIXbrpvN8gs<=6@w{PrQhWc6|`cZ5UI5(4UEa^fD0EmX!(OOSN4W\n(#Rgi&D}Kg!1;Be72RQ;Y~rS5l^sZ(Y6#**h0Z4tb>6DQn%$I|Zt<2~}Swn7Q0jZzQB(l`k?X97qt1`\nHH@X^^_fSQRRpe++4>C+P9XS|H9UZ*n|V=lb$0l9g`i0-%!wWKSgx9iuR>wyTqEZ-fiT+0Z>Z=1QY-O\n00;nPviw*?k~Y*zAOHZKbpQY#0001RX>c!JX>N37a&BR4FJo+JFJo<FZ*X*JZ*FrgaCzN5YjfL1lHd6\n&X5qRbxl1B(yt!QQqSPshVyo7%Rg#iiN~hw2<d8%J0$c!;%ys#{Z@=aRg0f7-byt_FSR^phGt<-4ujy\n_^QPioHNvUV5Sl4NhS1QS8YEc%Ob=B!yEwx&gX+BNYnN~|(YL!;1F4RoV(_Gs=MLyL7HQCha&v{Y*S*\n3YZCwZMFwN~{~uR4pYm?T-Yjn!M|R_dfGay8LuzJT{hZ2{e<^-?8M{BqPy)@z;5x@wx_@PAou6+o?ZX\nQJzSt#h?b%1T$UTBmFItQI=gWs+HV^?f>pIp?)5a~yv_%d3{fCY$Bmy0cCyoIL}M)l~tLQd8)eR<+J+\nXr5)><lxJ^$g<)dW(|m#=_+01aVG*ScAhE37Qe=IO^ekEK*(SSx74fR4loVtt%?<3wt$Jj<Pb$_zNt5\n*jseVSyWWmqMrAs!hdg$Y9sQVOmF{%X)w(F56aC53NxZ4k%skDC#R7&lUyI6os`b12zD(Agd0DJrsC-\n%%MOFzIL>}x_#&2OnLZ*3n`Sbbt#p&hc_|@s_^MQIx6Ec5aBB7Ws=h&?rs9%z7qbr7HMmEr9dIm_5ci\nS~0O5PmjusbJ!?_`nzG5r9mH-M9DpsqGRf*tM%8y=7EfHsOUUMJJr1XoR%uuB4(De`ohWa&TkI8RnVS\n3?i+G)rSzY-#$P6!|<|`0Huwr{7Jr5QXixS^;UDmSxe}BP*s!(BbFH(~I%R@yV;x@egMg1EAb`T$R)D\nx`d<kt_{ShnCYyF=S8_n>M;;$T^5-E_ai+$;fD|OPV<?5XF8p4&(9ucTPG#XYQ3$Oa73if6+JwsXKj6\nH7vg17Ewx?i<<-U8H!sJpjxS%GUheO-N~@{q0_0y86Clz~2dNr1=*W<F4CBA1XT33P?RebpbUMJ2RGF\nle9`l(QYut+-Z||r<qTFO;sd-f`=*ace@H_RU$n~hB;6FUr`1b<g0_%`|#BGptX$ZBU&pc4fqxRztbv\n!N?6@yaB%ml#rlM!Y)g|pA?%-n3dofb4(WEwm^p0PNXFEjvr&7=1W>jO6&srT^WgWtp)&v*{Jtrw{%{\nvDW74_?OAI!o(bzu)h;$;;~CwZZr*xwQx<snMf<M|6I#0iy#v*f#^a`rQLYIQQ5|1N9pCV(ySZO;j=Y\nT~BLjK;tPj94g@Dn-%canz;B3CcyHfi$u~T&fgVY-c`4HTX`#^{<&j*a`ye1_^SledD9Uh8}MANBOEW\nfVZ_04HB<wfUK+?Oq8mdSA@n$z%>=1E`6Js<GB*6ivJumzp5BgUAh*V)X5rzwS0iD{18K)cd!+D$!CF\nYT?9%>^C@65|xQLmC!@5dyV%ad>rmFEAXGx75$*B*ZBP1vT^-Rvd2(Xjb1|t%a!2ysrvEMqJ=C4Z)<P\nI%M1^NYUFulil42RqZ6%$q{HWd!-?_3ir;|kgz!G3Rh7XR1wliQ6dX5I&~2F^S1iS{;vf~x&>GD-Km0\nall3)DcKBxHdQRsn6J(q<K<q$3>oPaie@T--BiJ`UCYo8Ue;f(FdlHik3Ums61&<-E=jU4FLeXPIDFw\ndGe>DU`RYPh;lpUMP8ITfbP%snL0yW1wvdDL!g`DKF^9|RtcZP*(q-`DzySqqCr4qg0Zzgs)|iH)zrR\nBLASKpDLxriYduZp=~Ue>H3%!v)GB0&TOvRJCO{S&ASVzrmMx$l21O9ZTEiqk*I-%!Qfeg=(iit))SX\n`vJ%Jj~3pPCh8qVFiQDB&(gF}!g1lbS&lKxo(yu3Czi$YMtA=Bm1&?TG#0}Vd|$qf+o!(oHOnt*gl$7\n(ptiy<sewgRvOD;Eez1w*EYBO)`~rUA<!i-2(lx3dgV^#G(d1a3(K$|y$$)Q{a`p{#Ts@&x-HUibt$1\nIjHoxh0g=4fQ*SmNQGsQ81N{Z75Cm1Y`yR+mL#&_1IylU>B67Qo|lMd8WbSh;~7xd~k5P@6tqd4P)yn\nt75=2Sl$qp*9`#}X*>p!UK(*s=;}2!9r#X~&OqIvL~vRU{2c`{1~?l)16_9w2!I8aJ?i0&g_<{O*MHE\nMJ6gLNa+;y3cAl;oXpjH&x%<^`=ckueCdd5sFRB;e3L+qTf38vA_8Eivee$={i?FMC8c&P$wzu2*Is|\ntEz4s%dwKq&kdNsBS7W&Nn2gabGn`goE&QfRV@yMD>*Kr&hV+jF^LB|9uyTB502<VVcLj)q<z>=+xBJ\nY9N;Qk~0cobbO!TQCIF+A=gDNHttF<J}<O=n2`gIPF;jk$or0ivfaH`=zJC!4Hh+t{0=JE+lXIPsf&2\n^5@x2=MH-by=*F1v)5-O<koka#Vmi3rbqGnSf#iJX-q<lMbj(W~!JQON4wI$i%982AZ)jtv=x;tqR};\ndiDg=7!Uz=0=Rzwf-Znpq5~x*9os-x2z{VP+LNJ^-=$@dlSAV!DN|eu3u9yqK9;7W-)~A1H~~gV{f|u\nw^8-lrCdmNgVQ3LJLkB0?ednGs+U(%&#Z$0$Oim!g8|*$QN+@#>hf1d9qwGI@1nGCF*d>5(HsA`B!uK\nF<0(=!9-Af?MG1zG0z8Zrp0xmN<3~`fEC%40D3uL?+3d5=bEIlyf$B@R{A;1gJP&!8yQl0+y)#=5X<J\nYf$8~$|s=J@6559(aJ3ZA;i424yj!&b<BgCzxzc#?+XX%q0&i<Abkx3jX^n6NoO%%rFeJIEe=3YcJq;\nWLBaX|c)c20?!5ui|BT2mA_l0U6kOQ^(d@00(n6OKW(~?oRZdg2IJ%k=oGCyij$z(v_?&FF^ax&_8ep\n&OzIw-ocs-$U~1>bh%jr{z2js7<5nbBJFNe>48M@ORyVN+Mt*4*+<BogrW2xRO8{6IRd{y)AfKE{=?0\nXfCTgNpFEaUJjO*-Ln`P2RO4|mCLq<D7A0)cy2xiF4-56{@x`07H!lb3^y1>}1%o=dIJ-JKIeu;ArVl\n66cVNEt1I`Dsd4Zcho+JknrGYR62q8Q0K+B7IyViiiWsy$J?(&!F=sH45P*E|T<DW9Qk8VOVM-AR`Nv\nvdxRw<cQHQk`_m<q=9t^)|O*Q6iM=L4`e?r&62;Eq73^qGzTXOF~zRgNthpl{@V8P3y8`%ggC_8KvY-\n1n8P6Oi^tqDFhz@*eQI&lBXO1<F5WXNqrckSYM6<1}dwRCmCpK2tvwc^AyL>XzJ51jpk+^u5W0{D+^;\ngMLUWoFeYuYE34)9az?LtGB2gjiJRIh|L3uRiF$FlwcLjA$BM<+0+FR=Zt4N!_VwQ$4{WkLQiN}?NBa\nvY~>QCIV~KCcUsbo4a^<(vA6|JfYvF#k(sG1os?+ogCV|Qe>Nb9_=&gy{p0S=M><^sflWa*Pb*TQ(T2\nV@s~E^dz(Bbb+ys!^Q89h`4Ic7tdoc5Ow{3C_`-BewSgsB7iCXzUqNuOE<wM^<1*YCgkG}Zg8u2y4JI\nMRlf89{S7@pkWLs+{I8K@y;s;fhlW$N6}h5cu|o^(fmeC;pir{rC_+N@N*SxwLnJ68fk=>+x>l>S_^t\n62D3QiGDYu0`>U%x0;7GapEP^ks?or8tN!z!IgiV{0-*<Ar5rm7WIZ2%9lF=2?+65%N61$R)b3P<Je*\nx0;s&K-BI+VK|VEcB$k$0X3njt1+{ro_7Hfctga~VQK!Ek=6H0y8T8IA_JX%wq=0sa14h$!jMOZoNt+\nz9E|V1Z4rebv#E%?;6L~H&jkNT3}^9?b?rSfoR=kn2iI=N&P0R(3kvx)FFR>jIGhcSGxVxHX!g_PK=s\nl-xvSyReLr2}-$@_r9=x*dCH;w<F=86%V$$VfNpM%xV&{OYyazinvrVuzd9abF=chjnbv^}q92BWzg<\n#R6h@Okd2HhI5zxcDc5=j9p)R=SR88=%KG{4kZbuTYps}m3GFS_K9u)Z#GE;N>A#dKpG$vy~_iDZVPI\nbS6-?fz+&Lcj6TuuCvnknCXZ!?mGEyxIB)_ASm4BMjQdHz>0T{jeYzQIA5dS0{WShWHg$w=UB=#Nw^y\n+Y=I^9(Dnru%(J|B}{>C<;R;cJBS0Oj`b0sApmlZ*4uUJJrOUG8L&x^KVQ6V;0=QW;)*U3u!E1T?-LN\n&&;#WGE>o=Mb9ODLGm16X;fQ@hfzcHP(TKp{U>MRMOT8|t6x1}nrODDH7mvyL>ACv)%NJIv5Cf*E`JI\nl>&-&zm=gS_@4@wYD_$EtIvLp=vk;+xF(&2^(m#)iXY*F=SK27Wwy6)_T!+!&G)y5RvRy@c=+c++7&n\nXUq`%~ctiNi<Hpt>>|7y7Ko?t_gBu48;^iq$3Wl8t^6q?H@;16KR`dEAxMad>{Pmw|fkYWVKqr)&6UB\npyQ4s2=(AP}#+koz!XwW>Y>JW@&y~F*?N+9LRKRGp075Kqzx>BO`yD9g1<_4<!mqSRp|QCgv*Pqg=9p\n#gmw;WxdLX*$r^dCFG9GAjU>WF-bXHrguOP)drM8pbEM;RXx08ix>Z-LrK@Q@aTS-^$Bv-lwao9(lnq\n4HUedtW{1IoT_8AjrUMr}%@KEwrf8=l$K2xsFfEKE^83Cv3;N~c5@jd`nDB1PjWVoijcPesG>)us>w(\nlNbjdG^s{Rx%A^nEfZ)d}OppV*fyT7mAUS7R9{^|5lOyZ}cyya*{90>7^e@7A*n3i;}&QlpEeWwwX#b\n&WoY3*ZgRsfz6Nz3F;<24^L+LG=>UtL|DUp7(Z-En^c#-`zMaX@yk=fQvSdGVYk4sR!B0OS8NclAhVi\nxd&%-{T{UfZRy-NnnugYFoiHDB9L~XnnNFH3lkTpMtkC#G40Y2XX!gp9gaiA)+`2)MCpY_>V%D2Em4s\n<`Yn*LsS_EyAoVpJRM2M=e}s+$&L6CgSNynC!jqu3%aiZdnX30Rj{-*$M=R&0^Mka&emd0t)o8gfMvG\n=)v(=!7$FMru7%PM(L3gQRg7D0yYnC8^?vi--$erM!~nY3GinYRfr&v#CKdiQ(E!*4R+-ebiSLZ>B)p\nBM5#t`os5n`e;K8N`^mWQK$0Rks4?(iDJ!5GTs4N)b>ss$O3|$*TJ7Iuuuiv-=fW=KfjWO;)`FiASQR\nvz<qR__Dp;~OoNr(YOXI+?s*u8RAWN_E1^E>qSMc?A>DiP3kUm)6I)!prgl9|&1%;jIjou`|!M2icSF\n5SCMyBg#2!%#J*1~0TRBtasn<9utQ8DC=Xk7|UwaUf}IA_avlEQGjPsH#c(po4O-6VuPrjzOn!4#>NK\nLglCx0j;#p$0G<7jAgE?4er)hznf+oSc_vY1i`T%Gi+=Z*YXav<lt=+GhT!LkGR=c|3jEFxN+37Bas?\n}xhK|>{sghWEqbL5z}vMVf<anDSA&nV@{$&+XgbAx#ubja<KruA0G$L4n#hD$ov@%sy*o>HggxIaIuX\n|;S2Vsti<VS*ijg;TLK_*Y<0-}fRZ3zXC3Y5DJ2}^tD+NmbX-sQif)uF_I=Q!O4`X~IECmye9HfZcKS\nc(rV4or?3rw35kD0MMF=$M3pD=4E!ANFKaSCml6%Jsa#c&oVy~?H&$ppz>!H~yW=I+I6jovEXP6NEHl\nC7F2X@*UN53_@{_B5@uVlAs618UV&uly7KIqBJpLH#@w-FlY)5So@C=KpIn-I&$`G;N92qv^-fFHwzg\n2nJpvY>g_1oUSm+n=|e9Ql|&z<AiF%^AEfXl<whupn<vL&ktL-8U(uz>89)dEjpl(dN{V-i&bYNe`|*\nME>?0!VoAfpjSEI*_iVYz$yv=2V6pnS(!psDNwMMEspLY_HnKQyei1ccvN0JMeiRk&2P<@#Dhb2h1EH\n)Euv-!!G)()bHRmR#l5(=i(|TBICiV5ETo;({$w~$sJutjYcACl1=rsb2DQobW|4lKU6L$W_r4?d=(#\n=hnaCE|eIg)__dyq2ep8FQi`vR}LUVIbLxrkoG-^4E>(vqP=jpHD;(d0MTFU;0P>R5d><OV$fJjNT70\nmlH2F{f&P8xH5{@AlE(fwJu$zzH29(cn!xvI+82rnI-v39*@knQ37bj0DOvhAdD{Tje7!3r#EM;7!=8\n!*@#L4;7wc0SMdf5jm57CK3C1swy~L+@90PqFAD@VKQJg^r%f=eWzZGb^xMyh(Nfl&@WXlORepWFlaB\n;C~{c>9@wKJ^}MmtT-|HxC_cd{USYtF!M^f_eiON+88ei?U4MCFU&t_QU&8F4hp7W*<=4~zI*N9C{d{\nzD!xOE`t?T2{119AmmGppyXdQhz3iyex;%H@}03*|9>xc3a_MnhNh>tm&f{}2f<3g7Pf2Lzdp|YugcH\ncO6pFzPlbo+`1WWNVpY^rAdi%*iK*Pb(m*1|)q!&0Z~k@6966T|;ZhGm+wud{thBlVvC{;B)`A1%laj\n<4>`ST!cgQ6b2Len*^mDJ161n?{-%o;h#z9TQVKeoEM6V|}4G48ZTm#J0DO^;@(h;O&dRX$VwKHTT47\n6#Wl<xpG&Pe%h76o?ML0?PUe2WEbq7tcKi^chCst6nNW~{U}u^lARQp=`zLaf9v)Xam)ngiAtKE=_S5\nS7op5fW)8??rZ_9=p^=|63k?o+rFuHXOAg>|xSAL7m+_Ya5?bcLH~7E_GB7HRK_vfPl*3h;7o~raXev\nooQ5GG$Y)RsX&@lQO%*KuDkJAs&r>Fv9g4%(35&?|xp1bXprOZ7YpQ@e-ZTYDq!9eQU@cVbbpAcW&^}\n0Jy-QTzP?-W1#@os>}Zo2Nq>Wt;MB?-BjBWWfsv><E6QFvn-qBO^fG{NqA+eM;+4V&uylOHCF90amWy\nbLuvOm;nN6QO6Ya|o%qU#`t(Qmkd?Fmvx)_{VL`cD)_{^?A2>Rr#@f@R5%|>tx}u?t%KaCcdM7BYr&1\n+XJ>=30E(<JPIITTWr|M$|W_{3=m%AH_}J_G*iy?Y)Cz_(ab$qo23?#3n~<t>mF2^5NTNTrYp*VuZ)^\nNx%Leu!L;#H=B;I7JPWOjLgD{F%Mb|<wZuKa_g-m)U}ep0d^S<Mf*QQ0u<piD(83Y3U8QIUt%>MBw!S\nLhn(oPK#}(K{Vdi>>2HU7Di9J*%gXIWr@Df9pdwoayT|wM&pED=`+u{q_i45`Ch8G>u!aHdEbAsRW2v\nVHgu1ke3%h^2J$(0V<a)g1tw|24|5y53=3L3no4CRC4=Mciszf_`2as#))KpVAbLMHsc?Uh8vB9g_pn\n&QPzQYUD-e2W)5e#DIDPqs7JYe+oNh&bmEa$~+aTLSeHoGT|X88n$2pN=SuDcw<d1w!Jt<}R8Q){nvQ\n=fWm8&jZc|g;g>$2F=PC_zgHPI>w2^geCl5AWb<x9fO9z`Ub{3Wz>rx!LSU<nji<E9SxLJ^$P4}pxc1\n}s_m3S<@CJ`9z=8wlqpu<!F*bjjuVV?6ew+Zq67AvoS&VK-@J8Xb%e*z)?VPDTTLyo+d1@z922Z@au*\nO?DCR64$%Yz|DvtLs7D`}n<A1iokZ<_me>-+H>bdZ+r98l+4L2C92O#>kOvYQlVJaobDqWL@tBE18A9\n$JM=C@Ps+wCV)mPPoNs>eR6IdU@gXXHiHhaDy7s6Ax1LJsFm2rRH4IAaO(QYiss1^|l%s(KXsS0$`jW\nEk9Ef~^1>vjIkTZ$WvqBxm2=GvmJgj(!JY8&|w0+15f`0Xc9Dx!znXk7o*x)_qdWs)nh>734sGl0mW$\nBysduK%M2BXA6q~cv#u(KG{}uZIjlv^)9trPLUcSr`whu+5P04S;Z|TxkI*;*WnOIdVF}I<)hg6V{L1\nn?}otvl}rD@1}=LGi-a6Jd+Z!F9@vU1q1m=uW#;fKE=n6Smk8#{!Ut`Fuz664L#oD4NknE?CeW&COH6\nJb?qkag;#P5k8h(i|3g2woWRqsIF(>yQY-Z!FGQt^JIKg@vW3(=W8B@4nbnaWI&q89Og21x_8l#s$J8\nY>BWFyPJ$JW6ndoC0ZSQJS9{6Cy0RMJU=Osqi_5j)tq5EaaFK^k88;U|Nj2x|A9h~`iSABPhP_Cd;-?\nBa+p4Y>LG`8SQFHWfB_HD2pAH2mMy*kB$*p2y)TTd<rx8rvmlR?Q*zsaFF}oiYyvP^+Hjf!tB_0u|2)\nGo!p6uC^HgOZ6Gr)i%VBewR>sMI_1zm<D4e5YpeG$0%^@D+gR2ODnvpl10vovWWuEdM%3yOl2z`1-ad\n(Oq1qpT9;q}$wo)PIFaI7C7jG7+fJ@9babw<Kuk#$Y-!RC*4)nEBg5Nay)iAA-LXwpfzw$H`Qd+uUKB\nh-e<9`N8e+XqtEF*r3&v4}vlaEc_)+xnh!32u%!D}#V0_C}vbc;1^i69a0izO$fqSHSk%LS5g9z4L1|\nrn}>|R*dHm0lx<lH?0Wp2Yv!iF89-=w$Dbe~6OW@>6(R2BLB1PRR}7&Uqt*Y<m<A;~o|?Z6)#VuG?|P\nv5z>rY_82XO7+x+RrCKjnw0DP9=2@M;I*m5mDt4vM-z*kjILphKrUQpe&QWp$)duzO@LTN&jlwJnO;E\n^dgyVfh8`JyA+`GojUYsiw>E_qt^Wh&D-^T5Hn%*<sC`PTx2X3Wc4|&VQ)2=sB7wJuk#6E<eiI-+$n}\n;SU?gUxziX_j-5xxMn>XJy_czdu!@*)R|;GC+v#sdzZ}07@Q894e(}+`Z#x_60cSpxMgr&k2m9nPq2v\nKzOzli_dKT0nOe<5Vw}<bpq20}Zl8ySI^T581`2qutNzVZRM{`em3@Y$ILpKge2)p>rp$U2rLpnJ~Q9\nW_C8-p7faG|Ce4(0m_k>)<>oHSrHJduqdY+jD5KW1Djm3TaaV@jx$VK}S^<G`>L)`YmUU6WhALzF+Cv\nZ`S3V|I{YOZN#p7?i5b+a6ef*i6L?&Mb=6e0y1NP^~XACm2MFnI^EC7i{6<)=M@&wKVb1vLDolfrljS\n<27(#D#J<gzAFpl`2VM^kYThfF@*lmV)iWDU!$Zdn9bZ>sKiO~T4k@N6gRBr#z;5b2b63M8%AP#Ww<h\n(9B!Rc?<e|62nL21h;=CbJLe@?mj}A9pyT0rx;aJV<F(PS)G$R-($RROd?wbqB@HiD-){{hbAujX1p^\n9~Lxr-!pL;<4&vxOZi4$`SjqR-&X~hRtwq$Ta0B7z;+13w;b?=~0+{m>q(_)rNv18KhF_WKvyn`!wYg\n?r%!P_Sr=pi`6oN+7+31+}ulG5_I5V#a{j@8+UPXXPXyBuv(x27m+RC7wHGjd=78-RlPR~gnakz~cj5\nDnBs_ep7<xf&+?P>BQ16fcqbg&cgE+NDz|VRS;^P;5tCBLJz5sr`~&_`KiZE?Mbvp~v`>2%jlT?j=X#\nh;<F-5__<cY*CD6DcC4j3W^z@BtqjezFx>o;TS5wz$}e&yQqG?#1bGRit>&d!K9&u!N2;jqxuDJo$3|\nb$lwSAGqFa@=m=*2{G&0Cfu7m0;69>sCJN_93vAxha=`<38VZ8tK5IC{PDj-;`ReO`A2qrqlj%$Yl{f\n7{jNBz$78K1H{4mC2mcj)#VLCKn1XaS>TUB&0-+v%8{r!hHlB({z6{}_KK>h>sV-LY3`azF=WBP3y8i\nVkYBhceryuRrhy_Po=4+J(oj00fL$Xrvt!gb4K4_>fi(iSi{r0fk9v6VF03zto72yaHWg#u?hM*1F)7\n1nsBpyymknK7)gpnDRoCWVm+!Y3Me?$|fN7O?`N&vdBX&X(`4s9qp@7O>6%S1?epmD43%Z`qg{nv>Bn\nT<!2!owCPn)F4oz$T^ZEGbmFKSI+E{D)9#B3G3~)V(#&>Ot#USP@AkuG0k4axJniYB7vQjf}v8cb;6R\n~WSYk6D)i>3MubsqseJ3ZmJ$c3k(!RPf!B;-V<-w@k)cvy?}LLig5pIK*7894#Rru13#oi>wN!fp;#b\n|}gl{hC!I>6DXEM&a-u{I9paKftQP}l|zhDvuJvs3O9MJ|PQDHAQ$)-z8^0sil5JH*io-N%{qaRE1d%\nq=tHS-Z}SAGhHd{`yb)bC0G%x+}2O|m}^-Z|+XY@W#|eUu#{IB#sWS8P5sP*^K=`)Y{S#u#&vSJ@*lF\nv7U6F={NZ;|E(DVf5cnzy-_SJLthY;SvrYUdGHcm;+O}B4n5>2RCcje2S9JU4SHCj~Z3K^Gy8+ykS$C\nm;tWwa&Mvn@Fw8cK;<X^){gjAg@0v)e`x0T^{>ajU5-!R9Do1%^oQ|}r^i=6U(l}+T#Mn4)l+DBAal`\neZibL>ov;2Hf5k0r-tLg&FNS0$@~!`#zAxhEof~%Jf(k#L^P&#hQ1o&NfM5&dSv8iZkS5WFeI5+WH3c\nxNHg1n{G*7D94-sI;)?d^f{00Ys%ax)HWAeum3=<jf-eRijMB7*r;C|kZzc4)@{tP|o+0)VJV1>rs&J\ndp&sq6#?L0uKuoes*t$SW*OXHo7UwP&#E=G=;0bDwE`+%Wt(!^mX(`M+twzb+a4q(!GAzuY)({rNC78\nsvx|6C9~XBAEsEHmt<>aYo+nIni%r_~D-B=Ox^;;71kQ<K15@@a`swpSbT*_BePD#@15hZud1S7Ve9w\nRqUQL>;49}qVKl;B&iUqdmyDq-GiXor`OIaFy)>iJ$T<-eMRqK7&IjFr>7p8_xUx#PFUSNc+xH`T$2W\n;3t#M>FH6`TOqIn)5?ENo@DXHYi~0G8532k%wi}+hC$7AkH{*W+P)h>@6aWAK2mofX{8%DKO)V<{000\nI9001Na003}la4%nJZggdGZeeUMV{B<JV{dJ3VQyq!V{dMBWq5QhaCwDN!A^uQ5WV*+nms{+e847aOp\nF>2dXae9Y?=zgZewZ5Fs$(Rwu=-&;?AL=GjAU6y|hGI@!T4Mj<ovVs;Vs#f9Mpwk<34naac(skAST73\n)I)j97pi|fOr`Y34a0uD9O6dtgqo+B4Z-syYUunM7Ht7XNgK0+GW^6%oxkHY#K*bxt|pytLmQ3mT^}F\nlw1g96bTVEpv#!w-11jzV3_-A+8Qv5(}0Vok=saJTU62=Ken8zN2wcFpcar2hoie7?-r?y@_z445<?(\n+FE-)Rd6<+t>)^sPme!TBt44f`0YunO+`hgPomSk<LB4tgx(MA;8L9Px>;EW28sPdkiz7TIQKLPp0&u\n%{K6{ZJE}@C+Pc~O_L7*1RipO*=WGNwL-%v{f1QY-O00;nPviw*DI7={=2LJ#8761Su0001RX>c!JX>\nN37a&BR4FJo+JFKKRMWq4m>Z*6U1Ze%WSd97G$Z{xTX{qA2ucs`7c%F1jP-J(HVbdgDCgJvg#Nm`&71\nOg+`HXB(~Nh*$8^uPC9iWDVT&K5<D0I@~h*WtMjYCfOOu2f~YtPIQ5e$T6d<s~;p7<Smne8=|u$Yf=O\n=DB4DX?KiQcu<H}cERjUuu9m2($DE^_Lr)Z&w@#7n2`n|Y_E!@6baMfADLI5Ku8+D!i<$=$r>_O@_)k\n8zE;|rnNh)=;76gV_m=VUz>kLQr0v^g3z2S9R>CMdTqw3$sm2!Eih?OUTdkVfD*CzfS}K8+1BZ*u%Dw\nPbWwm8rWPLA;k*Z<@#YRg37t+}rK+W21tW?`A_J*Izgm30(W*e>cOx3pL+62Yyue@x8U$e)W4EdFZzk\nRvRu70|{`t!}_PYJt41PQyVEgazGtd*!`on|laL+K!v3%I+H{SEGnAe82%OrN+B0q`Jm)&4vu;&(#|P\nhagw>Z*PEvwXd&0K{hK_~ne@;}jcH2GRTbTQ4??>qEnVJH}(~CF3c~W`s7Fv<|SRTVZeAvqhFwd@r(W\nIh)N2v0+)R1x`7$x-r&Rr9}pJLPU!tTm7NK_S-zVH-BscKv+1!^hIbg4KFu}{hlqpPuO=KmhBe$v>v5\n}cxtwb`A2E^Q%Oe}&9WzvbC8;SIoch<@*0^m#J=y-?>_u$zU=gAVH;hs&#DqFP*xwKwZJV?x<}$Q7qw\n+K?&-DGN}o7(;JSi8XIwL~%7r^7)6`BiWupYz)%L%3>Krelo&S%s0mr)JcBAy(Bj`OB#aj;N_7$v&%F\n=k?3xuD3`Fi(ocXfB0J>1@BSGPCUpC6V%FfA1?5Sx~pV^*r16KTxCr(Js32`v`OcDpwWDbUc>PUgw$a\n|cNytHnejc}`Jnq5nU&l^2JB{S4urRAj1Kgi!X>$g;?M)-0B3r^kJ9xd8e~n`H|l%8g?_Ars*Tgvg*}\n+U<)-l0+JmU-mL4rsez*&_<~L=p5V&kiCc=AW<{dD6&SE0IxI&RYpSc(wD?xN>cUvW~_dEjD8}huPwm\n5t?z2%yALUCi3o=1Rjt*FEU4nQCei?_OQOyV`2FoMKHsoPSq4wJwR+)26E?3@>-s!lf8wPPz4WIKG(p\nj+SZ4=v1kZ9H1#4IuY8rZ%^14PsE$}^xdbdxlfk&G6AU-kL8Z<+TJ!??lt(hqFj(v@(#56~r)o8YyIw\nBMM+8*6Oj1#X1F_;^<K~x|n;6HCl+mV)7HqD1V&jv*JBrpIluV{tL;9H!xS2#TH&5*@Z<A(e{AvzFtz\nXkQCu4lAchUw;gUJeiU9StN}yhoNQYVrbbfm^O}F#KTzLV(t!KD2~k#*y~D8EN5-ReMO~yey9_lnWQD\n{`O;ad~}1!&~=nawMTuxa&qca#dg-#=JMiVi}9^_qE>%VyUuj6Ki0<!6o0sO@!KDM_XB&D`Ln@c4%AT\nfp&m4blyb+N^oR?CjlG&Q#Boq?qTeG*Bz@%=$4svxVU7reC~l*P4&&cj+uoqr|2Cuq>73^~krk5Wl~9\nMeXWcFjC!rSwkTlAqHPS7mPKbILmX@<Vuji%M^8C1>US#G@3A#lvR)|`oXQDM`8_YtD7A6xF8mlNq+>\ne71eEp@#sS_2bg>NZ}dEXvvNUaFgVj%5;T!+B_uFxpExKZJVxT}|6&zBT=#EQHaoqCTTYyY2Qy04L}t\n#km)Zx||aFaW}x0vhYEb?`JfQ&ZP1_eZ@il#JvYbnD*txT$yY@7Pbsd)%0EI01_0eD&1O1K$JbHbi}}\nPnC{=pvt)NwKcPyaQbA$)(N8+oiK#pF4SE;h+~ts+^+1rNm}U}jQc0-`dl_smi!tePDuGlgJIt~Y$GM\nz*K@q^8>S9GRU5fQW)%!G$1BJ)<sB^@rycTAaOhtrqkv=l{Bo!!ncimJ-uLfmG>F6~2`@13CYyeQ9|c\nO@UIGh5azLo)_|S}=-|@@MrRY&;E7YUf?xqREan`4_D{aMTXk9y`gTrpXs+%)X&*G>dllh^pUrxtM(f\n_Xb_@dn22~o>4%E>HT>rh1U=S4T(_S?YpJQ4?oiRR!`hqn!_?$98nEu;D~_r>2*`rdT*m)%w3hKk51t\n(w|jAi_l=nYv|+Zxm0Mrs=&6y$|rWi{8D$wC{81Xxmz~B|9C`t%DErwgyC@7cv^{q*f$ol@sd}VLn8_\nM4px^h`qb@x)3L>C_9%=?tsQ;b8a*o&T##S@1vTw8%F%XT`xtEM!vYn6n1Oy$T)F7TVkNv@fS%g*-I;\nTF{OxOFk=_qv7h-fuGT0G=P+d)Yv|Ah*%Oucd0@xQxm(C^1n8Q58`CL*ZkXsN8gvY6QJX7K>)>|Z26I\nRA>_HllL?jR5y{0-4(7?4EGi`@B(4qt2FI<-7SvpmM!k~R_8VsKR!^uKu^B+!^eAQl~hAn=RjEniG{S\nN1MmkOaOoGAW<GSW-jAmQJAT)TfKI>&E69_a2suO!_ii{6y9puY)pI$usH^)IIG1-(Bh)xo8_(}@BHx\n7>@Z^@DD3Q~VE5O9KQH000080A{lMSd&MXEE5F)009dC02u%P0B~t=FJEbHbY*gGVQepBY-ulTVQFqI\naCv=JZExc?4F2w4p}83542g^T8XyA>cQ>p+(K~cE>_br)icQ;E70Hm~q}j0lzK4>XG`-#ew9pGlkq;k\n|&hz|>Q#<L7LJosgwG7G{K_<B4V3i4Fmgjkvsoh{*5ZcyK(|Ol*%5?MA`g!G#r{zI90~w#S&hA7w4%m\nq4?pFD*6rTrvQtB*;3~DGVJWLK}Wvx{y$6#x_8#G1VCgm5W^gYd;RHhoF^W<i=xT~PJlcsr7FJ1Xrp>\n`z0|7y^4O)-X(&KEU&a?ZN9q{pE2NwA^8QNldS7*064nQ<*U3b*mBs463OR8@;C%dW&nD~t^%AWS1hP\nlAIj7NSwG81(T6@rRFChtrWzUdTGAJ?SING|Ja@bh4vHY>({bPd-`+_#@{_@wF$x4=-clBl`T>mU_8Y\n)(P9fOz2^@9Zj9G<Aoo$f8jk5tf+fwI;eXrrPgowgFs+|1Cd)zaL-xqA<?$vz(V#)?BNW<TXOI>@S$l\nGKeiNZG|a9jrOaw@wkD{<?r8ituvr8b5i(x3#33oZhau8(Yn@~PWsnI(t%YQ7`Va=czP{$f4aY&2%3h\nPX_R+;_VC|}IR1IBUjSTS$ax2dC>IgX5iO$Jg2}56diD+#-?l=^w0RwLLP-T>mS)XVVSkCu$)Qvb;_a\ns_?Ye>47CjiF@c9WcRBx-2EiaQq*uM!h@^@<A-xZmu7faFpfNIV&PNY-j{obKs?gTh;I3jYt%#1tyCw\n@<_f!^RooQrxrx@d8-*0ccFZS=L+(uubgP+)zBIGPyPzg7ig_P+f+-W6dpq;eO<-tb5KT{9uYB-NTVL\na&J|`6sCbp!)8G})}&_;{LEIo8tEDPnV1?{Obh{It?hwzp~QWJGjQ;tXJ}r%cLsqyXW(F@mY&wx6;}L\n1&nu<t_Nd>79D@0h;Xyz+^h?o$&X1F5G+W|-wX@BrshH&Xgv)J{S5<6XRlbP!?`)uyt{6?s5<RN~^Gt\nf#qQlG;u>`hS!DTs-Ao>e61jD9F@!oSOrV12X8+_FOT63IDMovYmQ}MzGD=(896Jc3@OPo&S{YVVZ;J\nD4y1gx`$+C)djVSVcM58V78d~lDCK<v&MT8PyzP!8*iF;Z;=jveI7bjZJWx;er9@NWH>#mg)4JILf1i\nU`Y7S7Cz`Ae5Jlb{<KSQp9$}MZp=DBBg|xQ~rEugZr691x<?lh_P-bb!37lVxQlGkJgnJnu}N&ke@Ug\nN>X5b(v)J$Reh-xh3D~Ewn`%r^R_s{5!>!2R~>vIkO)CiXWeo0@f`A>No_d=x5;0HmPd1o8OIOSw5l8\n75w72YE@FY4dv0r?cXsT0k;a#gHeTqI%Ah-FT}`@Gk}IayUXJnk47GaBcfD(>G=q3GW&dJ|M`k6s(kM\nR7Um-moosBVTd_co;<-sYu*yf+^??2zK#XpeyH(z{T()to5K%Rz6A+E#X-3hxpq6T^82A)2ac!~oIj5\nFk$Ol`Sc6~AH_fboEl`~9TLmGkYlLOCnN5230d?C4vZrq?`$v?`{9+Yi<I+uNnc^9zWk+cQjOOIPA#1\nZ*<gh$YWr4D8xT-*atF*UZ`xS;aV(TK!GU3wJonWkcJsEAks=XKc0cy&uuTdNTY@99+p7$V<t`DX~cO\n<=0nnCWG=;^X%Rf`D!(9a)xlG$zsZhqcA!%+l=3Y#Yran4^T@31QY-O00;nPviw*;xE^|C1^@u^5C8x\nm0001RX>c!JX>N37a&BR4FJo+JFKuCIZeMU=a&u*JE^v8`S8Z?GHW2>qUqPrCEMv0P4j2X)bAc^uwg8\n12<OTcS83HX)4i||ONGgeu=D+WbA|=XEvl(b3@s7vi-E+^KqA2>6Xf6&FBTYqfMoOtjE`>I#%?$_$6$\nN2WjYKVC?ii^l7o?#|Gc}8%Xg1?@Bb6ai`zPJ*8zpn5hn1tAl}gsc92>ObmOpcC67r=nTnbtx<fd&ZH\ntRGS-lQ29hA9xG`<7Ql#>9i)dSE6~tq^oyu?%#lHsuxf>UmvAdyM{uV%puv>z_$c@<Zp@rIjS)wkarv\n<abumwlexpRyF5R)zpBQNwc!9A$+=b!o6n&&*9#91<h+-QI&bolo|Gvv(ERyJFERkDLHv?Yj~y8n(I6\na7wBXUOlh#x9S%u4%w}0et18RLnrx$7F=|+bDbBipL<x!PlXo%N&1SQLmE^T<ydcYu6QNtp2>bvmXLg\nIWm{QEN3a)elDGNaGbgs$S=L?H3-0Xzw3G1;{z+bEBfvuyz#dml!@{9BMBiXv#@1mqvrbUt6K?bu<wm\nzqoW`nr&iCw>$_INRD5wwQW50%{0DmVyzS^IE%{Y7xAwBXvp*yc|+@Q)Q4RR<j}!rP}Vc@Tw@bb7sac\nq<#x0~1Wqig?hY6xQ&v8ukz6kk<5`xfo;zCEF$rgw9MSNSq%d-!Y7%-Tsu`B`vK-80#Ub<X*@}9U8J2\nSd$yoGTa43!B&JHgjCF1>JaD4h*ZEHNG6Dwg6Ujw>xWei-Yu}B9r>PYhwMhrn61^1KfjP?XAi<(%2c=\nTqK+?7hy<J3goKI&ydBkZ$_=YAW4LEGO7F-QfM=BcBe{r!br-CzCOo-zWyT983@?vab2N7lWebu9Gy#\n0w(ux3E+tTw)x`l<^%0=y>wDHF)6r|+9^y~>DrxU0bMz~1_J#L`vC@HvNxsmFa5UL>{%nKg4GA*DAc$\nh0GYVZte*%_#$ytmQ9;{p}fdTAYngIV4h#CmrqFQIDy^P0P~^U2+4vFf8AsBjIAz1HXs-*fRpC$cWw3\njUOkYa3tf1aL;z-~QsF@aP*X+^8ejOLJ#4OCdB8j)ro=XANMx2jm?Ok6fgqjc5=J!>%|Qyg=T3eSCD{\nw?)YjP~q=rfzjzFXm;^ReJW-XRzo-)dnp5s8|(Huc%(11Guc)J5z+u&L`NtA><Ca)&P&dU5VRX9n1k%\n7U&KgcE8FTVEG<xNqsP}|5IDg0Oh46Myn`EQfE}D_4*g4$H%K(`9Hf{A2FJvjJFY#ez;?o+5lOgM#f`\nfzHyn_T2Jr53idD&;LG~GnJlC~*&rWu30)B?TB1vK7eWjgS$j};M;ER-WQQFRzOT%j>TeJRYo{%|*Ne\nukM$K?|0RpHac=Hf=mO3!zGx94f+*w_$Q+J(nt76qX4e~h14P6i8*B1dptzHO}WzdlRLrGu5j?TM|_)\nhk9S$}TT1v#Z<9=3?_lcCpE>Z-2YI`f~Q^`Z}^egz^H|J60JW{El3)B^M78suLO_P?{f8dysna2@pK6\nOMvS2n^ZgP`y%A2&=}we3*w~KD2K3x!(05SZp&yWzDnlU?_T>)o~PXjx)%OiB5YN`umF7>d*MhWFq(`\n6r}K3<=<H6-0uveLN<BFA9l2)EAV^u!gD=7S4hDHrNT$WyKtcNCaidvPLXV|3g@Fx<S1++38Mc^apx*\n%y+qdwu!>;>b2u(*=xhxRE@B3w=j^lLUHw<VDUo$BLBz9L`Ot7dkiQ4I~GLWyG<4GJCyzU<@9N=5%+C\nD6x@uL2J;-`$xDYWzg*$ceuYCseSks!4%EAkB1UZTNk_#(spVdBBjpl;n<`K`ir;?>BSHU+Rv`lujL@\npxigd|MH6SaHELYbJc_J;G~!{c8W%ITBh(qu_#ef_F0)_=!a`@Ds3X+`nz#0}KEMxFNEXQ!z1!7byG?\n^ifZ3r>9K&X9;KEew?+e1b~v^3!ozOWab_2<&NS;6XoE{p#_AvvH$doG4?is!mITGE4`ez0_W`BE{UG\nK_DeJ$${16OM~vYHR#MtDSlH#frpG-aN7<5^Q5gH8XS)N;1m{iwG$Kpl=3TJ27(P^>>0;DugMH+{Uad\nI^V;@1Q(?xK*+KrZ>&T9F<PJ`fP62F@C`m=ulP)h>@6aWAK2mofX{8(0?6i3qx0028G000{R003}la4\n%nJZggdGZeeUMV{B<JaA9(DWpXZXdCgjFZ``;M{_bBv$S5r3WF_gLUly03Y2F$%NP^(fqS#vqw8Y)zS\nu3g{WoK*nzjuZ&5-HJ+llxL3a8}ZAIGi^=GgOi!f1{ES(J3xk($QYBo=B#KE=iJ;6MpDKuSg?yJKpZx\nEl_JpcQ5yY;>~z>l<ucuU)6O_yOV7%4x|z-K4|y_ail}n^-N0hUL8A_#Jzjb9&_@FS1KoOS<8B=M4yx\nQT*8BoT3p)X<kz8V*ohh6@vbO2%+bTEqH1^{6;*>QD^WA)_<s5Dj}IUJ^`U(I`SZum(Sf4f^4$OvqDt\n(jm;S>%ynWsGqK|Pxt;piQW#!oPtfrMJ>7e!{4k(8n79mxy#Dx&e$q8y2Ebz>!yx1}IUO!9AvZV)Bmf\n6Y4N!3s($)}zvb^JSPx;LUfPzBSb&Njunwq_tm9lXv~Cj>6A?F-W3XwLe_4OoC&vHn7UC+vZoY#lxR8\nqHm3m%#Bg+maI2$yHgVk~Q0$Jfi(hu8h?lJ-WOeZ!>cKoO}>1GgISrYG&z#<XXpvK`L^=2yOVTWi`3x\nYCrNX^xPnWEWnCY&$aDGUS_6sa-d&J<XSqe$p*Ce^OFT3*LnfwRnHFaOVd4FkX`dy?e#n3-DrpsG;-i\nz*;4ZVvNT&i*^qPc=W#5!Ggu%iM%8GgO!~+s?HLW1Chkgb0I;>Rsx%K*lirQHYefR(q(?B|(6<Cf6=j\n^Gx%DQ#gKk>GeIn%Ka7Fv=L9I{_&`m;qxw(Cw=mC;-<Kvtpn&VPt^da~Avyq=dW;h(^IWV9QQQ!a#L^\n%;#mzJ!Mgtj#~FhxNIS)7b)Rygc1%1jjI1RS2qy-im+#1o_z_?6{^6}uHl&(61JIXOE&Hwrn+=KRK`+\n9|EgtTd6?wE~D;1!RQSl93D)wBAhObGOc-)bgTf<fJe+s-RuR+B#j*f*WQrZn)$JG8;+fyc*Ubk<7?*\n@-)JSx3FQT^r`cJEVeF1FPSW_Xfr_2giIifF=HYmgaB8BOVSFZQ$|4Q%<#-ny9Xvkx$#9Kt}zPlT(h-\nnVa%CYE^b)nt-!`tk`%uSZuPJT;XR`@_=AmId#3|o>HMG)OF*7Ml$fBBNvM)>*0~&R=uaeB{njQ6Nd`\n%G%*vsE-ywzXkFQ%f^o*!IgTJ78(Kbi;!$`}n8xH?pFm=sXYZ&SX1X{A?Jy^;L<S%bz)C%II>moY&LG\nCbF{MLRk(%#&{vYcIXR<p?(C6TE^6JTb1nre|Co)h4jWpix-^M!^yiL9QyC#w-wtU+CyrQS{<8t4@)e\nrOsEW_r;O0UM{!g(v~K@>Swb5f~c1flAnCd$U-BzF<8E%G+cXD0nsWf;FhImzXcxS|$MrYb3j8(5p#~\naNH@8;=o8Psxi~<ah<q{aoRXnfQ`)3wPz||;4lAKVD<(Xb}5)R$sRQ47Pr@NM(uC1qty>h-kZti6C3Z\nz(N$Y;7UN>~u>7_odi2g6@8P#iZnRBqA&76hSLpn)L=ZzgOH)r-WA5~<;{YbDznhys;Od6K(#tL5m`v\nu?_sJgU+lY=@*BLFhZ|_KN;5=p=?z4sxQl?I3h-UQ<-fDJ*>>93&du|qKACr+z{3FK+dVlF^!2a#-72\nDFGQ8EPK5nw(c@0Wmfp;U+f?LlhEOmSf>^hxIg3wD0pLt=%015OU>!%SRT0U%KW3r5)24uS@^33z+R0\naL@q=8`l%Lel|uxCSm@*}i9$f|QR6*<19F=nG2^GwF*)3R|}jtXqgKbf9j*dd*di(k*VXpb@0B@_jF~\nwZjZ(KuZR20Q}9%m_A~Nq6;norYPE0EKIaZMTc?g5f`OVx?7L*ITh|<7MuMc*k-ZZ7<Vi|Qjgm-n=X9\nNp>d=wLT3683IVIb*{qmsXV3~!%9qdYlf}m6sWjxGtJ%ojwOHXgeBuFOyiUnGm_!+MQSFjBxn}6OLsJ\nuafxsRG{vB&a8?mDYqblYSBcpqy#u*+Y_DoQWTX=~96w)qv`BoZ#7d`75*x=GDY-hy!1NbI_N=FW3PB\nMwbcjt5#XV%GAUYbQ0b;aPW7ehBM1$q5-1$6435`QZ7X7jy8h5_(=rzZr<5s!jUwDFE#!G`S0_reE?S\n}+$Cw5~&e<5jj>LE+QNq7yzMh!EI{29}+hd6%l!kImD+cD;ajQ^!%ImK*w03CUOI39TD!U9D#d+62mZ\n%bc%c^$LSscEug9Y6hFuh1n)-acsp-f_h<0A)Ykr)wIQ-*K%aCRKR>|mXJvl)=k`Jwp0pGPM)|(tm)D\n@7dv9uguLGKYCmpum<pz??ntUVt1j&>r`d#EyDe{QLSyX}??sE99*9!NX`EibyLc-rbp7$pbNmTq(1W\nS3rbk?g2HO`ag1tPjz#9rs$7AEiOg;roxNm8TAa`JZ|AjBiGT~LwflS@ho>}bfGqU@UE|u2u!?y68T(\nYBuXOOU_)*t*oEl%~vDD<=2j+xIi3V@yFGzBaBTCq;eC;lf=>lQ358EL`^Iw&qwx=mgH4%I}Wss=zkH\nK_-zJ3_~S8WcF(&hWcDVh{jO{Mm1$VM9>#HPpLx889iiVuyK4Z8G=R&0g!~^;)Y8w6w{!Cz!t*ABzXJ\n)_GE*wj~BIWYVFvVh|__fp<YZ;=M+DQ{j#1z2`MEGUHB`>>6=Fn<Sr{1ge)6M9eDjcDYmX3EdetSDTJ\n-JAm?@Z?`Zjplg#jy!BR-8dkc8Zx*RD;B3(wY_Z-1>NcUZ-smi)BLTBrApS^y8>BQhv-6!X!x{S&#xS\n#O{*>@ttD*CuQ%7QU?-+VOw_cXlx;YPc>|)rZi??_s?~wh%)zE_E>`(Fx-Il8}X=X-<s0AsKJj%{r<A\nNYtJi+3Pw*w1Ni)EsNR&Ny}PgfGb^yFzaSA!*78f2-Mzzf#)ZsVG8Q+Q{-r~R8VKzEEn<~Mu3sY`f2P\nDeufdshFJP)Hg&MohrvLXKJ{H_}T0v5FuccPZcT(b0A6hmV5I|BF}D87MUFcltcUB2aTu1~hgj7<alU\n$HGgy>lNgcz_)-YlxhGycdWvW&K~F+^hnf61=|EgJwrJs0eDOq!$y0G8@|k@;~!(I7m!E~18zImzlWg\ny>Lez3?#7BB0Tv^I9`m=(+_sQfR#3>eWN0h&PvwEOQz(QP+D`>ZNo&cVqgf0uEsqB#-^$;MG;wx*eg<\nWBMX^o~V;K)Jp(3&UQ+?Kei7QMaBIqdT=}jv#IX_RxPbgxxsDeyta%;pigeRt$b#-V!wy;$qd0p%ZAZ\nX7`T89^dnkTxJtj*gEf+$!=j}8a$`<k|DY!5(;!Yc3wKv2Bl6@sQ2v&uFhi+Pf;>jcr36**q<l=O{iI\nX+22$Iwp`0FgZ_RX;F1e=>JlgkZ5=>H>+l%X*wUl1&2$;w}qCChQUCr46lNM|^9*Yn$A_6t`}%6b0b5\n-3-ukZ@@2Z?Rwq0TI@<71o13i2l@60oKSuS0KxET_$4DpCLg!rUN)$}$69ZAvhwut6RZ*yqjeD<6l#Y\nx3*%rDp%O!@lBJe((7Mk6(n+5Yi{bSk<NOd$M2S&u%hrLe)PX)Dw)X#pJo!JezqQur2aMyP3^2yr(6S\nw5EZy8!48JtEhaV#9yL|{3uf60kI?R21OeKf7=05`mKA5~9xqxT=5sxxJBH~iUp77T~nWae$#o8dlpu\n`bVEd#qnX1Y6=U0}%OL4FP?^MY2F5xK$y=Lqj?3F0;Gf!OqjxBlD(FH3XyZprNaVo&(*)PfU7v{%>(G\nPRc-H><zgbxPi75JE3mX_mfRE7Xx5bGz13KL(XXq%pN;WQ=`*fp8mJwNE_S&tE`Jyf0MzGB-45?Ci{;\nk8k)1Dk;{^m21yr8{?D{p+zO=U89{>aW+7P!@;D}X`yReYSiFHgh(s!sqr+)@SJcgI!f5OoO)I>tQG*\n)j|OY&CX9g66EeeKPesC$3A)7t4wF6=H-O25nG=R{t)EUv$pLWWON^b7TDX%B-b1-|E&9u#`DOF9X`u\nI_f<2(TuQPi}J~nlZsOlUW3YX+*@fSdOdwRvi(1+k=>Q>x`U_GGvUeMY@>*M!hV0zn)7&MTp^hbDGtm\ngIeyBj8cIokmDbkQGKew(HnBYhuXq`Mly7je3Op8~aCn2n~i!4N+T8P6#y(H+w)Lj`~eLmckFp^w5Ld\nMy-QpziNKL(zx8-#Rd{j<P%txa;`h`_t=PIUv&N8ncxhv-p-_?r<|-)5mQZWtdENklqI<k?x}IiMh{3\nj<S%dMuUe$G1maB0=#eaY5xBJP)h>@6aWAK2mofX{8%3*oj0!o005Z^001HY003}la4%nJZggdGZeeU\nMV{B<JaB^>Fa%FRKUt(c$b1raswN^`y+cprs>sJgE1fVyHkOtVx0?Hvt8x$zoVs~$@A<*K;W|t-fl8W\nmV`R^TxqF!-;MS$oaQ^VoMnQvZ}r^Z+hb*n3HjB<$#0(WsqZOsY%rIGpogZKkiitiO>@Ch|q?v2ghS5\nK>6*sproAB~qrbCtnk+bB!|SR<Rf{ES){n_F2O^TwKkMdu<uOMssD+<q{sJ?X6f{AkWv87}6sU!=kZ`\n7h38e-2>Fuertp`9fyTMUVK8Uwq3G{;YW8P^`uGc;ZqM8;cFgwX4xSG&r5u%>9*`SRpF%O3B;>3r2_U\nxyRq+Ns`L7BdwRp<;olmvmhMMlZHU;c}H@RM1rEr_rx$-v`~xz+iqi&w)=}mx7$t8ijpKr1lCY?ktt(\nj%00IsDslk0gB4UD;wJo%dPzA$TF%=baulaKAfJdBc>Qilop3&b-;Kub-re;lxN}I3Ml2`_NR3W2NFR\n^VfjgR32{2k+V2{vJtOy?b5rG`wt@3a(0`oKphS#8t4`%d&?(xQRMFiDEoM)-jb-Echt3HnIE+p@El}\neE3`HqgVQGc08EZs)-a)GY0vM+|+f1bOix#UZ_$rc!k{A8(;8p&zbrB?A%e!J3M)&N`WUP;WaRMxpZR\n|ssNa#u*}s9clvLkJl=!P@j?Pxv0+XV#(T>x-|{`;we~IkvB2Y&Yy?;3ETzHA$$H(3TD>qeXEWSnd2S\nrJ!RYFI<SS6SEXjxB<2*a<+k2@OG1h5ET78V4bBujxbZGYGa`~w)&~7jIneVK3*hJ74=FB`Djzy2x?D\nkur>oOK671Rp-{8_*k&{K41WIZmJ#|xoETeb6uW14ith5WrF+KPS=Cxgw1tin`0Cd^Vs~_6fu>yUyfC\nfLdk~h!Fv3gfFEzdY(kZ-z2s+?xHrF6()w&}aQe!wkA%2srO9v=6K}ybHsY3s!&Dk_yZ}PXd1J-p1qb\n<oZ!X2%7RlpRyahDq8+>qQN7Z=L74l}w@3`{OE<r#*>XLW%?&nAU=CWeIS(q9ZUJ|&hN1{)jFXEklEW\nfHO4#XRKGw+3bKDoxW*=z(i6`@gaBG*GyQioWBJ@dknkVb%<2Q^ACA-J@?UHAGHl<KLwo%JV059exZ@\n2bi8MZ_+$k5GU4p_D#gw9)9}EmN(pb$rby0a8CpkaS=!=x>xM*>)WW7pLgA==C44{hsOZar#if#k^I^\n;8Jv%(q3H&`7@47hPyPo`O9KQH000080A{lMSbgDKM1>3h0NO7A03ZMW0B~t=FJEbHbY*gGVQepBY-u\nlYWpQ6)Z*6U1Ze%WSdDU8NkK4Er{_bBvI3Hp!Y@z*76fmInavNV0G|6rEwig_Ng+NQR&0AU2k<vQq;r\n@GPNJ=6lYF~0G4mFUhL~@4Y%rh?>YCfM|ilU;tP^3CCa?O6Jxnw6+RF~p(qD4k_R56m~RH<k-yE$@YU\nI;w!f>5GZNhPfqIf<;!8Bs!WN)0)(r4`8pDMUqRex{9@6^v!%il%q;z`o-}#w1B;Nq0QwRRd#-mldgt\nf~8C;DtX=zekz5mknzl?JJIyW3nm+aYo&Qkc%{faD>5Nrl8lw`$cmIRwIZxaquG2upUo`4TpSL(IL!7\n^oXEZ|(n^S2wX?y#Do%6LE6NJqK@_(0N1E46nZBwiflJ%-s%Tc^9aq(gd|y^v6f|Fvo4U-|%nUDi86~\n`^n1rq<g&lNUKOPy&FR>*!H0SNW^ppwBTuls&P(Gg%tA>{BEjIo`in_GweHQf(pbwbRlD_Ak5dbRG9A\ne8pr_3z5<!33jQVO{uSCZXxQLArjo@cMQ)XgDAdTmiE@|=OfWXtUxFYYee#%a3J;3wG|09j%WRUu+PH\n_KI|81jcrB&B3~)l0@U!zT7j0^nFsF_ue3<$+a6*;GeSv^;Kf<CSg;(H5*a3wZ}i(Bke^&P%I+5RoVu\n7$*un+M!&{|4Aibzy0pD$Zt&BBV1tHU<Vyw9fxscdV&lj`vnwMs7ltTolb6x8G#>op9)Mjfl&z(CoJO\n?-Q{c*?#{vDC%UwaX87JNYhoZiz;eKDSF`2RlJ#hwGshz+<}wc|xuvvo_O_>A9f^gBmB?$9b)-FSt08\n#4#;*IYfPn&W#ZG0Cap{Zq23o<Mv|Ti-annsx0`CKOthO8Z0Gs3v%t4`iX6PvaFLCQKBY^5V-L^=Qf}\nU8Cz^K_jx7({%-@e->H{17DuisuLH$Po%e*m&iW4_V1|9<=Kb+Y~NV_?!~d-Z1fKKb}&yM32jzPfy~4\nGp^9{wvX3R<m1}J!5-v=G8Gtb4H80T%b$ephI4g_22OCMl*pB@S3FpAPwGQ5C725fknaIcuFM8A)IBT\n5)fSqio4a*!g$$e`pilWf=bjfoS7b20pNVk54B`TyI5(3yJ#Oa(+bcl{U8cvmWn@IVTHjqEZu$}{@N+\nPO;iau8&<IeM56C#uGq3)<XO@ZjC#@0f@9ln0`Y%EY@FHHkhdb>r{E1E+$Rv}t!AN@-G;kQ0L$BcS&%\nI-03*&24Ml=!1ZD=f<Bovu+exEB7-jmKd_cs(S?tC&fMhciSXIkHM}JM+ZP;vd*$p=FD;%bLmM@6TlM\ntgs7(nDag`iCfBGR;$<a}g>PLpa74Y(DMkb(>b<|tt#uLkV2)9zr`Xplqd1-^LAKEn<XqI;1;=!(G2n\n3O9;?{Q|3P7Ro$xX-kx5a2XTIiyGEml}}7N!)|SsiNO0Y)`zDD`v!RC2gSx_G%KzG3FMdG-bKzkeh(h\n<5iMaWnCCF>ZI%9;_lp=yKh9QMz}Adj$9KO8V4SFN03}400I@!Og{h`7Jb6iVREswgx`Q;uXuW55W2H\n&p&6K-JVB^Rq;=fMJ!G>W`NhDb^m0LT{c5#`vg8WT!qX#Zxe#>}HNat~(E|pGaRPv50CnJy{C4Jpj>)\nmAdCm?rZPqQTIeL|LEab|7FLZs$o>5R0Qwb|D3}-=$vCQVZ@Y)W`KIc2z`Hj}}Kt3mW=f%>*rWTG<N^\n`a9Ef<5ENnZeNn^0K8-_Tuk9bV?M@p7J(qko-BZJe~K?=&gn#!nXeZqP=8_M9kQu?^Y5S)%XE#JR`?w\nQKJ@C20K?!Xsj}9}Ak<319+o0z4^n|7q1b*+9nS;ih}Olnjq$G(=(YA;?lqaOrS^N4XOMPennVz78PU\n0zVWFS|e;7I{y%1$n_gcbru86b>wm}=GzjC0F*?J8{5(~gfW-cgRKwvoc^at&UiF~+2(tysx=sk@~mf\nQG9Ck%vFG9Q*8FuM6`iRpz>_aV{aOo<@1ewMh0Y$h;jy>{6_~$f-FCmZxw#_qFds>a10!g6Ou<nZf`H\ngz0iZuCLr^XN7AKwYM^k)sh=X{=BtPj0LaYdIl~xFVEO6q7;}nne8ti3l>EceX`Yg|@79fD*tkFQ7U{\ngww)%y4qjYl{E9Dp=X><Dc)vS!n|H&}GL(WyQS5MQYFUMNS3;vj6l2bX6u2=xCZ89);@yXmkUl*Q0j2\nYiFSkj`e~fC;a>p-QHDU@HOp?hkVPVC=rE0@HHXiAG_^bI|S+rAL<DwMzt%byUNS&|Ee!#NOLrgC-!v\nY8V*s2OvCv=vA_#y$IY!f4GSy@qQ3PjB2z_5>WV&^_%dUeG)J9#NOL#0?u*&=nv_lPuxAN9<rKv@ZJw\nzJ|6uI$wb6&6M{_$rcVyblL>*|d!p-aPDJiYaO1!ni14jf=m+sbAwW&`^bdyLjzixv8fLYsY%yqxDR{\npW2V1UF!|L)NAsk?317iOH5(s$0pjC;r0*g`mW-W@mnfrSxS^1Yg|J4x!avyKMY!XlwLO;O>;f&YiO+\n5CkNEAi4KB-Py+ycg<`HFSNUznt5XgLKRSd1;@`mXK4nvge8yBn5urr0(lSkD_<q7i4@Ke{H-K7EBm2\nG5z`_C;TN#!8Hio>`3tNnOX_#l1+ix6}cZvCI@V;9PglLAnmR_f3hxUw2B(tRcs!nv!Y%iB%u+J*YvR\nITofM2I+H1Do$mN2?SQ>dtUSF?vP>5c{_%wiG=CFU|H7d?%DZRTaBA4ob`n5qnvpRZ18&ygXntXt2(o\n=9w{zIuBrV!;O+6}c%s;O9uFKsJ03QSNuC@Uv}BD_a<5H#(2x5j8FbDs9yUyp3>;w`ZVrgn_l)u2Js^\n;QkBo;6W0Ha6iwEyMfpgG!1g9o&1~B><J_m#o*n9++4`A|1czh-npNzxbg~4ay?{{GDS-5*9=AMi<r=\np7&O76{sU)t?Soa!wWAD)mWJ(6EdmP~Zq*AtDeK5oM~z?HsYwbzboyywC7)_OxGFqyk$2u`XLMP?#Oz\nv*y7;Evc#t_W`_Zry~7;MI?gsLrv@++snv16D&kkpA`wNyfKD<Ji$oG4?tAM6sVZ`f8bsDR#lF>5K<F\nc$!&`kE@s+RU)BT29kQh#asA5+m9Qs2!GGXwc4L?By|ZX4-gJg;%-Nw4fVjmnskvZ`b|1#WmK)zskWZ\nsY3%{AAcV()2<{$G53UBOVn6NvQqef6XiE`FNyAbMW6s<KB#Kpd=b&P6I<%_fqPsGg4@S&a`XI2J3Xx\nx`hjv5lP4Tmo(h@yUF;5Z9|5!JFtlVFa58vNxHzZt%fJC6d%LtenQ~CAUcCT$W96G$J+LUMYy!6*}tp\niUv@{B`I_<!vPpMxq(@+i3RH$-4~Q~t)Hb`b#A#R#Eehum#_A7C;$8q2!=C4&1~e$`0ug1p_s`MPl_b\nYT{;-d`M>lCNp(&d%<67g*o~5sc7QWN#Uj>*Cx+4Ny2?h_-y~PK5RI1qLkwj7Lt>ZG3n-Wd7?M&1t?d\nm!$aoo1aYg*Y;>?82j#2z<lsV*!%WtqV)ZfsL82Tl`i`bT9KSlcmqv);)kU0SG|~t>w%XGa8Tf%8f3?\n?xS;P+EX}WamA}pZzI+*(OOI(}UtDB7)pZ!qv8IdXWFGx2c(EAod>ID#xYchN-%|WBLQ{+xK^<A%N^9\nN=>EZ&#5ZcV}6zhF1r8~p-<ydlO$&M<X>Ql}lc<u;X?YpTyUg$ESnYg!DgziMGzaPaq{XNGLnArWy(y\n1fE3-X$)GKa_p=U>T4`?a7Vxe#~edkYLodS$(DQjE&<n5a~g3@pY_MQ&?1G`B@Lv@CZ3I?Kc?9G!hPY\n~fvCcFlteEpw%$#n%mS4vF>-#Qz3z>ZCY%AbjwW-21lCEfG7PH;zloQ`PVXD$*JW9yT7SE8AVSx&%Kj\nMJYLU>VqXH*EJD)3XOU|Z*=8(a;+ba46CEa%nShpVsR9-0M6Fa)7&0B)!GPTPVTjg(eG>L5s}wyPwU*\n=(CQ;i7^pZp>A!`I{m)>dRBwLKp7Dmc&(c-B_hD-s{HE1+I*|8>bJEb_E|@wP5X0h%N{YP8Nc`qifFt\nHpunNi0cRAG`XdB+S;mVR7FQ{zXVSVdYsrQVXnuohq%DyRjii!Q#;k}|K`*`r~5BBUU_TJnD{})h80|\nXQR000O8X0rTPsmxi)o(2E_{u2NI9RL6TaA|NaUukZ1WpZv|Y%gPMX)kkdX>M+1a&s<ldCgecZW}ice\nc!JjWCWHPY2~C%5EymZB5@j_fepk7{9p$HwM$8aDRN74t*DoO@8M-HT3d3H7De@-)pCY2!{MB{h_4Ez\nEy<L$?6VbomhiB`Ez?#hVX6h877H#H)vMXm6w6mEnQOHoc2j_b#P!Mfko?Rf)6^<GB<F?YN>Y&o-hvn\nDltZn?T3T8zOq!`xL2b4Fa&q?i{PJQqdo-!yUoZ=foJmWarX+E6rpZZVdkT(seyu;9O1fgx=^#mxOi*\nLU1x$yn6Q^QMGj^O1d~!A?29&;GVm=_Fm*h;zNOK=exnWqdlT{(u3c6W-s<qO6NUj9Tx#VW)MGV~w6;\nlHnOLI(&)n6(#+UpIandP@En%?goVbGjm3eRvmo%U-T-kSPt#f+f~<_&6A=UiZ^y11*!`4z~YKEb2T-\niFV4Xqqjl4krS=H@d$5W87<44#?@M;F@Pth|Q3^AZ3wL%gop?1YeFTQa6T3p0UOz2n}4};%}YbJU7(L\ng+ip9kfZd;(`P}=;CSnB=`<b+T=7>;=W~BH!cE8X)v2)u5uO^GtI~GFM!I`+DB9U7_{xC?9Pjb^F1+>\nk9A<Dwz6%$YL&6&>3`;un;O$N3t*CLD`jvij6@%_RXK=dK*wOEi9{HvVnErq~?s)Do_|h~by{?UGp4+\n8!e-q`?AUZ_({`f}x!fGOw?HsusE}8-Z>m_b^ji*+Ykr|sSjmL(}Xm(=?nmPDeMeNcMfpLk2A#s+tT-\n8W(yv#UOb<4E3)NfKECoc012}KZMMQ(|v3(93J#!<?`Mfdg0`LE@Q-L8(CoF_Ybuoj4emZ4{A?asTTw\n~SCS6I9+1Bd9Z15t`>jl{$KNx6VM{b!URf9UNZ7T$D&wT~a%=Q_T#s?F_dsMFMNvm%NQO&1|V<o4W~%\nj#8R$`h&f@<3YU>B(AmJMa<xzq~$L=N!ymT^n0BiVR<d@AZ^c`v=YS!T_R5;2jru{J5WOMay3I}>y=Y\n&hVZH!@up@FE@6%khV&)yV>g2#VKz%4;*#O~TnJKVY^V}7QCUWfF9c#k`buVuFkopzo*$8z$s97_Sy~\nD^K)ga0lmYFC<Qv9{5fx6evkuACvXvo%-!K?YZ@C%0ngD=+yQNqYK*mVTM@YX#>0~%z5?1FZAud}5UJ\n7n=1GpH1HsLoW(^wvHb6;5@Lp*F1#J^XHo*$)0_e9M@wP;7u-wnU7uPlMB-^0yov=qG-7%JMolfL)lj\nEW^RXDOF+)$cumu1BUf+;&!F$Nx6bH2!pO(WNgxsF%I}I?F^u=Dj+M)*QJ$C?bcyxAp#ccu$V$CXxW6\nR+#Mu%7f6@jfve`9Zq&rJ91#FjjXN4u(^V8p>@>E&@MHmNEF-?Kf|Q%s}-R+6PAMJI7W9>HQl<uk;wk\n?<l)1$EpwpQ5zlutcI-@&ADg)?jXzgZ0y#Qy(pABvuYE4{wG*0GR*z;^-K;na?Y;m06zn-@&l@DlBny\nSQkaNv4i<*E2rRkY5!=RheE=!}OVy>CeSdKa30PA>NEPWGJ&2gb949To?^QWsFu|VL(Wq5&lBgo|J&G\n|4&;VDZ&Jw$bqupsBA5Ojk;28h<|5WON|q1i@Id1lNykVgS$ovOHXvVArh<*dT|K*gGFOl6M*gUkZ@s\nx7#gIbW38m#v`KVZ3%#$_+&UM*B_uAmsBRdh^ryoO!F>xdVXweKX0r)3hQbSbcnFh(*NQQw3uvgh*#7\nHg_b23Gbn;R&Sb}{>V$7W1N^~r8XE=n<I9T>4r1(-BDMt;&a9dOMYRSnW8%Pnsr&&JC>y}pY}3}4n+7\nORs+$E&24d~{sFJ=7Q@_FeZP$R98>Shfen}Dled%Cr_)y--(Q@+_mjcrC$p;`o<0-3<l^o5<vo;T?_u\nO_`!S5+ar*9Hw?S$LuOAS!muQ#N+SF|z$z53cvR4-2zZ-Bt85^4=vRu$demc9DAZl}FDx4tzCAsAkt3\nqkIqA9shkR}gppdl3M$d3QpG`{oK9VMZ;4BOTey(LmcCQ1j$FpY&~&xexpidKTSSr#$Kw5dTIMa3!44\n@Q0(A3A)4$%!h_qBwZQq8wz7M!%Mv*$Vs@42QS2FvsKZ0`$_|#cEt^3OX)$G3LgU%#6SN?#YW75wU6T\nJ$a2<DBT0vmpd@qIAuG~TH`<~w3-0j0^PQtu-!N4cmL6dGFw48Nd5v)O9KQH000080A{lMSp9kcOIQE\n^0CWHV03iSX0B~t=FJEbHbY*gGVQepBY-ulZbYXOLb6;a`WMy+MaCtq8u?>JQ48ZnW(G#GsGC&(d1tc\nhG%9#JZfCV<omeo>1)i8w)P=w{B9*lP4oBT5oT9In=fz+J1`pQQ64Fg<)t+1&tR*vks$bXGM?B`t5hW\na0IfCo@Z0|XQR000O8X0rTP>y_0pk^}$%Dh~hvA^-pYaA|NaUukZ1WpZv|Y%gPPZEaz0WOFZHUukY>b\nYEXCaCx0q-H+om5P#2KF$xc~r#A3hX_1b-L#zbcN*wU8T6NvTX{<VSu$}e-;(uqxPFknU9_0FxW<GzO\nuZ+_)O&(c(V0#X^R*nfJ)E=0W(1->}b<I>^lN99=Q8(H+2oEWCNojPAGE(x~39W3;0>x@xxVDizh`6p\nHt3CIv>Q?Yh<ZcBY8q#Aj33BK%+Y05lL0Xnek?ok}+aATBe;;0xr2q4vN)30B(?uF_(iNn&E?UXA4Rh\n5Ba>=aSlJp8}i*lw*mr3#!e5{0pLinQ~5em&MFxa&!uRxbjadzxLiqg?xN^OuL8_=z5TDL(1Yk05NPL\nkG9i^2!8C`33SEOKp~?3Vp8thdk@Zn^RXU)F1~_mX)_A1e;p6x<N2W)5RwFFp%l8_7BpMd9~HuE15g-\nB<YF5KaqpTCk3htCMhnXYtsOUd6dja*DPPPbogFylmN06_Ayh9q>?&TMv{oE4YD$ZFnw9kz=uRaH<dl\ndKP7eGHB^#FuSFYzJO5P09cMWf^YDJnL?k`GD}918($hv)|nMVX?(^E|D6E-QlaovQl^`jzwkWIpFUk\nSsI4xN4}sL1nc(2@eQ(&TXD-7dCFD}GVlIfYUgYatPn&=-uwKQ{sxOSjMKN;s+d!Ova^}5?r8J!X#pe\nR)wIWYHc*+EX55Ci&$H6aAq2e<9&sG>-V>kIm!JfGWh>BRU?h6XXtBuQpNYjNw9N$1qhh3?FtD`Vl5w\ndGUQrOvWyiVltCw!j(Lga~1T_doSKFvkobs|^4;`;;wA|ry33!H(#c6u^>*O>B(=ZCqVf>PxEo(L1Le\n#e<wc2iYUu_Jv2Yn*uk$2b(c;i}*&7ZVt@D#d;_NUzlzACD2(m@xtRXQt>AEj3PCpl{(`>K*<a8NA6Y\nj@Z1Ko!y`nC(=`<GVB@f*gZakui0w}Wtg4WvGPiBjEL}=mZPxLAx>!WYfIlGjv*qo+fh*PPxA)>DUCc\nM;WLOv#eZZ%(slr0)#;ZmZ}T={9{OB-K`FxV2N5RlecuXMgz(q^r_-$&jnHdA6|=J|$?HUJf5i6*G)T\ng+&Vj_S3vtsLf<x6Mj#JH7<C^DtXm$ghHLnl^>IA&Ee&xc2XIMj9i$jCTeIQ(n-mD3H*UlaiK`Gt>i1\n2>~EF#0D&13UM_PC1OBoYrZJCURlClcRZ!{hhUC^~WS{z;Og;3edSGk4zW7qp9Sz;AqS-W*QM?Cpkb2\n}@XiHvruP^mq-S=e;+89UsQH$~lz{eRJ=JoY0nk*?aebmSl32jST(Q%>cK~(RTVo+~-IY1<v=OEd1LB\n&LXnC^cuaTZNPR1d+u<tH@#r&e<Xjw5Hx+f?nW^0`sXEpc%vZ`2Dfda2K_$#=yz*HjpN7+Ik1-`_^1y\nTGup$S&#@nZOR~UPr`NeQ1}9xM#M2KGyabdOj^VyW?sBQ|B8O#)v)Be`-blE%Wm2EGS@f8L>;NppX>4\nE-4nN9FcHo^|EPETGyfU*nm+26a5&P-ekW?Iq{6_Q_t$6Y;P)h>@6aWAK2mofX{8*XpAA;Nn000Od00\n18V003}la4%nJZggdGZeeUMV{dJ3VQyq|FJob2Xk{*NdCeJXZ{s%dyMG0t#UfJIR(7{{IKZg)P~>uV1\nr}+r$=#P+pvV?&tCdMrl<ZA|{P)fbNr{x?JlYSv0I_UxW;pK$mG4Sf)l8~MuD{j%YkjEFa<Z=Ej>)nv\n(@Jq>cK@3e4Oe=vzAtmJu{+<3`ziaJt9qh$%e;(}T-3Z0X%VlAJYJ@XCo8$zr6RLfXZq(c6ji5nqW~%\n6%A%Zq`SRnJDZBd5+1dHk)fguKy5eP>OQCwloL7~srtC5=>Dw4?Q|CpCw$2N#?p4iqM?vF4ZZ?h@HoX\n1}E4-Ra3VO0dw-zReNOwF*qRC{kDpIA`S-RSC!(M2f(R{+-F9-s9{vcGzS2aVm!FIag$jFIehb`v?TO\noybLZDa8(kNKX^~#K8c{OKOTX|shmTPES1B$Y`j}1^R*3v-X*J_ud{#d${P2J&H=mN|<Cu5U}P$tFXn\nw9D5XJAh;1++OBSqyP2zLR@CXJ6>aq=5g5?Ev1QGwoe{#ImV29bQ@#EC<7=0W^W%-F;W4H5%&E-5u-*\nwgeouDddvzuVuxRLiyn2v^^HZh+ECmmwY3Dv83X^G@!9$&&3|>d0jP}wi|_bi`G*3_qMF$1{K^}LACa\nlP>t-SW%QQa%w}5mi<@l&R-A$X6l`yAZ+oa(i>$@%ZIiBiQ8K<}X_h5YM@Fc4v5wg66T1Kt%v*e1j#o\nQ^Q*nn7wh%<sG8#<1^>l@>i-7Fk+k+6U7XiwgjN$@=X;T0QiQd~>ZDqdVY7yF978un8kq^1$MY#yBc!\n42<ZUG)#f)ndAS-O*AGiOAFh33qN9Kq1*$VC%hEtCnXI2Z6)8@(i(N;YNqe(Gy3>XcqJf|NaFM)h-(M\nZvn&M(H@ZQFV1o=799lSz`;4T<}VPk3IMX00#@^`b<bK3Hg2ki@q`f^tvG&uJ!=YE*6k%WFRrbdZ60(\nEU^Cd1UUJkg{B`GxC49a^qjAmkhRrR+=?~#XzI)wb4=o40Ljp#HJke=;E~R{5#*6f<zi)%U#=iLRk|#\nA76*|>xZ-tF30-13rrxlBaEP*94!KHuc%NT1B>50LZ{FY18YDk!z9+c%c1T|r95N^HuTNs(TNSZdvXW\nQm!f`J!2nC`c{z>NGXHbH87TR;8UTnNXSaa;c%Hpbls-~6-OWrmuOAbYL%PT&$GGoYT8Z*mA+>)rPdt\nVn8<VK_1hQ{(bHf}!5Z#$lKS#PU1OBLf!XqLxDf|p2bR&7(!2Co-eF9>7kf^J8$D!2&&`JALVG*)hF5\n(d{&VvWB?@MgzFtpX<t8Tl}L!$F8dV_XyHpUt*tcFDG`%Y^zVa4l#Vh^ZJ>MCR;SsiMe3Zu^P>Dz!kW\n^P1qBAaYJ7%32eJT&2ddHGXH-4jbWT`;SgmkcHvzl~f!On#b1=&=?L0hXa-WiY-Uin#Q`a(T1N+9GJG\n@(_kYK`BC!j3FIRx=?EMV{V3->`lI@Cj0(-B>AQS!?c@??JOdXTNv%$s=Kfup1`r&Ie}#5%V=F~#tPp\nF={^Pgtx9_4kdl-@a@%K^&ZNiWM^c7M*qT5$eM>YCv;>tLYi)Ob32B3TY_x1IqwhrL>F*}a>8MrHod$\nw%yqBgc}B?B6xhI|DnBgVjqo)e@PAqI3z7J+H95%rJ;cn8)vA%98d?EJ6qKRi)7jpq(sY{Yhpk+oqBK\nVtaBk@X>gp0O9b-$Ml7!VCZB5PZ~_i_z5~vZwlmo6?^-h(sBzJk{02&`IZI=w_qQ`f0L=Q#Jc-?;on0\nSf>y$VxQQDKUzRX>#!O9oKDT|fU@{8SSXMkU0aWzD5wTAa(S_>hcnBu1(4RGnSU~oHhCT%3BiPPaP$P\njeKa$iS;W?61IpTFCX4x#)xbtHArRzP7fD_cT*%RMq7&_r`N3@~6^xgt;+xJqz-)VMf*tb+3;Jef!K8\n{&Y`Qu_@X+G<#~!V$xT1^dIHKV%rba#s*8!WEeEZ142g<dPBci97Gc$6D8r^mNKXD8YcD(7t92!OAcC\n@B`jU}J6VxI-=MlJ)xG4}r|{OyqWJgLiqgR`)*lKVX4biG9p>=JxI+_$q+*NDpmOtjj<<d^K!26M>;a\n;=xzyT72HwQwF@P~!2Kf5Uzh5LIgq1gLr$wn$orSDyJgU$v=glkd6k2x#zko){ye#1mQO4f{UJXkxXe\nz@S}Id$zG{riaki0UW+Qp@6mof(Ik>V{kIC;BhxSq?G`oVebIfX3u90$QF%&$^7Rd(QeM#^J*y-4+DL\nbnz6Skn6e>?7eW6dW$P%(<{AZ^+(c3rNX`w<pFVh+ss6}4Rp;zC;GDOP49}1Js#(&#I;13GAD;96u{L\n>A;u(zVmWF$5--SmHr}Nr;*qz#Tia_)=<Eh|>m*e@vu@Tg*J1BvPKZhSZnEO+u1M0_^!w=#0JGo9(CT\nSh9kqODpNFz!k3eQU3&g0Hq*fpdHU8dWp)J1HH7gHvE>31NP=a=j+AOALGx#Q7q=<^}Vv0q&_G#bqwA\nU5&E#A7&nz;+{hjQ&1*DDUen?WW5dKFcDl@u<i6uq`@z4rRz{ITFOS1uy2rEG^1y3Vk=PAf@g}LH4rF\n<p9EnJ9GpJR6rMyVPb4x%&gQ(Lj7i85=|jPrh@JP@5?RT1JbQ4-{TOrS~ZnJXvx?3g6FOi@Gc(Z{9l;\nmfvvQ5-$S`to3S6(Udlf36Ch3Hfx3}22Ub$U6bom-D1tW%_{x>1e_bR|1UL`trha2!c#Ofu4VeGHNwS\n|B*w&2_yZZ)pf9DaaO)(@ApraZ`(Y%gd%6lfc5+}8lVJL!knh}Rdtf8G8NSxkdb-Y`aXPRf=(<9XJY>\nqRwaufl@K^BEPfEz3!(+Y4$JPYgTxD}1V&#A1d`RVE5aEP@R$Fka-W_*8I@>1c)>^(r9w#eP2V!yp(V\nL+@0SQdg=fR1Z7kq21Q`@_sXo^INpcgCCF08mQ<1QY-O00;nPviw*Wiy7p}0ssKq2mk;d0001RX>c!J\nX>N37a&BR4FJo_QZDDR?b1!3PWn*hDaCx;>TWi}e6n^)wI0OndWM<ES?j`K4Y|w6f2|+0Kv7=R%JY7=\nq?|0;@(m3r)CjyamuHSb)IT1~(jRUFcTBtgyjBY@;uI0ueh~D_jrAOP_+_@#c(efayOL{{q+MEgH&?q\nkRLW=yrEwVy44OitDu<ajjg;>X(w-i*O9Yel9KK^`M!_)8W_WRS*Qe=aUm)!9&qDIF`thkqsp*jhpRf\nEbch3Xa!cS0+h7e_2!#uRA+w7MhK^5TWp$Sk^bbnKP&ZE(hNI5x-~#_lXsq+$e1%HWnQ_28Y5R9-hNb\n#f3=xHEISwlSQk)a?X~u*DeiY6Nwny=y(qCkz)2+>cYvDdR(TmNKSzgN$WKk`$6#3)=v07*jfYXPXY-\nYPEVsBdRk@kYGS-;mA)2BM6C5VvDLoRS2{>MJ8PeQ7dhb8T{)7eV=GN)YmWLu`_#1x#%GHL$~f)qifi\naB*T#QQzDu#7_U-`vRcDn-V9P*12;821$pkQGy4p_e50n_X2=Q<4;6yii5Et-4wlM)ILS1d5)thoc1_\nq-B}L)F^|-&5P8#j!=tx9iKGbhI*%qaCX%6d#+S4p24VbxSR#J8&4!)x*&DM*V=0a~A=AN@;+E&^Ck@\ng1**9nO@9tqi8M4ylt)`~DjH0<KgeLnbH#DxNrlFm{3%h=5omiPu-a~9U>&H{Y~DTe(TUXP+Ug0P^pn\n?;_luDJ>;ZeiJDfV6C!aqYhDuU$T%Ig;C_Qr)BJc4PN}qc<f#js7E_Mi5lnO@Sl|XYKn}O6T^UCP0O6\nj^>@5F*gfi8+YB*`Vj>7qDy?q*ZW)zJPn$h-xf4sccjx+az~Y#1%`&=x#6!j(2O37Xl5j$8m}D?ruaq\nIL5yFXbZ`@>LFbL?f6ylbN{jFCvHGFmVDt;BSSFUp^@=WLwp3vJtMCs{O9KQH000080A{lMSm(}~abE\n=h0KX6b03-ka0B~t=FJEbHbY*gGVQepBZ*6U1Ze(*WV{dJ6Y-Mz5Z*DGdd8JqDZ`(Ey|L(uypcsp^Sx\nU2SbD?6b=K=w;#<1NLg=1)pL_1vd8cF5l`G4P$lB}oO&eIo3<lXPy$0Li<gi8?5V!-lGNuT5+C+T3rl\nL(Sjri2R$#qJ*@%&5rs<a5g6ZMk#JgdF4>DN7xX#gg)vgpMCF=Z*;K`AHO!I4Bt=`R_3nA&JZcG6htW\nEQ^nm$#k*kW62~7g%dI1m&98ty_6^0!QkE7#nhYJ{64#$F0XDrfD49U49*k+?8H3{!#$vKX-FkYVnE4\nU?u5@-D)&dJD5|bt1{JWkn9Q$c%LNM94FDel?Y=k0S{xLQhj?CvV_Juu-R|(I9)&xf&aOYZCJase>wU\nVJ|F&?A;ci#`u6|ta_XgbFHn>}lCZ8yJcUXOYgK2g(^WJ`3-ju$Zx|cA#grDDB1oYt|&cYBZsPy0O51\n)m76zl{7x*=I8!G7Pi9d;@{ITyNUlz+T*Ty~~d5C-g-ipJ`d{fo0ct30Y;O{?iY#X^Fh<GII#2LfGo+\n+lTBndao<d_MiKv@b2|C`YfKazU5trn~x_#Wt{7!4U2C=mQDSL9r^rm5t1<3t>V6lF4L~#XhXpuR-3^\nxTeS%s9i+`x-K>;k@q9;3CdGE+S38!)R*CNjZeD`jNz}9qiHB;16k>FA(D*y^umFnfJeaT7OS1|3V)M\nu2njB=LZG6S3&Pl)SHU|!&}~>N{u|awfP)y%Q@dpfQ3c!xiJ+Kg;ZrT-U=~`3ELQ1gK@GRVl2?V<7wH\nJSs=#7NSS-M1VB0NlX~D3PY}uD>9IIDyCw<_uNhi7Lvmy<dL`2YnRb=YYFw-h@)tl;3$V+iUz%Y9}Xc\n=Jp{k51TkCf})*NO<{tZ6Q(koHXZ<$V#L@$K!B+)bZS5)1sbz*Y_4juQ!gHf-wWt@j7|j`&}))Uw)ra\nZY0rQTs~L=$KsS0qU!~LtfRH&7q3s2!<gM@)K5ZM+3d{E=>F{*y&eT4D@L|9xqgUO6K#`Kd;y4ma1WA\n$yu~eXNuX3zw%)P<!BP|iOGA@$b$h!*Lp2~8b6F{U9AH73Te^NYVx$cmUB(xEr!8vW!-_hr@M6s%^!;\nVu}atu$(%;XLlL&7{@+Kc_5UVmN7)8PE%fS9?M?;ZyK}KG7-#Tab=o_m05ujoVP{n3D#;!G6gk!5>Ol\nvcI#t>o(|lhm(*0mC@R32NX{tC?i@C}y-qyGze+yX1DR%905R(bqQOE=hbpI}ws{`861CC;6+c@FW<M\ni(gPZIBe#t)eLOP<kuU-fxBZathAkx!U{h8wK@H}D~e>G+_#T6X+M(+Q_yFdN1iwyg)JQET<CwL)~PT\nti5u8@6U4TNHZDHG0r+s>F@FwKaE?lU!pOVY97`DryeZUTR@k|J}Bi9@Ab<HLVMFvSly-*D!r@w=LV8\nYFQ83$)>fiPOz<Z61FW&PqpwU=E-*UB3gr{x%xuK9h_n)mxaCFmM2+iz8W<>VpY}6vshR42#OjX7ni{\ni5WdAfbpc%Atg_a1j~BD5?6Hl^aE6gW&8{8AlZ{^9GVCglD_@&5^n$=<)4gXoU+A-_9W|P?Y(eU1#<&\n^qQ@*bKlYcQ3gEvGPm^rw$uFo|Ezf;j_qH!Y*`Rx#8l-Fe^paG3#GjG(>qc+}5&4!c_ddPB6K^!tob&\nk5_<<+#BCu#F9RZcZq*V_^&SJBO1qudI&A-09hsmyqMxMY{h>Xd95|BL`Kpqx98oJra>+L+GgH}f%kP\nBMrxAt6;~)NX$p8>M;%U_1=xuY|>BBXD1}xTWL2P)h>@6aWAK2mofX{8%YhcD4%(001T?001Wd003}l\na4%nJZggdGZeeUMV{dJ3VQyq|FJo_RW@%@2a$$67Z*DGddA%B4Z`-={-M@lUQA7r0wcVp}eSt1byI@&\nUG|k<E7YMRN+gfE&Bc&upkpI4O4oQiW<fQ3E7ofEzp6@T7LptAALe{Jh+ihNMC%JwU%6?PLs*+;Om6~\nj%*fUYpRVo!{X8n(}Xt-Ic4;9d`EAPug#4d7GN9?kyb5W+nM8j2i6(@OFa|!R_b&<!bRPkgj_WQKVEd\nHr}Jcgp`v~Cn2Wn5X5v#(z-zeeop`t<bd>S`2Il$(6p$P@*#XyJsx->JJ4(W`&tWv0Jvd7XH;$tEwj(\nu>~#48Bgs81nlyC+%AyzvR`KltPX{H+5d9*f_%?0Cis03A{ayvd`7p!lSI<vu(ugWM1<`G<DU~lL?aL\nk}a&WV*tFMcVUv0>7FOabTXN&i&QD!8pai&`JB#4?H~x~^Pg#%ZaGk0rv*a?ZVR!3ub#c)3Bg`9E8}K\n0*KcO5fEbxmq_BF&S-P(CTkd1CP)Md@3?R_-OjUfHZ*rbZ4H=&0K;{hoCm<i6Q1TMQBRH_WMgkMe*(a\n`1ZZVb_XfM`zTJwzE<@Jskd1FCtG<XW}uDE68LM(`kfon>FyvC20^2qqA**b<9YNW{AL{b6xCNF_t1K\n}bOVLuthHT%vFim9Dwij1u|%LJr2hm0m!YzE>#EegZ9&{0l;q8wy-@NXr7<2?(sy91VPHXM8hft!|xR\nweckT*vRzeN`Aj0R*s72JL9VCB`tnpEa^zySlE_{LLGK6$`n26R<my*&0C`7{wtxhIkv`loo|$ts=H+\n>H)h<+?9n$v$)Rp9CCxbd#mHP$AG1<0vPZjV-{AF#ew(`RZA*pS(-3E->_1YoQVya%^JmJ1fM1?(73a\nig3M$oaH${`coqS-+g#QS6iFn&OL!9H9uj{vk`)80P%1YJ*}$X88YFI0L=(D)@KG_lgtzi8S3DvU?L`\nL3vrcto+ND*+OI8cQMR_%w)q!Y0WTj0}$8FZrmwa0a$rH){+vM<h3nD{p`6f;5HwufwqOB76_ZrI*Tm\nFW`XF9-szoGnp24p##>9l3P>Cah});n0hr^z$OkmF+sb{s(s5LlPf$I&R)U&e`2+&3#2o26NnXc!eLU\nTmgp_B;Cwo}Rb#@O8Z26P$`Wgs_Dms@85n<h_SIvt9(FOBhH{!~z9Ne1JxQus~7#l^rjth0mM#pJ}f_\nWI<Hn2e<VZ4H2_z1(oZM^Q-Ik7YyLeKAeBM{K|qMAvYmzQ<<kLEPpxXSq+s)+~yh2VjpqZ$vB<7+;XO\n_jag1FQ4jEx`H~v4;fM`CriB_aVsMRy!ZLeMHQ&$fK(VnBfR!lta|&XjkE(|Yzg9V_F~3GDtgNG2;li\n)gYTZbQ0s2h!env^^uO;k<@PBQzOtw-qRrogY?J(_XhHOfz6_MGw)!g*vQ1Ine={{nqYI#G|1p3FWnC\nzfn6<jJP*AKoqu{H;D%@n^Uy4moJK!wCY3D`-XJ56+P=>bA1ws6>`cFjc#p*jd<AT-Y&92Hv&Ne^Sxs\nJ?pgYj+IPc<g-eihbbFTkoNnGNI8fnR0{n#A=0~%eOc54th&##knVg?z&@+E&oV?{LDG_TZR)0U#lsW\n$%;$pGWKyV5(y<@LHr+)gS(;I=UHg^PNzQb)O(V=Ze*!Pq)u7Gc42iHH^bd7U+>2IPf1mMh3$U|71%+\nCzYiROAp={LK!Rfj;`Ynfwoo5(z+t4ttmUC^!4#q$8?S|SWRh9QD4mB^H5m}G60ECzy$Fq};HV|VVWf\njCvauAIIKG)4v7#R3+W8Hdc*dXbHII!=f5Z>3*ac__O<>9Id_(sNpyz{y-`x9#$dxFtt6vyv#P&r3Mu\n#@AHS41N=9Hx4Tw??er>^YU9u$Yz{_A!U+Da~gkI4=@+KF;z1NI4@Tacwjxd~gBl2PByZ~i}iF>mdOL\nR)S7A$X+ncJVi7D<KLhz4kO@iN^~!ouo*}wte8*r6(TDZQe7^An-0S10@)Em<AyoOvKk$XJ1>{;&yMJ\n4oizc_;hjkxAzwviqq{JN4h%ycGjV^d+n1o3F@ieSUdH{)LPdl^FA^HI3^y5X1s^(s<(!<jka{tn8JA\n0lu*tTMycc{P}dj@Xw;;7sJsBaFyD?89TnqH66=X8Bnz0`h72)4Ko|C*(2+;Zn!@R_v-FK`)uXC+7(F\nf2adUN1)1??{UGOq=-7#g01$#Fi%OV%d+f`%=BWRndz21%XLKynjHPm{XYsn(uBIqgbfPys@6g|Jk55\njK1Mq_q^w!e?|yDdy&r=fXC>ohWmCDhF%2p!^ok?EYE0xaG-rE-|HW)B}Jv!Ki#oZj=Td!!czuhrr;w\nD1m1M?KqN{k(2Kw%v1w8sc2NL<Tpc=esV#wRVfK%>&8MatOp7%k=dMhWhyZ;Gfbe@<kj`PPNLhCBbSX\n|N7+4s9fcI1-ejC=`Hv3J9L!nTG?OaHhoMn?zj=1v_NAn`w?}9J@?P66$AmDg_^TG5N4*mSf#nd6EG>\nDf<r&K;j){&bffB?LLD=V9v1p3t4A^k^HKt19Vj8KBAwY@vGZD2C~@1)way7Gq2q=H+si>8$wl_4&LP\ns*sFGZvBD#Cpw*)fb6%;xSDS@J9_*_wu?tb%pftgb#5(j?^L)IINBIHQ4hC2$K8F%*=;mAfsq;R{?`z\n8c#ZzClh!`*XC*2o-p&KXrj!i-$%<7B|D4$QcSy-;vWXv3j3QXBk7L3IikggIR^jmJCQO!T9|zXlN-J\nUP~s+#pBqX!X0T=80;oaAenOts-^@>cz+NE**prqk8U$GcZywwT>Km_AR1%iGrQ~*g2tVn6dZ{4Evyq\nk7v|;$wrPwHew-@Vanm3kpRMf6MQ-Uk~{$QxPduJhSSI4dFXf>V2BKj>>tYfd<iy(@WVOW5VoD6)A3M\n+INAzOR@8#<oq~!PsY{FMNq~R7CNemsiyIsUvhL)js-%F}N^KYK_?Eiali-937qaomzhd8ZxxFMSPii\nyIwll&V2W{|r2>VWwvdF*V0bp9kJwoRjdTl4-2yjm_l8w{#9}uaUqF{K5!WB+C_c%b;z(0OU<>4%Ga+\n;Q80(5nE&8hFibg3Xw!3A}im&hgfclki-Kc4hvwBvJm_j7=Fz2oce$vQ2HaC7pY**&trkPJ>Duplpr1\n>Oh^hV_pi&}UJ96it~Oo7&BQ$77U!=q94pu0e=77rUO>`n(+-PC<H}ebG<H<mlOcV=pzXS~|Gxw0F7q\no#D?C*aMICJcLh=fs>DJ_o0)qmwS=DGMzJcgxWdB6I;s2_vOK>h=1or#p#M=pF$Wayt;Hx*|tJoxX66\nFgK@dpuK*gi4Y_TwOnTMPjCm-{l>KD^d_7a_)fNmr5`Mua;L?=*zT#`N#0VQy$*ew<kMYPQ&*mg-wGJ\nNa&lsTo*^cVLEQ2lkA^U{GK<KG|u5f&Cwa1`s$P5N$2hj27NEdu$4|~P_g-%*y+-xBC4<Ig(>rO(un{\n%3n!LLZX*DCgYTVWT5`8qPB0JU(CkZ1OHD&r?-c6H<g`?|zEww2Ro#=aCh1!qW3KTW~Hh8dPJXtn#db\nx+p#bMt!_ebyLz$u!u8M)x=J1tinl4F!8%WvV4ehb3oZ%h6u<!Tk*-(ASs&?kdp2njL?fOuM|aST{Xl\n`X=<H#0=Jx@%satCwFgc(boS1P)h>@6aWAK2mofX{8$E>&O-VK004~|0018V003}la4%nJZggdGZeeU\nMV{dJ3VQyq|FJxt6b!RScd7W9^Z`(K$fA?R()1s&ZxI&73TB9z|b5h&_xo&Th+&$z1f|e+oS4q^7R8k\n|z|9&(4kSN)1gUdrKlQTcg_Y7sxbW#~o%YxN>A;P!aPPDu5RqF7h4|-84*$~;8jw#KF-}oo1d+ztlq2\noGi{9TrP&2M38*aYOT`>8!F$)zaFl3WW7|NrQWkS(hh;lxgKIep}9DU}0=7V?5CBPtQlp7vbvW2%l7-\nx%tXKXRo3KF~W2n061;?=B()(HgEmoV=)qQ;MdPR!V(_FyAsjD`eBKwhUYw_w^jh2pSj~_Kj1+)Q%h4\n9n2mCJHx9DGrfib%hBvNcbm=C&CN*`*;ZoLD`p~7Y~saJTn#s@WQGL>6pOcyLdmw_tvSWg8&PXGuIZQ\nwY_j7mHT=7wifh@cf}iK~Q5aZ7Tf#vUR?o9ELKm@wKr^}(@wg)E5Z*aZT-&vj(v~%x(rmF<l)NH(FQ4\ncm#&n7sE252B61%X%pv}m;kK~JN`D#Jn&mrfctz??K(JS&sCrg5yo@s&$Nkl=$nxo;Y!P6h%0eL<pUn\nQ9(o32_FK)Yl59Cs|olQ8?pkZI=5!@o%71nEJ66Zk=qLUCre&oFAhpAGAr8ko-a)?V=MVKtt6?E5r{@\n)QnCe8vJ^l3`+2qkO-RuRSCKX(4Ds9_x-5qB>xZ)S~4&kElP@S}uv=jeLY0Zx2As3Qju3EAgF3MRZ@m\n6QoQk+M@1DM8Tv5eRVb>Szs{h{jd^NA@P&|rE}fY!lVfS4c=$>7Z0QYc%%SRlPU*Ol@<l;BPx=t*9mU\nm(t!D}SU9n76>Bx{H$Y+}Ng7)}6Etklx&#9|`4l(3ato=G$VmbxpePeLtOUV*m>Uk6VlIVe^l%zI+qk\nz*4R!f`tmodfzxWbw!<`hYC0kDVuH&j;+MYZ*)e58~(1A@f1ZM8^h>iqHN8g|ZJVAP9V8gCv7%=ZJOs\nG!)h>1_Po4<jWV2I90SwjKTgcYV|b$uYRg@4_*-4Jj-Lcj}?BiAGu5t1?Hrg9|{q{Mm5sKZE4sjEGdr\nd1r;`E!Ky0vhaUxn(s3#L{(M_rxE0y}rl>IPYF?7Bfbr5#TZw%`x!r1@8>`-3oA}lvHu<{0nlR24j-9\nM)lfgBNcy3AiydnYW(y?v+Q}q1?yXmdC|A*5eV59{0tHJ)%GLuYyKO-7RQ;Y1=Op7^MrlJV-w4RRmul\n6#X3hmkn~pw+KZ?pMK-|NINF5?&7(;6RVctk5&e^39t)JC11G;SGn~ysMy>}RIT8%fK^zMHM)9-7H1@\n0+T4@4G?5<mNu+D)}Jsbj=RPt@#mNhQ}1X^x1JJXuu<Y4!5N-F`<Qp^ZEW@18U-Co(KiKq8c!?a}fc_\n~z+@c@-QjKNvLyao`!j(wEkS0%Q+ZD&V@@`@wT)V-qxfj!0j5Eb5B-v2`rAKR$Q@|p8>8nvXbwwm>%S\n+`A+1jYbj_S{#FK`Qi6r=So+b{WO2xls>;gC^M3vNM7cRShR#S8=;@phEVwbM`ij%)HFQ>Gl&#V`R4_\n90}bG$Y>M*CzQ*D;f;<vxs{bRTx+(obt@SoB-kv9+gGN~#F41U6l?0%xd`cG*Q!m@yVlkdh;yugW-yw\nMZ4bO8y@nE$oIr>gi<<-lAJQe8GGvo)M`oDYdbDK?+D@(q>6AGme_786=3v?XVVlh#Up`;|zPVjZl<Z\n+Fgep4DKYNU;W7AX##@X{+ke9PYnGLY(^&4$R*hxT66<<yjnNH5Locz&v>uAAowb&{Kb#KVp#Fu~*K@\nVm-Gl9Np%zb_7n5bpgPN)8ww(?irnQA~nYtaZSjqfk~h!9`maK1UZ*#*!nV4#8%3R`2fEgMdZEDVg70\n){?zuvN#gkZ_YUd$@Q#VX1;hfC429jzda5iZWCmoHU_vSyanAKi3h^odDx_>$<^tEG&>AbC}59ff!;k\n^_%2*PLGl4`mo+v+Ks(63R@pQU0|u<e0<Dao*m{(auiI!J$6}d1?(qV36tmt^4=Eo0f>AY-8Bk~TW$?\nvat)n0nurF^?DYL=;C*oOSFQP3l+Q5Y@x{+#6I%c<VxhN6Pj4KNp4cmaBJ;|6h2t})yuqq4Z~wc!|11\n==?&m@N7pE77c$<^2Fh!7e?}F8!I^zaTkNHD#Rw8G4cQs_xO(}M+OWo^+)$|R6%^J|c*8?1U(Xh|o_#\nxb3^2u!qHkO2<WgK4UdN0A-*pVF0sJfpWk}oo95I)cxEyWa}a6?oIa)P?C94~u`Xte>I@wV}_=iEM&V\n4zyEGI1Vv)PWm%6t$p}yP{jM_b~f}7cr+T$UIv*DU3yWh_yU(?6KO8Fc}geEQ}|vrgG}sU6<29nZ+X*\nS|I<A6m9B=(ceXl(Q*l6>CV64O8sXx%vSa@R4JTbcXp1#0)X!(1~U854>L=MwKq_(cI1Q4=8s`R>{{p\n=a2@+^FO+Qqk0D#_K1L!dOX~Sj&FgAbtMPAq@0KI=r1njC@eLg==&@<qW!w5O32^lG9CW8--=!Bz@(N\nBL&lp#ssH5zvZ|%8DGHW={hZPn?d|!G$OtUbfM$UAJ`NUKU;W3>rlG{Dp2ZooE+TD>G&RTanw+^yz$H\n+9>lS^sCug9W*7`BkH-bm+2%Z)nWeG#$2kOrTjF#*dAtc3fLs6iPZFSu=9vNv6CENf_BvT{cSaT|!B8\nBnojEkq0o0{|$YD0n^+MMjTaaKTkN%o%tapS~$fv(rq`l@*wxZ|BMRcV6@c$6U`bE}UlqaUcR%UmM;Q\n5;NR0A8-6fRG`LN8$23(i8n_&-a7*}wYU4B00Hn#8k8Vjj@YyIaF#O7mOpV23JC?nV4d(Xhp#h+Q*To\njCo$jR&joLN199(V0eaT1j#KlDiT}L%$KBP<?G4?0qJO>na(R6PU~qr-_i5DoB+(hT&E22ZKZKeQoPj\ny<>qu^Y7D+R}^iMx$y}WYATmsX{^&=C{C;r)fJUT~vzO{s3EB*&iO9KQH000080A{lMSk#m)+2;iS0G\nSj303rYY0B~t=FJEbHbY*gGVQepBZ*6U1Ze(*WWN&wFY;R#?E^v9JSX*z~HWYsMuOK`WlL1@X9)<xy6\n%0r>U_dbxOV^hmU}@>tVnc~4NjX)2{SGNgB5gUXJp;ao=R%(ETxni4QW+xTe$VUug7=S7FLp{+L^h^j\nN(1rhADC#t(@fW(#6Wq=wORCphBqnYwE<N#k>-LAJb6{1LN054hB2Ku2APUI0X0nR!O*5NrL51%D)>x\nuSyikq2H}6;bITP}P@B7+vL?^mlr$H>>b5zjN*iWcjoJzr4|4zS-Q6Ge_j4k$0ma;@({0N|(SK5-SpE\ncRP+%>H2y?2?2xkbd@eD$Y$d!;kQ2~3FcT|IE8w7*C0A_2r&}qeWKB$0Nw+d*%)tb~&RZQ@&KpSRC#6\n)oeRJNvR&3SDGs>aF>8sFpd8-zDEQgw@k4I#8P8)7L%gWtNfgwmQ-K<R3+Smc6fP2R}oT1ZxSw<M>YT\nHP!NzLv|S`yK>HgV?b>`o*5}X5ok%@~(UL7fGz^r711ubpc;MuSlzHkg7>N(GBE$$3f}T3xBw~CykPy\n&=S%rF|NOrITItL@TPJ&Vvq{;SJD8{vQ;?{rt*>>ESuv)EC~}@65TcyI86#~j6Irzdl?)ME#m_865Ue\nrytMltcmYlos|hgOk!RKsBfTjdVaO^4ppOq+$=aET<SmRlL6MGdx*x4Z5Ybr!zJ$EOjrQch2h}5aJqy\n|`dGH?CIE*(Vf10LeG;LI*tT*r)MXwLJ4n1}I60eB7X9N93cJDN+_NS3~gsXrZVMQ^dT%tkjR%CNa{+\n2b|c%6jUWn087pH3%%WGZZFjvrV7Fu8QHT3sX>f_SNHEolMG#bSFQw@i$7U%u&<*GzSn3d&k^SBf?Yc\nA%~l)+)bZzbpMnOQuV>7*rd%3bdwMrmk^_>p@&g;d<7k8d{BA1Daod`R$6muNUq+V1M>&;+XHT=>he~\nYd=d^E#Fo%a@f~$Q!Lj<D;t~>%={`wq1Ca$?(t2AzLOrYS)Ob;)Ny*Mrvk$cOd-z+39A-sg~=r1*DBl\nkBXS9%$(E;`6-$#OuaW&W4HO1Q1-M$6qVX&$kt3Xeu&efN5!+9o$xV9w1KlgxHZks@FP#R*6C32VbOW\noJJ$FDyCHQIL4S!w-r(0bjHfQYb(WvSDK~!5iXx7A=bK|G#HO>ute6o}D19pf<*I&>VQ+qiIW<MlCfk\n3`jEsT6W5Gc4|TVV$P(Djc7CluuD+&GPgMI*=#=a!FlHW^~;<C<(+92`m@Tlow^2m0jBtp{V;J>Xc11\nM)CiA)Oi9ZgChkU3zln;Y8N!50A64)aQ7C_G6wR0z7x==gEN|2Z1mvP;ETcCUabqQ>S_O3}fJat&xr!\nI4|2!_lZS4Y37JgPN3-NJ!TRbWOg?A)Ub~)c0Ma<PmFWIYsmcfaWc5GW&S%RMkmRlr<ifRZe}l+)!F2\nWFGb!+uvZMcXyMlvlbl?UqWU~mNE`0q-6J_FdIAh&wKQX#VCQjZ7@PKlh)$LDsC4#o4-O%C7eV-o%qG\n~ZU1+-wV<Q^UY)X%rzV;qo55AdP|KbHN8RhL>!PYo>U|E{bbU_yEPX~q=A$O7Ut(2>5#C84s!4-Kai=\nHls!XA#yqY`^D$i-|fL1T71Sm0YxjW^lsPrPnH%y0m;l}PL|ht&9Z#-%tN9ZqoV7h^03gtOttcU$-(z\nW+1r21xo@YZRN7Vpa?_G|c)3d&*9Z{Jx`m+WD4hJr6jJYMwg<NpEkQBx6uwcq6a_oT>kj*w|kCMDRCd\nDClzu*oj>Bg{5G;)&~8uZ!9D7?pppC8|d-o(KRYPxaOOzZesj*Rw~svn`ylE7IfPYu8(ee!;5J<6F33\n;KZj+s)yFcQ@D5>ust-T~ub)tPa3BlA>O?BI#<Qk@x=4o2W~xEzf6Qptw8FSaz6+3WWZQ*^N2d$_I!c\n!JZJuMI?^-)+Od{l!{X1hxmgy(S>trIVq7X5ys>lD?{sT};0|XQR000O8X0rTP-V(^xAp`&bgA4!wAO\nHXWaA|NaUukZ1WpZv|Y%gPPZEaz0WOFZOa%E+DWiD`etyW8q+cprs`&SSG0?4SX^l>w)0L3-|3KY#@l\nU}w9fs)2DyA;WCC@0$_|Gh&}k|o(jH{JSRo17=V`8XWW8f_iJM_lc#ZkaaDaEri16#UL*2ffTa8ljp&\n@>7Y<^2*(U+pu2+x>eLN!eoU|4y@ubtE3nVs<tNYLMyzYn3Wu%sC3(MRS#A-ae2)I9d{j)Q4Khl+`hl\nLd3}3($wV8lJmiq=Ex_O7IpgY*N#}&bjIuJ^4ch2xDayh;G`L!=YS^;^54w|eft@iH5R0-Cv@Ch`0IJ\n4x&9<*tskPj#7=0|b&MFUkb_9!*5Cz<8_9IJw*s$-uUk`3;IEFCM!36U=`gb3lc{$73r-TwuzO2HYct\nT3idi3zwyFg0JILZ@~4NGb&s}*JEz^^_W0OSy$KS2*cB{?E{6F}@MmiE7Wm?TNU@7vCqj(}8DIVquLh\nVtQ!ubv{Oe|5q_3(6teYuj>{#c-n*x4<N&MV4g1Sw)=Lk~dH&oHznQDi8^^t-)qv=m<)qw1uLNQXD}Y\n3AcB)gCOpZBGAT=Dq}B<)eXDrX?s5iq;3iV26*dnPZRj)b}wK0ViGaHS`XIQ-a6*stIF%T=zXRLavy5\n@n^thDh~LiW#&|u<P6p|y5l*(HSc{$Q1jL1q?ug5iDaZ>2q87!-6K)Jq<ji`{JL&Sf`}uwgjvu+rlf9\n6zusMJ<`8?;4<$LNd?f|h$zL0*=Q2CY|AeSt316m~KetfeCio{LD8c^YSQ<KtxW*K{T5Xd5QL>0wKxa\n6ioVoXbi6NchB(E?_3we{&->#r`7JTH>e6<==0@?4S(bwTI(>xi&dYV(Fmgr}9@mwmiIM`2yZrN0aAK\nrQaTku_46TvFJI`o@OUnknsiOfTUV_2uLC{96B?IBuy<OTtIcE(o5DS@KrN$KlYEE;XEx(DPxp)OR3D\nzUo}3r!e!qte~gmkgop&Ae6~PJmPa!oQwYzm1}hQIdT9Wgz=Y^?(ej5hr1k*+FhUr`}8HrVmnWLZ_NJ\nGLZy?pZF2O0;Il{qA1m3_u!UMUUY@n22vDz7Tv2)&Ov&r$g$-T?Ojw+yVh?&AHTpz7JLbk=OtYDP`mF\n1%i^l5Cq~C7l{wGh5?NoSjHhojXT|eS&=w)qa<tMo?TZBi6rl852<ZGXkYnM(2pwpRX<_K-VOb0B_!Q\nBix?<VU^%^l1*u$np=ob<=X>n@g>6F(Cys{>RI#dz5Uw0rTyhG<Ijg#yp&c!D{>CeKqoIG;XQbDD%^U\nTA70qjK1qYxy=ZSMob^9iKIha=)6(1!_rf)T7F<QM5E0Z_eP${nvbZc_;D(w4-1`=tW)PxI@IxK3Hmt\nX+ZKDmi(cT6HoflaTwG80Z>Z=1QY-O00;nPviw-T$ot^q0ssJ~1^@sa0001RX>c!JX>N37a&BR4FJo_\nQZDDR?b1!INb7(Gbd3{w;Yuhjoe)q2shJp=_*mIZ*rDW@%w2*Xt>55S7v#nK@JV|a>#{T<GvK_~1yS&\n)a-F?3MzPpQPJ8c|kxNW4^M`AciUDra@)6u@#s4}`Gx^o>j7RYG0=dy><=3YAtnJm}Bx@a(TqN7YG2S\n#y83n}QHTVRE5Tdv9};Bq*A6k;8By~Uss>=d%uZg004*?qsf-0XJmMfOfeOMP*3)R&9<+wHfz4ZFJ7U\n19Xy_V(s$IBfod(F$8k2nKk`il$djHX|=aIAFSWU5^EO;=qu6VvyG0uESlznBpxkmPS!jNNz2;!o0?^\nlku6ZBZ9v;j>8jg5f%s!0uf!|o74rDq~paCuhC+PMmz(Jg8v=X38dhP?1A(aO7bFHLsqL0E)<3v_|*#\noEhuM6B_t51NvZL^1Mc`<LO>D<8JAf2A)oNlTmR9V#Alt+HF>~>5L($s^4UY36H4ijxu}&kz{an!XHd\n@=c4vARfJ(qx%94!$i3M4uWOYt%w1R;I|MS<hXoH`nb3k(N2<feOoSodPxU4m5)3hfhY#^7%A6bh=iv\nn!EXp5x_FMI}hY#mnk2E5|EbosK$7A_6QE{{>ELDNGbUI&zHO^^Vu^q;>mt+Z*mTNWG2%ScRrYN3)vp\n6S9doxhtd2@NxBC~6GGjf}F|=)OxnWlPS}SuWG7AX7$0(bnVqXV`@`p8U)|SZ5xCkT^iIj-nz;yTNaf\n<Z(Wo!59`=EWwq7Ghc!+%c2ap-l$>pql0B8F`ts7hr5FpvWau!hCz6f$?+h+!}yt9|4_pq<@kPPQ3DT\n_%^%MQ^Jb<i=BFV!F`uY&IE^JuYb=U9*>9271gSlO3+KQzJ`ZbSJAk>Vy-HDIzYm+kL(yrqgvFpcP-B\n|0*~cm2cG@U2IRPi1{vxP?m*kzAJh@>fdUlUCWHREVOSU~4?YojYNP^>lG;$HF4g4OmPtxcgP)h>@6a\nWAK2mofX{8)*@lsxJI003+R0015U003}la4%nJZggdGZeeUMV{dJ3VQyq|FKA_Ka4v9pbyLBPn=lZ)^\nA#hiDj;Q1&rx?T(Mqk<TiRZt2svQ@w_v+tvsqO2-#Z4(LX`EzSa06*o9Ce<-GVmG2(k#WHJTj!6itUV\nDm~_UBUKfUZ_>JG1dKFUE|o)4qRB3e%+A7Me$j0!R1paK@%SFaI^jCYqylZA9DeNg&xgZ33cg;@IH{G\nr(SIh=6h+ac5!S*NY|I2C)1K}k;1$R5q1IQZxdKW}Fxj;XL_<YqMTPL_D~B_{M?<=T&r{`70A!^!VNU\np`lf1v6dSTjk>Tnb)umtK<VzDW=K4NcsH)Xp8K^32To=5BGl)}RkaG$&BQh<AjO=d&$$z1GLK=VRg+;\n$BS3OB#a8mrLdR<^Pc6bkHHMH<bYj{4n-`2jZUZ^&{3SLtd{dgu$Jg_?C5Ea2RaO>h^|<#{#?8mEz@Y\nlm%-E7AJoy~6R+$?LlsLtAh~P{@Me>1O&k6!29Q_&UtN+9jduNX=6<W3qg^RB6ZIuM=FWRQza`&D~2Y\n2|A0g{Az8*jAOa!)NiG)vp&Rs1LI%3IjuPCYPf2B`=pi$V~}UM+_a)UBlNn17KL)GIIvjm#sdk-|Ml`\nONn&__IQylgN?0>p5Q4wQn}Jz0cvCt)CuN3sNOS)*$wKcY`u|W%0|XQR000O8X0rTPm$5Nm&;<YhdlC\nQu9{>OVaA|NaUukZ1WpZv|Y%gPPZEaz0WOFZRZe(S6E^v93SZ!<EI1v86ze49yu)+1UUzc;Cq{$HoX-\nIkpM_7zvYj<_AC0CM@E+PNDqgPvNCp7yZyOL%`Gtay#wClN0sO7sIWxLf@@DA}_^;k%Ps6G4_w*!&(O\ndWcl^Cw@}AxGzm2z=L)99>YUa`dfNlr!9}EJsiKqIw{#;iBkqeUJ4;#RCx%sKOO?Ic1>?<bs%@ZmB1$\nyM`O-@&&>|kRMgeyAHF)Go7=B{QO(+p+B()FY!u+)gXbrA<{FSUSEH^&e6?3Cnu*jH;bHBs4OJGqTYM\nPUI0ba03tvNlG_$*#bL4KOJc~+npo4k1gGt(5M1QwD@YRbZqOu`T%GZOH95MXy*Xc!NVVOdUfYsdapA\n>YP<DUfH(%znt|HY|F9Y+H-90m#OUxaB*J>=Zd~I(p$TpaC<F~J1mk7dYvgk=CMPaccs_GAFKZeS8vw\n3CqmUtOak6he?3UV4@fYgoMSz-cM;l7T_+S5M@sz}8L)ema5()j@>ls-`kP~pPtrB%gnN2)4YtyXo5r\nL+O(yqC_RFI%q=e3B$F-{(yBfC<uZAvzNy2tQ!j>XbrORSP;Yjv=xL{N@MUF)m02fj?0AhD>_^J->^A\nnBzfe)-v3uKks|NcgUrnM1Q#pKF5L^vPHOQDwlC7_;j1051-K`XJj3OjX7Cp>d0piZvm8gLuRYM9PJn\n5ZRtd6Y@l?a(=2<F6o|vOvM^rVQHI6gt&E(thY4%oH4Ze4;E)M@hwq6KQ|)x9q=DrKVJpGV<PnWg%T#\nSK9vlO0&p`<MRq=%%^NDuZTiBLdt3yW&%(y*APWiQKBsqc*ftBtSw@}nJCa544$C%nfp0p620Mk=sX5\nxc3S=)<stc7%`e9`h$BNWdg6gHQOM=Tg*atw6>Wx)c0s6_Q3phl_ofG|VkXHNv}V2xYkihhBTnEhO#4\nj<4RL4tJrfi!>CV9Sm`GlH~6+d&ONpS1)-e?4M;q!8GHX&q3moqk2K<j!~KD}mD0QAQ9p6?F`<En-|5\nj1h>@-?tw(W)F1m$gZQS9VA4zk{A%9*d+l200MgxO5e*2DUJXSU9*ZLpR?pBDgNgaLI8>>X;Oc0mc_(\nbv=RjHVYcax#=2`uZ_5-0)BUVfdM?@Hz9&%9_Rw5%Z?oEakUn@diXcLXLyUzdxwR~t)P=7N+uKj;&8V\n|&+Mx?0ED?DHSyDI)e#dIJ>nD$pSJmA>+op>9a~fsr2=Q_1O~_0yTu=Jqco^02br|Swr>%Db{?LtJ<X\nW!N6ZSjK+nCK{el$~z=uI2ei6B^k6GJO>Qwexma7Y(@2mz@bZIjpM=b|)-l>2I&i^_N;Dr$3C>JSR$t\n90K{7GCLo53?PAtPYsnlcqewtu)G5IFQ{A&9<02DjJc>#px){#`#V8!a4laGF_Dkit82_lP`O$T;5)6\nD=tVQ7kU8WJcuwa<K?WCO@S$o)-iDus%5mADXg>S^?vai4GW$;n}sO|s%}eIstGgnM~ObgWk6sGQ8At\n9)8s!sAf_uT1dE;l>Gl8x1*#788?NiR*bTbfBon;jiFiIlMCWOUSkL}rAmXr8NOkM64b_zw7yUtmE^W\nSMM3%WsEF<ohij)5wrPRECxT{KeT$<kG_u!o6IDdV>JnmD`(g(~synb)p6IK_vxxqEKoi>ma;o%FNbK\nKQk%3@XMFO$LHP^QLh*=zc^ra#H_^-PC%=-SLAXi^(yMB!1eWW|KQ=pP>OY~*vAxOGA0q!i5rW{aSjU\n{a}HE}I%WFcWHXZRx$dY|%Ek<S@0VdaoylX2J(X0+%uM$@t(oSui0^2lI%7iKm)aqo-VLPUcb5h`GTi\njH*ye^>0$@r(3p(tEUbF1(N3C<20T;TGMUflt$^374V!T*)nbNB|JID(0+PO3VUHX&U14OvdQb{wf}n\n9FwUJZ+3FWiO9KQH000080A{lMSObGi9!~@S0Cfxi03iSX0B~t=FJEbHbY*gGVQepBZ*6U1Ze(*WX>N\n0HWn*+MaCxOx-*4MC5PtVxaZoW#0vus`HQ*In(g7WcW<a{V1OdTFXPFH}sw9=dDEhzeNQsnW%MZo!Vw\n?Bfua6(^BHB(H2U0hUP|fCGbPKw39XA$1490)C?9mQ3cj^ciEx)VN7Vbplw(vn%w;3><=t}mAs@A6Lc\n=f`4=(6SJ1&xiaH6C~`9Ygghj8-iwcj;|Jb&L+35z4X8R;wvZv@vopR%pf8EC}JzC@#xNiioV*n%X0z\ny#g$sxkXm#w&kjhUbn-~YcAGt*IRO`G4=QG&+YBIhle$n79Fp-;}QA?WxON$jCk&SX<KOU8ZjvdA*C&\n;&W^hn$humJXV$$mtKAJQy^*O%@;x%A8J%r5UIS=gAH`5o6(7P`&Y0pYGFEIhn@VzP;k~jQR&FFFA3u\nxT2Iw!#vhX>Az#S1PO=Tzt`T!jMKDnb-Fl!M!+nv#MUm*buhWdnpzaH*C!a<vsyD|k2Uqqv{L1yqvFX\n)pb^Gd~kGCc-!Z+U}s5Q_o$iQ+f#INtwL3Pe%_Ue|0i<QC<jfScdoqgJ>ZodNuDN&4|PTTTvnLWJ^eZ\nltcb%(jbTUU}#~v(DG-sK_(G_#XCua%pjCI->0M%Pb+&`-3Nl1Ci)@E`9&*NNPB83ysvzTvFN!t=&Sc\nL1}vCq%z1ZBMoSIx)F-BEG5!igolf^T*8Z~wBpB^=`EUzzOCD5D~A8gSaz@E33Tte-lcY6>X5keX>Y7\n>SY|)e*EB^+Pbu^7C@;<&!wfYgB}C&!Pu3XSclj^dW$a=SqUlu-;1<RVyK(+*ft!YY`9b?g!{RAOlpg\nn_&{<j45vv!Lii?Gh=Bd(}5SCua*~E#!(mNL=F=SX`j@7eaWtW#6w9hm#zfTPLqvid0-j^VMvc%XI(d\n{j|d^Xiq)i>Vo9=<K*Hm-zh2idP@(#dErvdKPMA7{AKGoc>Cm4)X0%&ckc<^D(E$5SBEODYihbQWgDE\nCpIweR;9;cmtpA@9x3z#=Zqhm)YXm1o)o5O*=973uQl0F;QdC^+u&#lti{{Vvw6Z+Fk6TATqz<z2vrj\n;XmzW;Yp86<K;EPZRZ=Oz-jx1+}m|5^O|wP<pd|84murfSD1K1I77R}ud<Q`x5Hr;enpyn>SsR`U;Wp\nwN@`v+9}jZw$3fUm<2{G)vzWsgD!>XwYe~=r+b~BdlQ#7*L#BZet1oA-E7nB3ghr;51QLfiZp^S;JtN\ntV*#yj<Ldeu}yv*tHk;dZgOjYmNo|?pYLN8v44X;jswQ&4dCOT}naF1q2d-St+j~5b~y9!u@p?<GNy4\nwCV3cg*Sf|9&>H~;@8znb&x>7@{qDCmUZtS1Sm7?x1}Uyt=z-!G5n(v1=_lP2Oxq;>^zIJ2zCCD{U1m\nodD;ztC=RSYM4>v#)|!3=_lCv63bQ8AVCnmvP5gL=Kz(08mQ<1QY-O00;nPviw-vpi`+f9RL9IasU7!\n0001RX>c!JX>N37a&BR4FJo_QZDDR?b1!Lbb97;BY%Xwl%{^&v+ent*{VQr11g2&rx-;1A9T=^~W)k;\nIb~A~QV|oW}gH4eonH`E$c-YYf+26kJs47;GMfpfDyF#NQk#)R!_3rnooNsqk-3nRPWp$MEkKdZA)Ze\nR}tdq8?&F@BkYp%LBFU+sJl}GEk+Cq<Zm(-0E>do8t=jU(E-oB0hdiL^sF8-broou*iyWi#IMmKz!H|\n<=!-nDsECdCmq+2y+^zLsTH)zL0VKO`II5#h{@?w2NIRpx0@<o_+>GTF*;&pJ=9bn{)Emu*aIv>L)QS\n;MqZnxt0-_Mfk$ES}*LZ_^?-Fl@7m0B<H5Mtuw2XPbPGahuc|*~Ytldj$YZ^sVK`IIXtZq|9{Z@JPVt\njr`c<wcN_Gea7$S^!z4oui~_jN!jh@N3*GMn>J~?28Pb0f$Hqdo7ZpVuxrnr!KV3o%1^0uSEA-VtLv(\nsix(w~TNDX4p+~+!iYiT<F%Sz4AbRUX^;Wh?mb8i8T9(&&U6r_aZx>iq(L}igO<YUrtp>3HeM4`2<1h\nyxsL`s+i;Vvtw>40stZjgt7q<)rD@{N2_$${%p0>|nl|a~YL2qLPI_wX>_R<#6h8{+@-{e5{u-1=L9f\n+V*YnPxDN-Vl!f?|LQxk=J}+{m`u0m;USpeHDdm^1>q-6aO)KfieO{PoXXvf}3JypYYlY2{XTX=T&KH\n+9}7t3t+E?!_#3E~?GO5-6}IFX4%QFSy4xZ&DWnyi)mzn-%*QC_C9m#aOazx|*Qi-^9E54&+ST04n(5\nuC7{{@(Y|f22#w|ITL&g|J~#um2Mivt4UqP`8uw<GESPft}2CdT(gX;uHAL*K@<bBb_kMQ$UFG`9JVh\n7xxJt62HewjNdau+VgLXs0gG{0X0nd^Rt#1DJ1(nuQ&g*@n1JpEr6+Sm&nWbB4%(yYfLWMj)>Um0JIR\nuxqk^_hEc<N?V-oLiJUco%N{ggvG`%VT6prQL?3ADmg21M4!KwtL9)f*(MDG^je1HBzgeYaJ_6k7;41\nAK!Omq#BRo#y+nw?BxPhs05)%oww-r~;x251*uU6|)DLDCiGO{VrGmxBgX4dZWta70sebt*+tr&qwp(\n2R*H--)DXD$#U1L}a7c9U&v+2Nry=Fl3})E^e++_rdhnc_wM3q!cn~_CR=h(N=0DdyzoXs*u7GtN3~)\n^+Ym@3@+(Q*8mD(gEVr5cntGw#D$Uzm*NL6%6=3V3jYhj@WQl@qG)2IMePj6>wCyR7Yhk+U8jw`SwG&\n|p>TE)B-+)XK0m0<!?90HV}rO%u0@h%T7HI&EY>rz_))y7N_ncr6apWk-GJ?ysP7Q=wnSv(B%ICe)fe\n<i1KKKoKv!V>Oz!U8ZC6X|a<4uzW6^)7xl9Wp)WssJ_Y06`!Q6R~q}X^FG{A^pg4LZIGyr?3T?WuO9(\nRV#OS+<6{si18-B(w#*ezWc2#)7fdEDZx9cmQKPr!&^^#S|N#cy4s3{zl2(3UqS9D(&B5sXKB1`G^b*\n)<ZZ!BT+0T;(O{7P9-qVv%o3SlGhwt#1@y?c-WDRdFqk1xPzvx;2s8Vb(A6{(I04@CUoXMz0s=${q$W\nIe3j0;B`{Nu8dyk9YOB7+lGwP0ARinKfusGdQtx8y`BV6l{bKA=v-DUAZ=G9Agtvla9&6fqu4!JSE%x\nESl?)Bp7-D*Ef(EwQzw~3Q9ByU0*`_7jYfN3${V3<kUMRj#b3B{ju+yHC9}hK;o9Lo1Bs6J3U?V^#P~\n8sxADHrdE2G}CXt@cX)(wqwc$9eefI)P4zUMC>%%DQLJRM=k$49VYDzr&KPTj}6en}k)Q_K@pFe;4?&\n;%Seo@m@-ktuL4ZTQ&Z>6-M%Br+OPGh!3U=S10`?qIr;y*uqd*&MqTdg}>1-l8+>>G0FqO88fcCAq;`\nu59>0(=diXdru`#1}Ct+ixa03`t4gEtb{5r06hSOC~dr1xZ2XE*NeIKu=;(@KwtMRk_YTc^AsBzU@+{\n`H4xC=LGE}YblC+H5Z_CL~km$)oxJ$nhHPVvN%kjFNwG;0#m0&j!0Uid>R0bd^da6EtsgD@xX8a4k$&\nF);XZj0s}P~TF;HLdjV<yxJ;S(JVPmdB%cM=2>%z=8jbBajfyg!fP{y?{;GH7*I&I_0(qQFbexM?)8N\n1UDtM1YzNS|=S;-F?BqPsIxmQ6YC9g8vRZWwxKr8{Ei*+sK%r}T-$sf`Q_p-*CI=!0(H=yVDV=F*uKE\nK5AzI(80c(0T!qEx#fS&v+$F+hpJ<N`P-FVN!j;Z!MEPz})G3P^<fFQ5)Ehb8zRWeT31`q7|Pn4mkgz\ny%uMt=#O%ocp?6n!vA_;t-<a$wn+Sf~qX`i+sH(rOaeDXq8@7Iq=-_V$=+X5HMT^mv=OjkpZ`P2`Id(\nZhD*odI(O$HAfE60w(nPt=kI)_^EiTzFqoQ_E>=jUbwS=D5w->GLRvgq=t!_2KV{cV}V^smVvO<X;*{\n1X?rUl22eC38W3vD8pod?3dg~%SXdY^6t#xU%)gQW>S0OlGVndhZz4&sXDbqJp5-u@`;k*{2%>LFxM1\nj{a#2f#K`-4>n|P|t-2_GOMjBVlmbIY9w5;9}4wIsmNrptYXsbmAjN&TydoS_DSQ-v}Ht(vrQ9RY?;i\nfZ<tCW)_Ta6E}c!7d38j0)&ZMI(R_YRGr6n#@b)(1AObtIPwXXw{>6(5mV0%p{jG<R#b2dv+lq!9<5T\nJnYL&Uz*e;?}?WR%%dfgkq0Ic}@?AqHq8-2S1!Fp8Jk~mibQZ{`JYfJz(yKcjh2D!~T#s5E4|KgW4I#\n+3y`6!t6-C!K4Jz*1bXD2)6NgA7a}qFvkIY|HGn8{?1zQzJqQ)(e;dbX@641j4Ap+QQLhhF|GG?VhWw\nYyR6OU^&MIqFX1_Bp!A=$5=^u#*kxGg^y34UML8QDDxMhXwhdIP$B|eoTj6}|*Hm5G0GEjKr|<syb>5\n_2zDXs1&BBuv02WUTb)SXPNT4vP4}bvM0=wU82O>2ulX`z|kp$+^1H10X%Y0yGr9$GXq`8t02&h*Z&_\n7MQO6q&hjPVi*>+tS7vXAm9)LSg=Xdx9X@Q-*?SKZDfHCsi}2-L<U1A>i8MCxgt=J%Mrmv!q-_}$!sZ\ng!t;Umeio`T;LzU_pthFNoJ;k!K<^o_F^T&HP1{SV;husrZk#uV0b0L^wchtWbbZ5&<)YS)QQ~)n=|Q\n4*-Ul$_{334&Y(A2bFQ5=*hRpM0mrhC@&WnJt066&ISrh4vW0y#5pOCrp-XWOpjrVTHSOmc7;qDsa7U\n=RS48#0YJ%ChjRSuNUkeD_%{DURxaRQS0r#2pGTt|;|I6;P5*9J@*F8*!3;eG=jRHV=2Vqc&B0ySz%M\nMNx&W8{lCp|<+4f0Au*GfT(S&t5h^F53Sr|kzifcDBiJv;j0Z(@6Pe|mUbUI=0m~#NfH2ASj{2T`s?>\n!RFs1(L_qU{v)jRfMbl_N#M0IJ?}w8qlK8b}j;pa&@R{OnwO|NWmL@s`uwI1<N_=R(7Up?zyC9qj`qY\nA_tcZabO2AWCu-RIKGOVhH2HIR%YWTAj=SX$^;+&;IM(*_&5SU%vdu;%`r1J^jnsbEaGj?Su7$bO*!-\nME|rDrp!uEkh!UxWr9_p*2nn?9HGy53L~oM1*mFpX>*K&MwW!vD8-76DprvTyQ~UCzbkxjZ$nKaDn05\nD&QJ=@obGl@6RpSPA$3i*bcyj`Q!6q)YCE%8z+KiIP%)YkQE>-%rk~#Bo~bgU&|-~YYz|8;+G?TVGYh\nm>0xw^4KX*dUV1xGNRS&_)<pWk|VSk}z&NhQC0aFX&y&~JsS_qf&M1Z9g(0CZUr*fLdSe`N{pt5Zkzn\nEHr1WXav^hoWTyPe*Su41(aW$7Uvw{cH^%P~#5O$}8qM|AEsWRG8FSQ{oyW9O;YI8qbqlCM)!FMHuse\nO&^c9O@tRBZ#cds4IqDEQ;!vd+NpXFfIi{AqjZfTI>uY2xtdLqGZ+Jzu~x%D?vuAi=Rhgy=_lLwO)^2\n>G3J_)cA%+W*&7T=2l(v2AbUpm<>niD)rM*LyzhlwZTvDj%K5BBaWUmVg+V|(#c7mY@GKc378zq%T7j\nP6UCw<hWA-5*^1<44f5k$^=2#})rK+QV-Qn^xO7Vp!w+Du>(Y*3cBm_h?&a_??ZnuLkeIbYN3;b&8V>\nqci*;i>mgF0}fHhxS+HOHZk;f&^M*GgDdaPb)vKTWc2Lz$(xXQclr2DMVpQ-gcDz2tNmodNeN;oYyhW\n-`7wp9OmWf?=Vbbbv4lsCe;9B};Lwa;sJ%cYmTof{QTJFaL?lta22cu|FH<<i#6WyPkmyE3Lmf8u}%q\nF2X*D2Bby^?qOv%a4ssDo$k{n&rk?pQ{a@>#cHG;$W?HuW)g`0Yh`aEuUamT89^m^rBY-=D^P*@!DjE\nY*V{IcWQ?zxfZk%nzf)$l`Z{UG#KJVsgm$%UZ>p_Mkz57AEF;bkj>d8t!~PqO0pT4_MraRksS<G%S~4\n#wFvV_Mj+L|8dg<+GhvPbpcO{rHZCM<Dy991RzKp%BYx$_h!+*>VPhUh>#d=!uuJNmc8Q~{-HmmFu@E\nO&q{8H2J@n#wtf&rgG=3cZSUSJPjSq?d!VwYRQqke)wPQIg?_f{iht0dZ-7g7E=BL|oHeed^`-iyYhh\nuzdOfU79d#~(PJX<`pw7!2M91RVnp*%G&Cc8dVARGL+iBr>m@Z7WBftRoxKJcT66HE?%_|dpINIB&O0\n3Oy=Z<upgqI1SVe+Gh#hzQw2#;c^sQyM5_Vi+{FIT)lYP@tx}NPQX8AIcN$>Zm$=FxFXiIGU$76AwXa\nS=d9z*(bH={KV38Y$+V9#i<I9!J$=~IyPAkKp>XjZZ3i`AhcEH5M79}c**@Dm?{Iu(Dvf=2QcJW6n@C\nStaj2EMk7$>BDeuxQI=_iB_PY7YuAfE1v85L`3J=h4ijbFb{7u80}aeU<g#7<ajsAGBu$#<T-QClQ7Y\n;&o|S60%`q0>{w<jUL?V9kKCI2Twu=CRm%$~db?cd;_~3GkPW+IfQ)=!m+wbuQhEHIjo^?#@n{__Pzd\n-y1KU2AmjzB*iri+}mB8Yyg@-hUv<1aY<j24<xAwlT_Z{{Cyyt*2Usk$_08(qVAXwTsXBNJ#!EJr9FS\na@LoO$V+G2k^vy%00Pw<I(9@7)By70s?ao<+($6nFdU)wTg@OHRx!sC8a4<vC25|-55WQto{ZJz;Sdd\nkP0P{E@sN&)!rMI!w-;?)89`>kHi@kXJE~gI`W65B+#)dsLYn5>S;|GvPir}Bl8A4=s7i<7*ciDCn?m\n>fREoNYw$gOPqru)l&GrvZ0;1HPK>I6&=oCMc8@9txgev!4WH}OlT*D4pMcE4%A6R~c-R<NQ{|^rb$Z\n<N`>DVmZxG>G9c^}w-}wN8*~;o;aw>lMm+zhotlYaDS`3{HT{^$U8kWQl8LL1#7h{I>nJ2f)wCI|$9i\ndl#-FC7t97Jv|U7+K+GPT!9UVv6WAx;nc)__^xS6GrD<^hMEggJf~7;Uy*T#j3~L5!vQ^Psf^*mBo86\n{;E?>7IyJ(cy6*E*Os8Mc#T{(@p6ScC_foL$&qQfYC_1y*g_LN_$%fFy>H{@gwjlKYy78XtHjTL#k)4\n^+_F3ZqN{yyXqOGXZAaJs*LPAs*?dWdqr#8lBg)0Gw4-~;hX_^k0W!$t}1!MbruLXWouPU8yc;{?3gP\naOjj$?J2-1Tiu&S5v5>FWW0VrYk8SxXKg2DkwNf;`K@T{HJwy9Cj_K6~l%r{xt|{)jg|<mNKs=w-v#L\n|L7{?ee*2M+uL06qe#5kf!9$tYCSV>v-=}0$Z<EbRF0+hbjQ<kX}SO)++Sq+cP>Ytqr5qBOdv_HOQz!\nUi}7`{zljo)L+<hJ|?ey%`%EPVlFk84R-xINV~g_Nc5;Wvs2?Dnbz&U8?}56bQ$U&TEw(kc1aeim;)L\npIX0H3-UGVY>&4@49RE*$SNxyDdS+__2TCtp>~CH6fvcv@z@F4VZ#>629rcRH*l8i}~uI$zYS8+By*_\n)`z#%V5H29q=hx<pM>J6Y;=Bv?Ll*N#fA2`2a%uSBJ?4{4|2cMm+?eN+v1jhU<=uC95~z>{w3x!yo2g\n!3X;y}FQfP==6UOU)p7kniRg@S4A~>!+b_Wg8;h0kEEjg4$lTaN_c@>na$c)WBcL=c^Rk~|Jh{R>4UP\nT^cOnD8XL+d%&lqIX+~MeMq0k<FHYeTbHAB@fevb#U9x&-T_-qgNW${_{`ZBhPrsF4SFngqNK$r<4N_\nME0L+moP1uaWss_2KtBDLyM$9_}Hy!N~4+ER+IlR8hzmZQhL)*ik$>9g^0!zGzL#nL#ep3wH7LdVF|a\nC><4<*gx);BA+tAb9bhuI+_S#y#9AeQVO+R6ODJTe84Wn8<Nl0gR;^$_vO95WY5oOe|jfxD-!ZENuZ=\nzQ-e_Y;asPF%2B6H{*rUYfsj}nR_z!en{uIJEH1FXu42AGe<mdeAu0D<a|=BhddIito8PqhNQvT(P0L\n99A%FA_*vYKGe(rBTx2-#d{~Avfe#DvVc{-CYLOoY!CKGFLYB+y3x;8F;h}YL(V>Mo0b+Z!q*FIdJJ+\nd$Q?aTljzW5FJL#`h3hg2b^IrKx7@k>GpnrEAmfWq#xxf?q_}#i)hl7TixvWv_Q=cm-w$(Mes>2cp(*\n=zNG<yorQLIt_?_uJb(v*e6Kf(a~U7x*1#S{I$D;QOw2KSBB!@dy%KWM}cO(P6ayDjjE%WQ7_jWzecY\n_O56wUpiZ(4al6GaK^++V7V3g6}Y=HQ0eU_0sRK3e&Vl43dEc5R4hSmph&v_y!2D0rH0*g$h!$ZA-I3\ne!C%aORz{W>K=2N)}MBOIg)Z8Hh6tt-8N_phZ!NCf;z($U7RkSTzWv&A6>6Bb|IOJ5s=sesx4Ffz>c?\nVFysVO&=0L2ZyBZiQR)fBEJ%RqI23+#DOX?2^0*J~GIXXkc_JoehH@^Ap}egQV)Ie|=>!XY1~`~*?B9\nL-Ol}!|EUf2Ek(VFth;{sYV~mnC09*DJd?o_Hj5s5p%jlA>t+wDOa(T7Bn&+00aGb`RA;A0Gt|cPG+M\nYYW1BM{1Df@r5k(OG%!#?ueuu;8jYbi(lyxpe#8~jvwPztd*9?WBg(&W_Ikr+xUDRD6$B5-EeK)#^i&\n<ZjUE_L2we0Sz$Z|h9PU;8zCD$2-0o45=#^yT%Hk8q~X4h+<jvZwW1&&eY8EpD!`03g-2jT45B#5t2U\n6$vDGJfZ32#05yeQpb&Ip{kWm#Z}wxn$we$4QP&Th0(5)-F}yxK;si?+MJZ~W^gpdhZzc7_nUUuCFNb\nyFJg6x(&_l})uF>lM(&i=s;e{`JU$X`0erg9O-}<qX6RWBX0<H~O2KkJbFjeb?jwmKYx=si&-=I$ACf\n%oV#rtE+QNaiKtpMxWojq6r+qPpso=^g*=XSL)M{<F@?YYkq777b2-_o5=hid4V<pGn`BieA<81=@<i\n#24(6G9oVqFzQb%R4$5cKprMOb4Aq+CHS4%I`DDZ%~Gco=`?3XwMXAl1!3X<BtKvuEve<yoH=YWTjQq\n_*$v{3l`3@@QVYes^|?m*gNE4X66DZda&;vcMNAkgD>s%?ZhyXxDo=6!hbqABXe6v{bC(Zd4z~v-t7C\n?s|Fgof`?IC}+Q@eq^_sr)tB*OZ@i9I{0jl@I{!Qp3Z4E;&VUq#goe~^QkN-Ut*=Aas77sD*J~|96D4\nm4_uHTYA2=6!_iAG=k!gN@9ElHYqqaNdGL7}(^jJO%bZS6eBM{x7Xhp=nSB1NA^$=<6`Ntre%MtVzU?\n@eo5qos_LBXko0@g$t$WlTYk5of?r)@*vot$0*-TGr@0hnSAaNN6@c&>^%~&FmgsZ^j$3+o%L$|{xw-\nB(hWl}uB3pRQf{8FmmE_K8M1V?BU9L|ej6ph1DI_=4zVI0MOJc{3AEbY*Hou~4R%^9z$-ehAKea^h#i\n}n~q1eTjXslCoQSWgil{9pfwGIjku<2JlY{iT1U@^$<VKjzI+M%aZLLYfbvMVD$HFxIQjv^3^E_t1mL\n`2c%_5&Uv$PwSle8{H8fW-~|B(HUS6THz!)^hg;aLuJ=ANlhL=bOPJfsu1`~d-D$*zvE_hi1jcP-a3?\n%G9A+60JlNVU%}R&$gc3Ru*AJdl?!sz{dReYhud{{ntAla+C>LSO`a4_OD9>DGr;U+@Re&B03A*Crur\nyMpyEAK*a-k&&x9p$USNWQtBDbC8pr@OH7X&BR-teB?aidYHGWnmnNe%hfw@3IWpnu)4D4aY^=cZq^e\n>&1A%lnxdy9~7Fyc$x+v*c|rY@8zU%G(xK6D8rT_Cwp3w$K%L>-*R@=w}Kee3(Ne+Q1aDiZ5lfC<to1\n`m%`j@s)iAO}`M3X9ootQde2$eCPqn=pV*3zuLpD1-K2-s<dkFiJ*Pg(vx7ubdkUCW~6`a<cN)TMBse\nW6ZG86>#}>S9o2R{+==C)>2bpFy(1rdf4-46o#qvJJ;Ts742k=h6j*=S(Ac{uAAmth8M<D@OcxeDEK<\nZ3q~c^oB<*9@J{+qE&;s1_vZH}uT+6E$pm&3Y*K32c0(wsuu6|iVLDY-aY8l2D#xPSI4|q#2_0Istvh\n|M2@}PMuJO_|YTr13mpFKminlOE)=?bS6pT^vm~+<lAfG%^Qq4k--a}cUI?V9EN`-ezBzTg}nOv^|Th\nj&9XRn_A`Q=$m_fWrm0WRE~*;}Rwo(=5ARHm-a$ZlW8jpVJR!+Cu676tqm?m22C^mFH`bERv-$EwOmw\n*wZ)vaeSfYkyLl_Yian6D|^{ascN$hy^t?9a`!QyyvW#)I~M+WGrv=j3xRU#UzghN}l(ijEy<wL9%iV\nRs(S5fv!cE4^sc9N(<2ea@!)J{4d!YV5S(8<0tZ!=<kwH^ijKewD+Z+M41&WT?$>LX;;%9P{=8;P^+s\ncK^VxCtClK#*)ng7iZZyWm|O)br~63!P2J2)V-YmD5k-i+O{MP(!V78>Vb<J_r+t>-8J#__T=zakqnN\n&5ogxd(i!M6daGx3fR9M91yaMco1ii9c-O!dhN~CY&c_iNM@}jkuUS>L8L&ix$7gEW7heFN;&ich)ES\n_A7KY;TG?wA?21FCLF0I$13-8E-!T_zVywG`nK{l|7Zf&?H6|2R|S@_NI2S<z?=67UiINjvmI=}UC>6\nzd#%BoI}q3&Id`EDw67BbN*UUE|GqRA1rUbCWf1-=B)M2T%o0LYxllO#FeRaApF)L(cJp81e2HUx;yh\n%EGr?zf&I|jwjMi!v#l0b%Q7M$F1E+(4hdULy5x)CTKf|ekm=IRkWok38{+po_JZo9-f0tr{g-Lp#jS\nqx*ACJ-tw)tz=nVP{ySp@n|bwLE7QMmcl^Zl>h;;Hcb;~bBXJ7y@D)4?-Pbemqk&*H!Ke=6g1^3a_3o\n6zx=Lu~o2!=9Cke+Iyb->n%C*-5GUwFAye8&M{nTHp=n*&Us*b#B!y*#@s5<ga@PMsAt%ZU-_x(AH0L\n5j$H~g0qhVkq`XNK?~6Q+csygE_I;O2z8E((BdfxFrKVzHwl2&KjXClnN6ZRrlU>kllJ{ufY70|XQR0\n00O8X0rTPX-kh>unYhI<1qjL9smFUaA|NaUukZ1WpZv|Y%gPPZEaz0WOFZUX>)WgaCzlgOK;pb62ALa\n5E=xQ7HwhXYCv-sZzdaTFbOu9T`UYkVYk@bjMbu+lx%kf^WV3MFOhn*ojBRc_QCGvqgbrxS0(X7D`ZD\nLDbbv9^Su_k9dCALTPY4iv|UT3V#H4Vlh!>`X0AK7u+GhV`1iY)<<;L_Uj6;`Z?9J56>FHJoscW?hO2\nHx-nJbV4Xsz?J^N43nhjf#4}Dw1zYSI0nW5S8HZSj3Qwf>3baP9QmAvnGt=vHy+K7g4Xw5&fvY`idYU\ndr33Xb*co1fufyy=((zVc1Y{Sk*sXm-`Y!kjl1dnh;JaG*`)w!Ox|S5oxtm6=%DtvcHE3bt3wU+ewvS\n646Jzn|N}9yZLd;}%=`FQpW6ZpVRjw4xn#>wlq&{T0+8`MO6!E3#u<$(lPZMRQ<HH%kQAt5vR8%{I8H\nY$e+c{JP<HFv=t<bXHngcR5I^rJdWWx~k^uvc27%*mB@%<2H13-Pg1OTe+9KW2NZ3wg;Qx+t}_d&j@^\nGNNRmqyI|!Oe@aLEof-XA4=xdCSa&bvEl5L!2KA1&@6E`W-npr%Qlvy#|BH9~H^8&%UN>8jj#ZEuUh$\nJ8$t!-xNVjLC3YHMD{sb~6lxzfg3K3hv9y&?Mmb1E2`I#s2Vb8!x?|EI5H6yKPwYVx$^%8yb<44ptNU\ng%rH2e55hb<hGso+G}9SNN1i5=)I*d=l!fqOg^zoWI1L%-R>B^d?p&ch1~tkn9>rS-f^?{lO1Ew33w5\nOxXHAkFUbofKe2id85mMG7A(u4g2Ab9Q!yu?iGfxS*B8HQ(s5wA8VoEHhYUw1RQSI!-!qRjUrX3I4~m\ngg4-*bq!*)hND(6wyFCHWy&fJW?3_*25Ux&P{~LQ`(Yn%P<f#F3!uds#XHoq0?UC(AuA_DFF?L)gk+_\nJdvo{?@$3$6_d)hdPxlH=fC0xQAun1fcI4WIs~b<KVp~G1s<aa+c=0wP7eABVM8gKt!{Hpl9j;UPup#\nv;G<z2!S&c?6oHdPRs16E6qB^`t2b_-<0B5wXyW&?`D;7`fS=|<imc66yMITVfzL@=f%6{K=0#Eop>^\nth;hW#-Qz`nD-@58>MPQbb_1gZR4{MS?dYXKSjTQeV@t515pHBJbbuIp)y{?zRu6YZ%YyIQPi4aZ{8S\n&>SRMs(VBNiwBmR@cXiX;{eP<=Jy&b<ry(C-+uek<3gyU)^t;`bbPV_16gkAIJ`my@1HYzR(5+5S61y\nOUVEGH2VsH0POf*7>W+;Xz}bq0=9vmO%U5v?2gr<MUX^nPE$Gg<><~>&DjcI2O?0ih%^*rIPFY+`w4U\nTa`9}1Jkaixgl4Tt>tuGX6JD|rb$@8oXnM0392}-dhk250C1al%e#25C$(|;2gCRA#uqJ32BJ?1d-6g\nRHkkqo2t%x~j1<6wvE%}`E0Su9Iv+&$egsK6Z8^96Ra|KAL+v{_OJVuOszpZlM%nO^$zamkho`6ERKp\n_a&-gR|wLj;1ityl{M5dbI-Gh#afXkwrK^7}z)f?o5qbhJfpoV}z$RjgbfV=nsAoE0P|a|r|2jR8F`P\nhD6(o{?Rjd>a>Uo_ZTY-gqYB!Dq!{tF|y4n~D}U0=^8^V=-XKlsg2>Au+Q_53kJWx?3Q}resEQ1i`Y4\nsr|SLj?TVhTXfrOfW3PN+chg82D>7p-0a!rR%76mb#rxTdl@sJ7^+Hl!67(EKjyIAWuzO`w@`It`Qqt\nzd%$S9?s;96aaEc|BABp?*H)&mN`~Uo#4LT4Br0c<sLJ%;uOvfoN(ZAe6)|lA@U@cTWG5h)Kz*q3knM\nEjv($bdZ|LWvuhk){?isy18oiQ(sQMbqA_ZTS#aFz!0|01x8uy|(??}Ty%IEAb9I;r&Lt4PRA$$e@hB\nvoYZt(H_PiX@T<torFhZBqVuzaH>nOdcIbrrF;jg;PD6$<fJ+?Pk%+_K8x6O^>6`-mAHfI?^sQ4^+^?\nZ3qFY<kjaW*+_`O$&KE<2j7YrUuEnUN*6`oD?GRvEYjMXUxgycE#xTgb#Ec**EhJy@K?&gI|~zuT>{+\nv|E4)oOW=;dZ#^HQVz-rTW@Ld*7oHB7=eU_@-hG(;6rQPuqsaiaX!XM0MkfOc%bztXH!(9ae}4f(a~4\nKqTvQXI?#cx^l0B@pQ$gXTL8!f=)FsWUSKvS6`QKmDB1!6P!n>PP8z~#li@{4gXPPZPQZl&K@dtut)~\nQ-yN*#WRb86Qw4ng=R#~(ZkJgpbsK=Um*8<sOIaE}#^oXns8-Hr5K3y-DSW|cp)kCYvO03u7g*Y-@=l\nfUjVmCb9ForcltQgNs_oBWE{IeRFk^6QN21*oMh<nMQSH^`5dfjrVy85Wqi%m3)pcu^2a{@A3UW1GgO\nJS^w(eOq{2{EQV=Hx9Hyu3#b^7$|z0@ih|&*reT<6Djns)%JxmxXJ#p&(<T!~tQP#4%@EAtlk*6;d*M\np=<TH8SI7SbEY4PAU1yw_X~r9#sW)+hUL`xW<t*6)P3)GhO)P)Iv_nCL+41ll_#0js|_mlfC&Q)Z+53\nxvf0W#T=Cf>y3z=7od^q)WE0@7@!HEV6LCO6f1id8gN@8>b%1cpl(ucoA>^o2H?|r^N_pIhCqJ9fyHP\n{_CKiiV$N!61Agw+{E|GtIZ`nYsDsR~l{p62P9vUY*SeoOPnIvSzHi<=k0c&wS)z{Z@4P#`QVbv4Xh<\n}Db+Sd?}#W4UwFcf!;RDD|me?jYer2!2lP{Q>}s%wCN6pY<6;Ke+0(pG_wh9F`#3Lm6EJk`h~^x9FZ4\n=s0WVR%~l2Otc6Y5X4u1+4;xaxYjdRoy;;RZb6o2FUY-0e%y+@Q==~7w`sFtLE>`U@=-i+CgktX-g81\nzA$UK+A+2SQw9~$?om-{iTLU>h|Eqbfgq;v1uYDvFn6CA5ugOzy8`n9xVfB=$07z4SaDQ8I*nmF$A4u\n!X^cJAb~YghMu8R(6hqTPjp6;nn0-(}%`Tj9cs;ueKYrQb3N&NCN<ZI-s4wobxAH4p$jiA3YQWj;H)o\nS!b_a$_O;K#+t(!%jeCbzA4FW&*;gVKCF{73#jGQWJjW##Pq8PZ!@iA)|&!@4VX7xUz$knJj6n<=g!3\n9(KU_k8HkY+}dC;4WPha78X)Y1K(v3i~ph?n?WSg)A2#2FO-C-*57|8(DMx*T2X<R<r&A9lgN84+pu>\n7>7yz7DiagWxiR)ogkto8nPxXz9zEJK`G@!NC~87U1PK3F<K?Aq>_p1H=yEGiNjkd8nxAVO>!hPEWeb\nY%x9VCb%a!Iz#)5#i5;cbcGE)lOxP#q*2<<kD;y;$la3&4_T-up414LLp`%b;;4cRuLYEDKNsYuc|!?\nbIGPV*_(@)<qIjW5`a)&c5kSpIdT(?R!AtwAw(ZYZiqp8X?7$I!mW|UKJW;^<L0)`jbXH&qxOB!0vd3\nJ@>wn~8Xb!f4=eu|}&OU<9-jaL$K+Gcp*NaBe)jfkta?ebs86jsQ?)3@<SQ;OX8EyzlOoiT4vqoEJ1{\nKtgQ}3|PC-9Mkv*5weZ+9j3b($SwCpZUP-o4Fch|XbZY-LoH#?~#>STKJgL&1TLub);VAxZv8@Fq<z6\n7m=FpdIBwmsH487BGP`kV3Tw4YW?!0W8LMtWe7{!Qsp@^|WxQb*bM9y`E@)_#VHibtRfRr)&2(!@T?0\nfReE%)9vwntzKbkN^e;oA2G;0I>86OYxi&kA9UOI+7gS5WZyJM!Ph6nq|0(<)i+)`2-lpHvj?bos`NT\nBs25NB07*2tv3lB5HFV+NAle+$2j96Hlshz4`8M7(Ig++m_@&9q(VIWS1uECHel&QF2)-Hif6eySwm~\nZ0`C7H03gi5`paV|bZKD{l1#dr>jNpr#XaN9T&`8dm+|PAoxN=UWUqZkY0gVy%LB~WmGgO!mLVy`$A&\n9pAr`>lGHQ$!iZz;OVgR!TYRLn(|Eo}%FJLDBN{uYd2j*eSaI+*S(0lNap!ZVEJd^%xsMD1C`TpK+My\n*f18MX=t^IK&wMj%o0U^4U`YmyTPYuFC}zUB)DcXeUjc1kEV993}C1i8Y2qzdxHs`F&XV=a-2UnYm89\n$KQ}51}jEaGh4j;hdq91j)i&Cx5r1ut_k`ZjvQfmx3m7>4)Mf*ffmi&Zd_atUTksE+zl5OYi=JuFSKl\n=n1z<D--@dGL#r&j_%BdP0|XQR000O8X0rTPRR;O!Q3n73{1pHIAOHXWaA|NaUukZ1WpZv|Y%gPPZEa\nz0WOFZbWnpq-XfAMhtyo)c+cp$__pcyS6p&V1=&<d@n+tSlx&_M(wX=0_4VATNo2yKzB$dPq^51t3FO\nn!J?aLIvk;!xCcP=zPl!eqJFLpaFb|Y@Ts(qz-UVl3(|Ek%&zLT`{-|r8(EZ6Be=S=9)Ru%`cF7lkMH\n7|rBj_OKom}HwbeC=q8QkPUJ<_Z3!dBv37)5j7l@jHvZuTQg+-%n5eIJ^99Oi;v_oO1=AS0yT;`Isz@\nrIT(&l)Ox{TP8MzOiQ}{OwqUWmPrK+Ua~cSD*KYT-L?cSG?SnJ-Ag}FAX*oP0~H%D;>3P^ibb+7U5+_\nZsKqf}@Ov(v;#QjKN`Zh4s{?s?m0i4EKse^v+pC+)H)ArtIXO9<&xeGt`!y?rb8u=;r7YwS$AM|Op_+\nR79n;x{ZE2P3jEP$=3vsB=xx)%(<|^f4!|px%_3`>_h*mItSIEz)1y4=Q%lBqsA*oQfG{lRzRH=ijXG\nN_-XR!J-%Ymy})t%&;WksdS3LwL`A<Cws5rJo&Q>BP8W?RSu+x*UTTq7-+8X|lIJ+LWJTGlJ7f;h`#x\naa_;rUt%C*jkN7BlLtxGV>XjLd?(2TAXDlIm;3tv&PIBmFvAb#n}BH4}r>=7e$ffA>e{J4`TBHAa%Dd\n0RO0hz@9T1vR7!z0W!aQshB*zN<oB;N2P!b48;ZO(eqLkJF+Y+$X1@k6Y!lVB+DQRDlRd>#4WHdWW}s\nNKo+5!P3HJx#qw=JCa=h4Ay^Y$Tu#>qL#NV)A+9NmrxPBHJ1Y}|#?CTilb%IGJBa>UDreEnyYn8CNrD\n+hFfE}#WtGfBl0D1IS@bJZ2?G42*h0AV9?H$N4LCV7sS!I-<hgrETB?#!=(VX#5|Ro&wR1b$$)YObm*\nX%nNfT392@}gPagm+6`Z^|5?%Mb>(S|%}f(^MK3T^2E_ax=uS-XJ5(FF(GK^D3b-XL3r1%iNngE|9<B\n#n|<mRSK9poV(UM0C%!f(_%9WsePU?M5TSk!qithBvOIw897_;J~2>WOsa{_rQbLYI_U44Jz#hYC*~s\n)%qAGq2oOXwl`v)X7!%p|FSq)zFak$O9_Dm@GCfD6{A_>j;vYuHEEkw`_efDrYkAxqTgBWc83NME}j+\n@CaNtI^l)NeVYac-A<Y;o*=p6o34$4u00QE;ZS8L(*i<Edr0rhfw&MC=oAdIuAK3a0A+FVqz4#;m5pV\n?)Njhf|>h85H?vHKeT20c@d<<jlK!##H9v>nsm(i3sU`DQL`jtmmDr5`owgq==dTa6@1`iXAX{QD$S7\nyWVhR-&7e{ufq`o!cLR59S^Ib_`uM}#SPFyd14c>*hss}G{RHrIg2-D4EUO}>@n&Y*@4`VhmG3z-iSi\ndZv;?HurubP<VL(7h0Xon$rG9t2r~z9?+I(W-80=Ko^Pj8<ZMJ{~_;pqb|Rkx;t@W!U%Kl>EiW9fj&t\n?-?;oL*$U(+6!%Qf?WlcH!gB6SPF_k4>U^H2Z#WNk<&Fr=z>78A$N?dsety$(!hMLcS@Q7^gIS2w1(%\n{1{ixe#1B-Eutb<<KEuVOMe3?MlK5Q@+=jqU$Bw{#jan5Adjl%K1_7$Q{pn|RRNboSH<!qPUOe>R>~j\nhKjr+SzYPq)o8h=1Qv~=&QknFKZ#aywk*|=<^tx{T+aC?Z|N~=EM^9&=Q5d++uJ_KyH$9#0;W58gU(>\n1Guju!y61`Gvq__hi9%nR}NkoalqI-wqNr9NJ)zV_Yv;PMi&T5CveP1TQ+#HFfjT^pduOp@n0HIoMy+\naj)~T}XMV!D92JGq>4M?}_V!Lovz+BG|CK0lrH9sWPJ-DzQ`$Btr<HM%;y?p~={0`0s+y@usaPJCl0>\nY~Kjt=<IU7czu3;`esU=D-v5K7}NrBVd?C{>l<RfD$Q9R+)TY0X(<OZ^|TFA;1iv{UYyPsQ+!A7K-@&\nKoWbP!GjZn~J<V-{{t>QNo|sG~Amd{a^)u8z*7V{1zURZS?0FbE5_vp^DE0%G5!Y%uy-I71GdHevkyi\n&{r?P4NGs6<Zt=t4@iNpErDauZ2xCuKf+%_%i{jL#+{t)?nlJ3NCp!a<YEC-{SGZD9XMnYb=rLZCa31\n({Cl%g?NMiXF2`e%qwr%&~0R>4Xr;|2M#doB7u+a6wdqXy*`Iiz2Ozv6SdFLo{ogT)FT4c8v1b^gRUY\n?FawosgfpH7yYGihTdFpDWJ@{zzx~jxCRMAYdrja$RfgaXPvTCmnOgazFT`_!0Y79N5r5{3hyg^g%>$\nm=XMaN8-MJFUSu`lKxY05eKSUJ=ZYRC$x<oaN&`}4|eS_X`LgmHZ+cD`p{GR_y~c0a0*)^aqkik6daT\nuI{VE|*%T$u;;sZYg5%hJD$FO2+TGzq`N_G9$$=k|OpSq;X}if|1@N?E0#n*7=qJhOKTt~p1QY-O00;\nnPviw-uo`bFt2><|79RL6x0001RX>c!JX>N37a&BR4FJo_QZDDR?b1!pfZ+9+md7W6@Z`(K$fA?QOs8\n~b-WZmvP+=Fo{(90%!!S>Q1Y4;wCKwu==(MFcE6qVFl-2Z+v{H7$khck-CCg+>O-^{Q+^c@$Z>Gu1&-\nLH1MJCLpyJ>>%<wc7lRHX|F<o;dbEXLf#JE#p*lJS8^*zCATef0Jt;>p`UCmL6F3dF*lTQ!nbSrOir7\n>+3!%URhgpJnL!sLeYqfvp>d~vjc0zU^Lydue7PFd$)B?!YJy-vX->%+PVbxKUvX&F~0J;1#7{etZeG\n+i4LqNyTgIDmEpcrKToj?f{JkfrixjGSNHdy?o;yc<?{0C;bDpMzyz(RpoZfgp!jD97O$U13{Xn;OcW\nK{(XkN)YhP>LwG*eUFzIY|sE5*sd*iiWMK_9m6sr}UE#o9Nhn#`zk8&+8WIT!@S*=!OLx+JpJa=!}<y\niksHY)<3D2n7?q#$*>>-d49t%N>-CepQxbetSI4tdi;Sek}aL>&nmvX$ih{0v0WEK)<bT5^AVxrTuEO\n-)-t4zzB_GouxltK?@^wfr&;APhV)wh;0|&$~U@b~3MqNAh>A@jc11%#hXl7R)MiUSYbtf{@RAWJ)Xq\nn$W5$w3K*Y%`PG9_v9A5+GtIL;Br<TB;AlXhS*X_W7oSVovf^Pb;E|qGGvU%qoo~MqS!nd1ez_t&Kax\nBjQpB50}HpFS<~l{JR||p-i=K|8b~eD?Ywi5S~13i(el|GQ|75jR-xY#5qJh77#G^{V$Zv=kAF<V&?G\nLZd~9VjQ=((L(P)wq%J=XKAz}-O|0v@PIqkw-??~GTMHjfJ5;}XMyoGd*BYEF8<gQ_GjR+*fYh5uyja\nLM79CH)@4q220!Z;HnZ`GZ(8-I+9A0b6hw~GU30|b45^?^}dJ{Kmt3%m}oWJ;#y_Z*xmG;2IjEf-UHK\n7~AzT!$%>zf$tb_)|A9yR3h^Q`&sr8NF!W$lUbePFa70wmXd05;0aA0tX|1f!YD|yM?AJ<>hxPtf~d#\ne*y9Tot2_+BnI^5Ij@vS@+SJ{@2^+I({Z|Ga+f=m21SdRdD6prSHt>L&M*R~@uQ=C?hdSnIJgz#!N{8\n#I~~Py=h>is7Yw1x3r}4#xF}w9TEUM+-$5?SM9QP~qGWd;;jHiyozAxD{jv3U>z{5aaZLUH7=rmP6hM\nN*RTUH~rmQXwB`U8Z4H>z^R1OwpnxuY;q&79+hGP{CAt!@E9%7J51wvKq>mF*K^a4mOEW1L`Onem=ST\n_*b0_(^{#`gO)hUP+{4+t$G62~lXSV8}Z>Kbe0az^Lm8>-1{4^gO#fr}D8<rgprq-0QZc>#PyU|F2}X\nJs)(vLk|QXI)8*|0PnW1S}9LSyYlhc^|Ox0_=eb&nkx`TS;x$QqsTdk@wHKS2>dUniGU2q(Eo_D(k7z\nqR<OSv^s|_Q_R)r6@x?+wd=;V+K?Zhk`eru{SK)fYbl9W5DE;vI&;{uIUScH=WqftbemZ}B$M0pl``F\n(Wg6Z>XqAU%@L?MvyhV>#1EMdtzutcO_iYrA`zL8blD*1G6^Hc#g5%pd$&8S+CEw=9TxIT{@qQ><W$s\nk0hfbEYWzB5bsAE|fE8SVz1W_mJ0s=_0nFRw9$2zukY>$?ZeJxop$gk{p#W^5cAffD9QMaaDT2x~1@j\nOG#=N<X*+SLFnP-h?{g2@&z==Nil?K2=?M0CWvna~>Y7eJUKn@Rl!0y29C;K$jRrZfH*cFZB8vZi}uJ\nlsyE(V0&n-wT2>gwwZ)F=?nf`F?b<Fgn?%?h@*p3;+LI(HghWyW78fh#t?F=$E)cu&<bM(t8dKy<CVR\np9Zmf(u?`qz&(?g4UjmZsatUJg~?bBst2CAcMav@wiDNgOA84-(X{m(lZB?hBQp-@Jc6bI<AJPo01E&\nK9uo{U;n-k>F4lNZg5=JA@MeM6ow`%yC5#;?^AP$Rh2PWwl_9`k5Nj47x*}MAx&H_VzI}B5nGR{f7Dx\nYtjWzBd<VUmC*LGHcJMRF<F9w2Rc87(W3asWhH9`+SBEu9B&!Ch*9UxZSL>|ZP3tE5?S}p+)GW4vh!K\nWjk1G&4pBY*qrPo(PD&|V1W|M-rUObtghYpMyPyqgIB{0w$M^{Y$r2I2&LVXf+u?v8gi(vgbc!$Bwpu\n?RwqSQNCAGx&kkqM=W$NhN)b|EoNYqZHzLpkL*${HJ8b+v1Fjm8DW5fP0R*ff6WJ1KV{?6(?{n`vxKr\nM{9L_ZlTZ%Sb+O@u6Mp7Pkd@j?w#h`ar}6hCEY%u4?j-;BQGwUk9c(93=^<nLC6*S0Pear)qHfj>PSr\ngI+-+8FRRGRFWE;-Ci0Wxk77N!oi2gykee@y+la}z_dO)CgObv0e}+`k*(ncT!>lfO>djX997Qhet^$\n#eR}Wu#2qO<_RVCfzHA5#zZoY)u{?*F;ACvbKIiyXrevpexO8uE`k!dZrmRR-RH{trIR+kw3LX`VILN\nfI@pdJPMwouN83r`He1hTP@v%y&SnCe;8JU(p5Q`a?ioWq9(vm_gE{2GprY9d4^^&bS!O_6F+2xl^Fc\n_ICfLzk@Sw&$%=Z_FAGayE<usfj-hOohpJKC=x#Rg?GR#}JSF2UEbq^*ZuuYq)tU=RY~<$SWh8`4hCi\nnRf|Ct}oUpjtBEP;W+f2ImKa%qR(S)%PFQ0`W3@*sGL7fzt*oDQ!aH=PVs&;Zy}CN-;$FY_T|W9(Q84\nIaUNQ+p};m|-i-z7X4NLT(h?24c&}Z~pp$A(Oc0@q_x1s7GBWFqS?wm@VXxLt$FmZ!IwW2yL(I&@K9m\n3d(%`jT$lqy&NY2Q)aZh$mfUQU8I4`~TyUC1zfZ$4yo%Q?|zuAd~!iloRah$W{3L$x|AMO@Rk&tbz2%\nh==H!~!Q>3q&v;<dwzmU!jQ+H=13T(rky3GSL#Ce9dnEeWF8lZmuO4Kj=K(Ol9cZSnHTTgAxz)#a!Ap\nRpZTcoCdVk+TWPga{``8=D1R&ISgV!*kLvPm_wX`Y%vR0|XQR000O8X0rTPFm?CF=mY=&G!Fm(BLDyZ\naA|NaUukZ1WpZv|Y%gPPZEaz0WOFZdZfS0FbYX04E^v9BS6gq}HWYsMuQ(7;#0DIq&qkG(tPjPyVL;X\naLlDr6bYv5eNR6cIct!vF4ylVJQ*N6HNgR>qe!g?DtZHo>lzO+5YPTqiu0YqW7RDmT_VO=LHfY;BcdC\ni5zxgb!TeKIotQkL`%C%v&$X<k(#~LR~+f!#kX(cmJ%72k7QQ??XDu+gil4YeF7^<9Xky_a+gzQ;Z<e\n9E2q4J*VzJ0yMB2|vBmpl(>E$Qi4f0M6LUE{Y-xW<xz90$)HzTDq`e0Z2+!Pg91A9~_XibRy9@P{9b(\nPoa#;6FWm$OWf^MjEV8x!GvYJ<CXoGfn2S8MG}IK#y#7dMVs9^HM5Y&tC<7`B>q4v6@pElFKS-v#GLd\nkJ$^y*Osh2af+$fVczPijdqwhPO@5kmCj{Bu<-HV^mC*P>7#9_kHRP}3vL?4h2=);V9mk<77e65a@h{\nu=Ww><0b86C)gmi}weUrCPImcScAx9HystJvagrqAbKr#*)o9tG^+VPmEr{n5!D(m)x=LHuM-}rk8~m\n#DQNaih!r-PAb_;(r1|g?<YD=c)8VNc|w}<VvKDoVCV9_--t4}?_cDsh-US|6s51>SGKzPPIMH7^U3Z\n2M>6W-PwDK!-#fH;JMLYAcHh-AQ^jdf-{WJcBwjz-iqnz1?0rx{~%JYcEo?UoHe4F5EioS|&>Q3ZHMI\nM~5sSKm+Yq4W3-7-LsxZVh}G*Fms6Fbs-vEI{Nr?|7CL%VGt$cksJbxas5q_+v)x#nV}KW>^js!Tej3\ntS?S(M+RJ6QbTZQGB)snKxAG=n)q0%JmM}yQ@Zr=X?pGxcMv8`yt5ZPdo1g8YICsi3|jx|_ISoqNf4v\n#NfnNFl3F%QVw%L_yk-XQ=brH1#>w|`0vF|#WL0FgtbG~Cif}#^usU13dUN<sarjSo8PzuI@p&I@OYI\nOj^~KrfCBJBO<3QLKD6|1;p@lS6XhxumQCa6$V!#wj-sIAGh%w*2IEBpc*0$y9ZT$Lx#>gCJdTS&qba\n6w|j{dq%7T+1&)XVqlskYU*bg0dSl390owwrGHuc=w>=*>_3M;bCup{QsSjB6_NQmXPGof<OlFwMKGW\nhb;#=pTZf<xcZ+oKyJvZMgO+@!j0xH5f2SpdXUy{A`Ph!i!l)r_ySg#F(djjQayWmM-X5lQ&s-{mhHq\nL}DYi9;4-F*>kU+$O(Fx2*J|Mh;64H^FxtlUhJcPl27VDTJmvKZ{VE)xl>dKIo!q-9{55-IOn0?knpv\npacx8V@@uT)4#JW+%>J2Az-p3f-)Z`M4^=agJq?NHIBzSSC*GCfAoV&1jQ6=;_Yh9I&uR8&vpk2tc!8\nSF)R}Jm0~~%QYW?$FICjSVe@K#arCluJq8^2$Zw=9YJClOsZ{5(`phd|~AfP3L_7!@gAw9;DUsk?`Zs\nM)_2GpByW<V7;iQmS2KOd7PtDB4Zz4YfN8tc@<Ypd;YB>QI<+-X<>(TS?s^QGRO!~;5t_-OP@DyJ)eh\n@Krn|6X3ecep3Cx;^c0ZNk}b9w$vSB)6N7159b`#x+gReAX7zkc#$2x)a>N`yVva$f_915ef5+O1kB0\noZM>@7gE|mefvzNl4rhVj0755Z;cwh<^2axO9KQH000080A{lMSXTz6<U0od01g=d03QGV0B~t=FJEb\nHbY*gGVQepBZ*6U1Ze(*WcW7m0Y%Xwltypbu+cpsX?q9*VC@KTCynPr31XVFKZGi&C1}xq7AqWIUI@w\n%kQ6(v--ml*sNy(xmr*$v`wk49!9r@e~j}*H`Y0ISAY(%}83ID20_hh!M6>?T-wPUKW4c7)(==+Py7L\n4z+hX(Oo&nIE*%y%@RNpn$K&^4E7!HaE=|9cA{uc>8ns1)76VppPWp=xtxV5;FuUZ~xU*JTI#1HQCE!\nwzbD?R%E&QP^!>NZ@tboD*d%x2-{GC74du&7arT?{99VAn>&SKeujh(Dq(yrKb?80nHsEy>Epq{cmnH\nFCIX5QZ``osAEbLF54|#)HrJ?J8Uvz`1$A?2RtlYJMvvT<PtW#IOGOw+vLq54+Jk~iz!9q1SZ`HQ*=6\n@Hm!!d6ne>OrFUG4e<5$U-JZu=*foUcWPHZ=cR07gDt(xOJ(7ob8jj4k*Cl$UYLOk!QKfY52L~^h&B&\nz@ly$zHBBP&NTaxEB-$9-)X0ur#xiP^NJv146&f>~3H=obl|69`OF^ubCEB5FrI0bf4t!DZNH;f#zga\n+yo>Oz1?XHJ603hZ~wv8x7c%r`(%cHAx<PE{3X!z@M&FZaB*G(c5Iw{=30IJIkpq`-5UjjHS;*TBkFQ\nzPs_A6RgXlzqS%?i6){<!BG&5P-xxX^uWts={2ct+kE0TCZIjdKfQp6m_LSt)X5^Zo$~KU&|}BnMc23\ntpPt_XBK7-25ruqJu6<|It(f|g%<ZvvMp%v#CH0~`pu!?K@HCPUcy=f@__Wg+DTn`sX;s0#67fz=*fB\n`G4`_2YQt`WXWy~c1IsYeKp`pt`VC9d^bBI9BM=%{NO%fxy8_g+FAT$uf6%d6tL3)=QWaeG5DKEFFt3\nBpk?eIpxF@273jL+*B04c3s|8!VVZW(5@J%0TPBF96IFlX$Nk78TyLy~2Pg+*a*eeX=lP)x^&E`H1$G\ntoBx;@v~d<t0cR@zLNv}iTul&E_PvdQ9kxtaJlbovZAnPRUI`({Z^+Ie;-nL>?T=VKwLP?JMED*Zq~Q\n+5d{jR!A|b6R|x#N(Eg)+)ajHP?q^aT!q6^6*S(<6`ESV4ASYs=_GgcB)GyU>e99Xny|bmuKjHKG^SU\ne(sob&Bb{9!QB=;>0&69!X>Lqal`C#Dc0!XQi#~#UJZHBYH;JX+sn<1MtTmtl*Ul0$?v%)?8T{QRjU<\nlX`(tzCLWyDWG^pBST;A7)^2qRXVT9HE)7hip7}dfzp~5=XQJ|ZcGxj7v+S|>Dbx8dL0sy0mDo@%W-$\nX@%&T|!F5O=U-bi)N<q&<jSuorD-;_^e`;T=Y+Y)e_gp~#?;_)Qn%d0&|)wo?9O=R4%*xN&=V>y-esb\n-=4iaUB;8s;mFBm9Zf|D5p7x7=(YW*7CsSBJ%-WdPan2MCh#jaF?FQ!xx?C&7)08FVvqM>TzZ=Dr_=;\nIEAp{<s{>ZgB}L;v{JNH9B<#<1^jXt}<D&u$-%Kp2XT$Z}5%IkhhqQ?_BMIIeA#R7%~&`=Je4~DcCv>\nT}co+STq^hod+By>=L2u&V6TxT6P)+@Q(Dpx<N_txhEM7IZ}5#ElrK;hs7tsFjb)H8P7HN_thq&b7AC\nEeer_e=ya8wM4to;86G71bz$;!CW<`?E21(~bSDAq^9B|ucs@b~%j`1-`J}gD449#*qAibX-Mhdt7-_\n(N@Agj}T90-kT?5tONa!vdvcY{rZv@wMVg$@D=;TNKT|f>dop%FbPTk=))E+`-y(MDWg5s<{ZVx*nyJ\npebX@EO=vhW{wdJeNdWo&o#SWCtI3`dR_kEJpUzdAPpU1cIqW3s$g*m=ktP5tW`C%{^AKO)sP#zc1XX\n5GVgFYifm2fmOEp5sB&^-)jNboZDyU%vLRW7GL`Om+sWjEpF9QCBMQ3ykBacR`E*WU}Kg4G#&q|1!ji\nX&bsOfzn@$7#E-?VVT=d>W6eYzB0N)HMe)iB&yu~2BzcF=|q)mx_7BOSzN{JR)k80@l%RBho(;r-$O1\n%{eaUS2&M%tA{0mz`t((h1C4b>>rZ(@cQju9C=;aNVPZxmryG^zyT}+wei1H6ylGDIziEpC1Dm$Oup}\n-dZXc9IT|*o%(L$c#^S-Rjl9S!QH!r3#)JdGh1t>!oxxJg(EJnDv`4qUA^12g-VzY8XMTzq<vXrY1yO\n-YU&LZdzCZ`J?e~URB_JS3v!CH}SDE)3?6|=Z^VHoy_KHd%VVeE4LGCd_($%M+~xX3thc6Zmze!p>d%\nXFCrV<rCHGkxT`#>2$8j;4>lIicGQe}*A~Um8Y!2AB(8nv>1G`_QE6>U6qyqIofDi9I@syKV?Zw1hf|\nM=sb88T&C_E*{nK3^2TJPv#%o8pu9A!c+~cyZ7|bHjk2^ZFSw>@Bar-O9KQH000080A{lMSkrY4E;|7\nL09pe804D$d0B~t=FJEbHbY*gGVQepCX>)XPX<~JBX>V?GFJE72ZfSI1UoLQYl~T=W!!QiK`zb_sSPN\nYqpohU=JM=W@20I2PQCd;QZe?eoZ$BkzHjfxe4LQj2_oGj#*)?#YQ<jqr$X1)IA|IHFHjuMEE3`+T=H\nxiQOCcRyhS%tYs&6s)zMLpNT+1ciN6;M*%|!6k7q{??=l+umAGG<!ZpU(m=av{7v_UCVVGWHwVjhd;w\nc`n$^WXcW0y$A*lOSEI6+AsB)7lL9#bU9;(6aTQA#Q`nLO3Ao=^Jf=T95<71H4rfbYT!8cOE*DX|?I}\n#Y2JMhqU2;obY+T3$(IUQM$4j-0SiJ#_g$u)&?@rA(V_dpm=OtCBcHYv6bd(ve{%~9Ce&XhF53fto`9\n(*u?Ia5pJcfUbaFP9{Xs9#jmGozWIbW`Fudl#AoQF_Pb2Q9eG@fVB%lBW11gOO9KQH000080A{lMSiu\ntIFv<b|0QUv}03!eZ0B~t=FJEbHbY*gGVQepCX>)XPX<~JBX>V?GFJfVHWiD`etyIBo+b|5h`zwfCmH\n>%AAV7z;UAG0px?<>M7zRhS=tPSwsgk@je?LmHowzl6S^xtPDLy_vk`j&4)&nc6thTxVe=<VtKqT|y&\nxgC>_RHPv*UkOsC44ttXvJif?iyk8LMV@xY<Yv8apqZGGKW3D4gLQpoVTKEL+n(b#i#!IMmf)<{DDuc\nu-KsTStjZ+jdcd}o4^r@<8y9UbznOz>Tt9@@I$hGipDI<D#@IK>yntU%3m^^hdQGBibTn;Z*ISlVUe=\nVX0vOE^(BB>Ti7$jWz;N@XQf17){B~uU7p3j$322QSCt}}I{E$UNcw_bN_}+e6b>smA~db@P?9^`^BO\no(<&98u7{h~N4W>YVIc1{Yim7)VDs3%RUY-)|6sfdYwPt4-57!(n@*!)W*(vJaDEuBA`qqqUSq|Kobh\n;<lr+>*)*s%}+RJXp@AjrWu7u}$BAOnSYAQU(|s*r$~(<;biTeb3nOdJhTk5whmE#4BZqF_%)xNJV?@\n(;-a_-wQbR47%?ftC6%!Squ;VAFgOyh7x$Rt-mO4^&R1S++uwordgyb~(jkhYD?C(kk)P4*3GBz(9kb\ndT5+Zui8A7B<}|`5#(4yK|3ORQOq66dKnPb6Pvbx)qA+t3fDaYaIHZ*U*rS8;_M=*xVcvWFXj3W7KU{\n@Wvr%Pe;QasmPN<15InMpN&9Ez7e)R)XOGL)tFULj(}!la6NFk!4&g?ckX{p-44|7j*0>CpREp*_0JI\nK{_8|2xwQ;(Gv^4|PcAFcEhBmg~7eiF^GcsRnw=~~U5_0T$MT#TOLvwlz%LKh9_u6k7BVz@~@2u4%`-\nG^3yw`k?bccROHllFW_T>Y-{y&-Du6r~k%i)xs<TcDjukq}BA&rP|TC&I$O0DJDUG1?t6zLM}xx4gFO\nz&F-{sT};0|XQR000O8X0rTPmX|+xcmV(aN&^4@C;$KeaA|NaUukZ1WpZv|Y%gSKb98cPVs&(BZ*Frh\nX>N0LVQg$=WG--dZBk87#2^s8_g74M+D%q|z#fbmW8y`P@n%djEz|8}DIn0q{(GU=k2T8)cyHdkdC)r\n3Ll`aV6L4>h3-D?K8;z<c+5}p*qGBD$#XBL{2gmi0C|=a)X)e33BZ5tM+%T>wu$J^AEH-C6QPrlSn>F\n6@?bCF5t+=Ov5(CZ!57EFy!=h*udJoUq2ULpW7TsO*xIY#US6P<tWF2|Z!2@dGSpojMiee&ubnHPI@}\nNxsO_6|lgjj0PVNwM25IO=!-vhgdvu=&+GuA~Al_QknBv%t@XiRU1KvK+Ba;rP*j3pN`Q&J1{z)DtWh\nBLW}<<668_i%H&yxM1+>?@CymZLB@4KGGhv8bFVRCAKm_C;5@|G}<`G2Lhh5>vzpg^zRjmPuCi2%J+%\n?G8|;ZA^QJF^+4V<$rTmrB=5&S-LQ~*xxN;N#(Gd^1nJ>{-_nsIkGoudX*#8#;6r;I%>{UCP}h>i%;>\nS0oO=u%%u1QP)h>@6aWAK2mofX{8))-X^TV$003Va001Na003}la4%nJZggdGZeeUMWNCABa%p09bZK\nvHb1!pbX>)WgaCy~OZExH*4E}z<LU1wQ4!C;jhjzmO8Md`q7qm-*wZkwJg{!l97d1ZHmE@#{Apd=&UT\nn$sUAJ}}umC|~OCl-q;X~45*VIz8vfge*wViEby<>Xc;Qvh6rB{DmoMw-IIeq->?ELAHooSGKUBZ&RX\ntby+UM|^7&`b8JZAzF~35{sdOjNiP*VA<?$|8g6+Kc>&UYu6fLe|v|Dm`_m5K2q2Zb^qq*Ia=={o@)}\nc&?uWJEkPSha8NF%AY)|l;&m0>E)@EwVXP(1I-Jrd1oxD{+KFUC{?Q3btCH>RHsn3RRuD;5&AMy=u~>\nx;X2=<r^F`q?P|vGXF|HD3iyyVJio$o*@hma*KlFq{%l^(W)w$UJn;cdx1gV!ck?W(_ztpcF`LculB1\nC?>sIE`-R4uiU0B1CB>4>*2?_(I7-!0yW?`Jtnc4a35*Ti5xHO(-N<+gowPgAdPqPZ3P^@#aTVU>fis\n_oI!3f#{I*e;5mJHB^c(GOyGA~Xq*uw|kvf96(^CfI~zGrV0=(b6lJ%jBQeYmOLrrv&Q-VYe02BhAbr\nvf(20+cR(g#i-9TtT^6u>0S47=MkId}ICKWStf02eH|sZlRcj_pOjXU}kM4-nUTh*?P|ex~de_RZ80Z\nY4km+XQU*>gDGw37A2Z5t9UVOWobZEw>sNMzBNhHnU68fygRcn9{oLrAYL8RN5V+Pe9<eg!GuV5r*Yn\niA{oo>$>Mayk_e(nzrlK4sM;pvimmIq?3eRP$geWHsend>>*h}9bp`!B?y=`JFIcn3=)Qwor@G!DH6f\nS^z&zTC3fRph7!-N@2nRMq5fsritm{!=)(Ol=p!bT^h`h(z#-PvG$-2ud8D{qg843f4yHKIs7%DYO&K\nrOU+*yIPWeqfBFRzNB*E#{HFP71}rZX08<yEJfLC?TOw6OFT+-FT0fh+i4i+mt3xET^2%GGJK!`vYA*\ns*pyfpZIv#X#a?3OTCh+PV)S@1ZlH5ZV?Wp*<z2wjm}|CaRAfeS@qp5PQiDUwK|Y*6>gHW}6~iq2!!b\nRjnyB1;UB}m!&}AYsfhUfZbTy8VE-47&#Lj!=-DG#1Cj`XQHcw-7PA#1vL-Eirx+ilw5{p+;DUSO6S+\nL=t4#uX!VCd8Hl9|lvsSqeafEHrowB69t6fqRkNE~UZJ04-BQ5mS{n0Bc@n1XAeQ(0`LpvEf1Ibtv-g\nQ-DZMIF@<=xEh%-iI$ng#UxCcsxMS)}GkeF7r+z;eBqU!@jUh3mD#u#OZ2X*J%Oz}$SeP(E6K1AAC0Q\nF*zg;C@a4xGZX^SHYX?p7l(dmuXu=dF~4-!R>fQ?5k;4iQLE4T1)$T!0!<g5^PCz$2_MB+Cg}=;g%B&\n=Z^wSEy&a8Xb0}Y(fU+6eSdqbaW!Gt4%3#!qbxNgfjIzP}nt#sWmu^$2^iWZG5yP4m<iH(7qZ8vjLV|\npl|&~HBU@(yR;4il`KPXBUSEh$JMw^7Dw)3F|I_OM7x?B6z2mBYl`uqB0O0?&s^;hl$^sBeY!y0*J1~\nOi0S0{WQ6@abdBBB4;&|>i_9n7+hfjW_hHmok1i*STC$`@&M)~Mk#U9FPLgqU_g!Fb$G?{n-H~t$HZC\n^#CsZFxi3922ny0THKKRZTHi&8SP+}ZP3Olr<H(XNX7$<r1tMkd2p$V*U%V*|^uT&Z|nnUj_k8s3CZL\n!0R(T61(EDluzIn{a|cL7V2HOW{A&Ue1!*ib^z{;r#_W!G21>8m7Ga{3PI_<YBkIdTAkQkh_MM6y^6u\niCQ))#t8;*(z;nb3ZfqNq;c=kYN+pj6-S%Uj*@y33#471x*NvBT5~)aiTFNiNoW0IOGpg1wHRgRVRPw\nP)Ra3a+`u7KC`yZ?VrV%$ld7VPaf-d<{xpr?^^yt?~gHcJRIJ{<Vg1X55v=WK8(;rllKYr)KyDf?HPQ\n~l20^ycGw9!3^EZ^SU&IB31!!+el9RIS^?55j=bncWEy3^qC{jE$cVIhS?-=dGby^n3>e5u`0J~@b6&\n{d2TG22WE^5MOLS1cF<kc@y2%W6c)uT;f*E|IWDxg0U><`<v#m!j8Umjp%4fGf^;xyNSNT~L`kywepV\nbGsJ7V*LW7>|FeeW}6LC}Kq**3gD{6Q(S*)Z9PAtlDI$z?10!tvUCg??=|5OKaa^tot5#_Ei|XPE%Sm\nrGvOJD5sWYA$XAr`!#yd*ZFKtaUrI{cgo>aqP>bFdr80(y4wB=+m_4X|ye}HMLK%y@5q1(_PNckdxty\ncza;u2}aa48Y7C`B)1)f+!29`DzA49*8;Q4xqv=c;Oe*wB42i=m(1=XW^-N4Fu-xC30j+e!60e;nSUO\n6bPT;{3bUZ|jj90^A?ZtE2&cDR;jR1ci(<p83xa#3i~Mv?{{>J>0|XQR000O8X0rTPvGc>PF9HAnB?S\nNgBme*aaA|NaUukZ1WpZv|Y%gSKb98cPVs&(BZ*FrhcW7m0Y%XwlbyM4J)G!cz&sU7{lt>{Tuo4I;Eg\n(>-pi+e@6nW#xu2si2w$l>6p0VBBmTjKm@yzj=b7nfLd+?(X>HwlQ+IqPCd2`uZe7d~&^7;B>1>cMpS\n}~brUC1@U)XgI*u5E2t`@jxVS`S`GHvzOvX(d`F#b0a`>v3Hwlt)W&H5blXu^$4utM|;|RR3;IH>~v^\nRvG6Idi0Dl&!)N}1Nz<*(z>#W(JLX*jm~3#cSMvactGDgg=51v1!b0rZmYvC7Mvj=6vsc$N?_B4qn!x\ndr07))W?9xs<{U%<Ylg+ShRgI~p6B1uSahho0|t>Utm)QSOuRh`2VA2Ar9CJ_4or<erG{A+5`no??t(\n+GM}o1~dO5<NLIcR_>CJ@s)>v)O`Z1n3cCa6W<V_&^fVL65a45SHUcH&e<er%QO5DR|(GOO^wN{wTC_\n(qhyp8k=+^LHTBC-3b8F%212=fR;XF?<i)REml9%;(xwH-+d{>+6`oUzs~P&M-~I8spfDynEvj$tw4<\npx^YRfoR^(y=Fl>NUyvpFAfGA+%OgaxFEjMiXEf!~C&={0I7A4jJV^cN@?6U;_iLpOmDoUq%gkMo@Rj\nU}lkK;E_ggP~m1(n7Vj<x)H@o{K``=&u>i;L)HJwUu-Cr<uV4TPu#%Fb5YFChWctgr48FbzFDq(Nk}6\nqoR(3+9qhH1%XNFi_Mu5h9F1Gw$H@z$x=foPowI*XO9KQH000080A{lMSVKQc&L98)03HAU03QGV0B~\nt=FJEbHbY*gGVQepHZe(S6FJE72ZfSI1UoLQYQ&Lj$%u7kFP{_<HNi9lDF3HT#Q%KHFN##;fQsM#tP)\nh>@6aWAK2mofX{8(KXLXwyh004<U001BW003}la4%nJZggdGZeeUMX>Md?crRmbY;0v?bZ>GlaCzlB+\nj84Dmhbus6jPZ{(=?sT)XvUmOIy>MOD9!Hx2x^UJa|=Xii9k-DN;?4mer~3x9_<CAV5;KdwSnim5L=0\nI5;@>3m62!>}o5;E-fmt@0xwBq^LKd-4;sh>bxtZfNyOr<UKw6SX8&K>#~$tTQ_mW-x5`KO(s=1k7of\nuoE5u$-LyhKF6v5|AqhK`@lGn0-bgdJ=_&wMmv&as%ElY`S=E*KUe-4^MRj9-)^<|Ylx4Aw_i3Z#V62\nh9bW*jmO;hhgp0;ULrb<aA^fWufGq&xnWH^nP@&4-5#|s+aDfPak3Fi4f(h_#yXYFwh2%0D1Ou*-LT9\n)a$lo9=UQ)DfF`v6Dn$3GTIkALb~9R8H<5f+bqpYCLS)$PsfANEMwwB%nGP2JW&a{hIRC$2I*(^>Snf\n;G`>K4V<>#Xe5%WR=(UsG3-6G{KP3lI=&S_P|_udS)!|Gf8MVi`wS+wrT1n5|@`B>6?p8Q2|NdR1-_T\nm+hf$Kme<X<%$<itOePXrHV@sSF;#J_kpQOrcJg@R95dTQ!i=k5{IT%R*ViTRSJ+Xt1gQDC67F`sB4S\nT9;`_VC6i6vB&to@PE9SO1@WdRCCFDVx`j#*$>I*y!?V*XcZJG&7UwDGZQ8Zl1Q#TrCsQl$GP@6a)m)\n0Tx|=7j(<(1OgQR)~k1s&6BO>-CO^d|3E6QBkh}jI)7u0HL^f<ne?ME65lcWL(PZE$#BU$fdn#)GPbY\nCH^RSV(+|E*@TSuQss*`+P853mFlZsksfaHIv!n2WRjw5o#ZRtr)Duv8!G`c?qd#XnwO3SI`Ms=)k7@\n%hJ(@r)*dz;+D?VM~S*c9FTWAQG_t`?><5LAxm%`9g`R=9#hCiT>hFya+b|RAap-BZMD-0eHt{eE@pQ\nV~~cXRfnS8hCFpHfY><Yx|Ed}TOqjMn?=yW!B0bY>m6s#2x1FlBZDWB@9Xy4iw~evt*qMctx>u;10&j\nkKoo6~gi4m12+TT7O;8Mp!jUl<NiJ2^6CL;IQBvKW&SasvaC{K+ei7^#yAweY+@JnL7Y0mpe;P57mFg\nOqr28V-l5B;I7PW;nX9MI7`(AHlc1u#AiFI~`2r(G)kp!D&7@&kKI9DZ7aS8fTGR8n~yPJ_RGyzKd<n\n!YvEmh{wf@n~ngtY+jE-j1PJUhc@zQheEXRwMHXN9^K2JUHsNCcm&+p0cP!F)D?k(2}a8%dpM;q@oG@\n@qL2dO{ks^1eMshZ{ux15os`$WoNW^SdgK_uy4yMKp}>UVZZ~EWs$kS;9!qdkJOr;8T-D9xBIBVl_3j\noIzOAZtHyRsn+|etBa9R?J?3A3#0*PO&3@=b|eeOshp6`OK`j(5%1rA`^E@9%A_`B5!sDL1XMj)K=D*\noGy%Mo$U6w{&`gu9^RYogNq~Nbh>Nj^8!HTcwXCxUXxnZh0XsIwNNk$)W{2yRUUV444+WyqBBibDYSW\nC{f<65bY}<B^`hb5`@YRtMD;vaJttUuP*hh1WR1Cob<x5Z!U~XPC5Vfe~Rny6NFJz9}CtIY!ov>7MBR\n8PB2{Y`s$c^Etm7Q-h@Z`Y!N}DI*ycG`AT=Cu8D;6K^K3wt9vT=p^0`N!`7#&gq(MSor0PSD!lvlC%(\n925+o>zfOQ2Qb)>Q0qMQ5Lrn@zBu>o}riMP0^4%8y;lSwivL$KpkCjf1C*QAib+WjB>DRWu4|2o~H&@\nnKm~dun;`OEaVe1?#X7BRwyKE3EmL`rCm|U+)DQe0WVr3(gwlQL6JrJPqFwmYdesaqX1tCa<S9IX8WS\nCL&Ss=97E)(gG#Xh^#h?%4DZkJ<34Mb0@cYX9Hh7*jhhezYcxp=dK$ThtTFgG6l$QKcy>QT4KX+*&7)\n`*V?M_SpE8J6rkDD!))S5=<6N%0n=trJwk<Mu4^gOiu7YSX)TPa*)fPRX#Ra#uKeW$We(`+{D$u?S76\nMI0{BvDYzJtTh^=O2a{x)~@Tb818{15TV@@4$$6a?#cdEU#Zi7Rhp?oW6o{s{_DS1(#|NGozSYsj~95\nMDME5GH3SMa!68qemF5KWBu`Aw`f`+JR6Zmud+2Z)62&G3tT5-(#u=EN!=GI{?rgK=lOVwxH7D4}ZYq\n1xz>C(y|281^-cH0rOo*LO=mG!}VKvd~rvofW5utItu_l-irTu^-_S6caY%>0Dx8>kODDSz)p$v5#*@\nV*mB+ESJ~94T7(X${{VoY7#+Skx&({F7GkSAR8v4?4HVhHcJ=TKox<&Q>HQgq{PHCo03;QSa8;iXyoh\nQzKt6-W0EB80If&17)dtcz&X#N`0F<vk1x+7-0P+;O;#Y_*nsl=%GBn=gMza)yh6CnBbPiI?ZK{B10}\n$CZt#07#fF>{?vfKUKDI7VZN6gK#j_J|VU6l{n*#HAE@X!|99s@iW5aZy|rmo84V0m3-678<&*&Pq2y\naV97y21Pnt#it<1u_h$gd@Z9<32qHIePYQfBE;9{_5a0^5P8bWmA`EFf7v?)%(g{ACC{72`t>PAEaQ5\nEiAb5bqyko=M(4?lyPBT%pd^F6*+YcLe&_v8tu|vdEkg+@!rZ|YQ0#hA)tgnTth(?kQJ6;{wh9KC59C\nTbjhld!@v|=7D7B~Ac)$*`c=$6M7q_CYKt95ljNi@OtUxxDh7?I;04wIxE_7pL6a=qv@`_juR)mD07S\n58<40mJeCl}~%fR5B<Pw2)K_XS;h@33rghO(tsQnXjG$Sr<evixDFi}=njUf+jr{RYBZ=d$+TFV3Vk~\nb#YK|UN%kMG!QnH^lcK<%$VTg^F~fItsXG~pi&7a7DXId<Tmy~1()iT{Rup<s6%xM^^(f;Ae@wZBF0)\nWG6EGJwg!4yl|#xSH<5Ko18!a7=7@aJs_MHlcn#KUrrX?Z?yz3uGFhlO-0E9WW3ds$Aadxxqw91#8$~\nv2k`xmOjCPC!PbHf?pdUaa_{enX|3@#coOg+(OjrpTXnOZtJ=(hv_kB9r;KwmLaW(C@3Zvb1qNW{V>l\nG%Oyj$BkuO#3AP#m+OeqG(S|rD^kDWWHkITto>ZZ!e|v?i3|z_MR5eBTYlO5~h&Yb5{-CW)*eL^tU|p\ni6EZksnWp^hq{ZBtN{|>Aum{S{#upy;Plrk@WdqG839Cq-GI5I#(&ZR^R>V-mW@5)w$xAF*92SSi3Nt\n;KaW0Q=oz=g~yIg;ilq%?n>kS65gyR=mDr#`-?FMqe~o49N`CRPZpO+h%YM0uTCejFNzTfvBC2E&9|G\nKn!#6#F5XDMP6!;Sn%l0E<M#g!T?*xU+)kBU}=L(@Ei&!T}7z2{KI@2(!o3IYW){iQ~EF@u3;aK~n#I\nQcOvRNzw>Qb^4eC9q<I01l!9DLGB2Iu=0tDe=KB)-V>!dgFs%$k|G0gf(Ta|7c~%}QHha>`!CfQpOjT\nO`6lHiOX@Jj=>C~RX7ipe7=mEBiXIBruwTXz%rdW6bD#6nd0Nt;V{*H=L5S1Y4#l?e<j54atJJ{Cn-8\nJ{VX5>UFv)S@WEoR8F_%<zKxDXw8Tu$#_pK>!f5VxBuHBsdHE^KC8!2;-N)Q9V0vVchMqtVO+vC#E8Y\n1Pyj1x3F0-Kpx6wtB=VPl#n@_-W;jA*RIE##R@Xav2a`hnSKX})+4{xt1Jba!YDx@UXGA>i<<taN>k{\ngbO_R;PZHdobFh7npe3fHj2UlD=cjum<u|`3=>nZ$>RBNU<DSkUh8jf`pS<LBluXcMOl*<y0s%wK(!O\nhi#E<X^84m2T<5PAokWy*gVYd(8Uu?6!R-*xReLup}=Ao?mqBQ+qwhVuBFa|V{vhWn4WAJu2*`-V{j-\nkrM)r01G13oib$~JeM-h)(grQSgPJ^l)ade*W#I?OM&SF2Q-s2Z3Pct~#0`UBi5msM&yl~IOdBXF@&c\nlPp7+-l=DtbqA8<5sE9IVp11`0qj)?a^zI{iAJtcoc2_9tRtX@nEZQx%(+79XWx=)%dVJE^{uQmI4mk\n^S-Ho*Y9ksDJ!_k&vlkn8;ZGo$STe!*0V&%L?E#IV!HTN>PG_ExTN?e(fZ-4;j$@dr7fHoeh@gm1bSk\nEAg$=_bY`&<SE-=AKgI72qj?KDxF>bJAjMflyS_gqfJw;O~&I7`Ysps&o2jx8v`(q!o6OEFB!vK?B+)\nX^gQ-m4`XdRHHKQDQJ;o()|X4O(d%LK|RO9a)kY(j+{0F9iAU25%RcwFh0H3K7uk-NuA%3fNL3Wx-wX\nc=du8rfCag!NXK!h!rlyB#o?pb4&jQYV2Q&KSaW;m8ZwiJ_FWkPj%EYFfkWZyv1HKb(koloy|BW7h8M\n+Pg9Qxo49|fH&y_e6>b9V37ZB;-VIqBmd4KuhRu1wbebQlXJ$lqEax^;fn@)`KKv84Z;r8-z7ij1(Q!\nmk&N8=|a3JLv8gUr%==^tUhVF7s!g)t$P;~`t$>B~7jogLv4e>~mzv!djO{#s>Nvk?@c7;|qlcn0i#H\nNSqjG8M<yw%X`km?8g>*Cacph>VrQZjWLAL9WUFYq!u}&_PB{UD~lRen0Gld@Q_&w5fnNgR2CuxqgUy\nV-@+i(n4(83kBjS)uWgWS|L3m{&;CMnt3#79++}hDG-hr7h}%_;y#E;FdJB$pCgu<iu=0YP73#m>!#4\n5i0N`Croo-?zlp{+eVJ-(qm{!g*^SgHMo4j?V6V`>Cy8MGgip~rhWKUfq&Lq*n&(*PFG|!$1#!ogOes\n)R2e#NQ02tT}BZ^~_2*QJ%17lNQWnM|@&$}KE!JrUgt(r5s^I(u%p}2knr#TNCfLA}f`C$P%&OuBEEW\npMGHfVH2Srr)-F0sv{xern5#oG(<m%qJo0P#n)$Fh&j?X@tMXI_U!-}{<?1Jq8NoRdd+4{Ar31u4aOJ\nXIaT!$!;tY$ib#hN6<yJM4jRvd|aDYp%XR3?I9;XhLA9XGs}S&`YRO{q#GmOaXK0!^r6|LLW|@FY3B-\nOp2@9=D6@Isxjabmlq~_yts;c-S)!86Rp9e_F1+N?^uD!MhDk0bQ2=*fvt6`g)3|+_u$=@#?WR=*#_q\nved8Q04?Ot2heFwWu55z^JNd4&LO&i44}}dR>J#<a;I2_X82J<#jfQ}q(4A&tpSt|zQ%}>*yWTf`>Rr\ny7ru_8%;SmQ;1#=wwz*G-tf1mkx0y3AOM_@SE0=+?w;Z2PcZ)@$F8Y03SW~q>}?YN02g;J%+AYm#t$N\n{YN4dH<0#EymC{&7rsVMLMQQp+cHdOY;)mG9q2-VOF~^m-u?z(Rb1^<RVO-L8tAth@H9-~;R@g7@o8e\n@B)|j*{)EfEEqaRP?%}uxUL0Kr4vfi;(%Hes7|`*smQOILDj|whMcc|JsId{pIQvmmL^UERQ@o-QeK8\n$l;d;bf{jKYkcN44iGT6hO7G&;E6~AZ@}N?V7yrEl}=;QTU=(YC)xK0KqSz8VP%QtQ7aqq0v}56qVQE\np^e|Zd8og(tpFdP-@DlsT`8A4<-G}`<01Nl_zmCEu$`zR6dan*FJt)J8{Gx!pZlwDZbaXzFJxB&h*UJ\n7FS*f0Qikk0*E%ZAn&MGkTAjK-FYL;!AcyV>CKV;yEhm#f?8NrXP2U=W^i5eM<OUNtf3uabZM~lZO{Z\nrQxVQq0!)%xDZ*;!SeaT$=$=h^?mmJ6L=*E(}sNV*KvLK{yWq*os->}c}Ec624aF*J?AUo~mcFK`1_G\nshf-Je)~2{6qTAZt@<1Mf3v_fqUz)R8mSlaaSvd^zE~g_X|jwsb*9;M;_ej8We~;%B=dT+cWXWUL5R=\n72U|-QsG)|kac*|Sr?|YK+k&~I187Sdd?uA>+U&FGl#qJP+5HF%l>P0;&{vct3SoCY&qoaRN_bGKQn5\nhTN74|eDns9ZZvq<A9d;ecp%;MH`kU0f`mN;14nCCdQ$Y|W~#IK^)qv`VQAhQ_VhNF3Pyb(&ow;b3Ai\n@l*C5;y#A@2O&@CDa&Z!+i(XPI!&e3mni$jFSv{D;SK2b5zn7P?TZ=9W~<k0P$a4A4zv@P`V5?6ek5|\n4Q`idE6HyGJif^`>_i9JqNmTG$_&9Ady6YtsU6H$V<1^N!<fP)Pl179=UuGa5;{ISjqWVPDUT9jLyTx\n-V~yjT7Fu9}P|&dO0;XUP=u+y78Za410Wu3zaCD;dLx9hc`tvUM=tUuuB3t>C$m%K5C=r?Zix%sZ00A\nL*^0<ERX~Z>{xSpK}0K)*hndKq4)6SG1Z)vbH}OIz5gd%#Cq_Pm^eN0|AdE*!JA->>;Fw+q~2CotIyw\no$u}=KzIpp!pT8Sl5g-nZZ-;M!KZ-B>_UhMQ{1h)kk`p(tNyph13}ZN!k7%s;^AS9(5V|cO?lQ%uA#R\n4fb*m?z<O{y2NE7B?ty2iq976)u4>57X01tU58^v!pY{VCre_t2=5{%Gji_>vc@ZXh=j~Ew+b=p&mva\n(ar1YgY=(RzL|wx9)LM!3HGe*sWS0|XQR000O8X0rTP%|I+hh9dv~B9j0BB>(^baA|NaUukZ1WpZv|Y\n%ghUWMz0SaA9L>VP|DuW@&C@WpXZXdF?%GbK6Fe-}Ngd^rj3Z6xL2|>u$NBZyiTYT<c9-v9h@<tq+FC\np@cOFFaT&-arwVrKju9Hh*Er4TUW<&$s{n-=;`U{>DM$SlgW?GzOQQ8iB@jPUamynh!@u{p3Ov6ujD(\n~O(v70qiVZr+Fr<dzt!K@`+C_o&8E{As$RC<g-vsDQPmgvXDg4^ZL<}tvM-mLvg_cX>Xy00E&A&n^wT\n#_|MSI3@#MRcCx3bN{kJpmv~7Ns^-I~$#4~tedA^Y|@x1Eb_Yb?iYU*+`6LkA@zr%Y!)o}5MA@8bPUc\n8m{s%i6GxqMSzI1lP}a#^h_*>)q1^S-<=c%PORV@-jw8`E}K)=gb4%T4vGEb4MA$9ld6BmisO_gVcG`\nmO%PS7)O5y6mL-bqg@NvhAcOJN{CryDn*}8b}Hh%;meKBx)M`vm*hYuVvS(2S47lvRqw1tGmA3Y~*T2\n4ZeYyXsh!*_Wi!;pEmni-BE-1`BKWw(`qA;27KqIy4&yYA(HRTj;1M`h#~W30}lhvYc*oetNP6oeQ~D\n7wt<UX3dpuu$xWBTY^*9^J84Nw!zdB&C;H|HfOXSu%f47Pb>B7{4dp3aeZm(<dLw!+{v%C0S+>i|qFX\njQgX~MX_7X3R_C%V%c#2&s*PZRGF28`QvX%8xj!~*F+Y8wjyX*eaa?&YXd_mVn`d;B|>OM5Jsm87RC7\n6XD<uCiHm0MZ&sSdQR@&e?G?gz*`2WcbQ;pS^#IS?#X==}WM$;tEL<UdYNzJK}bhwq1bUY6aZ?e-o08\ng8wmo^FmzTla|TaF=b>Ep_|zeYIH?wd^;|a=1q%yOx)7`KD-@Zk?K~;r{y?AvpbC{`BI-4?musd}9gn\n62$)6m%ejau93iDd0ohNy{tP|W}E`OzulMZ>gcE_U|x$tEX3KwTP2g3n4nZKi|$9+?KeGMenF#@PmzZ\n0<kiv9(S{}&fS3u-3KFJ8F+Do^8fgbI8SazNKcgMsEStVko52~7VJ1L8y?S+Ip7#<k1@!+Suc4pQ%>H\nr3t=(m?6#&)`Mf6s3Eef6rT;bt-un5IFb6WK*{gfDnDOxx46auffU3F16tqft##X0P`fcevM(}6slis\nMIgiRTJ;Z~Xs9+3(w0z=G^Afq?KwTvRZ9g4eJxJ4Gj!&2|T35cXAZRrQymB#iHO3{Nf1?wC7H1PJxL%\n#Y~q9E5MV4My}>e0kjCs6?~I;h?Gk0;z*#feeVKC_y6BXIuWGX^*#6O@EhdW6%TTgvgt_j~gP)&w8+p\nYC_M7MqnOGBN4#!Bh;zy_YQ$_kH&p_JvYFru5bvsNH5ULG}nxg2Q6k^3zx79_lIpZrEk1_I~q-{cHfu\n!ip7-IRKAku`wJhT$ulGyNeS*P0@{h}({?IgD^yJVX*ZeOa!4Dq4jk-(lO0N~Mcwp1LFXy50F@{CB>z\nWK)!DY(Ww6d?9?7OtubT#(W*@JqLni=u-gGjH?i0muSqlvcmd>hL(;nLkL$QvZ3JeOwOVBJBRr==5gi\nRCJC$#%%SwfH)Ir67ykU?n3hDp{XY_Tzq5a);E9%Gu(!5=p8c+gWGlN#k|yN5v@k<CG(7<Z}+&71rL{\n!DrHt&+GP(<d+YeUmZi%*29n)%*h#szjUXvVH>uiEk+7ac}kB;YNDt#SM0#tzx4B^ap6UyiBwSC^gj7\nCB+HK!4h=oa0lsju(gvo!^xA}3@4tHZMs;Z`rTK{{ibY%B8(N1^aU`{mItgkz@wEpE^OePteqV1uCud\n;UwrxM@A<!<Jvjd3tAC&VZldPyp7^Fg`CHY?&3*-jOf5jCXs!xHXV`s9&>WN;2dTd;-$>Ez;VH6&A%p\nF;QGhxyRzZ%#a6q%@%(kcifhjCYG*3(DN{^7MT%2CQ<_N0;wxDtkcNM7qvIGMbq^jPa&Lun;(39_Wn`\n&7hzO<v@<B?iR(2ZyC$O=%pl$)Ifw37{Pl7LGs(6Z8-BerK6l6nCQQT0V(7b2+nYs>43=%f_QQPr`xj\n0Kvy$=ue>t$lrldXjD6*#UFU0<ewT`C!e&-W%GcjXs6VUjajW-_*)5BxMGFT4}7=5kG4G_lJB6B!lT`\n1+J}41=GpOvJ`kf4?BlMIi;CW*T%aVl3^e9L$eF5h8{Uafyl+n%Vxh>A$ycCXT2w#NYT1~Ue#rLeP2M\n=`(3kdmy*7pH*gb}sOlpW!bt%{_>$gkNbd)2t7kn32ty3!Jv>;+M!%^xRe!Dc9{xe!)r^<^yK+memA>\n%+v7~3C&jT_;r^A)pZ0LVvaB4cB{^3W<e<AaW+-YR?dbvH9s}&F$2*VnxSSzQ32Pi{)FJN<O%L}w8ry\nw>~qP!?8Ff~zxe0TcS=SssBjbcUd;^c++!-Fq<Z3w+o$C`bQcS`>)d-iw4{NXPKt&Jj<9Y}~4B@K{6$\n(&3{2~dkWe*~a46FPtVVoCyOC);h+D_7mQw7V3G;EGM?2%E#TWRR~$(ef}+R2iZK$=wbo#L%?M#WyUK\nI}Z{(j1-MLxvoJmOJj>{=!*kto^HDcbr}?tdEspt3vZHwmcD2}9p1YTv>wDFeIw|t#m7PmlHk7Yg<1F\nuKNzAb52301^T_NYYSFW&ETcWdu}n$uvMH*yBet8<g7_PhFJP}pvy-YNi94pFMmhXRj<(!lK4;Ag%|$\njAvzGh-Gr+b7#d3;UCMaCuGrs;A!LHdQ?Q(->T)OtI7IQ$qHF_mo%x0qDMzHaAfhfAVycWQ7_&ii#sc\n$Zxt-X;|9p9LV&lum&K&FGdJ13*lmy)^@2plcV&}Uj-{0TWfeAEo&KB_7`N~{PN<4dTs3@p**49n}6J\n!p;V>+}M%1{1C(cioYC4W^b_A1EsklX&UOQ)n!>Kes5<MWF2Ds~U$zHua-P(32GMOtYEl3>(cv;ebrT\npyuK|fBB$QLKkb0@`aZ2K6ZEq?LUp5+tP3Nt~YJo*;~Fn>O!2kT{=)Vdib3s%}lrv+mzAhW6NMBCfL2\nCjbjpl#^<wLmGt2aKQd`7j^UB)u%5U^40@$uj+G39=>qINB&@q=6cbi`CVD8oP(&^yIxj+}ZEARm6W5\ndPVS7Zd6>Lg&(?oW9AIZrNle^6gKQ126wp=#dyN3@ZI2z&(*ibLskxcSmtKH<TETQ3}xJWa_A;j`LR_\n=#&xCQ&{Gs0hMSFz_nIh#`Poiy}O7Q|0Dc4Y&nSr9)HZ6!0}8rK2ON<0LhSrnhk2v$yG7N0DVO2N?h3\n=dwl4QxZ&ML;`phCH6&z-i2aF0l+vBF}^6!U%w2nS#QWi<CBz<5%D=+b&BI2+?Me7^s;Kf0`!8Jzx#C\n*m0X85U}-e9JO|KU9}5_R)q!ARbY0&rUrc5>_Iv0E}N!jliD#hVE61m56#o^3OGa40z(Y!E#zS#9hl*\n8K&E9jjmhE7@-QE-C$#T1>v-hZd-H$~tk*m4;xs2P#H`)d7=01sj}yno${~rHJ`m)}g+r5)1~xRNfY~\nA+(+IO!t%B)k;>)_hJ+>t~V+ike;`~~fJ;0aEn}YWNHV<b4%qqAec}B$-|N7v8omG^wY$V^XYkYEpAo\nO<(26^iZ<5rtR=-O6<8ggo5V683Tx!P@p0XU<;#N20;lUN)iL|Eu1Jp?z0WPgRZsT>if(f&<T)ABy1n\n08+BNIX}fij-&SiZ>GKHbh_b?QG7?a<ETYP~u*B&F!P02e-QbDYVNTM!T=m^pmv2wJq+dpT+Ak*?tm-\n_t3g;TbPifUS=&xW?RROy)m$<Ke6-Oi(8EoB*D3919~xLc83uqH8W(&_yZec?Dq<x4^cqleJTcV6K4-\nO;uAdX#akwnLBqz~r=5vsaoB`OEeyvW4L;tnbZu*jSHm_0#ybcq<+&_4-GQgn`j+ODV|A8HlTlt`?&v\nslIaNa4O*p2>%P<1g4?sL6L`AdjU6<F@CGLGHMFX}`3=pW1%xDWxq$ou#ua1~KyB@b>3q-jg(4_ALy8\ne5z!mV`=;7zmvb_9Id47V-1<Y80wmjp{z>;~~Wp)FiD{8h(hSG4&vmKbIbKVZ+Rs#B8L2BV$lcwH3sq\n+^+&fsa$-spN+3$)!SG8sbKRL>S|xtFo<GA;Zm@*m9-f<E9rn40n`B)WS{kSOS!Oa;~!x5OhF46DsLQ\nYpPijB-G&UM#8p^s!uB^y#$*wS=aucIVf{QYDS~UsdyC3({m|n?T13wEBTn!hOY@oAq0#eH55MTs?9a\n1D`sfWq-u3^4Y%QrR7)N*_Fu`aYSpw){X79Bh}3dPFMHqf{4LGDqNMCh8UzRdC-|nf;7{9mpg~SnRkt\ni#;*Pp;2p)#(Wu4iZQ~##BfK&4Ip7^VYw_VBm@E1qfnyEf70b$F{DsLo^ShzS{6pma5D4MpYn_^X6$P\nT?OXS_w<6Ds|Wpo4C6tQm%a%qkyiw{LeKDwJJNqX<^53?RBtEJ5HR^apeeK{#$ccNIEQhthdrZ&7|<x\nbe`g0TW09*57t^nEI-J$c^KN!?uMIAsNs9g8vJQEf@FC7vkZF^U4`}Uha0XURjF!$_%<4t9ma3{VSM>\n1Q5;V4ptTi-f_tLo&t9iWBuD$%Xwa!y^!9(`MTW{eJ8<Eu(+tDRBUC}VQ6qMvbqvO8Sno7gUi43zt;j\nTO_W-kMQhcW$zZWgu&c6eVXw`6)||#{od%@{lom~sCn$q}t^-oYMA_iJ5?od+O)w!uJ#Z!{IYjXMhdD\n8WLMbhf_(?g#V%D4a>>FOh2c#Gg)RT0FU=CHR+DkCeyaY<tpKW$KCs`N;$4S8TRh^T1S?;?1hW5m+*%\n}wZ&h{W;^J8cu1y!fxOh%;+Bs40~oFm1$ASHvLD%;ynD6|Rz<!?euog5Lg(-|a*R8BLt$3i7<qbcHPU\n^Ao5phMubm-v~l;lJXXW>a@~t&|?}C-8&eOH;!pjS=s9Wul|B&4U!9vkd^-;AYZXRA%FA^qcH^89XVQ\nz7|^vD*GxR+9Ampw^E;p(wMTa#4`=Wt^4|TJ8Jk?$HOu#TwET*7=PI#3*r=_{#L#%s}17phoUh|76KX\n=ALcFCTb^bf00;+(J+}?Wn1l|h<7co=yf7DjXirW*6Ly$ZhWNWg!J{j9TtxO+ay(P<)q?Iu8;yFhKZt\nZtTRntAKdFa|?C+{;_>_78kjJ}uk!*y4@=+{|XUTRLd_;iQBEZxxFFa9%Vu!-h#Hsqk&#1wu=8M{rEz\nmami_5^&$lV!LLK~l#g(I1U_!v5T9JKmD-XF&>&3Z--$8v5woiDkQ4CIz@5d9o>0Zy4{FtHpAE^=(6X\n-eL^Kwkct@M2MFD7tJV%2+EfH{C(0Y(d_W5p`}>nx9I>00;NEFokV&v$Ks&g0+K#lXQ*e2293vjL(q6\nB+h}G#M3$PxatWJ5)AUVq1yD_T#JvGJZ2KPf~>J;YZ`;d*chf9py><{^o|a>kQhyqHi6lheY;<h3!Y8\n|VxVYWlfuv4qus%oj>oml=2DO`dPKH5LU_##|Jp-=Jpr%n0Xk<c%{;!8{p%^xgCRJJH|6t;w=g~HE{4\n8d<hqR9Jut|T3QlIFc9Ae`$R&Q}xkk-M(}3*lg%}`87JH9v+%b+g`tin4(19TE%^g=5EYg~P{NRQEbC\nw>`!h8!I9*($Jc)$FHNs+NgUiCYA27P38{l;`(f9y($#Dhvn@iip1{wJm9;qvcB4K*Ar3NuVs{Fg8Oz\n}u2dQc)2{=16ZkjMxK}afPntwPSFJEYLI8RSPy^dUd+_QUNhc&S7vp=&KCog(6aL*P9E<@pFDhZHLnV\n{g%l^9=3@x3cL%B%jRW;R6|nJ!Ch^_LM!d&4S|toUS%3PfYA94Xje^3sl+f=WvY?adZ%`WlKj;4sNd_\nxYy&!=5HdcU1Jq<#;;a^CRuPdr7&0}+8-;6rFU0#m)LzU*wR*>j((2tzj}$W$N#zT(B~14ZcD<uyOlo\n!?#l$=;;1V*kIy*S1sPY7q$-qhq-aYXXg^Wo*sOmMIz%V<!vkw7^vUF@PUN-(x8e3?g-RH5l&+u-J!q\n32?db~Prsx^oj7^*}uD<}kVF6k&p5My946klOyCHl?k6^0r(p`qXJs89l*C!A@yLz+(~T_Dj>{#+eHM\nJ?TJ_vWH#rOI6xE(BnEclH321BT8=tBn7v@*2?xlyHPRXj+M|__hE7y;`gxE-%aa!o`~1m81h+!Ho9J\n4q)iOiiavnqqh}$YhrnGk1Y`l#;fkoM>JRU450#(iB$`bRlKOD{FlDX9Eofhv4C$n!b}eTY)Sdd*;12\ncs(hlpi{It|IGxe7Piqo6tAugvK6^{hi<x-qKfpsQ@ZsVoRwxFQ2`f(=b!y0(KU?x}#}PusknZaXmLA\n%{Ip{AKjVs49v`E59s!Q$$IUJ%|#JgXlVc|z9oUD#!<HMSXH}YBm#tsGibd@!IP36-&eyXIrC2^cMhn\n^P0PqE;NI%9?bBV3Kh{IB7GufgoT*rRPDNJ8ORGg=Tls;T~NfF<$iP&cxBoMSQa7J#dtlk>a%@{)tB^\nt&?-1HkEmOwm@YS(a`0tzw{0>5;wIR+J&W!~GGD54JLhC_6Zudj4+;KciQIg4J`|>?x{cBsze>CGPGs\n&$&lO+LeLDZht^?>SPc&`whsz&e8Z9SOy_1Oh?dAw85s2OgXMu-Y3YsR0qt-S#7;wj8~8@Q0e1AmUBs\n<;zn^*@?;}inh6`?vBY=@suH?DRXG=hqB;3U)8BdYAy6htZUCiDDMcrf6v2QWT&e-YIw6wnlQ3n2Lh}\n3&B%iFE8GXj_Q`FYfnGU(>DF5P`9@`nc-fY)E+uZG+=&J^Tc?7KOSDgcbo47Xc!yKpx8V(<ar`6-0Y5\nF2pz!@6g^R_BEe_H3u7NndOTMWr1bZIyA`em*X5p_y^=Z?nL{;yyebXf1mB%~-r9NLuUz`HuP(czEp8\nx&4ePe3$RaO{K**zpm@O><E#S@}VlJ$HlKYFgvP+;RFQA!Sd&cPms9xjK&z!emZ#Xs4KI;3N)WNOj!J\nVkz;EOHx*n1JciV9<WpN+<=lUIO=Qr+8N=hETrN)MMfMC3eSaOAeaOK{M?uypu_z%bH3;09;rHQ3EE{\nc#olXtaNd40^B>G6=zE+_JsdTehEt#|HD_byRI-1ZqwHT%2M_*+;r^4hZQ4XOCDAP`FqKAkJ$bJO$t3\n%r4`P*$`#_yAFvojUA|`0N{XpLK1SXI~oLY@}+$_o=O_=%d;8INYFoeWIG7PMT6ubEFqtk0!nbX&-o%\n~n!_todqEdOl!yU8qs7SE6hJ~1HYSu-)Y*q1GAT9Re8CNgsf?L;wM%!3L_w(b1f+tfh?JJ1F0R(%$NI\nD7DFI*S0GJ$z+hQAmvr9H6ucG)!J1j@YpMFuBLocJc5hV35q^ag|u-fB|lS1s5=Y$2=6Dc@TJmoFZy)\n4|z~+nV~l8GkA!XuQc07`qv}w@^4#VmaNqQgbKiEiYNV?q&WwX_mAfBxFHgLqt^rRa#XdQI#9}~1xq}\n~Y1If5ZicmIV7XaAq_{3oaFwQlQ21<>F_ua-b0*nyZbU)VZTT*{$#Mw*4#i;yG9y0P{0!!dgmihL{eE\ns<@9RYO*Jg4CLihtlD-mee2bT=!N0cWZDTW>j*#^^)7|)Q^9K<0~@DDMpeLNTbPj9`d=(3lfV*<-$_M\nnDfs$O(%o(}xmN@cb1{vgZlx=_kA9*mO9%ewkyFID1ZLxDy3PB1jc8SWmsK*|oU5I;E0kq~VI5(wvm%\nMfT3509+SIR{g0avqeKG|hf<SrosJq!SGBs^rDNV>3To-O=fo$}fxifBbSRoQ$QzwhdWSFbP{Q48YVi\nQ-3bm4X@%bDg|K5X<P;vCkn6~PrhN`$u5pzhtzxQm*7;6+ZjI*)23BvPM7=D`7;}TRi>9_IPrV67uqX\na!vuy3Yg1?3x!^eBQL2L*aSV81@;W!n&XggiiU)rr!k?OzY8^f;9pMcdEs}YPZm2dWfw~AU0Ak)`Wav\n1Z&d7f{okn>_x2ek!U>aNr+W)r79KIY-XZ`Jkp!IF)blgBc|J<ZRCp?B6xYioy+gfK$$;EitkD^X$VB\n+Xya}|cO_%2t-onxisGh66mW=@!?GMUQV{r?rXn2NVgVmfde32ODulT~_uOa2q55&0EW(-}m5@@*t>B\nTP@dlQ&k7I@UeafAXbRYJ8C#`@ff{^wCpzhV+3U`5hQ(ZiY)Rv-zzvUP1sjWWXGd^%D$g5&VuziQ1*M\n@PE#RiMsH9r3T7UX<&SzhaNw^B#%1!w+}t->VdfV+$#$#RD@;QUmI!V4c4Zxx@<KM=OwYX4S{#dm0Rd\ne!SVs%{%m<w&()*cOK`vMRjfGq)R}i_?jn%TVsAu&w!sLaXz=76rH$1NolIcAbk^9wEr_9qa1>$RZVr\nElM>^YokVV>khmP{g26XO3mb3pLG`KFwBh2;Ahp5?62Ewk|6&gOMG8bU|`SR|%l2{zVDTAJUX21_}by\nCz=)NMiRi2i{{NeeB<QH9Qd@rR{&>!7EgbZ_^A+~vvRJB`gx6Z6J20Q``#gvn@j3<x|t_};y#b~{rY>\n?R(jHc_q>mskrWE~Z!bMdKW9bd+9S+^$t0JoI<tX?@f6Lqu?nv@47q&nBwCycndm*OY{cayJzjq7uCL\nSq>H>H1&#HcvE+Is>*^1ql0~2$~CN7X8xn%UE0I&PFcGC6Bho@)K1zh)c<4Kcw(0t-^>H6^P^Usuzn`\n;1lmo3i#CAXY{V(j^Oao!^mEK7-3hr-XU?0ovIKR`>Wt2hV!=~&A``PAX2M)>mNI7sfE5HLkK9ySSia\n<KSnbJQ=$`IzaR5*qKBd4fbar~C&rdU4S+iA1<1qH4GoPw7WUUAhE=Rg+D*DJoi4?q=m#Y=UMUu6uZY\nT)ojzyndPQ!{%SLu(UK)SnHDVj>3(~}&Y0C8jlVX^?HmSl6sAZM9oC511WVUQ$!vyIc;RL^vc4sPkyO\n!9mJ-f-`U7aYasc`5n3q%%Tp?JjigV&=}<iq90G?@Oh<1n>+jRql%te)q5tDf!}BY?|6h!NreX5alJ(\nP5VIbtgxzu!XsrO`V$$Ck+_HG;H*>>8_F3y808SYB%k}j(49eRb>Auc^lWVjHC#n?hSuj>NpIhx%r9%\nHrVju+k&~*=omwMqP$_M$23zYQAVuz1l=Wx9?y{dayR6NROHY@-M8^5rS#=Z_v#ydba;{n>=@Tag&;}\nKZba-PUZiU8+^jjBHq;#QJ)w}P6pS^mDe@hqO3Pu{0^bHfn4`JMBQ?fjK>!k4~iZ2~UB^9}I^1qrx4y\nlK5{VY}|AJy4coG>Sog8ohi{M~NYFJAsW*;3NQb+C_TS2&6B10^$@xebrcvIWpA!HzOXtzg83)9l>RJ\nIUzG-*Spaiqt%nDhpCqfWX)sS6c_+cm1nzTPI%m;b5IC-9;vA%STqtghi$^B4Ao&4opuF1;CO{H#G;q\nU*<B7hS^Ei5pmu$m-#^5=mzDr*|&gY0UN52l7UPk8(PU`7JQ~m-tQI`<K(MQoN;<cDD%_2-!b2`dsq<\n5OPOuUcO94;3nbXo_j-7%rn|wyIZT$I2RbM)kQNwD*%7D8Ies`KiJsri@tbf|(KuSHpm_`rGr8}oNVr\npJOK=&mG!n=XUgoXz7h14C@^J&+2s%DNjo}D-JAeT~(GSWMkpr~|d`{5(ld?H|>(I(mUOuqN>LVEgt4\nn>;&F*UV>0<^|!xA}kVHu6y9aAQ<^K>1_Q23=e-wt{)wou|SH#8Dl2M(SUmVz>`HqDopWmV^de5JO^;\n4BD{Cl9~`iE23Yn%sE$BAkPP#<aI3T2v-v?QA~@F&ZFc<ybgmH^_@sYH69=l@u1jKL-^EpE&DhOy-WU\nkv%wK>4a)3$`QFhUs#&a&`RaawCYZ3q~7W&EK^mkEdS=@>z}@zDoN#+O9}Rm{xVR7G`YOmAEQ9<qY^j\n$9OWDq869SmqL!RN!Qp1{(~r+15QF8!3CT$3$xVK8fei)=i=XIs(cT_7?)`{=)!)~dyqgAJ?1N7odCS\n@4xoM>~0%c^{n$h%FccZ^&vYbkeNY?6bzd4Oc9vU}Y#1@P4IP&vwr3T(a>wuN98}9J);r~muD~2kO;O\nC&q6)L2gC(Qs8?M(WnLrTZb$iwJ;NVSpe?3V6FKiWF#ML#6kdQeE=mL(6y3liK`Cp;`)^q+u5Z%RNVP\n1G$aX=@E?V~5VFnscCW*2F($WfF^}ef!Q`(rM$}G-VT{;}Z#C=Bcrx!Y<^WvC1HK=6(GwG|U~3&_ITC\nl;vxdhEq8<wBX^^Jn<sznb_|x+Hxg1f%I<f#nbkh`Ga16g!YL&ya>;=3~};qhdvm*ICE?s2Or{ig%YO\nAAX3utKiVUsX?qFupS68CJoUh{I$iP&@|a6F^6L4-0eqJ|O)U)=je47RMlophT5Q=bs4|IjoXeZXLPr\nQ4-X4-|%qYL)V+@G*@5+QX6i-vA=BZSE{Fti8rU1R=ANMuaT1dL;DxnRt*kKjt;{1Bp*%duS(cbMHza\nD}jBPu?rWfUzTvM=U0Rav9O0IU<nFGwqE<qo%bd>JG<ZQj}{3S2Zm`O$Ted{lNx-3?$}mRQHZInT(I7\nI67!OGdvPonZTQ83JH;Dvw}`A_UOxRw9Afb>NKyR@qG|-pcYx-owv(zrccDUxDWILu|n74<1+X<|^Iv\nrXzy*!55I>dszJAWxgpEbFA_UszBDw1sj$9umnvXL)i&xKB1$m`Y1C9M)Ov4^p5Mb(W$7K6||priGzi\ncj2KO?6Eshzi8nf+{EjY0i!3ceO!>uWP?#ck_Y0q~Oo{D`Ua4Ysn3dB+x!345A%LX!MmG+d(_3Q30&@\n7VA*93Vof7(#3X2h_Z}(-p8fZU>0@H&$GWZe?%7h7^9KuTu2wR0WxZ%Umt4utK(Tv_Vqjqg#?c|^ar2\n5#b_~<0w1U3E^ar{h9g7fuwh+ZL;0ed@3#9bZ(hi<uC*M4{0H^)S2XME|kLSqcck#3eIe%v-VubfOK_\ny~ld;JZIsoZA7)B*}PpdK?ggy*uaJ@a}moB&BHqf-<Y+mE<y1H;KkW=kQk2(iVq}g=T_GLuwjTp<+*4\nZOcxWq6oBb`_3Lt)hqpGvQ3^H%tG0&w4jq@yn#DD0_7a*i*}h2BS5{+rXckk)o=4kp-%2HlL$l}hSa;\nzX<MjjTdtg}em)$AMm&`YS0}ru_N`DaURBXExM`rO7lsogeNxRJ@K}7Mx;*;)D~01DdmetGTTVpQ^>R\nBE&M71JRo1x+J{-{L&4}@FO<h&UYQ3E)+~?*PuK4YRt48wvP)m%)(AhqM#w9v*{SFw*1s1en9!0G2y-\nw(a#k&~j$<Yy_-XuO()m|PwdSpfiCd2)8(-g&d*&aX4AKW)BqEtw1cMQ#JlN*>IoPXxBf726x#7ppn`\n_@KWa(cmR!E~f@4$K#PmJxMDltySCfc2IO9lli1n&ooe>T@n@Y9qTp>1sea7pg}4p(goN^~UAo&4q$T\n1}4{_s5(_q$e^UHi3oM1yfQ>6jcCRixvf!X-jhCerS}r^b|%MxPGnvW;<k*^QZ>Z0dG(53tr4(lN-kD\nMcFEiF9-vOX*U&y#PUN%1?|rbOP_jT6e|_G8g2DP9O@=aX$_unmyh?#;B2`Jmv4zes5{o@p<Y^&tYMF\n-WfdL-5I6)^NE`~4ihc^j_#M;&`nP8lWw;aC%=H+45j{h<vFXm&`8WrtZ+<F;`&sF`Bk;*P%@dN8&Fp\nTD*G3UV8(CZ9CaO$_-Q2!fHO9KQH000080A{lMScsmyd-w+c0PrCI03HAU0B~t=FJEbHbY*gGVQepHZ\ne(S6FLQ5oa${w4E^vA68EbFbHt@TD1>s_-UC7!#dvmd(UA6#OH?(Q@!7yY+qHQj+D3Ej>8}{FKca%g?\nrk$ioJ8YN{1QL07y!V3=+e#|K3b|g3ay=0Cbt|^q+*VvS3sMhON^V&ui-KoH$WpU<E9a|pSD0L6#=-z\n1kZQJHr$v!o6g*;Y03u?ihAaDiCN#YNQX#dph}ikAD)_+Cs6-VfSG>%nimNocOp&{IXGGDSI~p+fot9\nT=A@cV*5IYeCFViiLx;r1a(r|#c_S=T@!iUb%QkEiv-9LEZma9~0o@k_=tULs}bB&ZbJL4|@q6Aq%w0\nJ9XUg#Lk$VHwS-iUBoYJ=)Q4ZLnPj}RzCdD-Be!E*?dbQJHDQ&g3jO=4sMYY~Hg_>5~I?5nIr6B;oF1\n9T0p*sSr9c+Jfjt&I}WRFZ(yCvsQjtqdB#8$-{7QZ6h8O5p+H!eZbEodA!&rfUu`jVH}5P;}P`ivc2j\nM1!YBst|<>DT~EmFvyBjYf|ZZxl<XRl8L{sl&rWixAX>n&d>lO&5PBTO<uOHYpGcr{0)c0ciik0#E98\n&24Zqm++s{1e#FEI*A;)RnJjq>;4P|3h34$7G^bk#hAjuX<Uc4S)d+Ola8ZF+N$X77G1N1H$5F>ND+F\nT~x8%dfR$8)DWgBtDfkSO@>8JCb&lvjk!`VZu1SRcrM#lD-vgU93(G}0ciZoU8qggH#B%I>*{(KCOi3\nHqtW41OnN5m3%^OR|$h#|DRWkr#xT*`~rJFazt&n;erc#ytkCuyPic>c|T&1P(9_>K7*PZ_p8l$?MYz\n9F8ax;>X4AQ0_2!2f$NS|btcg5GmTJlO`sR9r(6)hJ}E$OPh2m?R-JMij?RfVbc}PL~J~Q&fYSQ*ifp\nJeQeL@|^=M5QNPaeP|_r2NrE~+spwdn7<Jva>$6?$^Rqto^g+uhGR>fCr<1cBQ<seMHmO*+{PC&pg~z\n?oYYv!YFChVUr10wPu`XUfd-^wsi9cau*M9yLif=2c?DSnd=1VOC6vTi(+O(iv_E#-;txpI_NWgU5qe\nCZ9;E2IECBb29kgbgRuz;=LfON}WC;PitF_(yo-r(cY`fEjZBmH)lu>15RL~g6Ni~nTdgm}DCa-G@z)\n~7^4Ygu}r)U9bjzSl-$!yW)9x6z_FHvKSriPNf_DgH6IDEwL^T_a<j91VQ1gm?m4+!Wq$ktKT{C?mVY\nXSEBR^@K?4jb`su+ICeFM>XDI6%);bJ%_nJXn6(wBUpQw?-#9aL_a$PA?UVoyc{f4u-%%UIWT;42Lq>\nm*73X)PVwG+mVs$OvY_7!8N97u`Zl~Qx#n<CzF*Z^9j}9*>{+1CPq$xv6stbY?(UW2n`*bytF+EIvBV\nylhm5H1RGJtwA@1-Bh(jgLQnn6<&@c4juimdkR{_#*jyWd8PlU2x3s9p`m|m()jy2YR!PdaI#i-Ubr`\nGFpMM4Fs}~S1-8r5TY?aC9rfk1Abr@}l?kshT-Pt-=!$XGx-=XCrRoi0t6V0d#(DBV@>_=`OOVyp9z-\nAiDD)>T3ix?N8hS%L-q3%PJonFLQCX}~aRm2G(fHlWAmrr2=;`bmF;(3HHv;C@j@KBE-7o*`MbHAyeP\n6251$F%a;gJ4_XDZ1e>?)Q0~w6}s6IisoXu&+_Bp)&CaE&UzLg(}s)?=C`Iw_LeIc_zWRv5+1~lEGXk\n)dVO(F2p_uA?DD>t8}seKz@UJeZV?tp01#?`S9)xW@DyzRaHR7jW8IfkGjAv%BHg^&<42JV%WfND9lJ\nAhnY>1w-6D4fHZssu0<gAQ7fUeiEY0Aq&y76og3zkCEfE4c68;W2OS<so-AdeVJy?1Eiuxy$&5~Vk`Q\n)O9}~!Rd*OHej&!^~0NCT(rTc}mqxcE&yf>9RoWHKJn#g^}x6<$jhVGpq>xJrnHeN`AtL9Q`%Dg+SFB\n(=pCo~*&7yeB_7!s%(IsbGV9uB2b^#A*e3&-l59S$ssUI@XTQ9Q-iD8waJI7PvWwdq@ki;%1kr8rNd&\n`IK@vB-!V_67z?!iZvrQS3ICOJXL*6a#or_OL2ag89Gtd`8Fr0!~}=+g{0D>_m|#c4D;_ETDr!Svzyl\ni}rKO11x!uoXBq~K*r&GN_W4_G1<n-lGJzM-QB?GM#9pEs(EWByf%n@tJ&adE)(oj=)r?S&>(=@bT55\ny7c!L8bYU3Vk!#dwZ9K)<?G$g@aH*hk;#U3pcaJTiH?Pu{9lK#QRlt$WN({50GWuGW&1guS?a&_kiri\npIU2gA4k6P!H&ZnmyD|Dp&-qexq5ZOj8G-&8vv~KkpU|oX1-|(zPWzWCT&k;wgOR0E1WkVm(cHvy$4J\nW7-t9v^alN6A{iZr`Ko!56R8PniHTOK=7PQUisS$v(U5=e}Ixrpssp$Qa}BqDjnt&q*^(922oD^=%<6\n%M|8ZIvfnD5PegMgP9nkFA;i>Vsk&&6+_i3Ix||e`y>A)Yd4(etEHlY|xJeq4Daycj*rMok;g*{Z>z*\n8#WL05$dukt1lY@Tb-0L>%RD)P8ESmk5-Og?SD!^9%)ctlAuwoh@Mqx&ghxd$=o0MpTfmIuiw%MejaE\nMj$|gAipn+@(IqPE!K1qk9d<gIno`}z4EFf3dF5|VO9KQH000080A{lMSeKDZ7U2;908Kgo03!eZ0B~\nt=FJEbHbY*gGVQepKZ)0I}X>V?GFJE72ZfSI1UoLQY%{yyz+s3uu`75?iG9g<Ev~1UjHKAMCR$|@Cvc\n{6*WLymhl1p+U5MZ%@BsP=(e$Qifu>e6zc5~;}lSt%ZarV5QE45r@c_C(HIw`U&(H+GLNj9IWbZ)<9?\n!hW97Ks|$uX?S$kCQB&sd;CXXG>A6R{%hmhezqUFJ7xj(HB3;ROWG!<$dvPRj4eDlfJktSBdQKn=7>n\nBb631hezQuo61Coda{s9X~A8*dUO2tIQqx&FBg4rL66$rEei#&PO>FnZD0L(a`yV&$BXUTr*f6cNsO4\n;ckGg!Zh!4Y<wY4MGQF{H<z<=z3!*Ze$~>x`8!|(?FKTcu9LL&G+U*GV_u=CBee~)GsE%HryzkT6To%\nzX{x!>^rAp!Fjm$ORTs_qJBm%r=>W<fxjxv20&GL9DZ?pWGSG6i+w2CL!@my+NDmCDX>-|oz(}|)uNu\no#$#V2|i)R77Jod8c9tJIv>Tt$%nS_|U-<5dzDpk=kCGM9}d)`{ARBiXLj$g_)%Kv=lybULW*G6xEc+\nJ^w^l-9aYlmfe=2pG|c&QFgnPfuO~)rUeC_yTN<iz4rW2>T*1XipW;Dgwk7`3L-pE`GUq_3rG4lOLnk\n$3Gl>IK6~-;hoUX4$3sk#EYTmKIw~tM|jv&&OkF3S(!|cdzF%Odt(2E7=yJQGBrVPxlo#I7?pM^K{0`\n~Qj20C#Z8=)Qe*(FhDg|<w_mPd|12&OuuM>El)bJ@Spc~6b+Le7Pr`#oe+l`WvaqXD1$<EB63khPNt}\nudD9Y7T!qI@!R8ADqC&p``Wl;cc8EMiydrBCcpPbjR1NL0zfc8NA5GPvFJMUxm7GN8xSQN!d9}Wg{RV\n>Oe+W26#Ud02TVW6}wr5+qSdiL~Nrji&0|HT!TW?3!@sf&255><eA0wM(STa2Xu%-~rHwqNGx$KrGi%\nwR;outUpwUXVqZrzDfErx8pYXu>9apdame(IZ7`@?wi3bUJD#(yVB}Vixa-6XU%=M&zSJ68~EzYf)q(\nzRA>7_^$3Y&e2;L7qCa{Fg{2DV=~wx)2y5?K(aBdAxl%Sl*=q%1AnFfG*(GG1_3eC45XM8E0+p6nk3A\n+h6{8!b~=0Fr39js2B6~%u}Im2E0UA~{RFB>z0lr3j!O-8P7DfAbfw0#_k<?_B1Q{&w@TDR6~KdRg~}\n)pKB7+Vc$`99Wjqa$!CMR%U)#p}=<UhH+oQ`@Z=%!VpN>yG&+_r;{n^Rcj~$3<^1i*Vk6(WH(Yk^p%d\nT~lsB0OGS6TG*>37c_wYmZctkzjll2k#|uzR0&i(8c>VzP+SxiL@VYz`Vw2;;eoQ@D^)d~YpmT+Vg4B\n6AP3e9qQI0AJLtfJEw8h$guN9)(8iR@5hF7net;rxAzn3qG*O*Ogx=Q*}oH!-fH1N#m_gf!h>ZeX@Qx\nxFQ(xZX#EO_=j8{=XsV_fQ^|}9>pxQ95@ugSGYn!qD2I`oJL><5LpTcLR0&qjZ$3>O^1~7d;%BQ$9Qq\no5LZPWZ*LL;x)%(-s)EWOK!Y>iE3zsuR*JcVPZQZ~yxkYGVDOt4#eN?^fO03nwr5Y_3{>j2b2ivlriT\n31qYbz|L$)V5mYY|r7YJ2MedwL9_)`x>;kaW`01VlGcPVR_<YhF8VNZ7%-)Z%4IXnYT-P<ZNl+UK&ya\nzJg#FXFyDDAkajDB!h!OjA|FS4a%$AbJasD<@#gW)$z!Q0%%YjHyHQG;oLQ5F&`A{OS*ealCVs(+YS8\nD_(_u9M<5Qq<gSA0l<1qvlPsyuRu=SQudGux{Wn5M}H5XLO?XW%8WLv5HfZ1-3}^H9Z&cbPAHV&G3Wb\n48mxX4*xhF2Y?NR=0Yxm77i0<neZf=#7Wzp|4gg5vZ1NiqY);aERE5K5aT6zCvEmT8W~MCFMortJ$m%\n`uLt`aKlaf%?i>E>BT2~Fkj?<0yon9KY$9-mu>`JxLG5%(QC2HSPr!c=%K#~BSp=*L8dj7klx4~KZ#^\n*u_K1I#;IP3!A@EyaCy?9eOx!|FmrK|TW@j>9iw;4{#=l}9yoG#{lY+J2?4itK8%i;=hCLWNzr;p;PB\nh-YPj=gDn^VK7EQQH(dWa=7_*ny^>u>7zdUjhlQ$R9kOO#P<t-Ce1Te$(;>#-c&>@4^#(<s742xS>&T\n#If)FM7WlS=2lR!nz+!8-y>kd<_xf8WL8yUF$FG7N_@BQG-r<7Gs(RGNs2}=7$7f)VHaSgJX5t!2vBs\nD=^LkVZm3_SBiX~u3Te)31Gv7A~o=WW5zTCNEkS#8ST(9L!i&7!pm%0CbF(&5T#w^is1#BbBG!C2Q)@\nnMUXBH54VTzTEc~BX)Z`jK}H2Pu9`$<7_2gF6Rtky(ZHr5f$O#ATwjKj^`$Nq!88QX@M1rE(q^*a`0`\n~6wFJ^1V>@DgyIrN;LX!X3sZ&E^oN^g8h{cDqlb`nyx=|3LP;atZ2{m$GFgTZjLzb|qsiRR^fF2nD0+\nV~RGUEUdIJ`E`uy(;rAD!(aDW~AHfhV9#DyO;~7@J7Qr>rAXbFfTF%4W*G(B=Kaiosi`Q9kb5zRBM6C\nkM|B{){#~2LoX1p{79sgyoainE)DqDWkCafQOa3gy36(W2cQ=Y9jkUnU_#k5FJD#25A6;5_MQ$0I1o+\nF1-!XqE%7bQlj7#uytuKD;N?`eWesHgm9!WK6D#+)pMQ|<vgsm*K&QuiI7}#D&#s_!l`tx%7REQLBdf\nyR<k6YYk-p%`jGphpIi;$dZ=7mpi=YCE7sOzY8p!$+~JSWO`Law)7L*8zrQ$ncV;NChi>$>?1O+0>2*\nwH?*LT(3_~{Zh`L+$y-@s53GvPF9wm(I!7xoebsAdth7c;;fp6qFEL!Hf+fWI_Zs}D{ZLMT7<uFS;Y<\nL|@!UaUpRSj8w$C0*=g~*f<#y$klpB5(klepuY^@arHP61+Yr9#nR?cvBu4DS!=*QZ0#eI)ipBGZbZ-\nc^Gn-1!+^4h<YUn_hAX-^~)pB}^ATJg0z^%G>7BpZln?)a4|FqfleI$WZ=AWu5@i!GpSR2Y)?adxeZ!\ngTcUyp6&fa?MdY1*Sb<8!ZsA=<hDR$lo(OZ0{q<fU+WiD1`_-;b-wrzfYhEi<*%Nwu5-&bgkRl81Ez2\nBBo_25g8Kq^N8ECzO3YO=$KNmHZWU%gZ2$zOQTW>SNZBS<I*K3<;s2Vu!(QrVMaDTgibCEMEU7<NgMm\nZB7Gy}s@H*CVhi;lfZVEP#S7I!(tl0IOQ^RdL8VX2;=B5!O=cB5!GiV>0RzE$aENv*h&izHid1Da~-B\n`4#ZMA&WxmSlk_k!?Oh|KK4dwpVFUvS$1&*>Yotuj>;4dyv2H4Ps~PyTNOpmdhtc&iQe1BAm9I2I4+A\nT_LOQOBpNMq9;ZByC7Ma!W|nkQi1O0uVAJ?p2=F;6Ah;sz;3a&>w=iepg%D*0UHOgN01y=rySS>*%3h\nCXKUJOZIW)VidJuyqRf5El?NTQ243*lN(`>Pr2?@=?ySt`)+nVJ%f<pvVlM3SL=}vaaAcgCcCm%>%e=\n7F%6u~F+=8*OVCUe`xbs8HsCJxXygIpJQ&*zRKOtjT|&*J7y+Kj8_2t3HO1X)%p1ATmo?lF9UOL~rdk\n^l;Pq-<rMjWGpcK2nUIRz080Svoa*nCH2hQe|C^|doC_>7?sb&A<$)j&+6H_&q@bA6HPoF*ht}3GRwO\nU1pL!<#`6(<qp;C_syZII!pB_xqcNME>FLsVd=8{ZCUyYX0Zkcz|cnH_!k8?Lu!v>SU#4?=K-aJo|m^\nL@)^L@(3@dQVQenf?~w46J28kX7yO`Fh#TwfptcFaAfP+BltxV^9Q_!<br(R0J{qIsAq6!~@5wX*R+`\nn$?;PfwcrWX#uJQ>7xN3ijVS}B!NV+@PNItGg%-Aj=fz-0H2#lkJUl&1~br15R|WK&!09mYLm3x`h`0\n-1k=26(A|{XHEEzBZ&L|<z4<)#G4I^3MVoqY5AFAB$-C4xP6;6(P2IrvQ`mP`jm)t<*Y`c1DW_p)k$K\nRtonU%OenHJ8DwQC1c;^wqe6_Z@wXsjLkOvXut^qv%OTT6YRcFX{!n7=^`AIyF5$U=Oh1FPUQ`_A*t`\n-B}Jiw}uy2csXF`)jLo7fRo#u-#>4h!_7W=6wJWNrq7S$OblK8?1MHt@8rkl5ZZ7B`T6m|4_iv+2&V>\nXuUT*|s|)&o?d0oAZf34H@svP3>dl9me5y-LExO@3gJU<>`&-nURkBDh>;M51t*iIWfa~EH7%Z+95<;\nHdU{f4VhK+fpU6yfZHXs-L2~#yl%z)e!jm%&9~DpIKMUlvWASUZyda``Ox5sJI|C_dC&%>&bepriw0L\nicSxcQG%d``6b;%XX0?3GfvDwf>;@1Q?>wM)a&0f=Oz>(Erbu=9Cg@bn<ZX9|LJ@UI-@rRic7wi?i#z\nzV?YdsKw<Db?^rwTvCs%0DU8pnp-WSa`HebTFjtg8+5{eh%U`sAzAQM~yyRomk0quM7ggRs%fX7#C`C\nAa`?wlh6tR2(VU23~kB=@Usy}MjB!p)SXnOdQ~G@7v<Flw!t)-%nc++e=C_!3jU5^||Awbr?Fj#xC*%\n%2co9@SJXWBd2{jSYX$HhI{=+6Ef;Gt?x7z|8Y^7bid4`5}brT&<9iH`z5hW3>|98x;$gYQPn~_H5*C\nR6%s@6|4q+vdeYD2BEVupHS%oIV_6F8~^f5jRfH5zq!H|3P_r@1Y0U<g7Cb7%7W(4)Pm2Y#thK-7p})\nWaINh~zjzvqlWaWrZu0ox`O|~xG@cDk)p$_#Dpu>g(}Qon+dqZpb@>|rz;s0ofsN|QK!B9j-`OP>MrG\n#^n{b~OIE*6M>=+cuD1Klro7%6tRHlaceG1d;BZNGK?{>-K_1U}NJt8xb`tADnz?S@`f8PYL(OLmew)\n_5y9K5^Ehdp+egJF&qm)LtBue~hUXvIt=SO;A$GSd;=<0UrcGy_da@lG$M@FGh=EukpK5&*M>%)c9`G\nd?|!m3H~yUhQtAZCsmq?vi!R+#-lJIz;Z%L;FPa7E!%BwAmPH_Jh0~G}p5;9^waSU8D6Cr|YhV{HJRQ\n6OFD<Yvaf(6{<V&byI+}T4(97zKH*VSLQke{aFBe1!k|w$!KiUE@%;Kf}`uj7Kh4@H$-n-Qz~O9d`qr\n-PiA7Bm2EIFSLLE27H>cl<6PciAf(ETzOXy(L$*Vc3B1k)C{IdF6RS3mMVni)zy}NSVIKmLv@?@$pFM\nkgP>0p)H@Hmc7B+K+RU6m-o5Ko}2aPAa9fo+GX=l0Gbfd^BoH^=@Z#&>6HaCxfoN)|+x0;64-GrHXZu\nbanV~qOy)hMGjm8iO_URTxYrq)}fz1meRBHOjxtG`*`kv|mYI~v*kZfj2eQ75?-;Ko>~)^G(ly?(t1i\n!&)^SK$2(hG(rc=Jj@S1KHZ(h1uKQ)eiz5Zg7ALIkV6$mu9Oga>NApXBk~;d$o<jf*|lhg#B9vP)ja6\nAT2mLzuZT<@+?Wf4b;jGb7R5n9gQm9H|`8@h@@@^_ULMjQbWCViIBZMX3nv*VTT07D?qDp(T6iwx@pG\n;(=9iKSKR@sQdF&$Dv5J@DF|~;bZF@6@~liL=^BkZF#zIh>v-%!n)@9VS4HGI0o3nij7HVXM7(A9At}\n_7?$r@MygCOAq{~VWJHRiXgRFdnsR9ATKKWturyqD%4%r8OKD))cQkGs!OZ>|x+-^ywoZ71Z-i;@^V!\nyo(*)b!9mswx1h~lael06pnlR-^Wf(<Y<G2H-L8H&9DTelOsZs{&LI6Z;A`=;#1^4N7MESasY#+~qo_\n?b;;4>3%1HLdyEAK|H7QS|w4%9K_Q<G%SLk$t^@@IL(<3D{FUR|4DrxMjP1HqQG0myfAmA1t5$1yD-^\n1QY-O00;nPviw-|cqDJ~2mk<i7XSby0001RX>c!JX>N37a&BR4FKlmPVRUJ4ZgVeRWNCABb#!TLb1ra\ns)mUwB<G2z2?q5MDC?cndj75RF!bMsfc5`jebQfs0*e!xUpe4%Yt}N<EDvldufBQYd7fE)Ky`tZ01hG\nsGhr^j?o*61hl516RD^+XQZX>i{JHZ;IzOq_rR;sp^Ym+hA8q1r88Qa%&#)K`CB$>@l*vE~4WYegfY}\nb(AZbfUE*{Hs$*h(-hw(4F~jAKx31?!Z=ylk1Jg}v>y$f0Jt@AgY**Rr(dsv~=NbMZ58jG$evYSzi_)\nUdUpZLDIw5v-Ch$I6E68}@9KrG0zj1hGk}x;-Aq0Ac&iD%BX;QLZ<ZZTP)_HD5$&VI)jbZjET~rB*GS\nCC3q^Vfd?5E7)r9j}*1Xwa{obatljp7z0b=1Wt#!8zI=n+RiK&i?y_yewD*li*DcX1x~h*#`MB0{`lh\n$Z=B;vwbF7e;RZTq*&73&Fy7KmntKNcC%fCw`6f2*umL;_z4^@Q{c^_eDGIsml(t2YCdJ^nV#CX?$vp\nRAD(DF5d?p@B(OH&WxfPdME1j{QETXgOt#H5RUTepVna#Xrz-A4D*YT$^@yYDXtk!BfMl3J4aJQd*3(\n(+Pj2reY&WEvQtNd^t;TSaBy#3qdKQ4>EU;g{%zg!W2V$abRVX!D)-W;d!`4E+?g)O?h-Ke%`<jRZNe\nMis;67K-#j9o)T#y$j8XY5}s9x_&PV`qL9g$mnSp&^iORV8S@awCv2@r>@*OX9;pJ77FWf4X}A?!%{>\n*TsQv+XF%EeO#jZwuR|M-&R5w<9skNUvVR*C*SffN*7z%;{UzS1kc%wARsimh*-!WdF{s1qG<V66vcc\ntn^mHo_}w2gb%3H#C+OH9b7RPLy<{sSE)+XX@Z%drV$rX+kiUb#d!&G$*Gk#%%}b*ijud@Kcc(=yAHK\nKxEGSvS0iy88C~DaVbF6R9&j0M7KuR(?*PYKE;!yhjCx}TSxksOjgzLjTl|F(cJ&kxXK1p3L27hwBhE\nbyh4uJlVu<6crN2hyC$o0u`48xN@WIZ~|4IHSxO-!j}=YJ%m=QcS%Z`C;k?!2tm$z3o8Q&SVuLB%|7L\n-hTUONU(tLL1D;JFd;4csd_M0+->)CDQ7hp#P4+4z(b6HU{QZc`e)OHD&bi5YKm9Q@W%Fb1qC*&iqL%\nLlvc}_dD=SFQ|Zt7M2iI2r|axN%mY*#*+LCDqgBgP6oOhq^P9b+);l=I-TkB!{y#&wfZta@G-eYI7d-\n;ddlp;e+9<UBmfb%lv)4)7aw&myn1lIAfCrklpc!QpiV*=@mu;TyJob`>p5ZXKYYAgQhm1M5rPe>pUZ\nDlXydA(k(D?Xb&aCRRPBw4Mc4^eQU`5V>Qp$!A~%JtLz`3enikenTjhU5;oFTE<`agEAiU4e37uAs2%\nw9HOk`z)WBY!BOl#HDGLugoLmo+;B~;!#qs%i_Cp32PNdKS0@WrG5eoCGxaECimKw}q=^#2tFGI#r44\n8HUOG0UbN9`iuvUI&&XQOz(C9-J!w93-557d{4VmY%{KF)-%bmz$%fF!zH0-AwQ^$jEaK1@Nob6VfMj\neze-l-$H}{4g7L6Dyc;7M8qZR_oN}{KZ$UlqRmVvN?A+S{P_kk2Vuo#GP3ZQK!w{=SG7JHl=xl|nV!m\nA<kW&%{#6+AR4FRtH~eu=FjRKKIyAbpAN3VpK?giyWS%pmjTPt|^QmFTs59Q|_}-k6U5wXOM1Vhc-Jh\ns!S8cOrJC6PurqR|K$Yjn$#GDdkz`%(EuXyMhSxVbbQ~L`VP}c+l*v@$0Yp>8Cvd|WLB8wnOCgvvOKF\n=QBCbXEP9ob`k9Iw3ZDzHiVm;}$D=o~lz@e3Y0o_Pv^gbA<pEa_xFh#kV5J_D==u+j&1_}q9!cr=5Ah\n+Za3&1+j6<jVxH$wqLP?JH(vct`gy=sBc!__b{MN*oo9#7KKQRwuqieSD>7OXp8VD~8%X4hN4%uTwft\n82@=CEm~DnTHcGv$qcY&-QZBp_{z|C`phBo`R$v#1FgU5GcqbW-2C><@-A4eeTNmgDc^vSL;n9-PuEQ\nP%fMk1`B#txC28W%lptHR7N%2e74FRbzS{K`Zqhg>2*u>?20v73?+8`)boF)h66WBxTL}{xz={Vu+)?\n>GmknRxChB($jat0wLK9--@RuvSUi@JZ5(wXwc*r+)+nn&m-At@FpVny~x23am8XDS_o~Q|+=MMbD*R\nG{PkhKI;`+mWfk(#cqh+;JY*uQ%SK#Fn%oav4}@UT*ru*}3)4$i?emrOhJu*QSp<ux=H*Mw?5aq9t<p\npii<q4a+6vf+mtd33onbj-(g8(D6cqH;7Wm(a~My@5F=_0?3t2tUxiyeH0dMdP4rr;3ESRw<Y0h&(kq\ndNA|b0+F3uv{5zFP8oD4RO-Jio=vu@Jr4pn*by80E_P~TOoNyG>1SW{=%C&8fZy?G%$}j^cy=uv>Ck~\n9b79Vy=bPxrEOuv8wz-**i%V=@&n_aD#rk$P5^X4kqev)@6OjPii)W0OO<YRXu~8)ao{FIO@?oBS#L4\n-D9apj~{JBy`J0PNEXdga*{=8&YEmP={ChrnLQ85|4^NG!4$y-Mp9I1Dj=cn|V5VQo$nJlO?iW-<!p#\nMOWOX|5$qv(ys#$A>giJ}EZQ}DL=geE6tATCJ9t%qx6cpoxWDtEN~aS;i%mL)gAW8>BDgspnnR0`|~7\n#Ma64X0?i*e3u~?FgOfFViYXNfVWe2Y|?=e$)A3z5ESJFg>v%Aj_`_zWZ6}a`IMm(Hp&J6nwaVm_s~R\nwXL|W*p`<cZdgs^zf<~a>~Brb^izX4;C@T0zAdihN^`wmT&uNNI6b7EUM{*6dW$ftM&!Kf+?snScH<4\nh#Q^xmvhD5i2h=ZIDqzD7$C=z_ZkKPu+~Q`B_H#Sznk<hGogAJlnWozJd^h4bWYZCtgNnnqc_|rRgxf\n*s-$Wm%^11szsPgycUja}{0|XQR000O8X0rTPNk-D(-w6N!EFJ&=B>(^baA|NaUukZ1WpZv|Y%gqYV_\n|e@Z*FrhUvqhLV{dL|X=g5Qd9_(>Z`-;R{_bBvs2^f?j<VhX`(Pjga=UalyIB)7&AK5dWLlzQHZm!QQ\nXHe`f8TRRN}_Bz$=&XPHnA<9hdk#z=Z%)@LYEcG_5Hn6_ao`vYSX+j+wf(o)l#;rs%=3sqh+brtdK>V\nNL7ha@jMn!sVFL`m0^DIg?i+<%x=<^Sc~_1y^xC2f+@Q-qP$S1;(2aA@hgX5*E$oqiH!wmkZ<1qa{iC\n=<k$0m-%OdqACj#r3DHMcRyEIsdThkYS}CZJ)G8BY(mnTj#S3oQt<n`&_aZ5^uBPl>RLPou(`B-j3cn\nvkX{<uhB-%VB%aX6fMwbtx5t&z%?6k3S4B1Qj**HlQmL<t#G#b5OA9W=R(~9BTOC0AdTh=PIhK%v}Rx\nNRi8kQ6Jmd)pMgiI`XomYu7%6KxLvrJ~{sAA$tnu;w1WCZ(D{O*raW;Cl-q7+AlDGk64-?B<GZXWPC4\nrW*`9|VgwD_%hlTFj1;q7+N{bi};faXc(Gtbo6Oy^dn`c_oYhUVB<rl@3{%4K%L^ZzHP}P5^|Js7stp\nriN`+G8c@esjgLp6EGk$o*l1r3cO|uIxftwVPlc8#g@Il-c~EEpoiDLqbE5l$2nDH=@hezCFub)2fOo\n}Wm-7+Wu3#S?b8l%$~NLC&)E_bWec9dSY$lTuCHz`{^iXQk4DMaKhG{M&wjo<PaG+4;Bq6Xaf?Kb_nx\nwTH{%H$pIm=B|8V~4)A?V$Tyl1O0Z}aGRaK6IgG2;C{tzWB;h~}_h@%8i2-aYUS?M~@lG=zq5xpbF6L\n$O;w$M7CjTnBSD0;sV(27idRzQ82bw2Nl=5kT;atn5~>XNK;0~lwjQZDMsd8YwEoUggc*rim0ea41{t\n+;XQF@;Da&pn(4BbGo4=gz<jp=NH6x1bjU@Q<_hKx|RVJd6E;FQ5=eE?pWS8X@j2*U5{OKr*nZ`%_!I\n*6*HtR{i-LS);*W$Hz_#T90{-;8_b0n%IENAZo#aO^3FeOo`(um~Xv8+R-lB$fu-1pF$f4h6Eu~Mj`6\n=n$LYIXncpW=(;NE>KPx!>}QW>q)P36jULkL{K#d_7YIG4b)TX8Ib~|moFYCim@31DtP}{+)J2TL+B@\n)+OkwIZ_Ve6uXk-scR10{Ijso+oIrQfghX&~an=M4O5kft~M-a@y?HV;6v|TBxx}=1E7}26R>q}U9Ay\n)iRLNn+M8yQfYbOk{vm4Xb`rGZ8I`Ng6^TG#l$L3yBnfKVntewz||;gH&LqkM7?k~+~$aL;&zto`e>V\nPpHoJ{Z&~BE<dd)JoBjh!uxw;ds(px?AA<<2L{FjZVo1*`dufpIv2GN+59`Bu!}{0+A)t8tDy2Zt{N^\nw@5U?w5j2&wcKHb5bCpu%4@fuuBJ8*g|;C}a^_9LU>jL#Mb2(g(M7+y{DEDeEwL#L`(1CZw^TpBKzY3\n}Yz)$Fi*2H+`FwH!fjEMQAH;D5$fE=hS2x%=a<+{+F<&+NlD(j55&mAIcOX{)iYnD0NT7z-z)GXwD%2\nyUZQ(_1qi!?u3G5lx(EX6@kz0aFLzQvXlF`$DaMid`f6{`zSQqz@4}_CL?71m1^%58`(J5O--;qz_oj\n!!D_#^qQjeFJVcnD`OWcN;ZK)L}xaE@1kACPvHrKfMBl{aOp+;7xo_xK+6fHY%o*j39yTV<9{l%~HCd\n8v$G<49Feyt|Lb4RdG|QZeeMGBBomDUs2d7t`49MQz%wBldnienm#_whBDC!*{!lU5Bwt3`&H)@0S1X\np7-vskXDn!6u1p6kJ+f{YyziqiK2R7&h*8r&jP1Oj{_@Bh4^_6(3=0h^Jy3F`~!}#D}E10^sVAxX->T\n@GR&Z)CJg%^wuUw$rCk(=ihA`FQHTkeq~cNX%atF}an?I$KHoWGj-eqtay@1gzV23#6~iZc?|rRv@5G\nZxllG&pBbNz-4%fX*9(n14$wEz<?wF=2XPEBTF)s?CvT(U4NYJQR8R{|YbT=caxD%1k%+6d;{{v<T;X\nWth%=}GCd}Xgpczy@5uUJRNaLee%;T6lI(J+h1hIVq+cmc%n+ufnG6t{o>CR{fV`H2&qFxYJht+HV7k\nqUDOD>x;PN|eU;12g+cXct;+6T5E_3N!@#-cA6Z92&ew-%+>u)b$@NS*5biSLlebPqVJz)hgW4Ssk&7\nnSw4>0N?cLE`^5Er<ZXa8J4jDFd*aHL%*3#w0=<1c0kBvDbh+)*J_8<QXCU~vJjwioV-^Wlf9h?5m|*\nBs>pQq0t<FuLrb}kxvaKqyrEICwThi2K<%oeQM;K?nz%eR5;0qBTd+7?-V^1~&C#Bd@I(z=h7I9EtFb\n#(o1)Z@G81+-Y!75F&l&@4+tg^9+8d-qn>iei-FYW_AG$vrN5{w3l~Wcq<9b&aZ9@L<K&`L)pgq*RRA\nKXRceR6<>QxS3M!lvlh`5GhsPYc2ZrWFOz&GqBm?dZI3r#S)HzRF!cCt3QSl9u1C_i;loDR0aF}o4s6\n`i$*%XCWfm%rxAM8%1Qja~gL7+BW&uBY=}kJ9wyhitUl*S+XN)C5WWgMsk(hgnzDA8Z9}3&M}iqx%Ox\n4CmKA185FO|8S?LEJyGA70rG+cDkPiCYTb2Ic<SjmRxpMO*r_YKz#CYAuF=x)ZcMs+A_u^p<e2l;u+o\nDaPts*z;`jbmIXr&qHO1Gali;_1)3S%<!h?}={_(<n+ENt=Hj-S*=ZVf<A5{tgR&PYU2?R$9o>HX_2b\no-k4G{4B0Ly=w8C*R-R7UyPxfpfQV!@2tB}Q!2^8(=<*x9?Mo>T@*x0)X-N@Um?EbQ2{A=3ty^PT&*3\n*t2M1i0+ncC6KUqH5keQF(sc?P1evw!lmwH>E>_x->(A>)Z3a$C~gp`lCjIujAK9B5bR)A$>#G^RbLt\nbLA`RITv0-7(0Z)|72G(eBZHL}Bk);3M7_s#D+GbQfmSM<Rus`t$j>(bs9WqAo?a!o3Yw_%7tMr_ip#\n)9!eaX^^W*SyZM0_isaRG}^p*Os|_~ZH=>S$6)F~c7Q9;RwTAXw;7~)X7i8O66u34(E9A?%irM_xh?n\n-Y}|em=Dw$}ww)60WD=;@H~rhUecays<$J5Hu|`QAzDaz;KIk&_%_mi_liHLgxkfmiK*%bHnx`^eW^B\n#VtDE4<178liK(t)<gWBEf&tGk!f#^o6$Q7YB81828{PU9=d(nS#=}OQ^w10opKUDA1b|`&M0ty61@S\nNMR!1FjQPeUBX?%#&fM8xPnP)h>@6aWAK2mofX{8*`;MN)wT008_60018V003}la4%nJZggdGZeeUMY\n;R*>bZKvHb1!0Hb7d}Yd7W0<ZsRr(eb-kE<Oj>GBky7#3K&SyAnU~jMb--^!L~>OftF~SYnfC@%9jTD\n_a0Ig%bNr(8U%@WnVB<ZZWNnBX-kVzrdFxk1ftqd?Uxajx8DcT`An5uh-I^34~3A+AXsR%p+XdKBBbS\n7vOMPdlowVgX{f$@C5>fy&fMliYo%WkE3L>|304%D(B{p1@m6SCvYg9pBce+w0VyeE#&vQ$4}u<D6h$\nslZ=XI2&EdTk+yr+wlUZ_kart?Ye7u^`d1E&&4RoX|UGW6#C<KIX;52=@`r~>+nc_zF0W(ciDM6^xv~\n^f=A=f-3t7w_4Im<ntX9Y{wYzcdAl{Bj{8LMHl<u+b&i&MLTy;AdB%$?03;|p>p8}?o4WFsX0Zn-vaC\nK}M$uTIT4ApC@3=>N~SEwv=O;^c+Syb#qwq!#`tEw$zV|Mg&3*ky*8Qw0u(#N%aLsr(TC5)y>*@%~*H\npV-lro$%>7etHgLu&`k^`UwujwJn5gp&BRB6_ZPzXr*i<`ObfM5{BfwmTbfQ@`Y2iKmF!bpLW8osNX2\n*Q=xgm5%??)ywKI6ds`Slb?LX|L%5D5e)(Ue*t!g{E?mmQ?tc7T3E6@>;u=(rPr;ks2?I3(8Rt}JZb0\n%HtaU9m=7`D6kuAw7c9*d5s_ae;X}1#T%7Fpx>H0t}J*PLLZ$f5jXT0z=OKEyjyLDS*pDR?+4vFULqY\n7Z(fHO!iogoe9n&|_!GGT00SsRs=IX?}cSUATWWI8{muuw+q!;1F$SSs6cBMh6HsHNn1uagV^#$zkPb\nHo3ShWq#9$3evgD&!Quv>otKrhUAf-~eUT=rw2s)}KW$Q9+^GynpxT6+S$Krx@KKbon~~68v}UE#|J<\nnjx27w#Vqi<|4e4YpHgU3fyr;Hm0ZA?dJy>o?H$une;)cij5qA3N=b(A@(lC${*ClM-|<EV|1ESLO-+\n_kn~owjXGIzl<%<bnQ;xGIvG-kYvJG(Zt7k;rZwk<Q$|8ky32gC1%8T9f~W=OEF;U^6hO}7I0vR<NUc\n7c#_(-iSio`Ehz2LXJUBnqP>Mc6ry6?*A*BqV?Do~2(!MQZ^}spM3O#nt(F|~o;AO6_W<2MXXQv3k58\nn$Lg}2aGIYb9l64M+&c#4XKVhp9K0i-_Wlq*DB!vaJQm^iF+u17vhXjAF*hJL2b>^w%Ip|a4b;5t75q\nfz;`M%JT>Y@;?D4HU+6vF0>#+>NXn6}|<H=0c9*xH}sfe$hGnWIK}YQmu_mkM6)8$ajO+P040Rx@2oQ\nHslP59lB8kI9!_2bzi$;wr#6DLQgNbyN-Tq1<O%kS?g7W%};k{Wn8~w;;DbIu>2lL{^({h4&ztgM1!D\nCgbRzFJufZq<U^~s(cs?~H&?e4`1)J>>WXt+R*#El!}dn}&CkCmi7w<SPnblReX`I<5SKw!?ad)K?(*\nt3qSKc{^_grL-YZ}Ky!|}=@@aN)J^41B{T>bm!9P$-0|XQR000O8X0rTPVLy32dj$Xh^AG?4A^-pYaA\n|NaUukZ1WpZv|Y%gtPbYWy+bYU-FUukY>bYEXCaCx;?TW{Mo6n@vQIPgp5P8ARo8wO(?mb7jctVxZ{+\nb{%yOiOgcMG^&)O6vXkokLQz<V&xcUo0Jx=kk5z$0Jd<QW?l)WB7YhiFG8LWz#jek+RagL53&2)zL=D\n8qBs8%^i62@~_1_d-?PH<u8}lZxVPbv`OGyYlLiAmB4b_@&t0GP2^U$qD?b_aTSiIoe`BzYoYVrpEk<\nKHKyR_r)#EpKX`%9uP}lV>y9EM)-rD%gpy6o8w~wgR2)+^y#BM~95cA$wNzXGV*jE@Y{q%dBEa8~>fQ\n=Wl<HV0X=ILB@k(<yy*I%Nkn6vBjumDZtEwzR%Z;5f*-v<q?CgWId-GoMy?IbVZyLSaag!B%!@A03{L\nm{6pD;g?o2)pJq2?8ql&x8Q&zl0Rw^0;f5Xf{XyQ;`K%`=A*?w_pYh84`PcnZ&c1me$uG?`GUrsN8Y1\nY867469XGnf5DJE079D+WWgqaV<NQbB#uyK^j?q7hCX^CbX5vqdw`bfyLI8`1d?LJNqU9))dysUJ!~R\nDaA*jc?!!?Xxy<4tU1UBu9PSWj&ECFcw)M?Lh}Y5*;db7PEX--0|S8Jfhob(71fz7E*IJFzs<ADtHrx\ntmv1jGva9*>{MGsL9HU|&&9M?;tRsLz<c1k6>CuCBqBLBHl@|#pe#caSyGBz|u3Ya6Q`bmn>T`UzkA{\nB><V)qsZkfr;6M?;Jq>>c{;&E5WHLFNSv|(8J2Mfky@tWcBS*;w%-dWA=v0zW;kqr=cjjfM14$e>nnS\nEg!sW<_SRr11nJIVv*`*f)~{&br5yVCwY3R4bLFx6e#VrU)z!nbp!q)OlqR(0GyPiH;^AnK-5jos#P5\nUg10)JMOWd;o^Y?R08Ap$g$)Pd!g4iW><(K>R#`v$Mls7CN`iY11J;ZaWT>!!yo|QSss21U{G}DmUVV\niAGUgF+~5u9mBX+J)hw9`PF;|PrOdvOhO>^Fc~p9xqV_+4CQcU?}wXxmAthR2l_aeH?Wc-{S<Djv{GG\n`v%KVS&E9MA4}Wou`(kQEYpiBYq<lrQo{NtO+l~=;F&*#_?NdhAUhKmpyLr>-(8&m@5szahqj^&=$tU\n!`FLMN1kmWc26#0c1j<!C|U_=4n*|NiVrxcx~fnP7hRwrGO8l`o}7YM5dIrn!e`6;C)74>S4t3&90ws\n)%?BP7J@PGFAK+iFFp234v=aX?8&0ohvVAoB6<j=VzYk|{p$MZyX!&r#<{=qlVYBQfxJ?{AfKkXh<8j\n)%w(5vQ#5Ec8D&)DGR?#=gD%C>Ly>0n~E>ZYXHF<+<1hUeIlXN=eaBO~0NGpf0PR8xzN@w>$BG!~O20\nK#sG1LEUL%S)prSgL#*`Afb@JM%m+!McHXph2e&MhrRMBJQiWkG(jL7QM~wkrl`=&=IuxsofV;QA+}V\nb&L<A$8Fit7u#sRLoSwlT^jfjcq-Y!hfxQsvD0L%={B-I9(vCXWJj3Mfahs%+<TJWn@W2d0e+s0-R2-\n(k!49t>wuc>MY)v!pEjYFqvJpsY*07p?2Gqxo#|~5*=7~N|$^Qs+ANMrScEPM=iq!|@UrSZ93U8|dS|\n#Z-0%)KwZxG^33A2kG3H#^|iR+OXb7y0PA=@f71{H3-#V*x-Ds1qhB~a;1M>tNRPd`u}r8;z!6dU@i{\ntJ%X&06fnZC_<Oga%dzK&-~(9s%m5f1)DTUgFe#qFZK*PU!Oo8y2KgJ%o1l)bBwsSj-pj-M8PT!whz0\ny!KDwCb!61eLd7EoqqKmCHG&tMFVb>egH2H7#!f5?0PX@=FT$C-r1+ozfem91QY-O00;nPviw-oY1Tp\nM0{{S23IG5f0001RX>c!JX>N37a&BR4FKuOXVPs)+VJ}~5b8l`gaCwbZTaTMM5Ps)ZSnR_A30R%CRir\n&q)a<I4O<Q%d=Ov0F2ZrDVY#-ZXi>m(jjty)GB-OE$3!d>e<C*zpxFHWejH0Q5jO0pGq%cP6+3oF~nW\nEk$si<ycUJ0S#Rvz}-3JlGtp`Pcop`xrz3ZNM%!YV10A@AK&L^4Q42HT>0tmvVC7@n;_Yr2R2@UneuH\nB2KJ-}j<9Zz8f_sfoxF)A;?uncxvgsWzUsd|1sF^VNL&_~GGc@l5W?+9SAb$Y)wXM3!}Fm@FZF(clDu\nzwGW3{|ibZlpm2tT51TRPQjj>Y+h4dG@Mo}#r>74PupKhYI32f@&0oy?X4h-uWM8lRn628=u|OjE;@0\nN#qR_+z)ier<n$Jwpm`N4(-XmaQ9&#*1ygMC%1c4B_~qNvL^!WaA=H)a*rj?RTvEmjeqeg;B)W3;iKW\n2x)X8@x)tcqZVV;Ha8~j%@1v*|}@mv*tZP4LqT;Jr#7Eqj)lQb*w9a7W9W-L0gtUasfRp}+SzU;Ip!A\nztZ&+{_K$#*UI7RwF-ym6V$h&C!D@jv!=<}ehPT5;mUNhw}I1!1B<mNbRHj}g+}`e6rG>HXG-twjy+|\nEy=DgS5<BBW`4gxM|US-^VID0<x3#%0%pJBnT!@;O@ugFP~%VB9a=mD}iJPgVl+Jo#1KD!C2dxa%PzB\nTSQRIT7Iwlc7moi=XbM<<%DU*wV@m@R773(2~Qe!rA5sT+V+Ia**?;a>>7-3M1W(ra@~fXcdnoqfpuo\nz4&2`pAK^LDBfi@)<4@J?GOD>Ou<M3A16b6T)nj}|keUa5RoQu*v`z+oZSwdIQ+Q4L<R|HLFRH?i6r`\n~+x3CKb{-Bgle{%XmPPo8Mj2(>ezX>&@1nkD>KmW^+9EtnC+-i?c{c6*eP$_|DK`_cxcz)-u(y=;%!K\nevZjDhYzuL!-4BpRm!dh+v^d$wia7=u&GjtyHAqxo`Hflk*(!YW$goEIPVVa98C+dM#nwnp3yhk(xNI\nm(fiHT0ZtG_*s|{@ZNchTU+D33UwJy^fua$sWv>mStz%W)sIPT3~yQ!~P8JL>j=Rc)>4pU~H~4(ZT;2\nA8+hpf~9ci=hC$7Zpb`!HM$d~z^LMMj5SEAsC{{%JR@3SS3B)pK(KQbOUUsa47PI8w<cCH(~wtu>mdS\n@Y2OQyOSJbR-$t-a$HnUIBeFgwm>njALExP%(GraXh!k!n2-66UafcYgvbHt6#`tY|owm3oZS2&>P5Y\nu0xYFtK-^qfG9(cWOXEw(5v%y=3wa_W{1ah2eb-mwEO9KQH000080A{lMSpK45%i$RS0McRr03HAU0B\n~t=FJEbHbY*gGVQepLWprU=VRT_HVqtS-E^v9(JpFUqHkQBVufQ<ZiIkI=c5mD3spGrz)=tlR`8vmGX\nV&ARAQ6&TQzVz9qG+?Zzy00^00R7w?Ks_?^)!`40uK)l?;8(DHbq|6Vp+X^l<-%zkx3eER8`5fG7neV\nY+2`dTA2sGR(WQ=r}=uFWNY)Yko9$%EX>c+0{Kf)tddkcT9x@m)cXSZ2>ojGNWkCO>j`}xXM6tgW1gm\nJStogBerL5zGF9@=lVn-*x3gN6a*-<MSDoutFOo{PdL=h1zStI~-RlBD%anh;Df2pC=K7b@>|I6(j2|\n)PMN)*(dzHm`85VMRBXRO!ss6l8O0`j0U71;(H_r}rtqQeFR*5QY$FuCcOq2Mnc`*_8>sxgY*0xSk3+\n7c`ZUD|-RE#s9h^5T(ELqZ{D1%3bAiW2CVBQAS&-~M+L6QNTfqbF*uvA1!XXH%1RJDv{El<lbFZ;Ts`\nBHkls-#vCW1y;u*jB2H@L6ByO&+VX3S*$}vW~W8>a)_x+4<>@7ty=(7tzbpi{q2yi{t3k@yk=gIN0l5\nnYMoZj8rF_2x(mNo}r1x;WFO<r(4wP7<fJ^Zq}6$kHy97lh-rxGJmf`tX4^uAWU(sN)--6RO@w=CfSX\nFX?{m2Q4w~Fs(nSjhJkF7YH0u@RfIH7Cn7VPa7%BXqg@U79@RN_;2vRwVsGAWsx`hRP4MU}Tjg({r8r\n`7xvXm7TCEDgH``L-+p9;9P+6!FnrW>Ou2ublo{b{n$tVIrd$detRf#{yN}XnPxqp)bq9Y@r;~6d6e-\n>q4sIuPEFQBu){-a8ztFf5=JFH2`4e_s(Nu_`<>$43AHj1Q*X^}@TTt76B!R;3Ww=VN-@j2igVee>}X\nCRU_tXNe`P>XSd%9PoGd0ru<W~{lG{$UtiF^ea#K0U8|OoAZzkw+0yq-rgfdtry0(r{t@fi*n5sB?i*\nSY`rb?e+NyJr8;M7uU)_SRwDBgyf~Fs7(b%Aq6o5=>QltG)43T%W_`sCt`OEgW($jrboF8Agw(_ndkL\nHsBj%xD5y!MM!PhFX@qBmEak?~kXRX>fG*Eh8pAFfsB!3aXEJwtgD6k^IeM78SZjEts<&lU&4`kE?Nw\n}sq&Cm<QY=&j)|*sOvPjaT-iuuVqgVS4st(Yi^>qTX&0)$}UZYMG^SNA9#5UvkT!3yyVDmX*4Q8y$)A\ntJBOvGYai@HppE8w`x%NvGW*y+s}k#9or3oY1uPWS;-AQn!a+Rx`<h~U5yqCzBk{CO)=AvgIpV<HhaB\nMzi&=5r+2eEx$-R`v&|G;mOg8d!uz5V9!1aG@u`qtH4j88a1s7m7cE=Aa?#ouPiJ*9_R5KAG7Fb0ITL\n<IAtF#L<xm!Z2vW6fi*|(n<pH@$+)}O;1B3a^jzl#0Xza#`YbUE!ETVh{4SOUelCtI?@<@GvhbR8Ys3\nSt6*_8pCW*XcuK9ujTY5zNJW}-)Hp#}jXIvo41uyP`B0a#`MHthjVk%KtDH~3w<;6h6Hxgb^-Rq+s=m\n%+s|3l4Ss@rLQ{Yhhli-s|3fjOO+QPEE$Yo568aqvxZKT*}zoR4Kj+{C}lCT1Q_jS}71Xv3PnlcZDE+\n+Rd2!rG><B~#0Jzt{}IkKRUNcM+qY}(DlVqYt#1wuhXNYrc|gFX5cU8UBm2a>yH?L?TM97|!`EyBa0`\n~~VE_zyHtjPy<noy42dH{!c*zlV8<waU<SM|qYasIEcd=DUE#75M`3hY`UBfG2AKFBHQB^B_olF?y(a\na!_D#zROaW0K!CtxlK~~j+o13je3Z{?^WI9lOAec+&1GDh-NvSqng35gsPz@>qyelX0#3rf9+6$jbYJ\nmw3bJ3r7D05h}{=w)ZMjGDa$N<or&NV{0t_-a@B*ycMUc%WBA?m(8C_%3M@enDt_WP*&W)oX|D;_8Gz\n_gnb7MO9tb`%1*TV64sv<}7jChO^pyFm*v}v!n$2~%8~#DYe@Y5OU@mN=gc7hoTUY{nh8-;4W!1JoFI\nyQ*&fI}vt)(D5F{oxk4gNhkNGfib7WVIr&AT@@knb5GQ$^8`^UC&U6@0|^VJUaSsGmghTL+V$#E74n(\nC^bYaEAe~Ut*MC$OSjUHba;c06N829+Uop(OQ>Ff%M1=sBeH@9R@l^bdg0UY`}KtDr9PjnUpd~!M7k?\n03lqhHsnNs6O&|1e}Jk{`!YioaYhq4pi_z}-<C@ZkjXg7a*=?o20sB<0e&s7L4YbWS{Q`S=Z@u&5Nh{\nL2qa0ObD3n*4ftrD!92-n9&YM@l?_jml$SP=t~25~k|8j!g;#4cAkjr#<Y}@L=%|850bmlW0lLGez)I\n~ZT0fcG&V{OXN;S$qsmWy{!V2x_xzqbx9oS(V6(==jm?EQ#@54(Mj;1#K$OssyJ`40%O`eyD9d^W<#a\n_b<>wJ@<ajQT^im=!-mo9Np8v-CZpa<K>0qoW42nXqC5yRN4pNJ;QK`UzLg}}^;0n0D*3fyg6Q;bozw\nVDXzFk~WFx&N@RoHWjnAbD<{xZZd3wB<p&uR@deh|DZTW52nhPn;~r$N>TW4tea4#ao4<MvDk?in*I9\n<!+D@(UaN9^aiy7h<nJgE-Re#PF5{QF|Nx(0VL{(OB2Bi8r(y#gO?S;*kCwIH1ag%xJ@yyXO}=`eb=h\n)VO~^6l>##yqx_OtwfQT`@^-=T-{`uoi)!}l*&0;Gc7b`cXTZtwS&<aalB(LO>e)A6|L*tyG9Fqo&w{\nk=19JJ03^%Eh`wFisFHb5FSV(~-Nn2<u@IKR6d$eGGQI|{5l3p4D0@fx<F~V-)Y^yExoX>H5J7tWe*^\nwaj(`l9%{FF2=ri~ceOsWOQdZPo*C>S;@AgZyl)0&WeHCmehIJz8xS>6Xg#Qlk{z?5DZz{s)>sT`A>7\n9&tNm;gwY+f<elKZBvu2J!fdsd5bC?!^Hw4BFcJ3ol{He?=l*wX-^~9<8|NZL&#VR;&f*b9WKt?Jk2C\n)j6(1W8Xj1u4D2@n#@`g-WnOv^UV<EjZPwIj$R<6V0eIgJ_cNx+#oM}w2s}gkJdw*el(7mA4dO!`55e\nc{q~+lqoo%62uGmQe8Z=UJWt!6Dxqd$K$iy^bwFe^%EExvNmb8}^+EXk16b9->5l6LL|a}%12A6Xfbd\n3Pqr`w-XyU-vU4wQY6#*eUr}QF63&E;TZnuep#V-)FDasc#i;GOH84@?eNJ9dm+stL%{?+hCG@gd{ur\nJkTU-~vu8=U77yo0tC^73*Xj4^sANQ1jDfCM*Sy?*%8gX;lK3V>=GDPv)hEKbl}?9n4T=|X}v9_1-04\nWVVaS?C;aRI=Ke9g6-XXj6ZP@b{;=HN+~5D`eJDfTk(91D&yT)bK76J;GJ{LPF=*Nu9>-NZseH1{=z*\n%+YgLaabwb<}+)B)=6jNSs17K#Z-MTX@coSX5ci$o`MGbr8x0M(^Xlu)v>Y7nX=@P(sewVMp3vKJ6Jt\nyXoxdC;&3_xS(bFggxEp0{UkT9X(NxP#28O?evR^kl?uf%j#nu~I;T&$4kdMedwtQ@t;N7ZmSFtFln)\nT{F1m+gf`gGSD+z(OofmY1UCaE^Gz~njMCUz_;m~)o9LP4=0`rsh9XDGRMXGnUT;P@1$Qa`=3#Sn;F`\n^Bz>oVW2uTid;HO;2dcp@km+>>Vn!mP8*4Wt^}2wBGD^HLsKEWkyF)#fzaN`mt}!fg1r-~8)<yZiU&N\nK4ee6-!#TF!Hze{pyy7?ew!6Y+&nZmj?lLGLm1eh`=#YW@BLhxVM>a;&;k`Bg@y718QnEkhOb;t$K1$\n5+cK5k3kUl;Wz6D-EYc7hIQUxGiLMVZ%Pk1$4)$Nq6Kj3ixdQ56ikDO2%=&0-DGQeVmMpU<41C@7g#?\nAGqLZ@Hdae_InzJqo%rGW*|kJJSj?UD5f;VFt!iolaNIOr^|U0tM+yCYN?}ogCv18L%4h)aiQ}jSD?S\n=3d~&i`oI1b_31GeF`8H#w>y>6orwn4D8(Ct8lzze~jWmLtVMiW-cOclH;!hO*U)Nl@?-5k^$G5Lv4Y\nnAr-7+o4=u5QncU*-O?qms3!`jD*XiqRODM4END~glgV+Q|%NvHYYYBTqbR?F9D-A1iP<H3cw#fX;!s\n-d%vwgd4{m#KoYS8p$lU%WUy54sEb`YjV&{EX4M{@y77>^BxcfQiB9GD#sk1O<Z0;>0hw;gB1x0Gg!*\n2J6z163T#K0y4>3(+DfD@HM`x+WFsQs$_;~K<s!#{X-P!V$?~Jx=ja@$Zn&yb_)h~qp<KoRiN{SoGVv\n9ny4{2KmDI~r*AJ#Plh$4O&uSGiw`+PJh-_rI0WU_4>*Nqs{^i}&Ymo{Wr;fMeNxgkyvpEPo}nFd^AY\nJz?kjOoZb|#@)Dws^*h9fhQ0@y|2mGa#ago}oUqlJH^zKfK*;W`0Ks?}7M_9{>ncpFj-Hs>P4qFj>f8\n+<Chg_&dzMWqrI<kX}4^7Og*?rjTJWzj&8F~YboeggzYzUI8SZBgixc2k=kJoB>gXwV!g)rGdrCXZQT\nS?-?#J1tRx8ecgvWZ)xY6(h<>p~pjoBH=|Ci^)=S58p=g!@-d2we<^ni3S-4Me$Vhgr8Rg-#^K^SRk_\n#JIfy3^UEk81ol-rP`5MqX=5tDgcegapSd#rWNm(%H_4-Mh~cGXbjun0=Hf1bLe6a>0Q)LDM^omg{0&\nZHcrr#WU3EXwqrBO7G4Wn$D;b+2ujtD8)Z~{12|w!KaU@Y*P{Y!wA)+=M&;74;=Z~^{6keCwgw9;#v1\nV6IhF7wf8HmyvS(VrAH)20)KPC{<U0=v<TFczVUlM7(U&xJ9F)MYWn;kCZ~ptI>DjC2uLm{}wT45rg2\nk^wBVb%5n*!0>Z(^It_kbu;zo*2hpObn4SumWGL!R~ch_-F`P>!xg>ejHiJY@&aE@o?S8}EzX$~d;U*\nhtr@RwL7A+_nJb#gMtOgT=|RZWa}f5phxcaklsMB_(6N`;LOyG{LPS3`VA4856W4R3Tvt?(81n16CF>\n`^Q^WL;vPP2>VFQO5L_1okYp-ZY+fvNM<W*Q<JX2M4>NrHUvkaHq;x+LfC1p6+}I4_`@Ez$zBZSVj8R\n|TQ!Vn*s8JdlI+YhuTFnHJxAreNh*_Nq^i)FxKXU_ak@!O8@1Q@&Vh$(JrOIgzm$A5=O%8le3vz;Ho+\n;N+ew6@29v(9c9>RLj-z4^?t!!9?isfM+L==J=^N^Mh>V^CLsL}yw$Y_D6|p&OL+BI?Z#z${P+CAPg3\nfNZDR1bP4c@~(>LXrjHco7vteTpDK`+=v$5EY~=>D-Vi9p(6E$IW4Rkhml$%uUc!5BKQs{DadVY>EEi\nvI%l032Gbz4i-{aQ7AF<zazm5(x2eCr{8m)7X=hF=p*Z1aI_-n6FAouQ`j;W&zB|9Lnuzpc6mMI1#Eh\ntujDUBLMKW?TafsfTFTxqCM~lpPi^?&goTBVlb`I*!PT_1ERi;J8__L)yZ&v5-T~nbsSzn;l!3iaJ|0\n43qUucTEb%CHb|BU35F%CkKOO?HR4iqsOQtCqx;Y0PI!3stIZ*O6@l6t`4a`@b$QiB4RqG~BnFp|m$C\n;lfAhgd@{~FW0|fWX{}$`_hR3U>H2$3y&~ZtO8q<2m@EkeGI!;#~fc<Mey|GZHfD4^kia(vBCLrB(sN\n?%@C(XW}tpei_778ubwaj9wP$<w&fLB#x*{HMqHt$H;=N`bJU_wJ%rn1E4WeRcCB*&~h9*7rCUmZxJ4\nkS<cbYwSk`WYGc$Lu^3Thhs;DeCj31VOO5jmj*1$9|7GN5;y0clq@dXeBy4lkbpMmeqU0UX`Ox8g+a}\nT5_4uZ$QhQW0+rruzZ>nG;~3vC@7F_&HhFa7gk4<ej1~ZE*uk)=k;(=3!m^iyjx2UoO~G9;~j7S2<c%\nG>Zl1zsyq9y<IvQ+fyX|=kvmju()lxFJcA8-Pwv^(=FI9r?A&c-=pOR<Q49EKQa!yZD8tQO%fsiRz4;\neo9(~fn#&-xT8~B5Fa&ayGzX#7_nw(xKTU4+zCs9#v8_=B8`GN+7YZyUw*ESj7=-WA~tNGjy8$%jKmk\n&BM5k13LSP(VCIQBGeM{+S|$i<y{#!gKz*%%j+*`T)eL>~vIvww@dgSZzP6R*r5vZv+3Wzbtjl{rqGU\n_b<qhW2;;#F+^fGL=xO*P$0+KQzySVYAQ3ocXxjPWjwQhd*xVsFm`#kC(Zh4b1@QE<;;B_6`)c5+<1C\nqB?g2iwQuxHCfL&_`W)WOq{(sn<mw@S!1qScl+y009?Ny6vs~bh`ko7cL1Mg35%(W-Q+@EXSYcoZ?4R\n}1C(W^q-LYO2(9L<l`h;KacvremQ(g>3YnDSCMCoNSuK_gJSuN<PF_0z4K`!nKQq;Jz=6<qyR13?&X;\nkZZZqNv#9nfGeLjE7bii^xDu}ZHDG=W1(>YlBPcaeKH(AlbK#=$7=qOKCfqRMi2>i77ptT-ast~v=@|\njlL>4Zyrq=|<iWWdLChyYWN#HvxOdG@3R*Aonwrgi^*vc~+tM)Dmtkg1q8VT-QY+5M>CaWI~7fWAR4_\n(3FV&?0Us!KGr7ZB-k52jpcirgC+9(bR2S>5-1DY+RF%*Byx{IT6vMp`|mw;1VE_y`<x|qhJ<v59;(H\nyH8Xaw=N@aB;W`K(ZTbP#(@zy;*XBDvYFw*D6JDe{-kOho;SzWdvub^&y*R{LjWm02EiwfS?oriqknt\n#Xp40W!*(uZ8u1+;^uBv$i+aImE?V8Xgx&>kyM!{1M?FLEBGHRMa^E*-N1}THs0-lWIyee2$J%mbDsr\n?xqkX=rxvr*BwRU0XZU;)_fBn5<dfTcu6fgJ;%b_JikEJ%c7%P$-4}VA*Qz7!OzNHdUnB517MWhzq4t\nwqR_=8)C4gJ#nWN0j#-?W|-la{!Kj3FO1Y~r46O-3rInNl36w`oI$5p1G9@UHa&Ib~&1IW7`FSYa{GL\nQzxeOYy>Lvl8bGdiKy8+n0(gMdFr<r;ZJ>34EceWK97rm~NTkeGlM6<MiE9+kP|k_Yz%u!Az*{RO!gB\n)w-)EqmORWPpsJW=wRVK($`PH6Cb<O40aIq-N4)pQ@2?QNc-fh*Dna#L>d~3_0lTP1aVmOllVb=)C3C\ndFu2xmZ7`0u>)&<c+^&(eS^rkBE=<n+J>laxZnT^0^iTkbGNEsTa5wA1Rv8nr^=-M#7M~)IgF<X^c)u\nR+IU#LEyKIeunQZ8LJ92(TvJX3J&ie4vX8j;$tsxLKZM?iI<gBZ2FFHHUya+(Yb*Kuxh?dU>)MbvT|C\n-i>AoO060{`STt?`DG<{A`daOW132i(F!`3Sy+g}%<3OaoqZ$ytU6k54z&!9u#!&@$lP^<oF_Ui#8<1\nL$HGKkDJF7##<D*Q_155kX(%vXOhCi&&bxK}hfI-9ju`n{DNvE^Sy>AED0kn{Dy%yt0dOPuzSPh1%Jm\nyAZ?8(KlO?NrNjL%iJ!AowUb6H`;KF*aU>;YBcdq+wEezz>~A{d1r1^<F7AT)2=~7Q8O|)WpSJ^Z{VI\nBfWiv{CHPqO^q4Pd5}qEYfxr9C63pz@wP-KJ;gvu)WMDPyMN=}{W2OvxqBq(0HDX=l<z{I-6kBTUv3N\nO1Dt&Ji1?4uwW-bKcZP6Aid#$UVLlke4;z=cr<6q?x=y{<w#fhy_OceykSon^|J=>R7=;PS`C+i~3$q\nRK4Tba7)ZJ`e=!gR}RQET~Z!D76<BPyWS@IWFZEP)LAz6tHb`ys1)H&(=;jzFV;H&QRJyOsTA@V}$W<\nLRHip8ng_U(FZ&8Aj8qr{>xCpLz=Y>EeXj%J)~PTvtbc!r4!+UZ0=-c>MPCP(i;opWS(M?cQz27Vs}P\n!xRGf^m@nKW1X)mG5V?+_ss3i^Ro@@9TA--_eu#Mtd;~fNqk>OoCF_OBKwPPd&#qOKcmuI-~g-_ZyHo\nLNil1#k2d@9&aJ&o+az12+gRBPSgHY-_PswaZ4Nc9sET^1!F^QHxvmtW)HUwU-qAY1e+!8@@;o!TysI\nBkq4S~PMrT`HX5r<0$#dwO2i6dW*2};p{aCKIWEk9}>Qi9-r}{cjx*ua0L33Lc)->sxIGp`~Y?Z9Hr9\nQ){KF|`{8&K$89d^#TcgnfUbGG7x1|!`X&ve2Idjh~cDe7~dao<~q8o<Y-(zC(C3K|J!P_s*c5pKTnT\nozwJvR_KM!XG?|(s)-)OozYSJqUYQZHLie{>+{_M_MYriQ2U2z-SABCZHwTE!`dI=<Vqr&DF)t*r}0h\nJPpxPHSI-DHu*fnU2ZJn@Pn_X5z2_~nWSyAgsSXfQiG`nf_FOG)V&Kd$_Cl<I3CazsqcncFQkU*cLU;\n_U+I)Y^|kj6h&il-EZ$s7OV=8<uZ*?Fl=-4r&Co(tk-ki^apcVHiu!8ByI!TugFm;I=`b4fe~km*M2N\nRZ>Z=GRK3Y8?zPIO3SDWk2{m+~MQ?~Vf<c)&)t~B4lyYGH~gmTkN?j>FIbN`9qmCB`(8xY0UmvpD>)q\nUpbHDE|&Ve!jvKnMohLx%qcP)h>@6aWAK2mofX{8%eGs_VlG001s2001Wd003}la4%nJZggdGZeeUMZ\nDn*}WMOn+FK}yTUvg!0Z*_8GWpgfYd9504Z`-)}yMG0tVw-eubi1zxGAz9|L$OP**mWzgAW#^IcDTr*\nM#}a%MgRMr=b=cElI-+)3yMaR$mji?k=s`3j)^Uob-oqG@Qql=@MX)j5!$`0)n+4`jaw??o}Oj9mbF-\n{wc4`o*uo~(e@Yh&etuMSEy_-+W=ZRJozVQD7Qw1h+OB?*rn65syhTuU@t$u*^>Np_LqE3&j@QdYwy=\nm>+2+MwG?mg0d;7F0v@mL?OJOFvfW7jGBTKm!|J_L~wxa2bJN%E~-MOQ?PS*a+d!@I$md~O>dY7!^jc\nQ~`uZjj<orAO&+5k@u*1zoXH=H1KF>dTb(SHraBO8!4NG%t?mVzYcNq^Vufz0aDqY(8H7-__f=y=6D{\n#I*H4*O?gb}eodcGDbK5=JgIo1&J@lLPJ6Ma#R#0*@87DtQ-kHv+PirgQ)*Y1*0}>HLy4PRO)A4dH-P\nMzSdmmOCwYWuJ>}&tyRsY=Pwu9OM{T@N0PU1}sy{huvVu`1Wnn>Ej0lxWjjQsa1of)0=p+Rv(afT3H#\nR;T8q2>!M(n>^6CSb@Mh^vLr-<>i}4Cw^*PT3JoWEcg#1U`-$GA1({e;0AK_Ldy>cllEq?C*4!925S<\nQ=m92<6gt1~k1FgU)cENI^)vmQm2kTvPBeqH(ow-;jNs_#CZ$4<XmlY7*J@Sr(Z<v!iL%AD9a_69EiV\n|EO^96zV_$UqIwNY%#+u&3sN>yQ;2@JVY4ESWu3WiS@lSJ;wvVbeGW(8P`?1~~aqFygO@Rf@^x4`C-J\nsdk>?v~8ji<eHuF8)GpV)?}%1e1G<0`a@Y(T)KU>=_mVVUOH+Fg<ZG-Up@X0k0O_PB*j#xF3-*Km|iN\n4;6k7K*2zUMSvxSev1(9a#Dv#Gk?I!9%6>X4{zu*#SsioA_n}5UF|k#-e4aBDdoEwf(GqA$nKF|D=op\n=nOf5djV6z&;}U#!9HY``5B{tZONKX~!4To?=dpsmtk`Gq1*Q6#mV`Nppl0(D#)v1(tejo?L;Jd$s4;\nTc{3u0T1+el+iwHLh2=K_IsigjT)42v06Ek3Hh()IWVWOVr;P!3+rFTtXN-f*22Vxh4A6c*llG;hXY9\nY+{a1(~dbR3rZ5H{o7kV3lENVd_*Q|^oh!A<d(|MJSlCHU8>c2{#SH&*j!Ss#}eh4@}cc%k^zz#!bi8\nDk`<KLA$+lz@LgA*SnNKBA-$zjm4zTN|8Kz682;;c8rcpmOejc4W(H<gcw(t<c?Z5K{z{ghiq_2XhdS\nT+h;ml8I$`iVL9b^TbCdRZ~i5vK6D>BuM+@qa6w`r*|d-_hm6Q&N(W2;gErWx*k>K<wMm9xB!%|kmJ&\n_HfT%zaxmDjAr71)We9+5s6Ur$+}Wne<VLjFBCv$lJ6Ttd39(vm`ID)K|G>ee&5~I3pp`kh%Gv4w#np\nfjs~5z$^tfHF0epBmhiXc8srx!a?I3l<o)S`%PT@x!yb%!Iwh*u=QkP02(~;Zu`~+#aw<QNJheFq2=u\nZ<YCNCtEPe~SA6YT|cOlS=;O;5~80&F3TM3vqC`EE#M5E^6DU?sv<r4wrLT~F@UQ;XH%|B32ewaG<7J\nVaL5M=>NL&>=(wR0ct~^vH&4=+Zr8V^2ajcp!VpeWDt>C>0cF&}R*~8J%ikgMQ!2R$#*pgfgU$Axi{|\n1fO1TPmc~u&q*{&Zr*;pdUN&hDp^el8&H24%lTy;$CZg|hb|p&%jmP$#kkf^Bl4GCG+BH;(s8&Lwtc&\nHsaUdskseole={l<POD&2X;RTguyQDb`{_cOVd?n1j<@0ux|_9SY@~ulFMaNdmTYq7yxP6ohG3a|553\nqA+3m#-cdL{ABO$~?Q-t_~d5fYqq^;+5j+9}6mCo;mcxdr=Tz59Utdq}<*)QKG(_@1j_Vsr!yZkk;{w\n>>Uc$}%fZRs5L|EU$ev&vqGHvNb(j&aR>62qi82X<^x4gC(|4TyzEV11Vkg?GT?@Aa$^OW)>SF_3d!_\n8YxxQkOX#Lq+Dxz1f;OD1-cL<pgNifJxQ0sEV&f;wL(n=Y~19LDBqB#7+m6>`tv_l@ovs(yl8m-L8{o\nqg`k6b}uR_hez+?nNsRCd|HO!hQC8c$S%ToSw{~?Izc0?0a4t=K?lwJrVD>IYAdK)v4fZjGAhGhaN|o\nz>}LXSt((}8XR-u^k}%#`XadC5!5(3-Y3I!m+(HWycn;E~K0W~UAi#5F(`jW|I|atsl`NMGVBzGBusj\nISuu5T1&|z~$-4blXwcG}E;;F#|iX;t0TsS83I3o99>&h`h^MF~1L03H0kZ)3KhvGF8H%t>7nD#aS$z\ncRJX?p!wcfi;Wil>8wa0(ov>0h11fF3--5)Fr@2JMH<-hz!yiMIVl6|DRi^z<MifEW+KI-QalgJB1hz\n<ThFA{Z<Lj^ZvCMjlCH6`Rlkl#{tfVu6|@KugJ=s_&DmMY8H^ch5l>7SWGRu}nrVmq*ca!OO1IuBpg)\n(>UDr^{ESt7W8y%6w=|2%=YaT>*Pit7z$0(n}s*hmB6WU(c;*7tRb9+#nbdaSr`gv@VsOQLJBi#{E;~\ne92)vG%K_Wgq$A-W6x-SabReJ}=KLwAK`1Vlb{O94G60g{MOh~)6(pB4b(yucVCe2kgxn4SvL5y&{Xe\n`Ut}p5TzygP&Q*PUOkYsd|m*3dm13NhTcF!wPs+nqah2}tW*f4i!fpwc<_mPEW_YtQbH3$bo`h8?<*?\nn&n7F#|`kHmmMiK{8YkhuJcf^VcTFPz@-h92%rX)rnT;qQODc=!JL=i$&K?*!8lTlo0E5J8({o{9g)V\n9%F5WCQj(3{oXkE4Huq7i4L4IyS~B<MZ%9-})RJdkK{vxNdN2n7mivm=pLyzxsnomSfo2DG3I)uoh7E\n*sEtO41=5K{2D%epvRzT3ijvtoSvLmggeVx8N9I=r4!MLrV>pl{p{XO6<5I}Hsul^EzRNp7Tg%eGtwT\n!sK%(po;RJHL>e-puDASXIGM3O(x+(;3$boePB?mFL65A!VZ5C|cT20gc*r^;_HHcLAQtym=_Yk_!~%\n9DXb)*74a5c1sVX|6Ie!vIgSzzBoBql)9o@&Cz9Bf6@%_LjrJn%$FQPknJ8(cT9?Y2;Nq?V(0}?+63F\nw&?h*0LoWE?CR1sK7L!x;22V}~*H7~B&0`<lCNq+<{V6*4BQ#R^}H`D=`s8f-iR8s&Iu@qK1Lj2y-$(\nWui8I%p!o2(HV=h>Y2*D=(8X1VMJXmQ6*M(m^KN@~(WeO^RUm_Xzj?9*M@a8047`vsbz+vZT42?(d*K\n`)+jW!}k#A&;w?m;kD8*vP2SS$Afs}dkK<LYoI087Utkc5ZV3xeC~}q8L;PRj}qsxiLOZb_?HZ^0c4Z\nJMiF9+?{Y-JG(q(y8QsB!&AhjO3De)I{a5T4QrNT<g4VfK>dBe_6lNQ{r*~3})Pt1!nU%HYIpdrZ;&e\n?p*NYPG0eSD%F<GVBfp=g(@gQsp#=kzQYZgQg7n?(4dc}4v<VrDSVhMeHg*6XeHLcMRCX(PAE}J}nM2\n5bVo5v11`W6zYO(OXw$H7^{j%w!y8{k&<&zJ!5L6(rV6cm0TRi-Co*XHdJl)D$TYKbVqJKoU4#rea5u\nm!O6uE8>eMh&~hQPAT>wj3#7J_ZE7ReRAlhw&sMkdJfHwbY<v4|U0mVg~{I?@`SDe)tR^%MKi)zm7o~\npBe>ug+C~$rDbOoF;HoU%y3vE%O{|BXQhL&W>-Q4Fza1i9|zKeg<=FWXBEv<fIxL-uJVd~LXB6=pE|m\nNN0xbWbOQ*6(;T^$uv%L30X29sYd}|e1j+W0afIsU7C)+HUCXkI|DMC;0B5u5Y$<*E=Fb(_Up)bQ$w~\nhQP)h>@6aWAK2mofX{8)KGXs%%Z004&o001li003}la4%nJZggdGZeeUMZDn*}WMOn+FKKOXZ*p{OX<\n{#5UukY>bYEXCaCu8B%Fk8Mi%-ccE-6;X%q_?-Dp7C&a*8sON=q{H^SII=3R3gR;PS3{Wtm0!dAX^1C\n0tzb@rgM(@$m|_3eie_j=ru+Itoh227vfT8kAzWxIoH)>XjhI<zyx)aRC5OO9KQH000080A{lMSYk6(\nsCfhc0PG3?04o3h0B~t=FJEbHbY*gGVQepLWprU=VRT_HX>D+Ca&&BIVlQ7~Z*6d4bS`jtl~zq}+%^!\ns>sJhPvDT1<1icw>QKw%iinu<c?ZGg#T#4FcO_2ggt*r$4?|CF8t=8Tk?!tg~`SE7v&6^pDw$sLu2>+\nzm6fJkGW{xFsiL^}`qg!%AC)9R4NY`q}>95WSt(eT|)@Y|Ijc*_OPV$^8W?d35cA_iFJy*3hMaQZKwg\npbnJ0b0acB4(pr1-?^8`g%~N-I%?rBY!jNs>x3Yv~=UKa37$|1jC}Uyadbb(s)8HE*aag%YkTGs|U@Q\n!T8!JP}>-3pR|{^ge=|&T}%HS*<P!%PYG05k4s%Vg1LW6&{SP0_O2Xyo;^)C0Td_xY3z_ik}Bi!(DF_\nH7TN^$ukm)KF{X9Q1*FY;>#*sP+|EkbGvLJe`Fy|(`)L+HF7)VXwQt$y`>JvNpJq+m9tc7)qwXRdi!x\nFEb%9pw6x(B>n%S)8(|sy8Zhg%NAsKBiS?S8ssqw`{Yi9<kbK<8{SG~HQk>VsV7F~S)&}kq9Pq;8v=a\n)3v%eM6LA8bvr6b9Y+C1R4lw^gf_zQS~-%e|wKL$A68<Ifd2Dx#4w^{}`A%ktEa1Eg%=pCYUVh`a#52\nTeGJUNaD1!#D-wUNfoaLZM63t0*@gj@jhJe(M#JTIn9MB6_h9UV7rn1$g*{Vi260cLKr`=doEwJ^x*p\nz>_>Ewqjq96R8plQz;<!X_SN%N>fR(WTTC^L3Hc-z}YBZt4SfliB-OiN6Wt-tBml9tii}>jl7>Jt)5x\n2FlcC7*qEC`sY6{W8w^#0xUxuFC79zXT+X4FOISs)##!LUig>;9D|0IrboSdP%J;>Wc4Y@3tuY6d*=P\n0WXYd84L*H1vngWmq~AzU74!~DLgzd4munu?4kRt>P!3*$I9*BTFb{w*4)xTYp`d7Ddo60(vAu7*_-*\n*35isJ#-ZC|e(k$pb)X?-2ss#XAXY@~sRw&O&z_YpqI2#VaTr?mg-p7#DIi-QWG!N}>5(eaDV;?TzJ9\n@dXps)1ZJql({Toxtys-~L+?Sy%8H!BGH_lLm}ejdd1I|pf@bOMK?9~8$E67f<<;qbBn;IHkg9W|Iw=\nnyDc<(qcxIbLdG#yTeKs65c`Pm~NmR`G1}>^N*650#OAzZeORj>5ARV(gnnJi&&xh0jT0JBjo^x$FqF\n@Da`ir%P9qhVgOX&n}vP3ggxCE}z-E3ie>aI1wU9FVfX~!DI670I+a7VvR7#DG&H|d&+^yWC+Nc%jxa\nv?#=ykUZQ~mFDK}l`<4&3oSzLrtJ$k$IL`Xz`{PJ&C;F9|Pan(6w;#W->^`C9{Xk)RCM4TP?kC6X;C7\n(?hvMxU!pM>+Q&Z5tkhS3f%rS$gyeRn-tDGFd0E+YJ!_W<fLH3~ZV<_=wLX9JaF0cMi^#<`G6E7tC;z\n5>0*(Hmd`X^r&-h}}s2y^xYo(jxw>lkKuHp<XV54Xd7TE6c*%=9k1N`>0P{NkO235Ehc^H^u2V!z|<S\n5Qj>1QY-O00;nPviw-mxMyo~2><|59{>O<0001RX>c!JX>N37a&BR4FKuOXVPs)+VJ~TIaBp&SY-wUI\nUu0=>baO6ndBqvqZrjN9-Cr@FA3~xu)ARy#1-PhplN5_0iP3tyKwW_zkt1t1yk%w>MK=8JJ?9LE<dBp\ncKh+PGI6QOicgeD;m0_afvPepyHNO{U(jMB6LT=!N;W;<ly=l1F!MS^Ukj+*W;%uwxl9@vztNZRU3(p\nw*{Zto)$c(J3n4aIt%-C-~8=?575ThqkEBo|;H;BqUd}{DIFYMF5#Fti7S$8et8qh^&mVrh#N%~b(d9\n9L$XP@~!AW0P5kV=%IGTJfs&*ALU)z-+Ozw@zHB`@TI$UpK@#6Y{ME1A(zTEWpNOkai4Ace#AZ~ORy8\nx2=lFs|*Fw0k=iTvnh%&{HD5WrB3pv;K4S71+#w-3d{|?3YTn4W0{ovV_CgJ=t&|>zVXNIC(3zQF7A`\nhQ-r&l~IT58jy5Gt+w?wIE;O=)WKK_<Vev;DRt&(RZiO}y4>+Qy~5nZdtp+wXx_<9Bg!VtrE(W<;Q1}\nw%D@c|$FJ>C49_a*-s)8ep4;!KQ(sEaVUZ<iR+k{mT$_WAkog>RoA%B{o@HNJV)&f$Dt9iBB647ITca\n?RdkTrOtl(N(wU6x;&Z9dSzmHZ#EeL|Eirw8k1ATW#ax)T<GZH^JBMeuC+12g+ZW##*Jwe1XbX*PaU0\nxxeyE`kswBcKjS-GLu(9F~|3kv>l2-vn(Xt7tCRYK&Ng?oWP`pU4+LNv_m1pAL{-lIhj-wu>m2v#?uq\nO15GFoO<RA-BTF5?*fUI3MxJ>dkMU<){<#W+!KC2}q@?IFMrW7_Sqa^_F7bT{VIbvQm`xOdGfwGvE;U\ngUl$j)v(!dlQ{cW4sx+&DL8;MX=;56|FkH!asPzM)GL=)Z@Vm>T(?SG*IIrf4`iDI&{+?+$f=4tBdJz\nw`4&M(?BcJGAS<!*7)Z$fHM_J7`0qUI0OCDc(f&p*3|iaOc`qyZd*>j7yjh_K#visTSDKQ}<ikr0pcM\nmy4o8EG{V_=t%z`Ia`Pu<P#w-QyN0}ge*v3R9>S0lJsD^=G{0k|zm-R~T65SNigu&||W^ba~i#O{i@-\nU#^A|NmWLMQmO0B%DcN^Y6OX1FqXF9G{Dcy#<fy$%NO$afiF`O!nAM1kzCjwU-2e%lrVHfPqoi5({7o\nV3$}J}vtn>3B&|4j}F=GLTimw5meq2uYsU#~BR~Bq7Pe)sW(bSs7jZB42PF%5w0m2fsLHpDGA`UKI77\n&;ltaPiChm8Dct^=YeDpdV54paKez38llcc;kBArh(t!h;RtA?6E2~oV@!Ok&HK8o@^?zr9qvIPWMCt\n{nNB5$r4Jp_h-=Jl;b0^`^Z-6bB<bat<7FL&jzqNX@7rF6{X-mx$wg5y?;NL&A^>%&Il0K{T!cYuwik\naHd3{Ia7pS=K{w+ZfJ#4sykI&Zs%Y_^Uy@<k&V+<__3*^7R;v){w9eNkQsCXo#Pb>B)p3u0DP7_b0_Q\n02#>^E)VLZUSDe3ZU#1-vd`+QxNd|9h$lmc!M;kdVyVLh@+8jP!2fS|6|CK#qcmA^#5eqcsQFLyN=5<\njv`lGliY9LKmio&lRdZ!b7Z3L%<JVG&RKP`TU2$(qoD|yC9RN4U=#aPO{*{X)s+Pu1U6>Ja+CLJ*NS$\nJU|Z&?KDhcM=Ey@?BG_mEAd;Ig%aMV8r!mT^6D84pR>P<iux;t;{cimI!cDbImDrttC6s6$@WU(1$c>\nP%&|J;@P4$I*vyM#Z{7$$%PPMN95JZ(_eH${S39I7ub`jIFK<*UqJ*X)ha#HmjcV%Uz`<)4e0X<r_4e\nxKDp-b2NSu_^9M1F~jdb-BjFd*TnX#VM;G{>TjXGH9y7y4`GAJC7l$J`{_xq>MpmVgNZn^{>Q*L<HJ8\nj2Cu}NQ7-JHt&T6f%qW(5cPt8NbBx^Gk?EG5vFdY~hv%sS1)>vLU8*>Rc7W4EheuI>Gi=UwN!P{V8q8\nE*wbA8psa+L=QfS3LetCP`wswoll0c7d>k`NkZ2qc{laI!?72&?hY=b(qHdnlR$qYZSUO?5Y;<Op@D-\nO%M40%<Bmzr`75uoX*PMOWE~TIN_N4DemL`;4eZ3{{3y-YD)XaA|)I;grgL@y~;qUTh@6>a@)Dp<qOs\n_W9qkW){Bbt)_Y<1IZJ&$)POeWFB}n0@qIcI5G*rO;2h^@R?>FVJ31?E>bf|EaWq?uh8hhXW2`56V;S\n9{<y)#VB^z7h^}v5Wn)$wb&aPO0)dfTE%DmX~gJ!`Njsh6PfizTnk=!Rt+}~qcUPdv~^$4BBZ4g`?uY\n+D`$_31el212`dzGJs08Pk8=*CMfASDetJ5*87ci(~V>M)YQim$z4kr>w`U6qNY{1AJrL`!ZrbXPEqW\nII{p!;I<Y#owUlQ#c15GeMNN*?EHcAO+wdY_yp;K3guhkmr+KGtv){N1bS_7<XwoZJiu~C!X73ns}wa\nZFfpd(9{<<g}C(>;+|X18zAta0hZY&3(6<cTuZZ+LQnSV$%)_^^EKKK_B|3VD+hkP-+z)1_H)eadu#!\n&570SP?2pNt-~TRN;2-DO0xG6v*R+opAKVMB`|YO1=LXY5BNDqkg(PL_tS-<}E%<;kZ3QhP?oiP8xdx\nSjoA0UjE~VC^P2xGg7+lIiJBRM3X+z5Pf_A_-v1CO{12<FzY{CEq)`o^3ikjzPl(1iY?tpA<JO9a6mk\n{H*T>w)K0V`pT4oq~KLq6jXz7{&<g0&5pRPd4l9MG!ztDPU5=m`rOQt|7|exCpEryu_Ohq)($GQvfZ#\nbXz6W|{1_QY0*MsJjp~iZ6MsUsl(%B!25f(d;L%kPy$;estWYl)mjpOMw2u;My{#FWw;_Oh32l0m*t=\n4n!lWTvVCtia>1f!>l;`+(@+mH?EN{;OLjX^(4W3!)ep~zIcnjR3efX!*PwMZXW}p6Ra36W>73D8AN;\nSrBEflq*x>HXQ`t?cdY0OZ2PUuev&#z(y{@!-H430kgyg_-(!qe$q&v_oE4BDk%RwM6ReUPNgzlK?{@\n$P5w?d=-7DTSB2OkI;tNPW`CTm>L`*s^=SycOO#qgZTzwX5KKj@K0TBMmtmv*<#Zt%)SP}t4OAF~C9I\nO!pPtl98LsbozP<Cz**)nJ!NL!tIoTTzUP)h>@6aWAK2mofX{8*1FXRja$000La001cf003}la4%nJZ\nggdGZeeUMZDn*}WMOn+FKKOXZ*p{OX<{#5Wo~wJE^v9hSzB-9wi$h&U%^fgSQCtiHrpo`Q=~z?=mHxj\n$S$x&3`5{Z)C_BlsFIZJ*`oiw=OcBYE_S>~Py_4LXvp*3uU4m88^?;K%AD4vU8(RQ{8y?yKS?KY;Y9a\nMsSgKL9lDRYzfuc##D(soJ@?;yR&}9D8GQ^-tHS6LbLSd(Ek*XuNh6##TlQXAw`D)pPU%XNTlPWzyOC\n8U=?PzaY-&ITh+5S=eUMeI4X;IZFNj0lI91vX_ePtODAi|~--r`1GEwPDW&TxK;Z+Q!DsTa!z3_Z5tn\n8q^$MfI8oKgFRnA`d{*VThEx;n|qEh6b$mX<#rr7Sz3PxN8wu;-lTvNkdkM54RVy^{I!*GSdSsq97n^\npET7_v!UNKVIK_c=zK?D=1GheS*yfsq!CMX@fvN!Jb=okS@(3Y}zZ#Yb$)AszRrw4m@_Sbh@V<>uI$j\n-;svxIw#@)dGFsPsfSI|&1$vEWx)We?`>MDdzpHrB^{kB2FMM&{43kTW3N^WKdNArCf^K4I9$O#DtAm\nKvTwq1`Z3ZqrebeJX=RL|EhkUr%90{`s;{`|%^575(%sZZeiAM_CLJbu5s5jVz69I8Xrl)VrS0Qz9m>\ni|VJ%BzMZZ;5E=@pQuh-!tb2{ipvOGF#`O2UBc$DlURK@DX)EdsN3+9f>vVe~V+&{^aM!c{>H&s4{xn\nLxi-7>2^p03I>evOF{Opr?E05MF8?8rjIN)N!<-^h%P$iul=hOqH?V4?wj;3?T72pWn=N01hfwNGCcm\nhI(HJSc58TPDCH879}1U>qd06zBv8Z)UZ22v#LZa2nvmgxd<NJVJF8bTX&p<Fg#8LO)1jRE|3y@2C#P\n@j;SZ6`m@Bro@-vl(@-+kwsIsdcQ{6a*gNV5$Hzm#h#u;<-Eqly_XUuv1(sRdS|7a@fG~AvJObzH7qm\n+#Ioc_sZa~V15s8;0rew%MS-NjaGG~+68L#bru|vkrgVr?pJZ?6#ek3VUzenByS#CC7tnkpBTXomriq\nnh;p6rOx*7bQUh~wul+OY7iW2<oIAPy`8JIcQM7Ra~It6c~N8Yk|g6N9LZ6wv*K)H>Lu_Ke!#gIuzG2\nQvE*oS-gBxNRFu`25wfccQ;?1Lh^i{78d-?!$Ez(n~d&Xzqu%A6&6<BiKnz2FFz1>*`HFI~pr%nC`B6\nQ`Gybs4<IoFg!M)J+-OeGiY*p0+`liK_DpIhK_7x7ADOHp);#Qi=$F)a<^}k4!#^%#r6J4kY<9nP(DF\nTY8W1^pX}53_;n5kO+?A%lhEi`~0!>+)I&DM#!5}-Gy=qT!L9}&K{0Z4ACbt3+G05Pl)pFwiEkqBKN4\n&!5L@eFCnze=ngD22B9Bv@%H{gU0pztPnoPo^_fCj&XGfP<&VNtP*SocXZ7m(+OpQWzP9V_Sd=Z3+(=\n=mm`nlTMNU<X94n#-B0#0{$bB8e>>d|+p3u{nhqIDp@YxB|LlPh-`}Odjc5Gjm16KWMs*=6}Q2juhN%\nR<$M*Dz0Z<(ggzr6d236mYwgXA%-nQKlYi`3d@w`U>|hL~Knlg!$m?BYKibTm)da7wy9_C53>uffCJ5\nie+W3^l@YYsO|s78I~uK;Mk*jVx8&%inDFpDC%tdY6a8B|$Ulv8?YN+7@i)9AtI5<QHuk-pkl0{=zg}\ncvNUHeE$+)eLXl*8;twPMy^q!yjyleRvlU!bTM7~L%tK5cePiga%b)tD3n2}LpHgTr`iq00W!&!=|M)\n%1r&f(A_D7)kye)vR5A{Nj4--zG4Mw*jRTZfdJ)MRjilD&L2mfS%C>D61p(q$u-?F3X90Lj-yAN-jAw\nJ#4Vs+1Hfn{VxS%T7Ht|TZCV9Drd37FD>8nw=1`k@e2V{Sa+omYg6Z^xCt$C-Q^(&JfjU_FNu4R>M$O\nOegHiy+Lq)q67lR9ghC0;vw7W0hlgrUL$OW<ZDpIqXvkFEt^$U+ZjEY|DIEWty61Jo-8YcE780ZjX<%\nKwE1oF0+^bTcOU1?g}?XESH-wV8%knl+TLr$uG=e)C&0%zQC%e@H3B8j}sPxhFYFFRKNF**>DXKE{M2\nmGU66^MK*K4dbUp!6J!zt<hoSu4YE?eWmZ0+(P0HuHnycKd$wIwhx5$f-#=;m)PvyooA{@0wHgvW#C}\nxAT*yD{8`&#j{bkyHX`}^T6Wf4hKqi^(r?&!|0K;qs%%@!;rK7Ae&?UAjnU>;v*yTjv2r__gMudpe6`\n_v=-;KwBcK<WI}}9>F<~0Vz-)a5)L`_RkvYC$dyIInJZGP15V@Db#NMOztGZCLt)|(B+D17{{6?NM4M\nU(Zp%BA>5Jvnng&oRmiE977g!ZK`r`r}j^c|rEkSFD+{}}d%Lp}(@fw!L3XyYHGvA#%SZmS@4H(nKBk\nfdbRPqo3IwD;|hrYa#O(6)GFcccx{<58n&sV>ly_)*U-S9K(nVdpl=QA;l4LnkT;ak^gY1zuX8eF*__\n>v-?>UB5HurD-t6Wk;Eu#FJH@<&GNZ4UMy(pzrBgshgBF6wAZ1lPpG*(#U4XLbDE(yU7Y=SP3W5Dv<`\ndU9o<zMNSq4H1%Kq=^+10<{EDD^)|X&mm-t2$KI_mGSXg*HgROvXtU8Tnxd-*Fa=fZ*5Ce_zlq)}Ya6\n-y)3<Nl{4u;7_LkAsJeh3KH&;XUj#o&bZu>1!_=CWbR_G@fF)S29*Vq=<?>uc}+@sEW8u%xg(j{4GJ=\nTPq*`5~X5_=AgyLkbZ{3$R&&^`0LN$JlVUV^)q$-<R`D2rp>B2x=rdWg6#QmZ?uy8WK+Ri!X2mv>7W=\nwvgh7W1Yq=;FB`4A9(<`18>2P~#fZo(}cmg$8js-Ux{=6B;<9L!+<03U%YufQ^G@@BrGtg?%z5=!-DO\njqABn@^X(Ty|?@o(su*z!aUrqk^1r(B7}Ogp+b&k{b%erUPHm2vp<kc7Bv1Z8(~5ji4b$MXsmd>?%lw\n<AkxXi4QEryXn8s1cQ=uszdQ>AKNhvzZ+$3jR{sM~O9KQH000080A{lMSbNDR{yP8w06zc#03ZMW0B~\nt=FJEbHbY*gGVQepLZ)9a`b1z?CX>MtBUtcb8c~eqSa#SctOwLYBPgN+%NGwrE&d)1J%*-oR$jwhl%_\n)Wm7Nr&xr52~=l_&slW=Uphu^yL_k`fmHP)h>@6aWAK2mofX{8-E1Ydc2)008j<001EX003}la4%nJZ\nggdGZeeUMZEs{{Y;!MTVQyq;WMOn=E^v93QOi!lFc7@^D;A#`srUmT6(Mm#LL3m{f{?W&o66L&BYWEe\nsQ-?gI7zt`U%Zc*-5I+JzK0eW8;dbg1k(>b@LCe0%aFkgN}tHJKBxhk1MZF6s}qH2yqigHQ~D3afFTl\nKoC00CmphGP3J$I6eM>efYusUGKc!d*aleS&B;Gf<-D@~fCB_mwy2xlPavJ=At~CiwwSaV_lrJ;{isU\n!~!r(bY1}(^DMoQ>>0CO=!C7KxdT1V?SY7IMhmkxW9Tad*>4zpPKF@bZthR9*e3aDP*EEhApF0OLkQk\nQlZXISe^B-?G*Dcg0#n62CjZtvjPyJ9jQ|M^7?tE870nZq(}7M-u^3i#^n&xdWwU0pL{e3VIWb?GxMp\nwU4}R|A3g7#wu+C-+sBdlSyE{1VIxU;>ov49KOD*PSaVegRNR0|XQR000O8X0rTP;vNwUlLr6*vKasX\nA^-pYaA|NaUukZ1WpZv|Y%gtZWMyn~FJx(QWn*+-b#iPjaCx;@ZExE)5dN-T!KnpiZHm!;888FhYOL8\n%pzVsl&49U{%1BhqMV2&@a_a^8@4F*Kij?j21(`o26nVUt=Z<$r#&JyEoWCJIJbgmqIF2H|Z5yG;-?F\nLgSTH;4L{;&tX-kD<Q7M`&DX5}(MWtkt^h9pTP^f*&>ubBXsP`%P1y?VrNXc`atCYM@Owg-}rR4Wk@u\nsF#N|yVUnZKIwZ4L8Llx4K4vW(2hDkAWUpL4--^;T4II-0no6$e#d+qn>p@YY|{Wn(`VBH!>G^QSIz*\n?+F1XbGZvB_{DQPNL}fi;MGLmf72jm)WcH<>L8bxyW8GUY!GBTxj7Lz%)ew<LLbLWp=r^$S!bMuxZ|G\nTVAn=i2r)`_}%SlarP%Y`}fJ&k7wEX`*(Mf*|FK==f@~G(x8%422RdD=1jwv%(Njbx*&=QR+8+RsfnH\n}W*YOAQ~)YCW1SNAu?2>#$iP!<rmbBqVg82gXGGHh3))p`=G+78V9)EOW>G@Ue)8vyYzU>_m?Aq`b&Q\nxm0jWqM_Jr02*)hS(y_1bm!loF2xSN+KoYajXyatu^B>n_bov5uodfJGXlVSy1)^@wzDtRpxt#dZfL?\ncTRk1gerod(v?;jfHuHMeiX9obMxx;n6dl#L*_pvoPYxP{w5@Ldu+j!ER1rTKau%LMzU1Eq@p({;;P0\nHcnSV#HZ9bi5J^vf0C>=JwfW0)QHxZ6_5VxMPGGPVs3l*hiYHYM+6etSKiPj;EZtw6Suw#dvTLg?PQz\n)(sOzKfM#P2M)Ba^Z=sFtbkQ!Lh2Ag!@`)-lD{f&;w_gFGa>LKO-ZQ9JQ=bCY`N%1yIktgI7mQ)iq*#\nUg#1LFeytjfU_@<b{k4i<vKKuRt0!w8E8l^3-TJWP75FQwfo$^KcQ+rXxCS3W9BW5~k?oSmD|*9p>VS\naEtFA!&P>=}^=`uzy^Y&&&cG|5spg+3R$eD7*wsMl_sPz@T1MQv-1<PdEz5o~{YPyA!Wh)jY`2iPma&\noE9n*M<NzU3<8#W013m`OZJg6$wDHMMsbfyf<4P5n%(uw`n~6z0@x>>z_?2*V_=WQv)<aR`B1hw0eWv\nh@%w06}qhXgv^}BfU8g8-@{BJr8pfBn_<w;u9xnK<!{TwZ{>RcOIfQw<*f(JS6a0B+&q(Y7B&uRprT;\n^K1?x_P}`LGKIk>)zyTD^QQpP<nA-Dqz_N8Wf?*g1Jggqv1d3;0JChc0c8xFp^9yehh#{@<k7H0`f!5\n=Hw>>wAXD{R$Q3Iw2jLfN=TM*_ADM3?1I)<>UR9**1k4N4Hf>i?#rpk$8PlHU{N!T4)E}=_G%aMWy+a\n4rhL8wQIEV<%GxNCNaB5UOWSE*HHG=jCIDRR$i77mpkI14^&6xwj!Ucw7qof+rwbz0c42QT_vk#aCw^\nR`dJK;aip>y6(M{NIq?Ap}dDsn~hn~;CSu4%qEUO^$ci!(w)E=ue}ZEe707?`OU+WtcSpUSr4Y7)=ml\nsrv>y-YW;<Pynr^*UtzCDqRU%9z(XBn+yZi4TL*jJUooK41~*2>$Xz?`ST?Ul^aa4w9J%$z5oD#mfOY\n+W>ofJ|)Eaf+W)JC&_&qR!-EqKP5(~@DOGFDe5~ioPXdd<zK=cqEey4qcVY0P#F3Ec8i6+f5v7uP9Cg\nWXbl|FPOOK0a;)>{FQ=zE58Ipd$(<EkVgEZLS4~p^!LPKE|Br|4t@$CmW7R(F1<(xeh9!vIm1C|gdpP\n$v6|_U_7lFPJl}6Xtdjp`VpB`3TjHcF4scjY4C!A?Al+mSwfolrUi*SMIh3F~SU76>D2J-1W9ip~gux\n$fL408L%IJIV~YVyABm=7&YLj(T<zs1jDn_GI)WBxNsZl!~+Kf^Z#%O9Z3+$5-IW^HbN7Up)48fIqic\nCMYkeLTagh3^H9274|thr@8qReV6^=`$utKF3H<b9l0uLRrW+6UXzjI0Ul+M5j6s2!5)s+7KZ_I0rt1\nYYr?zSEM%D#2NDY(1?PxR6o#RG=TMW#lUoqZy&m>!5r>!d|18XqN%s6#<v;4G3q5;=!k^dJ})`YLrnD\nVfhnE`!|VNffb#wO0j65F2sxGJ21#I<yuEli^)+_m7ImKokB3wEFoB{S3txlF4Rp4coeXv4IyK{AuRJ\ncQtBtV0e};q1Hw?QJ!ztCu!bY{}htRi+eLpS*y+-T?dCA!CsK9VeccwRCgImLFsVy9mvi`J*&1So!nf\nx%3hw0BeehiPJ2kFo)g_wZ$r><zQG`^hqDQi@3{iX3XJjV0!o6bR>vO3zxd1-j+m9tSj4{k!qNWA^^N\n&Fr*uHK$v(Wk3>Sh&Z6V=UIe%<*gM7t}dS!ly5-=-U1+I^>&s{HbaEne=GX%hiyYZ6`U*xH5fkP+;e$\n;v1jPO?=CtmfaWBK<k|*+&--uTF8k^LPRy^<Egf1r8gJdww0q(3Cc7=WpE>s^QGvR$C%3uQV6Xw+fWQ\n5u(LUkal8cfVVR7|p5+<+2T)4`1QY-O00;nPviw+@rANqJ0{{TF2><{l0001RX>c!JX>N37a&BR4FKu\nsRWo&aVW^ZzBVRT<(Z*FvQZ)`4bd977TZ`?KzzUx;^*ozj`D#%rUg8)H|_R=1D$iXlOTAKB;rbvaPym\n1Ww_YApukn+X_it-?c^Z4dHJXq6%e;TB|2iXtCdbqacJL<pDSMb;1rO`rFK-Z!;1mQsrHGf3i8Cwsce\nGvDgTaR8UHzTw{8!cO*<agv+^q8tj?a>lujo(^~_>10W)AvGmzgcT+Q53Bb&cU^@z3`un_SUGT06L7Z\n-%$-{;b1I~O7tOINYX*HbvnxS2m;P7V(<y>5TtfqD1}{3AVoyu+$rN7=Wqo#OdEbDwXjdD0%o*&ny<H\nK=?)L1A+_|Jmyr^VLv^T@+k(+78N8tc-Z*b>Z^_D^M&l}-82MNE9qd2GYqO}!!)gzt+i){?2+E-^cd2\ne-{jzo{FzaV=*D3z;pNr%m$t_JPex;PgOoH)8v<;ZMf3Wp2=sPo4e+k-?!?B*a#WHGCXKS3t*5Q1Yhh\nou>R#S}rkA6_tBeh~zq@a`f+z{`s&YrBKi-6ZcIb3ljDz#a8k6w6hr>GuwaCHSUZSt6ip^G1=H8<vWX\n>u$Mc1lmo2lYm?wRm99dHnPj#*g!t@;NWnO9ju{%Dn8RiTFf0^|I~JA5FLTaHP>x$otWcLUEd2HFoIA\nN1;Y+f<F~_VJW%>=H^`rITJ4TZ-l7HsP*n7{jp?wwk@5I4zmSOX8ds2ey`1b>azE+--p=dyNQEEnff|\nPiw-^j`8tLcs9A=zPKU-5HS6TuprkKZ#a1?L7=^$Zs&m6a^+<j*I<a?Jg~BF77tT3RZ?Qzzl@oT(?@$\nFxH%<7~Qg`@m5rkji!)+%03w)u3n$goL)M1Ul3E?EP2XCO0t`)Wed_?=?k70)j2N4TeLqyulK7*rTu_\noY9#Bl&GL><c&8*(9s1`myRQ9jIa;L&Kz*slTKNLV;6Jr7cknD4!a`ua60!)JG)Qd2%I@ROpPnaflVn\nNz~d2|GSLK-07@cB9caA+i0J_ccyLI>c^No*aH=>kH(}Xj^12>A2*;%ic)ek<FG0z)N&9<{BZYpQEmC\n*_)V?#~aLKIQ|b8w{ZW}w|QO0LWCFXtdUfebYoG^_!8Z^c=PQQ{rJgd%$%BhuQFmD#RXoHu$8+jegIH\nQ0|XQR000O8X0rTP-<PS)!T|sP1_S^A9RL6TaA|NaUukZ1WpZv|Y%gtZWMyn~FKKRMWq2-dd4*F=Z=)\n~}z4I$Z-U~=6xkt+0d#R#TZ>yE%!cg2gw&fYx=HGV=AqiWmA_SxHyf+_jY>zP{h9Nm;pXz85VNn!~Ge\nmGO&8vCFd*9;6t^j$IQhzWeB=k&R<_H)=!1xwo3U9VW0yJbXfoU2PDh`0Yjll{|NQ#k7YjS}}YuLkIB\n_*g0D39zylP$8x=un^i@f7WBcUJtwAxUoChNH1w{hK&j?1a~P%UYL&uG{3^c0imqu!0*;D!BU%55eQq\nWqxRgn98cYa8=hMVXcK!s+RB4Jyk!QTn3thDLTug7}YsuiM#eH*wK@1-G!v1;l4Z%L;Y99Jd|%h`B)$\nq%rAKCErGmJ7enYoLdLuSCY_)cF<~HVvszD5;wxBBY@DMUdN>{KZ<yjFJ;8f#n_lJ~MPLXX@PjdV<MI\ndu=-mlC<|W8E2G7=wRL~fILpSB4L8vaw+~ZN&dP7=vy&|IwV8wg05{to1dy&nn{PMr5pOA;-zliuE`&\n-WPPXsdEVr*x>xGtsYnIrAC+pIwy((_iW?%#e~W)da2555n?*yeDN?GcIBsHdAa^Rq<NKPJghci&_xs\n^Sw+O9KQH000080A{lMSmQRF{5}K#00IjD04o3h0B~t=FJEbHbY*gGVQepLZ)9a`b1!Lbb97;BY+-b1\nZ*E_5WpHnDbS`jtg;s5E+cpsX?q6|mzQlkeCo7t@2KEMY1qKXjk!_!XK%k{l#F-{plCmol`R}`<ELl?\nAR)ArNJU;jK+#M@t_7GYt^%KawH7>w!x=rAnEJ6Z*<EI97fr~}Oa#q?bKcFs+%d9AN;)#xBd*OEIe1E\n*eN;E3us1MQ^y+<9+$9tiiV4Rmm=lKX)>VQrQl{x&xKU(lXDAk|(qx-xktE9sYc~L0geZM6FVcsK4Zx\n%ogSwqUCmLbotJ*p~!6KL+vFn%+*`tVZ8<Eq2rhas~35(NBo5qS}h{u-^^W2jAewreDx2a}f+^Xo!+G\nLcp`7u;Pz`g2UpgAXp@Og)}WBLzr7;<H(4j#?Q}l8VYCP%Zy5Fj<4jIQYV{&&vV9A$##<_~z#dKK}j@\n?rv}3KW}tA7HS;8;NSZ{vng~YTv5vdb|1CyHNoyhJA>UKh^;55;8>%Mprg3KQTRTdSVH6oi;yfTC`3`\n?3{U7XO2j=N2-ijsYivWjAdqcKLSR&hE^_fiK{_Rfwz33m!VJ`5VO$BuNuqkj5y&PI%Zca9&4uV^eP&\nn53|xBJAPtl=55YAEvbq=t0Vg>MHf>hun5l4mtYuNpL3N>;k|K_!3}UM$XnvK%I8{RVuW6g%^}h5;5R\nnhBZ(fn65<gRDAWbWJPnFa=KMT*`Vjr4e;X*K4p?9R_JHa?f4UC9pB(QDfxnp4;B()DJTGH4tfD<1K6\noyjc_WT<CdHcgl%R5cI<?LQIva&ia19CXub5Q4QvGwS~_ucXq3t7p|NET?Qn&DdP#0)VQ3knZZ1tW-g\nUgf-iIu@a&=1tsb!Bj8@9>HZ$hhY6?y|!q5W?Sl8Iy3HxztfvnKi;jc2G6E(8<zXHu^+i_tX1UPJUlV\n>cXwTHA;V0`gNU09^-58SFgLQd>v%kl%_{K_P3`O>#Pt<JriIyCnh8_}=|#Y0zuH^-gn<a^samssD^~\nB>@aN&Jr@+L+n1{HGpMw*AGjrfQH_%Hdq_)p#SEQV?b0$uQldw9W+bK<{V?Ufjo_C_lN9y99Mj)2gBT\nH7JJ|7yV`S4;GMtzs!0r$-@b2>bo63bIBr7$jUm(wgSspRtW{%G{i<W6iQnTN>+KQHF)FfiG}Riq5R5\n#_%zqbIPBb25ID^RI8-tgl9Qn)Gz-nPL3%;oXM~6pf=69aNi~YTX+}UUN<RZhUr^Bp3m5E5d_N4b7?<\n=veBcHlYM}gNypgk^hgZCtj0knhzP>9-^kIp>!d!XWkxtZ5l;%RSYC{+(^j+Q52>jHOBHyirP|B)Z9G\nMv<pbu4^87{cqBn%mYZq<7F{i@heq?Pjb?DO<))*@-sFbhoGfWyqAGv+N<yAwsGDs@#k{ty6>B2YT6#\n~UU*F!|zI`*L(FmWYbm2NWp2W|K{{c`-0|XQR000O8X0rTPJSaHn(HH;#DpCLd8~^|SaA|NaUukZ1Wp\nZv|Y%gtZWMyn~FKlUUYc6nk)jVr++{TgL`73bX*#=xoNTe;tX0nMCnT~X^C6*|k?~ccS;9`~w6AP>`0\nLeAY|9<_LCxBhjjw`NXQZjZh)6>(_@99CYT-8k*%)4sV)^#a&3T`M`(RdAIeR)|_m-=UIUaV?a+^({A\np&J^ZpSq?ji;HBHHB#)%n|c}KS)0wuOiCdG)yXt*k9NI+Y4pozCxE~A|9yOvzI=7`^6#(T{B1%_FRC>\n^d|k|1e)_hM>gl^|g+Tbnn`|la_uZ-#{QK>yE$S*O`IqzJ`wH48JMj)9vMN?dT2w#>=$v$IQOYD2t47\nQ+1YpotO(NesY+jTC)@9fH!>gmCZ_}gydVloh<n`M(n@27(xv;}t(XY+DmxY}9lv`y*b5lsQ!barTtW\nC47U8D#kg$?32a#a@Yi%PU*J#*fP+ZIW)acY2M&_rfP+nS&w58yK~$WAf$_wtY?7y(*TxwuVcby*7F%\nSJ<fjm<A>=vB2lJIIov38tDilS|QlOKnk_R<P}93Y)pJ8@z3D=(o&TfG#J2$eOZ%21VROb}fP|z-<({\nsAeLlui<S8dusa30f(DK)&j5_5!@7I2?)=wg0>DiDUzM^<on~}x9{E`eVx8~aq{Zu1h9%ixyYXFAB2+\ntpFaEYbM<ua><j&LpxgHGzsvkth!{UNG7$l7eiGI6ebb3}hnj%Tt1ILLCSDkZ*dP&=8B+#Uy5?1h<%P\n&|k<&7Q>#XdAOoI1|LIw<rL=(m?YFq^YJV(l%2g^>j!37YeS_eyn(**TAI3FzZTn%%8&aw(e0yaQL5D\nY{ut8(7w^B2u*QCy4H)x17Wf*%$j8-ddnAP-bIu7}_Pp#L~|`({syrpU_Tr|bgy^IBn3miTylbR2xK|\n8xS&us8rIvZBJJ3FMDrhI^=FqLHX#GNuYHm(U~f&`!_l2AH9(gamHER{*36W(zU9!htsn0SyhbW-Y-W\nunHmCh%AuMdzk^Jw2R<8DP)TM(yT1&8<9uxc>?>!gv0p{1KBcigarSj-#iY5Xx?O(OW57C5x`uH0O?q\n+fOstE__rIp`RgI_XI=+Y-6E_4I7u*~NC+ta%RIPj>TVT8$)|Au1k1Q%un@NnsJyrovQ0qbWGk|Kf^a\n2>VYv>jgjg|5K$Dbp<&eHlF)$?#*z6K_MXNF-Wkn?1Gt>n*l>kA^6{EucMJ7>Rfv~x_=q_>Y%7M9RYE\nWyyKY&{fDlltu+F#Jom06lv5MU>9DF7h{Mk*?`*GkY`Okowvti(N40)&dVVmczvtjcT#LZe4C;py(jX\nVKkkQ5Q2I@8fB7`j3y#K8?c!VPvh{C}J1xHVuCclOOA%ieN_t;Jy+OZ8@?<Ox$RG;_L(Yiw)G6)pg8_\nlZ$zfreK^~(5j%@(@2VP9tV4W4&Kz2I5fl17=voXx5>s?80K@@;3aT>opXcn8<Mi=(pd((7%j6~S^Ol\nXI8AJDnS)9nGIKO5CD{mKdBRTH=hILty70_m3u1Eu`g^uO8Ds848fDCDvRejOd096gc1tVSpww&Bf_2\nxfx|U^(1W-eT-2sSGU|^YyN?amo(g>O@!NHpGKwwdyrfh86uBqsSX-AAEO3_Sta6-Z;BMVjy1Y9EQKX\nnF8>0f7uGnwY#0NK4ocjy!dGePP&bW=d@%r+nLjuXIp4<NI;1<9i7ZNWQ+mT56Yk<QR^-Yg2B2k%8tS\n0IqMJ18=<4&<z2IrC_*Fk?uOi{Pon@a*1MbYGidw~3O_L(4x5@r>4R0X*uhz&xv^pn=5=?W0NxlIIC7\n*1<W?a-NLBg7I2UY~hG+vQmov@_F3AP#9`VP=}?g!={!l4|@yWi8jLy-+-ww9>eR3RTBEK*#(FN3Q!G\n(WvO}x=(3_}sAmQGwrt2URIea(7afkYCTu`@p9{}^p+*8S(h4mt(V7kEsWcbRD%z;Hi2w9k2PzT{5t7\n{sJxh^mwtr|XzK-g>Wc+r4sh0IM`%YbDreKERK!9T%V74X4Dqv{mY(z@|o*OP%!SaU-P?vqpvW4yXT~\n)tna914$*GwGHEl3>Afvs4AHbS7)C`Iq}oVY2Ao^I&R=W(|pc{+n7R-|DmQUHIfjqo391K_`gSLwema\nR~5Vi2XwJM6=-gci&Q|5ky5Ik|3L-zfQqQi)H~>JA593F3KA44#4q`6A$EW@PmNe`OwwiA+4ICCI<t5\n;%InWW>;Y8JCF)k=|Z_CdEKD{N~7|`U85W9CiFh?n$%RZ(m3{MfzoCO@;F)`@63xvVz`CzxJMCk&d9T\notD2o@cnuL<R&vAz^T{<hc1xFnJ&?Z}L3e`}rK~47;Sb<7)Hm$K6Q+dOvbbEd+Qmn$)PVB`f`joLn;<\nPai@Gaw;?xT>NAR}77^=HP?-P)5M@!{9tMTF%a|&z}>Jso#03Bek<^~<l+HgQ4K0uhIL7>xG6NHAa=7\nr<LW89<0Cb(AAS_jY`_1?kH1O47|6S%>mnSt5bQ{K*DF#LP61HKF>&1=wixQ}uWOoY+%pFcYICJs@}B\n(MMW=Iy(qmoH9^;&I`P@E_vU37Tc%u$0@-<UYi}yrrPs&=6@B_PMH<_W&DRqeKThP*}p4AW=^N#&-J{\nPZ8~?Z974>$4#Z3Q#5mU-!eD>!9A5V$(;hwi0eY)ve-+d(BVH{p5Ow(qi9e<YS=O0oRtQj=<u{f4L#h\ncgk+IOuDl_d8+zz5r)MnQgc&byVzCDdbUr9D`Mm_7L-auqCc$YKp2cyGUV4HAOcjLYktJfJXNj%*3Q;\nKf77(h7;G^5yfP)$tL?Qtz_tC)|c>-B%`y_@aVE#lC#cIV$TtXEzc|#44iVC$%$|9O75!#|rzcY#nlq\n3WlsF&tl347zJrEh?$;x=1i!VuZ=6Zl^}1832Mg|N5qrse$51@aBWh{}5kKRS3Ca*T#S3AUl<#R_mw>\n&co@3zpIPI+htz&4$U6T5(J^1BIU}Rg3R0MJ1Z7#N~D~pqfw+&M7w`4xc>XEZ-Aks6PS_&?h+KUqH<?\n>s=lFoNGNLyRroy^Nm_l(t{0*cG-~u9Z$e1d|$5G^@LLb8u3QVQHrcx>f0oq)f0V~95p#(k}!NFGW4>\nqn^Z@9?rEo~_bc9L#^Fa-@d6dFRP8BA;gm*`4{ihDwr&A#jVVXWm)o43;kkE$M83jJ;|yHRY)4LE793\n}@tL##6w(}FoX%`}!@wn4emUS!B6ouZ#A}K>d5-3jN=KgQ?$J{2+|3Xsk*KI|UQvj~%Y7NX<xv$n)bp\n<muB9s0L9YU}!#wTwcOcA8G+EnG?+_&QL(nQ^=-3uO6++YS!<Y#_qA-64dRgObXd46`<LpPxuo}B?T(\nRH-|dIWHwpua!p?h)mo&O<^uBiyiUICMxwwztp`V?Wz*5Y4Eg5hrHxfR99DZh(78T7n4;|DefM_Ob53\n`2bUn*;`8ZMhg&e-2pL;`%v7?F$n}1;O>cX(KL+UCc|8OSLJqz_y?Mq&1}-2WUzrJoHSC-BdJROe*RA\nN+dHOy=N@<`Di&o9bX$p80ncPoG5h@4=g(BO5>xM>`E8GjwI8$6dDossYmd<ivX;YYp-suF_uqZXOK!\n7EOj>$SaxkjU-y-nr>1Ttb_n4743ZIpuUt$(i0=A%*x$i_}K)kueI|9X#O?1jccd9;V-F}G&NvCsh0O\n!CIdxS(29uitw5IRa#!gJLlq*9BZkZW1Ab+fiaOSBOhLp}i59;m9;ghBQKzwElmag7v?TaO>%ktx%>7\nMuv5RJ0Rc9gzRE#B@sG=2<u^u33Xm5eJ(#rW7bmpji;8gTkL{E06u$?dY#ecC&>YUD)+0hRvGGZpj3m\nn>-6rJ4Y0S&vz780_6oF+xF8%6fLRze+Cg;P%Etijud7w%AyC(Ib0*i2xUN#F<ti}n3vfl4}vvxXhG4\n@SK0#43BZ$C7L~t0`rt<ED~U$GDFiylDj|aj7?e7@?KD47>v(<q+Ji=(yy~ZXtx}!4G3SUDQK59-gch\nm1$H5Y{mVTkLK`0pJaEiPn&it{%gt<Xjvpylye`d{Ez>2&8W~HzSg6OKOv)s>HIzIb*3UReUp7ix5Z|\naaa4f{|`<G`cbFYU|4I&h8+B+I;iSd?)}fcqDi`Y!N**FwX97D#{xHRU>S@kT48&Kn_keDf0AYR(wQg\n^LjIHuOxu$bhSio_7@fFZ_kEpHW0;Q}_Iu{aVl8NE|0?#2w}s%{wOmr@gI}6~jRp`F%}sjUr?<KYH>I\nHKNr6UmiphEEI5*1Ey`(%D+e6%D~0GQHL2l3=L`)brK-rsi`?ZPBt9Mc-S*@a#;Y0#x%IQM}k_2D(y%\njXqyv#IN_a`Y)g<c@+L>wpV{>FWBQSicb|T$lcoB}g1PVQr)7IQ0Wv@QPCa>`q>0}GYwI@=J-h=Tg5?\n=zfaLx5yN*cQbVLmMD;lUwT-l(}ALRPp(48sjHb(J=Q$RZ2L+btr_*>^3kM_(D$DG-m`HO0OX1lB)=1\nF}Ye&j%~cNl1%Uvjkpp8BrVt0F*LK<&*)JL$-3=rZ7>97Sg&7UKsyI;{kBF$=+JlPJW<%Hwa-^}$0yH\n*Ue`bu???=@v?PXfjRAR8I0`wN^Yh#I)yfI#~Dlu{TipWqpk>?5Lwk&=0YzqtPw;!~W-o?AgOesx1L!\n&v^nooWaAVJ<Zn>&qLc)=D^rmbs$26Ys~J_F)!-WIq1s^2%c3D#}X8IaZ!LiUfXRo!h^oqa19<J{?7U\n%N4NI@;COnrhp*fjdPdl~Y6ybeWEE6o6ys4&kB+=ixoS^A$i&69kUFA@Je(#psAu(f;(-h2mPe8MtbD\nk9e95kca--L1aKz?e<S?%&`&51qPhb?}1I*l!5795<cpQedQi0LvTbEsS;*jd-rl^qQ&_)<}E%=a<@O\npT5U;cSrq<wr*6t@s7plelmfd@s)BFoveQ#|2qzYhjC6OnV6!s|eZfF4iub%LV|A4HcU5sM=cFY&h-@\n$m!Ht<(Dib1EeI?wg+%u-1HP)Mif~dlq|Y^yg$VI#Zu`BN5G1IUf%&!gSbVhdgL(MJdQCkK0?=<wf13\n>|ILN=z2-1?dBK%E;9MsSY^g2P-uT5t>;Vm^Nq&&0n<!rrfF}z${xWhUxm|=HMIWbMp;v7Lf|(T<S`t\n_vO!x+^F|QHNdGdsOJjdO<GXP=zpWYGIL)X*wrhXD9#b}lHFDTCod}g(R&Dj%0Y#<)>s851qPi}80C?\nf%#Z9LQ@b6>?A4hEmonK`K?R-PK`%gF~n$8nUS8;h5P}>cka7ie~ZGoyR3a8HItNnnXv<uVT7Cerg1J\nCD9BXy|pxsUxhheTjP95oH_)?T2qcsEUr8OZmb8CsM-v*m^u$p8x1%O_Mr8x7v#AD@RPg-E#=uAki?E\nV^3xBljq2ltkov4!Xp@f~L%){|{V&UuW<6oC`FFTOMZ)tnp7*$MsJ({Kc#=`Ur!lXIc*L#>U>q;T9<*\nSbmjbFK;qxPUqp>*nN}8WT@i%AfmYZt_SWuzH3(ZTT$XE#^JY(Glxf3a4j~|)u8<+bT$~N`#*>7c*>M\nH;|mA^`s1+=&u>$QJX(BEV<&vbe~9^yk?K_Cr#Rj^b)S$E6mM`{+Slkjp=af&LG@N+gPM#$B_=b-n3e\n7CjoF|2h&|`>n09T@)V#BC=gg*Wf`C#-MN{KoR22b%p$dcs4f!expE!1b{GF-2^p>FKrz){@C4oaK()\nB%?W~)u;ss<jJK>&9ZARBupMul5Q(F0Ocv$D$tI$q$=HKx>k1<}Gy-So7-y3R#iQ|yB49KG_TDvs$n9\n@|ibO`jm6rH*um!G<JUuFE!g9%2>9o!PU0Ywq!6D(|pd28@~Bt3jPOHg4NsF8$cbD9)9%zN8Lea<R-~\nIL{snBs^#nNQcrxkZx?lcd8(EGNq0^78wtTHeuy%-4Lrs(QUZLgIS#NG@_rnJ!nDGmCG%66wHVbAsZF\nWc;n`I^KRTZGhuwXf3`*aq^e}gX2i!~^X^ZK)Nuh4RaF7w_fzbabld5TrAU0Z6m6X#3^hHx?ERq9lkY\n1*7jsW3*2Ry<qES@^UowZKK#m^;m|D73x$y#86aFJQeX;jHPxrn$`&mDz|0e0)*{8ZK{`Y=;DJK>jqv\nV}D7&?2&3rlf*e`k1T;oRM^PC;Kw)9^>+1a`qL1_0e|Vp-Q$cw&5o*;z%hKoLu6x~#16&S0VHQ5g=%v\n_2e1CT+lj*CiuOg4UPIgy{eYize6)x8m;ZhkuhO+8-=W@tMDc35|)|)}95oH=BpSf^vVs$0Ik%UboD8\n1XA}#s=C_K<RP^_3<gwT9gdoYe6Lp3tb7QbQ#wYjVUk;p0UN$yK{Xl9d?Ro#VGAMtn1%<>lBXl@3n@D\n>-QWLW{}2AlVU*z#ONp55F8Ex!Zq^UUn%lQ8bR&jm4Dv6OgiYA}(<0Gp>+zpig9&)>*l`5+vD~4#TgK\nH-T;<~2L>jrL6ams1c&te{5~hrVl#jlzXU3|tKW6u2%og06i5`POvh5gLVS==YTnq+R1P49zEx76SY5\nfa?58e0cUC_Ha3{J1lD9d-Ht`51U@A?AK{YJ(%5z;n3Hr^(fWvo??ygB$Ldlbi$z{v-UPnG&E|F4<vp\n=sozzDXa9Pd2$T>@kvM4|l;X?#HK3&ve6Ibi>BU3rYKH=k{YZ&(R^jff8Cc#EESI2xZv7=%k=A9s^9x\nOWL@W?35K!4^E6Pz76r4g%IUqCWCE3wEN%9*bMo4CO5$y`P>Bb)}NSw$AR8=i3jWsU6QOUQ*M!4u;BF\n2V;1Nq`kgC}TUa~wC215mHu}8$ue(P}3VcC_15_r2oKm#^svEUn5TXsYYEf^+4{9*1>*wnIlx{4&qZ<\nH`{hmy0D*E*?7gzD)Dc6Ut03{`=*_v-dyI;xB6^n(rT~wFX{CxxdVuJa=#7&J=hI_V}SS9YL;*J2K>x\np-Wu<%+NOZqy2dsCMvZ@<bRi(E8VF{zPkxfYZFx|s8KGqUTt$R!`?(7^^3K4Qp36^|2r>6_uVbxj8#G\nfw~Wt)DQP?tgqSJqUwq8HDigF*JlRXDm4Cr|)N!1)d*w6`v%lS~pBuNJYPwd^H<ZOf`gb-q0=@A^2V$\nSS{+dp9Einzz{V++2SHPb$QT!RiYKMMODnGYLn9Gfh@2D9qU^g+>e?4$^^9lP3Ln#SHty}R#21Ycufr\n9^DzuoU$h#tteq&9$HG1h4ONYlh5C}oWtTM>fD?MZrMVkKSmTL~-Kq&=sX<Xqp=4x%q44tt7Ry0Ki9W\nXh1YfS`?&3-9R(r4T#u3sZ0Dfe?DY)PiJme+&+5{2ThFPl&=9#schgZN@>XiQ=363#nrB@V|5*XwoJ~\n&jDW7zjjFiEIBQexh8RZd@6G1w7PUx~Gr8U~BBdGq$YzC!lLfG)BUyJg63$YAh``OPg+1yfg+t}qy?@\ne)2uf}>k7!LtIHEk|Zr*0R+V>n6TImYP5aHxsKiI6wDX{PT01U(e`#f=BHka)vrqrL(N6M$X6-Np;CC\nxxB<}Oenka^ida-0>F-|>hS{2G~`RN@CL9@{7w3X>Y^*AHN{nUozx~}b=VrwCo?E0jkR#=6DRWl6q0Z\nl4w6w}c{3eA)_BLaG8L;UQR9I=?hzeIQSmBDLq&9#t&(I=dl^Q1&`C7&va37EN|BgQLo@nef;TO11b#\nuKmRuiz#pcCjrHX8q_RbtVaE9g3&!^BmI#%h_iTKH_lfci3ag7AMcX!r)u16b7|2qKwU0I5K@Sj7@lc\nODVEy|&TB!0{aOC9=IA$6H<s=BFEUeYKp@i}{md;4c9gY&|@4EXMwm%*1$zx--q3yBuU%dnT|r5!?;l\nR@ZC7vk`Rx_UR)ll9$3Q&7ZMSd(n93=J$c<xbMe+XVVI{U9SXlkOL543MEiLR7u6lX<6^;cMJ|N|}HJ\n*!f^29!@$JkXqP2ClSN<MAW(Y5_Y3NmUTDV$gECC@D+LRMG^;&y8HuSuwYTV5FpcdMHn;&Rj-W3;!fe\nVJEdL0Y3RNP&ma<DGtC+&q61qx9G(P!7i)TQ@;E)H<`(JrvK<v=6)<aF^Hm)~2L;Je;}J9<FU+Y}w*}\niE9A?Q^xJq`<#=q$SjB({M1%Hx4`F)<VW)o(_U{l3s<`yS&>{KUGNeN8D(57kOM{LtV{C+D7Qx|85XA\n#^V{Y!dY(OB<J>86h>p_W0`hUm>W2&8KES=TV*A2^D~I`EoYJtegtqoDU&58|Ew15ir?1QY-O00;nPv\niw-z<d*kJ0RR9$0ssIW0001RX>c!JX>N37a&BR4FKusRWo&aVb7N>_ZDlTSd1X;cOT;h`zUNmA^`fx0\n2X6}timV7C2<t^e%4|B_1k<L>%)b2frroYxu$N4}G~X*(mYJu>pvR5`P$XK9N)_zAI`FM1hJfm03t}B\nLB)J(bAZ(~5#sG0gyz{h&SOf0R2V4g_{|(qyppHC)jjhr_XCOqzsdh3iiYi*kyQ8|;=8-qWT`_8=wW3\n4rv<X)jl(<c{ZZ8exCQIf`&9Q+B6>UiNlcI0B$T~sBtRA12ugmgf`LTipd}duD2!5T-AnUeF<LC%0V(\nCY*>^mLCo+kS;#@zoAUMI;PY8UUkr5iIquo~jd4WuvGdKdw4F;oH_suS2dZyg{LY$Y{}(ia136oSe#S\n&i(I|2pzOgRH(rtN)(`;caLv@!D_PP=1y*!%&tIqDon&uoux!hhz3Rh@ND|1}0$aVFJcBCZKQPwEG26\nO9KQH000080A{lMSRV<4*kJ|$0J9MQ03-ka0B~t=FJEbHbY*gGVQepLZ)9a`b1!pcVRB<=Uvpz`aAhu\nVd8Jovi`+I4{=UCLbtvbh8>LMNg@Y|gLkoeU9J!Q!NDoJAYuC!zmLth~w<*nU?=#Z+-Paas^0Jmjqj`\nDenXxKsZ5&fh8mDz(S1K$N`fyOyp?%feMy;)SsD;bhg~k+x+VNT#D_47?OO^>I(n44(EjtT!OF_b&YA\nA0vuatGGuu-d;Cr4Rj+CXD^C&&oiI8}72Qc>wjrJ_)uWm1V!4v(q|j#Q%HrOsqwxvDbx(4M?LUB6k9_\n3C-5OSsj_=E5efu#bzE%BHPwrA-;^p}=gIk(o$cA{v(`q#!|zRx1jrG;G_(mLH_M@@sM89Z8b)YPEXV\n#VW?x&$8OSGmTuY{1Us7!le04s%v?<VtAq`^8f!_rJ}Y?AsnLaa*10~;gqiE4SvA~rYuW!wO5A*7BZ)\nq_1bu+$p1(ZTWDvK1g5@^_6T88sOru}8y5L^k~{vb(urS)Zo|o5_R=Tyy>;f+@AT)UJFSjOwgdixo|o\nR&Qo3Acej$^4mKq7)V*gH0TG&nZvUqd9y?A}UJ+>jNui4WdSu_ZDblJ(bF{kIXH;aj3W|-c6l&NE456\nE=rAjDH*KJ><Z;EOt+u%8-LWCO1_d$VVvV!|AnQdW*xCycY~Ub&oo*`R(|DNbxB2Rej@Kmjd<1SEkBb\n(EBK!E#+nmMH@xwK;KiqnR_Op``;o&@HNrsXhIY4+x*#u*OR7Ob7jp9i_3r8y_5fmjiP6gIZKOX%ML5\nL=d#n9D_Mez3J+ZI~Y$6OZKs`4rUJ2>=1*j=<P$etCPzqpgs=t!$(4}FP!%V><~qlEMkMOecQuF8%7c\nU$`DH3zQ@qsi|`P6x-O2sMC-ATN0Yqw=W)fD7-Cvo&*Y(4TTTKzL^p0VEGVa^ReqKl$xL15qOL)w=c@\n-X1)lDK0bN}X*&!3}u5OsD#IBIphEiLx-(S7`m8?Us>q4Xw2QCZ|i@qBp1mIF&9bJ)<KKwXZ>5fX{i8\nsTTckPF#xlmQy*Xw5H(Lzvs@5vC7VK3r%@jo69dpO5!noHEfcFUsNx!OjLgxzyBzZa&0`|+X-J<*(MJ\nvb+XY~-f~709B;6(O3>Zf>qNsMmXm^70jDZNbpp8Wc4mca1tg+;JU+`X6+OqfiB9moE#=14Pdb>~`0~\n#z@zgil}$&exIG~G+mo<5p{{(4stvaX~}ro{^+;Q0H$t$-kI#Fx}1}^sSRyxWwH0vjUw;U2upy^QOSo\nMjkCQSV*%iUl<~nn(cpCLD;%Q1f?Es&g`~yXInc36*_s@l<7{pfj9MBeV*DM{bNf7D*Mw;gl;7T7%_}\n8noYsl03+3YZ<%>5!FX8PVD=>NiT2|E&B<DNCxs)hSm2^l8Nn%v8L&E4)!Aw+uz+Z?o^4!nPm?kB37g\n>qp8)ng^sG(rOaSO_@BiIh@BsEPY(bS}5yIMbe{_XQ0zT1SK-@o|w1#d6Nw6vhV1y!QB7bhF|p>q$mP\n*EG|n(*3pE}QEHjoJuh<$@mhkjgsLJfQ%+fG{hAt|dmIBBmViVIbSJ5YhifP8aWT8LH4@GWyy^K&32g\n>*j_5#R6{EMjus1lTEONUu+)LI!Dg3>;j$^>aguu|B6Rn)~)nRb95CNm2WVlL1F;-^RI{p-iT>}<sUW\nL&4LZ<F&_>tZh7IcIpMz>b)HEECM^bSYUctG%s6JyE@wKYp7ojV<R1M|ov-trOgOiX(1dh11Q?on{in\n<&@vrCMZsHn^&u{%*(+`!sZh-fr5>uk=qyIXW>0LO74SyHS9rRvea$xaZ8H|rAEETwXeTF+qsnZgsR}\ne<017k7l&l*fQ;I!VR(R|*$P&CRrI$YyRwoOCt^r-oGP=E=y{kL<7?<_M^H)C%8)M$M3%szSJVXS9R9\nlkwbzj)$#P-RoH@Qtf>3Uq%8WQ$rqA*+~b3tTQMi-E<*&VS>NRRPh&6QBeK#w+~%jW4yFGxn+gr8b8=\ngjEr*wn?zHOeczB;x+1;^fiwG5!1aSIwgyA<H9l0yawr0hN)46JWe$Erb}N$X9%4?C1`A+O2xTT7*8{\nT$<WygJ5jZhn1huze6)ThWh9W3`(f^Xwlw#L9MiwwFi4E{&$Wfk*)a8f4y1WK_oZ;V`WsM70|XQR000\nO8X0rTPDLxDK2Lk{A-v<ByCjbBdaA|NaUukZ1WpZv|Y%gtZWMyn~FLPyVWn*+{Z*E_3a%E<7E^v8uRm\npDKFc7`#D+bCTDUhfedZ>XED6$+IqfOC65D2t1idj=6OHy|H_Z^awB`UTLmPO9;X5O1|V^j-nuep2y-\nfCqWJZQ(2WFpHNf2p}HN-iB5IxAXLqp(GzOv_wZDd~(7gXeuXy@`iemYu=l!|lTY9@pH0M64|=_in8u\nd@eqIIJe%<s4doDg>n{br$Zcy4mESE63kk(6vru8AyB$48b|hoM*$m+iYz?f7YeLA{H4JL4ay4bA_My\n5c^;m3vSQkHf;qI{))bV<no}SIJ2-<Ly(1X4lR~kYx)g$t3qi1s3E>;paDfD2NE3dPWvHnv;ToR8Nw_\n8twJY~bZm`ZT=jZfYQf@;)7!^J>NIO2giD1hWm(1*^7yLykgQdZL9XDu89eUqeJV%&kaI56GqiQPA)k\nu}W6e85vuueGGGSQ)@p=BHDRA&&7Rcq>=5PcxaU7*PF8jXeB8mYYo`anZXz{oYEz`BUaV8SX2)Oo67D\n7R*gQdiu1HX`{gBY60#1+Tcr+mja=s7RKVl#&yqH3~fh(x|jRk3|xKKw$JE`$!lSNL+ErU0GfndPh=d\n#!gN<vVfIRVtzLxE*cT@_f#8>#wm%5!>Bzalk-fDKa`yKB@~|uew^+}67QDAeg{|I!s}vGO`hLSr-({\n+bece|{?cKQ9XuAA8P?94^rvS(j0SOMyat#Z)Ns-BXHi-_MDici!18VhU%q~N7o?)mwA}fb?{~m3u5m\nK^DJ<q_=AHhYE~mZ<pa{PF0)E?=p?63iMWDlOAb?hNrXpyp+OQV_@*W~H<4F*lp9PwoVQEamaarSQSR\n*9gjeP@uM)=T80vK=noGMXY!m10i$^Fk@oTRF`r5d;1p7!r<0Pc_9q&y{`N$zOkcZF&-b9^OI?((0#^\nHp5)d0ZRTPiw3bZsR_&K3vdmF;(8E<>mw)pnZ`F_O$ee5y_IVE|UFro#^(M;cT=I9<%e*b@u;wJ=0@q\noRCen$$M&gve4rf*?&+=0|XQR000O8X0rTP-VY_YC<OojuMhwLB>(^baA|NaUukZ1WpZv|Y%gtZWMyn\n~FLYsYXJvF>aCvlSZ*DGddA(OnZ{s!)z57>8okMLvOQ6~IV!#D*NPz-HH|XYO1X^06Y&H@pkW^fCvH!\ng@q#}uuoXx2^*b+5g9KJU*l2xsZ1KZkFVRQwqt))7F49kB=>k{}>JE;{f6ZkCf@v*5(u?pg~tXcXZRI\nUxHdG^dtsLdQd*;f;f{4|!8$_azESmR`AS*EL+J9(6)bZt7;I|-NCrlxz5C-5SS#UN0>(5cg@(z$lm?\nN-ueua=ZH6))w#A{`r9tyWpdt;GNh`g&;HS*zU&@LI3e{{LQOytYlrov`4}0&1gcVVuNAT>yum1m1UT\n1pb0n0whX%qnHbCsL%$bLw@kJvW}OS&0JqpsX6XWxQz9#{Y{$MQahWbu!n<R@vqa9#B8T^8|`JC3=;e\n(?f4m!P>M<@$LSEqZ))5aMpi}QgXQJbnZNV}bDR64yRw{G;ks8(VRN}CaD!4wm!_Lu$BMETEcDUsdi)\n&-jtA?^(-UUpPfYblJdSXr<l%b2GfIFlwxCKGd!Lgymm?h#kEFNo;aC5-8&cAtimqMF4X?&~yn_<`60\nFb`;sz0Bya5Kk7r`(lh@0$;;6t6>l;3<n7J-yI;6^~t95}Wfx>;ik22MnGqGIp~7tKXlG<%U{8JR1j$\n|p86uHY!(*vJxtRDlhz(W9)j=t?REj~Jg=4vzewZrPHhSL~x2u_KqX?PC-2iq_kCSW3GghEiw9p_a{3\nI>o`A0^J=GID!J@7|~$C2;{8Aq)@>_myxrM+MO*RTUbTN4mb^s6|fQP#NZ1il#M+eb|0U<Y*}RN@r)&\nbQh4Ss0!pDy?hHRAaGTI6e}v0fC@L;567w<JQo!dM0P*H!e+*7X&gUhT)$NZqF0h*|6phOK{x}(%MKQ\n(xT^Gmy6~>r8H}KhML^+|*7sTnYdrbMPUJ&{Sl&KpQRUNimR*}(@mDNxRikVN`ddzr_{+Y=o!1OAjwB\nI$b+|M=>!R>0HHlp^Lt=ZpNs!he~4IW`K^>EnTK5a+ZK0$;*RHnc9MGOlRi5Ftwp<?WZ>M;=+$2vS*6\nZ-Bs-Sn_*0w@s<SVKK@uwyp{InK+*R|Uezrcqn#K@u=J!O76orX2(4oW5gRRiainQp9m8*6X`ts5SwX\n8?xdX3Le*TKl#mz4}3@vB<cg11nxp%4Q+!8EoQ!5=2iD{bOO<C5c6-b1#?U#dd`8l*&c+EoX?mu8!R|\n(>!YPRti5l!jVz2{`z+ejpRA20D7rS|(Px6pZ88y!=bq_aX5wM|8b~t}n9gHMG#V)lrJ+OX8kSO5tiR\n%hzwN*JE&pJ?t$qG*E$Q%$SsbMVkFr}H4y`x19dPK&=0Jx5iaq9+0r^)5mH;`7A`kZu@bm32;KzJo;#\np+RRHj8q-7%NBpS1aj(}>K5vwS4Nk`j$JArF4sz}}P7%#F3!h(h3ilVM-3H1^4`U}(IM#=7k?;Cn<56\nkRUkH}F8;3f-yOy{8sxD?KaF7i?UiDOri}Ow7a<uqIiswa6q+Czx;E_|fJhvv`15=pyfA#C!V`T~}yN\n*Ss&q3X7j-Z?q)3e75(K&V0?szWYyR0zGy2F_Y(##K(Ql%=vpF;eLUR$)v`NpJwpc`+cpZw4KVu6l>H\nX$zJ<I#IgH-c;?D5)mvT(8k8n9O>jtdoo6HsI*-{D8e;f7=J-+IORX@z=^$j^%@t~A%WzthB-A>;J2t\nH=<ALK!#>m9#KTt~p1QY-O00;nPviw*q@~>6`1pojM4gdfh0001RX>c!JX>N37a&BR4FKusRWo&aVcW\n7m0Y%Xwl#aC;K+eQ@q?q4w|g~+X~O-cjBbazSV1_Gg7HX;464>6Xm?P+9<m>GNRr1|eXcgA{owOd*WH\n5lZ%k2&|;mmEdW6;*~TmCgz&?pH*GSg3-8EOSvAy;V6ul4WGAa9X$(iLEqBZ>*@Kft6nH;i!~r!h>{T\nCATEjBuiB;lTj2!qmf!y+Bjiov@m)t+`fWL98P~xnVX2Wj*OfaG!gHVb)%qIsVYggROZ?wmCQcLCHr)\n8X=~#Ta@o~YCES#<NNAT)<&-WP&9~)N7ApUpLwth>8SrQ{$_k0d{ON2Y@B!f09U?q_KKDl{AEk!GDS}\nBdy{_;(_HzChXy3)>mp`%dEt#|W`Rw}c#!hd)J0DN^h(+P#+w<|bF^^*}oo`f;pWWowcR_ycPpf@vRr\n`^1b#zh{(zQp8=bPkyRs4CA<luIy%7q?(1E`Z0I3*u1u73XQ{Y5w%hnRC(h!mtMm!`3$VlnZYa6~g<o\nf(VinfO(gG;2IDU-k3MNM%tzL)6ch(9+ja?NTTtE2xTvHg!D?x(?akNRSFfmh|$Itfk9VaqYP!LM=q8\nUB|pd?s;IqgLvab^rd$9m65U=DFWKITv(h$?R_3v6X0p1(^ohMTU5!?=uH(zEQrR5A>=iqI7*|5h^8I\n?&%`}FFA9Mo-oOVGeCt`(68VO>X9GI8;-<6NiaOUn6Y<Kq%Fa$smddR*b1v$WYG26{G}MWLTe2rFU%q\n;A6cdWkqP+%DL-r(S@4#1iie4Uc;ibnWz6Gpr>LD91#>KWOl#8PWX+XCO8$$4e8Mo9U7edlE?C|;;S>\nfvD2*K%Gl`_nuFalS=!o~2gQc^$PPQ{mAWn$39yNTFO#OJZ^jvadC0WB=pHv%6pAAN3hIhe-r*S5`<<\nWi`jZye=mgTr^dZ*v~Y*Xa4%Uawz~+nCVCo}cGdc=(dniN)NdTokb6H34H(piR1cY=V8zjG+<3JOs$Z\n)vy~poxx-`6%Te~B&S`9;yz3$R+|O5Ann$J$6k00cA@VH_`H{}z%b7aTdj$yzQ32r#-Yqs3ge!qm$zC\nf?5sBIfD=S8vZSq%Hwcn;a$WJ(Q~pA17K!hVM@D`dcVPJq&4PBWF-GI#2vOnk2|txJ#V<NH&#=1X`oI\n*cUtU~_AHIJTF2l&ckjOr@3<$ZDs$`FFuT4&-SDW{k9Ad3;JKiN0WDH<?G~Fu?yWpcNHgsW(HZ$>-hw\n(7k0g0dDhroL`vidQvo%A-(&g_o{d?2Hwor{$(GX<JBEGjWTjdT?II`at`s=wM(c*79yov!@53zx*uG\nHC;jJH@*|y`@Z9+EB*+<K8%UP|N-xbs9!W8|C&h|MtW(PK~<_%lmICzBaCTKgt}J`BQz+l6ySa{z)H*\njpcRJsCB(|BSZ~U{I)n@3?{UzsY6iwZfZCJL(?XLPSt(jF{}78TnkiwBXz*E!^5XqV})kYh6sF}b2G@\nTR(ad(D3x7Br3GrlR+2PWsyKyLDGF(p)P#K0@c*{$k^v9>Dv&izhwZ{C)JKU%MxCsA>=kO@6f`l9Vu;\n88r+W|0%A>t+-w*#9zi%I38NQQ);K;CX`f#i8GU{|-{qLmRD08igp#}pDJjXjp1h4!@0X+f-VODl%3q\nA6m7s>#Q{KDF2CQ%lD2>#HR6=CR&{sK@-0|XQR000O8X0rTP4j+L^G5`PoG5`PoApigXaA|NaUukZ1W\npZv|Y%gwQba!uZYcF44X>MtBUtcb8c~eqSa?Z~yNzBYERwyVfO3kTM$V)9L&o9c>1#%KgQd1O4OEPmZ\nOEOc7^|+Ljl(+y;O9KQH000080A{lMSQV()oc$F507+2*0384T0B~t=FJEbHbY*gGVQepMWpsCMa%(S\nPb#!PhaCyZ%{d3#KvA^rDK;d~4GLMGsI;m^TV<(RM5lvj%&vx4BXf!Yg97#kVj>Q3z`8@vL-|pV`;UL\nLQ+Hxii3Eb`N?f35ODNWN?tiR&jMe=0mx2)~!vgm8xCO@%e&pL5*bi&)ds9TZLZO^)OQL<$A*P-d_r+\nf#`e=I~@;@o*sv{h0F!OObnS(R*>fh8rcShD8b(Z1uCbyc^Ur0iIQ3l$B*Okh<Q1+YK%3126zLZ@T@9\nGK`uc9f>+(NVqI^R7=CzS#f_{gVs*O>Bq0Zp^P?1?!be*!Kqki>zxiwLk0~KttCw^(xyJonS}nj_;CU\nRVM1?lOInO@LTj<QT995Z+RuhtcSMjImdk{^tvH0i*l=AZ~+ket$thb-Hx~Wj;-sDasa-Cb@hNZ@Ke5\n!*ck-c!y<WFm;EAnSqu30Rk35$`(fX(Me=%&{3@D7LJy7<<a(dwm#nRLml;wPgGB~e2D}3RKfQnd#&G\neP**jpR-RfKUcmZF;p0}E8(V55^GjYTE9GKjdIilmDO9BQvk>fMPYiHg|c*45r8M|5-rp=BL_!Qz|p}\n)ZB{m|Q=dyrKSwMste*p6Q^!YRiEau5mmM(mrqmoEVChL_I!c?_A$Qe>B)JHQqc?2b1s(NEhoKRRk?E\n6LJsYnJCNur<%;M@K(D`^VeUS1<CXr|+Kp`109P822311(<tOHh^|=Vs&U{g<*b72m@xv2}rB_ArPq@\nvrqKC<r59@XLfiC)JBnbL#hfGf#55Upo1`=Lw2lSM6y>ytWh8>#i83m<QH=6ak2vKkdJ=|6bPSHY)#@\now5@?Il4(SA)~pw1CktmATHep#`8kcBCwKp1A8Q()A17IsUB9>}G|OrA=|$<MM>tya6>phZ#wX*ep=k\n^mBcvUZwS^gmtTAF*8HkhamK2*JmZ5yd`k`xSYe&B?q2f#UgnM%U2DM*CI_sFOwspBhYy^0UvS^xv(m\nZfS9~2!wOc3{dH#i&4VWXh+Ic+tv1*Onx`jIEMnFZ>-|JU*CPV#Qpy9j+FXeH}vM??~G0*&htMGMPy&\n{s9^W9XB@;Fcxtw>4OEk?<DiTU-`(Q>+^4<t-3}$X}KZzR&)c-OnuL)=2oG@4J~xtVNRg7^ic)Km16G\nnN@5xY-Z^TiM59-nPN?Qz$W=GkrH+19w3|otZ^65{H14T+s%gk*?>L)fc>|;52PXxa2%LvFbnxp>&8)\nJywy3ilAb%gTAV6+k=v5QjE|5-zq^4bM(3x9Vd*d;!N0-ec-s<_+p>V>p=CO0>f4zm{lv9K#`q*<Q_D\nS`wxVZ6g)uK$Dr69b!kSt8qP!?Jz<C%3uR-F9hPN95kTKjK5Lb+*nmJrY)4LtU;s8@?`&A9YSW9{evy\n-0d;6M#vm*mW8EtvoSUK%b)pQGk=Cwdr40Ny-#|5K(n{)JW*6k>NPegPO5`LDO3+O8oDVVwe!9JKQd+\nksgKi4vF$2h6tb_u}~8y$zVoVU+<l?)_Ro@WJn?srOb5U)_8B=udxs{P2(8L87s~|6o-;c=Y&T_1)w9\ne|pFsmBsxB?Eb^*QFZ^3odpsBfpxY&+<E!n;dgi8pT}QjEJ8KUze2xnW%&NHx~`UxTfC*N8wvGDA`yY\n{mvzZ<2L%r!U$juzEH0oHf33R?EH6sc_0nWWJP2}aO^r(B@W4|F;KP^)QAYyG0~|jad)w6Co88vAnak\nQsm<x$4e5pI$f;jIFv$^~JEPeBj_dmUUb^7|*tCQDHA#X{~VNN>q>$`tW9j*wJJCm7b-O$cF<N?ox_d\nxVj-7cLePoMqm)h{n!jz&R*;tqRr`sSHG2GCr>fA-<rr7NJ8Ny=flVw$4CGn^(D2mgyRXKK%Lc-+<d8\nITQauwZ*v!o-(L*v&G3TR9WIznuO4qH>*(gkmhN6JuWpDF0us(@&ZJpFdd+eNF*yV&eP;(ZNr-W#z>Z\nom)(#{QTwzQx%%+ijSiHKeog-^CRuc)Mj#>{mt|j%j`(NAsM3LKk(iwE<gZvPGk~vRfJ(6ITZWp7fK>\ncppJeUUb4%Y4+7%)HTZiBIv|c%G1ewkEztc-Lk=<$mME-zn5BWSdRD5ZIfaAdER|UlV3mUL=c!{i`|j\nXN9EvnRjHijdx4MxgAT!4*gG=WzxyHq;+<q+CzE4hR{4><Cu~!WTKcoMl?g3TdnLpzW1b?Kb5OuXw^(\n??=w(R4cm6)nBJv*2M@t%Netf`W#qLUC%)V)zVf$>s$YQjd;LN}O0#>%|Tu7jd6a`=XgOU0hCyO)dMz\nyF;87lCOM#&QS}u@-FBWFJ{M^b|e<Jqo~~X)v5gV|>HC!K4|0T_B3|4+REGHKG>JD3q<9^KPcfgy0)~\n{N=@b9v3ugQDVXd77$$%m5?)vhi9omJ@p&~4n&QB|AUDyAbmzU&P;Jxxp8=uiV{3PFVguu<UL00R2Ij\n%Q~(DPOQmGw1bi1gZ$RTHcXN>n%(@5m2U#)BTAsr<mXm?<MxeF9a6O0kTtdwWYF@FPbvv|zdEL**+<@\n5`Gn-1;o`Hwm&QgR4M3p8joI`;l7M){GM1MxQ9$ytn42aFrlXp2SI$jPxN&{z4dho%kp=YGBi{x)bGs\ny4r>DBJI3(XU7r)n`B_L@BC76=2y@yBT7on*D=cOQQL==<-Flc&7>rl&;A&OoxEa?`?!*vR(evgm5kq\nFO|tf>}e|16#s&`~HAj^lDT3ql_Hk=0{ReW&wLViMT<mj{+muZ*k(;x%U`L4su8Bt%NV5V*5-ToM7M-\nkwc9i4jIe9q%;9hk%Rk8KxnWA?>1ALxkerci>%o1A@Q16Ps!VJ0Qidc&-u_+5hq~*g0mP=PRfhga`r2\n)TUty6M83{WEeOz3;uzShXvydX_h>Dq_7%p2Qyc+cqpmYjEuo>ei&ki96Ew&Le8661-4<zLCz3OL#-$\nkSRUo`dgAL*U6VM%VcA+X5_C5GD_7Ts1gi~L@LpjR(FqlO<XUB)J9ffp>_Na2)RQbc;0^`khe~3i~#@\nHXxGD_|QW}`=7KG1JKShQ(*$IgJJ@C}X5d4QCPonilYB6&vHi7BT5=ue-WTFBqG%*H8bL*+goECEBsu\nq5qOaM8Egyu*QG%<ck%AgX5Z^%`aa7%U#(8oMkxUE9Tq67^Cn94O>zFVPQ>o0aC0DrOE2@cST9V^x+s\nStE|{%mJf9>ZGtI=1eRkAdI;>9i`zfXWoYoROfIO`|!ctfMA(VYj<eg^Be~{V&@zJYQa;-T|nhM>-vK\nc`%#Kvjx{DT3rF>$Ns7cUe5@4xhwwQjp1lfHClRvQ$yAz)MLGtN5o0!DieX3DjLcggGw-M$0nL~L$Q<\n5hl$(+8pzAa-F)z!ZqZS2s1v*3Tw?*%OA^=h<S0DooD>{`rX<^nT4Wy*FU^E|3WH?GGcnlX9nCt@|Ai\n{4+JmtBx6kSm8x?{BKP*Nf~uD?#n1Zat#X2k)Go=fh(!@f*}qIYwJT7CC!%kNT3O?nMx0rot!4HKT?C\nIXV0dR>=JL@sPr3Ir<)gkAT^uHI~WdIh_5U`X468d;QH;OiFptg+<X6iv|mQ#v4xualmh2Ngh<+f%NB\n>XTmC&v_RwLOb^Ux>9tSrf=oe(5Ccwv`@x{!l@$J)Q~pf^4{@I<`!}8KwOF2-I686z=y_PQI1d4uoYP\nq7vXkpt|gA5E0+f&rS~iK69wj5rpzz7JRn))LAlk^8AT_MjFlI7!q4Ujs1_ZEEfT>&tiC~C(Kd$w9GK\n{<WY|kt?uNFNC&`J5O%m*O$-FuKQQOb9JSHw`2oS5J0>7f-Z;f8+B(E4q%mXZ*G*`s|534t*DO)_LZU\nK_&9>KJo$^;r*6d|22kK)Z+;wTG4quH1N!I+>L=5Jur@Kw=_YC+zZNG}T=3VCoMCS023oUG|A8fyAy2\n&A_r1Paa&ZYa?^+Qz$jQ@3<r4xo}>-o8wBMPF|9`JA;}@G7&4ae~-ZXnd*z$agKf4>rI~>3!S~V^<s!\nYH}+!*jZ<-{{#X6VM|d6u<h3YA`cuVdyyOr&@*b~CT&+y$QHwkZBc<P2zy9`-YIf8gU$wz8aq~02NO^\nQI3aKZ7=%r&yN`qMhjm*v1LCBb{S@~o4s+0#Jdkw)WwH$6<+5nK)|g){kjyYdxgdCFpx_wganQLOOgx\nym{EpZ@1c_gRu=*Az5hpLB{bOkH=2<5X1JZlx9Lr?)?CR8RSmhFc+k%+k(v%6)QN1lx0oUpZ!%dlLn-\n}O9B$4X&`Yp&&Dp|M&HwQmGC5~Zq<1}R+IYhJ@UV7jsj}j$&rvYVB50XFl@YLfmSnSBF+kpj{wI=N3H\nsy}ulT3xcJn>U-lq);<HYau#vH+hj3ud5uV8Q7Fe!zq-n_{=B3Jc-bYdak~iL;3^g`qE26vp1c!*XJb\nUkU<6z^X9GntNyxMsp$ghgLGc(&X&^d3a*mvMV=PnhM#p9m~zxvU&Bb{R)<wU&$WTi7J2`;dMFc_B<!\nV(~+I$YMxVN9R729giHgII=-_841J6r*S$kxjFMIas1!l=52Mus=D9{{p+=Bb%+V(1ZbQIim#Z%`E(x\nP-1Qf9{E~`c%o@}>bmE#Kl$S7uBxP1yER9(G_bv$^E?Y4bWRJ98m(<#8#EmM*v(J*9;qC*SG?$DEI(3\nI7wh+<q~^4c_PWaD*j0Ts-fFk+62N?bnd!WgSwFArwHk$txi#)j9-S|s_x{u&9Qg)ssVW11x>@yWr>;\net%<Z9wHj5|GePU}PlIp;eU1Bw!QhgJqf)xu|?k0165F8zg;-aDlY@f;lPk_;EdR1a*h*FIZ3OD5)cp\nirc}1%pSwTifRj6UBPn+?pk3F1$%iww$D4a31+T!8cC-e_f-^<*x!~q?iB}55Ml4mt_#aSzxe5vJY{_\n(8&gMnpg{346R`XQSUcV^TZo}N!ln?ECrdSu&3ys1^{zk0YO5b=beaR>kir@*uZ-dt08<1=cz4_B#(7\n0M)WXDCBHe}}pwRv*{*T&dZ;$}B);Pc!H^=$G45}0e!!-fTIFPYX2i*jbWqH5$<o}#ZfW4%SlkDlZ#A\nKI#>U*lh5zCuWNnBCJWOqe57#02b3U8Bn74?#LSk-h_j^u^t_j1*a?vf_j(3gQB?ClCvZ^dQ{eX?p2T\nJ#2`zTxIUMc-`mD_v~H-6%d5Nmb(+1Rl&r)9QH2=|y7s^`6!@XO10t59$iU+^~M^+s)o?46dxEh4J&`\n!l!F*L3BCFk)og!EuK2_E~s~yP)FA+EWD>&mA2Ojt5ubQS#oN@bG+QH7TC7t0-?rTRY`ZE=(-<d{~O4\ngY@jfQLtD2@;6U;gS23!wq>E%V^gce2TQUFQfoG*>uHPn~P3PfuGt@QVM(;X(x5sRL4ABAuuQcn-pff\nr9JTQW%vNX?uV0dmzS|CrUs8;1A5FJz1<*`sN0<eahC0+$H0Cl|yOFndnSY@I4jgiAVTSBzojxBRMEg\n(AFcvm7McRWJ6lbrAta_Zh^zaL(a-8g&$WTFFJ@|o@_kd_}K<+A>z%gi8esU&;qTzai)X_1p+#V><$G\nvp3KhZ+&w(1hrL35*})0jEU=Pf&^rh6kH1@`VTBB$IGuc?2pCp+vIbs%cAEX&(*C9#1RNuu^1LW4_8!\nVNQb9f$T(4(m7A%n|*h5T*fivm~7$351vGs3!n~<-CIqJ#2xIGH)!@nVRjgDj21A)F-V{zW+7a|hd*B\n=>-2<_3t=`qsJ)W?p-AA9Yq&qBvEoY1U%EFmuyAc|Xh3dytgre~bfLbxM}#jzCp4AVPAu*@qFC$$aI(\n-3y<@#jV)ZGBK9*N!`gGo<Z?A#8#qv4@S=JeDwkEerxDYuQh&ZfJY30$KDu+bKq7VTjJUx#IIg-L7!;\n`)Ttp=;T<@^G74xxPorvAJ853oI*E@u1N?bxOkJ>+XRW0vYc)I$wSkn?kxKd#Kdblo)kyeOrcN9y8v6\n2^bTc~*!6wj$|rN7CaJa4TQ(oHmD{wh2B6ZdK_v7S>)D(JrVC=ft&+=`z>9XY2GA3;+<-PjaEp$4NRj\nZSVFRnKgp>9q#(HKp*Z-6>=BqUwL2GnN2G==k7iPl~8?E{(~tYPN%=Y0AGSignj<tnhJ%p4FzMNCxx4\nFl-IpWKTF@3iwfzeA$}~;3+IB^Z;>h)dQgLm!38^JZs>2o5Y4YG=o6rEzZHJmGa`qLlVe6_n$G1oYu%\n%A<da)-MS#k_!@5C`rRikr>~QbZ`7!olpQQ)vaA?!>IdyO!QfuU`k{dHG_Q&QgIV_TIzrDCBx{Wx-KR\nu!BzI+$-hR_w@5`#yGV1Q|!-C3aBl`ROQOW3)kx?1oQ(}5)A3Cv^1hm8!=K@<iEj5IKpW%vx+ulqsd)\nJXk@B`zE#BaS^9Sp?7dSdDcp>;Dd{J9sxTQ4SrlAKzZFzcBfV=p<~|tGDZqQzTnD#}DHn3a`kak>^i<\nrG<)IsMQl#B{jjOP7rAdY(zJCu=KrSHjQ;jCOSMwm#HZ?dV4s^LwPh6Ij5s9GfgXRTW^9r$V><5e#3b\n<b>=O{cKi$W5VLs-tdxM5LzH{Wbb-l@dnkUE#k&dY-Kx!c01BGWDCi4~wHN9>LT9tTAruNCcyC)b2l7\n7eY@ejJ)0hda<&9E8Qr!Z*!9PS=z^^0G$#vRFT<@Btx7+v$s^0!Go@(ol#(3%f$r|_L2??aLV%VuatJ\nL=DxUpe6T{jgX7|_aoLhEk%(4lO3*4YWIJ2ogNf>Obj`IQ*51$c8>Mdh}U7{o+15`qfU{Wn7Pvb2m<v\nNTvqw1aYt+Js#tr)~?-a`nb>lJKxAt}?aP9Je>~<K?Q-8=O`iCz)_V=g9zFX1a?Y^PNjmqyV|G(2YSj\nc68;u4WjTn$?G-|Ly0~4>!HyoF05Yo{Wy@_QyQu&uMQkts!C>9B~^t0r*&H5gIq~lp335cEQlsMJSTJ\ni&WF-{Y^GL*kQ}~l{z2TT%sa1~Zfy=zqMPUxwo?ZgVrzLFvJ+h{LUTk(DMBW&kpsrtC}=*KmH{ci5Fd\n2k2R<9;OM0{oyd1{fI`SIb^VNf?y&P}Rq0G{SKpBJ8ZLFXkbUlq?sAVLEy0O6!!##Dq>LjQNYaH}xNj\n#`gd>IEfPJ>6t<=>fdA`GXw(K3%{(X!GPMEQ7ESr$lJ`ePd%!_0k)8mh|_`Yw;t2t<dc%W0kYDvvIqO\n0N)z!T*31-1ns*dZ9|+#KgW{%t*q&#bZ5l<eFZbYQZ0Yh<ZZ8oTNp6_5Qk!i2r#VDNydOu;+MkgQiP%\nmOhs^q9Y;$Tl{}eO9KQH000080A{lMSWnf_vUvpn0ACLP03HAU0B~t=FJEbHbY*gGVQepMWpsCMa%(S\nRVPj}zE^vA6S4)rEHW0q+R}9=k<wlW#J}xd&v<bTH0!0!e8}zVP7?d<xF)NWON!jav-x-p6c-Pw|ZIA\nU~EtA7<=KJPB?P|69_3G*^l%i}9WY@RYp>o1Wt@32GS|tfBYU4oLq&B*PQY(k|u9XGEow(8oC2r9Kt4\ncU@vcu74{2g}Pv6t$0+<PgNFvrU`8T^6@jd0pz@TTVwM4Q0}MGr|h*vmfO?NL?Q<UVBfZFHMY@iX9i>\n;=K#OI;mb3X89J^HTuqIfM(@K80ZLj{&W-d8aFEr_=Ay_F7q71}#Y=LwxeV$=2pIf!d>W*o}uo^-+{0\n{mym$j<+)~*tfLyG)gCJIi5#l2ZOsxnj}dotU=lxAKZCnsfjUdr|8!3{0AtsZnp{0$DkXGf?K5IJ2Tm\n5u$oa;8C-~#j*^QXAEcdK+M)01pv5ZK@6Z@+Z0cQ2$-RE972(c*Z$boAZI?A1kcv@#NrIFmL4j*9Rwq\n5FxD6i%>%iX0-tTcS2~|OFG@prlLT*4%Uh2v0AS{EU5=DzuK05Z_&KyG|{5eW&EB_1cOY9xIdH*xBnJ\ns!ju9Bo|=^NgQ8mCH0&sN}id*baU;4DKy+f`(EXk^(?;=mFbI1PhEz&+Du?kt59hEfESW-Lj|BXr{E;\ngohzU{p;KInV|UMmi>%C*J0&L4%Ahz))dv=T?&YEaD&ZC?T~1slg#I1hTpt!ZRo;4#T5aLH$h?OLoHf\n;QR`=c?MQ0a)3lDnvgFmIUl<Aj%<|3L-}@qv~jMt+s)=yx@IWyQg@r))|+LcZltx8*UdLyf4j~Be)nZ\nzu+~JZ5&Hlqsz6J$(CS-Rk_|=Ji92$_T@rp5+BMNL@g(iIb}3kTWVl6Fg!&3ZzNf>aU@h-46sOn3$_h\nO*UO169N`FD>@n(>d%`>iLDxIN=@puK%?2+;&+ZMEHkDPro_U4K3G*JcA5!J7Jc=uZtOGpp5jf<>815\nqKdaiB}HgsQ+}Rr;V>Eh?f&a=tyjy`&{F;c{X<sZ=^F8=<7_7|<R>Pw>>9Tr=1*YS5fcG#omwX5Jaz3\n%*bY_p%PEdAfeGa}}}=X9iMYWaj(iRme2>Ob00xQjY{WEc~Kx0|}ZvI~tDC?RKffw$A1T*@AV(4<H^j\nbN5mxXqJr>0}5kl<s(_P84sM;V{DSICM24AXwr2)MX;W?D3*K%c`*Yn0;hhC<FXg7iSaAS=o~tI&yjx\nt7ycrCe0}+AC1B;#Fv@qe%AhczCg=vyls~gT3j>T3R*3TMAWUVSQ|nPMvXHHGM?YKXnAmGs(M<B~Kw_\nxp{ZO>BTwrzR8XeQapGMe*QupHgjhdq>>E=wC?0PX*4ULHx(9*a_1Hkq6yPGvUgX{3~X0nZ)p>59E<s\nY?F>8a=$eB}Yxv*ILpRQV1U^)bG3To*@&_GT&g)pQAkVMev$yK^sEQiQG-KTC+b@NLO@6-1OefH=%*j\n0Qf@#L!3jF#i<OtOcWt)~BbR!7At7xeh4|F3@xo!#lU>$+5MM?SaMQWWAnAFVy9FpVkjFo1ebuPtSW>\n-J?1Ug4)Xzt2N)u_343y(>mwDnl93|^RqK%j&XeIGCv8o;FETy&p#*L`5kH!k)F9a(;!dsnBJrJwlwN\n|mRy|&5*+gbwD`7{);T*23>WMz746AfnX5PBIvg-+kWtn3RQ+}vUY)P0<+JGpJic*JIZatTBibj|XRr\nvILTY^|i@52<7^keA^xHpl`8f%tEE??eJ|^Wqz?l2)bfD~b?JuXw_;1etgXP~3mT~O!XqlYEv2xNf=h\nBjS@=s5UztixHLXX>k_t(jvP)h>@6aWAK2mofX{8&))Qw!k+005vD001EX003}la4%nJZggdGZeeUMZ\ne?_LZ*prdWN&wFY;R#?E^v9>SZ#0HHW2=<U%{y;AZ@PD6x$aAF0i%fS}bdWHrqY~hCoZS%|#M5l1}0k\n{qMUYMT(LYr^)td0)ps;cf6P9o;x~@<JaP*sRS*_npaGb8?Lvcm0}~AQiL}pFQ^t$Wl<c*QN-(3NKIH\nxd6m_$gl?F7S&7YtHyig@^P1^>%anT|RJ4|&Ch!uLk?!p~%_Ln_Y(_q`nu~^3Gjg$OD;C++EpM~@nl+\n`6nPh+Mn9?e%Mae4VRD5Kr6^$B5@CNjPvaG0h=KRT5RC=im(|OrBpZgUOc4CsrDOK#YV8%wT<2}<iLS\nDTRO~VTOaw?^ml(iOT5KwmOq|f)~?~bgkcyr~Jp27Xp(#9H)6|~qgx0tIOm*(c>F)0NegVEj|-hQ%gj\ntT8F??eCg^vBnyA3x2Aq+GFlEo81V)jI`mx~$~IcGp~~DV0W5R&!N2eW0MGI#>K}h8jv*=$!8K);hG4\n01nkwT(espMF==1$-*HogOr|`cS)W%v}SppMp0C<HOVpCTdmvNn}vHM_%!zbO3AaA9)_1-=5ihpxU}5\nc8@wdbI|(ssw2{uXi~?fRWn2jGtI^LY)@<}PUZzIGf`%l&(`v^IJZ9t<w(ssPpg_!Rda%KJ(J*IyD_K\nh=^LR}nyD&6<X5Jxa<_0eIIfVY4C@p7^@zRyu<!Y~)a()U;tK8ZTVLcW!2rNqQwb>EDQHg>q76#NAat\nQ!INT3HW8rY)g{evuG&QMHk#SLcFMygV5auwX>$V+0U0S9zbLzM0I1_5Pm*G|DDfxq6=(7%4Cfs%Fnx\nqtpblFtDmlTbeWlEz-~pyF(NM*1a`{#qpQZwk53tSiY=70-h0(}^$)gdJC-iUV1n4=Vw=J6*4lm9E(t\nyJl6Al9#?x-o1bGq2I)$!IS=iyrE!2XUu)x-6PuweMi{Gf){cZ$PJ+Qk|aNzydd9_ljkqKKeBhAB8=g\n*iRQEACIg-UTa7S|UJSGxRBK0aU0vE90&0&pnFNY5#~!%|%M>UMz_u8GEef{s(soZraf&uvgJ9nAP>w\n~2ESR_(Q~##=;lK3&n>zmg)Cm&}Z6tOAF}X(8B8IvtdDRizYYwqe9BGnR_R9v!Iy;5RTB^6%imIU<&S\nIc6)tg)PT9b))mb?ha(OuO$cf_Z2RR2haW`s6n=nSgq_9jl7p%i!ziNn`i!Cchp{V*6cpkOdAWxv}0i\nA`$VHx5KXyoB`=?whrK;{~a)z;lQot&`rp)B)Cq$K&(~`Gb*$0qbbtv0}{kTHymU8kn^-DY*pd5ONQ_\nk6uH2qg9}Z1Kz0`Nu$xg^NPe-78A@oCK!e_FBq7AH&`K!Jx~U?_u@hxz~JsS?-h@_WzZ=P;PW%nkblB\nUMyq~XJG_F+8=%yNyuG+M_p~u1Yg$#v%PU%3K_qQIg~euy3lW1{0_A=U+RGtSg7}!e=bs_us2){EHUn\n=VDFEO~h$}+1+30RC<5UHUS4>0GCmR@{l_kGJm~~9(h8hG};_(@*>yb89s#6(%P_fTQ&lQHxZ}q$%%p\ng@*C2kPx;c|Jh3>h1xyeaU2W#bMdnF&J<Z&`yAZ*sTWrYvWWr4EkW4g>82XTMwE$B`vSD1MwF-*j<?`\n>~0RHobdpp?B{g28?RQ)rqN*usJ2&SzsQV0uE}#6;C%UQi&RdgPJuviJw5kPSVTgOFyY%#;jfw-d=jv\n!Bj2$X#z6LXuZIG-ci8lc+vIeL042Qcvn;udb}HySXa}=XE=9oo##nE7qDtQ3!V-G;6F}`(fHa#1qb!\n{Kxvk{la=>*^gYyv#SuJ4fyD(>Jy>iE4M%$@d^nc7u4t?<XXZ=OBe6bugW}+f?+Cl2u+`qu6P#s)SD8\n6FGC2-UK0ziY0TeiHtxW@Hn^VyAd6`h?oWpG(i41>d$Q;39cg0FFr=oCWH|`b^hy%iv3_cqF4N)_*(N\njfkw#I+pLO(_KyJQw!KvQMcAqMKwVJHxj(G=I+*M`Q?!H=e4_SOHV;7#IE64Id;@}ukF>9F5pHi5T(U\n-M&+Xjzju3xMWsR&k0M2|M$MXCRVhcQXhWGv)_j55=<^$PTmfYQMW%f&4nzcU(ui@B}=bx_h%jWu69p\nqPp1r&$wV{u}QL;_s4mphvkSLdh`4;%NCYPM$ECihdb1eJk$~PK%jI4(-}H|$pN|8%sz@>@Omi8;Pv%\nHgV()eV}f=c;Y>>1K|+&jEC2IOc%_H295NJM|AM8Q_=A}Wum6Cp@OmU;8PmUpwT!9vGFQ0jG3<rcp0l\nd#yiTThERFsFP)h>@6aWAK2mofX{8;s>%>ma5007n<001KZ003}la4%nJZggdGZeeUMZe?_LZ*prdY+\n-tNUw3F_Wo#~Rd6ik+Z`(K$fA?QOXdhPIlZ9j-ee1>L()1c!w<*#T3)Bb%TB2+=vZN!WCeC92_nR3~A\n|=adnukQT=KJF}Lna7<_x$<5zFdD~)i<HoySuxOK@iMlNy3XFN!W_51N`!qms@cw{?`iKd@glc*Oh8S\n7DOz_q;8U2Rr};|Cq$97stE39GyH~aq!wwz<Q~cGr=$>h6LlYy-0m7foK|Hco|-~#ItKgAo|k+pl%Z<\nGzRqPKI+_oBFS0v<AGkWag*TS&P|I@LQC*aWh`o_1DE^Nqh2l-6BK96kkJwG!$g1Q;#O~U<V}F(dE&t\n}(7g?k9h}j40VlC@9`6kM&QgO}G2fhWhaofm3_ipgADrL$G`7DwW>^<gGCbT-<SDA2}mp32ou0Gr)m+\nwA*_;2#*`pZ?sZiTL^QV;Y?h?4>r;=O2i#vAVJ*5VC#spO_bFC+Gc*jMWCC#EW5ThZ98WggL#;8HY?m\n3oM^&>BcO`5$Hd$$aw?(;yn}t}fnO-F}Lg;!pxfUa3SkylFLjV_i$qU0Xir*=&{;Tx<411%_8osh|YT\nmoo-GH822UCUQ1WnIVRM$-vi$!AJXKomzVC%-Q1iqv#n8&>**>X;sNM^TWof%~z~;Q+_+awi2?-NH_a\n@`#zo#``u1z)`CiM3!(siu`d6tsaRDO2bPN_-H{aZlceYLk;IW8><%tVtnx1H5&PQehKaIjw>t)*B^G\nNJh~5a~0+ZVmVi%K`>zwHpboC~1C0JQCtdDW@QUXW@ctqK>A`wFH@1tyX3=sxe<_7Qu#e@*{KH_u6HG\n9rYT=C~8_7;p*f@cc~10oalq3+wxgr^iD)9CiDg1<-~c`~#R4-x(58{pt&2Cz|pT6D_<v4ZcfZ&<CWr\nb??K?zv66R(_v^&v}e>6M?C7ln>YfMI^UnrG%&UB8R%~K#N(_V&X{x$dFi);xRzjIJ8pv4WJ<-KiTHM\nuzgBQxid<cdYf+7@X<8$5zJ7r&*yy`jWW?!Glq3h$cMgC_Pnk|h6Tg>47dUD+Bz=yvm8`1iuqZa0F{k\nN*yB#ZTaZKrrHxi7)7(7Sq{pYrl%(|4i19;JS|~8rV$65TH)|Emic&Tb!^d6pX&Mp@07{Y|Ns@$pVze\nmo?;r^z2GK0hkd`GT7mDi`*GVFQ&WEZLt|4|%+Q4At#`w{65IzZ|R~Am^u2x2{8X~284TT^8h4IVS5F\n{zg9JX4qU(e14j>U=YTreMP>*AyH$yrB%@ZB9rD@3^kKv-cA$g0>nu?{XxO)TCMNpL?Ou~G%DCWd`Dq\n6BCwQ{ITsS2>o38_1HT{~AoW$1Uf6L_&MXNgA26U~_1M4hT|Y$$WQW=+iK`NO3SNsO~f_O3<Amn7h>W\n$$D|V1%t-IP8ncxF!n9oiS!|X^#vkBul@xXS3}AVeHr79LGht_gSvG#LAl@5!psz)id=v4;*lQ!YBzC\n*?jA4&Y7?B&Mo4s0+eZ!+0gaAL+m;Z$;(*FA-&2ZQH5e@IwRB+bG;OM?7^t#C8_*JzDFmzx1~rE?0XB\n9BWaeG(^_^-b?ZEGy^0WZta+-%74BVIazK6hpJkKE`<z&|Ab@qaPe_F>nJ!rpS`c5Pbk#h&fX=sqm2d\n%}q(TjCI3M^n$TVomt5QxI9L3XI%6t=qI+r6D4_;Uf(g;N2xB`L}jst)>#B;kZ9buChvO8|FR4HoBa(\n8CeM>S|$L7VPTgElmZZ1>9!rt$3t}@X|%xnYiZ%oHZRiszn)+HVSB@EcV^(pR?+*EGnLL@VDnrAwC{s\nqt~1bSFi^35NN;(mXdHD4dBt^sA?dz99=|yV`mHw2!icp8In-;kD)=Gl96s}=UHR~FNREG6zN`u)^5v\nlK7XN%OxcjIK`H%MTl&@8asO~bA{y8VuJT-qhH99$FsQGtpwGx4cpf(EjsO>cN^m&PR9e#dJuF{XKpz\n?3=&EQN(Gz(!{Ru3fWuDXnX8}vaH%AI;Gl_$WRu*el&;1KKTe44-Hdy<uDIw|w?|54@bEs_)#q_Rfiw\nukSckt(*o`CZuyKI$$q3U!lh{slaDYj&i&-Ck(U4frYr{QRI3%z#eS*F|KxFRSGCIVgTz1pDa@9Scmh\nFcfwbmYf(;LLQDr^jCjI!Nmd{oQa!%sycU^&KshCMI@TnbVztsnP(7m;dW&1XEU8HSJi>e&@X%SEAJA\n&kbx@Sf-h$@^)CA)I_N5wb^oU8usv`lFjRS_$>!yn#vBn@b_qeR|K#~_acMQ;Urj&5Q$85jFUh#(C|c\n?y2<%3;wfF?CD6ot9*Q?yNZ$?O(Ir%`0g&<F?C)=t)+jw<?)Uvvr1;S>@j(c>urf#fBRsh<2UlUb6CX\nE4mD*D-+wjz&4Xmvas(PZL{H$P44@OY`rcsCCf_jjm$og+`6kd!-NDj3+$o1;RTSZ@3jgW@GwHrBhnE\nP{pGjl?Qv*@6@FdD1j;R0rqvljLRGy9-Hm4M2^1&a1*oP)qUF|p?p&K-?IV4V-h=%&M-nXoQKQYJ&&{\nru3K#|a68n~+oYAMqr!)nRjV>UN_KIbFAT_o351(JkB&FMz-_`3CHMnEAbhke77#f#dTwWx<YgNQHgc\na5(qcBiNEId)MYn-Y7(Pdr)=<?d~FVsz1$@h9xi;A;WVRZMUYl;4K(2C`@YwX!VVX)2cpr&DNiO>FgJ\nvk-0fmuKps?e=q(5$$vY!Ke4-;H#bW_n`Yv|g>Ls?W~2>NOG*puv93$}eu3w0RTZQY4yFsDJ~14+y9Y\negdiMa`1%&+@**UesP0UAuy-?d%X3(6=>Cv9Q;n^k3VJuzLuZa-n_bcFb+wmfN(gig@itaC)8nf*?xK\n&#{0s_i)2&{8&HN&37gM$?~;6QY;^meIwi5h+H$gklb{Dcg-R8VVp^H%Vh#zTihAO<gdhnEQ$v!M)5S\nCR#Pr4+x03tdP&iz)i+;cVWlDN&^EKJqV2{1@)B1bMq72%K8h^x+=PEk?z9dG6i!7)-~b${HS#${4U-\noG(2x#P+Wddq8N%2{W{I1ix^2`pRInI|d&bZ%jt;-k%(u*$<%JeG6hF`)x%9dpsmj3cQ)PYI;?;@Pf$\n%CSv5d*FtXmoNS)y>H4Odsos&?2QA=Ci&n!XTO0-e_MLe~#k%tUp%;2?SqtYA#km^%-!F7AnwY8m_>Q\ncp)*u5Y?v23>3mFrGw}<gn@6m9&oEqvrb9{8IdQ9sUp$Y#xk7(5}3(4T0U19fmVkem%n%?4yE4m1YV?\nO&oP)h>@6aWAK2mofX{8;n8?RL5s001>f001BW003}la4%nJZggdGZeeUMZe?_LZ*prdb7gaLX>V>Wa\nCz-KYjfK;lHc_!uykETnvrQIGpX5em9EZXJ6Y{Gu`70F>dNP0AQF-=rbsS9TGpiU-?zH~kN`>Lado?&\nPE#X`cr+S~exsQn2(D#uBb1VP#(0)6RTo8GRx(?$I8VeBzO#zU3>$cwvO*Szst~bU%6OECYMYl2tQ7y\nKg{pAuQm*QfR~FnttoftN%WxC~!Du8m2%L!xmuXm6GF7%|S!Z#T=WT<`n_mS_k`i#V4S%RSv%k}PwF2\nDi<3?^owJSt3HgA3vDX*4!xv|e`jR-VP^`a>A*jYvGnxA!<rg9M$yi~%rZFz}AQKMy<Zy2nJ6f%9|5r\nfa|e_vljXMejm`*r^I^^}@Uvz`8NF5^o7dMz>m1j|ePcqx_Xc*6^XsUNNiBq>kz(+$!)i-mr=t&7zBe\n4oLn>1Z<2Sixb1(WA(cytJs9qf%3|sULbH!<ffwfyZ9vshxI)ZD+deG~q=hO2!q7e&I?C^!0(-bwjR4\nC=2=g;??Q<%iHMs>gw{B%d4|rrwoC9JD|Va-d=Z6bJ{)wX#<R&HgK*>0S7ITce;DZ-U(IY8Jzrn2&yX\nUxT=9kTY@Puhe?@|m3$O<-u?OJ2tpusCSp9{B6n!sv|dB&{@LOw7Q`OS;<#`O*qAN+u35EZ3Og<WP$i\n0f6gl8!2IK->3qh2C$Q8H4SE7m%vE+4HMIw8YWu9$BRt-)il7^|w9_;K(_&qe#D3OrY)!L4I153#B9M\nnVx$0*}d==<DUVp%)+hA+h{nQFcqjSkq{2((HW!HDxs!QnY)70$}wgm^>sJO;`EB{P<1=?=aGYK~ZhL\n+g_Y3k^I2V9ixjrE3516`WdZN8@iih5f@fQZ=I&wM>%;4nD%+5o|xr<0&J>WS;f|f@uwhAc!iD0PQts\n<)yEyPDqy!9Hf~g>&+z!xp=BZZT}EIA`fqP##f@zI>^9pbkk@wLY)nLGpoEqV601O8%I&bHzJBagWV7\ndUzHMuz*y39cOYm}MqgGV-jU9`gS}G6{r&xj&U}^SrLbC>m0T*3u<cr8tX9}^cnC79Dv=znb5(^StIx\nxwOo43naU4j36o4h<m00EFZZ<4lfb!_(;_Usqi|Fdz{Pq0p%?WAqJ9i`Zu#-C?-vI-AQ{{1<P8ni=`-\nYPQYMJg^{s71lmCx4jEuJah7O=AUlIitXPB0Z4-w1KS)>T!U933rW6{fqR=l>{oH@}`u2--NnP6e9?z\nSCcmsp+6+;2WMI7DJuSU;Gpv<9|ng9qK+gd4BZ#MYjv6DC}}?L5NJp0dN#ZxdLBe%Xi9bBs7zt&qq<8\n<?UK1!9XW7N9(XhUP``5LFE>pcd>;|x2!Wd@j6R@$8b<yD*$pfM~hyGjS3li1qM-odT4+E?*N6JL7*B\nyq-$6gb%Y%Ta1afdB@($I0Z@P(D3mnSni?2Ru^1=`n2>$}AWOR#92{p^y;*=19N<%t7j?=@yXKU^=u~\nh#V^BLV0M{PgGmsFFOF|-#G@M}?S(PJmJ<3GrZ5ezKKg0q2vNYcUbrv~L3GvhPsY<>Cw+^RY@2=;xxf\n-yN1UY};J0>+wcC{?8NSl^ojh60FAU;Uk4GQ0a#}BI#*8uWb4pqRSD_O1U1?tVCVps4Z&>}}tDG;Wkm\np}ge^XP0IUA+Bm{_g7Sn~S%%(Ql{k=BK}0Ufh82j13!|{)qwr&Z__$1MVKS2EV+YU!F(wJwFdD$NgPo\n4<IG(5U2OFD1H+=aKG4@EMu@5bNB_;ORZ%wWv^wG@&&`j8)zsruiTd4)GBDzFwf=<w2P-Al`#-(=+rc\nu2iNoKXnqsXEL0j`QsF%E2Nk9AK}4|}PuSsq!r|np*2L&K<KK4zT#O9a9L}J`W1(pbr)jgUI_!To4?P\nG6?03PEJbTu%HW>MJo*-YK*Y|*PkzqNjsvR4Pa1|PbDHVsN@nm8kEkw)_NLO&c1qU8-=Qre<7?vWrFk\nsC3NiGzkW%(9}LWcPfxfk7b&Awm?grwakveY7{cUWrL@N73mO-lA#h2|7!N49w%bKz0^R}+SWX<0|)R\n*X0NNy$IO?D>R_3iez^V9BydpA#6J!DHgsL$*g41%(eta)iJLf`2;bYn@PNpzRz)3urGsQYQ@rHm)EF\n6J>D1J_fiW_z}R-qsBD89JDxo-KS|gyVwD#vEPP5p>DCG#}j8TSngCH`x4=Cy{3=)&Ej29{xlb&!Q_+\nn9zc=ccJI3D+}~-)u<;p4*0n*ofwFIs-8>R(@Ae1^D2%UK8&u%VSr`=6t|2S3BrF6hANJdUsWAjSVcK\n(OAi%P{!4N{A!iTR%k<zlj_B?gg-M4nH?e64<`)?vs5C-8Nxy;7iTF83irwNJ76Us|(p>~yTBk13|X9\n-3p#|f2SuWO9F|NVzN2kp?~v40U>mhXvc>?n}uvQk^nY2yGaS^X4DT155*@d=pUG9NYLXktXIa#53_o\nS8u(ZWhGQKDMH6TQJR|2etd89y)9_ppd|ssC=f;KC|COi1E!L;q2*zJ>5OOpZ5Cyl*QPbhoivYr%ZzT\n>A=1wK8(qz|BIrl|9d0>tcxRIr$aX|iC@MF&K<}5a_!QYR)~p(@P|9mI}RTJF{JJf?wdo`L%+;$2`{%\nY3nt_eHX}CNZ0qj$zN>hhrCR#~6RvK23p5C<RsAhC<TQ*Y{yL!&l}R)}P(VWf{Krp|R(AU!`oN8D{RZ\ne}hQB}qroRI0ZVm2dcZItkE@~f0GqM3<@&xW&o0h?-8{!D~GwQ(23-Gg58o3$=p2Mr_i?<M<N55UXyP\n03T)ze^~bwS<?$q)?PlffBJLh5k@4Jgyh4kisJbs(A$00X=(1)QNCvS3|0P^?aJG$f^F!|htez@-?b$\nH1h6i$SEn)DCO515b-9(0w0h21NJ<@CUZ!GKD}!K~S1i>CRYY@SqzwRk`y;i(o`~T@^J_uFVgJ<R_b+\nzBait_<}ez2%xr5z;k6ebKu<Eo?pGcow7=91VEb|hcEZ25uM?K;KC&OI^F?yOq58K@VkMY?p|C4u+X?\nN*XFc@#mH8B-WVP9i7M65tPhK4dgSx)<%{q+8~?nB{~G`JVzFQ^j$b@KJbrn2{PX00vS%L#CPQ>0o*)\nd3EA|Hf(E*A~l2ov<hBv`vSJj)Uc~0-sWjBB45Svx7Y1l6)`Y;h_`m97Au=fzmAak*jQ-lFQO2%IClw\nur|N8~<;jaL|yR65^SnyV8hpus@wA<MVQ#LYNsAt(^2vo<b+IDwY2;WcIk(v(3guEEGG&a*hJF{%c}R\nv@x4=QLIMlx;DPfj%4GKk~Hp(av%MMt1?$8~%U{&p<>Zj>-v1ouR<Z5Lcs80%Ua>B^<SsjU|!uwgh0Z\nAFd+T5$!ZBDMX^o@yv<BP{)iZ`h9<M@h&=jjo}ylJU_iXZIw(r`!njL8ANzBPa`)N3_jA>CTP09L+f$\n>>8RIkSmyo{`-qoIpMp>`{@7b}hF`6z$B{Gq3X^(Ms4?||iUbD5`y4eJ2UALr1rtm!l~wd0c4~$+G!6\nrXoN)@`%Puhi_v*&nRg9e*5F?rxc|r`Cv=~9quxybrR}m+@>x*`L1?q8gLU{!s88LR-Yn0GQH?O)(b6\n!nN_SHPlpZj|xJRVI81js0tyAyp4b%zV-oUGxTc3>>Z{!-*(`f1*wML>N%NuiwS=BCV<<xQd}-Cp820\nUd}7<pgGKHhgRdiP`MQ$RV#PV4#KK_{!LWI<=}*g!%+Vy*NJhy8#yJq84%sxMz0|l+tp8KgSl$o;A3-\nxhTt=?z*7G2XbH)Hzg3Q*|1q~j@m}%;V-*NsQDGk7k`Mjnsy+7hOkK$Pze=Ys|i|g13HhdI#y<Y3_l+\nK*dJm{^o&B}F`zaHZO(sSFyF$+7Sr)E_~=0SbizIY1dvvdX;tnJsb>c_c_Nn*wm)<4pN*h{?20jw9yS\nqeP#UJFRaToy3#<nUFGs<Vh;R=8uDNs$R~Rl*b9-*!_<~kv0p6S(fj<ZicYmjA!4tg8oDE$Z_MME6y%\nzigXBw}=TR;Gua2L&fSmVvO6xpg;!<>c&nDW{)>5{AJ@QooS%(0a15C7D0X!ad3y0s0(KxLMTVA3BOr\n@0a&NP41faD|lE6}v}`(xfqCRF<R%d|N`Ulhwgdd&6aP?;H6fvnIJmPbd~VNl36hd_Y$`)>A%wKzi$o\nV3f*oRa5d8#^WtCv)9$3Mh%@SfFrdEYlnl$1CHGCG67E2IZp6bD}7Z-x5MUYE!25`Fkt9v)Y=1tamfy\n7D8ZV*H1KdRm%2q851WI-MXwhIVcr(nz{qP(Cr{hGK4@|r8Z4}x8*K}_ri(Lz1)IhsKiH)<li5%{iZF\nv4Mf*(FcaCjp>FDV7pgoYFZwJ2n?g7ZO0z=SLRScXkE*VA+d>t^^r*>RjV3Zm*NL%oec0<(T+-~mMSb\nLoh$l=9g(_>P}oz_K~#}AER?iWNjTgKI+;e7|rC99LnqNuG)gF(lN1fqrShso{aVA=;b>B^ubXOCpv?\nC2d{Z{K@3IOLl-zkTgulk(=T-$?|W(YN2>5wPuQ{V=CsWV}ZoOnapz#zpg#$v{!e7XS{-7y@iBpIuD*\nxRB-pCo9q}+2=U*q*G|p_JX5wLYM7dbnyOHp51<#HO%8~05K(Qpu(jY{696=%(N#<E6?z2(xcVTVeBX\nO|I-d>*VYA&n=&WUVCd8j89=L9J^c-4prg$216rgcA0HqBz+;C-cx=v+CcN-XgQ@I@u%ZEg*m5~L*u9\nmK5RX4$MU5L!P}xR5kRaUuWtPg`0^;WcW5`W+AG#o_$wP>ZY|9WS2Sx=D*h@FIp5{XpaT5+M);E2m9a\n+Z$;^%<91qV$PJk}WyUg?A(_!zQU(@kU)=+q6kN-<YL*CL2V>q=-SMGlO#NCj1lrr_c#4FF*-a2D}k=\ny6Plz%4~g<%_AXam2&pMLNH`dl&!Hs-jYiy2N}>$xc_sNyDWLqx;Jm*ZeNP@rN|N%{iER;5{o~*&5#a\nn%avs&yrN<UT`&~rO987s^DgW1#sh*S7+@{Z|yS(jNmYEZCj1?4n%3kDAxfZU_8C8OjGSTGQ5q?Sqx;\n&H(*E|U~A~z3WK#3$*?P<I(%-I@`IHF5I!A+R(S=^qpp6ze4?FB2`ElkJsDFqOjAwFvkt5^e-xqDMo?\n!4RyTq@WiO9^FhMI_rD0VImFjBucq4eG+6>q$2y37f1XI^)b)dDb2wUaI-(WGy8tg`byiR$zE#HOSs?\nf2b`rfny3>>f)4~!eYPcJbv$08hfLZ;LpR1Sym4329Bfd}#;Ue<J=mHLdUaDV{E;41B!ilrWS!0>d#|\nAbB5{4g;41<hWF0mO)+oSmJ&)deVLX<jF<QciVg=BdoHst@(WF^+io;wN_aMdVtjy(~$sB2ap<z+$A?\n9qe?92;<ieQ(OeUe!A~5MS@gT8!Tq$n;aq_<VK8Q;O`PM9b3$Q;*9~Ehc$hy#}0X!Xi+xW4VZJY5v8s\n10Ojx~;|{mtDzHej<QOB)j>8u(9VfI`IN-?Q6-c!8X1q%0L@HenMhYI&y)q$f6S8?lRW)c397v|XpA0\nD?+wd30gi=?lA#F@GA$$Ms(h+*PZn0B=iOuo}<)n>PQMm)l)hDL<i^?61+`-b10+^tD(0M7^xof))*z\nM(wW(RHK#%|fBnzX1%L!QV)+Mt+*d}Rn2BBL*?-tbiD?<mIFBt%#N9BG$>vI>~`Qw(H9g9XuDiV8ZDr\nV`T_VFw;E1EPx5GA~Z(t(tv=x+Dw6No8xQoasPT(1Xt^d$Ph9DvgXT=WDi}?v8+;HC&6D14|=0rQ6=E\ntplUYqV~d@57;!yI$CDr>|83k+Yp8ZuI4!)*^nikURHx@7r^hN9rX(l%_IP{luw>^l1t;q`7+%-z9F~\n0mtrD7Gq2`*Ol_S@dHf8VeSeVS;mw@i`>yyk<`@sV-r4{Y{`+_Hxol{U*k6#5={~xA10}i=+KL@bBV}\nwVl|fBVp1~bH**jd1?t=Hk`XVE)#<FBoLFhRRf-?gET<1z=;($Xvq-8qm_~?CN@Fel*F~+YcsbRc4j7\n$x@$uc)lQ(d62N3EYnDa<L$#5QtcmL^pBx`?7X{jJ#Q5Qr#3sllSrGTd`ty{%bS7QOa8QHAwp!*)I30\nUv>OzdbVf(ISys2h^afYOwlyV!$3@{R^*e2)^`+^S1WcsjBAs_{oIfl_~lFSZAK@==Rhj73@qTVHdjH\n#A()MR&|>x8=VrDnN6TkDMe#TI<62o9Wh>Iq3Rtz4p6xm81|^+C)Lyn2(=6_F^ztVu_T%jAMwv$%1{3\n71*R7@+Iw?~7V`H9nvKakeAJUZO?+tj&5#hwm&P!~5jlFrMYG1#K9C<X^WJ_T>GG<soQa5HA3eGhW53\n}&IbEoYm%**Gadd##Mn|;z%H143Ml23hyhX?R(47#CFkaXf(e^dSz^ITH1zra4UuQC?TzzkJ=w%|Sp1\n|a6#Ei6SFk#=b;Hb&_4rzBMl{&EO{*}H0^rXwf&Nc_AHL%fd-|R^+;1}%0@N=%g0eeF+2KdHF%*%w{@\nX?+ug$XFN`URvtJNW|bPQF09M!`yWjEsRaT-4r*H7}uhFDp%rO2u!d5^yI)nrJW2f8VKRANBi8U(fCu\nvVN~f&xfBR!~{l5uP!zrCU<tH{Jj}#iSIR0!4$oH*m<o&AJ4e}!fa$F^t&y12Ue!~9*o=ftSBzk?-z?\n0OrKPnj$&%EAo?X?yyK@IW2|?xSUA_y8q27C1<W+)UE5x*-+X4)>xG(Ur$b%M+hjwX2-CaxXeohLk`^\nI*NeF+G5caj7rgy_Jw(#P@bBZQnVs;&(6uFYXQacK2G2%guY2RwHpibP#`hZe~5GU2~8YcuRS$(fx3Z\ns`X5hHp@EM(((D8ebb!e*VzW_*R&Q8(75SC#N}Dow3$Fa7Zf+HVO<T`d-T4~sva+#Npm(uf|{V7g6D*\nM(f(+j(rUqjD*o7%204MY%yYE(W!L<qOH4*ZZbOimgbgCKSsYoqOZlzWZdzXI{X^h&0pOe9hwrzJhRq\n3eRjFF!W^A6P-p}hcw1yFp6l|*fbcuYI-#rdyu+5ME5-YGV8+D|2jdZ4Tgb+=(`&jo5-vde!)Sn)&@W\nLZwp{-V*inW5R{bpId+7SN;o=23HY)91VRUbX&yWD@aLK$p4ROcs-<jR*22UmXs!yRLMH;4S&PxDTDr\n-si4O7rES==hRer=6=CqB}H1D9Qus0bUnqDJ*9Qq9Q<B>UILVD|PJaJCfZQcvQ8Ea0wH*}zY6+aChxQ\n+c_SX1bCq3PTuF{0qm)>Vl1AExL70|J|WIRjrihA2tuM2dZ5eTc}!ipD=Q<G!%1j;nE|PuJJkWVX8c+\nN{_=R@d}6LYNQK+`0m3h7TQ0cbF3=_<qyZiZSINb>eW9SCz;Z21ireZRWAI*|p9^)nzGq$!K3wo4lA>\n=XILcN(PL}{dmD?AMMAfGAX?xr&rSra-ua9DA#6vy|A10!%QktiN~ZSWTlJtG-FzSLZ37*<25A_Y0?^\nG=~1}m1!5|gX<vjlSy%lUvq`pkxj7Spneje@1h>9nCq&Rus@Q)hd$7ET8ym}_118+1&mIA#JP8BJcqb\nu}k;vw(f;RP$%ajs0kCK~IH*BH<trT&-*+5*xc6m+Cf*y(bP4EPq2rQ7^Vz`F`@aloy2#9--2n9<r#9\nQB$;W1>pEzG0a%4hz+ApkUZ7Ip#$*RA_<$D~)wrjr(pn`^EkjCZSFoi$mJrr^N6Q1`E%_Y}e&uv6Nd5\n*59o%9$zqu{ZqaOYq)x<v^8?8E-=p^Emm6l}u6ZSFdEo+m+0t=gyu>RiFaUiaM?^N8P>P?NlpS@@m2o\nO$|BS+wgw^P)h>@6aWAK2mofX{8-rE4Y|(+008(80015U003}la4%nJZggdGZeeUMZe?_LZ*prdb#!T\nLb1rasrB~Z-+eQ$5*H;Xb2U~?C$nsr?3%Icx2Q8c;b`YRJAS}tDv=zl=c9&L^!2jNvU0y^=j+;~uGQG\n>Wow*&wS}nn@GnvjnE;FSqT*=V(;WehHg;l!KiTRyOX2a<NrjgP^jh}Ng)(n>_!o-w<@6co_HMl7uQ;\nRwk$q>JUm|02p<?FX-S4uBlsWioqZ?3gwb1&e2ju5LPQ7d*URLdo%)__POxVgXo3+5;y)CN|l5tNoQN\nfwedh$zAcf;FkQQgjr-oz3Ief=pp1t<yw*#^dn#WPCI}7bgcnaC&-hIvyRK<I&mZ?DQ}W#)s!obQX>d\nhn*Ls=>tM;5H3UZe{h|KDk85YAR}^0+BJDYUIZ8leyxNCB8)|z(1TT^L^$apnoOfH<ftz2GDC`38VEF\nsg<)p}JP0k3l&ct4Vr@u8gc+gFDpU${wE{~h8PpG`frLYq#&VWxjL2;mz@1u_*94SI5=fPmA(EJ|PBx\nYal4QDP$zJJ}3=)4sO28rRWD^t*SWAgSrC8kBIXwU_GxC;lX$h4Ir62Qz)Di;GdJ`kE;XHZLi#}(aQ4\nw3#Couaev!YsdxS}}p!WWUQ?cAv$G{{sHxfKh#ts!Bj_i9%I#I)sa^)FDZiJ6dT-yIvYg$8`q)!)|qx\n+@sVrD0WBS(JUMbk<Q7AQnofANHse=PL8ilMp6yNzGwBYNSe&d&1xl;6`N_=ZRNFVv$0_XaIhZhD*ZZ\nM0!?p8P4e&xr=B76mT?hNufTOK!+LWS*x7=V;jOO*x^{|joPEPeO@c<*<^$pc#@U?Ns6=Ro1ttx8JDT\nyNI6D$LosoRIk5{8-XoRB?GkV*GgVYO!L;NgJD_<Y4Ldj2msi*C?j~*)el%A1fxbS$1$^ta20?cM-7*\nv1$4=+!?T6bx-(Fr#U){XF{bPFf=I?6~8y}y*FK{p#A9Xq%8V#U@G&rS5rp5}Jn|&SzlWK(aVDKy4Qh\n850R538OHk%@k$LZ3{NME<>&M9bVWJ)U15S<E|&B7?ExL|G3^t?EK+#nOya-(v{3~NNA&BlW>f?ZR}O\nDN4omu$#~bES-fD^a0H<X2ZzQiC_i2oWAM%-+O)Ho5;d6!=-=EcU5ZA?8L4M7Us`(x}1N+41?{z*hxb\nDK5+n`LfQ<usXDQU5Ch@!j}u!0AuK5-S0Zn-CiZ&cM`l$CEs7Ux7-r?0iCtqg<@KWSj+E{?UcDY8jav\n(aplWk>XPyjjz^<f$5!_D8}7y3Z*2{a@G6m1li;I)Z{F~ugErTRJ0THzeC$@rdYvKwa_#s@*G~SgYj=\nKU{fukmSkvML(A-c@aEkq=P`}!|7yQsGTe3KuhVwjK7#~S_Shr>$-2K#00}u-!kS}0I(|248S1jtI>&\nL$9Y5)Dn``+z#Ul&8Q;tsW`OsfZ)F0P*<VTHGChTUQSH0u8a++`R_k@)df0Gi0)ux=PWbUK)3l)(+PS\nW%8B6U%1)>PY*I^NJPuE}+D^b$0Q)pyF>5q80in+>&1j0<Q4RO<<nyj!bZ<<c}X<EIz}wu%nkX{c#g#\ng^f*-8iq~9Ey>CvZ<ZDBiImq7DUq??s^J{Ng~^vK!7`l9SNxI+*o;4~_E_6r+G?8|Pt1zt>2|pa!(99\nQg)PB?-VwtwJNQjO7y5odw?sW%G&{)RN^G*lNlWfWnPW>FwwdJjS>%@de_)kA?eVs;-GpU_w>v~@4$O\noxik_sPTe1bu`+gkH(9<oYZMymlRow~v7IiI|>yF}tXIO0G?Urnt-*OYyq(tOaEd>Sce$}nohKb-}li\nbpnq-tAkOb|nw(t_(Y#CJ`sdbstP?XZ?eKO)@}^sCVmhD%G-Cdh4@EYJWZCKd_piR>VelnfR8L#wEEf\n|`|bbFXupY|q+)C{#n4Gq+z);a)?6Mh4^NuA92}<0j3M(fkWgO9KQH000080A{lMSn%WRBF+K;04@gr\n03QGV0B~t=FJEbHbY*gGVQepMWpsCMa%(SmZESLIV=i!ceN|15(=ZUd=T}&fR%)cIxmPL&Rtt-ORi(`\nVgplhdlh)wc!FG0A5dWRAozJ$ALz|3eo@d^BandwB9;9hXDYmpQT-in&N5r9#Z~*1F6Ivx{nkEUx{F2\nnWolv{}u{F|{Hr!a~V-b-eCL$!Y(FfvA4Hl6uq4=`CXLk?xcOTwAzRO9`;%-SyY(ztuP!5dZlESfs#<\nyVm(noMF+WffFN<ryY?v2srTCIwi)Pl8`*8{9Y^AschD{7sP!=8o<3#`_LStO*j$VEM$VVMxT0^V%+9\n)Ue*>xxqYIbolWsy&yIZ~f3i9Yc!1?xE^yp2RPx-n4ZMCP_T&V92VcpYFhY46y}ciXVWnEJ>15a%=sF\npF<aepo>{oqtIDw9Q9or{VXaVoNTTbVsqvQ@+`Pd9m(7TAie#Ls?Z)Zj#oiV7*Z@8V~Y^+mjzkpM5qd\nm3{A8o)|s4iVl5{!<)lUSEAGIF11!l_Yl%d><q{p|kuq}onmlR+%MrY7keQ4Q+fE^}AuaBX-gOocr&g\nx;5N;MjhuN%k%51quLa=UvLSyhevvc68A8+Kvz|R(}JELWI+M{ijBpvLNPL{Z;B$&wC5bf~TR#zu1oO\nozb`V3~P?HQH%$YppRzos*%ra7UMej6!9qk%sutWfw?s1g>w+1$4?GSySNm{OLLnAuH`2koZ6V?EM-M\nVMAaX#)C~?96FwFHi)$0^|4po#KJv(7m^TMP$ao(Y->ar+;Q82GH-yLeOfW9c}bfrAdGJMG$?)S5qM_\nQ@YMp-T!3*vIzXJDohLW#cba0*~zr%`=6(UQ99LevhMC|aMv0YGXuM<hZ-=c;V&a@JevP;9-}*a!d#B\ndF&L*k<ZL~jakMnTiIU4pw$q2ASQ7{v+*tCm7ZL~_gwB6jZftr<<8&_?DPpCr;4<?<$ty%Be*sWS0|X\nQR000O8X0rTP000000ssI200000Bme*aaA|NaUukZ1WpZv|Y%gzcWpZJ3X>V?GFJE72ZfSI1UoLQY0{\n~D<0|XQR000O8X0rTPuKHG>M+X1^7#9ElApigXaA|NaUukZ1WpZv|Y%gzcWpZJ3X>V?GFJowBV{0yOd\n7W6>ZrnByec!Jj)(9d28-0Ka_n~pz22GqI3DSq{Lf}f&E^A3tNy@Gh<lj5Pn@DNbNn;?v@-i0=&zu=*\ny<UH!Ew8EOq9>vuH5*u8v%ca?;dr3c9X&9$TCdlu74HTiHEG4+!283hk)k7&=r#LSw|r0BvKog$GNtS\n~>nLxFfl9@s-|>eT+4W}ZD=kE;{Gw#_STVb(9|thxSF#m>zn8Ra>AqzfGrH!Lw!dzq_{{nb%ng5KJ(E\n-mX@{>hjDpk~uH3d;+OhiMIQW%!1BQaOb`-R^9r?=oHSnP*?;%n`7B)oSW+B->BbTgWy$+{&Kg~TQs_\n7w!e58jBF##)K`YEYV^C@n(LUwSMpIMD(+K`I&qUV*FDtnlEO4B`)3L)TheX_&&v>dKkLSTv-Vkh~2#\n5e`x9lc{^yiztof{fB|Tctc1grKowngRr=S9V~!tXV_HR+p^5=Th|F5-s*rF)#lM{JxHSIVA`#;Xm)9\n7kzDq@vW^8?ttAZkNX1rdt>IZ(ge0F0T-*PrAh&`O~PD*UvM|s1h4$k0LcaVGK3f><E*<h;M_(Y>_GV\ni`EUgPj<m1U%Gm&Lf>W3P+xgw6UhGzHxl))&R~E>N{fV`gqHkKz`jmk4ekSSdpik#qGpBR=c8RfXN=1\n87^2n;Y_e=pwf}4^34VkH)Y`L%msVSZyG-<`S0}M$e8P%+GR9GrNCj!btht*k5Ui^GQ*B)qXXRjUT6R\ngAK12a(4!f6cKrm56x0gID{0!bI8Bh%pYm#=nG3gEL2k8wj=#mpq63yjYsP?noLkeS9Z7{vVrhm@EOl\nVq{VS^*4FioSikGFCQ3-SOcn%N?Ha4|4#lqF@nN$5M{pqUGbXe-3#}Es)KO0^?1*3Z@dtC>UF`u><j0\n))__j9-^_bNfrCIVguBacOPC!2~~nXAsm_cofE1EOZ~kd*P?%}0Sr_f2{7f@11xGRDFouVm*S4~B+yY\nJYYC)ypt1)nW@}@_Fg&K%yyQLu3V5d08xz(IVYAauxBgL%Ho%hUQTB0QHesK~Fv2>9a5e|lC5fS{j$&\n-<k{@~@*=4ATTVH&)TL8(<K^$-3R`hIT@*v8f3HvxlcmwcuCJADhD{LPW+?F9)Q>UBMHtrdKSXsRxT)\nQ>0XP~Kaz7U{AO*B*>$gTKT7MMVpE<%`k=rE&w;XSifyTFewxvGQ%VKQWn51G9kKdKG#Fr%W7B9=SA?\n}VfaC@>8q`Cg3rT(6ZTj`IvN0&oF$6Sx!n!h4+H5&0Z#k4ZC#1Q|XLH%2R&$zr$iG%2w6<2|4-%wmL~\ntj2+`p(&CYmuPYHvFKMatkK5mYL<!tPFz1%K19hLSTkySp=Xzp+V&x4b(~N$P3T8Q<sCM#%BV!NFBK)\nqCZU4e1GPX2$-b<iQ<ijn3CR1JpE6~|&#U%#ThO}BGK)d5lrNPn?`9S|ePoh7$DHuMNp|{<@M=l8o>~\n_X7up<K4Xok~hm)fd6iQ1L$QWJ*l0gP4rmisF`SPrD9LHx3dhDTN94DEQD0M5_7|A9VpreB79Sd&A9e\ncb2Zp&lUi_Ds5fnPmmVy+-E6EnE;WD~1Q2;4W+eqCi+_(|6|E<4zrrRB8w3DkT88EcfAhn9iG#7vLmA\nn9-<51w@=x+b)NN=^PUdYlWW;=ti?LE@)Spjr#S51K-wZJ&2ws~V+5b)Z1Ac~RPs5}D!K4VcsI4nI9x\naoRXv?%A{-be4*DV~c9tta$>LqKP89iCu9wbwS=iFGR4Gdm4vxR=RzB;iIO5`JbHYkYf)=C<eaogL8M\n*wJ-}FxnqX8Z0YzZj~sTgfXO(1Q*k)m0GyIZ`Twe=-M*%VPA?Nu4UPs)xwV%km>qlkAYk(#zF(+M{!z\nZ2zu0zGQ4qw3aJ(O$$gsuWI=u52N;Zb3?f<R~Hw8Q@2vH_KaD5D)F0vcmvRk2V#MsxiCroqx;mBB9Hn\n0l`vcOib#Lpnv`p@59y?V3GPwcj52%jm;Axxpb?;Y8K1{<>x+laBp(=6*29kTG5VB<cjWV!v;0%6D|C\nv$wWmH?q_4OXGI-0t#xsWF($W{dfp>ZcPGTtU12w}976mfqJ1YJcPmcw}(+IG=+?@O!9jbFPK8;J`4a\nPs#W_)(xYE)(ct4SG(wwmm|1{+9rpJiOzm!Y=Gwt2qnU%Cw*Yp!20BknbL4j)Qeq^x1#3FBlfsd#YQ7\n0HSa%5#Tm53V~6X#APfPjrpFyhm#zzof*5Xt?iD($%~KEj`0kH4nb$nw!Kp}88nF4NP@*{MR=?xX_`h\nFzProALcER6*=`Erj(~;?PXAY?gZa!04E>A)3M?vbrRMMt_5)&}9G@GA(pPX%dd2?>xWb6l8eY~io1A\n3zC$F}Nx$NwE3os5vV&*a6jklDjk-X*ua(6aguP)h>@6aWAK2mofX{8;Wb%G^K-004+4001HY003}la\n4%nJZggdGZeeUMZ*XODVRUJ4ZgVeYa%E+DWiD`e%^F>g+qm)Fzk;VluoCJO?hc1O81SKJE-3=s<$@$l\nAGQmDmd3lf$f8QpyX!3WzjubDBvO`Sr)hx-!N#VB!}<QA%UvU+X1S;;$aN`dwJ7aUC2nua`nLTl)M6{\nej_E^#tIVyw6t(7M4RXnTDRaGKe*^r&wZMfp8b56+Sh8PBg|FW79TXq;4Xym%&{@1%vJapa7IRZJX?7\n2FA!OR{{4=NH)4eV$)gG7gTGVCEtMUtEHR7Awc@I+IA?@Bb^*!z@KG{|O%(6yGk(d-7b1;N;2mX~8FU\n4-h>jL?ymF88&3E-8KLXM%>f#wC*yhotm7i3?Sn>}q@vRlv@)c2(n^$u!1hD5@@(j2MKa-X9pJ8I$u!\n>6=#WC)ef<_wBb8$pl1u24VAMKX1efh#NMRQmgGzrA|<F?;`NY===tT9gv4CELp?yMwBMo<#2rS6Kti\nPd|O1xkU+EkWlBaSdejnWb4+-Qk2TCW-ZQ)VzVq+EEajim15Z|$KacKE8^aal9gc?8Q9|iB+L~<nVH2\nLwT267WsL6{mv0bX0b90}0AC<J-rCyab+_XN34AMRC)i4$;bo$(4lA}1qQaN2d8ORjy#hJ;vf=tpoj#\n#d0?iAGF%)Q<)xLmE*<&#3bJ?tVpEM^RM4X`d+11azbJCloJ=pxcS^1`8EF8%tkG7DnrT7B%`(9dv_U\nU<Hb`{8s!tVpajt$dETB7A-4l@*4;W>k{S_p-^?msTO*TmVH_-Ge8aj&~i_GM!JZiO^-AxoCNRkss$P\nEs3klp0?l*qHt#9elYxl0CzCKzPzl86C8>y;_&`9(okMT(6CHw}H$UJ4q8)tvK;K-z+;M7fjy)6D~gK\nJC4pK>Pt;>XL>JdDDWUHkhnHfdF**;)ScK@1tXEM4KUc18f^~0=V%RpVU$RqvlNo%4n)%=QSSDYF46N\nmY#yzOQ5;cArUZKcRs&*1dOia*OiPT*Ol;W$5q`%N9*rlt!+q+6<qZ*7_6UUGKYoiwO{A6jQZYrl%~H\n45;mVwdR+L&=7f_(%#5-k3Q<>jc;u-fja%_7vq2fF=x8*$<1LJwVN5=y8z-4XH<92|EHw|zMldS}qE_\na|(-zrTM4%{vX6JCl=F^+LWR3Kzr1=dQ2-{Q*11Bw1od!px|L;%r19S3_7hWcq&!X51ylvEt*2`FdF@\n#qVBYM~99lmbHIsb~1O<61cUpG&QX_BgtT&e_+&Pr}kO|CXNUN=C~wpsqZLpS59o9@=eL7gxyBXLS~Q\nc^+0o3XfNqvd;r=B%B9`<%>dxyt)(WJSiY*k%LlK1)xn9SSlR8g4-*2M34SjZZLgZZGmF|J;l|up^d*\nu#(jbw<2`F@o${3VqZ1i;@|Utc3UjkG4}eo%6fq&2K8>D3378-VZW64^aZ`Rj^t|W_qGZe^NpUWXMl&\nLtLOIXBC+O=RS2rg^4PY&GKE?_IXFxvdk4P)~AzIHwD8iE2f@HF)pN~qmxSxY)i^_HTVH$j#(0Q56u|\nV(U$?uzuRP8r$6fF(Hq?O`-k+ms9ZPO5uol-S6!>j2~(vsScS;C?ZSg)Es*~^n%EnvE>>lf+<YoMHC0\nAkTRHdFBsoq2^tge{@4B6=`&oRj*By*L#ngB(8(>gU_9wHLGhY)N6-#h}D4;P!U?&h+j;9Uc{qRD=Hg\n{jc<q-;1(1Ati*za?Mp>$u#h{Sa}u}?o^fyM-p*hOee$o7*-eQ!**<z`3nXZ5wWB0Or`6%mK1bLSIWA\nz6S%ND>q~T(ld+cPl>}ZK=3UY{R9DVk2hzBi=Yk$*IZlnIOEP+*_oLpG+eTQSXDkg*^9Iymvm+#6FC+\n;q5at;*1wCKkY3=iEk+6LNX`kLQUk02`hV)FSI;EDUE(V>&H)LL0m7qA{u%DjrqMPJ&X+=)~6*~{%S;\n6&8F?dbnKhV?}--x{qn`zf_O3EK*{!k3MM}~r6-0z*yWANosOKu_n4MMhN0H;Tq_M~q`sl7Ai<2qum%\nTqMX*{OI?bx|n8Qph4=KeHc>6?u+Z2X6dAO|nhSJ>iJcW{>_9rGJRBj+KyDD#SDruoNdF&gE&y+8wr<\n7wjWuq%HR0;(>B|AVs4n%w$OJ=0HPJH)vc%{Y1()Gdou>lmyn7-t%e?DB>mi42N~acbkH<#}#`t_LSn\n;AmhZ-0F6XE4C#0>F|)yd&2fM7yvEK;Go*aSHH~x4VAhS*&6I3)G~YIJM*M1z((=%sNgLYTm^kTcJEL\nzWoX`yC^#1&-f?J*+n7@Y}2{ip;+vv%ll>EUE`n+DR`xUq8*`|On*i0jM@@dAsP9kQ~>B{rW)HpN32&\nUKe&?vHGycD};uiJ5=A;M~(QMg!kL+r#@4;6}T+%-47be`Ov(b0){{12MK(|A>TDwqT?+c{=_si(1Yl\nW~VqsFVU+TBFhAD2}*Y;2TB%$CH>6=W-*L4)=L?zwjP*Lc?33UyFTRm}{72zxatP$1UO}ix59#8%*gK\ng^@t~Mwbok3RySZPsAM=-4xc}hjjqW$pd3<Dt<tObN<n19vA-#*z5<<@A9o+pI&}I6(d7N(cPHYZyF*\nj?@|3&=F7`4Tscz0#g?6ZH5uA_c&!rb_6}YjW1^=u&Gq#*x?nA)HW1mtVl7%<HKmvo6^ox7wa-a(<I~\nn@%9Yjn&_L{IAW7SMp~Z1zvF)b^Z8WT8o_UOP8eX!%%@aTPjF{JduJiw)oS#}zJs*i&8WyG{J;rVCH#\nGT$$Nv|ek4MiZgy3;)1>)KwPGug@HOFxeu#L=(Q!6-=r%ejN=JU;Jq|hKDE}!5r-OK9vasV(T>;5KrH\n4F-)MNx!loKkmzRLdPr5n5jo+de`lv6s0SFkrnDvKGa-l-nas5nuxhf|?36Iu$SI@m(q`txjlsRLP!V\nZvxpI-K<+H%qJxkS*V9Q>`yTgP%);3xd;p9EC@o8RUH&ot!6$#Sd-}zV48^_9~=4?V|2YVBbiWd5*nd\nOE##q3l&C{P&LHc|d(XV*^u$r6`rUWzOj_FL(BHQoRToxHru4z2T<R?AiBeE)dm_yIjOxFoPxW9Wyuv\n=_VAcI}#J|BdG*UqoCSp22bxFhgA|!Zm#<(V&(wJQ~pU{nLu-tjwx?^E*nq$D+*4d9%uYWOu-GROnMJ\nLO?WXmgMlhQ;9869aPS{+GqSkL+W!T3FOVAB-g$Lrc&ILAG@xBEKmkNY2jw1o95!{)JnbKE#y5Wu@v@\n7SMz_@4E@u2HO!pz!FWt&8>1MytfLevcCOP@~1cH2;=Df?TiL_$)_m-9w`0Q|T}$p>@OoQA?}2?q@%}\n>vs*q!t+=(CUjUb(6Bk{>1mDLH<`fVkL(6FZKEqp!T9+(8d4nnvv$2UT~5b=ZzSwbjNF={YjQ*12zv2\nvP)h>@6aWAK2mofX{8*K#(}R&5007o)001KZ003}la4%nJZggdGZeeUMZ*XODVRUJ4ZgVeia%FH~a%C\n=XdEGs0Z`;O}-~B7*$_OH1WoFy^z^*T}-Ly%z0g^OGopymDP$_9-v7tzoL)lS-{`WnPdCyRGQgpFc19\ndHN=FH4_zlNDiCa-(hmAzD=6q`y7eYH9aRojSd+l#7ELs{1)esMOLOwP{E#nn#2v$}3?tL9p)+x=cPg\nHXHnP;bOaieB#98@UlBeA(`$=-LXNSB)5O;$b-SvH&pqV|Tn1xZZlWXgge?tQXJ9TFJAsYTvc}AokT>\n4#!R^^F?d_QajjXeYWk}z1WmPxvop4;1K$;{fb9)<*=)(m3jIaKJo*Aj;GMyKY_i>#q&Y-<*Jr*@dEH\nM7vJg4ooQHAS1fO2vuXRHE7$MKYk*MTZtUvovT2)YUDnlaa@mx7=}!f0$R5BIKDO=DefeH4{U=MH!&1\n{>*~?!K6(ATeeka62PXbbC*w4)uPrPwCIP$|<cEPr$X99knz}oAf?T>H!`rA_N-Ztvc;d8l}(*XSPWu\n^Azu->_E-Zp^b#*BIH@zm44Z+rgwr5sA6+Vf@&>%s=%jQr%49B$kG{WmSZSVyydSgT|sv)qxYW+Ojnd\ndcM$KlY9t=-X%XWp46b@6Am3x>VA~;aptHVQEGM<jaC<H?mehEyU*X(ANg;<9@xXZshZ3+n$(LSIv7f\n;|2VEV(9HoN(=o*{E!>mFoKIsd)w4)xpBt?GCt8?%6=}~->1OT<!{GjurhPcw^vuM-;~X@d;?r8)sS!\nx;%$k5c{XBZgqmh4ka&f<$`G>ZzUOapliCjCnnh!EsOk;>UJgBw-!a42_~jLUmxBT#i2oUpjAZN0X#p\niIQ7r4$svKaP7wz?Rek~sE_++`0H5?+6O7A)93c0BUQeVkK#4Iw;2vT{q9f*_Dqu<h}xd5S7pyv4F_+\n&WPwWm)}pqc@XJ3eJ!sdaoF)z#&3iAtLffqMd(HD}sY8_CRppL)3|;e_R3*zplPC3*6sgWPu@tCsRt@\nY!m(@o9$!wTO30{(|<Gn{~6c*n~gN&T1mJSUA#8mt-WC%h}o4*+y=~64gn^c6k%1lc_%Pua_B)V|)Z$\neHrjG4`AhY8LB;hZlzjQ&zEA=wi?arorFX3fQ{^wc{URl|B)!fOPVsV&c$86MS;ErPAOLkcRtXe0Y~>\nXhg0}_Mj-Ubm(>R52k=6HhXFLc+WJ!}C7N~+ui8fPA@Jw68g?OG3;I7UI`?MJ+?3=ng{EhC8e=o2!9+\n);c}$XdLWp4IO!EhLSxvP5sEL{yw$qFZTuN$UioY(&#LPwAt~E=*#JRYU{i;>f04^LbI`M!*83I@#P8\nuWue4@4WH$*@MhuBM6py0oG<LJY&oLB%JL1N%q6sKlya{)?WVYCB7hd*ZCb{F<9JoJA$H<5meXCT9T2\n2?(DR%ZUTL4Rb4&gi9e2!Ddd@8E>AH&$IJyvwcyJ61K-uv|`+thW(*G}Gae!Uv2;4M*WmI&9(m;^G<%\nsiLoGr2@A-`{`fbX^JA=cf-&TJ_xKwQ{J&Q>6e~y51*il%%9mQXQ{jqY$V(uI=;iKRlAE&<4!@RZWa@\n!=>%M=x?O>gAD8>G0X4N*T=fUdCg<Y$7FCMzS4fE~p*p#)wiUP&_=&;|SXGpDFU!r*4hM%Ap7ru8W;u\nSkbWh3f7_w?&1<0`U8K1jkDfOojKh6V4bB(;&nOSE9qFa(IoL*#PupJw5jXe)|h8~lhi&_p3mBZ%H0&\na(WhiFaLoyTC!JbgYxUS>s~;WeWK+|Az=jIHvzM9ogiOznaiIa;S7A5BL#GxN9}DWB!~`|$N$JRP$%S\ng-$*gXT8SStgvVkF2dlH7J5<?cC>aFtIJIa09XB=KnPVhfM0vBE3%ZrNIuL7Z=(gxG+wv676<77eDjo\npYaP>Ar=L2>2RDQM)iDz3Q{2VE4e`xfm7xJ{FK1;{U?wTq3DHBSoC~~d5h6)fN{D7(gFDt*eZoI7ONx\nB@~G$ISj>{xy%IoJ_!9W!?VA@DEAX*4xS_Jq48~vS`9SM`f~6Gfcgo>HwTFJK4+0(xgeoiPFHjhg#d3\nKsnLHtq$aaxSF=~E7x8e?q6gnM$hLy5U@l5ZmaKEKf2oAg((2vgJFzZu1u(f<qFk4=N$5-y{;*WJaCE\nC?55>rjEGH|H4-L*=FtOtYk2Q>&Um4ZJ&em}=z>DreSumZ6kYK?C#<7qwz#-It9=If;eXSO>hrE+L+W\nsDsKc^9}f&&5^(G{Ac)e)#5l+&Dyqx4UZX%*`!j0NWmLQT7$+KH8Ls@-s6Mf)ewGh$f9;&BP5bwTWNR\n(?f?&89pVsuN3;Hj#+a)>)fMH*7I}6CkA%@oAy7^;WVqs58x^Tbx8xxjJ6@QoZH;i8U<2YIBXFbq;V~\n}2$U(P1n}J4B9TILkV6O0{M1&)%#T?z|1E7KW1ID++#|a^Mm_Oc$%!j;9q=OsCuGwMAqpXHWCIKXzuK\nlg`f{VeX&8!>@)1^Nc);Ae5Gh;m%X{D{h<haF7S<Jx=X9l@q>&|vPeXc=@XVI<7W^t$Z#kx+FC)*w;}\n?qbb)=p#lPCRb)>Bs5jj1JmdRz9*5~4)Pf9$o)bKs5MGx)=?-a@@+)z&xUd-y9;;0=N3P1PP$9k|5AP\n!#B{+a6tV+8bwV(N!_u(l}5o+x7q|Lt_N}8?w&Gq|Wa!f^D~;EqJR4<;5>;)l5T4u*MxTBF?QqYMNOj\nk!l(M^&;;?sM*&_f&i33)REdXWBvG*wn~_mDXM1MPAAU@F{R4I5f9X49-eMCW>ts&cwg5y1CSH|v$?P\nTLx`|yo@0{af<7RQ1_4Zy4@A7zmQOBXK6yYm6RVPqRUzKU3s0hp$vg`(I9NJl7JSoUs*QB|2tHzBd!K\n_DAgUbQd#N&=m+Iq06;{E#VN~*>ol{`1V|u#-47uGgbV??W@8Hy_i{b{Uew~?mA|Ho8V>!8S`iWE^AA\n&OGmtOYVJ?#4Sy2lj5s*Lw`B8|wDAS^D8h6{IgP+$zf)-J&y%lM%yAjD5{9w5z-*X8=Sgq^na4Q|R!%\nOqdG7m;Ag3rkR~XADUTO$^Xf`mgY@B{U4Mf9Hmn(!wI7L^yP5iWmz+is-ow5*MCFJk?|80f}bO)D?=q\n4<IV(+zW~>mMt{J9j?x?q=XU80AA>Yw$a9ndlli^z8b)kg83!~l|yVY^1d&6PD);Z+1KtU`iUD^%YiD\nGd+-a(L4wgLw-Dh7n}#pK-3I1v5eT2Z^XE!?DOR|QPx@7kl5W%@7D^xL_k3m!`n4D2xhfIpSbPC?lH5\n&!qd;BIIE*={;Lc8b1U(c$fE|93fow}!4a#RPP&O}g$u!=3Aiw}T_?&^w&KYjkvn3$t5GQ0HdnLq$rw\n)9$-?q0}9Z17!2V~Fsh-eu={uw<HbgMxyGj0C%;XVeggGl|L2n;y0tXqW9EfKs(^Wb*FZ+zG<<-V<cg\nM&x*6nt2)ru(v^W(0`3z?;7$hpHIS1ro#KYCZf!*?1l8e*E2E%$RR6*-4c33CK7m2R7scmgH&aq(Y{6\n87^yFM!({+WU#RAbOK(`WHR$iB{&$mfQ6wGS#dI!W2LK%mL{Xz-c%dONxlyQZ5&DB?E)x_I5WjEn_$B\nqj>ii>G$X}=dIleu$bid+>k@=2bd~m?5P|pMh`5!tq(l%peWBY0ZeqVT+5u=W^(&ZDy9JxFnt4855Y$\nC$e$&=9c0Am<=BX0sR2Qsg1|9GpyXm-7s+##~am&mvH)iY{*1}{(fOO6+QNHh{tZE9^r^BvN9w<%+7^\nj(XPwV=CEMEnS=n{2(oW+F0hh@V%S+{@~I$YxOR*Do?vzF6vBnieW^?p5ANyaFI5KK*J6#`3U7d9z2o\nyD6TJ5Nm9e*v>Q5tLpNAKj$iXOlA@T~p0AbAR$o{AF>s0B6cgcgcHpu`v7KMNs+CF|qFyMv6^cN5M2h\n*dT6uOTtQkbf6YUq8DG1#*&RXfN{j<c<QD0{32(6wDgXN3GA(^*?4P*cgzC?E%lVv(~?BaO1srsIjfN\na%?4%_q$!w9NoMellw>_=(`bGMuNc#fQHF%q_z{hD^KcN2<m8La_^>Sp>1r{rNDtYh@OC078&lvbf(I\nO_*{^iw4fhlt%7%8CU5B~3c>C;sVOFQMo2W42Z!U&j%4j#ix(ktN?cDBtR~VC;x8+f3pVeip6c*c+c3\nZou6aAs_D1j?!<^#`c>2@(q1=B_wVekx!zvWdIoD}jOMvS?LKKqHi%$C4sKom=}FLFHF!!Y$_2eXjOx\nFkC4VBW*ve;egU&c)YM<Pt-*hhJb%kOS7#vpA0}|3k$Id1c(<8$Xs<NeDP-vq*s!4bHlR5JZB1d%G(K\nfz{?D!HpItFk)nWD2+|Mtoyc?PL172A+Z$^D|J|u!NSrlj4eC>(`P7)AIg1)4W)V)3^DCp)MA7Q_P1|\ndcu@M1idM9Y&i|lxD*}^A;Zy4QUuGDWD6Gje^apBJ;IfgfvWJYl_M#fth{CdDuLkiYdS;+!xKp%I=&Q\nMkPlQH{>|ota4m1IA?`C74%Yd*O#1Xj;{_!QXPl2PXF2HTr9%@Fsah4Pz&Xq5MsgAr@Ee1N2Rl~l0Id\nDbwA-0%s60l>Bb2F+agW>}rbcB}E#GSd1)?#QU`fR5GZA@paFi{#8R}_VY<SqB@0gV79-b>Kc6f^}%h\nI5p$L&s4?A;cAn9qN71=yHANF<K(xGnFci(iH`Xfv^Zr8K^LDb<U}pI#tyE?dDLu<k6!?$ndm#To(_;\n9oQhbY=R8sM7e62Q}!MdWPKe75I%}nF0_ZiW*`m%cutNGe)sY;c9h>Y5R6@1x2>(%A@cVunmSf-rDE5\nh#{kr>+9N8-ttrK}Tm$}fVUT%~YJ13#?R)8x@jM&RaTs*oqS>(I@SaOwLkQc-9W2eg`$!QA^l!B&Fwt\nz{#<x*-XbtMypC#q;z)EZ-CZlW%8hR^ZsnnAVj$y?kZasXLHd)2l!JMbMk*h-{5k4_(=@;Z&(GjTB%U\nx*{!)V@)@&r)|{B+vd-|Z>w{l_<3>S~8gAbHIUpS<OBan&Ei>!+{9KmPu2!gk4%ahNktZZV;>qB>zqn\nH-@z!?8EO29F7+aTpSD4CQ3lL#NN>FhougoW!{^$c?Aq*tC)j(NA#e>9zk1?gfAU8ScTuE8SQDRwEjt\nS9yWH$b}t%n?gVsYi&i>f+Qkx!^mO!#Y|wg67eiLP`YUAk+0SOv@yg+6)NlMwo41lVu#>(PIK@ew1nZ\nDY|CSg)x7wCowTqk)DsS!6bu<-^4)6CcHbssk3pb~`uc%l9AmVYga?=li83|bNpfy9;QGs%&Dj$Qby1\nmGEAaEnr&o`kJidCYk*+X{RYLIKNR55a)j)il;{DDpfRQ~Ko^=VuZ0SFkT|jW6mH#YvS~6rU;C32pPZ\n!rG{c18p?X!*3U3#p=%tD|JEPV$G5cyYR+C~y`xS3r1g8eZXQLWOgat2HWS-Pcsybt>H#!`+5atT?6D\nZ(egiT*YdItPGsegy+B;Rq5euO)uK9kzi7pCDX2&V!0SCXMeo9-hY)4Sx0YCHM`ubOC`qjzD84YvrJW\nSVvIf6KQenz&KK}gxyH;y9Z}M?LIc`8p)ztLwvBM_KmcU^6KdiPu~Eyb{)F6%@N}7!1YTm;!Oj}7iLA\nul%<1xDrOz^+@-bDE>jkDg80x$D9aflznu{?to33r=T3{|tlWsTiaS;QfPvzoiL>&j%+Li!au-`!Vnn\ndmmSD`N21Z?PE18ePY=|2ciS9NZQHK_~1}7SX2rZ{wtrwmv6S`LqdTuNshNru))KHDrVh71nGVKwmej\nazfoXXV|GP>C}jZ&Lt5J^;yyJ>b24)!yspK3taa;C;J)sDQf4n%Y65${CmMql`|P+eUO)5$rA&lhyN!\nHi3qYE1t}dXsR<0*BYe!n%9fU^9MC@dS%Z9w<k5Jpr@?fFV^0a4-dp*HKQ>mAlF?+LZ$)9{ZsxgPTrj\nOpx{1I_Rf{iR#i`Y5pnoO5X(l(iAq(fr7iyZVC`<>*9b44ijqBAu4XMOTfh>>`@x65$OfzF3~jvi8tp\n;h%#In8E>E~X<J{{ZHLX&EmmJkKOKRIX`NF;gn$l{<z75A$ay#y4~aV-a=XDpZP^~uop$)f^CAA&ot4\n7%sq@ZWmYt9#AjbE<eS=Ci4)+XJvfzvibthoX1;;Bnc;J2}X9V-yOPj6!8Su@mnH^}-uE*YqU<sX$E-\n6~~lQ@7?6B;PI#NT3}fx4cf<`IV;8oM0Y<@VsSpDt1JwTleramm^MK{}CZ-<;s&Kz6*C0Cy0|W`0XQn\nZdf&=ctmj%H%p|(iYpy8pV5g418ptgL2vqPtIMz)Q-vy^Kyom2$w&lexA7YJ7%i~#3@wxV&DdLtbl&i\nsy2r%LRB#ST)dI%w&!pr?hB;;PRzEGVM2;gzFU5vdx#*<!J7v{uy9(sCy2UxI*W@%34>EV5+7)6e>$m\nUI##{SazTJIi<=hHaMXYadx&6}Tex0%!xq+~J;n_hmetUNz4NyltwBBeT<QQ^QMHIF1yR+lGBWEmTH3\nUE1k$f%-O?#RQDSBA&;huis?B8-IP)hQ@mxIKB!rK8zjN_{I|Q8|f@%9iXufVOz#C-2xG<5Mao7x>Al\nlT@RNt0*d(+o+fyIbGkjo|g3ch<suAIa^541S2Yc7J3PIO)^=XpDB2$6oBLLJul9m$YMntYbM`E*@q>\n-J-$q#z`+@Ls;_#LUp$_{0jhaUY!bkiRRAKf!(Rh<{d?8%GaR>iF17m+wA|Sp>#TrYXtZ8poeIIt<PQ\nH`G^KZLe#2Q#P(6-n6>dtY)g<e9>_pO)$<^a6t&8g&=Km^m1XgUFJk!gFm(>kP(xw-v+qJZEy7QL;Pc\nQl<x{pPLv-O-$MzJ`y&^)$Vi~@0SoFIA>65s<zT+D0A!%1khwDf*atrXm&;9k(B96~G;*%eD*<-R9fb\noUV3A<@#-OgZ!4}sg#E`BIV<KTw#nyKO5_RvOwtaP7LDa4dJ}yE@NA7_ko`6t*E#tb>Yw0tLfJ|?Q=n\nH4&El<R77sjtA(WLdnG`t-af~_FFsi@oDRU`ZZY8W7i{qdpF2P=M25Uv$jklBk5ixZuGx$6h9tT|@Sz\n81nA=gM<45;Z_o%zfFj3HSYw1k$~Hh_o9e-<cL}3%BoWsT|NFCDlr_<M7PHWC^S|iJGmeP(?4RHT=9k\nXS7e@6Mvi~$DRwVwoShyMpYxT#xi6MDX;XUOXM=VN4u|n<F^6{e5DXJny~%W7BP;^a?$&rXMFki854Y\n0P=8-*oawpcW9vq=AezU$P)?6S>%jDqv%e6?vA+94U+V^lJUv}_5lxG&?-L0J-h&4~eW%S)6H$dNZk%\njL6?5WE{vS7_)@EkxqrG(>1HHe_GR*WD+Qy^!xQOZ(`8nztzKUq2jq(W5h$XP|$^!&r6kaGr<wh-6cD\n(X(LYzO_*os>16$VZu%J7YUIe9|Pz9*xeWcHL0qnjzHs<BDAC$H`Qhz?@JUVZoEyGvJsq?i<UC(r{T!\n|q|kT%dEl(9IVCk@S5C4F8?G@R!IVzh|EFB%VII+tH<4|E%EWK0(h|$P$&*9ii^8a{TIt=}^*Y?app%\nZ(CONV75P7dG{s+`tsBOx<u_ir%pqY^8nVVwnyXh)3$FV-w9`h5ob(wa78DHz=D~`gas-w2x;sR-7E+\nYK{b-O|H{Tx9UE+?6LlL^c80zfjLpD+<Yl`ZS-i+uflOEYxp+KiX{K@%AQD^G5)|ScXGRbSJG<u8LZ0\ndCX22+u+Y;Yop(#XktE88G3mtj#_KowUqm>hIZOz;B*)%7^V)8==0d(Q|)B~=`fsF%<jj2=m!B<e#^E\naAC9#$3;amXv_d)>Rfa);DM);TegX$#|6#;us-fiYtEEh3`2Zra|v72!w8BlC59=SRQ1n<AZ%3V_jG=\n4uQrt2K{KQ6`yt!qb@YW1Tm4SK|&7=M{lZ_29Zhb4*xS8xUBaME0nf#ES}nB^AnKh4>XYIb7tk9({0W\n;Y4y}q{}B5V=qJgDM^~hgW*DJ{>8o+BEx`8a+g{zlGg|4v9_IjLmeVaq%<Y{5kCBG#UA7gtG**bu$^$\nX`A68+@8tZwee*(mM8f=jN(xdP;5+?^_ia7z*f8ZfK^?NQFKV(^4aYhAnR)$5=1pn~{SGHHk%|<FAD|\n=`Dy~~<3b!pntWZeUlRo+cNE)7;i>LbTlG1wp8cPd(d$``Q9orrn;ukShGPd@{moxXDd~Ytw9eHp2!L\n6AYQG_4wd69jmu70ggD3Y^iZ!gRDQcy*~I5VYv?^kHw^+imL+0r=T+f1zocyZ2+<aNzJDcNZ)v9`=~?\n*y;U<Li>aXntpItH8quA~%=IfTmF%Fs=(dd;Z@qpI*`%i`3<#N7vP`JFM_3<fHD`m5;irdsHcPkm}JF\nU;O*u{`$Y;dKtogn)~I1<SxgGNVjlrC!V^g_C=h<PJY-_*Ai=*8IR;gd_R77s4?KO8zU8i9eCg;Y=|1\n5?N(I{$~kpGboq*?kN3c^8;70U6tGn3{1XVm48R0jz%T#)kHts);`fQK67XgdDo<cuT&6cAF|12^!>H\n-6zmcvMOA1i8CuExxtF1?cxWOk^362o&cB#{qcfC;AgPv)U4PM@ndA^NaeG*M{@9s@U#P55^-^Q~&O)\nh4|8#uXm^;2)zYaMtp88#NH=DV;X*UhJ?yF-Nyc+<QyW}_yfkCQSSsnJptzg1o6A#=UkC6d<gzadWjA\n!t(+PL7>x&iV`o@?`7as}`>_bw}H&0rBoeA~a5(*}7oH9hoS)_scJ#EZxw{wC&Ci<L<7)*ha_lHDaY-\nwc$&>Z-d%K_5xJ)3a}GaLkROGw)j<HnM~+N)8iel3^NNvgyVlyq(I_KGl-a{I}FhozvnD?55ygFgS+e\nB<6CgDZx^!);FO>9`4>~}SDbIMx68*W@%A4i5EF1hbRW2`@&_+`#FQ#J|N66MYy#xCPE>QN-}6-OsNv\nt|k`-a<(_#$_*>fn-VTL~T%67+a;-MJ}x*3AGMTrS8FF(=ia-Kj#TWgaFDr5u}zjpYJfUF<AgYLf%E1\nh%bHlScF4@NFd_D=sNdDq@QXF&pKyLucv)_+m$_7ly%-b$)J?=t^(OwI*}0F1Z+cGS2lfIrazDVstQs\n_jy1xAeVC-lVJ(VRVS)%0H|`X!!f8TXL1gdu7}wsTXa)FPymCL(kY3D=$~aISG;fZUByoyq7QI6%@SX\noWSz-?|V4&C`y@ZDh@G#$!LzQOwr$+ULoFBB&FL4htVj%ALFrJZs9%+`W`JnF``2trVrE%G^BT+IbTM\nJmnz~*;rDKey01b#?Gw=fzV}@l?ZH_Fu&>Xii^tq72;)YSp1uxGo5$*vyX|UT#4fH}ci$KkQ=P(B8Os\nh_NmB2!xvBcL;j)i=Wg51tk1BL}3$uWE!=VIM<>np=nZz~wFLqIJ=j1=<@jp;Y0|XQR000O8X0rTP00\n0000ssI200000DgXcgaA|NaUukZ1WpZv|Y%gzcWpZJ3X>V?GFJg6RY-BHAUukY>bYEXCaCrj&P)h>@6\naWAK2mofX{8+BJ4m*qn005>E001ul003}la4%nJZggdGZeeUMZ*XODVRUJ4ZgVeUb!lv5FJg6RY-C?_\na$#d@WpXZXd97IAZ`(Eye)nHNs3;~Et{#d#3<ff+ZPFoVu@z~GJp_S5OSH{KCRLJ3;uZbh_Z_KUw3Rj\nwGthPt?~Zrh-F<hO+|}ARR%qqKgRA6fCc~R8x7*QUr8gU?Hr=DPv$fGX=JvI)tbKWDcp+B2xV^;N{v2\nAJz^N?Ug8eC!Fx+XgV1L(6YQ?JsBb5dFtnfGss<o`MT*55_fy{`n^an4j<5ksJJP(f-;%g&~*a_vPlp\n7~2n>n$o^HQ4LT|A#ctAH!}*^D9-hMjbwW*gx?_;+cZE4~wXKA+8Ie+*D%?SJmL;t-paV$GVm<WA&5-\nR13R-X5nfUKCrdHo`8Mb!N_9{yso)^_NzNfB5@)Ib--aZr}!-(l&!lX$T%Vc*Z{QJHhUF)gS=@>#gYI\nxhh$>jNa}tucEZd#e=jCD8VUn>!a1HFF+ujdl3tpWgd(!eY&pTYMYm<Ai5y$udku{?Ymc6Yr_bi1ykZ\naC^M<r`)wwHyG`dI9v_q04-bd8UXdj-9wG^ky|j2JMD5snu|G3Ln<to=2zqd2bOnia-UoyuH}_IhWr$\nXyqN>r+Gj<^?QYe@<azm$GRsh0~ldM-5@ahx>(8e(wBS$~EK2oz&QN~*ID@8Spsz<i6;#h@SE6^#@`n\nFSrNaMQ~p^||C1-0AP`y&$vAjkSY?<eTyt43C3?!YdHD?MnO<PDu(hQnl{g^bp515snA$;b1L`J2z@A\n5Qbji`Q@8pIs!O1@5KWj_5EudywvvgLPcYEi2r^026ZIts?_;VT@mUFBEVwh^XU(G~%7~R;uzO@gcr!\nLrmuLtmbYTnLD=g1FAU+?u5LV&m)V0@Ul{@noXLVE9oS!<iDb1-W%q<A@=5uJ-2|?+nDt>JW^xyQ!hX\n$wSmNd_#WzxkolrQd9haayiBQ-f<}@gV4SawsP;^jh+3}q<On3_pW5g<yoN398*Jn*;(>B+eC%Cs`b^\noz5HWHhN@h#+4J)`($QMQoIu99jR#a;Wg)=K$Q~Q&4#AE@3f3`vm22caF5j8iWTtL0^TM`dAdu*hm2X\nCs)AJc1gb2D~2^HHVqo12WC!=JGQX1Ds@GH<qMjFor5YXO_mhQjC4;&yl#XcH9PdVUEJfT?RseS6DRd\nbhGn>{g;ASmD?Xl~73CASm3=iN`&zfk)OX$8eP{&r^aaRK_sX;$9$$EN{Dk{y8{7Bu4h*rZ0!Z#B3i8\no#O(2YXsV%jH_W8DtGW<K8_*uQwYL)9+S!Pk(<s)?Fl#aOn}@Q<&UD<A3TB)9E<U&%W1n>_Dj+g?MPQ\n|xD{tzKCiE11(51UJ{CPNy&4-HFK(^iW0@=}!BtbIV<0Jo`<y7Nt%qB&Uk;t^O`$jjOSD`9z>{vv%<P\nuGdi84xJ&;_XOOb*Dx8k9cD7|hw8DR-Fr|YsWTB>xwe9>ASImgSgD^l@wIZ;%T-o}BW^k0`Hb<(jqkx\n<N+L#NR18D^F9G_{tMAnAL9!Hy<F>+LvYfbo@XoNwHiX8MHn_yV$_Yg)+R{(OAjrP;#_FNrGq#gH!d6\nas4Un}Q8XB4SzzFYaX*pco&`$R51n6-n%g89=@pBdkTKYY2bP`nIY4Hb#P;bIQT<qg~Gr4P6VB4iWf~\nv96ET4^N9kl_xmP$c0fQw7cLt1ooG9?{uTeiKVc{7#LKJmYf|T0lU!!$v67OsHD36J`Q;$2uH#M4EL?\n`=z9{+dJ21tMcNvU5(D(_#V;5=ThNEEN22fsrGu-mQ!<)Bt9G9G!5e%S;B5CXWZcV26?5qLGVCmn>}U\nAn#Wj_Y1xxNhX1*1neUdb8{qnbDGEvBkuV|XzDQ*~T8If~W@R|r5BC|(`^|c>A&+S1^;XCCyt#;6Sgv\nt?<z7zjPpI>-OkF>h)rXM%^si=hWUtO$d2a@l5YBv8;8+1>tl~1rod`JaYtx;5g>12}+z|tyz4DMsFh\nL}9ChY|c7+K%u085u)Hdq3_D)r@+qKrLzHTK5@q@Ezl2+PwMOV;Y-|;BexasoDO6FN!XxuvI;!T%P=;\n-qz1}xx9gen{Ko0|Hs7>HcR>~+x2ZkDobLJVDz334Arm0fS)tkKowngr;9LM^!kWcqhBb?uz*VBOqWe\nTSnmUA?1bCu(${&f5fYF~8sWnN?=u+XmxixT?w~P94Bym~^)OcX4^T@31QY-O00;nPviw+n@PA8Q0ss\nJx1pojl0001RX>c!JX>N37a&BR4FK=*Va$$67Z*FrhVs&Y3WG`)HbYWy+bYU)Vd4-fsZ`&{ohVS|ngm\n;(?xCV9@1_a0s-MWv%hGN^@P%I{9YfFM8r_H|~CB<pHHk~fEKKPP)NUA7`9~h*PLBb9-IvL1l7|f13*\ncu1kOs+#v<b$Kl6nA|iilPvLMr&LE<AvBdGlC`Cw0qRbxW*o=Gk4g9wm0V9!}09(M1#7P-94ZB#v7mH\nFrYiPCmqmfIW(Jiv_-vN*xu+pIip9^;Uyz{?9iqdXRA^GkMG(Cc9kyod)jbp9eRJ`oN;wJFhlryV(>-\nMfT|YNOMaNc;2VEZn!UM6vwizOp>MsVG#Pnc?(niqz|ppf+${2k=by<jJmU^R2!-1@H^^!^(0s2Gq}4\nM#HEc5H)dlJ`DAwWtR=~Lx6<mFcKdU6n2|l7gm|eo;N$+^t^-_}`Jq!4bs{$2}hTEH4c>nH0Ba*-`43\npzDgdR`9t0yTn->;e7rSH7ohS5eM>m`ixp0rvQqfyN7YCc@lup7*VFLh`~shPD}|8WymVyT%0|8db+8\nTx!MX6=k<T8rZi{4|Uq^zu>x$IJ~Fse6#H<+aE@_RpD!b!eq~%3#aeZFcw2BMvq98a!~T8T~duFZb-y\noY{9=)x;N1NUianHZ)K;<iJ8t9%8StJ^HACkKD7(Ng$Ud19+uI%i=Z#nbUksRe9>=CYW)kit419iDep\nR-Oy$iW&Tu8B;yF~uv~~EJ};!V=9r^d@_)$6^W0Vo)%+5?*7zVjVElO=j+5l^;+s%f4v%TI$NpI#zZI\nkwPnx-+TxtS-Aybt#cZT#L<a%-OO8f;-O9KQH000080A{lMSb!%i%4`Av0Kx?T05bpp0B~t=FJEbHbY\n*gGVQepNaAk5~bZKvHb1!0bX>4RKZDn*}WMOn+Uu9%zbYWs_WiD`eeN;<t+b|5i>sJuoVK(4;JM|DCJ\n9O(FhYiKHyCGXltk#wUNlu%8KT3++cx|eSUgSse<D)2wpXj;Zp2Hp$TJEJ*FzUVRVW%xPJ=-2ZNawBW\n=J4wpRulzeax&U_(2lX4)e{(Ln)ZN7Xxo^hvHBi+-ws+oI5^4P%yJYryni66@AUDRk0aW1eW^TJ#mA-\n#qAjY!O7~VBq}6Id<zG|6ryfo8F>93!X#G&mlc^ZopSdI7dUWpAT5annkV*KqaPXDO5k<|a*X$4vqif\nuPl&#rWk$(Fq{m?oi<7J|MzQ@Zj9w*ZZX*0-Qx_^<D$kX=77!$b5xxp5N^t>C9V3Wrwz=f^N3!ZA|65\n*Q*^w%H=i#*u?C7D%l^(h=S5tuT4;sha^gxN{8r)xiOCEer*!1YufC_pN>yS;<!>yHhK0Kd`Cmh#~TT\n%r)qP$CD~WOH%P|E-@)pk}*frF@V|Y>P<?BJwH=7d7lh-BD1-cH)Xi7u&yf#)_>m6X1U)8pHjN1Vj4H\n7>#dXy@OwxXz&BSRLLQQBL>zTaM;mX;660c8HllHxP8uGOW$oW_c$PqA99Xs>OOd+=F{rEhk+l+wmt*\nusm>)a5V<wlIoZik`eX9Y57I&CKGH`Q5b%k*xLE*Fu@Vz+RBgFP$L!oi*F*BNkI$Jbm!5CDp2n(JRIB\nBbm`$vmwNINoDAQJLRz|%&t{=h*^GK?lKIJk)zCmqvxI8a|Y6YC8$6Lb!xC0D_mmXOz9bTLxr6CWA&-\nT=6+tXe_919UM6`zg$LQ^#sWOJ{jTDe@WVz1agP)h>@6aWAK2mofX{8*9TBC#q10052%001!n003}la\n4%nJZggdGZeeUMZ*XODVRUJ4ZgVeUb!lv5FKuOXVPs)+VP9-zXJKP`E^v8`Ro{!$Fc5z4UlAfg3wuRh\n7wUs}CxVKoZz8#DGwsD|lai$BBL44A(j@J=d#8QLW_Esl^UZ`(`VJfy+;P%_0>houiVV7!E$Or&1N6K\n-602v^0uj<WBM-AzvUNczEebhK+Bk30OVy{VwnfnyJ(5XIHIvGLQGBQmvm68i^_@h$mtJtKzDuLk2+C\nbDY6n@{Nh(awCObWWVo`X>27b0Mg*1~zSrGi*DC_tzgfg#<(Pnoh{xlyZqg$|cqmWQ~ok6<casaU_s!\nQP!p~2P`+&nq02g^d?DV34m1Ka!weUGM{X594l5qCMU<fz4**(!e6)WJA0Ax$#;jQ3a4K<l(Q7KLvf7\n}BIJ);+klK~^%R_y~+uMNtUo2<xO0Ipb0!Cwqd_sL0g|f9?ZjNRJy-CR~vk4X(Ta!ECb)k&4{r+imUn\n<PAGS)<?CN(U&gpu=Bdw)&nvSE!Madk*HCF68495cO}iCX!W%S?odH#w|ZT&^Pl0;!Z|0(j=tBMoY#a\nqJ!3(b%C9W@O{*LR1C%*TMP88S|BjUvLgn<GHbC4RVx|@Re-7D8OvWI)Oh9bn?yml(rCKrDtyp|{_BC\n}j&Ofj*a(ziHkL><zSeMZVL}t^G`AC5VQ66@NXWd39t;XU(?8yPCzsLl}Ly|_VGY-X(1CsJ0vqg?Baq\nH=Lb>J2Rdg(Y;hgvP7C+&y}D!BL<ps)xk<Qm25ETdAVfZ<$5q84zN`?W{(<E+#+I4MKbPqEu+CIVk4-\nrn;b$Wu#q+4=;jRUGSI1hId4CHSFjPUp3}$Ej*4&iPg5`i}I2J|MG>Y~%_fi{`VLp$hF^T>9mLt{z=J\n<-c;>=GAO3tBTTWwqRJRRVVu<b^N3}KdKvMW!oU%?)H*?FfeiBG0!b46Z#dc2)88a?oUR^;Z8ac`0uZ\nUS)M5*pmrDkX@7`jrS$_kdc+P0Ccw7Xq@%mT2Q||rK}Ihd$4Z)bo-0)+lI4|q?Dg{Sfd6rh#j=nddf3\nXyU>4cg#IqvdkqJJRUOtHv76$CX!m76m>96Nw%b=?G15ir?1QY-O00;nPviw*O{>5eL0RR9q1ONah00\n01RX>c!JX>N37a&BR4FK=*Va$$67Z*FrhVs&Y3WG{DUWo2wGaCv=FO>5jR5WVYH42FOWTR{({u#g_oq\n_j|)kZUPIYmdE3WJ#6A-7cm7z53X7yqHE8X-4yA-n<z#I_n9v9R_6vriy6;>%AR;jxKuP<h^&KtdW|P\nPp2FgztD8nb9Z#!K4D8@Z|!q9BW@<8yBpa)$EeTo<D=9X{SvPXp^rKFL`nx9rd>?bVwh9-$r$wFplB~\nbWRr|B{>uRwOSI9$^_f2(kiKSLErgLH3ehmeI_zPWsEETJQ45Fe-P`vygLqQZ76SQAHg|>W_CM51(1;\n{ENm6vm$DXY}E;0~~t~=Qcy!kN8_C30OY;#OiRXIOcgYd-!ipd}G=M>Y8Xb7f|WT!pC!`%Z!u7y6FwB\namgc|@AL3E(8{fh^?aK=lx&Hih+**2jz_4)-yeKd68k@F(22Se>8w<XeV-QS)_wpaK|68B)58J?BR{W\nemK--89tIEe29Xrlw&b&{e25MVyAs$THnHz*ojx&(Z1hMY*I;>9@BY{-i1Xg?e5?PIlByH6xq(l`5R4\nyjV9;2-M|jwih+a)}$Jd=^49Ns7r?P5^PrPwXoM~*Cnhl$KNeFg1dZ0VOQFt_tw|dC#f`cWm_&K%JQc\ncUZf~{@G{erZ39mm#h<J)b!lXwK*Rn4P)h>@6aWAK2mofX{8-ngsK-76004;v001xm003}la4%nJZgg\ndGZeeUMZ*XODVRUJ4ZgVeUb!lv5FL!8VWo%z%WNCC^Vr*qDaCv=HO>dkq5WV|XjF2LMw6%K5VWsqtkE\n)g0Cd##{ECT~LF*dbLwyUcDz5ZYc8)$t2k3DbZy?G$|K^q5Bx2;eu5oxO}X^if{9S0wUDSAIRp%s@T9\nS&lk>;+Y=4IPey(N9=8)@l80PZ`&vko7gMp8c&){@{j7iDn1k{j0Dxlw5!b<<R&7baX;mYRA%}R%mBD\nGb)9K9fa$c^{s_X@6UOQgai&~;Oaz%w&=dZSk9Q@Ju+4hLTYTF41KXfhbS4=!tqjKPQb5lZx7a)UEG$\nb_x-<^#7jLoUUSD;EsU2yo8tn(VL#N<zJPZhW);8t(2sq*lVw@N2dxl3E9*S?BmNvcT#w4Z7=!}XAw1\nkYz~$xpL;xmrD2XVK=tiR~4BU0#G(>tJ8n9y(t~H~S$C&9T+<P>05Ege}ro3;yIz9ChpWIsXs;~Khu%\nNVyDT$@$9ACmpgP=8*W1DBUXq`|zkcNdo7dG1^aSAeLruq62{%6qnd^@ZrDHrrP4H6n{;CC40AIN88Q\nm1=aWOH&czl9>FK`%VVQV)506#KKXXMAU%=%-NFGdKYztDT$d?TRw&HjmcYU#&yy)Z#3HzbYKu@~iWs\n1za<jCWppov)yWT!&R7kGT<!vg@qC;K3a@6O{dv5!lVq;8k37U{*ux>O89+b+foE!w@)_0#VV3){%YA\ntl)L!w=3MzVsgQl-LSmgLt!x%u92$GA_qNWo*OrD4lRjyo@-*;;VG8mWP)h>@6aWAK2mofX{8*K`eH8\ncu0089+001rk003}la4%nJZggdGZeeUMZ*XODVRUJ4ZgVeUb!lv5FL!8VWo%z;WoKbyc`k5ywN^`y+c\nprs>sK%;3P^}nNUsKzLz3NG77dW1r_Dl;rIE~pA_bCK$5{BkXZX;AveRt~#0SgbJUH{s_mQUkAfzTtb\nRFegMBS@U`B3RY)JoA4eHze2yy>1Qosmz2rh->2axMcM@{)2564&yY(Oh8+2dSnoF#s?9;<cDjQ>JnS\ndK|P6OqKhQvSy0zt8Y-QjSW^&9uEMltYoMDA>+6oq^Lp7mDCku<+7ZSR>;26Wi9%?;*HA}89+diVnQb\nGK;PT7q%3*WLs_O#6gALp<0Yt(=_DffS?AnY=pK}ok6B<8qaH@RBWTH@l-#^EzjoFoj^jI<eR3w0yX_\nEtv+-OWdIm`wP&HP6rMG1LlG-2*-?ed$-}_zAH1@zX7X7@=c>coU$cE6CaG|$7Sks*GbwTEgQ<HxR4z\n5yQn8U$rz`bo-s5O0pdw2qtq~z_~+lSkCe}DWJxgSOa<mToH<X+$}Er>dZ<KwiQf+fe*@^j#gI#PW|V\n(c?ryf3F^_cvf{i)y!3ec{hx=-DGEk<OCaKu;t@p=8ii^~tf{6Wl1#(aG@cl1Cc)p=_x144NEQum6*V\nlgO>}Ovul^?gJ20nSt5-wzVQX?TaZ%$V#4wlQC9@!xi#0^Yl0Jml30(a095=o^q=Cd}$N;sL%tN#J;9\n$);Szz?0eN&_TF3U{Fb8iC7CUrO~fmCCbfhLb7B_KQU)qt&(P#~eW4kz=QW1e2DEfe;rV>5BuC~Zm~p\nZBfg1(P8e+hGf5`Vgwk;(A1OHQly^uJDL&XVhXL}7=b@}da*@2zZ2O*R>=36S2PIoS&I<JG$UyamS7y\nb&$zY5BeiQ<_X{llBb>F`|(#c3zGrT}|)l*7r2X}vB+S;Iy>9TWSCmBP~hQZR1IpIJ?*&C4o!=Vpkr8\nTnAv-*9B+QFXXr=U`+MyN+T%aergw4kxEWHH**-uqA4&jaxf1=D4DB@(I()BUO-je3j*4K9ysi%YBO6\nd+EwuxEWxZ&C4N*Mfke71!xw*+v0?GkEYz-dS+II1=*QBYs_DZ5~-mKg61%=02?4TA~}=97Mu^K)VGZ\n%e(?V!Stm<LrHD7|w(M<SKXys{VJUAp>UQLJ6=#kQzDUatv;;Er7fP}HV-ku#oKJRPTi?<}Je>3aYnd\n7)tKr30VvkL+2;tK1yD$7RbXXJ(-)k5&xwQ|3B5czK=dC&D@rDH{g^bg{$D?XZNqkq~@zgkigoCuenq\nh|F7YD5QOqU6sCk#Qr1`|J$5LPRr;^jLy$XnR&5RmDtT9b4gWMjhR^@&;hY|7z5TDZsJa&gZrg-1UCP\n)h>@6aWAK2mofX{8-`L6nixQ001)p001li003}la4%nJZggdGZeeUMZ*XODVRUJ4ZgVebZgX^DY-}%I\nUukY>bYEXCaCuWwQgX{LQpn9uDa}bORwzo%Ni0cCQ7Fk*$jmD)NzBQ~%u81&NKDR7OiwM=<5E&m;sO9\nrO9KQH000080A{lMSllECWefrU00RX805bpp0B~t=FJEbHbY*gGVQepNaAk5~bZKvHb1!Lbb97;BY%g\nVGX>?&?Y-L|;WoKbyc`k5yeN<hKoFEi^=T{JuO=cR`A7El1n)IQ`cAK=1O~W#BRkFyXfV1`A7w~JGnO\nze_?mhP+=N!zk><L<4j}(OT{G@<N?L1eCdx@GFi#0fxQ&~VkUmW<s6lSCX&Y;k|6eP<sLS%2ydaAH(r\nEW=Mv8R4C;hoN@A13zWDyP5T?*O_6GQo^A1(Vu?4cX!}NF^BP^HTRE2EOXEw5WT~{$A1GrE<l*_);jf\n2yhmn@0X<Qctqt`T6n4L`75xC<h)zPZR<YhHk@X<mOgdhk!@i@;x~e&)xuQKf`3Y}17n)^z}S%xBA{7\nhV2dsXLc{ebPeZHl#1+Ftsw-Dce>-pgOb}zCk^jn-_={ABJ={$U4p_J?bJ7RIDQtd9#7`?}08Z0H4Kp\nJ%+;<mo=`i>P#AWHKXnCXMyr?$3eg(lC4z>m+q=nj}9p}bJ`uLeXqlPlUgWtYQ)KE@iC2yl=H~;o1f>\npnx^EBu+#D!dVg8+8!(RUVywo9!%(oN)I>7K?(s6y%n582N_>*%a&_tOR~eQ;Tx_zA+r%IJ|G@JAM!q\n`V<AU&DKOtNnC?X`IxmQ8%)!7WOy5<bi4$ws6$HijOU{Q@+~GCeXaQH|e{JqjflzYm1cH)L!H9x;hAl\nU2<V9zlqk^_gsrWo~x_OjJ^xMq-zzjJ9TfOde>Ha_>uevP)h>@6aWAK2mofX{8+vriPI|~007@>001c\nf003}la4%nJZggdGZeeUMZ*XODVRUJ4ZgVebZgX^DY-}%gXk}$=E^v9xJ!^B@Mv~w4D<<&W8FVPfb`o\n!v8)eV2m8@zV+h@s}>?$q<B!?0r5I_J>GUHNy`}J#H04Upgw^zriSR^phGt=GE@0mnVbh4@Is_E3KYE\n)jfT~-u%d9Jc@spgx!SmKZFLaXTdLhB+@^SsQOt*W!dWp=Ky+dAu#y(o(I_VP7>T2w`$7hPVJt$Vbt^\nFjk~_oVFf+pfsx_DOqXzVaXMT~VE%!%WQ2s!i&wyD&c+ZN9Y^n=ZFwv|BrY>#QjOK)bhUs<oPDt$y^m\n45Kzp(Pk^1&L4fQ%SE-++(@spyhzr%ZE>N}_Iv)xE%Ht`T~!sWdAqpC@^Y$Hc>!-$S<&jL0+a%ZYVOf\n(Yec9tkM|UOj$cga@9E!P9;HwIa`fb{$IrjxM~}-bfBA;6ZdyJ8JZAGk^RK7*qT_Gh=~6dYS2g_e7$)\nJG(J%Y%S>8&g=lc3|TT7!CHIgkW_}9y(>MEcn|2omXZU8^p{F45so7xQVx`fXBb&(<b39tIMyatq59R\n4G(zlEPu{Bm5bsy%L1=XH`^>2g^$$r7dq<WJf~lh>Wa?+N|<KD*S-?mox?ro*}JQvDXcrn>B!?XVX!G\n7yFOIZ9?_RpyJV$bZvmnXR=y$sAa>0W2l@?LrgAY`<gPLK!|hYMQDU>sC~YEa-*PTxY*jO}frY`1eXT\nExaG=yVhN{%(^V(p>KeppThc^e7@-{5fIC;2Rgm}0XHu{#Ia~Er^}$jWOOvx4Mhv6ZD2#Euu;sgPmf<\n6JvmKZzj~H_e{}lz>EqMK>GQ|mA5DQBvF+=oxCLIjxX^3M4=2F%-yfxaJ^K5}6iAG(#`+R{l9gSP>7F\nfr$reD}v|HEdiWsZWbpg+ILs{qT!VcdxI$QtHWOc2ZsnTV;X*3`QzF%bRg@CNHrpvn>L}8$t5}9eRzZ\naXP!Rc+*S$oMe$lLTf?=JE(Wz1HM?DLlRwQI6Pr<XKx+EwXNud+=6ECSd|>tfSF8@<?cZgay9OF<f~(\n>#1PN>rXL@qn2rtgh9}79hq~p)8v1@j8mEZHcF1BN!$#dP6gB7AY*HYL+RA=9!9K(XW^ABeJcQy6xmW\n@Sc4Pa<e?w%bA*kG~M%BuT+~|>A2O!YNGbPR?n+ayD{-o!=(21_E16SMjaYWkpP=Nqi1nS`!`J|dwXt\n5&{70n>`xTMbu-zMU96W+PX6|)x`xIi<<4A7YB*(ycLtcH-*4W)OmNbTM$U=tLZ@mDd;YQoVKM_P+X2\n7_>Z`BR!~3)<22Sk|3NH{e>MPxCno`BAm6pIP=YYSdDs*|?T}()4;}~kwBG=)VBs4FwhhIF3C#aJV(u\nL^(!&;7}$$9gdP*WZO+C>cHFjAim^<#XIaKm^qNtT)(MJV&i2hk*HP^#2%bQm$rMpj{F53gfc!9?%{s\nz1%E^b)l6c^e~}6WRzlsNNVipbZDOxzyWhAc=yGn>FmRR&|xCn+mpau~qP=RG9)QqE6Pl_e!#7&T~)z\n3WrJzNPo8PB77CisKr!8rM?Ec2p>eiBoW~OaE`w>-D>~K=th>Z%HO7}wH*0r9mv|=>`6eWJD=3s?xHF\nciUas{fPD_S>VO|pb6M$WvjK^@qJ@At)0#~aPXCVj@y8z($mSQXo)WQj3$Tkqm0B+mH*>8vH7F3hr1r\n3Tv@@uZytTYB;eALGLp%z@M9n;!KsUvUbenONH>iJ04cx=;5|FD)d=gJ=D_B5Tb*^!O=26$;DDgZp=!\nhoaCKsZ7ix!oA0dfvEHV(IK6DRc&VN!ewQotz;Lp0#p(OKj8$nOU5r-&AO*Xr5;jk0!;=aB=@@P6@DE\nUO(L?s^B}r0aD90z9_!nT)^3;eu_2Y$2@2TD_^N4%I*nS`4H?Yz&5(v0Z!IC~!<OL>Y)g0J4AF?!ROp\n$nvnWi|QKW=|mlZeCS}@NCqY=3(c##0^!!iXjse!Hi;+d+@3~xH&x+p+2r6Mv=t~oV*?(lcQ<UoZ1Uk\nll!Y{hlqP}O9H)_>jh=ch+SubQ;70FNa^6&%npW2vI||vc_x8+(ft>ROrsY4o%8HH0x5dt3y_NNb^xk\n~La6;SOe5XD%A)&ZAX*RDmoq3nSR!yriefjwGFR?tESw8>?_J)XRyoR$tdp*^F`ZaDXSZ`Ktm7!VIXc\n7V-_7F1pn(Rk{tQJQt@kC$i9xLmPt)RPBK=gG5;C6s!<ER38-(2UdCi5Ybmm-hM;=FB5n8OZxB3Qp8G\nMSO)TT&yWe&Nej!Pd~mg9cHXv+yR`g6f`c(bSuHoDL2Y;R~tfdCZ9zdrN2tc8_d!<ZiT`*o`WO^92JA\nZA=&gz!_-{zmPv-)3YyAQjwpgJ-Wp^I)v*ubHlw!vgI=N;7ts^e$Z-Jm3PtihW!Yt2WiMF5u-N;<<wm\nu*#UJzGA0i)9yZ4jaFd_eiI};9o3sWeQ^)=T{1WFAYlFZ$klmiN#~=sd4_@f<DsQTi<sFVJLawcgyfa\nX3?>DljV`OFJl#Ochu4P#tYN07Ggk8U^JMR(!gP+rj9F%y4z8<j>u0~ZW1$N05%<;-Pi3lBbr2?lQzd\n|dEBQn@-1X~IEG37G;2#odlC0xlw)TO9390wM&i<RGvu;k3}Yd{G1erk6WkS63bl;7(%G$7u;AP0Ifq\n5TbT10)f+8(#w0b=@WczBN)x#1K7Rx92HY3CO2!_QsY6|D@g$%~)n}o-F{*7_8mOS`5<=YSF}?cd-X6\nzzUeuaoC*{^@C84khzs&<P9LMB5tYPg&oiCzqtV))wylpv+G;nL}qR8Zg49{2}|=h=z$;HV#zO{q<S+\nwo9#aURr0BdNEx6J)@uOo185WHC0hIsIG;!nox)yu=jMA82x)cqog>uEU9h3@#RaV0*CL5SgbWLwa7S\naNt2H9P4H-Rw9h)z~6$P<~I~7m@qL1`k1)Knc+EyFzQ1lAgIKUA!YBx1JZ&4b+1VrOa!MW3Ff4{8u@y\nR|TWZ#64WNs6~%E$#4A$<lIU@BOLp;|=4+rUI5+dt%i4+aIsvoG%vnrx=WOK{r|&(=V&V={Y*T>U+eJ\n872}OH^9W!J$0|mL&`7_voJ!@;HS&L}fUlTRQzrg*+)BB47X_=JOY)M>B<tC&3?P0E~HOz<p#j#6TWe\nCUOZa^ylAyo_Z`nkeDCW*_Id*oHzZphAjfT3kC=<u>$lLxoC=jQFl^mFn>!CV{V~#VG6<)RBNzCa&nP\n;sVCAg`l*y1?YK@%$`r*h1yGkMsIR8FZW&GTV`c-?XT5mKo9Q0el_dSb;7H&hfD!lHjNv);2pkn@X8d\n3@Ws*G;1z(d4)*0XxT9WMngaI|&kwn0a*foiIg;4M%04_xw;Z|N}my7|@!Dwo;2?|>mZ8kCrkOe!ip;\n{UB$PAXFE&JJihig*e7^0UB%fc88Nxww}EYsFixujr5rZ}tyD`Jn`UzGwAQLC3nFV$y%ctpMN`{xh;A\nQmIAThUGug_?^djJP2%7&qeu(RN>LO0qwv)CwnqA#h|k_!lFG7+nMBm4Bh#jTRP&C#EO^*Xz35%8Pzj\nf(cb@X#lj?!K5i*QDw2kQP7x21l5{DT2s=K#QbCzK_>y!0ybcsxK@}s;6)djBR_0yEh>yGBN^)gw#~J\nno}JSj^%wACuQ1jNV<7a_1ck0)YhVwUU&f~WIzPYYfJC@;5Lwj%cC_lQbCU<T<J);?=OX$jM^$6K1yD\n*jZgPrGqV0%T0TqK!44A^m40aPxOL3X<c8x?k$-&Jch`~xj%6PPZsR*D&r5or<Om2D+FL6uyepTftfH\n4M2nF>Y%+N6LIgDT`3)MV`7sd=`zL<6l{0>^5-zc0-$x~^_#2M6aM$2Ri>XmC((>+GP;>w~;)H@ZFe;\n>$;0`jSJ;87rq^FM2GIca9a(&fs9@XcOdBl=duDM23q9k`7&!u3G9A2Qg|to?GN|u~j8t2Y-VIiLo+C\n+DYrFKP5XVj0GclZ~RE`U>rAznPBrpseZ`IC9DQa$BHEX1@Jp;_eNuw^@{z@7PS=lo^xGPOx0z+0>eU\nEjw-5i%wl0I<gzuI&8&p9;IaXD9PtAs>c@CSn#tt-mc9>4A!gGJ=4#h&mo2(Rno2v0g<2~f)G?^RgD`\nrG`NUqN-bXn`pfHGx96&nT+IXUJilu!oR<$*)-$+iz^bpU+=MDE=8ry^gx;}%q=bVSd_jVM1;}hRka(\nx9j3#8`^Ow?@c&+sv*p;}RHCu<fL$PuCyI3Q7(#w>yOT|lT_7{q|~G1Q+_=--e!D?`lo{SkOLQD3XiL\nf?UNHHlatKvkYOnHaFCS)F!(Vfd#3^=1V8O#OQcbVs1hxrO1qjfSz5A*VnOU|83w)YrXEcKu0R)o~B#\nv_DE1&h7z2og&;3tU65Iz?hOG8j(>wkZ$w1frlQMP2J#XAH3<2-~sheQD|Pexj>(X{XP!|eL^-d2IX+\nRy+oCZVXer+x7(vHIz}Yt$`c*$L*;7nzM0-KJrOivM{q=4=qdKz`KyiCsqjl^!X~(A$6;hMnvljDUw{\nQ++O)0pqK)O@tQRA9q9cg8(%<jM3P!U5gap-_a6OBS&?}1jfsk03LK3rjG7(|FT^XB1hL-@1qB-?VyQ\ngIRtT!FdltAj{ZmUcUgAe7<d;<%i-o~N~Otcv&Z&-sxjle&FL37YyWC(&qLAGBD6Rx@V1{Pxb$*5r2U\nUNd9mEIizg)SM{BWQ_J=&?m}v2Lng!1HXuoW`+Ms4~%19S$}@cib9TOAf~3+oawSMjMUOi0nKf#=GL=\ngW5-!50gJoY{BLD?kIRh<9(KV=H4mzHC4J>B<h<D*_MET03JFhbMQ#ma}ii%%2ImYR*S$&shkVE*ENu\nv7FCJ;AZ_#3i;SQ{D$p`@&sr7t41&?Wk~xy)@6U<yjbNW%gXevoAkHnq8g%e6N6Ib|TAMi$P?sPx#n`\noz=5!@_RA}00WR$t}12$mWI&%9nFvjZ>cD{*{hQgdGAMeLA*ExD9poy-`P+*43%*Xpp#R1w%s+B!;J8\nzQ%GvK04nIoXAh#2+2cX^_dsSg9wwV6-`ogzWDOkk1(Z2gU1WEdv$HU(0c*cTaOgT^BhRi#|uVp#hsZ\n@NtelJLs&XH2pfVcN;cTod(}5;9eDnTaQ0-3|<9H~CUae0mhe#?_*g;SB8F?FNieVb~(vz!kb91OcQJ\nKmb0x0H?${FD>U$@cDvL_h_Ru7?6_)8@L?;%OQf@9^B4^{GzHZi9x{x`T6Ig=O?dU9lbn$nZ9^=di>(\n~$<IG4i7Tz0p?#G#IZ>RQR)T}^o~A0~k=Z#WSPCNF(+a^V2SXlaMJH{gi2_mb0-a}=|BuPv36nZ&x5o\n0_$A@MoT8&H1?4UbG8xF;zkc9ei`q2X=;Qm|o#}A2K!g@uyLy`h|aZ$45MZq+fl_KhP47v4y;eH$7=j\nqY6k6%AK^_GCLUy^GuRoLD+>g(1smT`4viDtq6QoS+9(9JZ2j-tUmb%$1E1aH7nz<h#@F}lWq?HmmjA\nDJ|U3u^WP@<SzRtR5T~qx4|RxbeIII(vjcsB}0!n>e2U7>DZUgQu{<IlRNXlI#M&+p3~G!=ZZTW_1&J\n^Lj759c7d8WCW@K3Y-D<O{Xc~OqpR%P$8mxVdd;ofTa<MXDk><-WaPU$AYh9opp<gxWS3VKP^9ve@fu\nr$)6{G{x`tg<;0~gY<~vYv*LAO;GSJ_AD_*3aF*Ys&tfCp|CPMv4<}4FGJ_AJaxmyB0KNYn;*X4ZGZr\n1cl^ue$jPgY=3^PbD>GyJr4<OzLjuEzDrm?U_xTiPtt!yNM>pM@=+W7>^S<GKfjafCl%Suo5+Yad@CG\nK(bj&Oft5`a_7rIP40$sZE}9D)RQi0e%Mk=NgVUe`-3IOWArYz>y2cWLT)18YO4!}3!<d=plkPN`ZJq\nvtbIiq1j9VSy>aPI{m*6B|AWo7=&lq5U2<NzDYHiTN6~kO%_2=bAUSeqehPovtKSis%P<>u{vR@7G__\n#KFI<-1d(80fXsaA5vW<vPZS)>P^R~2n<4APiZ6Rw_x*<<4N@@pktd&xv)it3~a7f80Z0Tlm=5+;AUz\nYN`1{IM9`Y&N(oF-P%#l!ZMK~Uh(h>Ng%Nd(jI$}60Rqlh*|VOd&{9!lOERq63owlR*;I4%4^#}8O4w\nhnx46u<EiepKZO*}s@6fHqV*>zV(-cKM|I8O9E?&>z4N#c+8urIsw2Bla)z)=q+;5e60NU+(4)!933p\n%!`DEZW1QKDX#MP6PSYz6#t2h)NWx-j^xRslNE8U><IBLe`uqXi|ND<7@UAul)DI08iP0`pV#Ht87;6\nj3Cqw{f@&dX=0NmdWGX`^}s}0G35g#eGIBY&h3za)->ub^aTLH)j?Jh-vn~DL+cpmy@ZF;7hXh(GbKV\nNtkU%>ywg1oR<O!_n~j6TlP6kGq++_*cmRtEAhl<;kp4$vMxHokW$v-Yjr<tWx@A0FO4SsX@J$RAAW2\n#Hy{tRVmugfsvg{b__?}Ae<q_a_y`pRXs{cwFvj4P6fpCu#eD`CKYd^)+%q0N`iR4jRYXVdaiARvg7p\nH6`3T!Yy9B%u#X~VXBKmEI{>$B3!0WR^A?y_Qw~1qaD%fnY3#M0+z6+Dz=PkxX%)zpg%?dijgTqXdop\n|=@PhDoKH{VT-`J!Z~!tt|;j?1g8$d@M6=-DMRu;(278}Q{G+t6jdV4|g|<2G*eubaF<=kv+RCMex;F\nRnCCs^<Kl55mL%si@+BhTdlb>EI4X!hO(N`^Jl3nG)0<5afKcfn1Faeq3TQ%Udm(Dq6NzKph7Y7(*xH\n=5TPlE$r!B0BSBpO$deESA3c{e1+7a3GUzv%*s;liQ}M`dF`Ffi@on2(_rnyz;YWbb}B)EcIGOJ!&4x\nbilVwa!s$pT96uj{W51lAjVIw%nsCt6PR^3j*x+O;$Ean>>ep<hp8WCtgQ<G??A850KKQ~GSa8IlQkb\nx%Q85-T`9S>1Mf@N-t#Rr<cSfw(<ak(aCWq$uS-q9RwtSij&n`6^0|ZN&B)woN$VQsE<9-1J<XoRY{!\n~o)UpF96%;7B~!X&xrcq)n_5ho_BDYY?@++;L7$HYXnGDZnmPcA;=xA*Ww)~Fzh_9Mp@=bDb<1;H-qZ\n19H16ZqJtoJgb!9&3df*Uzh8^P#}fQw~bkjK~u%uGqBfKk*SCS&c{|j2KRFl9uDl(Pj^@M?$c;$tlH9\nI2a}S^1_SMOJJCexdaFrrL_kSR=l{BB#2i&A0mt-NJ*t5t~yWZB6&30Wi42w5?s|wI&A9p;XP|!c_1#\nplB8-PJ~XM9LNu~|Fy4-Zy!qTy$Vw61{l9s6r5<=X0=!SgBNoChE6pO0ob8@F>oVV~iYqy6+TqYY4jE\nfUn<}roJ%8VE8_(*I{3V?dLM}_BEsOFXkvnV(+83LO2hU!uDeN-5MYIPkbY(-jUIJ7M8;oz)=-Bf)bQ\n^)E0x(VXU0xECSP;GiK>*}8I}qMw0p@Ioy7LKV@$r~D1#%}An2QV>aCoF{>pfp?n*PQUz&4jB8tua>H\nQd>tUDX<7n{{G1jTLQpX-GcSN!DJkwuA(6vtUcJA9moUq`1JerO-+!D0hV(fIq*_>apsMc1L*!zf2-8\nUk@nWomn^28%eO+6`sk$5EBB-H~j6A0^7$NOvHmB(#eZ3z+S-;cCReT;jDKw4L_og*}*KAd{U6AgDgZ\no!<d#80ZqZR;Di;e&<-Y4=&}Z_rtoZLh<Z5@Fmgycgctzpc{%2sQol5qNPB8`-@8wm8wyNh?7z})uu-\nH&&xCY`ATaXMnoJu{!;`KEChQdYdTiVc%=_U~Wf`WP+ZiFj+9kqf@G|L*?Dh}JN)~MF_^ruS^gaJDF2\n{h~S#ctkF-FgV!YlFdJp0cWoN0g9T{VCNoxy~}#6o6mUBJO<lhMi`o`G`$gX%%{raiD>zgrpF3upF-$\n~z?poQ6e}UZ}#L+H>U1LC`UjIU1sF`$!swR_ezSQbuFh2SWW)Z)fQGWF1zAvgwNl!MOqlzM%2tT`F<2\nH{^-_GXBqa0yg(Bc9R+;r7(M;Q@fc9aBrya-~yLQJ`4xoJ4w{vu*!&b^>Db`gcE*N(d!c2N{ta3WsV%\nabDRGL9CB}gAZ!w_z0h=Wr$$BrM=lB}_1|+%R@D-8&?T_Q-LJ$D2RwXz@D)P;`ff4=HVj?u5^1tlkI#\n2f!Q(S)fHBvdIqJL_L-t?wb_c52?{wXff%~VRVt=T~aA_YxuFJBzE|o)`bwYY%b2GV7<1|`DF;(i3It\nr;g8Ial0a~Cj2XRMUk%>A>UOnEZ-Gi8E5w1QpGaAonk0a9-!|NAVmQ+RvS3b*P93h`n8f2}O<i@MMh^\nIrZlCK<~ku*atA0ab-N8;w{c@(R9NQ=Lopbs+PtlSK#Gi=3_&p^l_uOmFXEt=O|8xfWc!17CH~<EiQ|\nvSk;K@AHXAurT$8l?9BdMXH<~wP`%BF|e-5^_khrxX!*6;~LYaqeD!G3kr>CQ!V;&G_2`--Qj?U4+o*\nJf^M*A@Hi=!1XEoZ{v0K?_xb@J$TQa&@SG{b-lNWN0U>>yT|Tzh5$dvq;gPMs128i?ZpL_I<Cl}+wAp\n+0NY;ln9a*MFecT0jPh3pDrX#>7E@9t^caEvg<*)|9zrsu6!Na?~90q$Af_e75mn9oqeHK&PW4h<0s-\n*SlA_)_Q?%n@kZ~X|E)wN2+r;i62nvhZNsH2xt_zw@H6L%fGl-N5~+-Bb04=$46hu7}-NQ2Ip7j$Kk-\nhLoKzavSr>z;(+VE}k)4#xPq118_U(}sdl0vP|C&GtWc#sysxvICl1{|CT)aR0-A0<`R7r`SJ&&~NV%\n;rP6ydpa!U_Z_+VmjhVkWuST0Gnj4hp92H>MdZOY+9785+;m4b?}$9|Sbt=kp<)`cc^|Co^W6|}rY^s\nEOZQQkGTNHsjZ&JC^0D_eh=EzdFPDI_zYjg54^!-t%P6wnwzMy^6<~mSGd4_6n|o7@H`d#_^OCl*ijI\nxqwG4mqzM~wvi<O!lkWJYunB}c|%hf00h7R_s*H7x*`nU<X+g%Lk-!IW~2SNZ80vl^QmbD#37ss;9)1\nHWu-x6~3gl)ZDq;0in7NXyXk7E+B_L@*ms8KG5{(a+<8?SHC`^ya<FV|tj(Wq`y@Y2}h!dL=cWHlGkc\n;F0Mu>%3zO<~Lyx3S4iP+@~K<M0@oJ`*3x2_NJgnGEgb7VBno*5;hyXms6F%gurn$5PKXK1cGoR6bJ4\n<?b~ezNLzg7IPdy6_Zy05}xxh2Yie#2b*bl)@Ra_tgB5?q&*miJ5HE}%|eEgP-XA>wh`!)p=)aDd&U5\ncKnQh3Usdb`xXm@Ve<SchR^>vn-eKAB7%qO?#ee?gO9(;k#Up1Ek8S`jVy#+}cO9MF4&vhGte3fFIN_\n3)48&!M`4QPU{ylhi)Dua)p~x~RN*TA6<1Bt&&L!mXm6y@8b0D|Z-GZFp^#PQ2ZM!94BXsqHJ4zFtB0\nZwJdbo$<48CTL9)?t+G0j!TuwGE4<|2sT8XDW)G-Ziyn?^aQ^JwT}+bbzC|2Zy##!Hvl&4NnM4!ygg6\nZz_2SP26x^daS{)vudecl3R{lnD?oV8_SA4^C3H-xwc`1IAD9=0queGvIdj!xkeaR(H0?Pw(KfjPah6\n(_^3AZwA_@H%~XLgCPfbNwCJuZ&+taLNA_p9vEuoUV#W}9m#Uq`;26(9kHc=)rNj*8g+~8XmiBtMC%W\n^eBi;C_wT#eB#WY&&uLbCePS@GwNLE9BrIvA^F5^${Mbw2<lL1x$d(nhH1&=u@s0^lWOB%GUM;tD*F!\nrt_j%sUH;YT%Q9%+-U+%N!B^-SA#euf~JDWrGE{bl<3QVD_DSfgNbXVXBR4J2e?NaPLY#{yxns=q<KQ\n-fr{*1Bg4~zSHI3F!ZM{WJx>*N1PX}Wl&w;ib!Zu9O!>;a%K)b84L=-97ow?0j8U^eIx4dipsjXE_JH\nV((_C8JG={Z7dJkxhrO;dU%_3Ood_q8U-<X5y7NjMb1h|B0?XdjHLlx6Ivu!dx;y^Geiiy)wXETI67J\n6o)zNe)Z_lBlREZ_u%erQ$hTnp4OGG>#T$|G}a`sxN)jS^2hh?@h!zOEJW*>)ApABahsY0-Tm9jMXwp\nSW97YKL)m8_?-v)a)ObbV(&-o$e7}OVglQb)<H3zE6)?9LpxnT_CyJ_2=m=>Wm_3X^`)g<NGj(M*(ed\n+>)5p)A9leUYi*tJf2q6-V+@n=sSB1~z+T1xF%lfH|`nyXG8uh^U)`<(mYn2{7xGzqydj0B|qAT3+B2\n=?m{9E$J7}>r55WMWVVSf_xQx8$SF}NDtJquCQo0Nwy_cQ@P@k@*6s_YfWeBrg1s2bq2KZ_BBzB>A^*\nGDI(M^C+*xmR8_p~t@R=!2Naf{l83q7wQLmK5xd+$X<tVIcr}nu#y);L8yG;3wS&O)tzXC-znw>Oxmc\nh@x4vSJWJABM%_Q=ILHF@AwpVd*7uuy@95KEwVhc-@NcIhY}9u?{tWaL;KCW6k%~_goZ@SLb`ipYv@F\n==M>f(hL-VrNG%B6DK!G~_1?Ykmig!!SQxj5v<kNdSc7jd@&UNtl7UWza`b<1NseD|aab0fgSS55dRu\nS#nlB$-L_4dAsNBb|a73_LMMil<e^NI09;H8UC&$b58=VGV7yc3RjW;r@XzDM>+oarB`ruuBWB2pnKU\nCCxi;m<<xL;FRVJa`<K{2fH-<^7NN-<E4K`x$DodhZ=wLVDKBHI0nC~b0l6@5!rg#Aj@3Bhb`67^0eN\nOnAO?8O1zlM$ASQ>4;6Ec7NIqs80KS`h1WSfo9Mt^e2M+qAu;q9-T=qjO~N;?d{qh$DG^>)AZ-<(8fd\nPDe29e-P`3WXudB7AApr_}i|RIPXJm34>-#u*24)m;bR8I<((Lh8iK&;n>4rS4X}>_jTCJQtr@x3mZ-\nL{u@wB0|XQR000O8X0rTPG8i80X9EBLT?zmI9RL6TaA|NaUukZ1WpZv|Y%g+UaW7wAX>MtBUtcb8d97\n7#i_|a>{@z~^R)iLM{Q(OV1x18I!MktA60+@dH<~8BB;9ir|GSg4X;a%11q;`0W}caOGH=J*PH9UjB?\nMHKD`^rwh=e+wxI86|RxPQSWtCvYfFYxP5)BA@?GPQ5??HlQR_UDFa$|GysdLVm$jKc%_8=?B$$j4mN\nCxwccLn9rf<{o$TP{p7G6+7otU+3e($S{S@JJgjARs!X4N#Q!Ttkas69Kt2mI)ECABN-S8605^*no=w\ncVLr*QnaF!l;j~H`0SQ|T|P+H?t^AcGH6DI^u#Y99l~i2N#gPV8Y7MgDNbN-y)30vvKA=Kk|cRORV2l\nmd<R+H>mIVii^6@GE5m0ny|8;9)!FZfu^K(p&=7iIf}^J;#nfYC$=(<CVSUd-o@C_a)!YIPzRnLABHz\ngRAtxV|gyDS{I5kSUSXl98NUwB{YecLKDhtOyCk-ag6DL;P9N}h6CDgHlJ^6vBpS#J;m4m1wFZeZPVO\n@%U%Yeh4ggP=omG68+hsJlA7$I6IWEEy3Qk<2m%7&uT(C}}Yswbu;HI?R_8<NUbdQXl@i9z3E+u@(4h\nFgdg-L+C}hjSE!zJBrLqOKWBwA&47903F_ps)7q$5j%02I5mk1bQhF4^6EiM<CTu7uMjclQX+GlUhAV\np;+zYvL?OkSoIYT&X4<KCotI}u2s`Om+|&0KIs}X)NgrZ(`R})K4jTIjyI9ZxzUEvE4XY_Itk+eckIX\nT$Tx7^lb2ztCxe{qiZ6=GbdFPeg{w)kY(@q)Q~TnYISjHVZqLyUOtYEgI4^YS;&44*i#Z(Dy*07nc=O\n1jFlW_^8WXn4#a2#sZ!G%6Uc@x?GMM<=PmHpahd*2;ekO-d(~jA*+sfsF?1V^JkN2#UY`AX6y%)OzVP\nG9(JAhk6$pUNjb!{B;2rM?QvD^dsCdMs-(!I9TZXJ~FwXGhOLOJ|wL$;Pfxh32-U+j)@ae9VQ*eT`ow\nFdrHqi+>-mb~*nZg;KlFI=;Rv9EF2OJ#}as|ujTe#0?5;sCmIT)67ZT;G)^^s`lbw|tz>joQ*N4%C0$\ntVLjyu17#KZs0Fk^bbV;6G^O2%Wax1TYkb7tm{D5>H0rGIt}<}tHJhK&ZfyPP)h>@6aWAK2mofX{8$^\nb{A2GE008($001EX003}la4%nJZggdGZeeUMa%FKZV{dMAbaHiLbZ>HVE^v9>JnwVkww2%YSK#Q&ncS\nthN!reJ)KR<XZg%RKq}j=Cdmn6-p+rdHnj%<&w4-?Zzu$Wg00EGctYj{CbJgtHBKh#}@P5As&_NLVIa\n}Wq)s_|ey5xIawOLz;ifu&0t}EGQW%)h-XIC`z>{7D(tSLk%*;>HUrdzk7k+a#y9cM+(Gq&Rme3Pu*W\ni9;Rk|U};&soOy*(bod-gVU-6Ps!DviOP5q=?yG+#^|lV$ZTFXR@nn(X=pc&RNd$Vx6^swG|3Pbgcve\n5HC%=E;A`-J6_g6YQq6m(wbJhZF$4GD(4MMU**}VD2w($4*?TvxNH>`PID!+I9Nso3)}OoYH`jLXPt!\nUc`5k=t@)v7cSXhOqQ>WHN><<!t2N9mHnZ`1lUWc1vl*~nt*kzn@1@voVfp4#Nb{}XvrQxREYI4E)(E\n)uqyCnHXb-iPD?WT9%95{9v@v^ItlOA<Q%LyvU5)p$GG-q*Tz>383u5-S3U1C69#~P5-t#IKO;UrhWJ\np-D&zd{nph5pFU7i}y*k$*luB-d3EOLh<F>@|Xp_4UV7n{N%;e)y3(p^*_ZCGBye_V4~sxvu>gVg=&r\nV-85usvu%DU$-!<wrB{{o(yJa0>JUznvIW7NF>Q&^Pe?1SsebFAeN};l&g%@DTr}o1)}BHCY3SIL)=u\nz(TEgz=CH6cWnU_;+&vTR^1AjX3ct6+;gJm_{e=B*UlhKL$)e;nirE?SL1qNo55S&rp-CDc1_unS!eA\noZAA+ArUu-v-30+q%;45+mZm^snz9AEnKAeTn(UPL4|q~=K`kyKh>rk(`1^-7O359voXyb2!4)lxu_v\n&;Z|Gi_rd77*X&TK$&6^B;EWq^|o}~Tl<c=R?7|mw0oNrhPF1e^v{$tx@GQ_3N8QhB4)gP5<-@uhMdc\n0aL=S1QjCTKX=b-Uh$P4JH}c^QSbH#h&dT`phVE~9@BV&Y{)&}s%4@>fxDx>Ib}USYxyalI0054TUYj\np*v|i>QYgJ^NDQ2A_HY6W*B7<A%3gQw<<ujaPF7!qh!)TEi0cYwmM^*aPm5F6L%6m1s38ON^dT@-~cI\n5(b(X26dUO`A(D&Wdin6<4H>K0K$!;#3M14{%Auh+?q4bH&*;1H7hXm67dd{A{OHc{{EimlMsAiEORD\nds|@28M0yN#Td?8^F2MC;9HV;}aLWQ?oFblGQ&1$d3f@JRl@Rgr1KWX&w5Zyh&|$OT#E+bX5M=X4)HQ\nr3786;T8;BU833-%w>maps#0HxBE#6WZtW<Z?m8DYOUS1a<D$aIoTg&;YS2eG}s~mu?DiO^VudhD;-R\nHl5b+Hzh{j~gQ+hltPZC2nxcys%3+p^?pY3<<!*u$T~<VB>-8$Un@N-VN>Hf6Sz3n1*P4{xro)qSNk7\np%}88B?W<Q55vpDTPi(wh(vZPIM(CP~}5*kct(GSrGlfZ`tM2BSeY1+goN7vrV8dDFES%?h!7Y*d_xf\np2sjPjMp<(9Bc<f3i7Iy9O{M-j0f!(vHJF13)!9q{7p2yhFay1W(Ab{A+}S?B8(tvo#9X}_e)o3><dT\n+ii4Za<T7BNu^<kTPok(o388}Lp*6)QB316M$$v4ew@3WLCU}H(K0T@tPmj33r@(k|KUjq3OG*yGcjq\n35V@BTHc!p)~3MfYaMXQ*><*^5Xp|C#g3KY_Pijl~DSh2r-|BZ9Qv0i<{%pp|5MUTE(WB$cGEq5HNys\nuuOnSzzB%4~=KUpM^zf^WBrcS5YP=4O@swEPd*tsrOMSalp0AUX*Xr0QmmE4h&Zf+x|n?7awmf%pzWb\ns0L-1_{nBW0Y56I6-AI8D_3rqKPgPVIiGY6@vDS2KhJ)!E}C52B>IeVvN8nr`;umgaw2if@tn|v5#0z\nP$mSPR;n6^${cjJ#`Uf^_~iADukX;YcWpo3!>c2xPKgF{_Jn!2P25T#!D(8F><9zo)jWvYK#l1dr_2Q\n=!Gw2!JppM#YLsm$do$x;wqclcEGP7C4(EwSPkkYb9{;jH?c;GW7%x+CsP<?aDu&7)Xc#&wqs5S^w2g\nq=yuu80?(zo^OvwPe$YAi3ClRah6Ob<-;n7pz0k1%j?i6KIyI3h&%|IWF4?$;BkIogW8LBi?Fh~`(w*\n-g;lVS;ax#!ZduE`4UlA{{T7dMdY+Uk>u0VZNjd9#EC102__@%9|J#<2$g7|6__QqLg$US}o59q|eL3\nImB`?C)<rpqCq=3RfI5^$IPKoWi47^iz~rSk0_~K@ihM7N9xm!p?s#lisLM2554~Vb<-)eUqMD`n<f1\n2de{9;E)q)zjwfFP%V<2@IiD<>Qd=0_mt-M`mWM(bWcz(HquXdi;9ZK5PuL4`Z$O2z7J$?a5(ZzRlt%\n$C20WqK`*utNTMY15hFhQ+wttaC=WLG{o#lDZVQA+SlybVGsej4qWR&6n60!gmDnRwApsQUQwK>2t%o\n83t%({$pdFBkqP)%ga}uPS=y%L@Ry{qOt+NWny5cG)$a|h=6wO_=_tIsO8`OwZ&rpa*6@(2yz6iQ@bM\n<?$QI5(a7eTSDM8ks!v2NV3^G0>CG7tu@YvOa!s=_nI6!n29gdkMq@aXmmeM?bwq^UY6YG1<9E%<tic\nYQ?$C8bq^2MmdO6gb1kd$NhVL7)rt1k*(Anz$FIE?`}-ln-|hwIQtluSVp&f|Q>GoD9u&ND6`bPW6Jl\ng(8L-6zmFfCJ4nlVmyRiWEofjhm05FGNQ@Qp(I1v19lOZN&Gnsi<IZ!H*>YLO;P0`j*6B8l9VE;>^al\nw<H#eX!VBaV6R#-a%}Mnt2uxaACpep+dsD2uy&XoE5s_D4E_<oHB+Mj9h<ZWb3vL*R5zL2B9z{Ejoaf\nz|r`XU1>qz%<8+z$5{O-MkDS9<917PIw8ok@dMX+3Osf&H=h!PTPQx8nfm@-^td&!2yxwOfnXNlUsn?\n#T1pwd1Xbrm)NdxtnKsa&}n5T@e`t_1=t!-hMBFoIGL+M#2*ct8(Dgp;(_#%~s_QjZBwi9_4wV99#US\nK}gd$%MK6ly|c(fcjcV&R5+w4BjZ-D*7%zlb7guMkIlUvQv1O7Bb=G(4TAq<Vn_SJBoV{urQ|I7oa)g\nI8H2%$O?c6-O<m6U=wUoW|p;TkAsg!ppwP7H$bL!dDUD}9{^|24Z_iomPAQmb69nN))sAYB-8>Iz&Kv\n_ZU1o7h@W`1_}Fw{Np#EA(D&#Q=Nf?%fcg^BfnD}Fpz|Da!KLoTQ1jn;ruzR&uYxvps8`jF+NVd#+iA\nj`tU}F_3dn04-1u3XDx01371JT7m0*?1(|ygQBiw<>hVBdTx~<J47Qv`JwjNA$B+Y}=wHmdC=IjyY`n\nTo@z5%MIV9G+UwWOP~C(?PXNJCzuWydrmCKMxPV>WjIQ4iuC+1$GAAcJ;y1R;W!P_Yn<mjBTPx-#RD8\nYoW;F_ue$cVt1^Q#a$?3#!hk9Y|yof*0x+SY%rB`gdRar-NrDMCn5pQk1x_IA{0_9=*$euj<*h6sxRE\nbyveP4B6g{XU2qJ0vdPUR2$xo^9L$MW(5j+Oa`o^NlkNh3ZUlAzG!>)rnI*tryyaXO|ixPGd35diB!B\nE(rXDOYaNSXu1g?Lr`|MA+rF=pV~kFV5V5)&inczt>awt3?PHI33-8JT8KTIM+S}7?T}<D$!_bTtiej\n=Thg2iwh5hQ0sugx&zuLz}Q5WWmedO!u!oRd&u6i!q3y(xsKNf>)hh^j+^fKL^Nxv~w3UMdXvbck#K-\nv=eMINfAU*t&!jHGIv_97sqgqk}bEDW&(ri9l!7#N)80qT^!Tl4iPluCeHlu#mo57)j6YC@Hn#efekK\n6UvPaMCuq-tthX0&eE(2~3s=E{|hm$*O}nH=vv!QVbje#ZcSM3RErgg&|*ZOen!+;`5E@AXy7_o5JLb\n0D=jrxy;HI?nHm+@#La)20!eI^$vGjpsJ;`g$^=wO@q;=@0|{|SDaQP&IW16pb?>r5)EPqugDp-?1zu\nfz=!}|>6QfJB)K1;ugRMkCBvYM%{Fo}q-OmVXv}<#^BU*=p4mIhcw<bJ*S;oZHlZ|4VyJ$d{cOu$$`c\nFS;*qhYR_a_2_@Z<OfHvfgZH8_jG<LnkuBwYrb|717btDhFQVS77@TRNO)`uo}h{z_ddOjCmXExs|_L\n|oHP?RMoE5|gqRr9_7`aS#YZ$GE5n78j&<wg{CZ3ESsH2%m_6V(8x{bjH7IX*8i1afr2?Q7euYWzS+^\nxfO<=ESNoO4j0;AF7@A#dg;+UHDae&85tmgM&wXDoAZq6+ot!3*9OZS)SGh-AV*f_P|CVY+Ze3L+`Co\nqdwO&_T^BXu)k_YaS0B&tCRY0Ic(`w*!SxRN|2yS<tRo)g)USFr#gn*)|_^C{jCU3444)TTwzXNvIOM\n-AR4z}@EWSWFM7&KUWG1j#QwNoU-nI(k%GCfH=i%Py_9Q5^RYn!VOO%t*O!D%J!w$<8-cx)*2WN=#KD\n8JX)hjQ@jyq>PT33zk7s#ul$*Lre#jc^0$QyI+zR5ehS@NvEnC$^tFG;1;h=lqY*gEQlR@KlD51%+4c\njy}cvF?YQ`J75I#n@U#wo+bnaC43g*}y#DMpM13;v+hc~JcOFuj*??vJ94;*Ty{Q>bKgLgDG0MbN9Bo\nzEXNx@VeRuJ1zTj{tqgWlqsK=V-<Y_5oF;9gYxB_DRO*^=5>QwU%ZSu)D&30NKf+w{q|(dor;;z^|nB\n>5*G(_9%4qI6{9~7u=H7R@Z~WLGcvw@hK=P7quTYl_{tU!IK~YPxcCi^x2a70<8a1_Pa`GiZP}IF{W^\nM22G=;-iqT*{-S#54acxx;ypMH>C!`6NNOvMEkOCHOQu6GByQ-q!zQ>*Zj)DmD&X-bTy&gn*XW;>FyS\nL^Mv)s@)!9Wl1307=Buh_y3e<pwI_Id+8Yf1*dfZbmk&^l!1o%#a40|-5=r_S5VNVe9X|d2(dh^rS?i\n`yKo)v2KshfZ5bH$8rx6JI<B}93p1dKXC?RIsZWPphhs1?T&6tk+!u0ne9OE+~oxsLH>q1G<{Y({?yc\nDe;L@^mxD9^uyH;W*c&5I9BwOvtsH4_knnXuNB=n@t!K6s8h2#4rqkAUVAK#6l{&9vvJ{QD7-aZ9q~~\nhTcLaJBTNne3J)sJe<F@uQ#r$d{RAN{A78a>IVOH>qmLQ5*!`za&csbWNH;kS8(@f5sawnlPaiZ$A>S\n(cp0==rtbHrQoV5#dq&Pe7sE|`gCt>Z;R@UMxGReO?oYvB2}2Vep!UJlO;?eR^;f;+jT)_vboE?gBD6\n?0!EN;yYU4d>(7}O=WAy+)+LpD??a6p_vQ_<z#hlYVKBG~ra}5)aqhnoPN+A1G<h)KVWt!uT;J<pO_j\nqpYA$hhT{HwQlv1zB@vB{=dx2ltt=`>t*s8pqmyKW}`v|aqZjbaKkRD4_I#!k%xzK8bJ35nXA_4)Qyr\nOzQkHl|G|=W^W?D>}tPRX;|0wcRh7-!P_w0P1)?tGlKa^uCSWOBNeCQi&Gp_dJfYz5Ck9E1Uj@``%}C\np0%m!XU1@Civ0hn^ZZN~{b*x)WH?j10Y{yf<4gPM$;m%XIJ5~bcD7qO)3crQ2Pf^=%Z^kGm`aSixN&w\ny^mBJP?Mz+>R*9h4W7{T$NQm$0hzFkcZ|dL&U(BMK0x*aM&!edkR`%xgt>aKj6MsXOC5frw@Iyx{dMO\n{dO~!ZXSyJ&9szr1w6YEln=$49K{|J&@7j1a}M=1%6)rY#UhX|-OnR7bfBPuikdf5r<Px-7oyaXk9Z*\nXcG07jEDN8Xt;GIpk(f<YfrxqN)NgEGBR3bqrnRfq6M47b(rT*RZpCaUK2JQByK6aAwjmuEOpOj%C4%\n@h9Z8PE93{fRna<QbX?B>Mh*{G#9gj>AxF`jr!iV&g0oy9Q=Eb?A<sIYeMS4zkH`>C1lMfKO?}8KT!*\nGNH&rIF3rssM%S%<ji_rq|_!dmFS;H(*I96`V5Z->BiKn0zDNP2;Z>`1Akx;vzui!8tm(&`!0+7p_hG\nb{Ii&mPo|gdoKGYU<4D}&Q#4JCn*8zU)Z{-;DV?;`1$S=$`dW%VwI6Tr{hXs^<XsBEG{raRLQ^i?&8e\n>$)BAPvsrQ>tx}o#J$HKh4H+k%&IHvRcu@ZtXSA%qYI#H()r}A_HIGwC3$NEghPEcp1?F4yV?yfm<MB\nu&(nT4DaIq^KRX<Z(Z_j6?{{qAd5dK=Zvh}?X(llt#b=(k^6zORv+wC$$PeG@u72x8uu{lN7J4AB%&L\n_!YM_$jhFfc=1PTU^rX45l+2S{)i3);Lp3eNS`jCF5R~)oU8$Y224n`$HY%YrI{m=&1hxOr<ZhkNH>7\neB*45(jTixZ<fEV!Qkh}i8UH>>e$+pv0)7X-d1akO4^RtTs*VuoI8JbM7^W>Y$u6++xOP-ucGKqOW|0\niXGiq9i=@q#TphOpLvvrv{5HEI`<6RZE*Yd~eYgxJR&+pOU}v%`TiPb64+;JtYl)nPNxzly_(Ey8e#h\n^HezVtwRk@Zm%jZqfo5b6hoH9|XVxFlEA}V5>{Wnlc0|XQR000O8X0rTPug?*iGZX*-7exR79RL6TaA\n|NaUukZ1WpZv|Y%g+UaW8UZabIR>Y-KKRdA&USciXs;zw58SllNYzu1qJpz3Yow?Y(TGY<-u+zS!Ms&\nvqGFf-E)^$s<TRdRhPPH#7JqAjjGE%H0=}_!wY5F*5)(9*;-w`TzDs%eTDh1X~v+XHDLUqPiK4p>|Yk\no4V~-S>N1Xnfk1o4qI{aE%aM!%EYGRpY%uHmSu6B%1-OH-Wm{0wfH$NdoE;Mw`*W9U6YI$Jm-HoU1Tr\n+xOn-W$M1fcQqhZQCtqIXWtm@>Tz<VOmYsb2iC4VMySkO1#~pl`W^W3in!T&v^R90z`E}BCMP22k{5t\nO&>@XS0nKea|W<>>nphdbY3q8r@c2!eH5o^dlExD}K?T;(b;jFQ6(Y7!}=5pdSFya)+Lv=Bb+j_-Ikq\nVx-%S|Shbz?|*MrCJM6zkb{1$5-qvR*k<&ik&;RvZdBaDDC5dq%W~z$&U0{{(DZe#~!pw#Ls^Lp+tGu\nc>e!fQol_b^8(U5CTYH`WDTZEE$cm3<#BFY|bvmBr;j+P-=WNLK#May(ua#pqb|L1u^de#+owGwO7y*\nn-E=FXs5;I;sR@@lGpe?Rnmw(&VUAQ7uov-bZB|HthWsem9*o(CY!Ene!+jlFQ_<^*?5Xgjwhp+CvV>\n_-knE!C4c?pQhYl(NPqLq7=-G8z0JGj2Byuc+oG*2#EISJZGjUz6x|LK@|GsUii$n?=JVUXWIw-nfBf\nRdH;e4q{S$UqbQ{)fIDpdKSe0)%TY|KKh$D;ZHLI&~$NHw>?J@_YD|rV*5>vJ+ZVFKRx<wf5N%jQbBt\n3ErM5^VJl$~!1Fbs8B)^~y$ot~T>{}~9HSF5~Tu@wil^A%3-c(GWpvu?$nJ$?Fp`fLiYzI*!Yd$w2=D\nCg;D@$P4weT**ue)<QP{|}enTz<xPMB#^v7l;4z^zeCh_3h;HeuDHm`_t*^$@}xgtL)_T{P^VE*^Kn~\n!mu(;)2Xp7snq4GE0i6QK&z%wbTcqa(_sz&)U|oGzrLzvWl(`6hpr%SBB*m^HXIQMWG$0Zff|*SMfEZ\n41GBg;s=VC=HOT9Ibxq6Hyxmu;CYfz=0Wulu9F%o!FFL-;HnldVPGt|uTJgJV&2uoY(D@2QUe&U$X4k\nmf2m#^)A1;YPPJ__=*RSXHO<7;(Wu`uZi6X)=cCL$?On|O{773btIIYF2<8#u+ziWQ6v4B*hlq)W}Cu\nqS?m!&a?lP7z%I6Ft^&^D=)Ns2uupu8=sQ9q-duD*bi0ZLPTG-MY9B7+_TSzYByq&K{KLuE;pp|)ok=\n=W$@f;ccT(JN;`lnW4;8kT|X6<wA|uYjh+%k|WJIYKnU+1i>yWLnQ=?7FT?TLpHAiwu{iK_9Ep!!C+(\nGvhB@px+@^4{%I~%kS!n+a93CJQH=_F1gbSmmaU_gdP4spED0b*MN}mG+%x*2TN$?eEH2R#?Z=s_>Hu\np&Na3}7@9Z)Lx1><9ITP~_G`dwT$vxwWn6DjXa?*;@Krryxa6C{yuA^Fc7P5P$wmH4%-+WjJq5r@zlN\nAswL-e81JWwGK9Z<bjMow)Q{b}R7n1X~=h0@4guKp65ozQD!U0ViUcwY`;%3?UhfOAEbHM(avsGO^fp\n`ME7jzA`ec2V@sIfy1UJd-uiNIe%!JqKO(<=ub!5@Qwq||7H@)`P}Qc@#wsXW^m8(XJ#JXNjH(Q=Hz*\nz=jkzF`P0j#*ihyXrL`O0&iQf*F)(6B}Iw#&#;9(7#ubG7t+=GnRX+v<w)*5oEi9m#ffjgC?S*xa1<0\n5<G(m=UazP@SNu0!oo@dz81Qw!2qe-(~y&T8j6~MQhyjpV0w;K3mgN35E;986!$tCdJ{Dv)YEIV+sLI\ndJ6<zzhk$Y_ga&Fk>P)l(l5aRV+j$jRvRs5Q{>Hy#GaDVWz_OV+C5c3FLM=_BXeikxigr^M<V5lXS8^\n&Kca!6qF6(8?o@j<m9gHScYgAXj1V#tkRwXAmiKkc208>rPxpv7Ev*z;8R5N<6{u)3N*AhD8LX=X~-M\n~`gBSq7;)GFNarmaCTMFJ>w+Fu~$a05!C0B22EbU4kj!}+1q|E&f(Av!{Sx0FW!wo4jzQo}|AfstdOY\no|U?BJnd2gg_3!T2?(cDT9a?3vn#2QAq_(mU<);jDGXBn?IWj;6P8rAd~HEd8A!&Q$aYGfu|s?-Ghz!\nrv|72U$>c#Ny8qBR<>C2MM;lC3rCXhZRU6kUu_wQy?flt1C$96`CCrvfE<CjL2$z`D*_VKZLC6i4%GP\nbJ%j%VM|hcxQvk5dJ1hR<!{rzS7F)P$JT5*^*^YfD#&{QlV(CgK$3)5%hEJHG!)kxc8Y!&6WDqhY?%L\n!X%bTX$1yPq$D-F!}%hpGct1xI1MgV~NBZ3F&?60zq0OR$BNoLj?{d{k17Ig<D^a0LX8=;#JQsf3?*$\nRC1EF+x_i!ZRpm2X6x3CL>Y*Ts5{tdtnXcRiM};c)RD)&8@`?fbE-8iANvadMb8CkReKG~$^LSsDv|<\n^#!&xyJK>1P2k(+#yvo_?bKJMv`6Cmz^E058d^MpB4E2|F7PaaYG#F*1a3p8@ncH&sio|tcc0zIK9i;\n3j79t)g1qekn0Kjg?{Yt5PP%hzJmqNl?1s4-4$htc@=4~SE*xJT*~>Su3b?avC}2Gm@2T6yj|8MtTx7\n?^bO2><tiOv>8F!?g^H(~w4?5q27pyQ3D*sj<y9Q?uoWiuc(wAWOEe)<vPL5j1&`yd$-9s(qR>646K#\n71@01{VF*E{{;^~C6I@L!JCAp)v%#uK-C7our%rw(EO54cYDKII_fU>3^xKkL7`IL2_2BDfav5Tt!vZ\n*I2MPh1bvj^b#T|=mYT&;LCa4if`D3eg)3@3bm2kiCnpWiOP>~!p|?!nOn)vF4y`LMKp<h+510IZJo@\nKox<hoI`5AxyBFQ|X};i?UwkrFBCrfR^J%(k+b{3D8onIVBLap4l<oh!`KV;;RCKiCUyMW(r?uI1>Gx\nUkm(eLW9X<06<PE>uPjLU_~h?#@F4^^GwtzQ#mUi0Fqv{<(~=xPG=P4WESYNMlsrcU=20?DL6zZ4{9Q\n=0BBnuW+o~wGuM5yLUV{*%zFrCNfOa38N@F5sIpY{afB{$<<Ch9IU9U)cW*D*gUNijX<$$>@aOh*8dd\nPQzsG^k#IsZbg90;iKSzQ7fM-1m=1V|2+}^A2Xp;|G0nd0YFl>nev6~lr!FjEcN3ar&KW<+b`|s{)(B\n9a^RVZXp*G_wN1BWig|9rK|+<_9>K~Z4m^3T9A`Ul2AmS&H2kiN>}F>L}L)+UtxNJxRf!c>VmcfeP^`\n9eH@FSj6<c?ET%FOg3&!_~qP41JF%!pD4zx5-8+B~&u3(FPWCJZ?BH38|j*jhO|pRBcenECKird$U6?\n-yBD?Ltg&r+)RNTDvJTD#SV0?I&?FQ6cO*wc_A3RTmBe01V|omfYmXQqN}g}#+Myx2NFqUE`-01P^pq\nJ%wOFVf~zP+5Zl!-uYu$=tc)=+838fEfGre?;&!wbk8bi?%p@|tUc+o;WZQCiWFQ(GN^ci{?WiHy9Wu\nta8IIkZQB!t8X*WG$94g!9JIQb^$el(P8(>S1O}W!iL{~NW9KQlz85<MM58#_Bh1xfBqzBHPphYk+vq\n$L>TumL()l)WEb=ONx^0M31{mq7fH3B4;bbJLdA#|jmn8<q~IRbW^nkz+uBFRjNqpOF?4wz6QlEQd6!\nx-d<yv(9quv9$lqyUNPUPfYH?5Q6U?1zC<Bw1sshJlr}yM9>^Fyo{1wUISgp@h0;Hqzo*-^XvNJ+M=u\n@li=*+~?K@X&&As%e1MQ2hNbJ_p{s1*T~FUW}y8^4>AD3Zik)JaHE5k%W#JSA7_{22HeJq2AMLmyf|x\nvNOf8kADLn%-IQ3#{UJ<(wtU&|O`uyGBR&2J2(OhHlfJ5*IF9wDls`U&jEW<QOQs-<v~9}FTjtd?WQ}\nu*#*e8(AM8M~1o)*Awebx4V9N1HgwXN900l!3FWu*M8^%rgkrT?i?c8v$6`yeb@xj3z@_fzM6t71JSh\nvLuc*>>Ro&tMb--0IMskRvD%xO5~{oCL#j==#gjXCY?(O!wDZLo@%35KWtzJ$DcdNhR(3LUL@>Xwr)q\nDRRADJk;1Rnv$tMag!6u^H__jQ<X7y#P7d7@uKOZWuA$+eMENZ!rm_;}K@fzzl`XXGdJh<p{KYKQx78\ngZ>FNFq@ifIJvuugJi16kuq;NbBN{be1)5ePD^cVGiZB_TZr29Iy-wFg}Pysiw~Z~$OwIPh9p==$qgD\n%pAH}^FY;9GPSeq1mJ1f)%K?M%6e8I*uW029PFUcx6*m<A9#^+{S$M{GCd1+T%jz>vp<N^n2EKvi-hb\n#hfo=ntbPpN42|P3+anuvjY|@0^Pt%|#^!V_JZGYgS<MsF^{R5FU39a?1tj{KO!8o^ei#j~4?55~{?2\n8gj-JL!YfU?K)<wnXJuz!jB(=1;udvN_BgcM9Bz`Ubk2YytGk8#zmaR`l|l{T1k4zUCZraC}?#89P~J\niQoc?xcrhBEikt3{&M^N4e8V3fs~t7o9uz%B>)I`h&RP2jbK6{9{J7szT|J=^3b_-I1ir4sz2yall$U\nl>!p0_9>p!h)_q9_4p;FmT^6zF>LnXvoqTLcp{Cpv(S_LvdnTrnQ%Z;PjqT%>ENnQGI+*jG;*q}WGbQ\nGL%^uW;;BcI2>KB_vc7Th4;5yz<?ys<Yf8&QuqngjD+Qr<IoNGzEN`12z(l15Ds%95;_iM=iHek|1>m\nWa2TCrPP&jWt@>aS8cbfuq2Hk{Z-L`$BQZ16*CV(a3s6TQN1@hFSB#ha3GSV_<cSWq&$W9kCSx$!zum\nslxS><hHQ&CE1IRqa2PsWG9aox$UfEr)8h&xssgVmU*p>p5^ZxR#rw5glqsds<_kd&?pLYPeLw+X{_d\n>WDLg}xXwiG-<g&4*>cicloNl&cW@tHsc>OW0{}0NXXOntSi{!5zn3>O)*XPR;9S>|u121hc#wUN%Z4\n<`e=bJyW@cb-n~grJ&8vFemkGJlkUg#sjjm8<ZC8Y~(Z19Ou=Y9CNIU1kPHvQCu|pnLqBdwXiq1#141\nR=o(37sK$}MpkJV<T1W5Nyis5%1%`9&0fW1WnF~^>zw)&i0wzhA(S0vp9LD<U*4QGs*NR$y;()z7IbY\n1!cGmzpg~;XQ7Ld{6rlM>yy6{`xZR(ZkARoHyGdnuE0VV6N@euV<vx8RE5rR4@gn-rU=)2#3_d7>6h&\nILm6GB9ST?4jJCgwuJ+A3*|p3m~nf9*f9_8-t$=+kJ*lfzp?m-gBadaSoa-K!%8iCU-b(0<BGKX~mA;\npwAalT_xQab_k_o`2-TeS|1?h|Q*ED^!BOSDUr~JG;vqx6EDm@zRJ~Jm^A&IwXH#?c}5VXg5UxBvAJ8\n@={t(dr>Rh;zcaE<OfNP$28M|UEp0VfhPkD$!Gz|%e#DsNmsn@1#|<StBrc8c%BUY`!;mC5f@FEpsTL\nYMm!7x@KLA5V&r!YQ0|G-BE7)gD|4^M569Fs{<#2rz7!OC9DZQ&QcT`YoVd6-UtW(GDN}Sk8Ywx(jKH\n!cMN2ymf?baGa_TE-|5Y?s6FNV6buv@AY;YBG@bdFD2pZ~qs!YoMqnwYmEA;ma>EX(FwNhte8Q(VD&f\nUk-eZER_mB=`{C;IDTJeIvC!*&jnyyF|8K<tw*NuDnpUVSW$-t(p;@|R`wZl~TN1IP24_R?Ufz6HB*T\njcCREih_=ZXeWs)4AS5qNNJcR}|gIur3PSxt1B(5Hs1n55pU!A8_%L28?xgxSNLe(PnZQ&r)JL6!;r_\nFy(JPpq0am8W2+!D;NW&x?>5fW?g}=6Gd6QkNRE87IGMMQ<Yasz;D^s;3@*`Iz&+rhQo;qOBGn^o4U|\n8Rvx0JJz`jYa$MV&z1)9Li_-_WbhD-}OG6YqAbRlqzdrjd`$KevZ}Ow2XpXSY5jOkbL#Af%GbKKjo4f\n^A3W5eCw|5O!U!9eM`&VZP0*wd*HvP3oYcMxAZQVC%-QFAl!-0iZarFG(o<D#7?D_AWKR<%O<vv@B!P\n2(q)X_6KhT`AvHP?GpNW?y5AN<?Bzg|0)<e`q>>7ADD@L^+n$CpkQ0qbL{r8$M9B|XtFf<r)P7^!(^)\n=~b7YM9t|4MHo`Fma~ppYM6t7zFvizAaVqF}hp!V4V9C@5J!fe@+7Zd(6eC-RImUvFL5a{`CG09%djg\nBrRBy+D-ig4~BJgu|p>vq4uR31eCn53OvD{s!&HXd<io-V28gsWb#)4W?(NMNNaN$nJQ(mR>{>mbtr)\n-p`X|Cha=2Ao?mfgM@yjq_lR!Q4YU3-riPbED%+?v4<ORHSVRjfjX66<XF8F9M@L97pwk;XK==CW#VU\ntDzE#qXr-I~=AiNi2Brq&7^jF{uf*5<rwO70ZR>@x~K$m*M^V=O$zhuC+^{Ph$+=FPAEWZ|Y*>}9e2A\nCIywcIAt9{527`jrO#a|jgEWPnfx6zh87=4nJ@_f}Dth(dle<n&CiL$HmEg-GJ5eCzlpb9vwe#57wj{\naQK}a;-N_BpO~)jG_uOVhI5ox7VN%z?!wMx;EeL{OUx4H}>*XqK*;jjP;q#mVH_dqrBi(G`v(9P9)qB\noUzXU>3-}bF=)DKTBH91P)h>@6aWAK2mofX{8*FNZ?(T9007L3001BW003}la4%nJZggdGZeeUMa%FK\nZa%FK}X>N0LVQg$JaCy}|X_MQ=mEY%AAW*qPu1UmlS+;j#IBV<Js7kT5mX&O+O9f$wCI=A+AOJWcdTR\ndrzN7DMa7Nywc9&JskU;nA>-D=|cfIesVM?}#b~ANdGoID_py_tIy4|UtoqjQ19;Uj{zmEFF;ZRrV`>\n%Dsts8N+9lCwe^;2ICqe$e-zm&~EjQp-Ir^}|kP_JIWPku2SduU!g|E@i*k|$l$h|N@Y?J9X%Z>Cl9V\niH4n(TG*@vL500k3GIEn^p2!{QV%>4ZL~N!lN_UTHR;Gm1wJO$og{gzQiGB`*L_MhEcWkXZm@n!T`YQ\nLF`34=~_RTXQ!%;z1Y;-+G_5#dh%MFtckO(D{acQYwJzf)W3?NE%)M7%`0dP=0HzB|NMv=yn5xxUy7?\n)0LOml{sv1_Tz1`i-P!LCbyIy0z@gNi;Kh>?)^V_xq;6p$VcoI|ELw>6%BlOTy{d<<#kpN2KXgC#{?i\nyJ@nItf9dtilwBrO#m-z76Fm%Hzc{PZux;u;n@M%5J;~2E2+msHlotTPob19su*Twf@DywoTRq4f90-\nx{8Q9K1i9qNk%p)oy0NR`-@hi1Z&>yet5fLE|Nha-H8RldFyqVe7>PxUIhD9vts4*L{#@g(+tML5xVT\n_u_^<9-x}p;2|8(vvsCsaj3lzE|a6!uMFwu7`b0)5{nT%->G5SV9!)#YaIYL{(2nCjxNl#czb$h+Vlk\nx{Dli6*o@sP*$B;D67Sqkv7vkjkPHYnQ=ms{<Dv6k<d!Dqo7^S;fUV*iDn>WRTzpeb$cMo`|`c89`>5\ntyTE|J;=kh1%61jdH|ha03YTE&%0wu$O7wu6G$d77JrdP?waaq66nc~YiGIzO-q+*CU5O`MyRCPJK~!\n<7$Gf&1-_zI&@d0-2$PX`|?4ifq&c9(p_f2`Eg8byNt^{sB{#B2KoD5oCT@TtWVQ$L<z{j2!7Q31$K`\n^6u!Q<4N!KQvgl;e3d$HN6I_C}0)PKQGad!e|lq45!TJpS0j`*IhhqzneA6U~eQ@-zH?s>tFh!PoG%c\nwe{GiRC)9I1p<X{Gc$RN~{)8<mpg07E{6@02Dya3OaAz$6#D-^vL1s*%``JVn}i&U}Z3sFX`E$AWmKs\n%d@kyO;f^@NseX77U#5pX`0gCpAe%*5<|ugNXsRTZMrNc*l5S(La1#kssz{`G>f7WzPc>0@a47}_OwM\n9D=)gkl)w%jL^5^BR!o~qfF=N68gW&&FmTh6q-?9CY{o9xbnR3^LpY*(lK@PcCUK8MGM05^*U$7o7}>\n=(DPY#>sVI0S;b#=hcBOwo?Q<>S{bEhZTT^BO(=ZZJTSZ9(`~}$KDoMjBP2XDe6}3E1E<hTFWqJ-{6y\n`m0GYc{@w6{>|hpx2>NrBQT$1-JD@&MvgFZ#!izOo8q%VE)a>~IaMxt{%t`MPVmi?S&?7Jr=XjuXzq+\nYmewzDNy}vw7xB-LUe8s9rIOX@d2R*S8kI0u_Y?uK=N@xsi$w@E#g5`Tzlgf{UdywL>u;`o5{>Ck?pX\n9#Bs6NMdhetn@Nje@i_**Og(1ih(u-EDpU(I-pP^VLs>{3wX1#6@%pp3p?12Yz`U<9veJ{x8{dmNKF+\nLQa{{6S|-Rfa=QiMa{$HTFV1xB2S9WV!$vS+9%-ASoZKW@VpY@x-@sN84heud7A%smMYX~?WV$S>3@9\nMzIv}iCq<c(SAu24n8AOQ)hqTCo)OY=%;TLWPD_o+BBX!4G7El5}u@OTCYdB$Noql0^-2`nS6Dx<h;r\njj%wNR6xq=SQi-EinZE{YB_Su>r+9zhG;1(HyBd{viv^o8j?H<h^yXI@(yPVNN6MngKbE-Dxlw$K>Y$\n9WF5@L2|O1~N#uQlt~mYKNl2beXllSMbY1Jt!|m`b_{48c8+FrHxG8Py<5*y2Tp9XianS=BJlDU)QLG\n4&4<<LX}!d-08@6@P`G@7JCu_;s%sraIl0>8mGFnw#}Ge$FehT{CaOA!^7Pw|7IXGxpVR$dG+j7^7yl\n_sk^p#WS1hCIjKSm31;c8t1Lm^-AT!Lm8?O6&ejsfMq~x-d6}>nuMv!mD==%D613N(+wzuejuueVawe\n`gt{A#p4qj~@!=@WR_~^T~A|BsaP@!=Y%dRi$&7}nw7Y`Pz!opQ|-J*&>(@AQTsb6v19=h`@sqIR%JH\nd|aS$bh49Vz7~T1Agw67Y99O!XE7V}og`lhC6q`ProlfQ3LHC*0o2?obXO9|;~B$X&4aK>z|A0H%Efc\nn4oVy&t_1DewhKVh+=kYISTZsQF+kWqY*y2MAp@Ko6_qnv@D$6BgTr*D9@dp*P_@X$LJiu9f~3Ck(MB\n6f(QJ|IBVf^7IfCzd+_iUyKmYKrNIAPgKF}6;vBz9oAJ~;TB7~W7;_AQUMo+D#T6lFL%;S3Hi-lQpBv\n}vTG{dWVVS2HZCjGTi%C*x4n7EjhyeZ2te?03j$DaakLiNH$(-iPK1RhCU&T{3}=Z_=f=zKfSVRLAYh\n}>)XO$e2xx(`ty8c;U^@y|LvY9D4};nQjZ-xuMKgO21u9u3^oEIv+T1Rnf)q)%GP-=z(I_MH@fvnCjP\nvK=064HkU1~gRa3Z#c#+e|uL1j0g!YH-O$oY0lQf5u0H0}a)WqYXYJpe@Uo*>F6zr1z9*y26_aee{_=\nQjbkxea7bTjXZ})P8c`x$8;#vIwz@37)LVqFNO}fHxz-m2>B4s(@?a13cf<$olb>7*Pg8nIXD#4;;|~\n1%)RsUjUrlfo=ZXU^l>m18_>9AYI>g%;8oRG?DExG(U;9678nOvXbHeBufJE(B4sDV93tzGY`?EdI-h\nTSGRyRt)B-*b;7~Ws=jc<v**xNl5ZY;wTeo>*FsG#y;kNxZCN#-b^;9+P!%QozY3D)dEo&|dNh0>7p4\n9Zw_kzWK`<}aoMwUAAh~JB11T9Lx6Bd`u=@>~^6-f^#V$s{+6azBSt=xjf--e8F1<C-23tMc8HVZ5bC\n3WgK&g!+Mh>zp*h=K+3!VgMETppLNhRKH`ungwmS$jDY9O32C7buOBg!inZm12~Rg0-BsKU8X*`ZCKC\nEj2qUa0lK)+BoXl+}xAqlK@6q6wss)on%<HKN7_{vBiBVMKPK`ol_rOHlr3S0ZBMsct~~fJ1>;&5{)(\nd)ETxxGI~v!v6uuX%3O1S>RAMAhMJt-!qFt5YV9&%MQ>H2C>+S5-o^HO7nx8i5)<xg?>agrFyIB7q_l\nBs08ni0NOz+(G93iJ97Ob>949tle2BgomwxDT_@D4VMCTUZ6KiI&_lu`%~nj6<PS&W-b#j$XcmDprgS\n$TfGCr1H10ThSB%5B5|=7u^#n#jlOHOoY;(=7%K;~S5xmDwx?Z>48o;d;xLu0`ig4(YF-haKF2tt9HC\n(T`yK85(%G+CI=_*>^HE^oW^2{&e&N!i+FF)EG4+-j+>^qup!(Nr#MgC)4YEtyvrKPF`RxRwRir?PdD\nl0(Bh7q<oC#n|Zu(_<SgjDS;B7ho?yXDzh4CJUN7Fd~#bMW&#K%!7XAR&F;L$XlSmQj2og)_8-B%kKV\nHf81dCgxsQ7zGFw{#%1iq{z&`j&?SLc1pVe2<bPWZQ$E9m?~RWP*yM3;5k=Xd&lRi;YXLs9pBbs9-g}\nf;pjZ5={I`;n0x#-_2z(A2Nd!fRr)p@zvVjcM{L=2y`n2byJgs`s2@V|PY=XB#^_jsz3Leu1x;jtvU5\nYSXNAR)8&mXlY361S(_v_n(cX4I73TMytl-kvZTig(@9~2CT1Am5U)QZvaL+vgyG?HZE;n+k4cGaNW5\n@j6aBD5~(sYuoJw+uh4!fC-rfK?J3uJ0Nu`X~anqHa_carU*2q#wbh#-->PPyLjQ%<bY3fyH^<uGzv`\naKSjj0(hw7pAx+SW_eDx_}X5f!qAXl=}t0zJ+0?)C>HDSS;ZY_~p`{dzfr|V`lc|=7w6iy@lz@cy8PU\n!t(jd3c2iw0Ojc_NwdFob-SS7me)m&jJN}GK@vWZ6|&$%qX03K9JQ$K+2STkX8)!PYkD=YA7&Mu-4rG\nG%2wmzyqq0J*;eQ+D`pf)#l6r0amwx(bW4g@qZQAf5YzM)b$q9jNFF_o9_^>A-bx#NL|E2E(4p>YdM;\npcydy`M_rQm;QThZG0CK!+r5LZId^G`5Ra1j^H?m8UOeft@SaAXccW=ReBBWKJxz{Rfj0ogHi^9bg1Y\n6J)N2S<?sHVg7%nI7^d4ccGMmfd!X0b~HpKHAyrItB|KR|qpUCxuf&|a<OO%&cs%X#9EExTWV(?ySBz\nK?`5)rmg-#0^}_uD(c0jEcZYY`6w(2F>g;jxaOC5N!<bZr@`_Cq^`^r3pLFA7!6o_ZZ9{oR{CqchL3B\n?#4$gmKB(p$Ck{SyhZ@+(^Zy9o+pn;|7*pEX;DvzLFV;R##fQODY;2=qM$kaxiw6S3>Jkn57X=_D^a0\nMR+ccKVqYCoz&y<fAUXT$LGp?fGhQ7iiYqmiTLEgXK%KLkSW#8xYqvJ;Yjms77+7UJG8|XB@j8KgFHK\njD!QC;J&&rc>8K9YvWZ4ih)%nFuO0B2o+>6^KF(V#p-3DEoA!4C?CVOIZvT)B_0$|&sdjGA1)A+vauG\n{sl>#9UXr#Y%6TOB!c&+Me1p&TscW~#4n<<@ISD%KJN250_3!E<1N$~PfrHY<nT%&Oz<72RKQ3UDxsz\n`AUSW!#)Z?P)lSlZ=xRCe{Pzk*0=Y?_!fv5+G2x_vE%`83V1TfWLq<`=gwXHEl@f{Tkz4&5FuVv!ZHd\n*BacPWE5bFwa4`u&~Hq{{z6pfYO7lr73EogSA?rrRs*sebR=fO?gGh2d;lCBfc&l3WQl9`-8dz^z}^#\nwr1l)$0BtlQ`XI$IVO8lEF6u&|P0j3}-fN?`W$Ls{;R-*hCE12}kqy?=Q<m(j$L#jIEI<GJ3qn08V@P\nY$bk{s5)J5s^RpzAjQ0)YatOJS;6MkI|RYI6tHoI;_<F5tjx;&1_k3W%ssMlymBLYfzC0a8tv@X_you\ni>*AK;W`mL0z`$dD`^z{v6}%a*b&XH)y@#$GT6OLl%xk!6?(JE3h`xxF=Tu!S5<9=cvYkL!=F!_gaq(\n=9tPz=_u|Mg%QG7-y{;2{jAQ5d}^VJXy#05^D!BnI&+LvtcGY1t@GsS+O^7*(fGy9$mP#SIIALms#1P\nU&Xu%6e8Zu3k#&JDr)WdE)4^g^*QNIK!DnMg9uU88)E9nD=)ii9qk08N=cz6@Tr3lze!Oc<dOQYYn-~\nvdNFH=_($3}{%;vI()G7#@@Xt;E;MJb??`%tm2t=mKus)vF~u*IhY52V#3aK+SI9Kcrr9tc89+!-Ld%\n2P2pVW~52$7J9M<y!kuBqTl_&%&hGKUYz7ts=B(Gtb6HXu*Ij;Ek)4pc~WIXPPEHF<%3pvoDG1&lx^H\n79?jw;|`;{l37?e?(mk4t2E2jnUuaPtkKY?5GT6tKtRvrWuuF@p)s-B|KannY7Y?gW@;KRx@8;`=u*U\nOrt(Uwd-|xxEEdq{<za5Fx<X$4$L1EiLRa@`@Z#AZ?U2Iga|K+z8`%h1L()4fJAS)Mm@Vx-&ZuRE!*j\n%X6%R2`x-sP(TSa!||0YA4~Om<hCqe^`yGSE-4vAwO)_IMhak=Js65qQ~N}%Ho4|oY@mW|Re@ZPym|B\nDsfs3JdxP$z1&x@;*d=@53N;EB5}*`eh<$Epa!{TUCE!$tqJY5&Tuy{Sdm6(R{FFLPY{@L-P+WhzyRw\n4>oS=F2M*X@iZZJVI!~ecmEVE1T;Wl;r>o5NE&(F@27c{3R6@qj+k$aMs8fJvTU4@w##F;-Pi_0Cy(E\nVzAv$adz={L!zG9;5zPZk=IN8qK;j7_NN6BTJ|oc^DTsYMxGDh+L5rVl)~8!!}bg9#JPCRDv5qoRJX(\nv!Kg#`X@$&^yI`h4FA>IHK4vbx<2q`sFYqCn1{c#(5}roswH?M0AG6y@c&>jj0dUh`vbp*9@iIS*S$3\npeTo(l#6h#4U^yi8rPtww8nYbgVT}wGvyj%8GLS<cVC~RT&}bgqhgj(*P=}10~p=(A0s-s3<AU+4E=F\npamf8F)8P=IbWY+O1{;Sv+V4%OV1$j@1>IP1*UrVr@Ps094k$a@@!={4Piq1yo39FkTU<fP$(LO?-Tf\nt%dARA@<x1t`dV8?z(W#Z^wzJTeq*R&QA|_U1ftRS|qF5@8_yN!RC3vF2n*RR)+cJF{_iK0kyuUj(1z\n~AdJ~i9l65Y|CUvzD;uSaEfDqLSdG+*PS8BmA&ND4l~75rInsO(*w1dWAGJHANu3^3-%$y^wo0o>dbW\nSDq((H7U@A#e?39V_M_4^aYBbCV@6yB$V@a}0!xg03xt>8T)z^xwk`OX7jFz=i=5X+Lz;VPkC(E-!<^\nXm&ptv*daGAvwav^s7G*yIuYX>QCj4EG&Km1qUmj66id3=Jn1R%lm8@2c(656d6_2TbaZu&06TzVTHR\n^>Oq_`KCdx>uC-G1oETZ+Y04?C;sm!%y_t-qf@B-t5wMbqzoL4!SHJV3l7qNf(4~j2A8H_OcF@mn&|f\nWc69)rRg1VgENV+?SM4anx=HP??#ujZ0aI_2hnWVr4nGC0zv!OyGf2L9yUF>%nQfDK$xYZ8=lO#*fZh\nYS9cRTD$Bp%&awLCPB04x{L0{TfY^>)AOmWszqn})+k>p-KSIic|TnLOCVl5j9+AKNY@$r$6E7|I%Cr\nQoE7c+3`lw&`Cnu91a)?y^)KD0UZ{OjM8-nnkg2JeG^0fw27^)majGa9x3h;Xxt@^~N31P+qfWe-a=%\neB64G7!><+pP-j}tyNg{bRyWj0jtjgmWr)7eyuK&Eu1(QOrgn0k!E3WWqH&LG-=qL>C_!t;?zXBRh`x\nF;uTDog3NZrw^1)By}ys6KMd=Ny7+CwfJ(37(-!XN14o5Xl)_whr1nje33ma8pN`6saw2z(vpG4Q8a*\n7+^<lyFv&fv>u`D{cxje2=Dvzwnh-)^tDzk}`GciDM?O+9)_J>ZTx}my&4O8UNZQ%2A^wtO+x1j2k_0\np)u!-YBFMaetJ@Y5i+DH5=NNv1`A^i0_Quwg3rzKYI{g}M1&C8^4OO)dME#sY?UdQ6+`?w>m-Xy7-F3\nTn;{3*OC*%RLO`pEWqyo5)EkcMQ)GZ6jy5oY3)KVj3rz8{IH;PN&r+IoN*VWPE`V0@}@rTz)DG(*)Il\nNJUyUuwEG@u7Sy5A%qkQ@@GRdMe)P3P#QV<wd>8HDTkFq!>q_^-L#5T*2${cs;WG!I>SN3*>>m()yX9\nY4>~4K>shGnummx_V#91)y!McUG^aeeAR)CeLs|KGBpT!78;5SJv~MZUv++|0sH^NPvu+5@{N|FvB7F\n{Wx(qgZrj0Nd-W2C_nUxAsTd|s^f2(}d$bbS}FwBENg8=?@i-y@coCr!^y`oNR8Wg+hyr6KEBTDT&#d\n6B3DTzI#dCBb`K};vh9GqHa4uu%Yww{hWJtt@cMG?wq&{m6yZaVAM;`1o3lX@%n((fNX`q~L^!CV?K)\nTA5-VClgnxu86nB+miRp^FIq%P&9EfH6LmJXh-Q27HicvOlL0M>b<{*am)VpS((%@!#vcb0WYrT1l}o\nlyzkcs=LpZA6ZSYV2dhvg6w^@wQc%JT7H;a$;El-uFga1Q>`LOBWl$)Ra*zve_t~LK$82=jRt*~;0c6\nT^14RVt;Wz6!O~?6CNT@>jau}FP;xL2U>Y8-q7^x-1;ILJE!7q(VxUzPt^7nrEXka;(u=NT1CWQOnIB\nwhgbU7$)d$R-*o)6BN2;HtNpio+474`f8&vT%W5Z>VJz5b*x3e>8>M4_xyX0hGW*$Vz9}PQ~@bvx@yW\nJX(N4Pt(^J4`ineeGBL1dDIV%wAxBD8>RyXnHTvw1JPN9*SzT>|QXpLq&Gttcuob3)H-`TJ6oNU(=v_\nBI@b40>~iDaNffIy^mhqt)Xc137(pWJ==|<g(`S?_Jq-C(H(?NBjR}kTWM<+;4F5(8zF%_aC3bf%1s(\n8P?DnIsX{(20uzZ$z?1Y{|d{UoIfY+{ksi@bP^3~#dULxIR8+%L`6XrLqdXEPRF<F-dR?m(C@<`A--$\n%&V`)yf-OC%nQ4=nM42A1os+W`hLE9r*B%2)7w~h`o}?2b)d-X>V}sP(M$%qo`ClwGUPjbwyQX1$x~}\ne@f4WJSBos;Nj~VFZ58qwPfU#Fgr*(RV;b>~C40!V_WX?<J^)WmEINY$_F~5sg*OuW%xyzU7?;PDbk_\n^A2vBbr~ZR99MTRLnzBa|2##X>9F7sH%E=<UOaOdpi}V&)@@rU{<j5%=&Sf2_!%&ehI+NBEU;ga@dqP\n8<upRW^;0{*OqhXjIQ^CVcvnPR;lPmFUA{TlZCC82S@snc>r@x9k*6bK;J|{=Mc2uCWt@CZ<n1^jtel\nZS6AJ=SUi|UeU;Ahz=$`cAW=_DNPq0X1yuYFjzUVn@sskG+xS}R7@K&{h2!z6-DfJGSR69QN1YD$my4\n{sMR}<z4SDQ(mP}k?QNc-&L@v>^jc{}AL{TvKHf^QPH6{>odHyjxW6f7BRM+l$OHg;GVov$(62B^wC=\n4pIt<eE+YPVaU<Y(&jKfCPFp-e@#5(<sy%Gk>ITPn|pGwS`4<hkNp=r%8B#Fo!5zHZ)gy?H9B{yHgVj\njBW-tXuJp!{7rQbJ2{@|*`LD)^^9;9(DUP+jk&h#)#FS}6Bg3PQm9fxLq1JzKQ8!>Qmly$ys#_$8xa7\nB(T8vK^WoV|6<l=r$9d=A%hu^zn#r>u~FZ&K>Y-FIRrso&*yfG9J)LKYHoK7LV1GvzN#d&Xan2I6{}M\nYd#R@y%2q}>zpu3uCDK%Xep%&coChLMWMpP9OPNnD?4Rr3sSrX$3M8v3!x(UBzpZr%zA|sgoO*TRNx7\nfXq<FXz#cNUf0$GU8e$o>`Z(@zFTOch+<23FyUcVHcvHW}Y|Id7svGR(c-#~Fh)m-Q(J_`dlsa~vO?n\n})Pkg55NI^2nL<nel*i$$fALAn9TG8tgvu&lXC=^B&t2q}5PYNt|W!=V&Sj;NTO%2uv3}-y_m2GL5+n\ncA|?{|n8PuQZzO~G{Z-B`2iiBiNL>?iiQCx@2!(u`zei;6R{5PrPaDVsb5hMG9-2<Qd-nCYex3_MJc9\n;87M2cK4kau6Mp{E&|Lmvc~^>f+UAwA>l+i<CL#NC4(2Z%JABov|ajpGEuuqd7K$v~3XiY)xUKVs*P=\nbk5A`WDFz{FQhrGH2Ie_I%(NuN5fy9yvB?`Nu1CCYf&RPz1H|p#(&f5;{;T7%T$P`@mS*iWnERGr3+J\nXeR;#&**#W68K2hcQ`%Jm6><Y~g|zYlaq*acW)9xy`gJ3&M1!Uack`$-I{o}6Wcmep>V~~11j;5n5z>\nf;_8I%m%^Ysxoc^wh$s+`<h{w%gKoO<U39j*jK{cpXL$~kISHLGs!TatCtH1*9yQ=2;bTT819R4?U(R\nc6c5x;wf+ZWx47Vw`0rz(;2m#CNqD`5h2L-Rd~tMA@Xz}O(R^#_2q)=;L)!)T_RNd+>F8k3l1yj)@hK\n@xGr6dVmfHc2ErQbFd$O7Ypgsltp_9=r}C;V^%SiBo4Mj58_So)tnr|3?RLhOwKTikiNDU-xts7$|(0\n(>y7O#~dV<u8d7BMo(QqN;ZH_g+=<jJ6Ms54%a#76c_BFWlGblDcDVlfwp;YFAe7}l39xDpQxS@=8A=\nllX~9;$*d6oR$>OuzLM~?wPuy@InR{4$a;XuWgNOr{|W<92<Qg5d0YHi_Y6`eO|23}`I)*F8ex?TdOb\n`dqJKm?AwbEe+8H^D-er?Wd`Uf|!;OA7+>%QV85O~0c}#-2;lFrpk^@A>^y8mj@Bj}kwuELMCFgJFio\n*I(3f98v+bT(apGHy593f<l|D-WbMkF|aNP3lc?c5`!ps>Ft9K|8mGQb&U3&Loj@9@9rDcQmttt@szG\nA0erB>9wAB%l)n_WY?6`gLxj<w_i7ZsAxGy|!}gk)ygIfH{xi9SW|h?7NR~2ii2p$)uf)UDwapXrZ>0\nA8lgqG|a-exn1AfX0Rywlr2q`R<jnrWdJUQ5LQZ@-Kra<<E8f5@O;NT3;CoLyLVB=v>&vjQ26JKV=!~\nz-%3p{OBVH#j?P>qi|b|Gi<s*?U0f{bx+^GDE-&zQq=?|WNNYSN=NkXJ!2im0*5E9szzhu5qfSH5Ua+\nEJ%#l1=-U4(T0p#<kr!p;2bB&paS_Y6{*%S+~3*OPEi%6d;F;1lL!??_KVkf{x1`@o-Px`&QedW+2AB\nHU+wWm@aW=DRH@_GP~!eP((D$*>Nx|NxTyJoSB%pwYNfXvfk{m9*4NV;A8IZZu~JcF3nA5cV)SE6SBR\nrlzNap&3Tz4HdK-+7?nym(bSefIq2cRxS#vN`EY7HH<nFJ^O5h+CTO1qsaFT`qV9PjHvZ9nqxj%+n!?\n^&nTL9_Z}C6;TyFC9$Sh>g%$3zX**=76d*uq}4FuX(X8O3Uew6Gh4m_*(h35)(+Fh?2l&8xf;`KQOT3\n@sNoeqAzI@H)`pkCLL0orWMPl&(@+X=>*Ku^bPZiWM@Qz#XCEFtdzyUnP4ehV)D=JLzIyz4uD-;L?0T\ns2jLc!dFo6t5+QijSi%Ew8sfCTN54jwF`vNKG|C=kMN9%EFjpeGq>;gFxywGEECdVQ`j^2VIS9Le5(c\n)cP^Vh#-Z;Vs-D9_v)hjSM{58t|3uG@>d$|yzRbSVmT7&k-RPukPr9319etmma+M*Lq#Ov0<J+x`rY-\n<UtF3~ko^z>(NcC5yZGhW*W*j=S%1B6IxDeT-|6<A3hs`-H;qwCDUM2>2x^UdEUkp&E~1F!!v6I~cg<\n*tL0lYj4w+91iGPfl>aKp#eIQ9-6rlP1i5yj%LRT-*iv1uuw$AkeVLq9y47`(auiil!O<)@j)iZ+B!u\n(Ci@Z?oJNdsrqR$jv&px4^5qvXb2?Rcp}eAak(6($P^fqzE?K7ny-9q)voP>nl^KX=kLS?S@bG#Q%GX\nsQ=Tz0%u1RY@T4bSb><%--s=5u`n!+93k{NAqE+4(u((GWD6?L1ZpFhq%i-?}}I37g)=+PICzq&(3h~\n*{x<~sxYiL-AFXy%dmlc?W>V4AStem9irZnaYT#k#FMyK`$B3m#4ugksD8$z=pHw@Qce<8qYz&RdEsV\nybQ|ig=*o^h$kZ2qb<SvU-Zh;>R3^9VgU0SsxqLc;DE>`-fJ}3f~_UHyOEYBDl3GmI3T*J2rdNxvR04\nUeuYzZ0t+M@69%2FufAQhjaepF;DUL0+dCPDF6?1=a4;*St@BE*WcU%G4UjiJ@iiTp=Cjb4lkQ?E1)J\n==3GbG9j;&`N5YX?xr$IXhd$1pcrm-sXJ^(C7cIHV3Ug6aF&%rl-u66_I_z44A0(XmLrFcB^9-p!`zU\n~o0wKXe0Hq~QYT9bG4Q;kczG?AQ6*>&bT`dnK1uke^uEoIBy@8P&cnkczL-PLcy&DZJ=ufOWM`iv9rJ\n!&XnQnktcU;9b$HyhBS*glt3cF9|yQ%);K?xWui5wf(gO2^xXSzhJb~?1#up@JLM)D*1S!rRDYdpeCo\nhTZQTHxdbdDBqYCgo-We6O8U02rQLE41Xm;T{Aw0_)H!F$1p@`<a8aJqRYSOkT>_b}>***Y4~Lv58Jn\nrcwEU3;qT)!eh!mRCbbeQ8QUyN*k{{Zu|iDHlF!L5pL=v0v&*EdVeAKgi+~+b6_Z8DWnoCCVl<+qt60\nyUpfmU(n$(HL5R$w7g{^~3*CT4msyYUYOs(Dyj{st0F8Ud97<4A+%`pwOQ@<eUzKIqf9&(M@%NT5-{b\n35|2{fF9||U2ygdUi2Gco^!6tny-4vR$s{_2LmOmd7)X6zH^YlubUgq%TGRDZ9^IWggr3dn<w8LQW;9\nAI2K-|I-3g7zZbq3}-gnn;&1oAO~TXRLC9P2d$)6WLssA(~Dee~$-$Nzd_v*G=tu{*dtU~?*j;fW{Dz\n<L4H<jCq$+pRBvuz{d;4hwv)BEI;3J0KUBbO_YOJJZUWjo<roVXFkDPwJ#-d8Z8?Q8aW-R@Ebs@q#*1\n)1?;w4Nyx11QY-O00;nPviw+%j?o@P0{{Rj3jhEd0001RX>c!JX>N37a&BR4FLGsZFLGsZUvp)2E^v9\nRR@;u#Fc5vuR}6VdM9BvfijaT@1Y#xNty)=bGHuPecCg)DmDT<`Gf9&=X{vIIw5ukb%Q<H*iQ3iH1<-\nc0QD&2@o!vocwZ<|iYdom-{Ki%2uzIJ;(AtDUP4?X}KcB%T<wMdQ*QzeWJ(|k8qL$^I<mkmdDBXuFrL\njhpQmdaRjND=Ds!Tv<q%Iu(;6HlcgVefn{?Oij!5@3&aEFExGY53A=*Scs44;~3nP?ISktaz~YUw>ho\n?kJ{6QHZYH3-V2f)JTUy`Dk2#qv)0ea%_15)WHM?dPzvR#T>LZjU*<cnzPe!8QnAX_~%uC<B5VB`WAB\n>FqcNv+E2fFe|zA!ObQp-crV>5LrG9G>w&frVmCi_J$>@#1IabbUBS=d7DJ45#*z2jUIG+k|PdDj=n*\nW^~Zc=WCLsK*cOyISEjg^dXGNKL9M~qz=lO>cjyIoO+FihyTijm%iXGyY&SpeHO^P?51^cB8oB2Y?67\nwRQb>#MR+)@AWyf~RW2`aEJl4cv{ZFD?7U4g#?SB%ZoeW$^9_$6AuO6FGVZSG^tM9ZDUczH(_a;2W@H\n3y!;gKHrr`PFNy+PEXy&JOZlPns(LNpJAD7v8?l5O%YG@5Ln`_PENEYjH@Rqjj_E~2a|F)<m(?QmR5q\nEY>PN+vb~F+*Bk+`y4@Q=9AKSjf7jm6}DKBdGr!=o!e~pmvr!qDjd+=B($&uKDG)w~T}FZi#$P1h>*p\nP-B-lk5)s1_wxMrF}AqIJv;2rL6E7{G_aPYYN~sMBdso?=p?=8rrM6)Tvw@{m+|k3(@wogb3U4|Mye|\n`BWb1b2p{qA-Z|^Cb^6(MDd9ndErcyL1mThYKXXs%5#Jj!tEm?cr%rD>qtAKTu$Nv}^KpqU&KNugO+m\n8DyZ0ij*jfbJeX{%sI{G^J(gI{T7zo&5U^<YrKM*Sj7FO7e3RcBQ>~A;kZpdqA?~&}4hYl<GP-|`JE2\n-C9<3^STvi4TrBYk&xWlC(zfe(Y4_eNliJ{+a=zYQ-UIWEU?kSCu0_&IOx=&bM3aX$=$t<SdYY4-YYj\ngP$y%C8kQ#_G_Ax=nroP)h>@6aWAK2mofX{8$k*PjS8)001pr001HY003}la4%nJZggdGZeeUMa%FKZ\na%FK}b#7^Hb97;BY%XwltvqXU+%}Tm^((M+xx{fsRFbVqUFphqn~R-2*X31qvc4@@MRA6h8Acp(LU1I\n_Y4zW)9{>n|;8;nl54J=CjYhw_(O|XRwOub(`)1j<ZLLl!e$d+A)WQ9A**2?ceX{D>t>CA1waE5;RqH\n>+vRH0pjstSl?z^Sr!Tn)ZHET2I>*g>Q-xPISENVFyuc~D~7k`(H?25ka=Hg8cztOAjDh028-1Sx46!\nl!Zlkn%y`&}(h81SyzWqH-W1bCmx`=z9@$}IJrTo=p3D*%I7syB`5Vcog-rK$MW?<=JMwYPHFc4Z7^-\n7X6c<XZOmqH6M8Cs)<|-2S~+vWo%O%DyOzzA*Fut56aV>Z-*a0mtSLve~lT?uy>bd;jK#S3kagH$7ag\n*LhtvH)ewQI|m>e=84(NG?2PouN_vw=Dvd`61Y+|rEGctv7Vm2t<=&?E!53iG;Oyn>gxX_Au$)7Y>KT\n^@XNOEq@0G-%k3^NtIo<y`D?L+^?!!vuc}Uhz;+---k;OZZmX`}7qx6|4ZLpOfC#MfJ?yH>hxaEZHSJ\nft9QK~(IbxmXvy+pPQm#a<mR+^$>8VOj1pJ@`0J;|f7&{lvd;O$R`FdYnhz01`$xNL6#~|>RG~kD}k^\nJw~1wl-b<eN?wy%haMf{xbpLHq_tR;x;u0zr#*#qX+GDzT)&rC1zj`U5DdYC(x$*+-4A605eODeLN1H\nsboa1VOyM&S=J4+3!1$b9`UJa|Dl|X)R@NqW|T+q|E`9T9qMdvtQe)Ni`Kb0?cT}p^|lJ=h35T1>#}l\nnm3I<9pT~3S|tx=;v?v|Opd(EwnbB|r0Ns1hNip)Kc08S*k-%Ko!(xp<kKc3Mk4l2_1j*uEUcOfYu+x\niEOU(8CD}fQ*H<hIPae)_{mq)}?5-<zDqS^9X2eCK@}lV0>Vl2!ix)R{^lKn_A^2g_N=n!T*jpTP1$<\nVrPiOWu%25S63RVHO%WLs6vjK)-0FFaW!&n0A4KRykMOmgebT)d;48V6MCxd|KeF6jirm26Tch8oc3>\n}#rm7<tmj4ba{)sX)GCm{iFNk9Bm1g%0u!Ii`U7AgfifBX8IAK$(@yQ}(5yYJ6HU@n*K)rkX;XZEdy%\n*tGuxtaJDph|G70%o&5+Lv<yL?d806W%XH(Uka0i-Yi?LM<(gh0J(q>-~O$)q%%E`<dvA8?+-uXDv&f\n159%1xzNaK5N}o*2hcBK?y3b-3U<Ay6aXn2A-fKoISt1Bi(Lzzc0uT`&?^w(I68op-u&?H=dZu}?)6*\nRqF!Xv_d9iQe!eS~HwC&SzyT=PWNo)TS39``Td2MBc}E@`#+>QB$?}ZnNp<dV(l|j7YUGyn@bt1!;Ku\nu5jNToKMZ!|7!6%F)IHj(FEo*2Xrd?jjWesF3bNy0l4k&{e4R8^rWA%`56LAU2uaVl9_{WUbMu|g+2V\n}PfJ%B{n3N5tR*qrCh0xO3D?IS>!Cd#H%$ig&1ix(((37}Suvy9r+RiEOoz9yqmz_3+wd2#mFEALedQ\nG`oVJ`=d?GV!5B(0wALb{Z1fatgbayah0zCK^Tia788qts?$0_-URY3SJ*fC2BM{;J(mmxUHHB0wK}t\nw+jd^TBa;J)kZF*QUx&4nS|zmZG%x{P*c>p^Wq$zpQEPJbn~EZ;WtvA{vJ>PC0?|E%rJc}YFXTZZZ{A\n~z%!byHV_Q~Mno>u5Pm9mE=T2V7@KRd7$SJC0p*cMfTkV+mrTXExRHmK5MMdM1JL$$nX8)$*D9JrI^t\nvos?hZ;d$c$`>`)hWY4ReO`J6=Cha)awq4;?7JM3sS1Jn`sod*MVV5ibHhE3anGgn2>COCWXwZoZBMs\n`pO?ZjO0gZOnI5ILZdbG-aJM9~Cs1xcZnCJg9N2(+`=KvL02@K7Lc3#nuBQrq00H(;7@?zTXyvaI*z;\n6TuF-EAa`6#NM`8H8F%aK6n_`eLo;LeO_BJMFo^pn~<f$vk_!1l`QH1xmq#5jo5o@OiqMU5Fja6>@{X\nKWYMQ_10Jd4Hzab#77&syn*Fk8cBQzEY$4s^Q!@}nV#Ji^&Tzu;~=!!iPa_e#xf@RHugfibFw-w3X1%\nROYnaf-ipyqJ)8BSm^miCYdLzdo4RlX5LIUc4X4ap{kfYFs5^vXw-VU$XUu&YE{IJ5l2k)tQ64~2fbS\nd7u^MH?orY3YH5iInO|0vj0+|UrVaBNa0v0<qiest{B^0s>9zGv}B-r;|QQz=({mnS=v;7V-aG4I=!S\nV9}aLL3eN#S|UYy^xJ{V1pvgIZB!j57v6&(MDRao(Nez=`ZN?q}aQf{kjZlQ4`C9Y8Rqy@l0!R7U;-f\n8P!P6-1_J*AWETMKC^K6Aa@WNG2n6V#L6>rFQe;Y(Orcwtb$J)oLX>v<JDSm7VX?)Jh>)Mw0Q*kfCUt\ny+9u&0yNWVc$Vjon`1tZ=W_?6nfTWLG-gd92H)-b9FtoZKW$a1!gOh5a&DzFW@dXFi(L8=@l^QR-KK(\nY-A49c@pg4V-koYh+RUN|fID*Sv~n%<9l8{>&!wy-*e}QghzGC$#u*gZa>xpzgM0!ig1JLxBR~6gcUF\nVxtsQmNQN5nb+AU6Bobpr#*3%FO`GDDgv8vXPPaha1l-;U7RfI3ZkBZi2@f-XH1{*M-^mnF(c-YwnV-\nYec=r(t<G@(kd0C3v&)ujaWweG?g;yTwd&*p-tHXB~*n8LBm&%`UBVFzKDG*F3Bgq6FNAI=cYQvr^Hh\ni8w+G4nDEnytm0o|fkz)P0^)$PK<0Vpk0O&oFyRj4Sk^8gijJ8Hb?l5(gfRStVOGL?rYgH{PSn-JPTA\nh5kjG;K4~5;+f!CKe6N|$AYGs>q}Vt18qPfr%gBt8%psO5+5P&`>rrhH3Sl!ZMEJ|Rgy(EvrOT!WORA\nfKpO2rxB!`xsUG<co-_;T32>>*RW)|jxOxG+qfsB>`H1(Uw+KHUWiJNv)lf_eR!^hr7$}uOxG4c2Psb\nlrgi!#&<4xTr6pay_iOoI}?<E-t(s7PMD>eq1_`1ZZ4l>>(I8hi@rAc1(J|dQYnfk9Gh$Q+kXCZfo@I\nNjokDjw}V9tl7!J9xv50d$=FVsesVFkrHhOb?xtwU?k?y$r}hX`m=5rpyo8~BeaIABj<3>fUgP+ii2`\n*z68sMx4Y1EewaiX4_-N_Zx|FPPXA4e&vXMhLwu;BaZ`=~sRQeE>nEA{?ni&gvHl5)g+hS76L@4(0GT\nhihpbXbkNh9-Rf!R;S%_NJj4Hw;6j=uB1`TO9wUurz4oOI1o5}0rX(^AwoD2kii3_OLpg6m`5)Tm|R{\nt<irykyR)3wL!_Ovjg5!#z!8=O^r2ya4S!xaITL9BOAZ(=ro5K>sv8oiq3X06ia5G#Hb)<Tg=wNmdA@\n9S75Pl9J{VenXU20AL}!o~60YtL<fWQl7e14KGSP#Upq#_!Y~sgvud&7#hYX;65I0p*zD%rWJ5`uKgf\n7QPAg)fifgUsL%!G*gMaFd;kF{hm{s>o{N+kZg!El&02qPy7U3Oi2TY)12?m%RL<^o019L0=c>%reQF\n{Wu5GKn#<-!EwSB(bA5kf8wzb(!OD&UnxLb6tBN`@kuBZeNg5BADVYFD+D`%_E5lAcj0e2v?&C3n0{u\n_f(74|Hwl`wwNHw_dXxpJ3fZJ<9~w$dnY{j0}*0XawWUMe5pA=CRp{D7!c1#Yfe%5&uRlri&1Yv{_8+\nQ^pliLD{bBlGtC5a`sVk)46~Q}4$VT4+j$iWa;u)g%?+g46ZP`<Yon(|Li;AY2~Nc-NJr3-7$Z7(g#V\n_Zg;0kr9*2Ww+iav2#cd00-?oso9!!}`4-|dTf&EaKi;t(6d8IUShhPi-W;r0_P@aZ&2sIEA9r$ZVKH\nXtAxn?d4M9fhImU$%CQ6P><bmIR(^2mE;5JW&oo2J%D=Rp?XBk#qLOb9zC)HSfBck;9&XNF{VT<9E&B\nDy>o%o++EAVrwN>q8{Uqm6rnh*I0(U^e+p<T>aZ*lf;o@3|Hbi)?rn#IL{Z0lcy4mYxt*0kLkenL)K?\n)nM{MXUAwoe851bZtIcAQ626p2*@6)mU%H~735yqs-KDq`J7^lYT}(>ip7DEq>7UcQaC?!<(&%S#+uP\ndu4kfb*)$#vWXoC>&3>1LUY{h512X@Gh0JlI-DKC+^`cnb9NFeC5E07AE@OKX2y3*_-LOLrB)v^>he(\nE*c$$3AKtZgYs}K4>^SMgq;>FHUD+Fp7HXn{irdEi0SG{a07yEUZyp_AUSmM&pm9wh9NHkpx5<@Fss6\nm0Pn$TbK1EcqiKX5co*4~mwtb+OB)}SLGKc*nGtQVr9$(Q$&B&DP3H2JmwdXR<az`C?xojj6`5%D?l+\nH{{?@H}}R+EuNf`tjc&c!b2TKMV?7H2GM*v1Mp<e1H#AM}B5DLw#auYRi)gTfwtYso&gy1xKAB|F#D+\nxrOZDNJ2UnN4hP1U1j`_9ViZ?I=O;q`J=;j7)%T)=s=8q^P11cgG7|4QQHQe;71Hp$vDD*iS$2pi~PE\n43*(TQ8zPZ}ekUAC*uI9?f=81JY(}hefP!e~Imo3AB)y$1)j9T+DDb;f7KSJAylAiuv#u3a)Vx)(I^`\nzNra^?;cerl7*>~U~KrpFGqgjqpYaeD#JH%*s=t-)(JwHzUvCctRzQby4kLPl+FwmEI*F1COUHshbB^\ntA#nT?IA;zW##PIe79lwe^$=a6qMzAZ3lXaP=lS1C8&b60&Pikkvk$%w0S0U}MTMaJ1Zme?bkabKt#B\nViCY)o&O&%x>6TsPdx|@o8?P10pkr=vY6CQQOx_PN;e?h7(;K4plHzGYAkbC^KRU+Cp#y3w2oQ7(#aw\ng)<GCwh!bH*M*3x!t>-i-K=m|aJgjg<^vQYE|*bsxIUFSbJ}u*W;#zCrP_$m%-OZ(s2N8gBs-%hFWq_\nCMp@C1Omb{u&@q5N<M`gSj$uKcsp>Xy=~mH#8V~NoekY0*9uuApO;a5D_4oZLYLgCo=MKDbFDZ(qMq1\n@=&l47TujS?P3+l9>=Aj7gi1Vmz+?-dqqKmfOh%YuY1D?9MmRgyn#Mz9s2~eE-X4vc~zs#UflcQb5Ha\nZ$_G_I1ESC?iIx}=Dwir_RcpNJSVbUj5>Ec_w7ChMrlT<rTcr>6gI%dN|RC>hMTxRu?aMThJ@j>qF~I\nc;MfT4CF<BjnfD+#aZx;gBPRuu?j8p6hED6_^5&i6(O9mpM&0juTc)2JR!aB;ORxY46yW)930mgWcGp\n`pz8IyQU~h<`W#IcEGN<qn=@Z&@5&r>@%Fm9p^w~#hr?)<RJp}@hp6*XFLwB%ga`NaZeVWtBYhlUd=H\nc#F?S-KXg{ueB$s069`5J7HIDvY=U<X<SrqZPqn;6Vt$T2UykFg$O)NkiPA@nVWX78`dM^(*q%0=R~i\n_ziL`_dxno5a_eWD(?>1%Gr=u9^f9f1hNJ&CqtvyWLBoY3YNU_b&j%t6Ty%B((6ujFnvE`8O6j(_HCJ\n;(f0zqM0gtKfbJbMt2;a=%R2#zzgRs~%S+{6ctVAm57T(jWmI$@(*E7Gl6YgaJY)8Shs{L$7TVkht?R\nLYQuuw>ZIa#U9=SL5=>B0Iracili>^d=1T1B_xvnW5$cO);JZ8A!2m`J2Y9ise%|w|y>thZ8rBfazSf\nx=u1G%$Ww4Ddcsk7sbpD9rt|TkCl+*Jqem_*GT3r{MqDiirg88lv@u#QXwgV*c~*7S`cOy7-H}=P(X6\n3Kw`fn2k8jJb<bWD5@oIfAFG`pLyVN!-^Z-u%soS({Gw1dY4Q^*wMhSY-pu|}0H8EEB-r|n|0J^+9u~\nkKzpEhkRu3VuSZ<1D4T1sK-BysjBF+U6!;~Sxe0lXa&#61!A#<xGQ9sXRohe6;Q>pp~R`1^-#o$JN#~\nOYz#~z@?HW+Dw3PBhQK?jHg8R5uEvC^rbg=K=@Ir&5vLat+g@brSRj_mOKvhA>g9jms2&Xo;3F2*-4?\n7qQ!b)Z1zNZVs`gui~ZjH+8(*>Bp?B1jnn5-DBQ>S*C932Q4(DnbtL=&cZvLtxuzl=sjTSs&);wnr!q\nV<G*)6-Hg=<*c~s&8?JUqDtt2inL9&Eb1qUssJ*k&ixYn8Oj@ZNGLy(O1;;k9(haE`p=R99LjUxwy~n\nJxvjdk!LlUj&hID1v28|-fUT|kF@jdBX_|tvKKQEX{bkQ49_(%G4A1k3{E6zzx>_W&xrn_5XVIGxj~-\nM^U+sg(PsE)<X+bp?P<n{$imnuZ0Gf(e-t-9>^;Bk%sljO0h8n{lix#%gw!7S3uzq>$Zgm<MZKrbLS|\nuip3A`zI9Bzt(GZx7T7?udU)=f>HZUx33R&rnERu+wN>_R~i8EklH85M3xAGp&v;9v#nE~@FWypScgJ\n-Bt>e!rvAZjMOh-toZ8p#M<YMZL2eca}Q<kaFI3@CSo_-@ZEc?nWbn%9}UQ=Q|xVQ*9sMnSI$7X}j1C\nLerkx0mSvSrTF#rJb<R_%Gf)I_r0`e2Xv#WB-sdSHrNiTL%%2__e3?9&JaB7OU)V^r$xjQD(l#2T?LH\n9cD=HNsETd?6jlZCJ$I_>8A^AAJJ9GjKsSib@h&|b#Vf!1O2GCVR(2tJD<ODaV(O;TMZbVHEji<h!c!\n6u>jLuBmM;%a%fTRyrm^{>cQrk{{Mkn_qnpv*1SEd|Vj_c&Y%1slcI{mNbQX&Kw{QOU`_~uTN>M<Jrh\n46whPr^KvI_up6HIECz*xoh=<Ey|v}<{$8G9!0`Kt=`;S7=>kdX5H?2Iqo8gCqeTcHej4{2#8KZ|*q^\nk7`+t^$^wV|~-n^Kks3gJ2L>j6nFVui-6TTFR*ios0+ZIwOes&=~JofM@#_Ykd=4Xx`dE|H81*FlUR-\nj9^Fgb8s&pj5ktZ6OMYx_0_1jS@Pw(n>9+?Wn8?XPi;sMQY~PLi&VVyg<%AjZ%h$<*ym`%)wBwXJK#O\n3_jVh{B&JByCA-*Yu*mrMk#1l7ky+t=<tI)<EALcYtfp8^UmPgvq0gEGr%iN$JpRF($qVFD%M|3O!;+\n7=I5fm9khIG}9gJNM#=l3O)6lJsqF-+G_0OKZR6|AFg<KYU?%AR<sTyl6;8Jc2r&pF?Rhi5jcXIZ5_S\nN!>FV1#{FSD-@ptx1R>&|=cN7WH7Ok^)aA!mz7m(jVXKlk#BtLf>xv4D>RCG0Ep!H+}Y1XnQMJ;-2%<\nXA8q**qPsg=o%2lAR~wv(ffHB0CiE5z6S1$5(1h1$6RD9T5jGt<eE0L8u-|@K3LQ5?_7wxrvW$$ObM^\nUu`wP62yTvc)q@-*eQTT_tdEQk6bF9R4-ffmF7N+5k}P?V2yEHjX&gRTd?tIi2IBhRU-$8oOrbKjiXp\n^_-aFT9Bp-qcYyK6`)q8EoJ1;s7*c!U$TVK7c0i2=1ea?0TN_rDK-4K7cq*pz$z0Hv{(0nv)GB!maW!\nRg4<X?nMGE2WgS*t@Oi)kZV9SyS$iXh!C>8>s2mi=Uq>v#$c<4UPlHaGVV_Esc1}6kRkJy+`VqyZT>u\n7TrJbBG_@lu4^Lvn_F4Q{rA-FV_me1kXVFQyAb@u!p3g|OC_=`X-3$SHih^*6EjgJSkeap|$cmGKm=H\n>F<UNB0zLFrYuVrCyp}?8s5@Os%{$$i{t~2^m=a_syPYj*oo^EMk3tZlf=M{jnwRXq;Ag%oauOeiTH<\n^XVv{$D1(y*Y-9BJqv5%c+VuHw*ID?{hS&`yX$?Gha|_^G?7%l81^x)m5dA4^O!L3`Q}gpc*?h{T!vG\n32%9sX>&}ZPuk}ZZ^pI@bwfi0Q^9005;(XL!Ps0XfU#u+uT<H7_g^65;JbWA%hY6n$4{9;-o4Bc%GQn\nChBZgliaT<%W8lS-h!y-++wmXR7N7`?_=BTNzTip?5#`-VKm!v+{Y>THo<dSi$`AX*{-ML&Gda3BD<#\n4ymZ$UiTw8bB_io`ZSlhZTtV<X;!YPNT3+`5PQ3h|h}@xU<oD+~?*Jfu=J-7?Db=Wnp@t?ke_Sk<Y_Q\nFbYj@eBM+0Z9M8cR_K7lXJR@-oSo^j5{7p{fs(J72<+x-1#5nF!(r+yo96ds#^+L_lhD`)nnUb>o(d0\ndP91Je>t#vZ0f^cra3da(701H%Ft^`<-={!-Bit5L11?S1ie_b?T1CtIneMc5+0OHyup1!U~FS1EE26\n7Y!dzDhi^<L7}XvRFsM0oyFlr~5L;}&2ZA>u`S3yECxkwzP0`6D6aRpS4?iVYY<Kj985+>p5g!uKy6A\n<k`PO&heda`aqS2MDf!JE`E<X=Us}WTCAHr_Dlp#}C6OYT!!%MDOlH7JZs~Jw`T|^-!`-(8UGXkowf!\nJmOr?-!3@n-m7DDei*!KsQq#|7{MF-6yKGkO_mU-fUZQLH|!6OGn1ycEyeoel^OVGu*Y0nhIUv*7@I-\n250IHDphAJkY&cB+=yQ8H^`WfqJ9F>4)w^bE>~ic=+oLE2w@oy!bM^_qT@j4qNhuG%GBLjm#qqr~h4Q\n;&+=C3F1KC^QigTBpv^vAB10Mk`1i~;CSMZAkrP$B%XfJb;vD$VGxW#QPJ65Bkyp6iz4H0w1WP+Jp1B\nmIJwY^z=I`Z)M>KsS7-m0gndkQq9FtQ{+XDV?Kxcgc|*@LdEk%TmKrOJ_B(t<$M+^4zNVRu6?MRNHrl\nLDc8)p!fsGbVxxyTm;JXP42AR9-z^Sm%v4k9J#qoRaY)7*zna6q)^u;KnytZS;^zhKFw>fDr_s3!<&&\nQOP!@JP3nQLvWJxJz`q1HAE;Sq8_0sYTVaYT~QRZF^!@&8au0|XQR000O8X0rTP000000ssI200000B\nme*aaA|NaUukZ1WpZv|Y%g+Ub8l>QbZKvHFJE72ZfSI1UoLQY0{~D<0|XQR000O8X0rTP<r~YX{{R30\nM*;u<AOHXWaA|NaUukZ1WpZv|Y%g+Ub8l>QbZKvHFJfVHWiD`ejZi^q!!QuM>lJ%Uz|8{;>7k{EKxs>\nIG{z|QIuVt<%I+qmzprd#x5R1bf({yKW@n~mYCu1OYY*U>K&<d+y|;Uh2|PQ|1YUzWYOOb>?mh<>R)u\nR7IbtiuQ+FaD8hN9}X1H$gbasplw)z)YP)Fhq#tzk(xzHQa#Z}0#o}6X|;$))y?KYb;^E|m_EH}oK-i\npA372KkbzaXc*W`#BIfGm2T8$n+uz(iU^_mcKK-P)HxdBpO)kaOt5VO4w_5q)IriF~iOguDBz(CM^@t\nrLV7(oGY5|BTfWGx1_+CVL0ev3=V`FNkA1Gq*#{>2<-Ahu<>%&&?N5O9KQH000080A{lMSO5S300IC2\n0000004o3h0B~t=FJEbHbY*gGVQepQWpi(Ab#!TOZZB+QXJKP`FJE72ZfSI1UoLQY0{~D<0|XQR000O\n8X0rTPl@EPv92x)s1YQ6DD*ylhaA|NaUukZ1WpZv|Y%g+Ub8l>QbZKvHFKlIJVPknOa%FRGY<6XGE^v\n9RJZq2JMv~w4D>@qZMglYpZuj=X4NiM-;uvRK;uwx|`QRNe6xkXvrbvZN&RFO5f4_Qkv!9eF!3o%`hw\nQGdu6I>ebGcl;kSEzzvMtZztyEnz4t3Wq7Vi#HRQ6Rry%KdRPW4IDN}OcB@A{*xM4`mKYntv+-7XgJO\nbp%WrjZY_ftkOLbuW*y9pI&aUy+HfZO-r?Dbz`pqQIE|1>lKO-~A@bVFUB-i@s{4Qli_7vTOHET@LU^\nFWPR%2on6d;UN3RT1ioeWz~(lM!HKbh5T5`6C<ufU%<$U=I$~9Qvr(y+4pq?sEoTCZ^stzjP~RWsHHN\nSS?=pz4M2dgtv2GZZq-t(9sw<hD*(b3><bp(^|GjjgP`H-#d5h^Eb8N_>j%+v_xE*sZ~jzgwb=LF5w_\nhlKn=iN3H`2;`(kW{3W&jD>OuBH*EQ3K@=(+*zZ=dc0Bc^n;HfWar0*-3Rsgj&;`>^`-#-$Oie@8zlJ\nMud@zlr#LjiVY`2*~`>$6i)ekkr8pvb{`U&~%y7@WD(G&A4YXYN9E3zz{SSy_}oK0WxCgOts;_#`!SV\n)6uhMcnyDs^NbCHF)#9LGqtpwQ2x)lhuX>ynwy;^^PR_bvL{u9@3ltD%9b-zVG_rPsM+0I0a60hP?)%\n{y`2!RSbpm_~%xQC&WuuZ_dM^Yc*1v#X7Z}8bs`)rk>3A_-Ai6_J*Inq=%`=N4>n6@J*qlyUpaBu9A(\n)n!5d9rhO0pzA*F=`Qb4qHMj$nCK9Ra)XP)R%LMb^@SEgjKyL7V@PNqeb64}g0mak?At^t=l!v0Js~k\n)RY#vl%$Uz<C49U$xN)8DWK_$|Yj8)8bKxLQWWJ|%cY!X<$>AQz|hI;_b(d6!U0`l$ZrXJ4uP~5B8DO\no($K)IJgK8fEvfC{iHhkWdt{2&`(oHaT24bIM+8PQ-k+LoEgD5pSrcsf7jSgX>EZ^5Gg-~LyE5g{Fc!\nTWB0Ze);{``X~B{6zY;SRh)UMO$NQGa$?N^lX*qZE=)&zFsUqQA+d(vU=fIdYI+d&iBStz6ZIwWBd6&\n=JMU$VzB^gEpo=Ff?*+AEXVlfHquj;WtRxIY?a>w1vbL`=Z?qK_dqxq!oL+e@C<<d%c4;z`r_vAWTV&\n<qYJ|S{}vGxpwj3}$!Xo!V8R94DuV<1Fe7E)WglzsWd$K`P`+lLxYSfoHw<7YKoduqE$HnnD0^`XHuh\nZn^=81$p|h{iNq|uR2tY?<EuzG*jNcc>;<v89Io2)xx9qzK&7or%$lT@T=<|!&bf<^VTG0-sWoaj(-e\n00pdp$UWGTWxuL(RGZLZ$rz*a;06yvxZe@$LX@s;jzF=e9)STY^}gF@OR{Kv!JgC*!lhuHnvsgQ93F(\na1qVNh%S}h2XE~(bNs1xCf((%<4RVnfPV|sDOrsRr8_^1au~n1XP6T#H;J0_-$0E^kAks;&cZhOC0Gz\n<I17yQCA7l(4TK70)(h-aT6;P#w>WXra2rTh?jLEjh`p~jG?P^z#@}kFHV3rw1ix*V{B@bJDRaglW#Q\n*Pi$c0y>yjh>;7SfdE2r<SoVtD-oz2w;K$P9%7!p|EczBm>m#+)(S>-{ivvt7kiP^^1R8NGo~h+VFu{\nvQvY;DWC_s?6I*fhGY5<z!5$iTN$_V{dEVE_y8%W0LSe#Zs|BXi*%?kvY*6(oFmE4Wto?qcql)Zfc(h\n=>HnJF*>I8D^S?UU4k20ZJRKKFd0q!_z-nkb}6$TB)-N9^YI6E{D37=6`$o|Ys7zTbnxYX@OCyL3Q&(\nind>yZsbk3($Bxc+W-I6p*i(*k|PiLhH%p=qCysPF)@hQGuKih>!XY*2P5WUytqdZ+xdyPVo=c!2>6I\n5aq+`DcB^})PWJgjO&B(A6^OqUZ!ZzW^HRj=^wdHNOO!E2YJsCz^A2zp}=dg#Ps#1-rpd`vce}rccWl\n!wLjnB%jIW=MD8CXwI1@^GDgW}Z<(wEV-TrCOl*g77I5pw|MoS-<2j{Fw^J_n-eygAcIdJAAWcAx3Uh\nlQM76U<C3E;+pDRc>Ij*oTwf4E$@yw8kn=|i|0gOY1t}k(r1{1y>PxpOMNyE7FEt+hH)aTp}J0?Oofm\nN1ecXz;VbOJmzh?<CnBM94SolVTOstOtajy6ICbq5)rC8TR%sjv@`MEB{ho!AMwzq88RNAGX{dN)mhj\nO~j6(t-CX7`R?|Vw~kMpx{X`!H7E!G>M-#K&QJ~E%E+KN6cY_^H;D+MEz~VkYH6`uyA?*i9b9c@GvFu\nG&#+hv~8pp$q8|^lYS8p!BttLfctmA#?UCh@bFQ{`D)6Q0>z(AqMX{*s;RLEHd#p>76wLA^j$|u6F{9\nyvo<=~n%rSdVxbL?RbW4zx7uJm63A0ASU2K%qzY8f65u&HP6Y<?MuPJ!2lOWx@rom46J50-hch|06~@\n-^r0#`FD92><xWHrEbReKGdu(wo)>UDm){=@MklHCbWfbcNexxv^PDEJj&f?c!F>8(sF~9zr+5P<3mY\n86@c|}nlECFeQTmGGDO2q@jNL)6A4B)XFn+m97ap;ty5EzJd1QB35IEWE3A^O8|EjaBHu$kWB_8`Nb0\n3}P$nai^<6F|OF^=2DzdX*NBZThig3X&TY0qnMwLeGZQD7L?6w!q}S#^1$K)Cy*=y(!v3R8{WoYUprd\nt6-y8BLCen$5-NcIgFI-nOYlCe-AOO+K?paYBEJWwqlxzA38|Efbj<hmQztJixy))Py*TwiseBT70G;\n!Q9p3B0K4MM&QING1SyqND_X5dlayAal1<-E?lIkd#0M=I8{m3bqu)>tC@ieOTCJesB$CaFfn$L#+Xx\nVf_tqQYR&z<kTzFwCyQ?Jgshl1XKhrjGiYPZBGHYKLymWB}|4e=yK<Za41==F!pvP&}`=X;W!D%;9-s\ncR=*ubMr58pbp$%+#y;R+_Ky$Hn_<AdkS#Cg4Nv=kGVP+6TQc}D1Gg606uZJ_f`Sa~_lbz;K;b08c?N\ns<#AVwKN}2bqeX$SR+*4`;kNS)qxENRngCd3R<3C2ESE-+EqE?go+Ng-aT$YVmu=*z1Z|v|&8*!+)_e\nlRhByjGXS+(vJB7>tvPL`QUv<MH)_a0mC#<aB%!J7Wl>%2UT7^7No=MjRAQ?Lm@~mFQBa;mt#-;KtLg\n~<6@+B8Xi0}9Ex{v>cI92NDa|<6ZE%kR)~u2&;@W-gTGTgL_#a3H~qRBB*R87V-32&ScjfaL{KA7FzW\nIRJ-8hh=uu%K9(2V8^6{RGo@47Y*J8QD8Cv3yb3A|<02Gv1uq+5i>D!C;q3*kuxO*)64_G_0i?O=i3X\nrgxrP0ryv1kZp8<`Fpg+0oeigxesz(DwhFOZ~~>m~*6zvM^)jMaNbjPG=LHB}=qAnbJVY#6mrA#o=`)\nR;BNVBt!<V&T?XhA@fHITk~C*w_*<o)y~_GuQfY9c02bqp7)uw+i_axB*>;qRc9?y|xnd41Afv@cNm$\n#%S(ZV=2zv*t_fts!xQbgI`>P3P<Rb{6Xu0{A9l0gL!)GMZyz7^?@LBcZ#Yu+9!aJl1Ip#i9a1km$|$\n~Bro<L$QZG}{~;NuhGYDHLSR7*9e9*i>r&_$r`yUF$95JLBJ9BX`p2K}EJYL!GzAcvplXD%lqU-=6)8\nSJVGJK;wc_B?7X>ERmJd%?(Ii|8S?BYC&h@s5gTc%@<y-l)I8gQCmvr<?_#*@9&&<NZCDw5)!OV@$!e\ni0K-+uXt!J4goo{WJN7)=)95w@5BR4n*q%Lt?w`qHUK3(6;UH5mx7(-;W@<e~){xhF#S(?uE|(NMEFS\n2mWK>c5`LG^H6^uic0x8+*^d3q_KS8hj`oF!f<TOLqr9C)^?>hG=J747%yKMW>RUJ$xkNuyX@&GJzZq\nIH}aw4t1lojKEH3D_TlI3Q%A$XNNfshOkY0bT@o+<vDFhT!SAPl_*%2A0b)-WI2qx6d-|e#L^ccjk+>\n}Y!>UB{Y%H#|1HlX=JPn}pwI3I98_+4nDm&5eIdqQk}~|E7`O{YFOie(04Gbm2q@F>!*=Tl0zbVxGlh\nl=BlSK6kWD99;;U^q+rG3K7vv>#L{8-?PcU2i<%_7LjE`q;#U}^5&my)@`{l}ni+F6}?)3A90^04TQ1\nHI$Kd+a8@HtvdC&X<xQO!e(9%80n#TEh$fdj`e3B)8YA$8MWR2vu@v=otn@Rae3#^Dc`2H2py1`kkh<\n^p*DRtCagOkiE1e}YX(mM*WvbEU>3#lyY4M*lOF`Ea?7wy+S@KFVt}*33h<G}1y6f=wto7ouW8(ww^N\nwfd)980XY8B<U1*dHQZ^Ae~e>fXnsylT&08+jM|}i?3#F*M&d^VvYk^hG;mwNh{?A{Qk63eoKKP1)2<\n0SfI>~>qxaeU*9H_bm<mU1veStCIQ6QH%{p*F?Cv#rKd25yP*PG$$?NAgbI9m3xTR$8P&LO@ZV5y%Mq\n$3vjd^qVRx)9PeD@V)q@>Bm6R;g2lOP2q9`UVnOw!F8U(S5JeG%9ZSX>?c|RJ2U|aF7A7y%*#%~E~Bl\n4w2aS)63q{N)H_$OxmtJvQ;B{uu73!MZ%$zkC1&7|Q&$Bh!RJDh)`aY%IoT#2`A7Ch3sHWCG-(7C%Qq\n;On;n(d}J+HSGMxBN18$HgdVgQ$218ICz#)2Ev&eSVWJyHOnsk7sUO0hu|u+s4Q1NgL_Qwrnm!<g@%F\n9ACzwlT)2K%!3ZP15!&Qvx^`~v(!}_u3|}aI*xn-ef?8ow+e!7Us0jZZM&E&p1hz;W9rEuu`&@C8+*r\nim_a&aalqIqCjWCML|Gbze#CyDRK7c#X<k&UgOkL;rzWinA*)*&K)noM2$ONT<{bumG7;h9M*B|3r}|\nKz?7?nyw8<QuIvHXv+LEzXi}rZRt(%<SJK%K6Ng*9zaYB|((<oV{h_5uWb-;*}oe<_w$aIB1N&{01{R\nEEaJ2hy70~@&MhB^a_l7b~+q@|aQe82#YINs?aDCcCAlG9SVArt$#J0ryD0tqG49wQX>Gfu#`Bs=ZSg\n;JZ-D7~BN>uC?5jdCb6@w~NBAGaiO^QVcGx%U+Smt9|(E~9endoGwW38vm9h$yW9Xq;6Ts5^wPg=Mtm\n52eC@L{0gBQ-3gLXV(KMic-vKUe~YE_uU9qTZ$WEBNnMaiLfubhS*65yHgl^8a1zY4|p(boe;HvQUs1\nQ8m_hA1el5gb=)}g9p-9-j*J*PP3f;4J<{}1L~!SXVk$q20c$!C>L?7)fDn&|GvzCVGJ;L@<JVrT+%;\nOp3q<`#DZA_^?Y_w9l3BgaIn!Fjre+;lqX2>{t4~<ppdL0o`LPWh7A9SUzk0F^6D>H|(3DRP07j?bPx\ngt4N+RR4G%52$s*ROu4LRvi<B48%?c1q`lOiE%Q=sB0cLEyFnGi2w45l<UR4jHtc!jw~$=1hHmtIO&2\n}lF1{5zm<v}tj@+F&PiJwPgYfO)7$kHwkbM45LWPKf3cPMMvqD*8V!8TUbM3?a7Y@RA427p_#rOJiYH\nH?{9zo_muZ5o^q`bUfWa09b)EEmIh!?r^10dEI%J70iV_pgtPK-^W57IH0D33L#!`StJ1oj6dHb)RvG\nAI3LlH-v9^nLtuQxfp-+wSV+Gd&iZTzrqc<QK0}wi{Lg6o2_z}(!ums+A89>BE1^(u)5ezr%qc3tyJA\njQqGbr15-(U1ixrAS4vws<k;i7*1&N)+G%~n8s3+LiEAf4Y5vy*8r#q-`zI!A7_V0fon6d=bE&8)*S7\n9Jtp@-@v+hA!@P8U0K5_B%w53%<l|F-2pJR;W*!5l6Bqs2gm>W+W+Rp6-ZlNIkP@dKykc&bJx&~06Ic\n*}L@^)-uAFCS!34d$uKpLy_iE&Z2D-Qv1XWnEtjd{pYNL(%~3km(C>_I+F=xx!FH_tF1_^@Kwn+8g8n\n1LQgw&9^rM-@;O{x-7B7z{&|o35OVH)=m4IuuXD&^qwlrGKGybx)q;%-hKW@o0|33Mj<<iMAWRrmUw*\ngd9Lt-zu?vd@NFG6$B@Wawe)+a{zSg_U8}}k2azCw1xqT{RKb9e_0t})RvSHv;yHSi3`M8%;1OJu8gw\n8`VfKv^XnQC1LH*Q*#HJK!+Dg1|+&`<;1mgI+vke9*)3SCjf3=^QjLo&69NUv5^<|)s+i3HPeJb`Cn_\n7zF#x{Dak0`Oy-hii8VmH<eUg4&TRvV5B?9sDc4#?MfSupkGIbEMzd}Mb~$&Vo2J>HVycz;9yefKE#S\nmW?}^^Ucoz5uB*@p9}jQ8|L8+W6QC?0(@3b&MgfSb~}z>lQ0I_Sz2WB!xKDNZ}3QDUKa%s4jI6XML1v\nHrSp-B-yt<y*0ie?R$E!v(ZGBZu7T>j_U5Ul?QB2c>oL8sV^9mO<iFlmTBC8aPlMPHqBW>1S;d4r7tK\nsOzF>Nrw;OT{^$(x%{MNxH7NPzL31OV4v*5k9ri>YkL<TWS3s(m2-J1ab!d=mUE#Xt@@MRi@I;Id*Vn\n=vfV7QNJHkYA{CC&a_ceqP`E>Z;g22njAf?eco{=a<gL@cq)s2`gX(=-cg$TIddGYz3n`Ml$nu`uG3_\nm=LN{9G^fP*hWvK%wf$++T431L9`$pEw8lv~)hKzv-#9D^O;dP32c2M87DO{UEcBt%Uz(vEkPy6v5A=\n$M3*SdX^2ZgWS@w`m?mu)@rAG7+H|InEIUn{HHt2YZ5V3@=xEe)3)Mfo{UZb4e0e$GPL5dV-$sFt;rS\n1gLMKG2+gR<-+#uKNNk96))XZiT#Wht*5N&q42IoGIVl*zOmE)$jy{6Q1(ub!xAdh&`f_|g?9x^*)3V\nWbkBV#W2N@U$^T=<@}$bGSGA=jrtp_tLb7-od4v%3AE4F*HO?y>eEgGl&{RAzz~*`#mgzDaia*Fj$q^\nD{@z|ZW<jc-WpbjW=?e@LtTT@<a=Ve1wRNT&>j>BWTJyc)+`0hLBPmG!Q+dP!sfFsZeI7Q7S1i+dhMu\n;VF4Nv~fP1o8jTi6@gl<GQ{G)>T^PqtZWXf2+Aq{1p$<{<`1=#uiO?{*-+XZ%)$C>vRzOC3+tlPC7$F\njD5l_rWuFv$`{65@))fqC1@U77gw5=eOTGlTIJ*>H7k*Fkg$9ih79bbi8o`SxH#zz7ngefBm;8?|f2;\n@%JZ{5T7pO`kaD-vvV>HOc&(7N}Q-gQ%ztscMUEaH+zrG8922IC?Ld9Qe_b1%S(w927m58XX;zCb&#N\nlmGsFMyK?cj^n5~CX%s8W9&U`RkPPYiMB?<<{G!8OfA89Yp*3*ao_i_8Gbw-KYQ&chpqxt!bJrC-N2+\nfvTTkiLOu2hDRpiIJfK-UJ-RAL9q??fbba6e+KcsvoAuXljrAK|T!T0OvioecxUCeHsx!sP;-^w`DwJ\nkqy&`M!72;r<K-NPdp7-7EB<#lR+>>V+0#x@e?(*b^aVRUX6v<U?-O-M1*A~bt)F@+-fAk#tf4SmhSh\nB+d6dDZnve&{t<X}oey883gZAoVd72h7}ORrtyWPV~P(6MnwIO34?$!{hGu!uL3m_n!Un>D#&63s-vG\n%*>|tdf*ptwpm6=(juI+Qsa(7VppLP_eZ?zN{K>}!_6;zR>n1wiLc67V9{mc*$>M&AnkW$L~#G;>i_5\naGUf+#3vNQEuSnzPNHmex;c>q2b;6F`ZK$C5)SH2~-^!xRi4@e+iNkdVk3r~5SLVzw@CdQj33eP02sW\n?{{*EVvVzvz*T)J$6A3+ExhH~T)VJ-}qxs?7s0C;CEH+n#QG$!pc_cA@EIBH6k$bRQ+wGNf%7rHJMwj\nk&eg&J#Z4ytq_rO)I8I9R#`vDKfe8n~X0P7{ym9T2`e+gvOZxnv`a=72tL^!j-ZnuF=XLvEc<RXncs4\nT0<65EY#RM*MtR0W-*_Pexi$$WOP)sd&m&d9GhH=LDz|f7OI?-8dz=OfRopYex8<s*v~#l`>dw6X{&U\nB>Xv2=<sds6BRLU;sAsdH6Dq-`PN7Gw|r&$NC}$9xZC)9N#5j*{@zm(t#x|hI(mx5FmnZfzYerDU7$$\n_`hI<4MR7wf=?hAD&oVbcl=FbqI$k|~f^nzD36t6gy^HiteyYnO+B1bcr&9q@qo~_Mkpp;%@B-B@e6c\nDTmi&a3`_r47V^yqg=9?0Kh+CH!BL3w9L!ZbkcI?P3yOOI*s|4B!<3}6x0<t&;+onK8r-PF_vgsg3;%\n*0cPTv|%H5w)o!9SSWeG5siE_!)A^R%SbT$mcb{dT7gBpM?}P%6)u(}!WB%7J!}_E1r`1VX@uE|tFSC\nCYP&2WbUXodC|R2HN&#zUgg65aS2>#6;WaUcURW=!<rcb4OWRIWz5i*fK}B(w;W@(`Ap6D(~f?Xd$&L\n_{$o!vIA!7aWfug`dVMbn^D}ZXTB6odC<l*x1fu6fO#JrqWUYjKUwrm&0#@N9%@OQNtW80M+OY9<9!l\n?9!;Oo0O^>?HBhbAe!79RoN8?7BNb0Po5o+Fx+UyKH#~e20WF>5CBR+!7E5B5yA0k|iVH?uB|X`%cg+\nQu<~Z&y5t$ka!Gv|Zz6nMBLay_*pIj3~E3)@7?TpUERTy(lOC~Q{X^TRuFa8fuO9KQH000080A{lMSO\n5S300IC200000051Rl0B~t=FJEbHbY*gGVQepQWpi(Ab#!TOZZC3Wb8l>RWo&6;FJE72ZfSI1UoLQY0\n{~D<0|XQR000O8X0rTPoB`nv5Cs4LpA!H8D*ylhaA|NaUukZ1WpZv|Y%g+Ub8l>QbZKvHFLGsbZ)|pD\nY-wUIVqtS-E^v9(SZ#0HHW2=<UqPtAAOo6yfPoGHiWUnHq(ho*9}Gibq*KgB78R08>K6U)yCW%zeu>v\n?4u%;CY>~XT=Q-YyYLr~Fnj2oVTx-xwtb3`<G?X;7!fblc-HnqUl>7?aConlXH=y`!3pxAP8zDR1=In\natTS%N>FZ!Z<gszsV=y`R|?@&*nd#FSsKm~iB#u3zdOmZ-y4MLYvt$8cHLVd~Ca7^qGO`&(A;2-WW_E\nB^g3A$gbWeu$^TG8E)%P;VE&S*rJ@Gyu+-a=;%2`hM@e;m+;x9zCl+&x~Au!8k7!Zx;I#r109;aB^VB\n=2}v3nT?Dq`V(`_ST`i7*SuOVMV%}$XM)KUM`a)si9#Fp=Zhtq04$DKSO2aJCNoKz8J;ze4>1@y<$0I\nKmWqCQS*f1M>MRHW|Xo+^ig02)iH0y4!b2KeCZViljdphS&A;x7&O$Go1M*)NV-YCc?I7W-y-qv%M>F\nz3mKa=*4MY!YJgc{huAxbI4F)#JEuYd&bKp<<{Sa@5qcW3)W;xDMj(zfcV;cD!K`F$2MAkO_hyq-t+w\n!_llgQHlxZ%DUCCy-_ke!6kTea?j+mvSDv{?0GMzK}H9wGiN1U>eA|aE(1!=L{0l7wg!z06O0<mXDBC\n|pPbmy7R^vtM18@~&{y#2sY?aXgCA1uXImbX&2WtnMc8yf*V@4-ofcFAOJ#-xhIo!OnieQUU#ys?}~v\n!Yaa5t4o@2yJUYS3zdA<cG9OQc)zA(wwhxkJAdM!-^0Vva}s1`^h;vjRYZIRJ??L8kZmAVJ|TzwBkse\nA{yQfWt6ht#n53<$`;e&<*}TJ(#3hWpA$ltnj4{URbAe0JX_UR3Fj=TiU(5W4Z8xWClmqs1dP*vw_$6\ncu{KsKsM+sV7pw|iX@*_Itb}H+xj+%aFoA<wYRf+|ot0KsNfTLXdr5F{MrD|}X46IThf~6G61o2;kS3\n;i1MLP)J@Jhui}DF;EymLVr=D&@!#u2j{pP&>Ai6qAk2ff!fY%#pJ1*liArfg}t-KReZsU5ALt7&$kG\nTCsi}`{u$-zYGBDoN%_As+SW3JW`2VAe{i2|Hh7rWW8o!<r0V2}iz1)XDK&*OM~<xhO=k2abE^$goc5\n6Wyp9{IlFdSR$9+nsJABu&$63?ubYjHFT~8^+P^V5>-iz%}Iy{?(#s(96!)Ld|Y&Nb=^!;ezv#G#g{}\njWVCotYc3rQLPYIL^tSgoOme<^UckoD2gS{^<3dm4W(MJh9a07I)fQ$1xOQx;fS}f6>-p$7#C=IyFR^\nFN~$dVG~7DW^~yRVksu{%+<wV3*l%MVP7)E&)-Tl28PRO$7`g|Rk63}0EgJk0=wr(NhJv8XQ-Mg*hT7\nBND4?8vo`#bHdV(^zRa}D7J1}KXQMUHjIq|e}9-W^m6n`kiuM(`(;mr7lR_wWVw;Ip=`TmFS!aSLZkC\nua~pxkbI9?jj`!fxS@g}08mo`&(@8k~CF(nXm%`S$YC6=eUfh3lhF6WfM;3Z1@aO)#CVWbH%$pBAi_0\nqOhqgr&cl|Ik){nJKK2{#uR~%;zo<Co~4NF!XBV)on$UWU>|B0NAVQzqV>)!joQELl1a%>?(m*2G?kw\ngjtooapEnRqO>lI?}nzA6kD$$PT~`FDbH#d_3i^W9C#CQ5)WRrWBmnCO9KQH000080A{lMSoTN_ahnn\nV0B=nI05Jdn0B~t=FJEbHbY*gGVQepQWpi(Ab#!TOZZC3Wb8l>RWo&6;FJobDWNBn!bY*icaCz-KYj5\n1hk>BT6^io)8CYa@|Hwbc=+yrsf+N^MUw$GL?2n>Pd40|+OaY!zkBY7g|zo#Dk<YO$`GO|ccA8e7`U0\nq#W?<y+a)m77qqPn`u%d1JwkLsW%o2J@{_E5uXp<iG8?d4hW{f}qg|M&Uxzs$wc@-P=aG}Yf_`C7Jfa\no)-%T@`XJUes+~m1!{-7yBAtyeZ*%F4n1PCk(mH>o~cQWmYwDovyD_+&^yQFZ;ZaJ6X2M?0R0_q(z>+\nazn=;?AyGsOP^QG4%Yr%X3x`|#Qn>v%-8fPDdE*INH?-kfVF}3fBfj9pO<iAIA$#0uO%JX?mV3c`1vt\na+q0&rnmIk5m#R&RBE^}n_p7?8)>0{N!vDxN&C)hKFV_GoS1la2J3_>mPi8}S?DQ;y#h+6pp8=RAU+r\n<z!8KJT3l$f6d2N>c1i#M(zEKHM9kvXq-d%jVm9j9a|B4Soli_k>JXhQ7*KO5wXq7W@5}1|X;zVY7OY\nAf}4Cu)bGT=ryPp@%|M32LaWET?y#Tm?4x5>UKlC3Oi>9F-i3?A3xaCW&`o0X;E#zeCgOx{$Qq2d+Xm\n6`c{T4p(1B(SW9?ObdSLd%>x$v2@uE{IMHY?C5|4+h>3{5YAQoXbWmjljoOvi*tPO%no}B(uo`*~X#(\nlSz8t68Pw8(a1DAXj;n5&Wre-qBDJMy#eGZ|K;Umaw4AIRCy+VD>g;GZc*3V=IvIrTPa>1UY-jUM=7G\n0hjv?)Q9OBd_P=k=U!A>9UjFUk#~06&^JizzFV25BKYIn3qJo)rr9S#EUd*)71XbVg%RfeN;7KMoB2@\n|AL9#YDPVH|CcOx_L%^$6PdmB*dl5Zf2q6<L3*_Um;lftNxY9oT#G0da+;ik#DNR^Tb4#RSRKchsS+b\nKP=yP<&a{CdVRwGp`@At~41Y3Cy-%@!79Binsb3Oi-uy?kDkQj>I-Udv=ia<BPp_}fCOn^x}Xf@nP;r\n$qJsdqxP6Bk^i2kk~2@5t(;zR$*R8=KOX6VCRm9x&<x(G}Y9fz*GZ;Cwo)zBr)g&h6{7y-Jr^v1}ohq\n?cofG+ShfF%WP?P4PLw1>uM(z0d-T|y8voZ%ldauejk9;@7%mxRXFBtY~J{LqUugT!TEcdcW&NQQLWM\n<sn{U8x#4>^e+x#kKihvB;IPTB5+z&I6)Hf)9|*V{%|X@VpzmONvU5v!@4<kZucw7C<$E}*@>la4pZj\ns*QSLV^_yr{3DEFgybl87{O+yR~mdM@zitGxueV4cP&<Xi69%l`Y|H|3@BRMr0X4MQ_M`i;2ZP9ZlKZ\nj*MRrmVqNO-ynH_;tp8(UwW{F;05Cvg`nM1H=H#x?o~oaK^VYqNfTT$KJ_<Nwn{KtY(LHbBE<b%3kEO\nB>*Ra&1J?=h8oe<LNnCQ|AC$FYl@If52nH=>oP&OY!bqAKtrn@q`v$Y{3s{WDPDTMY*Z<aWVLns&yW4\nn>OH|ljdGY^o>*Y19d<|b7XmwH&w~;0iYvFDKjP73YLhCY}Z>r3*YC)d5i_Rr-(2{{0M3oUqN`P8Y59\nqd>DL)T?P1oCyP555}fs_x&8w@<*Zqln(}>Jp$D7R5aHHMPQF*ku?u>_fE%s{*i`{yr0KG#(<a?%gNP\nWC39iw!WoF3;VS5KUa;V!J0zwc7LYnsg;6y0eBJ=cH>?5YCeY2KH2S0-1*dWsGL@QN9;YQ5&t?9$6bh\nD8SAj9FvyLSi&5!*_>QI5nF(0fnUMlU(SUZ-%Kv3EqXw%Qk&s4I|4Ln?2<93JvQpO_{oJ<CGky?{tns\n}Y!j_{NN4eW-Krldfj5;rz)Fqrl9m63cHOd_Sb1Vf7+3H!uh$HF26z$zn72^`vo%+zg-m;Sh@QkO6Wt\nbU3^ak&c8TH-=h$;Uc;)c)SGUF`jYLwchtu=)_Psm24kAE`l@0N!PJ-Bi;$o{<){lJQLe5&9OS;#ulN\n13rFy%Fhc2raKr?uOLM+(9B&$NqPd{CKqBOH)`5Zg+an9GnIVaP^S~%@@wkFW1dqL_5-cx4WV_A3J9F\n#7LM{4GU<pUDNfMhx$NlsUoeXy^v#*-_S+D__ByWS<crV0u8}HyKu&AfQEBEklQzrv-147|{(`kt7++\n&*Atb4RBNX8jl55{;dDiHBzfq7cOepOXPfW8;}(^Rva*?u;7l5SqmqoCeWBizN;(*l1&%K#zE!6NSQy\nQ8;dCKUL~-re@(W(+vI_!*OSc<~N;DC!QnPT=Tt9hx5!9BuYAEc)Fk{zh&vN7z;-s}pbttp^V2b4MVU\nR@ORB=kU2X3pjk>@SsC-K`?x}jDgaU=b&kQHy{W$V?KUTr)b<^yDBF*r5UvN=o~2gmq^T<A3x?az~Pu\n?5m9IAl#Jh<<L-C^Ry3(o@XqX!={;CG9HKbFdymS*fSY+DsugJByBh8kU3=;sDFtQ(%C_g=0+WT485I\nwv(F-_5lV|8>3AJC5{6_ws;0CO(6H^~ZY<XdQ(7IySm=BmSVDRq|82N)99Fz|u8^q7(bb858y6U6SVe\n}`h^oG7-@4X`w9o<B<8LFRz9N;(+?c=;R79r@U|K6d~9~(d}oHRQsDg(zhqvqr{U6Fg#BWvhGr?&P{&\nzTL+@sXU3o&7`*69PZhvdn;Ga*PogDX605O}lvU>;<M}NYcSLE!cD2$+T4B7FY%AjICsMJpk51P?CbH\n(%$B4?+#9I)h<1V+msz-a*H9hXi&M^g1|EqBH~XA?qYC|0+S(hP~1Q9H=cIJKn!j`7_)?vF4Nh}Gu~V\n)9H?rF6hf!tS4>N$-enT?<!nH^JVc@N&N$@fg=(sI4qM_JK>tL%WJ-9m@X{dGkWF!*$}&2u?G|oso$m\n2A@|HuU4j@fZg&L;?vXb`EQRKd$!Vy^m;1Z=Un1)+c+v+xmau`$v@fVnFSV5T{9WP<pB@Sj%+R0KQaH\ns9v^lx>v!b|jdzwS~9J&kJL*83JcKnU6)3e>p)4BR>3hkLF>R+Xo%$o6#sY6e5<wuA5cb!@1!6wzx58\nf8`8aNy2c#L>VJI_~HZOM#rw^Xe$EV%e`R8*E-Mr;+IDzFLqg%IQJfGw{~BdY(jF1}-134LpbbZZlM|\n!DeigJ;p_HG-xO-Iss7*xrA7nY=01M#grrU8x%Ojr)s&Lq8K)_xyLJRKL$7sOC>c`B7N9XcgD^vPt>n\nu>*s8PwW0gmkB!Hi=^!l@6b`2!PLk<(0o);zEq|QY|5%p!*B0alL3|LslhH{4Wj}Vu0z8)#5^sF!fte\nHXfeYb78jU--)E{SZwZEE1Zxkv#TA1nF5L5bV70rEsaTvOpE1}wYI4Q`#!1$43ZxPhD9CTf`@+xi}nq\niP?2GPxC%qh)Twc!wY;2{Ng@{$`;rfxFM3~6d-n@FtJC^V(vxWCL4pK0CFgEGfx1AqCdxkpFt&JE!k)\nI#(o>KFvgY2>eP=GWK*TJ!SkrTE>q|Eb$h#G6+?g{CsM5!*OxxZ}ETOmC~tX?(ffGJV{>hlxKH+A;*+\nn>-`p=+Tfq-b+g&L3A{^AAQOP2|<^^EDwEf7BWefu)YLfOAve8#EwB}3Go>&F!%3)Hf6cgdf>x(zyWl\n4m*ZDXTV>U4SyX98y+<9XW+0(c5tPQv&x!a+UZoK8u_MiwKwex{Nk(Ctg6F{i<DZqurH4R5T#(^+IhY\n-E$I@oK&2J=)P-O_fZqShS;S3&Ys7q^@X#-V@|0a~Y_LcH-_~QF)?fFuBm^YopeRGFDxXrQ%Y+MJGrH\n@v4@o?N_Ka$h-WU2oT2T^>M{kT-i+EV}T1|K6^q1QFmgEkh=40Ih3^WIFLvx8Lh+#((NU|FUp;Eq=Ny\nvWq@qS?!t^<8@XP@n3*AlQE&_vLfhc7$I)&<fM>4}RsG9XQNguD0B38%Bot*Kz7-b6>CK+^MP&XLc@N\npyG0zVMjVU9*KF!%3wOtkog&xpn7$zBL)8%@+Kcv9&;{_BNYCem`bhqd9Q3oJkS;#JDpTe6o=nZ-XDw\n?1iM1Q>!vuw0T`)S1a65A%H>&b<m7umsW^~@Q<NiB9z9l)av-pQ2TjRV1g#8U<&O|2K;*@<7Yp$kTS*\nRpQ3_U=Iy*Cgy|5LsOe0N?G&(W+`l?AYi8VSP?3H&ab)DCV2C)>8PD?n%qAn-&<-v09s6zKPnSEr*&?\nYK5Md2;}{2HMF+p7-tD{a*Z)8E6zHVRmJ1-DV*AFjQH$^Su(WFir+#Mw-|U+Zwgz3R#bYMy!{uU5&Sj\nt|{rBR{tc=O1dQC^oXmzi8>JkDceHI1EF!>ygkb_|$UR(E{4ka<MNbUo0c2Wh#U-AT<5N-_Zo(7s>{H\np{$*5w%0x{l^Y)1vqk|MCY?{YPH{R1;$)ayre3oQc!dxNiY&TY%R`F#pQzgmliaojNL_6H$~oE6cFUR\nfYc_J5s(MSiU&ewgr|w+kWOusRm{Pk2`yWP%xFOCO6(%nQeZ^rez>6_w(dPuKjh%6$#}a=9Gml?0(R2\na_#ulPjqD2V-X`65Ibq?z~WY+MTwC2z?LK_=7I@`WK*;~oIV2b&xr6x8dP0QD&DvIisK8Z;Wz}W=lNe\nlu)mzIisng6nvf;F)2PC#)Eh<d>dYI|(R^Ska0BVqXiOi+u?3_(?BuDM}6v$$AN9R#=t^_D$@?_$iYl\n|b9mMj~Sq;{=Tnrz+$Dvu!#<f}^zLn}fX}uFn}R=oI&`_E!|vCs`2$xK5G!=vAd7q;~~QqOmTrl0aFV\nUpjDg5i=*iA5te6eoGAD37IW8dBv*%j~LN3`<qRj#8LC1E@c71xnUE|&D?IPlagF9EkLH+qdYeH&~e>\ni&|f9u`d5z=Pg|{!)`$vC0R~W8@>D^Js@)FJu$=Vd(q{Lb#NQI$cI>-Lf@Q|Pi@%M<k1ROtw(=1(%)k\nz4we&zOVcCQg8*)XP-$?LU$x96x7b%1YUX{6$=5Tz0sr`_w+o||~KnO{=2tUzsgRGSn?rYb#pyMyy_-\n}?9wHHTK`G-Przg0rFp!%SZBz>q%kHU1!2ED16OAm8agX#w)whve95#rx!(@N6!-O}pXQ(j7z!R`18!\nLxd#$*jPKnQYUvYSA*e#aO&4(SVH6fP1k!s2L8NGd?~J@JOX+;4jT{*q>cBq|NGmL*2}sq=uL2gg`JY\n54IgT9=t(v1xQMlfo|Xd`?<!3_zPmbX}<y?XM`G&m=|<IU&kMq*mVz>EB2nemJ`>pgh-k4pA(s5p%>e\noMsmx53BVA}ELNbk+G!-Bxp>m67)N*aZ}09e#oc`rv->$^SkXL+f39+NxHVB`yv3u&bco~f&Y}x}-CR\n>tzvYLIYX|LzMhJWEUvSW;@#PyeJ)Sf19zEG`(6F5u?FivR+BQEuq$7rVNECJ?pnJ4VO~W+q`|9a1lH\nq-Rdf?cj#Ao(7f=me%Dl1X_0F<`rL7k!42_tu)^kg;-S=Im<J*}UXd`Kipi1>>hDZ({y!yxw&Ta9UhU\nc2!Z4RT#J)6>!>vFYXdo{spzlyM9#&WV_!4_xA>9^b8u!R81utJatVF0Z=nD`R0VN4@Tod1nJYK2GoC\nP_ZM6ih@*1<WM085!YJFy0uQU(Igwsmf_%cbimW(%;#62CnVYGeW?c=IM9Dym_Utoi8affK*aP19u#`\n0TEO{Ij&=VzQj|vkn-7E5@?*i0TR;&LCO24y!>u|7LidK;rcDWV-LH#AUn}vobGU5C;zG02uhr>Tn=B\nzd+$!rQjQXPly4yZFlD_FsCy>1(C-?F>56R^855TFN;e#bZA7q*zAF07JK4Nm{1o@qVO0B<u>pAm+d_\nMO|4I(Wtz2Gf%AzDAOG!g45!~yteq8|dBm~2eoT<h2(^(qrXsVmcj%YT&P!6h*EP3Qt1QUhb9Tpxlzz\n~Y5z^w)~;%cZ%9<M{G&AS?rI)>%K^bP>#2j{N<XX$PFwVcYAy=m1m)75lH=E`EF22?_cQK2dCpJ+Shc\nV~RD3Re*%%Nso~zdj?TuZt4%lg`E*kfOjqF0bJEJX^MvO5FUG-08bTYndI1YBN{13`uYR&JeD!>;TFF\n<<>|48MqhpI^P>F*mT~DN4sf#XG-?p3nF`#kmvM?e`ujBf_hjw@8k_#4M{<(K|IW>)S3W)-=Er%mpZm\n2=hq417{e8jyV*Xy}%Vz5T0Z>Z=1QY-O00;nPviw+9qs;9BAOHZ%egFV20001RX>c!JX>N37a&BR4FL\nGsbZ)|mRX>V>Xa%FRGY<6XAX<{#CVPkY}a(OOrdF?%GliS9T-}NgHsC-L0T*!7Mbva(~a*iy;syMRBR\n^qreTQHU!F5v|M1_SPj+0%c&?w(iA10-c9cU4!%DqBlnrl+T;yQg0>thc+aAF^fF4&vR=)HhFR^<=$o\nmqXVz(mZIo+uORmeX{PmZ8jWs@OP$PO`c@%dHemF7v=LWUp)WAtJlAu(WB>8(^NN&P~X0&mxKE2W#9c\n>wBHK-_0=GH*NnamU9Y}<RZHFKkJSzbRbO6LTd{h(-<eKd?}oZ-t44i$(|1F+?DV&9#ozX#T?+F}!(+\nYQ9(Ll-l^$_f;fT{GYNoq-SCsdnU3Go2tCn{a5~1h;WZjFcXa{Mi@T$G9ntJt(dvy$g+=*qqu0?PAe`\n}rqhR1sDhq|$yUU&T#M*X{3Aw_0@eA~74k{*>UJURyH9!3YM8CZW-U*jIVkX>^xfICdnZ}7<;N&X5RN\nLj<`ae~#rPCYC~v8<LGVR}8sFE84mKg_c4HbOM?Ak|I0TMAlH>GRkZzzuzULnFWLhL_#GU1_dq<$&CV\nZ(j7hVV^&Wp;}c#^{NFHm(UxQC4586rXK#OmHQozCsuC`!=`IBO`^AiK5|I{`MO<+cbd$iT;tc?OyiA\nu`jQ@|I&U>vro-<lDfp~s*{vALl~`B%W++8_U-w-bFq;F`twbY>rf%;HyszNzBTXN0UZyQgGS#@-p@`\n!06uVyRs$Mw8u-yMfy-Cgz<fp&|8TvhFnLb$MTCHUXt;$v3?MhHheI;knON3nF?8>TLl`!t#MwSG}!w\n$N$Kb&SAhPqY+8?n5DF2o<DLbn2tC1^h}I*<{J;s#dE>4tC!P*L~w2oI2i1AVqTAo5M!)We}1s#{AX<\nN(Ww;{Z05+z8w0OZqn6+NuRUN}p6_K~G@8VP7@Ci>7P8Z(D#=?vcw&_g<?Ak2KF=>1yD3P+re1iDy})\nMnRS6h5@&H-t?kc9W;r>$^oR;C_urZ7pr=}{U&@&Toyb;c?lkA)TGi7!OKdPIJ<J`9&1J^)~Kz@cp9X\n|EEqWhZUF^iAG~VUoraLwb|xD4T~jaXA!1@5+32<1bjII&S3}SJpr{iy1Dyy=D%Uj<)O!m%XubBWg83\n6ASWP7*uJ#&m9-dcwDJEvip3bQWe%Ng1<MXi1QQ2TiOSmUbo}keJ%6DO`mjamjD|$95X?rY7K=U~?&?\ndknf1XdD(7pr@(PFtm4glV~25<&(V6!EN-Zx#x2`(qjD$&#63pOWP=8AQ=R@AUu4^3!9_{xPrH3K5`B\n##0%u@!GgO$>4`D^#clH9Tw+Sqb7=4`n&Agp#6J&+Ip~Kh6D}$-UP4y`QI4yKA<s?nKE{^Zba)bG>M{\nDal5dTNCcenFiOcDNMg463BXh#y6d@?r08OzZ5X6Mj(7$-?m+E(L>@T-|NMa<&JnPY_&U-+F$}m>y9B\nzD}F_4t0;==Yv7#MU8@zsG`su{`a1U(pfHBPLa%`T){q@un?Hl@jCRn7eGA&D$vCwGjYkyNB$(kefE2\nE=+J4cH1(@N>ps%-l(A@hT62@Omq>%q4XrEp_=$3x*B<Oy#ubWl5uIgqFjpoWqy^8EfT-C?-L0_^xEN\nKlVD+u1sk?bw>J~Rd)+NY9GEL+E5oQ@dXB-4nIt{;JC+v10@zIE!Ze5d64dKPZ27DRG%Yub>}V_Dp@d\nL~o1jIhhJ-4IK;hbUSni!s}IGWFVqbX|eomWZj>3P1R!us#><D06xkwFDNX7oe>Xmjc+n4~8%%zMM22\nLhIV*uy|QDQuydOdV$3*=I5dQUeW76cRd>K!@=$kfox3>0_iN&eta_?_I;a{&?j!QK`|=pwGxb4f(7V\nSlXMippJn)dPR3P2Kk5a=HU+?-e*QESHvT>Wv!tD4LjBe?7@V*iQx28d6^@CxA})riNA^%k0u2R3-tp\nmNIz5WRR^Fnf${)Sq-)FU?$yAvgR-+3lYS_Tr9Vi(f=(flmv8x&k<j~!mzz|bLYf`zPsE%#(Xq3)V#x\nU^_0hu!q25w}V@5k;>@Jc|FqUL8CV7%8S_P{^~IAW53mv`a-eJ1s4f~Zbs*_x1%Vwglhjft3&Knap2f\n;)8!Js9)H4dC{^V+!udVsgz$gOP~r58^<(z&PMwdNhlfMsCK)ws3!@w9ZM)V5nuJN40di7Xg<zaI|Nm\nRv2Rxd^eB74rlYqAhyWSB4q(GZb<M!v~J`kE>3N8R|zG2=KARYMmNU^f}Yta0Z%IHdO=F^sNy{bNf;V\n22=$((a6;Mm%{`TzRtBR?Xr>hDlYmoDnT>IZ)8YR}?!b@QN3D7Z><QOSTdS<8j@Ml?PP6Zv&EsgR)S_\n+T>Bno!dqf%Etxu815QTG0OJP}!sBJk-uXzSKO~poJuqFPF^1$hto@Rvq&4u<?(Gl@!_V(*9z6R?W1A\nAGeq&~AU>(u8ggTK&6$?5@DXaED0f~fGAK{NJywr;9h@PLNprtr*C6?kpaj)u3kPqXiY#R#-6U_-`%+\nhJ}5?06b8z-rYAWmpi@A^`S9*IvM@4iN8AuVPrQx~=NANO2UhnuoVpyu!@TN7l@YtnT)dGZUG@k)G#V\nH4f+s$3&To+@eVm8h#p&CnH3Rl#aIG`hL6>a`A!$eYA;Y;Ke=9CxoAA^i=O&lVlnrOkqqj&>#tV<3|O\n;3Uuqosg=WyzpVNda?90Cvlkf!aDj;8`XhPu?0TME9YoV~5BL>$SPa+s_?(Xu{|K>2S1lg%ZPnlHclk\nVf+waBub7_X3l)zd35y>t|Szs^DVa_9tSyE<_;e!vAmlO~?S1$<he_l>fV)Fk&VLm@oC=$<4F(5N6DB\nclfK*kIT%;bR)X%hD-|I#(Kne@4rLU#>R9&D~NU|wi@4QzHKF5H?N90+{9B8&zMc5$o26fY#rOB0%+`\nJ^bw<5*yxfSnP~6*D~z{YBA8lT?skpkzar-PZSHr&J73ZbUXOvM)t1vImj<xR*n=+;kn7HE7VR>mDAk\n3<Uz~#SU4RrB$A07=!J|2-+6x@t56BtoKcGAZTy;?nkj4GRh;P*#eek-{TXqW45&<`v`R(4Zerz3kS~\nNi&0x7*3~CYnO0JYesD$!rg^j6CCoBnD~zX5<~`fuL~j747jLp(fASj_RzcOH+~**iz(E%(YIMS*!BC\nHlPdIVIpakNN(@ZS7o=L6K(LZe#9?xh0vasM>O^Mf5r-4mF^>s4z0AFWv#gGa!YM11{_)H0c4!AfHk$\n_{sEaCo6PWxc^$@Bd8Vj$LVCNENxp6q)}?KOu>XRGTCqJWNp?fYt-U0zaz^3vrHfCT~n8Op&!)vAF^`\nHQM(!ZH;kd;kprfKfinWQUz|5D(Z@RylU)g^uoRC~a<V^KEQU0m-0gyd{k(+vNW5hj<fF5{mp@`N0si\ntVaSO$Ivid#a`<Vw-!8jjq|MsX^Ct7lyyA>;Mmdv3+;fapzIIXZC~v+5e*T9<!`JV8Ni#76Mw#@qG^V\n@y%&uDM^G+sqnw^U&p29mI)r9E_;lgp6z|YVeipo_g@24PTBOacX+Xudp2z?{R@q(KJ+y51q6(6NEnh\nuE^sQGD3uQ{`E8P6fCSW=kN#qg89F+I~Nn<2M6HHFrehS9qRa^ye9d4m=-#FISVSN0jyb++>5;1Y}*{\nR*CJYtbrW?R_5;zmlDE;fN>5w8<$H!bF28e|)VxJm(4J1pEl17b3rJ_**AbpOA7HqXAV+B*<5!_pa5T\nv5Jj1?FfYq$FudZvan$<5YDB?A1HqPGAuuo|F5!$}Sd*3k*HMzl)10K&l4X!EZtZAiG8Y3|;X7W8WMA\n*1<#0=Pb+y>-P)%GC@KVCbOg8(5{ICBHJOM0zwem$P!R*F=>;w_YyfP^FjD>M{bwxn>2S(SMPLn8}wN\n$vK&Z~ryJu(vpQ;+a{&H=03LyddaZ7c0y7&Qs7v`!51UC|e4HoL+gTuw;jiD3W#F%eS_m}N;zfyhnAe\nqPpx}{J;6cH6JsYX4QM1eT0-p!0#JNN_SWOhWB(_JjV@w$TVc<+*J5@onm=n`f9Hk)ENTVTWN~Mck)e\nm*mq@Bs}y=2@c#5W6zXu8db?F2t3wiNR@;h!7dobVZS&|}~8P>V*B+wRXuGsh{0)%-#@pN!-ChL6LzA\n?mk_yg&bSxc#}e)6lCm+LbxBYF#moek>o$%PYadu%2Yv&pnn}@psOYkqve-xM-{WQrO+V?a<QMz?6PK\nm$C&RQDa_$@aSr07T%r%vsc^HJa|c*wnf0RMBuuRyf4sd3HEZ<2Y0vIJ%9)A1Owq6$?~SU7n%q~h=rj\nI8bjJ|fnIe>E-5%UYIr+wKH5dv_+w*m7Xy`$_V41Edyty0yW8)GCuUg*Y64v+<W0xDs!33Mf`LNU)n<\nZFmA<A#k(xshiCI!jVP4?^=!ORRZU@BF)Nwu!7~O-iZb&Q2O}7VWt(u4GAOlc<J#6=0b|phEXvS=iUR\n<DkakIarAm{@=@o}};CA0{_YS{^!yH6MGJG<Vxu!5=#vb^og)Nn-KCsYdPRE|t9mFL|$ArEDnRc($&u\n`FrlNPk{KVfxN_&2tnCIgvvD+49cjzy$j(<(+y#?eaCyD^CTbx*HTOsjNkmSfC*WRlq)6Hn1j+c{(h-\nfkwIFtsJ8o$a*eG3a(>@whS1d^=;i&4Q+|&v7;E%9z80JCdcL`LwjW)joL*xS)GJ$rfH4vQ?kMMN$=c\ntOFn*{VdCeLr!gSfwBwMLW4=Tmvy;0D9rKBFk)2{}8!53$)SQqDc1DzUOg{YWM4$Uob&Sb9@;Vi=MW?\nqG$^O2~T%RwPrz6I)w9Zj^bC}x`a914RnX7)eo)Ltz1IkZL^|=x^y;Wpr2lZPO9=58TlhMgf!dg*r?V\n#>~hc$IPp6b`rwO&`(o>1y7l4Ee?mOJp{mENVW>4)r+;U*9>Xkw~GwNinO2%HMr9s@^ID1e*5^`c0q7\nrTG8_5xaNwwVc5*%}PM!3FVg76wrUF4WZkt*`ADGRtVob>p}tCROT=bW*`13?(P=5yilD0&5DqDsI*2\nqFMHYtCo<6aeoS@qvOk@{j7!B@5WP>I@b9C#&`JfWCJER8Nqy(O{NJ2YCbM9p6IVFiIEiDIiAyqC>=-\nm>Uty^P=2V8na^3$VH+QnlFwJG^Xw6<hrt5qY}Kg@k}AUiI|FPD22jU3anKo<8TE4Ga#+4sK~=cA!p2\n(BAhryc9RM0znBoGyThyqMMnSnu`V%t-PvHZ|Z(ybvDaSp$$NJw^g*nLW^<0yb1ET34m^8_>z|WARvn\n<?bwVnHLECLnnq~XVzLpuBS6QxFHH^S2Cm{6p!gSAz@rb!u9x=x!%0+ebUHgPNnn1|}efqRx4pyv|vn\n=|Ai#^nz+z{SuNn!u!rV>d3D82%QJpd_w341wr*sWLeW!~J$;mSh$9I|~lKtyUrfwq4#KI){vU_sHHP\ncFH%LOcBk!$BcR$42s~v0!$pJYV4(-HqZtbDJ$+}f<k>CY@A@c3Y}v1WtMVv6o&}KW2UIlf?s&&ORzp\nqrBF&sQ_CD_ZU+S+30C89qI|)^CY_OT&5dtzB$>ckr4kDGIT5r9*C({?!+@JVfn^kKU8?%}h)|L3L_D\nBNn>Yf#2M?AGn`2-r1B9qGB@BXQlsDHLcf!nc0HYFD-bJZ9=7$9i3$1F>7tic@%+f@lto4q;xrDFI?P\nkwgw|{@5L*#wJ*{-DQmUTskNVF!>!MYeb*xT6Yln#qOD0f7=DQP0m0#znK<Uz5i5y%rK8S1d23AF(+Y\n}M$_;vF6j@D}QlIwT?lz{D9=E8!g%6eU=xKpv*N4oDQ8zyowZ`|Be~XF<inRzTe`Q#R3&fT^~paWNv%\n@P?GY)x@vELzklUJVT{qsqDsz!1`l*y$F#)g;Xk}sLYmV$*UsgV?fDbK>C{^2vx?d@K@yq*;+gZrsLo\nxVoujGBsq&!BNbGQQ|jfJgnT>=W0^+^<?>gUh(we=0-~7(zxYUAz=C7OSrz^qx_zIqGk1v^x!RQ9jJ(\npY$08P@;S;2y^pumQ?Q)d^(xo%pwDn#TM>2*g{&Di0yf%W5^c-(IcEIm+Aj{GqtQYv4BD-{6*VVPhH8\n+$82#Uj~PgKTH-2*aI1`kbs2x31!sB>D;_H6<e__k^f0Z0t|fjJNc`_)Sp<3~$f<B0KH%moaXpvI&&X\nf^@zwc?ZTLFpLuPYUW;@}3#lW7n9dB@Vd}S2|NSn1lewB7C-3&B7vIn;^xJJ^XxN+%J6$#jXN{`oX{j\nelo_G+NrT9;7{Lt<*|=GMWJeE@jOBTCgZ{i?>GW}Ql}fT&s*q;vs)2hQyYgT$S;xe8!!$qd7J?HprB=\n<y2X(T6R1HrDD?;wQy(w@yUBv%p2pNkkjZK(R~5e3w;L*ZY;R|osOb#GO|`s(bza_O6MlxoLEKh{8)d\nq}G+-6g(G5=kVG9L<6GafkDVA)glcH4uVCsq{^gUX<iv{QqvouqlbS@|9fvEwLrNmYyu18em*j*us1D\n=k#1OF~kh-$W)P)>E(C@3N{f)C9iGzYcwYg0pUuuv0=NpG4|K33+07bZh@#@QiM<Kvt^5!F%e`dI2qM\nPJh;p6PH9Gp3g+7+v;V=fw!an14nMPK1%2wLE&m3Oh7xnt%o$zmVnXdX_!D$Nz#F-I*=Z743eDwz-%%\n9H(i+fu#o$EcgQUU{z^N4s^AoNCbKLJhGMW={gXHEfyvpyKpLDMrhnLfMfC+-DWY-oss}YjKq<!;%Ip\ncuXa|U$=oGXtPUpyoJXBUYqgzbNTQD2C>y9*f-TyJm?oR5!dX)^9f#SHYUmWS1xqRw%IQRJGhWy<c;r\nk|LU<&Y_aXjmM8Tv1!VvJhghg0WV?OcHjPh9=*EF9|zG7zu`rxPl15SLRu9(pV0vYzU)Soy-hb-Kp1-\nC4nSYp5Rl?NM_yH3P-OkXdc5A?)vIq4o2&3dyBV%X$Z8sk@a>H>XE9Xjhe+g@s~)6`!xsMUInuD-j~5\nv+<`y}UygP6e3o&<%wG%t2G#1q-|JHYth+^cWMX`Kgm#x7#ZnGslSHZa<Kx8sqzb|0tKiFZfrHyP@Mi\nZ7knjLP=Br`+kcdu-<qJEY3;?SxobpiP!TmVRff`XlMzFy4zEj@qmHIOF*`jH4e!nSl!kkcmM|XZbf7\nUcq=Lj-7s96MwKoF-a27<UrRi>LtYB{?)-d>x}6Eu1_eIDn@A{ZLB|hgG!Raq7f5jc-}Q9Oq|EMc+rd\nrF1dWhfL5Nf$^WO<(1&%N#4m*K{i>BJ%tg5V^XT447^#!k^c8qHZzzs-eFPv?`D67F0AFx~9@U^~BB)\nao1y00eDhSj-`BPQMDR%7K0tPVM-?m6#<6u;i#NE8vTMVY4Re*RgpM0d^t3<nlEv|#@^Aw+km=^qd|^\nnt|zLl-7Ygas2p^$!jcM!~??h&VSmI1&s@7zjTnIH*#?r>=T)mEQa=iAeU(Hbuzdh$LV{GR+lkUOB>P\n@r;j!`iIiea%2x~ja(1tkw0}7Cb))yO6n+m%uhS10GMK9dokao(*04+3iyFl+MmWiKQmyXyEFM>rf&;\nm3xNd#?3%$6S@jTVY<3k$c)5q45Md_*&85)34*RO>?y~*P#VGa3QI(V>6j;&Xt9ACn59X#svxSu^jrP\nM2DA;($VWuO}<_H^u#VWJK5^p3`kM(6;ShS<!rWo_U%h0LPai(_mRlO#oY0&3^n4YZkao4&LXp23xO;\n@e($cuO85Qx`f0ErCL4Ib;=^xZ?YrlS`I7{a#aXwklVx$lv&wsb9shb`J##%@9kEex=4Rsyz<Em(1Ks\nF$ir2<@BIp5nKND4yZ9iQ{ajw`0Z7Rzmn)l*g{FNik;xL06_ESPVaOA|ejFn%lNVjxhLF3NFU)8BCV>\n)2)F(uX5<heakP(OPeV1Z8ZEUt;B^ipQ{*AkEF+f1ed34g;;5O)}GY)t-S%|w-(Z|L!gv_w|I`&Y_OK\n<dcvUI++~_E)N5z&okU-qajOg!qWAXHsI|Uto9+fo1H1;bP-huU0UaL*g9Qu}hJITgGmr`_t*J3Y3Yt\nQL1?7r98iAi#$>y8!Q`f*B63qsXp`}=nH`JkgDyXqqj;}aPvOir6d6FU)p8^#37RFV9^CXr<xPC?55)\n%I?9A?&>bH{yoK@4})ln5dRxdl-3_>P=BRJ>-@$gEQ*4j$;hK_mDA<AAMrP<VLD0?6fZQ-LbY@fd6NJ\n3vo;N8}$!y+3q4uL%Kc^cCbh|0vC2GlB82tlJMBF~_bjpQtRap*7C0)H4s_7@#&K(qoau@s@S|9a_(=\n6EJf`#;vpA)_PE;c7xf2I8e6E<pEEgfsx7B6`(y5j(zn|>We5_{RlTNq~&`bm>;4UiyP`$MFyXfb}F)\nfofuSWWVaEmV=oV;$*=p!y{o}<W;KlcK7*sY4mv8Bvn&rxD!tkYJ>&UMkrs~R1jC$<U5wa8<|Lbc-Ir\n)5YTzlJ9sM-O+**%hL57@adG*OP_qYpokn((H(q}BQM+Z~ghEA^fFZ%ba+?ZJ_DQ0@3@4kN26MS!CWR\nDgzfOnL06hn+HmE$1W%T3Ns#k#B>!rCm3kemBQLbTkphO<(Z0>zf$ts#`EpT|oYG?PwGFW!eN+%Iu*e\n{DS~W)qvdzBy!%8ngG)JQS`oX~`u|`Q%=#WvQhq%FSSPlULScuF_9j+u>v}^;;~S_oSeV8H9gB<7B7F\nd7|inwO;3s@C`^u7W5-ybEKOK!T`cDc{Kn!o~(oqqr_>8NZ!$jx$@?axLVwU8)`Yz6C6H?*Evrky&_8\n~26gPhTx1v>x==@w%Ma*bOZI5?K@Lm0bNI{f06ymX)vv@*@xV*Z@6fAx<dAd%Q+3Y5XvuT38^?M_<ii\nsu$T#<@4)C7N_NzOcIh^VB7&VUoNX%w>?dkcTMR=3rw-w#Dn43N1FDL@457;acEfg$K?1jn_?lJio7P\n)MOVJGL$p54O!w7<dMf_b((?5bzGdiSiBaxdhwPe1+FU;X+ieSy~~xR;;)>XXlY^U1G&^Q+H%pGlQ(V\nZ<I&X=5c^bmt_G+iC8w^UOYyiK?v}cG=>`u5LrhQGr5^wY~XRu?c#Rqhgk<LHpoI*cGQhVro~>LLKjh\nW(CJ4{_keu<8wHJ21h3brVv`k>H;0Ch_#jpO~+Km%CK}AFb*b^D~-t)a~j}e)U5y1t?$u=^%qs^bh<*\nrODGKQhCI2jBgKVZzIy$3o_*i#sn`phyzP#nXkMkh+0+}%Nzob9cr`Cn{ZNcfHc{s^Kx?YPaM;+U1?6\nh-=Ss4R7^}S`6oBRzm;Hsh|CJ$xFN{+_=^OHzQXCc`6EI0=38XgN$vS`CsVYmv%Dat8T`Gnuj<(G_h-\nz@xDrua%O?i&CbX-z2cCIn!36WDjaKn=up~n%K_M))HJ#T!jWlskV*m(o0(~`P??E({R%{@7>`GcVFi\n?%wmzZBoINj+5ph<OnFmrnEG$OT(5-zrd8<HqByF+KL4cqXiwZM+@R+JU<i+oH4ah;LkDk1QWsvtiZ!\nSajGxy5`cKo_V-UQn07ng44PYEvdBX2BRGq@Ru3Y(x5Ey+HW&u=^X-7;6|rRetsh`FoZwtsL0#3_oA)\nQ+f2r;)O62tV%<W@VUk-X*7IRO97d=z9X+G*H2WH3f)BM+hg~StT)AvFag)_t7Xwl2M!4IV7$o4(j^@\nfkkC-K+t0i@QPcgGPnnr_t3}W(eW@2XQQYg%4@TiX+jiNks$D|^g>A|n@(LS=_>6DjD=^*VnEG+kjH6\nDt|f*Ot^bv~(OJ?0@XEc_Mu11&|{J(%U7<b1d0d#~igQj3xzSaMN5hk4*n>L5tvlG0|k5zP)ZUl;Bbc\nuDuWp`?8ouN^XVb(m!#MGAk!HxLWmI7N9zCu)N<PsxU}2UN59<)<*>FSDG~Ne+Lh=kVCS`E4a67&$kh\ngzbrbf-U;Rwh_ctW>UL)Y}@kEfKdgrsbWK8#a6Vj<owv=!NcTU<zivJnxI2|L>C8x%n~P9#;+not0@4\nGsB{}|%ve>ESSEc$E@NzqiP+_s1CO7lDtAqH4)WR~t95l%xK;>QOjP5Qu+1R?rSa8glTQR=(hj5pF~V\np*5JMsIHT4(&N2N@QfG%LC!Wd5awA*M}PmcvMbm!by>y-1hrXsUa)UOHoo6H(-i{&BXM+Entr!}OtJD\nuMXxB;ZMjG`lZ(Ilhsu%>G~?x4`m5c!Dae{I!vuE1vW%LRZF2Dauow_+P{Unxy%ORIhki`re_^bQb@O\niQ0GCsotJ|NjyvN0dv8M?4ho8z_@3)FqnwR9}{#!Q>uZZ%w|yu~I%dixYB%M8}_CqT`e?sp3#J#*tWs\nEB-Xm$OXhSz6yWh*96uR2Wgr;0;u;CCw+fHAmEwzotEmaZ5}>+i+SyLDxrD+PjX2<_0S){XPYP5e_G)\n2Bq>zxzOUL_+K(g20$6mnmY(%00qU~?rb$V>s5h1#VvquVQ<uId-xmK=K1c)%v0<enM%wtWOoMU1+Wm\n4EevbK)zOqPpd~@Ozv`BRMVyIwr=n8)-7-LpN-8~cSGc1gi!?U5=)l2!zP2<x2Wb(5B($kfwFeiD5zT\n742VrDM+#Qz&mO9KQH000080A{lMSYjWp7rh4n0Ph$805<>t0B~t=FJEbHbY*gGVQepQWpi(Ab#!TOZ\nZC3Wb8l>RWo&6;FJ^CbZe(9$VQyq;WMOn=b1ras<ydWRBexO$zQ2OdAvh^e7PzJ#TH$Qu&b@1mG<S#8\nEl@bdn%W&%tf}RO<jPip{P#RV?yDs0jD84GbU)ZD?r=D-&&+T#nf%i$t-K;9yb)Udr1VbYmZT>k%R+3\nGQ(okFRRz|ZSed#k(j>WH8dcu)RN+TYDwM;|FSlfOUy9r~55}e<i(RHn#ibXj+#0<lm#oO=Yiyqjdh}\nN2KD<}PQ|Xn|*to2fF8F|rDQeAPShEq%)HbJi6oIT-?Ld+g%6Y4nHJ>9k<Rzq$@jxiKCQB=02};&Em_\ns2eAQt{@WSJA2;hv~Uh$Z(dmf$^Xo1K6#%tAcKohZyhIfo45frKd`q&IcG9@@&UrN`GqE}hY}C(x8cM\nHIL+UQC#WHnNCJjn&0OJglkgcrrcSi1l-<kXa?pKr0q3O(v5`lBi8(tQV`g%)K$%wF}zZ-LXM}t#YF^\n<!lp|%4IGZnt#xbH9_r2<aZV8+kCtF_osK+#oyjte0%xfuXFLH+|9)WEFhN}M!)pzOJnEaW5sNxo`aj\n8i>tcQlthM=s?uyrWnpYu$^2fjKxwN>b58bFI{H^!8}3sjjsV}39&-w3xOU5Tjax6vt<<V$cBM-&YDq\n3yKO_kof~+`eEt1}m|9e=QW?3mWlx4FdxhxBM>~>w2D}x<Dnd_m1y$!CfZ+hjgyPY>TH}J`7Y`#Sz@U\n+(MXmLWjHeisDb`*EK5bqJ6x!F|6n<b~}ZXrG)E@8f94CJrVKO+_qZX8jru7dWpV@F=!Aa*#m8eZ*LB\nG=NnG_E$^&d<-qvm&J@??gw!-8Ac0$X{B*)nd9q(hEyDvKU!`%)z04*6Jn1d!<QCUOSJ>KA+5mR*3Ug\nbKrt_9rOIWWxA{Aowdd;#LG8tFWCDpg<1XwVscVP#g{I(s`Biakz!XL|MGDmzNd}ZBD>e1UupyS<O<;\n>3Tvtm^o>!!PXE*zG5xI1k|Zf;B{Bt08Do^6D#VRjblGuz7*#hj@zr@x(7Qca1}WWs3)pmf`<@}UBXh\nU6fM2G(VqH{Ai}%_AECPHmoWy*i)<9ANv5Ot7>pYx6McSu`3;crj70b&3$B4%UQh}SYU;>2H!q@^(%i\nz;U8~!&b?XplG7K{X=ths^J9Qo-io&<TfZ8|Y-@hQ=A;X6ObpbjU>ef}L4Ke<7fC~N8#z1{6m41CAOH\nDd4+v1K1ngmi+&JR*ps57L&<emeRVEOB`U3vnd1Vt?U)*8CT_h@3+mU4yM^PG~FB;)il_$m|PuborAe\nhB!EyA@cPf{+PaEL+wl*D+P)de+yCGh>=d_2Yg!FAAF!xS^6<$Og!>&yfhpAdLh1(_P*0yHk|@XB)10\no!YOPV!xeZ~Bp;Mthj?{3bdO~hBhiAO+KGTFTHSLsT}!0&zCroy2hutnF&hU^DvM&;EDd6zgWdLlZAT\n5w2bAK)fng2;ke{6*UG%%3EzAL=WNe|VvQ(jtQV}Ds%i=|!#dGlt@JW6n^s(f)xkGP-eha#V#Rh}E>Z\nA{xdJA)3^x@-G2;=I`%7RjyL%p_RZ*<LEU?VlUG8gR*%9XOt$5w0DzMjOmz-JHV<}F0HdsS6K6+3uxN\n5FN2jxiR-T0aLdfA0A;<iGqD_;~^@Kc5f>+@4B={~`%s4zm7#I0w48MqD;QyO$Ad*&bHsVbn^?e0^<8\nDxMd&01l0w?Ad|aXcii2O&fG?VPtFc3}cNo_1!w8R&cI6Ky`KlyNbsTX6K(sVtT~1$Aclmd(+Qi^Z_9\n{&cHj=3?#ILVu2M}F9pDlO=W)`>>nFCZZr>y48k@P54Ii?l=OgF{`>7<UWm)plSbnXmOONwx4_~f+NH\nyz51>PwpS41aPd|oECzAAl@$B~m9M7>{j3-Rz<<V$~W;|*_Zlq86a^I3k5(X`?hab~}nPS!<&zpGB;M\nz$IkWpE)Re+4)&4L*L%rI#&G;^B(C~BI2&_=+BZDGKY+ZE6x+en|UA<pcUuQ7%U+q&E)eV6m0QEO$})\nY>axgz##^Ik>ESytR;dPR=zh0BQwx70VMa$YK`r-GJg^R_4AAS3TUv@^BKdb;HWj@Pa1JDuIuyRT%e%\nmWdg@2WmV87s}oD86RFkjX_aSKFj)s-jQDQo$ej^tSKp@x&Kssx#_nLYSfXNf}XCa5ZQo!X^b8+YA*p\naWvXxypy2I>$!sxFAk8|#k&E5?9!+ncvm^N*X$~X<?ZMgs-?6ZP{dj5U0f>h<+rSCI_AzD_eBl%dHU2\nM#$k>*pIPW;{bgNwmwl{At1R^@WZ^I{!zA>c4a@SpjL{4qA$1c&WO|9d-+>&A?k2~4~w1QNCis`DUMU\nl<$_7H*R01UGpimg<b$UYc9kUQLEOecjYUwToPkeHL%C@8t}iS{_%ti;%eZr*eJ7=6Pf$=K_AvrgN`o\nE=_h3}+<pdLlBO!*73@*%PVh-%ieCC-`;^;^){lh&atdC6Cp+>*Ij@#WbI_Xn#DWNA5y9GV~VG^8YAe\nzv*tCQ*G-kmr!WBk&jOOL}#yN12ZwC4ei9gNBz=MkQ1~$6}*i<uk4_IXx3!8izg<(0#Hi>1QY-O00;n\nPviw-9g`#b<3;+PnCIA300001RX>c!JX>N37a&BR4FLGsbZ)|mRX>V>Xa%FRGY<6XAX<{#Ma&LBNWMy\n(LaCx0tTXWmS6@KTh*r6W+rWBgC(-%&eMzNJxlg3eH#cf8T0hh#*+zJGcT~IRf>-(Lv3+w_UWhZ(uxH\nx<6cUbT0$~0nC6@^+gx+?8RyQ7_KwxhMFc4ECRS4~wFR`^$i*=H-c+A8<HIn=t`v@es9z~9|3H&@x~w\n^y%!xPJHjl#kx%RpXwn8)f9OP|>fZGVa%pvL<Zq$9whbUX?2kcz3AP2kGH{F2U?{G#NP_YF($<lPdGd\nq(<4Qcv6L4rnRY_bgoRt`sLC#My{G0|H5BSm(r>h=Cv$yoy$f|#cL=8@VacK;ug$kqjsun{H0Y3*rC6\n@`uES*w^#48n_uqU{`4-peslHi?)tmyt6P6%4ce7CwD8}#pQDjp_f<AyA%B->H%6_MA$5K7u73=7BiX\nLYb!A|DsCUGO0^aDAn4h_GA01DFDjyuKtkwIsr0@BWInLak3V=O~RAJTZv+#^Yuf)5G3<Fl1trA8R%%\n0uqS}axbtdx7vs&UG{ym_Vql<5FyIwSL$3H*swA+1$59lZkBU4%<$E2PK)w`xek1;abNRcp^rYYc}bM\nHpCNs)9)3dQ*uUZ($<_zr4A|zp{z%sgE`Ad-Au4R)&?Oc&^N&c-GApVNJvvRUCx$8WQ73gfYuB?nE4u\nycH~6gBfXKYI&vXl>A9-@q&O15VtxAQc@-WE3iuQT#+ofl92As3jy&X6EpeF%A#8Sk0cV(C`iB7rOJh\nNW}^5c<{Y`HSneC4@CbskfOtDu!+6@@(diuz&>>wVa!;}#a;<@YX{VZPm6P5}QA^Y4)xJP(5etybGx#\n#nn_V!23vDwC>)EwddA2+(h(Vx;eZix1j<eXPCd*ZgxI@@z!owaBT*-k4&*{>FWtNd|l);%I8KCnotU\nD@YfvYPRS=$}^4BfDBEmc4pQ(z<dID>U?n2Y5hb~nSXx2nj=x{~x!E7KfWuWa?>F|&-eM$~9zYk?Sdc\n*(|}w4zgm$4IEGGEaJ?tg}mHgS`{E!nqB?k_|kwwNWsSGLv*P8ofcN`znx(-;5`t5AneV9E?VA9FdU$\nC;~FjhKs;(#?_^rD=)LQ&fFs^rsBhcD=GncMj6K)0-@X&%}l&Oxe*s%yV7(2hOW76G#-z?S5R1^b}sE\ngvvTz)H%gRpr$kXzkNdi%?Lt!qn*^$<%aV6nSWtaLyyEIcugIXKQaSATy!Cmjkp@C`I05mf4$k17Hlr\nf?Q{2+4ExBJ=HOPJ;M2It70&|Y3GGay~?%GZs7!_i^K_z6jSC*WMS+tW>T;{o^><0Jj7?wHl3zN#iR!\noS<NP$q?JKn(RcvUDkGX&VzV;8NA)2Wd|AySUlwKLT^W)*C;mgTqfhy1iR-T8fheqfMS;_c<@A7&JO6\n+rch^T@Ljc3bTcAc+6fBk9{GR)`c6v`!SAdt~Exmp@+JU;X#)_VWG1Sh#xVV?Y{mc4RCPh&_Tbj#Ifa\n7HOa|9+j<j6tNphNR;K_C>F|1#kW9VHPW*Wlg@*x60F-=BbFQ)qm)PXh)}W=-+_5M6D6@%=-*(Wo2wh\n~_pkoOd?9F~H+&-MVsAYzXB#J!kAHh{b3ibcQ_>t9jMRoQCB;%VNHj*JksBh}l-Uwh=uts68DclGE+=\n7fqGWuJK=w9{uP|L!-)ESc;GCiT3m?YF5L`sWjjr2nA?dXflP;)lSj(ZR_bWN2!>Ffnp*w>Za>oVIH;\n&NuWf!KfL-YnFQ!A3b%hP*H$@d3!u$^2~458SnBoAe~fFa78&OT|6tlq$Ws#kkv;y;}aI|32e#p2?kt\nS$g=7mGfseZ4U<R~a$esLg>Rh3{X4`yNQNKm!y2&bo9#da$q}>7Xx9lq;=kb6QqAE!cfs7etY?PF)BR\ni-sZ*w14(Yg#6H^ZINZV)J>Kp0go!y)9#lqyR)_r4{v(*qshe;iZBm61lW^GUt(YiAjit=$_u|9C@K&\nPl(_V~t4cNN36o}R?=Wx08N81jZXOFZfIA@uMd<PA;NDO+TpAt?Z}h|^_};+)`mwB@OJbne_H3~(D%m\n`+NZs(7`Y6u<l@xNf%;k(H*;JS7NpK9GcMb{rL)^(_mC3q3ZRTtJnVE)70$z@i&^df5xp?4$x|F(`uF\ng5>$)>~+L-N_P+=G55uo!uCH>?hT+xh!G+=`t$jCQB)p)b52pPUfKF_tAloW_qw=mN$D3+-rs_IBj;5\ny&{`ni90B@;%C-M9oA&MF+(BVS~A;X9OM}a+(E$x_!c?KT2#x_3Trmw;}f_sPk?x+#v}3WkYQZwF4Vd\np`)qRQL5hTi5&8<jnKc|<4#HK79}nUKsUGZzzN^2p1Fg=Y-n&k3m3oivo{q&S$17I2Sh9$(Gz3W)QzV\n?rJGdL6$d=^UuB0-P&-lR6>9U(xBp5bLf31WlVmaVLbfDhB@z*sA5$5K=v1X`OK2kkG*FN?p|s5B^Tk\n5=$F{r-$)O0)<i+E)fP0zhqu$ZaF-QE^Pu*N*doo8fS4Bl-&Ch#-64lewS{vJ>M4lj-f^Ul>bg0ESW?\nQr40W?vV7V<rhVr3<GG9-J^R05O}sDf3~+BM2w96eNlR4n^XWaSsR^vwXf13ewM3Fv@dvKvf<(t5E*1\n32y>9av1D$fEVOD95EbVZJFUE_#1-;)})Cof-de&WeszS=3v(?0RXQ7fCBf>gDPn5)7WTg>IMo%|<SD\np_{`bjpMm{ZcvmXuFycD_e`KjlSBzA?&&9!4qknv1%`OvRJF@(l)HM^c<45Y=c+1Bam@3e*M}<Dv5fk\nH!8!Z}=t6Q$dvCVVX1cdE`wrt!P<YsAoxgEs_A2BA#N_~_f8WiTRJjwAQi17M%iODE;yPDqz>#y#sk4\nW46&7*ur(X&CZ@Nyt^u#7F$aCT<H8E3>OoC9Y*U{Vi-u2e$P1?frUXvspNJiZyL`sNI+8r|x9kIB~0}\nYROn4HH&usy^b=tE%JZ}{fXVuwAdVG%npmoou|gql?K{p_#kTIOOrpYxmu={fngItX0tONwJ$q-HXS0\nM5rr*F<HmnD_>U7ua3HbgBzGnvdC>E|M^hTp3fD7fAtc+i3N`KIO2iA<m_~$0OH0f?!`bY6tJ#MQ*De\nh?4sqTY+6te3gE65+$iWn|9aEhQrb2$<YaJa&O>RBW>t1aq|jqF?%vj#Gk}p20R_d&S|tmB_H2Ax)YN\n+p~Xm0>iB!NgRdRi`;;G1&Pn3rIq1IW@6~X7z&mALVvxo98+WRNZWjZqqK|XMCBj89!a4dG7m8<jK#8\nfSD08vr4(O@UId9NtOX~LHlmZ%B85dE?_65^swPPz@P*BLe@OdX<$Tw}wICs0$xOE*cuL0Z+Pg=X*)t\nu(LsTU0pdg@(-&NV-NuP(Yl3_SuR2W{QA4YzA^-!OEsH|-?N9OMx?w@nYsoa@nB`)ZpF-t^2n?CdA8!\n*C<r4`zzXftsgB04}i}pSw(Yd_G`e`a(2JU&>*}m|Y4UAPnMn=h18#e?a&HGhJxe&dq7jG}@ok=yMNJ\n7k5_rcg%S_WOd_Qcpb6|FH=;ZH}oMOLr!a_{$wBtqoQ)v&q(O)F41rKOXxmn>haqgZnykS>z||EHC}{\ns@VjYgxNdT*$meLk)$YcgIiaW?w%%qbT7vmcOwitr&=s26lXe_)U*c8}vxlpt8TQ33Z+hJ|ixN49rb_\nzKN<l845Spapv@d2tpDG=Dz?WC$7Y%1C5x$EMgNus`Ph^2wE;k51#s1zyhB0cWCdxnKrn+z+u?`oMX~\n$xxWa*Pcgt;%JbcM9j)g&F7by(}q?S#<pD7jH)d|cvup5Q(=K8L@(h>yg$(CZ8LY2*ZAu1syQI{!^*_\n;;$TO;19e$^`MB-$u>3<Nb^t!fPVp`&2&}LAq(;#Mbh&1U}jiemc*^QiWw`s!+xb$t2E)15SIp%9L|t\n7@CqZbm!+-h|}b}H|F+-kB-B6c<h7tu{rb0WR=eoQuwEm-DEN>GK1thKROv)=zmk5x3xAtJSs2WbpP`\nv*~yPq|EAcrCSkAHM{vB}oQd8pGum`^Y5znDKVEANSxq`jlm31)UL1RN&Jyi*f^mflT(B><y#pMaGt;\n@%^^o^_HwW@y7xuBVQRuVSBQl|k)(b*E{e45<-1W+R#*ei>Y?aPd{6Df14aK@|9ujQWy+O<)3d3C8Z*\nB+RX>4s8us%O=>-7;bKVk9zPI!@OG|_z?!Cof(KTt~p1QY-O00;nPviw*y*}3fT0{{SE3;+Nx0001RX\n>c!JX>N37a&BR4FLGsbZ)|mRX>V>Xa%FRGY<6XAX<{#OWpHnDbY*fbaCzNUU2Ee;6n*!vxM&I3tg8_E\nQUob%6BYtxTegK#(nXA=D|?#JjCN*})P(%^J);jxa^!5&(wB;0$1`)!J@@0>QDIF<nNf-}FO7C2%gR_\n!ITxZ<K9`wa6yc0A+pW~wet*mUN35`Icm2K^ZNAg{HC?v|*8!nDRLLq%?^)-@#+IE?_pIaw{{|zr2j4\n#k#~-`J&NSX&t>3>AI+wZdyrz%*xt5ko)^MU4LUcKhTc)WNC8z0Xu~=kEI7dIrs>fcA9j%fD;X&M#rc\nz6vrc1}FSkX7%(+8uu-49P#2J1hOvNSWb_UUGyRwBC-TTaGt-#TyCB(?tpQlpG6u>?jFytHKJ0N_&L(\n=j+q9}h>vbCJ+;vJjpK$tCGfCUX}mAv~4vCM(5skK8u3H3dC(Je#~ckv9}Q$I2NADWzt5*vV|y0|flc\nl$G#u1K0=YcVzqyDWAcxLuFh{zwR2_TIJ-$9g_&iisPx_YCZY+-AjQwFO~XVg?sVsY`hH?{s0srRYr#\n<_dB7fcC}D3{cdV1<#y*uGv^`5%9?wb^BhqGfL5%aLe|-yIvv_JJoGEt6TdR#&s%{$bpg+EUT3p#79A\n=}j_DU>+Ie5O<orAcz1mkImgf9HSPkCpe1l2=GHaqJ%xo67HFT{rz}*zIM_3O60ssNA3Bvaw74W!5fK\nUrvd8_CxU7gPB)8e4&R#R}EX8rtV1iq%sO2mwcC+*}q>?gyhdF2?mJz&J4^FGnrOS%{o-wXRS5C>yfb\noSbK441Erk7SY>%f7aHAkta&R8FGYHlG8BcGSjF7iJmVe0cv;LT4^o_jobtTMEA%tM76e&uTOPOSc7s\n=(nI~Z}*T(E{lRK#55FRO?l0s7tou9LYpQ-)k8Z$fob3qQgWzh!!S?@)ji6@XS9)Md|V!k<B^Wn!)kk\nOV*iG2w5xD5r_G+;i_9Clk8$(B!g--o<1=Mzjhz^VV9^cHAG&Gz$sS7Ex=NmDqcba_$M!_rPPG14H?y\n8PZDaW9BWzZVPr_o#FvbZtX{_0KgcZ%v#&%cS6klz4%hhpT<h-f3OPEaV-RrO#ULsz)fTJjSNBt{77;\n|_RG3*HAuBk3OH05SQybqtKpY&*7b}?)Ry`u;=$o<qUK55~eM0~JXMXTpnsf7&kZfr=5(7%#!y}ug0!\n#T67sKXgKL-|g-S_dv+GGS8vZMPG|GuvT|e9xBe1^W^49_*NZ$NV3&?UHj0F7lSjAk)s#XeAlH7WN{4\nd6v&JnQ=BmZ=d^E{fD>BJi|FR1I2@@k(Uuiyt3<|QvZra57qe{oP7aMO9KQH000080A{lMSc1pX_G1P\nB0D&I>05bpp0B~t=FJEbHbY*gGVQepQWpi(Ab#!TOZZC3Wb8l>RWo&6;FLGsZb!l>CZDnqBb1ras?O9\nuI+cp$_&#z$B7YS2@_F=$aAj7(%-3km{(01rU5D2tH#cXI&73rjIkpI4ONL@(Ta^l9pifsW3+q`@{Je\nTjB!&Z%260@$kydZp8tHzKQa-EVtYr~bK;^?Tt6*aH3{EEp^HCauIOL_qtGF`KRSDZDv+xxy7dC$zQo\nh!pdzv-=NmQ?Vstb9wCEF}e%O7g-E<r0Q`A-FWG0l~6{ea;FcwP{v`QG*B^hNuuZ%;#mJ>YRNs4b@W+\nxUAjMA-r)v-?7gt-moQ;rWGKYQ_Z?nFR3hfNeu|xfBi$L%T=8cZ)-{_yq;+<a#RSaHF@==7QEobTNr!\nali3l0zmioX2kE%U^H?)cS>3p!X2YooIsO@xD4E-Zf4Dg7*OHTA-;sw5x@&<g1pFKj8fI3F#IZO8OMH\nZe)ptTv(TzpOb9?tZhi|BiJim=^LhL8aZ4&wT3#u1BKA3I;AJ^=X5e(dEPniX4X6WG-ZLX9U;CMx(0{\n_w09b~~`yFA@ytYp~cN%EQs%{DYRGR29LA{$xcml}MPHD=vQ4g;T9;T&hsKo~587*An_NXANHR1iVrn\n81010}%Lt5w3R&n)%01i5Q9&82{k%407PfZBW5S&YDIwcX)9KwXxarmkVa{eq}CfKo8)fNWbHt)JEli\n&2_G+;Tj0C%;)R7LOOKM_JqKb!sB{&=~;MhdVvL>XIltx3&p@e4Cxk0RB(9-x3eo!5`6$`;!jF&BDG;\nfNuMpEkfw5k0E)to(F_Pc1(>5)fO5K&bOshahxJys;d-P3Zy~V7#6p)7U=DcwE0da;cq8k?U<Ggy0*o\n&`Ni(-MnTiP~^n^bG$86jTHH8`q)jM`7f5*|Zn&3)3Wm|ERtuDHWwtq%&+OS6)G$U-{Z={7yN>_6vt9\n@8~Taaw0^|#8rS=Pd?VC4>d4&?5B-#e4_Zh@=r=?}Pc><D)IiI)+b91}h;AUrhrv|JFH4TzxE@$no=K\ngb0()R7s)HC=0R`s$SY`0S@>3(1XQF@(0sU@`)CWTnmlhmy=8``1kaj!5>-IZw$;C9hB)g<3A@v1T=G\nfSya@*UJ*pV)P;<zosP1vXs0gK;z`M$b+#ox}=v(+l<-o1}>d*Lzb#xBwDPNRKmSzN#}w^DY@omp;pG\njX}G?``ks<vLFI+zvn8Vv3vm+v4%(|$Lad*lqZ6!yS$Tm8TEoE$dc{1bIb&d*1w&&FUIq6vNTz2x15N\nNccEqVIakk-{K(`>ciK8@1&V9!hOvV-<!SH#u)#IZ<Elh0edA@azoj-eael#{d=qSoQDc(Yy&5oa+C*\n%hbSqnt)&5gtGp~?c67Y83cP)X2+U05Uab%FEcIM7WMy=j{tI9acJ{El|ea#)Um>^(1%XoPYTo_R~IG\n`Z<dy&aY(p7VUPRUgr`Vq)D<0Qj4_2D)Jl6U@0Bd?i5F1tX`nVPvnlELr0rQGpJ>##YSHvWt)bg$Q-Q\ni_}{5TCGHB9hp>I!0jOt!vOL2_4m@~n+UoB9g|WqryceMqR`;PGCMr|VThBH5zx?PZ_qeQU=M64B)51\nl36PJ53Mlo}dh(%JA!UwB#E*_HURkp9>%|@UF>2${n<4ED=U`ab_27XEDT%y=I(E+h%<1n#!<U-0^_c\nClxzSqzoISudDE^b{te54xtY)`AL&RZC_J5g6{)sa8p!MTa1pOC_$(CJOE$GuVs7CJYLLq=(1aXcX1k\n>;hYnBe_*g-+vVxZD7G}{&TeQeHx2gwwQDN`)&@p3klS|?<aecgroacr7U)Yc`t;RG`a23AEiB%Rjlz\nBQ8lw>*1`J-fClY87}BUhp=0oaSv%!+vjikKw%Wc7vs3)h2iLNe6mRoD7dWo)yEoZptNl3K>rYyRk~z\naI=2v@V?ZopG*q-b&Y|N5BBglf%>55!>)&Ua6izwcW;iNd>acqUBvAOh4ItlXpyUE4)`d!y8{`iA8IM\n=Fk2$(=lquUU)v)1R@!3xy=wQrWNR?&`1ee%W<jmFP|!K(u(SNme2T`Kjly^;b>_|kNEmPT%uzQ3#4U\n+el3r0R@RrFVr71h~IPZ&7R{Hj`u#2shm&Y33@Bhm3olj^FAo4@d_V+>7k42h6TK^kRO9KQH000080A\n{lMSU|#Y_>>O-05CBC051Rl0B~t=FJEbHbY*gGVQepQWpi(Ab#!TOZZC3Wb8l>RWo&6;FLGsbZ)|pDa\nxQRrwOfCW+cpyY-=BhYaHw5)m9#){fN?I+CTT8c&<07`;;^?+Xo<FYD@%$fW#bF--S5qilt@|L=6)Gy\n)|SZOaOTaM;YiiTx@uaHRb{I_w1wWzw7s(H%B-!b!uShCwcqP<?|)Wiwri@RXiqh+3U~F*-(EgVAOH2\n~<DZ`Y{A?wj=&W6d7uw+8U+Pv@r7TwBwZhLgU0tY^$fRj!R#L6&Bz>>SylRqKX19`-OS)DU#*5EnS(Q\n4Ih5n~XOL<i1GaF^9;=RI7{G=bGQLhwzRn1DgqWc}G@*KB~(c9v)q`b0M8X=8%^}_$UZ)RfJrpwx1`6\ns$jS*!AAjjRvho;7UWz%ofDvxD-(e?KTyJf<sCLv@*}56(;~-O<m+&wOdG{>T@nCRep;B$>b@b)#z8s\n9~4yI;eS6W&6_JnH12dcL^Y4H&`|O7Bw!(qDXN+1)N|J`qM~rNeB&ele~=Q_Gh5UeUpu9Cv*qGrYCvd\nCtH9b28ea&YGVDDP4!-1Fl8Vz@O<rN^d8amzb~Y5nDs&yGl368JyF|^W3flIzcXA|POZbSG{lw{yjLx\nGtT(rv8ky*^EOVX9R;|RDW0IXD5S;wjAMMZCOz&boShJe<MU4A8019sDinfnAe4nupcYV`ez7Et{h3W\n#MH?!G{*bAoIcp6Kv=@)!$kusB{=@P@TLK@S@`XWTe(yE^V8`Yi4QwYWad#wzlew-^rTr*#Zc~ustE4\n{lamC994SK8{zAl%IEbVWDkpX?rTwG%0vquVsKzNL>*#ctLAa^cymry_G0X5)VyNB(g8j;JJMc3Jm4d\n_54%%`o&RZ&ezE@%o;47-n@wrTDK&jc&2T7I|a1srO~os5DnK{H@9i7P~OSt*i12_Z>)0TA$iORgOpP\nswSgBPR#grSMM8{EAP0|ny?X=`jis#U>oSMs{%uDs=C$$tRzWpZs6~qt5Vsi4i@aX4!pWpCcRUa{Vkw\nM0nTF;K$z_CWCB&Q2oimeZG3zUkQorL*^N9OVrWyJ;bzL?oAHHscz~r%@I4+B;b9Z~iU*Edwi*472ai\n#*8DE$jJ_5~V`trzRF%~wX-^1W#?4${(!(kIw<7sEG*qk9Ho&fEM^a6}p7WB{@2*xq$h+jlgRm}N_M5\n@lN&x8C1wb?;sw<%D~NhMF&-7a=5_QlnAqqI9jLsr2hRPR8i5W$JNk$N5cY_sUKS_TB@GU+Bvq9g2E!\nJBZE*q^pmkqBY4>Gev2tCPqH9k#jT-x2UfZre=y_bgZ%wu3UzD$p;!F$Fqg*!j!nFVj~~U;pyrx2Lbt\nCr^L)_1T<gr80>s-|Gf68Lj54igi>MTl1b376F67^J-d>ojWnbXY+MXFyEV}eLlCzcSK_2oD-@L+NS^\n7Hm6wOLLWiPhw3iPsv{`<Lpl^*V6igYDroS{Bl?V%an(i`eE8`%n4CqK{|wFyfxZIiV)3dgbF=vjts=\n3(4%LTD)$QbwhDxT9zf{vy%{UmT_H+EnCxVnmO>6|`w8eaCr3)UtLFJ>Ct9vYRG5nUX@ufx`YL(~OQO\nyE`*%QEK#6pW{>e@_S9@cw6ILj1Dz|8N%h&$aLggwRxl!vWoE1^o$;ndU~lx_qU%C!D_SzvvkO(0Mfj\ngmQMdW`NhM&!yGi`9+BB1tgeCFi3rjWB$o!rxYsLrn#ypsHPptu7@>fm?O5$8`7uKU8fXp4|9eiK?Nq\n#vqk80Ts3t_F}p%R4~J$$hyOZxh7%rEGB{=IYMo!pRrf)(qg$HH8zDjZgVNJwa5~xro|T<e8c|!K}^p\nl_1?QND&e$u@L#`th{!NIEMio^emoQQp@g?S!x;t)GJBQ!E1_!Vlda9{2^N2lA<6Jq4{mV>+Nmjwl%b\nW95YS*Yv-nA!o)UnU(@R<NzGFsVcqF4E*<xDp<$cmvj?8l&nMcwtPGiGeI>X;T&8@l`pC%Wv7naFA_V\nb_1`#Qfv=GJ8wkOF-kh{qJ_gaSkz^*2l(iLw+S<B5)YCls89U_x51M#8WKK~XEku8@0<7fi-1h}nZ8z\nzAL0_c1_&Sl6Eak{GqVQcZJUYKn{LdfHZLFK)2kc>u)HE{4Jb@y6SrtOhtoM!34dJ)($xw3*~QuBh{3\n4pmp=L!Hj25)=q=zA2z%w88NKZCX?4!UL}c@oaUXLihlh_BTFXy*Euap<Qgj#MSsQQ@D$ll#Q$i6?47\nY!Pt}rO5p|mFLfR?(<W89w%GxQ9Bszmx~w?r4e~dQZuGYEJMa@%BsAR4gdjims-&a|<cvY}f7rIEI)Y\nK5%Ucf2$vb46o&FDYZ`pvSK74q8Rv9hF#l)ptLi{6&DwBmhL6dFr%E#Qfap+@vRtcRrFLUqwPbMU{9t\n1WS^{nQRh#H2j%`eMym3D6ROvJBdDk9-(zC>(#kFW?16_c@(J3lWCdm|Gt&S}_xrnAFz9-vQTe8W@;V\nAm4n2?6@w;B$O5x~veRb~6p4F~9c+_Xs=5@>b=SAPoQ*SQ(;uZ4}mkS9$gQ>&MTZ<18;5urN@t62F!@\nt8z7MD3`i(PI9&u72llW^Jw<i#xyMFq|H!IA_dq!07=ZNyRxWc9uSsw&oqeUcFP{VYw?kA@kR3~kiYQ\nQ{^-7Zx+F}t;v?De)AH}-D{C#%X{(3`oN>iRYsXLLGM1FUj`BkNM2c<VVrLq^PRq?%ikTix3UBD2>Dy\nLY9+22Aqz(w!+59g+fD(J02+Hp!BJMnt9OvB01|`6L0XHvW0N-C(Qp_x)^O*^%+EGbA>Vo+y!M7>>7m\nkg19g`lbMlIr25xJ6&1SPLKZdSbW^75$|X39auW+kU~sHLrOZPTc>Yf8VVq1ASFl;$(oS?A48TaO=Cu\n{)@rcBvmX>}NioKU1we;_<G>EE`&i%n>h@4F0jSLEBNpGN$#+K@k~9L5N@-BKwNUY0x-A$#%hvsD{Eo\nw+Un-o)4<PX|z8jV>B_pYe*gKAsGk9nin)!m@e7eG_*SRstxiPfPA&3Cn##Pfvjt6fkNFAl5OpfAq?p\nFE|IJ13b>}{#@1*Q?lu|qg8G);N$lzQ?23Yh#t|IEoznXQAN<`DSJxFNQ1$d8;0To0QEw2r4uyo+LX}\n%Sx|b)Boia@G{QzD}$aZ*A&}=mhNI2ft6}3hZ@w?(4Jqh1;040u>w5@H`wUkS38^Vh1rQA{0g4eKgb*\noC0a^7z!a$4~f-~VbDkc8kGbg@q@qOKPoB3k<ZM9hyJVTMTDx4@RDof^~52OrT{2s1nhgy4*0^Z}&WB\nM25L)UFK*$`$oL?v$&U_;5v~2fH&FMKXuy_06DxHFDg(OZehoF!nH!6@_ttnAF`_I9Ol{i>a+7x9VgT\n%VofRwu_SLRvk(3bW>$Q5>Hr+dS}#S>EFpnKu)ce#UgbAc#+h&cO0C`8~1lPZkkfQQ5)jGsiv|wAoo{\n@UecB8wUp78=&`Ejy(xpudeg7PJbL-zx_@jzU0>=H2K!IRkZXELgzwIn6zN5hcouZ(NfDU+-Wa_vdpA\n;xPG$#SC0E>^BmNMF>Q2marRq5o4Pwo636s`{K#uZ6WmCBa@3kDd9Fab9cU?>5Mm#`~SU0+|4L9IZXI\n?OZm*YVglCF0ro;zk6v4!x4PTiIx3MJoDjHC8*G=y147D&?%*rb9?yW2G=&e2k@4GD>!LfJZ&0={Qd7\nRSmt(x%fZl?!rDwIeNVzqt+bIpR*9dTJybF$FqBtbP>_F4bLe0(v?sUwJnPlXX#5wJ?B-A?~6Iwcjj^\nNkNb8xMCc5!1A<G&$<T;C2wF3mGNa{N~VmES9|9wLPlSa4@aY61sC1$Lu;v;ZWpTDV<g3Z&lN=lJYZ=\n)K47n8Xa*U#rs)CJ%052wuB3s+ra)hnOF?~H$JRW#y#r#zLMJM5`C&QoNqcCjZjVes8*UF*4pd4u*}>\noJ@!>XOlMgk9c|)lGZ~Ym}tIw{22F_BCCvubHeVb8y5-43{Dccu)uj$cl?p8##RIxaFo6gk;NfiFPY$\nBeMcuhTagB;Sj+$On?Jyk#4SxdnVU-HW;z)wfLJ+dTQ%f}k|SuzpOx)zix>q&B(JM>vI7qZzie96U2v\nNLMFokA&*51~t#q*pcsze2;0;k<D?)4-rTI@!zoHdWaJX3T7fXDt3p3R$j;DUp+v?|HkW))!fjUO)+6\nDq(Ld$U(saVj9g<8uth}Ip?e~>oQ8nzZ2QC-p(!we~EO@B@LAlRDet+;2{m-bgID|KpQJ&s}%qxN7eR\n4KZ>D&Lj~&{7xg@tG_*ktq&2A*V28(Q+x_#1Wh@_ls8FNWCC+R>g@rvl#JT9+-O&@F^tJ@LQ#xE=P6p\nDW-mY^SwRL&Lm3TC$<8EHl4f5Ynepp-(wIYx%NPk~kJP@zLY~sS*ClJS{3`XY5QB|5a8J=HkquMpK5f\noOQ5etI^SP{p6^XO3z@+G1=lbumL!XJpYZ1K0l!zk(^ey9PolByKMkD<3)m_^H#XV@dSxE<7at$?+*t\n<C!3!#xPP+a_6cd|01q`LNdYLv2i_%)_rAef#a7XFWRaG{DG71(wnU(L7czbf#M@Yf;*|ykl3g97V;?\n;8<s}Fz7t^=pmbj-ss8I&fdJ#cJCWN;YF^e?gcbtPCO=Z?m8-2Qo5Z;ge>4}9$Vlux>ZzrTM_5I9+$r\n<I7zv2VQ+6wFb6RqCof<7oOL>5?H-87vdB7mvJz0NPrqJ`Q3%m1eXtr^68t8<j=YCC)a9SlkveR2`?J\nEHK9dghflQ)q`lt`~^oltr*nuq-g1|l6c+jp$3=cGav<C|yM{6{&XNcc=t{oLQKHlCEYTpuk`%`63B)\nzq|QYqt-{K+5g=$R(ZwhT)G21b&lZcp}|Aui#f{s9>@szJjXx^g0@;sjUOqw2jgtQP*+M5bKi`n&EZm\nJ9<HWA9oNy8|vEU>Lg!zRz3^=M#|=?~XlFM=yKkp$lvKf;*+%saJ~K8<&5W*;n@X6TE>)_xe-MPvIK?\nov{uy!JF7|D`?y+a)r(h{(Qtw2CPnV;U4tU>E6a9GuGR;7usCQw{H_)Z4dA1_XiVx0?+Mb*KKkSB8);\n*<>0mB*1lUWMXS}-tY-(x8sYmEV(3GlV9Q}Q`>YDIj!Kvw;25>*3I+@cwo$#sYHZH`KY|7M?E2Boa>C\n!&GywkKw;28fP)h>@6aWAK2mofX{8#`000062000000018V003}la4%nJZggdGZeeUMb#!TLb1z?CX>\nMtBUtcb8c>@4YO9KQH000080A{lMScGYL(bok402U1Z03!eZ0B~t=FJEbHbY*gGVQepTbZKmJFJEe5a\n$#d{Uvy=7bS`jt#a7!=<3<pD*H?6z2keR>Qh6kmtq5Bz+8Em<izO6LFqX#F?8+L|j0`wmpVK4T*z6^n\nrwFPn_4J(6x9RClr*polvPS93(#+`9qG(7zNkem^m-I;(k?Ek3FHPWiX(6qo`A%OLNtJHMuIgG_nNy=\n_CTYd5&#Ea@MUS<rg9lYL(o~{+45-DxPOp$<%{<?sf867LWOP}HSt;pBR=GB+T2LjQrSURdD``p3!S{\nLbV5HS6lS%vN%+RZb3h~71fN1x=ffiLxs<FUt6imxy4J}z^Ysz#be<Q1xlKlZfAz<Ok?Ac&tv#Lp17m\nI9V3{Xn!6ty!}&%FZpB~%f^p~_^12pCx#ov$*4%DD=tg+hp^H63v*_4BFc^>w|*62kI9SY1&PP+#li%\nzEBLnx(Q9v19T=8aZ3j!UzOA_kk*zo3cWfh4k5VQLPCfXBa(egsRwj0T=7F2TeF=K|gPvIk6lPVXe-T\n03PK!TP@+3;9SvMm56t@DI|5Kn;o4VlOT3*0-5Kv?b0p{$V_9D%eN1utX$=6!*;n;OSNIZcF*~3*>aS\nW@9gwxsdF{wU+LVcSF=*t!lzs@^la5YXj$mu?6V&y+IUu$CB4?kzI9HAS!xbwvk8&oeJ+ri15cFo<||\nWyvaR=ABV>;8lgt{Hu=-q=NFTd~`pK26?^AbxNX$^*&X+c=C>ogBn!pLDU$eSdvW0-{I9P4Kz^f`x?7\n3r@-Zn_QLhNg8+Vk|rO+LUE5lzSE>2;Vy6i;cAj6cSMXh5BCitmn3*Kv9=zDfxiNjOSxXnaoL=!X7`M\n+2Xtza~jEozgh*;>*b}jv$Li{o&Oh9=)eC>>G_!8pfA#3ea>+Ot^uHqbY-3MoIqypW#_NjME$6JCD;5\nW1f!_3TYB1Y23dWh6zoslF4`)fqnqkQ9L?Nz!F_Xqci|3WE6eG2Td=+;gG4k@Cw!^Y#;T<lba-df05F\n~csPh4Jd0pics7h$Dmc|2hVi9OgYYtZAGuv)pd=ovwbs$~MZ_ZJ3-RAi<MD{y=#NKff=?e_Ch2bLbv%\nuH3X^yWQ@!(K40sMFc8nbe_Kl(zg+omT8G#CaUrnPOAPu5$2&}1x&HKuM*XeXTPc1p!Z4=eHv|E8f!)\n*l~PUM^(DqYP=QGM>>l=MzL!eh|4Ohpj5>T{jEF#!t6G?tHKw{z6#0pO1vd|*-2rNmjQMUxc{daY!cK\ncKxy+htmAdRqpzkza0Dhn_^Ka&nqnoPz22jG%zG8&RaJ|L)y8=-H;b4}N^y>$%n2`)@1V9?!Kt_UU*g\n%<=tp!-4QS3{bnPSn0oRysO;SBj_=}-*lAeCHKp(Anh&wn<K3;?JoC&aNSk>_jTV6H8=3vBy94%D~$k\nGgQ^0)ejc{*?=D5XZ-&3iOwU!q-cn%X0!B;YN~*20E?=jI<%O$)b#?`a&JBvT(2S~aXYg=g>ryqX<2}\nd3aJkX-!zNT+UfdvW9U5SrHtTk;at`)!c<6{+Qk{m2SF0RiF0jS!`awa~0u6U5)@{3m<SH3{6S-)b`t\n;;PzKCUw(uMp4*hhO*-_iJ5YS_o1#_@AEMz=#af49HfZ^H3Os|w`k^3}>+k}f9p?OFQ(wap>hDC5S!W\nFV+9Lh%@aU}T?d3D@5qw=XGNdC}e7n+iLqzJ2-sjJJFH60(JJqLCX~c`hk1NnmCOg1{~C1<eDK$WXIX\n8;SX>o%-Z!(0JMsrNuOgb|&*5iQxiA*%_9X>pjC3+I??}5uBJ{FfsyG9M~1l(VksW9r+XT=w?fd8`~W\nFZVbnOWu3L{5&g0BZeq6!9bOK*%V8gBYwLH{88#*8<ny+VFKJtUZDI2BTqt%6ivh;w&E;};*Xg~g@Y9\n&}p@1I;>DZRHr$7IC-}a4ekAA}R|I+MRuzlo9ChLZ#jjm&EU+n6a!0n;iiCt@RG~Pc@O9KQH000080A\n{lMSW0*~Kh^;N0QUm`02=@R0B~t=FJEbHbY*gGVQepTbZKmJFJEkLXD)DgZIZ!G<1i40?|zC=_L5YoB\n@SFF?Me$2goKI&TCQo@OjBzeJF*>6dHNmOacJoJ65H|o^UXh#W!dduo$kaZg4As*RLj^M9)v;*`|vB=\nqk+Awt%ZX&;Eo8}c+20>?6k$4b6#wrLwD2-XG|#Js!=d6pd%&NA?#}@v7sHwAk^vvn#2rrx)~&8bjR9\n-M+t_v=$>LGmSq_UcfB@lVm%lFbf=#7F#h_jP9<qr$Jmdv5<ucR%D}%}E=TMw=)v`aqnA5$ABYO>);E\n712(5v~&HXcbTff{qzpmjYTwOE9q6u#?I)dd1H6Du<16o;f7UFdYjd#^^)-Y!GSj&LLLQKjf>_p=k0!\n+Z-NjknK#Uzzml!p>J+pfSm%C@LYYgf^X#p3VBbSz-`3pQF|<n+s+8;k-k!3ilJIfC4%^d(Y|3qJAGm\n|WEzhO9w)=FQ~AMLSE_4GvJ*!BF4zVCI42w2>1L4jW(f8LV$`J_{)?XC|N(iTK-0&TJs{7i@)fl=>3J\nHy|}<8YLc^@OspPZ2mvo{)UEHpP5yZAxd!M1O&b4c_kF3Rkh?*6&S0j&HkIJvPt9CTQje{n7yo<=E)O\nosQRyFX5%g^*gsH90|XQR000O8X0rTP19C#bmjVC)fd&8o9smFUaA|NaUukZ1WpZv|Y%g_mX>4;ZVQ_\nF{X>xNeaCx0nO>f&U487}D5bmYMQX5+j1A?W%E<5$M?o<Q@W7D=)+Y&^%NiO^Cqx_NPqwBimV#nem`5\nvDbMUi@_HA8L+f~`Z#;A?_s>I&ni0JOHyj-fS0-w=2MY=#I&zIPowW787@I#Ri5Eqc9?u+q38DDR!4&\nV$u<tgu0*L`g{k-FZ3ErUNN2c^z$?_Ai*8v69S{!=lHg*)QOU$m*^dGJ9grV3B#Duq%M1V?V?};f$3S\n$%>^X2l8=FCT&7qV^>j;s7Sag-CE;37@psF&#H8$1-~DPO`q>Ido>;inIszpnon(mUO2adRLGD`vMHq\nsDy2HPEXTa2Ouk;rVTUa(fxV02<}N&!3gkD5I>VFKfr~H|?0s$A>Kisp@l+>kF*lrzDASd?x~R7RXRs\nAwOV}9GzzQB*Pp4g6!4D?*m43Ch(K!w?`rg~XG!^m-(B&`#$xXR8ZV$8*c{mx+;(=Pyo^mMA<C_!?eX\nXWvJS3A!hLeyo(H!vMH6GhM5-faGN4=xWtLt|+jeZJ5l2MGY`HeV)O6(gy_S=NWEJS8g>(L7$n!A`aJ\nXF4f&5iyvy1PC*Ud#z%bv)=9LOUxa4oaN^;}Z-0|4fB~I6Ik*3M-*mpxf#$x={0N8y%{hQaSVNE3m&$\nT&b(W>L@hlJ#+A$qY7OSE+fl=ILZx;8STjeWFq)ddvAG}rj_<}zmX}nsoh%)lTS6Xtg7_m=iA%6LDRE\nre0ed$t$&n1>wg#V@gT@h<{cNH6-(+c^VKlE^(e1kWXB#~sI#`;pYe|zguv~mS163N*N2<c>D|pfz&*\n7I+#B;GTO3mId02W|YMSKO5+gie*&_aWvO1HE;R8HI0Tr#)Z%|7E1QY-O00;nPviw*M^?BK@1ONbE2>\n<{c0001RX>c!JX>N37a&BR4FLiWjY;!MTZ*6d4bS`jteO7I6;zkhu?q4x-K4444BuB5;(x%c?$yHPcq\n7aFmqR3h7F|4w9-Q6{ub-n-I*<IT}dMaPow|RT!nHh&+xHNT9fY~wwIWG!S8hF_*u{3bsn5`^fPZwO4\n8d#Y_C73Cs+66h+M)7rR>{SwmVG!_LC6xjHC-^#1sAa7()ZLYkn+-2F-B$J&y3s+Q<PJ<z(Sue8Ocz0\nrrc8)5g&TMZH)zs|nQdD0JRCx(O-^>w>UE>-b~T;fE>_F%IS2x43KdDUHWQMaxw9xuOSZ!_jp<pA1#F\np4jnGjHm%qVUN-+t5envHZVSlYdsn!DE0!sNeo4}_ZuCDElZ%U~U>ay0D2fd6!Q>zjlRgLZpzhqcZP)\n^mIQc@lDS4?X!>0qdMm85$tbE%SA2?}zY5Y(avW|`i9Ufkc!m&=(KYmJ>>xbRLvi|k?olsXqIFO7G>=\nFk2=crEtTKm!RRUi+;?O+gzdq!98z`PvCyzUpHDTVpCc8I3mFZ0mKB$=#@GDmJ1>MpZ4u=;!hK3nEQc\nYs;ooy&qqFxVjp9{r7@pm=hPdhN3Pr%PLDoQd3!a)(A%S)Feg$-G7|^WjW~-{OPzl^la8!S&JNy05mn\nRr-6+Gc3@2#%|tP-NylR8vjD3t`k;aAvo1Q23Nls>46KpxWdz14R@^a%8KWYpiG7Q7zWB75%@(ULKH^\ng3#6hVOSz+nWAKKj_eYjoBXP@C8zw0F9qZ}7#Gv=iWZJ3FQJWjN+r~Na!%Y@Wu?>xzb#)&0mi%yG7FK\n_{?j}P<d{ErD3zC(}&WLwN$VPA_96<c$`O)~_lYzkW&IG_aqatVi#gwD}pVHA!R<cAF|;o2hS0zCo28\n<rxcitO77S@yn>ZVU33?GawOU|-IJ&(UyTI1_K-aM8ap>yq8&nh2~Y(~4q*15x!Heqd|4$20je>8J?5\nTD#xQc=8LZxDXD8whFDM)=*a_VSHMnT`*Li7x1{n?{!Sam(<`FbF7C0(~x7OFk^;_h00@`TwnVzbWN>\nI(=n-3SlM#g*&a^Wqozceq^eB<N)~n6q)kD}%R<7h5RHd$ech(3x0`mp5a$2uVBkS_(zf6HS3`8t=CW\n6|LDzwX(A~FNDr}ikt9Dzm8rG(`{D~SnTI_XyYzI$fd=a`fHeEc?+4JOW=Z(JSw?$t^ts^mvdM{#Mqi\n5L<Re1F4rdxC#-T1#=B6b;VRl8woD7$`0`OdUsjpsQpiNu12sZHz-4a=EfzUtcUW$Cm=(w9-OaH<?i`\nJffUe2{?emSllukKvi?bD0yRc9o++wc{lTtr<-v>X)R-4(&w9%$tp>=G}+M3o(LB6x@wSHz{ZoJ`KFv\ngXfo_jj4I}<K+CIU#5GebTpVvf4{w3J`Up8$50?s{kH<p8{S6B8q&67ujsue2dSkKz4tf-EeRWyUwV*\n(li^NT{~A`VS=c#$&>OC>uuG;kRLvU0Zw~tdr;&NkE__!sLxRN89WpQOS|V4n^xL5QWFP~!FglNIhfz\nk`%8EkL8OC-NM5j;ShM1TM9y*QGMeH|)J1h;A`@c|20|XQR000O8X0rTPwzP?{a|Qqa0TloMDF6TfaA\n|NaUukZ1WpZv|Y%g_mX>4;ZV{dJ6VRUI?X>4h9d0%v4XLBxad9_$=Z`(Ey{_bCKQ$9>W9VJfNv^C%k+\nb|3ThPBv=een#Hk!YKZBnl#B#|ZM@cSq`lw4Jwg%LhlM$cJ~&J$F1h2!daE$!n%Lurh<Ktgm4!^cp_>\n@(EsDyoR4;Q86v9L@x9WKC_jIM?nybMxv->t)b?lWi1QPyGoQRXh(k&N{``VrG+e6K8DXtmGhCES&1r\n6HoVMa9ak*9W-DA6Yeeo=ha<qhPdmMq<zKv32r@Q9xV?QyTdQ)O(86}GGAo>s75OGoXGD~m*Hz8&Gbv\nfY4@Wodh6PKLDrb5r>jDv?(I}DXCSi5DPS60Dq5m-%BXS<rK^VV?lJM_r_{4z#SB)~hgcdmw<x(bECZ\n)`z4&BkIC2EfLj3JKWMFgksLFsyGtT};?Wxj((acC;g67-tGQq)R=-byH&;tIiHGZ&p{>Jow={whTo7\nOV;pXY3g<pI$7Y&bq|&H6$0Ow6!sT;yK4Ji)l-XPS@zXM@DQ$&BDmCy0jDR8u~Mg<KS0`mK36-e=OAv\n%MA)5ng#KymQAI?s9#97wU*<g5cvrWN;C%ZOi<A<oxr%lne%?g^7p4GQx01WYqmkf=UcW@Ac<65kY4i\n)DaEi7uN@W00jssz12Q=hpjpU3Fb13mSE%JJt21?)dO3r;@f%&EpM<-IW4#B|-csD)Ke-VZT5+{AHej\nS{bP!U8A;*DTKVuI@$%5-OC15VDd1qMKC@qU5h~a}q3U_eDVI^fo(y4hNH~ZEggaW3Z!Q@Pvf@4}_fU\nad64NR#>2u=1F-8CpM9(xGE?Ok$v7sSLH)1eJF1!JD`GHk6%f(WLI$XiJK83iD?uR|yDo>qqS3-iQt#\nRs9CSTu|RrgRCJ$ja|^E8Fmg?~W;jo)&KE*jHV4v|JXf+~uNdZl0Pd$2PDTV?u7}NffWTr)Eh?n3-=_\nA8ReBh=u{u)@7Bm9%eI&c5Bqd`Q%mLve3VooVk<EVY}wY7}QOP@`pky4IT=pozlEe4wjKTMV{ZJ+*Ed\nu%MJ(?f)$+vh{I*t)QYRv93rpZy`vP;Ts^}swU$kukzP|-DinO}Nd9EcRJ+D?d#!b)re|l{?KZZDLM-\ndmS;jYK6|WS1oSvg$XD9b0?I}5X>X~+Gx9NB3;?M>Rg?k%_%eR+U4T77um&xU;;BM-P+)5#46;Ty>Q9\nBRdMX!YZ(I7`p!k9b;!1G6hbAFF-9+S#>CzW0x4$L#9@@DdoR2~us9Fx)WCGlqRR7p(s_3*DFbF|#7x\nb8~MGYZYO7M0kZb>wMRt%GQKSS*k93iqfC(_+3?pT_&TTO8Zrk$M{)Df&;Y<@~0?W;bDZF1I{$ko%`;\n-@DFxnr$<7WPI9DSV|28L~mDX!|$@h7MKPU=hVh1uES0Os>!LFoG<JQIu9!%?+6@jWL^=9UtlmDG;%d\n0Aj>inXhTYBP*YlZTwYZ~*r{=&#b5ML^et|x46`%rVI#*!@*u`Wht%&(aHC)+xe{+X_V$49df`Fi-W{\nOlnVN}qY6S0LazHipgzbd+`J!zSyMam9eE8~VmxlXmqa!Kl+!yR!1urf+r+$fPV}Gv_5(tt{vG05D<F\n7}4ua9o}pn$Cz&2xm{zn>jkZo)pfyWaT#V`!?6+<`)`KrMq?f5*GqcHUjkazqrVrlLz6&nz<!`fM**4\n`-b>l?-?Yid~6EP=?Zpm&rDD@jm-UTPLu8#`6sitKJPTH&aR-&aivz2vZeL#ZusVQ5ujh?HlzawxXY6\non^&90Hfg2vDde=xQ*$g>6Q_^d>K%y9lX2<#(j8jfXt5JGtTR_-ikb@(~l{IJ-X@UTWdi!HT?L~huAf\nsqj%ccymP$lsfV3xV9QDk8<vZq*Xo=f52k!rwsLOlr37-B;uXer0X?E;f(=`@z3n0CKD4LcZ??hFu)+\n3>u-Z7}fX4sZtr0Qqgk=kUC#LBjJ*V3HRnXC|SN{4!ahTIovHiUEA?ZN9zudM(+Vx;|Z@D8{`%2cX98\n@%W%Hi7Wr;_#;8*`;cTq60fhDD}TO{<`<i~YjE-=5*_2=Wg`=a(V>%^_Da|Lgc*I_YIbABV4c7iZ3oM\n(%{+z&v&YJ?w=0W7eS)4sSE(`TsTleuMXZp!4m02H{U~>p{D%rG6vQ+dcXRP)h>@6aWAK2mofX{8(%g\nJ+7Dl008m;0018V003}la4%nJZggdGZeeUMb#!TLb1!6JbY*mDZDlTSd0mdd4uUWcMDP0*lb#^aegKI\na{S8uKwT;k{vP$@S%St@Br^)QwnKi~-Q^x8!Vh%G_7iEDY^q%`C#4`pbjKWBm*pe}ZC`@z8qMO|%qJi\n(_YH(W@mToM5?!>!TZR~P`5aom^Me&C&psE_@7PpkfhEPTmaQOw>U08LiT8T$^mrwr)Z8-`wyC#J*%P\nYqtwf)}G2T)4`1QY-O00;nPviw-*E*Jw<1pokh4gdfm0001RX>c!JX>N37a&BR4FLiWjY;!MUWpHw3V\n_|e@Z*DGdd97F5ZW}icec!JbY#u5V>ow3vp$cHcZfhX5gTzHz7{-Fyr6e{Kxh1)B1VR6v8FDXNUC^MY\nUnG%pJu_#9PSZ5GfsL*j$-%9e1F@+k-*DwDIIX2nEBpkm*a9UuvpaZYM&Ypqw$P1(ir0ph%n7Y*o}_3\nnK^xjQkb1R3!R}|Lmn@CmfZNq%yS=+ny9^#{GQwmAPyDO9f5gvS%`^Bz;c*hwYEkFKma9seyk_MWMjr\nAlHx^|&Yc(^L4+`CJQM7VJ0n9?#7=w9shX8Nj;qmEi298_IzGkjmBPPOvVjG?($?e^Tk9Y5Gp6(wXir\n+u|THvo=?*D{2q|wa`5P+nV%v$&$>e~UG&msRw`#GH@fPXa#qC%mKz*Lwl>{`FJP|XMzwEv(LrjxvZ&\nmHtXU%iF*0baOQj<1Y&kyLyMv4x5EvEkOT6`utppIa*#SZ7``FM$#Al{UMXhrE+$FPB1cf?!4p;RySJ\nD?J0D+#oaSEBG7=_|nEc=tLsqyuY6UCPZHYC}Qai0%5ORbkSa(MeDpY{hbw`w5Vi#@>!p0)+QKE!mp_\n}$tAiM);0@Y;>n<Uw%F4l5Ud`D#&Td_YhDT_<<56j<%z-#ysiay+^dih)=X8HKgxh!ViWSnOhmY@vKE\n%wcy9D^t<8DI!hFTudw(`bJ&CY%+#n`-OyG2SWFS96t3$y?5dTl`Ccb-xvJTTOS~EomV{+6WZ{RLWB;\n6Q@VDA~?rMiieTR+v%nWOa44Qr%JFVrjpR@XRT=1-=fu*lL%>IIYMGflddz1WrGjyx|mkD`ricS`3jQ\nD+>72e2zAuLAjh4D2&FyS0iaY<MkM=|}w$E5rQ?gT^K~d$;7wHHH^U$yS#r?Lk4J#GJ>TyU2Om9KUf{\nW6$Eg>5~BdRai&KE*n(_Gs5liBu=VFiN;QYbqeP|;3zVO1S0C0c4fV;cVV!PY$EAwZ)w4~ilEHl(^@y\nO!gJ(rsi~bXIE&zMRr34<(UXvDgMDm$k6sQ7_b-#4mQHL3&X2=HtsRm|k!n6F)!-BjcWVvj2kpR0<CH\nj)v<-RTbinvGdW+*os9}tJWWu5%dgI36j1k`25B>J+-JszW!tSVkIK2R6`9GAn)4efrpPx2RfB#NzHa\nPgMXdVDvwZo65+Xk+#FyX6KbH0yF9Q^#Fy&ZF=sj*OJT4(6YUi6-Rf@(Gkj32Whr_SK}BBX=0@hD-fw\nw&G$jKE(u5`4wU``{IY=<S5FO;w1gr2c_Q*s`%6Da;URqqm|$Mb4`Qy2(2VB<*;+#r85A!r^tzF&aaF\n(suK3gwzRhCK2>%=UV^^7b@J=q|3DMm-DVo;yoFHq36=%=s7fnxAXR<)oVv#JJ$=m!&lNAp8L!vfp$3\n6)BX9k(qX?p9MWkvsEqb>>nIx?jzv67)X)1v*pyr$_$3dCFZh~m1?_|qdvL|`^h6mOn38W%Ik~3I2I(\nh(q=w)o3#L72xD*v_Rom3`qQto{b`WKDG0A93j1x_7pw`$TwALaa^1MIf>35ipDe<o${-v94iiD;jz8\n!Jw;HMPQDvYX*Pd&{45#NX7oA1HRGxi9v+ksV-%7U2KU`Hci*Ur^;c744PZrv<$jQqOZ)$AIJdhJcw>\n;2&r)R$3{)7u`>{BJGP5DX0?<_cVPdH6cnGTHEHECBu}i)4wMBkIKO*;wp|oZe7;>h-4GobdD6Po!u<\nA8`SHM4PO8t+W*yW}xw=&i~KSzy8MWD*AHz(3@X)R^h|0{37|5%lS{!<Qq^+0|XQR000O8X0rTP%_@X\ny=mP)%d<*~pDF6TfaA|NaUukZ1WpZv|Y%g_mX>4;ZWNC6`V{~72a%^8{Wo&R|a&s<ld97C8i`+I4e&4\n@h@IkxgT+@d<EjT2k1P)63&^9k27_B`%D`!itB=0ta``<f~ZCUc}UMP)WS$RA^Kh1nnqht@}%fQ7W@P\n3fW!0&_MQm}5fYwX8?4|&OjK}E8>mo;`euerj?l%whvtGB9Z`3WCHBQyBLef~>zZaK+5RN5|HaN2S4w\n7C0~*4I==!%36k>P2&4rY()Mxm+_iRbG>pyWOtF2G;aTrpp0`SFe69XQ9Fd6^aV?tJWc`NU$Ccpp8o5\nr`PuXumgIMBzY&r2`La;)xk)5rIbM7-y=zT6vi46;5nH%(=||jVjZuU!F>vF2fP6;oG1g+a;ikn-j3s\n=GY!2KE;YD^1m3{pxl!!Ve$({v<0mJwJ~bEGu(-yYhuf4+MQuae7qIsqT!7^3#)U=v`974=@A=JzS|$\n6Qo08YhiT9Yg6?WgqG3d41dBzENEgtUvlu65Udx)!AV9VJsps2SgIFlt=jjJ)!+BU#T$<G6k{)fEdob\n`B|-lY1nM!rZn3H6GE+Tw<fbcx|z+{84wvwo5vlKiveV($&oxfji-L}+t4ZjDqW*4(gThkGqYRiPccb\n)Nj>973O7x^^FVD}vb%oTb^i+k|v6Bfeka7JsS{XQlK?ibNu%<)SH;T^$@BWe_I3(BwzT{1c7WZ&G09\nv`emuf68-<*p(HlTB3`ilpQI(XVfmcYlRa2);1?w8lZIt=%qZe>WQ|L?CC9kM6*a7oSFjkxOdjmI^Fh\nT;3UK^b9;r_U`@1lqOO%9gK~<q7`S*A7t$yh#bl#tV-j$ot;(63R*t4z8e=oq_PK-iQo)CJe>f|h!5K\njy)|Mz6PDPSEP#9o!4W1+NaDH!K9Hn#z4-HW!t`+*2<W(uugA}!%=-JuV8++$E18$&4CiKSH0vDVaQL\n@<B^1dHktIZXF<%<j?`A}!B(Rw}0v8zEy`|*Su2S-FPr<KElpy15VJ6RH3wG=;2R+RhNlH2@gFI>{LZ\ngNyT5wdxtG<U~k6GU2m6R0m<P>qQ&+5-orL&}!R=gI<Xsi-R;w9IwIk~_H5-Bv@w<H!j;+b6T_i%_(@\nYOP|$1clcF4PMl5HpzLX!d?q7y5T#-W;-(rLLoB+#CnU@>|?pj&SxZaTs9xivATUIdJ$$|uL9YHme05\nFt4pQJO)jqRL}Zr6uhG#n5mO-X^pI`%!5#by3*tXq8@eS~-1gBi|1IQh($N(>m$Tt}6%fvV9s2oTh-9\nU^rWI4AUJx>z7sdlMJES|8S9mVIdN;vE>idEe+_&~NP~omW{~NJ?0Z>Z=1QY-O00;nPviw-&E6zZN0{\n{S@2><{e0001RX>c!JX>N37a&BR4FLiWjY;!MVXJ=n*X>MySaCxOwZHwDD5dQ98F}NRUQ^)CcOOFOxI\nF1$yWeeLLg<G~pv1LaaMKT(B)AYFiek0kk<0addtv@8T^vpA(XI><Btu_`kMxuW+JiOrnquS^l*h4E+\n1H<xrfi{B=trc1^8TF7>w0R+v<%ZUBsY~XzG1#E6yl7duWevv+I^?EsYp0AmD<tN(!q|>Uu5JTI5&=D\n?Q;LEqI#m(Jgv$Kx^j#=jG*Yjb%%U`kih@a56z~eJJTT@>Q%Iq<6qVf+E{uZC>%ZdcUPw3?L9U}Hs(1\n~>2vcmwF)?iK-&TOuq_BAH1-qh;>s8Mi$Nv8>t!_D;i@^oKVaF}2m}PLwWXHj3+Q^A};kdyuX0Sd0Yg\n>6B0X&7>a6o5_-5Ra1or?_^Lc47W!%=sp<oFl~RC6B{)SW6FD)$5z+ESo<4kc4cTbCI3s+B026yFA$H\n7}Xl5f(N?&Y%)?%?(!;q;5o+N1p662PRR|n%+XKjSr9H@WDf}7j~mN3rd@vBlkk4E?VTaYpvE2;l)cR\nH%v9W8V|T<2j|(Vd!$G$Bz-3vYg=3`mkqIZ>%7#vWqWAZa^hSH#E#?g`Pqv<(tMTzLm;DulIRz5k}`>\n}zWllPhb_K6UA)Y%pTrr&3;GGEP2mZ|V<bblxTlW)4VeG#?uUB$PT`%XozP|{>gRosncY#vFSbVC@X}\n6&vuASax|p2h&e>dvc@a~a+*j7AhkFk$e(K>J2sN^<CM^gu<8ZJ!=>$Fwft>3h#2YPCGWyBp=IP8@)T\n5O^r$Q3I>D<jx-UH&e7A~~n_h%~f|F320vZr>%?5M`xxRW+I0@XSHO5=iNq$Y&f3#9D1n1&wvM2nmn`\nW&$2iW#8?70*&|4NMxdqbV3pZq30>lv=3DXN%;_|Ni*qviSJ!)0@l%qvkW(8$L^WKBX7^DE&F+Im!7z\na^UzdmZR{dn1f+bY4zClBZmwJ2O&*qFWOtu`_UONB7b!5=?slI-N}kZ8|bQ{nTO8N-tX8!W9BQQPY`i\nG^IYTAHYP-%o822-!CpuSHyzqgOfJc_Ftk7!q_oqeHE%n2C|pf9gu9=vqoJPfyXumoiuMFKT?$-P$xO\nDXJ&4Mc#;Ln8NxdrLeLQcK8Tp9miMhlhG`V;H$Bz#1(8=UzLK)%jO{7x;$<hA$Ec)RnIys5{2T)4`1Q\nY-O00;nPviw-a8_*XH0ssJ!1ONaZ0001RX>c!JX>N37a&BR4FLiWjY;!MVZewp`X>MmOaCwcC-)q}25\nXayBR~+h#wI!xWAQVIP&@LT=tPNfF<d`7aaw6(TMv@8n?{|_NH(@bMPxjsCetmVeIMhm8$W_5}6NvV$\nQaP*m`Azpv=466Ws{`0mE#wY5^GX;yg7>DznBejC*YDVy5^qVeljUXv#_BYM1tbCB3EP4Z(%V1p&krL\nYjV;FygpO|cC-V-N%m<0><Fbdw86W0W7hE;O&88hRn+_766=&1oipZ@lxVB;%1k0DF*Y7`Her(^CD2w\nJ%t`4=Rc&Iai8BpIOUZflIB}~SfW0ZcSga$!S@Df;K)fQ`Dov>h*#o$GzF#hIrj(r=1kf%M*KY+Df=W\n&--Dvc&=4y?j^*P7?HIzhoLK7ieG;IgeB_&m?7sxpRo5N{VF+HqTJUUG~r&TxpF;S?(I!9mqrh7^>9^\n~vs)oMAIQnJb>D!>F$TLV{lz?{-I&;AV=9W!jpfu=@}r=qKQg=C;w&gGq(89073}b)uZJQy+8(D{c+s\nUJW;3DYU^+k2sK!s0=f%jrDRpozMC<oy(cqX6j1VFe4jDXcAA;t9Bik+{Y7K?*(M!jsTMdT-<MDIMew\n)bl^XOn5MG007Li{&5Ysxi}XRlfK(P<l;l@bukE5Eqn%bwZ9<yd_Yx6iav=yElJ&NfH-J9De=G;eivJ\nLY;2JaRtOvSphX#KEP)h>@6aWAK2mofX{8&6>W$Dob008(4001HY003}la4%nJZggdGZeeUMb#!TLb1\n!9XbaHucZ)t9Hb1rasomSs(+cpq>*I#ka9%2KE{M3gA=zz2f)&gA`EGg0<3shR7B6bofkdz%G$p60YN\ncmUnb=?dER;au0zPtPGXw~(`dQx6mZ%peF6%Wkj$u)yl?dHFgOKNL6@~d9y2O5t*D(5r$)O%&LXp?Bt\nt3EH31~ks{vQ>E}lwP~=^D#S)=JL{Xz3^+>+Ygt&e7e0(lH%ga#k<cp=Wjn=6qo0}U0l-}x=RS36ewv\nH9&3Jn0@HjUtpg)~*9O7A8T<SrHu;ekN=N7WMAd6PX921ZZEKdYD&(V=nq3@NJ*8<zX)YgS`W(&vk$R\nw?=HHCclU`Wwrkms1SPDnPg<Cf%@2#nZ(oYUBvtw)`+<lTHm8_{)TG98?PK14MXPchgaSQL9xA*rTc4\n@Sn(&^6#>tmK_n!c0TThY=85Xd1KnYJQ+wd#?9cX<*V-UH8ARl;J$Ev7~|{8i*6Dhrq$7XmS*WtG!gS\n&G3)GBqjZ2I&Hpu*$L8f?Tf7Z{BAt#2gA~GU|rbtG<<Vwek(p&B!-WSqh30C8viop)2Z)^8pX&u<1Z&\n!LTCmQ`&iul~qPyU>&)ku8}6wU6EIv1jr6+dXPTS>&yb&W7;={Ya$m)c!?m&p?^xp_-NZgRe+&RmW|N\nLb)kq$VKwuJVPP4NDrF_u<2-QnhQp)s*7P=@_pK;p0BB^}XS9^0&2p?|>`Wcg9qh{{5t=df(FF*^pmM\nMlHiYKq>!ycqF1GWPv^HN_$Z)dN?d|#Rmme;FJ&PrDG?!s5=!N-9Ry1ERX^!nmt9rkVnbQrIW~o3j-G\nbFZwXAeO_2369X`DfB7;lL`^^WmXD+QF|q@>3C-kr^656U;goR`O}U-e=JpIMaA?A5E+ucKnCg+kc?x\n*J$Mj)kT{BhPjfvS8Q!pxoYtQPtR5YvwI_voZsfNHnHB3K7})hE7hyf;$QFl8`@A*}=1e4z1_v#fG=5\nO~g33R-zO-?8`8-({Yd?zhW+(FF0x`Smy;2ESOmVyh#{fO!Q`eZ&=5MYW2XiHG>ZcGX^9WUX2OFaoE#\n@)C*;e?(m$iWieM;*i{jE8-Tx|^g8s}rL<j>BwO?;h4r3WZz0r2_?S4!aRG+84sWsp{AnDqpJ+^k7X_\n%^eYwm3z}nKHlbCeH!)@>iySE&?K!?^6N6U8dz*><bAZJ=D>sb3?!NlhI26qs{#&KYlMO?>Q*0>kC5<\n;BdU<A+6nn}tqd<Ue{Y3}+~`N`<wWFI>Vf(1CBfklXU1az-fQ*O$ZM8H6{FJR90ZV!IR8L;cYb+I*#=\nFonzts3~m%RgT>s%$1}sOg^9$Z*eXucLb@WON(_X-xJGjuARA;HA2bB_DC&xXA&X>36*xnAED3hry2#\n$c|baggi9cCow%cFc^n?U7WShKRX$;`SrB>O4~UfMJ}y8aoG8kYOJ($#~|O`9CiBi{aq2()nxiiaaW~\n3v|vW3|Gi^&mrGojo4tZ6u=cPCUi5w==B>o$m=Zo>bspOfA^K<&%BDPOww?EFgjloxHUz*sa5yTj10`\n|b9Uc5j|LXx4<xY&4&3yc^gp0p4LtE(+kE{^hnNFfhxK|v0LASVXll>sc-%v{f1QY-O00;nPviw*GJ1\neW52LJ$86951q0001RX>c!JX>N37a&BR4FLiWjY;!MWX>4V4d2@7SZ7y(ml~~)3+%^(@@2}vtAKaa2<\nnd&kWC!TQCXT&pY~TrefejdjKuJ_Lr`e>Iq^3tfK0c>N-TE>UY(LECQdKNgojO&N+||Z<R_Pu0#bzes\nt#RX3T5~_Vuw0jB*WbC;%_?hltT5V(d#_~9x>wzk9oKv<Y?Sh1S65PrUgj;|iSmP>8*bazc+<(Xwbbi\ng>L=YM>}RPV^5!OC{}x(U?u|{@uhRL1ebmzEgcaQRS=6s(on{j2Tg_G4c&S`km>u@f+guBu(YCTimJj\nRfq$_%j%2-4wbMklbu!0rdw!KEUnayUUs93QP#Wt>J_V9l}m)FdByJQ#tWVtcwddBd3!roMDFIZ{xQ_\nnX1PB6~)yk*`*Bg}6E6ICS&FYyxoGgINAbgZ_f5Y8neqC0DQ@l+{x+c?j-bInfRCBlFe;771kN()=Yw\nrNn26=gN875B7dwpy|IUh40z=FC{84LRkw_jX~h(j0*l@L|4;?$ZzZZmeb>Y$ImjAr=-Rl2Yk-?m_^T\n@qKN@oivSOEB4lC5uWWggcA~Ce_IU_<05dgx2MECaL`#CCF1^HhL}M*m_m^DR(hVpcHXk0u~ul$8u*t\nUC`R+$<`zqe!sVgqX#RaI3dt2>qDw`XMa-BrCfa0DBWNWqki8%xC`q-jsy$;22o`W~BdiGOj{Y*&l!o\no4-<Za;i~q1n@pXEl4XB;^7lPZN9KoG}zKj2{w74%s?b*%ySJoPP-eQ;E*IYSqBGA1YS4H3sgaous?R\nIL2IWGvq!M%j;KV>)n9sNAj?xB&y46oRr8NdN_Yp~2@yHocm>Rnk3HP_cgV7=MwUq?hn)y&IVUH~|m-\n_;or+E~sB`{tYNp4+v%CgKX!Juudnk;Mq;@$c8TpZR?LE_%ipnY>VPiz3Z$QJkzcAR2-faKsr_4I)g#\nFM1Sq8f)nTJdYIXSYZYCqGV10=t8v&2&CsiJKUF~nTt>mUTC^2rQ61etvrDiwz}OTY8>?AnDnGycB{p\nm0-fNPoI-|54|aQ|Pfsa6Fd3{`qk;`uB@i6``(7~ap|^{Q(V|TII7Na$MVx6Mivb*^P$=J3$a6A2m3D\nO&8>0viRmuB7Do0hG6LU>PV)GQ~n2(S9^v5Slz>8H=Zgh?EKq+;r#R!LLg!oA%w^FFG(;Qw@P*v(kGR\nmZtYTRaVSlrl6<yu`VdKtt@o5d0oJhK99UkG>=TGqmOQ)dAJ8G^{$)$;@yl74lWUcFd?_tQ>;l%F7J&\nSyQXW(aD)S$6U`LmOe-5~gYin1n9+T1lV4NJu9^fHz<|`_wVMwnFTPo(c5I0p`I=2<=#-iB-{pA*dv3\n(TOya=E<rLc3J>wXbybrg3}(+q5LD!@<>ffW;FZl=KY(`=(JXfuFwMeBdU&Gf07uJ_U;g}p|>BjTu_d\n1L^`2`C6v`NmYp(K6ot=2g9<&HWYbA=q+UGs)PAdz4%jKL9w9^eh2|I~BYPf#D#zxwq1T}U0f<`MA@t\n}aj2czKa<nC>;kopJDPw9ElAQB$;z-BLw92d>GvF0@6DEw>IC(!mnIRtR2U8|LkF<Wk2&i~O<opmeEI\nedrZ|ruG*=x4(zP^6;EN|9`ZVS-r)Y$biiFP8cUR?dyS)y7%Zz(t#p?=;|<6l^~dVcvsFwyf50yvL8h\n0R2I+X?g^w?XvLn_O04&f~VsBHp;FH#`?UXyye1vEInrt=ef*|Ia$#-0kn%-!GqEefRel-~aIAKcW^*\nFd0oQ81>g;@%(avsLqeUrEh`l^cKx&5zhr_u`#H|MZfa$*xL8Y<%GhNn1C~wiD@R=j}T&2Mm1^+3$hY\n`ag)9K<<mR%N4$Rd?$u8p`kPmuU;a9oA>xcf-Qrc49M8-;)X9z&eiIf40*AxK8HFe4ywq|-iJ)cWqTn\nIhR3yY^lcFEE&QT0$v+0qopQ)xi)HZUxLE~;TO#`YuYpy^epsov!NRI4)G~)rF8*+lpiEDk~6KTVHVw\n92l9^4*U+Fr!Y{J1SJM@hDh-71?f1!$u$YAf%Mh&474CgzCn^r)?!88}ZTL8Lm+=AtT3dLIQ)Zv$AC=\nWLIMm2RhQN_N<2oPQ#vSuU~VZbn|rKVl5SF@Pp5%r&L-KuG9A{dr(Gatt|}_ryemA0|jQ9U*Z^$I6kK\n=%D)rH^;Lg0YTv%9RYEuGOF=$aCP(~cB34#6Y*~>ElabY!^u&#$v8)aX#hB+(}yfJEPM+HN&Wct&F2f\n}TX^p_l=QVSdGBD_ceXfGT#tUDK)-w)=!6bL3CohsBN>Q&&(-$0V}*4E9R$1Y5j3Y@rI0u`1ZFwu6Je\nUcgo>ebaX=+;(JE3<MT>UU4~_xdSk-3(&4Et%N1Y*jVfca(9QKsq{_Etd9!iSi%)BFnCB5Ct;WRzA=m\n5c^9rxl>pLz}S*uj|rF!3|QL!RRQ_0-hltHt6_XW3gEK>2^{oFtK?%k=U%$FS!9I?o{`9p*?Z$RCkBd\nD{&R=knTVA69el>)X{Nk%O6otcR~S2LXLF3Xetgj3Pq&Cs0cR1QY-O00;nPviw-1)lV&00RRBZ0ssIY\n0001RX>c!JX>N37a&BR4FLiWjY;!MWX>4V5d2nTOE^v8`Qc-KdFc5yvuQ>8#nG4KEVFNcR3d0R8+fbx\nNO*N1vB}u32uiw>LZ0Cc^OLCX*zWcu8D5XQGg#XC|NSzp)axaZ$gi=aKVoeJ8C-n|wni=aM$}=U-Kbg\n!}EVUO_bH#Emm1C)Nn;PpfCA~O$LOw@f_!@^_Q8<~6-zM+~lpXeplIMBvlAiS|`i1kh3yiTP0y~s>Zr\nQr%(Jof`bwLC2HNRCw08dqVENHh5n{U;4BkU?nIVJ)!AHUz0SjY_J{jnL4XfXYsy<Jhct8Z@6<zV_U8\nh?Zh1}tdHfjelA5EJdDm}pIl5V92sNEdUv*~@PcC%6C|%~R0_R2IPf6ReF<{c0GLPKD2{hREi)BMGcZ\n=n4sd!^UVQx5A1oaEvvaIicia<qnk`xB@7=-iA}FVDYeI${d941Sbp<moTZ}+I6L*JoX}mG~yvwPLN+\nvO9KQH000080A{lMSlys<D+~qz0G18_02}}S0B~t=FJEbHbY*gGVQepTbZKmJFK29NVq-3Fd97DnZ`(\nE$efO`pa0bK%6ghTQq|ML)>&J=!MmjWU_fQN5CDAq!O4LNEj$ZcLcP>deO5y|<usk?2MV|Y?bI-k2Wo\n;Tq#*S2YvYj2R8&i_&YE^A0E`P3_GL_H?-L$oqqtU34Yuad)<*OgEv3R+%uEB}Plumx#@Bfa)zb;0Ez\nwsC8+NQGM6va~%P9<a-x-yj{wWi8AYAsv$Thp;W-}vJPZLV@tt?>xkfH}Ma@kl$FzTo))<(UZnXjCbh\nj+3HgDJv&<51GSwF$QDP2pj`B8Z42r^mnVABte;Sv=-LMhTK+E6kJX}ESD)=x?@X1TSHn}OIqDZ-9<E\nKD3g>m=2li5f2k}RPU&U~bQlp%ZaTKqT3L{)057pFszNjcu(Ae0MX*{6w>C{lr72o1FXHmnx!PXLW*g\n<UZ3gelS>3s<sb+cnpJ|iL*7<r~oSvR#>z~)B^V8G(O>z2WF<-CGit|%BpD)gHG0)EDv!%*ry{WYBj+\nXQDS0~H)>oac;8~_i~y)SRy(s-w;v&A_0GoS-=#;>`iyMMW<+STwz=<OiqlkxlO)u*ektL5dp_p5Ioz\ng%B_z8X*WhhhE6c_fc5-CH>1!sE+*#!x(m`;6rG*Gc107mIX$J_vJ_(0vS#-AZk(m74_D<y|goN0Z+i\nK(p4#k4<Bmgg#%#hi^i+VR3qK*k4~h2YmJwDSim0MW!W9unTk*1^r;iX_}_bUQ7HQ9e%O;Vue0ee7_5\n=Gm+o^x9W>UG#))ANtCv*W0=BA|H5bLFyCTPMC|vd&<U?kQCp~9_^mt2@oA~hrk2&@>g#ejO$Zf7!us\n+HFCtJWs#<JNlcKW;jW5@<R$5k~l%9AvobaJgxWN$=GBl#leg}$#U+vLQ;&o#-jVQ-a1$LsNorF^r1j\nKn9t*To{O=0}EooQ}aN!Du9Hj+&1BHC`N@-2C4nzmuwoD~R|B6qD1)n__T;3%H@Q&QPl7bGh>>Q$$fx\ne^+VSlHakCM?T4nYYf93&5Uj5vb^p29<j|-s57hIR?j3nLLMgJ5Ex#c$nAT?Ia>`lH{FW@<2~Hm#mHo\nF))pi{;H<5Q(BV@HKU~{7!8>b{cXj9Vi4T6v<@3|hud|$9YIHh^)Z5-?1{g>CPo)=V4^Z)aUCWc*aP2\nirWjTB3L%<J%ajii4sTGhc-7|ap;K5dB?!SC+~1jUR_e89p0dFSBtrTeGs}I>UGLJC8$xahNxadgNmQ\nMWBtdUdnz_N&aUb^yE2V&%?Rx&<I*wf+iYyWW0l>TrhdEB>kZ?|xwM(CtWMtQhsc&nMONic+DjSw+4E\nu#LebN^;(mn1CPt2x=HV*AR6xpGiUUy|?kQ^f|r$OE+FanacPkqAa5b+8krQ-zzgfR5HBs}jq{fAskV\n!1xkVHWADFoGO9n=+M=>id-Es~m(_)&9spT`w3lwxh==u^C~I=oU1?=NVJ7MvY|(y(->C9P$)M&T~jE\nCj<C|;Rh{h@Crr;-_k-dS0`g(bEVM14|E*fhpux!*rdI;*tlu6Xdo<oy4X|5BStH@S6NwER-SMnfQXP\nbrH?7bD^REG{2A~7Uhl^hmhp?x5l#^O^Am*uX_21ONlwSH>-3v{0r}81CQsa(OsB^lVRG#4A18DSjN|\nD;*t7K2{{Z`jVX^$K4ZQ)%;<mV+K@_?u=;Wj?1zzNp$p@J!$nPf}7cjdl7AN!h)Ia#6UY~jLtl))fD~\nzHErqx_P$DmD7Ixz0;dy?FW7Ud(H-~>O)eAu}|58cR0@?cv~)={l$dY#VGh1WTWJ5{oY1FxT#u?!Rp#\n!=5xx;DCH-M=8FAXZtaL+9vomhf>eSY8pm>AvRyjXS1I{XBD@T&{Hg3+a1L<bHe^k8kkH0oqxBU`>fY\neZ&ub3<Uyz*%z;4Bz7!Rv84%i?+3zZEOvN+lsU#`S?&7Wq0*|*hkSO8xovB&<2LQR3VQHJ5D)*b>q~d\n@@@O0ja55famWgw<)b`L0kA!Ux5T~Pm0Z>Z=1QY-O00;nPviw*9j5t{11^@tT6951m0001RX>c!JX>N\n37a&BR4FLiWjY;!MYVRL9@b1raswODO$+cpsX?q5NuA1VWifOYFIc*w9UO&eotQlwdj!7yZ6rft@esF\nGA%qv(I%-I0<dOX)gn^9Mts$m4T&&%KZ`FO{}z%gr{E%h6h^oY_Muiw%?R)BT@su9C~^tIJ=fH?Jc0i\n!8W4Om8FhLZ&uiQ!6xIW+Gz0NdxaU>Q2~77ZJNHtyBfiMowxe%Q%q*Ooy>pd`ty>H}yW(0O7SXIk)LH\ns^1I%fjtUid6sdUf2Fn3LlP@1GZW|1q_spX_$o=aRk1Upkz98*nT#0xNRC&&UY6kAqtWOIyWa{BlBzr\nx#Y(JbBIDUcF|}qEKIRI(*qB{zd9e{NBn{hdMIj!9rU`)C3YZPT@Rfu3l;)ZrnY3)Lil<=w3Wk?F-R-\n$vG1#sIO_ws0_7IO=Uc9@#o8Dg~*B5WE**Oc$mOp#`eLw(jcrFZrsZ~I5TH0-H;4xEs0KGiW)@NsgUX\njrmFIH@^00Yv>#R6nqR$7BH*&%}Y${<)lD^&q|aLY2mjb+>b!Yq>p#GGki!0Ei8VFxT8y}iG?y?I4=u\nigUUSq(WN@ZbLMoqu}%&9h(*dZZaQhCD8eb4w5e7i_P2S&|)L^JOKom0@|6Sy^U+U^`f<NCoMWZbiB?\n2svkb!zGZ0gzXBoFU~eft=I$4Dgk8hd$@;{ShECpByEy}Mr7;AOP@3po*~y~#%jlMe45YapxX@?XUxu\niq6de)mR&zjO0Id{h`eAckcB>Le8mcKW2u147<g7Ou&*_45_z$ahQF=&2tt5E)(q}gd;Xk#`rHi4b!{\n`?Xrb&0VhRSO5mdx>;sDbMzaW-Y<R%<<C*$u4d(C%1@(P&ZOiQHU*`9*{1Hl9+LQn^oBbfM5apbgj)V\nL?k<DLNqwC!vc<GT*Wglvb1oXijbj^~X4bXuGo)vk@!axW01@vZ`j=m`rP;{x(u{W57A49x^Y$Ls?n3\nu#^CiF#rVO-T=oYNt8y6VpNsz*%a#W<sKXI(IlROfBDw6t`ipL~4;8n8-`8QYd2)0|fFyOOPo=D%TPe\n1@eQY;|Tw2=eh)rQS0_{(w$exDDkO+&Kg6?ptVkC<JjP264O@r76<myU;+W9JU$BM67mLUiw<4FI*-x\n}!z{$U%jAZpo^sM}-Y{U8u#zIq`LyU#rqAqDVJKFj^8t`F+<YJy4=AdJv39Q=$u$2+RBtQi`Vi!eoyC\n4GwSrV<4-I2od?%@@3QM#lmO_G<oC-5l9%iBleMWG>;$M1rVh1)HkB`A2O@hv;r?gUFf{AIuDDOeiNt\n{#~AUI2<vQE--r5{Tmu@8B;kq@G1r7UE64W^y6yf(*e`q($Zh7GKU&E_p7D5oSo?fatdHE}PKrc;?M4\n_27@aN52^IgE-$U1FR}R|c^RSr=r|i^F(!TVS29MXk8y@i83kI0izy#c=^uKo5a$t*LFJY!vvgNB+hJ\neG_3~JSD!>hd#kk@~jbrl=dw|46Hm_xtpY2)5gMgNFr*)B6fc$-Qz%g(4=**dkfdW?*&z5*HJl^eQGx\nS9E?XDg~`0AtaoLvYLOWDj#@Po@8iK~aaDqEL`b4e_Gyu8<I)5Pd@P;7#~AqP=n7S;7yL*24%mkHep1\n57U?FbWqP8D(WX5k3c5Fui>Q)2C=AdrATV+i5m=|_HI+2e?(pqNq*7!JS`u~3#KAhH{WfB?&m+${|bh\nOG;JQ)A213-woj~`VNI_|Ak6CaN$uB+i*VznwE+u|&+zFtE60KG5S=CK+Y515qT9MOQW64)tG>yr-j=\nxOXZzbfnU;!yV(KKXi2w5n^{j3><RX5cTifZ!ui@3epn3L8of4)?uo)mcCGl4nM=`!`hDH*jBNgekTC\nWQ$h+@3k2q5z6ZZMmqu%@!_<4bQ~VQ@?Z3gLnJ!(x92DQP8%rMKKXLTfOEnQiXaN&_i+3Odp`0FcW<0\nlP5i2m+A;6veqWEjrfKty4IXg%<;&CTQ3*$0w#4*ich?`^#?4vN-z@k(tm7DW^i+DsDOKUFzEiIZ7#~\nmfY%iWdEagrJWHu^4q#>C2Lj_$t`q8;%YUxB@S!#YE0#ggeAh*OvX=@D~WGQ7sytXevNLF)c0%vWtr#\nl*pr$rP3=yd#dC)?qq{eo^G)Ozh(w#CB5$zs9qN@CNAmnZBET2NJ*t@#5UU`11Y0m?=c&=$cMX8{xz>\n(fsVvp+C*g7}sschJe`-Ux3)B%EX1-HE>iG71dB1U3!st3O(jg^ouAQ<Zp3j2m4Y{_{_r%aaLojGzCX\nx{4m6vOVkUIB&NH<I!JGO9KQH000080A{lMSTfe^o?{IF09Gvk03HAU0B~t=FJEbHbY*gGVQepTbZKm\nJFKlmTXK8L{E^v9x8vSqE#`Smo6$ctd$yBD7bQn6JD(WOoYAm$_+pAY-25}Nk)-4pN@klE|;s1T_z5C\n#iB5kK@hpA{R9^but-(M%W-V|lU7DZl(&s8SpBdJ$JS>}a($cno=ncsCD;}y@-Oq9y57w((dxv$l#6g\n<V<%d%LrlvjL_aixS}2Er|A2wB({*Fe(Q#ZAdK8&T?)=4cD?PG*&TRqZz3o0EJuW^WMd&%7M7_aYZ1u\nL}73L8@xZE;f}ca-NONDe!l<5hIOiBR6q!FY>e~<5DhGF~~<1nXt&i5rfYgy*TzCG+NbKy97jV_}qdv\n&v>N2b}3YyRb~aweZzs&Q8Yl*O5Uw9_#Y%-2|KT|?8jz#U}Hy!c+!trl>-};xLb?7vKy}S;}CGQYb14\nr5580-7+MK(kLyZiDo%hF3;Xlw<?D;9(=odf)dwK4MNVhmqF8UZBk1Pr{O!ff)i8J}Hl<i_)Q#Qq_Vn\nZB>6?@5vy1cOr>pk~JiR;n$1sYuR13RT<f<-3lFD*4LJksD@k+31W9%T~1<%50r0V&mEEYm31O%P{%J\nCNlcv1sWltDBajmR0;>$3PH@~bK>Y61tWr)61`;pyjvATx_5WGO)qXp7-eiImBu+4@m#1npqOVo{fhE\n#Ygm5=;?J_yfeQ*>)vCU)HA`#?dGhOO{BL%n4fpq>4lk1>*A}AtEQ_HM7@T2}jlKn8EuAYb{3X=zBIV\nicFIXG&&qisxHAA2tTE$>N027Werw@3kU2XXEzeeZL7wNGff<7Ot1ydnOYTFR&N+r?DXvX=aUZ%+<qm\nHad><B@$BR2#2{K#)kaN@kLUHBiZ{DzRpfC|-W^M&YVq=~e|h=pIe_2%>CZ2}wM^xOGsZn0-tkNsCd`\nUdG6&1a7Xl>;G3ko9j~F;3$|t5E%w*0&`W9=B#>_k+GiWbAG~qioU)Mb6=s>7L5EghVnqQdL>j^wpV1\n%zoB`z+`&Wl`(S@Z90+qh0_j$j5g+Rb9cwld2=@U;?TTIkMTTN^O1s$g?r4hOSD<Ky{`kRj9>>>cnZC\nf2e-0FZ@DVM7(S4nAP-$ZXNEjuc;tO5<q!F4kvg?<Vg`ycO`lN5H?HGLQ*DROPPG*-nZqrKhEY7?63d\n1~46IOxkVsXh2zm+$X;J0f<*s88!&VEbw*(WA>*e9GuY$a8VG)8umf-us-WnOh5n%IOLI}l53GH=_SY\n|IQ-@4aD8-`ULXEAIs9pIcomE+I7@(BStUv6*i<50j@{D>UfzMXV^(!*JWc5cAbq`=kaxo|Wai$+7oW\nDBy(A1Yu|}p=+1k?f_(JD}@?tJ_imc4D=%{O#@yKDCY<LL)u0!XErW9~U%m}$N*i7bNju1fVEJf3Wl(\nCebMe6Y3XDh1}(jZGv<Dw|juYe?rJnm%(B^kGf05P?m8_*gmoiK`>I!NwgC&j4I7@C;zAvB({3Q1#ZX\n@r(eFu;#lChkR+7v%ONd06ci{G~Qaogp~Zb4z+~7=6EGA;!8zQIky~oWrB#hW-ys;vc~wP@r_9egQ$?\nG*q(hobqo@F3-=--%nc7H=fhp>*$M#Y=tTc`_p^WMt8ujS3+}a+2R=nnjKp~0^x?0n6Vqd(jxz=Vq1=\nN5JtBSrmQGF0h6Bu3oPk=jWJ;{e1fOB*_XuW<>kd?zZ~32L1Xpyo!-VgC)a{9cA~9!;!c4Q<C2yhH<C\n9H43)K!JmqET<PXL+2REXOpgk0%nOQ6HY{wzf9yi~C2bK&<l#+@}FQ}3*`i-Ws%Bgc3!=Pp@a-c0YL2\nz`)egAP7t#D$ai>UX|HrB73ccZQ+Ogk#x4+w4Tx^2tgSAx~3uL0Wf_P~PfDUiwn`0vF)0_>6>1o6KLn\nTIpGowPw|n!Z5Q;W^eOlND(z#8ND}jk@OMaX<Q@>FE62CDNwzv5C+<ce)~7P|-GuTz;m)E+a7=*<QwC\n=EcOdXROdY*`(8>HMz)dz9t?z>T(pw%HWJOz2rb~L%Ta6>KOLac1l`)i58&6+fs{@Il;8efoc(pD%3h\nA6104x9$?)o1FFXm{WJHv4Qv9T{=TA~z;uJ5*BP3~`M1+wZZ0n0UQJwYJ+qzk3>)hi1diL=TVQ>5+f!\nX=73s!f;(G9zZo#2($O}+x1`Pn^=$=AhFG02#G<upEMTbl1Y^M6O2KUr{0YZvpm26ACnUYnHTgb4JAP\n=2(N*ec)!o%QO=ucODFTJ*X+UeIrkA%qeI}{sL1sW~xq4LKf8A2oK25Jx8RE{ytuK6b{!XcO|wk^s}*\naK|^%LVv5MBp{R#7-qxbw4W;bmWiyyr((p?@`?d)&#x-cDBT`c`4YPyoVgiSt|KmUZ_eg7<G|IGQ=JQ\nwm7z5FtbvH<;Abq51qDV)-*%CjKKg3Ws-9zyW@}vBD2?JnXs;Fs;b^(qU}5(g%;1VBjC*2^aT3WYy5Q\n4v2cGR)C_viFWU4(V@v@ZEDzW)WATOSN5<rjn)hBQKr{@-Sm13xFh7F{t()m^n$hNKzX{MxTQRoQGMR\nWFYqyEFz<R}IZf6JPxxE|grJcyF<k~hp4F3J}u_DZV^uTMXXI-I=F+nNPAld^L*`tT_*1V4%vlCfXY=\nfxLd8>`3eJD1Y!8Ro%)3BAhAf_w<$25@Oo}~b1T9n1cL@s^ml>YTpN@E@7raL_c>e;X!SXs@w;N!pi@\n)!hFAXcFe)wWo@yJ@Ckbxx)Nfd#8gRjh^S?P8i}dF1QS6HThnvUV!QMVT*)Fq%zX-L@lHd(1@Bw33d;\n$=L#E!SlDJtOWF<5ZRVltycIoZ#6~-oynVY#6uuAc{ZlN431wRZzYcOs5({~v5-9Ta0x4YU=(95PQSE\nZF^U52HJ3Pf!0-eu4c6gSRBfVs-gIQf`4hI)GOyiC(0E8YJ~&CXBcmQ)?X9&e5py%@3}vsyvIqaf@R7\n9F7-c8=Ytao3QKP+v$(9zqmTPCS0{fiHqN2gUJ7B?<O5Hn=xCf{i&#<J}h@5Pn47_#I(eTmCnZrWGSW\nv|9J?GE|kSyn13B->p(OyaJY9%_WVd5wL`2)rteR&e<KR#{kYK`JlGd}3l14srzfE&?Yuie!6pX1=oW\nZ0v>6DPm(4s*Of2+HbI=y7@<L(Tls8oz$6M@m9(SLQ6G3ukVsDi(q-Naz3-;OHp?&Bz;%|JPj7@PVNU\nElHXsjuBl!?8tVHljULR5a<aJ)17ONHK~nJBmD~CHi;oPgk&%;l&p57@NPjqW;N72G_OSW_3A(@``bf\nKjM7EEly_jk%D6v>5=Zl`p#WVh(hfa;(!+&P{JVzMSkIhDZKU@x*0iV*yqrN%-1Dp!9jzR&w*vTFV@E\n}Yka_BHw8h5Flo=wLV;M8?t42SxEy?TkoGxvwO5dKo{`-3ZqGaCeo=(}z!QJL=Yhd5e@WxJQFofV~x~\nYKa+x{JF|K`c<Z!XWS&)%GTFc|!jZeYjR`MV3P5EmcJ8@&I*rE?5q{%+Uvpl1YSQB;Aoc{7%ULUBR!R\n~DE=5*YL^>O6xY@CCIU8Kgw)dki{L5a2|TESR3qf{hX66a^A%+(2r}&i%5{T1|IPBMzRXQhP;%po6e+\nQeZK$;t9yKf*uL?qYREyaetgc3mNny^x`r2gj7@<@qFjJU@q{=MKNPsOp6dDxZ?MM5j{q{)>AbyL4}s\nS)X{gp=&5pE@=^+=rE1rSWXGd9DsZDttW;(J8VgjOdT1Hk68}yh=FqEEQQ|FLs&6tOT0+I;E|d~oRN>\nU+*QQj|l|?XN0c6<8@o`ga1mhMI)E0YCxTc{V=wFlD6Z`vx&PjMY;^@0Qwx-`VX7MRO)jow|un6fR7O\n9*$Ul}{M(Z!VVSDJfhP{7w-r8f(#^}>rD+t=Ef>7v>AuqAduIRMI*MWxe0gSHVKu?`VQ;jPz%y=)Imf\n>fJsB0funESsBj1)x3il|ZLCeA_;OUYd-bY<ZdEq@)*$Aj9Y>MYId4VBC*~tUQ=>Bl$k`!~PPqkziLK\nyQC_7{X9XmyFh!CFsvE@dhZtsF}`>nc~+XwC+#tL_7rn}4DAnHi?KHt14g6A98a*ee?dDyyFLwtaTwa\nUh3a9nPvGX}6K7=2?ZN+=FamDfU%(!mpnkF7ZIJ30yNz0d>^aw>+OQvnf;GT&g7?e@?Asv=GnFrFbpz\nvmNEi9NEHty3X9#^0q-K3yH13I1gQ%=pQFF#rpJz>-T=1lvUH1O}lQrh*-ze+fU9JbvZ5k0kBcnDTWr\n?L1-SgNHOhHww{b8Z~HB1jK{o_Wgcw0XdGlg+HtkvfP<v-Gcev_`AZwkIv2h!y4?=h|rdfHcX@%p7Qr\n2_B~Ll!3U^|S;7n?$}S@F$5#Q(Y~Oz8#_|6&c?RMsiKSzTmpK=!<gzwRyeq--@znYI-!{r4ak|@$;JE\n@z=on@hUyr6Zd<U2M^7IU+9`Si{HkM{sT};0|XQR000O8X0rTPF7adPeH{P*!CU|U8vp<RaA|NaUukZ\n1WpZv|Y%g_mX>4;ZZE163E^vA6JpFUqHkQBZuRxibGnJ+3k0k9@TW6DI-CfV6aVBv$+w*xCii9lI6sZ\nuTWv$Qu`@IhU1Sv{M_qKC$bC=0jA^|)+JiKo_C|fMcsur@UigJ|k!?moJu~O!79;<ntP0eFoUSDU$wR\ntRUzh$YiyJcL@%?mYe>MXZUbzIx;Yvp`R%3_vTfK8RdY~eDllpM{fav{>Vj*}cPl1k`K_7(S-HAPaFW\np3MHbe+XHw`Qez{l2aM^|N#RzLr&I)GW*4)hy1H3`8yA&)>6Ul$XV|R5g#m^#OWj#9Lf0HPq{6i{1~2\nPgWKe@G=k=Rh-CaoZR4}?G1>S?*2%?zn8^2pfBHNMO>}V&iUz8oaga0m;CgnEUEe1pJgGdxGpPxJOj+\nzZuDf^US~=VI$t7Man4T{@~$@1Tr^8Fn6S3r{u*m2KNT>Pza}vP9FH_jvSk?E$|5Z**tX;*M*avZ`Ki\ne&xsXL|>GH09H!yU)tjb?xQb+T$ys=}xZ?Zi79>7Aczd!@hLssq7re6ebDg`J;kpnv`fD*9aP~Ihy7H\n<K+Di@2mNKdN@=p;_>xMRNlF)re3nVuH6SydK2TrIr3OyUkWkeX-_|58@bA}ipp#%5?NiiHZ3ask|Ah\nJQGF^QZF<@3(iaWL>RIZ+h6?7cj4zIG4q(9ncg7>`K%WsRZ0?`)CwJu;?ffC*qR!)~gnEC8ftZ?WLJo\n=J7g0#y9Vfmz!mjW|esps~htbx`SZd)#iCtR*SffRQ7iZGgE*t=mTbK7fyklbLiTcuaZT)kjgwFrGZt\nh&9f|2Q+2=qi<P%Biko^KA(0|bDyA)&%j71KcDrHIXunPSE7C>)FdgPR=yx?5p%#=C5KXJY5RiIJ@BA\no2Y@-Oo;{rNp8S=dgZ#+7^OU{Z}iLX)KF0t|Q`&h|S!=6`x=sfq-$JOYs%vT*Su>FBBf38MvWDV>|O}\n2}wfyw!+Q3Ci5rt3UjU5(BQm>k9##dCStRcEO4dPo8k&|WmOsy;hZ6Tu7`{c!gBG<x-ypWggi^#1JMP\nhtGg;qg=Pm_A0MQ7UI7UBKx^s{FCoe-0+4n$V_U%kt(LSpY_tDn#xHe<`!VHxJN++XA}-S{`>N5MCI1\n{CB(qN<3Bg={v2kv)CVmu&D|$^H2-jJNoBAkYwIFLmq^`T-Wom5cgXYg+G26dwR947#Nrt5DXx6o+s|\n^hhca{L>b};rjqA*Y*ESrz|<lZHL*xJ!%hm;v#g{7eTSwg7H=6}J)@{gQ5Mu0^u{%qJp@(HK~;oIjtL\nmu81zve$zL@M3nBh1EAa*=gn89cCfRHaWHH@BaWR(~ZW0&Zqufdn7i*21!H9RLg93M8#6>m}AA9(I6q\n$mFihZ0swAh^2b6Kr2bPV*iZw>@jpU2=Uq{7ca84~*AutWNc5a@5@SbQg*Ozd2}R`I(N;Xe`kgCoZvC\njMc-3@r0)@SpF3f6{+*IeBu`VR5wgzUOEjkemJ-nsr-c?4#IBP)La{ks6i{jc_gE8wp*NSY^NkO)XAO\n|91BNA~f^@E7#%;gG_&dtrty7NSwbXLoQ+^WIN=M_>h5fu~Nh(RSX*l+|*QA*(h=P=KSLH$F~<hqx)M\n{DirU5CmwzM^!V#`<AI_wB==Z+b;5pf$VdXer2}mSXp0095~p@`8Q8C$66>rL+Z`n|1#L^}3*6-}uC8\nw{53j~9j?_OZgzrV5TryBX;7_4;+fTf44;7=f?h%;0lSxyfvVIWz<V|?Cw**Ica4gQ|65oGWgJ(T$YN\n@>`RQLMp8F(Cb^xeUO;tL0$NAr$GkHAGlH%9_%twE~unNSkqgH(VUA(|y>gD3ix8oeMl$X9i_jN%y>^\neC0!tDHOu#466}lf&@Ym?+LJ4ZGREKE#xu8LvUl%7{0ABBl@u0Lgz~_aC_RE}68(k*wksv?CvndK?WK\n&;{1=EP{bi5q!a>i2IpQ+zcA0g*7;;lFUHZ2s$POKLl{o)>a2QzQgq&FEJzvC|n8HbHCJPw{N<ya4BG\njN%5h7ev6J_4U~4_F$li{*4S|k04!>^y*rQTb@j0oF48Lun&=zwn!q#Q9b<Cp1&@O+eNN~vzZ@HaB1?\nCa+jCT&fjBxIyIKJSeO}i~H90s)%LJs1tWa21*9T9+qvM0sJg!wCSM(Il>qY*E!`T*j{j7Nl*h(|aiN\nO~q!mw~6oK5e_)G!QO^mZt$M0yP6KaM~x02d>PyUa<l)*GbxX~!tml`wZveu^jJ?d#LSZw{Y=75YA|q\n_EMHXcX8xkV*{^S|Hd&%Wk{qxd(QXITl%F(hZq4-e^9^Wi+}*dlWnQnL9t`4<p6erR}dj=nJy3J0BU_\nk8Bx?$l*HoKoKQ!4_pfLBLznq+TiEejl`j1fA(>#eUQiEY-T!V=={WKS>$VQKx84ZdJjxr1@V%Y<?%I\nkP_ib&QZ6xqM+#?ZWR-7~$<zY=s8>Uh3-G{Y${-erbC9b%$B2RbP`wx*Ttv%V`g8nI!>;ETih`M(gYk\neJg(rjvkq=50e)VWw9;nVN&&4dpII}~uj{Q>L<Cdvp6NafDw%DP5KVZ3C@g%x*bdj}$#9zwxW&1HQ;$\nM`to%&xX<rKb;&OW?5yEt{>C)xuhzKzoZ+5+3&SqO0v1nYBv>9bxl6Z~g)g4P~yTbPwb+i}CdK0<-&Z\nstr&24lOFdTT6$bjEMsZY0d{nB0Gwe(tMX*xMDj1kV&j^F<<kBcnZ`baZbNh_(}E9n4cJufA(UOtbMX\n-F!sP!?d0haO9t}TggJ92MA!LMv@y5i)&~t^aS8iQYsFUDmf7JmO_qXm6|0kOQkaKkE~OQ;~d`%gEcT\n@(%*;}k>b`eQ4^4<sueoB*c%){m<Qaz-&tTvE<0`#&E$n1bis#9^zNOJV==jM{U}PmGNIZejo-RF@~)\n<D1aunTcpHTKfpQ-LeQ~57I-M9c#ppN5q%OfN1M-k^L3a$gFflP`)-Hn|rzw&YCkW{8G0a>iV?)3KLw\nv0QY6uvRxsefSdbgURuI$P?E&)hjyE`;0Fg`kRWUm7e2Epq5V(e0>2TT(zRyV{|k)CoPm5Q&Wrd-L%!\n--9_Qo5u|K4LDGRdB^&1(I`!xLv;Y_Uvs$fy4Xg<*SRc^Ec?8d!Q0AVdgt40%mcb=y`|SaPH-<4Ax-q\nwkR9Pi8%9Blps&brtYk7(+s{NYYssZTR;+ZK?BiDfPE=fV2Yf$c4)b8&ZDz8Z-2UQLlAZotZMK(3!8a\nw%q%O6<nAEyuQ8zh7Z)5F$?+e=r$#CSF%kEAEe~z%GH!SEAJ|D)*GqLn?5zh2O0govZ)Ls?C}4Hi-zW\n*#2(<+0QW?@PJ0Ce3aCjeD-E2Sr2Y<eY`3kC~%9j2(#Eq%^PH<?uleXT%Q_Big*xe1H#Ls0@wGjOKud\n0VJZ4Ls{86k2N%wAavOoX=y?*73GIVJ3yjvxk@hU0Xd=Gm^La!l*CkkkNkgn0{__cs}(Rx`G{#g?~s?\nw6ju*WxM^rB-E?ei<6EF#Z1<xai}%P=EHZf_du_V_hFCVv7#UXVGaBgo+N#+LRr8q`2c%gZy9O7vPGc\nG3M*&<V^U7#`nFzHnO{*F~F$ot@i@>BNcws^apz2XIa2sbbI%X_Wq#Z@IV4YgR#qAQR3ej{lQ)|cs4V\nm5BEYLNOdXkR~&z;wHJZe1CV>9z6uEUC`bViT`v~8fK=Vm2~R6XAVk<e2^LDLtnoNPcs2cjMc`*y;NP\nQ;vg0i|YSVKT40SFrljhCn4=#tm%;@=W0M6k+2+8`iU93OzvI1twQoTv+_}s$>h^}YYz&V!jr|TM}b(\nWWL-Q`U{m>R`%addciNICh#!wtM<-aU6ap!V=kf0=|wvj_3x_g=gH7TgYCsEJ&F;|Fmw4CG6YVJunz9\nqMh)36s&MNygXlv;oIZ`c=7dt%m)Arx<ST9gkb}*$REd41Ak{f2S=qM2o6MQR1B-&54Oh<m0w6Df4Dg\n2;3&6rRoP@Xn7YeV5-T4Up;^RyhZc!5@OVH8do3`$3Or;<MQw>g*ay_<?Kr54Smy#$bkJ&l%9O^<k`2\n!zkl}Z+dUk1bQp-IdVmoSLh?jhQbyfh#7m#7D!c}76qOi!Lk`D&?3)tuIAjsu(ExB_16-LN0N-$cbJp\n%Z#?b*r%{j5}2{=j&j8c^d%rhoKqY&o5G^!><0-ka_4l8XHhY{18PayRez2}=Jl)YF36{y|PGsT`dY8\nJ;&hA6X!Xd3m5J=+fJa*?C11Q(`RhRgLIc?ZvC{XXo424GtOEJ1#I`c^zU`bL;;?V*HNNs*T&84*^PB\nA3^3vgT>H$N_>N^y;T;k)?S0GFu~N29HpDfLICia4pEj5XAsK?;v$bX4hgWlNck^M(Lo*B<>9yM3oX8\n@ok(D^$3#2o#Q9QAJzuGQ8Fj(9_JW{BhA3_fGA8UL(-=SVYYFiLXL<I7cyn`YEyesX4i37^#DxG_?<I\nD4h+5S<lcA_A{w|~0npHBC#VjxI&}u50n6VMH%h0>V1`LsCqk?{K@*Po>+WePXSi&!$R(+^fP8)a+iI\nqtGnuDinaKpi6?6|4*>DDl^H=+n-zuj_643w$<>K`Ghp_AD;yT*J5z>GZ4i9k|KBC%jPI33BTi30dLh\nl><W=*J3w~ZsxZYBWF=Tw>B%1Esjc?Kl2nSDfU!}X%i*5M&J2Dc`w>By)ovLwy}OjOH#J7o&q#uO%LY\nH1H7M;(B@6ao0gpw>ZdDklxYj(Hc=e&lZe05S45r!Zj0di^^o2$!ukk`~-UyN0@Sqo?bf0s^#ZmUOR)\n9Zcdvj}62WQwK3N&1NF3W6TSbhA?=LMQI2;w=e}`VP|4X9qenoFo-Qv&YO4$()EoP7<Rtge>%D1$lkW\n%d(%AGf7(&}78xsNRA=Isd8&D-kgF~6v01zsGv<YJrdTm3I^a$!2n|IlZ!-`pD=d%185;0~^{J;NIBy\nVAv%tB4S>Me;c)%EdPIb1KQwM;gr5Sc37lL}?7gsy#%m#LH2<V=xQWNvCKAXV&Hd2I$p__If13ib4Y3\nCctuW}yUL80B<&*W0A!N!WLe3zM~&v&i5HCZ_{S;$)88{qK~ggUeAF2L56+ymRBYp2k6h(%jE6<W*9-\nE?s6b_p<1LUV8c1Rj9`<BJB)BXmQLfxL<v&Sa3aw;5kpU$fA8Od@8fF`h&G4c=VQszFXyQdXj?8VAkg\nwsJ84^M<LP$LuNMmV#rWRw%n3fs;THtGcG+ra(O2cJ#!xRUwtUKzH2}p;5^vR&mOB@u7;BOHd7_rc+~\n%Y4b=?kBKgDWD>ui!3zoQ3e$?BAS@2!-hPsUT^txr*m<2vy$+Q?24Jl3rf2HV0faKrKK1DfA0w?2up$\nr)CGbqBzmn%U2Fa7D0;W!Zh@c6RlJcuyrYLDcB{I~e;oxzhJ}pGvHa;6K2NUxxj7*<Dp`*rR0-py~Sg\n$ROOkZEgd}i(E;NhmTEbQzO!A?o1{O_{`1uKd&j7781wIj{Kf2`!E2K`gaPB5c9MopNutU^_D7<KVB;\n4q9Y(k!Wch$8$J0(b*hk%JM3^L9KQTd2l5q8&#=aZmBaMBK<VIj-;-=ny(%R8<J{TEKokw6kA&8bSoo\n2$uGGSCpHhcb!-RQ1`u47y~gr8Vwq5BxQ;fhfzW0d;YvswKhXo!s*l^U_d$S$WX~5s2~PmoHvBDuj`_\n-s;>{IVWR{=<BLO0M{nXG4G1sW?~yo1Z+``XK`pF;)TajZ-L%5$NpPiBeA<cAoV~sM+K#3X;2wIH_xS\nbU%5#YYQ8~Sx+#`+;UWZCem2+*UCKrEbf+>g;7SbMd&{6;9Sx1Ltvj$Z4Pw!qEqA|Qp?a8l`5*%P3C^\nE(hgJZIC-V4td0Zo5;d)a&I((bGl3y4}lL}A7$k_^cs;xq-<5Y&+>nX)?2vIK3b5cEt;Lw?w#B9r4`a\n&Ta}7+O-9{QwCa$8TG?Xg96l8dow`9iH1oRM<##&~|L9F3&_%Q|Rj65D4LczWDH^<LPqu5b;1k56lb1\n$@O=gD&Z|;aLQ@B%YBOw>8K1hT9*Rg;t`}k`-PbuG~~VIJH!GDs3!z{fDwX0mh-^l%>u#=Hro(d3$Km\nx#>U3H$2BuPh$$%Od2KBORsrlO*t^vRk@YE+hBB2{aj6iU1zH&xSkPg>3lwpkEEYb;_gH!d3{Js2Y#^\nl$jHSXD-=w@_Q$&VtPCMnEGV3BWtO<f74qEQll&yFSkSGvGnr&8-Zi%z0;p%ENgx9GM>e4BfvtLc7&y\nZ>|K&tpU&Wawv99W!n*-kXtQI}SBEOHib)e07mE7i_AtliS78&CH7GZQfnVbg{b7N453mc+pAiT8?YY\n3rV8A*h4Hm#c1Rbw@A|ow1G7(m1KN3G9ZBe<zoDoUm*vJoKewe#&o<$FA9kRIK+H{(0p70|RixG?00<\ntJxPGVmHAZd7)d;ee?7plx|0`opu*OoIr4>>heYwTVM<iw<qd7LK*D=gx;y->|W8PZgT>-uiaLAMAh%\nEIfE(aq$YHKXc<bu5Ajo<oBD7j?G&w*!|o6FrrX1dzO9RDa0V4BWwbNCF+SR5Xd4YXwYM19^07H2mlU\nh*uSWgsh+`;P!+2rfY9qm%s5y?f4{*>7*2jVKzHI>zm#R=*M(bcO0VvnNKyZF8ke@+34Lr<w238PQDn\n_;Nx@HW5dZRpXh<0h~tdea%p21e0X~Si!>YY3{LbQuOT@SV$LREB_#UZBx^c=RliD8&2DDm5;f`M?<w\nS`Oe9EMe}bq5$mRO{O?ec(Pq30-M;M5mq*<`MdaOCp^YJrO*DU8<l1{u0kxsFf4G^c8}RYOTM|s`whW\nf+teL_&0@Jfu6ME*Wjo?SL8bk=XFuBMITsf{-u76nPIoa(13TVU@H|@9nk*JsBtjfbjb8#%<Zk7v~Gy\nr7hi80^594WF?|kkw8UF1wX_<QtsinO_R;wjwxNAD4mV66heWP>vc<9MJHfrNzKa1W@}Bx4HgLAL!z9\n~L!6$1(H*d-LhQu3&)Sg==<#Me(G^WR%S>41e?!}%4o;nFn)9V0x3A!xASuuR(B4X7{?RBGhRW{dis*\n6<`0v(O&Oj{+B^18sp7b;QIJETS(8hnmkAgx_*;)@B<IulO0hAk_!bU_<s*S`y?j!^8v%ehkvlJsffU\na0-mcsjtg;B1nG@)PQ%4YvRb>!7Wxo%Fj<8#-SP4u*-WTPaoe!d~k3q5bc&IH3a@o%H)lmZq}66c*#5\nWCByt4(a(3yyV3F$R@9%2y0iOsGGd%uVm(Z*TNU~xCrY1RrT=PbAdt2=U`Fd%V1-ot_yvL3o<Zkaz0y\n?R3{%g(B&r$JP;)w?Y0@OHjl0Mh4M&@$5$u(L_>z}`sl+%^Y#%r2fDUrD)BFs@zWtWVU7}*mQvwyFpM\nqvf*nXG#Iwmfa3JBKJI5XIDrl`b0}ls@!&@g#PI#62S@ZlnOJzjCi?1_rMh5#Fph32;c|c%U;e;L0u?\nu-avNxgfU`pQ&tA+8F=^ZwQ$;}rt{jvg=HsM>W1Z`2K*(~E*<PrQ|@l7?K-s9OkcICs%&Eu!H3{6*K;\nT>>!Cplbo;X<HkZou*OpWEkv?n}1U4D7UYsa}EU$Wx3$s|L>@+}ne6Uz6{Op(EV&$zXMKZe{P2Q!8HY\nYPp7P%-;8}>V$MD_TfwWg#!(EpVk1lvKbHOuFo~-xMqs+)4_7Rj1K_*L8eqA)xpv6x8ITkP?Vl#DruB\n5<+V(X2tHO3h)Tpnh!zSj>9s|ZovkBtrLXn#m5yDP`A{=k;t{~HEwbM}yHf@&S5d;hXn>^eUhTtsfS7\nQmeZUh^JM)pQA198cN;3Cn5xV7|-bJZbh?s&alS@2YMFv3yFe|Yr7#T?8G5L?esrKxEB5<aF$3cBt*{\n2brZI}1`O$m8LRV=HyL>)s2CQVhLv6JmDJJ6js3r%Qf?a3Yv`}pznZx^TU-n@MM`se*0U%q+y=hHuZ{\n3!TWOYFs-S=khLCOSM1@1$}M05_*)H#07F{uYI~4n&)kZX^f4{9unB7jbnXH}1^a-((5tswy7qd8$q!\nO7Za8{3ba(n@8x@;!q_F&oMl|DF)xZ-jH-9qhmm|XTC_!GMAB4E$a`~XHnp*d%Lx@f9&~ZC>XHRtZ-9\nTv@f;=))m+F+P8KkR&)AM0k;Tc3ZC4JTb6SqzWYubA3AXhB@#Nf^R<iZBg8=8ROiw)I`rl2pZ+<XP|f\n4xXJ7ktse%At{YSr%8uXR-6J0(^ejez3Tb5M8wqlGuYqtpJq$N<noKt=@<6@%|yS|>oq38PD3Ee}dUR\n{}<hs`p@GDWA&oHdy>+p~#`s@wcbS6Vv7mw5U|v^2kTbLkM33Ni;zCJ-db9%n>$=Jgap_thaR_z17Is\n$=-}guXq6Z_mcThVe6aV&Oh~wRm?{>6ST~4uNR9+H;vYYwt%aEA(vJgwzEDw#edF?MR0>7oF6U^Ez<*\n^eFTb1;RKH`VQpmStKwcRArdN#u%B)v&}0?>R>g6e!<okOT}7;vt13yY?-F!SoY{}42S}zhvHZ~6<>?\nrLuUjC;_^g16W@q$J2=)ypka?OizDSQb)BDZ@^LNDA9s&mn>WX8Ey3r0?ZqE{t+}4v_N>TiaNJwYK@Z\n+OvFeKEWu9t}zHL)wQzdlBuhSZ)fltGxJZ-;?-$tx$hK@GczGx2Us<`Q8SqOMn*Z*yf(*8y3KkS;uQ2\n?r0Qmxh|NxF*-y6X!%OA0j7!6q7xJK)kf?2s6%G2G`ieB(*MBar#F&7#K0mhko{ui+|LW8|hBs^HIZa\nUzQECev422Yxj`<Atna40zqib`W_Z+Dy>H-dugy!*L@3(_1u1ivbD*{Y9T75IJljf3o??b>6yLpuoGX\nw`~D6{^nco8xfRO)?3054L4{4YL|HY|2cCDIevTQL}yng#Z&|yP_$iP{1XV?QqMO2(`dMJB|DjM%g7;\n#{ohFgUdcZ~gDn#Jzmp7hF*_*%{t~!uGP3fsTPk*{kl##SMRXZCn(5!X=#=~aMmp-t=`u`>0fiKFh79\nPnPJ3_7C%xxjNWJYq`g6wT|L}ee8>0W=E#<Q6xGJJ-7J<7Q#VV@GvK~l-om1I0M0VI6^9LB(t0pb!JP\nz+_;l|vVl$TS#?&hxo9zvO6`u!Iw8dex2x&`qF!p$)A6pMIGNkYnrD)BO1KzIP#hhe+DKgL;D20^DK2\n4B8Rwp`{J&xhCwT&!6@Q)5aE)8Ktn{_(t+&ScGFO!ZWL32VWh9c{97^HwfBKI*I+Q;t#}RSHk76;>~p\n-x)Q(c*sAM3u^|d(^W$%;V@^NT`JvXG5^*r7i}bEg**l{;*(g+sL*9Tp2^ubP0>dh>IbYUD@*(pJgn2\nt<C-c{@Y0=df0Z^gd23n-P+b<3*!Xe1TnjTy!=#)nh`h<MFQ5<I^#V-kx3#kJKo$pz#OMGMy_m1(?Zz\nM0G6e5nbaEoRRaQJX_UN)?zbRQ?L#wy36$TdnL<($|Pv>JBmxQ^azG$F1t(9=^oxbs*ITlI2hb*_p#Y\n*&Bf>Jd(6=6;*EZY*GNfsHM7;sLcEr9Y+^mEXIeB3sVZ!`Q&1^WvUde<~RXg;B;Z~9G%wF|0}$iN6_j\nWG1krf5`5KT*^6Jgd2M2MLaY=zzVUB+r0=3%u?Md*=RTgJ*UWkC*Vc1b0#sOC8*zn7O@w(m!0ZzmKHa\nM@sGMqeT8y2izFITHF-nO5hKy(GyBZS`zPfskVys)rMw?RgyY~tLN7%9gqGCP)h>@6aWAK2mofX{8+F\n!47t$*002D*001BW003}la4%nJZggdGZeeUMb#!TLb1!gVV{2h&X>MmOaCv=IO^@3)5WVYH44lKts7(\nY-53PYMx(HezK(PsuJ$12_XlW#KS0YuC@~-pi^GJPIankr8+x&Pl^XAQyYCB^+RlP2}F^x;qu+W&gR=\nS@4T23l!TJon3t2D0O^7GxP;|;y<yfRug8@lVe1`CCBJ{hibsuS6fb!n{VWbq{H1%m6iP?ciqHgv=jC\n_lI*EdSRl%Pni~CWw#cwIsPUwv~<g%;ldi-b%Wja!gkjTdNH@Z`Vl@DrJk4W67ds|94zVvrNmDvka$_\nk}E0>Ts&oC5-#gb{$O;P5Iz@+yP1-EM0uEt%apFnZeZzNX}=*M#6z;C?eDY)|GNmbTCL*u+YpabMgG8\n4E6_n7BK!nLt@KFBk)+kggWC>AR%dQS647>@w6eX(<c8jCeaMDPMJmv0xdRH=3~iEQzz7gNt$Z|g+bS\nKOg*9_3-VFRu%AyvOyOR^kSoga(5BYk^#j@`$Xv*(w&-o8)bkZw_I$S)mkbs!8dXF9ZtQ?d#08{>#Y#\nirvIEhV1@AMH8C_hci?C4!Z`9<$?I!G|8K}S4IRZz|tZE6h?zPLup(XG+Eo3naFcSv|pFTSlgsuD?PL\nxGQgsTRzRi3dKur>JahC!~5F8!^}NiG6x;XFXIu0!(~fPt0Pltixo8m3TBtr>*Q#sP${HuGi~ik=_NC\n(*K_)hUSmiS43m`tdLL$!n`<);q}k2fBAJC=L!>-E&3YD$dCvGxQjy?reiVY^N_qX8ryy0q0_TTEKZW\nyKQgwTl|N93j{T{Fujm8H4<cWLrXj2g&E%JkwSyuz5JMSOASn}<3(sW`{6Tg&Gs49n5;pQorHTakQ<$\nn!RTbL+E^XZp-jzyNEW;!bynzmm9L25sb`RnPyke@3%e8=%kU-0zxFlJYVdNv7Ar1R&#f9Z4FKmx+m|\n4|=_b}ktLjm1bzZr(l!RyBQ<1o+U26Rk9FxUa=TZWxjisa*WdpWtNlNDziJUETdbB`}9df8|2>BCG)y\nI0t<r$wd`ztJISOS+1PR}_4E5dV!nk?pk$RcfQRvgr;IJhN2=3=5VBf-UH@k(ovoU}kJ(U<b~4m0fKj\nR*=EqL9TE7ponLAa-rvJ@y_FNG@RJ2D1J3KLkW*nMWj8x-}1bBsv&x3dRwr|bAjr8Pyv+T!)+CuVqkp\nk4vJ+JybkvZiE;oL_=@kTJSP)2GOp{aQTl0I{o1(37KImddck)vPvQD~y1M`OX8Vuaety0EO>7^2!n<\n;n;StGQi&$+6U-$x0O9KQH000080A{lMSnNKDb5jBU0B{8W02}}S0B~t=FJEbHbY*gGVQepTbZKmJFL\nGsca(OOrd2Lj|irX*{z56SM^kN6EKftg{q3xl!KuvpC7BjKOYf)JelH6?mz9Y$T)=5MlVrKL-^WKxiW\nVH1#%&PNROP38+PvFHwAX3VZ9okOM%9Aa@Ng}fposCfMm$GjtB_1V}(3}nZMw_K7BTUu)Bh_nLr4ucE\ncv4Pi<t~R0XmR>wsLQejo-YXbuGtmYfdgwk-yJxVWjzgG$=h?D0k0DZU&A0ZdT!Bc)8fGGwmnHaFNv&\nxr<b+O*VlD-;FjOsO1KHs5qY=UeWy-a^xA^gfV0;VdeL$5Ikf<o=;MKae`GC>n#I#U2k;|Z(-wszS8j\nvCF;2jv9!|oKG3$^OK>I#Vq`Zq@tbmXpe7JSCOkU`SOQTp)Oq_{O*p1Xz@Mk1-pN~jxwg#P}K6N6|d7\nzJu%(clrVWs^tO>Ke<3)#&DnMnx|h>Qa+1i+C7Z7DItqL&~PIA&7yuKJ92uU50|IpLm0(Tx#JkYk#pg\npSZr8L`5;#b@PG+rcX*i-wJy2h!^srMJF_p*mY(zphWC3Lq{*6l;1lVw<k$^F6EPYB*Hkzl8n%@97dr\nyLewyuMlB<iBpHCrtO5PBUoNskYUnFd#ywl?8SY8k?2Dq6TyXO=>`jrdS>EO4<qvNnVCD14``O0mUEQ\nZkE~VTxmxk_qS_!ikJh(Qi|5UEATKs`ERG~->`dFK!eVOfgJC5X$7hf@yK+_B9Z2qk9~YB8h7`k1m+<\ns?hL?M@J%owf1>--=#xGzVEMHt*vJA6vLdq_g#ems=P)h>@6aWAK2mofX{8(K1VO#tK002`F001Wd00\n3}la4%nJZggdGZeeUMb#!TLb1!pcbailaZ*OdKUt)D>Y-BEQdCgaCZ`(Ey{_bCKQ&Gh3EMfcVH3fzu+\nX{3`(WKaiG*D>iWOI>8jil^&!~Xm3NJ*9ywGFy23xZhIy^!}j_ZGRUv~ggMb|%B4!v}XTqM8*(@4y`^\nsW#Ba-b(A1a9KI2l_-~Rg@4wlGMvqx!PQohx(2odi>|Jc>IhQpbtYIJ4$^Idz-e7tGWktA1h*9q(zK8\nzrYT4ZTcPq2bJ$A(?x5lCZ_GdNf?mFW=Vr-Apt7}TEGyx*7PKOFze|<tg9SmdOdErlE03MKxuh_+x-N\n5ABSf!PA3uJuXlw*ZJO4d=T_m&g>f-vtyX(u#w^!-aFK>Q@^A43H#~hWL&wzfSDDt29fZ06LyNY6%pP\nilgm(SpOOVQBp%Su-9DeyQGWr^k$#4!j6Uz%8C1+_)XF`8O+C<cFx*BIWoh7a3=lY%NV1<ruqGi9xDg\nP2&C2$j))5Gpntm&*WA;}}|&J@I!raa}uE+JvygJ5Q}P_kl)*2fB16vU{=dhdDx7nA|4)TheiRnNvIz\nW{JW88lw&D&|0xUIBZe%BOs`l3aQ8&fszk=k)DM+%F{%c&Hm=QTYn?BMW|JdrabaB?%JU5mce_6#z_K\nJcLDbf&ox?gM(Mwm>fZacnUR&_TiwOkT@vUNdo6S8<%KRwePHJYVHAC?I==urp=5#9r8{wtX4L@%oab\n;BXJ<avLeuS|L7*E{XoT~qS+1!QkwkDv=M%qKv5B>!G;gU5z8WUAU2<u23f!ZTe^H^b)R|+rYfrUTm?\n5Pzq~PCp;f1G7*udY(v@)_Sh4v@9c>n(L{R&<S<pbo>sHw{P_)F>-6TFMPkfl#ksURA9WxUt5q}oNbm\nqx1{6=4!B2U-m6IcJD<lo946Ty#$?#Ruu;-!B3bUE?{Y<}zzlniQj#tvqPUf*?(}<**m)?7WpPPN?t;\nC3e`iZe_lBS~3z{p*neBfQ!{2A`enp9n(zb?5{`+ihLg8!P4U7snJVOI~}))l=rc2dd~^o@ez@){ysa\ns{P-b!%oow@apN0!T6Py&Ld0s(BHWtVBRq#WH}&O$WS?k`(a4Nj?IJPOQB6|(vssP>aBZb0+my>CCGK\np<$?if-7?)s^5}Q)5MVV?p#_Xz_XE*IQyCKzEX8$*>FxV)aQfD?4n=0gH1#3Ex6n+v!LeQwyx-JSdn5\nVjSRqe(~3y5F&3F_Ui1{36GbOV<3jv7c#lWbFSrrTzCay#HDRJEjrc5)iBN#JEw2_tr60IsQs_=y{5H\n=ya6#$n?$>06Is`Z3RC0ICr|BN|wZfqGNGwW%o!Xr6F!Tc~KtdM~U8L9aH=^?RNs0PUQKylKKGC9s51\nwr!?D$nO?EC<*ptfH<cKadQ(o0yinX-ECXuj}PxE##??%rcqo+x3kf!j52q;KP1$+cf!pFd@Q=NMnFG\n0Xee*3MnF$pFIGBcotUOXb5lcCFv=@^qKMW!_*0smSbjw<4N54e_`dyF4O$VLR6YYzT1p!CQ}seS<K^\n|m3NH4<YE7+zrs4t5avH(JGEq;ZrXjv+cY~r7gvOS5Y!(7iHrTk5R+n_B+9dG0rgc#{c1LUCn!4=0g?\nC4{)x1N{Dr)#Nnmsg2*O&=Hl@uF421|*&gVJbo*c4Sk%P3VFFKN06`$W3}lyYr^IRYh?rS+&w*Jr(Rl\n75nYq0c?yXE~zfeE4<wIJ?ieth}?uD4~1lz&$z6>F<cIVGRuEeqzq?cBuY)woPTs{{TWCod++bjD2z;\n=D5dFS5JWD#gl7sYK#R*Ww4MBy<vDV+Ugxn3dmJ($9dm6n<T-Kmh)TQd|(7T<-*a;LiV+Mb+13qTc<W\ne;(YjZ+3+|bvSB1pNxe14$`YMzM{XdT?8HGvmf@l6{fuq90Q0snZQcA!6jQO03${6(IwWDzoW<eN;q>\n$N(qB$O+-y>*3jKsE>{NXVpGcSK<ol|k9o6b*$$Ug(d(j?sgS$^+NE-24SR@?#$`e5T3s6e~1QY-O00\n;nPviw-E*a%o?3jhEdBLDy)0001RX>c!JX>N37a&BR4FLiWjY;!Mjbz*RGZ)0V1b1rasty)`e<2Dw4_\npjh;Fo@lCw8cIK^#XIrYy-5-Ad_hyT*IIxI%Xr2E-Be#6#ege&LJt0l9J4J*TB><b$ITVk5uLUpiRvx\n{qP{w!$i8D+J?XEt`c9`AI;`qbRn#rY>nQt`h0**%s+jj&U5yTR~6q>V$N=AVccIoNL%B7aiN;CANc{\nd&DrgtmRjM`X9a&u9Mgk5<m;nQr8c>d#V+4-^Vl4M6k!W~5HYP(z!=!%MJ00!td%e}kbiQ&Z;)oo3(!\nU%gj##DF)rduAxN>7$BnWznuUv>S{Ga!qemGuwXAIJJsNoYe0}%!_S5w|^5Ggu#&vKk_R<z%|M#*ig}\nN7C>dEAt-tW08-<Su>7UbO}IdExfGmj`&tI1?iiY?poN3ky4uIV=%_Fb{j9T2~c_iDy2{}nG>O&EN#E\nTivtM(|oN9#b&A`Armco)CJ$YbQ5Vez_u&tu_oEGpQJF1>xrvd$$wCBN0?!C{Wm1@RI3m!pTZih-5|D\nh>2F!nLR3fQmkwYh6PerTo%Y1e&sEx+`>kb!GYftbeWUbS*KCoBFL8-k`-xZEs?0KNVmLVxAjh#leCb\n6WGX0K8wPfD?$4i=0yWc0Au1#4#;AnIM;m;#=k+>%GL2(S2?MfMBhiNCG|C@{SrCJoH+!LKOA#rhJyi\nUhhWi!niHz#@%)<r-t^fl{Ueux_ec9&B3aBv*4d^hP<(}7@%IY~g307)#0lW?eh$K<4T1V>CJC2eB5=\nF8pFFdPy2R<*jVzrT2c#yi_kV2Q@y}<ucL1PMjJl8v|*gr8FP}3mA^VxAr>BAbgo1tSsPSupc0#l{cC\nAWo?tk`jbHkzEV={<15ZJrC|9w<?2VNq$JY-5Czr<AU_Ye8TVINunkDyojE0u!vT`7F+YjAi+6TB>QA\nK-9PM-y2<vDY^?2XEv7JowH_?w#m*Use46A>ocEoMjQpN{#wqp&(h4hbEd@suqYcAq+y1i<`94+iPAj\nuu35t7+=>EzewF!XVb9XgMlnIxUH^8@F81XMM$RWLAo{enb*Y>Bify#6p!<E`AkjT8PQWG%L}CKZf6~\nf7)@tqS!GybF7k-#7GsB^yWOJ6CxKa2mACxvCTV25Z@RV49iH5KBW5mctBEz^|!Vp@e!re}xj?!oqZS\njNL4H20By={%Mq8{1SN<u5sEq*LV#Qpi5(!&H@Z@H{Qxu!U@+t9&CdT*M*nq0reNiaeeMdF)zGPS@<#\nT9m(`DDC9zKI4_5@hTiD4sQtRyRL=xW$eI8dFMlX>@^upcKYnAL;6sn4mPl_ZIp`G(M2u`|G!#{|(FU\n#g;b}HbCu+2s30n+|d1`cR!9$1RU52+hKwoEVR;A7hWJDa##*aqAVr44@G{PCmK*>*l7o_jqL@8{<T~\nMg?j1G)5Nc1m9rx^lGYX93*t+ATYU~jLV?0^J26^k<{uH>h4C>=5Qxc^Le1Q22(xRn&~^z4i*oKD1Jz\nF%m?bIHM%Vj}=pDt}brSzzqw8JHe%T4-Hne60gb3CnO$a$o6Q2;eC>nsWC)%4N4Gy7}5x8+L6@anQOK\nv&4{V=bhogm`?Vqg}+O4$^_zL3vg*jVo11`KZpYeuPBNC#|^h!6LtkK2u}*pC{39^iyRP{RjkOer4~*\nTSVbcokBW=DN!^X)iAw6VK|B{etroT1Zio3yYns%8S+uQ;7dYDp5u?=mX&ZhUdc&NjyMGf--G}pD@O}\n%wt)uzGW)_cm&S1D_T~;tgJ97lA-{kUC5(|*xYObWjI54gn&g+vZ=@)a`f-z<x!Z8jskw-NZIOa#P5v\n&yj;%aXuLv=(Tf05e5YkrlUu;QhOm)^lSjp@ASBWm-=&XqF){kVV7<jk_fk}Rk<b-R5>gu&3q)6h<U$\nMVd#IHLp1QufyS?+C!l_+j!V>_j(B)^g5nzsoli-uunE{cuy6W_P(N)2zGiasv7`79j(-v(4ZObavI1\n<L{lPrAO4QU6?h_jWZkc$ApnT<XQcK|?Vm((;jz?ghRq4#`@pfV^C9^(YbLuti>COYTbqln>%35tVbX\n%3NJ^SBX3u;!{g!!PqZpHtD|h#VYTbE&qvt7d4FYZtIZaB_~)9E3;?L@z4ZV6}xaa|jKTy!J3TKHEw3\n8@O>JeD4nNLH1i{@@&c<Ib}F14yAw{&V~IcAB>voGicmmuj|AI4%$7=>%MtG(Idc69B>ZKhD^#^pa|B\n#q|Jk<ueV!hYtTD>KqcTr^xYy-DyVXcg9-a5>Eg>CTyPQ>e&l(H<FW8uurESg?D$c1-NPviyu*D8Xc{\nq$O`yISgj=G*#F|Wo&Yxy?jZ&ykICZ|ZfNWzx<_;w=IzXU?Be<I(d7%&I=`5XM0dRC<OC9s(P{O#JCK\nR*wCIVpxh9*TU34?<^Op(l$hud14b4P@>Bysb|q<1OsPAf>O<jCr-P;AKJMnP|^&i-JW-VltPx&Y?P<\n_Q(F38@ybCO03i2PD|1UZQ~}9n*Zee}DV=9$igA@6eGyNIu66&N~bEmo9>57x1sQh=ao}vJEdDZN=@*\nH^r<Y^XWhrckDXc-{FXbwJs*0Xb%sj1`cYhFaUG`WTsKWPv$NQUL!ce79+lhqN)2iJJ<&53>V|XPM>y\nXZvvw93(ugwOU78M7lF<)ZY?GlT9!M4ryfa_WUpJwiwb()w9^EJoAQtg0N;EBwIY)Cjm=^uA!O?E*7*\nx3V(NVW@`BD;U{<7Tj^iGmMJhxl)2@L>H?Zk(z#ZojeB}m&$U~1`=hkr5MqB>QvR_r^uiQEpd_oXKGX\n{y|elJQ14W&A#_1WudNIdIt`b?cD?#+4M&Zxf*P4zJh_u2i&fhT@P7ALI=KjiTfmvuz6g)>D}^$0<qC\n^|!Z;?VU|r%l_;-&S=_pN*n~ugtVk!XPwwa>P`#dBgz_`M$9=%|EO&yt2d2Kl2b?S_kat@W!`-@E>$u\n%sO{+i?yF)GYa{cu!}?@?4Yy&%tqh9?f{TQm?PB!5lHCj3j0NJyN1>4GD_j!5VcCyxL~Kf8|YqUg^is\na!+h4k%Rw60(n^EBzg}9{_?$GL83{agpGioQ^^TWo>h8g%-9eI~++V|jM_otGo$ZlxtX7_=5ueJP8oh\nDgO9#q8+TAoGlI*!V{{9XG_E`%@o{|NRlG{DDXfN(k_Q6%pyp9?Us(83S*TX%Frw0y+fn(bm6<PHBKO\n}W=rChL!XfTC&G=zZ!47&Tf@EP>>=jJrIdN8ZWJJXDyqCaa=qAdQ%@GW9?MKkBm*;lagK!4~={AA0Gu\n1dD&4^Y5-wQcZ5-Z^ynkJS}hZmLGCUR(Gv0szRt^agV}_L>I4+w6&5-Wc~bG?+7_{eK$>AdT!A#WRsP\nK!-20vZYjT@R9W@`=1R-u`X7Gi)>Vaqs2p4;V)r3B!c7|`ryLf-80N3IPjFd@QD3uy8U=<Fa8@Cho2W\n~X#j?2FPZ6Y`g?;Mn%y%k%6ai;4ms)?#x}cAM_$R29dYq0m9zLG`S~~VXO_Ho@<&Af4yeKIx5i71(1X\n`|@HiyW)PEDebFY<$cMR>d`bVRWvZQln7dFS;T~1?TvC$=#=bpQa!FL5PUg@0>4Su>-!5?oMS(R_$90\nAY2*ZL8az?XCPyT;DlOGzgs+^%xP-h8}qLZMiToj}0P>kB+t90a|2f-(OD-+}hsMJxT$Ijze=x~1-3B\nz5c0zaOG#|FzdN6pr*}mK+xUe-a^nGrCJ2!=j__#u9>k`FzbRyo}M(7@ide7B7-tLt?M?!hiRRElz6}\nl*xYpP)h>@6aWAK2mofX{8(p3zo4}X003Sj0018V003}la4%nJZggdGZeeUMb#!TLb1!sdZE#;?X>u-\nbdBs}mliRit|E|9Rk;h|cDlv8XzE+uBZ22)g$F6-z+PQcbhy*3X6u|)C-KiP-Z}08`APJGW#4~BD4>l\ni*#Xf%f!1Cn2R@yS5b)_cK-AF66RjM@ML8-P|S#86uGD*$tF5FtNuM1g<_FnT$Y<Tu=QfRejnX0U~wW\nZuJPq4m~_KgLCMR>XA72gW&79j5)^()+pUf4qoQiSKT34`Bxby(2FBVLw#Qwn$YSZ3B;Jr$ME+$!yEF\nQoA=Ue;EsikI&0@=%L!xF`C$f;WrFeBuR?b&^UDR0Da^SXr86FHIIC5mmEaFuk{0h{*(vB{W+Ft0h}u\nFX-7UO)I_^X$p+fOQ7(Z&Zg<*bip>Nsq)qI63qEnYLS7=hbfRw?y<kiDmP3OWNW3lKCs-ANMRE8vMLX\n(5+WBlE0kuc5{B6ww~T86>$j!afPD^2XXrecAR}Orz9Y^n(!p8u%dekbJWkhNeY2Ww8d>H`QC&}+UDm\nIjtzV?yK3lIZ(nsfyo~>6?QSZcld9xFuTxLAm2~YZZ{g0G5t)^Q1xFk+fGU+4@dwZ{+wXV2ok?|Hp`U\n<oF@-L1sl8eIYbIfQqXUoq!hhHIs1?&EOdq$$U#q4-By}OZi*WnWwa>EQ>x~2G2Wq!PLF<=Jb4~d9T%\ng5?N#}t1DDayQkQpgHD7L$x@Ga?QcEi1V(EP@h(?X}nf{=>%8>GTDyFodfXQU|sXJAN&d28s!hqR~@`\n0cq28W<*(#snMvNfcQ8`%}zBSQZ7ni#Tf<S6>N#{RwcUir}rI8Bdn(+rVEB}JYz(E&C3QD;Ifg;K(gm\nmE;DWg1N7M)7=y<OQ@rd1+sbQE5ohLv1NB-yys>KOM1ZL1alcEgD`bYckc^!=+mq^$2B=D;!Bb%|0~T\n`IXo%dNEUYN`mO`0(`D4`}75Yr)_vTG$*`;p8xDr~}Mpt9HV0xONoC{hW1*i^i=_2$bq<$u1k69ka>P\nfyM0St=0(&}2~09?*YrfM*rk7~aU3;Vb%nDGjn&Kd)RRsqm63&3#^@4?f{ryWdKgp6R&;{+1+njEKxR\n*2OJ;xWpTmYB^agS<gG;{@|T1{vFJOx!kqq>ml29E%zrAvyxuR_*)Qd_3i}?s_K58f@%H$Rp~e0_Q<U\nW~Jb8+0@|5VRbtsF1jvv()i_lUvdP1M;i+{5rYPKvzIRc2DKJORN!vFFJ=VpjCgXVb8EHSG*+0-aMbP\ne^YDer976yTrkG3%z*9cPwil!brHIY99(%~5OTGj2Ax0}EpekV#)@LxIHv?06OU#`{FJKdu_tYViH?_\nx8_&ui03<)!)$HYrKvL9<poOCJICovvu$-sM<T^7)p5Ff9MGoEL1Vq;u82*Y7fit_a$a$PTd0lY(^S{\n!-i%(Z=2n59F~2>{160r%ayHoL>yDM~)=-i40K*W}z4G9Y}yOVit1ZY!ll>RpmTAFi}%iOFU}JMY!mr\np8_;X;t@rCU!-zJy<PB9QP1Ff<{4tO4*~b8h-cK^Mc(#X%#vYP>v9+OPNXAIS1NaVN`kDx?GW^NBC9h\nCK){Ti@a5$*8(1l$@LN==0<`INj?tJG!?Yu0o9aLjKHpd+mZEy9BBB#+##8(Y2EruK&irZ+sZxKhnZS\nrvN*Ixl@--(kxPr`5rfeSMwGV4M7l7e_93(>%caqow_nnCXka|_6unvbs_t?SmGT}S+&fPg<uUgrq?l\ntD(A(AsN4bk$QbV<(Ac$X#LK-MXpGVLg1WlwZB!4)U4twApkne1k6M;v#)TbNQ#k%dks5SHu+8)}pf|\nly~T);^uiWdX7j7+#-#T1GM>}g$>!Lv-5Hh1|<^i$`M_b1vj@=`CsVGZkd-H|kYWikDm=bTcNOw%MBH\nsAX_k?kk?{pV5gbS81k&scg%8>E*5{`fvxciWx>7LXRQGdhTeo}I4khAu{WcUeU6I+=)C`1Pn;0#O2+\nVW&FIU_h4~wd#orn~wQ$@@ZLNN*>9#F*UL5%4}yiAEaZagUGE=;~o*|cvs|-99&^uF+M|h{NPQ$^}ol\ny72rl*5*6j5jmS6@ab^^xFmo`lgJE#u6PSpgc@7<(C8PB?nZv%6)jN-G@LIofJ|w<RvjS%dK!Il)+=o\nv8eKwhvwKZ@eR+vGdqf-?e<x2T)lECS+Ip8GeT4;lfLal(SmAo8EV@RnkW%^|2r&LK$eHP|a$^KoA*E\n47h3wgULrnRh>KcP3?FQ@Yk1#Xf9z}qz2nfJ$Nk9WrIo9Ti!o*zd}9L)g}CyvnIx7T8?oFhgZA39A00\nCu((rwUdK53F5cC&cyui@_F*195DunRSV09s}7a(cwMxCpbpC`jQ*5zRd)cENqdk-gcCzE$D{yvxsHU\nRFE#hxb7-Rk_G08w~L6%WlNm>#m^zvq>yFKShRUZGh$S4*bB9VV7lSDLOi*n_4jUQ_r250okyTN$f}7\nfN@6R$hkjP%koz)h_`a*A$q!0av3B@t2cU^tge#n!DRvGsJiO1mBJ)L1DelJScWxftCmK?Rggk>Wp*?\n&wmnG_1i5mtNab*M$pcgP@%m4{Zg<-TnP`Kspau2AR4_mM(Dh6-K*iT?{mm|D5{UnAV$R6A`4_FS(57\n68<3D|Nm%Bmg!VALc-lGuLZ&14+k_YEtY+%yCPsUW1$Oi)RGY<TIa=_20vXd8--gx57>z}CZ2wK&}&#\nqtem8UF5p@xa;m(h2zm#HT*|mC=86o>Gv<s~jv$gIS?@>7^PlbI|XF{vvc}Zo!Hg!ufIZ0g&0tH)|vr\n6A+pYOOpc6?9&p%uKXA&Ab4-HmCqgXW8jV%tLID~-@g=?)C^XZy7uu(i%3O$jx+q1YG@!~cp>0S;JHd\nV5jWV%CMSU1Q}_<-4skoMS2ub&&wqftQ`u+)GmGx#cT8klWih834$qtlKeZF+r#ogQO3N({pd#t%@Z?\n|gm}9HZ?{<2xAll-}9`QRbEGhwpM)3RQYK{{iYHZ=5`^3a$<xX5hQ^pcev*4#VqeG!U_<tMUwBrtU_R\nMx1$_psx-L~h4{%8}kRIAL<6pA`QUf#fgmqG7?NeVXoKxNOOBwArF0oPhJ+Z{fG=8aC*em#eMuxh()p\nw%nzn^of9*6+3{jsqGE2OkC%$Pk=zSrpKqRn}KoEWJq%4a8Dbg@W5M_g`P`xvU0hF-LzsSUw=xWCdwd\n=4>x4&$)FIyo>eu<L6&JO&>iwfBgpQ@$y5my8qjUpZ)IlfB55{{`{9yA1)Rx0R4A{F#Ty~MBzgPb`hs\nObF?5{wd_I}o__k>chfF}2h$q2-^%?L4xki=dm7YrVsG7aT+l(z%(4<XX1wgq4Bh;kR2fXlJ$^iy8<z\n_jaYx@0iGR}7Da08sx1gEb?Qw=$^2|>LgKv5;gw%;|kV(sd{1|<OWX^|J{oRS9$6^5|1V;qDY0JYcsG\n*O7XmB#J8G>g6=MMJj0LH2aAJD#|!O*_oLDa36F=+LC{Hq8ulPJID)mF?NE<n9%hC9uV8Xu&DJfF)P0\n|ZvI-^i0p?Kj|m+B!wOQ*W?6Kz>+<z>7(QT`0S3$sWet->|+xBS$zusDGHU-+&^n{cOdW!$YLFl4oxR\n%dzhd96nh&7>yPt_eCMl_9tI%BDm-8sK8k~=@neNF`R@7?+%d4QE({86;5X&SR5G~tv#^E|JL-sp4oq\n0lYi8-Kr3ZkYUrJNO<hVi<!ZClJaR;2RM$`(WgLox(UD`=giPVK?+o(ujVvsOL%7tl_{faExW&Y}C~n\n6Z%}4&67Ct$U_U<?fxeE-JAI3Z)ZWH=j7xV~SB<uA*pTD^r_YBprUvQE*HF6lLhrbQH@BR*8$nhR~Lb\nauUz6OtxOjZ7?iW|#>uk*=Wp85E($A4k&@gGo20|XQR000O8X0rTPZVGb|Kn(x@uPy)pAOHXWaA|NaU\nukZ1WpZv|Y%g_mX>4;Zb#8EBV{2({XD)Dg?OJVf+qe<_u3v%DlMC4>bevo-saoeI*Elzx=8{a}%-qE1\np&<&AaG^++AZ;sY`rEs^07yWjWaZjU`=OjkEaGLc*w+UO20`$?mYJ-jP^=Oeuf>e<DqYGeq2f^x1f!8\n$l|@yvtXM2$zOb)_vcJ@_0TS(7&Fl8}x*b&WYA!QjUq8u`UguS@V)eQN!pwA?)}rFmOpMt}sp>I%UDm\nS5d8WsjiFWV@S)S(eVx&7uS;mRXfdGt;#Z4+`u4+l=z+DELgvOJqDypGrxEU4WBEXku=Y}H&&kr9SCM\nQ3ioxFN?`uf$oF}0mNd)sUK`9rVi!|5BZE!w{LN~+YZD{|FTBALl*G(r`KiXB^B#0ycsq_!|ga=sEt5\n{*Wqckkc4dHwe6<hipRO!66E_cj<Gjp}MWAy&=O(@zf>J79V7H$I~FLBjWrH>5Jsf@h~hh2*TsYWCxq\nm^O<rK<cYv)}S&KEK)Om#bt)74<d(|1NJ)4)@)u>?9IAf7CCzqKf34gnSEOE{TTJsvL~NJeFvkXnV7S\n*sVb4zNwebWV;HgfPZ{V`lLIIEQGf?5g&oFd7`tA|bP40GiVVDsE%_C?L0vEf!zIiR$QiF>wvN#gkr+\n)p2JegYQV$|(Zr|}g-BgLXsdAcNm{cV=dXfn~gLTlN!jjj^3Ak)U9HYOT!^?%{8#`es{1a!;EXy!B45\nIe;FTVtOB{^r%0UOa%cs?`Uf)9=J`iS6M<})J4{_Hj&&4_`jX%@=b%p`izq$O*1M^kBENNmiGG)E#so\n}7huPK0sJOeK1Q&vEn^6nSAJx#X%RM>T0f7YUI>IxUK<wSu=qO|iOa1PTp85m^PzM)eDNRp7|XP}fpJ\n*CryNj72<V;!0HD3KTRIZn4N=S~CS!L|PZs8ryho19@bPCoNX1B2UUn%;gQJ_7%*d4s<SB$%spJBG7}\n!APQB(lwli++TpM*)S8~vQE`O%f`f?L4$_p*7i<X`^Cxezu7CJsOy}>8{n58@VH(arDMq_eCD#(go3s\nKA+h61^W6Wm|d^_Lq6it7%wp(SRX8BYVSyO9`vtn+j;EwfzG^$<7BL{Okc60<F8-{lL+c6lm!wvQRSl\ntonSlNoyj?%)@&EdJX?%1Jw;e{DX<=AJ`NHl@*3H;zqRwockMN(#sO2mywn;Jc4BV-z)4~oZ+AG2@RK\nQ_bb-=XX1=*Y%3ATDm|il=~H63pC5UF=@Y4}6`uS!w^oKMF=b12(2GWb;~UjoegI6680H64l|NDw^`}\nx~Q_5cGPqU>#}<{k<J<SixQj^w4Be1YsE^);-yYzvm#aA(x3*K9O|I6hv;k)0&J8>NE(Us`XvCQiA72\nq#)<?%^*99Zk_I6Ouj`6Eeaeo$GYJ^Xmj+_=uEe6rc%_Ad4Lo1B@_>B-c2R`6KsILjri8wCb&R}(Ep<\neX@w?>o-P@BNsWqZz>i<S7-R`!@algn$i2q@XG`^V?DM38*ItRd43wXn&V6*7yTh#s@X_6Dt_CoYZt@\nca1#$|*Vn*0<ZqReR}c4^nVj2U~DWjd<D6a_(8u<J@93v9|2;A<EU$QTsGj9wLOQiB2t@tz=o0Fg6s6\n@+;uW)Wlo4PWXdn5L(dl~_$hrDKY#9_{W9<q$P9W~7=iW?fQGq-{K~CLAzcLe$5D!5l1vO$8nUke1n2\n43eycW&}OLSozp9jdaQL1&E_jn6|8uJDUR+(T+hWv2%{t(@+P8Lo0F}hwxxfViYSy-Wmkt>}qOIN((5\n>Xc%h_6EXP43$!DmF~+=HTtnM;-yV~#w6kndKJEbkm>J`O89*p-NYbaVyLL8;1|1EPERM(Ddc2>ZkdF\n09yAf}|JcsUHD>$j)$S2p%=%;R^5uG1h^r_oi@M|ISR?y%|dE|`+BF<oVLyF<%D1!-x(yB+g&-Y3w#T\nO`zu-AuAa0a%5y43Fa`3u@Ec#QK7YB#7_>eC+!hDjAott5mQlQp|si)8w9qFzhIr4s!!W@t7MgZ@{%c\n5HK=cd;t!iEN(7BA+P~nFh*WK3*GQ<-W)c*s~1;;XaQ0Y--6zz5^5BUw_jF?0J#jtue+!5aP3t!Xv*b\n<c$0XcL(ApFglgBKFzQUWjsJDT{ihg1V#|TQ1s|BHX7em0PEnKoY#HxHqIQA^OIHg#(3`UJ`^Q&)Bt@\n1*AOol*bqkdc{w}<A6@kTuvD&*yJGrlh_ORY>n{(-8xY497UpG~W`%-OKG-dHruG3FXnFj4U}UYL$1l\nakmQ9<2!C7uk!CR9p%>EaXEfIoz`)|s%8ae}!|9-9o#%lzPbaEhSW&;2){s+=61}LMX7_z0P!pI3t@#\n2#SSUbklIH)r)14V;s0`1)?eme!f>NH4c`sv|bq`bP&Af=oAc!FK=YH(L}x*KFoq3N1eIcUjGalv1Bj\n#fAmHChoI@ZnsBCW+>RB~yL+AS1k^g0Y{&ZH{SMqk%pBKF}vXbi-p?p^Y~H6b=Xb&(i{7!*S5m^ZQSR\nAk}tobgrF*01`2+-w_AFqFBT<UKB<b=1_{y0ef@uhCP1p9pkeZc*LdUaK>wnQ3nKbIo9U`4tr7skT1Z\nTtJeDK!lgz=4r#>Du|>U52?3xMbQ#4A0mWQ!IGVt8P%iZF^dlAsfdh}60!M>Tv&OQyfLLQZrzaP3-Hu\n~N(oSnv$k2i2863gn6dc(pOWG&VVHfQUFpDAJXsp9jFl=n~(iuQM(eKI#!0#SM(2+-P7Zg2U@34GGVa\nJ+Ghqb6A&f9oyDk7$iH69=)^E7LS$dXsHOagq+01hIquCHP^r<)Cl^|hi6r#_t~FG0^89E*Enb{p<+5\n~i9w?sBYuZY`oY9x{vpTo*d-h;73QX1G*Y{&5>~_&~Se4}aap9*TE6i)Lv{5^F*2{<m}BY|fI$3l780\nXwy#dzQmfmo;GRy>5Nxc;utf(y0g*UXQim*A~9jnu!3*<L&&Wi-R6L_<L-ua2mTLEx2VHx;3dfCwLYa\nh@8Hltgm53w2mqk?3ak_cCx{r&Cyy@BhClCAO898Zo{ZVi<EZa<o8$ht=eVN>@bBS11CPe++a2S+>^7\n(aisLrUo4^Y@R;5VgT&DIW$w)=rLX1v!itUg;!nG@&!J$XyWi#xS9ldZ_*QJ^q9xfn;H&d**9%=}7n3\n}%;8ylexj~+aJ^6ekC`<teBy2y)4UmghJ29qFU0!Sc$>F8`W6!m-}D<qNe8_Kgbz3$<*PD1M@?rGro4\n4*sQhs57MnflHF-mNtOXE*2?rr6aJg40~<%L(b)WHhAu{AB|FhD!wp?1i={Eo?(n!H=BICrHSUC6u^@\n$g6_of=~ql9K7&DtqqUfR$JH+b-bd(PWkrH;?M&^-9BJgz5P}<HPN|Im&&>bY>K?w)Yk@QjHf#gN#9z\nwS{VQmz<(BM=6JN?)8cBY+Ay-<XpJ#JeM_k{Zn>0seTnM4wBIb8L(9eGu-FdRHR_uV#;`LEXT-pGs@+\n-;v!B-G8hlu&{O)j6Iba|2;#zaD7WFXKzTjv@n23jn36nZ_oO3u?EONBriyjSomrP{*oQy!o)EK}t-G\nUzZ$Z?mi4M^-&7LbBpR~SaPX0}^rpeDcEZ%;HHEWqln8EkMVT?ULt{nEq>U=AU_`@w->WC*z1gYv%Uk\ngBT=m}@(>VdgER+j;I4Zp~f&9%b9Tim`O3>+`Xz6dRnmq4PJFVZWvX>xY)FF1_lzwSnTR8=z3m8&YuU\nA^yEL)dkv_YQ5T=IfxO_PHcrP(X-pk>C>k*bjCZe-!*Mbbr90<ESwfq)#wyy&QoyGU7-%j3XZ<1pr|o\n0JG3|n9Tg71Gk}mQMCYm>(RbA_>;uWx&#rfrn<U|lK4YMSJn2_6?6W&hIZib^U@(F8H-trInK$ky3Y)\n28P?uDMcA_DrH_g<b8pFSeHCgF+<Fp_BU$5@-AJZ$%?fiN37K{APCj%)`R5fbad<fQlKx3coGQoT@bl\nY{pS6m}(xg|JY?@LHX8aUJvLSD^RCDohfO-6|+)oBb1h_J>?8;wr|4Y$GBJL1oQRV>x4cij7Lx$(D87\nb$l`zTfy=M|V4cB^`Y|@fFy?TrwpZ9koafKj|{qsRtV@VJ8Duf@k!tjqPj8=AA3KD`B-HpxVD?=<t&)\nyNtK9lJ0-k8M%|}1vg}S^K*kACrJ%_PvO=Q&29EEntjWQQ}@1JW<lh9eYfW}Z|*NPcWP0Vq%VyIn7&m\na{)esX-o^*2(BK#R`=aRGYi*un{iFaV!qcCBI+=iH<g-kC-|txQg-jVDY+YOKhL}K`R<g#xJbVja%9A\n$8hO^>2&kBxZaXNb3QDZCT``U2tsOV1{7%ND-D}}VSRaK_J(XBTKuDkfHu7Zbd9JZmedH;^X=Lv7WKH\nD|F1kvc9P)h>@6aWAK2mofX{8)j29GdY0002J*000{R003}la4%nJZggdGZeeUMb#!TLb1!vrY;!Jfd\n5u&}Zxb;Pz3;CW+)GwXH>GeWE2R=jL8??0skBrGs>t1VS%c%*+TKPH;=eQF_2#4Wz#bBR&6_uGo~@TH\nx&Y`i-H&{5+Wr`3oij#16s>e#JzI0?u~R-|S?zEMMTN^&21sY_F0Rf$-F?ooY@uqPjb<KjPLU%Xmz*V\nsqci?5GoVih5&vgspA-Se7z6=nRBNM3xV^qC0B#!9@2s>j@StER7YgKqN7Drw*abB5Nky#34ue|s$Ek\nwgi@j8FeM+SlJSr?YuAmtW3j`YH{FCP~gbJXDT~P{}{6uX>BC-_YXYxcSE0^kIC_X_s6*_16bP|b1tW\niu!<NwlVqf9SUq`h}kdawGH6+W;8D^2imD<11f$9X=6T71P0Dro_&Swke)ryu|i+ENytb3GnL76bgIo\nmcKpF0u$RAA?oFU^R|p#=J0pK{DSO9k|TAkJB|US|1DOhS78ig8rpx&<9a&h#$cFszSFQt8(erA7^lS\neEMz-o~TjPpq6b|gX}_sPKR}|i5!3-DWnYLPIleJzo=oQqL)b6+pAfsr**1TWHMgyjdY56%b?M|l;S&\nm0uIwk%IDQKkCWOf_##cGJ~)SN+Zz6AVbLDN`lIgD=?f1jDfq7CyG9O23!%{-S|dYEHZF&@hz(rQIeG\nq>M`?O8_;i%mAI7sO>;OJlxYKrlD<2&m`v<X|o^q!<NxFMnD&j(IG5VJRF`1Q<Tk@cv)QF-;XgAEZa!\nLjY*WMEgAmS0_$SEp=s;WC%v9P{}(pVr#KO&!c<lY3gPH^Oag$k+)@&5A*)<#lB$><Poq)!)vn!VL{c\n%_CpNAK8>kgsS)tuFSC&;{skGMr7}&E6I-e>=X9zMTk0xZLHyOe4MG->BF3bivZ|TS#ANJvS-@l8#}{\noqpnic;SWMlk#m09|?YfL^%;TN6pZXHx7Xvi**7Y^ZlyQ&gSLZz8(42p2;pfzw$oYeYtos`wLJ@0|XQ\nR000O8X0rTPO}6HV9|ZsafDHfuApigXaA|NaUukZ1WpZv|Y%g_mX>4;Zc4=~Sbzy8}Zgwtkd5u?XZ`(\nEy{;pqfQ$Iu=Y_%IUG$`f{LFN|4vNmW^Y(rP5v~;q$%A`P2c8zWSeRrhwVn<0EAc#aAk9YSx_Z%ZPwK\nfhay;@1Niez}zwtX_#K3VDd=e><eqc`C8HEn~#@|Co13U6vBwGvenu~#%OZ{4RWbXR^Y$ucE2m}QeFd\n-eMA>fJAk?B>s#+r@9$&8yo*c71XA>&45(P4;&2a`6XwFqr0gQ_BjI2<XSeQsq@s;EZB%xS4Tyvs&bz\n#0u?S_S-rACO=>Qv=vo@&z))T-%?Z-Cvh~1qNu<UGSetUVP%af&}3Uw+hhW>=djeedghOb<M?uo`6mm\nq<gC-Bu$a{bOZgduD*W2vbt7E9P9wkXb}cQe$)G|D*NbcT;mMD{2~<)j2U}@eBPyU1rO|4G%GtC%Fyx\n1>F>2`kn>kSVgmWgL)hWb-P~z#p@}Bf6T#0<29ghB*Tn&n<&6U!z=*F@e%LQ`U>#%^GbZe;hwK(ex$?\niDSN8aFZ{~2=1Y*>Z0u!Fn@Va08(CrCb&<1JBvGu+{s!FD4^Wo3aN#?qO>3uX>zw??y*7Sj`y#)+iOS\n3uBWMbKvTo_A(>xymZ3(1zgKc6!g<_1-%3;X{|pTNH(be|qfydmNmk<iztcL`aY_C|Ws>j<8UXGtedY\ng955=52mlR!YNlsI@;1y1t`rzAd1H#&(T_-IzUOSc#Pv9eEvvHt0^qu*6H6`s-zE+Fzllw2zj$J`;b*\n&#6{)Sx>>Ee-YGOujpML2=Ca&ReGtn=R&FL0us7J~qM>s|wG*UIy|bMmZLooh?`~hr&QnM{<!V_!I)D\n1z(@AISZFG$)Imu>9gvfP4SkB|dm9z7B!euP`pa*;?xpj(Ul3MC_*J4SLh^>|cm@`6F%sPd;003{s&p\nFl(-rOvV(WZBNaLTZ>Y*9K}ReDK%@MY<OkN5E7Ba}qZAfIp~pWwCC672#rS`b3*B{BnqgWVd{_<lj1<\n-uy|T3gZqr(qdddMmA55=wr2+|zC!he2){>pXP@;p~~Gt4i;9TCqQ_-?OMI)<aW)80kkqu)Zh?89J*X\nHqnHlXm-K`H7FraonKnE(`H$n$aL4M<oli;_IBj3H<h8shJ63sixHQMk`xeIp)mHWCS}*eG}~;DBOxo\nvjc};@z{Lpyp;HseAV&|^SvQF2iC83>iU6X4f|Im!6DD?gs6%o@?)b73gM;_89;Y*MX=@5$98-voT`i\nF-D{?2dn8F38#|wefr)0E)Gd*`soOxc5)!@9eH<_F^5)Xht0p>qL!bR`k>0$8$oq_%G4JGxq2|MV|Bh\nZ73Lk0}G7v*qMSQ*{aN$f8uq$cw@#Gan<sHXU+2k$QelgIVot7kpO7%M#syN}x?b)Q{Kszj5*Quq4#$\nOdV>A6x@AlGVyGb7aniJRRm-<N_TULYOfo)nFbE34B*PT9r7o{0O6t`;a|kr2knV&0z4*8(%Y%_FXJ3\n|4n=vnHP4tf(FF;8hU4KIHR+y188{ev|D|!qQPu3#Ip4rYMne3Nqb@F3*3W00&+Xkg<nRYrd|E}n@^a\nYe)M(1a*RpZ-_=epv!pHxk%t;fJmkzO68usc%l|X*_W>E6&%b{HJJykdy8*jBQ<ike3Qp*%w`?5uj#k\nwk1k-`eXsp-4K^&@-tF%?w(W}^<S$fX^jqdR>(oSD?IeOW<)4=}&P)h>@6aWAK2mofX{8*S+zNAD300\n52=000~S003}la4%nJZggdGZeeUMb#!TLb1!#jWo2wGaCx0qZI9D95dPj@;R`yENZG*hu_so7yX6iY3\nkW!nZndi1#BB|U9of#7QuV*zj9-#C?Xqwy#BLkUjOUqWo|z;`^1f?ZsSH_lqBL9zO;%EotyEvQSd%R`\n8?xOnR+AO4nJ#8YlFVkju{O0_ui?~erDQ``LwQ{^Ol!Jk#GklwAIB$Jsx(vKz+3ytJvX}+WBMl_y0-R\n)-*}7B!;|N<`j@va;G3NIKW6S=%iCgc%S0s=#3{c}yk5~6Uh807QXvH|Y0bZ}g`iDj%7tM{(7Iq>OV&\nC#yxl)SJEU0k3GtZCK3=|i|MJc2#qV#f-ah;A^7*Sv@|2|KIeDDTW;4VF(tH{~D%Q-rvfrf(8+Wn5V-\n;Hwi^#&FoZ9~vkno)JIpXO#(MDzD?84!44WIIW?#+Bg;0G#m`PC>|8o~t>v7wj%anNoUX_dU?6{}o5b\nHX4aWdS#&Va#Z<q?(u3mo`*XR8>%L`}rL+odPh>4_=4JmHoS@xHe}Pj#ON+(nz%<VCn*5UKRQD*X89a\nh+t?%4K2c5?Qf%Y?(+D9ZWiDMKyxsl^F{b}fW{$`^>)E^Zx_B8n*=w5*)3BV0SZ?Ba~iDONymhv@)N2\nF8?LS>*X-y}x=QwV)dShUaVp>vw?MqU0(*8yG6!(EVda-aDVr9mw&XQ8yVPGOq-)P9TZlfJyieY9=@f\n8UcB*7|5(<9z1iGuvr4)v80o6QJ@jwy;L6c`1IvS~WsT4>F{5t}VuZWPKIkFQ~PA<;FUs72|K*&lmEg\nk|fsVO%xeeqr~iymNVR-k}$AXu6K^(fp-lcv*#EE##^Xx%O0(i%#>ZwuW5%4zZ_$;o+k{rJWTUklI@2\nUvlDYRERt4lcofC_1=yLaFU}?-tV11*nfk*-VoGswBJd9$ezRqk9>Yob0e3yg(oDTQiaNelv1G&hK^J\nKeu2uU2QmM%c&A`rd_}}*&mX^sY?pTCB<jS$AO3b%3{y}v;GvI9Y3^+2q%uzIgR_ae}1>YpbZnS?c)N\nJO&M39*je^-aIH>PW*?&cq7IhC_6jzr8>ag>DjZ9uh)sIjceY}*TEzOcK*}GtH}=5L-pid~o@bHT`Y4\n|3=siWlp?(iWgVu6=%>+}l1~E{ov(qsrf3uxyb3D*+t#P0*0g>{NBb*5DI$?OjhSM$88upCp3_9BYe9\n+o<#~90QI-d0*Rv!7vepHG}+0~UT2PO*&0NG-dFeuR4mLiK}w4WnK5Jv(#VC@I;L{6=I#ZwS<73KkR^\nLm)cK-pFTh|Ahb+#9e}TgWKCBe7Tst^7R&a_*xW9v<27KdF`u1eAU#C~Dq46m-n<B#yY|Yz(B^Put+O\ns8}g0mQJQE$1ne|j~ruuu*l3Fwmy-Gp~$29ItX4cR=M4iq#bT4%bnjvv!QKW6e@OP*ar*p0jlYmhgIH\nN*m@hfgHeBr63SLUX${qEyPCoUbF%D=<^2*C(=F~+XVJJPTjsr$ol*czy(4@rq+-aQrWi|uyJ?!aWg6\nI*4hY8-4oi*S3!q~2z|zq+343o&ilP`c$v-))(G$|<A^do`L%(MqU6lVtS%1Tr9T@I9iJT`lLDVA)uE\n}dD?x#lLa)IMPrDE@%8N*UIjsjCd@isk0?Enelm^QRcEtcLm>=;FoWf8$Y(z<iR{sB&htueYVFxm$h>\n(+PH$oaI^(>-v25tYmBa<-i`?r^|ZVK*F@Tr~<74l}#bhG?KC6E-+W0<qB>tG$Y?px20zU<D(whAlca\n0cKJ25LRXAq|dlrG2A??8@fT!mdI-gRmW4K!1gvNE7s&m@fdfX;ynA!jvc%=l1lh}!^Xw()4tYHK&v$\nzTCM-eMY9giiznV;5m96g9-f@px<g{EVj6nZIgWEmuP_&QTf+#B1rGSIV7vEgI}!1f)dJ+m(8~^?OW7\nG0f393@rc9aJG{0XH<o_C5J8Hq9r*I9vAjfaE@cmD2llucyXadCkkl_VTTBo%$8+Z`VPhwX95s;|gIu\nSNpJpJm4J!jvBy>%9?ptk4gA;FW`4XL@e_5w)*rJSVnav+a=sis7*Eew!JmcQyO$z#jA@0yS9`X5kB0\n|XQR000O8X0rTPFRk9iF984mR00419RL6TaA|NaUukZ1WpZv|Y%g|Wb1z?CX>MtBUtcb8d390EP69y;\nzVA~s;UFZq(ZrKi1Bn+8Vz@44w!p~Dbm?@6`1IBVqe7U|B;Rk_0ZcwR&IAa-N3YaECIw!B3z#!yz|_L\n3B&VKJhRonF1d<F~H2ao}TMa-r1bdgEL$}2>LCfhzA(8nhgO44HLQB+<7#9;PI^WfePfC(7)TUk3<}-\nXVBc*I)FXWWv01*$6)rWBIw-Sz4{5v<7<?SiE9+}VckzrMPIC5Kp4P#oNwa=Ccgl+@#ry2Ov*PpvQD_\nt++<-29q)hXwqYQ4lyM7fTyy<P_+i7VnUT&LJLd)u+C9AE&6clZd?hr9c#ANi7hB0Ekh9DepQJQIVxS\nBk9k!aC)W+KC9u_&+em;Qs<XH$}qnA8|{K1vWyvVh4(p^cOW?T#c$PP)h>@6aWAK2mofX{8%&~A-1Rl\n0077h000{R003}la4%nJZggdGZeeUMc4KodVqtn=VR9~Td97F5j@vd6efL)o3WAlgw$gnS>LO{-pam8\nQkZ$r~7z8a*77<F+l9atp(SPp@sjDq#)1rQ`#Nlu*hlewiC~KuHk!rse)qas{RT6uu;hhLSbuWxvl8?\n0&s$z0U9-3P6h1aY_9aB+Ru3;)}tdJ%yg-N@$zl$v6)dPP53z;yrWG7lPTU=jlnq93`%8lu4l<X^~sV\nYlWW!Kj=TJ|f@1GS2RY;M6JHSvLK1No$?vRcV*VYndhd)wIJk1AJ7H~Pd&W%&nX->as|e$!g%ZsOoUF\n@F5Tn|$X@dKtJ{E~3Q(;pLjFJDlS^xA#sKQd+T+Qwmy(R5Hl>SN4rD9Zu~<i8F}0U?$jo(}5FYLU*#b\n7iwNB+N)|-rG=j`X~9cwK<rb+AKJPttgVCPrOccQjVUff`Q_Rfk-StAlD9I*9v^RvWmcpmw}r}lemo}\nt7Tqz!spbdD^xlN<k`QBcL{`5zf^J~2O?va1+eTMp6RdQwgwbKU=&j}4rUk9|ae%;ZnFB$&vCis}0CS\nQFdC{}-yPb@8o&b?{$_RT(2oTKYf<b*y6(7fQpe_Fa`;oC2XxdJMQLpal5(^;V5Tt|cUBT0@csNyK$x\nHLn5Ub!hLKc4z{!}pXKb;sK$`ApFhWQ~Lkq>#2pV#E4WMU+jY>%7*xL1#j;5OLy^IT3Auh-=6%Hr`F!\n>=gi!RoJ@!_BMS;@=}*X_+~Cfa17loI#i(ga9891LBopU)UqZe-ONKj+W;;<Tw{OT6mhwV1yisbyM|T\nyJ(_;dgdsAd*Oek+YGZV+)gqNyvM+~fCSQGwsyNb#MIOov;2RJ3Bav^p6kotCOa{W6v-Yyh^A0SYHS8\nZ*6$fG0Yq*@RV7dB2i@=?k9n?o|1s1OZ4rPX4F0s>gh>dK1ksdRFUUukL2+(df*~r$hCv#`Gdx|X<^T\n``(Od8pm7Dm?4wPyzVu>wg)X@|p9r?)aL{cUt9%ZbBWGAXDm>RrB=fLSAdmr14oh-Xb#Eb3!t`pCT-p\n%ZZ_yP7`IDO-q+)RasM0|m-U?sHRFqNjIVOQzh)nnu6+1*E6;a~PWd(;D7kV4s9Jh|=o{OP`JeuU+44\n}g41bwKp75fOJwXxm%z`Zdh1Se6kn5X>EY2ycnJ&`>W8LS~v8T6h%C#y{B^pe2kaob<lV=?GeFgTD>P\nEe_AS+Ds_VK&#yy1|#&KN|iE%Z$K8F$v9U`4pgrn-i<%7+kbIjJFhc`HdmU!S>Vt^o%a~JlCUTNmQC?\n-YHRlZG_|P1DgDvZ6WR&;N{=VnAHswnp=+jjWe3rjhjzPK5B+{U&8YcZsZ}2kh7FpVyX~wlm_<~nFci\n^1!qnKtls<*{dd0<P^GA1Ezv4<vP8k&j_Ap`i+;#R@@*D&f#vh_ir~Ev9K(j*rOl#K#m!{L_yqea_5y\n$3kF+C_g#0keXtGn%YaDe^7G=!xhqx`X9?Liv#OT2C;)3W5?*(oIle1af&E064C2smk=8ewtjJ5Q#n8\n~otGmK_A=fjdCpD*?Y>G~dIm7iy3HScn$?08mQ<1QY-O00;nPviw-g5QKTd6#xJMM*sjA0001RX>c!J\nX>N37a&BR4FLq;dFK20VE^v9xTziw-Hj@8;J_VMJYe-w7JkH)ebf=A-@v}B-yFA|Hs%FMCL_!i`ic|=\n4WK}BP{kj_f3BEM8%UgA-N-U8;18DT)*WJL#?Jh4$mgeiV%+@DT|IAgm<K@Qw#P6wG+Mk86->M>o=g_\nuL-DidPtrDs{Srz$~CA{Qu%9Rp|)kJnFkA;3;9(FLgef5)6<%GT7l`_wGI$`gsT`Ep=%bnbXk<3a_z^\nhPviUl>R$^OWb^L)GISu$ZSGgb05<=Eh9QRKxCiK>*T3b#_lmc$F0BqDn!KEWgssbHFi2stoe8<~g*)\n;CT^Rm)wG$3oQ;+VYPgiuII+`rX7Tyb*<hImUTb7I|uW`X>xNkE?R?GF#;n`t??9^HRLZ%V&9&CA6r{\ni=TNa+b?c3CzbyFvmWbQkENfjWR}npqcV?R{=bU2jEX!jBb;yqTb0vK-5O>*ISEcqfDynPS+Ye-4nq4\nJ8&ug?6Z7We<OF3;6wt&7VYn9MPxQ=>qKt1v6v1dG&tJZaet!D);^pgC(c7obpZ+iOC`1UX-N{sFW)<\nH1HH>EX$vnpHus4NR$xoqq?_VYN1A6{1{%c;?$5&zV;t4F2ZDrQH^?#U~2Eh;1#L6a1uq|*d-q^O`z3\n-^WMYV!qCroB>S|upmJUg&mA*S#pVY^(F(?X<zE5VdlZ$(xrwiiG#J1tqv3&Hp@ugVZv{o?V(i=jn(?\n=Sgu^?3U1!SwIfzyJBcAK!V<8U{aq!~6>oS3o7scQ|fd=5d||Ol?56HZX;diEtgVQ()L5@riFi$B^!P\nmFKf1FG6^JdIE%wFx&Iq(>I49l@i6op?pdW{Hy)_N5K!K@r5XETCFzK5=ozG9{QK>XY=d(!Q3=|w?Ph\nJm#G2;Bx__RkHgK3#L|pI_OD8n3=|(UXb+@;+lCHLcd+hiD+(F2c*6@GgAOv4Gp<;cm#oa$68V*_D#e\n$nF#XvtpdR^N(ZI?OOXWwwPS58v!>&`77x?=MeqZ75&@TM){rvh~K)=2Nj%ghNUV<$D`1;~0snSUzRv\n`ZQM-?IAXv5XUR~tTug%kms{(~*^Je`}aWmRPKz;EOt+@cU-p8)BRv1QL?>9_UWFcq~5cGLrodGsKWg\n?$#*4@vLs<2cPTp`WXGBer147sf>42T9%El;zGWu=PxJA1bx!KEhEuk5(XR=2>9a4$6E3n!-wu3EcZr\n#YA=^i#$UGVmG{yxO0k;r6nV~g8c^VqrC*vYo&_jHJ{BI@tf@qJ3fOZGpQ8#uG!hy_YbHw*eX#*W*}U\n)hsNm1%eUTy(br#Izx`+Q?(Ng3o}MUdC$G{n;>8-Q=MD1j#nZ=6yc2r+2&A)=@m7?ZJhAN=SiNWo)&M\n(TN9DtpMgY($Uc!&-dCepv3763B`lO~KRV26Dszg2zE!eI2BUln&iF7qVLrhe`xq*Kkk}&*46NY_r<6\nRdFJELVr{}(y0eCrf__%8@*0&+z<<+KcOJ@tEM0nc~}@S)R@#)Gw>>y%|AlL!C>Pko&9q)Rqv)4fCT0\noJcTq0kh7FCgVBkOq84;sG5eoqqd`j5lm6III~rZV#qG<+xKQLjvZ>(0GDTFjP@fZ(q}$)?<)MnqYxO\nK1K(CL&5x(IoX>b(s#&fa8~j)S{lxl1<&Hme>W~;&oeS%F^3J;L-3NwJ4BWu=9OMVX-LeFWSmziIwh%\nTbe3%9yQ*Lf&PJ&Sx<+{sX+j_*WRz-2fmKPgJrP)?k$t;-a2<5z8F#-+`=q5NptF(j@iZFAFQLRsSip\npZVd$udMFU2Liz>5t%x~@7rDs}t*KM&dts_`Myzm@=;kDa=Yu!hxOhDHbw9%c{^d`!)^ssnWRL<Lm1!\nToxraiD@?7JDbr)KoFtpplYg?nCPu#vuZ&QVGTe=%nbb9NWZGwTs{HpK63kq>P4Y0Pk4<kikU3j%~X?\nS~Ho^hMb15&5G5gJ*Qq?6M!HY626F39>h)$)byn{R3}We}Ahd=IXtsIYD)K1-=Veg+>@;3mF0OZ<VMf\n;uEMyM2RYtQ0pKZ9PSRXaH<a5WuD3yfZU3SPZALvx*4(El?SumIIK4QsNuY(?vSEc6#y;(jTq}<DFee\n-A%jSU@g$MRg$b>3`WqufR`|;yWkeNq80Vv>gYKqM@D9M!8SIiO1y5MMVrLKkrga-;)-e=@h^lq~Srr\nWfW>G1=7WBMKL{T)nL4O5ed+E6>LGL*I4gXK;zph&YTXq!&1+d@a`iL~!8U!I(!K3_Rq{R>yq!#|!B=\n|;ph@W_$EUW|$X((>>!mJ<!d6YZf2swUWvvJ1=ekx?X@4;_1+W^Pa%nJtnAGEkkMb>G`=GP}(y+b*^M\nWb3qm-MN2^JIP-t<nawrCSrS;Kx-AF(w-34CXRHL#>qv^nVWm3{bs!ttEcQodKW71DeSaAjP%?g|S92\nQFFlyfCi&#>?Ig3WI))k<uQne%Tm2mO&KCAS?0w7u`NUg@GW#&5+{077*qB)h^Em=gXm)j2gtM}Wfc$\nzs51OQ$p$q65j84;=&dh;<SxIRRD(P;I<xTP8lqd_jmS4@^6!5*%YXIy-P1Yy1(61M8$=Kky{9sRZPV\nKhfv&+7djb<W@CU}y?m5)-r^+N5BqhKlao8R;G3YA>3kY%8mV+6Qd8N_=4oK!m>WmKKJ#r1Svm4rM$_\nnHNXNtD2t+*jg()X^iu4+>I1^p8iy0v#zcy0e^oG&(N_oiKhh)ZUbXuT+lL%$`k9JO^qUrfA31Dn|~k\ndiI`M86gf+f&dPF!nP~D?wSGKKVP~J}?I%NM3W`Q%3m+S|ZwV39-Li9bj^Kg~8J%&r3?jtp;e3vk*8E\ngHWtsc?|wmh5bcw)YoQS{>rN|@o5LD2zzPeU-ORrj{p3r_``Edso{*ev|PES90akdX{9Yiq^<HwTTpF\n8)GROLT4uA~K_dQWv>9<_t2sPSwo%;*2GPSQgtC4!ObdEpE2)zQXqg7ByH8t-DjAHDH**Sl248n3bw3\n8BfG4PP(MpsSMU7egc9=H=p<t%kkKJhdjm(1Gc5S&<a~pYV_>CacmZk^CIR8jIL$i)p0+`G&-a%f0YG\n5X(070<uLodjQPs9P6Hvj`d@~t)kU>kV4=Lev7!(~dD8Z$ccwF#lQf{6ngf*KFAM!~O%efWR?m@*n4K\nG5{^6Jj5mPI0myK8!#=&6>W8?^=*M?6IDurfNJJZTXOxpn$Y+1X-3&N@yt5eO^yo+uarL#AL3POEiWY\n6;5y5@X$I|b;m~U1p}JkyNTU;gFhhw(8EJN5D5|ng5g?JYPq<5;2tLiWgXyXp5BNW=rpdiEBBP?aI^V\nN^f`AD<2u8H%F#R<QxO`Ql)}IU5J(U;v3L5ie2Mu;y$Q&Qix-d25O2F!-9{%G;1r}~z`+&f^^YK&))I\nJs&|#U?IVd;yHkm2Mk7AnD=Bsu^z7s`xIHfX1DloZ5h?smSN}R}4RZ#fB%T5e}1k6_6p!p|l)T#iWaH\n=7kZH_e|ss`P-hO}iU9gt~&)p&BD4aILU&u)6l<qef=U`r{RdbAIfuzcs~#5yE&SPP$)wQ}Z9=@gtx(\nDQUA6sSp^I4pglaTj_`*mM)p(_UCjgRP-V5=dE-yrInjJ$5Kj9tR8~HsrLE4m=OP-2Qa33_Td&J&_5K\n!WvT>*R#{R>U5$lJI=ONDXk4*C%a<!-+mbMOeV@l+Z~Qsuj4G&HcdweRLKM*YG>$LoN<)zR{ngC=+zN\n1n5K3ztju-JHwbQv1p;T1=Nq1_MLUiGgJf)uF*#&fz%tVeoWz61AYFZG*tPJUJ$-lnBBJ2k4G=z0Z@O\nl^$LB%oK9KS4nsrpIc{?ZcdB_IhQ<G!qC5KVE84agX9cy_bY)JSGqD?(zj`K%J9}hK+5L5e(s|EX<0p\niI)pCCZ0vP@u^nZuAy(HVX17r5HN%@5dOK{IHQt|U6NwT<*pG2tt`E#(@Q$gaa2Q-+QAZQE$<Zp!Z+I\nRjlWFPzMzF+?(3<-T_g&<+`WSKU>p5R~Gqb<T8dSNHYOTj;)?C;OiTd(hsGRSFn!ZgMEJeoQ)3ZD>0E\nt&*bjCJix>w#Wg0&j!e0Z?}&UBaL7PO-ztMnZoX`F-zyQgA<#Fchlto`v(wsIALdh9Ym5G_AjBdA09z\nK4+G(ODFH_lTt>Y9Fg*Kfr>9d)o2qzA)wCp!)y#CBQs+*mi=7aOV%3gF<900%Y*l43?y@b}VFs1L4&Z\nZXirM+fQMh&z<Y<B)KP{u&dy5}a>FhfndO0<@pT#oGm-B4A<vrT1;ddyBgD?77AN;g2$T11&t-tMq%*\nyQCv_=@Y@5DFbMLTPWn1Wbdt|&)sTn|>uYH!&!L%m{R56ElJ({+vQ)jRMC=zw(dvMkyN%yZhnVhL>xV\nU|QJtF`ZeWny+_ciR9?+l?`J*UJUDJpp$1A*W{F>kI<b1j7bfnYHQAZpAWzW`e2}R8|?x#th+;em3SC\n6jkjf-X@Vr_usBe`0?yAM>K`nASxPtI|!79n+JnWdwO9PF{uGoC#{yc2DDS9(oXVE3wOhZHoB`P2K~0\nQWTLYpO*wXejtOB7qSO)tJ52|Jx-H9s#~+(WY311jm@`i&5oSNmhF*?X#N!+2O_w8YoPkH}Db0GMzq_\nJ-i|gK#FWTn;^GS%fSHJfA^6|wWxCKv48X;jCofvg*gA`X0ow#I9t`9WtKnZ3J{utojHczTlG;tm+q1\nq+96jAfqtfNMCn7zU?Ltl&J20+_!2i);SdA5>kL@+ux7HV<D!-1L+Ul0n786`(_P2@Ekbd4`yNP@nQ&\n$_`k<?|i(Ocu&!-eL*^&7miB3FiEfNjiQeC_J06zxObq34;-M%BBcS^=0UNXby=S$03)U_}9}(R`2>V\n74tZ~K`O@n0?H6{rUlQ(I6jgAHaaW?E(0?TWGJ^BOmZ<6>V6$)8I??$m}bR>7s)pj(3%HxBYa<HB#so\nBQLgCJ*T|6#`1fcm{_nRx+4RJUB-!N0MHc539@`Uc7W6F^lhn}Z=cba}MBsp#$YD|{ns=1|Ce5_zsR|\ndRwky8B2$l(5Z`fh+_l#npp#unY<x|+x7Y-TcP>2n=%_$6;HXib&nurE?wkqeO>CGXMTMNpKF`Z6fho\n*&Ci%&ZgCu3c&!tmY|+1Bg-kB2I#Vuwmbbi$^(>_o)9;wdG|jWCiMCMuT?8em|`qc5{Wd>SZ^>LTTUS\nT&-zqHH9MATv8en+iot<iXlSp^j5y-3rm@5_+wch2S4s61-^jY%0aU<=M5v);h~W_TH#19`ctvduG$t\n!mZ8^9!?$a{uwHNo@Y0h<gbr+-~z~3?Gg84<xL-D%Jl=F&UlO)ryLvbu2z@tSt`~%r98G`_wE6?d-n(\num0)4#?Zo<7$R4v*g~dS(bpVKiR_l4IjZRs($KPkp@%I*;he(HtS<E?a4s%EoQOwy4b4at2`ifa&je2\nyx59xG%eGH!jj56|Pb9Uq`ezU4))EJ`zbJ~QfsZ^nU{*Z0){JTEKj$GF^?B8!+GBel~_=jz3dfm2qG7\njf2gf(vv2B}@Hj}L$vl=MGWHt=w;mJa|G+G5gblv{pP^a#`mCa-3C5$Z^>)tr4SysQ0v*f9eR`&kL#2\n$h;ZS&{?Ro@5g0qdQcx&a3st@M<VSiuZb)Va*k&5G=SVl|MA1l?U8%E82ctS!UDeR-!El!cM<el=tEc\n&$q*R@I+C4L!~n*bMq>E1HS4FW+`zVAy>d?=~zY;?;?A2w7#-o*oHk?2++3eEhnMOvQ`T-DH0k}=OP(\n6ouArk5vQ}$!8z9h0Pl9_stQljygIvjIJ^4Zb1~X$d$el;Y?Ns`u<e-V=4z8()Hp_QYS(>y^4SL>&M|\ngq9ffd@KS=ldfjJ?q<-yVZLApIZcGS1y=Much&6LjWx)2(4R;~{C9fHmG9=ktqn2hKTx?lT&&@{qB10\nsn4OAa}A2bx=d+PPWx8Rz=@sQ&Zn{jErRbT?b&AkYHJ`t`h0vzLSQ;O3r2%{i0#(JyboVD29EH{w4Gp\ntPrNrrSQ7I?7o9{&mIb+Z?|}lZ9^N4Frb}W*KM6=>8zg6NTnR*eWF@Gw@Z|C1sCn6G?{#Zl1kA(eK;_\n@l<newX9#F&w_=2*`^}4mgN-sbwTuhVsq;qv`<VD*Lo(Y_)__1Asy$`EYG(7HJ6!Rk766R5@arUI(>j\nXmBv~$Oi$oO7<xfZ1V8sKsWX@Q*=@pVuO8uL3|^Jyq+1JwIt97T$!2?zc0_{pHBk)b%4&(>sWNx`@S5\n49O|D8x^U{SwoG{%s)UNPUyEn%hz5@qws<XTjPr2D+Z9FwFgwD6&lZ%TN`Ujobka!B34%OA9_IdHqdR\n*h0_5C|@Tj9AZUsTH=WItAPB#)w2ZrcC^t0|!r<MmqhLSVqU*O&!#5zBsS%p~#^1m1gIB+B@G+EIM1s\nCZp1N5f^9C7$oYm;^xt-@#~D%D|f9vRXS$eFbpR77VdG7z5Z{gX&?dw4Uj2Sn#vgqNnCwG;(})_UFI+\n*MkQx^1*dZVA&-I6y3$$OaSSN;xK_2gVV)Yef?O+NPRej1VWJ|CT^o!haGj2nZz<?q(Cq?6sO`imvc7\n7bNi$lsW~J(1D$9mrZcf8o4Dwax!<`gk5S@7Y>T2sWP{KiGU~Z)@9GLo(yX1(58R2g-q7YoyR@P(Tdx\n|G)%Wgu0Ziqr)mq1xy4mHt>3gjwZEkP(XXTqNO^^9?vpa?ry$uSwc*ETx4>7;K6-Fq%y*1_l8ExC#Z8\noqRjCL(Q>4qsX(A-DGL4s}{^5YY_X&O-)Xo011QTRbPXpdULH8QRl3r6;ir98iO^sYS~pmW5^_S1nQn\n4pcHI-beIOe3y`ZWtT#pe#d}u)$xqT%)k_M0V=AYd4LWroR<<3tj=_sB^`i1*~qvqZZ+7U-o6d2^w~`\nvP;jBYFR3HIEbI&`FLn?E5gx??4TSvo?qtRN^e9jVK~k<`?&=TQIn&H2tS=GD-;V3lnK8gdTIVf$lzH\n<eJ-GHZ}lBnl=DP@aob7_Q14RK0sNjQD3xXZibucD>RA}D*4L4dR2@PNE^UaxgI6?PxyNh1C`fDdG|#\nN!;t6^JfQ54h2Jgxo%@vx%mpn<Ln^=*V(#Zs$fL;r(^@8u0855FD=@CT0v!GxwDJM0tcuN1R44dcDv;\np)GNJ48KwvRqLLFNhmwUt7wCDwU-z$U@T{{c`-0|XQR000O8X0rTP>fK>u{RIF3ffN7$9smFUaA|NaU\nukZ1WpZv|Y%g|Wb1!XWa$|LJX<=+GaCyyG-H+Tf5P#pl!V0QLU@t0&rxl9|ClE-`R&B-0^<;UI*^NtL\nr?#`(72<zqZ0Ez?&E6iR66E3b?97bk<2N4;Z(6AgDWur)UCWdPwcviQmb)DnyJ0EyVyk3B%(2B?((nG\ntwONuEt>IFzdP&}NZ4C=g+4450To_RJDu)jRI5Iu({=mvx*)&X)OY)1*hSfE*1V1Vz)trdV@LJ~$*To\n>>XI_>d-oOV`qU5@**^#!)RF}DRw`r9uK#yuP><^%YSL8BZr|OZzo<NPHxHreJFLb^KrO_1ht5LEZ7}\nEv8=N0U|!}QXvfA_Svp4RVexhUyy4l4W(3PY8YhS~$Ef>yevr^XYPi)^v5Ap=F$L+tV$m|xvqN~vHCP\n>NKGqGo9RZ=i}!aaO0X0@=#RwB#r$sdkB5ms|~7`LO5I7<P+V3h?{7sGtFjyWV2^pr9|eyoO{MZB@p!\nGh6y(PwVP*#~@gWn}8opvp>)Ln+8lJORqX?33`HVm<Dv+o-(!5DgLt}+Ng}&eCKd{hl~5wc!&biDM9Y\nG$;}PYuK&b8e<k;eQREg(QBeVh$w&?L7Lf?rIMGXj5LrbiwZ}^z{Z)trf{58j&CPK|5J}!3tJ!n(YN*\ntn_CQDP2Eua0N&h0vMsg2`oQtiTlyn}v#c0_)u6E>!exiwy_#3#`KB#=W5u6^s2y-vB=4aFUNgKYMtR\n&yA$<tLNWLvWxI>nWcJLkPT&+jdWFaqy84klSn!k~`Ct=HtM8F7~TA)c=<@ZgD_4&pO4Jc5DXqJ&MiO\nR@+Vx$4AFY0|Llq<!)@P9eLtWX7((aN-?`JgTw>1V(zr($55*0LSG+mc=nG4&~aO8Afu%zCLgSfBMmQ\npM^FS6W@r?p;G4-O!+&>g+tWRTilnSrL6&~2pl|ehP^C*#SXV_{nD)iEEsi+L+SZ)1*}X1U9veM4JJ*\nje%i(i9m2XA(P_=ccLkP?m<_#E5!r$WB_rn{$q3WERBFp(tW$90L2(0VKpDW&wN{e8c<ox}GIqgp`5K\n$Y&{y4g$Pk~?*NFpDwkV{@t?cTO2x<C2PtC%G3A0D4qpuk&S2sLFQSL*@QZ%K58V2bCK9igG$t83~qR\n!Ai$X<@P4bbZ4e^RubDR7sxU0wG!+=ps>V)Gww`ZL$)XBwe`MjEj5OIp;(SIfdpUQ<8B-^o^_vw4M6(\n8YRlm*`3!JnpO^E;sTaG4A8aVo9ksrR>c5Cx$RNdF|d%DeB|;jq2dMEDibwr71^^d7DPf#%fHtrk1>>\n6L3>BD2t)#O$-J*M{_z0xb*JNx#r<Lw=>nF{F@}n`2Q<^lBpobv>RsuDJmv*fVGDV;)&>*4Iq*+shO~\nY1K2#Cm5lkTKuoG#4=EN9WYE4X8ECM@8yM!G{~)A&6iyAf8VZ~p5b+_)zX{6}1&(#Y@GbXJNX2yJBSF\n4-dV^$&6?i2WWmNEil~C{oLupOJyVaFAQ7iJJ<0NDW|Cc~HOCAUmW~nuf8_G+H0b_k-3W~LD`>XM)>4\ntR|vyGH>6twT_13O|AwC?a`Vnf#7#xyCV_}t$3u%(4A@AY;5xPm6UKjH|24b|3>3n+?oyox7VbZjeqd\nBnp6=`VZ4-R@8`dnew5B^YXgdzGJxvhB$hJts1dfv&~6aEUq8=`(lhj49*k%*ne7M@wZp;5pRJ;T1vZ\n;c9NDkzp$2nr(DC>U2`fLtO_Bq<5E-Xs#TwJh5bFD1Pi!d{)}k+BB4SFXEp83JK9d-L-bG&FAC|q9RA\n)=BdA&p}2o}I#$=>9>xBAh@Gt*!*iu5Ig$qplYOM1-jD+8-a1i?Ye>$?aMYz+hVyetad4VD?rgB0K2*\n(4&F-pq?u?`uhv*Wp4>a5-C|<TPB|A}qvbXQy6H#(5U;_o~G*~L+u!7hgHD{Z8-mp3MW^<9Ywc^ysvo\nCP77>PLhy&<K9RE^6ql`EgW$y@bSB$@r@WIu{2*l~@XNXOemw)h)RO9KQH000080A{lMSfLjIpk)pK0\nM{)503QGV0B~t=FJEbHbY*gGVQepUV{<Qabz*j9a&u{KZZ2?n<yw1h+sG0BU!P)2BQSZ97}@b9wh-r<\n3lf}x++7>{t}PsuUXv?{XOhd?B_#_*zk6r)K`tM5(mNDI(I9}Oeaz0x&f_<;O7oJ7ie!AfPK)&<)nB=\n^p9Gt%1kXveFJYdT(GRJtrsT)6N_j!EDY>f4j7{{)GA+X>Eh;8pDy*wClVP69*zWZw1pa-OCJ8I9*nK\nrs-;-398Qn)Etu}fjl~K$K$up*@(YQ*tteHy-S<x(`w=kciLXQKDw2Ek5Z6f3)Dp-~AcsdClW=+<&rQ\nk7>(lYp#=Q%BsH)1WPB&T-__)sHbM7FUEw@gS-1aMmko^|DX1H4=mE3Wzb$Z}q>A9(ei*G2M92rlfzR\n%=u0?>}pjZ#79h21lVJ6TB-X$hp0=aLuX@YRr$Kg61rWU{xfyMRcEMQ7y7aFjy{F2!fPp#{5GVJoo(T\nzkAE4fp-|_)q-sYE5#uSpH>x1W-t$%J|)hU6hu>}jPLy<zk-PrMR{=N7=OZh1;elX@T=g}GyLR%M3Xq\n9a7&l<tx>q&)l#rfYC;VFH4hH)jA;ow7B+)|l{~V;@rK2Bysq?=gs(Z1FySMSr&4absiOCEQ&pw=S=u\nj1*L+-o0LU(q`lDhwXVr!$nisYra>MH^iD;5UaHUHAQm|Ee@5dQfoKQA`!wVuS5s=wya?5$9rPI7uwJ\n6AysF^tiT%k(i-Z@|v(Jhrs-3<k6_TfWI6Mgs^zAOiXuf3V@kdf{35iyXwy<E*XxEe(pZqI<fEp^ZHn\n$I8gN!5mdhux=nofAuothgZH*#s3S3HS*ZJ0)vy{-QZzl;{Bg&teNwfzJXNbXE!Hloe=ChQ^6Qwq7ga\nbEGy0pOg8d8AUEodsDO@5H2EV0dX<h(d^E*Yy_=zDlDxCC?d25SMUlq;r{MAW0mrHv4lgfmxD<RC23J\nJl&Rn#MIjl%lQ9O@HqvA)ArQWh(xgv1L^Ikl-{B|dEMh<+Winc!+#nYQ-tZTm7QU9+*$9ShR(nBTUX;\n=9X7^xH(r+mTL$MFY`-{JR|88Ntfb38%QGD~D3MPHgz%jI`WpHu8J2D!fF=ABF!DOps2qt}Iag>~&w}\nv`670jGL?AFIXno;uozza55scG4jPl@-;L+K>lGG*3+!%mp$Dm^nQGuyz%+HWCvv8d!Otu~tf-(@rvD\nJf?1mEuOCJ%WNrB^cbNyh}@xRvi+K8-Ppt_G_!_pdTl|yPIW?1w6bQorxoGK$V{ThL(yPdRE1asfoYp\ni&~{3i9#6HYF>Y|;6sJ57K^B_%jI~~x!S;uf>#KUCJbW?-$|t&WQkx<5V<l8QgL$2K!aco34TG<ZBvS\ni8)~yzEt&Ro5DUKI@*Nim;X0KQ#3+m=cnM}R`RU__aFjPN3@tbssE0YHd;JH%J^O+)V_F<m$b5~ggG4\n<lCZi!Epm@p29b@IV64GMGvU~k?36LWQ$FA1^FC&uUiFWTOP&3;;XG_M(+tZW{brPmyE<HoBfXp$G1G\n3>2<X<bTy$HGjkf-wT7UM2z&SVv>!^N{_Fgt@p?)s97Pr%+3Z$LzNLEuuZvIhLaK;RleFBo|GEUy<3F\no0;B^VEX?<i;AK<q=jM0}Kl5HejI@$XMK>uS#os&O{6Am#yzQfV!0cmI$g&TDS|kp$&CmPwxiOW;c0y\nj)0}{3vb$N>CkDI{R|zu&THjc4$QaR_E~^r!Q2-?qyutMfCo#!J-ZDPI+I9Vi<n_D0*9m~<FmNpVn4<\nFxlt*H18sgsYKZHFLk|hqLjgHJ$%9)~DFhEnwlqr<0_D#yKu%?>*3r30*HN?ce2Bbu8^C88;|!{?hX4\n|2sd|*CTGY;4WMP0vOSYfc+db#qL&gxuU)UjPOi-*NAV`AFKz&WpHYroV&pib2oS+v%c`!l>6^XHdl0\nWTXO<|Q84%X_bEkv*b8~njM{`1}{OoTdBH`Jx6AZc^;<cTCc0<A=WWpA7yU;uz)%`Sjtfj1pp+PUxHl\n3*|*XbK2uq@ta4Lt*p?OdH;(j(%wDh`PGB_XQ`mf$tH=9I)|#YmNd9sQjJOG13uW_c62iUv~m7jC0^%\nk6(+G(aQTcyt$0eVsTK~0~j2~dOnE83}}HB-9-R>$!Y{~(ux9OE2t-E;<rb#OhQ6HJkgZn<n=i@3SW|\nhGmV=!77HJmlMa<rO-ASg5OS>sMmnGy1jL1%q<HEDh@S`JXAg`Y&HD+|aD{OQl;-EO^x=*}g-x=wU|<\nxQ3J&<*r{dH7JpNR8LD2Pvgk_f2^?V8cQ7>R)1Yo9(CWohoBgxy@^}Gw{!7NoS1hev!>$7E`y&qG6Wg\nEjD++q@t*W^sWL0q^5C;;@FiyBkjt8eb}tgjD%eKA^LuXPkkMn$~wk;rKMr}hm^N4x9KG^?4idVl48O\nOtF*G{USPav{kD`3L^_gZO8!y3{IC#KX1Vb?F}kjb>TNWvb#J0JaA;mp2=={&Lix)9VUV{07I>!VPsN\ndm*S2`>~8NaDtIF*qZ=TpimV`Oc@S5fch$nnxa8FPr<M!NkKpa0weTpSxf=xkQ=N`5Vqgo)?0?OMGZ(\n{O))D&YElJUn>mKL2~#4tEfx+1(*+OU9yprbLfS)IsPJzMfW&FVlAI@Fj5S=;rg(z<m6tkwSx5!0W%+\nN0Mo2;SBD?^TDM3vDUO-QK#iA~4Os|Xp-rFjq{%g%3`V9pHV>T%WG-KPj<2m@+LtSDsZ#F|8X%oY8Ja\nNhm-$k-YKvU=MDOk({%hZYpr8&pW-It`;jzjhurq(NAWVq3^G4%e&x)@_VHgx1K@~B=bxOFY$up8WTi\nX7&}p=;R+Mw*N;#p=LK3plsv`+wWQkijF)tXIy*(1SYk5eT6kC$KLbrAY*4M-9GD!2V1dW29sn>E(K!\n_a@uXy~I1KbDb|uERn`1)%Cc&0>h`Wwn+<X;0l1D$d@czsVc~QIB{4(4wgotilr{p(nXiMcN~uO7o9)\nwWaFR)<SZQS>y5M*a-dr_Im>Uszu}V&DKUi-UBh$+%7H-}e@(uPYk|nup>%_R^5zDjKnfF~Gjmz87(x\nq{Lp4KHq8?HIZed2W1~7~hhASy1us!QgBIF%Jx;?27IbvOF;XL4Q+1zW`)rWcoFjLMgY4izdnUXLJm-\nfP1<=B=&bMHZG3o4^Hbd^mwptd2~vBW>u41&I6fjw<P@HK@Vh~B=#G%9UqEwqI$$Q!K+)tiKLgjoUUV\nQW%a;+Bfrdg`^UZf^Vlt}g9v(1&0uKos8GZ=-b8!NUqKbQnWWA{PXZi0L{k$i=GJY+_|2<#?~|fV{h>\nIm%@{wQDIrYua#m6dujP=foFBrzgi}$EQJODZ#$2dh|-jdv;5Xzb41?qq8YFI$0dg7thZi|B?IC7txE\n887<++Swh7wEskD>^KkyysV~E$6Fl|nljEc3^M_CUo(gh&il?4V$^3M2a<({n?wnf2GXTT&{cK&-k4k\nwQ&S#fddUpwU#5W(F>G8)--<#7>=I4u(lf~CBoYV6(7F_aGH3Oj&zLPJ)<A#_y+&rI|W?0LU*I$TzIP\n^Fd1Ypm{OnXq?4YT<mb9d@4v=-~u4#4hm7WDIu3g5od7Ht_cpRN(w_o$G?($pe>i&E_>EMi&$A^MmKW\n4<@@aD%O5LI-CL@T_*2sO3lbud0ny%y18L${>@`Td@CGiOo>=yf%O#I{vrgm-DLlI|JCoYK+QY2b8#w\nxHGJc_YiJaK>&ebPo_n8ROhP1WS3o<Wwty2{}V9raigE=TwL0J>i7wgrB$0=Jw+OHOH<Wj414P@R*G?\n}EqlU>su)w^BNeYD+`iA+{2WYsR1&Tj!qOD$6|7uT+D<E7OpU*S^yPA#+7Z@7o<UyjVWX(K$0gf4cW`\n2_<?Pm!t@n(!;#<$LHK>06QeX>h9Z0D$$Np6ztBf?RbeCGyV2(*&Z5ZgzQp8FQ^H&<<{i)JHp*N0?aC\nmRlprDjCp;@E7)`sv<uo(r%!|vPejM$%W^oB7S$D7_@T|%|bMx9T^P;fKD0>L&A@V*9QUQ|+>gj9bGz\nYp3wTGANY?VI{+R`6ox;$h7*x<_O01WY^b#Gg52_wc0e2hM_5kdjZa5ulz8`ei%0-J`+KI;%#l8na@L\nFV88wu-@xgc0XXdDgWE%u&K+UYL&D+_Vu9nOjiya$i!(AHz>Kf`ddgYm1dMV!USY*Y{vq*Ex%)uT>kv\nSwEG~U{G$EQmmf^khP;-QzT4Rhj5B5(R^Yx_f&CAM5SlN(G~tV@ikzy;VHy*(X=_Y%mHKO)3O70;4g%\n%~O|X|ysi)oHx!QYBIk*;-W#o0puy7rckKeuf@a!#^=#Q7=<rJT0v;jehfE{Rj<4{jO$MfS8#5idwRU\ng<bg46*owKmL;Gn!u%;0w4WW!Hu1-vCRvU}{T8!&tORx?&J;@o^NTvyzxZ3PhYVpl#I$z178C!FNRvc\n2b99ZD2G0(UhEyLn<`effl{t`<-nfV9ZnnWK^)7-wDN?T3)>^J3m>(?tl%h3-`x+DAg@?Cie^UIYn`#\n#K!IB7mw<PZw;}q;&#IEAoF&F`M%q<^4?<D!|;iHx+n693QbRB?~Ml=8vV|PJ*GS1{tVMc1vp8vgL@k\n}$*XfR?_S0#qxvBiZUgL|Ro-JQ)n;|OD9#i8CVSrb{bf(~=2v@N5x!CcyJJm+8cUABP&dwPsJHOoGx|\nhLjVWqSZCJ^iQeB68|2Ny*h<SaP{`A4#|Bj|~-u^FWN+0~6)zoiM%mjaZEZ7=A3ln~uS%b;H08mQ<1Q\nY-O00;nPviw+ZhpEIO7ytmMR{#Jb0001RX>c!JX>N37a&BR4FLq;dFLq^eb7^mGV{dMBa&K%daCyx<Y\nj4~}lHc_!dTIE=IghAwc7X$gOx9k--WW){LF{BdXa$Nx_Gq}~u*Ymt^2G3ezpCmt*&JDUEKYzud~{b=\nS5?=mtC=Lpw?$huT(Y8R*v}VlSbEDlS&NpHqU}4;ESMbjd(rhtlAN5>JG^9#xVfp@8*?k9xsuzVuN!-\nJurG$LY3g;hFFMIjHl5h9s_2WdDWrtKbtC&|$u>1_D%G$*>|rd^COu*B_q;tU>EfHZ?A6t)o_EE%;oe\n;@I(7G5Eqil?FB*08eX&Q->gFH&9;R(xy&d)j)Z4>eU;WfVi{;7UL?O1X_gP-I01&!mWm9Joz_ma>gX\n|l1{|eh|ijv3r@ed`Zp>40f71f2<?SL^$_NtXVu%^HUFS<^2F%U>|neA#>hE)2tt}5QX<sbCq3;8bJ7\nyUNpAAlfIJzN*%yJ4SKwWd{7%Y9QEsG)kYtt*}b1HHT3q8T(%Y6*xaB!T)4PPgkj&XHQP7|UV3??lO^\n4Dr^pf8O0_97}+nyVmOAMs&NP&r8)fFKp{w@s69v#H~EX{yAH*%jC9{$<@ip35qc9;E|T)?1uN>(X%w\nq+hWJ_9C|(<`t7TBBcL5g#HEpvOWAi<OBUQB*otqEB0#Maft)jVv0$fPv$YV-IiZIO34ed&{m`|n?*`\n854ePg@VHZG1ypyb{-*Hy3pMLx<3wp_N%c0RKSWy|=0N3iC23=&Tkz&t=wW8PE6avH@HTcV-k*b}3pu\nyKIkZRla`((-JSK`H{ZaDqI^DFj*0WCA)40V!v`b2(sm3RF8P<QaA?TH|IoV~z1qRbL*Z}k=M_TRkhb\n4#`*Xr48Q(|Jf`nEGqc@)M#eJctt&hzX=a837`qUh|O2PLvJ-fiVPeSYc0SCVEcYQ0&=V-EUdZ9$3qH\n#VdNT@A#(vz*3&wWGuO<`zOgF)6l}HAjEWNxh#u4uNLMlF+1cfzq!f%zA#n)HUlgh&?0Gaid@K(g{J6\nxXt+r}nn`?m2A8*=9s#)3$1%)Li4hA;T~8$5vnL4XztkJ(A-corqq>8BzMMc~&F)PNi;uKQFYHL25Pg\np8J}0E`R<XYkCFwHDe*Kp26;A_hhunP$V-Y>^-w%g=3wBBm`GsT%hpi7x@}euZXfuXAwM4lETh#L%L!\n1cIwZY^%^MwW{!g^tuL@+y!3iy`ei))MWb>>SP%A{GwLFZcfeU=O)vMgF$lWV|C3~dz(!6Tw*07EqpU\n44@qtVwaHOL}>?g*nnnpX%e(v|Ko5gO%-Pf%%MrcS2@JmJC3l1UYcFG0fYwUxmQkm}++a<X<2qy8;~z\nSWL(xp_UzzOKiq0!__B-egp=Ige)#ba*ze>l$Ou#imrvmY4DDSej$dYBDxXP$IwWD*tNhOOP2Os4OpY\nQluW^aHU<S_d(>PmlI5gXz{&9SBDm|EY@L{8Yq%kS6-cGj3fGcF7(D@@9~dwo+xTml>a9tze<$RQfsC\nU<d@cHyD6iy)q%Vx$q6gbU!)b?~i>99GfXX8WS*`m#PbF_QOJ?kXhd+3qV3HS^Z3%50k+2&YKV=VL_-\nEFKOkt`2!rRqbu&)b?)~(VmGSn+CTF}jMfK`s3FzWYHx#wlQsY|p_H95o}rFvm4f&Btx&)Nm(pxC3{G\noc2F7#apfGbd!uaUkVuUno}_H8Q=*Jnr3|JI_F`jR;1r2RM6OLCz2k(14$Z-RP-9%gp^GL<l|I%Ope!\noF$7$)DDja^_({}OX$a^!0KXXz#<gNrXX61iR-Rt%dNJQQTU#$fMj-BRzmCV$@M1r%5j-}Bmprq%*X(\nq<78Iq4P5=H`}DP@#4}j+AZ`7@jtNtOQE%Ol5#yxSrGbYE9}z!~t>h3LLl!;C$#^aXq@w|tSfsMU$D_\n6z(1<nudA2POYwaK73<q?IJfZWu$9Q^q<;y2LAUw?^Jd$W?pmv>71R<lp5t0PF@O)iJj-b?3;bL(T?c\n}6xLOJ(PQ%y%TGqPixWKHiV>&$WqWDU%LaO=^^)Tc$_Mkjx`<#$@g8IPB+NSv%DasGW@P#jQ-{lTpNa\n_Gp)(AsZHzGUm6*UAW7)H@s^bI69Wai2~>gGVm`j#!5l)yFF;&@@%#oYpkRyrridRwKSS3-fa+->5u;\nLKUFgfRgAA=M>^!lD9ZfO(1(8KY3vhNoOME7X4%J$tild!T;C4boe7TDx{IOEk=QcMS&S2#)R_v2$m6\n|0|Dbsbli?cGzY^&K^T$lw&-dxNH)r%c#xD=Bkhwgj+0!1tn^@wkxaa;2qhiRNzd?&&Eg`M4Pffe#$-\ncATFd95C3t4LFXpr&rVIczPYq#$WokJlBca|;N5fGnL8gn@(X`t+9xXbROO2ZGRf#A183wg9wn6`DR_\nnW%_UNFx&AEFQYR6-PhdM?>GCVi4n6N#F(mf5=Y4OxLrfg=dc|^Lk_S+V+==&~(&ags|ddVWha^y`X7\nb=c1gHv4m7&8R`B6C?3AB38KKQy)_R#EUWmc|j8f_ImuE0P_q(?ty1imwO2)hu8gzH17fJA5f~;wU<_\nBbtWkoGAqhl{Ptse#M*d6bOAcsxp6sS`N}f(VH4R2%JM#<jA^<cmflzQ)zjeLqWd3tSQzZ!%*~?e&uM\nzDO7caxF;)d15t770;IU9z+8|Kd#AC@0`cBX>1VaW*d#-ULZSM~?@!)?n}SL^Orup#<}IKQKK`NRuG@\nhhk*RMuh{vvOxuO(Ahp4|%zO-DqpvuQmNtzGVr_iOv=_;Jv$#}u~y`nCQ^PlnW5xdw5A-VAdk=l4kDe\nBXmkiEx9_NE5Ug2G%!P!AN6R?7t2!m46-6iBZ*<6sj(7r6WiW;`%C0s>X{(u1LbWl%PV1qM_cP#~_#E\nkWBBw+dTAj^2RVx(8sb$zCf+b;dJlXaor(1ui*q@Mb(oHy<ai^g74axi4G0;zR0FdCA^!h+cR*(Z~S@\nW6+K)a;44nI@gKXKWdc&FHkDt3-#A7M~r@K-q@FPV<0DsYf82GgvE$tQFZ*Eq>|3eQbx8Bcj$)Q<52<\njsWvYsFlFfM+}+gkfdgC=;(9PWyzy%60}`+B(IfIkaJA`;JFs}hUscY1ZHHnPo_lJ&8MV_v9(R^ysD<\n<lAK6Vd$|<zBbthU39?9*c=j5qT0u^TjzoV_2R42)YRsu^kh$BOeLgZsPf@eg<9q+fIvVx;DNnTVHZA\npN$ovX~fa&uIs-|k0@c4}s%=5EVL#i3q7cE+{>j0yvV2x9{afE0x%CPoEe+FI>4U=|A?w`fCX=@sFgM\nGPS=ZpxCGnHZtWAUf=Ni7`sLNj@4M=hJzzI6^R7X@34+(dmfy5xT@PsRxr*A7xin*3wU}t5|d|yu7yu\n>R6IpTeC>#2*vJ^8s$g0-76Cv8==`_LZNfS2$BgiB(M=SG*(ur=shWUIM<P(3Q>)m!Ruc3cBMbN$fP2\n>aSxcMg>0uPaC(eVC6%~q8&Om)%Wr|`yhd{fy-Uw0^&HLF^u|Lr-)y(Hgt)RvXyPy!0#@J_Gn4hMZi>\n!G=SDQJz+hVEC*G)xee@hpy9q~((K~U$F5C=b)drplXEbxovL3S+|8)2?ujCBGnE$K>@-@Q~w}luayR\n_i?SVh)`!_V|odc^A&D3)n^wUar!e{7IjT9iULH5<k&^|P4d>uA%GmIkQCzAhtcW0HGx!XHTh%q#%};\n>cz*ta>*ZO@_|CJ|s(5MDzZPUD(aUd6%UtYKiarS39t?hzwVoGS0)oZNuGe=xNgs2>{+e`A!V|XlrH(\nt!4iJYw6cF;IwPXG=L|M@ImLn5V+nEDzLtX$4(;zdJ~i*S~rhm&0TSjK`F!1jD+z`CAdmHYe$IL32H<\nvBt(eIKp%ibQR3mi5XO1{h<G4+A-mXsGo#?4t5t3b3}n2>LQSpMV1~pHb;&@#?CZU!^HAfoN>P@D&L*\nObIBEk_{l>hypCn|RvQ<id#-myWTROIdw+|5P|Bxh%H`iw5q3{~o4D)YY240WP-T<2+sl(0~#xRBLE-\n_5FygFuWb68a*B3@R)ncL4<MA+*CE7nppL$CZO$;h!&$!EJ8%=a!J2J7_aFEQp0npPe9SSb}2mFNHZ7\nZ|dNd)n6@mfAvKUet|O06-;1^on%xB<#V5zSrp?w?JayG*jw-pNpbW;5pTG4FD+=TlLly3AupT$)Xoe\nd`8{Yj7I-~viioU)Go+RKYj;3yTSlgG36Sp;>S%B^-B9ZE??$t7{i1>a8>ylU~xqH%|sD477f&Z@(3B\n-#$N%3B2mnBpstH5MlsA-1ELZv>K3$<*%o>;tnJoDqeDCaPrAB7`zw@Ni&OM8pq(mKzM!Q7t9@HzRCH\nSx1ore4h^1m%B<blXhL3lmtIU%1pvj(t`$*}@P7F6&Q|tw{@Fk|2C^j=&>0DRR{k`rdg(Pw)ar<5mv7\n9i5?FNZHY;iEb1y$pX6dI_R)QCfBX0c>u0*l4*(9QHzS{MJnZ*8D^M;?k<9JD5a5Y`j_k>Hzx#s`YL7\nUzk;!z<4lbJC6*%Z8e|Z<KJxn|l!Hln5^^?Wj_fy&rgYSh7u5+{{)-2DKw#$df0D-F6riND`08ZTcAl\n0#(8?$zyGjH=@H~KLY4Kb)Rs>6tHF*6e7LVfKE%SR_HAS6DVug>nm7=UqAT@Rz@#M(R_V=cJ>wY{CXM\ndN|^?E+dje4OlY|~AiK`s$=UaZ=leYc9CQ_Sc9VZZB|192>MMYd$hf&r7fSc1K(Hlyy10DmHn|KJkbg\nO4eVo5PR^z6vg6Z3jTi=~9+<BHDXQt_S#c<V06)|b-o)LEA+@wm6+(xpH#NSDY^_0zu)o*oCso^!nh%\nMv0eSdIXNvb@(XNw5qh<SJ08uU&bxTd_y0FSa6D(-tY8q^#l&~}~T;xnd7<+YBQws%Ca)l$Lw7+OWb^\nyuPBlEuX6yCrNT;8>7lJyHs=99DYupN|!mQ3l=%SJr;zEdE0ZVLS&kQI4UF(Grua0KpS$@PFF$xB|Z%\nCH9SWHV(HJJvqERCGFMddwAU+W1=9Unw>b)kqLN;8P!vd13TSoP@U7ZyzJDx#%wl~KT)HET2FOdOqje\nhK&_QudBS5_ALo2TUyOmymL7S-y3-8lsJlbk^Z50QLm`e>E?=`5`c68}70CqkF(Yv^XE9R8mPNqDV{5\nNPYtz)fC<uYaFq_$XZThIg2;>OjCS1|g5;WBM0MYOJLC{7U_*lw60G&j&xvkqWgelbxK9u0rY>zIfP&\nW~DPNp05eBagkG&wt(!dB?fB&BtZp6YM`F2DSo!0SQ*Vf~#@Ic1o<%HRM8+P>~V9o9EMQJQ#L(o^uxt\n9rBH5Ym_Yc$i5^w=qASF0gz$`sz!sHethiteNC@skcf|&Dhk;MB@Z9a_(u3C6+3!(bYSg!#sMYQNwlP\nPvIqw@7pOdK7RGU(s<02%20I#I-r237SN^!j;iT61Lp6~&PGORrr6w7XM^HXpho^{FZ}2zphGkn;o5q\nnv6rmjx4ik)c{YrU%We9r`E?I#-Vk`V69R<4zQ$p$uW46K0E_7u!!^kB_4V=0%V*N*ffN|_RnhZ5i~>\nIqcy!E)rh`cFa7w4$aG4TCbQ)jnEnHuFgZ$^o5mjHc%vCxuudAHDABsjPF^^OcPwC-XmvuERDAnm%8d\nG{y8f})$uf_OQjccj!F3i4=I|218#7H|g_lr@e-|mr~SEho$({hT6j90Zv8}CHL^?qjguDIc@&IDpTF\nome&EU0K{fk(!3urI~#9_r!nDqwKgPKR7J2Id`M3&M9w%GEXl6^-~bh==ODu^Sol3XP{j@we}?p?_ww\ngz8Xgiu4$5R}nmC^svQpGOowymA#4<9|q2uE(`~(Jy@AnF&-og2$Nd+MP_b8D}uREJ$kdv62{xsqh8~\nXl^O<qj1P$>Z@lYiSQ`|n#UsbZv|kSY>yyCbw_!Y6iVmkkLX$p@o?fyXvBf7DxI+#1;|%}LKTxb@8*g\nV%82f*V$rHa;KcXs?aQM8$0|Zkdd4$3wRh&*lD>5j!c7R-uCD!%Lw*B0x;$KL@`F5U=#v4sZWWj4w8(\n%Qfe!P+Veo7^8-qmz&o~?OVV5q4LEhweaUYwF*N~X}qtIvZwe?E_B9>}UvVJM$bR?xiT6upn)pToUi8\nP4R^@NW;^?7qi3rX-aMa>|x0trr+EK%ki3E$Th~t`~Ito+WUd&>`y@|GT3z3x2j`%A0#>_l<vU(eTJ$\n@H#*)lw@ZSYLevqUNjCV^oY^9^7FH^8(`?LMs;_#r~06?-C=(?tEC*cJbU`|fB!N|+It8Z(h|qSYUXn\nlxOt_q$4E(OKah)-f){6m(aJuSzM-AS;|!ew(eYCSau3TAbFQNgHKd#5pA<p~R*And_EC}G@_(*AB}+\n|@%cobNX?5UMEGd$aMLpnIgSt;opC0LTmmHP2<Qv{_tr-E2>GBy_U-}?K#NPc;=6yV!^=LXcP_7D8+(\n$4X_>HIiH)yO+mp>+vn3?|4jxd@peIzBr#I2s}OuIjbE|1tZ0vA3Vk+049FHI;Aa#%LmED>c~CgL_UQ\nQ@dHo{CuWdiysj=corUYd<5z*1`Fly>uaLivd9FWX5leKQ0;$nr5(tA?{o~D(s+m4qeJfZGMUk(Z5HQ\nK(GvB3U|E!|3SduonhDNEplv~IHwfG^Z*C(O2>chhy_e#MLdfxi1~PX<d4tPyM9jTBXWf5IEy|)@gFg\n!jh>}<i_istrs#;yKoq*X*AKezfXb%689HA5ez}LBp7b|RVw6#EsRpX}4C_112*2Mfx}i1S{|PHc+|8\n~!SD$mbv}Juue-G)(wUt|Om&?8q1H|c=VZo09b%Up)%DZZ&jLJ3<ZLZXCDJpP4zR=&Hx=d((<fedmA^\n(qjljQ0PEa}&8ofk-31LB<r%&*Tf<@uMe=&z<om`^1^r}938)kwBL-!|6Y%u>Y#&)Y*}82uG2uhaNDS\nkpdWM)FMo!cpbKn<$+X6LQfu2iroG{ZW&9q;qKXr+~0FL{Y-NG}SJ$1}Qs0ySonN$vakbbi`?Nia}So\nRFyQvhGQBtwIPI8RP!fI5?mj>f;Dgp(?w=Qu>~TSQdlF&rc8Iq{u|x~X$haP@$U}=EmpB_XQctq$=OA\n-Z818|F)_CQC1Tv&5}Lk*)f4$dioae~!CfpUo34sg>|tbZk1i|!W^NR{B38j&#1-++x2%wL!IKDy)Dl\n_g-)Vzzg{;Ec2t2n|R^IiT3#7h6hkEw84I4?##wudm2kIa)(e=ml`5Ytswxk@(Bu>Evxy8@Gupgek{W\nh75`4T1(n8WcGgLv1qB75=rA1_|N#e-KuRc@gvVgBcNM%`Yux)uy~Wc4XSTzmWjFLfDkE!!{p$V!Y(b\nwc9LntLVKK@7@_Ps=jA>U*jlQn4j^5bF3HbnS?2f1NAj(M0?K528wGN?2w{`26DH#Ty`@YYq0Yt$8(S\nPU?`8Ya&Xp<@iBHbW`jHC+MJ(sp!_J1dIF#m@xH&MXUIM`{fyXBbI@yfKP#1$Pgsf2*}=HtPho`qDTw\nSmDE3!iLb>7x)KmRm0}h6gFh2vB-Q!C0%JFgSmPCV;_@9BiCx_;)Mvk_e%!J&Rur~L-f)gZzp_U8q^e\n&^su%G=O$r6SuDCz!i>wxBygj228TDu2udA(Se4lT?nf`^J#lSoQzaEVGsiVWGl8bCCcJofxTvnXCNU\nGs__zAnh+X$f}WK>>ve3!`w7arHXK>DlgdW=O;B=Lh@kL4oEvc!}+A=C9aOaH?FR-(esXXyyW-2PiYN\nHT%5xIg>|&#eD0XYLXNMPI1dpHeus@TjT3OVXHqD=Gr?+|`a<qZ4s$LKAO8N}7_%qV;#^Ur`z34#HPT\nRIRzG3$C~-)i?e-lRJnlak29rVAkG8=XM;APt<a!xMM$7gddt5l_p~)G3ZwM91FNs?X3JQsP>v?SRCw\nW%>vO;8VGBHO$~G4t>FulxUwH;L0dyH8`vV#=Mb5Ta`mTC#vkDGPb&T&P)h>@6aWAK2mofX{8$aD1j%\n0p000RS000*N003}la4%nWWo~3|axY(BX>MtBUtcb8d97GYkJ~m7z3W#H&Y^bdXp;tQfuK1w*bN#W=%\nF9TAqcdzG?JL5M3to0>jwGneM3sNHnxLkQ3HuB&IgBY-po+DSS*rGb!m1>ZDFiXPL%kHPpYj%K^=Zmn\n=5j{lmg1a8_`*Uju$Oa!D?|iiQ2-n!kLDA%_6$<WLv4zBzdhgyr|Zxf(B>%on38uU5E{d+yn(ng-}h?\nd%4jhB-{=vrqw&>C4E;&4<&?iOV%lviPD-z^qupTWRoTf94{<oS=syEQkKDIXRH@;<BaY-W$`&lhV@F\nD&G_56w3EIbAKlI+$s=)Twr$)%AV!6sYSVjTo!HhYuSG3y3Ak<gw$KRA^!7fA!!e|G2Hvm%Yyg!Lw^H\n}S#{mf5_LPdhczLU|#<Qv_vQPvTMWH;7D|NI6%5Vg`T=tGcfZYkLZb&Sgx?2n`<*igYg6RVE$>r6nzk\nk1cdvz&Zir0vT_;{~&2)C5I_G_Vyxk0{Sc!jc*<D9!d5h-v$M2<A3+ggh<<TfI(r4TfnAynR-qux-Z+\nLjps6F?cD#VVX3BJZi`JWHWIrl{S8vqT)=je{_4fXMY-&?%<Lcyccr0f0-|DA@-3ye9BWB1DFLt6Uu*\ngQ;iCNLc}2;$2OoV-*}_4*F6R49JjP4la53+tt<E?DEYYKyhG93U=}La(o7Mt!!us9s;K<Tdk5nB`Ou\npBZX@ul3bJSkmC}-a(=^pS|M8;NvsnPsxd{cV>FB_4xmvJ6aXs2(q5I90g-5pM;!v3fl??h$!Q3A-C_\neTZ>SB`1247roqKU{Q7K>dn>07g1*9$N*^=`AURe64C+FQo*K2+8!;e4xoTBo}{kF>(As=}4A`$qEl8\nn~?)8f<9&*`UUpBE``Zlnh;EXlI9nAj%4*4tfl!k=s?*DRZCvJOQH{w`Nc*?jzk7NuW4T?J#h%c=9?O\n|ZVQ*4Ts7N8%m24p{QBcc^kCsP$+u$cWjFTr5#L=pO;~PCAENSrq7-5@eq^ssMDz3vlg>LWfjdG$hfQ\nd@a4Wz8?HdS|7>>6hsTVzMgpE4Uxgn_Y7*UIM^QaQ}L&2b5t9Bha!sNP(xfV2VZ@M%yKMT2xF}s*cI*\nEI?{x(VIO?JSjGoO0U$mOmv}`eQP8jIwX`En!5k4%%MpgT@L1-)2bjCZ6Hh492<F&oTZ)7vbg&7-xuG\nd^qS#nQPgBIzEi`+_4T*3vJA}}XbF$*fj?r#I(+$1ZU>A!9@I~T0wdsC^a~z3-ws@cl_pKqi_xDKs0j\n!=15A6J~H{M7GuGS<ADBrVAt?RV%%SF0ai)X9DcI1&QyPSGvFCU_t^|>u$cM0TVVi<H48Hm9Qn9L^l@\n4Gdl9x;+_phX2{gfN+X!{p%!!?TAOGc@sgT}i8rl_9BM)RxfA@XhmsmCMKpZmi6@qKNZ~9gLG;I_%;c\n<BmA?sN59eWR#%k6NBr<u2Xp+13H%32D%kzM>Cf<u;J;aVj;wPhVy)l*-DgqZjIw6%KLU&dTvcFP0&;\nKb21X)k@$7s;W!}23(a8^AXc>YVmccc%rFmYYKG=LxQo>}Ai4)6841Tv?_V&(xX-2h-+r)sM3Y(Ww_S\n_HW8QJGT8Z!Xw#k=K$Fd*ry_d!5xJ&P~?&Ttvc})P#TZ0Y06cRd5sgBk;382Qwb!(26JDJ}|+!Lzvl6\n1K2eMQ4{lp`4E9V^{b8QM4wozn^Fkampg6GCe$n4S>qAo_^AQC5Qv$MSJro)x5VI`IwmyiPpciJ*@((\n%x!d{`}iD(=0byQ~r%1?9IT2Hd;N%s52*+^i@MH==l~Y=6Un5&C+g%?%6sw$97IS_eS8WF6J3%>WuR<\nOy+awuwZO>C(8<zKV-|4-$Wi_=5*HZTMmlLd7f_nkC$|@pR(bz;G3nU2ID}^Bs4RtkuBEj468vh%ffZ\nw)EoeMujUY!)gM;W!E*kQ2D1m93wC%nm}|sLm}}!zL#Cg7E<BttaYp04<Ww8O4fo_CX9QL!@L^%Cs#@\ncpKgB*)(55;$QG>9N_NMPn%gzqGAazu6v78b5-MM%@-JLP=R_3$;l!I8szY`4eK2vRJ#4lp`99QILtH\nYiA;KiFpA74Sd#aoNRE$}#?!=U^RP)h>@6aWAK2mofX{8*hod%`w&003hR0stTY003}la4%nWWo~3|a\nxZjwaA|I5UuAf7Wo~n6Z*FrgaCz*#X>%J#k}&+8zoG|<cmc=|EXv2&9MfT0l4lgY6c+8-efTiICeR>z\n1a@Q44N)+c&u@S8s;aD`K~R!+XLp6LMWDMX>&nW?%*vy@T-K{L%g?5JC4ZgPi$yVQ%erb3kH%ifsx98\nMi}K7onXjv9Th|L)v#gpW)HFZqWwFZJdS!k$8(Xs7EQ=<~n`}bg)Z?-`H@~j(RRuqry}ijKUo0k*>@Y\njt%iwb_d$|VS53sp1Ur4=dxhgNqwtQVQV=C5vTy6Rz{`zE*H_dPP%KomaY2FqU{BIt8S62DL{P>}4q4\n$fI?Ft~9hcEI~e)$p_jUGH+oj1|L?_mV)@ylW{H{Xw7)cU*XnEX6iFBi7RuhlZ2zJgye`p4fsX|ln5R\nbPgyH8dl?%F8xCb08i!n`-*J<rRq^s*+FYRlRP@%CGv@qDs_#!btIBUghV7ef8~nK6k&KT;yf-W4?6V\n$GKk>ZJ|2P7%{eMlYsi9Uc+Pi^J($Vb>V)@^Yx;AT25Q@=%@U$n0d4K^J-SCikU8ilWiUt%xYKbX}gB\nC&!!i}^i?y;^6{&2J_huv+ZwuTx(PUlc-lNZb89S*zTLD%^zcc23B7p}KK^b|=WY1#c{PhmKChy3zrd\nu-T<3qTiU;+4p0yXaaqKRr>K5>PW-7x@C|2#HDqg$klxM9%%;}=YSCbkFK@VqkIJ3OXr?{IY?JBRDdA\n+){uZrcWnChmU)^@L)7i|n|uJ;_4&^v}|tjhDUil5|*$yweMURkq1lgr}rtXO&Pa9|UdmDWCm*;L!EY\n;1M)2y4w|3SopSSR^a1^j0>*)4x~c%)WmSw6KB|fPv^qUjdSrm*LL|p`zZUN3cOO7C&B;c@sSd>C9i(\n`D&&gJa={e{l&A%lfONC^8NFl{_4i3P~@ljmjX71U5sCfeD-s-*tp;ST$d}i_CM9FdL$V7V!bM|9Q#(\nl&br87<FBiH(`08wQNa;n4gp5pvj&iC+P*C8V1cH?7PX`XFk!WM{<9?#a8UTf%upCb_*)=Iijb(~{jO\ndC&7S>ISW5lfs{XyGRQnMjqz9!%^S|ZIh3<jt8xY#d=C`uAQV%@J8<OYmi;Y+QhqAHV0D`(yCzJftrG\nL!Z>4p8Vrqdv-#ZO-%DXpeO^w<&8S}3fgrAwSsw-H|CEp%R?2H;Ios<DM_DBv&4-yPB*Ub`s^PC>Pdz\nvYW{;myu8ce7K~yy0ovBp*&@#k4lFeX_TAF9SlBoxw4S2mmM3<uY%}vvN_ko4ps$UQ9mw{2}lkN2_(Q\nCoBGA(dO_7VeU<^$md^vK6(D*iyxl-`0S^nXHVfBusma$iMpDU)x6HWKFkK6jIw?B|KTX>odJm65L-X\nGD43zblN|QKqQ1&<*eaLxtelqx_GnoG&s5J1w^QP22uqM%6boR6fZ7w34OOd(Vg{AYHrd1w9qMjg&ER\nl=LO|?Z17*q@K1gWvFox{&Pd^{;?d=hP&n7R63ORwr0nOm7m}is83W)q<GH8IE8S-=dtcWyZy{{Un@^\nufuOfK`)t6~K+VL=UGxO?TidukpIRcp;fy<W^F!YE9T<(VvzzXJAQ)ePFW2W10nXqyA74eTrYw4-dmG\ndG^d0uqTF2@g6>J|vt&LOHa+hI_?gOaH%oZ{5FBkB8W;rg)ESr<xuT0s%Xbwd09!->{tKWZ>O^wagPl\n?U(gskpXH0VgoS;9GKCb$zJEH66s7c&Jb~%f-ra8Fx~=|lFUK0+OUWBvVkj!-9WT0-XI2#hkHk^ec_@\n9{iFVnIOb|YFvfe|r%HV<#em{UvENd~ev@KEe5BwJ%y6n*c-$Ys2xyd5dx(_7>xz5l#@R5u3g)Q;CcY\nxL_$7k<v~1hje>uKoyX^}ekThXP3kzV-Q$Z>!Av6J=A}K-CEEEngaWDwPG?uBvD67x@p-SQhdjzil<*\n*h19bsf%!Ybp)pRHE)YS81JP2hAWs)nQ;oX2U7ye*JRMw_d$z0g=Z><vB0g69nikAvYj?k;w8FBnpq-\nt9C9p^3@9_qO*;S{>@Chgt*Jz07?dnuSoE>h*drok(235dpj_9AmJgd6n3LV_Wk9p(PB&9DIv{XA=+d\nO|mfbVSR~!YQx4YGU(k!J!`z8@c1<y*1E<Sc8=$s&NKk%DgomNyXzuv2__PP{0vy>tU)Q}63&r^_CE+\n}g`h1IS=MkMBB<BE6Tn{!4QrKC*>bqfxXrT1Z6>_+h(^QIGK;ZEdTGJ2P&n3e9w1CrT*1ms7eJ`*qc{\nV9?!O{cK#V_7YWF?hV?6h)Em7RM4bQi93CM%djX08Ho;Xh6nMGc~FkqE0?eV0Z!RfTBYoSRy^9}uYkM\ny&TXnTz(6`Wbn6VlJPKGM$}X`5e@eyZd0UiJ-_DBb{v-JlTi$@q(pM%mfA&8`aK3R%I$2M%JTwAToLv\njSceP;Gx7(fd_VEIrl=F?2GaRwk1SnB`Roz-3Rt5m^-3McXc$gO5KxTZ81j+`vYv#`Ws_;}UjF@#*KE\neEP^vCczoZ{hfbw0f=O|T0|6!$<QMq1qFWhwgPQ53kUltFrXf9XN7Yj(9Vi#M4W&tN@(IXiLKGB&*)V\n#8)x6qVV$EE<Y3Q3SVppMbF(7)!)p^g#(9|4Rlx|AJ@^{PMwO_JpYeE{Xzu0uY=BJ;<4PUCaj9r80@~\nuz3a6r`bEoDLBjO(YP~`KtGwI&{3`?~dV2$D1^b3L7hrm+-@&fu)wV{e!5l;@3IEd#0kpbvQTOz}D<n\nW|+z?-6N2!&2hEwZ1UI&??mJ3U3p08dfr=V2QhzNkGmz@RK_G!TPKkAS|fYSJ*n#!D06b`{W3pdNPDi\nS%Y(6>p}+vdspMP48$1M~>hIcmccgRk`Hj$PTC}7jPaeHb~2XI?xmX%~-MWbsPZjn}TC=xddv5brC9$\nAD#laoivNOZJ^UgZUQK)BA-2|tHs8w$VPRVJJN>}5~x?XfU}?R#qY{eZ&o3}b0D#Z_pBEiAkmc>kOBc\naN(J_i!GD~IS`3;z&#s{V^YRTWDACdV{V_<o@b}?(pJ>J><1fcwY?lDxe`(qPwzOLwgu>2zfeMIfvf$\nS&=rjW-@A$OxaTSWsM5Rq@Q<!2zvV%<Enl~`5mo?rrShyPdxKX^NII+(V>=I|fRf(7Y#j!5o_>{Ihxh\ntj$+}M~7%-LWGc#g;UWa4uIZkiHx3H_k%FhqqG)h;}Fjc}ke%f!b`U=dl7g8ek54mw60jCNBNz-28-x\n-76|Em<T6-X#EsEQamkr1+;3JCH=iJQwazHRV)l=V_N20v7c-o@2<37BgSbfW(p)V^++71)HHFsAvbt\n>0=JZtewAj)U%x-QRyyFW?>V3J500_%0NJqF48iP0LB7%A@w`ZvmJ+;Tzldw)6C}9RWGZuwd+2srw73\nHhfD96Nti~f$xjr4`ZUqhUHCy~2mB3Z<-BMC$fa#JNo~?d=ZcPaw{`7sDg({y8pFN4&T>0YLcjKFxqy\nIzB|%sK51d{=1;fX#=-A~sB2=<)5ik740#e22u|3IRi1$E*y%6=f8g*jgnq~(ocn?nR%W?s7&!Rp@39\n+_1FY5b(8D`*9UJy5qC)Y<26j)ne0S4Y^huK&3Fc@x{IYrsbTS9eu=nv6VfP<vf2b_j0oikOu4tCdwd\nt{FZsCfMFWVp4e*UETRT!O?vHPhAj){!=cS99e5OxE@0j881T;{l=zrAnSM(f-{FxDSs$0Vz0ybN~Nt\nn~BHFev=ksS5a&mJOacz(bcMGmNftYMufI0v5dKVmwgZ1A>O^gGdQ8P0<Kwo!uJ6)HwoM1wZ!LjzB(`\nycKqoH%-N?~>!1XoM-O{@26F)9amF%f)(4P%WU0L&p>C_*K2wEE#iydJ<^zr&j<<Ho^dF?7lMW#^AuD\nZzXvHYtbj$e$zuBd<Q;p#AX}hK|%0g}fipK~D0VtZ~teXRLL|)upuuo>|%gc>pn}Zju69%+FNk(|AQP\n%UW=zA<zA_vb@&%AL^%@ca<Rd!{($8zF(b_K3z@WRv3Twm6+HQ-@(jVOSJIDDN0ZD<!|RaEr>-Jadt+\n)#Np+*NT7=h+IULYvCW_&O7>_T4p+HE0^c%Cx|C3_7X+d4hkLq$&Q`G&(>)zQFO+>Sd6On}V?2?494o\nR(ERaJ+EMSn|6H$^3<XL`n1TWuxYMplnO6V-$XB=X=H!s;?U@tnp~l!X#<aeJX_UQqpZlM7fSRdRp&R\nRTjQ)_>wn`dxEc1koqsVPoIM~liPD#7)y3_V&(LayYSXv7R!5F6sO(Q=RaXz}bY_EcT#Ru(it{xx0ps\nO{UJQ|ew3CQBKqcCcLIMPRnlK>ir4a&1UgV3c;Gt11-v?rH--0?T{ufMtx@e?V3Fhm(E}9Iftf!#L9K\nj$Rtix(KUg3OSmBnkA&fMzu;ml=<>o$W&j|M{vCaqAq$MT6NLh(4^>jZw_5Cg~y048dR0D+cHCirDC>\n5Zrf$Nxmka!jm_QSe}bH<_H!FGKb4cXTvhfoVO1m*Z(YQB=_@iDxo)CDefVTB&exK+>hHv$}+n*G$%5\nvho}r6}M}ZqJziagTD?j#grRm)U^|VLj|FS0r#=a{ft<jMyyN5fAHGDp{bXKrMfDyf=MA+G4=pqf@cV\n_mbWZ_*to+4)4Tz8Tch%X1UyqGM6NO4)eVN~Tno<Sfxl2s@GY&ATc473yJkS%vc%)%gMYxvM7qWhJt`\n7sz`Ap0)kTq+Wl!s>-y%Dm)$6uFE0&y19O<0iLkZHqJx92|<*Tw@H*7n534$N9Wq=9|s+L1T+A--h=L\nK8gG)SU0(3=NrY=8$h-m#EHCrH}`Dp;+}t!vyq+Ot-*>XOYo+VkviRc-xv&$Hl76+%rsS;e}S^m9*H$\nLd%1;hwULbp_PJJ+ZyjeWwR|#<*9#ktcg-$)%P7e(iZShU%Sue2ck)XE@buxeyyCk22qmd6b3k?W<6^\nTsA<wP&yePk%%uZ@#z?7%c^bgBp>uAlRjI@&>Ik*)pKhI$vTCvJ{f-r{6^6rO4B`haHp!}ROW5P?q(v\n}VnWuGWDTn*nLBO_bDsj(OPl#<#@1MZ#gzwJda}E+j?H;TS;dN~QFebs@(opm$3T`2k()u40AXx%2*f\nGUuWg$ZpeCtNrZhroRid||5abS%PLRKL6s+uZfP9O~DLWLJk!UVtP%;-ZE%=X23*W$Kh+T><85V4!<i\nKw2$L%eP=2Vsl^`-JPRGK!7pmzQ7#|TB<U`^@nub55nJ;J;0lj^oV%KBusLtmtW^xZVrzxgk~4X?N3d\n^Q{O9Hs=;8D&gT=$a3{kc6f|#r@!0!tu6=+yNz|@*u!z4~pac%?!26$rJ>~B3RO-9(+d~_-*=cr~5{|\nw|;%uoWr}`3#SHbYs)IIgVE)>A^i<o5Be5Y7CNgA?GUYnFy6&M8^iEID_YD!2LZ4<AbgD{1FDAwUiOt\nwF>WpY5&iNT8RF*d2D5c~?_1LA!#viFKJcL*1d3o*UrnF}ULm-8d*N)Uf`1Bn9QRQy>|B@9ifdrXU{B\nEX*t`eQAFz|K@Yg;aevq2An_dJky<vi88oPI@6jn&z5#etcA$~$buX&HUe&g6+j|1+-ZG{lh7YMzhx&\n}IWnOB>BuoPbhhZask)(7^tpO_&A28{9fnyvA0hj5qw(p{Pw%dTCcHzPNr*XCQIxwLH?c6VAYHxpv5J\nZzgFzu=^RVnAvUdS!V$GD%PHG`6i!9#D+qCz=<rjg4HpMl*>2`dsIon+=)PN9ne8i#}hwLyN|-b8Osg\n0?ybLedN9p8_@F$_S|dNM<Y#$!^rVjT`x{X(G0zNr&BzCch3{0-=h0_dy^Nx{CxED<na$b{QUPHp1(w\n^@oRe74_2~&kU7PT@>BABHMLKW_6JJ4Y7!*pZ)81bJSQjL2g-NN30yT#j3<qqT<ml|jTO|X?y2t^V3A\n=b!IXBP&<#%FvwwT?!>>=DJ)Jy0I{M`$l5uNFAPeA?c>e9LN6%gkv;UB}243qDy`99iphqek>kUYZlz\nCc#KslAk=OV^i5K9<nVlvj_?h%*cIT#X1w5OGG)i9~pVa5&iCKA=cqCthus-8@a4<78F(7g(hEfD`ht\n2ZFaSPgA<S;qtQua)DV^EbQk4-;IpvQqa(N++V^LKe<I5>>B3EFERnH;&HE6+1e(Fa1Gn5psz4Rn3^k\n8_<Cj3B<4gv`lOjXa2$`xD>}w6QfM;mDt^w<-s)tZhBTM+l#|T0?1RunS)~kivhDSN4Am656AP#`Jz6\n{VV&R&%IQ4$Bv$}xA#2>{w!5qb$t6V0261^&gTGwlExN}xcClT<k<As7a#Dbu`pB%!C(*Qy@6>0k^)L\nvT2@Z?N-6tb}bA{!rmaOfK0dtGWwdqA(ozv}ey#NWs$Th~IdAwc!B2#NH(rIzblTdp?^2}rf9QC4Tnh\nCoOvlYE8*C&B-9$&JEm_RtgN(in**l9ffn|20dDr04-GIBg3r-3O|w%2;57~Q}(Q;ZgX{{IWKs$VQT#\n}TaP_GDu&fZ>IhtzKQ!iz55+m!J6(cHO{4Qjrn7DyJ9OWxg?fJ)!5gj5AV|YaAZ(#>ayLkkAeRejuXU\nD5JcpCb3;)uWpZna?Z>U8F7s#%HcWC8wb3kB|c4u^Fd#m2r3UtH*JW@ll=kw8|e7`rm%~rQ0UY$zLi4\n*nC4Rie(DBPWv6OspyDX|%8cpj;i-T9cUd=Ri9v41t>~EPPQG;3(kN96IPnN_3--iZ<d@K|b6nMRRTW\nb}>3mfJ3SH49UxTPStFI~_X(W<>1=iFf+@CX2WG{;qQVFv;p(KFDy@EyZv!-6G2}xNySgT<nk$Ek8?S\nf`-nYS0{S6yG>G4C2w!~l*}^uZ=8g!|a$eW`niV>u_4NOOTh5YrIEZ3l?VA6CVpcn$DIfGuQO0njS8M\nL<%p+;C`)IfyJC>@@zzssUQdz`+bZ_p+CGC+qh&XOf^Md>=Jd?Qpyuue}w57PEb;Fvxi?J8kXr3PxFy\nCzVn+kA3Ibl9agCkYiRfC9!KG0fO!%h}nWQ8)xDkkWhBhjXYv3g=KJ1`?7pv&lWgZsDE~Z4Z2Oii=Oo\nvLxMD4z&YO2s$D$>^6DD|-O=h+xu9_%5nJlZ;tJ7e4JXB_T_aH)sT$F^iGm}70tH`ztd4_I*Twf#-Jg\nCwdUlXK{TaV7nHFs&smiL2aXI5FC)_}uBMNpGI>wuGYTU_8ow`adq&E5c;sIK~D1hujU5gVcZumeQ#?\nDrk<ZXp~#E3XL`Oz%%X|c^CjO|lVu_Zm~S^W=zL3Poilr|@_c?4kB2FNHxv77AwBW{&p#_%-%N@dcj3\n)#A9g#&&JjBDm|Z9jyI9cA4;?1U*@^LXS?4kJcRN|~$FQFgq=e33|qJrk*Jx^RabCw_L)!<f&!=bfw>\nxpb6FXqd{d-J0bdK!CXg;5n?tHTL{Zs}8*l4IrgZA!Wn2PZ0mdcf{dP#V@xAJ9t3)jc%(KZWANVP~o2\nDW<bvS4mkOgMwtb%P%uPgLx*%1U0(Ry0k_`aW+1MeFOp1_n)o#1p+VoSaQ0@SKk<Uu$ZRCF%D8v8GU$\nG_#FPpFh&x~+*F+sj@1CuUV`3WYB<{N7de1ur3cL9{&)@F-)B7e0%i}g_x>`~_obK#BKF6HYhbL^&B9\n9uko1RR@^KGh*WHp|c#>)CcLwgQ2FY5Xg-ezHs1Ry?&6}InpiE$i!V%y8WhHNkfw~zB(k;YMI!U?n>6\nni2gaWfBZe0?=fIqt@wc@M?70MtQtjn@j{aEHhHs5H9i0Jj4%-$q&@((MOCprYns#Ek!)1I;kP%3z4M\nD}e=O%@fND7MaO&KY#)~E6*$T7c_^!_#LU~_Hjf!S4hEjJy7mtXhb?P9+y)S*v`y2D+iXEZ@+c5Zt42\n%hru1`v8U?LFy8H8h@uzVk^XLHb@0<m&_hLs6IYLSnCDIeBOhY#rPh|FIgA)s(qjrgugTp+B596g87F\nMGI555AYx<bB?O@PpK4&0z#gzLU&mNd#>_1dOB~_&Dy`5a|+Sl|QZRZNf3&Qu1;*q~-Cm(k&`&&MJ1?\nP=;ZFs^9THVr~um%u8-4^|bo7*ILS3Yl)(~j~-OBRn1IvfeE1J1?viAp>VXf3THiz3ci#&#*x44^L(2\nY3;)T{Q8MATHAfEQ)2m70Ep|q|5=mMP<R>Hgf2;zQW<GKrM&!1k{=an3F5hFq0IXmOllHF8-{@;-krW\nS*2}f<uFmDdAQ#w!(ylUbR1C{pX8v4IIJ|kp6pQIcAUJh*@XmY>E8Ga)BRNHh$GFX2~uF#9&`%KSJu*\n(mj(xg*QBdW7_-74tn|^lQtH$!c%_c9?unr-TSV|%9kk7d$x33t(D|B8vD{79$VGU_@pyk=CO97FJ6y\nb}!Kay0ts~W)3(W>3&|`<!rJ>9I5If6iwMYk_-of(Uk#ct|T13|w+YAXBgeoN!BTK9GR3DvNcR<dJ!?\n!AFB5@pMis{i?HViD1;<lhn^7J8Y*NQ?r=}ZD^O;tG#?WF77%buc{+$EAm+RS_h;@DF%LX3IXh!uZpB\nF0PCjDyL`tIgodJ8+0RIa)@lCzR#Fy8z%!2I5YKVRnbcla--ZCLBp}G>U#G*Y<rjrHeN4TfZu5kd!<e\nbQ6YkQJ$5px->(#B{C~CeU$?*A@%sP<wSIrlk~LNhh3ePDu?#Y@HSg}6aOXRvhBW!UIn+m(R*byfuCN\nl_hY_#rLmCLjNE#R7nh^8w&Kh6^g`899@bG1K%rquFt<<=7mz?W7bQDtv&W#{F@431y9Y%iIugi<?E&\nmA^y+MaAmSNC(KF!&l>aia$-rwviDg}tbTu8)a=>F4D$Iwm{s}Gsjh|rPq8;<=-fN!aCyTnFRk2q+=~\n!4(C?_|^fnz0p#EW0YR9P0)p#L#m41J6~mHpw!wxzc5-#Nnn0TZLEa$%;6SU29xMN`Q2FMAYmKxuP@q\ns+Q$a;h#lR%nJQg&bC(X#S*;Eo8<NS`g{=j}o%WPK(pG@oS+;XFnmU3f9tK721VFVbqV-M1SV}jMV<n\nw?D0J`tFP}#3OMQ`6AN2=>F00-)QcBNI~uBBp3d=cvDO%nisCx*`l7l@^1TzX^y^Gx5H%B83&J408V4\n>RT;sI<O0q#jd#%{gKa&TVmp{|_G6J(R~O`1y``(r(MRJ)AL;R_nYd3wxSyI4I}i6U-tv73erdy6DuC\ng7%Z%Uvw#mwBFbdd!txweaU{E&CgHi2M!e^gJLX_`35gv`QN0Ee#VWU6$^iv!MopX(N-D;8>R3RE|RW\n&>*H0oHv8pcq=P>JUk5BB#z`Q*_<Iz+E7Hn<ijL)tZP8VuAwjsh6kXaTKAycw_u<!L}LZ&O})_J4MFz\nE9;4Y-ZCq#xszw1CKhf0|!|=cPfaU(H~?&P~)(hQTi5L_IEk#A|hQg%VAz!6yD{fEN6C&{R29+?Rtf{\nQV$C{RNs6{8i&g0HsQBq-%ez=BzgOaE4#!{Sb@rWCa!x=C~%JxADA$sI^cZcN1Pw;8P?}8W}yh~&+C=\n3*u%3?3Oz_DLXkzB=MB1VChQuv@qcEktNbI5^HUGKLX^%VE=G^Nf|3p;E-Ej)!jw=YE=rGsKF(4w>9J\nSv@mT^MJoE}tdX=~sJyx7<2d`zqjM|Axu~{6A@bR}#m?)CoRLrW)9zcSGa+c>s?aQV1`8O#28vuc)yA\ne5!^JQB1MV2JH4~rJ|tp_&8+V5>>0?iGM9=y}=1R39Yfb1gv=DiKk!gGU^NAEOD+DLCbNDBG!-i9d9+\nyFVE$h!=Wwts4P@3M_%{xZDlMgrPndw7hY{!jd6u-|WA4|oD2BCd);x|=)$z=I%rrnTG27T$hVsAV@N\nIE;6i6r!~6Yg$$a?7wJYq;0X%u4d&qG<bkW1E3ymoh){6V6$DTcp}CRRrW=NVQ-911&fvy2(Mv86*=d\nFctzIOaJgA-*w8TI2EOvrnwSspHzt6|b;LpSCd4vLCcOhM<_dRelq#==5?9mX^eX!{g01oQ!)B~?;0R\nV~Wc!;mmvDi<*2`Jm7L%(L-fyf1EmrkIz{I?zwC0TfdZK=JwYjH$)2b0`_bc^*<rv_pQHetN+_FXass\nQE;9X!Sl&-O`M1uF)ucD2W1*q<MLfrwo?B|4(^6K482Nf8tYk`#$z8r{+p1xx@oWMnBiAErlIlxHh6<\nUKO^^ROAmT2ep@_I_<KOqq+|jfU=odIFWN`&ecj(0De(>{YSh3=g$<-Ho%`BjkVb#TTD^diTD5Iez%@\nzUwbMtk-;9*=y@IU-Sed^y#WziFUDG%pNrDW>GkxgW)cn{PfYo&%WHPlbiy|_H%!~V^Rg0np&AuGkJs\n~R&Pdgix?w9y2;RnV!uk*W)c&KBFy!R7X~n<rdTTtc@mm1TQ1@bkHN_sUr``%0s1)4=}MWkE9B)cL;8\n$S2#m5HG2a4`dgQ!7!p&KM>BhE2hR0lp<O;<X!jhMeHd9tZYm{;h1SbylEoSpPLfcIoWGxO=yuBWNhF\n#?t_a^<_@kxg9lhBc5WvZIJIA~f_YGV9Uyp78)^H&&_0GE%wu%t0JWrxu$Qh|y6>9UTI-MaUjit4n5u\nAqME1y-cU><`(-Ja5I*V{-KP`)4mFKmPpm*B_o?lm))G@6kaiwkcM_nuwh+9INoW_F$TrM2ysniJi4Z\n-DOS!uMg7DCCnI94GvzxSFQ3R0_fExIull>EG&{JGvS8l%H!3VG=^WdHx)OBb<#SA01(}bdDV^|#*u-\n$RUN6j*RGM9Z68D8fbHh}ws~pE2Y%Oy>F$f7LS5ZaMgB8-WOjP@?C|^d*_YI+DuV@a-SKvRIwO}#{o@\n<*bEqXc<Rrcj-SW&1Q}-Dd=M5<(8hnzw5}X)BV8qOkgVOldLPyFf6uE8mZe(snpT&)euIqD#q}mM&Ys\nbSeHvy#FZ`YO=tK3HNNUh*_ZZ^RCzRB1vcUGVm=oxcKC;-grX+s&GeXa9L)5C`E5_RS(*P5~B<UkkJ7\nN#r$9kv!I@Uw%fjq%+irxfEI8Jr2&GZWH?F2lU5tlgBneev-0yim?+jCHC8O4MolrIh*f$<~C_`iix|\nUV098YMf{dpl%M%;yXEO9nj^wWWqd2NVL#CWS6ZLf{1JntfwOvWrsfr<F+W;Y*VlOStR?m%-X21hi3>\nB*a{NK<hE1H7bHy#Th%$gFkkjrPTYZCSPvc_M@FhPh(-7HC?%#b5{6+4vh%h&q&|l0=8CBRm7X74;-V\nv2hrx&Ni90s|tGOPTQ)#BLpFjrJhR0qWGWG-)*`DRrbreXf7g%o*KUAfHbX`>wA6V5KN3~Dl^T(Abwt\nxrW;peA6A7sB0(O`D$x5q#H`iyV8h!h~J$!3?TAB+5V^i?h}$Y-9ii@T-c*r}7j{w_Nxh7`=F#P4zv6\ns2rOgSh#_gRFfBg7-fB-5;UB!Oie59J9JrKDvnMy>N{@)^(?DB?(z|U|DPx60GHzU?YhnaOjZB_!y=w\n?vP|vK*=bKSkQ$rnhu9or1-gcyIH>baQ?798>w?bQfKOV)Cj5FB{16+T1a%4xa4%z-35v_?JA#8mknp\nl(Kf>2-f{}#V?$*<+tk>IRL>Rblm@o8i7}Ee1WiQt(o@(8$}2^{2Ezm}Z?-#ud8N96c?+|pXR1^;Fuj\nJIuymnrP*g3k<PkVsW+H(#lG0lmqOe)r*2rCb2%kqs9rNKt#Z#@OTTCH2y4Y_4-V5fSm)PlBMPX?tBo\n51ZIf!7#GwbAklh$fy{XlY=tSSpe;p)Dlb%RZ)3rLp*V^SJ9asS(5)L?pd2meqd=KgDrNp*17VI|NsS\nlmvQ%+Q4Z-4gaT4j_zh6k%-lc@|IXJ0a;iW2r~{$=JjjT4H(^cgGw5RM@!{(j2_Mes`&{?%q3^WY);+\nGJNmo!MITQ>h?Bxl==XCw^4eX*acMFfv&E12y-6y;qAhvqej4Fcv1SicU|&hz*u+yymwsy0%juUfqK^\nkz~>;m`ubJUK{zFR(jK@??vz3(n&Y>QuJO4{#rSJSIiFe|Mg%orp7}zXYdcgh_p=zM8~Itxg~w^q<?=\ndEBJLdb;vTDs2&&xS;Wi|vaBe`E#sgFlO8icTN-3u~iVmmFC~;b|6#4q13q&|32^|~U#B^&?T(A0k!;\nF4h1mm0JUHu}zJe%brT4V~`NVplCX(tS0+pMphqmH>boLuIsSD2>Y<E?tzq}vc0@rZ|l=x%KomvQ#kW\ny@jzHs1v`7tIx+pUTK%=ZS96P&2CB|HKA=O_s=L@a(60BTIjd`0Lq1JH;wAELPCdVns3Z&<(ks)BWX0\nq6&~g0C||wkt~?*dRn@yN+vBHIpR-&xRp&yBg3_2{V{jM-AYqW7|poDI-`)9f?qNESm<^ku4#2ywU3?\n->?|b+#2d2yh_4jVj~Dq_v7jVN0e^I08lxEbZ~6z>J|O1?{yu`gR1LoO&+B^DzoC24?>zu#K7ik$@F%\n+BSx)ur=U#^9zKvSYq%(+_fj5WHoy{Tig&-dGDLYYrh^j%#zSdR1PyQr)+q^bT6ZsT_iNVsmE^|_INr\nTbJ#<W_;IPgn{ry3Fx_clDT?0KObffDx(72Xq<asjV46y7_8DC4GI>B8h8ss(6KOANM0%gW!(`T#=Qs\nJZ%fV`3MN=+c99B1U7z&NMBjfwOImv*)z!&1Jrur`mefi9f-H<8DeCL!>}uyV-FE7?RcH7`S~qC}f~Z\nrMzkkWiivIC{kVt^{6&Rl}-~;UzRQ18*z3{3)Il1vf<;(h9yVy8#!rmlZKM*W$<<isV`d4yNr|d+`}>\n&v5k{H<_cvadGF0KiL#b&spufL8Lvv;sYM*%>)D1Ao*7#WZ>w0=9|3Doz{E`DyDyw1GUHI0N%4qL#CT\nS|E@$gpuqZdK_bX*Gf<)5%epgaxZa{i(dPLO;ZSw_LYAEa-IN8RV$(Tpp9O&^MLlY;qjSaV9T(B51lz\nU-OkP*k{pM6Hm3z=-p;NVBnS67{r+!^4KPjQNz#0NRfo_iSUbW(Lv&Us?lGMliC*kMNQ7`#ErfY2U+C\nO2fC;r3nrQD1mZODU<AUSQ}R_<D-nKQ&t+1wYWolE)%tYdF0&oX(9$0PW*Ht!{t@Uf<jdPyKG14xymK\ncL}k^W8S+C`%PID+(WjYLw*D!R+NooU%{Oht2BDf9P2aK&9(48-sLD`J@Fn7%?c(U*~El4ryerIbU8h\neWvjB{a@lSaTQ$mx@%cCahxtIvjDD2$f-q56>|)uB@yj5Xvr+ccJrHNi5i;r+@#i%h#*ZRNNYsbIA2B\nIp-djIUhaF+Q^ti`mdnaj82R{PM*d}^Q%2RqM(Cj<XN$|7nu9)t|DQk)B7A1KqG5?C&(%Aah1Q(<2!H\n9Yk;gljHgG{6}ogF>e#pn7?BdF@Q&w;|#$AcIj@#NsXK0py=rVJ$%a_dyH{x(XWxHhxg2PV(#G84hvd\n;f_!2sfF8m`-gPP7w{PEJbX-C|9!wn5uW<=g}VbViV&8qDN&k;`?tEhgC^3s^I$OfVo-5&Y`;olYlpe\nHoCWm9rCvGDuH4gka;4d{YGPUS3`#p=G)%DEC(=SS>lM;Yg_}an&ZB^wCv+n<R5OJE$+XBg%L}ogCUy\n`F;hqXT0xZmsEntx`1V~fhEXW|Ru1A+ifX?@J?+YYX#}4>eg5Q#zP(hIAEE5-|CYf1-l>-Y7C=!^&$V\n&opj`&}F-`cKTt{2s&>O+A(dF2$SB}q@@5;sHR+g$Q+XW}(joG3CQ?+|sHO;mj1i~L8{vCcDhl%n^{#\nwCkjxnbwo*b(aQ_H8^eqL5G&HX~+uybr?QYKv?ol6C$N@0Q>eUBqN;6-&4S<fcJDEWOe2Kde`8t=tJ3\n>bFgOlNtQCd6Q)dgKgn)x*6YNQQca8IsB3X_S2&C~#P=9!OAjP4I>;r95+bWn;vi^YV3J99k^2zoS)M\n2qY`2DJS)$NQPuFS9@I>Vw^*F-d>h0=oTh&hSxsQGwFkbf-fkfd89C*T)?ZMXa}6s-K3FD-*W2yFd?G\nyfK!P$q;X-43NO}MYT!5k*D0kBBm89aVAhs&6ZVYFfO8`&?wJdbhA8Zmr=qUB@N}Gs)DJLi9q46lGJ2\nd=1W!s1MqsX?CIGxuuB`rZ#x$%+F&94B;|;hfD3?447HICc)MweiX(Qz&X_%Wq>*M1~e5Y)tN8N%a*}\nvr)7X#r)Z#~#~7A7TqN=HHq`lfOi4wF=alK;4bj7%|fHcw1-V|qN&-5=T8q+NT$iCc~zo(#JOX-+1c-\nYN|Agm9Ob36d?&IZ>hCTt1X+=%^{MO-EdN0P0Yc?T)0Hyh%_w*F2!fStmrqaH?L;Srd@QTXQNo{%<xL\niC%lCILhuYM|6-L(J|6JLAKC;gV}Ljb+C)p92JQ2nT_jJJT(y$=%<QzByCWi{bQ7IzNV^?+`x-^s(zK\n#bg`a^rA-s599?#KItQ45vf)5%$!_wI*Yj3R%?2%Wb254lwap{Wb%B?K)oh_0{{T9Md4R#qi&a5a9C+\nShtSErQHs?mch(SEi$;jrMYfp%MbjJ!SyyUPg@PZr9YKplk0bAMUYq|yr^L0U)%Z1?U>z2MHw8uweWq\nHC0;zVC|bkav@xUY3+_>6QL{Uc`pK9F=Z{b1gah3gLk^`t#KQPd+dP8K{yCVdj$KvL9DqZ%1=&BP6Lz\nA_9W&!oPD8WR_7f+%@*u+mXdfGUM2nQIp+^o*zDmk?nM%i}Y{^4I}6u1BuBh$}-4qvU~dz1E={$wEHX\n^<<Xy;HE&v*CWtjv_&(jy8G?3zd!!vS@z%o_3*5?$X}NjC~t1}4Lf}Cu3=wj;{9MNtU<niT||qE2JJZ\n8^Zc>|LbqZxxTvqlnpmQ&VH_m*dR4Dpp+Dr2(p@(obxbc{RcEYdr?wmBs8AAs&1G`1xp6$mp3}%lrgi\ny7u^&tJ7$K>uZE^Mx>SaEo%w`mT>OzYx0$dVnoc)6$2XaU;_8fd&2qyL$SJ)wt=eEots0zseLuz!=p^\nFBT#|9JdoKb{{io3n$;He6px$cy9M_mYkjfB&KyWX20y3CQ;;Tv7*8yUEwD~B1JANO1O8~|^xwoX2Vw\nla4@Tj7q>G%q%tTJnhfwG_(ozh8djoi!Jw4oVZ86wz_zA06h4J3i!Zbb>@8aNrNlUHfA9p6%EXpMmuH\nl;lM(^c9*syMA>Laq@%=uVDR<7r;u!0Pco7(4BYmM-<PQB7A-MNj9*{F-!?7?mRIDG4_F*2>VDx5jb7\n&zKs$(*qkJJwp^br%4zoa#dAJWG0%V?v2ycds$+fXh5{3|6OtfCvp}3szO(*|Jzhd5nv0K}UuuwI+<`\nq?)pbi~67U%!Nv;YZ(yaWcwKhlu<FO}#qHsOMODA<mx0w5Px=;T;k^`IcNR<SZGB-Tzpw+q)nrJnxzG\nqO$$0}8&GXlsH#TY<`t<@!R6*O2b;^?1>V@hG(Jg&%pN%`YYYrEKphd6p5mgElY;F(zG1xKV^G_?hpC\nKX<uAr7g*7{S4RXSo;c*X$n^pHd2M7d7!?z@eElRYEH=c?MGBN47vrYm8g6t!KmnpL6%a`A%%#_^;2N\nbCPb|fkW2;Z+4WJM$;n+vI8e-)+y;U@4)Zxdu7o2Ni<npCiFr!vQV&3OubRu=_u<6?hX?+CP~)@^IjV\nT(RUl;+VgEeXp)@WDFtr2l4s3(*U0sb|4{=yp{iO=iu-<Z(o6Io<(sV|u(FTj3K%7BE0r!K?EfgcpO{\n8nIqDRp1CYIu&QMkPNf)WqE_>qk5bG#L`UA-RbZ8^Zn`fPn<6A$S_1(vR2i83er$Pewcdrf>7{qfPPx\n(;0Unk-PprUp*GwI1Qn+4O75wfTY$o(@>^gDpZWaQ%oNCMHH)8w3xWyX|j?pPUY0bOjCI2kRxUHG-ly\n^$!2OR?YL!((091U#*yx6deMG3R|i!#QC8R;<!BwNbQziuI~+IT~n?#2(|-xCQ1a(Gk%GLSdj+g<(0)\n!TI}voKf;wnGN){y^^f(*icAE*Kxy<@cEd?nT|7$mwkm1F-deJrAZ8pEo=pt>iAPO2RZOqW=aHPl;Um\n8iu6-Eno~ZCNur|gqsU;}{)`o*pNa-Y@8*GouLa6FRcveHFvpYW;m1Dx`{;!Jd~$*trlW|I@P^|Z<`K\n&hTZ=}gzXcX>0o?<5!hJd!d`73y6ZosU<R(N1{igL3cV@veBwk@Fs8YEse<yy_n+0RtX$lO6C+Ui8Md\nVGQ-m4yfG=v|@ruCY~2ggSzcjyGwh&y5*ZwG~pl>N~a(JTrcu{|k4(nP^ut18YMJ=RC*H}();PW=2Z6\n8X?iwZpwivNiG1#>Gaw!zskE=6R9{RihEPc}B(?QzYZPr9r?Q(p9lNGO}AaV1T#rfu0H0vNC7~XpWB`\njssf{v0<8s!QX@p{$PEd;1vFr!y*4&S>=mVQcWXSSzeD5?WQ0mypavdo8}bLhGpUh?uj`#!v~SCcOnC\nxZLy8Ln{6i&PR@$0XH~fr-aiO3#CCAEk+kt15_{b0zc=qa;ca9yTU>LDVq?c~<9Oo0M$D7yzaXK0ix^\nE3H|IF^0|wHGS@m0hW?OoY!(fojuPF+5ju9|e{RZ{NN|(@YOvK_KYa;dyryt!CALFG1*<hO|-(T^pQ8\n2E>M%fHK)DVdonAPJ{MC0RwM<>?8>Y+@#8^5om;b*ppxlnNh$n5N%gi!ucDGa>0-GQ!3WeummX&`n@z\nRjCLs}ZQMgy?=wWr755Q4NLo5uiKv#sdrgO+?_jTL%-By87r{?+7A>wljY%T2UbY%44jaB_1X!?sddV\n({+ut!`B=EpwJVE<2}lbaMO=6x=tHqKk&tikVQ;Y!E{n7>=h?A&VDfhP{mfY*uABwu=t+N@bnP}q6RC\ni9)J4igkt*0@2=uxyC9~*U1dzii3_08(NKaKHmVMkmG8F{1y*I3(rg!WL^c;(fu3|v1~NgoDp=>}<V1\n!53=Y~Bbya&YCPGSSaJrPrp<&N1<^{f%G7YFp6`0rqqj>Aa=7;Lzk;73)3y0}Gx671{i9+)z%cx{LC>\nQuv6$ur|E@p<=wRBn}_bl-;mb+ojXF(o+4e)PkK1-Ix3K<FSO5;1)PJA<VmN)1yh({0#(Q*P2yLGl<b\nRx-=JPJ``gEtcnrU9w8Vu(dF05lUjZZK<tMY)0bIZRify?E$l1oPfA@{?fT?E^NEbErL_B2AdfGX=-)\n4Xk`}%%*l01iy8INP{!<@A&ux_n7JjKJbS79`?|{Lr7qI=yytg^-g;$+zl!@JVNRjrgcjiU(?}`^`o<\nEY0V$Du*<Ls_!iYq!)GR3?&FaeHP^(?7K?J(lnE}H+Z`a;8(<yG{yd}$v}631n(CD@HE@I3+vD(_A0;\nnqkkO<GG?z8@fggm_U5+5Ha|?H6!bE>Fd1e*05^Vx@_NApB7O+-NQ@GH;%1nHg#Aik{U#wd|@2^U-N0\nZu!MKW8ROwFhDc|`($E~)O8#Y!m%ltnw4lqbBxn%(kky;v2jl{@ez(r!5rX@H{D^+M?dNLy4^tk;sDy\nmSk;5eHXhwQ`$g)A)JhXZ7ojtC1-4RPP$6_{QL!Wu&lIAUKA%Ub^$?MRbCR!XbB@&Fbmlhn4GCImc1b\n3YvxMGA{n9e#*8!#<bWzaC_7~imop08yr@5gwRHkOiy$IA+jw>I`>;M80AeZd3t?Q6XX|;qKE{y3%Q~\nzLNg|tEy(3_0>I^^1Z!Y)5Fwbu2SVXU^zE3Dfy)yb&6H1ttOv4KG`m$mFRn$=*46lJv});dQ|u@PLkd\n)-aR3!pVxXp>-1#~!ahc{?d5g=fURYbBsXyn&x_IF~AH~RO5+48_OvK`i@OMII#mKsSitKIQjA0j<3e\nY^qT{y5tbJo|!?3$qV#MI^J7*a^}g_SMTmDl+S@5_fKmNupIM2{OxYG}?ntf2gVW<VD%4nN^}fIV+Y{\nOK_3N6XT8)2-T58XxW={)8@y!Ga9z$MQ{Caed6PiNCBj7YKwu;6=X-uW{I$$akv~hpNRO_Tq{785ws*\nFH<*Z?|^W>Mi25ln_#jlmXarGG)_cSL5-z@A<;6rH7}ZnWU;f4@g8l%iDQ6hyBUoAJY1a-XZuR`P^dF\nyNBI29&*SU}33ZAL!V9&IH-iQZIgaqWSWP$w$+S>B5CbIt<1as_qMv{HnIdBXToJHv(gOO0w2Rt7M=+\nmKbu5a<0^&frZwA=4;yz1aIhr@&ak;K$Y>k_gb8YGs6SV|yOjo)8Fj-S3(2?v>FptRy16>Y8bl4v$-y\nQwACrj{|mr!GXNee#0lp?^xkf(02j%>@K=Pm>+6CF+RpnEFm->o`>t_il^!b$di-2rqk-Tu#ALc{(G4\nnG-1ELd0EhXa>0s9yO1J5r!C!}A-mQ*x2?n*r!9#hi;2XD{{|4zG9A6q41DE=yF}f8;Z}(Q*13uY-~y\n6cVRh5KW9oK?~0(OW-+j4tWGpE8B}@i8~IN*>r3|GbnX{Cqm5Phpx%65zMD)$>wA-rmS4Hx1>ERs)6r\n(VLlxTMhgFr*m+du*m4A;7>bGdj+X-7OIKZvb#IRNIF0A7LoJ7pcDQ2d@SKZfLbedRHeB<K*@At;AEA\n6UMHz<kt>m207X?P|Drx_rvk?7!|4~xW;3+eWvcbRbv6R4j>=$I+XQC*-NZ!Z@NAcVU4Bn~8ED;$ku>\n8l8sTga^{jO}#X}v7*zIumTU?xxBa<i3Z#y4T5Sy3!iMZ8|TtZ%C>VOI3S4cv%hL560L4cu&{*zM)7<\ng6DL$zF^yR=SJvkd43wvXR#b1<YS;24vG5TbCG0hAJja<;qo3;ySnNx$U9i-@ZT6mQ5HXh$1ef^8^tQ\nLENos8yW|zaOe~ZQo`1?8y#REsd?!%N)3Ir0?RmKA$n&qPE<Pz*4S-moTx~ads~}8Zvo%RBG5PBb7PO\nK0+U$HdweTi^PT#;Vzxlpg4^7c6m|=RdMEtm_CH|w4j9f;_5N}E`;>9U`^WM-i<Gv5POne;`0fK258H\n(7X*s6sfe|uOdv0g(@`Z(G>|Hs#<lO{KH9UVoV^Q;ulrK}l<S3Rp|1kOTUF1qOVnUJ@&#DMlZzoRqQ|\nd&jyFz#$;wOIISp@y>J5#X)V#o51(x8R2gFI-<rX)i9@=jtQ*TP8D3BfKFBCVC7$b70tQQ0{bSE3*tj\nBeUId2@?Uc$giF1)rXBD;&nj`KaNqRm0m<1X?^hs_SfCTqzR@JmjxwW^NMdfP0y_ZkwW{#&=Nv=lIx|\n7s&k;*$e-l@F@l2V)<>H8batEWWDsv9evsGT1|>K=sv@l3cDtfU5;oy9&Vdzf|HQ9?`2Qw>NUA7l}*b\no5NQ0sF@uZ6Qd|}|qiR`Tq|50=VO)Jl+Z_R=b5yYeG=}nIL~U$Gi2<R+@d1`*Q&Oos6noF(GW#ft>`H\n0fyHp1ny}FeL9osC$kl3Pss1CvL9Xn_dLUCRAl;`Y(FDh`He!l-jf6kneXwz1(h7}y`Tg8(5ijw*YCW\njmihpF;zNOodnobr5o_~#d}F0Qry3mwMzHqaP|x}*z}@)90N)O5a7t%`X`kp-An_b!DT&rZHH8#0435\nnWB(2?XQVKC)3naN3k`YNixjlq&K2u?CYlRL7jVXmNFUDM8)WbcvB&l;;-|&~&EK&6wB?Y|T3>rZxG$\ndA%es;T<{vJUxXyjvAQ?{y#l+hbM-SPX%IvE<+vZ?CI$k&`9g3SP-IKI#{jg1^Jsg1J08Av3g))@QST\nb;{^dXKrl`$BbmvRY@@~MjLh(#XNo#ThZhUPSas;!CFpMBW-UOoBMFs?I`jTff4D0O%C^sEv&o`92RY\n<?Fh6jH4lmFsjJCi3D58J;exD;KKWOrK;krqvGsCzN1e~4SY!DBq6#{bU>WNeyh=RwN$RAjdnEG{;B*\noI)7-xJi?_bZIkeFTNCi7@NsY*72<{-4q4-5Ng+SQA1)O4n1y1l9gZw|8gqRxT#Y~&jahrT6e7bX!MM\n5;9fB7uoKFGzq)%%ODb4V*HYyHFd0-*n^PSXPQrUAukkv!e7?J6^#O!}2e1A9Y`iSYY8MIHDLDQS4IM\nmP8ju;);L@6G^Pv6qo2fH1&hPY>HMAWI}h!8Cq$(AkO=bXm3gU=1_IBb(UnTPOpNHF$!-$_*Ht$LoYa\nvyd*h---ZU<_}b1L7l|BTxr~}pUCtK#skTaNq^!%GaiBC-Cs{MC*|XCE#n9UnMKlO*ZGYU$j$ln+Sqd\n0j$tZ=na2Z=Jm%m{<uhwPsrEP?|zius&uluHQw?X7hz6;FnRmmjxWRy)Q-NZZSA>L9EfgH{_=-Dy;3H\nVP@QFW(ul>#1OlDy!qK$8$7EH#xnWmu`05M8O}HsKzV^WkjA$ASR0+b-oG#<G3Z|CSh;z}Kw5iy9$nC\n34R2c+GHOteEXpN!byZPi#*VO~|eWMZp+S7DcMnt=d}W?jJ5<Ld;(Q&3OZ@1Sc7r7Dq_84Zug+Ab41~\n4a$QMN>X2Bi~qlVid@M1kNkag=Qsq`xKEe7qk>!Mpeb%07I_PszK((1%l;;}80STs*i<I#z&L1;^G!*\n&xBEdZDH5_05W@sqM$fH;1aqzY#|V%U)sh$NQPcySM<K8cHL$1kD^lZEboW!TGUpDbWWsNb8~bjNBUq\nd$1;AYOMC`$qs5yychyv5ZY;os3PofaJP@sCxQ+M1(T3kq%kcQ*46yl-;uq_ZwI&uBHe|+5=Wj&4qqv\n}I<B_7P`Tt$SD;F&ik{b+x_W3&;0JiPm!%Upu_ciw*HSDJnDk$1~bStAzBc)Mif#xk1GExtg)EUKHjA\nP?-&qZ)BM0qXhGZDkWopvwmZx}t0{$=yp?lZNpD#5Wr=G61<z6ay74mBhC)wp<+{3aBL$rogqOdy(mq\nw*y0$Aw6ST27s673k*%56h*Z+5Et_x-<B5E-K;yCQ|_tw`YV{nu<XX)pYplkHcPtwdy~L;mEh?lqdBu\nsh+S$`_Y`7wlJp1{ZgHbZ971}^EYVUAsZdu36q)NN@xFbrR5Q1DWBn@nIoL!05UmcY4^B_*nxCGMwoR\n+!5RGgAJQc@Q>kX}%D7(5S5e;TD3L1&2LK;*k06SMT9LYjqLapQC8g1oHZa-GVrIC?tMqaQlr1JJjD-\nviftd4JMeD~d`PFDm%)kE^XO0Q=}5JD!`E^Nw{6~23i6X+iG)`Iu8O5`v00k?L<t>Nu%oqt{DtC@D|q\nzAs*g&zG8Zk+^pN4HKfaKV9Eb)pF|B{z01PB(>n(5iV0kzSwE7+uI{Koi>?z!TDl@nsZ>1MIlvJF2^B\nb~zwM>LP<&8E2BUB;T0h&|Kq@x}wM{g(7|z^767_B_-eI+^5#79FE^B=+1qN*9=EqF}<kDf36Gb>Avm\nKhZV3e!<R546ij<Xsq&^}<9yaIAlVz-BaPWr7}LkG7pwXl)~Sy!eKQO)R$q<rerpYAEUA@jCn@a{#=U\n@k<yF4e{I1pBuz79POACvwwU<i?{&k_D(G9`bq6Q|mo>P?|Y_x``#y}U`80n)1^nzt-*vxJvD1<BAb6\nC++OY+jzfEBnh{LB>Zl&ezik}!OYk7{OZEjBpib7R7NQ&XsR#<aKY-ou~?0#*1xQKU{OX&y+c;ekN_a\nU=`8=}uYbWk#3;asu5ZDq*4gO72+D9Nw8I3~Y<VLc+DiAX#(F_LG#W!-6wIQB-c9gU7o3C7kv}Z30vB\n(b$B+4hzF<z*%*AI&wj4(YurM|GXnD5D7BNhL1phW`)1EcJuU=TulwoOX$Rb#AYB%2)c?%87<t)dXBN\n~sg;gO`jQJJ^1;XsY3l*@rN!}{o<dPr8@w{7eZe?<dJ2_KPm`4ab)x6px#jO=&q#IL-qs+^0nTMtn{E\n@eE6P3>kp`4Q3Ou-`02Ig>FVeTr8U}DS*7Uh)SX~$65kQ?IvpJ|RC^>k3f#$kY>8hl|97;<57IHTPLJ\nSBu(-y6CHMy?na?;p*aG*&H0SS-thBI){4nq>fSM8V}k0KyjNN#Yarxc=wHFPJ;c*rx1#Q_hfqb+Rqb\nM}R%SdA;06-O^5?YVU(rf?;Ifq**GLO}BBpno|jFs1VtLLGgs&q~a@tCP)Mt;*I!R^&Tbho@xByeQ_a\nm>v^d>pr9KG8}bf61An(u7fy>-zDz1QFr0yjJTOk|C|keMFRR%2q>XDwbBeb;=corxh0aD$j0-&#4|8\nwIUnr$K-ao^KeEjvA?gh%9PhA``?j<5hx6V$O+csE?SEvN#uHAh+C5ppJ;xp9E8;GLsd9|J<4HTiM10\n@`KX8H{IKdB`;0I3d11I=_6a3%F2^!7TC*7K@=U%k3=Rv5l=YL3?vgf-7DSMwhjM)}38}q#RujOH={S\nOSx2L^_b;XjpoA>8}#&bpM8WLaEvh4go_GbYuXh1PErvKOz*dffnKzpCo1D9`il{7-(Bm*ktlTo4~=Y\n-!Dl``8pXeq3!%VoPvk(m=$Tc%A-)0Z%6VgnQUrb6j*O;u@jYrqn)sOGXX}JH6G-NTt;F+lWoUyP2j4\n6vatR62<p(V*dHlN7>*fM_0&Mg8*_%|NYb_&zldrlMdYpu`qg)e67jzEs-@pup1xPjSuWbxb;4;8wSV\n+cH;xP@!r`DHi!GIsAe^i3^KBwF4=P09DL?*hj%8Xrw$)&ib=AK==ApjYxU_6?$av6`3Gx^Uxh6&>zy\n!cmJ({c_(+%M09w8U@3A%a(iy<}rMN3zIeMbIb8f>bbB}`VAaY?x;5@nRn`U^Nn9yB*-)ynXCzl;Z0m\n+>6v5Aw+Hl5U_?$qU~p1`g~zj)g*bjxnG7=|X&4q-)%wCur78*v*4%h(rXthubd4=L@Q&@ue&CeE{+#\n-`Gebqudwb-G>njGyR|UC9$~Y<Gks(TT`~%g1&<2(Cap`^VPN3iIzGPZFoZK_{KYdgzbbth?WoAHVvJ\nO&O4`sn}fG+e)`f0UmN}F<DFoT9@2AsLig<ZLabCeNLI=y>(KC_gG0j-%L`fM6YyLR$fdQZLAqNvGeM\nzY*(26eZlqdCIK6FJO5eg%q7CSESKZSYogWTX#1J4QvN6u2<$X4)2q#(`6ry9UO756ffWnSFz;?4lj^\n;f&whCJ<S4tJefP`HKW3770H?Tq6&0QbrLW6sxo!u;8?J%41hpJfYRo79{8@*O@4F;NNF&Qjs1o4_K6\nI#ozi!0{EVKm?eifOnSpo;@v3otN)FW$Ij=#MVHnd(ev6o)_Nh7XvW~&BYhD(b*hHf^-NF0;69Dp#>7\nVMj!s$)<hewvJe>A4lZpSAj_cwMZb#iFMwg#!M(b-Ae2mi0p3{;Y0Wo@$Dj!SV=-2oi?xvLJ{4FkxBb\nQ9oyy)Jj4G!-OQI&Y$^_J1}q<Ng;j}F3Xc0<s#diM(_khyfs1RgZGl+-W+hrju0~V@x6--AmDNFe8uZ\nnf&#y@|DZe5Zb(t%L?1lijI!`X6@d|EKa(^AP7#!#16`q@XcQ|f&@<V7;YT7UlLdyu+7%cU-Uch-%4$\nC838`O=*maEz+G%=%)qMZEuKx>W1zusyjbP)M7jEyFC%iA~HZGwa?sTyy*$y9|jl68<?U#H8`YqRdk8\nKc5p`<qV817lrZ^81tDmIdrux|4Od+pP7&M?iG)_ts`)v+fy`+I|l@{jfFvKUw(BMm!&SHSsTGI291x\n|EIzZHjzF`^;|;1tV@Q4fe2)RPM(dn1DARtjLD*_8UqzI17kymt`A<$TW=~?tl5^m%c`JsHvi;seoph\n*rwD<X%h(92{f&7d=QL#!6_$PyA)i=Pfd;07nGXV&g*+ntKY6NeoN*0PI#;~%6mm+J40Env_UoL&uGF\ngfuYAC+!d3%krz7CfwF3l$G#^Ge*TN`_g@%+h`V9Z_{E-Ek%^hi|Cu*5VHl6QZaH-t`7>pqy0b32sQG\nYU{4Y8%h6x6y3uRQPcg30yw0T!l@z$z~ZOvyt0}U}YX6Co%R{6<Y8PP{OGNKIqJ)GVZ)7uC~(ByIU01\n0Ks&CNTZh8e(}NC=J`qx!eS<dPb?Jm40$2!EHyJ%rXffu(`PeuPs^_L~WefU?v*D%^88)=Q$;jwD6QM\n4QaS$M~1#9=i{JUat>_fBNvZ+uxrlefSH-c#mZK!xsHRw&*6h$DI87(~HMXzMnk(`3W}L>;2z7oWN{d\nEiv8>R>G*JunIN-Xz+@nz3?^r^rBqM<o1*lYiM9W;r{Znl9;=ry@o6tn(UMUnAk|%C#S5uqs!gj@)f1\n?J{{3*e1EwX0|X%F>$XoP`JTpwdxRa-o(ZtYNOAgIU7zC0z~AFvsq4o<!zU-?766C#>wF<b99Y^Gzy^\n*Q7jTxkHs~KUw7Dek_`IZ9050qF+k8bP>*qEEmVb@GAx(`gisFRb%LYdmWkrT8r$^1HScYIjVuO>aj#\n-<4YXc6BK-jrE1%k?P9&lMsdDzq?nn}bAoW^VhY|6BS-7Rss3IQWz;rQfqj3eZkgi#I53z^8H=Hvv<c\nvf%2d*XNy#BUh5)IH;Aq#PW0VNYRA_x8S{439QM@&1TW6&1mBuaALD(OAeN)`XGVKec!#Bmfucez>5D\nzUyA!hyF@;37stp>n1sg@uG$%>7q_Bl1R#_wlCW|HPNF^X@!-|PI+GCKxYf)IBinSy}j+E3W>SnEj>D\nPkCo)MiQ>(Y66|1v+&FgZgX})Sx^LB;<UWI2i9p>)(CQ_$L4Gb|D^k}37kOCLnYwGI&V^WQ4eg<Whjw\n2?g2>zkix^UZEb<<zUpM4q!X`dai-;q;v7nO+9c$W*%{OF%zI57mh~ovP4&@vpkH&kX=iN)Nt%haYf5\nbei)PSb)>b#hV9nz9^olFX28UJwSI{#Kz$7M5Nia7`_rX|yH(MtR?dXJN7K-_`9{z!8)Twj};yaiixi\nzNwuqUd<0m|x1b7EuSzUfgMBL{i*IM`zzYpsr0Tz^j8Pd60@o47OA}H_6)&M*MRtmMDygBmAItlt02R\nis8Qw{TOgQ=NKktZ~@`MIpPCFKOCmhPXd%+5EQv>y<Bt{Wks>lWE-F{qK#JO>>JGCg&j&<=D55M=^@)\nZQ&nLUzY$v7J;rag@!x;E4B{bhij&@j80d^#Xa5*^K(~l6f6(6Xp#QHDk8WK|OZD~a^!a;#MDmX!bng\n!X-Zlp}ajbjkTxmUB#xoOez2+{{M&&F4s^?W<vXUM<VM;{{B~BtZIL@So7zi>=>u)E?Ft11sqF~Pkn$\n2oo6*fK3z`Vo<@*TrLVqqX$3DPK|8Iu9P%+%i{5VonAFPB&oFQ3EJl_ET`cS%U+2_A2i@|?->+a*31>\n@n54Q_|fQnZ148rh!wwu|%pZo2B`6yGw@V*I^uS&d$t3V_f><(s6msP(rRSKNs~ctVU5fv6PL}*&HW8\nQU0X#$?UTS1Y+c2%of9o@KoPQVCTIbk<|v)AJe%MUK<L5(VSP(bajFY)(Jl-duQ8{RWDruu|0~4kZ1Q\n{Vku$<q&&aCq6G9oYVjTfY#M$rSGB*uQM7xSsB*DD>euxemfV=6fG7v@Jc>rew)|*ud|M)!*zGN=`yL\n5x&>2lviN_T>iQMg@4r<%oPXQXvuA=DM>*D85m~1`)LYwK>64}?QZFMpaU=GgF|A4lF5yWqY(mluciL\nvd~_Wfzm&P@KpWJ10>&$Dc+OAu1=>nMbf9){UsSdG4qc#l7bIsjWO<sU+c_n_sE1k~45e>d^umIQ)-*\n=>dAJ(F_h8k@cuiQ)xSL@3;0sOW1UA^WMUgk}hbhi2?N6!I~8-R_ci5e}?HKBd&C$Z%>_3?ZoOi+Ay{\n@u3p3U`G$UZl1(c+C-R70+l>~2<RlutKT0S3znW__eqM4$u3qO4%78jw|8n_sVAL5cT)SVHhENfUJeq\nY3r;j%nzl1@VK-BfysvrPhWuBUws5=C2f^wH*KU1U!rK})tnO*a^Q%K^QkdXOw`3JeF{9e+Fis@csdB\nf4o>%OXi2h3GPb)SK6)FN3zAqR%8RF47djMxHdn>XaXu(khdpki|(Nk-|Yyq*d`F;|hyz7E^6kK@dKu\nwAH@ol0hC!k36r>Bx}jP#u<(a4jU92!>=O9!>7xRM<%iM)c3SF3!J)REi1U66|;d4k5>WOv%L0&~4{z\n#u5h8u_DrU_>9C==6o0mldGx+ep?&kMQfNh`jfX*qOGa3~ByL3on;c@P5$h(^DE1uHRL`+Nt|YIPW_z\nf?ybQ&ES@fon2S%z5#&V$2njRR;%Opn!{?9nG4-VI0v937dh}nnCN;#L5e`agsQ1kkcs1k&_Sr4SCT%\nfk&KT)4IJ@BeTC}vk$QXo<wd?M$Z41~>=xd-;mjE_c_mM`U<NDlDkLhx=iCqOuGF;O1()+`!+2mf>#4\noEI>nM>g?r?vJYB432!#4Yz5(Rdjj~&VP61a{mY>zH3;KP9&LVjeyIb2uW5(5X(PW&gV+VomJrbXd3C\n($f^L~)=&X;;&HR>6utD@4#%HgwgTX=UsuUT77PQ<oq*RiiW#1f$C5jvgzt-ynB@aY#1hokK8<*dCJe\nE#XfAlt~B1D=^<E-eMI*F0ea&98!%1o>Grcr)ZoMaJ)*ys?`kIIsTiP#>k?HyK@3@&`5v{@JDeo3Wd<\np#kCQGu;a6>vPQgc%M1{1aqKj`s!g*7K@p=A+SPQlw2#FjPEwB%&mFw{zoKmQ^ni_LP5F4P|l@pKD%=\n=ZO;()KPJ`L+p?Olgnhac=(F0Q%CJx(mciSzq)At|6&!r|V#1eBf!~dK=XRocm}GKs0#q4P$^(5KWgm\nyRc*$!O%SpfqP1nf0DUm+=@5n6V$(R~NHLceawE_y@F5%N&cV(#ADhx*gVoz3FmTkHRI-*5*$h~2Av+\n!b4xAsOM<}d52Vte3J*9Vvy7MYLB%@SCmVMdO4Wn;Kd#|mPHm#Z3)6YWu!>lV4A68KsiZJ*~;9S*&-b\n-8HE3iYXNudilO$J-&+*VsvrV_D<b7^n$x9Gc0ZjckFq3gVms7&ZXtaHeIywR!Is4I6rTZIESXHx)Y5\nk5ENZ9O9jR(*m2mif#y?N(X9B9>09~?3bg-PtSgP_RHj#XD@!4{P_6aCO<s;>90qBi;#V5X?4xEtypq\nH+y;36;lqvrNK}t1>5Zyiy6)+xo!e6vQVy7AkJ1m{c9^f`B><?0yCOj@(DhV83gL3Ds}&~Z3bt?3&G_\nw|Isd2nWQOab1^BrUugwAgV?S%mG8nq&K|m83wQFQqMm`0^m{oY7bdm@P475U9BMNVY_rshV2`DoA5_\njx)jzV;p*~EyB1kXtmP6dY9*V}iBKV1eW{XIU|TJr>$-###`E{CIpJ)ud0K^Xn#Goz^_Eat@E3XwUj_\n<7wPWY^U0jX70svyDPqe%`hB$OE3)0-Hbzrn79?hLdvc?^832921NZWnR_47u6)X_T=rHfM$t7;$=V+\n_AO0Flyw@*`|j8T=1O{UKoO`=;j~(-bkvkQD=HJ@tbTPhLDPcUiuptDEQPH8M6#8`DjZm$fkYEu$*7~\nGDA~e%#|Tm*Q_5!K0_3p|DaMqq%+$dOP?Q@ewWzZUboKcy5w@_U<0EMP=)|MGPm5_ShQqka(F(j##*-\nuF@yL_kUUZ`{&kjmjMPnEF0V$nG>r#4q{#nvme0QJ!6w3LM(UDV84tkTLUL*!l1dAHkyqO(%q?f?YHz\n}O;DK2966gDuKpwEg0-oDdH6vvaJ6SD&JBPPeG7!<;E02sg9-{@8n>X0YvrmZiF)sOf-VO}<4yVdZyv\nv2L3Bn-sFjofu|jA1SG=-V8rLJ)@~+4q4hpR$sB`(aqjeTPw?LC1hEc)P}8d#`LlY~Ai^f5;R(!_1{3\nXPlmTO`uMX1-HyZL@a%ofRFB~zOvw0hic>jj3kM{9_<9mJ`iI=ZqrR~(YVt>Weu=9(DMWw#cUw;rrA`\nec`koP{UCrhdJhE<X8od`1)6eq-)Q12x}6^cIhoQdVGC5wP%yU+m@~kgQ5Xonnw6MNu|ZY^WqlcY@lS\nZEOfZmSHqeb3AN*<o@q9z#%3ih<f=&4nqNz10fJrek_B!I7g<JYU<$~_04tO1VhwcQY?v@To$v?hJ{t\n3UOM_lkfp+f;P0WCJxS;dO)lp(%GqmCt8gPHBBdZdmm;m>CUMnQq@Q6tSr%kHPAdM{D|)K_d{$K57b;\nkQ}iMf7Z#VmL&`{g@!9xIMGnL;z&fLt$Veb!L@YB6!vp`#S{BBHq$;6pvq&^5#`QIqmatM<0P{xQ=LQ\n&u#SHf#OW#tLC1!6QQv8J5fH^Do`VMlBnb3GF0&&q-q4nhIN8R$-W^&NnIj^qF3T3rK_~l8!Aui%5-Q\nTYLIGH<xHstMUF8qoUmb@BqfZ=cabU|n7{9OAX3%qYIb-V!>#OrO*^b6n0#ln7L)Hhrun(h5hEG%!IP\nO7zB48jb{MXJ&r?M=?kVnoxTk2H$o-Lky33|+gP}OYm2e*DAvow@Homcw{%(yMzZ9u43>2;bwZWruxm\n=VI{8`%RU<$Mvpq$wS0eWou-nhxPtO*$?P*l}ATn__}t~oD?#j>Fo!>EcpTc0;ZM%rZcbh=)#enLaQ?\nu&|2=~XfB4l6;NQzMt+F|wm(h!R^pNtv^23ghfu(gnSvtt!Y^Q;5bDX|$P_fH2b;!C{=ch_r=g^Aed(\n0nV>#Bq~AdYD>$%{9*@M-mW%*e-FFF*ba*_z$ptzO_UA%0J9@^eG%aFz3k<ya><H!JMgB&)j*d^bByD\nC2U-KLcF_mmHw6?8ZOh4;0HN|cQCvM2Fc=L{0w~s*+Is4%PIE^{$0zFb5I6C&)Uu3o-th@75OBN~09K\n$k!w8;8v1UD)754<@)s!5&rz-X!N!1a3wZgSA0x&hVQcBS#*b4y|Fs|^T&WU_FDB-=#b~0fu?_xTkwj\nl@+<N}P{0okR@&#SsYh70<!M*3^yB{eq@gOVcD-?$0`jFFjrOHQV+%)OL2`FNKYgb~d14wxKKJZUZ;!\n8B9d-4bfXh41v&Bhl*lfG?_SxbjG;k#5k|H41oJ*Av_XDJ_Rgob`R|%z2HbFSMY*?-s&$=az+a>cWaF\nmg;%Dqzwz5mWdvjpqRX+Yt}nAe{qUHloy$U9^q>hiwBR9ic}3G21`_Xb7@+ry(=N~)hH-{J|3QEDg>0\n?j2eaUXkcS+g6=~Hrmq%oJT30Kyb+DqbZPE921?QVnc$tCqV3m!5uc3*cpFJAr&0I1MCHk0T|}ME-SZ\ncwX&TN&c}_8;xd#U7e7z!}Y`rx0Uei}@$S)I@n?^)8ggc+lS;;O!n44$|23N|PIV;ly_-Dp}%XwKeL?\nCcaG0AE5Sxea~^4CU@5{N~1K6aIc6t)CJPPWs?Z{8_D#P2how^p{bdyuUZjn1=P1t+0OQAjrirhAq=Q\ny36DX?S{1PsvwW-Zp_eY0myXKYX;K9B1uVJX%4v4c-%33ZfqVn~(jU_x+y+6RfWM=Ow2i@ig^+XPiGl\nP5V=a0P@&}=#a?X*Si88OmXZuBID`G$GMXqg}Yp`C!sY71hBLMeQBsaq8_9T?&m$eDwneUb$L`H;aP4\nr%Ar}OxQJN@C}Y0Hh1}et&7J)bn!<Py_E~1L)*zFkkpKHJe}(qHOdMg!szPf~j0*FtK<0K<SN%4qzd|\nIgDDK)ENGztr#9-LiUmr!AbK^jsngulh-h^}@mno)ZK^Fv!vH*b$rR6Z@r8OnO6>837baT9<eoW3EJ9\n<0GWerViT`!ubfbokh?8VNHB%vXa$Cj1s6Q3{8!;xJh#^UW5m;J^zI=))v%VwY}$JgbN=cKZs+V1=Xr\nHKXYvJSwHWvcPZ049567wXV_8L4$XR7?I*$^%E*_9jHmJ!`r~gW2L=C}u4RM0(^&2(W`nBto2Ui?xe%\n663MwcOjjpm(U2>vqp=gH#HUI5gyRwdxyfo)`g%E#nGX;0j66wgP}x30^Z7=^c|)X-R?PC<}T$r>2Q>\n(7w|2j{gB6rN*1nX-e)mBF#3zC-^>19a314kf!4AhUCzomk*QX(NeTPG1Sm-XwT6`t<;ei=bgh_tmDA\nQ;kmC<?JsdbF>2al<=#zsSDFV>3)Sa`FegPAPq##8j@Y78vJSb@_NgHAAMmq5GhtLK5gb3<&G3sD?W|\nGK;CpCVvI2^o>yL2!6dBw)BS0$$R=IB>~LzhKP=6s%#L)>x_keEL76~<W+E9%KzQjdQ?g1aI?OgeUBG\n|ZW>69*En={qwnQ_=jBf!GcV%k6xHXK7|Wh!gl4)!n;c!XJVKZYFkE?&NyOAnr8rQYV=F)ZW`oqET8Y\nCAN|dzpAST6jsFYy;kmZ(sGx4BPz&@ZvPoASRlHFspyb$Fu&a2(Ov8{G5oWdW2;@(6-LWkqM@kdznr1\nPxxHw>NPwAjO9LS6-0-n>qC9}d4-ooQ4hOXavf+E?JbP85T4`=fnxI)cea}&$Z-cRw)gF4yBtijtkV~\n?#y$>V3kFZ-2b||i)0dJH7%k^qmqj?B*8uNCd`Uys8A}H!8O-;?3Gr9}8DqK1a%s<KHM+8M1eb4Hm0r\n?7*{v<-7qixx)B}=T#g1fLWAjSB6yeDGxZLxDi(+#AW6NO2CnB~=jC>BL^IH82FE8kJ}3Gugpf2`@kn\nQ$>etb=2&!dy1lfD&9{mQ%b!0*GO99n8y#6JM1eLUI^sBRHeJKX1g`85_GS8!|=ih~~=^QACdTX};Jd\nP09VZoITHO7NKE5nUJIg!%RI*WzToE>J4#wVJT+C^}E~Y!OlI!PvL@)#BI5vc@V2aGOwvIQHehtCT5a\nD3`}0<D2e0ia5}b6MMoSPMxDd#c**F*sk6cnnAuiws+Pkzh(xu%oV2ee;@XMvCN2j$22Buu#<iH53^l\nTW5BTfs;ZVdgoUN~UI)KP{#X93A;5iYWK=%~URPmFHE;_{#+Nk-ed}Gr3;V}fXj8&ky0YjF6Ma&+WmH\n#TS@UB6aO4z7Zg}Y}?^c3fFGOZU2#1<q|fHJGN`wS5lz?N0`a8-~^T9eO_QD)iNy{4cC@#>q!>f{Mcw\n3!eRr!Y0)Dk#p((^OC=uOSnhL`o(LZj;wL&;UP(My5OMYr$jN`M2rqt=&&=g%0fi;`(9G%Z{>|W&qP+\ngOebTo1R~Z;;!Ph?KuTSw$1P#b|JD>S<m&kcMI{y=quO#%e>n3EzW<<Ln2W9d2!Xh$*#FCTOvi_XWrx\n3El8&S(ixHE+D!ubGB{@No{loC!`kg|NdGTCod1WNV;>HK?89O3;V|%~<ZVf}J3HP#?KbjOcdS$6!0M\n533Mrr;fFw<X9>Z+OBQzaduIjdi4KT?Y6MUO)@X#Ymz-!~M`HC~5<N1gIZRz*m(NGST2iX&H-SmyM4w\n$ko7UuBrwTTT&_dduF;&14eC(thQ%^6aG{z^=}CG$LN*mY&+ks}}o7`8nyw&ASS0USg*cvck4tf=bs`\nNbZiOxm{1^&pN_%jW3N4xCx$@*blP;b{fSTNc%nuNZx`%sn(SK)JoXEH3IRqz|wIUe~Y8i0XAqU}TAx\nn~|zZVft@tkoMY~*KItXoG<D#sE3h120e3812Q9=T0L&0mkf$P1GFy~QE*2I*hM|HQ2C`gIPYZ=$^h+\nwdhjYcE2cRa2QeHI<KEt%OW5qQ_4)Zm;y#d~LxEH-tL)txbXY)_jhQ<Wn*^=i?7J6&{r*#_VP0ZxkfV\nQp@$9$9za0Gvdyjs+M8kD0*^Ml9PisUZlH`rqhxRmf5obw;!*DR({wwD?GX9&PA)TzLNuwe?bnz}ZM4\nrSZjKbDoQ$d_j6U)*DvfTGxk)47>RUFcB8_y3_VEvtDITI%{U1_Zf#6?mcCeGtzey$i&-%~q<Z^?tK8\nJUoG93cLXR>kLRxgrrPKRTAl-@>*=e2ZSO%K_@^ERif%jp2V#36KpI#hY?kpRe-e1)<;!d0#J!Phi%V\n=>6bml>JaP?eR-=BpuSS;Io$<i6-a%K+^^aevv3Dk1a;)L}9Jf9(<f+06X|UT|)NvEZ|)3sVmN08@Q2\n;w9CYTyY<xUPWWvB6qxy9T3D`tCK{EehdZ5n7LKWJLywT9F7GToejvc3twY;B7aUAlFU7=#1Krv-X^S\nlqMoPkN;*v}SwXI>#?3?B|Fh^;F4aHij)&#pD%t@wQ=vu5a%c`P-su;fQ7G88W4w(sy^+fMxx93~tX?\nsZCkge<=dEw#$l<9AU6@K~>+R%?a+3#k=)2JP-viZ<zC+gh6C?p*2b^E8)jq}X7`?%eh+pQCs5FZE|O\n<4LsT)}<QK%W*fOMH<BQ>RdR_Yg>lk$>E(t(lO+{cUj)r|;uUiZ7-2mbs5k&BK(C>-bCW3{+zXu0*$;\ncN`kf&97L4Plaojga+=!aYx~<M_@XmU2qmk{+QHY@cgsBWiR}5@kRPv^ff2%@jUx*n!WRB7U#!Eo;8V\nGNSDN9H_BJ8!Pa93-6dXQlTz{wW2_2WnsD)9JPAS;qz=B0lmhp%)AlsGq)5wjncT93K=-t#FR*8rG=|\nd9x%*dklS=_R26V=Ja;Fpv<doy)Vq{BrP_)yy^Ejh#h|Z)5H91u9c4B5WwYiSpbcN`Ym2nV+s=3PBPe\nc_eRcNsV6<#rF#$Si)m-x~Blue1Ev$yr=&U^@dd|qUGc>VXsso<wWBW6b3z2}gS@5JZe=f8wu**379d\nwxgm20wS_aPafTb2<2V2Tlh+@iuG2?UgbTy0ZX*pSuYW_^~v~-y)iB!!8-5lD0`N-`s`n#FL@pIC}h7\nq=CLw1uHY)acUl;k<w}G-OIj}tV5>qPpAXoBr-WgU33A&oD$`e@g9Z?wuwTa>{+=e+YMVmVN@A=iFN8\nAp0c9FMz%mGbm@jqi#N+fIW5_Axsk-Y9Jh=zmOmVcn;jIm$QSbmSM}-@m%wNMUm&obsY{P2&UijUM|{\nqzH$fk5JcTjL3xIxrzh{~2Sz{}ILY0;I85_?fYHYis{X|ek&E{b|!y&JHnZGI~)n#jwFfp^yj6{=c<N\nG#;9#V454`e1e_I)){qPe>yQh~Kmby!(nD4pL8w!oZ&M?i@iRmYjxb)^whyUOc<iyKj0PTD2jg9t8Cy\nnNES=`l+Plbz|5ofPxM%-13R83yfRl0!EY9A(+OFs7<u0rguktQ3oX!f`cdsM^7gb&8kuYm3HzQB^V5\n5N7xSQYskK7>7t3r63p2{h&Ll5v^;Bknt;%m(-g{GgQ^<j`5j1X;gv95VH9f<yna)p>EwK76A=Hxnf*\nRA_phya43_eXb0DQ7d5(1q?m69_`5d;{Tt8!eBw5hiqxg$58u@X-!rliWf)~uXt-oVKDC2k$*8nf4zc\n}=qk;0<<Y~qwn8(r}k)r8${!PJd$#pvSNq<V2lqjS01;A_Nj!IJ{I@Pfk(qy2wp%LM_^2y87;D)1zLb\ns9hBASv&%h3x~vxh~i#MBw|teWGfj(_`2Oq45AYyk@U_UETRA7F$y^y9|My76z1fB5woCC}hv21zj=Y\n>H?u^509C%>pBI=4~Qve6qXPm6O5#E_{!vf9;3bF}xvSY>?U!KRDmKn<=bGS|=+r@0Ux>PSl`bR$SGN\n^iW={-Eeo_`>C!T7)i!ahfGc&*XGTRX~5<^Q4uiTY83|rX;%=}{ibh1$a<r~P_p}S@!sFPOV>!j#{a0\nx5L}q0${vtDFOWnO#UP9^A8Ip5q)f7B<1yf5b;5@;F1^=}L<S`}L7|o=%0A+y`VMEOVYUtv<dS7XeH*\n%!ZpJrmM&-orA(GIxAI6XhKelgPwaB;09AC*s?vl{UtLV-}8FSnZ=dtz<z2DN?d)azP#!7Sotl?;*&D\nMZ?Rag;Gg6-I-8|1!VcckSx;`8rSvB4~K3nnQB8Iuc&E)%Hi*~Uj~BOSg;giTR^UB|FJg+ALHE7r?C!\nj?Pe7WPTRxNb(JQv_7CJ=SWAAlQhw$>m2pf3VZw?@5}ij>01a;FzLwu1ySjjjsFVaR*X~kx5`DvqgAq\n(gtkX-DbCTTz4LOJ<8OKbYCDz&oOY>GaD=%CCKe9v0wh}sVL_?4#k9mBJKq}lW6F2ttZ*WN7&&knD>n\n4HoJxaVx>~RA(*85k^XGAZM)}B$Qb0`3E(9r)*%s|qv0+$pX~2%7p?A5kZ|OEypdn#=;u_dP&}WZmKz\ngtb?XTk5~cCVR9DagXhFSrly(w#b$`q$))_@?utDJ)%1uVJz=T_|Dd%p1my;5s$2qQgHVAH00JVbS4u\no5F1w`dNGJ@OtcS~sYTalq~3j~OHyV)WQd26Zd8_|Q4Ns0_6qS!tk3_$>fyByZ`j0(MClR4cznKD$86\nh;mo1Y#YW|Ly^4=0?CO>xAx#Y+tVGNl^iDE1CgIA+FOR+-;NXjE$1&!bn>B2H+xA+EJ2sX-C^b+c^hl\n;Mg}lDva~lDEm0+H7Y3^XGT?kS4gh8+fp~Oi2Uqwxu`cqF>w7zWn8zhq{BBR`m}w)$>16t*08O^woR+\nuI-kBN0t<TF#}~*fm$UxKP`3q}zG&8q)+QdJNPCnoqFv=#sIjqU{|GJmi3mAuKsjwqEXQRdq6W)W7}|\n*#>MR>zoBACR9x`|=o$WkPNzr7eCfVT~=4J^b(nQ8mywu|t&&O_GJciS2L0$=M`MS{aX~NUw8~{6~?7\n-9q;{dv4z7@WCb38DUj3I|$6X9Ib<=*h5(~e7qxWy|_QV}Es5bHxs-X-Yh@`U1~!FRO*4LRl$1CGb5d\nNtc-)~o__O|~8Fy=xX9y?Ayc<C_q2zPeeo+}EtSyBT*J>=c#HW@i-junH-smW%`Ujc<#fl&0UQ`TH&}\n7vgffq=XETv&4At_IbJb?#3Z*+r)ZDoAgu5gWULdqj?j+oRi_{zur0=)e^hOS8S=InGX&6c0gd1)0wL\n5;*GlM@Vo={xm>mzirGENFx6I~{1Ai>Gut0!J%tA(eYmZaj2G6muXgjJ7x9RC%W(#cQaQ$vuA$-*5zS\n%an~mx5&O7yO(fkGU8o%Dw@ej!TFN@qM?2Xb4J}W8iqX~R3<6*r5;?^xbEj^RSfs@j(1-IhbNIE~O+Y\n8^#Jv!1dqeku6jDEO|+fZeU!R7OouCxwA>>kO*&|&YB@&0GMgx>D9=!5uCkwG5$Z~Yx-Z(4XYjDE(J;\nZ*jX!ZBn}?TwmE5~{0@gIiYEB_7voS6-O^){j)I8N>W+3TXN58e>-(uS5P7aF9@N%rDd}s>DpE#{(?!\n_}eF}8m#Jn<_Fog4<CK1S)6ZO=x!C@Rl<lH4<Xt-XWR#4<rV}B4c<y#XS2&C<Se3P@diU{U{bsK>VY5\n4?-DQqglhpsZmRQqT8y)A3+P*+Zr>k`RIqA**OX`4?5*D3b+T4iE90|zR*+E_20GVJ*yYfq$}o{rEbJ\nyZFWGYkL-m-ge<bXyiAK(KDJ-hQ8IyTK=2mH&B;IN`4w6{CL5PEut$2Ex#u#W25W}=)qpAl(b;M%(kQ\nFM_Hphq!qilGx#41Ghzph1nUq`X8p}#<bnNXITr*wTr2`nkbxXa&RVZdW_aKeGEigTc?oS%NoavMGtd\nP%|YcmZIai({0QaBLiUp6my_Jcx9r8fL0qabQ>=TMuZ(dB7Hq35J|KC)9-|=4(tiS_1LKOEsJ)$$&x&\n5(bN<ANR7yl!CQhuiB#7jAUdI?Ur;n)B5rf5Ta>ki}K9Ox)+I=abRq!4tV3eE=`Qc@cr2a*muli-Tk^\n@FC%M9BhgpM9c^NRamiJ4{u<bKa^{iE@e!`*6P{d67bjx;(TkxN(ip!%Qr^{eU~du^;LGukea*u!Vwh\nxPoqm(`Otqfe5W_mwlxqf#32UECae^mW83KDfP6!uec{dS4DP}cC=Mqc3k-4Uh%kPvzPICpMP<dKTTf\ncEHhul#zg8O%MZL`lGoebl^=O%T>Y5+yiRQ3eU(M6rNTgv`EK>p_#wrL9DvvYE!Q`~D0AN5e2@8vxf-\n$9n|o%L9*5AG3OF7rzn7>#+*!zWPo8fueX2hi-SN1C6TVbb_Lfh{mXwsjAOxpV#BxxO9xXxFMZdaj$~\nG`3g9v5S$unUJ09Qp9_#Dk%rjDwF8i!)43CxN6YgWMVvEHS5$HNfG(&pzm;9bE`-=@9Rj>_A)}Kl>|b\ng+YO9ts&6-ZqfyZoBa2LQ@2BF5Y)>h0s03Kk=7JAD8lgc2?dO*B&=*Jm_t=8UkFr4rfhbm~hIEsHd6<\n?Y1nG*5t86ThZ94gVW05BioH-sph`303?vX-MnPsvD!{DOev#!d2t_!i=V8hr29Y((wD;HPYL_fp3$_\nrEonI?>>-;&I*r$DdZR3?*YoCvbe!6jN+NI+K;xxV3S)p@*P;F3z)X~DDE`tovPBjGXMOJmxoyxT7C*\nVyWpH8%VTTje?0*qRpm{6v(BURgYL2&v9ClX5n|i|7d|mbnJG9RnGN)dL|t<nn_)0_YFj^LrWU#u_y*\nUNzP9r;pyMnlucxhZN`Zd%xfssjQUw3}xeefsc^=?2VSGG4m3{GY9(OAH{@2DlxfVSHkCWUAyLfZ3-k\nlnf!B|FXU41kcx&nr~bH4*V%X%kh~#~dgB%9w@W<h2T*5t{9yki)nIpHQh<^~kr67EQkX8|Ljx2tVHV\n*t?64{Fr^Bot9sd1z4AQJIYXQ&#A)Hl@cag~rFO%@Y&Oee)GpL4a5r$RBfwyjvSM}&!00u*Ruzd!wfT\n(|IBtoL3-gUHA$l^FVTh<Rg{e1t=5B-_NDaGV$vR>X&r0$2FA}vTM=2D?<@q9?%HBuqlst(4TEWWcb<\nJ{;n-CX!bm`qHUDve>h0Md(hKAU=-U7=vJsB1cx<`~suTg}sJHL@E;?euffBwl+{f0I%x;wRv;%zYy*\n!)O>HB4#)j3`~=RdH*`V>YMR(wBg|(j{wis(_$;=2#SNTJx*D;M<^ZG!%vOW7`z3+&;$l0>&pg>f)V>\nU@+##!GxDZmFTO(lVlN~ZWcTk#DGITv>>483=)~Qs#z_k7>Mh|?*%8g<Nk>LRM5o7#GH;H^zMkQF5B=\n~6_HpP(K&~^W>BW0#I4eSD+tsRQmUT5F+Ts<aP#W}8;_^?GY&zB)t~-g0wlt$mI4;;bo?rfcCN9%^BB\nH8DQ#7Dt0h+_3sJb@`D*K9O8}1eIXM$DhbTO-f&6U4Pq*-9&%AE8DO50a9PH}>6oJ!=!OWxutJH@)E#\nG<hl&hwpl6iB<&5JuJbdG)erL7>D4ZzvDJxBo!%DEOi_TzKDp2kF%|B8BXv40`qz2q0nOY-7r9L(Spf\nXfzBi=84uj;HZsn(aqH4R_1$pnoFw=qfvt}K)F;94+D*=YSOZw8T-bY7%1#5ZeS^2Cu~%y(x?nykjf&\ntwH=$BT--a+shYsWq<VAgvgwA)_N!AKB^YwkVY0zD3PFun7~6V5nlrklaWmj;dSc7PoSDhsYK>|W*Z6\n~sjTOk_-E?zcj1Gp%bqBa>Jnj}H%v8P@2N3*r?dfW&mzS_nO2BFu4oYX|mC4g-{Ph*S$z0oXn`2ZHs6\n5~Oe~Z!Z-$j$r=VYoBVo&dQUZVcLjk14_EB~8SgLFY1rgVz<>0qHb%M|0zD7znQgwQQ8PVU5P_->h<e\nCp48DqOZ;Kg+pH-6JNJzNLz&elv&de*5$z3{9Zl(blyUjhlghNgDfVS9M!7h(?^|B9*J8#I<k$?qY|X\n@IUQ<BQxds>>nn)F?F5)RLMk_x|ac=ZTVuiRF+3@;?;bC74BtH*q97^T1k7mycX;dF<$Q6C<itf=f~Y\ny&<yXxAXFH*t{I{2GO+`lkPJ15ol#7>Vck#OhSa%;ubvf)uF**Mi`SvG)9pR-8%dW8+Usfz?O-wbATF\nuCQ1gUH^q$S9?P3!VBof08)eLu0qR_A&)6~+rW&0h)UN`X3h`DF!P><Hrqd2`dpe#KxSl+wYu~*4Gjx\njY2{`c7qqmQRgKgBBd?QLv_?L&|Q`0cD&?$Y_K-6SJN%v}|YFqx^se2rzsq-M>R??Ty*fmmk~L0Cl#Z\n#({U^yaQOCEkIfYxvXbpGy&xHuhsq&Nhx@1fudwlTrdn=(RWg8xw)25l827955k1f$(f3S067FfLHAQ\n@9pY-+qhx)yZ(wIdx%}Q-g|)taMNZphOS03Y!5?WUz`hKEU|C)d4<t`e*Bb3NsiYJTb^<xPp2<a(vKA\nRsn+#caeDxgjxLs-%J}}%qkDa5E1=G)BzPy`nlswomP=hey*1YLT0B_^f2K>LSb(40rr~Tb=wNhOwOr\nr=DDDGrF!*alrh;-pm?CID?drqMy?oR>j>(?r3);c?gM=dMXTxuUObR4pivfMA;eM_-tt$)~_QO*Li@\nStmAcF+Ejci*|Ds-BzMbqXq-Ov>@HkxBbvguN;u2(R@>Gf*->=fi%0fl1~rVive`tzorrfhOw0n$*}C\nqbIW_P$nuYHg3m{=3Rzq0a+9PzUu3(H)Q>CD6wZNeIo8G49q=`*h3tQKW0!3@I`N4*Kr3m;t}f!oT8Q\n@&mv~Dw^{igXOQ~ERXtfR{F%euSZn7xVW%({)(+$%No7Nn{CTrh-WrX>1_1I<8ho8jb8~1o07`jdOMA\nN$@bOEuK-1GnOwfGgZW^_6<p10R(p`@Bm$WeK+mTb#D>D7o6nz*_<Q9meW#jgR_kCd(q}P=Rm$AIsZF\n_JVo5ny6!rljFEsog^EiQBJZgEJ+-hPW7pVVcwpD*Nd13$Gw5xV$Hven{jRtSe+@4z}j%!+|nzU5Wb|\npG&d#$f6+C7`p!Yhsw3*-Iym%gLhj+)>?KVqUySiQ*c{Zm9iAnwXQYijt2jqkg0`Bve5n&juMZ%G~-G\nd!ZD-))wvo#Ef4XW^l69srt~(eF4W5~YRPEcY&rWurkjVx%4R*<LIr5<uc^u^4eyxYPlAxd17)uy{Fp\n6#cw8js@?G>{eX*fsShyZAbAKcQb=y89o&_lMtzHvs<w@`74Gu9k58KAOV)@sNixzV=B-W?cJ)UY{Kw\ne-zkK@HpGN-(2H@^=NLThanvgl-saEe)s{+e?a`|p`)p@C@B|%B$E(G{Rb^4}SNnS96320b6Qg(;wZy\n|}&~IKR$=?Zr0O`TmZx0)?0XGMbg8$BjpAxX*)QSC}Rv=B+G7oYT7!4g9{HVO~1$^si^B#XlgD>R=Kt\nl`*Ocs8H54KcLk=0UBZcvt4oS86?zqQ^eT2<Nd;9q&D6+0fZ;ke=NnN6ZSmu21ihHEs=dO6H5n{Ky%Y\n{dYm%Y5_>HEa#>PYTSv=WaAO?=+dC^WA3oN6YJv_?k_LlR28jH~=2`m|sq2Q(HSO4yy-@STEDB{6>sB\nnNPs1)#Q~%uhbjo3-Rw-Sz^!Ubf{BE*!3WL@=nA)qvv{AB*_xpJbrEtJJ5pdT0n4I1>mLkDS{naN5on\n)0A2P#KFUqh?G+!_ml)TJ?Ngg>h*>jZa?Ms8NG_*>`(YyZwc4{d7Smn(*!G&Wqt|R5;XB?d-R~(6sku\nKa{>GDA^bBA2Y!;OF3^7dBhns$Dc=R0JuGY==F#VVqN(mYcIkA)yE~7ubVMZFTIlIBua)lJoP1CHp=(\n&5v2i|M=X-7t)g}B8uTqT7cVwRfT-Ej{;f-3RVS4yzWg@#UXX8gKpKO3r&kh%56D1})V3D~oM5`JnAS\n&2#sXkkrcd<q|62J>Y(p$b76z9d5o3@RHIJcbW@!ePo%9bLt4+CTS%!sK$wNP>MurVk%GxsDc@N(nRc\ne%hKzB7|_=(iC?6nrNY{Q>=`u1%Cd9?EHy@kKq?sz3nLTbI3wCa`Z+z-X|hG2FlTs4Pl~%Wn%{spTc@\n$V5-D(WG^&NDUs{qNg(_UP)h>@6aWAK2mofX{8&oOZwK4}002q>000&M003}la4%nWWo~3|axZpeZe(\nwAE_8TwC6GaG#2^es_ne{^D1szvG7DC7kSa|)2_1r|ajNF_wHd^M|GzO0-{)nAJ7y+KAvo&?>&zM}r}\n(A1w^NgZA$WU}@Tgmvm#0c6p`Pb0<}HM7u-=q3^8@KvBh?TF+u6>Ps}O#}!tXocv%ao6L-2D#Wzn7OW\nt%ry3lPUg6wgV&(GJaxYo0^s?by^wN$`5@(|uS!8H&p;N^&94igIlS<X3Ay$y;jjRfO{s{upwNm>Zv0\nK!S?t7uuhd&6^5*7Dh}`H0l_fVLXy@wVde`az+B3(oLLyP)h>@6aWAK2mofX{8)n4FZ@3N005){001N\na003}la4%nWWo~3|axY_HV`yb#Z*FvQZ)`7LUukY>bYEXCaCwDMO-lnY5WUZ@7<Ml$*sv{nDF~LTSg0\ncCK@bUHce)MDCSf+U_TQUzcWn;~%_Wof=Htyvif^y?ACpIIXzBcsb-4}i^b_Vd%ceK@z&gjZ;@VkAA#\nIb_IwxDxWL1z2dZUTwxbQ09(qtwwfFwzl&1>mwU}sQQ-f_T{4a6IjlK^;DJ3<|hRDHzY`jid33iGBm?\n`jV^Y~4PfakfOODyrikszoydq*VJzvy^y?$(h!MqDpDgG8CCR?JT=|Cmfdz{Y_j)s7=Vk^jc&Iz@GrG\ny@<Rm9E)=?LKVu#9eTCrOD<aKLWAx$!#&K!`U5NPhl`<c!?X*30>+b^>`AVAq;us2{QJ;D16vJIW*Cm\nx7eJ@axU$r?1n2@$Qdq~3cqC=>nNp6Usl}7BMeH}~(_Z$*^w@X|zfem91QY-O00;nPviw;2Z%<9R0ss\nKX1^@sc0001RX>c!Jc4cm4Z*nhVVPj}zV{dMBa&K%eUt?`#E^v93Rb6Y_Fcf|Fuh5(q8xprG?8V?gmu\n78Q7Rs8!#u!4_H;$MsX_DNo{q@sl;-rBxzc|)CI``aru9OM7zq|TA`%F8SbMY)`yVYy>t4nlo{{916N\nLr&Mk&3fql1w~!No!yVX15J6O*a%|i7o}Hw=laX&XbMgJ;Hc1=s^O;i1va@jR<306HPf&NfOpN-nNvr\nehZPUFqt53xRmYCn+$h$QF@Gi76u;?>mPRuJil4Yzuc~_6ORy76!;NX!)1g?_%ndg>NTRMt?HUHEqPa\nvh6oM2ZF3u&``D!qy+PnU;`S?AYe(_cCjajCiEUR*u7qw5D=ZUao|C;=ksg$>0FpiCKQfL>?QH6#fel\nii2Z4h}S&n8O(TX$hGQ7ybV3zO*T^3-))#B5`b?zWr!Wx^Tiar<jS_0{B{Cbv;iAdAL^{_7wGFs4Bfl\n_92yol&$aqm~Xpy*z8%DBuy?6b2a%csb-1%oE7s@8IVsi|2~($N=?m92G(wlGMlG_BpYqw%_}B$Mn|O\nty~}Js+6P(yi8_JUdILQR8WdI>PKhUgpTQDx$_-qKQ2oP$JqgF5xH9TFy)ZDTC&hBa_BZ$sFgXw`P`9\na5qko@2HzFo9yr;h6;Vu`eqqiJWB`JrM73CsM57L3lHCxNOPp+vpN5b?{}Jy#RMAn3Q~f$o=|o?brxU\n*?PZUxI2aV)z6ttDegh)WCM(9k+=3G3DuSRz2}9tTZNi!5E=(;umbI12+3v#fSr3j!gxXq7NZWf#n-;\nj5UF_J#^7z~t3Hw1k?fly&=O=RordV}me-xo9Q{=zM)2@gWe{zL{c2Vut&4qNDx50txfHyC9#Ry65c(\n{6-cVPmcQ}7D1;@T%^P?@E67ED%*nHf#<Us6>l#n?^;#;M=y$0Yd&P)h>@6aWAK2mofX{8(e~0Z4ZT0\n07e%001KZ003}la4%nWWo~3|axY_HV`yb#Z*FvQZ)`7NWMOc0WpXZXd9_$=Z`(Ey{_bBvBp4<SvXHjh\n7Xu!Uy6y|s7D3{o8-hTft#eF7rZkd@<E{JeyCWs))k#pG0)oiY-SK$$+`}VJ+116HKPPWR3iB*KC~><\nrOL#C-_VVn-Z)~B&ntkL-XL58pI(5Py#TulB$%h1_5gP$&%Fc7X-ooT%bT-<kY{%kwQ<y?Q95b=YGi4\nZ;GBezWOzP379NQFfZL%!Y)qpwV;D7v+ij}j5!$RIxmX?2AEaLh5#r%&CpWlV-TpmI;&(ajuWIbe`cu\nwLYr<;pBitj-tnTizrU4S+^;t9_UC|#L+zg%9NyRiYaHLY!(Nu#pV{iyWbh_#v1z*9=@e+sJ7yjWa*I\n{&=*yo@gwZ$4Zu=F9kMdA|H|wYb97knY^;JYjr;$=fSjbZvdk({#nxca+z!?h^)m(+=Hq#PB&9B=4z$\noGVB!-FV0@LFbr77*;P-ig|n0jI37});J#C*Ia`O@6(D~D3s7ftaVfSeKq<F3mTN*srbiFe^m`&@J8#\nDYu(CB37DV(p0SImkoTyUAll_^yaTh%63u4p-;;|k%af3uT%0fG@9E{u;^ShuIQh>-CV>qWj*!B{abQ\nR2(U5LJ|I2zjts}#}vCo+Vv`+szaxoZwtEX&*HHH#PRWv0$zGAz!sja^24)$)2P2i)2)n5ndn6%H%w4\nIhm-RG+ms_;!4C4Q~Vald}yik3{QP>=m`w{HxM+2nVtHLX`uV2K3d$cNvW39aV1m5LIfv%2<!F~ia-f\nvcTYkZN#4ZDk(^G_Y-9vu(e*bQJB6Wr_tS?-mHB@n|Te8;;DX4y4=3GpTk7rtLsYR<i+<H8R^ShfU1Q\n8t-8PE3^95n;F;W*I1UvkYDoBv`0v_yive+9`0{BCZYan#166o^=*Q_u}zwBga1vDr*Lh5g>LYsJ4zZ\niJ*3^^QZ|Qjx^Falzs5k}gh4su>R>>ZlGO~2v9Kv{Gw#iotL#AlV!PbnuC2~vweWpaWXq%C?7BowPEP\n#$73PWYDkTy7f@n7g|8f8caFeN>-R+slFp)qdB8)cx55jIS(yF=I;b_ynIaAI7QrrWR0126LLNXe3%d\nhuX$qW~m*T<=<CAm-JpckLEfN#{HJ>VTkV(<H`TTzjhu+s$P|8dI_Jggyi{Z9l+W$HN-QT|$D6(`kFe\nKQKMNt4dWRUy(^w(>0O8VT(#8r#tsp}oOB^qex<Qtuc7fZ6i5DdS0ke8&^pb8Q#`SY<gffoc0(MZXk{\niX1ml2zo)xWFiP$JdI0HAIXM0<T9n8<aSFgep!wz!ipBcvYbO(vtd<iEo(MbWV9x%PSC!ax_pXS4O9K\nSj`=Zq`(d^InwDsby~Nt;z;^tO8gkD7R9l6nAz#i>9l7Nex5d3kQ%1B=<S2kWA_{9uBlzcH>rCdEp>q\nX_9NLRZybC|7`0<3&h;-@MGx^|@%{}h9Jg`PTYPPu1?C5C49H6UG=onZ5Dg!Z#jbv5@vMD7tokn7)sN\n3x0MI$V`^bl0vdxdL1Tj${+7s}Chy^gLQm7PfAxvs!AWyW5e{o42Elzj!ZD-b1Heh-v%It{YLlHb-lh\n{eb{D-dcs;Bvr-jp81DMiVOl>3l>`@DvL<IZ%d65vH+$Z=k2PVI9D^iI^hx0bc|HR$-ut*iduN(K(Df\n=77>aV4}=my=`G6?7TvkgSwM4dY;}GoZYx181yW;43{L<D~Rgp<hIOM*9&x+Ab)&+pr=s~uD$7-wi!l\nVV+rxg9%E`lfxRA*Dyw%6N)+P*>UpNMpwg{LCc~5l>kJbqC@0RAqmcmvZW)%KiQABuEfCiB)&cRtUYw\no%ggb$P@sYeLNP(Aa45mdo;$(D+wt&Fl9ErD|T3-gVx*);hWP)kL#3IgTmZZmz>DXCGUIqh6YXGK`yl\n(MQ2GTu0=td9q>g<KL&@Nv{sUMRj=oImo819j~i9SRI8=QeQqGp}8A49Oi)hM2~+d#VIaM0qcy6tfFP\n8*9~^MI{J6!%+j9jDv<kq@*Z6I_5Uc91-h-graJ#K6r;VA%=J&Qm6CB{KLmp0e<5hXA-aQops$u&=Fd\nCp0ju>+j4W>?CNL9Hxk;QxiUeM(7!b1MJcrX>JGWZ6WU<8D<mPjKvk%kz|~Lyv4N68etju-meXM?3Kx\nYv~3yN&D6lD|Jlw3{S`M>?&4gEZwzgOXU8Y86OjfcKf)t<rs)Qu3xYx-`%JjOzHNBrj|K~aX|GbFPqu\nAY;(H&ZuBDkcunvQbo+0~BL8je<Pko2k=*Ev7H#|@D{FT|HkTjA^sDW(6<rEL3)j?5jZ4=?I;Go%(Hj\n>tF>}*m7ukKtUsPibhYv&bXho=Q^t59jRr}mCxuJ}me$f1zF1r1AW$kokjl;EC$ha#^uZU*9=xNjfDd\n8?yEJkf5323QVRj+9zZA7EPfidtKK<42FF(A)$|P)JB_o;WEvpwlvjuHWj_l?BnenLAb}JyiS;P)h>@\n6aWAK2mofX{8%18C7{~^005u|001EX003}la4%nWWo~3|axY_HV`yb#Z*FvQZ)`7PVPj}zE^v9hRZVZ\n(FbuuxR}k$b0TQDtu#15WXwz;B)-S9%Y$ygtvFSvsY#EZ=)$97-M@g|0w?Pj%%!e3~$j8U0XXX%YZ_d\n7tKM9EwRW({HS9XSvHiqM)ckkg`ixe)nHmYQY>@Wmhh!jhM<7tMa6}dni!%4-{6^@UiBgPI64%lpkkh\n(2Ui(i;pIJucZt~7|El32LJav35_1TH$moY&HVFu=jCH1doYo+F5ITwtMe1DQyzP$kz*<cs856_6x(Z\nEKB5;;@yrz{^ru?jj8fF#*n1T!&n!^nQKRR9pMg>k-U;+?*$qFXxl5)2q)TxU4N-NWA2g3uH{>{fL+W\nJsvCL7Og0-MQhiLu~c$n;FKGjxSm52wG2zN1A{Uj!96xH7^{ac{s@c4qJh6~rOI`%do&jYY0pku6)`*\n4TIs=%b%=%#yNo{c2p+hsF%Iw}z{g5xG%;yxsaVH9)P)cJ<*_`eJ;-Dz(c-QS_W(<!G68D`LPY|1LZ6\nXSywHPA^5I7FBoU>sNwTKp7tUMpi_5<Al6kFu_BGj2-(f|Pd_^J7UPQciMB;Kf>WTq<3{TH&Pa_~%zT\n5yuE}Qa3f!+T%!*5|%8woc1z4oKJa;SqRPr+Az-oq<z)uOMHGO2}4)qX&qP^Bs-+psgvEmm9;$5WLxo\npoNB$PFL&o|ZIPXka~XEqG~1v_e==s+(dogs1_fF@r)p(l3$n)Ll@4mOBPyuiDK#)>=5k4Y-?v{$j>b\n+_zJ7=*~Ft4<u=RN(olMd`|bAxWa?sd>#c!XDjZI11Y*(%J<+FHTQFr>RDQp6cop-Q^^nI$h3wsNWDq\n%2eYIlJ$xM-iU%p(!L2BS<XSdcnwXWUWd;ibsdz?Q+CF3h4}wz{%U&0)(%WVZ$1jcSHrGDhceX5dV|%\n#i^<8fWY@k~sxaV8=CcAd&3Um5f-M+tQXX0D@{sB-+0|XQR000O8X0rTPOEM;5-xB};k4OLjCIA2caA\n|NaUv_0~WN&gWV_{=xWn*t{baHQOFJo_RbaHQOY-MsTaCy}{YjYb%a^LYQCd*P0uoo+c(lHKFv?Ebej\n&+o*BI&!N7#g+M9RO?YEBhdcbNt`a-7~W@voBKel~X~LOkgq7)6?%4e88?gzyFW<hbZQ!S-vl#?XJ4!\nkJXYLEnfYJofT2QF8rd*(#gT(KrFt90-lz9ejf6)iZ&51mh5fr2RlAL@)nbc<2aM+9cR0$%HwE##Qb=\nh6;ZWIN|t9u#Y48q3Rah#J-|~|@c*uPS(P5`+!R^DR;x{2)dgRzSd`!%=BH^^`Bjvq<zynC1%Axa&@a\n^IINNTcbgMoVT)nHJgbTnt@uS$Qt0*oN<Q%TYL%-sy>hEGvwa)>J`u_SqKcB5m|9p1(m-A2m?y}P?j(\nLEHxa^~!<I0KHmPfg_x(AH1!fWnSRz)4)Rhsio{gR&p{n9e3qI>>63aTCe0n#(b(yGW}@j>m!4X60PW\nmg=K2h87P;r<<frN>XeDtQt4arE~F-j#Y#0AV-wb(a$cuO6aYL=`Xmc%r}WyS-Zdxj;mDcqyLuZ>ozJ\nq~*2R^XKd9&zHQ+f#H1Mm|+@eVoXpdc)?DTba-1{UC^`XYL)s4$k=Q$`RVc;mK59zvLpv(m=?~@)9KC\n6%a=bK+<rS-&VHD_d<mcN<2N(-bn`R4oBkKRmCp{Q9{zOz-siK+k8eMneY##<p1nW6JUhK!U0uJu{^{\n!M3eK6nUc7SI>&17lauV{5kik`5L{s>;WFRy%HvgVgbsqB@_~f$ge{KbHKxaPV?vnWoZ&8=XrV40L@G\nXC2TadAoMJcFg4rGfS**lhP*yV>)_WEDGJN5)^rzH?80g>|SYKO|YcLAwt=Q7|}0UtJnzfC~jXMnzi?\nMz`oe-pn7cCZ96@#wu?;+G(Lm0S^(4D^|O%2G~WZi}qWOV~(Xd*b6%Y%DnFPs*m^;mxaCS1!MKt>3=U\nZ;$oc?{1O8K@4Xzl7~|vEiu?Eh4)*e4oLIH4>+qbR&o%djj~Ft++}qfG7_(lf!zYUJ-jaMN9L_oQ5sd\nN)s&v#tK{*<Z9dV~rItzdKXh-nEdFV&Tk*=@mP@wIvKUre7qzjX(Os~(T5X5mm0&OHausAD2Y}jc-N1\nEk`!>y%)(xaeooI_QogrnUrj-H!kHL=9qn^#;HUPr-WG~ZKf>p)`Ahf=r6a*W#zmECJydwfIKLUv9(P\nH6(D|?OFw!r^1dWXRNjU*%CAo8JRCm5nME0SptmoBsP5&mitfed_tWx|%CzWsE0f$|d+985B3W9e@=y\nW@NEcDR7hR+{pU&^mkpLr{|hBq^U7o<^56$&Y|pXO98TQ4prik7>MT{<_TKy21;bgB2+N_c+cTc<ABn\n;p7*k!(K2tRr5idcOu_-xWVL8g8?jQ-Z!h-*yE*bRPhOHbzVAp@c{@i>S72=x=$<rk*z_eLY7K4P<Vj\nGO>pC!tvQgM8~f3^gY%aLGK{vM;T{MYhkv9S?ASZ<ju6IG6|!S6j}7gFJy;2n5Pu*j37PYQ<NcCF>Ga\n0n-0ciGfe)JfAX>moxm{B4TjnfZzI5QPCfB#-NfYCEGJ+b)hy)8|12KL|ge6c|<uy{T*{mIt04P1}l&\nl*A1q^ushD8QJjhniqb3(8g;t^OIX>4xw$#-e?kgme0K(gPH?*3}=|A4~B63A15B`m#&R~s)Ywl8;86\n2B}q!9O3pesfR?uFe1C9a+1b#DARoTkb5`6wY_aj?Ucf8Za2KUiHBTW7b&~rSlEMZ@W=oX*L(?4U5R4\n_5*`uWd$<%^s=h((-Ootd17e>Dm;%i;`H!|#YtUO^Mc=lwqV5j#Ol0W$5HUqq9VF~2B;!?+&};1at_Q\nH;oomsF@j(vMG<63zQY)A>JUZdQfeL7{*wIJ{IvPfab`11+W^yLzZ9da8VI0u2P7I<##l=u<&}^F!Fj\nGTvkjcIeCAF}7NUIGT1b}!JfpPcla`GvDsrwC3~}BG-09WKTCOoX5nFE-x9Uh6a8>NPI6wm6l5GMoA%\nJMB@J;jf*4oR--LSv#{aI0DMHjG$(7lka>+RGz-+~!J3tgvl0<+ktFR?_o<m%6}XA(`)9d4tXrMgoWG\na&}X#bmhD1_;1<=+#HWA*cXhDtPj$;Ys&Kl9cCZ$R7uYDKQ$plX_WHA6$hm=VMe-QUO@kT*$k{6Nfo1\nwv57S)($Tly!u}eg^{a2?^e!vN``3gMp{+iZZE)xqTz&aV*GN?xES!+Q)y@as#(Y93wbf}jX3ke6=uW\n2F-wOm!-i!$+a`BxX4BG+S&?k>{sLe_>?+fpLT+(US0p+V^@E5-)uBk@{Chu&F&g)JAs(>5aSYigO09\nEQxe0bCQ5i)T6@>Yutq|!#q>_<JQ35McF#O7oQix3rpqGBS<<h3(>Xbd;G3jB&9(*v?5Q)chmvmpzS)\nz)e!f=f%9Oe)(2Q9Ze(^KJ%9Y1Rd7!F89TU0<0yWx|Lghk$~m$h?W4Fo)+Pic_KamZISJFTGK*dbFf8\n&}(^e#&Ip1|-J7Rk6&OJ$*ssHRwNtN@*a3O&~W=e`>j}HGH?)L^1DNY=vL--40XAVIVegAfa_!DcCxJ\n^pN@GR5HXh$mMEi7C|MXF=9UWMGB%MqX$V#NHyiDBLCO`X?f_%ZzFVP5SPumT8+nPtri-$k_dl=PRo+\nq4Fy!U{n~vg&hF^9&}T5R5moI{ttX)Q@V<C}#Ibz?I;dagrOX@ZFe3Frb&R3`W-i87O*%`a4==Lpjsk\n@oZM0*dedw|t!3qL(P+wltQvI2kc)kOsvaGJ!rU}%7NQQjJ9D$*PS*E2)3`ATwqNInCxyq>R{L<JiFT\n~dS9H|=~_G&Ki#8TZR6%yxD&Kd+a&0~l@PT1m0(SqG80tz1%UxgYZ^E)2gv4<T;0YmE@_^Ghjg2GZXZ\nM$tIuVt>-*>Q=IKb<lOZtAt^9qi6Gh|<o#=UQEIUL<}BiVeGjvv<{g(4Hts;3=5Hc<+JFGhhj~lyU$8\nZmB|IW_4j)5xgs@naWYv`ei^MO9Kj|AO*@>;K%WvIZY9am_Uo!XN90v%L4<#6*uU20RNuOv0pVg_ObW\nI$g)kar*VWdLH41^gDVzXXallM#8~S+Jj}UY>FTuZ1qd+I43d%r;TA4b<bVs-WerinG~!ID#LV*HK%F\nTP)Dtzp8H)Qz72Xztq}*azz7vo+!eAmQgCd~W=ydl_BbCmCR1^f|!y+gkhp9a|jG4V{Hmr$&Wv^x-0$\nOyN!c0%233FLYH+sGj#A|GyL0Qxr#Rw2ohw^uN3MB50lhEwoHOE&8uKx|Vj)s-!1K@F=tM%RRQ7B(2z\nXvUWK)eP!(*q3&EGzb~DC9A(c<6N&+QHH1y4V^lRtGKtdkZb6o0b?6jX10?p6Q<0B)LOJ_Qz!{BL(R(\nrjAj<J^YVReZ`L}>K>`Wv21WoB`0nK7jKP%t#H}K&OVP#<Tz<MuXOG<nd)6P%VPs*P!|R03c3pF?L1D\nwSs>bTf;8aSol~)m;Wkm?1^<d0AiIpv6Kb%Qm%je-{f|p_4ThAk2YG>8)d>~5L8Sajc@_-x9-=r#A@M\nDXh%eQNY$PvR{{o8c0c3!h_<N!YY+X}>D1xvUd_@OLKw_8|*&3`g#@rcXoFa~fjEC$SCZ2Et^@ycm?0\n{*os9{@-P6_KG_?H|?RGBsEGGC1cIeo!R2y$B_QOZROlk!r#o#x3Zjy4?m4A2){H;#mrAq8C7-zL5lk\n1>^5i}Rc9GLE3siEtOyITf5(c1W!?<kB`My|~I<Bg*(eZDY+gia8__Qs%nAXRUCdl5&T>-dDRpScyL9\n;z1tyV;<owK#L4KCX*??bOtS^+C8Mx3c&5GZI0E>LE35XD@nMvj!O`v;8K4(5QaE_YHvXA+R^86M56F\nKj=XQAI-*bx8(Sr>Dp3p22P9D?Mb+4>asi-J#nBxB;WBVNMTDKj2Q(!Qev>IF74>@L`u{?tyK%@6MO7\na2l&rTx6n)PqU5QZ7xM|ZcvG3X}9lS00@9>veM#q8a1ord@KnUEdU8a-y_C%jEqVjL)7_gq^AwuaD@=\nv%LnMunee<R~>aX+4B^>%08y@!q8o1n+iuWK_If-@XJTa|hAL=lH$p~s5|jvnB0>$)b8-cS=_c79lJ;\nwC}!WZEPW9+5ny?2JOXAm)C7bb@HlN>HDU6uSiJ)GvT8qL(Mq2neG@AeoEUu0@j3u+1_9bZgXch}QrR\nq#!$pF=NAacVjau=VWOZVcg-zsulE{nvQNb=?Nck$d@F$DSt4UVrH{S)VW$I@INMF7{~y|qJIO=8|Qp\n8M~g83h!a3qmSD|SXV(DfwtGVCm(@JULL5R2zwD@wa@YI{!#Df53k0hcnCD7X8?cP3ypSO9Fr#xoC}P\nx&cMYih0^wTR7wLgn^V8pBL30U4vI5^UFbpJJC%NCH(ap36fKUX7djnV4xfYWXRCZ4L%IW5Y-&Z-N#s\nOB8)Jb?vpsCmy@BfvNugGf*xANEz_%4gFLd7BC-?u<vPYuTx1*8OI6Yt;+Sp|!Y9R_wgH|^?k2w8_we\nb#-Hwd2gX+a-5SOfK20X07`WEz}GaX2v@o=lignmbw&e@<%^`gv^yT8s`L9orjcow17!rcBzn5O0JgF\n$)+7LiNNZ#xW{znwUtpJG#p;q<ZV^|MOA*R2k?h*2XXj1_Grsbcr=t6Fb02!(tr5`;J5*Js|LB7mMQ9\n#p5Ja3Qld<`H_fFs^T3y_jJo%f1NH$UF*QEEWbY}O5P9U$;`p#^a&8Rj@w;tC*>l!Oo|~8O+C(l^Q0q\n`3W!vZHOcjpIAhsPXWd&k^ig5Zjjs!g2X#Pq7#EtAl1DNI^T8Fv=$Boz);p8SAIb3~hn9zbQ@ly^|BV\nh%FqR1Gf-Qz8A!-cN)zHY?}U(c(0;p+=4UtRkp0W3OAhQoWTB!TS~quM@cwrh6?u<7EnQ_&-zU+{E`v\nxZpGGAl9G*LV{#<)FIb=q5xpLXSB&ewFYrfEgIkOg0yO0Zbq$E`;7CSW=hjts?sgGftHcfD^~$nGIm&\nU6f;QKxnC&Ag-(ezAYzhcVcr5=Pu>Iz&xhg_R30UQ&%WjP;R}b3?b03rnAmw)nOP1Fk}C8!r;Ty_Gh!\ncu9G#z2KMNSx|4eA_%<71L(Tq>Chbo$;*dO-Klm|Qd)T|R+qG5^2eUJjFS`vWYdSLM0g<9y6PD3*Whi\nQKIv>hb^c-#=(lkTt^hjo3gVxxIBZwneY2(^j-CF_sa5i=(^8V}3?QI(O9oqn<F3Hf4$yn;GIwdqHpt\n&llAjpL*#ST&5`S^NPx5PknTxY&)MEH&O%Itl<Wq<VnXGt|k^x|+XI+Ypl=NpIl@q@oFX_}+NtBD_`7\n!WWULK2j9u%j49@;?TUw8QU=hRFF514vlwHW1J{yQ_0yYvgE^7{o_ts__L7?|JB&#x*0Ur}Rd2VX>=$\n-3GJu6^U#0SV>W}y9aWJIoR=8fF3DFN-o(qZEkn@)$8t3-SSJ>9p|}KQZ@1K{H}!jKvQNIj}*+<o!qe\nbr4g;!R8bZ6o|)W%Vtm&_3{>UixzDQ1_gvsP<@qrJU{&7AXV|MZ>>Kvo@teh>Rm`zOU_%6#0lcciVLI\n@u3GFvv7M8$DXRH=^Dl>?%re9w5^jJl~OP5xRd~qOsbFGV7&g5+<<}Vs2;-~wbhJNYEiAAdVi{FrtZr\nZBb^b_A>V5g+U2mp<t1S2B<vcZIYdUbLBePnZ-aXK|aPnPnRVBZolR+ZQEzYH)W(IV_^jcJ07I>d-k4\n`=#ooB<%twW-{xFo|Z_|MvtzTu(+tNSCT<TQ`l=?^|Z-Ib9`u^>>!YT&m~aw`abFr4471=yGyAP=Zky\n_Dn@|O--j?)hDIBW^bgdgRi1pHnG2K7fs9;S&Ju4ZFfb>I;!5U9#?Mqye>NAg!^fUQg8l}6uxKyX)2R\nA9guLlzSivzk4rtidVHGUi$;CS@A7H#>}UJ6Ho?EL^(@HLPP#`9vFC`**E4@aVCqM<X|?t}O@NgBs@<\nU{=Dx;%abaRQxUiq{{ZF5zY500V+we82abm%k*5PYd^YAsUefTn}tpoLGyXrbzZ5^nx>SCz*)GCVph?\nSbxi#Mp*G)e^a7@nm30jCU5Ae5J+Kmk{YpCvRv1nQ#KEy5^~fMAa7is~tfmzqKaacx&vrA49AzRC}9I\nut-X2v>{2c1aEHlwlVQjdufMn^hH8*YL}MQHDQYuDiv(ryHGivRJhNwEIZdk&Z&$l5V$;d(syDoe_*&\naBzPH+Z2bXs)5u~51L{Hih~lqR^mF4w}yqkspj}>j;q#DInUqBjdt?<=-5nZHB<vWw#X?_EaW^A{qUv\n~nIy<V*b+_>qr|^6!#86DQxxOGZ>Bu<uC6@K6U{fOXP2VMB*y8=+6n^kJp4Hu4bOv&l+6Geot)tRa0a\n*Gm|Tnlv4PA6Oc?tdhn|gLJ~PgK4B{FxU8CXMEy_)XL`{{`Ji%4lF#g&xK6guY-+741&z;NeO}E^@jV\nhj$)85SQPW>ES74X|vu{QnIS1CVe?26Bh77KDk%3eqsu=~i@yd0#1>`|N`7!!WmNLhyUsT8AiNcX30t\np$_+1yD-^1QY-O00;nPviw*uTY#7F1^@uW5C8xt0001RX>c!Jc4cm4Z*nhVVPj}zV{dMBa&K%eW@&6?\ncXDBHaAk5XaCyB~O>g5k621FZ5Xm7n##XWo?8QJ9$hgxpjcxP<od7d~o`##2N;W4FDUehg1N-CWRZ+G\nj$8*>{tPgQ46(3&}Uw!aWJwCkuZT7)bv~bPNoAo9>(QBNmcQ^m|r@HqhSD&;G&W<iem&y2($;k$qeJs\ndEQyTJfb=T;8L$i0;&8YOQR?B7C#@5qvsZ8BCAC<P&MIDW^VKnNV)wOPteWbc6L1J(HS=UrN5&zJB$M\nib8U1RKeZ}s&1!~Jsc^ZnxAA3y&zRd;qbRSR8JdIkHDDTfC0k-|q{HZe9?UKu#B$NKr{>ER272K=ygl\nvg?g0bA+(nF;*rb<@CCLAkiNknhJD7HXSbDeYZr3#C=rD7X5P@~E~OlW)}4z$y|cdLh4y8}`AIE|js+\nDJ@W|wk*j{5vT&I$f~%}QKg^+l~*nh>|?^BSIXN+*edTR;(6R)4GCE8Y=m<`xiaA-^lT(=?|`6V^kxN\n&0NSJ)?_Lcy03Bc`xIw<!F;8KTyy=!dZG;d9s0~<OQ@tV|5(BLY*CPH2BIFL><K=RqD)`HIji=JQssO\n)(z(E(ht<H19ih@5o6*jtXTg2kX^RPLoLPyO(2@&WVMC=;(Vo8KsNVDQ_!Hkbczi1=6$l!iZm9uMs(?\nR?lt`4d&9{xJ~HvA(z&sLh_KMt;@Xlj_4con*%LjYhp<71#=_WgT=n8Ww)%31Zv*!FcYO_b&6R!pvPx\n=7Jxa0RI*41q(0LO}BH-Wy~jD1UHX1<_jK$DCzl8(In2*4e8l*h~`#j;B*W15frp?QE<p6_8zk*WJF5\n5%PD+r-Jv`I&5596}-f{M2dXre64LRNvc^5`%I933M!HI#+tZXj^zn|0#)S{`7j?O*z_RV`5|GyeqHU\nL#&1*g*;)Fg{v+Q4G*PpE$*=hUH(M?tYju03T8uCJ>W2%2ohpiS`{Y}ioUTQZ-h$cb<3mE-9!T~bTvK\nF8!pG#A#olu$(F;kGpd-gi5$lUyx7r($TwH6v(rZF~Ruu$>YKQ~SHl!py5;LKP!U>|Qt=>WL6rqM6cQ\n|Iwr2`$w5ENT39(=%!H!nI;9|SzV-h5*rxGg7uduD{T5&HuM=vFNWj@L#u(Y6P3w>P}^9-5Rwg)A!^1\nr{K^ngE7UA&{L6Zq{&*t8Nd)*ph`p5H9kp^|B8~J8(*LKJCStBlCD8-*@L2s*Mgw`e4H0IU4oM*>f)X\nVSasGxIAPHs<5+}^Xuz(*QiK9hqABfRg#apRJMtAb*ZDPXXeo9j>jVE=~xU8VSKSX(>Ivw#ZiNv&>rp\nH)p6M*B~1po6tHHQD!-^rB(`#{I%+KXp5S`GhxlZorj$zuLwe1ri6@6S#A#68M}NOfVl@{w$3T?aRr$\np^O5L0Poy4X3mDHbYV7c*;OU+{SK_xcpr`<2_f5A*r6pG6=w7y=mz*s_AmYtr#2VDi~#a(zF<2|f9sM\nIHQV#xUT9;GRR!mIH_-QKF3p;_X2UpFyzoVRZw!?ubD?W!9!4q*e^b6{VRH*wz|xf{C{l_QU-MR3oN;\nVGuEBUS$C87NPw^`kmHNS>h6r2#_SJ$#hnz@yuEl6BwdRMzH&!WlTNUJPx!o(dwe`>+jNg}05!#4}j?\nLeqr@C8B7X%H$|^djxdA?9IyFp#-Am@y%4-O#VLT35sct-x%?S-Oj}K9x%IO-5A{-=on{ENN&aOZn3z\n3d|ZCHzkC07&*763ag7tB$w?9*El^guxJtofiHf?XD1*610F>i4zBODqxq?cik-+zWFoCizkbe2|jwe\n8L;X0&JE9bLFr_bxiqcGwxQUqgb<?`o#huZI&%5~R2d3te`NKUImiDkYrM9B~=<8coN#T>@VCHgkH8C\n$s`Q;!rQTMztQf&O!vgz{Zp^_v3=wCi*H`lRWiZSmaY(gc@ySRQQ<jH7VgP6NXddZ`wu6N%O7{KyGJx\n*LsIl1!-dL}`{(0pk<(3)V-ugJ>I5L**P`<dsR|cX&gK<(BGHuVe6yqMJ%|jVm0Et(&4c_NjmHlyxj1\nTr1}3;h>HS7+@y-(kI3Py^0)bz2iv{(x~K6`5v&kx&jT==~TxQ=ycg|FXT^Q<S@A2V|=A-ohe<i+_rS\n}0=-vEXScrv^@4CNdHDI(W4stM-^rQUJ?N~H`5BNwaQV|U3r6hqil9qco{9T^6X_lZ$D4zJYc7ULgbw\n$cuRI{ku$!?|eCs;{Yi=#?L|#(!Z@FFk;s3A~r{QgVRhiZP-WXCU$rY4qu?s0v7GFMnP;yqds@mcNL+\n+ADqfKj{hk<_+od4%(`~^@;0|XQR000O8X0rTPq>H-es|El7;t~J=CIA2caA|NaUv_0~WN&gWV_{=xW\nn*t{baHQOFKA_Ta%ppPX=8IPaCxm*TW{Mo6n^)w;2apWGh4o<#e`)*)+SA`r0p69T@eHVEm1KSO4LXy\nw$t^$?~o#OandBk>KBU=&*68j-;s9E`G+@u4UQ-yuX(l+^m?i0WUYKO8IAYQp`al;#X|D5wbR-uHlNa\nvq>>CyB9bZ^QzCqHkl}Di1`}`8iUm(l5X8C41qlK~lZ*?6aGG+373HaHwd}nRGm=JFxV54QDdZ!ph+a\n8qx9*!g5n&1!mv=n1A|%0-dAXuYI;oh81S>7uM;TZ_wk`v8SIDYOM$>C2HvjzLFnE1@`1+5NcW?XXAl\n>xQ8P4<;fF3uW`z-`Nqa~x67u<qHTzI))j4q~5<?(#};Uke5SWjB5`N`Q~aCA0D`>5RkLpl-aEKuh&>\nKyx>Grx0=-k#0dtyU`{F(T`Xf+KOPi0B&2{kjvh9e(Anf6+Ve2q@NnJv8{Od{h9{D|l-DxF{cbDPMJ+\nKf#G%&+HZif|wS&e@5m+i^>TGiU&)ABaKZ}ILygX3BRtU3P;yP-qV|}6Oc7mD$f|{_If=yC1hAi^gEX\n1nB;;=MMG->9KXUMg>ZBwVR0Yy7oPPSes&nFPYPlEYq#6w^~VAlMz@&J2#wckryCV!=?6K1LuDxFLf=\n<Q0+|cxUMj)S-?>x?l!NqI<=r{#bI1^tC=>jaMkGRtbA%b=D|eJcjNTA59#2c*rBazc9Ku#6JxWyUad\nACds)P+i9KM=NXFHOFx|{}k-kvu@t0fTxtq4j9iApt!>-=Ffq>62j#G3{pehc<ZW@yQC0V@`H5BkW4@\n5OjLLIc$PSkrK>Adu}BtuioqW(uqDoqRez5e?NP1gWnhb=8Q`g;8bPU4piH(Tb`iw3H24yK*;cu7CG_\ne&|C0G{WQe7pHH)-z&U<#*l_Aj|h?+YUNWi(2AGx#ZS`fl*SuCfK?O53d<q|BDB~P3Bf3YzmK5FZE1l\nGa5Unv*;gh(3HlL_fB9ND7Wxm{Jnhf=jmn!vR3aA^XaHJ~w-qd>wpTfl#@n)f!#pSAIdh8L-7TSBL&#\n>meHau4W+A!4uCUZ4Y5cG-#2FmFRpw7&{L;1w(DonH`nBc<8xT>paNC~Vr{oRZyw<7EZM3Rhfx`vW>}\nci?<VBGTIt6iR`@BSBXrdcPRK2_47Q>`osqcr^T9p+p;jFLQ7E{}Jm!|hz*>tw$mXcn(+uJYO`gZ%O8\nB}NZev|4-j_ZOy<o>u<aNWM6nC`B=y7XUO!6a};)0po!2&{+DjwW{S1k^DX<dUWlS@#nv!>a~>5}h;m\n$};2@!P&>XhlNc)7=%1kf-|F{o#hK?z4yx6ij+xoSm-@4W<Q-pySqRhySt$6pPWb~HLn7JK}OJ2vx^=\nBG9oCC9>|#>pea>BV6$a+_h#km3CAQzvwloHnh1a`RW!6n@5d+MH?p7t(Yx0j%Xs;ZMXQgtLgSZ#skP\nVtHBhJ|V>;diK_29a!<<85#sSW?G@)bEksd0^Gtr|qS^yOp3f(r&sO;2YP-e?1mg<a0dhm`O&6X3xIK\np;Emt~IaFcWYAlWhzz(E^7zh^I#Rz-c#Ha_MHCr8~z=yXN6{Oer&O;!TVY%p~BNFlV}5U@#cN>jhpgQ\njA)b#*YAO%-4WZaujg@t~pyRH5xN5Db4PX=OqvcNFs7e7>B!F!tW?!*Z?Bw;NpB3@lXywk;PEQbf{}d\ncl@J+KkKHjbyL({4+LR=lME${N+B7hM6HOp8A1nFJmhSs#fPaphCdhLWALvRX4%g4msjS9i_`$OD)p?\n!XhKzC33z2P8!W|E&6@Pl&IuNq01_4FOa+iKDwn2MzLbeG8IAh2#k9Vd)fX?T#k4Ln9gVBStS&Pf?bR\n0JQGHR{w&xUleMWouetz=ZOIWoB9H4c1Wk+=)4f3L8%iSJc8dH{&Yj%s8G_Z8^?SB7L)$pHljKN(5(y\n^;4_D2K$Ec}LJolXZG+E1J5;!bRFZ|`_gb<tk+3tFAy;T5|3O?HQNMeJ+6m8=bF<t{rmY`+p#Qkvr{r\nP_+XS<x6bN*ql?YqH>;ra0iaKQumIJiH!T5;X9-mC7&|0w(_eUuz>0yzY+rX8XVxR&8`lYRnznGq-`O\nl8PZumMM`kU^FgX@yk;Znid}f&=5gU>NmMvG<`W5^%@pGpyJp4I_@W}uejNM3AnHFF>*F;gK~|H>)gk\nW;`@zvotV3ht$UAh@-z9^VlY|uA5cpJ1QY-O00;nPviw*800002000000000X0001RX>c!Jc4cm4Z*n\nhVVPj}zV{dMBa&K%eaCt6td2nT90{~D<0|XQR000O8X0rTPt?6LD?*;$>D--|#B>(^baA|NaUv_0~WN\n&gWV_{=xWn*t{baHQOFLPybX<=+>dSxzfdCgdDZ`(Ey{_bCKQ$EBB6rr!cAix8<G~I%AZO{ho1|x83i\nHh0Cltxl^y)OTKccfk@%jt@}0LvHK<niu!_uM_l9KqYm=f9l35CuOgtDO=zD|5v^nFJm^c=!~~l}O<w\nQ@WIsqsfsIekoEeH9x(`xHKXcTqW?VV(E&XK8hbqa#gNjvB+yvE52BOSXZSoz@#h<GoqAwGHKRC>7>o\nB67r^%ym%eK)vuT5i?bik&wjdi^+N>D<Sv4rSw&(Iq)eNMJ6VY;UTnC`O4S};>l<|DcC;TW{#(tp(Xl\nqFPRTpno;hQhU*Mgj7DjCNbCH_y`C1i)SUzsg{CIVB`G)HXFU0Xi`OxQN0{C~Y53Q0*#Ve+G_QtJGCX\n=*aTEkne1S`bv7+b4IbCq#aqBI5&W)M6HCUzs^Ib`*^(o_4>$rgFk{c0>G`=)#ecZp<hrG9@|X1fHIJ\nA?81174MqqXYEeL_#?I&g~{6m5UW;89JRDitrrsaE+=CZ1tD%wZ)CLZZn*8UormVCkSm_O9l##;QfkA\nV6BKeHc(-hc?Lp8u;s@^fmT=sX2pAR@Sg9fVTCTCt}<r$KoqvZtWdw?Tgb7NV8vusa0RA><-QV)$OC~\nDks=P5Mnz?Pv!azP{*oNCY@LY*=dA0q-Z_$(W;`ts7ilRC*5d31`p3h=v0LO79v5Z&J*Dd6^^_Eb<PT\nOK=3d;$Qt>%P1;4FP+x1~R1(!EwwNQM`grusS0WLXheL65g40k>cbOf!EAlcioyQBhl=p!P(&exUMIb\n<1S`$L~&ZP3{ap^lKoWE8uxx&|y{3(rq)!vyGa6GD#7;x>W}CVzyjSQx(6)9@}DYt-1kYEsx8aw`W!n\n@aU%o23K7m`ZJB$v;2AxEdaiA7<URG29s*y_@vky01rYh6imwgtAt!VQL5aWk$)I2ecJXy?(y)tIn<a\nq3nu&U>?N;&)Pi?$?Z~WA=XtP%ruCCA(AO;PLzxd)g_}KHIg$MQ}-jJ#xJUAc#rU6!-|?)&uoY6AaTP\n@qaw1+Wvl?>FwlVrMYcQ8iSDu3JL#6j7W^E{ohaqPKQ!^$FS472CB`uRSPD6v=RumzJ`*#<11h--VlD\n|Y(=dW|+cD3SOorEC&olj&r5Ni|0$J0_ElXb?W&`UE(e~7CMJ-9kj=D%u1T|t|Ddd9s(d<fL6g=BS$+\nCaIan4m|d_ZgqYS#(Q9CN#QeJ{iL+}H>uUKzbz5uK+(r8PEk!~>GbhGX+b-nl_mL-vutZAa4_Yc01f`\nGrJ)v2O15T^l<x=T|LWbR)`ILz72M8qErEha-xjBGz?969zWP5}8VM$+IJvrwPky%?zewSsUUsP2`21\nGo(c8J$CwX!#y_ge5D4cj3)M*-V3p)$5{9kmuslQ0{&@oy^kVmU}52~*gTmwsdr$E`jmRmsT?R4ZNvH\ndC`xI_&60K!?NR?<U@8cLcbKz$H)_m)2}^O@kQt<1_hvLR6wnN*otA-#a`};`CiYGE5UzNN5TQDC)6M\nb8F}x$Yu1(=^g3w-bhG^Sz6r+irrkEPBvhx&W+;FuPcw>=UMJ{grv_u4sWx|#?DN$Ruz-_y(r|62-tv\nmQ>XD>Hb(b(n`Bhjg{ph=4W23s2QQVfK_^mvMxa{-VP)y_ekN`>bJW2&4JOYBEmrZTixt}E2A6v#un0\nq%nn%XIEOmKR)0j*t|;2HQB)NIU+S6|>dm;@jrc#bO*Umv4lDr>F^6x6;#N)a2`4N81@^=rCUIFNqJn\nnK|WSRy%lKTMdeB5&F)Rc|QYQ$5mNP-PGqzj{nMwfttZ=Y;oQVg?(EI{rvhD4~#;j=UkoI?uCHD=mkL\ntGkkuft6JXjEEvY2J#H^HKJMM}i@tTduKNRs+o3J@D(ia8ek!{@bofQoY8XEWC|$$xgX5#(-qW3(PJn\n+(d1c@VS^Qk7Qtdy*nxd9i%T<Ntiq6_-G_~AM85zBvHV+$yf@vkv+hT7tI>M=eo(7jYd__rk6vMObyP\nc{iI^f<9A->WqsX;BBt_*wH{tK@?{+Ld|w3fnlmPQ3W7FPmm(P~Or-E>N}M2bXr_mt&K6!vMj7lS=9`\ns>35$7t&qvXZ+YvLSM7XIbaDoqw^x<}BqSL>$g%%fCTw@^6DM^c&K1p;PR7$R<1ZK(|cI2cTEgn!323\njU_TsK|^)>Z-{c3x%dm{b|vA|2kjKSPwhTeS>I>wEr<k8d_R2VMsRX6w&T%$KO_8Kr^ZoDH+_HBjmK{\n4b)yaDasPqel-fJ$$OmfeU`zJLsL^E9O;gU3!94XRP)h>@6aWAK2mofX{8-pLe`VzX004;v001KZ003\n}la4%nWWo~3|axY_HV`yb#Z*FvQZ)`7ja$#_AWpXZXd5u(EYuhjseb=uL%}WA_+ZFa=aG`UvwXBpv^3\nYO-QSIwkph%u{UD~l9KgF`;k9b@BV(H#<j_$oW_Ka>GZ=P0Pxqw)eADZt9+`>DC^z!1<XS&urrT0u5C\nCQA;9QdB6APubUGLXn~4mzaQB})rfT?Q8<*J@9bB(Jd2kR+7vOQn%ADHSs0N*dxY_)&7XYxCRZ$8{3l\nuH)}_58swFRzg5}fH&xpmqGFdGE+K84~L~nqE;ec87mQVs}mn`vCCb%)PDr(O-sMwDb^B%@O)TQNT_|\nrS}jq-&k79M=B7~pIPnWJ;7&Y&=-y(wT^l|@qku|tgFH3;3U1rz2?_=@XM+FoEo|C=CWK^=52~8iiUy\n1c{g8r<-P*fd*11|d>;^%9(+4GiM)j+QNdVc-%DgHiY<8=wChIG*R_uzI((&Dg!?q{S^kYp@!4CCX%f\nicO<UgjUjVb@iYn(aBty^WU0+Kyop)$+wzJ?cr$E*ciT^-Ff?8Ge4`+B~h*4T{$jne^Pz=e*Bx7^|0T\n7K#q>k-Ek=Kx>La=3Mu8uiv4pu5+oTXt!GnUP=h#7DOmjRT`P`V)_iA`ZOpUJmxEk~lvr5X<oV{A}5_\nJPk1;Obyatf044rl0Q&O0|XQR000O8X0rTPCD2a%vj6}9F984mD*ylhaA|NaUv_0~WN&gWV_{=xWn*t\n{baHQOFJob2Xk~LRUtei%X>?y-E^v8`j?D_fFc5_Ad5R^y+M)$7f(L&==t0zjAQD2lwF_+$HbM05wH6\ne?gSXw8-ESs={dRdw*VN#``8(64jt9KO3FO1k7*<RM3eCY;k%*)}F36w_m~Kk6kt#x-z|3n?W143}Au\n4t)c=DOLqAeX~rt^%mkzLa-A*-H=>NNwk-f@IihfWy49=&EAaqi0dTmFyBSW@@~?>ebR2&Ht>C<RkE$\nv0UJK>m#EjL)|`iw96k0|XQR000O8X0rTPWlAo^v<CnH9u)upEdT%jaA|NaUv_0~WN&gWV_{=xWn*t{\nbaHQOFJob2Xk~LRW@&6?Ut?ioXk{*Nd97GmZ`(K)e)q57Iu9##9Vgq_nFS1VFm0Ob1e3-^l0l{j0)du\n}EH*MJkW?HG`s4Q;lDhel&cpb{qDY?W$L}2Kh~0kv_{Z^uDB(<18!eWFy@MA!V{cFY{UbZqB4t-x8zo\n0aqa(lgN~9nS9A9Q2t;hxF8GB#xw1DHc)6-F|)ruuaUfWtjk}$EVl(vjZsVuibNi!OScLg^^DHhF88N\nb=00c*{xW@`qdDa>suA(zd}<$S{KzI;AU&VD^V`|a}je-rk*L=}E*#Vv_%7JtU!D9ngznmmKdl%A$!d\n8(w<s`P_q!v}8Qj9yIGEmT}{3m;UrX<vU&mj5q7Hv-+Rv-UN{As?DQ8!`Mju^DQ!V$~Ycj7Qy)9J5xc\n^r>$zW%3H&jYgvka+VlKDGjOunXI+25YaBlS1@D7>IutND#K?XZOo2;#)v*FHWtjIH|2=k15>ixur-&\nKS;d?Xda#8s&V&gwije{)EXoNh+$NIk?JfDzuy>f^={&i=nO|Rh83hII)!EJY`#bi{56=HMyJBlmmMr\nI@WEdoiNg-8?ml}AsVelf1HBR%|>k88RK4;Av3F|j*o0)dbm<m#nZ@l>nNO^65WHkOEv@u{f&8<^QF3\n^0%jbXS2-vwcAMs>zbd!BxKcfha4>yL`zd0;sLL9LnDtV$uD3>i>qKr~r&Z3Rk#PxXpF5$t)h(%Bb8p\n>aVBml-C&ryQg2qQIHQbY~&P6AvD@R!0g$IG!ih^Nab_)%<=O`>gN!(X439pG$Tx5b|q->i>xmUvd4^\nL4t9Nt&m)A4ru&vdHw$8%VB+fzR~spa;04soJ*?K0eHQ<Wl#dbj>`ZJ3YRm*Wm1?R3X`RM0<GS3+EJ;\n7m3r=uN9^X{C56he`R%#ZN_Xpz*j)q3Rc)-xrBmA=w1H;ICHqP%%#)}XFK~{mB|p%@Rvw|NjqT7!f)`\n;Fk@nhA>EjmT&4Vz_Q#3-!Oc3>A8Y+}dz_)8aH6*<C-QmaO5FzF?bK>nF2`B<y*8)(kFpy0#HSGzitt\niExD1{Lzh1jDoQ>ePk`iIn8L1s1}$7Ki)SXC}>7$6*RWVSjS-8}Q;L2+wSH1VJb92W0pRRh)_N&E85@\n5~T=>%}-8^|IT~>U$adR4E=J4H=_C<Vp@@<l-X{9QTP=i?5K{K7`Uz8AMPPcNS2Xkc-oj=p%7;mX6~m\n@gk&GJRXm43r?z##!Fb?*>`0U54C0sWee8sV$WO)#Jic|ChvkH`9w%zlO$@@8YuHgJIaJcLls7bC?BC\nim9U$pv-M0xe4$i{VZPv{f!;J~Z)*fjpQ_WJPEQBYx2FHwpC&9M&ixq`Z+PfesYf*Cn)3h7{rO$44$-\nhn%pj|QQ98kdp5gk|_I+itE0NpFdm`U;%bMB11(#0B79Y?LIRHB&-0Az3Xh%FHtv|k=-<{9cB?44u*d\n!q8=_JvS>@vPlwP%=uKf_>m=aw{<V?TkX@e8gd#tE;eAU_LEEy{Lm@Kw92-?coDSoh*_uw&cycrbD>?\n?)!`!H7o#NKRWMQk0tK;gWzxTo9hNrUM#jK0NNI2=n1-I6X*lH}H1;V(93lE3k#i+T#T>MKRHfJ3S7Z\n_`gFkp_iSSg1>$HpXg;8w#D(ZfR{`x!PqG79ok$*?wGQ+8QYb86fkl}JnGGA=#(l>T5!2^#g=#!Yw!j\n|BhL}pV(zCsIsSJGsHw2FGP9GDrLaZ4z&3Stf^?%X7AJiqoCsrTFeg9#(25}+ftc8ZGC0^3ONT42tqU\n#I!pN_GnEm(|vwyJ%KYZMd91<sW>eH`E_>goknXorbU@vY<upw?wu<63)n%2N3UHr(l##{<GZix?*${\nGXWDs$wk%UENjpy=ksF0};X^I}T%KI$Po@C2RVYh^D~Ewepr5%!b4opT247KyiBPLTY|8q?=IouHNqq\nhvhoe(SCa142E-r?1Avzx9^|9|)(pk6l0M4W!%!3(*K34BVr%Pa(HFrw%n-CXnZ7tG`tMTMBG|o!sf(\n%}4ALf5J}Q_dC!rNw^jq&M-m^J88fTCTd`Z1M)JWK|C3dNW7iXoj#C$UGLU{Xp3r`Y&-#D_paaddUx*\nqjR_kJp4yt1j@ovix#u!Rf+s^}Jcw9?s^3Jh?q}1t&e1mBOr7VV$9ms~5W46$wX3jB6H)b<eQ4NDib9\n$~H$EhnUM9YCy1KlC)~l_k(N+^S>8|;4+mN~cJI#I9j0tJ?P?v=FPikusan!U)B<7XlD&y~TrWTejN^\nlKa$@S8w5-&@#R6GkE?Vy9(n}Iz+_t6fkaUF6L^|Hao{zr;e{N4L4W6SqX&ZT3(WTt{{qpt=4ucbj|x\nU=B<I&JPZ74WAJBW!T^67~cDSv?`S`$EuulK4yX?v5FW8Xu;CrtoZ0{olmk`y83Ls2%3Uzv#&>HPd|j\ncLC{@S#L-jJ}cF_Osq;M*$GilgfE)!NlpJa>o7BHY%uXRK6LG89sh~KvE%{~>G~I%{Qc%?>YZ~PP^Pf\nPyQ{Wr$=~hwy#J2@gwbw{=+-AU|Aj6=bID}yaZ||~!@G+3e^5&U1QY-O00;nPviw-Q_4l_%0ssJN1po\njp0001RX>c!Jc4cm4Z*nhVVPj}zV{dMBa&K%eV_{=xWpgibWn^h{Ut?ioXk{*Nd3}^oZ__Xk$KUfQj`\nk&yT5C+=CDM?f6gDwU6ATH2P~;_-*21+T`?|FgAD(lZq-3<qLtDG||K0!2zD(ik?T7F4k4odhHhZU5Y\nr4Z7<#2xX`VB0dD&bl>Z%r~yrZM<hm1sQ9uPQX8YK1O`ca1F9I6oI>N$u<gilW}q)?rbA+BDV?NMkHX\nQr7q+i9wYlB(=dlq+ib<d_Gx&F^=|)GOIr7?#J!2SX?d_pRaB{b)-f$qIf`4StrWiq_l>d)p5})-%F2\n+u#qIH9&_>p_-R=VE9HC1m#|>JrIy~uRZB<*Ru-id)?BnQii#rjsOuT92a`w5&-*>0|CPb~E!=QjQ4^\njJDncY&w1Q-yt&lp<Z`|kL$+hy91b?1k9CEkKfhK~Qb=iUEd1sXN0G`2v)LYCWd<M8{ltZ6`GQ_EdbB\nbBnY4~bcM=Ijh@<|VjVSiMu@X=qFIUAx-vtD^+JV{ex+F@pciEK<X_OaMf$)5TE!CPs6fdv1TjRcJEn\n1Y^^sV!%FR>A-5?w4@bXvwak@*>E_^a?de7IZ0K-b+un0e7(x-0QTJ3*tf1g%6jw@@bYGX_Chm8ru_x\n-gWZfDsUQ(I(EBGTu#v`#y6_eC|yfAqMb}8m#7<bP+J#6!w^fYfp{dD#6xC4hI5nmJWT?=d4xwr>w!_\nqZFph4V%D%1Xe<uegS|jYvr{cOVcvRt!F)Tnu=RY10fJ?40*$qr%b4-8f<df+Y$UZs9RkI_mK%O|B!2\n-=O9KQH000080A{lMSTkYbD^UOd0A2t903QGV0B~t=FJE?LZe(wAFJonLbZKU3FJE72ZfSI1UoLQYHO\nj#XfFKM2(7RtTb`}v4I`t(HBV>`FE~eD)7eVLuc9jY)i8ADRiVjH92Di~I+y^TgL$sAb1T!r7BU-?Za\nee(_?OED)F!&IipPY|q9#BgI1QY-O00;nPviw*tAg$q^000300000V0001RX>c!Jc4cm4Z*nhVWpZ?B\nW@#^9Uu|J&ZeL$6aCuFR!41PO2u1In!tyDW5)V+Rhi=dfBFiBuQe#^{+VxA^q$(E#|NjTL)<R+<Ej1E\n@F*B9bR;*!sL7obQ1SB}4#ji7!ERcnJ`+fjvpykM3e~fUWWn0yAZ%XG6ONi4n#zX7ekX&!wFq}Z0ViG\nL*>R1ZFD71m|MiZ>`gVEYfVdWZ}_p2OE#>H5zN~j0UUFW@lC&RziUf+ceP)h>@6aWAK2mofX{8%D`VN\nrK!0szQz1OOfY003}la4%nWWo~3|axY_La&&2CX)j}8V`Xx5E^uXS%)Qx?tH_!qe9u#C>%OTn{dL4V$\ngD1y1rkUg2Ek1mGYAk8AP_wL?<j^nWbDj5r>d+wEh4wVad#XEe696Og8uh6rRyF^yZOfJ|0!2Z7*wYs\nyM8m9rvJvX-wr=EUWfnaf^P@=Ki`i+|NGnN5nht0|5u0agD|N!-~QJhhyJf+@}w;Sa2TgCf`T!WqH%(\nuV2UIe7$#5{2Yobw_$C$CENO3TaRm#(k_}F52y}xG8<^P;$c8~T39<>P4H0iJYQv<P5ZTbw24yyMu$*\nSgB0tXoj)&2PAvbimiSbQ}Z<u&Pq8l{W1oVapHZ-zH-_C$6rwZ^55^rd9!$fcMp#=H!jLB;v1m58ACc\n!shxB=^os11&8B4(3d%ZxF$L6T+OWx8O4)0>doko1OlEhV8g5jcu%BG5D4kkK+B28Mv64D=t%f1D^Q`\nZr!QEk#mz))HT>kfta?Z1Fr>p&2_W9GfY7j(z>dNp>HMgfR++r|ueG$%ja14N>9@c64TOud$^Jv4|~l\nxyBo%{gf^C%w@X6v5h5)aTlU$9!mPnNAWDYdVPe7Pf=hGZ+$w8L(~BZF(Wfz@hQ)&|8_vL#Pa9CcFhb\ni&k2UbCejEK2Z1FtL40Z#c7!y63qa!p8bL$$YFyehDSGlVtG-R@S!}6Fnpuw0=n0Nt?8GOx4P~Z)Joj\nk@Zv0SW0^OhWTr=5G$X=cH;uxPolz|md=QOh$W#iQj&aJ)%FJqzCU`ZX`FJ;U!vCvpp=1+I|q=cAYh#\nYI!EQ>3gFtW?>9ov96+Ykcb5%|z0A}=_++NHzrEO4y~RySq47Vq7@c0}XE(DKp5>$skub38wLWw#>r!\nXtxrs#!l6ZqRdrPZQZi)|TBi7QE9m*tyti9E(qy&Djx!2#+UEVe3P6qHhv|%b25E{NY^cGhJ?P5aPC%\nt|>|9QsUw0(S=-vyAqRb$O#XXt5&Z|dU~9hBDGIPRmH15jAEIzOnGZwz$>V`+K2p+`9<&aq3+<)%`M0\n%+Z_(Wq;mQ(LQa;5+oVj5iN1IDoHr3M{&=EKIxB-tg=~~G=4*$=`)V`^v9MjuO#<@SmSW9onZIKs`Ce\nXJpKs6EY_0cv%Y|GeoU%kB7@dZgLTad0JJ~m8T@u2P%`|W)%NOGUZYdU*!JQflqsXmCLtJik?!q3Idt\n+;Yekm<NoW%;Pv0ZB%{MI=$T#hrd1oZ;bK+jWC8G8&CXY16g*E4gPS)I$udtMeYGr}AMK4Xbx4?K8CS\nmb)VrXqvF3c9BD_hPtM(oWbR>G9cJ`LP|0I<YCHJ>MJiv=1wOcbK8+g5*}L%Y3M<MpC$Vh#k^xJG9m{\nH>eVCR^Ct)9z~Iy;S5)qA7FfrjC~}@c12_&gwc9h>9#YOCU@1$ICc$3NEt^vO!8$->(n$69vq_gVNM7\n6%ItGh@zpk~Qog39`UtV1==8=I-%{eXm&-EY$ocksKD`IEo7AL}5Og;V`8Kcd`&06sRm@!r&u&-lRG;\nl2hJ@XnC)CQs&OC-99^)nE9d~Az8E^(Gw;D$h7rSLFdu_C2lrsI0@MrvdGR#Yug_;O$H9Ng2+#sC<70\nV`t&oS4p&c#~1sJoMY!`c7*&$lg2)P+B8XwXlnC0_gX(e?khCIB~*wlC5m3i_hCeq$ef-n2zOefu{67\nWBUZIQp?OK%#LR|B-xeTJy)#|5>_zE3Q$~-v03|oW8Y5`j2n_Ruy&8ci*Za2><c#>wk;>{TsqC%(oxs\n+b>;`_!m_Ce{gvpsQcs5W1G~)qyF}q{**+IHd*j@NZMb(n88VyWKbOb3Vf4fK~?MppBTEKk_9Xi0A2v\ngh)qf@a2x{I!Z#GaW%x_*CEyJPZ(wpkZ-A-{^@3nx6C@jqS>}ks1q=bIQ}Oac5*svLro@onfG-(uqSq\nNIzy#n0F~RaecoU`zs1x)C2H*{-Lb^%NO-OHoXj%4hR(eALXoeSDhNA_(LuM1v3yX-+r4bMXiux<?6?\nYc^zR%qU_=*Sln5=}KH<s7FBJf-<h_=Ql%jP8VxweN)mw=<IGsisf@XyB65ZKi_xY{}vWAQ{(;nketv\nkvcTqKbJ&uq8bO5D6c6?goXmK15d*K%Yt|Teb2FJlo07Tj*ABG;v+vO2xh?pQ^=PK2Uqh=a=1yeIBfm\nfE3Yr#9I}KFyj%{4#3H`!M<xewV8c>Ao{NSwVz%^SMvt>b#?L1<}Cy;Z=4-CkeMksn}ot=lO`DW?gR2\nIandfvQ=jcox1=}3w^$5%H3}l4S!$puGOU@#C}!^vKlaj3*Dpw{Cg5*x;L}*%Aq)Z-`_t0)ux{80{W`\nlMR}T+mrijNg?^<S2?bQ2%Z9=)~!7673yjOrfD36^bRvNFp&#Xl|S-UBM2$o%DzkEuW^)|Tj1#t!}=8\nZ!E?sEUNqk%e8ELU~l>N)s#2n&vj&t?;1>Mh=u*-lVKUC3_Bjl?OJUvC=m9gJvpInHOh7cjLpvcH=<x\nqI9%3L806ZQP+9Jeb4S?<|k%vu#lMRE!%MHyd5vjCybF7$kXY15fu4d-;aY;@ljz$OGGU>q_N}1nNBb\nb~&T?EcbhME%JgswKtnB*)0QCJ2~e0dM?-j$+0AMBCH%S>KxRkHaAal<vh-iR&m2IDo8(@FY7&upCSn\n@?9yLHd^33U#h=#lm3ls9m&f->*-bu&`qzhz-x(aK9Sb^JvwPj|k2~W?>`Bw;dQ+J*dvd&%>1tCG9w(\n2(&SA=|2wrls++uI5bFbXwTE=I44Q(4gPOgnJBs6=;?ZV+Aw&VkAU<ox)<@HKTt*h_wqe18xO4l>3d5\nWvn1}3;j#BL$nPyl~mxdv87<DKSi4f;hcz%u~eeQy*N@@c}>!ZSG524oNrl9`Q{zR=ddMJY3ECpmGjD\nYHXgs1KvKXlb3RZ0SDE>{n!50DO{Tg+~ZokRa3!u~na+WD>-B#Y8^1%_uHk?=<Wwd-%%r3yU<kE?4Qc\nj;_baTI0_;#lX$_Y#^Hs*epMIt2XG-3TEhtcrdwbR*IrgmzC2#<yK&#0n2IOf<)c6tEoD_iB-~h7U`w\nXd`8Y9zY00F3i7@4KslJi;~;_ECvm=(k))k3usB%<)TXJJW`=uMRc0&n=2aLRB7`1m`a+?ZKRtJrij2\nbErNPZiqVj!C+#xmZ_w0Hb2qKG2qPFz&Bj1hpgyTc?xN~}H1%;lm=aqhSN!oMGZ)JKF(aDKPuDYa29+\np$Qg3anp;E6QKR9^4UBn;t9k(}^2ti={eB{GN~m0xNOoz1rCJL2Cb99&TKMcn{^<fkxctp!8hWb5IFV\n*tLtAO3|C{A)9O!1ixP{|M6<Mi4lOP+y@mz&D^Q8GI8EK(THRYC**qK<Z1(GT{Pi0CoWc2LQV9FHstx\nV+_C^jDt5svLVS$8f^${lO~IH1sG1#8#LNb^d=5BD7{P^1&j2h@ZX>`0#2812x=1mlqWY7xj=LfZV+@\ns!W#w<fM7XO7%V4FUt&B2@)y}4%qAu`IR3(IViUz1JlrtYa$+EtK~EB#IQ(mgJTDS?^@-AK#<CCVE0h\nMh)96P2O(x3XsH%`@i6<a2K44olYN-R;c@MVnN;9=lG(NQEO-Nj|imErn(oV{#u$}<D3C@ZKViOKrWQ\nb}zGq9@g&#L`~7u-vvY8-wRtVR9WKn07qE_kCRHD^e$6y&W@nRTmN8b|l?rr<vW{K>YT;)OLn1Uzp8{\nk;Xi>@pMNTcV|b_vannc0Zk60BV<iyF7qm{*RXjV4m=5XM&tJfPGW)0(djQwf(Y{aqnB%kzI}(4gcEK\ncAEH@b}dv3$eHB*scszt;jaar6i&96M;v(^c2gbr`YJysD0t_c9-XqsT<;2RAmKu9PUL)PA;rg7<J58\nX^`XR!7G3Cse0T*CWY=r7%1mRInzME*E+?$IjE~yZca5!S4LP{2>Loj<zIoBzP4MG5JIuN|iPM^w8E1\n@+{Bh*=JFa^KczgvL?F~bQOZP~n#uQaWWcKWMKRuvxEv)*xC$0BZ%poO@NTpZHN95)nvyy!>=TMQ8;U\nJNZ!DdM!$ps=^KhJ#-&VWbw6BI`bW|!DJ`E2*FuxdK#*6~S~H7`XRQQn5gBdJ6D$S=3H!pw_CA&o3-$\n3#KUVLc_#rGoGIJ=RNoyvmo72k67H0oWKtZQL3!WIAx1CrSr5b}gPak&D(I8^sX<IhpSW#EIDW&Ol@F\nO-m~p>n#umJ~HjiY+}O4H+Taen2GX_mJmpIea>&D5Z2%&K|&9N%$R|wNR5tC))ZAadteyUV)k(~;-q0\nnt0CB(YBaGJ6k_tyQmD+}hswL@W*+Tf(Q}(qk*5ydV$vXRH1a4l)k9@NTzB(MUmY|L6YX`6x!DuCl=G\n<@C75an<ebF{P{HH+=|{Q75qX$N>+@>moAO1VS-wB!Cw(qOBq*OrUaT9wg(2~F#TppUkolP~KAQAVk)\n%AO+*AT^YI7f^$QZg^;893P<ST3*gy}kwluV_Qt>iOQcKZT<26}x__&bh!SW+5dLag-QVYD+oR@>IlX\n7uVCYh<mEiPte(lOMTr*u}lIKS3s=;QL-!W$`!#IoQZAv$H-V+!lbSD(>&zT;Kj#iTrL`{f!9yRG<If\nH{}}r<2U;AThYC%&j#>^Bz~8mNt;}w<Rv^&7$(2{G}YIN`2XT+ei6Wbx{@D36+uXxBw-r;Qv3oC0)QG\n}n<QRL&2hZgcwu-k*kbWwa0ZeUNf%9vrN4vK5PO%EA@wp9V~e4e#y2p!i2?9MFX@SI@OV+g-~|b~F$=\nh+%x_?odRdGCn&Q|72WJmA5xI#0n#PM=n+P{>vK$498l@JXroj2)O+qY<0FuGjMZbgBFQYUXE~pOVGZ\n5Z%vcaRj6u;$SdB*BbST)_=aDF3xJK<-%f*ePCN*C7t04%}&)N!360^K&@&qX1A=vHm}vml1PD`G7R&\nfwQ2E&#Mf@C)RYQ+|qK0AM~i20$=<w+${J=t6HIPXT!A{UGwj>;yXRFJiCp-3Ka`-;Z-22IUG`6!7l^\n@H?2J8W6tv3{G;<V6AFEoATKP>DH@p%tH2OTX*GHn(2)a`yqsp??Ra8)Uehb8Xy9YKE890nFCrldiXy\n}(7`}B3y9$PQwW3Ad5d=CxdNyZzzkf!0;(7sw4d8|A+x;OQt`4902R%mKNtx<KbgJ7wlC4MSO?Va9X@\nUSfL;Ky<KH|~0{=1(MU;?O23(=8;KcgQAfUgb5c|OCOPybJe!r_31tU!D;6xJD>4a!Y4WvJ?ZhdRG3n\n}8e<BW--U++seky|may3ia|SLw9tTJyS@Wgb|Dbt^?N6Dm~Q-7du;d|$DVl}ZyF9jfWpjQq~=@^ff1R\n|MvVbyf~)Yf*`%Ka5Ob*SvQZ*~2*U7ucKAfq`~F<12)H-ivOsMG3$HVePD5R;OJmDR3N}2joFKNtmf~\n3HAcPC3m|^xV`K=VWpmB1!_Z*zL3vTRX*;vhn3<i`lLwcSLV@mXzL6@Wk=DCOs*>fJHv6N*W3ds>oMQ\n1h}*G%7+fg*w1f2#zhzraZ|6eZ--xwCt`do)+O5_B8n8mQ`sLbWMzM;I0jhQH4C25+9e6}r>z@+6?VI\n(T6;**Ppp2zoH_OlW`<)YBuf3;cDVTO)5p6am_rj*H!6!|W1=h_tvw_NkdA;p?E7KC$zgtfR1`vs#n9\nzE=D?ikApn^*!PqmE;+q@1+I*s?n`XNGt3ok6_os;?u2a7Dn0m+?rigSs;1Jl6!3kyii$@ta1vv3;do\nzz%}z>mnNWxHM=yj5WetexE*+MlldWc8;f%JA+AF$4KDYWy*o2E}czXQqb^$Zp>C!xd3Znz#0j)8uib\n!*z^A+xSg~NA8el!p*=bGkcozsFWu?vXgG&T9x!40R&jMwZ^#B`6=lq^D#?~N==Rx3<T=5=p#T?>P9D\n~a7h%?6z=PmLIvZhp9=C$-KOgiVq7EQOUxX0_wG8i#u{VR=oPzn2|TKiETR|d<YI;3Jf=wRv>MO1s1K\nKMd4FiD)v$(=2PvKIv5_75>sh?p`-+xo>v=K~LGR_`k+l!xRXIi%l%;6o4)@!~1I-@BVS64j6R9D1h|\niG_%)@$YT1>2Rr?b{Mv36U7{@bL6W!WDv`^{QiL`esz1K-q5+$;|0uWj=G<j@bg@P2F={W+rjMRy}#F\n#`b66tjWxMbReVLIr?k1!@(iUS{ZMQL&4oIt1z%2<oo|H?j;xvBf(~#*1hNe1lFmF|$F54T*0eKmw5E\n2dHIm6tu+jLLl(pF$19Z1MmZH(s1D`RI)Gt3|TAz6gU~Pc%boQS>7VJsfD-@>0$?8Xicyf`auUE@Bt@\nSY~smcMM#1T$!r+VAOA~cpuNoE_YY>kv0saA>KC!SH7;TZY1|u40K3!41S)g^tf=6058!ej18|d_=?5\nq8R$yZbXzLmPf2o<x2+8lTDR7byqR8OO^y1k4(Q*sq0{sT=<LH6Ka32=!1<#@7jEb~0ECA-r?_dsVf;\neg~h0eZ|IRJAUY;5!L3xqjxaGEih#Xa;R(=lP?2k&^MiDeA<hy?p*C9_-!KyO|}7`ViXXuLZ*MTi^6t\n&K{ZUo#U}ZlH15+k29Yrhzhjh?>LV)c(<6uUK!}D%iI*NM3A<r=M}yKXDfL8x34=Y4e|}c<5&gCfI9g\nKJes*=Fg{Y+NZ-%hDtUD@px)iGPgPq?4G2_KDL#{)eNwialIf#{9Zqu5Zj|CG^}%(M~?Ri9?Nn6oUBL\ntlmZHN)aJx@I@w+H4Dau%lWK)~JSGsPt%nQ`ii>I<ujpl}RZh<NbQ`zp%PiPkf#6$TcKJ~(#=E*DJfA\n@oiEqj%uKT3NAurQiT4@4t)jXRgnbj$bGlO^4s(j$qPWw1^_KsYE?QwQJgqbgTBh^8M-?i?X2)+rmhd\nN=l8F`85BWi<PgPqzvK_A$d8m>g8(kCo!x27%=1!B_YY8P*blDllZ+qBB)sD_f6+^JE@Vm?;uZe}Pdd\nPH^VG~%a7aHwWam!B9s0tg;{0XwMS#GNveE^VY8ey48~zN=D(9dCQ%H)@^!QQb@6PJFq?$K(yfQ*LXF\n(S^kuA;@&an}V$gM?y2~QGE(|z@T5x3v=;K%WHUmmWShKPlogTCYp##RF9*6XW>Qwd|J-oc*~OeiCNk\ng%GpE9t@_T@0nAE2-;vJuhiqSi6?~x{pbwusFNHKa@F96zm8;&Tp5=+1%eDASJ=WExx^GAO<Yr?0xYS\ngIb!^6DNP`&QS)gkx+g^y4uc&rK$CAknYm64#%hp0#xNuo1MR|;~+nE`*{6L?GSP9Vm8EI#IKSO2@56\n=g8A88F{rzcbONHAvPmA_p%&U>^1zn;%Rdklrx;k`7mVXkuzYr4PpRhU^Q1TKcgrN(*QD4%vJMdPK4M\ndyw@Ni(H(LX)sq8?cV7tjR~VKisD2CURPb9Bf6scLh|T0$xf4jO=!SO<~jBy<|;I@d!FSn{ky4tG*$S\naB7GBWjALe@5xAjpU*>q^~dKOgSz@yFn|bWy?JLv$)K%TxDw}^eha)X`zL(z#-nk97>M(aKrj?Q>u2N\nFp!|2oe4z0k`~QT)D9wBY#l*{tOofX)PwB;)oJ33HR`LR55?xvV#1Z(S+|lq$D2{>+7A&Y4rHgeM=yZ\n%+Y|c0UcytlX=*#>~!wW!yvjMPYutiv>)Ni1eCKeoyU;b<WzhFF&=OML80p1eJI<a_J(xSfMB^E7u9m\n0u4u%|C3KvA!#Hf(WZr^#Z701`gJ7bvF5zk*_^Up9K;)Ar4CM)_q(m}&hi(2Wv)LO+FsNfHtwe(o=N@\n(0-YDe|lOp^x-EJS+p$fAIs4`eh0GGM)zk$bq-WFMyt(ZL>D(fhO9YY8ZMC{nCF4{W4>haXr_(MH8n5\nE^=EG|1S|<uRhRwr_V63Me%2u^1BEx{w=~wSt7i^uEPhAtlfY>gn<sFg`L-q0=`w+a`bZm>{qh8naX+\nI<8rU%q+zzJOI~=vb|6+;E+fzCGlQh5A!9|GwJnl6+;&d|Lq_zwA|0GId=?m=b^SUiSJc?b-BY+>nkq\n}{JYEM@uqFr<a&L33t-P`tqV=Qd+U>SM#@@fK?|p46eZQ00mSW;;q!VjUV6;s2^-Awdkv>H+7IIMAMt\nsmn<lS}!JUiD9X9>MZj;F13Q6A&jHxj2Phx9`G0snAE9AT1R@f99xiG-~iv|`Pfeq2{)wa}RJVF)O5H\nOFSe7QJ>z<f-!Q-e}S@5*`eLiaT+=O|Uc+S4z2t&u0WGyMu{%cLi334wJE@h}0_bgS}uJnd_bjrTcV3\nSM4e}Pd!PlF{vBE`DC|*xu)vdx`6CxB<=C35E;o#p^0+Uz81}c6xHB1I<TT%beU}In|K$ceOI~uz#(e\n<yp9HudrC1w$6jvMyJN5o1+zQpHU^t$m>?Xg$&=Fh)>fyHZ9L`i)I13uLx|)YP6uI4c*2=S4;i$c54k\n`!on)Tx6?Hr{t-GR|$=&An<JO%@&q|2=s?A`edo6S(yPH~;>~c7~UC)HQg_<ccsoXOX>M5PdY2x%9_}\nI>jAZ-t}+$dUFn`ky2eF;eJ`My^K=5cW&=Fo?$)Oje-<WSTsZ=+(?F&H)`-KYvqRa|iKi3+FGVcK3+h\nc0%<cTYAhkD3DR%y&`%eXxQLQoz5Fg5xK9_$hSG2y%HxpTu!i4a=r_0fkuF@XcPfgPD7LD0qM7s_cu-\npM6P5y@}ClgMohCVgA_-2Kse}`P^Wd-)?Py&w{N_z;{xKrVv*>n)WKi`_Uf!m1mjWQPjcBHu9b(gwEE\nNFudRHRr78OG9Np|IcMU>-PINLtmyL<%GQOxW)mE(7=2$SQ+~vJ^Z3MUWm~6vOBIZMve!AvjWK5u9?;\nc1uikX$a>R=*xNo6UT3^-nh-o+8vvmWDoHJS$63!3~u^O^oZQ|OwaM<k<;~JtE?hapj9yJB+c96Hk4s\nzY&?h>dj5=6rwdFeb~Ieh4Lch2ro8zDW~?<&}!;d(8c@@ThGg_A=nz8%<o1#ba0hgUaSzZ)0dlyQq1t\n0N5FrVDad<t!eW4<~Q3S!TRT0zXV|?UKH>CMdDP=GIl3IfC+iSA>j!6Pibm#z{G92a-e_GW2*~Jvtqm\n4tPcJw!0b_u!?7lX1eYgmv)~!jd3&~%T|2sm?N$eTvkD@CTTGUZD}^!2@4)D4DY?#yJSH=&Nz95A27k\nKIYPW|V}Es4Tmh;>7UzZa?L3qSx3W~PCeA4t8&#T+lRDIwyTUzVzaFqEr{^)k!<s)!Xg02{-f0i}P?L\n+c?2=QS_sy})Fu5tPv+pNYEge);QSh7SpY{DyiBVF5cYKA(oIT68>)L0$mYE<tI9S_g+No8e9(3V=j3\n_I$CVsQ-TT4NAx7d-ZwbF_Ens)d-%R1c6ASk$dF#YN<2N0bco)oh(FNksHr!%MKSJBQ{$&X!LJhZ$P!\nH<8PmSO(_E&I)w-_kPdCt8M6^p{clfV&VI?8U$se2G3Fu_f3p06gmzoQEe%bO4zyMusT;l9nOq;tN6W\n7bBt<Qwl>YMhifzf@JZaMDQj|miYjCLtpXw6tUP{XySJv3G~aP5^bn-Azs9bG6t_1lW=JSi-D=-Pl8%\nZEntNhwIPBfssfJ}KMI8{yp0SOU&}I8vRUjn$Z`lH{)(2#SBvL4#r;mpBJckOEt`L#WiKkG|4hp)7S#\npwf1H+S{{$@)G{}J!*HP!X){mBzP%A1*Qe&=met2x8CWFxt@yoMyEZa;pb})aM<#td|Gtje4$QusA^B\nZO5af~;2>`0Wsob>sfR;ydS!g>nDF6)_z6nfvt$%+kBf5x`8FjeT9lHA0$TWCuVq;n`PJIiTqtaKDe<\nDswUa9ACV;x3==NPZ@elRRnH*=3pzt<XbwnJ&k^rLxC4hUf~A081Z=OL%}e{jjE(ogkRnt<&<sVMQl-\nJRbx`nI=(6G2yV@$j9w@-&hPEgyR4WZZ1ewpzbblUZ!Z>mK2buW>pFCzRbdb(*@<KTtXgua4jV=yUwf\n**8-*biS6RO1=apYQgt5$)Isk7vAb$JfDGLrwQ>>&og9(`b6sB&N*ixCqPVEGHc)FRRUfiqrFjB{ed<\ndx?rUg$J>Vy`q)p2)54nBL+137{HV=Y&R4ShlxJ?<($*n5)Mx^xBqIbLa5<wOr9z<$Rs=!JMqF%LXHy\n4K$k_9y2#;P?P!!31->`rs&MA|E~Mm%Da7jKX99v4CnxvY5B)Z<NVhAcvlesJ5_C!2&@`z}3qTA>|Bm\n2$HpA_GN`?A+DP`Qb+2v8c_<gWy9E*>~Cg((vfXYSc-S)71=Tb61{%ZP6YI{LCNsY+KDP(%8um97kte\n%z%9&&vsogEQA+(rQe&S#ROz(XREthY6$g^qo|r60!>{{&K?~Ymi(k;3Rf*IFkgK6R-ivRS9lJ8i|5E\nVW$SCo)&;*7mz6D-i6R>k9?OE~C9=oN*JOxaJe7-~W>k1U_++_}1;Zr>W$VoTi5vWagM-)p@ZHGyvT@\n3Q`CN4v3eF}19@SZqrHh9;V=OOrNjnQsFN@{8Ql#IouIbIf2>oDUG(z-w^RP18PhYqJC2sOu9bT+Qil\noEKDni$JKrxSxd&5(9qqlftwt$Yhiu-9!dU-davoplCR0e1L`j)-(W@6f-`UpicyMOmyeR{5b3W@<Aq\n6ny%F;f&(Fjwv7A!q%8PvEqgjK9KoV`Vh2n(VTF*156k(wsTz7uz)tS(fN)T=WqrX4qi4&TF~akEZAF\n!@kWvwbPG%pwB$16FY;wPI~?!Cip!;B@<bTM6<m(ljBhx7}R&}lLkZ7Bf6oT9`-FSps`>8!b#C6e?1^\nbW=}~`uRTR6+Ur1a6XB0#aFL(owz;CXVHT&PhGL|_5o*=t!~8gV2b$|bGe)~(cru0)cI$3q;!cl)cqL\nJ#c%rS;AfcawEnqn9GkqUJtG$Yj>k${pM#D<=wnM4;czCcXGa$Fp(67kNagD(d994OO$AvCd>@#U5Td\n+^nM1fs7T|X5(HxKH1@+%)DM#ij2=Ol=TYWp^N3|GZz9F46P_|~qSqg=L#LyOkTy*UT54)p}iw^xmw^\nyb2@E(DoZu$S@nG%49|J6+w-<%5>=lk@#XmrZF8F}x0M2jZT^Y)w8P!Q;d+pe$vM(+BR*J3@JoTe2#^\n+l+_wHJp(6etm4$SsS0$(}6jKWq9TI@N(=lpP-<U-j<VF2FHkNtwQaod+%9MXc&>$k|ll05vn!gykq=\n~he^S6yhg6gx@fkksi|ZK&D--MTf3uoxgJ9)Ei8R!@*{!lxJNLo;lNmLck#NTE~tzLr_41nGl}>nQsU\nx>hwue*Cj>Usz3)9sJz|jCAgkNqz`;9e-=-nK$<&!OJ2zLlKD9crDSO;|^!9zX@66(v09;V3tdhpdj5\nOB@!S_JkS^5*F0xN9qK9O%1gMI_l$<<gTV_Bk^gqgHK&DKe))AJ6(Pfo5;sxPn92QtU!K0|L}-~4?u<\nJk=A+qbvm(LaeKdh7N|YFQdSeRs+=`iLufwxCP*-s2xpQ~$z(|7Xwi!JU6T3;TzlUIeBPm}X#_hB1;r\n2$&%ml%Zh+#Ze5SZ~{hvK>Rx97umpX7D{Xh#6{qRBE#^8Ocr}0oWA}{mk=d5037w};3Rs<ccsbAn=cZ\nOT>2IAgd>Y@GfJ1d9l&-|Y=cKjOj1ZKMo5C*MC5M>c9bmPx^c8&;3a05VU}eqfllcrA{K*Yj4o+FU?S\n`-?+0B1lIUnLzM`*$9Kh)pBk9W)3&%^+5&a59MuJU%{<RBo@n1cQ4}xvjs@YN8<&OAI9r4p4_EuT@rC\nXBcpzN3E+9g<Ndtsx`@R;)}7zvMRsgJgL<zdb%>StdAK()jY()iCjpU{=mJUp|RjXIb3{FeJ+FCG<u!\namsdmv|%X1dqG%og+`C2e1Il%yaKqs^ecJlZ@Lu(lx<&Y8HSMD|$k@z{2j*INRf^QLtxy776#lbARXZ\npg+65zjJxepIzVIxjg8{>-+mjxxA-xBqN0<62j<2yPXpB!1gzq@(*`@d?+RonL3@H&-f)i5=q*cyPgd\nCElFiu9u_q+_&#Q~XOBNZJ0F#0rj7(Z@8g_p+=E$lTV_{p>lD|tXWFoB@6AAvbY|WQ`=;?w59k3+QG3\n*-3`lr_JCTS}3zY);U;&viT({PPCN;2+PcWPwRK+u=1C2`JEU&WDy|z0M3kb4=ldFP5cX6v7Rl`h^LA\nf;(mUqKWn+N}BCHocDtny;MMohGG$Y)tUuPwvUBCp&#_8Iy9(F`E<w9|EdnwUC^#Tv7U9JkT#bi6&3O\nCCF<5F&T{a0SmsLK%5~y%*=+^t61fZPiqF3g|er)ANK`>)5P5l5#Vj2F!CD#Stjhg|V?RuRjeQ$ijqU\nIe`_$Pvau=W?hv3;G6ugLjJ_kH2>IKVA;bB^{NpC!Jazk;!Fq`dZ8wGuL-uJF=#xvp-A@D@QJLtKf4{\n1?Q%zQv+wH25^n}2@6JqD1f=Nn=Cc&pAD3=(Z=6y5(trrPoZzbH91M+<(UdynGr`wf*u*!zLidC!X;%\nbSOY6oyMz{=jL>sMlIquKr=Qd?cXb58ke+sA&(`&e^(R<~Vr#;Xd4B_u{Cp-|ao7(AFU)@sc?49(sOA\n%7$IMK_R>DfbfALr5weVa4h!q%8tUJq*Fo)Tgj%B?DPaC<$Z5iw}~)goHzw7m%<4}{~HKeSf74<N;4^\n!i-Kctl^XPd?l#ncgXYlUXt@)RUp^PT_egA0KVM+Hyk}H0)6c=Nn1}m~lK!P(jvD;;;(jo@E06`ndDO\n1-GV|-YbAKGqiCCV*=Khrq9SesCD{s0$Z(N;6}*so?$?T6(w3nt5dNjKVD5bYk=Ge4M7dZzsU;@|7qp\nPH@W#H1aUllliTKT`yNF6+0Iu%*L_2O2j)NG|9{(zpXDz8FyyBc+b^Sw8Dt5=fypJ>CkPjiOkZ$^P>a\n7Z43~EB8V#0kVUqe1z)@<cBoV$+a<O!Syzm@gDh0-oOK5QL$^!y_Qt)ChqhDsPB>9Y1{v&{6uhWG~n$\n41RlPsQ2z%NLA2_^zG08W;8V=7w0nxkk*-~sdE=>pL~w7`4(3Uo%84Mr@T>6ejgv6(H|LVpS1uK<)s@\njZs<%gAEx@{100>{-mAkMJG<P@c00STP<H(F6k4B*5z_#GLVaB&|5^KLTl|d>c-jxY(!4<irV~EX~ox\nPQOU!-^KgFV2_#(mWV;ii?<jd?X&T{ZS>|p;_vt9oyL+Svw?t=el6vFCEKWGkm!4O@>ApKk67l$MCr_\nwrP2r3YoO0O!hoFAioX+v`-hywj}RdJJp?Fw3jxx}7+KxUvRLQtYB-<aLMB@(Uazddf6lP)7PEuN+4-\n7Kl;5l5nP;J+<9Xhg59qMhV1Ze)l~FjH;C0Q`9=A4g!q(fE)>g@`3s}m|f{D5BsI3HKtN3`5BQ(ajq@\nt_4j$E*O3ePByp?5REwwQuickg^eU9arBdsv~xy18ULL#zo8cJO4_ANq3viFd`?$Hk#V=+iM^70xKo^\nUkRbtSQwddGTZpe%f*s)k^4fb{ZmdV6-@IyDoULH4h4gC(e?Up5lVAy7$3)C$TrJ0g9KLfc8tG5qrcG\n8Zg(|8}{PXClyDC(ahC+F&Uc`<P~}PD8;RfT#n)y$7Ah`uPNtNDl0KQ+|M$(<lY=ESp-N-2>*<R`d)-\nOp#BhXG^0?@ry0%HJ=z4lb<q@A|M0<Oo;_yXj$H=)+8_ED(6~wITVFpgfA+jUf9HYuv*!i+>VW|_6|1\nr1J0tkc27Zsfg1V=v{qA_%(qb3n96lXllAXESj7kpon6apjM&qx%gcV)lMyTFdJJN9J>JxN0P}&v{m#\nuF!H(`q=ooOTMu+p4NXuA2}^$*)TACLh)tLpyjWZAA)u<CXR3)G6JBV=jKtgN!A*xlm-mL5`9W`tKKv\no!?KF<#XtFOwvrx}(ILCqbzA@Gex8!~J;Sg=1qt+j?>-Jkp;mlNTiR$fk$0Qpi)jRS0qt?%4_zW<P%L\n`?<A>0F3~!!)sq#7yc8kMH7m}cI`axTLE*FeaD!AnPhCP<`tmH#$GY310}W`C*1CC!uPJ@-5Pzy3;t;\n-8o@tO$V@!_Iu%hDmUp*GdVO3C+w(dceEM(W@2L;kv`DJ>o0UZQwW*q{NV@Nc`Th7m1;YQG(|#cF7i0\nb!iUI24!2);TEAo}ZUNNuX;#^vsPQfd~CSF`mIDqS~6MceLz%3Fj5j-Kh;AN67cuNA{#TG;az>DBZHc\n|Xa0|NRNpkqjUmaO`tvkG5IVWh#!Q-v)qG@#cha%l;`|KTOCmLZm`9fDZ&c7iX0KYBU0f?&a9AhRR%b\nw$+T8AFj*WN^A93lsETLb0&K5Dm#+L2>iN&Qd|2bro_gvN1D{YX9cD&r*@h%0u%<h&~4&t*U7H#I_}q\n-~-!k&`*Ozz4OlctO&~AmBb^YUlamp;u%0N`X-5u@u#-S*GvCcIrOhC{bLOD&n_M8ciA5jFF)n3@shj\nByWGXJ?y@4!a?L4jFK|+c(S%OXnIJ3Cx(NpAxC>H<)($z^TV7c7R(b5on?Q=RN;T)zT&b{y>~`KdVW@\n032uh1+!?kN9*4L5?>P3geuDSwSTQnM#|LC!F75mTf?yIJ0lT)~*G1^BgZoH7I(Jb0^n{+oSPSSgJ+B\nS?u6oCyxXQmfQPeB1>(_L5)*?>le3vNupFmSa~C%4X*1#BHTBCYX6I$RJeqSTnHXF)-N0NUYpUFOr3Z\nI9(~L<fFb^AEve$lGk`;eigK7MWG7S-U4)!r3{jh~3%0s@o=kuV%|ah>KhLNl!4MPmjskWw4MZFC>+)\naAeeR%jp*!>2E`^R>g*uTQ(Dg2H#4WvgMc180dR!%xQh5QgiO%G#|{+3FZiS3cPTy6=LSO@+~s=!YT3\n&!1OkI?+<-BfRwtM+>C+nM^gB`a7$xtB^?Gxs)C!w>3p8EfxK<Pn(0C`zWHbEGdF9gp!Q+O**S}k<#U\nVx{arr$J9vhETfu^L<0D?ga8w3PAa_A}oZa{yvR)KeNOEh=rMl|}4BAslGHY=Hc5Wdj<ue7B$nhG<hL\naZqPIwRYc0I1989Pb!magp8b*~-mCyOfb5EG;TCGDelu5DPtDPOb&c+HP@%XHQ^RE_t=*<#r)lXIk5n\nF-G9(LGS>K4!yi@l1qiuU61=LdaWir)}KtF()afA<GP-Z|I{%#e2d%pKk<{mT{hFeHBtj<S%JVa9U^V\n4%~k?$T_JV%OCIfQx$ejzvXpQGu&In-7l3A+_+w~^D3+u*gCZ$6ZC^V7f0)=4;Fz$JJEw&<ESd_>3G$\nhWY;HE-y6FyEii+V<T_^vq28?pBJFUVP9?(l`(|^Y$chCTzp<dLP2z8g@I%GM&!ayWtz*y@fwnI!<Nx\nK!KA`wdCi=++P9X$NAryn*2nrK4MUyB(QWS$T2o6&SjuJ5aWfl(os-OsmOY|?0$pB7qW-);$$YP_WUi\nmiwW|s<&*oH#Cgl(931*W_}AAZ$@j9&pCZ%kmRR*@{kAWj#kUS?vJkYF4z0qi%hjU@{hFa6%CNhS*m!\n09FL7k=diCBb5$U+P>WuPj|;L3E(ufnEkDrkSNr`c@N?*%0K?4T~2F0%!{Hm-)HEEA;pF8TxAohcqM1\n)H4V2NVozmui5eNb!HBL?LPvdqj8^5u9<Rm4eVtTG2Se^-y=cx;*-OmS3c^}$$fQtd1|$jF)G<dC`c~\n`ZhU)TA<uCUwpi;NfRmN@W01-_jxQ;M;#=ko_<e(M@#nS+SN*tZ=wDg(kE@3Mm1X}}MH2d(7VBQf&j&\n(0u;;zJrKvbuoyF5Fpdv`Uos|1v9hehK?4&#sjs=U}OQ*8b{J3|YJLR+kv^V9mNszGnvD{5N0;{aEAd\n9=fJ3_Ufpm8@Rm^C%cgSoG!?PS;6^g0RW?P~W#Q{3})<>Vr3!sRk#5L3OeLL$J{b|+*jXfy}mA{>2`r\n@eKN9Xm1+kWPP?8kg(7=dP<dDlorC)^c$g;dVXt6M7>uSRoBP@^Q%VqO6J5RcN%z={!DbLGP4Dy@dre\nXxhfg@@;=Gleo5SQ<H?`O}{$QEFo><Fv=ZYL#z!zsmO_GzYPc}IzP8~B(yvX2#DKJ=v1xH`)$o*&mdb\n@W@xNQ*(Jw3mACP$iX^mHtUaI;zbYe{|58Tst16NZ$C(mI?gmEP@3V{8+uq}Po8*{AF-4gFkj(mrzR(\nYyzxL>Z#WWd7W2=2nAM`20Ze_J!V^JM?+Qa0b*xfzy)i5FPHF4TQI%~MS+n0KUa*<d*Jwn%*46Y<sjg\nY{+H|FZ*KCg8v_W3pQtQ1PelCBN`t`=i9Sm?Y{uGo1^7x*m^x2vk6@HE3{>3RzFn4}bS_vmWsT&z-yZ\nfPp2A>BpN!jRFE^GI344ev8tjnRar^!^#*p}eZihQ!6bI`n+MzH8eaDd><ed@AmS^!S9fXs78}<fd~>\n-<`fs2JvLpynsxRIF!SoqA0<iZjBhPSYjM!zojj~G#`LmrrwiHpj88hs*7|N(#1SOe!_RHZcOfZ4X|Q\ndUxnI{vE3Lcb3xVies^7EH)&7qNBW;hZ~26(cUSFy9X$V)iT(hbKTq<r<Cwt#XfgytGfUxQ7^858Kxh\nnQNDM$HPT&|$eg&Eovj{~X9hV{$uly7&Sd7R3_9A!@jS2dyED<e8geG5WU4Vo1tNL=VNYvybHzj<bXG\n|{ntU&R;sb=(5o|$>2;9$S=8!u<17i;yBrHU_Sr|88$jFK-4GqJ>1E=c-18on}N!BWApmjs`9=@!2X=\n0N&_J{Z0v)q*)AYJp%9`Ag7jU!eJ^bq!t^GUvweW-I5h+p4a=-JZS*%n`W!e+o3&ar=or@sH^9=|BAl\n9fIC#EWbr`ex$1Ym}v7un<k5YC_4dZroFiJ-s?_0e>~e_{QDtdzq7=*njGcQ$9wf5E>MWVPeovpkKj`\nY1}X!sUZ!Z}qpbAzG8){k)eoURD}RVzhFm=Fll#uH8YH>fyWNq;5@QN>6_xJ~Rn>72e-bp-KU}Q~kJ;\n;3c*-T~5Lj_J?c;p(SymC%xx>SZTBozsKh4M9^}9&wFz+fg3<X_t(n%8%I|22E_Q8;3BLO7p`c%Q`z@\n_+|q8>XvhEwc@1LZ0OG6A+7bw9uqOG>vM!ZCgwKl$~V-J*HC>{6Vk-77@afyi%(Ezn7KMs4PmSSp?}*\nk{Th^ZhEnmp3i77IP!Qba6#yr#UgN{a6q+c96LHA?SwH9BQ`DrCWEZ6RllO)X-WyytnUE%xQh2A%`^%\nWwA?LoNV2jLvuP6MWi=RPRFn=4=0Pg9XRsRpDsw!pI4VsI}GYaa3ZRW;7&L|f2aiE{dxJrkCauGAq?F\nKO~~5!HN86)@^cU>N?~Bf9=GGWFy^vRYS_=tU-kXH($pT2PTmypsq9ugB3?!2)E%v~&4A84mr64k-dg\nNh2mpTnh|k;gU~yaIvVX{Elw7TA%>!Tz&zES&=d(R2wSUmcvrybeIvQ?=+ZsJO1RG}%Odi%(r&H<JJ>\nbX@zSKwZNTy*ghpAVGF6<KAB~<{H-LTVb1$rs18*!|%g8QAKO3?9I*<}%UfbuDKAsuMlCp<1p+Cz4jU\n9vN|2;alk0JrVct}RiUrb(L(vHjyBI&jrN-bwTj<J2d@*c}?Ky{#UDWLh^=xpEIH@9>+{6$4W~&Qaye\n0xM6a3m(rm436nOG)jmE9}~r+3{NrAfbhgUJ+?I~p4zBTp0^A><M8gNg*U`^oiN7#1)$s(S^g&Mf@_p\n~6P^DC%=|CT`3Ly??R-DgRU`-uhhdl^aRdfJltCB@#VHJ?FdU<31RSEj48V%<S8<1ANfjWXB`tJ;KkO\nAnMJ$P%5wRdDz(@SI-%CKeY_!SC4UAz6^b*X1WI??6fbr<P+A^3GXh;NrEwVsb9092NU3I9XZ1Muf>C\n4s}A&W%D$wiV<)Pk8nE`wQ;S6~<ZN^8Z!g$@L-"
        },
        {
          "name": "news",
          "type": "tree",
          "content": null
        },
        {
          "name": "pipenv",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 7.0341796875,
          "content": "[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\n  \"setuptools>=67\",\n]\n\n[project]\nname = \"pipenv\"\ndescription = \"Python Development Workflow for Humans.\"\nreadme = \"README.md\"\nlicense = { text = \"MIT License (MIT)\" }\nauthors = [\n  { name = \"Pipenv maintainer team\", email = \"distutils-sig@python.org\" },\n]\nrequires-python = \">=3.8\"\nclassifiers = [\n  \"License :: OSI Approved :: MIT License\",\n  \"Programming Language :: Python\",\n  \"Programming Language :: Python :: 3 :: Only\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Programming Language :: Python :: 3.13\",\n  \"Programming Language :: Python :: Implementation :: CPython\",\n  \"Programming Language :: Python :: Implementation :: PyPy\",\n]\ndynamic = [\n  \"version\",\n]\ndependencies = [\n  \"certifi\",\n  \"packaging>=22\",\n  \"setuptools>=67\",\n  \"virtualenv>=20.24.2\",\n]\noptional-dependencies.dev = [\n  \"beautifulsoup4\",\n  \"black==24.3.0\",\n  \"flake8<4,>=3.3\",\n  \"invoke\",\n  \"parver\",\n  \"sphinx\",\n  \"towncrier\",\n]\noptional-dependencies.tests = [\n  \"flaky\",\n  \"mock\",\n  \"pytest>=5\",\n  \"pytest-timeout\",\n  \"pytest-xdist\",\n]\nurls.Documentation = \"https://pipenv.pypa.io/en/latest/\"\nurls.Homepage = \"https://github.com/pypa/pipenv\"\nurls.Source = \"https://github.com/pypa/pipenv.git\"\nscripts.pipenv = \"pipenv:cli\"\nscripts.pipenv-resolver = \"pipenv.resolver:main\"\n\n[tool.setuptools.packages.find]\nwhere = [ \".\" ]\nexclude = [ \"tests*\", \"tests.*\", \"tasks*\", \"tasks.*\" ]\n\n[tool.setuptools.package-data]\n\"*\" = [ \"LICENSE\", \"NOTICES\" ]\n\"pipenv.patched.safety\" = [ \"VERSION\", \"safety-policy-template.yml\" ]\n\"pipenv.patched.pip._vendor.certifi\" = [ \"*.pem\" ]\n\"pipenv.patched.pip._vendor.requests\" = [ \"*.pem\" ]\n\"pipenv.patched.pip._vendor.distlib\" = [\n  \"t32.exe\",\n  \"t64.exe\",\n  \"t64-arm.exe\",\n  \"w32.exe\",\n  \"w64.exe\",\n  \"w64-arm.exe\",\n]\n\"pipenv.vendor.ruamel\" = [ \"yaml\" ]\n\n[tool.setuptools.dynamic]\nversion = { attr = \"pipenv.__version__\" }\n\n## TESTING AND DEVELOPER CONFIGURATION BELOW ##\n\n[tool.black]\nline-length = 90\ninclude = '\\.pyi?$'\nexclude = '''\n/(\n    \\.eggs\n  | \\.git\n  | \\.github\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.pyre_configuration\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  | pipenv/vendor\n  | pipenv/patched\n  | tests/pypi\n  | tests/test_artifacts\n  | get-pipenv.py\n  | pyproject.toml\n)\n'''\n\n[tool.ruff]\ntarget-version = \"py37\"\n\nline-length = 137\nexclude = [\n  \"get-pipenv.py\",\n  \"pipenv/patched/*\",\n  \"pipenv/vendor/*\",\n  \"tests/fixtures/*\",\n  \"tests/pypi/*\",\n  \"tests/test_artifacts/*\",\n]\n\nlint.select = [\n  \"ASYNC\",\n  \"B\",\n  \"C4\",\n  \"C90\",\n  \"E\",\n  \"F\",\n  \"FLY\",\n  \"G\",\n  \"I\",\n  \"ISC\",\n  \"PERF\",\n  \"PIE\",\n  \"PL\",\n  \"TID\",\n  \"UP\",\n  \"W\",\n  \"YTT\",\n]\nlint.ignore = [\n  \"B904\",\n  \"PIE790\",\n  \"PLR0912\", # Too many branches\n  \"PLR0913\", # Too many arguments\n  \"PLR2004\", # Magic numbers\n  \"PLR5501\",\n  \"PLW2901\",\n  \"TID252\",  # Relative imports\n]\nlint.per-file-ignores = { \"pipenv/cli/command.py\" = [\n  \"F811\",\n], \"pipenv/__init__.py\" = [\n  \"E402\",\n  \"E501\",\n], \"pipenv/utils/shell.py\" = [\n  \"E402\",\n], \"pipenv/utils/internet.py\" = [\n  \"E401\",\n], \"pipenv/utils/dependencies.py\" = [\n  \"TID252\",\n], \"pipenv/vendor/requirementslib/models/requirements.py\" = [\n  \"PLW0603\",\n], \"pipenv/vendor/requirementslib/models/utils.py\" = [\n  \"B018\",\n], \"pipenv/project.py\" = [\n  \"E501\",\n  \"F401\",\n  \"I\",\n  \"PLC1901\",\n  \"S101\",\n], \"pipenv/cli/options.py\" = [\n  \"B003\",\n  \"PIE800\",\n  \"PLW0603\",\n], \"pipenv/utils/processes.py\" = [\n  \"E741\",\n], \"pipenv/vendor/vistir/misc.py\" = [\n  \"E741\",\n], \"pipenv/vendor/pythonfinder/models/python.py\" = [\n  \"B015\",\n] }\nlint.mccabe.max-complexity = 44\nlint.pylint.max-args = 9\nlint.pylint.max-branches = 20\nlint.pylint.max-returns = 38\nlint.pylint.max-statements = 155\n\n[tool.pyproject-fmt]\n# after how many column width split arrays/dicts into multiple lines, 1 will force always\ncolumn_width = 120\n# how many spaces use for indentation\nindent = 2\n# if false will remove unnecessary trailing ``.0``'s from version specifiers\nkeep_full_version = true\n# maximum Python version to use when generating version specifiers\nmax_supported_python = \"3.13\"\n\n[tool.pytest.ini_options]\naddopts = \"-ra --no-cov\"\nplugins = \"xdist\"\ntestpaths = [ \"tests\" ]\n# Add vendor and patched in addition to the default list of ignored dirs\n# Additionally, ignore tasks, news, test subdirectories\nnorecursedirs = [\n  \".*\",\n  \"build\",\n  \"dist\",\n  \"CVS\",\n  \"_darcs\",\n  \"{arch}\",\n  \"*.egg\",\n  \"vendor\",\n  \"patched\",\n  \"news\",\n  \"tasks\",\n  \"docs\",\n  \"tests/test_artifacts\",\n  \"tests/pypi\",\n]\nfilterwarnings = [  ]\n# These are not all the custom markers, but most of the ones with repeat uses\n# `pipenv run pytest --markers` will list all markers including these\nmarkers = [\n  \"install: tests having to do with `pipenv install`\",\n  \"update: tests having to do with `pipenv update`\",\n  \"needs_internet: integration tests that require internet to pass\",\n  \"basic: basic pipenv tests grouping\",\n  \"dev: tests having to do with dev and dev packages\",\n  \"system: related or interacting with the os\",\n  \"utils: grouping of pipenv utility functions\",\n  \"cli: test grouping that relate to command line like `pipenv --flag args`\",\n  \"requirements: tests that save and alter pip requirements\",\n  \"run: tests that run or execute python through pipenv\",\n  \"script: grouping of tests that execute scripts\",\n  \"keep_outdated: when an activity is supposed to keep something out of date\",\n  \"lock: tests that interact with pipenv lock\",\n  \"markers: pipenv environment markers\",\n  \"vcs: tests integration with pipenv and vertsion control systems\",\n  \"project: tests with the project object\",\n  \"sync: related to `pipenv sync`\",\n  \"rrule: relating to rrules (as in recurring time)\",\n  \"tzoffset: timezone offset\",\n  \"gettz: tests with gettz (get timezone) from dateutil lib\",\n  \"tzstr: timezone string\",\n  \"extras\",\n  \"extended\",\n  \"ext: extra non-categorized tests\",\n]\n\n[tool.coverage.run]\nparallel = true\n\n[tool.towncrier]\npackage = \"pipenv\"\nfilename = \"CHANGELOG.md\"\nissue_format = \"`#{issue} <https://github.com/pypa/pipenv/issues/{issue}>`_\"\ndirectory = \"news/\"\ntitle_format = \"{version} ({project_date})\"\ntemplate = \"news/towncrier_template.rst\"\n\n[[tool.towncrier.type]]\ndirectory = \"feature\"\nname = \"Features & Improvements\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"behavior\"\nname = \"Behavior Changes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"bugfix\"\nname = \"Bug Fixes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"vendor\"\nname = \"Vendored Libraries\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"doc\"\nname = \"Improved Documentation\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"trivial\"\nname = \"Trivial Changes\"\nshowcontent = false\n\n[[tool.towncrier.type]]\ndirectory = \"removal\"\nname = \"Removals and Deprecations\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"process\"\nname = \"Relates to dev process changes\"\nshowcontent = true\n\n[tool.mypy]\nignore_missing_imports = true\nfollow_imports = \"skip\"\nhtml_report = \"mypyhtml\"\npython_version = \"3.7\"\nmypy_path = \"typeshed/pyi:typeshed/imports\"\n"
        },
        {
          "name": "run-tests.bat",
          "type": "blob",
          "size": 0.3173828125,
          "content": "\npip install -e .[test] --upgrade --upgrade-strategy=only-if-needed\npipenv install --dev\ngit submodule sync && git submodule update --init --recursive\ncmd /c start pipenv run pypi-server run -v --host=0.0.0.0 --port=8080 --hash-algo=sha256 --disable-fallback ./tests/pypi/ ./tests/fixtures\npipenv run pytest -n auto -v tests\n"
        },
        {
          "name": "run-tests.sh",
          "type": "blob",
          "size": 1.783203125,
          "content": "#!/usr/bin/env bash\n\n# Tested on debian and alpine\n# You will need to install some dependencies yourself.\n\nset -eo pipefail\n\nexport PYTHONIOENCODING=\"utf-8\"\nexport LANG=C.UTF-8\n\n# Let's use a temporary cache directory\nexport PIPENV_CACHE_DIR=`mktemp -d 2>/dev/null || mktemp -d -t 'pipenv_cache'`\n\n# on some Linux OS python is python3\nPYTHON=${PYTHON:-\"python\"}\nPIPENV_PYTHON=\"${PIPENV_PYTHON:-3.8}\"\n\nPIP_CALL=\"${PIP_CALL:-${PYTHON} -m pip install --user}\"\n\nHOME=$(readlink -f ~/)\n\nif [[ -z \"$HOME\" ]]; then\n    if [[ \"$USER\" == \"root\" ]]; then\n        HOME=\"/root\"\n    fi\nfi\n\nif [[ ! -z \"$HOME\" ]]; then\n    export PATH=\"${HOME}/.local/bin:${PATH}\"\nfi\n\n# This installs the dependencies for pipenv\n${PIP_CALL} --upgrade pip setuptools wheel virtualenv --upgrade-strategy=eager\n\nVENV_CMD=\"${PYTHON} -m pipenv --venv\"\nRM_CMD=\"pipenv --rm\"\n\necho \"$ PIPENV_PYTHON=${PIPENV_PYTHON} $VENV_CMD && PIPENV_PYTHON=${PIPENV_PYTHON} $RM_CMD\"\n\n{ PIPENV_PYTHON=\"${PIPENV_PYTHON}\" $VENV_CMD && PIPENV_PYTHON=${PIPENV_PYTHON} $RM_CMD ; }\n\necho \"Installing dependencies...\"\n\nINSTALL_CMD=\"${PYTHON} -m pipenv install --deploy --dev\"\n\necho \"$ PIPENV_PYTHON=${PIPENV_PYTHON} $INSTALL_CMD\"\n\nPIPENV_PYTHON=${PIPENV_PYTHON} $INSTALL_CMD\n\necho \"$ git submodule sync && git submodule update --init --recursive\"\n\ngit submodule sync && git submodule update --init --recursive\n\necho \"pipenv run pypi-server run -v --host=0.0.0.0 --port=8080 --hash-algo=sha256 --disable-fallback ./tests/pypi/ ./tests/fixtures &\"\n\npipenv run pypi-server run -v --host=0.0.0.0 --port=8080 --hash-algo=sha256 --disable-fallback ./tests/pypi/ ./tests/fixtures &\n\necho \"$pipenv run pytest -v -ra -n auto --cov-config pyproject.toml --fulltrace tests\"\n\nPIPENV_PYTHON=${PIPENV_PYTHON} ${PYTHON} -m pipenv run pytest -v -ra -n auto --cov-config pyproject.toml --fulltrace tests\n"
        },
        {
          "name": "tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}