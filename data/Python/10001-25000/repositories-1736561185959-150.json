{
  "metadata": {
    "timestamp": 1736561185959,
    "page": 150,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ranger/ranger",
      "stars": 15811,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0478515625,
          "content": "[flake8]\nmax-line-length = 99\nignore = E221,W503\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16015625,
          "content": "*.pyc\n*.pyo\n\n*~\n*.orig\n\n/.cache\n/build\n/build_scripts\n/dist\n/doc/ranger.1.html\n/install_log.txt\n/pytestdebug.log\n/ranger_fm.egg-info\n\n/stuff/*\n\n.idea\n.pytest_cache\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.68359375,
          "content": "[MASTER]\ninit-hook='import sys; sys.path.append(\"tests/pylint\")'\nload-plugins=py2_compat,python3\n\n[BASIC]\ngood-names=i,j,k,n,x,y,ex,Run,_,fm,ui,fg,bg\nbad-names=foo,baz,toto,tutu,tata\n\n[DESIGN]\nmax-args=6\nmax-branches=16\n\n[FORMAT]\nmax-line-length = 99\nenable=no-absolute-import,old-division\ndisable=consider-using-f-string,cyclic-import,duplicate-code,fixme,import-outside-toplevel,locally-disabled,missing-docstring,no-else-break,no-else-continue,no-else-raise,no-else-return,raise-missing-from,stop-iteration-return,super-with-arguments,superfluous-parens,use-yield-from,useless-object-inheritance\n\n[TYPECHECK]\nignored-classes=ranger.core.actions.Actions,tests.ranger.container.test_fsobject.MockFM\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.5048828125,
          "content": "Copyright 2009-2018  Roman Zimbelmann <hut@hut.pm>\nCopyright 2010  David Barnett <davidbarnett2@gmail.com>\nCopyright 2010  Lucas de Vries <lucas@glacicle.org>\nCopyright 2010  Sitaram Chamarty <sitaram@atc.tcs.com>\nCopyright 2011  David Pugnasse <david.pugnasse@gmail.com>\nCopyright 2011  ornicar <thibault.duplessis@gmail.com>\nCopyright 2011-2012  Abdó Roig-Maranges <abdo.roig@gmail.com>\nCopyright 2011-2012  M Rawash <mrawash@gmail.com>\nCopyright 2012  Serge Broslavsky <serge.broslavsky@gmail.com>\nCopyright 2012  joe <joebodo@gmail.com>\nCopyright 2013  Emanuel Guevel\nCopyright 2013  Joseph Tannhuber <sepp.tannhuber@yahoo.de>\nCopyright 2013-2014  GermainZ <germanosz@gmail.com>\nCopyright 2014  Célestin Matte <celestin.matte@gmail.com>\nCopyright 2014  Milan Svoboda <milan.svoboda@centrum.cz>\nCopyright 2014  rukai <rubickent@gmail.com>\nCopyright 2015  Alexander Buddenbrock <a.buddenbrock@ish.de>\nCopyright 2015  Delisa Mason <iskanamagus@gmail.com>\nCopyright 2015  No Suck <admin@nosuck.org>\nCopyright 2015  Randy Nance <randynobx@gmail.com>\nCopyright 2015  Ryan Burns <rdburns@gmail.com>\nCopyright 2015  anekos <anekos@snca.net>\nCopyright 2015  bastorran\nCopyright 2015-2017  nfnty <git@nfnty.se>\nCopyright 2015-2018  Wojciech Siewierski <wojciech.siewierski@onet.pl>\nCopyright 2016-2018  Toon Nolten <toonn@toonn.io>\n\nIdeally, all contributors of non-trivial code are named here to the extent that\na name and email address is available.  Please send an email to hut@hut.pm if\nyour name is missing, or in case of any other issues.\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 23.255859375,
          "content": "This log documents changes between stable versions.\n\n# 2019-12-31: version 1.9.3\n* Added Comic cbz/cbr previews\n* Added DjVu previews\n* Added Font previews\n* Added Wayland support to rifle\n* Added `imv` to rifle\n* Added `paste_ext` command with new name collision behavior\n* Added a `size_in_bytes` setting\n* Added a new `%any_path` macro to simplify use of bookmarks in commands\n* Added a new image previewing method using `ueberzug`\n* Added archive previews\n* Added filters for uniqueness and duplicates by hash to `filter_stack`\n* Added generic openers to rifle, `xdg-open` for example\n* Added line modes with human readable size information\n* Added loading of plugins from local configuration directory\n* Added previews for 3d models using `openscad`\n* Added previews of MS Office documents\n* Added scrolling in preview\n* Added trash functionality to ranger, as alternative to deleting files\n* Added zathura to rifle\n* Changed `c/p/tunmap` to `unc/p/tmap` respectively, fixing them in the process\n* Changed argument order for `tag_toggle`\n* Fixed `chmod` behavior with `000` quantifier\n* Fixed a crash involving `Ctrl+space`\n* Fixed behavior of statusbar when resizing terminal window\n* Fixed busyloop when ranger's STDIN was closed\n* Fixed drawing of borders in st\n* Fixed handling of macros for `chain`\n* Fixed unicode decoding errors for previews\n* Improved VCS integration by truncating long commit messages\n* Improved `bulkrename` behavior when moving files to a non-existing directory\n* Improved `bulkrename`'s handling of files with utf-16 surrogates in the name\n* Improved behavior of `rename_append` for directories\n* Improved configurability of syntax highlighting previews\n* Improved coverage of unofficial MIME types, mostly audio formats\n* Improved documentation of `multipane` viewmode\n* Improved documentation of optional dependencies\n* Improved documentation on `copymap`\n* Improved documentation on `tab_shift`\n* Improved documentation on `w3m_offset`\n* Improved example shell scripts\n* Improved extensibility of image previewing methods using a registry\n* Improved fuzzy tab completion\n* Improved guessing of file encoding\n* Improved handling of configuration and cache directories when using `--clean`\n* Improved handling of invalid mtimes (Relevant for fuse mounts)\n* Improved logging of file deletion\n* Improved testing and CI setup\n* Improved updating of tmux/screen window names\n* Improved updating of window titles\n* Improved validation of bookmarks\n* Improved w3m preview method for terminals that aren't quite compatible\n\n\n# 2018-09-09: version 1.9.2\n* Added a `hint_collapse_threshold` setting\n* Added a `traverse_backwards` command analogous to `traverse`\n* Added a command to shift tabs\n* Added a normal mode mapping to quickly enter the console and scroll through\n  the history `C-p`\n* Added a section to `scope.sh` for image previews of archives\n* Added an avfs plugin\n* Added an option to the move command to enable launching the selected file\n  instead of the marked files\n* Added filtering functionality inspired by dired's filter stack, `.n, .| ...`\n* Added image preview method for Kitty\n* Added option to disable the display of free space for high latency situations\n* Added section to `scope.sh` for pdf previews with mutool\n* Added several emacs/readline-inspired keybindings, `C-g` for `ESC`, `alt-f/b`\n* Added systemwide `rc.conf` and `commands.py` in `/etc/ranger`\n* Added the `%any_path` macro to allow bookmarks to be used with commands that\n  need a path and are unaware of bookmarks\n* Added versioning logic to include extra info in unreleased versions\n* Change tab saving to save all tabs, not just the active tab\n* Changed `draw_borders` setting to enable drawing only borders or separators\n* Changed behavior of positional arguments to the ranger command, if you\n  specify a path to a file ranger will open with that file selected\n* Changed the `tilde_in_titlebar` setting to influence the window titlebar too\n* Changed the default colorscheme to work properly in terminals that don't\n  equate bold and bright\n* Fixed StopIteration errors\n* Fixed embedded null errors\n* Fixed issues reported by coverity scan\n* Fixed running ranger as root on Mac OS\n* Fixed unicode issue for python2\n* Fixed w3m preview issues with black stripes\n* Improved PEP8 adherence\n* Improved VCS symbols\n* Improved `--cmd` functionality\n* Improved file encoding detection by using chardet if it's available\n* Rifle's flag t should now work with more terminals than xterm and urxvt\n* Update colorscheme documentation\n\n# 2018-02-22: version 1.9.1\n* Fixed the rifle config backwards compatibility (regression in 1.9.0)\n* Fixed the POSIX compatibility of `Makefile`\n* Fixed `--choosefile`, `--choosefiles` and `--choosedir` so they work\n  with the process substitution (`>(...)` in Bash)\n* Changed the default `gt` binding to `gp` due to a conflict\n* Changed the help message for `--choosefile`, `--choosefiles` and\n  `--choosedir` to avoid confusion\n* Changed the behavior of `:reset` to reload the tags too\n* Added `geeqie` to the default `rifle.conf`\n\n# 2018-01-25: version 1.9.0\n* Fixed memory leak in w3m image preview\n* Fixed `Q` binding, map it to `quitall` instead of `quit!`\n* Fixed `gR` binding\n* Fixed custom linemode not being applied to files\n* Fixed w3m image display invocation on OpenBSD\n* Fixed broken pager after changing view mode with `~`\n* Added reset of rifle.conf when pressing `<C-R>`\n* Added image-based PDF previews to `scope.sh` (disabled by default)\n* Added terminology-based image previews\n* Added check for `$VISUAL` environment variable\n* Added setting `iterm2_font_height` and `iterm2_font_width`\n* Renamed setting `cd_tab_smart` to `cd_tab_fuzzy`\n* Changed command for mercurial integration from `hg` to `chg`\n\n# 2017-11-19: version 1.9.0b6\n* Fixed crash when parsing corrupted history file\n* Fixed tab completion with `cd -r ...`\n* Fixed crash when previewing files encoded in little-endian UTF-16\n* Fixed flicker in previewing symlinked images\n* Fixed detection of location of scope.sh\n* Fixed crash when running ranger from the directory containing its package\n* Fixed cursor position after moving half a page down and back up\n* Fixed handling of lines that are too long for the console\n* Added `<F2>` binding to `:rename_append`\n* Avoid dereferencing symlinked directory when starting ranger in one\n* Added support for `file://` URIs as path arguments\n* Added setting `save_tabs_on_exit`\n* Added setting `cd_tab_case`, sets case sensitivity of `:cd` tab completion\n* Added setting `cd_tab_smart`, allows fuzzy tab completion with `:cd`,\n  for example, `:cd /u/lo/b<TAB>` expands to `:cd /usr/local/bin`\n* Added setting `global_inode_type_filter` to show only directories when\n  running ranger with the new option `--show-only-dirs`\n* Added setting `save_backtick_bookmark`, e.g. for easier syncing of bookmarks\n* Added setting `one_indexed` to start counting line numbers from 1\n* Added rifle.conf entries to list/extract archives without atool\n* Added `:yank` command for simplified definitions of `yn`, `yd` & `yp`\n* Added `:narrow` command, which filters selected files\n* Added setting `freeze_files`, bound to `F` key, to avoid reloading files\n* Changed `:shell -p ...` to display stderr in pager\n\n# 2017-02-19: version 1.9.0b5\n* Fixed width calculation of multibyte characters in preview\n* Fixed crash in iTerm2 preview with python 3.5\n\n# 2017-02-10: version 1.9.0b1\n* Fixed crash when using `Mi` on files without reading permissions\n* Fixed natural sorting (`11.jpg` < `100.jpg`)\n* Fixed loss of precision in timestamps when copying\n* Fixed smart case matching in `:travel`\n* Fixed automatically disabling `preview_script` when running as root\n* Fixed crash on sshfs disconnect\n* Fixed crash on missing `~/.config/ranger/history`\n* Fixed crash when path not accessible during start-up\n* Fixed automatic tmux title\n* Fixed urxvt image previewing when running tmux\n* Fixed macro expansion in aliased commands\n* Fixed `hidden_filter` option when combined with `:flat`\n* Fixed various other crashes\n* Fixed error message that occasionally pops up when changing settings\n* Introduced extensive linting to ensure code quality\n* Added continuous integration.  Patches now require `make test` to pass.\n* Added handling of arguments in \"$PAGER\" environment variable\n* Added quote parsing for `:setlocal path=...`\n* Added `ys` to copy the selection to clipboard\n* Added setting `hostname_in_titlebar`\n* Added setting `wrap_scroll` to wrap cursor around when scrolling\n* Added example plugin `plugin_fasd_add.py`\n* Added command `jump_non` to jump to the first non-directory file\n* Added additional arguments to the command `:rename_append`\n* Added key binding 'zz' as an alternative to 'zf'\n* Added option `-c` to the `rifle` file opener command\n* Added support for `$XDG_DATA_HOME`\n* Avoid exiting ranger while copying.  Use `:quit!` to quit while copying.\n* Improved scope.sh (better performance & readability)\n* Improved logs handling by migrating to the python standard logging library (PR #725)\n* Changed `ranger --choosefiles` to return all selected files in all paths\n* Changed interpretation of commands: treat tabs as argument separators\n* Changed `<C-n>` to open new tab in current directory rather than `$HOME`\n* Changed `:quit!` to only close 1 tab.  Use `:quitall` to close all tabs.\n* Removed backward compatibility for `options.py`, predecessor of `rc.conf`\n* Automatically update bookmarks+tags when renaming them via ranger\n\n# 2017-01-08: version 1.8.1\n* Fixed `:scout` break due to incompatible change in python 3.6\n\n# 2016-12-24: version 1.8.0\n* scope.sh is now needed for the now fully scriptable image previews\n* Overhaul of version control system integration, now with threads\n* Fixed ranger not finding the location of w3mimgdisplay in most cases\n* Fixed many minor bugs\n* Added midnight-commander like multipane view, toggleable with `~` key.\n  It displays the current directory of all the open tabs next to each other.\n* Added autodetect for 256 color support in scope.sh source code preview\n* Added macro `%confdir` that expands to `~/.config/ranger` by default\n* Added possibility to toggle/cycle through options with `set <option_name>!`\n* Added `Mm`/`Ms` key to enable the linemode showing modification time\n* Added `yt`/`dt` keys to toggle whether file is in copy/cut buffer\n* Added `line_numbers` setting showing absolute/relative line numbers\n* Added `Alt-Left` and `Alt-Right` key bindings to move by words in console\n* Added previews for libreoffice files with `odt2txt`\n* Added `preview_images_method=urxvt` option for previewing images by changing\n  the urxvt background (requires urxvt compiled with pixbuf support)\n* Added `clear_filters_on_dir_change` option\n* Added Travis-CI integration\n* Changed `zi` key to toggle `preview_images` option\n* Improved PEP8 compliance\n* Improved documentation\n* Improved UI by separating file path in titlebar with a space from the\n  username/hostname for quick copy&pasting by shift+double-clicking on it.\n\n# 2015-10-04: version 1.7.2\n* Fixed file name arguments passed to `sxiv` and `feh` when using `:flat`\n* Fixed removal of empty directories when using `:rename`\n* Fixed free disk space display on Mac OS X\n* Fixed `examples/vim_file_chooser` to work with gvim too\n* Fixed some other rare crashes and bugs\n* Fixed downward mouse wheel scrolling\n* Fixed warning about regex splits being drawn in titlebar since python3.5\n* Really fixed `S` key binding not working when SHELL=fish\n* Improved `doc/cheatsheet.svg`\n* Added some entries to rifle.conf\n* Added key bindings `pO` and `pP` which work like `po` and `pp` but queue the\n  operation in a first-in-first-out order.\n\n# 2015-05-04: version 1.7.1\n* Added `doc/cheatsheet.svg`\n* Added `examples/rc_emacs.conf`, a config file adding emacs-like key bindings\n* Added `env` keyword in rifle.conf\n* Fixed `:bulkrename` command in python3\n* Fixed `S` key binding not working when SHELL=fish\n\n# 2015-04-13: version 1.7.0\n* The default editor is now `vim` instead of `nano`\n* Added automatic updates of tags when a file is renamed from within ranger\n* Added `preview_images_method` which can be set to `iterm2` to use native\n  iTerm2 image previews\n* Added `:rename_append` command to rename files without the file extension\n* Added `:linemode` command to change the way the files are displayed\n  Try this out by pressing M followed by one of the suggested keys.\n  New linemodes can be added with `ranger.api.register_linemode()`.\n* Added `:filter_inode_type` command to only show directories, files or links\n* Added `:meta` command for managing custom file metadata\n* Added `:flat` command for displaying subdirectories\n* Added `solarized` colorscheme\n* Added generic ability to use scope.sh for image previews\n* Added video previews in scope.sh\n* Added option `sort_unicode` to sort according to unicode, not ASCII\n* `:mkdir` can now create multiple directory levels (like `mkdir -p`)\n* `:help` (key binding `?`) is now interactive\n* `:find` (key binding `/`) is now case insensitive by default\n* `ranger --copy-config=all` now copies a short sample commands.py rather than\n  the full one, so that you can update ranger without having broken commands.\n  The full commands.py is still copied to `~/.config/ranger/commands_full.py`.\n* Fixed broken copying of symlinks\n\n# 2013-05-24: Version 1.6.1\n* Added support for version control systems, see:\n  http://lists.nongnu.org/archive/html/ranger-users/2013-03/msg00007.html\n* Added :scout command as a unified backend to :find, :search, etc\n* Added `open_all_images` setting to remove the need for external scripts\n  to handle opening of all images in a directory at once.\n* Now previewing with `i` uses the whole available width.\n\n# 2013-02-22: Version 1.6.0\n* Overhauled all config files.  Please update them or use the --clean switch\n* Added `examples/` directory to source code which contains sample programs or\n  plugins that can be used together with ranger\n* Added progress bars to copying, moving and directory loading processes\n* Added feature to draw images inside the console using w3mimgdisplay (you need\n  to add `set preview_images true` in rc.conf)\n* Added a plugin system like in the program `anki`, i.e. place any python file\n  into ~/.config/ranger/plugins/ and it will be imported by ranger\n* Added a separate file launcher named `rifle` that is configured through\n  rifle.conf and is installed as a standalone program.\n  Using `ranger [filename]` from the shell for opening files is deprecated now,\n  please use `rifle [filename]` instead.\n* Added `uq` keybinding to undo closed tabs\n* Added :setlocal command to change settings for specific directories only\n* Added :travel command to move more quickly to your destination\n* Added 256 color support for scope.sh\n* Added a real yes/no prompt for :delete command\n* Added settings: `confirm_on_delete`, `draw_progress_bar_in_status_bar`,\n  `preview_images`, `status_bar_on_top`, `update_tmux_title`\n* Added commands: `:mark_tag`, `:unmark_tag`\n* Added BSD-friendly setsid implementation\n* Added as-you-type filtering for `:filter` command\n* Replaced `options.py` file by :set commands in rc.conf\n* Replaced `apps.py` file with rifle.conf\n* Improved `r` key to interface with rifle\n* Rewritten `scope.sh` in POSIX shell\n* Changed copying/moving code to work without GNU coreutils\n* Changed key to untag files from `T` to `ut`\n* Changed the flag `d` (for detached) to `f` (for fork) in program launcher\n* Changed appearance of keybinding-hints and bookmarks\n* Changed tabs with 4 spaces in the source code (see PEP 8)\n* Removed ranger.core.environment class\n* Removed settings: `colorscheme_overlay`, `draw_bookmark_borders`,\n  `init_function`, `load_default_rc`\n* Fixed zombie process apocalypse\n* Fixed `draw_borders=true` in combination with `padding_right=false`\n\n# 2012-08-10: Version 1.5.5\n* Ensure that detached programs continue to run when ranger is killed\n\n# 2012-05-03: Version 1.5.4\n* Added exiftool to scope.sh by default\n* Fixed a crash when entering a directory with a unicode name\n* Speedup in `ranger.ext.get_executables`\n\n# 2012-03-05: Version 1.5.3\n* Added --selectfile option that selects a certain file on startup\n* Added --list-tagged-files option\n* Added --cmd option to run commands on startup\n* Added --profile option for additional debug information on exit\n* Added a visual mode (activate with `V`, deactivate with Esc)\n* Added a reversed visual mode (activate with `uV`)\n* Added `$RANGER_LEVEL` environment variable which ranger sets to `1` or higher\n  so programs can know that they were spawned from ranger\n* Added run flag `r` for running with root privileges (needs sudo)\n* Added run flag `t` for running in a new terminal (as specified in $TERMCMD)\n* Added :relink command to change destinations of symlinks\n* Added `dc` binding for getting the cumulative size of a directory\n* Added `autoupdate_cumulative_size` option\n* Added `pht` binding to Paste Hardlinked subTrees (like cp -l)\n* Improved sorting speed of signals (noticeable when caching many directories)\n* Improved drawing speed\n* Fixed unexpected behavior when displaying nonprintable characters\n* Fixed :bulkrename to work with files starting with a minus sign\n* Fixed RangerChooser example in man page\n* Fixed crash when opening images with sxiv/feh by running `ranger <image>`\n\n# 2011-10-23: Version 1.5.2\n* Fixed graphical bug that appears in certain cases when drawing\n  characters at the right edge.\n\n# 2011-10-23: Version 1.5.1\n* Added `fm.select_file(path)`\n* Added --choosefiles option (like --choosefile, but chooses multiple files)\n* Fixed --list-unused-keys\n* Fixed Zombie processes\n* Fixed handling of filenames with undecodable bytes (unicode surrogates)\n* Fixed crashes due to incomplete loading of directories\n* Fixed tab completion of the command `shell`\n* Fixed `ot` and `oT` keys in rc.conf\n* Fixed parsing of chained commands (like in the binding `om`)\n\n# 2011-10-11: Version 1.5.0\n* Full python3.2 compatibility\n* Added new configuration file `rc.conf` which contains a list\n  of commands that are executed on startup - mainly used for keybindings\n* Added --list-unused-keys\n* Added new program handlers to apps.py\n* Added pop-up window for keychains and bookmarks\n* Added `load_default_rc` option\n* Fixed all known unicode issues\n* Fixed crash when $TERM is unknown to the system\n* Fixed scrolling in colored preview\n* Changed the default `column_ratios` to 1/3/4 and sorting method to `natural`\n* Changed :rename so it doesn't overwrite existing files\n* Internal actions are now accessible as commands\n* Replaced unittests by doctests\n* Replaced integrated help with an extended man page and dynamic lists\n  of keybindings, commands and settings.\n* Removed `keys.py` configuration file in favor of `rc.conf`\n* Removed `texas` colorscheme\n* apps.py: Now able to define programs that only run with Xorg\n* commands.py: Using parse(self.line) to parse the line is unnecessary now.\n  parse(self.line).rest(n) is now written as self.rest(n).\n  However, parse(self.line).chunk(n) has been renamed to self.arg(n).\n* commands.py: parse(self.line) + X is now self.firstpart + X\n* commands.py: New special attribute `resolve_macros` which decides whether\n  strings like %f should be expanded to the name of the current file, etc.\n* commands.py: New special attribute `escape_macros_for_shell` to toggle\n  whether or not macros should be escaped, so you can use them in other\n  commands than :shell, for example :edit %f\n* Countless small fixes and improvements\n\n# 2011-10-02: Version 1.4.4\n* Added keys for chmod (like +ow for `chmod o+w`, etc)\n* Added `c` flag for running files\n* Added various key bindings\n* Added wavpack and webm types to mime.types\n* Added option `display_tags_in_all_columns`\n* Added command.cancel method which is called when pressing ESC in console\n* Added sorting and cycling by ctime and atime\n* Added custom tags (press \"x)\n* Added bittorrent preview\n* Fixed blocking when using interactive scripts in scope.sh\n* Fixed issues with ALT key\n* Fixed pager crash when trying to read non-readable file\n* Forbid piping things into ranger\n* Improved hints\n\n# 2011-04-05: Version 1.4.3\n* Fixed mimetype checking when invoking ranger with a filename\n* Fixed loss of bookmarks when disk is full\n* Minor improvements\n\n# 2011-03-05: Version 1.4.2\n* Added --choosefile and --choosedir flag\n* Added use of bookmarks in tab completion of the :cd command\n* Fixed bug with detached programs and python 3.2\n\n# 2011-01-04: Version 1.4.1\n* Fixed crash when preview failed under some circumstances\n* Fixed graphical bug when pressing i\n\n# 2010-12-22: Version 1.4.0\n* Added option to use any external scripts for previews (see scope.sh)\n* Added key: zv to toggle the use of the external script\n* Added indicator for the used filter (type `zf`)\n* Added option `padding_right` to remove whitespace if there's no preview\n* Added command `:search_inc` for incremental search\n* Added commands `:save_copy_buffer` and `:load_copy_buffer` to share\n  the copied files between ranger instances\n* Added mimeopen as a fallback if no useful application can be found\n* Added natural sort, sorts 1foo before 10foo. (type `on`)\n* Added keys: yp, yd and yb to copy path, dirname or basename to seleciton\n* Let `open_with` use the selection, not just one file\n* Run files with right mouse click\n* Implemented copying via coreutils rather than internal python code\n* Improved handling of unicode\n* Some restructuration of the source code\n\n# 2010-12-13: Version 1.2.3\n* Enable binding to alt-keys\n* Fixed memory leak in garbage collecting of old, unused directory objects\n* Fixed python3 incompatibilities\n* Fixed problems with identifying changes of files\n* Fixed lazy lookup of some FSObject attributes\n\n# 2010-10-10: Version 1.2.2\n* Prevent currently used directories from being garbage collected\n* Disable mouse buttons when console is open\n* Fixed :cd command: Without arguments, cd's into $HOME\n* Fixed bug which prevented pydoc to work on some config files\n* Fixed some bugs in `snow` and `jungle` colorschemes\n* Several other clean-ups and fixes\n\n# 2010-09-16: Version 1.2.1\n* Fixed yy/pp bug when yanking multiple directories\n\n# 2010-09-13: Version 1.2.0\n* !!! Changed the default configuration directory to ~/.config/ranger !!!\n* Removed `Console Modes`, each old mode is now a simple command\n* Disabled file previews by default if ranger is used by root\n* Allow to jump to specific help sections by typing two numbers, e.g. 13?\n* Added keys: da, dr, ya, yr for adding and removing files from copy buffer\n* Added keys: gl and gL to resolve links, see 11?\n* Added key: pL to create a relative symlink\n* Added %<LETTER> and %<N><LETTER> macros for the console, see 33?\n* Fixed ansi codes for colors in the pager\n* Use the file ~/.mime.types for mime type detection\n* Several clean-ups and fixes\n\n# 2010-07-17: Version 1.1.2\n* Fix crash when using scrollwheel to scroll down in some cases\n* The command `ranger dir1 dir2 ...` opens multiple directories in tabs\n* Removed pydoc html documentation by default, re-create it with `make doc`\n* Minor fixes\n\n# 2010-06-18: Version 1.1.1\n* New install script, `setup.py`\n* New flag for running programs: `w` (waits for enter press)\n* Minor fixes\n\n# 2010-06-09: Version 1.1.0\n* Added a man page\n* Tab support\n* Improved directory loading performance\n* Commands are definable in ~/.ranger/commands.py\n* Case insensitive sorting (type zs)\n* Better UTF support\n* Possibility to turn off previews (zp and zP)\n* Changing options with :set (e.g. `:set column_ratios=1,2,3,4`)\n* Ask for confirmation when using :delete\n* New invocation flag: --fail-unless-cd\n* New hotkeys, commands, options.\n* New syntax for ~/.ranger/keys.py\n* Several user contributions\n* And tons of general improvements\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6650390625,
          "content": "# Contributing to Ranger\n\n## Tips for bug reports\n\n* Was this issue already reported?  Please do a quick search.\n* Maybe the problem is solved in the current master branch already?\n  Simply clone ranger with `git clone https://github.com/ranger/ranger` or\n  download the git version via https://github.com/ranger/ranger/archive/master.zip\n  and run `./ranger.py` directly to find out.\n* You can obtain much better error messages with `ranger --debug`, please post\n  those in bug reports rather than the usual, single-line error message. Also\n  check the log by using the default map `W` or by running the command `display_log`.\n\n## Tips on patching\n\n* See `HACKING.md`\n\nThank you!\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.18359375,
          "content": "# Usage instructions:\n# 1. \"docker build -t ranger/ranger:latest .\"\n# 2. \"docker run -it ranger/ranger\"\n\nFROM debian\n\nRUN apt-get update && apt-get install -y ranger\nENTRYPOINT [\"ranger\"]\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 3.1201171875,
          "content": "Guidelines for Code Modification\n================================\n\nCoding Style\n------------\n\n* Use syntax compatible with Python `2.6+` and `3.1+`.\n* Use docstrings with `pydoc` in mind\n* Follow the PEP8 style guide: https://www.python.org/dev/peps/pep-0008/\n* Always run `make test` before submitting a new PR. `pylint`, `flake8`,\n  `pytest`, `doctest` and `shellcheck` need to be installed. (If you don't\n  change any shell scripts you can run `make test_py` and you don't need the\n  `shellcheck` dependency but it's an awesome tool, so check it out : )\n* When breaking backward compatibility with old configuration files or plugins,\n  please include a temporary workaround code that provides a compatibility\n  layer and mark it with a comment that includes the word `COMPAT`. For\n  examples, grep the code for the word `COMPAT`. :)\n\n\nPatches\n-------\n\nSend patches, created with `git format-patch`, to the email address\n\n    ranger-users@nongnu.org\n\nor open a pull request on GitHub.\n\nPlease use PGP-encryption for security-relevant patches or messages. PGP key\nIDs are shared along with releases on https://ranger.github.io and can be\nattempted in reverse chronological order in case a maintainer is unresponsive.\n\nVersion Numbering\n-----------------\n\nThree numbers, `A.B.C`, where\n* `A` changes on a rewrite\n* `B` changes when major configuration incompatibilities occur\n* `C` changes with each release\n\n\nStarting Points\n---------------\n\nGood places to read about ranger internals are:\n\n* `ranger/core/actions.py`\n* `ranger/container/fsobject.py`\n\nAbout the UI:\n\n* `ranger/gui/widgets/browsercolumn.py`\n* `ranger/gui/widgets/view_miller.py`\n* `ranger/gui/ui.py`\n\n\nCommon Changes\n==============\n\nAdding options\n--------------\n\n* Add a default value in `rc.conf`, along with a comment that describes the option.\n* Add the option to the `ALLOWED_SETTINGS` dictionary in the file\n  `ranger/container/settings.py` in alphabetical order.\n* Add an entry in the man page by editing `doc/ranger.pod`, then rebuild the man\n  page by running `make man` in the ranger root directory\n\nThe setting is now accessible with `self.settings.my_option`, assuming self is a\nsubclass of `ranger.core.shared.SettingsAware`.\n\n\nAdding colorschemes\n-------------------\n\n* Copy `ranger/colorschemes/default.py` to `ranger/colorschemes/myscheme.py`\n  and modify it according to your needs. Alternatively, create a subclass of\n  `ranger.colorschemes.default.Default` and override the `use` method, as it is\n  done in the `Jungle` colorscheme.\n\n* Add this line to your `~/.config/ranger/rc.conf`:\n  `set colorscheme myscheme`\n\n\nChange which programs start which file types\n--------------------------------------------\n\nEdit the configuration file `~/.config/ranger/rifle.conf`. The default one can\nbe obtained by running `ranger --copy-config rifle`.\n\n\nChange which file extensions have which mime type\n-------------------------------------------------\n\nModify `ranger/data/mime.types`. You may also add your own entries to `~/.mime.types`\n\n\nChange which files are previewed in the auto preview\n----------------------------------------------------\n\nIn `ranger/container/file.py`, change the constant `PREVIEW_BLACKLIST`\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.96875,
          "content": "# This file is part of ranger, the console file manager.\n# License: GNU GPL version 3, see the file \"AUTHORS\" for details.\n\nNAME = ranger\nVERSION = $(shell grep -m 1 -o '[0-9]\\+\\(\\.\\S\\+\\)\\+' README.md)\nNAME_RIFLE = rifle\nVERSION_RIFLE = $(VERSION)\nSNAPSHOT_NAME ?= $(NAME)-$(VERSION)-$(shell git rev-parse HEAD | cut -b 1-8).tar.gz\n# Find suitable python version (need python >= 2.6 or 3.1):\nPYTHON ?= $(shell \\\n\t     (which python3) \\\n\t     || (python -c 'import sys; sys.exit(sys.version < \"2.6\")' && \\\n\t      which python) \\\n\t     || (python2 -c 'import sys; sys.exit(sys.version < \"2.6\")' && \\\n\t         which python2) \\\n\t   )\nifeq ($(PYTHON),)\n  $(error No suitable python found.)\nendif\nSETUPOPTS ?= '--record=install_log.txt'\nDOCDIR ?= doc/pydoc\nDESTDIR ?= /\nPREFIX ?= /usr/local\nPYOPTIMIZE ?= 1\nFILTER ?= .\n\nCWD = $(shell pwd)\n\nbold := $(shell tput bold)\nnormal := $(shell tput sgr0)\n\ndefault: test compile\n\t@echo 'Run `make options` for a list of all options'\n\noptions: help\n\t@echo\n\t@echo 'Options:'\n\t@echo 'PYTHON = $(PYTHON)'\n\t@echo 'PYOPTIMIZE = $(PYOPTIMIZE)'\n\t@echo 'DOCDIR = $(DOCDIR)'\n\t@echo 'DESTDIR = $(DESTDIR)'\n\nhelp:\n\t@echo 'make:                 Test and compile ranger.'\n\t@echo 'make install:         Install $(NAME)'\n\t@echo 'make pypi_sdist:      Release a new sdist to PyPI'\n\t@echo 'make clean:           Remove the compiled files (*.pyc, *.pyo)'\n\t@echo 'make doc:             Create the pydoc documentation'\n\t@echo 'make cleandoc:        Remove the pydoc documentation'\n\t@echo 'make man:             Compile the manpage with \"pod2man\"'\n\t@echo 'make manhtml:         Compile the html manpage with \"pod2html\"'\n\t@echo 'make snapshot:        Create a tar.gz of the current git revision'\n\t@echo 'make test:            Test everything'\n\t@echo 'make test_pylint:     Test using pylint'\n\t@echo 'make test_flake8:     Test using flake8'\n\t@echo 'make test_doctest:    Test using doctest'\n\t@echo 'make test_pytest:     Test using pytest'\n\t@echo 'make test_other:      Verify the manpage is complete'\n\t@echo 'make test_py:         Run all python tests, including manpage completeness'\n\t@echo 'make test_shellcheck: Test using shellcheck'\n\t@echo 'make todo:            Look for TODO and XXX markers in the source code'\n\ninstall:\n\t$(PYTHON) setup.py install $(SETUPOPTS) \\\n\t\t'--prefix=$(PREFIX)' '--root=$(DESTDIR)' \\\n\t\t--optimize=$(PYOPTIMIZE)\n\ncompile: clean\n\tPYTHONOPTIMIZE=$(PYOPTIMIZE) $(PYTHON) -m compileall -q ranger\n\nclean:\n\tfind ranger -regex .\\*\\.py[co]\\$$ -delete\n\tfind ranger -depth -name __pycache__ -type d -exec rm -r -- {} \\;\n\ndoc: cleandoc\n\tmkdir -p $(DOCDIR)\n\tcd $(DOCDIR); \\\n\t\t$(PYTHON) -c 'import pydoc, sys; \\\n\t\tsys.path[0] = \"$(CWD)\"; \\\n\t\tpydoc.writedocs(\"$(CWD)\")'\n\tfind . -name \\*.html -exec sed -i 's|'\"$(CWD)\"'|../..|g' -- {} \\;\n\nTEST_PATHS_MAIN = \\\n\t$(shell find ./ranger -mindepth 1 -maxdepth 1 -type d \\\n\t\t! -name '__pycache__' \\\n\t\t! -path './ranger/config' \\\n\t\t! -path './ranger/data' \\\n\t) \\\n\t./ranger/__init__.py \\\n\t$(shell find ./doc/tools ./examples -type f -name '*.py') \\\n\t./ranger.py \\\n\t./setup.py \\\n\t./tests\nTEST_PATH_CONFIG = ./ranger/config\n\ntest_pylint:\n\t@echo \"$(bold)Running pylint...$(normal)\"\n\tpylint $(TEST_PATHS_MAIN)\n\tpylint --rcfile=$(TEST_PATH_CONFIG)/.pylintrc $(TEST_PATH_CONFIG)\n\ntest_flake8:\n\t@echo \"$(bold)Running flake8...$(normal)\"\n\tflake8 $(TEST_PATHS_MAIN) $(TEST_PATH_CONFIG)\n\t@echo\n\ntest_doctest:\n\t@echo \"$(bold)Running doctests...$(normal)\"\n\t@set -e; \\\n\tfor FILE in $(shell grep -IHm 1 doctest -r ranger | grep $(FILTER) | cut -d: -f1); do \\\n\t\techo \"Testing $$FILE...\"; \\\n\t\tRANGER_DOCTEST=1 PYTHONPATH=\".:\"$$PYTHONPATH ${PYTHON} $$FILE; \\\n\tdone\n\t@echo\n\ntest_pytest:\n\t@echo \"$(bold)Running py.test tests...$(normal)\"\n\tpy.test tests\n\t@echo\n\ntest_py: test_pylint test_flake8 test_doctest test_pytest test_other\n\t@echo \"$(bold)Finished python and documentation tests!$(normal)\"\n\t@echo\n\ntest_shellcheck:\n\t@echo \"$(bold)Running shellcheck...$(normal)\"\n\tsed '2,$$s/^\\([[:blank:]]*\\)#/\\1/' ./ranger/data/scope.sh \\\n\t| shellcheck -a -\n\t@echo\n\ntest_other:\n\t@echo \"$(bold)Checking completeness of man page...$(normal)\"\n\t@tests/manpage_completion_test.py\n\t@echo\n\ntest: test_py test_shellcheck\n\t@echo \"$(bold)Finished testing: All tests passed!$(normal)\"\n\ndoc/ranger.1: doc/ranger.pod\n\tpod2man --stderr --center='ranger manual' \\\n\t\t--date='$(NAME)-$(VERSION)' \\\n\t\t--release=$(shell date -u '+%Y-%m-%d') \\\n\t\tdoc/ranger.pod doc/ranger.1\n\ndoc/rifle.1: doc/rifle.pod\n\tpod2man --stderr --center='rifle manual' \\\n\t\t--date='$(NAME_RIFLE)-$(VERSION_RIFLE)' \\\n\t\t--release=$(shell date -u '+%Y-%m-%d') \\\n\t\tdoc/rifle.pod doc/rifle.1\n\nman: doc/ranger.1 doc/rifle.1\n\nmanhtml:\n\tpod2html doc/ranger.pod --outfile=doc/ranger.1.html\n\ncleandoc:\n\ttest -d $(DOCDIR) && rm -- $(DOCDIR)/*.html || true\n\nsnapshot:\n\tgit archive --prefix='$(NAME)-$(VERSION)/' --format=tar HEAD | gzip > $(SNAPSHOT_NAME)\n\ndist: snapshot\n\ntodo:\n\t@grep --color -Ion '\\(TODO\\|XXX\\).*' -r ranger\n\n.PHONY: clean cleandoc compile default dist doc help install man manhtml \\\n\toptions snapshot test test_pylint test_flake8 test_doctest test_pytest \\\n\ttest_other todo pypi_sdist\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2060546875,
          "content": "<div align=\"center\">\n<a href=\"https://ranger.fm/\">\n<img src=\"https://ranger.fm/ranger_logo.png\" width=\"200\">\n</a>\n\nRanger 1.9.4\n============\n\n[![Python lints and tests](https://github.com/ranger/ranger/actions/workflows/python.yml/badge.svg)](https://github.com/ranger/ranger/actions/workflows/python.yml)\n<a href=\"https://repology.org/metapackage/ranger/versions\"><img src=\"https://repology.org/badge/latest-versions/ranger.svg\" alt=\"latest packaged version(s)\"></a>\n[![Donate via Liberapay](https://img.shields.io/liberapay/patrons/ranger)](https://liberapay.com/ranger)\n</div>\n\nRanger is a console file manager with VI key bindings.  It provides a\nminimalistic and nice curses interface with a view on the directory hierarchy.\nIt ships with `rifle`, a file launcher that is good at automatically finding\nout which program to use for what file type.\n\n![screenshot](https://raw.githubusercontent.com/ranger/ranger-assets/master/screenshots/screenshot.png)\n\nFor `mc` aficionados there's also the multi-pane viewmode.\n\n<p>\n<img src=\"https://raw.githubusercontent.com/ranger/ranger-assets/master/screenshots/twopane.png\" alt=\"two panes\" width=\"49%\" />\n<img src=\"https://raw.githubusercontent.com/ranger/ranger-assets/master/screenshots/multipane.png\" alt=\"multiple panes\" width=\"49%\" />\n</p>\n\nThis file describes ranger and how to get it to run.  For instructions on the\nusage, please read the man page (`man ranger` in a terminal).  See `HACKING.md`\nfor development-specific information.\n\nFor configuration, check the files in `ranger/config/` or copy the\ndefault config to `~/.config/ranger` with `ranger --copy-config`\n(see [instructions](#getting-started)).\n\nThe `examples/` directory contains several scripts and plugins that demonstrate how\nranger can be extended or combined with other programs.  These files can be\nfound in the git repository or in `/usr/share/doc/ranger`.\n\nA note to packagers: Versions meant for packaging are listed in the changelog\non the website.\n\n\nAbout\n-----\n* Authors:     see `AUTHORS` file\n* License:     GNU General Public License Version 3\n* Website:     https://ranger.fm/\n* Download:    https://ranger.fm/ranger-stable.tar.gz\n* Bug reports: https://github.com/ranger/ranger/issues\n* git clone    https://github.com/ranger/ranger.git\n\n\nDesign Goals\n------------\n* An easily maintainable file manager in a high level language\n* A quick way to switch directories and browse the file system\n* Keep it small but useful, do one thing and do it well\n* Console-based, with smooth integration into the unix shell\n\n\nFeatures\n--------\n* UTF-8 Support  (if your Python copy supports it)\n* Multi-column display\n* Preview of the selected file/directory\n* Common file operations (create/chmod/copy/delete/...)\n* Renaming multiple files at once\n* VIM-like console and hotkeys\n* Automatically determine file types and run them with correct programs\n* Change the directory of your shell after exiting ranger\n* Tabs, bookmarks, mouse support...\n\n\nDependencies\n------------\n* Python (`>=2.6` or `>=3.1`) with the `curses` module\n  and (optionally) wide-unicode support\n* A pager (`less` by default)\n\n### Optional dependencies\n\nFor general usage:\n\n* `file` for determining file types\n* `chardet` (Python package) for improved encoding detection of text files\n* `sudo` to use the \"run as root\" feature\n* `python-bidi` (Python package) to display right-to-left file names correctly\n  (Hebrew, Arabic)\n\nFor enhanced file previews (with `scope.sh`):\n\n* `img2txt` (from `caca-utils`) for ASCII-art image previews\n* `w3mimgdisplay`, `ueberzug`, `mpv`, `iTerm2`, `kitty`, `terminology` or `urxvt` for image previews\n* `convert` (from `imagemagick`) to auto-rotate images and for image previews\n* `rsvg-convert` (from [`librsvg`](https://wiki.gnome.org/Projects/LibRsvg))\n  for SVG previews\n* `ffmpeg`, or `ffmpegthumbnailer` for video thumbnails\n* `highlight`, `bat` or `pygmentize` for syntax highlighting of code\n* `atool`, `bsdtar`, `unrar` and/or `7z` to preview archives\n* `bsdtar`, `tar`, `unrar`, `unzip` and/or `zipinfo` (and `sed`) to preview\n  archives as their first image\n* `lynx`, `w3m` or `elinks` to preview html pages\n* `pdftotext` or `mutool` (and `fmt`) for textual `pdf` previews, `pdftoppm` to\n  preview as image\n* `djvutxt` for textual DjVu previews, `ddjvu` to preview as image\n* `calibre` or `epub-thumbnailer` for image previews of ebooks\n* `transmission-show` for viewing BitTorrent information\n* `mediainfo` or `exiftool` for viewing information about media files\n* `odt2txt` for OpenDocument text files (`odt`, `ods`, `odp` and `sxw`)\n* `python` or `jq` for JSON files\n* `sqlite3` for listing tables in SQLite database (and optionally `sqlite-utils` for fancier box drawing.)\n* `jupyter nbconvert` for Jupyter Notebooks\n* `fontimage` for font previews\n* `openscad` for 3D model previews (`stl`, `off`, `dxf`, `scad`, `csg`)\n* `draw.io` for [draw.io](https://app.diagrams.net/) diagram previews\n  (`drawio` extension)\n\nInstalling\n----------\nUse the package manager of your operating system to install ranger.\nYou can also install ranger through PyPI: `pip install ranger-fm`.\nHowever, it is recommended to use [`pipx`](https://pypa.github.io/pipx/) instead\n(to benefit from isolated environments). Use\n`pipx run --spec ranger-fm ranger` to install and run ranger in one step.\n\n<details>\n  <summary>\n    Check current version:\n    <sub>\n      <a href=\"https://repology.org/metapackage/ranger/versions\">\n        <img src=\"https://repology.org/badge/tiny-repos/ranger.svg\" alt=\"Packaging status\">\n      </a>\n    </sub>\n  </summary>\n  <a href=\"https://repology.org/metapackage/ranger/versions\">\n    <img src=\"https://repology.org/badge/vertical-allrepos/ranger.svg\" alt=\"Packaging status\">\n  </a>\n</details>\n\n### Installing from a clone\nNote that you don't *have* to install ranger; you can simply run `ranger.py`.\n\nTo install ranger manually:\n```\nsudo make install\n```\n\nThis translates roughly to:\n```\nsudo python setup.py install --optimize=1 --record=install_log.txt\n```\n\nThis also saves a list of all installed files to `install_log.txt`, which you can\nuse to uninstall ranger.\n\n\nGetting Started\n---------------\nAfter starting ranger, you can use the Arrow Keys or `h` `j` `k` `l` to\nnavigate, `Enter` to open a file or `q` to quit.  The third column shows a\npreview of the current file.  The second is the main column and the first shows\nthe parent directory.\n\nRanger can automatically copy default configuration files to `~/.config/ranger`\nif you run it with the switch `--copy-config=( rc | scope | ... | all )`.\nSee `ranger --help` for a description of that switch.  Also check\n`ranger/config/` for the default configuration.\n\n\nGoing Further\n---------------\n* To get the most out of ranger, read the [Official User Guide](https://github.com/ranger/ranger/wiki/Official-user-guide).\n* For frequently asked questions, see the [FAQ](https://github.com/ranger/ranger/wiki/FAQ%3A-Frequently-Asked-Questions).\n* For more information on customization, see the [wiki](https://github.com/ranger/ranger/wiki).\n\n\nCommunity\n---------------\nFor help, support, or if you just want to hang out with us, you can find us here:\n* **IRC**: channel **#ranger** on [Libera.Chat](https://libera.chat/guides/connect). Don't have an IRC client? Join us via the [webchat](https://web.libera.chat/#ranger)!\n* **Reddit**: [r/ranger](https://www.reddit.com/r/ranger/)\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ranger.py",
          "type": "blob",
          "size": 1.283203125,
          "content": "#!/usr/bin/python -O\n# This file is part of ranger, the console file manager.  (coding: utf-8)\n# License: GNU GPL version 3, see the file \"AUTHORS\" for details.\n\n# =====================\n# This embedded bash script can be executed by sourcing this file.\n# It will cd to ranger's last location after you exit it.\n# The first argument specifies the command to run ranger, the\n# default is simply \"ranger\". (Not this file itself!)\n# The other arguments are passed to ranger.\n\"\"\"\":\ntemp_file=\"$(mktemp -t \"ranger_cd.XXXXXXXXXX\")\"\nranger=\"${1:-ranger}\"\nif [ -n \"$1\" ]; then\n    shift\nfi\n\"$ranger\" --choosedir=\"$temp_file\" -- \"${@:-$PWD}\"\nreturn_value=\"$?\"\nif chosen_dir=\"$(cat -- \"$temp_file\")\" && [ -n \"$chosen_dir\" ] && [ \"$chosen_dir\" != \"$PWD\" ]; then\n    cd -- \"$chosen_dir\"\nfi\nrm -f -- \"$temp_file\"\nreturn \"$return_value\"\n\"\"\"\n\nfrom __future__ import (absolute_import, division, print_function)\n\nimport sys\n\n# Need to find out whether or not the flag --clean was used ASAP,\n# because --clean is supposed to disable bytecode compilation\nARGV = sys.argv[1:sys.argv.index('--')] if '--' in sys.argv else sys.argv[1:]\nsys.dont_write_bytecode = '-c' in ARGV or '--clean' in ARGV\n\n# Start ranger\nimport ranger  # NOQA pylint: disable=import-self,wrong-import-position\nsys.exit(ranger.main())  # pylint: disable=no-member\n"
        },
        {
          "name": "ranger",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.03125,
          "content": "flake8\npylint\npytest\nsetuptools\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.349609375,
          "content": "#!/usr/bin/env python\n# This file is part of ranger, the console file manager.\n# License: GNU GPL version 3, see the file \"AUTHORS\" for details.\n\nfrom __future__ import (absolute_import, division, print_function)\n\nfrom hashlib import sha512\nimport os\nimport shutil\n\nfrom setuptools import setup\nfrom setuptools.command.install_lib import install_lib\n\nimport ranger\n\n\nSCRIPTS_PATH = 'build_scripts'\nEXECUTABLES_PATHS = ['/ranger/data/scope.sh']\n\n\ndef findall(directory):\n    return [os.path.join(directory, f) for f in os.listdir(directory)\n            if os.path.isfile(os.path.join(directory, f))]\n\n\ndef hash_file(path):\n    with open(path, 'rb') as fobj:\n        return sha512(fobj.read()).digest()\n\n\ndef scripts_hack(*scripts):\n    ''' Hack around `pip install` temporary directories '''\n    if not os.path.exists(SCRIPTS_PATH):\n        os.makedirs(SCRIPTS_PATH)\n    scripts_path = []\n    for src_path, basename in scripts:\n        dest_path = os.path.join(SCRIPTS_PATH, basename)\n        if not os.path.exists(dest_path) or \\\n                (os.path.exists(src_path) and hash_file(src_path) != hash_file(dest_path)):\n            shutil.copy(src_path, dest_path)\n        scripts_path += [dest_path]\n    return scripts_path\n\n\nclass InstallLib(install_lib):\n    def run(self):\n        install_lib.run(self)\n\n        # Make executables executable\n        for path in self.get_outputs():\n            for exe_path in EXECUTABLES_PATHS:\n                if path.endswith(exe_path):\n                    mode = ((os.stat(path).st_mode) | 0o555) & 0o7777\n                    print('changing mode of %s to %o' % (path, mode))\n                    os.chmod(path, mode)\n\n\ndef main():\n    setup(\n        name='ranger-fm',\n        description='Vim-like file manager',\n        long_description=ranger.__doc__,\n        version=ranger.__version__,\n        author=ranger.__author__,\n        author_email=ranger.__email__,\n        license=ranger.__license__,\n        url='https://ranger.github.io',\n        keywords='file-manager vim console file-launcher file-preview',\n        classifiers=[\n            'Environment :: Console',\n            'Environment :: Console :: Curses',\n            'Intended Audience :: Developers',\n            'Intended Audience :: End Users/Desktop',\n            'Intended Audience :: System Administrators',\n            'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',\n            'Operating System :: MacOS',\n            'Operating System :: POSIX',\n            'Operating System :: Unix',\n            'Programming Language :: Python :: 2.6',\n            'Programming Language :: Python :: 2.7',\n            'Programming Language :: Python :: 3.1',\n            'Programming Language :: Python :: 3.2',\n            'Programming Language :: Python :: 3.3',\n            'Programming Language :: Python :: 3.4',\n            'Programming Language :: Python :: 3.5',\n            'Programming Language :: Python :: 3.6',\n            'Topic :: Desktop Environment :: File Managers',\n            'Topic :: Utilities',\n        ],\n\n        cmdclass={'install_lib': InstallLib},\n\n        scripts=scripts_hack(\n            ('ranger.py', 'ranger'),\n            ('ranger/ext/rifle.py', 'rifle'),\n        ),\n        data_files=[\n            ('share/applications', [\n                'doc/ranger.desktop',\n            ]),\n            ('share/man/man1', [\n                'doc/ranger.1',\n                'doc/rifle.1',\n            ]),\n            ('share/doc/ranger', [\n                'doc/colorschemes.md',\n                'CHANGELOG.md',\n                'HACKING.md',\n                'README.md',\n            ]),\n            ('share/doc/ranger/config', findall('doc/config')),\n            ('share/doc/ranger/config/colorschemes', findall('doc/config/colorschemes')),\n            ('share/doc/ranger/examples', findall('examples')),\n            ('share/doc/ranger/tools', findall('doc/tools')),\n        ],\n        package_data={\n            'ranger': [\n                'data/*',\n                'config/rc.conf',\n                'config/rifle.conf',\n            ],\n        },\n        packages=(\n            'ranger',\n            'ranger.api',\n            'ranger.colorschemes',\n            'ranger.config',\n            'ranger.container',\n            'ranger.core',\n            'ranger.ext',\n            'ranger.ext.vcs',\n            'ranger.gui',\n            'ranger.gui.widgets',\n        ),\n    )\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}