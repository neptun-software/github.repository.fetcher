{
  "metadata": {
    "timestamp": 1736561371413,
    "page": 409,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Evil0ctal/Douyin_TikTok_Download_API",
      "stars": 10178,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pycharm\n.idea\n/app/api/endpoints/download/\n/download/\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.892578125,
          "content": "# Use the official Ubuntu base image\nFROM ubuntu:jammy\nLABEL maintainer=\"Evil0ctal\"\n\n# Set non-interactive frontend (useful for Docker builds)\nENV DEBIAN_FRONTEND=noninteractive\n\n# Update the package list and install Python and pip\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python3.11 \\\n    python3-pip \\\n    python3.11-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set a working directory\nWORKDIR /app\n\n# Copy the application source code to the container\nCOPY . /app\n\n# Install pip and set the PyPI mirror (Aliyun)\nRUN pip3 install -i https://mirrors.aliyun.com/pypi/simple/ -U pip \\\n    && pip3 config set global.index-url https://mirrors.aliyun.com/pypi/simple/\n\n# Install dependencies directly\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Make the start script executable\nRUN chmod +x start.sh\n\n# Command to run on container start\nCMD [\"./start.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Procfile",
          "type": "blob",
          "size": 0.021484375,
          "content": "web: python3 start.py\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 24.79296875,
          "content": "<div align=\"center\">\n<a href=\"https://douyin.wtf/\" alt=\"logo\" ><img src=\"https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/logo/logo192.png\" width=\"120\"/></a>\n</div>\n<h1 align=\"center\">Douyin_TikTok_Download_API(抖音/TikTok API)</h1>\n\n<div align=\"center\">\n\n[English](./README.en.md)\\|[Simplified Chinese](./README.md)\n\n🚀\"Douyin_TikTok_Download_API\" is a high-performance asynchronous API that can be used out of the box[Tik Tok](https://www.douyin.com)\\|[TikTok](https://www.tiktok.com)\\|[Bilibili](https://www.bilibili.com)Data crawling tool supports API calling, online batch analysis and downloading.\n\n[![GitHub license](https://img.shields.io/github/license/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](LICENSE)[![Release Version](https://img.shields.io/github/v/release/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/releases/latest)[![GitHub Star](https://img.shields.io/github/stars/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/stargazers)[![GitHub Fork](https://img.shields.io/github/forks/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/network/members)[![GitHub issues](https://img.shields.io/github/issues/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues)[![GitHub closed issues](https://img.shields.io/github/issues-closed/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues?q=is%3Aissue+is%3Aclosed)![GitHub Repo size](https://img.shields.io/github/repo-size/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&color=3cb371)<br>[![PyPI v](https://img.shields.io/pypi/v/douyin-tiktok-scraper?style=flat-square&color=%23a8e6cf)](https://pypi.org/project/douyin-tiktok-scraper/)[![PyPI wheel](https://img.shields.io/pypi/wheel/douyin-tiktok-scraper?style=flat-square&color=%23dcedc1)](https://pypi.org/project/douyin-tiktok-scraper/#files)[![PyPI dm](https://img.shields.io/pypi/dm/douyin-tiktok-scraper?style=flat-square&color=%23ffd3b6)](https://pypi.org/project/douyin-tiktok-scraper/)[![PyPI pyversions](https://img.shields.io/pypi/pyversions/douyin-tiktok-scraper?color=%23ffaaa5&style=flat-square)](https://pypi.org/project/douyin-tiktok-scraper/)<br>[![API status](https://img.shields.io/website?down_color=lightgrey&label=API%20Status&down_message=API%20offline&style=flat-square&up_color=%23dfb9ff&up_message=online&url=https%3A%2F%2Fapi.douyin.wtf%2Fdocs)](https://api.douyin.wtf/docs)[![TikHub-API status](https://img.shields.io/website?down_color=lightgrey&label=TikHub-API%20Status&down_message=API%20offline&style=flat-square&up_color=%23dfb9ff&up_message=online&url=https%3A%2F%2Fapi.tikhub.io%2Fdocs)](https://api.tikhub.io/docs)<br>[![爱发电](https://img.shields.io/badge/爱发电-evil0ctal-blue.svg?style=flat-square&color=ea4aaa&logo=github-sponsors)](https://afdian.net/@evil0ctal)[![Kofi](https://img.shields.io/badge/Kofi-evil0ctal-orange.svg?style=flat-square&logo=kofi)](https://ko-fi.com/evil0ctal)[![Patreon](https://img.shields.io/badge/Patreon-evil0ctal-red.svg?style=flat-square&logo=patreon)](https://www.patreon.com/evil0ctal)\n\n</div>\n\n## Sponsor\n\nThese sponsors have paid to be placed here,**Douyin_TikTok_Download_API**The project will always be free and open source. If you would like to become a sponsor of this project, please check out my[GitHub Sponsor Page](https://github.com/sponsors/evil0ctal)。\n\n<div align=\"center\">\n    <a href=\"https://www.tikhub.io/\" target=\"_blank\">\n        <img src=\"https://tikhub.io/wp-content/uploads/2024/11/Main-Logo.webp\" width=\"100\" alt=\"TikHub.io - Global Social Data & API Marketplace\">\n    </a>\n    <div>\n        <h2><b>TikHub.io</b></h2>\n        <p>Your Ultimate Social Media Data & API Marketplace</p>\n        <p>\n            Professional data solutions for Douyin, Xiaohongshu, TikTok, Instagram, YouTube, \n            Twitter, and more.<br>\n            Real-time Data | Flexible APIs | Seamless Integration | Competitive Pricing with Discounts\n        </p>\n        <p>\n            <b>Discover TikHub.io Marketplace</b><br>\n            Buy and sell custom APIs, services, and social media solutions.<br>\n            Join a thriving ecosystem of developers, businesses, and content creators.\n        </p>\n        <p><em>Trusted by leading global influencer marketing and social media intelligence platforms</em></p>\n    </div>\n</div>\n\n## 👻Introduction\n\n> 🚨If you need to use a private server to run this project, please refer to:[Deployment preparations](./README.md#%EF%B8%8F%E9%83%A8%E7%BD%B2%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%E8%AF%B7%E4%BB%94%E7%BB%86%E9%98%85%E8%AF%BB),[Docker deployment](./README.md#%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E4%BA%8C-docker),[One-click deployment](./README.md#%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E4%B8%80-linux)\n\nThis project is based on[PyWebIO](https://github.com/pywebio/PyWebIO)，[speedy](https://fastapi.tiangolo.com/)，[HTTPX](https://www.python-httpx.org/), fast and asynchronous[Tik Tok](https://www.douyin.com/)/[TikTok](https://www.tiktok.com/)Data crawling tool, and realizes online batch analysis and downloading of videos or photo albums without watermarks through the Web, data crawling API, iOS shortcut command without watermark downloads and other functions. You can deploy or modify this project yourself to achieve more functions, or you can call it directly in your project[scraper.py](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/Stable/scraper.py)or install an existing[pip package](https://pypi.org/project/douyin-tiktok-scraper/)As a parsing library, it is easy to crawl data, etc.....\n\n_Some simple application scenarios:_\n\n_Download prohibited videos, perform data analysis, download without watermark on iOS (with[Shortcut command APP that comes with iOS](https://apps.apple.com/cn/app/%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/id915249334)Cooperate with the API of this project to achieve in-app downloads or read clipboard downloads), etc....._\n\n## 🔊 V4 version notes\n\n-   If you are interested in writing this project together, please add us on WeChat`Evil0ctal`Note: Github project reconstruction, everyone can communicate and learn from each other in the group. Advertising and illegal things are not allowed. It is purely for making friends and technical exchanges.\n-   This project uses`X-Bogus`Algorithms and`A_Bogus`The algorithm requests the Web API of Douyin and TikTok.\n-   Due to Douyin's risk control, after deploying this project, please**Obtain the cookie of Douyin website in the browser and replace it in config.yaml.**\n-   Please read the document below before raising an issue. Solutions to most problems will be included in the document.\n-   This project is completely free, but when using it, please comply with:[Apache-2.0 license](https://github.com/Evil0ctal/Douyin_TikTok_Download_API?tab=Apache-2.0-1-ov-file#readme)\n\n## 🔖TikHub.io API\n\n[TikHub.io](https://api.tikhub.io/)It is an API platform that provides various public data interfaces including Douyin and TikTok. If you want to support[Douyin_TikTok_Download_API](https://github.com/Evil0ctal/Douyin_TikTok_Download_API)For project development, we strongly recommend that you choose[TikHub.io](https://api.tikhub.io/)。\n\n#### Features:\n\n> 📦 Ready to use right out of the box\n\nSimplify the use process and use the packaged SDK to quickly carry out development work. All API interfaces are designed based on RESTful architecture and are described and documented using OpenAPI specifications, with sample parameters included to ensure easier calling.\n\n> 💰 Cost advantage\n\nThere are no preset package restrictions and no monthly usage thresholds. All consumption is billed immediately based on actual usage, and tiered billing is performed based on the user's daily requests. At the same time, free quota can be obtained through daily sign-in in the user backend. , and these free credits will not expire.\n\n> ⚡️ Fast support\n\nWe have a large Discord community server, where administrators and other users will quickly reply to you and help you quickly solve current problems.\n\n> 🎉Embrace open source\n\nPart of TikHub's source code will be open sourced on Github, and it will sponsor authors of some open source projects.\n\n#### Link:\n\n-   Github:[TikHub Github](https://github.com/TikHubIO)\n-   Discord:[Tikhub discord](https://discord.com/invite/aMEAS8Xsvz)\n-   Register:[TikTok signup](https://beta-web.tikhub.io/en-us/users/signup)\n-   API Docs:[TikHub API Docs](https://api.tikhub.io/)\n\n## 🖥Demo site: I am very vulnerable...please do not stress test (·•᷄ࡇ•᷅ )\n\n> 😾The online download function of the demo site has been turned off, and due to cookie reasons, Douyin's parsing and API services cannot guarantee availability on the Demo site.\n\n🍔Web APP:<https://douyin.wtf/>\n\n🍟API Document:<https://douyin.wtf/docs>\n\n🌭TikHub API Document:<https://api.tikhub.io/docs>\n\n💾iOS Shortcut (shortcut command):[Shortcut release](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/discussions/104?sort=top)\n\n📦️Desktop downloader (recommended by warehouse):\n\n-   [Johnserf-Seed/TikTokDownload](https://github.com/Johnserf-Seed/TikTokDownload)\n-   [HFrost0/bilix](https://github.com/HFrost0/bilix)\n-   [Tairraos/TikDown - \\[needs update\\]](https://github.com/Tairraos/TikDown/)\n\n## ⚗️Technology stack\n\n-   [/app/web](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/app/web)-[PyWebIO](https://www.pyweb.io/)\n-   [/app/api](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/app/api)-[speedy](https://fastapi.tiangolo.com/)\n-   [/crawlers](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/crawlers)-[HTTPX](https://www.python-httpx.org/)\n\n> **_/crawlers_**\n\n-   Submit requests to APIs on different platforms and retrieve data. After processing, a dictionary (dict) is returned, and asynchronous support is supported.\n\n> **_/app/api_**\n\n-   Get request parameters and use`Crawlers`The related classes process the data and return it in JSON form, download the video, and cooperate with iOS shortcut commands to achieve fast calling and support asynchronous.\n\n> **_/app/web_**\n\n-   use`PyWebIO`A simple web program created to process the values ​​entered on the web page and use them`Crawlers`The related class processing interface outputs related data on the web page.\n\n**_Most of the parameters of the above files can be found in the corresponding`config.yaml`Modify in_**\n\n## 💡Project file structure\n\n    ./Douyin_TikTok_Download_API\n    ├─app\n    │  ├─api\n    │  │  ├─endpoints\n    │  │  └─models\n    │  ├─download\n    │  └─web\n    │      └─views\n    └─crawlers\n      ├─bilibili\n      │  └─web  \n      ├─douyin\n      │  └─web\n      ├─hybrid\n      ├─tiktok\n      │  ├─app\n      │  └─web\n      └─utils\n\n## ✨Supported functions:\n\n-   Batch parsing on the web page (supports Douyin/TikTok mixed parsing)\n-   Download videos or photo albums online.\n-   make[pip package](https://pypi.org/project/douyin-tiktok-scraper/)Conveniently and quickly import your projects\n-   [iOS shortcut commands to quickly call API](https://apps.apple.com/cn/app/%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/id915249334)Achieve in-app download of watermark-free videos/photo albums\n-   Complete API documentation ([Demo/Demonstration](https://api.douyin.wtf/docs))\n-   Rich API interface:\n    -   Douyin web version API\n\n        -   [x] Video data analysis\n        -   [x] Get user homepage work data\n        -   [x] Obtain the data of works liked by the user's homepage\n        -   [x] Obtain the data of collected works on the user's homepage\n        -   [x] Get user homepage information\n        -   [x] Get user collection work data\n        -   [x] Get user live stream data\n        -   [x] Get the live streaming data of a specified user\n        -   [x] Get the ranking of users who give gifts in the live broadcast room\n        -   [x] Get single video comment data\n        -   [x] Get the comment reply data of the specified video\n        -   [x] Generate msToken\n        -   [x] Generate verify_fp\n        -   [x] Generate s_v_web_id\n        -   [x] Generate X-Bogus parameters using interface URL\n        -   [x] Generate A_Bogus parameters using interface URL\n        -   [x] Extract a single user id\n        -   [x] Extract list user id\n        -   [x] Extract a single work id\n        -   [x] Extract list work id\n        -   [x] Extract live broadcast room number from list\n        -   [x] Extract live broadcast room number from list\n    -   TikTok web version API\n\n        -   [x] Video data analysis\n        -   [x] Get user homepage work data\n        -   [x] Obtain the data of works liked by the user's homepage\n        -   [x] Get user homepage information\n        -   [x] Get fan data on user homepage\n        -   [x] Get user homepage follow data\n        -   [x] Get user homepage collection work data\n        -   [x] Get user homepage collection data\n        -   [x] Get user homepage playlist data\n        -   [x] Get single video comment data\n        -   [x] Get the comment reply data of the specified video\n        -   [x] Generate msToken\n        -   [x] Generate ttwid\n        -   [x] Generate X-Bogus parameters using interface URL\n        -   [x] Extract a single user sec_user_id\n        -   [x] Extract list user sec_user_id\n        -   [x] Extract a single work id\n        -   [x] Extract list work id\n        -   [x] Get user unique_id\n        -   [x] Get list unique_id\n    -   Bilibili web version API\n        -   [x] Get individual video details\n        -   [x] Get video stream address\n        -   [x] Obtain user-published video work data\n        -   [x] Get all the user's favorites information\n        -   [x] Get video data in specified favorites\n        -   [x] Get information about a specified user\n        -   [x] Get comprehensive popular video information\n        -   [x] Get comments for specified video\n        -   [x] Get the reply to the specified comment under the video\n        -   [x] Get the specified user's news\n        -   [x] Get real-time video barrages\n        -   [x] Get specified live broadcast room information\n        -   [x] Get live room video stream\n        -   [x] Get the anchors who are live broadcasting in the specified partition\n        -   [x] Get a list of all live broadcast partitions\n        -   [x] Obtain video sub-p information through bv number\n\n* * *\n\n## 📦Call the parsing library (obsolete and needs to be updated):\n\n> 💡PyPi:<https://pypi.org/project/douyin-tiktok-scraper/>\n\nInstall the parsing library:`pip install douyin-tiktok-scraper`\n\n```python\nimport asyncio\nfrom douyin_tiktok_scraper.scraper import Scraper\n\napi = Scraper()\n\nasync def hybrid_parsing(url: str) -> dict:\n    # Hybrid parsing(Douyin/TikTok URL)\n    result = await api.hybrid_parsing(url)\n    print(f\"The hybrid parsing result:\\n {result}\")\n    return result\n\nasyncio.run(hybrid_parsing(url=input(\"Paste Douyin/TikTok/Bilibili share URL here: \")))\n```\n\n## 🗺️Supported submission formats:\n\n> 💡Tip: Including but not limited to the following examples. If you encounter link parsing failure, please open a new one.[issue](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues)\n\n-   Douyin sharing password (copy in APP)\n\n```text\n7.43 pda:/ 让你在几秒钟之内记住我  https://v.douyin.com/L5pbfdP/ 复制此链接，打开Dou音搜索，直接观看视频！\n```\n\n-   Douyin short URL (copy within APP)\n\n```text\nhttps://v.douyin.com/L4FJNR3/\n```\n\n-   Douyin normal URL (copy from web version)\n\n```text\nhttps://www.douyin.com/video/6914948781100338440\n```\n\n-   Douyin discovery page URL (APP copy)\n\n```text\nhttps://www.douyin.com/discover?modal_id=7069543727328398622\n```\n\n-   TikTok short URL (copy within APP)\n\n```text\nhttps://www.tiktok.com/t/ZTR9nDNWq/\n```\n\n-   TikTok normal URL (copy from web version)\n\n```text\nhttps://www.tiktok.com/@evil0ctal/video/7156033831819037994\n```\n\n-   Douyin/TikTok batch URL (no need to use matching separation)\n\n```text\nhttps://v.douyin.com/L4NpDJ6/\nhttps://www.douyin.com/video/7126745726494821640\n2.84 nqe:/ 骑白马的也可以是公主%%百万转场变身https://v.douyin.com/L4FJNR3/ 复制此链接，打开Dou音搜索，直接观看视频！\nhttps://www.tiktok.com/t/ZTR9nkkmL/\nhttps://www.tiktok.com/t/ZTR9nDNWq/\nhttps://www.tiktok.com/@evil0ctal/video/7156033831819037994\n```\n\n## 🛰️API documentation\n\n**_API documentation:_**\n\nlocal:<http://localhost/docs>\n\nOnline:<https://api.douyin.wtf/docs>\n\n**_API demo:_**\n\n-   Crawl video data (TikTok or Douyin hybrid analysis)`https://api.douyin.wtf/api/hybrid/video_data?url=[视频链接/Video URL]&minimal=false`\n-   Download videos/photo albums (TikTok or Douyin hybrid analysis)`https://api.douyin.wtf/api/download?url=[视频链接/Video URL]&prefix=true&with_watermark=false`\n\n**_For more demonstrations, please see the documentation..._**\n\n## ⚠️Preparation work before deployment (please read carefully):\n\n-   You need to solve the problem of crawler cookie risk control by yourself, otherwise the interface may become unusable. After modifying the configuration file, you need to restart the service for it to take effect, and it is best to use cookies from accounts that you have already logged in to.\n    -   Douyin web cookie (obtain and replace the cookie in the configuration file below):\n    -   <https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/30e56e5a7f97f87d60b1045befb1f6db147f8590/crawlers/douyin/web/config.yaml#L7>\n    -   TikTok web-side cookies (obtain and replace the cookies in the configuration file below):\n    -   <https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/30e56e5a7f97f87d60b1045befb1f6db147f8590/crawlers/tiktok/web/config.yaml#L6>\n-   I turned off the online download function of the demo site. The video someone downloaded was so huge that it crashed the server. You can right-click on the web page parsing results page to save the video...\n-   The cookies of the demo site are my own and are not guaranteed to be valid for a long time. They only serve as a demonstration. If you deploy it yourself, please obtain the cookies yourself.\n-   If you need to directly access the video link returned by TikTok Web API, an HTTP 403 error will occur. Please use the API in this project.`/api/download`The interface downloads TikTok videos. This interface has been manually closed in the demo site, and you need to deploy this project by yourself.\n-   here is one**Video tutorial**You can refer to:**_<https://www.bilibili.com/video/BV1vE421j7NR/>_**\n\n## 💻Deployment (Method 1 Linux)\n\n> 💡Tips: It is best to deploy this project to a server in the United States, otherwise strange BUGs may occur.\n\nRecommended for everyone to use[Digitalocean](https://www.digitalocean.com/)server, because you can have sex for free.\n\nUse my invitation link to sign up and you can get a $200 credit, and when you spend $25 on it, I can also get a $25 reward.\n\nMy invitation link:\n\n<https://m.do.co/c/9f72a27dec35>\n\n> Use script to deploy this project with one click\n\n-   This project provides a one-click deployment script that can quickly deploy this project on the server.\n-   The script was tested on Ubuntu 20.04 LTS. Other systems may have problems. If there are any problems, please solve them yourself.\n-   Download using wget command[install.sh](https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/bash/install.sh)to the server and run\n\n\n    wget -O install.sh https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/bash/install.sh && sudo bash install.sh\n\n> Start/stop service\n\n-   Use the following commands to control running or stopping the service:\n    -   `sudo systemctl start Douyin_TikTok_Download_API.service`\n    -   `sudo systemctl stop Douyin_TikTok_Download_API.service`\n\n> Turn on/off automatic operation at startup\n\n-   Use the following commands to set the service to run automatically at boot or cancel automatic run at boot:\n    -   `sudo systemctl enable Douyin_TikTok_Download_API.service`\n    -   `sudo systemctl disable Douyin_TikTok_Download_API.service`\n\n> Update project\n\n-   When the project is updated, ensure that the update script is executed in the virtual environment and all dependencies are updated. Enter the project bash directory and run update.sh:\n-   `cd /www/wwwroot/Douyin_TikTok_Download_API/bash && sudo bash update.sh`\n\n## 💽Deployment (Method 2 Docker)\n\n> 💡Tip: Docker deployment is the simplest deployment method and is suitable for users who are not familiar with Linux. This method is suitable for ensuring environment consistency, isolation and quick setup.\n> Please use a server that can normally access Douyin or TikTok, otherwise strange BUG may occur.\n\n### Preparation\n\nBefore you begin, make sure Docker is installed on your system. If you haven't installed Docker yet, you can install it from[Docker official website](https://www.docker.com/products/docker-desktop/)Download and install.\n\n### Step 1: Pull the Docker image\n\nFirst, pull the latest Douyin_TikTok_Download_API image from Docker Hub.\n\n```bash\ndocker pull evil0ctal/douyin_tiktok_download_api:latest\n```\n\nCan be replaced if needed`latest`Label the specific version you need to deploy.\n\n### Step 2: Run the Docker container\n\nAfter pulling the image, you can start a container from this image. Here are the commands to run the container, including basic configuration:\n\n```bash\ndocker run -d --name douyin_tiktok_api -p 80:80 evil0ctal/douyin_tiktok_download_api\n```\n\nEach part of this command does the following:\n\n-   `-d`: Run the container in the background (detached mode).\n-   `--name douyin_tiktok_api `: Name the container`douyin_tiktok_api `。\n-   `-p 80:80`: Map port 80 on the host to port 80 of the container. Adjust the port number based on your configuration or port availability.\n-   `evil0ctal/douyin_tiktok_download_api`: The name of the Docker image to use.\n\n### Step 3: Verify the container is running\n\nCheck if your container is running using the following command:\n\n```bash\ndocker ps\n```\n\nThis will list all active containers. Find`douyin_tiktok_api `to confirm that it is functioning properly.\n\n### Step 4: Access the App\n\nOnce the container is running, you should be able to pass`http://localhost`Or API client access Douyin_TikTok_Download_API. Adjust the URL if a different port is configured or accessed from a remote location.\n\n### Optional: Custom Docker commands\n\nFor more advanced deployments, you may wish to customize Docker commands to include environment variables, volume mounts for persistent data, or other Docker parameters. Here is an example:\n\n```bash\ndocker run -d --name douyin_tiktok_api -p 80:80 \\\n  -v /path/to/your/data:/data \\\n  -e MY_ENV_VAR=my_value \\\n  evil0ctal/douyin_tiktok_download_api\n```\n\n-   `-v /path/to/your/data:/data`: Change the`/path/to/your/data`Directory mounted to the container`/data`Directory for persisting or sharing data.\n-   `-e MY_ENV_VAR=my_value`: Set environment variables within the container`MY_ENV_VAR`, whose value is`my_value`。\n\n### Configuration file modification\n\nMost of the configuration of the project can be found in the following directories:`config.yaml`File modification:\n\n-   `/crawlers/douyin/web/config.yaml`\n-   `/crawlers/tiktok/web/config.yaml`\n-   `/crawlers/tiktok/app/config.yaml`\n\n### Step 5: Stop and remove the container\n\nWhen you need to stop and remove a container, use the following commands:\n\n```bash\n# Stop\ndocker stop douyin_tiktok_api \n\n# Remove\ndocker rm douyin_tiktok_api\n```\n\n## 📸Screenshot\n\n**_API speed test (compared to official API)_**\n\n<details><summary>🔎点击展开截图</summary>\n\nDouyin official API:![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/Douyin_API.png?raw=true)\n\nAPI of this project:![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/Douyin_API_Douyin_wtf.png?raw=true)\n\nTikTok official API:![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/TikTok_API.png?raw=true)\n\nAPI of this project:![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/TikTok_API_Douyin_wtf.png?raw=true)\n\n</details>\n<hr>\n\n**_Project interface_**\n\n<details><summary>🔎点击展开截图</summary>\n\nWeb main interface:\n\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/v3_screenshots/Home.png?raw=true)\n\nWeb main interface:\n\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/v3_screenshots/Home_en.png?raw=true)\n\n</details>\n<hr>\n\n## 📜 Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=Evil0ctal/Douyin_TikTok_Download_API&type=Timeline)](https://star-history.com/#Evil0ctal/Douyin_TikTok_Download_API&Timeline)\n\n[Apache-2.0 license](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/Stable/LICENSE)\n\n> Start: 2021/11/06\n\n> GitHub:[@Evil0ctal](https://github.com/Evil0ctal)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.2578125,
          "content": "<div align=\"center\">\n<a href=\"https://douyin.wtf/\" alt=\"logo\" ><img src=\"https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/logo/logo192.png\" width=\"120\"/></a>\n</div>\n<h1 align=\"center\">Douyin_TikTok_Download_API(抖音/TikTok API)</h1>\n\n<div align=\"center\">\n\n[English](./README.en.md) | [简体中文](./README.md)\n\n🚀「Douyin_TikTok_Download_API」是一个开箱即用的高性能异步[抖音](https://www.douyin.com)|[TikTok](https://www.tiktok.com)|[Bilibili](https://www.bilibili.com)数据爬取工具，支持API调用，在线批量解析及下载。\n\n[![GitHub license](https://img.shields.io/github/license/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](LICENSE)\n[![Release Version](https://img.shields.io/github/v/release/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/releases/latest)\n[![GitHub Star](https://img.shields.io/github/stars/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/stargazers)\n[![GitHub Fork](https://img.shields.io/github/forks/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/network/members)\n[![GitHub issues](https://img.shields.io/github/issues/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues)\n[![GitHub closed issues](https://img.shields.io/github/issues-closed/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square)](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues?q=is%3Aissue+is%3Aclosed)\n![GitHub Repo size](https://img.shields.io/github/repo-size/Evil0ctal/Douyin_TikTok_Download_API?style=flat-square&color=3cb371)\n<br>\n[![PyPI v](https://img.shields.io/pypi/v/douyin-tiktok-scraper?style=flat-square&color=%23a8e6cf)](https://pypi.org/project/douyin-tiktok-scraper/)\n[![PyPI wheel](https://img.shields.io/pypi/wheel/douyin-tiktok-scraper?style=flat-square&color=%23dcedc1)](https://pypi.org/project/douyin-tiktok-scraper/#files)\n[![PyPI dm](https://img.shields.io/pypi/dm/douyin-tiktok-scraper?style=flat-square&color=%23ffd3b6)](https://pypi.org/project/douyin-tiktok-scraper/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/douyin-tiktok-scraper?color=%23ffaaa5&style=flat-square)](https://pypi.org/project/douyin-tiktok-scraper/)\n<br>\n[![API status](https://img.shields.io/website?down_color=lightgrey&label=API%20Status&down_message=API%20offline&style=flat-square&up_color=%23dfb9ff&up_message=online&url=https%3A%2F%2Fapi.douyin.wtf%2Fdocs)](https://api.douyin.wtf/docs)\n[![TikHub-API status](https://img.shields.io/website?down_color=lightgrey&label=TikHub-API%20Status&down_message=API%20offline&style=flat-square&up_color=%23dfb9ff&up_message=online&url=https%3A%2F%2Fapi.tikhub.io%2Fdocs)](https://api.tikhub.io/docs)\n<br>\n[![爱发电](https://img.shields.io/badge/爱发电-evil0ctal-blue.svg?style=flat-square&color=ea4aaa&logo=github-sponsors)](https://afdian.net/@evil0ctal)\n[![Kofi](https://img.shields.io/badge/Kofi-evil0ctal-orange.svg?style=flat-square&logo=kofi)](https://ko-fi.com/evil0ctal)\n[![Patreon](https://img.shields.io/badge/Patreon-evil0ctal-red.svg?style=flat-square&logo=patreon)](https://www.patreon.com/evil0ctal)\n\n</div>\n\n## 赞助商\n\n这些赞助商已付费放置在这里，**Douyin_TikTok_Download_API** 项目将永远免费且开源。如果您希望成为该项目的赞助商，请查看我的 [GitHub 赞助商页面](https://github.com/sponsors/evil0ctal)。\n\n<div align=\"center\">\n    <a href=\"https://www.tikhub.io/\" target=\"_blank\">\n        <img src=\"https://tikhub.io/wp-content/uploads/2024/11/Main-Logo.webp\" width=\"100\" alt=\"TikHub.io - Global Social Data & API Marketplace\">\n    </a>\n    <div>\n        <h2><b>TikHub.io</b></h2>\n        <p>Your Ultimate Social Media Data & API Marketplace</p>\n        <p>\n            Professional data solutions for Douyin, Xiaohongshu, TikTok, Instagram, YouTube, \n            Twitter, and more.<br>\n            Real-time Data | Flexible APIs | Seamless Integration | Competitive Pricing with Discounts\n        </p>\n        <p>\n            <b>Discover TikHub.io Marketplace</b><br>\n            Buy and sell custom APIs, services, and social media solutions.<br>\n            Join a thriving ecosystem of developers, businesses, and content creators.\n        </p>\n        <p><em>Trusted by leading global influencer marketing and social media intelligence platforms</em></p>\n    </div>\n</div>\n\n\n## 👻介绍\n\n> 🚨如需使用私有服务器运行本项目，请参考：[部署准备工作](./README.md#%EF%B8%8F%E9%83%A8%E7%BD%B2%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%E8%AF%B7%E4%BB%94%E7%BB%86%E9%98%85%E8%AF%BB), [Docker部署](./README.md#%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E4%BA%8C-docker), [一键部署](./README.md#%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E4%B8%80-linux)\n\n本项目是基于 [PyWebIO](https://github.com/pywebio/PyWebIO)，[FastAPI](https://fastapi.tiangolo.com/)，[HTTPX](https://www.python-httpx.org/)，快速异步的[抖音](https://www.douyin.com/)/[TikTok](https://www.tiktok.com/)数据爬取工具，并通过Web端实现在线批量解析以及下载无水印视频或图集，数据爬取API，iOS快捷指令无水印下载等功能。你可以自己部署或改造本项目实现更多功能，也可以在你的项目中直接调用[scraper.py](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/Stable/scraper.py)或安装现有的[pip包](https://pypi.org/project/douyin-tiktok-scraper/)作为解析库轻松爬取数据等.....\n\n*一些简单的运用场景：*\n\n*下载禁止下载的视频，进行数据分析，iOS无水印下载（搭配[iOS自带的快捷指令APP](https://apps.apple.com/cn/app/%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/id915249334)\n配合本项目API实现应用内下载或读取剪贴板下载）等.....*\n\n## 🔊 V4 版本备注\n\n- 感兴趣一起写这个项目的给请加微信`Evil0ctal`备注github项目重构，大家可以在群里互相交流学习，不允许发广告以及违法的东西，纯粹交朋友和技术交流。\n- 本项目使用`X-Bogus`算法以及`A_Bogus`算法请求抖音和TikTok的Web API。\n- 由于Douyin的风控，部署完本项目后请在**浏览器中获取Douyin网站的Cookie然后在config.yaml中进行替换。**\n- 请在提出issue之前先阅读下方的文档，大多数问题的解决方法都会包含在文档中。\n- 本项目是完全免费的，但使用时请遵守：[Apache-2.0 license](https://github.com/Evil0ctal/Douyin_TikTok_Download_API?tab=Apache-2.0-1-ov-file#readme)\n\n## 🔖TikHub.io API\n\n[TikHub.io](https://api.tikhub.io/)是一个API平台，提供包括Douyin、TikTok在内的各种公开数据接口，如果您想支持 [Douyin_TikTok_Download_API](https://github.com/Evil0ctal/Douyin_TikTok_Download_API) 项目的开发，我们强烈建议您选择[TikHub.io](https://api.tikhub.io/)。\n\n#### 特点：\n\n> 📦 开箱即用\n\n简化使用流程，利用封装好的SDK迅速开展开发工作。所有API接口均依据RESTful架构设计，并使用OpenAPI规范进行描述和文档化，附带示例参数，确保调用更加简便。\n\n> 💰 成本优势\n\n不预设套餐限制，没有月度使用门槛，所有消费按实际使用量即时计费，并且根据用户每日的请求量进行阶梯式计费，同时可以通过每日签到在用户后台进行签到获取免费的额度，并且这些免费额度不会过期。\n\n> ⚡️ 快速支持\n\n我们有一个庞大的Discord社区服务器，管理员和其他用户会在服务器中快速的回复你，帮助你快速解决当前的问题。\n\n> 🎉 拥抱开源\n\nTikHub的部分源代码会开源在Github上，并且会赞助一些开源项目的作者。\n\n#### 链接：\n\n- Github: [TikHub Github](https://github.com/TikHubIO)\n- Discord: [TikHub Discord](https://discord.com/invite/aMEAS8Xsvz)\n- Register: [TikHub signup](https://beta-web.tikhub.io/en-us/users/signup)\n- API Docs: [TikHub API Docs](https://api.tikhub.io/)\n\n## 🖥演示站点: 我很脆弱...请勿压测(·•᷄ࡇ•᷅ ）\n\n> 😾演示站点的在线下载功能已关闭，并且由于Cookie原因，Douyin的解析以及API服务在Demo站点无法保证可用性。\n\n🍔Web APP: [https://douyin.wtf/](https://douyin.wtf/)\n\n🍟API Document: [https://douyin.wtf/docs](https://douyin.wtf/docs)\n\n🌭TikHub API Document: [https://api.tikhub.io/docs](https://api.tikhub.io/docs)\n\n💾iOS Shortcut(快捷指令): [Shortcut release](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/discussions/104?sort=top)\n\n📦️桌面端下载器(仓库推荐)：\n\n- [Johnserf-Seed/TikTokDownload](https://github.com/Johnserf-Seed/TikTokDownload)\n- [HFrost0/bilix](https://github.com/HFrost0/bilix)\n- [Tairraos/TikDown - [需更新]](https://github.com/Tairraos/TikDown/)\n\n## ⚗️技术栈\n\n* [/app/web](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/app/web) - [PyWebIO](https://www.pyweb.io/)\n* [/app/api](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/app/api) - [FastAPI](https://fastapi.tiangolo.com/)\n* [/crawlers](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/crawlers) - [HTTPX](https://www.python-httpx.org/)\n\n> ***/crawlers***\n\n- 向不同平台的API提交请求并取回数据，处理后返回字典(dict)，支持异步。\n\n> ***/app/api***\n\n- 获得请求参数并使用`Crawlers`相关类处理数据后以JSON形式返回，视频下载，配合iOS快捷指令实现快速调用，支持异步。\n\n> ***/app/web***\n\n- 使用`PyWebIO`制作的简易Web程序，将网页输入的值进行处理后使用`Crawlers`相关类处理接口输出相关数据在网页上。\n\n***以上文件的参数大多可在对应的`config.yaml`中进行修改***\n\n## 💡项目文件结构\n\n```\n./Douyin_TikTok_Download_API\n├─app\n│  ├─api\n│  │  ├─endpoints\n│  │  └─models\n│  ├─download\n│  └─web\n│      └─views\n└─crawlers\n  ├─bilibili\n  │  └─web  \n  ├─douyin\n  │  └─web\n  ├─hybrid\n  ├─tiktok\n  │  ├─app\n  │  └─web\n  └─utils\n```\n\n## ✨支持功能：\n\n- 网页端批量解析(支持抖音/TikTok混合解析)\n- 在线下载视频或图集。\n- 制作[pip包](https://pypi.org/project/douyin-tiktok-scraper/)方便快速导入你的项目\n- [iOS快捷指令快速调用API](https://apps.apple.com/cn/app/%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/id915249334)实现应用内下载无水印视频/图集\n- 完善的API文档([Demo/演示](https://api.douyin.wtf/docs))\n- 丰富的API接口：\n  - 抖音网页版API\n    \n    - [x] 视频数据解析\n    - [x] 获取用户主页作品数据\n    - [x] 获取用户主页喜欢作品数据\n    - [x] 获取用户主页收藏作品数据\n    - [x] 获取用户主页信息\n    - [x] 获取用户合辑作品数据\n    - [x] 获取用户直播流数据\n    - [x] 获取指定用户的直播流数据\n    - [x] 获取直播间送礼用户排行榜\n    - [x] 获取单个视频评论数据\n    - [x] 获取指定视频的评论回复数据\n    - [x] 生成msToken\n    - [x] 生成verify_fp\n    - [x] 生成s_v_web_id\n    - [x] 使用接口网址生成X-Bogus参数\n    - [x] 使用接口网址生成A_Bogus参数\n    - [x] 提取单个用户id\n    - [x] 提取列表用户id\n    - [x] 提取单个作品id\n    - [x] 提取列表作品id\n    - [x] 提取列表直播间号\n    - [x] 提取列表直播间号\n  - TikTok网页版API\n    \n    - [x] 视频数据解析\n    - [x] 获取用户主页作品数据\n    - [x] 获取用户主页喜欢作品数据\n    - [x] 获取用户主页信息\n    - [x] 获取用户主页粉丝数据\n    - [x] 获取用户主页关注数据\n    - [x] 获取用户主页合辑作品数据\n    - [x] 获取用户主页搜藏数据\n    - [x] 获取用户主页播放列表数据\n    - [x] 获取单个视频评论数据\n    - [x] 获取指定视频的评论回复数据\n    - [x] 生成msToken\n    - [x] 生成ttwid\n    - [x] 使用接口网址生成X-Bogus参数\n    - [x] 提取单个用户sec_user_id\n    - [x] 提取列表用户sec_user_id\n    - [x] 提取单个作品id\n    - [x] 提取列表作品id\n    - [x] 获取用户unique_id\n    - [x] 获取列表unique_id\n  - 哔哩哔哩网页版API\n    - [x] 获取单个视频详情信息\n    - [x] 获取视频流地址\n    - [x] 获取用户发布视频作品数据\n    - [x] 获取用户所有收藏夹信息\n    - [x] 获取指定收藏夹内视频数据\n    - [x] 获取指定用户的信息\n    - [x] 获取综合热门视频信息\n    - [x] 获取指定视频的评论\n    - [x] 获取视频下指定评论的回复\n    - [x] 获取指定用户动态\n    - [x] 获取视频实时弹幕\n    - [x] 获取指定直播间信息\n    - [x] 获取直播间视频流\n    - [x] 获取指定分区正在直播的主播\n    - [x] 获取所有直播分区列表\n    - [x] 通过bv号获得视频分p信息\n---\n\n## 📦调用解析库（已废弃需要更新）:\n\n> 💡PyPi：[https://pypi.org/project/douyin-tiktok-scraper/](https://pypi.org/project/douyin-tiktok-scraper/)\n\n安装解析库：`pip install douyin-tiktok-scraper`\n\n```python\nimport asyncio\nfrom douyin_tiktok_scraper.scraper import Scraper\n\napi = Scraper()\n\nasync def hybrid_parsing(url: str) -> dict:\n    # Hybrid parsing(Douyin/TikTok URL)\n    result = await api.hybrid_parsing(url)\n    print(f\"The hybrid parsing result:\\n {result}\")\n    return result\n\nasyncio.run(hybrid_parsing(url=input(\"Paste Douyin/TikTok/Bilibili share URL here: \")))\n```\n\n## 🗺️支持的提交格式：\n\n> 💡提示：包含但不仅限于以下例子，如果遇到链接解析失败请开启一个新 [issue](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/issues)\n\n- 抖音分享口令  (APP内复制)\n\n```text\n7.43 pda:/ 让你在几秒钟之内记住我  https://v.douyin.com/L5pbfdP/ 复制此链接，打开Dou音搜索，直接观看视频！\n```\n\n- 抖音短网址 (APP内复制)\n\n```text\nhttps://v.douyin.com/L4FJNR3/\n```\n\n- 抖音正常网址 (网页版复制)\n\n```text\nhttps://www.douyin.com/video/6914948781100338440\n```\n\n- 抖音发现页网址 (APP复制)\n\n```text\nhttps://www.douyin.com/discover?modal_id=7069543727328398622\n```\n\n- TikTok短网址 (APP内复制)\n\n```text\nhttps://www.tiktok.com/t/ZTR9nDNWq/\n```\n\n- TikTok正常网址 (网页版复制)\n\n```text\nhttps://www.tiktok.com/@evil0ctal/video/7156033831819037994\n```\n\n- 抖音/TikTok批量网址(无需使用符合隔开)\n\n```text\nhttps://v.douyin.com/L4NpDJ6/\nhttps://www.douyin.com/video/7126745726494821640\n2.84 nqe:/ 骑白马的也可以是公主%%百万转场变身https://v.douyin.com/L4FJNR3/ 复制此链接，打开Dou音搜索，直接观看视频！\nhttps://www.tiktok.com/t/ZTR9nkkmL/\nhttps://www.tiktok.com/t/ZTR9nDNWq/\nhttps://www.tiktok.com/@evil0ctal/video/7156033831819037994\n```\n\n## 🛰️API文档\n\n***API文档：***\n\n本地：[http://localhost/docs](http://localhost/docs)\n\n在线：[https://api.douyin.wtf/docs](https://api.douyin.wtf/docs)\n\n***API演示：***\n\n- 爬取视频数据(TikTok或Douyin混合解析)\n  `https://api.douyin.wtf/api/hybrid/video_data?url=[视频链接/Video URL]&minimal=false`\n- 下载视频/图集(TikTok或Douyin混合解析)\n  `https://api.douyin.wtf/api/download?url=[视频链接/Video URL]&prefix=true&with_watermark=false`\n\n***更多演示请查看文档内容......***\n\n## ⚠️部署前的准备工作(请仔细阅读)：\n\n- 你需要自行解决爬虫Cookie风控问题，否则可能会导致接口无法使用，修改完配置文件后需要重启服务才能生效，并且最好使用已经登录过的账号的Cookie。\n  - 抖音网页端Cookie（自行获取并替换下面配置文件中的Cookie）：\n  - https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/30e56e5a7f97f87d60b1045befb1f6db147f8590/crawlers/douyin/web/config.yaml#L7\n  - TikTok网页端Cookie（自行获取并替换下面配置文件中的Cookie）：\n  - https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/30e56e5a7f97f87d60b1045befb1f6db147f8590/crawlers/tiktok/web/config.yaml#L6\n- 演示站点的在线下载功能被我关掉了，有人下的视频巨大无比直接给我服务器干崩了，你可以在网页解析结果页面右键保存视频...\n- 演示站点的Cookie是我自己的，不保证长期有效，只起到演示作用，自己部署的话请自行获取Cookie。\n- 需要TikTok Web API返回的视频链接直接访问会发生HTTP 403错误，请使用本项目API中的`/api/download`接口对TikTok 视频进行下载，这个接口在演示站点中已经被手动关闭了，需要你自行部署本项目。\n- 这里有一个**视频教程**可以参考：***[https://www.bilibili.com/video/BV1vE421j7NR/](https://www.bilibili.com/video/BV1vE421j7NR/)***\n\n## 💻部署(方式一 Linux)\n\n> 💡提示：最好将本项目部署至美国地区的服务器，否则可能会出现奇怪的BUG。\n\n推荐大家使用[Digitalocean](https://www.digitalocean.com/)的服务器，因为可以白嫖。\n\n使用我的邀请链接注册，你可以获得$200的credit，当你在上面消费$25时，我也可以获得$25的奖励。\n\n我的邀请链接：\n\n[https://m.do.co/c/9f72a27dec35](https://m.do.co/c/9f72a27dec35)\n\n> 使用脚本一键部署本项目\n\n- 本项目提供了一键部署脚本，可以在服务器上快速部署本项目。\n- 脚本是在Ubuntu 20.04 LTS上测试的，其他系统可能会有问题，如果有问题请自行解决。\n- 使用wget命令下载[install.sh](https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/bash/install.sh)至服务器并运行\n\n```\nwget -O install.sh https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/bash/install.sh && sudo bash install.sh\n```\n\n> 开启/停止服务\n\n- 使用以下命令来控制服务的运行或停止：\n  - `sudo systemctl start Douyin_TikTok_Download_API.service`\n  - `sudo systemctl stop Douyin_TikTok_Download_API.service`\n\n> 开启/关闭开机自动运行\n\n- 使用以下命令来设置服务开机自动运行或取消开机自动运行：\n  - `sudo systemctl enable Douyin_TikTok_Download_API.service`\n  - `sudo systemctl disable Douyin_TikTok_Download_API.service`\n\n> 更新项目\n\n- 项目更新时，确保更新脚本在虚拟环境中执行，更新所有依赖。进入项目bash目录并运行update.sh：\n- `cd /www/wwwroot/Douyin_TikTok_Download_API/bash && sudo bash update.sh`\n\n## 💽部署(方式二 Docker)\n\n> 💡提示：Docker部署是最简单的部署方式，适合不熟悉Linux的用户，这种方法适合保证环境一致性、隔离性和快速设置。\n> 请使用能正常访问Douyin或TikTok的服务器，否则可能会出现奇怪的BUG。\n\n### 准备工作\n\n开始之前，请确保您的系统已安装Docker。如果还未安装Docker，可以从[Docker官方网站](https://www.docker.com/products/docker-desktop/)下载并安装。\n\n### 步骤1：拉取Docker镜像\n\n首先，从Docker Hub拉取最新的Douyin_TikTok_Download_API镜像。\n\n```bash\ndocker pull evil0ctal/douyin_tiktok_download_api:latest\n```\n\n如果需要，可以替换`latest`为你需要部署的具体版本标签。\n\n### 步骤2：运行Docker容器\n\n拉取镜像后，您可以从此镜像启动一个容器。以下是运行容器的命令，包括基本配置：\n\n```bash\ndocker run -d --name douyin_tiktok_api -p 80:80 evil0ctal/douyin_tiktok_download_api\n```\n\n这个命令的每个部分作用如下：\n\n* `-d`：在后台运行容器（分离模式）。\n* `--name douyin_tiktok_api `：将容器命名为`douyin_tiktok_api `。\n* `-p 80:80`：将主机上的80端口映射到容器的80端口。根据您的配置或端口可用性调整端口号。\n* `evil0ctal/douyin_tiktok_download_api`：要使用的Docker镜像名称。\n\n### 步骤3：验证容器是否运行\n\n使用以下命令检查您的容器是否正在运行：\n\n```bash\ndocker ps\n```\n\n这将列出所有活动容器。查找`douyin_tiktok_api `以确认其正常运行。\n\n### 步骤4：访问应用程序\n\n容器运行后，您应该能够通过`http://localhost`或API客户端访问Douyin_TikTok_Download_API。如果配置了不同的端口或从远程位置访问，请调整URL。\n\n### 可选：自定义Docker命令\n\n对于更高级的部署，您可能希望自定义Docker命令，包括环境变量、持久数据的卷挂载或其他Docker参数。这是一个示例：\n\n```bash\ndocker run -d --name douyin_tiktok_api -p 80:80 \\\n  -v /path/to/your/data:/data \\\n  -e MY_ENV_VAR=my_value \\\n  evil0ctal/douyin_tiktok_download_api\n```\n\n* `-v /path/to/your/data:/data`：将主机上的`/path/to/your/data`目录挂载到容器的`/data`目录，用于持久化或共享数据。\n* `-e MY_ENV_VAR=my_value`：在容器内设置环境变量`MY_ENV_VAR`，其值为`my_value`。\n\n### 配置文件修改\n\n项目的大部分配置可以在以下几个目录中的`config.yaml`文件进行修改：\n\n* `/crawlers/douyin/web/config.yaml`\n* `/crawlers/tiktok/web/config.yaml`\n* `/crawlers/tiktok/app/config.yaml`\n\n### 步骤5：停止并移除容器\n\n需要停止和移除容器时，使用以下命令：\n\n```bash\n# Stop\ndocker stop douyin_tiktok_api \n\n# Remove\ndocker rm douyin_tiktok_api\n```\n\n## 📸截图\n\n***API速度测试(对比官方API)***\n\n<details><summary>🔎点击展开截图</summary>\n\n抖音官方API:\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/Douyin_API.png?raw=true)\n\n本项目API:\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/Douyin_API_Douyin_wtf.png?raw=true)\n\nTikTok官方API:\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/TikTok_API.png?raw=true)\n\n本项目API:\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/benchmarks/TikTok_API_Douyin_wtf.png?raw=true)\n\n</details>\n<hr>\n\n***项目界面***\n\n<details><summary>🔎点击展开截图</summary>\n\nWeb主界面:\n\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/v3_screenshots/Home.png?raw=true)\n\nWeb main interface:\n\n![](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/main/Screenshots/v3_screenshots/Home_en.png?raw=true)\n\n</details>\n<hr>\n\n## 📜 Star历史\n\n[![Star History Chart](https://api.star-history.com/svg?repos=Evil0ctal/Douyin_TikTok_Download_API&type=Timeline)](https://star-history.com/#Evil0ctal/Douyin_TikTok_Download_API&Timeline)\n\n[Apache-2.0 license](https://github.com/Evil0ctal/Douyin_TikTok_Download_API/blob/Stable/LICENSE)\n\n> Start: 2021/11/06\n\n> GitHub: [@Evil0ctal](https://github.com/Evil0ctal)\n"
        },
        {
          "name": "Screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "bash",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.yaml",
          "type": "blob",
          "size": 2.14453125,
          "content": "# Web\nWeb:\n  # APP Switch\n  PyWebIO_Enable: true    # Enable APP | 启用APP\n\n  # APP Information\n  Domain: https://douyin.wtf    # Web domain | Web域名\n\n  # APP Configuration\n  PyWebIO_Theme: minty    # PyWebIO theme | PyWebIO主题\n  Max_Take_URLs: 30    # Maximum number of URLs that can be taken at a time | 一次最多可以取得的URL数量\n\n\n  # Web Information\n  Tab_Title: Douyin_TikTok_Download_API    # Web title | Web标题\n  Description: Douyin_TikTok_Download_API is a free open-source API service for Douyin/TikTok. It provides a simple, fast, and stable API for developers to develop applications based on Douyin/TikTok.    # Web description | Web描述\n  Favicon: https://raw.githubusercontent.com/Evil0ctal/Douyin_TikTok_Download_API/main/logo/logo192.png    # Web favicon | Web图标\n\n  # Fun Configuration\n  Easter_Egg: true    # Enable Easter Egg | 启用彩蛋\n  Live2D_Enable: true\n  Live2D_JS: https://fastly.jsdelivr.net/gh/TikHubIO/TikHub_live2d@latest/autoload.js\n\n# API\nAPI:\n  # Network Configuration\n  Host_IP: 0.0.0.0    # default IP | 默认IP\n  Host_Port: 80    # default port is 80 | 默认端口为80\n  Docs_URL: /docs    # API documentation URL | API文档URL\n  Redoc_URL: /redoc    # API documentation URL | API文档URL\n\n  # API Information\n  Version: V4.0.9    # API version | API版本\n  Update_Time: 2024/09/25    # API update time | API更新时间\n  Environment: Demo    # API environment | API环境\n\n  # Download Configuration\n  Download_Switch: true    # Enable download function | 启用下载功能\n\n  # File Configuration\n  Download_Path: \"./download\"    # Default download directory | 默认下载目录\n  Download_File_Prefix: \"douyin.wtf_\"    # Default download file prefix | 默认下载文件前缀\n\n\n# iOS Shortcut\niOS_Shortcut:\n  iOS_Shortcut_Version: 7.0\n  iOS_Shortcut_Update_Time: 2024/07/05\n  iOS_Shortcut_Link: https://www.icloud.com/shortcuts/06f891a026df40cfa967a907feaea632\n  iOS_Shortcut_Link_EN: https://www.icloud.com/shortcuts/06f891a026df40cfa967a907feaea632\n  iOS_Shortcut_Update_Note: 重构了快捷指令以兼容TikHub API。\n  iOS_Shortcut_Update_Note_EN: Refactored the shortcut to be compatible with the TikHub API.\n"
        },
        {
          "name": "crawlers",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.9482421875,
          "content": "version: \"3.9\"  # Docker Compose 文件版本\n\nservices:  # 定义服务列表\n  douyin_tiktok_download_api:  # 服务名称\n    image: evil0ctal/douyin_tiktok_download_api  # 使用的 Docker 镜像\n    network_mode: host  # 使用主机网络模式\n    container_name: douyin_tiktok_download_api  # 容器名称\n    restart: always  # 容器退出后总是重启\n    volumes: # 挂载卷配置\n      - ./douyin_tiktok_download_api/douyin_web/config.yaml:/app/crawlers/douyin/web/config.yaml\n      - ./douyin_tiktok_download_api/tiktok_web/config.yaml:/app/crawlers/tiktok/web/config.yaml\n      - ./douyin_tiktok_download_api/tiktok_app/config.yaml:/app/crawlers/tiktok/app/config.yaml\n    environment:  # 环境变量配置\n      TZ: Asia/Shanghai  # 设置时区为亚洲/上海\n      PUID: 1026  # 设置容器内部的用户 ID\n      PGID: 100  # 设置容器内部的用户组 ID\n    privileged: true  # 设置特权模式以便容器内部可以执行特权操作\n"
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.619140625,
          "content": "aiofiles==23.2.1\nannotated-types==0.6.0\nanyio==4.3.0\nbrowser-cookie3==0.19.1\ncertifi==2024.2.2\nclick==8.1.7\ncolorama==0.4.6\nfastapi==0.110.2\nh11==0.14.0\nhttpcore==1.0.5\nhttpx==0.27.0\nidna==3.7\nimportlib_resources==6.4.0\nlz4==4.3.3\nmarkdown-it-py==3.0.0\nmdurl==0.1.2\nnumpy\npycryptodomex==3.20.0\npydantic==2.7.0\npydantic_core==2.18.1\npyfiglet==1.0.0\nPygments==2.17.2\npypng==0.20220715.0\npywebio==1.8.3\npywebio-battery==0.6.0\nPyYAML==6.0.1\nqrcode==7.4.2\nrich==13.7.1\nsniffio==1.3.1\nstarlette==0.37.2\ntornado==6.4\ntyping_extensions==4.11.0\nua-parser==0.18.0\nuser-agents==2.2.0\nuvicorn==0.29.0\nwebsockets==12.0\ngmssl==3.2.2\ntenacity~=9.0.0"
        },
        {
          "name": "start.py",
          "type": "blob",
          "size": 1.62890625,
          "content": "# ==============================================================================\n# Copyright (C) 2021 Evil0ctal\n#\n# This file is part of the Douyin_TikTok_Download_API project.\n#\n# This project is licensed under the Apache License 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at:\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n# 　　　　 　　  ＿＿\n# 　　　 　　 ／＞　　フ\n# 　　　 　　| 　_　 _ l\n# 　 　　 　／` ミ＿xノ\n# 　　 　 /　　　 　 |       Feed me Stars ⭐ ️\n# 　　　 /　 ヽ　　 ﾉ\n# 　 　 │　　|　|　|\n# 　／￣|　　 |　|　|\n# 　| (￣ヽ＿_ヽ_)__)\n# 　＼二つ\n# ==============================================================================\n#\n# Contributor Link, Thanks for your contribution:\n# - https://github.com/Evil0ctal\n# - https://github.com/Johnserf-Seed\n# - https://github.com/Evil0ctal/Douyin_TikTok_Download_API/graphs/contributors\n#\n# ==============================================================================\n\n\nfrom app.main import Host_IP, Host_Port\nimport uvicorn\n\nif __name__ == '__main__':\n    uvicorn.run('app.main:app', host=Host_IP, port=Host_Port, reload=True, log_level=\"info\")\n"
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 0.0830078125,
          "content": "#!/bin/sh\n\n# Starting the Python application directly using python3\npython3 start.py\n"
        }
      ]
    }
  ]
}