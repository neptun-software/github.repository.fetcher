{
  "metadata": {
    "timestamp": 1736561244326,
    "page": 232,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "THUDM/ChatGLM3",
      "stars": 13596,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1708984375,
          "content": "__pycache__\n\n# finetune_demo: generated & downloaded files\nfinetune_demo/output\nfinetune_demo/data\nfinetune_demo/formatted_data\nToolAlpaca/\nAdvertiseGen/\n*.gz\n*.idea\n.DS_Store"
        },
        {
          "name": "DEPLOYMENT.md",
          "type": "blob",
          "size": 2.048828125,
          "content": "## 低成本部署\n\n### 模型量化\n\n默认情况下，模型以 FP16 精度加载，运行上述代码需要大概 13GB 显存。如果你的 GPU 显存有限，可以尝试以量化方式加载模型，使用方法如下：\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\",trust_remote_code=True).quantize(4).cuda()\n```\n\n模型量化会带来一定的性能损失，经过测试，ChatGLM3-6B 在 4-bit 量化下仍然能够进行自然流畅的生成。\n\n### CPU 部署\n\n如果你没有 GPU 硬件的话，也可以在 CPU 上进行推理，但是推理速度会更慢。使用方法如下（需要大概 32GB 内存）\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True).float()\n```\n\n### Mac 部署\n\n对于搭载了 Apple Silicon 或者 AMD GPU 的 Mac，可以使用 MPS 后端来在 GPU 上运行 ChatGLM3-6B。需要参考 Apple 的 [官方说明](https://developer.apple.com/metal/pytorch) 安装 PyTorch-Nightly（正确的版本号应该是2.x.x.dev2023xxxx，而不是 2.x.x）。\n\n目前在 MacOS 上只支持[从本地加载模型](README.md#从本地加载模型)。将代码中的模型加载改为从本地加载，并使用 mps 后端：\n```python\nmodel = AutoModel.from_pretrained(\"your local path\", trust_remote_code=True).to('mps')\n```\n\n加载半精度的 ChatGLM3-6B 模型需要大概 13GB 内存。内存较小的机器（比如 16GB 内存的 MacBook Pro），在空余内存不足的情况下会使用硬盘上的虚拟内存，导致推理速度严重变慢。\n\n### 多卡部署\n如果你有多张 GPU，但是每张 GPU 的显存大小都不足以容纳完整的模型，那么可以将模型切分在多张GPU上。首先安装 accelerate: `pip install accelerate`，然后通过如下方法加载模型：\n\n```python\nfrom utils import load_model_on_gpus\n\nmodel = load_model_on_gpus(\"THUDM/chatglm3-6b\", num_gpus=2)\n```\n即可将模型部署到两张 GPU 上进行推理。你可以将 `num_gpus` 改为你希望使用的 GPU 数。默认是均匀切分的，你也可以传入 `device_map` 参数来自己指定。 "
        },
        {
          "name": "DEPLOYMENT_en.md",
          "type": "blob",
          "size": 2.25,
          "content": "## Low-Cost Deployment\n\n### Model Quantization\n\nBy default, the model is loaded with FP16 precision, running the above code requires about 13GB of VRAM. If your GPU's VRAM is limited, you can try loading the model quantitatively, as follows:\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\",trust_remote_code=True).quantize(4).cuda()\n```\n\nModel quantization will bring some performance loss. Through testing, ChatGLM3-6B can still perform natural and smooth generation under 4-bit quantization.\n\n### CPU Deployment\n\nIf you don't have GPU hardware, you can also run inference on the CPU, but the inference speed will be slower. The usage is as follows (requires about 32GB of memory):\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True).float()\n```\n\n### Mac Deployment\n\nFor Macs equipped with Apple Silicon or AMD GPUs, the MPS backend can be used to run ChatGLM3-6B on the GPU. Refer to Apple's [official instructions](https://developer.apple.com/metal/pytorch) to install PyTorch-Nightly (the correct version number should be 2.x.x.dev2023xxxx, not 2.x.x).\n\nCurrently, only [loading the model locally](README_en.md#load-model-locally) is supported on MacOS. Change the model loading in the code to load locally and use the MPS backend:\n\n```python\nmodel = AutoModel.from_pretrained(\"your local path\", trust_remote_code=True).to('mps')\n```\n\nLoading the half-precision ChatGLM3-6B model requires about 13GB of memory. Machines with smaller memory (such as a 16GB memory MacBook Pro) will use virtual memory on the hard disk when there is insufficient free memory, resulting in a significant slowdown in inference speed.\n\n### Multi-GPU Deployment\n\nIf you have multiple GPUs, but each GPU's VRAM size is not enough to accommodate the complete model, then the model can be split across multiple GPUs. First, install accelerate: `pip install accelerate`, and then load the model through the following methods:\n\n```python\nfrom utils import load_model_on_gpus\n\nmodel = load_model_on_gpus(\"THUDM/chatglm3-6b\", num_gpus=2)\n```\n\nThis allows the model to be deployed on two GPUs for inference. You can change `num_gpus` to the number of GPUs you want to use. It is evenly split by default, but you can also pass the `device_map` parameter to specify it yourself."
        },
        {
          "name": "Intel_device_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0869140625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2024 ChatGLM team @ Zhipu AI\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MODEL_LICENSE",
          "type": "blob",
          "size": 5.056640625,
          "content": "The ChatGLM3-6B License\n\n1. 定义\n\n“许可方”是指分发其软件的 ChatGLM3-6B 模型团队。\n\n“软件”是指根据本许可提供的 ChatGLM3-6B 模型参数。\n\n2. 许可授予\n\n根据本许可的条款和条件，许可方特此授予您非排他性、全球性、不可转让、不可再许可、可撤销、免版税的版权许可。\n本许可允许您免费使用本仓库中的所有开源模型进行学术研究，对于希望将模型用于商业目的的用户，需在[这里](https://open.bigmodel.cn/mla/form)完成登记。\n经过登记的用户可以免费使用本模型进行商业活动，但必须遵守本许可的所有条款和条件。\n上述版权声明和本许可声明应包含在本软件的所有副本或重要部分中。\n\n3.限制\n\n您不得出于任何军事或非法目的使用、复制、修改、合并、发布、分发、复制或创建本软件的全部或部分衍生作品。\n\n您不得利用本软件从事任何危害国家安全和国家统一，危害社会公共利益及公序良俗，侵犯他人商业秘密、知识产权、名誉权、肖像权、财产权等权益的行为。\n\n您在使用中应遵循使用地所适用的法律法规政策、道德规范等要求。\n\n4.免责声明\n\n本软件“按原样”提供，不提供任何明示或暗示的保证，包括但不限于对适销性、特定用途的适用性和非侵权性的保证。 在任何情况下，作者或版权持有人均不对任何索赔、损害或其他责任负责，无论是在合同诉讼、侵权行为还是其他方面，由软件或软件的使用或其他交易引起、由软件引起或与之相关 软件。\n\n5. 责任限制\n\n除适用法律禁止的范围外，在任何情况下且根据任何法律理论，无论是基于侵权行为、疏忽、合同、责任或其他原因，任何许可方均不对您承担任何直接、间接、特殊、偶然、示范性、 或间接损害，或任何其他商业损失，即使许可人已被告知此类损害的可能性。\n\n6.争议解决\n\n本许可受中华人民共和国法律管辖并按其解释。 因本许可引起的或与本许可有关的任何争议应提交北京市海淀区人民法院。\n\n请注意，许可证可能会更新到更全面的版本。 有关许可和版权的任何问题，请通过 license@zhipuai.cn 与我们联系。\n\n1. Definitions\n\n“Licensor” means the ChatGLM3-6B Model Team that distributes its Software.\n\n“Software” means the ChatGLM3-6B model parameters made available under this license.\n\n2. License Grant\n\nUnder the terms and conditions of this license, the Licensor hereby grants you a non-exclusive, worldwide, non-transferable, non-sublicensable, revocable, royalty-free copyright license.\nThis license permits you to use all open-source models in this repository for academic research free. Users who wish to use the models for commercial purposes must register [here](https://open.bigmodel.cn/mla/form).\nRegistered users may use the models for commercial activities free of charge, but must comply with all terms and conditions of this license.\nThe license notice shall be included in all copies or substantial portions of the Software.\n\n3. Restrictions\nYou are not allowed to use, copy, modify, merge, publish, distribute, copy or create all or part of the derivative works of this software for any military or illegal purposes.\nYou are not allowed to use this software to engage in any behavior that endangers national security and unity, endangers social public interests and public order, infringes on the rights and interests of others such as trade secrets, intellectual property rights, reputation rights, portrait rights, and property rights.\nYou should comply with the applicable laws, regulations, policies, ethical standards, and other requirements in the place of use during use.\n\n4. Disclaimer\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n5. Limitation of Liability\n\nEXCEPT TO THE EXTENT PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL THEORY, WHETHER BASED IN TORT, NEGLIGENCE, CONTRACT, LIABILITY, OR OTHERWISE WILL ANY LICENSOR BE LIABLE TO YOU FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES, OR ANY OTHER COMMERCIAL LOSSES, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n6. Dispute Resolution\n\nThis license shall be governed and construed in accordance with the laws of People’s Republic of China. Any dispute arising from or in connection with this License shall be submitted to Haidian District People's Court in Beijing.\n\nNote that the license is subject to update to a more comprehensive version.  For any questions related to the license and copyright, please contact us at license@zhipuai.cn.\n"
        },
        {
          "name": "PROMPT.md",
          "type": "blob",
          "size": 6.7236328125,
          "content": "## ChatGLM3 对话格式\n为了避免用户输入的注入攻击，以及统一 Code Interpreter，Tool & Agent 等任务的输入，ChatGLM3 采用了全新的对话格式。\n\n### 规定\n#### 整体结构\nChatGLM3 对话的格式由若干对话组成，其中每个对话包含对话头和内容，一个典型的多轮对话结构如下\n```text\n<|system|>\nYou are ChatGLM3, a large language model trained by Zhipu.AI. Follow the user's instructions carefully. Respond using markdown.\n<|user|>\nHello\n<|assistant|>\nHello, I'm ChatGLM3. What can I assist you today?\n```\n**实际中每轮对话内容并不一定以换行符结尾，这里只是为了美观，下同**\n\n#### 对话头\n对话头占完整的一行，格式为\n```text\n<|role|>{metadata}\n```\n其中 `<|role|>` 部分使用 special token 表示，无法从文本形式被 tokenizer 编码以防止注入。metadata 部分采用纯文本表示，为可选内容。\n* `<|system|>`：系统信息，设计上可穿插于对话中，**但目前规定仅可以出现在开头**\n* `<|user|>`：用户\n  - 不会连续出现多个来自 `<|user|>` 的信息\n* `<|assistant|>`：AI 助手\n  - 在出现之前必须有一个来自 `<|user|>` 的信息\n* `<|observation|>`：外部的返回结果\n  - 必须在 `<|assistant|>` 的信息之后\n\n### 样例场景\n\n为提升可读性，下列样例场景中表示角色的 special token 前均额外添加了一个换行符。实际使用及 tokenizer 实现中均无需额外添加这一换行。\n\n#### 多轮对话\n* 有且仅有 `<|user|>`、`<|assistant|>`、`<|system|>` 三种 role\n```text\n<|system|>\nYou are ChatGLM3, a large language model trained by Zhipu.AI. Follow the user's instructions carefully. Respond using markdown.\n<|user|>\nHello\n<|assistant|>\nHello, I'm ChatGLM3. What can I assist you today?\n```\n\n#### 工具调用\n````\n<|system|>\nAnswer the following questions as best as you can. You have access to the following tools:\n[\n    {\n        \"name\": \"get_current_weather\",\n        \"description\": \"Get the current weather in a given location\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The city and state, e.g. San Francisco, CA\",\n                },\n                \"unit\": {\"type\": \"string\"},\n            },\n            \"required\": [\"location\"],\n        },\n    }\n]\n<|user|>\n今天北京的天气怎么样？\n<|assistant|>\n好的，让我们来查看今天的天气\n<|assistant|>get_current_weather\n```python\ntool_call(location=\"beijing\", unit=\"celsius\")\n```\n<|observation|>\n{\"temperature\": 22}\n<|assistant|>\n根据查询结果，今天北京的气温为 22 摄氏度。\n````\n\n#### 代码执行\n* 有 `<|user|>`、`<|assistant|>`、`<|system|>`、`<|observation|>` 四种 role。其中 `<|assistant|>` 的 metadata 只有 interpreter。\n\n`````text\n<|system|>\n你是一位智能AI助手，你叫ChatGLM3，你连接着一台电脑，但请注意不能联网。在使用Python解决任务时，你可以运行代码并得到结果，如果运行结果有错误，你需要尽可能对代码进行改进。你可以处理用户上传到电脑上的文件，文件默认存储路径是/mnt/data/。\n<|user|>\n#File: /mnt/data/metadata.jsonl\n#Size: 35380\n#File uploaded\n文件中是否存在缺失值或异常值？\n<|assistant|>\n首先，我将读取您提供的文件，并查看其内容以确定是否存在缺失值或异常值。\n\n我们从加载文件开始：\n<|assistant|>interpreter\n```python\nimport json\n\n# Load the uploaded file\ndata = []\nwith open(\"/mnt/data/metadata.jsonl\", 'r') as file:\n    for line in file:\n        data.append(json.loads(line))\n\n# Display the first few records to get a sense of the data\ndata[:5]\n```\n<|observation|>\n```result\n[{'file_name': 'aceinthehole.png',\n  'name': 'Ace in the Hole',\n  'type': 'survivor',\n  'description': 'Lady Luck always seems to be throwing something good your way.'},\n {'file_name': 'adrenaline.png',\n  'name': 'Adrenaline',\n  'type': 'survivor',\n  'description': 'You are fuelled by unexpected energy when on the verge of escape.'},\n {'file_name': 'aftercare.png',\n  'name': 'Aftercare',\n  'type': 'survivor',\n  'description': \"Unlocks potential in one's aura reading ability.\"},\n {'file_name': 'agitation.png',\n  'name': 'Agitation',\n  'type': 'killer',\n  'description': 'You get excited in anticipation of hooking your prey.'},\n {'file_name': 'alert.png',\n  'name': 'Alert',\n  'type': 'survivor',\n  'description': 'Your acute senses are on high alert.'}]\n```\n<|assistant|>\n该文件看起来包含有关某些条目的元数据，每个条目有以下字段：\n\n\n- `file_name`: 文件名称\n- `name`: 名称\n- `type`: 类型（例如 \"survivor\" 或 \"killer\"）\n- `description`: 描述\n\n接下来，我将检查这些字段是否存在缺失值。\n<|assistant|>interpreter\n```python\n# Check for missing values in each column\nmissing_values = {key: sum(1 for item in data if key not in item) for key in data[0].keys()}\n\nmissing_values\n```\n<|observation|>\n```result\n{'file_name': 0, 'name': 0, 'type': 0, 'description': 0}\n```\n<|assistant|>\n每个字段都没有缺失值。这意味着每个条目都完整。\n\n接下来，我们可以检查是否存在任何潜在的异常值。这通常需要更深入的分析和对数据的了解，但我可以从一些基本的统计和分布开始进行检查。为了这样做，我们可以查看“type”字段的值分布，看看是否有任何意外的类别。\n<|assistant|>interpreter\n```python\n# Check the distribution of values in the 'type' column\ntype_distribution = {key: sum(1 for item in data if item['type'] == key) for key in set(item['type'] for item in data)}\n\ntype_distribution\n```\n<|observation|>\n```result\n{'survivor': 116, 'killer': 103}\n```\n<|assistant|>\n“type”字段有两个值：“survivor”和“killer”。其中，“survivor”有116个条目，而“killer”有103个条目。\n\n从这个初步的检查中，我们没有发现任何明显的异常值。\n\n如果您有任何特定的标准或其他字段需要检查，我可以为您提供更详细的分析。您还希望我检查什么呢？\n<|user|>\n帮我画一个爱心\n<|assistant|>interpreter\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# 爱心形状的参数方程\ndef heart(t):\n    x = 16 * np.sin(t) ** 3\n    y = 13 * np.cos(t) - 5 * np.cos(2 * t) - 2 * np.cos(3 * t) - np.cos(4 * t)\n    return x, y\n\nt = np.linspace(0, 2 * np.pi, 1000)\nx, y = heart(t)\n\nplt.figure(figsize=(6, 6))\nplt.plot(x, y, color='red')\nplt.axis('equal')\nplt.axis('off')\nplt.show()\n```\n<|observation|>\n```result\n[Image]\n```\n<|assistant|>\n这是一个爱心形状。我使用了参数方程来描述这个形状，并使用matplotlib进行了绘制。如果您有任何其他需求或问题，请随时告诉我。\n<|user|>  # End\n````"
        },
        {
          "name": "PROMPT_en.md",
          "type": "blob",
          "size": 6.951171875,
          "content": "## ChatGLM3 Chat Format\nTo avoid injection attacks from user input, and to unify the input of Code Interpreter, Tool & Agent and other tasks, ChatGLM3 adopts a brand-new dialogue format.\n\n### Regulations\n#### Overall Structure\nThe format of the ChatGLM3 dialogue consists of several conversations, each of which contains a dialogue header and content. A typical multi-turn dialogue structure is as follows:\n```text\n<|system|>\nYou are ChatGLM3, a large language model trained by Zhipu.AI. Follow the user's instructions carefully. Respond using markdown.\n<|user|>\nHello\n<|assistant|>\nHello, I'm ChatGLM3. What can I assist you today?\n```\n\n#### Chat Header\nThe chat header occupies a complete line, formatted as:\n```text\n<|role|>{metadata}\n```\nWhere `<|role|>` part is represented in a special token,  which can’t be encoded by the tokenizer from the text form to prevent injection attacks. The `metadata` part is represented in plain texts and is optional content.\n* `<|system|>`: System information, which can be interspersed in the dialogue in design, **but currently only appears at the beginning**\n* `<|user|>`: User\n  - Multiple messages from `<|user|>` will not appear continuously\n* `<|assistant|>`: AI assistant\n  - There must be a message from `<|user|>` before it appears\n* `<|observation|>`: External return result\n  - Must be after the message from `<|assistant|>`\n\n### Example Scenarios\n\nFor better readability, an extra `\\n` is added before each role special token. This extra `\\n` should not be added in actual use and tokenizer implementation.\n\n#### Multi-turn Dialogue\n* There are only three roles: `<|user|>`, `<|assistant|>`, and `<|system|>`.\n```text\n<|system|>\nYou are ChatGLM3, a large language model trained by Zhipu.AI. Follow the user's instructions carefully. Respond using markdown.\n<|user|>\nHello\n<|assistant|>\nHello, I'm ChatGLM3. What can I assist you today?\n```\n\n#### Tool Calling\n````\n<|system|>\nAnswer the following questions as best as you can. You have access to the following tools:\n[\n    {\n        \"name\": \"get_current_weather\",\n        \"description\": \"Get the current weather in a given location\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The city and state, e.g. San Francisco, CA\",\n                },\n                \"unit\": {\"type\": \"string\"},\n            },\n            \"required\": [\"location\"],\n        },\n    }\n]\n<|user|>\nWhat's the weather in Beijing today?\n<|assistant|>\nOkay, let's look up the weather in Bejing today.\n<|assistant|>get_current_weather\n```python\ntool_call(location=\"beijing\", unit=\"celsius\")\n```\n<|observation|>\n{\"temperature\": 22}\n<|assistant|>\nAccording to the query results, the temperature in Beijing today is 22 degrees Celsius.\n````\n\n#### Code Execution\n* Four available roles: `<|user|>`, `<|assistant|>`, `<|system|>`, and `<|observation|>`, where `metadata` of `<|assistant|>` can only be interpreter.\n\n`````text\n<|system|>\nYou are an intelligent AI assistant, named ChatGLM3. You are connected to a computer, but please note that you cannot connect to the internet. When using Python to solve tasks, you can run the code and get the results. If there are errors in the running results, you need to improve the code as much as possible. You can process files uploaded by users to your computer, and the default storage path for files is /mnt/data/.\n<|user|>\n#File: /mnt/data/metadata.jsonl\n#Size: 35380\n#File uploaded\nAre there missing or abnormal values in the file?\n<|assistant|>\nFirstly, I will read the file you provided and review its contents to determine if there are missing or abnormal values.\n\nWe start by loading the file:\n<|assistant|>interpreter\n```python\nimport json\n\n# Load the uploaded file\ndata = []\nwith open(\"/mnt/data/metadata.jsonl\", 'r') as file:\n    for line in file:\n        data.append(json.loads(line))\n\n# Display the first few records to get a sense of the data\ndata[:5]\n```\n<|observation|>\n```result\n[{'file_name': 'aceinthehole.png',\n  'name': 'Ace in the Hole',\n  'type': 'survivor',\n  'description': 'Lady Luck always seems to be throwing something good your way.'},\n {'file_name': 'adrenaline.png',\n  'name': 'Adrenaline',\n  'type': 'survivor',\n  'description': 'You are fuelled by unexpected energy when on the verge of escape.'},\n {'file_name': 'aftercare.png',\n  'name': 'Aftercare',\n  'type': 'survivor',\n  'description': \"Unlocks potential in one's aura reading ability.\"},\n {'file_name': 'agitation.png',\n  'name': 'Agitation',\n  'type': 'killer',\n  'description': 'You get excited in anticipation of hooking your prey.'},\n {'file_name': 'alert.png',\n  'name': 'Alert',\n  'type': 'survivor',\n  'description': 'Your acute senses are on high alert.'}]\n```\n<|assistant|>\nThis file appears to contain metadata about certain items, each with the following fields:\n\n- `file_name`\n- `name`\n- `type` (e.g. \"survivor\" or \"killer\")\n- `description`\n\nNext, I will check for missing values in these fields.\n<|assistant|>interpreter\n```python\n# Check for missing values in each column\nmissing_values = {key: sum(1 for item in data if key not in item) for key in data[0].keys()}\n\nmissing_values\n```\n<|observation|>\n```result\n{'file_name': 0, 'name': 0, 'type': 0, 'description': 0}\n```\n<|assistant|>\nEach field has no missing values. This means that each entry is complete.\n\nNext, we can check for any potential outliers. This usually requires deeper analysis and understanding of the data, but I can start by examining some basic statistics and distributions. To do this, we can check the value distribution of the \"type\" field to see if there are any unexpected categories.\n<|assistant|>interpreter\n```python\n# Check the distribution of values in the 'type' column\ntype_distribution = {key: sum(1 for item in data if item['type'] == key) for key in set(item['type'] for item in data)}\n\ntype_distribution\n```\n<|observation|>\n```result\n{'survivor': 116, 'killer': 103}\n```\n<|assistant|>\nThe 'type' field has two values: 'survivor' and 'killer'. Among them, 'survivor' has 116 entries, while 'killer' has 103 entries.\n\nFrom this preliminary examination, we did not find any obvious abnormal values.\n\nIf you have any specific standards or other fields that need to be checked, I can provide you with a more detailed analysis. What else do you want me to check?\n<|user|>\nHelp me draw a heart\n<|assistant|>interpreter\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# The parametric equation for the shape of a heart\ndef heart(t):\n    x = 16 * np.sin(t) ** 3\n    y = 13 * np.cos(t) - 5 * np.cos(2 * t) - 2 * np.cos(3 * t) - np.cos(4 * t)\n    return x, y\n\nt = np.linspace(0, 2 * np.pi, 1000)\nx, y = heart(t)\n\nplt.figure(figsize=(6, 6))\nplt.plot(x, y, color='red')\nplt.axis('equal')\nplt.axis('off')\nplt.show()\n```\n<|observation|>\n```result\n[Image]\n```\n<|assistant|>\nThis is a shape of heart. I used parametric equations to describe this shape and drew it using Matplotlib. If you have any other needs or questions, please feel free to let me know.\n<|user|>  # End\n````\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.6591796875,
          "content": "# ChatGLM3\n\n<p align=\"center\">\n📄<a href=\"https://arxiv.org/pdf/2406.12793\" target=\"_blank\"> Report </a> • 🤗 <a href=\"https://huggingface.co/THUDM/chatglm3-6b\" target=\"_blank\">HF Repo</a> • 🤖 <a href=\"https://modelscope.cn/models/ZhipuAI/chatglm3-6b\" target=\"_blank\">ModelScope</a> • 🟣 <a href=\"https://www.wisemodel.cn/models/ZhipuAI/chatglm3-6b\" target=\"_blank\">WiseModel</a> • 📔 <a href=\"https://lslfd0slxc.feishu.cn/wiki/WvQbwIJ9tiPAxGk8ywDck6yfnof\" target=\"_blank\">Document</a> •  🧰 <a href=\"https://openxlab.org.cn/models/hot/THUDM\" target=\"_blank\">OpenXLab</a> • 🐦 <a href=\"https://twitter.com/thukeg\" target=\"_blank\">Twitter</a><br>\n</p>\n<p align=\"center\">\n    👋 加入我们的 <a href=\"https://discord.gg/fK2dz4bg\" target=\"_blank\">Discord</a> 和 <a href=\"resources/WECHAT.md\" target=\"_blank\">微信</a>\n</p>\n<p align=\"center\">\n📍在 <a href=\"https://www.chatglm.cn\">chatglm.cn</a> 体验更大规模的 ChatGLM 模型。\n</p>\n\n[Read this in English.](./README_en.md)\n\n📔 关于`ChatGLM3-6B` 更为详细的使用信息，可以参考\n\n+ [ChatGLM3 开放技术文档](https://lslfd0slxc.feishu.cn/wiki/WvQbwIJ9tiPAxGk8ywDck6yfnof?from=from_copylink)\n+ [Bilibili video](https://www.bilibili.com/video/BV1uC4y1J7yA)\n+ [YouTube video](https://www.youtube.com/watch?v=Pw9PB6R7ORA)\n\n## GLM-4 开源模型和API\n\n我们已经发布最新的 **GLM-4** 模型，该模型在多个指标上有了新的突破，您可以在以下两个渠道体验我们的最新模型。\n\n+ [GLM-4 开源模型](https://github.com/THUDM/GLM-4) 我们已经开源了 GLM-4-9B 系列模型，在各项指标的测试上有明显提升，欢迎尝试。\n+ [智谱清言](https://chatglm.cn/main/detail?fr=ecology_x) 体验最新版 GLM-4，包括 **GLMs，All tools**等功能。\n+ [API平台](https://open.bigmodel.cn/?utm_campaign=open&_channel_track_key=OWTVNma9) 新一代 API 平台已经上线，您可以直接在\n  API\n  平台上体验 `GLM-4-0520`、`GLM-4-air`、`GLM-4-airx`、`GLM-4-flash`、`GLM-4`、`GLM-3-Turbo`、`CharacterGLM-3`，`CogView-3`\n  等新模型。\n  其中`GLM-4`、`GLM-3-Turbo`两个模型支持了 `System Prompt`、`Function Call`、 `Retrieval`、`Web_Search`等新功能，欢迎体验。\n\n+ [GLM-4 API 开源教程](https://github.com/MetaGLM/glm-cookbook/) GLM-4 API教程和基础应用，欢迎尝试。\n  API相关问题可以在本开源教程疑问，或者使用 [GLM-4 API AI助手](https://open.bigmodel.cn/shareapp/v1/?share_code=sQwt5qyqYVaNh1O_87p8O)\n  来获得常见问题的帮助。\n\n-----\n\n## ChatGLM3 介绍\n\n**ChatGLM3** 是智谱AI和清华大学 KEG 实验室联合发布的对话预训练模型。ChatGLM3-6B 是 ChatGLM3\n系列中的开源模型，在保留了前两代模型对话流畅、部署门槛低等众多优秀特性的基础上，ChatGLM3-6B 引入了如下特性：\n\n1. **更强大的基础模型：** ChatGLM3-6B 的基础模型 ChatGLM3-6B-Base\n   采用了更多样的训练数据、更充分的训练步数和更合理的训练策略。在语义、数学、推理、代码、知识等不同角度的数据集上测评显示，*\n   *ChatGLM3-6B-Base 具有在 10B 以下的基础模型中最强的性能**。\n2. **更完整的功能支持：** ChatGLM3-6B 采用了全新设计的 [Prompt 格式](PROMPT.md)\n   ，除正常的多轮对话外。同时原生支持[工具调用](tools_using_demo/README.md)（Function Call）、代码执行（Code Interpreter）和\n   Agent 任务等复杂场景。\n3. **更全面的开源序列：** 除了对话模型 [ChatGLM3-6B](https://huggingface.co/THUDM/chatglm3-6b)\n   外，还开源了基础模型 [ChatGLM3-6B-Base](https://huggingface.co/THUDM/chatglm3-6b-base)\n   、长文本对话模型 [ChatGLM3-6B-32K](https://huggingface.co/THUDM/chatglm3-6b-32k)\n   和进一步强化了对于长文本理解能力的 [ChatGLM3-6B-128K](https://huggingface.co/THUDM/chatglm3-6b-128k)。以上所有权重对学术研究**完全开放**\n   ，在填写 [问卷](https://open.bigmodel.cn/mla/form) 进行登记后**亦允许免费商业使用**。\n\n-----\n\nChatGLM3 开源模型旨在与开源社区一起推动大模型技术发展，恳请开发者和大家遵守 [开源协议](MODEL_LICENSE)\n，勿将开源模型和代码及基于开源项目产生的衍生物用于任何可能给国家和社会带来危害的用途以及用于任何未经过安全评估和备案的服务。目前，本项目团队未基于\n**ChatGLM3 开源模型**开发任何应用，包括网页端、安卓、苹果 iOS 及 Windows App 等应用。\n\n尽管模型在训练的各个阶段都尽力确保数据的合规性和准确性，但由于 ChatGLM3-6B\n模型规模较小，且模型受概率随机性因素影响，无法保证输出内容的准确。同时模型的输出容易被用户的输入误导。*\n*本项目不承担开源模型和代码导致的数据安全、舆情风险或发生任何模型被误导、滥用、传播、不当利用而产生的风险和责任。**\n\n## 模型列表\n                      \n|      Model       | Seq Length |                                                                                                                                              Download                                                                                                                                    |\n|:----------------:|:----------:|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n|   ChatGLM3-6B    |     8k     |        [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b) \\| [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b) \\| [WiseModel](https://www.wisemodel.cn/models/ZhipuAI/chatglm3-6b)         \\| [OpenXLab](https://openxlab.org.cn/models/detail/THUDM/chatglm3-6b)      |\n| ChatGLM3-6B-Base |     8k     | [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b-base) \\| [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b-base) \\| [WiseModel](https://www.wisemodel.cn/models/ZhipuAI/chatglm3-6b-base) \\| [OpenXLabl](https://openxlab.org.cn/models/detail/THUDM/chatglm3-6b-base)|\n| ChatGLM3-6B-32K  |    32k     |  [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b-32k) \\| [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b-32k) \\| [WiseModel](https://www.wisemodel.cn/models/ZhipuAI/chatglm3-6b-32k)   \\| [OpenXLab](https://openxlab.org.cn/models/detail/THUDM/chatglm3-6b-32k)  |\n| ChatGLM3-6B-128K |    128k    |     [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b-128k) ｜ [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b-128k)\\| [OpenXLab](https://openxlab.org.cn/models/detail/THUDM/chatglm3-6b-128k) |\n\n<br> 请注意，所有模型的最新更新都会在 Huggingface 率先发布。 ModelScope 和 WiseModel 由于没有与 Huggingface 同步，需要开发人员手动更新，可能会在\nHuggingface 更新后一段时间内同步更新。\n\n## 友情链接\n\n以下优秀开源仓库已经对 ChatGLM3-6B 模型深度支持，欢迎大家扩展学习。\n\n推理加速：\n\n* [chatglm.cpp](https://github.com/li-plus/chatglm.cpp): 类似 llama.cpp 的量化加速推理方案，实现笔记本上实时对话\n* [ChatGLM3-TPU](https://github.com/sophgo/ChatGLM3-TPU): 采用TPU加速推理方案，在算能端侧芯片BM1684X（16T@FP16，内存16G）上实时运行约7.5 token/s\n* [TensorRT-LLM](https://github.com/NVIDIA/TensorRT-LLM/tree/main):\n  NVIDIA开发的高性能 GPU 加速推理方案，可以参考此 [步骤](./tensorrt_llm_demo/README.md) 部署 ChatGLM3-6B 模型\n* [OpenVINO](https://github.com/openvinotoolkit): \nIntel 开发的高性能 CPU 和 GPU 加速推理方案，可以参考此 [步骤](./Intel_device_demo/openvino_demo/README.md) 部署 ChatGLM3-6B 模型\n\n高效微调：\n\n* [LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory): 优秀易上手的高效微调框架。\n\n应用框架：\n\n* [LangChain-Chatchat](https://github.com/chatchat-space/Langchain-Chatchat): 基于 ChatGLM 等大语言模型与 Langchain\n  等应用框架实现，开源、可离线部署的检索增强生成(RAG)大模型知识库项目。\n\n* [BISHENG](https://github.com/dataelement/bisheng): 开源大模型应用开发平台,赋能和加速大模型应用开发落地，帮助用户以最佳体验进入下一代应用开发模式。\n\n* [RAGFlow](https://github.com/infiniflow/ragflow): RAGFlow 是一款基于深度文档理解构建的开源 RAG（Retrieval-Augmented Generation）引擎。可为各种规模的企业及个人提供一套精简的 RAG 工作流程，结合大语言模型（LLM）针对用户各类不同的复杂格式数据提供可靠的问答以及有理有据的引用。\n\n## 评测结果\n\n### 典型任务\n\n我们选取了 8 个中英文典型数据集，在 ChatGLM3-6B (base) 版本上进行了性能测试。\n\n| Model            | GSM8K | MATH | BBH  | MMLU | C-Eval | CMMLU | MBPP | AGIEval |\n|------------------|:-----:|:----:|:----:|:----:|:------:|:-----:|:----:|:-------:|\n| ChatGLM2-6B-Base | 32.4  | 6.5  | 33.7 | 47.9 |  51.7  | 50.0  |  -   |    -    |\n| Best Baseline    | 52.1  | 13.1 | 45.0 | 60.1 |  63.5  | 62.2  | 47.5 |  45.8   |\n| ChatGLM3-6B-Base | 72.3  | 25.7 | 66.1 | 61.4 |  69.0  | 67.5  | 52.4 |  53.7   |\n\n> Best Baseline 指的是截止 2023年10月27日、模型参数在 10B 以下、在对应数据集上表现最好的预训练模型，不包括只针对某一项任务训练而未保持通用能力的模型。\n\n> 对 ChatGLM3-6B-Base 的测试中，BBH 采用 3-shot 测试，需要推理的 GSM8K、MATH 采用 0-shot CoT 测试，MBPP 采用 0-shot\n> 生成后运行测例计算 Pass@1 ，其他选择题类型数据集均采用 0-shot 测试。\n\n我们在多个长文本应用场景下对 ChatGLM3-6B-32K 进行了人工评估测试。与二代模型相比，其效果平均提升了超过\n50%。在论文阅读、文档摘要和财报分析等应用中，这种提升尤为显著。此外，我们还在 LongBench 评测集上对模型进行了测试，具体结果如下表所示\n\n| Model           |  平均  | Summary | Single-Doc QA | Multi-Doc QA | Code | Few-shot | Synthetic | \n|-----------------|:----:|:-------:|:-------------:|:------------:|:----:|:--------:|:---------:|\n| ChatGLM2-6B-32K | 41.5 |  24.8   |     37.6      |     34.7     | 52.8 |   51.3   |   47.7    | \n| ChatGLM3-6B-32K | 50.2 |  26.6   |     45.8      |     46.1     | 56.2 |   61.2   |    65     |\n\n## 使用方式\n\n### 环境安装\n\n首先需要下载本仓库：\n\n```shell\ngit clone https://github.com/THUDM/ChatGLM3\ncd ChatGLM3\n```\n\n然后使用 pip 安装依赖：\n\n```\npip install -r requirements.txt\n```\n\n+ 为了保证 `torch` 的版本正确，请严格按照 [官方文档](https://pytorch.org/get-started/locally/) 的说明安装。\n\n### 综合 Demo\n\n我们提供了一个集成以下三种功能的综合 Demo，运行方法请参考[综合 Demo](composite_demo/README.md)\n\n- Chat: 对话模式，在此模式下可以与模型进行对话。\n- Tool: 工具模式，模型除了对话外，还可以通过工具进行其他操作。\n\n<img src=\"resources/tool.png\" width=\"400\">\n\n- Code Interpreter: 代码解释器模式，模型可以在一个 Jupyter 环境中执行代码并获取结果，以完成复杂任务。\n\n<img src=\"resources/heart.png\" width=\"400\">\n\n### 代码调用\n\n可以通过如下代码调用 ChatGLM 模型来生成对话：\n\n```\n>> from transformers import AutoTokenizer, AutoModel\n>> tokenizer = AutoTokenizer.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True)\n>> model = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True, device='cuda')\n>> model = model.eval()\n>> response, history = model.chat(tokenizer, \"你好\", history=[])\n>> print(response)\n\n你好👋!我是人工智能助手 ChatGLM3 - 6B, 很高兴见到你, 欢迎问我任何问题。\n>> response, history = model.chat(tokenizer, \"晚上睡不着应该怎么办\", history=history)\n>> print(response)\n\n晚上睡不着可能会让你感到焦虑或不舒服, 但以下是一些可以帮助你入睡的方法:\n\n1.制定规律的睡眠时间表: 保持规律的睡眠时间表可以帮助你建立健康的睡眠习惯, 使你更容易入睡。尽量在每天的相同时间上床, 并在同一时间起床。\n2.创造一个舒适的睡眠环境: 确保睡眠环境舒适, 安静, 黑暗且温度适宜。可以使用舒适的床上用品, 并保持房间通风。\n3.放松身心: 在睡前做些放松的活动, 例如泡个热水澡, 听些轻柔的音乐, 阅读一些有趣的书籍等, 有助于缓解紧张和焦虑, 使你更容易入睡。\n4.避免饮用含有咖啡因的饮料: 咖啡因是一种刺激性物质, 会影响你的睡眠质量。尽量避免在睡前饮用含有咖啡因的饮料, 例如咖啡, 茶和可乐。\n5.避免在床上做与睡眠无关的事情: 在床上做些与睡眠无关的事情, 例如看电影, 玩游戏或工作等, 可能会干扰你的睡眠。\n6.尝试呼吸技巧: 深呼吸是一种放松技巧, 可以帮助你缓解紧张和焦虑, 使你更容易入睡。试着慢慢吸气, 保持几秒钟, 然后缓慢呼气。\n\n如果这些方法无法帮助你入睡, 你可以考虑咨询医生或睡眠专家, 寻求进一步的建议。\n```\n\n#### 从本地加载模型\n\n以上代码会由 `transformers`\n自动下载模型实现和参数。完整的模型实现在 [Hugging Face Hub](https://huggingface.co/THUDM/chatglm3-6b)\n。如果你的网络环境较差，下载模型参数可能会花费较长时间甚至失败。此时可以先将模型下载到本地，然后从本地加载。\n\n从 Hugging Face Hub\n下载模型需要先[安装Git LFS](https://docs.github.com/zh/repositories/working-with-files/managing-large-files/installing-git-large-file-storage)\n，然后运行\n\n```Shell\ngit clone https://huggingface.co/THUDM/chatglm3-6b\n```\n\n如果从你从 HuggingFace 下载比较慢，也可以从 [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b)\n中下载。\n\n### 模型微调\n\n我们提供了一个微调 ChatGLM3-6B 模型的基础套件，可以用来微调 ChatGLM3-6B 模型。微调套件的使用方法请参考\n[微调套件](finetune_demo/README.md)。\n\n### 网页版对话 Demo\n\n![web-demo](resources/web-demo.gif)\n可以通过以下命令启动基于 Gradio 的网页版 demo：\n\n```shell\npython web_demo_gradio.py\n```\n\n![web-demo](resources/web-demo2.png)\n\n可以通过以下命令启动基于 Streamlit 的网页版 demo：\n\n```shell\nstreamlit run web_demo_streamlit.py\n```\n\n网页版 demo 会运行一个 Web Server，并输出地址。在浏览器中打开输出的地址即可使用。 经测试，基于 Streamlit 的网页版 Demo 会更流畅。\n\n### 命令行对话 Demo\n\n![cli-demo](resources/cli-demo.png)\n\n运行仓库中 [cli_demo.py](basic_demo/cli_demo.py)：\n\n```shell\npython cli_demo.py\n```\n\n程序会在命令行中进行交互式的对话，在命令行中输入指示并回车即可生成回复，输入 `clear` 可以清空对话历史，输入 `stop` 终止程序。\n\n### LangChain Demo\n\n代码实现请参考 [LangChain Demo](langchain_demo/README.md)。\n\n#### 工具调用\n\n关于工具调用的方法请参考 [工具调用](tools_using_demo/README.md)。\n\n#### OpenAI API / Zhipu API Demo\n\n我们已经推出了 OpenAI / ZhipuAI 格式的 开源模型 API 部署代码，可以作为任意基于 ChatGPT 的应用的后端。\n目前，可以通过运行仓库中的 [api_server.py](openai_api_demo/api_server.py) 进行部署\n\n```shell\ncd openai_api_demo\npython api_server.py\n```\n\n同时，我们也书写了一个示例代码，用来测试API调用的性能。\n\n+ OpenAI 测试脚本：[openai_api_request.py](openai_api_demo/openai_api_request.py)\n+ ZhipuAI 测试脚本：[zhipu_api_request.py](openai_api_demo/zhipu_api_request.py)\n+ 使用Curl进行测试\n  \n+ chat Curl 测试\n```shell\ncurl -X POST \"http://127.0.0.1:8000/v1/chat/completions\" \\\n-H \"Content-Type: application/json\" \\\n-d \"{\\\"model\\\": \\\"chatglm3-6b\\\", \\\"messages\\\": [{\\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are ChatGLM3, a large language model trained by Zhipu.AI. Follow the user's instructions carefully. Respond using markdown.\\\"}, {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"你好，给我讲一个故事，大概100字\\\"}], \\\"stream\\\": false, \\\"max_tokens\\\": 100, \\\"temperature\\\": 0.8, \\\"top_p\\\": 0.8}\"\n````\n\n+ Standard openai interface agent-chat Curl 测试\n```shell\ncurl -X POST \"http://127.0.0.1:8000/v1/chat/completions\" \\\n-H \"Content-Type: application/json\" \\\n-d \"{\\\"model\\\": \\\"chatglm3-6b\\\", \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"37乘以8加7除2等于多少？\\\"}], \"tools\": [{\"name\": \"track\", \"description\": \"追踪指定股票的实时价格\",\n          \"parameters\": {\"type\": \"object\", \"properties\": {\"symbol\": {\"description\": \"需要追踪的股票代码\"}},\n                         \"required\": []}},\n         {\"name\": \"Calculator\", \"description\": \"数学计算器，计算数学问题\",\n          \"parameters\": {\"type\": \"object\", \"properties\": {\"symbol\": {\"description\": \"要计算的数学公式\"}},\n                         \"required\": []}}\n         ], \\\"stream\\\": true, \\\"max_tokens\\\": 100, \\\"temperature\\\": 0.8, \\\"top_p\\\": 0.8}\"\n````\n\n+ Openai style custom interface agent-chat Curl 测试（你需要实现自定义的工具描述脚本openai_api_demo/tools/schema.py的内容，并且将api_server.py中AGENT_CONTROLLER指定为'true'）：\n```shell\ncurl -X POST \"http://127.0.0.1:8000/v1/chat/completions\" \\\n-H \"Content-Type: application/json\" \\\n-d \"{\\\"model\\\": \\\"chatglm3-6b\\\", \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"37乘以8加7除2等于多少？\\\"}], \\\"stream\\\": true, \\\"max_tokens\\\": 100, \\\"temperature\\\": 0.8, \\\"top_p\\\": 0.8}\"\n````\n该接口用于openai风格的自定义工具箱的自主调度。具有调度异常的自处理回复能力，无需另外实现调度算法，用户无需api_key。\n\n\n+ 使用Python进行测试\n\n```shell\ncd openai_api_demo\npython openai_api_request.py\n```\n\n如果测试成功，则模型应该返回一段故事。\n\n## 低成本部署\n\n### 模型量化\n\n默认情况下，模型以 FP16 精度加载，运行上述代码需要大概 13GB 显存。如果你的 GPU 显存有限，可以尝试以量化方式加载模型，使用方法如下：\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True).quantize(4).cuda()\n```\n\n模型量化会带来一定的性能损失，经过测试，ChatGLM3-6B 在 4-bit 量化下仍然能够进行自然流畅的生成。\n\n### CPU 部署\n\n如果你没有 GPU 硬件的话，也可以在 CPU 上进行推理，但是推理速度会更慢。使用方法如下（需要大概 32GB 内存）\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True).float()\n```\n\n### Mac 部署\n\n对于搭载了 Apple Silicon 或者 AMD GPU 的 Mac，可以使用 MPS 后端来在 GPU 上运行 ChatGLM3-6B。需要参考 Apple\n的 [官方说明](https://developer.apple.com/metal/pytorch) 安装 PyTorch-Nightly（正确的版本号应该是2.x.x.dev2023xxxx，而不是\n2.x.x）。\n\n目前在 MacOS 上只支持[从本地加载模型](README.md#从本地加载模型)。将代码中的模型加载改为从本地加载，并使用 mps 后端：\n\n```python\nmodel = AutoModel.from_pretrained(\"your local path\", trust_remote_code=True).to('mps')\n```\n\n加载半精度的 ChatGLM3-6B 模型需要大概 13GB 内存。内存较小的机器（比如 16GB 内存的 MacBook\nPro），在空余内存不足的情况下会使用硬盘上的虚拟内存，导致推理速度严重变慢。\n\n### 多卡部署\n\n如果你有多张 GPU，但是每张 GPU 的显存大小都不足以容纳完整的模型，那么可以将模型切分在多张GPU上。首先安装\naccelerate: `pip install accelerate`，然后即可正常加载模型。\n\n### OpenVINO Demo\n\nChatGLM3-6B 已经支持使用 OpenVINO\n工具包进行加速推理，在英特尔的GPU和GPU设备上有较大推理速度提升。具体使用方法请参考 [OpenVINO Demo](Intel_device_demo/openvino_demo/README.md)。\n\n### TensorRT-LLM Demo\n\nChatGLM3-6B已经支持使用 TensorRT-LLM\n工具包进行加速推理，模型推理速度得到多倍的提升。具体使用方法请参考 [TensorRT-LLM Demo](tensorrt_llm_demo/tensorrt_llm_cli_demo.py)\n和 官方技术文档。\n\n## 引用\n\n如果你觉得我们的工作有帮助的话，请考虑引用下列论文。\n\n```\n@misc{glm2024chatglm,\n      title={ChatGLM: A Family of Large Language Models from GLM-130B to GLM-4 All Tools}, \n      author={Team GLM and Aohan Zeng and Bin Xu and Bowen Wang and Chenhui Zhang and Da Yin and Diego Rojas and Guanyu Feng and Hanlin Zhao and Hanyu Lai and Hao Yu and Hongning Wang and Jiadai Sun and Jiajie Zhang and Jiale Cheng and Jiayi Gui and Jie Tang and Jing Zhang and Juanzi Li and Lei Zhao and Lindong Wu and Lucen Zhong and Mingdao Liu and Minlie Huang and Peng Zhang and Qinkai Zheng and Rui Lu and Shuaiqi Duan and Shudan Zhang and Shulin Cao and Shuxun Yang and Weng Lam Tam and Wenyi Zhao and Xiao Liu and Xiao Xia and Xiaohan Zhang and Xiaotao Gu and Xin Lv and Xinghan Liu and Xinyi Liu and Xinyue Yang and Xixuan Song and Xunkai Zhang and Yifan An and Yifan Xu and Yilin Niu and Yuantao Yang and Yueyan Li and Yushi Bai and Yuxiao Dong and Zehan Qi and Zhaoyu Wang and Zhen Yang and Zhengxiao Du and Zhenyu Hou and Zihan Wang},\n      year={2024},\n      eprint={2406.12793},\n      archivePrefix={arXiv},\n      primaryClass={id='cs.CL' full_name='Computation and Language' is_active=True alt_name='cmp-lg' in_archive='cs' is_general=False description='Covers natural language processing. Roughly includes material in ACM Subject Class I.2.7. Note that work on artificial languages (programming languages, logics, formal systems) that does not explicitly address natural-language issues broadly construed (natural-language processing, computational linguistics, speech, text retrieval, etc.) is not appropriate for this area.'}\n}\n```\n"
        },
        {
          "name": "README_en.md",
          "type": "blob",
          "size": 22.6201171875,
          "content": "# ChatGLM3\n\n<p align=\"center\">\n📄<a href=\"https://arxiv.org/pdf/2406.12793\" target=\"_blank\"> Report </a> • 🤗 <a href=\"https://huggingface.co/THUDM/chatglm3-6b\" target=\"_blank\">HF Repo</a> • 🤖 <a href=\"https://modelscope.cn/models/ZhipuAI/chatglm3-6b\" target=\"_blank\">ModelScope</a> • 🟣 <a href=\"https://www.wisemodel.cn/models/ZhipuAI/chatglm3-6b\" target=\"_blank\">WiseModel</a> • 📔 <a href=\"https://lslfd0slxc.feishu.cn/wiki/WvQbwIJ9tiPAxGk8ywDck6yfnof\" target=\"_blank\">Document</a> •  🧰 <a href=\"https://openxlab.org.cn/models/hot/THUDM\" target=\"_blank\">OpenXLab</a> • 🐦 <a href=\"https://twitter.com/thukeg\" target=\"_blank\">Twitter</a><br>\n</p>\n<p align=\"center\">\n    👋 Join our  <a href=\"https://discord.gg/fK2dz4bg\" target=\"_blank\">Discord</a> and <a href=\"resources/WECHAT.md\" target=\"_blank\">WeChat</a>\n</p>\n<p align=\"center\">\n📍Experience the larger-scale ChatGLM model at <a href=\"https://www.chatglm.cn\">chatglm.cn</a>\n</p>\n\n📔 About `ChatGLM3-6B`For more detailed usage information, please refer to:\n\n+ [ChatGLM3 technical documentation](https://lslfd0slxc.feishu.cn/wiki/WvQbwIJ9tiPAxGk8ywDck6yfnof?from=from_copylink)\n+ [Bilibili video](https://www.bilibili.com/video/BV1uC4y1J7yA)\n+ [YouTube video](https://www.youtube.com/watch?v=Pw9PB6R7ORA)\n\n## GLM-4 Open Source Model and API\n\nWe have released the latest **GLM-4** model, which has made new breakthroughs in multiple indicators. You can directly\nexperience our latest model in the following two channels.\n\n+ [GLM-4 open source model](https://github.com/THUDM/GLM-4) We have open sourced the GLM-4-9B series models, which have\n  significantly improved the performance of various indicators. Welcome to try.\n+ [Zhipu Qingyan](https://chatglm.cn/main/detail?fr=ecology_x) Experience the latest version of GLM-4, including **GLMs,\n  All tools** and other functions.\n+ [API platform](https://open.bigmodel.cn/?utm_campaign=open&_channel_track_key=OWTVNma9) The new generation of API\n  platform has been launched. You can directly experience new models such\n  as `GLM-4-0520`, `GLM-4-air`, `GLM-4-airx`, `GLM-4-flash`, `GLM-4`, `GLM-3-Turbo`, `CharacterGLM-3`, `CogView-3` on\n  the API platform.\n  Among them, the two models `GLM-4` and `GLM-3-Turbo` support new functions such\n  as `System Prompt`, `Function Call`, `Retrieval`, and `Web_Search`. You are welcome to experience them.\n\n+ [GLM4 API open source tutorial](https://github.com/MetaGLM/glm-cookbook/) GLM-4 API tutorial and basic applications,\n  welcome to try.\n  API-related questions can be asked in this open source tutorial, or\n  use [GLM-4 API AI Assistant](https://open.bigmodel.cn/shareapp/v1/?share_code=sQwt5qyqYVaNh1O_87p8O)\n  to get help with common problems.\n\n-----\n\n## ChatGLM3 Introduction\n\n**ChatGLM3** is a generation of pre-trained dialogue models jointly released by Zhipu AI and Tsinghua KEG. ChatGLM3-6B\nis the open-source model in the ChatGLM3 series, maintaining many excellent features of the first two generations such\nas smooth dialogue and low deployment threshold, while introducing the following features:\n\n1. **Stronger Base Model:** The base model of ChatGLM3-6B, ChatGLM3-6B-Base, adopts a more diverse training dataset,\n   more sufficient training steps, and a more reasonable training strategy. Evaluations on datasets from various\n   perspectives such as semantics, mathematics, reasoning, code, and knowledge show that **ChatGLM3-6B-Base has the\n   strongest performance among base models below 10B**.\n\n2. **More Complete Function Support:** ChatGLM3-6B adopts a newly designed [Prompt format](PROMPT_en.md), supporting\n   multi-turn dialogues as usual. It also natively supports [tool invocation](tools_using_demo/README_en.md) (Function\n   Call), code execution (Code Interpreter), and Agent tasks in complex scenarios.\n\n3. **More Comprehensive Open-source Series:** In addition to the dialogue\n   model [ChatGLM3-6B](https://huggingface.co/THUDM/chatglm3-6b), the basic\n   model [ChatGLM3-6B-Base](https://huggingface.co/THUDM/chatglm3-6b-base), the long-text dialogue\n   model [ChatGLM3-6B-32K](https://huggingface.co/THUDM/chatglm3-6b-32k) and further strengthens the ability to\n   understand long texts [ChatGLM3-6B-128K](https://huggingface.co/THUDM/chatglm3-6b-128k) have also been open-sourced.\n   All these weights are **fully open** for academic research, and **free commercial use is also allowed** after\n   registration via a [questionnaire](https://open.bigmodel.cn/mla/form).\n\n-----\n\nThe ChatGLM3 open-source model aims to promote the development of large-model technology together with the open-source\ncommunity. Developers and everyone are earnestly requested to comply with the [open-source protocol](MODEL_LICENSE), and\nnot to use the open-source models, codes, and derivatives for any purposes that might harm the nation and society, and\nfor any services that have not been evaluated and filed for safety. Currently, no applications, including web, Android,\nApple iOS, and Windows App, have been developed based on the **ChatGLM3 open-source model** by our project team.\n\nAlthough every effort has been made to ensure the compliance and accuracy of the data at various stages of model\ntraining, due to the smaller scale of the ChatGLM3-6B model and the influence of probabilistic randomness factors, the\naccuracy of output content cannot be guaranteed. The model output is also easily misled by user input. **This project\ndoes not assume risks and liabilities caused by data security, public opinion risks, or any misleading, abuse,\ndissemination, and improper use of open-source models and codes.**\n\n## Model List\n\n|      Model       | Seq Length |                                                              Download                                                               \n|:----------------:|:----------:|:-----------------------------------------------------------------------------------------------------------------------------------:\n|   ChatGLM3-6B    |     8k     |      [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b) \\| [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b)      \n| ChatGLM3-6B-Base |     8k     | [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b-base) \\| [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b-base) \n| ChatGLM3-6B-32K  |    32k     |  [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b-32k) \\| [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b-32k)  \n| ChatGLM3-6B-128K |    128k    | [HuggingFace](https://huggingface.co/THUDM/chatglm3-6b-128k) ｜ [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b-128k)  \n\n## Projects\n\nThe following excellent open source repositories have in-depth support for the ChatGLM3-6B model, and everyone is\nwelcome to expand their learning.\n\nInference acceleration:\n\n* [chatglm.cpp](https://github.com/li-plus/chatglm.cpp): Real-time inference on your laptop accelerated by quantization,\n  similar to llama.cpp.\n* [ChatGLM3-TPU](https://github.com/sophgo/ChatGLM3-TPU): Using the TPU accelerated inference solution, it runs about\n  7.5 token/s in real time on the end-side chip BM1684X (16T@FP16, 16G DDR).\n* [TensorRT-LLM](https://github.com/NVIDIA/TensorRT-LLM/tree/main): A high-performance GPU-accelerated inference\n  solution developed by NVIDIA, you can refer to these [steps](./tensorrt_llm_demo/README.md) to deploy ChatGLM3.\n* [OpenVINO](https://github.com/openvinotoolkit): A high-performance CPU and GPU accelerated inference solution\n  developed by Intel, you can refer to this [step](./Intel_device_demo/openvino_demo/README.md) to deploy the\n  ChatGLM3-6B model\n\nEfficient fine-tuning:\n\n* [LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory): An excellent, easy-to-use and efficient fine-tuning\n  framework.\n\nApplication framework:\n\n* [LangChain-Chatchat](https://github.com/chatchat-space/Langchain-Chatchat): Based on large language models such as\n  ChatGLM and application frameworks such as Langchain, open source and offline deployable retrieval enhancement\n  generation (RAG) large Model knowledge base project.\n\n* [BISHENG](https://github.com/dataelement/bisheng): open-source platform for developing LLM applications. It empowers\n  and accelerates the development of LLM applications and helps users to enter the next generation of application\n  development mode with the best experience.\n\n* [RAGFlow](https://github.com/infiniflow/ragflow): An open-source RAG (Retrieval-Augmented Generation) engine based on\n  deep document understanding. It offers a streamlined RAG workflow for businesses of any scale, combining LLM (Large\n  Language Models) to provide truthful question-answering capabilities, backed by well-founded citations from various\n  complex formatted data.\n\n## Evaluation Results\n\n### Typical Tasks\n\nWe selected 8 typical Chinese-English datasets and conducted performance tests on the ChatGLM3-6B (base) version.\n\n| Model            | GSM8K | MATH | BBH  | MMLU | C-Eval | CMMLU | MBPP | AGIEval |\n|------------------|:-----:|:----:|:----:|:----:|:------:|:-----:|:----:|:-------:|\n| ChatGLM2-6B-Base | 32.4  | 6.5  | 33.7 | 47.9 |  51.7  | 50.0  |  -   |    -    |\n| Best Baseline    | 52.1  | 13.1 | 45.0 | 60.1 |  63.5  | 62.2  | 47.5 |  45.8   |\n| ChatGLM3-6B-Base | 72.3  | 25.7 | 66.1 | 61.4 |  69.0  | 67.5  | 52.4 |  53.7   |\n\n> \"Best Baseline\" refers to the pre-trained models that perform best on the corresponding datasets with model parameters\n> below 10B, excluding models that are trained specifically for a single task and do not maintain general capabilities.\n\n> In the tests of ChatGLM3-6B-Base, BBH used a 3-shot test, GSM8K and MATH that require inference used a 0-shot CoT\n> test, MBPP used a 0-shot generation followed by running test cases to calculate Pass@1, and other multiple-choice type\n> datasets all used a 0-shot test.\n\nWe have conducted manual evaluation tests on ChatGLM3-6B-32K in multiple long-text application scenarios. Compared with\nthe second-generation model, its effect has improved by more than 50% on average. In applications such as paper reading,\ndocument summarization, and financial report analysis, this improvement is particularly significant. In addition, we\nalso tested the model on the LongBench evaluation set, and the specific results are shown in the table below.\n\n| Model           | Average | Summary | Single-Doc QA | Multi-Doc QA | Code | Few-shot | Synthetic | \n|-----------------|:-------:|:-------:|:-------------:|:------------:|:----:|:--------:|:---------:|\n| ChatGLM2-6B-32K |  41.5   |  24.8   |     37.6      |     34.7     | 52.8 |   51.3   |   47.7    | \n| ChatGLM3-6B-32K |  50.2   |  26.6   |     45.8      |     46.1     | 56.2 |   61.2   |    65     |\n\n## How to Use\n\n### Environment Installation\n\nFirst, you need to download this repository:\n\n```shell\ngit clone https://github.com/THUDM/ChatGLM3\ncd ChatGLM3\n```\n\nThen use pip to install the dependencies:\n\n```\npip install -r requirements.txt\n```\n\n+ In order to ensure that the version of `torch` is correct, please strictly follow the instructions\n  of [official documentation](https://pytorch.org/get-started/locally/) for installation.\n\n### Integrated Demo\n\nWe provide an integrated demo that incorporates the following three functionalities. Please refer\nto [Integrated Demo](composite_demo/README_en.md) for how to run it.\n\n- Chat: Dialogue mode, where you can interact with the model.\n- Tool: Tool mode, where in addition to dialogue, the model can also perform other operations using tools.\n  ![tool](resources/tool_en.png)\n- Code Interpreter: Code interpreter mode, where the model can execute code in a Jupyter environment and obtain results\n  to complete complex tasks.\n  ![code](resources/code_en.gif)\n\n### Usage\n\nThe ChatGLM model can be called to start a conversation using the following code:\n\n```\n>> from transformers import AutoTokenizer, AutoModel\n>> tokenizer = AutoTokenizer.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True)\n>> model = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True, device='cuda')\n>> model = model.eval()\n>> response, history = model.chat(tokenizer, \"你好\", history=[])\n>> print(response)\n\nHello 👋! I am the AI assistant ChatGLM3-6B, nice to meet you, feel free to ask me any questions.\n\n>> response, history = model.chat(tokenizer, \"What should I do if I can't sleep at night?\", history=history)\n>> print(response)\n\nHaving trouble sleeping at night may make you feel anxious or uncomfortable, but here are some ways to help you fall asleep:\n\n1. Develop a regular sleep schedule: Keeping a regular sleep schedule can help you develop healthy sleep habits and make it easier for you to fall asleep. Try to go to bed at the same time every day and get up at the same time.\n\n2. Create a comfortable sleeping environment: Make sure the sleeping environment is comfortable, quiet, dark and at a suitable temperature. You can use comfortable bedding and keep the room ventilated.\n\n3. Relax your body and mind: Doing some relaxing activities before bed, such as taking a hot bath, listening to some soft music, reading some interesting books, etc., can help relieve tension and anxiety and make it easier for you to fall asleep.\n\n4. Avoid drinking caffeinated beverages: Caffeine is a stimulant that can affect your sleep quality. Try to avoid drinking caffeinated beverages such as coffee, tea and cola before bed.\n\n5. Avoid doing things that are not related to sleep in bed: Doing things that are not related to sleep in bed, such as watching movies, playing games or working, etc., may interfere with your sleep.\n6. Try breathing techniques: Deep breathing is a relaxation technique that can help you relieve tension and anxiety, making it easier for you to fall asleep. Try breathing in slowly, holding it for a few seconds, and then exhaling slowly.\n\nIf these methods don't help you fall asleep, you may consider consulting a doctor or sleep specialist for further advice.\n```\n\n#### Load Model Locally\n\nThe above code will automatically download the model implementation and parameters by `transformers`. The complete model\nimplementation is available on [Hugging Face Hub](https://huggingface.co/THUDM/chatglm3-6b). If your network environment\nis poor, downloading model parameters might take a long time or even fail. In this case, you can first download the\nmodel to your local machine, and then load it from there.\n\nTo download the model from Hugging Face Hub, you need\nto [install Git LFS](https://docs.github.com/en/repositories/working-with-files/managing-large-files/installing-git-large-file-storage)\nfirst, then run\n\n```Shell\ngit clone https://huggingface.co/THUDM/chatglm3-6b\n```\n\nIf the download from HuggingFace is slow, you can also download it\nfrom [ModelScope](https://modelscope.cn/models/ZhipuAI/chatglm3-6b).\n\n# Model Fine-tuning\n\nWe provide a basic fine-tuning framework for ChatGLM3-6B. You can use it to fine-tune the model on your own dataset. For\nmore details, please refer to [Fine-tuning Demo](finetune_demo/README_en.md).\n\n### Web-based Dialogue Demo\n\n![web-demo](resources/web-demo.gif)\nYou can launch a web-based demo using Gradio with the following command:\n\n```shell\npython web_demo_gradio.py\n```\n\n![web-demo](resources/web-demo2.png)\n\nYou can launch a web-based demo using Streamlit with the following command:\n\n```shell\nstreamlit run web_demo_streamlit.py\n```\n\nThe web-based demo will run a Web Server and output an address. You can use it by opening the output address in a\nbrowser. Based on tests, the web-based demo using Streamlit runs more smoothly.\n\n### Command Line Dialogue Demo\n\n![cli-demo](resources/cli-demo.png)\n\nRun [cli_demo.py](basic_demo/cli_demo.py) in the repository:\n\n```shell\npython cli_demo.py\n```\n\nThe program will interact in the command line, enter instructions in the command line and hit enter to generate a\nresponse. Enter `clear` to clear the dialogue history, enter `stop` to terminate the program.\n\n### OpenAI API /Zhipu API Demo\n\nWe have launched open source model API deployment code in OpenAI / ZhipuAI format, which can be used as the backend of\nany ChatGPT-based application.\nCurrently, you can deploy by running [api_server.py](openai_api_demo/api_server.py) in the warehouse\n\n```shell\ncd openai_api_demo\npython api_server.py\n```\n\nAt the same time, we also wrote a sample code to test the performance of API calls.\n\n+ OpenAI test script: [openai_api_request.py](openai_api_demo/openai_api_request.py)\n+ ZhipuAI test script: [zhipu_api_request.py](openai_api_demo/zhipu_api_request.py)\n+ Test with Curl\n\n+ chat Curl test\n\n```shell\ncurl -X POST \"http://127.0.0.1:8000/v1/chat/completions\" \\\n-H \"Content-Type: application/json\" \\\n-d \"{\\\"model\\\": \\\"chatglm3-6b\\\", \\\"messages\\\": [{\\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are ChatGLM3, a large language model trained by Zhipu.AI. Follow the user's instructions carefully. Respond using markdown.\\\"}, {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"你好，给我讲一个故事，大概100字\\\"}], \\\"stream\\\": false, \\\"max_tokens\\\": 100, \\\"temperature\\\": 0.8, \\\"top_p\\\": 0.8}\"\n````\n\n+ Standard openai interface agent-chat Curl test\n\n```shell\ncurl -X POST \"http://127.0.0.1:8000/v1/chat/completions\" \\\n-H \"Content-Type: application/json\" \\\n-d \"{\\\"model\\\": \\\"chatglm3-6b\\\", \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"37乘以8加7除2等于多少？\\\"}], \"tools\": [{\"name\": \"track\", \"description\": \"追踪指定股票的实时价格\",\n          \"parameters\": {\"type\": \"object\", \"properties\": {\"symbol\": {\"description\": \"需要追踪的股票代码\"}},\n                         \"required\": []}},\n         {\"name\": \"Calculator\", \"description\": \"数学计算器，计算数学问题\",\n          \"parameters\": {\"type\": \"object\", \"properties\": {\"symbol\": {\"description\": \"要计算的数学公式\"}},\n                         \"required\": []}}\n         ], \\\"stream\\\": true, \\\"max_tokens\\\": 100, \\\"temperature\\\": 0.8, \\\"top_p\\\": 0.8}\"\n````\n\n+ Openai style custom interface agent-chat Curl test (You need to implement the contents of the custom tool description\n  script openai_api_demo/tools/schema.py, and specify AGENT_CONTROLLER in api_server.py as 'true')：\n\n```shell\ncurl -X POST \"http://127.0.0.1:8000/v1/chat/completions\" \\\n-H \"Content-Type: application/json\" \\\n-d \"{\\\"model\\\": \\\"chatglm3-6b\\\", \\\"messages\\\": [{\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"37乘以8加7除2等于多少？\\\"}], \\\"stream\\\": true, \\\"max_tokens\\\": 100, \\\"temperature\\\": 0.8, \\\"top_p\\\": 0.8}\"\n````\n\nThis interface is used for autonomous scheduling of OpenAI-style custom toolboxes. It has the ability to self-process\nand respond to scheduling exceptions, without the need to implement additional scheduling algorithms, and users do not\nneed an api_key.\n\n+ Testing with Python\n\n```shell\ncd openai_api_demo\npython openai_api_request.py\n```\n\nIf the test is successful, the model should return a story.\n\n### Tool Invocation\n\nFor methods of tool invocation, please refer to [Tool Invocation](tools_using_demo/README_en.md).\n\n## Low-Cost Deployment\n\n### Model Quantization\n\nBy default, the model is loaded with FP16 precision, running the above code requires about 13GB of VRAM. If your GPU's\nVRAM is limited, you can try loading the model quantitatively, as follows:\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True).quantize(4).cuda()\n```\n\nModel quantization will bring some performance loss. Through testing, ChatGLM3-6B can still perform natural and smooth\ngeneration under 4-bit quantization.\n\n### CPU Deployment\n\nIf you don't have GPU hardware, you can also run inference on the CPU, but the inference speed will be slower. The usage\nis as follows (requires about 32GB of memory):\n\n```python\nmodel = AutoModel.from_pretrained(\"THUDM/chatglm3-6b\", trust_remote_code=True).float()\n```\n\n### Mac Deployment\n\nFor Macs equipped with Apple Silicon or AMD GPUs, the MPS backend can be used to run ChatGLM3-6B on the GPU. Refer to\nApple's [official instructions](https://developer.apple.com/metal/pytorch) to install PyTorch-Nightly (the correct\nversion number should be 2.x.x.dev2023xxxx, not 2.x.x).\n\nCurrently, only [loading the model locally](README_en.md#load-model-locally) is supported on MacOS. Change the model\nloading in the code to load locally and use the MPS backend:\n\n```python\nmodel = AutoModel.from_pretrained(\"your local path\", trust_remote_code=True).to('mps')\n```\n\nLoading the half-precision ChatGLM3-6B model requires about 13GB of memory. Machines with smaller memory (such as a 16GB\nmemory MacBook Pro) will use virtual memory on the hard disk when there is insufficient free memory, resulting in a\nsignificant slowdown in inference speed.\n\n### Multi-GPU Deployment\n\nIf you have multiple GPUs, but each GPU's VRAM size is not enough to accommodate the complete model, then the model can\nbe split across multiple GPUs. First, install accelerate: `pip install accelerate`, and then load the model as usual.\n\n### OpenVINO Demo\n\nChatGLM3-6B already supports the use of OpenVINO\nThe toolkit accelerates inference and has a greater inference speed improvement on Intel's GPUs and GPU devices. For\nspecific usage, please refer to [OpenVINO Demo](Intel_device_demo/openvino_demo/README.md).\n\n### TensorRT-LLM Demo\n\nChatGLM3-6B now supports accelerated inference using the TensorRT-LLM toolkit, significantly improving model inference\nspeed. For specific usage, please refer to the [TensorRT-LLM Demo](tensorrt_llm_demo/tensorrt_llm_cli_demo.py) and the\nofficial technical documentation.\n\n## Citation\n\nIf you find our work helpful, please consider citing the following papers.\n\n```\n@misc{glm2024chatglm,\n      title={ChatGLM: A Family of Large Language Models from GLM-130B to GLM-4 All Tools}, \n      author={Team GLM and Aohan Zeng and Bin Xu and Bowen Wang and Chenhui Zhang and Da Yin and Diego Rojas and Guanyu Feng and Hanlin Zhao and Hanyu Lai and Hao Yu and Hongning Wang and Jiadai Sun and Jiajie Zhang and Jiale Cheng and Jiayi Gui and Jie Tang and Jing Zhang and Juanzi Li and Lei Zhao and Lindong Wu and Lucen Zhong and Mingdao Liu and Minlie Huang and Peng Zhang and Qinkai Zheng and Rui Lu and Shuaiqi Duan and Shudan Zhang and Shulin Cao and Shuxun Yang and Weng Lam Tam and Wenyi Zhao and Xiao Liu and Xiao Xia and Xiaohan Zhang and Xiaotao Gu and Xin Lv and Xinghan Liu and Xinyi Liu and Xinyue Yang and Xixuan Song and Xunkai Zhang and Yifan An and Yifan Xu and Yilin Niu and Yuantao Yang and Yueyan Li and Yushi Bai and Yuxiao Dong and Zehan Qi and Zhaoyu Wang and Zhen Yang and Zhengxiao Du and Zhenyu Hou and Zihan Wang},\n      year={2024},\n      eprint={2406.12793},\n      archivePrefix={arXiv},\n      primaryClass={id='cs.CL' full_name='Computation and Language' is_active=True alt_name='cmp-lg' in_archive='cs' is_general=False description='Covers natural language processing. Roughly includes material in ACM Subject Class I.2.7. Note that work on artificial languages (programming languages, logics, formal systems) that does not explicitly address natural-language issues broadly construed (natural-language processing, computational linguistics, speech, text retrieval, etc.) is not appropriate for this area.'}\n}\n```"
        },
        {
          "name": "basic_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "composite_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "finetune_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "langchain_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "openai_api_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.486328125,
          "content": "# basic requirements\n\ntransformers==4.40.0\ncpm_kernels>=1.0.11\ntorch>=2.3.0\nvllm>=0.4.2\ngradio>=4.26.0\nsentencepiece>=0.2.0\nsentence_transformers>=2.7.0\naccelerate>=0.29.2\nstreamlit>=1.33.0\nfastapi>=0.110.0\nloguru~=0.7.2\nmdtex2html>=1.3.0\nlatex2mathml>=3.77.0\njupyter_client>=8.6.1\n\n# for openai demo\nopenai>=1.30.1\npydantic>=2.7.1\nsse-starlette>=2.1.0\nuvicorn>=0.29.0\ntimm>=0.9.16\ntiktoken>=0.6.0\n\n# for langchain demo\n\nlangchain>=0.2.1\nlangchain_community>=0.2.0\nlangchainhub>=0.1.15\narxiv>=2.1.0"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "tensorrt_llm_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools_using_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "update_requirements.sh",
          "type": "blob",
          "size": 0.234375,
          "content": "#!/bin/bash\n\npython -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple\n\nwhile read requirement; do\n    python -m pip install --upgrade \"$requirement\" -i https://pypi.tuna.tsinghua.edu.cn/simple\ndone < requirements.txt\n"
        }
      ]
    }
  ]
}