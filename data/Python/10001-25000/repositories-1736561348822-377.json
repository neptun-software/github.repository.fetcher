{
  "metadata": {
    "timestamp": 1736561348822,
    "page": 377,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "asweigart/pyautogui",
      "stars": 10688,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": "venv/\n.tox/\n\n*.pyc\n__pycache__/\n\ninstance/\n\n.pytest_cache/\n.coverage\nhtmlcov/\n\ndist/\nbuild/\n*.egg-info/\n\nPipfile.lock"
        },
        {
          "name": "AUTHORS.txt",
          "type": "blob",
          "size": 2.8564453125,
          "content": "Here is an inevitably incomplete list of MUCH-APPRECIATED CONTRIBUTORS --\npeople who have submitted patches, reported bugs, added translations, helped\nanswer newbie questions, and generally made PyAutoGUI that much better:\n\nAbhijeet Singh https://github.com/cseas\nAl Sweigart https://github.com/asweigart/\nAlexandr Orlov https://github.com/hey-sancho\nalphaCTzo7G https://github.com/alphaCTzo7G\nAndrew Selzer https://github.com/afs2015\nAndy Dam https://github.com/andydam\nAnwar A. Ruff https://github.com/aaruff\nAri Lacenski https://github.com/tensory\nAshok Fernandez https://github.com/ashokfernandez/\nBrian Redmond https://github.com/bredmond\nChristopher Valles https://github.com/christophervalles\nclach04 https://github.com/clach04\nClayton A. Alves https://github.com/claytonaalves\ncryzed https://github.com/cryzed\nDaniel D. Beck https://github.com/ddbeck\ndanielboone https://github.com/danielboone\nDavee Nguyen https://github.com/daveenguyen\nDavid Siah https://github.com/dsiah\nDenilson Figueiredo de Sá https://github.com/denilsonsa\nDominik Schmelz https://github.com/DIDoS\ndragon778 https://github.com/dragon788\nDuxxi https://github.com/sjhhh3\nEric https://github.com/bleuetnoir\nErtugrulSener https://github.com/ErtugrulSener\nFornost461 https://github.com/Fornost461\nHarrison https://github.com/Sentdex\nHugo Salvador https://github.com/hugoesb\ni-need-to-tell-you-something https://github.com/i-need-to-tell-you-something\njakibaki https://github.com/\nJeff Triplett https://github.com/jefftriplett\nJeremy R. Gray https://github.com/jeremygray\nJeromie Kirchoff https://github.com/JayRizzo\nJoel Gomes da Silva https://github.com/joelgomes1994\njohnborgmann https://github.com/johnborgmann\nJon Winsley https://github.com/glitchassassin\njorg-j https://github.com/jorg-j\nJose Riha https://github.com/jose1711\nJulien Schueller https://github.com/jschueller\nKorons https://github.com/Korons\nlb1a https://github.com/lb1a\nLesmana Zimmer https://github.com/lesmana\nliberme https://github.com/liberme\nMatt Olsen https://github.com/digwanderlust\nmvbentes https://github.com/mvbentes\nnexcvon https://github.com/nexcvon\nOleg Höfling https://github.com/hoefling\noptroot https://github.com/optroot\npgkos https://github.com/pgkos\nqiujieqiong https://github.com/qiujieqiong\nRicardo Amendoeira https://github.com/ric2b\nScott Noyes https://github.com/snoyes\nSergio Encarnación https://github.com/Sergioenc28\nsneakypete81 https://github.com/sneakypete81\nStefan Hoelzl https://github.com/stefanhoelzl\nStephen Ellis https://github.com/saellis\nSteven Shave https://github.com/stevenshave\nTim Gates https://github.com/timgates42\nTimothy Crory https://github.com/tcrory\nundefx https://github.com/undefx\nVélmer Oliveira https://github.com/velmer\nValdemar B. Petersen https://github.com/ValdemarBirkegaardPetersen\nYoshiaki Ono https://github.com/fx-kirin\nStefan Hoelzl https://github.com/stefanhoelzl\nZander Møysal https://github.com/Zandertaiko"
        },
        {
          "name": "CHANGES.txt",
          "type": "blob",
          "size": 3.892578125,
          "content": "v0.9.53, 2021/07/07 -- Fixed a compatibility issue with the pystray module.\nv0.9.52, 2020/10/06 -- Fixed hotkey() to work with PAUSE.\nv0.9.51, 2020/10/04 -- Added the hold() context manager, several bug fixes for mac mouse functions.\nv0.9.50, 2020/04/01 -- The 0.9.49 changes were incredibly buggy and have been reverted.\nv0.9.49, 2020/03/27 -- Migrated from Quartz to Rubicon\nv0.9.46, 2019/07/09 -- Added mouseinfo module.\nv0.9.45, 2019/06/18 -- Added left-click, made mouse buttons more explicit and fixed it so that the right mouse button is 2 and middle mouse button is 3. Added failsafe points in all corners. Added screenshot logging. Fixed _autoPause().\nv0.9.44, 2019/05/30 -- Adding ability to pass 4-integer box tuples to click() and other functions.\nv0.9.43, 2019/05/27 -- Renamed getFocusedWindow to getActiveWindow to keep it up to date with pygetwindow.\nv0.9.40, 2018/12/26 -- Created FAILSAFE_POINT constant instead of hard coding (0, 0), add move(), drag(), write() names. Adding PyGetWindow.\nv0.9.39, 2018/09/05 -- Added tox and fixed setup.py for Python 2 compatibility.\nv0.9.38, 2018/07/21 -- Removing non-ascii characters from readme because it causes failures when displaying on Windows.\nv0.9.37, 2018/07/18 -- Updating setup.py\nv0.9.36, 2017/04/20 -- Fixed Windows XP problem with the DPI scaling API call.\nv0.9.35, 2017/03/19 -- Fixed Windows DPI scaling issue.\nv0.9.34, 2017/03/18 -- Fixed several bugs after the Sentry OSS sprint, including Windows permission errors.\nv0.9.33, 2016/01/08 -- Fixed bug with missing keyword arg in hotkey(). Thanks jmcduffie!\nv0.9.32, 2015/10/28 -- Updated setup.py to pull info from source\nv0.9.31, 2015/09/06 -- Incorporated many fixes and changes from Denilson Figueiredo de Sá. Thanks!\nv0.9.30, 2015/05/06 -- Fixed issue #12 (size() on Mac Retina displays)\nv0.9.29, 2015/05/05 -- Fixed issue #29 (press('enter') doesn't work on Linux)\nv0.9.28, 2015/05/05 -- Fixed a small bug wheel scroll on OS X.\nv0.9.27, 2015/05/02 -- Fixed a bug with Linux's button parameter.\nv0.9.26, 2015/02/02 -- Added 'super' key to Windows and the presses keyword argument to press().\nv0.9.25, 2015/01/27 -- Fixed dragTo() bug on OS X\nv0.9.24, 2015/01/07 -- Added -x silent option to os x screencapture command.\nv0.9.23, 2015/01/06 -- Now allowing lists in addition to tuples for XY coordinate arguments.\nv0.9.22, 2015/01/06 -- Added \"pause\" keyword argument to functions to override PAUSE setting for specific calls.\nv0.9.21, 2014/12/15 -- Added keyword arguments to functions, improved unit tests.\nv0.9.20, 2014/10/11 -- Fixed parameter order bug on Linux.\nv0.9.19, 2014/09/24 -- Set fail-safe and pause features to be enabled by default.\nv0.9.18, 2014/09/16 -- Moved screenshot features to a separate \"PyScreeze\" module.\nv0.9.17, 2014/09/15 -- Added pixel() and pixelMatchesColor() functions.\nv0.9.16, 2014/09/15 -- Added locateCenterOnScreen() function.\nv0.9.15, 2014/09/12 -- Added fail-safe feature.\nv0.9.14, 2014/09/11 -- Fixed bug with locateOnScreen().\nv0.9.13, 2014/09/11 -- Fixed OS X scrolling bug. Added screenshot features.\nv0.9.12, 2014/09/10 -- Fixed import bugs.\nv0.9.11, 2014/09/08 -- Fixed bug where None was being passed to platform-specific mouse functions.\nv0.9.10, 2014/09/08 -- Fixing the previous bug, for real this time.\nv0.9.9, 2014/09/03 -- Bug fix with the mouseUp and mouseDown functions due to rearranging the parameters.\nv0.9.8, 2014/09/03 -- Moved tweening functions into pyautogui instead of separate pyautogui.tweens\nv0.9.7, 2014/09/03 -- Fixing a bug where single-character strings sent to press() were dropped. Added a unit test for this bug.\nv0.9.6, 2014/09/03 -- Added PyMsgBox & PyTweening as dependencies.\nv0.9.5, 2014/08/28 -- Made parameter order for mouseDown() and mouseUp() consistent with click().\nv0.9.4, 2014/08/28 -- Fixed uppercase bug.\nv0.9.3, 2014/08/21 -- Added ability to pass a list to press().\nv0.9.2, 2014/08/19 -- Added complete set of tween functions.\nv0.9.0, 2014/07/28 -- Initial release."
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.447265625,
          "content": "Copyright (c) 2014, Al Sweigart\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the PyAutoGUI nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2080078125,
          "content": "include *.md\ninclude LICENSE.txt\nrecursive-include docs *.bat\nrecursive-include docs *.py\nrecursive-include docs *.rst\nrecursive-include docs Makefile\nrecursive-include pyautogui *.py\nrecursive-include tests *.py\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.1767578125,
          "content": "[[source]]\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\npyautogui = {editable = true, path = \".\"}\n\n[dev-packages]\n\n[requires]\npython_version = \"3.11\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.69921875,
          "content": "PyAutoGUI\n=========\n\nPyAutoGUI is a  cross-platform GUI automation Python module for human beings. Used to programmatically control the mouse & keyboard.\n\n`pip install pyautogui`\n\nFull documentation available at https://pyautogui.readthedocs.org\n\nSimplified Chinese documentation available at https://github.com/asweigart/pyautogui/blob/master/docs/simplified-chinese.ipynb\n\nSource code available at https://github.com/asweigart/pyautogui\n\nIf you need help installing Python, visit https://installpython3.com/\n\nDependencies\n============\n\nPyAutoGUI supports Python 2 and 3. If you are installing PyAutoGUI from PyPI using pip:\n\nWindows has no dependencies. The Win32 extensions do not need to be installed.\n\nmacOS needs the pyobjc-core and pyobjc module installed (in that order).\n\nLinux needs the python3-xlib (or python-xlib for Python 2) module installed.\n\nPillow needs to be installed, and on Linux you may need to install additional libraries to make sure Pillow's PNG/JPEG works correctly. See:\n\n    https://stackoverflow.com/questions/7648200/pip-install-pil-e-tickets-1-no-jpeg-png-support\n\n    http://ubuntuforums.org/showthread.php?t=1751455\n\nIf you want to do development and contribute to PyAutoGUI, you will need to install these modules from PyPI:\n\n* pyscreeze\n* pymsgbox\n* pytweening\n\nExample Usage\n=============\n\nKeyboard and Mouse Control\n--------------------------\n\nThe x, y coordinates used by PyAutoGUI has the 0, 0 origin coordinates in the top left corner of the screen. The x coordinates increase going to the right (just as in mathematics) but the y coordinates increase going down (the opposite of mathematics). On a screen that is 1920 x 1080 pixels in size, coordinates 0, 0 are for the top left while 1919, 1079 is for the bottom right.\n\nCurrently, PyAutoGUI only works on the primary monitor. PyAutoGUI isn't reliable for the screen of a second monitor (the mouse functions may or may not work on multi-monitor setups depending on your operating system and version).\n\nAll keyboard presses done by PyAutoGUI are sent to the window that currently has focus, as if you had pressed the physical keyboard key.\n\n```python\n    >>> import pyautogui\n    >>> screenWidth, screenHeight = pyautogui.size() # Returns two integers, the width and height of the screen. (The primary monitor, in multi-monitor setups.)\n    >>> currentMouseX, currentMouseY = pyautogui.position() # Returns two integers, the x and y of the mouse cursor's current position.\n    >>> pyautogui.moveTo(100, 150) # Move the mouse to the x, y coordinates 100, 150.\n    >>> pyautogui.click() # Click the mouse at its current location.\n    >>> pyautogui.click(200, 220) # Click the mouse at the x, y coordinates 200, 220.\n    >>> pyautogui.move(None, 10)  # Move mouse 10 pixels down, that is, move the mouse relative to its current position.\n    >>> pyautogui.doubleClick() # Double click the mouse at the\n    >>> pyautogui.moveTo(500, 500, duration=2, tween=pyautogui.easeInOutQuad) # Use tweening/easing function to move mouse over 2 seconds.\n    >>> pyautogui.write('Hello world!', interval=0.25)  # Type with quarter-second pause in between each key.\n    >>> pyautogui.press('esc') # Simulate pressing the Escape key.\n    >>> pyautogui.keyDown('shift')\n    >>> pyautogui.write(['left', 'left', 'left', 'left', 'left', 'left'])\n    >>> pyautogui.keyUp('shift')\n    >>> pyautogui.hotkey('ctrl', 'c')\n```\n\nDisplay Message Boxes\n---------------------\n```python\n    >>> import pyautogui\n    >>> pyautogui.alert('This is an alert box.')\n    'OK'\n    >>> pyautogui.confirm('Shall I proceed?')\n    'Cancel'\n    >>> pyautogui.confirm('Enter option.', buttons=['A', 'B', 'C'])\n    'B'\n    >>> pyautogui.prompt('What is your name?')\n    'Al'\n    >>> pyautogui.password('Enter password (text will be hidden)')\n    'swordfish'\n```\n\nScreenshot Functions\n--------------------\n\n(PyAutoGUI uses Pillow for image-related features.)\n```python\n    >>> import pyautogui\n    >>> im1 = pyautogui.screenshot()\n    >>> im1.save('my_screenshot.png')\n    >>> im2 = pyautogui.screenshot('my_screenshot2.png')\n```\nYou can also locate where an image is on the screen:\n```python\n    >>> import pyautogui\n    >>> button7location = pyautogui.locateOnScreen('button.png') # returns (left, top, width, height) of matching region\n    >>> button7location\n    (1416, 562, 50, 41)\n    >>> buttonx, buttony = pyautogui.center(button7location)\n    >>> buttonx, buttony\n    (1441, 582)\n    >>> pyautogui.click(buttonx, buttony)  # clicks the center of where the button was found\n```\nThe locateCenterOnScreen() function returns the center of this match region:\n```python\n    >>> import pyautogui\n    >>> buttonx, buttony = pyautogui.locateCenterOnScreen('button.png') # returns (x, y) of matching region\n    >>> buttonx, buttony\n    (1441, 582)\n    >>> pyautogui.click(buttonx, buttony)  # clicks the center of where the button was found\n```\n\nHow Does PyAutoGUI Work?\n========================\n\nThe three major operating systems (Windows, macOS, and Linux) each have different ways to programmatically control the mouse and keyboard. This can often involve confusing, obscure, and deeply technical details. The job of PyAutoGUI is to hide all of this complexity behind a simple API.\n\n* On Windows, PyAutoGUI accesses the Windows API (also called the WinAPI or win32 API) through the built-in `ctypes` module. The `nicewin` module at https://github.com/asweigart/nicewin provides a demonstration for how Windows API calls can be made through Python.\n\n* On macOS, PyAutoGUI uses the `rubicon-objc` module to access the Cocoa API.\n\n* On Linux, PyAutoGUI uses the `Xlib` module to access the X11 or X Window System.\n\n\nSupport\n-------\n\nIf you find this project helpful and would like to support its development, [consider donating to its creator on Patreon](https://www.patreon.com/AlSweigart).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyautogui",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.52734375,
          "content": "import io\nimport os\nimport re\nfrom setuptools import setup\n\nscriptFolder = os.path.dirname(os.path.realpath(__file__))\nos.chdir(scriptFolder)\n\n# Find version info from module (without importing the module):\nwith open('pyautogui/__init__.py', 'r') as fd:\n    version = re.search(r'^__version__\\s*=\\s*[\\'\"]([^\\'\"]*)[\\'\"]',\n                        fd.read(), re.MULTILINE).group(1)\n\n# Use the README.md content for the long description:\nwith io.open(\"README.md\", encoding=\"utf-8\") as fileObj:\n    long_description = fileObj.read()\n\nsetup(\n    name='PyAutoGUI',\n    version=version,\n    url='https://github.com/asweigart/pyautogui',\n    author='Al Sweigart',\n    author_email='al@inventwithpython.com',\n    description=('PyAutoGUI lets Python control the mouse and keyboard, and other GUI automation tasks. For Windows, macOS, and Linux, on Python 3 and 2.'),\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    license='BSD',\n    packages=['pyautogui'],\n    test_suite='tests',\n    install_requires=['pyobjc-core;platform_system==\"Darwin\"',\n                      'pyobjc-framework-quartz;platform_system==\"Darwin\"',\n                      'python3-Xlib;platform_system==\"Linux\" and python_version>=\"3.0\"',\n                      'python-xlib;platform_system==\"Linux\" and python_version<\"3.0\"',\n                      'pymsgbox',\n                      'pytweening>=1.0.4',\n                      'pyscreeze>=0.1.21',\n                      'pygetwindow>=0.0.5',\n                      'mouseinfo'],\n    keywords=\"gui automation test testing keyboard mouse cursor click press keystroke control\",\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Environment :: Win32 (MS Windows)',\n        'Environment :: X11 Applications',\n        'Environment :: MacOS X',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: BSD License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.1',\n        'Programming Language :: Python :: 3.2',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n    ],\n)\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.427734375,
          "content": "# tox (https://tox.readthedocs.io/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist = py27, py31, py32, py33, py34, py35, py36, py37\n\n[testenv]\ndeps =\n    pymsgbox\n    pillow\n    pytest\n    pytweening\n    pyscreeze\ncommands =\n    python tests/test_pyautogui.py\n"
        }
      ]
    }
  ]
}