{
  "metadata": {
    "timestamp": 1736561279732,
    "page": 273,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "getpelican/pelican",
      "stars": 12677,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0634765625,
          "content": "[report]\nomit =\n       pelican/tests/*\n       pelican/signals.py\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.203125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.py]\nmax_line_length = 88\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.8046875,
          "content": "# .git-blame-ignore-revs\n# Apply code style to project via: ruff format .\ncabdb26cee66e1173cf16cb31d3fe5f9fa4392e7\n# Upgrade code base for Python 3.8 and above\necd598f293161a52564aa6e8dfdcc8284dc93970\n# Apply Ruff and pyupgrade to Jinja templates\ndb241feaa445375dc05e189e69287000ffe5fa8e\n# Change pre-commit to run ruff and ruff-format with fixes\n6d8597addb17d5fa3027ead91427939e8e4e89ec\n# Upgrade Ruff from 0.1.x to 0.4.x\n0bd02c00c078fe041b65fbf4eab13601bb42676d\n# Apply more Ruff checks to code\n9d30c5608a58d202b1c02d55651e6ac746bfb173\n# Apply yet more Ruff checks to code\n7577dd7603f7cb3a09922d1edb65b6eafb6e2ac7\n# Indent Jinja templates, HTML, CSS, and JS via DjHTML\n4af40e80772a58eac8969360e5caeb99e3e26e78\n# Ruff UP031: Use F-string format specifiers instead of percent format\n30bde3823f50b9ba8ac5996c1c46bb72031aa6b8\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.439453125,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Improve accuracy of GitHub's Linguist-powered language statistics\npelican/tests/content/* linguist-vendored\npelican/tests/output/* linguist-vendored\npelican/tests/theme_overrides/* linguist-vendored\npelican/themes/notmyidea/templates/*.html linguist-language=Jinja\npelican/themes/simple/templates/*.html linguist-language=Jinja\nsamples/* linguist-vendored\n*.html linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.228515625,
          "content": "*.egg-info\n.*.swp\n.*.swo\n*.pyc\n.DS_Store\ndocs/_build\ndocs/*/_build\nbuild\ndist\ntags\n.tox\n.coverage\nhtmlcov\n*.orig\nvenv\nsamples/output\n*.pem\n*.lock\n.pdm-python\n.vale\n.venv\n**/LC_MESSAGES/*.mo\n\n# direnv\n.envrc\n\n# IDE cruft\n.idea\n.vscode\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.1796875,
          "content": "Alexis Métaireau <alexis@notmyidea.org>\nAlexis Métaireau <alexis@notmyidea.org> <alexis, notmyidea, org>\nAlexis Métaireau <alexis@notmyidea.org> <ametaireau@gmail.com>\nAxel Haustant <noirbizarre@gmail.com> <axel.haustant.ext@mappy.com>\nAxel Haustant <noirbizarre@gmail.com> <axel.haustant@valtech.fr>\nDave Mankoff <mankyd@gmail.com>\nFeth Arezki <feth@tuttu.info>\nGuillaume <guillaume@lame.homelinux.com>\nGuillaume <guillaume@lame.homelinux.com> <guillaume@mint.(none)>\nGuillaume B <guitreize@gmail.com>\nGuillermo López <guilan70@hotmail.com>\nGuillermo López <guilan70@hotmail.com> <guillermo.lopez@outlook.com>\nJomel Imperio <jimperio@gmail.com>\nJustin Mayer <entrop@gmail.com>\nJustin Mayer <entrop@gmail.com> <entroP@gmail.com>\nMarco Milanesi <kpanic@gnufunk.org> <marcom@openquake.org>\nMassimo Santini <santini@dsi.unimi.it> <santini@spillane.docenti.dsi.unimi.it>\nRémy HUBSCHER <hubscher.remy@gmail.com> <remy.hubscher@ionyse.com>\nSimon Conseil <contact@saimon.org>\nSimon Liedtke <liedtke.simon@googlemail.com>\nSkami18 <skami@skami-laptop.dyndns.org>\nStuart Colville <muffinresearchlabs@gmail.com> <muffinresearch@gmail.com>\nStéphane Bunel <stephane@lutetium.(none)>\ntBunnyMan <WagThatTail@Me.com>\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.7470703125,
          "content": "---\n# See https://pre-commit.com/hooks.html for info on hooks\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-ast\n      - id: check-toml\n      - id: check-yaml\n      - id: debug-statements\n      - id: detect-private-key\n      - id: end-of-file-fixer\n      - id: forbid-new-submodules\n      - id: trailing-whitespace\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    # ruff version should match the one in pyproject.toml\n    rev: v0.7.2\n    hooks:\n      - id: ruff\n        args: [--fix, --exit-non-zero-on-fix]\n      - id: ruff-format\n\n  - repo: https://github.com/rtts/djhtml\n    rev: '3.0.7'\n    hooks:\n      - id: djhtml\n      - id: djcss\n      - id: djjs\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.552734375,
          "content": "---\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the OS, Python version, and any other needed tools\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.10\"\n\n# Build HTML & PDF formats\nformats:\n  - htmlzip\n  - pdf\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Version of Python and requirements required to build the docs\npython:\n  install:\n    - requirements: requirements/developer.pip\n    - method: pip\n      path: .\n"
        },
        {
          "name": ".vale.ini",
          "type": "blob",
          "size": 0.138671875,
          "content": "StylesPath = .vale/styles\n\nVocab = Pelican\n\nMinAlertLevel = suggestion\n\nPackages = proselint, alex\n\n[*]\nBasedOnStyles = Vale, proselint, alex\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 7.2001953125,
          "content": "Filing issues\n=============\n\n* Before you submit a new issue, try `asking for help`_ first.\n* If determined to create a new issue, first search `Pelican Discussions`_\n  and `existing issues`_ (open and closed) to see if your question has already\n  been answered previously.\n\n.. _`asking for help`: `How to get help`_\n.. _`Pelican Discussions`: https://github.com/getpelican/pelican/discussions\n.. _`existing issues`: https://github.com/getpelican/pelican/issues\n\nHow to get help\n===============\n\nBefore you ask for help, please make sure you do the following:\n\n1. Read the documentation_ thoroughly. If in a hurry, at least use the search\n   field that is provided at top-left on the documentation_ pages. Make sure\n   you read the docs for the Pelican version you are using.\n2. Use a search engine (e.g., DuckDuckGo, Google) to search for a solution to\n   your problem. Someone may have already found a solution, perhaps in the\n   form of a ':pelican-doc:`plugins` or a specific combination of settings.\n\n3. Try reproducing the issue in a clean environment, ensuring you are using:\n\n* latest Pelican release (or an up-to-date Git clone of Pelican ``main`` branch)\n* latest releases of libraries used by Pelican\n* no plugins or only those related to the issue\n\n**NOTE:** The most common sources of problems are anomalies in (1) themes, (2)\nplugins, (3) settings files, and (4) ``make``/``invoke`` automation wrappers.\nIf you can't reproduce your problem when using the following steps to generate\nyour site, then the problem is almost certainly with one of the above-listed\nelements (and not Pelican itself)::\n\n    cd ~/projects/your-site\n    git clone https://github.com/getpelican/pelican ~/projects/pelican\n    pelican content -s ~/projects/pelican/samples/pelican.conf.py -t ~/projects/pelican/pelican/themes/notmyidea\n\nIf you can generate your site without problems using the steps above, then your\nproblem is unlikely to be caused by Pelican itself, and therefore please\nconsider reaching out to the maintainers of the plugins/theme you are using\ninstead of raising the topic with the Pelican core community.\n\nIf despite the above efforts you still cannot resolve your problem, be sure to\ninclude in your inquiry the following information, preferably in the form of\nlinks to content uploaded to a `paste service`_, GitHub repository, or other\npublicly-accessible location:\n\n* Describe what version of Pelican you are running (output of ``pelican --version``\n  or the HEAD commit hash if you cloned the repo) and how exactly you installed\n  it (the full command you used, e.g. ``python -m pip install pelican``).\n* If you are looking for a way to get some end result, prepare a detailed\n  description of what the end result should look like (preferably in the form of\n  an image or a mock-up page) and explain in detail what you have done so far to\n  achieve it.\n* If you are trying to solve some issue, prepare a detailed description of how\n  to reproduce the problem. If the issue cannot be easily reproduced, it cannot\n  be debugged by developers or volunteers. Describe only the **minimum steps**\n  necessary to reproduce it (no extra plugins, etc.).\n* Upload your settings file or any other custom code that would enable people to\n  reproduce the problem or to see what you have already tried to achieve the\n  desired end result.\n* Upload detailed and **complete** output logs and backtraces (remember to add\n  the ``--debug`` flag: ``pelican --debug content [...]``)\n\n.. _documentation: https://docs.getpelican.com/\n.. _`paste service`: https://dpaste.com\n\nOnce the above preparation is ready, you can post your query as a new thread in\n`Pelican Discussions`_. Remember to include all the information you prepared.\n\nContributing code\n=================\n\nBefore you submit a contribution, please ask whether it is desired so that you\ndon't spend a lot of time working on something that would be rejected for a\nknown reason. Consider also whether your new feature might be better suited as\na ':pelican-doc:`plugins` — you can `ask for help`_  to make that determination.\n\nAlso, if you intend to submit a pull request to address something for which there\nis no existing issue, there is no need to create a new issue and then immediately\nsubmit a pull request that closes it. You can submit the pull request by itself.\n\nUsing Git and GitHub\n--------------------\n\n* `Create a new branch`_ specific to your change (as opposed to making\n  your commits in the ``main`` branch).\n* **Don't put multiple unrelated fixes/features in the same branch / pull request.**\n  For example, if you're working on a new feature and find a bugfix that\n  doesn't *require* your new feature, **make a new distinct branch and pull\n  request** for the bugfix. Similarly, any proposed changes to code style\n  formatting should be in a completely separate pull request.\n* Add a ``RELEASE.md`` file in the root of the project that contains the\n  release type (major, minor, patch) and a summary of the changes that will be\n  used as the release changelog entry. For example::\n\n       Release type: minor\n\n       Reload browser window upon changes to content, settings, or theme\n\n* Check for unnecessary whitespace via ``git diff --check`` before committing.\n* First line of your commit message should start with present-tense verb, be 50\n  characters or less, and include the relevant issue number(s) if applicable.\n  *Example:* ``Ensure proper PLUGIN_PATH behavior. Refs #428.`` If the commit\n  *completely fixes* an existing bug report, please use ``Fixes #585`` or ``Fix\n  #585`` syntax (so the relevant issue is automatically closed upon PR merge).\n* After the first line of the commit message, add a blank line and then a more\n  detailed explanation (when relevant).\n* `Squash your commits`_ to eliminate merge commits and ensure a clean and\n  readable commit history.\n* After you have issued a pull request, the continuous integration (CI) system\n  will run the test suite on all supported Python versions and check for code style\n  compliance. If any of these checks fail, you should fix them. (If tests fail\n  on the CI system but seem to pass locally, ensure that local test runs aren't\n  skipping any tests.)\n\nContribution quality standards\n------------------------------\n\n* Adhere to the project's code style standards. See: `Development Environment`_\n* Ensure your code is compatible with the `officially-supported Python releases`_.\n* Add docs and tests for your changes. Undocumented and untested features will\n  not be accepted.\n* :pelican-doc:`Run all the tests <contribute>` **on all versions of Python\n  supported by Pelican** to ensure nothing was accidentally broken.\n\nCheck out our `Git Tips`_ page or `ask for help`_ if you\nneed assistance or have any questions about these guidelines.\n\n.. _`plugin`: https://docs.getpelican.com/en/latest/plugins.html\n.. _`Create a new branch`: https://github.com/getpelican/pelican/wiki/Git-Tips#making-your-changes\n.. _`Squash your commits`: https://github.com/getpelican/pelican/wiki/Git-Tips#squashing-commits\n.. _`Git Tips`: https://github.com/getpelican/pelican/wiki/Git-Tips\n.. _`ask for help`: `How to get help`_\n.. _`Development Environment`: https://docs.getpelican.com/en/latest/contribute.html#setting-up-the-development-environment\n.. _`officially-supported Python releases`: https://devguide.python.org/versions/#versions\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7177734375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://www.fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.0830078125,
          "content": "Pelican |build-status| |pypi-version| |downloads| |repology|\n============================================================\n\nPelican is a static site generator, written in Python_, that allows you to create\nweb sites by composing text files in formats such as Markdown, reStructuredText, and HTML.\n\nWith Pelican, you can create web sites without worrying about databases or server-side programming.\nPelican generates static sites that can be served via any web server or hosting service.\n\nYou can perform the following functions with Pelican:\n\n* Compose content in Markdown_ or reStructuredText_ using your editor of choice\n* Simple command-line tool (re)generates HTML, CSS, and JS from your source content\n* Easy to interface with version control systems and web hooks\n* Completely static output is simple to host anywhere\n\n\nFeatures\n--------\n\nPelican’s feature highlights include:\n\n* Chronological content (e.g., articles, blog posts) as well as static pages\n* Integration with external services\n* Site themes (created using Jinja2_ templates)\n* Publication of articles in multiple languages\n* Generation of Atom and RSS feeds\n* Code syntax highlighting via Pygments_\n* Import existing content from WordPress, Dotclear, or RSS feeds\n* Fast rebuild times due to content caching and selective output writing\n* Extensible via a rich plugin ecosystem: `Pelican Plugins`_\n\nCheck out the `Pelican documentation`_ for further information.\n\n\nHow to get help, contribute, or provide feedback\n------------------------------------------------\n\nSee our `contribution submission and feedback guidelines <CONTRIBUTING.rst>`_.\n\n\nSource code\n-----------\n\nPelican’s source code is `hosted on GitHub`_. For information on how it works,\nhave a look at `Pelican's internals`_.\n\n\nWhy the name “Pelican”?\n-----------------------\n\n“Pelican” is an anagram of *calepin*, which means “notebook” in French.\n\n\n.. Links\n\n.. _Python: https://www.python.org/\n.. _reStructuredText: http://docutils.sourceforge.net/rst.html\n.. _Markdown: https://daringfireball.net/projects/markdown/\n.. _Jinja2: https://palletsprojects.com/p/jinja/\n.. _Pygments: https://pygments.org/\n.. _`Pelican Plugins`: https://github.com/pelican-plugins\n.. _`Pelican documentation`: https://docs.getpelican.com/\n.. _`Pelican's internals`: https://docs.getpelican.com/en/latest/internals.html\n.. _`hosted on GitHub`: https://github.com/getpelican/pelican\n\n.. |build-status| image:: https://img.shields.io/github/actions/workflow/status/getpelican/pelican/main.yml?branch=main\n   :target: https://github.com/getpelican/pelican/actions/workflows/main.yml?query=branch%3Amain\n   :alt: GitHub Actions CI: continuous integration status\n.. |pypi-version| image:: https://img.shields.io/pypi/v/pelican.svg\n   :target: https://pypi.org/project/pelican/\n   :alt: PyPI: the Python Package Index\n.. |downloads| image:: https://img.shields.io/pypi/dm/pelican.svg\n   :target: https://pypi.org/project/pelican/\n   :alt: Monthly Downloads from PyPI\n.. |repology| image:: https://repology.org/badge/tiny-repos/pelican.svg\n   :target: https://repology.org/project/pelican/versions\n   :alt: Repology: the packaging hub\n"
        },
        {
          "name": "THANKS",
          "type": "blob",
          "size": 2.884765625,
          "content": "Pelican is a project led by Justin Mayer <https://justinmayer.com/>\nand originally created by Alexis Métaireau <https://blog.notmyidea.org/>, but\nthere are a large number of people that have contributed or implemented key\nfeatures over time. We do our best to keep this list up-to-date, but you can\nalso have a look at the nice contributor graphs produced by GitHub:\nhttps://github.com/getpelican/pelican/graphs/contributors\n\nIf you want to contribute, check the documentation section about how to do so:\n<https://docs.getpelican.com/en/latest/contribute.html>\n\nAaron Kavlie\nAbhishek L\nAlbrecht Mühlenschulte\nAldiantoro Nugroho\nAlen Mujezinovic\nAlessandro Martin\nAlexander Artemenko\nAlexandre RODIERE\nAlexis Daboville\nAlexis Métaireau\nAllan Whatmough\nAndrea Crotti\nAndrew Laski\nAndrew Spiers\nArnaud BOS\nasselinpaul\nAxel Haustant\nBen Rosser (TC01)\nBen Sturmfels\nBenoît HERVIER\nBernhard Scheirle\nBorgar\nBrandon W Maister\nBrendan Wholihan\nBrian C. Lane\nBrian Hsu\nBrian St. Pierre\nBruno Binet\nBunnyMan\nChenguang Wang\nChris Elston\nChris McDonald (Wraithan)\nChris Streeter\nChristophe Chauvet\nClint Howarth\nColin Dunklau\nDafydd Crosby\nDana Woodman\nDave King\nDave Mankoff\nDavid Beitey\nDavid Marble\nDeniz Turgut (Avaris)\nderdon\nDirkjan Ochtman\nDirk Makowski\ndraftcode\nEdward Delaporte\nEmily Strickland\nepatters\nEric Case\nErik Hetzner\nFELD Boris\nFeth Arezki\nFlorian Jacob\nFlorian Preinstorfer\nFélix Delval\nFrederik Ring\nFreeculture\nGeorge V. Reilly\nGuillaume\nGuillaume B\nGuillermo López\nguillermooo\nIan Cordasco\nIgor Kalnitsky\nIrfan Ahmad\nIuri de Silvio\nIvan Dyedov\nJames King\nJames Rowe\nJason K. Moore\njawher\nJered Boxman\nJerome\nJiachen Yang\nJochen Breuer\njoe di castro\nJohn Kristensen\nJohn Mastro\nJökull Sólberg Auðunsson\nJomel Imperio\nJonas Borges\nJoseph Reagle\nJoshua Adelman\nJulian Berman\nJustin Mayer\nKevin Deldycke\nKevin Yap\nKyle Fuller\nLaureline Guerin\nLeonard Huang\nLeonardo Giordani\nLeroy Jiang\nLucas Cimon\nMarcel Hellkamp\nMarco Milanesi\nMarcus Fredriksson\nMario Rodas\nMark Caudill\nMartin Brochhaus\nMassimo Santini\nMatt Bowcock\nMatt Layman\nMeir Kriheli\nMichael Guntsche\nMichael Reneer\nMichael Yanovich\nMike Yumatov\nMikhail Korobov\nMirek Długosz\nm-r-r\nmviera\nNam Nguyen\nNianQing Yao\nNico Di Rocco\nNicolas Duhamel\nNicolas Perriault\nNicolas Steinmetz\nPaolo Melchiorre\nPaul Asselin\nPavel Puchkin\nPerry Roper\nPeter Desmet\nPeter Sabaini\nPetr Viktorin\nPhilippe Pepiot\nRachid Belaid\nRandall Degges\nRanjhith Kalisamy\nRemi Rampin\nRémy HUBSCHER\nrenhbo\nRichard Duivenvoorde\nRogdham\nRomain Porte\nRoman Skvazh\nRonny Pfannschmidt\nRory McCann\nRıdvan Örsvuran\nsaghul\nsam\nSamrat Man Singh\nSimon Conseil\nSimon Liedtke\nSkami18\nsolsTiCe d'Hiver\nSteve Schwarz\nStéphane Bunel\nStéphane Raimbault\nStuart Colville\nTalha Mansoor\nTarek Ziade\nThanos Lefteris\nThomas Thurman\nTobias\nTom Adler\nTomi Pieviläinen\nTrae Blain\nTristan Miller\nTshepang Lekhonkhobe\nValentin-Costel Hăloiu\nVlad Niculae\nWilliam Light\nWilliam Minchin\nWladislaw Merezhko\nW. Trevor King\nZoresvit\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pelican",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.8037109375,
          "content": "[project]\nname = \"pelican\"\nauthors = [{ name = \"Justin Mayer\", email = \"authors@getpelican.com\" }]\ndescription = \"Static site generator supporting Markdown and reStructuredText\"\nversion = \"4.10.2\"\nlicense = { text = \"AGPLv3\" }\nreadme = \"README.rst\"\nkeywords = [\"static site generator\", \"static sites\", \"ssg\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Console\",\n    \"Framework :: Pelican\",\n    \"Intended Audience :: End Users/Desktop\",\n    \"License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System\",\n    \"Topic :: Internet :: WWW/HTTP :: Site Management\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Topic :: Text Processing :: Markup :: Markdown\",\n    \"Topic :: Text Processing :: Markup :: HTML\",\n    \"Topic :: Text Processing :: Markup :: reStructuredText\",\n]\nrequires-python = \">=3.9,<4.0\"\ndependencies = [\n    \"blinker>=1.7.0\",\n    \"docutils>=0.20.1\",\n    \"feedgenerator>=2.1.0\",\n    \"jinja2>=3.1.2\",\n    \"ordered-set>=4.1.0\",\n    \"pygments>=2.16.1\",\n    \"python-dateutil>=2.8.2\",\n    \"rich>=13.6.0\",\n    \"unidecode>=1.3.7\",\n    \"watchfiles>=0.21.0\",\n    \"tzdata; sys_platform == 'win32'\",\n]\n\n[project.optional-dependencies]\nmarkdown = [\"markdown>=3.1\"]\n\n[project.urls]\nHomepage = \"https://getpelican.com\"\nFunding = \"https://donate.getpelican.com/\"\n\"Issue Tracker\" = \"https://github.com/getpelican/pelican/issues\"\nRepository = \"https://github.com/getpelican/pelican\"\nDocumentation = \"https://docs.getpelican.com\"\n\n[project.scripts]\npelican = \"pelican.__main__:main\"\npelican-import = \"pelican.tools.pelican_import:main\"\npelican-plugins = \"pelican.plugins._utils:list_plugins\"\npelican-quickstart = \"pelican.tools.pelican_quickstart:main\"\npelican-themes = \"pelican.tools.pelican_themes:main\"\n\n[tool.autopub]\nproject-name = \"Pelican\"\ngit-username = \"botpub\"\ngit-email = \"52496925+botpub@users.noreply.github.com\"\nchangelog-file = \"docs/changelog.rst\"\nchangelog-header = \"###############\"\nversion-header = \"=\"\n\n[tool.pdm]\nignore_package_warnings = [\"sphinx\"]\n\n[tool.pdm.scripts]\ndocbuild = \"invoke docbuild\"\ndocserve = \"invoke docserve\"\nlint = \"invoke lint\"\ntest = \"invoke tests\"\n\n[tool.pdm.dev-dependencies]\ndev = [\n    \"BeautifulSoup4>=4.12.2\",\n    \"jinja2>=3.1.2\",\n    \"lxml>=4.9.3\",\n    \"markdown>=3.5.1\",\n    \"typogrify>=2.0.7\",\n    \"sphinx>=7.1.2\",\n    \"sphinxext-opengraph>=0.9.0\",\n    \"furo==2023.9.10\",\n    \"livereload>=2.6.3\",\n    \"psutil>=5.9.6\",\n    \"pygments>=2.16.1\",\n    \"pytest>=7.4.3\",\n    \"pytest-cov>=4.1.0\",\n    \"pytest-sugar>=0.9.7\",\n    \"pytest-xdist>=3.4.0\",\n    \"tox>=4.11.3\",\n    \"invoke>=2.2.0\",\n    # ruff version should match the one in .pre-commit-config.yaml\n    \"ruff==0.7.2\",\n    \"tomli>=2.0.1; python_version < \\\"3.11\\\"\",\n]\n\n[tool.pdm.build]\nsource-includes = [\n    \"CONTRIBUTING.rst\",\n    \"THANKS\",\n    \"docs/changelog.rst\",\n    \"samples/\",\n]\n\n[build-system]\nrequires = [\"pdm-backend\"]\nbuild-backend = \"pdm.backend\"\n\n\n[tool.ruff.lint]\n# see https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml\n# \"F\" contains autoflake, see https://github.com/astral-sh/ruff/issues/1647\n# add more rules\nselect = [\n    # default Ruff checkers as of ruff 0.1.3: E4, E7, E9, F\n    \"E4\",\n    \"E7\",\n    \"E9\",\n    \"F\",  # pyflakes\n\n    # the rest in alphabetical order:\n    # TODO: \"A\",   # flake8-builtins\n    # TODO: \"ARG\", # flake8-unused-arguments\n    \"B\",   # flake8-bugbear\n    # TODO: \"BLE\", # flake8-blind-except\n    # TODO: Do I want \"COM\", # flake8-commas\n    \"C4\",  # flake8-comprehensions\n    # TODO: \"DJ\",  # flake8-django\n    # TODO: \"DTZ\", # flake8-datetimez\n    # TODO: \"EM\",  # flake8-errmsg\n    \"EXE\", # flake8-executable\n    # TODO: \"FURB\", # refurb\n    # TODO: \"FBT\", # flake8-boolean-trap\n    # TODO: \"G\",   # flake8-logging-format\n    \"I\",   # isort\n    \"ICN\", # flake8-import-conventions\n    \"INP\", # flake8-no-pep420\n    # TODO: \"INT\", # flake8-gettext\n    \"ISC\", # flake8-implicit-str-concat\n    # TODO: \"LOG\", # flake8-logging\n    \"PERF\", # perflint\n    \"PIE\", # flake8-pie\n    \"PL\",  # pylint\n    \"PYI\", # flake8-pyi\n    # TODO: \"RET\", # flake8-return\n    \"RSE\", # flake8-raise\n    \"RUF\",\n    # TODO: \"SIM\", # flake8-simplify\n    \"SLF\", # flake8-self\n    \"SLOT\", # flake8-slots\n    \"TID\", # flake8-tidy-imports\n    \"UP\",  # pyupgrade\n    \"Q\",   # flake8-quotes\n    \"TCH\", # flake8-type-checking\n    \"T10\", # flake8-debugger\n    \"T20\", # flake8-print\n    # TODO: \"S\",   # flake8-bandit\n    \"YTT\", # flake8-2020\n    # TODO: add more flake8 rules\n  ]\n\nignore = [\n    # suppression in order of # of violations in Dec 2023:\n    \"PLW2901\",  # redefined-loop-name\n    \"SLF001\",  # private-member-access\n    \"PLR0912\",  # too-many-branches\n    \"PLR0913\",  # too-many-arguments\n    # RUF005: this is a different style of concatenating literals.  It perhaps performs\n    # a bit better, but doesn't seem any more readable to me.  So, ignore it.\n    \"RUF005\",  # collection-literal-concatenation\n    # TODO: several classes have class variables.  If that is correct, we should\n    #   annotate them with ClassVar.\n    # See https://docs.astral.sh/ruff/rules/mutable-class-default/\n    \"RUF012\",  # mutable-class-default\n    \"PLR0915\",  # too-many-statements\n    # Note: we have a couple of \"namespace packages\" (i.e. missing __init__.py)\n    # Not sure if we should add __init__.py to them, or they really need to be\n    # namespace packages.\n    \"INP001\",  # implicit-namespace-package\n    # ruff-format wants us to ignore ISC001.  I don't love that, but okay.\n    # \"warning: The following rules may cause conflicts when used with the formatter:\n    #  `ISC001`. To avoid unexpected behavior, we recommend disabling these rules,\n    #  either by removing them from the `select` or `extend-select` configuration,\n    #  or adding them to the `ignore` configuration.\"\n    \"ISC001\",  # single-line-implicit-string-concatenation\n    # PERF203 has minimal performance impact, and you have to catch the exception\n    # inside the loop if you want to ignore it, so let's ignore PERF203.\n    \"PERF203\",  # try-except-in-loop\n]\n\n[tool.ruff.lint.extend-per-file-ignores]\n\n\"pelican/__init__.py\" = [\n    # allow imports after a call to a function, see the file\n    \"E402\"\n]\n\"pelican/tests/test_utils.py\" = [\n    # the tests have a bunch of unicode characters\n    \"RUF001\"\n]\n\"pelican/tests/test_generators.py\" = [\n    # the tests have a bunch of constants, why not\n    \"PLR2004\"\n]\n\n\"pelican/tools/*.py}\" = [\n    # this is a command-line utility, prints are fine\n    \"T201\"\n]\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks.py",
          "type": "blob",
          "size": 3.3330078125,
          "content": "import os\nfrom pathlib import Path\nfrom shutil import which\n\nfrom invoke import task\n\nPKG_NAME = \"pelican\"\nPKG_PATH = Path(PKG_NAME)\nDOCS_PORT = os.environ.get(\"DOCS_PORT\", 8000)\nBIN_DIR = \"bin\" if os.name != \"nt\" else \"Scripts\"\nPTY = os.name != \"nt\"\nACTIVE_VENV = os.environ.get(\"VIRTUAL_ENV\", None)\nVENV_HOME = Path(os.environ.get(\"WORKON_HOME\", \"~/virtualenvs\"))\nVENV_PATH = Path(ACTIVE_VENV) if ACTIVE_VENV else (VENV_HOME / PKG_NAME)\nVENV = str(VENV_PATH.expanduser())\nVENV_BIN = Path(VENV) / Path(BIN_DIR)\n\nTOOLS = [\"pdm\", \"pre-commit\", \"psutil\"]\nPDM = which(\"pdm\") or VENV_BIN / \"pdm\"\nPRECOMMIT = which(\"pre-commit\") or VENV_BIN / \"pre-commit\"\n\n\n@task\ndef docbuild(c):\n    \"\"\"Build documentation\"\"\"\n    c.run(f\"{VENV_BIN}/sphinx-build -W docs docs/_build\", pty=PTY)\n\n\n@task(docbuild)\ndef docserve(c):\n    \"\"\"Serve docs at http://localhost:$DOCS_PORT/ (default port is 8000)\"\"\"\n    from livereload import Server\n\n    server = Server()\n    server.watch(\"docs/conf.py\", lambda: docbuild(c))\n    server.watch(\"CONTRIBUTING.rst\", lambda: docbuild(c))\n    server.watch(\"docs/*.rst\", lambda: docbuild(c))\n    server.serve(port=DOCS_PORT, root=\"docs/_build\")\n\n\n@task\ndef tests(c):\n    \"\"\"Run the test suite\"\"\"\n    c.run(f\"{VENV_BIN}/pytest\", pty=PTY)\n\n\n@task\ndef coverage(c):\n    \"\"\"Generate code coverage of running the test suite.\"\"\"\n    c.run(\n        f\"{VENV_BIN}/pytest --cov=pelican --cov-report term-missing \"\n        \"--cov-fail-under 75\",\n        pty=PTY,\n    )\n    c.run(f\"{VENV_BIN}/coverage html\", pty=PTY)\n\n\n@task\ndef format(c, check=False, diff=False):\n    \"\"\"Run Ruff's auto-formatter, optionally with --check or --diff\"\"\"\n    check_flag, diff_flag = \"\", \"\"\n    if check:\n        check_flag = \"--check\"\n    if diff:\n        diff_flag = \"--diff\"\n    c.run(\n        f\"{VENV_BIN}/ruff format {check_flag} {diff_flag} {PKG_PATH} tasks.py\", pty=PTY\n    )\n\n\n@task\ndef ruff(c, fix=False, diff=False):\n    \"\"\"Run Ruff to ensure code meets project standards.\"\"\"\n    diff_flag, fix_flag = \"\", \"\"\n    if fix:\n        fix_flag = \"--fix\"\n    if diff:\n        diff_flag = \"--diff\"\n    c.run(f\"{VENV_BIN}/ruff check {diff_flag} {fix_flag} .\", pty=PTY)\n\n\n@task\ndef lint(c, fix=False, diff=False):\n    \"\"\"Check code style via linting tools.\"\"\"\n    ruff(c, fix=fix, diff=diff)\n    format(c, check=not fix, diff=diff)\n\n\n@task\ndef tools(c):\n    \"\"\"Install tools in the virtual environment if not already on PATH\"\"\"\n    for tool in TOOLS:\n        if not which(tool):\n            c.run(f\"{VENV_BIN}/python -m pip install {tool}\", pty=PTY)\n\n\n@task\ndef precommit(c):\n    \"\"\"Install pre-commit hooks to .git/hooks/pre-commit\"\"\"\n    c.run(f\"{PRECOMMIT} install\", pty=PTY)\n\n\n@task\ndef setup(c):\n    c.run(f\"{VENV_BIN}/python -m pip install -U pip\", pty=PTY)\n    tools(c)\n    c.run(f\"{PDM} install\", pty=PTY)\n    precommit(c)\n\n\n@task\ndef update_functional_tests(c):\n    \"\"\"Update the generated functional test output\"\"\"\n    c.run(\n        f\"bash -c 'LC_ALL=en_US.utf8 pelican -o {PKG_PATH}/tests/output/custom/ \\\n            -s samples/pelican.conf.py samples/content/'\",\n        pty=PTY,\n    )\n    c.run(\n        f\"bash -c 'LC_ALL=fr_FR.utf8 pelican -o {PKG_PATH}/tests/output/custom_locale/ \\\n            -s samples/pelican.conf_FR.py samples/content/'\",\n        pty=PTY,\n    )\n    c.run(\n        f\"bash -c 'LC_ALL=en_US.utf8 pelican -o \\\n            {PKG_PATH}/tests/output/basic/ samples/content/'\",\n        pty=PTY,\n    )\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.6083984375,
          "content": "[tox]\nenvlist = py{3.9,3.10,3.11,3.12,3.13},docs\n\n[testenv]\nbasepython =\n    py3.9: python3.9\n    py3.10: python3.10\n    py3.11: python3.11\n    py3.12: python3.12\n    py3.13: python3.13\npassenv = *\nusedevelop=True\ndeps =\n    -rrequirements/test.pip\n\ncommands =\n    {envpython} --version\n    pytest -s --cov=pelican --cov-fail-under 75 pelican\n\n[testenv:docs]\nbasepython = python3.11\ndeps =\n    -rrequirements/docs.pip\nchangedir = docs\ncommands =\n    sphinx-build -W -b html -d {envtmpdir}/doctrees . _build/html\n\n[pytest]\nfilterwarnings =\n    default::DeprecationWarning\n    error:.*:Warning:pelican\naddopts = -n auto -r a\n"
        }
      ]
    }
  ]
}