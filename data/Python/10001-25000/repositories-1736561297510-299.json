{
  "metadata": {
    "timestamp": 1736561297510,
    "page": 299,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dbcli/pgcli",
      "stars": 12219,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0322265625,
          "content": "[run]\nparallel=True\nsource=pgcli\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.259765625,
          "content": "# editorconfig.org\n# Get your text editor plugin at:\n# http://editorconfig.org/#download\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[travis.yml]\nindent_size = 2\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.80078125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\npyvenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n.pytest_cache\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# PyCharm\n.idea/\n*.iml\n\n# Vagrant\n.vagrant/\n\n# Generated Packages\n*.deb\n*.rpm\n\n.vscode/\nvenv/\n\n.ropeproject/\n\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.0869140625,
          "content": "repos:\n-   repo: https://github.com/psf/black\n    rev: 23.3.0\n    hooks:\n    - id: black\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 3.099609375,
          "content": "Many thanks to the following contributors.\n\nProject Lead:\n-------------\n    * Irina Truong\n\nCore Devs:\n----------\n    * Amjith Ramanujam\n    * Darik Gamble\n    * Stuart Quin\n    * Joakim Koljonen\n    * Daniel Rocco\n    * Karl-Aksel Puulmann\n    * Dick Marinus\n\nContributors:\n-------------\n    * Brett\n    * Étienne BERSAC (bersace)\n    * Daniel Schwarz\n    * inkn\n    * Jonathan Slenders\n    * xalley\n    * TamasNo1\n    * François Pietka\n    * Michael Kaminsky\n    * Alexander Kukushkin\n    * Ludovic Gasc (GMLudo)\n    * Marc Abramowitz\n    * Nick Hahner\n    * Jay Zeng\n    * Dimitar Roustchev\n    * Dhaivat Pandit\n    * Matheus Rosa\n    * Ali Kargın\n    * Nathan Jhaveri\n    * David Celis\n    * Sven-Hendrik Haase\n    * Çağatay Yüksel\n    * Tiago Ribeiro\n    * Vignesh Anand\n    * Charlie Arnold\n    * dwalmsley\n    * Artur Dryomov\n    * rrampage\n    * while0pass\n    * Eric Workman\n    * xa\n    * Hans Roman\n    * Guewen Baconnier\n    * Dionysis Grigoropoulos\n    * Jacob Magnusson\n    * Johannes Hoff\n    * vinotheassassin\n    * Jacek Wielemborek\n    * Fabien Meghazi\n    * Manuel Barkhau\n    * Sergii V\n    * Emanuele Gaifas\n    * Owen Stephens\n    * Russell Davies\n    * AlexTes\n    * Hraban Luyat\n    * Jackson Popkin\n    * Gustavo Castro\n    * Alexander Schmolck\n    * Donnell Muse\n    * Andrew Speed\n    * Dmitry B\n    * Isank\n    * Marcin Sztolcman\n    * Bojan Delić\n    * Chris Vaughn\n    * Frederic Aoustin\n    * Pierre Giraud\n    * Andrew Kuchling\n    * Dan Clark\n    * Catherine Devlin\n    * Jason Ribeiro\n    * Rishi Ramraj\n    * Matthieu Guilbert\n    * Alexandr Korsak\n    * Saif Hakim\n    * Artur Balabanov\n    * Kenny Do\n    * Max Rothman\n    * Daniel Egger\n    * Ignacio Campabadal\n    * Mikhail Elovskikh (wronglink)\n    * Marcin Cieślak (saper)\n    * easteregg (verfriemelt-dot-org)\n    * Scott Brenstuhl (808sAndBR)\n    * Nathan Verzemnieks\n    * raylu\n    * Zhaolong Zhu\n    * Zane C. Bowers-Hadley\n    * Telmo \"Trooper\" (telmotrooper)\n    * Alexander Zawadzki\n    * Pablo A. Bianchi (pabloab)\n    * Sebastian Janko (sebojanko)\n    * Pedro Ferrari (petobens)\n    * Martin Matejek (mmtj)\n    * Jonas Jelten\n    * BrownShibaDog\n    * George Thomas(thegeorgeous)\n    * Yoni Nakache(lazydba247)\n    * Gantsev Denis\n    * Stephano Paraskeva\n    * Panos Mavrogiorgos (pmav99)\n    * Igor Kim (igorkim)\n    * Anthony DeBarros (anthonydb)\n    * Seungyong Kwak (GUIEEN)\n    * Tom Caruso (tomplex)\n    * Jan Brun Rasmussen (janbrunrasmussen)\n    * Kevin Marsh (kevinmarsh)\n    * Eero Ruohola (ruohola)\n    * Miroslav Šedivý (eumiro)\n    * Eric R Young (ERYoung11)\n    * Paweł Sacawa (psacawa)\n    * Bruno Inec (sweenu)\n    * Daniele Varrazzo\n    * Daniel Kukula (dkuku)\n    * Kian-Meng Ang (kianmeng)\n    * Liu Zhao (astroshot)\n    * Rigo Neri (rigoneri)\n    * Anna Glasgall (annathyst)\n    * Andy Schoenberger (andyscho)\n    * Damien Baty (dbaty)\n    * blag\n    * Rob Berry (rob-b)\n    * Sharon Yogev (sharonyogev)\n    * Hollis Wu (holi0317)\n    * Antonio Aguilar (crazybolillo)\n    * Andrew M. MacFie (amacfie)\n    * saucoide\n    * Chris Rose (offbyone/offby1)\n    * Mathieu Dupuy (deronnax)\n    * Chris Novakovic\n\nCreator:\n--------\nAmjith Ramanujam\n"
        },
        {
          "name": "DEVELOP.rst",
          "type": "blob",
          "size": 6.5634765625,
          "content": "Development Guide\n-----------------\nThis is a guide for developers who would like to contribute to this project.\n\nGitHub Workflow\n---------------\n\nIf you're interested in contributing to pgcli, first of all my heart felt\nthanks. `Fork the project <https://github.com/dbcli/pgcli>`_ on github.  Then\nclone your fork into your computer (``git clone <url-for-your-fork>``).  Make\nthe changes and create the commits in your local machine. Then push those\nchanges to your fork. Then click on the pull request icon on github and create\na new pull request. Add a description about the change and send it along. I\npromise to review the pull request in a reasonable window of time and get back\nto you.\n\nIn order to keep your fork up to date with any changes from mainline, add a new\ngit remote to your local copy called 'upstream' and point it to the main pgcli\nrepo.\n\n::\n\n   $ git remote add upstream git@github.com:dbcli/pgcli.git\n\nOnce the 'upstream' end point is added you can then periodically do a ``git\npull upstream master`` to update your local copy and then do a ``git push\norigin master`` to keep your own fork up to date.\n\nCheck Github's `Understanding the GitHub flow guide\n<https://guides.github.com/introduction/flow/>`_ for a more detailed\nexplanation of this process.\n\nLocal Setup\n-----------\n\nThe installation instructions in the README file are intended for users of\npgcli. If you're developing pgcli, you'll need to install it in a slightly\ndifferent way so you can see the effects of your changes right away without\nhaving to go through the install cycle every time you change the code.\n\nIt is highly recommended to use virtualenv for development. If you don't know\nwhat a virtualenv is, `this guide <http://docs.python-guide.org/en/latest/dev/virtualenvs/#virtual-environments>`_\nwill help you get started.\n\nCreate a virtualenv (let's call it pgcli-dev). Activate it:\n\n::\n\n    source ./pgcli-dev/bin/activate\n\n    or\n\n    .\\pgcli-dev\\scripts\\activate (for Windows)\n\nOnce the virtualenv is activated, `cd` into the local clone of pgcli folder\nand install pgcli using pip as follows:\n\n::\n\n    $ pip install --editable .\n\n    or\n\n    $ pip install -e .\n\nThis will install the necessary dependencies as well as install pgcli from the\nworking folder into the virtualenv. By installing it using `pip install -e`\nwe've linked the pgcli installation with the working copy. Any changes made\nto the code are immediately available in the installed version of pgcli. This\nmakes it easy to change something in the code, launch pgcli and check the\neffects of your changes.\n\nAdding PostgreSQL Special (Meta) Commands\n-----------------------------------------\n\nIf you want to work on adding new meta-commands (such as `\\dp`, `\\ds`, `dy`),\nyou need to contribute to `pgspecial <https://github.com/dbcli/pgspecial/>`_\nproject.\n\nVisual Studio Code Debugging\n-----------------------------\nTo set up Visual Studio Code to debug pgcli requires a launch.json file.\n\nWithin the project, create a file: .vscode\\\\launch.json like below.\n\n::\n\n    {\n        // Use IntelliSense to learn about possible attributes.\n        // Hover to view descriptions of existing attributes.\n        // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n        \"version\": \"0.2.0\",\n        \"configurations\": [\n            {\n                \"name\": \"Python: Module\",\n                \"type\": \"python\",\n                \"request\": \"launch\",\n                \"module\": \"pgcli.main\",\n                \"justMyCode\": false,\n                \"console\": \"externalTerminal\",\n                \"env\": {\n                    \"PGUSER\": \"postgres\",\n                    \"PGPASS\": \"password\",\n                    \"PGHOST\": \"localhost\",\n                    \"PGPORT\": \"5432\"\n                }\n            }\n        ]\n    }\n\nBuilding RPM and DEB packages\n-----------------------------\n\nYou will need Vagrant 1.7.2 or higher. In the project root there is a\nVagrantfile that is setup to do multi-vm provisioning. If you're setting things\nup for the first time, then do:\n\n::\n\n    $ version=x.y.z vagrant up debian\n    $ version=x.y.z vagrant up centos\n\nIf you already have those VMs setup and you're merely creating a new version of\nDEB or RPM package, then you can do:\n\n::\n\n    $ version=x.y.z vagrant provision\n\nThat will create a .deb file and a .rpm file.\n\nThe deb package can be installed as follows:\n\n::\n\n    $ sudo dpkg -i pgcli*.deb   # if dependencies are available.\n\n    or\n\n    $ sudo apt-get install -f pgcli*.deb  # if dependencies are not available.\n\n\nThe rpm package can be installed as follows:\n\n::\n\n    $ sudo yum install pgcli*.rpm\n\nRunning the integration tests\n-----------------------------\n\nIntegration tests use `behave package <https://behave.readthedocs.io/>`_ and\npytest.\nConfiguration settings for this package are provided via a ``behave.ini`` file\nin the ``tests`` directory.  An example::\n\n    [behave]\n    stderr_capture = false\n\n    [behave.userdata]\n    pg_test_user = dbuser\n    pg_test_host = db.example.com\n    pg_test_port = 30000\n\nFirst, install the requirements for testing:\n\n::\n    $ pip install -U pip setuptools \n    $ pip install --no-cache-dir \".[sshtunnel]\" \n    $ pip install -r requirements-dev.txt \n\nEnsure that the database user has permissions to create and drop test databases\nby checking your ``pg_hba.conf`` file. The default user should be ``postgres``\nat ``localhost``. Make sure the authentication method is set to ``trust``. If\nyou made any changes to your ``pg_hba.conf`` make sure to restart the postgres\nservice for the changes to take effect.\n\n::\n\n    # ONLY IF YOU MADE CHANGES TO YOUR pg_hba.conf FILE\n    $ sudo service postgresql restart\n\nAfter that, tests in the ``/pgcli/tests`` directory can be run with:\n(Note that these ``behave`` tests do not currently work when developing on Windows due to pexpect incompatibility.)\n\n::\n\n    # on directory /pgcli/tests\n    $ behave\n\nAnd on the ``/pgcli`` directory:\n\n::\n\n    # on directory /pgcli\n    $ py.test\n\nTo see stdout/stderr, use the following command:\n\n::\n\n    $ behave --no-capture\n\nTroubleshooting the integration tests\n-------------------------------------\n\n- Make sure postgres instance on localhost is running\n- Check your ``pg_hba.conf`` file to verify local connections are enabled\n- Check `this issue <https://github.com/dbcli/pgcli/issues/945>`_ for relevant information.\n- `File an issue <https://github.com/dbcli/pgcli/issues/new>`_.\n\nCoding Style\n------------\n\n``pgcli`` uses `black <https://github.com/ambv/black>`_ to format the source code. Make sure to install black.\n\nReleases\n--------\n\nIf you're the person responsible for releasing `pgcli`, `this guide <https://github.com/dbcli/pgcli/blob/main/RELEASES.md>`_ is for you.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.0703125,
          "content": "FROM python:3.8\n\nCOPY . /app\nRUN cd /app && pip install -e .\n\nCMD pgcli\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4208984375,
          "content": "All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\n* Neither the name of the {organization} nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0908203125,
          "content": "include LICENSE.txt AUTHORS changelog.rst\nrecursive-include tests *.py *.txt *.feature *.ini\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 11.8740234375,
          "content": "We stand with Ukraine\n---------------------\n\nUkrainian people are fighting for their country. A lot of civilians, women and children, are suffering. Hundreds were killed and injured, and thousands were displaced.\n\nThis is an image from my home town, Kharkiv. This place is right in the old city center.\n\n.. image:: screenshots/kharkiv-destroyed.jpg\n\nPicture by @fomenko_ph (Telegram).\n\nPlease consider donating or volunteering.\n\n* https://bank.gov.ua/en/\n* https://savelife.in.ua/en/donate/\n* https://www.comebackalive.in.ua/donate\n* https://www.globalgiving.org/projects/ukraine-crisis-relief-fund/\n* https://www.savethechildren.org/us/where-we-work/ukraine\n* https://www.facebook.com/donate/1137971146948461/\n* https://donate.wck.org/give/393234#!/donation/checkout\n* https://atlantaforukraine.com/\n\n\nA REPL for Postgres\n-------------------\n\n|Build Status| |CodeCov| |PyPI| |netlify|\n\nThis is a postgres client that does auto-completion and syntax highlighting.\n\nHome Page: http://pgcli.com\n\nMySQL Equivalent: http://mycli.net\n\n.. image:: screenshots/pgcli.gif\n.. image:: screenshots/image01.png\n\nQuick Start\n-----------\n\nIf you already know how to install python packages, then you can simply do:\n\n::\n\n    $ pip install -U pgcli\n\n    or\n\n    $ sudo apt-get install pgcli # Only on Debian based Linux (e.g. Ubuntu, Mint, etc)\n    $ brew install pgcli  # Only on macOS\n\nIf you don't know how to install python packages, please check the\n`detailed instructions`_.\n\n.. _`detailed instructions`: https://github.com/dbcli/pgcli#detailed-installation-instructions\n\nUsage\n-----\n\n::\n\n    $ pgcli [database_name]\n\n    or\n\n    $ pgcli postgresql://[user[:password]@][netloc][:port][/dbname][?extra=value[&other=other-value]]\n\nExamples:\n\n::\n\n    $ pgcli local_database\n\n    $ pgcli postgres://amjith:pa$$w0rd@example.com:5432/app_db?sslmode=verify-ca&sslrootcert=/myrootcert\n\nFor more details:\n\n::\n\n    $ pgcli --help\n\n    Usage: pgcli [OPTIONS] [DBNAME] [USERNAME]\n\n    Options:\n      -h, --host TEXT            Host address of the postgres database.\n      -p, --port INTEGER         Port number at which the postgres instance is\n                                 listening.\n      -U, --username TEXT        Username to connect to the postgres database.\n      -u, --user TEXT            Username to connect to the postgres database.\n      -W, --password             Force password prompt.\n      -w, --no-password          Never prompt for password.\n      --single-connection        Do not use a separate connection for completions.\n      -v, --version              Version of pgcli.\n      -d, --dbname TEXT          database name to connect to.\n      --pgclirc FILE             Location of pgclirc file.\n      -D, --dsn TEXT             Use DSN configured into the [alias_dsn] section\n                                 of pgclirc file.\n      --list-dsn                 list of DSN configured into the [alias_dsn]\n                                 section of pgclirc file.\n      --row-limit INTEGER        Set threshold for row limit prompt. Use 0 to\n                                 disable prompt.\n      --less-chatty              Skip intro on startup and goodbye on exit.\n      --prompt TEXT              Prompt format (Default: \"\\u@\\h:\\d> \").\n      --prompt-dsn TEXT          Prompt format for connections using DSN aliases\n                                 (Default: \"\\u@\\h:\\d> \").\n      -l, --list                 list available databases, then exit.\n      --auto-vertical-output     Automatically switch to vertical output mode if\n                                 the result is wider than the terminal width.\n      --warn [all|moderate|off]  Warn before running a destructive query.\n      --help                     Show this message and exit.\n\n``pgcli`` also supports many of the same `environment variables`_ as ``psql`` for login options (e.g. ``PGHOST``, ``PGPORT``, ``PGUSER``, ``PGPASSWORD``, ``PGDATABASE``).\n\nThe SSL-related environment variables are also supported, so if you need to connect a postgres database via ssl connection, you can set set environment like this:\n\n::\n\n    export PGSSLMODE=\"verify-full\"\n    export PGSSLCERT=\"/your-path-to-certs/client.crt\"\n    export PGSSLKEY=\"/your-path-to-keys/client.key\"\n    export PGSSLROOTCERT=\"/your-path-to-ca/ca.crt\"\n    pgcli -h localhost -p 5432 -U username postgres\n\n.. _environment variables: https://www.postgresql.org/docs/current/libpq-envars.html\n\nFeatures\n--------\n\nThe `pgcli` is written using prompt_toolkit_.\n\n* Auto-completes as you type for SQL keywords as well as tables and\n  columns in the database.\n* Syntax highlighting using Pygments.\n* Smart-completion (enabled by default) will suggest context-sensitive\n  completion.\n\n    - ``SELECT * FROM <tab>`` will only show table names.\n    - ``SELECT * FROM users WHERE <tab>`` will only show column names.\n\n* Primitive support for ``psql`` back-slash commands.\n* Pretty prints tabular data.\n\n.. _prompt_toolkit: https://github.com/jonathanslenders/python-prompt-toolkit\n.. _tabulate: https://pypi.python.org/pypi/tabulate\n\nConfig\n------\nA config file is automatically created at ``~/.config/pgcli/config`` at first launch.\nSee the file itself for a description of all available options.\n\nContributions:\n--------------\n\nIf you're interested in contributing to this project, first of all I would like\nto extend my heartfelt gratitude. I've written a small doc to describe how to\nget this running in a development setup.\n\nhttps://github.com/dbcli/pgcli/blob/master/DEVELOP.rst\n\nPlease feel free to reach out to us if you need help.\n* Amjith, pgcli author: amjith.r@gmail.com, Twitter: `@amjithr <http://twitter.com/amjithr>`_\n* Irina, pgcli maintainer: i.chernyavska@gmail.com, Twitter: `@irinatruong <http://twitter.com/irinatruong>`_\n\nDetailed Installation Instructions:\n-----------------------------------\n\nmacOS:\n======\n\nThe easiest way to install pgcli is using Homebrew.\n\n::\n\n    $ brew install pgcli\n\nDone!\n\nAlternatively, you can install ``pgcli`` as a python package using a package\nmanager called called ``pip``. You will need postgres installed on your system\nfor this to work.\n\nIn depth getting started guide for ``pip`` - https://pip.pypa.io/en/latest/installation/\n\n::\n\n    $ which pip\n\nIf it is installed then you can do:\n\n::\n\n    $ pip install pgcli\n\nIf that fails due to permission issues, you might need to run the command with\nsudo permissions.\n\n::\n\n    $ sudo pip install pgcli\n\nIf pip is not installed check if easy_install is available on the system.\n\n::\n\n    $ which easy_install\n\n    $ sudo easy_install pgcli\n\nLinux:\n======\n\nIn depth getting started guide for ``pip`` - https://pip.pypa.io/en/latest/installation/\n\nCheck if pip is already available in your system.\n\n::\n\n    $ which pip\n\nIf it doesn't exist, use your linux package manager to install `pip`. This\nmight look something like:\n\n::\n\n    $ sudo apt-get install python-pip   # Debian, Ubuntu, Mint etc\n\n    or\n\n    $ sudo yum install python-pip  # RHEL, Centos, Fedora etc\n\n``pgcli`` requires python-dev, libpq-dev and libevent-dev packages. You can\ninstall these via your operating system package manager.\n\n\n::\n\n    $ sudo apt-get install python-dev libpq-dev libevent-dev\n\n    or\n\n    $ sudo yum install python-devel postgresql-devel\n\nThen you can install pgcli:\n\n::\n\n    $ sudo pip install pgcli\n\n\nDocker\n======\n\nPgcli can be run from within Docker. This can be useful to try pgcli without\ninstalling it, or any dependencies, system-wide.\n\nTo build the image:\n\n::\n\n    $ docker build -t pgcli .\n\nTo create a container from the image:\n\n::\n\n    $ docker run --rm -ti pgcli pgcli <ARGS>\n\nTo access postgresql databases listening on localhost, make sure to run the\ndocker in \"host net mode\". E.g. to access a database called \"foo\" on the\npostgresql server running on localhost:5432 (the standard port):\n\n::\n\n    $ docker run --rm -ti --net host pgcli pgcli -h localhost foo\n\nTo connect to a locally running instance over a unix socket, bind the socket to\nthe docker container:\n\n::\n\n    $ docker run --rm -ti -v /var/run/postgres:/var/run/postgres pgcli pgcli foo\n\n\nIPython\n=======\n\nPgcli can be run from within `IPython <https://ipython.org>`_ console. When working on a query,\nit may be useful to drop into a pgcli session without leaving the IPython console, iterate on a\nquery, then quit pgcli to find the query results in your IPython workspace.\n\nAssuming you have IPython installed:\n\n::\n\n    $ pip install ipython-sql\n\nAfter that, run ipython and load the ``pgcli.magic`` extension:\n\n::\n\n    $ ipython\n\n    In [1]: %load_ext pgcli.magic\n\n\nConnect to a database and construct a query:\n\n::\n\n    In [2]: %pgcli postgres://someone@localhost:5432/world\n    Connected: someone@world\n    someone@localhost:world> select * from city c where countrycode = 'USA' and population > 1000000;\n    +------+--------------+---------------+--------------+--------------+\n    | id   | name         | countrycode   | district     | population   |\n    |------+--------------+---------------+--------------+--------------|\n    | 3793 | New York     | USA           | New York     | 8008278      |\n    | 3794 | Los Angeles  | USA           | California   | 3694820      |\n    | 3795 | Chicago      | USA           | Illinois     | 2896016      |\n    | 3796 | Houston      | USA           | Texas        | 1953631      |\n    | 3797 | Philadelphia | USA           | Pennsylvania | 1517550      |\n    | 3798 | Phoenix      | USA           | Arizona      | 1321045      |\n    | 3799 | San Diego    | USA           | California   | 1223400      |\n    | 3800 | Dallas       | USA           | Texas        | 1188580      |\n    | 3801 | San Antonio  | USA           | Texas        | 1144646      |\n    +------+--------------+---------------+--------------+--------------+\n    SELECT 9\n    Time: 0.003s\n\n\nExit out of pgcli session with ``Ctrl + D`` and find the query results:\n\n::\n\n    someone@localhost:world>\n    Goodbye!\n    9 rows affected.\n    Out[2]:\n    [(3793, u'New York', u'USA', u'New York', 8008278),\n     (3794, u'Los Angeles', u'USA', u'California', 3694820),\n     (3795, u'Chicago', u'USA', u'Illinois', 2896016),\n     (3796, u'Houston', u'USA', u'Texas', 1953631),\n     (3797, u'Philadelphia', u'USA', u'Pennsylvania', 1517550),\n     (3798, u'Phoenix', u'USA', u'Arizona', 1321045),\n     (3799, u'San Diego', u'USA', u'California', 1223400),\n     (3800, u'Dallas', u'USA', u'Texas', 1188580),\n     (3801, u'San Antonio', u'USA', u'Texas', 1144646)]\n\nThe results are available in special local variable ``_``, and can be assigned to a variable of your\nchoice:\n\n::\n\n    In [3]: my_result = _\n\nPgcli dropped support for Python<3.8 as of 4.0.0. If you need it, install ``pgcli <= 4.0.0``.\n\nThanks:\n-------\n\nA special thanks to `Jonathan Slenders <https://twitter.com/jonathan_s>`_ for\ncreating `Python Prompt Toolkit <http://github.com/jonathanslenders/python-prompt-toolkit>`_,\nwhich is quite literally the backbone library, that made this app possible.\nJonathan has also provided valuable feedback and support during the development\nof this app.\n\n`Click <http://click.pocoo.org/>`_ is used for command line option parsing\nand printing error messages.\n\nThanks to `psycopg <https://www.psycopg.org/>`_ for providing a rock solid\ninterface to Postgres database.\n\nThanks to all the beta testers and contributors for your time and patience. :)\n\n\n.. |Build Status| image:: https://github.com/dbcli/pgcli/actions/workflows/ci.yml/badge.svg?branch=main\n    :target: https://github.com/dbcli/pgcli/actions/workflows/ci.yml\n\n.. |CodeCov| image:: https://codecov.io/gh/dbcli/pgcli/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/dbcli/pgcli\n   :alt: Code coverage report\n\n.. |Landscape| image:: https://landscape.io/github/dbcli/pgcli/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/dbcli/pgcli/master\n   :alt: Code Health\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/pgcli.svg\n    :target: https://pypi.python.org/pypi/pgcli/\n    :alt: Latest Version\n\n.. |netlify| image:: https://api.netlify.com/api/v1/badges/3a0a14dd-776d-445d-804c-3dd74fe31c4e/deploy-status\n     :target: https://app.netlify.com/sites/pgcli/deploys\n     :alt: Netlify\n"
        },
        {
          "name": "RELEASES.md",
          "type": "blob",
          "size": 1.015625,
          "content": "Releasing pgcli\n---------------\n\nYou have been made the maintainer of `pgcli`? Congratulations! We have a release script to help you:\n\n```sh\n> python release.py --help\nUsage: release.py [options]\n\nOptions:\n  -h, --help           show this help message and exit\n  -c, --confirm-steps  Confirm every step. If the step is not confirmed, it\n                       will be skipped.\n  -d, --dry-run        Print out, but not actually run any steps.\n```\n\nThe script can be run with `-c` to confirm or skip steps. There's also a `--dry-run` option that only prints out the steps.\n\nTo release a new version of the package:\n\n* Create and merge a PR to bump the version in the changelog ([example PR](https://github.com/dbcli/pgcli/pull/1325)).\n* Pull `main` and bump the version number inside `pgcli/__init__.py`. Do not check in - the release script will do that.\n* Make sure you have the dev requirements installed: `pip install -r requirements-dev.txt -U --upgrade-strategy only-if-needed`.\n* Finally, run the release script: `python release.py`.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.8447265625,
          "content": "# vi: ft=vimwiki\n* [ ] Add coverage.\n* [ ] Refactor to sqlcompletion to consume the text from left to right and use a state machine to suggest cols or tables instead of relying on hacks.\n* [ ] Add a few more special commands. (\\l pattern, \\dp, \\ds, \\dy, \\z etc)\n* [ ] Refactor pgspecial.py to a class. \n* [ ] Show/hide docs for a statement using a keybinding.\n* [ ] Check how to add the name of the table before printing the table.\n* [ ] Add a new trigger for M-/ that does naive completion.\n* [ ] New Feature List - Write the current version to config file. At launch if the version has changed, display the changelog between the two versions.\n* [ ] Add a test for 'select * from custom.abc where custom.abc.' should suggest columns from abc.\n* [ ] pgexecute columns(), tables() etc can be just cursors instead of fetchall()\n* [ ] Add colorschemes in config file.\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 4.3173828125,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n# \n#\n\nVagrant.configure(2) do |config|\n\n  config.vm.synced_folder \".\", \"/pgcli\"\n\n  pgcli_version = ENV['version']\n  pgcli_description = \"Postgres CLI with autocompletion and syntax highlighting\"\n\n  config.vm.define \"debian\" do |debian|\n    debian.vm.box = \"bento/debian-10.8\"\n    debian.vm.provision \"shell\", inline: <<-SHELL\n    echo \"-> Building DEB on `lsb_release -d`\"\n    sudo apt-get update\n    sudo apt-get install -y libpq-dev python-dev python-setuptools rubygems\n    sudo apt install -y python3-pip\n    sudo pip3 install --no-cache-dir virtualenv virtualenv-tools3\n    sudo apt-get install -y ruby-dev\n    sudo apt-get install -y git\n    sudo apt-get install -y rpm librpmbuild8\n\n    sudo gem install fpm\n\n    echo \"-> Cleaning up old workspace\"\n    sudo rm -rf build\n    mkdir -p build/usr/share\n    virtualenv build/usr/share/pgcli\n    build/usr/share/pgcli/bin/pip install /pgcli\n\n    echo \"-> Cleaning Virtualenv\"\n    cd build/usr/share/pgcli\n    virtualenv-tools --update-path /usr/share/pgcli > /dev/null\n    cd /home/vagrant/\n\n    echo \"-> Removing compiled files\"\n    find build -iname '*.pyc' -delete\n    find build -iname '*.pyo' -delete\n\n    echo \"-> Creating PgCLI deb\"\n    sudo fpm -t deb -s dir -C build -n pgcli -v #{pgcli_version} \\\n        -a all \\\n        -d libpq-dev \\\n        -d python-dev \\\n        -p /pgcli/ \\\n        --after-install /pgcli/post-install \\\n        --after-remove /pgcli/post-remove \\\n        --url https://github.com/dbcli/pgcli \\\n        --description \"#{pgcli_description}\" \\\n        --license 'BSD'\n\n    SHELL\n  end\n\n  \n# This is considerably more messy than the debian section.  I had to go off-standard to update\n# some packages to get this to work.\n\n  config.vm.define \"centos\" do |centos|\n\n    centos.vm.box = \"bento/centos-7.9\"\n    centos.vm.box_version = \"202012.21.0\"\n    centos.vm.provision \"shell\", inline: <<-SHELL\n    #!/bin/bash\n    echo \"-> Building RPM on `hostnamectl | grep \"Operating System\"`\"\n    export PATH=/usr/local/rvm/gems/ruby-2.6.3/bin:/usr/local/rvm/gems/ruby-2.6.3@global/bin:/usr/local/rvm/rubies/ruby-2.6.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/rvm/bin:/root/bin\n    echo \"PATH -> \" $PATH\n\n#####\n### get base updates\n\n    sudo yum install -y rpm-build gcc postgresql-devel python-devel  python3-pip git python3-devel\n\n######\n### install FPM, which we need to install to get an up-to-date version of ruby, which we need for git\n\n    echo \"-> Get FPM installed\"\n    # import the necessary GPG keys\n    gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n    sudo gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n    # install RVM\n    sudo curl -sSL https://get.rvm.io | sudo bash -s stable\n    sudo usermod -aG rvm vagrant\n    sudo usermod -aG rvm root\n    sudo /usr/local/rvm/bin/rvm alias create default 2.6.3\n    source /etc/profile.d/rvm.sh\n    \n    # install a newer version of ruby.  centos7 only comes with ruby2.0.0, which isn't good enough for git.\n    sudo yum install -y ruby-devel\n    sudo /usr/local/rvm/bin/rvm install 2.6.3\n    \n    #\n    # yes,this gives an error about generating doc but we don't need the doc. \n\n    /usr/local/rvm/gems/ruby-2.6.3/wrappers/gem install fpm\n\n######\n\n    sudo pip3 install virtualenv virtualenv-tools3\n    echo \"-> Cleaning up old workspace\"\n    rm -rf build\n    mkdir -p build/usr/share\n    virtualenv build/usr/share/pgcli\n    build/usr/share/pgcli/bin/pip install /pgcli\n\n    echo \"-> Cleaning Virtualenv\"\n    cd build/usr/share/pgcli\n    virtualenv-tools --update-path /usr/share/pgcli > /dev/null\n    cd /home/vagrant/\n\n    echo \"-> Removing compiled files\"\n    find build -iname '*.pyc' -delete\n    find build -iname '*.pyo' -delete\n\n    cd /home/vagrant\n    echo \"-> Creating PgCLI RPM\"\n    /usr/local/rvm/gems/ruby-2.6.3/gems/fpm-1.12.0/bin/fpm -t rpm -s dir -C build -n pgcli -v #{pgcli_version} \\\n        -a all \\\n        -d postgresql-devel \\\n        -d python-devel \\\n        -p /pgcli/ \\\n        --after-install /pgcli/post-install \\\n        --after-remove /pgcli/post-remove \\\n        --url https://github.com/dbcli/pgcli \\\n        --description \"#{pgcli_description}\" \\\n        --license 'BSD'\n\n\n  SHELL\n\n\n  end\n\n\nend\n\n"
        },
        {
          "name": "changelog.rst",
          "type": "blob",
          "size": 47.615234375,
          "content": "Dev\n===\n\nFeatures\n--------\n* Add a `--ping` command line option; allows pgcli to replace `pg_isready`\n* Changed the packaging metadata from setup.py to pyproject.toml\n\nBug fixes:\n----------\n* Avoid raising `NameError` when exiting unsuccessfully in some cases\n\n4.1.0 (2024-03-09)\n==================\n\nFeatures:\n---------\n* Support `PGAPPNAME` as an environment variable and `--application-name` as a command line argument.\n* Add `verbose_errors` config and `\\v` special command which enable the\n  displaying of all Postgres error fields received.\n* Show Postgres notifications.\n* Support sqlparse 0.5.x\n* Add `--log-file [filename]` cli argument and `\\log-file [filename]` special commands to\n  log to an external file in addition to the normal output\n\nBug fixes:\n----------\n\n* Fix display of \"short host\" in prompt (with `\\h`) for IPv4 addresses ([issue 964](https://github.com/dbcli/pgcli/issues/964)).\n* Fix backwards display of NOTICEs from a Function ([issue 1443](https://github.com/dbcli/pgcli/issues/1443))\n* Fix psycopg errors when installing on Windows.  ([issue 1413](https://https://github.com/dbcli/pgcli/issues/1413))\n* Use a home-made function to display query duration instead of relying on a third-party library (the general behaviour does not change), which fixes the installation of `pgcli` on 32-bit architectures ([issue 1451](https://github.com/dbcli/pgcli/issues/1451))\n\n==================\n4.0.1 (2023-10-30)\n==================\n\nInternal:\n---------\n* Allow stable version of pendulum.\n\n==================\n4.0.0 (2023-10-27)\n==================\n\nFeatures:\n---------\n\n* Ask for confirmation when quitting cli while a transaction is ongoing.\n* New `destructive_statements_require_transaction` config option to refuse to execute a\n  destructive SQL statement if outside a transaction. This option is off by default.\n* Changed the `destructive_warning` config to be a list of commands that are considered\n  destructive. This would allow you to be warned on `create`, `grant`, or `insert` queries.\n* Destructive warnings will now include the alias dsn connection string name if provided (-D option).\n* pgcli.magic will now work with connection URLs that use TLS client certificates for authentication\n* Have config option to retry queries on operational errors like connections being lost.\n  Also prevents getting stuck in a retry loop.\n* Config option to not restart connection when cancelling a `destructive_warning` query. By default,\n  it will now not restart.\n* Config option to always run with a single connection.\n* Add comment explaining default LESS environment variable behavior and change example pager setting.\n* Added `\\echo` & `\\qecho` special commands. ([issue 1335](https://github.com/dbcli/pgcli/issues/1335)).\n\nBug fixes:\n----------\n\n* Fix `\\ev` not producing a correctly quoted \"schema\".\"view\"\n* Fix 'invalid connection option \"dsn\"' ([issue 1373](https://github.com/dbcli/pgcli/issues/1373)).\n* Fix explain mode when used with `expand`, `auto_expand`, or `--explain-vertical-output` ([issue 1393](https://github.com/dbcli/pgcli/issues/1393)).\n* Fix sql-insert format emits NULL as 'None' ([issue 1408](https://github.com/dbcli/pgcli/issues/1408)).\n* Improve check for prompt-toolkit 3.0.6 ([issue 1416](https://github.com/dbcli/pgcli/issues/1416)).\n* Allow specifying an `alias_map_file` in the config that will use\n  predetermined table aliases instead of generating aliases programmatically on\n  the fly\n* Fixed SQL error when there is a comment on the first line: ([issue 1403](https://github.com/dbcli/pgcli/issues/1403))\n* Fix wrong usage of prompt instead of confirm when confirm execution of destructive query\n\nInternal:\n---------\n\n* Drop support for Python 3.7 and add 3.12.\n\n3.5.0 (2022/09/15):\n===================\n\nFeatures:\n---------\n\n* New formatter is added to export query result to sql format (such as sql-insert, sql-update) like mycli.\n\nBug fixes:\n----------\n\n* Fix exception when retrieving password from keyring ([issue 1338](https://github.com/dbcli/pgcli/issues/1338)).\n* Fix using comments with special commands ([issue 1362](https://github.com/dbcli/pgcli/issues/1362)).\n* Small improvements to the Windows developer experience\n* Fix submitting queries in safe multiline mode ([1360](https://github.com/dbcli/pgcli/issues/1360)).\n\nInternal:\n---------\n\n* Port to psycopg3 (https://github.com/psycopg/psycopg).\n* Fix typos\n\n3.4.1 (2022/03/19)\n==================\n\nBug fixes:\n----------\n\n* Fix the bug with Redshift not displaying word count in status ([related issue](https://github.com/dbcli/pgcli/issues/1320)).\n* Show the error status for CSV output format.\n\n\n3.4.0 (2022/02/21)\n==================\n\nFeatures:\n---------\n\n* Add optional support for automatically creating an SSH tunnel to a machine with access to the remote database ([related issue](https://github.com/dbcli/pgcli/issues/459)).\n\n3.3.1 (2022/01/18)\n==================\n\nBug fixes:\n----------\n\n* Prompt for password when -W is provided even if there is a password in keychain. Fixes #1307.\n* Upgrade cli_helpers to 2.2.1\n\n3.3.0 (2022/01/11)\n==================\n\nFeatures:\n---------\n\n* Add `max_field_width` setting to config, to enable more control over field truncation ([related issue](https://github.com/dbcli/pgcli/issues/1250)).\n* Re-run last query via bare `\\watch`. (Thanks: `Saif Hakim`_)\n\nBug fixes:\n----------\n\n* Pin the version of pygments to prevent breaking change\n\n3.2.0\n=====\n\nRelease date: 2021/08/23\n\nFeatures:\n---------\n\n* Consider `update` queries destructive and issue a warning. Change\n  `destructive_warning` setting to `all|moderate|off`, vs `true|false`. (#1239)\n* Skip initial comment in .pg_session even if it doesn't start with '#'\n* Include functions from schemas in search_path. (`Amjith Ramanujam`_)\n* Easy way to show explain output under F5\n\nBug fixes:\n----------\n\n* Fix issue where `syntax_style` config value would not have any effect. (#1212)\n* Fix crash because of not found `InputMode.REPLACE_SINGLE` with prompt-toolkit < 3.0.6\n* Fix comments being lost in config when saving a named query. (#1240)\n* Fix IPython magic for ipython-sql >= 0.4.0\n* Fix pager not being used when output format is set to csv. (#1238)\n* Add function literals random, generate_series, generate_subscripts\n* Fix ANSI escape codes in first line make the cli choose expanded output incorrectly\n* Fix pgcli crashing with virtual `pgbouncer` database. (#1093)\n\n3.1.0\n=====\n\nFeatures:\n---------\n\n* Make the output more compact by removing the empty newline. (Thanks: `laixintao`_)\n* Add support for using [pspg](https://github.com/okbob/pspg) as a pager (#1102)\n* Update python version in Dockerfile\n* Support setting color for null, string, number, keyword value\n* Support Prompt Toolkit 2\n* Support sqlparse 0.4.x\n* Update functions, datatypes literals for auto-suggestion field\n* Add suggestion for schema in function auto-complete\n\nBug fixes:\n----------\n\n* Minor typo fixes in `pgclirc`. (Thanks: `anthonydb`_)\n* Fix for list index out of range when executing commands from a file (#1193). (Thanks: `Irina Truong`_)\n* Move from `humanize` to `pendulum` for displaying query durations (#1015)\n* More explicit error message when connecting using DSN alias and it is not found.\n\n3.0.0\n=====\n\nFeatures:\n---------\n\n* Add `__main__.py` file to execute pgcli as a package directly (#1123).\n* Add support for ANSI escape sequences for coloring the prompt (#1122).\n* Add support for partitioned tables (relkind \"p\").\n* Add support for `pg_service.conf` files\n* Add config option show_bottom_toolbar.\n\nBug fixes:\n----------\n\n* Fix warning raised for using `is not` to compare string literal\n* Close open connection in completion_refresher thread\n\nInternal:\n---------\n\n* Drop Python2.7, 3.4, 3.5 support. (Thanks: `laixintao`_)\n* Support Python3.8. (Thanks: `laixintao`_)\n* Fix dead link in development guide. (Thanks: `BrownShibaDog`_)\n* Upgrade python-prompt-toolkit to v3.0. (Thanks: `laixintao`_)\n\n\n2.2.0:\n======\n\nFeatures:\n---------\n\n* Add `\\\\G` as a terminator to sql statements that will show the results in expanded mode. This feature is copied from mycli. (Thanks: `Amjith Ramanujam`_)\n* Removed limit prompt and added automatic row limit on queries with no LIMIT clause (#1079) (Thanks: `Sebastian Janko`_)\n* Function argument completions now take account of table aliases (#1048). (Thanks: `Owen Stephens`_)\n\nBug fixes:\n----------\n\n* Error connecting to PostgreSQL 12beta1 (#1058). (Thanks: `Irina Truong`_ and `Amjith Ramanujam`_)\n* Empty query caused error message (#1019) (Thanks: `Sebastian Janko`_)\n* History navigation bindings in multiline queries (#1004) (Thanks: `Pedro Ferrari`_)\n* Can't connect to pgbouncer database (#1093). (Thanks: `Irina Truong`_)\n* Fix broken multi-line history search (#1031). (Thanks: `Owen Stephens`_)\n* Fix slow typing/movement when multi-line query ends in a semicolon (#994). (Thanks: `Owen Stephens`_)\n* Fix for PQconninfo not available in libpq < 9.3 (#1110). (Thanks: `Irina Truong`_)\n\nInternal:\n---------\n\n* Add optional but default squash merge request to PULL_REQUEST_TEMPLATE\n\n2.1.1\n=====\n\nBug fixes:\n----------\n* Escape switches to VI navigation mode when not canceling completion popup. (Thanks: `Nathan Verzemnieks`_)\n* Allow application_name to be overridden. (Thanks: `raylu`_)\n* Fix for \"no attribute KeyringLocked\" (#1040). (Thanks: `Irina Truong`_)\n* Pgcli no longer works with password containing spaces (#1043). (Thanks: `Irina Truong`_)\n* Load keyring only when keyring is enabled in the config file (#1041). (Thanks: `Zhaolong Zhu`_)\n* No longer depend on sqlparse as being less than 0.3.0 with the release of sqlparse 0.3.0. (Thanks: `VVelox`_)\n* Fix the broken support for pgservice . (Thanks: `Xavier Francisco`_)\n* Connecting using socket is broken in current master. (#1053). (Thanks: `Irina Truong`_)\n* Allow usage of newer versions of psycopg2 (Thanks: `Telmo \"Trooper\"`_)\n* Update README in alignment with the usage of newer versions of psycopg2 (Thanks: `Alexander Zawadzki`_)\n\nInternal:\n---------\n\n* Add python 3.7 to travis build matrix. (Thanks: `Irina Truong`_)\n* Apply `black` to code. (Thanks: `Irina Truong`_)\n\n2.1.0\n=====\n\nFeatures:\n---------\n\n* Keybindings for closing the autocomplete list. (Thanks: `easteregg`_)\n* Reconnect automatically when server closes connection. (Thanks: `Scott Brenstuhl`_)\n\nBug fixes:\n----------\n* Avoid error message on the server side if hstore extension is not installed in the current database (#991). (Thanks: `Marcin Cieślak`_)\n* All pexpect submodules have been moved into the pexpect package as of version 3.0. Use pexpect.TIMEOUT (Thanks: `Marcin Cieślak`_)\n* Resizing pgcli terminal kills the connection to postgres in python 2.7 (Thanks: `Amjith Ramanujam`_)\n* Fix crash retrieving server version with ``--single-connection``. (Thanks: `Irina Truong`_)\n* Cannot quit application without reconnecting to database (#1014). (Thanks: `Irina Truong`_)\n* Password authentication failed for user \"postgres\" when using non-default password (#1020). (Thanks: `Irina Truong`_)\n\nInternal:\n---------\n\n* (Fixup) Clean up and add behave logging. (Thanks: `Marcin Cieślak`_, `Dick Marinus`_)\n* Override VISUAL environment variable for behave tests. (Thanks: `Marcin Cieślak`_)\n* Remove build dir before running sdist, remove stray files from wheel distribution. (Thanks: `Dick Marinus`_)\n* Fix unit tests, unhashable formatted text since new python prompttoolkit  version. (Thanks: `Dick Marinus`_)\n\n2.0.2:\n======\n\nFeatures:\n---------\n\n* Allows passing the ``-u`` flag to specify a username. (Thanks: `Ignacio Campabadal`_)\n* Fix for lag in v2 (#979). (Thanks: `Irina Truong`_)\n* Support for multihost connection string that is convenient if you have postgres cluster. (Thanks: `Mikhail Elovskikh`_)\n\nInternal:\n---------\n\n* Added tests for special command completion. (Thanks: `Amjith Ramanujam`_)\n\n2.0.1:\n======\n\nBug fixes:\n----------\n\n* Tab press on an empty line increases the indentation instead of triggering\n  the auto-complete pop-up. (Thanks: `Artur Balabanov`_)\n* Fix for loading/saving named queries from provided config file (#938). (Thanks: `Daniel Egger`_)\n* Set default port in `connect_uri` when none is given. (Thanks: `Daniel Egger`_)\n* Fix for error listing databases (#951). (Thanks: `Irina Truong`_)\n* Enable Ctrl-Z to suspend the app (Thanks: `Amjith Ramanujam`_).\n* Fix StopIteration exception raised at runtime for Python 3.7 (Thanks: `Amjith Ramanujam`_).\n\nInternal:\n---------\n\n* Clean up and add behave logging. (Thanks: `Dick Marinus`_)\n* Require prompt_toolkit>=2.0.6. (Thanks: `Dick Marinus`_)\n* Improve development guide. (Thanks: `Ignacio Campabadal`_)\n\n2.0.0:\n======\n\n* Update to ``prompt-toolkit`` 2.0. (Thanks: `Jonathan Slenders`_, `Dick Marinus`_, `Irina Truong`_)\n\n1.11.0\n======\n\nFeatures:\n---------\n\n* Respect `\\pset pager on` and use pager when output is longer than terminal height (Thanks: `Max Rothman`_)\n\n1.10.3\n======\n\nBug fixes:\n----------\n\n* Adapt the query used to get functions metadata to PG11 (#919). (Thanks: `Lele Gaifax`_).\n* Fix for error retrieving version in Redshift (#922). (Thanks: `Irina Truong`_)\n* Fix for keyring not disabled properly (#920). (Thanks: `Irina Truong`_)\n\n1.10.2\n======\n\nFeatures:\n---------\n\n* Make `keyring` optional (Thanks: `Dick Marinus`_)\n\n1.10.1\n======\n\nBug fixes:\n----------\n\n* Fix for missing keyring. (Thanks: `Kenny Do`_)\n* Fix for \"-l\" Flag Throws Error (#909). (Thanks: `Irina Truong`_)\n\n1.10.0\n======\n\nFeatures:\n---------\n* Add quit commands to the completion menu. (Thanks: `Jason Ribeiro`_)\n* Add table formats to ``\\T`` completion. (Thanks: `Jason Ribeiro`_)\n* Support `\\\\ev``, ``\\ef`` (#754). (Thanks: `Catherine Devlin`_)\n* Add ``application_name`` to help identify pgcli connection to database (issue #868) (Thanks: `François Pietka`_)\n* Add `--user` option, duplicate of `--username`, the same cli option like `psql` (Thanks: `Alexandr Korsak`_)\n\nInternal changes:\n-----------------\n\n* Mark tests requiring a running database server as dbtest (Thanks: `Dick Marinus`_)\n* Add an is_special command flag to MetaQuery (Thanks: `Rishi Ramraj`_)\n* Ported Destructive Warning from mycli.\n* Refactor Destructive Warning behave tests (Thanks: `Dick Marinus`_)\n\nBug Fixes:\n----------\n* Disable pager when using \\watch (#837). (Thanks: `Jason Ribeiro`_)\n* Don't offer to reconnect when we can't change a param in realtime (#807). (Thanks: `Amjith Ramanujam`_ and `Saif Hakim`_)\n* Make keyring optional. (Thanks: `Dick Marinus`_)\n* Fix ipython magic connection (#891). (Thanks: `Irina Truong`_)\n* Fix not enough values to unpack. (Thanks: `Matthieu Guilbert`_)\n* Fix unbound local error when destructive_warning is false. (Thanks: `Matthieu Guilbert`_)\n* Render tab characters as 4 spaces instead of `^I`. (Thanks: `Artur Balabanov`_)\n\n1.9.1:\n======\n\nFeatures:\n---------\n\n* Change ``\\h`` format string in prompt to only return the first part of the hostname,\n  up to the first '.' character.  Add ``\\H`` that returns the entire hostname (#858).\n  (Thanks: `Andrew Kuchling`_)\n* Add Color of table by parameter. The color of table is function of syntax style\n\nInternal changes:\n-----------------\n\n* Add tests, AUTHORS and changelog.rst to release. (Thanks: `Dick Marinus`_)\n\nBug Fixes:\n----------\n* Fix broken pgcli --list command line option (#850). (Thanks: `Dmitry B`_)\n\n1.9.0\n=====\n\nFeatures:\n---------\n\n* manage pager by \\pset pager and add enable_pager to the config file (Thanks: `Frederic Aoustin`_).\n* Add support for `\\T` command to change format output. (Thanks: `Frederic Aoustin`_).\n* Add option list-dsn (Thanks: `Frederic Aoustin`_).\n\n\nInternal changes:\n-----------------\n\n* Removed support for Python 3.3. (Thanks: `Irina Truong`_)\n\n1.8.2\n=====\n\nFeatures:\n---------\n\n* Use other prompt (prompt_dsn) when connecting using --dsn parameter. (Thanks: `Marcin Sztolcman`_)\n* Include username into password prompt. (Thanks: `Bojan Delić`_)\n\nInternal changes:\n-----------------\n* Use temporary dir as config location in tests. (Thanks: `Dmitry B`_)\n* Fix errors in the ``tee`` test (#795 and #797). (Thanks: `Irina Truong`_)\n* Increase timeout for quitting pgcli. (Thanks: `Dick Marinus`_)\n\nBug Fixes:\n----------\n* Do NOT quote the database names in the completion menu (Thanks: `Amjith Ramanujam`_)\n* Fix error in ``unix_socket_directories`` (#805). (Thanks: `Irina Truong`_)\n* Fix the --list command line option tries to connect to 'personal' DB (#816). (Thanks: `Isank`_)\n\n1.8.1\n=====\n\nInternal changes:\n-----------------\n* Remove shebang and git execute permission from pgcli/main.py. (Thanks: `Dick Marinus`_)\n* Require cli_helpers 0.2.3 (fix #791). (Thanks: `Dick Marinus`_)\n\n1.8.0\n=====\n\nFeatures:\n---------\n\n* Add fish-style auto-suggestion from history. (Thanks: `Amjith Ramanujam`_)\n* Improved formatting of arrays in output (Thanks: `Joakim Koljonen`_)\n* Don't quote identifiers that are non-reserved keywords. (Thanks: `Joakim Koljonen`_)\n* Remove the ``...`` in the continuation prompt and use empty space instead. (Thanks: `Amjith Ramanujam`_)\n* Add \\conninfo and handle more parameters with \\c (issue #716) (Thanks: `François Pietka`_)\n\nInternal changes:\n-----------------\n* Preliminary work for a future change in outputting results that uses less memory. (Thanks: `Dick Marinus`_)\n* Remove import workaround for OrderedDict, required for python < 2.7. (Thanks: `Andrew Speed`_)\n* Use less memory when formatting results for display (Thanks: `Dick Marinus`_).\n* Port auto_vertical feature test from mycli to pgcli. (Thanks: `Dick Marinus`_)\n* Drop wcwidth dependency (Thanks: `Dick Marinus`_)\n\nBug Fixes:\n----------\n\n* Fix the way we get host when using DSN (issue #765) (Thanks: `François Pietka`_)\n* Add missing keyword COLUMN after DROP (issue #769) (Thanks: `François Pietka`_)\n* Don't include arguments in function suggestions for backslash commands (Thanks: `Joakim Koljonen`_)\n* Optionally use POSTGRES_USER, POSTGRES_HOST POSTGRES_PASSWORD from environment (Thanks: `Dick Marinus`_)\n\n1.7.0\n=====\n\n* Refresh completions after `COMMIT` or `ROLLBACK`. (Thanks: `Irina Truong`_)\n* Fixed DSN aliases not being read from custom pgclirc (issue #717). (Thanks: `Irina Truong`_).\n* Use dbcli's Homebrew tap for installing pgcli on macOS (issue #718) (Thanks: `Thomas Roten`_).\n* Only set `LESS` environment variable if it's unset. (Thanks: `Irina Truong`_)\n* Quote schema in `SET SCHEMA` statement (issue #469) (Thanks: `Irina Truong`_)\n* Include arguments in function suggestions (Thanks: `Joakim Koljonen`_)\n* Use CLI Helpers for pretty printing query results (Thanks: `Thomas Roten`_).\n* Skip serial columns when expanding * for `INSERT INTO foo(*` (Thanks: `Joakim Koljonen`_).\n* Command line option to list databases (issue #206) (Thanks: `François Pietka`_)\n\n1.6.0\n=====\n\nFeatures:\n---------\n* Add time option for prompt (Thanks: `Gustavo Castro`_)\n* Suggest objects from all schemas (not just those in search_path) (Thanks: `Joakim Koljonen`_)\n* Casing for column headers (Thanks: `Joakim Koljonen`_)\n* Allow configurable character to be used for multi-line query continuations. (Thanks: `Owen Stephens`_)\n* Completions after ORDER BY and DISTINCT now take account of table aliases. (Thanks: `Owen Stephens`_)\n* Narrow keyword candidates based on previous keyword. (Thanks: `Étienne Bersac`_)\n* Opening an external editor will edit the last-run query. (Thanks: `Thomas Roten`_)\n* Support query options in postgres URIs such as ?sslcert=foo.pem (Thanks: `Alexander Schmolck`_)\n\nBug fixes:\n----------\n* Fixed external editor bug (issue #668). (Thanks: `Irina Truong`_).\n* Standardize command line option names. (Thanks: `Russell Davies`_)\n* Improve handling of ``lock_not_available`` error (issue #700). (Thanks: `Jackson Popkin <https://github.com/jdpopkin>`_)\n* Fixed user option precedence (issue #697). (Thanks: `Irina Truong`_).\n\nInternal changes:\n-----------------\n* Run pep8 checks in travis (Thanks: `Irina Truong`_).\n* Add pager wrapper for behave tests (Thanks: `Dick Marinus`_).\n* Behave quit pgcli nicely (Thanks: `Dick Marinus`_).\n* Behave test source command (Thanks: `Dick Marinus`_).\n* Behave fix clean up. (Thanks: `Dick Marinus`_).\n* Test using behave the tee command (Thanks: `Dick Marinus`_).\n* Behave remove boiler plate code (Thanks: `Dick Marinus`_).\n* Behave fix pgspecial update (Thanks: `Dick Marinus`_).\n* Add behave to tox (Thanks: `Dick Marinus`_).\n\n1.5.1\n=====\n\nFeatures:\n---------\n* Better suggestions when editing functions (Thanks: `Joakim Koljonen`_)\n* Command line option for ``--less-chatty``. (Thanks: `tk`_)\n* Added ``MATERIALIZED VIEW`` keywords. (Thanks: `Joakim Koljonen`_).\n\nBug fixes:\n----------\n\n* Support unicode chars in expanded mode. (Thanks: `Amjith Ramanujam`_)\n* Fixed \"set_session cannot be used inside a transaction\" when using dsn. (Thanks: `Irina Truong`_).\n\n1.5.0\n=====\n\nFeatures:\n---------\n* Upgraded pgspecial to 1.7.0. (See `pgspecial changelog <https://github.com/dbcli/pgspecial/blob/master/changelog.rst>`_ for list of fixes)\n* Add a new config setting to allow expandable mode (Thanks: `Jonathan Boudreau <https://github.com/AGhost-7>`_)\n* Make pgcli prompt width short when the prompt is too long (Thanks: `Jonathan Virga <https://github.com/jnth>`_)\n* Add additional completion for ``ALTER`` keyword (Thanks: `Darik Gamble`_)\n* Make the menu size configurable. (Thanks `Darik Gamble`_)\n\nBug Fixes:\n----------\n* Handle more connection failure cases. (Thanks: `Amjith Ramanujam`_)\n* Fix the connection failure issues with latest psycopg2. (Thanks: `Amjith Ramanujam`_)\n\nInternal Changes:\n-----------------\n\n* Add testing for Python 3.5 and 3.6. (Thanks: `Amjith Ramanujam`_)\n\n1.4.0\n=====\n\nFeatures:\n---------\n\n* Search table suggestions using initialisms. (Thanks: `Joakim Koljonen`_).\n* Support for table-qualifying column suggestions. (Thanks: `Joakim Koljonen`_).\n* Display transaction status in the toolbar. (Thanks: `Joakim Koljonen`_).\n* Display vi mode in the toolbar. (Thanks: `Joakim Koljonen`_).\n* Added --prompt option. (Thanks: `Irina Truong`_).\n\nBug Fixes:\n----------\n\n* Fix scoping for columns from CTEs. (Thanks: `Joakim Koljonen`_)\n* Fix crash after `with`. (Thanks: `Joakim Koljonen`_).\n* Fix issue #603 (`\\i` raises a TypeError). (Thanks: `Lele Gaifax`_).\n\n\nInternal Changes:\n-----------------\n\n* Set default data_formatting to nothing. (Thanks: `Amjith Ramanujam`_).\n* Increased minimum prompt_toolkit requirement to 1.0.9. (Thanks: `Irina Truong`_).\n\n\n1.3.1\n=====\n\nBug Fixes:\n----------\n* Fix a crashing bug due to sqlparse upgrade. (Thanks: `Darik Gamble`_)\n\n\n1.3.0\n=====\n\nIMPORTANT: Python 2.6 is not officially supported anymore.\n\nFeatures:\n---------\n* Add delimiters to displayed numbers. This can be configured via the config file. (Thanks: `Sergii`_).\n* Fix broken 'SHOW ALL' in redshift. (Thanks: `Manuel Barkhau`_).\n* Support configuring keyword casing preferences. (Thanks: `Darik Gamble`_).\n* Add a new multi_line_mode option in config file. The values can be `psql` or `safe`. (Thanks: `Joakim Koljonen`_)\n  Setting ``multi_line_mode = safe`` will make sure that a query will only be executed when Alt+Enter is pressed.\n\nBug Fixes:\n----------\n* Fix crash bug with leading parenthesis. (Thanks: `Joakim Koljonen`_).\n* Remove cumulative addition of timing data. (Thanks: `Amjith Ramanujam`_).\n* Handle unrecognized keywords gracefully. (Thanks: `Darik Gamble`_)\n* Use raw strings in regex specifiers. This preemptively fixes a crash in Python 3.6. (Thanks `Lele Gaifax`_)\n\nInternal Changes:\n-----------------\n* Set sqlparse version dependency to >0.2.0, <0.3.0. (Thanks: `Amjith Ramanujam`_).\n* XDG_CONFIG_HOME support for config file location. (Thanks: `Fabien Meghazi`_).\n* Remove Python 2.6 from travis test suite. (Thanks: `Amjith Ramanujam`_)\n\n1.2.0\n=====\n\nFeatures:\n---------\n\n* Add more specifiers to pgcli prompt. (Thanks: `Julien Rouhaud`_).\n   ``\\p`` for port info ``\\#`` for super user and ``\\i`` for pid.\n* Add `\\watch` command to periodically execute a command. (Thanks: `Stuart Quin`_).\n    ``> SELECT * FROM django_migrations; \\watch 1  /* Runs the command every second */``\n* Add command-line option --single-connection to prevent pgcli from using multiple connections. (Thanks: `Joakim Koljonen`_).\n* Add priority to the suggestions to sort based on relevance. (Thanks: `Joakim Koljonen`_).\n* Configurable null format via the config file. (Thanks: `Adrian Dries`_).\n* Add support for CTE aware auto-completion. (Thanks: `Darik Gamble`_).\n* Add host and user information to default pgcli prompt. (Thanks: `Lim H`_).\n* Better scoping for tables in insert statements to improve suggestions. (Thanks: `Joakim Koljonen`_).\n\nBug Fixes:\n----------\n\n* Do not install setproctitle on cygwin. (Thanks: `Janus Troelsen`_).\n* Work around sqlparse crashing after AS keyword. (Thanks: `Joakim Koljonen`_).\n* Fix a crashing bug with named queries. (Thanks: `Joakim Koljonen`_).\n* Replace  timestampz alias since AWS Redshift does not support it. (Thanks: `Tahir Butt`_).\n* Prevent pgcli from hanging indefinitely when Postgres instance is not running. (Thanks: `Darik Gamble`_)\n\nInternal Changes:\n-----------------\n\n* Upgrade to sqlparse-0.2.0. (Thanks: `Tiziano Müller`_).\n* Upgrade to pgspecial 1.6.0. (Thanks: `Stuart Quin`_).\n\n\n1.1.0\n=====\n\nFeatures:\n---------\n\n* Add support for ``\\db`` command. (Thanks: `Irina Truong`_)\n\nBugs:\n-----\n\n* Fix the crash at startup while parsing the postgres url with port number. (Thanks: `Eric Wald`_)\n* Fix the crash with Redshift databases. (Thanks: `Darik Gamble`_)\n\nInternal Changes:\n-----------------\n\n* Upgrade pgspecial to 1.5.0 and above.\n\n1.0.0\n=====\n\nFeatures:\n---------\n\n* Upgrade to prompt-toolkit 1.0.0. (Thanks: `Jonathan Slenders`_).\n* Add support for `\\o` command to redirect query output to a file. (Thanks: `Tim Sanders`_).\n* Add `\\i` path completion. (Thanks: `Anthony Lai`_).\n* Connect to a dsn saved in config file. (Thanks: `Rodrigo Ramírez Norambuena`_).\n* Upgrade sqlparse requirement to version 0.1.19. (Thanks: `Fernando L. Canizo`_).\n* Add timestamptz to DATE custom extension. (Thanks: `Fernando Mora`_).\n* Ensure target dir exists when copying config. (Thanks: `David Szotten`_).\n* Handle dates that fall in the B.C. range. (Thanks: `Stuart Quin`_).\n* Pager is selected from config file or else from environment variable. (Thanks: `Fernando Mora`_).\n* Add support for Amazon Redshift. (Thanks: `Timothy Cleaver`_).\n* Add support for Postgres 8.x. (Thanks: `Timothy Cleaver`_ and `Darik Gamble`_)\n* Don't error when completing parameter-less functions. (Thanks: `David Szotten`_).\n* Concat and return all available notices. (Thanks: `Stuart Quin`_).\n* Handle unicode in record type. (Thanks: `Amjith Ramanujam`_).\n* Added humanized time display. Connect #396. (Thanks: `Irina Truong`_).\n* Add EXPLAIN keyword to the completion list. (Thanks: `Amjith Ramanujam`_).\n* Added sdist upload to release script. (Thanks: `Irina Truong`_).\n* Sort completions based on most recently used. (Thanks: `Darik Gamble`)\n* Expand '*' into column list during completion. This can be triggered by hitting `<tab>` after the '*' character in the sql while typing. (Thanks: `Joakim Koljonen`_)\n* Add a limit to the warning about too many rows. This is controlled by a new config value in ~/.config/pgcli/config. (Thanks: `Anže Pečar`_)\n* Improved argument list in function parameter completions. (Thanks: `Joakim Koljonen`_)\n* Column suggestions after the COLUMN keyword. (Thanks: `Darik Gamble`_)\n* Filter out trigger implemented functions from the suggestion list. (Thanks: `Daniel Rocco`_)\n* State of the art JOIN clause completions that suggest entire conditions. (Thanks: `Joakim Koljonen`_)\n* Suggest fully formed JOIN clauses based on Foreign Key relations. (Thanks: `Joakim Koljonen`_)\n* Add support for `\\dx` meta command to list the installed extensions. (Thanks: `Darik Gamble`_)\n* Add support for `\\copy` command. (Thanks: `Catherine Devlin`_)\n\nBugs:\n-----\n\n* Fix bug where config writing would leave a '~' dir. (Thanks: `James Munson`_).\n* Fix auto-completion breaking for table names with caps. (Thanks: `Anthony Lai`_).\n* Fix lexical ordering bug. (Thanks: `Anthony Lai`_).\n* Use lexical order to break ties when fuzzy matching. (Thanks: `Daniel Rocco`_).\n* Fix the bug in auto-expand mode when there are no rows to display. (Thanks: `Amjith Ramanujam`_).\n* Fix broken `\\i` after #395. (Thanks: `David Szotten`_).\n* Fix multi-way joins in auto-completion. (Thanks: `Darik Gamble`_)\n* Display null values as <null> in expanded output. (Thanks: `Amjith Ramanujam`_).\n* Robust support for Postgres version less than 9.x. (Thanks: `Darik Gamble`_)\n\nInternal Changes:\n-----------------\n\n* Update config file location in README. (Thanks: `Ari Summer`_).\n* Explicitly add wcwidth as a dependency. (Thanks: `Amjith Ramanujam`_).\n* Add tests for the format_output. (Thanks: `Amjith Ramanujam`_).\n* Lots of tests for pgcompleter. (Thanks: `Darik Gamble`_).\n* Update pgspecial dependency to 1.4.0.\n\n\n0.20.1\n======\n\nBug Fixes:\n----------\n* Fixed logging in Windows by switching the location of log and history file based on OS. (Thanks: Amjith, `Darik Gamble`_, `Irina Truong`_).\n\n0.20.0\n======\n\nFeatures:\n---------\n* Perform auto-completion refresh in background. (Thanks: Amjith, `Darik Gamble`_, `Irina Truong`_).\n  When the auto-completion entries are refreshed, the update now happens in a\n  background thread. This means large databases with thousands of tables are\n  handled without blocking.\n* Add ``CONCURRENTLY`` to keyword completion. (Thanks: `Johannes Hoff`_).\n* Add support for ``\\h`` command. (Thanks: `Stuart Quin`_).\n  This is a huge deal. Users can now get help on an SQL command by typing:\n  ``\\h COMMAND_NAME`` in the pgcli prompt.\n* Add support for ``\\x auto``. (Thanks: `Stuart Quin`_).\n  ``\\\\x auto`` will automatically switch to expanded mode if the output is wider\n  than the display window.\n* Don't hide functions from pg_catalog. (Thanks: `Darik Gamble`_).\n* Suggest set-returning functions as tables. (Thanks: `Darik Gamble`_).\n  Functions that return table like results will now be suggested in places of tables.\n* Suggest fields from functions used as tables. (Thanks: `Darik Gamble`_).\n* Using ``pgspecial`` as a separate module. (Thanks: `Irina Truong`_).\n* Make \"enter\" key behave as \"tab\" key when the completion menu is displayed. (Thanks: `Matheus Rosa`_).\n* Support different error-handling options when running multiple queries. (Thanks: `Darik Gamble`_).\n  When ``on_error = STOP`` in the config file, pgcli will abort execution if one of the queries results in an error.\n* Hide the password displayed in the process name in ``ps``. (Thanks: `Stuart Quin`_)\n\nBug Fixes:\n----------\n* Fix the ordering bug in `\\\\d+` display, this bug was displaying the wrong table name in the reference. (Thanks: `Tamas Boros`_).\n* Only show expanded layout if valid list of headers provided. (Thanks: `Stuart Quin`_).\n* Fix suggestions in compound join clauses. (Thanks: `Darik Gamble`_).\n* Fix completion refresh in multiple query scenario. (Thanks: `Darik Gamble`_).\n* Fix the broken timing information.\n* Fix the removal of whitespaces in the output. (Thanks: `Jacek Wielemborek`_)\n* Fix PyPI badge. (Thanks: `Artur Dryomov`_).\n\nImprovements:\n-------------\n* Move config file to `~/.config/pgcli/config` instead of `~/.pgclirc` (Thanks: `inkn`_).\n* Move literal definitions to standalone JSON files. (Thanks: `Darik Gamble`_).\n\nInternal Changes:\n-----------------\n* Improvements to integration tests to make it more robust. (Thanks: `Irina Truong`_).\n\n0.19.2\n======\n\nFeatures:\n---------\n\n* Autocompletion for database name in \\c and \\connect. (Thanks: `Darik Gamble`_).\n* Improved multiline query support by correctly handling open quotes. (Thanks: `Darik Gamble`_).\n* Added \\pager command.\n* Enhanced \\i to run multiple queries and display the results for each of them\n* Added keywords to suggestions after WHERE clause.\n* Enabled autocompletion in named queries. (Thanks: `Irina Truong`_).\n* Path to .pgclirc can be specified in command line. (Thanks: `Irina Truong`_).\n* Added support for pg_service_conf file. (Thanks: `Irina Truong`_).\n* Added custom styles. (Contributor: `Darik Gamble`_).\n\nInternal Changes:\n-----------------\n\n* More completer test cases. (Thanks: `Darik Gamble`_).\n* Updated sqlparse version from 0.1.14 to 0.1.16. (Thanks: `Darik Gamble`_).\n* Upgraded to prompt_toolkit 0.46. (Thanks: `Jonathan Slenders`_).\n\nBugFixes:\n---------\n* Fixed the completer crashing on invalid SQL. (Thanks: `Darik Gamble`_).\n* Fixed unicode issues, updated tests and fixed broken tests.\n\n0.19.1\n======\n\nBugFixes:\n---------\n\n* Fix an autocompletion bug that was crashing the completion engine when unknown keyword is entered. (Thanks: `Darik Gamble`_)\n\n0.19.0\n======\n\nFeatures:\n---------\n\n* Wider completion menus can be enabled via the config file. (Thanks: `Jonathan Slenders`_)\n\n  Open the config file (~/.pgclirc) and check if you have\n  ``wider_completion_menu`` option available. If not add it in and set it to\n  ``True``.\n\n* Completion menu now has metadata information such as schema, table, column, view, etc., next to the suggestions. (Thanks: `Darik Gamble`_)\n* Customizable history file location via config file. (Thanks: `Çağatay Yüksel`_)\n\n  Add this line to your config file (~/.pgclirc) to customize where to store the history file.\n\n::\n\n  history_file = /path/to/history/file\n\n* Add support for running queries from a file using ``\\i`` special command. (Thanks: `Michael Kaminsky`_)\n\nBugFixes:\n---------\n\n* Always use utf-8 for database encoding regardless of the default encoding used by the database.\n* Fix for None dereference on ``\\d schemaname.`` with sequence. (Thanks: `Nathan Jhaveri`_)\n* Fix a crashing bug in the autocompletion engine for some ``JOIN`` queries.\n* Handle KeyboardInterrupt in pager and not quit pgcli as a consequence.\n\nInternal Changes:\n-----------------\n\n* Added more behaviorial tests (Thanks: `Irina Truong`_)\n* Added code coverage to the tests. (Thanks: `Irina Truong`_)\n* Run behaviorial tests as part of TravisCI (Thanks: `Irina Truong`_)\n* Upgraded prompt_toolkit version to 0.45 (Thanks: `Jonathan Slenders`_)\n* Update the minimum required version of click to 4.1.\n\n0.18.0\n======\n\nFeatures:\n---------\n\n* Add fuzzy matching for the table names and column names.\n\n  Matching very long table/column names are now easier with fuzzy matching. The\n  fuzzy match works like the fuzzy open in SublimeText or Vim's Ctrl-P plugin.\n\n  eg: Typing ``djmv`` will match `django_migration_views` since it is able to\n  match parts of the input to the full table name.\n\n* Change the timing information to seconds.\n\n  The ``Command Time`` and ``Format Time`` are now displayed in seconds instead\n  of a unitless number displayed in scientific notation.\n\n* Support for named queries (favorite queries). (Thanks: `Brett Atoms`_)\n\n  Frequently typed queries can now be saved and recalled using a name using\n  newly added special commands (``\\n[+]``, ``\\ns``, ``\\nd``).\n\n  eg:\n\n::\n\n    # Save a query\n    pgcli> \\ns simple select * from foo\n    saved\n\n    # List all saved queries\n    pgcli> \\n+\n\n    # Execute a saved query\n    pgcli> \\n simple\n\n    # Delete a saved query\n    pgcli> \\nd simple\n\n* Pasting queries into the pgcli repl is orders of magnitude faster. (Thanks: `Jonathan Slenders`_)\n\n* Add support for PGPASSWORD environment variable to pass the password for the\n  postgres database. (Thanks: `Irina Truong`_)\n\n* Add the ability to manually refresh autocompletions by typing ``\\#`` or\n  ``\\refresh``. This is useful if the database was updated by an external means\n  and you'd like to refresh the auto-completions to pick up the new change.\n\nBug Fixes:\n----------\n\n* Fix an error when running ``\\d table_name`` when running on a table with rules. (Thanks: `Ali Kargın`_)\n* Fix a pgcli crash when entering non-ascii characters in Windows. (Thanks: `Darik Gamble`_, `Jonathan Slenders`_)\n* Faster rendering of expanded mode output by making the horizontal separator a fixed length string.\n* Completion suggestions for the ``\\c`` command are not auto-escaped by default.\n\nInternal Changes:\n-----------------\n\n* Complete refactor of handling the back-slash commands.\n* Upgrade prompt_toolkit to 0.42. (Thanks: `Jonathan Slenders`_)\n* Change the config file management to use ConfigObj.(Thanks: `Brett Atoms`_)\n* Add integration tests using ``behave``. (Thanks: `Irina Truong`_)\n\n0.17.0\n======\n\nFeatures:\n---------\n\n* Add support for auto-completing view names. (Thanks: `Darik Gamble`_)\n* Add support for building RPM and DEB packages. (Thanks: dp_)\n* Add subsequence matching for completion. (Thanks: `Daniel Rocco`_)\n  Previously completions only matched a table name if it started with the\n  partially typed word. Now completions will match even if the partially typed\n  word is in the middle of a suggestion.\n  eg: When you type 'mig', 'django_migrations' will be suggested.\n* Completion for built-in tables and temporary tables are suggested after entering a prefix of ``pg_``. (Thanks: `Darik Gamble`_)\n* Add place holder doc strings for special commands that are planned for implementation. (Thanks: `Irina Truong`_)\n* Updated version of prompt_toolkit, now matching braces are highlighted. (Thanks: `Jonathan Slenders`_)\n* Added support of ``\\\\e`` command. Queries can be edited in an external editor. (Thanks: `Irina Truong`_)\n  eg: When you type ``SELECT * FROM \\e`` it will be opened in an external editor.\n* Add special command ``\\dT`` to show datatypes. (Thanks: `Darik Gamble`_)\n* Add auto-completion support for datatypes in CREATE, SELECT etc. (Thanks: `Darik Gamble`_)\n* Improve the auto-completion in WHERE clause with logical operators. (Thanks: `Darik Gamble`_)\n*\n\nBug Fixes:\n----------\n\n* Fix the table formatting while printing multi-byte characters (Chinese, Japanese etc). (Thanks: `蔡佳男`_)\n* Fix a crash when pg_catalog was present in search path. (Thanks: `Darik Gamble`_)\n* Fixed a bug that broke `\\\\e` when prompt_tookit was updated. (Thanks: `François Pietka`_)\n* Fix the display of triggers as shown in the ``\\d`` output. (Thanks: `Dimitar Roustchev`_)\n* Fix broken auto-completion for INNER JOIN, LEFT JOIN etc. (Thanks: `Darik Gamble`_)\n* Fix incorrect super() calls in pgbuffer, pgtoolbar and pgcompleter. No change in functionality but protects against future problems. (Thanks: `Daniel Rocco`_)\n* Add missing schema completion for CREATE and DROP statements. (Thanks: `Darik Gamble`_)\n* Minor fixes around cursor cleanup.\n\n0.16.3\n======\n\nBug Fixes:\n----------\n* Add more SQL keywords for auto-complete suggestion.\n* Messages raised as part of stored procedures are no longer ignored.\n* Use postgres flavored syntax highlighting instead of generic ANSI SQL.\n\n0.16.2\n======\n\nBug Fixes:\n----------\n* Fix a bug where the schema qualifier was ignored by the auto-completion.\n  As a result the suggestions for tables vs functions are cleaner. (Thanks: `Darik Gamble`_)\n* Remove scientific notation when formatting large numbers. (Thanks: `Daniel Rocco`_)\n* Add the FUNCTION keyword to auto-completion.\n* Display NULL values as <null> instead of empty strings.\n* Fix the completion refresh when ``\\connect`` is executed.\n\n0.16.1\n======\n\nBug Fixes:\n----------\n* Fix unicode issues with hstore.\n* Fix a silent error when database is changed using \\\\c.\n\n0.16.0\n======\n\nFeatures:\n---------\n* Add \\ds special command to show sequences.\n* Add Vi mode for keybindings. This can be enabled by adding 'vi = True' in ~/.pgclirc. (Thanks: `Jay Zeng`_)\n* Add a -v/--version flag to pgcli.\n* Add completion for TEMPLATE keyword and smart-completion for\n  'CREATE DATABASE blah WITH TEMPLATE <tab>'. (Thanks: `Daniel Rocco`_)\n* Add custom decoders to json/jsonb to emulate the behavior of psql. This\n  removes the unicode prefix (eg: u'Éowyn') in the output. (Thanks: `Daniel Rocco`_)\n* Add \\df special command to show functions. (Thanks: `Darik Gamble`_)\n* Make suggestions for special commands smarter. eg: \\dn - only suggests schemas. (Thanks: `Darik Gamble`_)\n* Print out the version and other meta info about pgcli at startup.\n\nBug Fixes:\n----------\n* Fix a rare crash caused by adding new schemas to a database. (Thanks: `Darik Gamble`_)\n* Make \\dt command honor the explicit schema specified in the arg. (Thanks: `Darik Gamble`_)\n* Print BIGSERIAL type as Integer instead of Float.\n* Show completions for special commands at the beginning of a statement. (Thanks: `Daniel Rocco`_)\n* Allow special commands to work in a multi-statement case where multiple sql\n  statements are separated by semi-colon in the same line.\n\n0.15.4\n======\n* Dummy version to replace accidental PyPI entry deletion.\n\n0.15.3\n======\n* Override the LESS options completely instead of appending to it.\n\n0.15.2\n======\n* Revert back to using psycopg2 as the postgres adapter. psycopg2cffi fails for some tests in Python 3.\n\n0.15.0\n======\n\nFeatures:\n---------\n* Add syntax color styles to config.\n* Add auto-completion for COPY statements.\n* Change Postgres adapter to psycopg2cffi, to make it PyPy compatible.\n  Now pgcli can be run by PyPy.\n\nBug Fixes:\n----------\n* Treat boolean values as strings instead of ints.\n* Make \\di, \\dv and \\dt to be schema aware. (Thanks: `Darik Gamble`_)\n* Make column name display unicode compatible.\n\n0.14.0\n======\n\nFeatures:\n---------\n* Add alias completion support to ON keyword. (Thanks: `Irina Truong`_)\n* Add LIMIT keyword to completion.\n* Auto-completion for Postgres schemas. (Thanks: `Darik Gamble`_)\n* Better unicode handling for datatypes, dbname and roles.\n* Add \\timing command to time the sql commands.\n  This can be set via config file (~/.pgclirc) using `timing = True`.\n* Add different table styles for displaying output.\n  This can be changed via config file (~/.pgclirc) using `table_format = fancy_grid`.\n* Add confirmation before printing results that have more than 1000 rows.\n\nBug Fixes:\n----------\n\n* Performance improvements to expanded view display (\\x).\n* Cast bytea files to text while displaying. (Thanks: `Daniel Rocco`_)\n* Added a list of reserved words that should be auto-escaped.\n* Auto-completion is now case-insensitive.\n* Fix the broken completion for multiple sql statements. (Thanks: `Darik Gamble`_)\n\n0.13.0\n======\n\nFeatures:\n---------\n\n* Add -d/--dbname option to the commandline.\n  eg: pgcli -d database\n* Add the username as an argument after the database.\n  eg: pgcli dbname user\n\nBug Fixes:\n----------\n* Fix the crash when \\c fails.\n* Fix the error thrown by \\d when triggers are present.\n* Fix broken behavior on \\?. (Thanks: `Darik Gamble`_)\n\n0.12.0\n======\n\nFeatures:\n---------\n\n* Upgrade to prompt_toolkit version 0.26 (Thanks: https://github.com/macobo)\n  * Adds Ctrl-left/right to move the cursor one word left/right respectively.\n  * Internal API changes.\n* IPython integration through `ipython-sql`_ (Thanks: `Darik Gamble`_)\n  * Add an ipython magic extension to embed pgcli inside ipython.\n  * Results from a pgcli query are sent back to ipython.\n* Multiple sql statements in the same line separated by semi-colon. (Thanks: https://github.com/macobo)\n\n.. _`ipython-sql`: https://github.com/catherinedevlin/ipython-sql\n\nBug Fixes:\n----------\n\n* Fix 'message' attribute not found exception in Python 3. (Thanks: https://github.com/GMLudo)\n* Use the database username as the database name instead of defaulting to OS username. (Thanks: https://github.com/fpietka)\n* Auto-completion for auto-escaped column/table names.\n* Fix i-reverse-search to work in prompt_toolkit version 0.26.\n\n0.11.0\n======\n\nFeatures:\n---------\n\n* Add \\dn command. (Thanks: https://github.com/CyberDem0n)\n* Add \\x command. (Thanks: https://github.com/stuartquin)\n* Auto-escape special column/table names. (Thanks: https://github.com/qwesda)\n* Cancel a command using Ctrl+C. (Thanks: https://github.com/macobo)\n* Faster startup by reading all columns and tables in a single query. (Thanks: https://github.com/macobo)\n* Improved psql compliance with env vars and password prompting. (Thanks: `Darik Gamble`_)\n* Pressing Alt-Enter will introduce a line break. This is a way to break up the query into multiple lines without switching to multi-line mode. (Thanks: https://github.com/pabloab).\n\nBug Fixes:\n----------\n* Fix the broken behavior of \\d+. (Thanks: https://github.com/macobo)\n* Fix a crash during auto-completion. (Thanks: https://github.com/Erethon)\n* Avoid losing pre_run_callables on error in editing.  (Thanks: https://github.com/catherinedevlin)\n\nImprovements:\n-------------\n* Faster test runs on TravisCI. (Thanks: https://github.com/macobo)\n* Integration tests with Postgres!! (Thanks: https://github.com/macobo)\n\n.. _`Amjith Ramanujam`: https://blog.amjith.com\n.. _`Andrew Kuchling`: https://github.com/akuchling\n.. _`Darik Gamble`: https://github.com/darikg\n.. _`Daniel Rocco`: https://github.com/drocco007\n.. _`Jay Zeng`:  https://github.com/jayzeng\n.. _`蔡佳男`: https://github.com/xalley\n.. _dp: https://github.com/ceocoder\n.. _`Jonathan Slenders`: https://github.com/jonathanslenders\n.. _`Dimitar Roustchev`: https://github.com/droustchev\n.. _`François Pietka`: https://github.com/fpietka\n.. _`Ali Kargın`: https://github.com/sancopanco\n.. _`Brett Atoms`: https://github.com/brettatoms\n.. _`Nathan Jhaveri`: https://github.com/nathanjhaveri\n.. _`Çağatay Yüksel`: https://github.com/cagatay\n.. _`Michael Kaminsky`: https://github.com/mikekaminsky\n.. _`inkn`: inkn\n.. _`Johannes Hoff`: Johannes Hoff\n.. _`Matheus Rosa`: Matheus Rosa\n.. _`Artur Dryomov`: https://github.com/ming13\n.. _`Stuart Quin`: https://github.com/stuartquin\n.. _`Tamas Boros`: https://github.com/TamasNo1\n.. _`Jacek Wielemborek`: https://github.com/d33tah\n.. _`Rodrigo Ramírez Norambuena`: https://github.com/roramirez\n.. _`Anthony Lai`: https://github.com/ajlai\n.. _`Ari Summer`: Ari Summer\n.. _`David Szotten`: David Szotten\n.. _`Fernando L. Canizo`: Fernando L. Canizo\n.. _`Tim Sanders`: https://github.com/Gollum999\n.. _`Irina Truong`: https://github.com/j-bennet\n.. _`James Munson`: https://github.com/jmunson\n.. _`Fernando Mora`: https://github.com/fernandomora\n.. _`Timothy Cleaver`: Timothy Cleaver\n.. _`gtxx`: gtxx\n.. _`Joakim Koljonen`: https://github.com/koljonen\n.. _`Anže Pečar`: https://github.com/Smotko\n.. _`Catherine Devlin`: https://github.com/catherinedevlin\n.. _`Eric Wald`: https://github.com/eswald\n.. _`avdd`: https://github.com/avdd\n.. _`Adrian Dries`: Adrian Dries\n.. _`Julien Rouhaud`: https://github.com/rjuju\n.. _`Lim H`: Lim H\n.. _`Tahir Butt`: Tahir Butt\n.. _`Tiziano Müller`: https://github.com/dev-zero\n.. _`Janus Troelsen`: https://github.com/ysangkok\n.. _`Fabien Meghazi`: https://github.com/amigrave\n.. _`Manuel Barkhau`: https://github.com/mbarkhau\n.. _`Sergii`: https://github.com/foxyterkel\n.. _`Lele Gaifax`: https://github.com/lelit\n.. _`tk`: https://github.com/kanet77\n.. _`Owen Stephens`: https://github.com/owst\n.. _`Russell Davies`: https://github.com/russelldavies\n.. _`Dick Marinus`: https://github.com/meeuw\n.. _`Étienne Bersac`: https://github.com/bersace\n.. _`Thomas Roten`: https://github.com/tsroten\n.. _`Gustavo Castro`: https://github.com/gustavo-castro\n.. _`Alexander Schmolck`: https://github.com/aschmolck\n.. _`Andrew Speed`: https://github.com/AndrewSpeed\n.. _`Dmitry B`: https://github.com/oxitnik\n.. _`Marcin Sztolcman`: https://github.com/msztolcman\n.. _`Isank`: https://github.com/isank\n.. _`Bojan Delić`: https://github.com/delicb\n.. _`Frederic Aoustin`: https://github.com/fraoustin\n.. _`Jason Ribeiro`: https://github.com/jrib\n.. _`Rishi Ramraj`: https://github.com/RishiRamraj\n.. _`Matthieu Guilbert`: https://github.com/gma2th\n.. _`Alexandr Korsak`: https://github.com/oivoodoo\n.. _`Saif Hakim`: https://github.com/saifelse\n.. _`Artur Balabanov`: https://github.com/arturbalabanov\n.. _`Kenny Do`: https://github.com/kennydo\n.. _`Max Rothman`: https://github.com/maxrothman\n.. _`Daniel Egger`: https://github.com/DanEEStar\n.. _`Ignacio Campabadal`: https://github.com/igncampa\n.. _`Mikhail Elovskikh`: https://github.com/wronglink\n.. _`Marcin Cieślak`: https://github.com/saper\n.. _`Scott Brenstuhl`: https://github.com/808sAndBR\n.. _`easteregg`: https://github.com/verfriemelt-dot-org\n.. _`Nathan Verzemnieks`: https://github.com/njvrzm\n.. _`raylu`: https://github.com/raylu\n.. _`Zhaolong Zhu`: https://github.com/zzl0\n.. _`Xavier Francisco`: https://github.com/Qu4tro\n.. _`VVelox`: https://github.com/VVelox\n.. _`Telmo \"Trooper\"`: https://github.com/telmotrooper\n.. _`Alexander Zawadzki`: https://github.com/zadacka\n.. _`Sebastian Janko`: https://github.com/sebojanko\n.. _`Pedro Ferrari`: https://github.com/petobens\n.. _`BrownShibaDog`: https://github.com/BrownShibaDog\n.. _`thegeorgeous`: https://github.com/thegeorgeous\n.. _`laixintao`: https://github.com/laixintao\n.. _`anthonydb`: https://github.com/anthonydb\n.. _`Daniel Kukula`: https://github.com/dkuku\n"
        },
        {
          "name": "pgcli-completion.bash",
          "type": "blob",
          "size": 1.7294921875,
          "content": "_pg_databases()\n{\n    # -w was introduced in 8.4, https://launchpad.net/bugs/164772\n    # \"Access privileges\" in output may contain linefeeds, hence the NF > 1\n    COMPREPLY=( $( compgen -W \"$( psql -AtqwlF $'\\t' 2>/dev/null | \\\n\t    awk 'NF > 1 { print $1 }' )\" -- \"$cur\" ) )\n}\n                                                                                                               \n_pg_users()\n{\n    # -w was introduced in 8.4, https://launchpad.net/bugs/164772\n    COMPREPLY=( $( compgen -W \"$( psql -Atqwc 'select usename from pg_user' \\\n        template1 2>/dev/null )\" -- \"$cur\" ) )\n    [[ ${#COMPREPLY[@]} -eq 0 ]] && COMPREPLY=( $( compgen -u -- \"$cur\" ) )\n}\n  \n_pgcli()\n{\n    local cur prev words cword\n    _init_completion -s || return\n\t\n    case $prev in\n        -h|--host)\n            _known_hosts_real \"$cur\"\n            return 0\n            ;;\n        -U|--user)\n            _pg_users\n            return 0\n            ;;\n        -d|--dbname)\n            _pg_databases\n            return 0\n            ;;\n        --help|-v|--version|-p|--port|-R|--row-limit)\n            # all other arguments are noop with these\n            return 0\n            ;;\n    esac\n\n    case \"$cur\" in\n\t    --*)\n        \t# return list of available options\n       \t\tCOMPREPLY=( $( compgen -W '--host --port --user --password --no-password\n \t\t\t              --single-connection --version --dbname --pgclirc --dsn\n  \t\t\t            --row-limit --help' -- \"$cur\" ) )\n        [[ $COMPREPLY == *= ]] && compopt -o nospace\n\t\t    return 0\n\t\t    ;;\n\t    -)\n\t\t    # only complete long options\n\t\t    compopt -o nospace\n\t\t    COMPREPLY=( -- )\n\t\t    return 0\n\t\t    ;;\n\t    *)\n            # return list of available databases\n        \t_pg_databases \n    esac\n} && \ncomplete -F _pgcli pgcli\n"
        },
        {
          "name": "pgcli",
          "type": "tree",
          "content": null
        },
        {
          "name": "post-install",
          "type": "blob",
          "size": 0.1005859375,
          "content": "#!/bin/bash\n\necho \"Setting up symlink to pgcli\"\nln -sf /usr/share/pgcli/bin/pgcli /usr/local/bin/pgcli\n"
        },
        {
          "name": "post-remove",
          "type": "blob",
          "size": 0.068359375,
          "content": "#!/bin/bash\n\necho \"Removing symlink to pgcli\"\nrm /usr/local/bin/pgcli\n"
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 0.0556640625,
          "content": "[MESSAGES CONTROL]\ndisable=missing-docstring,invalid-name"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.5537109375,
          "content": "[project]\nname = \"pgcli\"\nauthors = [{ name = \"Pgcli Core Team\", email = \"pgcli-dev@googlegroups.com\" }]\nlicense = { text = \"BSD\" }\ndescription = \"CLI for Postgres Database. With auto-completion and syntax highlighting.\"\nreadme = \"README.rst\"\nclassifiers = [\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: Unix\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: SQL\",\n    \"Topic :: Database\",\n    \"Topic :: Database :: Front-Ends\",\n    \"Topic :: Software Development\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\nurls = { Homepage = \"https://pgcli.com\" }\nrequires-python = \">=3.8\"\ndependencies = [\n    \"pgspecial>=2.0.0\",\n    \"click >= 4.1\",\n    \"Pygments>=2.0\",  # Pygments has to be Capitalcased. WTF?\n    # We still need to use pt-2 unless pt-3 released on Fedora32\n    # see: https://github.com/dbcli/pgcli/pull/1197\n    \"prompt_toolkit>=2.0.6,<4.0.0\",\n    \"psycopg >= 3.0.14; sys_platform != 'win32'\",\n    \"psycopg-binary >= 3.0.14; sys_platform == 'win32'\",\n    \"sqlparse >=0.3.0,<0.6\",\n    \"configobj >= 5.0.6\",\n    \"cli_helpers[styles] >= 2.2.1\",\n    # setproctitle is used to mask the password when running `ps` in command line.\n    # But this is not necessary in Windows since the password is never shown in the\n    # task manager. Also setproctitle is a hard dependency to install in Windows,\n    # so we'll only install it if we're not in Windows.\n    \"setproctitle >= 1.1.9; sys_platform != 'win32' and 'CYGWIN' not in sys_platform\",\n]\ndynamic = [\"version\"]\n\n\n[project.scripts]\npgcli = \"pgcli.main:cli\"\n\n[project.optional-dependencies]\nkeyring = [\"keyring >= 12.2.0\"]\nsshtunnel = [\"sshtunnel >= 0.4.0\"]\n\n[build-system]\nrequires = [\"setuptools>=61.2\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools]\ninclude-package-data = false\n\n[tool.setuptools.dynamic]\nversion = { attr = \"pgcli.__version__\" }\n\n[tool.setuptools.packages]\nfind = { namespaces = false }\n\n[tool.setuptools.package-data]\npgcli = [\n    \"pgclirc\",\n    \"packages/pgliterals/pgliterals.json\",\n]\n\n[tool.black]\nline-length = 88\ntarget-version = ['py38']\ninclude = '\\.pyi?$'\nexclude = '''\n/(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | \\.cache\n  | \\.pytest_cache\n  | _build\n  | buck-out\n  | build\n  | dist\n  | tests/data\n)/\n'''\n"
        },
        {
          "name": "release.py",
          "type": "blob",
          "size": 3.0234375,
          "content": "#!/usr/bin/env python\n\"\"\"A script to publish a release of pgcli to PyPI.\"\"\"\n\nimport io\nfrom optparse import OptionParser\nimport re\nimport subprocess\nimport sys\n\nimport click\n\nDEBUG = False\nCONFIRM_STEPS = False\nDRY_RUN = False\n\n\ndef skip_step():\n    \"\"\"\n    Asks for user's response whether to run a step. Default is yes.\n    :return: boolean\n    \"\"\"\n    global CONFIRM_STEPS\n\n    if CONFIRM_STEPS:\n        return not click.confirm(\"--- Run this step?\", default=True)\n    return False\n\n\ndef run_step(*args):\n    \"\"\"\n    Prints out the command and asks if it should be run.\n    If yes (default), runs it.\n    :param args: list of strings (command and args)\n    \"\"\"\n    global DRY_RUN\n\n    cmd = args\n    print(\" \".join(cmd))\n    if skip_step():\n        print(\"--- Skipping...\")\n    elif DRY_RUN:\n        print(\"--- Pretending to run...\")\n    else:\n        subprocess.check_output(cmd)\n\n\ndef version(version_file):\n    _version_re = re.compile(\n        r'__version__\\s+=\\s+(?P<quote>[\\'\"])(?P<version>.*)(?P=quote)'\n    )\n\n    with io.open(version_file, encoding=\"utf-8\") as f:\n        ver = _version_re.search(f.read()).group(\"version\")\n\n    return ver\n\n\ndef commit_for_release(version_file, ver):\n    run_step(\"git\", \"reset\")\n    run_step(\"git\", \"add\", \"-u\")\n    run_step(\"git\", \"commit\", \"--message\", \"Releasing version {}\".format(ver))\n\n\ndef create_git_tag(tag_name):\n    run_step(\"git\", \"tag\", tag_name)\n\n\ndef create_distribution_files():\n    run_step(\"python\", \"setup.py\", \"clean\", \"--all\", \"sdist\", \"bdist_wheel\")\n\n\ndef upload_distribution_files():\n    run_step(\"twine\", \"upload\", \"dist/*\")\n\n\ndef push_to_github():\n    run_step(\"git\", \"push\", \"origin\", \"main\")\n\n\ndef push_tags_to_github():\n    run_step(\"git\", \"push\", \"--tags\", \"origin\")\n\n\ndef checklist(questions):\n    for question in questions:\n        if not click.confirm(\"--- {}\".format(question), default=False):\n            sys.exit(1)\n\n\nif __name__ == \"__main__\":\n    if DEBUG:\n        subprocess.check_output = lambda x: x\n\n    checks = [\n        \"Have you updated the AUTHORS file?\",\n        \"Have you updated the `Usage` section of the README?\",\n    ]\n    checklist(checks)\n\n    ver = version(\"pgcli/__init__.py\")\n    print(\"Releasing Version:\", ver)\n\n    parser = OptionParser()\n    parser.add_option(\n        \"-c\",\n        \"--confirm-steps\",\n        action=\"store_true\",\n        dest=\"confirm_steps\",\n        default=False,\n        help=(\n            \"Confirm every step. If the step is not \" \"confirmed, it will be skipped.\"\n        ),\n    )\n    parser.add_option(\n        \"-d\",\n        \"--dry-run\",\n        action=\"store_true\",\n        dest=\"dry_run\",\n        default=False,\n        help=\"Print out, but not actually run any steps.\",\n    )\n\n    popts, pargs = parser.parse_args()\n    CONFIRM_STEPS = popts.confirm_steps\n    DRY_RUN = popts.dry_run\n\n    if not click.confirm(\"Are you sure?\", default=False):\n        sys.exit(1)\n\n    commit_for_release(\"pgcli/__init__.py\", ver)\n    create_git_tag(\"v{}\".format(ver))\n    create_distribution_files()\n    push_to_github()\n    push_tags_to_github()\n    upload_distribution_files()\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.21875,
          "content": "pytest>=2.7.0\ntox>=1.9.2\nbehave>=1.2.4\nblack>=23.3.0\npexpect==3.3; platform_system != \"Windows\"\npre-commit>=1.16.0\ncoverage>=5.0.4\ncodecov>=1.5.1\ndocutils>=0.13.1\nautopep8>=1.3.3\ntwine>=1.11.0\nwheel>=0.33.6\nsshtunnel>=0.4.0\n"
        },
        {
          "name": "sanity_checks.txt",
          "type": "blob",
          "size": 1.130859375,
          "content": "# vi: ft=vimwiki\n\n* Launch pgcli with different inputs. \n    * pgcli test_db\n    * pgcli postgres://localhost/test_db\n    * pgcli postgres://localhost:5432/test_db\n    * pgcli postgres://amjith@localhost:5432/test_db\n    * pgcli postgres://amjith:password@localhost:5432/test_db\n    * pgcli non-existent-db\n\n* Test special command\n    * \\d\n    * \\d table_name\n    * \\dt\n    * \\l \n    * \\c amjith \n    * \\q\n\n* Simple execution:\n    1 Execute a simple 'select * from users;' test that will pass.\n    2 Execute a syntax error: 'insert into users ( ;'\n    3 Execute a simple test from step 1 again to see if it still passes.\n    * Change the database and try steps 1 - 3.\n\n* Test smart-completion\n    * Sele - Must auto-complete to SELECT\n    * SELECT * FROM  - Must list the table names.\n    * INSERT INTO - Must list table names.\n    * \\d <tab> - Must list table names.\n    * \\c <tab> - Database names.\n    * SELECT * FROM table_name WHERE <tab> - column names (all of it).\n\n* Test naive-completion - turn off smart completion (using F2 key after launch)\n    * Sele - autocomplete to select. \n    * SELECT * FROM - autocomplete list should have everything. \n\n\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.251953125,
          "content": "[tox]\nenvlist = py38, py39, py310, py311, py312\n[testenv]\ndeps = pytest>=2.7.0,<=3.0.7\n    mock>=1.0.1\n    behave>=1.2.4\n    pexpect==3.3\n    sshtunnel>=0.4.0\ncommands = py.test\n    behave tests/features\npassenv = PGHOST\n    PGPORT\n    PGUSER\n    PGPASSWORD\n"
        }
      ]
    }
  ]
}