{
  "metadata": {
    "timestamp": 1736561202145,
    "page": 172,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyecharts/pyecharts",
      "stars": 15044,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.189453125,
          "content": "[run]\nomit =\n    pyecharts/render/templates/*\n    setup.py\n    install.py\n    test.py\n    test/*\n\n[report]\nshow_missing = True\nomit =\n    pyecharts/render/templates/*\n    setup.py\n    install.py"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "* text=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.244140625,
          "content": "# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n.idea\r\n# Distribution / packaging\r\n.Python\r\ntest/*.html\r\nenv/\r\nbuild/\r\ndevelop-eggs/\r\ndist/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*,cover\r\n.hypothesis/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# IPython Notebook\r\n.ipynb_checkpoints\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# dotenv\r\n.env\r\n\r\n# virtualenv\r\nvenv/\r\nENV/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n*~\r\n\r\n# for mac\r\n.DS_store\r\n\r\n# for vscode\r\n.vscode/\r\n\r\n# example\r\nexample/*.png\r\nexample/*.html\r\n\r\n# mypy\r\n.mypy_cache/\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "MIT License\n\nCopyright (c) 2017-2020 chenjiandongx\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.111328125,
          "content": "include pyecharts/datasets/*.json\r\ninclude pyecharts/render/templates/*\r\ninclude README.md\r\ninclude changelog.md\r\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 10.384765625,
          "content": "<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/19553554/71825144-2d568180-30d6-11ea-8ee0-63c849cfd934.png\" alt=\"pyecharts logo\" width=200 height=200 />\n</p>\n<h1 align=\"center\">pyecharts</h1>\n<p align=\"center\">\n    <em>Python ‚ù§Ô∏è ECharts = pyecharts</em>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/pyecharts/pyecharts/actions\">\n        <img src=\"https://github.com/pyecharts/pyecharts/actions/workflows/python-app.yml/badge.svg\" alt=\"Github Actions Status\">\n    </a>\n    <a href=\"https://codecov.io/gh/pyecharts/pyecharts\">\n        <img src=\"https://codecov.io/gh/pyecharts/pyecharts/branch/master/graph/badge.svg\" alt=\"Codecov\">\n    </a>\n    <a href=\"https://badge.fury.io/py/pyecharts\">\n        <img src=\"https://badge.fury.io/py/pyecharts.svg\" alt=\"Package version\">\n    </a>\n    <a href=\"https://pypi.org/project/pyecharts/\">\n        <img src=\"https://img.shields.io/pypi/pyversions/pyecharts.svg?colorB=brightgreen\" alt=\"PyPI - Python Version\">\n    </a>\n</p>\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/pyecharts\">\n        <img src=\"https://img.shields.io/pypi/format/pyecharts.svg\" alt=\"PyPI - Format\">\n    </a>\n     <a href=\"https://github.com/pyecharts/pyecharts/pulls\">\n        <img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"Contributions welcome\">\n    </a>\n    <a href=\"https://opensource.org/licenses/MIT\">\n        <img src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg\" alt=\"License\">\n    </a>\n</p>\n\n## üì£ Introduction\n\n[Apache ECharts](https://github.com/apache/echarts) is easy-to-use, highly interactive and highly performant javascript visualization library under Apache license. Since its first public release in 2013, it now dominates over 74% of Chinese web front-end market. Yet Python is an expressive language and is loved by data science community. Combining the strength of both technologies, [pyecharts](https://github.com/pyecharts/pyecharts) is born.\n\n## ‚ú® Feature highlights\n\n* Simple API, Sleek and method chaining\n* Support 30 + popular charts\n* Support data science tools: Jupyter Notebook, JupyterLab, nteract, [marimo](https://github.com/marimo-team/marimo)\n* Integrate with FlaskÔºåDjango at ease\n* Easy to use and highly configurable\n* Detailed documentation and examples.\n* More than 400+ geomaps assets for geograpic information processing\n\n## ‚è≥ Version\n\nv0.5.x is not compatible with V1, which is a completely new version, see [ISSUE#892](https://github.com/pyecharts/pyecharts/issues/892), [ISSUE#1033](https://github.com/pyecharts/). pyecharts/issues/1033).\n\n### V0.5.x\n\n> Support for Python 2.7, 3.4+\n\nAt the discretion of the development team, version 0.5.x will no longer be maintained. Version 0.5.x code is located in the *05x* branch and documentation is located at [05x-docs.pyecharts.org](http://05x-docs.pyecharts.org).\n\n### V1\n\n> Python 3.7+ only\n\nThe new version series will start with v1.0.0, documented at [pyecharts.org](https://pyecharts.org); examples at [gallery.pyecharts.org](https://gallery.pyecharts.org)\n\n### V2\n\n> Python 3.7+ only\n\nThe new version is based on Echarts 5.4.1+ for rendering, and the documentation and examples are in the same location as V1.\n\n\n## üî∞ Installation\n\n**pip install**\n```shell\n$ pip install pyecharts\n```\n\n**Install from source**\n```shell\n$ git clone https://github.com/pyecharts/pyecharts.git\n$ cd pyecharts\n$ pip install -r requirements.txt\n$ python setup.py install\n```\n\n## üìù Usage\n\n### Local computer\n\n#### HTML\n```python\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\nbar = (\n    Bar()\n    .add_xaxis([\"Ë°¨Ë°´\", \"ÊØõË°£\", \"È¢ÜÂ∏¶\", \"Ë£§Â≠ê\", \"È£éË°£\", \"È´òË∑üÈûã\", \"Ë¢úÂ≠ê\"])\n    .add_yaxis(\"ÂïÜÂÆ∂A\", [114, 55, 27, 101, 125, 27, 105])\n    .add_yaxis(\"ÂïÜÂÆ∂B\", [57, 134, 137, 129, 145, 60, 49])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"ÊüêÂïÜÂú∫ÈîÄÂîÆÊÉÖÂÜµ\"))\n)\nbar.render()\n```\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/55270272-d6ff1b80-52d7-11e9-820f-30660a068e3e.gif\"  width=\"85%\" />\n</p>\n\n#### image\n```python\nfrom pyecharts.render import make_snapshot\n\n# needs to configure selenium\nmake_snapshot(bar.render(), \"bar.png\")\n```\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/55270432-7a9cfb80-52d9-11e9-81b5-4ceb4dcd1756.png\"  width=\"85%\" />\n</p>\n\n### Notebook\n\n#### Jupyter Notebook\n\n![](https://user-images.githubusercontent.com/19553554/55270255-b3d46c00-52d7-11e9-8aa5-f7b3819a1e88.png)\n\n#### JupyterLab\n\n![](https://user-images.githubusercontent.com/19553554/55270259-c0f15b00-52d7-11e9-8811-93bfca1cc027.png)\n\n#### Web framework\n\n![](https://user-images.githubusercontent.com/19553554/35081158-3faa7c34-fc4d-11e7-80c9-2de79371374f.gif)\n\n## üîñ Demo\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/52197440-843a5200-289a-11e9-8601-3ce8d945b04a.gif\" width=\"33%\" alt=\"bar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52360729-ad640980-2a77-11e9-84e2-feff7e11aea5.gif\" width=\"33%\" alt=\"boxplot\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535290-4b611800-2d87-11e9-8bf2-b43a54a3bda8.png\" width=\"33%\" alt=\"effectScatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332816-ac5eb800-2a36-11e9-8227-3538976f447d.gif\" width=\"33%\" alt=\"funnel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332988-0b243180-2a37-11e9-9db8-eb6b8c86a0de.png\" width=\"33%\" alt=\"gague\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52344575-133f9980-2a56-11e9-93e0-568e484936ce.gif\" width=\"33%\" alt=\"geo\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35082102-fd8d884a-fc52-11e7-9e40-5f94098d4493.gif\" width=\"33%\" alt=\"geo\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52727805-f7f20280-2ff0-11e9-91ab-cd99848e3127.gif\" width=\"33%\" alt=\"graph\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345115-6534ef00-2a57-11e9-80cd-9cbfed252139.gif\" width=\"33%\" alt=\"heatmap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345490-4a16af00-2a58-11e9-9b43-7bbc86aa05b6.gif\" width=\"33%\" alt=\"kline\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52346064-b7770f80-2a59-11e9-9e03-6dae3a8c637d.gif\" width=\"33%\" alt=\"line\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347117-248ba480-2a5c-11e9-8402-5a94054dca50.gif\" width=\"33%\" alt=\"liquid\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347915-0a52c600-2a5e-11e9-8039-41268238576c.gif\" width=\"33%\" alt=\"map\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535013-e48e2f80-2d83-11e9-8886-ac0d2122d6af.png\" width=\"33%\" alt=\"parallel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348202-bb596080-2a5e-11e9-84a7-60732be0743a.gif\" width=\"33%\" alt=\"pie\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35090457-afc0658e-fc74-11e7-9c58-24c780436287.gif\" width=\"33%\" alt=\"ploar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52533994-932b7380-2d76-11e9-93b4-0de3132eb941.gif\" width=\"33%\" alt=\"radar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348431-420e3d80-2a5f-11e9-8cab-7b415592dc77.gif\" width=\"33%\" alt=\"scatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/44004598-5636d74e-9e97-11e8-8a5c-92de6278880d.gif\" width=\"33%\" alt=\"tree\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35082251-b9e23982-fc53-11e7-8341-e7da1842389f.gif\" width=\"33%\" alt=\"treemap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348737-01fb8a80-2a60-11e9-94ac-dacbd7b58811.png\" width=\"33%\" alt=\"wordCloud\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52433989-4f075b80-2b49-11e9-9979-ef32c2d17c96.gif\" width=\"33%\" alt=\"bar3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464826-4baab900-2bb7-11e9-8299-776f5ee43670.gif\" width=\"33%\" alt=\"line3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52802261-8d0cfe00-30ba-11e9-8ae7-ae0773770a59.gif\" width=\"33%\" alt=\"sankey\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464647-aee81b80-2bb6-11e9-864e-c544392e523a.gif\" width=\"33%\" alt=\"scatter3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52465183-a55fb300-2bb8-11e9-8c10-4519c4e3f758.gif\" width=\"33%\" alt=\"surface3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52798246-7ebae400-30b2-11e9-8489-6c10339c3429.gif\" width=\"33%\" alt=\"themeRiver\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52349544-c2ce3900-2a61-11e9-82af-28aaaaae0d67.gif\" width=\"33%\" alt=\"overlap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35089737-ccc1c01c-fc72-11e7-874d-8ba8b89572eb.png\" width=\"33%\" alt=\"grid\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35082279-e111743c-fc53-11e7-9362-580160593715.gif\" width=\"33%\" alt=\"timeline\"/>\n</div>\n\nFor more documentation, please visit\n\n* [Chinese documentation](https://pyecharts.org/#/zh-cn/)\n* [English Documentation](https://pyecharts.org/#/en-us/)\n* [Example Documentation](https://gallery.pyecharts.org/)\n\n## ‚õè Software development\n\n### Unit tests\n\n```shell\n$ pip install -r test/requirements.txt\n$ make\n```\n\n### Team development\n\n[Travis CI](https://travis-ci.org/) and [AppVeyor](https://ci.appveyor.com/) is place for continuous integration.\n\n### Coding styles\n\n[flake8](http://flake8.pycqa.org/en/latest/index.html), [Codecov](https://codecov.io/) and [pylint](https://www.pylint.org/) are used\n\n## üòâ Author\n\npyecharts are co-maintained by:\n\n* [@chenjiandongx](https://github.com/chenjiandongx)\n* [@chfw](https://github.com/chfw)\n* [@kinegratii](https://github.com/kinegratii)\n* [@sunhailin-Leo](https://github.com/sunhailin-Leo)\n\nFor more contributors, please visit [pyecharts/graphs/contributors](https://github.com/pyecharts/pyecharts/graphs/contributors)\n\n## üíå Donation\n\nTo develop and maintain pyecharts, it took me a lot of overnights. If you think pyecharts has helped you, please consider buying me a coffee:\n\n<img src=\"https://user-images.githubusercontent.com/19553554/35425853-500d6b5c-0299-11e8-80a1-ebb6629b497e.png\" width=\"19.8%\" alt=\"Alipay\">„ÄÄ„ÄÄ„ÄÄ<img src=\"https://user-images.githubusercontent.com/19553554/35425854-504e716a-0299-11e8-81fc-4a511f1c47e8.png\" width=\"20%\" alt=\"Wechat\">\n\n\nPlease also buy the other maintainer a coffee if you think their work helped you too [donation details](http://pyecharts.org/#/zh-cn/donate)\n\n## üìÉ License\n\nMIT [¬©chenjiandongx](https://github.com/chenjiandongx)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.1787109375,
          "content": "<p align=\"center\">\n    <img src=\"https://user-images.githubusercontent.com/19553554/71825144-2d568180-30d6-11ea-8ee0-63c849cfd934.png\" alt=\"pyecharts logo\" width=200 height=200 />\n</p>\n<h1 align=\"center\">pyecharts</h1>\n<p align=\"center\">\n    <em>Python ‚ù§Ô∏è ECharts = pyecharts</em>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/pyecharts/pyecharts/actions\">\n        <img src=\"https://github.com/pyecharts/pyecharts/actions/workflows/python-app.yml/badge.svg\" alt=\"Github Actions Status\">\n    </a>\n    <a href=\"https://codecov.io/gh/pyecharts/pyecharts\">\n        <img src=\"https://codecov.io/gh/pyecharts/pyecharts/branch/master/graph/badge.svg\" alt=\"Codecov\">\n    </a>\n    <a href=\"https://badge.fury.io/py/pyecharts\">\n        <img src=\"https://badge.fury.io/py/pyecharts.svg\" alt=\"Package version\">\n    </a>\n    <a href=\"https://pypi.org/project/pyecharts/\">\n        <img src=\"https://img.shields.io/pypi/pyversions/pyecharts.svg?colorB=brightgreen\" alt=\"PyPI - Python Version\">\n    </a>\n</p>\n<p align=\"center\">\n    <a href=\"https://pypi.org/project/pyecharts\">\n        <img src=\"https://img.shields.io/pypi/format/pyecharts.svg\" alt=\"PyPI - Format\">\n    </a>\n     <a href=\"https://github.com/pyecharts/pyecharts/pulls\">\n        <img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"Contributions welcome\">\n    </a>\n    <a href=\"https://opensource.org/licenses/MIT\">\n        <img src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg\" alt=\"License\">\n    </a>\n</p>\n\n[English README](README.en.md)\n\n## üì£ ÁÆÄ‰ªã\n\n[Apache ECharts](https://github.com/apache/echarts) ÊòØ‰∏Ä‰∏™Áî±ÁôæÂ∫¶ÂºÄÊ∫êÁöÑÊï∞ÊçÆÂèØËßÜÂåñÔºåÂá≠ÂÄüÁùÄËâØÂ•ΩÁöÑ‰∫§‰∫íÊÄßÔºåÁ≤æÂ∑ßÁöÑÂõæË°®ËÆæËÆ°ÔºåÂæóÂà∞‰∫Ü‰ºóÂ§öÂºÄÂèëËÄÖÁöÑËÆ§ÂèØ„ÄÇËÄå Python ÊòØ‰∏ÄÈó®ÂØåÊúâË°®ËææÂäõÁöÑËØ≠Ë®ÄÔºåÂæàÈÄÇÂêàÁî®‰∫éÊï∞ÊçÆÂ§ÑÁêÜ„ÄÇÂΩìÊï∞ÊçÆÂàÜÊûêÈÅá‰∏äÊï∞ÊçÆÂèØËßÜÂåñÊó∂Ôºå[pyecharts](https://github.com/pyecharts/pyecharts) ËØûÁîü‰∫Ü„ÄÇ\n\n## ‚ú® ÁâπÊÄß\n\n* ÁÆÄÊ¥ÅÁöÑ API ËÆæËÆ°Ôºå‰ΩøÁî®Â¶Ç‰∏ùÊªëËà¨ÊµÅÁïÖÔºåÊîØÊåÅÈìæÂºèË∞ÉÁî®\n* ÂõäÊã¨‰∫Ü 30+ ÁßçÂ∏∏ËßÅÂõæË°®ÔºåÂ∫îÊúâÂ∞ΩÊúâ\n* ÊîØÊåÅ‰∏ªÊµÅ Notebook ÁéØÂ¢ÉÔºåJupyter Notebook„ÄÅJupyterLab Âíå [marimo](https://github.com/marimo-team/marimo)\n* ÂèØËΩªÊùæÈõÜÊàêËá≥ FlaskÔºåSanicÔºåDjango Á≠â‰∏ªÊµÅ Web Ê°ÜÊû∂\n* È´òÂ∫¶ÁÅµÊ¥ªÁöÑÈÖçÁΩÆÈ°πÔºåÂèØËΩªÊùæÊê≠ÈÖçÂá∫Á≤æÁæéÁöÑÂõæË°®\n* ËØ¶ÁªÜÁöÑÊñáÊ°£ÂíåÁ§∫‰æãÔºåÂ∏ÆÂä©ÂºÄÂèëËÄÖÊõ¥Âø´ÁöÑ‰∏äÊâãÈ°πÁõÆ\n* Â§öËææ 400+ Âú∞ÂõæÊñá‰ª∂ÔºåÂπ∂‰∏îÊîØÊåÅÂéüÁîüÁôæÂ∫¶Âú∞ÂõæÔºå‰∏∫Âú∞ÁêÜÊï∞ÊçÆÂèØËßÜÂåñÊèê‰æõÂº∫ÊúâÂäõÁöÑÊîØÊåÅ\n\n## ‚è≥ ÁâàÊú¨\n\nv0.5.x Âíå V1 Èó¥‰∏çÂÖºÂÆπÔºåV1 ÊòØ‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÁâàÊú¨ÔºåËØ¶ËßÅ [ISSUE#892](https://github.com/pyecharts/pyecharts/issues/892)Ôºå[ISSUE#1033](https://github.com/pyecharts/pyecharts/issues/1033)„ÄÇ\n\n### V0.5.x\n\n> ÊîØÊåÅ Python 2.7Ôºå3.4+\n\nÁªèÂºÄÂèëÂõ¢ÈòüÂÜ≥ÂÆöÔºå0.5.x ÁâàÊú¨Â∞Ü‰∏çÂÜçËøõË°åÁª¥Êä§Ôºå0.5.x ÁâàÊú¨‰ª£Á†Å‰Ωç‰∫é *05x* ÂàÜÊîØÔºåÊñáÊ°£‰Ωç‰∫é [05x-docs.pyecharts.org](http://05x-docs.pyecharts.org)„ÄÇ\n\n### V1\n\n> ‰ªÖÊîØÊåÅ Python 3.7+\n\nÊñ∞ÁâàÊú¨Á≥ªÂàóÂ∞Ü‰ªé v1.0.0 ÂºÄÂßãÔºåÊñáÊ°£‰Ωç‰∫é [pyecharts.org](https://pyecharts.org)ÔºõÁ§∫‰æã‰Ωç‰∫é [gallery.pyecharts.org](https://gallery.pyecharts.org)\n\n### V2\n\n> ‰ªÖÊîØÊåÅ Python 3.7+\n\nÊñ∞ÁâàÊú¨Âü∫‰∫é Echarts 5.4.1+ ËøõË°åÊ∏≤Êüì, ÊñáÊ°£ÂíåÁ§∫‰æã‰ΩçÁΩÆ‰∏é V1 Áõ∏Âêå\n\n## üî∞ ÂÆâË£Ö\n\n**pip ÂÆâË£Ö**\n```shell\n# ÂÆâË£Ö v1 ‰ª•‰∏äÁâàÊú¨\n$ pip install pyecharts -U\n\n# Â¶ÇÊûúÈúÄË¶ÅÂÆâË£Ö 0.5.11 ÁâàÊú¨ÁöÑÂºÄÂèëËÄÖÔºåÂèØ‰ª•‰ΩøÁî®\n# pip install pyecharts==0.5.11\n```\n\n**Ê∫êÁ†ÅÂÆâË£Ö**\n```shell\n# ÂÆâË£Ö v1 ‰ª•‰∏äÁâàÊú¨\n$ git clone https://github.com/pyecharts/pyecharts.git\n# Â¶ÇÊûúÈúÄË¶ÅÂÆâË£Ö 0.5.11 ÁâàÊú¨ÔºåËØ∑‰ΩøÁî® git clone https://github.com/pyecharts/pyecharts.git -b v05x\n$ cd pyecharts\n$ pip install -r requirements.txt\n$ python setup.py install\n```\n\n## üìù ‰ΩøÁî®\n\n### Êú¨Âú∞ÁéØÂ¢É\n\n#### ÁîüÊàê HTML\n```python\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\n# V1 ÁâàÊú¨ÂºÄÂßãÊîØÊåÅÈìæÂºèË∞ÉÁî®\nbar = (\n    Bar()\n    .add_xaxis([\"Ë°¨Ë°´\", \"ÊØõË°£\", \"È¢ÜÂ∏¶\", \"Ë£§Â≠ê\", \"È£éË°£\", \"È´òË∑üÈûã\", \"Ë¢úÂ≠ê\"])\n    .add_yaxis(\"ÂïÜÂÆ∂A\", [114, 55, 27, 101, 125, 27, 105])\n    .add_yaxis(\"ÂïÜÂÆ∂B\", [57, 134, 137, 129, 145, 60, 49])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"ÊüêÂïÜÂú∫ÈîÄÂîÆÊÉÖÂÜµ\"))\n)\nbar.render()\n\n# ‰∏ç‰π†ÊÉØÈìæÂºèË∞ÉÁî®ÁöÑÂºÄÂèëËÄÖ‰æùÊóßÂèØ‰ª•ÂçïÁã¨Ë∞ÉÁî®ÊñπÊ≥ï\nbar = Bar()\nbar.add_xaxis([\"Ë°¨Ë°´\", \"ÊØõË°£\", \"È¢ÜÂ∏¶\", \"Ë£§Â≠ê\", \"È£éË°£\", \"È´òË∑üÈûã\", \"Ë¢úÂ≠ê\"])\nbar.add_yaxis(\"ÂïÜÂÆ∂A\", [114, 55, 27, 101, 125, 27, 105])\nbar.add_yaxis(\"ÂïÜÂÆ∂B\", [57, 134, 137, 129, 145, 60, 49])\nbar.set_global_opts(title_opts=opts.TitleOpts(title=\"ÊüêÂïÜÂú∫ÈîÄÂîÆÊÉÖÂÜµ\"))\nbar.render()\n```\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/55270272-d6ff1b80-52d7-11e9-820f-30660a068e3e.gif\"  width=\"85%\" />\n</p>\n\n#### ÁîüÊàêÂõæÁâá\n```python\nfrom snapshot_selenium import snapshot as driver\n\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.render import make_snapshot\n\n\ndef bar_chart() -> Bar:\n    c = (\n        Bar()\n        .add_xaxis([\"Ë°¨Ë°´\", \"ÊØõË°£\", \"È¢ÜÂ∏¶\", \"Ë£§Â≠ê\", \"È£éË°£\", \"È´òË∑üÈûã\", \"Ë¢úÂ≠ê\"])\n        .add_yaxis(\"ÂïÜÂÆ∂A\", [114, 55, 27, 101, 125, 27, 105])\n        .add_yaxis(\"ÂïÜÂÆ∂B\", [57, 134, 137, 129, 145, 60, 49])\n        .reversal_axis()\n        .set_series_opts(label_opts=opts.LabelOpts(position=\"right\"))\n        .set_global_opts(title_opts=opts.TitleOpts(title=\"Bar-ÊµãËØïÊ∏≤ÊüìÂõæÁâá\"))\n    )\n    return c\n\n# ÈúÄË¶ÅÂÆâË£Ö snapshot-selenium ÊàñËÄÖ snapshot-phantomjs\nmake_snapshot(driver, bar_chart().render(), \"bar.png\")\n```\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/56089096-11fc7400-5ec0-11e9-9c21-551624036836.png\"  width=\"85%\" />\n</p>\n\n### Notebook ÁéØÂ¢É\n\n#### Jupyter Notebook\n\n![](https://user-images.githubusercontent.com/19553554/55270255-b3d46c00-52d7-11e9-8aa5-f7b3819a1e88.png)\n\n#### JupyterLab\n\n![](https://user-images.githubusercontent.com/19553554/55270259-c0f15b00-52d7-11e9-8811-93bfca1cc027.png)\n\n#### Web Ê°ÜÊû∂\n\n![](https://user-images.githubusercontent.com/19553554/35081158-3faa7c34-fc4d-11e7-80c9-2de79371374f.gif)\n\n## üîñ Demo\n\n> Demo ‰ª£Á†Å‰Ωç‰∫é example Êñá‰ª∂Â§π‰∏ãÔºåÊ¨¢ËøéÂèÇËÄÉ pyecharts ÁîªÂªä [pyecharts-gallery](https://github.com/pyecharts/pyecharts-gallery)„ÄÇ\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/19553554/52197440-843a5200-289a-11e9-8601-3ce8d945b04a.gif\" width=\"33%\" alt=\"bar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52360729-ad640980-2a77-11e9-84e2-feff7e11aea5.gif\" width=\"33%\" alt=\"boxplot\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535290-4b611800-2d87-11e9-8bf2-b43a54a3bda8.png\" width=\"33%\" alt=\"effectScatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332816-ac5eb800-2a36-11e9-8227-3538976f447d.gif\" width=\"33%\" alt=\"funnel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52332988-0b243180-2a37-11e9-9db8-eb6b8c86a0de.png\" width=\"33%\" alt=\"gague\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52344575-133f9980-2a56-11e9-93e0-568e484936ce.gif\" width=\"33%\" alt=\"geo\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35082102-fd8d884a-fc52-11e7-9e40-5f94098d4493.gif\" width=\"33%\" alt=\"geo\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52727805-f7f20280-2ff0-11e9-91ab-cd99848e3127.gif\" width=\"33%\" alt=\"graph\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345115-6534ef00-2a57-11e9-80cd-9cbfed252139.gif\" width=\"33%\" alt=\"heatmap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52345490-4a16af00-2a58-11e9-9b43-7bbc86aa05b6.gif\" width=\"33%\" alt=\"kline\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52346064-b7770f80-2a59-11e9-9e03-6dae3a8c637d.gif\" width=\"33%\" alt=\"line\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347117-248ba480-2a5c-11e9-8402-5a94054dca50.gif\" width=\"33%\" alt=\"liquid\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52347915-0a52c600-2a5e-11e9-8039-41268238576c.gif\" width=\"33%\" alt=\"map\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/57545910-431c7700-738e-11e9-896b-e071b55115c7.png\" width=\"33%\" alt=\"bmap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52535013-e48e2f80-2d83-11e9-8886-ac0d2122d6af.png\" width=\"33%\" alt=\"parallel\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348202-bb596080-2a5e-11e9-84a7-60732be0743a.gif\" width=\"33%\" alt=\"pie\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35090457-afc0658e-fc74-11e7-9c58-24c780436287.gif\" width=\"33%\" alt=\"ploar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52533994-932b7380-2d76-11e9-93b4-0de3132eb941.gif\" width=\"33%\" alt=\"radar\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348431-420e3d80-2a5f-11e9-8cab-7b415592dc77.gif\" width=\"33%\" alt=\"scatter\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/44004598-5636d74e-9e97-11e8-8a5c-92de6278880d.gif\" width=\"33%\" alt=\"tree\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35082251-b9e23982-fc53-11e7-8341-e7da1842389f.gif\" width=\"33%\" alt=\"treemap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52348737-01fb8a80-2a60-11e9-94ac-dacbd7b58811.png\" width=\"33%\" alt=\"wordCloud\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52433989-4f075b80-2b49-11e9-9979-ef32c2d17c96.gif\" width=\"33%\" alt=\"bar3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464826-4baab900-2bb7-11e9-8299-776f5ee43670.gif\" width=\"33%\" alt=\"line3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52802261-8d0cfe00-30ba-11e9-8ae7-ae0773770a59.gif\" width=\"33%\" alt=\"sankey\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52464647-aee81b80-2bb6-11e9-864e-c544392e523a.gif\" width=\"33%\" alt=\"scatter3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52465183-a55fb300-2bb8-11e9-8c10-4519c4e3f758.gif\" width=\"33%\" alt=\"surface3D\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52798246-7ebae400-30b2-11e9-8489-6c10339c3429.gif\" width=\"33%\" alt=\"themeRiver\"/>\n<img src=\"https://user-images.githubusercontent.com/17564655/57567164-bdd5a880-7407-11e9-8d19-9be2776c57fa.png\" width=\"33%\" alt=\"sunburst\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/52349544-c2ce3900-2a61-11e9-82af-28aaaaae0d67.gif\" width=\"33%\" alt=\"overlap\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/35089737-ccc1c01c-fc72-11e7-874d-8ba8b89572eb.png\" width=\"33%\" alt=\"grid\"/>\n<img src=\"https://user-images.githubusercontent.com/19553554/56976071-b9f28c80-6ba4-11e9-8efd-603203c77619.png\" width=\"33%\" alt=\"grid\">\n<img src=\"https://user-images.githubusercontent.com/19553554/35082279-e111743c-fc53-11e7-9362-580160593715.gif\" width=\"33%\" alt=\"timeline\"/>\n</div>\n\nÊõ¥Â§öËØ¶ÁªÜÊñáÊ°£ÔºåËØ∑ËÆøÈóÆ\n\n* [‰∏≠ÊñáÊñáÊ°£](http://pyecharts.org/#/zh-cn/)\n* [English Documentation](http://pyecharts.org/#/en-us/)\n* [Á§∫‰æã Example](https://gallery.pyecharts.org)\n\n## ‚õè ‰ª£Á†ÅË¥®Èáè\n\n### ÂçïÂÖÉÊµãËØï\n\n```shell\n$ pip install -r test/requirements.txt\n$ make\n```\n\n### ÈõÜÊàêÊµãËØï\n\n‰ΩøÁî® [Travis CI](https://travis-ci.org/) Âíå [AppVeyor](https://ci.appveyor.com/) ÊåÅÁª≠ÈõÜÊàêÁéØÂ¢É„ÄÇ\n\n### ‰ª£Á†ÅËßÑËåÉ\n\n‰ΩøÁî® [flake8](http://flake8.pycqa.org/en/latest/index.html), [Codecov](https://codecov.io/) ‰ª•Âèä [pylint](https://www.pylint.org/) ÊèêÂçá‰ª£Á†ÅË¥®Èáè„ÄÇ\n\n## üòâ Author\n\npyecharts ‰∏ªË¶ÅÁî±‰ª•‰∏ãÂá†‰ΩçÂºÄÂèëËÄÖÂºÄÂèëÁª¥Êä§\n\n* [@chenjiandongx](https://github.com/chenjiandongx)\n* [@chfw](https://github.com/chfw)\n* [@kinegratii](https://github.com/kinegratii)\n* [@sunhailin-Leo](https://github.com/sunhailin-Leo)\n\nÊõ¥Â§öË¥°ÁåÆËÄÖ‰ø°ÊÅØÂèØ‰ª•ËÆøÈóÆ [pyecharts/graphs/contributors](https://github.com/pyecharts/pyecharts/graphs/contributors)\n\n## üí° Ë¥°ÁåÆ\n\nÊúüÂæÖËÉΩÊúâÊõ¥Â§öÁöÑÂºÄÂèëËÄÖÂèÇ‰∏éÂà∞ pyecharts ÁöÑÂºÄÂèë‰∏≠Êù•ÔºåÊàë‰ª¨‰ºö‰øùËØÅÂ∞ΩÂø´ Reivew PR Âπ∂‰∏îÂèäÊó∂ÂõûÂ§ç„ÄÇ‰ΩÜÊèê‰∫§ PR ËØ∑Á°Æ‰øù\n\n1. ÈÄöËøáÊâÄÊúâÂçïÂÖÉÊµãËØïÔºåÂ¶ÇËã•ÊòØÊñ∞ÂäüËÉΩÔºåËØ∑‰∏∫ÂÖ∂Êñ∞Â¢ûÂçïÂÖÉÊµãËØï\n2. ÈÅµÂÆàÂºÄÂèëËßÑËåÉÔºå‰ΩøÁî® black ‰ª•Âèä isort Ê†ºÂºèÂåñ‰ª£Á†ÅÔºà$ pip install -r requirements-dev.txtÔºâ\n3. Â¶ÇËã•ÈúÄË¶ÅÔºåËØ∑Êõ¥Êñ∞Áõ∏ÂØπÂ∫îÁöÑÊñáÊ°£\n\nÊàë‰ª¨‰πüÈùûÂ∏∏Ê¨¢ËøéÂºÄÂèëËÄÖËÉΩ‰∏∫ pyecharts Êèê‰æõÊõ¥Â§öÁöÑÁ§∫‰æãÔºåÂÖ±ÂêåÊù•ÂÆåÂñÑÊñáÊ°£ÔºåÊñáÊ°£È°πÁõÆ‰Ωç‰∫é [pyecharts/website](https://github.com/pyecharts/website)\n\n## üìÉ License\n\nMIT [¬©chenjiandongx](https://github.com/chenjiandongx)\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.py",
          "type": "blob",
          "size": 0.4912109375,
          "content": "import os\n\nhere = os.path.abspath(os.path.dirname(__file__))\nabout = {}\nwith open(os.path.join(here, \"pyecharts\", \"_version.py\")) as f:\n    exec(f.read(), about)\n\nUNINSTALL = \"{} uninstall pyecharts -y\"\nINSTALL = \"{} install -U dist/pyecharts-{}-py3-none-any.whl --no-cache-dir\"\n\nos.system(\"python setup.py bdist_wheel\")\nos.system(UNINSTALL.format(\"pip\"))\nos.system(UNINSTALL.format(\"pip3\"))\nos.system(INSTALL.format(\"pip\", about[\"__version__\"]))\nos.system(INSTALL.format(\"pip3\", about[\"__version__\"]))\n"
        },
        {
          "name": "pyecharts",
          "type": "tree",
          "content": null
        },
        {
          "name": "recipes",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.02734375,
          "content": "black==24.3.0\nisort==4.3.16\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.037109375,
          "content": "jinja2>=2.11.3\nprettytable\nsimplejson\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.00390625,
          "content": "import os\nimport sys\nfrom shutil import rmtree\n\nfrom setuptools import Command, find_packages, setup\n\n# RELEASE STEPS\n# $ python setup.py upload\n\n\n__title__ = \"pyecharts\"\n__description__ = \"Python options, make charting easier\"\n__url__ = \"https://github.com/pyecharts/pyecharts\"\n__author_email__ = \"chenjiandongx@qq.com\"\n__license__ = \"MIT\"\n\n__requires__ = [\"jinja2\", \"prettytable\", \"simplejson\"]\n__extra_requires__ = {\n    \"selenium\": [\"snapshot-selenium\"],\n    \"phantomjs\": [\"snapshot-phantomjs\"],\n    \"pyppeteer\": [\"snapshot-pyppeteer\"],\n    \"images\": [\"PIL\"],\n}\n\n__keywords__ = [\"Echarts\", \"charts\", \"plotting-tool\"]\n# Load the package's _version.py module as a dictionary.\nhere = os.path.abspath(os.path.dirname(__file__))\nabout = {}\nwith open(os.path.join(here, __title__, \"_version.py\")) as f:\n    exec(f.read(), about)\n\n\n__version__ = about[\"__version__\"]\n\n\nclass UploadCommand(Command):\n    description = \"Build and publish the package.\"\n    user_options = []\n\n    @staticmethod\n    def status(s):\n        print(\"‚ú®‚ú® {0}\".format(s))\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        try:\n            self.status(\"Removing previous builds‚Ä¶\")\n            rmtree(os.path.join(here, \"dist\"))\n            rmtree(os.path.join(here, \"build\"))\n            rmtree(os.path.join(here, \"{0}.egg-info\".format(__title__)))\n        except OSError:\n            pass\n\n        self.status(\"Building Source and Wheel distribution‚Ä¶\")\n        os.system(\"{0} setup.py sdist bdist_wheel\".format(sys.executable))\n\n        self.status(\"Uploading the package to PyPI via Twine‚Ä¶\")\n        os.system(\"twine upload dist/*\")\n\n        self.status(\"Pushing git tags‚Ä¶\")\n        os.system('git tag -a v{0} -m \"release version v{0}\"'.format(__version__))\n        os.system(\"git push origin v{0}\".format(__version__))\n\n        sys.exit()\n\n\nsetup(\n    name=__title__,\n    version=__version__,\n    description=__description__,\n    url=__url__,\n    author=about[\"__author__\"],\n    author_email=__author_email__,\n    license=__license__,\n    packages=find_packages(exclude=(\"test\",)),\n    keywords=__keywords__,\n    install_requires=__requires__,\n    zip_safe=False,\n    include_package_data=True,\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Console\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Topic :: Software Development :: Libraries\",\n    ],\n    cmdclass={\"upload\": UploadCommand},\n    extras_require=__extra_requires__,\n)\n"
        },
        {
          "name": "test.py",
          "type": "blob",
          "size": 0.30078125,
          "content": "import os\n\n# nose2\nos.system(\n    \"nose2 --with-coverage --coverage pyecharts \"\n    \"--coverage-config .coveragerc -s test\"\n)\n\n# pytest\nos.system(\"pytest -cov-config=.coveragerc --cov=./ test/\")\n\n# flake8 for code linting\nos.system(\"flake8 --exclude=build,example,images --max-line-length=89 --ignore=F401\")\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}