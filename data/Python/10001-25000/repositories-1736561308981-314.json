{
  "metadata": {
    "timestamp": 1736561308981,
    "page": 314,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Miserlou/Zappa",
      "stars": 11883,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.158203125,
          "content": "*~\n*.zip\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coveragerc\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# pyenv\n.python-version\n\n# PyCharm\n#  Project settings from the PyCharm IDE are stored in the .idea folder\n.idea/\n\n# Apple OS X specific files are put into the .DS_Store file\n.DS_Store\n\n# Vim stuff:\n*.swp\n*.swo\n*~\ntests/zappa_settings.json\ntests/example_template_outputs\n\n# Locally generated settings file\nzappa_settings.json\n\n# Sublime Text stuff\n*.sublime-project\n*.sublime-workspace\n\nREADME.test.md\n.vscode\n\n.mypy_cache\n.pytest_cache\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.095703125,
          "content": "language: python\npython:\n  - \"3.6\"\n  - \"3.7\"\n  - \"3.8\"\ndist: xenial\n# command to install dependencies\ncache:\n  - pip\ninstall:\n  - \"pip install --upgrade pip; pip install --upgrade setuptools; pip install -r test_requirements.txt; pip install -e git+https://github.com/django/django-contrib-comments.git#egg=django-contrib-comments; python setup.py install\"\n# command to run tests\nenv:\n  - TESTCASE=tests/tests_docs.py\n  - TESTCASE=tests/test_handler.py\n  - TESTCASE=tests/tests_middleware.py\n  - TESTCASE=tests/tests_placebo.py\n  - TESTCASE=tests/tests_async.py\n  - TESTCASE=tests/tests.py\nbefore_script:\n  # stop the build if there are Python syntax errors or undefined names\n  - flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics\n  # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide\n  - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics\nscript:\n  - nosetests $TESTCASE --with-coverage --cover-package=zappa --with-timer\n    #  - coverage combine --append\nafter_success:\n  coveralls\nnotifications:\n  slack: zappateam:TTJ0mfHunDK0IBweKkEXjGpR\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.0087890625,
          "content": "# Zappa Changelog\n\n## 0.52.0\n* Remove dateutil version restriction\n* Fix failed downloads of wheel packages with non-alphanumeric characters\n* Last release from Miserlou/Zappa\n* Removed references to zappa.io\n\n## 0.51.0\n* Lambda Layers\n* Cognito support\n* Skip venv check if --no_venv argument is passed\n* Fix for abi3 filename matching\n* Wait for the Load Balancer to become active before proceeding\n* Add option 'Scheme' for alb config\n* Allow full path exclusions while packaging\n* Workaround for werkzeug incompatibility\n* And assorted fixes\n\n## 0.50.0\n* Updated manylinux to support manylinux1/manylinux2010/manylinux2014 packages\n* Fixed issue with duplicated cookie headers in API Gateway\n* Various maintenance updates to the README file\n* Remove old python 2.7 code (not all yet)\n* Use pip-tools to manage dependencies (and remove pinned dependencies from the package)\n* Add option for concurrency limit\n* Use safe_load with YAML\n* Support for ABI3 binary packages (particularly cryptography)\n* Remove dependency on lambda-packages\n\n## 0.49.0\n* Added support for Python 3.8\n* Fixed boto3 reporting of long names\n* Added support for new AWS Regions\n* Minor bug and README fixes\n\n## 0.48.2\n* Last version with Python 2.7 support.\n* Fix for invalid values of HTTP_HOST and others (introduced in 0.48.0)\n\n## 0.48.1\n* Fix for an issue where you couldn't update a function if it had been deployed with a version prior to 0.48.0\n* Support for private (VPC-only) API Gateway endpoints\n\n## 0.48.0\n* Deprecation of zappa.async because async is a reserved word in 3.7, please use zappa.asynchronous\n* Support for Application Load Balancer as an alternative to API Gateway\n* Improvements in manylinux wheel downloads\n* Support for multi-value query strings\n* Python 3.7 support\n* Support for multi-value headers\n* Support for the new 256kB async limit\n* Bunch of small typos, fixes and documentation improvements\n* Use Django 2 on tests with python 3\n* Stop applying tags on buckets not created by zappa\n* Be more forgiving on 504 errors during deployment\n* Fix cleanup of DynamoDB table for async tasks\n* Detection of invalid bucket names\n* Flake8 checks added to tests\n\n## 0.47.1\n* Handle accounts with more than 100 domains in route 53\n* Force requests upgrade to 2.20.0 for compatibility with urllib3 1.24\n* Allow defining API Gateway policies (including restricting access to one IP address)\n\n## 0.47.0\n* Support for SQS events\n* Added test to enforce running of doctoc\n* Add support for running django as a WSGI app (for NewRelic and others)\n* Updates AWS regions for lambda and API Gateway\n* Fix support for gcloud and other packages with slim_handler\n* Add --disable-keep-open to zappa tail\n* Dependency updates\n* Fix pyenv invocation\n* Add custom base_path stripping support\n* Multiple documentation fixes and improvements\n* first iteration of a documented deploy policy\n\n## 0.46.2\n* hotfix for creating virtual environments\n\n## 0.46.1\n* Hotfix for pipenv support (pip >10.0.1)\n* Adds AWS GovCloud support!\n* Test fix\n\n## 0.46.0\n_Okay, I dropped the ball for a long time. Bad BDFL!_\n_New releases will come much faster once again_\n* Pip10 compatibility\n* Add support for base path configuration in API gateway custom domain.\n* Fix path case sensitivity in get_installed_packages\n* Move task decorator async decision from import time to call time.\n* Fix documentation error in authorizer stanza of zappa_settings.json.\n* Adding explicit UTF-8 encoding for Flask app detection\n* Bump lambda packages version\n* Fix for work with latest Werkezeug\n* Fixed parameter name from 'FunctionNmae' -> 'FunctionName'\n* Remove `use`; fixes #1522\n* Philippe Trounev is awesome\n* fix case sensitivity problem for comparing package location\n* isBase64Encoded is a boolean flag instead of string true\n* check pip return code as sometimes pypi lookup fails\n* Add support to delete old versions of lambda functions.\n* Reactor title casing of dict keys into a utility function\n* Add `role_arn` settings variable\n* ..and too many more, check the changelog!\n\n## 0.45.1\n* Make `package_info.json` consistent across Python versions\n* Fixes to `task_sns`\n\n## 0.45.0\n* Add support for SQLite on Python 3.6 (LP bump)\n* Add unique package identifier file\n* Fixes #1171 don't colorize partial words\n* Various small changes\n* More robust OpenSSL parsing for LE\n* Update applies tags\n* Allows deploying and updating from existing S3 package\n\n## 0.44.3\n* Slim handler packaging hotfix - thanks @mcrowson!\n\n## 0.44.2\n* Non-Dynamo asynx hotfix - thanks @jwkvam!\n\n## 0.44.1\n* Packaging hotfix - thank Yunseop!\n\n## 0.44.0\n* Async responses (thanks Sean!)\n* Remove setLevel call from common log\n* Fix #1023\n* Merge #1058, 1059, 1073\n* Allow overriding of endpoint_url arg\n* Add support for API Gateway stage variables\n* Add AWS X-Ray support (thanks @mathom!)\n* Events take kwargs (Thanks @mcrowson!)\n* Detect P2/3 during `init`\n* Include stage names in `slim_handler` zips\n* Allow `-s` with `manage`\n* Use same S3 bucket for global endpoints\n* Fix bug with mixed-case packages\n* Cache wheels, fix 0-byte wheels\n\n## 0.43.2\n* Add index prefix to each subsequent schedule expression for the same event (#1051)\n* fix/Only update CORS on resources which have an OPTIONS method (#1036)\n* Support for binary support and cors simultaneously (#1011)\n* Set Flask script name based on domain which the request was made to (#1015)\n* Fix SNS Async (#1055)\n* GZip for slim handler\n* Force color option\n* Various dep bumps\n\n## 0.43.1\n* Fixes #1001, don't override AWS env vars if k:v not set. Thanks Nik and Sean!\n\n## 0.43.0\n* Checks for the key 'Environment' when fetching remote lambda env vars (#988)\n* except BotoCoreError before general exception in zappa.cli.update\n* make cookie hack case-insensitive\n* Fix #998 - Make environment variable keys strings instead of byte arrays in python 3.6\n* Add --disable_progress command line parameter\n* #946 - Allow setting cors to false.\n* #870 Lambda from outside\n* Implement context header mappings - Feature Request Issue #939\n* Separating out native AWS environment variables ##962\n* Rule name shortening\n* Splintering aws_environment_variables from environment_variables (to avoid overwriting AWS native env vars).\n\n## 0.42.2\n* Add exclude for __pycache__ contents (#943)\n* Fix #937 - Use get_data\n* Add support for configuring APIGW cache TTL and encryption #942\n* Addressing #909: Don't load credentials for 'package' command\n\n## 0.42.1\n* Small fixes for #918, #922, #803, #802, #799, #888, #903, #893, #828, #874, and others.\n* Support for manylinux wheels Python 3.6 package downloading.\n* Py3 `certify` fixes.\n* Add support for multiple expressions when scheduling\n* Fix content-type headers not passing through on DELETE\n* Avoid creating __init__.py in a directory next to a module (.py file) with the same name\n* Check recursively if there is any .py{,c} file in a directory before creating __init__.py\n* Fix SNS event tasks\n* Bump lambda-packages\n\n## 0.42.0\n* Cached manylinux wheel installed\n* New dependency installation formatting\n* Clarify \"stage\" vs \"environment\" terminology in code\n* Fix problem with capitalized packages\n* Delete local package if using wheels version. This saves several MBs on package size in some cases (e.g. numpy).\n* Thanks to @mcrowson, @nikbora and @schuyler1d\n\n## 0.41.3\n* Various Python3 fixes\n* Remove some dead code\n* More binary package fixes thanks to and @nikbora and @bxm156\n* Improved async tasks thanks to @schuyler1d\n* Various small changes\n\n## 0.41.2\n* Support for new `lambda-packages` format (Python3 support)\n* Fix `setup.py` on Windows Python3\n* Fix #818 - python3 import for LE\n* Support AWS-specific environment variables (with KMS)\n\n## 0.41.1\n* Add `template` command\n* Add `--json` in more places\n* Add `--output` to package\n* Support for manylinux wheels Python 3.6 package downloading #803\nfrom nikbora\n* Fix PyEnv exit code #799\n\n## 0.41.0\n* Add Python3 Support! #793, #6\n* Deprecate `lets_encrypt_expression`\n* Refactor a bunch of stuff to work with Python3 package restrictions >:[\n* #776 fix for libmysqlclient.so.18 error when using `slim_handler`\n* add profile and region detection to init - thanks @pdpol\n* #774 Wsgi environment improvements (Fix untrustworthy remote_addr)\n* Only create `__init__.py` file if there are python files or sub dirs in the folder\n* Update docs to reflect lambda name prepended to role_name\n* Guard log responses (thanks @scoates)\n\n## 0.40.0\n* Add Async Task Support! Lots of tickets and PRs related, including #61, #603, #694 and #732.\n* More info here: https://blog.zappa.io/posts/zappa-introduces-seamless-asynchronous-task-execution\n* Fix Django non-WSGI function initialization, #748\n* Add support for AWS Lambda Dead Letter Queue, #740\n* Fix API Gateway test button (the bolt button), #735\n* Switch to using per-lambda-name (project-stage) rather than a single default LambdaExecutionRole\n\n## 0.39.1\n* Fix broken Let's Encrypt trying to use new ACM ARNs\n* Add `apigateway_description` setting, fixes #722\n* More aggressive virtualenvironment checking\n\n## 0.39.0\n* Add `certificate_arn` setting, support for AWS Certificate Manager (#710)\n* Fix zip permissions when building on Windows (#714)\n* Change the active working directory to `/tmp` when using the slim handler so that relative filepaths work. (#711)\n\n## 0.38.1\n* Hotfix for broken Django deploys\n\n## 0.38.0\n* Add confirm to `certify`\n* Add `--manual` to `--certify`\n* Fix `certify` for existing domains\n* Add `extra_permissions` setting\n* Add `shell` command\n\n## 0.37.2\n* Revert to Kappa 0.6.0 #684 and others\n* Add binary support for more HTTP methods, #696\n\n## 0.37.1\n* Add binary upload support, fix #683\n\n## 0.37.0\n* Add support for custom, non-Let's Encrypt certificates, thanks to Benjamin Congdon\n* Change default permissions to allow executable binaries, #682\n* Fix binary support for Django POST, #677\n\n## 0.36.1\n* Remove Kappa 0.6 specific hack\n* Bring back '-' substitution\n\n## 0.36.0\n* Add automatic support for serving binary files! Via @wobeng, closes #481\n* Fixes `rollback` default back to 1 from 0, #673\n* Ensure correct chmodding during package creation, #484\n* Update regions that Zappa supports, #667\n* Validate function names based on actual gateway rules #521\n* Fix unschedule events with trimmed names #662\n* Fix a few places where `extends` wasn't respecting `stage_config`, #655\n* Begin to remove some dead code\n* Dependency bumps\n\n## 0.35.2\n* Adds `--non-http` to `tail`\n\n## 0.35.1\n* Fix 64bit `lambda-packages` (#645)\n* Fix wheel packages (#642)\n\n## 0.35.0\n* Replace ZappaCookie with Set-Cookie permutation! :D (#636)\n* Bump `lambda-packages` version\n* Fix installed_packages_name_set (#637)\n* Add `slim_handler` (#548)\n* Various small requirements bumps and other fixes.\n\n## 0.34.0\n* Adds `--since` and `--filter` to `tail`\n* Fixes `unschedule` command when used with specific stage\n\n## 0.33.0\n* Adds `package` command\n* Forbids the use of unicode environment variable keys\n* Initialize wsgi.errors to sys.stderr (was '')\n* Accept `AWS_SESSION_TOKEN` when executing via an IAM role (#589)\n* Set `REMOTE_USER` even when using `iam_authorization`\n* Rename `lets_encrypt_schedule` to `lets_encrypt_expression` (#571)\n* Messages in `tail` are now sequential\n* Bump version requirements, update README\n* Various other small changes\n\n## 0.32.1\n* File `tail` broken in CLI refactor\n\n## 0.32.0\n* Add Cognito Authorizers\n* Refactor CLI, add Bash Completion\n* Improve manylinux wheels\n* Varios fixes and req bumps\n\n## 0.31.0\n* Adds the `cors` feature, big thanks to @AusIV!\n* Adds support for `-e` eggs, thanks to @schuyler1d and @xuru!\n* Adds support for YAML settings files. Eat up, hipsters.\n\n## 0.30.1\n* Add `--http` filter to `tail`\n* Prefer `apigateway_enabled` but still respect `use_apigateway`, #493\n\n## 0.30.0\n* Adds colors to `zappa tail` output, fixes #492\n* Adds `--no-color` CLI argument\n* Adds fatal warning for bad `app_function`s, fixes #485.\n\n## 0.29.2\n* Fix S3 broken S3 events\n* Move `use_apigateway` to `apigateway_enabled`\n\n## 0.29.1\n* Fixes progress bar error for manylinux packages\n* Safely handle freezes when downloading from PyPI\n* Adds `s3://` syntax for remote env files. (#478, thanks @Leandr!)\n\n## 0.29.0\n* Adds `extends` syntax to settings file.\n* Fixes Django migrations, #464\n* Adds support for manylinux wheels! #398\n* Fixes multiple events in `status` command\n* Fixes support for `certify` on apex domains, #451\n\n## 0.28.3\n* Filter private hosted zones to avoid conflicts while certifying\n* Fix small Python3 bug (#457)\n* Fix for #453 (windows os.path)\n* Re-raise Zappa exception with full traceback\n* Skip pyc on django migrations, fixes #436\n* Delete correct domain name, #448\n\n## 0.28.2\n* added region and lambda name to not deployed error\n\n## 0.28.1\n* Add \"global\" mode to init. Expect a blog post soon!\n* Small refactors and dependency upgrades.\n\n## 0.28.0\n* `--json` for machine readable status output\n* `--all` for global deployment prep\n* Better exit code handling\n* Get AWS region from profile if not set in zappa_settings.json\n* Fix broken Django management command invocation\n* Add Kinesis permission\n* Add capability to specify authoriser arn\n* Various refactors and small fixes\n\n## 0.27.1\n\n* Bump lambda-packages\n* Fix new Django unicode problems (#397)\n* Ensure env vars are strings via @scoates\n* Fix #382\n\n## 0.27.0\n\n* Remove many hacks using new API Gateway features.\n    * Closes #303, #363, #361\n    * See the [blog post](https://blog.zappa.io/posts/unhacking-zappa-with-new-apigateway-features) for more details!\n* Bump dependencies - make sure you reinstall your requirements!\n* Improved stack update handling.\n\n### 0.26.1 (Never Published)\n\n* Warn on namespace collisions.\n* Bump lambda-packages version.\n\n## 0.26.0\n\n* Use simplified API Gateway configuration, via @koriaf.\n* Add better support for `use_apigateway` without any supplied app function. Reported by @mguidone.\n* Truncate illegally long event functions names. Reported by @mguidone.\n\n## 0.25.1\n\n* Remove 'boto' from default excludes. #333, thanks Claude!\n* Don't allow invalid API Gateway characters in the config. Thanks @scoates!\n* Better respect for `use_apigateway` in `update` command.\n* Avoids hang with API Gateway limit reached.\n* Fix DynamoDB/Kinesis event sources, add docs. Big thanks Claude!\n\n## 0.25.0\n\n* Add ability to invoke raw python strings, like so:\n\n    `zappa invoke dev \"print 1+2+3\" --raw`\n\n* Fixes multi-argument `manage` commands.\n* Updated related documentation.\n* Fixes places where program was exiting with status 0 instead of -1. Thanks @mattc!\n* Adds old-to-new-style check on delete, thanks @mathom.\n\n## 0.24.2\n\n* Fix a problem from trying to `update` old-style API routes using new Tropo code. Ensures `touch` works as intended again. Fix by @mathom.\n\n## 0.24.1\n\n* Add a helpful failure warning for users without permissions to automatically manage execution roles.\n* Fix potential div by zero error in new Tropo code.\n\n## 0.24.0\n\n* Use Troposphere/CloudFormation to create API Gateway routes\n  - Thanks, @mathom!\n* `zappa update` now updates changes to API Gateway routes\n* Redirect HTML content injection is fixed\n* Redirect HTML content injection now only happens for 'text/html' content types. This is a partial solution to #303.\n* Added CHANGELOG.md\n\n## 0.0.1 - 0.23.2\n\n* Didn't keep a changelog\n* Sorry!\n* Read the commit log :)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2017 Rich Jones\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1279296875,
          "content": "include README.md LICENSE requirements.txt test_requirements.txt requirements.in test_requirements.in\nrecursive-include zappa *.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.1796875,
          "content": "Project moved to https://github.com/zappa/Zappa. Versions after 0.52.0 are published from there. Thank you Rich Jones for all your work on creating Zappa and maintaining it for years!\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.in",
          "type": "blob",
          "size": 0.296875,
          "content": "argcomplete\nboto3\ndurationpy\nhjson\njmespath\nkappa==0.6.0\npip>=9.0.1\npython-dateutil\npython-slugify\nPyYAML\nfuture\n# previous version don't work with urllib3 1.24\nrequests>=2.20.0\nsix\ntoml\ntqdm\ntroposphere\n# See https://github.com/Miserlou/Zappa/issues/2036\nWerkzeug<1.0\nwheel\nwsgi-request-logger\npip-tools"
        },
        {
          "name": "requirements.sh",
          "type": "blob",
          "size": 0.2470703125,
          "content": "#! /bin/bash\n\nset -e\n\nARGS=\"\"\nif [ \"$1\" == \"--upgrade\" ]; then\n    ARGS=\"-U\"\nfi\n\npip-compile ${ARGS} -o test_requirements.txt requirements.in test_requirements.in\ncp test_requirements.txt requirements.txt\npip-compile -o requirements.txt requirements.in\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.9033203125,
          "content": "#\n# This file is autogenerated by pip-compile\n# To update, run:\n#\n#    pip-compile --output-file=requirements.txt requirements.in\n#\nargcomplete==1.11.1       # via -r requirements.in (line 1)\nboto3==1.14.2             # via -r requirements.in (line 2), kappa\nbotocore==1.17.2          # via boto3, s3transfer\ncertifi==2020.4.5.2       # via requests\ncfn-flip==1.2.3           # via troposphere\nchardet==3.0.4            # via requests\nclick==7.1.2              # via cfn-flip, kappa, pip-tools\ndocutils==0.15.2          # via botocore\ndurationpy==0.5           # via -r requirements.in (line 3)\nfuture==0.18.2            # via -r requirements.in (line 11)\nhjson==3.0.1              # via -r requirements.in (line 4)\nidna==2.9                 # via requests\njmespath==0.10.0          # via -r requirements.in (line 5), boto3, botocore\nkappa==0.6.0              # via -r requirements.in (line 6)\npip-tools==5.2.1          # via -r requirements.in (line 22)\nplacebo==0.9.0            # via kappa\npython-dateutil==2.8.1    # via -r requirements.in (line 8), botocore\npython-slugify==4.0.0     # via -r requirements.in (line 9)\npyyaml==5.3.1             # via -r requirements.in (line 10), cfn-flip, kappa\nrequests==2.23.0          # via -r requirements.in (line 13)\ns3transfer==0.3.3         # via boto3\nsix==1.15.0               # via -r requirements.in (line 14), cfn-flip, pip-tools, python-dateutil\ntext-unidecode==1.3       # via python-slugify\ntoml==0.10.1              # via -r requirements.in (line 15)\ntqdm==4.46.1              # via -r requirements.in (line 16)\ntroposphere==2.6.1        # via -r requirements.in (line 17)\nurllib3==1.25.9           # via botocore, requests\nwerkzeug==0.16.1          # via -r requirements.in (line 19)\nwheel==0.34.2             # via -r requirements.in (line 20)\nwsgi-request-logger==0.4.6  # via -r requirements.in (line 21)\n\n# The following packages are considered to be unsafe in a requirements file:\n# pip\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.6337890625,
          "content": "import os\nimport sys\nfrom setuptools import setup\nfrom io import open\nfrom zappa import __version__\n\nwith open('README.md') as readme_file:\n    long_description = readme_file.read()\n\nwith open(os.path.join(os.path.dirname(__file__), 'requirements.in')) as f:\n    required = f.read().splitlines()\n\nwith open(os.path.join(os.path.dirname(__file__), 'test_requirements.in')) as f:\n    test_required = f.read().splitlines()\n\nsetup(\n    name='zappa',\n    version=__version__,\n    packages=['zappa'],\n    install_requires=required,\n    tests_require=test_required,\n    test_suite='nose.collector',\n    include_package_data=True,\n    license='MIT License',\n    description='Server-less Python Web Services for AWS Lambda and API Gateway',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    url='https://github.com/Miserlou/Zappa',\n    author='Rich Jones',\n    author_email='rich@openwatch.net',\n    entry_points={\n        'console_scripts': [\n            'zappa=zappa.cli:handle',\n            'z=zappa.cli:handle',\n        ]\n    },\n    classifiers=[\n        'Environment :: Console',\n        'License :: OSI Approved :: Apache Software License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Framework :: Django',\n        'Framework :: Django :: 1.11',\n        'Framework :: Django :: 2.0',\n        'Framework :: Django :: 3.0',\n        'Topic :: Internet :: WWW/HTTP',\n        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',\n    ],\n)\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.1435546875,
          "content": "#! /bin/bash\nnosetests --with-coverage --cover-package=zappa\n\n# For a specific test:\n# nosetests tests.tests:TestZappa.test_lets_encrypt_sanity -s\n"
        },
        {
          "name": "test_requirements.in",
          "type": "blob",
          "size": 0.05859375,
          "content": "coveralls\nDjango\nflake8\nFlask\nmock\nnose\nnose-timer\nplacebo\n\n"
        },
        {
          "name": "test_requirements.txt",
          "type": "blob",
          "size": 2.865234375,
          "content": "#\n# This file is autogenerated by pip-compile\n# To update, run:\n#\n#    pip-compile --output-file=test_requirements.txt requirements.in test_requirements.in\n#\nargcomplete==1.11.1       # via -r requirements.in (line 1)\nasgiref==3.2.7            # via django\nboto3==1.14.2             # via -r requirements.in (line 2), kappa\nbotocore==1.17.2          # via boto3, s3transfer\ncertifi==2020.4.5.2       # via requests\ncfn-flip==1.2.3           # via troposphere\nchardet==3.0.4            # via requests\nclick==7.1.2              # via cfn-flip, flask, kappa, pip-tools\ncoverage==5.1             # via coveralls\ncoveralls==2.0.0          # via -r test_requirements.in (line 1)\ndjango==3.0.7             # via -r test_requirements.in (line 2)\ndocopt==0.6.2             # via coveralls\ndocutils==0.15.2          # via botocore\ndurationpy==0.5           # via -r requirements.in (line 3)\nflake8==3.8.3             # via -r test_requirements.in (line 3)\nflask==1.1.2              # via -r test_requirements.in (line 4)\nfuture==0.18.2            # via -r requirements.in (line 11)\nhjson==3.0.1              # via -r requirements.in (line 4)\nidna==2.9                 # via requests\nitsdangerous==1.1.0       # via flask\njinja2==2.11.2            # via flask\njmespath==0.10.0          # via -r requirements.in (line 5), boto3, botocore\nkappa==0.6.0              # via -r requirements.in (line 6)\nmarkupsafe==1.1.1         # via jinja2\nmccabe==0.6.1             # via flake8\nmock==4.0.2               # via -r test_requirements.in (line 5)\nnose-timer==1.0.0         # via -r test_requirements.in (line 7)\nnose==1.3.7               # via -r test_requirements.in (line 6), nose-timer\npip-tools==5.2.1          # via -r requirements.in (line 22)\nplacebo==0.9.0            # via -r test_requirements.in (line 8), kappa\npycodestyle==2.6.0        # via flake8\npyflakes==2.2.0           # via flake8\npython-dateutil==2.8.1    # via -r requirements.in (line 8), botocore\npython-slugify==4.0.0     # via -r requirements.in (line 9)\npytz==2020.1              # via django\npyyaml==5.3.1             # via -r requirements.in (line 10), cfn-flip, kappa\nrequests==2.23.0          # via -r requirements.in (line 13), coveralls\ns3transfer==0.3.3         # via boto3\nsix==1.15.0               # via -r requirements.in (line 14), cfn-flip, pip-tools, python-dateutil\nsqlparse==0.3.1           # via django\ntext-unidecode==1.3       # via python-slugify\ntoml==0.10.1              # via -r requirements.in (line 15)\ntqdm==4.46.1              # via -r requirements.in (line 16)\ntroposphere==2.6.1        # via -r requirements.in (line 17)\nurllib3==1.25.9           # via botocore, requests\nwerkzeug==0.16.1          # via -r requirements.in (line 19), flask\nwheel==0.34.2             # via -r requirements.in (line 20)\nwsgi-request-logger==0.4.6  # via -r requirements.in (line 21)\n\n# The following packages are considered to be unsafe in a requirements file:\n# pip\n"
        },
        {
          "name": "test_settings.json",
          "type": "blob",
          "size": 3.5244140625,
          "content": "{\n    \"ttt888\": {\n       \"touch\": false,\n       \"s3_bucket\": \"lmbda\",\n       \"app_function\": \"tests.test_app.hello_world\",\n       \"use_precompiled_packages\": false,\n       \"callbacks\": {\n           \"settings\": \"tests.test_app.callback\",\n           \"post\": \"tests.test_app.callback\",\n           \"zip\": \"test_settings.callback\"\n       },\n       \"delete_local_zip\": true,\n       \"debug\": true,\n       \"parameter_depth\": 2,\n       \"prebuild_script\": \"tests.test_app.prebuild_me\",\n       \"environment_variables\": {\n           \"TEST_ENV_VAR\": \"test_value\"\n       },\n       \"context_header_mappings\": {\n           \"CognitoIdentityId\": \"identity.cognitoIdentityId\",\n           \"APIStage\": \"stage\"\n       },\n       \"events\": [\n           {\n               \"function\": \"tests.test_app.schedule_me\",\n               \"expression\": \"rate(1 minute)\"\n           },\n           {\n               \"function\": \"test.test_app.method\",\n               \"event_source\": {\n                   \"arn\": \"arn:aws:sns:::1\",\n                   \"events\": [\n                     \"sns:Publish\"\n                   ]\n               }\n           },\n           {\n               \"function\": \"test.test_app.method_filters\",\n               \"event_source\": {\n                   \"arn\": \"arn:aws:sns:::with-filters\",\n                   \"filters\": {\n                        \"interests\": [\"python\", \"aws\", \"zappa\"],\n                        \"version\": [\"1.0\"]\n                    },\n                   \"events\": [\n                     \"sns:Publish\"\n                   ]\n               }\n           }\n       ],\n       \"cognito\": {\n           \"user_pool\": \"user-pool-id\",\n           \"triggers\": [\n                {\"source\": \"PreSignUp_SignUp\",\n                 \"function\": \"test.tasks.pre_signup_function\"\n                }\n            ]\n      }\n    },\n    \"devor\": {\n       \"s3_bucket\": \"lmbda\",\n       \"app_function\": \"tests.test_app.hello_world\",\n       \"callbacks\": {\n           \"settings\": \"test_settings.callback\",\n           \"post\": \"test_settings.callback\",\n           \"zip\": \"test_settings.callback\"\n       },\n       \"delete_local_zip\": true,\n       \"debug\": true,\n       \"parameter_depth\": 2,\n       \"prebuild_script\": \"test_settings.prebuild_me\",\n       \"events\": [{\n          \"function\": \"tests.test_app.schedule_me\",\n          \"expression\": \"rate(1 minute)\"\n       }]\n    },\n    \"extendo\": {\n       \"extends\": \"ttt888\",\n       \"touch\": true,\n       \"prebuild_script\": \"test_settings.prebuild_me\",\n       \"environment_variables\": {\n          \"EXTENDO\": \"You bet\"\n       }\n    },\n    \"extendo2\": {\n       \"extends\": \"extendo\",\n       \"s3_bucket\": \"lmbda2\"\n    },\n    \"slim_handler\": {\n       \"extends\": \"ttt888\",\n       \"slim_handler\": true,\n       \"delete_local_zip\": true\n    },\n    \"deprecated_remote_env\": {\n       \"s3_bucket\": \"lmbda\",\n       \"remote_env_bucket\": \"lmbda-env\",\n       \"remote_env_file\": \"dev/env.json\"\n    },\n    \"remote_env\": {\n       \"s3_bucket\": \"lmbda\",\n       \"remote_env\": \"s3://lmbda-env/prod/env.json\"\n    },\n    \"extendofail\": {\n       \"extends\": \"failfail\",\n       \"prebuild_script\": \"test_settings.prebuild_me\",\n       \"environment_variables\": {\n          \"EXTENDO\": \"You bet\"\n       }\n    },\n    \"build_package_only_delete_local_zip_false\": {\n      \"delete_local_zip\": false,\n      \"use_precompiled_packages\": false,\n      \"delete_s3_zip\": false\n    },\n    \"build_package_only_delete_local_zip_true\": {\n      \"delete_local_zip\": true,\n      \"use_precompiled_packages\": false,\n      \"delete_s3_zip\": false\n    },\n    \"lambda_concurrency_enabled\": {\n        \"extends\": \"ttt888\",\n        \"lambda_concurrency\": 6\n     }\n}\n"
        },
        {
          "name": "test_settings.py",
          "type": "blob",
          "size": 1.294921875,
          "content": "APP_MODULE = 'tests.test_app'\nAPP_FUNCTION = 'hello_world'\nDJANGO_SETTINGS = None\nDEBUG = 'True'\nLOG_LEVEL = 'DEBUG'\nSCRIPT_NAME = 'hello_world'\nDOMAIN = None\nAPI_STAGE = 'ttt888'\nPROJECT_NAME = 'ttt888'\n\nREMOTE_ENV='s3://lmbda/test_env.json'\n## test_env.json\n#{\n#    \"hello\": \"world\"\n#}\n#\n\nAWS_EVENT_MAPPING = {\n    'arn:aws:s3:1': 'test_settings.aws_s3_event',\n    'arn:aws:sns:1': 'test_settings.aws_sns_event',\n    'arn:aws:dynamodb:1': 'test_settings.aws_dynamodb_event',\n    'arn:aws:kinesis:1': 'test_settings.aws_kinesis_event',\n    'arn:aws:sqs:1': 'test_settings.aws_sqs_event'\n}\n\nENVIRONMENT_VARIABLES={'testenv': 'envtest'}\n\nAUTHORIZER_FUNCTION='test_settings.authorizer_event'\n\n\ndef prebuild_me():\n    print(\"This is a prebuild script!\")\n\n\ndef callback(self):\n    print(\"this is a callback\")\n\n\ndef aws_s3_event(event, content):\n    return \"AWS S3 EVENT\"\n\n\ndef aws_sns_event(event, content):\n    return \"AWS SNS EVENT\"\n\ndef aws_async_sns_event(arg1, arg2, arg3):\n    return \"AWS ASYNC SNS EVENT\"\n\n\ndef aws_dynamodb_event(event, content):\n    return \"AWS DYNAMODB EVENT\"\n\n\ndef aws_kinesis_event(event, content):\n    return \"AWS KINESIS EVENT\"\n\n\ndef aws_sqs_event(event, content):\n    return \"AWS SQS EVENT\"\n\n\ndef authorizer_event(event, content):\n    return \"AUTHORIZER_EVENT\"\n\n\ndef command():\n    print(\"command\")\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "zappa",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}