{
  "metadata": {
    "timestamp": 1736561345663,
    "page": 372,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rougier/scientific-visualization-book",
      "stars": 10766,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.8896484375,
          "content": "# --- OSX ---------------------------------------------------------------------\n*.DS_Store\n\n\n# --- Generated files ---------------------------------------------------------\ntex/00-dedication.tex\ntex/00-forewords.tex\ntex/00-introduction.tex\ntex/00-acknowledgments.tex\ntex/00-preface.tex\ntex/main.tex\ntex/book.pdf\ntex/hardcover-body.pdf\ntex/hardcover-cover.pdf\ntex/softcover-body.pdf\ntex/softcover-cover.pdf\ntex/full-cover.pdf\ntex/front-cover.pdf\ntex/back-cover.pdf\npdf/\n\n# --- Tex/LaTeX ---------------------------------------------------------------\n## Core latex/pdflatex auxiliary files:\n*.aux\n*.lof\n*.log\n*.lot\n*.fls\n*.out\n*.toc\n*.fmt\n*.fot\n*.cb\n*.cb2\n.*.lb\n\n## Intermediate documents:\n*.dvi\n*.xdv\n*-converted-to.*\n# these rules might exclude image files for figures etc.\n# *.ps\n# *.eps\n# *.pdf\n\n## Generated if empty string is given at \"Please type another file name for output:\"\n.pdf\n\n## Bibliography auxiliary files (bibtex/biblatex/biber):\n*.bbl\n*.bcf\n*.blg\n*-blx.aux\n*-blx.bib\n*.run.xml\n\n## Build tool auxiliary files:\n*.fdb_latexmk\n*.synctex\n*.synctex(busy)\n*.synctex.gz\n*.synctex.gz(busy)\n*.pdfsync\n\n## Build tool directories for auxiliary files\n# latexrun\nlatex.out/\n\n## Auxiliary and intermediate files from other packages:\n# algorithms\n*.alg\n*.loa\n\n# achemso\nacs-*.bib\n\n# amsthm\n*.thm\n\n# beamer\n*.nav\n*.pre\n*.snm\n*.vrb\n\n# changes\n*.soc\n\n# comment\n*.cut\n\n# cprotect\n*.cpt\n\n# elsarticle (documentclass of Elsevier journals)\n*.spl\n\n# endnotes\n*.ent\n\n# fixme\n*.lox\n\n# feynmf/feynmp\n*.mf\n*.mp\n*.t[1-9]\n*.t[1-9][0-9]\n*.tfm\n\n#(r)(e)ledmac/(r)(e)ledpar\n*.end\n*.?end\n*.[1-9]\n*.[1-9][0-9]\n*.[1-9][0-9][0-9]\n*.[1-9]R\n*.[1-9][0-9]R\n*.[1-9][0-9][0-9]R\n*.eledsec[1-9]\n*.eledsec[1-9]R\n*.eledsec[1-9][0-9]\n*.eledsec[1-9][0-9]R\n*.eledsec[1-9][0-9][0-9]\n*.eledsec[1-9][0-9][0-9]R\n\n# glossaries\n*.acn\n*.acr\n*.glg\n*.glo\n*.gls\n*.glsdefs\n*.lzo\n*.lzs\n\n# uncomment this for glossaries-extra (will ignore makeindex's style files!)\n# *.ist\n\n# gnuplottex\n*-gnuplottex-*\n\n# gregoriotex\n*.gaux\n*.gtex\n\n# htlatex\n*.4ct\n*.4tc\n*.idv\n*.lg\n*.trc\n*.xref\n\n# hyperref\n*.brf\n\n# knitr\n*-concordance.tex\n# TODO Comment the next line if you want to keep your tikz graphics files\n*.tikz\n*-tikzDictionary\n\n# listings\n*.lol\n\n# luatexja-ruby\n*.ltjruby\n\n# makeidx\n*.idx\n*.ilg\n*.ind\n\n# minitoc\n*.maf\n*.mlf\n*.mlt\n*.mtc[0-9]*\n*.slf[0-9]*\n*.slt[0-9]*\n*.stc[0-9]*\n\n# minted\n_minted*\n*.pyg\n\n# morewrites\n*.mw\n\n# nomencl\n*.nlg\n*.nlo\n*.nls\n\n# pax\n*.pax\n\n# pdfpcnotes\n*.pdfpc\n\n# sagetex\n*.sagetex.sage\n*.sagetex.py\n*.sagetex.scmd\n\n# scrwfile\n*.wrt\n\n# sympy\n*.sout\n*.sympy\nsympy-plots-for-*.tex/\n\n# pdfcomment\n*.upa\n*.upb\n\n# pythontex\n*.pytxcode\npythontex-files-*/\n\n# tcolorbox\n*.listing\n\n# thmtools\n*.loe\n\n# TikZ & PGF\n*.dpth\n*.md5\n*.auxlock\n\n# todonotes\n*.tdo\n\n# vhistory\n*.hst\n*.ver\n\n# easy-todo\n*.lod\n\n# xcolor\n*.xcp\n\n# xmpincl\n*.xmpi\n\n# xindy\n*.xdy\n\n# xypic precompiled matrices and outlines\n*.xyc\n*.xyd\n\n# endfloat\n*.ttt\n*.fff\n\n# Latexian\nTSWLatexianTemp*\n\n## Editors:\n# WinEdt\n*.bak\n*.sav\n\n# Texpad\n.texpadtmp\n\n# LyX\n*.lyx~\n\n# Kile\n*.backup\n\n# gummi\n.*.swp\n\n# KBibTeX\n*~[0-9]*\n\n# auto folder when using emacs and auctex\n./auto/*\n*.el\n\n# expex forward references with \\gathertags\n*-tags.tex\n\n# standalone packages\n*.sta\n\n# Makeindex log files\n*.lpz\n\n\n# --- Python ------------------------------------------------------------------\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.8671875,
          "content": "\n\nBook\n----\n\nThis book is licensed under a Creative Commons Attribution\nNon‐Commercial Share‐Alike 4.0 International License, which permits\nuse, sharing, adaptation, distribution and reproduction in any medium\nor format, as long as you give appropriate credit to the original\nauthor(s) and the source, provide a link to the Creative Commons\nlicense, and indicate if changes were made. You may not use the\nmaterial for commercial purposes. If you remix, transform, or build\nupon the material, you must distribute your contributions under the\nsame license as the original. To learn more, visit creativecommons.org\n\n\nCode\n----\n\nCopyright 2021 Nicolas P. Rougier\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the\n   distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.4296875,
          "content": "#\n# The build requires docutils 0.17 since 0.18 breaks the build process.\n#\nTEX_DIR = tex\nPDF_DIR = pdf\nRST_DIR = rst\nRST_FILES := $(wildcard $(RST_DIR)/*.rst)\n\nDEPS := $(TEX_DIR)/book.tex            \\\n        $(TEX_DIR)/main.tex            \\\n        $(TEX_DIR)/00-dedication.tex   \\\n        $(TEX_DIR)/00-preface.tex      \\\n        $(TEX_DIR)/00-introduction.tex \\\n        $(TEX_DIR)/00-acknowledgments.tex \\\n        $(RST_FILES)\n\nall: directories pdf\n\n.PHONY: help\nhelp:\n\t@echo  \"Targets\"\n\t@echo  \"-------\"\n\t@echo  \"\"\n\t@echo  \"  pdf              - Build PDF (body + cover)\"\n\t@echo  \"\"\n\t@echo  \"  hardcover        - Build PDF (body + cover) for a hardcover printed book\"\n\t@echo  \"  hardcover-cmyk   - Convert hardcover PDF to CMYK colors\"\n\t@echo  \"  hardcover-count  - Enumerate color pages in the hardcover PDF (body)\"\n\t@echo  \"\"\n\t@echo  \"  softcover        - Build PDF (body + cover) for a softcover printed book\"\n\t@echo  \"  softcover-cmyk   - Convert softcover PDF to CMYK colors\"\n\t@echo  \"  softcover-count  - Enumerate color pages in the softcover PDF (body)\"\n\t@echo  \"\"\n\n\n.PHONY: directories\ndirectories:\n\tmkdir -p pdf\n\nhardcover: hardcover-body hardcover-cover\n\nsoftcover: softcover-body softcover-cover\n\nhardcover-cmyk: hardcover-body-cmyk hardcover-cover-cmyk\n\nsoftcover-cmyk: softcover-body-cmyk softcover-cover-cmyk\n\npdf: $(DEPS) $(TEX_DIR)/front-cover.pdf $(TEX_DIR)/back-cover.pdf\n\t@latexmk -pdfxe -cd -bibtex -shell-escape -silent -jobname=\"book\" -pretex=\"\" -use-make -usepretex $(TEX_DIR)/book.tex\n\t@cp $(TEX_DIR)/book.pdf $(PDF_DIR)\n\npdf-compressed: pdf\n\t@gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.5 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$(PDF_DIR)/book-compressed.pdf $(PDF_DIR)/book.pdf\n\n\n\n# Build front cover from the hardcover \nfront-cover: softcover-cover\n\t@latexmk -cd -silent -pdf -use-make $(TEX_DIR)/front-cover.tex \n\n# Build back cover from the hardcover \nback-cover: softcover-cover\n\t@latexmk -cd -silent -pdf -use-make $(TEX_DIR)/back-cover.tex \n\n\n\n# Build softcover book (body)\nsoftcover-body: $(DEPS)\n\t@latexmk -pdfxe -cd -silent -jobname=\"softcover-body\" -pretex=\"\\def\\softcover{1}\" -use-make -usepretex $(TEX_DIR)/book.tex\n\t@cp $(TEX_DIR)/softcover-body.pdf $(PDF_DIR)\n\n# Build softcover book (cover)\nsoftcover-cover: $(TEX_DIR)/full-cover.tex\n\t@latexmk -pdfxe -cd -silent -jobname=\"softcover-cover\" -pretex=\"\\def\\softcover{1}\" -use-make -usepretex $(TEX_DIR)/full-cover.tex\n\t@cp $(TEX_DIR)/softcover-cover.pdf $(PDF_DIR)\n\n# Convert softcover book (body) to CMYK\nsoftcover-body-cmyk: $(TEX_DIR)/softcover-body.pdf\n\t@gs -dSAFER -dNOPAUSE -dBATCH \\\n        -dAutoRotatePages=/None \\\n\t    -sColorConversionStrategy=CMYK -sProcessColorModel=DeviceCMYK \\\n        -dOverrideICC=true -dRenderIntent=3 -dDeviceGrayToK=true \\\n\t    -sDEVICE=pdfwrite -sOutputFile=$(PDF_DIR)/softcover-body-cmyk.pdf \\\n\t    $(TEX_DIR)/softcover-body.pdf\n\n# Convert softcover book (body) to CMYK\nsoftcover-cover-cmyk: $(TEX_DIR)/softcover-cover.pdf\n\t@gs -dSAFER -dNOPAUSE -dBATCH  \\\n\t    -dAutoRotatePages=/None \\\n\t\t-sColorConversionStrategy=CMYK -sProcessColorModel=DeviceCMYK \\\n        -dOverrideICC=true -dRenderIntent=3 -dDeviceGrayToK=true \\\n\t\t-sDEVICE=pdfwrite -sOutputFile=$(PDF_DIR)/softcover-cover-cmyk.pdf \\\n\t    $(TEX_DIR)/softcover-cover.pdf\n\nsoftcover-count: $(TEX_DIR)/softcover-body.pdf\n\t@gs -o - -sDEVICE=inkcov $(TEX_DIR)/softcover-body.pdf \\\n        | tail -n +6 \\\n        | sed '/^Page*/N;s/\\n//' \\\n        | sed -E '/Page [0-9]+ 0.00000  0.00000  0.00000  / d' \\\n        | cut -f 2 -d ' ' \\\n        | xargs -I {} echo -n {},; echo\n\n\n\n# Build hardcover book (body)\nhardcover-body: $(DEPS)\n\t@latexmk -pdfxe -cd -silent -jobname=\"hardcover-body\" -pretex=\"\\def\\hardcover{1}\" -use-make -usepretex $(TEX_DIR)/book.tex\n\t@cp $(TEX_DIR)/hardcover-body.pdf $(PDF_DIR)\n\n# Build hardcover book (cover)\nhardcover-cover: $(TEX_DIR)/full-cover.tex\n\t@latexmk -pdfxe -cd -silent -jobname=\"hardcover-cover\" -pretex=\"\\def\\hardcover{1}\" -use-make -usepretex $(TEX_DIR)/full-cover.tex\n\t@cp $(TEX_DIR)/hardcover-cover.pdf $(PDF_DIR)\n\n# Convert hardcover book (body) to CMYK\nhardcover-body-cmyk: $(TEX_DIR)/hardcover-body.pdf\n\t@gs -dSAFER -dNOPAUSE -dBATCH \\\n\t    -dAutoRotatePages=/None \\\n\t    -sColorConversionStrategy=CMYK -sProcessColorModel=DeviceCMYK \\\n\t    -sDEVICE=pdfwrite -sOutputFile=$(PDF_DIR)/hardcover-body-cmyk.pdf \\\n\t    $(TEX_DIR)/hardcover-body.pdf\n\n# Convert hardcover book (body) to CMYK\nhardcover-cover-cmyk: $(TEX_DIR)/hardcover-cover.pdf\n\t@gs -dSAFER -dNOPAUSE -dBATCH  \\\n\t\t-dAutoRotatePages=/None \\\n\t    -sColorConversionStrategy=CMYK -sProcessColorModel=DeviceCMYK \\\n\t\t-sDEVICE=pdfwrite -sOutputFile=$(PDF_DIR)/hardcover-cover-cmyk.pdf \\\n\t    $(TEX_DIR)/hardcover-cover.pdf\n\nhardcover-count: $(TEX_DIR)/hardcover-body.pdf\n\t@gs -o - -sDEVICE=inkcov $(TEX_DIR)/hardcover-body.pdf \\\n        | tail -n +6 \\\n        | sed '/^Page*/N;s/\\n//' \\\n        | sed -E '/Page [0-9]+ 0.00000  0.00000  0.00000  / d' \\\n        | cut -f 2 -d ' ' \\\n        | xargs -I {} echo -n {},; echo\n\n\n\n$(TEX_DIR)/00-%.tex: $(RST_DIR)/00-%.rst\n\t@echo \"Building $@\"\n\t@./rst2latex.py --documentclass=book   \\\n                    --no-doc-title         \\\n\t\t            --table-style=booktabs \\\n                    --trim-footnote-reference-space \\\n\t\t\t\t    --use-latex-citations  \\\n\t\t\t\t    --figure-citations     \\\n                    --reference-label=ref* \\\n                    --strip-comments       \\\n                    --template=$(RST_DIR)/chapter.tex \\\n                    $< > $@\n\n$(TEX_DIR)/%.tex: $(RST_DIR)/%.rst $(RST_FILES)\n\t@echo \"Building $@\"\n\t@./rst2latex.py --documentclass=book   \\\n                    --use-part-section     \\\n                    --no-doc-title         \\\n\t\t            --table-style=booktabs \\\n\t\t\t\t    --use-latex-citations  \\\n\t\t\t\t    --figure-citations     \\\n                    --reference-label=ref* \\\n                    --strip-comments       \\\n                    --template=$(RST_DIR)/chapter.tex \\\n                    $< > $@\n\n.PHONY: clean\nclean:\n\t@rm -f $(TEX_DIR)/*.aux\n\t@rm -f $(TEX_DIR)/*.log\n\t@rm -f $(TEX_DIR)/*.blg\n\t@rm -f $(TEX_DIR)/*.fls\n\t@rm -f $(TEX_DIR)/*.run.xml\n\t@rm -f $(TEX_DIR)/*.bcf\n\t@rm -f $(TEX_DIR)/*.xdv\n\t@rm -f $(TEX_DIR)/*.toc\n\t@rm -f $(TEX_DIR)/*.out\n\t@rm -f $(TEX_DIR)/*.fdb_latexmk\n\t@rm -f $(TEX_DIR)/book.pdf\n\t@rm -f $(TEX_DIR)/hardcover-body.pdf\n\t@rm -f $(TEX_DIR)/softcover-body.pdf\n\t@rm -f $(TEX_DIR)/main.tex\n\t@rm -f $(TEX_DIR)/00-preface.tex\n\t@rm -f $(TEX_DIR)/00-introduction.tex\n\t@rm -f $(TEX_DIR)/00-dedication.tex\n\t@rm -f $(TEX_DIR)/00-acknowledgments.tex\n\t@echo \"Cleanup complete!\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6767578125,
          "content": "## Scientific Visualization: Python + Matplotlib\n**Nicolas P. Rougier, Bordeaux, November 2021.**  \n\n<img src=\"images/book.png\" width=\"25%\" alt=\"Front cover\" align=\"left\"/>\n\nThe Python scientific visualisation landscape is huge. It is composed of a myriad of tools, ranging from the most versatile and widely used down to the more specialised and confidential. Some of these tools are community based while others are developed by companies. Some are made specifically for the web, others are for the desktop only, some deal with 3D and large data, while others target flawless 2D rendering. In this landscape, Matplotlib has a very special place. It is a versatile and powerful library that allows you to design very high quality figures, suitable for scientific publishing. It also offers a simple and intuitive interface as well as an object oriented architecture that allows you to tweak anything within a figure. Finally, it can be used as a regular graphic library in order to design non‐scientific figures. This book is organized into four parts. The first part considers the fundamental principles of the Matplotlib library. This includes reviewing the different parts that constitute a figure, the different coordinate systems, the available scales and projections, and we’ll also introduce a few concepts related to typography and colors. The second part is dedicated to the actual design of a figure. After introducing some simple rules for generating better figures, we’ll then go on to explain the Matplotlib defaults and styling system before diving on into figure layout organization. We’ll then explore the different types of plot available and see how a figure can be ornamented with different elements. The third part is dedicated to more advanced concepts, namely 3D figures, optimization & animation.  The fourth and final part is a collection of showcases.\n\n### Read the book\n\nYou can read the book **[PDF](https://hal.inria.fr/hal-03427242/document)** (95Mo, preferred site) that is open access and hosted on\n[HAL](https://hal.archives-ouvertes.fr/) which is a French open\narchive for academics. Up to date version is also available on GitHub [here](pdf/book.pdf). Sources for the book (including code examples)\nare available at\n[github.com/rougier/scientific-visualization-book](https://github.com/rougier/scientific-visualization-book).  \n\n### Buy the book\n\nIf you want to buy the book, you can order a **printed edition** at\n[amazon.com](https://www.amazon.com/dp/2957990105) for 49$. If you want to support or sponsor my\nfuture work on Python (and\n[Emacs](https://github.com/rougier/nano-emacs)), you can use\n[paypal](https://www.paypal.com/paypalme/NicolasPRougier/10),\n[github](https://github.com/sponsors/rougier) or\n[liberapay](https://en.liberapay.com/rougier/).\n\n<a href=\"https://www.paypal.com/paypalme/NicolasPRougier/5\"><img src=\"https://img.shields.io/badge/-TIP_5$-yellow.svg?style=flat-square\"/><a/> \n <a href=\"https://www.paypal.com/paypalme/NicolasPRougier/10\"><img src=\"https://img.shields.io/badge/-TIP_10$-orange.svg?style=flat-square\"/><a/>\n <a href=\"https://www.paypal.com/paypalme/NicolasPRougier/25\"><img src=\"https://img.shields.io/badge/-TIP_25$-red.svg?style=flat-square\"/><a/> \n <a href=\"https://github.com/sponsors/rougier/sponsorships?sponsor=rougier&tier_id=6981&preview=false\"><img src=\"https://img.shields.io/badge/-5$/Mo-yellow.svg?style=flat-square&logo=github\"/><a/> <a href=\"https://github.com/sponsors/rougier/sponsorships?sponsor=rougier&tier_id=11147&preview=false\"><img src=\"https://img.shields.io/badge/-10$/Mo-orange.svg?style=flat-square&logo=github\"/><a/> \n<a href=\"https://github.com/sponsors/rougier/sponsorships?sponsor=rougier&tier_id=108712&preview=false\"><img src=\"https://img.shields.io/badge/-25$/Mo-red.svg?style=flat-square&logo=github\"/><a/> \n<a href=\"https://en.liberapay.com/rougier/donate\"><img src=\"https://img.shields.io/badge/-PATRON/Week-green.svg?style=flat-square&logo=liberapay&logoColor=white\"/><a/> \n\nIf you don't want to spend money, you can simply [nominate me](https://stars.github.com/nominate/) for the GitHub stars program if you find my work useful for the community.\n\n### Build the book\n\n**Ubuntu**  \n- [Article](https://labdmitriy.github.io/blog/building-scientific-visualization-book/)  \n- [Script](scripts/build_book/ubuntu.sh)\n\n### See also\n\n* [Python & OpenGL for Scientific Visualization](https://www.labri.fr/perso/nrougier/python-opengl/)\n* [From Python to Numpy](https://www.labri.fr/perso/nrougier/from-python-to-numpy/) (Scientific Python Volume I)\n* [100 Numpy exercices](https://github.com/rougier/numpy-100)\n* [Matplotlib cheat sheets](https://github.com/matplotlib/cheatsheets)\n\n\n### Book gallery\n\n<img src=\"images/contour-dropshadow.png\" width=\"31%\"/> <img src=\"images/domain-coloring.png\" width=\"31%\"/> <img src=\"images/metropolis.png\" width=\"31%\"/>\n<img src=\"images/zorder-plots.png\" width=\"31%\"/> <img src=\"images/scales.png\" width=\"31%\"/> <img src=\"images/histogram-pca.png\" width=\"31%\"/> \n<img src=\"images/hatched-bars.png\" width=\"31%\"/> <img src=\"images/platonic-solids.png\" width=\"31%\"/> <img src=\"images/projection-3d-gaussian.png\" width=\"31%\"/>\n<img src=\"images/polygon-clipping.png\" width=\"31%\"/> <img src=\"images/multisample.png\" width=\"31%\"/> <img src=\"images/typography-matters.png\" width=\"31%\"/>\n<img src=\"images/scatter-3d.png\" width=\"31%\"/> <img src=\"images/waterfall-3d.png\" width=\"31%\"/> <img src=\"images/bunnies.png\" width=\"31%\"/>\n<img src=\"images/polar-projection.png\" width=\"31%\"/> <img src=\"images/recursive-voronoi.png\" width=\"31%\"/> <img src=\"images/text-polar.png\" width=\"31%\"/>\n<img src=\"images/spiral-pi.png\" width=\"31%\"/> <img src=\"images/escher.png\" width=\"31%\"/> <img src=\"images/radial-maze.png\" width=\"31%\"/>\n<img src=\"images/text-shadow.png\" width=\"95%\"/>\n\n"
        },
        {
          "name": "code",
          "type": "tree",
          "content": null
        },
        {
          "name": "cover",
          "type": "tree",
          "content": null
        },
        {
          "name": "figures",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "pdf",
          "type": "tree",
          "content": null
        },
        {
          "name": "rst",
          "type": "tree",
          "content": null
        },
        {
          "name": "rst2latex.py",
          "type": "blob",
          "size": 1.525390625,
          "content": "#!/usr/bin/env python3\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nfrom __future__ import unicode_literals\n\n\n\"\"\"\nA customized front end to the Docutils Publisher, producing LaTeX with valid codeblocks using the listings package.\n\"\"\"\n\ntry:\n    import locale\n    locale.setlocale(locale.LC_ALL, '')\nexcept:\n    pass\n\nfrom docutils.core import publish_cmdline\nfrom docutils.parsers.rst import directives, Directive\nfrom docutils import nodes\n\n\nclass CodeBlock(Directive):\n    required_arguments = 1\n    optional_arguments = 0\n    final_argument_whitespace = False\n    option_spec = {}\n    has_content = True\n\n    rstlang_to_listingslang = {\n        'text': '{}'\n    }\n\n    def run(self):\n        language = self.rstlang_to_listingslang.get(self.arguments[0], self.arguments[0])\n        content = '\\n'.join(self.content)\n        latex = '\\\\begin{{lstlisting}}[language={}]\\n{}\\n\\\\end{{lstlisting}}'.format(language, content)\n        return [nodes.raw('', latex, format='latex')]\n\n\ndescription = ('Generates LaTeX documents from standalone reStructuredText '\n               'sources. '\n               'Reads from <source> (default is stdin) and writes to '\n               '<destination> (default is stdout).  See '\n               '<http://docutils.sourceforge.net/docs/user/latex.html> for '\n               'the full reference.')\n\n\nfor directive_name in ('code', 'code-block'):\n    directives.register_directive(directive_name, CodeBlock)\npublish_cmdline(writer_name='latex', description=description)\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tex",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}