{
  "metadata": {
    "timestamp": 1736561222968,
    "page": 202,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gunthercox/ChatterBot",
      "stars": 14140,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.1474609375,
          "content": "engines:\n  pep8:\n    enabled: true\nratings:\n  paths:\n  - \"**.py\"\nexclude_paths:\n- tests/*\n- examples/*\n- chatterbot/ext/django_chatterbot/migrations/*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1162109375,
          "content": "bin\nbuild\ndist\nvenv\n.env\n.out\n.coverage\n*.pyc\n*.swp\n*.egg-info\n*.egg/*\n*.eggs/*\n*.doctrees\n\n# Database files\n*.sqlite3\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.44140625,
          "content": "Copyright (c) 2016 - 2019, Gunther Cox\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n* Neither the name of ChatterBot nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.142578125,
          "content": "include LICENSE\ninclude README.md\ninclude requirements.txt\ninclude setup.cfg\n\nglobal-exclude __pycache__\nglobal-exclude *.py[co]\nglobal-exclude .*"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1357421875,
          "content": "![ChatterBot: Machine learning in Python](https://i.imgur.com/b3SCmGT.png)\n\n# ChatterBot\n\nChatterBot is a machine-learning based conversational dialog engine built in\nPython which makes it possible to generate responses based on collections of\nknown conversations. The language independent design of ChatterBot allows it\nto be trained to speak any language.\n\n[![Package Version](https://img.shields.io/pypi/v/chatterbot.svg)](https://pypi.python.org/pypi/chatterbot/)\n[![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)](https://www.python.org/downloads/release/python-360/)\n[![Django 2.0](https://img.shields.io/badge/Django-2.0-blue.svg)](https://docs.djangoproject.com/en/2.1/releases/2.0/)\n[![Documentation Status](https://readthedocs.org/projects/chatterbot/badge/?version=stable)](http://chatterbot.readthedocs.io/en/stable/?badge=stable)\n[![Coverage Status](https://img.shields.io/coveralls/gunthercox/ChatterBot.svg)](https://coveralls.io/r/gunthercox/ChatterBot)\n[![Code Climate](https://codeclimate.com/github/gunthercox/ChatterBot/badges/gpa.svg)](https://codeclimate.com/github/gunthercox/ChatterBot)\n[![Join the chat at https://gitter.im/chatterbot/Lobby](https://badges.gitter.im/chatterbot/Lobby.svg)](https://gitter.im/chatterbot/Lobby?utm_source=badge&utm_medium=badge&utm_content=badge)\n\nAn example of typical input would be something like this:\n\n> **user:** Good morning! How are you doing?  \n> **bot:**  I am doing very well, thank you for asking.  \n> **user:** You're welcome.  \n> **bot:** Do you like hats?  \n\n## How it works\n\nAn untrained instance of ChatterBot starts off with no knowledge of how to communicate. Each time a user enters a statement, the library saves the text that they entered and the text that the statement was in response to. As ChatterBot receives more input the number of responses that it can reply and the accuracy of each response in relation to the input statement increase. The program selects the closest matching response by searching for the closest matching known statement that matches the input, it then returns the most likely response to that statement based on how frequently each response is issued by the people the bot communicates with.\n\n## Installation\n\nThis package can be installed from [PyPi](https://pypi.python.org/pypi/ChatterBot) by running:\n\n```sh\npip install chatterbot\n```\n\n## Basic Usage\n\n```py\nfrom chatterbot import ChatBot\nfrom chatterbot.trainers import ChatterBotCorpusTrainer\n\nchatbot = ChatBot('Ron Obvious')\n\n# Create a new trainer for the chatbot\ntrainer = ChatterBotCorpusTrainer(chatbot)\n\n# Train the chatbot based on the english corpus\ntrainer.train(\"chatterbot.corpus.english\")\n\n# Get a response to an input statement\nchatbot.get_response(\"Hello, how are you today?\")\n```\n\n# Training data\n\nChatterBot comes with a data utility module that can be used to train chat bots.\nAt the moment there is training data for over a dozen languages in this module.\nContributions of additional training data or training data\nin other languages would be greatly appreciated. Take a look at the data files\nin the [chatterbot-corpus](https://github.com/gunthercox/chatterbot-corpus)\npackage if you are interested in contributing.\n\n```py\nfrom chatterbot.trainers import ChatterBotCorpusTrainer\n\n# Create a new trainer for the chatbot\ntrainer = ChatterBotCorpusTrainer(chatbot)\n\n# Train based on the english corpus\ntrainer.train(\"chatterbot.corpus.english\")\n\n# Train based on english greetings corpus\ntrainer.train(\"chatterbot.corpus.english.greetings\")\n\n# Train based on the english conversations corpus\ntrainer.train(\"chatterbot.corpus.english.conversations\")\n```\n\n**Corpus contributions are welcome! Please make a pull request.**\n\n# [Documentation](https://chatterbot.readthedocs.io/)\n\nView the [documentation](https://chatterbot.readthedocs.io/)\nfor ChatterBot on Read the Docs.\n\nTo build the documentation yourself using [Sphinx](http://www.sphinx-doc.org/), run:\n\n```sh\nsphinx-build -b html docs/ build/\n```\n\n# Examples\n\nFor examples, see the [examples](https://github.com/gunthercox/ChatterBot/tree/master/examples)\ndirectory in this project's git repository.\n\nThere is also an example [Django project using ChatterBot](https://github.com/gunthercox/ChatterBot/tree/master/examples), as well as an example [Flask project using ChatterBot](https://github.com/chamkank/flask-chatterbot).\n\n# History\n\nSee release notes for changes https://github.com/gunthercox/ChatterBot/releases\n\n# Development pattern for contributors\n\n1. [Create a fork](https://help.github.com/articles/fork-a-repo/) of\n   the [main ChatterBot repository](https://github.com/gunthercox/ChatterBot) on GitHub.\n2. Make your changes in a branch named something different from `master`, e.g. create\n   a new branch `my-pull-request`.\n3. [Create a pull request](https://help.github.com/articles/creating-a-pull-request/).\n4. Please follow the [Python style guide for PEP-8](https://www.python.org/dev/peps/pep-0008/).\n5. Use the projects [built-in automated testing](https://chatterbot.readthedocs.io/en/latest/testing.html).\n   to help make sure that your contribution is free from errors.\n\n# License\n\nChatterBot is licensed under the [BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause).\n"
        },
        {
          "name": "chatterbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.4970703125,
          "content": "importlib_metadata<5  # Pinned for flake8 support\nflake8\nnltk>=3.2,<4.0\nnose\npint>=0.8.1\npymongo>=3.3,<4.0\ntwine\ntwython\nspacy>=2.3,<3.0\nsphinx>=5.3,<8.1\nsphinx_rtd_theme\npyyaml>=5.3,<5.4\ngit+https://github.com/gunthercox/chatterbot-corpus.git@master\nhttps://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.3.0/en_core_web_sm-2.3.0.tar.gz#egg=en_core_web_sm\nhttps://github.com/explosion/spacy-models/releases/download/de_core_news_sm-2.3.0/de_core_news_sm-2.3.0.tar.gz#egg=de_core_news_sm"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0703125,
          "content": "mathparse>=0.1,<0.2\npython-dateutil>=2.8,<2.9\nsqlalchemy>=1.3,<1.4\npytz\n"
        },
        {
          "name": "runtests.py",
          "type": "blob",
          "size": 0.486328125,
          "content": "#!/usr/bin/env python\n\n\"\"\"\nThis is the test runner for the ChatterBot's Django tests.\n\"\"\"\n\nimport os\nimport sys\n\nimport django\nfrom django.conf import settings\nfrom django.test.utils import get_runner\n\nif __name__ == '__main__':\n    os.environ['DJANGO_SETTINGS_MODULE'] = 'tests_django.test_settings'\n    django.setup()\n    TestRunner = get_runner(settings)\n    test_runner = TestRunner(\n        verbosity=2\n    )\n    failures = test_runner.run_tests(['tests_django'])\n    sys.exit(bool(failures))\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.4951171875,
          "content": "[wheel]\nuniversal = 1\n\n[bdist_wheel]\nuniversal = 1\n\n[metadata]\nlicense_file = LICENSE\n\n[nosetests]\nverbosity = 2\nnocapture = true\nexclude = (?:^tests_django$)\nwith-coverage = true\ncover-package = chatterbot\ncover-erase = true\ncover-min-percentage = 40\n\n[flake8]\n# H306: imports not in alphabetical order (time, os)\nignore = H306\nmax_line_length = 175\nexclude = .eggs, .git, build,\n\n[chatterbot]\nversion = 1.1.8\nauthor = Gunther Cox\nemail = gunthercx@gmail.com\nurl = https://github.com/gunthercox/ChatterBot\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.857421875,
          "content": "#!/usr/bin/env python\n\"\"\"\nChatterBot setup file.\n\"\"\"\nimport os\nimport sys\nimport platform\nimport configparser\nfrom setuptools import setup\n\n\nif sys.version_info[0] < 3:\n    raise Exception(\n        'You are tying to install ChatterBot on Python version {}.\\n'\n        'Please install ChatterBot in Python 3 instead.'.format(\n            platform.python_version()\n        )\n    )\n\nconfig = configparser.ConfigParser()\n\ncurrent_directory = os.path.dirname(os.path.abspath(__file__))\nconfig_file_path = os.path.join(current_directory, 'setup.cfg')\n\nconfig.read(config_file_path)\n\nVERSION = config['chatterbot']['version']\nAUTHOR = config['chatterbot']['author']\nAUTHOR_EMAIL = config['chatterbot']['email']\nURL = config['chatterbot']['url']\n\nwith open('README.md') as f:\n    LONG_DESCRIPTION = f.read()\n\nREQUIREMENTS = []\nDEPENDENCIES = []\n\nwith open('requirements.txt') as requirements:\n    for requirement in requirements.readlines():\n        if requirement.startswith('git+git://'):\n            DEPENDENCIES.append(requirement)\n        else:\n            REQUIREMENTS.append(requirement)\n\n\nsetup(\n    name='ChatterBot',\n    version=VERSION,\n    url=URL,\n    download_url='{}/tarball/{}'.format(URL, VERSION),\n    project_urls={\n        'Documentation': 'https://chatterbot.readthedocs.io',\n    },\n    description='ChatterBot is a machine learning, conversational dialog engine.',\n    long_description=LONG_DESCRIPTION,\n    long_description_content_type='text/markdown',\n    author=AUTHOR,\n    author_email=AUTHOR_EMAIL,\n    packages=[\n        'chatterbot',\n        'chatterbot.storage',\n        'chatterbot.logic',\n        'chatterbot.ext',\n        'chatterbot.ext.sqlalchemy_app',\n        'chatterbot.ext.django_chatterbot',\n        'chatterbot.ext.django_chatterbot.migrations',\n    ],\n    package_dir={'chatterbot': 'chatterbot'},\n    include_package_data=True,\n    install_requires=REQUIREMENTS,\n    dependency_links=DEPENDENCIES,\n    python_requires='>=3.4, <=3.8',\n    license='BSD',\n    zip_safe=True,\n    platforms=['any'],\n    keywords=['ChatterBot', 'chatbot', 'chat', 'bot'],\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: BSD License',\n        'Environment :: Console',\n        'Environment :: Web Environment',\n        'Operating System :: OS Independent',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Communications :: Chat',\n        'Topic :: Internet',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3 :: Only',\n    ],\n    test_suite='tests'\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests_django",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}