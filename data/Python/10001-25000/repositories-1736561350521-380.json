{
  "metadata": {
    "timestamp": 1736561350521,
    "page": 380,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mvt-project/mvt",
      "stars": 10633,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.8818359375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\npytest-coverage.txt\npytest.xml\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n*.pyc\n\n# Temporal files\n*~\n\n# IDEA Dev Environment\n.idea\n\n# Sublime Text project files\n*.sublime*"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.384765625,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    python: \"3.11\"\n\nmkdocs:\n  configuration: mkdocs.yml\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n   install:\n   - requirements: docs/requirements.txt\n"
        },
        {
          "name": ".safety-policy.yml",
          "type": "blob",
          "size": 0.84375,
          "content": "# Safety Security and License Configuration file\n# We recommend checking this file into your source control in the root of your Python project\n# If this file is named .safety-policy.yml and is in the same directory where you run `safety check` it will be used by default.\n# Otherwise, you can use the flag `safety check --policy-file <path-to-this-file>` to specify a custom location and name for the file.\n# To validate and review your policy file, run the validate command: `safety validate policy_file --path <path-to-this-file>`\nsecurity: # configuration for the `safety check` command\n    ignore-vulnerabilities: # Here you can list multiple specific vulnerabilities you want to ignore (optionally for a time period)\n        67599: # Example vulnerability ID\n            reason: disputed, inapplicable\n        70612:\n            reason: disputed, inapplicable"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.5849609375,
          "content": "# Contributing to Mobile Verification Toolkit (MVT)\n\nWe greatly appreciate contributions to MVT!\n\nYour involvement, whether through identifying issues, improving functionality, or enhancing documentation, is very much appreciated. To ensure smooth collaboration and a welcoming environment, we've outlined some key guidelines for contributing below.\n\n## Getting started\n\nContributing to an open-source project like MVT might seem overwhelming at first, but we're here to support you!\n\n Whether you're a technologist, a frontline human rights defender, a field researcher, or someone new to consensual spyware forensics, there are many ways to make meaningful contributions.\n\n Here's how you can get started:\n\n1. **Explore the codebase:**\n    - Browse the repository to get familar with MVT. Many MVT modules are simple in functionality and easy to understand.\n    - Look for `TODO:` or `FIXME:` comments in the code for areas that need attention.\n\n2. **Check Github issues:**\n    - Look for issues tagged with [\"help wanted\"](https://github.com/mvt-project/mvt/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) or [\"good first issue\"](https://github.com/mvt-project/mvt/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) to find tasks that are beginner-friendly or where input from the community would be helpful.\n\n3. **Ask for guidance:**\n\n    - If you're unsure where to start, feel free to open a [discussion](https://github.com/mvt-project/mvt/discussions) or comment on an issue.\n\n## How to contribute:\n\n1. **Report issues:**\n\n - Found a bug? Please check existing issues to see if it's already reported. If not, open a new issue. Mobile operating systems and databases are constantly evolving, an new errors may appear spontaniously in new app versions.\n\n **Please provide as much information as possible about the prodblem including: any error messages, steps to reproduce the problem, and any logs or screenshots that can help.**\n\n\n2. **Suggest features:**\n    - If you have an idea for new functionality, create a feature request issue and describe your proposal.\n\n3. **Submit code:**\n    - Fork the repository and create a new branch for your changes.\n    - Ensure your changes align with the code style guidelines (see below).\n    - Open a pull request (PR) with a clear description of your changes and link it to any relevant issues.\n\n4. **Documentation contributions:**\n    - Improving documentation is just as valuable as contributing code! If you notice gaps or inaccuracies in the documentation, feel free to submit changes or suggest updates.\n\n## Code style\nPlease follow these code style guidelines for consistency and readability:\n\n- **Indentation**: use 4 spaces per tab.\n- **Quotes**: Use double quotes (`\"`) by default. Use single quotes (`'`) for nested strings instead of escaping (`\\\"`), or when using f-formatting.\n- **Maximum line length**:\n    - Aim for lines no longer than 80 characters.\n    - Exceptions are allowed for long log lines or strings, which may extend up to 100 characters.\n    - Wrap lines that exceed 100 characters.\n\nFollow [PEP 8 guidelines](https://peps.python.org/pep-0008/) for indentation and overall Python code style. All MVT code is automatically linted with [Ruff](https://github.com/astral-sh/ruff) before merging.\n\nPlease check your code before opening a pull request by running `make ruff`\n\n\n## Community and support\n\nWe aim to create a supportive and collaborative environment for all contributors. If you run into any challenges, feel free to reach out through the discussions or issues section of the repository.\n\nYour contributions, big or small, help improve MVT and are always appreciated."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 5.140625,
          "content": "# Base image for building libraries\n# ---------------------------------\nFROM ubuntu:22.04 as build-base\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install build tools and dependencies\nRUN apt-get update \\\n  && apt-get install -y \\\n  build-essential \\\n  git \\\n  autoconf \\\n  automake \\\n  libtool-bin \\\n  pkg-config \\\n  libcurl4-openssl-dev \\\n  libusb-1.0-0-dev \\\n  libssl-dev \\\n  udev \\\n  && rm -rf /var/lib/apt/lists/*\n\n\n# libplist\n# --------\nFROM build-base as build-libplist\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libplist && cd libplist \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libplist\n\n\n# libimobiledevice-glue\n# ---------------------\nFROM build-base as build-libimobiledevice-glue\n\n# Install dependencies\nCOPY --from=build-libplist /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libimobiledevice-glue && cd libimobiledevice-glue \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libimobiledevice-glue\n\n\n# libtatsu\n# --------\nFROM build-base as build-libtatsu\n\n# Install dependencies\nCOPY --from=build-libplist /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libtatsu && cd libtatsu \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libtatsu\n\n\n# libusbmuxd\n# ----------\nFROM build-base as build-libusbmuxd\n\n# Install dependencies\nCOPY --from=build-libplist /build /\nCOPY --from=build-libimobiledevice-glue /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libusbmuxd && cd libusbmuxd \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libusbmuxd\n\n\n# libimobiledevice\n# ----------------\nFROM build-base as build-libimobiledevice\n\n# Install dependencies\nCOPY --from=build-libplist /build /\nCOPY --from=build-libtatsu /build /\nCOPY --from=build-libimobiledevice-glue /build /\nCOPY --from=build-libusbmuxd /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libimobiledevice && cd libimobiledevice \\\n  && ./autogen.sh --enable-debug && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libimobiledevice\n\n\n# usbmuxd\n# -------\nFROM build-base as build-usbmuxd\n\n# Install dependencies\nCOPY --from=build-libplist /build /\nCOPY --from=build-libimobiledevice-glue /build /\nCOPY --from=build-libusbmuxd /build /\nCOPY --from=build-libimobiledevice /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/usbmuxd && cd usbmuxd \\\n  && ./autogen.sh --sysconfdir=/etc --localstatedir=/var --runstatedir=/run && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf usbmuxd && mv /build/lib /build/usr/lib\n\n\n# Create main image\nFROM ubuntu:22.04 as main\n\nLABEL org.opencontainers.image.url=\"https://mvt.re\"\nLABEL org.opencontainers.image.documentation=\"https://docs.mvt.re\"\nLABEL org.opencontainers.image.source=\"https://github.com/mvt-project/mvt\"\nLABEL org.opencontainers.image.title=\"Mobile Verification Toolkit\"\nLABEL org.opencontainers.image.description=\"MVT is a forensic tool to look for signs of infection in smartphone devices.\"\nLABEL org.opencontainers.image.licenses=\"MVT License 1.1\"\nLABEL org.opencontainers.image.base.name=docker.io/library/ubuntu:22.04\n\n# Install runtime dependencies\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update \\\n  && apt-get install -y \\\n  adb \\\n  default-jre-headless \\\n  libcurl4 \\\n  libssl3 \\\n  libusb-1.0-0 \\\n  python3 \\\n  sqlite3\nCOPY --from=build-libplist /build /\nCOPY --from=build-libimobiledevice-glue /build /\nCOPY --from=build-libtatsu /build /\nCOPY --from=build-libusbmuxd /build /\nCOPY --from=build-libimobiledevice /build /\nCOPY --from=build-usbmuxd /build /\n\n# Install mvt using the locally checked out source\nCOPY . mvt/\nRUN apt-get update \\\n   && apt-get install -y git python3-pip \\\n   && PIP_NO_CACHE_DIR=1 pip3 install --upgrade pip \\\n   && PIP_NO_CACHE_DIR=1 pip3 install ./mvt \\\n   && apt-get remove -y python3-pip git && apt-get autoremove -y \\\n   && rm -rf /var/lib/apt/lists/* \\\n   && rm -rf mvt\n\n# Installing ABE\nADD --checksum=sha256:a20e07f8b2ea47620aff0267f230c3f1f495f097081fd709eec51cf2a2e11632 \\\n  https://github.com/nelenkov/android-backup-extractor/releases/download/master-20221109063121-8fdfc5e/abe.jar /opt/abe/abe.jar\n# Create alias for abe\nRUN echo 'alias abe=\"java -jar /opt/abe/abe.jar\"' >> ~/.bashrc\n\n# Generate adb key folder\nRUN echo 'if [ ! -f /root/.android/adbkey ]; then adb keygen /root/.android/adbkey 2&>1 > /dev/null; fi' >> ~/.bashrc\nRUN mkdir /root/.android\n\n# Setup investigations environment\nRUN mkdir /home/cases\nWORKDIR /home/cases\nRUN echo 'echo \"Mobile Verification Toolkit @ Docker\\n------------------------------------\\n\\nYou can find information about how to use this image for Android (https://github.com/mvt-project/mvt/tree/master/docs/android) and iOS (https://github.com/mvt-project/mvt/tree/master/docs/ios) in the official docs of the project.\\n\"' >> ~/.bashrc \\\n  && echo 'echo \"Note that to perform the debug via USB you might need to give the Docker image access to the USB using \\\"docker run -it --privileged -v /dev/bus/usb:/dev/bus/usb mvt\\\" or, preferably, the \\\"--device=\\\" parameter.\\n\"' >> ~/.bashrc\n\nCMD /bin/bash\n"
        },
        {
          "name": "Dockerfile.android",
          "type": "blob",
          "size": 1.4140625,
          "content": "# Create main image\nFROM python:3.10.14-alpine3.20 as main\n\nLABEL org.opencontainers.image.url=\"https://mvt.re\"\nLABEL org.opencontainers.image.documentation=\"https://docs.mvt.re\"\nLABEL org.opencontainers.image.source=\"https://github.com/mvt-project/mvt\"\nLABEL org.opencontainers.image.title=\"Mobile Verification Toolkit (Android)\"\nLABEL org.opencontainers.image.description=\"MVT is a forensic tool to look for signs of infection in smartphone devices.\"\nLABEL org.opencontainers.image.licenses=\"MVT License 1.1\"\nLABEL org.opencontainers.image.base.name=docker.io/library/python:3.10.14-alpine3.20\n\n# Install runtime dependencies\nRUN apk add --no-cache \\\n  android-tools \\\n  git \\\n  libusb \\\n  openjdk11-jre-headless \\\n  sqlite\n\n# Install mvt\nCOPY ./ mvt\nRUN apk add --no-cache --virtual .build-deps gcc musl-dev \\\n  && PIP_NO_CACHE_DIR=1 pip3 install ./mvt \\\n  && apk del .build-deps gcc musl-dev && rm -rf ./mvt\n\n# Installing ABE\nADD --checksum=sha256:a20e07f8b2ea47620aff0267f230c3f1f495f097081fd709eec51cf2a2e11632 \\\n  https://github.com/nelenkov/android-backup-extractor/releases/download/master-20221109063121-8fdfc5e/abe.jar /opt/abe/abe.jar\n# Create alias for abe\nRUN echo 'alias abe=\"java -jar /opt/abe/abe.jar\"' >> ~/.bashrc\n\n# Generate adb key folder\nRUN echo 'if [ ! -f /root/.android/adbkey ]; then adb keygen /root/.android/adbkey 2&>1 > /dev/null; fi' >> ~/.bashrc\nRUN mkdir /root/.android\n\nENTRYPOINT [ \"/usr/local/bin/mvt-android\" ]\n"
        },
        {
          "name": "Dockerfile.ios",
          "type": "blob",
          "size": 3.861328125,
          "content": "# Base image for building libraries\n# ---------------------------------\nFROM ubuntu:22.04 as build-base\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install build tools and dependencies\nRUN apt-get update \\\n  && apt-get install -y \\\n  build-essential \\\n  git \\\n  autoconf \\\n  automake \\\n  libtool-bin \\\n  pkg-config \\\n  libcurl4-openssl-dev \\\n  libusb-1.0-0-dev \\\n  libssl-dev \\\n  udev \\\n  && rm -rf /var/lib/apt/lists/*\n\n\n# libplist\n# --------\nFROM build-base as build-libplist\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libplist && cd libplist \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libplist\n\n\n# libimobiledevice-glue\n# ---------------------\nFROM build-base as build-libimobiledevice-glue\n\n# Install dependencies\nCOPY --from=build-libplist /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libimobiledevice-glue && cd libimobiledevice-glue \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libimobiledevice-glue\n\n\n# libtatsu\n# --------\nFROM build-base as build-libtatsu\n\n# Install dependencies\nCOPY --from=build-libplist /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libtatsu && cd libtatsu \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libtatsu\n\n\n# libusbmuxd\n# ----------\nFROM build-base as build-libusbmuxd\n\n# Install dependencies\nCOPY --from=build-libplist /build /\nCOPY --from=build-libimobiledevice-glue /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libusbmuxd && cd libusbmuxd \\\n  && ./autogen.sh && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libusbmuxd\n\n\n# libimobiledevice\n# ----------------\nFROM build-base as build-libimobiledevice\n\n# Install dependencies\nCOPY --from=build-libplist /build /\nCOPY --from=build-libtatsu /build /\nCOPY --from=build-libimobiledevice-glue /build /\nCOPY --from=build-libusbmuxd /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/libimobiledevice && cd libimobiledevice \\\n  && ./autogen.sh --enable-debug && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf libimobiledevice\n\n\n# usbmuxd\n# -------\nFROM build-base as build-usbmuxd\n\n# Install dependencies\nCOPY --from=build-libplist /build /\nCOPY --from=build-libimobiledevice-glue /build /\nCOPY --from=build-libusbmuxd /build /\nCOPY --from=build-libimobiledevice /build /\n\n# Build\nRUN git clone https://github.com/libimobiledevice/usbmuxd && cd usbmuxd \\\n  && ./autogen.sh --sysconfdir=/etc --localstatedir=/var --runstatedir=/run && make -j \"$(nproc)\" && make install DESTDIR=/build \\\n  && cd .. && rm -rf usbmuxd && mv /build/lib /build/usr/lib\n\n\n# Main image\n# ----------\nFROM python:3.10.14-alpine3.20 as main\n\nLABEL org.opencontainers.image.url=\"https://mvt.re\"\nLABEL org.opencontainers.image.documentation=\"https://docs.mvt.re\"\nLABEL org.opencontainers.image.source=\"https://github.com/mvt-project/mvt\"\nLABEL org.opencontainers.image.title=\"Mobile Verification Toolkit (iOS)\"\nLABEL org.opencontainers.image.description=\"MVT is a forensic tool to look for signs of infection in smartphone devices.\"\nLABEL org.opencontainers.image.licenses=\"MVT License 1.1\"\nLABEL org.opencontainers.image.base.name=docker.io/library/python:3.10.14-alpine3.20\n\n# Install runtime dependencies\nRUN apk add --no-cache \\\n  gcompat \\\n  libcurl \\\n  libssl3 \\\n  libusb \\\n  sqlite\nCOPY --from=build-libplist /build /\nCOPY --from=build-libimobiledevice-glue /build /\nCOPY --from=build-libtatsu /build /\nCOPY --from=build-libusbmuxd /build /\nCOPY --from=build-libimobiledevice /build /\nCOPY --from=build-usbmuxd /build /\n\n# Install mvt using the locally checked out source\nCOPY ./ mvt\nRUN apk add --no-cache --virtual .build-deps git gcc musl-dev \\\n  && PIP_NO_CACHE_DIR=1 pip3 install ./mvt \\\n  && apk del .build-deps git gcc musl-dev && rm -rf ./mvt\n\nENTRYPOINT [ \"/usr/local/bin/mvt-ios\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.3740234375,
          "content": "MVT License 1.1\n===============\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n1.15. \"Data\"\n    means any data extracted from an electronic device with or without\n    use of Covered Software, and/or analysed using Covered Software or\n    a Larger Work.\n\n1.16. \"Device Owner\" (or \"Device Owners\")\n    means an individual or a legal entity with legal ownership of an\n    electronic device which is being analysed through the use of\n    Covered Software or a Larger Work, or from which Data was extracted\n    for subsequent analysis.\n\n1.17. \"Data Owner\" (or \"Data Owners\")\n    means an individual or group of individuals who made legitimate use\n    of the electronic device from which Data that is extracted and/or\n    analyzed originated. \"Data Owner\" might or might not differ from\n    \"Device Owner\".\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.0, 3.1, 3.2, 3.3, and 3.6 are conditions of the licenses\ngranted in Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.0. Consensual Use Restriction\n\nUse of Covered Software or of a Larger Work is permitted provided that\nthe Data Owner must explicitly consent to the procedure, free from any\nform of coercion, and must be fully informed about the nature of the\nprocedure, its privacy implications, and any data retention and disposal\npolicy.\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nClaudio Guarnieri is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the MVT License,\n  v. 1.1. If a copy of the MVT License was not distributed with this\n  file, You can obtain one at https://license.mvt.re/1.1/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the MVT License, v. 1.1.\n\n\nThis license is an adaption of Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.5537109375,
          "content": "PWD = $(shell pwd)\n\nautofix:\n\truff format .\n\truff check --fix .\n\ncheck: ruff mypy\n\nruff:\n\truff format --check .\n\truff check -q .\n\nmypy:\n\tmypy\n\ntest:\n\tpython3 -m pytest\n\ntest-ci:\n\tpython3 -m pytest -v\n\ninstall:\n\tpython3 -m pip install --upgrade -e .\n\ntest-requirements:\n\tpython3 -m pip install --upgrade -r test-requirements.txt\n\nclean:\n\trm -rf $(PWD)/build $(PWD)/dist $(PWD)/src/mvt.egg-info\n\ndist:\n\tpython3 -m pip install --upgrade build\n\tpython3 -m build\n\nupload:\n\tpython3 -m twine upload dist/*\n\ntest-upload:\n\tpython3 -m twine upload --repository testpypi dist/*\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.625,
          "content": "<p align=\"center\">\n     <img src=\"https://docs.mvt.re/en/latest/mvt.png\" width=\"200\" />\n</p>\n\n# Mobile Verification Toolkit\n\n[![](https://img.shields.io/pypi/v/mvt)](https://pypi.org/project/mvt/)\n[![Documentation Status](https://readthedocs.org/projects/mvt/badge/?version=latest)](https://docs.mvt.re/en/latest/?badge=latest)\n[![CI](https://github.com/mvt-project/mvt/actions/workflows/tests.yml/badge.svg)](https://github.com/mvt-project/mvt/actions/workflows/tests.yml)\n[![Downloads](https://pepy.tech/badge/mvt)](https://pepy.tech/project/mvt)\n\nMobile Verification Toolkit (MVT) is a collection of utilities to simplify and automate the process of gathering forensic traces helpful to identify a potential compromise of Android and iOS devices.\n\nIt has been developed and released by the [Amnesty International Security Lab](https://securitylab.amnesty.org) in July 2021 in the context of the [Pegasus Project](https://forbiddenstories.org/about-the-pegasus-project/) along with [a technical forensic methodology](https://www.amnesty.org/en/latest/research/2021/07/forensic-methodology-report-how-to-catch-nso-groups-pegasus/). It continues to be maintained by Amnesty International and other contributors.\n\n> **Note**\n> MVT is a forensic research tool intended for technologists and investigators. It requires understanding digital forensics and using command-line tools. This is not intended for end-user self-assessment. If you are concerned with the security of your device please seek reputable expert assistance.\n>\n\n### Indicators of Compromise\n\nMVT supports using public [indicators of compromise (IOCs)](https://github.com/mvt-project/mvt-indicators) to scan mobile devices for potential traces of targeting or infection by known spyware campaigns. This includes IOCs published by [Amnesty International](https://github.com/AmnestyTech/investigations/) and other  research groups.\n\n> **Warning**\n> Public indicators of compromise are insufficient to determine that a device is \"clean\", and not targeted with a particular spyware tool. Reliance on public indicators alone can miss recent forensic traces and give a false sense of security.\n>\n> Reliable and comprehensive digital forensic support and triage requires access to non-public indicators, research and threat intelligence.\n>\n>Such support is available to civil society through [Amnesty International's Security Lab](https://securitylab.amnesty.org/get-help/?c=mvt_docs) or through our forensic partnership with [Access Now’s Digital Security Helpline](https://www.accessnow.org/help/).\n\nMore information about using indicators of compromise with MVT is available in the [documentation](https://docs.mvt.re/en/latest/iocs/).\n\n## Installation\n\nMVT can be installed from sources or from [PyPI](https://pypi.org/project/mvt/) (you will need some dependencies, check the [documentation](https://docs.mvt.re/en/latest/install/)):\n\n```\npip3 install mvt\n```\n\nFor alternative installation options and known issues, please refer to the [documentation](https://docs.mvt.re/en/latest/install/) as well as [GitHub Issues](https://github.com/mvt-project/mvt/issues).\n\n\n## Usage\n\nMVT provides two commands `mvt-ios` and `mvt-android`. [Check out the documentation to learn how to use them!](https://docs.mvt.re/)\n\n\n## License\n\nThe purpose of MVT is to facilitate the ***consensual forensic analysis*** of devices of those who might be targets of sophisticated mobile spyware attacks, especially members of civil society and marginalized communities. We do not want MVT to enable privacy violations of non-consenting individuals.  In order to achieve this, MVT is released under its own license. [Read more here.](https://docs.mvt.re/en/latest/license/)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.4765625,
          "content": "# Reporting security issues\n\nThank you for your interest in reporting security issues and vulnerabilities! Security research is of utmost importance and we take all reports seriously. If you discover an issue please report it to us right away!\n\nPlease DO NOT file a public issue, instead send your report privately to *nex [at] nex [dot] sx*. You can also write PGP-encrypted emails to [this key](https://keybase.io/nex/pgp_keys.asc?fingerprint=05216f3b86848a303c2fe37dd166f1667359d880).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 1.8125,
          "content": "site_name: Mobile Verification Toolkit\nrepo_url: https://github.com/mvt-project/mvt\nedit_uri: edit/main/docs/\ncopyright: Copyright &copy; 2021-2023 MVT Project Developers\nsite_description: Mobile Verification Toolkit Documentation\nmarkdown_extensions:\n    - attr_list\n    - admonition\n    - pymdownx.emoji:\n        emoji_index: !!python/name:material.extensions.emoji.twemoji\n        emoji_generator: !!python/name:material.extensions.emoji.to_svg\n    - pymdownx.superfences\n    - pymdownx.inlinehilite\n    - pymdownx.highlight:\n        use_pygments: true\ntheme:\n    name: material\n    features:\n        - tabs\nplugins:\n    - search\n    - mkdocstrings\nextra:\n    social:\n        - icon: fontawesome/brands/github\n          link: https://github.com/mvt-project/mvt\nnav:\n    - Welcome: \"index.md\"\n    - Introduction: \"introduction.md\"\n    - Installation: \"install.md\"\n    - Using Docker: \"docker.md\"\n    - MVT for iOS:\n        - iOS Forensic Methodology: \"ios/methodology.md\"\n        - Install libimobiledevice: \"ios/install.md\"\n        - Check an iTunes Backup:\n            - Backup with iTunes app: \"ios/backup/itunes.md\"\n            - Backup with libimobiledevice: \"ios/backup/libimobiledevice.md\"\n            - Check a Backup with mvt-ios: \"ios/backup/check.md\"\n        - Check a Filesystem Dump:\n            - Dumping the filesystem: \"ios/filesystem/dump.md\"\n            - Check a Filesystem Dump with mvt-ios: \"ios/filesystem/check.md\"\n        - Records extracted by mvt-ios: \"ios/records.md\"\n    - MVT for Android:\n        - Android Forensic Methodology: \"android/methodology.md\"\n        - Check over ADB: \"android/adb.md\"\n        - Check an Android Backup (SMS messages): \"android/backup.md\"\n        - Download APKs: \"android/download_apks.md\"\n    - Indicators of Compromise: \"iocs.md\"\n    - Development: \"development.md\"\n    - License: \"license.md\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.48046875,
          "content": "[project]\nname = \"mvt\"\ndynamic = [\"version\"]\nauthors = [\n    {name = \"Claudio Guarnieri\", email = \"nex@nex.sx\"}\n]\nmaintainers = [\n    {name = \"Etienne Maynier\", email = \"tek@randhome.io\"},\n    {name = \"Donncha Ó Cearbhaill\", email = \"donncha.ocearbhaill@amnesty.org\"},\n    {name = \"Rory Flynn\", email = \"rory.flynn@amnesty.org\"}\n]\ndescription = \"Mobile Verification Toolkit\"\nreadme = \"README.md\"\nkeywords = [\"security\", \"mobile\", \"forensics\", \"malware\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Information Technology\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\"\n]\ndependencies = [\n    \"click >=8.1.3\",\n    \"rich >=12.6.0\",\n    \"tld >=0.12.6\",\n    \"requests >=2.28.1\",\n    \"simplejson >=3.17.6\",\n    \"packaging >=21.3\",\n    \"appdirs >=1.4.4\",\n    \"iOSbackup >=0.9.923\",\n    \"adb-shell[usb] >=0.4.3\",\n    \"libusb1 >=3.0.0\",\n    \"cryptography >=42.0.5\",\n    \"pyyaml >=6.0\",\n    \"pyahocorasick >= 2.0.0\",\n]\nrequires-python = \">= 3.8\"\n\n[project.urls]\nhomepage = \"https://docs.mvt.re/en/latest/\"\nrepository = \"https://github.com/mvt-project/mvt\"\n\n[project.scripts]\n    mvt-ios = \"mvt.ios:cli\"\n    mvt-android = \"mvt.android:cli\"\n\n[build-system]\nrequires = [\"setuptools>=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.coverage.run]\nomit = [\n    \"tests/*\",\n]\n\n[tool.coverage.html]\ndirectory= \"htmlcov\"\n\n[tool.mypy]\ninstall_types = true\nnon_interactive = true\nignore_missing_imports = true\npackages = \"src\"\n\n[tool.pytest.ini_options]\naddopts = \"-ra -q --cov=mvt --cov-report html --junitxml=pytest.xml --cov-report=term-missing:skip-covered\"\ntestpaths = [\n    \"tests\"\n]\n\n[tool.ruff.lint]\nselect = [\"C90\", \"E\", \"F\", \"W\"]  # flake8 default set\nignore = [\n    \"E501\",  # don't enforce line length violations\n    \"C901\",  # complex-structure\n\n    # These were previously ignored but don't seem to be required:\n    # \"E265\",  # no-space-after-block-comment\n    # \"F401\",  # unused-import\n    # \"E127\",  # not included in ruff\n    # \"W503\",  # not included in ruff\n    # \"E226\",  # missing-whitespace-around-arithmetic-operator\n    # \"E203\",  # whitespace-before-punctuation\n]\n\n[tool.ruff.lint.per-file-ignores]\n\"__init__.py\" = [\"F401\"]  # unused-import\n\n[tool.ruff.lint.mccabe]\nmax-complexity = 10\n\n[tool.setuptools]\ninclude-package-data = true\npackage-dir = {\"\" = \"src\"}\n\n[tool.setuptools.packages.find]\nwhere = [\"src\"]\n\n[tool.setuptools.package-data]\nmvt = [\"ios/data/*.json\"]\n\n[tool.setuptools.dynamic]\nversion = {attr = \"mvt.common.version.MVT_VERSION\"}"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-requirements.txt",
          "type": "blob",
          "size": 0.1494140625,
          "content": "requests>=2.31.0\npytest>=7.4.3\npytest-cov>=4.1.0\npytest-github-actions-annotate-failures>=0.2.0\npytest-mock>=3.14.0\nstix2>=3.0.1\nruff>=0.1.6\nmypy>=1.7.1\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}