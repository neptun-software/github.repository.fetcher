{
  "metadata": {
    "timestamp": 1736561255372,
    "page": 248,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "edgedb/edgedb",
      "stars": 13268,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.26953125,
          "content": "root = true\n\n[*]\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{py,pyx,pxd,pxi,h}]\nindent_size = 4\nindent_style = space\n\n[*.yml]\nindent_size = 2\nindent_style = space\n\n[edb_stat_statements/*.{c,h,l,y,pl,pm}]\nindent_style = tab\nindent_size = tab\ntab_width = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4013671875,
          "content": "*._*\n*.pyc\n*.pyo\n*.o\n*.so\n*.dylib\n.vscode/\n.zed/\n*~\n.#*\n.*.swp\n.DS_Store\n\\#*#\n/test*.py\n/.local\n/perf.data*\n/build\n/target\n/tmp\n__pycache__/\n.d8_history\n/.venv\n/.eggs\n/*.egg\n/*.egg-info\n/dist\n/.cache\ndocs/_build\n/AUTHORS\n/ChangeLog\n/tests/dumps/**/*_dev*.dump\n/edb/_buildmeta.py\n\n/.coverage*\n/htmlcov\n\n*.code-workspace\n/.pytest_cache\n/.mypy_cache\n/.vagga\n/.dmypy.json\n/compile_commands.json\n/pyrightconfig.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3388671875,
          "content": "[submodule \"postgres\"]\n\tpath = postgres\n\turl = https://github.com/edgedb/postgres.git\n\tignore = untracked\n[submodule \"edb/server/pgproto\"]\n\tpath = edb/server/pgproto\n\turl = https://github.com/MagicStack/py-pgproto.git\n[submodule \"edb/pgsql/parser/libpg_query\"]\n\tpath = edb/pgsql/parser/libpg_query\n\turl = https://github.com/edgedb/libpg_query.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.3076171875,
          "content": "Elvis Pranskevichus <elvis@edgedb.com> <elvis@magic.io>\nYury Selivanov <yury@edgedb.com> <yury@magic.io>\nYury Selivanov <yury@edgedb.com> Yuri Selivanov <yselivanov@sprymix.com>\nVictor Petrovykh <victor@edgedb.com> <victor@magic.io>\nVictor Petrovykh <victor@edgedb.com> Vicor Petrovykh <victor.petrovykh@gmail.com>\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.267578125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at coc@edgedb.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 4.4912109375,
          "content": "How to contribute to EdgeDB\n===========================\n\nThank you for contributing to EdgeDB! We love our open source community and\nwant to foster a healthy contributor ecosystem.\n\nTo make sure the project can continue to improve quickly, we have a few\nguidelines designed to make it easier for your contributions to make it into\nthe project.\n\nThese are guidelines rather than hard rules. If you want to submit a pull\nrequest that strays from these, it might be a good idea to start a discussion\nabout it first. Otherwise, it's possible your pull request might not be merged.\n\nAll contributions\n-----------------\n\n- **Avoid making pull requests that do not have an associated Github Issue.**\n  This could be an already existing issue or one you create yourself when you\n  discover the problem. This will allow the team to help you scope your\n  solution, warn you of potential gotchas, or give you a heads-up on solutions\n  that are likely not feasible. It's a good idea to mention in the issue that\n  you'd like to contribute code to resolve the issue.  **If you're fixing\n  something trivial like a typo,** an associated issue isn't necessary.\n- **Write good commit messages.** The subject of your commit message — that's\n  the first line — should tell us *what* you did. The body of your message —\n  that's the rest of it — should tell us *why* you did it (unless that's\n  self-evident).\n\nContributing code\n--------------------------\n\n- **Pull requests without thorough testing are not likely to be merged.** If\n  you're not sure if yours is well-tested enough, go ahead and submit. We can\n  help guide you to the finish line.\n\nContributing documentation\n--------------------------\n\n- **Avoid changes that don't fix an obvious mistake or add clarity.** This is\n  subjective, but try to look at your changes with a critical eye. Do they fix\n  errors in the original like misspellings or typos? Do they make existing\n  prose more clear or accessible while maintaining accuracy? If you answered\n  \"yes\" to either of those questions, this might be a great addition to our\n  docs! If not, consider starting a discussion instead to see if your changes\n  might be the exception to this guideline before submitting.\n- **Keep commits and pull requests small.** We get it. It's more convenient to\n  throw all your changes into a single pull request or even into a single\n  commit. The problem is that, if some of the changes are good and others don't\n  quite work, having everything in one bucket makes it harder to filter out the\n  great changes from those that need more work.\n- **Make spelling and grammar fixes in a separate pull request from any content\n  changes.** These changes are quick to check and important to anyone reading\n  the docs. We want to make sure they hit the live documentation as quickly as\n  possible without being bogged down by other changes that require more\n  intensive review.\n\nPlease see EdgeDB's guide for `building documentation\n<https://www.edgedb.com/docs/guides/contributing#writing-documentation>`_ from\nsource.\n\nDocumentation style\n~~~~~~~~~~~~~~~~~~~\n\n- **Lines should be no longer than 79 characters.**\n- **Remove trailing whitespace or whitespace on empty lines.**\n- **Surround references to parameter named with asterisks.** You may be tempted\n  to surround parameter names with double backticks (````param````). We avoid\n  that in favor of ``*param*``, in order to distinguish between parameter\n  references and inline code (which *should* be surrounded by double\n  backticks).\n- **EdgeDB is singular.** Choose \"EdgeDB is\" over \"EdgeDB are\" and \"EdgeDB\n  does\" over \"EdgeDB do.\"\n- **Use American English spellings.** Choose \"color\" over \"colour\" and\n  \"organize\" over \"organise.\"\n- **Use the Oxford comma.** When delineating a series, place a comma between\n  each item in the series, even the one with the conjunction. Use \"eggs, bacon,\n  and juice\" rather than \"eggs, bacon and juice.\"\n- **Write in the simplest prose that is still accurate and expresses everything\n  you need to convey.** You may be tempted to write documentation that sounds\n  like a computer science textbook. Sometimes that's necessary, but in most\n  cases, it isn't. Prioritize accuracy first and accessibility a close second.\n- **Be careful using words that have a special meaning in the context of\n  EdgeDB.** In casual speech or writing, you might talk about a \"set\" of\n  something in a generic sense. Using the word this way in EdgeDB documentation\n  might easily be interpreted as a reference to EdgeDB's `sets <ref_eql_sets>`.\n  Avoid this kind of casual usage of key terms.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 75.0244140625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e4503c46a5c0c7844e948c9a4d6acd9f50cccb4de1c48eb9e291ea17470c678\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3d1d046238990b9cf5bcde22a3fb3584ee5cf65fb2765f454ed428c7a0063da\"\n\n[[package]]\nname = \"append-only-vec\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74d9f7083455f1a474276ccd32374958d2cb591024aac45101c7623b10271347\"\n\n[[package]]\nname = \"approx\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cab112f0a86d568ea0e627cc1d6be74a1e9cd55214684db5561995f6dad897c6\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23b62fc65de8e4e7f52534fb52b0f3ed04746ae267519eef2a83941e8085068b\"\n\n[[package]]\nname = \"ascii\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eab1c04a571841102f5345a8fc0f6bb3d31c315dec879b5c6e42e40ce7ffa34e\"\n\n[[package]]\nname = \"async-compression\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e614738943d3f68c628ae3dbce7c3daffb196665f82f8c8ea6b65de73c79429\"\ndependencies = [\n \"flate2\",\n \"futures-core\",\n \"memchr\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.73\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cc23269a4f8976d0a4d2e7109211a419fe30e8d88d677cd60b6bc79c5732e0a\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide 0.7.4\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base32\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"022dfe9eb35f19ebbcb51e0b40a5ab759f46ad60cadf7297e0bd085afb50e076\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bigdecimal\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d712318a27c7150326677b321a5fa91b55f6d9034ffd67f20319e147d40cee\"\ndependencies = [\n \"autocfg\",\n \"libm\",\n \"num-bigint 0.4.6\",\n \"num-integer\",\n \"num-traits\",\n \"serde\",\n]\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"blake2\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.17.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773d90827bc3feecfb67fab12e24de0749aad83c74b9504ecde46237b5cd24e2\"\ndependencies = [\n \"bytemuck_derive\",\n]\n\n[[package]]\nname = \"bytemuck_derive\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bcfcc3cd946cb52f0bbfdbbcfa2f4e24f75ebb6c0e1002f7c25904fada18b9ec\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8318a53db07bb3f8dca91a600466bdb3f2eaadeedfdbcf02e1accbad9271ba50\"\n\n[[package]]\nname = \"captive_postgres\"\nversion = \"0.1.0\"\ndependencies = [\n \"gel_auth\",\n \"openssl\",\n \"socket2\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"cardinality-estimator\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ae5e12c435064f9e8ec53c5a782ca9a362702a4863fe1b6448f524ecede8fe3\"\ndependencies = [\n \"enum_dispatch\",\n \"wyhash\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57b6a275aa2903740dc87da01c62040406b8812552e97129a63ea8850a17c6e6\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed6719fffa43d0d87e5fd8caeab59be1554fb028cd30edc88fc4369b17971019\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216aec2b177652e3846684cbfe25c9964d18ec45234f0f5da5157b207ed1aab6\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"501d359d5f3dcaf6ecdeee48833ae73ec6e42723a1e52419c79abf9507eec0a0\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"combine\"\nversion = \"3.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da3da6baa321ec19e1cc41d31bf599f00c783d0517095cdaf0332e3fe8d20680\"\ndependencies = [\n \"ascii\",\n \"byteorder\",\n \"either\",\n \"memchr\",\n \"unreachable\",\n]\n\n[[package]]\nname = \"conn_pool\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"consume_on_drop\",\n \"derive_more\",\n \"futures\",\n \"genetic_algorithm\",\n \"itertools 0.13.0\",\n \"lru\",\n \"pretty_assertions\",\n \"pyo3\",\n \"pyo3_util\",\n \"rand\",\n \"rstest\",\n \"scopeguard\",\n \"serde\",\n \"serde-pickle\",\n \"smart-default\",\n \"statrs\",\n \"strum\",\n \"test-log\",\n \"thiserror 1.0.63\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c74b8349d32d297c9134b8c88677813a227df8f779daa29bfc29c183fe3dca6\"\n\n[[package]]\nname = \"consume_on_drop\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47d91586aac6b9f9e32032b8ebf58a8eb03f4b58d3e18ea493b8b2083cb7b88e\"\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec182b0ca2f35d8fc196cf3404988fd8b8c739a4d270ff118a398feb0cbec1ca\"\ndependencies = [\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51e852e6dc9a5bed1fae92dd2375037bf2b768725bf3be87811edee3249d09ad\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1137cd7e7fc0fb5d3c5a8678be38ec56e819125d8d7907411fe24ccb943faca8\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-epoch\",\n \"crossbeam-queue\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"db_proto\"\nversion = \"0.1.0\"\ndependencies = [\n \"derive_more\",\n \"paste\",\n \"pretty_assertions\",\n \"thiserror 1.0.63\",\n \"uuid\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a9b99b9cbbe49445b21764dc0625032a89b145a2642e67603e1c936f5458d05\"\ndependencies = [\n \"derive_more-impl\",\n]\n\n[[package]]\nname = \"derive_more-impl\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7330aeadfbe296029522e6c40f315320aba36fc43a5b3632f3795348f3bd22\"\ndependencies = [\n \"convert_case\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"edb-graphql-parser\"\nversion = \"0.3.0\"\nsource = \"git+https://github.com/edgedb/graphql-parser#49f0e0144fac00750db6c448b7050d054e609701\"\ndependencies = [\n \"combine\",\n \"num-bigint 0.2.6\",\n \"num-traits\",\n \"thiserror 1.0.63\",\n]\n\n[[package]]\nname = \"edgedb-errors\"\nversion = \"0.4.2\"\nsource = \"git+https://github.com/edgedb/edgedb-rust#b38fb4af07ae0017329eb3cce30ca37fe12acd29\"\ndependencies = [\n \"bytes\",\n]\n\n[[package]]\nname = \"edgedb-protocol\"\nversion = \"0.6.1\"\nsource = \"git+https://github.com/edgedb/edgedb-rust#b38fb4af07ae0017329eb3cce30ca37fe12acd29\"\ndependencies = [\n \"bigdecimal\",\n \"bitflags\",\n \"bytes\",\n \"edgedb-errors\",\n \"num-bigint 0.4.6\",\n \"num-traits\",\n \"snafu\",\n \"uuid\",\n]\n\n[[package]]\nname = \"edgeql-parser\"\nversion = \"0.1.0\"\ndependencies = [\n \"append-only-vec\",\n \"base32\",\n \"bigdecimal\",\n \"bumpalo\",\n \"edgeql-parser-derive\",\n \"indexmap\",\n \"memchr\",\n \"num-bigint 0.4.6\",\n \"phf\",\n \"pyo3\",\n \"serde\",\n \"serde_json\",\n \"sha2\",\n \"snafu\",\n \"thiserror 1.0.63\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"edgeql-parser-derive\"\nversion = \"0.1.0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"edgeql-parser-python\"\nversion = \"0.1.0\"\ndependencies = [\n \"bigdecimal\",\n \"bincode\",\n \"blake2\",\n \"bytes\",\n \"edgedb-protocol\",\n \"edgeql-parser\",\n \"indexmap\",\n \"num-bigint 0.4.6\",\n \"once_cell\",\n \"pyo3\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b45de904aa0b010bce2ab45264d0631681847fa7b6f2eaa7dab7619943bc4f59\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"enum_dispatch\"\nversion = \"0.3.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa18ce2bc66555b3218614519ac839ddb759a7d6720732f979ef8d13be147ecd\"\ndependencies = [\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f2c92ceda6ceec50f43169f9ee8424fe2db276791afde7b2cd8bc084cb376ab\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13fa619b91fb2381732789fc5de83b45675e882f66623b7d8cb4f643017018d\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"eventsource-stream\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74fef4569247a5f429d9156b9d0a2599914385dd189c539334c625d8099d90ab\"\ndependencies = [\n \"futures-core\",\n \"nom\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"factorial\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6398219c33c5768705156b8a69c99c463a51847e2d3647f5adce32bb6e990b1c\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1b589b4dc103969ad3cf85c950899926ec64300a1a46d76c03a6072957036f0\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide 0.8.0\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-timer\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f288b0a4f20f9a56b5d1da57e2227c661b7b16168e2f72365f57b63326e29b24\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"gel_auth\"\nversion = \"0.1.0\"\ndependencies = [\n \"base64\",\n \"constant_time_eq\",\n \"derive_more\",\n \"hex-literal\",\n \"hmac\",\n \"md5\",\n \"pretty_assertions\",\n \"rand\",\n \"roaring\",\n \"rstest\",\n \"sha2\",\n \"thiserror 2.0.3\",\n \"tracing\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"genetic_algorithm\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c97d09d14331bf7ffb53c9c1df16e727b3eb2668164ee181e61d316cb7a7d5a\"\ndependencies = [\n \"cardinality-estimator\",\n \"crossbeam\",\n \"factorial\",\n \"itertools 0.10.5\",\n \"log\",\n \"num\",\n \"rand\",\n \"rayon\",\n \"streaming-stats\",\n \"thread_local\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40ecd4077b5ae9fd2e9e169b102c6c330d0605168eb0e8bf79952b256dbefffd\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"graphql-rewrite\"\nversion = \"0.1.0\"\ndependencies = [\n \"combine\",\n \"edb-graphql-parser\",\n \"num-bigint 0.4.6\",\n \"num-traits\",\n \"pretty_assertions\",\n \"pyo3\",\n \"thiserror 1.0.63\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e8ac6999421f49a846c2d4411f337e53497d8ec55d67753beffa43c5d9205\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http 1.1.0\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hex-literal\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fe2267d4ed49bc07b63801559be28c718ea06c4738b7a03c94df7386d2cde46\"\n\n[[package]]\nname = \"hexdump\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf31ab66ed8145a1c7427bd8e9b42a6131bd74ccf444f69b9e620c2e73ded832\"\ndependencies = [\n \"arrayvec\",\n]\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"0.1.0\"\ndependencies = [\n \"eventsource-stream\",\n \"futures\",\n \"pyo3\",\n \"pyo3_util\",\n \"reqwest\",\n \"rstest\",\n \"scopeguard\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http 1.1.0\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http 1.1.0\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbbff0a806a4728c99295b254c8838933b5b082d75e3cb70c8dab21fdfbcfa9a\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2\",\n \"http 1.1.0\",\n \"http-body\",\n \"httparse\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08afdbb5c31130e3034af566421053ab03787c640246a446327f550d11bcb333\"\ndependencies = [\n \"futures-util\",\n \"http 1.1.0\",\n \"hyper\",\n \"hyper-util\",\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-tls\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70206fc6890eaca9fde8a0bf71caa2ddfc9fe045ac9e5c70df101a7dbde866e0\"\ndependencies = [\n \"bytes\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-util\",\n \"native-tls\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41296eb09f183ac68eec06e03cdbea2e759633d4067b2f6552fc2e009bcad08b\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http 1.1.0\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93ead53efc7ea8ed3cfb0c79fc8023fbb782a5432b52830b6518941cebe6505c\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5\"\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"iter-read\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c397ca3ea05ad509c4ec451fea28b4771236a376ca1c69fd5143aae0cf8f93c4\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.158\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8adc4bb1803a324070e64a98ae98f38934d91957a99cfb3a43dcbc01bc56439\"\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lru\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37ee39891760e7d94734f6f63fedc29a2e4a152f836120753a72503f09fcf904\"\ndependencies = [\n \"hashbrown\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"matrixmultiply\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9380b911e3e96d10c1f415da0876389aaf1b56759054eeb0de7df940c456ba1a\"\ndependencies = [\n \"autocfg\",\n \"rawpointer\",\n]\n\n[[package]]\nname = \"md5\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"490cc448043f947bae3cbee9c203358d62dbee0db12107a74be5c30ccfd09771\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8a240ddb74feaf34a79a7add65a741f3167852fba007066dcac1ca548d89c08\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nalgebra\"\nversion = \"0.32.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b5c17de023a86f59ed79891b2e5d5a94c705dbe904a5b5c9c952ea6221b03e4\"\ndependencies = [\n \"approx\",\n \"matrixmultiply\",\n \"nalgebra-macros\",\n \"num-complex\",\n \"num-rational\",\n \"num-traits\",\n \"rand\",\n \"rand_distr\",\n \"simba\",\n \"typenum\",\n]\n\n[[package]]\nname = \"nalgebra-macros\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"254a5372af8fc138e36684761d3c0cdb758a4410e938babcff1c860ce14ddbfc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466\"\ndependencies = [\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35bd024e8b2ff75562e5f34e7f4905839deb4b22955ef5e73d2fea1b9813cb23\"\ndependencies = [\n \"num-bigint 0.4.6\",\n \"num-complex\",\n \"num-integer\",\n \"num-iter\",\n \"num-rational\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"090c7f9998ee0ff65aa5b723e4009f7b217707f1fb5ea551329cc4d6231fb304\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n \"serde\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824\"\ndependencies = [\n \"num-bigint 0.4.6\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n \"libm\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27b64972346851a39438c60b341ebc01bba47464ae329e55cf343eb93964efd9\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pgrust\"\nversion = \"0.1.0\"\ndependencies = [\n \"base64\",\n \"bytemuck\",\n \"captive_postgres\",\n \"clap\",\n \"clap_derive\",\n \"db_proto\",\n \"derive_more\",\n \"futures\",\n \"gel_auth\",\n \"hex-literal\",\n \"hexdump\",\n \"libc\",\n \"openssl\",\n \"paste\",\n \"percent-encoding\",\n \"pretty_assertions\",\n \"pyo3\",\n \"rand\",\n \"rstest\",\n \"scopeguard\",\n \"serde\",\n \"serde_derive\",\n \"test-log\",\n \"thiserror 1.0.63\",\n \"tokio\",\n \"tokio-openssl\",\n \"tracing\",\n \"tracing-subscriber\",\n \"url\",\n]\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\"\ndependencies = [\n \"phf_macros\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_macros\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3444646e286606587e49f3bcf1679b8cef1dc2c5ecc29ddacaffc305180d464b\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\"\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da544ee218f0d287a911e9c99a39a8c9bc8fcad3cb8db5959940044ecfc67265\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"pyo3\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ebb0c0cc0de9678e53be9ccf8a2ab53045e6e3a8be03393ceccc5e7396ccb40\"\ndependencies = [\n \"cfg-if\",\n \"indoc\",\n \"libc\",\n \"memoffset\",\n \"once_cell\",\n \"portable-atomic\",\n \"pyo3-build-config\",\n \"pyo3-ffi\",\n \"pyo3-macros\",\n \"serde\",\n \"unindent\",\n]\n\n[[package]]\nname = \"pyo3-build-config\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e3ce69c4ec34476534b490e412b871ba03a82e35604c3dfb95fcb6bfb60c09\"\ndependencies = [\n \"once_cell\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"pyo3-ffi\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b09f311c76b36dfd6dd6f7fa6f9f18e7e46a1c937110d283e80b12ba2468a75\"\ndependencies = [\n \"libc\",\n \"pyo3-build-config\",\n]\n\n[[package]]\nname = \"pyo3-macros\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd4f74086536d1e1deaff99ec0387481fb3325c82e4e48be0e75ab3d3fcb487a\"\ndependencies = [\n \"proc-macro2\",\n \"pyo3-macros-backend\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pyo3-macros-backend\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e77dfeb76b32bbf069144a5ea0a36176ab59c8db9ce28732d0f06f096bbfbc8\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"pyo3-build-config\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pyo3_util\"\nversion = \"0.1.0\"\ndependencies = [\n \"nix\",\n \"pyo3\",\n \"scopeguard\",\n \"thiserror 1.0.63\",\n \"tokio\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rand_distr\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32cb0b9bc82b0a0876c2dd994a7e7a2683d3e7390ca40e6886785ef0c7e3ee31\"\ndependencies = [\n \"num-traits\",\n \"rand\",\n]\n\n[[package]]\nname = \"rawpointer\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60a357793950651c4ed0f3f52338f53b2f809f32d83a07f72909fa13e4c6c1e3\"\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4219d74c6b67a3654a9fbebc4b419e22126d13d2f3c4a07ee0cb61ff79a79619\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.7\",\n \"regex-syntax 0.8.4\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.4\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"relative-path\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba39f3699c378cd8970968dcbff9c43159ea4cfbd88d43c00b22f2ef10a435d2\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f713147fbe92361e52392c73b8c9e48c04c6625bce969ef54dc901e58e042a7b\"\ndependencies = [\n \"async-compression\",\n \"base64\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-core\",\n \"futures-util\",\n \"h2\",\n \"http 1.1.0\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-tls\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"native-tls\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustls-pemfile\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tokio-util\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"wasm-streams\",\n \"web-sys\",\n \"windows-registry\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"roaring\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f4b84ba6e838ceb47b41de5194a60244fac43d9fe03b71dbe8c5a201081d6d1\"\ndependencies = [\n \"bytemuck\",\n \"byteorder\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a2c585be59b6b5dd66a9d2084aa1d8bd52fbdb806eafdeffb52791147862035\"\ndependencies = [\n \"futures\",\n \"futures-timer\",\n \"rstest_macros\",\n \"rustc_version\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"825ea780781b15345a146be27eaefb05085e337e869bff01b4306a4fd4a9ad5a\"\ndependencies = [\n \"cfg-if\",\n \"glob\",\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"relative-path\",\n \"rustc_version\",\n \"syn\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rust_native\"\nversion = \"0.1.0\"\ndependencies = [\n \"conn_pool\",\n \"http 0.1.0\",\n \"pgrust\",\n \"pyo3\",\n \"pyo3_util\",\n \"tokio\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a85d50532239da68e9addb745ba38ff4612a242c1c7ceea689c4bc7c2f43c36f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"415d9944693cb90382053259f89fbb077ea730ad7273047ec63b19bc9b160ba8\"\ndependencies = [\n \"once_cell\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"955d28af4278de8121b7ebeb796b6a45735dc01436d898801014aced2773a3d6\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"safe_arch\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3460605018fdc9612bce72735cba0d27efbcd9904780d44c7e3a9948f96148a\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01227be5826fa0690321a2ba6c5cd57a19cf3f6a09e76973b58e61de6ab9d1c1\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea4a292869320c0272d7bc55a5a6aafaff59b4f63404a003887b679a2e05b4b6\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.209\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"99fce0ffe7310761ca6bf9faf5115afbc19688edd00171d81b1bb1b116c63e09\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-pickle\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c762ad136a26407c6a80825813600ceeab5e613660d93d79a41f0ec877171e71\"\ndependencies = [\n \"byteorder\",\n \"iter-read\",\n \"num-bigint 0.4.6\",\n \"num-traits\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.209\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5831b979fd7b5439637af1752d535ff49f4860c0f341d1baeb6faf0f4242170\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.127\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8043c06d9f82bd7271361ed64f415fe5e12a77fdb52e573e7f06a516dea329ad\"\ndependencies = [\n \"indexmap\",\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"simba\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"061507c94fc6ab4ba1c9a0305018408e312e17c041eb63bef8aa726fa33aceae\"\ndependencies = [\n \"approx\",\n \"num-complex\",\n \"num-traits\",\n \"paste\",\n \"wide\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"smart-default\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eb01866308440fc64d6c44d9e86c5cc17adfe33c4d6eed55da9145044d0ffc1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"snafu\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b835cb902660db3415a672d862905e791e54d306c6e8189168c7f3d9ae1c79d\"\ndependencies = [\n \"backtrace\",\n \"snafu-derive\",\n]\n\n[[package]]\nname = \"snafu-derive\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d1e02fca405f6280643174a50c942219f0bbf4dbf7d480f1dd864d6f211ae5\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"statrs\"\nversion = \"0.17.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f697a07e4606a0a25c044de247e583a330dbb1731d11bc7350b81f48ad567255\"\ndependencies = [\n \"approx\",\n \"nalgebra\",\n \"num-traits\",\n \"rand\",\n]\n\n[[package]]\nname = \"streaming-stats\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0d670ce4e348a2081843569e0f79b21c99c91bb9028b3b3ecb0f050306de547\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7065abeca94b6a8a577f9bd45aa0867a2238b74e8eb67cf10d492bc39351394\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c879d448e9d986b661742763247d3693ed13609438cf3d006f51f5368a5ba6b\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e1d1b10ced5ca923a1fcb8d03e96b8d3268065d724548c0211415ff6ac6bac4\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.12.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fcd239983515c23a32fb82099f97d0b11b8c72f654ed659363a95c3dad7a53\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"test-log\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3dffced63c2b5c7be278154d76b479f9f9920ed34e7574201407f0b14e2bbb93\"\ndependencies = [\n \"env_logger\",\n \"test-log-macros\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"test-log-macros\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5999e24eaa32083191ba4e425deb75cdf25efefabe5aaccb7446dd0d4122a3f5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724\"\ndependencies = [\n \"thiserror-impl 1.0.63\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c006c85c7651b3cf2ada4584faa36773bd07bac24acfb39f3c431b36d7e667aa\"\ndependencies = [\n \"thiserror-impl 2.0.3\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f077553d607adc1caf65430528a576c757a71ed73944b66ebb58ef2bbd243568\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.41.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tokio-native-tls\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2\"\ndependencies = [\n \"native-tls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-openssl\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59df6849caa43bb7567f9a36f863c447d95a11d5903c9cc334ba32576a27eadd\"\ndependencies = [\n \"openssl\",\n \"openssl-sys\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c7bc40d0e5a97695bb96e27995cd3a08538541b0a846f65bba7a359f36700d4\"\ndependencies = [\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583c44c02ad26b0c3f3066fe629275e50627026c51ac2e595cca4c230ce1ce1d\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4c87d22b6e3f4a18d4d40ef354e97c90fcb14dd91d7dc0aa9d8a1172ebf7202\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0336d538f7abc86d282a4189614dfaa90810dfc2c6f6427eaf88e16311dd225d\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"229730647fbc343e3a80e463c1db7f78f3855d3f3739bee0dda773c9a037c90a\"\n\n[[package]]\nname = \"unindent\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7de7d73e1754487cb58364ee906a499937a0dfabd86bcb980fa99ec8c8fa2ce\"\n\n[[package]]\nname = \"unreachable\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\ndependencies = [\n \"void\",\n]\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22784dbdf76fdde8af1aeda5622b546b422b6fc585325248a2bf9f5e41e94d6c\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81dfa00651efa65069b0b6b651f4aaa31ba9e3c3ce0137aaad053604ee7e0314\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d\"\n\n[[package]]\nname = \"wasm-streams\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b65dc4c90b63b118468cf747d8bf3566c1913ef60be765b5730ead9e0a3ba129\"\ndependencies = [\n \"futures-util\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"wide\"\nversion = \"0.7.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b828f995bf1e9622031f8009f8481a85406ce1f4d4588ff746d872043e855690\"\ndependencies = [\n \"bytemuck\",\n \"safe_arch\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-registry\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0\"\ndependencies = [\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68a9bda4691f099d435ad181000724da8e5899daa10713c2d432552b9ccd3a6f\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"wyhash\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf6e163c25e3fac820b4b453185ea2dea3b6a3e0a721d4d23d75bd33734c295\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.0576171875,
          "content": "[workspace]\nmembers = [\n    \"edb/edgeql-parser\",\n    \"edb/edgeql-parser/edgeql-parser-derive\",\n    \"edb/edgeql-parser/edgeql-parser-python\",\n    \"edb/graphql-rewrite\",\n    \"edb/server/_rust_native\",\n    \"rust/auth\",\n    \"rust/captive_postgres\",\n    \"rust/conn_pool\",\n    \"rust/db_proto\",\n    \"rust/pgrust\",\n    \"rust/http\",\n    \"rust/pyo3_util\"\n]\nresolver = \"2\"\n\n[workspace.dependencies]\npyo3 = { version = \"0.23.1\", features = [\"extension-module\", \"serde\", \"macros\"] }\ntokio = { version = \"1\", features = [\"rt\", \"rt-multi-thread\", \"macros\", \"time\", \"sync\", \"net\", \"io-util\"] }\ntracing = \"0.1.40\"\ntracing-subscriber = { version = \"0.3.18\", features = [\"registry\", \"env-filter\"] }\n\ngel_auth = { path = \"rust/auth\" }\ndb_proto = { path = \"rust/db_proto\" }\ncaptive_postgres = { path = \"rust/captive_postgres\" }\nconn_pool = { path = \"rust/conn_pool\" }\npgrust = { path = \"rust/pgrust\" }\nhttp = { path = \"rust/http\" }\npyo3_util = { path = \"rust/pyo3_util\" }\n\n[profile.release]\ndebug = true\nlto = true\n\n[workspace.lints.rust]\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(never)'] }\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.27734375,
          "content": "recursive-include edb *.edgeql *.esdl *.py *.txt\nrecursive-include tests *.edgeql *.esdl *.py\ninclude LICENSE README.md logo.svg\n\nrecursive-include edb/edgeql-parser *\nrecursive-include edb/edgeql-parser/edgeql-parser-python *\nrecursive-include edb/server/protocol/auth_ext/_static *\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.544921875,
          "content": ".PHONY: build docs cython postgres postgres-ext pygments build-reqs\n.DEFAULT_GOAL := build\n\nSPHINXOPTS:=\"-W -n\"\n\nBUILD_REQS_SCRIPT='print(\"\\x00\".join(__import__(\"build\").ProjectBuilder(\".\").build_system_requires))'\n\nbuild-reqs:\n\tpython -m pip install --no-build-isolation build\n\tpython -c $(BUILD_REQS_SCRIPT) | xargs -0 python -m pip install --no-build-isolation\n\n\ncython: build-reqs\n\tfind edb -name '*.pyx' | xargs touch\n\tBUILD_EXT_MODE=py-only python setup.py build_ext --inplace\n\n\n# Just rebuild actually changed cython. This *should* work, since\n# that is how build systems are supposed to be, but it sometimes\n# fails in annoying ways.\ncython-fast: build-reqs\n\tBUILD_EXT_MODE=py-only python setup.py build_ext --inplace\n\n\nrust: build-reqs\n\tBUILD_EXT_MODE=rust-only python setup.py build_ext --inplace\n\n\ncli: build-reqs\n\tpython setup.py build_cli\n\n\ndocs: build-reqs\n\tfind docs -name '*.rst' | xargs touch\n\t$(MAKE) -C docs html SPHINXOPTS=$(SPHINXOPTS) BUILDDIR=\"../build\"\n\n\npostgres: build-reqs\n\tpython setup.py build_postgres\n\n\nparsers:\n\tpython setup.py build_parsers --inplace\n\n\nlibpg-query:\n\tpython setup.py build_libpg_query\n\n\nui: build-reqs\n\tpython setup.py build_ui\n\n\npygments: build-reqs\n\tout=$$(edb gen-meta-grammars edgeql) && \\\n\t\techo \"$$out\" > edb/tools/pygments/edgeql/meta.py\n\n\ncasts: build-reqs\n\tout=$$(edb gen-cast-table) && \\\n\t\techo \"$$out\" > docs/reference/edgeql/casts.csv\n\n\nbuild: build-reqs\n\tfind edb -name '*.pyx' | xargs touch\n\tpip install --upgrade --editable .[docs,test,language-server]\n\n\nclean:\n\tgit clean -Xfd -e \"!/*.code-workspace\" -e \"!/*.vscode\"\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1220703125,
          "content": "EdgeDB\nCopyright 2008-present EdgeDB Inc.\n\nThis product includes software developed by\nEdgeDB Inc (https://www.edgedb.com/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.482421875,
          "content": "<p align=\"center\">\n  <a href=\"https://www.edgedb.com\">\n    <img src=\"https://www.edgedb.com/github_banner.png\">\n  </a>\n</p>\n\n<div align=\"center\">\n  <h1>EdgeDB</h1>\n  <a href=\"https://github.com/edgedb/edgedb\" rel=\"nofollow\">\n    <img src=\"https://img.shields.io/github/stars/edgedb/edgedb\" alt=\"Stars\">\n  </a>\n  <a href=\"https://github.com/edgedb/edgedb/actions\">\n    <img src=\"https://github.com/edgedb/edgedb/workflows/Tests/badge.svg?event=push&branch=master\" />\n  </a>\n  <a href=\"https://github.com/edgedb/edgedb/blob/master/LICENSE\">\n    <img alt=\"license\" src=\"https://img.shields.io/badge/license-Apache%202.0-blue\" />\n  </a>\n  <a href=\"https://discord.gg/umUueND6ag\">\n    <img alt=\"discord\" src=\"https://img.shields.io/discord/841451783728529451?color=5865F2&label=discord&logo=discord&logoColor=8a9095\">\n  </a>\n  <br />\n  <br />\n  <a href=\"https://www.edgedb.com/docs/guides/quickstart\">Quickstart</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://www.edgedb.com\">Website</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://www.edgedb.com/docs\">Docs</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://www.edgedb.com/tutorial\">Playground</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://www.edgedb.com/blog\">Blog</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://discord.gg/umUueND6ag\">Discord</a>\n  <span>&nbsp;&nbsp;•&nbsp;&nbsp;</span>\n  <a href=\"https://twitter.com/edgedatabase\">Twitter</a>\n  <br />\n\n</div>\n\n<br />\n<br />\n\n<br/>\n<div align=\"center\">\n  <h2>What is EdgeDB?</h2>\n  <p style=\"max-width: 450px;\">\n    EdgeDB is a new kind of database\n    <br/>\n    that takes the best parts of\n    <br/>\n    relational databases, graph\n    <br/>\n    databases, and ORMs. We call it\n    <br/>a <b>graph-relational database</b>.\n  </p>\n</div>\n\n<br/>\n\n<br/>\n<div align=\"center\">\n  <h3>🧩 Types, not tables 🧩</h3>\n</div>\n<br/>\n\nSchema is the foundation of your application. It should be something you can\nread, write, and understand.\n\nForget foreign keys; tabular data modeling is a relic of an older age, and it\n[isn't compatible](https://en.wikipedia.org/wiki/Object%E2%80%93relational_impedance_mismatch)\nwith modern languages. Instead, EdgeDB thinks about schema the same way you do:\nas **object types** containing **properties** connected by **links**.\n\n```esdl\ntype Person {\n  required name: str;\n}\n\ntype Movie {\n  required title: str;\n  multi actors: Person;\n}\n```\n\nThis example is intentionally simple, but EdgeDB supports everything you'd\nexpect from your database: a strict type system, indexes, constraints, computed\nproperties, stored procedures...the list goes on. Plus it gives you some shiny\nnew features too: link properties, schema mixins, and best-in-class JSON\nsupport. Read the [schema docs](https://www.edgedb.com/docs/datamodel/index)\nfor details.\n\n<!-- ### Objects, not rows. ❄️ -->\n\n<br/>\n<div align=\"center\">\n  <h3>🌳 Objects, not rows 🌳</h3>\n</div>\n<br/>\n\nEdgeDB's super-powered query language EdgeQL is designed as a ground-up\nredesign of SQL. EdgeQL queries produce rich, structured objects, not flat\nlists of rows. Deeply fetching related objects is painless...bye, bye, JOINs.\n\n```esdl\nselect Movie {\n  title,\n  actors: {\n    name\n  }\n}\nfilter .title = \"The Matrix\"\n```\n\nEdgeQL queries are also _composable_; you can use one EdgeQL query as an\nexpression inside another. This property makes things like _subqueries_ and\n_nested mutations_ a breeze.\n\n```esdl\ninsert Movie {\n  title := \"The Matrix Resurrections\",\n  actors := (\n    select Person\n    filter .name in {\n      'Keanu Reeves',\n      'Carrie-Anne Moss',\n      'Laurence Fishburne'\n    }\n  )\n}\n```\n\nThere's a lot more to EdgeQL: a comprehensive standard library, computed\nproperties, polymorphic queries, `with` blocks, transactions, and much more.\nRead the [EdgeQL docs](https://www.edgedb.com/docs/edgeql/index) for the full\npicture.\n\n<br/>\n<div align=\"center\">\n  <h3>🦋 More than a mapper 🦋</h3>\n</div>\n<br/>\n\nWhile EdgeDB solves the same problems as ORM libraries, it's so much more. It's\na full-fledged database with a\n[powerful and elegant query language](https://www.edgedb.com/docs/edgeql/index), a\n[migrations system](https://www.edgedb.com/docs/guides/migrations/index), a\n[suite of client libraries](https://www.edgedb.com/docs/clients/index) in\ndifferent languages, a\n[command line tool](https://www.edgedb.com/docs/cli/index), and—coming soon—a\ncloud hosting platform. The goal is to rethink every aspect of how developers\nmodel, migrate, manage, and query their database.\n\nHere's a taste-test of EdgeDB's next-level developer experience: you can\ninstall our CLI, spin up an instance, and open an interactive EdgeQL shell with\njust three commands.\n\n```\n$ curl --proto '=https' --tlsv1.2 -sSf https://sh.edgedb.com | sh\n$ edgedb project init\n$ edgedb\nedgedb> select \"Hello world!\"\n```\n\nWindows users: use this Powershell command to install the CLI.\n\n```\nPS> iwr https://ps1.edgedb.com -useb | iex\n```\n\n<br />\n\n## Get started\n\nTo start learning about EdgeDB, check out the following resources:\n\n- **[The quickstart](https://www.edgedb.com/docs/guides/quickstart)**. If\n  you're just starting out, the 10-minute quickstart guide is the fastest way\n  to get up and running.\n- **[EdgeDB Cloud 🌤️](https://www.edgedb.com/cloud)**. The best\n  most effortless way to host your EdgeDB database in the cloud.\n- **[The interactive tutorial](https://www.edgedb.com/tutorial)**. For a\n  structured deep-dive into the EdgeQL query language, try the web-based\n  tutorial— no need to install anything.\n- **[The e-book](https://www.edgedb.com/easy-edgedb)**. For the most\n  comprehensive walkthrough of EdgeDB concepts, check out our illustrated\n  e-book [Easy EdgeDB](https://www.edgedb.com/easy-edgedb). It's designed to\n  walk a total beginner through EdgeDB in its entirety, from the basics through\n  advanced concepts.\n- **The docs.** Jump straight into the docs for\n  [schema modeling](https://www.edgedb.com/docs/datamodel/index) or\n  [EdgeQL](https://www.edgedb.com/docs/edgeql/index)!\n\n<br />\n\n## Contributing\n\nPRs are always welcome! To get started, follow\n[this guide](https://www.edgedb.com/docs/internals/dev) to build EdgeDB from\nsource on your local machine.\n\n[File an issue 👉](https://github.com/edgedb/edgedb/issues/new/choose)\n<br />\n[Start a Discussion 👉](https://github.com/edgedb/edgedb/discussions/new)\n<br />\n[Join the discord 👉](https://discord.gg/umUueND6ag)\n\n<br />\n\n## License\n\nThe code in this repository is developed and distributed under the\nApache 2.0 license. See [LICENSE](LICENSE) for details.\n"
        },
        {
          "name": "build_backend.py",
          "type": "blob",
          "size": 0.8642578125,
          "content": "#\n# This source file is part of the EdgeDB open source project.\n#\n# Copyright 2008-present MagicStack Inc. and the EdgeDB authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# This is a straight proxy to setuptools.build_meta backend that exists\n# solely because someone thought that in-tree build dependencies should\n# require this.\n\nfrom setuptools.build_meta import *  # noqa\n"
        },
        {
          "name": "dev-notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "edb",
          "type": "tree",
          "content": null
        },
        {
          "name": "edb_stat_statements",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 1.3505859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"110\" height=\"90\" viewBox=\"0 0 110 90\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M93.17 44.76c0 7.59-3.043 8.95-6.445 8.95h-7.233V35.808h7.233c3.402 0 6.446 1.361 6.446 8.952zm-3.688 0c0-5.3-1.61-5.551-3.938-5.551h-2.256v11.1h2.256c2.327 0 3.938-.25 3.938-5.55zM51.17 53.71V35.808h11.386v3.402h-7.59v3.652h5.728v3.366h-5.729v4.082h7.591v3.402H51.17zm17.76 35.808h3.796V0H68.93v89.518zm31.833-43.756v4.547h3.15c1.97 0 2.471-1.289 2.471-2.256 0-.752-.358-2.291-3.043-2.291h-2.578zm0-6.553v3.402h2.578c1.468 0 2.327-.645 2.327-1.72 0-1.073-.86-1.682-2.327-1.682h-2.578zm-3.796-3.402h7.305c3.831 0 4.977 2.686 4.977 4.62 0 1.79-1.146 3.079-1.934 3.437 2.292 1.11 2.686 3.366 2.686 4.512 0 1.504-.752 5.335-5.73 5.335h-7.304V35.807zM29.362 44.76c0 7.591-3.044 8.952-6.445 8.952h-7.233V35.807h7.233c3.401 0 6.445 1.361 6.445 8.952zm11.172 5.693c1.933 0 2.936-.644 3.294-1.074v-1.97h-3.08V44.33h6.124v7.126c-.537.824-3.474 2.435-6.16 2.435-4.403 0-8.127-1.719-8.127-9.31s3.76-8.952 7.161-8.952c5.335 0 6.66 2.793 7.09 5.264l-3.151.716c-.18-1.146-1.182-2.578-3.473-2.578-2.328 0-3.94.25-3.94 5.55s1.684 5.872 4.262 5.872zm-14.86-5.693c0-5.3-1.611-5.55-3.939-5.55h-2.256v11.1h2.256c2.328 0 3.939-.25 3.939-5.55zM0 53.711V35.807h11.387v3.402H3.796v3.652h5.729v3.366h-5.73v4.082h7.592v3.402H0z\" fill=\"#4A4A4A\" fill-rule=\"evenodd\"/>\n</svg>\n"
        },
        {
          "name": "postgres",
          "type": "commit",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.404296875,
          "content": "[project]\nname = \"gel-server\"\ndescription = \"Gel Server\"\nrequires-python = '>=3.12.0'\ndynamic = [\"version\"]\ndependencies = [\n    'edgedb==3.0.0b5',\n\n    'httptools>=0.6.0',\n    'immutables>=0.18',\n    'parsing~=2.0',\n    'uvloop~=0.21.0',\n\n    'click~=8.0',\n    'cryptography~=42.0',\n    'graphql-core~=3.1.5',\n    'jwcrypto~=1.3.1',\n    'psutil~=5.8',\n    'setproctitle~=1.2',\n\n    'hishel==0.0.24',\n    'webauthn~=2.0.0',\n    'argon2-cffi~=23.1.0',\n    'aiosmtplib~=3.0',\n    'tiktoken~=0.7.0',\n    'mistral_common~=1.2.1',\n]\n\n[project.scripts]\nedb = \"edb.tools.edb:edbcommands\"\n\nedgedb-server = \"edb.server.main:main\"\nedgedb-load-ext = \"edb.load_ext.main:main\"\nedgedb-ls = \"edb.language_server.main:main\"\nedgedb = \"edb.cli:rustcli\"\n\ngel-server = \"edb.server.main:main\"\ngel-load-ext = \"edb.load_ext.main:main\"\ngel-ls = \"edb.language_server.main:main\"\ngel = \"edb.cli:rustcli\"\n\n[project.optional-dependencies]\ntest = [\n    'black~=24.2.0',\n    'coverage~=7.4',\n    'ruff==0.3.7',\n    'asyncpg~=0.30.0',\n\n    # Needed for testing asyncutil\n    'async_solipsism==0.5.0',\n\n    # Needed for test_docs_sphinx_ext\n    'requests-xml~=0.2.3',\n\n    # For rebuilding GHA workflows\n    'Jinja2~=2.11',\n    'MarkupSafe~=1.1',\n    'PyYAML~=6.0',\n\n    'mypy[faster-cache] ~= 1.13.0',\n    # mypy stub packages; when updating, you can use mypy --install-types\n    # to install stub packages and then pip freeze to read out the specifier\n    'types-docutils~=0.17.0,<0.17.6', # incomplete nodes.document.__init__\n    'types-Jinja2~=2.11',\n    'types-MarkupSafe~=1.1',\n    'types-setuptools~=71.1.0',\n    'types-typed-ast~=1.4.2',\n    'types-requests~=2.25.6',\n    'types-PyYAML~=6.0',\n\n    'prometheus_client~=0.11.0',\n\n    'docutils~=0.17.0',\n    'lxml~=4.9.0',\n    'Pygments~=2.10.0',\n    'Sphinx~=4.2.0',\n    'sphinxcontrib-asyncio~=0.3.0',\n    'sphinxcontrib-applehelp<1.0.8',\n    'sphinxcontrib-devhelp<1.0.6',\n    'sphinxcontrib-htmlhelp<2.0.5',\n    'sphinxcontrib-serializinghtml<1.1.10',\n    'sphinxcontrib-qthelp<1.0.7',\n    'sphinx_code_tabs~=0.5.3',\n]\n\ndocs = [\n    'docutils~=0.17.0',\n    'lxml~=4.9.0',\n    'Pygments~=2.10.0',\n    'Sphinx~=4.2.0',\n    'sphinxcontrib-asyncio~=0.3.0',\n    'sphinx_code_tabs~=0.5.3',\n]\n\nlanguage-server = ['pygls~=1.3.1']\n\n[build-system]\nrequires = [\n    \"Cython(>=3.0.11,<3.1.0)\",\n    \"packaging >= 21.0\",\n    \"setuptools >= 67\",\n    \"setuptools-rust ~= 1.8\",\n    \"wheel\",\n\n    \"parsing ~= 2.0\",\n    \"edgedb==3.0.0b5\",\n]\n# Custom backend needed to set up build-time sys.path because\n# setup.py needs to import `edb.buildmeta`.\nbuild-backend = \"build_backend\"\nbackend-path = [\".\"]\n\n[tool.setuptools]\npackages = { find = { include = [\"edb\", \"edb.*\"] } }\nzip-safe = false\n\n\n# ========================\n#          BLACK\n# ========================\n[tool.black]\nline-length = 80\ntarget-version = [\"py310\"]\nskip-string-normalization = true\n\n\n# ========================\n#          MYPY\n# ========================\n\n[tool.mypy]\nexclude = [\n    \"^.eggs\",\n    \"^.github\",\n    \"^.vscode\",\n    \"^build\",\n    \"^dist\",\n    \"^docs\",\n    \"^postgres\",\n    \"^target\",\n]\nfiles = \".\"\npython_version = \"3.12\"\nplugins = \"edb/tools/mypy/plugin.py\"\nfollow_imports = \"normal\"\nignore_missing_imports = true\nwarn_redundant_casts = true\nwarn_unused_configs = true\nshow_column_numbers = true\nshow_error_codes = true\nlocal_partial_types = true\n# This being an error seems super confused to me.\ndisable_error_code = \"type-abstract\"\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"edb.common.adapter\",\n    \"edb.edgeql.compiler.*\",\n    \"edb.edgeql.codegen\",\n    \"edb.edgeql.declarative\",\n    \"edb.edgeql.tracer\",\n    \"edb.graphql.types\",\n    \"edb.ir.*\",\n    \"edb.pgsql.metaschema\",\n    \"edb.pgsql.codegen\",\n    \"edb.pgsql.types\",\n    \"edb.pgsql.compiler.*\",\n    \"edb.repl.*\",\n    \"edb.schema.*\",\n    \"edb.schema.reflection.*\",\n    \"edb.server.cluster\",\n    \"edb.server.compiler.*\",\n    \"edb.server.config\",\n    \"edb.server.connpool.*\",\n    \"edb.server.protocol.*\",\n    \"edb.server.pgcluster\",\n    \"edb.server.pgconnparams\",\n]\n# Equivalent of --strict on the command line,\n# but without disallow_untyped_calls:\ndisallow_subclassing_any = true\ndisallow_any_generics = true\n# disallow_untyped_calls = true\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\ncheck_untyped_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = true\nwarn_unused_ignores = true\nwarn_return_any = true\nno_implicit_reexport = true\nstrict_equality = true\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"edb.common.checked\",\n    \"edb.common.compiler\",\n    \"edb.common.ordered\",\n    \"edb.common.parametric\",\n    \"edb.common.retryloop\",\n    \"edb.common.struct\",\n    \"edb.common.topological\",\n    \"edb.common.uuidgen\",\n    \"edb.common.value_dispatch\",\n]\n# Equivalent of --strict on the command line:\ndisallow_subclassing_any = true\ndisallow_any_generics = true\ndisallow_untyped_calls = true\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\ncheck_untyped_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = true\nwarn_unused_ignores = true\nwarn_return_any = true\nno_implicit_reexport = true\nstrict_equality = true\n\n\n# ========================\n#        COVERAGE\n# ========================\n[tool.coverage.run]\nbranch = false\nplugins = [\"Cython.Coverage\"]\nparallel = true\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"def __repr__\",\n    \"if debug\",\n    \"raise NotImplementedError\",\n    \"if __name__ == .__main__.\",\n]\nshow_missing = true\nignore_errors = true\n\n# Change the below to invalidate dependency cache in CI\n# CACHE-TAG: 2\n\n[tool.ruff]\nline-length = 80\nindent-width = 4\nexclude = [\"postgres\", \".github\"]\n\n[tool.ruff.lint]\npreview = true\nselect = [\"E\", \"F\", \"W\", \"B\"]\nignore = [\n    \"F541\", # f-string without any placeholders\n    \"B904\", # Within an except clause, raise exceptions with raise ... from err\n    # or raise ... from None to distinguish them from errors in\n    # exception handling\n    \"E731\", # Do not assign a lambda expression, use a def\n    \"E741\", # Ambiguous variable name: l or i or I\n    \"E252\", # Missing whitespace around parameter equals\n\n    # TODO: enable this\n    \"B905\", # zip() without an explicit strict= parameter\n\n    # TODO: enable this (this was tried before - it is non-trivial)\n    \"B019\", # Use of functools.lru_cache or functools.cache on methods can lead\n    # to memory leaks\n]\nflake8-bugbear.extend-immutable-calls = [\"immutables.Map\"]\n\n[tool.pyright]\n# Pyright has no idea about metaclass-generated getters for schema fields.\nreportAttributeAccessIssue = false\ntypeCheckingMode = \"off\"\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.06640625,
          "content": "[toolchain]\nchannel = \"1.80.1\"\ncomponents = [ \"rustfmt\", \"clippy\" ]\n"
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 38.7587890625,
          "content": "#\n# This source file is part of the EdgeDB open source project.\n#\n# Copyright 2008-present MagicStack Inc. and the EdgeDB authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nimport binascii\nimport os\nimport os.path\nimport pathlib\nimport platform\nimport shlex\nimport shutil\nimport subprocess\nimport textwrap\n\nimport setuptools\nfrom setuptools import extension as setuptools_extension\nfrom setuptools.command import build as setuptools_build\nfrom setuptools.command import build_ext as setuptools_build_ext\n\nimport distutils\n\nimport Cython.Build\nimport setuptools_rust\n\n\nEDGEDBCLI_REPO = 'https://github.com/edgedb/edgedb-cli'\n# This can be a branch, tag, or commit\nEDGEDBCLI_COMMIT = 'master'\n\nEDGEDBGUI_REPO = 'https://github.com/edgedb/edgedb-studio.git'\n# This can be a branch, tag, or commit\nEDGEDBGUI_COMMIT = 'main'\n\nPGVECTOR_REPO = 'https://github.com/pgvector/pgvector.git'\n# This can be a branch, tag, or commit\nPGVECTOR_COMMIT = 'v0.7.4'\n\nSAFE_EXT_CFLAGS: list[str] = []\nif flag := os.environ.get('EDGEDB_OPT_CFLAG'):\n    SAFE_EXT_CFLAGS += [flag]\nelse:\n    SAFE_EXT_CFLAGS += ['-O2']\n\nEXT_CFLAGS: list[str] = list(SAFE_EXT_CFLAGS)\n# See also: https://github.com/cython/cython/issues/5240\nEXT_CFLAGS += ['-Wno-error=incompatible-pointer-types']\nEXT_LDFLAGS: list[str] = []\n\nROOT_PATH = pathlib.Path(__file__).parent.resolve()\n\nEXT_INC_DIRS = [\n    (ROOT_PATH / 'edb' / 'server' / 'pgproto').as_posix(),\n    (ROOT_PATH / 'edb' / 'pgsql' / 'parser' / 'libpg_query').as_posix()\n]\n\nEXT_LIB_DIRS = [\n    (ROOT_PATH / 'edb' / 'pgsql' / 'parser' / 'libpg_query').as_posix()\n]\nEDBSS_DIR = ROOT_PATH / 'edb_stat_statements'\n\n\nif platform.uname().system != 'Windows':\n    EXT_CFLAGS.extend([\n        '-std=c99', '-fsigned-char', '-Wall', '-Wsign-compare', '-Wconversion'\n    ])\n\n\ndef _compile_build_meta(build_lib, version, pg_config, runstate_dir,\n                        shared_dir, version_suffix):\n    from edb.common import verutils\n\n    parsed_version = verutils.parse_version(version)\n    vertuple = list(parsed_version._asdict().values())\n    vertuple[2] = int(vertuple[2])\n    if version_suffix:\n        vertuple[4] = tuple(version_suffix.split('.'))\n    vertuple = tuple(vertuple)\n\n    pg_config_path = pathlib.Path(pg_config)\n    if not pg_config_path.is_absolute():\n        pg_config_path = f\"_ROOT / {str(pg_config_path)!r}\"\n    else:\n        pg_config_path = repr(str(pg_config_path))\n\n    if runstate_dir:\n        runstate_dir_path = pathlib.Path(runstate_dir)\n        if not runstate_dir_path.is_absolute():\n            runstate_dir_path = f\"_ROOT / {str(runstate_dir_path)!r}\"\n        else:\n            runstate_dir_path = repr(str(runstate_dir_path))\n    else:\n        runstate_dir_path = \"None  # default to <data-dir>\"\n\n    shared_dir_path = pathlib.Path(shared_dir)\n    if not shared_dir_path.is_absolute():\n        shared_dir_path = f\"_ROOT / {str(shared_dir_path)!r}\"\n    else:\n        shared_dir_path = repr(str(shared_dir_path))\n\n    content = textwrap.dedent('''\\\n        #\n        # This source file is part of the EdgeDB open source project.\n        #\n        # Copyright 2008-present MagicStack Inc. and the EdgeDB authors.\n        #\n        # Licensed under the Apache License, Version 2.0 (the \"License\");\n        #\n        # THIS FILE HAS BEEN AUTOMATICALLY GENERATED.\n        #\n\n        import pathlib\n\n        _ROOT = pathlib.Path(__file__).parent\n\n        PG_CONFIG_PATH = {pg_config_path}\n        RUNSTATE_DIR = {runstate_dir_path}\n        SHARED_DATA_DIR = {shared_dir_path}\n        VERSION = {version!r}\n    ''').format(\n        version=vertuple,\n        pg_config_path=pg_config_path,\n        runstate_dir_path=runstate_dir_path,\n        shared_dir_path=shared_dir_path,\n    )\n\n    directory = pathlib.Path(build_lib) / 'edb'\n    if not directory.exists():\n        directory.mkdir(parents=True)\n\n    with open(directory / '_buildmeta.py', 'w+t') as f:\n        f.write(content)\n\n\ndef _get_env_with_openssl_flags():\n    env = dict(os.environ)\n    cflags = env.get('EDGEDB_BUILD_OPENSSL_CFLAGS')\n    ldflags = env.get('EDGEDB_BUILD_OPENSSL_LDFLAGS')\n\n    if not (cflags or ldflags) and platform.system() == 'Darwin':\n        try:\n            openssl_prefix = pathlib.Path(subprocess.check_output(\n                ['brew', '--prefix', 'openssl'], text=True\n            ).strip())\n        except (FileNotFoundError, subprocess.CalledProcessError):\n            openssl_prefix = None\n        else:\n            pc_path = str(openssl_prefix / 'lib' / 'pkgconfig')\n            if 'PKG_CONFIG_PATH' in env:\n                env['PKG_CONFIG_PATH'] += f':{pc_path}'\n            else:\n                env['PKG_CONFIG_PATH'] = pc_path\n        try:\n            cflags = subprocess.check_output(\n                ['pkg-config', '--cflags', 'openssl'], text=True, env=env\n            ).strip()\n            ldflags = subprocess.check_output(\n                ['pkg-config', '--libs', 'openssl'], text=True, env=env\n            ).strip()\n        except FileNotFoundError:\n            # pkg-config is not installed\n            if openssl_prefix:\n                cflags = f'-I{openssl_prefix / \"include\"!s}'\n                ldflags = f'-L{openssl_prefix / \"lib\"!s}'\n            else:\n                return env\n        except subprocess.CalledProcessError:\n            # Cannot find flags with pkg-config\n            return env\n\n    if cflags:\n        if 'CPPFLAGS' in env:\n            env['CPPFLAGS'] += f' {cflags}'\n        elif 'CFLAGS' in env:\n            env['CFLAGS'] += f' {cflags}'\n        else:\n            env['CPPFLAGS'] = cflags\n    if ldflags:\n        if 'LDFLAGS' in env:\n            env['LDFLAGS'] += f' {ldflags}'\n        else:\n            env['LDFLAGS'] = ldflags\n    return env\n\n\ndef _compile_postgres(build_base, build_temp, *,\n                      force_build=False, fresh_build=True,\n                      run_configure=True, build_contrib=True,\n                      produce_compile_commands_json=False,\n                      run_tests=False):\n\n    proc = subprocess.run(\n        ['git', 'submodule', 'status', 'postgres'],\n        stdout=subprocess.PIPE,\n        universal_newlines=True,\n        check=True,\n        cwd=ROOT_PATH,\n    )\n    status = proc.stdout\n    if status[0] == '-':\n        print('postgres submodule not initialized, '\n              'run `git submodule init; git submodule update`')\n        exit(1)\n\n    source_stamp = _get_pg_source_stamp()\n\n    postgres_build = (build_base / 'postgres').resolve()\n    postgres_src = ROOT_PATH / 'postgres'\n    postgres_build_stamp = postgres_build / 'stamp'\n\n    if postgres_build_stamp.exists():\n        with open(postgres_build_stamp, 'r') as f:\n            build_stamp = f.read()\n    else:\n        build_stamp = None\n\n    is_outdated = source_stamp != build_stamp\n\n    if is_outdated or force_build:\n        system = platform.system()\n        if system == 'Darwin':\n            uuidlib = 'e2fs'\n        elif system == 'Linux':\n            uuidlib = 'e2fs'\n        else:\n            raise NotImplementedError('unsupported system: {}'.format(system))\n\n        if fresh_build and postgres_build.exists():\n            shutil.rmtree(postgres_build)\n        build_dir = postgres_build / 'build'\n        if not build_dir.exists():\n            build_dir.mkdir(parents=True)\n        if not run_configure:\n            run_configure = not (build_dir / 'Makefile').exists()\n\n        if run_configure or fresh_build or is_outdated:\n            env = _get_env_with_openssl_flags()\n            cmd = [\n                str(postgres_src / 'configure'),\n                '--prefix=' + str(postgres_build / 'install'),\n                '--with-openssl',\n                '--with-uuid=' + uuidlib,\n            ]\n            if os.environ.get('EDGEDB_DEBUG'):\n                cmd += [\n                    '--enable-tap-tests',\n                    '--enable-debug',\n                ]\n                cflags = os.environ.get(\"CFLAGS\", \"\")\n                cflags = f\"{cflags} -O0\"\n                env['CFLAGS'] = cflags\n            subprocess.run(cmd, check=True, cwd=str(build_dir), env=env)\n\n        if produce_compile_commands_json:\n            make = ['bear', '--', 'make']\n        else:\n            make = ['make']\n\n        make_args = ['MAKELEVEL=0', '-j', str(max(os.cpu_count() - 1, 1))]\n\n        subprocess.run(\n            make + make_args,\n            cwd=str(build_dir), check=True)\n\n        if build_contrib or fresh_build or is_outdated:\n            subprocess.run(\n                make + ['-C', 'contrib'] + make_args,\n                cwd=str(build_dir), check=True)\n\n        if run_tests:\n            subprocess.run(\n                make + [\"check-world\"],\n                cwd=str(build_dir),\n                check=True,\n                env=os.environ | {\"MAKELEVEL\": \"0\"},\n            )\n\n        subprocess.run(\n            ['make', 'MAKELEVEL=0', 'install'],\n            cwd=str(build_dir), check=True)\n\n        if build_contrib or fresh_build or is_outdated:\n            subprocess.run(\n                ['make', '-C', 'contrib', 'MAKELEVEL=0', 'install'],\n                cwd=str(build_dir), check=True)\n\n        pg_config = (\n            build_base / 'postgres' / 'install' / 'bin' / 'pg_config'\n        ).resolve()\n        _compile_pgvector(pg_config, build_temp)\n        _compile_edb_stat_statements(pg_config, build_temp)\n\n        with open(postgres_build_stamp, 'w') as f:\n            f.write(source_stamp)\n\n        if produce_compile_commands_json:\n            shutil.copy(\n                build_dir / \"compile_commands.json\",\n                postgres_src / \"compile_commands.json\",\n            )\n\n\ndef _compile_pgvector(pg_config, build_temp):\n    git_rev = _get_git_rev(PGVECTOR_REPO, PGVECTOR_COMMIT)\n\n    pgv_root = (build_temp / 'pgvector').resolve()\n    if not pgv_root.exists():\n        subprocess.run(\n            [\n                'git',\n                'clone',\n                '--recursive',\n                PGVECTOR_REPO,\n                pgv_root,\n            ],\n            check=True\n        )\n    else:\n        subprocess.run(\n            ['git', 'fetch', '--all'],\n            check=True,\n            cwd=pgv_root,\n        )\n\n    subprocess.run(\n        ['git', 'reset', '--hard', git_rev],\n        check=True,\n        cwd=pgv_root,\n    )\n\n    cflags = os.environ.get(\"CFLAGS\", \"\")\n    cflags = f\"{cflags} {' '.join(SAFE_EXT_CFLAGS)} -std=gnu99\"\n\n    subprocess.run(\n        [\n            'make',\n            f'PG_CONFIG={pg_config}',\n        ],\n        cwd=pgv_root,\n        check=True,\n    )\n\n    subprocess.run(\n        [\n            'make',\n            'install',\n            f'PG_CONFIG={pg_config}',\n        ],\n        cwd=pgv_root,\n        check=True,\n    )\n\n\ndef _compile_edb_stat_statements(pg_config, build_temp):\n    subprocess.run(\n        [\n            'make',\n            f'PG_CONFIG={pg_config}',\n        ],\n        cwd=EDBSS_DIR,\n        check=True,\n    )\n\n    subprocess.run(\n        [\n            'make',\n            'install',\n            f'PG_CONFIG={pg_config}',\n        ],\n        cwd=EDBSS_DIR,\n        check=True,\n    )\n\n\ndef _get_env_with_protobuf_c_flags():\n    env = dict(os.environ)\n    cflags = env.get('EDGEDB_BUILD_PROTOBUFC_CFLAGS')\n    ldflags = env.get('EDGEDB_BUILD_PROTOBUFC_LDFLAGS')\n\n    if not (cflags or ldflags) and platform.system() == 'Darwin':\n        try:\n            prefix = pathlib.Path(subprocess.check_output(\n                ['brew', '--prefix', 'protobuf-c'], text=True\n            ).strip())\n        except (FileNotFoundError, subprocess.CalledProcessError):\n            prefix = None\n        else:\n            pc_path = str(prefix / 'lib' / 'pkgconfig')\n            if 'PKG_CONFIG_PATH' in env:\n                env['PKG_CONFIG_PATH'] += f':{pc_path}'\n            else:\n                env['PKG_CONFIG_PATH'] = pc_path\n        try:\n            cflags = subprocess.check_output(\n                ['pkg-config', '--cflags', 'protobuf-c'], text=True, env=env\n            ).strip()\n            ldflags = subprocess.check_output(\n                ['pkg-config', '--libs', 'protobuf-c'], text=True, env=env\n            ).strip()\n        except (FileNotFoundError, subprocess.CalledProcessError):\n            # pkg-config is not installed or cannot find flags with pkg-config\n            if not prefix:\n                prefix = pathlib.Path(\"/opt/local\")\n            cflags = f'-I{prefix / \"include\"!s}'\n            ldflags = f'-L{prefix / \"lib\"!s}'\n\n    if cflags:\n        if 'CPPFLAGS' in env:\n            env['CPPFLAGS'] += f' {cflags}'\n        elif 'CFLAGS' in env:\n            env['CFLAGS'] += f' {cflags}'\n        else:\n            env['CPPFLAGS'] = cflags\n    if ldflags:\n        if 'LDFLAGS' in env:\n            env['LDFLAGS'] += f' {ldflags}'\n        else:\n            env['LDFLAGS'] = ldflags\n    return env\n\n\ndef _compile_libpg_query():\n    dir = (ROOT_PATH / 'edb' / 'pgsql' / 'parser' / 'libpg_query').resolve()\n\n    if not (dir / 'README.md').exists():\n        print('libpg_query submodule has not been initialized, '\n              'run `git submodule update --init --recursive`')\n        exit(1)\n\n    cflags = os.environ.get(\"CFLAGS\", \"\")\n    cflags = f\"{cflags} {' '.join(SAFE_EXT_CFLAGS)} -std=gnu99\"\n\n    env = _get_env_with_protobuf_c_flags()\n    if \"CFLAGS\" in env:\n        env[\"CFLAGS\"] += f' {cflags}'\n    else:\n        env[\"CFLAGS\"] = cflags\n\n    subprocess.run(\n        [\n            'make',\n            'build',\n            '-j',\n            str(max(os.cpu_count() - 1, 1)),\n        ],\n        cwd=str(dir),\n        env=env,\n        check=True,\n    )\n\n\ndef _get_git_rev(repo, ref):\n    output = subprocess.check_output(\n        ['git', 'ls-remote', repo, ref],\n        universal_newlines=True,\n    ).strip()\n\n    if output:\n        rev, _ = output.split()\n        rev = rev.strip()\n    else:\n        rev = ''\n\n    # The name can be a branch or tag, so we attempt to look it up\n    # with ls-remote. If we don't find anything, we assume it's a\n    # commit hash.\n    return rev if rev else ref\n\n\ndef _get_pg_source_stamp():\n    from edb.buildmeta import hash_dirs\n\n    output = subprocess.check_output(\n        ['git', 'submodule', 'status', '--cached', 'postgres'],\n        universal_newlines=True,\n        cwd=ROOT_PATH,\n    )\n    revision, _, _ = output[1:].partition(' ')\n    edbss_dir = EDBSS_DIR.as_posix()\n    edbss_hash = hash_dirs(\n        [(edbss_dir, '.c'), (edbss_dir, '.sql')],\n        extra_files=[\n            EDBSS_DIR / 'Makefile',\n            EDBSS_DIR / 'edb_stat_statements.control',\n        ],\n    )\n    edbss = binascii.hexlify(edbss_hash).decode()\n    stamp_list = [revision, PGVECTOR_COMMIT, edbss]\n    if os.environ.get('EDGEDB_DEBUG'):\n        stamp_list += ['debug']\n    source_stamp = '+'.join(stamp_list)\n    return source_stamp.strip()\n\n\ndef _get_libpg_query_source_stamp():\n    output = subprocess.check_output(\n        ['git', 'submodule', 'status', '--cached',\n         'edb/pgsql/parser/libpg_query'],\n        universal_newlines=True,\n        cwd=ROOT_PATH,\n    )\n    revision, _, _ = output[1:].partition(' ')\n    return revision.strip()\n\n\ndef _compile_cli(build_base, build_temp):\n    rust_root = build_base / 'cli'\n    env = dict(os.environ)\n    env['CARGO_TARGET_DIR'] = str(build_temp / 'rust' / 'cli')\n    env['PSQL_DEFAULT_PATH'] = build_base / 'postgres' / 'install' / 'bin'\n    path = env.get(\"EDGEDBCLI_PATH\")\n    args = [\n        'cargo', 'install',\n        '--verbose', '--verbose',\n        '--bin', 'edgedb',\n        '--root', rust_root,\n        '--features=dev_mode',\n        '--locked',\n        '--debug',\n    ]\n    if path:\n        args.extend([\n            '--path', path,\n        ])\n    else:\n        git_ref = env.get(\"EDGEDBCLI_GIT_REV\") or EDGEDBCLI_COMMIT\n        git_rev = _get_git_rev(EDGEDBCLI_REPO, git_ref)\n        args.extend([\n            '--git', EDGEDBCLI_REPO,\n            '--rev', git_rev,\n        ])\n\n    subprocess.run(\n        args,\n        env=env,\n        check=True,\n    )\n\n    for dest in ('gel', 'edgedb'):\n        cli_dest = ROOT_PATH / 'edb' / 'cli' / dest\n        # Delete the target first, to avoid \"Text file busy\" errors during\n        # the copy if the CLI is currently running.\n        try:\n            cli_dest.unlink()\n        except FileNotFoundError:\n            pass\n\n        shutil.copy(\n            rust_root / 'bin' / 'edgedb',\n            cli_dest,\n        )\n\n\n_PYTHON_ONLY = os.environ.get(\"BUILD_EXT_MODE\", \"both\") == \"skip\"\n\n\nclass build(setuptools_build.build):\n\n    user_options = setuptools_build.build.user_options\n\n    sub_commands = setuptools_build.build.sub_commands if _PYTHON_ONLY else [\n        (\"build_libpg_query\", lambda self: True),\n        *setuptools_build.build.sub_commands,\n        (\"build_metadata\", lambda self: True),\n        (\"build_parsers\", lambda self: True),\n        (\"build_postgres\", lambda self: True),\n        (\"build_cli\", lambda self: True),\n        (\"build_ui\", lambda self: True),\n    ]\n\n\nclass build_metadata(setuptools.Command):\n\n    build_lib: str\n\n    user_options = [\n        ('pg-config=', None, 'path to pg_config to use with this build'),\n        ('runstatedir=', None, 'directory to use for the runtime state'),\n        ('shared-dir=', None, 'directory to use for shared data'),\n        ('version-suffix=', None, 'dot-separated local version suffix'),\n    ]\n\n    def initialize_options(self):\n        self.build_lib = None\n        self.editable_mode = False\n        self.pg_config = None\n        self.runstatedir = None\n        self.shared_dir = None\n        self.version_suffix = None\n\n    def finalize_options(self):\n        self.set_undefined_options(\"build_py\", (\"build_lib\", \"build_lib\"))\n        if self.pg_config is None:\n            self.pg_config = os.environ.get(\"EDGEDB_BUILD_PG_CONFIG\")\n        if self.runstatedir is None:\n            self.runstatedir = os.environ.get(\"EDGEDB_BUILD_RUNSTATEDIR\")\n        if self.shared_dir is None:\n            self.shared_dir = os.environ.get(\"EDGEDB_BUILD_SHARED_DIR\")\n        if self.version_suffix is None:\n            self.version_suffix = os.environ.get(\"EDGEDB_BUILD_VERSION_SUFFIX\")\n\n    def has_build_metadata(self) -> bool:\n        return bool(\n            self.pg_config\n            or self.runstatedir\n            or self.shared_dir\n            or self.version_suffix\n        )\n\n    def get_outputs(self) -> list[str]:\n        if self.has_build_metadata():\n            return [\n                str(pathlib.Path(self.build_lib) / 'edb' / '_buildmeta.py'),\n            ]\n        else:\n            return []\n\n    def run(self, *args, **kwargs):\n        if self.has_build_metadata():\n            _compile_build_meta(\n                self.build_lib,\n                self.distribution.metadata.version,\n                self.pg_config,\n                self.runstatedir,\n                self.shared_dir,\n                self.version_suffix,\n            )\n\n\nclass ci_helper(setuptools.Command):\n\n    description = \"echo specified hash or build info for CI\"\n    user_options = [\n        ('type=', None,\n         'one of: cli, rust, ext, parsers, postgres, libpg_query, bootstrap, '\n         'build_temp, build_lib'),\n    ]\n\n    def run(self):\n        import edb as _edb\n        from edb.buildmeta import hash_dirs, get_cache_src_dirs\n\n        build = self.get_finalized_command('build')\n        pkg_dir = pathlib.Path(_edb.__path__[0])\n\n        if self.type == 'parsers':\n            parser_hash = hash_dirs(\n                [(pkg_dir / 'edgeql/parser/grammar', '.py')],\n                extra_files=[\n                    pkg_dir / 'edgeql-parser/src/keywords.rs',\n                    pkg_dir / 'edgeql-parser/edgeql-parser-python/src/parser.rs'\n                ],\n            )\n            print(binascii.hexlify(parser_hash).decode())\n\n        elif self.type == 'postgres':\n            print(_get_pg_source_stamp())\n\n        elif self.type == 'libpg_query':\n            print(_get_libpg_query_source_stamp())\n\n        elif self.type == 'bootstrap':\n            bootstrap_hash = hash_dirs(\n                get_cache_src_dirs(),\n                extra_files=[\n                    pkg_dir / 'server/bootstrap.py',\n                    pkg_dir / 'buildmeta.py',\n                ],\n            )\n            print(binascii.hexlify(bootstrap_hash).decode())\n\n        elif self.type == 'rust':\n            dirs = []\n            # HACK: For annoying reasons, metapkg invokes setup.py\n            # with an ancient version of Python, and that doesn't have\n            # tomllib.  It doesn't invoke *this* code path, though, so\n            # import it here.\n            import tomllib\n\n            # Read the list of Rust projects from Cargo.toml\n            with open(pkg_dir.parent / 'Cargo.toml', 'rb') as f:\n                root = tomllib.load(f)\n                for member in root['workspace']['members']:\n                    dirs.append(pkg_dir.parent / member)\n            rust_hash = hash_dirs(\n                [(dir, '.rs') for dir in dirs],\n                extra_files=[dir / 'Cargo.toml' for dir in dirs] +\n                  [pkg_dir.parent / 'Cargo.lock'])\n            print(binascii.hexlify(rust_hash).decode())\n\n        elif self.type == 'ext':\n            import gel\n\n            ext_hash = hash_dirs(\n                [\n                    (pkg_dir, '.pyx'),\n                    (pkg_dir, '.pyi'),\n                    (pkg_dir, '.pxd'),\n                    (pkg_dir, '.pxi'),\n                ],\n                # protocol.pyx for tests links to edgedb-python binary\n                extra_data=gel.__version__.encode(),\n            )\n            print(\n                binascii.hexlify(ext_hash).decode() + '-'\n                + _get_libpg_query_source_stamp()\n            )\n\n        elif self.type == 'cli':\n            print(_get_git_rev(EDGEDBCLI_REPO, EDGEDBCLI_COMMIT))\n\n        elif self.type == 'ui':\n            print(_get_git_rev(EDGEDBGUI_REPO, EDGEDBGUI_COMMIT))\n\n        elif self.type == 'build_temp':\n            print(pathlib.Path(build.build_temp).resolve())\n\n        elif self.type == 'build_lib':\n            print(pathlib.Path(build.build_lib).resolve())\n\n        else:\n            raise RuntimeError(\n                f'Illegal --type={self.type}; can only be: '\n                'cli, rust, ext, postgres, libpg_query, bootstrap, parsers,'\n                'build_temp or build_lib'\n            )\n\n    def initialize_options(self):\n        self.type = None\n\n    def finalize_options(self):\n        pass\n\n\nclass build_postgres(setuptools.Command):\n\n    description = \"build postgres\"\n\n    user_options = [\n        ('configure', None, 'run ./configure'),\n        ('build-contrib', None, 'build contrib'),\n        ('fresh-build', None, 'rebuild from scratch'),\n        ('compile-commands', None, 'produce compile-commands.json using bear'),\n        ('run-tests', None, 'run Postgres test suite after building'),\n    ]\n\n    editable_mode: bool\n\n    def initialize_options(self):\n        self.editable_mode = False\n        self.configure = False\n        self.build_contrib = False\n        self.fresh_build = False\n        self.compile_commands = False\n        self.run_tests = False\n\n    def finalize_options(self):\n        pass\n\n    def run(self, *args, **kwargs):\n        if os.environ.get(\"EDGEDB_BUILD_PACKAGE\"):\n            return\n        build = self.get_finalized_command('build')\n        _compile_postgres(\n            pathlib.Path(build.build_base).resolve(),\n            pathlib.Path(build.build_temp).resolve(),\n            force_build=True,\n            fresh_build=self.fresh_build,\n            run_configure=self.configure,\n            build_contrib=self.build_contrib,\n            produce_compile_commands_json=self.compile_commands,\n            run_tests=self.run_tests,\n        )\n\n\nclass build_libpg_query(setuptools.Command):\n\n    description = \"build libpg_query\"\n\n    user_options: list[str] = []\n\n    editable_mode: bool\n\n    def initialize_options(self):\n        self.editable_mode = False\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        _compile_libpg_query()\n\n\nclass build_ext(setuptools_build_ext.build_ext):\n\n    user_options = setuptools_build_ext.build_ext.user_options + [\n        ('cython-annotate', None,\n            'Produce a colorized HTML version of the Cython source.'),\n        ('cython-extra-directives=', None,\n            'Extra Cython compiler directives'),\n    ]\n\n    def initialize_options(self):\n        # initialize_options() may be called multiple times on the\n        # same command object, so make sure not to override previously\n        # set options.\n        if getattr(self, '_initialized', False):\n            return\n\n        super(build_ext, self).initialize_options()\n\n        if os.environ.get('EDGEDB_DEBUG'):\n            self.cython_always = True\n            self.cython_annotate = True\n            self.cython_extra_directives = \"linetrace=True\"\n            self.define = 'PG_DEBUG,CYTHON_TRACE,CYTHON_TRACE_NOGIL'\n            self.debug = True\n        else:\n            self.cython_always = False\n            self.cython_annotate = None\n            self.cython_extra_directives = None\n            self.debug = False\n        self.build_mode = os.environ.get('BUILD_EXT_MODE', 'both')\n\n    def finalize_options(self) -> None:\n        # finalize_options() may be called multiple times on the\n        # same command object, so make sure not to override previously\n        # set options.\n        if getattr(self, '_initialized', False):\n            return\n\n        if self.build_mode not in {'both', 'py-only', 'rust-only', 'skip'}:\n            raise RuntimeError(f'Illegal BUILD_EXT_MODE={self.build_mode}; '\n                               f'can only be \"both\", \"py-only\" or \"skip\".')\n        if self.build_mode not in {'both', 'py-only'}:\n            super(build_ext, self).finalize_options()\n            return\n\n        directives: dict[str, str | bool] = {\n            'language_level': '3'\n        }\n\n        if self.cython_extra_directives:\n            for directive in self.cython_extra_directives.split(','):\n                k, _, v = directive.partition('=')\n                if v.lower() == 'false':\n                    v = False\n                if v.lower() == 'true':\n                    v = True\n\n                directives[k] = v\n\n        self.distribution.ext_modules[:] = Cython.Build.cythonize(\n            self.distribution.ext_modules,\n            compiler_directives=directives,\n            annotate=self.cython_annotate,\n            include_path=[\"edb/server/pgproto/\"])\n\n        super(build_ext, self).finalize_options()\n\n    def run(self):\n        if self.build_mode != 'skip':\n            super().run()\n        else:\n            distutils.log.info(f'Skipping build_ext because '\n                               f'BUILD_EXT_MODE={self.build_mode}')\n\n\nclass build_cli(setuptools.Command):\n\n    description = \"build the EdgeDB CLI\"\n    user_options: list[str] = []\n    editable_mode: bool\n\n    def initialize_options(self):\n        self.editable_mode = False\n\n    def finalize_options(self):\n        pass\n\n    def run(self, *args, **kwargs):\n        if os.environ.get(\"EDGEDB_BUILD_PACKAGE\"):\n            return\n        build = self.get_finalized_command('build')\n        _compile_cli(\n            pathlib.Path(build.build_base).resolve(),\n            pathlib.Path(build.build_temp).resolve(),\n        )\n\n\nclass build_ui(setuptools.Command):\n\n    description = \"build EdgeDB UI\"\n    user_options: list[str] = []\n    editable_mode: bool\n    build_lib: str\n\n    def initialize_options(self):\n        self.editable_mode = False\n        self.build_lib = None\n\n    def finalize_options(self):\n        self.set_undefined_options(\"build_py\", (\"build_lib\", \"build_lib\"))\n\n    def run(self, *args, **kwargs):\n        from edb import buildmeta\n        from edb.common import devmode\n\n        try:\n            buildmeta.get_build_metadata_value(\"SHARED_DATA_DIR\")\n        except buildmeta.MetadataError:\n            # buildmeta path resolution needs this\n            devmode.enable_dev_mode()\n\n        build = self.get_finalized_command('build')\n        self._build_ui(pathlib.Path(build.build_base).resolve())\n\n    def _build_ui(self, build_base: pathlib.Path) -> None:\n        from edb import buildmeta\n\n        git_ref = os.environ.get(\"EDGEDB_UI_GIT_REV\") or EDGEDBGUI_COMMIT\n        git_rev = _get_git_rev(EDGEDBGUI_REPO, git_ref)\n\n        ui_root = build_base / 'edgedb-studio'\n        if not ui_root.exists():\n            subprocess.run(\n                [\n                    'git',\n                    'clone',\n                    '--recursive',\n                    EDGEDBGUI_REPO,\n                    ui_root,\n                ],\n                check=True\n            )\n        else:\n            subprocess.run(\n                ['git', 'fetch', '--all'],\n                check=True,\n                cwd=ui_root,\n            )\n\n        subprocess.run(\n            ['git', 'reset', '--hard', git_rev],\n            check=True,\n            cwd=ui_root,\n        )\n\n        dest = buildmeta.get_shared_data_dir_path() / 'ui'\n        if dest.exists():\n            shutil.rmtree(dest)\n\n        # install deps\n        subprocess.run(['yarn'], check=True, cwd=ui_root)\n\n        # run build\n        env = dict(os.environ)\n        # With CI=true (set in GH CI) `yarn build` fails if there are any\n        # warnings. We don't need this check in our build so we're disabling\n        # this behavior.\n        env['CI'] = ''\n        subprocess.run(\n            ['yarn', 'build'],\n            check=True,\n            cwd=ui_root / 'web',\n            env=env\n        )\n\n        shutil.copytree(ui_root / 'web' / 'build', dest)\n\n\nclass build_parsers(setuptools.Command):\n\n    description = \"build and serialize the parser grammar spec\"\n\n    build_lib: str\n    target_root: pathlib.Path\n    editable_mode: bool\n    inplace: bool\n\n    user_options = [\n        ('inplace', None,\n         'ignore build-lib and put compiled parsers into the source directory '\n         'alongside your pure Python modules')]\n\n    def initialize_options(self):\n        self.editable_mode = False\n        self.inplace = None\n        self.build_lib = None\n        self.target_root = None\n\n    def finalize_options(self):\n        self.set_undefined_options(\"build_py\", (\"build_lib\", \"build_lib\"))\n        if self.editable_mode:\n            self.inplace = True\n        if self.inplace:\n            self.target_root = ROOT_PATH\n        else:\n            self.target_root = pathlib.Path(self.build_lib)\n\n    def run(self, *args, **kwargs):\n        # load grammar definitions and build the parser\n        from edb.common import parsing\n        from edb.edgeql.parser import grammar as qlgrammar\n        spec = parsing.load_parser_spec(qlgrammar.start)\n        spec_json = parsing.spec_to_json(spec)\n\n        # prepare destination\n        dst = str(self.target_root / 'edb' / 'edgeql' / 'grammar.bc')\n        os.makedirs(os.path.dirname(dst), exist_ok=True)\n\n        # serialize\n        import edb._edgeql_parser as rust_parser\n        rust_parser.save_spec(spec_json, str(dst))\n\n\nclass build_rust(setuptools_rust.build.build_rust):\n    def run(self):\n        build_ext = self.get_finalized_command(\"build_ext\")\n        if build_ext.build_mode not in {'both', 'rust-only'}:\n            distutils.log.info(\n                f'Skipping build_rust because '\n                f'BUILD_EXT_MODE={build_ext.build_mode}'\n            )\n            return\n        self.plat_name = build_ext.plat_name\n        copy_list = []\n        if not build_ext.inplace:\n            for ext in self.distribution.rust_extensions:\n                # Always build in-place because later stages of the build\n                # may depend on the modules having been built\n                dylib_path = pathlib.Path(\n                    build_ext.get_ext_fullpath(ext.name))\n                build_ext.inplace = True\n                target_path = pathlib.Path(\n                    build_ext.get_ext_fullpath(ext.name))\n                build_ext.inplace = False\n                copy_list.append((dylib_path, target_path))\n\n                # Workaround a bug in setuptools-rust: it uses\n                # shutil.copyfile(), which is not safe w.r.t mmap,\n                # so if the target module has been previously loaded\n                # bad things will happen.\n                if target_path.exists():\n                    target_path.unlink()\n\n                target_path.parent.mkdir(parents=True, exist_ok=True)\n\n        os.environ['CARGO_TARGET_DIR'] = str(\n            pathlib.Path(build_ext.build_temp) / 'rust' / 'extensions',\n        )\n        super().run()\n\n        for src, dst in copy_list:\n            shutil.copyfile(src, dst)\n\n\ndef _version():\n    from edb import buildmeta\n    return buildmeta.get_version_from_scm(ROOT_PATH)\n\n\n_protobuf_c_flags = _get_env_with_protobuf_c_flags()\n_protobuf_c_cflags = shlex.split(_protobuf_c_flags.get(\"CPPFLAGS\", \"\"))\n\n\nsetuptools.setup(\n    version=_version(),\n    cmdclass={\n        'build': build,\n        'build_metadata': build_metadata,\n        'build_ext': build_ext,\n        'build_rust': build_rust,\n        'build_postgres': build_postgres,\n        'build_cli': build_cli,\n        'build_parsers': build_parsers,\n        'build_ui': build_ui,\n        'build_libpg_query': build_libpg_query,\n        'ci_helper': ci_helper,\n    },\n    ext_modules=[\n        setuptools_extension.Extension(\n            \"edb.common.turbo_uuid\",\n            [\"edb/server/pgproto/uuid.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.cache.stmt_cache\",\n            [\"edb/server/cache/stmt_cache.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.protocol.protocol\",\n            [\"edb/protocol/protocol.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.pgproto.pgproto\",\n            [\"edb/server/pgproto/pgproto.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.dbview.dbview\",\n            [\"edb/server/dbview/dbview.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.binary\",\n            [\"edb/server/protocol/binary.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.pg_ext\",\n            [\"edb/server/protocol/pg_ext.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.args_ser\",\n            [\"edb/server/protocol/args_ser.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.execute\",\n            [\"edb/server/protocol/execute.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.auth_helpers\",\n            [\"edb/server/protocol/auth_helpers.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.notebook_ext\",\n            [\"edb/server/protocol/notebook_ext.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.ui_ext\",\n            [\"edb/server/protocol/ui_ext.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.edgeql_ext\",\n            [\"edb/server/protocol/edgeql_ext.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.frontend\",\n            [\"edb/server/protocol/frontend.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.protocol.protocol\",\n            [\"edb/server/protocol/protocol.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n        setuptools_extension.Extension(\n            \"edb.server.pgcon.pgcon\",\n            [\"edb/server/pgcon/pgcon.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.graphql.extension\",\n            [\"edb/graphql/extension.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.pgsql.parser.parser\",\n            [\"edb/pgsql/parser/parser.pyx\"],\n            extra_compile_args=EXT_CFLAGS + _protobuf_c_cflags,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n            library_dirs=EXT_LIB_DIRS,\n            libraries=['pg_query']\n        ),\n\n        setuptools_extension.Extension(\n            \"edb.server.compiler.rpc\",\n            [\"edb/server/compiler/rpc.pyx\"],\n            extra_compile_args=EXT_CFLAGS,\n            extra_link_args=EXT_LDFLAGS,\n            include_dirs=EXT_INC_DIRS,\n        ),\n    ],\n    rust_extensions=[\n        setuptools_rust.RustExtension(\n            \"edb._edgeql_parser\",\n            path=\"edb/edgeql-parser/edgeql-parser-python/Cargo.toml\",\n            features=[\"python_extension\"],\n            binding=setuptools_rust.Binding.PyO3,\n        ),\n        setuptools_rust.RustExtension(\n            \"edb._graphql_rewrite\",\n            path=\"edb/graphql-rewrite/Cargo.toml\",\n            features=[\"python_extension\"],\n            binding=setuptools_rust.Binding.PyO3,\n        ),\n        setuptools_rust.RustExtension(\n            \"edb.server._rust_native\",\n            path=\"edb/server/_rust_native/Cargo.toml\",\n            features=[\"python_extension\"],\n            binding=setuptools_rust.Binding.PyO3,\n        ),\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}